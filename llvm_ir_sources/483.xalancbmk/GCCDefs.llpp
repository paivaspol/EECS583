; ModuleID = '../../SPEC_CPU2006v1.1/benchspec/CPU2006/483.xalancbmk/src/GCCDefs.cpp'
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.10.0"

; Function Attrs: nounwind optsize readonly ssp uwtable
define i32 @_Z7stricmpPKcS0_(i8* nocapture readonly %str1, i8* nocapture readonly %str2) #0 {
  tail call void @llvm.dbg.value(metadata i8* %str1, i64 0, metadata !19, metadata !34), !dbg !35
  tail call void @llvm.dbg.value(metadata i8* %str2, i64 0, metadata !20, metadata !34), !dbg !36
  %1 = tail call i32 @strcasecmp(i8* %str1, i8* %str2) #3, !dbg !37
  ret i32 %1, !dbg !38
}

; Function Attrs: nounwind optsize readonly
declare i32 @strcasecmp(i8* nocapture, i8* nocapture) #1

; Function Attrs: nounwind optsize readonly ssp uwtable
define i32 @_Z8strnicmpPKcS0_j(i8* nocapture readonly %str1, i8* nocapture readonly %str2, i32 %count) #0 {
  tail call void @llvm.dbg.value(metadata i8* %str1, i64 0, metadata !27, metadata !34), !dbg !39
  tail call void @llvm.dbg.value(metadata i8* %str2, i64 0, metadata !28, metadata !34), !dbg !40
  tail call void @llvm.dbg.value(metadata i32 %count, i64 0, metadata !29, metadata !34), !dbg !41
  %1 = icmp eq i32 %count, 0, !dbg !42
  br i1 %1, label %5, label %2, !dbg !44

; <label>:2                                       ; preds = %0
  %3 = zext i32 %count to i64, !dbg !45
  %4 = tail call i32 @strncasecmp(i8* %str1, i8* %str2, i64 %3) #3, !dbg !46
  br label %5, !dbg !47

; <label>:5                                       ; preds = %0, %2
  %.0 = phi i32 [ %4, %2 ], [ 0, %0 ]
  ret i32 %.0, !dbg !48
}

; Function Attrs: nounwind optsize readonly
declare i32 @strncasecmp(i8* nocapture, i8* nocapture, i64) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #2

attributes #0 = { nounwind optsize readonly ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind optsize readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { optsize }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!30, !31, !32}
!llvm.ident = !{!33}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1, producer: "Apple LLVM version 7.0.0 (clang-700.1.76)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !9, globals: !2, imports: !2)
!1 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/483.xalancbmk/src/GCCDefs.cpp", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!2 = !{}
!3 = !{!4}
!4 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !5, line: 30, baseType: !6)
!5 = !DIFile(filename: "/usr/include/sys/_types/_size_t.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!6 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_size_t", file: !7, line: 92, baseType: !8)
!7 = !DIFile(filename: "/usr/include/i386/_types.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!8 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!9 = !{!10, !21}
!10 = !DISubprogram(name: "stricmp", linkageName: "_Z7stricmpPKcS0_", scope: !1, file: !1, line: 96, type: !11, isLocal: false, isDefinition: true, scopeLine: 97, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*)* @_Z7stricmpPKcS0_, variables: !18)
!11 = !DISubroutineType(types: !12)
!12 = !{!13, !14, !14}
!13 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15)
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64, align: 64)
!16 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17)
!17 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!18 = !{!19, !20}
!19 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "str1", arg: 1, scope: !10, file: !1, line: 96, type: !14)
!20 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "str2", arg: 2, scope: !10, file: !1, line: 96, type: !14)
!21 = !DISubprogram(name: "strnicmp", linkageName: "_Z8strnicmpPKcS0_j", scope: !1, file: !1, line: 101, type: !22, isLocal: false, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*, i8*, i32)* @_Z8strnicmpPKcS0_j, variables: !26)
!22 = !DISubroutineType(types: !23)
!23 = !{!13, !14, !14, !24}
!24 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !25)
!25 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!26 = !{!27, !28, !29}
!27 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "str1", arg: 1, scope: !21, file: !1, line: 101, type: !14)
!28 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "str2", arg: 2, scope: !21, file: !1, line: 101, type: !14)
!29 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "count", arg: 3, scope: !21, file: !1, line: 101, type: !24)
!30 = !{i32 2, !"Dwarf Version", i32 2}
!31 = !{i32 2, !"Debug Info Version", i32 700000003}
!32 = !{i32 1, !"PIC Level", i32 2}
!33 = !{!"Apple LLVM version 7.0.0 (clang-700.1.76)"}
!34 = !DIExpression()
!35 = !DILocation(line: 96, column: 31, scope: !10)
!36 = !DILocation(line: 96, column: 56, scope: !10)
!37 = !DILocation(line: 98, column: 9, scope: !10)
!38 = !DILocation(line: 98, column: 2, scope: !10)
!39 = !DILocation(line: 101, column: 32, scope: !21)
!40 = !DILocation(line: 101, column: 57, scope: !21)
!41 = !DILocation(line: 101, column: 82, scope: !21)
!42 = !DILocation(line: 103, column: 12, scope: !43)
!43 = distinct !DILexicalBlock(scope: !21, file: !1, line: 103, column: 6)
!44 = !DILocation(line: 103, column: 6, scope: !21)
!45 = !DILocation(line: 106, column: 42, scope: !21)
!46 = !DILocation(line: 106, column: 9, scope: !21)
!47 = !DILocation(line: 106, column: 2, scope: !21)
!48 = !DILocation(line: 107, column: 1, scope: !21)
