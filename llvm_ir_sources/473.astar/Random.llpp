; ModuleID = '../../SPEC_CPU2006v1.1/benchspec/CPU2006/473.astar/src/Random.cpp'
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.10.0"

@_ZL5y1rnd = internal unnamed_addr global i32 1023, align 4
@_ZL5y2rnd = internal unnamed_addr global i32 11, align 4
@_ZL5y3rnd = internal unnamed_addr global i32 3007, align 4

; Function Attrs: nounwind optsize ssp uwtable
define float @_Z8myrandomv() #0 {
  %1 = load i32* @_ZL5y1rnd, align 4, !dbg !58, !tbaa !59
  %2 = mul nsw i32 %1, 171, !dbg !63
  %3 = srem i32 %2, 30269, !dbg !64
  store i32 %3, i32* @_ZL5y1rnd, align 4, !dbg !65, !tbaa !59
  %4 = load i32* @_ZL5y2rnd, align 4, !dbg !66, !tbaa !59
  %5 = mul nsw i32 %4, 172, !dbg !67
  %6 = srem i32 %5, 30307, !dbg !68
  store i32 %6, i32* @_ZL5y2rnd, align 4, !dbg !69, !tbaa !59
  %7 = load i32* @_ZL5y3rnd, align 4, !dbg !70, !tbaa !59
  %8 = mul nsw i32 %7, 170, !dbg !71
  %9 = srem i32 %8, 30323, !dbg !72
  store i32 %9, i32* @_ZL5y3rnd, align 4, !dbg !73, !tbaa !59
  %10 = sitofp i32 %3 to float, !dbg !74
  tail call void @llvm.dbg.value(metadata float %10, i64 0, metadata !16, metadata !75), !dbg !76
  %11 = fmul float %10, 0x3F01522A20000000, !dbg !77
  tail call void @llvm.dbg.value(metadata float %11, i64 0, metadata !16, metadata !75), !dbg !76
  %12 = sitofp i32 %6 to float, !dbg !78
  tail call void @llvm.dbg.value(metadata float %12, i64 0, metadata !17, metadata !75), !dbg !79
  %13 = fmul float %12, 0x3F014C9AE0000000, !dbg !80
  tail call void @llvm.dbg.value(metadata float %13, i64 0, metadata !17, metadata !75), !dbg !79
  %14 = sitofp i32 %9 to float, !dbg !81
  tail call void @llvm.dbg.value(metadata float %14, i64 0, metadata !18, metadata !75), !dbg !82
  %15 = fmul float %14, 0x3F014A44A0000000, !dbg !83
  tail call void @llvm.dbg.value(metadata float %15, i64 0, metadata !18, metadata !75), !dbg !82
  %16 = fadd float %11, %13, !dbg !84
  %17 = fadd float %15, %16, !dbg !85
  %18 = fptosi float %17 to i32, !dbg !86
  %19 = sitofp i32 %18 to float, !dbg !87
  %20 = fsub float %17, %19, !dbg !88
  ret float %20, !dbg !89
}

; Function Attrs: nounwind optsize ssp uwtable
define float @_Z8myrandomff(float %lo, float %hi) #0 {
  tail call void @llvm.dbg.value(metadata float %lo, i64 0, metadata !23, metadata !75), !dbg !90
  tail call void @llvm.dbg.value(metadata float %hi, i64 0, metadata !24, metadata !75), !dbg !91
  %1 = fsub float %hi, %lo, !dbg !92
  %2 = tail call float @_Z8myrandomv() #2, !dbg !93
  %3 = fmul float %1, %2, !dbg !94
  %4 = fadd float %3, %lo, !dbg !95
  ret float %4, !dbg !96
}

; Function Attrs: nounwind optsize ssp uwtable
define i32 @_Z8myrandomii(i32 %lo, i32 %hi) #0 {
  tail call void @llvm.dbg.value(metadata i32 %lo, i64 0, metadata !29, metadata !75), !dbg !97
  tail call void @llvm.dbg.value(metadata i32 %hi, i64 0, metadata !30, metadata !75), !dbg !98
  %1 = sub i32 1, %lo, !dbg !99
  %2 = add i32 %1, %hi, !dbg !100
  %3 = sitofp i32 %2 to float, !dbg !101
  %4 = tail call float @_Z8myrandomv() #2, !dbg !102
  %5 = fmul float %3, %4, !dbg !103
  %6 = fptosi float %5 to i32, !dbg !104
  %7 = add nsw i32 %6, %lo, !dbg !105
  ret i32 %7, !dbg !106
}

; Function Attrs: nounwind optsize ssp uwtable
define i32 @_Z7random1i(i32 %max) #0 {
  tail call void @llvm.dbg.value(metadata i32 %max, i64 0, metadata !35, metadata !75), !dbg !107
  %1 = tail call float @_Z8myrandomv() #2, !dbg !108
  %2 = sitofp i32 %max to float, !dbg !109
  %3 = fmul float %2, %1, !dbg !110
  %4 = fptosi float %3 to i32, !dbg !111
  ret i32 %4, !dbg !112
}

; Function Attrs: nounwind optsize ssp uwtable
define void @_Z10initrandomv() #0 {
  store i32 1023, i32* @_ZL5y1rnd, align 4, !dbg !113, !tbaa !59
  store i32 11, i32* @_ZL5y2rnd, align 4, !dbg !114, !tbaa !59
  store i32 3007, i32* @_ZL5y3rnd, align 4, !dbg !115, !tbaa !59
  ret void, !dbg !116
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind optsize ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { optsize }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!54, !55, !56}
!llvm.ident = !{!57}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1, producer: "Apple LLVM version 7.0.0 (clang-700.1.76)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !11, globals: !39, imports: !2)
!1 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/473.astar/src/Random.cpp", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!2 = !{}
!3 = !{!4, !5, !8, !10}
!4 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!5 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !6, line: 30, baseType: !7)
!6 = !DIFile(filename: "/usr/include/sys/_types/_int32_t.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!7 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "i32", file: !9, line: 28, baseType: !5)
!9 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/473.astar/src/Types.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "rnumt", file: !9, line: 57, baseType: !4)
!11 = !{!12, !19, !25, !31, !36}
!12 = !DISubprogram(name: "myrandom", linkageName: "_Z8myrandomv", scope: !1, file: !1, line: 20, type: !13, isLocal: false, isDefinition: true, scopeLine: 21, flags: DIFlagPrototyped, isOptimized: true, function: float ()* @_Z8myrandomv, variables: !15)
!13 = !DISubroutineType(types: !14)
!14 = !{!10}
!15 = !{!16, !17, !18}
!16 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x1", scope: !12, file: !1, line: 22, type: !10)
!17 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x2", scope: !12, file: !1, line: 22, type: !10)
!18 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x3", scope: !12, file: !1, line: 22, type: !10)
!19 = !DISubprogram(name: "myrandom", linkageName: "_Z8myrandomff", scope: !1, file: !1, line: 44, type: !20, isLocal: false, isDefinition: true, scopeLine: 45, flags: DIFlagPrototyped, isOptimized: true, function: float (float, float)* @_Z8myrandomff, variables: !22)
!20 = !DISubroutineType(types: !21)
!21 = !{!10, !10, !10}
!22 = !{!23, !24}
!23 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lo", arg: 1, scope: !19, file: !1, line: 44, type: !10)
!24 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "hi", arg: 2, scope: !19, file: !1, line: 44, type: !10)
!25 = !DISubprogram(name: "myrandom", linkageName: "_Z8myrandomii", scope: !1, file: !1, line: 49, type: !26, isLocal: false, isDefinition: true, scopeLine: 50, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32, i32)* @_Z8myrandomii, variables: !28)
!26 = !DISubroutineType(types: !27)
!27 = !{!8, !8, !8}
!28 = !{!29, !30}
!29 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lo", arg: 1, scope: !25, file: !1, line: 49, type: !8)
!30 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "hi", arg: 2, scope: !25, file: !1, line: 49, type: !8)
!31 = !DISubprogram(name: "random1", linkageName: "_Z7random1i", scope: !1, file: !1, line: 54, type: !32, isLocal: false, isDefinition: true, scopeLine: 55, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32)* @_Z7random1i, variables: !34)
!32 = !DISubroutineType(types: !33)
!33 = !{!8, !8}
!34 = !{!35}
!35 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "max", arg: 1, scope: !31, file: !1, line: 54, type: !8)
!36 = !DISubprogram(name: "initrandom", linkageName: "_Z10initrandomv", scope: !1, file: !1, line: 59, type: !37, isLocal: false, isDefinition: true, scopeLine: 60, flags: DIFlagPrototyped, isOptimized: true, function: void ()* @_Z10initrandomv, variables: !2)
!37 = !DISubroutineType(types: !38)
!38 = !{null}
!39 = !{!40, !42, !43, !44, !45, !46, !47, !49, !50, !51, !52, !53}
!40 = !DIGlobalVariable(name: "k1rnd", scope: !0, file: !1, line: 12, type: !41, isLocal: true, isDefinition: true, variable: i32 171)
!41 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8)
!42 = !DIGlobalVariable(name: "m1rnd", scope: !0, file: !1, line: 6, type: !41, isLocal: true, isDefinition: true, variable: i32 30269)
!43 = !DIGlobalVariable(name: "k2rnd", scope: !0, file: !1, line: 13, type: !41, isLocal: true, isDefinition: true, variable: i32 172)
!44 = !DIGlobalVariable(name: "m2rnd", scope: !0, file: !1, line: 7, type: !41, isLocal: true, isDefinition: true, variable: i32 30307)
!45 = !DIGlobalVariable(name: "k3rnd", scope: !0, file: !1, line: 14, type: !41, isLocal: true, isDefinition: true, variable: i32 170)
!46 = !DIGlobalVariable(name: "m3rnd", scope: !0, file: !1, line: 8, type: !41, isLocal: true, isDefinition: true, variable: i32 30323)
!47 = !DIGlobalVariable(name: "invm1rnd", scope: !0, file: !1, line: 9, type: !48, isLocal: true, isDefinition: true, variable: float 0x3F01522A20000000)
!48 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!49 = !DIGlobalVariable(name: "invm2rnd", scope: !0, file: !1, line: 10, type: !48, isLocal: true, isDefinition: true, variable: float 0x3F014C9AE0000000)
!50 = !DIGlobalVariable(name: "invm3rnd", scope: !0, file: !1, line: 11, type: !48, isLocal: true, isDefinition: true, variable: float 0x3F014A44A0000000)
!51 = !DIGlobalVariable(name: "y1rnd", linkageName: "_ZL5y1rnd", scope: !0, file: !1, line: 16, type: !8, isLocal: true, isDefinition: true, variable: i32* @_ZL5y1rnd)
!52 = !DIGlobalVariable(name: "y2rnd", linkageName: "_ZL5y2rnd", scope: !0, file: !1, line: 17, type: !8, isLocal: true, isDefinition: true, variable: i32* @_ZL5y2rnd)
!53 = !DIGlobalVariable(name: "y3rnd", linkageName: "_ZL5y3rnd", scope: !0, file: !1, line: 18, type: !8, isLocal: true, isDefinition: true, variable: i32* @_ZL5y3rnd)
!54 = !{i32 2, !"Dwarf Version", i32 2}
!55 = !{i32 2, !"Debug Info Version", i32 700000003}
!56 = !{i32 1, !"PIC Level", i32 2}
!57 = !{!"Apple LLVM version 7.0.0 (clang-700.1.76)"}
!58 = !DILocation(line: 24, column: 16, scope: !12)
!59 = !{!60, !60, i64 0}
!60 = !{!"int", !61, i64 0}
!61 = !{!"omnipotent char", !62, i64 0}
!62 = !{!"Simple C/C++ TBAA"}
!63 = !DILocation(line: 24, column: 15, scope: !12)
!64 = !DILocation(line: 24, column: 23, scope: !12)
!65 = !DILocation(line: 24, column: 8, scope: !12)
!66 = !DILocation(line: 25, column: 16, scope: !12)
!67 = !DILocation(line: 25, column: 15, scope: !12)
!68 = !DILocation(line: 25, column: 23, scope: !12)
!69 = !DILocation(line: 25, column: 8, scope: !12)
!70 = !DILocation(line: 26, column: 16, scope: !12)
!71 = !DILocation(line: 26, column: 15, scope: !12)
!72 = !DILocation(line: 26, column: 23, scope: !12)
!73 = !DILocation(line: 26, column: 8, scope: !12)
!74 = !DILocation(line: 28, column: 13, scope: !12)
!75 = !DIExpression()
!76 = !DILocation(line: 22, column: 9, scope: !12)
!77 = !DILocation(line: 29, column: 5, scope: !12)
!78 = !DILocation(line: 31, column: 13, scope: !12)
!79 = !DILocation(line: 22, column: 12, scope: !12)
!80 = !DILocation(line: 32, column: 5, scope: !12)
!81 = !DILocation(line: 34, column: 13, scope: !12)
!82 = !DILocation(line: 22, column: 15, scope: !12)
!83 = !DILocation(line: 35, column: 5, scope: !12)
!84 = !DILocation(line: 38, column: 13, scope: !12)
!85 = !DILocation(line: 38, column: 16, scope: !12)
!86 = !DILocation(line: 38, column: 29, scope: !12)
!87 = !DILocation(line: 38, column: 21, scope: !12)
!88 = !DILocation(line: 38, column: 20, scope: !12)
!89 = !DILocation(line: 38, column: 3, scope: !12)
!90 = !DILocation(line: 44, column: 22, scope: !19)
!91 = !DILocation(line: 44, column: 32, scope: !19)
!92 = !DILocation(line: 46, column: 13, scope: !19)
!93 = !DILocation(line: 46, column: 18, scope: !19)
!94 = !DILocation(line: 46, column: 17, scope: !19)
!95 = !DILocation(line: 46, column: 28, scope: !19)
!96 = !DILocation(line: 46, column: 3, scope: !19)
!97 = !DILocation(line: 49, column: 18, scope: !25)
!98 = !DILocation(line: 49, column: 26, scope: !25)
!99 = !DILocation(line: 51, column: 19, scope: !25)
!100 = !DILocation(line: 51, column: 22, scope: !25)
!101 = !DILocation(line: 51, column: 16, scope: !25)
!102 = !DILocation(line: 51, column: 26, scope: !25)
!103 = !DILocation(line: 51, column: 25, scope: !25)
!104 = !DILocation(line: 51, column: 15, scope: !25)
!105 = !DILocation(line: 51, column: 37, scope: !25)
!106 = !DILocation(line: 51, column: 3, scope: !25)
!107 = !DILocation(line: 54, column: 17, scope: !31)
!108 = !DILocation(line: 56, column: 16, scope: !31)
!109 = !DILocation(line: 56, column: 35, scope: !31)
!110 = !DILocation(line: 56, column: 26, scope: !31)
!111 = !DILocation(line: 56, column: 15, scope: !31)
!112 = !DILocation(line: 56, column: 3, scope: !31)
!113 = !DILocation(line: 61, column: 8, scope: !36)
!114 = !DILocation(line: 62, column: 8, scope: !36)
!115 = !DILocation(line: 63, column: 8, scope: !36)
!116 = !DILocation(line: 64, column: 1, scope: !36)
