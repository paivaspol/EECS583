; ModuleID = '../../SPEC_CPU2006v1.1/benchspec/CPU2006/473.astar/src/Places_.cpp'
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.10.0"

%struct.levelplacet = type { i16, i16, float, float, float }
%class.wayobj = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, float, %struct.createwaymnginfot, %struct.createwayinfot, [4 x i8], i16*, %struct.waymapcellt*, i32*, i32*, i32, i32, i8, [3 x i8], i32, i16, i16, [4 x i8] }>
%struct.createwaymnginfot = type { float, float, float, float, i32, i32, float, float }
%struct.createwayinfot = type <{ %class.rvectort, %class.rvectort, i8, [3 x i8] }>
%class.rvectort = type { float, float, float }
%struct.waymapcellt = type { i16, i16 }
%class.flexarray = type { %struct.levelplacet*, i32, i32 }

; Function Attrs: optsize ssp uwtable
define noalias %struct.levelplacet* @_ZN6wayobj14findfreepointsE8rvectortiRi(%class.wayobj* %this, <2 x float> %startp.coerce0, float %startp.coerce1, i32 %minpointqu, i32* nocapture dereferenceable(4) %pointqu) #0 align 2 {
  %startx = alloca i32, align 4
  %starty = alloca i32, align 4
  %contour = alloca %class.flexarray, align 8
  %place = alloca %struct.levelplacet, align 4
  tail call void @llvm.dbg.value(metadata <2 x float> %startp.coerce0, i64 0, metadata !308, metadata !391), !dbg !392
  tail call void @llvm.dbg.value(metadata float %startp.coerce1, i64 0, metadata !308, metadata !393), !dbg !392
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !306, metadata !394), !dbg !395
  tail call void @llvm.dbg.declare(metadata %class.rvectort* undef, metadata !308, metadata !394), !dbg !392
  tail call void @llvm.dbg.value(metadata i32 %minpointqu, i64 0, metadata !309, metadata !394), !dbg !396
  tail call void @llvm.dbg.value(metadata i32* %pointqu, i64 0, metadata !310, metadata !394), !dbg !397
  %1 = extractelement <2 x float> %startp.coerce0, i32 0, !dbg !398
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !335, metadata !394), !dbg !399
  tail call void @llvm.dbg.value(metadata float %1, i64 0, metadata !336, metadata !394), !dbg !401
  %2 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 9, !dbg !402
  %3 = load float* %2, align 4, !dbg !402, !tbaa !403
  %4 = fmul float %1, %3, !dbg !415
  %5 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 10, !dbg !416
  %6 = load float* %5, align 4, !dbg !416, !tbaa !417
  %7 = fadd float %4, %6, !dbg !418
  %8 = fptosi float %7 to i32, !dbg !419
  tail call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !311, metadata !394), !dbg !420
  store i32 %8, i32* %startx, align 4, !dbg !421, !tbaa !422
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !339, metadata !394), !dbg !423
  tail call void @llvm.dbg.value(metadata float %startp.coerce1, i64 0, metadata !340, metadata !394), !dbg !425
  %9 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 11, !dbg !426
  %10 = load float* %9, align 4, !dbg !426, !tbaa !427
  %11 = fmul float %10, %startp.coerce1, !dbg !428
  %12 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 12, !dbg !429
  %13 = load float* %12, align 4, !dbg !429, !tbaa !430
  %14 = fadd float %11, %13, !dbg !431
  %15 = fptosi float %14 to i32, !dbg !432
  tail call void @llvm.dbg.value(metadata i32 %15, i64 0, metadata !312, metadata !394), !dbg !433
  store i32 %15, i32* %starty, align 4, !dbg !434, !tbaa !422
  tail call void @llvm.dbg.value(metadata i32* %startx, i64 0, metadata !311, metadata !394), !dbg !420
  %16 = tail call zeroext i1 @_ZN6wayobj5ismapEii(%class.wayobj* %this, i32 %8, i32 %15) #7, !dbg !435
  br i1 %16, label %24, label %17, !dbg !437

; <label>:17                                      ; preds = %0
  %18 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 7, !dbg !438
  %19 = load i32* %18, align 4, !dbg !438, !tbaa !440
  %20 = ashr i32 %19, 1, !dbg !441
  tail call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !311, metadata !394), !dbg !420
  store i32 %20, i32* %startx, align 4, !dbg !442, !tbaa !422
  %21 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 8, !dbg !443
  %22 = load i32* %21, align 4, !dbg !443, !tbaa !444
  %23 = ashr i32 %22, 1, !dbg !445
  tail call void @llvm.dbg.value(metadata i32 %23, i64 0, metadata !312, metadata !394), !dbg !433
  store i32 %23, i32* %starty, align 4, !dbg !446, !tbaa !422
  br label %24, !dbg !447

; <label>:24                                      ; preds = %17, %0
  %25 = phi i32 [ %23, %17 ], [ %15, %0 ]
  %26 = phi i32 [ %20, %17 ], [ %8, %0 ]
  tail call void @llvm.dbg.value(metadata i32* %startx, i64 0, metadata !311, metadata !394), !dbg !420
  tail call void @llvm.dbg.value(metadata i32* %starty, i64 0, metadata !312, metadata !394), !dbg !433
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !343, metadata !394), !dbg !448
  tail call void @llvm.dbg.value(metadata i32 %26, i64 0, metadata !344, metadata !394), !dbg !451
  tail call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !345, metadata !394), !dbg !452
  %27 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 2, !dbg !453
  %28 = load i32* %27, align 4, !dbg !453, !tbaa !454
  %29 = shl i32 %25, %28, !dbg !455
  %30 = or i32 %29, %26, !dbg !456
  %31 = sext i32 %30 to i64, !dbg !457
  %32 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 17, !dbg !457
  %33 = load i16** %32, align 8, !dbg !457, !tbaa !458
  %34 = getelementptr inbounds i16* %33, i64 %31, !dbg !457
  %35 = load i16* %34, align 2, !dbg !459, !tbaa !460
  %36 = icmp eq i16 %35, 0, !dbg !461
  br i1 %36, label %39, label %37, !dbg !462

; <label>:37                                      ; preds = %24
  tail call void @llvm.dbg.value(metadata i32* %startx, i64 0, metadata !311, metadata !394), !dbg !420
  tail call void @llvm.dbg.value(metadata i32* %starty, i64 0, metadata !312, metadata !394), !dbg !433
  tail call void @llvm.dbg.value(metadata i32* %startx, i64 0, metadata !311, metadata !394), !dbg !420
  tail call void @llvm.dbg.value(metadata i32* %starty, i64 0, metadata !312, metadata !394), !dbg !433
  %38 = call zeroext i1 @_ZN6wayobj13findfreepointEiiRiS0_(%class.wayobj* %this, i32 %26, i32 %25, i32* dereferenceable(4) %startx, i32* dereferenceable(4) %starty) #7, !dbg !463
  br i1 %38, label %._crit_edge14, label %198, !dbg !465

._crit_edge14:                                    ; preds = %37
  %.pre = load i32* %startx, align 4, !dbg !466, !tbaa !422
  %.pre15 = load i32* %starty, align 4, !dbg !467, !tbaa !422
  br label %39, !dbg !465

; <label>:39                                      ; preds = %._crit_edge14, %24
  %40 = phi i32 [ %.pre15, %._crit_edge14 ], [ %25, %24 ]
  %41 = phi i32 [ %.pre, %._crit_edge14 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i32* %startx, i64 0, metadata !311, metadata !394), !dbg !420
  call void @llvm.dbg.value(metadata i32* %starty, i64 0, metadata !312, metadata !394), !dbg !433
  %42 = call zeroext i1 @_ZN6wayobj4fillEiiii(%class.wayobj* %this, i32 %41, i32 %40, i32 0, i32 0) #7, !dbg !468
  %43 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 27, !dbg !469
  %44 = load i16* %43, align 2, !dbg !469, !tbaa !470
  call void @llvm.dbg.value(metadata i16 %44, i64 0, metadata !317, metadata !394), !dbg !471
  %45 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 7, !dbg !472
  %46 = load i32* %45, align 4, !dbg !472, !tbaa !440
  %47 = mul nsw i32 %46, 10, !dbg !473
  call void @llvm.dbg.value(metadata %class.flexarray* %contour, i64 0, metadata !313, metadata !394), !dbg !474
  call void @llvm.dbg.value(metadata %class.flexarray* %contour, i64 0, metadata !356, metadata !394) #1, !dbg !475
  call void @llvm.dbg.value(metadata i32 %47, i64 0, metadata !358, metadata !394) #1, !dbg !477
  %48 = getelementptr inbounds %class.flexarray* %contour, i64 0, i32 2, !dbg !478
  store i32 %47, i32* %48, align 4, !dbg !479, !tbaa !480
  %49 = getelementptr inbounds %class.flexarray* %contour, i64 0, i32 1, !dbg !482
  store i32 0, i32* %49, align 8, !dbg !483, !tbaa !484
  %50 = mul i32 %46, 160, !dbg !485
  call void @llvm.dbg.value(metadata i32 %50, i64 0, metadata !364, metadata !394) #1, !dbg !486
  call void @llvm.dbg.value(metadata i32 16, i64 0, metadata !365, metadata !394) #1, !dbg !488
  %51 = sext i32 %50 to i64, !dbg !489
  %52 = call i8* @malloc(i64 %51) #8, !dbg !490
  %53 = bitcast %class.flexarray* %contour to i8**, !dbg !491
  store i8* %52, i8** %53, align 8, !dbg !491, !tbaa !492
  %54 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 8, !dbg !493
  %55 = load i32* %54, align 4, !dbg !493, !tbaa !444
  call void @llvm.dbg.value(metadata i32 %55, i64 0, metadata !319, metadata !394), !dbg !494
  call void @llvm.dbg.value(metadata i32 7, i64 0, metadata !314, metadata !394), !dbg !495
  %56 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 4, !dbg !496
  %57 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 3, !dbg !500
  %58 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 18, !dbg !503
  %59 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 22, !dbg !506
  %60 = getelementptr inbounds %struct.levelplacet* %place, i64 0, i32 0, !dbg !511
  %61 = getelementptr inbounds %struct.levelplacet* %place, i64 0, i32 1, !dbg !512
  %62 = getelementptr inbounds %struct.levelplacet* %place, i64 0, i32 4, !dbg !513
  %.pre16 = load i32* %56, align 4, !dbg !496, !tbaa !514
  br label %63, !dbg !515

; <label>:63                                      ; preds = %135, %39
  %64 = phi i32 [ %.pre16, %39 ], [ %137, %135 ], !dbg !474
  %minneighbourcoef.0 = phi i32 [ 7, %39 ], [ %138, %135 ]
  call void @llvm.dbg.value(metadata %class.flexarray* %contour, i64 0, metadata !313, metadata !394), !dbg !474
  tail call void @llvm.dbg.value(metadata %class.flexarray* %contour, i64 0, metadata !368, metadata !394), !dbg !516
  store i32 0, i32* %49, align 8, !dbg !518, !tbaa !484
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !323, metadata !394), !dbg !519
  %65 = icmp sgt i32 %64, 1, !dbg !520
  br i1 %65, label %.preheader, label %135, !dbg !521

.preheader:                                       ; preds = %63, %._crit_edge11
  %y.012 = phi i32 [ %132, %._crit_edge11 ], [ 1, %63 ]
  %66 = load i32* %57, align 4, !dbg !500, !tbaa !522
  %67 = icmp sgt i32 %66, 1, !dbg !523
  br i1 %67, label %.lr.ph10, label %._crit_edge11, !dbg !524

.lr.ph10:                                         ; preds = %.preheader, %128
  %68 = phi i32 [ %129, %128 ], [ %66, %.preheader ]
  %x.09 = phi i32 [ %130, %128 ], [ 1, %.preheader ]
  %69 = load i32* %27, align 4, !dbg !525, !tbaa !454
  %70 = shl i32 %y.012, %69, !dbg !526
  %71 = or i32 %70, %x.09, !dbg !527
  call void @llvm.dbg.value(metadata i32 %71, i64 0, metadata !320, metadata !394), !dbg !528
  %72 = sext i32 %71 to i64, !dbg !503
  %73 = load %struct.waymapcellt** %58, align 8, !dbg !503, !tbaa !529
  %74 = getelementptr inbounds %struct.waymapcellt* %73, i64 %72, i32 0, !dbg !530
  %75 = load i16* %74, align 2, !dbg !530, !tbaa !531
  %76 = icmp eq i16 %75, %44, !dbg !533
  br i1 %76, label %77, label %128, !dbg !534

; <label>:77                                      ; preds = %.lr.ph10
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !318, metadata !394), !dbg !535
  %78 = sub nsw i32 %71, %55, !dbg !536
  %79 = add nsw i32 %78, -1, !dbg !537
  call void @llvm.dbg.value(metadata i32 %79, i64 0, metadata !321, metadata !394), !dbg !538
  %80 = sext i32 %79 to i64, !dbg !539
  %81 = load i16** %32, align 8, !dbg !539, !tbaa !458
  %82 = getelementptr inbounds i16* %81, i64 %80, !dbg !539
  %83 = load i16* %82, align 2, !dbg !539, !tbaa !460
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !318, metadata !394), !dbg !535
  %not. = icmp ne i16 %83, 0, !dbg !541
  %. = zext i1 %not. to i32, !dbg !541
  call void @llvm.dbg.value(metadata i32 %78, i64 0, metadata !321, metadata !394), !dbg !538
  %84 = sext i32 %78 to i64, !dbg !542
  %85 = getelementptr inbounds i16* %81, i64 %84, !dbg !542
  %86 = load i16* %85, align 2, !dbg !542, !tbaa !460
  %87 = icmp eq i16 %86, 0, !dbg !544
  %88 = select i1 %not., i32 2, i32 1, !dbg !545
  call void @llvm.dbg.value(metadata i32 %88, i64 0, metadata !318, metadata !394), !dbg !535
  %neighboursqu.1 = select i1 %87, i32 %., i32 %88, !dbg !546
  %89 = add nsw i32 %78, 1, !dbg !547
  call void @llvm.dbg.value(metadata i32 %89, i64 0, metadata !321, metadata !394), !dbg !538
  %90 = sext i32 %89 to i64, !dbg !548
  %91 = getelementptr inbounds i16* %81, i64 %90, !dbg !548
  %92 = load i16* %91, align 2, !dbg !548, !tbaa !460
  %not.2 = icmp ne i16 %92, 0, !dbg !550
  %93 = zext i1 %not.2 to i32, !dbg !550
  %neighboursqu.1. = add nuw nsw i32 %93, %neighboursqu.1, !dbg !550
  %94 = add nsw i32 %71, -1, !dbg !551
  call void @llvm.dbg.value(metadata i32 %94, i64 0, metadata !321, metadata !394), !dbg !538
  %95 = sext i32 %94 to i64, !dbg !552
  %96 = getelementptr inbounds i16* %81, i64 %95, !dbg !552
  %97 = load i16* %96, align 2, !dbg !552, !tbaa !460
  %not.3 = icmp ne i16 %97, 0, !dbg !554
  %98 = zext i1 %not.3 to i32, !dbg !554
  %neighboursqu.3 = add nuw nsw i32 %neighboursqu.1., %98, !dbg !554
  %99 = add nsw i32 %71, 1, !dbg !555
  call void @llvm.dbg.value(metadata i32 %99, i64 0, metadata !321, metadata !394), !dbg !538
  %100 = sext i32 %99 to i64, !dbg !556
  %101 = getelementptr inbounds i16* %81, i64 %100, !dbg !556
  %102 = load i16* %101, align 2, !dbg !556, !tbaa !460
  %not.4 = icmp ne i16 %102, 0, !dbg !558
  %103 = zext i1 %not.4 to i32, !dbg !558
  %neighboursqu.3. = add nuw nsw i32 %neighboursqu.3, %103, !dbg !558
  %104 = add nsw i32 %71, %55, !dbg !559
  %105 = add nsw i32 %104, -1, !dbg !560
  call void @llvm.dbg.value(metadata i32 %105, i64 0, metadata !321, metadata !394), !dbg !538
  %106 = sext i32 %105 to i64, !dbg !561
  %107 = getelementptr inbounds i16* %81, i64 %106, !dbg !561
  %108 = load i16* %107, align 2, !dbg !561, !tbaa !460
  %not.5 = icmp ne i16 %108, 0, !dbg !563
  %109 = zext i1 %not.5 to i32, !dbg !563
  %neighboursqu.5 = add nuw nsw i32 %neighboursqu.3., %109, !dbg !563
  call void @llvm.dbg.value(metadata i32 %104, i64 0, metadata !321, metadata !394), !dbg !538
  %110 = sext i32 %104 to i64, !dbg !564
  %111 = getelementptr inbounds i16* %81, i64 %110, !dbg !564
  %112 = load i16* %111, align 2, !dbg !564, !tbaa !460
  %not.6 = icmp ne i16 %112, 0, !dbg !566
  %113 = zext i1 %not.6 to i32, !dbg !566
  %neighboursqu.5. = add nuw nsw i32 %neighboursqu.5, %113, !dbg !566
  %114 = add nsw i32 %104, 1, !dbg !567
  call void @llvm.dbg.value(metadata i32 %114, i64 0, metadata !321, metadata !394), !dbg !538
  %115 = sext i32 %114 to i64, !dbg !568
  %116 = getelementptr inbounds i16* %81, i64 %115, !dbg !568
  %117 = load i16* %116, align 2, !dbg !568, !tbaa !460
  %not.7 = icmp ne i16 %117, 0, !dbg !570
  %118 = zext i1 %not.7 to i32, !dbg !570
  %neighboursqu.7 = add nsw i32 %neighboursqu.5., %118, !dbg !570
  %119 = icmp slt i32 %neighboursqu.7, %minneighbourcoef.0, !dbg !571
  br i1 %119, label %128, label %120, !dbg !572

; <label>:120                                     ; preds = %77
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !348, metadata !394), !dbg !573
  tail call void @llvm.dbg.value(metadata i32 %71, i64 0, metadata !349, metadata !394), !dbg !574
  %121 = load i32* %59, align 4, !dbg !506, !tbaa !575
  %122 = and i32 %121, %71, !dbg !576
  %123 = trunc i32 %122 to i16, !dbg !577
  store i16 %123, i16* %60, align 4, !dbg !578, !tbaa !579
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !352, metadata !394), !dbg !581
  tail call void @llvm.dbg.value(metadata i32 %71, i64 0, metadata !353, metadata !394), !dbg !583
  %124 = ashr i32 %71, %69, !dbg !584
  %125 = trunc i32 %124 to i16, !dbg !585
  store i16 %125, i16* %61, align 2, !dbg !586, !tbaa !587
  %126 = sitofp i32 %neighboursqu.7 to float, !dbg !588
  %127 = fmul float %126, 1.250000e-01, !dbg !589
  store float %127, float* %62, align 4, !dbg !590, !tbaa !591
  call void @llvm.dbg.value(metadata %class.flexarray* %contour, i64 0, metadata !313, metadata !394), !dbg !474
  call void @llvm.dbg.value(metadata %struct.levelplacet* %place, i64 0, metadata !315, metadata !394), !dbg !592
  call void @_ZN9flexarrayI11levelplacetE3addERKS0_(%class.flexarray* %contour, %struct.levelplacet* dereferenceable(16) %place) #7, !dbg !593
  %.pre17 = load i32* %57, align 4, !dbg !500, !tbaa !522
  br label %128, !dbg !594

; <label>:128                                     ; preds = %77, %.lr.ph10, %120
  %129 = phi i32 [ %68, %77 ], [ %68, %.lr.ph10 ], [ %.pre17, %120 ], !dbg !595
  %130 = add nuw nsw i32 %x.09, 1, !dbg !595
  call void @llvm.dbg.value(metadata i32 %130, i64 0, metadata !322, metadata !394), !dbg !596
  %131 = icmp slt i32 %130, %129, !dbg !523
  br i1 %131, label %.lr.ph10, label %._crit_edge11, !dbg !524

._crit_edge11:                                    ; preds = %128, %.preheader
  %132 = add nuw nsw i32 %y.012, 1, !dbg !597
  call void @llvm.dbg.value(metadata i32 %132, i64 0, metadata !323, metadata !394), !dbg !519
  %133 = load i32* %56, align 4, !dbg !496, !tbaa !514
  %134 = icmp slt i32 %132, %133, !dbg !520
  br i1 %134, label %.preheader, label %._crit_edge13, !dbg !521

._crit_edge13:                                    ; preds = %._crit_edge11
  %.pre18 = load i32* %49, align 8, !dbg !598, !tbaa !484
  br label %135, !dbg !521

; <label>:135                                     ; preds = %._crit_edge13, %63
  %136 = phi i32 [ %.pre18, %._crit_edge13 ], [ 0, %63 ]
  %137 = phi i32 [ %133, %._crit_edge13 ], [ %64, %63 ]
  %138 = add nsw i32 %minneighbourcoef.0, -1, !dbg !599
  call void @llvm.dbg.value(metadata i32 %138, i64 0, metadata !314, metadata !394), !dbg !495
  %139 = icmp slt i32 %136, %minpointqu, !dbg !600
  %140 = icmp sgt i32 %138, -2, !dbg !601
  %or.cond = and i1 %140, %139, !dbg !602
  br i1 %or.cond, label %63, label %.critedge, !dbg !602

.critedge:                                        ; preds = %135
  %141 = icmp slt i32 %minneighbourcoef.0, 0, !dbg !603
  br i1 %141, label %142, label %144, !dbg !605

; <label>:142                                     ; preds = %.critedge
  call void @llvm.dbg.value(metadata %class.flexarray* %contour, i64 0, metadata !313, metadata !394), !dbg !474
  call void @llvm.dbg.value(metadata %class.flexarray* %contour, i64 0, metadata !386, metadata !394) #1, !dbg !606
  %143 = load i8** %53, align 8, !dbg !609, !tbaa !492
  call void @llvm.dbg.value(metadata i8* %143, i64 0, metadata !383, metadata !394) #1, !dbg !610
  call void @free(i8* %143) #8, !dbg !612
  br label %198, !dbg !613

; <label>:144                                     ; preds = %.critedge
  store i32 %136, i32* %pointqu, align 4, !dbg !614, !tbaa !422
  %145 = sext i32 %136 to i64, !dbg !615
  %146 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %145, i64 16), !dbg !615
  %147 = extractvalue { i64, i1 } %146, 1, !dbg !615
  %148 = extractvalue { i64, i1 } %146, 0, !dbg !615
  %149 = select i1 %147, i64 -1, i64 %148, !dbg !615
  %150 = call noalias i8* @_Znam(i64 %149) #9, !dbg !615
  %151 = bitcast i8* %150 to %struct.levelplacet*, !dbg !615
  call void @llvm.dbg.value(metadata %struct.levelplacet* %151, i64 0, metadata !316, metadata !394), !dbg !616
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !324, metadata !394), !dbg !617
  %152 = icmp sgt i32 %136, 0, !dbg !618
  br i1 %152, label %.lr.ph, label %._crit_edge19, !dbg !621

._crit_edge19:                                    ; preds = %144
  %.pre20 = load i8** %53, align 8, !dbg !622, !tbaa !492
  br label %._crit_edge, !dbg !621

.lr.ph:                                           ; preds = %144
  %153 = getelementptr inbounds %class.flexarray* %contour, i64 0, i32 0, !dbg !624
  %154 = load %struct.levelplacet** %153, align 8, !dbg !624, !tbaa !492
  %155 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 14, i32 0, !dbg !626
  %156 = load float* %155, align 4, !dbg !626, !tbaa !627
  %157 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 13, !dbg !628
  %158 = load float* %157, align 4, !dbg !628, !tbaa !629
  %159 = fadd float %156, %158, !dbg !630
  %160 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 14, i32 1, !dbg !631
  %161 = load float* %160, align 4, !dbg !631, !tbaa !632
  %162 = fsub float %161, %156, !dbg !633
  %163 = load i32* %45, align 4, !dbg !634, !tbaa !440
  %164 = sitofp i32 %163 to float, !dbg !634
  %165 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 14, i32 2, !dbg !635
  %166 = load float* %165, align 4, !dbg !635, !tbaa !636
  %167 = fadd float %166, %158, !dbg !637
  %168 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 14, i32 3, !dbg !638
  %169 = load float* %168, align 4, !dbg !638, !tbaa !639
  %170 = fsub float %169, %166, !dbg !640
  %171 = load i32* %54, align 4, !dbg !641, !tbaa !444
  %172 = sitofp i32 %171 to float, !dbg !641
  %173 = bitcast %struct.levelplacet* %154 to i8*
  br label %174, !dbg !621

; <label>:174                                     ; preds = %.lr.ph, %174
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %174 ]
  %175 = getelementptr inbounds %struct.levelplacet* %154, i64 %indvars.iv, i32 0, !dbg !642
  %176 = load i16* %175, align 2, !dbg !642, !tbaa !579
  %177 = getelementptr inbounds %struct.levelplacet* %151, i64 %indvars.iv, i32 0, !dbg !643
  store i16 %176, i16* %177, align 2, !dbg !644, !tbaa !579
  %178 = getelementptr inbounds %struct.levelplacet* %154, i64 %indvars.iv, i32 1, !dbg !645
  %179 = load i16* %178, align 2, !dbg !645, !tbaa !587
  %180 = getelementptr inbounds %struct.levelplacet* %151, i64 %indvars.iv, i32 1, !dbg !646
  store i16 %179, i16* %180, align 2, !dbg !647, !tbaa !587
  %181 = sitofp i16 %176 to float, !dbg !648
  %182 = fmul float %181, %162, !dbg !649
  %183 = fdiv float %182, %164, !dbg !650
  %184 = fadd float %159, %183, !dbg !651
  %185 = getelementptr inbounds %struct.levelplacet* %151, i64 %indvars.iv, i32 2, !dbg !652
  store float %184, float* %185, align 4, !dbg !653, !tbaa !654
  %186 = sitofp i16 %179 to float, !dbg !655
  %187 = fmul float %186, %170, !dbg !656
  %188 = fdiv float %187, %172, !dbg !657
  %189 = fadd float %167, %188, !dbg !658
  %190 = getelementptr inbounds %struct.levelplacet* %151, i64 %indvars.iv, i32 3, !dbg !659
  store float %189, float* %190, align 4, !dbg !660, !tbaa !661
  %191 = getelementptr inbounds %struct.levelplacet* %154, i64 %indvars.iv, i32 4, !dbg !662
  %192 = bitcast float* %191 to i32*, !dbg !662
  %193 = load i32* %192, align 4, !dbg !662, !tbaa !591
  %194 = getelementptr inbounds %struct.levelplacet* %151, i64 %indvars.iv, i32 4, !dbg !663
  %195 = bitcast float* %194 to i32*, !dbg !664
  store i32 %193, i32* %195, align 4, !dbg !664, !tbaa !591
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !621
  %196 = icmp slt i64 %indvars.iv.next, %145, !dbg !618
  br i1 %196, label %174, label %._crit_edge, !dbg !621

._crit_edge:                                      ; preds = %174, %._crit_edge19
  %197 = phi i8* [ %.pre20, %._crit_edge19 ], [ %173, %174 ]
  call void @llvm.dbg.value(metadata %class.flexarray* %contour, i64 0, metadata !313, metadata !394), !dbg !474
  call void @llvm.dbg.value(metadata %class.flexarray* %contour, i64 0, metadata !386, metadata !394) #1, !dbg !665
  call void @llvm.dbg.value(metadata i8* %197, i64 0, metadata !383, metadata !394) #1, !dbg !666
  call void @free(i8* %197) #8, !dbg !668
  br label %198, !dbg !669

; <label>:198                                     ; preds = %37, %._crit_edge, %142
  %.0 = phi %struct.levelplacet* [ null, %142 ], [ %151, %._crit_edge ], [ null, %37 ]
  ret %struct.levelplacet* %.0, !dbg !670
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: optsize
declare zeroext i1 @_ZN6wayobj5ismapEii(%class.wayobj*, i32, i32) #3

; Function Attrs: optsize
declare zeroext i1 @_ZN6wayobj13findfreepointEiiRiS0_(%class.wayobj*, i32, i32, i32* dereferenceable(4), i32* dereferenceable(4)) #3

; Function Attrs: optsize
declare zeroext i1 @_ZN6wayobj4fillEiiii(%class.wayobj*, i32, i32, i32, i32) #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr void @_ZN9flexarrayI11levelplacetE3addERKS0_(%class.flexarray* nocapture %this, %struct.levelplacet* nocapture readonly dereferenceable(16) %e) #4 align 2 {
  tail call void @llvm.dbg.value(metadata %class.flexarray* %this, i64 0, metadata !371, metadata !394), !dbg !671
  tail call void @llvm.dbg.value(metadata %struct.levelplacet* %e, i64 0, metadata !372, metadata !394), !dbg !672
  %1 = getelementptr inbounds %class.flexarray* %this, i64 0, i32 1, !dbg !673
  %2 = load i32* %1, align 4, !dbg !673, !tbaa !484
  %3 = getelementptr inbounds %class.flexarray* %this, i64 0, i32 2, !dbg !675
  %4 = load i32* %3, align 4, !dbg !675, !tbaa !480
  %5 = icmp eq i32 %2, %4, !dbg !676
  br i1 %5, label %6, label %._crit_edge, !dbg !677

._crit_edge:                                      ; preds = %0
  %.phi.trans.insert = getelementptr inbounds %class.flexarray* %this, i64 0, i32 0
  %.pre1 = load %struct.levelplacet** %.phi.trans.insert, align 8, !dbg !678, !tbaa !492
  br label %16, !dbg !677

; <label>:6                                       ; preds = %0
  tail call void @llvm.dbg.value(metadata %class.flexarray* %this, i64 0, metadata !375, metadata !394) #1, !dbg !679
  tail call void @llvm.dbg.value(metadata i1 true, i64 0, metadata !376, metadata !394) #1, !dbg !681
  %7 = shl i32 %2, 1, !dbg !682
  tail call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !378, metadata !394) #1, !dbg !683
  %8 = shl i32 %2, 5, !dbg !684
  tail call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !364, metadata !394) #1, !dbg !685
  tail call void @llvm.dbg.value(metadata i32 16, i64 0, metadata !365, metadata !394) #1, !dbg !687
  %9 = sext i32 %8 to i64, !dbg !688
  %10 = tail call i8* @malloc(i64 %9) #8, !dbg !689
  %11 = bitcast %class.flexarray* %this to i8**, !dbg !690
  %12 = load i8** %11, align 8, !dbg !690, !tbaa !492
  %13 = sext i32 %2 to i64, !dbg !692
  %14 = shl nsw i64 %13, 4, !dbg !693
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %12, i64 %14, i32 4, i1 false) #1, !dbg !694
  tail call void @llvm.dbg.value(metadata i8* %12, i64 0, metadata !383, metadata !394) #1, !dbg !695
  tail call void @free(i8* %12) #8, !dbg !697
  store i8* %10, i8** %11, align 8, !dbg !698, !tbaa !492
  store i32 %7, i32* %3, align 4, !dbg !699, !tbaa !480
  %.pre = load i32* %1, align 4, !dbg !700, !tbaa !484
  %15 = bitcast i8* %10 to %struct.levelplacet*
  br label %16, !dbg !701

; <label>:16                                      ; preds = %._crit_edge, %6
  %17 = phi %struct.levelplacet* [ %15, %6 ], [ %.pre1, %._crit_edge ]
  %18 = phi i32 [ %.pre, %6 ], [ %2, %._crit_edge ]
  %19 = sext i32 %18 to i64, !dbg !678
  %20 = getelementptr inbounds %struct.levelplacet* %17, i64 %19, !dbg !678
  %21 = bitcast %struct.levelplacet* %20 to i8*, !dbg !702
  %22 = bitcast %struct.levelplacet* %e to i8*, !dbg !702
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 16, i32 4, i1 false), !dbg !702, !tbaa.struct !703
  %23 = load i32* %1, align 4, !dbg !705, !tbaa !484
  %24 = add nsw i32 %23, 1, !dbg !705
  store i32 %24, i32* %1, align 4, !dbg !705, !tbaa !484
  ret void, !dbg !706
}

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #2

; Function Attrs: nobuiltin optsize
declare noalias i8* @_Znam(i64) #5

; Function Attrs: nounwind optsize ssp uwtable
define zeroext i1 @_ZN6wayobj16findverticallineEiiRiS0_(%class.wayobj* nocapture readonly %this, i32 %x, i32 %y, i32* nocapture dereferenceable(4) %y1, i32* nocapture dereferenceable(4) %y2) #4 align 2 {
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !327, metadata !394), !dbg !707
  tail call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !328, metadata !394), !dbg !708
  tail call void @llvm.dbg.value(metadata i32 %y, i64 0, metadata !329, metadata !394), !dbg !709
  tail call void @llvm.dbg.value(metadata i32* %y1, i64 0, metadata !330, metadata !394), !dbg !710
  tail call void @llvm.dbg.value(metadata i32* %y2, i64 0, metadata !331, metadata !394), !dbg !711
  store i32 %y, i32* %y1, align 4, !dbg !712, !tbaa !422
  store i32 %y, i32* %y2, align 4, !dbg !713, !tbaa !422
  tail call void @llvm.dbg.value(metadata i32 %y, i64 0, metadata !332, metadata !394), !dbg !714
  %1 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 8, !dbg !715
  %2 = load i32* %1, align 4, !dbg !715, !tbaa !444
  %3 = icmp sgt i32 %2, %y, !dbg !718
  br i1 %3, label %.lr.ph5, label %.preheader, !dbg !719

.lr.ph5:                                          ; preds = %0
  %4 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 2, !dbg !720
  %5 = load i32* %4, align 4, !dbg !720, !tbaa !454
  %6 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 17, !dbg !723
  %7 = load i16** %6, align 8, !dbg !723, !tbaa !458
  br label %13, !dbg !719

.preheader:                                       ; preds = %21, %0, %20
  %8 = icmp sgt i32 %y, 0, !dbg !724
  br i1 %8, label %.lr.ph, label %.loopexit, !dbg !727

.lr.ph:                                           ; preds = %.preheader
  %9 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 2, !dbg !728
  %10 = load i32* %9, align 4, !dbg !728, !tbaa !454
  %11 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 17, !dbg !731
  %12 = load i16** %11, align 8, !dbg !731, !tbaa !458
  br label %24, !dbg !727

; <label>:13                                      ; preds = %.lr.ph5, %21
  %yy.04 = phi i32 [ %y, %.lr.ph5 ], [ %22, %21 ]
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !343, metadata !394), !dbg !732
  tail call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !344, metadata !394), !dbg !733
  tail call void @llvm.dbg.value(metadata i32 %22, i64 0, metadata !345, metadata !394), !dbg !734
  %14 = shl i32 %yy.04, %5, !dbg !735
  %15 = or i32 %14, %x, !dbg !736
  %16 = sext i32 %15 to i64, !dbg !723
  %17 = getelementptr inbounds i16* %7, i64 %16, !dbg !723
  %18 = load i16* %17, align 2, !dbg !737, !tbaa !460
  %19 = icmp eq i16 %18, 0, !dbg !738
  br i1 %19, label %21, label %20, !dbg !739

; <label>:20                                      ; preds = %13
  store i32 %yy.04, i32* %y2, align 4, !dbg !740, !tbaa !422
  br label %.preheader, !dbg !742

; <label>:21                                      ; preds = %13
  %22 = add nsw i32 %yy.04, 1, !dbg !743
  tail call void @llvm.dbg.value(metadata i32 %22, i64 0, metadata !332, metadata !394), !dbg !714
  %23 = icmp slt i32 %22, %2, !dbg !718
  br i1 %23, label %13, label %.preheader, !dbg !719

; <label>:24                                      ; preds = %.lr.ph, %32
  %yy.13 = phi i32 [ %y, %.lr.ph ], [ %33, %32 ]
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !343, metadata !394), !dbg !744
  tail call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !344, metadata !394), !dbg !745
  tail call void @llvm.dbg.value(metadata i32 %33, i64 0, metadata !345, metadata !394), !dbg !746
  %25 = shl i32 %yy.13, %10, !dbg !747
  %26 = or i32 %25, %x, !dbg !748
  %27 = sext i32 %26 to i64, !dbg !731
  %28 = getelementptr inbounds i16* %12, i64 %27, !dbg !731
  %29 = load i16* %28, align 2, !dbg !749, !tbaa !460
  %30 = icmp eq i16 %29, 0, !dbg !750
  br i1 %30, label %32, label %31, !dbg !751

; <label>:31                                      ; preds = %24
  store i32 %yy.13, i32* %y1, align 4, !dbg !752, !tbaa !422
  br label %.loopexit, !dbg !754

; <label>:32                                      ; preds = %24
  %33 = add nsw i32 %yy.13, -1, !dbg !755
  tail call void @llvm.dbg.value(metadata i32 %33, i64 0, metadata !332, metadata !394), !dbg !714
  %34 = icmp sgt i32 %yy.13, 1, !dbg !724
  br i1 %34, label %24, label %.loopexit, !dbg !727

.loopexit:                                        ; preds = %32, %.preheader, %31
  ret i1 true, !dbg !756
}

; Function Attrs: nounwind optsize
declare noalias i8* @malloc(i64) #6

; Function Attrs: nounwind optsize
declare void @free(i8* nocapture) #6

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #2

attributes #0 = { optsize ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { optsize "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind optsize ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin optsize "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind optsize "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { optsize }
attributes #8 = { nounwind optsize }
attributes #9 = { builtin optsize }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!387, !388, !389}
!llvm.ident = !{!390}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1, producer: "Apple LLVM version 7.0.0 (clang-700.1.76)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !303, globals: !2, imports: !2)
!1 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/473.astar/src/Places_.cpp", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!2 = !{}
!3 = !{!4, !157, !167, !172, !236, !237, !241, !249, !257, !264, !22, !8, !108}
!4 = !DICompositeType(tag: DW_TAG_class_type, name: "wayobj", file: !5, line: 35, size: 1408, align: 64, elements: !6, identifier: "_ZTS6wayobj")
!5 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/473.astar/src/Way_.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!6 = !{!7, !13, !14, !15, !16, !17, !18, !19, !20, !21, !24, !25, !26, !27, !28, !29, !30, !37, !40, !43, !44, !45, !46, !48, !49, !50, !55, !59, !60, !63, !64, !67, !70, !74, !77, !80, !83, !84, !87, !90, !94, !101, !102, !103, !109, !112, !115, !116, !120, !121, !124, !129, !134, !137, !138, !141, !142, !145, !151, !152, !155, !156}
!7 = !DIDerivedType(tag: DW_TAG_member, name: "mapxshift", scope: !"_ZTS6wayobj", file: !5, line: 37, baseType: !8, size: 32, align: 32)
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "i32", file: !9, line: 28, baseType: !10)
!9 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/473.astar/src/Types.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !11, line: 30, baseType: !12)
!11 = !DIFile(filename: "/usr/include/sys/_types/_int32_t.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!12 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "mapyshift", scope: !"_ZTS6wayobj", file: !5, line: 37, baseType: !8, size: 32, align: 32, offset: 32)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !"_ZTS6wayobj", file: !5, line: 38, baseType: !8, size: 32, align: 32, offset: 64)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "mapmaxx", scope: !"_ZTS6wayobj", file: !5, line: 39, baseType: !8, size: 32, align: 32, offset: 96)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "mapmaxy", scope: !"_ZTS6wayobj", file: !5, line: 39, baseType: !8, size: 32, align: 32, offset: 128)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "mapmaxx1", scope: !"_ZTS6wayobj", file: !5, line: 40, baseType: !8, size: 32, align: 32, offset: 160)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "mapmaxy1", scope: !"_ZTS6wayobj", file: !5, line: 40, baseType: !8, size: 32, align: 32, offset: 192)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "maplx", scope: !"_ZTS6wayobj", file: !5, line: 41, baseType: !8, size: 32, align: 32, offset: 224)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "maply", scope: !"_ZTS6wayobj", file: !5, line: 41, baseType: !8, size: 32, align: 32, offset: 256)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "xcoef1", scope: !"_ZTS6wayobj", file: !5, line: 42, baseType: !22, size: 32, align: 32, offset: 288)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "rnumt", file: !9, line: 57, baseType: !23)
!23 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "xcoef2", scope: !"_ZTS6wayobj", file: !5, line: 42, baseType: !22, size: 32, align: 32, offset: 320)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "ycoef1", scope: !"_ZTS6wayobj", file: !5, line: 42, baseType: !22, size: 32, align: 32, offset: 352)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "ycoef2", scope: !"_ZTS6wayobj", file: !5, line: 42, baseType: !22, size: 32, align: 32, offset: 384)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "cellr", scope: !"_ZTS6wayobj", file: !5, line: 43, baseType: !22, size: 32, align: 32, offset: 416)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !"_ZTS6wayobj", file: !5, line: 44, baseType: !"_ZTS17createwaymnginfot", size: 256, align: 32, offset: 448)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "createwayinfo", scope: !"_ZTS6wayobj", file: !5, line: 45, baseType: !"_ZTS14createwayinfot", size: 224, align: 32, offset: 704)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "maparp", scope: !"_ZTS6wayobj", file: !5, line: 46, baseType: !31, size: 64, align: 64, offset: 960)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "i16pt", file: !9, line: 49, baseType: !32)
!32 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64, align: 64)
!33 = !DIDerivedType(tag: DW_TAG_typedef, name: "i16", file: !9, line: 27, baseType: !34)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !35, line: 30, baseType: !36)
!35 = !DIFile(filename: "/usr/include/sys/_types/_int16_t.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!36 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "waymap", scope: !"_ZTS6wayobj", file: !5, line: 47, baseType: !38, size: 64, align: 64, offset: 1024)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "waymapcellpt", file: !5, line: 22, baseType: !39)
!39 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS11waymapcellt", size: 64, align: 64)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "bound1p", scope: !"_ZTS6wayobj", file: !5, line: 48, baseType: !41, size: 64, align: 64, offset: 1088)
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "i32pt", file: !9, line: 50, baseType: !42)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64, align: 64)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "bound2p", scope: !"_ZTS6wayobj", file: !5, line: 48, baseType: !41, size: 64, align: 64, offset: 1152)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "maxboundlength", scope: !"_ZTS6wayobj", file: !5, line: 49, baseType: !8, size: 32, align: 32, offset: 1216)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "indexxmask", scope: !"_ZTS6wayobj", file: !5, line: 50, baseType: !8, size: 32, align: 32, offset: 1248)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "flend", scope: !"_ZTS6wayobj", file: !5, line: 51, baseType: !47, size: 8, align: 8, offset: 1280)
!47 = !DIBasicType(name: "bool", size: 8, align: 8, encoding: DW_ATE_boolean)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "endindex", scope: !"_ZTS6wayobj", file: !5, line: 52, baseType: !8, size: 32, align: 32, offset: 1312)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !"_ZTS6wayobj", file: !5, line: 53, baseType: !33, size: 16, align: 16, offset: 1344)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "fillnum", scope: !"_ZTS6wayobj", file: !5, line: 54, baseType: !51, size: 16, align: 16, offset: 1360)
!51 = !DIDerivedType(tag: DW_TAG_typedef, name: "w16", file: !9, line: 22, baseType: !52)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !53, line: 31, baseType: !54)
!53 = !DIFile(filename: "/usr/include/_types/_uint16_t.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!54 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!55 = !DISubprogram(name: "getx", linkageName: "_ZN6wayobj4getxEf", scope: !"_ZTS6wayobj", file: !5, line: 56, type: !56, isLocal: false, isDefinition: false, scopeLine: 56, flags: DIFlagPrototyped, isOptimized: true)
!56 = !DISubroutineType(types: !57)
!57 = !{!8, !58, !22}
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS6wayobj", size: 64, align: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!59 = !DISubprogram(name: "gety", linkageName: "_ZN6wayobj4getyEf", scope: !"_ZTS6wayobj", file: !5, line: 57, type: !56, isLocal: false, isDefinition: false, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: true)
!60 = !DISubprogram(name: "getxcoord", linkageName: "_ZN6wayobj9getxcoordEi", scope: !"_ZTS6wayobj", file: !5, line: 58, type: !61, isLocal: false, isDefinition: false, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: true)
!61 = !DISubroutineType(types: !62)
!62 = !{!22, !58, !8}
!63 = !DISubprogram(name: "getycoord", linkageName: "_ZN6wayobj9getycoordEi", scope: !"_ZTS6wayobj", file: !5, line: 59, type: !61, isLocal: false, isDefinition: false, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: true)
!64 = !DISubprogram(name: "ismap", linkageName: "_ZN6wayobj5ismapEii", scope: !"_ZTS6wayobj", file: !5, line: 61, type: !65, isLocal: false, isDefinition: false, scopeLine: 61, flags: DIFlagPrototyped, isOptimized: true)
!65 = !DISubroutineType(types: !66)
!66 = !{!47, !58, !8, !8}
!67 = !DISubprogram(name: "getpoint", linkageName: "_ZN6wayobj8getpointEi", scope: !"_ZTS6wayobj", file: !5, line: 62, type: !68, isLocal: false, isDefinition: false, scopeLine: 62, flags: DIFlagPrototyped, isOptimized: true)
!68 = !DISubroutineType(types: !69)
!69 = !{!"_ZTS8rvectort", !58, !8}
!70 = !DISubprogram(name: "map", linkageName: "_ZN6wayobj3mapEii", scope: !"_ZTS6wayobj", file: !5, line: 64, type: !71, isLocal: false, isDefinition: false, scopeLine: 64, flags: DIFlagPrototyped, isOptimized: true)
!71 = !DISubroutineType(types: !72)
!72 = !{!73, !58, !8, !8}
!73 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !33)
!74 = !DISubprogram(name: "map", linkageName: "_ZN6wayobj3mapEss", scope: !"_ZTS6wayobj", file: !5, line: 65, type: !75, isLocal: false, isDefinition: false, scopeLine: 65, flags: DIFlagPrototyped, isOptimized: true)
!75 = !DISubroutineType(types: !76)
!76 = !{!73, !58, !33, !33}
!77 = !DISubprogram(name: "index", linkageName: "_ZN6wayobj5indexEii", scope: !"_ZTS6wayobj", file: !5, line: 67, type: !78, isLocal: false, isDefinition: false, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: true)
!78 = !DISubroutineType(types: !79)
!79 = !{!8, !58, !8, !8}
!80 = !DISubprogram(name: "indexx", linkageName: "_ZN6wayobj6indexxEi", scope: !"_ZTS6wayobj", file: !5, line: 68, type: !81, isLocal: false, isDefinition: false, scopeLine: 68, flags: DIFlagPrototyped, isOptimized: true)
!81 = !DISubroutineType(types: !82)
!82 = !{!8, !58, !8}
!83 = !DISubprogram(name: "indexy", linkageName: "_ZN6wayobj6indexyEi", scope: !"_ZTS6wayobj", file: !5, line: 69, type: !81, isLocal: false, isDefinition: false, scopeLine: 69, flags: DIFlagPrototyped, isOptimized: true)
!84 = !DISubprogram(name: "makebound2", linkageName: "_ZN6wayobj10makebound2EPiiS0_", scope: !"_ZTS6wayobj", file: !5, line: 71, type: !85, isLocal: false, isDefinition: false, scopeLine: 71, flags: DIFlagPrototyped, isOptimized: true)
!85 = !DISubroutineType(types: !86)
!86 = !{!8, !58, !41, !8, !41}
!87 = !DISubprogram(name: "fill", linkageName: "_ZN6wayobj4fillEiiii", scope: !"_ZTS6wayobj", file: !5, line: 72, type: !88, isLocal: false, isDefinition: false, scopeLine: 72, flags: DIFlagPrototyped, isOptimized: true)
!88 = !DISubroutineType(types: !89)
!89 = !{!47, !58, !8, !8, !8, !8}
!90 = !DISubprogram(name: "createwayar", linkageName: "_ZN6wayobj11createwayarEiiR8wayinfot", scope: !"_ZTS6wayobj", file: !5, line: 73, type: !91, isLocal: false, isDefinition: false, scopeLine: 73, flags: DIFlagPrototyped, isOptimized: true)
!91 = !DISubroutineType(types: !92)
!92 = !{!47, !58, !8, !8, !93}
!93 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !"_ZTS8wayinfot")
!94 = !DISubprogram(name: "createwayar", linkageName: "_ZN6wayobj11createwayarEiiRP8point16tRi", scope: !"_ZTS6wayobj", file: !5, line: 74, type: !95, isLocal: false, isDefinition: false, scopeLine: 74, flags: DIFlagPrototyped, isOptimized: true)
!95 = !DISubroutineType(types: !96)
!96 = !{!47, !58, !8, !8, !97, !100}
!97 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !98)
!98 = !DIDerivedType(tag: DW_TAG_typedef, name: "point16pt", file: !5, line: 15, baseType: !99)
!99 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS8point16t", size: 64, align: 64)
!100 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !8)
!101 = !DISubprogram(name: "createwayar2", linkageName: "_ZN6wayobj12createwayar2EiiR8wayinfot", scope: !"_ZTS6wayobj", file: !5, line: 75, type: !91, isLocal: false, isDefinition: false, scopeLine: 75, flags: DIFlagPrototyped, isOptimized: true)
!102 = !DISubprogram(name: "makeobstaclebound2", linkageName: "_ZN6wayobj18makeobstaclebound2EPiiS0_", scope: !"_ZTS6wayobj", file: !5, line: 77, type: !85, isLocal: false, isDefinition: false, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: true)
!103 = !DISubprogram(name: "findfreepoints", linkageName: "_ZN6wayobj14findfreepointsE8rvectortiRi", scope: !"_ZTS6wayobj", file: !5, line: 81, type: !104, isLocal: false, isDefinition: false, scopeLine: 81, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!104 = !DISubroutineType(types: !105)
!105 = !{!106, !58, !"_ZTS8rvectort", !8, !100}
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "levelplacept", file: !107, line: 12, baseType: !108)
!107 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/473.astar/src/WayTypes_.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS11levelplacet", size: 64, align: 64)
!109 = !DISubprogram(name: "findverticalline", linkageName: "_ZN6wayobj16findverticallineEiiRiS0_", scope: !"_ZTS6wayobj", file: !5, line: 82, type: !110, isLocal: false, isDefinition: false, scopeLine: 82, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!110 = !DISubroutineType(types: !111)
!111 = !{!47, !58, !8, !8, !100, !100}
!112 = !DISubprogram(name: "ismoveable", linkageName: "_ZN6wayobj10ismoveableEff", scope: !"_ZTS6wayobj", file: !5, line: 84, type: !113, isLocal: false, isDefinition: false, scopeLine: 84, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!113 = !DISubroutineType(types: !114)
!114 = !{!47, !58, !22, !22}
!115 = !DISubprogram(name: "findfreepoint", linkageName: "_ZN6wayobj13findfreepointEiiRiS0_", scope: !"_ZTS6wayobj", file: !5, line: 86, type: !110, isLocal: false, isDefinition: false, scopeLine: 86, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!116 = !DISubprogram(name: "findfreepoint", linkageName: "_ZN6wayobj13findfreepointEffRfS0_", scope: !"_ZTS6wayobj", file: !5, line: 87, type: !117, isLocal: false, isDefinition: false, scopeLine: 87, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!117 = !DISubroutineType(types: !118)
!118 = !{!47, !58, !22, !22, !119, !119}
!119 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !22)
!120 = !DISubprogram(name: "wayexist", linkageName: "_ZN6wayobj8wayexistEiiii", scope: !"_ZTS6wayobj", file: !5, line: 88, type: !88, isLocal: false, isDefinition: false, scopeLine: 88, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!121 = !DISubprogram(name: "createway", linkageName: "_ZN6wayobj9createwayEiiiiRP8point16tRi", scope: !"_ZTS6wayobj", file: !5, line: 89, type: !122, isLocal: false, isDefinition: false, scopeLine: 89, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!122 = !DISubroutineType(types: !123)
!123 = !{!47, !58, !8, !8, !8, !8, !97, !100}
!124 = !DISubprogram(name: "createway", linkageName: "_ZN6wayobj9createwayERK8rvectortS2_bR8wayinfot", scope: !"_ZTS6wayobj", file: !5, line: 90, type: !125, isLocal: false, isDefinition: false, scopeLine: 90, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!125 = !DISubroutineType(types: !126)
!126 = !{!47, !58, !127, !127, !47, !93}
!127 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !128)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !"_ZTS8rvectort")
!129 = !DISubprogram(name: "createway", linkageName: "_ZN6wayobj9createwayERK14createwayinfotR8wayinfot", scope: !"_ZTS6wayobj", file: !5, line: 91, type: !130, isLocal: false, isDefinition: false, scopeLine: 91, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!130 = !DISubroutineType(types: !131)
!131 = !{!47, !58, !132, !93}
!132 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !133)
!133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !"_ZTS14createwayinfot")
!134 = !DISubprogram(name: "addsphere", linkageName: "_ZN6wayobj9addsphereERK8rvectortf", scope: !"_ZTS6wayobj", file: !5, line: 93, type: !135, isLocal: false, isDefinition: false, scopeLine: 93, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!135 = !DISubroutineType(types: !136)
!136 = !{null, !58, !127, !22}
!137 = !DISubprogram(name: "removesphere", linkageName: "_ZN6wayobj12removesphereERK8rvectortf", scope: !"_ZTS6wayobj", file: !5, line: 94, type: !135, isLocal: false, isDefinition: false, scopeLine: 94, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!138 = !DISubprogram(name: "addpoint", linkageName: "_ZN6wayobj8addpointEii", scope: !"_ZTS6wayobj", file: !5, line: 95, type: !139, isLocal: false, isDefinition: false, scopeLine: 95, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!139 = !DISubroutineType(types: !140)
!140 = !{null, !58, !8, !8}
!141 = !DISubprogram(name: "removepoint", linkageName: "_ZN6wayobj11removepointEii", scope: !"_ZTS6wayobj", file: !5, line: 96, type: !139, isLocal: false, isDefinition: false, scopeLine: 96, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!142 = !DISubprogram(name: "clear", linkageName: "_ZN6wayobj5clearEv", scope: !"_ZTS6wayobj", file: !5, line: 97, type: !143, isLocal: false, isDefinition: false, scopeLine: 97, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!143 = !DISubroutineType(types: !144)
!144 = !{null, !58}
!145 = !DISubprogram(name: "loadmap", linkageName: "_ZN6wayobj7loadmapEPKc", scope: !"_ZTS6wayobj", file: !5, line: 99, type: !146, isLocal: false, isDefinition: false, scopeLine: 99, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!146 = !DISubroutineType(types: !147)
!147 = !{!47, !58, !148}
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64, align: 64)
!149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!150 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!151 = !DISubprogram(name: "initmap", linkageName: "_ZN6wayobj7initmapEii", scope: !"_ZTS6wayobj", file: !5, line: 100, type: !65, isLocal: false, isDefinition: false, scopeLine: 100, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!152 = !DISubprogram(name: "create", linkageName: "_ZN6wayobj6createE17createwaymnginfot", scope: !"_ZTS6wayobj", file: !5, line: 102, type: !153, isLocal: false, isDefinition: false, scopeLine: 102, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!153 = !DISubroutineType(types: !154)
!154 = !{null, !58, !"_ZTS17createwaymnginfot"}
!155 = !DISubprogram(name: "create", linkageName: "_ZN6wayobj6createEv", scope: !"_ZTS6wayobj", file: !5, line: 103, type: !143, isLocal: false, isDefinition: false, scopeLine: 103, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!156 = !DISubprogram(name: "destroy", linkageName: "_ZN6wayobj7destroyEv", scope: !"_ZTS6wayobj", file: !5, line: 104, type: !143, isLocal: false, isDefinition: false, scopeLine: 104, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!157 = !DICompositeType(tag: DW_TAG_structure_type, name: "createwaymnginfot", file: !5, line: 25, size: 256, align: 32, elements: !158, identifier: "_ZTS17createwaymnginfot")
!158 = !{!159, !160, !161, !162, !163, !164, !165, !166}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "minx", scope: !"_ZTS17createwaymnginfot", file: !5, line: 27, baseType: !22, size: 32, align: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "maxx", scope: !"_ZTS17createwaymnginfot", file: !5, line: 27, baseType: !22, size: 32, align: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "miny", scope: !"_ZTS17createwaymnginfot", file: !5, line: 28, baseType: !22, size: 32, align: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "maxy", scope: !"_ZTS17createwaymnginfot", file: !5, line: 28, baseType: !22, size: 32, align: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "xshift", scope: !"_ZTS17createwaymnginfot", file: !5, line: 29, baseType: !8, size: 32, align: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "yshift", scope: !"_ZTS17createwaymnginfot", file: !5, line: 30, baseType: !8, size: 32, align: 32, offset: 160)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "height1", scope: !"_ZTS17createwaymnginfot", file: !5, line: 31, baseType: !22, size: 32, align: 32, offset: 192)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "height2", scope: !"_ZTS17createwaymnginfot", file: !5, line: 31, baseType: !22, size: 32, align: 32, offset: 224)
!167 = !DICompositeType(tag: DW_TAG_structure_type, name: "createwayinfot", file: !107, line: 15, size: 224, align: 32, elements: !168, identifier: "_ZTS14createwayinfot")
!168 = !{!169, !170, !171}
!169 = !DIDerivedType(tag: DW_TAG_member, name: "startp", scope: !"_ZTS14createwayinfot", file: !107, line: 17, baseType: !"_ZTS8rvectort", size: 96, align: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "finishp", scope: !"_ZTS14createwayinfot", file: !107, line: 18, baseType: !"_ZTS8rvectort", size: 96, align: 32, offset: 96)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "flcorrect", scope: !"_ZTS14createwayinfot", file: !107, line: 19, baseType: !47, size: 8, align: 8, offset: 192)
!172 = !DICompositeType(tag: DW_TAG_class_type, name: "rvectort", file: !9, line: 105, size: 96, align: 32, elements: !173, identifier: "_ZTS8rvectort")
!173 = !{!174, !175, !176, !177, !181, !182, !186, !190, !191, !195, !198, !201, !204, !208, !211, !212, !213, !214, !215, !216, !217, !218, !223, !228, !232, !233}
!174 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !"_ZTS8rvectort", file: !9, line: 109, baseType: !22, size: 32, align: 32, flags: DIFlagPublic)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !"_ZTS8rvectort", file: !9, line: 109, baseType: !22, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !"_ZTS8rvectort", file: !9, line: 109, baseType: !22, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!177 = !DISubprogram(name: "norm", linkageName: "_ZNK8rvectort4normEv", scope: !"_ZTS8rvectort", file: !9, line: 110, type: !178, isLocal: false, isDefinition: false, scopeLine: 110, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!178 = !DISubroutineType(types: !179)
!179 = !{!22, !180}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64, align: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!181 = !DISubprogram(name: "norm2", linkageName: "_ZNK8rvectort5norm2Ev", scope: !"_ZTS8rvectort", file: !9, line: 111, type: !178, isLocal: false, isDefinition: false, scopeLine: 111, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!182 = !DISubprogram(name: "normalize", linkageName: "_ZN8rvectort9normalizeEv", scope: !"_ZTS8rvectort", file: !9, line: 112, type: !183, isLocal: false, isDefinition: false, scopeLine: 112, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!183 = !DISubroutineType(types: !184)
!184 = !{!22, !185}
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS8rvectort", size: 64, align: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!186 = !DISubprogram(name: "ortbasis", linkageName: "_ZNK8rvectort8ortbasisERS_S0_", scope: !"_ZTS8rvectort", file: !9, line: 114, type: !187, isLocal: false, isDefinition: false, scopeLine: 114, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!187 = !DISubroutineType(types: !188)
!188 = !{null, !180, !189, !189}
!189 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !"_ZTS8rvectort")
!190 = !DISubprogram(name: "ortbasisz", linkageName: "_ZNK8rvectort9ortbasiszERS_S0_", scope: !"_ZTS8rvectort", file: !9, line: 115, type: !187, isLocal: false, isDefinition: false, scopeLine: 115, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!191 = !DISubprogram(name: "rotmatrix", linkageName: "_ZNK8rvectort9rotmatrixER6rmatrt", scope: !"_ZTS8rvectort", file: !9, line: 117, type: !192, isLocal: false, isDefinition: false, scopeLine: 117, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!192 = !DISubroutineType(types: !193)
!193 = !{null, !180, !194}
!194 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !"_ZTS6rmatrt")
!195 = !DISubprogram(name: "rotmatrix", linkageName: "_ZNK8rvectort9rotmatrixER6rmatrtf", scope: !"_ZTS8rvectort", file: !9, line: 118, type: !196, isLocal: false, isDefinition: false, scopeLine: 118, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!196 = !DISubroutineType(types: !197)
!197 = !{null, !180, !194, !22}
!198 = !DISubprogram(name: "definerandom", linkageName: "_ZN8rvectort12definerandomEv", scope: !"_ZTS8rvectort", file: !9, line: 120, type: !199, isLocal: false, isDefinition: false, scopeLine: 120, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!199 = !DISubroutineType(types: !200)
!200 = !{null, !185}
!201 = !DISubprogram(name: "randomvariation", linkageName: "_ZN8rvectort15randomvariationEf", scope: !"_ZTS8rvectort", file: !9, line: 121, type: !202, isLocal: false, isDefinition: false, scopeLine: 121, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!202 = !DISubroutineType(types: !203)
!203 = !{null, !185, !22}
!204 = !DISubprogram(name: "operator()", linkageName: "_ZN8rvectortclEi", scope: !"_ZTS8rvectort", file: !9, line: 139, type: !205, isLocal: false, isDefinition: false, scopeLine: 139, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!205 = !DISubroutineType(types: !206)
!206 = !{!119, !185, !207}
!207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8)
!208 = !DISubprogram(name: "r", linkageName: "_ZN8rvectort1rEv", scope: !"_ZTS8rvectort", file: !9, line: 141, type: !209, isLocal: false, isDefinition: false, scopeLine: 141, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!209 = !DISubroutineType(types: !210)
!210 = !{!119, !185}
!211 = !DISubprogram(name: "g", linkageName: "_ZN8rvectort1gEv", scope: !"_ZTS8rvectort", file: !9, line: 142, type: !209, isLocal: false, isDefinition: false, scopeLine: 142, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!212 = !DISubprogram(name: "b", linkageName: "_ZN8rvectort1bEv", scope: !"_ZTS8rvectort", file: !9, line: 143, type: !209, isLocal: false, isDefinition: false, scopeLine: 143, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!213 = !DISubprogram(name: "r", linkageName: "_ZNK8rvectort1rEv", scope: !"_ZTS8rvectort", file: !9, line: 144, type: !178, isLocal: false, isDefinition: false, scopeLine: 144, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!214 = !DISubprogram(name: "g", linkageName: "_ZNK8rvectort1gEv", scope: !"_ZTS8rvectort", file: !9, line: 145, type: !178, isLocal: false, isDefinition: false, scopeLine: 145, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!215 = !DISubprogram(name: "b", linkageName: "_ZNK8rvectort1bEv", scope: !"_ZTS8rvectort", file: !9, line: 146, type: !178, isLocal: false, isDefinition: false, scopeLine: 146, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!216 = !DISubprogram(name: "bright", linkageName: "_ZN8rvectort6brightEv", scope: !"_ZTS8rvectort", file: !9, line: 148, type: !183, isLocal: false, isDefinition: false, scopeLine: 148, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!217 = !DISubprogram(name: "set0", linkageName: "_ZN8rvectort4set0Ev", scope: !"_ZTS8rvectort", file: !9, line: 150, type: !199, isLocal: false, isDefinition: false, scopeLine: 150, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!218 = !DISubprogram(name: "operator=", linkageName: "_ZN8rvectortaSEPKf", scope: !"_ZTS8rvectort", file: !9, line: 152, type: !219, isLocal: false, isDefinition: false, scopeLine: 152, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!219 = !DISubroutineType(types: !220)
!220 = !{null, !185, !221}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64, align: 64)
!222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !23)
!223 = !DISubprogram(name: "operator const float *", linkageName: "_ZNK8rvectortcvPKfEv", scope: !"_ZTS8rvectort", file: !9, line: 155, type: !224, isLocal: false, isDefinition: false, scopeLine: 155, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!224 = !DISubroutineType(types: !225)
!225 = !{!226, !180}
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64, align: 64)
!227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !22)
!228 = !DISubprogram(name: "operator float *", linkageName: "_ZN8rvectortcvPfEv", scope: !"_ZTS8rvectort", file: !9, line: 156, type: !229, isLocal: false, isDefinition: false, scopeLine: 156, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!229 = !DISubroutineType(types: !230)
!230 = !{!231, !185}
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64, align: 64)
!232 = !DISubprogram(name: "rvectort", scope: !"_ZTS8rvectort", file: !9, line: 158, type: !199, isLocal: false, isDefinition: false, scopeLine: 158, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!233 = !DISubprogram(name: "rvectort", scope: !"_ZTS8rvectort", file: !9, line: 159, type: !234, isLocal: false, isDefinition: false, scopeLine: 159, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!234 = !DISubroutineType(types: !235)
!235 = !{null, !185, !22, !22, !22}
!236 = !DICompositeType(tag: DW_TAG_class_type, name: "rmatrt", file: !9, line: 103, flags: DIFlagFwdDecl, identifier: "_ZTS6rmatrt")
!237 = !DICompositeType(tag: DW_TAG_structure_type, name: "waymapcellt", file: !5, line: 17, size: 32, align: 16, elements: !238, identifier: "_ZTS11waymapcellt")
!238 = !{!239, !240}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "fillnum", scope: !"_ZTS11waymapcellt", file: !5, line: 19, baseType: !51, size: 16, align: 16)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !"_ZTS11waymapcellt", file: !5, line: 20, baseType: !51, size: 16, align: 16, offset: 16)
!241 = !DICompositeType(tag: DW_TAG_structure_type, name: "wayinfot", file: !107, line: 22, size: 192, align: 64, elements: !242, identifier: "_ZTS8wayinfot")
!242 = !{!243, !244, !247, !248}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "flexist", scope: !"_ZTS8wayinfot", file: !107, line: 24, baseType: !47, size: 8, align: 8)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "wayarp", scope: !"_ZTS8wayinfot", file: !107, line: 25, baseType: !245, size: 64, align: 64, offset: 64)
!245 = !DIDerivedType(tag: DW_TAG_typedef, name: "rvectorpt", file: !9, line: 161, baseType: !246)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS8rvectort", size: 64, align: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "wayarsize", scope: !"_ZTS8wayinfot", file: !107, line: 26, baseType: !8, size: 32, align: 32, offset: 128)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "flcorrect", scope: !"_ZTS8wayinfot", file: !107, line: 27, baseType: !47, size: 8, align: 8, offset: 160)
!249 = !DICompositeType(tag: DW_TAG_structure_type, name: "point16t", file: !5, line: 10, size: 32, align: 16, elements: !250, identifier: "_ZTS8point16t")
!250 = !{!251, !252, !253}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !"_ZTS8point16t", file: !5, line: 12, baseType: !33, size: 16, align: 16)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !"_ZTS8point16t", file: !5, line: 12, baseType: !33, size: 16, align: 16, offset: 16)
!253 = !DISubprogram(name: "point16t", scope: !"_ZTS8point16t", file: !5, line: 13, type: !254, isLocal: false, isDefinition: false, scopeLine: 13, flags: DIFlagPrototyped, isOptimized: true)
!254 = !DISubroutineType(types: !255)
!255 = !{null, !256, !33, !33}
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS8point16t", size: 64, align: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!257 = !DICompositeType(tag: DW_TAG_structure_type, name: "levelplacet", file: !107, line: 6, size: 128, align: 32, elements: !258, identifier: "_ZTS11levelplacet")
!258 = !{!259, !260, !261, !262, !263}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !"_ZTS11levelplacet", file: !107, line: 8, baseType: !33, size: 16, align: 16)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !"_ZTS11levelplacet", file: !107, line: 8, baseType: !33, size: 16, align: 16, offset: 16)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !"_ZTS11levelplacet", file: !107, line: 9, baseType: !22, size: 32, align: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "ry", scope: !"_ZTS11levelplacet", file: !107, line: 9, baseType: !22, size: 32, align: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "hiding", scope: !"_ZTS11levelplacet", file: !107, line: 10, baseType: !22, size: 32, align: 32, offset: 96)
!264 = !DICompositeType(tag: DW_TAG_class_type, name: "flexarray<levelplacet>", file: !265, line: 9, size: 128, align: 64, elements: !266, templateParams: !301, identifier: "_ZTS9flexarrayI11levelplacetE")
!265 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/473.astar/src/Arrays.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!266 = !{!267, !268, !269, !270, !276, !279, !282, !283, !286, !289, !292, !295, !299, !300}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "ep", scope: !"_ZTS9flexarrayI11levelplacetE", file: !265, line: 13, baseType: !108, size: 64, align: 64, flags: DIFlagPublic)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "elemqu", scope: !"_ZTS9flexarrayI11levelplacetE", file: !265, line: 15, baseType: !8, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "maxelemqu", scope: !"_ZTS9flexarrayI11levelplacetE", file: !265, line: 16, baseType: !8, size: 32, align: 32, offset: 96, flags: DIFlagPublic)
!270 = !DISubprogram(name: "isinclude", linkageName: "_ZN9flexarrayI11levelplacetE9isincludeERKS0_", scope: !"_ZTS9flexarrayI11levelplacetE", file: !265, line: 19, type: !271, isLocal: false, isDefinition: false, scopeLine: 19, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!271 = !DISubroutineType(types: !272)
!272 = !{!47, !273, !274}
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS9flexarrayI11levelplacetE", size: 64, align: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!274 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !"_ZTS11levelplacet")
!276 = !DISubprogram(name: "add", linkageName: "_ZN9flexarrayI11levelplacetE3addERKS0_", scope: !"_ZTS9flexarrayI11levelplacetE", file: !265, line: 21, type: !277, isLocal: false, isDefinition: false, scopeLine: 21, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!277 = !DISubroutineType(types: !278)
!278 = !{null, !273, !274}
!279 = !DISubprogram(name: "add", linkageName: "_ZN9flexarrayI11levelplacetE3addEv", scope: !"_ZTS9flexarrayI11levelplacetE", file: !265, line: 22, type: !280, isLocal: false, isDefinition: false, scopeLine: 22, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!280 = !DISubroutineType(types: !281)
!281 = !{!108, !273}
!282 = !DISubprogram(name: "remove", linkageName: "_ZN9flexarrayI11levelplacetE6removeERKS0_", scope: !"_ZTS9flexarrayI11levelplacetE", file: !265, line: 23, type: !277, isLocal: false, isDefinition: false, scopeLine: 23, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!283 = !DISubprogram(name: "iselemqu", linkageName: "_ZN9flexarrayI11levelplacetE8iselemquEib", scope: !"_ZTS9flexarrayI11levelplacetE", file: !265, line: 25, type: !284, isLocal: false, isDefinition: false, scopeLine: 25, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!284 = !DISubroutineType(types: !285)
!285 = !{null, !273, !8, !47}
!286 = !DISubprogram(name: "enlarge", linkageName: "_ZN9flexarrayI11levelplacetE7enlargeEi", scope: !"_ZTS9flexarrayI11levelplacetE", file: !265, line: 27, type: !287, isLocal: false, isDefinition: false, scopeLine: 27, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!287 = !DISubroutineType(types: !288)
!288 = !{null, !273, !8}
!289 = !DISubprogram(name: "doubling", linkageName: "_ZN9flexarrayI11levelplacetE8doublingEb", scope: !"_ZTS9flexarrayI11levelplacetE", file: !265, line: 29, type: !290, isLocal: false, isDefinition: false, scopeLine: 29, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!290 = !DISubroutineType(types: !291)
!291 = !{null, !273, !47}
!292 = !DISubprogram(name: "clear", linkageName: "_ZN9flexarrayI11levelplacetE5clearEv", scope: !"_ZTS9flexarrayI11levelplacetE", file: !265, line: 31, type: !293, isLocal: false, isDefinition: false, scopeLine: 31, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!293 = !DISubroutineType(types: !294)
!294 = !{null, !273}
!295 = !DISubprogram(name: "operator[]", linkageName: "_ZN9flexarrayI11levelplacetEixEi", scope: !"_ZTS9flexarrayI11levelplacetE", file: !265, line: 33, type: !296, isLocal: false, isDefinition: false, scopeLine: 33, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!296 = !DISubroutineType(types: !297)
!297 = !{!298, !273, !8}
!298 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !"_ZTS11levelplacet")
!299 = !DISubprogram(name: "create", linkageName: "_ZN9flexarrayI11levelplacetE6createEi", scope: !"_ZTS9flexarrayI11levelplacetE", file: !265, line: 38, type: !287, isLocal: false, isDefinition: false, scopeLine: 38, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!300 = !DISubprogram(name: "destroy", linkageName: "_ZN9flexarrayI11levelplacetE7destroyEv", scope: !"_ZTS9flexarrayI11levelplacetE", file: !265, line: 39, type: !293, isLocal: false, isDefinition: false, scopeLine: 39, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!301 = !{!302}
!302 = !DITemplateTypeParameter(name: "eobj", type: !"_ZTS11levelplacet")
!303 = !{!304, !325, !333, !337, !341, !346, !350, !354, !359, !366, !369, !373, !379, !384}
!304 = !DISubprogram(name: "findfreepoints", linkageName: "_ZN6wayobj14findfreepointsE8rvectortiRi", scope: !"_ZTS6wayobj", file: !1, line: 9, type: !104, isLocal: false, isDefinition: true, scopeLine: 10, flags: DIFlagPrototyped, isOptimized: true, function: %struct.levelplacet* (%class.wayobj*, <2 x float>, float, i32, i32*)* @_ZN6wayobj14findfreepointsE8rvectortiRi, declaration: !103, variables: !305)
!305 = !{!306, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324}
!306 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !304, type: !307, flags: DIFlagArtificial | DIFlagObjectPointer)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS6wayobj", size: 64, align: 64)
!308 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "startp", arg: 2, scope: !304, file: !1, line: 9, type: !"_ZTS8rvectort")
!309 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "minpointqu", arg: 3, scope: !304, file: !1, line: 9, type: !8)
!310 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pointqu", arg: 4, scope: !304, file: !1, line: 9, type: !100)
!311 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "startx", scope: !304, file: !1, line: 11, type: !8)
!312 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "starty", scope: !304, file: !1, line: 11, type: !8)
!313 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "contour", scope: !304, file: !1, line: 12, type: !"_ZTS9flexarrayI11levelplacetE")
!314 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "minneighbourcoef", scope: !304, file: !1, line: 13, type: !8)
!315 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "place", scope: !304, file: !1, line: 14, type: !"_ZTS11levelplacet")
!316 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "placearp", scope: !304, file: !1, line: 15, type: !106)
!317 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fillnum", scope: !304, file: !1, line: 16, type: !51)
!318 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "neighboursqu", scope: !304, file: !1, line: 17, type: !8)
!319 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "yoffset", scope: !304, file: !1, line: 18, type: !8)
!320 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !304, file: !1, line: 19, type: !8)
!321 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index1", scope: !304, file: !1, line: 20, type: !8)
!322 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !304, file: !1, line: 21, type: !8)
!323 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !304, file: !1, line: 21, type: !8)
!324 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !304, file: !1, line: 22, type: !8)
!325 = !DISubprogram(name: "findverticalline", linkageName: "_ZN6wayobj16findverticallineEiiRiS0_", scope: !"_ZTS6wayobj", file: !1, line: 131, type: !110, isLocal: false, isDefinition: true, scopeLine: 132, flags: DIFlagPrototyped, isOptimized: true, function: i1 (%class.wayobj*, i32, i32, i32*, i32*)* @_ZN6wayobj16findverticallineEiiRiS0_, declaration: !109, variables: !326)
!326 = !{!327, !328, !329, !330, !331, !332}
!327 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !325, type: !307, flags: DIFlagArtificial | DIFlagObjectPointer)
!328 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 2, scope: !325, file: !1, line: 131, type: !8)
!329 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 3, scope: !325, file: !1, line: 131, type: !8)
!330 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y1", arg: 4, scope: !325, file: !1, line: 131, type: !100)
!331 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y2", arg: 5, scope: !325, file: !1, line: 131, type: !100)
!332 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "yy", scope: !325, file: !1, line: 133, type: !8)
!333 = !DISubprogram(name: "getx", linkageName: "_ZN6wayobj4getxEf", scope: !"_ZTS6wayobj", file: !5, line: 56, type: !56, isLocal: false, isDefinition: true, scopeLine: 56, flags: DIFlagPrototyped, isOptimized: true, declaration: !55, variables: !334)
!334 = !{!335, !336}
!335 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !333, type: !307, flags: DIFlagArtificial | DIFlagObjectPointer)
!336 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 2, scope: !333, file: !5, line: 56, type: !22)
!337 = !DISubprogram(name: "gety", linkageName: "_ZN6wayobj4getyEf", scope: !"_ZTS6wayobj", file: !5, line: 57, type: !56, isLocal: false, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: true, declaration: !59, variables: !338)
!338 = !{!339, !340}
!339 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !337, type: !307, flags: DIFlagArtificial | DIFlagObjectPointer)
!340 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 2, scope: !337, file: !5, line: 57, type: !22)
!341 = !DISubprogram(name: "map", linkageName: "_ZN6wayobj3mapEii", scope: !"_ZTS6wayobj", file: !5, line: 64, type: !71, isLocal: false, isDefinition: true, scopeLine: 64, flags: DIFlagPrototyped, isOptimized: true, declaration: !70, variables: !342)
!342 = !{!343, !344, !345}
!343 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !341, type: !307, flags: DIFlagArtificial | DIFlagObjectPointer)
!344 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 2, scope: !341, file: !5, line: 64, type: !8)
!345 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 3, scope: !341, file: !5, line: 64, type: !8)
!346 = !DISubprogram(name: "indexx", linkageName: "_ZN6wayobj6indexxEi", scope: !"_ZTS6wayobj", file: !5, line: 68, type: !81, isLocal: false, isDefinition: true, scopeLine: 68, flags: DIFlagPrototyped, isOptimized: true, declaration: !80, variables: !347)
!347 = !{!348, !349}
!348 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !346, type: !307, flags: DIFlagArtificial | DIFlagObjectPointer)
!349 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 2, scope: !346, file: !5, line: 68, type: !8)
!350 = !DISubprogram(name: "indexy", linkageName: "_ZN6wayobj6indexyEi", scope: !"_ZTS6wayobj", file: !5, line: 69, type: !81, isLocal: false, isDefinition: true, scopeLine: 69, flags: DIFlagPrototyped, isOptimized: true, declaration: !83, variables: !351)
!351 = !{!352, !353}
!352 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !350, type: !307, flags: DIFlagArtificial | DIFlagObjectPointer)
!353 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 2, scope: !350, file: !5, line: 69, type: !8)
!354 = !DISubprogram(name: "create", linkageName: "_ZN9flexarrayI11levelplacetE6createEi", scope: !"_ZTS9flexarrayI11levelplacetE", file: !265, line: 317, type: !287, isLocal: false, isDefinition: true, scopeLine: 318, flags: DIFlagPrototyped, isOptimized: true, declaration: !299, variables: !355)
!355 = !{!356, !358}
!356 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !354, type: !357, flags: DIFlagArtificial | DIFlagObjectPointer)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS9flexarrayI11levelplacetE", size: 64, align: 64)
!358 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "maxelemquin", arg: 2, scope: !354, file: !265, line: 38, type: !8)
!359 = !DISubprogram(name: "_aligned_malloc", linkageName: "_Z15_aligned_mallocii", scope: !265, file: !265, line: 215, type: !360, isLocal: false, isDefinition: true, scopeLine: 216, flags: DIFlagPrototyped, isOptimized: true, variables: !363)
!360 = !DISubroutineType(types: !361)
!361 = !{!362, !8, !8}
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!363 = !{!364, !365}
!364 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 1, scope: !359, file: !265, line: 215, type: !8)
!365 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "align", arg: 2, scope: !359, file: !265, line: 215, type: !8)
!366 = !DISubprogram(name: "clear", linkageName: "_ZN9flexarrayI11levelplacetE5clearEv", scope: !"_ZTS9flexarrayI11levelplacetE", file: !265, line: 312, type: !293, isLocal: false, isDefinition: true, scopeLine: 313, flags: DIFlagPrototyped, isOptimized: true, declaration: !292, variables: !367)
!367 = !{!368}
!368 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !366, type: !357, flags: DIFlagArtificial | DIFlagObjectPointer)
!369 = !DISubprogram(name: "add", linkageName: "_ZN9flexarrayI11levelplacetE3addERKS0_", scope: !"_ZTS9flexarrayI11levelplacetE", file: !265, line: 240, type: !277, isLocal: false, isDefinition: true, scopeLine: 241, flags: DIFlagPrototyped, isOptimized: true, function: void (%class.flexarray*, %struct.levelplacet*)* @_ZN9flexarrayI11levelplacetE3addERKS0_, declaration: !276, variables: !370)
!370 = !{!371, !372}
!371 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !369, type: !357, flags: DIFlagArtificial | DIFlagObjectPointer)
!372 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "e", arg: 2, scope: !369, file: !265, line: 21, type: !274)
!373 = !DISubprogram(name: "doubling", linkageName: "_ZN9flexarrayI11levelplacetE8doublingEb", scope: !"_ZTS9flexarrayI11levelplacetE", file: !265, line: 294, type: !290, isLocal: false, isDefinition: true, scopeLine: 295, flags: DIFlagPrototyped, isOptimized: true, declaration: !289, variables: !374)
!374 = !{!375, !376, !377, !378}
!375 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !373, type: !357, flags: DIFlagArtificial | DIFlagObjectPointer)
!376 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "flcopy", arg: 2, scope: !373, file: !265, line: 29, type: !47)
!377 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newep", scope: !373, file: !265, line: 296, type: !108)
!378 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newelemqu", scope: !373, file: !265, line: 297, type: !8)
!379 = !DISubprogram(name: "_aligned_free", linkageName: "_Z13_aligned_freePv", scope: !265, file: !265, line: 220, type: !380, isLocal: false, isDefinition: true, scopeLine: 221, flags: DIFlagPrototyped, isOptimized: true, variables: !382)
!380 = !DISubroutineType(types: !381)
!381 = !{null, !362}
!382 = !{!383}
!383 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 1, scope: !379, file: !265, line: 220, type: !362)
!384 = !DISubprogram(name: "destroy", linkageName: "_ZN9flexarrayI11levelplacetE7destroyEv", scope: !"_ZTS9flexarrayI11levelplacetE", file: !265, line: 324, type: !293, isLocal: false, isDefinition: true, scopeLine: 325, flags: DIFlagPrototyped, isOptimized: true, declaration: !300, variables: !385)
!385 = !{!386}
!386 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !384, type: !357, flags: DIFlagArtificial | DIFlagObjectPointer)
!387 = !{i32 2, !"Dwarf Version", i32 2}
!388 = !{i32 2, !"Debug Info Version", i32 700000003}
!389 = !{i32 1, !"PIC Level", i32 2}
!390 = !{!"Apple LLVM version 7.0.0 (clang-700.1.76)"}
!391 = !DIExpression(DW_OP_bit_piece, 0, 64)
!392 = !DILocation(line: 9, column: 46, scope: !304)
!393 = !DIExpression(DW_OP_bit_piece, 64, 32)
!394 = !DIExpression()
!395 = !DILocation(line: 0, scope: !304)
!396 = !DILocation(line: 9, column: 58, scope: !304)
!397 = !DILocation(line: 9, column: 75, scope: !304)
!398 = !DILocation(line: 25, column: 22, scope: !304)
!399 = !DILocation(line: 0, scope: !333, inlinedAt: !400)
!400 = distinct !DILocation(line: 25, column: 10, scope: !304)
!401 = !DILocation(line: 56, column: 25, scope: !333, inlinedAt: !400)
!402 = !DILocation(line: 56, column: 45, scope: !333, inlinedAt: !400)
!403 = !{!404, !408, i64 36}
!404 = !{!"_ZTS6wayobj", !405, i64 0, !405, i64 4, !405, i64 8, !405, i64 12, !405, i64 16, !405, i64 20, !405, i64 24, !405, i64 28, !405, i64 32, !408, i64 36, !408, i64 40, !408, i64 44, !408, i64 48, !408, i64 52, !409, i64 56, !410, i64 88, !413, i64 120, !413, i64 128, !413, i64 136, !413, i64 144, !405, i64 152, !405, i64 156, !412, i64 160, !405, i64 164, !414, i64 168, !414, i64 170}
!405 = !{!"int", !406, i64 0}
!406 = !{!"omnipotent char", !407, i64 0}
!407 = !{!"Simple C/C++ TBAA"}
!408 = !{!"float", !406, i64 0}
!409 = !{!"_ZTS17createwaymnginfot", !408, i64 0, !408, i64 4, !408, i64 8, !408, i64 12, !405, i64 16, !405, i64 20, !408, i64 24, !408, i64 28}
!410 = !{!"_ZTS14createwayinfot", !411, i64 0, !411, i64 12, !412, i64 24}
!411 = !{!"_ZTS8rvectort", !408, i64 0, !408, i64 4, !408, i64 8}
!412 = !{!"bool", !406, i64 0}
!413 = !{!"any pointer", !406, i64 0}
!414 = !{!"short", !406, i64 0}
!415 = !DILocation(line: 56, column: 44, scope: !333, inlinedAt: !400)
!416 = !DILocation(line: 56, column: 52, scope: !333, inlinedAt: !400)
!417 = !{!404, !408, i64 40}
!418 = !DILocation(line: 56, column: 51, scope: !333, inlinedAt: !400)
!419 = !DILocation(line: 56, column: 42, scope: !333, inlinedAt: !400)
!420 = !DILocation(line: 11, column: 7, scope: !304)
!421 = !DILocation(line: 25, column: 9, scope: !304)
!422 = !{!405, !405, i64 0}
!423 = !DILocation(line: 0, scope: !337, inlinedAt: !424)
!424 = distinct !DILocation(line: 26, column: 10, scope: !304)
!425 = !DILocation(line: 57, column: 25, scope: !337, inlinedAt: !424)
!426 = !DILocation(line: 57, column: 45, scope: !337, inlinedAt: !424)
!427 = !{!404, !408, i64 44}
!428 = !DILocation(line: 57, column: 44, scope: !337, inlinedAt: !424)
!429 = !DILocation(line: 57, column: 52, scope: !337, inlinedAt: !424)
!430 = !{!404, !408, i64 48}
!431 = !DILocation(line: 57, column: 51, scope: !337, inlinedAt: !424)
!432 = !DILocation(line: 57, column: 42, scope: !337, inlinedAt: !424)
!433 = !DILocation(line: 11, column: 14, scope: !304)
!434 = !DILocation(line: 26, column: 9, scope: !304)
!435 = !DILocation(line: 28, column: 8, scope: !436)
!436 = distinct !DILexicalBlock(scope: !304, file: !1, line: 28, column: 7)
!437 = !DILocation(line: 28, column: 7, scope: !304)
!438 = !DILocation(line: 30, column: 12, scope: !439)
!439 = distinct !DILexicalBlock(scope: !436, file: !1, line: 29, column: 3)
!440 = !{!404, !405, i64 28}
!441 = !DILocation(line: 30, column: 17, scope: !439)
!442 = !DILocation(line: 30, column: 11, scope: !439)
!443 = !DILocation(line: 31, column: 12, scope: !439)
!444 = !{!404, !405, i64 32}
!445 = !DILocation(line: 31, column: 17, scope: !439)
!446 = !DILocation(line: 31, column: 11, scope: !439)
!447 = !DILocation(line: 32, column: 3, scope: !439)
!448 = !DILocation(line: 0, scope: !341, inlinedAt: !449)
!449 = distinct !DILocation(line: 34, column: 7, scope: !450)
!450 = distinct !DILexicalBlock(scope: !304, file: !1, line: 34, column: 7)
!451 = !DILocation(line: 64, column: 23, scope: !341, inlinedAt: !449)
!452 = !DILocation(line: 64, column: 30, scope: !341, inlinedAt: !449)
!453 = !DILocation(line: 64, column: 52, scope: !341, inlinedAt: !449)
!454 = !{!404, !405, i64 8}
!455 = !DILocation(line: 64, column: 50, scope: !341, inlinedAt: !449)
!456 = !DILocation(line: 64, column: 57, scope: !341, inlinedAt: !449)
!457 = !DILocation(line: 64, column: 42, scope: !341, inlinedAt: !449)
!458 = !{!404, !413, i64 120}
!459 = !DILocation(line: 34, column: 7, scope: !450)
!460 = !{!414, !414, i64 0}
!461 = !DILocation(line: 34, column: 25, scope: !450)
!462 = !DILocation(line: 34, column: 7, scope: !304)
!463 = !DILocation(line: 35, column: 9, scope: !464)
!464 = distinct !DILexicalBlock(scope: !450, file: !1, line: 35, column: 9)
!465 = !DILocation(line: 35, column: 9, scope: !450)
!466 = !DILocation(line: 38, column: 8, scope: !304)
!467 = !DILocation(line: 38, column: 15, scope: !304)
!468 = !DILocation(line: 38, column: 3, scope: !304)
!469 = !DILocation(line: 39, column: 19, scope: !304)
!470 = !{!404, !414, i64 170}
!471 = !DILocation(line: 16, column: 7, scope: !304)
!472 = !DILocation(line: 42, column: 18, scope: !304)
!473 = !DILocation(line: 42, column: 23, scope: !304)
!474 = !DILocation(line: 12, column: 27, scope: !304)
!475 = !DILocation(line: 0, scope: !354, inlinedAt: !476)
!476 = distinct !DILocation(line: 42, column: 3, scope: !304)
!477 = !DILocation(line: 38, column: 19, scope: !354, inlinedAt: !476)
!478 = !DILocation(line: 319, column: 3, scope: !354, inlinedAt: !476)
!479 = !DILocation(line: 319, column: 12, scope: !354, inlinedAt: !476)
!480 = !{!481, !405, i64 12}
!481 = !{!"_ZTS9flexarrayI11levelplacetE", !413, i64 0, !405, i64 8, !405, i64 12}
!482 = !DILocation(line: 320, column: 3, scope: !354, inlinedAt: !476)
!483 = !DILocation(line: 320, column: 9, scope: !354, inlinedAt: !476)
!484 = !{!481, !405, i64 8}
!485 = !DILocation(line: 321, column: 46, scope: !354, inlinedAt: !476)
!486 = !DILocation(line: 215, column: 34, scope: !359, inlinedAt: !487)
!487 = distinct !DILocation(line: 321, column: 13, scope: !354, inlinedAt: !476)
!488 = !DILocation(line: 215, column: 44, scope: !359, inlinedAt: !487)
!489 = !DILocation(line: 217, column: 17, scope: !359, inlinedAt: !487)
!490 = !DILocation(line: 217, column: 10, scope: !359, inlinedAt: !487)
!491 = !DILocation(line: 321, column: 5, scope: !354, inlinedAt: !476)
!492 = !{!481, !413, i64 0}
!493 = !DILocation(line: 43, column: 11, scope: !304)
!494 = !DILocation(line: 18, column: 7, scope: !304)
!495 = !DILocation(line: 13, column: 7, scope: !304)
!496 = !DILocation(line: 50, column: 17, scope: !497)
!497 = distinct !DILexicalBlock(scope: !498, file: !1, line: 50, column: 5)
!498 = distinct !DILexicalBlock(scope: !499, file: !1, line: 50, column: 5)
!499 = distinct !DILexicalBlock(scope: !304, file: !1, line: 47, column: 3)
!500 = !DILocation(line: 51, column: 19, scope: !501)
!501 = distinct !DILexicalBlock(scope: !502, file: !1, line: 51, column: 7)
!502 = distinct !DILexicalBlock(scope: !497, file: !1, line: 51, column: 7)
!503 = !DILocation(line: 55, column: 13, scope: !504)
!504 = distinct !DILexicalBlock(scope: !505, file: !1, line: 55, column: 13)
!505 = distinct !DILexicalBlock(scope: !501, file: !1, line: 52, column: 7)
!506 = !DILocation(line: 68, column: 47, scope: !346, inlinedAt: !507)
!507 = distinct !DILocation(line: 94, column: 21, scope: !508)
!508 = distinct !DILexicalBlock(scope: !509, file: !1, line: 93, column: 11)
!509 = distinct !DILexicalBlock(scope: !510, file: !1, line: 92, column: 15)
!510 = distinct !DILexicalBlock(scope: !504, file: !1, line: 56, column: 9)
!511 = !DILocation(line: 94, column: 19, scope: !508)
!512 = !DILocation(line: 95, column: 19, scope: !508)
!513 = !DILocation(line: 96, column: 19, scope: !508)
!514 = !{!404, !405, i64 16}
!515 = !DILocation(line: 46, column: 3, scope: !304)
!516 = !DILocation(line: 0, scope: !366, inlinedAt: !517)
!517 = distinct !DILocation(line: 48, column: 5, scope: !499)
!518 = !DILocation(line: 314, column: 9, scope: !366, inlinedAt: !517)
!519 = !DILocation(line: 21, column: 9, scope: !304)
!520 = !DILocation(line: 50, column: 16, scope: !497)
!521 = !DILocation(line: 50, column: 5, scope: !498)
!522 = !{!404, !405, i64 12}
!523 = !DILocation(line: 51, column: 18, scope: !501)
!524 = !DILocation(line: 51, column: 7, scope: !502)
!525 = !DILocation(line: 53, column: 18, scope: !505)
!526 = !DILocation(line: 53, column: 16, scope: !505)
!527 = !DILocation(line: 53, column: 23, scope: !505)
!528 = !DILocation(line: 19, column: 7, scope: !304)
!529 = !{!404, !413, i64 128}
!530 = !DILocation(line: 55, column: 27, scope: !504)
!531 = !{!532, !414, i64 0}
!532 = !{!"_ZTS11waymapcellt", !414, i64 0, !414, i64 2}
!533 = !DILocation(line: 55, column: 34, scope: !504)
!534 = !DILocation(line: 55, column: 13, scope: !505)
!535 = !DILocation(line: 17, column: 7, scope: !304)
!536 = !DILocation(line: 59, column: 23, scope: !510)
!537 = !DILocation(line: 59, column: 31, scope: !510)
!538 = !DILocation(line: 20, column: 7, scope: !304)
!539 = !DILocation(line: 60, column: 15, scope: !540)
!540 = distinct !DILexicalBlock(scope: !510, file: !1, line: 60, column: 15)
!541 = !DILocation(line: 60, column: 15, scope: !510)
!542 = !DILocation(line: 64, column: 15, scope: !543)
!543 = distinct !DILexicalBlock(scope: !510, file: !1, line: 64, column: 15)
!544 = !DILocation(line: 64, column: 29, scope: !543)
!545 = !DILocation(line: 65, column: 25, scope: !543)
!546 = !DILocation(line: 64, column: 15, scope: !510)
!547 = !DILocation(line: 67, column: 31, scope: !510)
!548 = !DILocation(line: 68, column: 15, scope: !549)
!549 = distinct !DILexicalBlock(scope: !510, file: !1, line: 68, column: 15)
!550 = !DILocation(line: 68, column: 15, scope: !510)
!551 = !DILocation(line: 71, column: 23, scope: !510)
!552 = !DILocation(line: 72, column: 15, scope: !553)
!553 = distinct !DILexicalBlock(scope: !510, file: !1, line: 72, column: 15)
!554 = !DILocation(line: 72, column: 15, scope: !510)
!555 = !DILocation(line: 75, column: 23, scope: !510)
!556 = !DILocation(line: 76, column: 15, scope: !557)
!557 = distinct !DILexicalBlock(scope: !510, file: !1, line: 76, column: 15)
!558 = !DILocation(line: 76, column: 15, scope: !510)
!559 = !DILocation(line: 79, column: 23, scope: !510)
!560 = !DILocation(line: 79, column: 31, scope: !510)
!561 = !DILocation(line: 80, column: 15, scope: !562)
!562 = distinct !DILexicalBlock(scope: !510, file: !1, line: 80, column: 15)
!563 = !DILocation(line: 80, column: 15, scope: !510)
!564 = !DILocation(line: 84, column: 15, scope: !565)
!565 = distinct !DILexicalBlock(scope: !510, file: !1, line: 84, column: 15)
!566 = !DILocation(line: 84, column: 15, scope: !510)
!567 = !DILocation(line: 87, column: 31, scope: !510)
!568 = !DILocation(line: 88, column: 15, scope: !569)
!569 = distinct !DILexicalBlock(scope: !510, file: !1, line: 88, column: 15)
!570 = !DILocation(line: 88, column: 15, scope: !510)
!571 = !DILocation(line: 92, column: 27, scope: !509)
!572 = !DILocation(line: 92, column: 15, scope: !510)
!573 = !DILocation(line: 0, scope: !346, inlinedAt: !507)
!574 = !DILocation(line: 68, column: 25, scope: !346, inlinedAt: !507)
!575 = !{!404, !405, i64 156}
!576 = !DILocation(line: 68, column: 46, scope: !346, inlinedAt: !507)
!577 = !DILocation(line: 94, column: 21, scope: !508)
!578 = !DILocation(line: 94, column: 20, scope: !508)
!579 = !{!580, !414, i64 0}
!580 = !{!"_ZTS11levelplacet", !414, i64 0, !414, i64 2, !408, i64 4, !408, i64 8, !408, i64 12}
!581 = !DILocation(line: 0, scope: !350, inlinedAt: !582)
!582 = distinct !DILocation(line: 95, column: 21, scope: !508)
!583 = !DILocation(line: 69, column: 25, scope: !350, inlinedAt: !582)
!584 = !DILocation(line: 69, column: 46, scope: !350, inlinedAt: !582)
!585 = !DILocation(line: 95, column: 21, scope: !508)
!586 = !DILocation(line: 95, column: 20, scope: !508)
!587 = !{!580, !414, i64 2}
!588 = !DILocation(line: 96, column: 26, scope: !508)
!589 = !DILocation(line: 96, column: 38, scope: !508)
!590 = !DILocation(line: 96, column: 25, scope: !508)
!591 = !{!580, !408, i64 12}
!592 = !DILocation(line: 14, column: 15, scope: !304)
!593 = !DILocation(line: 97, column: 13, scope: !508)
!594 = !DILocation(line: 98, column: 11, scope: !508)
!595 = !DILocation(line: 51, column: 29, scope: !501)
!596 = !DILocation(line: 21, column: 7, scope: !304)
!597 = !DILocation(line: 50, column: 27, scope: !497)
!598 = !DILocation(line: 104, column: 19, scope: !304)
!599 = !DILocation(line: 102, column: 21, scope: !499)
!600 = !DILocation(line: 104, column: 25, scope: !304)
!601 = !DILocation(line: 104, column: 56, scope: !304)
!602 = !DILocation(line: 104, column: 37, scope: !304)
!603 = !DILocation(line: 107, column: 23, scope: !604)
!604 = distinct !DILexicalBlock(scope: !304, file: !1, line: 107, column: 7)
!605 = !DILocation(line: 107, column: 7, scope: !304)
!606 = !DILocation(line: 0, scope: !384, inlinedAt: !607)
!607 = distinct !DILocation(line: 109, column: 5, scope: !608)
!608 = distinct !DILexicalBlock(scope: !604, file: !1, line: 108, column: 3)
!609 = !DILocation(line: 326, column: 17, scope: !384, inlinedAt: !607)
!610 = !DILocation(line: 220, column: 33, scope: !379, inlinedAt: !611)
!611 = distinct !DILocation(line: 326, column: 3, scope: !384, inlinedAt: !607)
!612 = !DILocation(line: 222, column: 3, scope: !379, inlinedAt: !611)
!613 = !DILocation(line: 110, column: 5, scope: !608)
!614 = !DILocation(line: 113, column: 10, scope: !304)
!615 = !DILocation(line: 114, column: 12, scope: !304)
!616 = !DILocation(line: 15, column: 16, scope: !304)
!617 = !DILocation(line: 22, column: 7, scope: !304)
!618 = !DILocation(line: 116, column: 14, scope: !619)
!619 = distinct !DILexicalBlock(scope: !620, file: !1, line: 116, column: 3)
!620 = distinct !DILexicalBlock(scope: !304, file: !1, line: 116, column: 3)
!621 = !DILocation(line: 116, column: 3, scope: !620)
!622 = !DILocation(line: 326, column: 17, scope: !384, inlinedAt: !623)
!623 = distinct !DILocation(line: 125, column: 3, scope: !304)
!624 = !DILocation(line: 118, column: 27, scope: !625)
!625 = distinct !DILexicalBlock(scope: !619, file: !1, line: 117, column: 3)
!626 = !DILocation(line: 120, column: 25, scope: !625)
!627 = !{!404, !408, i64 56}
!628 = !DILocation(line: 120, column: 30, scope: !625)
!629 = !{!404, !408, i64 52}
!630 = !DILocation(line: 120, column: 29, scope: !625)
!631 = !DILocation(line: 120, column: 65, scope: !625)
!632 = !{!404, !408, i64 60}
!633 = !DILocation(line: 120, column: 69, scope: !625)
!634 = !DILocation(line: 120, column: 81, scope: !625)
!635 = !DILocation(line: 121, column: 25, scope: !625)
!636 = !{!404, !408, i64 64}
!637 = !DILocation(line: 121, column: 29, scope: !625)
!638 = !DILocation(line: 121, column: 65, scope: !625)
!639 = !{!404, !408, i64 68}
!640 = !DILocation(line: 121, column: 69, scope: !625)
!641 = !DILocation(line: 121, column: 81, scope: !625)
!642 = !DILocation(line: 118, column: 33, scope: !625)
!643 = !DILocation(line: 118, column: 17, scope: !625)
!644 = !DILocation(line: 118, column: 18, scope: !625)
!645 = !DILocation(line: 119, column: 33, scope: !625)
!646 = !DILocation(line: 119, column: 17, scope: !625)
!647 = !DILocation(line: 119, column: 18, scope: !625)
!648 = !DILocation(line: 120, column: 44, scope: !625)
!649 = !DILocation(line: 120, column: 58, scope: !625)
!650 = !DILocation(line: 120, column: 80, scope: !625)
!651 = !DILocation(line: 120, column: 35, scope: !625)
!652 = !DILocation(line: 120, column: 17, scope: !625)
!653 = !DILocation(line: 120, column: 19, scope: !625)
!654 = !{!580, !408, i64 4}
!655 = !DILocation(line: 121, column: 44, scope: !625)
!656 = !DILocation(line: 121, column: 58, scope: !625)
!657 = !DILocation(line: 121, column: 80, scope: !625)
!658 = !DILocation(line: 121, column: 35, scope: !625)
!659 = !DILocation(line: 121, column: 17, scope: !625)
!660 = !DILocation(line: 121, column: 19, scope: !625)
!661 = !{!580, !408, i64 8}
!662 = !DILocation(line: 122, column: 38, scope: !625)
!663 = !DILocation(line: 122, column: 17, scope: !625)
!664 = !DILocation(line: 122, column: 23, scope: !625)
!665 = !DILocation(line: 0, scope: !384, inlinedAt: !623)
!666 = !DILocation(line: 220, column: 33, scope: !379, inlinedAt: !667)
!667 = distinct !DILocation(line: 326, column: 3, scope: !384, inlinedAt: !623)
!668 = !DILocation(line: 222, column: 3, scope: !379, inlinedAt: !667)
!669 = !DILocation(line: 127, column: 3, scope: !304)
!670 = !DILocation(line: 128, column: 1, scope: !304)
!671 = !DILocation(line: 0, scope: !369)
!672 = !DILocation(line: 21, column: 24, scope: !369)
!673 = !DILocation(line: 242, column: 7, scope: !674)
!674 = distinct !DILexicalBlock(scope: !369, file: !265, line: 242, column: 7)
!675 = !DILocation(line: 242, column: 15, scope: !674)
!676 = !DILocation(line: 242, column: 13, scope: !674)
!677 = !DILocation(line: 242, column: 7, scope: !369)
!678 = !DILocation(line: 244, column: 3, scope: !369)
!679 = !DILocation(line: 0, scope: !373, inlinedAt: !680)
!680 = distinct !DILocation(line: 242, column: 26, scope: !674)
!681 = !DILocation(line: 29, column: 22, scope: !373, inlinedAt: !680)
!682 = !DILocation(line: 300, column: 22, scope: !373, inlinedAt: !680)
!683 = !DILocation(line: 297, column: 7, scope: !373, inlinedAt: !680)
!684 = !DILocation(line: 302, column: 47, scope: !373, inlinedAt: !680)
!685 = !DILocation(line: 215, column: 34, scope: !359, inlinedAt: !686)
!686 = distinct !DILocation(line: 302, column: 16, scope: !373, inlinedAt: !680)
!687 = !DILocation(line: 215, column: 44, scope: !359, inlinedAt: !686)
!688 = !DILocation(line: 217, column: 17, scope: !359, inlinedAt: !686)
!689 = !DILocation(line: 217, column: 10, scope: !359, inlinedAt: !686)
!690 = !DILocation(line: 305, column: 18, scope: !691, inlinedAt: !680)
!691 = distinct !DILexicalBlock(scope: !373, file: !265, line: 304, column: 7)
!692 = !DILocation(line: 305, column: 21, scope: !691, inlinedAt: !680)
!693 = !DILocation(line: 305, column: 30, scope: !691, inlinedAt: !680)
!694 = !DILocation(line: 305, column: 5, scope: !691, inlinedAt: !680)
!695 = !DILocation(line: 220, column: 33, scope: !379, inlinedAt: !696)
!696 = distinct !DILocation(line: 307, column: 3, scope: !373, inlinedAt: !680)
!697 = !DILocation(line: 222, column: 3, scope: !379, inlinedAt: !696)
!698 = !DILocation(line: 308, column: 5, scope: !373, inlinedAt: !680)
!699 = !DILocation(line: 309, column: 12, scope: !373, inlinedAt: !680)
!700 = !DILocation(line: 244, column: 6, scope: !369)
!701 = !DILocation(line: 242, column: 26, scope: !674)
!702 = !DILocation(line: 244, column: 13, scope: !369)
!703 = !{i64 0, i64 2, !460, i64 2, i64 2, !460, i64 4, i64 4, !704, i64 8, i64 4, !704, i64 12, i64 4, !704}
!704 = !{!408, !408, i64 0}
!705 = !DILocation(line: 246, column: 9, scope: !369)
!706 = !DILocation(line: 247, column: 1, scope: !369)
!707 = !DILocation(line: 0, scope: !325)
!708 = !DILocation(line: 131, column: 35, scope: !325)
!709 = !DILocation(line: 131, column: 42, scope: !325)
!710 = !DILocation(line: 131, column: 50, scope: !325)
!711 = !DILocation(line: 131, column: 59, scope: !325)
!712 = !DILocation(line: 135, column: 5, scope: !325)
!713 = !DILocation(line: 136, column: 5, scope: !325)
!714 = !DILocation(line: 133, column: 7, scope: !325)
!715 = !DILocation(line: 137, column: 17, scope: !716)
!716 = distinct !DILexicalBlock(scope: !717, file: !1, line: 137, column: 3)
!717 = distinct !DILexicalBlock(scope: !325, file: !1, line: 137, column: 3)
!718 = !DILocation(line: 137, column: 16, scope: !716)
!719 = !DILocation(line: 137, column: 3, scope: !717)
!720 = !DILocation(line: 64, column: 52, scope: !341, inlinedAt: !721)
!721 = distinct !DILocation(line: 138, column: 9, scope: !722)
!722 = distinct !DILexicalBlock(scope: !716, file: !1, line: 138, column: 9)
!723 = !DILocation(line: 64, column: 42, scope: !341, inlinedAt: !721)
!724 = !DILocation(line: 143, column: 16, scope: !725)
!725 = distinct !DILexicalBlock(scope: !726, file: !1, line: 143, column: 3)
!726 = distinct !DILexicalBlock(scope: !325, file: !1, line: 143, column: 3)
!727 = !DILocation(line: 143, column: 3, scope: !726)
!728 = !DILocation(line: 64, column: 52, scope: !341, inlinedAt: !729)
!729 = distinct !DILocation(line: 144, column: 9, scope: !730)
!730 = distinct !DILexicalBlock(scope: !725, file: !1, line: 144, column: 9)
!731 = !DILocation(line: 64, column: 42, scope: !341, inlinedAt: !729)
!732 = !DILocation(line: 0, scope: !341, inlinedAt: !721)
!733 = !DILocation(line: 64, column: 23, scope: !341, inlinedAt: !721)
!734 = !DILocation(line: 64, column: 30, scope: !341, inlinedAt: !721)
!735 = !DILocation(line: 64, column: 50, scope: !341, inlinedAt: !721)
!736 = !DILocation(line: 64, column: 57, scope: !341, inlinedAt: !721)
!737 = !DILocation(line: 138, column: 9, scope: !722)
!738 = !DILocation(line: 138, column: 18, scope: !722)
!739 = !DILocation(line: 138, column: 9, scope: !716)
!740 = !DILocation(line: 140, column: 9, scope: !741)
!741 = distinct !DILexicalBlock(scope: !722, file: !1, line: 139, column: 5)
!742 = !DILocation(line: 141, column: 7, scope: !741)
!743 = !DILocation(line: 137, column: 26, scope: !716)
!744 = !DILocation(line: 0, scope: !341, inlinedAt: !729)
!745 = !DILocation(line: 64, column: 23, scope: !341, inlinedAt: !729)
!746 = !DILocation(line: 64, column: 30, scope: !341, inlinedAt: !729)
!747 = !DILocation(line: 64, column: 50, scope: !341, inlinedAt: !729)
!748 = !DILocation(line: 64, column: 57, scope: !341, inlinedAt: !729)
!749 = !DILocation(line: 144, column: 9, scope: !730)
!750 = !DILocation(line: 144, column: 18, scope: !730)
!751 = !DILocation(line: 144, column: 9, scope: !725)
!752 = !DILocation(line: 146, column: 9, scope: !753)
!753 = distinct !DILexicalBlock(scope: !730, file: !1, line: 145, column: 5)
!754 = !DILocation(line: 147, column: 7, scope: !753)
!755 = !DILocation(line: 143, column: 22, scope: !725)
!756 = !DILocation(line: 150, column: 3, scope: !325)
