; ModuleID = '../../SPEC_CPU2006v1.1/benchspec/CPU2006/473.astar/src/WayInit_.cpp'
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.10.0"

%class.wayobj = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, float, %struct.createwaymnginfot, %struct.createwayinfot, [4 x i8], i16*, %struct.waymapcellt*, i32*, i32*, i32, i32, i8, [3 x i8], i32, i16, i16, [4 x i8] }>
%struct.createwaymnginfot = type { float, float, float, float, i32, i32, float, float }
%struct.createwayinfot = type <{ %class.rvectort, %class.rvectort, i8, [3 x i8] }>
%class.rvectort = type { float, float, float }
%struct.waymapcellt = type { i16, i16 }

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN6wayobj9addsphereERK8rvectortf(%class.wayobj* nocapture readonly %this, %class.rvectort* nocapture readonly dereferenceable(12) %centerp, float %radius) #0 align 2 {
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !274, metadata !358), !dbg !359
  tail call void @llvm.dbg.value(metadata %class.rvectort* %centerp, i64 0, metadata !276, metadata !358), !dbg !360
  tail call void @llvm.dbg.value(metadata float %radius, i64 0, metadata !277, metadata !358), !dbg !361
  %1 = getelementptr inbounds %class.rvectort* %centerp, i64 0, i32 1, !dbg !362
  %2 = load float* %1, align 4, !dbg !362, !tbaa !364
  %3 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 14, i32 7, !dbg !369
  %4 = load float* %3, align 4, !dbg !369, !tbaa !370
  %5 = fcmp ult float %2, %4, !dbg !378
  br i1 %5, label %13, label %6, !dbg !379

; <label>:6                                       ; preds = %0
  %7 = fmul float %radius, %radius, !dbg !380
  %8 = fsub float %2, %4, !dbg !382
  tail call void @llvm.dbg.value(metadata float %8, i64 0, metadata !353, metadata !358), !dbg !383
  %9 = fmul float %8, %8, !dbg !385
  %10 = fsub float %7, %9, !dbg !386
  tail call void @llvm.dbg.value(metadata float %10, i64 0, metadata !284, metadata !358), !dbg !387
  %11 = fcmp ugt float %10, 0.000000e+00, !dbg !388
  br i1 %11, label %12, label %.loopexit, !dbg !390

; <label>:12                                      ; preds = %6
  %sqrtf4 = tail call float @sqrtf(float %10) #5, !dbg !391
  tail call void @llvm.dbg.value(metadata float %sqrtf4, i64 0, metadata !277, metadata !358), !dbg !361
  br label %24, !dbg !392

; <label>:13                                      ; preds = %0
  %14 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 14, i32 6, !dbg !393
  %15 = load float* %14, align 4, !dbg !393, !tbaa !395
  %16 = fcmp ugt float %2, %15, !dbg !396
  br i1 %16, label %24, label %17, !dbg !397

; <label>:17                                      ; preds = %13
  %18 = fmul float %radius, %radius, !dbg !398
  %19 = fsub float %15, %2, !dbg !400
  tail call void @llvm.dbg.value(metadata float %19, i64 0, metadata !353, metadata !358), !dbg !401
  %20 = fmul float %19, %19, !dbg !403
  %21 = fsub float %18, %20, !dbg !404
  tail call void @llvm.dbg.value(metadata float %21, i64 0, metadata !284, metadata !358), !dbg !387
  %22 = fcmp ugt float %21, 0.000000e+00, !dbg !405
  br i1 %22, label %23, label %.loopexit, !dbg !407

; <label>:23                                      ; preds = %17
  %sqrtf = tail call float @sqrtf(float %21) #5, !dbg !408
  tail call void @llvm.dbg.value(metadata float %sqrtf, i64 0, metadata !277, metadata !358), !dbg !361
  br label %24, !dbg !409

; <label>:24                                      ; preds = %13, %23, %12
  %.0 = phi float [ %sqrtf4, %12 ], [ %sqrtf, %23 ], [ %radius, %13 ]
  %25 = getelementptr inbounds %class.rvectort* %centerp, i64 0, i32 0, !dbg !410
  %26 = load float* %25, align 4, !dbg !410, !tbaa !411
  %27 = fsub float %26, %.0, !dbg !412
  %28 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 13, !dbg !413
  %29 = load float* %28, align 4, !dbg !413, !tbaa !414
  %30 = fsub float %27, %29, !dbg !415
  %31 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 9, !dbg !416
  %32 = load float* %31, align 4, !dbg !416, !tbaa !417
  %33 = fmul float %30, %32, !dbg !418
  %34 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 10, !dbg !419
  %35 = load float* %34, align 4, !dbg !419, !tbaa !420
  %36 = fadd float %33, %35, !dbg !421
  %37 = fptosi float %36 to i32, !dbg !422
  tail call void @llvm.dbg.value(metadata i32 %37, i64 0, metadata !278, metadata !358), !dbg !423
  %38 = getelementptr inbounds %class.rvectort* %centerp, i64 0, i32 2, !dbg !424
  %39 = load float* %38, align 4, !dbg !424, !tbaa !425
  %40 = fsub float %39, %.0, !dbg !426
  %41 = fsub float %40, %29, !dbg !427
  %42 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 11, !dbg !428
  %43 = load float* %42, align 4, !dbg !428, !tbaa !429
  %44 = fmul float %43, %41, !dbg !430
  %45 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 12, !dbg !431
  %46 = load float* %45, align 4, !dbg !431, !tbaa !432
  %47 = fadd float %46, %44, !dbg !433
  %48 = fptosi float %47 to i32, !dbg !434
  tail call void @llvm.dbg.value(metadata i32 %48, i64 0, metadata !279, metadata !358), !dbg !435
  %49 = fadd float %.0, %26, !dbg !436
  %50 = fadd float %49, %29, !dbg !437
  %51 = fmul float %50, %32, !dbg !438
  %52 = fadd float %51, %35, !dbg !439
  %53 = fptosi float %52 to i32, !dbg !440
  tail call void @llvm.dbg.value(metadata i32 %53, i64 0, metadata !280, metadata !358), !dbg !441
  %54 = fadd float %.0, %39, !dbg !442
  %55 = fadd float %29, %54, !dbg !443
  %56 = fmul float %43, %55, !dbg !444
  %57 = fadd float %46, %56, !dbg !445
  %58 = fptosi float %57 to i32, !dbg !446
  tail call void @llvm.dbg.value(metadata i32 %58, i64 0, metadata !281, metadata !358), !dbg !447
  %59 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 5, !dbg !448
  %60 = load i32* %59, align 4, !dbg !448, !tbaa !450
  %61 = icmp sgt i32 %37, %60, !dbg !451
  br i1 %61, label %.loopexit, label %62, !dbg !452

; <label>:62                                      ; preds = %24
  %63 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 6, !dbg !453
  %64 = load i32* %63, align 4, !dbg !453, !tbaa !455
  %65 = icmp sgt i32 %48, %64, !dbg !456
  %66 = icmp slt i32 %53, 1, !dbg !457
  %or.cond = or i1 %66, %65, !dbg !459
  %67 = icmp slt i32 %58, 1, !dbg !460
  %or.cond3 = or i1 %67, %or.cond, !dbg !459
  br i1 %or.cond3, label %.loopexit, label %68, !dbg !459

; <label>:68                                      ; preds = %62
  %69 = icmp slt i32 %37, 1, !dbg !462
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !278, metadata !358), !dbg !423
  %. = select i1 %69, i32 1, i32 %37, !dbg !464
  %70 = icmp slt i32 %48, 1, !dbg !465
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !279, metadata !358), !dbg !435
  %y1.0 = select i1 %70, i32 1, i32 %48, !dbg !467
  %71 = icmp sgt i32 %53, %60, !dbg !468
  tail call void @llvm.dbg.value(metadata i32 %60, i64 0, metadata !280, metadata !358), !dbg !441
  %.5 = select i1 %71, i32 %60, i32 %53, !dbg !470
  %72 = icmp sgt i32 %58, %64, !dbg !471
  tail call void @llvm.dbg.value(metadata i32 %64, i64 0, metadata !281, metadata !358), !dbg !447
  %y2.0 = select i1 %72, i32 %64, i32 %58, !dbg !473
  %73 = fadd float %.0, %29, !dbg !474
  tail call void @llvm.dbg.value(metadata float %73, i64 0, metadata !353, metadata !358), !dbg !475
  %74 = fmul float %73, %73, !dbg !477
  tail call void @llvm.dbg.value(metadata float %74, i64 0, metadata !285, metadata !358), !dbg !478
  tail call void @llvm.dbg.value(metadata i32 %y1.0, i64 0, metadata !288, metadata !358), !dbg !479
  %75 = icmp sgt i32 %y1.0, %y2.0, !dbg !480
  br i1 %75, label %.loopexit, label %.preheader.lr.ph, !dbg !483

.preheader.lr.ph:                                 ; preds = %68
  %76 = icmp sgt i32 %., %.5, !dbg !484
  %77 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 14, i32 0, !dbg !487
  %78 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 14, i32 1, !dbg !489
  %79 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 7, !dbg !490
  %80 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 14, i32 2, !dbg !491
  %81 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 14, i32 3, !dbg !492
  %82 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 8, !dbg !493
  %83 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 2, !dbg !494
  %84 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 17, !dbg !496
  br label %.preheader, !dbg !483

.preheader:                                       ; preds = %._crit_edge, %.preheader.lr.ph
  %y.07 = phi i32 [ %y1.0, %.preheader.lr.ph ], [ %124, %._crit_edge ]
  br i1 %76, label %._crit_edge, label %.lr.ph, !dbg !497

.lr.ph:                                           ; preds = %.preheader
  %85 = load float* %77, align 4, !dbg !487, !tbaa !498
  %86 = fadd float %85, %29, !dbg !499
  %87 = load float* %78, align 4, !dbg !489, !tbaa !500
  %88 = fsub float %87, %85, !dbg !501
  %89 = load i32* %79, align 4, !dbg !490, !tbaa !502
  %90 = sitofp i32 %89 to float, !dbg !490
  %91 = load float* %80, align 4, !dbg !491, !tbaa !503
  %92 = fadd float %29, %91, !dbg !504
  %93 = sitofp i32 %y.07 to float, !dbg !505
  %94 = load float* %81, align 4, !dbg !492, !tbaa !506
  %95 = fsub float %94, %91, !dbg !507
  %96 = fmul float %93, %95, !dbg !508
  %97 = load i32* %82, align 4, !dbg !493, !tbaa !509
  %98 = sitofp i32 %97 to float, !dbg !493
  %99 = fdiv float %96, %98, !dbg !510
  %100 = fadd float %92, %99, !dbg !511
  %101 = fsub float %39, %100, !dbg !512
  %102 = fmul float %101, %101, !dbg !513
  br label %103, !dbg !497

; <label>:103                                     ; preds = %121, %.lr.ph
  %x.06 = phi i32 [ %., %.lr.ph ], [ %122, %121 ]
  %104 = sitofp i32 %x.06 to float, !dbg !515
  %105 = fmul float %104, %88, !dbg !516
  %106 = fdiv float %105, %90, !dbg !517
  %107 = fadd float %86, %106, !dbg !518
  tail call void @llvm.dbg.value(metadata float %107, i64 0, metadata !282, metadata !358), !dbg !519
  tail call void @llvm.dbg.value(metadata float %100, i64 0, metadata !283, metadata !358), !dbg !520
  %108 = fsub float %26, %107, !dbg !521
  tail call void @llvm.dbg.value(metadata float %108, i64 0, metadata !353, metadata !358), !dbg !522
  %109 = fmul float %108, %108, !dbg !524
  tail call void @llvm.dbg.value(metadata float %101, i64 0, metadata !353, metadata !358), !dbg !525
  %110 = fadd float %109, %102, !dbg !526
  tail call void @llvm.dbg.value(metadata float %110, i64 0, metadata !286, metadata !358), !dbg !527
  %111 = fcmp olt float %110, %74, !dbg !528
  br i1 %111, label %112, label %121, !dbg !529

; <label>:112                                     ; preds = %103
  %113 = load i32* %83, align 4, !dbg !494, !tbaa !530
  %114 = shl i32 %y.07, %113, !dbg !531
  %115 = or i32 %114, %x.06, !dbg !532
  %116 = sext i32 %115 to i64, !dbg !496
  %117 = load i16** %84, align 8, !dbg !496, !tbaa !533
  %118 = getelementptr inbounds i16* %117, i64 %116, !dbg !496
  %119 = load i16* %118, align 2, !dbg !534, !tbaa !535
  %120 = add i16 %119, 1, !dbg !534
  store i16 %120, i16* %118, align 2, !dbg !534, !tbaa !535
  br label %121, !dbg !496

; <label>:121                                     ; preds = %103, %112
  %122 = add nuw nsw i32 %x.06, 1, !dbg !536
  tail call void @llvm.dbg.value(metadata i32 %122, i64 0, metadata !287, metadata !358), !dbg !537
  %123 = icmp slt i32 %x.06, %.5, !dbg !484
  br i1 %123, label %103, label %._crit_edge, !dbg !497

._crit_edge:                                      ; preds = %121, %.preheader
  %124 = add nuw nsw i32 %y.07, 1, !dbg !538
  tail call void @llvm.dbg.value(metadata i32 %124, i64 0, metadata !288, metadata !358), !dbg !479
  %125 = icmp slt i32 %y.07, %y2.0, !dbg !480
  br i1 %125, label %.preheader, label %.loopexit, !dbg !483

.loopexit:                                        ; preds = %._crit_edge, %68, %6, %17, %62, %24
  ret void, !dbg !539
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN6wayobj12removesphereERK8rvectortf(%class.wayobj* nocapture readonly %this, %class.rvectort* nocapture readonly dereferenceable(12) %centerp, float %radius) #0 align 2 {
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !291, metadata !358), !dbg !540
  tail call void @llvm.dbg.value(metadata %class.rvectort* %centerp, i64 0, metadata !292, metadata !358), !dbg !541
  tail call void @llvm.dbg.value(metadata float %radius, i64 0, metadata !293, metadata !358), !dbg !542
  %1 = getelementptr inbounds %class.rvectort* %centerp, i64 0, i32 1, !dbg !543
  %2 = load float* %1, align 4, !dbg !543, !tbaa !364
  %3 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 14, i32 7, !dbg !545
  %4 = load float* %3, align 4, !dbg !545, !tbaa !370
  %5 = fcmp ult float %2, %4, !dbg !546
  br i1 %5, label %13, label %6, !dbg !547

; <label>:6                                       ; preds = %0
  %7 = fmul float %radius, %radius, !dbg !548
  %8 = fsub float %2, %4, !dbg !550
  tail call void @llvm.dbg.value(metadata float %8, i64 0, metadata !353, metadata !358), !dbg !551
  %9 = fmul float %8, %8, !dbg !553
  %10 = fsub float %7, %9, !dbg !554
  tail call void @llvm.dbg.value(metadata float %10, i64 0, metadata !300, metadata !358), !dbg !555
  %11 = fcmp ugt float %10, 0.000000e+00, !dbg !556
  br i1 %11, label %12, label %.loopexit, !dbg !558

; <label>:12                                      ; preds = %6
  %sqrtf4 = tail call float @sqrtf(float %10) #5, !dbg !559
  tail call void @llvm.dbg.value(metadata float %sqrtf4, i64 0, metadata !293, metadata !358), !dbg !542
  br label %24, !dbg !560

; <label>:13                                      ; preds = %0
  %14 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 14, i32 6, !dbg !561
  %15 = load float* %14, align 4, !dbg !561, !tbaa !395
  %16 = fcmp ugt float %2, %15, !dbg !563
  br i1 %16, label %24, label %17, !dbg !564

; <label>:17                                      ; preds = %13
  %18 = fmul float %radius, %radius, !dbg !565
  %19 = fsub float %15, %2, !dbg !567
  tail call void @llvm.dbg.value(metadata float %19, i64 0, metadata !353, metadata !358), !dbg !568
  %20 = fmul float %19, %19, !dbg !570
  %21 = fsub float %18, %20, !dbg !571
  tail call void @llvm.dbg.value(metadata float %21, i64 0, metadata !300, metadata !358), !dbg !555
  %22 = fcmp ugt float %21, 0.000000e+00, !dbg !572
  br i1 %22, label %23, label %.loopexit, !dbg !574

; <label>:23                                      ; preds = %17
  %sqrtf = tail call float @sqrtf(float %21) #5, !dbg !575
  tail call void @llvm.dbg.value(metadata float %sqrtf, i64 0, metadata !293, metadata !358), !dbg !542
  br label %24, !dbg !576

; <label>:24                                      ; preds = %13, %23, %12
  %.0 = phi float [ %sqrtf4, %12 ], [ %sqrtf, %23 ], [ %radius, %13 ]
  %25 = getelementptr inbounds %class.rvectort* %centerp, i64 0, i32 0, !dbg !577
  %26 = load float* %25, align 4, !dbg !577, !tbaa !411
  %27 = fsub float %26, %.0, !dbg !578
  %28 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 13, !dbg !579
  %29 = load float* %28, align 4, !dbg !579, !tbaa !414
  %30 = fsub float %27, %29, !dbg !580
  %31 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 9, !dbg !581
  %32 = load float* %31, align 4, !dbg !581, !tbaa !417
  %33 = fmul float %30, %32, !dbg !582
  %34 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 10, !dbg !583
  %35 = load float* %34, align 4, !dbg !583, !tbaa !420
  %36 = fadd float %33, %35, !dbg !584
  %37 = fptosi float %36 to i32, !dbg !585
  tail call void @llvm.dbg.value(metadata i32 %37, i64 0, metadata !294, metadata !358), !dbg !586
  %38 = getelementptr inbounds %class.rvectort* %centerp, i64 0, i32 2, !dbg !587
  %39 = load float* %38, align 4, !dbg !587, !tbaa !425
  %40 = fsub float %39, %.0, !dbg !588
  %41 = fsub float %40, %29, !dbg !589
  %42 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 11, !dbg !590
  %43 = load float* %42, align 4, !dbg !590, !tbaa !429
  %44 = fmul float %43, %41, !dbg !591
  %45 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 12, !dbg !592
  %46 = load float* %45, align 4, !dbg !592, !tbaa !432
  %47 = fadd float %46, %44, !dbg !593
  %48 = fptosi float %47 to i32, !dbg !594
  tail call void @llvm.dbg.value(metadata i32 %48, i64 0, metadata !295, metadata !358), !dbg !595
  %49 = fadd float %.0, %26, !dbg !596
  %50 = fadd float %49, %29, !dbg !597
  %51 = fmul float %50, %32, !dbg !598
  %52 = fadd float %51, %35, !dbg !599
  %53 = fptosi float %52 to i32, !dbg !600
  tail call void @llvm.dbg.value(metadata i32 %53, i64 0, metadata !296, metadata !358), !dbg !601
  %54 = fadd float %.0, %39, !dbg !602
  %55 = fadd float %29, %54, !dbg !603
  %56 = fmul float %43, %55, !dbg !604
  %57 = fadd float %46, %56, !dbg !605
  %58 = fptosi float %57 to i32, !dbg !606
  tail call void @llvm.dbg.value(metadata i32 %58, i64 0, metadata !297, metadata !358), !dbg !607
  %59 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 5, !dbg !608
  %60 = load i32* %59, align 4, !dbg !608, !tbaa !450
  %61 = icmp sgt i32 %37, %60, !dbg !610
  br i1 %61, label %.loopexit, label %62, !dbg !611

; <label>:62                                      ; preds = %24
  %63 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 6, !dbg !612
  %64 = load i32* %63, align 4, !dbg !612, !tbaa !455
  %65 = icmp sgt i32 %48, %64, !dbg !614
  %66 = icmp slt i32 %53, 1, !dbg !615
  %or.cond = or i1 %66, %65, !dbg !617
  %67 = icmp slt i32 %58, 1, !dbg !618
  %or.cond3 = or i1 %67, %or.cond, !dbg !617
  br i1 %or.cond3, label %.loopexit, label %68, !dbg !617

; <label>:68                                      ; preds = %62
  %69 = icmp slt i32 %37, 1, !dbg !620
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !294, metadata !358), !dbg !586
  %. = select i1 %69, i32 1, i32 %37, !dbg !622
  %70 = icmp slt i32 %48, 1, !dbg !623
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !295, metadata !358), !dbg !595
  %y1.0 = select i1 %70, i32 1, i32 %48, !dbg !625
  %71 = icmp sgt i32 %53, %60, !dbg !626
  tail call void @llvm.dbg.value(metadata i32 %60, i64 0, metadata !296, metadata !358), !dbg !601
  %.5 = select i1 %71, i32 %60, i32 %53, !dbg !628
  %72 = icmp sgt i32 %58, %64, !dbg !629
  tail call void @llvm.dbg.value(metadata i32 %64, i64 0, metadata !297, metadata !358), !dbg !607
  %y2.0 = select i1 %72, i32 %64, i32 %58, !dbg !631
  %73 = fadd float %.0, %29, !dbg !632
  tail call void @llvm.dbg.value(metadata float %73, i64 0, metadata !353, metadata !358), !dbg !633
  %74 = fmul float %73, %73, !dbg !635
  tail call void @llvm.dbg.value(metadata float %74, i64 0, metadata !301, metadata !358), !dbg !636
  tail call void @llvm.dbg.value(metadata i32 %y1.0, i64 0, metadata !304, metadata !358), !dbg !637
  %75 = icmp sgt i32 %y1.0, %y2.0, !dbg !638
  br i1 %75, label %.loopexit, label %.preheader.lr.ph, !dbg !641

.preheader.lr.ph:                                 ; preds = %68
  %76 = icmp sgt i32 %., %.5, !dbg !642
  %77 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 14, i32 0, !dbg !645
  %78 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 14, i32 1, !dbg !647
  %79 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 7, !dbg !648
  %80 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 14, i32 2, !dbg !649
  %81 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 14, i32 3, !dbg !650
  %82 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 8, !dbg !651
  %83 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 2, !dbg !652
  %84 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 17, !dbg !653
  br label %.preheader, !dbg !641

.preheader:                                       ; preds = %._crit_edge, %.preheader.lr.ph
  %y.07 = phi i32 [ %y1.0, %.preheader.lr.ph ], [ %124, %._crit_edge ]
  br i1 %76, label %._crit_edge, label %.lr.ph, !dbg !654

.lr.ph:                                           ; preds = %.preheader
  %85 = load float* %77, align 4, !dbg !645, !tbaa !498
  %86 = fadd float %85, %29, !dbg !655
  %87 = load float* %78, align 4, !dbg !647, !tbaa !500
  %88 = fsub float %87, %85, !dbg !656
  %89 = load i32* %79, align 4, !dbg !648, !tbaa !502
  %90 = sitofp i32 %89 to float, !dbg !648
  %91 = load float* %80, align 4, !dbg !649, !tbaa !503
  %92 = fadd float %29, %91, !dbg !657
  %93 = sitofp i32 %y.07 to float, !dbg !658
  %94 = load float* %81, align 4, !dbg !650, !tbaa !506
  %95 = fsub float %94, %91, !dbg !659
  %96 = fmul float %93, %95, !dbg !660
  %97 = load i32* %82, align 4, !dbg !651, !tbaa !509
  %98 = sitofp i32 %97 to float, !dbg !651
  %99 = fdiv float %96, %98, !dbg !661
  %100 = fadd float %92, %99, !dbg !662
  %101 = fsub float %39, %100, !dbg !663
  %102 = fmul float %101, %101, !dbg !664
  br label %103, !dbg !654

; <label>:103                                     ; preds = %121, %.lr.ph
  %x.06 = phi i32 [ %., %.lr.ph ], [ %122, %121 ]
  %104 = sitofp i32 %x.06 to float, !dbg !666
  %105 = fmul float %104, %88, !dbg !667
  %106 = fdiv float %105, %90, !dbg !668
  %107 = fadd float %86, %106, !dbg !669
  tail call void @llvm.dbg.value(metadata float %107, i64 0, metadata !298, metadata !358), !dbg !670
  tail call void @llvm.dbg.value(metadata float %100, i64 0, metadata !299, metadata !358), !dbg !671
  %108 = fsub float %26, %107, !dbg !672
  tail call void @llvm.dbg.value(metadata float %108, i64 0, metadata !353, metadata !358), !dbg !673
  %109 = fmul float %108, %108, !dbg !675
  tail call void @llvm.dbg.value(metadata float %101, i64 0, metadata !353, metadata !358), !dbg !676
  %110 = fadd float %109, %102, !dbg !677
  tail call void @llvm.dbg.value(metadata float %110, i64 0, metadata !302, metadata !358), !dbg !678
  %111 = fcmp ogt float %110, %74, !dbg !679
  br i1 %111, label %121, label %112, !dbg !681

; <label>:112                                     ; preds = %103
  %113 = load i32* %83, align 4, !dbg !652, !tbaa !530
  %114 = shl i32 %y.07, %113, !dbg !682
  %115 = or i32 %114, %x.06, !dbg !683
  %116 = sext i32 %115 to i64, !dbg !653
  %117 = load i16** %84, align 8, !dbg !653, !tbaa !533
  %118 = getelementptr inbounds i16* %117, i64 %116, !dbg !653
  %119 = load i16* %118, align 2, !dbg !684, !tbaa !535
  %120 = add i16 %119, -1, !dbg !684
  store i16 %120, i16* %118, align 2, !dbg !684, !tbaa !535
  br label %121, !dbg !685

; <label>:121                                     ; preds = %103, %112
  %122 = add nuw nsw i32 %x.06, 1, !dbg !686
  tail call void @llvm.dbg.value(metadata i32 %122, i64 0, metadata !303, metadata !358), !dbg !687
  %123 = icmp slt i32 %x.06, %.5, !dbg !642
  br i1 %123, label %103, label %._crit_edge, !dbg !654

._crit_edge:                                      ; preds = %121, %.preheader
  %124 = add nuw nsw i32 %y.07, 1, !dbg !688
  tail call void @llvm.dbg.value(metadata i32 %124, i64 0, metadata !304, metadata !358), !dbg !637
  %125 = icmp slt i32 %y.07, %y2.0, !dbg !638
  br i1 %125, label %.preheader, label %.loopexit, !dbg !641

.loopexit:                                        ; preds = %._crit_edge, %68, %6, %17, %62, %24
  ret void, !dbg !689
}

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN6wayobj8addpointEii(%class.wayobj* nocapture readonly %this, i32 %x, i32 %y) #0 align 2 {
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !307, metadata !358), !dbg !690
  tail call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !308, metadata !358), !dbg !691
  tail call void @llvm.dbg.value(metadata i32 %y, i64 0, metadata !309, metadata !358), !dbg !692
  %1 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 2, !dbg !693
  %2 = load i32* %1, align 4, !dbg !693, !tbaa !530
  %3 = shl i32 %y, %2, !dbg !695
  %4 = or i32 %3, %x, !dbg !696
  %5 = sext i32 %4 to i64, !dbg !697
  %6 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 17, !dbg !697
  %7 = load i16** %6, align 8, !dbg !697, !tbaa !533
  %8 = getelementptr inbounds i16* %7, i64 %5, !dbg !697
  %9 = load i16* %8, align 2, !dbg !697, !tbaa !535
  %10 = icmp sgt i16 %9, -1, !dbg !698
  br i1 %10, label %11, label %13, !dbg !699

; <label>:11                                      ; preds = %0
  %12 = add i16 %9, 1, !dbg !700
  store i16 %12, i16* %8, align 2, !dbg !700, !tbaa !535
  br label %13, !dbg !701

; <label>:13                                      ; preds = %11, %0
  ret void, !dbg !702
}

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN6wayobj11removepointEii(%class.wayobj* nocapture readonly %this, i32 %x, i32 %y) #0 align 2 {
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !312, metadata !358), !dbg !703
  tail call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !313, metadata !358), !dbg !704
  tail call void @llvm.dbg.value(metadata i32 %y, i64 0, metadata !314, metadata !358), !dbg !705
  %1 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 2, !dbg !706
  %2 = load i32* %1, align 4, !dbg !706, !tbaa !530
  %3 = shl i32 %y, %2, !dbg !708
  %4 = or i32 %3, %x, !dbg !709
  %5 = sext i32 %4 to i64, !dbg !710
  %6 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 17, !dbg !710
  %7 = load i16** %6, align 8, !dbg !710, !tbaa !533
  %8 = getelementptr inbounds i16* %7, i64 %5, !dbg !710
  %9 = load i16* %8, align 2, !dbg !710, !tbaa !535
  %10 = icmp sgt i16 %9, -1, !dbg !711
  br i1 %10, label %11, label %13, !dbg !712

; <label>:11                                      ; preds = %0
  %12 = add i16 %9, -1, !dbg !713
  store i16 %12, i16* %8, align 2, !dbg !713, !tbaa !535
  br label %13, !dbg !714

; <label>:13                                      ; preds = %11, %0
  ret void, !dbg !715
}

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN6wayobj5clearEv(%class.wayobj* nocapture readonly %this) #0 align 2 {
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !317, metadata !358), !dbg !716
  %1 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 0, !dbg !717
  %2 = load i32* %1, align 4, !dbg !717, !tbaa !718
  %3 = shl i32 1, %2, !dbg !719
  %4 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 1, !dbg !720
  %5 = load i32* %4, align 4, !dbg !720, !tbaa !721
  %6 = shl i32 %3, %5, !dbg !722
  tail call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !318, metadata !358), !dbg !723
  %7 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 17, !dbg !724
  %8 = bitcast i16** %7 to i8**, !dbg !724
  %9 = load i8** %8, align 8, !dbg !724, !tbaa !533
  %10 = sext i32 %6 to i64, !dbg !725
  %11 = shl nsw i64 %10, 1, !dbg !726
  tail call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 %11, i32 2, i1 false), !dbg !727
  %12 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 18, !dbg !728
  %13 = bitcast %struct.waymapcellt** %12 to i8**, !dbg !728
  %14 = load i8** %13, align 8, !dbg !728, !tbaa !729
  %15 = shl nsw i64 %10, 2, !dbg !730
  tail call void @llvm.memset.p0i8.i64(i8* %14, i8 0, i64 %15, i32 2, i1 false), !dbg !731
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !320, metadata !358), !dbg !732
  %16 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 8, !dbg !733
  %17 = load i32* %16, align 4, !dbg !733, !tbaa !509
  %18 = icmp sgt i32 %17, 0, !dbg !736
  br i1 %18, label %.lr.ph11, label %.preheader1, !dbg !737

.lr.ph11:                                         ; preds = %0
  %19 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 2, !dbg !738
  %20 = load i32* %19, align 4, !dbg !738, !tbaa !530
  %21 = load i16** %7, align 8, !dbg !739, !tbaa !533
  br label %27, !dbg !737

.preheader2:                                      ; preds = %27
  br i1 %18, label %.lr.ph8, label %.preheader1, !dbg !740

.lr.ph8:                                          ; preds = %.preheader2
  %22 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 2, !dbg !742
  %23 = load i32* %22, align 4, !dbg !742, !tbaa !530
  %24 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 3, !dbg !744
  %25 = load i32* %24, align 4, !dbg !744, !tbaa !745
  %26 = load i16** %7, align 8, !dbg !746, !tbaa !533
  br label %36, !dbg !740

; <label>:27                                      ; preds = %.lr.ph11, %27
  %y.09 = phi i32 [ 0, %.lr.ph11 ], [ %31, %27 ]
  %28 = shl i32 %y.09, %20, !dbg !747
  %29 = sext i32 %28 to i64, !dbg !739
  %30 = getelementptr inbounds i16* %21, i64 %29, !dbg !739
  store i16 -1, i16* %30, align 2, !dbg !748, !tbaa !535
  %31 = add nuw nsw i32 %y.09, 1, !dbg !749
  tail call void @llvm.dbg.value(metadata i32 %31, i64 0, metadata !320, metadata !358), !dbg !732
  %32 = icmp slt i32 %31, %17, !dbg !736
  br i1 %32, label %27, label %.preheader2, !dbg !737

.preheader1:                                      ; preds = %36, %0, %.preheader2
  %33 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 7, !dbg !750
  %34 = load i32* %33, align 4, !dbg !750, !tbaa !502
  %35 = icmp sgt i32 %34, 0, !dbg !753
  br i1 %35, label %.preheader, label %._crit_edge, !dbg !754

; <label>:36                                      ; preds = %.lr.ph8, %36
  %y.17 = phi i32 [ 0, %.lr.ph8 ], [ %41, %36 ]
  %37 = shl i32 %y.17, %23, !dbg !755
  %38 = or i32 %37, %25, !dbg !756
  %39 = sext i32 %38 to i64, !dbg !746
  %40 = getelementptr inbounds i16* %26, i64 %39, !dbg !746
  store i16 -1, i16* %40, align 2, !dbg !757, !tbaa !535
  %41 = add nuw nsw i32 %y.17, 1, !dbg !758
  tail call void @llvm.dbg.value(metadata i32 %41, i64 0, metadata !320, metadata !358), !dbg !732
  %42 = icmp slt i32 %41, %17, !dbg !759
  br i1 %42, label %36, label %.preheader1, !dbg !740

.preheader:                                       ; preds = %.preheader1
  %43 = bitcast i16** %7 to i8**, !dbg !760
  %44 = load i8** %43, align 8, !dbg !760, !tbaa !533
  %45 = icmp sgt i32 %34, 1
  %.op = add i32 %34, -1, !dbg !754
  %46 = zext i32 %.op to i64
  %.op13 = shl nuw nsw i64 %46, 1, !dbg !754
  %.op13.op = add nuw nsw i64 %.op13, 2, !dbg !754
  %47 = select i1 %45, i64 %.op13.op, i64 2, !dbg !754
  call void @llvm.memset.p0i8.i64(i8* %44, i8 -1, i64 %47, i32 2, i1 false), !dbg !761
  %.pre = load i32* %33, align 4, !dbg !762, !tbaa !502
  %48 = icmp sgt i32 %.pre, 0, !dbg !765
  br i1 %48, label %.lr.ph, label %._crit_edge, !dbg !766

.lr.ph:                                           ; preds = %.preheader
  %49 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 4, !dbg !767
  %50 = load i32* %49, align 4, !dbg !767, !tbaa !768
  %51 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 2, !dbg !769
  %52 = load i32* %51, align 4, !dbg !769, !tbaa !530
  %53 = shl i32 %50, %52, !dbg !770
  %54 = load i16** %7, align 8, !dbg !771, !tbaa !533
  br label %55, !dbg !766

; <label>:55                                      ; preds = %.lr.ph, %55
  %x.14 = phi i32 [ 0, %.lr.ph ], [ %59, %55 ]
  %56 = or i32 %53, %x.14, !dbg !772
  %57 = sext i32 %56 to i64, !dbg !771
  %58 = getelementptr inbounds i16* %54, i64 %57, !dbg !771
  store i16 -1, i16* %58, align 2, !dbg !773, !tbaa !535
  %59 = add nuw nsw i32 %x.14, 1, !dbg !774
  tail call void @llvm.dbg.value(metadata i32 %59, i64 0, metadata !319, metadata !358), !dbg !775
  %60 = icmp slt i32 %59, %.pre, !dbg !765
  br i1 %60, label %55, label %._crit_edge, !dbg !766

._crit_edge:                                      ; preds = %55, %.preheader1, %.preheader
  ret void, !dbg !776
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

; Function Attrs: optsize ssp uwtable
define zeroext i1 @_ZN6wayobj7loadmapEPKc(%class.wayobj* %this, i8* %fn) #3 align 2 {
  %mapsizex = alloca i32, align 4
  %mapsizey = alloca i32, align 4
  %1 = alloca %struct.createwaymnginfot, align 8
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !323, metadata !358), !dbg !777
  tail call void @llvm.dbg.value(metadata i8* %fn, i64 0, metadata !324, metadata !358), !dbg !778
  tail call void @llvm.dbg.declare(metadata %struct.createwaymnginfot* undef, metadata !328, metadata !358), !dbg !779
  %2 = tail call i32 (i8*, i32, ...)* @"\01_open"(i8* %fn, i32 0) #10, !dbg !780
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !325, metadata !358), !dbg !781
  %3 = icmp eq i32 %2, -1, !dbg !782
  br i1 %3, label %58, label %4, !dbg !784

; <label>:4                                       ; preds = %0
  %5 = bitcast i32* %mapsizex to i8*, !dbg !785
  %6 = call i64 @"\01_read"(i32 %2, i8* %5, i64 4) #10, !dbg !786
  %7 = bitcast i32* %mapsizey to i8*, !dbg !787
  %8 = call i64 @"\01_read"(i32 %2, i8* %7, i64 4) #10, !dbg !788
  call void @llvm.dbg.value(metadata float -1.000000e+03, i64 0, metadata !328, metadata !789), !dbg !779
  call void @llvm.dbg.value(metadata float 1.000000e+03, i64 0, metadata !328, metadata !790), !dbg !779
  call void @llvm.dbg.value(metadata float 1.000000e+03, i64 0, metadata !328, metadata !791), !dbg !779
  call void @llvm.dbg.value(metadata i32* %mapsizex, i64 0, metadata !326, metadata !358), !dbg !792
  %9 = load i32* %mapsizex, align 4, !dbg !793, !tbaa !794
  %10 = sitofp i32 %9 to double, !dbg !793
  %11 = call double @log(double %10) #11, !dbg !795
  %12 = fdiv double %11, 0x3FE62E42FEFA39EF, !dbg !796
  %13 = fadd double %12, 5.000000e-01, !dbg !797
  %14 = fptosi double %13 to i32, !dbg !798
  call void @llvm.dbg.value(metadata i32 %14, i64 0, metadata !328, metadata !799), !dbg !779
  call void @llvm.dbg.value(metadata i32* %mapsizey, i64 0, metadata !327, metadata !358), !dbg !800
  %15 = load i32* %mapsizey, align 4, !dbg !801, !tbaa !794
  %16 = sitofp i32 %15 to double, !dbg !801
  %17 = call double @log(double %16) #11, !dbg !802
  %18 = fdiv double %17, 0x3FE62E42FEFA39EF, !dbg !803
  %19 = fadd double %18, 5.000000e-01, !dbg !804
  %20 = fptosi double %19 to i32, !dbg !805
  call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !328, metadata !806), !dbg !779
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !328, metadata !807), !dbg !779
  call void @llvm.dbg.value(metadata float 1.000000e+05, i64 0, metadata !328, metadata !808), !dbg !779
  %21 = getelementptr inbounds %struct.createwaymnginfot* %1, i64 0, i32 0, !dbg !809
  store float -1.000000e+03, float* %21, align 8, !dbg !809
  %22 = getelementptr inbounds %struct.createwaymnginfot* %1, i64 0, i32 1, !dbg !809
  store float 1.000000e+03, float* %22, align 4, !dbg !809
  %23 = getelementptr inbounds %struct.createwaymnginfot* %1, i64 0, i32 2, !dbg !809
  store float -1.000000e+03, float* %23, align 8, !dbg !809
  %24 = getelementptr inbounds %struct.createwaymnginfot* %1, i64 0, i32 3, !dbg !809
  store float 1.000000e+03, float* %24, align 4, !dbg !809
  %25 = getelementptr inbounds %struct.createwaymnginfot* %1, i64 0, i32 4, !dbg !809
  store i32 %14, i32* %25, align 8, !dbg !809
  %26 = getelementptr inbounds %struct.createwaymnginfot* %1, i64 0, i32 5, !dbg !809
  store i32 %20, i32* %26, align 4, !dbg !809
  %27 = getelementptr inbounds %struct.createwaymnginfot* %1, i64 0, i32 6, !dbg !809
  store float 0.000000e+00, float* %27, align 8, !dbg !809
  %28 = getelementptr inbounds %struct.createwaymnginfot* %1, i64 0, i32 7, !dbg !809
  store float 1.000000e+05, float* %28, align 4, !dbg !809
  call void @_ZN6wayobj6createE17createwaymnginfot(%class.wayobj* %this, %struct.createwaymnginfot* byval align 8 %1) #10, !dbg !810
  call void @llvm.dbg.value(metadata i32* %mapsizex, i64 0, metadata !326, metadata !358), !dbg !792
  %29 = load i32* %mapsizex, align 4, !dbg !811, !tbaa !794
  call void @llvm.dbg.value(metadata i32* %mapsizey, i64 0, metadata !327, metadata !358), !dbg !800
  %30 = load i32* %mapsizey, align 4, !dbg !812, !tbaa !794
  %31 = mul nsw i32 %30, %29, !dbg !813
  %32 = sext i32 %31 to i64, !dbg !811
  %33 = call i8* @malloc(i64 %32) #10, !dbg !814
  call void @llvm.dbg.value(metadata i8* %33, i64 0, metadata !329, metadata !358), !dbg !815
  call void @llvm.dbg.value(metadata i32* %mapsizex, i64 0, metadata !326, metadata !358), !dbg !792
  call void @llvm.dbg.value(metadata i32* %mapsizey, i64 0, metadata !327, metadata !358), !dbg !800
  %34 = call i64 @"\01_read"(i32 %2, i8* %33, i64 %32) #10, !dbg !816
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !331, metadata !358), !dbg !817
  %35 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 4, !dbg !818
  %36 = load i32* %35, align 4, !dbg !818, !tbaa !768
  %37 = icmp sgt i32 %36, 1, !dbg !821
  br i1 %37, label %.preheader.lr.ph, label %._crit_edge3, !dbg !822

.preheader.lr.ph:                                 ; preds = %4
  %38 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 3, !dbg !823
  %39 = load i32* %38, align 4, !dbg !823, !tbaa !745
  %40 = icmp sgt i32 %39, 1, !dbg !826
  %41 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 2, !dbg !827
  %42 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 17, !dbg !828
  br label %.preheader, !dbg !822

.preheader:                                       ; preds = %.preheader.lr.ph, %._crit_edge
  %y.02 = phi i32 [ 1, %.preheader.lr.ph ], [ %55, %._crit_edge ]
  br i1 %40, label %.lr.ph, label %._crit_edge, !dbg !829

.lr.ph:                                           ; preds = %.preheader
  %43 = load i32* %41, align 4, !dbg !827, !tbaa !530
  %44 = shl i32 %y.02, %43, !dbg !830
  %45 = load i16** %42, align 8, !dbg !828, !tbaa !533
  br label %46, !dbg !829

; <label>:46                                      ; preds = %.lr.ph, %46
  %x.01 = phi i32 [ 1, %.lr.ph ], [ %53, %46 ]
  %47 = or i32 %44, %x.01, !dbg !831
  %48 = sext i32 %47 to i64, !dbg !832
  %49 = getelementptr inbounds i8* %33, i64 %48, !dbg !832
  %50 = load i8* %49, align 1, !dbg !832, !tbaa !833
  %51 = zext i8 %50 to i16, !dbg !832
  %52 = getelementptr inbounds i16* %45, i64 %48, !dbg !828
  store i16 %51, i16* %52, align 2, !dbg !834, !tbaa !535
  %53 = add nuw nsw i32 %x.01, 1, !dbg !835
  call void @llvm.dbg.value(metadata i32 %53, i64 0, metadata !330, metadata !358), !dbg !836
  %54 = icmp slt i32 %53, %39, !dbg !826
  br i1 %54, label %46, label %._crit_edge, !dbg !829

._crit_edge:                                      ; preds = %46, %.preheader
  %55 = add nuw nsw i32 %y.02, 1, !dbg !837
  call void @llvm.dbg.value(metadata i32 %55, i64 0, metadata !331, metadata !358), !dbg !817
  %56 = icmp slt i32 %55, %36, !dbg !821
  br i1 %56, label %.preheader, label %._crit_edge3, !dbg !822

._crit_edge3:                                     ; preds = %._crit_edge, %4
  call void @free(i8* %33) #10, !dbg !838
  %57 = call i32 @"\01_close"(i32 %2) #10, !dbg !839
  br label %58, !dbg !840

; <label>:58                                      ; preds = %0, %._crit_edge3
  %.0 = phi i1 [ true, %._crit_edge3 ], [ false, %0 ]
  ret i1 %.0, !dbg !841
}

; Function Attrs: optsize
declare i32 @"\01_open"(i8*, i32, ...) #4

; Function Attrs: optsize
declare i64 @"\01_read"(i32, i8*, i64) #4

; Function Attrs: nounwind optsize readnone
declare double @log(double) #5

; Function Attrs: optsize ssp uwtable
define void @_ZN6wayobj6createE17createwaymnginfot(%class.wayobj* %this, %struct.createwaymnginfot* byval nocapture readonly align 8 %info) #3 align 2 {
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !343, metadata !358), !dbg !842
  tail call void @llvm.dbg.declare(metadata %struct.createwaymnginfot* %info, metadata !344, metadata !358), !dbg !843
  %1 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 14, !dbg !844
  %2 = bitcast %struct.createwaymnginfot* %1 to i8*, !dbg !845
  %3 = bitcast %struct.createwaymnginfot* %info to i8*, !dbg !845
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 32, i32 4, i1 false), !dbg !845, !tbaa.struct !846
  %4 = getelementptr inbounds %struct.createwaymnginfot* %info, i64 0, i32 4, !dbg !848
  %5 = bitcast i32* %4 to i64*, !dbg !848
  %6 = load i64* %5, align 8, !dbg !848
  %7 = trunc i64 %6 to i32, !dbg !848
  %8 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 0, !dbg !849
  store i32 %7, i32* %8, align 4, !dbg !850, !tbaa !718
  %9 = lshr i64 %6, 32
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 1, !dbg !851
  store i32 %10, i32* %11, align 4, !dbg !852, !tbaa !721
  %12 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 2, !dbg !853
  store i32 %7, i32* %12, align 4, !dbg !854, !tbaa !530
  %13 = shl i32 1, %7, !dbg !855
  %14 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 3, !dbg !856
  %15 = shl i32 1, %10, !dbg !857
  %16 = insertelement <4 x i32> undef, i32 %13, i32 0, !dbg !858
  %17 = insertelement <4 x i32> %16, i32 %15, i32 1, !dbg !858
  %18 = insertelement <4 x i32> %17, i32 %13, i32 2, !dbg !858
  %19 = insertelement <4 x i32> %18, i32 %15, i32 3, !dbg !858
  %20 = add nsw <4 x i32> %19, <i32 -1, i32 -1, i32 -2, i32 -2>, !dbg !858
  %21 = bitcast i32* %14 to <4 x i32>*, !dbg !859
  store <4 x i32> %20, <4 x i32>* %21, align 4, !dbg !859, !tbaa !794
  %22 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 7, !dbg !860
  store i32 %13, i32* %22, align 4, !dbg !861, !tbaa !502
  %23 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 8, !dbg !862
  store i32 %15, i32* %23, align 4, !dbg !863, !tbaa !509
  %24 = getelementptr inbounds %struct.createwaymnginfot* %info, i64 0, i32 1, !dbg !864
  %25 = load float* %24, align 4, !dbg !864, !tbaa !865
  %26 = getelementptr inbounds %struct.createwaymnginfot* %info, i64 0, i32 0, !dbg !866
  %27 = load float* %26, align 8, !dbg !866, !tbaa !867
  %28 = fsub float %25, %27, !dbg !868
  %29 = shl nsw i32 %13, 1, !dbg !869
  %30 = sitofp i32 %29 to float, !dbg !870
  %31 = fdiv float %28, %30, !dbg !871
  %32 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 13, !dbg !872
  store float %31, float* %32, align 4, !dbg !873, !tbaa !414
  %33 = getelementptr inbounds %struct.createwaymnginfot* %info, i64 0, i32 3, !dbg !874
  %34 = load float* %33, align 4, !dbg !874, !tbaa !876
  %35 = getelementptr inbounds %struct.createwaymnginfot* %info, i64 0, i32 2, !dbg !877
  %36 = load float* %35, align 8, !dbg !877, !tbaa !878
  %37 = fsub float %34, %36, !dbg !879
  %38 = shl nsw i32 %15, 1, !dbg !880
  %39 = sitofp i32 %38 to float, !dbg !881
  %40 = fdiv float %37, %39, !dbg !882
  %41 = fcmp ogt float %40, %31, !dbg !883
  br i1 %41, label %42, label %43, !dbg !884

; <label>:42                                      ; preds = %0
  store float %40, float* %32, align 4, !dbg !885, !tbaa !414
  br label %43, !dbg !886

; <label>:43                                      ; preds = %42, %0
  %44 = sitofp i32 %13 to float, !dbg !887
  %45 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 9, !dbg !888
  %46 = sub nsw i32 0, %13, !dbg !889
  %47 = sitofp i32 %46 to float, !dbg !889
  %48 = fmul float %47, %27, !dbg !890
  %49 = sitofp i32 %15 to float, !dbg !891
  %50 = sub nsw i32 0, %15, !dbg !892
  %51 = sitofp i32 %50 to float, !dbg !892
  %52 = fmul float %51, %36, !dbg !893
  %53 = insertelement <4 x float> undef, float %44, i32 0, !dbg !894
  %54 = insertelement <4 x float> %53, float %48, i32 1, !dbg !894
  %55 = insertelement <4 x float> %54, float %49, i32 2, !dbg !894
  %56 = insertelement <4 x float> %55, float %52, i32 3, !dbg !894
  %57 = insertelement <4 x float> undef, float %28, i32 0, !dbg !894
  %58 = insertelement <4 x float> %57, float %28, i32 1, !dbg !894
  %59 = insertelement <4 x float> %58, float %37, i32 2, !dbg !894
  %60 = insertelement <4 x float> %59, float %37, i32 3, !dbg !894
  %61 = fdiv <4 x float> %56, %60, !dbg !894
  %62 = bitcast float* %45 to <4 x float>*, !dbg !895
  store <4 x float> %61, <4 x float>* %62, align 4, !dbg !895, !tbaa !847
  %63 = shl i32 %13, %10, !dbg !896
  tail call void @llvm.dbg.value(metadata i32 %63, i64 0, metadata !345, metadata !358), !dbg !897
  %64 = sext i32 %63 to i64, !dbg !898
  %65 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %64, i64 2), !dbg !898
  %66 = extractvalue { i64, i1 } %65, 1, !dbg !898
  %67 = extractvalue { i64, i1 } %65, 0, !dbg !898
  %68 = select i1 %66, i64 -1, i64 %67, !dbg !898
  %69 = tail call noalias i8* @_Znam(i64 %68) #12, !dbg !898
  %70 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 17, !dbg !899
  %71 = bitcast i16** %70 to i8**, !dbg !900
  store i8* %69, i8** %71, align 8, !dbg !900, !tbaa !533
  %72 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %64, i64 4), !dbg !901
  %73 = extractvalue { i64, i1 } %72, 1, !dbg !901
  %74 = extractvalue { i64, i1 } %72, 0, !dbg !901
  %75 = select i1 %73, i64 -1, i64 %74, !dbg !901
  %76 = tail call noalias i8* @_Znam(i64 %75) #12, !dbg !901
  %77 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 18, !dbg !902
  %78 = bitcast %struct.waymapcellt** %77 to i8**, !dbg !903
  store i8* %76, i8** %78, align 8, !dbg !903, !tbaa !729
  tail call void @_ZN6wayobj5clearEv(%class.wayobj* %this) #10, !dbg !904
  %79 = load i32* %22, align 4, !dbg !905, !tbaa !502
  %80 = load i32* %23, align 4, !dbg !906, !tbaa !509
  %81 = add i32 %80, %79, !dbg !907
  %82 = mul nsw i32 %81, 12, !dbg !908
  %83 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 21, !dbg !909
  store i32 %82, i32* %83, align 4, !dbg !910, !tbaa !911
  %84 = sext i32 %82 to i64, !dbg !912
  %85 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %84, i64 4), !dbg !912
  %86 = extractvalue { i64, i1 } %85, 1, !dbg !912
  %87 = extractvalue { i64, i1 } %85, 0, !dbg !912
  %88 = select i1 %86, i64 -1, i64 %87, !dbg !912
  %89 = tail call noalias i8* @_Znam(i64 %88) #12, !dbg !912
  %90 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 19, !dbg !913
  %91 = bitcast i32** %90 to i8**, !dbg !914
  store i8* %89, i8** %91, align 8, !dbg !914, !tbaa !915
  %92 = tail call noalias i8* @_Znam(i64 %88) #12, !dbg !916
  %93 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 20, !dbg !917
  %94 = bitcast i32** %93 to i8**, !dbg !918
  store i8* %92, i8** %94, align 8, !dbg !918, !tbaa !919
  %95 = load i32* %12, align 4, !dbg !920, !tbaa !530
  %96 = shl i32 1, %95, !dbg !921
  %97 = add nsw i32 %96, -1, !dbg !922
  %98 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 22, !dbg !923
  store i32 %97, i32* %98, align 4, !dbg !924, !tbaa !925
  %99 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 27, !dbg !926
  store i16 0, i16* %99, align 2, !dbg !927, !tbaa !928
  ret void, !dbg !929
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind optsize
declare noalias i8* @malloc(i64) #6

; Function Attrs: nounwind optsize
declare void @free(i8* nocapture) #6

; Function Attrs: optsize
declare i32 @"\01_close"(i32) #4

; Function Attrs: optsize ssp uwtable
define zeroext i1 @_ZN6wayobj7initmapEii(%class.wayobj* %this, i32 %mapsizex, i32 %mapsizey) #3 align 2 {
  %1 = alloca %struct.createwaymnginfot, align 8
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !334, metadata !358), !dbg !930
  tail call void @llvm.dbg.value(metadata i32 %mapsizex, i64 0, metadata !335, metadata !358), !dbg !931
  tail call void @llvm.dbg.value(metadata i32 %mapsizey, i64 0, metadata !336, metadata !358), !dbg !932
  tail call void @llvm.dbg.declare(metadata %struct.createwaymnginfot* undef, metadata !337, metadata !358), !dbg !933
  tail call void @llvm.dbg.value(metadata float -1.000000e+03, i64 0, metadata !337, metadata !789), !dbg !933
  tail call void @llvm.dbg.value(metadata float 1.000000e+03, i64 0, metadata !337, metadata !790), !dbg !933
  tail call void @llvm.dbg.value(metadata float 1.000000e+03, i64 0, metadata !337, metadata !791), !dbg !933
  %2 = sitofp i32 %mapsizex to double, !dbg !934
  %3 = tail call double @log(double %2) #11, !dbg !935
  %4 = fdiv double %3, 0x3FE62E42FEFA39EF, !dbg !936
  %5 = fadd double %4, 5.000000e-01, !dbg !937
  %6 = fptosi double %5 to i32, !dbg !938
  tail call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !337, metadata !799), !dbg !933
  %7 = sitofp i32 %mapsizey to double, !dbg !939
  %8 = tail call double @log(double %7) #11, !dbg !940
  %9 = fdiv double %8, 0x3FE62E42FEFA39EF, !dbg !941
  %10 = fadd double %9, 5.000000e-01, !dbg !942
  %11 = fptosi double %10 to i32, !dbg !943
  tail call void @llvm.dbg.value(metadata i32 %11, i64 0, metadata !337, metadata !806), !dbg !933
  tail call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !337, metadata !807), !dbg !933
  tail call void @llvm.dbg.value(metadata float 1.000000e+05, i64 0, metadata !337, metadata !808), !dbg !933
  %12 = getelementptr inbounds %struct.createwaymnginfot* %1, i64 0, i32 0, !dbg !944
  store float -1.000000e+03, float* %12, align 8, !dbg !944
  %13 = getelementptr inbounds %struct.createwaymnginfot* %1, i64 0, i32 1, !dbg !944
  store float 1.000000e+03, float* %13, align 4, !dbg !944
  %14 = getelementptr inbounds %struct.createwaymnginfot* %1, i64 0, i32 2, !dbg !944
  store float -1.000000e+03, float* %14, align 8, !dbg !944
  %15 = getelementptr inbounds %struct.createwaymnginfot* %1, i64 0, i32 3, !dbg !944
  store float 1.000000e+03, float* %15, align 4, !dbg !944
  %16 = getelementptr inbounds %struct.createwaymnginfot* %1, i64 0, i32 4, !dbg !944
  store i32 %6, i32* %16, align 8, !dbg !944
  %17 = getelementptr inbounds %struct.createwaymnginfot* %1, i64 0, i32 5, !dbg !944
  store i32 %11, i32* %17, align 4, !dbg !944
  %18 = getelementptr inbounds %struct.createwaymnginfot* %1, i64 0, i32 6, !dbg !944
  store float 0.000000e+00, float* %18, align 8, !dbg !944
  %19 = getelementptr inbounds %struct.createwaymnginfot* %1, i64 0, i32 7, !dbg !944
  store float 1.000000e+05, float* %19, align 4, !dbg !944
  call void @_ZN6wayobj6createE17createwaymnginfot(%class.wayobj* %this, %struct.createwaymnginfot* byval align 8 %1) #10, !dbg !945
  ret i1 true, !dbg !946
}

; Function Attrs: nounwind optsize readnone ssp uwtable
define void @_ZN6wayobj6createEv(%class.wayobj* nocapture %this) #7 align 2 {
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !340, metadata !358), !dbg !947
  ret void, !dbg !948
}

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: nobuiltin optsize
declare noalias i8* @_Znam(i64) #8

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN6wayobj7destroyEv(%class.wayobj* nocapture readonly %this) #0 align 2 {
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !348, metadata !358), !dbg !949
  %1 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 20, !dbg !950
  %2 = load i32** %1, align 8, !dbg !950, !tbaa !919
  %3 = icmp eq i32* %2, null, !dbg !951
  br i1 %3, label %6, label %4, !dbg !951

; <label>:4                                       ; preds = %0
  %5 = bitcast i32* %2 to i8*, !dbg !951
  tail call void @_ZdaPv(i8* %5) #13, !dbg !951
  br label %6, !dbg !951

; <label>:6                                       ; preds = %4, %0
  %7 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 19, !dbg !952
  %8 = load i32** %7, align 8, !dbg !952, !tbaa !915
  %9 = icmp eq i32* %8, null, !dbg !953
  br i1 %9, label %12, label %10, !dbg !953

; <label>:10                                      ; preds = %6
  %11 = bitcast i32* %8 to i8*, !dbg !953
  tail call void @_ZdaPv(i8* %11) #13, !dbg !953
  br label %12, !dbg !953

; <label>:12                                      ; preds = %10, %6
  %13 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 18, !dbg !954
  %14 = load %struct.waymapcellt** %13, align 8, !dbg !954, !tbaa !729
  %15 = icmp eq %struct.waymapcellt* %14, null, !dbg !955
  br i1 %15, label %18, label %16, !dbg !955

; <label>:16                                      ; preds = %12
  %17 = bitcast %struct.waymapcellt* %14 to i8*, !dbg !955
  tail call void @_ZdaPv(i8* %17) #13, !dbg !955
  br label %18, !dbg !955

; <label>:18                                      ; preds = %16, %12
  %19 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 17, !dbg !956
  %20 = load i16** %19, align 8, !dbg !956, !tbaa !533
  %21 = icmp eq i16* %20, null, !dbg !957
  br i1 %21, label %24, label %22, !dbg !957

; <label>:22                                      ; preds = %18
  %23 = bitcast i16* %20 to i8*, !dbg !957
  tail call void @_ZdaPv(i8* %23) #13, !dbg !957
  br label %24, !dbg !957

; <label>:24                                      ; preds = %22, %18
  ret void, !dbg !958
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdaPv(i8*) #9

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

declare float @sqrtf(float)

attributes #0 = { nounwind optsize ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { optsize ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { optsize "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind optsize readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind optsize "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind optsize readnone ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin optsize "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind optsize "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { optsize }
attributes #11 = { nounwind optsize readnone }
attributes #12 = { builtin optsize }
attributes #13 = { builtin nounwind optsize }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!354, !355, !356}
!llvm.ident = !{!357}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1, producer: "Apple LLVM version 7.0.0 (clang-700.1.76)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !271, globals: !2, imports: !2)
!1 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/473.astar/src/WayInit_.cpp", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!2 = !{}
!3 = !{!4, !157, !167, !172, !236, !237, !241, !249, !257, !8, !22, !264, !265}
!4 = !DICompositeType(tag: DW_TAG_class_type, name: "wayobj", file: !5, line: 35, size: 1408, align: 64, elements: !6, identifier: "_ZTS6wayobj")
!5 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/473.astar/src/Way_.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!6 = !{!7, !13, !14, !15, !16, !17, !18, !19, !20, !21, !24, !25, !26, !27, !28, !29, !30, !37, !40, !43, !44, !45, !46, !48, !49, !50, !55, !59, !60, !63, !64, !67, !70, !74, !77, !80, !83, !84, !87, !90, !94, !101, !102, !103, !109, !112, !115, !116, !120, !121, !124, !129, !134, !137, !138, !141, !142, !145, !151, !152, !155, !156}
!7 = !DIDerivedType(tag: DW_TAG_member, name: "mapxshift", scope: !"_ZTS6wayobj", file: !5, line: 37, baseType: !8, size: 32, align: 32)
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "i32", file: !9, line: 28, baseType: !10)
!9 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/473.astar/src/Types.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !11, line: 30, baseType: !12)
!11 = !DIFile(filename: "/usr/include/sys/_types/_int32_t.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!12 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "mapyshift", scope: !"_ZTS6wayobj", file: !5, line: 37, baseType: !8, size: 32, align: 32, offset: 32)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !"_ZTS6wayobj", file: !5, line: 38, baseType: !8, size: 32, align: 32, offset: 64)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "mapmaxx", scope: !"_ZTS6wayobj", file: !5, line: 39, baseType: !8, size: 32, align: 32, offset: 96)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "mapmaxy", scope: !"_ZTS6wayobj", file: !5, line: 39, baseType: !8, size: 32, align: 32, offset: 128)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "mapmaxx1", scope: !"_ZTS6wayobj", file: !5, line: 40, baseType: !8, size: 32, align: 32, offset: 160)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "mapmaxy1", scope: !"_ZTS6wayobj", file: !5, line: 40, baseType: !8, size: 32, align: 32, offset: 192)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "maplx", scope: !"_ZTS6wayobj", file: !5, line: 41, baseType: !8, size: 32, align: 32, offset: 224)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "maply", scope: !"_ZTS6wayobj", file: !5, line: 41, baseType: !8, size: 32, align: 32, offset: 256)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "xcoef1", scope: !"_ZTS6wayobj", file: !5, line: 42, baseType: !22, size: 32, align: 32, offset: 288)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "rnumt", file: !9, line: 57, baseType: !23)
!23 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "xcoef2", scope: !"_ZTS6wayobj", file: !5, line: 42, baseType: !22, size: 32, align: 32, offset: 320)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "ycoef1", scope: !"_ZTS6wayobj", file: !5, line: 42, baseType: !22, size: 32, align: 32, offset: 352)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "ycoef2", scope: !"_ZTS6wayobj", file: !5, line: 42, baseType: !22, size: 32, align: 32, offset: 384)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "cellr", scope: !"_ZTS6wayobj", file: !5, line: 43, baseType: !22, size: 32, align: 32, offset: 416)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !"_ZTS6wayobj", file: !5, line: 44, baseType: !"_ZTS17createwaymnginfot", size: 256, align: 32, offset: 448)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "createwayinfo", scope: !"_ZTS6wayobj", file: !5, line: 45, baseType: !"_ZTS14createwayinfot", size: 224, align: 32, offset: 704)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "maparp", scope: !"_ZTS6wayobj", file: !5, line: 46, baseType: !31, size: 64, align: 64, offset: 960)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "i16pt", file: !9, line: 49, baseType: !32)
!32 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64, align: 64)
!33 = !DIDerivedType(tag: DW_TAG_typedef, name: "i16", file: !9, line: 27, baseType: !34)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !35, line: 30, baseType: !36)
!35 = !DIFile(filename: "/usr/include/sys/_types/_int16_t.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!36 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "waymap", scope: !"_ZTS6wayobj", file: !5, line: 47, baseType: !38, size: 64, align: 64, offset: 1024)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "waymapcellpt", file: !5, line: 22, baseType: !39)
!39 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS11waymapcellt", size: 64, align: 64)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "bound1p", scope: !"_ZTS6wayobj", file: !5, line: 48, baseType: !41, size: 64, align: 64, offset: 1088)
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "i32pt", file: !9, line: 50, baseType: !42)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64, align: 64)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "bound2p", scope: !"_ZTS6wayobj", file: !5, line: 48, baseType: !41, size: 64, align: 64, offset: 1152)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "maxboundlength", scope: !"_ZTS6wayobj", file: !5, line: 49, baseType: !8, size: 32, align: 32, offset: 1216)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "indexxmask", scope: !"_ZTS6wayobj", file: !5, line: 50, baseType: !8, size: 32, align: 32, offset: 1248)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "flend", scope: !"_ZTS6wayobj", file: !5, line: 51, baseType: !47, size: 8, align: 8, offset: 1280)
!47 = !DIBasicType(name: "bool", size: 8, align: 8, encoding: DW_ATE_boolean)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "endindex", scope: !"_ZTS6wayobj", file: !5, line: 52, baseType: !8, size: 32, align: 32, offset: 1312)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !"_ZTS6wayobj", file: !5, line: 53, baseType: !33, size: 16, align: 16, offset: 1344)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "fillnum", scope: !"_ZTS6wayobj", file: !5, line: 54, baseType: !51, size: 16, align: 16, offset: 1360)
!51 = !DIDerivedType(tag: DW_TAG_typedef, name: "w16", file: !9, line: 22, baseType: !52)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !53, line: 31, baseType: !54)
!53 = !DIFile(filename: "/usr/include/_types/_uint16_t.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!54 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!55 = !DISubprogram(name: "getx", linkageName: "_ZN6wayobj4getxEf", scope: !"_ZTS6wayobj", file: !5, line: 56, type: !56, isLocal: false, isDefinition: false, scopeLine: 56, flags: DIFlagPrototyped, isOptimized: true)
!56 = !DISubroutineType(types: !57)
!57 = !{!8, !58, !22}
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS6wayobj", size: 64, align: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!59 = !DISubprogram(name: "gety", linkageName: "_ZN6wayobj4getyEf", scope: !"_ZTS6wayobj", file: !5, line: 57, type: !56, isLocal: false, isDefinition: false, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: true)
!60 = !DISubprogram(name: "getxcoord", linkageName: "_ZN6wayobj9getxcoordEi", scope: !"_ZTS6wayobj", file: !5, line: 58, type: !61, isLocal: false, isDefinition: false, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: true)
!61 = !DISubroutineType(types: !62)
!62 = !{!22, !58, !8}
!63 = !DISubprogram(name: "getycoord", linkageName: "_ZN6wayobj9getycoordEi", scope: !"_ZTS6wayobj", file: !5, line: 59, type: !61, isLocal: false, isDefinition: false, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: true)
!64 = !DISubprogram(name: "ismap", linkageName: "_ZN6wayobj5ismapEii", scope: !"_ZTS6wayobj", file: !5, line: 61, type: !65, isLocal: false, isDefinition: false, scopeLine: 61, flags: DIFlagPrototyped, isOptimized: true)
!65 = !DISubroutineType(types: !66)
!66 = !{!47, !58, !8, !8}
!67 = !DISubprogram(name: "getpoint", linkageName: "_ZN6wayobj8getpointEi", scope: !"_ZTS6wayobj", file: !5, line: 62, type: !68, isLocal: false, isDefinition: false, scopeLine: 62, flags: DIFlagPrototyped, isOptimized: true)
!68 = !DISubroutineType(types: !69)
!69 = !{!"_ZTS8rvectort", !58, !8}
!70 = !DISubprogram(name: "map", linkageName: "_ZN6wayobj3mapEii", scope: !"_ZTS6wayobj", file: !5, line: 64, type: !71, isLocal: false, isDefinition: false, scopeLine: 64, flags: DIFlagPrototyped, isOptimized: true)
!71 = !DISubroutineType(types: !72)
!72 = !{!73, !58, !8, !8}
!73 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !33)
!74 = !DISubprogram(name: "map", linkageName: "_ZN6wayobj3mapEss", scope: !"_ZTS6wayobj", file: !5, line: 65, type: !75, isLocal: false, isDefinition: false, scopeLine: 65, flags: DIFlagPrototyped, isOptimized: true)
!75 = !DISubroutineType(types: !76)
!76 = !{!73, !58, !33, !33}
!77 = !DISubprogram(name: "index", linkageName: "_ZN6wayobj5indexEii", scope: !"_ZTS6wayobj", file: !5, line: 67, type: !78, isLocal: false, isDefinition: false, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: true)
!78 = !DISubroutineType(types: !79)
!79 = !{!8, !58, !8, !8}
!80 = !DISubprogram(name: "indexx", linkageName: "_ZN6wayobj6indexxEi", scope: !"_ZTS6wayobj", file: !5, line: 68, type: !81, isLocal: false, isDefinition: false, scopeLine: 68, flags: DIFlagPrototyped, isOptimized: true)
!81 = !DISubroutineType(types: !82)
!82 = !{!8, !58, !8}
!83 = !DISubprogram(name: "indexy", linkageName: "_ZN6wayobj6indexyEi", scope: !"_ZTS6wayobj", file: !5, line: 69, type: !81, isLocal: false, isDefinition: false, scopeLine: 69, flags: DIFlagPrototyped, isOptimized: true)
!84 = !DISubprogram(name: "makebound2", linkageName: "_ZN6wayobj10makebound2EPiiS0_", scope: !"_ZTS6wayobj", file: !5, line: 71, type: !85, isLocal: false, isDefinition: false, scopeLine: 71, flags: DIFlagPrototyped, isOptimized: true)
!85 = !DISubroutineType(types: !86)
!86 = !{!8, !58, !41, !8, !41}
!87 = !DISubprogram(name: "fill", linkageName: "_ZN6wayobj4fillEiiii", scope: !"_ZTS6wayobj", file: !5, line: 72, type: !88, isLocal: false, isDefinition: false, scopeLine: 72, flags: DIFlagPrototyped, isOptimized: true)
!88 = !DISubroutineType(types: !89)
!89 = !{!47, !58, !8, !8, !8, !8}
!90 = !DISubprogram(name: "createwayar", linkageName: "_ZN6wayobj11createwayarEiiR8wayinfot", scope: !"_ZTS6wayobj", file: !5, line: 73, type: !91, isLocal: false, isDefinition: false, scopeLine: 73, flags: DIFlagPrototyped, isOptimized: true)
!91 = !DISubroutineType(types: !92)
!92 = !{!47, !58, !8, !8, !93}
!93 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !"_ZTS8wayinfot")
!94 = !DISubprogram(name: "createwayar", linkageName: "_ZN6wayobj11createwayarEiiRP8point16tRi", scope: !"_ZTS6wayobj", file: !5, line: 74, type: !95, isLocal: false, isDefinition: false, scopeLine: 74, flags: DIFlagPrototyped, isOptimized: true)
!95 = !DISubroutineType(types: !96)
!96 = !{!47, !58, !8, !8, !97, !100}
!97 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !98)
!98 = !DIDerivedType(tag: DW_TAG_typedef, name: "point16pt", file: !5, line: 15, baseType: !99)
!99 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS8point16t", size: 64, align: 64)
!100 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !8)
!101 = !DISubprogram(name: "createwayar2", linkageName: "_ZN6wayobj12createwayar2EiiR8wayinfot", scope: !"_ZTS6wayobj", file: !5, line: 75, type: !91, isLocal: false, isDefinition: false, scopeLine: 75, flags: DIFlagPrototyped, isOptimized: true)
!102 = !DISubprogram(name: "makeobstaclebound2", linkageName: "_ZN6wayobj18makeobstaclebound2EPiiS0_", scope: !"_ZTS6wayobj", file: !5, line: 77, type: !85, isLocal: false, isDefinition: false, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: true)
!103 = !DISubprogram(name: "findfreepoints", linkageName: "_ZN6wayobj14findfreepointsE8rvectortiRi", scope: !"_ZTS6wayobj", file: !5, line: 81, type: !104, isLocal: false, isDefinition: false, scopeLine: 81, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!104 = !DISubroutineType(types: !105)
!105 = !{!106, !58, !"_ZTS8rvectort", !8, !100}
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "levelplacept", file: !107, line: 12, baseType: !108)
!107 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/473.astar/src/WayTypes_.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS11levelplacet", size: 64, align: 64)
!109 = !DISubprogram(name: "findverticalline", linkageName: "_ZN6wayobj16findverticallineEiiRiS0_", scope: !"_ZTS6wayobj", file: !5, line: 82, type: !110, isLocal: false, isDefinition: false, scopeLine: 82, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!110 = !DISubroutineType(types: !111)
!111 = !{!47, !58, !8, !8, !100, !100}
!112 = !DISubprogram(name: "ismoveable", linkageName: "_ZN6wayobj10ismoveableEff", scope: !"_ZTS6wayobj", file: !5, line: 84, type: !113, isLocal: false, isDefinition: false, scopeLine: 84, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!113 = !DISubroutineType(types: !114)
!114 = !{!47, !58, !22, !22}
!115 = !DISubprogram(name: "findfreepoint", linkageName: "_ZN6wayobj13findfreepointEiiRiS0_", scope: !"_ZTS6wayobj", file: !5, line: 86, type: !110, isLocal: false, isDefinition: false, scopeLine: 86, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!116 = !DISubprogram(name: "findfreepoint", linkageName: "_ZN6wayobj13findfreepointEffRfS0_", scope: !"_ZTS6wayobj", file: !5, line: 87, type: !117, isLocal: false, isDefinition: false, scopeLine: 87, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!117 = !DISubroutineType(types: !118)
!118 = !{!47, !58, !22, !22, !119, !119}
!119 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !22)
!120 = !DISubprogram(name: "wayexist", linkageName: "_ZN6wayobj8wayexistEiiii", scope: !"_ZTS6wayobj", file: !5, line: 88, type: !88, isLocal: false, isDefinition: false, scopeLine: 88, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!121 = !DISubprogram(name: "createway", linkageName: "_ZN6wayobj9createwayEiiiiRP8point16tRi", scope: !"_ZTS6wayobj", file: !5, line: 89, type: !122, isLocal: false, isDefinition: false, scopeLine: 89, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!122 = !DISubroutineType(types: !123)
!123 = !{!47, !58, !8, !8, !8, !8, !97, !100}
!124 = !DISubprogram(name: "createway", linkageName: "_ZN6wayobj9createwayERK8rvectortS2_bR8wayinfot", scope: !"_ZTS6wayobj", file: !5, line: 90, type: !125, isLocal: false, isDefinition: false, scopeLine: 90, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!125 = !DISubroutineType(types: !126)
!126 = !{!47, !58, !127, !127, !47, !93}
!127 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !128)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !"_ZTS8rvectort")
!129 = !DISubprogram(name: "createway", linkageName: "_ZN6wayobj9createwayERK14createwayinfotR8wayinfot", scope: !"_ZTS6wayobj", file: !5, line: 91, type: !130, isLocal: false, isDefinition: false, scopeLine: 91, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!130 = !DISubroutineType(types: !131)
!131 = !{!47, !58, !132, !93}
!132 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !133)
!133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !"_ZTS14createwayinfot")
!134 = !DISubprogram(name: "addsphere", linkageName: "_ZN6wayobj9addsphereERK8rvectortf", scope: !"_ZTS6wayobj", file: !5, line: 93, type: !135, isLocal: false, isDefinition: false, scopeLine: 93, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!135 = !DISubroutineType(types: !136)
!136 = !{null, !58, !127, !22}
!137 = !DISubprogram(name: "removesphere", linkageName: "_ZN6wayobj12removesphereERK8rvectortf", scope: !"_ZTS6wayobj", file: !5, line: 94, type: !135, isLocal: false, isDefinition: false, scopeLine: 94, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!138 = !DISubprogram(name: "addpoint", linkageName: "_ZN6wayobj8addpointEii", scope: !"_ZTS6wayobj", file: !5, line: 95, type: !139, isLocal: false, isDefinition: false, scopeLine: 95, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!139 = !DISubroutineType(types: !140)
!140 = !{null, !58, !8, !8}
!141 = !DISubprogram(name: "removepoint", linkageName: "_ZN6wayobj11removepointEii", scope: !"_ZTS6wayobj", file: !5, line: 96, type: !139, isLocal: false, isDefinition: false, scopeLine: 96, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!142 = !DISubprogram(name: "clear", linkageName: "_ZN6wayobj5clearEv", scope: !"_ZTS6wayobj", file: !5, line: 97, type: !143, isLocal: false, isDefinition: false, scopeLine: 97, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!143 = !DISubroutineType(types: !144)
!144 = !{null, !58}
!145 = !DISubprogram(name: "loadmap", linkageName: "_ZN6wayobj7loadmapEPKc", scope: !"_ZTS6wayobj", file: !5, line: 99, type: !146, isLocal: false, isDefinition: false, scopeLine: 99, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!146 = !DISubroutineType(types: !147)
!147 = !{!47, !58, !148}
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64, align: 64)
!149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!150 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!151 = !DISubprogram(name: "initmap", linkageName: "_ZN6wayobj7initmapEii", scope: !"_ZTS6wayobj", file: !5, line: 100, type: !65, isLocal: false, isDefinition: false, scopeLine: 100, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!152 = !DISubprogram(name: "create", linkageName: "_ZN6wayobj6createE17createwaymnginfot", scope: !"_ZTS6wayobj", file: !5, line: 102, type: !153, isLocal: false, isDefinition: false, scopeLine: 102, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!153 = !DISubroutineType(types: !154)
!154 = !{null, !58, !"_ZTS17createwaymnginfot"}
!155 = !DISubprogram(name: "create", linkageName: "_ZN6wayobj6createEv", scope: !"_ZTS6wayobj", file: !5, line: 103, type: !143, isLocal: false, isDefinition: false, scopeLine: 103, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!156 = !DISubprogram(name: "destroy", linkageName: "_ZN6wayobj7destroyEv", scope: !"_ZTS6wayobj", file: !5, line: 104, type: !143, isLocal: false, isDefinition: false, scopeLine: 104, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!157 = !DICompositeType(tag: DW_TAG_structure_type, name: "createwaymnginfot", file: !5, line: 25, size: 256, align: 32, elements: !158, identifier: "_ZTS17createwaymnginfot")
!158 = !{!159, !160, !161, !162, !163, !164, !165, !166}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "minx", scope: !"_ZTS17createwaymnginfot", file: !5, line: 27, baseType: !22, size: 32, align: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "maxx", scope: !"_ZTS17createwaymnginfot", file: !5, line: 27, baseType: !22, size: 32, align: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "miny", scope: !"_ZTS17createwaymnginfot", file: !5, line: 28, baseType: !22, size: 32, align: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "maxy", scope: !"_ZTS17createwaymnginfot", file: !5, line: 28, baseType: !22, size: 32, align: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "xshift", scope: !"_ZTS17createwaymnginfot", file: !5, line: 29, baseType: !8, size: 32, align: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "yshift", scope: !"_ZTS17createwaymnginfot", file: !5, line: 30, baseType: !8, size: 32, align: 32, offset: 160)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "height1", scope: !"_ZTS17createwaymnginfot", file: !5, line: 31, baseType: !22, size: 32, align: 32, offset: 192)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "height2", scope: !"_ZTS17createwaymnginfot", file: !5, line: 31, baseType: !22, size: 32, align: 32, offset: 224)
!167 = !DICompositeType(tag: DW_TAG_structure_type, name: "createwayinfot", file: !107, line: 15, size: 224, align: 32, elements: !168, identifier: "_ZTS14createwayinfot")
!168 = !{!169, !170, !171}
!169 = !DIDerivedType(tag: DW_TAG_member, name: "startp", scope: !"_ZTS14createwayinfot", file: !107, line: 17, baseType: !"_ZTS8rvectort", size: 96, align: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "finishp", scope: !"_ZTS14createwayinfot", file: !107, line: 18, baseType: !"_ZTS8rvectort", size: 96, align: 32, offset: 96)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "flcorrect", scope: !"_ZTS14createwayinfot", file: !107, line: 19, baseType: !47, size: 8, align: 8, offset: 192)
!172 = !DICompositeType(tag: DW_TAG_class_type, name: "rvectort", file: !9, line: 105, size: 96, align: 32, elements: !173, identifier: "_ZTS8rvectort")
!173 = !{!174, !175, !176, !177, !181, !182, !186, !190, !191, !195, !198, !201, !204, !208, !211, !212, !213, !214, !215, !216, !217, !218, !223, !228, !232, !233}
!174 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !"_ZTS8rvectort", file: !9, line: 109, baseType: !22, size: 32, align: 32, flags: DIFlagPublic)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !"_ZTS8rvectort", file: !9, line: 109, baseType: !22, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !"_ZTS8rvectort", file: !9, line: 109, baseType: !22, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!177 = !DISubprogram(name: "norm", linkageName: "_ZNK8rvectort4normEv", scope: !"_ZTS8rvectort", file: !9, line: 110, type: !178, isLocal: false, isDefinition: false, scopeLine: 110, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!178 = !DISubroutineType(types: !179)
!179 = !{!22, !180}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64, align: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!181 = !DISubprogram(name: "norm2", linkageName: "_ZNK8rvectort5norm2Ev", scope: !"_ZTS8rvectort", file: !9, line: 111, type: !178, isLocal: false, isDefinition: false, scopeLine: 111, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!182 = !DISubprogram(name: "normalize", linkageName: "_ZN8rvectort9normalizeEv", scope: !"_ZTS8rvectort", file: !9, line: 112, type: !183, isLocal: false, isDefinition: false, scopeLine: 112, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!183 = !DISubroutineType(types: !184)
!184 = !{!22, !185}
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS8rvectort", size: 64, align: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!186 = !DISubprogram(name: "ortbasis", linkageName: "_ZNK8rvectort8ortbasisERS_S0_", scope: !"_ZTS8rvectort", file: !9, line: 114, type: !187, isLocal: false, isDefinition: false, scopeLine: 114, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!187 = !DISubroutineType(types: !188)
!188 = !{null, !180, !189, !189}
!189 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !"_ZTS8rvectort")
!190 = !DISubprogram(name: "ortbasisz", linkageName: "_ZNK8rvectort9ortbasiszERS_S0_", scope: !"_ZTS8rvectort", file: !9, line: 115, type: !187, isLocal: false, isDefinition: false, scopeLine: 115, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!191 = !DISubprogram(name: "rotmatrix", linkageName: "_ZNK8rvectort9rotmatrixER6rmatrt", scope: !"_ZTS8rvectort", file: !9, line: 117, type: !192, isLocal: false, isDefinition: false, scopeLine: 117, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!192 = !DISubroutineType(types: !193)
!193 = !{null, !180, !194}
!194 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !"_ZTS6rmatrt")
!195 = !DISubprogram(name: "rotmatrix", linkageName: "_ZNK8rvectort9rotmatrixER6rmatrtf", scope: !"_ZTS8rvectort", file: !9, line: 118, type: !196, isLocal: false, isDefinition: false, scopeLine: 118, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!196 = !DISubroutineType(types: !197)
!197 = !{null, !180, !194, !22}
!198 = !DISubprogram(name: "definerandom", linkageName: "_ZN8rvectort12definerandomEv", scope: !"_ZTS8rvectort", file: !9, line: 120, type: !199, isLocal: false, isDefinition: false, scopeLine: 120, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!199 = !DISubroutineType(types: !200)
!200 = !{null, !185}
!201 = !DISubprogram(name: "randomvariation", linkageName: "_ZN8rvectort15randomvariationEf", scope: !"_ZTS8rvectort", file: !9, line: 121, type: !202, isLocal: false, isDefinition: false, scopeLine: 121, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!202 = !DISubroutineType(types: !203)
!203 = !{null, !185, !22}
!204 = !DISubprogram(name: "operator()", linkageName: "_ZN8rvectortclEi", scope: !"_ZTS8rvectort", file: !9, line: 139, type: !205, isLocal: false, isDefinition: false, scopeLine: 139, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!205 = !DISubroutineType(types: !206)
!206 = !{!119, !185, !207}
!207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8)
!208 = !DISubprogram(name: "r", linkageName: "_ZN8rvectort1rEv", scope: !"_ZTS8rvectort", file: !9, line: 141, type: !209, isLocal: false, isDefinition: false, scopeLine: 141, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!209 = !DISubroutineType(types: !210)
!210 = !{!119, !185}
!211 = !DISubprogram(name: "g", linkageName: "_ZN8rvectort1gEv", scope: !"_ZTS8rvectort", file: !9, line: 142, type: !209, isLocal: false, isDefinition: false, scopeLine: 142, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!212 = !DISubprogram(name: "b", linkageName: "_ZN8rvectort1bEv", scope: !"_ZTS8rvectort", file: !9, line: 143, type: !209, isLocal: false, isDefinition: false, scopeLine: 143, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!213 = !DISubprogram(name: "r", linkageName: "_ZNK8rvectort1rEv", scope: !"_ZTS8rvectort", file: !9, line: 144, type: !178, isLocal: false, isDefinition: false, scopeLine: 144, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!214 = !DISubprogram(name: "g", linkageName: "_ZNK8rvectort1gEv", scope: !"_ZTS8rvectort", file: !9, line: 145, type: !178, isLocal: false, isDefinition: false, scopeLine: 145, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!215 = !DISubprogram(name: "b", linkageName: "_ZNK8rvectort1bEv", scope: !"_ZTS8rvectort", file: !9, line: 146, type: !178, isLocal: false, isDefinition: false, scopeLine: 146, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!216 = !DISubprogram(name: "bright", linkageName: "_ZN8rvectort6brightEv", scope: !"_ZTS8rvectort", file: !9, line: 148, type: !183, isLocal: false, isDefinition: false, scopeLine: 148, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!217 = !DISubprogram(name: "set0", linkageName: "_ZN8rvectort4set0Ev", scope: !"_ZTS8rvectort", file: !9, line: 150, type: !199, isLocal: false, isDefinition: false, scopeLine: 150, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!218 = !DISubprogram(name: "operator=", linkageName: "_ZN8rvectortaSEPKf", scope: !"_ZTS8rvectort", file: !9, line: 152, type: !219, isLocal: false, isDefinition: false, scopeLine: 152, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!219 = !DISubroutineType(types: !220)
!220 = !{null, !185, !221}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64, align: 64)
!222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !23)
!223 = !DISubprogram(name: "operator const float *", linkageName: "_ZNK8rvectortcvPKfEv", scope: !"_ZTS8rvectort", file: !9, line: 155, type: !224, isLocal: false, isDefinition: false, scopeLine: 155, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!224 = !DISubroutineType(types: !225)
!225 = !{!226, !180}
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64, align: 64)
!227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !22)
!228 = !DISubprogram(name: "operator float *", linkageName: "_ZN8rvectortcvPfEv", scope: !"_ZTS8rvectort", file: !9, line: 156, type: !229, isLocal: false, isDefinition: false, scopeLine: 156, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!229 = !DISubroutineType(types: !230)
!230 = !{!231, !185}
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64, align: 64)
!232 = !DISubprogram(name: "rvectort", scope: !"_ZTS8rvectort", file: !9, line: 158, type: !199, isLocal: false, isDefinition: false, scopeLine: 158, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!233 = !DISubprogram(name: "rvectort", scope: !"_ZTS8rvectort", file: !9, line: 159, type: !234, isLocal: false, isDefinition: false, scopeLine: 159, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!234 = !DISubroutineType(types: !235)
!235 = !{null, !185, !22, !22, !22}
!236 = !DICompositeType(tag: DW_TAG_class_type, name: "rmatrt", file: !9, line: 103, flags: DIFlagFwdDecl, identifier: "_ZTS6rmatrt")
!237 = !DICompositeType(tag: DW_TAG_structure_type, name: "waymapcellt", file: !5, line: 17, size: 32, align: 16, elements: !238, identifier: "_ZTS11waymapcellt")
!238 = !{!239, !240}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "fillnum", scope: !"_ZTS11waymapcellt", file: !5, line: 19, baseType: !51, size: 16, align: 16)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !"_ZTS11waymapcellt", file: !5, line: 20, baseType: !51, size: 16, align: 16, offset: 16)
!241 = !DICompositeType(tag: DW_TAG_structure_type, name: "wayinfot", file: !107, line: 22, size: 192, align: 64, elements: !242, identifier: "_ZTS8wayinfot")
!242 = !{!243, !244, !247, !248}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "flexist", scope: !"_ZTS8wayinfot", file: !107, line: 24, baseType: !47, size: 8, align: 8)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "wayarp", scope: !"_ZTS8wayinfot", file: !107, line: 25, baseType: !245, size: 64, align: 64, offset: 64)
!245 = !DIDerivedType(tag: DW_TAG_typedef, name: "rvectorpt", file: !9, line: 161, baseType: !246)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS8rvectort", size: 64, align: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "wayarsize", scope: !"_ZTS8wayinfot", file: !107, line: 26, baseType: !8, size: 32, align: 32, offset: 128)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "flcorrect", scope: !"_ZTS8wayinfot", file: !107, line: 27, baseType: !47, size: 8, align: 8, offset: 160)
!249 = !DICompositeType(tag: DW_TAG_structure_type, name: "point16t", file: !5, line: 10, size: 32, align: 16, elements: !250, identifier: "_ZTS8point16t")
!250 = !{!251, !252, !253}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !"_ZTS8point16t", file: !5, line: 12, baseType: !33, size: 16, align: 16)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !"_ZTS8point16t", file: !5, line: 12, baseType: !33, size: 16, align: 16, offset: 16)
!253 = !DISubprogram(name: "point16t", scope: !"_ZTS8point16t", file: !5, line: 13, type: !254, isLocal: false, isDefinition: false, scopeLine: 13, flags: DIFlagPrototyped, isOptimized: true)
!254 = !DISubroutineType(types: !255)
!255 = !{null, !256, !33, !33}
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS8point16t", size: 64, align: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!257 = !DICompositeType(tag: DW_TAG_structure_type, name: "levelplacet", file: !107, line: 6, size: 128, align: 32, elements: !258, identifier: "_ZTS11levelplacet")
!258 = !{!259, !260, !261, !262, !263}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !"_ZTS11levelplacet", file: !107, line: 8, baseType: !33, size: 16, align: 16)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !"_ZTS11levelplacet", file: !107, line: 8, baseType: !33, size: 16, align: 16, offset: 16)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !"_ZTS11levelplacet", file: !107, line: 9, baseType: !22, size: 32, align: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "ry", scope: !"_ZTS11levelplacet", file: !107, line: 9, baseType: !22, size: 32, align: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "hiding", scope: !"_ZTS11levelplacet", file: !107, line: 10, baseType: !22, size: 32, align: 32, offset: 96)
!264 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "bytept", file: !9, line: 21, baseType: !266)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64, align: 64)
!267 = !DIDerivedType(tag: DW_TAG_typedef, name: "byte", file: !9, line: 20, baseType: !268)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !269, line: 31, baseType: !270)
!269 = !DIFile(filename: "/usr/include/_types/_uint8_t.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!270 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!271 = !{!272, !289, !305, !310, !315, !321, !332, !338, !341, !346, !349}
!272 = !DISubprogram(name: "addsphere", linkageName: "_ZN6wayobj9addsphereERK8rvectortf", scope: !"_ZTS6wayobj", file: !1, line: 21, type: !135, isLocal: false, isDefinition: true, scopeLine: 22, flags: DIFlagPrototyped, isOptimized: true, function: void (%class.wayobj*, %class.rvectort*, float)* @_ZN6wayobj9addsphereERK8rvectortf, declaration: !134, variables: !273)
!273 = !{!274, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288}
!274 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !272, type: !275, flags: DIFlagArtificial | DIFlagObjectPointer)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS6wayobj", size: 64, align: 64)
!276 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "centerp", arg: 2, scope: !272, file: !1, line: 21, type: !127)
!277 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "radius", arg: 3, scope: !272, file: !1, line: 21, type: !22)
!278 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x1", scope: !272, file: !1, line: 23, type: !8)
!279 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y1", scope: !272, file: !1, line: 23, type: !8)
!280 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x2", scope: !272, file: !1, line: 23, type: !8)
!281 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y2", scope: !272, file: !1, line: 23, type: !8)
!282 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rx", scope: !272, file: !1, line: 24, type: !22)
!283 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ry", scope: !272, file: !1, line: 24, type: !22)
!284 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d2", scope: !272, file: !1, line: 25, type: !22)
!285 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "radius2", scope: !272, file: !1, line: 26, type: !22)
!286 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rr", scope: !272, file: !1, line: 27, type: !22)
!287 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !272, file: !1, line: 28, type: !8)
!288 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !272, file: !1, line: 28, type: !8)
!289 = !DISubprogram(name: "removesphere", linkageName: "_ZN6wayobj12removesphereERK8rvectortf", scope: !"_ZTS6wayobj", file: !1, line: 83, type: !135, isLocal: false, isDefinition: true, scopeLine: 84, flags: DIFlagPrototyped, isOptimized: true, function: void (%class.wayobj*, %class.rvectort*, float)* @_ZN6wayobj12removesphereERK8rvectortf, declaration: !137, variables: !290)
!290 = !{!291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304}
!291 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !289, type: !275, flags: DIFlagArtificial | DIFlagObjectPointer)
!292 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "centerp", arg: 2, scope: !289, file: !1, line: 83, type: !127)
!293 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "radius", arg: 3, scope: !289, file: !1, line: 83, type: !22)
!294 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x1", scope: !289, file: !1, line: 85, type: !8)
!295 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y1", scope: !289, file: !1, line: 85, type: !8)
!296 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x2", scope: !289, file: !1, line: 85, type: !8)
!297 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y2", scope: !289, file: !1, line: 85, type: !8)
!298 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rx", scope: !289, file: !1, line: 86, type: !22)
!299 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ry", scope: !289, file: !1, line: 86, type: !22)
!300 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d2", scope: !289, file: !1, line: 87, type: !22)
!301 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "radius2", scope: !289, file: !1, line: 88, type: !22)
!302 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rr", scope: !289, file: !1, line: 89, type: !22)
!303 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !289, file: !1, line: 90, type: !8)
!304 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !289, file: !1, line: 90, type: !8)
!305 = !DISubprogram(name: "addpoint", linkageName: "_ZN6wayobj8addpointEii", scope: !"_ZTS6wayobj", file: !1, line: 146, type: !139, isLocal: false, isDefinition: true, scopeLine: 147, flags: DIFlagPrototyped, isOptimized: true, function: void (%class.wayobj*, i32, i32)* @_ZN6wayobj8addpointEii, declaration: !138, variables: !306)
!306 = !{!307, !308, !309}
!307 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !305, type: !275, flags: DIFlagArtificial | DIFlagObjectPointer)
!308 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 2, scope: !305, file: !1, line: 146, type: !8)
!309 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 3, scope: !305, file: !1, line: 146, type: !8)
!310 = !DISubprogram(name: "removepoint", linkageName: "_ZN6wayobj11removepointEii", scope: !"_ZTS6wayobj", file: !1, line: 152, type: !139, isLocal: false, isDefinition: true, scopeLine: 153, flags: DIFlagPrototyped, isOptimized: true, function: void (%class.wayobj*, i32, i32)* @_ZN6wayobj11removepointEii, declaration: !141, variables: !311)
!311 = !{!312, !313, !314}
!312 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !310, type: !275, flags: DIFlagArtificial | DIFlagObjectPointer)
!313 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 2, scope: !310, file: !1, line: 152, type: !8)
!314 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 3, scope: !310, file: !1, line: 152, type: !8)
!315 = !DISubprogram(name: "clear", linkageName: "_ZN6wayobj5clearEv", scope: !"_ZTS6wayobj", file: !1, line: 161, type: !143, isLocal: false, isDefinition: true, scopeLine: 162, flags: DIFlagPrototyped, isOptimized: true, function: void (%class.wayobj*)* @_ZN6wayobj5clearEv, declaration: !142, variables: !316)
!316 = !{!317, !318, !319, !320}
!317 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !315, type: !275, flags: DIFlagArtificial | DIFlagObjectPointer)
!318 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !315, file: !1, line: 163, type: !8)
!319 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !315, file: !1, line: 164, type: !8)
!320 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !315, file: !1, line: 164, type: !8)
!321 = !DISubprogram(name: "loadmap", linkageName: "_ZN6wayobj7loadmapEPKc", scope: !"_ZTS6wayobj", file: !1, line: 186, type: !146, isLocal: false, isDefinition: true, scopeLine: 187, flags: DIFlagPrototyped, isOptimized: true, function: i1 (%class.wayobj*, i8*)* @_ZN6wayobj7loadmapEPKc, declaration: !145, variables: !322)
!322 = !{!323, !324, !325, !326, !327, !328, !329, !330, !331}
!323 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !321, type: !275, flags: DIFlagArtificial | DIFlagObjectPointer)
!324 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fn", arg: 2, scope: !321, file: !1, line: 186, type: !148)
!325 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hf", scope: !321, file: !1, line: 188, type: !12)
!326 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mapsizex", scope: !321, file: !1, line: 211, type: !8)
!327 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mapsizey", scope: !321, file: !1, line: 211, type: !8)
!328 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "info", scope: !321, file: !1, line: 212, type: !"_ZTS17createwaymnginfot")
!329 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mapp", scope: !321, file: !1, line: 213, type: !265)
!330 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !321, file: !1, line: 214, type: !8)
!331 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !321, file: !1, line: 214, type: !8)
!332 = !DISubprogram(name: "initmap", linkageName: "_ZN6wayobj7initmapEii", scope: !"_ZTS6wayobj", file: !1, line: 266, type: !65, isLocal: false, isDefinition: true, scopeLine: 267, flags: DIFlagPrototyped, isOptimized: true, function: i1 (%class.wayobj*, i32, i32)* @_ZN6wayobj7initmapEii, declaration: !151, variables: !333)
!333 = !{!334, !335, !336, !337}
!334 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !332, type: !275, flags: DIFlagArtificial | DIFlagObjectPointer)
!335 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mapsizex", arg: 2, scope: !332, file: !1, line: 266, type: !8)
!336 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mapsizey", arg: 3, scope: !332, file: !1, line: 266, type: !8)
!337 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "info", scope: !332, file: !1, line: 268, type: !"_ZTS17createwaymnginfot")
!338 = !DISubprogram(name: "create", linkageName: "_ZN6wayobj6createEv", scope: !"_ZTS6wayobj", file: !1, line: 286, type: !143, isLocal: false, isDefinition: true, scopeLine: 287, flags: DIFlagPrototyped, isOptimized: true, function: void (%class.wayobj*)* @_ZN6wayobj6createEv, declaration: !155, variables: !339)
!339 = !{!340}
!340 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !338, type: !275, flags: DIFlagArtificial | DIFlagObjectPointer)
!341 = !DISubprogram(name: "create", linkageName: "_ZN6wayobj6createE17createwaymnginfot", scope: !"_ZTS6wayobj", file: !1, line: 291, type: !153, isLocal: false, isDefinition: true, scopeLine: 292, flags: DIFlagPrototyped, isOptimized: true, function: void (%class.wayobj*, %struct.createwaymnginfot*)* @_ZN6wayobj6createE17createwaymnginfot, declaration: !152, variables: !342)
!342 = !{!343, !344, !345}
!343 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !341, type: !275, flags: DIFlagArtificial | DIFlagObjectPointer)
!344 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "info", arg: 2, scope: !341, file: !1, line: 291, type: !"_ZTS17createwaymnginfot")
!345 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !341, file: !1, line: 293, type: !8)
!346 = !DISubprogram(name: "destroy", linkageName: "_ZN6wayobj7destroyEv", scope: !"_ZTS6wayobj", file: !1, line: 333, type: !143, isLocal: false, isDefinition: true, scopeLine: 334, flags: DIFlagPrototyped, isOptimized: true, function: void (%class.wayobj*)* @_ZN6wayobj7destroyEv, declaration: !156, variables: !347)
!347 = !{!348}
!348 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !346, type: !275, flags: DIFlagArtificial | DIFlagObjectPointer)
!349 = !DISubprogram(name: "sqr", linkageName: "_Z3sqrf", scope: !9, file: !9, line: 387, type: !350, isLocal: false, isDefinition: true, scopeLine: 388, flags: DIFlagPrototyped, isOptimized: true, variables: !352)
!350 = !DISubroutineType(types: !351)
!351 = !{!22, !22}
!352 = !{!353}
!353 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 1, scope: !349, file: !9, line: 387, type: !22)
!354 = !{i32 2, !"Dwarf Version", i32 2}
!355 = !{i32 2, !"Debug Info Version", i32 700000003}
!356 = !{i32 1, !"PIC Level", i32 2}
!357 = !{!"Apple LLVM version 7.0.0 (clang-700.1.76)"}
!358 = !DIExpression()
!359 = !DILocation(line: 0, scope: !272)
!360 = !DILocation(line: 21, column: 40, scope: !272)
!361 = !DILocation(line: 21, column: 55, scope: !272)
!362 = !DILocation(line: 31, column: 15, scope: !363)
!363 = distinct !DILexicalBlock(scope: !272, file: !1, line: 31, column: 7)
!364 = !{!365, !366, i64 4}
!365 = !{!"_ZTS8rvectort", !366, i64 0, !366, i64 4, !366, i64 8}
!366 = !{!"float", !367, i64 0}
!367 = !{!"omnipotent char", !368, i64 0}
!368 = !{!"Simple C/C++ TBAA"}
!369 = !DILocation(line: 31, column: 23, scope: !363)
!370 = !{!371, !366, i64 84}
!371 = !{!"_ZTS6wayobj", !372, i64 0, !372, i64 4, !372, i64 8, !372, i64 12, !372, i64 16, !372, i64 20, !372, i64 24, !372, i64 28, !372, i64 32, !366, i64 36, !366, i64 40, !366, i64 44, !366, i64 48, !366, i64 52, !373, i64 56, !374, i64 88, !376, i64 120, !376, i64 128, !376, i64 136, !376, i64 144, !372, i64 152, !372, i64 156, !375, i64 160, !372, i64 164, !377, i64 168, !377, i64 170}
!372 = !{!"int", !367, i64 0}
!373 = !{!"_ZTS17createwaymnginfot", !366, i64 0, !366, i64 4, !366, i64 8, !366, i64 12, !372, i64 16, !372, i64 20, !366, i64 24, !366, i64 28}
!374 = !{!"_ZTS14createwayinfot", !365, i64 0, !365, i64 12, !375, i64 24}
!375 = !{!"bool", !367, i64 0}
!376 = !{!"any pointer", !367, i64 0}
!377 = !{!"short", !367, i64 0}
!378 = !DILocation(line: 31, column: 16, scope: !363)
!379 = !DILocation(line: 31, column: 7, scope: !272)
!380 = !DILocation(line: 33, column: 14, scope: !381)
!381 = distinct !DILexicalBlock(scope: !363, file: !1, line: 32, column: 3)
!382 = !DILocation(line: 33, column: 35, scope: !381)
!383 = !DILocation(line: 387, column: 24, scope: !349, inlinedAt: !384)
!384 = distinct !DILocation(line: 33, column: 22, scope: !381)
!385 = !DILocation(line: 389, column: 11, scope: !349, inlinedAt: !384)
!386 = !DILocation(line: 33, column: 21, scope: !381)
!387 = !DILocation(line: 25, column: 9, scope: !272)
!388 = !DILocation(line: 34, column: 11, scope: !389)
!389 = distinct !DILexicalBlock(scope: !381, file: !1, line: 34, column: 9)
!390 = !DILocation(line: 34, column: 9, scope: !381)
!391 = !DILocation(line: 36, column: 12, scope: !381)
!392 = !DILocation(line: 37, column: 3, scope: !381)
!393 = !DILocation(line: 39, column: 25, scope: !394)
!394 = distinct !DILexicalBlock(scope: !363, file: !1, line: 39, column: 9)
!395 = !{!371, !366, i64 80}
!396 = !DILocation(line: 39, column: 18, scope: !394)
!397 = !DILocation(line: 39, column: 9, scope: !363)
!398 = !DILocation(line: 41, column: 16, scope: !399)
!399 = distinct !DILexicalBlock(scope: !394, file: !1, line: 40, column: 5)
!400 = !DILocation(line: 41, column: 40, scope: !399)
!401 = !DILocation(line: 387, column: 24, scope: !349, inlinedAt: !402)
!402 = distinct !DILocation(line: 41, column: 24, scope: !399)
!403 = !DILocation(line: 389, column: 11, scope: !349, inlinedAt: !402)
!404 = !DILocation(line: 41, column: 23, scope: !399)
!405 = !DILocation(line: 42, column: 13, scope: !406)
!406 = distinct !DILexicalBlock(scope: !399, file: !1, line: 42, column: 11)
!407 = !DILocation(line: 42, column: 11, scope: !399)
!408 = !DILocation(line: 44, column: 14, scope: !399)
!409 = !DILocation(line: 45, column: 5, scope: !399)
!410 = !DILocation(line: 52, column: 21, scope: !272)
!411 = !{!365, !366, i64 0}
!412 = !DILocation(line: 52, column: 22, scope: !272)
!413 = !DILocation(line: 52, column: 30, scope: !272)
!414 = !{!371, !366, i64 52}
!415 = !DILocation(line: 52, column: 29, scope: !272)
!416 = !DILocation(line: 52, column: 37, scope: !272)
!417 = !{!371, !366, i64 36}
!418 = !DILocation(line: 52, column: 36, scope: !272)
!419 = !DILocation(line: 52, column: 44, scope: !272)
!420 = !{!371, !366, i64 40}
!421 = !DILocation(line: 52, column: 43, scope: !272)
!422 = !DILocation(line: 52, column: 11, scope: !272)
!423 = !DILocation(line: 23, column: 7, scope: !272)
!424 = !DILocation(line: 53, column: 21, scope: !272)
!425 = !{!365, !366, i64 8}
!426 = !DILocation(line: 53, column: 22, scope: !272)
!427 = !DILocation(line: 53, column: 29, scope: !272)
!428 = !DILocation(line: 53, column: 37, scope: !272)
!429 = !{!371, !366, i64 44}
!430 = !DILocation(line: 53, column: 36, scope: !272)
!431 = !DILocation(line: 53, column: 44, scope: !272)
!432 = !{!371, !366, i64 48}
!433 = !DILocation(line: 53, column: 43, scope: !272)
!434 = !DILocation(line: 53, column: 11, scope: !272)
!435 = !DILocation(line: 23, column: 10, scope: !272)
!436 = !DILocation(line: 54, column: 22, scope: !272)
!437 = !DILocation(line: 54, column: 29, scope: !272)
!438 = !DILocation(line: 54, column: 36, scope: !272)
!439 = !DILocation(line: 54, column: 43, scope: !272)
!440 = !DILocation(line: 54, column: 11, scope: !272)
!441 = !DILocation(line: 23, column: 13, scope: !272)
!442 = !DILocation(line: 55, column: 22, scope: !272)
!443 = !DILocation(line: 55, column: 29, scope: !272)
!444 = !DILocation(line: 55, column: 36, scope: !272)
!445 = !DILocation(line: 55, column: 43, scope: !272)
!446 = !DILocation(line: 55, column: 11, scope: !272)
!447 = !DILocation(line: 23, column: 16, scope: !272)
!448 = !DILocation(line: 58, column: 10, scope: !449)
!449 = distinct !DILexicalBlock(scope: !272, file: !1, line: 58, column: 7)
!450 = !{!371, !372, i64 20}
!451 = !DILocation(line: 58, column: 9, scope: !449)
!452 = !DILocation(line: 58, column: 7, scope: !272)
!453 = !DILocation(line: 59, column: 10, scope: !454)
!454 = distinct !DILexicalBlock(scope: !272, file: !1, line: 59, column: 7)
!455 = !{!371, !372, i64 24}
!456 = !DILocation(line: 59, column: 9, scope: !454)
!457 = !DILocation(line: 60, column: 9, scope: !458)
!458 = distinct !DILexicalBlock(scope: !272, file: !1, line: 60, column: 7)
!459 = !DILocation(line: 59, column: 7, scope: !272)
!460 = !DILocation(line: 61, column: 9, scope: !461)
!461 = distinct !DILexicalBlock(scope: !272, file: !1, line: 61, column: 7)
!462 = !DILocation(line: 63, column: 9, scope: !463)
!463 = distinct !DILexicalBlock(scope: !272, file: !1, line: 63, column: 7)
!464 = !DILocation(line: 63, column: 7, scope: !272)
!465 = !DILocation(line: 64, column: 9, scope: !466)
!466 = distinct !DILexicalBlock(scope: !272, file: !1, line: 64, column: 7)
!467 = !DILocation(line: 64, column: 7, scope: !272)
!468 = !DILocation(line: 65, column: 9, scope: !469)
!469 = distinct !DILexicalBlock(scope: !272, file: !1, line: 65, column: 7)
!470 = !DILocation(line: 65, column: 7, scope: !272)
!471 = !DILocation(line: 66, column: 9, scope: !472)
!472 = distinct !DILexicalBlock(scope: !272, file: !1, line: 66, column: 7)
!473 = !DILocation(line: 66, column: 7, scope: !272)
!474 = !DILocation(line: 68, column: 21, scope: !272)
!475 = !DILocation(line: 387, column: 24, scope: !349, inlinedAt: !476)
!476 = distinct !DILocation(line: 68, column: 11, scope: !272)
!477 = !DILocation(line: 389, column: 11, scope: !349, inlinedAt: !476)
!478 = !DILocation(line: 26, column: 9, scope: !272)
!479 = !DILocation(line: 28, column: 9, scope: !272)
!480 = !DILocation(line: 70, column: 15, scope: !481)
!481 = distinct !DILexicalBlock(scope: !482, file: !1, line: 70, column: 3)
!482 = distinct !DILexicalBlock(scope: !272, file: !1, line: 70, column: 3)
!483 = !DILocation(line: 70, column: 3, scope: !482)
!484 = !DILocation(line: 71, column: 17, scope: !485)
!485 = distinct !DILexicalBlock(scope: !486, file: !1, line: 71, column: 5)
!486 = distinct !DILexicalBlock(scope: !481, file: !1, line: 71, column: 5)
!487 = !DILocation(line: 73, column: 15, scope: !488)
!488 = distinct !DILexicalBlock(scope: !485, file: !1, line: 72, column: 5)
!489 = !DILocation(line: 73, column: 43, scope: !488)
!490 = !DILocation(line: 73, column: 59, scope: !488)
!491 = !DILocation(line: 74, column: 15, scope: !488)
!492 = !DILocation(line: 74, column: 43, scope: !488)
!493 = !DILocation(line: 74, column: 59, scope: !488)
!494 = !DILocation(line: 79, column: 19, scope: !495)
!495 = distinct !DILexicalBlock(scope: !488, file: !1, line: 78, column: 11)
!496 = !DILocation(line: 79, column: 9, scope: !495)
!497 = !DILocation(line: 71, column: 5, scope: !486)
!498 = !{!371, !366, i64 56}
!499 = !DILocation(line: 73, column: 19, scope: !488)
!500 = !{!371, !366, i64 60}
!501 = !DILocation(line: 73, column: 47, scope: !488)
!502 = !{!371, !372, i64 28}
!503 = !{!371, !366, i64 64}
!504 = !DILocation(line: 74, column: 19, scope: !488)
!505 = !DILocation(line: 74, column: 34, scope: !488)
!506 = !{!371, !366, i64 68}
!507 = !DILocation(line: 74, column: 47, scope: !488)
!508 = !DILocation(line: 74, column: 36, scope: !488)
!509 = !{!371, !372, i64 32}
!510 = !DILocation(line: 74, column: 58, scope: !488)
!511 = !DILocation(line: 74, column: 25, scope: !488)
!512 = !DILocation(line: 76, column: 41, scope: !488)
!513 = !DILocation(line: 389, column: 11, scope: !349, inlinedAt: !514)
!514 = distinct !DILocation(line: 76, column: 28, scope: !488)
!515 = !DILocation(line: 73, column: 34, scope: !488)
!516 = !DILocation(line: 73, column: 36, scope: !488)
!517 = !DILocation(line: 73, column: 58, scope: !488)
!518 = !DILocation(line: 73, column: 25, scope: !488)
!519 = !DILocation(line: 24, column: 9, scope: !272)
!520 = !DILocation(line: 24, column: 12, scope: !272)
!521 = !DILocation(line: 76, column: 23, scope: !488)
!522 = !DILocation(line: 387, column: 24, scope: !349, inlinedAt: !523)
!523 = distinct !DILocation(line: 76, column: 10, scope: !488)
!524 = !DILocation(line: 389, column: 11, scope: !349, inlinedAt: !523)
!525 = !DILocation(line: 387, column: 24, scope: !349, inlinedAt: !514)
!526 = !DILocation(line: 76, column: 27, scope: !488)
!527 = !DILocation(line: 27, column: 9, scope: !272)
!528 = !DILocation(line: 78, column: 13, scope: !495)
!529 = !DILocation(line: 78, column: 11, scope: !488)
!530 = !{!371, !372, i64 8}
!531 = !DILocation(line: 79, column: 17, scope: !495)
!532 = !DILocation(line: 79, column: 24, scope: !495)
!533 = !{!371, !376, i64 120}
!534 = !DILocation(line: 79, column: 27, scope: !495)
!535 = !{!377, !377, i64 0}
!536 = !DILocation(line: 71, column: 24, scope: !485)
!537 = !DILocation(line: 28, column: 7, scope: !272)
!538 = !DILocation(line: 70, column: 22, scope: !481)
!539 = !DILocation(line: 81, column: 1, scope: !272)
!540 = !DILocation(line: 0, scope: !289)
!541 = !DILocation(line: 83, column: 43, scope: !289)
!542 = !DILocation(line: 83, column: 58, scope: !289)
!543 = !DILocation(line: 93, column: 15, scope: !544)
!544 = distinct !DILexicalBlock(scope: !289, file: !1, line: 93, column: 7)
!545 = !DILocation(line: 93, column: 23, scope: !544)
!546 = !DILocation(line: 93, column: 16, scope: !544)
!547 = !DILocation(line: 93, column: 7, scope: !289)
!548 = !DILocation(line: 95, column: 14, scope: !549)
!549 = distinct !DILexicalBlock(scope: !544, file: !1, line: 94, column: 3)
!550 = !DILocation(line: 95, column: 35, scope: !549)
!551 = !DILocation(line: 387, column: 24, scope: !349, inlinedAt: !552)
!552 = distinct !DILocation(line: 95, column: 22, scope: !549)
!553 = !DILocation(line: 389, column: 11, scope: !349, inlinedAt: !552)
!554 = !DILocation(line: 95, column: 21, scope: !549)
!555 = !DILocation(line: 87, column: 9, scope: !289)
!556 = !DILocation(line: 96, column: 11, scope: !557)
!557 = distinct !DILexicalBlock(scope: !549, file: !1, line: 96, column: 9)
!558 = !DILocation(line: 96, column: 9, scope: !549)
!559 = !DILocation(line: 98, column: 12, scope: !549)
!560 = !DILocation(line: 99, column: 3, scope: !549)
!561 = !DILocation(line: 101, column: 25, scope: !562)
!562 = distinct !DILexicalBlock(scope: !544, file: !1, line: 101, column: 9)
!563 = !DILocation(line: 101, column: 18, scope: !562)
!564 = !DILocation(line: 101, column: 9, scope: !544)
!565 = !DILocation(line: 103, column: 16, scope: !566)
!566 = distinct !DILexicalBlock(scope: !562, file: !1, line: 102, column: 5)
!567 = !DILocation(line: 103, column: 40, scope: !566)
!568 = !DILocation(line: 387, column: 24, scope: !349, inlinedAt: !569)
!569 = distinct !DILocation(line: 103, column: 24, scope: !566)
!570 = !DILocation(line: 389, column: 11, scope: !349, inlinedAt: !569)
!571 = !DILocation(line: 103, column: 23, scope: !566)
!572 = !DILocation(line: 104, column: 13, scope: !573)
!573 = distinct !DILexicalBlock(scope: !566, file: !1, line: 104, column: 11)
!574 = !DILocation(line: 104, column: 11, scope: !566)
!575 = !DILocation(line: 106, column: 14, scope: !566)
!576 = !DILocation(line: 107, column: 5, scope: !566)
!577 = !DILocation(line: 114, column: 21, scope: !289)
!578 = !DILocation(line: 114, column: 22, scope: !289)
!579 = !DILocation(line: 114, column: 30, scope: !289)
!580 = !DILocation(line: 114, column: 29, scope: !289)
!581 = !DILocation(line: 114, column: 37, scope: !289)
!582 = !DILocation(line: 114, column: 36, scope: !289)
!583 = !DILocation(line: 114, column: 44, scope: !289)
!584 = !DILocation(line: 114, column: 43, scope: !289)
!585 = !DILocation(line: 114, column: 11, scope: !289)
!586 = !DILocation(line: 85, column: 7, scope: !289)
!587 = !DILocation(line: 115, column: 21, scope: !289)
!588 = !DILocation(line: 115, column: 22, scope: !289)
!589 = !DILocation(line: 115, column: 29, scope: !289)
!590 = !DILocation(line: 115, column: 37, scope: !289)
!591 = !DILocation(line: 115, column: 36, scope: !289)
!592 = !DILocation(line: 115, column: 44, scope: !289)
!593 = !DILocation(line: 115, column: 43, scope: !289)
!594 = !DILocation(line: 115, column: 11, scope: !289)
!595 = !DILocation(line: 85, column: 10, scope: !289)
!596 = !DILocation(line: 116, column: 22, scope: !289)
!597 = !DILocation(line: 116, column: 29, scope: !289)
!598 = !DILocation(line: 116, column: 36, scope: !289)
!599 = !DILocation(line: 116, column: 43, scope: !289)
!600 = !DILocation(line: 116, column: 11, scope: !289)
!601 = !DILocation(line: 85, column: 13, scope: !289)
!602 = !DILocation(line: 117, column: 22, scope: !289)
!603 = !DILocation(line: 117, column: 29, scope: !289)
!604 = !DILocation(line: 117, column: 36, scope: !289)
!605 = !DILocation(line: 117, column: 43, scope: !289)
!606 = !DILocation(line: 117, column: 11, scope: !289)
!607 = !DILocation(line: 85, column: 16, scope: !289)
!608 = !DILocation(line: 120, column: 10, scope: !609)
!609 = distinct !DILexicalBlock(scope: !289, file: !1, line: 120, column: 7)
!610 = !DILocation(line: 120, column: 9, scope: !609)
!611 = !DILocation(line: 120, column: 7, scope: !289)
!612 = !DILocation(line: 121, column: 10, scope: !613)
!613 = distinct !DILexicalBlock(scope: !289, file: !1, line: 121, column: 7)
!614 = !DILocation(line: 121, column: 9, scope: !613)
!615 = !DILocation(line: 122, column: 9, scope: !616)
!616 = distinct !DILexicalBlock(scope: !289, file: !1, line: 122, column: 7)
!617 = !DILocation(line: 121, column: 7, scope: !289)
!618 = !DILocation(line: 123, column: 9, scope: !619)
!619 = distinct !DILexicalBlock(scope: !289, file: !1, line: 123, column: 7)
!620 = !DILocation(line: 125, column: 9, scope: !621)
!621 = distinct !DILexicalBlock(scope: !289, file: !1, line: 125, column: 7)
!622 = !DILocation(line: 125, column: 7, scope: !289)
!623 = !DILocation(line: 126, column: 9, scope: !624)
!624 = distinct !DILexicalBlock(scope: !289, file: !1, line: 126, column: 7)
!625 = !DILocation(line: 126, column: 7, scope: !289)
!626 = !DILocation(line: 127, column: 9, scope: !627)
!627 = distinct !DILexicalBlock(scope: !289, file: !1, line: 127, column: 7)
!628 = !DILocation(line: 127, column: 7, scope: !289)
!629 = !DILocation(line: 128, column: 9, scope: !630)
!630 = distinct !DILexicalBlock(scope: !289, file: !1, line: 128, column: 7)
!631 = !DILocation(line: 128, column: 7, scope: !289)
!632 = !DILocation(line: 130, column: 21, scope: !289)
!633 = !DILocation(line: 387, column: 24, scope: !349, inlinedAt: !634)
!634 = distinct !DILocation(line: 130, column: 11, scope: !289)
!635 = !DILocation(line: 389, column: 11, scope: !349, inlinedAt: !634)
!636 = !DILocation(line: 88, column: 9, scope: !289)
!637 = !DILocation(line: 90, column: 9, scope: !289)
!638 = !DILocation(line: 132, column: 15, scope: !639)
!639 = distinct !DILexicalBlock(scope: !640, file: !1, line: 132, column: 3)
!640 = distinct !DILexicalBlock(scope: !289, file: !1, line: 132, column: 3)
!641 = !DILocation(line: 132, column: 3, scope: !640)
!642 = !DILocation(line: 133, column: 17, scope: !643)
!643 = distinct !DILexicalBlock(scope: !644, file: !1, line: 133, column: 5)
!644 = distinct !DILexicalBlock(scope: !639, file: !1, line: 133, column: 5)
!645 = !DILocation(line: 135, column: 15, scope: !646)
!646 = distinct !DILexicalBlock(scope: !643, file: !1, line: 134, column: 5)
!647 = !DILocation(line: 135, column: 43, scope: !646)
!648 = !DILocation(line: 135, column: 59, scope: !646)
!649 = !DILocation(line: 136, column: 15, scope: !646)
!650 = !DILocation(line: 136, column: 43, scope: !646)
!651 = !DILocation(line: 136, column: 59, scope: !646)
!652 = !DILocation(line: 142, column: 17, scope: !646)
!653 = !DILocation(line: 142, column: 7, scope: !646)
!654 = !DILocation(line: 133, column: 5, scope: !644)
!655 = !DILocation(line: 135, column: 19, scope: !646)
!656 = !DILocation(line: 135, column: 47, scope: !646)
!657 = !DILocation(line: 136, column: 19, scope: !646)
!658 = !DILocation(line: 136, column: 34, scope: !646)
!659 = !DILocation(line: 136, column: 47, scope: !646)
!660 = !DILocation(line: 136, column: 36, scope: !646)
!661 = !DILocation(line: 136, column: 58, scope: !646)
!662 = !DILocation(line: 136, column: 25, scope: !646)
!663 = !DILocation(line: 138, column: 41, scope: !646)
!664 = !DILocation(line: 389, column: 11, scope: !349, inlinedAt: !665)
!665 = distinct !DILocation(line: 138, column: 28, scope: !646)
!666 = !DILocation(line: 135, column: 34, scope: !646)
!667 = !DILocation(line: 135, column: 36, scope: !646)
!668 = !DILocation(line: 135, column: 58, scope: !646)
!669 = !DILocation(line: 135, column: 25, scope: !646)
!670 = !DILocation(line: 86, column: 9, scope: !289)
!671 = !DILocation(line: 86, column: 12, scope: !289)
!672 = !DILocation(line: 138, column: 23, scope: !646)
!673 = !DILocation(line: 387, column: 24, scope: !349, inlinedAt: !674)
!674 = distinct !DILocation(line: 138, column: 10, scope: !646)
!675 = !DILocation(line: 389, column: 11, scope: !349, inlinedAt: !674)
!676 = !DILocation(line: 387, column: 24, scope: !349, inlinedAt: !665)
!677 = !DILocation(line: 138, column: 27, scope: !646)
!678 = !DILocation(line: 89, column: 9, scope: !289)
!679 = !DILocation(line: 140, column: 13, scope: !680)
!680 = distinct !DILexicalBlock(scope: !646, file: !1, line: 140, column: 11)
!681 = !DILocation(line: 140, column: 11, scope: !646)
!682 = !DILocation(line: 142, column: 15, scope: !646)
!683 = !DILocation(line: 142, column: 22, scope: !646)
!684 = !DILocation(line: 142, column: 25, scope: !646)
!685 = !DILocation(line: 143, column: 5, scope: !646)
!686 = !DILocation(line: 133, column: 24, scope: !643)
!687 = !DILocation(line: 90, column: 7, scope: !289)
!688 = !DILocation(line: 132, column: 22, scope: !639)
!689 = !DILocation(line: 144, column: 1, scope: !289)
!690 = !DILocation(line: 0, scope: !305)
!691 = !DILocation(line: 146, column: 27, scope: !305)
!692 = !DILocation(line: 146, column: 34, scope: !305)
!693 = !DILocation(line: 148, column: 17, scope: !694)
!694 = distinct !DILexicalBlock(scope: !305, file: !1, line: 148, column: 7)
!695 = !DILocation(line: 148, column: 15, scope: !694)
!696 = !DILocation(line: 148, column: 22, scope: !694)
!697 = !DILocation(line: 148, column: 7, scope: !694)
!698 = !DILocation(line: 148, column: 25, scope: !694)
!699 = !DILocation(line: 148, column: 7, scope: !305)
!700 = !DILocation(line: 149, column: 23, scope: !694)
!701 = !DILocation(line: 149, column: 5, scope: !694)
!702 = !DILocation(line: 150, column: 1, scope: !305)
!703 = !DILocation(line: 0, scope: !310)
!704 = !DILocation(line: 152, column: 30, scope: !310)
!705 = !DILocation(line: 152, column: 37, scope: !310)
!706 = !DILocation(line: 154, column: 17, scope: !707)
!707 = distinct !DILexicalBlock(scope: !310, file: !1, line: 154, column: 7)
!708 = !DILocation(line: 154, column: 15, scope: !707)
!709 = !DILocation(line: 154, column: 22, scope: !707)
!710 = !DILocation(line: 154, column: 7, scope: !707)
!711 = !DILocation(line: 154, column: 25, scope: !707)
!712 = !DILocation(line: 154, column: 7, scope: !310)
!713 = !DILocation(line: 155, column: 23, scope: !707)
!714 = !DILocation(line: 155, column: 5, scope: !707)
!715 = !DILocation(line: 156, column: 1, scope: !310)
!716 = !DILocation(line: 0, scope: !315)
!717 = !DILocation(line: 166, column: 12, scope: !315)
!718 = !{!371, !372, i64 0}
!719 = !DILocation(line: 166, column: 10, scope: !315)
!720 = !DILocation(line: 166, column: 24, scope: !315)
!721 = !{!371, !372, i64 4}
!722 = !DILocation(line: 166, column: 22, scope: !315)
!723 = !DILocation(line: 163, column: 7, scope: !315)
!724 = !DILocation(line: 168, column: 10, scope: !315)
!725 = !DILocation(line: 168, column: 19, scope: !315)
!726 = !DILocation(line: 168, column: 23, scope: !315)
!727 = !DILocation(line: 168, column: 3, scope: !315)
!728 = !DILocation(line: 169, column: 10, scope: !315)
!729 = !{!371, !376, i64 128}
!730 = !DILocation(line: 169, column: 23, scope: !315)
!731 = !DILocation(line: 169, column: 3, scope: !315)
!732 = !DILocation(line: 164, column: 9, scope: !315)
!733 = !DILocation(line: 171, column: 15, scope: !734)
!734 = distinct !DILexicalBlock(scope: !735, file: !1, line: 171, column: 3)
!735 = distinct !DILexicalBlock(scope: !315, file: !1, line: 171, column: 3)
!736 = !DILocation(line: 171, column: 14, scope: !734)
!737 = !DILocation(line: 171, column: 3, scope: !735)
!738 = !DILocation(line: 172, column: 15, scope: !734)
!739 = !DILocation(line: 172, column: 5, scope: !734)
!740 = !DILocation(line: 174, column: 3, scope: !741)
!741 = distinct !DILexicalBlock(scope: !315, file: !1, line: 174, column: 3)
!742 = !DILocation(line: 175, column: 15, scope: !743)
!743 = distinct !DILexicalBlock(scope: !741, file: !1, line: 174, column: 3)
!744 = !DILocation(line: 175, column: 21, scope: !743)
!745 = !{!371, !372, i64 12}
!746 = !DILocation(line: 175, column: 5, scope: !743)
!747 = !DILocation(line: 172, column: 13, scope: !734)
!748 = !DILocation(line: 172, column: 23, scope: !734)
!749 = !DILocation(line: 171, column: 23, scope: !734)
!750 = !DILocation(line: 177, column: 15, scope: !751)
!751 = distinct !DILexicalBlock(scope: !752, file: !1, line: 177, column: 3)
!752 = distinct !DILexicalBlock(scope: !315, file: !1, line: 177, column: 3)
!753 = !DILocation(line: 177, column: 14, scope: !751)
!754 = !DILocation(line: 177, column: 3, scope: !752)
!755 = !DILocation(line: 175, column: 13, scope: !743)
!756 = !DILocation(line: 175, column: 20, scope: !743)
!757 = !DILocation(line: 175, column: 29, scope: !743)
!758 = !DILocation(line: 174, column: 23, scope: !743)
!759 = !DILocation(line: 174, column: 14, scope: !743)
!760 = !DILocation(line: 178, column: 5, scope: !751)
!761 = !DILocation(line: 178, column: 23, scope: !751)
!762 = !DILocation(line: 180, column: 15, scope: !763)
!763 = distinct !DILexicalBlock(scope: !764, file: !1, line: 180, column: 3)
!764 = distinct !DILexicalBlock(scope: !315, file: !1, line: 180, column: 3)
!765 = !DILocation(line: 180, column: 14, scope: !763)
!766 = !DILocation(line: 180, column: 3, scope: !764)
!767 = !DILocation(line: 181, column: 12, scope: !763)
!768 = !{!371, !372, i64 16}
!769 = !DILocation(line: 181, column: 21, scope: !763)
!770 = !DILocation(line: 181, column: 19, scope: !763)
!771 = !DILocation(line: 181, column: 5, scope: !763)
!772 = !DILocation(line: 181, column: 26, scope: !763)
!773 = !DILocation(line: 181, column: 29, scope: !763)
!774 = !DILocation(line: 180, column: 23, scope: !763)
!775 = !DILocation(line: 164, column: 7, scope: !315)
!776 = !DILocation(line: 182, column: 1, scope: !315)
!777 = !DILocation(line: 0, scope: !321)
!778 = !DILocation(line: 186, column: 34, scope: !321)
!779 = !DILocation(line: 212, column: 21, scope: !321)
!780 = !DILocation(line: 217, column: 6, scope: !321)
!781 = !DILocation(line: 188, column: 7, scope: !321)
!782 = !DILocation(line: 222, column: 9, scope: !783)
!783 = distinct !DILexicalBlock(scope: !321, file: !1, line: 222, column: 7)
!784 = !DILocation(line: 222, column: 7, scope: !321)
!785 = !DILocation(line: 237, column: 11, scope: !321)
!786 = !DILocation(line: 237, column: 3, scope: !321)
!787 = !DILocation(line: 238, column: 11, scope: !321)
!788 = !DILocation(line: 238, column: 3, scope: !321)
!789 = !DIExpression(DW_OP_bit_piece, 0, 32)
!790 = !DIExpression(DW_OP_bit_piece, 32, 32)
!791 = !DIExpression(DW_OP_bit_piece, 96, 32)
!792 = !DILocation(line: 211, column: 7, scope: !321)
!793 = !DILocation(line: 245, column: 33, scope: !321)
!794 = !{!372, !372, i64 0}
!795 = !DILocation(line: 245, column: 21, scope: !321)
!796 = !DILocation(line: 245, column: 42, scope: !321)
!797 = !DILocation(line: 245, column: 51, scope: !321)
!798 = !DILocation(line: 245, column: 20, scope: !321)
!799 = !DIExpression(DW_OP_bit_piece, 128, 32)
!800 = !DILocation(line: 211, column: 16, scope: !321)
!801 = !DILocation(line: 246, column: 33, scope: !321)
!802 = !DILocation(line: 246, column: 21, scope: !321)
!803 = !DILocation(line: 246, column: 42, scope: !321)
!804 = !DILocation(line: 246, column: 51, scope: !321)
!805 = !DILocation(line: 246, column: 20, scope: !321)
!806 = !DIExpression(DW_OP_bit_piece, 160, 32)
!807 = !DIExpression(DW_OP_bit_piece, 192, 32)
!808 = !DIExpression(DW_OP_bit_piece, 224, 32)
!809 = !DILocation(line: 250, column: 10, scope: !321)
!810 = !DILocation(line: 250, column: 3, scope: !321)
!811 = !DILocation(line: 252, column: 23, scope: !321)
!812 = !DILocation(line: 252, column: 32, scope: !321)
!813 = !DILocation(line: 252, column: 31, scope: !321)
!814 = !DILocation(line: 252, column: 16, scope: !321)
!815 = !DILocation(line: 213, column: 10, scope: !321)
!816 = !DILocation(line: 253, column: 3, scope: !321)
!817 = !DILocation(line: 214, column: 9, scope: !321)
!818 = !DILocation(line: 255, column: 15, scope: !819)
!819 = distinct !DILexicalBlock(scope: !820, file: !1, line: 255, column: 3)
!820 = distinct !DILexicalBlock(scope: !321, file: !1, line: 255, column: 3)
!821 = !DILocation(line: 255, column: 14, scope: !819)
!822 = !DILocation(line: 255, column: 3, scope: !820)
!823 = !DILocation(line: 256, column: 17, scope: !824)
!824 = distinct !DILexicalBlock(scope: !825, file: !1, line: 256, column: 5)
!825 = distinct !DILexicalBlock(scope: !819, file: !1, line: 256, column: 5)
!826 = !DILocation(line: 256, column: 16, scope: !824)
!827 = !DILocation(line: 257, column: 34, scope: !824)
!828 = !DILocation(line: 257, column: 7, scope: !824)
!829 = !DILocation(line: 256, column: 5, scope: !825)
!830 = !DILocation(line: 257, column: 32, scope: !824)
!831 = !DILocation(line: 257, column: 39, scope: !824)
!832 = !DILocation(line: 257, column: 26, scope: !824)
!833 = !{!367, !367, i64 0}
!834 = !DILocation(line: 257, column: 25, scope: !824)
!835 = !DILocation(line: 256, column: 27, scope: !824)
!836 = !DILocation(line: 214, column: 7, scope: !321)
!837 = !DILocation(line: 255, column: 25, scope: !819)
!838 = !DILocation(line: 259, column: 3, scope: !321)
!839 = !DILocation(line: 261, column: 3, scope: !321)
!840 = !DILocation(line: 263, column: 3, scope: !321)
!841 = !DILocation(line: 264, column: 1, scope: !321)
!842 = !DILocation(line: 0, scope: !341)
!843 = !DILocation(line: 291, column: 39, scope: !341)
!844 = !DILocation(line: 295, column: 11, scope: !341)
!845 = !DILocation(line: 295, column: 15, scope: !341)
!846 = !{i64 0, i64 4, !847, i64 4, i64 4, !847, i64 8, i64 4, !847, i64 12, i64 4, !847, i64 16, i64 4, !794, i64 20, i64 4, !794, i64 24, i64 4, !847, i64 28, i64 4, !847}
!847 = !{!366, !366, i64 0}
!848 = !DILocation(line: 297, column: 18, scope: !341)
!849 = !DILocation(line: 297, column: 3, scope: !341)
!850 = !DILocation(line: 297, column: 12, scope: !341)
!851 = !DILocation(line: 298, column: 3, scope: !341)
!852 = !DILocation(line: 298, column: 12, scope: !341)
!853 = !DILocation(line: 299, column: 3, scope: !341)
!854 = !DILocation(line: 299, column: 8, scope: !341)
!855 = !DILocation(line: 300, column: 13, scope: !341)
!856 = !DILocation(line: 300, column: 3, scope: !341)
!857 = !DILocation(line: 301, column: 13, scope: !341)
!858 = !DILocation(line: 300, column: 25, scope: !341)
!859 = !DILocation(line: 300, column: 10, scope: !341)
!860 = !DILocation(line: 304, column: 3, scope: !341)
!861 = !DILocation(line: 304, column: 8, scope: !341)
!862 = !DILocation(line: 305, column: 3, scope: !341)
!863 = !DILocation(line: 305, column: 8, scope: !341)
!864 = !DILocation(line: 307, column: 15, scope: !341)
!865 = !{!373, !366, i64 4}
!866 = !DILocation(line: 307, column: 25, scope: !341)
!867 = !{!373, !366, i64 0}
!868 = !DILocation(line: 307, column: 19, scope: !341)
!869 = !DILocation(line: 307, column: 33, scope: !341)
!870 = !DILocation(line: 307, column: 31, scope: !341)
!871 = !DILocation(line: 307, column: 30, scope: !341)
!872 = !DILocation(line: 307, column: 3, scope: !341)
!873 = !DILocation(line: 307, column: 8, scope: !341)
!874 = !DILocation(line: 308, column: 13, scope: !875)
!875 = distinct !DILexicalBlock(scope: !341, file: !1, line: 308, column: 7)
!876 = !{!373, !366, i64 12}
!877 = !DILocation(line: 308, column: 23, scope: !875)
!878 = !{!373, !366, i64 8}
!879 = !DILocation(line: 308, column: 17, scope: !875)
!880 = !DILocation(line: 308, column: 31, scope: !875)
!881 = !DILocation(line: 308, column: 29, scope: !875)
!882 = !DILocation(line: 308, column: 28, scope: !875)
!883 = !DILocation(line: 308, column: 38, scope: !875)
!884 = !DILocation(line: 308, column: 7, scope: !341)
!885 = !DILocation(line: 309, column: 10, scope: !875)
!886 = !DILocation(line: 309, column: 5, scope: !875)
!887 = !DILocation(line: 311, column: 10, scope: !341)
!888 = !DILocation(line: 311, column: 3, scope: !341)
!889 = !DILocation(line: 312, column: 10, scope: !341)
!890 = !DILocation(line: 312, column: 16, scope: !341)
!891 = !DILocation(line: 313, column: 10, scope: !341)
!892 = !DILocation(line: 314, column: 10, scope: !341)
!893 = !DILocation(line: 314, column: 16, scope: !341)
!894 = !DILocation(line: 311, column: 15, scope: !341)
!895 = !DILocation(line: 311, column: 9, scope: !341)
!896 = !DILocation(line: 316, column: 22, scope: !341)
!897 = !DILocation(line: 293, column: 7, scope: !341)
!898 = !DILocation(line: 318, column: 10, scope: !341)
!899 = !DILocation(line: 318, column: 3, scope: !341)
!900 = !DILocation(line: 318, column: 9, scope: !341)
!901 = !DILocation(line: 319, column: 10, scope: !341)
!902 = !DILocation(line: 319, column: 3, scope: !341)
!903 = !DILocation(line: 319, column: 9, scope: !341)
!904 = !DILocation(line: 321, column: 3, scope: !341)
!905 = !DILocation(line: 324, column: 23, scope: !341)
!906 = !DILocation(line: 324, column: 31, scope: !341)
!907 = !DILocation(line: 324, column: 28, scope: !341)
!908 = !DILocation(line: 324, column: 19, scope: !341)
!909 = !DILocation(line: 324, column: 3, scope: !341)
!910 = !DILocation(line: 324, column: 17, scope: !341)
!911 = !{!371, !372, i64 152}
!912 = !DILocation(line: 325, column: 11, scope: !341)
!913 = !DILocation(line: 325, column: 3, scope: !341)
!914 = !DILocation(line: 325, column: 10, scope: !341)
!915 = !{!371, !376, i64 136}
!916 = !DILocation(line: 326, column: 11, scope: !341)
!917 = !DILocation(line: 326, column: 3, scope: !341)
!918 = !DILocation(line: 326, column: 10, scope: !341)
!919 = !{!371, !376, i64 144}
!920 = !DILocation(line: 328, column: 18, scope: !341)
!921 = !DILocation(line: 328, column: 16, scope: !341)
!922 = !DILocation(line: 328, column: 24, scope: !341)
!923 = !DILocation(line: 328, column: 3, scope: !341)
!924 = !DILocation(line: 328, column: 13, scope: !341)
!925 = !{!371, !372, i64 156}
!926 = !DILocation(line: 330, column: 3, scope: !341)
!927 = !DILocation(line: 330, column: 10, scope: !341)
!928 = !{!371, !377, i64 170}
!929 = !DILocation(line: 331, column: 1, scope: !341)
!930 = !DILocation(line: 0, scope: !332)
!931 = !DILocation(line: 266, column: 26, scope: !332)
!932 = !DILocation(line: 266, column: 40, scope: !332)
!933 = !DILocation(line: 268, column: 21, scope: !332)
!934 = !DILocation(line: 274, column: 33, scope: !332)
!935 = !DILocation(line: 274, column: 21, scope: !332)
!936 = !DILocation(line: 274, column: 42, scope: !332)
!937 = !DILocation(line: 274, column: 51, scope: !332)
!938 = !DILocation(line: 274, column: 20, scope: !332)
!939 = !DILocation(line: 275, column: 33, scope: !332)
!940 = !DILocation(line: 275, column: 21, scope: !332)
!941 = !DILocation(line: 275, column: 42, scope: !332)
!942 = !DILocation(line: 275, column: 51, scope: !332)
!943 = !DILocation(line: 275, column: 20, scope: !332)
!944 = !DILocation(line: 279, column: 10, scope: !332)
!945 = !DILocation(line: 279, column: 3, scope: !332)
!946 = !DILocation(line: 281, column: 3, scope: !332)
!947 = !DILocation(line: 0, scope: !338)
!948 = !DILocation(line: 289, column: 1, scope: !338)
!949 = !DILocation(line: 0, scope: !346)
!950 = !DILocation(line: 335, column: 13, scope: !346)
!951 = !DILocation(line: 335, column: 3, scope: !346)
!952 = !DILocation(line: 336, column: 13, scope: !346)
!953 = !DILocation(line: 336, column: 3, scope: !346)
!954 = !DILocation(line: 338, column: 13, scope: !346)
!955 = !DILocation(line: 338, column: 3, scope: !346)
!956 = !DILocation(line: 339, column: 13, scope: !346)
!957 = !DILocation(line: 339, column: 3, scope: !346)
!958 = !DILocation(line: 340, column: 1, scope: !346)
