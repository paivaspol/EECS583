; ModuleID = '../../SPEC_CPU2006v1.1/benchspec/CPU2006/471.omnetpp/src/libs/sim/errmsg.cc'
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.10.0"

@.str = private unnamed_addr constant [30 x i8] c"No error -- everything's fine\00", align 1
@.str1 = private unnamed_addr constant [35 x i8] c"Cannot cast from type `%c' to `%c'\00", align 1
@.str2 = private unnamed_addr constant [44 x i8] c"Indirection would create circular reference\00", align 1
@.str3 = private unnamed_addr constant [37 x i8] c"Bad number of arguments, %d expected\00", align 1
@.str4 = private unnamed_addr constant [71 x i8] c"Cannot find module interface `%s' needed to create module of type `%s'\00", align 1
@.str5 = private unnamed_addr constant [40 x i8] c"Error during starting up user interface\00", align 1
@.str6 = private unnamed_addr constant [43 x i8] c"Simulation stopped by segment on host `%s'\00", align 1
@.str7 = private unnamed_addr constant [42 x i8] c"No such module or module finished already\00", align 1
@.str8 = private unnamed_addr constant [22 x i8] c"Module has no gate %d\00", align 1
@.str9 = private unnamed_addr constant [35 x i8] c"send(): Gate `%s' is an input gate\00", align 1
@.str10 = private unnamed_addr constant [32 x i8] c"No module parameter called `%s'\00", align 1
@.str11 = private unnamed_addr constant [26 x i8] c"Not enough memory on heap\00", align 1
@.str12 = private unnamed_addr constant [30 x i8] c"Incausality during simulation\00", align 1
@.str13 = private unnamed_addr constant [47 x i8] c"Message sent to already terminated module `%s'\00", align 1
@.str14 = private unnamed_addr constant [53 x i8] c"Transfer to nonexistent, finished or compound module\00", align 1
@.str15 = private unnamed_addr constant [46 x i8] c"setValue(): Type `%c' does not suit arg types\00", align 1
@.str16 = private unnamed_addr constant [47 x i8] c"Something unexpected happened (internal error)\00", align 1
@.str17 = private unnamed_addr constant [54 x i8] c"Cannot use receive..() or wait() with handleMessage()\00", align 1
@.str18 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str19 = private unnamed_addr constant [35 x i8] c"No more events -- simulation ended\00", align 1
@.str20 = private unnamed_addr constant [28 x i8] c"Module initialization error\00", align 1
@.str21 = private unnamed_addr constant [21 x i8] c"Object #%d not found\00", align 1
@.str22 = private unnamed_addr constant [32 x i8] c"Cannot write output vector file\00", align 1
@.str23 = private unnamed_addr constant [35 x i8] c"Cannot write parameter change file\00", align 1
@.str24 = private unnamed_addr constant [23 x i8] c"wait(): negative delay\00", align 1
@.str25 = private unnamed_addr constant [25 x i8] c"Floating point exception\00", align 1
@.str26 = private unnamed_addr constant [41 x i8] c"receive()/receiveNew(): negative timeout\00", align 1
@.str27 = private unnamed_addr constant [28 x i8] c"Message cannot be delivered\00", align 1
@.str28 = private unnamed_addr constant [21 x i8] c"Simulation cancelled\00", align 1
@.str29 = private unnamed_addr constant [29 x i8] c"Network definition not found\00", align 1
@.str30 = private unnamed_addr constant [39 x i8] c"Badly formed Reverse Polish expression\00", align 1
@.str31 = private unnamed_addr constant [48 x i8] c"All finish() functions called, simulation ended\00", align 1
@.str32 = private unnamed_addr constant [40 x i8] c"Simulation stopped with endSimulation()\00", align 1
@.str33 = private unnamed_addr constant [45 x i8] c"CPU time limit reached -- simulation stopped\00", align 1
@.str34 = private unnamed_addr constant [52 x i8] c"Simulation time limit reached -- simulation stopped\00", align 1
@.str35 = private unnamed_addr constant [30 x i8] c"This object cannot DUP itself\00", align 1
@.str36 = private unnamed_addr constant [57 x i8] c"FSM: infinite loop of transient states (now in state %s)\00", align 1
@.str37 = private unnamed_addr constant [61 x i8] c"FSM: state changed during state entry code (now in state %s)\00", align 1
@.str38 = private unnamed_addr constant [55 x i8] c"assignment, copying, dup() not supported by this class\00", align 1
@.str39 = private unnamed_addr constant [21 x i8] c"Badly connected gate\00", align 1
@.str40 = private unnamed_addr constant [31 x i8] c"Gate not connected to anything\00", align 1
@.str41 = private unnamed_addr constant [31 x i8] c"PVM: function call error in %s\00", align 1
@.str42 = private unnamed_addr constant [26 x i8] c"Bad command line argument\00", align 1
@.str43 = private unnamed_addr constant [38 x i8] c"Cannot schedule a message to the past\00", align 1
@.str44 = private unnamed_addr constant [36 x i8] c"receiveOn(): gate %d is output gate\00", align 1
@.str45 = private unnamed_addr constant [34 x i8] c"Channel error out of range [0..1]\00", align 1
@.str46 = private unnamed_addr constant [26 x i8] c"Delay time less than zero\00", align 1
@.str47 = private unnamed_addr constant [30 x i8] c"Array index out of boundaries\00", align 1
@.str48 = private unnamed_addr constant [40 x i8] c"Not enough memory on heap for module %s\00", align 1
@.str49 = private unnamed_addr constant [15 x i8] c"User error: %s\00", align 1
@emsg = global [58 x i8*] [i8* getelementptr inbounds ([30 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8]* @.str2, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8]* @.str3, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8]* @.str4, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8]* @.str5, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8]* @.str6, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8]* @.str7, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @.str8, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8]* @.str9, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8]* @.str10, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8]* @.str11, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8]* @.str13, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8]* @.str14, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8]* @.str15, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8]* @.str16, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8]* @.str17, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str18, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8]* @.str20, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @.str21, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @.str21, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8]* @.str22, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8]* @.str23, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8]* @.str24, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str18, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8]* @.str26, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8]* @.str27, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @.str28, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @.str29, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8]* @.str30, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8]* @.str31, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8]* @.str32, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8]* @.str33, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8]* @.str34, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @.str35, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8]* @.str36, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8]* @.str37, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8]* @.str38, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @.str39, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8]* @.str40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str18, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str18, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str18, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str18, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8]* @.str41, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8]* @.str42, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8]* @.str43, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8]* @.str44, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8]* @.str45, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8]* @.str46, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @.str47, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str18, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8]* @.str48, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str49, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str18, i32 0, i32 0)], align 16

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!10, !11, !12}
!llvm.ident = !{!13}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1, producer: "Apple LLVM version 7.0.0 (clang-700.1.76)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !2, subprograms: !2, globals: !3, imports: !2)
!1 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/471.omnetpp/src/libs/sim/errmsg.cc", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!2 = !{}
!3 = !{!4}
!4 = !DIGlobalVariable(name: "emsg", scope: !0, file: !1, line: 29, type: !5, isLocal: false, isDefinition: true, variable: [58 x i8*]* @emsg)
!5 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 3712, align: 64, elements: !8)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64, align: 64)
!7 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!8 = !{!9}
!9 = !DISubrange(count: 58)
!10 = !{i32 2, !"Dwarf Version", i32 2}
!11 = !{i32 2, !"Debug Info Version", i32 700000003}
!12 = !{i32 1, !"PIC Level", i32 2}
!13 = !{!"Apple LLVM version 7.0.0 (clang-700.1.76)"}
