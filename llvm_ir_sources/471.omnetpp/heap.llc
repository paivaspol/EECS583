; ModuleID = '../../SPEC_CPU2006v1.1/benchspec/CPU2006/471.omnetpp/src/libs/cmdenv/heap.cc'
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.10.0"

%class.MemManager = type <{ i8*, i32, i8, [3 x i8] }>

@_ZL10memManager = internal global %class.MemManager zeroinitializer, align 8
@__dso_handle = external global i8
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTSSt9bad_alloc = internal constant [13 x i8] c"St9bad_alloc\00"
@_ZTISt9bad_alloc = internal constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([13 x i8]* @_ZTSSt9bad_alloc, i32 0, i32 0) }
@.str = private unnamed_addr constant [30 x i8] c"\0A[NEW (%lu) FAILED,exiting!]\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_heap.cc, i8* null }]

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN10MemManagerC2Ei(%class.MemManager* nocapture %this, i32 %mps) unnamed_addr #0 align 2 {
  tail call void @llvm.dbg.value(metadata %class.MemManager* %this, i64 0, metadata !42, metadata !259), !dbg !260
  tail call void @llvm.dbg.value(metadata i32 %mps, i64 0, metadata !44, metadata !259), !dbg !261
  %1 = getelementptr inbounds %class.MemManager* %this, i64 0, i32 1, !dbg !262
  store i32 %mps, i32* %1, align 4, !dbg !264, !tbaa !265
  %2 = sext i32 %mps to i64, !dbg !272
  %3 = tail call i8* @malloc(i64 %2) #10, !dbg !273
  %4 = getelementptr inbounds %class.MemManager* %this, i64 0, i32 0, !dbg !274
  store i8* %3, i8** %4, align 8, !dbg !275, !tbaa !276
  %5 = icmp eq i8* %3, null, !dbg !277
  %6 = getelementptr inbounds %class.MemManager* %this, i64 0, i32 2, !dbg !278
  %7 = zext i1 %5 to i8, !dbg !279
  store i8 %7, i8* %6, align 1, !dbg !279, !tbaa !280
  ret void, !dbg !281
}

; Function Attrs: nounwind optsize
declare noalias i8* @malloc(i64) #1

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN10MemManagerC1Ei(%class.MemManager* nocapture %this, i32 %mps) unnamed_addr #0 align 2 {
  tail call void @llvm.dbg.value(metadata %class.MemManager* %this, i64 0, metadata !47, metadata !259), !dbg !282
  tail call void @llvm.dbg.value(metadata i32 %mps, i64 0, metadata !48, metadata !259), !dbg !283
  tail call void @llvm.dbg.value(metadata %class.MemManager* %this, i64 0, metadata !42, metadata !259) #2, !dbg !284
  tail call void @llvm.dbg.value(metadata i32 %mps, i64 0, metadata !44, metadata !259) #2, !dbg !286
  %1 = getelementptr inbounds %class.MemManager* %this, i64 0, i32 1, !dbg !287
  store i32 %mps, i32* %1, align 4, !dbg !288, !tbaa !265
  %2 = sext i32 %mps to i64, !dbg !289
  %3 = tail call i8* @malloc(i64 %2) #11, !dbg !290
  %4 = getelementptr inbounds %class.MemManager* %this, i64 0, i32 0, !dbg !291
  store i8* %3, i8** %4, align 8, !dbg !292, !tbaa !276
  %5 = icmp eq i8* %3, null, !dbg !293
  %6 = getelementptr inbounds %class.MemManager* %this, i64 0, i32 2, !dbg !294
  %7 = zext i1 %5 to i8, !dbg !295
  store i8 %7, i8* %6, align 1, !dbg !295, !tbaa !280
  ret void, !dbg !296
}

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN10MemManagerD2Ev(%class.MemManager* nocapture %this) unnamed_addr #0 align 2 {
  tail call void @llvm.dbg.value(metadata %class.MemManager* %this, i64 0, metadata !51, metadata !259), !dbg !297
  %1 = getelementptr inbounds %class.MemManager* %this, i64 0, i32 0, !dbg !298
  %2 = load i8** %1, align 8, !dbg !298, !tbaa !276
  tail call void @free(i8* %2) #10, !dbg !300
  store i8* null, i8** %1, align 8, !dbg !301, !tbaa !276
  %3 = getelementptr inbounds %class.MemManager* %this, i64 0, i32 1, !dbg !302
  store i32 0, i32* %3, align 4, !dbg !303, !tbaa !265
  %4 = getelementptr inbounds %class.MemManager* %this, i64 0, i32 2, !dbg !304
  store i8 0, i8* %4, align 1, !dbg !305, !tbaa !280
  ret void, !dbg !306
}

; Function Attrs: nounwind optsize
declare void @free(i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN10MemManagerD1Ev(%class.MemManager* nocapture %this) unnamed_addr #0 align 2 {
  tail call void @llvm.dbg.value(metadata %class.MemManager* %this, i64 0, metadata !54, metadata !259), !dbg !307
  tail call void @llvm.dbg.value(metadata %class.MemManager* %this, i64 0, metadata !51, metadata !259) #2, !dbg !308
  %1 = getelementptr inbounds %class.MemManager* %this, i64 0, i32 0, !dbg !310
  %2 = load i8** %1, align 8, !dbg !310, !tbaa !276
  tail call void @free(i8* %2) #11, !dbg !311
  store i8* null, i8** %1, align 8, !dbg !312, !tbaa !276
  %3 = getelementptr inbounds %class.MemManager* %this, i64 0, i32 1, !dbg !313
  store i32 0, i32* %3, align 4, !dbg !314, !tbaa !265
  %4 = getelementptr inbounds %class.MemManager* %this, i64 0, i32 2, !dbg !315
  store i8 0, i8* %4, align 1, !dbg !316, !tbaa !280
  ret void, !dbg !317
}

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN10MemManager8makeRoomEv(%class.MemManager* nocapture %this) #0 align 2 {
  tail call void @llvm.dbg.value(metadata %class.MemManager* %this, i64 0, metadata !57, metadata !259), !dbg !318
  %1 = getelementptr inbounds %class.MemManager* %this, i64 0, i32 2, !dbg !319
  store i8 1, i8* %1, align 1, !dbg !320, !tbaa !280
  %2 = getelementptr inbounds %class.MemManager* %this, i64 0, i32 0, !dbg !321
  %3 = load i8** %2, align 8, !dbg !321, !tbaa !276
  tail call void @free(i8* %3) #10, !dbg !322
  store i8* null, i8** %2, align 8, !dbg !323, !tbaa !276
  ret void, !dbg !324
}

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN10MemManager11restorePoolEv(%class.MemManager* nocapture %this) #0 align 2 {
  tail call void @llvm.dbg.value(metadata %class.MemManager* %this, i64 0, metadata !60, metadata !259), !dbg !325
  %1 = getelementptr inbounds %class.MemManager* %this, i64 0, i32 2, !dbg !326
  %2 = load i8* %1, align 1, !dbg !326, !tbaa !280, !range !328
  %3 = icmp eq i8 %2, 0, !dbg !326
  br i1 %3, label %12, label %4, !dbg !329

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %class.MemManager* %this, i64 0, i32 1, !dbg !330
  %6 = load i32* %5, align 4, !dbg !330, !tbaa !265
  %7 = sext i32 %6 to i64, !dbg !330
  %8 = tail call i8* @malloc(i64 %7) #10, !dbg !332
  %9 = getelementptr inbounds %class.MemManager* %this, i64 0, i32 0, !dbg !333
  store i8* %8, i8** %9, align 8, !dbg !334, !tbaa !276
  %10 = icmp eq i8* %8, null, !dbg !335
  br i1 %10, label %12, label %11, !dbg !337

; <label>:11                                      ; preds = %4
  store i8 0, i8* %1, align 1, !dbg !338, !tbaa !280
  br label %12, !dbg !339

; <label>:12                                      ; preds = %4, %0, %11
  ret void, !dbg !340
}

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #2

; Function Attrs: nounwind optsize readonly ssp uwtable
define zeroext i1 @_Z17cmdenvMemoryIsLowv() #3 {
  tail call void @llvm.dbg.value(metadata %class.MemManager* @_ZL10memManager, i64 0, metadata !85, metadata !259), !dbg !341
  %1 = load i8* getelementptr inbounds (%class.MemManager* @_ZL10memManager, i64 0, i32 2), align 4, !dbg !343, !tbaa !280, !range !328
  %2 = icmp ne i8 %1, 0, !dbg !343
  ret i1 %2, !dbg !344
}

; Function Attrs: nobuiltin optsize ssp uwtable
define noalias i8* @_Znwm(i64 %m) #4 {
  tail call void @llvm.dbg.value(metadata i64 %m, i64 0, metadata !76, metadata !259), !dbg !345
  %1 = icmp eq i64 %m, 0, !dbg !346
  br i1 %1, label %20, label %2, !dbg !348

; <label>:2                                       ; preds = %0
  %3 = tail call i8* @malloc(i64 %m) #10, !dbg !349
  tail call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !77, metadata !259), !dbg !351
  %4 = icmp eq i8* %3, null, !dbg !352
  br i1 %4, label %11, label %20, !dbg !353

; <label>:5                                       ; preds = %17, %14
  %6 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          filter [1 x i8*] [i8* bitcast ({ i8*, i8* }* @_ZTISt9bad_alloc to i8*)], !dbg !354
  %7 = extractvalue { i8*, i32 } %6, 1, !dbg !354
  %8 = icmp slt i32 %7, 0, !dbg !355
  br i1 %8, label %9, label %21, !dbg !355

; <label>:9                                       ; preds = %5
  %10 = extractvalue { i8*, i32 } %6, 0, !dbg !354
  tail call void @__cxa_call_unexpected(i8* %10) #12, !dbg !355
  unreachable, !dbg !355

; <label>:11                                      ; preds = %2
  tail call void @llvm.dbg.value(metadata %class.MemManager* @_ZL10memManager, i64 0, metadata !85, metadata !259), !dbg !356
  %12 = load i8* getelementptr inbounds (%class.MemManager* @_ZL10memManager, i64 0, i32 2), align 4, !dbg !359, !tbaa !280, !range !328
  %13 = icmp eq i8 %12, 0, !dbg !359
  br i1 %13, label %14, label %17, !dbg !360

; <label>:14                                      ; preds = %11
  tail call void @llvm.dbg.value(metadata %class.MemManager* @_ZL10memManager, i64 0, metadata !57, metadata !259) #2, !dbg !361
  store i8 1, i8* getelementptr inbounds (%class.MemManager* @_ZL10memManager, i64 0, i32 2), align 4, !dbg !364, !tbaa !280
  %15 = load i8** getelementptr inbounds (%class.MemManager* @_ZL10memManager, i64 0, i32 0), align 8, !dbg !365, !tbaa !276
  tail call void @free(i8* %15) #11, !dbg !366
  store i8* null, i8** getelementptr inbounds (%class.MemManager* @_ZL10memManager, i64 0, i32 0), align 8, !dbg !367, !tbaa !276
  %16 = invoke noalias i8* @_Znam(i64 %m) #13
          to label %20 unwind label %5, !dbg !368

; <label>:17                                      ; preds = %11
  %18 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str, i64 0, i64 0), i64 %m) #10, !dbg !369
  invoke void @exit(i32 1) #14
          to label %19 unwind label %5, !dbg !371

; <label>:19                                      ; preds = %17
  unreachable, !dbg !371

; <label>:20                                      ; preds = %14, %2, %0
  %.0 = phi i8* [ null, %0 ], [ %3, %2 ], [ %16, %14 ]
  ret i8* %.0, !dbg !355

; <label>:21                                      ; preds = %5
  resume { i8*, i32 } %6, !dbg !355
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: nobuiltin optsize
declare noalias i8* @_Znam(i64) #5

; Function Attrs: nounwind optsize
declare i32 @printf(i8* nocapture readonly, ...) #1

; Function Attrs: noreturn optsize
declare void @exit(i32) #6

declare void @__cxa_call_unexpected(i8*)

; Function Attrs: nobuiltin nounwind optsize ssp uwtable
define void @_ZdlPv(i8* %p) #7 {
  tail call void @llvm.dbg.value(metadata i8* %p, i64 0, metadata !82, metadata !259), !dbg !372
  %1 = icmp eq i8* %p, null, !dbg !373
  br i1 %1, label %6, label %2, !dbg !375

; <label>:2                                       ; preds = %0
  tail call void @free(i8* %p) #10, !dbg !376
  tail call void @llvm.dbg.value(metadata %class.MemManager* @_ZL10memManager, i64 0, metadata !85, metadata !259), !dbg !377
  %3 = load i8* getelementptr inbounds (%class.MemManager* @_ZL10memManager, i64 0, i32 2), align 4, !dbg !380, !tbaa !280, !range !328
  %4 = icmp eq i8 %3, 0, !dbg !380
  br i1 %4, label %6, label %5, !dbg !381

; <label>:5                                       ; preds = %2
  tail call void @_ZN10MemManager11restorePoolEv(%class.MemManager* @_ZL10memManager) #10, !dbg !382
  br label %6

; <label>:6                                       ; preds = %2, %5, %0
  ret void, !dbg !383
}

; Function Attrs: nounwind optsize ssp
define internal void @_GLOBAL__sub_I_heap.cc() #8 section "__TEXT,__StaticInit,regular,pure_instructions" {
  tail call void @llvm.dbg.value(metadata %class.MemManager* @_ZL10memManager, i64 0, metadata !47, metadata !259) #2, !dbg !384
  tail call void @llvm.dbg.value(metadata i32 16384, i64 0, metadata !48, metadata !259) #2, !dbg !387
  tail call void @llvm.dbg.value(metadata %class.MemManager* @_ZL10memManager, i64 0, metadata !42, metadata !259) #2, !dbg !388
  tail call void @llvm.dbg.value(metadata i32 16384, i64 0, metadata !44, metadata !259) #2, !dbg !390
  store i32 16384, i32* getelementptr inbounds (%class.MemManager* @_ZL10memManager, i64 0, i32 1), align 8, !dbg !391, !tbaa !265
  %1 = tail call i8* @malloc(i64 16384) #11, !dbg !392
  store i8* %1, i8** getelementptr inbounds (%class.MemManager* @_ZL10memManager, i64 0, i32 0), align 8, !dbg !393, !tbaa !276
  %2 = icmp eq i8* %1, null, !dbg !394
  %3 = zext i1 %2 to i8, !dbg !395
  store i8 %3, i8* getelementptr inbounds (%class.MemManager* @_ZL10memManager, i64 0, i32 2), align 4, !dbg !395, !tbaa !280
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.MemManager*)* @_ZN10MemManagerD1Ev to void (i8*)*), i8* bitcast (%class.MemManager* @_ZL10memManager to i8*), i8* @__dso_handle) #2, !dbg !396
  ret void
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #9

attributes #0 = { nounwind optsize ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind optsize "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { nounwind optsize readonly ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin optsize ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin optsize "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn optsize "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind optsize ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind optsize ssp "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone }
attributes #10 = { optsize }
attributes #11 = { nounwind optsize }
attributes #12 = { noreturn }
attributes #13 = { builtin optsize }
attributes #14 = { noreturn optsize }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!255, !256, !257}
!llvm.ident = !{!258}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1, producer: "Apple LLVM version 7.0.0 (clang-700.1.76)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !39, globals: !88, imports: !90)
!1 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/471.omnetpp/src/libs/cmdenv/heap.cc", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!2 = !{}
!3 = !{!4, !10, !15, !20, !23, !13}
!4 = !DICompositeType(tag: DW_TAG_structure_type, file: !5, line: 82, size: 64, align: 32, elements: !6, identifier: "_ZTS5div_t")
!5 = !DIFile(filename: "/usr/include/stdlib.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!6 = !{!7, !9}
!7 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !"_ZTS5div_t", file: !5, line: 83, baseType: !8, size: 32, align: 32)
!8 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!9 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !"_ZTS5div_t", file: !5, line: 84, baseType: !8, size: 32, align: 32, offset: 32)
!10 = !DICompositeType(tag: DW_TAG_structure_type, file: !5, line: 87, size: 128, align: 64, elements: !11, identifier: "_ZTS6ldiv_t")
!11 = !{!12, !14}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !"_ZTS6ldiv_t", file: !5, line: 88, baseType: !13, size: 64, align: 64)
!13 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !"_ZTS6ldiv_t", file: !5, line: 89, baseType: !13, size: 64, align: 64, offset: 64)
!15 = !DICompositeType(tag: DW_TAG_structure_type, file: !5, line: 93, size: 128, align: 64, elements: !16, identifier: "_ZTS7lldiv_t")
!16 = !{!17, !19}
!17 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !"_ZTS7lldiv_t", file: !5, line: 94, baseType: !18, size: 64, align: 64)
!18 = !DIBasicType(name: "long long int", size: 64, align: 64, encoding: DW_ATE_signed)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !"_ZTS7lldiv_t", file: !5, line: 95, baseType: !18, size: 64, align: 64, offset: 64)
!20 = !DICompositeType(tag: DW_TAG_class_type, name: "MemManager", file: !1, line: 100, size: 128, align: 64, elements: !21, identifier: "_ZTS10MemManager")
!21 = !{!22, !24, !25, !27, !31, !34, !35, !36}
!22 = !DIDerivedType(tag: DW_TAG_member, name: "safetypool", scope: !"_ZTS10MemManager", file: !1, line: 103, baseType: !23, size: 64, align: 64)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "maxpoolsize", scope: !"_ZTS10MemManager", file: !1, line: 104, baseType: !8, size: 32, align: 32, offset: 64)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "lowmem", scope: !"_ZTS10MemManager", file: !1, line: 105, baseType: !26, size: 8, align: 8, offset: 96)
!26 = !DIBasicType(name: "bool", size: 8, align: 8, encoding: DW_ATE_boolean)
!27 = !DISubprogram(name: "MemManager", scope: !"_ZTS10MemManager", file: !1, line: 107, type: !28, isLocal: false, isDefinition: false, scopeLine: 107, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!28 = !DISubroutineType(types: !29)
!29 = !{null, !30, !8}
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS10MemManager", size: 64, align: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!31 = !DISubprogram(name: "~MemManager", scope: !"_ZTS10MemManager", file: !1, line: 108, type: !32, isLocal: false, isDefinition: false, scopeLine: 108, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!32 = !DISubroutineType(types: !33)
!33 = !{null, !30}
!34 = !DISubprogram(name: "makeRoom", linkageName: "_ZN10MemManager8makeRoomEv", scope: !"_ZTS10MemManager", file: !1, line: 109, type: !32, isLocal: false, isDefinition: false, scopeLine: 109, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!35 = !DISubprogram(name: "restorePool", linkageName: "_ZN10MemManager11restorePoolEv", scope: !"_ZTS10MemManager", file: !1, line: 110, type: !32, isLocal: false, isDefinition: false, scopeLine: 110, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!36 = !DISubprogram(name: "lowMemory", linkageName: "_ZN10MemManager9lowMemoryEv", scope: !"_ZTS10MemManager", file: !1, line: 111, type: !37, isLocal: false, isDefinition: false, scopeLine: 111, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: true)
!37 = !DISubroutineType(types: !38)
!38 = !{!26, !30}
!39 = !{!40, !45, !49, !52, !55, !58, !61, !64, !67, !78, !83, !86}
!40 = !DISubprogram(name: "MemManager", linkageName: "_ZN10MemManagerC2Ei", scope: !"_ZTS10MemManager", file: !1, line: 114, type: !28, isLocal: false, isDefinition: true, scopeLine: 115, flags: DIFlagPrototyped, isOptimized: true, function: void (%class.MemManager*, i32)* @_ZN10MemManagerC2Ei, declaration: !27, variables: !41)
!41 = !{!42, !44}
!42 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !40, type: !43, flags: DIFlagArtificial | DIFlagObjectPointer)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS10MemManager", size: 64, align: 64)
!44 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mps", arg: 2, scope: !40, file: !1, line: 114, type: !8)
!45 = !DISubprogram(name: "MemManager", linkageName: "_ZN10MemManagerC1Ei", scope: !"_ZTS10MemManager", file: !1, line: 114, type: !28, isLocal: false, isDefinition: true, scopeLine: 115, flags: DIFlagPrototyped, isOptimized: true, function: void (%class.MemManager*, i32)* @_ZN10MemManagerC1Ei, declaration: !27, variables: !46)
!46 = !{!47, !48}
!47 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !45, type: !43, flags: DIFlagArtificial | DIFlagObjectPointer)
!48 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mps", arg: 2, scope: !45, file: !1, line: 114, type: !8)
!49 = !DISubprogram(name: "~MemManager", linkageName: "_ZN10MemManagerD2Ev", scope: !"_ZTS10MemManager", file: !1, line: 121, type: !32, isLocal: false, isDefinition: true, scopeLine: 122, flags: DIFlagPrototyped, isOptimized: true, function: void (%class.MemManager*)* @_ZN10MemManagerD2Ev, declaration: !31, variables: !50)
!50 = !{!51}
!51 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !49, type: !43, flags: DIFlagArtificial | DIFlagObjectPointer)
!52 = !DISubprogram(name: "~MemManager", linkageName: "_ZN10MemManagerD1Ev", scope: !"_ZTS10MemManager", file: !1, line: 121, type: !32, isLocal: false, isDefinition: true, scopeLine: 122, flags: DIFlagPrototyped, isOptimized: true, function: void (%class.MemManager*)* @_ZN10MemManagerD1Ev, declaration: !31, variables: !53)
!53 = !{!54}
!54 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !52, type: !43, flags: DIFlagArtificial | DIFlagObjectPointer)
!55 = !DISubprogram(name: "makeRoom", linkageName: "_ZN10MemManager8makeRoomEv", scope: !"_ZTS10MemManager", file: !1, line: 129, type: !32, isLocal: false, isDefinition: true, scopeLine: 130, flags: DIFlagPrototyped, isOptimized: true, function: void (%class.MemManager*)* @_ZN10MemManager8makeRoomEv, declaration: !34, variables: !56)
!56 = !{!57}
!57 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !55, type: !43, flags: DIFlagArtificial | DIFlagObjectPointer)
!58 = !DISubprogram(name: "restorePool", linkageName: "_ZN10MemManager11restorePoolEv", scope: !"_ZTS10MemManager", file: !1, line: 136, type: !32, isLocal: false, isDefinition: true, scopeLine: 137, flags: DIFlagPrototyped, isOptimized: true, function: void (%class.MemManager*)* @_ZN10MemManager11restorePoolEv, declaration: !35, variables: !59)
!59 = !{!60}
!60 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !58, type: !43, flags: DIFlagArtificial | DIFlagObjectPointer)
!61 = !DISubprogram(name: "__cxx_global_var_init", scope: !1, file: !1, line: 148, type: !62, isLocal: true, isDefinition: true, scopeLine: 148, flags: DIFlagPrototyped, isOptimized: true, variables: !2)
!62 = !DISubroutineType(types: !63)
!63 = !{null}
!64 = !DISubprogram(name: "cmdenvMemoryIsLow", linkageName: "_Z17cmdenvMemoryIsLowv", scope: !1, file: !1, line: 150, type: !65, isLocal: false, isDefinition: true, scopeLine: 151, flags: DIFlagPrototyped, isOptimized: true, function: i1 ()* @_Z17cmdenvMemoryIsLowv, variables: !2)
!65 = !DISubroutineType(types: !66)
!66 = !{!26}
!67 = !DISubprogram(name: "operator new", linkageName: "_Znwm", scope: !1, file: !1, line: 298, type: !68, isLocal: false, isDefinition: true, scopeLine: 299, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i64)* @_Znwm, variables: !75)
!68 = !DISubroutineType(types: !69)
!69 = !{!23, !70}
!70 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !71, line: 30, baseType: !72)
!71 = !DIFile(filename: "/usr/include/sys/_types/_size_t.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!72 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_size_t", file: !73, line: 92, baseType: !74)
!73 = !DIFile(filename: "/usr/include/i386/_types.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!74 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!75 = !{!76, !77}
!76 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m", arg: 1, scope: !67, file: !1, line: 298, type: !70)
!77 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !67, file: !1, line: 304, type: !23)
!78 = !DISubprogram(name: "operator delete", linkageName: "_ZdlPv", scope: !1, file: !1, line: 359, type: !79, isLocal: false, isDefinition: true, scopeLine: 360, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*)* @_ZdlPv, variables: !81)
!79 = !DISubroutineType(types: !80)
!80 = !{null, !23}
!81 = !{!82}
!82 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 1, scope: !78, file: !1, line: 359, type: !23)
!83 = !DISubprogram(name: "lowMemory", linkageName: "_ZN10MemManager9lowMemoryEv", scope: !"_ZTS10MemManager", file: !1, line: 111, type: !37, isLocal: false, isDefinition: true, scopeLine: 111, flags: DIFlagPrototyped, isOptimized: true, declaration: !36, variables: !84)
!84 = !{!85}
!85 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !83, type: !43, flags: DIFlagArtificial | DIFlagObjectPointer)
!86 = !DISubprogram(linkageName: "_GLOBAL__sub_I_heap.cc", scope: !1, file: !1, type: !87, isLocal: true, isDefinition: true, flags: DIFlagArtificial, isOptimized: true, function: void ()* @_GLOBAL__sub_I_heap.cc, variables: !2)
!87 = !DISubroutineType(types: !2)
!88 = !{!89}
!89 = !DIGlobalVariable(name: "memManager", linkageName: "_ZL10memManager", scope: !0, file: !1, line: 148, type: !"_ZTS10MemManager", isLocal: true, isDefinition: true, variable: %class.MemManager* @_ZL10memManager)
!90 = !{!91, !95, !97, !99, !101, !109, !113, !117, !121, !127, !132, !137, !141, !145, !149, !154, !158, !163, !167, !169, !171, !175, !177, !182, !186, !188, !192, !194, !203, !207, !211, !215, !219, !223, !227, !231, !235, !241, !245, !249}
!91 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !70, line: 97)
!92 = !DINamespace(name: "__1", scope: !94, file: !93, line: 369)
!93 = !DIFile(filename: "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!94 = !DINamespace(name: "std", scope: null, file: !93, line: 368)
!95 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !96, line: 98)
!96 = !DIDerivedType(tag: DW_TAG_typedef, name: "div_t", file: !5, line: 85, baseType: !"_ZTS5div_t")
!97 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !98, line: 99)
!98 = !DIDerivedType(tag: DW_TAG_typedef, name: "ldiv_t", file: !5, line: 90, baseType: !"_ZTS6ldiv_t")
!99 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !100, line: 101)
!100 = !DIDerivedType(tag: DW_TAG_typedef, name: "lldiv_t", file: !5, line: 96, baseType: !"_ZTS7lldiv_t")
!101 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !102, line: 103)
!102 = !DISubprogram(name: "atof", scope: !5, file: !5, line: 131, type: !103, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!103 = !DISubroutineType(types: !104)
!104 = !{!105, !106}
!105 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 64, align: 64)
!107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!108 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!109 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !110, line: 104)
!110 = !DISubprogram(name: "atoi", scope: !5, file: !5, line: 132, type: !111, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!111 = !DISubroutineType(types: !112)
!112 = !{!8, !106}
!113 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !114, line: 105)
!114 = !DISubprogram(name: "atol", scope: !5, file: !5, line: 133, type: !115, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!115 = !DISubroutineType(types: !116)
!116 = !{!13, !106}
!117 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !118, line: 107)
!118 = !DISubprogram(name: "atoll", scope: !5, file: !5, line: 136, type: !119, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!119 = !DISubroutineType(types: !120)
!120 = !{!18, !106}
!121 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !122, line: 109)
!122 = !DISubprogram(name: "strtod", linkageName: "\01_strtod", scope: !5, file: !5, line: 162, type: !123, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!123 = !DISubroutineType(types: !124)
!124 = !{!105, !106, !125}
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64, align: 64)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64, align: 64)
!127 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !128, line: 110)
!128 = !DISubprogram(name: "strtof", linkageName: "\01_strtof", scope: !5, file: !5, line: 163, type: !129, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!129 = !DISubroutineType(types: !130)
!130 = !{!131, !106, !125}
!131 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!132 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !133, line: 111)
!133 = !DISubprogram(name: "strtold", scope: !5, file: !5, line: 166, type: !134, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!134 = !DISubroutineType(types: !135)
!135 = !{!136, !106, !125}
!136 = !DIBasicType(name: "long double", size: 128, align: 128, encoding: DW_ATE_float)
!137 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !138, line: 112)
!138 = !DISubprogram(name: "strtol", scope: !5, file: !5, line: 164, type: !139, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!139 = !DISubroutineType(types: !140)
!140 = !{!13, !106, !125, !8}
!141 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !142, line: 114)
!142 = !DISubprogram(name: "strtoll", scope: !5, file: !5, line: 169, type: !143, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!143 = !DISubroutineType(types: !144)
!144 = !{!18, !106, !125, !8}
!145 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !146, line: 116)
!146 = !DISubprogram(name: "strtoul", scope: !5, file: !5, line: 172, type: !147, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!147 = !DISubroutineType(types: !148)
!148 = !{!74, !106, !125, !8}
!149 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !150, line: 118)
!150 = !DISubprogram(name: "strtoull", scope: !5, file: !5, line: 175, type: !151, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!151 = !DISubroutineType(types: !152)
!152 = !{!153, !106, !125, !8}
!153 = !DIBasicType(name: "long long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!154 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !155, line: 120)
!155 = !DISubprogram(name: "rand", scope: !5, file: !5, line: 159, type: !156, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!156 = !DISubroutineType(types: !157)
!157 = !{!8}
!158 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !159, line: 121)
!159 = !DISubprogram(name: "srand", scope: !5, file: !5, line: 161, type: !160, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!160 = !DISubroutineType(types: !161)
!161 = !{null, !162}
!162 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!163 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !164, line: 122)
!164 = !DISubprogram(name: "calloc", scope: !5, file: !5, line: 140, type: !165, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!165 = !DISubroutineType(types: !166)
!166 = !{!23, !70, !70}
!167 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !168, line: 123)
!168 = !DISubprogram(name: "free", scope: !5, file: !5, line: 143, type: !79, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!169 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !170, line: 124)
!170 = !DISubprogram(name: "malloc", scope: !5, file: !5, line: 152, type: !68, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!171 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !172, line: 125)
!172 = !DISubprogram(name: "realloc", scope: !5, file: !5, line: 160, type: !173, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!173 = !DISubroutineType(types: !174)
!174 = !{!23, !23, !70}
!175 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !176, line: 126)
!176 = !DISubprogram(name: "abort", scope: !5, file: !5, line: 128, type: !62, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!177 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !178, line: 127)
!178 = !DISubprogram(name: "atexit", scope: !5, file: !5, line: 130, type: !179, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!179 = !DISubroutineType(types: !180)
!180 = !{!8, !181}
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64, align: 64)
!182 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !183, line: 128)
!183 = !DISubprogram(name: "exit", scope: !5, file: !5, line: 142, type: !184, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!184 = !DISubroutineType(types: !185)
!185 = !{null, !8}
!186 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !187, line: 129)
!187 = !DISubprogram(name: "_Exit", scope: !5, file: !5, line: 182, type: !184, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!188 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !189, line: 130)
!189 = !DISubprogram(name: "getenv", scope: !5, file: !5, line: 144, type: !190, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!190 = !DISubroutineType(types: !191)
!191 = !{!126, !106}
!192 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !193, line: 131)
!193 = !DISubprogram(name: "system", linkageName: "\01_system", scope: !5, file: !5, line: 177, type: !111, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!194 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !195, line: 132)
!195 = !DISubprogram(name: "bsearch", scope: !5, file: !5, line: 138, type: !196, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!196 = !DISubroutineType(types: !197)
!197 = !{!23, !198, !198, !70, !70, !200}
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 64, align: 64)
!199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64, align: 64)
!201 = !DISubroutineType(types: !202)
!202 = !{!8, !198, !198}
!203 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !204, line: 133)
!204 = !DISubprogram(name: "qsort", scope: !5, file: !5, line: 157, type: !205, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!205 = !DISubroutineType(types: !206)
!206 = !{null, !23, !70, !70, !200}
!207 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !208, line: 134)
!208 = !DISubprogram(name: "abs", scope: !5, file: !5, line: 129, type: !209, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!209 = !DISubroutineType(types: !210)
!210 = !{!8, !8}
!211 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !212, line: 135)
!212 = !DISubprogram(name: "labs", scope: !5, file: !5, line: 145, type: !213, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!213 = !DISubroutineType(types: !214)
!214 = !{!13, !13}
!215 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !216, line: 137)
!216 = !DISubprogram(name: "llabs", scope: !5, file: !5, line: 149, type: !217, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!217 = !DISubroutineType(types: !218)
!218 = !{!18, !18}
!219 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !220, line: 139)
!220 = !DISubprogram(name: "div", scope: !5, file: !5, line: 141, type: !221, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!221 = !DISubroutineType(types: !222)
!222 = !{!96, !8, !8}
!223 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !224, line: 140)
!224 = !DISubprogram(name: "ldiv", scope: !5, file: !5, line: 146, type: !225, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!225 = !DISubroutineType(types: !226)
!226 = !{!98, !13, !13}
!227 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !228, line: 142)
!228 = !DISubprogram(name: "lldiv", scope: !5, file: !5, line: 150, type: !229, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!229 = !DISubroutineType(types: !230)
!230 = !{!100, !18, !18}
!231 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !232, line: 144)
!232 = !DISubprogram(name: "mblen", scope: !5, file: !5, line: 153, type: !233, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!233 = !DISubroutineType(types: !234)
!234 = !{!8, !106, !70}
!235 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !236, line: 145)
!236 = !DISubprogram(name: "mbtowc", scope: !5, file: !5, line: 155, type: !237, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!237 = !DISubroutineType(types: !238)
!238 = !{!8, !239, !106, !70}
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64, align: 64)
!240 = !DIBasicType(name: "wchar_t", size: 32, align: 32, encoding: DW_ATE_signed)
!241 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !242, line: 146)
!242 = !DISubprogram(name: "wctomb", scope: !5, file: !5, line: 179, type: !243, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!243 = !DISubroutineType(types: !244)
!244 = !{!8, !126, !240}
!245 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !246, line: 147)
!246 = !DISubprogram(name: "mbstowcs", scope: !5, file: !5, line: 154, type: !247, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!247 = !DISubroutineType(types: !248)
!248 = !{!70, !239, !106, !70}
!249 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !92, entity: !250, line: 148)
!250 = !DISubprogram(name: "wcstombs", scope: !5, file: !5, line: 178, type: !251, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!251 = !DISubroutineType(types: !252)
!252 = !{!70, !126, !253, !70}
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64, align: 64)
!254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !240)
!255 = !{i32 2, !"Dwarf Version", i32 2}
!256 = !{i32 2, !"Debug Info Version", i32 700000003}
!257 = !{i32 1, !"PIC Level", i32 2}
!258 = !{!"Apple LLVM version 7.0.0 (clang-700.1.76)"}
!259 = !DIExpression()
!260 = !DILocation(line: 0, scope: !40)
!261 = !DILocation(line: 114, column: 28, scope: !40)
!262 = !DILocation(line: 116, column: 5, scope: !263)
!263 = distinct !DILexicalBlock(scope: !40, file: !1, line: 115, column: 1)
!264 = !DILocation(line: 116, column: 17, scope: !263)
!265 = !{!266, !270, i64 8}
!266 = !{!"_ZTS10MemManager", !267, i64 0, !270, i64 8, !271, i64 12}
!267 = !{!"any pointer", !268, i64 0}
!268 = !{!"omnipotent char", !269, i64 0}
!269 = !{!"Simple C/C++ TBAA"}
!270 = !{!"int", !268, i64 0}
!271 = !{!"bool", !268, i64 0}
!272 = !DILocation(line: 117, column: 30, scope: !263)
!273 = !DILocation(line: 117, column: 18, scope: !263)
!274 = !DILocation(line: 117, column: 5, scope: !263)
!275 = !DILocation(line: 117, column: 16, scope: !263)
!276 = !{!266, !267, i64 0}
!277 = !DILocation(line: 118, column: 25, scope: !263)
!278 = !DILocation(line: 118, column: 5, scope: !263)
!279 = !DILocation(line: 118, column: 12, scope: !263)
!280 = !{!266, !271, i64 12}
!281 = !DILocation(line: 119, column: 1, scope: !40)
!282 = !DILocation(line: 0, scope: !45)
!283 = !DILocation(line: 114, column: 28, scope: !45)
!284 = !DILocation(line: 0, scope: !40, inlinedAt: !285)
!285 = distinct !DILocation(line: 115, column: 1, scope: !45)
!286 = !DILocation(line: 114, column: 28, scope: !40, inlinedAt: !285)
!287 = !DILocation(line: 116, column: 5, scope: !263, inlinedAt: !285)
!288 = !DILocation(line: 116, column: 17, scope: !263, inlinedAt: !285)
!289 = !DILocation(line: 117, column: 30, scope: !263, inlinedAt: !285)
!290 = !DILocation(line: 117, column: 18, scope: !263, inlinedAt: !285)
!291 = !DILocation(line: 117, column: 5, scope: !263, inlinedAt: !285)
!292 = !DILocation(line: 117, column: 16, scope: !263, inlinedAt: !285)
!293 = !DILocation(line: 118, column: 25, scope: !263, inlinedAt: !285)
!294 = !DILocation(line: 118, column: 5, scope: !263, inlinedAt: !285)
!295 = !DILocation(line: 118, column: 12, scope: !263, inlinedAt: !285)
!296 = !DILocation(line: 119, column: 1, scope: !45)
!297 = !DILocation(line: 0, scope: !49)
!298 = !DILocation(line: 123, column: 15, scope: !299)
!299 = distinct !DILexicalBlock(scope: !49, file: !1, line: 122, column: 1)
!300 = !DILocation(line: 123, column: 5, scope: !299)
!301 = !DILocation(line: 124, column: 16, scope: !299)
!302 = !DILocation(line: 125, column: 5, scope: !299)
!303 = !DILocation(line: 125, column: 17, scope: !299)
!304 = !DILocation(line: 126, column: 5, scope: !299)
!305 = !DILocation(line: 126, column: 12, scope: !299)
!306 = !DILocation(line: 127, column: 1, scope: !49)
!307 = !DILocation(line: 0, scope: !52)
!308 = !DILocation(line: 0, scope: !49, inlinedAt: !309)
!309 = distinct !DILocation(line: 122, column: 1, scope: !52)
!310 = !DILocation(line: 123, column: 15, scope: !299, inlinedAt: !309)
!311 = !DILocation(line: 123, column: 5, scope: !299, inlinedAt: !309)
!312 = !DILocation(line: 124, column: 16, scope: !299, inlinedAt: !309)
!313 = !DILocation(line: 125, column: 5, scope: !299, inlinedAt: !309)
!314 = !DILocation(line: 125, column: 17, scope: !299, inlinedAt: !309)
!315 = !DILocation(line: 126, column: 5, scope: !299, inlinedAt: !309)
!316 = !DILocation(line: 126, column: 12, scope: !299, inlinedAt: !309)
!317 = !DILocation(line: 127, column: 1, scope: !52)
!318 = !DILocation(line: 0, scope: !55)
!319 = !DILocation(line: 131, column: 5, scope: !55)
!320 = !DILocation(line: 131, column: 12, scope: !55)
!321 = !DILocation(line: 132, column: 15, scope: !55)
!322 = !DILocation(line: 132, column: 5, scope: !55)
!323 = !DILocation(line: 133, column: 16, scope: !55)
!324 = !DILocation(line: 134, column: 1, scope: !55)
!325 = !DILocation(line: 0, scope: !58)
!326 = !DILocation(line: 138, column: 9, scope: !327)
!327 = distinct !DILexicalBlock(scope: !58, file: !1, line: 138, column: 9)
!328 = !{i8 0, i8 2}
!329 = !DILocation(line: 138, column: 9, scope: !58)
!330 = !DILocation(line: 140, column: 34, scope: !331)
!331 = distinct !DILexicalBlock(scope: !327, file: !1, line: 139, column: 5)
!332 = !DILocation(line: 140, column: 22, scope: !331)
!333 = !DILocation(line: 140, column: 9, scope: !331)
!334 = !DILocation(line: 140, column: 20, scope: !331)
!335 = !DILocation(line: 141, column: 12, scope: !336)
!336 = distinct !DILexicalBlock(scope: !331, file: !1, line: 141, column: 12)
!337 = !DILocation(line: 141, column: 12, scope: !331)
!338 = !DILocation(line: 142, column: 20, scope: !336)
!339 = !DILocation(line: 142, column: 13, scope: !336)
!340 = !DILocation(line: 144, column: 1, scope: !58)
!341 = !DILocation(line: 0, scope: !83, inlinedAt: !342)
!342 = distinct !DILocation(line: 152, column: 12, scope: !64)
!343 = !DILocation(line: 111, column: 32, scope: !83, inlinedAt: !342)
!344 = !DILocation(line: 152, column: 5, scope: !64)
!345 = !DILocation(line: 298, column: 27, scope: !67)
!346 = !DILocation(line: 303, column: 12, scope: !347)
!347 = distinct !DILexicalBlock(scope: !67, file: !1, line: 303, column: 11)
!348 = !DILocation(line: 303, column: 11, scope: !67)
!349 = !DILocation(line: 305, column: 14, scope: !350)
!350 = distinct !DILexicalBlock(scope: !67, file: !1, line: 305, column: 11)
!351 = !DILocation(line: 304, column: 13, scope: !67)
!352 = !DILocation(line: 305, column: 30, scope: !350)
!353 = !DILocation(line: 305, column: 11, scope: !67)
!354 = !DILocation(line: 357, column: 1, scope: !350)
!355 = !DILocation(line: 357, column: 1, scope: !67)
!356 = !DILocation(line: 0, scope: !83, inlinedAt: !357)
!357 = distinct !DILocation(line: 331, column: 17, scope: !358)
!358 = distinct !DILexicalBlock(scope: !350, file: !1, line: 331, column: 16)
!359 = !DILocation(line: 111, column: 32, scope: !83, inlinedAt: !357)
!360 = !DILocation(line: 331, column: 16, scope: !350)
!361 = !DILocation(line: 0, scope: !55, inlinedAt: !362)
!362 = distinct !DILocation(line: 334, column: 10, scope: !363)
!363 = distinct !DILexicalBlock(scope: !358, file: !1, line: 332, column: 7)
!364 = !DILocation(line: 131, column: 12, scope: !55, inlinedAt: !362)
!365 = !DILocation(line: 132, column: 15, scope: !55, inlinedAt: !362)
!366 = !DILocation(line: 132, column: 5, scope: !55, inlinedAt: !362)
!367 = !DILocation(line: 133, column: 16, scope: !55, inlinedAt: !362)
!368 = !DILocation(line: 335, column: 25, scope: !363)
!369 = !DILocation(line: 353, column: 10, scope: !370)
!370 = distinct !DILexicalBlock(scope: !358, file: !1, line: 338, column: 7)
!371 = !DILocation(line: 354, column: 10, scope: !370)
!372 = !DILocation(line: 359, column: 28, scope: !78)
!373 = !DILocation(line: 364, column: 10, scope: !374)
!374 = distinct !DILexicalBlock(scope: !78, file: !1, line: 364, column: 9)
!375 = !DILocation(line: 364, column: 9, scope: !78)
!376 = !DILocation(line: 396, column: 5, scope: !78)
!377 = !DILocation(line: 0, scope: !83, inlinedAt: !378)
!378 = distinct !DILocation(line: 397, column: 9, scope: !379)
!379 = distinct !DILexicalBlock(scope: !78, file: !1, line: 397, column: 9)
!380 = !DILocation(line: 111, column: 32, scope: !83, inlinedAt: !378)
!381 = !DILocation(line: 397, column: 9, scope: !78)
!382 = !DILocation(line: 398, column: 12, scope: !379)
!383 = !DILocation(line: 402, column: 1, scope: !78)
!384 = !DILocation(line: 0, scope: !45, inlinedAt: !385)
!385 = distinct !DILocation(line: 148, column: 19, scope: !61, inlinedAt: !386)
!386 = distinct !DILocation(line: 0, scope: !86)
!387 = !DILocation(line: 114, column: 28, scope: !45, inlinedAt: !385)
!388 = !DILocation(line: 0, scope: !40, inlinedAt: !389)
!389 = distinct !DILocation(line: 115, column: 1, scope: !45, inlinedAt: !385)
!390 = !DILocation(line: 114, column: 28, scope: !40, inlinedAt: !389)
!391 = !DILocation(line: 116, column: 17, scope: !263, inlinedAt: !389)
!392 = !DILocation(line: 117, column: 18, scope: !263, inlinedAt: !389)
!393 = !DILocation(line: 117, column: 16, scope: !263, inlinedAt: !389)
!394 = !DILocation(line: 118, column: 25, scope: !263, inlinedAt: !389)
!395 = !DILocation(line: 118, column: 12, scope: !263, inlinedAt: !389)
!396 = !DILocation(line: 148, column: 19, scope: !61, inlinedAt: !386)
