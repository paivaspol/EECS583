; ModuleID = '../../SPEC_CPU2006v1.1/benchspec/CPU2006/453.povray/src/fnsyntax.cpp'
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.10.0"

%"struct.pov::ExprParserTableEntry" = type { i32, i32, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)*, i32, i32 }
%"struct.pov::ExprNodeStruct" = type { %"struct.pov::ExprNodeStruct"*, %"struct.pov::ExprNodeStruct"*, %"struct.pov::ExprNodeStruct"*, %"struct.pov::ExprNodeStruct"*, i32, i32, %union.anon }
%union.anon = type { %struct.anon }
%struct.anon = type { i8*, i32, i32 }
%"struct.pov::Token_Struct" = type { i32, i32, %"struct.pov_base::ITextStream::FilePos", i32, i32, i8*, double, i32, i32, %"class.pov_base::ITextStream"*, i8*, i32*, i8**, i8 }
%"struct.pov_base::ITextStream::FilePos" = type { i64, i32 }
%"class.pov_base::ITextStream" = type { i32 (...)**, %"class.pov_base::IStream"*, [512 x i8], i64, i64, i64, i64, i8*, i32, i32 }
%"class.pov_base::IStream" = type { %"class.pov_base::IOBase" }
%"class.pov_base::IOBase" = type { i32 (...)**, i8, %struct.__sFILE*, i32, i32, i8* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i32 (i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i32 (i8*, i8*, i32)*, %struct.__sbuf, %struct.__sFILEX*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64 }
%struct.__sFILEX = type opaque
%struct.__sbuf = type { i8*, i32 }
%"struct.pov::OPTIONS_STRUCT" = type { i32, i8, i8, i8, i32, i32, [1024 x i8], [1024 x i8], [1024 x i8], [1024 x i8], [1024 x i8], float, float, i32, i32, double, double, i32, [25 x i8*], i32, i32, i32, double, double, i32, i32, double, double, i32, i8, i64, i32, i32, i32, %"struct.pov::FRAMESEQ", double, i64, double, double, double, double, double, i64, i32, i64, i32, i32, i32, i32, i32, i32, double, double, double, i32, i32, i8*, i8*, i32, i8, double, double, i32, i32, i8, i32, i32, [1024 x i8], [6 x %"struct.pov::shelldata"], [1024 x i8], [1024 x i8], i32, i32, i64, i32, i32, i32, %struct.POVMSData }
%"struct.pov::FRAMESEQ" = type { i32, double, i32, i32, double, i32, i32, double, i32, double, i32, double, i8, i8 }
%"struct.pov::shelldata" = type { i32, i32, [250 x i8] }
%struct.POVMSData = type { i32, i32, %union.anon.0 }
%union.anon.0 = type { i8* }
%"struct.pov::ExprParserErrorEntry" = type { i32, i8* }
%"struct.pov::FunctionCode" = type { i32*, i32, i8, i8, i8, [56 x i32], [56 x i8*], [56 x i8*], i8*, i8*, %"struct.pov_base::ITextStream::FilePos", i32, i8* (i8*)*, void (i8*)*, i8* }

@.str = private unnamed_addr constant [69 x i8] c"../../SPEC_CPU2006v1.1/benchspec/CPU2006/453.povray/src/fnsyntax.cpp\00", align 1
@_ZN3povL17expr_parser_tableE = internal unnamed_addr constant [38 x %"struct.pov::ExprParserTableEntry"] [%"struct.pov::ExprParserTableEntry" { i32 5, i32 106, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_growERPNS_14ExprNodeStructEii, i32 40, i32 9 }, %"struct.pov::ExprParserTableEntry" { i32 10, i32 101, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_growERPNS_14ExprNodeStructEii, i32 40, i32 12 }, %"struct.pov::ExprParserTableEntry" { i32 15, i32 144, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_growERPNS_14ExprNodeStructEii, i32 40, i32 1 }, %"struct.pov::ExprParserTableEntry" { i32 15, i32 286, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_growERPNS_14ExprNodeStructEii, i32 40, i32 2 }, %"struct.pov::ExprParserTableEntry" { i32 15, i32 171, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_growERPNS_14ExprNodeStructEii, i32 40, i32 3 }, %"struct.pov::ExprParserTableEntry" { i32 15, i32 285, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_growERPNS_14ExprNodeStructEii, i32 40, i32 4 }, %"struct.pov::ExprParserTableEntry" { i32 15, i32 217, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_growERPNS_14ExprNodeStructEii, i32 40, i32 5 }, %"struct.pov::ExprParserTableEntry" { i32 15, i32 284, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_growERPNS_14ExprNodeStructEii, i32 40, i32 6 }, %"struct.pov::ExprParserTableEntry" { i32 20, i32 203, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_growERPNS_14ExprNodeStructEii, i32 40, i32 7 }, %"struct.pov::ExprParserTableEntry" { i32 20, i32 133, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_growERPNS_14ExprNodeStructEii, i32 40, i32 8 }, %"struct.pov::ExprParserTableEntry" { i32 25, i32 236, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_growERPNS_14ExprNodeStructEii, i32 40, i32 10 }, %"struct.pov::ExprParserTableEntry" { i32 25, i32 229, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_growERPNS_14ExprNodeStructEii, i32 40, i32 11 }, %"struct.pov::ExprParserTableEntry" { i32 35, i32 219, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_retERPNS_14ExprNodeStructEii, i32 -1, i32 0 }, %"struct.pov::ExprParserTableEntry" { i32 35, i32 218, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_retERPNS_14ExprNodeStructEii, i32 -1, i32 0 }, %"struct.pov::ExprParserTableEntry" { i32 35, i32 126, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_retERPNS_14ExprNodeStructEii, i32 -1, i32 0 }, %"struct.pov::ExprParserTableEntry" { i32 35, i32 535, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_errERPNS_14ExprNodeStructEii, i32 -1, i32 0 }, %"struct.pov::ExprParserTableEntry" { i32 45, i32 396, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_growERPNS_14ExprNodeStructEii, i32 60, i32 20 }, %"struct.pov::ExprParserTableEntry" { i32 45, i32 535, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_errERPNS_14ExprNodeStructEii, i32 -1, i32 0 }, %"struct.pov::ExprParserTableEntry" { i32 40, i32 203, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_noopERPNS_14ExprNodeStructEii, i32 50, i32 0 }, %"struct.pov::ExprParserTableEntry" { i32 40, i32 133, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_growERPNS_14ExprNodeStructEii, i32 50, i32 14 }, %"struct.pov::ExprParserTableEntry" { i32 40, i32 145, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_errERPNS_14ExprNodeStructEii, i32 -1, i32 15 }, %"struct.pov::ExprParserTableEntry" { i32 50, i32 11, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_putERPNS_14ExprNodeStructEii, i32 5, i32 18 }, %"struct.pov::ExprParserTableEntry" { i32 50, i32 10, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_putERPNS_14ExprNodeStructEii, i32 5, i32 19 }, %"struct.pov::ExprParserTableEntry" { i32 50, i32 487, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_callERPNS_14ExprNodeStructEii, i32 5, i32 22 }, %"struct.pov::ExprParserTableEntry" { i32 50, i32 488, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_callERPNS_14ExprNodeStructEii, i32 45, i32 22 }, %"struct.pov::ExprParserTableEntry" { i32 50, i32 173, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_newERPNS_14ExprNodeStructEii, i32 55, i32 17 }, %"struct.pov::ExprParserTableEntry" { i32 50, i32 535, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_errERPNS_14ExprNodeStructEii, i32 -1, i32 0 }, %"struct.pov::ExprParserTableEntry" { i32 55, i32 219, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_noopERPNS_14ExprNodeStructEii, i32 5, i32 0 }, %"struct.pov::ExprParserTableEntry" { i32 55, i32 535, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_errERPNS_14ExprNodeStructEii, i32 -1, i32 0 }, %"struct.pov::ExprParserTableEntry" { i32 60, i32 10, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_putERPNS_14ExprNodeStructEii, i32 5, i32 21 }, %"struct.pov::ExprParserTableEntry" { i32 60, i32 408, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_putERPNS_14ExprNodeStructEii, i32 5, i32 21 }, %"struct.pov::ExprParserTableEntry" { i32 60, i32 84, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_putERPNS_14ExprNodeStructEii, i32 5, i32 21 }, %"struct.pov::ExprParserTableEntry" { i32 60, i32 83, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_putERPNS_14ExprNodeStructEii, i32 5, i32 21 }, %"struct.pov::ExprParserTableEntry" { i32 60, i32 79, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_putERPNS_14ExprNodeStructEii, i32 5, i32 21 }, %"struct.pov::ExprParserTableEntry" { i32 60, i32 80, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_putERPNS_14ExprNodeStructEii, i32 5, i32 21 }, %"struct.pov::ExprParserTableEntry" { i32 60, i32 81, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_putERPNS_14ExprNodeStructEii, i32 5, i32 21 }, %"struct.pov::ExprParserTableEntry" { i32 60, i32 82, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_putERPNS_14ExprNodeStructEii, i32 5, i32 21 }, %"struct.pov::ExprParserTableEntry" { i32 60, i32 535, i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_errERPNS_14ExprNodeStructEii, i32 -1, i32 0 }], align 16
@_ZN3pov5TokenE = external global %"struct.pov::Token_Struct"
@_ZN3pov4optsE = external global %"struct.pov::OPTIONS_STRUCT"
@.str1 = private unnamed_addr constant [9 x i8] c"ExprNode\00", align 1
@.str2 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str3 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str4 = private unnamed_addr constant [201 x i8] c"Suspicious identifier found in function!\0AIf you want to call a function make sure the function you call has been declared.\0AIf you call an internal function, make sure you have included 'function.inc'.\00", align 1
@_ZN3povL23expr_parser_error_tableE = internal unnamed_addr constant [7 x %"struct.pov::ExprParserErrorEntry"] [%"struct.pov::ExprParserErrorEntry" { i32 35, i8* getelementptr inbounds ([9 x i8]* @.str29, i32 0, i32 0) }, %"struct.pov::ExprParserErrorEntry" { i32 45, i8* getelementptr inbounds ([2 x i8]* @.str11, i32 0, i32 0) }, %"struct.pov::ExprParserErrorEntry" { i32 40, i8* getelementptr inbounds ([16 x i8]* @.str30, i32 0, i32 0) }, %"struct.pov::ExprParserErrorEntry" { i32 50, i8* getelementptr inbounds ([8 x i8]* @.str31, i32 0, i32 0) }, %"struct.pov::ExprParserErrorEntry" { i32 55, i8* getelementptr inbounds ([2 x i8]* @.str3, i32 0, i32 0) }, %"struct.pov::ExprParserErrorEntry" { i32 60, i8* getelementptr inbounds ([23 x i8]* @.str32, i32 0, i32 0) }, %"struct.pov::ExprParserErrorEntry" { i32 -1, i8* null }], align 16
@.str5 = private unnamed_addr constant [26 x i8] c"valid function expression\00", align 1
@.str6 = private unnamed_addr constant [22 x i8] c"Domain error in 'ln'.\00", align 1
@.str7 = private unnamed_addr constant [23 x i8] c"Domain error in 'log'.\00", align 1
@.str9 = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str11 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str12 = private unnamed_addr constant [5 x i8] c"fn%d\00", align 1
@.str13 = private unnamed_addr constant [5 x i8] c" == \00", align 1
@.str14 = private unnamed_addr constant [5 x i8] c" != \00", align 1
@.str15 = private unnamed_addr constant [4 x i8] c" < \00", align 1
@.str16 = private unnamed_addr constant [5 x i8] c" <= \00", align 1
@.str17 = private unnamed_addr constant [4 x i8] c" > \00", align 1
@.str18 = private unnamed_addr constant [5 x i8] c" >= \00", align 1
@.str19 = private unnamed_addr constant [4 x i8] c" + \00", align 1
@.str20 = private unnamed_addr constant [4 x i8] c" - \00", align 1
@.str21 = private unnamed_addr constant [4 x i8] c" | \00", align 1
@.str22 = private unnamed_addr constant [4 x i8] c" * \00", align 1
@.str23 = private unnamed_addr constant [4 x i8] c" / \00", align 1
@.str24 = private unnamed_addr constant [4 x i8] c" & \00", align 1
@.str25 = private unnamed_addr constant [4 x i8] c" ^ \00", align 1
@.str26 = private unnamed_addr constant [3 x i8] c" -\00", align 1
@.str27 = private unnamed_addr constant [3 x i8] c" !\00", align 1
@.str29 = private unnamed_addr constant [9 x i8] c"operator\00", align 1
@.str30 = private unnamed_addr constant [16 x i8] c"sign or operand\00", align 1
@.str31 = private unnamed_addr constant [8 x i8] c"operand\00", align 1
@.str32 = private unnamed_addr constant [23 x i8] c"color or vector member\00", align 1

; Function Attrs: optsize ssp uwtable
define %"struct.pov::ExprNodeStruct"* @_ZN3pov24FNSyntax_ParseExpressionEv() #0 {
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !708, metadata !1291), !dbg !1292
  %1 = tail call %"struct.pov::ExprNodeStruct"* @_ZN3pov10parse_exprEv() #9, !dbg !1293
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %1, i64 0, metadata !708, metadata !1291), !dbg !1292
  tail call void @_ZN3pov13optimise_exprEPNS_14ExprNodeStructE(%"struct.pov::ExprNodeStruct"* %1) #9, !dbg !1294
  ret %"struct.pov::ExprNodeStruct"* %1, !dbg !1295
}

; Function Attrs: optsize ssp uwtable
define %"struct.pov::ExprNodeStruct"* @_ZN3pov10parse_exprEv() #0 {
  %current = alloca %"struct.pov::ExprNodeStruct"*, align 8
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !725, metadata !1291), !dbg !1296
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !726, metadata !1291), !dbg !1297
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !738, metadata !1291), !dbg !1298
  tail call void @llvm.dbg.value(metadata i32 17, i64 0, metadata !739, metadata !1291), !dbg !1300
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !740, metadata !1291), !dbg !1301
  %1 = tail call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 56, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 499, i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0)) #9, !dbg !1302
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %46, i64 0, metadata !740, metadata !1291), !dbg !1301
  %2 = getelementptr inbounds i8* %1, i64 36, !dbg !1303
  %3 = bitcast i8* %2 to i32*, !dbg !1303
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 36, i32 8, i1 false), !dbg !1304
  store i32 17, i32* %3, align 4, !dbg !1305, !tbaa !1306
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %46, i64 0, metadata !726, metadata !1291), !dbg !1297
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %46, i64 0, metadata !725, metadata !1291), !dbg !1296
  %4 = bitcast %"struct.pov::ExprNodeStruct"** %current to i8**, !dbg !1312
  store i8* %1, i8** %4, align 8, !dbg !1312, !tbaa !1313
  tail call void @llvm.dbg.value(metadata i32 18, i64 0, metadata !728, metadata !1291), !dbg !1314
  %5 = tail call i32 @_ZN3pov14expr_get_tokenEv() #9, !dbg !1315
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !727, metadata !1291), !dbg !1316
  br label %6, !dbg !1317

; <label>:6                                       ; preds = %0, %43
  %token.0 = phi i32 [ %5, %0 ], [ %44, %43 ]
  %start_index.0 = phi i32 [ 18, %0 ], [ %start_index.2, %43 ]
  call void @llvm.dbg.value(metadata i32 %start_index.0, i64 0, metadata !729, metadata !1291), !dbg !1318
  %7 = sext i32 %start_index.0 to i64, !dbg !1319
  %8 = getelementptr inbounds [38 x %"struct.pov::ExprParserTableEntry"]* @_ZN3povL17expr_parser_tableE, i64 0, i64 %7, i32 1, !dbg !1325
  %9 = load i32* %8, align 4, !dbg !1325, !tbaa !1326
  %10 = icmp eq i32 %9, %token.0, !dbg !1328
  br i1 %10, label %._crit_edge, label %.lr.ph, !dbg !1329

; <label>:11                                      ; preds = %.lr.ph
  %12 = sext i32 %20 to i64, !dbg !1319
  %13 = getelementptr inbounds [38 x %"struct.pov::ExprParserTableEntry"]* @_ZN3povL17expr_parser_tableE, i64 0, i64 %12, i32 1, !dbg !1325
  %14 = load i32* %13, align 4, !dbg !1325, !tbaa !1326
  %15 = icmp eq i32 %14, %token.0, !dbg !1328
  br i1 %15, label %._crit_edge, label %.lr.ph, !dbg !1329

.lr.ph:                                           ; preds = %6, %11
  %16 = phi i64 [ %12, %11 ], [ %7, %6 ]
  %i.01 = phi i32 [ %20, %11 ], [ %start_index.0, %6 ]
  %17 = lshr i64 137774661632, %16, !dbg !1330
  %18 = and i64 %17, 1, !dbg !1330
  %19 = icmp eq i64 %18, 0, !dbg !1330
  %20 = add nsw i32 %i.01, 1, !dbg !1331
  call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !729, metadata !1291), !dbg !1318
  br i1 %19, label %11, label %._crit_edge, !dbg !1332

._crit_edge:                                      ; preds = %11, %.lr.ph, %6
  %.lcssa = phi i64 [ %7, %6 ], [ %12, %11 ], [ %16, %.lr.ph ]
  %21 = getelementptr inbounds [38 x %"struct.pov::ExprParserTableEntry"]* @_ZN3povL17expr_parser_tableE, i64 0, i64 %.lcssa, i32 2, !dbg !1333
  %22 = load i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)** %21, align 8, !dbg !1333, !tbaa !1335
  %23 = getelementptr inbounds [38 x %"struct.pov::ExprParserTableEntry"]* @_ZN3povL17expr_parser_tableE, i64 0, i64 %.lcssa, i32 0, !dbg !1336
  %24 = load i32* %23, align 8, !dbg !1336, !tbaa !1337
  %25 = getelementptr inbounds [38 x %"struct.pov::ExprParserTableEntry"]* @_ZN3povL17expr_parser_tableE, i64 0, i64 %.lcssa, i32 4, !dbg !1338
  %26 = load i32* %25, align 4, !dbg !1338, !tbaa !1339
  call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"** %current, i64 0, metadata !725, metadata !1291), !dbg !1296
  %27 = call zeroext i1 %22(%"struct.pov::ExprNodeStruct"** dereferenceable(8) %current, i32 %24, i32 %26) #9, !dbg !1340
  br i1 %27, label %28, label %45, !dbg !1341

; <label>:28                                      ; preds = %._crit_edge
  %29 = lshr i64 137102168063, %.lcssa, !dbg !1342
  %30 = and i64 %29, 1, !dbg !1342
  %31 = icmp eq i64 %30, 0, !dbg !1342
  br i1 %31, label %43, label %32, !dbg !1344

; <label>:32                                      ; preds = %28
  %33 = getelementptr inbounds [38 x %"struct.pov::ExprParserTableEntry"]* @_ZN3povL17expr_parser_tableE, i64 0, i64 %.lcssa, i32 3, !dbg !1345
  %34 = load i32* %33, align 8, !dbg !1345, !tbaa !1346
  %35 = icmp slt i32 %34, %24, !dbg !1347
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !728, metadata !1291), !dbg !1314
  %36 = sext i32 %start_index.0 to i64
  %37 = select i1 %35, i64 0, i64 %36
  br label %38, !dbg !1350

; <label>:38                                      ; preds = %38, %32
  %indvars.iv = phi i64 [ %indvars.iv.next, %38 ], [ %37, %32 ]
  %39 = getelementptr inbounds [38 x %"struct.pov::ExprParserTableEntry"]* @_ZN3povL17expr_parser_tableE, i64 0, i64 %indvars.iv, i32 0, !dbg !1351
  %40 = load i32* %39, align 8, !dbg !1351, !tbaa !1337
  %41 = icmp eq i32 %40, %34, !dbg !1352
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1353
  br i1 %41, label %.loopexit, label %38, !dbg !1353

.loopexit:                                        ; preds = %38
  %42 = trunc i64 %indvars.iv to i32
  br label %43

; <label>:43                                      ; preds = %.loopexit, %28
  %start_index.2 = phi i32 [ %start_index.0, %28 ], [ %42, %.loopexit ]
  %44 = call i32 @_ZN3pov14expr_get_tokenEv() #9, !dbg !1354
  call void @llvm.dbg.value(metadata i32 %44, i64 0, metadata !727, metadata !1291), !dbg !1316
  br label %6, !dbg !1317

; <label>:45                                      ; preds = %._crit_edge
  %46 = bitcast i8* %1 to %"struct.pov::ExprNodeStruct"*, !dbg !1355
  ret %"struct.pov::ExprNodeStruct"* %46, !dbg !1356
}

; Function Attrs: optsize ssp uwtable
define void @_ZN3pov13optimise_exprEPNS_14ExprNodeStructE(%"struct.pov::ExprNodeStruct"* %node) #0 {
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %node, i64 0, metadata !787, metadata !1291), !dbg !1357
  %1 = icmp eq %"struct.pov::ExprNodeStruct"* %node, null, !dbg !1358
  br i1 %1, label %297, label %2, !dbg !1360

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %node, i64 0, i32 5, !dbg !1361
  %4 = load i32* %3, align 4, !dbg !1361, !tbaa !1306
  %5 = icmp eq i32 %4, 22, !dbg !1363
  br i1 %5, label %6, label %24, !dbg !1364

; <label>:6                                       ; preds = %2
  %7 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %node, i64 0, i32 6, i32 0, i32 1, !dbg !1365
  %8 = load i32* %7, align 4, !dbg !1365, !tbaa !1368
  %9 = icmp eq i32 %8, 28, !dbg !1370
  br i1 %9, label %10, label %thread-pre-split, !dbg !1371

; <label>:10                                      ; preds = %6
  store i32 17, i32* %3, align 4, !dbg !1372, !tbaa !1306
  %11 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %node, i64 0, i32 6, i32 0, i32 0, !dbg !1374
  %12 = load i8** %11, align 8, !dbg !1374, !tbaa !1376
  tail call void @_ZN3pov8pov_freeEPvPKci(i8* %12, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 973) #9, !dbg !1374
  store i8* null, i8** %11, align 8, !dbg !1374, !tbaa !1376
  %13 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %node, i64 0, i32 1, !dbg !1377
  %14 = load %"struct.pov::ExprNodeStruct"** %13, align 8, !dbg !1377, !tbaa !1379
  %15 = icmp eq %"struct.pov::ExprNodeStruct"* %14, null, !dbg !1380
  br i1 %15, label %thread-pre-split, label %16, !dbg !1381

; <label>:16                                      ; preds = %10
  %17 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %14, i64 0, i32 5, !dbg !1382
  store i32 16, i32* %17, align 4, !dbg !1384, !tbaa !1306
  %18 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %14, i64 0, i32 3, !dbg !1385
  %19 = load %"struct.pov::ExprNodeStruct"** %18, align 8, !dbg !1385, !tbaa !1387
  %20 = icmp eq %"struct.pov::ExprNodeStruct"* %19, null, !dbg !1388
  br i1 %20, label %thread-pre-split, label %21, !dbg !1389

; <label>:21                                      ; preds = %16
  %22 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %19, i64 0, i32 5, !dbg !1390
  store i32 13, i32* %22, align 4, !dbg !1392, !tbaa !1306
  %23 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %19, i64 0, i32 2, !dbg !1393
  store %"struct.pov::ExprNodeStruct"* %14, %"struct.pov::ExprNodeStruct"** %23, align 8, !dbg !1394, !tbaa !1395
  br label %thread-pre-split, !dbg !1396

thread-pre-split:                                 ; preds = %21, %6, %10, %16
  %.pr = load i32* %3, align 4, !dbg !1397, !tbaa !1306
  br label %24

; <label>:24                                      ; preds = %thread-pre-split, %2
  %25 = phi i32 [ %.pr, %thread-pre-split ], [ %4, %2 ], !dbg !1397
  %26 = icmp slt i32 %25, 17, !dbg !1399
  br i1 %26, label %27, label %274, !dbg !1400

; <label>:27                                      ; preds = %24
  %28 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %node, i64 0, i32 3, !dbg !1401
  %29 = load %"struct.pov::ExprNodeStruct"** %28, align 8, !dbg !1401, !tbaa !1387
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %29, i64 0, metadata !790, metadata !1291), !dbg !1403
  %30 = icmp eq %"struct.pov::ExprNodeStruct"* %29, null, !dbg !1404
  br i1 %30, label %.loopexit, label %31, !dbg !1406

; <label>:31                                      ; preds = %27
  %32 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %29, i64 0, i32 5, !dbg !1407
  %33 = load i32* %32, align 4, !dbg !1407, !tbaa !1306
  %34 = icmp eq i32 %33, 14, !dbg !1410
  br i1 %34, label %.lr.ph12, label %.loopexit, !dbg !1411

.lr.ph12:                                         ; preds = %31, %39
  %cnt.011 = phi i32 [ %35, %39 ], [ 0, %31 ]
  %ptr.010 = phi %"struct.pov::ExprNodeStruct"* [ %41, %39 ], [ %29, %31 ]
  %35 = add nuw nsw i32 %cnt.011, 1, !dbg !1412
  tail call void @llvm.dbg.value(metadata i32 %35, i64 0, metadata !795, metadata !1291), !dbg !1417
  %36 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %ptr.010, i64 0, i32 1, !dbg !1418
  %37 = load %"struct.pov::ExprNodeStruct"** %36, align 8, !dbg !1418, !tbaa !1379
  %38 = icmp eq %"struct.pov::ExprNodeStruct"* %37, null, !dbg !1420
  br i1 %38, label %39, label %43, !dbg !1421

; <label>:39                                      ; preds = %.lr.ph12
  %40 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %ptr.010, i64 0, i32 3, !dbg !1422
  %41 = load %"struct.pov::ExprNodeStruct"** %40, align 8, !dbg !1422, !tbaa !1387
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %41, i64 0, metadata !790, metadata !1291), !dbg !1403
  %42 = icmp eq %"struct.pov::ExprNodeStruct"* %41, null, !dbg !1423
  br i1 %42, label %.loopexit, label %.lr.ph12, !dbg !1424

; <label>:43                                      ; preds = %.lr.ph12
  tail call void @_ZN3pov13optimise_exprEPNS_14ExprNodeStructE(%"struct.pov::ExprNodeStruct"* %37) #9, !dbg !1425
  %44 = load %"struct.pov::ExprNodeStruct"** %36, align 8, !dbg !1428, !tbaa !1379
  %45 = icmp eq %"struct.pov::ExprNodeStruct"* %44, null, !dbg !1430
  br i1 %45, label %.loopexit, label %46, !dbg !1431

; <label>:46                                      ; preds = %43
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %44, i64 0, metadata !788, metadata !1291), !dbg !1432
  %47 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %44, i64 0, i32 5, !dbg !1433
  %48 = load i32* %47, align 4, !dbg !1433, !tbaa !1306
  %49 = icmp eq i32 %48, 18, !dbg !1436
  br i1 %49, label %50, label %.loopexit, !dbg !1437

; <label>:50                                      ; preds = %46
  store %"struct.pov::ExprNodeStruct"* null, %"struct.pov::ExprNodeStruct"** %36, align 8, !dbg !1438, !tbaa !1379
  %51 = load %"struct.pov::ExprNodeStruct"** %28, align 8, !dbg !1440, !tbaa !1387
  %52 = icmp eq %"struct.pov::ExprNodeStruct"* %51, null, !dbg !1442
  br i1 %52, label %54, label %53, !dbg !1443

; <label>:53                                      ; preds = %50
  tail call void @_ZN3pov25FNSyntax_DeleteExpressionEPNS_14ExprNodeStructE(%"struct.pov::ExprNodeStruct"* %51) #9, !dbg !1444
  br label %54, !dbg !1444

; <label>:54                                      ; preds = %53, %50
  %55 = and i32 %35, 1, !dbg !1445
  %56 = icmp eq i32 %55, 0, !dbg !1445
  %57 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %44, i64 0, i32 6, !dbg !1449
  %58 = bitcast %union.anon* %57 to double*, !dbg !1449
  %59 = load double* %58, align 8, !dbg !1449, !tbaa !1450
  br i1 %56, label %60, label %63, !dbg !1452

; <label>:60                                      ; preds = %54
  %61 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %node, i64 0, i32 6, !dbg !1453
  %62 = bitcast %union.anon* %61 to double*, !dbg !1453
  store double %59, double* %62, align 8, !dbg !1454, !tbaa !1450
  br label %67, !dbg !1455

; <label>:63                                      ; preds = %54
  %64 = fsub double -0.000000e+00, %59, !dbg !1456
  %65 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %node, i64 0, i32 6, !dbg !1457
  %66 = bitcast %union.anon* %65 to double*, !dbg !1457
  store double %64, double* %66, align 8, !dbg !1458, !tbaa !1450
  br label %67

; <label>:67                                      ; preds = %60, %63
  %68 = bitcast %"struct.pov::ExprNodeStruct"* %44 to i8*, !dbg !1459
  tail call void @_ZN3pov8pov_freeEPvPKci(i8* %68, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 1022) #9, !dbg !1459
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !788, metadata !1291), !dbg !1432
  store i32 18, i32* %3, align 4, !dbg !1461, !tbaa !1306
  %69 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %node, i64 0, i32 1, !dbg !1462
  %70 = bitcast %"struct.pov::ExprNodeStruct"** %69 to i8*, !dbg !1463
  call void @llvm.memset.p0i8.i64(i8* %70, i8 0, i64 24, i32 8, i1 false), !dbg !1464
  br label %297, !dbg !1463

.loopexit:                                        ; preds = %39, %43, %27, %31, %46
  %left.0 = phi %"struct.pov::ExprNodeStruct"* [ %44, %46 ], [ undef, %43 ], [ undef, %31 ], [ undef, %27 ], [ undef, %39 ]
  %71 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %node, i64 0, i32 1, !dbg !1465
  %72 = load %"struct.pov::ExprNodeStruct"** %71, align 8, !dbg !1465, !tbaa !1379
  tail call void @_ZN3pov13optimise_exprEPNS_14ExprNodeStructE(%"struct.pov::ExprNodeStruct"* %72) #9, !dbg !1466
  %ptr.17 = load %"struct.pov::ExprNodeStruct"** %28, align 8, !dbg !1467
  %73 = icmp eq %"struct.pov::ExprNodeStruct"* %ptr.17, null, !dbg !1469
  br i1 %73, label %.thread18, label %.lr.ph, !dbg !1471

.lr.ph:                                           ; preds = %.loopexit, %250
  %ptr.19 = phi %"struct.pov::ExprNodeStruct"* [ %ptr.1, %250 ], [ %ptr.17, %.loopexit ]
  %74 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %ptr.19, i64 0, i32 2, !dbg !1472
  %75 = load %"struct.pov::ExprNodeStruct"** %74, align 8, !dbg !1472, !tbaa !1395
  %76 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %75, i64 0, i32 1, !dbg !1474
  %77 = load %"struct.pov::ExprNodeStruct"** %76, align 8, !dbg !1474, !tbaa !1379
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %77, i64 0, metadata !788, metadata !1291), !dbg !1432
  %78 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %ptr.19, i64 0, i32 1, !dbg !1475
  %79 = load %"struct.pov::ExprNodeStruct"** %78, align 8, !dbg !1475, !tbaa !1379
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %79, i64 0, metadata !789, metadata !1291), !dbg !1476
  %80 = icmp eq %"struct.pov::ExprNodeStruct"* %79, null, !dbg !1477
  br i1 %80, label %.thread, label %81, !dbg !1479

.thread:                                          ; preds = %.lr.ph
  tail call void @_ZN3pov13optimise_exprEPNS_14ExprNodeStructE(%"struct.pov::ExprNodeStruct"* null) #9, !dbg !1480
  br label %250, !dbg !1481

; <label>:81                                      ; preds = %.lr.ph
  %82 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %ptr.19, i64 0, i32 5, !dbg !1483
  %83 = load i32* %82, align 4, !dbg !1483, !tbaa !1306
  %84 = icmp eq i32 %83, 8, !dbg !1484
  br i1 %84, label %85, label %94, !dbg !1485

; <label>:85                                      ; preds = %81
  %86 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %79, i64 0, i32 5, !dbg !1486
  %87 = load i32* %86, align 4, !dbg !1486, !tbaa !1306
  %88 = icmp eq i32 %87, 18, !dbg !1489
  br i1 %88, label %89, label %94, !dbg !1490

; <label>:89                                      ; preds = %85
  store i32 7, i32* %82, align 4, !dbg !1491, !tbaa !1306
  %90 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %79, i64 0, i32 6, !dbg !1493
  %91 = bitcast %union.anon* %90 to double*, !dbg !1493
  %92 = load double* %91, align 8, !dbg !1493, !tbaa !1450
  %93 = fsub double -0.000000e+00, %92, !dbg !1494
  store double %93, double* %91, align 8, !dbg !1495, !tbaa !1450
  br label %94, !dbg !1496

; <label>:94                                      ; preds = %85, %89, %81
  tail call void @_ZN3pov13optimise_exprEPNS_14ExprNodeStructE(%"struct.pov::ExprNodeStruct"* %79) #9, !dbg !1480
  %95 = icmp eq %"struct.pov::ExprNodeStruct"* %77, null, !dbg !1497
  br i1 %95, label %250, label %96, !dbg !1481

; <label>:96                                      ; preds = %94
  %97 = load i32* %82, align 4, !dbg !1498, !tbaa !1306
  %98 = and i32 %97, -2, !dbg !1499
  %switch = icmp eq i32 %98, 10, !dbg !1499
  br i1 %switch, label %99, label %101, !dbg !1499

; <label>:99                                      ; preds = %96
  %100 = tail call zeroext i1 @_ZN3pov30left_subtree_has_variable_exprEPNS_14ExprNodeStructE(%"struct.pov::ExprNodeStruct"* %ptr.19) #9, !dbg !1500
  br i1 %100, label %250, label %101, !dbg !1501

; <label>:101                                     ; preds = %96, %99
  %102 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %77, i64 0, i32 5, !dbg !1502
  %103 = load i32* %102, align 4, !dbg !1502, !tbaa !1306
  %104 = icmp eq i32 %103, 18, !dbg !1505
  br i1 %104, label %105, label %250, !dbg !1506

; <label>:105                                     ; preds = %101
  %106 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %79, i64 0, i32 5, !dbg !1507
  %107 = load i32* %106, align 4, !dbg !1507, !tbaa !1306
  %108 = icmp eq i32 %107, 18, !dbg !1508
  br i1 %108, label %109, label %250, !dbg !1509

; <label>:109                                     ; preds = %105
  tail call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !793, metadata !1291), !dbg !1510
  switch i32 %97, label %250 [
    i32 1, label %110
    i32 2, label %119
    i32 3, label %128
    i32 4, label %137
    i32 5, label %146
    i32 6, label %155
    i32 7, label %164
    i32 8, label %172
    i32 9, label %180
    i32 10, label %194
    i32 11, label %202
    i32 12, label %210
    i32 13, label %222
  ], !dbg !1511

; <label>:110                                     ; preds = %109
  %111 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %77, i64 0, i32 6, !dbg !1513
  %112 = bitcast %union.anon* %111 to double*, !dbg !1513
  %113 = load double* %112, align 8, !dbg !1513, !tbaa !1450
  %114 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %79, i64 0, i32 6, !dbg !1515
  %115 = bitcast %union.anon* %114 to double*, !dbg !1515
  %116 = load double* %115, align 8, !dbg !1515, !tbaa !1450
  %117 = fcmp oeq double %113, %116, !dbg !1516
  %118 = uitofp i1 %117 to double, !dbg !1517
  tail call void @llvm.dbg.value(metadata double %118, i64 0, metadata !792, metadata !1291), !dbg !1518
  br label %230, !dbg !1519

; <label>:119                                     ; preds = %109
  %120 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %77, i64 0, i32 6, !dbg !1520
  %121 = bitcast %union.anon* %120 to double*, !dbg !1520
  %122 = load double* %121, align 8, !dbg !1520, !tbaa !1450
  %123 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %79, i64 0, i32 6, !dbg !1521
  %124 = bitcast %union.anon* %123 to double*, !dbg !1521
  %125 = load double* %124, align 8, !dbg !1521, !tbaa !1450
  %126 = fcmp une double %122, %125, !dbg !1522
  %127 = uitofp i1 %126 to double, !dbg !1523
  tail call void @llvm.dbg.value(metadata double %127, i64 0, metadata !792, metadata !1291), !dbg !1518
  br label %230, !dbg !1524

; <label>:128                                     ; preds = %109
  %129 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %77, i64 0, i32 6, !dbg !1525
  %130 = bitcast %union.anon* %129 to double*, !dbg !1525
  %131 = load double* %130, align 8, !dbg !1525, !tbaa !1450
  %132 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %79, i64 0, i32 6, !dbg !1526
  %133 = bitcast %union.anon* %132 to double*, !dbg !1526
  %134 = load double* %133, align 8, !dbg !1526, !tbaa !1450
  %135 = fcmp olt double %131, %134, !dbg !1527
  %136 = uitofp i1 %135 to double, !dbg !1528
  tail call void @llvm.dbg.value(metadata double %136, i64 0, metadata !792, metadata !1291), !dbg !1518
  br label %230, !dbg !1529

; <label>:137                                     ; preds = %109
  %138 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %77, i64 0, i32 6, !dbg !1530
  %139 = bitcast %union.anon* %138 to double*, !dbg !1530
  %140 = load double* %139, align 8, !dbg !1530, !tbaa !1450
  %141 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %79, i64 0, i32 6, !dbg !1531
  %142 = bitcast %union.anon* %141 to double*, !dbg !1531
  %143 = load double* %142, align 8, !dbg !1531, !tbaa !1450
  %144 = fcmp ole double %140, %143, !dbg !1532
  %145 = uitofp i1 %144 to double, !dbg !1533
  tail call void @llvm.dbg.value(metadata double %145, i64 0, metadata !792, metadata !1291), !dbg !1518
  br label %230, !dbg !1534

; <label>:146                                     ; preds = %109
  %147 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %77, i64 0, i32 6, !dbg !1535
  %148 = bitcast %union.anon* %147 to double*, !dbg !1535
  %149 = load double* %148, align 8, !dbg !1535, !tbaa !1450
  %150 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %79, i64 0, i32 6, !dbg !1536
  %151 = bitcast %union.anon* %150 to double*, !dbg !1536
  %152 = load double* %151, align 8, !dbg !1536, !tbaa !1450
  %153 = fcmp ogt double %149, %152, !dbg !1537
  %154 = uitofp i1 %153 to double, !dbg !1538
  tail call void @llvm.dbg.value(metadata double %154, i64 0, metadata !792, metadata !1291), !dbg !1518
  br label %230, !dbg !1539

; <label>:155                                     ; preds = %109
  %156 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %77, i64 0, i32 6, !dbg !1540
  %157 = bitcast %union.anon* %156 to double*, !dbg !1540
  %158 = load double* %157, align 8, !dbg !1540, !tbaa !1450
  %159 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %79, i64 0, i32 6, !dbg !1541
  %160 = bitcast %union.anon* %159 to double*, !dbg !1541
  %161 = load double* %160, align 8, !dbg !1541, !tbaa !1450
  %162 = fcmp oge double %158, %161, !dbg !1542
  %163 = uitofp i1 %162 to double, !dbg !1543
  tail call void @llvm.dbg.value(metadata double %163, i64 0, metadata !792, metadata !1291), !dbg !1518
  br label %230, !dbg !1544

; <label>:164                                     ; preds = %109
  %165 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %77, i64 0, i32 6, !dbg !1545
  %166 = bitcast %union.anon* %165 to double*, !dbg !1545
  %167 = load double* %166, align 8, !dbg !1545, !tbaa !1450
  %168 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %79, i64 0, i32 6, !dbg !1546
  %169 = bitcast %union.anon* %168 to double*, !dbg !1546
  %170 = load double* %169, align 8, !dbg !1546, !tbaa !1450
  %171 = fadd double %167, %170, !dbg !1547
  tail call void @llvm.dbg.value(metadata double %171, i64 0, metadata !792, metadata !1291), !dbg !1518
  br label %230, !dbg !1548

; <label>:172                                     ; preds = %109
  %173 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %77, i64 0, i32 6, !dbg !1549
  %174 = bitcast %union.anon* %173 to double*, !dbg !1549
  %175 = load double* %174, align 8, !dbg !1549, !tbaa !1450
  %176 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %79, i64 0, i32 6, !dbg !1550
  %177 = bitcast %union.anon* %176 to double*, !dbg !1550
  %178 = load double* %177, align 8, !dbg !1550, !tbaa !1450
  %179 = fsub double %175, %178, !dbg !1551
  tail call void @llvm.dbg.value(metadata double %179, i64 0, metadata !792, metadata !1291), !dbg !1518
  br label %230, !dbg !1552

; <label>:180                                     ; preds = %109
  %181 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %77, i64 0, i32 6, !dbg !1553
  %182 = bitcast %union.anon* %181 to double*, !dbg !1553
  %183 = load double* %182, align 8, !dbg !1553, !tbaa !1450
  %184 = fcmp une double %183, 0.000000e+00, !dbg !1554
  %185 = uitofp i1 %184 to double, !dbg !1555
  %186 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %79, i64 0, i32 6, !dbg !1556
  %187 = bitcast %union.anon* %186 to double*, !dbg !1556
  %188 = load double* %187, align 8, !dbg !1556, !tbaa !1450
  %189 = fcmp une double %188, 0.000000e+00, !dbg !1557
  %190 = uitofp i1 %189 to double, !dbg !1558
  %191 = fadd double %185, %190, !dbg !1559
  %192 = fcmp une double %191, 0.000000e+00, !dbg !1560
  %193 = uitofp i1 %192 to double, !dbg !1561
  tail call void @llvm.dbg.value(metadata double %193, i64 0, metadata !792, metadata !1291), !dbg !1518
  br label %230, !dbg !1562

; <label>:194                                     ; preds = %109
  %195 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %77, i64 0, i32 6, !dbg !1563
  %196 = bitcast %union.anon* %195 to double*, !dbg !1563
  %197 = load double* %196, align 8, !dbg !1563, !tbaa !1450
  %198 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %79, i64 0, i32 6, !dbg !1564
  %199 = bitcast %union.anon* %198 to double*, !dbg !1564
  %200 = load double* %199, align 8, !dbg !1564, !tbaa !1450
  %201 = fmul double %197, %200, !dbg !1565
  tail call void @llvm.dbg.value(metadata double %201, i64 0, metadata !792, metadata !1291), !dbg !1518
  br label %230, !dbg !1566

; <label>:202                                     ; preds = %109
  %203 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %77, i64 0, i32 6, !dbg !1567
  %204 = bitcast %union.anon* %203 to double*, !dbg !1567
  %205 = load double* %204, align 8, !dbg !1567, !tbaa !1450
  %206 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %79, i64 0, i32 6, !dbg !1568
  %207 = bitcast %union.anon* %206 to double*, !dbg !1568
  %208 = load double* %207, align 8, !dbg !1568, !tbaa !1450
  %209 = fdiv double %205, %208, !dbg !1569
  tail call void @llvm.dbg.value(metadata double %209, i64 0, metadata !792, metadata !1291), !dbg !1518
  br label %230, !dbg !1570

; <label>:210                                     ; preds = %109
  %211 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %77, i64 0, i32 6, !dbg !1571
  %212 = bitcast %union.anon* %211 to double*, !dbg !1571
  %213 = load double* %212, align 8, !dbg !1571, !tbaa !1450
  %214 = fcmp une double %213, 0.000000e+00, !dbg !1572
  %215 = uitofp i1 %214 to double, !dbg !1573
  %216 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %79, i64 0, i32 6, !dbg !1574
  %217 = bitcast %union.anon* %216 to double*, !dbg !1574
  %218 = load double* %217, align 8, !dbg !1574, !tbaa !1450
  %219 = fcmp une double %218, 0.000000e+00, !dbg !1575
  %220 = uitofp i1 %219 to double, !dbg !1576
  %221 = fmul double %215, %220, !dbg !1577
  tail call void @llvm.dbg.value(metadata double %221, i64 0, metadata !792, metadata !1291), !dbg !1518
  br label %230, !dbg !1578

; <label>:222                                     ; preds = %109
  %223 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %77, i64 0, i32 6, !dbg !1579
  %224 = bitcast %union.anon* %223 to double*, !dbg !1579
  %225 = load double* %224, align 8, !dbg !1579, !tbaa !1450
  %226 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %79, i64 0, i32 6, !dbg !1580
  %227 = bitcast %union.anon* %226 to double*, !dbg !1580
  %228 = load double* %227, align 8, !dbg !1580, !tbaa !1450
  %229 = tail call double @llvm.pow.f64(double %225, double %228), !dbg !1581
  tail call void @llvm.dbg.value(metadata double %229, i64 0, metadata !792, metadata !1291), !dbg !1518
  br label %230, !dbg !1582

; <label>:230                                     ; preds = %222, %210, %202, %194, %180, %172, %164, %155, %146, %137, %128, %119, %110
  %result.1.ph = phi double [ %118, %110 ], [ %127, %119 ], [ %136, %128 ], [ %145, %137 ], [ %154, %146 ], [ %163, %155 ], [ %171, %164 ], [ %179, %172 ], [ %193, %180 ], [ %201, %194 ], [ %209, %202 ], [ %221, %210 ], [ %229, %222 ]
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %ptr.1, i64 0, metadata !791, metadata !1291), !dbg !1583
  %231 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %ptr.19, i64 0, i32 3, !dbg !1584
  %232 = bitcast %"struct.pov::ExprNodeStruct"** %231 to i64*, !dbg !1584
  %233 = load i64* %232, align 8, !dbg !1584, !tbaa !1387
  %234 = load %"struct.pov::ExprNodeStruct"** %74, align 8, !dbg !1587, !tbaa !1395
  %235 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %234, i64 0, i32 3, !dbg !1588
  %236 = bitcast %"struct.pov::ExprNodeStruct"** %235 to i64*, !dbg !1589
  store i64 %233, i64* %236, align 8, !dbg !1589, !tbaa !1387
  %237 = load %"struct.pov::ExprNodeStruct"** %231, align 8, !dbg !1590, !tbaa !1387
  %238 = icmp eq %"struct.pov::ExprNodeStruct"* %237, null, !dbg !1592
  br i1 %238, label %243, label %239, !dbg !1593

; <label>:239                                     ; preds = %230
  %240 = ptrtoint %"struct.pov::ExprNodeStruct"* %234 to i64
  %241 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %237, i64 0, i32 2, !dbg !1594
  %242 = bitcast %"struct.pov::ExprNodeStruct"** %241 to i64*, !dbg !1595
  store i64 %240, i64* %242, align 8, !dbg !1595, !tbaa !1395
  %.pre = load %"struct.pov::ExprNodeStruct"** %74, align 8, !dbg !1596, !tbaa !1395
  br label %243, !dbg !1597

; <label>:243                                     ; preds = %230, %239
  %244 = phi %"struct.pov::ExprNodeStruct"* [ %234, %230 ], [ %.pre, %239 ]
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %244, i64 0, metadata !790, metadata !1291), !dbg !1403
  %245 = bitcast %"struct.pov::ExprNodeStruct"** %78 to i8**, !dbg !1598
  %246 = load i8** %245, align 8, !dbg !1598, !tbaa !1379
  tail call void @_ZN3pov8pov_freeEPvPKci(i8* %246, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 1112) #9, !dbg !1598
  store %"struct.pov::ExprNodeStruct"* null, %"struct.pov::ExprNodeStruct"** %78, align 8, !dbg !1598, !tbaa !1379
  %247 = bitcast %"struct.pov::ExprNodeStruct"* %ptr.19 to i8*, !dbg !1600
  tail call void @_ZN3pov8pov_freeEPvPKci(i8* %247, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 1113) #9, !dbg !1600
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !791, metadata !1291), !dbg !1583
  %248 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %77, i64 0, i32 6, !dbg !1602
  %249 = bitcast %union.anon* %248 to double*, !dbg !1602
  store double %result.1.ph, double* %249, align 8, !dbg !1603, !tbaa !1450
  br label %250, !dbg !1604

; <label>:250                                     ; preds = %94, %109, %.thread, %99, %243, %105, %101
  %ptr.2 = phi %"struct.pov::ExprNodeStruct"* [ %244, %243 ], [ %ptr.19, %105 ], [ %ptr.19, %101 ], [ %ptr.19, %99 ], [ %ptr.19, %94 ], [ %ptr.19, %.thread ], [ %ptr.19, %109 ]
  %251 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %ptr.2, i64 0, i32 3, !dbg !1605
  %ptr.1 = load %"struct.pov::ExprNodeStruct"** %251, align 8, !dbg !1467
  %252 = icmp eq %"struct.pov::ExprNodeStruct"* %ptr.1, null, !dbg !1469
  br i1 %252, label %253, label %.lr.ph, !dbg !1471

; <label>:253                                     ; preds = %250
  %.pre17 = load %"struct.pov::ExprNodeStruct"** %28, align 8, !dbg !1606, !tbaa !1387
  %phitmp = icmp eq %"struct.pov::ExprNodeStruct"* %.pre17, null, !dbg !1471
  br i1 %phitmp, label %.thread18, label %297, !dbg !1608

.thread18:                                        ; preds = %.loopexit, %253
  %left.1.lcssa19 = phi %"struct.pov::ExprNodeStruct"* [ %77, %253 ], [ %left.0, %.loopexit ]
  %254 = load %"struct.pov::ExprNodeStruct"** %71, align 8, !dbg !1609, !tbaa !1379
  %255 = icmp eq %"struct.pov::ExprNodeStruct"* %254, null, !dbg !1610
  %256 = bitcast %"struct.pov::ExprNodeStruct"* %254 to i8*
  br i1 %255, label %297, label %257, !dbg !1611

; <label>:257                                     ; preds = %.thread18
  %258 = load i32* %3, align 4, !dbg !1612, !tbaa !1306
  %259 = icmp slt i32 %258, 17, !dbg !1613
  br i1 %259, label %260, label %297, !dbg !1614

; <label>:260                                     ; preds = %257
  %261 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %254, i64 0, i32 5, !dbg !1615
  %262 = load i32* %261, align 4, !dbg !1615, !tbaa !1306
  %263 = icmp eq i32 %262, 18, !dbg !1618
  br i1 %263, label %264, label %297, !dbg !1619

; <label>:264                                     ; preds = %260
  %265 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %254, i64 0, i32 3, !dbg !1620
  %266 = load %"struct.pov::ExprNodeStruct"** %265, align 8, !dbg !1620, !tbaa !1387
  %267 = icmp eq %"struct.pov::ExprNodeStruct"* %266, null, !dbg !1621
  br i1 %267, label %268, label %297, !dbg !1622

; <label>:268                                     ; preds = %264
  %269 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %left.1.lcssa19, i64 0, i32 6, !dbg !1623
  %270 = bitcast %union.anon* %269 to i64*, !dbg !1623
  %271 = load i64* %270, align 8, !dbg !1623, !tbaa !1450
  %272 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %node, i64 0, i32 6, !dbg !1625
  %273 = bitcast %union.anon* %272 to i64*, !dbg !1626
  store i64 %271, i64* %273, align 8, !dbg !1626, !tbaa !1450
  store i32 18, i32* %3, align 4, !dbg !1627, !tbaa !1306
  tail call void @_ZN3pov8pov_freeEPvPKci(i8* %256, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 1125) #9, !dbg !1628
  store %"struct.pov::ExprNodeStruct"* null, %"struct.pov::ExprNodeStruct"** %71, align 8, !dbg !1630, !tbaa !1379
  br label %297, !dbg !1631

; <label>:274                                     ; preds = %24
  %275 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %node, i64 0, i32 1, !dbg !1632
  %276 = load %"struct.pov::ExprNodeStruct"** %275, align 8, !dbg !1632, !tbaa !1379
  tail call void @_ZN3pov13optimise_exprEPNS_14ExprNodeStructE(%"struct.pov::ExprNodeStruct"* %276) #9, !dbg !1634
  tail call void @_ZN3pov13optimise_callEPNS_14ExprNodeStructE(%"struct.pov::ExprNodeStruct"* %node) #9, !dbg !1635
  %277 = load %"struct.pov::ExprNodeStruct"** %275, align 8, !dbg !1636, !tbaa !1379
  %278 = icmp eq %"struct.pov::ExprNodeStruct"* %277, null, !dbg !1638
  %279 = bitcast %"struct.pov::ExprNodeStruct"* %277 to i8*
  br i1 %278, label %297, label %280, !dbg !1639

; <label>:280                                     ; preds = %274
  %281 = load i32* %3, align 4, !dbg !1640, !tbaa !1306
  %282 = icmp slt i32 %281, 17, !dbg !1641
  br i1 %282, label %283, label %297, !dbg !1642

; <label>:283                                     ; preds = %280
  %284 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %277, i64 0, i32 5, !dbg !1643
  %285 = load i32* %284, align 4, !dbg !1643, !tbaa !1306
  %286 = icmp eq i32 %285, 18, !dbg !1646
  br i1 %286, label %287, label %297, !dbg !1647

; <label>:287                                     ; preds = %283
  %288 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %277, i64 0, i32 3, !dbg !1648
  %289 = load %"struct.pov::ExprNodeStruct"** %288, align 8, !dbg !1648, !tbaa !1387
  %290 = icmp eq %"struct.pov::ExprNodeStruct"* %289, null, !dbg !1649
  br i1 %290, label %291, label %297, !dbg !1650

; <label>:291                                     ; preds = %287
  %292 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %277, i64 0, i32 6, !dbg !1651
  %293 = bitcast %union.anon* %292 to i64*, !dbg !1651
  %294 = load i64* %293, align 8, !dbg !1651, !tbaa !1450
  %295 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %node, i64 0, i32 6, !dbg !1653
  %296 = bitcast %union.anon* %295 to i64*, !dbg !1654
  store i64 %294, i64* %296, align 8, !dbg !1654, !tbaa !1450
  tail call void @_ZN3pov8pov_freeEPvPKci(i8* %279, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 1141) #9, !dbg !1655
  store %"struct.pov::ExprNodeStruct"* null, %"struct.pov::ExprNodeStruct"** %275, align 8, !dbg !1657, !tbaa !1379
  store i32 18, i32* %3, align 4, !dbg !1658, !tbaa !1306
  br label %297, !dbg !1659

; <label>:297                                     ; preds = %.thread18, %274, %280, %291, %287, %283, %253, %257, %268, %264, %260, %0, %67
  ret void, !dbg !1660
}

; Function Attrs: optsize ssp uwtable
define %"struct.pov::ExprNodeStruct"* @_ZN3pov26FNSyntax_GetTrapExpressionEj(i32 %trap) #0 {
  tail call void @llvm.dbg.value(metadata i32 %trap, i64 0, metadata !713, metadata !1291), !dbg !1661
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !714, metadata !1291), !dbg !1662
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !738, metadata !1291), !dbg !1663
  tail call void @llvm.dbg.value(metadata i32 23, i64 0, metadata !739, metadata !1291), !dbg !1665
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !740, metadata !1291), !dbg !1666
  %1 = tail call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 56, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 499, i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0)) #9, !dbg !1667
  %2 = bitcast i8* %1 to %"struct.pov::ExprNodeStruct"*, !dbg !1668
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %2, i64 0, metadata !740, metadata !1291), !dbg !1666
  %3 = getelementptr inbounds i8* %1, i64 36, !dbg !1669
  %4 = bitcast i8* %3 to i32*, !dbg !1669
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 36, i32 8, i1 false), !dbg !1670
  store i32 23, i32* %4, align 4, !dbg !1671, !tbaa !1306
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %2, i64 0, metadata !714, metadata !1291), !dbg !1662
  %5 = getelementptr inbounds i8* %1, i64 40, !dbg !1672
  %6 = bitcast i8* %5 to i32*, !dbg !1672
  store i32 %trap, i32* %6, align 4, !dbg !1673, !tbaa !1674
  ret %"struct.pov::ExprNodeStruct"* %2, !dbg !1675
}

; Function Attrs: optsize ssp uwtable
define %"struct.pov::ExprNodeStruct"* @_ZN3pov13new_expr_nodeEii(i32 %stage, i32 %op) #0 {
  tail call void @llvm.dbg.value(metadata i32 %stage, i64 0, metadata !738, metadata !1291), !dbg !1676
  tail call void @llvm.dbg.value(metadata i32 %op, i64 0, metadata !739, metadata !1291), !dbg !1677
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !740, metadata !1291), !dbg !1678
  %1 = tail call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 56, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 499, i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0)) #9, !dbg !1679
  %2 = bitcast i8* %1 to %"struct.pov::ExprNodeStruct"*, !dbg !1680
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %2, i64 0, metadata !740, metadata !1291), !dbg !1678
  %3 = getelementptr inbounds i8* %1, i64 32, !dbg !1681
  %4 = bitcast i8* %3 to i32*, !dbg !1681
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 32, i32 8, i1 false), !dbg !1682
  store i32 %stage, i32* %4, align 4, !dbg !1683, !tbaa !1684
  %5 = getelementptr inbounds i8* %1, i64 36, !dbg !1685
  %6 = bitcast i8* %5 to i32*, !dbg !1685
  store i32 %op, i32* %6, align 4, !dbg !1686, !tbaa !1306
  ret %"struct.pov::ExprNodeStruct"* %2, !dbg !1687
}

; Function Attrs: optsize ssp uwtable
define void @_ZN3pov25FNSyntax_DeleteExpressionEPNS_14ExprNodeStructE(%"struct.pov::ExprNodeStruct"* %node) #0 {
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %node, i64 0, metadata !719, metadata !1291), !dbg !1688
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !720, metadata !1291), !dbg !1689
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %node, i64 0, metadata !721, metadata !1291), !dbg !1690
  %1 = icmp eq %"struct.pov::ExprNodeStruct"* %node, null, !dbg !1691
  br i1 %1, label %._crit_edge.thread, label %.lr.ph, !dbg !1693

.lr.ph:                                           ; preds = %0, %22
  %2 = phi i1 [ true, %22 ], [ false, %0 ]
  %i.02 = phi %"struct.pov::ExprNodeStruct"* [ %24, %22 ], [ %node, %0 ]
  %temp.01 = phi %"struct.pov::ExprNodeStruct"* [ %i.02, %22 ], [ null, %0 ]
  br i1 %2, label %3, label %5, !dbg !1694

; <label>:3                                       ; preds = %.lr.ph
  %4 = bitcast %"struct.pov::ExprNodeStruct"* %temp.01 to i8*, !dbg !1696
  tail call void @_ZN3pov8pov_freeEPvPKci(i8* %4, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 279) #9, !dbg !1696
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !720, metadata !1291), !dbg !1689
  br label %5, !dbg !1700

; <label>:5                                       ; preds = %3, %.lr.ph
  %6 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.02, i64 0, i32 1, !dbg !1701
  %7 = load %"struct.pov::ExprNodeStruct"** %6, align 8, !dbg !1701, !tbaa !1379
  tail call void @_ZN3pov25FNSyntax_DeleteExpressionEPNS_14ExprNodeStructE(%"struct.pov::ExprNodeStruct"* %7) #9, !dbg !1702
  %8 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.02, i64 0, i32 5, !dbg !1703
  %9 = load i32* %8, align 4, !dbg !1703, !tbaa !1306
  switch i32 %9, label %22 [
    i32 19, label %10
    i32 21, label %10
    i32 22, label %13
  ], !dbg !1705

; <label>:10                                      ; preds = %5, %5
  %11 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.02, i64 0, i32 6, i32 0, i32 0, !dbg !1706
  %12 = load i8** %11, align 8, !dbg !1706, !tbaa !1313
  tail call void @_ZN3pov8pov_freeEPvPKci(i8* %12, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 286) #9, !dbg !1706
  store i8* null, i8** %11, align 8, !dbg !1706, !tbaa !1313
  br label %22, !dbg !1709

; <label>:13                                      ; preds = %5
  %14 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.02, i64 0, i32 6, i32 0, i32 1, !dbg !1710
  %15 = load i32* %14, align 4, !dbg !1710, !tbaa !1368
  %.off = add i32 %15, -487, !dbg !1714
  %switch = icmp ult i32 %.off, 2, !dbg !1714
  br i1 %switch, label %16, label %19, !dbg !1714

; <label>:16                                      ; preds = %13
  %17 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.02, i64 0, i32 6, i32 0, i32 2, !dbg !1715
  %18 = load i32* %17, align 4, !dbg !1715, !tbaa !1716
  tail call void @_ZN3pov21POVFPU_RemoveFunctionEj(i32 %18) #9, !dbg !1717
  br label %19, !dbg !1717

; <label>:19                                      ; preds = %13, %16
  %20 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.02, i64 0, i32 6, i32 0, i32 0, !dbg !1718
  %21 = load i8** %20, align 8, !dbg !1718, !tbaa !1376
  tail call void @_ZN3pov8pov_freeEPvPKci(i8* %21, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 292) #9, !dbg !1718
  store i8* null, i8** %20, align 8, !dbg !1718, !tbaa !1376
  br label %22, !dbg !1720

; <label>:22                                      ; preds = %5, %19, %10
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %24, i64 0, metadata !720, metadata !1291), !dbg !1689
  %23 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.02, i64 0, i32 3, !dbg !1721
  %24 = load %"struct.pov::ExprNodeStruct"** %23, align 8, !dbg !1721, !tbaa !1387
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %24, i64 0, metadata !721, metadata !1291), !dbg !1690
  %25 = icmp eq %"struct.pov::ExprNodeStruct"* %24, null, !dbg !1691
  br i1 %25, label %._crit_edge, label %.lr.ph, !dbg !1693

._crit_edge:                                      ; preds = %22
  %26 = bitcast %"struct.pov::ExprNodeStruct"* %i.02 to i8*, !dbg !1722
  tail call void @_ZN3pov8pov_freeEPvPKci(i8* %26, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 300) #9, !dbg !1722
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !720, metadata !1291), !dbg !1689
  br label %._crit_edge.thread, !dbg !1726

._crit_edge.thread:                               ; preds = %0, %._crit_edge
  ret void, !dbg !1727
}

; Function Attrs: optsize
declare void @_ZN3pov8pov_freeEPvPKci(i8*, i8*, i32) #1

; Function Attrs: optsize
declare void @_ZN3pov21POVFPU_RemoveFunctionEj(i32) #1

; Function Attrs: optsize ssp uwtable
define i32 @_ZN3pov14expr_get_tokenEv() #0 {
  tail call void @_ZN3pov9Get_TokenEv() #9, !dbg !1728
  %1 = load i32* getelementptr inbounds (%"struct.pov::Token_Struct"* @_ZN3pov5TokenE, i64 0, i32 1), align 4, !dbg !1729, !tbaa !1731
  switch i32 %1, label %12 [
    i32 71, label %20
    i32 72, label %20
    i32 73, label %20
    i32 400, label %20
    i32 401, label %20
    i32 161, label %20
    i32 5, label %2
    i32 27, label %4
    i32 84, label %5
    i32 83, label %6
    i32 79, label %7
    i32 80, label %8
    i32 81, label %9
    i32 408, label %10
    i32 82, label %11
  ], !dbg !1736

; <label>:2                                       ; preds = %0
  %3 = load i64* bitcast (double* getelementptr inbounds (%"struct.pov::OPTIONS_STRUCT"* @_ZN3pov4optsE, i64 0, i32 34, i32 1) to i64*), align 8, !dbg !1737, !tbaa !1745
  store i64 %3, i64* bitcast (double* getelementptr inbounds (%"struct.pov::Token_Struct"* @_ZN3pov5TokenE, i64 0, i32 6) to i64*), align 8, !dbg !1752, !tbaa !1753
  br label %20, !dbg !1754

; <label>:4                                       ; preds = %0
  store double 0x400921FB54442D18, double* getelementptr inbounds (%"struct.pov::Token_Struct"* @_ZN3pov5TokenE, i64 0, i32 6), align 8, !dbg !1755, !tbaa !1753
  br label %20, !dbg !1758

; <label>:5                                       ; preds = %0
  br label %20, !dbg !1759

; <label>:6                                       ; preds = %0
  br label %20, !dbg !1761

; <label>:7                                       ; preds = %0
  br label %20, !dbg !1763

; <label>:8                                       ; preds = %0
  br label %20, !dbg !1765

; <label>:9                                       ; preds = %0
  br label %20, !dbg !1767

; <label>:10                                      ; preds = %0
  br label %20, !dbg !1769

; <label>:11                                      ; preds = %0
  br label %20, !dbg !1771

; <label>:12                                      ; preds = %0
  %13 = load i32* getelementptr inbounds (%"struct.pov::Token_Struct"* @_ZN3pov5TokenE, i64 0, i32 0), align 8, !dbg !1773, !tbaa !1775
  %14 = icmp eq i32 %13, 64, !dbg !1776
  br i1 %14, label %15, label %20, !dbg !1777

; <label>:15                                      ; preds = %12
  switch i32 %1, label %19 [
    i32 11, label %20
    i32 10, label %16
  ], !dbg !1778

; <label>:16                                      ; preds = %15
  %17 = load i64** bitcast (i8** getelementptr inbounds (%"struct.pov::Token_Struct"* @_ZN3pov5TokenE, i64 0, i32 10) to i64**), align 8, !dbg !1780, !tbaa !1784
  %18 = load i64* %17, align 8, !dbg !1785, !tbaa !1450
  store i64 %18, i64* bitcast (double* getelementptr inbounds (%"struct.pov::Token_Struct"* @_ZN3pov5TokenE, i64 0, i32 6) to i64*), align 8, !dbg !1786, !tbaa !1753
  br label %20, !dbg !1787

; <label>:19                                      ; preds = %15
  br label %20, !dbg !1788

; <label>:20                                      ; preds = %12, %15, %0, %0, %0, %0, %0, %0, %19, %16, %11, %10, %9, %8, %7, %6, %5, %4, %2
  %.0 = phi i32 [ 11, %2 ], [ 11, %4 ], [ %1, %5 ], [ %1, %6 ], [ %1, %7 ], [ %1, %8 ], [ %1, %9 ], [ %1, %10 ], [ %1, %11 ], [ 11, %16 ], [ 487, %19 ], [ 10, %0 ], [ 10, %0 ], [ 10, %0 ], [ 10, %0 ], [ 10, %0 ], [ 10, %0 ], [ 11, %15 ], [ %13, %12 ]
  ret i32 %.0, !dbg !1789
}

; Function Attrs: optsize
declare void @_ZN3pov9Get_TokenEv() #1

; Function Attrs: optsize
declare i8* @_ZN3pov10pov_mallocEmPKciS1_(i64, i8*, i32, i8*) #1

; Function Attrs: nounwind optsize readnone ssp uwtable
define zeroext i1 @_ZN3pov9expr_noopERPNS_14ExprNodeStructEii(%"struct.pov::ExprNodeStruct"** nocapture readnone dereferenceable(8), i32, i32) #2 {
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"** %0, i64 0, metadata !743, metadata !1291), !dbg !1790
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !744, metadata !1291), !dbg !1791
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !745, metadata !1291), !dbg !1792
  ret i1 true, !dbg !1793
}

; Function Attrs: optsize ssp uwtable
define zeroext i1 @_ZN3pov9expr_growERPNS_14ExprNodeStructEii(%"struct.pov::ExprNodeStruct"** nocapture dereferenceable(8) %current, i32 %stage, i32 %op) #0 {
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"** %current, i64 0, metadata !748, metadata !1291), !dbg !1794
  tail call void @llvm.dbg.value(metadata i32 %stage, i64 0, metadata !749, metadata !1291), !dbg !1795
  tail call void @llvm.dbg.value(metadata i32 %op, i64 0, metadata !750, metadata !1291), !dbg !1796
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !751, metadata !1291), !dbg !1797
  %1 = load %"struct.pov::ExprNodeStruct"** %current, align 8, !dbg !1798, !tbaa !1313
  %2 = icmp eq %"struct.pov::ExprNodeStruct"* %1, null, !dbg !1800
  br i1 %2, label %92, label %3, !dbg !1801

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %1, i64 0, i32 4, !dbg !1802
  %5 = load i32* %4, align 4, !dbg !1802, !tbaa !1684
  %6 = icmp slt i32 %5, %stage, !dbg !1804
  br i1 %6, label %.preheader1, label %17, !dbg !1805

.preheader1:                                      ; preds = %3, %15
  %7 = phi %"struct.pov::ExprNodeStruct"* [ %9, %15 ], [ %1, %3 ]
  %8 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %7, i64 0, i32 1, !dbg !1806
  %9 = load %"struct.pov::ExprNodeStruct"** %8, align 8, !dbg !1806, !tbaa !1379
  %10 = icmp eq %"struct.pov::ExprNodeStruct"* %9, null, !dbg !1808
  br i1 %10, label %.loopexit, label %11, !dbg !1809

; <label>:11                                      ; preds = %.preheader1
  %12 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %9, i64 0, i32 4, !dbg !1810
  %13 = load i32* %12, align 4, !dbg !1810, !tbaa !1684
  %14 = icmp sgt i32 %13, %stage, !dbg !1813
  br i1 %14, label %.loopexit, label %15, !dbg !1814

; <label>:15                                      ; preds = %11
  store %"struct.pov::ExprNodeStruct"* %9, %"struct.pov::ExprNodeStruct"** %current, align 8, !dbg !1815, !tbaa !1313
  %16 = icmp eq i32 %13, %stage, !dbg !1816
  br i1 %16, label %.loopexit, label %.preheader1, !dbg !1818

; <label>:17                                      ; preds = %3
  %18 = icmp sgt i32 %5, %stage, !dbg !1819
  br i1 %18, label %.preheader2, label %.loopexit, !dbg !1821

.preheader2:                                      ; preds = %17, %23
  %19 = phi %"struct.pov::ExprNodeStruct"* [ %21, %23 ], [ %1, %17 ]
  %20 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %19, i64 0, i32 0, !dbg !1822
  %21 = load %"struct.pov::ExprNodeStruct"** %20, align 8, !dbg !1822, !tbaa !1824
  %22 = icmp eq %"struct.pov::ExprNodeStruct"* %21, null, !dbg !1825
  br i1 %22, label %.loopexit, label %23, !dbg !1826

; <label>:23                                      ; preds = %.preheader2
  store %"struct.pov::ExprNodeStruct"* %21, %"struct.pov::ExprNodeStruct"** %current, align 8, !dbg !1827, !tbaa !1313
  %24 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %21, i64 0, i32 4, !dbg !1829
  %25 = load i32* %24, align 4, !dbg !1829, !tbaa !1684
  %26 = icmp sgt i32 %25, %stage, !dbg !1831
  br i1 %26, label %.preheader2, label %.loopexit, !dbg !1832

.loopexit:                                        ; preds = %23, %.preheader2, %.preheader1, %11, %15, %17
  %27 = phi %"struct.pov::ExprNodeStruct"* [ %1, %17 ], [ %7, %.preheader1 ], [ %7, %11 ], [ %9, %15 ], [ %21, %23 ], [ %19, %.preheader2 ]
  %28 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %27, i64 0, i32 4, !dbg !1833
  %29 = load i32* %28, align 4, !dbg !1833, !tbaa !1684
  %30 = icmp eq i32 %29, %stage, !dbg !1834
  br i1 %30, label %.preheader, label %55, !dbg !1835

.preheader:                                       ; preds = %.loopexit
  %31 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %27, i64 0, i32 3, !dbg !1836
  %32 = load %"struct.pov::ExprNodeStruct"** %31, align 8, !dbg !1836, !tbaa !1387
  %33 = icmp eq %"struct.pov::ExprNodeStruct"* %32, null, !dbg !1838
  br i1 %33, label %._crit_edge, label %.lr.ph, !dbg !1839

.lr.ph:                                           ; preds = %.preheader, %.lr.ph
  %34 = phi %"struct.pov::ExprNodeStruct"* [ %36, %.lr.ph ], [ %32, %.preheader ]
  store %"struct.pov::ExprNodeStruct"* %34, %"struct.pov::ExprNodeStruct"** %current, align 8, !dbg !1840, !tbaa !1313
  %35 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %34, i64 0, i32 3, !dbg !1836
  %36 = load %"struct.pov::ExprNodeStruct"** %35, align 8, !dbg !1836, !tbaa !1387
  %37 = icmp eq %"struct.pov::ExprNodeStruct"* %36, null, !dbg !1838
  br i1 %37, label %._crit_edge, label %.lr.ph, !dbg !1839

._crit_edge:                                      ; preds = %.lr.ph, %.preheader
  tail call void @llvm.dbg.value(metadata i32 %stage, i64 0, metadata !738, metadata !1291), !dbg !1841
  tail call void @llvm.dbg.value(metadata i32 %op, i64 0, metadata !739, metadata !1291), !dbg !1843
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !740, metadata !1291), !dbg !1844
  %38 = tail call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 56, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 499, i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0)) #9, !dbg !1845
  %39 = getelementptr inbounds i8* %38, i64 32, !dbg !1846
  %40 = bitcast i8* %39 to i32*, !dbg !1846
  tail call void @llvm.memset.p0i8.i64(i8* %38, i8 0, i64 32, i32 8, i1 false), !dbg !1847
  store i32 %stage, i32* %40, align 4, !dbg !1848, !tbaa !1684
  %41 = getelementptr inbounds i8* %38, i64 36, !dbg !1849
  %42 = bitcast i8* %41 to i32*, !dbg !1849
  store i32 %op, i32* %42, align 4, !dbg !1850, !tbaa !1306
  %43 = bitcast %"struct.pov::ExprNodeStruct"** %current to i64**, !dbg !1851
  %44 = load i64** %43, align 8, !dbg !1851, !tbaa !1313
  %45 = load i64* %44, align 8, !dbg !1852, !tbaa !1824
  %46 = bitcast i8* %38 to i64*, !dbg !1853
  store i64 %45, i64* %46, align 8, !dbg !1853, !tbaa !1824
  %47 = bitcast %"struct.pov::ExprNodeStruct"** %current to i64*, !dbg !1854
  %48 = load i64* %47, align 8, !dbg !1854, !tbaa !1313
  %49 = getelementptr inbounds i8* %38, i64 16, !dbg !1855
  %50 = bitcast i8* %49 to i64*, !dbg !1856
  store i64 %48, i64* %50, align 8, !dbg !1856, !tbaa !1395
  %51 = load %"struct.pov::ExprNodeStruct"** %current, align 8, !dbg !1857, !tbaa !1313
  %52 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %51, i64 0, i32 3, !dbg !1858
  %53 = bitcast %"struct.pov::ExprNodeStruct"** %52 to i8**, !dbg !1859
  store i8* %38, i8** %53, align 8, !dbg !1859, !tbaa !1387
  %54 = bitcast %"struct.pov::ExprNodeStruct"** %current to i8**, !dbg !1860
  store i8* %38, i8** %54, align 8, !dbg !1860, !tbaa !1313
  br label %92, !dbg !1861

; <label>:55                                      ; preds = %.loopexit
  tail call void @llvm.dbg.value(metadata i32 %stage, i64 0, metadata !738, metadata !1291), !dbg !1862
  tail call void @llvm.dbg.value(metadata i32 16, i64 0, metadata !739, metadata !1291), !dbg !1864
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !740, metadata !1291), !dbg !1865
  %56 = tail call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 56, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 499, i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0)) #9, !dbg !1866
  %57 = getelementptr inbounds i8* %56, i64 32, !dbg !1867
  %58 = bitcast i8* %57 to i32*, !dbg !1867
  tail call void @llvm.memset.p0i8.i64(i8* %56, i8 0, i64 32, i32 8, i1 false), !dbg !1868
  store i32 %stage, i32* %58, align 4, !dbg !1869, !tbaa !1684
  %59 = getelementptr inbounds i8* %56, i64 36, !dbg !1870
  %60 = bitcast i8* %59 to i32*, !dbg !1870
  store i32 16, i32* %60, align 4, !dbg !1871, !tbaa !1306
  %61 = bitcast %"struct.pov::ExprNodeStruct"** %current to i64*, !dbg !1872
  %62 = load i64* %61, align 8, !dbg !1872, !tbaa !1313
  %63 = bitcast i8* %56 to i64*, !dbg !1873
  store i64 %62, i64* %63, align 8, !dbg !1873, !tbaa !1824
  %64 = load %"struct.pov::ExprNodeStruct"** %current, align 8, !dbg !1874, !tbaa !1313
  %65 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %64, i64 0, i32 1, !dbg !1875
  %66 = bitcast %"struct.pov::ExprNodeStruct"** %65 to i64*, !dbg !1875
  %67 = load i64* %66, align 8, !dbg !1875, !tbaa !1379
  %68 = getelementptr inbounds i8* %56, i64 8, !dbg !1876
  %69 = bitcast i8* %68 to %"struct.pov::ExprNodeStruct"**, !dbg !1876
  %70 = bitcast i8* %68 to i64*, !dbg !1877
  store i64 %67, i64* %70, align 8, !dbg !1877, !tbaa !1379
  %71 = load %"struct.pov::ExprNodeStruct"** %current, align 8, !dbg !1878, !tbaa !1313
  %72 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %71, i64 0, i32 1, !dbg !1879
  %73 = bitcast %"struct.pov::ExprNodeStruct"** %72 to i8**, !dbg !1880
  store i8* %56, i8** %73, align 8, !dbg !1880, !tbaa !1379
  %ptr.04 = load %"struct.pov::ExprNodeStruct"** %69, align 8, !dbg !1881
  %74 = icmp eq %"struct.pov::ExprNodeStruct"* %ptr.04, null, !dbg !1882
  br i1 %74, label %._crit_edge8, label %.lr.ph7, !dbg !1884

.lr.ph7:                                          ; preds = %55, %.lr.ph7
  %ptr.05 = phi %"struct.pov::ExprNodeStruct"* [ %ptr.0, %.lr.ph7 ], [ %ptr.04, %55 ]
  %75 = bitcast %"struct.pov::ExprNodeStruct"* %ptr.05 to i8**, !dbg !1885
  store i8* %56, i8** %75, align 8, !dbg !1885, !tbaa !1824
  %76 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %ptr.05, i64 0, i32 3, !dbg !1886
  %ptr.0 = load %"struct.pov::ExprNodeStruct"** %76, align 8, !dbg !1881
  %77 = icmp eq %"struct.pov::ExprNodeStruct"* %ptr.0, null, !dbg !1882
  br i1 %77, label %._crit_edge8, label %.lr.ph7, !dbg !1884

._crit_edge8:                                     ; preds = %.lr.ph7, %55
  tail call void @llvm.dbg.value(metadata i32 %stage, i64 0, metadata !738, metadata !1291), !dbg !1887
  tail call void @llvm.dbg.value(metadata i32 %op, i64 0, metadata !739, metadata !1291), !dbg !1889
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !740, metadata !1291), !dbg !1890
  %78 = tail call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 56, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 499, i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0)) #9, !dbg !1891
  %79 = getelementptr inbounds i8* %78, i64 32, !dbg !1892
  %80 = bitcast i8* %79 to i32*, !dbg !1892
  tail call void @llvm.memset.p0i8.i64(i8* %78, i8 0, i64 32, i32 8, i1 false), !dbg !1893
  store i32 %stage, i32* %80, align 4, !dbg !1894, !tbaa !1684
  %81 = getelementptr inbounds i8* %78, i64 36, !dbg !1895
  %82 = bitcast i8* %81 to i32*, !dbg !1895
  store i32 %op, i32* %82, align 4, !dbg !1896, !tbaa !1306
  %83 = bitcast %"struct.pov::ExprNodeStruct"** %current to i8**, !dbg !1897
  store i8* %78, i8** %83, align 8, !dbg !1897, !tbaa !1313
  %84 = getelementptr inbounds i8* %78, i64 16, !dbg !1898
  %85 = bitcast i8* %84 to i8**, !dbg !1899
  store i8* %56, i8** %85, align 8, !dbg !1899, !tbaa !1395
  %86 = load i64* %61, align 8, !dbg !1900, !tbaa !1313
  %87 = getelementptr inbounds i8* %56, i64 24, !dbg !1901
  %88 = bitcast i8* %87 to i64*, !dbg !1902
  store i64 %86, i64* %88, align 8, !dbg !1902, !tbaa !1387
  %89 = load i64* %63, align 8, !dbg !1903, !tbaa !1824
  %90 = bitcast %"struct.pov::ExprNodeStruct"** %current to i64**, !dbg !1904
  %91 = load i64** %90, align 8, !dbg !1904, !tbaa !1313
  store i64 %89, i64* %91, align 8, !dbg !1905, !tbaa !1824
  br label %92

; <label>:92                                      ; preds = %._crit_edge, %._crit_edge8, %0
  %.0 = phi i1 [ false, %0 ], [ true, %._crit_edge8 ], [ true, %._crit_edge ]
  ret i1 %.0, !dbg !1906
}

; Function Attrs: optsize ssp uwtable
define zeroext i1 @_ZN3pov9expr_callERPNS_14ExprNodeStructEii(%"struct.pov::ExprNodeStruct"** nocapture dereferenceable(8) %current, i32 %stage, i32 %op) #0 {
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"** %current, i64 0, metadata !758, metadata !1291), !dbg !1907
  tail call void @llvm.dbg.value(metadata i32 %stage, i64 0, metadata !759, metadata !1291), !dbg !1908
  tail call void @llvm.dbg.value(metadata i32 %op, i64 0, metadata !760, metadata !1291), !dbg !1909
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !761, metadata !1291), !dbg !1910
  %1 = load %"struct.pov::ExprNodeStruct"** %current, align 8, !dbg !1911, !tbaa !1313
  %2 = icmp eq %"struct.pov::ExprNodeStruct"* %1, null, !dbg !1913
  br i1 %2, label %60, label %3, !dbg !1914

; <label>:3                                       ; preds = %0
  tail call void @llvm.dbg.value(metadata i32 %stage, i64 0, metadata !738, metadata !1291), !dbg !1915
  tail call void @llvm.dbg.value(metadata i32 %op, i64 0, metadata !739, metadata !1291), !dbg !1917
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !740, metadata !1291), !dbg !1918
  %4 = tail call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 56, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 499, i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0)) #9, !dbg !1919
  %5 = getelementptr inbounds i8* %4, i64 32, !dbg !1920
  %6 = bitcast i8* %5 to i32*, !dbg !1920
  tail call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 32, i32 8, i1 false), !dbg !1921
  store i32 %stage, i32* %6, align 4, !dbg !1922, !tbaa !1684
  %7 = getelementptr inbounds i8* %4, i64 36, !dbg !1923
  %8 = bitcast i8* %7 to i32*, !dbg !1923
  store i32 %op, i32* %8, align 4, !dbg !1924, !tbaa !1306
  %9 = load i8** getelementptr inbounds (%"struct.pov::Token_Struct"* @_ZN3pov5TokenE, i64 0, i32 10), align 8, !dbg !1925, !tbaa !1784
  %10 = icmp eq i8* %9, null, !dbg !1927
  br i1 %10, label %17, label %11, !dbg !1928

; <label>:11                                      ; preds = %3
  %12 = bitcast i8* %9 to i32*, !dbg !1929
  %13 = load i32* %12, align 4, !dbg !1931, !tbaa !1674
  %14 = getelementptr inbounds i8* %4, i64 52, !dbg !1932
  %15 = bitcast i8* %14 to i32*, !dbg !1932
  store i32 %13, i32* %15, align 4, !dbg !1933, !tbaa !1716
  %16 = tail call %"struct.pov::FunctionCode"* @_ZN3pov30POVFPU_GetFunctionAndReferenceEj(i32 %13) #9, !dbg !1934
  br label %20, !dbg !1935

; <label>:17                                      ; preds = %3
  %18 = getelementptr inbounds i8* %4, i64 52, !dbg !1936
  %19 = bitcast i8* %18 to i32*, !dbg !1936
  store i32 0, i32* %19, align 4, !dbg !1937, !tbaa !1716
  br label %20

; <label>:20                                      ; preds = %17, %11
  %21 = load i32* getelementptr inbounds (%"struct.pov::Token_Struct"* @_ZN3pov5TokenE, i64 0, i32 1), align 4, !dbg !1938, !tbaa !1731
  %22 = getelementptr inbounds i8* %4, i64 48, !dbg !1939
  %23 = bitcast i8* %22 to i32*, !dbg !1939
  store i32 %21, i32* %23, align 4, !dbg !1940, !tbaa !1368
  %24 = load i8** getelementptr inbounds (%"struct.pov::Token_Struct"* @_ZN3pov5TokenE, i64 0, i32 5), align 8, !dbg !1941, !tbaa !1942
  %25 = tail call i8* @_ZN3pov10pov_strdupEPKc(i8* %24) #9, !dbg !1941
  %26 = getelementptr inbounds i8* %4, i64 40, !dbg !1943
  %27 = bitcast i8* %26 to i8**, !dbg !1943
  store i8* %25, i8** %27, align 8, !dbg !1944, !tbaa !1376
  %28 = load %"struct.pov::ExprNodeStruct"** %current, align 8, !dbg !1945, !tbaa !1313
  %29 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %28, i64 0, i32 1, !dbg !1946
  %30 = load %"struct.pov::ExprNodeStruct"** %29, align 8, !dbg !1946, !tbaa !1379
  %31 = icmp eq %"struct.pov::ExprNodeStruct"* %30, null, !dbg !1947
  br i1 %31, label %._crit_edge4, label %.lr.ph3, !dbg !1948

.lr.ph3:                                          ; preds = %20, %.lr.ph3
  %32 = phi %"struct.pov::ExprNodeStruct"* [ %34, %.lr.ph3 ], [ %30, %20 ]
  store %"struct.pov::ExprNodeStruct"* %32, %"struct.pov::ExprNodeStruct"** %current, align 8, !dbg !1949, !tbaa !1313
  %33 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %32, i64 0, i32 1, !dbg !1946
  %34 = load %"struct.pov::ExprNodeStruct"** %33, align 8, !dbg !1946, !tbaa !1379
  %35 = icmp eq %"struct.pov::ExprNodeStruct"* %34, null, !dbg !1947
  br i1 %35, label %._crit_edge4, label %.lr.ph3, !dbg !1948

._crit_edge4:                                     ; preds = %.lr.ph3, %20
  %.lcssa = phi %"struct.pov::ExprNodeStruct"** [ %29, %20 ], [ %33, %.lr.ph3 ]
  %36 = bitcast %"struct.pov::ExprNodeStruct"** %.lcssa to i8**, !dbg !1950
  store i8* %4, i8** %36, align 8, !dbg !1950, !tbaa !1379
  %37 = bitcast %"struct.pov::ExprNodeStruct"** %current to i64*, !dbg !1951
  %38 = load i64* %37, align 8, !dbg !1951, !tbaa !1313
  %39 = bitcast i8* %4 to i64*, !dbg !1952
  store i64 %38, i64* %39, align 8, !dbg !1952, !tbaa !1824
  %40 = bitcast %"struct.pov::ExprNodeStruct"** %current to i8**, !dbg !1953
  store i8* %4, i8** %40, align 8, !dbg !1953, !tbaa !1313
  %41 = tail call i32 @_ZN3pov14expr_get_tokenEv() #9, !dbg !1954
  %42 = icmp eq i32 %41, 173, !dbg !1956
  br i1 %42, label %44, label %43, !dbg !1957

; <label>:43                                      ; preds = %._crit_edge4
  tail call void @_ZN3pov17Expectation_ErrorEPKc(i8* getelementptr inbounds ([2 x i8]* @.str2, i64 0, i64 0)) #9, !dbg !1958
  br label %44, !dbg !1958

; <label>:44                                      ; preds = %._crit_edge4, %43
  %45 = tail call %"struct.pov::ExprNodeStruct"* @_ZN3pov10parse_exprEv() #9, !dbg !1959
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %45, i64 0, metadata !761, metadata !1291), !dbg !1910
  %46 = load %"struct.pov::ExprNodeStruct"** %current, align 8, !dbg !1960, !tbaa !1313
  %47 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %46, i64 0, i32 1, !dbg !1961
  store %"struct.pov::ExprNodeStruct"* %45, %"struct.pov::ExprNodeStruct"** %47, align 8, !dbg !1962, !tbaa !1379
  %48 = tail call i32 @_ZN3pov14expr_get_tokenEv() #9, !dbg !1963
  %49 = icmp eq i32 %48, 126, !dbg !1964
  br i1 %49, label %.lr.ph, label %._crit_edge, !dbg !1965

.lr.ph:                                           ; preds = %44, %.lr.ph
  %node.01 = phi %"struct.pov::ExprNodeStruct"* [ %50, %.lr.ph ], [ %45, %44 ]
  %50 = tail call %"struct.pov::ExprNodeStruct"* @_ZN3pov10parse_exprEv() #9, !dbg !1966
  %51 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %node.01, i64 0, i32 3, !dbg !1968
  store %"struct.pov::ExprNodeStruct"* %50, %"struct.pov::ExprNodeStruct"** %51, align 8, !dbg !1969, !tbaa !1387
  %52 = bitcast %"struct.pov::ExprNodeStruct"* %node.01 to i64*, !dbg !1970
  %53 = load i64* %52, align 8, !dbg !1970, !tbaa !1824
  %54 = bitcast %"struct.pov::ExprNodeStruct"* %50 to i64*, !dbg !1971
  store i64 %53, i64* %54, align 8, !dbg !1971, !tbaa !1824
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %50, i64 0, metadata !761, metadata !1291), !dbg !1910
  %55 = tail call i32 @_ZN3pov14expr_get_tokenEv() #9, !dbg !1963
  %56 = icmp eq i32 %55, 126, !dbg !1964
  br i1 %56, label %.lr.ph, label %._crit_edge, !dbg !1965

._crit_edge:                                      ; preds = %.lr.ph, %44
  %57 = load i32* getelementptr inbounds (%"struct.pov::Token_Struct"* @_ZN3pov5TokenE, i64 0, i32 0), align 8, !dbg !1972, !tbaa !1775
  %58 = icmp eq i32 %57, 219, !dbg !1974
  br i1 %58, label %60, label %59, !dbg !1975

; <label>:59                                      ; preds = %._crit_edge
  tail call void @_ZN3pov17Expectation_ErrorEPKc(i8* getelementptr inbounds ([2 x i8]* @.str3, i64 0, i64 0)) #9, !dbg !1976
  br label %60, !dbg !1976

; <label>:60                                      ; preds = %59, %._crit_edge, %0
  %.0 = phi i1 [ false, %0 ], [ true, %._crit_edge ], [ true, %59 ]
  ret i1 %.0, !dbg !1977
}

; Function Attrs: optsize
declare %"struct.pov::FunctionCode"* @_ZN3pov30POVFPU_GetFunctionAndReferenceEj(i32) #1

; Function Attrs: optsize
declare i8* @_ZN3pov10pov_strdupEPKc(i8*) #1

; Function Attrs: optsize
declare void @_ZN3pov17Expectation_ErrorEPKc(i8*) #1

; Function Attrs: optsize ssp uwtable
define zeroext i1 @_ZN3pov8expr_putERPNS_14ExprNodeStructEii(%"struct.pov::ExprNodeStruct"** nocapture readonly dereferenceable(8) %current, i32 %stage, i32 %op) #0 {
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"** %current, i64 0, metadata !764, metadata !1291), !dbg !1978
  tail call void @llvm.dbg.value(metadata i32 %stage, i64 0, metadata !765, metadata !1291), !dbg !1979
  tail call void @llvm.dbg.value(metadata i32 %op, i64 0, metadata !766, metadata !1291), !dbg !1980
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !767, metadata !1291), !dbg !1981
  %1 = load %"struct.pov::ExprNodeStruct"** %current, align 8, !dbg !1982, !tbaa !1313
  %2 = icmp eq %"struct.pov::ExprNodeStruct"* %1, null, !dbg !1984
  br i1 %2, label %29, label %3, !dbg !1985

; <label>:3                                       ; preds = %0
  tail call void @llvm.dbg.value(metadata i32 %stage, i64 0, metadata !738, metadata !1291), !dbg !1986
  tail call void @llvm.dbg.value(metadata i32 %op, i64 0, metadata !739, metadata !1291), !dbg !1988
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !740, metadata !1291), !dbg !1989
  %4 = tail call i8* @_ZN3pov10pov_mallocEmPKciS1_(i64 56, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 499, i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0)) #9, !dbg !1990
  %5 = getelementptr inbounds i8* %4, i64 32, !dbg !1991
  %6 = bitcast i8* %5 to i32*, !dbg !1991
  tail call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 32, i32 8, i1 false), !dbg !1992
  store i32 %stage, i32* %6, align 4, !dbg !1993, !tbaa !1684
  %7 = getelementptr inbounds i8* %4, i64 36, !dbg !1994
  %8 = bitcast i8* %7 to i32*, !dbg !1994
  store i32 %op, i32* %8, align 4, !dbg !1995, !tbaa !1306
  %9 = icmp eq i32 %op, 18, !dbg !1996
  br i1 %9, label %10, label %14, !dbg !1998

; <label>:10                                      ; preds = %3
  %11 = load i64* bitcast (double* getelementptr inbounds (%"struct.pov::Token_Struct"* @_ZN3pov5TokenE, i64 0, i32 6) to i64*), align 8, !dbg !1999, !tbaa !1753
  %12 = getelementptr inbounds i8* %4, i64 40, !dbg !2001
  %13 = bitcast i8* %12 to i64*, !dbg !2002
  store i64 %11, i64* %13, align 8, !dbg !2002, !tbaa !1450
  br label %19, !dbg !2003

; <label>:14                                      ; preds = %3
  %15 = load i8** getelementptr inbounds (%"struct.pov::Token_Struct"* @_ZN3pov5TokenE, i64 0, i32 5), align 8, !dbg !2004, !tbaa !1942
  %16 = tail call i8* @_ZN3pov10pov_strdupEPKc(i8* %15) #9, !dbg !2004
  %17 = getelementptr inbounds i8* %4, i64 40, !dbg !2006
  %18 = bitcast i8* %17 to i8**, !dbg !2006
  store i8* %16, i8** %18, align 8, !dbg !2007, !tbaa !1313
  br label %19

; <label>:19                                      ; preds = %14, %10
  %20 = load %"struct.pov::ExprNodeStruct"** %current, align 8, !dbg !2008, !tbaa !1313
  %21 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %20, i64 0, i32 1, !dbg !2010
  %22 = load %"struct.pov::ExprNodeStruct"** %21, align 8, !dbg !2010, !tbaa !1379
  %23 = icmp eq %"struct.pov::ExprNodeStruct"* %22, null, !dbg !2011
  br i1 %23, label %24, label %29, !dbg !2012

; <label>:24                                      ; preds = %19
  %25 = bitcast %"struct.pov::ExprNodeStruct"** %21 to i8**, !dbg !2013
  store i8* %4, i8** %25, align 8, !dbg !2013, !tbaa !1379
  %26 = bitcast %"struct.pov::ExprNodeStruct"** %current to i64*, !dbg !2014
  %27 = load i64* %26, align 8, !dbg !2014, !tbaa !1313
  %28 = bitcast i8* %4 to i64*, !dbg !2015
  store i64 %27, i64* %28, align 8, !dbg !2015, !tbaa !1824
  br label %29, !dbg !2016

; <label>:29                                      ; preds = %19, %0, %24
  %.0 = phi i1 [ true, %24 ], [ false, %0 ], [ false, %19 ]
  ret i1 %.0, !dbg !2017
}

; Function Attrs: optsize ssp uwtable
define zeroext i1 @_ZN3pov8expr_newERPNS_14ExprNodeStructEii(%"struct.pov::ExprNodeStruct"** nocapture readonly dereferenceable(8) %current, i32, i32) #0 {
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"** %current, i64 0, metadata !770, metadata !1291), !dbg !2018
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !771, metadata !1291), !dbg !2019
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !772, metadata !1291), !dbg !2020
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* null, i64 0, metadata !773, metadata !1291), !dbg !2021
  %3 = tail call %"struct.pov::ExprNodeStruct"* @_ZN3pov10parse_exprEv() #9, !dbg !2022
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %3, i64 0, metadata !773, metadata !1291), !dbg !2021
  %4 = icmp eq %"struct.pov::ExprNodeStruct"* %3, null, !dbg !2023
  br i1 %4, label %12, label %5, !dbg !2025

; <label>:5                                       ; preds = %2
  %6 = load %"struct.pov::ExprNodeStruct"** %current, align 8, !dbg !2026, !tbaa !1313
  %7 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 1, !dbg !2027
  store %"struct.pov::ExprNodeStruct"* %3, %"struct.pov::ExprNodeStruct"** %7, align 8, !dbg !2028, !tbaa !1379
  %8 = bitcast %"struct.pov::ExprNodeStruct"** %current to i64*, !dbg !2029
  %9 = load i64* %8, align 8, !dbg !2029, !tbaa !1313
  %10 = bitcast %"struct.pov::ExprNodeStruct"* %3 to i64*, !dbg !2030
  store i64 %9, i64* %10, align 8, !dbg !2030, !tbaa !1824
  %11 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %3, i64 0, i32 4, !dbg !2031
  store i32 10000, i32* %11, align 4, !dbg !2032, !tbaa !1684
  br label %12, !dbg !2033

; <label>:12                                      ; preds = %2, %5
  %.0 = phi i1 [ true, %5 ], [ false, %2 ]
  ret i1 %.0, !dbg !2034
}

; Function Attrs: optsize ssp uwtable
define zeroext i1 @_ZN3pov8expr_retERPNS_14ExprNodeStructEii(%"struct.pov::ExprNodeStruct"** nocapture readnone dereferenceable(8), i32, i32) #0 {
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"** %0, i64 0, metadata !776, metadata !1291), !dbg !2035
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !777, metadata !1291), !dbg !2036
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !778, metadata !1291), !dbg !2037
  tail call void @_ZN3pov11Unget_TokenEv() #9, !dbg !2038
  ret i1 false, !dbg !2039
}

; Function Attrs: optsize
declare void @_ZN3pov11Unget_TokenEv() #1

; Function Attrs: optsize ssp uwtable
define zeroext i1 @_ZN3pov8expr_errERPNS_14ExprNodeStructEii(%"struct.pov::ExprNodeStruct"** nocapture readnone dereferenceable(8), i32 %stage, i32) #0 {
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"** %0, i64 0, metadata !781, metadata !1291), !dbg !2040
  tail call void @llvm.dbg.value(metadata i32 %stage, i64 0, metadata !782, metadata !1291), !dbg !2041
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !783, metadata !1291), !dbg !2042
  %3 = icmp eq i32 %stage, 35, !dbg !2043
  br i1 %3, label %4, label %.preheader, !dbg !2045

; <label>:4                                       ; preds = %2
  %5 = tail call i32 (i8*, ...)* @_ZN3pov13PossibleErrorEPKcz(i8* getelementptr inbounds ([201 x i8]* @.str4, i64 0, i64 0)) #9, !dbg !2046
  br label %.preheader, !dbg !2046

.preheader:                                       ; preds = %2, %4, %12
  %indvars.iv = phi i64 [ %indvars.iv.next, %12 ], [ 0, %4 ], [ 0, %2 ]
  %6 = getelementptr inbounds [7 x %"struct.pov::ExprParserErrorEntry"]* @_ZN3povL23expr_parser_error_tableE, i64 0, i64 %indvars.iv, i32 0, !dbg !2047
  %7 = load i32* %6, align 16, !dbg !2047, !tbaa !2050
  %8 = icmp eq i32 %7, %stage, !dbg !2052
  br i1 %8, label %9, label %12, !dbg !2055

; <label>:9                                       ; preds = %.preheader
  %10 = getelementptr inbounds [7 x %"struct.pov::ExprParserErrorEntry"]* @_ZN3povL23expr_parser_error_tableE, i64 0, i64 %indvars.iv, i32 1, !dbg !2056
  %11 = load i8** %10, align 8, !dbg !2056, !tbaa !2057
  tail call void @_ZN3pov17Expectation_ErrorEPKc(i8* %11) #9, !dbg !2058
  br label %12, !dbg !2058

; <label>:12                                      ; preds = %.preheader, %9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2059
  %exitcond = icmp eq i64 %indvars.iv.next, 6, !dbg !2059
  br i1 %exitcond, label %.critedge, label %.preheader, !dbg !2059

.critedge:                                        ; preds = %12
  tail call void @_ZN3pov17Expectation_ErrorEPKc(i8* getelementptr inbounds ([26 x i8]* @.str5, i64 0, i64 0)) #9, !dbg !2060
  ret i1 false, !dbg !2061
}

; Function Attrs: optsize
declare i32 @_ZN3pov13PossibleErrorEPKcz(i8*, ...) #1

; Function Attrs: nounwind optsize readonly ssp uwtable
define zeroext i1 @_ZN3pov30left_subtree_has_variable_exprEPNS_14ExprNodeStructE(%"struct.pov::ExprNodeStruct"* readonly %node) #3 {
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %node, i64 0, metadata !810, metadata !1291), !dbg !2062
  %1 = icmp eq %"struct.pov::ExprNodeStruct"* %node, null, !dbg !2063
  br i1 %1, label %.loopexit, label %.lr.ph, !dbg !2065

.lr.ph:                                           ; preds = %0, %11
  %i.01 = phi %"struct.pov::ExprNodeStruct"* [ %13, %11 ], [ %node, %0 ]
  %2 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.01, i64 0, i32 5, !dbg !2066
  %3 = load i32* %2, align 4, !dbg !2066, !tbaa !1306
  %4 = icmp eq i32 %3, 19, !dbg !2070
  br i1 %4, label %.loopexit, label %5, !dbg !2071

; <label>:5                                       ; preds = %.lr.ph
  %6 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.01, i64 0, i32 1, !dbg !2072
  %7 = load %"struct.pov::ExprNodeStruct"** %6, align 8, !dbg !2072, !tbaa !1379
  %8 = icmp eq %"struct.pov::ExprNodeStruct"* %7, null, !dbg !2074
  br i1 %8, label %11, label %9, !dbg !2075

; <label>:9                                       ; preds = %5
  %10 = tail call zeroext i1 @_ZN3pov31right_subtree_has_variable_exprEPNS_14ExprNodeStructE(%"struct.pov::ExprNodeStruct"* %7) #9, !dbg !2076
  br i1 %10, label %.loopexit, label %11, !dbg !2079

; <label>:11                                      ; preds = %5, %9
  %12 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.01, i64 0, i32 2, !dbg !2080
  %13 = load %"struct.pov::ExprNodeStruct"** %12, align 8, !dbg !2080, !tbaa !1395
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %13, i64 0, metadata !811, metadata !1291), !dbg !2081
  %14 = icmp eq %"struct.pov::ExprNodeStruct"* %13, null, !dbg !2082
  br i1 %14, label %.loopexit, label %.lr.ph, !dbg !2083

.loopexit:                                        ; preds = %.lr.ph, %9, %11, %0
  %.0 = phi i1 [ false, %0 ], [ false, %11 ], [ true, %9 ], [ true, %.lr.ph ]
  ret i1 %.0, !dbg !2084
}

; Function Attrs: nounwind readnone
declare double @llvm.pow.f64(double, double) #4

; Function Attrs: optsize ssp uwtable
define void @_ZN3pov13optimise_callEPNS_14ExprNodeStructE(%"struct.pov::ExprNodeStruct"* nocapture %node) #0 {
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %node, i64 0, metadata !798, metadata !1291), !dbg !2085
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !799, metadata !1291), !dbg !2086
  tail call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !800, metadata !1291), !dbg !2087
  %1 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %node, i64 0, i32 5, !dbg !2088
  %2 = load i32* %1, align 4, !dbg !2088, !tbaa !1306
  %3 = icmp eq i32 %2, 22, !dbg !2090
  br i1 %3, label %4, label %143, !dbg !2091

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %node, i64 0, i32 1, !dbg !2092
  %6 = load %"struct.pov::ExprNodeStruct"** %5, align 8, !dbg !2092, !tbaa !1379
  %7 = icmp eq %"struct.pov::ExprNodeStruct"* %6, null, !dbg !2094
  br i1 %7, label %143, label %8, !dbg !2095

; <label>:8                                       ; preds = %4
  %9 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 5, !dbg !2096
  %10 = load i32* %9, align 4, !dbg !2096, !tbaa !1306
  %11 = icmp eq i32 %10, 18, !dbg !2098
  br i1 %11, label %12, label %143, !dbg !2099

; <label>:12                                      ; preds = %8
  %13 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %node, i64 0, i32 6, !dbg !2100
  %14 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %node, i64 0, i32 6, i32 0, i32 1, !dbg !2101
  %15 = load i32* %14, align 4, !dbg !2101, !tbaa !1368
  switch i32 %15, label %143 [
    i32 31, label %16
    i32 6, label %21
    i32 44, label %26
    i32 43, label %31
    i32 42, label %36
    i32 1, label %41
    i32 57, label %46
    i32 56, label %51
    i32 58, label %56
    i32 61, label %61
    i32 60, label %66
    i32 59, label %71
    i32 0, label %76
    i32 29, label %81
    i32 7, label %87
    i32 12, label %93
    i32 21, label %98
    i32 3, label %104
    i32 32, label %109
    i32 9, label %114
    i32 22, label %119
    i32 23, label %128
  ], !dbg !2102

; <label>:16                                      ; preds = %12
  %17 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2103
  %18 = bitcast %union.anon* %17 to double*, !dbg !2103
  %19 = load double* %18, align 8, !dbg !2103, !tbaa !1450
  %20 = tail call double @sin(double %19) #10, !dbg !2105
  tail call void @llvm.dbg.value(metadata double %20, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2106

; <label>:21                                      ; preds = %12
  %22 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2107
  %23 = bitcast %union.anon* %22 to double*, !dbg !2107
  %24 = load double* %23, align 8, !dbg !2107, !tbaa !1450
  %25 = tail call double @cos(double %24) #10, !dbg !2108
  tail call void @llvm.dbg.value(metadata double %25, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2109

; <label>:26                                      ; preds = %12
  %27 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2110
  %28 = bitcast %union.anon* %27 to double*, !dbg !2110
  %29 = load double* %28, align 8, !dbg !2110, !tbaa !1450
  %30 = tail call double @tan(double %29) #10, !dbg !2111
  tail call void @llvm.dbg.value(metadata double %30, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2112

; <label>:31                                      ; preds = %12
  %32 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2113
  %33 = bitcast %union.anon* %32 to double*, !dbg !2113
  %34 = load double* %33, align 8, !dbg !2113, !tbaa !1450
  %35 = tail call double @asin(double %34) #10, !dbg !2114
  tail call void @llvm.dbg.value(metadata double %35, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2115

; <label>:36                                      ; preds = %12
  %37 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2116
  %38 = bitcast %union.anon* %37 to double*, !dbg !2116
  %39 = load double* %38, align 8, !dbg !2116, !tbaa !1450
  %40 = tail call double @acos(double %39) #10, !dbg !2117
  tail call void @llvm.dbg.value(metadata double %40, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2118

; <label>:41                                      ; preds = %12
  %42 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2119
  %43 = bitcast %union.anon* %42 to double*, !dbg !2119
  %44 = load double* %43, align 8, !dbg !2119, !tbaa !1450
  %45 = tail call double @atan(double %44) #10, !dbg !2120
  tail call void @llvm.dbg.value(metadata double %45, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2121

; <label>:46                                      ; preds = %12
  %47 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2122
  %48 = bitcast %union.anon* %47 to double*, !dbg !2122
  %49 = load double* %48, align 8, !dbg !2122, !tbaa !1450
  %50 = tail call double @sinh(double %49) #10, !dbg !2123
  tail call void @llvm.dbg.value(metadata double %50, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2124

; <label>:51                                      ; preds = %12
  %52 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2125
  %53 = bitcast %union.anon* %52 to double*, !dbg !2125
  %54 = load double* %53, align 8, !dbg !2125, !tbaa !1450
  %55 = tail call double @cosh(double %54) #10, !dbg !2126
  tail call void @llvm.dbg.value(metadata double %55, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2127

; <label>:56                                      ; preds = %12
  %57 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2128
  %58 = bitcast %union.anon* %57 to double*, !dbg !2128
  %59 = load double* %58, align 8, !dbg !2128, !tbaa !1450
  %60 = tail call double @tanh(double %59) #10, !dbg !2129
  tail call void @llvm.dbg.value(metadata double %60, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2130

; <label>:61                                      ; preds = %12
  %62 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2131
  %63 = bitcast %union.anon* %62 to double*, !dbg !2131
  %64 = load double* %63, align 8, !dbg !2131, !tbaa !1450
  %65 = tail call double @asinh(double %64) #10, !dbg !2132
  tail call void @llvm.dbg.value(metadata double %65, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2133

; <label>:66                                      ; preds = %12
  %67 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2134
  %68 = bitcast %union.anon* %67 to double*, !dbg !2134
  %69 = load double* %68, align 8, !dbg !2134, !tbaa !1450
  %70 = tail call double @acosh(double %69) #10, !dbg !2135
  tail call void @llvm.dbg.value(metadata double %70, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2136

; <label>:71                                      ; preds = %12
  %72 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2137
  %73 = bitcast %union.anon* %72 to double*, !dbg !2137
  %74 = load double* %73, align 8, !dbg !2137, !tbaa !1450
  %75 = tail call double @atanh(double %74) #10, !dbg !2138
  tail call void @llvm.dbg.value(metadata double %75, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2139

; <label>:76                                      ; preds = %12
  %77 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2140
  %78 = bitcast %union.anon* %77 to double*, !dbg !2140
  %79 = load double* %78, align 8, !dbg !2140, !tbaa !1450
  %80 = tail call double @fabs(double %79) #10, !dbg !2141
  tail call void @llvm.dbg.value(metadata double %80, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2142

; <label>:81                                      ; preds = %12
  %82 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2143
  %83 = bitcast %union.anon* %82 to double*, !dbg !2143
  %84 = load double* %83, align 8, !dbg !2143, !tbaa !1450
  %85 = fmul double %84, 0x400921FB54442D18, !dbg !2144
  %86 = fdiv double %85, 1.800000e+02, !dbg !2145
  tail call void @llvm.dbg.value(metadata double %86, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2146

; <label>:87                                      ; preds = %12
  %88 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2147
  %89 = bitcast %union.anon* %88 to double*, !dbg !2147
  %90 = load double* %89, align 8, !dbg !2147, !tbaa !1450
  %91 = fmul double %90, 1.800000e+02, !dbg !2148
  %92 = fdiv double %91, 0x400921FB54442D18, !dbg !2149
  tail call void @llvm.dbg.value(metadata double %92, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2150

; <label>:93                                      ; preds = %12
  %94 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2151
  %95 = bitcast %union.anon* %94 to double*, !dbg !2151
  %96 = load double* %95, align 8, !dbg !2151, !tbaa !1450
  %97 = tail call double @floor(double %96) #10, !dbg !2152
  tail call void @llvm.dbg.value(metadata double %97, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2153

; <label>:98                                      ; preds = %12
  %99 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2154
  %100 = bitcast %union.anon* %99 to double*, !dbg !2154
  %101 = load double* %100, align 8, !dbg !2154, !tbaa !1450
  %102 = fptosi double %101 to i32, !dbg !2155
  %103 = sitofp i32 %102 to double, !dbg !2156
  tail call void @llvm.dbg.value(metadata double %103, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2157

; <label>:104                                     ; preds = %12
  %105 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2158
  %106 = bitcast %union.anon* %105 to double*, !dbg !2158
  %107 = load double* %106, align 8, !dbg !2158, !tbaa !1450
  %108 = tail call double @ceil(double %107) #10, !dbg !2159
  tail call void @llvm.dbg.value(metadata double %108, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2160

; <label>:109                                     ; preds = %12
  %110 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2161
  %111 = bitcast %union.anon* %110 to double*, !dbg !2161
  %112 = load double* %111, align 8, !dbg !2161, !tbaa !1450
  %113 = tail call double @sqrt(double %112) #10, !dbg !2162
  tail call void @llvm.dbg.value(metadata double %113, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2163

; <label>:114                                     ; preds = %12
  %115 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2164
  %116 = bitcast %union.anon* %115 to double*, !dbg !2164
  %117 = load double* %116, align 8, !dbg !2164, !tbaa !1450
  %118 = tail call double @exp(double %117) #10, !dbg !2165
  tail call void @llvm.dbg.value(metadata double %118, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2166

; <label>:119                                     ; preds = %12
  %120 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2167
  %121 = bitcast %union.anon* %120 to double*, !dbg !2167
  %122 = load double* %121, align 8, !dbg !2167, !tbaa !1450
  %123 = fcmp ogt double %122, 0.000000e+00, !dbg !2169
  br i1 %123, label %124, label %126, !dbg !2170

; <label>:124                                     ; preds = %119
  %125 = tail call double @log(double %122) #10, !dbg !2171
  tail call void @llvm.dbg.value(metadata double %125, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2172

; <label>:126                                     ; preds = %119
  %127 = tail call i32 (i8*, ...)* @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([22 x i8]* @.str6, i64 0, i64 0)) #9, !dbg !2173
  br label %137

; <label>:128                                     ; preds = %12
  %129 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %6, i64 0, i32 6, !dbg !2174
  %130 = bitcast %union.anon* %129 to double*, !dbg !2174
  %131 = load double* %130, align 8, !dbg !2174, !tbaa !1450
  %132 = fcmp ogt double %131, 0.000000e+00, !dbg !2176
  br i1 %132, label %133, label %135, !dbg !2177

; <label>:133                                     ; preds = %128
  %134 = tail call double @log10(double %131) #10, !dbg !2178
  tail call void @llvm.dbg.value(metadata double %134, i64 0, metadata !799, metadata !1291), !dbg !2086
  br label %137, !dbg !2179

; <label>:135                                     ; preds = %128
  %136 = tail call i32 (i8*, ...)* @_ZN3pov5ErrorEPKcz(i8* getelementptr inbounds ([23 x i8]* @.str7, i64 0, i64 0)) #9, !dbg !2180
  br label %137

; <label>:137                                     ; preds = %133, %135, %124, %126, %114, %109, %104, %98, %93, %87, %81, %76, %71, %66, %61, %56, %51, %46, %41, %36, %31, %26, %21, %16
  %result.0.ph = phi double [ %20, %16 ], [ %25, %21 ], [ %30, %26 ], [ %35, %31 ], [ %40, %36 ], [ %45, %41 ], [ %50, %46 ], [ %55, %51 ], [ %60, %56 ], [ %65, %61 ], [ %70, %66 ], [ %75, %71 ], [ %80, %76 ], [ %86, %81 ], [ %92, %87 ], [ %97, %93 ], [ %103, %98 ], [ %108, %104 ], [ %113, %109 ], [ %118, %114 ], [ 0.000000e+00, %126 ], [ %125, %124 ], [ 0.000000e+00, %135 ], [ %134, %133 ]
  %138 = getelementptr inbounds %union.anon* %13, i64 0, i32 0, i32 0, !dbg !2181
  %139 = load i8** %138, align 8, !dbg !2181, !tbaa !1376
  tail call void @_ZN3pov8pov_freeEPvPKci(i8* %139, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 1295) #9, !dbg !2181
  %140 = bitcast %union.anon* %13 to double*, !dbg !2185
  store double %result.0.ph, double* %140, align 8, !dbg !2186, !tbaa !1450
  store i32 18, i32* %1, align 4, !dbg !2187, !tbaa !1306
  %141 = bitcast %"struct.pov::ExprNodeStruct"** %5 to i8**, !dbg !2188
  %142 = load i8** %141, align 8, !dbg !2188, !tbaa !1379
  tail call void @_ZN3pov8pov_freeEPvPKci(i8* %142, i8* getelementptr inbounds ([69 x i8]* @.str, i64 0, i64 0), i32 1298) #9, !dbg !2188
  store %"struct.pov::ExprNodeStruct"* null, %"struct.pov::ExprNodeStruct"** %5, align 8, !dbg !2190, !tbaa !1379
  br label %143, !dbg !2191

; <label>:143                                     ; preds = %12, %8, %0, %4, %137
  ret void, !dbg !2192
}

; Function Attrs: nounwind optsize readnone
declare double @sin(double) #5

; Function Attrs: nounwind optsize readnone
declare double @cos(double) #5

; Function Attrs: nounwind optsize readnone
declare double @tan(double) #5

; Function Attrs: nounwind optsize readnone
declare double @asin(double) #5

; Function Attrs: nounwind optsize readnone
declare double @acos(double) #5

; Function Attrs: nounwind optsize readnone
declare double @atan(double) #5

; Function Attrs: nounwind optsize readnone
declare double @sinh(double) #5

; Function Attrs: nounwind optsize readnone
declare double @cosh(double) #5

; Function Attrs: nounwind optsize readnone
declare double @tanh(double) #5

; Function Attrs: nounwind optsize readnone
declare double @asinh(double) #5

; Function Attrs: nounwind optsize readnone
declare double @acosh(double) #5

; Function Attrs: nounwind optsize readnone
declare double @atanh(double) #5

; Function Attrs: nounwind optsize readnone
declare double @fabs(double) #5

; Function Attrs: nounwind optsize readnone
declare double @floor(double) #5

; Function Attrs: nounwind optsize readnone
declare double @ceil(double) #5

; Function Attrs: nounwind optsize readnone
declare double @sqrt(double) #5

; Function Attrs: nounwind optsize readnone
declare double @exp(double) #5

; Function Attrs: nounwind optsize readnone
declare double @log(double) #5

; Function Attrs: optsize
declare i32 @_ZN3pov5ErrorEPKcz(i8*, ...) #1

; Function Attrs: nounwind optsize readnone
declare double @log10(double) #5

; Function Attrs: nounwind optsize readonly ssp uwtable
define zeroext i1 @_ZN3pov31right_subtree_has_variable_exprEPNS_14ExprNodeStructE(%"struct.pov::ExprNodeStruct"* readonly %node) #3 {
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %node, i64 0, metadata !805, metadata !1291), !dbg !2193
  %1 = icmp eq %"struct.pov::ExprNodeStruct"* %node, null, !dbg !2194
  br i1 %1, label %.loopexit, label %.lr.ph, !dbg !2196

.lr.ph:                                           ; preds = %0, %11
  %i.01 = phi %"struct.pov::ExprNodeStruct"* [ %13, %11 ], [ %node, %0 ]
  %2 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.01, i64 0, i32 5, !dbg !2197
  %3 = load i32* %2, align 4, !dbg !2197, !tbaa !1306
  %4 = icmp eq i32 %3, 19, !dbg !2201
  br i1 %4, label %.loopexit, label %5, !dbg !2202

; <label>:5                                       ; preds = %.lr.ph
  %6 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.01, i64 0, i32 1, !dbg !2203
  %7 = load %"struct.pov::ExprNodeStruct"** %6, align 8, !dbg !2203, !tbaa !1379
  %8 = icmp eq %"struct.pov::ExprNodeStruct"* %7, null, !dbg !2205
  br i1 %8, label %11, label %9, !dbg !2206

; <label>:9                                       ; preds = %5
  %10 = tail call zeroext i1 @_ZN3pov31right_subtree_has_variable_exprEPNS_14ExprNodeStructE(%"struct.pov::ExprNodeStruct"* %7) #9, !dbg !2207
  br i1 %10, label %.loopexit, label %11, !dbg !2210

; <label>:11                                      ; preds = %5, %9
  %12 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.01, i64 0, i32 3, !dbg !2211
  %13 = load %"struct.pov::ExprNodeStruct"** %12, align 8, !dbg !2211, !tbaa !1387
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %13, i64 0, metadata !806, metadata !1291), !dbg !2212
  %14 = icmp eq %"struct.pov::ExprNodeStruct"* %13, null, !dbg !2213
  br i1 %14, label %.loopexit, label %.lr.ph, !dbg !2214

.loopexit:                                        ; preds = %.lr.ph, %9, %11, %0
  %.0 = phi i1 [ false, %0 ], [ false, %11 ], [ true, %9 ], [ true, %.lr.ph ]
  ret i1 %.0, !dbg !2215
}

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN3pov9dump_exprEP7__sFILEPNS_14ExprNodeStructE(%struct.__sFILE* %f, %"struct.pov::ExprNodeStruct"* readonly %node) #6 {
  tail call void @llvm.dbg.value(metadata %struct.__sFILE* %f, i64 0, metadata !819, metadata !1291), !dbg !2216
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %node, i64 0, metadata !820, metadata !1291), !dbg !2217
  %1 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %node, i64 0, i32 5, !dbg !2218
  %2 = load i32* %1, align 4, !dbg !2218, !tbaa !1306
  %3 = icmp eq i32 %2, 17, !dbg !2220
  br i1 %3, label %4, label %5, !dbg !2221

; <label>:4                                       ; preds = %0
  %fputc13 = tail call i32 @fputc(i32 91, %struct.__sFILE* %f), !dbg !2222
  br label %.lr.ph, !dbg !2222

; <label>:5                                       ; preds = %0
  %fputc = tail call i32 @fputc(i32 40, %struct.__sFILE* %f), !dbg !2223
  br label %.lr.ph

.lr.ph:                                           ; preds = %4, %5
  %6 = tail call i32 @fflush(%struct.__sFILE* %f) #9, !dbg !2224
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %node, i64 0, metadata !821, metadata !1291), !dbg !2225
  br label %7, !dbg !2226

; <label>:7                                       ; preds = %.lr.ph, %64
  %i.014 = phi %"struct.pov::ExprNodeStruct"* [ %node, %.lr.ph ], [ %66, %64 ]
  %8 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.014, i64 0, i32 5, !dbg !2227
  %9 = load i32* %8, align 4, !dbg !2227, !tbaa !1306
  switch i32 %9, label %58 [
    i32 18, label %10
    i32 19, label %17
    i32 20, label %20
    i32 21, label %21
    i32 22, label %24
    i32 1, label %28
    i32 2, label %30
    i32 3, label %32
    i32 4, label %34
    i32 5, label %36
    i32 6, label %38
    i32 7, label %40
    i32 8, label %42
    i32 9, label %44
    i32 10, label %46
    i32 11, label %48
    i32 12, label %50
    i32 13, label %52
    i32 14, label %54
    i32 15, label %56
  ], !dbg !2230

; <label>:10                                      ; preds = %7
  %11 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.014, i64 0, i32 6, !dbg !2231
  %12 = bitcast %union.anon* %11 to double*, !dbg !2231
  %13 = load double* %12, align 8, !dbg !2231, !tbaa !1450
  %14 = fptrunc double %13 to float, !dbg !2233
  %15 = fpext float %14 to double, !dbg !2234
  %16 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %f, i8* getelementptr inbounds ([3 x i8]* @.str9, i64 0, i64 0), double %15) #9, !dbg !2235
  br label %58, !dbg !2236

; <label>:17                                      ; preds = %7
  %18 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.014, i64 0, i32 6, i32 0, i32 0, !dbg !2237
  %19 = load i8** %18, align 8, !dbg !2237, !tbaa !1313
  %fputs1 = tail call i32 @fputs(i8* %19, %struct.__sFILE* %f), !dbg !2238
  br label %58, !dbg !2239

; <label>:20                                      ; preds = %7
  %fputc4 = tail call i32 @fputc(i32 46, %struct.__sFILE* %f), !dbg !2240
  br label %58, !dbg !2241

; <label>:21                                      ; preds = %7
  %22 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.014, i64 0, i32 6, i32 0, i32 0, !dbg !2242
  %23 = load i8** %22, align 8, !dbg !2242, !tbaa !1313
  %fputs = tail call i32 @fputs(i8* %23, %struct.__sFILE* %f), !dbg !2243
  br label %58, !dbg !2244

; <label>:24                                      ; preds = %7
  %25 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.014, i64 0, i32 6, i32 0, i32 2, !dbg !2245
  %26 = load i32* %25, align 4, !dbg !2245, !tbaa !1716
  %27 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %f, i8* getelementptr inbounds ([5 x i8]* @.str12, i64 0, i64 0), i32 %26) #9, !dbg !2246
  br label %58, !dbg !2247

; <label>:28                                      ; preds = %7
  %29 = tail call i64 @fwrite(i8* getelementptr inbounds ([5 x i8]* @.str13, i64 0, i64 0), i64 4, i64 1, %struct.__sFILE* %f), !dbg !2248
  br label %58, !dbg !2249

; <label>:30                                      ; preds = %7
  %31 = tail call i64 @fwrite(i8* getelementptr inbounds ([5 x i8]* @.str14, i64 0, i64 0), i64 4, i64 1, %struct.__sFILE* %f), !dbg !2250
  br label %58, !dbg !2251

; <label>:32                                      ; preds = %7
  %33 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str15, i64 0, i64 0), i64 3, i64 1, %struct.__sFILE* %f), !dbg !2252
  br label %58, !dbg !2253

; <label>:34                                      ; preds = %7
  %35 = tail call i64 @fwrite(i8* getelementptr inbounds ([5 x i8]* @.str16, i64 0, i64 0), i64 4, i64 1, %struct.__sFILE* %f), !dbg !2254
  br label %58, !dbg !2255

; <label>:36                                      ; preds = %7
  %37 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str17, i64 0, i64 0), i64 3, i64 1, %struct.__sFILE* %f), !dbg !2256
  br label %58, !dbg !2257

; <label>:38                                      ; preds = %7
  %39 = tail call i64 @fwrite(i8* getelementptr inbounds ([5 x i8]* @.str18, i64 0, i64 0), i64 4, i64 1, %struct.__sFILE* %f), !dbg !2258
  br label %58, !dbg !2259

; <label>:40                                      ; preds = %7
  %41 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str19, i64 0, i64 0), i64 3, i64 1, %struct.__sFILE* %f), !dbg !2260
  br label %58, !dbg !2261

; <label>:42                                      ; preds = %7
  %43 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str20, i64 0, i64 0), i64 3, i64 1, %struct.__sFILE* %f), !dbg !2262
  br label %58, !dbg !2263

; <label>:44                                      ; preds = %7
  %45 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str21, i64 0, i64 0), i64 3, i64 1, %struct.__sFILE* %f), !dbg !2264
  br label %58, !dbg !2265

; <label>:46                                      ; preds = %7
  %47 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str22, i64 0, i64 0), i64 3, i64 1, %struct.__sFILE* %f), !dbg !2266
  br label %58, !dbg !2267

; <label>:48                                      ; preds = %7
  %49 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str23, i64 0, i64 0), i64 3, i64 1, %struct.__sFILE* %f), !dbg !2268
  br label %58, !dbg !2269

; <label>:50                                      ; preds = %7
  %51 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str24, i64 0, i64 0), i64 3, i64 1, %struct.__sFILE* %f), !dbg !2270
  br label %58, !dbg !2271

; <label>:52                                      ; preds = %7
  %53 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str25, i64 0, i64 0), i64 3, i64 1, %struct.__sFILE* %f), !dbg !2272
  br label %58, !dbg !2273

; <label>:54                                      ; preds = %7
  %55 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str26, i64 0, i64 0), i64 2, i64 1, %struct.__sFILE* %f), !dbg !2274
  br label %58, !dbg !2275

; <label>:56                                      ; preds = %7
  %57 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str27, i64 0, i64 0), i64 2, i64 1, %struct.__sFILE* %f), !dbg !2276
  br label %58, !dbg !2277

; <label>:58                                      ; preds = %7, %56, %54, %52, %50, %48, %46, %44, %42, %40, %38, %36, %34, %32, %30, %28, %24, %21, %20, %17, %10
  %59 = tail call i32 @fflush(%struct.__sFILE* %f) #9, !dbg !2278
  %60 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.014, i64 0, i32 1, !dbg !2279
  %61 = load %"struct.pov::ExprNodeStruct"** %60, align 8, !dbg !2279, !tbaa !1379
  %62 = icmp eq %"struct.pov::ExprNodeStruct"* %61, null, !dbg !2281
  br i1 %62, label %64, label %63, !dbg !2282

; <label>:63                                      ; preds = %58
  tail call void @_ZN3pov9dump_exprEP7__sFILEPNS_14ExprNodeStructE(%struct.__sFILE* %f, %"struct.pov::ExprNodeStruct"* %61) #9, !dbg !2283
  br label %64, !dbg !2283

; <label>:64                                      ; preds = %58, %63
  %65 = getelementptr inbounds %"struct.pov::ExprNodeStruct"* %i.014, i64 0, i32 3, !dbg !2284
  %66 = load %"struct.pov::ExprNodeStruct"** %65, align 8, !dbg !2284, !tbaa !1387
  tail call void @llvm.dbg.value(metadata %"struct.pov::ExprNodeStruct"* %66, i64 0, metadata !821, metadata !1291), !dbg !2225
  %67 = icmp eq %"struct.pov::ExprNodeStruct"* %66, null, !dbg !2285
  br i1 %67, label %._crit_edge, label %7, !dbg !2226

._crit_edge:                                      ; preds = %64
  %68 = load i32* %1, align 4, !dbg !2286, !tbaa !1306
  %69 = icmp eq i32 %68, 17, !dbg !2288
  br i1 %69, label %70, label %71, !dbg !2289

; <label>:70                                      ; preds = %._crit_edge
  %fputc10 = tail call i32 @fputc(i32 93, %struct.__sFILE* %f), !dbg !2290
  br label %72, !dbg !2290

; <label>:71                                      ; preds = %._crit_edge
  %fputc7 = tail call i32 @fputc(i32 41, %struct.__sFILE* %f), !dbg !2291
  br label %72

; <label>:72                                      ; preds = %71, %70
  %73 = tail call i32 @fflush(%struct.__sFILE* %f) #9, !dbg !2292
  ret void, !dbg !2293
}

; Function Attrs: nounwind optsize
declare i32 @fprintf(%struct.__sFILE* nocapture, i8* nocapture readonly, ...) #7

; Function Attrs: nounwind optsize
declare i32 @fflush(%struct.__sFILE* nocapture) #7

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #4

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct.__sFILE* nocapture) #8

; Function Attrs: nounwind
declare i32 @fputs(i8* nocapture readonly, %struct.__sFILE* nocapture) #8

; Function Attrs: nounwind
declare i32 @fputc(i32, %struct.__sFILE* nocapture) #8

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #8

attributes #0 = { optsize ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { optsize "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind optsize readnone ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind optsize readonly ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone }
attributes #5 = { nounwind optsize readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind optsize ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind optsize "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "target-features"="+ssse3,+cx16,+sse,+sse2,+sse3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { optsize }
attributes #10 = { nounwind optsize readnone }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1287, !1288, !1289}
!llvm.ident = !{!1290}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1, producer: "Apple LLVM version 7.0.0 (clang-700.1.76)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !571, subprograms: !703, globals: !823, imports: !838)
!1 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/453.povray/src/fnsyntax.cpp", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!2 = !{!3, !32}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !5, file: !4, line: 41, size: 32, align: 32, elements: !7)
!4 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/453.povray/src/fnsyntax.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!5 = !DINamespace(name: "pov", scope: null, file: !6, line: 36)
!6 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/453.povray/src/pov_mem.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!7 = !{!8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31}
!8 = !DIEnumerator(name: "OP_NONE", value: 0)
!9 = !DIEnumerator(name: "OP_CMP_EQ", value: 1)
!10 = !DIEnumerator(name: "OP_CMP_NE", value: 2)
!11 = !DIEnumerator(name: "OP_CMP_LT", value: 3)
!12 = !DIEnumerator(name: "OP_CMP_LE", value: 4)
!13 = !DIEnumerator(name: "OP_CMP_GT", value: 5)
!14 = !DIEnumerator(name: "OP_CMP_GE", value: 6)
!15 = !DIEnumerator(name: "OP_ADD", value: 7)
!16 = !DIEnumerator(name: "OP_SUB", value: 8)
!17 = !DIEnumerator(name: "OP_OR", value: 9)
!18 = !DIEnumerator(name: "OP_MUL", value: 10)
!19 = !DIEnumerator(name: "OP_DIV", value: 11)
!20 = !DIEnumerator(name: "OP_AND", value: 12)
!21 = !DIEnumerator(name: "OP_POW", value: 13)
!22 = !DIEnumerator(name: "OP_NEG", value: 14)
!23 = !DIEnumerator(name: "OP_NOT", value: 15)
!24 = !DIEnumerator(name: "OP_LEFTMOST", value: 16)
!25 = !DIEnumerator(name: "OP_FIRST", value: 17)
!26 = !DIEnumerator(name: "OP_CONSTANT", value: 18)
!27 = !DIEnumerator(name: "OP_VARIABLE", value: 19)
!28 = !DIEnumerator(name: "OP_DOT", value: 20)
!29 = !DIEnumerator(name: "OP_MEMBER", value: 21)
!30 = !DIEnumerator(name: "OP_CALL", value: 22)
!31 = !DIEnumerator(name: "OP_TRAP", value: 23)
!32 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "TOKEN_IDS", scope: !5, file: !33, line: 90, size: 32, align: 32, elements: !34, identifier: "_ZTSN3pov9TOKEN_IDSE")
!33 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/453.povray/src/parse.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!34 = !{!35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570}
!35 = !DIEnumerator(name: "ABS_TOKEN", value: 0)
!36 = !DIEnumerator(name: "ATAN_TOKEN", value: 1)
!37 = !DIEnumerator(name: "ATAN2_TOKEN", value: 2)
!38 = !DIEnumerator(name: "CEIL_TOKEN", value: 3)
!39 = !DIEnumerator(name: "CLOCK_ON_TOKEN", value: 4)
!40 = !DIEnumerator(name: "CLOCK_TOKEN", value: 5)
!41 = !DIEnumerator(name: "COS_TOKEN", value: 6)
!42 = !DIEnumerator(name: "DEGREES_TOKEN", value: 7)
!43 = !DIEnumerator(name: "DIV_TOKEN", value: 8)
!44 = !DIEnumerator(name: "EXP_TOKEN", value: 9)
!45 = !DIEnumerator(name: "FLOAT_ID_TOKEN", value: 10)
!46 = !DIEnumerator(name: "FLOAT_TOKEN", value: 11)
!47 = !DIEnumerator(name: "FLOOR_TOKEN", value: 12)
!48 = !DIEnumerator(name: "FINALCLOCK_TOKEN", value: 13)
!49 = !DIEnumerator(name: "FINALFRAME_TOKEN", value: 14)
!50 = !DIEnumerator(name: "FRAMENUMBER_TOKEN", value: 15)
!51 = !DIEnumerator(name: "IMAGE_WIDTH_TOKEN", value: 16)
!52 = !DIEnumerator(name: "IMAGE_HEIGHT_TOKEN", value: 17)
!53 = !DIEnumerator(name: "INITIALFRAME_TOKEN", value: 18)
!54 = !DIEnumerator(name: "INITIALCLOCK_TOKEN", value: 19)
!55 = !DIEnumerator(name: "INSIDE_TOKEN", value: 20)
!56 = !DIEnumerator(name: "INT_TOKEN", value: 21)
!57 = !DIEnumerator(name: "LN_TOKEN", value: 22)
!58 = !DIEnumerator(name: "LOG_TOKEN", value: 23)
!59 = !DIEnumerator(name: "MAX_TOKEN", value: 24)
!60 = !DIEnumerator(name: "MIN_TOKEN", value: 25)
!61 = !DIEnumerator(name: "MOD_TOKEN", value: 26)
!62 = !DIEnumerator(name: "PI_TOKEN", value: 27)
!63 = !DIEnumerator(name: "POW_TOKEN", value: 28)
!64 = !DIEnumerator(name: "RADIANS_TOKEN", value: 29)
!65 = !DIEnumerator(name: "SELECT_TOKEN", value: 30)
!66 = !DIEnumerator(name: "SIN_TOKEN", value: 31)
!67 = !DIEnumerator(name: "SQRT_TOKEN", value: 32)
!68 = !DIEnumerator(name: "VDOT_TOKEN", value: 33)
!69 = !DIEnumerator(name: "VLENGTH_TOKEN", value: 34)
!70 = !DIEnumerator(name: "VERSION_TOKEN", value: 35)
!71 = !DIEnumerator(name: "ON_TOKEN", value: 36)
!72 = !DIEnumerator(name: "OFF_TOKEN", value: 37)
!73 = !DIEnumerator(name: "TRUE_TOKEN", value: 38)
!74 = !DIEnumerator(name: "FALSE_TOKEN", value: 39)
!75 = !DIEnumerator(name: "YES_TOKEN", value: 40)
!76 = !DIEnumerator(name: "NO_TOKEN", value: 41)
!77 = !DIEnumerator(name: "ACOS_TOKEN", value: 42)
!78 = !DIEnumerator(name: "ASIN_TOKEN", value: 43)
!79 = !DIEnumerator(name: "TAN_TOKEN", value: 44)
!80 = !DIEnumerator(name: "ASC_TOKEN", value: 45)
!81 = !DIEnumerator(name: "STRLEN_TOKEN", value: 46)
!82 = !DIEnumerator(name: "VAL_TOKEN", value: 47)
!83 = !DIEnumerator(name: "FILE_EXISTS_TOKEN", value: 48)
!84 = !DIEnumerator(name: "STRCMP_TOKEN", value: 49)
!85 = !DIEnumerator(name: "SEED_TOKEN", value: 50)
!86 = !DIEnumerator(name: "RAND_TOKEN", value: 51)
!87 = !DIEnumerator(name: "CLOCK_DELTA_TOKEN", value: 52)
!88 = !DIEnumerator(name: "DIMENSIONS_TOKEN", value: 53)
!89 = !DIEnumerator(name: "DIMENSION_SIZE_TOKEN", value: 54)
!90 = !DIEnumerator(name: "DEFINED_TOKEN", value: 55)
!91 = !DIEnumerator(name: "COSH_TOKEN", value: 56)
!92 = !DIEnumerator(name: "SINH_TOKEN", value: 57)
!93 = !DIEnumerator(name: "TANH_TOKEN", value: 58)
!94 = !DIEnumerator(name: "ATANH_TOKEN", value: 59)
!95 = !DIEnumerator(name: "ACOSH_TOKEN", value: 60)
!96 = !DIEnumerator(name: "ASINH_TOKEN", value: 61)
!97 = !DIEnumerator(name: "SUM_TOKEN", value: 62)
!98 = !DIEnumerator(name: "PROD_TOKEN", value: 63)
!99 = !DIEnumerator(name: "FLOAT_FUNCT_TOKEN", value: 64)
!100 = !DIEnumerator(name: "VAXIS_ROTATE_TOKEN", value: 65)
!101 = !DIEnumerator(name: "VCROSS_TOKEN", value: 66)
!102 = !DIEnumerator(name: "VECTOR_ID_TOKEN", value: 67)
!103 = !DIEnumerator(name: "VNORMALIZE_TOKEN", value: 68)
!104 = !DIEnumerator(name: "VROTATE_TOKEN", value: 69)
!105 = !DIEnumerator(name: "VTURBULENCE_TOKEN", value: 70)
!106 = !DIEnumerator(name: "X_TOKEN", value: 71)
!107 = !DIEnumerator(name: "Y_TOKEN", value: 72)
!108 = !DIEnumerator(name: "Z_TOKEN", value: 73)
!109 = !DIEnumerator(name: "TRACE_TOKEN", value: 74)
!110 = !DIEnumerator(name: "MIN_EXTENT_TOKEN", value: 75)
!111 = !DIEnumerator(name: "MAX_EXTENT_TOKEN", value: 76)
!112 = !DIEnumerator(name: "VECTOR_FUNCT_TOKEN", value: 77)
!113 = !DIEnumerator(name: "ALPHA_TOKEN", value: 78)
!114 = !DIEnumerator(name: "BLUE_TOKEN", value: 79)
!115 = !DIEnumerator(name: "FILTER_TOKEN", value: 80)
!116 = !DIEnumerator(name: "TRANSMIT_TOKEN", value: 81)
!117 = !DIEnumerator(name: "GRAY_TOKEN", value: 82)
!118 = !DIEnumerator(name: "GREEN_TOKEN", value: 83)
!119 = !DIEnumerator(name: "RED_TOKEN", value: 84)
!120 = !DIEnumerator(name: "RGBF_TOKEN", value: 85)
!121 = !DIEnumerator(name: "RGBFT_TOKEN", value: 86)
!122 = !DIEnumerator(name: "RGBT_TOKEN", value: 87)
!123 = !DIEnumerator(name: "RGB_TOKEN", value: 88)
!124 = !DIEnumerator(name: "COLOUR_KEY_TOKEN", value: 89)
!125 = !DIEnumerator(name: "COLOR_TOKEN", value: 90)
!126 = !DIEnumerator(name: "COLOUR_TOKEN", value: 91)
!127 = !DIEnumerator(name: "COLOUR_ID_TOKEN", value: 92)
!128 = !DIEnumerator(name: "CHARSET_TOKEN", value: 93)
!129 = !DIEnumerator(name: "ASCII_TOKEN", value: 94)
!130 = !DIEnumerator(name: "UTF8_TOKEN", value: 95)
!131 = !DIEnumerator(name: "ADAPTIVE_TOKEN", value: 96)
!132 = !DIEnumerator(name: "AGATE_TOKEN", value: 97)
!133 = !DIEnumerator(name: "ALL_TOKEN", value: 98)
!134 = !DIEnumerator(name: "ALTITUDE_TOKEN", value: 99)
!135 = !DIEnumerator(name: "AMBIENT_TOKEN", value: 100)
!136 = !DIEnumerator(name: "AMPERSAND_TOKEN", value: 101)
!137 = !DIEnumerator(name: "AREA_LIGHT_TOKEN", value: 102)
!138 = !DIEnumerator(name: "AT_TOKEN", value: 103)
!139 = !DIEnumerator(name: "BACK_QUOTE_TOKEN", value: 104)
!140 = !DIEnumerator(name: "BACK_SLASH_TOKEN", value: 105)
!141 = !DIEnumerator(name: "BAR_TOKEN", value: 106)
!142 = !DIEnumerator(name: "BICUBIC_PATCH_TOKEN", value: 107)
!143 = !DIEnumerator(name: "BLOB_TOKEN", value: 108)
!144 = !DIEnumerator(name: "BOUNDED_BY_TOKEN", value: 109)
!145 = !DIEnumerator(name: "BOX_TOKEN", value: 110)
!146 = !DIEnumerator(name: "BOZO_TOKEN", value: 111)
!147 = !DIEnumerator(name: "BRICK_TOKEN", value: 112)
!148 = !DIEnumerator(name: "BRILLIANCE_TOKEN", value: 113)
!149 = !DIEnumerator(name: "BUMPS_TOKEN", value: 114)
!150 = !DIEnumerator(name: "BUMP_MAP_TOKEN", value: 115)
!151 = !DIEnumerator(name: "BUMP_SIZE_TOKEN", value: 116)
!152 = !DIEnumerator(name: "CAMERA_ID_TOKEN", value: 117)
!153 = !DIEnumerator(name: "CAMERA_TOKEN", value: 118)
!154 = !DIEnumerator(name: "CELLS_TOKEN", value: 119)
!155 = !DIEnumerator(name: "CHECKER_TOKEN", value: 120)
!156 = !DIEnumerator(name: "CLIPPED_BY_TOKEN", value: 121)
!157 = !DIEnumerator(name: "COLON_TOKEN", value: 122)
!158 = !DIEnumerator(name: "COLOR_MAP_TOKEN", value: 123)
!159 = !DIEnumerator(name: "COLOUR_MAP_ID_TOKEN", value: 124)
!160 = !DIEnumerator(name: "COLOUR_MAP_TOKEN", value: 125)
!161 = !DIEnumerator(name: "COMMA_TOKEN", value: 126)
!162 = !DIEnumerator(name: "COMPONENT_TOKEN", value: 127)
!163 = !DIEnumerator(name: "COMPOSITE_TOKEN", value: 128)
!164 = !DIEnumerator(name: "CONE_TOKEN", value: 129)
!165 = !DIEnumerator(name: "CRAND_TOKEN", value: 130)
!166 = !DIEnumerator(name: "CUBIC_TOKEN", value: 131)
!167 = !DIEnumerator(name: "CYLINDER_TOKEN", value: 132)
!168 = !DIEnumerator(name: "DASH_TOKEN", value: 133)
!169 = !DIEnumerator(name: "DECLARE_TOKEN", value: 134)
!170 = !DIEnumerator(name: "DEFAULT_TOKEN", value: 135)
!171 = !DIEnumerator(name: "DENTS_TOKEN", value: 136)
!172 = !DIEnumerator(name: "DIFFERENCE_TOKEN", value: 137)
!173 = !DIEnumerator(name: "DIFFUSE_TOKEN", value: 138)
!174 = !DIEnumerator(name: "DIRECTION_TOKEN", value: 139)
!175 = !DIEnumerator(name: "DISC_TOKEN", value: 140)
!176 = !DIEnumerator(name: "DISTANCE_TOKEN", value: 141)
!177 = !DIEnumerator(name: "DOLLAR_TOKEN", value: 142)
!178 = !DIEnumerator(name: "END_OF_FILE_TOKEN", value: 143)
!179 = !DIEnumerator(name: "EQUALS_TOKEN", value: 144)
!180 = !DIEnumerator(name: "EXCLAMATION_TOKEN", value: 145)
!181 = !DIEnumerator(name: "EXPONENT_TOKEN", value: 146)
!182 = !DIEnumerator(name: "FALLOFF_TOKEN", value: 147)
!183 = !DIEnumerator(name: "FINISH_ID_TOKEN", value: 148)
!184 = !DIEnumerator(name: "FINISH_TOKEN", value: 149)
!185 = !DIEnumerator(name: "FLATNESS_TOKEN", value: 150)
!186 = !DIEnumerator(name: "FOG_TOKEN", value: 151)
!187 = !DIEnumerator(name: "FREQUENCY_TOKEN", value: 152)
!188 = !DIEnumerator(name: "FRESNEL_TOKEN", value: 153)
!189 = !DIEnumerator(name: "GIF_TOKEN", value: 154)
!190 = !DIEnumerator(name: "GRADIENT_TOKEN", value: 155)
!191 = !DIEnumerator(name: "GRANITE_TOKEN", value: 156)
!192 = !DIEnumerator(name: "HASH_TOKEN", value: 157)
!193 = !DIEnumerator(name: "HAT_TOKEN", value: 158)
!194 = !DIEnumerator(name: "HEIGHT_FIELD_TOKEN", value: 159)
!195 = !DIEnumerator(name: "HEXAGON_TOKEN", value: 160)
!196 = !DIEnumerator(name: "IDENTIFIER_TOKEN", value: 161)
!197 = !DIEnumerator(name: "IFF_TOKEN", value: 162)
!198 = !DIEnumerator(name: "IMAGE_MAP_TOKEN", value: 163)
!199 = !DIEnumerator(name: "INCLUDE_TOKEN", value: 164)
!200 = !DIEnumerator(name: "INTERPOLATE_TOKEN", value: 165)
!201 = !DIEnumerator(name: "INTERSECTION_TOKEN", value: 166)
!202 = !DIEnumerator(name: "INVERSE_TOKEN", value: 167)
!203 = !DIEnumerator(name: "IOR_TOKEN", value: 168)
!204 = !DIEnumerator(name: "JITTER_TOKEN", value: 169)
!205 = !DIEnumerator(name: "LAMBDA_TOKEN", value: 170)
!206 = !DIEnumerator(name: "LEFT_ANGLE_TOKEN", value: 171)
!207 = !DIEnumerator(name: "LEFT_CURLY_TOKEN", value: 172)
!208 = !DIEnumerator(name: "LEFT_PAREN_TOKEN", value: 173)
!209 = !DIEnumerator(name: "LEFT_SQUARE_TOKEN", value: 174)
!210 = !DIEnumerator(name: "LEOPARD_TOKEN", value: 175)
!211 = !DIEnumerator(name: "LIGHT_SOURCE_TOKEN", value: 176)
!212 = !DIEnumerator(name: "LOCATION_TOKEN", value: 177)
!213 = !DIEnumerator(name: "LOOKS_LIKE_TOKEN", value: 178)
!214 = !DIEnumerator(name: "LOOK_AT_TOKEN", value: 179)
!215 = !DIEnumerator(name: "MANDEL_TOKEN", value: 180)
!216 = !DIEnumerator(name: "MAP_TYPE_TOKEN", value: 181)
!217 = !DIEnumerator(name: "MARBLE_TOKEN", value: 182)
!218 = !DIEnumerator(name: "MATERIAL_MAP_TOKEN", value: 183)
!219 = !DIEnumerator(name: "MAX_INTERSECTIONS", value: 184)
!220 = !DIEnumerator(name: "MAX_TRACE_LEVEL_TOKEN", value: 185)
!221 = !DIEnumerator(name: "MERGE_TOKEN", value: 186)
!222 = !DIEnumerator(name: "METALLIC_TOKEN", value: 187)
!223 = !DIEnumerator(name: "MORTAR_TOKEN", value: 188)
!224 = !DIEnumerator(name: "NO_SHADOW_TOKEN", value: 189)
!225 = !DIEnumerator(name: "OBJECT_ID_TOKEN", value: 190)
!226 = !DIEnumerator(name: "OBJECT_TOKEN", value: 191)
!227 = !DIEnumerator(name: "OCTAVES_TOKEN", value: 192)
!228 = !DIEnumerator(name: "OMEGA_TOKEN", value: 193)
!229 = !DIEnumerator(name: "ONCE_TOKEN", value: 194)
!230 = !DIEnumerator(name: "ONION_TOKEN", value: 195)
!231 = !DIEnumerator(name: "PERCENT_TOKEN", value: 196)
!232 = !DIEnumerator(name: "PHASE_TOKEN", value: 197)
!233 = !DIEnumerator(name: "PHONG_SIZE_TOKEN", value: 198)
!234 = !DIEnumerator(name: "PHONG_TOKEN", value: 199)
!235 = !DIEnumerator(name: "PIGMENT_ID_TOKEN", value: 200)
!236 = !DIEnumerator(name: "PIGMENT_TOKEN", value: 201)
!237 = !DIEnumerator(name: "PLANE_TOKEN", value: 202)
!238 = !DIEnumerator(name: "PLUS_TOKEN", value: 203)
!239 = !DIEnumerator(name: "POINT_AT_TOKEN", value: 204)
!240 = !DIEnumerator(name: "POLY_TOKEN", value: 205)
!241 = !DIEnumerator(name: "POT_TOKEN", value: 206)
!242 = !DIEnumerator(name: "QUADRIC_TOKEN", value: 207)
!243 = !DIEnumerator(name: "QUARTIC_TOKEN", value: 208)
!244 = !DIEnumerator(name: "QUESTION_TOKEN", value: 209)
!245 = !DIEnumerator(name: "QUICK_COLOR_TOKEN", value: 210)
!246 = !DIEnumerator(name: "QUICK_COLOUR_TOKEN", value: 211)
!247 = !DIEnumerator(name: "RADIAL_TOKEN", value: 212)
!248 = !DIEnumerator(name: "RADIUS_TOKEN", value: 213)
!249 = !DIEnumerator(name: "BRICK_SIZE_TOKEN", value: 214)
!250 = !DIEnumerator(name: "REFLECTION_TOKEN", value: 215)
!251 = !DIEnumerator(name: "REFRACTION_TOKEN", value: 216)
!252 = !DIEnumerator(name: "RIGHT_ANGLE_TOKEN", value: 217)
!253 = !DIEnumerator(name: "RIGHT_CURLY_TOKEN", value: 218)
!254 = !DIEnumerator(name: "RIGHT_PAREN_TOKEN", value: 219)
!255 = !DIEnumerator(name: "RIGHT_SQUARE_TOKEN", value: 220)
!256 = !DIEnumerator(name: "RIGHT_TOKEN", value: 221)
!257 = !DIEnumerator(name: "RIPPLES_TOKEN", value: 222)
!258 = !DIEnumerator(name: "ROTATE_TOKEN", value: 223)
!259 = !DIEnumerator(name: "ROUGHNESS_TOKEN", value: 224)
!260 = !DIEnumerator(name: "SCALE_TOKEN", value: 225)
!261 = !DIEnumerator(name: "SEMI_COLON_TOKEN", value: 226)
!262 = !DIEnumerator(name: "SINGLE_QUOTE_TOKEN", value: 227)
!263 = !DIEnumerator(name: "SKY_TOKEN", value: 228)
!264 = !DIEnumerator(name: "SLASH_TOKEN", value: 229)
!265 = !DIEnumerator(name: "SMOOTH_TOKEN", value: 230)
!266 = !DIEnumerator(name: "SMOOTH_TRIANGLE_TOKEN", value: 231)
!267 = !DIEnumerator(name: "SPECULAR_TOKEN", value: 232)
!268 = !DIEnumerator(name: "SPHERE_TOKEN", value: 233)
!269 = !DIEnumerator(name: "SPOTLIGHT_TOKEN", value: 234)
!270 = !DIEnumerator(name: "SPOTTED_TOKEN", value: 235)
!271 = !DIEnumerator(name: "STAR_TOKEN", value: 236)
!272 = !DIEnumerator(name: "STRING_LITERAL_TOKEN", value: 237)
!273 = !DIEnumerator(name: "STURM_TOKEN", value: 238)
!274 = !DIEnumerator(name: "TEXTURE_ID_TOKEN", value: 239)
!275 = !DIEnumerator(name: "TEXTURE_TOKEN", value: 240)
!276 = !DIEnumerator(name: "INTERIOR_TEXTURE_TOKEN", value: 241)
!277 = !DIEnumerator(name: "TGA_TOKEN", value: 242)
!278 = !DIEnumerator(name: "THRESHOLD_TOKEN", value: 243)
!279 = !DIEnumerator(name: "TIFF_TOKEN", value: 244)
!280 = !DIEnumerator(name: "TIGHTNESS_TOKEN", value: 245)
!281 = !DIEnumerator(name: "TILDE_TOKEN", value: 246)
!282 = !DIEnumerator(name: "TILE2_TOKEN", value: 247)
!283 = !DIEnumerator(name: "TILES_TOKEN", value: 248)
!284 = !DIEnumerator(name: "TNORMAL_ID_TOKEN", value: 249)
!285 = !DIEnumerator(name: "TNORMAL_TOKEN", value: 250)
!286 = !DIEnumerator(name: "TORUS_TOKEN", value: 251)
!287 = !DIEnumerator(name: "TRANSFORM_ID_TOKEN", value: 252)
!288 = !DIEnumerator(name: "TRANSFORM_TOKEN", value: 253)
!289 = !DIEnumerator(name: "TRANSLATE_TOKEN", value: 254)
!290 = !DIEnumerator(name: "TRIANGLE_TOKEN", value: 255)
!291 = !DIEnumerator(name: "TURBULENCE_TOKEN", value: 256)
!292 = !DIEnumerator(name: "TYPE_TOKEN", value: 257)
!293 = !DIEnumerator(name: "UNION_TOKEN", value: 258)
!294 = !DIEnumerator(name: "UP_TOKEN", value: 259)
!295 = !DIEnumerator(name: "USE_COLOR_TOKEN", value: 260)
!296 = !DIEnumerator(name: "USE_COLOUR_TOKEN", value: 261)
!297 = !DIEnumerator(name: "USE_INDEX_TOKEN", value: 262)
!298 = !DIEnumerator(name: "U_STEPS_TOKEN", value: 263)
!299 = !DIEnumerator(name: "V_STEPS_TOKEN", value: 264)
!300 = !DIEnumerator(name: "WATER_LEVEL_TOKEN", value: 265)
!301 = !DIEnumerator(name: "WAVES_TOKEN", value: 266)
!302 = !DIEnumerator(name: "WOOD_TOKEN", value: 267)
!303 = !DIEnumerator(name: "WRINKLES_TOKEN", value: 268)
!304 = !DIEnumerator(name: "BACKGROUND_TOKEN", value: 269)
!305 = !DIEnumerator(name: "OPEN_TOKEN", value: 270)
!306 = !DIEnumerator(name: "AGATE_TURB_TOKEN", value: 271)
!307 = !DIEnumerator(name: "IRID_TOKEN", value: 272)
!308 = !DIEnumerator(name: "THICKNESS_TOKEN", value: 273)
!309 = !DIEnumerator(name: "IRID_WAVELENGTH_TOKEN", value: 274)
!310 = !DIEnumerator(name: "CRACKLE_TOKEN", value: 275)
!311 = !DIEnumerator(name: "ADC_BAILOUT_TOKEN", value: 276)
!312 = !DIEnumerator(name: "FILL_LIGHT_TOKEN", value: 277)
!313 = !DIEnumerator(name: "NUMBER_OF_WAVES_TOKEN", value: 278)
!314 = !DIEnumerator(name: "FOG_TYPE_TOKEN", value: 279)
!315 = !DIEnumerator(name: "FOG_ALT_TOKEN", value: 280)
!316 = !DIEnumerator(name: "FOG_OFFSET_TOKEN", value: 281)
!317 = !DIEnumerator(name: "TEXT_TOKEN", value: 282)
!318 = !DIEnumerator(name: "TTF_TOKEN", value: 283)
!319 = !DIEnumerator(name: "REL_GE_TOKEN", value: 284)
!320 = !DIEnumerator(name: "REL_LE_TOKEN", value: 285)
!321 = !DIEnumerator(name: "REL_NE_TOKEN", value: 286)
!322 = !DIEnumerator(name: "APERTURE_TOKEN", value: 287)
!323 = !DIEnumerator(name: "BLUR_SAMPLES_TOKEN", value: 288)
!324 = !DIEnumerator(name: "FOCAL_POINT_TOKEN", value: 289)
!325 = !DIEnumerator(name: "QUILTED_TOKEN", value: 290)
!326 = !DIEnumerator(name: "CONTROL0_TOKEN", value: 291)
!327 = !DIEnumerator(name: "CONTROL1_TOKEN", value: 292)
!328 = !DIEnumerator(name: "RAINBOW_TOKEN", value: 293)
!329 = !DIEnumerator(name: "SKYSPHERE_TOKEN", value: 294)
!330 = !DIEnumerator(name: "ANGLE_TOKEN", value: 295)
!331 = !DIEnumerator(name: "WIDTH_TOKEN", value: 296)
!332 = !DIEnumerator(name: "ARC_ANGLE_TOKEN", value: 297)
!333 = !DIEnumerator(name: "PERSPECTIVE_TOKEN", value: 298)
!334 = !DIEnumerator(name: "ORTHOGRAPHIC_TOKEN", value: 299)
!335 = !DIEnumerator(name: "FISHEYE_TOKEN", value: 300)
!336 = !DIEnumerator(name: "ULTRA_WIDE_ANGLE_TOKEN", value: 301)
!337 = !DIEnumerator(name: "OMNIMAX_TOKEN", value: 302)
!338 = !DIEnumerator(name: "PANORAMIC_TOKEN", value: 303)
!339 = !DIEnumerator(name: "LATHE_TOKEN", value: 304)
!340 = !DIEnumerator(name: "LINEAR_SPLINE_TOKEN", value: 305)
!341 = !DIEnumerator(name: "QUADRATIC_SPLINE_TOKEN", value: 306)
!342 = !DIEnumerator(name: "CUBIC_SPLINE_TOKEN", value: 307)
!343 = !DIEnumerator(name: "BEZIER_SPLINE_TOKEN", value: 308)
!344 = !DIEnumerator(name: "POLYGON_TOKEN", value: 309)
!345 = !DIEnumerator(name: "PRISM_TOKEN", value: 310)
!346 = !DIEnumerator(name: "LINEAR_SWEEP_TOKEN", value: 311)
!347 = !DIEnumerator(name: "CONIC_SWEEP_TOKEN", value: 312)
!348 = !DIEnumerator(name: "SOR_TOKEN", value: 313)
!349 = !DIEnumerator(name: "SPIRAL1_TOKEN", value: 314)
!350 = !DIEnumerator(name: "SPIRAL2_TOKEN", value: 315)
!351 = !DIEnumerator(name: "STRENGTH_TOKEN", value: 316)
!352 = !DIEnumerator(name: "HIERARCHY_TOKEN", value: 317)
!353 = !DIEnumerator(name: "RAMP_WAVE_TOKEN", value: 318)
!354 = !DIEnumerator(name: "TRIANGLE_WAVE_TOKEN", value: 319)
!355 = !DIEnumerator(name: "SINE_WAVE_TOKEN", value: 320)
!356 = !DIEnumerator(name: "SCALLOP_WAVE_TOKEN", value: 321)
!357 = !DIEnumerator(name: "PIGMENT_MAP_TOKEN", value: 322)
!358 = !DIEnumerator(name: "NORMAL_MAP_TOKEN", value: 323)
!359 = !DIEnumerator(name: "SLOPE_MAP_TOKEN", value: 324)
!360 = !DIEnumerator(name: "TEXTURE_MAP_TOKEN", value: 325)
!361 = !DIEnumerator(name: "PIGMENT_MAP_ID_TOKEN", value: 326)
!362 = !DIEnumerator(name: "NORMAL_MAP_ID_TOKEN", value: 327)
!363 = !DIEnumerator(name: "SLOPE_MAP_ID_TOKEN", value: 328)
!364 = !DIEnumerator(name: "TEXTURE_MAP_ID_TOKEN", value: 329)
!365 = !DIEnumerator(name: "SUPERELLIPSOID_TOKEN", value: 330)
!366 = !DIEnumerator(name: "QUATERNION_TOKEN", value: 331)
!367 = !DIEnumerator(name: "CUBE_TOKEN", value: 332)
!368 = !DIEnumerator(name: "MAX_ITERATION_TOKEN", value: 333)
!369 = !DIEnumerator(name: "HYPERCOMPLEX_TOKEN", value: 334)
!370 = !DIEnumerator(name: "RAINBOW_ID_TOKEN", value: 335)
!371 = !DIEnumerator(name: "FOG_ID_TOKEN", value: 336)
!372 = !DIEnumerator(name: "SKYSPHERE_ID_TOKEN", value: 337)
!373 = !DIEnumerator(name: "FADE_POWER_TOKEN", value: 338)
!374 = !DIEnumerator(name: "FADE_COLOUR_TOKEN", value: 339)
!375 = !DIEnumerator(name: "FADE_COLOR_TOKEN", value: 340)
!376 = !DIEnumerator(name: "FADE_DISTANCE_TOKEN", value: 341)
!377 = !DIEnumerator(name: "TURB_DEPTH_TOKEN", value: 342)
!378 = !DIEnumerator(name: "PPM_TOKEN", value: 343)
!379 = !DIEnumerator(name: "PGM_TOKEN", value: 344)
!380 = !DIEnumerator(name: "AVERAGE_TOKEN", value: 345)
!381 = !DIEnumerator(name: "MESH_TOKEN", value: 346)
!382 = !DIEnumerator(name: "WARP_TOKEN", value: 347)
!383 = !DIEnumerator(name: "OFFSET_TOKEN", value: 348)
!384 = !DIEnumerator(name: "REPEAT_TOKEN", value: 349)
!385 = !DIEnumerator(name: "BLACK_HOLE_TOKEN", value: 350)
!386 = !DIEnumerator(name: "FLIP_TOKEN", value: 351)
!387 = !DIEnumerator(name: "AMBIENT_LIGHT_TOKEN", value: 352)
!388 = !DIEnumerator(name: "IF_TOKEN", value: 353)
!389 = !DIEnumerator(name: "ELSE_TOKEN", value: 354)
!390 = !DIEnumerator(name: "END_TOKEN", value: 355)
!391 = !DIEnumerator(name: "SWITCH_TOKEN", value: 356)
!392 = !DIEnumerator(name: "CASE_TOKEN", value: 357)
!393 = !DIEnumerator(name: "RANGE_TOKEN", value: 358)
!394 = !DIEnumerator(name: "WHILE_TOKEN", value: 359)
!395 = !DIEnumerator(name: "BREAK_TOKEN", value: 360)
!396 = !DIEnumerator(name: "FALLOFF_ANGLE_TOKEN", value: 361)
!397 = !DIEnumerator(name: "CAUSTICS_TOKEN", value: 362)
!398 = !DIEnumerator(name: "JULIA_FRACTAL_TOKEN", value: 363)
!399 = !DIEnumerator(name: "SQR_TOKEN", value: 364)
!400 = !DIEnumerator(name: "RECIPROCAL_TOKEN", value: 365)
!401 = !DIEnumerator(name: "STR_TOKEN", value: 366)
!402 = !DIEnumerator(name: "VSTR_TOKEN", value: 367)
!403 = !DIEnumerator(name: "CONCAT_TOKEN", value: 368)
!404 = !DIEnumerator(name: "CHR_TOKEN", value: 369)
!405 = !DIEnumerator(name: "SUBSTR_TOKEN", value: 370)
!406 = !DIEnumerator(name: "STRING_ID_TOKEN", value: 371)
!407 = !DIEnumerator(name: "WARNING_TOKEN", value: 372)
!408 = !DIEnumerator(name: "ERROR_TOKEN", value: 373)
!409 = !DIEnumerator(name: "RENDER_TOKEN", value: 374)
!410 = !DIEnumerator(name: "STATISTICS_TOKEN", value: 375)
!411 = !DIEnumerator(name: "DEBUG_TOKEN", value: 376)
!412 = !DIEnumerator(name: "VARIANCE_TOKEN", value: 377)
!413 = !DIEnumerator(name: "CONFIDENCE_TOKEN", value: 378)
!414 = !DIEnumerator(name: "RADIOSITY_TOKEN", value: 379)
!415 = !DIEnumerator(name: "BRIGHTNESS_TOKEN", value: 380)
!416 = !DIEnumerator(name: "COUNT_TOKEN", value: 381)
!417 = !DIEnumerator(name: "DISTANCE_MAXIMUM_TOKEN", value: 382)
!418 = !DIEnumerator(name: "ERROR_BOUND_TOKEN", value: 383)
!419 = !DIEnumerator(name: "GRAY_THRESHOLD_TOKEN", value: 384)
!420 = !DIEnumerator(name: "LOW_ERROR_FACTOR_TOKEN", value: 385)
!421 = !DIEnumerator(name: "MINIMUM_REUSE_TOKEN", value: 386)
!422 = !DIEnumerator(name: "NEAREST_COUNT_TOKEN", value: 387)
!423 = !DIEnumerator(name: "RECURSION_LIMIT_TOKEN", value: 388)
!424 = !DIEnumerator(name: "HF_GRAY_16_TOKEN", value: 389)
!425 = !DIEnumerator(name: "GLOBAL_SETTINGS_TOKEN", value: 390)
!426 = !DIEnumerator(name: "ECCENTRICITY_TOKEN", value: 391)
!427 = !DIEnumerator(name: "HOLLOW_TOKEN", value: 392)
!428 = !DIEnumerator(name: "MEDIA_ATTENUATION_TOKEN", value: 393)
!429 = !DIEnumerator(name: "MEDIA_INTERACTION_TOKEN", value: 394)
!430 = !DIEnumerator(name: "MATRIX_TOKEN", value: 395)
!431 = !DIEnumerator(name: "PERIOD_TOKEN", value: 396)
!432 = !DIEnumerator(name: "SYS_TOKEN", value: 397)
!433 = !DIEnumerator(name: "STRUPR_TOKEN", value: 398)
!434 = !DIEnumerator(name: "STRLWR_TOKEN", value: 399)
!435 = !DIEnumerator(name: "U_TOKEN", value: 400)
!436 = !DIEnumerator(name: "V_TOKEN", value: 401)
!437 = !DIEnumerator(name: "IFDEF_TOKEN", value: 402)
!438 = !DIEnumerator(name: "PNG_TOKEN", value: 403)
!439 = !DIEnumerator(name: "PRECISION_TOKEN", value: 404)
!440 = !DIEnumerator(name: "SLICE_TOKEN", value: 405)
!441 = !DIEnumerator(name: "ASSUMED_GAMMA_TOKEN", value: 406)
!442 = !DIEnumerator(name: "PWR_TOKEN", value: 407)
!443 = !DIEnumerator(name: "T_TOKEN", value: 408)
!444 = !DIEnumerator(name: "IFNDEF_TOKEN", value: 409)
!445 = !DIEnumerator(name: "MEDIA_TOKEN", value: 410)
!446 = !DIEnumerator(name: "MEDIA_ID_TOKEN", value: 411)
!447 = !DIEnumerator(name: "DENSITY_ID_TOKEN", value: 412)
!448 = !DIEnumerator(name: "DENSITY_TOKEN", value: 413)
!449 = !DIEnumerator(name: "DENSITY_FILE_TOKEN", value: 414)
!450 = !DIEnumerator(name: "RATIO_TOKEN", value: 415)
!451 = !DIEnumerator(name: "SCATTERING_TOKEN", value: 416)
!452 = !DIEnumerator(name: "EMISSION_TOKEN", value: 417)
!453 = !DIEnumerator(name: "ABSORPTION_TOKEN", value: 418)
!454 = !DIEnumerator(name: "SAMPLES_TOKEN", value: 419)
!455 = !DIEnumerator(name: "INTERVALS_TOKEN", value: 420)
!456 = !DIEnumerator(name: "INTERIOR_TOKEN", value: 421)
!457 = !DIEnumerator(name: "INTERIOR_ID_TOKEN", value: 422)
!458 = !DIEnumerator(name: "EXTERIOR_TOKEN", value: 423)
!459 = !DIEnumerator(name: "LOCAL_TOKEN", value: 424)
!460 = !DIEnumerator(name: "UNDEF_TOKEN", value: 425)
!461 = !DIEnumerator(name: "MACRO_TOKEN", value: 426)
!462 = !DIEnumerator(name: "MACRO_ID_TOKEN", value: 427)
!463 = !DIEnumerator(name: "TEMPORARY_MACRO_ID_TOKEN", value: 428)
!464 = !DIEnumerator(name: "PARAMETER_ID_TOKEN", value: 429)
!465 = !DIEnumerator(name: "ARRAY_TOKEN", value: 430)
!466 = !DIEnumerator(name: "ARRAY_ID_TOKEN", value: 431)
!467 = !DIEnumerator(name: "EMPTY_ARRAY_TOKEN", value: 432)
!468 = !DIEnumerator(name: "FILE_ID_TOKEN", value: 433)
!469 = !DIEnumerator(name: "FOPEN_TOKEN", value: 434)
!470 = !DIEnumerator(name: "FCLOSE_TOKEN", value: 435)
!471 = !DIEnumerator(name: "WRITE_TOKEN", value: 436)
!472 = !DIEnumerator(name: "READ_TOKEN", value: 437)
!473 = !DIEnumerator(name: "APPEND_TOKEN", value: 438)
!474 = !DIEnumerator(name: "PLANAR_TOKEN", value: 439)
!475 = !DIEnumerator(name: "SPHERICAL_TOKEN", value: 440)
!476 = !DIEnumerator(name: "BOXED_TOKEN", value: 441)
!477 = !DIEnumerator(name: "CYLINDRICAL_TOKEN", value: 442)
!478 = !DIEnumerator(name: "CUBIC_WAVE_TOKEN", value: 443)
!479 = !DIEnumerator(name: "POLY_WAVE_TOKEN", value: 444)
!480 = !DIEnumerator(name: "DENSITY_MAP_TOKEN", value: 445)
!481 = !DIEnumerator(name: "DENSITY_MAP_ID_TOKEN", value: 446)
!482 = !DIEnumerator(name: "REFLECTION_EXPONENT_TOKEN", value: 447)
!483 = !DIEnumerator(name: "DF3_TOKEN", value: 448)
!484 = !DIEnumerator(name: "EXTINCTION_TOKEN", value: 449)
!485 = !DIEnumerator(name: "MATERIAL_TOKEN", value: 450)
!486 = !DIEnumerator(name: "MATERIAL_ID_TOKEN", value: 451)
!487 = !DIEnumerator(name: "UV_ID_TOKEN", value: 452)
!488 = !DIEnumerator(name: "VECTOR_4D_ID_TOKEN", value: 453)
!489 = !DIEnumerator(name: "UV_MAPPING_TOKEN", value: 454)
!490 = !DIEnumerator(name: "UV_VECTORS_TOKEN", value: 455)
!491 = !DIEnumerator(name: "MESH2_TOKEN", value: 456)
!492 = !DIEnumerator(name: "VERTEX_VECTORS_TOKEN", value: 457)
!493 = !DIEnumerator(name: "NORMAL_VECTORS_TOKEN", value: 458)
!494 = !DIEnumerator(name: "FACE_INDICES_TOKEN", value: 459)
!495 = !DIEnumerator(name: "NORMAL_INDICES_TOKEN", value: 460)
!496 = !DIEnumerator(name: "UV_INDICES_TOKEN", value: 461)
!497 = !DIEnumerator(name: "TEXTURE_LIST_TOKEN", value: 462)
!498 = !DIEnumerator(name: "IMAGE_PATTERN_TOKEN", value: 463)
!499 = !DIEnumerator(name: "USE_ALPHA_TOKEN", value: 464)
!500 = !DIEnumerator(name: "DOUBLE_ILLUMINATE_TOKEN", value: 465)
!501 = !DIEnumerator(name: "INSIDE_VECTOR_TOKEN", value: 466)
!502 = !DIEnumerator(name: "PHOTONS_TOKEN", value: 467)
!503 = !DIEnumerator(name: "STEPS_TOKEN", value: 468)
!504 = !DIEnumerator(name: "PASS_THROUGH_TOKEN", value: 469)
!505 = !DIEnumerator(name: "COLLECT_TOKEN", value: 470)
!506 = !DIEnumerator(name: "AUTOSTOP_TOKEN", value: 471)
!507 = !DIEnumerator(name: "GATHER_TOKEN", value: 472)
!508 = !DIEnumerator(name: "SPLIT_UNION_TOKEN", value: 473)
!509 = !DIEnumerator(name: "EXPAND_THRESHOLDS_TOKEN", value: 474)
!510 = !DIEnumerator(name: "SPACING_TOKEN", value: 475)
!511 = !DIEnumerator(name: "TARGET_TOKEN", value: 476)
!512 = !DIEnumerator(name: "PARAMETRIC_TOKEN", value: 477)
!513 = !DIEnumerator(name: "PRECOMPUTE_TOKEN", value: 478)
!514 = !DIEnumerator(name: "CONTAINED_BY_TOKEN", value: 479)
!515 = !DIEnumerator(name: "ISOSURFACE_TOKEN", value: 480)
!516 = !DIEnumerator(name: "METHOD_TOKEN", value: 481)
!517 = !DIEnumerator(name: "ACCURACY_TOKEN", value: 482)
!518 = !DIEnumerator(name: "MAX_GRADIENT_TOKEN", value: 483)
!519 = !DIEnumerator(name: "MAX_TRACE_TOKEN", value: 484)
!520 = !DIEnumerator(name: "FUNCTION_TOKEN", value: 485)
!521 = !DIEnumerator(name: "EVALUATE_TOKEN", value: 486)
!522 = !DIEnumerator(name: "FUNCT_ID_TOKEN", value: 487)
!523 = !DIEnumerator(name: "VECTFUNCT_ID_TOKEN", value: 488)
!524 = !DIEnumerator(name: "ALL_INTERSECTIONS_TOKEN", value: 489)
!525 = !DIEnumerator(name: "DISPERSION_TOKEN", value: 490)
!526 = !DIEnumerator(name: "DISPERSION_SAMPLES_TOKEN", value: 491)
!527 = !DIEnumerator(name: "ORIENT_TOKEN", value: 492)
!528 = !DIEnumerator(name: "CIRCULAR_TOKEN", value: 493)
!529 = !DIEnumerator(name: "NO_IMAGE_TOKEN", value: 494)
!530 = !DIEnumerator(name: "NO_REFLECTION_TOKEN", value: 495)
!531 = !DIEnumerator(name: "LIGHT_GROUP_TOKEN", value: 496)
!532 = !DIEnumerator(name: "NATURAL_SPLINE_TOKEN", value: 497)
!533 = !DIEnumerator(name: "B_SPLINE_TOKEN", value: 498)
!534 = !DIEnumerator(name: "TOLERANCE_TOKEN", value: 499)
!535 = !DIEnumerator(name: "PROJECTED_THROUGH_TOKEN", value: 500)
!536 = !DIEnumerator(name: "PARALLEL_TOKEN", value: 501)
!537 = !DIEnumerator(name: "SPHERE_SWEEP_TOKEN", value: 502)
!538 = !DIEnumerator(name: "SPLINE_TOKEN", value: 503)
!539 = !DIEnumerator(name: "SPLINE_ID_TOKEN", value: 504)
!540 = !DIEnumerator(name: "PATTERN_TOKEN", value: 505)
!541 = !DIEnumerator(name: "FACETS_TOKEN", value: 506)
!542 = !DIEnumerator(name: "SLOPE_TOKEN", value: 507)
!543 = !DIEnumerator(name: "SOLID_TOKEN", value: 508)
!544 = !DIEnumerator(name: "COORDS_TOKEN", value: 509)
!545 = !DIEnumerator(name: "SIZE_TOKEN", value: 510)
!546 = !DIEnumerator(name: "METRIC_TOKEN", value: 511)
!547 = !DIEnumerator(name: "FORM_TOKEN", value: 512)
!548 = !DIEnumerator(name: "ORIENTATION_TOKEN", value: 513)
!549 = !DIEnumerator(name: "TOROIDAL_TOKEN", value: 514)
!550 = !DIEnumerator(name: "DIST_EXP_TOKEN", value: 515)
!551 = !DIEnumerator(name: "MAJOR_RADIUS_TOKEN", value: 516)
!552 = !DIEnumerator(name: "JPEG_TOKEN", value: 517)
!553 = !DIEnumerator(name: "AA_THRESHOLD_TOKEN", value: 518)
!554 = !DIEnumerator(name: "AA_LEVEL_TOKEN", value: 519)
!555 = !DIEnumerator(name: "LOAD_FILE_TOKEN", value: 520)
!556 = !DIEnumerator(name: "SAVE_FILE_TOKEN", value: 521)
!557 = !DIEnumerator(name: "ALWAYS_SAMPLE_TOKEN", value: 522)
!558 = !DIEnumerator(name: "PRETRACE_START_TOKEN", value: 523)
!559 = !DIEnumerator(name: "PRETRACE_END_TOKEN", value: 524)
!560 = !DIEnumerator(name: "MAX_SAMPLE_TOKEN", value: 525)
!561 = !DIEnumerator(name: "GLOBAL_LIGHTS_TOKEN", value: 526)
!562 = !DIEnumerator(name: "CUTAWAY_TEXTURES_TOKEN", value: 527)
!563 = !DIEnumerator(name: "NO_BUMP_SCALE_TOKEN", value: 528)
!564 = !DIEnumerator(name: "CONSERVE_ENERGY_TOKEN", value: 529)
!565 = !DIEnumerator(name: "PIGMENT_PATTERN_TOKEN", value: 530)
!566 = !DIEnumerator(name: "INTERNAL_TOKEN", value: 531)
!567 = !DIEnumerator(name: "NOISE_GENERATOR_TOKEN", value: 532)
!568 = !DIEnumerator(name: "JULIA_TOKEN", value: 533)
!569 = !DIEnumerator(name: "MAGNET_TOKEN", value: 534)
!570 = !DIEnumerator(name: "LAST_TOKEN", value: 535)
!571 = !{!572, !578, !583, !588, !643, !647, !648, !655, !665, !672, !602, !32, !681, !682, !684, !671, !576, !686, !687, !699}
!572 = !DICompositeType(tag: DW_TAG_structure_type, file: !573, line: 82, size: 64, align: 32, elements: !574, identifier: "_ZTS5div_t")
!573 = !DIFile(filename: "/usr/include/stdlib.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!574 = !{!575, !577}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !"_ZTS5div_t", file: !573, line: 83, baseType: !576, size: 32, align: 32)
!576 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !"_ZTS5div_t", file: !573, line: 84, baseType: !576, size: 32, align: 32, offset: 32)
!578 = !DICompositeType(tag: DW_TAG_structure_type, file: !573, line: 87, size: 128, align: 64, elements: !579, identifier: "_ZTS6ldiv_t")
!579 = !{!580, !582}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !"_ZTS6ldiv_t", file: !573, line: 88, baseType: !581, size: 64, align: 64)
!581 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !"_ZTS6ldiv_t", file: !573, line: 89, baseType: !581, size: 64, align: 64, offset: 64)
!583 = !DICompositeType(tag: DW_TAG_structure_type, file: !573, line: 93, size: 128, align: 64, elements: !584, identifier: "_ZTS7lldiv_t")
!584 = !{!585, !587}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !"_ZTS7lldiv_t", file: !573, line: 94, baseType: !586, size: 64, align: 64)
!586 = !DIBasicType(name: "long long int", size: 64, align: 64, encoding: DW_ATE_signed)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !"_ZTS7lldiv_t", file: !573, line: 95, baseType: !586, size: 64, align: 64, offset: 64)
!588 = !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !589, line: 122, size: 1216, align: 64, elements: !590, identifier: "_ZTS7__sFILE")
!589 = !DIFile(filename: "/usr/include/stdio.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!590 = !{!591, !594, !595, !596, !598, !599, !600, !601, !603, !607, !613, !622, !628, !629, !631, !632, !636, !640, !641, !642}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !"_ZTS7__sFILE", file: !589, line: 123, baseType: !592, size: 64, align: 64)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64, align: 64)
!593 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !"_ZTS7__sFILE", file: !589, line: 124, baseType: !576, size: 32, align: 32, offset: 64)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !"_ZTS7__sFILE", file: !589, line: 125, baseType: !576, size: 32, align: 32, offset: 96)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !"_ZTS7__sFILE", file: !589, line: 126, baseType: !597, size: 16, align: 16, offset: 128)
!597 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !"_ZTS7__sFILE", file: !589, line: 127, baseType: !597, size: 16, align: 16, offset: 144)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !"_ZTS7__sFILE", file: !589, line: 128, baseType: !"_ZTS6__sbuf", size: 128, align: 64, offset: 192)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !"_ZTS7__sFILE", file: !589, line: 129, baseType: !576, size: 32, align: 32, offset: 320)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !"_ZTS7__sFILE", file: !589, line: 132, baseType: !602, size: 64, align: 64, offset: 384)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !"_ZTS7__sFILE", file: !589, line: 133, baseType: !604, size: 64, align: 64, offset: 448)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64, align: 64)
!605 = !DISubroutineType(types: !606)
!606 = !{!576, !602}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !"_ZTS7__sFILE", file: !589, line: 134, baseType: !608, size: 64, align: 64, offset: 512)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64, align: 64)
!609 = !DISubroutineType(types: !610)
!610 = !{!576, !602, !611, !576}
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64, align: 64)
!612 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !"_ZTS7__sFILE", file: !589, line: 135, baseType: !614, size: 64, align: 64, offset: 576)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64, align: 64)
!615 = !DISubroutineType(types: !616)
!616 = !{!617, !602, !617, !576}
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "fpos_t", file: !589, line: 77, baseType: !618)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_off_t", file: !619, line: 71, baseType: !620)
!619 = !DIFile(filename: "/usr/include/sys/_types.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !621, line: 46, baseType: !586)
!621 = !DIFile(filename: "/usr/include/i386/_types.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!622 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !"_ZTS7__sFILE", file: !589, line: 136, baseType: !623, size: 64, align: 64, offset: 640)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64, align: 64)
!624 = !DISubroutineType(types: !625)
!625 = !{!576, !602, !626, !576}
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64, align: 64)
!627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !612)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !"_ZTS7__sFILE", file: !589, line: 139, baseType: !"_ZTS6__sbuf", size: 128, align: 64, offset: 704)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "_extra", scope: !"_ZTS7__sFILE", file: !589, line: 140, baseType: !630, size: 64, align: 64, offset: 832)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS8__sFILEX", size: 64, align: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !"_ZTS7__sFILE", file: !589, line: 141, baseType: !576, size: 32, align: 32, offset: 896)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !"_ZTS7__sFILE", file: !589, line: 144, baseType: !633, size: 24, align: 8, offset: 928)
!633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !593, size: 24, align: 8, elements: !634)
!634 = !{!635}
!635 = !DISubrange(count: 3)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !"_ZTS7__sFILE", file: !589, line: 145, baseType: !637, size: 8, align: 8, offset: 952)
!637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !593, size: 8, align: 8, elements: !638)
!638 = !{!639}
!639 = !DISubrange(count: 1)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !"_ZTS7__sFILE", file: !589, line: 148, baseType: !"_ZTS6__sbuf", size: 128, align: 64, offset: 960)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !"_ZTS7__sFILE", file: !589, line: 151, baseType: !576, size: 32, align: 32, offset: 1088)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !"_ZTS7__sFILE", file: !589, line: 152, baseType: !617, size: 64, align: 64, offset: 1152)
!643 = !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !589, line: 88, size: 128, align: 64, elements: !644, identifier: "_ZTS6__sbuf")
!644 = !{!645, !646}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !"_ZTS6__sbuf", file: !589, line: 89, baseType: !592, size: 64, align: 64)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !"_ZTS6__sbuf", file: !589, line: 90, baseType: !576, size: 32, align: 32, offset: 64)
!647 = !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILEX", file: !589, line: 94, flags: DIFlagFwdDecl, identifier: "_ZTS8__sFILEX")
!648 = !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1, size: 192, align: 64, elements: !649, identifier: "_ZTS13__va_list_tag")
!649 = !{!650, !652, !653, !654}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !"_ZTS13__va_list_tag", file: !1, baseType: !651, size: 32, align: 32)
!651 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !"_ZTS13__va_list_tag", file: !1, baseType: !651, size: 32, align: 32, offset: 32)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !"_ZTS13__va_list_tag", file: !1, baseType: !602, size: 64, align: 64, offset: 64)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !"_ZTS13__va_list_tag", file: !1, baseType: !602, size: 64, align: 64, offset: 128)
!655 = !DICompositeType(tag: DW_TAG_structure_type, name: "ExprNodeStruct", scope: !5, file: !4, line: 72, size: 448, align: 64, elements: !656, identifier: "_ZTSN3pov14ExprNodeStructE")
!656 = !{!657, !659, !660, !661, !662, !663, !664}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !"_ZTSN3pov14ExprNodeStructE", file: !4, line: 74, baseType: !658, size: 64, align: 64)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTSN3pov14ExprNodeStructE", size: 64, align: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !"_ZTSN3pov14ExprNodeStructE", file: !4, line: 75, baseType: !658, size: 64, align: 64, offset: 64)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !"_ZTSN3pov14ExprNodeStructE", file: !4, line: 76, baseType: !658, size: 64, align: 64, offset: 128)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !"_ZTSN3pov14ExprNodeStructE", file: !4, line: 77, baseType: !658, size: 64, align: 64, offset: 192)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "stage", scope: !"_ZTSN3pov14ExprNodeStructE", file: !4, line: 78, baseType: !576, size: 32, align: 32, offset: 256)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !"_ZTSN3pov14ExprNodeStructE", file: !4, line: 79, baseType: !576, size: 32, align: 32, offset: 288)
!664 = !DIDerivedType(tag: DW_TAG_member, scope: !"_ZTSN3pov14ExprNodeStructE", file: !4, line: 80, baseType: !"_ZTSN3pov14ExprNodeStructUt_E", size: 128, align: 64, offset: 320)
!665 = !DICompositeType(tag: DW_TAG_union_type, scope: !"_ZTSN3pov14ExprNodeStructE", file: !4, line: 80, size: 128, align: 64, elements: !666, identifier: "_ZTSN3pov14ExprNodeStructUt_E")
!666 = !{!667, !668, !669, !670}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "variable", scope: !"_ZTSN3pov14ExprNodeStructUt_E", file: !4, line: 82, baseType: !611, size: 64, align: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !"_ZTSN3pov14ExprNodeStructUt_E", file: !4, line: 88, baseType: !"_ZTSN3pov14ExprNodeStructUt_Ut_E", size: 128, align: 64)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "trap", scope: !"_ZTSN3pov14ExprNodeStructUt_E", file: !4, line: 89, baseType: !651, size: 32, align: 32)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !"_ZTSN3pov14ExprNodeStructUt_E", file: !4, line: 90, baseType: !671, size: 64, align: 64)
!671 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!672 = !DICompositeType(tag: DW_TAG_structure_type, scope: !"_ZTSN3pov14ExprNodeStructUt_E", file: !4, line: 83, size: 128, align: 64, elements: !673, identifier: "_ZTSN3pov14ExprNodeStructUt_Ut_E")
!673 = !{!674, !675, !678}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !"_ZTSN3pov14ExprNodeStructUt_Ut_E", file: !4, line: 85, baseType: !611, size: 64, align: 64)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !"_ZTSN3pov14ExprNodeStructUt_Ut_E", file: !4, line: 86, baseType: !676, size: 32, align: 32, offset: 64)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "TOKEN", scope: !5, file: !677, line: 1841, baseType: !576)
!677 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/453.povray/src/frame.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!678 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !"_ZTSN3pov14ExprNodeStructUt_Ut_E", file: !4, line: 87, baseType: !679, size: 32, align: 32, offset: 96)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "FUNCTION", scope: !5, file: !680, line: 40, baseType: !651)
!680 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/453.povray/src/function.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64, align: 64)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64, align: 64)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExprNode", scope: !5, file: !4, line: 92, baseType: !"_ZTSN3pov14ExprNodeStructE")
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "FUNCTION_PTR", scope: !5, file: !680, line: 41, baseType: !685)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64, align: 64)
!686 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!687 = !DICompositeType(tag: DW_TAG_structure_type, scope: !5, file: !1, line: 75, size: 192, align: 64, elements: !688, identifier: "_ZTSN3pov20ExprParserTableEntryE")
!688 = !{!689, !690, !691, !697, !698}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "stage", scope: !"_ZTSN3pov20ExprParserTableEntryE", file: !1, line: 77, baseType: !576, size: 32, align: 32)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !"_ZTSN3pov20ExprParserTableEntryE", file: !1, line: 78, baseType: !676, size: 32, align: 32, offset: 32)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "operation", scope: !"_ZTSN3pov20ExprParserTableEntryE", file: !1, line: 79, baseType: !692, size: 64, align: 64, offset: 64)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64, align: 64)
!693 = !DISubroutineType(types: !694)
!694 = !{!695, !696, !576, !576}
!695 = !DIBasicType(name: "bool", size: 8, align: 8, encoding: DW_ATE_boolean)
!696 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !682)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !"_ZTSN3pov20ExprParserTableEntryE", file: !1, line: 80, baseType: !576, size: 32, align: 32, offset: 128)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !"_ZTSN3pov20ExprParserTableEntryE", file: !1, line: 81, baseType: !576, size: 32, align: 32, offset: 160)
!699 = !DICompositeType(tag: DW_TAG_structure_type, scope: !5, file: !1, line: 84, size: 128, align: 64, elements: !700, identifier: "_ZTSN3pov20ExprParserErrorEntryE")
!700 = !{!701, !702}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "stage", scope: !"_ZTSN3pov20ExprParserErrorEntryE", file: !1, line: 86, baseType: !576, size: 32, align: 32)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "expected", scope: !"_ZTSN3pov20ExprParserErrorEntryE", file: !1, line: 87, baseType: !611, size: 64, align: 64, offset: 64)
!703 = !{!704, !709, !715, !723, !730, !734, !741, !746, !756, !762, !768, !774, !779, !785, !796, !801, !808, !813}
!704 = !DISubprogram(name: "FNSyntax_ParseExpression", linkageName: "_ZN3pov24FNSyntax_ParseExpressionEv", scope: !5, file: !1, line: 191, type: !705, isLocal: false, isDefinition: true, scopeLine: 192, flags: DIFlagPrototyped, isOptimized: true, function: %"struct.pov::ExprNodeStruct"* ()* @_ZN3pov24FNSyntax_ParseExpressionEv, variables: !707)
!705 = !DISubroutineType(types: !706)
!706 = !{!682}
!707 = !{!708}
!708 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "expression", scope: !704, file: !1, line: 193, type: !682)
!709 = !DISubprogram(name: "FNSyntax_GetTrapExpression", linkageName: "_ZN3pov26FNSyntax_GetTrapExpressionEj", scope: !5, file: !1, line: 232, type: !710, isLocal: false, isDefinition: true, scopeLine: 233, flags: DIFlagPrototyped, isOptimized: true, function: %"struct.pov::ExprNodeStruct"* (i32)* @_ZN3pov26FNSyntax_GetTrapExpressionEj, variables: !712)
!710 = !DISubroutineType(types: !711)
!711 = !{!682, !651}
!712 = !{!713, !714}
!713 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "trap", arg: 1, scope: !709, file: !1, line: 232, type: !651)
!714 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "expression", scope: !709, file: !1, line: 234, type: !682)
!715 = !DISubprogram(name: "FNSyntax_DeleteExpression", linkageName: "_ZN3pov25FNSyntax_DeleteExpressionEPNS_14ExprNodeStructE", scope: !5, file: !1, line: 271, type: !716, isLocal: false, isDefinition: true, scopeLine: 272, flags: DIFlagPrototyped, isOptimized: true, function: void (%"struct.pov::ExprNodeStruct"*)* @_ZN3pov25FNSyntax_DeleteExpressionEPNS_14ExprNodeStructE, variables: !718)
!716 = !DISubroutineType(types: !717)
!717 = !{null, !682}
!718 = !{!719, !720, !721}
!719 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "node", arg: 1, scope: !715, file: !1, line: 271, type: !682)
!720 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !715, file: !1, line: 273, type: !682)
!721 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !722, file: !1, line: 275, type: !682)
!722 = distinct !DILexicalBlock(scope: !715, file: !1, line: 275, column: 2)
!723 = !DISubprogram(name: "parse_expr", linkageName: "_ZN3pov10parse_exprEv", scope: !5, file: !1, line: 333, type: !705, isLocal: false, isDefinition: true, scopeLine: 334, flags: DIFlagPrototyped, isOptimized: true, function: %"struct.pov::ExprNodeStruct"* ()* @_ZN3pov10parse_exprEv, variables: !724)
!724 = !{!725, !726, !727, !728, !729}
!725 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "current", scope: !723, file: !1, line: 335, type: !682)
!726 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "node", scope: !723, file: !1, line: 336, type: !682)
!727 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "token", scope: !723, file: !1, line: 337, type: !676)
!728 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start_index", scope: !723, file: !1, line: 338, type: !576)
!729 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !723, file: !1, line: 339, type: !576)
!730 = !DISubprogram(name: "expr_get_token", linkageName: "_ZN3pov14expr_get_tokenEv", scope: !5, file: !1, line: 406, type: !731, isLocal: false, isDefinition: true, scopeLine: 407, flags: DIFlagPrototyped, isOptimized: true, function: i32 ()* @_ZN3pov14expr_get_tokenEv, variables: !733)
!731 = !DISubroutineType(types: !732)
!732 = !{!676}
!733 = !{}
!734 = !DISubprogram(name: "new_expr_node", linkageName: "_ZN3pov13new_expr_nodeEii", scope: !5, file: !1, line: 495, type: !735, isLocal: false, isDefinition: true, scopeLine: 496, flags: DIFlagPrototyped, isOptimized: true, function: %"struct.pov::ExprNodeStruct"* (i32, i32)* @_ZN3pov13new_expr_nodeEii, variables: !737)
!735 = !DISubroutineType(types: !736)
!736 = !{!682, !576, !576}
!737 = !{!738, !739, !740}
!738 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "stage", arg: 1, scope: !734, file: !1, line: 495, type: !576)
!739 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "op", arg: 2, scope: !734, file: !1, line: 495, type: !576)
!740 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "node", scope: !734, file: !1, line: 497, type: !682)
!741 = !DISubprogram(name: "expr_noop", linkageName: "_ZN3pov9expr_noopERPNS_14ExprNodeStructEii", scope: !5, file: !1, line: 543, type: !693, isLocal: false, isDefinition: true, scopeLine: 544, flags: DIFlagPrototyped, isOptimized: true, function: i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_noopERPNS_14ExprNodeStructEii, variables: !742)
!742 = !{!743, !744, !745}
!743 = !DILocalVariable(tag: DW_TAG_arg_variable, arg: 1, scope: !741, file: !1, line: 543, type: !696)
!744 = !DILocalVariable(tag: DW_TAG_arg_variable, arg: 2, scope: !741, file: !1, line: 543, type: !576)
!745 = !DILocalVariable(tag: DW_TAG_arg_variable, arg: 3, scope: !741, file: !1, line: 543, type: !576)
!746 = !DISubprogram(name: "expr_grow", linkageName: "_ZN3pov9expr_growERPNS_14ExprNodeStructEii", scope: !5, file: !1, line: 582, type: !693, isLocal: false, isDefinition: true, scopeLine: 583, flags: DIFlagPrototyped, isOptimized: true, function: i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_growERPNS_14ExprNodeStructEii, variables: !747)
!747 = !{!748, !749, !750, !751, !752}
!748 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "current", arg: 1, scope: !746, file: !1, line: 582, type: !696)
!749 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "stage", arg: 2, scope: !746, file: !1, line: 582, type: !576)
!750 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "op", arg: 3, scope: !746, file: !1, line: 582, type: !576)
!751 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "node", scope: !746, file: !1, line: 584, type: !682)
!752 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !753, file: !1, line: 634, type: !682)
!753 = distinct !DILexicalBlock(scope: !754, file: !1, line: 634, column: 3)
!754 = distinct !DILexicalBlock(scope: !755, file: !1, line: 628, column: 2)
!755 = distinct !DILexicalBlock(scope: !746, file: !1, line: 614, column: 5)
!756 = !DISubprogram(name: "expr_call", linkageName: "_ZN3pov9expr_callERPNS_14ExprNodeStructEii", scope: !5, file: !1, line: 679, type: !693, isLocal: false, isDefinition: true, scopeLine: 680, flags: DIFlagPrototyped, isOptimized: true, function: i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov9expr_callERPNS_14ExprNodeStructEii, variables: !757)
!757 = !{!758, !759, !760, !761}
!758 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "current", arg: 1, scope: !756, file: !1, line: 679, type: !696)
!759 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "stage", arg: 2, scope: !756, file: !1, line: 679, type: !576)
!760 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "op", arg: 3, scope: !756, file: !1, line: 679, type: !576)
!761 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "node", scope: !756, file: !1, line: 681, type: !682)
!762 = !DISubprogram(name: "expr_put", linkageName: "_ZN3pov8expr_putERPNS_14ExprNodeStructEii", scope: !5, file: !1, line: 755, type: !693, isLocal: false, isDefinition: true, scopeLine: 756, flags: DIFlagPrototyped, isOptimized: true, function: i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_putERPNS_14ExprNodeStructEii, variables: !763)
!763 = !{!764, !765, !766, !767}
!764 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "current", arg: 1, scope: !762, file: !1, line: 755, type: !696)
!765 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "stage", arg: 2, scope: !762, file: !1, line: 755, type: !576)
!766 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "op", arg: 3, scope: !762, file: !1, line: 755, type: !576)
!767 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "node", scope: !762, file: !1, line: 757, type: !682)
!768 = !DISubprogram(name: "expr_new", linkageName: "_ZN3pov8expr_newERPNS_14ExprNodeStructEii", scope: !5, file: !1, line: 816, type: !693, isLocal: false, isDefinition: true, scopeLine: 817, flags: DIFlagPrototyped, isOptimized: true, function: i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_newERPNS_14ExprNodeStructEii, variables: !769)
!769 = !{!770, !771, !772, !773}
!770 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "current", arg: 1, scope: !768, file: !1, line: 816, type: !696)
!771 = !DILocalVariable(tag: DW_TAG_arg_variable, arg: 2, scope: !768, file: !1, line: 816, type: !576)
!772 = !DILocalVariable(tag: DW_TAG_arg_variable, arg: 3, scope: !768, file: !1, line: 816, type: !576)
!773 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "node", scope: !768, file: !1, line: 818, type: !682)
!774 = !DISubprogram(name: "expr_ret", linkageName: "_ZN3pov8expr_retERPNS_14ExprNodeStructEii", scope: !5, file: !1, line: 865, type: !693, isLocal: false, isDefinition: true, scopeLine: 866, flags: DIFlagPrototyped, isOptimized: true, function: i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_retERPNS_14ExprNodeStructEii, variables: !775)
!775 = !{!776, !777, !778}
!776 = !DILocalVariable(tag: DW_TAG_arg_variable, arg: 1, scope: !774, file: !1, line: 865, type: !696)
!777 = !DILocalVariable(tag: DW_TAG_arg_variable, arg: 2, scope: !774, file: !1, line: 865, type: !576)
!778 = !DILocalVariable(tag: DW_TAG_arg_variable, arg: 3, scope: !774, file: !1, line: 865, type: !576)
!779 = !DISubprogram(name: "expr_err", linkageName: "_ZN3pov8expr_errERPNS_14ExprNodeStructEii", scope: !5, file: !1, line: 906, type: !693, isLocal: false, isDefinition: true, scopeLine: 907, flags: DIFlagPrototyped, isOptimized: true, function: i1 (%"struct.pov::ExprNodeStruct"**, i32, i32)* @_ZN3pov8expr_errERPNS_14ExprNodeStructEii, variables: !780)
!780 = !{!781, !782, !783, !784}
!781 = !DILocalVariable(tag: DW_TAG_arg_variable, arg: 1, scope: !779, file: !1, line: 906, type: !696)
!782 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "stage", arg: 2, scope: !779, file: !1, line: 906, type: !576)
!783 = !DILocalVariable(tag: DW_TAG_arg_variable, arg: 3, scope: !779, file: !1, line: 906, type: !576)
!784 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !779, file: !1, line: 908, type: !576)
!785 = !DISubprogram(name: "optimise_expr", linkageName: "_ZN3pov13optimise_exprEPNS_14ExprNodeStructE", scope: !5, file: !1, line: 958, type: !716, isLocal: false, isDefinition: true, scopeLine: 959, flags: DIFlagPrototyped, isOptimized: true, function: void (%"struct.pov::ExprNodeStruct"*)* @_ZN3pov13optimise_exprEPNS_14ExprNodeStructE, variables: !786)
!786 = !{!787, !788, !789, !790, !791, !792, !793, !794, !795}
!787 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "node", arg: 1, scope: !785, file: !1, line: 958, type: !682)
!788 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "left", scope: !785, file: !1, line: 960, type: !682)
!789 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "right", scope: !785, file: !1, line: 960, type: !682)
!790 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !785, file: !1, line: 960, type: !682)
!791 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !785, file: !1, line: 960, type: !682)
!792 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !785, file: !1, line: 961, type: !671)
!793 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "have_result", scope: !785, file: !1, line: 962, type: !695)
!794 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "op", scope: !785, file: !1, line: 963, type: !576)
!795 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cnt", scope: !785, file: !1, line: 963, type: !576)
!796 = !DISubprogram(name: "optimise_call", linkageName: "_ZN3pov13optimise_callEPNS_14ExprNodeStructE", scope: !5, file: !1, line: 1178, type: !716, isLocal: false, isDefinition: true, scopeLine: 1179, flags: DIFlagPrototyped, isOptimized: true, function: void (%"struct.pov::ExprNodeStruct"*)* @_ZN3pov13optimise_callEPNS_14ExprNodeStructE, variables: !797)
!797 = !{!798, !799, !800}
!798 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "node", arg: 1, scope: !796, file: !1, line: 1178, type: !682)
!799 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !796, file: !1, line: 1180, type: !671)
!800 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "have_result", scope: !796, file: !1, line: 1181, type: !695)
!801 = !DISubprogram(name: "right_subtree_has_variable_expr", linkageName: "_ZN3pov31right_subtree_has_variable_exprEPNS_14ExprNodeStructE", scope: !5, file: !1, line: 1332, type: !802, isLocal: false, isDefinition: true, scopeLine: 1333, flags: DIFlagPrototyped, isOptimized: true, function: i1 (%"struct.pov::ExprNodeStruct"*)* @_ZN3pov31right_subtree_has_variable_exprEPNS_14ExprNodeStructE, variables: !804)
!802 = !DISubroutineType(types: !803)
!803 = !{!695, !682}
!804 = !{!805, !806}
!805 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "node", arg: 1, scope: !801, file: !1, line: 1332, type: !682)
!806 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !807, file: !1, line: 1337, type: !682)
!807 = distinct !DILexicalBlock(scope: !801, file: !1, line: 1337, column: 2)
!808 = !DISubprogram(name: "left_subtree_has_variable_expr", linkageName: "_ZN3pov30left_subtree_has_variable_exprEPNS_14ExprNodeStructE", scope: !5, file: !1, line: 1381, type: !802, isLocal: false, isDefinition: true, scopeLine: 1382, flags: DIFlagPrototyped, isOptimized: true, function: i1 (%"struct.pov::ExprNodeStruct"*)* @_ZN3pov30left_subtree_has_variable_exprEPNS_14ExprNodeStructE, variables: !809)
!809 = !{!810, !811}
!810 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "node", arg: 1, scope: !808, file: !1, line: 1381, type: !682)
!811 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !812, file: !1, line: 1386, type: !682)
!812 = distinct !DILexicalBlock(scope: !808, file: !1, line: 1386, column: 2)
!813 = !DISubprogram(name: "dump_expr", linkageName: "_ZN3pov9dump_exprEP7__sFILEPNS_14ExprNodeStructE", scope: !5, file: !1, line: 1432, type: !814, isLocal: false, isDefinition: true, scopeLine: 1433, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.__sFILE*, %"struct.pov::ExprNodeStruct"*)* @_ZN3pov9dump_exprEP7__sFILEPNS_14ExprNodeStructE, variables: !818)
!814 = !DISubroutineType(types: !815)
!815 = !{null, !816, !682}
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64, align: 64)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !589, line: 153, baseType: !"_ZTS7__sFILE")
!818 = !{!819, !820, !821}
!819 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "f", arg: 1, scope: !813, file: !1, line: 1432, type: !816)
!820 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "node", arg: 2, scope: !813, file: !1, line: 1432, type: !682)
!821 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !822, file: !1, line: 1441, type: !682)
!822 = distinct !DILexicalBlock(scope: !813, file: !1, line: 1441, column: 2)
!823 = !{!824, !826, !832}
!824 = !DIGlobalVariable(name: "START_LEFTMOST_PARSE_INDEX", scope: !5, file: !1, line: 161, type: !825, isLocal: true, isDefinition: true, variable: i32 18)
!825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !576)
!826 = !DIGlobalVariable(name: "expr_parser_table", linkageName: "_ZN3povL17expr_parser_tableE", scope: !5, file: !1, line: 106, type: !827, isLocal: true, isDefinition: true, variable: [38 x %"struct.pov::ExprParserTableEntry"]* @_ZN3povL17expr_parser_tableE)
!827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !828, size: 7296, align: 64, elements: !830)
!828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !829)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExprParserTableEntry", scope: !5, file: !1, line: 82, baseType: !"_ZTSN3pov20ExprParserTableEntryE")
!830 = !{!831}
!831 = !DISubrange(count: 38)
!832 = !DIGlobalVariable(name: "expr_parser_error_table", linkageName: "_ZN3povL23expr_parser_error_tableE", scope: !5, file: !1, line: 95, type: !833, isLocal: true, isDefinition: true, variable: [7 x %"struct.pov::ExprParserErrorEntry"]* @_ZN3povL23expr_parser_error_tableE)
!833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !834, size: 896, align: 64, elements: !836)
!834 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !835)
!835 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExprParserErrorEntry", scope: !5, file: !1, line: 88, baseType: !"_ZTSN3pov20ExprParserErrorEntryE")
!836 = !{!837}
!837 = !DISubrange(count: 7)
!838 = !{!839, !842, !849, !851, !853, !855, !857, !859, !861, !863, !865, !867, !869, !871, !873, !875, !880, !887, !889, !893, !897, !899, !901, !905, !909, !913, !915, !919, !923, !927, !931, !935, !937, !939, !941, !943, !947, !951, !955, !956, !958, !960, !962, !966, !970, !974, !978, !983, !987, !992, !996, !1000, !1004, !1009, !1013, !1017, !1021, !1025, !1029, !1033, !1037, !1042, !1046, !1049, !1053, !1055, !1062, !1066, !1068, !1072, !1076, !1080, !1084, !1088, !1092, !1098, !1102, !1106, !1112, !1115, !1116, !1115, !1117, !1115, !1118, !1117, !1119, !1119, !1115, !1115, !1115, !1118, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1128, !1130, !1134, !1138, !1142, !1144, !1148, !1152, !1156, !1160, !1164, !1166, !1170, !1172, !1176, !1180, !1184, !1190, !1192, !1196, !1200, !1202, !1206, !1210, !1212, !1216, !1220, !1224, !1226, !1228, !1230, !1232, !1234, !1236, !1238, !1242, !1246, !1251, !1255, !1261, !1265, !1269, !1271, !1273, !1275, !1279, !1280, !1281, !1282, !1118, !1119, !1119, !1283, !1284, !1285, !1286}
!839 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !0, entity: !840, line: 28)
!840 = !DINamespace(name: "std", scope: null, file: !841, line: 26)
!841 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/453.povray/src/config.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!842 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !845, line: 55)
!843 = !DINamespace(name: "__1", scope: !840, file: !844, line: 369)
!844 = !DIFile(filename: "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!845 = !DISubprogram(name: "isalnum", linkageName: "_Z7isalnumi", scope: !846, file: !846, line: 212, type: !847, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!846 = !DIFile(filename: "/usr/include/ctype.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!847 = !DISubroutineType(types: !848)
!848 = !{!576, !576}
!849 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !850, line: 63)
!850 = !DISubprogram(name: "isalpha", linkageName: "_Z7isalphai", scope: !846, file: !846, line: 218, type: !847, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!851 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !852, line: 71)
!852 = !DISubprogram(name: "isblank", linkageName: "_Z7isblanki", scope: !846, file: !846, line: 224, type: !847, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!853 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !854, line: 79)
!854 = !DISubprogram(name: "iscntrl", linkageName: "_Z7iscntrli", scope: !846, file: !846, line: 230, type: !847, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!855 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !856, line: 87)
!856 = !DISubprogram(name: "isdigit", linkageName: "_Z7isdigiti", scope: !846, file: !846, line: 237, type: !847, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!857 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !858, line: 95)
!858 = !DISubprogram(name: "isgraph", linkageName: "_Z7isgraphi", scope: !846, file: !846, line: 243, type: !847, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!859 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !860, line: 103)
!860 = !DISubprogram(name: "islower", linkageName: "_Z7isloweri", scope: !846, file: !846, line: 249, type: !847, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!861 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !862, line: 111)
!862 = !DISubprogram(name: "isprint", linkageName: "_Z7isprinti", scope: !846, file: !846, line: 255, type: !847, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!863 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !864, line: 119)
!864 = !DISubprogram(name: "ispunct", linkageName: "_Z7ispuncti", scope: !846, file: !846, line: 261, type: !847, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!865 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !866, line: 127)
!866 = !DISubprogram(name: "isspace", linkageName: "_Z7isspacei", scope: !846, file: !846, line: 267, type: !847, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!867 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !868, line: 135)
!868 = !DISubprogram(name: "isupper", linkageName: "_Z7isupperi", scope: !846, file: !846, line: 273, type: !847, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!869 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !870, line: 143)
!870 = !DISubprogram(name: "isxdigit", linkageName: "_Z8isxdigiti", scope: !846, file: !846, line: 280, type: !847, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!871 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !872, line: 151)
!872 = !DISubprogram(name: "tolower", linkageName: "_Z7toloweri", scope: !846, file: !846, line: 292, type: !847, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!873 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !874, line: 159)
!874 = !DISubprogram(name: "toupper", linkageName: "_Z7toupperi", scope: !846, file: !846, line: 298, type: !847, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!875 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !876, line: 69)
!876 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !877, line: 30, baseType: !878)
!877 = !DIFile(filename: "/usr/include/sys/_types/_size_t.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!878 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_size_t", file: !621, line: 92, baseType: !879)
!879 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!880 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !881, line: 70)
!881 = !DISubprogram(name: "memcpy", scope: !882, file: !882, line: 72, type: !883, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!882 = !DIFile(filename: "/usr/include/string.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!883 = !DISubroutineType(types: !884)
!884 = !{!602, !602, !885, !876}
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64, align: 64)
!886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!887 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !888, line: 71)
!888 = !DISubprogram(name: "memmove", scope: !882, file: !882, line: 73, type: !883, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!889 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !890, line: 72)
!890 = !DISubprogram(name: "strcpy", scope: !882, file: !882, line: 79, type: !891, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!891 = !DISubroutineType(types: !892)
!892 = !{!611, !611, !626}
!893 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !894, line: 73)
!894 = !DISubprogram(name: "strncpy", scope: !882, file: !882, line: 85, type: !895, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!895 = !DISubroutineType(types: !896)
!896 = !{!611, !611, !626, !876}
!897 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !898, line: 74)
!898 = !DISubprogram(name: "strcat", scope: !882, file: !882, line: 75, type: !891, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!899 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !900, line: 75)
!900 = !DISubprogram(name: "strncat", scope: !882, file: !882, line: 83, type: !895, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!901 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !902, line: 76)
!902 = !DISubprogram(name: "memcmp", scope: !882, file: !882, line: 71, type: !903, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!903 = !DISubroutineType(types: !904)
!904 = !{!576, !885, !885, !876}
!905 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !906, line: 77)
!906 = !DISubprogram(name: "strcmp", scope: !882, file: !882, line: 77, type: !907, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!907 = !DISubroutineType(types: !908)
!908 = !{!576, !626, !626}
!909 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !910, line: 78)
!910 = !DISubprogram(name: "strncmp", scope: !882, file: !882, line: 84, type: !911, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!911 = !DISubroutineType(types: !912)
!912 = !{!576, !626, !626, !876}
!913 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !914, line: 79)
!914 = !DISubprogram(name: "strcoll", scope: !882, file: !882, line: 78, type: !907, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!915 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !916, line: 80)
!916 = !DISubprogram(name: "strxfrm", scope: !882, file: !882, line: 91, type: !917, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!917 = !DISubroutineType(types: !918)
!918 = !{!876, !611, !626, !876}
!919 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !920, line: 82)
!920 = !DISubprogram(name: "memchr", scope: !882, file: !882, line: 70, type: !921, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!921 = !DISubroutineType(types: !922)
!922 = !{!602, !885, !576, !876}
!923 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !924, line: 84)
!924 = !DISubprogram(name: "strchr", scope: !882, file: !882, line: 76, type: !925, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!925 = !DISubroutineType(types: !926)
!926 = !{!611, !626, !576}
!927 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !928, line: 86)
!928 = !DISubprogram(name: "strcspn", scope: !882, file: !882, line: 80, type: !929, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!929 = !DISubroutineType(types: !930)
!930 = !{!876, !626, !626}
!931 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !932, line: 88)
!932 = !DISubprogram(name: "strpbrk", scope: !882, file: !882, line: 86, type: !933, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!933 = !DISubroutineType(types: !934)
!934 = !{!611, !626, !626}
!935 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !936, line: 90)
!936 = !DISubprogram(name: "strrchr", scope: !882, file: !882, line: 87, type: !925, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!937 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !938, line: 92)
!938 = !DISubprogram(name: "strspn", scope: !882, file: !882, line: 88, type: !929, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!939 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !940, line: 94)
!940 = !DISubprogram(name: "strstr", scope: !882, file: !882, line: 89, type: !933, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!941 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !942, line: 105)
!942 = !DISubprogram(name: "strtok", scope: !882, file: !882, line: 90, type: !891, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!943 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !944, line: 106)
!944 = !DISubprogram(name: "memset", scope: !882, file: !882, line: 74, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!945 = !DISubroutineType(types: !946)
!946 = !{!602, !602, !576, !876}
!947 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !948, line: 107)
!948 = !DISubprogram(name: "strerror", linkageName: "\01_strerror", scope: !882, file: !882, line: 81, type: !949, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!949 = !DISubroutineType(types: !950)
!950 = !{!611, !576}
!951 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !952, line: 108)
!952 = !DISubprogram(name: "strlen", scope: !882, file: !882, line: 82, type: !953, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!953 = !DISubroutineType(types: !954)
!954 = !{!876, !626}
!955 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !876, line: 97)
!956 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !957, line: 98)
!957 = !DIDerivedType(tag: DW_TAG_typedef, name: "div_t", file: !573, line: 85, baseType: !"_ZTS5div_t")
!958 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !959, line: 99)
!959 = !DIDerivedType(tag: DW_TAG_typedef, name: "ldiv_t", file: !573, line: 90, baseType: !"_ZTS6ldiv_t")
!960 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !961, line: 101)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "lldiv_t", file: !573, line: 96, baseType: !"_ZTS7lldiv_t")
!962 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !963, line: 103)
!963 = !DISubprogram(name: "atof", scope: !573, file: !573, line: 131, type: !964, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!964 = !DISubroutineType(types: !965)
!965 = !{!671, !626}
!966 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !967, line: 104)
!967 = !DISubprogram(name: "atoi", scope: !573, file: !573, line: 132, type: !968, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!968 = !DISubroutineType(types: !969)
!969 = !{!576, !626}
!970 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !971, line: 105)
!971 = !DISubprogram(name: "atol", scope: !573, file: !573, line: 133, type: !972, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!972 = !DISubroutineType(types: !973)
!973 = !{!581, !626}
!974 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !975, line: 107)
!975 = !DISubprogram(name: "atoll", scope: !573, file: !573, line: 136, type: !976, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!976 = !DISubroutineType(types: !977)
!977 = !{!586, !626}
!978 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !979, line: 109)
!979 = !DISubprogram(name: "strtod", linkageName: "\01_strtod", scope: !573, file: !573, line: 162, type: !980, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!980 = !DISubroutineType(types: !981)
!981 = !{!671, !626, !982}
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64, align: 64)
!983 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !984, line: 110)
!984 = !DISubprogram(name: "strtof", linkageName: "\01_strtof", scope: !573, file: !573, line: 163, type: !985, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!985 = !DISubroutineType(types: !986)
!986 = !{!686, !626, !982}
!987 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !988, line: 111)
!988 = !DISubprogram(name: "strtold", scope: !573, file: !573, line: 166, type: !989, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!989 = !DISubroutineType(types: !990)
!990 = !{!991, !626, !982}
!991 = !DIBasicType(name: "long double", size: 128, align: 128, encoding: DW_ATE_float)
!992 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !993, line: 112)
!993 = !DISubprogram(name: "strtol", scope: !573, file: !573, line: 164, type: !994, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!994 = !DISubroutineType(types: !995)
!995 = !{!581, !626, !982, !576}
!996 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !997, line: 114)
!997 = !DISubprogram(name: "strtoll", scope: !573, file: !573, line: 169, type: !998, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!998 = !DISubroutineType(types: !999)
!999 = !{!586, !626, !982, !576}
!1000 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1001, line: 116)
!1001 = !DISubprogram(name: "strtoul", scope: !573, file: !573, line: 172, type: !1002, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!879, !626, !982, !576}
!1004 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1005, line: 118)
!1005 = !DISubprogram(name: "strtoull", scope: !573, file: !573, line: 175, type: !1006, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!1008, !626, !982, !576}
!1008 = !DIBasicType(name: "long long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1009 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1010, line: 120)
!1010 = !DISubprogram(name: "rand", scope: !573, file: !573, line: 159, type: !1011, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!576}
!1013 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1014, line: 121)
!1014 = !DISubprogram(name: "srand", scope: !573, file: !573, line: 161, type: !1015, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{null, !651}
!1017 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1018, line: 122)
!1018 = !DISubprogram(name: "calloc", scope: !573, file: !573, line: 140, type: !1019, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!602, !876, !876}
!1021 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1022, line: 123)
!1022 = !DISubprogram(name: "free", scope: !573, file: !573, line: 143, type: !1023, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1023 = !DISubroutineType(types: !1024)
!1024 = !{null, !602}
!1025 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1026, line: 124)
!1026 = !DISubprogram(name: "malloc", scope: !573, file: !573, line: 152, type: !1027, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!602, !876}
!1029 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1030, line: 125)
!1030 = !DISubprogram(name: "realloc", scope: !573, file: !573, line: 160, type: !1031, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{!602, !602, !876}
!1033 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1034, line: 126)
!1034 = !DISubprogram(name: "abort", scope: !573, file: !573, line: 128, type: !1035, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{null}
!1037 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1038, line: 127)
!1038 = !DISubprogram(name: "atexit", scope: !573, file: !573, line: 130, type: !1039, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{!576, !1041}
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64, align: 64)
!1042 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1043, line: 128)
!1043 = !DISubprogram(name: "exit", scope: !573, file: !573, line: 142, type: !1044, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{null, !576}
!1046 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1047, line: 129)
!1047 = !DISubprogram(name: "_Exit", scope: !1048, file: !1048, line: 640, type: !1044, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1048 = !DIFile(filename: "/usr/include/unistd.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!1049 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1050, line: 130)
!1050 = !DISubprogram(name: "getenv", scope: !573, file: !573, line: 144, type: !1051, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{!611, !626}
!1053 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1054, line: 131)
!1054 = !DISubprogram(name: "system", linkageName: "\01_system", scope: !573, file: !573, line: 177, type: !968, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1055 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1056, line: 132)
!1056 = !DISubprogram(name: "bsearch", scope: !573, file: !573, line: 138, type: !1057, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!602, !885, !885, !876, !876, !1059}
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64, align: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!576, !885, !885}
!1062 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1063, line: 133)
!1063 = !DISubprogram(name: "qsort", scope: !573, file: !573, line: 157, type: !1064, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{null, !602, !876, !876, !1059}
!1066 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1067, line: 134)
!1067 = !DISubprogram(name: "abs", scope: !573, file: !573, line: 129, type: !847, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1068 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1069, line: 135)
!1069 = !DISubprogram(name: "labs", scope: !573, file: !573, line: 145, type: !1070, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!581, !581}
!1072 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1073, line: 137)
!1073 = !DISubprogram(name: "llabs", scope: !573, file: !573, line: 149, type: !1074, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!586, !586}
!1076 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1077, line: 139)
!1077 = !DISubprogram(name: "div", scope: !573, file: !573, line: 141, type: !1078, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!957, !576, !576}
!1080 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1081, line: 140)
!1081 = !DISubprogram(name: "ldiv", scope: !573, file: !573, line: 146, type: !1082, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!959, !581, !581}
!1084 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1085, line: 142)
!1085 = !DISubprogram(name: "lldiv", scope: !573, file: !573, line: 150, type: !1086, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!961, !586, !586}
!1088 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1089, line: 144)
!1089 = !DISubprogram(name: "mblen", scope: !573, file: !573, line: 153, type: !1090, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!576, !626, !876}
!1092 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1093, line: 145)
!1093 = !DISubprogram(name: "mbtowc", scope: !573, file: !573, line: 155, type: !1094, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!576, !1096, !626, !876}
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64, align: 64)
!1097 = !DIBasicType(name: "wchar_t", size: 32, align: 32, encoding: DW_ATE_signed)
!1098 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1099, line: 146)
!1099 = !DISubprogram(name: "wctomb", scope: !573, file: !573, line: 179, type: !1100, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!576, !611, !1097}
!1102 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1103, line: 147)
!1103 = !DISubprogram(name: "mbstowcs", scope: !573, file: !573, line: 154, type: !1104, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!876, !1096, !626, !876}
!1106 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1107, line: 148)
!1107 = !DISubprogram(name: "wcstombs", scope: !573, file: !573, line: 178, type: !1108, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!876, !611, !1110, !876}
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64, align: 64)
!1111 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1097)
!1112 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1113, entity: !840, line: 37)
!1113 = !DINamespace(name: "pov_base", scope: null, file: !1114, line: 37)
!1114 = !DIFile(filename: "../../SPEC_CPU2006v1.1/benchspec/CPU2006/453.povray/src/fileinputoutput.h", directory: "/Users/vaspol/Documents/classes/EECS583/ClassProject/source_extraction_scripts")
!1115 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !5, entity: !840, line: 36)
!1116 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !5, entity: !840, line: 72)
!1117 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !5, entity: !840, line: 39)
!1118 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !5, entity: !840, line: 37)
!1119 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !5, entity: !840, line: 38)
!1120 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !5, entity: !840, line: 48)
!1121 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !5, entity: !1113, line: 50)
!1122 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !5, entity: !840, line: 479)
!1123 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !817, line: 143)
!1124 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !617, line: 144)
!1125 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !876, line: 145)
!1126 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1127, line: 147)
!1127 = !DISubprogram(name: "remove", scope: !589, file: !589, line: 263, type: !968, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1128 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1129, line: 148)
!1129 = !DISubprogram(name: "rename", scope: !589, file: !589, line: 264, type: !907, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1130 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1131, line: 149)
!1131 = !DISubprogram(name: "tmpfile", scope: !589, file: !589, line: 271, type: !1132, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!816}
!1134 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1135, line: 150)
!1135 = !DISubprogram(name: "tmpnam", scope: !589, file: !589, line: 276, type: !1136, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!611, !611}
!1138 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1139, line: 151)
!1139 = !DISubprogram(name: "fclose", scope: !589, file: !589, line: 232, type: !1140, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{!576, !816}
!1142 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1143, line: 152)
!1143 = !DISubprogram(name: "fflush", scope: !589, file: !589, line: 235, type: !1140, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1144 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1145, line: 153)
!1145 = !DISubprogram(name: "fopen", linkageName: "\01_fopen", scope: !589, file: !589, line: 242, type: !1146, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1146 = !DISubroutineType(types: !1147)
!1147 = !{!816, !626, !626}
!1148 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1149, line: 154)
!1149 = !DISubprogram(name: "freopen", linkageName: "\01_freopen", scope: !589, file: !589, line: 248, type: !1150, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1150 = !DISubroutineType(types: !1151)
!1151 = !{!816, !626, !626, !816}
!1152 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1153, line: 155)
!1153 = !DISubprogram(name: "setbuf", scope: !589, file: !589, line: 267, type: !1154, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{null, !816, !611}
!1156 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1157, line: 156)
!1157 = !DISubprogram(name: "setvbuf", scope: !589, file: !589, line: 268, type: !1158, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{!576, !816, !611, !576, !876}
!1160 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1161, line: 157)
!1161 = !DISubprogram(name: "fprintf", scope: !589, file: !589, line: 244, type: !1162, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!576, !816, !626, null}
!1164 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1165, line: 158)
!1165 = !DISubprogram(name: "fscanf", scope: !589, file: !589, line: 250, type: !1162, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1166 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1167, line: 159)
!1167 = !DISubprogram(name: "printf", scope: !589, file: !589, line: 259, type: !1168, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!576, !626, null}
!1170 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1171, line: 160)
!1171 = !DISubprogram(name: "scanf", scope: !589, file: !589, line: 266, type: !1168, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1172 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1173, line: 161)
!1173 = !DISubprogram(name: "snprintf", scope: !589, file: !589, line: 421, type: !1174, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{!576, !611, !876, !626, null}
!1176 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1177, line: 162)
!1177 = !DISubprogram(name: "sprintf", scope: !589, file: !589, line: 269, type: !1178, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1178 = !DISubroutineType(types: !1179)
!1179 = !{!576, !611, !626, null}
!1180 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1181, line: 163)
!1181 = !DISubprogram(name: "sscanf", scope: !589, file: !589, line: 270, type: !1182, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!576, !626, !626, null}
!1184 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1185, line: 165)
!1185 = !DISubprogram(name: "vfprintf", scope: !589, file: !589, line: 278, type: !1186, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1186 = !DISubroutineType(types: !1187)
!1187 = !{!576, !816, !626, !1188}
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64, align: 64)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "__va_list_tag", file: !1, baseType: !"_ZTS13__va_list_tag")
!1190 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1191, line: 166)
!1191 = !DISubprogram(name: "vfscanf", scope: !589, file: !589, line: 422, type: !1186, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1192 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1193, line: 167)
!1193 = !DISubprogram(name: "vscanf", scope: !589, file: !589, line: 423, type: !1194, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!576, !626, !1188}
!1196 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1197, line: 168)
!1197 = !DISubprogram(name: "vsscanf", scope: !589, file: !589, line: 425, type: !1198, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1198 = !DISubroutineType(types: !1199)
!1199 = !{!576, !626, !626, !1188}
!1200 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1201, line: 170)
!1201 = !DISubprogram(name: "vprintf", scope: !589, file: !589, line: 279, type: !1194, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1202 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1203, line: 171)
!1203 = !DISubprogram(name: "vsnprintf", scope: !589, file: !589, line: 424, type: !1204, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{!576, !611, !876, !626, !1188}
!1206 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1207, line: 172)
!1207 = !DISubprogram(name: "vsprintf", scope: !589, file: !589, line: 280, type: !1208, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!576, !611, !626, !1188}
!1210 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1211, line: 173)
!1211 = !DISubprogram(name: "fgetc", scope: !589, file: !589, line: 236, type: !1140, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1212 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1213, line: 174)
!1213 = !DISubprogram(name: "fgets", scope: !589, file: !589, line: 238, type: !1214, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{!611, !611, !576, !816}
!1216 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1217, line: 175)
!1217 = !DISubprogram(name: "fputc", scope: !589, file: !589, line: 245, type: !1218, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1218 = !DISubroutineType(types: !1219)
!1219 = !{!576, !576, !816}
!1220 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1221, line: 176)
!1221 = !DISubprogram(name: "fputs", linkageName: "\01_fputs", scope: !589, file: !589, line: 246, type: !1222, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{!576, !626, !816}
!1224 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1225, line: 177)
!1225 = !DISubprogram(name: "getc", scope: !589, file: !589, line: 255, type: !1140, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1226 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1227, line: 178)
!1227 = !DISubprogram(name: "getchar", scope: !589, file: !589, line: 256, type: !1011, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1228 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1229, line: 180)
!1229 = !DISubprogram(name: "gets", scope: !589, file: !589, line: 257, type: !1136, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1230 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1231, line: 182)
!1231 = !DISubprogram(name: "putc", scope: !589, file: !589, line: 260, type: !1218, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1232 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1233, line: 183)
!1233 = !DISubprogram(name: "putchar", scope: !589, file: !589, line: 261, type: !847, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1234 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1235, line: 184)
!1235 = !DISubprogram(name: "puts", scope: !589, file: !589, line: 262, type: !968, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1236 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1237, line: 185)
!1237 = !DISubprogram(name: "ungetc", scope: !589, file: !589, line: 277, type: !1218, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1238 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1239, line: 186)
!1239 = !DISubprogram(name: "fread", scope: !589, file: !589, line: 247, type: !1240, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!876, !602, !876, !876, !816}
!1242 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1243, line: 187)
!1243 = !DISubprogram(name: "fwrite", linkageName: "\01_fwrite", scope: !589, file: !589, line: 254, type: !1244, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{!876, !885, !876, !876, !816}
!1246 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1247, line: 188)
!1247 = !DISubprogram(name: "fgetpos", scope: !589, file: !589, line: 237, type: !1248, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{!576, !816, !1250}
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64, align: 64)
!1251 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1252, line: 189)
!1252 = !DISubprogram(name: "fseek", scope: !589, file: !589, line: 251, type: !1253, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!576, !816, !581, !576}
!1255 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1256, line: 190)
!1256 = !DISubprogram(name: "fsetpos", scope: !589, file: !589, line: 252, type: !1257, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{!576, !816, !1259}
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64, align: 64)
!1260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !617)
!1261 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1262, line: 191)
!1262 = !DISubprogram(name: "ftell", scope: !589, file: !589, line: 253, type: !1263, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!581, !816}
!1265 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1266, line: 192)
!1266 = !DISubprogram(name: "rewind", scope: !589, file: !589, line: 265, type: !1267, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{null, !816}
!1269 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1270, line: 193)
!1270 = !DISubprogram(name: "clearerr", scope: !589, file: !589, line: 231, type: !1267, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1271 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1272, line: 194)
!1272 = !DISubprogram(name: "feof", scope: !589, file: !589, line: 233, type: !1140, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1273 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1274, line: 195)
!1274 = !DISubprogram(name: "ferror", scope: !589, file: !589, line: 234, type: !1140, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1275 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !843, entity: !1276, line: 196)
!1276 = !DISubprogram(name: "perror", scope: !589, file: !589, line: 258, type: !1277, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: true)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{null, !626}
!1279 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1113, entity: !840, line: 41)
!1280 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1113, entity: !840, line: 50)
!1281 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !5, entity: !840, line: 40)
!1282 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !5, entity: !1113, line: 42)
!1283 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !5, entity: !840, line: 46)
!1284 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !5, entity: !840, line: 41)
!1285 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !5, entity: !840, line: 35)
!1286 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !5, entity: !840, line: 47)
!1287 = !{i32 2, !"Dwarf Version", i32 2}
!1288 = !{i32 2, !"Debug Info Version", i32 700000003}
!1289 = !{i32 1, !"PIC Level", i32 2}
!1290 = !{!"Apple LLVM version 7.0.0 (clang-700.1.76)"}
!1291 = !DIExpression()
!1292 = !DILocation(line: 193, column: 12, scope: !704)
!1293 = !DILocation(line: 195, column: 15, scope: !704)
!1294 = !DILocation(line: 196, column: 2, scope: !704)
!1295 = !DILocation(line: 198, column: 2, scope: !704)
!1296 = !DILocation(line: 335, column: 12, scope: !723)
!1297 = !DILocation(line: 336, column: 12, scope: !723)
!1298 = !DILocation(line: 495, column: 29, scope: !734, inlinedAt: !1299)
!1299 = distinct !DILocation(line: 341, column: 19, scope: !723)
!1300 = !DILocation(line: 495, column: 40, scope: !734, inlinedAt: !1299)
!1301 = !DILocation(line: 497, column: 12, scope: !734, inlinedAt: !1299)
!1302 = !DILocation(line: 499, column: 21, scope: !734, inlinedAt: !1299)
!1303 = !DILocation(line: 505, column: 8, scope: !734, inlinedAt: !1299)
!1304 = !DILocation(line: 504, column: 14, scope: !734, inlinedAt: !1299)
!1305 = !DILocation(line: 505, column: 11, scope: !734, inlinedAt: !1299)
!1306 = !{!1307, !1311, i64 36}
!1307 = !{!"_ZTSN3pov14ExprNodeStructE", !1308, i64 0, !1308, i64 8, !1308, i64 16, !1308, i64 24, !1311, i64 32, !1311, i64 36, !1309, i64 40}
!1308 = !{!"any pointer", !1309, i64 0}
!1309 = !{!"omnipotent char", !1310, i64 0}
!1310 = !{!"Simple C/C++ TBAA"}
!1311 = !{!"int", !1309, i64 0}
!1312 = !DILocation(line: 341, column: 10, scope: !723)
!1313 = !{!1308, !1308, i64 0}
!1314 = !DILocation(line: 338, column: 6, scope: !723)
!1315 = !DILocation(line: 344, column: 10, scope: !723)
!1316 = !DILocation(line: 337, column: 8, scope: !723)
!1317 = !DILocation(line: 346, column: 2, scope: !723)
!1318 = !DILocation(line: 339, column: 6, scope: !723)
!1319 = !DILocation(line: 351, column: 8, scope: !1320)
!1320 = distinct !DILexicalBlock(scope: !1321, file: !1, line: 351, column: 7)
!1321 = distinct !DILexicalBlock(scope: !1322, file: !1, line: 350, column: 3)
!1322 = distinct !DILexicalBlock(scope: !1323, file: !1, line: 349, column: 3)
!1323 = distinct !DILexicalBlock(scope: !1324, file: !1, line: 349, column: 3)
!1324 = distinct !DILexicalBlock(scope: !723, file: !1, line: 347, column: 2)
!1325 = !DILocation(line: 351, column: 29, scope: !1320)
!1326 = !{!1327, !1311, i64 4}
!1327 = !{!"_ZTSN3pov20ExprParserTableEntryE", !1311, i64 0, !1311, i64 4, !1308, i64 8, !1311, i64 16, !1311, i64 20}
!1328 = !DILocation(line: 351, column: 35, scope: !1320)
!1329 = !DILocation(line: 351, column: 45, scope: !1320)
!1330 = !DILocation(line: 352, column: 35, scope: !1320)
!1331 = !DILocation(line: 349, column: 27, scope: !1322)
!1332 = !DILocation(line: 351, column: 7, scope: !1321)
!1333 = !DILocation(line: 357, column: 27, scope: !1334)
!1334 = distinct !DILexicalBlock(scope: !1324, file: !1, line: 357, column: 6)
!1335 = !{!1327, !1308, i64 8}
!1336 = !DILocation(line: 357, column: 67, scope: !1334)
!1337 = !{!1327, !1311, i64 0}
!1338 = !DILocation(line: 357, column: 95, scope: !1334)
!1339 = !{!1327, !1311, i64 20}
!1340 = !DILocation(line: 357, column: 6, scope: !1334)
!1341 = !DILocation(line: 357, column: 6, scope: !1324)
!1342 = !DILocation(line: 361, column: 32, scope: !1343)
!1343 = distinct !DILexicalBlock(scope: !1324, file: !1, line: 361, column: 6)
!1344 = !DILocation(line: 361, column: 6, scope: !1324)
!1345 = !DILocation(line: 361, column: 27, scope: !1343)
!1346 = !{!1327, !1311, i64 16}
!1347 = !DILocation(line: 363, column: 33, scope: !1348)
!1348 = distinct !DILexicalBlock(scope: !1349, file: !1, line: 363, column: 7)
!1349 = distinct !DILexicalBlock(scope: !1343, file: !1, line: 362, column: 3)
!1350 = !DILocation(line: 363, column: 7, scope: !1349)
!1351 = !DILocation(line: 367, column: 41, scope: !1349)
!1352 = !DILocation(line: 367, column: 47, scope: !1349)
!1353 = !DILocation(line: 367, column: 4, scope: !1349)
!1354 = !DILocation(line: 371, column: 11, scope: !1324)
!1355 = !DILocation(line: 499, column: 9, scope: !734, inlinedAt: !1299)
!1356 = !DILocation(line: 374, column: 2, scope: !723)
!1357 = !DILocation(line: 958, column: 30, scope: !785)
!1358 = !DILocation(line: 965, column: 10, scope: !1359)
!1359 = distinct !DILexicalBlock(scope: !785, file: !1, line: 965, column: 5)
!1360 = !DILocation(line: 965, column: 5, scope: !785)
!1361 = !DILocation(line: 968, column: 11, scope: !1362)
!1362 = distinct !DILexicalBlock(scope: !785, file: !1, line: 968, column: 5)
!1363 = !DILocation(line: 968, column: 14, scope: !1362)
!1364 = !DILocation(line: 968, column: 5, scope: !785)
!1365 = !DILocation(line: 970, column: 17, scope: !1366)
!1366 = distinct !DILexicalBlock(scope: !1367, file: !1, line: 970, column: 6)
!1367 = distinct !DILexicalBlock(scope: !1362, file: !1, line: 969, column: 2)
!1368 = !{!1369, !1311, i64 8}
!1369 = !{!"_ZTSN3pov14ExprNodeStructUt_Ut_E", !1308, i64 0, !1311, i64 8, !1311, i64 12}
!1370 = !DILocation(line: 970, column: 23, scope: !1366)
!1371 = !DILocation(line: 970, column: 6, scope: !1367)
!1372 = !DILocation(line: 972, column: 13, scope: !1373)
!1373 = distinct !DILexicalBlock(scope: !1366, file: !1, line: 971, column: 3)
!1374 = !DILocation(line: 973, column: 4, scope: !1375)
!1375 = distinct !DILexicalBlock(scope: !1373, file: !1, line: 973, column: 4)
!1376 = !{!1369, !1308, i64 0}
!1377 = !DILocation(line: 974, column: 13, scope: !1378)
!1378 = distinct !DILexicalBlock(scope: !1373, file: !1, line: 974, column: 7)
!1379 = !{!1307, !1308, i64 8}
!1380 = !DILocation(line: 974, column: 19, scope: !1378)
!1381 = !DILocation(line: 974, column: 7, scope: !1373)
!1382 = !DILocation(line: 976, column: 18, scope: !1383)
!1383 = distinct !DILexicalBlock(scope: !1378, file: !1, line: 975, column: 4)
!1384 = !DILocation(line: 976, column: 21, scope: !1383)
!1385 = !DILocation(line: 977, column: 21, scope: !1386)
!1386 = distinct !DILexicalBlock(scope: !1383, file: !1, line: 977, column: 8)
!1387 = !{!1307, !1308, i64 24}
!1388 = !DILocation(line: 977, column: 26, scope: !1386)
!1389 = !DILocation(line: 977, column: 8, scope: !1383)
!1390 = !DILocation(line: 979, column: 25, scope: !1391)
!1391 = distinct !DILexicalBlock(scope: !1386, file: !1, line: 978, column: 5)
!1392 = !DILocation(line: 979, column: 28, scope: !1391)
!1393 = !DILocation(line: 980, column: 25, scope: !1391)
!1394 = !DILocation(line: 980, column: 30, scope: !1391)
!1395 = !{!1307, !1308, i64 16}
!1396 = !DILocation(line: 981, column: 5, scope: !1391)
!1397 = !DILocation(line: 986, column: 11, scope: !1398)
!1398 = distinct !DILexicalBlock(scope: !785, file: !1, line: 986, column: 5)
!1399 = !DILocation(line: 986, column: 14, scope: !1398)
!1400 = !DILocation(line: 986, column: 5, scope: !785)
!1401 = !DILocation(line: 988, column: 15, scope: !1402)
!1402 = distinct !DILexicalBlock(scope: !1398, file: !1, line: 987, column: 2)
!1403 = !DILocation(line: 960, column: 25, scope: !785)
!1404 = !DILocation(line: 989, column: 10, scope: !1405)
!1405 = distinct !DILexicalBlock(scope: !1402, file: !1, line: 989, column: 6)
!1406 = !DILocation(line: 989, column: 6, scope: !1402)
!1407 = !DILocation(line: 991, column: 12, scope: !1408)
!1408 = distinct !DILexicalBlock(scope: !1409, file: !1, line: 991, column: 7)
!1409 = distinct !DILexicalBlock(scope: !1405, file: !1, line: 990, column: 3)
!1410 = !DILocation(line: 991, column: 15, scope: !1408)
!1411 = !DILocation(line: 991, column: 7, scope: !1409)
!1412 = !DILocation(line: 997, column: 9, scope: !1413)
!1413 = distinct !DILexicalBlock(scope: !1414, file: !1, line: 996, column: 5)
!1414 = distinct !DILexicalBlock(scope: !1415, file: !1, line: 995, column: 5)
!1415 = distinct !DILexicalBlock(scope: !1416, file: !1, line: 995, column: 5)
!1416 = distinct !DILexicalBlock(scope: !1408, file: !1, line: 992, column: 4)
!1417 = !DILocation(line: 963, column: 9, scope: !785)
!1418 = !DILocation(line: 998, column: 14, scope: !1419)
!1419 = distinct !DILexicalBlock(scope: !1413, file: !1, line: 998, column: 9)
!1420 = !DILocation(line: 998, column: 20, scope: !1419)
!1421 = !DILocation(line: 998, column: 9, scope: !1413)
!1422 = !DILocation(line: 995, column: 51, scope: !1414)
!1423 = !DILocation(line: 995, column: 31, scope: !1414)
!1424 = !DILocation(line: 995, column: 5, scope: !1415)
!1425 = !DILocation(line: 1004, column: 6, scope: !1426)
!1426 = distinct !DILexicalBlock(scope: !1427, file: !1, line: 1003, column: 5)
!1427 = distinct !DILexicalBlock(scope: !1416, file: !1, line: 1002, column: 8)
!1428 = !DILocation(line: 1005, column: 14, scope: !1429)
!1429 = distinct !DILexicalBlock(scope: !1426, file: !1, line: 1005, column: 9)
!1430 = !DILocation(line: 1005, column: 20, scope: !1429)
!1431 = !DILocation(line: 1005, column: 9, scope: !1426)
!1432 = !DILocation(line: 960, column: 12, scope: !785)
!1433 = !DILocation(line: 1008, column: 16, scope: !1434)
!1434 = distinct !DILexicalBlock(scope: !1435, file: !1, line: 1008, column: 10)
!1435 = distinct !DILexicalBlock(scope: !1429, file: !1, line: 1006, column: 6)
!1436 = !DILocation(line: 1008, column: 19, scope: !1434)
!1437 = !DILocation(line: 1008, column: 10, scope: !1435)
!1438 = !DILocation(line: 1010, column: 19, scope: !1439)
!1439 = distinct !DILexicalBlock(scope: !1434, file: !1, line: 1009, column: 7)
!1440 = !DILocation(line: 1012, column: 17, scope: !1441)
!1441 = distinct !DILexicalBlock(scope: !1439, file: !1, line: 1012, column: 11)
!1442 = !DILocation(line: 1012, column: 22, scope: !1441)
!1443 = !DILocation(line: 1012, column: 11, scope: !1439)
!1444 = !DILocation(line: 1013, column: 9, scope: !1441)
!1445 = !DILocation(line: 1017, column: 22, scope: !1446)
!1446 = distinct !DILexicalBlock(scope: !1447, file: !1, line: 1017, column: 12)
!1447 = distinct !DILexicalBlock(scope: !1448, file: !1, line: 1016, column: 8)
!1448 = distinct !DILexicalBlock(scope: !1439, file: !1, line: 1015, column: 11)
!1449 = !DILocation(line: 1018, column: 32, scope: !1446)
!1450 = !{!1451, !1451, i64 0}
!1451 = !{!"double", !1309, i64 0}
!1452 = !DILocation(line: 1017, column: 12, scope: !1447)
!1453 = !DILocation(line: 1018, column: 16, scope: !1446)
!1454 = !DILocation(line: 1018, column: 23, scope: !1446)
!1455 = !DILocation(line: 1018, column: 10, scope: !1446)
!1456 = !DILocation(line: 1020, column: 25, scope: !1446)
!1457 = !DILocation(line: 1020, column: 16, scope: !1446)
!1458 = !DILocation(line: 1020, column: 23, scope: !1446)
!1459 = !DILocation(line: 1022, column: 8, scope: !1460)
!1460 = distinct !DILexicalBlock(scope: !1439, file: !1, line: 1022, column: 8)
!1461 = !DILocation(line: 1023, column: 17, scope: !1439)
!1462 = !DILocation(line: 1024, column: 14, scope: !1439)
!1463 = !DILocation(line: 1027, column: 8, scope: !1439)
!1464 = !DILocation(line: 1025, column: 19, scope: !1439)
!1465 = !DILocation(line: 1034, column: 23, scope: !1402)
!1466 = !DILocation(line: 1034, column: 3, scope: !1402)
!1467 = !DILocation(line: 1035, column: 19, scope: !1468)
!1468 = distinct !DILexicalBlock(scope: !1402, file: !1, line: 1035, column: 3)
!1469 = !DILocation(line: 1035, column: 29, scope: !1470)
!1470 = distinct !DILexicalBlock(scope: !1468, file: !1, line: 1035, column: 3)
!1471 = !DILocation(line: 1035, column: 3, scope: !1468)
!1472 = !DILocation(line: 1037, column: 16, scope: !1473)
!1473 = distinct !DILexicalBlock(scope: !1470, file: !1, line: 1036, column: 3)
!1474 = !DILocation(line: 1037, column: 22, scope: !1473)
!1475 = !DILocation(line: 1038, column: 17, scope: !1473)
!1476 = !DILocation(line: 960, column: 18, scope: !785)
!1477 = !DILocation(line: 1040, column: 14, scope: !1478)
!1478 = distinct !DILexicalBlock(scope: !1473, file: !1, line: 1040, column: 7)
!1479 = !DILocation(line: 1040, column: 23, scope: !1478)
!1480 = !DILocation(line: 1049, column: 4, scope: !1473)
!1481 = !DILocation(line: 1051, column: 22, scope: !1482)
!1482 = distinct !DILexicalBlock(scope: !1473, file: !1, line: 1051, column: 7)
!1483 = !DILocation(line: 1040, column: 32, scope: !1478)
!1484 = !DILocation(line: 1040, column: 35, scope: !1478)
!1485 = !DILocation(line: 1040, column: 7, scope: !1473)
!1486 = !DILocation(line: 1042, column: 15, scope: !1487)
!1487 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 1042, column: 8)
!1488 = distinct !DILexicalBlock(scope: !1478, file: !1, line: 1041, column: 4)
!1489 = !DILocation(line: 1042, column: 18, scope: !1487)
!1490 = !DILocation(line: 1042, column: 8, scope: !1488)
!1491 = !DILocation(line: 1044, column: 14, scope: !1492)
!1492 = distinct !DILexicalBlock(scope: !1487, file: !1, line: 1043, column: 5)
!1493 = !DILocation(line: 1045, column: 30, scope: !1492)
!1494 = !DILocation(line: 1045, column: 22, scope: !1492)
!1495 = !DILocation(line: 1045, column: 20, scope: !1492)
!1496 = !DILocation(line: 1046, column: 5, scope: !1492)
!1497 = !DILocation(line: 1051, column: 13, scope: !1482)
!1498 = !DILocation(line: 1052, column: 15, scope: !1482)
!1499 = !DILocation(line: 1052, column: 29, scope: !1482)
!1500 = !DILocation(line: 1053, column: 9, scope: !1482)
!1501 = !DILocation(line: 1051, column: 7, scope: !1473)
!1502 = !DILocation(line: 1055, column: 15, scope: !1503)
!1503 = distinct !DILexicalBlock(scope: !1504, file: !1, line: 1055, column: 8)
!1504 = distinct !DILexicalBlock(scope: !1482, file: !1, line: 1054, column: 4)
!1505 = !DILocation(line: 1055, column: 18, scope: !1503)
!1506 = !DILocation(line: 1055, column: 34, scope: !1503)
!1507 = !DILocation(line: 1055, column: 45, scope: !1503)
!1508 = !DILocation(line: 1055, column: 48, scope: !1503)
!1509 = !DILocation(line: 1055, column: 8, scope: !1504)
!1510 = !DILocation(line: 962, column: 7, scope: !785)
!1511 = !DILocation(line: 1059, column: 6, scope: !1512)
!1512 = distinct !DILexicalBlock(scope: !1503, file: !1, line: 1056, column: 5)
!1513 = !DILocation(line: 1062, column: 24, scope: !1514)
!1514 = distinct !DILexicalBlock(scope: !1512, file: !1, line: 1060, column: 6)
!1515 = !DILocation(line: 1062, column: 41, scope: !1514)
!1516 = !DILocation(line: 1062, column: 31, scope: !1514)
!1517 = !DILocation(line: 1062, column: 17, scope: !1514)
!1518 = !DILocation(line: 961, column: 6, scope: !785)
!1519 = !DILocation(line: 1063, column: 8, scope: !1514)
!1520 = !DILocation(line: 1065, column: 24, scope: !1514)
!1521 = !DILocation(line: 1065, column: 41, scope: !1514)
!1522 = !DILocation(line: 1065, column: 31, scope: !1514)
!1523 = !DILocation(line: 1065, column: 17, scope: !1514)
!1524 = !DILocation(line: 1066, column: 8, scope: !1514)
!1525 = !DILocation(line: 1068, column: 24, scope: !1514)
!1526 = !DILocation(line: 1068, column: 40, scope: !1514)
!1527 = !DILocation(line: 1068, column: 31, scope: !1514)
!1528 = !DILocation(line: 1068, column: 17, scope: !1514)
!1529 = !DILocation(line: 1069, column: 8, scope: !1514)
!1530 = !DILocation(line: 1071, column: 24, scope: !1514)
!1531 = !DILocation(line: 1071, column: 41, scope: !1514)
!1532 = !DILocation(line: 1071, column: 31, scope: !1514)
!1533 = !DILocation(line: 1071, column: 17, scope: !1514)
!1534 = !DILocation(line: 1072, column: 8, scope: !1514)
!1535 = !DILocation(line: 1074, column: 24, scope: !1514)
!1536 = !DILocation(line: 1074, column: 40, scope: !1514)
!1537 = !DILocation(line: 1074, column: 31, scope: !1514)
!1538 = !DILocation(line: 1074, column: 17, scope: !1514)
!1539 = !DILocation(line: 1075, column: 8, scope: !1514)
!1540 = !DILocation(line: 1077, column: 24, scope: !1514)
!1541 = !DILocation(line: 1077, column: 41, scope: !1514)
!1542 = !DILocation(line: 1077, column: 31, scope: !1514)
!1543 = !DILocation(line: 1077, column: 17, scope: !1514)
!1544 = !DILocation(line: 1078, column: 8, scope: !1514)
!1545 = !DILocation(line: 1080, column: 24, scope: !1514)
!1546 = !DILocation(line: 1080, column: 40, scope: !1514)
!1547 = !DILocation(line: 1080, column: 31, scope: !1514)
!1548 = !DILocation(line: 1081, column: 8, scope: !1514)
!1549 = !DILocation(line: 1083, column: 24, scope: !1514)
!1550 = !DILocation(line: 1083, column: 40, scope: !1514)
!1551 = !DILocation(line: 1083, column: 31, scope: !1514)
!1552 = !DILocation(line: 1084, column: 8, scope: !1514)
!1553 = !DILocation(line: 1086, column: 44, scope: !1514)
!1554 = !DILocation(line: 1086, column: 51, scope: !1514)
!1555 = !DILocation(line: 1086, column: 37, scope: !1514)
!1556 = !DILocation(line: 1086, column: 74, scope: !1514)
!1557 = !DILocation(line: 1086, column: 81, scope: !1514)
!1558 = !DILocation(line: 1086, column: 66, scope: !1514)
!1559 = !DILocation(line: 1086, column: 58, scope: !1514)
!1560 = !DILocation(line: 1086, column: 91, scope: !1514)
!1561 = !DILocation(line: 1086, column: 22, scope: !1514)
!1562 = !DILocation(line: 1087, column: 8, scope: !1514)
!1563 = !DILocation(line: 1089, column: 24, scope: !1514)
!1564 = !DILocation(line: 1089, column: 40, scope: !1514)
!1565 = !DILocation(line: 1089, column: 31, scope: !1514)
!1566 = !DILocation(line: 1090, column: 8, scope: !1514)
!1567 = !DILocation(line: 1092, column: 24, scope: !1514)
!1568 = !DILocation(line: 1092, column: 40, scope: !1514)
!1569 = !DILocation(line: 1092, column: 31, scope: !1514)
!1570 = !DILocation(line: 1093, column: 8, scope: !1514)
!1571 = !DILocation(line: 1095, column: 37, scope: !1514)
!1572 = !DILocation(line: 1095, column: 44, scope: !1514)
!1573 = !DILocation(line: 1095, column: 30, scope: !1514)
!1574 = !DILocation(line: 1095, column: 67, scope: !1514)
!1575 = !DILocation(line: 1095, column: 74, scope: !1514)
!1576 = !DILocation(line: 1095, column: 59, scope: !1514)
!1577 = !DILocation(line: 1095, column: 51, scope: !1514)
!1578 = !DILocation(line: 1096, column: 8, scope: !1514)
!1579 = !DILocation(line: 1098, column: 27, scope: !1514)
!1580 = !DILocation(line: 1098, column: 42, scope: !1514)
!1581 = !DILocation(line: 1098, column: 17, scope: !1514)
!1582 = !DILocation(line: 1099, column: 8, scope: !1514)
!1583 = !DILocation(line: 960, column: 30, scope: !785)
!1584 = !DILocation(line: 1108, column: 30, scope: !1585)
!1585 = distinct !DILexicalBlock(scope: !1586, file: !1, line: 1106, column: 6)
!1586 = distinct !DILexicalBlock(scope: !1512, file: !1, line: 1105, column: 9)
!1587 = !DILocation(line: 1108, column: 12, scope: !1585)
!1588 = !DILocation(line: 1108, column: 18, scope: !1585)
!1589 = !DILocation(line: 1108, column: 23, scope: !1585)
!1590 = !DILocation(line: 1109, column: 15, scope: !1591)
!1591 = distinct !DILexicalBlock(scope: !1585, file: !1, line: 1109, column: 10)
!1592 = !DILocation(line: 1109, column: 20, scope: !1591)
!1593 = !DILocation(line: 1109, column: 10, scope: !1585)
!1594 = !DILocation(line: 1110, column: 19, scope: !1591)
!1595 = !DILocation(line: 1110, column: 24, scope: !1591)
!1596 = !DILocation(line: 1111, column: 18, scope: !1585)
!1597 = !DILocation(line: 1110, column: 8, scope: !1591)
!1598 = !DILocation(line: 1112, column: 7, scope: !1599)
!1599 = distinct !DILexicalBlock(scope: !1585, file: !1, line: 1112, column: 7)
!1600 = !DILocation(line: 1113, column: 7, scope: !1601)
!1601 = distinct !DILexicalBlock(scope: !1585, file: !1, line: 1113, column: 7)
!1602 = !DILocation(line: 1114, column: 13, scope: !1585)
!1603 = !DILocation(line: 1114, column: 20, scope: !1585)
!1604 = !DILocation(line: 1115, column: 6, scope: !1585)
!1605 = !DILocation(line: 1035, column: 49, scope: !1470)
!1606 = !DILocation(line: 1119, column: 13, scope: !1607)
!1607 = distinct !DILexicalBlock(scope: !1402, file: !1, line: 1119, column: 6)
!1608 = !DILocation(line: 1119, column: 27, scope: !1607)
!1609 = !DILocation(line: 1119, column: 37, scope: !1607)
!1610 = !DILocation(line: 1119, column: 43, scope: !1607)
!1611 = !DILocation(line: 1119, column: 52, scope: !1607)
!1612 = !DILocation(line: 1119, column: 62, scope: !1607)
!1613 = !DILocation(line: 1119, column: 65, scope: !1607)
!1614 = !DILocation(line: 1119, column: 6, scope: !1402)
!1615 = !DILocation(line: 1121, column: 21, scope: !1616)
!1616 = distinct !DILexicalBlock(scope: !1617, file: !1, line: 1121, column: 7)
!1617 = distinct !DILexicalBlock(scope: !1607, file: !1, line: 1120, column: 3)
!1618 = !DILocation(line: 1121, column: 24, scope: !1616)
!1619 = !DILocation(line: 1121, column: 40, scope: !1616)
!1620 = !DILocation(line: 1121, column: 57, scope: !1616)
!1621 = !DILocation(line: 1121, column: 62, scope: !1616)
!1622 = !DILocation(line: 1121, column: 7, scope: !1617)
!1623 = !DILocation(line: 1123, column: 26, scope: !1624)
!1624 = distinct !DILexicalBlock(scope: !1616, file: !1, line: 1122, column: 4)
!1625 = !DILocation(line: 1123, column: 11, scope: !1624)
!1626 = !DILocation(line: 1123, column: 18, scope: !1624)
!1627 = !DILocation(line: 1124, column: 14, scope: !1624)
!1628 = !DILocation(line: 1125, column: 5, scope: !1629)
!1629 = distinct !DILexicalBlock(scope: !1624, file: !1, line: 1125, column: 5)
!1630 = !DILocation(line: 1126, column: 17, scope: !1624)
!1631 = !DILocation(line: 1127, column: 4, scope: !1624)
!1632 = !DILocation(line: 1132, column: 23, scope: !1633)
!1633 = distinct !DILexicalBlock(scope: !1398, file: !1, line: 1131, column: 2)
!1634 = !DILocation(line: 1132, column: 3, scope: !1633)
!1635 = !DILocation(line: 1134, column: 3, scope: !1633)
!1636 = !DILocation(line: 1136, column: 13, scope: !1637)
!1637 = distinct !DILexicalBlock(scope: !1633, file: !1, line: 1136, column: 6)
!1638 = !DILocation(line: 1136, column: 19, scope: !1637)
!1639 = !DILocation(line: 1136, column: 28, scope: !1637)
!1640 = !DILocation(line: 1136, column: 38, scope: !1637)
!1641 = !DILocation(line: 1136, column: 41, scope: !1637)
!1642 = !DILocation(line: 1136, column: 6, scope: !1633)
!1643 = !DILocation(line: 1138, column: 21, scope: !1644)
!1644 = distinct !DILexicalBlock(scope: !1645, file: !1, line: 1138, column: 7)
!1645 = distinct !DILexicalBlock(scope: !1637, file: !1, line: 1137, column: 3)
!1646 = !DILocation(line: 1138, column: 24, scope: !1644)
!1647 = !DILocation(line: 1138, column: 40, scope: !1644)
!1648 = !DILocation(line: 1138, column: 57, scope: !1644)
!1649 = !DILocation(line: 1138, column: 62, scope: !1644)
!1650 = !DILocation(line: 1138, column: 7, scope: !1645)
!1651 = !DILocation(line: 1140, column: 33, scope: !1652)
!1652 = distinct !DILexicalBlock(scope: !1644, file: !1, line: 1139, column: 4)
!1653 = !DILocation(line: 1140, column: 11, scope: !1652)
!1654 = !DILocation(line: 1140, column: 18, scope: !1652)
!1655 = !DILocation(line: 1141, column: 5, scope: !1656)
!1656 = distinct !DILexicalBlock(scope: !1652, file: !1, line: 1141, column: 5)
!1657 = !DILocation(line: 1142, column: 17, scope: !1652)
!1658 = !DILocation(line: 1143, column: 14, scope: !1652)
!1659 = !DILocation(line: 1144, column: 4, scope: !1652)
!1660 = !DILocation(line: 1147, column: 1, scope: !785)
!1661 = !DILocation(line: 232, column: 51, scope: !709)
!1662 = !DILocation(line: 234, column: 12, scope: !709)
!1663 = !DILocation(line: 495, column: 29, scope: !734, inlinedAt: !1664)
!1664 = distinct !DILocation(line: 236, column: 15, scope: !709)
!1665 = !DILocation(line: 495, column: 40, scope: !734, inlinedAt: !1664)
!1666 = !DILocation(line: 497, column: 12, scope: !734, inlinedAt: !1664)
!1667 = !DILocation(line: 499, column: 21, scope: !734, inlinedAt: !1664)
!1668 = !DILocation(line: 499, column: 9, scope: !734, inlinedAt: !1664)
!1669 = !DILocation(line: 505, column: 8, scope: !734, inlinedAt: !1664)
!1670 = !DILocation(line: 504, column: 14, scope: !734, inlinedAt: !1664)
!1671 = !DILocation(line: 505, column: 11, scope: !734, inlinedAt: !1664)
!1672 = !DILocation(line: 237, column: 14, scope: !709)
!1673 = !DILocation(line: 237, column: 19, scope: !709)
!1674 = !{!1311, !1311, i64 0}
!1675 = !DILocation(line: 239, column: 2, scope: !709)
!1676 = !DILocation(line: 495, column: 29, scope: !734)
!1677 = !DILocation(line: 495, column: 40, scope: !734)
!1678 = !DILocation(line: 497, column: 12, scope: !734)
!1679 = !DILocation(line: 499, column: 21, scope: !734)
!1680 = !DILocation(line: 499, column: 9, scope: !734)
!1681 = !DILocation(line: 504, column: 8, scope: !734)
!1682 = !DILocation(line: 501, column: 14, scope: !734)
!1683 = !DILocation(line: 504, column: 14, scope: !734)
!1684 = !{!1307, !1311, i64 32}
!1685 = !DILocation(line: 505, column: 8, scope: !734)
!1686 = !DILocation(line: 505, column: 11, scope: !734)
!1687 = !DILocation(line: 507, column: 2, scope: !734)
!1688 = !DILocation(line: 271, column: 42, scope: !715)
!1689 = !DILocation(line: 273, column: 12, scope: !715)
!1690 = !DILocation(line: 275, column: 16, scope: !722)
!1691 = !DILocation(line: 275, column: 28, scope: !1692)
!1692 = distinct !DILexicalBlock(scope: !722, file: !1, line: 275, column: 2)
!1693 = !DILocation(line: 275, column: 2, scope: !722)
!1694 = !DILocation(line: 277, column: 6, scope: !1695)
!1695 = distinct !DILexicalBlock(scope: !1692, file: !1, line: 276, column: 2)
!1696 = !DILocation(line: 279, column: 4, scope: !1697)
!1697 = distinct !DILexicalBlock(scope: !1698, file: !1, line: 279, column: 4)
!1698 = distinct !DILexicalBlock(scope: !1699, file: !1, line: 278, column: 3)
!1699 = distinct !DILexicalBlock(scope: !1695, file: !1, line: 277, column: 6)
!1700 = !DILocation(line: 280, column: 3, scope: !1698)
!1701 = !DILocation(line: 282, column: 32, scope: !1695)
!1702 = !DILocation(line: 282, column: 3, scope: !1695)
!1703 = !DILocation(line: 284, column: 10, scope: !1704)
!1704 = distinct !DILexicalBlock(scope: !1695, file: !1, line: 284, column: 6)
!1705 = !DILocation(line: 284, column: 29, scope: !1704)
!1706 = !DILocation(line: 286, column: 4, scope: !1707)
!1707 = distinct !DILexicalBlock(scope: !1708, file: !1, line: 286, column: 4)
!1708 = distinct !DILexicalBlock(scope: !1704, file: !1, line: 285, column: 3)
!1709 = !DILocation(line: 287, column: 3, scope: !1708)
!1710 = !DILocation(line: 290, column: 16, scope: !1711)
!1711 = distinct !DILexicalBlock(scope: !1712, file: !1, line: 290, column: 7)
!1712 = distinct !DILexicalBlock(scope: !1713, file: !1, line: 289, column: 3)
!1713 = distinct !DILexicalBlock(scope: !1704, file: !1, line: 288, column: 11)
!1714 = !DILocation(line: 290, column: 41, scope: !1711)
!1715 = !DILocation(line: 291, column: 35, scope: !1711)
!1716 = !{!1369, !1311, i64 12}
!1717 = !DILocation(line: 291, column: 5, scope: !1711)
!1718 = !DILocation(line: 292, column: 4, scope: !1719)
!1719 = distinct !DILexicalBlock(scope: !1712, file: !1, line: 292, column: 4)
!1720 = !DILocation(line: 293, column: 3, scope: !1712)
!1721 = !DILocation(line: 275, column: 44, scope: !1692)
!1722 = !DILocation(line: 300, column: 3, scope: !1723)
!1723 = distinct !DILexicalBlock(scope: !1724, file: !1, line: 300, column: 3)
!1724 = distinct !DILexicalBlock(scope: !1725, file: !1, line: 299, column: 2)
!1725 = distinct !DILexicalBlock(scope: !715, file: !1, line: 298, column: 5)
!1726 = !DILocation(line: 301, column: 2, scope: !1724)
!1727 = !DILocation(line: 302, column: 1, scope: !715)
!1728 = !DILocation(line: 408, column: 2, scope: !730)
!1729 = !DILocation(line: 410, column: 11, scope: !1730)
!1730 = distinct !DILexicalBlock(scope: !730, file: !1, line: 410, column: 5)
!1731 = !{!1732, !1311, i64 4}
!1732 = !{!"_ZTSN3pov12Token_StructE", !1311, i64 0, !1311, i64 4, !1733, i64 8, !1311, i64 24, !1311, i64 28, !1308, i64 32, !1451, i64 40, !1311, i64 48, !1311, i64 52, !1308, i64 56, !1308, i64 64, !1308, i64 72, !1308, i64 80, !1735, i64 88}
!1733 = !{!"_ZTSN8pov_base11ITextStream7FilePosE", !1734, i64 0, !1311, i64 8}
!1734 = !{!"long", !1309, i64 0}
!1735 = !{!"bool", !1309, i64 0}
!1736 = !DILocation(line: 410, column: 5, scope: !730)
!1737 = !DILocation(line: 424, column: 37, scope: !1738)
!1738 = distinct !DILexicalBlock(scope: !1739, file: !1, line: 423, column: 2)
!1739 = distinct !DILexicalBlock(scope: !1740, file: !1, line: 422, column: 10)
!1740 = distinct !DILexicalBlock(scope: !1741, file: !1, line: 420, column: 10)
!1741 = distinct !DILexicalBlock(scope: !1742, file: !1, line: 418, column: 10)
!1742 = distinct !DILexicalBlock(scope: !1743, file: !1, line: 416, column: 10)
!1743 = distinct !DILexicalBlock(scope: !1744, file: !1, line: 414, column: 10)
!1744 = distinct !DILexicalBlock(scope: !1730, file: !1, line: 412, column: 10)
!1745 = !{!1746, !1451, i64 5472}
!1746 = !{!"_ZTSN3pov14OPTIONS_STRUCTE", !1311, i64 0, !1309, i64 4, !1309, i64 5, !1309, i64 6, !1311, i64 8, !1311, i64 12, !1309, i64 16, !1309, i64 1040, !1309, i64 2064, !1309, i64 3088, !1309, i64 4112, !1747, i64 5136, !1747, i64 5140, !1311, i64 5144, !1311, i64 5148, !1451, i64 5152, !1451, i64 5160, !1311, i64 5168, !1309, i64 5176, !1311, i64 5376, !1311, i64 5380, !1311, i64 5384, !1451, i64 5392, !1451, i64 5400, !1311, i64 5408, !1311, i64 5412, !1451, i64 5416, !1451, i64 5424, !1311, i64 5432, !1735, i64 5436, !1734, i64 5440, !1311, i64 5448, !1311, i64 5452, !1311, i64 5456, !1748, i64 5464, !1451, i64 5552, !1734, i64 5560, !1451, i64 5568, !1451, i64 5576, !1451, i64 5584, !1451, i64 5592, !1451, i64 5600, !1734, i64 5608, !1311, i64 5616, !1734, i64 5624, !1311, i64 5632, !1311, i64 5636, !1311, i64 5640, !1311, i64 5644, !1311, i64 5648, !1311, i64 5652, !1451, i64 5656, !1451, i64 5664, !1451, i64 5672, !1311, i64 5680, !1311, i64 5684, !1308, i64 5688, !1308, i64 5696, !1311, i64 5704, !1735, i64 5708, !1451, i64 5712, !1451, i64 5720, !1311, i64 5728, !1311, i64 5732, !1735, i64 5736, !1750, i64 5740, !1311, i64 5744, !1309, i64 5748, !1309, i64 6772, !1309, i64 8332, !1309, i64 9356, !1311, i64 10380, !1311, i64 10384, !1734, i64 10392, !1311, i64 10400, !1311, i64 10404, !1311, i64 10408, !1751, i64 10416}
!1747 = !{!"float", !1309, i64 0}
!1748 = !{!"_ZTSN3pov8FRAMESEQE", !1749, i64 0, !1451, i64 8, !1311, i64 16, !1311, i64 20, !1451, i64 24, !1311, i64 32, !1311, i64 36, !1451, i64 40, !1311, i64 48, !1451, i64 56, !1311, i64 64, !1451, i64 72, !1735, i64 80, !1735, i64 81}
!1749 = !{!"_ZTSN3pov9FRAMETYPEE", !1309, i64 0}
!1750 = !{!"_ZTSN3pov15Histogram_TypesE", !1309, i64 0}
!1751 = !{!"_ZTS9POVMSData", !1311, i64 0, !1311, i64 4, !1309, i64 8}
!1752 = !DILocation(line: 424, column: 21, scope: !1738)
!1753 = !{!1732, !1451, i64 40}
!1754 = !DILocation(line: 425, column: 3, scope: !1738)
!1755 = !DILocation(line: 429, column: 21, scope: !1756)
!1756 = distinct !DILexicalBlock(scope: !1757, file: !1, line: 428, column: 2)
!1757 = distinct !DILexicalBlock(scope: !1739, file: !1, line: 427, column: 10)
!1758 = !DILocation(line: 430, column: 3, scope: !1756)
!1759 = !DILocation(line: 433, column: 3, scope: !1760)
!1760 = distinct !DILexicalBlock(scope: !1757, file: !1, line: 432, column: 10)
!1761 = !DILocation(line: 435, column: 3, scope: !1762)
!1762 = distinct !DILexicalBlock(scope: !1760, file: !1, line: 434, column: 10)
!1763 = !DILocation(line: 437, column: 3, scope: !1764)
!1764 = distinct !DILexicalBlock(scope: !1762, file: !1, line: 436, column: 10)
!1765 = !DILocation(line: 439, column: 3, scope: !1766)
!1766 = distinct !DILexicalBlock(scope: !1764, file: !1, line: 438, column: 10)
!1767 = !DILocation(line: 441, column: 3, scope: !1768)
!1768 = distinct !DILexicalBlock(scope: !1766, file: !1, line: 440, column: 10)
!1769 = !DILocation(line: 443, column: 3, scope: !1770)
!1770 = distinct !DILexicalBlock(scope: !1768, file: !1, line: 442, column: 10)
!1771 = !DILocation(line: 445, column: 3, scope: !1772)
!1772 = distinct !DILexicalBlock(scope: !1770, file: !1, line: 444, column: 10)
!1773 = !DILocation(line: 447, column: 11, scope: !1774)
!1774 = distinct !DILexicalBlock(scope: !730, file: !1, line: 447, column: 5)
!1775 = !{!1732, !1311, i64 0}
!1776 = !DILocation(line: 447, column: 20, scope: !1774)
!1777 = !DILocation(line: 447, column: 5, scope: !730)
!1778 = !DILocation(line: 449, column: 6, scope: !1779)
!1779 = distinct !DILexicalBlock(scope: !1774, file: !1, line: 448, column: 2)
!1780 = !DILocation(line: 453, column: 39, scope: !1781)
!1781 = distinct !DILexicalBlock(scope: !1782, file: !1, line: 452, column: 3)
!1782 = distinct !DILexicalBlock(scope: !1783, file: !1, line: 451, column: 11)
!1783 = distinct !DILexicalBlock(scope: !1779, file: !1, line: 449, column: 6)
!1784 = !{!1732, !1308, i64 64}
!1785 = !DILocation(line: 453, column: 24, scope: !1781)
!1786 = !DILocation(line: 453, column: 22, scope: !1781)
!1787 = !DILocation(line: 454, column: 4, scope: !1781)
!1788 = !DILocation(line: 457, column: 3, scope: !1779)
!1789 = !DILocation(line: 461, column: 1, scope: !730)
!1790 = !DILocation(line: 543, column: 27, scope: !741)
!1791 = !DILocation(line: 543, column: 32, scope: !741)
!1792 = !DILocation(line: 543, column: 37, scope: !741)
!1793 = !DILocation(line: 545, column: 2, scope: !741)
!1794 = !DILocation(line: 582, column: 27, scope: !746)
!1795 = !DILocation(line: 582, column: 40, scope: !746)
!1796 = !DILocation(line: 582, column: 51, scope: !746)
!1797 = !DILocation(line: 584, column: 12, scope: !746)
!1798 = !DILocation(line: 586, column: 5, scope: !1799)
!1799 = distinct !DILexicalBlock(scope: !746, file: !1, line: 586, column: 5)
!1800 = !DILocation(line: 586, column: 13, scope: !1799)
!1801 = !DILocation(line: 586, column: 5, scope: !746)
!1802 = !DILocation(line: 590, column: 14, scope: !1803)
!1803 = distinct !DILexicalBlock(scope: !746, file: !1, line: 590, column: 5)
!1804 = !DILocation(line: 590, column: 20, scope: !1803)
!1805 = !DILocation(line: 590, column: 5, scope: !746)
!1806 = !DILocation(line: 592, column: 18, scope: !1807)
!1807 = distinct !DILexicalBlock(scope: !1803, file: !1, line: 591, column: 2)
!1808 = !DILocation(line: 592, column: 24, scope: !1807)
!1809 = !DILocation(line: 592, column: 3, scope: !1807)
!1810 = !DILocation(line: 594, column: 23, scope: !1811)
!1811 = distinct !DILexicalBlock(scope: !1812, file: !1, line: 594, column: 7)
!1812 = distinct !DILexicalBlock(scope: !1807, file: !1, line: 593, column: 3)
!1813 = !DILocation(line: 594, column: 29, scope: !1811)
!1814 = !DILocation(line: 594, column: 7, scope: !1812)
!1815 = !DILocation(line: 597, column: 12, scope: !1812)
!1816 = !DILocation(line: 599, column: 22, scope: !1817)
!1817 = distinct !DILexicalBlock(scope: !1812, file: !1, line: 599, column: 7)
!1818 = !DILocation(line: 599, column: 7, scope: !1812)
!1819 = !DILocation(line: 603, column: 25, scope: !1820)
!1820 = distinct !DILexicalBlock(scope: !1803, file: !1, line: 603, column: 10)
!1821 = !DILocation(line: 603, column: 10, scope: !1803)
!1822 = !DILocation(line: 605, column: 18, scope: !1823)
!1823 = distinct !DILexicalBlock(scope: !1820, file: !1, line: 604, column: 2)
!1824 = !{!1307, !1308, i64 0}
!1825 = !DILocation(line: 605, column: 25, scope: !1823)
!1826 = !DILocation(line: 605, column: 3, scope: !1823)
!1827 = !DILocation(line: 607, column: 12, scope: !1828)
!1828 = distinct !DILexicalBlock(scope: !1823, file: !1, line: 606, column: 3)
!1829 = !DILocation(line: 609, column: 16, scope: !1830)
!1830 = distinct !DILexicalBlock(scope: !1828, file: !1, line: 609, column: 7)
!1831 = !DILocation(line: 609, column: 22, scope: !1830)
!1832 = !DILocation(line: 609, column: 7, scope: !1828)
!1833 = !DILocation(line: 614, column: 14, scope: !755)
!1834 = !DILocation(line: 614, column: 20, scope: !755)
!1835 = !DILocation(line: 614, column: 5, scope: !746)
!1836 = !DILocation(line: 616, column: 18, scope: !1837)
!1837 = distinct !DILexicalBlock(scope: !755, file: !1, line: 615, column: 2)
!1838 = !DILocation(line: 616, column: 23, scope: !1837)
!1839 = !DILocation(line: 616, column: 3, scope: !1837)
!1840 = !DILocation(line: 617, column: 12, scope: !1837)
!1841 = !DILocation(line: 495, column: 29, scope: !734, inlinedAt: !1842)
!1842 = distinct !DILocation(line: 619, column: 10, scope: !1837)
!1843 = !DILocation(line: 495, column: 40, scope: !734, inlinedAt: !1842)
!1844 = !DILocation(line: 497, column: 12, scope: !734, inlinedAt: !1842)
!1845 = !DILocation(line: 499, column: 21, scope: !734, inlinedAt: !1842)
!1846 = !DILocation(line: 504, column: 8, scope: !734, inlinedAt: !1842)
!1847 = !DILocation(line: 501, column: 14, scope: !734, inlinedAt: !1842)
!1848 = !DILocation(line: 504, column: 14, scope: !734, inlinedAt: !1842)
!1849 = !DILocation(line: 505, column: 8, scope: !734, inlinedAt: !1842)
!1850 = !DILocation(line: 505, column: 11, scope: !734, inlinedAt: !1842)
!1851 = !DILocation(line: 621, column: 18, scope: !1837)
!1852 = !DILocation(line: 621, column: 27, scope: !1837)
!1853 = !DILocation(line: 621, column: 16, scope: !1837)
!1854 = !DILocation(line: 622, column: 16, scope: !1837)
!1855 = !DILocation(line: 622, column: 9, scope: !1837)
!1856 = !DILocation(line: 622, column: 14, scope: !1837)
!1857 = !DILocation(line: 623, column: 3, scope: !1837)
!1858 = !DILocation(line: 623, column: 12, scope: !1837)
!1859 = !DILocation(line: 623, column: 17, scope: !1837)
!1860 = !DILocation(line: 625, column: 11, scope: !1837)
!1861 = !DILocation(line: 626, column: 2, scope: !1837)
!1862 = !DILocation(line: 495, column: 29, scope: !734, inlinedAt: !1863)
!1863 = distinct !DILocation(line: 629, column: 10, scope: !754)
!1864 = !DILocation(line: 495, column: 40, scope: !734, inlinedAt: !1863)
!1865 = !DILocation(line: 497, column: 12, scope: !734, inlinedAt: !1863)
!1866 = !DILocation(line: 499, column: 21, scope: !734, inlinedAt: !1863)
!1867 = !DILocation(line: 504, column: 8, scope: !734, inlinedAt: !1863)
!1868 = !DILocation(line: 501, column: 14, scope: !734, inlinedAt: !1863)
!1869 = !DILocation(line: 504, column: 14, scope: !734, inlinedAt: !1863)
!1870 = !DILocation(line: 505, column: 8, scope: !734, inlinedAt: !1863)
!1871 = !DILocation(line: 505, column: 11, scope: !734, inlinedAt: !1863)
!1872 = !DILocation(line: 631, column: 18, scope: !754)
!1873 = !DILocation(line: 631, column: 16, scope: !754)
!1874 = !DILocation(line: 632, column: 17, scope: !754)
!1875 = !DILocation(line: 632, column: 26, scope: !754)
!1876 = !DILocation(line: 632, column: 9, scope: !754)
!1877 = !DILocation(line: 632, column: 15, scope: !754)
!1878 = !DILocation(line: 633, column: 3, scope: !754)
!1879 = !DILocation(line: 633, column: 12, scope: !754)
!1880 = !DILocation(line: 633, column: 18, scope: !754)
!1881 = !DILocation(line: 634, column: 29, scope: !753)
!1882 = !DILocation(line: 634, column: 40, scope: !1883)
!1883 = distinct !DILexicalBlock(scope: !753, file: !1, line: 634, column: 3)
!1884 = !DILocation(line: 634, column: 3, scope: !753)
!1885 = !DILocation(line: 635, column: 16, scope: !1883)
!1886 = !DILocation(line: 634, column: 60, scope: !1883)
!1887 = !DILocation(line: 495, column: 29, scope: !734, inlinedAt: !1888)
!1888 = distinct !DILocation(line: 637, column: 13, scope: !754)
!1889 = !DILocation(line: 495, column: 40, scope: !734, inlinedAt: !1888)
!1890 = !DILocation(line: 497, column: 12, scope: !734, inlinedAt: !1888)
!1891 = !DILocation(line: 499, column: 21, scope: !734, inlinedAt: !1888)
!1892 = !DILocation(line: 504, column: 8, scope: !734, inlinedAt: !1888)
!1893 = !DILocation(line: 501, column: 14, scope: !734, inlinedAt: !1888)
!1894 = !DILocation(line: 504, column: 14, scope: !734, inlinedAt: !1888)
!1895 = !DILocation(line: 505, column: 8, scope: !734, inlinedAt: !1888)
!1896 = !DILocation(line: 505, column: 11, scope: !734, inlinedAt: !1888)
!1897 = !DILocation(line: 637, column: 11, scope: !754)
!1898 = !DILocation(line: 638, column: 12, scope: !754)
!1899 = !DILocation(line: 638, column: 17, scope: !754)
!1900 = !DILocation(line: 639, column: 16, scope: !754)
!1901 = !DILocation(line: 639, column: 9, scope: !754)
!1902 = !DILocation(line: 639, column: 14, scope: !754)
!1903 = !DILocation(line: 640, column: 27, scope: !754)
!1904 = !DILocation(line: 640, column: 3, scope: !754)
!1905 = !DILocation(line: 640, column: 19, scope: !754)
!1906 = !DILocation(line: 644, column: 1, scope: !746)
!1907 = !DILocation(line: 679, column: 27, scope: !756)
!1908 = !DILocation(line: 679, column: 40, scope: !756)
!1909 = !DILocation(line: 679, column: 51, scope: !756)
!1910 = !DILocation(line: 681, column: 12, scope: !756)
!1911 = !DILocation(line: 683, column: 5, scope: !1912)
!1912 = distinct !DILexicalBlock(scope: !756, file: !1, line: 683, column: 5)
!1913 = !DILocation(line: 683, column: 13, scope: !1912)
!1914 = !DILocation(line: 683, column: 5, scope: !756)
!1915 = !DILocation(line: 495, column: 29, scope: !734, inlinedAt: !1916)
!1916 = distinct !DILocation(line: 686, column: 9, scope: !756)
!1917 = !DILocation(line: 495, column: 40, scope: !734, inlinedAt: !1916)
!1918 = !DILocation(line: 497, column: 12, scope: !734, inlinedAt: !1916)
!1919 = !DILocation(line: 499, column: 21, scope: !734, inlinedAt: !1916)
!1920 = !DILocation(line: 504, column: 8, scope: !734, inlinedAt: !1916)
!1921 = !DILocation(line: 501, column: 14, scope: !734, inlinedAt: !1916)
!1922 = !DILocation(line: 504, column: 14, scope: !734, inlinedAt: !1916)
!1923 = !DILocation(line: 505, column: 8, scope: !734, inlinedAt: !1916)
!1924 = !DILocation(line: 505, column: 11, scope: !734, inlinedAt: !1916)
!1925 = !DILocation(line: 688, column: 11, scope: !1926)
!1926 = distinct !DILexicalBlock(scope: !756, file: !1, line: 688, column: 5)
!1927 = !DILocation(line: 688, column: 16, scope: !1926)
!1928 = !DILocation(line: 688, column: 5, scope: !756)
!1929 = !DILocation(line: 690, column: 21, scope: !1930)
!1930 = distinct !DILexicalBlock(scope: !1926, file: !1, line: 689, column: 2)
!1931 = !DILocation(line: 690, column: 19, scope: !1930)
!1932 = !DILocation(line: 690, column: 14, scope: !1930)
!1933 = !DILocation(line: 690, column: 17, scope: !1930)
!1934 = !DILocation(line: 691, column: 9, scope: !1930)
!1935 = !DILocation(line: 692, column: 2, scope: !1930)
!1936 = !DILocation(line: 694, column: 14, scope: !1926)
!1937 = !DILocation(line: 694, column: 17, scope: !1926)
!1938 = !DILocation(line: 695, column: 27, scope: !756)
!1939 = !DILocation(line: 695, column: 13, scope: !756)
!1940 = !DILocation(line: 695, column: 19, scope: !756)
!1941 = !DILocation(line: 696, column: 20, scope: !756)
!1942 = !{!1732, !1308, i64 32}
!1943 = !DILocation(line: 696, column: 13, scope: !756)
!1944 = !DILocation(line: 696, column: 18, scope: !756)
!1945 = !DILocation(line: 697, column: 8, scope: !756)
!1946 = !DILocation(line: 697, column: 17, scope: !756)
!1947 = !DILocation(line: 697, column: 23, scope: !756)
!1948 = !DILocation(line: 697, column: 2, scope: !756)
!1949 = !DILocation(line: 698, column: 11, scope: !756)
!1950 = !DILocation(line: 700, column: 17, scope: !756)
!1951 = !DILocation(line: 701, column: 17, scope: !756)
!1952 = !DILocation(line: 701, column: 15, scope: !756)
!1953 = !DILocation(line: 702, column: 10, scope: !756)
!1954 = !DILocation(line: 704, column: 5, scope: !1955)
!1955 = distinct !DILexicalBlock(scope: !756, file: !1, line: 704, column: 5)
!1956 = !DILocation(line: 704, column: 22, scope: !1955)
!1957 = !DILocation(line: 704, column: 5, scope: !756)
!1958 = !DILocation(line: 705, column: 3, scope: !1955)
!1959 = !DILocation(line: 707, column: 26, scope: !756)
!1960 = !DILocation(line: 707, column: 2, scope: !756)
!1961 = !DILocation(line: 707, column: 11, scope: !756)
!1962 = !DILocation(line: 707, column: 17, scope: !756)
!1963 = !DILocation(line: 708, column: 8, scope: !756)
!1964 = !DILocation(line: 708, column: 25, scope: !756)
!1965 = !DILocation(line: 708, column: 2, scope: !756)
!1966 = !DILocation(line: 710, column: 16, scope: !1967)
!1967 = distinct !DILexicalBlock(scope: !756, file: !1, line: 709, column: 2)
!1968 = !DILocation(line: 710, column: 9, scope: !1967)
!1969 = !DILocation(line: 710, column: 14, scope: !1967)
!1970 = !DILocation(line: 711, column: 30, scope: !1967)
!1971 = !DILocation(line: 711, column: 22, scope: !1967)
!1972 = !DILocation(line: 715, column: 11, scope: !1973)
!1973 = distinct !DILexicalBlock(scope: !756, file: !1, line: 715, column: 5)
!1974 = !DILocation(line: 715, column: 20, scope: !1973)
!1975 = !DILocation(line: 715, column: 5, scope: !756)
!1976 = !DILocation(line: 716, column: 3, scope: !1973)
!1977 = !DILocation(line: 719, column: 1, scope: !756)
!1978 = !DILocation(line: 755, column: 26, scope: !762)
!1979 = !DILocation(line: 755, column: 39, scope: !762)
!1980 = !DILocation(line: 755, column: 50, scope: !762)
!1981 = !DILocation(line: 757, column: 12, scope: !762)
!1982 = !DILocation(line: 759, column: 5, scope: !1983)
!1983 = distinct !DILexicalBlock(scope: !762, file: !1, line: 759, column: 5)
!1984 = !DILocation(line: 759, column: 13, scope: !1983)
!1985 = !DILocation(line: 759, column: 5, scope: !762)
!1986 = !DILocation(line: 495, column: 29, scope: !734, inlinedAt: !1987)
!1987 = distinct !DILocation(line: 762, column: 9, scope: !762)
!1988 = !DILocation(line: 495, column: 40, scope: !734, inlinedAt: !1987)
!1989 = !DILocation(line: 497, column: 12, scope: !734, inlinedAt: !1987)
!1990 = !DILocation(line: 499, column: 21, scope: !734, inlinedAt: !1987)
!1991 = !DILocation(line: 504, column: 8, scope: !734, inlinedAt: !1987)
!1992 = !DILocation(line: 501, column: 14, scope: !734, inlinedAt: !1987)
!1993 = !DILocation(line: 504, column: 14, scope: !734, inlinedAt: !1987)
!1994 = !DILocation(line: 505, column: 8, scope: !734, inlinedAt: !1987)
!1995 = !DILocation(line: 505, column: 11, scope: !734, inlinedAt: !1987)
!1996 = !DILocation(line: 764, column: 8, scope: !1997)
!1997 = distinct !DILexicalBlock(scope: !762, file: !1, line: 764, column: 5)
!1998 = !DILocation(line: 764, column: 5, scope: !762)
!1999 = !DILocation(line: 766, column: 24, scope: !2000)
!2000 = distinct !DILexicalBlock(scope: !1997, file: !1, line: 765, column: 2)
!2001 = !DILocation(line: 766, column: 9, scope: !2000)
!2002 = !DILocation(line: 766, column: 16, scope: !2000)
!2003 = !DILocation(line: 767, column: 2, scope: !2000)
!2004 = !DILocation(line: 770, column: 20, scope: !2005)
!2005 = distinct !DILexicalBlock(scope: !1997, file: !1, line: 769, column: 2)
!2006 = !DILocation(line: 770, column: 9, scope: !2005)
!2007 = !DILocation(line: 770, column: 18, scope: !2005)
!2008 = !DILocation(line: 773, column: 5, scope: !2009)
!2009 = distinct !DILexicalBlock(scope: !762, file: !1, line: 773, column: 5)
!2010 = !DILocation(line: 773, column: 14, scope: !2009)
!2011 = !DILocation(line: 773, column: 20, scope: !2009)
!2012 = !DILocation(line: 773, column: 5, scope: !762)
!2013 = !DILocation(line: 776, column: 17, scope: !762)
!2014 = !DILocation(line: 777, column: 17, scope: !762)
!2015 = !DILocation(line: 777, column: 15, scope: !762)
!2016 = !DILocation(line: 779, column: 2, scope: !762)
!2017 = !DILocation(line: 780, column: 1, scope: !762)
!2018 = !DILocation(line: 816, column: 26, scope: !768)
!2019 = !DILocation(line: 816, column: 48, scope: !768)
!2020 = !DILocation(line: 816, column: 60, scope: !768)
!2021 = !DILocation(line: 818, column: 12, scope: !768)
!2022 = !DILocation(line: 820, column: 9, scope: !768)
!2023 = !DILocation(line: 821, column: 10, scope: !2024)
!2024 = distinct !DILexicalBlock(scope: !768, file: !1, line: 821, column: 5)
!2025 = !DILocation(line: 821, column: 5, scope: !768)
!2026 = !DILocation(line: 824, column: 2, scope: !768)
!2027 = !DILocation(line: 824, column: 11, scope: !768)
!2028 = !DILocation(line: 824, column: 17, scope: !768)
!2029 = !DILocation(line: 825, column: 17, scope: !768)
!2030 = !DILocation(line: 825, column: 15, scope: !768)
!2031 = !DILocation(line: 826, column: 8, scope: !768)
!2032 = !DILocation(line: 826, column: 14, scope: !768)
!2033 = !DILocation(line: 828, column: 2, scope: !768)
!2034 = !DILocation(line: 829, column: 1, scope: !768)
!2035 = !DILocation(line: 865, column: 26, scope: !774)
!2036 = !DILocation(line: 865, column: 31, scope: !774)
!2037 = !DILocation(line: 865, column: 36, scope: !774)
!2038 = !DILocation(line: 867, column: 2, scope: !774)
!2039 = !DILocation(line: 869, column: 2, scope: !774)
!2040 = !DILocation(line: 906, column: 26, scope: !779)
!2041 = !DILocation(line: 906, column: 32, scope: !779)
!2042 = !DILocation(line: 906, column: 42, scope: !779)
!2043 = !DILocation(line: 910, column: 11, scope: !2044)
!2044 = distinct !DILexicalBlock(scope: !779, file: !1, line: 910, column: 5)
!2045 = !DILocation(line: 910, column: 5, scope: !779)
!2046 = !DILocation(line: 911, column: 3, scope: !2044)
!2047 = !DILocation(line: 915, column: 41, scope: !2048)
!2048 = distinct !DILexicalBlock(scope: !2049, file: !1, line: 915, column: 2)
!2049 = distinct !DILexicalBlock(scope: !779, file: !1, line: 915, column: 2)
!2050 = !{!2051, !1311, i64 0}
!2051 = !{!"_ZTSN3pov20ExprParserErrorEntryE", !1311, i64 0, !1308, i64 8}
!2052 = !DILocation(line: 917, column: 39, scope: !2053)
!2053 = distinct !DILexicalBlock(scope: !2054, file: !1, line: 917, column: 6)
!2054 = distinct !DILexicalBlock(scope: !2048, file: !1, line: 916, column: 2)
!2055 = !DILocation(line: 917, column: 6, scope: !2054)
!2056 = !DILocation(line: 915, column: 84, scope: !2048)
!2057 = !{!2051, !1308, i64 8}
!2058 = !DILocation(line: 918, column: 4, scope: !2053)
!2059 = !DILocation(line: 915, column: 53, scope: !2048)
!2060 = !DILocation(line: 921, column: 2, scope: !779)
!2061 = !DILocation(line: 924, column: 2, scope: !779)
!2062 = !DILocation(line: 1381, column: 47, scope: !808)
!2063 = !DILocation(line: 1383, column: 10, scope: !2064)
!2064 = distinct !DILexicalBlock(scope: !808, file: !1, line: 1383, column: 5)
!2065 = !DILocation(line: 1383, column: 5, scope: !808)
!2066 = !DILocation(line: 1388, column: 9, scope: !2067)
!2067 = distinct !DILexicalBlock(scope: !2068, file: !1, line: 1388, column: 6)
!2068 = distinct !DILexicalBlock(scope: !2069, file: !1, line: 1387, column: 2)
!2069 = distinct !DILexicalBlock(scope: !812, file: !1, line: 1386, column: 2)
!2070 = !DILocation(line: 1388, column: 12, scope: !2067)
!2071 = !DILocation(line: 1388, column: 6, scope: !2068)
!2072 = !DILocation(line: 1391, column: 9, scope: !2073)
!2073 = distinct !DILexicalBlock(scope: !2068, file: !1, line: 1391, column: 6)
!2074 = !DILocation(line: 1391, column: 15, scope: !2073)
!2075 = !DILocation(line: 1391, column: 6, scope: !2068)
!2076 = !DILocation(line: 1393, column: 7, scope: !2077)
!2077 = distinct !DILexicalBlock(scope: !2078, file: !1, line: 1393, column: 7)
!2078 = distinct !DILexicalBlock(scope: !2073, file: !1, line: 1392, column: 3)
!2079 = !DILocation(line: 1393, column: 7, scope: !2078)
!2080 = !DILocation(line: 1386, column: 44, scope: !2069)
!2081 = !DILocation(line: 1386, column: 16, scope: !812)
!2082 = !DILocation(line: 1386, column: 28, scope: !2069)
!2083 = !DILocation(line: 1386, column: 2, scope: !812)
!2084 = !DILocation(line: 1399, column: 1, scope: !808)
!2085 = !DILocation(line: 1178, column: 30, scope: !796)
!2086 = !DILocation(line: 1180, column: 6, scope: !796)
!2087 = !DILocation(line: 1181, column: 7, scope: !796)
!2088 = !DILocation(line: 1183, column: 11, scope: !2089)
!2089 = distinct !DILexicalBlock(scope: !796, file: !1, line: 1183, column: 5)
!2090 = !DILocation(line: 1183, column: 14, scope: !2089)
!2091 = !DILocation(line: 1183, column: 5, scope: !796)
!2092 = !DILocation(line: 1185, column: 11, scope: !2093)
!2093 = distinct !DILexicalBlock(scope: !796, file: !1, line: 1185, column: 5)
!2094 = !DILocation(line: 1185, column: 17, scope: !2093)
!2095 = !DILocation(line: 1185, column: 5, scope: !796)
!2096 = !DILocation(line: 1187, column: 18, scope: !2097)
!2097 = distinct !DILexicalBlock(scope: !796, file: !1, line: 1187, column: 5)
!2098 = !DILocation(line: 1187, column: 21, scope: !2097)
!2099 = !DILocation(line: 1187, column: 5, scope: !796)
!2100 = !DILocation(line: 1190, column: 15, scope: !796)
!2101 = !DILocation(line: 1190, column: 20, scope: !796)
!2102 = !DILocation(line: 1190, column: 2, scope: !796)
!2103 = !DILocation(line: 1193, column: 30, scope: !2104)
!2104 = distinct !DILexicalBlock(scope: !796, file: !1, line: 1191, column: 2)
!2105 = !DILocation(line: 1193, column: 13, scope: !2104)
!2106 = !DILocation(line: 1194, column: 4, scope: !2104)
!2107 = !DILocation(line: 1196, column: 30, scope: !2104)
!2108 = !DILocation(line: 1196, column: 13, scope: !2104)
!2109 = !DILocation(line: 1197, column: 4, scope: !2104)
!2110 = !DILocation(line: 1199, column: 30, scope: !2104)
!2111 = !DILocation(line: 1199, column: 13, scope: !2104)
!2112 = !DILocation(line: 1200, column: 4, scope: !2104)
!2113 = !DILocation(line: 1202, column: 31, scope: !2104)
!2114 = !DILocation(line: 1202, column: 13, scope: !2104)
!2115 = !DILocation(line: 1203, column: 4, scope: !2104)
!2116 = !DILocation(line: 1205, column: 31, scope: !2104)
!2117 = !DILocation(line: 1205, column: 13, scope: !2104)
!2118 = !DILocation(line: 1206, column: 4, scope: !2104)
!2119 = !DILocation(line: 1208, column: 31, scope: !2104)
!2120 = !DILocation(line: 1208, column: 13, scope: !2104)
!2121 = !DILocation(line: 1209, column: 4, scope: !2104)
!2122 = !DILocation(line: 1211, column: 31, scope: !2104)
!2123 = !DILocation(line: 1211, column: 13, scope: !2104)
!2124 = !DILocation(line: 1212, column: 4, scope: !2104)
!2125 = !DILocation(line: 1214, column: 31, scope: !2104)
!2126 = !DILocation(line: 1214, column: 13, scope: !2104)
!2127 = !DILocation(line: 1215, column: 4, scope: !2104)
!2128 = !DILocation(line: 1217, column: 31, scope: !2104)
!2129 = !DILocation(line: 1217, column: 13, scope: !2104)
!2130 = !DILocation(line: 1218, column: 4, scope: !2104)
!2131 = !DILocation(line: 1220, column: 32, scope: !2104)
!2132 = !DILocation(line: 1220, column: 13, scope: !2104)
!2133 = !DILocation(line: 1221, column: 4, scope: !2104)
!2134 = !DILocation(line: 1223, column: 32, scope: !2104)
!2135 = !DILocation(line: 1223, column: 13, scope: !2104)
!2136 = !DILocation(line: 1224, column: 4, scope: !2104)
!2137 = !DILocation(line: 1226, column: 32, scope: !2104)
!2138 = !DILocation(line: 1226, column: 13, scope: !2104)
!2139 = !DILocation(line: 1227, column: 4, scope: !2104)
!2140 = !DILocation(line: 1229, column: 31, scope: !2104)
!2141 = !DILocation(line: 1229, column: 13, scope: !2104)
!2142 = !DILocation(line: 1230, column: 4, scope: !2104)
!2143 = !DILocation(line: 1232, column: 26, scope: !2104)
!2144 = !DILocation(line: 1232, column: 33, scope: !2104)
!2145 = !DILocation(line: 1232, column: 40, scope: !2104)
!2146 = !DILocation(line: 1233, column: 4, scope: !2104)
!2147 = !DILocation(line: 1235, column: 26, scope: !2104)
!2148 = !DILocation(line: 1235, column: 33, scope: !2104)
!2149 = !DILocation(line: 1235, column: 41, scope: !2104)
!2150 = !DILocation(line: 1236, column: 4, scope: !2104)
!2151 = !DILocation(line: 1238, column: 32, scope: !2104)
!2152 = !DILocation(line: 1238, column: 13, scope: !2104)
!2153 = !DILocation(line: 1239, column: 4, scope: !2104)
!2154 = !DILocation(line: 1241, column: 32, scope: !2104)
!2155 = !DILocation(line: 1241, column: 18, scope: !2104)
!2156 = !DILocation(line: 1241, column: 13, scope: !2104)
!2157 = !DILocation(line: 1242, column: 4, scope: !2104)
!2158 = !DILocation(line: 1244, column: 31, scope: !2104)
!2159 = !DILocation(line: 1244, column: 13, scope: !2104)
!2160 = !DILocation(line: 1245, column: 4, scope: !2104)
!2161 = !DILocation(line: 1247, column: 31, scope: !2104)
!2162 = !DILocation(line: 1247, column: 13, scope: !2104)
!2163 = !DILocation(line: 1248, column: 4, scope: !2104)
!2164 = !DILocation(line: 1250, column: 30, scope: !2104)
!2165 = !DILocation(line: 1250, column: 13, scope: !2104)
!2166 = !DILocation(line: 1251, column: 4, scope: !2104)
!2167 = !DILocation(line: 1253, column: 20, scope: !2168)
!2168 = distinct !DILexicalBlock(scope: !2104, file: !1, line: 1253, column: 7)
!2169 = !DILocation(line: 1253, column: 27, scope: !2168)
!2170 = !DILocation(line: 1253, column: 7, scope: !2104)
!2171 = !DILocation(line: 1254, column: 14, scope: !2168)
!2172 = !DILocation(line: 1254, column: 5, scope: !2168)
!2173 = !DILocation(line: 1256, column: 5, scope: !2168)
!2174 = !DILocation(line: 1259, column: 20, scope: !2175)
!2175 = distinct !DILexicalBlock(scope: !2104, file: !1, line: 1259, column: 7)
!2176 = !DILocation(line: 1259, column: 27, scope: !2175)
!2177 = !DILocation(line: 1259, column: 7, scope: !2104)
!2178 = !DILocation(line: 1260, column: 14, scope: !2175)
!2179 = !DILocation(line: 1260, column: 5, scope: !2175)
!2180 = !DILocation(line: 1262, column: 5, scope: !2175)
!2181 = !DILocation(line: 1295, column: 3, scope: !2182)
!2182 = distinct !DILexicalBlock(scope: !2183, file: !1, line: 1295, column: 3)
!2183 = distinct !DILexicalBlock(scope: !2184, file: !1, line: 1294, column: 2)
!2184 = distinct !DILexicalBlock(scope: !796, file: !1, line: 1293, column: 5)
!2185 = !DILocation(line: 1296, column: 9, scope: !2183)
!2186 = !DILocation(line: 1296, column: 16, scope: !2183)
!2187 = !DILocation(line: 1297, column: 12, scope: !2183)
!2188 = !DILocation(line: 1298, column: 3, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !2183, file: !1, line: 1298, column: 3)
!2190 = !DILocation(line: 1299, column: 15, scope: !2183)
!2191 = !DILocation(line: 1300, column: 2, scope: !2183)
!2192 = !DILocation(line: 1301, column: 1, scope: !796)
!2193 = !DILocation(line: 1332, column: 48, scope: !801)
!2194 = !DILocation(line: 1334, column: 10, scope: !2195)
!2195 = distinct !DILexicalBlock(scope: !801, file: !1, line: 1334, column: 5)
!2196 = !DILocation(line: 1334, column: 5, scope: !801)
!2197 = !DILocation(line: 1339, column: 9, scope: !2198)
!2198 = distinct !DILexicalBlock(scope: !2199, file: !1, line: 1339, column: 6)
!2199 = distinct !DILexicalBlock(scope: !2200, file: !1, line: 1338, column: 2)
!2200 = distinct !DILexicalBlock(scope: !807, file: !1, line: 1337, column: 2)
!2201 = !DILocation(line: 1339, column: 12, scope: !2198)
!2202 = !DILocation(line: 1339, column: 6, scope: !2199)
!2203 = !DILocation(line: 1342, column: 9, scope: !2204)
!2204 = distinct !DILexicalBlock(scope: !2199, file: !1, line: 1342, column: 6)
!2205 = !DILocation(line: 1342, column: 15, scope: !2204)
!2206 = !DILocation(line: 1342, column: 6, scope: !2199)
!2207 = !DILocation(line: 1344, column: 7, scope: !2208)
!2208 = distinct !DILexicalBlock(scope: !2209, file: !1, line: 1344, column: 7)
!2209 = distinct !DILexicalBlock(scope: !2204, file: !1, line: 1343, column: 3)
!2210 = !DILocation(line: 1344, column: 7, scope: !2209)
!2211 = !DILocation(line: 1337, column: 44, scope: !2200)
!2212 = !DILocation(line: 1337, column: 16, scope: !807)
!2213 = !DILocation(line: 1337, column: 28, scope: !2200)
!2214 = !DILocation(line: 1337, column: 2, scope: !807)
!2215 = !DILocation(line: 1350, column: 1, scope: !801)
!2216 = !DILocation(line: 1432, column: 22, scope: !813)
!2217 = !DILocation(line: 1432, column: 35, scope: !813)
!2218 = !DILocation(line: 1434, column: 11, scope: !2219)
!2219 = distinct !DILexicalBlock(scope: !813, file: !1, line: 1434, column: 5)
!2220 = !DILocation(line: 1434, column: 14, scope: !2219)
!2221 = !DILocation(line: 1434, column: 5, scope: !813)
!2222 = !DILocation(line: 1435, column: 3, scope: !2219)
!2223 = !DILocation(line: 1437, column: 3, scope: !2219)
!2224 = !DILocation(line: 1439, column: 2, scope: !813)
!2225 = !DILocation(line: 1441, column: 16, scope: !822)
!2226 = !DILocation(line: 1441, column: 2, scope: !822)
!2227 = !DILocation(line: 1443, column: 13, scope: !2228)
!2228 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 1442, column: 2)
!2229 = distinct !DILexicalBlock(scope: !822, file: !1, line: 1441, column: 2)
!2230 = !DILocation(line: 1443, column: 3, scope: !2228)
!2231 = !DILocation(line: 1446, column: 33, scope: !2232)
!2232 = distinct !DILexicalBlock(scope: !2228, file: !1, line: 1444, column: 3)
!2233 = !DILocation(line: 1446, column: 29, scope: !2232)
!2234 = !DILocation(line: 1446, column: 22, scope: !2232)
!2235 = !DILocation(line: 1446, column: 5, scope: !2232)
!2236 = !DILocation(line: 1447, column: 5, scope: !2232)
!2237 = !DILocation(line: 1449, column: 25, scope: !2232)
!2238 = !DILocation(line: 1449, column: 5, scope: !2232)
!2239 = !DILocation(line: 1450, column: 5, scope: !2232)
!2240 = !DILocation(line: 1452, column: 5, scope: !2232)
!2241 = !DILocation(line: 1453, column: 5, scope: !2232)
!2242 = !DILocation(line: 1455, column: 25, scope: !2232)
!2243 = !DILocation(line: 1455, column: 5, scope: !2232)
!2244 = !DILocation(line: 1456, column: 5, scope: !2232)
!2245 = !DILocation(line: 1458, column: 38, scope: !2232)
!2246 = !DILocation(line: 1458, column: 5, scope: !2232)
!2247 = !DILocation(line: 1459, column: 5, scope: !2232)
!2248 = !DILocation(line: 1461, column: 5, scope: !2232)
!2249 = !DILocation(line: 1462, column: 5, scope: !2232)
!2250 = !DILocation(line: 1464, column: 5, scope: !2232)
!2251 = !DILocation(line: 1465, column: 5, scope: !2232)
!2252 = !DILocation(line: 1467, column: 5, scope: !2232)
!2253 = !DILocation(line: 1468, column: 5, scope: !2232)
!2254 = !DILocation(line: 1470, column: 5, scope: !2232)
!2255 = !DILocation(line: 1471, column: 5, scope: !2232)
!2256 = !DILocation(line: 1473, column: 5, scope: !2232)
!2257 = !DILocation(line: 1474, column: 5, scope: !2232)
!2258 = !DILocation(line: 1476, column: 5, scope: !2232)
!2259 = !DILocation(line: 1477, column: 5, scope: !2232)
!2260 = !DILocation(line: 1479, column: 5, scope: !2232)
!2261 = !DILocation(line: 1480, column: 5, scope: !2232)
!2262 = !DILocation(line: 1482, column: 5, scope: !2232)
!2263 = !DILocation(line: 1483, column: 5, scope: !2232)
!2264 = !DILocation(line: 1485, column: 5, scope: !2232)
!2265 = !DILocation(line: 1486, column: 5, scope: !2232)
!2266 = !DILocation(line: 1488, column: 5, scope: !2232)
!2267 = !DILocation(line: 1489, column: 5, scope: !2232)
!2268 = !DILocation(line: 1491, column: 5, scope: !2232)
!2269 = !DILocation(line: 1492, column: 5, scope: !2232)
!2270 = !DILocation(line: 1494, column: 5, scope: !2232)
!2271 = !DILocation(line: 1495, column: 5, scope: !2232)
!2272 = !DILocation(line: 1497, column: 5, scope: !2232)
!2273 = !DILocation(line: 1498, column: 5, scope: !2232)
!2274 = !DILocation(line: 1500, column: 5, scope: !2232)
!2275 = !DILocation(line: 1501, column: 5, scope: !2232)
!2276 = !DILocation(line: 1503, column: 5, scope: !2232)
!2277 = !DILocation(line: 1504, column: 5, scope: !2232)
!2278 = !DILocation(line: 1509, column: 3, scope: !2228)
!2279 = !DILocation(line: 1511, column: 9, scope: !2280)
!2280 = distinct !DILexicalBlock(scope: !2228, file: !1, line: 1511, column: 6)
!2281 = !DILocation(line: 1511, column: 15, scope: !2280)
!2282 = !DILocation(line: 1511, column: 6, scope: !2228)
!2283 = !DILocation(line: 1512, column: 4, scope: !2280)
!2284 = !DILocation(line: 1441, column: 44, scope: !2229)
!2285 = !DILocation(line: 1441, column: 28, scope: !2229)
!2286 = !DILocation(line: 1515, column: 11, scope: !2287)
!2287 = distinct !DILexicalBlock(scope: !813, file: !1, line: 1515, column: 5)
!2288 = !DILocation(line: 1515, column: 14, scope: !2287)
!2289 = !DILocation(line: 1515, column: 5, scope: !813)
!2290 = !DILocation(line: 1516, column: 3, scope: !2287)
!2291 = !DILocation(line: 1518, column: 3, scope: !2287)
!2292 = !DILocation(line: 1520, column: 2, scope: !813)
!2293 = !DILocation(line: 1521, column: 1, scope: !813)
