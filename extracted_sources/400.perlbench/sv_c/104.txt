void
Perl_sv_pos_u2b(pTHX_ register SV *sv, I32* offsetp, I32* lenp)
{
    U8 *start;
    U8 *s;
    STRLEN len;
    STRLEN *cache = 0;
    STRLEN boffset = 0;

    if (!sv)
	return;

    start = s = (U8*)SvPV(sv, len);
    if (len) {
	 I32 uoffset = *offsetp;
	 U8 *send = s + len;
	 MAGIC *mg = 0;
	 bool found = FALSE;

         if (utf8_mg_pos(sv, &mg, &cache, 0, offsetp, *offsetp, &s, start, send))
             found = TRUE;
	 if (!found && uoffset > 0) {
	      while (s < send && uoffset--)
		   s += UTF8SKIP(s);
	      if (s >= send)
		   s = send;
              if (utf8_mg_pos_init(sv, &mg, &cache, 0, offsetp, s, start))
                  boffset = cache[1];
	      *offsetp = s - start;
	 }
	 if (lenp) {
	      found = FALSE;
	      start = s;
              if (utf8_mg_pos(sv, &mg, &cache, 2, lenp, *lenp, &s, start, send)) {
                  *lenp -= boffset;
                  found = TRUE;
              }
	      if (!found && *lenp > 0) {
		   I32 ulen = *lenp;
		   if (ulen > 0)
			while (s < send && ulen--)
			     s += UTF8SKIP(s);
		   if (s >= send)
			s = send;
                   utf8_mg_pos_init(sv, &mg, &cache, 2, lenp, s, start);
	      }
	      *lenp = s - start;
	 }
	 ASSERT_UTF8_CACHE(cache);
    }
    else {
	 *offsetp = 0;
	 if (lenp)
	      *lenp = 0;
    }

    return;
}
