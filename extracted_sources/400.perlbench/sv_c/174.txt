STATIC SV *
S_gv_share(pTHX_ SV *sstr, CLONE_PARAMS *param)
{
    GV *gv = (GV*)sstr;
    SV *sv = &param->proto_perl->Isv_no; /* just need SvREADONLY-ness */

    if (GvIO(gv) || GvFORM(gv)) {
        GvUNIQUE_off(gv); /* GvIOs cannot be shared. nor can GvFORMs */
    }
    else if (!GvCV(gv)) {
        GvCV(gv) = (CV*)sv;
    }
    else {
        /* CvPADLISTs cannot be shared */
        if (!SvREADONLY(GvCV(gv)) && !CvXSUB(GvCV(gv))) {
            GvUNIQUE_off(gv);
        }
    }

    if (!GvUNIQUE(gv)) {
#if 0
        PerlIO_printf(Perl_debug_log, "gv_share: unable to share %s::%s\n",
                      HvNAME(GvSTASH(gv)), GvNAME(gv));
#endif
        return Nullsv;
    }

    /*
     * write attempts will die with
     * "Modification of a read-only value attempted"
     */
    if (!GvSV(gv)) {
        GvSV(gv) = sv;
    }
    else {
        SvREADONLY_on(GvSV(gv));
    }

    if (!GvAV(gv)) {
        GvAV(gv) = (AV*)sv;
    }
    else {
        SvREADONLY_on(GvAV(gv));
    }

    if (!GvHV(gv)) {
        GvHV(gv) = (HV*)sv;
    }
    else {
        SvREADONLY_on(GvHV(gv));
    }

    return sstr; /* he_dup() will SvREFCNT_inc() */
}
