bool
Perl_do_aexec5(pTHX_ SV *really, register SV **mark, register SV **sp,
	       int fd, int do_report)
{
#ifdef MACOS_TRADITIONAL
    Perl_croak(aTHX_ "exec? I'm not *that* kind of operating system");
#else
    register char **a;
    char *tmps = Nullch;
    STRLEN n_a;

    if (sp > mark) {
	New(401,PL_Argv, sp - mark + 1, char*);
	a = PL_Argv;
	while (++mark <= sp) {
	    if (*mark)
		*a++ = SvPVx(*mark, n_a);
	    else
		*a++ = "";
	}
	*a = Nullch;
	if (really)
	    tmps = SvPV(really, n_a);
	if ((!really && *PL_Argv[0] != '/') ||
	    (really && *tmps != '/'))		/* will execvp use PATH? */
	    TAINT_ENV();		/* testing IFS here is overkill, probably */
	PERL_FPU_PRE_EXEC
	if (really && *tmps)
	    PerlProc_execvp(tmps,EXEC_ARGV_CAST(PL_Argv));
	else
	    PerlProc_execvp(PL_Argv[0],EXEC_ARGV_CAST(PL_Argv));
	PERL_FPU_POST_EXEC
	if (ckWARN(WARN_EXEC))
	    Perl_warner(aTHX_ packWARN(WARN_EXEC), "Can't exec \"%s\": %s",
		(really ? tmps : PL_Argv[0]), Strerror(errno));
	if (do_report) {
	    int e = errno;

	    PerlLIO_write(fd, (void*)&e, sizeof(int));
	    PerlLIO_close(fd);
	}
    }
    do_execfree();
#endif
    return FALSE;
}
