SV*
Perl_swash_init(pTHX_ char* pkg, char* name, SV *listsv, I32 minbits, I32 none)
{
    SV* retval;
    SV* tokenbufsv = sv_newmortal();
    dSP;
    size_t pkg_len = strlen(pkg);
    size_t name_len = strlen(name);
    HV *stash = gv_stashpvn(pkg, pkg_len, FALSE);
    SV* errsv_save;

    PUSHSTACKi(PERLSI_MAGIC);
    ENTER;
    SAVEI32(PL_hints);
    PL_hints = 0;
    save_re_context();
    if (!gv_fetchmeth(stash, "SWASHNEW", 8, -1)) {	/* demand load utf8 */
	ENTER;
	errsv_save = newSVsv(ERRSV);
	Perl_load_module(aTHX_ PERL_LOADMOD_NOIMPORT, newSVpvn(pkg,pkg_len),
			 Nullsv);
	if (!SvTRUE(ERRSV))
	    sv_setsv(ERRSV, errsv_save);
	SvREFCNT_dec(errsv_save);
	LEAVE;
    }
    SPAGAIN;
    PUSHMARK(SP);
    EXTEND(SP,5);
    PUSHs(sv_2mortal(newSVpvn(pkg, pkg_len)));
    PUSHs(sv_2mortal(newSVpvn(name, name_len)));
    PUSHs(listsv);
    PUSHs(sv_2mortal(newSViv(minbits)));
    PUSHs(sv_2mortal(newSViv(none)));
    PUTBACK;
    if (IN_PERL_COMPILETIME) {
	/* XXX ought to be handled by lex_start */
	SAVEI32(PL_in_my);
	PL_in_my = 0;
	sv_setpv(tokenbufsv, PL_tokenbuf);
    }
    errsv_save = newSVsv(ERRSV);
    if (call_method("SWASHNEW", G_SCALAR))
	retval = newSVsv(*PL_stack_sp--);
    else
	retval = &PL_sv_undef;
    if (!SvTRUE(ERRSV))
	sv_setsv(ERRSV, errsv_save);
    SvREFCNT_dec(errsv_save);
    LEAVE;
    POPSTACK;
    if (IN_PERL_COMPILETIME) {
	STRLEN len;
	char* pv = SvPV(tokenbufsv, len);

	Copy(pv, PL_tokenbuf, len+1, char);
	PL_curcop->op_private = (U8)(PL_hints & HINT_PRIVATE_MASK);
    }
    if (!SvROK(retval) || SvTYPE(SvRV(retval)) != SVt_PVHV) {
        if (SvPOK(retval))
	    Perl_croak(aTHX_ "Can't find Unicode property definition \"%"SVf"\"",
		       retval);
	Perl_croak(aTHX_ "SWASHNEW didn't return an HV ref");
    }
    return retval;
}
