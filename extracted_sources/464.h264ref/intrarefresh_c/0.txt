void RandomIntraInit(int xsize, int ysize, int refresh)
{
  int i, pos;

  #if defined(SPEC_CPU)
  spec_srand(1);
  #else
  srand (1);      // A fixed random initializer to make things reproducible
  #endif /* SPEC_CPU */
  NumberOfMBs = xsize * ysize;
  NumberIntraPerPicture = refresh;

  #if defined(SPEC_CPU)
  RefreshPattern = malloc (sizeof (int) * (NumberOfMBs + 1));
  #else
  RefreshPattern = malloc (sizeof (int) * NumberOfMBs);
  #endif /* SPEC_CPU */
  if (RefreshPattern == NULL) no_mem_exit("RandomIntraInit: RefreshPattern");

  #if defined(SPEC_CPU)
  IntraMBs = malloc (sizeof (int) * (refresh + 1));
  #else
  IntraMBs = malloc (sizeof (int) * refresh);
  #endif /* SPEC_CPU */
  if (IntraMBs == NULL) no_mem_exit("RandomIntraInit: IntraMBs");

  for (i= 0; i<NumberOfMBs; i++)
    RefreshPattern[i] = -1;

  for (i=0; i<NumberOfMBs; i++)
  {
    do
    {
      #if defined(SPEC_CPU)
      pos = ((int) (spec_rand() * (double) RAND_MAX)) % NumberOfMBs;
      #else
      pos = rand() % NumberOfMBs;
      #endif
    } while (RefreshPattern [pos] != -1);
    RefreshPattern [pos] = i;
  }
/*
for (i=0; i<NumberOfMBs; i++) printf ("%d\t", RefreshPattern[i]);
getchar();
*/
}
