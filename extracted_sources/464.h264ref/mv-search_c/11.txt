int
SATD8X8 (int* diff, int use_hadamard)
{
  int i, j, sad=0;
  int m1[8][8], m2[8][8], m3[8][8];

  if(use_hadamard)
  {
    //horizontal
    for (j=0; j < 8; j++)
    {
      m2[j][0] = diff[(j<<3)  ] + diff[(j<<3)+4];
      m2[j][1] = diff[(j<<3)+1] + diff[(j<<3)+5];
      m2[j][2] = diff[(j<<3)+2] + diff[(j<<3)+6];
      m2[j][3] = diff[(j<<3)+3] + diff[(j<<3)+7];
      m2[j][4] = diff[(j<<3)  ] - diff[(j<<3)+4];
      m2[j][5] = diff[(j<<3)+1] - diff[(j<<3)+5];
      m2[j][6] = diff[(j<<3)+2] - diff[(j<<3)+6];
      m2[j][7] = diff[(j<<3)+3] - diff[(j<<3)+7];

      m1[j][0] = m2[j][0] + m2[j][2];
      m1[j][1] = m2[j][1] + m2[j][3];
      m1[j][2] = m2[j][0] - m2[j][2];
      m1[j][3] = m2[j][1] - m2[j][3];
      m1[j][4] = m2[j][4] + m2[j][6];
      m1[j][5] = m2[j][5] + m2[j][7];
      m1[j][6] = m2[j][4] - m2[j][6];
      m1[j][7] = m2[j][5] - m2[j][7];

      m2[j][0] = m1[j][0] + m1[j][1];
      m2[j][1] = m1[j][0] - m1[j][1];
      m2[j][2] = m1[j][2] + m1[j][3];
      m2[j][3] = m1[j][2] - m1[j][3];
      m2[j][4] = m1[j][4] + m1[j][5];
      m2[j][5] = m1[j][4] - m1[j][5];
      m2[j][6] = m1[j][6] + m1[j][7];
      m2[j][7] = m1[j][6] - m1[j][7];
    }

    //vertical
    for (i=0; i < 8; i++)
    {
      m3[0][i] = m2[0][i] + m2[4][i];
      m3[1][i] = m2[1][i] + m2[5][i];
      m3[2][i] = m2[2][i] + m2[6][i];
      m3[3][i] = m2[3][i] + m2[7][i];
      m3[4][i] = m2[0][i] - m2[4][i];
      m3[5][i] = m2[1][i] - m2[5][i];
      m3[6][i] = m2[2][i] - m2[6][i];
      m3[7][i] = m2[3][i] - m2[7][i];

      m1[0][i] = m3[0][i] + m3[2][i];
      m1[1][i] = m3[1][i] + m3[3][i];
      m1[2][i] = m3[0][i] - m3[2][i];
      m1[3][i] = m3[1][i] - m3[3][i];
      m1[4][i] = m3[4][i] + m3[6][i];
      m1[5][i] = m3[5][i] + m3[7][i];
      m1[6][i] = m3[4][i] - m3[6][i];
      m1[7][i] = m3[5][i] - m3[7][i];

      m2[0][i] = m1[0][i] + m1[1][i];
      m2[1][i] = m1[0][i] - m1[1][i];
      m2[2][i] = m1[2][i] + m1[3][i];
      m2[3][i] = m1[2][i] - m1[3][i];
      m2[4][i] = m1[4][i] + m1[5][i];
      m2[5][i] = m1[4][i] - m1[5][i];
      m2[6][i] = m1[6][i] + m1[7][i];
      m2[7][i] = m1[6][i] - m1[7][i];
    }
    for (j=0; j < 8; j++)
      for (i=0; i < 8; i++)
        sad += (absm(m2[j][i]));
    sad=((sad+2)>>2);
  }
  else
  {
    for(i=0; i<64; i++)
      sad += byte_abs [diff [i]];
  }

    return sad;
}
