void dslash_eo( field_offset src, field_offset dest, int parity ) {
   register int i;
   register site *s;
   register int ipath,otherparity;
   register double x; /* coefficient of path */

    switch(parity){
	case EVEN:	otherparity=ODD; break;
	case ODD:	otherparity=EVEN; break;
	case EVENANDODD:	otherparity=EVENANDODD; break;
    }

    /* Parallel transport by all the paths in the action.  
       Multiply by coefficient in table
    */
    FORSOMEPARITY(i,s,parity){ clearvec( (su3_vector *)F_PT(s,dest) ); }

    for( ipath=0; ipath<num_q_paths; ipath++ ){  /* loop over paths */
	    path_transport( src, F_OFFSET(tempvec[0]), parity,
		q_paths[ipath].dir, q_paths[ipath].length );
	    x=q_paths[ipath].coeff;
	    FORSOMEPARITY(i,s,parity){
		scalar_mult_add_su3_vector(  (su3_vector *)F_PT(s,dest),
		    &(s->tempvec[0]), x, (su3_vector *)F_PT(s,dest) );
	    }
    }   /* ipath */
} /* dslash_eo */
