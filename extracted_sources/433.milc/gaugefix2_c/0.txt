void accum_gauge_hit(int gauge_dir,int parity)
{

/* Accumulates sums and differences of link matrices for determining optimum */
/* hit for gauge fixing */
/* Differences are kept in diffmat and the diagonal elements of the sums */
/* in sumvec  */

  register int j;
  register su3_matrix *m1,*m2;
  register int dir,i;
  register site *s;

  /* Clear sumvec and diffmat */

  FORSOMEPARITY(i,s,parity)
    {
      if(diffmat_offset >= 0)
	clear_su3mat((su3_matrix *)F_PT(s,diffmat_offset));
      else
	clear_su3mat(&diffmatp[i]);
      if(sumvec_offset >= 0)
	clearvec((su3_vector *)F_PT(s,sumvec_offset));
      else
	clearvec(&sumvecp[i]);
    }
  
  /* Subtract upward link contributions */

  FORSOMEPARITY(i,s,parity)
    {
      FORALLUPDIRBUT(gauge_dir,dir)
	{
	  /* Upward link matrix */
	  m1 = &(s->link[dir]);
	  if(diffmat_offset >= 0)
	    sub_su3_matrix((su3_matrix *)F_PT(s,diffmat_offset), 
			   m1, (su3_matrix *)F_PT(s,diffmat_offset)); 
	  else
	    sub_su3_matrix( &diffmatp[i], m1, &diffmatp[i]); 

	  if(sumvec_offset >= 0)
	    {
	      for(j=0;j<3;j++)CSUM( ((su3_vector *)F_PT(s,sumvec_offset))->c[j],
				    m1->e[j][j]);
	    }
	  else
	    {
	      for(j=0;j<3;j++)CSUM( sumvecp[i].c[j],m1->e[j][j]);
	    }
	}
    }

  /* Add downward link contributions */

  FORSOMEPARITY(i,s,parity)
    {
      FORALLUPDIRBUT(gauge_dir,dir)
	{
	  /* Downward link matrix */
	  m2 = (su3_matrix *)gen_pt[dir][i];

	  if(diffmat_offset >= 0)
	    add_su3_matrix((su3_matrix *)F_PT(s,diffmat_offset), m2, 
			   (su3_matrix *)F_PT(s,diffmat_offset));
	  else
	    add_su3_matrix( &diffmatp[i], m2, &diffmatp[i]);
	    
	  if(sumvec_offset >= 0)
	    {
	      for(j=0;j<3;j++)CSUM( ((su3_vector *)F_PT(s,sumvec_offset))->c[j],
				    m2->e[j][j]);
	    }
	  else
	    {
	      for(j=0;j<3;j++)CSUM( sumvecp[i].c[j], m2->e[j][j]);
	    }

	  /* Add diagonal elements to sumvec  */
	}
    }
} /* accum_gauge_hit */
