void gaugefixstep(int gauge_dir,double *av_gauge_fix_action,double relax_boost,
	      int nvector, field_offset vector_offset[], int vector_parity[],
	      int nantiherm, field_offset antiherm_offset[], 
	      int antiherm_parity[] )
{
  /* Carry out one iteration in the gauge-fixing process */

  int parity;
  msg_tag *mtag[8];
  double gauge_fix_action;
  register int dir,i;
  register site *s;

  /* Alternate parity to prevent interactions during gauge transformation */
  *av_gauge_fix_action = 0.;
  g_sync();
  fflush(stdout);
  
  for(parity = ODD; parity <= EVEN; parity++)
    {
      /* Start gathers of downward links */
      
      FORALLUPDIR(dir)
	{
	  mtag[dir] = start_gather( F_OFFSET(link[dir]), sizeof(su3_matrix),
			   OPP_DIR(dir), parity, gen_pt[dir] );
	}
      
      /* Wait for gathers */
      
      FORALLUPDIR(dir)
         {
	  wait_gather(mtag[dir]);
	 }

      /* Total gauge fixing action for sites of this parity: Before */
      gauge_fix_action = get_gauge_fix_action(gauge_dir,parity);

      /* Do optimum gauge hit on various subspaces */

      do_hit(gauge_dir,parity,0,1, relax_boost,
		   nvector, vector_offset, vector_parity,
		   nantiherm, antiherm_offset, antiherm_parity);
      do_hit(gauge_dir,parity,1,2, relax_boost,
		   nvector, vector_offset, vector_parity,
		   nantiherm, antiherm_offset, antiherm_parity);
      do_hit(gauge_dir,parity,2,0, relax_boost,
		   nvector, vector_offset, vector_parity,
		   nantiherm, antiherm_offset, antiherm_parity);

      /* Total gauge fixing action for sites of this parity: After */
      gauge_fix_action = get_gauge_fix_action(gauge_dir,parity);
      
      *av_gauge_fix_action += gauge_fix_action;

      /* Scatter downward link matrices by gathering to sites of */
      /* opposite parity */

      FORALLUPDIR(dir)
	{
	  /* Synchronize before scattering to be sure the new modified link */
	  /* matrices are all ready to be scattered and diffmat is not */
	  /* overwritten before it is used */
	  g_sync();

	  /* First copy modified link for this dir */
	  /* from comm buffer or node to diffmat */

	  FORSOMEPARITY(i,s,parity)
	    {
	      if(diffmat_offset >= 0)
		su3mat_copy((su3_matrix *)(gen_pt[dir][i]),(su3_matrix *)F_PT(s,diffmat_offset));
	      else
		su3mat_copy((su3_matrix *)(gen_pt[dir][i]), &diffmatp[i]);
	    }
	  
	  /* Now we are finished with gen_pt[dir] */
	  cleanup_gather(mtag[dir]);
      
	  /* Synchronize to make sure the previous copy happens before the */
	  /* subsequent gather below  */
	  g_sync();

	  /* Gather diffmat onto sites of opposite parity */
	  if(diffmat_offset >= 0)
	    mtag[dir] = start_gather( diffmat_offset, sizeof(su3_matrix),
				      dir, OPP_PAR(parity), gen_pt[dir] );
	  else
	    mtag[dir] = start_gather_from_temp( diffmatp, sizeof(su3_matrix),
				      dir, OPP_PAR(parity), gen_pt[dir] );

	  wait_gather(mtag[dir]);

         /* Copy modified matrices into proper location */

         FORSOMEPARITY(i,s,OPP_PAR(parity))
	      su3mat_copy((su3_matrix *)(gen_pt[dir][i]),&(s->link[dir]));

	  cleanup_gather(mtag[dir]);
	}

    }
} /* gaugefixstep */
