void genconf(t_atoms *atoms,rvec *x,rvec *v,real *r,matrix box,ivec n_box)
{
  int     i,ix,iy,iz,m,j,imol,offset;
  rvec    delta;
  int     nmol;
  
  nmol=n_box[XX]*n_box[YY]*n_box[ZZ];
  
  /*print message*/
  fprintf(stderr,"Generating configuration\n");
  imol=0;
  for(ix=0; (ix < n_box[XX]); ix++) {
    delta[XX]=ix*box[XX][XX];
    for(iy=0; (iy < n_box[YY]); iy++) {
      delta[YY]=iy*box[YY][YY];
      for(iz=0; (iz < n_box[ZZ]); iz++) {
	delta[ZZ]=iz*box[ZZ][ZZ];
	offset=imol*atoms->nr;
	for (i=0;(i < atoms->nr);i++) {
	  for (m=0;(m < DIM);m++)
	    x[offset+i][m]=delta[m]+x[i][m];
	  if (v) 
	    for (m=0;(m < DIM);m++)
	      v[offset+i][m]=v[i][m];
	  r[offset+i]=r[i];
        }
	imol++;
      }
    }
  }
  for (i=1;(i<nmol);i++) {
    int offs    = i*atoms->nr;
    int offsres = i*atoms->nres;
    for (j=0;(j<atoms->nr);j++) {
      atoms->atomname[offs+j]  = atoms->atomname[j];
      atoms->atom[offs+j].resnr = atoms->atom[j].resnr+offsres;
      atoms->resname[atoms->atom[offs+j].resnr]=
	atoms->resname[atoms->atom[j].resnr];
    }
  }
  atoms->nr*=nmol;
  atoms->nres*=nmol;
  for(i=0; i<DIM; i++)
    for(j=0; j<DIM; j++)
      box[j][i]*=n_box[j];
} /*genconf()*/
