void copy_ff(t_coupl_rec *tcr,t_forcerec *fr,t_mdatoms *md,t_idef *idef)
{
  int        i,j,ati,atj,type;
  t_coupl_LJ *tclj;
  t_coupl_BU *tcbu;
  t_coupl_Q  *tcq;
  
  /* Save values for printing */
  for(i=0; (i<tcr->nLJ); i++) {
    tclj = &(tcr->tcLJ[i]);
    
    ati  = tclj->at_i;
    atj  = tclj->at_j;
    if (atj == -1)
      atj = ati;
    tclj->c6  = C6(fr->nbfp,fr->ntype,ati,atj);
    tclj->c12 = C12(fr->nbfp,fr->ntype,ati,atj);
  }
  
  for(i=0; (i<tcr->nBU); i++) {
    tcbu = &(tcr->tcBU[i]);
    
    ati  = tcbu->at_i;
    atj  = tcbu->at_j;
    if (atj == -1)
      atj = ati;
    tcbu->a = BHAMA(fr->nbfp,fr->ntype,ati,atj);
    tcbu->b = BHAMB(fr->nbfp,fr->ntype,ati,atj);
    tcbu->c = BHAMC(fr->nbfp,fr->ntype,ati,atj);
  }
  
  for(i=0; (i<tcr->nQ); i++) {
    tcq = &(tcr->tcQ[i]);
    for(j=0; (j<md->nr); j++) {
      if (md->typeA[j] == tcq->at_i) {
	tcr->tcQ[i].Q = md->chargeA[j];
	break;
      }
    }
  }
  for(i=0; (i<tcr->nIP); i++) {
    /* Let's just copy the whole struct !*/
    type = tcr->tIP[i].type;
    tcr->tIP[i].iprint=idef->iparams[type];
  }
}
