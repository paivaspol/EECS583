void read_gct(char *fn,t_coupl_rec *tcr)
{
  t_inpfile *inp;
  int       i,j,ninp,nQ,nLJ,nBU,nIP;
  bool      bWrong;
  
  inp=read_inpfile(fn,&ninp);
  for(i=0; (i<eoObsNR); i++) {
    tcr->bObsUsed[i] = FALSE;
    RTYPE (eoNames[i],	tcr->ref_value[i],	0.0);
  }
  ITYPE (eoNames[eoMemory],     tcr->nmemory,   1);
  ETYPE (eoNames[eoInter],      tcr->bInter,    yesno_names);
  ETYPE (eoNames[eoUseVirial],  tcr->bVirial,   yesno_names);
  
  tcr->tcLJ=NULL;
  tcr->tcBU=NULL;
  tcr->tcQ=NULL;
  tcr->tIP=NULL;
  nQ=nLJ=nBU=nIP=0;
  
  for(i=0; (i<ninp); i++) {
    bWrong=FALSE;
    if (strcasecmp(inp[i].name,"LJ") == 0) 
      bWrong=add_lj(&nLJ,&(tcr->tcLJ),inp[i].value,tcr->bObsUsed);
    else if (strcasecmp(inp[i].name,"BU") == 0) 
      bWrong=add_bu(&nBU,&(tcr->tcBU),inp[i].value,tcr->bObsUsed);
    else if (strcasecmp(inp[i].name,"Q") == 0) 
      bWrong=add_q(&nQ,&(tcr->tcQ),inp[i].value,tcr->bObsUsed);
    else if (strcasecmp(inp[i].name,"Bonds") == 0)
      bWrong=add_ip(&nIP,&(tcr->tIP),inp[i].value,F_BONDS,tcr->bObsUsed);
      
    if (bWrong)
      fprintf(stderr,"Wrong line in %s: '%s = %s'\n",
	      fn,inp[i].name,inp[i].value);
    /*sfree(inp[i].name);
      sfree(inp[i].value);*/
  }
  /* Check which ones have to be printed */
  for(i=1; (i<nQ); i++)
    for(j=0; (j<i); j++) {
      if (tcr->tcQ[i].at_i == tcr->tcQ[j].at_i)
	tcr->tcQ[j].bPrint=FALSE;
    }
  for(i=1; (i<nLJ); i++)
    for(j=0; (j<i); j++) {
      if (((tcr->tcLJ[i].at_i == tcr->tcLJ[j].at_i) &&
	   (tcr->tcLJ[i].at_j == tcr->tcLJ[j].at_j)) ||
	  ((tcr->tcLJ[i].at_i == tcr->tcLJ[j].at_j) &&
	   (tcr->tcLJ[i].at_j == tcr->tcLJ[j].at_i))) 
	tcr->tcLJ[j].bPrint=FALSE;
    }
  
  for(i=1; (i<nBU); i++)
    for(j=0; (j<i); j++) {
      if (((tcr->tcBU[i].at_i == tcr->tcBU[j].at_i) &&
	   (tcr->tcBU[i].at_j == tcr->tcBU[j].at_j)) ||
	  ((tcr->tcBU[i].at_i == tcr->tcBU[j].at_j) &&
	   (tcr->tcBU[i].at_j == tcr->tcBU[j].at_i))) 
	tcr->tcBU[j].bPrint=FALSE;
    }
  
  tcr->nQ  = nQ;
  tcr->nLJ = nLJ;
  tcr->nBU = nBU;
  tcr->nIP = nIP;
  
  sfree(inp);
}
