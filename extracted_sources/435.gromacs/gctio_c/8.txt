void write_gct(char *fn,t_coupl_rec *tcr,t_idef *idef)
{
  FILE *fp;
  int  i,ftype;
  
  fp=ffopen(fn,"w");
  nice_header(fp,fn);
  fprintf(fp,"%-15s = %12g  ; Reference pressure for coupling\n",
	  eoNames[eoPres],tcr->ref_value[eoPres]);
  fprintf(fp,"%-15s = %12g  ; Reference potential energy\n",
	  eoNames[eoEpot],tcr->ref_value[eoEpot]);
  fprintf(fp,"%-15s = %12g  ; Reference distance\n",
	  eoNames[eoDist],tcr->ref_value[eoDist]);
  fprintf(fp,"%-15s = %12g  ; Reference dipole\n",
	  eoNames[eoMu],tcr->ref_value[eoMu]);
  fprintf(fp,"%-15s = %12g  ; Reference force\n",
	  eoNames[eoForce],tcr->ref_value[eoForce]);
  fprintf(fp,"%-15s = %12g  ; Reference force in X dir\n",
	  eoNames[eoFx],tcr->ref_value[eoFx]);
  fprintf(fp,"%-15s = %12g  ; Reference force in Y dir\n",
	  eoNames[eoFy],tcr->ref_value[eoFy]);
  fprintf(fp,"%-15s = %12g  ; Reference force in Z dir\n",
	  eoNames[eoFz],tcr->ref_value[eoFz]);
  fprintf(fp,"%-15s = %12g  ; Reference pres in X dir\n",
	  eoNames[eoPx],tcr->ref_value[eoPx]);
  fprintf(fp,"%-15s = %12g  ; Reference pres in Y dir\n",
	  eoNames[eoPy],tcr->ref_value[eoPy]);
  fprintf(fp,"%-15s = %12g  ; Reference pres in Z dir\n",
	  eoNames[eoPz],tcr->ref_value[eoPz]);
  fprintf(fp,"%-15s = %12g  ; Polarizability used for the Epot correction\n",
	  eoNames[eoPolarizability],tcr->ref_value[eoPolarizability]);
  fprintf(fp,"%-15s = %12g  ; Gas phase dipole moment used for Epot correction\n", 
	  eoNames[eoDipole],tcr->ref_value[eoDipole]);
  fprintf(fp,"%-15s = %12d  ; Memory for coupling. Makes it converge faster.\n",
	  eoNames[eoMemory],tcr->nmemory);
  fprintf(fp,"%-15s = %12s  ; Use intermolecular Epot only (LJ+Coul)\n",
	  eoNames[eoInter],yesno_names[tcr->bInter]);
  fprintf(fp,"%-15s = %12s  ; Use virial iso pressure\n",
	  eoNames[eoUseVirial],yesno_names[tcr->bVirial]);
  
  fprintf(fp,"\n; Q-Coupling   %6s  %12s\n","type","xi");
  for(i=0; (i<tcr->nQ); i++) {
    fprintf(fp,"%-8s = %8s  %6d  %12g\n",
	    "Q",eoNames[tcr->tcQ[i].eObs],tcr->tcQ[i].at_i,tcr->tcQ[i].xi_Q);
  }
  
  fprintf(fp,"\n; %8s %8s  %6s  %6s  %12s  %12s\n","Couple","To",
	  "i-type","j-type","xi-c6","xi-c12");
  fprintf(fp,"; j-type == -1 means mixing rules will be applied!\n");
  for(i=0; (i<tcr->nLJ); i++) {
    fprintf(fp,"%-8s = %8s  %6d  %6d  %12g  %12g\n",
	    "LJ",eoNames[tcr->tcLJ[i].eObs],
	    tcr->tcLJ[i].at_i,tcr->tcLJ[i].at_j,
	    tcr->tcLJ[i].xi_6,tcr->tcLJ[i].xi_12);
  }
  
  fprintf(fp,"\n; %8s %8s  %6s  %6s  %12s  %12s  %12s\n","Couple","To",
	  "i-type","j-type","xi-A","xi-B","xi-C");
  fprintf(fp,"; j-type == -1 means mixing rules will be applied!\n");
  for(i=0; (i<tcr->nBU); i++) {
    fprintf(fp,"%-8s = %8s  %6d  %6d  %12g  %12g  %12g\n",
	    "BU",eoNames[tcr->tcBU[i].eObs],
	    tcr->tcBU[i].at_i,tcr->tcBU[i].at_j,
	    tcr->tcBU[i].xi_a,tcr->tcBU[i].xi_b,tcr->tcBU[i].xi_c);
  }
  
  fprintf(fp,"\n; More Coupling\n");
  for(i=0; (i<tcr->nIP); i++) {
    ftype=idef->functype[tcr->tIP[i].type];
    switch (ftype) {
    case F_BONDS:
      fprintf(fp,"%-15s = %-8s  %4d  %12g  %12g\n",
	      "Bonds",eoNames[tcr->tIP[i].eObs],tcr->tIP[i].type,
	      tcr->tIP[i].xi.harmonic.krA,
	      tcr->tIP[i].xi.harmonic.rA);
      break;
    default:
      fprintf(stderr,"ftype %s not supported (yet)\n",
	      interaction_function[ftype].longname);
    }
  }
  fclose(fp);
}
