void write_sto_conf_indexed(char *outfile,char *title,t_atoms *atoms, 
			    rvec x[],rvec *v,matrix box,
			    atom_id nindex,atom_id index[])
{
  FILE       *out;
  int        ftp;
  t_trxframe fr;

  ftp=fn2ftp(outfile);
  switch (ftp) {
  case efGRO:
    out=ffopen(outfile,"w");
    write_hconf_indexed_p(out, title, atoms, nindex, index, 3, x, v, box);
    fclose(out);
    break;
  case efG96:
    clear_trxframe(&fr,TRUE);
    fr.bTitle = TRUE;
    fr.title = title;
    fr.natoms = atoms->nr;
    fr.bAtoms = TRUE;
    fr.atoms = atoms;
    fr.bX = TRUE;
    fr.x = x;
    if (v) {
      fr.bV = TRUE;
      fr.v = v;
    }
    fr.bBox = TRUE;
    copy_mat(box,fr.box);
    out=ffopen(outfile,"w");
    write_g96_conf(out, &fr, nindex, index);
    fclose(out);
    break;
  case efPDB:
  case efBRK:
  case efENT:
    out=ffopen(outfile,"w");
    write_pdbfile_indexed(out, title, atoms, x, box, 0, -1, nindex, index);
    fclose(out);
    break;
  case efTPR:
  case efTPB:
  case efTPA:
    fatal_error(0,"Sorry, can not write a topology to %s",outfile);
    break;
  default:
    fatal_error(0,"Not supported in write_sto_conf_indexed: %s",outfile);
  }
}
