void calculate_view(t_3dview *view)
{
#define SMALL 1e-6
  mat4 To,Te,T1,T2,T3,T4,T5,N1,D1,D2,D3,D4,D5;
  real dx,dy,dz,l,r;
  
  /* eye center */
  dx=view->eye[XX];
  dy=view->eye[YY];
  dz=view->eye[ZZ];
  l = sqrt(dx*dx+dy*dy+dz*dz);
  r = sqrt(dx*dx+dy*dy);
#ifdef DEBUG
  print_v4(debug,"eye",N,view->eye);
  printf("del: %10.5f%10.5f%10.5f l: %10.5f, r: %10.5f\n",dx,dy,dz,l,r);
#endif
  if (l < SMALL)
    fatal_error(0,"Error: Zero Length Vector - No View Specified");
  translate((real)(-view->origin[XX]),
	    (real)(-view->origin[YY]),(real)(-view->origin[ZZ]),To);
  translate((real)(-view->eye[XX]),
	    (real)(-view->eye[YY]),(real)(-view->eye[ZZ]),Te);

  unity_m4(T2);
  T2[YY][YY]=0, T2[YY][ZZ]=-1, T2[ZZ][YY]=1, T2[ZZ][ZZ]=0;

  unity_m4(T3);
  if (r > 0)
    T3[XX][XX]=-dy/r, T3[XX][ZZ]=dx/r, T3[ZZ][XX]=-dx/r, T3[ZZ][ZZ]=-dy/r;

  unity_m4(T4);
  T4[YY][YY]=r/l, T4[YY][ZZ]=dz/l, T4[ZZ][YY]=-dz/l, T4[ZZ][ZZ]=r/l;

  unity_m4(T5);
  T5[ZZ][ZZ]=-1;

  unity_m4(N1);
  /* N1[XX][XX]=4,N1[YY][YY]=4; */

  mult_matrix(T1,To,view->Rot);
  mult_matrix(D1,Te,T2);
  mult_matrix(D2,T3,T4);
  mult_matrix(D3,T5,N1);
  mult_matrix(D4,T1,D1);
  mult_matrix(D5,D2,D3);

  mult_matrix(view->proj,D4,D5);

#ifdef DEBUG
  print_m4(debug,"T1",T1);
  print_m4(debug,"T2",T2);
  print_m4(debug,"T3",T3);
  print_m4(debug,"T4",T4);
  print_m4(debug,"T5",T5);
  print_m4(debug,"N1",N1);
  print_m4(debug,"Rot",view->Rot);
  print_m4(debug,"Proj",view->proj);
#endif
}
