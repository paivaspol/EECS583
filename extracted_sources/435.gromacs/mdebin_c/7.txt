void print_ebin(int fp_ene,bool bEne,bool bDR,bool bOR,
		FILE *log,int steps,real time,int mode,bool bCompact,
		t_mdebin *md,t_fcdata *fcd,t_atoms *atoms)
{
  static char **grpnms=NULL;
  static char *kjm="(kJ/mol)";
  char        buf[246];
  int         i,j,n,ni,nj,ndr,nor;
  int         nr[enxNR];
  real        *block[enxNR];
  t_enxframe  fr;

  switch (mode) {
  case eprNORMAL:
    fr.t          = time;
    fr.step       = steps;
    fr.nre        = (bEne) ? md->ebin->nener : 0;
    fr.ener       = md->ebin->e;
    fr.ndisre     = bDR ? fcd->disres.npr : 0;
    fr.rav        = fcd->disres.rav;
    fr.rt         = fcd->disres.rt;
    nr[enxOR]     = bOR ? fcd->orires.nr : 0;
    nr[enxORI]    = (bOR && (fcd->orires.oinsl != fcd->orires.otav)) ? 
      fcd->orires.nr : 0;
    fr.nr         = nr;
    block[enxOR]  = fcd->orires.otav;
    block[enxORI] = fcd->orires.oinsl;
    fr.block      = block;
    if (fr.nr[enxOR])
      fr.nblock   = 2;
    else
      fr.nblock   = 0;
    if (fr.nre || fr.ndisre || fr.nr[enxOR] || fr.nr[enxORI])
      do_enx(fp_ene,&fr);
    break;
  case eprAVER:
    if (log) pprint(log,"A V E R A G E S");
    break;
  case eprRMS:
    if (log) pprint(log,"R M S - F L U C T U A T I O N S");
    break;
  default:
    fatal_error(0,"Invalid print mode (%d)",mode);
  }
  
  if (log) 
  {
      if (fcd->orires.nr)
          print_orires_log(log,fcd);
      
      fprintf(log,"   Energies %s\n",kjm);
      pr_ebin(log,md->ebin,md->ie,f_nre,5,mode,steps,TRUE);  
      fprintf(log,"\n");
      
      if (!bCompact) {
          if (bPC) {
              pr_ebin(log,md->ebin,md->ib, bTricl ? NTRICLBOXS : NBOXS,5,mode,steps,TRUE);      
              fprintf(log,"\n");
          }
          if (bShake) {
              fprintf(log,"   Shake Virial %s\n",kjm);
              pr_ebin(log,md->ebin,md->isvir,9,3,mode,steps,FALSE);  
              fprintf(log,"\n");
              fprintf(log,"   Force Virial %s\n",kjm);
              pr_ebin(log,md->ebin,md->ifvir,9,3,mode,steps,FALSE);  
              fprintf(log,"\n");
          }
          fprintf(log,"   Total Virial %s\n",kjm);
          pr_ebin(log,md->ebin,md->ivir,9,3,mode,steps,FALSE);   
          fprintf(log,"\n");
          fprintf(log,"   Pressure (bar)\n");
          pr_ebin(log,md->ebin,md->ipres,9,3,mode,steps,FALSE);  
          fprintf(log,"\n");
          fprintf(log,"   Total Dipole (Debye)\n");
          pr_ebin(log,md->ebin,md->imu,3,3,mode,steps,FALSE);    
          fprintf(log,"\n");
          
          if (md->nE > 1) {
              if (grpnms==NULL) {
                  snew(grpnms,md->nE);
                  n=0;
                  for(i=0; (i<md->nEg); i++) {
                      ni=atoms->grps[egcENER].nm_ind[i];
                      for(j=i; (j<md->nEg); j++) {
                          nj=atoms->grps[egcENER].nm_ind[j];
                          sprintf(buf,"%s-%s",*(atoms->grpname[ni]),*(atoms->grpname[nj]));
                          grpnms[n++]=strdup(buf);
                      }
                  }
              }
              sprintf(buf,"Epot %s",kjm);
              fprintf(log,"%15s   ",buf);
              for(i=0; (i<egNR); i++) 
                  if (bEInd[i])
                      fprintf(log,"%12s   ",egrp_nm[i]);
              fprintf(log,"\n");
              for(i=0; (i<md->nE); i++) {
                  fprintf(log,"%15s",grpnms[i]);
                  pr_ebin(log,md->ebin,md->igrp[i],md->nEc,md->nEc,mode,steps,FALSE);
              }
              fprintf(log,"\n");
          }
          if (md->nTC > 1) {
              pr_ebin(log,md->ebin,md->itc,2*md->nTC,4,mode,steps,TRUE);
              fprintf(log,"\n");
          }
          if (md->nU > 1) {
              fprintf(log,"%15s   %12s   %12s   %12s\n",
                      "Group","Ux","Uy","Uz");
              for(i=0; (i<md->nU); i++) {
                  ni=atoms->grps[egcACC].nm_ind[i];
                  fprintf(log,"%15s",*atoms->grpname[ni]);
                  pr_ebin(log,md->ebin,md->iu+3*i,3,3,mode,steps,FALSE);
              }
              fprintf(log,"\n");
          }
      }
  }
}
