static void do_idef(t_idef *idef,bool bRead)
{
  int i,j,k;
  bool bDum=TRUE,bClear;
  
  do_int(idef->atnr);
  do_int(idef->nodeid);
  do_int(idef->ntypes);
  if (bRead) {
    snew(idef->functype,idef->ntypes);
    snew(idef->iparams,idef->ntypes);
  }
  ndo_int(idef->functype,idef->ntypes,bDum);
  
  for (i=0; (i<idef->ntypes); i++) {
    if (bRead)
      for (k=0; k<NFTUPD; k++)
	if ((file_version < ftupd[k].fvnr) && 
	    (idef->functype[i] >= ftupd[k].ftype))
	  idef->functype[i] += 1;
    do_iparams(idef->functype[i],&idef->iparams[i],bRead);
  }

  for(j=0; (j<F_NRE); j++) {
    bClear = FALSE;
    if (bRead)
      for (k=0; k<NFTUPD; k++)
	if ((file_version < ftupd[k].fvnr) && (j == ftupd[k].ftype))
	  bClear = TRUE;
    if (bClear) {
      idef->il[j].nr = 0;
      for(i=0; i<MAXNODES; i++)
	idef->il[j].multinr[i] = 0;
      idef->il[j].iatoms = NULL;
    } else
      do_ilist(&idef->il[j],bRead,interaction_function[j].name);
  }
}
