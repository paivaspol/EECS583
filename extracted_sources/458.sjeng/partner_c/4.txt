void HandlePtell(char *input)
{
  int change = 0;
  char howmuch[80] = "is...uh...what did you say?\n";

  if (!strncmp(input+6, "help", 4))
      {
	printf("tellics ptell Commands that I understand are : sit, go, fast, slow, abort, flag, +/++/+++/-/--/---{p,n,b,r,q,d,h,trades}, x, dead, formula, help.\n");
	return;  
    }
  
  if (Variant != Bughouse && (strncmp(input+6, "sorry", 5)))
  {
    printf("tellics ptell Sorry, but I'm not playing a bughouse game.\n");
    return;
  }

  if (!strncmp(input+6, "sit", 3))
    {
      printf("tellics ptell Ok, I sit next move. Tell me when to go.\n");
      must_sit = TRUE;
      must_go = 0;
    }
  else if (!strncmp(input+6, "go", 2) || (!strncmp(input+6, "move", 4)))
    {
      printf("tellics ptell Ok, I'm moving.\n");
      must_sit = FALSE;
      must_go = 4;
    }
  else if (!strncmp(input+6, "fast", 4) || (!strncmp(input+6, "time", 4)))
    {
      printf("tellics ptell Ok, I'm going FAST!\n");
      go_fast = TRUE;
      must_sit = FALSE;
    }
  else if (!strncmp(input+6, "slow", 4))
    {
      printf("tellics ptell Ok, moving normally.\n");
      go_fast = FALSE;
      must_sit = FALSE;
    }
  else if (!strncmp(input+6, "abort", 5))
    {
      printf("tellics ptell Requesting abort...\n");
      printf("tellics abort\n");
    }
  else if (!strncmp(input+6, "flag", 4))
    {
      printf("tellics ptell Flagging...\n");
      printf("tellics flag\n");
    }
  else if (!strncmp(input+6, "+", 1))
    { 
      /* trades are handled seperately */
      if ((strstr(input+6, "trade") != NULL)   /* either an explicit trade request */
	  || (                                 /* or there's just no piece in the string */
	      (strstr(input+6, "n") == NULL) &&
	      (strstr(input+6, "b") == NULL) &&
	      (strstr(input+6, "p") == NULL) &&
	      (strstr(input+6, "r") == NULL) &&
	      (strstr(input+6, "q") == NULL) &&
	      (strstr(input+6, "d") == NULL) &&
	      (strstr(input+6, "h") == NULL)))
	{
	  if (comp_color == 1)
	    {
	      hand_value[wpawn] += 25;
	      hand_value[wknight] += 50;   
	      hand_value[wbishop] += 50;   
	      hand_value[wrook] += 50;
	      hand_value[wqueen] += 100;
	    }
	  else
	    {
	      hand_value[bpawn] -= 25;
	      hand_value[bknight] -= 50;   
	      hand_value[bbishop] -= 50;   
	      hand_value[brook] -= 50;
	      hand_value[bqueen] -= 100;
	    }
	  printf("tellics ptell Ok, trading is GOOD\n");
	}
      /* first, find how much we want that piece */
      else if (strstr(input+6, "+++") != NULL)
	{
	  change = 50000;
	  strcpy(howmuch, "mates");
	}
      else if (strstr(input+6, "++") != NULL)
	{
	  change = 1000;
	  strcpy(howmuch, "is VERY good (ptell me 'x' to play normal again)");
	}
      else if (strstr(input+6, "+") != NULL)
	{
	  change = 150;
	  strcpy(howmuch, "is good (ptell me 'x' to play normal again)");
	}
      else
	DIE;

      /* now find which piece we want */
      if (strstr(input+6, "n") != NULL)
	{
	  if (comp_color == 1)
	    /* we want a black knight-> the value for holding a white knight rises */
	    hand_value[wknight] = std_hand_value[wknight] + change;
	  else
	    /* we want a white knight */
	    hand_value[bknight] = std_hand_value[bknight] - change; 
	 
	  printf("tellics ptell Ok, Knight %s\n", howmuch);
	}
      if (strstr(input+6, "b") != NULL)
	{
	  if (comp_color == 1)
	    hand_value[wbishop] = std_hand_value[wbishop] + change;
	  else
	    hand_value[bbishop] = std_hand_value[bbishop] - change;

	  /* b is good, so q is good too */
	  if (comp_color == 1)
	    hand_value[wqueen] = std_hand_value[wqueen] + change;
	  else
	    hand_value[bqueen] = std_hand_value[bqueen] - change;
	  
	  printf("tellics ptell Ok, Bishop %s\n", howmuch);
	}
     if (strstr(input+6, "r") != NULL)
	{
	  if (comp_color == 1)
	    hand_value[wrook] = std_hand_value[wrook] + change;
	  else
	    hand_value[brook] = std_hand_value[brook] - change;

	  /* r is good, so q is good too */
	  if (comp_color == 1)
	    hand_value[wqueen] = std_hand_value[wqueen] + change;
	  else
	    hand_value[bqueen] = std_hand_value[bqueen] - change;

	  printf("tellics ptell Ok, Rook %s\n", howmuch);
	}
     if (strstr(input+6, "q") != NULL)
	{
	  if (comp_color == 1)
	    hand_value[wqueen] = std_hand_value[wqueen] + change;
	  else
	    hand_value[bqueen] = std_hand_value[bqueen] - change;
	 
	  printf("tellics ptell Ok, Queen %s\n", howmuch); 
	}
     if (strstr(input+6, "p") != NULL)
	{
	  if (comp_color == 1)
	    hand_value[wpawn] = std_hand_value[wpawn] + change;
	  else
	    hand_value[bpawn] = std_hand_value[bpawn] - change;
	
	  /* p is good, so b and q are good too */
	  if (comp_color == 1)
	    {
	      hand_value[wqueen] = std_hand_value[wqueen] + change;
	      hand_value[wbishop] = std_hand_value[wbishop] + change;
	    }	  
	  else
	    {
	      hand_value[bqueen] = std_hand_value[bqueen] - change;
	      hand_value[bbishop] = std_hand_value[bbishop] - change;
	    }
	
	  printf("tellics ptell Ok, Pawn %s\n", howmuch); 
	}
     if (strstr(input+6, "d") != NULL)
	{
	  if (comp_color == 1)
	    {
	      hand_value[wpawn] = std_hand_value[wpawn] + change;
	      hand_value[wbishop] = std_hand_value[wbishop] + change;
	      hand_value[wqueen] = std_hand_value[wqueen] + change;
	    }	  
	  else
	    {
	      hand_value[bpawn] = std_hand_value[bpawn] - change;
	      hand_value[bbishop] = std_hand_value[bbishop] - change;
	      hand_value[bqueen] = std_hand_value[bqueen] - change;
	    }

	  printf("tellics ptell Ok, Diagonal %s\n", howmuch); 
	}
     if (strstr(input+6, "h") != NULL)
	{
	  if (comp_color == 1)
	    {
	      hand_value[wrook] = std_hand_value[wrook] + change;
	      hand_value[wqueen] = std_hand_value[wqueen] + change;
	    }	  
	  else
	    {
	      hand_value[brook] = std_hand_value[brook] - change;
	      hand_value[bqueen] = std_hand_value[bqueen] - change;
	    }

	  printf("tellics ptell Ok, Heavy %s\n", howmuch); 
	}
    }
  else if (!strncmp(input+6, "-", 1))
    {
      /* trades are handled seperately */
      if ((strstr(input+6, "trade") != NULL)   /* either an explicit trade request */
	  || (                                 /* or there's just no piece in the string */
	      (strstr(input+6, "n") == NULL) &&
	      (strstr(input+6, "b") == NULL) &&
	      (strstr(input+6, "p") == NULL) &&
	      (strstr(input+6, "r") == NULL) &&
	      (strstr(input+6, "q") == NULL) &&
	      (strstr(input+6, "d") == NULL) &&
	      (strstr(input+6, "h") == NULL)))
	{
      	  if (comp_color == 1)
	    {
	      hand_value[bpawn] -= 20;
	      hand_value[bknight] -= 50;   
	      hand_value[bbishop] -= 50;   
	      hand_value[brook] -= 50;
	      hand_value[bqueen] -= 100;
	    }
	  else
	    {
	      hand_value[wpawn] += 20;
	      hand_value[wknight] += 50;   
	      hand_value[wbishop] += 50;   
	      hand_value[wrook] += 50;
	      hand_value[wqueen] += 100;
	    }
	  printf("tellics ptell Ok, trading is BAD\n");
	}
      /* first, find how bad we want to avoid losing that piece */
      else if (strstr(input+6, "---") != NULL)
	{
	  change = 50000;
	  strcpy(howmuch, "mates you (ptell me 'x' when it no longer mates you)");
	}
      else if (strstr(input+6, "--") != NULL)
	{
	  change = 1000;
	  strcpy(howmuch, "is VERY bad (ptell me 'x' when it is no longer bad)");
	}
      else if (strstr(input+6, "-") != NULL)
	{
	  change = 150;
	  strcpy(howmuch, "is bad (ptell me 'x' when it is no longer bad)");
	}
      else
	DIE;

      if (strstr(input+6, "n") != NULL)
	{
	  if (comp_color == 1)
	    hand_value[bknight] = std_hand_value[bknight] - change;
	  else
	    hand_value[wknight] = std_hand_value[wknight] + change; 
	 
	  printf("tellics ptell Ok, Knight %s\n", howmuch);
	}
      if (strstr(input+6, "b") != NULL)
	{
	  if (comp_color == 1)
	    hand_value[bbishop] = std_hand_value[bbishop] - change;
	  else
	    hand_value[wbishop] = std_hand_value[wbishop] + change;

	  /* b is bad, so q is bad too */
	  if (comp_color == 1)
	    hand_value[bqueen] = std_hand_value[bqueen] - change;
	  else
	    hand_value[wqueen] = std_hand_value[wqueen] + change;

	  printf("tellics ptell Ok, Bishop %s\n", howmuch);
	}
     if (strstr(input+6, "r") != NULL)
	{
	  if (comp_color == 1)
	    hand_value[brook] = std_hand_value[brook] - change;
	  else
	    hand_value[wrook] = std_hand_value[wrook] + change;

	  /* r is bad, so q is bad too */
	  if (comp_color == 1)
	    hand_value[bqueen] = std_hand_value[bqueen] - change;
	  else
	    hand_value[wqueen] = std_hand_value[wqueen] + change;
	      
	  printf("tellics ptell Ok, Rook %s\n", howmuch);
	}
     if (strstr(input+6, "q") != NULL)
	{
	  if (comp_color == 1)
	    hand_value[bqueen] = std_hand_value[bqueen] - change;
	  else
	    hand_value[wqueen] = std_hand_value[wqueen] + change;
	 
	  printf("tellics ptell Ok, Queen %s\n", howmuch); 
	}
     if (strstr(input+6, "p") != NULL)
	{
	  if (comp_color == 1)
	    hand_value[bpawn] = std_hand_value[bpawn] - change;
	  else
	    hand_value[wpawn] = std_hand_value[wpawn] + change;
	
	  /* p is bad, so b and q are bad too */
	  if (comp_color == 1)
	    {
	      hand_value[bqueen] = std_hand_value[bqueen] - change;
	      hand_value[bbishop] = std_hand_value[bbishop] - change;
	    }	  
	  else
	    {
	      hand_value[wqueen] = std_hand_value[wqueen] + change;
	      hand_value[wbishop] = std_hand_value[wbishop] + change;
	    }	

	  printf("tellics ptell Ok, Pawn %s\n", howmuch); 
	}
     if (strstr(input+6, "d") != NULL)
	{
	  if (comp_color == 1)
	    {
	      hand_value[bpawn] = std_hand_value[bpawn] - change;
	      hand_value[bbishop] = std_hand_value[bbishop] - change;
	      hand_value[bqueen] = std_hand_value[bqueen] - change;
	    }	  
	  else
	    {
	      hand_value[wpawn] = std_hand_value[wpawn] + change;
	      hand_value[wbishop] = std_hand_value[wbishop] + change;
	      hand_value[wqueen] = std_hand_value[wqueen] + change;
	    }

	  printf("tellics ptell Ok, Diagonal %s\n", howmuch); 
	}
     if (strstr(input+6, "h") != NULL)
	{
	  if (comp_color == 1)
	    {
	      hand_value[brook] = std_hand_value[brook] - change;
	      hand_value[bqueen] = std_hand_value[bqueen] - change;
	    }	  
	  else
	    {
	      hand_value[wrook] = std_hand_value[wrook] + change;
	      hand_value[wqueen] = std_hand_value[wqueen] + change;
	    }

	  printf("tellics ptell Ok, Heavy %s\n", howmuch); 
	}
    }
  else if (((!strncmp(input+6, "x", 1) 
       || (strstr(input+6, "mate me anymore") != NULL) 
       || ((strstr(input+6, "never") != NULL) && (strstr(input+6, "mind") != NULL)))
       || (!strncmp(input+6, "=", 1))) && (strstr(input+6, "ptell me") == NULL))
    {
      printf("tellics ptell Ok, reverting to STANDARD piece values!\n");
      ResetHandValue();
      must_sit = FALSE;
      partnerdead = FALSE;
      piecedead = FALSE;
    }
  else if (!strncmp(input+6, "i'll have to sit...(dead)", 25) ||
	   !strncmp(input+6, "dead", 4))
    {
      /* fellow sjeng is dead -> give it all we've got */
      go_fast = TRUE;
      must_sit = FALSE;
      partnerdead = TRUE;

      /* maybe also here tell go if partner is sjeng ? */
    }
  else if (!strncmp(input+6, "i'll have to sit...(piece)", 26))
    {
      /* fellow sjeng is dead -> get safe fast */
      go_fast = TRUE;
      must_sit = FALSE;
      piecedead = TRUE;
    }
  else if (!strncmp(input+6, "sorry", 5))
    {
      return;
    }
  else if (!strncmp(input+6, "ok", 2))
    {
      return;
    }
  else if (!strncmp(input+6, "hi", 2) || (!strncmp(input+6, "hello", 5)))
    {
      printf("tellics ptell Greetings.\n");
    }
  else if (strstr(input+6, "formula") != NULL)
  {
     printf("tellics ptell Setting formula, if you are still interrupted, complain to my operator.\n");
     printf("tellics set f5 bughouse\n");
  }
  else   
    {
      printf("tellics ptell Sorry, but I don't understand that command.\n");
    }
  return;
}
