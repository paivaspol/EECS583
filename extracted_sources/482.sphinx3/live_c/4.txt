int32 live_utt_decode_block (int16 *samples, int32 nsamples, 
		      int32 live_endutt, partialhyp_t **ohyp)
{
    static int32 live_begin_new_utt = 1;
    static int32 frmno;
    static float32 ***live_feat = NULL;

    int32   live_nfr, live_nfeatvec;
    int32   nwds =0;
    float32 **mfcbuf;
    /*    int i,j;*/

    if(live_feat==NULL)
      live_feat = feat_array_alloc (kbcore_fcb(kbcore), LIVEBUFBLOCKSIZE);

    if (live_begin_new_utt){
        fe_start_utt(fe);
	utt_begin (kb);
	frmno = 0;
	kb->nfr = 0;
        kb->utt_hmm_eval = 0;
        kb->utt_sen_eval = 0;
        kb->utt_gau_eval = 0;
        live_begin_new_utt = 0;
    }
    /* 10.jan.01 RAH, fe_process_utt now requires ***mfcbuf and it allocates the memory internally) */
    mfcbuf = NULL;

    live_nfr = fe_process_utt(fe, samples, nsamples, &mfcbuf); /**/
    if (live_endutt) 	       /* RAH, It seems that we shouldn't throw out this data */
      fe_end_utt(fe,dummyframe); /* Flush out the fe */

#if 0
    E_INFO("Number frame after fe_process_utt %d\n",live_nfr);
    for(i=0;i<live_nfr;i++){
      printf("%d ",i);
      for(j=0;j<13;j++){
	printf("%f ",mfcbuf[i][j]);
	fflush(stdout);
      }
      printf("\n");
      fflush(stdout);
    }
#endif
    if(live_nfr>0){
    /* Compute feature vectors */
      live_nfeatvec = feat_s2mfc2feat_block(kbcore_fcb(kbcore), mfcbuf,
                                         live_nfr, live_begin_new_utt,
					 live_endutt, live_feat);

      //SPEC:uncomment for useful diags E_INFO ("live_nfeatvec: %ld\n",live_nfeatvec);
#if 0
      E_INFO("Current frame number %d, Number of frames %d, Number frame after feat_s2mfcfeat_block %d\n",frmno,live_nfr,live_nfeatvec);

    for(i=0;i<live_nfeatvec;i++){
      printf("%d\n",i);
      printf("Cep: ");
      fflush(stdout);
      for(j=0;j<13;j++){
	printf("%f ",live_feat[i][0][j]);
	fflush(stdout);
      }
      printf("\n");
      fflush(stdout);
      printf("Del: ");
      fflush(stdout);
      for(j=13;j<26;j++){
	printf("%f ",live_feat[i][0][j]);
	fflush(stdout); 
      }
      printf("\n");
      fflush(stdout);
      printf("Acc: ");
      fflush(stdout);
      for(j=26;j<39;j++){
	printf("%f ",live_feat[i][0][j]);
	fflush(stdout);
      }
      printf("\n");
      fflush(stdout);

    }
#endif


    /* decode the block */
    utt_decode_block (live_feat, live_nfeatvec, &frmno, kb, 
		      maxwpf, maxhistpf, maxhmmpf, ptranskip, hmmdumpfp);

    /* Pull out partial hypothesis */
    nwds =  live_get_partialhyp(live_endutt);
    *ohyp = parthyp;
    }
    /* Clean up */
    if (live_endutt) {
	live_begin_new_utt = 1;
	kb->tot_fr += kb->nfr;
	utt_end(kb);
    }
    else {
	live_begin_new_utt = 0;
    }

    /* I'm starting to think that fe_process_utt should not be allocating its memory,
       that or it should allocate some max and just keep on going, this idea of constantly allocating freeing
       memory seems dangerous to me.*/
    /* 20040318 ARCHAN : It sounds extremely dangerous to me and I will eliminate it sometime. */

    if(live_nfr>0){
      ckd_free_2d((void **) mfcbuf); /* RAH, this must be freed since fe_process_utt allocates it */
    }


    return(nwds);
}
