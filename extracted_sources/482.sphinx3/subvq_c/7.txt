int32 subvq_mgau_eval (mgau_model_t *g, subvq_t *vq, int32 m, int32 n, int32 *active)
{
    mgau_t *mgau;
    int32 *map;
    int32 i,j, v, sv_id;
    int32 c;
    int32 *vqdist;
    int32 score;
	int32 last_active;

    float64 f;
    f = log_to_logs3_factor();

    vqdist = vq->vqdist[0];	
    score = S3_LOGPROB_ZERO;
    mgau = &(g->mgau[m]);
    map = vq->map[m][0];

    if(!active){
      for (i = 0; i < n; i++) {
	v=0;
	for(sv_id =0 ; sv_id<vq->n_sv; sv_id++){
	  v+=vqdist[*(map++)];
	}
	score = logs3_add (score, v + mgau->mixw[i]);
	/*v=vqdist[*(map++)];
	  v+=vqdist[*(map++)];
	  v+=vqdist[*(map++)];*/
      }
    }else{

      last_active=0;
      for (i = 0; active[i] >=0; i++) {
	c=active[i];
      }
      for (i = 0; active[i] >=0; i++) {

	/*	E_INFO("Value of c %d\n",c);
		E_INFO("Value of last_active %d\n",last_active);*/
	c=active[i];
	map+=(c-last_active)*vq->n_sv;
	v=0;
	for(sv_id =0 ; sv_id<vq->n_sv; sv_id++){
	  v+=vqdist[*(map++)];
	}
	/*v=vqdist[*(map++)];
	v+=vqdist[*(map++)];
	v+=vqdist[*(map++)];*/

	last_active=c+1;

	score = logs3_add (score, v + mgau->mixw[i]);
      }
    }

    if(score == S3_LOGPROB_ZERO){
      E_INFO("Warning!! Score is S3_LOGPROB_ZERO\n");
    }

    return score;

}
