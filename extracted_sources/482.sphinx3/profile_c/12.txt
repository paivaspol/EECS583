int32 host_endian ( void )
{
    FILE *fp;
    int32 BYTE_ORDER_MAGIC;
    char *file;
    char buf[8];
    int32 k, endian;
    
    file = "/tmp/__EnDiAn_TeSt__";
    
    if ((fp = fopen(file, "wb")) == NULL) {
	E_ERROR("fopen(%s,wb) failed\n", file);
	return -1;
    }
    
    BYTE_ORDER_MAGIC = (int32)0x11223344;
    
    k = (int32) BYTE_ORDER_MAGIC;
    if (fwrite (&k, sizeof(int32), 1, fp) != 1) {
	E_ERROR("fwrite(%s) failed\n", file);
	fclose (fp);
	unlink(file);
	return -1;
    }
    
    fclose (fp);
    if ((fp = fopen (file, "rb")) == NULL) {
	E_ERROR ("fopen(%s,rb) failed\n", file);
	unlink(file);
	return -1;
    }
    if (fread (buf, 1, sizeof(int32), fp) != sizeof(int32)) {
	E_ERROR ("fread(%s) failed\n", file);
	fclose (fp);
	unlink(file);
	return -1;
    }
    fclose (fp);
    unlink(file);
    
    /* If buf[0] == lsB of BYTE_ORDER_MAGIC, we are little-endian */
    endian = (buf[0] == (BYTE_ORDER_MAGIC & 0x000000ff)) ? 1 : 0;
    
    return (endian);
}
