void
quantum_toffoli_ft(int control1, int control2, int target, quantum_reg *reg)
{
  int i;
  int c1, c2;
  MAX_UNSIGNED mask;

  mask = ((MAX_UNSIGNED) 1 << target)
    + ((MAX_UNSIGNED) 1 << (target+width))
    + ((MAX_UNSIGNED) 1 << (target+2*width));

  for(i=0;i<reg->size;i++)
    {
      c1 = 0;
      c2 = 0;

      if(reg->node[i].state & ((MAX_UNSIGNED) 1 << control1))
	c1 = 1;
      if(reg->node[i].state 
	 & ((MAX_UNSIGNED) 1 << (control1+width)))
	{
	  c1 ^= 1;
	}
      if(reg->node[i].state 
	 & ((MAX_UNSIGNED) 1 << (control1+2*width)))
	{
	  c1 ^= 1;
	}

      if(reg->node[i].state & ((MAX_UNSIGNED) 1 << control2))
	c2 = 1;
      if(reg->node[i].state 
	 & ((MAX_UNSIGNED) 1 << (control2+width)))
	{
	  c2 ^= 1;
	}
      if(reg->node[i].state 
	 & ((MAX_UNSIGNED) 1 << (control2+2*width)))
	{
	  c2 ^= 1;
	}

      if(c1 == 1 && c2 == 1)
	reg->node[i].state = reg->node[i].state ^ mask;

    }

  quantum_decohere(reg);

  quantum_qec_counter(1, 0, reg);

}
