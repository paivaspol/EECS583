static int
k6_alu_unit_blockage (executing_insn, candidate_insn)
     rtx executing_insn;
     rtx candidate_insn;
{
  rtx insn;
  int casenum;

  insn = executing_insn;
  switch (recog_memoized (insn))
    {
    case 636:
      extract_constrain_insn_cached (insn);
      if ((which_alternative != 1) || (! (const0_operand (operands[2], DImode))))
        {
	  casenum = 0;
        }
      else if (get_attr_memory (insn) == MEMORY_NONE)
        {
	  casenum = 1;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 635:
      extract_constrain_insn_cached (insn);
      if ((which_alternative != 1) || (! (const0_operand (operands[2], SImode))))
        {
	  casenum = 0;
        }
      else if (get_attr_memory (insn) == MEMORY_NONE)
        {
	  casenum = 1;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 415:
      extract_constrain_insn_cached (insn);
      if ((get_attr_type (insn) == TYPE_ISHIFT) || ((get_attr_type (insn) == TYPE_ALU) || (which_alternative == 2)))
        {
	  casenum = 0;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 411:
      extract_constrain_insn_cached (insn);
      if (((! ((TARGET_DOUBLE_WITH_ADD) != (0))) || (! (const1_operand (operands[2], VOIDmode)))) || (((TARGET_DOUBLE_WITH_ADD) != (0)) && (const1_operand (operands[2], VOIDmode))))
        {
	  casenum = 0;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 409:
      extract_constrain_insn_cached (insn);
      if (((which_alternative == 0) && ((! ((TARGET_DOUBLE_WITH_ADD) != (0))) || (! (const1_operand (operands[2], VOIDmode))))) || ((which_alternative != 0) || (((TARGET_DOUBLE_WITH_ADD) != (0)) && (const1_operand (operands[2], VOIDmode)))))
        {
	  casenum = 0;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 417:
    case 416:
    case 414:
    case 413:
    case 410:
    case 404:
      if ((get_attr_type (insn) == TYPE_ISHIFT) || (get_attr_type (insn) == TYPE_ALU))
        {
	  casenum = 0;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 412:
    case 408:
    case 403:
      extract_constrain_insn_cached (insn);
      if ((get_attr_type (insn) == TYPE_ISHIFT) || ((which_alternative != 0) || (get_attr_type (insn) == TYPE_ALU)))
        {
	  casenum = 0;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 265:
    case 264:
    case 263:
    case 262:
    case 261:
    case 260:
    case 259:
    case 258:
    case 257:
    case 256:
    case 255:
    case 254:
    case 253:
    case 252:
    case 251:
    case 250:
    case 249:
      casenum = 2;
      break;

    case 221:
      extract_constrain_insn_cached (insn);
      if (((which_alternative != 3) && (! (incdec_operand (operands[2], QImode)))) || ((incdec_operand (operands[2], QImode)) || (which_alternative == 3)))
        {
	  casenum = 0;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 215:
      extract_constrain_insn_cached (insn);
      if (((which_alternative != 2) && (! (incdec_operand (operands[2], HImode)))) || ((incdec_operand (operands[2], HImode)) || (which_alternative == 2)))
        {
	  casenum = 0;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 208:
      extract_constrain_insn_cached (insn);
      if ((get_attr_type (insn) == TYPE_ALU) || ((get_attr_type (insn) == TYPE_INCDEC) || ((which_alternative != 0) || (pic_symbolic_operand (operands[2], SImode)))))
        {
	  casenum = 0;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 207:
      extract_constrain_insn_cached (insn);
      if ((get_attr_type (insn) == TYPE_ALU) || ((get_attr_type (insn) == TYPE_INCDEC) || ((which_alternative == 2) || (pic_symbolic_operand (operands[2], SImode)))))
        {
	  casenum = 0;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 202:
      extract_constrain_insn_cached (insn);
      if ((get_attr_type (insn) == TYPE_ALU) || ((get_attr_type (insn) == TYPE_INCDEC) || ((which_alternative == 2) || (pic_symbolic_operand (operands[2], DImode)))))
        {
	  casenum = 0;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 116:
      extract_constrain_insn_cached (insn);
      if (which_alternative == 0)
        {
	  casenum = 0;
        }
      else if (get_attr_memory (insn) == MEMORY_NONE)
        {
	  casenum = 1;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 90:
      extract_constrain_insn_cached (insn);
      if ((((which_alternative != 0) && ((which_alternative != 1) && (which_alternative != 2))) && ((which_alternative == 3) || (which_alternative == 4))) && (get_attr_memory (insn) == MEMORY_NONE))
        {
	  casenum = 1;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 84:
      extract_constrain_insn_cached (insn);
      if (((which_alternative != 5) && (which_alternative != 6)) && ((which_alternative != 7) && ((which_alternative != 8) && ((which_alternative != 4) && (((flag_pic) != (0)) && (symbolic_operand (operands[1], DImode)))))))
        {
	  casenum = 0;
        }
      else if ((((which_alternative != 5) && (which_alternative != 6)) && ((which_alternative != 7) && ((which_alternative != 8) && ((which_alternative != 4) && ((! ((flag_pic) != (0))) || (! (symbolic_operand (operands[1], DImode)))))))) && (get_attr_memory (insn) == MEMORY_NONE))
        {
	  casenum = 1;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 72:
      extract_constrain_insn_cached (insn);
      if ((! (q_regs_operand (operands[0], QImode))) || ((TARGET_MOVX) != (0)))
        {
	  casenum = 0;
        }
      else if (get_attr_memory (insn) == MEMORY_NONE)
        {
	  casenum = 1;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 71:
    case 67:
    case 66:
      if (get_attr_type (insn) == TYPE_IMOVX)
        {
	  casenum = 0;
        }
      else if ((get_attr_type (insn) == TYPE_IMOV) && (get_attr_memory (insn) == MEMORY_NONE))
        {
	  casenum = 1;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 60:
      extract_constrain_insn_cached (insn);
      if (((which_alternative != 3) || ((! ((TARGET_PARTIAL_REG_STALL) == (0))) && (! ((TARGET_QIMODE_MATH) == (0))))) && ((which_alternative == 3) || ((which_alternative == 5) || (((TARGET_MOVX) != (0)) && (which_alternative == 2)))))
        {
	  casenum = 0;
        }
      else if ((((which_alternative == 3) && (((TARGET_PARTIAL_REG_STALL) == (0)) || ((TARGET_QIMODE_MATH) == (0)))) || (((which_alternative != 3) || ((! ((TARGET_PARTIAL_REG_STALL) == (0))) && (! ((TARGET_QIMODE_MATH) == (0))))) && ((which_alternative != 3) && ((which_alternative != 5) && ((! ((TARGET_MOVX) != (0))) || (which_alternative != 2)))))) && (get_attr_memory (insn) == MEMORY_NONE))
        {
	  casenum = 1;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 51:
      extract_constrain_insn_cached (insn);
      if (((((which_alternative != 0) && (which_alternative != 1)) || ((! ((TARGET_PARTIAL_REG_STALL) == (0))) && (! ((TARGET_HIMODE_MATH) == (0))))) && (((which_alternative != 2) && ((which_alternative != 3) && (which_alternative != 4))) || (! (aligned_operand (operands[1], HImode))))) && (((TARGET_MOVX) != (0)) && ((which_alternative == 0) || ((which_alternative == 1) || ((which_alternative == 3) || (which_alternative == 4))))))
        {
	  casenum = 0;
        }
      else if ((get_attr_type (insn) == TYPE_IMOV) && (get_attr_memory (insn) == MEMORY_NONE))
        {
	  casenum = 1;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 87:
    case 75:
    case 74:
    case 73:
    case 62:
    case 61:
    case 56:
    case 55:
    case 54:
    case 48:
      if (get_attr_memory (insn) == MEMORY_NONE)
        {
	  casenum = 1;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 45:
      extract_constrain_insn_cached (insn);
      if (((which_alternative != 4) && ((which_alternative != 5) && (which_alternative != 6))) && ((which_alternative != 7) && ((which_alternative != 8) && ((which_alternative != 9) && (((flag_pic) != (0)) && (symbolic_operand (operands[1], SImode)))))))
        {
	  casenum = 0;
        }
      else if ((((which_alternative != 4) && ((which_alternative != 5) && (which_alternative != 6))) && ((which_alternative != 7) && ((which_alternative != 8) && ((which_alternative != 9) && ((! ((flag_pic) != (0))) || (! (symbolic_operand (operands[1], SImode)))))))) && (get_attr_memory (insn) == MEMORY_NONE))
        {
	  casenum = 1;
        }
      else
        {
	  casenum = 3;
        }
      break;

    case 615:
    case 613:
    case 518:
    case 487:
    case 486:
    case 485:
    case 484:
    case 483:
    case 482:
    case 481:
    case 480:
    case 479:
    case 478:
    case 477:
    case 476:
    case 475:
    case 474:
    case 473:
    case 472:
    case 471:
    case 470:
    case 469:
    case 468:
    case 467:
    case 466:
    case 465:
    case 464:
    case 463:
    case 462:
    case 461:
    case 460:
    case 459:
    case 458:
    case 457:
    case 456:
    case 455:
    case 454:
    case 453:
    case 452:
    case 451:
    case 450:
    case 447:
    case 446:
    case 445:
    case 444:
    case 443:
    case 442:
    case 441:
    case 440:
    case 439:
    case 438:
    case 437:
    case 436:
    case 435:
    case 434:
    case 433:
    case 432:
    case 431:
    case 430:
    case 429:
    case 428:
    case 427:
    case 426:
    case 425:
    case 422:
    case 421:
    case 420:
    case 419:
    case 418:
    case 407:
    case 402:
    case 401:
    case 400:
    case 399:
    case 398:
    case 397:
    case 396:
    case 395:
    case 394:
    case 393:
    case 354:
    case 353:
    case 352:
    case 351:
    case 350:
    case 349:
    case 348:
    case 347:
    case 346:
    case 345:
    case 343:
    case 342:
    case 341:
    case 340:
    case 339:
    case 338:
    case 337:
    case 336:
    case 335:
    case 334:
    case 333:
    case 332:
    case 331:
    case 330:
    case 329:
    case 328:
    case 327:
    case 326:
    case 325:
    case 324:
    case 323:
    case 322:
    case 321:
    case 320:
    case 319:
    case 318:
    case 317:
    case 316:
    case 315:
    case 314:
    case 313:
    case 312:
    case 311:
    case 310:
    case 309:
    case 308:
    case 307:
    case 306:
    case 305:
    case 304:
    case 303:
    case 302:
    case 301:
    case 300:
    case 299:
    case 298:
    case 297:
    case 296:
    case 295:
    case 294:
    case 293:
    case 292:
    case 291:
    case 290:
    case 287:
    case 286:
    case 285:
    case 284:
    case 283:
    case 282:
    case 281:
    case 280:
    case 248:
    case 247:
    case 246:
    case 245:
    case 244:
    case 243:
    case 242:
    case 241:
    case 240:
    case 239:
    case 238:
    case 237:
    case 236:
    case 235:
    case 234:
    case 233:
    case 232:
    case 231:
    case 229:
    case 228:
    case 227:
    case 226:
    case 225:
    case 224:
    case 223:
    case 222:
    case 220:
    case 219:
    case 218:
    case 217:
    case 216:
    case 214:
    case 213:
    case 212:
    case 211:
    case 210:
    case 209:
    case 206:
    case 205:
    case 204:
    case 203:
    case 201:
    case 200:
    case 199:
    case 198:
    case 197:
    case 196:
    case 195:
    case 194:
    case 193:
    case 192:
    case 191:
    case 190:
    case 189:
    case 188:
    case 187:
    case 186:
    case 127:
    case 126:
    case 125:
    case 124:
    case 123:
    case 122:
    case 121:
    case 120:
    case 118:
    case 117:
    case 114:
    case 113:
    case 112:
    case 111:
    case 110:
    case 109:
    case 108:
    case 107:
    case 82:
    case 81:
    case 70:
    case 65:
    case 64:
    case 63:
    case 57:
    case 44:
    case 43:
    case 17:
    case 16:
    case 15:
    case 14:
    case 13:
    case 12:
    case 11:
    case 10:
    case 9:
    case 8:
    case 7:
    case 6:
    case 5:
    case 4:
    case 3:
    case 2:
    case 1:
    case 0:
      casenum = 0;
      break;

    case -1:
      if (GET_CODE (PATTERN (insn)) != ASM_INPUT
          && asm_noperands (PATTERN (insn)) < 0)
        fatal_insn_not_found (insn);
    default:
      casenum = 3;
      break;

    }

  insn = candidate_insn;
  switch (casenum)
    {
    case 0:
      return 1;

    case 1:
      return 1;

    case 2:
      return 2;

    case 3:
      return 17 /* 0x11 */;

    default:
      abort ();
    }
}
