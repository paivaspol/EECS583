bool
_cpp_pop_file_buffer (pfile, inc)
     cpp_reader *pfile;
     struct include_file *inc;
{
  bool pushed = false;

  /* Record the inclusion-preventing macro, which could be NULL
     meaning no controlling macro.  */
  if (pfile->mi_valid && inc->cmacro == NULL)
    inc->cmacro = pfile->mi_cmacro;

  /* Invalidate control macros in the #including file.  */
  pfile->mi_valid = false;

  inc->refcnt--;
  if (inc->refcnt == 0 && DO_NOT_REREAD (inc))
    purge_cache (inc);

  /* Don't generate a callback for popping the main file.  */
  if (pfile->buffer)
    {
      _cpp_do_file_change (pfile, LC_LEAVE, 0, 0, 0);

      /* Finally, push the next -included file, if any.  */
      if (!pfile->buffer->prev)
	pushed = _cpp_push_next_buffer (pfile);
    }

  return pushed;
}
