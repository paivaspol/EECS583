static rtx
ix86_expand_timode_binop_builtin (icode, arglist, target)
     enum insn_code icode;
     tree arglist;
     rtx target;
{
  rtx pat;
  tree arg0 = TREE_VALUE (arglist);
  tree arg1 = TREE_VALUE (TREE_CHAIN (arglist));
  rtx op0 = expand_expr (arg0, NULL_RTX, VOIDmode, 0);
  rtx op1 = expand_expr (arg1, NULL_RTX, VOIDmode, 0);

  op0 = gen_lowpart (TImode, op0);
  op1 = gen_lowpart (TImode, op1);
  target = gen_reg_rtx (TImode);

  if (! (*insn_data[icode].operand[1].predicate) (op0, TImode))
    op0 = copy_to_mode_reg (TImode, op0);
  if (! (*insn_data[icode].operand[2].predicate) (op1, TImode))
    op1 = copy_to_mode_reg (TImode, op1);

  /* In the commutative cases, both op0 and op1 are nonimmediate_operand,
     yet one of the two must not be a memory.  This is normally enforced
     by expanders, but we didn't bother to create one here.  */
  if (GET_CODE (op0) == MEM && GET_CODE (op1) == MEM)
    op0 = copy_to_mode_reg (TImode, op0);

  pat = GEN_FCN (icode) (target, op0, op1);
  if (! pat)
    return 0;
  emit_insn (pat);

  return gen_lowpart (V4SFmode, target);
}
