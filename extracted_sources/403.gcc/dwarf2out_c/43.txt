static int output_indirect_string	PARAMS ((struct cpp_reader *,
                                                 hashnode, const PTR));


static void dwarf2out_init 		PARAMS ((const char *));
static void dwarf2out_finish		PARAMS ((const char *));
static void dwarf2out_define	        PARAMS ((unsigned int, const char *));
static void dwarf2out_undef	        PARAMS ((unsigned int, const char *));
static void dwarf2out_start_source_file	PARAMS ((unsigned, const char *));
static void dwarf2out_end_source_file	PARAMS ((unsigned));
static void dwarf2out_begin_block	PARAMS ((unsigned, unsigned));
static void dwarf2out_end_block		PARAMS ((unsigned, unsigned));
static bool dwarf2out_ignore_block	PARAMS ((tree));
static void dwarf2out_global_decl	PARAMS ((tree));
static void dwarf2out_abstract_function PARAMS ((tree));

/* The debug hooks structure.  */

struct gcc_debug_hooks dwarf2_debug_hooks =
{
  dwarf2out_init,
  dwarf2out_finish,
  dwarf2out_define,
  dwarf2out_undef,
  dwarf2out_start_source_file,
  dwarf2out_end_source_file,
  dwarf2out_begin_block,
  dwarf2out_end_block,
  dwarf2out_ignore_block,
  dwarf2out_source_line,
  dwarf2out_begin_prologue,
  debug_nothing_int,		/* end_prologue */
  dwarf2out_end_epilogue,
  debug_nothing_tree,		/* begin_function */
  debug_nothing_int,		/* end_function */
  dwarf2out_decl,		/* function_decl */
  dwarf2out_global_decl,
  debug_nothing_tree,		/* deferred_inline_function */
  /* The DWARF 2 backend tries to reduce debugging bloat by not
     emitting the abstract description of inline functions until
     something tries to reference them.  */
  dwarf2out_abstract_function,	/* outlining_inline_function */
  debug_nothing_rtx		/* label */
};
