static void
kill_value (x, vd)
     rtx x;
     struct value_data *vd;
{
  /* SUBREGS are supposed to have been eliminated by now.  But some
     ports, e.g. i386 sse, use them to smuggle vector type information
     through to instruction selection.  Each such SUBREG should simplify,
     so if we get a NULL  we've done something wrong elsewhere. */

  if (GET_CODE (x) == SUBREG)
    x = simplify_subreg (GET_MODE (x), SUBREG_REG (x),
			 GET_MODE (SUBREG_REG (x)), SUBREG_BYTE (x));
  if (REG_P (x))
    {
      unsigned int regno = REGNO (x);
      unsigned int n = HARD_REGNO_NREGS (regno, GET_MODE (x));
      unsigned int i, j;

      /* Kill the value we're told to kill.  */
      for (i = 0; i < n; ++i)
	kill_value_regno (regno + i, vd);

      /* Kill everything that overlapped what we're told to kill.  */
      if (regno < vd->max_value_regs)
	j = 0;
      else
	j = regno - vd->max_value_regs;
      for (; j < regno; ++j)
	{
	  if (vd->e[j].mode == VOIDmode)
	    continue;
	  n = HARD_REGNO_NREGS (j, vd->e[j].mode);
	  if (j + n > regno)
	    for (i = 0; i < n; ++i)
	      kill_value_regno (j + i, vd);
	}
    }
}
