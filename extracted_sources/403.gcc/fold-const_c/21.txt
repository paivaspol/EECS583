static tree
associate_trees (t1, t2, code, type)
     tree t1, t2;
     enum tree_code code;
     tree type;
{
  if (t1 == 0)
    return t2;
  else if (t2 == 0)
    return t1;

  /* If either input is CODE, a PLUS_EXPR, or a MINUS_EXPR, don't
     try to fold this since we will have infinite recursion.  But do
     deal with any NEGATE_EXPRs.  */
  if (TREE_CODE (t1) == code || TREE_CODE (t2) == code
      || TREE_CODE (t1) == MINUS_EXPR || TREE_CODE (t2) == MINUS_EXPR)
    {
      if (TREE_CODE (t1) == NEGATE_EXPR)
	return build (MINUS_EXPR, type, convert (type, t2),
		      convert (type, TREE_OPERAND (t1, 0)));
      else if (TREE_CODE (t2) == NEGATE_EXPR)
	return build (MINUS_EXPR, type, convert (type, t1),
		      convert (type, TREE_OPERAND (t2, 0)));
      else
	return build (code, type, convert (type, t1), convert (type, t2));
    }

  return fold (build (code, type, convert (type, t1), convert (type, t2)));
}
