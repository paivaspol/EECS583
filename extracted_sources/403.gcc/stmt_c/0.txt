static bool parse_input_constraint	PARAMS ((const char **, int, int, int,
						 int, const char * const *,
						 bool *, bool *));
static void expand_goto_internal	PARAMS ((tree, rtx, rtx));
static int expand_fixup			PARAMS ((tree, rtx, rtx));
static rtx expand_nl_handler_label	PARAMS ((rtx, rtx));
static void expand_nl_goto_receiver	PARAMS ((void));
static void expand_nl_goto_receivers	PARAMS ((struct nesting *));
static void fixup_gotos			PARAMS ((struct nesting *, rtx, tree,
					       rtx, int));
static bool check_operand_nalternatives	PARAMS ((tree, tree));
static bool check_unique_operand_names	PARAMS ((tree, tree));
static tree resolve_operand_names	PARAMS ((tree, tree, tree,
						 const char **));
static char *resolve_operand_name_1	PARAMS ((char *, tree, tree));
static void expand_null_return_1	PARAMS ((rtx));
static void expand_value_return		PARAMS ((rtx));
static int tail_recursion_args		PARAMS ((tree, tree));
static void expand_cleanups		PARAMS ((tree, tree, int, int));
static void check_seenlabel		PARAMS ((void));
static void do_jump_if_equal		PARAMS ((rtx, rtx, rtx, int));
static int estimate_case_costs		PARAMS ((case_node_ptr));
static void group_case_nodes		PARAMS ((case_node_ptr));
static void balance_case_nodes		PARAMS ((case_node_ptr *,
					       case_node_ptr));
static int node_has_low_bound		PARAMS ((case_node_ptr, tree));
static int node_has_high_bound		PARAMS ((case_node_ptr, tree));
static int node_is_bounded		PARAMS ((case_node_ptr, tree));
static void emit_jump_if_reachable	PARAMS ((rtx));
static void emit_case_nodes		PARAMS ((rtx, case_node_ptr, rtx, tree));
static struct case_node *case_tree2list	PARAMS ((case_node *, case_node *));
static void mark_cond_nesting           PARAMS ((struct nesting *));
static void mark_loop_nesting           PARAMS ((struct nesting *));
static void mark_block_nesting          PARAMS ((struct nesting *));
static void mark_case_nesting           PARAMS ((struct nesting *));
static void mark_case_node		PARAMS ((struct case_node *));
static void mark_goto_fixup             PARAMS ((struct goto_fixup *));
static void free_case_nodes             PARAMS ((case_node_ptr));

void
using_eh_for_cleanups ()
{
  using_eh_for_cleanups_p = 1;
}
