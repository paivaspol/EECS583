static rtx
dw2_force_const_mem (x)
     rtx x;
{
  splay_tree_node node;
  const char *str;
  tree decl;

  if (! indirect_pool)
    {
      indirect_pool = splay_tree_new (splay_tree_compare_pointers, NULL, NULL);
      ggc_add_root (&indirect_pool, 1, sizeof indirect_pool, mark_indirect_pool);
    }

  if (GET_CODE (x) != SYMBOL_REF)
    abort ();

  STRIP_NAME_ENCODING (str, XSTR (x, 0));
  node = splay_tree_lookup (indirect_pool, (splay_tree_key) str);
  if (node)
    decl = (tree) node->value;
  else
    {
      tree id;

      if (USE_LINKONCE_INDIRECT)
	{
	  char *ref_name = alloca (strlen (str) + sizeof "DW.ref.");

	  sprintf (ref_name, "DW.ref.%s", str);
	  id = get_identifier (ref_name);
	  decl = build_decl (VAR_DECL, id, ptr_type_node);
	  DECL_ARTIFICIAL (decl) = 1;
	  TREE_PUBLIC (decl) = 1;
	  DECL_INITIAL (decl) = decl;
	  make_decl_one_only (decl);
	}
      else
	{
	  extern int const_labelno;
	  char label[32];

	  ASM_GENERATE_INTERNAL_LABEL (label, "LC", const_labelno);
	  ++const_labelno;
	  id = get_identifier (label);
	  decl = build_decl (VAR_DECL, id, ptr_type_node);
	  DECL_ARTIFICIAL (decl) = 1;
	  TREE_STATIC (decl) = 1;
	  DECL_INITIAL (decl) = decl;
	}

      id = maybe_get_identifier (str);
      if (id)
	TREE_SYMBOL_REFERENCED (id) = 1;

      splay_tree_insert (indirect_pool, (splay_tree_key) str,
			 (splay_tree_value) decl);
    }

  return XEXP (DECL_RTL (decl), 0);
}
