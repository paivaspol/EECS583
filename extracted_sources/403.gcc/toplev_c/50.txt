static void
lang_independent_init ()
{
  decl_printable_name = decl_name;
  lang_expand_expr = (lang_expand_expr_t) do_abort;

  /* Set the language-dependent identifier size.  */
  tree_code_length[(int) IDENTIFIER_NODE]
    = ((lang_hooks.identifier_size - sizeof (struct tree_common)
	+ sizeof (tree) - 1) / sizeof (tree));

  /* Initialize the garbage-collector, and string pools.  */
  init_ggc ();
  ggc_add_rtx_root (&stack_limit_rtx, 1);
  ggc_add_tree_root (&current_function_decl, 1);
  ggc_add_tree_root (&current_function_func_begin_label, 1);

  init_stringpool ();
  init_obstacks ();

  init_emit_once (debug_info_level == DINFO_LEVEL_NORMAL
		  || debug_info_level == DINFO_LEVEL_VERBOSE
#ifdef VMS_DEBUGGING_INFO
		    /* Enable line number info for traceback */
		    || debug_info_level > DINFO_LEVEL_NONE
#endif
		    || flag_test_coverage
		    || warn_notreached);
  init_regs ();
  init_alias_once ();
  init_stmt ();
  init_loop ();
  init_reload ();
  init_function_once ();
  init_stor_layout_once ();
  init_varasm_once ();
  init_EXPR_INSN_LIST_cache ();

  /* The following initialization functions need to generate rtl, so
     provide a dummy function context for them.  */
  init_dummy_function_start ();
  init_expmed ();
  init_expr_once ();
  if (flag_caller_saves)
    init_caller_save ();
  expand_dummy_function_end ();
}
