static void
asm_emit_uninitialised (decl, name, size, rounded)
     tree decl;
     const char * name;
     int size ATTRIBUTE_UNUSED;
     int rounded ATTRIBUTE_UNUSED;
{
  enum
  {
    asm_dest_common,
    asm_dest_bss,
    asm_dest_local
  }
  destination = asm_dest_local;

  if (TREE_PUBLIC (decl))
    {
#if defined ASM_EMIT_BSS
      if (! DECL_COMMON (decl))
	destination = asm_dest_bss;
      else
#endif
	destination = asm_dest_common;
    }

  if (destination == asm_dest_bss)
    globalize_decl (decl);
  resolve_unique_section (decl, 0, flag_data_sections);

  if (flag_shared_data)
    {
      switch (destination)
	{
#ifdef ASM_OUTPUT_SHARED_BSS
	case asm_dest_bss:
	  ASM_OUTPUT_SHARED_BSS (asm_out_file, decl, name, size, rounded);
	  return;
#endif
#ifdef ASM_OUTPUT_SHARED_COMMON
	case asm_dest_common:
	  ASM_OUTPUT_SHARED_COMMON (asm_out_file, name, size, rounded);
	  return;
#endif
#ifdef ASM_OUTPUT_SHARED_LOCAL
	case asm_dest_local:
	  ASM_OUTPUT_SHARED_LOCAL (asm_out_file, name, size, rounded);
	  return;
#endif
	default:
	  break;
	}
    }

  switch (destination)
    {
#ifdef ASM_EMIT_BSS
    case asm_dest_bss:
      ASM_EMIT_BSS (decl, name, size, rounded);
      break;
#endif
    case asm_dest_common:
      ASM_EMIT_COMMON (decl, name, size, rounded);
      break;
    case asm_dest_local:
      ASM_EMIT_LOCAL (decl, name, size, rounded);
      break;
    default:
      abort ();
    }

  return;
}
