void
loop_iv_add_mult_sink (loop, b, m, a, reg)
     const struct loop *loop;
     rtx b;          /* initial value of basic induction variable */
     rtx m;          /* multiplicative constant */
     rtx a;          /* additive constant */
     rtx reg;        /* destination register */
{
  rtx seq;

  /* Use copy_rtx to prevent unexpected sharing of these rtx.  */
  seq = gen_add_mult (copy_rtx (b), copy_rtx (m), copy_rtx (a), reg);

  /* Increase the lifetime of any invariants moved further in code.
     ???? Is this really necessary?  */
  update_reg_last_use (a, loop->sink);
  update_reg_last_use (b, loop->sink);
  update_reg_last_use (m, loop->sink);

  loop_insn_sink (loop, seq);

  /* It is possible that the expansion created lots of new registers.
     Iterate over the sequence we just created and record them all.  */
  loop_regs_update (loop, seq);
}
