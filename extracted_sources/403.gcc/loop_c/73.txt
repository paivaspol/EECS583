void
loop_iv_add_mult_emit_before (loop, b, m, a, reg, before_bb, before_insn)
     const struct loop *loop;
     rtx b;          /* initial value of basic induction variable */
     rtx m;          /* multiplicative constant */
     rtx a;          /* additive constant */
     rtx reg;        /* destination register */
     basic_block before_bb;
     rtx before_insn;
{
  rtx seq;

  if (! before_insn)
    {
      loop_iv_add_mult_hoist (loop, b, m, a, reg);
      return;
    }

  /* Use copy_rtx to prevent unexpected sharing of these rtx.  */
  seq = gen_add_mult (copy_rtx (b), copy_rtx (m), copy_rtx (a), reg);

  /* Increase the lifetime of any invariants moved further in code.  */
  update_reg_last_use (a, before_insn);
  update_reg_last_use (b, before_insn);
  update_reg_last_use (m, before_insn);

  loop_insn_emit_before (loop, before_bb, before_insn, seq);

  /* It is possible that the expansion created lots of new registers.
     Iterate over the sequence we just created and record them all.  */
  loop_regs_update (loop, seq);
}
