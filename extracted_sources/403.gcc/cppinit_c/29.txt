static void
print_help ()
{
  /* To keep the lines from getting too long for some compilers, limit
     to about 500 characters (6 lines) per chunk.  */
  fputs (_("Switches:\n  -include <file>           Include the contents of <file> before other files\n  -imacros <file>           Accept definition of macros in <file>\n  -iprefix <path>           Specify <path> as a prefix for next two options\n  -iwithprefix <dir>        Add <dir> to the end of the system include path\n  -iwithprefixbefore <dir>  Add <dir> to the end of the main include path\n  -isystem <dir>            Add <dir> to the start of the system include path\n"), stdout);
  fputs (_("  -idirafter <dir>          Add <dir> to the end of the system include path\n  -I <dir>                  Add <dir> to the end of the main include path\n  -I-                       Fine-grained include path control; see info docs\n  -nostdinc                 Do not search system include directories\n                             (dirs specified with -isystem will still be used)\n  -nostdinc++               Do not search system include directories for C++\n  -o <file>                 Put output into <file>\n"), stdout);
  fputs (_("  -pedantic                 Issue all warnings demanded by strict ISO C\n  -pedantic-errors          Issue -pedantic warnings as errors instead\n  -trigraphs                Support ISO C trigraphs\n  -lang-c                   Assume that the input sources are in C\n  -lang-c89                 Assume that the input sources are in C89\n"), stdout);
  fputs (_("  -lang-c++                 Assume that the input sources are in C++\n  -lang-objc                Assume that the input sources are in ObjectiveC\n  -lang-objc++              Assume that the input sources are in ObjectiveC++\n  -lang-asm                 Assume that the input sources are in assembler\n"), stdout);
  fputs (_("  -std=<std name>           Specify the conformance standard; one of:\n                            gnu89, gnu99, c89, c99, iso9899:1990,\n                            iso9899:199409, iso9899:1999\n  -+                        Allow parsing of C++ style features\n  -w                        Inhibit warning messages\n  -Wtrigraphs               Warn if trigraphs are encountered\n  -Wno-trigraphs            Do not warn about trigraphs\n  -Wcomment{s}              Warn if one comment starts inside another\n"), stdout);
  fputs (_("  -Wno-comment{s}           Do not warn about comments\n  -Wtraditional             Warn about features not present in traditional C\n  -Wno-traditional          Do not warn about traditional C\n  -Wundef                   Warn if an undefined macro is used by #if\n  -Wno-undef                Do not warn about testing undefined macros\n  -Wimport                  Warn about the use of the #import directive\n"), stdout);
  fputs (_("  -Wno-import               Do not warn about the use of #import\n  -Werror                   Treat all warnings as errors\n  -Wno-error                Do not treat warnings as errors\n  -Wsystem-headers          Do not suppress warnings from system headers\n  -Wno-system-headers       Suppress warnings from system headers\n  -Wall                     Enable all preprocessor warnings\n"), stdout);
  fputs (_("  -M                        Generate make dependencies\n  -MM                       As -M, but ignore system header files\n  -MD                       Generate make dependencies and compile\n  -MMD                      As -MD, but ignore system header files\n  -MF <file>                Write dependency output to the given file\n  -MG                       Treat missing header file as generated files\n"), stdout);
  fputs (_("  -MP			    Generate phony targets for all headers\n  -MQ <target>              Add a MAKE-quoted target\n  -MT <target>              Add an unquoted target\n"), stdout);
  fputs (_("  -D<macro>                 Define a <macro> with string '1' as its value\n  -D<macro>=<val>           Define a <macro> with <val> as its value\n  -A<question>=<answer>     Assert the <answer> to <question>\n  -A-<question>=<answer>    Disable the <answer> to <question>\n  -U<macro>                 Undefine <macro> \n  -v                        Display the version number\n"), stdout);
  fputs (_("  -H                        Print the name of header files as they are used\n  -C                        Do not discard comments\n  -dM                       Display a list of macro definitions active at end\n  -dD                       Preserve macro definitions in output\n  -dN                       As -dD except that only the names are preserved\n  -dI                       Include #include directives in the output\n"), stdout);
  fputs (_("  -fpreprocessed            Treat the input file as already preprocessed\n  -ftabstop=<number>        Distance between tab stops for column reporting\n  -P                        Do not generate #line directives\n  -$                        Do not allow '$' in identifiers\n  -remap                    Remap file names when including files\n  --version                 Display version information\n  -h or --help              Display this information\n"), stdout);
}
