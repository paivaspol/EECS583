define i32 @FmoGetPreviousMBNr(i32 %CurrentMbNr) #2 {
entry:
  %idxprom.i = sext i32 %CurrentMbNr to i64
  %0 = load i8** @MBAmap, align 8, !tbaa !3
  %arrayidx.i = getelementptr inbounds i8* %0, i64 %idxprom.i
  %1 = load i8* %arrayidx.i, align 1, !tbaa !1
  br label %while.cond

while.cond:                                       ; preds = %land.rhs, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %land.rhs ], [ %idxprom.i, %entry ]
  %CurrentMbNr.addr.0.in = phi i32 [ %CurrentMbNr.addr.0, %land.rhs ], [ %CurrentMbNr, %entry ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %CurrentMbNr.addr.0 = add nsw i32 %CurrentMbNr.addr.0.in, -1
  %2 = trunc i64 %indvars.iv to i32
  %cmp = icmp sgt i32 %2, 0
  br i1 %cmp, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %while.cond
  %arrayidx = getelementptr inbounds i8* %0, i64 %indvars.iv.next
  %3 = load i8* %arrayidx, align 1, !tbaa !1
  %cmp1 = icmp eq i8 %3, %1
  br i1 %cmp1, label %while.end, label %while.cond

while.end:                                        ; preds = %land.rhs, %while.cond
  %cmp4 = icmp slt i32 %CurrentMbNr.addr.0.in, 1
  %.CurrentMbNr.addr.0 = select i1 %cmp4, i32 -1, i32 %CurrentMbNr.addr.0
  ret i32 %.CurrentMbNr.addr.0
}
