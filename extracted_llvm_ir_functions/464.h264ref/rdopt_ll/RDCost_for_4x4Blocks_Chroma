define i32 @RDCost_for_4x4Blocks_Chroma(i32 %b8, i32 %b4, i32 %chroma) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %b8}, i64 0, metadata !382), !dbg !1677
  tail call void @llvm.dbg.value(metadata !{i32 %b4}, i64 0, metadata !383), !dbg !1678
  tail call void @llvm.dbg.value(metadata !{i32 %chroma}, i64 0, metadata !384), !dbg !1679
  tail call void @llvm.dbg.value(metadata !60, i64 0, metadata !385), !dbg !1680
  %0 = load %struct.ImageParameters** @img, align 8, !dbg !1681, !tbaa !1451
  %currentSlice = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 50, !dbg !1681
  %1 = load %struct.Slice** %currentSlice, align 8, !dbg !1681, !tbaa !1451
  tail call void @llvm.dbg.value(metadata !{%struct.Slice* %1}, i64 0, metadata !386), !dbg !1681
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 3, !dbg !1682
  %2 = load i32* %current_mb_nr, align 4, !dbg !1682, !tbaa !1458
  %idxprom = sext i32 %2 to i64, !dbg !1682
  %mb_data = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 51, !dbg !1682
  %3 = load %struct.macroblock** %mb_data, align 8, !dbg !1682, !tbaa !1451
  %currSEnr = getelementptr inbounds %struct.macroblock* %3, i64 %idxprom, i32 0, !dbg !1683
  %4 = load i32* %currSEnr, align 4, !dbg !1683, !tbaa !1458
  tail call void @llvm.dbg.value(metadata !{%struct.syntaxelement* %arrayidx2}, i64 0, metadata !388), !dbg !1683
  %5 = load %struct.InputParameters** @input, align 8, !dbg !1684, !tbaa !1451
  %partition_mode = getelementptr inbounds %struct.InputParameters* %5, i64 0, i32 61, !dbg !1684
  %6 = load i32* %partition_mode, align 4, !dbg !1684, !tbaa !1458
  %idxprom3 = sext i32 %6 to i64, !dbg !1684
  %arrayidx4 = getelementptr inbounds [2 x i32*]* @assignSE2partition, i64 0, i64 %idxprom3, !dbg !1684
  %7 = load i32** %arrayidx4, align 8, !dbg !1684, !tbaa !1451
  tail call void @llvm.dbg.value(metadata !{i32* %7}, i64 0, metadata !389), !dbg !1684
  %cmp = icmp sgt i32 %b8, 7, !dbg !1685
  %. = zext i1 %cmp to i32, !dbg !1686
  %call = tail call i32 @dct_chroma4x4(i32 %chroma, i32 %b8, i32 %b4) #9, !dbg !1687
  %add = shl nuw nsw i32 %., 2, !dbg !1687
  %mul.neg = add i32 %b8, -4, !dbg !1687
  %sub = sub i32 %mul.neg, %add, !dbg !1687
  %div = sdiv i32 %sub, 2, !dbg !1687
  %mul5 = shl i32 %div, 1, !dbg !1687
  %div6 = sdiv i32 %b4, 2, !dbg !1687
  %add7 = add nsw i32 %mul5, %div6, !dbg !1687
  %idxprom8 = sext i32 %add7 to i64, !dbg !1687
  %rem = srem i32 %sub, 2, !dbg !1687
  %mul12 = shl i32 %rem, 1, !dbg !1687
  %rem13 = srem i32 %b4, 2, !dbg !1687
  %add14 = add nsw i32 %mul12, %rem13, !dbg !1687
  %idxprom15 = sext i32 %add14 to i64, !dbg !1687
  %idxprom16113 = zext i1 %cmp to i64, !dbg !1687
  %arrayidx19 = getelementptr inbounds [2 x [4 x [4 x i32]]]* @cbp_chroma_block_temp, i64 0, i64 %idxprom16113, i64 %idxprom15, i64 %idxprom8, !dbg !1687
  store i32 %call, i32* %arrayidx19, align 4, !dbg !1687, !tbaa !1458
  %8 = load %struct.CSobj** @cs_cm, align 8, !dbg !1688, !tbaa !1451
  tail call void @store_coding_state(%struct.CSobj* %8) #9, !dbg !1688
  %9 = load %struct.InputParameters** @input, align 8, !dbg !1689, !tbaa !1451
  %symbol_mode = getelementptr inbounds %struct.InputParameters* %9, i64 0, i32 59, !dbg !1689
  %10 = load i32* %symbol_mode, align 4, !dbg !1689, !tbaa !1458
  %cmp20 = icmp eq i32 %10, 0, !dbg !1689
  br i1 %cmp20, label %if.then21, label %if.else31, !dbg !1689

if.then21:                                        ; preds = %entry
  %rem22 = srem i32 %b8, 2, !dbg !1690
  %mul23 = shl i32 %rem22, 1, !dbg !1690
  %add25 = add nsw i32 %mul23, %rem13, !dbg !1690
  %shl = shl i32 %add25, 4, !dbg !1690
  %div26 = sdiv i32 %b8, 2, !dbg !1690
  %mul27 = shl i32 %div26, 1, !dbg !1690
  %add29 = add nsw i32 %mul27, %div6, !dbg !1690
  %or = or i32 %shl, %add29, !dbg !1690
  %call30 = tail call i32 @writeCoeff4x4_CAVLC(i32 7, i32 %b8, i32 %b4, i32 %or) #9, !dbg !1690
  tail call void @llvm.dbg.value(metadata !{i32 %call30}, i64 0, metadata !385), !dbg !1690
  br label %if.end73, !dbg !1692

if.else31:                                        ; preds = %entry
  %idxprom1 = sext i32 %4 to i64, !dbg !1683
  %arrayidx2 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 52, i64 %idxprom1, !dbg !1683
  %idxprom32 = sext i32 %b4 to i64, !dbg !1693
  %idxprom33 = sext i32 %b8 to i64, !dbg !1693
  %11 = load %struct.ImageParameters** @img, align 8, !dbg !1693, !tbaa !1451
  %cofAC = getelementptr inbounds %struct.ImageParameters* %11, i64 0, i32 47, !dbg !1693
  %12 = load i32***** %cofAC, align 8, !dbg !1693, !tbaa !1451
  %arrayidx34 = getelementptr inbounds i32**** %12, i64 %idxprom33, !dbg !1693
  %13 = load i32**** %arrayidx34, align 8, !dbg !1693, !tbaa !1451
  %arrayidx35 = getelementptr inbounds i32*** %13, i64 %idxprom32, !dbg !1693
  %14 = load i32*** %arrayidx35, align 8, !dbg !1693, !tbaa !1451
  %15 = load i32** %14, align 8, !dbg !1693, !tbaa !1451
  tail call void @llvm.dbg.value(metadata !{i32* %15}, i64 0, metadata !391), !dbg !1693
  %arrayidx42 = getelementptr inbounds i32** %14, i64 1, !dbg !1694
  %16 = load i32** %arrayidx42, align 8, !dbg !1694, !tbaa !1451
  tail call void @llvm.dbg.value(metadata !{i32* %16}, i64 0, metadata !393), !dbg !1694
  tail call void @llvm.dbg.value(metadata !1695, i64 0, metadata !394), !dbg !1696
  %subblock_y = getelementptr inbounds %struct.ImageParameters* %11, i64 0, i32 19, !dbg !1697
  store i32 %div6, i32* %subblock_y, align 4, !dbg !1697, !tbaa !1458
  %subblock_x = getelementptr inbounds %struct.ImageParameters* %11, i64 0, i32 18, !dbg !1698
  store i32 %rem13, i32* %subblock_x, align 4, !dbg !1698, !tbaa !1458
  tail call void @llvm.dbg.value(metadata !60, i64 0, metadata !396), !dbg !1699
  %mb_type = getelementptr inbounds %struct.macroblock* %3, i64 %idxprom, i32 8, !dbg !1701
  %partArr = getelementptr inbounds %struct.Slice* %1, i64 0, i32 6, !dbg !1703
  %arrayidx67 = getelementptr inbounds %struct.macroblock* %3, i64 %idxprom, i32 5, i64 6, !dbg !1704
  br label %for.body, !dbg !1699

for.body:                                         ; preds = %lor.end.for.body_crit_edge, %if.else31
  %17 = phi %struct.InputParameters* [ %9, %if.else31 ], [ %.pre, %lor.end.for.body_crit_edge ]
  %indvars.iv = phi i64 [ 0, %if.else31 ], [ %indvars.iv.next, %lor.end.for.body_crit_edge ]
  %rate.0116 = phi i32 [ 0, %if.else31 ], [ %add70, %lor.end.for.body_crit_edge ]
  %currSE.0115 = phi %struct.syntaxelement* [ %arrayidx2, %if.else31 ], [ %incdec.ptr, %lor.end.for.body_crit_edge ]
  %arrayidx48 = getelementptr inbounds i32* %15, i64 %indvars.iv, !dbg !1705
  %18 = load i32* %arrayidx48, align 4, !dbg !1705, !tbaa !1458
  %value1 = getelementptr inbounds %struct.syntaxelement* %currSE.0115, i64 0, i32 1, !dbg !1705
  store i32 %18, i32* %value1, align 4, !dbg !1705, !tbaa !1458
  tail call void @llvm.dbg.value(metadata !{i32 %18}, i64 0, metadata !394), !dbg !1705
  %arrayidx50 = getelementptr inbounds i32* %16, i64 %indvars.iv, !dbg !1706
  %19 = load i32* %arrayidx50, align 4, !dbg !1706, !tbaa !1458
  %value2 = getelementptr inbounds %struct.syntaxelement* %currSE.0115, i64 0, i32 2, !dbg !1706
  store i32 %19, i32* %value2, align 4, !dbg !1706, !tbaa !1458
  tail call void @llvm.dbg.value(metadata !{i32 %19}, i64 0, metadata !395), !dbg !1706
  %symbol_mode51 = getelementptr inbounds %struct.InputParameters* %17, i64 0, i32 59, !dbg !1707
  %20 = load i32* %symbol_mode51, align 4, !dbg !1707, !tbaa !1458
  %cmp52 = icmp eq i32 %20, 0, !dbg !1707
  br i1 %cmp52, label %if.then53, label %if.else54, !dbg !1707

if.then53:                                        ; preds = %for.body
  %mapping = getelementptr inbounds %struct.syntaxelement* %currSE.0115, i64 0, i32 8, !dbg !1707
  store void (i32, i32, i32*, i32*)* @levrun_linfo_inter, void (i32, i32, i32*, i32*)** %mapping, align 8, !dbg !1707, !tbaa !1451
  br label %if.end55, !dbg !1707

if.else54:                                        ; preds = %for.body
  %writing = getelementptr inbounds %struct.syntaxelement* %currSE.0115, i64 0, i32 9, !dbg !1708
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeRunLevel_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing, align 8, !dbg !1708, !tbaa !1451
  br label %if.end55

if.end55:                                         ; preds = %if.else54, %if.then53
  %context = getelementptr inbounds %struct.syntaxelement* %currSE.0115, i64 0, i32 6, !dbg !1709
  store i32 7, i32* %context, align 4, !dbg !1709, !tbaa !1458
  %type = getelementptr inbounds %struct.syntaxelement* %currSE.0115, i64 0, i32 0, !dbg !1710
  store i32 10, i32* %type, align 4, !dbg !1710, !tbaa !1458
  %21 = load i32* %mb_type, align 4, !dbg !1701, !tbaa !1458
  switch i32 %21, label %lor.rhs [
    i32 9, label %lor.end
    i32 10, label %lor.end
    i32 13, label %lor.end
  ], !dbg !1701

lor.rhs:                                          ; preds = %if.end55
  br label %lor.end, !dbg !1701

lor.end:                                          ; preds = %if.end55, %if.end55, %if.end55, %lor.rhs
  %22 = phi i32 [ 1, %if.end55 ], [ 0, %lor.rhs ], [ 1, %if.end55 ], [ 1, %if.end55 ]
  %23 = load %struct.ImageParameters** @img, align 8, !dbg !1701, !tbaa !1451
  %is_intra_block = getelementptr inbounds %struct.ImageParameters* %23, i64 0, i32 20, !dbg !1701
  store i32 %22, i32* %is_intra_block, align 4, !dbg !1701, !tbaa !1458
  %is_v_block = getelementptr inbounds %struct.ImageParameters* %23, i64 0, i32 21, !dbg !1711
  store i32 %., i32* %is_v_block, align 4, !dbg !1711, !tbaa !1458
  %24 = load i32* %type, align 4, !dbg !1703, !tbaa !1458
  %idxprom62 = sext i32 %24 to i64, !dbg !1703
  %arrayidx63 = getelementptr inbounds i32* %7, i64 %idxprom62, !dbg !1703
  %25 = load i32* %arrayidx63, align 4, !dbg !1703, !tbaa !1458
  %idxprom64 = sext i32 %25 to i64, !dbg !1703
  %26 = load %struct.datapartition** %partArr, align 8, !dbg !1703, !tbaa !1451
  %arrayidx65 = getelementptr inbounds %struct.datapartition* %26, i64 %idxprom64, !dbg !1703
  tail call void @llvm.dbg.value(metadata !{%struct.datapartition* %arrayidx65}, i64 0, metadata !397), !dbg !1703
  %writeSyntaxElement = getelementptr inbounds %struct.datapartition* %26, i64 %idxprom64, i32 2, !dbg !1712
  %27 = load i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement, align 8, !dbg !1712, !tbaa !1451
  %call66 = tail call i32 %27(%struct.syntaxelement* %currSE.0115, %struct.datapartition* %arrayidx65) #9, !dbg !1712
  %len = getelementptr inbounds %struct.syntaxelement* %currSE.0115, i64 0, i32 3, !dbg !1704
  %28 = load i32* %len, align 4, !dbg !1704, !tbaa !1458
  %29 = load i32* %arrayidx67, align 4, !dbg !1704, !tbaa !1458
  %add68 = add nsw i32 %29, %28, !dbg !1704
  store i32 %add68, i32* %arrayidx67, align 4, !dbg !1704, !tbaa !1458
  %30 = load i32* %len, align 4, !dbg !1713, !tbaa !1458
  %add70 = add nsw i32 %30, %rate.0116, !dbg !1713
  tail call void @llvm.dbg.value(metadata !{i32 %add70}, i64 0, metadata !385), !dbg !1713
  tail call void @llvm.dbg.value(metadata !{%struct.syntaxelement* %incdec.ptr}, i64 0, metadata !388), !dbg !1714
  %31 = load i32* %currSEnr, align 4, !dbg !1715, !tbaa !1458
  %inc = add nsw i32 %31, 1, !dbg !1715
  store i32 %inc, i32* %currSEnr, align 4, !dbg !1715, !tbaa !1458
  %phitmp = icmp eq i32 %18, 0, !dbg !1699
  %32 = trunc i64 %indvars.iv to i32, !dbg !1699
  %cmp45 = icmp sgt i32 %32, 15, !dbg !1699
  %or.cond = or i1 %cmp45, %phitmp, !dbg !1699
  br i1 %or.cond, label %if.end73, label %lor.end.for.body_crit_edge, !dbg !1699

lor.end.for.body_crit_edge:                       ; preds = %lor.end
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1699
  %incdec.ptr = getelementptr inbounds %struct.syntaxelement* %currSE.0115, i64 1, !dbg !1714
  %.pre = load %struct.InputParameters** @input, align 8, !dbg !1707, !tbaa !1451
  br label %for.body, !dbg !1699

if.end73:                                         ; preds = %lor.end, %if.then21
  %rate.1 = phi i32 [ %call30, %if.then21 ], [ %add70, %lor.end ]
  %33 = load %struct.CSobj** @cs_cm, align 8, !dbg !1716, !tbaa !1451
  tail call void @reset_coding_state(%struct.CSobj* %33) #9, !dbg !1716
  ret i32 %rate.1, !dbg !1717
}
