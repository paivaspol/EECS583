define void @clear_rdopt() #0 {
entry:
  %0 = load i32**** @cofDC, align 8, !tbaa !0
  tail call void @free_mem_DCcoeff(i32*** %0) #8
  %1 = load i32***** @cofAC, align 8, !tbaa !0
  tail call void @free_mem_ACcoeff(i32**** %1) #8
  %2 = load i32***** @cofAC8x8, align 8, !tbaa !0
  tail call void @free_mem_ACcoeff(i32**** %2) #8
  %3 = load i32***** @cofAC4x4intern, align 8, !tbaa !0
  tail call void @free_mem_ACcoeff(i32**** %3) #8
  %4 = load %struct.InputParameters** @input, align 8, !tbaa !0
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters* %4, i64 0, i32 123
  %5 = load i32* %AllowTransform8x8, align 4, !tbaa !3
  %tobool = icmp eq i32 %5, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %6 = load i32***** @cofAC_8x8ts, align 8, !tbaa !0
  tail call void @free_mem_ACcoeff(i32**** %6) #8
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %7 = load %struct.CSobj** @cs_mb, align 8, !tbaa !0
  tail call void @delete_coding_state(%struct.CSobj* %7) #8
  %8 = load %struct.CSobj** @cs_b8, align 8, !tbaa !0
  tail call void @delete_coding_state(%struct.CSobj* %8) #8
  %9 = load %struct.CSobj** @cs_cm, align 8, !tbaa !0
  tail call void @delete_coding_state(%struct.CSobj* %9) #8
  %10 = load %struct.CSobj** @cs_imb, align 8, !tbaa !0
  tail call void @delete_coding_state(%struct.CSobj* %10) #8
  %11 = load %struct.CSobj** @cs_ib8, align 8, !tbaa !0
  tail call void @delete_coding_state(%struct.CSobj* %11) #8
  %12 = load %struct.CSobj** @cs_ib4, align 8, !tbaa !0
  tail call void @delete_coding_state(%struct.CSobj* %12) #8
  %13 = load %struct.CSobj** @cs_pc, align 8, !tbaa !0
  tail call void @delete_coding_state(%struct.CSobj* %13) #8
  ret void
}
