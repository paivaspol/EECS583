define void @StoreNewMotionVectorsBlock8x8(i32 %dir, i32 %block8x8, i32 %mode, i32 %fw_ref, i32 %bw_ref, i32 %pdir8, i32 %bframe) #0 {
  tail call void @llvm.dbg.value(metadata i32 %dir, i64 0, metadata !771, metadata !1629), !dbg !5985
  tail call void @llvm.dbg.value(metadata i32 %block8x8, i64 0, metadata !772, metadata !1629), !dbg !5986
  tail call void @llvm.dbg.value(metadata i32 %mode, i64 0, metadata !773, metadata !1629), !dbg !5987
  tail call void @llvm.dbg.value(metadata i32 %fw_ref, i64 0, metadata !774, metadata !1629), !dbg !5988
  tail call void @llvm.dbg.value(metadata i32 %bw_ref, i64 0, metadata !775, metadata !1629), !dbg !5989
  tail call void @llvm.dbg.value(metadata i32 %pdir8, i64 0, metadata !776, metadata !1629), !dbg !5990
  tail call void @llvm.dbg.value(metadata i32 %bframe, i64 0, metadata !777, metadata !1629), !dbg !5991
  %1 = load %struct.ImageParameters** @img, align 8, !dbg !5992, !tbaa !1498
  %2 = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 71, !dbg !5993
  %3 = load i16******* %2, align 8, !dbg !5993, !tbaa !1670
  tail call void @llvm.dbg.value(metadata i16****** %3, i64 0, metadata !784, metadata !1629), !dbg !5994
  %4 = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 70, !dbg !5995
  %5 = load i16******* %4, align 8, !dbg !5995, !tbaa !4118
  tail call void @llvm.dbg.value(metadata i16****** %5, i64 0, metadata !785, metadata !1629), !dbg !5996
  %6 = srem i32 %block8x8, 2, !dbg !5997
  %7 = sdiv i32 %block8x8, 2, !dbg !5998
  %8 = icmp slt i32 %pdir8, 0, !dbg !5999
  br i1 %8, label %.preheader4, label %22, !dbg !6001

.preheader4:                                      ; preds = %0
  %9 = sext i32 %dir to i64, !dbg !6002
  %10 = shl nsw i32 %6, 1, !dbg !6009
  %11 = sext i32 %10 to i64
  %12 = or i32 %10, 1, !dbg !6009
  %13 = shl nsw i32 %7, 1, !dbg !6009
  %14 = sext i32 %13 to i64
  %15 = or i32 %13, 1, !dbg !6009
  br label %.preheader, !dbg !6009

.preheader:                                       ; preds = %21, %.preheader4
  %indvars.iv32 = phi i64 [ %14, %.preheader4 ], [ %indvars.iv.next33, %21 ]
  br label %16, !dbg !6010

; <label>:16                                      ; preds = %16, %.preheader
  %indvars.iv = phi i64 [ %11, %.preheader ], [ %indvars.iv.next, %16 ]
  %17 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @all_mv8x8, i64 0, i64 %9, i64 0, i64 %indvars.iv, i64 %indvars.iv32, i64 0, !dbg !6002
  store i16 0, i16* %17, align 4, !dbg !6011, !tbaa !1699
  %18 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @all_mv8x8, i64 0, i64 %9, i64 0, i64 %indvars.iv, i64 %indvars.iv32, i64 1, !dbg !6012
  store i16 0, i16* %18, align 2, !dbg !6013, !tbaa !1699
  %19 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @all_mv8x8, i64 0, i64 %9, i64 1, i64 %indvars.iv, i64 %indvars.iv32, i64 0, !dbg !6014
  store i16 0, i16* %19, align 4, !dbg !6015, !tbaa !1699
  %20 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @all_mv8x8, i64 0, i64 %9, i64 1, i64 %indvars.iv, i64 %indvars.iv32, i64 1, !dbg !6016
  store i16 0, i16* %20, align 2, !dbg !6017, !tbaa !1699
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !6010
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !6010
  %exitcond = icmp eq i32 %lftr.wideiv, %12, !dbg !6010
  br i1 %exitcond, label %21, label %16, !dbg !6010

; <label>:21                                      ; preds = %16
  %indvars.iv.next33 = add nsw i64 %indvars.iv32, 1, !dbg !6009
  %lftr.wideiv34 = trunc i64 %indvars.iv32 to i32, !dbg !6009
  %exitcond35 = icmp eq i32 %lftr.wideiv34, %15, !dbg !6009
  br i1 %exitcond35, label %.loopexit, label %.preheader, !dbg !6009

; <label>:22                                      ; preds = %0
  %23 = icmp eq i32 %bframe, 0, !dbg !6018
  br i1 %23, label %.preheader6, label %62, !dbg !6020

.preheader6:                                      ; preds = %22
  %24 = sext i32 %fw_ref to i64, !dbg !6021
  %25 = sext i32 %dir to i64, !dbg !6028
  %26 = shl nsw i32 %6, 1, !dbg !6029
  %27 = sext i32 %26 to i64
  %28 = or i32 %26, 1, !dbg !6029
  %29 = shl nsw i32 %7, 1, !dbg !6029
  %30 = sext i32 %29 to i64
  %31 = or i32 %29, 1, !dbg !6029
  br label %.preheader5, !dbg !6029

.preheader5:                                      ; preds = %61, %.preheader6
  %indvars.iv40 = phi i64 [ %30, %.preheader6 ], [ %indvars.iv.next41, %61 ]
  br label %32, !dbg !6030

; <label>:32                                      ; preds = %32, %.preheader5
  %indvars.iv36 = phi i64 [ %27, %.preheader5 ], [ %indvars.iv.next37, %32 ]
  %33 = getelementptr inbounds i16****** %3, i64 %indvars.iv36, !dbg !6021
  %34 = load i16****** %33, align 8, !dbg !6021, !tbaa !1498
  %35 = getelementptr inbounds i16***** %34, i64 %indvars.iv40, !dbg !6021
  %36 = load i16***** %35, align 8, !dbg !6021, !tbaa !1498
  %37 = load i16**** %36, align 8, !dbg !6021, !tbaa !1498
  %38 = getelementptr inbounds i16*** %37, i64 %24, !dbg !6021
  %39 = load i16*** %38, align 8, !dbg !6021, !tbaa !1498
  %40 = getelementptr inbounds i16** %39, i64 4, !dbg !6021
  %41 = load i16** %40, align 8, !dbg !6021, !tbaa !1498
  %42 = load i16* %41, align 2, !dbg !6021, !tbaa !1699
  %43 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @all_mv8x8, i64 0, i64 %25, i64 0, i64 %indvars.iv36, i64 %indvars.iv40, i64 0, !dbg !6028
  store i16 %42, i16* %43, align 4, !dbg !6031, !tbaa !1699
  %44 = getelementptr inbounds i16* %41, i64 1, !dbg !6032
  %45 = load i16* %44, align 2, !dbg !6032, !tbaa !1699
  %46 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @all_mv8x8, i64 0, i64 %25, i64 0, i64 %indvars.iv36, i64 %indvars.iv40, i64 1, !dbg !6033
  store i16 %45, i16* %46, align 2, !dbg !6034, !tbaa !1699
  %47 = getelementptr inbounds i16****** %5, i64 %indvars.iv36, !dbg !6035
  %48 = load i16****** %47, align 8, !dbg !6035, !tbaa !1498
  %49 = getelementptr inbounds i16***** %48, i64 %indvars.iv40, !dbg !6035
  %50 = load i16***** %49, align 8, !dbg !6035, !tbaa !1498
  %51 = load i16**** %50, align 8, !dbg !6035, !tbaa !1498
  %52 = getelementptr inbounds i16*** %51, i64 %24, !dbg !6035
  %53 = load i16*** %52, align 8, !dbg !6035, !tbaa !1498
  %54 = getelementptr inbounds i16** %53, i64 4, !dbg !6035
  %55 = load i16** %54, align 8, !dbg !6035, !tbaa !1498
  %56 = load i16* %55, align 2, !dbg !6035, !tbaa !1699
  %57 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @pred_mv8x8, i64 0, i64 %25, i64 0, i64 %indvars.iv36, i64 %indvars.iv40, i64 0, !dbg !6036
  store i16 %56, i16* %57, align 4, !dbg !6037, !tbaa !1699
  %58 = getelementptr inbounds i16* %55, i64 1, !dbg !6038
  %59 = load i16* %58, align 2, !dbg !6038, !tbaa !1699
  %60 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @pred_mv8x8, i64 0, i64 %25, i64 0, i64 %indvars.iv36, i64 %indvars.iv40, i64 1, !dbg !6039
  store i16 %59, i16* %60, align 2, !dbg !6040, !tbaa !1699
  %indvars.iv.next37 = add nsw i64 %indvars.iv36, 1, !dbg !6030
  %lftr.wideiv38 = trunc i64 %indvars.iv36 to i32, !dbg !6030
  %exitcond39 = icmp eq i32 %lftr.wideiv38, %28, !dbg !6030
  br i1 %exitcond39, label %61, label %32, !dbg !6030

; <label>:61                                      ; preds = %32
  %indvars.iv.next41 = add nsw i64 %indvars.iv40, 1, !dbg !6029
  %lftr.wideiv42 = trunc i64 %indvars.iv40 to i32, !dbg !6029
  %exitcond43 = icmp eq i32 %lftr.wideiv42, %31, !dbg !6029
  br i1 %exitcond43, label %.loopexit, label %.preheader5, !dbg !6029

; <label>:62                                      ; preds = %22
  %63 = and i32 %pdir8, -3, !dbg !6041
  %64 = icmp eq i32 %63, 0, !dbg !6041
  br i1 %64, label %.preheader15, label %.preheader18, !dbg !6041

.preheader18:                                     ; preds = %62
  %65 = sext i32 %dir to i64, !dbg !6044
  %66 = shl nsw i32 %6, 1, !dbg !6051
  %67 = sext i32 %66 to i64
  %68 = or i32 %66, 1, !dbg !6051
  %69 = shl nsw i32 %7, 1, !dbg !6051
  %70 = sext i32 %69 to i64
  %71 = or i32 %69, 1, !dbg !6051
  br label %.preheader17, !dbg !6051

.preheader15:                                     ; preds = %62
  %72 = sext i32 %mode to i64, !dbg !6052
  %73 = sext i32 %fw_ref to i64, !dbg !6052
  %74 = sext i32 %dir to i64, !dbg !6059
  %75 = shl nsw i32 %6, 1, !dbg !6060
  %76 = sext i32 %75 to i64
  %77 = or i32 %75, 1, !dbg !6060
  %78 = shl nsw i32 %7, 1, !dbg !6060
  %79 = sext i32 %78 to i64
  %80 = or i32 %78, 1, !dbg !6060
  br label %.preheader14, !dbg !6060

.preheader14:                                     ; preds = %110, %.preheader15
  %indvars.iv64 = phi i64 [ %79, %.preheader15 ], [ %indvars.iv.next65, %110 ]
  br label %81, !dbg !6061

; <label>:81                                      ; preds = %81, %.preheader14
  %indvars.iv60 = phi i64 [ %76, %.preheader14 ], [ %indvars.iv.next61, %81 ]
  %82 = getelementptr inbounds i16****** %3, i64 %indvars.iv60, !dbg !6052
  %83 = load i16****** %82, align 8, !dbg !6052, !tbaa !1498
  %84 = getelementptr inbounds i16***** %83, i64 %indvars.iv64, !dbg !6052
  %85 = load i16***** %84, align 8, !dbg !6052, !tbaa !1498
  %86 = load i16**** %85, align 8, !dbg !6052, !tbaa !1498
  %87 = getelementptr inbounds i16*** %86, i64 %73, !dbg !6052
  %88 = load i16*** %87, align 8, !dbg !6052, !tbaa !1498
  %89 = getelementptr inbounds i16** %88, i64 %72, !dbg !6052
  %90 = load i16** %89, align 8, !dbg !6052, !tbaa !1498
  %91 = load i16* %90, align 2, !dbg !6052, !tbaa !1699
  %92 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @all_mv8x8, i64 0, i64 %74, i64 0, i64 %indvars.iv60, i64 %indvars.iv64, i64 0, !dbg !6059
  store i16 %91, i16* %92, align 4, !dbg !6062, !tbaa !1699
  %93 = getelementptr inbounds i16* %90, i64 1, !dbg !6063
  %94 = load i16* %93, align 2, !dbg !6063, !tbaa !1699
  %95 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @all_mv8x8, i64 0, i64 %74, i64 0, i64 %indvars.iv60, i64 %indvars.iv64, i64 1, !dbg !6064
  store i16 %94, i16* %95, align 2, !dbg !6065, !tbaa !1699
  %96 = getelementptr inbounds i16****** %5, i64 %indvars.iv60, !dbg !6066
  %97 = load i16****** %96, align 8, !dbg !6066, !tbaa !1498
  %98 = getelementptr inbounds i16***** %97, i64 %indvars.iv64, !dbg !6066
  %99 = load i16***** %98, align 8, !dbg !6066, !tbaa !1498
  %100 = load i16**** %99, align 8, !dbg !6066, !tbaa !1498
  %101 = getelementptr inbounds i16*** %100, i64 %73, !dbg !6066
  %102 = load i16*** %101, align 8, !dbg !6066, !tbaa !1498
  %103 = getelementptr inbounds i16** %102, i64 %72, !dbg !6066
  %104 = load i16** %103, align 8, !dbg !6066, !tbaa !1498
  %105 = load i16* %104, align 2, !dbg !6066, !tbaa !1699
  %106 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @pred_mv8x8, i64 0, i64 %74, i64 0, i64 %indvars.iv60, i64 %indvars.iv64, i64 0, !dbg !6067
  store i16 %105, i16* %106, align 4, !dbg !6068, !tbaa !1699
  %107 = getelementptr inbounds i16* %104, i64 1, !dbg !6069
  %108 = load i16* %107, align 2, !dbg !6069, !tbaa !1699
  %109 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @pred_mv8x8, i64 0, i64 %74, i64 0, i64 %indvars.iv60, i64 %indvars.iv64, i64 1, !dbg !6070
  store i16 %108, i16* %109, align 2, !dbg !6071, !tbaa !1699
  %indvars.iv.next61 = add nsw i64 %indvars.iv60, 1, !dbg !6061
  %lftr.wideiv62 = trunc i64 %indvars.iv60 to i32, !dbg !6061
  %exitcond63 = icmp eq i32 %lftr.wideiv62, %77, !dbg !6061
  br i1 %exitcond63, label %110, label %81, !dbg !6061

; <label>:110                                     ; preds = %81
  %indvars.iv.next65 = add nsw i64 %indvars.iv64, 1, !dbg !6060
  %lftr.wideiv66 = trunc i64 %indvars.iv64 to i32, !dbg !6060
  %exitcond67 = icmp eq i32 %lftr.wideiv66, %80, !dbg !6060
  br i1 %exitcond67, label %.loopexit16, label %.preheader14, !dbg !6060

.preheader17:                                     ; preds = %114, %.preheader18
  %indvars.iv72 = phi i64 [ %70, %.preheader18 ], [ %indvars.iv.next73, %114 ]
  br label %111, !dbg !6072

; <label>:111                                     ; preds = %111, %.preheader17
  %indvars.iv68 = phi i64 [ %67, %.preheader17 ], [ %indvars.iv.next69, %111 ]
  %112 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @all_mv8x8, i64 0, i64 %65, i64 0, i64 %indvars.iv68, i64 %indvars.iv72, i64 0, !dbg !6044
  store i16 0, i16* %112, align 4, !dbg !6073, !tbaa !1699
  %113 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @all_mv8x8, i64 0, i64 %65, i64 0, i64 %indvars.iv68, i64 %indvars.iv72, i64 1, !dbg !6074
  store i16 0, i16* %113, align 2, !dbg !6075, !tbaa !1699
  %indvars.iv.next69 = add nsw i64 %indvars.iv68, 1, !dbg !6072
  %lftr.wideiv70 = trunc i64 %indvars.iv68 to i32, !dbg !6072
  %exitcond71 = icmp eq i32 %lftr.wideiv70, %68, !dbg !6072
  br i1 %exitcond71, label %114, label %111, !dbg !6072

; <label>:114                                     ; preds = %111
  %indvars.iv.next73 = add nsw i64 %indvars.iv72, 1, !dbg !6051
  %lftr.wideiv74 = trunc i64 %indvars.iv72 to i32, !dbg !6051
  %exitcond75 = icmp eq i32 %lftr.wideiv74, %71, !dbg !6051
  br i1 %exitcond75, label %.loopexit16, label %.preheader17, !dbg !6051

.loopexit16:                                      ; preds = %114, %110
  %pdir8.off = add i32 %pdir8, -1, !dbg !6076
  %115 = icmp ult i32 %pdir8.off, 2, !dbg !6076
  br i1 %115, label %.preheader9, label %.preheader12, !dbg !6076

.preheader12:                                     ; preds = %.loopexit16
  %116 = sext i32 %dir to i64, !dbg !6078
  %117 = shl nsw i32 %6, 1, !dbg !6085
  %118 = sext i32 %117 to i64
  %119 = or i32 %117, 1, !dbg !6085
  %120 = shl nsw i32 %7, 1, !dbg !6085
  %121 = sext i32 %120 to i64
  %122 = or i32 %120, 1, !dbg !6085
  br label %.preheader11, !dbg !6085

.preheader9:                                      ; preds = %.loopexit16
  %123 = sext i32 %mode to i64, !dbg !6086
  %124 = sext i32 %bw_ref to i64, !dbg !6086
  %125 = sext i32 %dir to i64, !dbg !6093
  %126 = shl nsw i32 %6, 1, !dbg !6094
  %127 = sext i32 %126 to i64
  %128 = or i32 %126, 1, !dbg !6094
  %129 = shl nsw i32 %7, 1, !dbg !6094
  %130 = sext i32 %129 to i64
  %131 = or i32 %129, 1, !dbg !6094
  br label %.preheader8, !dbg !6094

.preheader8:                                      ; preds = %163, %.preheader9
  %indvars.iv48 = phi i64 [ %130, %.preheader9 ], [ %indvars.iv.next49, %163 ]
  br label %132, !dbg !6095

; <label>:132                                     ; preds = %132, %.preheader8
  %indvars.iv44 = phi i64 [ %127, %.preheader8 ], [ %indvars.iv.next45, %132 ]
  %133 = getelementptr inbounds i16****** %3, i64 %indvars.iv44, !dbg !6086
  %134 = load i16****** %133, align 8, !dbg !6086, !tbaa !1498
  %135 = getelementptr inbounds i16***** %134, i64 %indvars.iv48, !dbg !6086
  %136 = load i16***** %135, align 8, !dbg !6086, !tbaa !1498
  %137 = getelementptr inbounds i16**** %136, i64 1, !dbg !6086
  %138 = load i16**** %137, align 8, !dbg !6086, !tbaa !1498
  %139 = getelementptr inbounds i16*** %138, i64 %124, !dbg !6086
  %140 = load i16*** %139, align 8, !dbg !6086, !tbaa !1498
  %141 = getelementptr inbounds i16** %140, i64 %123, !dbg !6086
  %142 = load i16** %141, align 8, !dbg !6086, !tbaa !1498
  %143 = load i16* %142, align 2, !dbg !6086, !tbaa !1699
  %144 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @all_mv8x8, i64 0, i64 %125, i64 1, i64 %indvars.iv44, i64 %indvars.iv48, i64 0, !dbg !6093
  store i16 %143, i16* %144, align 4, !dbg !6096, !tbaa !1699
  %145 = getelementptr inbounds i16* %142, i64 1, !dbg !6097
  %146 = load i16* %145, align 2, !dbg !6097, !tbaa !1699
  %147 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @all_mv8x8, i64 0, i64 %125, i64 1, i64 %indvars.iv44, i64 %indvars.iv48, i64 1, !dbg !6098
  store i16 %146, i16* %147, align 2, !dbg !6099, !tbaa !1699
  %148 = getelementptr inbounds i16****** %5, i64 %indvars.iv44, !dbg !6100
  %149 = load i16****** %148, align 8, !dbg !6100, !tbaa !1498
  %150 = getelementptr inbounds i16***** %149, i64 %indvars.iv48, !dbg !6100
  %151 = load i16***** %150, align 8, !dbg !6100, !tbaa !1498
  %152 = getelementptr inbounds i16**** %151, i64 1, !dbg !6100
  %153 = load i16**** %152, align 8, !dbg !6100, !tbaa !1498
  %154 = getelementptr inbounds i16*** %153, i64 %124, !dbg !6100
  %155 = load i16*** %154, align 8, !dbg !6100, !tbaa !1498
  %156 = getelementptr inbounds i16** %155, i64 %123, !dbg !6100
  %157 = load i16** %156, align 8, !dbg !6100, !tbaa !1498
  %158 = load i16* %157, align 2, !dbg !6100, !tbaa !1699
  %159 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @pred_mv8x8, i64 0, i64 %125, i64 1, i64 %indvars.iv44, i64 %indvars.iv48, i64 0, !dbg !6101
  store i16 %158, i16* %159, align 4, !dbg !6102, !tbaa !1699
  %160 = getelementptr inbounds i16* %157, i64 1, !dbg !6103
  %161 = load i16* %160, align 2, !dbg !6103, !tbaa !1699
  %162 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @pred_mv8x8, i64 0, i64 %125, i64 1, i64 %indvars.iv44, i64 %indvars.iv48, i64 1, !dbg !6104
  store i16 %161, i16* %162, align 2, !dbg !6105, !tbaa !1699
  %indvars.iv.next45 = add nsw i64 %indvars.iv44, 1, !dbg !6095
  %lftr.wideiv46 = trunc i64 %indvars.iv44 to i32, !dbg !6095
  %exitcond47 = icmp eq i32 %lftr.wideiv46, %128, !dbg !6095
  br i1 %exitcond47, label %163, label %132, !dbg !6095

; <label>:163                                     ; preds = %132
  %indvars.iv.next49 = add nsw i64 %indvars.iv48, 1, !dbg !6094
  %lftr.wideiv50 = trunc i64 %indvars.iv48 to i32, !dbg !6094
  %exitcond51 = icmp eq i32 %lftr.wideiv50, %131, !dbg !6094
  br i1 %exitcond51, label %.loopexit, label %.preheader8, !dbg !6094

.preheader11:                                     ; preds = %167, %.preheader12
  %indvars.iv56 = phi i64 [ %121, %.preheader12 ], [ %indvars.iv.next57, %167 ]
  br label %164, !dbg !6106

; <label>:164                                     ; preds = %164, %.preheader11
  %indvars.iv52 = phi i64 [ %118, %.preheader11 ], [ %indvars.iv.next53, %164 ]
  %165 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @all_mv8x8, i64 0, i64 %116, i64 1, i64 %indvars.iv52, i64 %indvars.iv56, i64 0, !dbg !6078
  store i16 0, i16* %165, align 4, !dbg !6107, !tbaa !1699
  %166 = getelementptr inbounds [2 x [2 x [4 x [4 x [2 x i16]]]]]* @all_mv8x8, i64 0, i64 %116, i64 1, i64 %indvars.iv52, i64 %indvars.iv56, i64 1, !dbg !6108
  store i16 0, i16* %166, align 2, !dbg !6109, !tbaa !1699
  %indvars.iv.next53 = add nsw i64 %indvars.iv52, 1, !dbg !6106
  %lftr.wideiv54 = trunc i64 %indvars.iv52 to i32, !dbg !6106
  %exitcond55 = icmp eq i32 %lftr.wideiv54, %119, !dbg !6106
  br i1 %exitcond55, label %167, label %164, !dbg !6106

; <label>:167                                     ; preds = %164
  %indvars.iv.next57 = add nsw i64 %indvars.iv56, 1, !dbg !6085
  %lftr.wideiv58 = trunc i64 %indvars.iv56 to i32, !dbg !6085
  %exitcond59 = icmp eq i32 %lftr.wideiv58, %122, !dbg !6085
  br i1 %exitcond59, label %.loopexit, label %.preheader11, !dbg !6085

.loopexit:                                        ; preds = %167, %163, %61, %21
  ret void, !dbg !6110
}
