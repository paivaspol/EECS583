define i32 @GetBestTransformP8x8() #0 {
entry:
  %diff4x4 = alloca [64 x i32], align 16
  %diff8x8 = alloca [64 x i32], align 16
  %0 = bitcast [64 x i32]* %diff4x4 to i8*
  call void @llvm.lifetime.start(i64 256, i8* %0) #3
  %1 = bitcast [64 x i32]* %diff8x8 to i8*
  call void @llvm.lifetime.start(i64 256, i8* %1) #3
  %2 = load %struct.InputParameters** @input, align 8, !tbaa !0
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters* %2, i64 0, i32 123
  %3 = load i32* %AllowTransform8x8, align 4, !tbaa !3
  %cmp = icmp eq i32 %3, 2
  br i1 %cmp, label %cleanup, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %arraydecay = getelementptr inbounds [64 x i32]* %diff8x8, i64 0, i64 0
  br label %for.body

for.body:                                         ; preds = %for.end60, %for.cond.preheader
  %cost4x4.0113 = phi i32 [ 0, %for.cond.preheader ], [ %add54, %for.end60 ]
  %cost8x8.0112 = phi i32 [ 0, %for.cond.preheader ], [ %add63, %for.end60 ]
  %block8x8.0111 = phi i32 [ 0, %for.cond.preheader ], [ %inc65, %for.end60 ]
  %div = sdiv i32 %block8x8.0111, 2
  %shl = shl i32 %div, 3
  %rem = srem i32 %block8x8.0111, 2
  %shl2 = shl i32 %rem, 3
  %4 = shl i32 %rem, 3
  %5 = sext i32 %4 to i64
  %6 = or i32 %4, 4
  %7 = icmp sgt i32 %4, %6
  %smax = select i1 %7, i32 %4, i32 %6
  %8 = or i32 %smax, 3
  %9 = sub i32 %8, %4
  %10 = lshr i32 %9, 2
  %11 = shl i32 %10, 4
  %12 = add i32 %11, 16
  %13 = shl i32 %div, 3
  %14 = sext i32 %13 to i64
  br label %for.body5

for.body5:                                        ; preds = %for.body, %for.inc58
  %indvars.iv126 = phi i64 [ %14, %for.body ], [ %indvars.iv.next127, %for.inc58 ]
  %cost4x4.1110 = phi i32 [ %cost4x4.0113, %for.body ], [ %add54, %for.inc58 ]
  %k.0108 = phi i32 [ 0, %for.body ], [ %38, %for.inc58 ]
  %15 = load %struct.ImageParameters** @img, align 8, !tbaa !0
  %opix_y = getelementptr inbounds %struct.ImageParameters* %15, i64 0, i32 38
  %16 = load i32* %opix_y, align 4, !tbaa !3
  %17 = trunc i64 %indvars.iv126 to i32
  %add6 = add nsw i32 %16, %17
  %18 = sext i32 %add6 to i64
  br label %for.body10

for.body10:                                       ; preds = %for.end53.for.body10_crit_edge, %for.body5
  %19 = phi %struct.ImageParameters* [ %15, %for.body5 ], [ %.pre, %for.end53.for.body10_crit_edge ]
  %indvars.iv124 = phi i64 [ %5, %for.body5 ], [ %indvars.iv.next125, %for.end53.for.body10_crit_edge ]
  %cost4x4.2107 = phi i32 [ %cost4x4.1110, %for.body5 ], [ %add54, %for.end53.for.body10_crit_edge ]
  %k.1105 = phi i32 [ %k.0108, %for.body5 ], [ %37, %for.end53.for.body10_crit_edge ]
  %opix_x = getelementptr inbounds %struct.ImageParameters* %19, i64 0, i32 37
  %20 = load i32* %opix_x, align 4, !tbaa !3
  %21 = trunc i64 %indvars.iv124 to i32
  %add11 = add nsw i32 %20, %21
  %idxprom = sext i32 %k.1105 to i64
  %22 = load i16*** @imgY_org, align 8, !tbaa !0
  %23 = sext i32 %add11 to i64
  br label %for.cond15.preheader

for.cond15.preheader:                             ; preds = %for.inc51, %for.body10
  %indvars.iv118 = phi i64 [ 0, %for.body10 ], [ %indvars.iv.next119, %for.inc51 ]
  %k.2104 = phi i32 [ %k.1105, %for.body10 ], [ %33, %for.inc51 ]
  %24 = add nsw i64 %18, %indvars.iv118
  %arrayidx22 = getelementptr inbounds i16** %22, i64 %24
  %25 = load i16** %arrayidx22, align 8, !tbaa !0
  %26 = add nsw i64 %indvars.iv118, %indvars.iv126
  %27 = sext i32 %k.2104 to i64
  br label %for.body17

for.body17:                                       ; preds = %for.body17, %for.cond15.preheader
  %indvars.iv114 = phi i64 [ 0, %for.cond15.preheader ], [ %indvars.iv.next115, %for.body17 ]
  %indvars.iv = phi i64 [ %27, %for.cond15.preheader ], [ %indvars.iv.next, %for.body17 ]
  %28 = add nsw i64 %23, %indvars.iv114
  %arrayidx23 = getelementptr inbounds i16* %25, i64 %28
  %29 = load i16* %arrayidx23, align 2, !tbaa !4
  %conv = zext i16 %29 to i32
  %30 = add nsw i64 %indvars.iv114, %indvars.iv124
  %arrayidx29 = getelementptr inbounds [16 x [16 x i16]]* @mpr8x8, i64 0, i64 %26, i64 %30
  %31 = load i16* %arrayidx29, align 2, !tbaa !4
  %conv30 = zext i16 %31 to i32
  %sub = sub nsw i32 %conv, %conv30
  %arrayidx32 = getelementptr inbounds [64 x i32]* %diff4x4, i64 0, i64 %indvars.iv
  store i32 %sub, i32* %arrayidx32, align 4, !tbaa !3
  %arrayidx45 = getelementptr inbounds [16 x [16 x i16]]* @mpr_8x8ts, i64 0, i64 %26, i64 %30
  %32 = load i16* %arrayidx45, align 2, !tbaa !4
  %conv46 = zext i16 %32 to i32
  %sub47 = sub nsw i32 %conv, %conv46
  %arrayidx49 = getelementptr inbounds [64 x i32]* %diff8x8, i64 0, i64 %indvars.iv
  store i32 %sub47, i32* %arrayidx49, align 4, !tbaa !3
  %indvars.iv.next115 = add i64 %indvars.iv114, 1
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next115 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 4
  br i1 %exitcond, label %for.inc51, label %for.body17

for.inc51:                                        ; preds = %for.body17
  %33 = add i32 %k.2104, 4
  %indvars.iv.next119 = add i64 %indvars.iv118, 1
  %lftr.wideiv122 = trunc i64 %indvars.iv.next119 to i32
  %exitcond123 = icmp eq i32 %lftr.wideiv122, 4
  br i1 %exitcond123, label %for.end53, label %for.cond15.preheader

for.end53:                                        ; preds = %for.inc51
  %arrayidx = getelementptr inbounds [64 x i32]* %diff4x4, i64 0, i64 %idxprom
  %34 = load %struct.InputParameters** @input, align 8, !tbaa !0
  %hadamard = getelementptr inbounds %struct.InputParameters* %34, i64 0, i32 6
  %35 = load i32* %hadamard, align 4, !tbaa !3
  %call = call i32 @SATD(i32* %arrayidx, i32 %35) #8
  %add54 = add nsw i32 %call, %cost4x4.2107
  %36 = or i32 %shl2, 4
  %cmp9 = icmp slt i32 %21, %36
  br i1 %cmp9, label %for.end53.for.body10_crit_edge, label %for.inc58

for.end53.for.body10_crit_edge:                   ; preds = %for.end53
  %indvars.iv.next125 = add i64 %indvars.iv124, 4
  %37 = add i32 %k.1105, 16
  %.pre = load %struct.ImageParameters** @img, align 8, !tbaa !0
  br label %for.body10

for.inc58:                                        ; preds = %for.end53
  %38 = add i32 %12, %k.0108
  %indvars.iv.next127 = add i64 %indvars.iv126, 4
  %39 = or i32 %shl, 4
  %cmp4 = icmp slt i32 %17, %39
  br i1 %cmp4, label %for.body5, label %for.end60

for.end60:                                        ; preds = %for.inc58
  %40 = load %struct.InputParameters** @input, align 8, !tbaa !0
  %hadamard61 = getelementptr inbounds %struct.InputParameters* %40, i64 0, i32 6
  %41 = load i32* %hadamard61, align 4, !tbaa !3
  %call62 = call i32 @SATD8X8(i32* %arraydecay, i32 %41) #8
  %add63 = add nsw i32 %call62, %cost8x8.0112
  %inc65 = add nsw i32 %block8x8.0111, 1
  %exitcond128 = icmp eq i32 %inc65, 4
  br i1 %exitcond128, label %for.end66, label %for.body

for.end66:                                        ; preds = %for.end60
  %cmp67 = icmp slt i32 %add63, %add54
  %. = zext i1 %cmp67 to i32
  br label %cleanup

cleanup:                                          ; preds = %for.end66, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ %., %for.end66 ]
  call void @llvm.lifetime.end(i64 256, i8* %1) #3
  call void @llvm.lifetime.end(i64 256, i8* %0) #3
  ret i32 %retval.0
}
