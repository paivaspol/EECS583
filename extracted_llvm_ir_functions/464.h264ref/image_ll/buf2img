define void @buf2img(i16** nocapture readonly %imgX, i8* %buf, i32 %size_x, i32 %size_y, i32 %symbol_size_in_bytes) #0 {
  tail call void @llvm.dbg.value(metadata i16** %imgX, i64 0, metadata !475, metadata !1134), !dbg !4575
  tail call void @llvm.dbg.value(metadata i8* %buf, i64 0, metadata !476, metadata !1134), !dbg !4576
  tail call void @llvm.dbg.value(metadata i32 %size_x, i64 0, metadata !477, metadata !1134), !dbg !4577
  tail call void @llvm.dbg.value(metadata i32 %size_y, i64 0, metadata !478, metadata !1134), !dbg !4578
  tail call void @llvm.dbg.value(metadata i32 %symbol_size_in_bytes, i64 0, metadata !479, metadata !1134), !dbg !4579
  %1 = sext i32 %symbol_size_in_bytes to i64, !dbg !4580
  %2 = icmp ugt i32 %symbol_size_in_bytes, 2, !dbg !4582
  br i1 %2, label %3, label %4, !dbg !4583

; <label>:3                                       ; preds = %0
  tail call void @error(i8* getelementptr inbounds ([110 x i8]* @.str3, i64 0, i64 0), i32 500) #8, !dbg !4584
  br label %4, !dbg !4586

; <label>:4                                       ; preds = %3, %0
  %5 = tail call i32 (...)* @testEndian() #8, !dbg !4587
  %6 = icmp eq i32 %5, 0, !dbg !4587
  br i1 %6, label %.preheader1, label %12, !dbg !4591

.preheader1:                                      ; preds = %4
  %7 = icmp sgt i32 %size_y, 0, !dbg !4592
  br i1 %7, label %.preheader.lr.ph, label %.loopexit, !dbg !4596

.preheader.lr.ph:                                 ; preds = %.preheader1
  %8 = icmp sgt i32 %size_x, 0, !dbg !4597
  %9 = add i32 %size_x, -1, !dbg !4596
  %10 = sext i32 %size_x to i64, !dbg !4596
  %11 = add i32 %size_y, -1, !dbg !4596
  br label %.preheader, !dbg !4596

; <label>:12                                      ; preds = %4
  switch i32 %symbol_size_in_bytes, label %.loopexit10 [
    i32 1, label %.preheader3
    i32 2, label %.preheader6
    i32 4, label %.preheader9
  ], !dbg !4600

.preheader9:                                      ; preds = %12
  %13 = icmp sgt i32 %size_y, 0, !dbg !4602
  br i1 %13, label %.preheader8.lr.ph, label %.loopexit10, !dbg !4607

.preheader8.lr.ph:                                ; preds = %.preheader9
  %14 = icmp sgt i32 %size_x, 0, !dbg !4608
  %15 = add i32 %size_x, -1, !dbg !4607
  %16 = sext i32 %size_x to i64, !dbg !4607
  %17 = add i32 %size_y, -1, !dbg !4607
  br label %.preheader8, !dbg !4607

.preheader6:                                      ; preds = %12
  %18 = icmp sgt i32 %size_y, 0, !dbg !4611
  br i1 %18, label %.preheader5.lr.ph, label %.loopexit, !dbg !4615

.preheader5.lr.ph:                                ; preds = %.preheader6
  %19 = icmp sgt i32 %size_x, 0, !dbg !4616
  %20 = add i32 %size_x, -1, !dbg !4615
  %21 = sext i32 %size_x to i64, !dbg !4615
  %22 = add i32 %size_y, -1, !dbg !4615
  br label %.preheader5, !dbg !4615

.preheader3:                                      ; preds = %12
  %23 = icmp sgt i32 %size_y, 0, !dbg !4619
  br i1 %23, label %.preheader2.lr.ph, label %.loopexit, !dbg !4623

.preheader2.lr.ph:                                ; preds = %.preheader3
  %24 = icmp sgt i32 %size_x, 0, !dbg !4624
  %25 = add i32 %size_x, -1, !dbg !4623
  %26 = sext i32 %size_x to i64, !dbg !4623
  %27 = add i32 %size_y, -1, !dbg !4623
  br label %.preheader2, !dbg !4623

.preheader2:                                      ; preds = %._crit_edge15, %.preheader2.lr.ph
  %indvars.iv33 = phi i64 [ 0, %.preheader2.lr.ph ], [ %indvars.iv.next34, %._crit_edge15 ]
  br i1 %24, label %.lr.ph14, label %._crit_edge15, !dbg !4627

.lr.ph14:                                         ; preds = %.preheader2
  %28 = mul nsw i64 %indvars.iv33, %26, !dbg !4628
  %29 = getelementptr inbounds i16** %imgX, i64 %indvars.iv33, !dbg !4630
  %.pre54 = load i16** %29, align 8, !dbg !4630, !tbaa !1137
  br label %30, !dbg !4627

; <label>:30                                      ; preds = %30, %.lr.ph14
  %indvars.iv29 = phi i64 [ 0, %.lr.ph14 ], [ %indvars.iv.next30, %30 ]
  %31 = add nsw i64 %indvars.iv29, %28, !dbg !4631
  %32 = getelementptr inbounds i8* %buf, i64 %31, !dbg !4632
  %33 = load i8* %32, align 1, !dbg !4632, !tbaa !1175
  %34 = zext i8 %33 to i16, !dbg !4632
  %35 = getelementptr inbounds i16* %.pre54, i64 %indvars.iv29, !dbg !4630
  store i16 %34, i16* %35, align 2, !dbg !4633, !tbaa !1193
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1, !dbg !4627
  %lftr.wideiv31 = trunc i64 %indvars.iv29 to i32, !dbg !4627
  %exitcond32 = icmp eq i32 %lftr.wideiv31, %25, !dbg !4627
  br i1 %exitcond32, label %._crit_edge15, label %30, !dbg !4627

._crit_edge15:                                    ; preds = %30, %.preheader2
  %indvars.iv.next34 = add nuw nsw i64 %indvars.iv33, 1, !dbg !4623
  %lftr.wideiv35 = trunc i64 %indvars.iv33 to i32, !dbg !4623
  %exitcond36 = icmp eq i32 %lftr.wideiv35, %27, !dbg !4623
  br i1 %exitcond36, label %.loopexit, label %.preheader2, !dbg !4623

.preheader5:                                      ; preds = %._crit_edge19, %.preheader5.lr.ph
  %indvars.iv41 = phi i64 [ 0, %.preheader5.lr.ph ], [ %indvars.iv.next42, %._crit_edge19 ]
  br i1 %19, label %.lr.ph18, label %._crit_edge19, !dbg !4634

.lr.ph18:                                         ; preds = %.preheader5
  %36 = mul nsw i64 %indvars.iv41, %21, !dbg !4635
  %37 = getelementptr inbounds i16** %imgX, i64 %indvars.iv41, !dbg !4637
  %.pre53 = load i16** %37, align 8, !dbg !4637, !tbaa !1137
  br label %38, !dbg !4634

; <label>:38                                      ; preds = %38, %.lr.ph18
  %indvars.iv37 = phi i64 [ 0, %.lr.ph18 ], [ %indvars.iv.next38, %38 ]
  %39 = add nsw i64 %indvars.iv37, %36, !dbg !4635
  %40 = trunc i64 %39 to i32, !dbg !4635
  %41 = shl nsw i32 %40, 1, !dbg !4635
  %42 = sext i32 %41 to i64, !dbg !4635
  %43 = getelementptr inbounds i8* %buf, i64 %42, !dbg !4635
  %44 = bitcast i8* %43 to i16*, !dbg !4635
  %45 = load i16* %44, align 1, !dbg !4635
  tail call void @llvm.dbg.value(metadata i16 %45, i64 0, metadata !482, metadata !1134), !dbg !4638
  %46 = tail call i16 @llvm.bswap.i16(i16 %45), !dbg !4639
  tail call void @llvm.dbg.value(metadata i16 %46, i64 0, metadata !483, metadata !1134), !dbg !4640
  %47 = getelementptr inbounds i16* %.pre53, i64 %indvars.iv37, !dbg !4637
  store i16 %46, i16* %47, align 2, !dbg !4641, !tbaa !1193
  %indvars.iv.next38 = add nuw nsw i64 %indvars.iv37, 1, !dbg !4634
  %lftr.wideiv39 = trunc i64 %indvars.iv37 to i32, !dbg !4634
  %exitcond40 = icmp eq i32 %lftr.wideiv39, %20, !dbg !4634
  br i1 %exitcond40, label %._crit_edge19, label %38, !dbg !4634

._crit_edge19:                                    ; preds = %38, %.preheader5
  %indvars.iv.next42 = add nuw nsw i64 %indvars.iv41, 1, !dbg !4615
  %lftr.wideiv43 = trunc i64 %indvars.iv41 to i32, !dbg !4615
  %exitcond44 = icmp eq i32 %lftr.wideiv43, %22, !dbg !4615
  br i1 %exitcond44, label %.loopexit, label %.preheader5, !dbg !4615

.preheader8:                                      ; preds = %._crit_edge23, %.preheader8.lr.ph
  %indvars.iv49 = phi i64 [ 0, %.preheader8.lr.ph ], [ %indvars.iv.next50, %._crit_edge23 ]
  br i1 %14, label %.lr.ph22, label %._crit_edge23, !dbg !4642

.lr.ph22:                                         ; preds = %.preheader8
  %48 = mul nsw i64 %indvars.iv49, %16, !dbg !4643
  %49 = getelementptr inbounds i16** %imgX, i64 %indvars.iv49, !dbg !4645
  %.pre = load i16** %49, align 8, !dbg !4645, !tbaa !1137
  br label %50, !dbg !4642

; <label>:50                                      ; preds = %50, %.lr.ph22
  %indvars.iv45 = phi i64 [ 0, %.lr.ph22 ], [ %indvars.iv.next46, %50 ]
  %51 = add nsw i64 %indvars.iv45, %48, !dbg !4643
  %52 = trunc i64 %51 to i32, !dbg !4643
  %53 = shl nsw i32 %52, 2, !dbg !4643
  %54 = sext i32 %53 to i64, !dbg !4643
  %55 = getelementptr inbounds i8* %buf, i64 %54, !dbg !4643
  %56 = bitcast i8* %55 to i32*, !dbg !4643
  %57 = load i32* %56, align 1, !dbg !4643
  %58 = zext i32 %57 to i64, !dbg !4643
  tail call void @llvm.dbg.value(metadata i64 %58, i64 0, metadata !484, metadata !1134), !dbg !4646
  %59 = lshr i64 %58, 8, !dbg !4647
  %60 = and i64 %59, 65280, !dbg !4647
  %61 = lshr i64 %58, 24, !dbg !4648
  %62 = or i64 %60, %61, !dbg !4649
  tail call void @llvm.dbg.value(metadata i64 %62, i64 0, metadata !485, metadata !1134), !dbg !4650
  %63 = trunc i64 %62 to i16, !dbg !4651
  %64 = getelementptr inbounds i16* %.pre, i64 %indvars.iv45, !dbg !4645
  store i16 %63, i16* %64, align 2, !dbg !4652, !tbaa !1193
  %indvars.iv.next46 = add nuw nsw i64 %indvars.iv45, 1, !dbg !4642
  %lftr.wideiv47 = trunc i64 %indvars.iv45 to i32, !dbg !4642
  %exitcond48 = icmp eq i32 %lftr.wideiv47, %15, !dbg !4642
  br i1 %exitcond48, label %._crit_edge23, label %50, !dbg !4642

._crit_edge23:                                    ; preds = %50, %.preheader8
  %indvars.iv.next50 = add nuw nsw i64 %indvars.iv49, 1, !dbg !4607
  %lftr.wideiv51 = trunc i64 %indvars.iv49 to i32, !dbg !4607
  %exitcond52 = icmp eq i32 %lftr.wideiv51, %17, !dbg !4607
  br i1 %exitcond52, label %.loopexit10, label %.preheader8, !dbg !4607

.loopexit10:                                      ; preds = %._crit_edge23, %.preheader9, %12
  tail call void @error(i8* getelementptr inbounds ([80 x i8]* @.str4, i64 0, i64 0), i32 500) #8, !dbg !4653
  br label %.loopexit, !dbg !4655

.preheader:                                       ; preds = %._crit_edge, %.preheader.lr.ph
  %indvars.iv25 = phi i64 [ 0, %.preheader.lr.ph ], [ %indvars.iv.next26, %._crit_edge ]
  br i1 %8, label %.lr.ph, label %._crit_edge, !dbg !4656

.lr.ph:                                           ; preds = %.preheader
  %65 = getelementptr inbounds i16** %imgX, i64 %indvars.iv25, !dbg !4657
  %66 = mul nsw i64 %indvars.iv25, %10, !dbg !4659
  br label %67, !dbg !4656

; <label>:67                                      ; preds = %67, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %67 ]
  %68 = load i16** %65, align 8, !dbg !4657, !tbaa !1137
  %69 = getelementptr inbounds i16* %68, i64 %indvars.iv, !dbg !4657
  store i16 0, i16* %69, align 2, !dbg !4660, !tbaa !1193
  %70 = bitcast i16* %69 to i8*, !dbg !4659
  %71 = add nsw i64 %indvars.iv, %66, !dbg !4659
  %72 = mul nsw i64 %71, %1, !dbg !4659
  %73 = getelementptr inbounds i8* %buf, i64 %72, !dbg !4659
  %74 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %70, i1 false), !dbg !4659
  %75 = tail call i8* @__memcpy_chk(i8* %70, i8* %73, i64 %1, i64 %74) #8, !dbg !4659
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4656
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !4656
  %exitcond = icmp eq i32 %lftr.wideiv, %9, !dbg !4656
  br i1 %exitcond, label %._crit_edge, label %67, !dbg !4656

._crit_edge:                                      ; preds = %67, %.preheader
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !4596
  %lftr.wideiv27 = trunc i64 %indvars.iv25 to i32, !dbg !4596
  %exitcond28 = icmp eq i32 %lftr.wideiv27, %11, !dbg !4596
  br i1 %exitcond28, label %.loopexit, label %.preheader, !dbg !4596

.loopexit:                                        ; preds = %._crit_edge19, %._crit_edge15, %._crit_edge, %.preheader6, %.preheader3, %.preheader1, %.loopexit10
  ret void, !dbg !4661
}
