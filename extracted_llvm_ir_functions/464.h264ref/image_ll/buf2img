define void @buf2img(i16** nocapture %imgX, i8* nocapture %buf, i32 %size_x, i32 %size_y, i32 %symbol_size_in_bytes) #0 {
entry:
  %conv = sext i32 %symbol_size_in_bytes to i64
  %cmp = icmp ugt i32 %symbol_size_in_bytes, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @error(i8* getelementptr inbounds ([110 x i8]* @.str3, i64 0, i64 0), i32 500) #7
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call = tail call i32 (...)* @testEndian() #7
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %for.cond78.preheader, label %if.then2

for.cond78.preheader:                             ; preds = %if.end
  %cmp79166 = icmp sgt i32 %size_y, 0
  br i1 %cmp79166, label %for.cond82.preheader.lr.ph, label %if.end106

for.cond82.preheader.lr.ph:                       ; preds = %for.cond78.preheader
  %cmp83164 = icmp sgt i32 %size_x, 0
  br label %for.cond82.preheader

if.then2:                                         ; preds = %if.end
  switch i32 %symbol_size_in_bytes, label %sw.default [
    i32 1, label %for.cond.preheader
    i32 2, label %for.cond18.preheader
    i32 4, label %for.cond43.preheader
  ]

for.cond43.preheader:                             ; preds = %if.then2
  %cmp44181 = icmp sgt i32 %size_y, 0
  br i1 %cmp44181, label %for.cond47.preheader.lr.ph, label %sw.default

for.cond47.preheader.lr.ph:                       ; preds = %for.cond43.preheader
  %cmp48178 = icmp sgt i32 %size_x, 0
  br label %for.cond47.preheader

for.cond18.preheader:                             ; preds = %if.then2
  %cmp19176 = icmp sgt i32 %size_y, 0
  br i1 %cmp19176, label %for.cond22.preheader.lr.ph, label %if.end106

for.cond22.preheader.lr.ph:                       ; preds = %for.cond18.preheader
  %cmp23173 = icmp sgt i32 %size_x, 0
  br label %for.cond22.preheader

for.cond.preheader:                               ; preds = %if.then2
  %cmp3171 = icmp sgt i32 %size_y, 0
  br i1 %cmp3171, label %for.cond5.preheader.lr.ph, label %if.end106

for.cond5.preheader.lr.ph:                        ; preds = %for.cond.preheader
  %cmp6168 = icmp sgt i32 %size_x, 0
  br label %for.cond5.preheader

for.cond5.preheader:                              ; preds = %for.inc14, %for.cond5.preheader.lr.ph
  %indvars.iv194 = phi i64 [ 0, %for.cond5.preheader.lr.ph ], [ %indvars.iv.next195, %for.inc14 ]
  br i1 %cmp6168, label %for.body8.lr.ph, label %for.inc14

for.body8.lr.ph:                                  ; preds = %for.cond5.preheader
  %0 = trunc i64 %indvars.iv194 to i32
  %mul = mul nsw i32 %0, %size_x
  %arrayidx12 = getelementptr inbounds i16** %imgX, i64 %indvars.iv194
  %1 = sext i32 %mul to i64
  %.pre = load i16** %arrayidx12, align 8, !tbaa !0
  br label %for.body8

for.body8:                                        ; preds = %for.body8, %for.body8.lr.ph
  %indvars.iv189 = phi i64 [ 0, %for.body8.lr.ph ], [ %indvars.iv.next190, %for.body8 ]
  %2 = add nsw i64 %indvars.iv189, %1
  %arrayidx = getelementptr inbounds i8* %buf, i64 %2
  %3 = load i8* %arrayidx, align 1, !tbaa !1
  %conv9 = zext i8 %3 to i16
  %arrayidx13 = getelementptr inbounds i16* %.pre, i64 %indvars.iv189
  store i16 %conv9, i16* %arrayidx13, align 2, !tbaa !4
  %indvars.iv.next190 = add i64 %indvars.iv189, 1
  %lftr.wideiv192 = trunc i64 %indvars.iv.next190 to i32
  %exitcond193 = icmp eq i32 %lftr.wideiv192, %size_x
  br i1 %exitcond193, label %for.inc14, label %for.body8

for.inc14:                                        ; preds = %for.body8, %for.cond5.preheader
  %indvars.iv.next195 = add i64 %indvars.iv194, 1
  %lftr.wideiv196 = trunc i64 %indvars.iv.next195 to i32
  %exitcond197 = icmp eq i32 %lftr.wideiv196, %size_y
  br i1 %exitcond197, label %if.end106, label %for.cond5.preheader

for.cond22.preheader:                             ; preds = %for.inc39, %for.cond22.preheader.lr.ph
  %indvars.iv203 = phi i64 [ 0, %for.cond22.preheader.lr.ph ], [ %indvars.iv.next204, %for.inc39 ]
  br i1 %cmp23173, label %for.body25.lr.ph, label %for.inc39

for.body25.lr.ph:                                 ; preds = %for.cond22.preheader
  %4 = trunc i64 %indvars.iv203 to i32
  %mul26 = mul nsw i32 %4, %size_x
  %arrayidx34 = getelementptr inbounds i16** %imgX, i64 %indvars.iv203
  %5 = zext i32 %mul26 to i64
  %.pre216 = load i16** %arrayidx34, align 8, !tbaa !0
  br label %for.body25

for.body25:                                       ; preds = %for.body25, %for.body25.lr.ph
  %indvars.iv198 = phi i64 [ 0, %for.body25.lr.ph ], [ %indvars.iv.next199, %for.body25 ]
  %6 = add nsw i64 %indvars.iv198, %5
  %7 = trunc i64 %6 to i32
  %mul28 = shl nsw i32 %7, 1
  %idx.ext = sext i32 %mul28 to i64
  %add.ptr = getelementptr inbounds i8* %buf, i64 %idx.ext
  %tmp16.0.cast = bitcast i8* %add.ptr to i16*
  %tmp16.0.copyload = load i16* %tmp16.0.cast, align 1
  %or = tail call i16 @llvm.bswap.i16(i16 %tmp16.0.copyload)
  %arrayidx35 = getelementptr inbounds i16* %.pre216, i64 %indvars.iv198
  store i16 %or, i16* %arrayidx35, align 2, !tbaa !4
  %indvars.iv.next199 = add i64 %indvars.iv198, 1
  %lftr.wideiv201 = trunc i64 %indvars.iv.next199 to i32
  %exitcond202 = icmp eq i32 %lftr.wideiv201, %size_x
  br i1 %exitcond202, label %for.inc39, label %for.body25

for.inc39:                                        ; preds = %for.body25, %for.cond22.preheader
  %indvars.iv.next204 = add i64 %indvars.iv203, 1
  %lftr.wideiv205 = trunc i64 %indvars.iv.next204 to i32
  %exitcond206 = icmp eq i32 %lftr.wideiv205, %size_y
  br i1 %exitcond206, label %if.end106, label %for.cond22.preheader

for.cond47.preheader:                             ; preds = %for.inc75, %for.cond47.preheader.lr.ph
  %indvars.iv212 = phi i64 [ 0, %for.cond47.preheader.lr.ph ], [ %indvars.iv.next213, %for.inc75 ]
  br i1 %cmp48178, label %for.body50.lr.ph, label %for.inc75

for.body50.lr.ph:                                 ; preds = %for.cond47.preheader
  %8 = trunc i64 %indvars.iv212 to i32
  %mul51 = mul nsw i32 %8, %size_x
  %arrayidx70 = getelementptr inbounds i16** %imgX, i64 %indvars.iv212
  %9 = zext i32 %mul51 to i64
  %.pre217 = load i16** %arrayidx70, align 8, !tbaa !0
  br label %for.body50

for.body50:                                       ; preds = %for.body50, %for.body50.lr.ph
  %indvars.iv207 = phi i64 [ 0, %for.body50.lr.ph ], [ %indvars.iv.next208, %for.body50 ]
  %10 = add nsw i64 %indvars.iv207, %9
  %11 = trunc i64 %10 to i32
  %mul53 = shl nsw i32 %11, 2
  %idx.ext54 = sext i32 %mul53 to i64
  %add.ptr55 = getelementptr inbounds i8* %buf, i64 %idx.ext54
  %tmp32.0.cast = bitcast i8* %add.ptr55 to i32*
  %tmp32.0.copyload = load i32* %tmp32.0.cast, align 1
  %tmp32.0.insert.ext = zext i32 %tmp32.0.copyload to i64
  %and61 = lshr i64 %tmp32.0.insert.ext, 8
  %shr62 = and i64 %and61, 65280
  %shr65 = lshr i64 %tmp32.0.insert.ext, 24
  %or66 = or i64 %shr62, %shr65
  %conv67 = trunc i64 %or66 to i16
  %arrayidx71 = getelementptr inbounds i16* %.pre217, i64 %indvars.iv207
  store i16 %conv67, i16* %arrayidx71, align 2, !tbaa !4
  %indvars.iv.next208 = add i64 %indvars.iv207, 1
  %lftr.wideiv210 = trunc i64 %indvars.iv.next208 to i32
  %exitcond211 = icmp eq i32 %lftr.wideiv210, %size_x
  br i1 %exitcond211, label %for.inc75, label %for.body50

for.inc75:                                        ; preds = %for.body50, %for.cond47.preheader
  %indvars.iv.next213 = add i64 %indvars.iv212, 1
  %lftr.wideiv214 = trunc i64 %indvars.iv.next213 to i32
  %exitcond215 = icmp eq i32 %lftr.wideiv214, %size_y
  br i1 %exitcond215, label %sw.default, label %for.cond47.preheader

sw.default:                                       ; preds = %for.cond43.preheader, %for.inc75, %if.then2
  tail call void @error(i8* getelementptr inbounds ([80 x i8]* @.str4, i64 0, i64 0), i32 500) #7
  br label %if.end106

for.cond82.preheader:                             ; preds = %for.inc103, %for.cond82.preheader.lr.ph
  %indvars.iv185 = phi i64 [ 0, %for.cond82.preheader.lr.ph ], [ %indvars.iv.next186, %for.inc103 ]
  br i1 %cmp83164, label %for.body85.lr.ph, label %for.inc103

for.body85.lr.ph:                                 ; preds = %for.cond82.preheader
  %arrayidx88 = getelementptr inbounds i16** %imgX, i64 %indvars.iv185
  %12 = trunc i64 %indvars.iv185 to i32
  %mul94 = mul nsw i32 %12, %size_x
  %13 = zext i32 %mul94 to i64
  br label %for.body85

for.body85:                                       ; preds = %for.body85, %for.body85.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body85.lr.ph ], [ %indvars.iv.next, %for.body85 ]
  %14 = load i16** %arrayidx88, align 8, !tbaa !0
  %arrayidx89 = getelementptr inbounds i16* %14, i64 %indvars.iv
  store i16 0, i16* %arrayidx89, align 2, !tbaa !4
  %15 = bitcast i16* %arrayidx89 to i8*
  %16 = add nsw i64 %indvars.iv, %13
  %17 = trunc i64 %16 to i32
  %mul96 = mul nsw i32 %17, %symbol_size_in_bytes
  %idx.ext97 = sext i32 %mul96 to i64
  %add.ptr98 = getelementptr inbounds i8* %buf, i64 %idx.ext97
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %add.ptr98, i64 %conv, i32 1, i1 false)
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %size_x
  br i1 %exitcond, label %for.inc103, label %for.body85

for.inc103:                                       ; preds = %for.body85, %for.cond82.preheader
  %indvars.iv.next186 = add i64 %indvars.iv185, 1
  %lftr.wideiv187 = trunc i64 %indvars.iv.next186 to i32
  %exitcond188 = icmp eq i32 %lftr.wideiv187, %size_y
  br i1 %exitcond188, label %if.end106, label %for.cond82.preheader

if.end106:                                        ; preds = %for.cond18.preheader, %for.inc39, %for.cond.preheader, %for.inc14, %for.cond78.preheader, %for.inc103, %sw.default
  ret void
}
