define void @write_and_store_CBP_block_bit(%struct.macroblock* nocapture %currMB, %struct.EncodingEnvironment* %eep_dp, i32 %type, i32 %cbp_bit) #0 {
entry:
  %block_a = alloca %struct.pix_pos, align 4
  %block_b = alloca %struct.pix_pos, align 4
  %type.off = add i32 %type, -1
  %cmp5 = icmp eq i32 %type, 4
  %0 = icmp ult i32 %type.off, 5
  %cmp7 = icmp eq i32 %type, 0
  switch i32 %type, label %land.end38 [
    i32 7, label %land.end15.thread
    i32 8, label %land.rhs35
    i32 6, label %land.rhs35
    i32 9, label %land.rhs35
  ]

land.end15.thread:                                ; preds = %entry
  %1 = load %struct.ImageParameters** @img, align 8, !tbaa !3
  %is_v_block = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 21
  %2 = load i32* %is_v_block, align 4, !tbaa !0
  %lnot = icmp eq i32 %2, 0
  %tobool14 = icmp ne i32 %2, 0
  br label %land.end38

land.rhs35:                                       ; preds = %entry, %entry, %entry
  %3 = load %struct.ImageParameters** @img, align 8, !tbaa !3
  %is_v_block29 = getelementptr inbounds %struct.ImageParameters* %3, i64 0, i32 21
  %4 = load i32* %is_v_block29, align 4, !tbaa !0
  %lnot31 = icmp eq i32 %4, 0
  %tobool37 = icmp ne i32 %4, 0
  br label %land.end38

land.end38:                                       ; preds = %entry, %land.end15.thread, %land.rhs35
  %5 = phi i1 [ %lnot31, %land.rhs35 ], [ false, %land.end15.thread ], [ false, %entry ]
  %6 = phi i1 [ false, %land.rhs35 ], [ %tobool14, %land.end15.thread ], [ false, %entry ]
  %7 = phi i1 [ false, %land.rhs35 ], [ %lnot, %land.end15.thread ], [ false, %entry ]
  %8 = phi i1 [ %tobool37, %land.rhs35 ], [ false, %land.end15.thread ], [ false, %entry ]
  %brmerge = or i1 %0, %7
  %brmerge361 = or i1 %brmerge, %6
  %9 = load %struct.ImageParameters** @img, align 8, !tbaa !3
  br i1 %brmerge361, label %cond.true50, label %cond.end52

cond.true50:                                      ; preds = %land.end38
  %subblock_y = getelementptr inbounds %struct.ImageParameters* %9, i64 0, i32 19
  %10 = load i32* %subblock_y, align 4, !tbaa !0
  %subblock_x = getelementptr inbounds %struct.ImageParameters* %9, i64 0, i32 18
  %11 = load i32* %subblock_x, align 4, !tbaa !0
  br label %cond.end52

cond.end52:                                       ; preds = %land.end38, %cond.true50
  %cond375 = phi i32 [ %10, %cond.true50 ], [ 0, %land.end38 ]
  %cond53 = phi i32 [ %11, %cond.true50 ], [ 0, %land.end38 ]
  %brmerge364 = or i1 %cmp7, %0
  %brmerge365 = or i1 %brmerge364, %5
  %is_intra_block = getelementptr inbounds %struct.ImageParameters* %9, i64 0, i32 20
  %12 = load i32* %is_intra_block, align 4, !tbaa !0
  %tobool76 = icmp ne i32 %12, 0
  %cond77 = zext i1 %tobool76 to i32
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters* %9, i64 0, i32 3
  %13 = load i32* %current_mb_nr, align 4, !tbaa !0
  br i1 %brmerge364, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end52
  call void @getLuma4x4Neighbour(i32 %13, i32 %cond53, i32 %cond375, i32 -1, i32 0, %struct.pix_pos* %block_a) #5
  %14 = load %struct.ImageParameters** @img, align 8, !tbaa !3
  %current_mb_nr81 = getelementptr inbounds %struct.ImageParameters* %14, i64 0, i32 3
  %15 = load i32* %current_mb_nr81, align 4, !tbaa !0
  call void @getLuma4x4Neighbour(i32 %15, i32 %cond53, i32 %cond375, i32 0, i32 -1, %struct.pix_pos* %block_b) #5
  br i1 %0, label %if.then83, label %if.end118

if.then83:                                        ; preds = %if.then
  %available = getelementptr inbounds %struct.pix_pos* %block_a, i64 0, i32 0
  %16 = load i32* %available, align 4, !tbaa !0
  %tobool84 = icmp eq i32 %16, 0
  br i1 %tobool84, label %if.end, label %if.then85

if.then85:                                        ; preds = %if.then83
  %y = getelementptr inbounds %struct.pix_pos* %block_a, i64 0, i32 3
  %17 = load i32* %y, align 4, !tbaa !0
  %mul = shl i32 %17, 2
  %x = getelementptr inbounds %struct.pix_pos* %block_a, i64 0, i32 2
  %18 = load i32* %x, align 4, !tbaa !0
  %add = add nsw i32 %mul, %18
  br label %if.end

if.end:                                           ; preds = %if.then83, %if.then85
  %bit_pos_a.0 = phi i32 [ %add, %if.then85 ], [ 0, %if.then83 ]
  %available86 = getelementptr inbounds %struct.pix_pos* %block_b, i64 0, i32 0
  %19 = load i32* %available86, align 4, !tbaa !0
  %tobool87 = icmp eq i32 %19, 0
  br i1 %tobool87, label %if.end118, label %if.then88

if.then88:                                        ; preds = %if.end
  %y89 = getelementptr inbounds %struct.pix_pos* %block_b, i64 0, i32 3
  %20 = load i32* %y89, align 4, !tbaa !0
  %mul90 = shl i32 %20, 2
  %x91 = getelementptr inbounds %struct.pix_pos* %block_b, i64 0, i32 2
  %21 = load i32* %x91, align 4, !tbaa !0
  %add92 = add nsw i32 %mul90, %21
  br label %if.end118

if.else:                                          ; preds = %cond.end52
  call void @getChroma4x4Neighbour(i32 %13, i32 %cond53, i32 %cond375, i32 -1, i32 0, %struct.pix_pos* %block_a) #5
  %22 = load %struct.ImageParameters** @img, align 8, !tbaa !3
  %current_mb_nr96 = getelementptr inbounds %struct.ImageParameters* %22, i64 0, i32 3
  %23 = load i32* %current_mb_nr96, align 4, !tbaa !0
  call void @getChroma4x4Neighbour(i32 %23, i32 %cond53, i32 %cond375, i32 0, i32 -1, %struct.pix_pos* %block_b) #5
  %brmerge368 = or i1 %7, %6
  br i1 %brmerge368, label %if.then100, label %if.end118

if.then100:                                       ; preds = %if.else
  %available101 = getelementptr inbounds %struct.pix_pos* %block_a, i64 0, i32 0
  %24 = load i32* %available101, align 4, !tbaa !0
  %tobool102 = icmp eq i32 %24, 0
  br i1 %tobool102, label %if.end108, label %if.then103

if.then103:                                       ; preds = %if.then100
  %y104 = getelementptr inbounds %struct.pix_pos* %block_a, i64 0, i32 3
  %25 = load i32* %y104, align 4, !tbaa !0
  %mul105 = shl i32 %25, 1
  %x106 = getelementptr inbounds %struct.pix_pos* %block_a, i64 0, i32 2
  %26 = load i32* %x106, align 4, !tbaa !0
  %add107 = add nsw i32 %mul105, %26
  br label %if.end108

if.end108:                                        ; preds = %if.then100, %if.then103
  %bit_pos_a.1 = phi i32 [ %add107, %if.then103 ], [ 0, %if.then100 ]
  %available109 = getelementptr inbounds %struct.pix_pos* %block_b, i64 0, i32 0
  %27 = load i32* %available109, align 4, !tbaa !0
  %tobool110 = icmp eq i32 %27, 0
  br i1 %tobool110, label %if.end118, label %if.then111

if.then111:                                       ; preds = %if.end108
  %y112 = getelementptr inbounds %struct.pix_pos* %block_b, i64 0, i32 3
  %28 = load i32* %y112, align 4, !tbaa !0
  %mul113 = shl i32 %28, 1
  %x114 = getelementptr inbounds %struct.pix_pos* %block_b, i64 0, i32 2
  %29 = load i32* %x114, align 4, !tbaa !0
  %add115 = add nsw i32 %mul113, %29
  br label %if.end118

if.end118:                                        ; preds = %if.else, %if.end, %if.end108, %if.then111, %if.then, %if.then88
  %bit_pos_a.2 = phi i32 [ %bit_pos_a.0, %if.then88 ], [ %bit_pos_a.0, %if.end ], [ 0, %if.then ], [ %bit_pos_a.1, %if.then111 ], [ %bit_pos_a.1, %if.end108 ], [ 0, %if.else ]
  %bit_pos_b.0 = phi i32 [ %add92, %if.then88 ], [ 0, %if.end ], [ 0, %if.then ], [ %add115, %if.then111 ], [ 0, %if.end108 ], [ 0, %if.else ]
  br i1 %cmp7, label %cond.end151, label %cond.false121

cond.false121:                                    ; preds = %if.end118
  br i1 %0, label %cond.true123, label %cond.false127

cond.true123:                                     ; preds = %cond.false121
  %mul124 = shl nsw i32 %cond375, 2
  %add125360 = or i32 %mul124, 1
  %add126 = add nsw i32 %add125360, %cond53
  br label %cond.end151

cond.false127:                                    ; preds = %cond.false121
  %brmerge369 = or i1 %5, %8
  %.mux = select i1 %5, i32 17, i32 18
  br i1 %brmerge369, label %cond.end151, label %cond.false133

cond.false133:                                    ; preds = %cond.false127
  %mul136 = shl nsw i32 %cond375, 1
  br i1 %7, label %cond.true135, label %cond.false139

cond.true135:                                     ; preds = %cond.false133
  %add137 = add nsw i32 %mul136, 19
  %add138 = add nsw i32 %add137, %cond53
  br label %cond.end151

cond.false139:                                    ; preds = %cond.false133
  %add141 = add nsw i32 %mul136, 23
  %add142 = add nsw i32 %add141, %cond53
  br label %cond.end151

cond.end151:                                      ; preds = %cond.false127, %cond.true123, %cond.false139, %cond.true135, %if.end118
  %cond152 = phi i32 [ 0, %if.end118 ], [ %add126, %cond.true123 ], [ %.mux, %cond.false127 ], [ %add138, %cond.true135 ], [ %add142, %cond.false139 ]
  %tobool153 = icmp eq i32 %cbp_bit, 0
  br i1 %tobool153, label %if.end208, label %if.then154

if.then154:                                       ; preds = %cond.end151
  switch i32 %type, label %if.else187 [
    i32 2, label %if.then157
    i32 3, label %if.then177
  ]

if.then157:                                       ; preds = %if.then154
  %shl = shl i32 1, %cond152
  %cbp_bits = getelementptr inbounds %struct.macroblock* %currMB, i64 0, i32 16
  %30 = load i64* %cbp_bits, align 8, !tbaa !5
  %add159 = add nsw i32 %cond152, 1
  %shl160 = shl i32 1, %add159
  %add164 = add nsw i32 %cond152, 4
  %shl165 = shl i32 1, %add164
  %add169 = add nsw i32 %cond152, 5
  %shl170 = shl i32 1, %add169
  %or379 = or i32 %shl160, %shl
  %or163380 = or i32 %or379, %shl165
  %or168381 = or i32 %or163380, %shl170
  %or168 = sext i32 %or168381 to i64
  %or173 = or i64 %or168, %30
  store i64 %or173, i64* %cbp_bits, align 8, !tbaa !5
  br label %if.end208

if.then177:                                       ; preds = %if.then154
  %shl178 = shl i32 1, %cond152
  %cbp_bits180 = getelementptr inbounds %struct.macroblock* %currMB, i64 0, i32 16
  %31 = load i64* %cbp_bits180, align 8, !tbaa !5
  %add182 = add nsw i32 %cond152, 1
  %shl183 = shl i32 1, %add182
  %or181378 = or i32 %shl183, %shl178
  %or181 = sext i32 %or181378 to i64
  %or186 = or i64 %or181, %31
  store i64 %or186, i64* %cbp_bits180, align 8, !tbaa !5
  br label %if.end208

if.else187:                                       ; preds = %if.then154
  %shl191 = shl i32 1, %cond152
  %conv192 = sext i32 %shl191 to i64
  %cbp_bits193 = getelementptr inbounds %struct.macroblock* %currMB, i64 0, i32 16
  %32 = load i64* %cbp_bits193, align 8, !tbaa !5
  %or194 = or i64 %32, %conv192
  store i64 %or194, i64* %cbp_bits193, align 8, !tbaa !5
  br i1 %cmp5, label %if.then190, label %if.end208

if.then190:                                       ; preds = %if.else187
  %add195 = add nsw i32 %cond152, 4
  %shl196 = shl i32 1, %add195
  %conv197 = sext i32 %shl196 to i64
  %or199 = or i64 %or194, %conv197
  store i64 %or199, i64* %cbp_bits193, align 8, !tbaa !5
  br label %if.end208

if.end208:                                        ; preds = %cond.end151, %if.then157, %if.then190, %if.else187, %if.then177
  %33 = zext i1 %cmp7 to i32
  %.mux371 = xor i32 %33, 1
  %.mux371.mux = select i1 %brmerge364, i32 %.mux371, i32 17
  %brmerge373 = or i1 %brmerge365, %8
  %.mux371.mux.mux = select i1 %brmerge365, i32 %.mux371.mux, i32 18
  br i1 %brmerge373, label %cond.end229, label %cond.false220

cond.false220:                                    ; preds = %if.end208
  %cond222 = select i1 %7, i32 19, i32 23
  br label %cond.end229

cond.end229:                                      ; preds = %if.end208, %cond.false220
  %cond230 = phi i32 [ %.mux371.mux.mux, %if.end208 ], [ %cond222, %cond.false220 ]
  %cmp231 = icmp eq i32 %type, 2
  br i1 %cmp231, label %if.end287, label %if.then233

if.then233:                                       ; preds = %cond.end229
  %available234 = getelementptr inbounds %struct.pix_pos* %block_b, i64 0, i32 0
  %34 = load i32* %available234, align 4, !tbaa !0
  %tobool235 = icmp eq i32 %34, 0
  br i1 %tobool235, label %if.end252, label %if.then236

if.then236:                                       ; preds = %if.then233
  %mb_addr = getelementptr inbounds %struct.pix_pos* %block_b, i64 0, i32 1
  %35 = load i32* %mb_addr, align 4, !tbaa !0
  %idxprom = sext i32 %35 to i64
  %36 = load %struct.ImageParameters** @img, align 8, !tbaa !3
  %mb_data = getelementptr inbounds %struct.ImageParameters* %36, i64 0, i32 51
  %37 = load %struct.macroblock** %mb_data, align 8, !tbaa !3
  %mb_type = getelementptr inbounds %struct.macroblock* %37, i64 %idxprom, i32 8
  %38 = load i32* %mb_type, align 4, !tbaa !0
  %cmp237 = icmp eq i32 %38, 14
  br i1 %cmp237, label %if.end252, label %if.else240

if.else240:                                       ; preds = %if.then236
  %cbp_bits245 = getelementptr inbounds %struct.macroblock* %37, i64 %idxprom, i32 16
  %39 = load i64* %cbp_bits245, align 8, !tbaa !5
  %add246 = add nsw i32 %cond230, %bit_pos_b.0
  %shl247 = shl i32 1, %add246
  %conv248 = sext i32 %shl247 to i64
  %and = and i64 %39, %conv248
  %sh_prom = zext i32 %add246 to i64
  %shr = lshr i64 %and, %sh_prom
  %conv250 = trunc i64 %shr to i32
  br label %if.end252

if.end252:                                        ; preds = %if.then236, %if.then233, %if.else240
  %upper_bit.0 = phi i32 [ %conv250, %if.else240 ], [ %cond77, %if.then233 ], [ 1, %if.then236 ]
  %available253 = getelementptr inbounds %struct.pix_pos* %block_a, i64 0, i32 0
  %40 = load i32* %available253, align 4, !tbaa !0
  %tobool254 = icmp eq i32 %40, 0
  br i1 %tobool254, label %if.end252.if.end279_crit_edge, label %if.then255

if.end252.if.end279_crit_edge:                    ; preds = %if.end252
  %.pre382 = load %struct.ImageParameters** @img, align 8, !tbaa !3
  br label %if.end279

if.then255:                                       ; preds = %if.end252
  %mb_addr256 = getelementptr inbounds %struct.pix_pos* %block_a, i64 0, i32 1
  %41 = load i32* %mb_addr256, align 4, !tbaa !0
  %idxprom257 = sext i32 %41 to i64
  %42 = load %struct.ImageParameters** @img, align 8, !tbaa !3
  %mb_data258 = getelementptr inbounds %struct.ImageParameters* %42, i64 0, i32 51
  %43 = load %struct.macroblock** %mb_data258, align 8, !tbaa !3
  %mb_type260 = getelementptr inbounds %struct.macroblock* %43, i64 %idxprom257, i32 8
  %44 = load i32* %mb_type260, align 4, !tbaa !0
  %cmp261 = icmp eq i32 %44, 14
  br i1 %cmp261, label %if.end279, label %if.else264

if.else264:                                       ; preds = %if.then255
  %cbp_bits269 = getelementptr inbounds %struct.macroblock* %43, i64 %idxprom257, i32 16
  %45 = load i64* %cbp_bits269, align 8, !tbaa !5
  %add270 = add nsw i32 %cond230, %bit_pos_a.2
  %shl271 = shl i32 1, %add270
  %conv272 = sext i32 %shl271 to i64
  %and273 = and i64 %45, %conv272
  %sh_prom275 = zext i32 %add270 to i64
  %shr276 = lshr i64 %and273, %sh_prom275
  %conv277 = trunc i64 %shr276 to i32
  br label %if.end279

if.end279:                                        ; preds = %if.end252.if.end279_crit_edge, %if.then255, %if.else264
  %46 = phi %struct.ImageParameters* [ %42, %if.else264 ], [ %.pre382, %if.end252.if.end279_crit_edge ], [ %42, %if.then255 ]
  %left_bit.0 = phi i32 [ %conv277, %if.else264 ], [ %cond77, %if.end252.if.end279_crit_edge ], [ 1, %if.then255 ]
  %mul280 = shl i32 %upper_bit.0, 1
  %add281 = add nsw i32 %left_bit.0, %mul280
  %conv282 = trunc i32 %cbp_bit to i16
  %idxprom283 = sext i32 %type to i64
  %arrayidx284 = getelementptr inbounds [10 x i32]* @type2ctx_bcbp, i64 0, i64 %idxprom283
  %47 = load i32* %arrayidx284, align 4, !tbaa !0
  %idxprom285 = sext i32 %47 to i64
  %currentSlice = getelementptr inbounds %struct.ImageParameters* %46, i64 0, i32 50
  %48 = load %struct.Slice** %currentSlice, align 8, !tbaa !3
  %tex_ctx = getelementptr inbounds %struct.Slice* %48, i64 0, i32 8
  %49 = load %struct.TextureInfoContexts** %tex_ctx, align 8, !tbaa !3
  %idx.ext = sext i32 %add281 to i64
  %add.ptr = getelementptr inbounds %struct.TextureInfoContexts* %49, i64 0, i32 3, i64 %idxprom285, i64 %idx.ext
  call void @biari_encode_symbol(%struct.EncodingEnvironment* %eep_dp, i16 signext %conv282, %struct.BiContextType* %add.ptr) #5
  br label %if.end287

if.end287:                                        ; preds = %cond.end229, %if.end279
  ret void
}
