define void @CheckAvailabilityOfNeighborsCABAC() #0 {
  %up = alloca %struct.pix_pos, align 4
  %left = alloca %struct.pix_pos, align 4
  %1 = load %struct.ImageParameters** @img, align 8, !dbg !1000, !tbaa !1001
  %2 = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 3, !dbg !1003
  %3 = load i32* %2, align 4, !dbg !1003, !tbaa !1004
  %4 = sext i32 %3 to i64, !dbg !1008
  %5 = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 51, !dbg !1009
  %6 = load %struct.macroblock** %5, align 8, !dbg !1009, !tbaa !1010
  tail call void @llvm.dbg.value(metadata %struct.pix_pos* %left, i64 0, metadata !197, metadata !1011), !dbg !1012
  call void @getNeighbour(i32 %3, i32 -1, i32 0, i32 1, %struct.pix_pos* %left) #6, !dbg !1013
  %7 = load %struct.ImageParameters** @img, align 8, !dbg !1014, !tbaa !1001
  %8 = getelementptr inbounds %struct.ImageParameters* %7, i64 0, i32 3, !dbg !1015
  %9 = load i32* %8, align 4, !dbg !1015, !tbaa !1004
  call void @llvm.dbg.value(metadata %struct.pix_pos* %up, i64 0, metadata !187, metadata !1011), !dbg !1016
  call void @getNeighbour(i32 %9, i32 0, i32 -1, i32 1, %struct.pix_pos* %up) #6, !dbg !1017
  %10 = getelementptr inbounds %struct.pix_pos* %up, i64 0, i32 0, !dbg !1018
  %11 = load i32* %10, align 4, !dbg !1018, !tbaa !1020
  %12 = icmp eq i32 %11, 0, !dbg !1022
  br i1 %12, label %21, label %13, !dbg !1023

; <label>:13                                      ; preds = %0
  %14 = getelementptr inbounds %struct.pix_pos* %up, i64 0, i32 1, !dbg !1024
  %15 = load i32* %14, align 4, !dbg !1024, !tbaa !1025
  %16 = sext i32 %15 to i64, !dbg !1026
  %17 = load %struct.ImageParameters** @img, align 8, !dbg !1026, !tbaa !1001
  %18 = getelementptr inbounds %struct.ImageParameters* %17, i64 0, i32 51, !dbg !1027
  %19 = load %struct.macroblock** %18, align 8, !dbg !1027, !tbaa !1010
  %20 = getelementptr inbounds %struct.macroblock* %19, i64 %16, !dbg !1026
  br label %21, !dbg !1028

; <label>:21                                      ; preds = %0, %13
  %.sink = phi %struct.macroblock* [ %20, %13 ], [ null, %0 ]
  %22 = getelementptr inbounds %struct.macroblock* %6, i64 %4, i32 6, !dbg !1029
  store %struct.macroblock* %.sink, %struct.macroblock** %22, align 8
  %23 = getelementptr inbounds %struct.pix_pos* %left, i64 0, i32 0, !dbg !1030
  %24 = load i32* %23, align 4, !dbg !1030, !tbaa !1020
  %25 = icmp eq i32 %24, 0, !dbg !1032
  br i1 %25, label %34, label %26, !dbg !1033

; <label>:26                                      ; preds = %21
  %27 = getelementptr inbounds %struct.pix_pos* %left, i64 0, i32 1, !dbg !1034
  %28 = load i32* %27, align 4, !dbg !1034, !tbaa !1025
  %29 = sext i32 %28 to i64, !dbg !1035
  %30 = load %struct.ImageParameters** @img, align 8, !dbg !1035, !tbaa !1001
  %31 = getelementptr inbounds %struct.ImageParameters* %30, i64 0, i32 51, !dbg !1036
  %32 = load %struct.macroblock** %31, align 8, !dbg !1036, !tbaa !1010
  %33 = getelementptr inbounds %struct.macroblock* %32, i64 %29, !dbg !1035
  br label %34, !dbg !1037

; <label>:34                                      ; preds = %21, %26
  %.sink1 = phi %struct.macroblock* [ %33, %26 ], [ null, %21 ]
  %35 = getelementptr inbounds %struct.macroblock* %6, i64 %4, i32 7, !dbg !1038
  store %struct.macroblock* %.sink1, %struct.macroblock** %35, align 8
  ret void, !dbg !1039
}
