define void @writeRunLevel_CABAC(%struct.syntaxelement* nocapture %se, %struct.EncodingEnvironment* %eep_dp) #0 {
entry:
  %0 = load %struct.ImageParameters** @img, align 8, !tbaa !3
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 3
  %1 = load i32* %current_mb_nr, align 4, !tbaa !0
  %idxprom = sext i32 %1 to i64
  %mb_data = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 51
  %2 = load %struct.macroblock** %mb_data, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds %struct.macroblock* %2, i64 %idxprom
  %value1 = getelementptr inbounds %struct.syntaxelement* %se, i64 0, i32 1
  %3 = load i32* %value1, align 4, !tbaa !0
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %for.cond10thread-pre-split, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %value2 = getelementptr inbounds %struct.syntaxelement* %se, i64 0, i32 2
  %4 = load i32* %value2, align 4, !tbaa !0
  %cmp136 = icmp sgt i32 %4, 0
  %.pre38 = load i32* @writeRunLevel_CABAC.pos, align 4, !tbaa !0
  br i1 %cmp136, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %5 = phi i32 [ %inc, %for.body ], [ %.pre38, %for.cond.preheader ]
  %i.037 = phi i32 [ %inc4, %for.body ], [ 0, %for.cond.preheader ]
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* @writeRunLevel_CABAC.pos, align 4, !tbaa !0
  %idxprom2 = sext i32 %5 to i64
  %arrayidx3 = getelementptr inbounds [64 x i32]* @writeRunLevel_CABAC.coeff, i64 0, i64 %idxprom2
  store i32 0, i32* %arrayidx3, align 4, !tbaa !0
  %inc4 = add nsw i32 %i.037, 1
  %6 = load i32* %value2, align 4, !tbaa !0
  %cmp1 = icmp slt i32 %inc4, %6
  br i1 %cmp1, label %for.body, label %for.cond.for.end_crit_edge

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %.pre = load i32* %value1, align 4, !tbaa !0
  br label %for.end

for.end:                                          ; preds = %for.cond.preheader, %for.cond.for.end_crit_edge
  %7 = phi i32 [ %inc, %for.cond.for.end_crit_edge ], [ %.pre38, %for.cond.preheader ]
  %8 = phi i32 [ %.pre, %for.cond.for.end_crit_edge ], [ %3, %for.cond.preheader ]
  %inc6 = add nsw i32 %7, 1
  store i32 %inc6, i32* @writeRunLevel_CABAC.pos, align 4, !tbaa !0
  %idxprom7 = sext i32 %7 to i64
  %arrayidx8 = getelementptr inbounds [64 x i32]* @writeRunLevel_CABAC.coeff, i64 0, i64 %idxprom7
  store i32 %8, i32* %arrayidx8, align 4, !tbaa !0
  %9 = load i32* @writeRunLevel_CABAC.coeff_ctr, align 4, !tbaa !0
  %inc9 = add nsw i32 %9, 1
  store i32 %inc9, i32* @writeRunLevel_CABAC.coeff_ctr, align 4, !tbaa !0
  br label %return

for.cond10thread-pre-split:                       ; preds = %entry
  %.pr = load i32* @writeRunLevel_CABAC.pos, align 4, !tbaa !0
  %cmp1134 = icmp slt i32 %.pr, 64
  br i1 %cmp1134, label %for.body12.lr.ph, label %if.end

for.body12.lr.ph:                                 ; preds = %for.cond10thread-pre-split
  %10 = add i32 %.pr, 1
  %11 = icmp sgt i32 %10, 64
  br label %for.body12

for.body12:                                       ; preds = %for.body12.lr.ph, %for.body12
  %inc1635 = phi i32 [ %.pr, %for.body12.lr.ph ], [ %inc16, %for.body12 ]
  %idxprom13 = sext i32 %inc1635 to i64
  %arrayidx14 = getelementptr inbounds [64 x i32]* @writeRunLevel_CABAC.coeff, i64 0, i64 %idxprom13
  store i32 0, i32* %arrayidx14, align 4, !tbaa !0
  %inc16 = add nsw i32 %inc1635, 1
  %cmp11 = icmp slt i32 %inc16, 64
  br i1 %cmp11, label %for.body12, label %for.cond10.if.end_crit_edge

for.cond10.if.end_crit_edge:                      ; preds = %for.body12
  %smax = select i1 %11, i32 %10, i32 64
  store i32 %smax, i32* @writeRunLevel_CABAC.pos, align 4, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %for.cond10.if.end_crit_edge, %for.cond10thread-pre-split
  %context = getelementptr inbounds %struct.syntaxelement* %se, i64 0, i32 6
  %12 = load i32* %context, align 4, !tbaa !0
  %13 = load i32* @writeRunLevel_CABAC.coeff_ctr, align 4, !tbaa !0
  %cmp18 = icmp sgt i32 %13, 0
  %cond = zext i1 %cmp18 to i32
  tail call void @write_and_store_CBP_block_bit(%struct.macroblock* %arrayidx, %struct.EncodingEnvironment* %eep_dp, i32 %12, i32 %cond) #7
  %14 = load i32* @writeRunLevel_CABAC.coeff_ctr, align 4, !tbaa !0
  %cmp19 = icmp sgt i32 %14, 0
  br i1 %cmp19, label %if.then20, label %if.end23

if.then20:                                        ; preds = %if.end
  %15 = load i32* %context, align 4, !tbaa !0
  tail call void @write_significance_map(%struct.macroblock* %arrayidx, %struct.EncodingEnvironment* %eep_dp, i32 %15, i32* getelementptr inbounds ([64 x i32]* @writeRunLevel_CABAC.coeff, i64 0, i64 0), i32 %14) #7
  %16 = load i32* %context, align 4, !tbaa !0
  tail call void @write_significant_coefficients(%struct.macroblock* undef, %struct.EncodingEnvironment* %eep_dp, i32 %16, i32* getelementptr inbounds ([64 x i32]* @writeRunLevel_CABAC.coeff, i64 0, i64 0)) #7
  br label %if.end23

if.end23:                                         ; preds = %if.then20, %if.end
  store i32 0, i32* @writeRunLevel_CABAC.coeff_ctr, align 4, !tbaa !0
  store i32 0, i32* @writeRunLevel_CABAC.pos, align 4, !tbaa !0
  br label %return

return:                                           ; preds = %if.end23, %for.end
  ret void
}
