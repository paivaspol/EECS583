define void @exp_golomb_encode_eq_prob(%struct.EncodingEnvironment* %eep_dp, i32 %symbol, i32 %k) #0 {
entry:
  %shl16 = shl i32 1, %k
  %cmp17 = icmp ugt i32 %shl16, %symbol
  br i1 %cmp17, label %if.else, label %if.then

if.then:                                          ; preds = %entry, %if.then
  %shl20 = phi i32 [ %shl, %if.then ], [ %shl16, %entry ]
  %k.addr.019 = phi i32 [ %inc, %if.then ], [ %k, %entry ]
  %symbol.addr.018 = phi i32 [ %sub, %if.then ], [ %symbol, %entry ]
  tail call void @biari_encode_symbol_eq_prob(%struct.EncodingEnvironment* %eep_dp, i16 signext 1) #5
  %sub = sub i32 %symbol.addr.018, %shl20
  %inc = add nsw i32 %k.addr.019, 1
  %shl = shl i32 1, %inc
  %cmp = icmp ult i32 %sub, %shl
  br i1 %cmp, label %if.else, label %if.then

if.else:                                          ; preds = %if.then, %entry
  %k.addr.0.lcssa = phi i32 [ %k, %entry ], [ %inc, %if.then ]
  %symbol.addr.0.lcssa = phi i32 [ %symbol, %entry ], [ %sub, %if.then ]
  tail call void @biari_encode_symbol_eq_prob(%struct.EncodingEnvironment* %eep_dp, i16 signext 0) #5
  %tobool14 = icmp eq i32 %k.addr.0.lcssa, 0
  br i1 %tobool14, label %while.end5, label %while.body3

while.body3:                                      ; preds = %if.else, %while.body3
  %dec15.in = phi i32 [ %dec15, %while.body3 ], [ %k.addr.0.lcssa, %if.else ]
  %dec15 = add nsw i32 %dec15.in, -1
  %shr = lshr i32 %symbol.addr.0.lcssa, %dec15
  %shr.tr = trunc i32 %shr to i16
  %conv = and i16 %shr.tr, 1
  tail call void @biari_encode_symbol_eq_prob(%struct.EncodingEnvironment* %eep_dp, i16 signext %conv) #5
  %tobool = icmp eq i32 %dec15, 0
  br i1 %tobool, label %while.end5, label %while.body3

while.end5:                                       ; preds = %while.body3, %if.else
  ret void
}
