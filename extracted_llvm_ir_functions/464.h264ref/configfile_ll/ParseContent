define internal fastcc void @ParseContent(i8* %buf, i32 %bufsize) #2 {
entry:
  %items = alloca [10000 x i8*], align 16
  %IntContent = alloca i32, align 4
  %DoubleContent = alloca double, align 8
  %0 = bitcast [10000 x i8*]* %items to i8*
  call void @llvm.lifetime.start(i64 80000, i8* %0) #3
  %idxprom = sext i32 %bufsize to i64
  %arrayidx = getelementptr inbounds i8* %buf, i64 %idxprom
  %cmp154167173 = icmp sgt i32 %bufsize, 0
  br i1 %cmp154167173, label %while.body.lr.ph.lr.ph, label %for.end

while.body.lr.ph.lr.ph:                           ; preds = %entry, %while.cond.outer.backedge
  %item.0.ph177 = phi i32 [ %item.0.ph.be, %while.cond.outer.backedge ], [ 0, %entry ]
  %p.0.ph176 = phi i8* [ %p.0.ph.be, %while.cond.outer.backedge ], [ %buf, %entry ]
  %InItem.0.ph175 = phi i32 [ %InItem.0.ph.be, %while.cond.outer.backedge ], [ 0, %entry ]
  %InString.0.ph174 = phi i32 [ %InString.0.ph.be, %while.cond.outer.backedge ], [ 0, %entry ]
  %tobool = icmp eq i32 %InString.0.ph174, 0
  br label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %while.body.lr.ph.lr.ph, %if.end30
  %item.0.ph148170 = phi i32 [ %item.0.ph177, %while.body.lr.ph.lr.ph ], [ %item.2, %if.end30 ]
  %p.0.ph147169 = phi i8* [ %p.0.ph176, %while.body.lr.ph.lr.ph ], [ %incdec.ptr31, %if.end30 ]
  %InItem.0.ph146168 = phi i32 [ %InItem.0.ph175, %while.body.lr.ph.lr.ph ], [ %InItem.2, %if.end30 ]
  br label %while.body

while.body:                                       ; preds = %while.cond.backedge, %while.body.lr.ph
  %p.0155 = phi i8* [ %p.0.ph147169, %while.body.lr.ph ], [ %p.0.be, %while.cond.backedge ]
  %1 = load i8* %p.0155, align 1, !tbaa !1
  %conv = sext i8 %1 to i32
  switch i32 %conv, label %sw.default [
    i32 13, label %sw.bb
    i32 35, label %sw.bb1
    i32 10, label %sw.bb10
    i32 32, label %sw.bb12
    i32 9, label %sw.bb12
    i32 34, label %sw.bb15
  ]

sw.bb:                                            ; preds = %while.body
  %incdec.ptr = getelementptr inbounds i8* %p.0155, i64 1
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %sw.bb, %sw.bb12
  %p.0.be = phi i8* [ %incdec.ptr13, %sw.bb12 ], [ %incdec.ptr, %sw.bb ]
  %cmp = icmp ult i8* %p.0.be, %arrayidx
  br i1 %cmp, label %while.body, label %while.end32

sw.bb1:                                           ; preds = %while.body
  store i8 0, i8* %p.0155, align 1, !tbaa !1
  br label %while.cond2

while.cond2:                                      ; preds = %while.cond2.while.cond2_crit_edge, %sw.bb1
  %2 = phi i1 [ true, %sw.bb1 ], [ %phitmp, %while.cond2.while.cond2_crit_edge ]
  %p.1 = phi i8* [ %p.0155, %sw.bb1 ], [ %incdec.ptr9, %while.cond2.while.cond2_crit_edge ]
  %cmp6 = icmp ult i8* %p.1, %arrayidx
  %or.cond = and i1 %2, %cmp6
  %incdec.ptr9 = getelementptr inbounds i8* %p.1, i64 1
  br i1 %or.cond, label %while.cond2.while.cond2_crit_edge, label %while.cond.outer.backedge

while.cond2.while.cond2_crit_edge:                ; preds = %while.cond2
  %.pre = load i8* %incdec.ptr9, align 1, !tbaa !1
  %phitmp = icmp ne i8 %.pre, 10
  br label %while.cond2

sw.bb10:                                          ; preds = %while.body
  %incdec.ptr11 = getelementptr inbounds i8* %p.0155, i64 1
  store i8 0, i8* %p.0155, align 1, !tbaa !1
  br label %while.cond.outer.backedge

sw.bb12:                                          ; preds = %while.body, %while.body
  %incdec.ptr13 = getelementptr inbounds i8* %p.0155, i64 1
  br i1 %tobool, label %if.else, label %while.cond.backedge

if.else:                                          ; preds = %sw.bb12
  store i8 0, i8* %p.0155, align 1, !tbaa !1
  br label %while.cond.outer.backedge

sw.bb15:                                          ; preds = %while.body
  %incdec.ptr16 = getelementptr inbounds i8* %p.0155, i64 1
  store i8 0, i8* %p.0155, align 1, !tbaa !1
  br i1 %tobool, label %if.then18, label %if.end22

if.then18:                                        ; preds = %sw.bb15
  %inc = add nsw i32 %item.0.ph148170, 1
  %idxprom19 = sext i32 %item.0.ph148170 to i64
  %arrayidx20 = getelementptr inbounds [10000 x i8*]* %items, i64 0, i64 %idxprom19
  store i8* %incdec.ptr16, i8** %arrayidx20, align 8, !tbaa !0
  %neg = xor i32 %InItem.0.ph146168, -1
  br label %if.end22

if.end22:                                         ; preds = %sw.bb15, %if.then18
  %InItem.1 = phi i32 [ %neg, %if.then18 ], [ 0, %sw.bb15 ]
  %item.1 = phi i32 [ %inc, %if.then18 ], [ %item.0.ph148170, %sw.bb15 ]
  %neg23 = xor i32 %InString.0.ph174, -1
  br label %while.cond.outer.backedge

while.cond.outer.backedge:                        ; preds = %while.cond2, %if.end22, %if.else, %sw.bb10
  %InString.0.ph.be = phi i32 [ %neg23, %if.end22 ], [ 0, %if.else ], [ 0, %sw.bb10 ], [ 0, %while.cond2 ]
  %InItem.0.ph.be = phi i32 [ %InItem.1, %if.end22 ], [ 0, %if.else ], [ 0, %sw.bb10 ], [ 0, %while.cond2 ]
  %p.0.ph.be = phi i8* [ %incdec.ptr16, %if.end22 ], [ %incdec.ptr13, %if.else ], [ %incdec.ptr11, %sw.bb10 ], [ %p.1, %while.cond2 ]
  %item.0.ph.be = phi i32 [ %item.1, %if.end22 ], [ %item.0.ph148170, %if.else ], [ %item.0.ph148170, %sw.bb10 ], [ %item.0.ph148170, %while.cond2 ]
  %cmp154167 = icmp ult i8* %p.0.ph.be, %arrayidx
  br i1 %cmp154167, label %while.body.lr.ph.lr.ph, label %while.end32

sw.default:                                       ; preds = %while.body
  %tobool24 = icmp eq i32 %InItem.0.ph146168, 0
  br i1 %tobool24, label %if.then25, label %if.end30

if.then25:                                        ; preds = %sw.default
  %inc26 = add nsw i32 %item.0.ph148170, 1
  %idxprom27 = sext i32 %item.0.ph148170 to i64
  %arrayidx28 = getelementptr inbounds [10000 x i8*]* %items, i64 0, i64 %idxprom27
  store i8* %p.0155, i8** %arrayidx28, align 8, !tbaa !0
  br label %if.end30

if.end30:                                         ; preds = %sw.default, %if.then25
  %InItem.2 = phi i32 [ %InItem.0.ph146168, %sw.default ], [ -1, %if.then25 ]
  %item.2 = phi i32 [ %item.0.ph148170, %sw.default ], [ %inc26, %if.then25 ]
  %incdec.ptr31 = getelementptr inbounds i8* %p.0155, i64 1
  %cmp154 = icmp ult i8* %incdec.ptr31, %arrayidx
  br i1 %cmp154, label %while.body.lr.ph, label %while.end32

while.end32:                                      ; preds = %if.end30, %while.cond.outer.backedge, %while.cond.backedge
  %item.0.ph148166 = phi i32 [ %item.0.ph148170, %while.cond.backedge ], [ %item.2, %if.end30 ], [ %item.0.ph.be, %while.cond.outer.backedge ]
  %dec = add nsw i32 %item.0.ph148166, -1
  %cmp33143 = icmp sgt i32 %dec, 0
  br i1 %cmp33143, label %for.body, label %for.end

for.body:                                         ; preds = %for.inc, %while.end32
  %indvars.iv = phi i64 [ 0, %while.end32 ], [ %indvars.iv.next, %for.inc ]
  %arrayidx36 = getelementptr inbounds [10000 x i8*]* %items, i64 0, i64 %indvars.iv
  %3 = load i8** %arrayidx36, align 8, !tbaa !0
  %4 = load i8** getelementptr inbounds ([151 x %struct.Mapping]* @Map, i64 0, i64 0, i32 0), align 16, !tbaa !0
  %cmp7.i = icmp eq i8* %4, null
  br i1 %cmp7.i, label %if.then39, label %while.body.i

while.cond.i:                                     ; preds = %while.body.i
  %inc.i = add nsw i32 %i.08.i, 1
  %TokenName.i = getelementptr inbounds [151 x %struct.Mapping]* @Map, i64 0, i64 %indvars.iv.next.i, i32 0
  %5 = load i8** %TokenName.i, align 8, !tbaa !0
  %cmp.i = icmp eq i8* %5, null
  br i1 %cmp.i, label %if.then39, label %while.body.i

while.body.i:                                     ; preds = %for.body, %while.cond.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %while.cond.i ], [ 0, %for.body ]
  %6 = phi i8* [ %5, %while.cond.i ], [ %4, %for.body ]
  %i.08.i = phi i32 [ %inc.i, %while.cond.i ], [ 0, %for.body ]
  %call.i = call i32 @strcmp(i8* %6, i8* %3) #9
  %cmp4.i = icmp eq i32 %call.i, 0
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  br i1 %cmp4.i, label %ParameterNameToMapIndex.exit, label %while.cond.i

ParameterNameToMapIndex.exit:                     ; preds = %while.body.i
  %cmp37 = icmp slt i32 %i.08.i, 0
  br i1 %cmp37, label %if.then39, label %if.end43

if.then39:                                        ; preds = %while.cond.i, %for.body, %ParameterNameToMapIndex.exit
  %retval.0.i141 = phi i32 [ %i.08.i, %ParameterNameToMapIndex.exit ], [ -1, %for.body ], [ -1, %while.cond.i ]
  %call42 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* getelementptr inbounds ([300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([67 x i8]* @.str226, i64 0, i64 0), i8* %3) #11
  call void @error(i8* getelementptr inbounds ([300 x i8]* @errortext, i64 0, i64 0), i32 300) #11
  br label %if.end43

if.end43:                                         ; preds = %if.then39, %ParameterNameToMapIndex.exit
  %retval.0.i140 = phi i32 [ %retval.0.i141, %if.then39 ], [ %i.08.i, %ParameterNameToMapIndex.exit ]
  %7 = add nsw i64 %indvars.iv, 1
  %arrayidx45 = getelementptr inbounds [10000 x i8*]* %items, i64 0, i64 %7
  %8 = load i8** %arrayidx45, align 8, !tbaa !0
  %call46 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8]* @.str227, i64 0, i64 0), i8* %8) #9
  %tobool47 = icmp eq i32 %call46, 0
  br i1 %tobool47, label %if.end50, label %if.then48

if.then48:                                        ; preds = %if.end43
  %call49 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* getelementptr inbounds ([300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([78 x i8]* @.str228, i64 0, i64 0)) #11
  call void @error(i8* getelementptr inbounds ([300 x i8]* @errortext, i64 0, i64 0), i32 300) #11
  br label %if.end50

if.end50:                                         ; preds = %if.end43, %if.then48
  %idxprom51 = sext i32 %retval.0.i140 to i64
  %Type = getelementptr inbounds [151 x %struct.Mapping]* @Map, i64 0, i64 %idxprom51, i32 2
  %9 = load i32* %Type, align 8, !tbaa !3
  switch i32 %9, label %for.inc [
    i32 0, label %sw.bb53
    i32 1, label %sw.bb71
    i32 2, label %sw.bb80
  ]

sw.bb53:                                          ; preds = %if.end50
  %10 = add nsw i64 %indvars.iv, 2
  %arrayidx56 = getelementptr inbounds [10000 x i8*]* %items, i64 0, i64 %10
  %11 = load i8** %arrayidx56, align 8, !tbaa !0
  %call57 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %11, i8* getelementptr inbounds ([3 x i8]* @.str178, i64 0, i64 0), i32* %IntContent) #11
  %cmp58 = icmp eq i32 %call57, 1
  br i1 %cmp58, label %if.end67, label %if.then60

if.then60:                                        ; preds = %sw.bb53
  %call66 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* getelementptr inbounds ([300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([74 x i8]* @.str229, i64 0, i64 0), i8* %3, i8* %11) #11
  call void @error(i8* getelementptr inbounds ([300 x i8]* @errortext, i64 0, i64 0), i32 300) #11
  br label %if.end67

if.end67:                                         ; preds = %sw.bb53, %if.then60
  %12 = load i32* %IntContent, align 4, !tbaa !3
  %Place = getelementptr inbounds [151 x %struct.Mapping]* @Map, i64 0, i64 %idxprom51, i32 1
  %13 = load i8** %Place, align 8, !tbaa !0
  %14 = bitcast i8* %13 to i32*
  store i32 %12, i32* %14, align 4, !tbaa !3
  %putchar138 = call i32 @putchar(i32 46) #3
  br label %for.inc

sw.bb71:                                          ; preds = %if.end50
  %Place74 = getelementptr inbounds [151 x %struct.Mapping]* @Map, i64 0, i64 %idxprom51, i32 1
  %15 = load i8** %Place74, align 8, !tbaa !0
  %16 = add nsw i64 %indvars.iv, 2
  %arrayidx77 = getelementptr inbounds [10000 x i8*]* %items, i64 0, i64 %16
  %17 = load i8** %arrayidx77, align 8, !tbaa !0
  %call78 = call i8* @strncpy(i8* %15, i8* %17, i64 200) #11
  %putchar137 = call i32 @putchar(i32 46) #3
  br label %for.inc

sw.bb80:                                          ; preds = %if.end50
  %18 = add nsw i64 %indvars.iv, 2
  %arrayidx83 = getelementptr inbounds [10000 x i8*]* %items, i64 0, i64 %18
  %19 = load i8** %arrayidx83, align 8, !tbaa !0
  %call84 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %19, i8* getelementptr inbounds ([4 x i8]* @.str231, i64 0, i64 0), double* %DoubleContent) #11
  %cmp85 = icmp eq i32 %call84, 1
  br i1 %cmp85, label %if.end94, label %if.then87

if.then87:                                        ; preds = %sw.bb80
  %call93 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* getelementptr inbounds ([300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([74 x i8]* @.str229, i64 0, i64 0), i8* %3, i8* %19) #11
  call void @error(i8* getelementptr inbounds ([300 x i8]* @errortext, i64 0, i64 0), i32 300) #11
  br label %if.end94

if.end94:                                         ; preds = %sw.bb80, %if.then87
  %20 = load double* %DoubleContent, align 8, !tbaa !4
  %Place97 = getelementptr inbounds [151 x %struct.Mapping]* @Map, i64 0, i64 %idxprom51, i32 1
  %21 = load i8** %Place97, align 8, !tbaa !0
  %22 = bitcast i8* %21 to double*
  store double %20, double* %22, align 8, !tbaa !4
  %putchar = call i32 @putchar(i32 46) #3
  br label %for.inc

for.inc:                                          ; preds = %if.end67, %sw.bb71, %if.end94, %if.end50
  %indvars.iv.next = add i64 %indvars.iv, 3
  %23 = trunc i64 %indvars.iv.next to i32
  %cmp33 = icmp slt i32 %23, %dec
  br i1 %cmp33, label %for.body, label %for.end

for.end:                                          ; preds = %entry, %for.inc, %while.end32
  %24 = load %struct.InputParameters** @input, align 8, !tbaa !0
  %25 = bitcast %struct.InputParameters* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* bitcast (%struct.InputParameters* @configinput to i8*), i64 3592, i32 8, i1 false)
  call void @llvm.lifetime.end(i64 80000, i8* %0) #3
  ret void
}
