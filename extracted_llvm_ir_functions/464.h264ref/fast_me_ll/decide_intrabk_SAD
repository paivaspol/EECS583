define void @decide_intrabk_SAD() #0 {
entry:
  %0 = load %struct.ImageParameters** @img, align 8, !tbaa !3
  %type = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 6
  %1 = load i32* %type, align 4, !tbaa !4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.end34, label %if.then

if.then:                                          ; preds = %entry
  %pix_x = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 33
  %2 = load i32* %pix_x, align 4, !tbaa !4
  %cmp1 = icmp eq i32 %2, 0
  %pix_y = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 34
  %3 = load i32* %pix_y, align 4, !tbaa !4
  %cmp2 = icmp eq i32 %3, 0
  br i1 %cmp1, label %land.lhs.true, label %if.else8

land.lhs.true:                                    ; preds = %if.then
  br i1 %cmp2, label %if.then3, label %if.then6

if.then3:                                         ; preds = %land.lhs.true
  store i32 0, i32* @flag_intra_SAD, align 4, !tbaa !4
  br label %if.end34

if.then6:                                         ; preds = %land.lhs.true
  %4 = load i32** @flag_intra, align 8, !tbaa !3
  %5 = load i32* %4, align 4, !tbaa !4
  store i32 %5, i32* @flag_intra_SAD, align 4, !tbaa !4
  br label %if.end34

if.else8:                                         ; preds = %if.then
  %shr13 = ashr i32 %2, 4
  br i1 %cmp2, label %if.then11, label %if.else16

if.then11:                                        ; preds = %if.else8
  %sub = add nsw i32 %shr13, -1
  %idxprom14 = sext i32 %sub to i64
  %6 = load i32** @flag_intra, align 8, !tbaa !3
  %arrayidx15 = getelementptr inbounds i32* %6, i64 %idxprom14
  %7 = load i32* %arrayidx15, align 4, !tbaa !4
  store i32 %7, i32* @flag_intra_SAD, align 4, !tbaa !4
  br label %if.end34

if.else16:                                        ; preds = %if.else8
  %idxprom19 = sext i32 %shr13 to i64
  %8 = load i32** @flag_intra, align 8, !tbaa !3
  %arrayidx20 = getelementptr inbounds i32* %8, i64 %idxprom19
  %9 = load i32* %arrayidx20, align 4, !tbaa !4
  %tobool = icmp eq i32 %9, 0
  br i1 %tobool, label %lor.lhs.false, label %lor.end

lor.lhs.false:                                    ; preds = %if.else16
  %sub23 = add nsw i32 %shr13, -1
  %idxprom24 = sext i32 %sub23 to i64
  %arrayidx25 = getelementptr inbounds i32* %8, i64 %idxprom24
  %10 = load i32* %arrayidx25, align 4, !tbaa !4
  %tobool26 = icmp eq i32 %10, 0
  br i1 %tobool26, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %lor.lhs.false
  %add = add nsw i32 %shr13, 1
  %idxprom29 = sext i32 %add to i64
  %arrayidx30 = getelementptr inbounds i32* %8, i64 %idxprom29
  %11 = load i32* %arrayidx30, align 4, !tbaa !4
  %tobool31 = icmp ne i32 %11, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.lhs.false, %if.else16, %lor.rhs
  %12 = phi i1 [ true, %lor.lhs.false ], [ true, %if.else16 ], [ %tobool31, %lor.rhs ]
  %lor.ext = zext i1 %12 to i32
  store i32 %lor.ext, i32* @flag_intra_SAD, align 4, !tbaa !4
  br label %if.end34

if.end34:                                         ; preds = %entry, %if.then3, %if.then11, %lor.end, %if.then6
  ret void
}
