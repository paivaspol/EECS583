define i32 @get_mem_FME() #0 {
entry:
  tail call void @llvm.dbg.value(metadata !26, i64 0, metadata !66), !dbg !958
  %0 = load %struct.ImageParameters** @img, align 8, !dbg !959, !tbaa !895
  %width = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 13, !dbg !959
  %1 = load i32* %width, align 4, !dbg !959, !tbaa !896
  %shr = ashr i32 %1, 4, !dbg !959
  %add = add nsw i32 %shr, 1, !dbg !959
  %conv = sext i32 %add to i64, !dbg !959
  %call = tail call noalias i8* @calloc(i64 %conv, i64 4) #6, !dbg !959
  %2 = bitcast i8* %call to i32*, !dbg !959
  store i32* %2, i32** @flag_intra, align 8, !dbg !959, !tbaa !895
  %cmp = icmp eq i8* %call, null, !dbg !959
  br i1 %cmp, label %if.then, label %if.end, !dbg !959

if.then:                                          ; preds = %entry
  tail call void @no_mem_exit(i8* getelementptr inbounds ([24 x i8]* @.str1, i64 0, i64 0)) #6, !dbg !959
  br label %if.end, !dbg !959

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.InputParameters** @input, align 8, !dbg !960, !tbaa !895
  %search_range = getelementptr inbounds %struct.InputParameters* %3, i64 0, i32 8, !dbg !960
  %4 = load i32* %search_range, align 4, !dbg !960, !tbaa !896
  %mul = shl nsw i32 %4, 1, !dbg !960
  %add218 = or i32 %mul, 1, !dbg !960
  %call6 = tail call i32 @get_mem2Dint(i32*** @McostState, i32 %add218, i32 %add218) #6, !dbg !960
  tail call void @llvm.dbg.value(metadata !{i32 %call6}, i64 0, metadata !66), !dbg !960
  %call8 = tail call i32 @get_mem_mincost(i32****** @all_mincost) #5, !dbg !961
  %add9 = add nsw i32 %call8, %call6, !dbg !961
  tail call void @llvm.dbg.value(metadata !{i32 %add9}, i64 0, metadata !66), !dbg !961
  %call10 = tail call i32 @get_mem_bwmincost(i32****** @all_bwmincost) #5, !dbg !962
  %add11 = add nsw i32 %add9, %call10, !dbg !962
  tail call void @llvm.dbg.value(metadata !{i32 %add11}, i64 0, metadata !66), !dbg !962
  %call12 = tail call i32 @get_mem2D(i8*** @SearchState, i32 7, i32 7) #6, !dbg !963
  %add13 = add nsw i32 %add11, %call12, !dbg !963
  tail call void @llvm.dbg.value(metadata !{i32 %add13}, i64 0, metadata !66), !dbg !963
  ret i32 %add13, !dbg !964
}
