define i32 @RBSPtoNALU(i8* nocapture %rbsp, %struct.NALU_t* nocapture %nalu, i32 %rbsp_size, i32 %nal_unit_type, i32 %nal_reference_idc, i32 %min_num_bytes, i32 %UseAnnexbLongStartcode) #0 {
entry:
  %forbidden_bit = getelementptr inbounds %struct.NALU_t* %nalu, i64 0, i32 5
  store i32 0, i32* %forbidden_bit, align 4, !tbaa !0
  %nal_reference_idc1 = getelementptr inbounds %struct.NALU_t* %nalu, i64 0, i32 4
  store i32 %nal_reference_idc, i32* %nal_reference_idc1, align 4, !tbaa !0
  %nal_unit_type2 = getelementptr inbounds %struct.NALU_t* %nalu, i64 0, i32 3
  store i32 %nal_unit_type, i32* %nal_unit_type2, align 4, !tbaa !0
  %tobool = icmp ne i32 %UseAnnexbLongStartcode, 0
  %cond = select i1 %tobool, i32 4, i32 3
  %startcodeprefix_len = getelementptr inbounds %struct.NALU_t* %nalu, i64 0, i32 0
  store i32 %cond, i32* %startcodeprefix_len, align 4, !tbaa !0
  %shl5 = shl i32 %nal_reference_idc, 5
  %or7 = or i32 %shl5, %nal_unit_type
  %conv = trunc i32 %or7 to i8
  %buf = getelementptr inbounds %struct.NALU_t* %nalu, i64 0, i32 6
  %0 = load i8** %buf, align 8, !tbaa !3
  store i8 %conv, i8* %0, align 1, !tbaa !1
  %1 = load i8** %buf, align 8, !tbaa !3
  %arrayidx9 = getelementptr inbounds i8* %1, i64 1
  %conv10 = sext i32 %rbsp_size to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx9, i8* %rbsp, i64 %conv10, i32 1, i1 false)
  %2 = load i8** %buf, align 8, !tbaa !3
  %arrayidx12 = getelementptr inbounds i8* %2, i64 1
  %call = tail call i32 @RBSPtoEBSP(i8* %arrayidx12, i32 0, i32 %rbsp_size, i32 %min_num_bytes) #3
  %add = add nsw i32 %call, 1
  %len13 = getelementptr inbounds %struct.NALU_t* %nalu, i64 0, i32 1
  store i32 %add, i32* %len13, align 4, !tbaa !0
  ret i32 %add
}
