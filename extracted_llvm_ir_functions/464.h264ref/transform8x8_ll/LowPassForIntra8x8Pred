define void @LowPassForIntra8x8Pred(i32* %PredPel, i32 %block_up_left, i32 %block_up, i32 %block_left) #0 {
entry:
  %PredPel230 = bitcast i32* %PredPel to i8*
  %LoopArray = alloca [25 x i32], align 16
  %0 = bitcast [25 x i32]* %LoopArray to i8*
  call void @llvm.dbg.value(metadata !{i32* %PredPel}, i64 0, metadata !170), !dbg !1680
  call void @llvm.dbg.value(metadata !{i32 %block_up_left}, i64 0, metadata !171), !dbg !1680
  call void @llvm.dbg.value(metadata !{i32 %block_up}, i64 0, metadata !172), !dbg !1680
  call void @llvm.dbg.value(metadata !{i32 %block_left}, i64 0, metadata !173), !dbg !1680
  call void @llvm.lifetime.start(i64 100, i8* %0) #3, !dbg !1681
  call void @llvm.dbg.declare(metadata !{[25 x i32]* %LoopArray}, metadata !175), !dbg !1681
  call void @llvm.dbg.value(metadata !49, i64 0, metadata !174), !dbg !1682
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %PredPel230, i64 100, i32 4, i1 false), !dbg !1684
  %tobool = icmp ne i32 %block_up, 0, !dbg !1685
  br i1 %tobool, label %if.then, label %if.end58, !dbg !1685

if.then:                                          ; preds = %entry
  %tobool3 = icmp eq i32 %block_up_left, 0, !dbg !1686
  br i1 %tobool3, label %if.else, label %if.then4, !dbg !1686

if.then4:                                         ; preds = %if.then
  %1 = load i32* %PredPel, align 4, !dbg !1688, !tbaa !853
  %arrayidx8 = getelementptr inbounds i32* %PredPel, i64 1, !dbg !1688
  %2 = load i32* %arrayidx8, align 4, !dbg !1688, !tbaa !853
  %shl = shl i32 %2, 1, !dbg !1688
  %arrayidx10 = getelementptr inbounds i32* %PredPel, i64 2, !dbg !1688
  %3 = load i32* %arrayidx10, align 4, !dbg !1688, !tbaa !853
  %add = add i32 %1, 2, !dbg !1688
  %add11 = add i32 %add, %shl, !dbg !1688
  %add12 = add i32 %add11, %3, !dbg !1688
  %shr = ashr i32 %add12, 2, !dbg !1688
  %arrayidx13 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 1, !dbg !1688
  store i32 %shr, i32* %arrayidx13, align 4, !dbg !1688, !tbaa !853
  br label %for.body28, !dbg !1690

if.else:                                          ; preds = %if.then
  %arrayidx15 = getelementptr inbounds i32* %PredPel, i64 1, !dbg !1691
  %4 = load i32* %arrayidx15, align 4, !dbg !1691, !tbaa !853
  %add19 = mul i32 %4, 3, !dbg !1691
  %arrayidx21 = getelementptr inbounds i32* %PredPel, i64 2, !dbg !1691
  %5 = load i32* %arrayidx21, align 4, !dbg !1691, !tbaa !853
  %add22 = add i32 %5, 2, !dbg !1691
  %add23 = add i32 %add22, %add19, !dbg !1691
  %shr24 = ashr i32 %add23, 2, !dbg !1691
  %arrayidx25 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 1, !dbg !1691
  store i32 %shr24, i32* %arrayidx25, align 4, !dbg !1691, !tbaa !853
  br label %for.body28

for.body28:                                       ; preds = %if.then4, %if.else, %for.body28
  %6 = phi i32 [ %8, %for.body28 ], [ %5, %if.else ], [ %3, %if.then4 ], !dbg !1692
  %7 = phi i32 [ %6, %for.body28 ], [ %4, %if.else ], [ %2, %if.then4 ], !dbg !1692
  %indvars.iv232 = phi i64 [ %indvars.iv.next233, %for.body28 ], [ 2, %if.else ], [ 2, %if.then4 ]
  %shl35 = shl i32 %6, 1, !dbg !1692
  %indvars.iv.next233 = add i64 %indvars.iv232, 1, !dbg !1695
  %arrayidx40 = getelementptr inbounds i32* %PredPel, i64 %indvars.iv.next233, !dbg !1692
  %8 = load i32* %arrayidx40, align 4, !dbg !1692, !tbaa !853
  %add36 = add i32 %7, 2, !dbg !1692
  %add41 = add i32 %add36, %shl35, !dbg !1692
  %add42 = add i32 %add41, %8, !dbg !1692
  %shr43 = ashr i32 %add42, 2, !dbg !1692
  %arrayidx45 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 %indvars.iv232, !dbg !1692
  store i32 %shr43, i32* %arrayidx45, align 4, !dbg !1692, !tbaa !853
  %lftr.wideiv235 = trunc i64 %indvars.iv.next233 to i32, !dbg !1695
  %exitcond236 = icmp eq i32 %lftr.wideiv235, 16, !dbg !1695
  br i1 %exitcond236, label %for.end48, label %for.body28, !dbg !1695

for.end48:                                        ; preds = %for.body28
  %arrayidx49 = getelementptr inbounds i32* %PredPel, i64 16, !dbg !1696
  %9 = load i32* %arrayidx49, align 4, !dbg !1696, !tbaa !853
  %add52 = mul i32 %9, 3, !dbg !1696
  %arrayidx53 = getelementptr inbounds i32* %PredPel, i64 15, !dbg !1696
  %10 = load i32* %arrayidx53, align 4, !dbg !1696, !tbaa !853
  %add54 = add i32 %10, 2, !dbg !1696
  %add55 = add i32 %add54, %add52, !dbg !1696
  %shr56 = ashr i32 %add55, 2, !dbg !1696
  %arrayidx57 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 16, !dbg !1696
  store i32 %shr56, i32* %arrayidx57, align 16, !dbg !1696, !tbaa !853
  br label %if.end58, !dbg !1697

if.end58:                                         ; preds = %for.end48, %entry
  %tobool59 = icmp ne i32 %block_up_left, 0, !dbg !1698
  br i1 %tobool59, label %if.then60, label %if.end100, !dbg !1698

if.then60:                                        ; preds = %if.end58
  %tobool.not = xor i1 %tobool, true, !dbg !1699
  %tobool62 = icmp eq i32 %block_left, 0, !dbg !1699
  %or.cond = or i1 %tobool62, %tobool.not, !dbg !1699
  br i1 %or.cond, label %if.else73, label %if.then63, !dbg !1699

if.then63:                                        ; preds = %if.then60
  %arrayidx64 = getelementptr inbounds i32* %PredPel, i64 17, !dbg !1701
  %11 = load i32* %arrayidx64, align 4, !dbg !1701, !tbaa !853
  %12 = load i32* %PredPel, align 4, !dbg !1701, !tbaa !853
  %shl66 = shl i32 %12, 1, !dbg !1701
  %arrayidx68 = getelementptr inbounds i32* %PredPel, i64 1, !dbg !1701
  %13 = load i32* %arrayidx68, align 4, !dbg !1701, !tbaa !853
  %add67 = add i32 %11, 2, !dbg !1701
  %add69 = add i32 %add67, %shl66, !dbg !1701
  %add70 = add i32 %add69, %13, !dbg !1701
  %shr71 = ashr i32 %add70, 2, !dbg !1701
  %arrayidx72 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 0, !dbg !1701
  store i32 %shr71, i32* %arrayidx72, align 16, !dbg !1701, !tbaa !853
  br label %if.end100, !dbg !1703

if.else73:                                        ; preds = %if.then60
  br i1 %tobool, label %if.then75, label %if.else85, !dbg !1704

if.then75:                                        ; preds = %if.else73
  %14 = load i32* %PredPel, align 4, !dbg !1706, !tbaa !853
  %add79 = mul i32 %14, 3, !dbg !1706
  %arrayidx80 = getelementptr inbounds i32* %PredPel, i64 1, !dbg !1706
  %15 = load i32* %arrayidx80, align 4, !dbg !1706, !tbaa !853
  %add81 = add i32 %15, 2, !dbg !1706
  %add82 = add i32 %add81, %add79, !dbg !1706
  %shr83 = ashr i32 %add82, 2, !dbg !1706
  %arrayidx84 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 0, !dbg !1706
  store i32 %shr83, i32* %arrayidx84, align 16, !dbg !1706, !tbaa !853
  br label %if.end100, !dbg !1706

if.else85:                                        ; preds = %if.else73
  br i1 %tobool62, label %for.cond159.preheader, label %if.then87, !dbg !1707

if.then87:                                        ; preds = %if.else85
  %16 = load i32* %PredPel, align 4, !dbg !1708, !tbaa !853
  %add91 = mul i32 %16, 3, !dbg !1708
  %arrayidx92 = getelementptr inbounds i32* %PredPel, i64 17, !dbg !1708
  %17 = load i32* %arrayidx92, align 4, !dbg !1708, !tbaa !853
  %add93 = add i32 %17, 2, !dbg !1708
  %add94 = add i32 %add93, %add91, !dbg !1708
  %shr95 = ashr i32 %add94, 2, !dbg !1708
  %arrayidx96 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 0, !dbg !1708
  store i32 %shr95, i32* %arrayidx96, align 16, !dbg !1708, !tbaa !853
  br label %if.end100, !dbg !1708

if.end100:                                        ; preds = %if.then63, %if.then87, %if.then75, %if.end58
  %tobool101 = icmp eq i32 %block_left, 0, !dbg !1709
  br i1 %tobool101, label %for.cond159.preheader, label %if.then102, !dbg !1709

if.then102:                                       ; preds = %if.end100
  br i1 %tobool59, label %if.then104, label %if.else114, !dbg !1710

if.then104:                                       ; preds = %if.then102
  %18 = load i32* %PredPel, align 4, !dbg !1712, !tbaa !853
  %arrayidx106 = getelementptr inbounds i32* %PredPel, i64 17, !dbg !1712
  %19 = load i32* %arrayidx106, align 4, !dbg !1712, !tbaa !853
  %shl107 = shl i32 %19, 1, !dbg !1712
  %arrayidx109 = getelementptr inbounds i32* %PredPel, i64 18, !dbg !1712
  %20 = load i32* %arrayidx109, align 4, !dbg !1712, !tbaa !853
  %add108 = add i32 %18, 2, !dbg !1712
  %add110 = add i32 %add108, %shl107, !dbg !1712
  %add111 = add i32 %add110, %20, !dbg !1712
  %shr112 = ashr i32 %add111, 2, !dbg !1712
  %arrayidx113 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 17, !dbg !1712
  store i32 %shr112, i32* %arrayidx113, align 4, !dbg !1712, !tbaa !853
  br label %for.body127, !dbg !1712

if.else114:                                       ; preds = %if.then102
  %arrayidx115 = getelementptr inbounds i32* %PredPel, i64 17, !dbg !1713
  %21 = load i32* %arrayidx115, align 4, !dbg !1713, !tbaa !853
  %add118 = mul i32 %21, 3, !dbg !1713
  %arrayidx119 = getelementptr inbounds i32* %PredPel, i64 18, !dbg !1713
  %22 = load i32* %arrayidx119, align 4, !dbg !1713, !tbaa !853
  %add120 = add i32 %22, 2, !dbg !1713
  %add121 = add i32 %add120, %add118, !dbg !1713
  %shr122 = ashr i32 %add121, 2, !dbg !1713
  %arrayidx123 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 17, !dbg !1713
  store i32 %shr122, i32* %arrayidx123, align 4, !dbg !1713, !tbaa !853
  br label %for.body127

for.body127:                                      ; preds = %if.then104, %if.else114, %for.body127
  %23 = phi i32 [ %25, %for.body127 ], [ %22, %if.else114 ], [ %20, %if.then104 ], !dbg !1714
  %24 = phi i32 [ %23, %for.body127 ], [ %21, %if.else114 ], [ %19, %if.then104 ], !dbg !1714
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body127 ], [ 18, %if.else114 ], [ 18, %if.then104 ]
  %shl135 = shl i32 %23, 1, !dbg !1714
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1717
  %arrayidx140 = getelementptr inbounds i32* %PredPel, i64 %indvars.iv.next, !dbg !1714
  %25 = load i32* %arrayidx140, align 4, !dbg !1714, !tbaa !853
  %add136 = add i32 %24, 2, !dbg !1714
  %add141 = add i32 %add136, %shl135, !dbg !1714
  %add142 = add i32 %add141, %25, !dbg !1714
  %shr143 = ashr i32 %add142, 2, !dbg !1714
  %arrayidx145 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 %indvars.iv, !dbg !1714
  store i32 %shr143, i32* %arrayidx145, align 4, !dbg !1714, !tbaa !853
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !1717
  %exitcond = icmp eq i32 %lftr.wideiv, 24, !dbg !1717
  br i1 %exitcond, label %for.end148, label %for.body127, !dbg !1717

for.end148:                                       ; preds = %for.body127
  %arrayidx149 = getelementptr inbounds i32* %PredPel, i64 23, !dbg !1718
  %26 = load i32* %arrayidx149, align 4, !dbg !1718, !tbaa !853
  %arrayidx150 = getelementptr inbounds i32* %PredPel, i64 24, !dbg !1718
  %27 = load i32* %arrayidx150, align 4, !dbg !1718, !tbaa !853
  %shl151 = shl i32 %27, 1, !dbg !1718
  %add152 = add i32 %26, 2, !dbg !1718
  %add154 = add i32 %add152, %27, !dbg !1718
  %add155 = add i32 %add154, %shl151, !dbg !1718
  %shr156 = ashr i32 %add155, 2, !dbg !1718
  %arrayidx157 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 24, !dbg !1718
  store i32 %shr156, i32* %arrayidx157, align 16, !dbg !1718, !tbaa !853
  br label %for.cond159.preheader, !dbg !1719

for.cond159.preheader:                            ; preds = %if.end100, %for.end148, %if.else85
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %PredPel230, i8* %0, i64 100, i32 4, i1 false), !dbg !1720
  call void @llvm.lifetime.end(i64 100, i8* %0) #3, !dbg !1722
  ret void, !dbg !1722
}
