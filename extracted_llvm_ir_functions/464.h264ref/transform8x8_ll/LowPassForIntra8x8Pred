define void @LowPassForIntra8x8Pred(i32* %PredPel, i32 %block_up_left, i32 %block_up, i32 %block_left) #0 {
  %PredPel9 = bitcast i32* %PredPel to i8*
  %LoopArray = alloca [25 x i32], align 16
  %1 = bitcast [25 x i32]* %LoopArray to i8*
  tail call void @llvm.dbg.value(metadata i32* %PredPel, i64 0, metadata !165, metadata !862), !dbg !4142
  tail call void @llvm.dbg.value(metadata i32 %block_up_left, i64 0, metadata !166, metadata !862), !dbg !4143
  tail call void @llvm.dbg.value(metadata i32 %block_up, i64 0, metadata !167, metadata !862), !dbg !4144
  tail call void @llvm.dbg.value(metadata i32 %block_left, i64 0, metadata !168, metadata !862), !dbg !4145
  call void @llvm.lifetime.start(i64 100, i8* %1) #3, !dbg !4146
  tail call void @llvm.dbg.declare(metadata [25 x i32]* %LoopArray, metadata !170, metadata !862), !dbg !4147
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !169, metadata !862), !dbg !4148
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %PredPel9, i64 100, i32 4, i1 false), !dbg !4149
  %2 = icmp ne i32 %block_up, 0, !dbg !4152
  br i1 %2, label %3, label %41, !dbg !4154

; <label>:3                                       ; preds = %0
  %4 = icmp eq i32 %block_up_left, 0, !dbg !4155
  %5 = getelementptr inbounds i32* %PredPel, i64 1
  %6 = load i32* %5, align 4
  %7 = getelementptr inbounds i32* %PredPel, i64 2
  %8 = load i32* %7, align 4
  br i1 %4, label %15, label %9, !dbg !4158

; <label>:9                                       ; preds = %3
  %10 = load i32* %PredPel, align 4, !dbg !4159, !tbaa !871
  %11 = shl i32 %6, 1, !dbg !4161
  %12 = add i32 %10, 2, !dbg !4162
  %13 = add i32 %12, %11, !dbg !4163
  %14 = add i32 %13, %8, !dbg !4164
  br label %.preheader4, !dbg !4165

; <label>:15                                      ; preds = %3
  %16 = mul i32 %6, 3, !dbg !4166
  %17 = add i32 %8, 2, !dbg !4167
  %18 = add i32 %17, %16, !dbg !4168
  br label %.preheader4

.preheader4:                                      ; preds = %15, %9
  %.sink.in = phi i32 [ %18, %15 ], [ %14, %9 ]
  %.sink = ashr i32 %.sink.in, 2, !dbg !4169
  %19 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 1, !dbg !4170
  store i32 %.sink, i32* %19, align 4
  br label %20, !dbg !4171

; <label>:20                                      ; preds = %20, %.preheader4
  %21 = phi i32 [ %8, %.preheader4 ], [ %25, %20 ], !dbg !4173
  %22 = phi i32 [ %6, %.preheader4 ], [ %21, %20 ], !dbg !4173
  %indvars.iv10 = phi i64 [ 2, %.preheader4 ], [ %indvars.iv.next11, %20 ]
  %23 = shl i32 %21, 1, !dbg !4176
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1, !dbg !4171
  %24 = getelementptr inbounds i32* %PredPel, i64 %indvars.iv.next11, !dbg !4177
  %25 = load i32* %24, align 4, !dbg !4177, !tbaa !871
  %26 = add i32 %22, 2, !dbg !4178
  %27 = add i32 %26, %23, !dbg !4179
  %28 = add i32 %27, %25, !dbg !4180
  %29 = ashr i32 %28, 2, !dbg !4181
  %30 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 %indvars.iv10, !dbg !4182
  store i32 %29, i32* %30, align 4, !dbg !4183, !tbaa !871
  %exitcond12 = icmp eq i64 %indvars.iv.next11, 16, !dbg !4171
  br i1 %exitcond12, label %31, label %20, !dbg !4171

; <label>:31                                      ; preds = %20
  %32 = getelementptr inbounds i32* %PredPel, i64 16, !dbg !4184
  %33 = load i32* %32, align 4, !dbg !4184, !tbaa !871
  %34 = mul i32 %33, 3, !dbg !4185
  %35 = getelementptr inbounds i32* %PredPel, i64 15, !dbg !4186
  %36 = load i32* %35, align 4, !dbg !4186, !tbaa !871
  %37 = add i32 %36, 2, !dbg !4187
  %38 = add i32 %37, %34, !dbg !4188
  %39 = ashr i32 %38, 2, !dbg !4189
  %40 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 16, !dbg !4190
  store i32 %39, i32* %40, align 16, !dbg !4191, !tbaa !871
  br label %41, !dbg !4192

; <label>:41                                      ; preds = %31, %0
  %42 = icmp ne i32 %block_up_left, 0, !dbg !4193
  br i1 %42, label %43, label %76, !dbg !4195

; <label>:43                                      ; preds = %41
  %44 = icmp ne i32 %block_left, 0, !dbg !4196
  %or.cond = and i1 %2, %44, !dbg !4199
  br i1 %or.cond, label %45, label %57, !dbg !4199

; <label>:45                                      ; preds = %43
  %46 = getelementptr inbounds i32* %PredPel, i64 17, !dbg !4200
  %47 = load i32* %46, align 4, !dbg !4200, !tbaa !871
  %48 = load i32* %PredPel, align 4, !dbg !4202, !tbaa !871
  %49 = shl i32 %48, 1, !dbg !4203
  %50 = getelementptr inbounds i32* %PredPel, i64 1, !dbg !4204
  %51 = load i32* %50, align 4, !dbg !4204, !tbaa !871
  %52 = add i32 %47, 2, !dbg !4205
  %53 = add i32 %52, %49, !dbg !4206
  %54 = add i32 %53, %51, !dbg !4207
  %55 = ashr i32 %54, 2, !dbg !4208
  %56 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 0, !dbg !4209
  store i32 %55, i32* %56, align 16, !dbg !4210, !tbaa !871
  br label %76, !dbg !4211

; <label>:57                                      ; preds = %43
  br i1 %2, label %58, label %67, !dbg !4212

; <label>:58                                      ; preds = %57
  %59 = load i32* %PredPel, align 4, !dbg !4214, !tbaa !871
  %60 = mul i32 %59, 3, !dbg !4216
  %61 = getelementptr inbounds i32* %PredPel, i64 1, !dbg !4217
  %62 = load i32* %61, align 4, !dbg !4217, !tbaa !871
  %63 = add i32 %62, 2, !dbg !4218
  %64 = add i32 %63, %60, !dbg !4219
  %65 = ashr i32 %64, 2, !dbg !4220
  %66 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 0, !dbg !4221
  store i32 %65, i32* %66, align 16, !dbg !4222, !tbaa !871
  br label %76, !dbg !4221

; <label>:67                                      ; preds = %57
  br i1 %44, label %.thread3, label %.thread.preheader, !dbg !4223

.thread3:                                         ; preds = %67
  %68 = load i32* %PredPel, align 4, !dbg !4224, !tbaa !871
  %69 = mul i32 %68, 3, !dbg !4226
  %70 = getelementptr inbounds i32* %PredPel, i64 17, !dbg !4227
  %71 = load i32* %70, align 4, !dbg !4227, !tbaa !871
  %72 = add i32 %71, 2, !dbg !4228
  %73 = add i32 %72, %69, !dbg !4229
  %74 = ashr i32 %73, 2, !dbg !4230
  %75 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 0, !dbg !4231
  store i32 %74, i32* %75, align 16, !dbg !4232, !tbaa !871
  br label %79, !dbg !4233

; <label>:76                                      ; preds = %45, %58, %41
  %77 = icmp eq i32 %block_left, 0, !dbg !4236
  br i1 %77, label %.thread.preheader, label %78, !dbg !4237

; <label>:78                                      ; preds = %76
  br i1 %42, label %._crit_edge, label %90, !dbg !4233

._crit_edge:                                      ; preds = %78
  %.pre = load i32* %PredPel, align 4, !dbg !4238, !tbaa !871
  %.phi.trans.insert = getelementptr inbounds i32* %PredPel, i64 17
  %.pre16 = load i32* %.phi.trans.insert, align 4, !dbg !4240, !tbaa !871
  br label %79, !dbg !4233

; <label>:79                                      ; preds = %._crit_edge, %.thread3
  %80 = phi i32 [ %.pre16, %._crit_edge ], [ %71, %.thread3 ]
  %81 = phi i32 [ %.pre, %._crit_edge ], [ %68, %.thread3 ]
  %82 = shl i32 %80, 1, !dbg !4241
  %83 = getelementptr inbounds i32* %PredPel, i64 18, !dbg !4242
  %84 = load i32* %83, align 4, !dbg !4242, !tbaa !871
  %85 = add i32 %81, 2, !dbg !4243
  %86 = add i32 %85, %82, !dbg !4244
  %87 = add i32 %86, %84, !dbg !4245
  %88 = ashr i32 %87, 2, !dbg !4246
  %89 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 17, !dbg !4247
  store i32 %88, i32* %89, align 4, !dbg !4248, !tbaa !871
  br label %.preheader, !dbg !4247

; <label>:90                                      ; preds = %78
  %91 = getelementptr inbounds i32* %PredPel, i64 17, !dbg !4249
  %92 = load i32* %91, align 4, !dbg !4249, !tbaa !871
  %93 = mul i32 %92, 3, !dbg !4250
  %94 = getelementptr inbounds i32* %PredPel, i64 18, !dbg !4251
  %95 = load i32* %94, align 4, !dbg !4251, !tbaa !871
  %96 = add i32 %95, 2, !dbg !4252
  %97 = add i32 %96, %93, !dbg !4253
  %98 = ashr i32 %97, 2, !dbg !4254
  %99 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 17, !dbg !4255
  store i32 %98, i32* %99, align 4, !dbg !4256, !tbaa !871
  br label %.preheader

.preheader:                                       ; preds = %79, %90, %.preheader
  %100 = phi i32 [ %104, %.preheader ], [ %84, %79 ], [ %95, %90 ], !dbg !4257
  %101 = phi i32 [ %100, %.preheader ], [ %80, %79 ], [ %92, %90 ], !dbg !4257
  %indvars.iv = phi i64 [ %indvars.iv.next, %.preheader ], [ 18, %79 ], [ 18, %90 ]
  %102 = shl i32 %100, 1, !dbg !4261
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4262
  %103 = getelementptr inbounds i32* %PredPel, i64 %indvars.iv.next, !dbg !4263
  %104 = load i32* %103, align 4, !dbg !4263, !tbaa !871
  %105 = add i32 %101, 2, !dbg !4264
  %106 = add i32 %105, %102, !dbg !4265
  %107 = add i32 %106, %104, !dbg !4266
  %108 = ashr i32 %107, 2, !dbg !4267
  %109 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 %indvars.iv, !dbg !4268
  store i32 %108, i32* %109, align 4, !dbg !4269, !tbaa !871
  %exitcond = icmp eq i64 %indvars.iv.next, 24, !dbg !4262
  br i1 %exitcond, label %110, label %.preheader, !dbg !4262

; <label>:110                                     ; preds = %.preheader
  %111 = getelementptr inbounds i32* %PredPel, i64 23, !dbg !4270
  %112 = load i32* %111, align 4, !dbg !4270, !tbaa !871
  %113 = getelementptr inbounds i32* %PredPel, i64 24, !dbg !4271
  %114 = load i32* %113, align 4, !dbg !4271, !tbaa !871
  %115 = shl i32 %114, 1, !dbg !4272
  %116 = add i32 %112, 2, !dbg !4273
  %117 = add i32 %116, %114, !dbg !4274
  %118 = add i32 %117, %115, !dbg !4275
  %119 = ashr i32 %118, 2, !dbg !4276
  %120 = getelementptr inbounds [25 x i32]* %LoopArray, i64 0, i64 24, !dbg !4277
  store i32 %119, i32* %120, align 16, !dbg !4278, !tbaa !871
  br label %.thread.preheader, !dbg !4279

.thread.preheader:                                ; preds = %76, %110, %67
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %PredPel9, i8* %1, i64 100, i32 4, i1 false), !dbg !4280
  call void @llvm.lifetime.end(i64 100, i8* %1) #3, !dbg !4283
  ret void, !dbg !4283
}
