define void @Sort(i64 %NumberLeakyBuckets, i64* nocapture %Rmin) #0 {
entry:
  %sub = add i64 %NumberLeakyBuckets, -1
  %cmp29 = icmp eq i64 %sub, 0
  br i1 %cmp29, label %for.end12, label %for.body

for.cond.loopexit:                                ; preds = %for.inc, %for.body
  %exitcond31 = icmp eq i64 %add, %sub
  br i1 %exitcond31, label %for.end12, label %for.body

for.body:                                         ; preds = %entry, %for.cond.loopexit
  %i.030 = phi i64 [ %add, %for.cond.loopexit ], [ 0, %entry ]
  %add = add i64 %i.030, 1
  %cmp227 = icmp ult i64 %add, %NumberLeakyBuckets
  br i1 %cmp227, label %for.body3.lr.ph, label %for.cond.loopexit

for.body3.lr.ph:                                  ; preds = %for.body
  %arrayidx = getelementptr inbounds i64* %Rmin, i64 %i.030
  br label %for.body3

for.body3:                                        ; preds = %for.inc, %for.body3.lr.ph
  %j.028 = phi i64 [ %add, %for.body3.lr.ph ], [ %inc, %for.inc ]
  %0 = load i64* %arrayidx, align 8, !tbaa !3
  %arrayidx4 = getelementptr inbounds i64* %Rmin, i64 %j.028
  %1 = load i64* %arrayidx4, align 8, !tbaa !3
  %cmp5 = icmp ugt i64 %0, %1
  br i1 %cmp5, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body3
  store i64 %1, i64* %arrayidx, align 8, !tbaa !3
  store i64 %0, i64* %arrayidx4, align 8, !tbaa !3
  br label %for.inc

for.inc:                                          ; preds = %for.body3, %if.then
  %inc = add i64 %j.028, 1
  %exitcond = icmp eq i64 %inc, %NumberLeakyBuckets
  br i1 %exitcond, label %for.cond.loopexit, label %for.body3

for.end12:                                        ; preds = %for.cond.loopexit, %entry
  ret void
}
