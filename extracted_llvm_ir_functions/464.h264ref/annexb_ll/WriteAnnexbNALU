define i32 @WriteAnnexbNALU(%struct.NALU_t* %n) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.NALU_t* %n}, i64 0, metadata !32), !dbg !575
  tail call void @llvm.dbg.value(metadata !8, i64 0, metadata !33), !dbg !576
  %cmp = icmp eq %struct.NALU_t* %n, null, !dbg !577
  br i1 %cmp, label %cond.false, label %cond.end, !dbg !577

cond.false:                                       ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str1, i64 0, i64 0), i32 38, i8* getelementptr inbounds ([30 x i8]* @__PRETTY_FUNCTION__.WriteAnnexbNALU, i64 0, i64 0)) #5, !dbg !577
  unreachable, !dbg !577

cond.end:                                         ; preds = %entry
  %forbidden_bit = getelementptr inbounds %struct.NALU_t* %n, i64 0, i32 5, !dbg !578
  %0 = load i32* %forbidden_bit, align 4, !dbg !578, !tbaa !579
  %cmp1 = icmp eq i32 %0, 0, !dbg !578
  br i1 %cmp1, label %cond.end4, label %cond.false3, !dbg !578

cond.false3:                                      ; preds = %cond.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([22 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str1, i64 0, i64 0), i32 39, i8* getelementptr inbounds ([30 x i8]* @__PRETTY_FUNCTION__.WriteAnnexbNALU, i64 0, i64 0)) #5, !dbg !578
  unreachable, !dbg !578

cond.end4:                                        ; preds = %cond.end
  %1 = load %struct._IO_FILE** @f, align 8, !dbg !582, !tbaa !583
  %cmp5 = icmp eq %struct._IO_FILE* %1, null, !dbg !582
  br i1 %cmp5, label %cond.false7, label %cond.end8, !dbg !582

cond.false7:                                      ; preds = %cond.end4
  tail call void @__assert_fail(i8* getelementptr inbounds ([16 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str1, i64 0, i64 0), i32 40, i8* getelementptr inbounds ([30 x i8]* @__PRETTY_FUNCTION__.WriteAnnexbNALU, i64 0, i64 0)) #5, !dbg !582
  unreachable, !dbg !582

cond.end8:                                        ; preds = %cond.end4
  %startcodeprefix_len = getelementptr inbounds %struct.NALU_t* %n, i64 0, i32 0, !dbg !584
  %2 = load i32* %startcodeprefix_len, align 4, !dbg !584, !tbaa !579
  %.off = add i32 %2, -3, !dbg !584
  %switch = icmp ult i32 %.off, 2, !dbg !584
  br i1 %switch, label %cond.end14, label %cond.false13, !dbg !584

cond.false13:                                     ; preds = %cond.end8
  tail call void @__assert_fail(i8* getelementptr inbounds ([59 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str1, i64 0, i64 0), i32 41, i8* getelementptr inbounds ([30 x i8]* @__PRETTY_FUNCTION__.WriteAnnexbNALU, i64 0, i64 0)) #5, !dbg !584
  unreachable, !dbg !584

cond.end14:                                       ; preds = %cond.end8
  %cmp16 = icmp sgt i32 %2, 3, !dbg !585
  br i1 %cmp16, label %if.then, label %if.end, !dbg !585

if.then:                                          ; preds = %cond.end14
  %call = tail call i32 @_IO_putc(i32 0, %struct._IO_FILE* %1) #6, !dbg !586
  tail call void @llvm.dbg.value(metadata !588, i64 0, metadata !33), !dbg !589
  %.pre = load %struct._IO_FILE** @f, align 8, !dbg !590, !tbaa !583
  br label %if.end, !dbg !591

if.end:                                           ; preds = %if.then, %cond.end14
  %3 = phi %struct._IO_FILE* [ %.pre, %if.then ], [ %1, %cond.end14 ]
  %BitsWritten.0 = phi i32 [ 32, %if.then ], [ 24, %cond.end14 ]
  %call17 = tail call i32 @_IO_putc(i32 0, %struct._IO_FILE* %3) #6, !dbg !590
  %4 = load %struct._IO_FILE** @f, align 8, !dbg !592, !tbaa !583
  %call18 = tail call i32 @_IO_putc(i32 0, %struct._IO_FILE* %4) #6, !dbg !592
  %5 = load %struct._IO_FILE** @f, align 8, !dbg !593, !tbaa !583
  %call19 = tail call i32 @_IO_putc(i32 1, %struct._IO_FILE* %5) #6, !dbg !593
  tail call void @llvm.dbg.value(metadata !{i32 %BitsWritten.0}, i64 0, metadata !33), !dbg !594
  %6 = load i32* %forbidden_bit, align 4, !dbg !595, !tbaa !579
  %shl = shl i32 %6, 7, !dbg !595
  %nal_reference_idc = getelementptr inbounds %struct.NALU_t* %n, i64 0, i32 4, !dbg !595
  %7 = load i32* %nal_reference_idc, align 4, !dbg !595, !tbaa !579
  %shl21 = shl i32 %7, 5, !dbg !595
  %or = or i32 %shl21, %shl, !dbg !595
  %nal_unit_type = getelementptr inbounds %struct.NALU_t* %n, i64 0, i32 3, !dbg !595
  %8 = load i32* %nal_unit_type, align 4, !dbg !595, !tbaa !579
  %or22 = or i32 %or, %8, !dbg !595
  %conv = trunc i32 %or22 to i8, !dbg !595
  %buf = getelementptr inbounds %struct.NALU_t* %n, i64 0, i32 6, !dbg !595
  %9 = load i8** %buf, align 8, !dbg !595, !tbaa !583
  store i8 %conv, i8* %9, align 1, !dbg !595, !tbaa !580
  %len = getelementptr inbounds %struct.NALU_t* %n, i64 0, i32 1, !dbg !596
  %10 = load i32* %len, align 4, !dbg !596, !tbaa !579
  %conv23 = zext i32 %10 to i64, !dbg !596
  %11 = load i8** %buf, align 8, !dbg !596, !tbaa !583
  %12 = load %struct._IO_FILE** @f, align 8, !dbg !596, !tbaa !583
  %call27 = tail call i64 @fwrite(i8* %11, i64 1, i64 %conv23, %struct._IO_FILE* %12) #6, !dbg !596
  %cmp28 = icmp eq i64 %conv23, %call27, !dbg !596
  %13 = load i32* %len, align 4, !dbg !597, !tbaa !579
  br i1 %cmp28, label %if.end33, label %if.then30, !dbg !596

if.then30:                                        ; preds = %if.end
  %call32 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([59 x i8]* @.str5, i64 0, i64 0), i32 %13) #6, !dbg !597
  tail call void @exit(i32 -1) #5, !dbg !599
  unreachable, !dbg !599

if.end33:                                         ; preds = %if.end
  %mul = shl i32 %13, 3, !dbg !600
  %add35 = add i32 %mul, %BitsWritten.0, !dbg !600
  tail call void @llvm.dbg.value(metadata !{i32 %add35}, i64 0, metadata !33), !dbg !600
  %14 = load %struct._IO_FILE** @f, align 8, !dbg !601, !tbaa !583
  %call36 = tail call i32 @fflush(%struct._IO_FILE* %14) #6, !dbg !601
  ret i32 %add35, !dbg !602
}
