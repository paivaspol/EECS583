define i16* @UMVLine16Y_11(i16* readonly %Pic, i32 %y, i32 %x, i32 %height, i32 %width) #0 {
  tail call void @llvm.dbg.value(metadata i16* %Pic, i64 0, metadata !42, metadata !635), !dbg !670
  tail call void @llvm.dbg.value(metadata i32 %y, i64 0, metadata !43, metadata !635), !dbg !671
  tail call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !44, metadata !635), !dbg !672
  tail call void @llvm.dbg.value(metadata i32 %height, i64 0, metadata !45, metadata !635), !dbg !673
  tail call void @llvm.dbg.value(metadata i32 %width, i64 0, metadata !46, metadata !635), !dbg !674
  %1 = add nsw i32 %height, -1, !dbg !675
  %2 = icmp sle i32 %height, %y, !dbg !675
  %.y = select i1 %2, i32 %1, i32 %y, !dbg !675
  %3 = icmp slt i32 %.y, 0, !dbg !675
  %..y = select i1 %3, i32 0, i32 %.y, !dbg !675
  %4 = mul nsw i32 %..y, %width, !dbg !676
  %5 = sext i32 %4 to i64, !dbg !677
  %6 = getelementptr inbounds i16* %Pic, i64 %5, !dbg !677
  tail call void @llvm.dbg.value(metadata i16* %6, i64 0, metadata !49, metadata !635), !dbg !678
  %7 = icmp slt i32 %x, 0, !dbg !679
  br i1 %7, label %8, label %27, !dbg !681

; <label>:8                                       ; preds = %0
  %9 = add nsw i32 %x, 16, !dbg !682
  %10 = icmp sgt i32 %x, -16, !dbg !682
  %. = select i1 %10, i32 0, i32 %9, !dbg !682
  tail call void @llvm.dbg.value(metadata i32 %., i64 0, metadata !48, metadata !635), !dbg !684
  tail call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !47, metadata !635), !dbg !685
  %11 = icmp sgt i32 %., %x, !dbg !686
  br i1 %11, label %.lr.ph9, label %.preheader, !dbg !689

.lr.ph9:                                          ; preds = %8
  %12 = sext i32 %x to i64
  %13 = icmp slt i32 %x, -16
  %.op = add i32 %x, 15, !dbg !689
  %14 = select i1 %13, i32 %.op, i32 -1, !dbg !689
  br label %17, !dbg !689

.preheader:                                       ; preds = %17, %8
  br i1 %10, label %.lr.ph, label %.loopexit, !dbg !690

.lr.ph:                                           ; preds = %.preheader
  %15 = sext i32 %9 to i64, !dbg !690
  %16 = sext i32 %x to i64, !dbg !690
  br label %21, !dbg !690

; <label>:17                                      ; preds = %17, %.lr.ph9
  %indvars.iv15 = phi i64 [ %12, %.lr.ph9 ], [ %indvars.iv.next16, %17 ]
  %18 = load i16* %6, align 2, !dbg !692, !tbaa !648
  %19 = sub nsw i64 %indvars.iv15, %12, !dbg !693
  %20 = getelementptr inbounds [16 x i16]* @line, i64 0, i64 %19, !dbg !694
  store i16 %18, i16* %20, align 2, !dbg !695, !tbaa !648
  %indvars.iv.next16 = add nsw i64 %indvars.iv15, 1, !dbg !689
  %lftr.wideiv = trunc i64 %indvars.iv15 to i32, !dbg !689
  %exitcond = icmp eq i32 %lftr.wideiv, %14, !dbg !689
  br i1 %exitcond, label %.preheader, label %17, !dbg !689

; <label>:21                                      ; preds = %.lr.ph, %21
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %21 ]
  %.sum3 = add nsw i64 %indvars.iv, %5, !dbg !696
  %22 = getelementptr inbounds i16* %Pic, i64 %.sum3, !dbg !696
  %23 = load i16* %22, align 2, !dbg !696, !tbaa !648
  %24 = sub nsw i64 %indvars.iv, %16, !dbg !698
  %25 = getelementptr inbounds [16 x i16]* @line, i64 0, i64 %24, !dbg !699
  store i16 %23, i16* %25, align 2, !dbg !700, !tbaa !648
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !690
  %26 = icmp slt i64 %indvars.iv.next, %15, !dbg !701
  br i1 %26, label %21, label %.loopexit, !dbg !690

; <label>:27                                      ; preds = %0
  %28 = add nsw i32 %width, -16, !dbg !702
  %29 = icmp slt i32 %28, %x, !dbg !704
  br i1 %29, label %.preheader6, label %51, !dbg !705

.preheader6:                                      ; preds = %27
  %30 = icmp slt i32 %x, %width, !dbg !706
  br i1 %30, label %.lr.ph13, label %._crit_edge, !dbg !710

.lr.ph13:                                         ; preds = %.preheader6
  %31 = sext i32 %x to i64
  %32 = add i32 %width, -1, !dbg !710
  br label %33, !dbg !710

; <label>:33                                      ; preds = %33, %.lr.ph13
  %indvars.iv22 = phi i64 [ %31, %.lr.ph13 ], [ %indvars.iv.next23, %33 ]
  %.sum2 = add nsw i64 %indvars.iv22, %5, !dbg !711
  %34 = getelementptr inbounds i16* %Pic, i64 %.sum2, !dbg !711
  %35 = load i16* %34, align 2, !dbg !711, !tbaa !648
  %36 = sub nsw i64 %indvars.iv22, %31, !dbg !712
  %37 = getelementptr inbounds [16 x i16]* @line, i64 0, i64 %36, !dbg !713
  store i16 %35, i16* %37, align 2, !dbg !714, !tbaa !648
  %indvars.iv.next23 = add nsw i64 %indvars.iv22, 1, !dbg !710
  %lftr.wideiv24 = trunc i64 %indvars.iv22 to i32, !dbg !710
  %exitcond25 = icmp eq i32 %lftr.wideiv24, %32, !dbg !710
  br i1 %exitcond25, label %._crit_edge, label %33, !dbg !710

._crit_edge:                                      ; preds = %33, %.preheader6
  %38 = add nsw i32 %x, 16, !dbg !715
  tail call void @llvm.dbg.value(metadata i32 %38, i64 0, metadata !48, metadata !635), !dbg !684
  %39 = select i1 %30, i32 %width, i32 %x, !dbg !716
  tail call void @llvm.dbg.value(metadata i32 %39, i64 0, metadata !47, metadata !635), !dbg !685
  %40 = icmp slt i32 %39, %38, !dbg !718
  br i1 %40, label %.lr.ph11, label %.loopexit, !dbg !720

.lr.ph11:                                         ; preds = %._crit_edge
  %41 = add nsw i32 %width, -1, !dbg !721
  %42 = sext i32 %41 to i64, !dbg !722
  %.sum1 = add nsw i64 %5, %42, !dbg !722
  %43 = getelementptr inbounds i16* %Pic, i64 %.sum1, !dbg !722
  %44 = sext i32 %39 to i64
  %45 = sext i32 %x to i64, !dbg !720
  %46 = add i32 %x, 15, !dbg !720
  br label %47, !dbg !720

; <label>:47                                      ; preds = %47, %.lr.ph11
  %indvars.iv18 = phi i64 [ %44, %.lr.ph11 ], [ %indvars.iv.next19, %47 ]
  %48 = load i16* %43, align 2, !dbg !722, !tbaa !648
  %49 = sub nsw i64 %indvars.iv18, %45, !dbg !723
  %50 = getelementptr inbounds [16 x i16]* @line, i64 0, i64 %49, !dbg !724
  store i16 %48, i16* %50, align 2, !dbg !725, !tbaa !648
  %indvars.iv.next19 = add nsw i64 %indvars.iv18, 1, !dbg !720
  %lftr.wideiv20 = trunc i64 %indvars.iv18 to i32, !dbg !720
  %exitcond21 = icmp eq i32 %lftr.wideiv20, %46, !dbg !720
  br i1 %exitcond21, label %.loopexit, label %47, !dbg !720

; <label>:51                                      ; preds = %27
  %52 = sext i32 %x to i64, !dbg !726
  %.sum = add nsw i64 %5, %52, !dbg !726
  %53 = getelementptr inbounds i16* %Pic, i64 %.sum, !dbg !726
  br label %.loopexit, !dbg !727

.loopexit:                                        ; preds = %47, %21, %._crit_edge, %.preheader, %51
  %.0 = phi i16* [ %53, %51 ], [ getelementptr inbounds ([16 x i16]* @line, i64 0, i64 0), %.preheader ], [ getelementptr inbounds ([16 x i16]* @line, i64 0, i64 0), %._crit_edge ], [ getelementptr inbounds ([16 x i16]* @line, i64 0, i64 0), %21 ], [ getelementptr inbounds ([16 x i16]* @line, i64 0, i64 0), %47 ]
  ret i16* %.0, !dbg !728
}
