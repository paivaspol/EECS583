define i16* @UMVLine16Y_11(i16* %Pic, i32 %y, i32 %x, i32 %height, i32 %width) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i16* %Pic}, i64 0, metadata !43), !dbg !637
  tail call void @llvm.dbg.value(metadata !{i32 %y}, i64 0, metadata !44), !dbg !637
  tail call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !45), !dbg !637
  tail call void @llvm.dbg.value(metadata !{i32 %height}, i64 0, metadata !46), !dbg !637
  tail call void @llvm.dbg.value(metadata !{i32 %width}, i64 0, metadata !47), !dbg !637
  %sub = add nsw i32 %height, -1, !dbg !638
  %cmp = icmp sle i32 %height, %y, !dbg !638
  %sub.y = select i1 %cmp, i32 %sub, i32 %y, !dbg !638
  %cmp2 = icmp slt i32 %sub.y, 0, !dbg !638
  %.sub.y = select i1 %cmp2, i32 0, i32 %sub.y, !dbg !638
  %mul = mul nsw i32 %.sub.y, %width, !dbg !638
  %idxprom = sext i32 %mul to i64, !dbg !638
  %arrayidx = getelementptr inbounds i16* %Pic, i64 %idxprom, !dbg !638
  tail call void @llvm.dbg.value(metadata !{i16* %arrayidx}, i64 0, metadata !50), !dbg !638
  %cmp14 = icmp slt i32 %x, 0, !dbg !639
  br i1 %cmp14, label %if.then, label %if.else, !dbg !639

if.then:                                          ; preds = %entry
  %add = add i32 %x, 16, !dbg !640
  %cmp15 = icmp sgt i32 %add, 0, !dbg !640
  %.add = select i1 %cmp15, i32 0, i32 %add, !dbg !640
  tail call void @llvm.dbg.value(metadata !{i32 %.add}, i64 0, metadata !49), !dbg !640
  tail call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !48), !dbg !642
  %cmp21124 = icmp sgt i32 %.add, %x, !dbg !642
  br i1 %cmp21124, label %for.body.lr.ph, label %for.cond27.preheader, !dbg !642

for.body.lr.ph:                                   ; preds = %if.then
  %0 = sext i32 %x to i64
  br label %for.body, !dbg !642

for.cond27.preheader:                             ; preds = %for.body, %if.then
  br i1 %cmp15, label %for.body29, label %return, !dbg !644

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv131 = phi i64 [ %0, %for.body.lr.ph ], [ %indvars.iv.next132, %for.body ]
  %1 = load i16* %arrayidx, align 2, !dbg !646, !tbaa !630
  %2 = trunc i64 %indvars.iv131 to i32, !dbg !646
  %sub23 = sub nsw i32 %2, %x, !dbg !646
  %idxprom24 = sext i32 %sub23 to i64, !dbg !646
  %arrayidx25 = getelementptr inbounds [16 x i16]* @line, i64 0, i64 %idxprom24, !dbg !646
  store i16 %1, i16* %arrayidx25, align 2, !dbg !646, !tbaa !630
  %indvars.iv.next132 = add i64 %indvars.iv131, 1, !dbg !642
  %3 = trunc i64 %indvars.iv.next132 to i32, !dbg !642
  %cmp21 = icmp slt i32 %3, %.add, !dbg !642
  br i1 %cmp21, label %for.body, label %for.cond27.preheader, !dbg !642

for.body29:                                       ; preds = %for.cond27.preheader, %for.body29
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body29 ], [ 0, %for.cond27.preheader ]
  %arrayidx.sum120 = add i64 %indvars.iv, %idxprom, !dbg !647
  %arrayidx31 = getelementptr inbounds i16* %Pic, i64 %arrayidx.sum120, !dbg !647
  %4 = load i16* %arrayidx31, align 2, !dbg !647, !tbaa !630
  %5 = trunc i64 %indvars.iv to i32, !dbg !647
  %sub32 = sub nsw i32 %5, %x, !dbg !647
  %idxprom33 = sext i32 %sub32 to i64, !dbg !647
  %arrayidx34 = getelementptr inbounds [16 x i16]* @line, i64 0, i64 %idxprom33, !dbg !647
  store i16 %4, i16* %arrayidx34, align 2, !dbg !647, !tbaa !630
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !644
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !644
  %exitcond = icmp eq i32 %lftr.wideiv, %add, !dbg !644
  br i1 %exitcond, label %return, label %for.body29, !dbg !644

if.else:                                          ; preds = %entry
  %sub38 = add nsw i32 %width, -16, !dbg !648
  %cmp39 = icmp slt i32 %sub38, %x, !dbg !648
  br i1 %cmp39, label %for.cond41.preheader, label %if.else70, !dbg !648

for.cond41.preheader:                             ; preds = %if.else
  %cmp42129 = icmp slt i32 %x, %width, !dbg !649
  br i1 %cmp42129, label %for.body43.lr.ph, label %for.end51, !dbg !649

for.body43.lr.ph:                                 ; preds = %for.cond41.preheader
  %6 = sext i32 %x to i64
  br label %for.body43, !dbg !649

for.body43:                                       ; preds = %for.body43.lr.ph, %for.body43
  %indvars.iv135 = phi i64 [ %6, %for.body43.lr.ph ], [ %indvars.iv.next136, %for.body43 ]
  %arrayidx.sum119 = add i64 %indvars.iv135, %idxprom, !dbg !652
  %arrayidx45 = getelementptr inbounds i16* %Pic, i64 %arrayidx.sum119, !dbg !652
  %7 = load i16* %arrayidx45, align 2, !dbg !652, !tbaa !630
  %8 = trunc i64 %indvars.iv135 to i32, !dbg !652
  %sub46 = sub nsw i32 %8, %x, !dbg !652
  %idxprom47 = sext i32 %sub46 to i64, !dbg !652
  %arrayidx48 = getelementptr inbounds [16 x i16]* @line, i64 0, i64 %idxprom47, !dbg !652
  store i16 %7, i16* %arrayidx48, align 2, !dbg !652, !tbaa !630
  %indvars.iv.next136 = add i64 %indvars.iv135, 1, !dbg !649
  %9 = trunc i64 %indvars.iv.next136 to i32, !dbg !649
  %cmp42 = icmp slt i32 %9, %width, !dbg !649
  br i1 %cmp42, label %for.body43, label %for.end51, !dbg !649

for.end51:                                        ; preds = %for.body43, %for.cond41.preheader
  %add52 = add nsw i32 %x, 16, !dbg !653
  tail call void @llvm.dbg.value(metadata !{i32 %add52}, i64 0, metadata !49), !dbg !653
  %cond57 = select i1 %cmp42129, i32 %width, i32 %x, !dbg !654
  tail call void @llvm.dbg.value(metadata !{i32 %cond57}, i64 0, metadata !48), !dbg !654
  %cmp59127 = icmp slt i32 %cond57, %add52, !dbg !654
  br i1 %cmp59127, label %for.body60.lr.ph, label %return, !dbg !654

for.body60.lr.ph:                                 ; preds = %for.end51
  %sub61 = add nsw i32 %width, -1, !dbg !656
  %idxprom62 = sext i32 %sub61 to i64, !dbg !656
  %arrayidx.sum118 = add i64 %idxprom, %idxprom62, !dbg !656
  %arrayidx63 = getelementptr inbounds i16* %Pic, i64 %arrayidx.sum118, !dbg !656
  %10 = sext i32 %cond57 to i64
  br label %for.body60, !dbg !654

for.body60:                                       ; preds = %for.body60.lr.ph, %for.body60
  %indvars.iv133 = phi i64 [ %10, %for.body60.lr.ph ], [ %indvars.iv.next134, %for.body60 ]
  %11 = load i16* %arrayidx63, align 2, !dbg !656, !tbaa !630
  %12 = trunc i64 %indvars.iv133 to i32, !dbg !656
  %sub64 = sub nsw i32 %12, %x, !dbg !656
  %idxprom65 = sext i32 %sub64 to i64, !dbg !656
  %arrayidx66 = getelementptr inbounds [16 x i16]* @line, i64 0, i64 %idxprom65, !dbg !656
  store i16 %11, i16* %arrayidx66, align 2, !dbg !656, !tbaa !630
  %indvars.iv.next134 = add i64 %indvars.iv133, 1, !dbg !654
  %13 = trunc i64 %indvars.iv.next134 to i32, !dbg !654
  %cmp59 = icmp slt i32 %13, %add52, !dbg !654
  br i1 %cmp59, label %for.body60, label %return, !dbg !654

if.else70:                                        ; preds = %if.else
  %idxprom71 = sext i32 %x to i64, !dbg !657
  %arrayidx.sum = add i64 %idxprom, %idxprom71, !dbg !657
  %arrayidx72 = getelementptr inbounds i16* %Pic, i64 %arrayidx.sum, !dbg !657
  br label %return, !dbg !657

return:                                           ; preds = %for.end51, %for.body60, %for.cond27.preheader, %for.body29, %if.else70
  %retval.0 = phi i16* [ %arrayidx72, %if.else70 ], [ getelementptr inbounds ([16 x i16]* @line, i64 0, i64 0), %for.body29 ], [ getelementptr inbounds ([16 x i16]* @line, i64 0, i64 0), %for.cond27.preheader ], [ getelementptr inbounds ([16 x i16]* @line, i64 0, i64 0), %for.body60 ], [ getelementptr inbounds ([16 x i16]* @line, i64 0, i64 0), %for.end51 ]
  ret i16* %retval.0, !dbg !658
}
