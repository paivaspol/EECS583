define i16* @UMVLineX(i32 %size, i16* %Pic, i32 %y, i32 %x, i32 %height, i32 %width) #0 {
entry:
  %sub = add nsw i32 %height, -1
  %cmp = icmp sle i32 %height, %y
  %sub.y = select i1 %cmp, i32 %sub, i32 %y
  %cmp2 = icmp slt i32 %sub.y, 0
  %.sub.y = select i1 %cmp2, i32 0, i32 %sub.y
  %mul = mul nsw i32 %.sub.y, %width
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds i16* %Pic, i64 %idx.ext
  %cmp14 = icmp slt i32 %x, 0
  br i1 %cmp14, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %add = add i32 %x, %size
  %cmp15 = icmp sgt i32 %add, 0
  %.add = select i1 %cmp15, i32 0, i32 %add
  %cmp21126 = icmp sgt i32 %.add, %x
  br i1 %cmp21126, label %for.body.lr.ph, label %for.cond25.preheader

for.body.lr.ph:                                   ; preds = %if.then
  %0 = sext i32 %x to i64
  br label %for.body

for.cond25.preheader:                             ; preds = %for.body, %if.then
  br i1 %cmp15, label %for.body27, label %return

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv133 = phi i64 [ %0, %for.body.lr.ph ], [ %indvars.iv.next134, %for.body ]
  %1 = load i16* %add.ptr, align 2, !tbaa !3
  %2 = trunc i64 %indvars.iv133 to i32
  %sub22 = sub nsw i32 %2, %x
  %idxprom = sext i32 %sub22 to i64
  %arrayidx23 = getelementptr inbounds [16 x i16]* @line, i64 0, i64 %idxprom
  store i16 %1, i16* %arrayidx23, align 2, !tbaa !3
  %indvars.iv.next134 = add i64 %indvars.iv133, 1
  %3 = trunc i64 %indvars.iv.next134 to i32
  %cmp21 = icmp slt i32 %3, %.add
  br i1 %cmp21, label %for.body, label %for.cond25.preheader

for.body27:                                       ; preds = %for.cond25.preheader, %for.body27
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body27 ], [ 0, %for.cond25.preheader ]
  %add.ptr.sum122 = add i64 %indvars.iv, %idx.ext
  %arrayidx29 = getelementptr inbounds i16* %Pic, i64 %add.ptr.sum122
  %4 = load i16* %arrayidx29, align 2, !tbaa !3
  %5 = trunc i64 %indvars.iv to i32
  %sub30 = sub nsw i32 %5, %x
  %idxprom31 = sext i32 %sub30 to i64
  %arrayidx32 = getelementptr inbounds [16 x i16]* @line, i64 0, i64 %idxprom31
  store i16 %4, i16* %arrayidx32, align 2, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %add
  br i1 %exitcond, label %return, label %for.body27

if.else:                                          ; preds = %entry
  %sub36 = sub nsw i32 %width, %size
  %cmp37 = icmp slt i32 %sub36, %x
  br i1 %cmp37, label %for.cond39.preheader, label %if.else68

for.cond39.preheader:                             ; preds = %if.else
  %cmp40131 = icmp slt i32 %x, %width
  br i1 %cmp40131, label %for.body41.lr.ph, label %for.end49

for.body41.lr.ph:                                 ; preds = %for.cond39.preheader
  %6 = sext i32 %x to i64
  br label %for.body41

for.body41:                                       ; preds = %for.body41.lr.ph, %for.body41
  %indvars.iv137 = phi i64 [ %6, %for.body41.lr.ph ], [ %indvars.iv.next138, %for.body41 ]
  %add.ptr.sum121 = add i64 %indvars.iv137, %idx.ext
  %arrayidx43 = getelementptr inbounds i16* %Pic, i64 %add.ptr.sum121
  %7 = load i16* %arrayidx43, align 2, !tbaa !3
  %8 = trunc i64 %indvars.iv137 to i32
  %sub44 = sub nsw i32 %8, %x
  %idxprom45 = sext i32 %sub44 to i64
  %arrayidx46 = getelementptr inbounds [16 x i16]* @line, i64 0, i64 %idxprom45
  store i16 %7, i16* %arrayidx46, align 2, !tbaa !3
  %indvars.iv.next138 = add i64 %indvars.iv137, 1
  %9 = trunc i64 %indvars.iv.next138 to i32
  %cmp40 = icmp slt i32 %9, %width
  br i1 %cmp40, label %for.body41, label %for.end49

for.end49:                                        ; preds = %for.body41, %for.cond39.preheader
  %add50 = add nsw i32 %x, %size
  %cond55 = select i1 %cmp40131, i32 %width, i32 %x
  %cmp57129 = icmp slt i32 %cond55, %add50
  br i1 %cmp57129, label %for.body58.lr.ph, label %return

for.body58.lr.ph:                                 ; preds = %for.end49
  %sub59 = add nsw i32 %width, -1
  %idxprom60 = sext i32 %sub59 to i64
  %add.ptr.sum120 = add i64 %idx.ext, %idxprom60
  %arrayidx61 = getelementptr inbounds i16* %Pic, i64 %add.ptr.sum120
  %10 = sext i32 %cond55 to i64
  br label %for.body58

for.body58:                                       ; preds = %for.body58.lr.ph, %for.body58
  %indvars.iv135 = phi i64 [ %10, %for.body58.lr.ph ], [ %indvars.iv.next136, %for.body58 ]
  %11 = load i16* %arrayidx61, align 2, !tbaa !3
  %12 = trunc i64 %indvars.iv135 to i32
  %sub62 = sub nsw i32 %12, %x
  %idxprom63 = sext i32 %sub62 to i64
  %arrayidx64 = getelementptr inbounds [16 x i16]* @line, i64 0, i64 %idxprom63
  store i16 %11, i16* %arrayidx64, align 2, !tbaa !3
  %indvars.iv.next136 = add i64 %indvars.iv135, 1
  %13 = trunc i64 %indvars.iv.next136 to i32
  %cmp57 = icmp slt i32 %13, %add50
  br i1 %cmp57, label %for.body58, label %return

if.else68:                                        ; preds = %if.else
  %idx.ext69 = sext i32 %x to i64
  %add.ptr.sum = add i64 %idx.ext, %idx.ext69
  %add.ptr70 = getelementptr inbounds i16* %Pic, i64 %add.ptr.sum
  br label %return

return:                                           ; preds = %for.end49, %for.body58, %for.cond25.preheader, %for.body27, %if.else68
  %retval.0 = phi i16* [ %add.ptr70, %if.else68 ], [ getelementptr inbounds ([16 x i16]* @line, i64 0, i64 0), %for.body27 ], [ getelementptr inbounds ([16 x i16]* @line, i64 0, i64 0), %for.cond25.preheader ], [ getelementptr inbounds ([16 x i16]* @line, i64 0, i64 0), %for.body58 ], [ getelementptr inbounds ([16 x i16]* @line, i64 0, i64 0), %for.end49 ]
  ret i16* %retval.0
}
