define i16* @UMVLineX(i32 %size, i16* readonly %Pic, i32 %y, i32 %x, i32 %height, i32 %width) #0 {
  tail call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !62, metadata !635), !dbg !739
  tail call void @llvm.dbg.value(metadata i16* %Pic, i64 0, metadata !63, metadata !635), !dbg !740
  tail call void @llvm.dbg.value(metadata i32 %y, i64 0, metadata !64, metadata !635), !dbg !741
  tail call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !65, metadata !635), !dbg !742
  tail call void @llvm.dbg.value(metadata i32 %height, i64 0, metadata !66, metadata !635), !dbg !743
  tail call void @llvm.dbg.value(metadata i32 %width, i64 0, metadata !67, metadata !635), !dbg !744
  %1 = add nsw i32 %height, -1, !dbg !745
  %2 = icmp sle i32 %height, %y, !dbg !745
  %.y = select i1 %2, i32 %1, i32 %y, !dbg !745
  %3 = icmp slt i32 %.y, 0, !dbg !745
  %..y = select i1 %3, i32 0, i32 %.y, !dbg !745
  %4 = mul nsw i32 %..y, %width, !dbg !746
  %5 = sext i32 %4 to i64, !dbg !747
  %6 = getelementptr inbounds i16* %Pic, i64 %5, !dbg !747
  tail call void @llvm.dbg.value(metadata i16* %6, i64 0, metadata !70, metadata !635), !dbg !748
  %7 = icmp slt i32 %x, 0, !dbg !749
  br i1 %7, label %8, label %26, !dbg !751

; <label>:8                                       ; preds = %0
  %9 = add i32 %x, %size, !dbg !752
  %10 = icmp sgt i32 %9, 0, !dbg !752
  %. = select i1 %10, i32 0, i32 %9, !dbg !752
  tail call void @llvm.dbg.value(metadata i32 %., i64 0, metadata !69, metadata !635), !dbg !754
  tail call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !68, metadata !635), !dbg !755
  %11 = icmp sgt i32 %., %x, !dbg !756
  br i1 %11, label %.lr.ph9, label %.preheader, !dbg !759

.lr.ph9:                                          ; preds = %8
  %12 = sext i32 %x to i64
  %13 = icmp slt i32 %9, 0
  %.op = add i32 %9, -1, !dbg !759
  %14 = select i1 %13, i32 %.op, i32 -1, !dbg !759
  br label %17, !dbg !759

.preheader:                                       ; preds = %17, %8
  br i1 %10, label %.lr.ph, label %.loopexit, !dbg !760

.lr.ph:                                           ; preds = %.preheader
  %15 = sext i32 %x to i64, !dbg !760
  %16 = add i32 %9, -1, !dbg !760
  br label %21, !dbg !760

; <label>:17                                      ; preds = %17, %.lr.ph9
  %indvars.iv15 = phi i64 [ %12, %.lr.ph9 ], [ %indvars.iv.next16, %17 ]
  %18 = load i16* %6, align 2, !dbg !762, !tbaa !648
  %19 = sub nsw i64 %indvars.iv15, %12, !dbg !764
  %20 = getelementptr inbounds [16 x i16]* @line, i64 0, i64 %19, !dbg !765
  store i16 %18, i16* %20, align 2, !dbg !766, !tbaa !648
  %indvars.iv.next16 = add nsw i64 %indvars.iv15, 1, !dbg !759
  %lftr.wideiv17 = trunc i64 %indvars.iv15 to i32, !dbg !759
  %exitcond18 = icmp eq i32 %lftr.wideiv17, %14, !dbg !759
  br i1 %exitcond18, label %.preheader, label %17, !dbg !759

; <label>:21                                      ; preds = %21, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %21 ]
  %.sum3 = add nsw i64 %indvars.iv, %5, !dbg !767
  %22 = getelementptr inbounds i16* %Pic, i64 %.sum3, !dbg !767
  %23 = load i16* %22, align 2, !dbg !767, !tbaa !648
  %24 = sub nsw i64 %indvars.iv, %15, !dbg !769
  %25 = getelementptr inbounds [16 x i16]* @line, i64 0, i64 %24, !dbg !770
  store i16 %23, i16* %25, align 2, !dbg !771, !tbaa !648
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !760
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !760
  %exitcond = icmp eq i32 %lftr.wideiv, %16, !dbg !760
  br i1 %exitcond, label %.loopexit, label %21, !dbg !760

; <label>:26                                      ; preds = %0
  %27 = sub nsw i32 %width, %size, !dbg !772
  %28 = icmp slt i32 %27, %x, !dbg !774
  br i1 %28, label %.preheader6, label %50, !dbg !775

.preheader6:                                      ; preds = %26
  %29 = icmp slt i32 %x, %width, !dbg !776
  br i1 %29, label %.lr.ph13, label %._crit_edge, !dbg !780

.lr.ph13:                                         ; preds = %.preheader6
  %30 = sext i32 %x to i64
  %31 = add i32 %width, -1, !dbg !780
  br label %32, !dbg !780

; <label>:32                                      ; preds = %32, %.lr.ph13
  %indvars.iv24 = phi i64 [ %30, %.lr.ph13 ], [ %indvars.iv.next25, %32 ]
  %.sum2 = add nsw i64 %indvars.iv24, %5, !dbg !781
  %33 = getelementptr inbounds i16* %Pic, i64 %.sum2, !dbg !781
  %34 = load i16* %33, align 2, !dbg !781, !tbaa !648
  %35 = sub nsw i64 %indvars.iv24, %30, !dbg !783
  %36 = getelementptr inbounds [16 x i16]* @line, i64 0, i64 %35, !dbg !784
  store i16 %34, i16* %36, align 2, !dbg !785, !tbaa !648
  %indvars.iv.next25 = add nsw i64 %indvars.iv24, 1, !dbg !780
  %lftr.wideiv26 = trunc i64 %indvars.iv24 to i32, !dbg !780
  %exitcond27 = icmp eq i32 %lftr.wideiv26, %31, !dbg !780
  br i1 %exitcond27, label %._crit_edge, label %32, !dbg !780

._crit_edge:                                      ; preds = %32, %.preheader6
  %37 = add i32 %x, %size, !dbg !786
  tail call void @llvm.dbg.value(metadata i32 %37, i64 0, metadata !69, metadata !635), !dbg !754
  %38 = select i1 %29, i32 %width, i32 %x, !dbg !787
  tail call void @llvm.dbg.value(metadata i32 %38, i64 0, metadata !68, metadata !635), !dbg !755
  %39 = icmp slt i32 %38, %37, !dbg !789
  br i1 %39, label %.lr.ph11, label %.loopexit, !dbg !791

.lr.ph11:                                         ; preds = %._crit_edge
  %40 = add nsw i32 %width, -1, !dbg !792
  %41 = sext i32 %40 to i64, !dbg !794
  %.sum1 = add nsw i64 %5, %41, !dbg !794
  %42 = getelementptr inbounds i16* %Pic, i64 %.sum1, !dbg !794
  %43 = sext i32 %38 to i64
  %44 = sext i32 %x to i64, !dbg !791
  %45 = add i32 %37, -1, !dbg !791
  br label %46, !dbg !791

; <label>:46                                      ; preds = %46, %.lr.ph11
  %indvars.iv20 = phi i64 [ %43, %.lr.ph11 ], [ %indvars.iv.next21, %46 ]
  %47 = load i16* %42, align 2, !dbg !794, !tbaa !648
  %48 = sub nsw i64 %indvars.iv20, %44, !dbg !795
  %49 = getelementptr inbounds [16 x i16]* @line, i64 0, i64 %48, !dbg !796
  store i16 %47, i16* %49, align 2, !dbg !797, !tbaa !648
  %indvars.iv.next21 = add nsw i64 %indvars.iv20, 1, !dbg !791
  %lftr.wideiv22 = trunc i64 %indvars.iv20 to i32, !dbg !791
  %exitcond23 = icmp eq i32 %lftr.wideiv22, %45, !dbg !791
  br i1 %exitcond23, label %.loopexit, label %46, !dbg !791

; <label>:50                                      ; preds = %26
  %51 = sext i32 %x to i64, !dbg !798
  %.sum = add nsw i64 %5, %51, !dbg !798
  %52 = getelementptr inbounds i16* %Pic, i64 %.sum, !dbg !798
  br label %.loopexit, !dbg !800

.loopexit:                                        ; preds = %46, %21, %._crit_edge, %.preheader, %50
  %.0 = phi i16* [ %52, %50 ], [ getelementptr inbounds ([16 x i16]* @line, i64 0, i64 0), %.preheader ], [ getelementptr inbounds ([16 x i16]* @line, i64 0, i64 0), %._crit_edge ], [ getelementptr inbounds ([16 x i16]* @line, i64 0, i64 0), %21 ], [ getelementptr inbounds ([16 x i16]* @line, i64 0, i64 0), %46 ]
  ret i16* %.0, !dbg !801
}
