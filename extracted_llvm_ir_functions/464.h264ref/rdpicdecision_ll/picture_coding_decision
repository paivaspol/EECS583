define i32 @picture_coding_decision(%struct.Picture* nocapture %picture1, %struct.Picture* nocapture %picture2, i32 %qp) #1 {
entry:
  %0 = load %struct.ImageParameters** @img, align 8, !tbaa !0
  %type = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 6
  %1 = load i32* %type, align 4, !tbaa !3
  %cmp = icmp eq i32 %1, 3
  %2 = load %struct.InputParameters** @input, align 8, !tbaa !0
  %successive_Bframe = getelementptr inbounds %struct.InputParameters* %2, i64 0, i32 34
  %3 = load i32* %successive_Bframe, align 4, !tbaa !3
  %tobool = icmp eq i32 %3, 0
  %sub = add nsw i32 %qp, -12
  %conv4 = sitofp i32 %sub to double
  %div = fdiv double %conv4, 3.000000e+00
  %exp2 = tail call double @exp2(double %div) #2
  %mul = fmul double %exp2, 6.800000e-01
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %cmp2 = icmp eq i32 %1, 1
  br i1 %cmp2, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then
  %phitmp30 = select i1 %cmp, double 2.000000e+00, double 1.000000e+00
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then
  %4 = phi double [ 2.000000e+00, %if.then ], [ %phitmp30, %lor.rhs ]
  %mul8 = fmul double %mul, %4
  br label %if.end

if.end:                                           ; preds = %entry, %lor.end
  %lambda_picture.0 = phi double [ %mul8, %lor.end ], [ %mul, %entry ]
  %distortion_y = getelementptr inbounds %struct.Picture* %picture1, i64 0, i32 4
  %5 = load float* %distortion_y, align 4, !tbaa !4
  %distortion_u = getelementptr inbounds %struct.Picture* %picture1, i64 0, i32 5
  %6 = load float* %distortion_u, align 4, !tbaa !4
  %add = fadd float %5, %6
  %distortion_v = getelementptr inbounds %struct.Picture* %picture1, i64 0, i32 6
  %7 = load float* %distortion_v, align 4, !tbaa !4
  %add14 = fadd float %add, %7
  %conv15 = fpext float %add14 to double
  %distortion_y16 = getelementptr inbounds %struct.Picture* %picture2, i64 0, i32 4
  %8 = load float* %distortion_y16, align 4, !tbaa !4
  %distortion_u17 = getelementptr inbounds %struct.Picture* %picture2, i64 0, i32 5
  %9 = load float* %distortion_u17, align 4, !tbaa !4
  %add18 = fadd float %8, %9
  %distortion_v19 = getelementptr inbounds %struct.Picture* %picture2, i64 0, i32 6
  %10 = load float* %distortion_v19, align 4, !tbaa !4
  %add20 = fadd float %add18, %10
  %conv21 = fpext float %add20 to double
  %bits_per_picture = getelementptr inbounds %struct.Picture* %picture2, i64 0, i32 3
  %11 = load i32* %bits_per_picture, align 4, !tbaa !3
  %bits_per_picture22 = getelementptr inbounds %struct.Picture* %picture1, i64 0, i32 3
  %12 = load i32* %bits_per_picture22, align 4, !tbaa !3
  %conv.i = sitofp i32 %12 to double
  %mul.i = fmul double %lambda_picture.0, %conv.i
  %add.i = fadd double %conv15, %mul.i
  %conv1.i = sitofp i32 %11 to double
  %mul2.i = fmul double %lambda_picture.0, %conv1.i
  %add3.i = fadd double %conv21, %mul2.i
  %cmp.i = fcmp ogt double %add3.i, %add.i
  br i1 %cmp.i, label %rd_pic_decision.exit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end
  %cmp5.i = fcmp une double %add3.i, %add.i
  %cmp7.i = fcmp ult float %add20, %add14
  %or.cond.i = or i1 %cmp5.i, %cmp7.i
  %..i = zext i1 %or.cond.i to i32
  br label %rd_pic_decision.exit

rd_pic_decision.exit:                             ; preds = %if.end, %lor.lhs.false.i
  %call2331 = phi i32 [ %..i, %lor.lhs.false.i ], [ 0, %if.end ]
  ret i32 %call2331
}
