define void @compute_residue_b8block(i32 %b8block, i32 %i16mode) #0 {
  tail call void @llvm.dbg.value(metadata i32 %b8block, i64 0, metadata !183, metadata !762), !dbg !1400
  tail call void @llvm.dbg.value(metadata i32 %i16mode, i64 0, metadata !184, metadata !762), !dbg !1401
  %1 = srem i32 %b8block, 2, !dbg !1402
  %2 = sdiv i32 %b8block, 2, !dbg !1403
  %3 = icmp sgt i32 %i16mode, -1, !dbg !1404
  %4 = load %struct.ImageParameters** @img, align 8, !dbg !1406, !tbaa !769
  %5 = getelementptr inbounds %struct.ImageParameters* %4, i64 0, i32 33, !dbg !1413
  %6 = getelementptr inbounds %struct.ImageParameters* %4, i64 0, i32 34, !dbg !1414
  %7 = load %struct.storable_picture** @enc_picture, align 8, !dbg !1415, !tbaa !769
  %8 = getelementptr inbounds %struct.storable_picture* %7, i64 0, i32 25, !dbg !1416
  %9 = load i16*** %8, align 8, !dbg !1416, !tbaa !813
  br i1 %3, label %.preheader1, label %.preheader3, !dbg !1417

.preheader3:                                      ; preds = %0
  %10 = load %struct.Decoders** @decs, align 8, !dbg !1418, !tbaa !769
  %11 = getelementptr inbounds %struct.Decoders* %10, i64 0, i32 0, !dbg !1425
  %12 = load i32*** %11, align 8, !dbg !1425, !tbaa !881
  %13 = shl i32 %2, 3, !dbg !1426
  %14 = sext i32 %13 to i64
  %15 = or i32 %13, 7, !dbg !1426
  %16 = shl nsw i32 %1, 3, !dbg !1426
  %17 = sext i32 %16 to i64
  %18 = or i32 %16, 7, !dbg !1426
  br label %.preheader2, !dbg !1426

.preheader1:                                      ; preds = %0
  %19 = sext i32 %i16mode to i64, !dbg !1427
  %20 = load %struct.Decoders** @decs, align 8, !dbg !1428, !tbaa !769
  %21 = getelementptr inbounds %struct.Decoders* %20, i64 0, i32 0, !dbg !1429
  %22 = load i32*** %21, align 8, !dbg !1429, !tbaa !881
  %23 = shl i32 %2, 3, !dbg !1430
  %24 = sext i32 %23 to i64
  %25 = or i32 %23, 7, !dbg !1430
  %26 = shl nsw i32 %1, 3, !dbg !1430
  %27 = sext i32 %26 to i64
  %28 = or i32 %26, 7, !dbg !1430
  br label %.preheader, !dbg !1430

.preheader:                                       ; preds = %50, %.preheader1
  %indvars.iv9 = phi i64 [ %27, %.preheader1 ], [ %indvars.iv.next10, %50 ]
  br label %29, !dbg !1431

; <label>:29                                      ; preds = %29, %.preheader
  %indvars.iv = phi i64 [ %24, %.preheader ], [ %indvars.iv.next, %29 ]
  %30 = load i32* %5, align 4, !dbg !1413, !tbaa !808
  %31 = trunc i64 %indvars.iv9 to i32, !dbg !1432
  %32 = add nsw i32 %30, %31, !dbg !1432
  %33 = sext i32 %32 to i64, !dbg !1415
  %34 = load i32* %6, align 4, !dbg !1414, !tbaa !810
  %35 = trunc i64 %indvars.iv to i32, !dbg !1433
  %36 = add nsw i32 %34, %35, !dbg !1433
  %37 = sext i32 %36 to i64, !dbg !1415
  %38 = getelementptr inbounds i16** %9, i64 %37, !dbg !1415
  %39 = load i16** %38, align 8, !dbg !1415, !tbaa !769
  %40 = getelementptr inbounds i16* %39, i64 %33, !dbg !1415
  %41 = load i16* %40, align 2, !dbg !1415, !tbaa !823
  %42 = zext i16 %41 to i32, !dbg !1415
  %43 = getelementptr inbounds %struct.ImageParameters* %4, i64 0, i32 42, i64 %19, i64 %indvars.iv, i64 %indvars.iv9, !dbg !1427
  %44 = load i16* %43, align 2, !dbg !1427, !tbaa !823
  %45 = zext i16 %44 to i32, !dbg !1427
  %46 = sub nsw i32 %42, %45, !dbg !1434
  %47 = getelementptr inbounds i32** %22, i64 %indvars.iv, !dbg !1428
  %48 = load i32** %47, align 8, !dbg !1428, !tbaa !769
  %49 = getelementptr inbounds i32* %48, i64 %indvars.iv9, !dbg !1428
  store i32 %46, i32* %49, align 4, !dbg !1435, !tbaa !778
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !1431
  %exitcond = icmp eq i32 %35, %25, !dbg !1431
  br i1 %exitcond, label %50, label %29, !dbg !1431

; <label>:50                                      ; preds = %29
  %indvars.iv.next10 = add nsw i64 %indvars.iv9, 1, !dbg !1430
  %exitcond12 = icmp eq i32 %31, %28, !dbg !1430
  br i1 %exitcond12, label %.loopexit, label %.preheader, !dbg !1430

.preheader2:                                      ; preds = %72, %.preheader3
  %indvars.iv17 = phi i64 [ %17, %.preheader3 ], [ %indvars.iv.next18, %72 ]
  br label %51, !dbg !1436

; <label>:51                                      ; preds = %51, %.preheader2
  %indvars.iv13 = phi i64 [ %14, %.preheader2 ], [ %indvars.iv.next14, %51 ]
  %52 = load i32* %5, align 4, !dbg !1437, !tbaa !808
  %53 = trunc i64 %indvars.iv17 to i32, !dbg !1438
  %54 = add nsw i32 %52, %53, !dbg !1438
  %55 = sext i32 %54 to i64, !dbg !1439
  %56 = load i32* %6, align 4, !dbg !1440, !tbaa !810
  %57 = trunc i64 %indvars.iv13 to i32, !dbg !1441
  %58 = add nsw i32 %56, %57, !dbg !1441
  %59 = sext i32 %58 to i64, !dbg !1439
  %60 = getelementptr inbounds i16** %9, i64 %59, !dbg !1439
  %61 = load i16** %60, align 8, !dbg !1439, !tbaa !769
  %62 = getelementptr inbounds i16* %61, i64 %55, !dbg !1439
  %63 = load i16* %62, align 2, !dbg !1439, !tbaa !823
  %64 = zext i16 %63 to i32, !dbg !1439
  %65 = getelementptr inbounds %struct.ImageParameters* %4, i64 0, i32 45, i64 %indvars.iv17, i64 %indvars.iv13, !dbg !1442
  %66 = load i16* %65, align 2, !dbg !1442, !tbaa !823
  %67 = zext i16 %66 to i32, !dbg !1442
  %68 = sub nsw i32 %64, %67, !dbg !1443
  %69 = getelementptr inbounds i32** %12, i64 %indvars.iv13, !dbg !1418
  %70 = load i32** %69, align 8, !dbg !1418, !tbaa !769
  %71 = getelementptr inbounds i32* %70, i64 %indvars.iv17, !dbg !1418
  store i32 %68, i32* %71, align 4, !dbg !1444, !tbaa !778
  %indvars.iv.next14 = add nsw i64 %indvars.iv13, 1, !dbg !1436
  %exitcond16 = icmp eq i32 %57, %15, !dbg !1436
  br i1 %exitcond16, label %72, label %51, !dbg !1436

; <label>:72                                      ; preds = %51
  %indvars.iv.next18 = add nsw i64 %indvars.iv17, 1, !dbg !1426
  %exitcond20 = icmp eq i32 %53, %18, !dbg !1426
  br i1 %exitcond20, label %.loopexit, label %.preheader2, !dbg !1426

.loopexit:                                        ; preds = %72, %50
  ret void, !dbg !1445
}
