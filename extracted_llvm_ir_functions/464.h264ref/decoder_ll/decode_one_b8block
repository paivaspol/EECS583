define void @decode_one_b8block(i32 %decoder, i32 %mbmode, i32 %b8block, i32 %b8mode, i32 %b8ref) #0 {
  %mv = alloca [2 x [4 x [4 x i32]]], align 16
  %resY_tmp = alloca [16 x [16 x i32]], align 16
  tail call void @llvm.dbg.value(metadata i32 %decoder, i64 0, metadata !24, metadata !762), !dbg !763
  tail call void @llvm.dbg.value(metadata i32 %mbmode, i64 0, metadata !25, metadata !762), !dbg !764
  tail call void @llvm.dbg.value(metadata i32 %b8block, i64 0, metadata !26, metadata !762), !dbg !765
  tail call void @llvm.dbg.value(metadata i32 %b8mode, i64 0, metadata !27, metadata !762), !dbg !766
  tail call void @llvm.dbg.value(metadata i32 %b8ref, i64 0, metadata !28, metadata !762), !dbg !767
  %1 = load %struct.ImageParameters** @img, align 8, !dbg !768, !tbaa !769
  %2 = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 0, !dbg !768
  %3 = load i32* %2, align 4, !dbg !768, !tbaa !773
  %4 = load i32* @start_frame_no_in_this_IGOP, align 4, !dbg !768, !tbaa !778
  %5 = add i32 %3, -1, !dbg !768
  %6 = sub i32 %5, %4, !dbg !779
  %7 = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 8, !dbg !780
  %8 = load i32* %7, align 4, !dbg !780, !tbaa !781
  %9 = srem i32 %6, %8, !dbg !782
  tail call void @llvm.dbg.value(metadata i32 %9, i64 0, metadata !35, metadata !762), !dbg !783
  %10 = bitcast [2 x [4 x [4 x i32]]]* %mv to i8*, !dbg !784
  call void @llvm.lifetime.start(i64 128, i8* %10) #2, !dbg !784
  tail call void @llvm.dbg.declare(metadata [2 x [4 x [4 x i32]]]* %mv, metadata !36, metadata !762), !dbg !785
  %11 = bitcast [16 x [16 x i32]]* %resY_tmp to i8*, !dbg !786
  call void @llvm.lifetime.start(i64 1024, i8* %11) #2, !dbg !786
  tail call void @llvm.dbg.declare(metadata [16 x [16 x i32]]* %resY_tmp, metadata !41, metadata !762), !dbg !787
  %12 = srem i32 %b8block, 2, !dbg !788
  %13 = shl nsw i32 %12, 1, !dbg !789
  tail call void @llvm.dbg.value(metadata i32 %13, i64 0, metadata !47, metadata !762), !dbg !790
  %14 = sdiv i32 %b8block, 2, !dbg !791
  %15 = shl i32 %14, 3, !dbg !792
  tail call void @llvm.dbg.value(metadata i32 %15, i64 0, metadata !49, metadata !762), !dbg !793
  %16 = ashr exact i32 %15, 2, !dbg !794
  tail call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !51, metadata !762), !dbg !795
  %17 = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 6, !dbg !796
  %18 = load i32* %17, align 4, !dbg !796, !tbaa !798
  %19 = icmp eq i32 %18, 2, !dbg !799
  br i1 %19, label %.preheader6, label %52, !dbg !800

.preheader6:                                      ; preds = %0
  %20 = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 33, !dbg !801
  %21 = load i32* %20, align 4, !dbg !801, !tbaa !808
  %22 = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 34, !dbg !809
  %23 = load i32* %22, align 4, !dbg !809, !tbaa !810
  %24 = load %struct.storable_picture** @enc_picture, align 8, !dbg !811, !tbaa !769
  %25 = getelementptr inbounds %struct.storable_picture* %24, i64 0, i32 25, !dbg !812
  %26 = load i16*** %25, align 8, !dbg !812, !tbaa !813
  %27 = sext i32 %decoder to i64, !dbg !815
  %28 = load %struct.Decoders** @decs, align 8, !dbg !815, !tbaa !769
  %29 = getelementptr inbounds %struct.Decoders* %28, i64 0, i32 1, !dbg !816
  %30 = load i16**** %29, align 8, !dbg !816, !tbaa !817
  %31 = getelementptr inbounds i16*** %30, i64 %27, !dbg !815
  %32 = load i16*** %31, align 8, !dbg !815, !tbaa !769
  %33 = shl i32 %14, 3, !dbg !819
  %34 = sext i32 %33 to i64
  %35 = sext i32 %23 to i64, !dbg !819
  %36 = or i32 %33, 7, !dbg !819
  %37 = shl nsw i32 %12, 3, !dbg !819
  %38 = sext i32 %37 to i64
  %39 = sext i32 %21 to i64, !dbg !819
  %40 = or i32 %37, 7, !dbg !819
  br label %.preheader, !dbg !819

.preheader:                                       ; preds = %51, %.preheader6
  %indvars.iv47 = phi i64 [ %38, %.preheader6 ], [ %indvars.iv.next48, %51 ]
  %41 = add nsw i64 %39, %indvars.iv47, !dbg !820
  br label %42, !dbg !821

; <label>:42                                      ; preds = %42, %.preheader
  %indvars.iv = phi i64 [ %34, %.preheader ], [ %indvars.iv.next, %42 ]
  %43 = add nsw i64 %35, %indvars.iv, !dbg !822
  %44 = getelementptr inbounds i16** %26, i64 %43, !dbg !811
  %45 = load i16** %44, align 8, !dbg !811, !tbaa !769
  %46 = getelementptr inbounds i16* %45, i64 %41, !dbg !811
  %47 = load i16* %46, align 2, !dbg !811, !tbaa !823
  %48 = getelementptr inbounds i16** %32, i64 %43, !dbg !815
  %49 = load i16** %48, align 8, !dbg !815, !tbaa !769
  %50 = getelementptr inbounds i16* %49, i64 %41, !dbg !815
  store i16 %47, i16* %50, align 2, !dbg !825, !tbaa !823
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !821
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !821
  %exitcond = icmp eq i32 %lftr.wideiv, %36, !dbg !821
  br i1 %exitcond, label %51, label %42, !dbg !821

; <label>:51                                      ; preds = %42
  %indvars.iv.next48 = add nsw i64 %indvars.iv47, 1, !dbg !819
  %lftr.wideiv49 = trunc i64 %indvars.iv47 to i32, !dbg !819
  %exitcond50 = icmp eq i32 %lftr.wideiv49, %40, !dbg !819
  br i1 %exitcond50, label %.loopexit, label %.preheader, !dbg !819

; <label>:52                                      ; preds = %0
  %53 = icmp eq i32 %mbmode, 0, !dbg !826
  br i1 %53, label %54, label %77, !dbg !829

; <label>:54                                      ; preds = %52
  switch i32 %18, label %77 [
    i32 0, label %.preheader26
    i32 1, label %55
  ], !dbg !830

; <label>:55                                      ; preds = %54
  %56 = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 113, !dbg !831
  %57 = load i32* %56, align 4, !dbg !831, !tbaa !832
  %58 = icmp sgt i32 %57, 0, !dbg !833
  br i1 %58, label %.preheader26, label %77, !dbg !834

.preheader26:                                     ; preds = %54, %55
  %59 = shl i32 %14, 3, !dbg !835
  %60 = sext i32 %59 to i64
  %61 = or i32 %59, 7, !dbg !835
  %62 = shl nsw i32 %12, 3, !dbg !835
  %63 = sext i32 %62 to i64
  %64 = or i32 %62, 7, !dbg !835
  br label %.preheader25, !dbg !835

.preheader25:                                     ; preds = %72, %.preheader26
  %indvars.iv113 = phi i64 [ %63, %.preheader26 ], [ %indvars.iv.next114, %72 ]
  br label %70, !dbg !838

.preheader23:                                     ; preds = %72
  %65 = shl nsw i32 %12, 1, !dbg !841
  %66 = sext i32 %65 to i64
  %67 = or i32 %65, 1, !dbg !841
  %68 = sext i32 %16 to i64
  %69 = or i32 %16, 1, !dbg !841
  br label %.preheader22, !dbg !841

; <label>:70                                      ; preds = %70, %.preheader25
  %indvars.iv109 = phi i64 [ %60, %.preheader25 ], [ %indvars.iv.next110, %70 ]
  %71 = getelementptr inbounds [16 x [16 x i32]]* %resY_tmp, i64 0, i64 %indvars.iv109, i64 %indvars.iv113, !dbg !843
  store i32 0, i32* %71, align 4, !dbg !846, !tbaa !778
  %indvars.iv.next110 = add nsw i64 %indvars.iv109, 1, !dbg !838
  %lftr.wideiv111 = trunc i64 %indvars.iv109 to i32, !dbg !838
  %exitcond112 = icmp eq i32 %lftr.wideiv111, %61, !dbg !838
  br i1 %exitcond112, label %72, label %70, !dbg !838

; <label>:72                                      ; preds = %70
  %indvars.iv.next114 = add nsw i64 %indvars.iv113, 1, !dbg !835
  %lftr.wideiv115 = trunc i64 %indvars.iv113 to i32, !dbg !835
  %exitcond116 = icmp eq i32 %lftr.wideiv115, %64, !dbg !835
  br i1 %exitcond116, label %.preheader23, label %.preheader25, !dbg !835

.preheader22:                                     ; preds = %76, %.preheader23
  %indvars.iv105 = phi i64 [ %68, %.preheader23 ], [ %indvars.iv.next106, %76 ]
  br label %73, !dbg !847

; <label>:73                                      ; preds = %73, %.preheader22
  %indvars.iv99 = phi i64 [ %66, %.preheader22 ], [ %indvars.iv.next100, %73 ]
  %74 = getelementptr inbounds [2 x [4 x [4 x i32]]]* %mv, i64 0, i64 1, i64 %indvars.iv105, i64 %indvars.iv99, !dbg !850
  store i32 0, i32* %74, align 4, !dbg !853, !tbaa !778
  %75 = getelementptr inbounds [2 x [4 x [4 x i32]]]* %mv, i64 0, i64 0, i64 %indvars.iv105, i64 %indvars.iv99, !dbg !854
  store i32 0, i32* %75, align 4, !dbg !855, !tbaa !778
  %indvars.iv.next100 = add nsw i64 %indvars.iv99, 1, !dbg !847
  %lftr.wideiv101 = trunc i64 %indvars.iv99 to i32, !dbg !847
  %exitcond102 = icmp eq i32 %lftr.wideiv101, %67, !dbg !847
  br i1 %exitcond102, label %76, label %73, !dbg !847

; <label>:76                                      ; preds = %73
  %indvars.iv.next106 = add nsw i64 %indvars.iv105, 1, !dbg !841
  %lftr.wideiv107 = trunc i64 %indvars.iv105 to i32, !dbg !841
  %exitcond108 = icmp eq i32 %lftr.wideiv107, %69, !dbg !841
  br i1 %exitcond108, label %.loopexit24, label %.preheader22, !dbg !841

; <label>:77                                      ; preds = %54, %55, %52
  %b8mode.off = add i32 %b8mode, -1, !dbg !856
  %78 = icmp ult i32 %b8mode.off, 7, !dbg !856
  tail call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !34, metadata !762), !dbg !859
  br i1 %78, label %.preheader18, label %.preheader20, !dbg !856

.preheader20:                                     ; preds = %77
  %79 = shl nsw i32 %12, 1, !dbg !860
  %80 = sext i32 %79 to i64
  %81 = or i32 %79, 1, !dbg !860
  %82 = sext i32 %16 to i64
  %83 = or i32 %16, 1, !dbg !860
  br label %.preheader19, !dbg !860

.preheader18:                                     ; preds = %77
  %84 = sext i32 %b8mode to i64, !dbg !863
  %85 = sext i32 %b8ref to i64, !dbg !863
  %86 = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 71, !dbg !870
  %87 = load i16******* %86, align 8, !dbg !870, !tbaa !871
  %88 = shl nsw i32 %12, 1, !dbg !872
  %89 = sext i32 %88 to i64
  %90 = or i32 %88, 1, !dbg !872
  %91 = sext i32 %16 to i64
  %92 = or i32 %16, 1, !dbg !872
  br label %.preheader17, !dbg !872

.preheader17:                                     ; preds = %119, %.preheader18
  %indvars.iv85 = phi i64 [ %91, %.preheader18 ], [ %indvars.iv.next86, %119 ]
  br label %102, !dbg !873

.preheader15:                                     ; preds = %123, %119
  %93 = load %struct.Decoders** @decs, align 8, !dbg !874, !tbaa !769
  %94 = getelementptr inbounds %struct.Decoders* %93, i64 0, i32 0, !dbg !880
  %95 = load i32*** %94, align 8, !dbg !880, !tbaa !881
  %96 = shl i32 %14, 3, !dbg !882
  %97 = sext i32 %96 to i64
  %98 = or i32 %96, 7, !dbg !882
  %99 = shl nsw i32 %12, 3, !dbg !882
  %100 = sext i32 %99 to i64
  %101 = or i32 %99, 7, !dbg !882
  br label %.preheader14, !dbg !882

; <label>:102                                     ; preds = %102, %.preheader17
  %indvars.iv81 = phi i64 [ %89, %.preheader17 ], [ %indvars.iv.next82, %102 ]
  %103 = getelementptr inbounds i16****** %87, i64 %indvars.iv81, !dbg !863
  %104 = load i16****** %103, align 8, !dbg !863, !tbaa !769
  %105 = getelementptr inbounds i16***** %104, i64 %indvars.iv85, !dbg !863
  %106 = load i16***** %105, align 8, !dbg !863, !tbaa !769
  %107 = load i16**** %106, align 8, !dbg !863, !tbaa !769
  %108 = getelementptr inbounds i16*** %107, i64 %85, !dbg !863
  %109 = load i16*** %108, align 8, !dbg !863, !tbaa !769
  %110 = getelementptr inbounds i16** %109, i64 %84, !dbg !863
  %111 = load i16** %110, align 8, !dbg !863, !tbaa !769
  %112 = load i16* %111, align 2, !dbg !863, !tbaa !823
  %113 = sext i16 %112 to i32, !dbg !863
  %114 = getelementptr inbounds [2 x [4 x [4 x i32]]]* %mv, i64 0, i64 0, i64 %indvars.iv85, i64 %indvars.iv81, !dbg !883
  store i32 %113, i32* %114, align 4, !dbg !884, !tbaa !778
  %115 = getelementptr inbounds i16* %111, i64 1, !dbg !885
  %116 = load i16* %115, align 2, !dbg !885, !tbaa !823
  %117 = sext i16 %116 to i32, !dbg !885
  %118 = getelementptr inbounds [2 x [4 x [4 x i32]]]* %mv, i64 0, i64 1, i64 %indvars.iv85, i64 %indvars.iv81, !dbg !886
  store i32 %117, i32* %118, align 4, !dbg !887, !tbaa !778
  %indvars.iv.next82 = add nsw i64 %indvars.iv81, 1, !dbg !873
  %lftr.wideiv83 = trunc i64 %indvars.iv81 to i32, !dbg !873
  %exitcond84 = icmp eq i32 %lftr.wideiv83, %90, !dbg !873
  br i1 %exitcond84, label %119, label %102, !dbg !873

; <label>:119                                     ; preds = %102
  %indvars.iv.next86 = add nsw i64 %indvars.iv85, 1, !dbg !872
  %lftr.wideiv87 = trunc i64 %indvars.iv85 to i32, !dbg !872
  %exitcond88 = icmp eq i32 %lftr.wideiv87, %92, !dbg !872
  br i1 %exitcond88, label %.preheader15, label %.preheader17, !dbg !872

.preheader19:                                     ; preds = %123, %.preheader20
  %indvars.iv95 = phi i64 [ %82, %.preheader20 ], [ %indvars.iv.next96, %123 ]
  br label %120, !dbg !888

; <label>:120                                     ; preds = %120, %.preheader19
  %indvars.iv89 = phi i64 [ %80, %.preheader19 ], [ %indvars.iv.next90, %120 ]
  %121 = getelementptr inbounds [2 x [4 x [4 x i32]]]* %mv, i64 0, i64 1, i64 %indvars.iv95, i64 %indvars.iv89, !dbg !891
  store i32 0, i32* %121, align 4, !dbg !894, !tbaa !778
  %122 = getelementptr inbounds [2 x [4 x [4 x i32]]]* %mv, i64 0, i64 0, i64 %indvars.iv95, i64 %indvars.iv89, !dbg !895
  store i32 0, i32* %122, align 4, !dbg !896, !tbaa !778
  %indvars.iv.next90 = add nsw i64 %indvars.iv89, 1, !dbg !888
  %lftr.wideiv91 = trunc i64 %indvars.iv89 to i32, !dbg !888
  %exitcond92 = icmp eq i32 %lftr.wideiv91, %81, !dbg !888
  br i1 %exitcond92, label %123, label %120, !dbg !888

; <label>:123                                     ; preds = %120
  %indvars.iv.next96 = add nsw i64 %indvars.iv95, 1, !dbg !860
  %lftr.wideiv97 = trunc i64 %indvars.iv95 to i32, !dbg !860
  %exitcond98 = icmp eq i32 %lftr.wideiv97, %83, !dbg !860
  br i1 %exitcond98, label %.preheader15, label %.preheader19, !dbg !860

.preheader14:                                     ; preds = %130, %.preheader15
  %indvars.iv77 = phi i64 [ %100, %.preheader15 ], [ %indvars.iv.next78, %130 ]
  br label %124, !dbg !897

; <label>:124                                     ; preds = %124, %.preheader14
  %indvars.iv73 = phi i64 [ %97, %.preheader14 ], [ %indvars.iv.next74, %124 ]
  %125 = getelementptr inbounds i32** %95, i64 %indvars.iv73, !dbg !874
  %126 = load i32** %125, align 8, !dbg !874, !tbaa !769
  %127 = getelementptr inbounds i32* %126, i64 %indvars.iv77, !dbg !874
  %128 = load i32* %127, align 4, !dbg !874, !tbaa !778
  %129 = getelementptr inbounds [16 x [16 x i32]]* %resY_tmp, i64 0, i64 %indvars.iv73, i64 %indvars.iv77, !dbg !898
  store i32 %128, i32* %129, align 4, !dbg !899, !tbaa !778
  %indvars.iv.next74 = add nsw i64 %indvars.iv73, 1, !dbg !897
  %lftr.wideiv75 = trunc i64 %indvars.iv73 to i32, !dbg !897
  %exitcond76 = icmp eq i32 %lftr.wideiv75, %98, !dbg !897
  br i1 %exitcond76, label %130, label %124, !dbg !897

; <label>:130                                     ; preds = %124
  %indvars.iv.next78 = add nsw i64 %indvars.iv77, 1, !dbg !882
  %lftr.wideiv79 = trunc i64 %indvars.iv77 to i32, !dbg !882
  %exitcond80 = icmp eq i32 %lftr.wideiv79, %101, !dbg !882
  br i1 %exitcond80, label %.loopexit16, label %.preheader14, !dbg !882

.loopexit24:                                      ; preds = %76
  %.pre = add i32 %b8mode, -1, !dbg !900
  br label %.loopexit16

.loopexit16:                                      ; preds = %130, %.loopexit24
  %b8mode.off4.pre-phi = phi i32 [ %.pre, %.loopexit24 ], [ %b8mode.off, %130 ], !dbg !900
  %131 = icmp ult i32 %b8mode.off4.pre-phi, 7, !dbg !900
  br i1 %131, label %.preheader9, label %132, !dbg !900

; <label>:132                                     ; preds = %.loopexit16
  br i1 %53, label %154, label %.preheader12, !dbg !902

.preheader12:                                     ; preds = %154, %155, %132
  %133 = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 33, !dbg !903
  %134 = load i32* %133, align 4, !dbg !903, !tbaa !808
  %135 = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 34, !dbg !910
  %136 = load i32* %135, align 4, !dbg !910, !tbaa !810
  %137 = load %struct.storable_picture** @enc_picture, align 8, !dbg !911, !tbaa !769
  %138 = getelementptr inbounds %struct.storable_picture* %137, i64 0, i32 25, !dbg !912
  %139 = load i16*** %138, align 8, !dbg !912, !tbaa !813
  %140 = sext i32 %decoder to i64, !dbg !913
  %141 = load %struct.Decoders** @decs, align 8, !dbg !913, !tbaa !769
  %142 = getelementptr inbounds %struct.Decoders* %141, i64 0, i32 1, !dbg !914
  %143 = load i16**** %142, align 8, !dbg !914, !tbaa !817
  %144 = getelementptr inbounds i16*** %143, i64 %140, !dbg !913
  %145 = load i16*** %144, align 8, !dbg !913, !tbaa !769
  %146 = shl i32 %14, 3, !dbg !915
  %147 = sext i32 %146 to i64
  %148 = sext i32 %136 to i64, !dbg !915
  %149 = or i32 %146, 7, !dbg !915
  %150 = shl nsw i32 %12, 3, !dbg !915
  %151 = sext i32 %150 to i64
  %152 = sext i32 %134 to i64, !dbg !915
  %153 = or i32 %150, 7, !dbg !915
  br label %.preheader11, !dbg !915

; <label>:154                                     ; preds = %132
  switch i32 %18, label %.preheader12 [
    i32 0, label %.preheader9
    i32 1, label %155
  ], !dbg !916

; <label>:155                                     ; preds = %154
  %156 = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 113, !dbg !917
  %157 = load i32* %156, align 4, !dbg !917, !tbaa !832
  %158 = icmp sgt i32 %157, 0, !dbg !918
  br i1 %158, label %.preheader9, label %.preheader12, !dbg !919

.preheader9:                                      ; preds = %154, %.loopexit16, %155
  %159 = sub i32 -2, %b8ref, !dbg !920
  %160 = sext i32 %decoder to i64, !dbg !928
  %161 = shl nsw i32 %12, 1, !dbg !929
  %162 = sext i32 %161 to i64
  %163 = or i32 %161, 1, !dbg !929
  %164 = sext i32 %16 to i64
  %165 = or i32 %16, 1, !dbg !929
  br label %.preheader8, !dbg !929

.preheader8:                                      ; preds = %242, %.preheader9
  %indvars.iv61 = phi i64 [ %164, %.preheader9 ], [ %indvars.iv.next62, %242 ]
  %ref_inx.033 = phi i32 [ %9, %.preheader9 ], [ %ref_inx.2, %242 ]
  %166 = trunc i64 %indvars.iv61 to i32, !dbg !930
  %167 = shl i32 %166, 2, !dbg !930
  %168 = sext i32 %167 to i64, !dbg !936
  br label %169, !dbg !936

; <label>:169                                     ; preds = %240, %.preheader8
  %indvars.iv57 = phi i64 [ %162, %.preheader8 ], [ %indvars.iv.next58, %240 ]
  %bx.332 = phi i32 [ %13, %.preheader8 ], [ %241, %240 ]
  %ref_inx.131 = phi i32 [ %ref_inx.033, %.preheader8 ], [ %ref_inx.2, %240 ]
  %170 = load %struct.ImageParameters** @img, align 8, !dbg !937, !tbaa !769
  %171 = getelementptr inbounds %struct.ImageParameters* %170, i64 0, i32 31, !dbg !938
  %172 = load i32* %171, align 4, !dbg !938, !tbaa !939
  %173 = trunc i64 %indvars.iv57 to i32, !dbg !940
  %174 = add nsw i32 %172, %173, !dbg !940
  tail call void @llvm.dbg.value(metadata i32 %174, i64 0, metadata !32, metadata !762), !dbg !941
  %175 = getelementptr inbounds %struct.ImageParameters* %170, i64 0, i32 32, !dbg !942
  %176 = load i32* %175, align 4, !dbg !942, !tbaa !943
  %177 = add nsw i32 %176, %166, !dbg !944
  tail call void @llvm.dbg.value(metadata i32 %177, i64 0, metadata !31, metadata !762), !dbg !945
  %178 = getelementptr inbounds %struct.ImageParameters* %170, i64 0, i32 6, !dbg !946
  %179 = load i32* %178, align 4, !dbg !946, !tbaa !798
  %180 = icmp eq i32 %179, 1, !dbg !947
  br i1 %180, label %181, label %194, !dbg !948

; <label>:181                                     ; preds = %169
  %182 = load %struct.storable_picture** @enc_picture, align 8, !dbg !949, !tbaa !769
  %183 = load %struct.storable_picture** @enc_frame_picture, align 8, !dbg !950, !tbaa !769
  %184 = icmp eq %struct.storable_picture* %182, %183, !dbg !951
  br i1 %184, label %194, label %185, !dbg !952

; <label>:185                                     ; preds = %181
  %186 = getelementptr inbounds %struct.ImageParameters* %170, i64 0, i32 0, !dbg !920
  %187 = load i32* %186, align 4, !dbg !920, !tbaa !773
  %188 = load i32* @start_frame_no_in_this_IGOP, align 4, !dbg !920, !tbaa !778
  %189 = add i32 %159, %187, !dbg !953
  %190 = sub i32 %189, %188, !dbg !954
  %191 = getelementptr inbounds %struct.ImageParameters* %170, i64 0, i32 8, !dbg !955
  %192 = load i32* %191, align 4, !dbg !955, !tbaa !781
  %193 = srem i32 %190, %192, !dbg !956
  tail call void @llvm.dbg.value(metadata i32 %193, i64 0, metadata !35, metadata !762), !dbg !783
  br label %194, !dbg !957

; <label>:194                                     ; preds = %181, %185, %169
  %ref_inx.2 = phi i32 [ %193, %185 ], [ %ref_inx.131, %181 ], [ %ref_inx.131, %169 ]
  %195 = sext i32 %ref_inx.2 to i64, !dbg !928
  %196 = load %struct.Decoders** @decs, align 8, !dbg !928, !tbaa !769
  %197 = getelementptr inbounds %struct.Decoders* %196, i64 0, i32 2, !dbg !958
  %198 = load i16***** %197, align 8, !dbg !958, !tbaa !959
  %199 = getelementptr inbounds i16**** %198, i64 %160, !dbg !928
  %200 = load i16**** %199, align 8, !dbg !928, !tbaa !769
  %201 = getelementptr inbounds i16*** %200, i64 %195, !dbg !928
  %202 = load i16*** %201, align 8, !dbg !928, !tbaa !769
  %203 = getelementptr inbounds [2 x [4 x [4 x i32]]]* %mv, i64 0, i64 0, i64 %indvars.iv61, i64 %indvars.iv57, !dbg !960
  %204 = load i32* %203, align 4, !dbg !960, !tbaa !778
  %205 = getelementptr inbounds [2 x [4 x [4 x i32]]]* %mv, i64 0, i64 1, i64 %indvars.iv61, i64 %indvars.iv57, !dbg !961
  %206 = load i32* %205, align 4, !dbg !961, !tbaa !778
  %207 = getelementptr inbounds %struct.Decoders* %196, i64 0, i32 4, !dbg !962
  %208 = load i16*** %207, align 8, !dbg !962, !tbaa !963
  tail call void @Get_Reference_Block(i16** %202, i32 %177, i32 %174, i32 %204, i32 %206, i16** %208) #7, !dbg !964
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !30, metadata !762), !dbg !965
  %209 = shl i32 %bx.332, 2, !dbg !966
  %210 = load %struct.Decoders** @decs, align 8, !dbg !967, !tbaa !769
  %211 = getelementptr inbounds %struct.Decoders* %210, i64 0, i32 4, !dbg !968
  %212 = load i16*** %211, align 8, !dbg !968, !tbaa !963
  %213 = shl i32 %174, 2, !dbg !969
  %214 = shl i32 %177, 2, !dbg !970
  %215 = getelementptr inbounds %struct.Decoders* %210, i64 0, i32 1, !dbg !971
  %216 = load i16**** %215, align 8, !dbg !971, !tbaa !817
  %217 = getelementptr inbounds i16*** %216, i64 %160, !dbg !972
  %218 = load i16*** %217, align 8, !dbg !972, !tbaa !769
  %219 = sext i32 %213 to i64, !dbg !973
  %220 = sext i32 %209 to i64, !dbg !973
  %221 = sext i32 %214 to i64, !dbg !973
  br label %.preheader7, !dbg !973

.preheader7:                                      ; preds = %239, %194
  %indvars.iv54 = phi i64 [ 0, %194 ], [ %indvars.iv.next55, %239 ]
  %222 = add nsw i64 %indvars.iv54, %168, !dbg !974
  %223 = getelementptr inbounds i16** %212, i64 %indvars.iv54, !dbg !967
  %224 = load i16** %223, align 8, !dbg !967, !tbaa !769
  %225 = add nsw i64 %indvars.iv54, %221, !dbg !975
  %226 = getelementptr inbounds i16** %218, i64 %225, !dbg !972
  %227 = load i16** %226, align 8, !dbg !972, !tbaa !769
  br label %228, !dbg !976

; <label>:228                                     ; preds = %228, %.preheader7
  %indvars.iv51 = phi i64 [ 0, %.preheader7 ], [ %indvars.iv.next52, %228 ]
  %229 = add nsw i64 %indvars.iv51, %220, !dbg !977
  %230 = getelementptr inbounds [16 x [16 x i32]]* %resY_tmp, i64 0, i64 %222, i64 %229, !dbg !978
  %231 = load i32* %230, align 4, !dbg !978, !tbaa !778
  %232 = getelementptr inbounds i16* %224, i64 %indvars.iv51, !dbg !967
  %233 = load i16* %232, align 2, !dbg !967, !tbaa !823
  %234 = zext i16 %233 to i32, !dbg !967
  %235 = add nsw i32 %234, %231, !dbg !979
  %236 = trunc i32 %235 to i16, !dbg !978
  %237 = add nsw i64 %indvars.iv51, %219, !dbg !980
  %238 = getelementptr inbounds i16* %227, i64 %237, !dbg !972
  store i16 %236, i16* %238, align 2, !dbg !981, !tbaa !823
  %indvars.iv.next52 = add nuw nsw i64 %indvars.iv51, 1, !dbg !976
  %exitcond53 = icmp eq i64 %indvars.iv.next52, 4, !dbg !976
  br i1 %exitcond53, label %239, label %228, !dbg !976

; <label>:239                                     ; preds = %228
  %indvars.iv.next55 = add nuw nsw i64 %indvars.iv54, 1, !dbg !973
  %exitcond56 = icmp eq i64 %indvars.iv.next55, 4, !dbg !973
  br i1 %exitcond56, label %240, label %.preheader7, !dbg !973

; <label>:240                                     ; preds = %239
  %indvars.iv.next58 = add nsw i64 %indvars.iv57, 1, !dbg !936
  %241 = add nsw i32 %bx.332, 1, !dbg !982
  tail call void @llvm.dbg.value(metadata i32 %241, i64 0, metadata !33, metadata !762), !dbg !983
  %exitcond60 = icmp eq i32 %173, %163, !dbg !936
  br i1 %exitcond60, label %242, label %169, !dbg !936

; <label>:242                                     ; preds = %240
  %indvars.iv.next62 = add nsw i64 %indvars.iv61, 1, !dbg !929
  %exitcond64 = icmp eq i32 %166, %165, !dbg !929
  br i1 %exitcond64, label %.loopexit, label %.preheader8, !dbg !929

.preheader11:                                     ; preds = %253, %.preheader12
  %indvars.iv69 = phi i64 [ %151, %.preheader12 ], [ %indvars.iv.next70, %253 ]
  %243 = add nsw i64 %152, %indvars.iv69, !dbg !984
  br label %244, !dbg !985

; <label>:244                                     ; preds = %244, %.preheader11
  %indvars.iv65 = phi i64 [ %147, %.preheader11 ], [ %indvars.iv.next66, %244 ]
  %245 = add nsw i64 %148, %indvars.iv65, !dbg !986
  %246 = getelementptr inbounds i16** %139, i64 %245, !dbg !911
  %247 = load i16** %246, align 8, !dbg !911, !tbaa !769
  %248 = getelementptr inbounds i16* %247, i64 %243, !dbg !911
  %249 = load i16* %248, align 2, !dbg !911, !tbaa !823
  %250 = getelementptr inbounds i16** %145, i64 %245, !dbg !913
  %251 = load i16** %250, align 8, !dbg !913, !tbaa !769
  %252 = getelementptr inbounds i16* %251, i64 %243, !dbg !913
  store i16 %249, i16* %252, align 2, !dbg !987, !tbaa !823
  %indvars.iv.next66 = add nsw i64 %indvars.iv65, 1, !dbg !985
  %lftr.wideiv67 = trunc i64 %indvars.iv65 to i32, !dbg !985
  %exitcond68 = icmp eq i32 %lftr.wideiv67, %149, !dbg !985
  br i1 %exitcond68, label %253, label %244, !dbg !985

; <label>:253                                     ; preds = %244
  %indvars.iv.next70 = add nsw i64 %indvars.iv69, 1, !dbg !915
  %lftr.wideiv71 = trunc i64 %indvars.iv69 to i32, !dbg !915
  %exitcond72 = icmp eq i32 %lftr.wideiv71, %153, !dbg !915
  br i1 %exitcond72, label %.loopexit, label %.preheader11, !dbg !915

.loopexit:                                        ; preds = %253, %242, %51
  call void @llvm.lifetime.end(i64 1024, i8* %11) #2, !dbg !988
  call void @llvm.lifetime.end(i64 128, i8* %10) #2, !dbg !988
  ret void, !dbg !988
}
