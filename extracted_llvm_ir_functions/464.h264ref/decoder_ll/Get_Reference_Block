define void @Get_Reference_Block(i16** nocapture %imY, i32 %block_y, i32 %block_x, i32 %mvhor, i32 %mvver, i16** nocapture %out) #0 {
entry:
  %mul1 = shl i32 %block_y, 4
  %add = add nsw i32 %mul1, %mvver
  %mul3 = shl i32 %block_x, 4
  %add4 = add nsw i32 %mul3, %mvhor
  %0 = zext i32 %add4 to i64
  %1 = zext i32 %add to i64
  br label %for.cond5.preheader

for.cond5.preheader:                              ; preds = %for.inc14, %entry
  %indvars.iv27 = phi i64 [ 0, %entry ], [ %indvars.iv.next28, %for.inc14 ]
  %2 = shl i64 %indvars.iv27, 2
  %3 = add nsw i64 %1, %2
  %arrayidx = getelementptr inbounds i16** %out, i64 %indvars.iv27
  %.pre = load i16** %arrayidx, align 8, !tbaa !0
  br label %for.body7

for.body7:                                        ; preds = %for.body7, %for.cond5.preheader
  %indvars.iv = phi i64 [ 0, %for.cond5.preheader ], [ %indvars.iv.next, %for.body7 ]
  %4 = shl i64 %indvars.iv, 2
  %5 = add nsw i64 %0, %4
  %6 = trunc i64 %5 to i32
  %7 = trunc i64 %3 to i32
  %call = tail call zeroext i8 @Get_Reference_Pixel(i16** %imY, i32 %7, i32 %6) #5
  %conv = zext i8 %call to i16
  %arrayidx13 = getelementptr inbounds i16* %.pre, i64 %indvars.iv
  store i16 %conv, i16* %arrayidx13, align 2, !tbaa !4
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 4
  br i1 %exitcond, label %for.inc14, label %for.body7

for.inc14:                                        ; preds = %for.body7
  %indvars.iv.next28 = add i64 %indvars.iv27, 1
  %lftr.wideiv31 = trunc i64 %indvars.iv.next28 to i32
  %exitcond32 = icmp eq i32 %lftr.wideiv31, 4
  br i1 %exitcond32, label %for.end16, label %for.cond5.preheader

for.end16:                                        ; preds = %for.inc14
  ret void
}
