define void @GetStrength(i8* nocapture %Strength, %struct.ImageParameters* nocapture %img, i32 %MbQAddr, i32 %dir, i32 %edge, i32 %mvlimit) #0 {
entry:
  %mb_x = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %pixP = alloca %struct.pix_pos, align 4
  %0 = load %struct.storable_picture** @enc_picture, align 8, !tbaa !3
  %mv = getelementptr inbounds %struct.storable_picture* %0, i64 0, i32 35
  %1 = load i16***** %mv, align 8, !tbaa !3
  %2 = load i16**** %1, align 8, !tbaa !3
  %arrayidx2 = getelementptr inbounds i16**** %1, i64 1
  %3 = load i16**** %arrayidx2, align 8, !tbaa !3
  %ref_idx = getelementptr inbounds %struct.storable_picture* %0, i64 0, i32 32
  %4 = load i16**** %ref_idx, align 8, !tbaa !3
  %5 = load i16*** %4, align 8, !tbaa !3
  %arrayidx5 = getelementptr inbounds i16*** %4, i64 1
  %6 = load i16*** %arrayidx5, align 8, !tbaa !3
  %ref_pic_id = getelementptr inbounds %struct.storable_picture* %0, i64 0, i32 33
  %7 = load i64**** %ref_pic_id, align 8, !tbaa !3
  %8 = load i64*** %7, align 8, !tbaa !3
  %arrayidx8 = getelementptr inbounds i64*** %7, i64 1
  %9 = load i64*** %arrayidx8, align 8, !tbaa !3
  %idxprom = sext i32 %MbQAddr to i64
  %mb_data = getelementptr inbounds %struct.ImageParameters* %img, i64 0, i32 51
  %10 = load %struct.macroblock** %mb_data, align 8, !tbaa !3
  %tobool = icmp ne i32 %dir, 0
  %shl = shl i32 %edge, 2
  %cmp12 = icmp slt i32 %edge, 4
  %shl14. = select i1 %cmp12, i32 %shl, i32 1
  %sub713 = add i32 %dir, -1
  %x = getelementptr inbounds %struct.pix_pos* %pixP, i64 0, i32 2
  %y = getelementptr inbounds %struct.pix_pos* %pixP, i64 0, i32 3
  %mb_addr = getelementptr inbounds %struct.pix_pos* %pixP, i64 0, i32 1
  %mb_field = getelementptr inbounds %struct.macroblock* %10, i64 %idxprom, i32 22
  %type = getelementptr inbounds %struct.ImageParameters* %img, i64 0, i32 6
  %cmp40 = icmp eq i32 %edge, 0
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters* %img, i64 0, i32 90
  %structure = getelementptr inbounds %struct.ImageParameters* %img, i64 0, i32 7
  %phitmp747 = select i1 %tobool, i8 3, i8 4
  %mb_type117 = getelementptr inbounds %struct.macroblock* %10, i64 %idxprom, i32 8
  %cbp_blk = getelementptr inbounds %struct.macroblock* %10, i64 %idxprom, i32 13
  %pos_y = getelementptr inbounds %struct.pix_pos* %pixP, i64 0, i32 5
  %pos_x = getelementptr inbounds %struct.pix_pos* %pixP, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.inc ]
  %11 = trunc i64 %indvars.iv to i32
  %cond = select i1 %tobool, i32 %11, i32 %shl
  %shl14.. = select i1 %tobool, i32 %shl14., i32 %11
  %sub21 = add i32 %sub713, %cond
  %sub22 = sub nsw i32 %shl14.., %dir
  call void @getNeighbour(i32 %MbQAddr, i32 %sub21, i32 %sub22, i32 1, %struct.pix_pos* %pixP) #4
  %12 = load i32* %x, align 4, !tbaa !0
  %13 = load i32* %y, align 4, !tbaa !0
  %14 = load i32* %mb_addr, align 4, !tbaa !0
  %idxprom23 = sext i32 %14 to i64
  %15 = load %struct.macroblock** %mb_data, align 8, !tbaa !3
  %16 = load i32* %mb_field, align 4, !tbaa !0
  %mb_field26 = getelementptr inbounds %struct.macroblock* %15, i64 %idxprom23, i32 22
  %17 = load i32* %mb_field26, align 4, !tbaa !0
  %cmp27 = icmp ne i32 %16, %17
  %conv28 = zext i1 %cmp27 to i8
  store i8 %conv28, i8* @mixedModeEdgeFlag, align 1, !tbaa !1
  %shr714 = and i32 %shl14.., -4
  %shr30 = ashr i32 %cond, 2
  %add = add nsw i32 %shr714, %shr30
  %shr31715 = and i32 %13, -4
  %shr33 = ashr i32 %12, 2
  %add34 = add nsw i32 %shr31715, %shr33
  %18 = load i32* %type, align 4, !tbaa !0
  %.off = add i32 %18, -3
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  br i1 %cmp40, label %land.rhs, label %land.end62

land.rhs:                                         ; preds = %if.then
  %19 = load i32* %MbaffFrameFlag, align 4, !tbaa !0
  %tobool42 = icmp eq i32 %19, 0
  br i1 %tobool42, label %land.lhs.true, label %land.lhs.true48

land.lhs.true:                                    ; preds = %land.rhs
  %20 = load i32* %structure, align 4, !tbaa !0
  %cmp43 = icmp eq i32 %20, 0
  br i1 %cmp43, label %land.end62, label %land.rhs60

land.lhs.true48:                                  ; preds = %land.rhs
  %21 = load i32* %mb_field26, align 4, !tbaa !0
  %tobool50 = icmp eq i32 %21, 0
  br i1 %tobool50, label %land.lhs.true51, label %land.rhs60

land.lhs.true51:                                  ; preds = %land.lhs.true48
  %22 = load i32* %mb_field, align 4, !tbaa !0
  %tobool53 = icmp eq i32 %22, 0
  br i1 %tobool53, label %land.end62, label %lor.rhs

lor.rhs:                                          ; preds = %land.lhs.true51
  br i1 %tobool42, label %lor.lhs.false56, label %land.rhs60

lor.lhs.false56:                                  ; preds = %lor.rhs
  %.pre = load i32* %structure, align 4, !tbaa !0
  %cmp58 = icmp eq i32 %.pre, 0
  br i1 %cmp58, label %land.end62, label %land.rhs60

land.rhs60:                                       ; preds = %land.lhs.true48, %land.lhs.true, %lor.lhs.false56, %lor.rhs
  br label %land.end62

land.end62:                                       ; preds = %land.lhs.true51, %lor.lhs.false56, %land.lhs.true, %land.rhs60, %if.then
  %23 = phi i8 [ 3, %if.then ], [ 4, %land.lhs.true51 ], [ 4, %land.lhs.true ], [ 3, %lor.lhs.false56 ], [ %phitmp747, %land.rhs60 ]
  %arrayidx66 = getelementptr inbounds i8* %Strength, i64 %indvars.iv
  store i8 %23, i8* %arrayidx66, align 1, !tbaa !1
  br label %for.inc

if.else:                                          ; preds = %for.body
  br i1 %cmp40, label %land.rhs69, label %land.end97

land.rhs69:                                       ; preds = %if.else
  %24 = load i32* %MbaffFrameFlag, align 4, !tbaa !0
  %tobool71 = icmp eq i32 %24, 0
  br i1 %tobool71, label %land.lhs.true72, label %land.lhs.true79

land.lhs.true72:                                  ; preds = %land.rhs69
  %25 = load i32* %structure, align 4, !tbaa !0
  %cmp74 = icmp eq i32 %25, 0
  br i1 %cmp74, label %land.end97, label %land.rhs92

land.lhs.true79:                                  ; preds = %land.rhs69
  %26 = load i32* %mb_field26, align 4, !tbaa !0
  %tobool81 = icmp eq i32 %26, 0
  br i1 %tobool81, label %land.lhs.true82, label %land.rhs92

land.lhs.true82:                                  ; preds = %land.lhs.true79
  %27 = load i32* %mb_field, align 4, !tbaa !0
  %tobool84 = icmp eq i32 %27, 0
  br i1 %tobool84, label %land.end97, label %lor.rhs85

lor.rhs85:                                        ; preds = %land.lhs.true82
  br i1 %tobool71, label %lor.lhs.false88, label %land.rhs92

lor.lhs.false88:                                  ; preds = %lor.rhs85
  %.pre758 = load i32* %structure, align 4, !tbaa !0
  %cmp90 = icmp eq i32 %.pre758, 0
  br i1 %cmp90, label %land.end97, label %land.rhs92

land.rhs92:                                       ; preds = %land.lhs.true79, %land.lhs.true72, %lor.lhs.false88, %lor.rhs85
  br label %land.end97

land.end97:                                       ; preds = %land.lhs.true82, %lor.lhs.false88, %land.lhs.true72, %land.rhs92, %if.else
  %28 = phi i8 [ 3, %if.else ], [ 4, %land.lhs.true82 ], [ 4, %land.lhs.true72 ], [ 3, %lor.lhs.false88 ], [ %phitmp747, %land.rhs92 ]
  %arrayidx101 = getelementptr inbounds i8* %Strength, i64 %indvars.iv
  store i8 %28, i8* %arrayidx101, align 1, !tbaa !1
  %mb_type = getelementptr inbounds %struct.macroblock* %15, i64 %idxprom23, i32 8
  %29 = load i32* %mb_type, align 4, !tbaa !0
  switch i32 %29, label %land.lhs.true116 [
    i32 9, label %for.inc
    i32 10, label %for.inc
    i32 14, label %for.inc
    i32 13, label %for.inc
  ]

land.lhs.true116:                                 ; preds = %land.end97
  %30 = load i32* %mb_type117, align 4, !tbaa !0
  switch i32 %30, label %if.then132 [
    i32 9, label %for.inc
    i32 10, label %for.inc
    i32 14, label %for.inc
    i32 13, label %for.inc
  ]

if.then132:                                       ; preds = %land.lhs.true116
  %31 = load i64* %cbp_blk, align 8, !tbaa !4
  %shl133 = shl i32 1, %add
  %conv134 = sext i32 %shl133 to i64
  %and = and i64 %31, %conv134
  %cmp135 = icmp eq i64 %and, 0
  br i1 %cmp135, label %lor.lhs.false137, label %if.then144

lor.lhs.false137:                                 ; preds = %if.then132
  %cbp_blk138 = getelementptr inbounds %struct.macroblock* %15, i64 %idxprom23, i32 13
  %32 = load i64* %cbp_blk138, align 8, !tbaa !4
  %shl139 = shl i32 1, %add34
  %conv140 = sext i32 %shl139 to i64
  %and141 = and i64 %32, %conv140
  %cmp142 = icmp eq i64 %and141, 0
  br i1 %cmp142, label %if.else147, label %if.then144

if.then144:                                       ; preds = %lor.lhs.false137, %if.then132
  store i8 2, i8* %arrayidx101, align 1, !tbaa !1
  br label %for.inc

if.else147:                                       ; preds = %lor.lhs.false137
  %33 = load i8* @mixedModeEdgeFlag, align 1, !tbaa !1
  %tobool148 = icmp eq i8 %33, 0
  br i1 %tobool148, label %if.else152, label %if.then149

if.then149:                                       ; preds = %if.else147
  store i8 1, i8* %arrayidx101, align 1, !tbaa !1
  br label %for.inc

if.else152:                                       ; preds = %if.else147
  call void @get_mb_block_pos(i32 %MbQAddr, i32* %mb_x, i32* %mb_y) #4
  %34 = load i32* %mb_y, align 4, !tbaa !0
  %shl153 = shl i32 %34, 2
  %shr154 = ashr i32 %add, 2
  %add155 = add nsw i32 %shl153, %shr154
  %35 = load i32* %mb_x, align 4, !tbaa !0
  %shl156 = shl i32 %35, 2
  %and157 = and i32 %add, 3
  %add158 = or i32 %shl156, %and157
  %36 = load i32* %pos_y, align 4, !tbaa !0
  %shr159 = ashr i32 %36, 2
  %37 = load i32* %pos_x, align 4, !tbaa !0
  %shr160 = ashr i32 %37, 2
  %idxprom161 = sext i32 %add155 to i64
  %idxprom162 = sext i32 %add158 to i64
  %arrayidx163 = getelementptr inbounds i16** %5, i64 %idxprom162
  %38 = load i16** %arrayidx163, align 8, !tbaa !3
  %arrayidx164 = getelementptr inbounds i16* %38, i64 %idxprom161
  %39 = load i16* %arrayidx164, align 2, !tbaa !5
  %cmp166 = icmp slt i16 %39, 0
  br i1 %cmp166, label %cond.end174, label %cond.false169

cond.false169:                                    ; preds = %if.else152
  %arrayidx172 = getelementptr inbounds i64** %8, i64 %idxprom162
  %40 = load i64** %arrayidx172, align 8, !tbaa !3
  %arrayidx173 = getelementptr inbounds i64* %40, i64 %idxprom161
  %41 = load i64* %arrayidx173, align 8, !tbaa !4
  br label %cond.end174

cond.end174:                                      ; preds = %if.else152, %cond.false169
  %cond175 = phi i64 [ %41, %cond.false169 ], [ -1, %if.else152 ]
  %idxprom176 = sext i32 %shr159 to i64
  %idxprom177 = sext i32 %shr160 to i64
  %arrayidx178 = getelementptr inbounds i16** %5, i64 %idxprom177
  %42 = load i16** %arrayidx178, align 8, !tbaa !3
  %arrayidx179 = getelementptr inbounds i16* %42, i64 %idxprom176
  %43 = load i16* %arrayidx179, align 2, !tbaa !5
  %cmp181 = icmp slt i16 %43, 0
  br i1 %cmp181, label %cond.end189, label %cond.false184

cond.false184:                                    ; preds = %cond.end174
  %arrayidx187 = getelementptr inbounds i64** %8, i64 %idxprom177
  %44 = load i64** %arrayidx187, align 8, !tbaa !3
  %arrayidx188 = getelementptr inbounds i64* %44, i64 %idxprom176
  %45 = load i64* %arrayidx188, align 8, !tbaa !4
  br label %cond.end189

cond.end189:                                      ; preds = %cond.end174, %cond.false184
  %cond190 = phi i64 [ %45, %cond.false184 ], [ -1, %cond.end174 ]
  %arrayidx193 = getelementptr inbounds i16** %6, i64 %idxprom162
  %46 = load i16** %arrayidx193, align 8, !tbaa !3
  %arrayidx194 = getelementptr inbounds i16* %46, i64 %idxprom161
  %47 = load i16* %arrayidx194, align 2, !tbaa !5
  %cmp196 = icmp slt i16 %47, 0
  br i1 %cmp196, label %cond.end204, label %cond.false199

cond.false199:                                    ; preds = %cond.end189
  %arrayidx202 = getelementptr inbounds i64** %9, i64 %idxprom162
  %48 = load i64** %arrayidx202, align 8, !tbaa !3
  %arrayidx203 = getelementptr inbounds i64* %48, i64 %idxprom161
  %49 = load i64* %arrayidx203, align 8, !tbaa !4
  br label %cond.end204

cond.end204:                                      ; preds = %cond.end189, %cond.false199
  %cond205 = phi i64 [ %49, %cond.false199 ], [ -1, %cond.end189 ]
  %arrayidx208 = getelementptr inbounds i16** %6, i64 %idxprom177
  %50 = load i16** %arrayidx208, align 8, !tbaa !3
  %arrayidx209 = getelementptr inbounds i16* %50, i64 %idxprom176
  %51 = load i16* %arrayidx209, align 2, !tbaa !5
  %cmp211 = icmp slt i16 %51, 0
  br i1 %cmp211, label %cond.end219, label %cond.false214

cond.false214:                                    ; preds = %cond.end204
  %arrayidx217 = getelementptr inbounds i64** %9, i64 %idxprom177
  %52 = load i64** %arrayidx217, align 8, !tbaa !3
  %arrayidx218 = getelementptr inbounds i64* %52, i64 %idxprom176
  %53 = load i64* %arrayidx218, align 8, !tbaa !4
  br label %cond.end219

cond.end219:                                      ; preds = %cond.end204, %cond.false214
  %cond220 = phi i64 [ %53, %cond.false214 ], [ -1, %cond.end204 ]
  %cmp221 = icmp eq i64 %cond175, %cond190
  %cmp224 = icmp eq i64 %cond205, %cond220
  %or.cond = and i1 %cmp221, %cmp224
  br i1 %or.cond, label %if.then232, label %lor.lhs.false226

lor.lhs.false226:                                 ; preds = %cond.end219
  %cmp227 = icmp eq i64 %cond175, %cond220
  %cmp230 = icmp eq i64 %cond205, %cond190
  %or.cond748 = and i1 %cmp227, %cmp230
  br i1 %or.cond748, label %if.then232, label %if.else523

if.then232:                                       ; preds = %lor.lhs.false226, %cond.end219
  store i8 0, i8* %arrayidx101, align 1, !tbaa !1
  %cmp235 = icmp eq i64 %cond175, %cond205
  %arrayidx383 = getelementptr inbounds i16*** %2, i64 %idxprom162
  %54 = load i16*** %arrayidx383, align 8, !tbaa !3
  %arrayidx384 = getelementptr inbounds i16** %54, i64 %idxprom161
  %55 = load i16** %arrayidx384, align 8, !tbaa !3
  %56 = load i16* %55, align 2, !tbaa !5
  %conv386 = sext i16 %56 to i32
  br i1 %cmp235, label %if.else380, label %if.then237

if.then237:                                       ; preds = %if.then232
  br i1 %cmp221, label %if.then240, label %if.else309

if.then240:                                       ; preds = %if.then237
  %arrayidx249 = getelementptr inbounds i16*** %2, i64 %idxprom177
  %57 = load i16*** %arrayidx249, align 8, !tbaa !3
  %arrayidx250 = getelementptr inbounds i16** %57, i64 %idxprom176
  %58 = load i16** %arrayidx250, align 8, !tbaa !3
  %59 = load i16* %58, align 2, !tbaa !5
  %conv252 = sext i16 %59 to i32
  %sub253 = sub nsw i32 %conv386, %conv252
  %ispos739 = icmp sgt i32 %sub253, -1
  %neg740 = sub i32 0, %sub253
  %60 = select i1 %ispos739, i32 %sub253, i32 %neg740
  %cmp254 = icmp sgt i32 %60, 3
  %conv255 = zext i1 %cmp254 to i8
  %arrayidx260 = getelementptr inbounds i16* %55, i64 1
  %61 = load i16* %arrayidx260, align 2, !tbaa !5
  %conv261 = sext i16 %61 to i32
  %arrayidx266 = getelementptr inbounds i16* %58, i64 1
  %62 = load i16* %arrayidx266, align 2, !tbaa !5
  %conv267 = sext i16 %62 to i32
  %sub268 = sub nsw i32 %conv261, %conv267
  %ispos741 = icmp sgt i32 %sub268, -1
  %neg742 = sub i32 0, %sub268
  %63 = select i1 %ispos741, i32 %sub268, i32 %neg742
  %cmp270 = icmp sge i32 %63, %mvlimit
  %conv271 = zext i1 %cmp270 to i8
  %or = or i8 %conv271, %conv255
  %arrayidx274 = getelementptr inbounds i16*** %3, i64 %idxprom162
  %64 = load i16*** %arrayidx274, align 8, !tbaa !3
  %arrayidx275 = getelementptr inbounds i16** %64, i64 %idxprom161
  %65 = load i16** %arrayidx275, align 8, !tbaa !3
  %66 = load i16* %65, align 2, !tbaa !5
  %conv277 = sext i16 %66 to i32
  %arrayidx280 = getelementptr inbounds i16*** %3, i64 %idxprom177
  %67 = load i16*** %arrayidx280, align 8, !tbaa !3
  %arrayidx281 = getelementptr inbounds i16** %67, i64 %idxprom176
  %68 = load i16** %arrayidx281, align 8, !tbaa !3
  %69 = load i16* %68, align 2, !tbaa !5
  %conv283 = sext i16 %69 to i32
  %sub284 = sub nsw i32 %conv277, %conv283
  %ispos743 = icmp sgt i32 %sub284, -1
  %neg744 = sub i32 0, %sub284
  %70 = select i1 %ispos743, i32 %sub284, i32 %neg744
  %cmp286 = icmp sgt i32 %70, 3
  %conv287 = zext i1 %cmp286 to i8
  %or288 = or i8 %or, %conv287
  %arrayidx293 = getelementptr inbounds i16* %65, i64 1
  %71 = load i16* %arrayidx293, align 2, !tbaa !5
  %conv294 = sext i16 %71 to i32
  %arrayidx299 = getelementptr inbounds i16* %68, i64 1
  %72 = load i16* %arrayidx299, align 2, !tbaa !5
  %conv300 = sext i16 %72 to i32
  %sub301 = sub nsw i32 %conv294, %conv300
  %ispos745 = icmp sgt i32 %sub301, -1
  %neg746 = sub i32 0, %sub301
  %73 = select i1 %ispos745, i32 %sub301, i32 %neg746
  %cmp303 = icmp sge i32 %73, %mvlimit
  %conv304 = zext i1 %cmp303 to i8
  %or305 = or i8 %or288, %conv304
  store i8 %or305, i8* %arrayidx101, align 1, !tbaa !1
  br label %for.inc

if.else309:                                       ; preds = %if.then237
  %arrayidx318 = getelementptr inbounds i16*** %3, i64 %idxprom177
  %74 = load i16*** %arrayidx318, align 8, !tbaa !3
  %arrayidx319 = getelementptr inbounds i16** %74, i64 %idxprom176
  %75 = load i16** %arrayidx319, align 8, !tbaa !3
  %76 = load i16* %75, align 2, !tbaa !5
  %conv321 = sext i16 %76 to i32
  %sub322 = sub nsw i32 %conv386, %conv321
  %ispos731 = icmp sgt i32 %sub322, -1
  %neg732 = sub i32 0, %sub322
  %77 = select i1 %ispos731, i32 %sub322, i32 %neg732
  %cmp324 = icmp sgt i32 %77, 3
  %conv325 = zext i1 %cmp324 to i8
  %arrayidx330 = getelementptr inbounds i16* %55, i64 1
  %78 = load i16* %arrayidx330, align 2, !tbaa !5
  %conv331 = sext i16 %78 to i32
  %arrayidx336 = getelementptr inbounds i16* %75, i64 1
  %79 = load i16* %arrayidx336, align 2, !tbaa !5
  %conv337 = sext i16 %79 to i32
  %sub338 = sub nsw i32 %conv331, %conv337
  %ispos733 = icmp sgt i32 %sub338, -1
  %neg734 = sub i32 0, %sub338
  %80 = select i1 %ispos733, i32 %sub338, i32 %neg734
  %cmp340 = icmp sge i32 %80, %mvlimit
  %conv341 = zext i1 %cmp340 to i8
  %or342 = or i8 %conv341, %conv325
  %arrayidx345 = getelementptr inbounds i16*** %3, i64 %idxprom162
  %81 = load i16*** %arrayidx345, align 8, !tbaa !3
  %arrayidx346 = getelementptr inbounds i16** %81, i64 %idxprom161
  %82 = load i16** %arrayidx346, align 8, !tbaa !3
  %83 = load i16* %82, align 2, !tbaa !5
  %conv348 = sext i16 %83 to i32
  %arrayidx351 = getelementptr inbounds i16*** %2, i64 %idxprom177
  %84 = load i16*** %arrayidx351, align 8, !tbaa !3
  %arrayidx352 = getelementptr inbounds i16** %84, i64 %idxprom176
  %85 = load i16** %arrayidx352, align 8, !tbaa !3
  %86 = load i16* %85, align 2, !tbaa !5
  %conv354 = sext i16 %86 to i32
  %sub355 = sub nsw i32 %conv348, %conv354
  %ispos735 = icmp sgt i32 %sub355, -1
  %neg736 = sub i32 0, %sub355
  %87 = select i1 %ispos735, i32 %sub355, i32 %neg736
  %cmp357 = icmp sgt i32 %87, 3
  %conv358 = zext i1 %cmp357 to i8
  %or359 = or i8 %or342, %conv358
  %arrayidx364 = getelementptr inbounds i16* %82, i64 1
  %88 = load i16* %arrayidx364, align 2, !tbaa !5
  %conv365 = sext i16 %88 to i32
  %arrayidx370 = getelementptr inbounds i16* %85, i64 1
  %89 = load i16* %arrayidx370, align 2, !tbaa !5
  %conv371 = sext i16 %89 to i32
  %sub372 = sub nsw i32 %conv365, %conv371
  %ispos737 = icmp sgt i32 %sub372, -1
  %neg738 = sub i32 0, %sub372
  %90 = select i1 %ispos737, i32 %sub372, i32 %neg738
  %cmp374 = icmp sge i32 %90, %mvlimit
  %conv375 = zext i1 %cmp374 to i8
  %or376 = or i8 %or359, %conv375
  store i8 %or376, i8* %arrayidx101, align 1, !tbaa !1
  br label %for.inc

if.else380:                                       ; preds = %if.then232
  %arrayidx389 = getelementptr inbounds i16*** %2, i64 %idxprom177
  %91 = load i16*** %arrayidx389, align 8, !tbaa !3
  %arrayidx390 = getelementptr inbounds i16** %91, i64 %idxprom176
  %92 = load i16** %arrayidx390, align 8, !tbaa !3
  %93 = load i16* %92, align 2, !tbaa !5
  %conv392 = sext i16 %93 to i32
  %sub393 = sub nsw i32 %conv386, %conv392
  %ispos = icmp sgt i32 %sub393, -1
  %neg = sub i32 0, %sub393
  %94 = select i1 %ispos, i32 %sub393, i32 %neg
  %cmp395 = icmp sgt i32 %94, 3
  %conv396 = zext i1 %cmp395 to i32
  %arrayidx401 = getelementptr inbounds i16* %55, i64 1
  %95 = load i16* %arrayidx401, align 2, !tbaa !5
  %conv402 = sext i16 %95 to i32
  %arrayidx407 = getelementptr inbounds i16* %92, i64 1
  %96 = load i16* %arrayidx407, align 2, !tbaa !5
  %conv408 = sext i16 %96 to i32
  %sub409 = sub nsw i32 %conv402, %conv408
  %ispos717 = icmp sgt i32 %sub409, -1
  %neg718 = sub i32 0, %sub409
  %97 = select i1 %ispos717, i32 %sub409, i32 %neg718
  %cmp411 = icmp sge i32 %97, %mvlimit
  %conv412 = zext i1 %cmp411 to i32
  %or413 = or i32 %conv412, %conv396
  %arrayidx416 = getelementptr inbounds i16*** %3, i64 %idxprom162
  %98 = load i16*** %arrayidx416, align 8, !tbaa !3
  %arrayidx417 = getelementptr inbounds i16** %98, i64 %idxprom161
  %99 = load i16** %arrayidx417, align 8, !tbaa !3
  %100 = load i16* %99, align 2, !tbaa !5
  %conv419 = sext i16 %100 to i32
  %arrayidx422 = getelementptr inbounds i16*** %3, i64 %idxprom177
  %101 = load i16*** %arrayidx422, align 8, !tbaa !3
  %arrayidx423 = getelementptr inbounds i16** %101, i64 %idxprom176
  %102 = load i16** %arrayidx423, align 8, !tbaa !3
  %103 = load i16* %102, align 2, !tbaa !5
  %conv425 = sext i16 %103 to i32
  %sub426 = sub nsw i32 %conv419, %conv425
  %ispos719 = icmp sgt i32 %sub426, -1
  %neg720 = sub i32 0, %sub426
  %104 = select i1 %ispos719, i32 %sub426, i32 %neg720
  %cmp428 = icmp sgt i32 %104, 3
  %conv429 = zext i1 %cmp428 to i32
  %or430 = or i32 %or413, %conv429
  %arrayidx435 = getelementptr inbounds i16* %99, i64 1
  %105 = load i16* %arrayidx435, align 2, !tbaa !5
  %conv436 = sext i16 %105 to i32
  %arrayidx441 = getelementptr inbounds i16* %102, i64 1
  %106 = load i16* %arrayidx441, align 2, !tbaa !5
  %conv442 = sext i16 %106 to i32
  %sub443 = sub nsw i32 %conv436, %conv442
  %ispos721 = icmp sgt i32 %sub443, -1
  %neg722 = sub i32 0, %sub443
  %107 = select i1 %ispos721, i32 %sub443, i32 %neg722
  %cmp445 = icmp sge i32 %107, %mvlimit
  %conv446 = zext i1 %cmp445 to i32
  %or447 = or i32 %or430, %conv446
  %tobool448 = icmp eq i32 %or447, 0
  br i1 %tobool448, label %land.end518, label %land.rhs449

land.rhs449:                                      ; preds = %if.else380
  %sub462 = sub nsw i32 %conv386, %conv425
  %ispos723 = icmp sgt i32 %sub462, -1
  %neg724 = sub i32 0, %sub462
  %108 = select i1 %ispos723, i32 %sub462, i32 %neg724
  %cmp464 = icmp sgt i32 %108, 3
  %conv465 = zext i1 %cmp464 to i32
  %sub478 = sub nsw i32 %conv402, %conv442
  %ispos725 = icmp sgt i32 %sub478, -1
  %neg726 = sub i32 0, %sub478
  %109 = select i1 %ispos725, i32 %sub478, i32 %neg726
  %cmp480 = icmp sge i32 %109, %mvlimit
  %conv481 = zext i1 %cmp480 to i32
  %sub495 = sub nsw i32 %conv419, %conv392
  %ispos727 = icmp sgt i32 %sub495, -1
  %neg728 = sub i32 0, %sub495
  %110 = select i1 %ispos727, i32 %sub495, i32 %neg728
  %cmp497 = icmp sgt i32 %110, 3
  %conv498 = zext i1 %cmp497 to i32
  %sub512 = sub nsw i32 %conv436, %conv408
  %ispos729 = icmp sgt i32 %sub512, -1
  %neg730 = sub i32 0, %sub512
  %111 = select i1 %ispos729, i32 %sub512, i32 %neg730
  %cmp514 = icmp sge i32 %111, %mvlimit
  %conv515 = zext i1 %cmp514 to i32
  %or482 = or i32 %conv465, %conv498
  %or499 = or i32 %or482, %conv515
  %or516 = or i32 %or499, %conv481
  %tobool517 = icmp ne i32 %or516, 0
  br label %land.end518

land.end518:                                      ; preds = %if.else380, %land.rhs449
  %112 = phi i1 [ false, %if.else380 ], [ %tobool517, %land.rhs449 ]
  %conv519 = zext i1 %112 to i8
  store i8 %conv519, i8* %arrayidx101, align 1, !tbaa !1
  br label %for.inc

if.else523:                                       ; preds = %lor.lhs.false226
  store i8 1, i8* %arrayidx101, align 1, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true116, %land.lhs.true116, %land.lhs.true116, %land.lhs.true116, %land.end97, %land.end97, %land.end97, %land.end97, %land.end62, %if.then144, %if.else523, %if.then240, %if.else309, %land.end518, %if.then149
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 16
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  ret void
}
