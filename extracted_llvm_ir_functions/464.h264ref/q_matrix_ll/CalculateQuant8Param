define void @CalculateQuant8Param() #0 {
  %present = alloca i64, align 8, !dbg !1131
  %tmpcast = bitcast i64* %present to [2 x i32]*, !dbg !1131
  tail call void @llvm.dbg.declare(metadata [2 x i32]* %tmpcast, metadata !75, metadata !666), !dbg !1134
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !79, metadata !666), !dbg !1135
  %1 = load %struct.seq_parameter_set_rbsp_t** @active_sps, align 8, !dbg !1136, !tbaa !738
  %2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t* %1, i64 0, i32 9, !dbg !1137
  %3 = load i32* %2, align 4, !dbg !1137, !tbaa !933
  %4 = icmp eq i32 %3, 0, !dbg !1136
  br i1 %4, label %5, label %.preheader11, !dbg !1138

; <label>:5                                       ; preds = %0
  %6 = load %struct.pic_parameter_set_rbsp_t** @active_pps, align 8, !dbg !1139, !tbaa !738
  %7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t* %6, i64 0, i32 5, !dbg !1140
  %8 = load i32* %7, align 4, !dbg !1140, !tbaa !940
  %9 = icmp eq i32 %8, 0, !dbg !1139
  br i1 %9, label %.preheader5, label %.thread, !dbg !1141

.preheader11:                                     ; preds = %0
  %scevgep52 = getelementptr %struct.seq_parameter_set_rbsp_t* %1, i64 0, i32 10, i64 6
  %10 = bitcast i32* %scevgep52 to i64*, !dbg !1142
  %11 = load i64* %10, align 4, !dbg !1142
  br label %.thread

.thread:                                          ; preds = %5, %.preheader11
  %storemerge = phi i64 [ %11, %.preheader11 ], [ 0, %5 ]
  store i64 %storemerge, i64* %present, align 8, !dbg !1131
  %12 = load %struct.pic_parameter_set_rbsp_t** @active_pps, align 8, !dbg !1146, !tbaa !738
  %13 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t* %12, i64 0, i32 5, !dbg !1148
  %14 = load i32* %13, align 4, !dbg !1148, !tbaa !940
  %15 = icmp eq i32 %14, 0, !dbg !1146
  br i1 %15, label %.critedge.preheader, label %.preheader10, !dbg !1149

.critedge.preheader:                              ; preds = %.preheader10, %.thread
  %16 = load i64* %present, align 8, !dbg !1150
  %17 = trunc i64 %16 to i32, !dbg !1150
  %18 = icmp ne i32 %17, 0, !dbg !1150
  %19 = load i16* getelementptr inbounds ([2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 0), align 2
  %20 = icmp eq i16 %19, 0, !dbg !1161
  %or.cond = and i1 %18, %20, !dbg !1162
  %21 = icmp ugt i64 %16, 4294967295, !dbg !1163
  %22 = load i16* getelementptr inbounds ([2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 1), align 2
  %23 = icmp eq i16 %22, 0, !dbg !1165
  %or.cond4 = and i1 %21, %23, !dbg !1166
  br label %.preheader8, !dbg !1167

.preheader10:                                     ; preds = %.thread, %.preheader10
  %indvars.iv45 = phi i64 [ %indvars.iv.next46, %.preheader10 ], [ 0, %.thread ]
  %24 = add nuw nsw i64 %indvars.iv45, 6, !dbg !1168
  %25 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t* %12, i64 0, i32 6, i64 %24, !dbg !1171
  %26 = load i32* %25, align 4, !dbg !1171, !tbaa !671
  %27 = getelementptr inbounds [2 x i32]* %tmpcast, i64 0, i64 %indvars.iv45, !dbg !1172
  %28 = load i32* %27, align 4, !dbg !1173, !tbaa !671
  %29 = or i32 %28, %26, !dbg !1173
  store i32 %29, i32* %27, align 4, !dbg !1173, !tbaa !671
  %indvars.iv.next46 = add nuw nsw i64 %indvars.iv45, 1, !dbg !1174
  %exitcond47 = icmp eq i64 %indvars.iv.next46, 2, !dbg !1174
  br i1 %exitcond47, label %.critedge.preheader, label %.preheader10, !dbg !1174

.preheader5:                                      ; preds = %5, %37
  %indvars.iv33 = phi i64 [ %indvars.iv.next34, %37 ], [ 0, %5 ]
  br label %.preheader, !dbg !1175

.preheader:                                       ; preds = %36, %.preheader5
  %indvars.iv30 = phi i64 [ 0, %.preheader5 ], [ %indvars.iv.next31, %36 ]
  %scevgep26 = getelementptr [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %indvars.iv33, i64 %indvars.iv30, i64 0
  %scevgep2627 = bitcast i32* %scevgep26 to i8*
  %scevgep28 = getelementptr [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %indvars.iv33, i64 %indvars.iv30, i64 0
  %scevgep2829 = bitcast i32* %scevgep28 to i8*
  %scevgep = getelementptr [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %indvars.iv33, i64 %indvars.iv30, i64 0
  %scevgep23 = bitcast i32* %scevgep to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %scevgep23, i8* %scevgep2829, i64 32, i32 4, i1 false), !dbg !1180
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %scevgep2627, i8* %scevgep2829, i64 32, i32 4, i1 false), !dbg !1185
  br label %30, !dbg !1186

; <label>:30                                      ; preds = %30, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %30 ]
  %31 = getelementptr inbounds [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %indvars.iv33, i64 %indvars.iv30, i64 %indvars.iv, !dbg !1187
  %32 = load i32* %31, align 4, !dbg !1187, !tbaa !671
  %33 = shl i32 %32, 4, !dbg !1188
  %34 = getelementptr inbounds [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %indvars.iv33, i64 %indvars.iv30, i64 %indvars.iv, !dbg !1189
  store i32 %33, i32* %34, align 4, !dbg !1190, !tbaa !671
  %35 = getelementptr inbounds [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %indvars.iv33, i64 %indvars.iv30, i64 %indvars.iv, !dbg !1191
  store i32 %33, i32* %35, align 4, !dbg !1192, !tbaa !671
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1186
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !1186
  br i1 %exitcond, label %36, label %30, !dbg !1186

; <label>:36                                      ; preds = %30
  %indvars.iv.next31 = add nuw nsw i64 %indvars.iv30, 1, !dbg !1175
  %exitcond32 = icmp eq i64 %indvars.iv.next31, 8, !dbg !1175
  br i1 %exitcond32, label %37, label %.preheader, !dbg !1175

; <label>:37                                      ; preds = %36
  %indvars.iv.next34 = add nuw nsw i64 %indvars.iv33, 1, !dbg !1193
  %exitcond35 = icmp eq i64 %indvars.iv.next34, 6, !dbg !1193
  br i1 %exitcond35, label %.loopexit, label %.preheader5, !dbg !1193

.preheader8:                                      ; preds = %.critedge, %.critedge.preheader
  %indvars.iv42 = phi i64 [ 0, %.critedge.preheader ], [ %indvars.iv.next43, %.critedge ]
  br label %.preheader7, !dbg !1194

.preheader7:                                      ; preds = %62, %.preheader8
  %indvars.iv39 = phi i64 [ 0, %.preheader8 ], [ %indvars.iv.next40, %62 ]
  br label %38, !dbg !1195

; <label>:38                                      ; preds = %58, %.preheader7
  %indvars.iv36 = phi i64 [ 0, %.preheader7 ], [ %indvars.iv.next37, %58 ]
  %39 = shl i64 %indvars.iv36, 3, !dbg !1196
  %40 = add nuw nsw i64 %39, %indvars.iv39, !dbg !1197
  %41 = getelementptr inbounds [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %indvars.iv42, i64 %indvars.iv39, i64 %indvars.iv36, !dbg !1198
  %42 = load i32* %41, align 4, !dbg !1198, !tbaa !671
  %43 = shl i32 %42, 4, !dbg !1200
  %44 = getelementptr inbounds [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %indvars.iv42, i64 %indvars.iv39, i64 %indvars.iv36
  %45 = load i32* %44, align 4
  br i1 %or.cond, label %48, label %46, !dbg !1162

; <label>:46                                      ; preds = %38
  %47 = getelementptr inbounds [64 x i16]* @Quant8_intra_default, i64 0, i64 %40, !dbg !1201
  br label %50, !dbg !1203

; <label>:48                                      ; preds = %38
  %49 = getelementptr inbounds [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0, i64 %40, !dbg !1204
  br label %50

; <label>:50                                      ; preds = %48, %46
  %.sink60.in = phi i16* [ %47, %46 ], [ %49, %48 ]
  %.sink60 = load i16* %.sink60.in, align 2, !dbg !1201
  %51 = sext i16 %.sink60 to i32, !dbg !1201
  %.sink = mul nsw i32 %51, %45, !dbg !1205
  %.sink54 = sdiv i32 %43, %51, !dbg !1206
  %52 = getelementptr inbounds [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %indvars.iv42, i64 %indvars.iv39, i64 %indvars.iv36, !dbg !1207
  store i32 %.sink54, i32* %52, align 4
  %53 = getelementptr inbounds [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %indvars.iv42, i64 %indvars.iv39, i64 %indvars.iv36, !dbg !1208
  store i32 %.sink, i32* %53, align 4
  br i1 %or.cond4, label %56, label %54, !dbg !1166

; <label>:54                                      ; preds = %50
  %55 = getelementptr inbounds [64 x i16]* @Quant8_inter_default, i64 0, i64 %40, !dbg !1209
  br label %58, !dbg !1211

; <label>:56                                      ; preds = %50
  %57 = getelementptr inbounds [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1, i64 %40, !dbg !1212
  br label %58

; <label>:58                                      ; preds = %54, %56
  %.sink61.in = phi i16* [ %55, %54 ], [ %57, %56 ]
  %.sink61 = load i16* %.sink61.in, align 2, !dbg !1209
  %59 = sext i16 %.sink61 to i32, !dbg !1209
  %.sink55 = mul nsw i32 %59, %45, !dbg !1214
  %.sink56 = sdiv i32 %43, %59, !dbg !1215
  %60 = getelementptr inbounds [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %indvars.iv42, i64 %indvars.iv39, i64 %indvars.iv36, !dbg !1216
  store i32 %.sink56, i32* %60, align 4
  %61 = getelementptr inbounds [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %indvars.iv42, i64 %indvars.iv39, i64 %indvars.iv36, !dbg !1217
  store i32 %.sink55, i32* %61, align 4
  %indvars.iv.next37 = add nuw nsw i64 %indvars.iv36, 1, !dbg !1195
  %exitcond38 = icmp eq i64 %indvars.iv.next37, 8, !dbg !1195
  br i1 %exitcond38, label %62, label %38, !dbg !1195

; <label>:62                                      ; preds = %58
  %indvars.iv.next40 = add nuw nsw i64 %indvars.iv39, 1, !dbg !1194
  %exitcond41 = icmp eq i64 %indvars.iv.next40, 8, !dbg !1194
  br i1 %exitcond41, label %.critedge, label %.preheader7, !dbg !1194

.critedge:                                        ; preds = %62
  %indvars.iv.next43 = add nuw nsw i64 %indvars.iv42, 1, !dbg !1167
  %exitcond44 = icmp eq i64 %indvars.iv.next43, 6, !dbg !1167
  br i1 %exitcond44, label %.loopexit, label %.preheader8, !dbg !1167

.loopexit:                                        ; preds = %.critedge, %37
  ret void, !dbg !1218
}
