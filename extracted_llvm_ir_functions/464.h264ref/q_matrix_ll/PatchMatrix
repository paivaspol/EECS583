define void @PatchMatrix() #0 {
entry:
  tail call void @llvm.dbg.value(metadata !8, i64 0, metadata !52), !dbg !763
  br label %for.body, !dbg !763

for.body:                                         ; preds = %for.inc102, %entry
  %indvars.iv144 = phi i64 [ 0, %entry ], [ %indvars.iv.next145, %for.inc102 ]
  %0 = load %struct.InputParameters** @input, align 8, !dbg !765, !tbaa !703
  %arrayidx = getelementptr inbounds %struct.InputParameters* %0, i64 0, i32 133, i64 %indvars.iv144, !dbg !765
  %1 = load i32* %arrayidx, align 4, !dbg !765, !tbaa !659
  %tobool = icmp eq i32 %1, 0, !dbg !765
  br i1 %tobool, label %if.end42, label %if.then, !dbg !765

if.then:                                          ; preds = %for.body
  %arraydecay = getelementptr inbounds [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %indvars.iv144, i64 0, !dbg !767
  tail call void @llvm.dbg.value(metadata !{i16* %arraydecay}, i64 0, metadata !51), !dbg !767
  %arrayidx4 = getelementptr inbounds [6 x i32]* @matrix4x4_check, i64 0, i64 %indvars.iv144, !dbg !769
  %2 = load i32* %arrayidx4, align 4, !dbg !769, !tbaa !659
  %tobool5 = icmp eq i32 %2, 0, !dbg !769
  br i1 %tobool5, label %if.else31, label %for.body9, !dbg !769

for.cond7:                                        ; preds = %for.body9
  %3 = trunc i64 %indvars.iv.next to i32, !dbg !770
  %cmp8 = icmp slt i32 %3, 16, !dbg !770
  br i1 %cmp8, label %for.body9, label %if.end42, !dbg !770

for.body9:                                        ; preds = %if.then, %for.cond7
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond7 ], [ 0, %if.then ]
  %arrayidx11 = getelementptr inbounds [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %indvars.iv144, i64 %indvars.iv, !dbg !773
  %4 = load i16* %arrayidx11, align 2, !dbg !773, !tbaa !759
  %5 = icmp ugt i16 %4, 255, !dbg !773
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !770
  br i1 %5, label %if.then21, label %for.cond7, !dbg !773

if.then21:                                        ; preds = %for.body9
  %arraydecay24 = getelementptr inbounds [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %indvars.iv144, i64 0, !dbg !775
  %call = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([50 x i8]* @.str6, i64 0, i64 0), i8* %arraydecay24) #8, !dbg !775
  %call25 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([40 x i8]* @.str7, i64 0, i64 0)) #8, !dbg !777
  %6 = trunc i64 %indvars.iv144 to i32, !dbg !778
  %cmp26 = icmp sgt i32 %6, 2, !dbg !778
  %7 = bitcast i16* %arraydecay to i8*, !dbg !779
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !778

if.then28:                                        ; preds = %if.then21
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i32 16, i1 false), !dbg !779
  br label %if.end42, !dbg !779

if.else:                                          ; preds = %if.then21
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i32 16, i1 false), !dbg !780
  br label %if.end42

if.else31:                                        ; preds = %if.then
  %arraydecay34 = getelementptr inbounds [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %indvars.iv144, i64 0, !dbg !781
  %call35 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([57 x i8]* @.str8, i64 0, i64 0), i8* %arraydecay34) #8, !dbg !781
  %8 = trunc i64 %indvars.iv144 to i32, !dbg !783
  %cmp36 = icmp sgt i32 %8, 2, !dbg !783
  %9 = bitcast i16* %arraydecay to i8*, !dbg !784
  br i1 %cmp36, label %if.end42.thread, label %if.else39, !dbg !783

if.end42.thread:                                  ; preds = %if.else31
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i32 16, i1 false), !dbg !784
  br label %for.inc102, !dbg !785

if.else39:                                        ; preds = %if.else31
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i32 16, i1 false), !dbg !786
  br label %if.end42

if.end42:                                         ; preds = %for.cond7, %for.body, %if.then28, %if.else, %if.else39
  %10 = trunc i64 %indvars.iv144 to i32, !dbg !785
  %cmp43 = icmp slt i32 %10, 2, !dbg !785
  br i1 %cmp43, label %land.lhs.true, label %for.inc102, !dbg !785

land.lhs.true:                                    ; preds = %if.end42
  %11 = add nsw i64 %indvars.iv144, 6, !dbg !785
  %12 = load %struct.InputParameters** @input, align 8, !dbg !785, !tbaa !703
  %arrayidx47 = getelementptr inbounds %struct.InputParameters* %12, i64 0, i32 133, i64 %11, !dbg !785
  %13 = load i32* %arrayidx47, align 4, !dbg !785, !tbaa !659
  %tobool48 = icmp eq i32 %13, 0, !dbg !785
  br i1 %tobool48, label %for.inc102, label %if.then49, !dbg !785

if.then49:                                        ; preds = %land.lhs.true
  %arraydecay52 = getelementptr inbounds [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %indvars.iv144, i64 0, !dbg !787
  tail call void @llvm.dbg.value(metadata !{i16* %arraydecay52}, i64 0, metadata !51), !dbg !787
  %arrayidx54 = getelementptr inbounds [2 x i32]* @matrix8x8_check, i64 0, i64 %indvars.iv144, !dbg !789
  %14 = load i32* %arrayidx54, align 4, !dbg !789, !tbaa !659
  %tobool55 = icmp eq i32 %14, 0, !dbg !789
  br i1 %tobool55, label %if.else98, label %for.body60, !dbg !789

for.cond57:                                       ; preds = %for.body60
  %15 = trunc i64 %indvars.iv.next143 to i32, !dbg !790
  %cmp58 = icmp slt i32 %15, 64, !dbg !790
  br i1 %cmp58, label %for.body60, label %for.inc102, !dbg !790

for.body60:                                       ; preds = %if.then49, %for.cond57
  %indvars.iv142 = phi i64 [ %indvars.iv.next143, %for.cond57 ], [ 0, %if.then49 ]
  %arrayidx62 = getelementptr inbounds [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %indvars.iv144, i64 %indvars.iv142, !dbg !793
  %16 = load i16* %arrayidx62, align 2, !dbg !793, !tbaa !759
  %17 = icmp ugt i16 %16, 255, !dbg !793
  %indvars.iv.next143 = add i64 %indvars.iv142, 1, !dbg !790
  br i1 %17, label %if.else87, label %for.cond57, !dbg !793

if.else87:                                        ; preds = %for.body60
  %arraydecay81 = getelementptr inbounds [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %indvars.iv144, i64 0, !dbg !795
  %call82 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([50 x i8]* @.str6, i64 0, i64 0), i8* %arraydecay81) #8, !dbg !795
  %call83 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([40 x i8]* @.str7, i64 0, i64 0)) #8, !dbg !797
  %18 = bitcast i16* %arraydecay52 to i8*, !dbg !798
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i32 16, i1 false), !dbg !799
  br label %for.inc102

if.else98:                                        ; preds = %if.then49
  %arraydecay93 = getelementptr inbounds [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %indvars.iv144, i64 0, !dbg !800
  %call94 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([57 x i8]* @.str8, i64 0, i64 0), i8* %arraydecay93) #8, !dbg !800
  %19 = bitcast i16* %arraydecay52 to i8*, !dbg !802
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i32 16, i1 false), !dbg !803
  br label %for.inc102

for.inc102:                                       ; preds = %for.cond57, %if.end42.thread, %land.lhs.true, %if.end42, %if.else98, %if.else87
  %indvars.iv.next145 = add i64 %indvars.iv144, 1, !dbg !763
  %lftr.wideiv = trunc i64 %indvars.iv.next145 to i32, !dbg !763
  %exitcond = icmp eq i32 %lftr.wideiv, 6, !dbg !763
  br i1 %exitcond, label %for.end104, label %for.body, !dbg !763

for.end104:                                       ; preds = %for.inc102
  ret void, !dbg !804
}
