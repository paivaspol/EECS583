define i32 @GetSkipCostMB(double %lambda) #0 {
  %diff = alloca [16 x i32], align 16
  %curr_diff = alloca [8 x [8 x i32]], align 16
  %diff8x8 = alloca [64 x i32], align 16
  tail call void @llvm.dbg.value(metadata double %lambda, i64 0, metadata !703, metadata !1466), !dbg !6197
  %1 = bitcast [16 x i32]* %diff to i8*, !dbg !6198
  call void @llvm.lifetime.start(i64 64, i8* %1) #4, !dbg !6198
  tail call void @llvm.dbg.declare(metadata [16 x i32]* %diff, metadata !711, metadata !1466), !dbg !6199
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !712, metadata !1466), !dbg !6200
  %2 = bitcast [8 x [8 x i32]]* %curr_diff to i8*, !dbg !6201
  call void @llvm.lifetime.start(i64 256, i8* %2) #4, !dbg !6201
  tail call void @llvm.dbg.declare(metadata [8 x [8 x i32]]* %curr_diff, metadata !713, metadata !1466), !dbg !6202
  %3 = bitcast [64 x i32]* %diff8x8 to i8*, !dbg !6201
  call void @llvm.lifetime.start(i64 256, i8* %3) #4, !dbg !6201
  tail call void @llvm.dbg.declare(metadata [64 x i32]* %diff8x8, metadata !714, metadata !1466), !dbg !6203
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !717, metadata !1466), !dbg !6204
  %4 = getelementptr inbounds [16 x i32]* %diff, i64 0, i64 0, !dbg !6205
  %5 = getelementptr inbounds [64 x i32]* %diff8x8, i64 0, i64 0, !dbg !6216
  %.pre.pre = load %struct.ImageParameters** @img, align 8, !dbg !6219, !tbaa !1457
  br label %6, !dbg !6220

; <label>:6                                       ; preds = %87, %0
  %.pre = phi %struct.ImageParameters* [ %.pre.pre, %0 ], [ %32, %87 ]
  %block.017 = phi i32 [ 0, %0 ], [ %88, %87 ]
  %cost.016 = phi i32 [ 0, %0 ], [ %cost.4, %87 ]
  %7 = sdiv i32 %block.017, 2, !dbg !6221
  %8 = shl i32 %7, 3, !dbg !6222
  tail call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !716, metadata !1466), !dbg !6223
  %9 = srem i32 %block.017, 2, !dbg !6224
  %10 = shl nsw i32 %9, 3, !dbg !6225
  tail call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !715, metadata !1466), !dbg !6226
  tail call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !704, metadata !1466), !dbg !6227
  %11 = shl nsw i32 %9, 3, !dbg !6228
  %12 = sext i32 %11 to i64
  %13 = sext i32 %10 to i64, !dbg !6228
  %14 = shl i32 %7, 3, !dbg !6228
  %15 = sext i32 %14 to i64
  %16 = sext i32 %8 to i64, !dbg !6228
  br label %17, !dbg !6228

; <label>:17                                      ; preds = %6, %72
  %18 = phi %struct.ImageParameters* [ %.pre, %6 ], [ %32, %72 ]
  %indvars.iv28 = phi i64 [ %15, %6 ], [ %indvars.iv.next29, %72 ]
  %cost.110 = phi i32 [ %cost.016, %6 ], [ %cost.3, %72 ]
  %19 = getelementptr inbounds %struct.ImageParameters* %18, i64 0, i32 38, !dbg !6229
  %20 = load i32* %19, align 4, !dbg !6229, !tbaa !2003
  %21 = trunc i64 %indvars.iv28 to i32, !dbg !6230
  %22 = add nsw i32 %20, %21, !dbg !6230
  tail call void @llvm.dbg.value(metadata i32 %22, i64 0, metadata !706, metadata !1466), !dbg !6231
  tail call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !705, metadata !1466), !dbg !6232
  %23 = sub i64 %indvars.iv28, %16, !dbg !6233
  %24 = sext i32 %22 to i64, !dbg !6239
  br label %25, !dbg !6239

; <label>:25                                      ; preds = %17, %68
  %26 = phi %struct.ImageParameters* [ %18, %17 ], [ %32, %68 ], !dbg !6240
  %indvars.iv26 = phi i64 [ %12, %17 ], [ %indvars.iv.next27, %68 ]
  %cost.28 = phi i32 [ %cost.110, %17 ], [ %cost.3, %68 ]
  %27 = getelementptr inbounds %struct.ImageParameters* %26, i64 0, i32 37, !dbg !6241
  %28 = load i32* %27, align 4, !dbg !6241, !tbaa !2000
  %29 = trunc i64 %indvars.iv26 to i32, !dbg !6242
  %30 = add nsw i32 %28, %29, !dbg !6242
  tail call void @llvm.dbg.value(metadata i32 %30, i64 0, metadata !707, metadata !1466), !dbg !6243
  tail call void @LumaPrediction4x4(i32 %29, i32 %21, i32 0, i32 0, i32 0, i16 signext 0, i16 signext 0) #8, !dbg !6244
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !709, metadata !1466), !dbg !6245
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !710, metadata !1466), !dbg !6246
  %31 = load i16*** @imgY_org, align 8, !dbg !6247, !tbaa !1457
  %32 = load %struct.ImageParameters** @img, align 8, !dbg !6248, !tbaa !1457
  %33 = sub i64 %indvars.iv26, %13, !dbg !6249
  %34 = sext i32 %30 to i64, !dbg !6250
  br label %.preheader, !dbg !6250

.preheader:                                       ; preds = %53, %25
  %indvars.iv23 = phi i64 [ 0, %25 ], [ %indvars.iv.next24, %53 ]
  %indvars.iv21 = phi i64 [ 0, %25 ], [ %indvars.iv.next22, %53 ]
  %35 = add nsw i64 %24, %indvars.iv23, !dbg !6251
  %36 = getelementptr inbounds i16** %31, i64 %35, !dbg !6247
  %37 = load i16** %36, align 8, !dbg !6247, !tbaa !1457
  %38 = add nuw nsw i64 %indvars.iv23, %indvars.iv28, !dbg !6252
  %39 = add nuw nsw i64 %23, %indvars.iv23, !dbg !6253
  br label %40, !dbg !6254

; <label>:40                                      ; preds = %40, %.preheader
  %indvars.iv19 = phi i64 [ %indvars.iv21, %.preheader ], [ %indvars.iv.next20, %40 ]
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %40 ]
  %41 = add nsw i64 %34, %indvars.iv, !dbg !6255
  %42 = getelementptr inbounds i16* %37, i64 %41, !dbg !6247
  %43 = load i16* %42, align 2, !dbg !6247, !tbaa !1978
  %44 = zext i16 %43 to i32, !dbg !6247
  %45 = add nuw nsw i64 %indvars.iv, %indvars.iv26, !dbg !6256
  %46 = getelementptr inbounds %struct.ImageParameters* %32, i64 0, i32 45, i64 %45, i64 %38, !dbg !6248
  %47 = load i16* %46, align 2, !dbg !6248, !tbaa !1978
  %48 = zext i16 %47 to i32, !dbg !6248
  %49 = sub nsw i32 %44, %48, !dbg !6257
  %50 = add nuw nsw i64 %33, %indvars.iv, !dbg !6258
  %51 = getelementptr inbounds [8 x [8 x i32]]* %curr_diff, i64 0, i64 %39, i64 %50, !dbg !6259
  store i32 %49, i32* %51, align 4, !dbg !6260, !tbaa !1657
  %52 = getelementptr inbounds [16 x i32]* %diff, i64 0, i64 %indvars.iv19, !dbg !6261
  store i32 %49, i32* %52, align 4, !dbg !6262, !tbaa !1657
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6254
  %indvars.iv.next20 = add nsw i64 %indvars.iv19, 1, !dbg !6254
  %exitcond = icmp eq i64 %indvars.iv.next, 4, !dbg !6254
  br i1 %exitcond, label %53, label %40, !dbg !6254

; <label>:53                                      ; preds = %40
  %indvars.iv.next24 = add nuw nsw i64 %indvars.iv23, 1, !dbg !6250
  %indvars.iv.next22 = add nuw nsw i64 %indvars.iv21, 4, !dbg !6250
  %exitcond25 = icmp eq i64 %indvars.iv.next24, 4, !dbg !6250
  br i1 %exitcond25, label %54, label %.preheader, !dbg !6250

; <label>:54                                      ; preds = %53
  %55 = load %struct.InputParameters** @input, align 8, !dbg !6263, !tbaa !1457
  %56 = getelementptr inbounds %struct.InputParameters* %55, i64 0, i32 85, !dbg !6264
  %57 = load i32* %56, align 4, !dbg !6264, !tbaa !1990
  %58 = icmp eq i32 %57, 0, !dbg !6265
  br i1 %58, label %59, label %63, !dbg !6266

; <label>:59                                      ; preds = %54
  %60 = getelementptr inbounds %struct.InputParameters* %55, i64 0, i32 123, !dbg !6267
  %61 = load i32* %60, align 4, !dbg !6267, !tbaa !3712
  %62 = icmp eq i32 %61, 0, !dbg !6268
  br i1 %62, label %63, label %68, !dbg !6269

; <label>:63                                      ; preds = %59, %54
  %64 = getelementptr inbounds %struct.InputParameters* %55, i64 0, i32 6, !dbg !6270
  %65 = load i32* %64, align 4, !dbg !6270, !tbaa !3409
  %66 = call i32 @SATD(i32* %4, i32 %65) #9, !dbg !6271
  %67 = add nsw i32 %66, %cost.28, !dbg !6272
  tail call void @llvm.dbg.value(metadata i32 %67, i64 0, metadata !712, metadata !1466), !dbg !6200
  br label %68, !dbg !6273

; <label>:68                                      ; preds = %59, %63
  %cost.3 = phi i32 [ %cost.28, %59 ], [ %67, %63 ]
  %indvars.iv.next27 = add nsw i64 %indvars.iv26, 4, !dbg !6239
  %69 = or i32 %10, 4, !dbg !6274
  %70 = sext i32 %69 to i64, !dbg !6274
  %71 = icmp slt i64 %indvars.iv26, %70, !dbg !6274
  br i1 %71, label %25, label %72, !dbg !6239

; <label>:72                                      ; preds = %68
  %indvars.iv.next29 = add nsw i64 %indvars.iv28, 4, !dbg !6228
  %73 = or i32 %8, 4, !dbg !6275
  %74 = sext i32 %73 to i64, !dbg !6275
  %75 = icmp slt i64 %indvars.iv28, %74, !dbg !6275
  br i1 %75, label %17, label %76, !dbg !6228

; <label>:76                                      ; preds = %72
  br i1 %58, label %77, label %87, !dbg !6276

; <label>:77                                      ; preds = %76
  %78 = getelementptr inbounds %struct.InputParameters* %55, i64 0, i32 123, !dbg !6277
  %79 = load i32* %78, align 4, !dbg !6277, !tbaa !3712
  %80 = icmp eq i32 %79, 0, !dbg !6278
  br i1 %80, label %87, label %.preheader2, !dbg !6279

.preheader2:                                      ; preds = %77, %.preheader2
  %indvar = phi i64 [ %indvar.next, %.preheader2 ], [ 0, %77 ]
  %81 = shl i64 %indvar, 3, !dbg !6280
  %scevgep = getelementptr [64 x i32]* %diff8x8, i64 0, i64 %81
  %scevgep35 = bitcast i32* %scevgep to i8*
  %scevgep36 = getelementptr [8 x [8 x i32]]* %curr_diff, i64 0, i64 %indvar, i64 0
  %scevgep3637 = bitcast i32* %scevgep36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %scevgep35, i8* %scevgep3637, i64 32, i32 16, i1 false), !dbg !6285
  %indvar.next = add nuw nsw i64 %indvar, 1, !dbg !6286
  %exitcond40 = icmp eq i64 %indvar.next, 8, !dbg !6286
  br i1 %exitcond40, label %82, label %.preheader2, !dbg !6286

; <label>:82                                      ; preds = %.preheader2
  %83 = getelementptr inbounds %struct.InputParameters* %55, i64 0, i32 6, !dbg !6287
  %84 = load i32* %83, align 4, !dbg !6287, !tbaa !3409
  %85 = call i32 @SATD8X8(i32* %5, i32 %84) #9, !dbg !6288
  %86 = add nsw i32 %85, %cost.3, !dbg !6289
  tail call void @llvm.dbg.value(metadata i32 %86, i64 0, metadata !712, metadata !1466), !dbg !6200
  br label %87, !dbg !6290

; <label>:87                                      ; preds = %77, %76, %82
  %cost.4 = phi i32 [ %86, %82 ], [ %cost.3, %77 ], [ %cost.3, %76 ]
  %88 = add nuw nsw i32 %block.017, 1, !dbg !6291
  tail call void @llvm.dbg.value(metadata i32 %88, i64 0, metadata !717, metadata !1466), !dbg !6204
  %exitcond41 = icmp eq i32 %88, 4, !dbg !6220
  br i1 %exitcond41, label %89, label %6, !dbg !6220

; <label>:89                                      ; preds = %87
  call void @llvm.lifetime.end(i64 256, i8* %3) #4, !dbg !6292
  call void @llvm.lifetime.end(i64 256, i8* %2) #4, !dbg !6292
  call void @llvm.lifetime.end(i64 64, i8* %1) #4, !dbg !6292
  ret i32 %cost.4, !dbg !6292
}
