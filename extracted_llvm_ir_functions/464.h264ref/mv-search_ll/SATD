define i32 @SATD(i32* nocapture %diff, i32 %use_hadamard) #5 {
entry:
  %d = alloca [16 x i32], align 16
  %0 = bitcast [16 x i32]* %d to i8*
  call void @llvm.lifetime.start(i64 64, i8* %0) #3
  %tobool = icmp eq i32 %use_hadamard, 0
  br i1 %tobool, label %for.cond260.preheader, label %if.then

for.cond260.preheader:                            ; preds = %entry
  %1 = load i32** @byte_abs, align 8, !tbaa !0
  br label %for.body262

if.then:                                          ; preds = %entry
  %2 = load i32* %diff, align 4, !tbaa !3
  %arrayidx1 = getelementptr inbounds i32* %diff, i64 12
  %3 = load i32* %arrayidx1, align 4, !tbaa !3
  %add = add nsw i32 %3, %2
  %arrayidx3 = getelementptr inbounds i32* %diff, i64 4
  %4 = load i32* %arrayidx3, align 4, !tbaa !3
  %arrayidx4 = getelementptr inbounds i32* %diff, i64 8
  %5 = load i32* %arrayidx4, align 4, !tbaa !3
  %add5 = add nsw i32 %5, %4
  %sub = sub nsw i32 %4, %5
  %sub12 = sub nsw i32 %2, %3
  %arrayidx14 = getelementptr inbounds i32* %diff, i64 1
  %6 = load i32* %arrayidx14, align 4, !tbaa !3
  %arrayidx15 = getelementptr inbounds i32* %diff, i64 13
  %7 = load i32* %arrayidx15, align 4, !tbaa !3
  %add16 = add nsw i32 %7, %6
  %arrayidx18 = getelementptr inbounds i32* %diff, i64 5
  %8 = load i32* %arrayidx18, align 4, !tbaa !3
  %arrayidx19 = getelementptr inbounds i32* %diff, i64 9
  %9 = load i32* %arrayidx19, align 4, !tbaa !3
  %add20 = add nsw i32 %9, %8
  %sub24 = sub nsw i32 %8, %9
  %sub28 = sub nsw i32 %6, %7
  %arrayidx30 = getelementptr inbounds i32* %diff, i64 2
  %10 = load i32* %arrayidx30, align 4, !tbaa !3
  %arrayidx31 = getelementptr inbounds i32* %diff, i64 14
  %11 = load i32* %arrayidx31, align 4, !tbaa !3
  %add32 = add nsw i32 %11, %10
  %arrayidx34 = getelementptr inbounds i32* %diff, i64 6
  %12 = load i32* %arrayidx34, align 4, !tbaa !3
  %arrayidx35 = getelementptr inbounds i32* %diff, i64 10
  %13 = load i32* %arrayidx35, align 4, !tbaa !3
  %add36 = add nsw i32 %13, %12
  %sub40 = sub nsw i32 %12, %13
  %sub44 = sub nsw i32 %10, %11
  %arrayidx46 = getelementptr inbounds i32* %diff, i64 3
  %14 = load i32* %arrayidx46, align 4, !tbaa !3
  %arrayidx47 = getelementptr inbounds i32* %diff, i64 15
  %15 = load i32* %arrayidx47, align 4, !tbaa !3
  %add48 = add nsw i32 %15, %14
  %arrayidx50 = getelementptr inbounds i32* %diff, i64 7
  %16 = load i32* %arrayidx50, align 4, !tbaa !3
  %arrayidx51 = getelementptr inbounds i32* %diff, i64 11
  %17 = load i32* %arrayidx51, align 4, !tbaa !3
  %add52 = add nsw i32 %17, %16
  %sub56 = sub nsw i32 %16, %17
  %sub60 = sub nsw i32 %14, %15
  %add64 = add nsw i32 %add5, %add
  %arrayidx65 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 0
  %sub68 = sub nsw i32 %add, %add5
  %arrayidx69 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 8
  %add72 = add nsw i32 %sub, %sub12
  %arrayidx73 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 4
  %sub76 = sub nsw i32 %sub12, %sub
  %arrayidx77 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 12
  %add80 = add nsw i32 %add20, %add16
  %arrayidx81 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 1
  %sub84 = sub nsw i32 %add16, %add20
  %arrayidx85 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 9
  %add88 = add nsw i32 %sub24, %sub28
  %arrayidx89 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 5
  %sub92 = sub nsw i32 %sub28, %sub24
  %arrayidx93 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 13
  %add96 = add nsw i32 %add36, %add32
  %arrayidx97 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 2
  %sub100 = sub nsw i32 %add32, %add36
  %arrayidx101 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 10
  %add104 = add nsw i32 %sub40, %sub44
  %arrayidx105 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 6
  %sub108 = sub nsw i32 %sub44, %sub40
  %arrayidx109 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 14
  %add112 = add nsw i32 %add52, %add48
  %arrayidx113 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 3
  %sub116 = sub nsw i32 %add48, %add52
  %arrayidx117 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 11
  %add120 = add nsw i32 %sub56, %sub60
  %arrayidx121 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 7
  %sub124 = sub nsw i32 %sub60, %sub56
  %arrayidx125 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 15
  %add128 = add nsw i32 %add112, %add64
  %add132 = add nsw i32 %add96, %add80
  %sub136 = sub nsw i32 %add80, %add96
  %sub140 = sub nsw i32 %add64, %add112
  %add144 = add nsw i32 %add120, %add72
  %add148 = add nsw i32 %add104, %add88
  %sub152 = sub nsw i32 %add88, %add104
  %sub156 = sub nsw i32 %add72, %add120
  %add160 = add nsw i32 %sub116, %sub68
  %add164 = add nsw i32 %sub100, %sub84
  %sub168 = sub nsw i32 %sub84, %sub100
  %sub172 = sub nsw i32 %sub68, %sub116
  %add176 = add nsw i32 %sub76, %sub124
  %add180 = add nsw i32 %sub108, %sub92
  %sub184 = sub nsw i32 %sub92, %sub108
  %sub188 = sub nsw i32 %sub76, %sub124
  %add192 = add nsw i32 %add132, %add128
  store i32 %add192, i32* %arrayidx65, align 16, !tbaa !3
  %sub196 = sub nsw i32 %add128, %add132
  store i32 %sub196, i32* %arrayidx81, align 4, !tbaa !3
  %add200 = add nsw i32 %sub136, %sub140
  store i32 %add200, i32* %arrayidx97, align 8, !tbaa !3
  %sub204 = sub nsw i32 %sub140, %sub136
  store i32 %sub204, i32* %arrayidx113, align 4, !tbaa !3
  %add208 = add nsw i32 %add148, %add144
  store i32 %add208, i32* %arrayidx73, align 16, !tbaa !3
  %sub212 = sub nsw i32 %add144, %add148
  store i32 %sub212, i32* %arrayidx89, align 4, !tbaa !3
  %add216 = add nsw i32 %sub152, %sub156
  store i32 %add216, i32* %arrayidx105, align 8, !tbaa !3
  %sub220 = sub nsw i32 %sub156, %sub152
  store i32 %sub220, i32* %arrayidx121, align 4, !tbaa !3
  %add224 = add nsw i32 %add164, %add160
  store i32 %add224, i32* %arrayidx69, align 16, !tbaa !3
  %sub228 = sub nsw i32 %add160, %add164
  store i32 %sub228, i32* %arrayidx85, align 4, !tbaa !3
  %add232 = add nsw i32 %sub168, %sub172
  store i32 %add232, i32* %arrayidx101, align 8, !tbaa !3
  %sub236 = sub nsw i32 %sub172, %sub168
  store i32 %sub236, i32* %arrayidx117, align 4, !tbaa !3
  %add240 = add nsw i32 %add180, %add176
  store i32 %add240, i32* %arrayidx77, align 16, !tbaa !3
  %sub244 = sub nsw i32 %add176, %add180
  store i32 %sub244, i32* %arrayidx93, align 4, !tbaa !3
  %add248 = add nsw i32 %sub184, %sub188
  store i32 %add248, i32* %arrayidx109, align 8, !tbaa !3
  %sub252 = sub nsw i32 %sub188, %sub184
  store i32 %sub252, i32* %arrayidx125, align 4, !tbaa !3
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.then
  %indvars.iv380 = phi i64 [ 1, %if.then ], [ %phitmp, %for.body.for.body_crit_edge ]
  %dd.0378 = phi i32 [ %add192, %if.then ], [ %18, %for.body.for.body_crit_edge ]
  %satd.0377 = phi i32 [ 0, %if.then ], [ %add257, %for.body.for.body_crit_edge ]
  %cmp255 = icmp slt i32 %dd.0378, 0
  %sub256 = sub nsw i32 0, %dd.0378
  %cond = select i1 %cmp255, i32 %sub256, i32 %dd.0378
  %add257 = add nsw i32 %cond, %satd.0377
  %lftr.wideiv382 = trunc i64 %indvars.iv380 to i32
  %exitcond383 = icmp eq i32 %lftr.wideiv382, 16
  br i1 %exitcond383, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  %arrayidx258 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 %indvars.iv380
  %18 = load i32* %arrayidx258, align 4, !tbaa !3
  %phitmp = add i64 %indvars.iv380, 1
  br label %for.body

for.end:                                          ; preds = %for.body
  %add259 = add nsw i32 %add257, 1
  %shr = ashr i32 %add259, 1
  br label %if.end

for.body262:                                      ; preds = %for.body262, %for.cond260.preheader
  %indvars.iv = phi i64 [ 0, %for.cond260.preheader ], [ %indvars.iv.next, %for.body262 ]
  %satd.1375 = phi i32 [ 0, %for.cond260.preheader ], [ %add267, %for.body262 ]
  %arrayidx264 = getelementptr inbounds i32* %diff, i64 %indvars.iv
  %19 = load i32* %arrayidx264, align 4, !tbaa !3
  %idxprom265 = sext i32 %19 to i64
  %arrayidx266 = getelementptr inbounds i32* %1, i64 %idxprom265
  %20 = load i32* %arrayidx266, align 4, !tbaa !3
  %add267 = add nsw i32 %20, %satd.1375
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 16
  br i1 %exitcond, label %if.end, label %for.body262

if.end:                                           ; preds = %for.body262, %for.end
  %satd.2 = phi i32 [ %shr, %for.end ], [ %add267, %for.body262 ]
  call void @llvm.lifetime.end(i64 64, i8* %0) #3
  ret i32 %satd.2
}
