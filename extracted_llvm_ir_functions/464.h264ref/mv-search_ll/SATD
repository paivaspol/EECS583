define i32 @SATD(i32* nocapture %diff, i32 %use_hadamard) #6 {
entry:
  %d = alloca [16 x i32], align 16
  call void @llvm.dbg.value(metadata !{i32* %diff}, i64 0, metadata !325), !dbg !2038
  call void @llvm.dbg.value(metadata !{i32 %use_hadamard}, i64 0, metadata !326), !dbg !2038
  call void @llvm.dbg.value(metadata !26, i64 0, metadata !328), !dbg !2039
  call void @llvm.dbg.declare(metadata !2040, metadata !329), !dbg !2039
  %0 = bitcast [16 x i32]* %d to i8*, !dbg !2039
  call void @llvm.lifetime.start(i64 64, i8* %0) #4, !dbg !2039
  call void @llvm.dbg.declare(metadata !{[16 x i32]* %d}, metadata !334), !dbg !2039
  %tobool = icmp eq i32 %use_hadamard, 0, !dbg !2041
  br i1 %tobool, label %for.cond260.preheader, label %if.then, !dbg !2041

for.cond260.preheader:                            ; preds = %entry
  %1 = load i32** @byte_abs, align 8, !dbg !2042, !tbaa !1438
  br label %for.body262, !dbg !2046

if.then:                                          ; preds = %entry
  %2 = load i32* %diff, align 4, !dbg !2047, !tbaa !1441
  %arrayidx1 = getelementptr inbounds i32* %diff, i64 12, !dbg !2047
  %3 = load i32* %arrayidx1, align 4, !dbg !2047, !tbaa !1441
  %add = add nsw i32 %3, %2, !dbg !2047
  %arrayidx3 = getelementptr inbounds i32* %diff, i64 4, !dbg !2049
  %4 = load i32* %arrayidx3, align 4, !dbg !2049, !tbaa !1441
  %arrayidx4 = getelementptr inbounds i32* %diff, i64 8, !dbg !2049
  %5 = load i32* %arrayidx4, align 4, !dbg !2049, !tbaa !1441
  %add5 = add nsw i32 %5, %4, !dbg !2049
  %sub = sub nsw i32 %4, %5, !dbg !2050
  %sub12 = sub nsw i32 %2, %3, !dbg !2051
  %arrayidx14 = getelementptr inbounds i32* %diff, i64 1, !dbg !2052
  %6 = load i32* %arrayidx14, align 4, !dbg !2052, !tbaa !1441
  %arrayidx15 = getelementptr inbounds i32* %diff, i64 13, !dbg !2052
  %7 = load i32* %arrayidx15, align 4, !dbg !2052, !tbaa !1441
  %add16 = add nsw i32 %7, %6, !dbg !2052
  %arrayidx18 = getelementptr inbounds i32* %diff, i64 5, !dbg !2053
  %8 = load i32* %arrayidx18, align 4, !dbg !2053, !tbaa !1441
  %arrayidx19 = getelementptr inbounds i32* %diff, i64 9, !dbg !2053
  %9 = load i32* %arrayidx19, align 4, !dbg !2053, !tbaa !1441
  %add20 = add nsw i32 %9, %8, !dbg !2053
  %sub24 = sub nsw i32 %8, %9, !dbg !2054
  %sub28 = sub nsw i32 %6, %7, !dbg !2055
  %arrayidx30 = getelementptr inbounds i32* %diff, i64 2, !dbg !2056
  %10 = load i32* %arrayidx30, align 4, !dbg !2056, !tbaa !1441
  %arrayidx31 = getelementptr inbounds i32* %diff, i64 14, !dbg !2056
  %11 = load i32* %arrayidx31, align 4, !dbg !2056, !tbaa !1441
  %add32 = add nsw i32 %11, %10, !dbg !2056
  %arrayidx34 = getelementptr inbounds i32* %diff, i64 6, !dbg !2057
  %12 = load i32* %arrayidx34, align 4, !dbg !2057, !tbaa !1441
  %arrayidx35 = getelementptr inbounds i32* %diff, i64 10, !dbg !2057
  %13 = load i32* %arrayidx35, align 4, !dbg !2057, !tbaa !1441
  %add36 = add nsw i32 %13, %12, !dbg !2057
  %sub40 = sub nsw i32 %12, %13, !dbg !2058
  %sub44 = sub nsw i32 %10, %11, !dbg !2059
  %arrayidx46 = getelementptr inbounds i32* %diff, i64 3, !dbg !2060
  %14 = load i32* %arrayidx46, align 4, !dbg !2060, !tbaa !1441
  %arrayidx47 = getelementptr inbounds i32* %diff, i64 15, !dbg !2060
  %15 = load i32* %arrayidx47, align 4, !dbg !2060, !tbaa !1441
  %add48 = add nsw i32 %15, %14, !dbg !2060
  %arrayidx50 = getelementptr inbounds i32* %diff, i64 7, !dbg !2061
  %16 = load i32* %arrayidx50, align 4, !dbg !2061, !tbaa !1441
  %arrayidx51 = getelementptr inbounds i32* %diff, i64 11, !dbg !2061
  %17 = load i32* %arrayidx51, align 4, !dbg !2061, !tbaa !1441
  %add52 = add nsw i32 %17, %16, !dbg !2061
  %sub56 = sub nsw i32 %16, %17, !dbg !2062
  %sub60 = sub nsw i32 %14, %15, !dbg !2063
  %add64 = add nsw i32 %add5, %add, !dbg !2064
  %arrayidx65 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 0, !dbg !2064
  %sub68 = sub nsw i32 %add, %add5, !dbg !2065
  %arrayidx69 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 8, !dbg !2065
  %add72 = add nsw i32 %sub, %sub12, !dbg !2066
  %arrayidx73 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 4, !dbg !2066
  %sub76 = sub nsw i32 %sub12, %sub, !dbg !2067
  %arrayidx77 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 12, !dbg !2067
  %add80 = add nsw i32 %add20, %add16, !dbg !2068
  %arrayidx81 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 1, !dbg !2068
  %sub84 = sub nsw i32 %add16, %add20, !dbg !2069
  %arrayidx85 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 9, !dbg !2069
  %add88 = add nsw i32 %sub24, %sub28, !dbg !2070
  %arrayidx89 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 5, !dbg !2070
  %sub92 = sub nsw i32 %sub28, %sub24, !dbg !2071
  %arrayidx93 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 13, !dbg !2071
  %add96 = add nsw i32 %add36, %add32, !dbg !2072
  %arrayidx97 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 2, !dbg !2072
  %sub100 = sub nsw i32 %add32, %add36, !dbg !2073
  %arrayidx101 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 10, !dbg !2073
  %add104 = add nsw i32 %sub40, %sub44, !dbg !2074
  %arrayidx105 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 6, !dbg !2074
  %sub108 = sub nsw i32 %sub44, %sub40, !dbg !2075
  %arrayidx109 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 14, !dbg !2075
  %add112 = add nsw i32 %add52, %add48, !dbg !2076
  %arrayidx113 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 3, !dbg !2076
  %sub116 = sub nsw i32 %add48, %add52, !dbg !2077
  %arrayidx117 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 11, !dbg !2077
  %add120 = add nsw i32 %sub56, %sub60, !dbg !2078
  %arrayidx121 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 7, !dbg !2078
  %sub124 = sub nsw i32 %sub60, %sub56, !dbg !2079
  %arrayidx125 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 15, !dbg !2079
  %add128 = add nsw i32 %add112, %add64, !dbg !2080
  %add132 = add nsw i32 %add96, %add80, !dbg !2081
  %sub136 = sub nsw i32 %add80, %add96, !dbg !2082
  %sub140 = sub nsw i32 %add64, %add112, !dbg !2083
  %add144 = add nsw i32 %add120, %add72, !dbg !2084
  %add148 = add nsw i32 %add104, %add88, !dbg !2085
  %sub152 = sub nsw i32 %add88, %add104, !dbg !2086
  %sub156 = sub nsw i32 %add72, %add120, !dbg !2087
  %add160 = add nsw i32 %sub116, %sub68, !dbg !2088
  %add164 = add nsw i32 %sub100, %sub84, !dbg !2089
  %sub168 = sub nsw i32 %sub84, %sub100, !dbg !2090
  %sub172 = sub nsw i32 %sub68, %sub116, !dbg !2091
  %add176 = add nsw i32 %sub76, %sub124, !dbg !2092
  %add180 = add nsw i32 %sub108, %sub92, !dbg !2093
  %sub184 = sub nsw i32 %sub92, %sub108, !dbg !2094
  %sub188 = sub nsw i32 %sub76, %sub124, !dbg !2095
  %add192 = add nsw i32 %add132, %add128, !dbg !2096
  store i32 %add192, i32* %arrayidx65, align 16, !dbg !2096, !tbaa !1441
  %sub196 = sub nsw i32 %add128, %add132, !dbg !2097
  store i32 %sub196, i32* %arrayidx81, align 4, !dbg !2097, !tbaa !1441
  %add200 = add nsw i32 %sub136, %sub140, !dbg !2098
  store i32 %add200, i32* %arrayidx97, align 8, !dbg !2098, !tbaa !1441
  %sub204 = sub nsw i32 %sub140, %sub136, !dbg !2099
  store i32 %sub204, i32* %arrayidx113, align 4, !dbg !2099, !tbaa !1441
  %add208 = add nsw i32 %add148, %add144, !dbg !2100
  store i32 %add208, i32* %arrayidx73, align 16, !dbg !2100, !tbaa !1441
  %sub212 = sub nsw i32 %add144, %add148, !dbg !2101
  store i32 %sub212, i32* %arrayidx89, align 4, !dbg !2101, !tbaa !1441
  %add216 = add nsw i32 %sub152, %sub156, !dbg !2102
  store i32 %add216, i32* %arrayidx105, align 8, !dbg !2102, !tbaa !1441
  %sub220 = sub nsw i32 %sub156, %sub152, !dbg !2103
  store i32 %sub220, i32* %arrayidx121, align 4, !dbg !2103, !tbaa !1441
  %add224 = add nsw i32 %add164, %add160, !dbg !2104
  store i32 %add224, i32* %arrayidx69, align 16, !dbg !2104, !tbaa !1441
  %sub228 = sub nsw i32 %add160, %add164, !dbg !2105
  store i32 %sub228, i32* %arrayidx85, align 4, !dbg !2105, !tbaa !1441
  %add232 = add nsw i32 %sub168, %sub172, !dbg !2106
  store i32 %add232, i32* %arrayidx101, align 8, !dbg !2106, !tbaa !1441
  %sub236 = sub nsw i32 %sub172, %sub168, !dbg !2107
  store i32 %sub236, i32* %arrayidx117, align 4, !dbg !2107, !tbaa !1441
  %add240 = add nsw i32 %add180, %add176, !dbg !2108
  store i32 %add240, i32* %arrayidx77, align 16, !dbg !2108, !tbaa !1441
  %sub244 = sub nsw i32 %add176, %add180, !dbg !2109
  store i32 %sub244, i32* %arrayidx93, align 4, !dbg !2109, !tbaa !1441
  %add248 = add nsw i32 %sub184, %sub188, !dbg !2110
  store i32 %add248, i32* %arrayidx109, align 8, !dbg !2110, !tbaa !1441
  %sub252 = sub nsw i32 %sub188, %sub184, !dbg !2111
  store i32 %sub252, i32* %arrayidx125, align 4, !dbg !2111, !tbaa !1441
  call void @llvm.dbg.value(metadata !26, i64 0, metadata !327), !dbg !2112
  call void @llvm.dbg.value(metadata !{i32 %add192}, i64 0, metadata !333), !dbg !2112
  br label %for.body, !dbg !2112

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.then
  %indvars.iv380 = phi i64 [ 1, %if.then ], [ %phitmp, %for.body.for.body_crit_edge ]
  %dd.0378 = phi i32 [ %add192, %if.then ], [ %18, %for.body.for.body_crit_edge ]
  %satd.0377 = phi i32 [ 0, %if.then ], [ %add257, %for.body.for.body_crit_edge ]
  %cmp255 = icmp slt i32 %dd.0378, 0, !dbg !2114
  %sub256 = sub nsw i32 0, %dd.0378, !dbg !2114
  %cond = select i1 %cmp255, i32 %sub256, i32 %dd.0378, !dbg !2114
  %add257 = add nsw i32 %cond, %satd.0377, !dbg !2114
  call void @llvm.dbg.value(metadata !{i32 %add257}, i64 0, metadata !328), !dbg !2114
  call void @llvm.dbg.value(metadata !{i32 %18}, i64 0, metadata !333), !dbg !2112
  %lftr.wideiv382 = trunc i64 %indvars.iv380 to i32, !dbg !2112
  %exitcond383 = icmp eq i32 %lftr.wideiv382, 16, !dbg !2112
  br i1 %exitcond383, label %for.end, label %for.body.for.body_crit_edge, !dbg !2112

for.body.for.body_crit_edge:                      ; preds = %for.body
  %arrayidx258 = getelementptr inbounds [16 x i32]* %d, i64 0, i64 %indvars.iv380, !dbg !2112
  %18 = load i32* %arrayidx258, align 4, !dbg !2112, !tbaa !1441
  %phitmp = add i64 %indvars.iv380, 1, !dbg !2112
  br label %for.body, !dbg !2112

for.end:                                          ; preds = %for.body
  %add259 = add nsw i32 %add257, 1, !dbg !2116
  %shr = ashr i32 %add259, 1, !dbg !2116
  call void @llvm.dbg.value(metadata !{i32 %shr}, i64 0, metadata !328), !dbg !2116
  br label %if.end, !dbg !2117

for.body262:                                      ; preds = %for.body262, %for.cond260.preheader
  %indvars.iv = phi i64 [ 0, %for.cond260.preheader ], [ %indvars.iv.next, %for.body262 ]
  %satd.1375 = phi i32 [ 0, %for.cond260.preheader ], [ %add267, %for.body262 ]
  %arrayidx264 = getelementptr inbounds i32* %diff, i64 %indvars.iv, !dbg !2042
  %19 = load i32* %arrayidx264, align 4, !dbg !2042, !tbaa !1441
  %idxprom265 = sext i32 %19 to i64, !dbg !2042
  %arrayidx266 = getelementptr inbounds i32* %1, i64 %idxprom265, !dbg !2042
  %20 = load i32* %arrayidx266, align 4, !dbg !2042, !tbaa !1441
  %add267 = add nsw i32 %20, %satd.1375, !dbg !2042
  call void @llvm.dbg.value(metadata !{i32 %add267}, i64 0, metadata !328), !dbg !2042
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !2046
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !2046
  %exitcond = icmp eq i32 %lftr.wideiv, 16, !dbg !2046
  br i1 %exitcond, label %if.end, label %for.body262, !dbg !2046

if.end:                                           ; preds = %for.body262, %for.end
  %satd.2 = phi i32 [ %shr, %for.end ], [ %add267, %for.body262 ]
  call void @llvm.lifetime.end(i64 64, i8* %0) #4, !dbg !2118
  ret i32 %satd.2, !dbg !2118
}
