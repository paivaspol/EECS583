define void @FindSkipModeMotionVector() #0 {
entry:
  %pmv = alloca [2 x i16], align 2
  %mb_a = alloca %struct.pix_pos, align 4
  %mb_b = alloca %struct.pix_pos, align 4
  %0 = load %struct.ImageParameters** @img, align 8, !tbaa !0
  %all_mv1 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 71
  %1 = load i16******* %all_mv1, align 8, !tbaa !0
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 3
  %2 = load i32* %current_mb_nr, align 4, !tbaa !3
  %idxprom = sext i32 %2 to i64
  %mb_data = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 51
  %3 = load %struct.macroblock** %mb_data, align 8, !tbaa !0
  call void @getLuma4x4Neighbour(i32 %2, i32 0, i32 0, i32 -1, i32 0, %struct.pix_pos* %mb_a) #7
  %4 = load %struct.ImageParameters** @img, align 8, !tbaa !0
  %current_mb_nr3 = getelementptr inbounds %struct.ImageParameters* %4, i64 0, i32 3
  %5 = load i32* %current_mb_nr3, align 4, !tbaa !3
  call void @getLuma4x4Neighbour(i32 %5, i32 0, i32 0, i32 0, i32 -1, %struct.pix_pos* %mb_b) #7
  %available = getelementptr inbounds %struct.pix_pos* %mb_a, i64 0, i32 0
  %6 = load i32* %available, align 4, !tbaa !3
  %tobool = icmp eq i32 %6, 0
  br i1 %tobool, label %if.end37, label %if.then

if.then:                                          ; preds = %entry
  %pos_y = getelementptr inbounds %struct.pix_pos* %mb_a, i64 0, i32 5
  %7 = load i32* %pos_y, align 4, !tbaa !3
  %idxprom4 = sext i32 %7 to i64
  %pos_x = getelementptr inbounds %struct.pix_pos* %mb_a, i64 0, i32 4
  %8 = load i32* %pos_x, align 4, !tbaa !3
  %idxprom5 = sext i32 %8 to i64
  %9 = load %struct.storable_picture** @enc_picture, align 8, !tbaa !0
  %mv = getelementptr inbounds %struct.storable_picture* %9, i64 0, i32 35
  %10 = load i16***** %mv, align 8, !tbaa !0
  %11 = load i16**** %10, align 8, !tbaa !0
  %arrayidx7 = getelementptr inbounds i16*** %11, i64 %idxprom5
  %12 = load i16*** %arrayidx7, align 8, !tbaa !0
  %arrayidx8 = getelementptr inbounds i16** %12, i64 %idxprom4
  %13 = load i16** %arrayidx8, align 8, !tbaa !0
  %arrayidx9 = getelementptr inbounds i16* %13, i64 1
  %14 = load i16* %arrayidx9, align 2, !tbaa !4
  %conv = sext i16 %14 to i32
  %ref_idx = getelementptr inbounds %struct.storable_picture* %9, i64 0, i32 32
  %15 = load i16**** %ref_idx, align 8, !tbaa !0
  %16 = load i16*** %15, align 8, !tbaa !0
  %arrayidx15 = getelementptr inbounds i16** %16, i64 %idxprom5
  %17 = load i16** %arrayidx15, align 8, !tbaa !0
  %arrayidx16 = getelementptr inbounds i16* %17, i64 %idxprom4
  %18 = load i16* %arrayidx16, align 2, !tbaa !4
  %conv17 = sext i16 %18 to i32
  %mb_field = getelementptr inbounds %struct.macroblock* %3, i64 %idxprom, i32 22
  %19 = load i32* %mb_field, align 4, !tbaa !3
  %tobool18 = icmp eq i32 %19, 0
  %mb_addr28.phi.trans.insert = getelementptr inbounds %struct.pix_pos* %mb_a, i64 0, i32 1
  %.pre251 = load i32* %mb_addr28.phi.trans.insert, align 4, !tbaa !3
  br i1 %tobool18, label %land.lhs.true27, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %idxprom19 = sext i32 %.pre251 to i64
  %20 = load %struct.ImageParameters** @img, align 8, !tbaa !0
  %mb_data20 = getelementptr inbounds %struct.ImageParameters* %20, i64 0, i32 51
  %21 = load %struct.macroblock** %mb_data20, align 8, !tbaa !0
  %mb_field22 = getelementptr inbounds %struct.macroblock* %21, i64 %idxprom19, i32 22
  %22 = load i32* %mb_field22, align 4, !tbaa !3
  %tobool23 = icmp eq i32 %22, 0
  br i1 %tobool23, label %if.then24, label %if.end37

if.then24:                                        ; preds = %land.lhs.true
  %div = sdiv i32 %conv, 2
  %mul = shl nsw i32 %conv17, 1
  br label %if.end37

land.lhs.true27:                                  ; preds = %if.then
  %.pre252 = load %struct.ImageParameters** @img, align 8, !tbaa !0
  %mb_data30.phi.trans.insert = getelementptr inbounds %struct.ImageParameters* %.pre252, i64 0, i32 51
  %.pre253 = load %struct.macroblock** %mb_data30.phi.trans.insert, align 8, !tbaa !0
  %idxprom29.phi.trans.insert = sext i32 %.pre251 to i64
  %mb_field32.phi.trans.insert = getelementptr inbounds %struct.macroblock* %.pre253, i64 %idxprom29.phi.trans.insert, i32 22
  %.pre254 = load i32* %mb_field32.phi.trans.insert, align 4, !tbaa !3
  %tobool33 = icmp eq i32 %.pre254, 0
  br i1 %tobool33, label %if.end37, label %if.then34

if.then34:                                        ; preds = %land.lhs.true27
  %mul35 = shl nsw i32 %conv, 1
  %shr = ashr i32 %conv17, 1
  br label %if.end37

if.end37:                                         ; preds = %if.then24, %land.lhs.true, %land.lhs.true27, %entry, %if.then34
  %a_mv_y.1 = phi i32 [ %mul35, %if.then34 ], [ %conv, %land.lhs.true27 ], [ 0, %entry ], [ %conv, %land.lhs.true ], [ %div, %if.then24 ]
  %a_ref_idx.1 = phi i32 [ %shr, %if.then34 ], [ %conv17, %land.lhs.true27 ], [ 0, %entry ], [ %conv17, %land.lhs.true ], [ %mul, %if.then24 ]
  %available38 = getelementptr inbounds %struct.pix_pos* %mb_b, i64 0, i32 0
  %23 = load i32* %available38, align 4, !tbaa !3
  %tobool39 = icmp eq i32 %23, 0
  br i1 %tobool39, label %if.end86, label %if.then40

if.then40:                                        ; preds = %if.end37
  %pos_y41 = getelementptr inbounds %struct.pix_pos* %mb_b, i64 0, i32 5
  %24 = load i32* %pos_y41, align 4, !tbaa !3
  %idxprom42 = sext i32 %24 to i64
  %pos_x43 = getelementptr inbounds %struct.pix_pos* %mb_b, i64 0, i32 4
  %25 = load i32* %pos_x43, align 4, !tbaa !3
  %idxprom44 = sext i32 %25 to i64
  %26 = load %struct.storable_picture** @enc_picture, align 8, !tbaa !0
  %mv45 = getelementptr inbounds %struct.storable_picture* %26, i64 0, i32 35
  %27 = load i16***** %mv45, align 8, !tbaa !0
  %28 = load i16**** %27, align 8, !tbaa !0
  %arrayidx47 = getelementptr inbounds i16*** %28, i64 %idxprom44
  %29 = load i16*** %arrayidx47, align 8, !tbaa !0
  %arrayidx48 = getelementptr inbounds i16** %29, i64 %idxprom42
  %30 = load i16** %arrayidx48, align 8, !tbaa !0
  %arrayidx49 = getelementptr inbounds i16* %30, i64 1
  %31 = load i16* %arrayidx49, align 2, !tbaa !4
  %conv50 = sext i16 %31 to i32
  %ref_idx55 = getelementptr inbounds %struct.storable_picture* %26, i64 0, i32 32
  %32 = load i16**** %ref_idx55, align 8, !tbaa !0
  %33 = load i16*** %32, align 8, !tbaa !0
  %arrayidx57 = getelementptr inbounds i16** %33, i64 %idxprom44
  %34 = load i16** %arrayidx57, align 8, !tbaa !0
  %arrayidx58 = getelementptr inbounds i16* %34, i64 %idxprom42
  %35 = load i16* %arrayidx58, align 2, !tbaa !4
  %conv59 = sext i16 %35 to i32
  %mb_field60 = getelementptr inbounds %struct.macroblock* %3, i64 %idxprom, i32 22
  %36 = load i32* %mb_field60, align 4, !tbaa !3
  %tobool61 = icmp eq i32 %36, 0
  %mb_addr76.phi.trans.insert = getelementptr inbounds %struct.pix_pos* %mb_b, i64 0, i32 1
  %.pre247 = load i32* %mb_addr76.phi.trans.insert, align 4, !tbaa !3
  br i1 %tobool61, label %land.lhs.true75, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %if.then40
  %idxprom64 = sext i32 %.pre247 to i64
  %37 = load %struct.ImageParameters** @img, align 8, !tbaa !0
  %mb_data65 = getelementptr inbounds %struct.ImageParameters* %37, i64 0, i32 51
  %38 = load %struct.macroblock** %mb_data65, align 8, !tbaa !0
  %mb_field67 = getelementptr inbounds %struct.macroblock* %38, i64 %idxprom64, i32 22
  %39 = load i32* %mb_field67, align 4, !tbaa !3
  %tobool68 = icmp eq i32 %39, 0
  br i1 %tobool68, label %if.then69, label %if.end86

if.then69:                                        ; preds = %land.lhs.true62
  %div70 = sdiv i32 %conv50, 2
  %mul71 = shl nsw i32 %conv59, 1
  br label %if.end86

land.lhs.true75:                                  ; preds = %if.then40
  %.pre248 = load %struct.ImageParameters** @img, align 8, !tbaa !0
  %mb_data78.phi.trans.insert = getelementptr inbounds %struct.ImageParameters* %.pre248, i64 0, i32 51
  %.pre249 = load %struct.macroblock** %mb_data78.phi.trans.insert, align 8, !tbaa !0
  %idxprom77.phi.trans.insert = sext i32 %.pre247 to i64
  %mb_field80.phi.trans.insert = getelementptr inbounds %struct.macroblock* %.pre249, i64 %idxprom77.phi.trans.insert, i32 22
  %.pre250 = load i32* %mb_field80.phi.trans.insert, align 4, !tbaa !3
  %tobool81 = icmp eq i32 %.pre250, 0
  br i1 %tobool81, label %if.end86, label %if.then82

if.then82:                                        ; preds = %land.lhs.true75
  %mul83 = shl nsw i32 %conv50, 1
  %shr84 = ashr i32 %conv59, 1
  br label %if.end86

if.end86:                                         ; preds = %if.then69, %land.lhs.true62, %land.lhs.true75, %if.end37, %if.then82
  %b_mv_y.1 = phi i32 [ %mul83, %if.then82 ], [ %conv50, %land.lhs.true75 ], [ 0, %if.end37 ], [ %conv50, %land.lhs.true62 ], [ %div70, %if.then69 ]
  %b_ref_idx.1 = phi i32 [ %shr84, %if.then82 ], [ %conv59, %land.lhs.true75 ], [ 0, %if.end37 ], [ %conv59, %land.lhs.true62 ], [ %mul71, %if.then69 ]
  br i1 %tobool, label %cond.end, label %cond.false

cond.false:                                       ; preds = %if.end86
  %cmp = icmp eq i32 %a_ref_idx.1, 0
  br i1 %cmp, label %land.lhs.true90, label %land.end

land.lhs.true90:                                  ; preds = %cond.false
  %pos_y91 = getelementptr inbounds %struct.pix_pos* %mb_a, i64 0, i32 5
  %40 = load i32* %pos_y91, align 4, !tbaa !3
  %idxprom92 = sext i32 %40 to i64
  %pos_x93 = getelementptr inbounds %struct.pix_pos* %mb_a, i64 0, i32 4
  %41 = load i32* %pos_x93, align 4, !tbaa !3
  %idxprom94 = sext i32 %41 to i64
  %42 = load %struct.storable_picture** @enc_picture, align 8, !tbaa !0
  %mv95 = getelementptr inbounds %struct.storable_picture* %42, i64 0, i32 35
  %43 = load i16***** %mv95, align 8, !tbaa !0
  %44 = load i16**** %43, align 8, !tbaa !0
  %arrayidx97 = getelementptr inbounds i16*** %44, i64 %idxprom94
  %45 = load i16*** %arrayidx97, align 8, !tbaa !0
  %arrayidx98 = getelementptr inbounds i16** %45, i64 %idxprom92
  %46 = load i16** %arrayidx98, align 8, !tbaa !0
  %47 = load i16* %46, align 2, !tbaa !4
  %cmp101 = icmp eq i16 %47, 0
  %cmp103 = icmp eq i32 %a_mv_y.1, 0
  %cmp103. = and i1 %cmp101, %cmp103
  br label %land.end

land.end:                                         ; preds = %land.lhs.true90, %cond.false
  %48 = phi i1 [ false, %cond.false ], [ %cmp103., %land.lhs.true90 ]
  %cond = zext i1 %48 to i32
  br label %cond.end

cond.end:                                         ; preds = %if.end86, %land.end
  %cond105 = phi i32 [ %cond, %land.end ], [ 1, %if.end86 ]
  br i1 %tobool39, label %for.cond137.preheader, label %cond.false109

cond.false109:                                    ; preds = %cond.end
  %cmp110 = icmp eq i32 %b_ref_idx.1, 0
  br i1 %cmp110, label %land.lhs.true112, label %lor.lhs.false.critedge

land.lhs.true112:                                 ; preds = %cond.false109
  %pos_y113 = getelementptr inbounds %struct.pix_pos* %mb_b, i64 0, i32 5
  %49 = load i32* %pos_y113, align 4, !tbaa !3
  %idxprom114 = sext i32 %49 to i64
  %pos_x115 = getelementptr inbounds %struct.pix_pos* %mb_b, i64 0, i32 4
  %50 = load i32* %pos_x115, align 4, !tbaa !3
  %idxprom116 = sext i32 %50 to i64
  %51 = load %struct.storable_picture** @enc_picture, align 8, !tbaa !0
  %mv117 = getelementptr inbounds %struct.storable_picture* %51, i64 0, i32 35
  %52 = load i16***** %mv117, align 8, !tbaa !0
  %53 = load i16**** %52, align 8, !tbaa !0
  %arrayidx119 = getelementptr inbounds i16*** %53, i64 %idxprom116
  %54 = load i16*** %arrayidx119, align 8, !tbaa !0
  %arrayidx120 = getelementptr inbounds i16** %54, i64 %idxprom114
  %55 = load i16** %arrayidx120, align 8, !tbaa !0
  %56 = load i16* %55, align 2, !tbaa !4
  %notlhs = icmp ne i16 %56, 0
  %notrhs = icmp ne i32 %b_mv_y.1, 0
  %cmp126..not = or i1 %notrhs, %notlhs
  %tobool133 = icmp eq i32 %cond105, 0
  %or.cond = and i1 %cmp126..not, %tobool133
  br i1 %or.cond, label %if.else, label %for.cond137.preheader

lor.lhs.false.critedge:                           ; preds = %cond.false109
  %tobool133.old = icmp eq i32 %cond105, 0
  br i1 %tobool133.old, label %lor.lhs.false.critedge.if.else_crit_edge, label %for.cond137.preheader

lor.lhs.false.critedge.if.else_crit_edge:         ; preds = %lor.lhs.false.critedge
  %.pre = load %struct.storable_picture** @enc_picture, align 8, !tbaa !0
  %mv161.phi.trans.insert = getelementptr inbounds %struct.storable_picture* %.pre, i64 0, i32 35
  %.pre246 = load i16***** %mv161.phi.trans.insert, align 8, !tbaa !0
  br label %if.else

for.cond137.preheader:                            ; preds = %lor.lhs.false.critedge, %land.lhs.true112, %cond.end, %for.inc157
  %indvars.iv234 = phi i64 [ %indvars.iv.next235, %for.inc157 ], [ 0, %cond.end ], [ 0, %land.lhs.true112 ], [ 0, %lor.lhs.false.critedge ]
  br label %for.body140

for.body140:                                      ; preds = %for.body140, %for.cond137.preheader
  %indvars.iv = phi i64 [ 0, %for.cond137.preheader ], [ %indvars.iv.next, %for.body140 ]
  %arrayidx143 = getelementptr inbounds i16****** %1, i64 %indvars.iv
  %57 = load i16****** %arrayidx143, align 8, !tbaa !0
  %arrayidx144 = getelementptr inbounds i16***** %57, i64 %indvars.iv234
  %58 = load i16***** %arrayidx144, align 8, !tbaa !0
  %59 = load i16**** %58, align 8, !tbaa !0
  %60 = load i16*** %59, align 8, !tbaa !0
  %61 = load i16** %60, align 8, !tbaa !0
  store i16 0, i16* %61, align 2, !tbaa !4
  %arrayidx156 = getelementptr inbounds i16* %61, i64 1
  store i16 0, i16* %arrayidx156, align 2, !tbaa !4
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 4
  br i1 %exitcond, label %for.inc157, label %for.body140

for.inc157:                                       ; preds = %for.body140
  %indvars.iv.next235 = add i64 %indvars.iv234, 1
  %lftr.wideiv236 = trunc i64 %indvars.iv.next235 to i32
  %exitcond237 = icmp eq i32 %lftr.wideiv236, 4
  br i1 %exitcond237, label %if.end194, label %for.cond137.preheader

if.else:                                          ; preds = %lor.lhs.false.critedge.if.else_crit_edge, %land.lhs.true112
  %62 = phi i16**** [ %.pre246, %lor.lhs.false.critedge.if.else_crit_edge ], [ %52, %land.lhs.true112 ]
  %63 = phi %struct.storable_picture* [ %.pre, %lor.lhs.false.critedge.if.else_crit_edge ], [ %51, %land.lhs.true112 ]
  %arraydecay = getelementptr inbounds [2 x i16]* %pmv, i64 0, i64 0
  %ref_idx160 = getelementptr inbounds %struct.storable_picture* %63, i64 0, i32 32
  %64 = load i16**** %ref_idx160, align 8, !tbaa !0
  call void @SetMotionVectorPredictor(i16* %arraydecay, i16*** %64, i16**** %62, i16 signext 0, i32 0, i32 0, i32 0, i32 16, i32 16) #8
  %65 = load i16* %arraydecay, align 2, !tbaa !4
  %arrayidx179 = getelementptr inbounds [2 x i16]* %pmv, i64 0, i64 1
  %66 = load i16* %arrayidx179, align 2, !tbaa !4
  br label %for.cond166.preheader

for.cond166.preheader:                            ; preds = %for.inc191, %if.else
  %indvars.iv242 = phi i64 [ 0, %if.else ], [ %indvars.iv.next243, %for.inc191 ]
  br label %for.body169

for.body169:                                      ; preds = %for.body169, %for.cond166.preheader
  %indvars.iv238 = phi i64 [ 0, %for.cond166.preheader ], [ %indvars.iv.next239, %for.body169 ]
  %arrayidx173 = getelementptr inbounds i16****** %1, i64 %indvars.iv238
  %67 = load i16****** %arrayidx173, align 8, !tbaa !0
  %arrayidx174 = getelementptr inbounds i16***** %67, i64 %indvars.iv242
  %68 = load i16***** %arrayidx174, align 8, !tbaa !0
  %69 = load i16**** %68, align 8, !tbaa !0
  %70 = load i16*** %69, align 8, !tbaa !0
  %71 = load i16** %70, align 8, !tbaa !0
  store i16 %65, i16* %71, align 2, !tbaa !4
  %arrayidx187 = getelementptr inbounds i16* %71, i64 1
  store i16 %66, i16* %arrayidx187, align 2, !tbaa !4
  %indvars.iv.next239 = add i64 %indvars.iv238, 1
  %lftr.wideiv240 = trunc i64 %indvars.iv.next239 to i32
  %exitcond241 = icmp eq i32 %lftr.wideiv240, 4
  br i1 %exitcond241, label %for.inc191, label %for.body169

for.inc191:                                       ; preds = %for.body169
  %indvars.iv.next243 = add i64 %indvars.iv242, 1
  %lftr.wideiv244 = trunc i64 %indvars.iv.next243 to i32
  %exitcond245 = icmp eq i32 %lftr.wideiv244, 4
  br i1 %exitcond245, label %if.end194, label %for.cond166.preheader

if.end194:                                        ; preds = %for.inc191, %for.inc157
  ret void
}
