define i32 @Get_Direct_Cost8x8(i32 %block, i32* nocapture %cost8x8) #0 {
entry:
  %curr_diff = alloca [8 x [8 x i32]], align 16
  %diff8x8 = alloca [64 x i32], align 16
  %diff = alloca [16 x i32], align 16
  call void @llvm.dbg.value(metadata !{i32 %block}, i64 0, metadata !781), !dbg !3310
  call void @llvm.dbg.value(metadata !{i32* %cost8x8}, i64 0, metadata !782), !dbg !3310
  %0 = bitcast [8 x [8 x i32]]* %curr_diff to i8*, !dbg !3311
  call void @llvm.lifetime.start(i64 256, i8* %0) #4, !dbg !3311
  call void @llvm.dbg.declare(metadata !{[8 x [8 x i32]]* %curr_diff}, metadata !790), !dbg !3311
  %1 = bitcast [64 x i32]* %diff8x8 to i8*, !dbg !3311
  call void @llvm.lifetime.start(i64 256, i8* %1) #4, !dbg !3311
  call void @llvm.dbg.declare(metadata !{[64 x i32]* %diff8x8}, metadata !791), !dbg !3311
  %2 = bitcast [16 x i32]* %diff to i8*, !dbg !3312
  call void @llvm.lifetime.start(i64 64, i8* %2) #4, !dbg !3312
  call void @llvm.dbg.declare(metadata !{[16 x i32]* %diff}, metadata !792), !dbg !3312
  call void @llvm.dbg.value(metadata !26, i64 0, metadata !793), !dbg !3313
  %div = sdiv i32 %block, 2, !dbg !3314
  %shl = shl i32 %div, 3, !dbg !3314
  call void @llvm.dbg.value(metadata !{i32 %shl}, i64 0, metadata !794), !dbg !3314
  %rem = srem i32 %block, 2, !dbg !3315
  %shl1 = shl i32 %rem, 3, !dbg !3315
  call void @llvm.dbg.value(metadata !{i32 %shl1}, i64 0, metadata !795), !dbg !3315
  call void @llvm.dbg.value(metadata !{i32 %shl}, i64 0, metadata !783), !dbg !3316
  %arraydecay = getelementptr inbounds [16 x i32]* %diff, i64 0, i64 0, !dbg !3318
  %3 = shl i32 %rem, 3, !dbg !3316
  %4 = sext i32 %3 to i64
  %5 = shl i32 %div, 3, !dbg !3316
  %6 = sext i32 %5 to i64
  %.pre = load %struct.ImageParameters** @img, align 8, !dbg !3322, !tbaa !1438
  br label %for.body, !dbg !3316

for.body:                                         ; preds = %entry, %for.inc74
  %7 = phi %struct.ImageParameters* [ %.pre, %entry ], [ %26, %for.inc74 ]
  %indvars.iv187 = phi i64 [ %6, %entry ], [ %indvars.iv.next188, %for.inc74 ]
  %cost.0162 = phi i32 [ 0, %entry ], [ %add70, %for.inc74 ]
  %opix_y = getelementptr inbounds %struct.ImageParameters* %7, i64 0, i32 38, !dbg !3322
  %8 = load i32* %opix_y, align 4, !dbg !3322, !tbaa !1441
  %9 = trunc i64 %indvars.iv187 to i32, !dbg !3322
  %add2 = add nsw i32 %8, %9, !dbg !3322
  call void @llvm.dbg.value(metadata !{i32 %add2}, i64 0, metadata !785), !dbg !3322
  call void @llvm.dbg.value(metadata !{i32 %shl1}, i64 0, metadata !784), !dbg !3323
  %shr = ashr i32 %add2, 2, !dbg !3324
  %idxprom = sext i32 %shr to i64, !dbg !3324
  %sub59 = sub i32 %9, %shl, !dbg !3325
  %10 = sext i32 %add2 to i64, !dbg !3323
  %11 = sext i32 %sub59 to i64, !dbg !3323
  br label %for.body6, !dbg !3323

for.body6:                                        ; preds = %for.body, %for.end69
  %12 = phi %struct.ImageParameters* [ %7, %for.body ], [ %26, %for.end69 ]
  %indvars.iv185 = phi i64 [ %4, %for.body ], [ %indvars.iv.next186, %for.end69 ]
  %cost.1160 = phi i32 [ %cost.0162, %for.body ], [ %add70, %for.end69 ]
  %opix_x = getelementptr inbounds %struct.ImageParameters* %12, i64 0, i32 37, !dbg !3329
  %13 = load i32* %opix_x, align 4, !dbg !3329, !tbaa !1441
  %14 = trunc i64 %indvars.iv185 to i32, !dbg !3329
  %add7 = add nsw i32 %13, %14, !dbg !3329
  call void @llvm.dbg.value(metadata !{i32 %add7}, i64 0, metadata !786), !dbg !3329
  %shr8 = ashr i32 %add7, 2, !dbg !3324
  %idxprom9 = sext i32 %shr8 to i64, !dbg !3324
  %15 = load i16*** @direct_pdir, align 8, !dbg !3324, !tbaa !1438
  %arrayidx = getelementptr inbounds i16** %15, i64 %idxprom9, !dbg !3324
  %16 = load i16** %arrayidx, align 8, !dbg !3324, !tbaa !1438
  %arrayidx10 = getelementptr inbounds i16* %16, i64 %idxprom, !dbg !3324
  %17 = load i16* %arrayidx10, align 2, !dbg !3324, !tbaa !1654
  %cmp11 = icmp slt i16 %17, 0, !dbg !3324
  br i1 %cmp11, label %if.then, label %if.end, !dbg !3324

if.then:                                          ; preds = %for.body6
  store i32 2147483647, i32* %cost8x8, align 4, !dbg !3330, !tbaa !1441
  br label %cleanup, !dbg !3332

if.end:                                           ; preds = %for.body6
  %conv = sext i16 %17 to i32, !dbg !3324
  %18 = load i16**** @direct_ref_idx, align 8, !dbg !3333, !tbaa !1438
  %19 = load i16*** %18, align 8, !dbg !3333, !tbaa !1438
  %arrayidx25 = getelementptr inbounds i16** %19, i64 %idxprom9, !dbg !3333
  %20 = load i16** %arrayidx25, align 8, !dbg !3333, !tbaa !1438
  %arrayidx26 = getelementptr inbounds i16* %20, i64 %idxprom, !dbg !3333
  %21 = load i16* %arrayidx26, align 2, !dbg !3333, !tbaa !1654
  %arrayidx31 = getelementptr inbounds i16*** %18, i64 1, !dbg !3333
  %22 = load i16*** %arrayidx31, align 8, !dbg !3333, !tbaa !1438
  %arrayidx32 = getelementptr inbounds i16** %22, i64 %idxprom9, !dbg !3333
  %23 = load i16** %arrayidx32, align 8, !dbg !3333, !tbaa !1438
  %arrayidx33 = getelementptr inbounds i16* %23, i64 %idxprom, !dbg !3333
  %24 = load i16* %arrayidx33, align 2, !dbg !3333, !tbaa !1654
  call void @LumaPrediction4x4(i32 %14, i32 %9, i32 %conv, i32 0, i32 0, i16 signext %21, i16 signext %24) #8, !dbg !3333
  call void @llvm.dbg.value(metadata !26, i64 0, metadata !788), !dbg !3334
  call void @llvm.dbg.value(metadata !26, i64 0, metadata !789), !dbg !3334
  %25 = load i16*** @imgY_org, align 8, !dbg !3325, !tbaa !1438
  %26 = load %struct.ImageParameters** @img, align 8, !dbg !3325, !tbaa !1438
  %sub56 = sub i32 %14, %shl1, !dbg !3325
  %27 = sext i32 %add7 to i64, !dbg !3334
  %28 = sext i32 %sub56 to i64, !dbg !3334
  br label %for.cond38.preheader, !dbg !3334

for.cond38.preheader:                             ; preds = %for.inc67, %if.end
  %indvars.iv178 = phi i64 [ 0, %if.end ], [ %indvars.iv.next179, %for.inc67 ], !dbg !3334
  %indvars.iv176 = phi i64 [ 0, %if.end ], [ %indvars.iv.next177, %for.inc67 ]
  %29 = add nsw i64 %indvars.iv178, %10, !dbg !3325
  %arrayidx46 = getelementptr inbounds i16** %25, i64 %29, !dbg !3325
  %30 = load i16** %arrayidx46, align 8, !dbg !3325, !tbaa !1438
  %31 = add nsw i64 %indvars.iv178, %indvars.iv187, !dbg !3325
  %32 = add nsw i64 %11, %indvars.iv178, !dbg !3325
  br label %for.body41, !dbg !3335

for.body41:                                       ; preds = %for.body41, %for.cond38.preheader
  %indvars.iv169 = phi i64 [ 0, %for.cond38.preheader ], [ %indvars.iv.next170, %for.body41 ], !dbg !3335
  %indvars.iv = phi i64 [ %indvars.iv176, %for.cond38.preheader ], [ %indvars.iv.next, %for.body41 ]
  %33 = add nsw i64 %indvars.iv169, %27, !dbg !3325
  %arrayidx47 = getelementptr inbounds i16* %30, i64 %33, !dbg !3325
  %34 = load i16* %arrayidx47, align 2, !dbg !3325, !tbaa !1654
  %conv48 = zext i16 %34 to i32, !dbg !3325
  %35 = add nsw i64 %indvars.iv169, %indvars.iv185, !dbg !3325
  %arrayidx54 = getelementptr inbounds %struct.ImageParameters* %26, i64 0, i32 45, i64 %35, i64 %31, !dbg !3325
  %36 = load i16* %arrayidx54, align 2, !dbg !3325, !tbaa !1654
  %conv55 = zext i16 %36 to i32, !dbg !3325
  %sub = sub nsw i32 %conv48, %conv55, !dbg !3325
  %37 = add nsw i64 %28, %indvars.iv169, !dbg !3325
  %arrayidx63 = getelementptr inbounds [8 x [8 x i32]]* %curr_diff, i64 0, i64 %32, i64 %37, !dbg !3325
  store i32 %sub, i32* %arrayidx63, align 4, !dbg !3325, !tbaa !1441
  %arrayidx65 = getelementptr inbounds [16 x i32]* %diff, i64 0, i64 %indvars.iv, !dbg !3325
  store i32 %sub, i32* %arrayidx65, align 4, !dbg !3325, !tbaa !1441
  %indvars.iv.next170 = add i64 %indvars.iv169, 1, !dbg !3335
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !3335
  %lftr.wideiv174 = trunc i64 %indvars.iv.next170 to i32, !dbg !3335
  %exitcond175 = icmp eq i32 %lftr.wideiv174, 4, !dbg !3335
  br i1 %exitcond175, label %for.inc67, label %for.body41, !dbg !3335

for.inc67:                                        ; preds = %for.body41
  %indvars.iv.next177 = add i64 %indvars.iv176, 4, !dbg !3334
  %indvars.iv.next179 = add i64 %indvars.iv178, 1, !dbg !3334
  %lftr.wideiv183 = trunc i64 %indvars.iv.next179 to i32, !dbg !3334
  %exitcond184 = icmp eq i32 %lftr.wideiv183, 4, !dbg !3334
  br i1 %exitcond184, label %for.end69, label %for.cond38.preheader, !dbg !3334

for.end69:                                        ; preds = %for.inc67
  %38 = load %struct.InputParameters** @input, align 8, !dbg !3318, !tbaa !1438
  %hadamard = getelementptr inbounds %struct.InputParameters* %38, i64 0, i32 6, !dbg !3318
  %39 = load i32* %hadamard, align 4, !dbg !3318, !tbaa !1441
  %call = call i32 @SATD(i32* %arraydecay, i32 %39) #9, !dbg !3318
  %add70 = add nsw i32 %call, %cost.1160, !dbg !3318
  call void @llvm.dbg.value(metadata !{i32 %add70}, i64 0, metadata !793), !dbg !3318
  %indvars.iv.next186 = add i64 %indvars.iv185, 4, !dbg !3323
  %40 = or i32 %shl1, 4, !dbg !3323
  %cmp5 = icmp slt i32 %14, %40, !dbg !3323
  br i1 %cmp5, label %for.body6, label %for.inc74, !dbg !3323

for.inc74:                                        ; preds = %for.end69
  %indvars.iv.next188 = add i64 %indvars.iv187, 4, !dbg !3316
  %41 = or i32 %shl, 4, !dbg !3316
  %cmp = icmp slt i32 %9, %41, !dbg !3316
  br i1 %cmp, label %for.body, label %for.end76, !dbg !3316

for.end76:                                        ; preds = %for.inc74
  %rdopt = getelementptr inbounds %struct.InputParameters* %38, i64 0, i32 85, !dbg !3336
  %42 = load i32* %rdopt, align 4, !dbg !3336, !tbaa !1441
  %cmp77 = icmp eq i32 %42, 0, !dbg !3336
  br i1 %cmp77, label %land.lhs.true, label %cleanup, !dbg !3336

land.lhs.true:                                    ; preds = %for.end76
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters* %38, i64 0, i32 123, !dbg !3336
  %43 = load i32* %AllowTransform8x8, align 4, !dbg !3336, !tbaa !1441
  %tobool = icmp eq i32 %43, 0, !dbg !3336
  br i1 %tobool, label %cleanup, label %for.cond84.preheader, !dbg !3336

for.cond84.preheader:                             ; preds = %land.lhs.true, %for.cond84.preheader
  %indvar = phi i64 [ %indvar.next, %for.cond84.preheader ], [ 0, %land.lhs.true ]
  %44 = shl i64 %indvar, 3, !dbg !3337
  %scevgep = getelementptr [64 x i32]* %diff8x8, i64 0, i64 %44
  %scevgep166 = bitcast i32* %scevgep to i8*
  %scevgep167 = getelementptr [8 x [8 x i32]]* %curr_diff, i64 0, i64 %indvar, i64 0
  %scevgep167168 = bitcast i32* %scevgep167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %scevgep166, i8* %scevgep167168, i64 32, i32 16, i1 false), !dbg !3337
  %indvar.next = add i64 %indvar, 1, !dbg !3341
  %lftr.wideiv = trunc i64 %indvar.next to i32, !dbg !3341
  %exitcond = icmp eq i32 %lftr.wideiv, 8, !dbg !3341
  br i1 %exitcond, label %for.end100, label %for.cond84.preheader, !dbg !3341

for.end100:                                       ; preds = %for.cond84.preheader
  %arraydecay101 = getelementptr inbounds [64 x i32]* %diff8x8, i64 0, i64 0, !dbg !3342
  %call103 = call i32 @SATD8X8(i32* %arraydecay101, i32 %39) #9, !dbg !3342
  %45 = load i32* %cost8x8, align 4, !dbg !3342, !tbaa !1441
  %add104 = add nsw i32 %45, %call103, !dbg !3342
  store i32 %add104, i32* %cost8x8, align 4, !dbg !3342, !tbaa !1441
  br label %cleanup, !dbg !3343

cleanup:                                          ; preds = %for.end76, %for.end100, %land.lhs.true, %if.then
  %retval.0 = phi i32 [ 2147483647, %if.then ], [ %add70, %land.lhs.true ], [ %add70, %for.end100 ], [ %add70, %for.end76 ]
  call void @llvm.lifetime.end(i64 64, i8* %2) #4, !dbg !3344
  call void @llvm.lifetime.end(i64 256, i8* %1) #4, !dbg !3344
  call void @llvm.lifetime.end(i64 256, i8* %0) #4, !dbg !3344
  ret i32 %retval.0, !dbg !3344
}
