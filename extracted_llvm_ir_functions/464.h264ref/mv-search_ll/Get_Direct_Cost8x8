define i32 @Get_Direct_Cost8x8(i32 %block, i32* nocapture %cost8x8) #0 {
entry:
  %curr_diff = alloca [8 x [8 x i32]], align 16
  %diff8x8 = alloca [64 x i32], align 16
  %diff = alloca [16 x i32], align 16
  %0 = bitcast [8 x [8 x i32]]* %curr_diff to i8*
  call void @llvm.lifetime.start(i64 256, i8* %0) #3
  %1 = bitcast [64 x i32]* %diff8x8 to i8*
  call void @llvm.lifetime.start(i64 256, i8* %1) #3
  %2 = bitcast [16 x i32]* %diff to i8*
  call void @llvm.lifetime.start(i64 64, i8* %2) #3
  %div = sdiv i32 %block, 2
  %shl = shl i32 %div, 3
  %rem = srem i32 %block, 2
  %shl1 = shl i32 %rem, 3
  %arraydecay = getelementptr inbounds [16 x i32]* %diff, i64 0, i64 0
  %3 = shl i32 %rem, 3
  %4 = sext i32 %3 to i64
  %5 = shl i32 %div, 3
  %6 = sext i32 %5 to i64
  %.pre = load %struct.ImageParameters** @img, align 8, !tbaa !0
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc74
  %7 = phi %struct.ImageParameters* [ %.pre, %entry ], [ %26, %for.inc74 ]
  %indvars.iv187 = phi i64 [ %6, %entry ], [ %indvars.iv.next188, %for.inc74 ]
  %cost.0162 = phi i32 [ 0, %entry ], [ %add70, %for.inc74 ]
  %opix_y = getelementptr inbounds %struct.ImageParameters* %7, i64 0, i32 38
  %8 = load i32* %opix_y, align 4, !tbaa !3
  %9 = trunc i64 %indvars.iv187 to i32
  %add2 = add nsw i32 %8, %9
  %shr = ashr i32 %add2, 2
  %idxprom = sext i32 %shr to i64
  %sub59 = sub i32 %9, %shl
  %10 = sext i32 %add2 to i64
  %11 = sext i32 %sub59 to i64
  br label %for.body6

for.body6:                                        ; preds = %for.body, %for.end69
  %12 = phi %struct.ImageParameters* [ %7, %for.body ], [ %26, %for.end69 ]
  %indvars.iv185 = phi i64 [ %4, %for.body ], [ %indvars.iv.next186, %for.end69 ]
  %cost.1160 = phi i32 [ %cost.0162, %for.body ], [ %add70, %for.end69 ]
  %opix_x = getelementptr inbounds %struct.ImageParameters* %12, i64 0, i32 37
  %13 = load i32* %opix_x, align 4, !tbaa !3
  %14 = trunc i64 %indvars.iv185 to i32
  %add7 = add nsw i32 %13, %14
  %shr8 = ashr i32 %add7, 2
  %idxprom9 = sext i32 %shr8 to i64
  %15 = load i16*** @direct_pdir, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i16** %15, i64 %idxprom9
  %16 = load i16** %arrayidx, align 8, !tbaa !0
  %arrayidx10 = getelementptr inbounds i16* %16, i64 %idxprom
  %17 = load i16* %arrayidx10, align 2, !tbaa !4
  %cmp11 = icmp slt i16 %17, 0
  br i1 %cmp11, label %if.then, label %if.end

if.then:                                          ; preds = %for.body6
  store i32 2147483647, i32* %cost8x8, align 4, !tbaa !3
  br label %cleanup

if.end:                                           ; preds = %for.body6
  %conv = sext i16 %17 to i32
  %18 = load i16**** @direct_ref_idx, align 8, !tbaa !0
  %19 = load i16*** %18, align 8, !tbaa !0
  %arrayidx25 = getelementptr inbounds i16** %19, i64 %idxprom9
  %20 = load i16** %arrayidx25, align 8, !tbaa !0
  %arrayidx26 = getelementptr inbounds i16* %20, i64 %idxprom
  %21 = load i16* %arrayidx26, align 2, !tbaa !4
  %arrayidx31 = getelementptr inbounds i16*** %18, i64 1
  %22 = load i16*** %arrayidx31, align 8, !tbaa !0
  %arrayidx32 = getelementptr inbounds i16** %22, i64 %idxprom9
  %23 = load i16** %arrayidx32, align 8, !tbaa !0
  %arrayidx33 = getelementptr inbounds i16* %23, i64 %idxprom
  %24 = load i16* %arrayidx33, align 2, !tbaa !4
  call void @LumaPrediction4x4(i32 %14, i32 %9, i32 %conv, i32 0, i32 0, i16 signext %21, i16 signext %24) #7
  %25 = load i16*** @imgY_org, align 8, !tbaa !0
  %26 = load %struct.ImageParameters** @img, align 8, !tbaa !0
  %sub56 = sub i32 %14, %shl1
  %27 = sext i32 %add7 to i64
  %28 = sext i32 %sub56 to i64
  br label %for.cond38.preheader

for.cond38.preheader:                             ; preds = %for.inc67, %if.end
  %indvars.iv178 = phi i64 [ 0, %if.end ], [ %indvars.iv.next179, %for.inc67 ]
  %indvars.iv176 = phi i64 [ 0, %if.end ], [ %indvars.iv.next177, %for.inc67 ]
  %29 = add nsw i64 %indvars.iv178, %10
  %arrayidx46 = getelementptr inbounds i16** %25, i64 %29
  %30 = load i16** %arrayidx46, align 8, !tbaa !0
  %31 = add nsw i64 %indvars.iv178, %indvars.iv187
  %32 = add nsw i64 %11, %indvars.iv178
  br label %for.body41

for.body41:                                       ; preds = %for.body41, %for.cond38.preheader
  %indvars.iv169 = phi i64 [ 0, %for.cond38.preheader ], [ %indvars.iv.next170, %for.body41 ]
  %indvars.iv = phi i64 [ %indvars.iv176, %for.cond38.preheader ], [ %indvars.iv.next, %for.body41 ]
  %33 = add nsw i64 %indvars.iv169, %27
  %arrayidx47 = getelementptr inbounds i16* %30, i64 %33
  %34 = load i16* %arrayidx47, align 2, !tbaa !4
  %conv48 = zext i16 %34 to i32
  %35 = add nsw i64 %indvars.iv169, %indvars.iv185
  %arrayidx54 = getelementptr inbounds %struct.ImageParameters* %26, i64 0, i32 45, i64 %35, i64 %31
  %36 = load i16* %arrayidx54, align 2, !tbaa !4
  %conv55 = zext i16 %36 to i32
  %sub = sub nsw i32 %conv48, %conv55
  %37 = add nsw i64 %28, %indvars.iv169
  %arrayidx63 = getelementptr inbounds [8 x [8 x i32]]* %curr_diff, i64 0, i64 %32, i64 %37
  store i32 %sub, i32* %arrayidx63, align 4, !tbaa !3
  %arrayidx65 = getelementptr inbounds [16 x i32]* %diff, i64 0, i64 %indvars.iv
  store i32 %sub, i32* %arrayidx65, align 4, !tbaa !3
  %indvars.iv.next170 = add i64 %indvars.iv169, 1
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv174 = trunc i64 %indvars.iv.next170 to i32
  %exitcond175 = icmp eq i32 %lftr.wideiv174, 4
  br i1 %exitcond175, label %for.inc67, label %for.body41

for.inc67:                                        ; preds = %for.body41
  %indvars.iv.next177 = add i64 %indvars.iv176, 4
  %indvars.iv.next179 = add i64 %indvars.iv178, 1
  %lftr.wideiv183 = trunc i64 %indvars.iv.next179 to i32
  %exitcond184 = icmp eq i32 %lftr.wideiv183, 4
  br i1 %exitcond184, label %for.end69, label %for.cond38.preheader

for.end69:                                        ; preds = %for.inc67
  %38 = load %struct.InputParameters** @input, align 8, !tbaa !0
  %hadamard = getelementptr inbounds %struct.InputParameters* %38, i64 0, i32 6
  %39 = load i32* %hadamard, align 4, !tbaa !3
  %call = call i32 @SATD(i32* %arraydecay, i32 %39) #8
  %add70 = add nsw i32 %call, %cost.1160
  %indvars.iv.next186 = add i64 %indvars.iv185, 4
  %40 = or i32 %shl1, 4
  %cmp5 = icmp slt i32 %14, %40
  br i1 %cmp5, label %for.body6, label %for.inc74

for.inc74:                                        ; preds = %for.end69
  %indvars.iv.next188 = add i64 %indvars.iv187, 4
  %41 = or i32 %shl, 4
  %cmp = icmp slt i32 %9, %41
  br i1 %cmp, label %for.body, label %for.end76

for.end76:                                        ; preds = %for.inc74
  %rdopt = getelementptr inbounds %struct.InputParameters* %38, i64 0, i32 85
  %42 = load i32* %rdopt, align 4, !tbaa !3
  %cmp77 = icmp eq i32 %42, 0
  br i1 %cmp77, label %land.lhs.true, label %cleanup

land.lhs.true:                                    ; preds = %for.end76
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters* %38, i64 0, i32 123
  %43 = load i32* %AllowTransform8x8, align 4, !tbaa !3
  %tobool = icmp eq i32 %43, 0
  br i1 %tobool, label %cleanup, label %for.cond84.preheader

for.cond84.preheader:                             ; preds = %land.lhs.true, %for.cond84.preheader
  %indvar = phi i64 [ %indvar.next, %for.cond84.preheader ], [ 0, %land.lhs.true ]
  %44 = shl i64 %indvar, 3
  %scevgep = getelementptr [64 x i32]* %diff8x8, i64 0, i64 %44
  %scevgep166 = bitcast i32* %scevgep to i8*
  %scevgep167 = getelementptr [8 x [8 x i32]]* %curr_diff, i64 0, i64 %indvar, i64 0
  %scevgep167168 = bitcast i32* %scevgep167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %scevgep166, i8* %scevgep167168, i64 32, i32 16, i1 false)
  %indvar.next = add i64 %indvar, 1
  %lftr.wideiv = trunc i64 %indvar.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 8
  br i1 %exitcond, label %for.end100, label %for.cond84.preheader

for.end100:                                       ; preds = %for.cond84.preheader
  %arraydecay101 = getelementptr inbounds [64 x i32]* %diff8x8, i64 0, i64 0
  %call103 = call i32 @SATD8X8(i32* %arraydecay101, i32 %39) #8
  %45 = load i32* %cost8x8, align 4, !tbaa !3
  %add104 = add nsw i32 %45, %call103
  store i32 %add104, i32* %cost8x8, align 4, !tbaa !3
  br label %cleanup

cleanup:                                          ; preds = %for.end76, %for.end100, %land.lhs.true, %if.then
  %retval.0 = phi i32 [ 2147483647, %if.then ], [ %add70, %land.lhs.true ], [ %add70, %for.end100 ], [ %add70, %for.end76 ]
  call void @llvm.lifetime.end(i64 64, i8* %2) #3
  call void @llvm.lifetime.end(i64 256, i8* %1) #3
  call void @llvm.lifetime.end(i64 256, i8* %0) #3
  ret i32 %retval.0
}
