define double @QP2Qstep(i32 %QP) #6 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %QP}, i64 0, metadata !147), !dbg !1688
  %rem = srem i32 %QP, 6, !dbg !1689
  %idxprom = sext i32 %rem to i64, !dbg !1689
  %arrayidx = getelementptr inbounds [6 x double]* @QP2Qstep.QP2QSTEP, i64 0, i64 %idxprom, !dbg !1689
  %0 = load double* %arrayidx, align 8, !dbg !1689, !tbaa !862
  tail call void @llvm.dbg.value(metadata !{double %0}, i64 0, metadata !149), !dbg !1689
  tail call void @llvm.dbg.value(metadata !21, i64 0, metadata !148), !dbg !1690
  %div = sdiv i32 %QP, 6, !dbg !1690
  %cmp3 = icmp sgt i32 %QP, 5, !dbg !1690
  br i1 %cmp3, label %for.body, label %for.end, !dbg !1690

for.body:                                         ; preds = %entry, %for.body
  %Qstep.05 = phi double [ %mul, %for.body ], [ %0, %entry ]
  %i.04 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %mul = fmul double %Qstep.05, 2.000000e+00, !dbg !1691
  tail call void @llvm.dbg.value(metadata !{double %mul}, i64 0, metadata !149), !dbg !1691
  %inc = add nsw i32 %i.04, 1, !dbg !1690
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !148), !dbg !1690
  %cmp = icmp slt i32 %inc, %div, !dbg !1690
  br i1 %cmp, label %for.body, label %for.end, !dbg !1690

for.end:                                          ; preds = %for.body, %entry
  %Qstep.0.lcssa = phi double [ %0, %entry ], [ %mul, %for.body ]
  ret double %Qstep.0.lcssa, !dbg !1692
}
