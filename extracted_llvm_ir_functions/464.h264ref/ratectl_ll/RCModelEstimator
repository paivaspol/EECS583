define void @RCModelEstimator(i32 %n_windowSize) #0 {
  tail call void @llvm.dbg.value(metadata i32 %n_windowSize, i64 0, metadata !109, metadata !1021), !dbg !3064
  tail call void @llvm.dbg.value(metadata i32 %n_windowSize, i64 0, metadata !110, metadata !1021), !dbg !3065
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !113, metadata !1021), !dbg !3066
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !114, metadata !1021), !dbg !3067
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !115, metadata !1021), !dbg !3068
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !116, metadata !1021), !dbg !3069
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !117, metadata !1021), !dbg !3070
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !118, metadata !1021), !dbg !3071
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !120, metadata !1021), !dbg !3072
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !111, metadata !1021), !dbg !3073
  %1 = icmp sgt i32 %n_windowSize, 0, !dbg !3074
  br i1 %1, label %.lr.ph28, label %._crit_edge29.thread, !dbg !3077

._crit_edge29.thread:                             ; preds = %0
  store double 0.000000e+00, double* @m_X2, align 8, !dbg !3078, !tbaa !952
  store double 0.000000e+00, double* @m_X1, align 8, !dbg !3079, !tbaa !952
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !111, metadata !1021), !dbg !3073
  br label %._crit_edge18.thread, !dbg !3080

.lr.ph28:                                         ; preds = %0
  %2 = add i32 %n_windowSize, -1, !dbg !3077
  br label %3, !dbg !3077

; <label>:3                                       ; preds = %3, %.lr.ph28
  %indvars.iv39 = phi i64 [ 0, %.lr.ph28 ], [ %indvars.iv.next40, %3 ]
  %n_realSize.026 = phi i32 [ %n_windowSize, %.lr.ph28 ], [ %n_realSize.0., %3 ]
  %4 = getelementptr inbounds [21 x i32]* @m_rgRejected, i64 0, i64 %indvars.iv39, !dbg !3082
  %5 = load i32* %4, align 4, !dbg !3082, !tbaa !1109
  %not. = icmp ne i32 %5, 0, !dbg !3085
  %6 = sext i1 %not. to i32, !dbg !3085
  %n_realSize.0. = add nsw i32 %6, %n_realSize.026, !dbg !3085
  %indvars.iv.next40 = add nuw nsw i64 %indvars.iv39, 1, !dbg !3077
  %lftr.wideiv41 = trunc i64 %indvars.iv39 to i32, !dbg !3077
  %exitcond42 = icmp eq i32 %lftr.wideiv41, %2, !dbg !3077
  br i1 %exitcond42, label %._crit_edge29, label %3, !dbg !3077

._crit_edge29:                                    ; preds = %3
  store double 0.000000e+00, double* @m_X2, align 8, !dbg !3078, !tbaa !952
  store double 0.000000e+00, double* @m_X1, align 8, !dbg !3079, !tbaa !952
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !111, metadata !1021), !dbg !3073
  br i1 %1, label %.lr.ph23, label %._crit_edge18.thread, !dbg !3080

.lr.ph23:                                         ; preds = %._crit_edge29
  %7 = add i32 %n_windowSize, -1, !dbg !3080
  br label %10, !dbg !3080

.preheader2:                                      ; preds = %17
  br i1 %1, label %.lr.ph17, label %._crit_edge18.thread, !dbg !3086

.lr.ph17:                                         ; preds = %.preheader2
  %8 = sitofp i32 %n_realSize.0. to double, !dbg !3088
  %9 = add i32 %n_windowSize, -1, !dbg !3086
  br label %18, !dbg !3086

; <label>:10                                      ; preds = %17, %.lr.ph23
  %indvars.iv35 = phi i64 [ 0, %.lr.ph23 ], [ %indvars.iv.next36, %17 ]
  %oneSampleQ.021 = phi double [ undef, %.lr.ph23 ], [ %oneSampleQ.1, %17 ]
  %11 = getelementptr inbounds [21 x i32]* @m_rgRejected, i64 0, i64 %indvars.iv35, !dbg !3092
  %12 = load i32* %11, align 4, !dbg !3092, !tbaa !1109
  %13 = icmp eq i32 %12, 0, !dbg !3092
  br i1 %13, label %14, label %17, !dbg !3096

; <label>:14                                      ; preds = %10
  %15 = getelementptr inbounds [21 x double]* @m_rgQp, i64 0, i64 %indvars.iv35, !dbg !3097
  %16 = load double* %15, align 8, !dbg !3097, !tbaa !952
  tail call void @llvm.dbg.value(metadata double %16, i64 0, metadata !112, metadata !1021), !dbg !3098
  br label %17, !dbg !3099

; <label>:17                                      ; preds = %10, %14
  %oneSampleQ.1 = phi double [ %oneSampleQ.021, %10 ], [ %16, %14 ]
  %indvars.iv.next36 = add nuw nsw i64 %indvars.iv35, 1, !dbg !3080
  %lftr.wideiv37 = trunc i64 %indvars.iv35 to i32, !dbg !3080
  %exitcond38 = icmp eq i32 %lftr.wideiv37, %7, !dbg !3080
  br i1 %exitcond38, label %.preheader2, label %10, !dbg !3080

; <label>:18                                      ; preds = %36, %.lr.ph17
  %19 = phi i64 [ 0, %.lr.ph17 ], [ %37, %36 ]
  %20 = phi double [ 0.000000e+00, %.lr.ph17 ], [ %38, %36 ]
  %indvars.iv31 = phi i64 [ 0, %.lr.ph17 ], [ %indvars.iv.next32, %36 ]
  %estimateX2.016 = phi i32 [ 0, %.lr.ph17 ], [ %estimateX2.1, %36 ]
  %21 = getelementptr inbounds [21 x double]* @m_rgQp, i64 0, i64 %indvars.iv31, !dbg !3100
  %22 = load double* %21, align 8, !dbg !3100, !tbaa !952
  %23 = fcmp une double %22, %oneSampleQ.1, !dbg !3102
  %24 = getelementptr inbounds [21 x i32]* @m_rgRejected, i64 0, i64 %indvars.iv31, !dbg !3103
  %25 = load i32* %24, align 4, !dbg !3103, !tbaa !1109
  br i1 %23, label %26, label %._crit_edge43, !dbg !3104

; <label>:26                                      ; preds = %18
  %27 = icmp eq i32 %25, 0, !dbg !3103
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !120, metadata !1021), !dbg !3072
  %.estimateX2.0 = select i1 %27, i32 1, i32 %estimateX2.016, !dbg !3105
  br label %._crit_edge43, !dbg !3105

._crit_edge43:                                    ; preds = %18, %26
  %estimateX2.1 = phi i32 [ %.estimateX2.0, %26 ], [ %estimateX2.016, %18 ]
  %28 = icmp eq i32 %25, 0, !dbg !3106
  br i1 %28, label %29, label %36, !dbg !3107

; <label>:29                                      ; preds = %._crit_edge43
  %30 = getelementptr inbounds [21 x double]* @m_rgRp, i64 0, i64 %indvars.iv31, !dbg !3108
  %31 = load double* %30, align 8, !dbg !3108, !tbaa !952
  %32 = fmul double %22, %31, !dbg !3109
  %33 = fdiv double %32, %8, !dbg !3110
  %34 = fadd double %33, %20, !dbg !3111
  store double %34, double* @m_X1, align 8, !dbg !3111, !tbaa !952
  %35 = bitcast double %34 to i64
  br label %36, !dbg !3112

; <label>:36                                      ; preds = %._crit_edge43, %29
  %37 = phi i64 [ %19, %._crit_edge43 ], [ %35, %29 ]
  %38 = phi double [ %20, %._crit_edge43 ], [ %34, %29 ]
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1, !dbg !3086
  %lftr.wideiv33 = trunc i64 %indvars.iv31 to i32, !dbg !3086
  %exitcond34 = icmp eq i32 %lftr.wideiv33, %9, !dbg !3086
  br i1 %exitcond34, label %._crit_edge18, label %18, !dbg !3086

._crit_edge18:                                    ; preds = %36
  %39 = icmp sgt i32 %n_realSize.0., 0, !dbg !3113
  %40 = icmp ne i32 %estimateX2.1, 0, !dbg !3115
  %or.cond = and i1 %39, %40, !dbg !3116
  br i1 %or.cond, label %.preheader, label %._crit_edge18.thread, !dbg !3116

.preheader:                                       ; preds = %._crit_edge18
  br i1 %1, label %.lr.ph, label %._crit_edge, !dbg !3117

.lr.ph:                                           ; preds = %.preheader
  %41 = add i32 %n_windowSize, -1, !dbg !3117
  br label %42, !dbg !3117

; <label>:42                                      ; preds = %64, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %64 ]
  %b1.09 = phi double [ 0.000000e+00, %.lr.ph ], [ %b1.1, %64 ]
  %b0.08 = phi double [ 0.000000e+00, %.lr.ph ], [ %b0.1, %64 ]
  %a01.05 = phi double [ 0.000000e+00, %.lr.ph ], [ %a01.1, %64 ]
  %a00.04 = phi double [ 0.000000e+00, %.lr.ph ], [ %a00.1, %64 ]
  %43 = phi <2 x double> [ zeroinitializer, %.lr.ph ], [ %65, %64 ]
  %44 = getelementptr inbounds [21 x i32]* @m_rgRejected, i64 0, i64 %indvars.iv, !dbg !3120
  %45 = load i32* %44, align 4, !dbg !3120, !tbaa !1109
  %46 = icmp eq i32 %45, 0, !dbg !3120
  br i1 %46, label %47, label %64, !dbg !3124

; <label>:47                                      ; preds = %42
  %48 = fadd double %a00.04, 1.000000e+00, !dbg !3125
  tail call void @llvm.dbg.value(metadata double %48, i64 0, metadata !113, metadata !1021), !dbg !3066
  %49 = getelementptr inbounds [21 x double]* @m_rgQp, i64 0, i64 %indvars.iv, !dbg !3127
  %50 = load double* %49, align 8, !dbg !3127, !tbaa !952
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !114, metadata !1021), !dbg !3067
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !115, metadata !1021), !dbg !3068
  %51 = fmul double %50, %50, !dbg !3128
  %52 = insertelement <2 x double> undef, double %50, i32 0, !dbg !3129
  %53 = insertelement <2 x double> %52, double %51, i32 1, !dbg !3129
  %54 = fdiv <2 x double> <double 1.000000e+00, double 1.000000e+00>, %53, !dbg !3129
  %55 = insertelement <2 x double> undef, double %a01.05, i32 0, !dbg !3130
  %56 = shufflevector <2 x double> %55, <2 x double> %43, <2 x i32> <i32 0, i32 3>, !dbg !3130
  %57 = fadd <2 x double> %56, %54, !dbg !3130
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !116, metadata !1021), !dbg !3069
  %58 = getelementptr inbounds [21 x double]* @m_rgRp, i64 0, i64 %indvars.iv, !dbg !3131
  %59 = load double* %58, align 8, !dbg !3131, !tbaa !952
  %60 = fmul double %50, %59, !dbg !3132
  %61 = fadd double %b0.08, %60, !dbg !3133
  tail call void @llvm.dbg.value(metadata double %61, i64 0, metadata !117, metadata !1021), !dbg !3070
  %62 = fadd double %b1.09, %59, !dbg !3134
  tail call void @llvm.dbg.value(metadata double %62, i64 0, metadata !118, metadata !1021), !dbg !3071
  %63 = extractelement <2 x double> %57, i32 0, !dbg !3135
  br label %64, !dbg !3135

; <label>:64                                      ; preds = %42, %47
  %a00.1 = phi double [ %a00.04, %42 ], [ %48, %47 ]
  %a01.1 = phi double [ %a01.05, %42 ], [ %63, %47 ]
  %b0.1 = phi double [ %b0.08, %42 ], [ %61, %47 ]
  %b1.1 = phi double [ %b1.09, %42 ], [ %62, %47 ]
  %65 = phi <2 x double> [ %43, %42 ], [ %57, %47 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3117
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !3117
  %exitcond = icmp eq i32 %lftr.wideiv, %41, !dbg !3117
  br i1 %exitcond, label %._crit_edge.loopexit, label %42, !dbg !3117

._crit_edge.loopexit:                             ; preds = %64
  %66 = extractelement <2 x double> %65, i32 0
  %67 = extractelement <2 x double> %65, i32 1
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.preheader
  %b1.0.lcssa = phi double [ 0.000000e+00, %.preheader ], [ %b1.1, %._crit_edge.loopexit ]
  %b0.0.lcssa = phi double [ 0.000000e+00, %.preheader ], [ %b0.1, %._crit_edge.loopexit ]
  %a11.0.lcssa = phi double [ 0.000000e+00, %.preheader ], [ %67, %._crit_edge.loopexit ]
  %a10.0.lcssa = phi double [ 0.000000e+00, %.preheader ], [ %66, %._crit_edge.loopexit ]
  %a01.0.lcssa = phi double [ 0.000000e+00, %.preheader ], [ %a01.1, %._crit_edge.loopexit ]
  %a00.0.lcssa = phi double [ 0.000000e+00, %.preheader ], [ %a00.1, %._crit_edge.loopexit ]
  %68 = fmul double %a00.0.lcssa, %a11.0.lcssa, !dbg !3136
  %69 = fmul double %a01.0.lcssa, %a10.0.lcssa, !dbg !3137
  %70 = fsub double %68, %69, !dbg !3138
  tail call void @llvm.dbg.value(metadata double %70, i64 0, metadata !119, metadata !1021), !dbg !3139
  %71 = tail call double @fabs(double %70) #10, !dbg !3140
  %72 = fcmp ogt double %71, 1.000000e-06, !dbg !3142
  br i1 %72, label %73, label %84, !dbg !3143

; <label>:73                                      ; preds = %._crit_edge
  %74 = fmul double %a11.0.lcssa, %b0.0.lcssa, !dbg !3144
  %75 = fmul double %a01.0.lcssa, %b1.0.lcssa, !dbg !3146
  %76 = fsub double %74, %75, !dbg !3147
  %77 = fdiv double %76, %70, !dbg !3148
  store double %77, double* @m_X1, align 8, !dbg !3149, !tbaa !952
  %78 = fmul double %a00.0.lcssa, %b1.0.lcssa, !dbg !3150
  %79 = fmul double %a10.0.lcssa, %b0.0.lcssa, !dbg !3151
  %80 = fsub double %78, %79, !dbg !3152
  %81 = fdiv double %80, %70, !dbg !3153
  store double %81, double* @m_X2, align 8, !dbg !3154, !tbaa !952
  %82 = bitcast double %77 to i64
  %83 = bitcast double %81 to i64
  br label %._crit_edge18.thread, !dbg !3155

; <label>:84                                      ; preds = %._crit_edge
  %85 = fdiv double %b0.0.lcssa, %a00.0.lcssa, !dbg !3156
  store double %85, double* @m_X1, align 8, !dbg !3158, !tbaa !952
  store double 0.000000e+00, double* @m_X2, align 8, !dbg !3159, !tbaa !952
  %86 = bitcast double %85 to i64
  br label %._crit_edge18.thread

._crit_edge18.thread:                             ; preds = %._crit_edge29, %._crit_edge29.thread, %.preheader2, %73, %84, %._crit_edge18
  %87 = phi i64 [ %83, %73 ], [ 0, %84 ], [ 0, %._crit_edge18 ], [ 0, %.preheader2 ], [ 0, %._crit_edge29.thread ], [ 0, %._crit_edge29 ]
  %88 = phi i64 [ %82, %73 ], [ %86, %84 ], [ %37, %._crit_edge18 ], [ 0, %.preheader2 ], [ 0, %._crit_edge29.thread ], [ 0, %._crit_edge29 ]
  %89 = load %struct.ImageParameters** @img, align 8, !dbg !3160, !tbaa !815
  %90 = getelementptr inbounds %struct.ImageParameters* %89, i64 0, i32 6, !dbg !3162
  %91 = load i32* %90, align 4, !dbg !3162, !tbaa !1237
  %92 = icmp eq i32 %91, 0, !dbg !3163
  br i1 %92, label %93, label %94, !dbg !3164

; <label>:93                                      ; preds = %._crit_edge18.thread
  store i64 %88, i64* bitcast (double* @Pm_X1 to i64*), align 8, !dbg !3165, !tbaa !952
  store i64 %87, i64* bitcast (double* @Pm_X2 to i64*), align 8, !dbg !3167, !tbaa !952
  br label %94, !dbg !3168

; <label>:94                                      ; preds = %93, %._crit_edge18.thread
  ret void, !dbg !3169
}
