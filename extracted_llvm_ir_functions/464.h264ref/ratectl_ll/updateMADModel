define void @updateMADModel() #0 {
  %error = alloca [20 x double], align 16
  %1 = bitcast [20 x double]* %error to i8*, !dbg !3182
  call void @llvm.lifetime.start(i64 160, i8* %1) #7, !dbg !3182
  tail call void @llvm.dbg.declare(metadata [20 x double]* %error, metadata !129, metadata !1021), !dbg !3183
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !130, metadata !1021), !dbg !3184
  %2 = load %struct.ImageParameters** @img, align 8, !dbg !3185, !tbaa !815
  %3 = getelementptr inbounds %struct.ImageParameters* %2, i64 0, i32 127, !dbg !3187
  %4 = load i32* %3, align 4, !dbg !3187, !tbaa !1003
  %5 = icmp sgt i32 %4, 0, !dbg !3188
  br i1 %5, label %6, label %143, !dbg !3189

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct.ImageParameters* %2, i64 0, i32 139, !dbg !3190
  %8 = load i32* %7, align 4, !dbg !3190, !tbaa !1208
  %9 = getelementptr inbounds %struct.ImageParameters* %2, i64 0, i32 136, !dbg !3193
  %10 = load i32* %9, align 4, !dbg !3193, !tbaa !977
  %11 = icmp eq i32 %8, %10, !dbg !3194
  br i1 %11, label %17, label %12, !dbg !3195

; <label>:12                                      ; preds = %6
  %13 = load i32* @TotalNumberofBasicUnit, align 4, !dbg !3196, !tbaa !946
  %14 = mul nsw i32 %13, %4, !dbg !3197
  %15 = load i32* @CodedBasicUnit, align 4, !dbg !3198, !tbaa !946
  %16 = add nsw i32 %14, %15, !dbg !3199
  tail call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !132, metadata !1021), !dbg !3200
  br label %17

; <label>:17                                      ; preds = %6, %12
  %m_Nc.0 = phi i32 [ %16, %12 ], [ %4, %6 ]
  tail call void @llvm.dbg.value(metadata i32 19, i64 0, metadata !128, metadata !1021), !dbg !3201
  br label %18, !dbg !3202

; <label>:18                                      ; preds = %17, %18
  %indvars.iv25 = phi i64 [ 19, %17 ], [ %indvars.iv.next26, %18 ]
  %indvars.iv.next26 = add nsw i64 %indvars.iv25, -1, !dbg !3202
  %19 = getelementptr inbounds [21 x double]* @PPictureMAD, i64 0, i64 %indvars.iv.next26, !dbg !3204
  %20 = bitcast double* %19 to i64*, !dbg !3204
  %21 = load i64* %20, align 8, !dbg !3204, !tbaa !952
  %22 = getelementptr inbounds [21 x double]* @PPictureMAD, i64 0, i64 %indvars.iv25, !dbg !3207
  %23 = bitcast double* %22 to i64*, !dbg !3208
  store i64 %21, i64* %23, align 8, !dbg !3208, !tbaa !952
  %24 = getelementptr inbounds [21 x double]* @PictureMAD, i64 0, i64 %indvars.iv25, !dbg !3209
  %25 = bitcast double* %24 to i64*, !dbg !3210
  store i64 %21, i64* %25, align 8, !dbg !3210, !tbaa !952
  %26 = getelementptr inbounds [21 x double]* @ReferenceMAD, i64 0, i64 %indvars.iv.next26, !dbg !3211
  %27 = bitcast double* %26 to i64*, !dbg !3211
  %28 = load i64* %27, align 8, !dbg !3211, !tbaa !952
  %29 = getelementptr inbounds [21 x double]* @ReferenceMAD, i64 0, i64 %indvars.iv25, !dbg !3212
  %30 = bitcast double* %29 to i64*, !dbg !3213
  store i64 %28, i64* %30, align 8, !dbg !3213, !tbaa !952
  %31 = icmp sgt i64 %indvars.iv25, 1, !dbg !3214
  br i1 %31, label %18, label %32, !dbg !3202

; <label>:32                                      ; preds = %18
  %33 = load i64* bitcast (double* @CurrentFrameMAD to i64*), align 8, !dbg !3215, !tbaa !952
  store i64 %33, i64* bitcast ([21 x double]* @PPictureMAD to i64*), align 16, !dbg !3216, !tbaa !952
  store i64 %33, i64* bitcast ([21 x double]* @PictureMAD to i64*), align 16, !dbg !3217, !tbaa !952
  %34 = bitcast i64 %33 to double
  br i1 %11, label %35, label %37, !dbg !3218

; <label>:35                                      ; preds = %32
  %36 = load i64* bitcast (double* getelementptr inbounds ([21 x double]* @PictureMAD, i64 0, i64 1) to i64*), align 8, !dbg !3219, !tbaa !952
  store i64 %36, i64* bitcast ([21 x double]* @ReferenceMAD to i64*), align 16, !dbg !3221, !tbaa !952
  br label %70, !dbg !3222

; <label>:37                                      ; preds = %32
  %38 = load %struct.InputParameters** @input, align 8, !dbg !3223, !tbaa !815
  %39 = getelementptr inbounds %struct.InputParameters* %38, i64 0, i32 91, !dbg !3226
  %40 = load i32* %39, align 4, !dbg !3226, !tbaa !1133
  %41 = icmp eq i32 %40, 2, !dbg !3227
  br i1 %41, label %46, label %42, !dbg !3228

; <label>:42                                      ; preds = %37
  %43 = getelementptr inbounds %struct.InputParameters* %38, i64 0, i32 92, !dbg !3229
  %44 = load i32* %43, align 4, !dbg !3229, !tbaa !1137
  %45 = icmp eq i32 %44, 0, !dbg !3230
  br i1 %45, label %60, label %46, !dbg !3231

; <label>:46                                      ; preds = %42, %37
  %47 = getelementptr inbounds %struct.ImageParameters* %2, i64 0, i32 134, !dbg !3232
  %48 = load i32* %47, align 4, !dbg !3232, !tbaa !1042
  %49 = icmp eq i32 %48, 1, !dbg !3233
  br i1 %49, label %50, label %60, !dbg !3234

; <label>:50                                      ; preds = %46
  %51 = load i32* @TotalNumberofBasicUnit, align 4, !dbg !3235, !tbaa !946
  %52 = add nsw i32 %51, -1, !dbg !3236
  %53 = load i32* @NumberofBasicUnit, align 4, !dbg !3237, !tbaa !946
  %54 = sub i32 %52, %53, !dbg !3238
  %55 = sext i32 %54 to i64, !dbg !3239
  %56 = load double** @FCBUPFMAD, align 8, !dbg !3239, !tbaa !815
  %57 = getelementptr inbounds double* %56, i64 %55, !dbg !3239
  %58 = bitcast double* %57 to i64*, !dbg !3239
  %59 = load i64* %58, align 8, !dbg !3239, !tbaa !952
  store i64 %59, i64* bitcast ([21 x double]* @ReferenceMAD to i64*), align 16, !dbg !3240, !tbaa !952
  br label %70, !dbg !3241

; <label>:60                                      ; preds = %42, %46
  %61 = load i32* @TotalNumberofBasicUnit, align 4, !dbg !3242, !tbaa !946
  %62 = add nsw i32 %61, -1, !dbg !3243
  %63 = load i32* @NumberofBasicUnit, align 4, !dbg !3244, !tbaa !946
  %64 = sub i32 %62, %63, !dbg !3245
  %65 = sext i32 %64 to i64, !dbg !3246
  %66 = load double** @BUPFMAD, align 8, !dbg !3246, !tbaa !815
  %67 = getelementptr inbounds double* %66, i64 %65, !dbg !3246
  %68 = bitcast double* %67 to i64*, !dbg !3246
  %69 = load i64* %68, align 8, !dbg !3246, !tbaa !952
  store i64 %69, i64* bitcast ([21 x double]* @ReferenceMAD to i64*), align 16, !dbg !3247, !tbaa !952
  br label %70

; <label>:70                                      ; preds = %50, %60, %35
  %71 = load i64* bitcast (double* @PMADPictureC1 to i64*), align 8, !dbg !3248, !tbaa !952
  store i64 %71, i64* bitcast (double* @MADPictureC1 to i64*), align 8, !dbg !3249, !tbaa !952
  %72 = load i64* bitcast (double* @PMADPictureC2 to i64*), align 8, !dbg !3250, !tbaa !952
  store i64 %72, i64* bitcast (double* @MADPictureC2 to i64*), align 8, !dbg !3251, !tbaa !952
  %73 = load double* @PreviousFrameMAD, align 8, !dbg !3252, !tbaa !952
  %74 = fcmp ogt double %34, %73, !dbg !3253
  br i1 %74, label %75, label %77, !dbg !3254

; <label>:75                                      ; preds = %70
  %76 = fdiv double %73, %34, !dbg !3255
  br label %79, !dbg !3254

; <label>:77                                      ; preds = %70
  %78 = fdiv double %34, %73, !dbg !3256
  br label %79, !dbg !3254

; <label>:79                                      ; preds = %77, %75
  %.sink1 = phi double [ %76, %75 ], [ %78, %77 ]
  %80 = fmul double %.sink1, 2.000000e+01, !dbg !3257
  %81 = fptosi double %80 to i32, !dbg !3258
  tail call void @llvm.dbg.value(metadata i32 %81, i64 0, metadata !127, metadata !1021), !dbg !3259
  %82 = add nsw i32 %m_Nc.0, -1, !dbg !3260
  %83 = icmp slt i32 %81, %82, !dbg !3260
  %. = select i1 %83, i32 %81, i32 %82, !dbg !3260
  tail call void @llvm.dbg.value(metadata i32 %., i64 0, metadata !127, metadata !1021), !dbg !3259
  %84 = icmp slt i32 %., 1, !dbg !3261
  %85 = select i1 %84, i32 1, i32 %., !dbg !3261
  tail call void @llvm.dbg.value(metadata i32 %85, i64 0, metadata !127, metadata !1021), !dbg !3259
  %86 = load i32* @MADm_windowSize, align 4, !dbg !3262, !tbaa !946
  %87 = add nsw i32 %86, 1, !dbg !3262
  %88 = icmp slt i32 %85, %87, !dbg !3262
  %89 = select i1 %88, i32 %85, i32 %87, !dbg !3262
  tail call void @llvm.dbg.value(metadata i32 %89, i64 0, metadata !127, metadata !1021), !dbg !3259
  %90 = icmp sgt i32 %89, 20, !dbg !3263
  %91 = select i1 %90, i32 20, i32 %89, !dbg !3263
  tail call void @llvm.dbg.value(metadata i32 %91, i64 0, metadata !127, metadata !1021), !dbg !3259
  store i32 %91, i32* @MADm_windowSize, align 4, !dbg !3264, !tbaa !946
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !128, metadata !1021), !dbg !3201
  call void @llvm.memset.p0i8.i64(i8* bitcast ([21 x i32]* @PictureRejected to i8*), i8 0, i64 80, i32 16, i1 false), !dbg !3265
  %92 = getelementptr inbounds %struct.ImageParameters* %2, i64 0, i32 6, !dbg !3269
  %93 = load i32* %92, align 4, !dbg !3269, !tbaa !1237
  %94 = icmp eq i32 %93, 0, !dbg !3271
  br i1 %94, label %95, label %96, !dbg !3272

; <label>:95                                      ; preds = %79
  store i64 %33, i64* bitcast (double* @PreviousFrameMAD to i64*), align 8, !dbg !3273, !tbaa !952
  br label %96, !dbg !3274

; <label>:96                                      ; preds = %95, %79
  tail call void @MADModelEstimator(i32 %91) #9, !dbg !3275
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !128, metadata !1021), !dbg !3201
  %97 = icmp sgt i32 %91, 0, !dbg !3276
  br i1 %97, label %.lr.ph7, label %._crit_edge8.thread, !dbg !3279

.lr.ph7:                                          ; preds = %96
  %98 = load double* @MADPictureC1, align 8, !dbg !3280, !tbaa !952
  %99 = load double* @MADPictureC2, align 8, !dbg !3282, !tbaa !952
  %100 = sub i32 0, %m_Nc.0, !dbg !3279
  %101 = xor i32 %81, -1, !dbg !3279
  %102 = icmp sgt i32 %100, %101
  %smax16 = select i1 %102, i32 %100, i32 %101
  %103 = icmp slt i32 %smax16, -2
  %104 = select i1 %103, i32 %smax16, i32 -2, !dbg !3279
  %105 = sub i32 -2, %86, !dbg !3279
  %106 = icmp sgt i32 %104, %105
  %smax18 = select i1 %106, i32 %104, i32 %105
  %107 = icmp sgt i32 %smax18, -21
  %smax18.op = sub i32 -2, %smax18, !dbg !3279
  %108 = select i1 %107, i32 %smax18.op, i32 19, !dbg !3279
  br label %109, !dbg !3279

; <label>:109                                     ; preds = %109, %.lr.ph7
  %indvars.iv14 = phi i64 [ 0, %.lr.ph7 ], [ %indvars.iv.next15, %109 ]
  %std.05 = phi double [ 0.000000e+00, %.lr.ph7 ], [ %119, %109 ]
  %110 = getelementptr inbounds [21 x double]* @ReferenceMAD, i64 0, i64 %indvars.iv14, !dbg !3283
  %111 = load double* %110, align 8, !dbg !3283, !tbaa !952
  %112 = fmul double %98, %111, !dbg !3284
  %113 = fadd double %112, %99, !dbg !3285
  %114 = getelementptr inbounds [21 x double]* @PictureMAD, i64 0, i64 %indvars.iv14, !dbg !3286
  %115 = load double* %114, align 8, !dbg !3286, !tbaa !952
  %116 = fsub double %113, %115, !dbg !3287
  %117 = getelementptr inbounds [20 x double]* %error, i64 0, i64 %indvars.iv14, !dbg !3288
  store double %116, double* %117, align 8, !dbg !3289, !tbaa !952
  %118 = fmul double %116, %116, !dbg !3290
  %119 = fadd double %std.05, %118, !dbg !3291
  tail call void @llvm.dbg.value(metadata double %119, i64 0, metadata !130, metadata !1021), !dbg !3184
  %indvars.iv.next15 = add nuw nsw i64 %indvars.iv14, 1, !dbg !3279
  %lftr.wideiv20 = trunc i64 %indvars.iv14 to i32, !dbg !3279
  %exitcond21 = icmp eq i32 %lftr.wideiv20, %108, !dbg !3279
  br i1 %exitcond21, label %._crit_edge8, label %109, !dbg !3279

._crit_edge8:                                     ; preds = %109
  %120 = icmp eq i32 %91, 2, !dbg !3292
  br i1 %120, label %124, label %._crit_edge8.thread, !dbg !3293

._crit_edge8.thread:                              ; preds = %96, %._crit_edge8
  %std.0.lcssa27 = phi double [ %119, %._crit_edge8 ], [ 0.000000e+00, %96 ]
  %121 = sitofp i32 %91 to double, !dbg !3294
  %122 = fdiv double %std.0.lcssa27, %121, !dbg !3295
  %123 = tail call double @sqrt(double %122) #10, !dbg !3296
  br label %124, !dbg !3293

; <label>:124                                     ; preds = %._crit_edge8, %._crit_edge8.thread
  %125 = phi double [ %123, %._crit_edge8.thread ], [ 0.000000e+00, %._crit_edge8 ], !dbg !3293
  tail call void @llvm.dbg.value(metadata double %125, i64 0, metadata !131, metadata !1021), !dbg !3297
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !128, metadata !1021), !dbg !3201
  br i1 %97, label %.lr.ph, label %._crit_edge, !dbg !3298

.lr.ph:                                           ; preds = %124
  %126 = sub i32 0, %m_Nc.0, !dbg !3298
  %127 = xor i32 %81, -1, !dbg !3298
  %128 = icmp sgt i32 %126, %127
  %smax = select i1 %128, i32 %126, i32 %127
  %129 = icmp slt i32 %smax, -2
  %130 = select i1 %129, i32 %smax, i32 -2, !dbg !3298
  %131 = sub i32 -2, %86, !dbg !3298
  %132 = icmp sgt i32 %130, %131
  %smax12 = select i1 %132, i32 %130, i32 %131
  %133 = icmp sgt i32 %smax12, -21
  %smax12.op = sub i32 -2, %smax12, !dbg !3298
  %134 = select i1 %133, i32 %smax12.op, i32 19, !dbg !3298
  br label %135, !dbg !3298

; <label>:135                                     ; preds = %142, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %142 ]
  %136 = getelementptr inbounds [20 x double]* %error, i64 0, i64 %indvars.iv, !dbg !3300
  %137 = load double* %136, align 8, !dbg !3300, !tbaa !952
  %138 = tail call double @fabs(double %137) #10, !dbg !3304
  %139 = fcmp ogt double %138, %125, !dbg !3305
  br i1 %139, label %140, label %142, !dbg !3306

; <label>:140                                     ; preds = %135
  %141 = getelementptr inbounds [21 x i32]* @PictureRejected, i64 0, i64 %indvars.iv, !dbg !3307
  store i32 1, i32* %141, align 4, !dbg !3308, !tbaa !1109
  br label %142, !dbg !3307

; <label>:142                                     ; preds = %135, %140
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3298
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !3298
  %exitcond = icmp eq i32 %lftr.wideiv, %134, !dbg !3298
  br i1 %exitcond, label %._crit_edge, label %135, !dbg !3298

._crit_edge:                                      ; preds = %142, %124
  store i32 0, i32* getelementptr inbounds ([21 x i32]* @PictureRejected, i64 0, i64 0), align 16, !dbg !3309, !tbaa !1109
  tail call void @MADModelEstimator(i32 %91) #9, !dbg !3310
  br label %143, !dbg !3311

; <label>:143                                     ; preds = %._crit_edge, %0
  call void @llvm.lifetime.end(i64 160, i8* %1) #7, !dbg !3312
  ret void, !dbg !3312
}
