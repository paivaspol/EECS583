define void @updateMADModel() #0 {
entry:
  %error = alloca [20 x double], align 16
  %0 = bitcast [20 x double]* %error to i8*, !dbg !1748
  call void @llvm.lifetime.start(i64 160, i8* %0) #7, !dbg !1748
  call void @llvm.dbg.declare(metadata !{[20 x double]* %error}, metadata !125), !dbg !1748
  call void @llvm.dbg.value(metadata !1597, i64 0, metadata !126), !dbg !1748
  %1 = load %struct.ImageParameters** @img, align 8, !dbg !1749, !tbaa !804
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 127, !dbg !1749
  %2 = load i32* %NumberofCodedPFrame, align 4, !dbg !1749, !tbaa !807
  %cmp = icmp sgt i32 %2, 0, !dbg !1749
  br i1 %cmp, label %if.then, label %if.end127, !dbg !1749

if.then:                                          ; preds = %entry
  %BasicUnit = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 139, !dbg !1750
  %3 = load i32* %BasicUnit, align 4, !dbg !1750, !tbaa !807
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 136, !dbg !1750
  %4 = load i32* %Frame_Total_Number_MB, align 4, !dbg !1750, !tbaa !807
  %cmp1 = icmp eq i32 %3, %4, !dbg !1750
  br i1 %cmp1, label %if.end, label %if.else, !dbg !1750

if.else:                                          ; preds = %if.then
  %5 = load i32* @TotalNumberofBasicUnit, align 4, !dbg !1752, !tbaa !807
  %mul = mul nsw i32 %5, %2, !dbg !1752
  %6 = load i32* @CodedBasicUnit, align 4, !dbg !1752, !tbaa !807
  %add = add nsw i32 %mul, %6, !dbg !1752
  call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !128), !dbg !1752
  br label %if.end

if.end:                                           ; preds = %if.then, %if.else
  %m_Nc.0 = phi i32 [ %add, %if.else ], [ %2, %if.then ]
  call void @llvm.dbg.value(metadata !1634, i64 0, metadata !124), !dbg !1753
  br label %for.body, !dbg !1753

for.body:                                         ; preds = %if.end, %for.body
  %indvars.iv188 = phi i64 [ 19, %if.end ], [ %indvars.iv.next189, %for.body ]
  %indvars.iv.next189 = add i64 %indvars.iv188, -1, !dbg !1753
  %arrayidx = getelementptr inbounds [21 x double]* @PPictureMAD, i64 0, i64 %indvars.iv.next189, !dbg !1755
  %7 = load double* %arrayidx, align 8, !dbg !1755, !tbaa !862
  %arrayidx7 = getelementptr inbounds [21 x double]* @PPictureMAD, i64 0, i64 %indvars.iv188, !dbg !1755
  store double %7, double* %arrayidx7, align 8, !dbg !1755, !tbaa !862
  %arrayidx11 = getelementptr inbounds [21 x double]* @PictureMAD, i64 0, i64 %indvars.iv188, !dbg !1757
  store double %7, double* %arrayidx11, align 8, !dbg !1757, !tbaa !862
  %arrayidx14 = getelementptr inbounds [21 x double]* @ReferenceMAD, i64 0, i64 %indvars.iv.next189, !dbg !1758
  %8 = load double* %arrayidx14, align 8, !dbg !1758, !tbaa !862
  %arrayidx16 = getelementptr inbounds [21 x double]* @ReferenceMAD, i64 0, i64 %indvars.iv188, !dbg !1758
  store double %8, double* %arrayidx16, align 8, !dbg !1758, !tbaa !862
  %9 = trunc i64 %indvars.iv.next189 to i32, !dbg !1753
  %cmp5 = icmp sgt i32 %9, 0, !dbg !1753
  br i1 %cmp5, label %for.body, label %for.end, !dbg !1753

for.end:                                          ; preds = %for.body
  %10 = load double* @CurrentFrameMAD, align 8, !dbg !1759, !tbaa !862
  store double %10, double* getelementptr inbounds ([21 x double]* @PPictureMAD, i64 0, i64 0), align 16, !dbg !1759, !tbaa !862
  store double %10, double* getelementptr inbounds ([21 x double]* @PictureMAD, i64 0, i64 0), align 16, !dbg !1760, !tbaa !862
  br i1 %cmp1, label %if.then20, label %if.else21, !dbg !1761

if.then20:                                        ; preds = %for.end
  %11 = load double* getelementptr inbounds ([21 x double]* @PictureMAD, i64 0, i64 1), align 8, !dbg !1762, !tbaa !862
  store double %11, double* getelementptr inbounds ([21 x double]* @ReferenceMAD, i64 0, i64 0), align 16, !dbg !1762, !tbaa !862
  br label %if.end35, !dbg !1762

if.else21:                                        ; preds = %for.end
  %12 = load %struct.InputParameters** @input, align 8, !dbg !1763, !tbaa !804
  %PicInterlace = getelementptr inbounds %struct.InputParameters* %12, i64 0, i32 91, !dbg !1763
  %13 = load i32* %PicInterlace, align 4, !dbg !1763, !tbaa !807
  %cmp22 = icmp eq i32 %13, 2, !dbg !1763
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false, !dbg !1763

lor.lhs.false:                                    ; preds = %if.else21
  %MbInterlace = getelementptr inbounds %struct.InputParameters* %12, i64 0, i32 92, !dbg !1763
  %14 = load i32* %MbInterlace, align 4, !dbg !1763, !tbaa !807
  %tobool = icmp eq i32 %14, 0, !dbg !1763
  br i1 %tobool, label %if.else29, label %land.lhs.true, !dbg !1763

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.else21
  %FieldControl = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 134, !dbg !1763
  %15 = load i32* %FieldControl, align 4, !dbg !1763, !tbaa !807
  %cmp23 = icmp eq i32 %15, 1, !dbg !1763
  br i1 %cmp23, label %if.then24, label %if.else29, !dbg !1763

if.then24:                                        ; preds = %land.lhs.true
  %16 = load i32* @TotalNumberofBasicUnit, align 4, !dbg !1765, !tbaa !807
  %sub25 = add nsw i32 %16, -1, !dbg !1765
  %17 = load i32* @NumberofBasicUnit, align 4, !dbg !1765, !tbaa !807
  %sub26 = sub i32 %sub25, %17, !dbg !1765
  %idxprom27 = sext i32 %sub26 to i64, !dbg !1765
  %18 = load double** @FCBUPFMAD, align 8, !dbg !1765, !tbaa !804
  %arrayidx28 = getelementptr inbounds double* %18, i64 %idxprom27, !dbg !1765
  %19 = load double* %arrayidx28, align 8, !dbg !1765, !tbaa !862
  store double %19, double* getelementptr inbounds ([21 x double]* @ReferenceMAD, i64 0, i64 0), align 16, !dbg !1765, !tbaa !862
  br label %if.end35, !dbg !1765

if.else29:                                        ; preds = %land.lhs.true, %lor.lhs.false
  %20 = load i32* @TotalNumberofBasicUnit, align 4, !dbg !1766, !tbaa !807
  %sub30 = add nsw i32 %20, -1, !dbg !1766
  %21 = load i32* @NumberofBasicUnit, align 4, !dbg !1766, !tbaa !807
  %sub31 = sub i32 %sub30, %21, !dbg !1766
  %idxprom32 = sext i32 %sub31 to i64, !dbg !1766
  %22 = load double** @BUPFMAD, align 8, !dbg !1766, !tbaa !804
  %arrayidx33 = getelementptr inbounds double* %22, i64 %idxprom32, !dbg !1766
  %23 = load double* %arrayidx33, align 8, !dbg !1766, !tbaa !862
  store double %23, double* getelementptr inbounds ([21 x double]* @ReferenceMAD, i64 0, i64 0), align 16, !dbg !1766, !tbaa !862
  br label %if.end35

if.end35:                                         ; preds = %if.then24, %if.else29, %if.then20
  %24 = load double* @PMADPictureC1, align 8, !dbg !1767, !tbaa !862
  store double %24, double* @MADPictureC1, align 8, !dbg !1767, !tbaa !862
  %25 = load double* @PMADPictureC2, align 8, !dbg !1768, !tbaa !862
  store double %25, double* @MADPictureC2, align 8, !dbg !1768, !tbaa !862
  %26 = load double* @PreviousFrameMAD, align 8, !dbg !1769, !tbaa !862
  %cmp36 = fcmp ogt double %10, %26, !dbg !1769
  br i1 %cmp36, label %cond.true, label %cond.false, !dbg !1769

cond.true:                                        ; preds = %if.end35
  %div = fdiv double %26, %10, !dbg !1769
  br label %cond.end, !dbg !1769

cond.false:                                       ; preds = %if.end35
  %div38 = fdiv double %10, %26, !dbg !1769
  br label %cond.end, !dbg !1769

cond.end:                                         ; preds = %cond.false, %cond.true
  %div.sink = phi double [ %div, %cond.true ], [ %div38, %cond.false ]
  %mul37 = fmul double %div.sink, 2.000000e+01, !dbg !1769
  %conv = fptosi double %mul37 to i32, !dbg !1769
  call void @llvm.dbg.value(metadata !{i32 %conv}, i64 0, metadata !123), !dbg !1769
  %sub41 = add nsw i32 %m_Nc.0, -1, !dbg !1770
  %cmp42 = icmp slt i32 %conv, %sub41, !dbg !1770
  %conv.sub41 = select i1 %cmp42, i32 %conv, i32 %sub41, !dbg !1770
  call void @llvm.dbg.value(metadata !{i32 %conv.sub41}, i64 0, metadata !123), !dbg !1770
  %cmp49 = icmp slt i32 %conv.sub41, 1, !dbg !1771
  %cond54 = select i1 %cmp49, i32 1, i32 %conv.sub41, !dbg !1771
  call void @llvm.dbg.value(metadata !{i32 %cond54}, i64 0, metadata !123), !dbg !1771
  %27 = load i32* @MADm_windowSize, align 4, !dbg !1772, !tbaa !807
  %add55 = add nsw i32 %27, 1, !dbg !1772
  %cmp56 = icmp slt i32 %cond54, %add55, !dbg !1772
  %cond62 = select i1 %cmp56, i32 %cond54, i32 %add55, !dbg !1772
  call void @llvm.dbg.value(metadata !{i32 %cond62}, i64 0, metadata !123), !dbg !1772
  %cmp63 = icmp sgt i32 %cond62, 20, !dbg !1773
  %cond68 = select i1 %cmp63, i32 20, i32 %cond62, !dbg !1773
  call void @llvm.dbg.value(metadata !{i32 %cond68}, i64 0, metadata !123), !dbg !1773
  store i32 %cond68, i32* @MADm_windowSize, align 4, !dbg !1774, !tbaa !807
  call void @llvm.dbg.value(metadata !21, i64 0, metadata !124), !dbg !1775
  call void @llvm.memset.p0i8.i64(i8* bitcast ([21 x i32]* @PictureRejected to i8*), i8 0, i64 80, i32 16, i1 false), !dbg !1777
  %type = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 6, !dbg !1779
  %28 = load i32* %type, align 4, !dbg !1779, !tbaa !807
  %cmp77 = icmp eq i32 %28, 0, !dbg !1779
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !1779

if.then79:                                        ; preds = %cond.end
  store double %10, double* @PreviousFrameMAD, align 8, !dbg !1780, !tbaa !862
  br label %if.end80, !dbg !1780

if.end80:                                         ; preds = %if.then79, %cond.end
  call void @MADModelEstimator(i32 %cond68) #10, !dbg !1781
  call void @llvm.dbg.value(metadata !21, i64 0, metadata !124), !dbg !1782
  %cmp82168 = icmp sgt i32 %cond68, 0, !dbg !1782
  br i1 %cmp82168, label %for.body84.lr.ph, label %cond.false106, !dbg !1782

for.body84.lr.ph:                                 ; preds = %if.end80
  %29 = load double* @MADPictureC1, align 8, !dbg !1784, !tbaa !862
  %30 = load double* @MADPictureC2, align 8, !dbg !1784, !tbaa !862
  %31 = sub i32 0, %m_Nc.0, !dbg !1782
  %32 = xor i32 %conv, -1, !dbg !1782
  %33 = icmp sgt i32 %31, %32, !dbg !1782
  %smax178 = select i1 %33, i32 %31, i32 %32, !dbg !1782
  %34 = icmp slt i32 %smax178, -2, !dbg !1782
  %35 = select i1 %34, i32 %smax178, i32 -2, !dbg !1782
  %36 = sub i32 -2, %27, !dbg !1782
  %37 = icmp sgt i32 %35, %36, !dbg !1782
  %smax180 = select i1 %37, i32 %35, i32 %36, !dbg !1782
  %38 = icmp sgt i32 %smax180, -21, !dbg !1782
  %smax180.op = xor i32 %smax180, -1, !dbg !1782
  %39 = select i1 %38, i32 %smax180.op, i32 20, !dbg !1782
  br label %for.body84, !dbg !1782

for.body84:                                       ; preds = %for.body84, %for.body84.lr.ph
  %indvars.iv176 = phi i64 [ 0, %for.body84.lr.ph ], [ %indvars.iv.next177, %for.body84 ]
  %std.0170 = phi double [ 0.000000e+00, %for.body84.lr.ph ], [ %add99, %for.body84 ]
  %arrayidx86 = getelementptr inbounds [21 x double]* @ReferenceMAD, i64 0, i64 %indvars.iv176, !dbg !1784
  %40 = load double* %arrayidx86, align 8, !dbg !1784, !tbaa !862
  %mul87 = fmul double %29, %40, !dbg !1784
  %add88 = fadd double %mul87, %30, !dbg !1784
  %arrayidx90 = getelementptr inbounds [21 x double]* @PictureMAD, i64 0, i64 %indvars.iv176, !dbg !1784
  %41 = load double* %arrayidx90, align 8, !dbg !1784, !tbaa !862
  %sub91 = fsub double %add88, %41, !dbg !1784
  %arrayidx93 = getelementptr inbounds [20 x double]* %error, i64 0, i64 %indvars.iv176, !dbg !1784
  store double %sub91, double* %arrayidx93, align 8, !dbg !1784, !tbaa !862
  %mul98 = fmul double %sub91, %sub91, !dbg !1786
  %add99 = fadd double %std.0170, %mul98, !dbg !1786
  call void @llvm.dbg.value(metadata !{double %add99}, i64 0, metadata !126), !dbg !1786
  %indvars.iv.next177 = add i64 %indvars.iv176, 1, !dbg !1782
  %lftr.wideiv182 = trunc i64 %indvars.iv.next177 to i32, !dbg !1782
  %exitcond183 = icmp eq i32 %lftr.wideiv182, %39, !dbg !1782
  br i1 %exitcond183, label %for.end102, label %for.body84, !dbg !1782

for.end102:                                       ; preds = %for.body84
  %cmp103 = icmp eq i32 %cond68, 2, !dbg !1787
  br i1 %cmp103, label %cond.end109, label %cond.false106, !dbg !1787

cond.false106:                                    ; preds = %if.end80, %for.end102
  %std.0.lcssa191 = phi double [ %add99, %for.end102 ], [ 0.000000e+00, %if.end80 ]
  %conv107 = sitofp i32 %cond68 to double, !dbg !1787
  %div108 = fdiv double %std.0.lcssa191, %conv107, !dbg !1787
  %call = call double @sqrt(double %div108) #8, !dbg !1787
  br label %cond.end109, !dbg !1787

cond.end109:                                      ; preds = %for.end102, %cond.false106
  %cond110 = phi double [ %call, %cond.false106 ], [ 0.000000e+00, %for.end102 ], !dbg !1787
  call void @llvm.dbg.value(metadata !{double %cond110}, i64 0, metadata !127), !dbg !1787
  call void @llvm.dbg.value(metadata !21, i64 0, metadata !124), !dbg !1788
  br i1 %cmp82168, label %for.body114.lr.ph, label %for.end126, !dbg !1788

for.body114.lr.ph:                                ; preds = %cond.end109
  %42 = sub i32 0, %m_Nc.0, !dbg !1788
  %43 = xor i32 %conv, -1, !dbg !1788
  %44 = icmp sgt i32 %42, %43, !dbg !1788
  %smax = select i1 %44, i32 %42, i32 %43, !dbg !1788
  %45 = icmp slt i32 %smax, -2, !dbg !1788
  %46 = select i1 %45, i32 %smax, i32 -2, !dbg !1788
  %47 = sub i32 -2, %27, !dbg !1788
  %48 = icmp sgt i32 %46, %47, !dbg !1788
  %smax174 = select i1 %48, i32 %46, i32 %47, !dbg !1788
  %49 = icmp sgt i32 %smax174, -21, !dbg !1788
  %smax174.op = xor i32 %smax174, -1, !dbg !1788
  %50 = select i1 %49, i32 %smax174.op, i32 20, !dbg !1788
  br label %for.body114, !dbg !1788

for.body114:                                      ; preds = %for.inc124, %for.body114.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body114.lr.ph ], [ %indvars.iv.next, %for.inc124 ]
  %arrayidx116 = getelementptr inbounds [20 x double]* %error, i64 0, i64 %indvars.iv, !dbg !1790
  %51 = load double* %arrayidx116, align 8, !dbg !1790, !tbaa !862
  %call117 = call double @fabs(double %51) #9, !dbg !1790
  %cmp118 = fcmp ogt double %call117, %cond110, !dbg !1790
  br i1 %cmp118, label %if.then120, label %for.inc124, !dbg !1790

if.then120:                                       ; preds = %for.body114
  %arrayidx122 = getelementptr inbounds [21 x i32]* @PictureRejected, i64 0, i64 %indvars.iv, !dbg !1792
  store i32 1, i32* %arrayidx122, align 4, !dbg !1792, !tbaa !805
  br label %for.inc124, !dbg !1792

for.inc124:                                       ; preds = %for.body114, %if.then120
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1788
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !1788
  %exitcond = icmp eq i32 %lftr.wideiv, %50, !dbg !1788
  br i1 %exitcond, label %for.end126, label %for.body114, !dbg !1788

for.end126:                                       ; preds = %for.inc124, %cond.end109
  store i32 0, i32* getelementptr inbounds ([21 x i32]* @PictureRejected, i64 0, i64 0), align 16, !dbg !1793, !tbaa !805
  call void @MADModelEstimator(i32 %cond68) #10, !dbg !1794
  br label %if.end127, !dbg !1795

if.end127:                                        ; preds = %for.end126, %entry
  call void @llvm.lifetime.end(i64 160, i8* %0) #7, !dbg !1796
  ret void, !dbg !1796
}
