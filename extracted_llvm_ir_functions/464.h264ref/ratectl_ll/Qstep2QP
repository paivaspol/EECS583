define i32 @Qstep2QP(double %Qstep) #6 {
  tail call void @llvm.dbg.value(metadata double %Qstep, i64 0, metadata !158, metadata !1021), !dbg !2765
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !159, metadata !1021), !dbg !2766
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !160, metadata !1021), !dbg !2767
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !151, metadata !1021), !dbg !2768
  tail call void @llvm.dbg.value(metadata double 6.250000e-01, i64 0, metadata !153, metadata !1021), !dbg !2771
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !152, metadata !1021), !dbg !2772
  %1 = fcmp olt double %Qstep, 6.250000e-01, !dbg !2773
  br i1 %1, label %21, label %.lr.ph.i, !dbg !2774

.lr.ph.i:                                         ; preds = %0, %.lr.ph.i
  %Qstep.02.i = phi double [ %2, %.lr.ph.i ], [ 8.750000e-01, %0 ], !dbg !2775
  %i.01.i = phi i32 [ %3, %.lr.ph.i ], [ 0, %0 ], !dbg !2775
  %2 = fmul double %Qstep.02.i, 2.000000e+00, !dbg !2777
  tail call void @llvm.dbg.value(metadata double %2, i64 0, metadata !153, metadata !1021), !dbg !2781
  %3 = add nuw nsw i32 %i.01.i, 1, !dbg !2782
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !152, metadata !1021), !dbg !2783
  %exitcond = icmp eq i32 %3, 8, !dbg !2784
  br i1 %exitcond, label %QP2Qstep.exit, label %.lr.ph.i, !dbg !2784

QP2Qstep.exit:                                    ; preds = %.lr.ph.i
  %4 = fcmp olt double %2, %Qstep, !dbg !2785
  br i1 %4, label %21, label %.preheader, !dbg !2786

.preheader:                                       ; preds = %QP2Qstep.exit
  tail call void @llvm.dbg.value(metadata i32 5, i64 0, metadata !151, metadata !1021), !dbg !2787
  tail call void @llvm.dbg.value(metadata double 1.125000e+00, i64 0, metadata !153, metadata !1021), !dbg !2789
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !152, metadata !1021), !dbg !2790
  %5 = fcmp ogt double %Qstep, 1.125000e+00, !dbg !2791
  br i1 %5, label %.lr.ph, label %9, !dbg !2792

.lr.ph:                                           ; preds = %.preheader, %.lr.ph
  %q_per.03 = phi i32 [ %7, %.lr.ph ], [ 0, %.preheader ]
  %.02 = phi double [ %6, %.lr.ph ], [ %Qstep, %.preheader ]
  %6 = fmul double %.02, 5.000000e-01, !dbg !2793
  tail call void @llvm.dbg.value(metadata double %6, i64 0, metadata !158, metadata !1021), !dbg !2765
  %7 = add nuw nsw i32 %q_per.03, 1, !dbg !2795
  tail call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !159, metadata !1021), !dbg !2766
  tail call void @llvm.dbg.value(metadata i32 5, i64 0, metadata !151, metadata !1021), !dbg !2787
  tail call void @llvm.dbg.value(metadata double 1.125000e+00, i64 0, metadata !153, metadata !1021), !dbg !2789
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !152, metadata !1021), !dbg !2790
  %8 = fcmp ogt double %6, 1.125000e+00, !dbg !2791
  br i1 %8, label %.lr.ph, label %._crit_edge, !dbg !2792

._crit_edge:                                      ; preds = %.lr.ph
  %phitmp = mul i32 %7, 6, !dbg !2792
  br label %9, !dbg !2792

; <label>:9                                       ; preds = %._crit_edge, %.preheader
  %q_per.0.lcssa = phi i32 [ %phitmp, %._crit_edge ], [ 0, %.preheader ]
  %.0.lcssa = phi double [ %6, %._crit_edge ], [ %Qstep, %.preheader ]
  %10 = fcmp ugt double %.0.lcssa, 6.562500e-01, !dbg !2796
  br i1 %10, label %11, label %19, !dbg !2798

; <label>:11                                      ; preds = %9
  %12 = fcmp ugt double %.0.lcssa, 7.500000e-01, !dbg !2799
  br i1 %12, label %13, label %19, !dbg !2801

; <label>:13                                      ; preds = %11
  %14 = fcmp ugt double %.0.lcssa, 8.437500e-01, !dbg !2802
  br i1 %14, label %15, label %19, !dbg !2804

; <label>:15                                      ; preds = %13
  %16 = fcmp ugt double %.0.lcssa, 9.375000e-01, !dbg !2805
  br i1 %16, label %17, label %19, !dbg !2807

; <label>:17                                      ; preds = %15
  %18 = fcmp ugt double %.0.lcssa, 1.062500e+00, !dbg !2808
  %. = select i1 %18, i32 5, i32 4
  br label %19

; <label>:19                                      ; preds = %17, %15, %13, %11, %9
  %q_rem.0 = phi i32 [ 0, %9 ], [ 1, %11 ], [ 2, %13 ], [ 3, %15 ], [ %., %17 ]
  %20 = add nsw i32 %q_rem.0, %q_per.0.lcssa, !dbg !2810
  br label %21, !dbg !2811

; <label>:21                                      ; preds = %QP2Qstep.exit, %0, %19
  %.01 = phi i32 [ %20, %19 ], [ 0, %0 ], [ 51, %QP2Qstep.exit ]
  ret i32 %.01, !dbg !2812
}
