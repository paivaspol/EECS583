define void @copyblock_sp(i32 %block_x, i32 %block_y) #0 {
  %m5 = alloca [4 x i32], align 16
  %m6 = alloca [4 x i32], align 16
  %predicted_block = alloca [4 x [4 x i32]], align 16
  tail call void @llvm.dbg.value(metadata i32 %block_x, i64 0, metadata !412, metadata !980), !dbg !5723
  tail call void @llvm.dbg.value(metadata i32 %block_y, i64 0, metadata !413, metadata !980), !dbg !5724
  tail call void @llvm.dbg.declare(metadata [4 x i32]* %m5, metadata !418, metadata !980), !dbg !5725
  tail call void @llvm.dbg.declare(metadata [4 x i32]* %m6, metadata !419, metadata !980), !dbg !5726
  %1 = load %struct.ImageParameters** @img, align 8, !dbg !5727, !tbaa !989
  %2 = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 3, !dbg !5728
  %3 = load i32* %2, align 4, !dbg !5728, !tbaa !1004
  %4 = sext i32 %3 to i64, !dbg !5729
  %5 = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 51, !dbg !5730
  %6 = load %struct.macroblock** %5, align 8, !dbg !5730, !tbaa !1940
  %7 = bitcast [4 x [4 x i32]]* %predicted_block to i8*, !dbg !5731
  call void @llvm.lifetime.start(i64 64, i8* %7) #2, !dbg !5731
  tail call void @llvm.dbg.declare(metadata [4 x [4 x i32]]* %predicted_block, metadata !421, metadata !980), !dbg !5732
  %8 = getelementptr inbounds %struct.macroblock* %6, i64 %4, i32 4, !dbg !5733
  %9 = load i32* %8, align 4, !dbg !5733, !tbaa !4560
  %10 = sdiv i32 %9, 6, !dbg !5734
  tail call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !422, metadata !980), !dbg !5735
  tail call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !423, metadata !980), !dbg !5736
  %11 = add nsw i32 %10, 15, !dbg !5737
  tail call void @llvm.dbg.value(metadata i32 %11, i64 0, metadata !424, metadata !980), !dbg !5738
  %12 = shl i32 1, %11, !dbg !5739
  tail call void @llvm.dbg.value(metadata i32 %17, i64 0, metadata !425, metadata !980), !dbg !5740
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !415, metadata !980), !dbg !5741
  %13 = sext i32 %block_x to i64, !dbg !5742
  %14 = sext i32 %block_y to i64, !dbg !5742
  br label %.preheader15, !dbg !5742

.preheader15:                                     ; preds = %27, %0
  %indvars.iv75 = phi i64 [ 0, %0 ], [ %indvars.iv.next76, %27 ]
  %15 = add nsw i64 %indvars.iv75, %14, !dbg !5744
  br label %21, !dbg !5749

.preheader14:                                     ; preds = %27
  %16 = srem i32 %9, 6, !dbg !5750
  %17 = sdiv i32 %12, 2, !dbg !5751
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !414, metadata !980), !dbg !5752
  %18 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 3, !dbg !5753
  %19 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 2, !dbg !5757
  %20 = bitcast [4 x i32]* %m5 to i64*, !dbg !5758
  br label %.preheader13, !dbg !5759

; <label>:21                                      ; preds = %21, %.preheader15
  %indvars.iv72 = phi i64 [ 0, %.preheader15 ], [ %indvars.iv.next73, %21 ]
  %22 = add nsw i64 %indvars.iv72, %13, !dbg !5760
  %23 = getelementptr inbounds %struct.ImageParameters* %1, i64 0, i32 45, i64 %22, i64 %15, !dbg !5761
  %24 = load i16* %23, align 2, !dbg !5761, !tbaa !1093
  %25 = zext i16 %24 to i32, !dbg !5761
  %26 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 %indvars.iv72, i64 %indvars.iv75, !dbg !5762
  store i32 %25, i32* %26, align 4, !dbg !5763, !tbaa !1054
  %indvars.iv.next73 = add nuw nsw i64 %indvars.iv72, 1, !dbg !5749
  %exitcond74 = icmp eq i64 %indvars.iv.next73, 4, !dbg !5749
  br i1 %exitcond74, label %27, label %21, !dbg !5749

; <label>:27                                      ; preds = %21
  %indvars.iv.next76 = add nuw nsw i64 %indvars.iv75, 1, !dbg !5742
  %exitcond77 = icmp eq i64 %indvars.iv.next76, 4, !dbg !5742
  br i1 %exitcond77, label %.preheader14, label %.preheader15, !dbg !5742

.preheader13:                                     ; preds = %38, %.preheader14
  %indvars.iv69 = phi i64 [ 0, %.preheader14 ], [ %indvars.iv.next70, %38 ]
  br label %28, !dbg !5764

; <label>:28                                      ; preds = %28, %.preheader13
  %indvars.iv66 = phi i64 [ 0, %.preheader13 ], [ %indvars.iv.next67, %28 ]
  %29 = sub nsw i64 3, %indvars.iv66, !dbg !5766
  %30 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 %indvars.iv66, i64 %indvars.iv69, !dbg !5769
  %31 = load i32* %30, align 4, !dbg !5769, !tbaa !1054
  %32 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 %29, i64 %indvars.iv69, !dbg !5770
  %33 = load i32* %32, align 4, !dbg !5770, !tbaa !1054
  %34 = add nsw i32 %33, %31, !dbg !5771
  %35 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 %indvars.iv66, !dbg !5772
  store i32 %34, i32* %35, align 4, !dbg !5773, !tbaa !1054
  %36 = sub nsw i32 %31, %33, !dbg !5774
  %37 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 %29, !dbg !5775
  store i32 %36, i32* %37, align 4, !dbg !5776, !tbaa !1054
  %indvars.iv.next67 = add nuw nsw i64 %indvars.iv66, 1, !dbg !5764
  %exitcond68 = icmp eq i64 %indvars.iv.next67, 2, !dbg !5764
  br i1 %exitcond68, label %38, label %28, !dbg !5764

; <label>:38                                      ; preds = %28
  %39 = load i64* %20, align 16, !dbg !5758
  %40 = trunc i64 %39 to i32, !dbg !5758
  %41 = lshr i64 %39, 32
  %42 = trunc i64 %41 to i32
  %43 = add nsw i32 %42, %40, !dbg !5777
  %44 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 0, i64 %indvars.iv69, !dbg !5778
  store i32 %43, i32* %44, align 4, !dbg !5779, !tbaa !1054
  %45 = sub nsw i32 %40, %42, !dbg !5780
  %46 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 2, i64 %indvars.iv69, !dbg !5781
  store i32 %45, i32* %46, align 4, !dbg !5782, !tbaa !1054
  %47 = load i32* %18, align 4, !dbg !5753, !tbaa !1054
  %48 = shl i32 %47, 1, !dbg !5783
  %49 = bitcast i32* %19 to i64*, !dbg !5757
  %50 = load i64* %49, align 8, !dbg !5757
  %51 = trunc i64 %50 to i32, !dbg !5757
  %52 = add nsw i32 %48, %51, !dbg !5784
  %53 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 1, i64 %indvars.iv69, !dbg !5785
  store i32 %52, i32* %53, align 4, !dbg !5786, !tbaa !1054
  %54 = lshr i64 %50, 32
  %55 = trunc i64 %54 to i32
  %56 = shl nsw i32 %51, 1, !dbg !5787
  %57 = sub nsw i32 %55, %56, !dbg !5788
  %58 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 3, i64 %indvars.iv69, !dbg !5789
  store i32 %57, i32* %58, align 4, !dbg !5790, !tbaa !1054
  %indvars.iv.next70 = add nuw nsw i64 %indvars.iv69, 1, !dbg !5759
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !414, metadata !980), !dbg !5752
  %exitcond71 = icmp eq i64 %indvars.iv.next70, 4, !dbg !5759
  br i1 %exitcond71, label %.preheader11, label %.preheader13, !dbg !5759

.preheader11:                                     ; preds = %38, %70
  %indvars.iv63 = phi i64 [ %indvars.iv.next64, %70 ], [ 0, %38 ]
  br label %60, !dbg !5791

.preheader10:                                     ; preds = %70
  %59 = sext i32 %16 to i64, !dbg !5796
  br label %.preheader9, !dbg !5801

; <label>:60                                      ; preds = %60, %.preheader11
  %indvars.iv60 = phi i64 [ 0, %.preheader11 ], [ %indvars.iv.next61, %60 ]
  %61 = sub nsw i64 3, %indvars.iv60, !dbg !5802
  %62 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 %indvars.iv63, i64 %indvars.iv60, !dbg !5805
  %63 = load i32* %62, align 4, !dbg !5805, !tbaa !1054
  %64 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 %indvars.iv63, i64 %61, !dbg !5806
  %65 = load i32* %64, align 4, !dbg !5806, !tbaa !1054
  %66 = add nsw i32 %65, %63, !dbg !5807
  %67 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 %indvars.iv60, !dbg !5808
  store i32 %66, i32* %67, align 4, !dbg !5809, !tbaa !1054
  %68 = sub nsw i32 %63, %65, !dbg !5810
  %69 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 %61, !dbg !5811
  store i32 %68, i32* %69, align 4, !dbg !5812, !tbaa !1054
  %indvars.iv.next61 = add nuw nsw i64 %indvars.iv60, 1, !dbg !5791
  %exitcond62 = icmp eq i64 %indvars.iv.next61, 2, !dbg !5791
  br i1 %exitcond62, label %70, label %60, !dbg !5791

; <label>:70                                      ; preds = %60
  %71 = load i64* %20, align 16, !dbg !5813
  %72 = trunc i64 %71 to i32, !dbg !5813
  %73 = lshr i64 %71, 32
  %74 = trunc i64 %73 to i32
  %75 = add nsw i32 %74, %72, !dbg !5814
  %76 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 %indvars.iv63, i64 0, !dbg !5815
  store i32 %75, i32* %76, align 16, !dbg !5816, !tbaa !1054
  %77 = sub nsw i32 %72, %74, !dbg !5817
  %78 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 %indvars.iv63, i64 2, !dbg !5818
  store i32 %77, i32* %78, align 8, !dbg !5819, !tbaa !1054
  %79 = load i32* %18, align 4, !dbg !5820, !tbaa !1054
  %80 = shl i32 %79, 1, !dbg !5821
  %81 = load i64* %49, align 8, !dbg !5822
  %82 = trunc i64 %81 to i32, !dbg !5822
  %83 = add nsw i32 %80, %82, !dbg !5823
  %84 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 %indvars.iv63, i64 1, !dbg !5824
  store i32 %83, i32* %84, align 4, !dbg !5825, !tbaa !1054
  %85 = lshr i64 %81, 32
  %86 = trunc i64 %85 to i32
  %87 = shl nsw i32 %82, 1, !dbg !5826
  %88 = sub nsw i32 %86, %87, !dbg !5827
  %89 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 %indvars.iv63, i64 3, !dbg !5828
  store i32 %88, i32* %89, align 4, !dbg !5829, !tbaa !1054
  %indvars.iv.next64 = add nuw nsw i64 %indvars.iv63, 1, !dbg !5830
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !415, metadata !980), !dbg !5741
  %exitcond65 = icmp eq i64 %indvars.iv.next64, 4, !dbg !5830
  br i1 %exitcond65, label %.preheader10, label %.preheader11, !dbg !5830

.preheader9:                                      ; preds = %110, %.preheader10
  %indvars.iv57 = phi i64 [ 0, %.preheader10 ], [ %indvars.iv.next58, %110 ]
  br label %94, !dbg !5831

.preheader8:                                      ; preds = %110
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !414, metadata !980), !dbg !5752
  %90 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 0, !dbg !5832
  %91 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 1, !dbg !5836
  %92 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 2, !dbg !5837
  %93 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 3, !dbg !5838
  br label %.preheader7, !dbg !5839

; <label>:94                                      ; preds = %94, %.preheader9
  %indvars.iv54 = phi i64 [ 0, %.preheader9 ], [ %indvars.iv.next55, %94 ]
  %95 = getelementptr inbounds [4 x [4 x i32]]* %predicted_block, i64 0, i64 %indvars.iv54, i64 %indvars.iv57, !dbg !5840
  %96 = load i32* %95, align 4, !dbg !5840, !tbaa !1054
  %ispos = icmp sgt i32 %96, -1, !dbg !5841
  %neg = sub i32 0, %96, !dbg !5841
  %97 = select i1 %ispos, i32 %96, i32 %neg, !dbg !5841
  %98 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %59, i64 %indvars.iv54, i64 %indvars.iv57, !dbg !5796
  %99 = load i32* %98, align 4, !dbg !5796, !tbaa !1054
  %100 = mul nsw i32 %97, %99, !dbg !5842
  %101 = add nsw i32 %100, %17, !dbg !5843
  %102 = ashr i32 %101, %11, !dbg !5844
  %103 = tail call i32 @sign(i32 %102, i32 %96) #4, !dbg !5845
  %104 = getelementptr inbounds [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %59, i64 %indvars.iv54, i64 %indvars.iv57, !dbg !5846
  %105 = load i32* %104, align 4, !dbg !5846, !tbaa !1054
  %106 = mul nsw i32 %105, %103, !dbg !5847
  %107 = shl i32 %106, %10, !dbg !5848
  %108 = load %struct.ImageParameters** @img, align 8, !dbg !5849, !tbaa !989
  %109 = getelementptr inbounds %struct.ImageParameters* %108, i64 0, i32 46, i64 %indvars.iv54, i64 %indvars.iv57, !dbg !5849
  store i32 %107, i32* %109, align 4, !dbg !5850, !tbaa !1054
  %indvars.iv.next55 = add nuw nsw i64 %indvars.iv54, 1, !dbg !5831
  %exitcond56 = icmp eq i64 %indvars.iv.next55, 4, !dbg !5831
  br i1 %exitcond56, label %110, label %94, !dbg !5831

; <label>:110                                     ; preds = %94
  %indvars.iv.next58 = add nuw nsw i64 %indvars.iv57, 1, !dbg !5801
  %exitcond59 = icmp eq i64 %indvars.iv.next58, 4, !dbg !5801
  br i1 %exitcond59, label %.preheader8, label %.preheader9, !dbg !5801

.preheader7:                                      ; preds = %142, %.preheader8
  %indvars.iv51 = phi i64 [ 0, %.preheader8 ], [ %indvars.iv.next52, %142 ]
  br label %112, !dbg !5851

.preheader6:                                      ; preds = %142
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !415, metadata !980), !dbg !5741
  %111 = getelementptr inbounds %struct.ImageParameters* %108, i64 0, i32 155, !dbg !5853
  br label %.preheader5, !dbg !5860

; <label>:112                                     ; preds = %112, %.preheader7
  %indvars.iv45 = phi i64 [ 0, %.preheader7 ], [ %indvars.iv.next46, %112 ]
  %113 = getelementptr inbounds %struct.ImageParameters* %108, i64 0, i32 46, i64 %indvars.iv45, i64 %indvars.iv51, !dbg !5861
  %114 = load i32* %113, align 4, !dbg !5861, !tbaa !1054
  %115 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 %indvars.iv45, !dbg !5864
  store i32 %114, i32* %115, align 4, !dbg !5865, !tbaa !1054
  %indvars.iv.next46 = add nuw nsw i64 %indvars.iv45, 1, !dbg !5851
  %exitcond47 = icmp eq i64 %indvars.iv.next46, 4, !dbg !5851
  br i1 %exitcond47, label %116, label %112, !dbg !5851

; <label>:116                                     ; preds = %112
  %117 = load i64* %20, align 16, !dbg !5866
  %118 = trunc i64 %117 to i32, !dbg !5866
  %119 = load i64* %49, align 8, !dbg !5867
  %120 = trunc i64 %119 to i32, !dbg !5867
  %121 = add nsw i32 %120, %118, !dbg !5868
  store i32 %121, i32* %90, align 16, !dbg !5869, !tbaa !1054
  %122 = sub nsw i32 %118, %120, !dbg !5870
  store i32 %122, i32* %91, align 4, !dbg !5871, !tbaa !1054
  %123 = lshr i64 %117, 32
  %124 = trunc i64 %123 to i32
  %125 = ashr i32 %124, 1, !dbg !5872
  %126 = lshr i64 %119, 32
  %127 = trunc i64 %126 to i32
  %128 = sub nsw i32 %125, %127, !dbg !5873
  store i32 %128, i32* %92, align 8, !dbg !5874, !tbaa !1054
  %129 = ashr i32 %127, 1, !dbg !5875
  %130 = add nsw i32 %129, %124, !dbg !5876
  store i32 %130, i32* %93, align 4, !dbg !5877, !tbaa !1054
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !414, metadata !980), !dbg !5752
  %131 = add nsw i32 %130, %121, !dbg !5878
  %132 = getelementptr inbounds %struct.ImageParameters* %108, i64 0, i32 46, i64 0, i64 %indvars.iv51, !dbg !5882
  store i32 %131, i32* %132, align 4, !dbg !5883, !tbaa !1054
  %133 = sub nsw i32 %121, %130, !dbg !5884
  %134 = getelementptr inbounds %struct.ImageParameters* %108, i64 0, i32 46, i64 3, i64 %indvars.iv51, !dbg !5885
  store i32 %133, i32* %134, align 4, !dbg !5886, !tbaa !1054
  br label %._crit_edge, !dbg !5887

._crit_edge:                                      ; preds = %116, %._crit_edge
  %indvars.iv.next4985 = phi i64 [ 1, %116 ], [ %indvars.iv.next49, %._crit_edge ]
  %.phi.trans.insert = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 %indvars.iv.next4985
  %.pre = load i32* %.phi.trans.insert, align 4, !dbg !5888, !tbaa !1054
  %135 = sub nsw i64 3, %indvars.iv.next4985, !dbg !5889
  %136 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 %135, !dbg !5890
  %137 = load i32* %136, align 4, !dbg !5890, !tbaa !1054
  %138 = add nsw i32 %137, %.pre, !dbg !5878
  %139 = getelementptr inbounds %struct.ImageParameters* %108, i64 0, i32 46, i64 %indvars.iv.next4985, i64 %indvars.iv51, !dbg !5882
  store i32 %138, i32* %139, align 4, !dbg !5883, !tbaa !1054
  %140 = sub nsw i32 %.pre, %137, !dbg !5884
  %141 = getelementptr inbounds %struct.ImageParameters* %108, i64 0, i32 46, i64 %135, i64 %indvars.iv51, !dbg !5885
  store i32 %140, i32* %141, align 4, !dbg !5886, !tbaa !1054
  %indvars.iv.next49 = add nuw nsw i64 %indvars.iv.next4985, 1, !dbg !5887
  %exitcond50 = icmp eq i64 %indvars.iv.next49, 2, !dbg !5887
  br i1 %exitcond50, label %142, label %._crit_edge, !dbg !5887

; <label>:142                                     ; preds = %._crit_edge
  %indvars.iv.next52 = add nuw nsw i64 %indvars.iv51, 1, !dbg !5839
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !414, metadata !980), !dbg !5752
  %exitcond53 = icmp eq i64 %indvars.iv.next52, 4, !dbg !5839
  br i1 %exitcond53, label %.preheader6, label %.preheader7, !dbg !5839

.preheader5:                                      ; preds = %188, %.preheader6
  %indvars.iv42 = phi i64 [ 0, %.preheader6 ], [ %indvars.iv.next43, %188 ]
  br label %150, !dbg !5891

.preheader4:                                      ; preds = %188
  %143 = getelementptr inbounds %struct.ImageParameters* %108, i64 0, i32 33, !dbg !5893
  %144 = load i32* %143, align 4, !dbg !5893, !tbaa !2518
  %145 = getelementptr inbounds %struct.ImageParameters* %108, i64 0, i32 34, !dbg !5898
  %146 = load i32* %145, align 4, !dbg !5898, !tbaa !2520
  %147 = load %struct.storable_picture** @enc_picture, align 8, !dbg !5899, !tbaa !989
  %148 = getelementptr inbounds %struct.storable_picture* %147, i64 0, i32 25, !dbg !5900
  %149 = load i16*** %148, align 8, !dbg !5900, !tbaa !994
  br label %.preheader, !dbg !5901

; <label>:150                                     ; preds = %150, %.preheader5
  %indvars.iv35 = phi i64 [ 0, %.preheader5 ], [ %indvars.iv.next36, %150 ]
  %151 = getelementptr inbounds %struct.ImageParameters* %108, i64 0, i32 46, i64 %indvars.iv42, i64 %indvars.iv35, !dbg !5902
  %152 = load i32* %151, align 4, !dbg !5902, !tbaa !1054
  %153 = getelementptr inbounds [4 x i32]* %m5, i64 0, i64 %indvars.iv35, !dbg !5904
  store i32 %152, i32* %153, align 4, !dbg !5905, !tbaa !1054
  %indvars.iv.next36 = add nuw nsw i64 %indvars.iv35, 1, !dbg !5891
  %exitcond37 = icmp eq i64 %indvars.iv.next36, 4, !dbg !5891
  br i1 %exitcond37, label %154, label %150, !dbg !5891

; <label>:154                                     ; preds = %150
  %155 = load i64* %20, align 16, !dbg !5906
  %156 = trunc i64 %155 to i32, !dbg !5906
  %157 = load i64* %49, align 8, !dbg !5907
  %158 = trunc i64 %157 to i32, !dbg !5907
  %159 = add nsw i32 %158, %156, !dbg !5908
  store i32 %159, i32* %90, align 16, !dbg !5909, !tbaa !1054
  %160 = sub nsw i32 %156, %158, !dbg !5910
  store i32 %160, i32* %91, align 4, !dbg !5911, !tbaa !1054
  %161 = lshr i64 %155, 32
  %162 = trunc i64 %161 to i32
  %163 = ashr i32 %162, 1, !dbg !5912
  %164 = lshr i64 %157, 32
  %165 = trunc i64 %164 to i32
  %166 = sub nsw i32 %163, %165, !dbg !5913
  store i32 %166, i32* %92, align 8, !dbg !5914, !tbaa !1054
  %167 = ashr i32 %165, 1, !dbg !5915
  %168 = add nsw i32 %167, %162, !dbg !5916
  store i32 %168, i32* %93, align 4, !dbg !5917, !tbaa !1054
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !415, metadata !980), !dbg !5741
  br label %169, !dbg !5918

; <label>:169                                     ; preds = %._crit_edge81, %154
  %170 = phi i32 [ %159, %154 ], [ %.pre83, %._crit_edge81 ]
  %indvars.iv39 = phi i64 [ 0, %154 ], [ %indvars.iv.next40, %._crit_edge81 ]
  %171 = sub nsw i64 3, %indvars.iv39, !dbg !5919
  %172 = load i32* %111, align 4, !dbg !5853, !tbaa !1920
  %173 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 %171, !dbg !5853
  %174 = load i32* %173, align 4, !dbg !5853, !tbaa !1054
  %175 = add i32 %170, 32, !dbg !5853
  %176 = add i32 %175, %174, !dbg !5853
  %177 = ashr i32 %176, 6, !dbg !5853
  %178 = icmp slt i32 %177, 0, !dbg !5853
  %. = select i1 %178, i32 0, i32 %177, !dbg !5853
  %179 = icmp slt i32 %172, %., !dbg !5853
  %.. = select i1 %179, i32 %172, i32 %., !dbg !5853
  %180 = getelementptr inbounds %struct.ImageParameters* %108, i64 0, i32 46, i64 %indvars.iv42, i64 %indvars.iv39, !dbg !5920
  store i32 %.., i32* %180, align 4, !dbg !5921, !tbaa !1054
  %181 = load i32* %111, align 4, !dbg !5922, !tbaa !1920
  %182 = sub i32 %175, %174, !dbg !5922
  %183 = ashr i32 %182, 6, !dbg !5922
  %184 = icmp slt i32 %183, 0, !dbg !5922
  %.2 = select i1 %184, i32 0, i32 %183, !dbg !5922
  %185 = icmp slt i32 %181, %.2, !dbg !5922
  %186 = select i1 %185, i32 %181, i32 %.2, !dbg !5922
  %187 = getelementptr inbounds %struct.ImageParameters* %108, i64 0, i32 46, i64 %indvars.iv42, i64 %171, !dbg !5923
  store i32 %186, i32* %187, align 4, !dbg !5924, !tbaa !1054
  %indvars.iv.next40 = add nuw nsw i64 %indvars.iv39, 1, !dbg !5918
  %exitcond41 = icmp eq i64 %indvars.iv.next40, 2, !dbg !5918
  br i1 %exitcond41, label %188, label %._crit_edge81, !dbg !5918

._crit_edge81:                                    ; preds = %169
  %.phi.trans.insert82 = getelementptr inbounds [4 x i32]* %m6, i64 0, i64 %indvars.iv.next40
  %.pre83 = load i32* %.phi.trans.insert82, align 4, !dbg !5853, !tbaa !1054
  br label %169, !dbg !5918

; <label>:188                                     ; preds = %169
  %indvars.iv.next43 = add nuw nsw i64 %indvars.iv42, 1, !dbg !5860
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !415, metadata !980), !dbg !5741
  %exitcond44 = icmp eq i64 %indvars.iv.next43, 4, !dbg !5860
  br i1 %exitcond44, label %.preheader4, label %.preheader5, !dbg !5860

.preheader:                                       ; preds = %204, %.preheader4
  %indvars.iv32 = phi i64 [ 0, %.preheader4 ], [ %indvars.iv.next33, %204 ]
  %189 = trunc i64 %indvars.iv32 to i32, !dbg !5925
  %190 = add i32 %189, %block_y, !dbg !5925
  %191 = add i32 %190, %146, !dbg !5926
  %192 = sext i32 %191 to i64, !dbg !5899
  %193 = getelementptr inbounds i16** %149, i64 %192, !dbg !5899
  %194 = load i16** %193, align 8, !dbg !5899, !tbaa !989
  br label %195, !dbg !5927

; <label>:195                                     ; preds = %195, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %195 ]
  %196 = getelementptr inbounds %struct.ImageParameters* %108, i64 0, i32 46, i64 %indvars.iv, i64 %indvars.iv32, !dbg !5928
  %197 = load i32* %196, align 4, !dbg !5928, !tbaa !1054
  %198 = trunc i32 %197 to i16, !dbg !5928
  %199 = trunc i64 %indvars.iv to i32, !dbg !5929
  %200 = add i32 %199, %block_x, !dbg !5929
  %201 = add i32 %200, %144, !dbg !5930
  %202 = sext i32 %201 to i64, !dbg !5899
  %203 = getelementptr inbounds i16* %194, i64 %202, !dbg !5899
  store i16 %198, i16* %203, align 2, !dbg !5931, !tbaa !1093
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5927
  %exitcond = icmp eq i64 %indvars.iv.next, 4, !dbg !5927
  br i1 %exitcond, label %204, label %195, !dbg !5927

; <label>:204                                     ; preds = %195
  %indvars.iv.next33 = add nuw nsw i64 %indvars.iv32, 1, !dbg !5901
  %exitcond34 = icmp eq i64 %indvars.iv.next33, 4, !dbg !5901
  br i1 %exitcond34, label %205, label %.preheader, !dbg !5901

; <label>:205                                     ; preds = %204
  call void @llvm.lifetime.end(i64 64, i8* %7) #2, !dbg !5932
  ret void, !dbg !5932
}
