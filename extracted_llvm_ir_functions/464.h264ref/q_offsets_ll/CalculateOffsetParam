define void @CalculateOffsetParam() #0 {
  %1 = load %struct.InputParameters** @input, align 8, !dbg !845, !tbaa !731
  %2 = getelementptr inbounds %struct.InputParameters* %1, i64 0, i32 147, !dbg !847
  %3 = load i32* %2, align 4, !dbg !847, !tbaa !821
  %4 = icmp eq i32 %3, 0, !dbg !845
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !64, metadata !659), !dbg !848
  %5 = load %struct.ImageParameters** @img, align 8, !dbg !849, !tbaa !731
  %6 = getelementptr inbounds %struct.ImageParameters* %5, i64 0, i32 6, !dbg !861
  br i1 %4, label %.preheader1, label %.preheader3, !dbg !862

.preheader3:                                      ; preds = %0, %61
  %indvars.iv23 = phi i64 [ %indvars.iv.next24, %61 ], [ 0, %0 ]
  %7 = add nuw nsw i64 %indvars.iv23, 5, !dbg !863
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !63, metadata !659), !dbg !868
  br label %.preheader2, !dbg !869

.preheader2:                                      ; preds = %60, %.preheader3
  %indvars.iv20 = phi i64 [ 0, %.preheader3 ], [ %indvars.iv.next21, %60 ]
  br label %8, !dbg !871

; <label>:8                                       ; preds = %41, %.preheader2
  %indvars.iv17 = phi i64 [ 0, %.preheader2 ], [ %indvars.iv.next18, %41 ]
  %9 = shl i64 %indvars.iv17, 2, !dbg !875
  %10 = add nuw nsw i64 %9, %indvars.iv20, !dbg !878
  %11 = load i32* %6, align 4, !dbg !879, !tbaa !881
  %12 = icmp eq i32 %11, 2, !dbg !884
  br i1 %12, label %13, label %27, !dbg !885

; <label>:13                                      ; preds = %8
  %14 = getelementptr inbounds [9 x [16 x i16]]* @OffsetList4x4input, i64 0, i64 0, i64 %10, !dbg !886
  %15 = load i16* %14, align 2, !dbg !886, !tbaa !812
  %16 = sext i16 %15 to i32, !dbg !888
  %17 = trunc i64 %7 to i32, !dbg !889
  %18 = shl i32 %16, %17, !dbg !889
  %19 = getelementptr inbounds [9 x [16 x i16]]* @OffsetList4x4input, i64 0, i64 1, i64 %10, !dbg !890
  %20 = load i16* %19, align 2, !dbg !890, !tbaa !812
  %21 = sext i16 %20 to i32, !dbg !891
  %22 = shl i32 %21, %17, !dbg !892
  %23 = getelementptr inbounds [9 x [16 x i16]]* @OffsetList4x4input, i64 0, i64 2, i64 %10, !dbg !893
  %24 = load i16* %23, align 2, !dbg !893, !tbaa !812
  %25 = sext i16 %24 to i32, !dbg !894
  %26 = shl i32 %25, %17, !dbg !895
  br label %41, !dbg !896

; <label>:27                                      ; preds = %8
  %28 = getelementptr inbounds [9 x [16 x i16]]* @OffsetList4x4input, i64 0, i64 3, i64 %10, !dbg !897
  %29 = load i16* %28, align 2, !dbg !897, !tbaa !812
  %30 = sext i16 %29 to i32, !dbg !899
  %31 = trunc i64 %7 to i32, !dbg !900
  %32 = shl i32 %30, %31, !dbg !900
  %33 = getelementptr inbounds [9 x [16 x i16]]* @OffsetList4x4input, i64 0, i64 4, i64 %10, !dbg !901
  %34 = load i16* %33, align 2, !dbg !901, !tbaa !812
  %35 = sext i16 %34 to i32, !dbg !902
  %36 = shl i32 %35, %31, !dbg !903
  %37 = getelementptr inbounds [9 x [16 x i16]]* @OffsetList4x4input, i64 0, i64 5, i64 %10, !dbg !904
  %38 = load i16* %37, align 2, !dbg !904, !tbaa !812
  %39 = sext i16 %38 to i32, !dbg !905
  %40 = shl i32 %39, %31, !dbg !906
  br label %41

; <label>:41                                      ; preds = %27, %13
  %.pre-phi31 = phi i32 [ %31, %27 ], [ %17, %13 ], !dbg !907
  %.sink27 = phi i32 [ %32, %27 ], [ %18, %13 ]
  %.sink26 = phi i32 [ %36, %27 ], [ %22, %13 ]
  %.sink = phi i32 [ %40, %27 ], [ %26, %13 ]
  %42 = getelementptr inbounds [13 x [4 x [4 x i32]]]* @LevelOffset4x4Luma_Intra, i64 0, i64 %indvars.iv23, i64 %indvars.iv20, i64 %indvars.iv17, !dbg !908
  store i32 %.sink27, i32* %42, align 4
  %43 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Intra, i64 0, i64 0, i64 %indvars.iv23, i64 %indvars.iv20, i64 %indvars.iv17, !dbg !909
  store i32 %.sink26, i32* %43, align 4
  %44 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Intra, i64 0, i64 1, i64 %indvars.iv23, i64 %indvars.iv20, i64 %indvars.iv17, !dbg !910
  store i32 %.sink, i32* %44, align 4
  %45 = getelementptr inbounds [9 x [16 x i16]]* @OffsetList4x4input, i64 0, i64 6, i64 %10, !dbg !911
  %46 = load i16* %45, align 2, !dbg !911, !tbaa !812
  %47 = sext i16 %46 to i32, !dbg !912
  %48 = shl i32 %47, %.pre-phi31, !dbg !907
  %49 = getelementptr inbounds [13 x [4 x [4 x i32]]]* @LevelOffset4x4Luma_Inter, i64 0, i64 %indvars.iv23, i64 %indvars.iv20, i64 %indvars.iv17, !dbg !913
  store i32 %48, i32* %49, align 4, !dbg !914, !tbaa !664
  %50 = getelementptr inbounds [9 x [16 x i16]]* @OffsetList4x4input, i64 0, i64 7, i64 %10, !dbg !915
  %51 = load i16* %50, align 2, !dbg !915, !tbaa !812
  %52 = sext i16 %51 to i32, !dbg !916
  %53 = shl i32 %52, %.pre-phi31, !dbg !917
  %54 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Inter, i64 0, i64 0, i64 %indvars.iv23, i64 %indvars.iv20, i64 %indvars.iv17, !dbg !918
  store i32 %53, i32* %54, align 4, !dbg !919, !tbaa !664
  %55 = getelementptr inbounds [9 x [16 x i16]]* @OffsetList4x4input, i64 0, i64 8, i64 %10, !dbg !920
  %56 = load i16* %55, align 2, !dbg !920, !tbaa !812
  %57 = sext i16 %56 to i32, !dbg !921
  %58 = shl i32 %57, %.pre-phi31, !dbg !922
  %59 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Inter, i64 0, i64 1, i64 %indvars.iv23, i64 %indvars.iv20, i64 %indvars.iv17, !dbg !923
  store i32 %58, i32* %59, align 4, !dbg !924, !tbaa !664
  %indvars.iv.next18 = add nuw nsw i64 %indvars.iv17, 1, !dbg !871
  %exitcond19 = icmp eq i64 %indvars.iv.next18, 4, !dbg !871
  br i1 %exitcond19, label %60, label %8, !dbg !871

; <label>:60                                      ; preds = %41
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1, !dbg !869
  %exitcond22 = icmp eq i64 %indvars.iv.next21, 4, !dbg !869
  br i1 %exitcond22, label %61, label %.preheader2, !dbg !869

; <label>:61                                      ; preds = %60
  %indvars.iv.next24 = add nuw nsw i64 %indvars.iv23, 1, !dbg !925
  %exitcond25 = icmp eq i64 %indvars.iv.next24, 13, !dbg !925
  br i1 %exitcond25, label %.loopexit, label %.preheader3, !dbg !925

.preheader1:                                      ; preds = %0, %92
  %indvars.iv14 = phi i64 [ %indvars.iv.next15, %92 ], [ 0, %0 ]
  %62 = add nuw nsw i64 %indvars.iv14, 5, !dbg !926
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !63, metadata !659), !dbg !868
  br label %.preheader, !dbg !927

.preheader:                                       ; preds = %91, %.preheader1
  %indvars.iv11 = phi i64 [ 0, %.preheader1 ], [ %indvars.iv.next12, %91 ]
  br label %63, !dbg !928

; <label>:63                                      ; preds = %80, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %80 ]
  %64 = shl i64 %indvars.iv, 2, !dbg !929
  %65 = add nuw nsw i64 %64, %indvars.iv11, !dbg !930
  %66 = load i32* %6, align 4, !dbg !861, !tbaa !881
  %67 = icmp eq i32 %66, 2, !dbg !931
  br i1 %67, label %68, label %74, !dbg !932

; <label>:68                                      ; preds = %63
  %69 = getelementptr inbounds [16 x i16]* @Offset_intra_default_intra, i64 0, i64 %65, !dbg !933
  %70 = load i16* %69, align 2, !dbg !933, !tbaa !812
  %71 = sext i16 %70 to i32, !dbg !935
  %72 = trunc i64 %62 to i32, !dbg !936
  %73 = shl i32 %71, %72, !dbg !936
  br label %80, !dbg !937

; <label>:74                                      ; preds = %63
  %75 = getelementptr inbounds [16 x i16]* @Offset_inter_default, i64 0, i64 %65, !dbg !938
  %76 = load i16* %75, align 2, !dbg !938, !tbaa !812
  %77 = sext i16 %76 to i32, !dbg !940
  %78 = trunc i64 %62 to i32, !dbg !941
  %79 = shl i32 %77, %78, !dbg !941
  br label %80

; <label>:80                                      ; preds = %74, %68
  %.pre-phi = phi i32 [ %78, %74 ], [ %72, %68 ], !dbg !942
  %.sink30 = phi i32 [ %79, %74 ], [ %73, %68 ]
  %81 = getelementptr inbounds [13 x [4 x [4 x i32]]]* @LevelOffset4x4Luma_Intra, i64 0, i64 %indvars.iv14, i64 %indvars.iv11, i64 %indvars.iv, !dbg !943
  store i32 %.sink30, i32* %81, align 4
  %82 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Intra, i64 0, i64 0, i64 %indvars.iv14, i64 %indvars.iv11, i64 %indvars.iv, !dbg !944
  store i32 %.sink30, i32* %82, align 4
  %83 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Intra, i64 0, i64 1, i64 %indvars.iv14, i64 %indvars.iv11, i64 %indvars.iv, !dbg !945
  store i32 %.sink30, i32* %83, align 4
  %84 = getelementptr inbounds [16 x i16]* @Offset_inter_default, i64 0, i64 %65, !dbg !946
  %85 = load i16* %84, align 2, !dbg !946, !tbaa !812
  %86 = sext i16 %85 to i32, !dbg !947
  %87 = shl i32 %86, %.pre-phi, !dbg !942
  %88 = getelementptr inbounds [13 x [4 x [4 x i32]]]* @LevelOffset4x4Luma_Inter, i64 0, i64 %indvars.iv14, i64 %indvars.iv11, i64 %indvars.iv, !dbg !948
  store i32 %87, i32* %88, align 4, !dbg !949, !tbaa !664
  %89 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Inter, i64 0, i64 0, i64 %indvars.iv14, i64 %indvars.iv11, i64 %indvars.iv, !dbg !950
  store i32 %87, i32* %89, align 4, !dbg !951, !tbaa !664
  %90 = getelementptr inbounds [2 x [13 x [4 x [4 x i32]]]]* @LevelOffset4x4Chroma_Inter, i64 0, i64 1, i64 %indvars.iv14, i64 %indvars.iv11, i64 %indvars.iv, !dbg !952
  store i32 %87, i32* %90, align 4, !dbg !953, !tbaa !664
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !928
  %exitcond = icmp eq i64 %indvars.iv.next, 4, !dbg !928
  br i1 %exitcond, label %91, label %63, !dbg !928

; <label>:91                                      ; preds = %80
  %indvars.iv.next12 = add nuw nsw i64 %indvars.iv11, 1, !dbg !927
  %exitcond13 = icmp eq i64 %indvars.iv.next12, 4, !dbg !927
  br i1 %exitcond13, label %92, label %.preheader, !dbg !927

; <label>:92                                      ; preds = %91
  %indvars.iv.next15 = add nuw nsw i64 %indvars.iv14, 1, !dbg !954
  %exitcond16 = icmp eq i64 %indvars.iv.next15, 13, !dbg !954
  br i1 %exitcond16, label %.loopexit, label %.preheader1, !dbg !954

.loopexit:                                        ; preds = %61, %92
  ret void, !dbg !955
}
