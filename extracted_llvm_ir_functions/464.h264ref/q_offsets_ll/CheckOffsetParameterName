define i32 @CheckOffsetParameterName(i8* nocapture readonly %s, i32* nocapture %type) #0 {
  tail call void @llvm.dbg.value(metadata i8* %s, i64 0, metadata !28, metadata !659), !dbg !660
  tail call void @llvm.dbg.value(metadata i32* %type, i64 0, metadata !29, metadata !659), !dbg !661
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !30, metadata !659), !dbg !662
  store i32 0, i32* %type, align 4, !dbg !663, !tbaa !664
  br label %1, !dbg !668

; <label>:1                                       ; preds = %0, %5
  %indvars.iv10 = phi i64 [ 0, %0 ], [ %indvars.iv.next11, %5 ]
  %2 = phi i8* [ getelementptr inbounds ([9 x [24 x i8]]* @OffsetType4x4, i64 0, i64 0, i64 0), %0 ], [ %6, %5 ]
  %3 = tail call i32 @strcmp(i8* %2, i8* %s) #6, !dbg !669
  %4 = icmp eq i32 %3, 0, !dbg !672
  br i1 %4, label %.critedge1.loopexit5, label %5, !dbg !673

; <label>:5                                       ; preds = %1
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1, !dbg !668
  %6 = getelementptr inbounds [9 x [24 x i8]]* @OffsetType4x4, i64 0, i64 %indvars.iv.next11, i64 0, !dbg !674
  %7 = icmp ne i8* %6, null, !dbg !675
  %8 = icmp slt i64 %indvars.iv.next11, 9, !dbg !676
  %or.cond = and i1 %8, %7, !dbg !668
  br i1 %or.cond, label %1, label %.critedge, !dbg !668

.critedge:                                        ; preds = %5
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !30, metadata !659), !dbg !662
  store i32 1, i32* %type, align 4, !dbg !677, !tbaa !664
  br label %9, !dbg !678

; <label>:9                                       ; preds = %.critedge, %14
  %indvars.iv = phi i64 [ 0, %.critedge ], [ %indvars.iv.next, %14 ]
  %10 = phi i8* [ getelementptr inbounds ([3 x [24 x i8]]* @OffsetType8x8, i64 0, i64 0, i64 0), %.critedge ], [ %15, %14 ]
  %11 = tail call i32 @strcmp(i8* %10, i8* %s) #6, !dbg !679
  %12 = icmp eq i32 %11, 0, !dbg !682
  %13 = trunc i64 %indvars.iv to i32, !dbg !683
  br i1 %12, label %.critedge1, label %14, !dbg !683

; <label>:14                                      ; preds = %9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !678
  %15 = getelementptr inbounds [3 x [24 x i8]]* @OffsetType8x8, i64 0, i64 %indvars.iv.next, i64 0, !dbg !684
  %16 = icmp ne i8* %15, null, !dbg !685
  %17 = icmp slt i64 %indvars.iv.next, 3, !dbg !686
  %or.cond4 = and i1 %17, %16, !dbg !678
  br i1 %or.cond4, label %9, label %.critedge1, !dbg !678

.critedge1.loopexit5:                             ; preds = %1
  %18 = trunc i64 %indvars.iv10 to i32
  br label %.critedge1

.critedge1:                                       ; preds = %14, %9, %.critedge1.loopexit5
  %.0 = phi i32 [ %18, %.critedge1.loopexit5 ], [ %13, %9 ], [ -1, %14 ]
  ret i32 %.0, !dbg !687
}
