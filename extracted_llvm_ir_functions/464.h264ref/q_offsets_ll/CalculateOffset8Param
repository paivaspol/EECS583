define void @CalculateOffset8Param() #0 {
  %1 = load %struct.InputParameters** @input, align 8, !dbg !956, !tbaa !731
  %2 = getelementptr inbounds %struct.InputParameters* %1, i64 0, i32 147, !dbg !958
  %3 = load i32* %2, align 4, !dbg !958, !tbaa !821
  %4 = icmp eq i32 %3, 0, !dbg !956
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !71, metadata !659), !dbg !959
  %5 = load %struct.ImageParameters** @img, align 8, !dbg !960, !tbaa !731
  %6 = getelementptr inbounds %struct.ImageParameters* %5, i64 0, i32 6, !dbg !972
  br i1 %4, label %.preheader1, label %.preheader3, !dbg !973

.preheader3:                                      ; preds = %0, %33
  %indvars.iv23 = phi i64 [ %indvars.iv.next24, %33 ], [ 0, %0 ]
  %7 = add nuw nsw i64 %indvars.iv23, 6, !dbg !974
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !70, metadata !659), !dbg !979
  br label %.preheader2, !dbg !980

.preheader2:                                      ; preds = %32, %.preheader3
  %indvars.iv20 = phi i64 [ 0, %.preheader3 ], [ %indvars.iv.next21, %32 ]
  br label %8, !dbg !982

; <label>:8                                       ; preds = %25, %.preheader2
  %indvars.iv17 = phi i64 [ 0, %.preheader2 ], [ %indvars.iv.next18, %25 ]
  %9 = shl i64 %indvars.iv17, 3, !dbg !986
  %10 = add nuw nsw i64 %9, %indvars.iv20, !dbg !989
  %11 = load i32* %6, align 4, !dbg !990, !tbaa !881
  %12 = icmp eq i32 %11, 2, !dbg !992
  br i1 %12, label %13, label %19, !dbg !993

; <label>:13                                      ; preds = %8
  %14 = getelementptr inbounds [3 x [64 x i16]]* @OffsetList8x8input, i64 0, i64 0, i64 %10, !dbg !994
  %15 = load i16* %14, align 2, !dbg !994, !tbaa !812
  %16 = sext i16 %15 to i32, !dbg !995
  %17 = trunc i64 %7 to i32, !dbg !996
  %18 = shl i32 %16, %17, !dbg !996
  br label %25, !dbg !997

; <label>:19                                      ; preds = %8
  %20 = getelementptr inbounds [3 x [64 x i16]]* @OffsetList8x8input, i64 0, i64 1, i64 %10, !dbg !998
  %21 = load i16* %20, align 2, !dbg !998, !tbaa !812
  %22 = sext i16 %21 to i32, !dbg !999
  %23 = trunc i64 %7 to i32, !dbg !1000
  %24 = shl i32 %22, %23, !dbg !1000
  br label %25

; <label>:25                                      ; preds = %19, %13
  %.pre-phi27 = phi i32 [ %23, %19 ], [ %17, %13 ], !dbg !1001
  %.sink = phi i32 [ %24, %19 ], [ %18, %13 ]
  %26 = getelementptr inbounds [13 x [8 x [8 x i32]]]* @LevelOffset8x8Luma_Intra, i64 0, i64 %indvars.iv23, i64 %indvars.iv20, i64 %indvars.iv17, !dbg !1002
  store i32 %.sink, i32* %26, align 4
  %27 = getelementptr inbounds [3 x [64 x i16]]* @OffsetList8x8input, i64 0, i64 2, i64 %10, !dbg !1003
  %28 = load i16* %27, align 2, !dbg !1003, !tbaa !812
  %29 = sext i16 %28 to i32, !dbg !1004
  %30 = shl i32 %29, %.pre-phi27, !dbg !1001
  %31 = getelementptr inbounds [13 x [8 x [8 x i32]]]* @LevelOffset8x8Luma_Inter, i64 0, i64 %indvars.iv23, i64 %indvars.iv20, i64 %indvars.iv17, !dbg !1005
  store i32 %30, i32* %31, align 4, !dbg !1006, !tbaa !664
  %indvars.iv.next18 = add nuw nsw i64 %indvars.iv17, 1, !dbg !982
  %exitcond19 = icmp eq i64 %indvars.iv.next18, 8, !dbg !982
  br i1 %exitcond19, label %32, label %8, !dbg !982

; <label>:32                                      ; preds = %25
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1, !dbg !980
  %exitcond22 = icmp eq i64 %indvars.iv.next21, 8, !dbg !980
  br i1 %exitcond22, label %33, label %.preheader2, !dbg !980

; <label>:33                                      ; preds = %32
  %indvars.iv.next24 = add nuw nsw i64 %indvars.iv23, 1, !dbg !1007
  %exitcond25 = icmp eq i64 %indvars.iv.next24, 13, !dbg !1007
  br i1 %exitcond25, label %.loopexit, label %.preheader3, !dbg !1007

.preheader1:                                      ; preds = %0, %60
  %indvars.iv14 = phi i64 [ %indvars.iv.next15, %60 ], [ 0, %0 ]
  %34 = add nuw nsw i64 %indvars.iv14, 6, !dbg !1008
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !70, metadata !659), !dbg !979
  br label %.preheader, !dbg !1009

.preheader:                                       ; preds = %59, %.preheader1
  %indvars.iv11 = phi i64 [ 0, %.preheader1 ], [ %indvars.iv.next12, %59 ]
  br label %35, !dbg !1010

; <label>:35                                      ; preds = %52, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %52 ]
  %36 = shl i64 %indvars.iv, 3, !dbg !1011
  %37 = add nuw nsw i64 %36, %indvars.iv11, !dbg !1012
  %38 = load i32* %6, align 4, !dbg !972, !tbaa !881
  %39 = icmp eq i32 %38, 2, !dbg !1013
  br i1 %39, label %40, label %46, !dbg !1014

; <label>:40                                      ; preds = %35
  %41 = getelementptr inbounds [64 x i16]* @Offset8_intra_default_intra, i64 0, i64 %37, !dbg !1015
  %42 = load i16* %41, align 2, !dbg !1015, !tbaa !812
  %43 = sext i16 %42 to i32, !dbg !1016
  %44 = trunc i64 %34 to i32, !dbg !1017
  %45 = shl i32 %43, %44, !dbg !1017
  br label %52, !dbg !1018

; <label>:46                                      ; preds = %35
  %47 = getelementptr inbounds [64 x i16]* @Offset8_inter_default, i64 0, i64 %37, !dbg !1019
  %48 = load i16* %47, align 2, !dbg !1019, !tbaa !812
  %49 = sext i16 %48 to i32, !dbg !1020
  %50 = trunc i64 %34 to i32, !dbg !1021
  %51 = shl i32 %49, %50, !dbg !1021
  br label %52

; <label>:52                                      ; preds = %46, %40
  %.pre-phi = phi i32 [ %50, %46 ], [ %44, %40 ], !dbg !1022
  %.sink26 = phi i32 [ %51, %46 ], [ %45, %40 ]
  %53 = getelementptr inbounds [13 x [8 x [8 x i32]]]* @LevelOffset8x8Luma_Intra, i64 0, i64 %indvars.iv14, i64 %indvars.iv11, i64 %indvars.iv, !dbg !1023
  store i32 %.sink26, i32* %53, align 4
  %54 = getelementptr inbounds [64 x i16]* @Offset8_inter_default, i64 0, i64 %37, !dbg !1024
  %55 = load i16* %54, align 2, !dbg !1024, !tbaa !812
  %56 = sext i16 %55 to i32, !dbg !1025
  %57 = shl i32 %56, %.pre-phi, !dbg !1022
  %58 = getelementptr inbounds [13 x [8 x [8 x i32]]]* @LevelOffset8x8Luma_Inter, i64 0, i64 %indvars.iv14, i64 %indvars.iv11, i64 %indvars.iv, !dbg !1026
  store i32 %57, i32* %58, align 4, !dbg !1027, !tbaa !664
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1010
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !1010
  br i1 %exitcond, label %59, label %35, !dbg !1010

; <label>:59                                      ; preds = %52
  %indvars.iv.next12 = add nuw nsw i64 %indvars.iv11, 1, !dbg !1009
  %exitcond13 = icmp eq i64 %indvars.iv.next12, 8, !dbg !1009
  br i1 %exitcond13, label %60, label %.preheader, !dbg !1009

; <label>:60                                      ; preds = %59
  %indvars.iv.next15 = add nuw nsw i64 %indvars.iv14, 1, !dbg !1028
  %exitcond16 = icmp eq i64 %indvars.iv.next15, 13, !dbg !1028
  br i1 %exitcond16, label %.loopexit, label %.preheader1, !dbg !1028

.loopexit:                                        ; preds = %33, %60
  ret void, !dbg !1029
}
