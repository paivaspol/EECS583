define void @write_unpaired_field(%struct.frame_store* %fs, i32 %p_out) #1 {
entry:
  %is_used = getelementptr inbounds %struct.frame_store* %fs, i64 0, i32 0
  %0 = load i32* %is_used, align 4, !tbaa !3
  %and = and i32 %0, 1
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %top_field = getelementptr inbounds %struct.frame_store* %fs, i64 0, i32 11
  %1 = load %struct.storable_picture** %top_field, align 8, !tbaa !0
  %size_x = getelementptr inbounds %struct.storable_picture* %1, i64 0, i32 18
  %2 = load i32* %size_x, align 4, !tbaa !3
  %size_y = getelementptr inbounds %struct.storable_picture* %1, i64 0, i32 19
  %3 = load i32* %size_y, align 4, !tbaa !3
  %size_x_cr = getelementptr inbounds %struct.storable_picture* %1, i64 0, i32 20
  %4 = load i32* %size_x_cr, align 4, !tbaa !3
  %size_y_cr = getelementptr inbounds %struct.storable_picture* %1, i64 0, i32 21
  %5 = load i32* %size_y_cr, align 4, !tbaa !3
  %call = tail call %struct.storable_picture* @alloc_storable_picture(i32 2, i32 %2, i32 %3, i32 %4, i32 %5) #6
  %bottom_field = getelementptr inbounds %struct.frame_store* %fs, i64 0, i32 12
  store %struct.storable_picture* %call, %struct.storable_picture** %bottom_field, align 8, !tbaa !0
  tail call void @clear_picture(%struct.storable_picture* %call) #5
  tail call void @dpb_combine_field(%struct.frame_store* %fs) #6
  %frame = getelementptr inbounds %struct.frame_store* %fs, i64 0, i32 10
  %6 = load %struct.storable_picture** %frame, align 8, !tbaa !0
  tail call void @write_out_picture(%struct.storable_picture* %6, i32 %p_out) #6
  %.pre = load i32* %is_used, align 4, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %7 = phi i32 [ %0, %entry ], [ %.pre, %if.then ]
  %and3 = and i32 %7, 2
  %tobool4 = icmp eq i32 %and3, 0
  br i1 %tobool4, label %if.end15, label %if.then5

if.then5:                                         ; preds = %if.end
  %bottom_field6 = getelementptr inbounds %struct.frame_store* %fs, i64 0, i32 12
  %8 = load %struct.storable_picture** %bottom_field6, align 8, !tbaa !0
  %size_x7 = getelementptr inbounds %struct.storable_picture* %8, i64 0, i32 18
  %9 = load i32* %size_x7, align 4, !tbaa !3
  %size_y8 = getelementptr inbounds %struct.storable_picture* %8, i64 0, i32 19
  %10 = load i32* %size_y8, align 4, !tbaa !3
  %size_x_cr9 = getelementptr inbounds %struct.storable_picture* %8, i64 0, i32 20
  %11 = load i32* %size_x_cr9, align 4, !tbaa !3
  %size_y_cr10 = getelementptr inbounds %struct.storable_picture* %8, i64 0, i32 21
  %12 = load i32* %size_y_cr10, align 4, !tbaa !3
  %call11 = tail call %struct.storable_picture* @alloc_storable_picture(i32 1, i32 %9, i32 %10, i32 %11, i32 %12) #6
  %top_field12 = getelementptr inbounds %struct.frame_store* %fs, i64 0, i32 11
  store %struct.storable_picture* %call11, %struct.storable_picture** %top_field12, align 8, !tbaa !0
  tail call void @clear_picture(%struct.storable_picture* %call11) #5
  tail call void @dpb_combine_field(%struct.frame_store* %fs) #6
  %frame14 = getelementptr inbounds %struct.frame_store* %fs, i64 0, i32 10
  %13 = load %struct.storable_picture** %frame14, align 8, !tbaa !0
  tail call void @write_out_picture(%struct.storable_picture* %13, i32 %p_out) #6
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then5
  store i32 3, i32* %is_used, align 4, !tbaa !3
  ret void
}
