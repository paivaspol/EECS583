define void @write_out_picture(%struct.storable_picture* %p, i32 %p_out) #1 {
entry:
  %0 = load %struct.ImageParameters** @img, align 8, !tbaa !0
  %pic_unit_size_on_disk = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 148
  %1 = load i32* %pic_unit_size_on_disk, align 4, !tbaa !3
  %div = sdiv i32 %1, 8
  %2 = load %struct.InputParameters** @input, align 8, !tbaa !0
  %rgb_input_flag = getelementptr inbounds %struct.InputParameters* %2, i64 0, i32 139
  %3 = load i32* %rgb_input_flag, align 4, !tbaa !3
  %tobool = icmp eq i32 %3, 0
  br i1 %tobool, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %yuv_format = getelementptr inbounds %struct.InputParameters* %2, i64 0, i32 18
  %4 = load i32* %yuv_format, align 4, !tbaa !3
  %cmp = icmp eq i32 %4, 3
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %5 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ]
  %non_existing = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 17
  %6 = load i32* %non_existing, align 4, !tbaa !3
  %tobool1 = icmp eq i32 %6, 0
  br i1 %tobool1, label %if.end, label %return

if.end:                                           ; preds = %land.end
  %frame_cropping_flag = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 43
  %7 = load i32* %frame_cropping_flag, align 4, !tbaa !3
  %tobool2 = icmp eq i32 %7, 0
  br i1 %tobool2, label %if.end20, label %if.then3

if.then3:                                         ; preds = %if.end
  %chroma_format_idc = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 41
  %8 = load i32* %chroma_format_idc, align 4, !tbaa !3
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds [4 x i32]* @write_out_picture.SubWidthC, i64 0, i64 %idxprom
  %9 = load i32* %arrayidx, align 4, !tbaa !3
  %frame_cropping_rect_left_offset = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 44
  %10 = load i32* %frame_cropping_rect_left_offset, align 4, !tbaa !3
  %mul = mul nsw i32 %10, %9
  %frame_cropping_rect_right_offset = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 45
  %11 = load i32* %frame_cropping_rect_right_offset, align 4, !tbaa !3
  %mul7 = mul nsw i32 %11, %9
  %arrayidx10 = getelementptr inbounds [4 x i32]* @write_out_picture.SubHeightC, i64 0, i64 %idxprom
  %12 = load i32* %arrayidx10, align 4, !tbaa !3
  %frame_mbs_only_flag = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 42
  %13 = load i32* %frame_mbs_only_flag, align 4, !tbaa !3
  %sub = sub nsw i32 2, %13
  %mul11 = mul nsw i32 %sub, %12
  %frame_cropping_rect_top_offset = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 46
  %14 = load i32* %frame_cropping_rect_top_offset, align 4, !tbaa !3
  %mul12 = mul nsw i32 %mul11, %14
  %frame_cropping_rect_bottom_offset = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 47
  %15 = load i32* %frame_cropping_rect_bottom_offset, align 4, !tbaa !3
  %mul19 = mul nsw i32 %mul11, %15
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then3
  %crop_bottom.0 = phi i32 [ %mul19, %if.then3 ], [ 0, %if.end ]
  %crop_top.0 = phi i32 [ %mul12, %if.then3 ], [ 0, %if.end ]
  %crop_right.0 = phi i32 [ %mul7, %if.then3 ], [ 0, %if.end ]
  %crop_left.0 = phi i32 [ %mul, %if.then3 ], [ 0, %if.end ]
  %size_x = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 18
  %16 = load i32* %size_x, align 4, !tbaa !3
  %size_y = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 19
  %17 = load i32* %size_y, align 4, !tbaa !3
  %mul21 = mul i32 %16, %div
  %mul22 = mul i32 %mul21, %17
  %conv = sext i32 %mul22 to i64
  %call = tail call noalias i8* @malloc(i64 %conv) #6
  %cmp23 = icmp eq i8* %call, null
  br i1 %cmp23, label %if.then25, label %if.end26

if.then25:                                        ; preds = %if.end20
  tail call void @no_mem_exit(i8* getelementptr inbounds ([23 x i8]* @.str1, i64 0, i64 0)) #6
  br label %if.end26

if.end26:                                         ; preds = %if.then25, %if.end20
  br i1 %5, label %if.then28, label %if.end81

if.then28:                                        ; preds = %if.end26
  %frame_cropping_rect_left_offset29 = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 44
  %18 = load i32* %frame_cropping_rect_left_offset29, align 4, !tbaa !3
  %frame_cropping_rect_right_offset30 = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 45
  %19 = load i32* %frame_cropping_rect_right_offset30, align 4, !tbaa !3
  %frame_mbs_only_flag31 = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 42
  %20 = load i32* %frame_mbs_only_flag31, align 4, !tbaa !3
  %sub32 = sub nsw i32 2, %20
  %frame_cropping_rect_top_offset33 = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 46
  %21 = load i32* %frame_cropping_rect_top_offset33, align 4, !tbaa !3
  %mul34 = mul nsw i32 %sub32, %21
  %frame_cropping_rect_bottom_offset37 = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 47
  %22 = load i32* %frame_cropping_rect_bottom_offset37, align 4, !tbaa !3
  %mul38 = mul nsw i32 %22, %sub32
  %imgUV = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 30
  %23 = load i16**** %imgUV, align 8, !tbaa !0
  %arrayidx39 = getelementptr inbounds i16*** %23, i64 1
  %24 = load i16*** %arrayidx39, align 8, !tbaa !0
  %size_x_cr = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 20
  %25 = load i32* %size_x_cr, align 4, !tbaa !3
  %size_y_cr = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 21
  %26 = load i32* %size_y_cr, align 4, !tbaa !3
  tail call void @img2buf(i16** %24, i8* %call, i32 %25, i32 %26, i32 %div, i32 %18, i32 %19, i32 %mul34, i32 %mul38) #5
  %27 = load i32* %size_y_cr, align 4, !tbaa !3
  %mul38255 = add i32 %22, %21
  %sum254 = mul i32 %sub32, %mul38255
  %sub42 = sub i32 %27, %sum254
  %28 = load i32* %size_x_cr, align 4, !tbaa !3
  %sum256 = add i32 %19, %18
  %sub45 = sub i32 %28, %sum256
  %mul46 = mul i32 %sub42, %div
  %mul47 = mul i32 %mul46, %sub45
  %conv48 = sext i32 %mul47 to i64
  %call49 = tail call i64 @write(i32 %p_out, i8* %call, i64 %conv48) #6
  %29 = load %struct.seq_parameter_set_rbsp_t** @active_sps, align 8, !tbaa !0
  %frame_cropping_flag50 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t* %29, i64 0, i32 28
  %30 = load i32* %frame_cropping_flag50, align 4, !tbaa !1
  %tobool51 = icmp eq i32 %30, 0
  br i1 %tobool51, label %if.end81, label %if.then52

if.then52:                                        ; preds = %if.then28
  %chroma_format_idc53 = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 41
  %31 = load i32* %chroma_format_idc53, align 4, !tbaa !3
  %idxprom54 = sext i32 %31 to i64
  %arrayidx55 = getelementptr inbounds [4 x i32]* @write_out_picture.SubWidthC, i64 0, i64 %idxprom54
  %32 = load i32* %arrayidx55, align 4, !tbaa !3
  %33 = load i32* %frame_cropping_rect_left_offset29, align 4, !tbaa !3
  %mul57 = mul nsw i32 %33, %32
  %34 = load i32* %frame_cropping_rect_right_offset30, align 4, !tbaa !3
  %mul62 = mul nsw i32 %34, %32
  %arrayidx65 = getelementptr inbounds [4 x i32]* @write_out_picture.SubHeightC, i64 0, i64 %idxprom54
  %35 = load i32* %arrayidx65, align 4, !tbaa !3
  %36 = load i32* %frame_mbs_only_flag31, align 4, !tbaa !3
  %sub67 = sub nsw i32 2, %36
  %mul68 = mul nsw i32 %sub67, %35
  %37 = load i32* %frame_cropping_rect_top_offset33, align 4, !tbaa !3
  %mul70 = mul nsw i32 %mul68, %37
  %38 = load i32* %frame_cropping_rect_bottom_offset37, align 4, !tbaa !3
  %mul78 = mul nsw i32 %mul68, %38
  br label %if.end81

if.end81:                                         ; preds = %if.then28, %if.end26, %if.then52
  %crop_bottom.1 = phi i32 [ %mul78, %if.then52 ], [ %crop_bottom.0, %if.end26 ], [ 0, %if.then28 ]
  %crop_top.1 = phi i32 [ %mul70, %if.then52 ], [ %crop_top.0, %if.end26 ], [ 0, %if.then28 ]
  %crop_right.1 = phi i32 [ %mul62, %if.then52 ], [ %crop_right.0, %if.end26 ], [ 0, %if.then28 ]
  %crop_left.1 = phi i32 [ %mul57, %if.then52 ], [ %crop_left.0, %if.end26 ], [ 0, %if.then28 ]
  %imgY = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 25
  %39 = load i16*** %imgY, align 8, !tbaa !0
  %40 = load i32* %size_x, align 4, !tbaa !3
  %41 = load i32* %size_y, align 4, !tbaa !3
  tail call void @img2buf(i16** %39, i8* %call, i32 %40, i32 %41, i32 %div, i32 %crop_left.1, i32 %crop_right.1, i32 %crop_top.1, i32 %crop_bottom.1) #5
  %42 = load i32* %size_y, align 4, !tbaa !3
  %sum = add i32 %crop_top.1, %crop_bottom.1
  %sub86 = sub i32 %42, %sum
  %43 = load i32* %size_x, align 4, !tbaa !3
  %sum247 = add i32 %crop_left.1, %crop_right.1
  %sub89 = sub i32 %43, %sum247
  %mul90 = mul i32 %sub86, %div
  %mul91 = mul i32 %mul90, %sub89
  %conv92 = sext i32 %mul91 to i64
  %call93 = tail call i64 @write(i32 %p_out, i8* %call, i64 %conv92) #6
  %chroma_format_idc94 = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 41
  %44 = load i32* %chroma_format_idc94, align 4, !tbaa !3
  %cmp95 = icmp eq i32 %44, 0
  br i1 %cmp95, label %if.end139, label %if.then97

if.then97:                                        ; preds = %if.end81
  %frame_cropping_rect_left_offset98 = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 44
  %45 = load i32* %frame_cropping_rect_left_offset98, align 4, !tbaa !3
  %frame_cropping_rect_right_offset99 = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 45
  %46 = load i32* %frame_cropping_rect_right_offset99, align 4, !tbaa !3
  %frame_mbs_only_flag100 = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 42
  %47 = load i32* %frame_mbs_only_flag100, align 4, !tbaa !3
  %sub101 = sub nsw i32 2, %47
  %frame_cropping_rect_top_offset102 = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 46
  %48 = load i32* %frame_cropping_rect_top_offset102, align 4, !tbaa !3
  %mul103 = mul nsw i32 %sub101, %48
  %frame_cropping_rect_bottom_offset106 = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 47
  %49 = load i32* %frame_cropping_rect_bottom_offset106, align 4, !tbaa !3
  %mul107 = mul nsw i32 %49, %sub101
  %imgUV108 = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 30
  %50 = load i16**** %imgUV108, align 8, !tbaa !0
  %51 = load i16*** %50, align 8, !tbaa !0
  %size_x_cr110 = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 20
  %52 = load i32* %size_x_cr110, align 4, !tbaa !3
  %size_y_cr111 = getelementptr inbounds %struct.storable_picture* %p, i64 0, i32 21
  %53 = load i32* %size_y_cr111, align 4, !tbaa !3
  tail call void @img2buf(i16** %51, i8* %call, i32 %52, i32 %53, i32 %div, i32 %45, i32 %46, i32 %mul103, i32 %mul107) #5
  %54 = load i32* %size_y_cr111, align 4, !tbaa !3
  %mul107249 = add i32 %49, %48
  %sum248 = mul i32 %sub101, %mul107249
  %sub114 = sub i32 %54, %sum248
  %55 = load i32* %size_x_cr110, align 4, !tbaa !3
  %sum250 = add i32 %46, %45
  %sub117 = sub i32 %55, %sum250
  %mul118 = mul i32 %sub114, %div
  %mul119 = mul i32 %mul118, %sub117
  %conv120 = sext i32 %mul119 to i64
  %call121 = tail call i64 @write(i32 %p_out, i8* %call, i64 %conv120) #6
  br i1 %5, label %if.end139, label %if.then123

if.then123:                                       ; preds = %if.then97
  %56 = load i16**** %imgUV108, align 8, !tbaa !0
  %arrayidx125 = getelementptr inbounds i16*** %56, i64 1
  %57 = load i16*** %arrayidx125, align 8, !tbaa !0
  %58 = load i32* %size_x_cr110, align 4, !tbaa !3
  %59 = load i32* %size_y_cr111, align 4, !tbaa !3
  tail call void @img2buf(i16** %57, i8* %call, i32 %58, i32 %59, i32 %div, i32 %45, i32 %46, i32 %mul103, i32 %mul107) #5
  %60 = load i32* %size_y_cr111, align 4, !tbaa !3
  %sub130 = sub i32 %60, %sum248
  %61 = load i32* %size_x_cr110, align 4, !tbaa !3
  %sub133 = sub i32 %61, %sum250
  %mul134 = mul i32 %sub130, %div
  %mul135 = mul i32 %mul134, %sub133
  %conv136 = sext i32 %mul135 to i64
  %call137 = tail call i64 @write(i32 %p_out, i8* %call, i64 %conv136) #6
  br label %if.end139

if.end139:                                        ; preds = %if.end81, %if.then97, %if.then123
  tail call void @free(i8* %call) #6
  br label %return

return:                                           ; preds = %land.end, %if.end139
  ret void
}
