define i32 @get_mem2Dpel(i16*** nocapture %array2D, i32 %rows, i32 %columns) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i16*** %array2D}, i64 0, metadata !36), !dbg !790
  tail call void @llvm.dbg.value(metadata !{i32 %rows}, i64 0, metadata !37), !dbg !790
  tail call void @llvm.dbg.value(metadata !{i32 %columns}, i64 0, metadata !38), !dbg !790
  %conv = sext i32 %rows to i64, !dbg !791
  %call = tail call noalias i8* @calloc(i64 %conv, i64 8) #4, !dbg !791
  %0 = bitcast i8* %call to i16**, !dbg !791
  store i16** %0, i16*** %array2D, align 8, !dbg !791, !tbaa !760
  %cmp = icmp eq i8* %call, null, !dbg !791
  br i1 %cmp, label %if.then, label %if.end, !dbg !791

if.then:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata !792, i64 0, metadata !793) #5, !dbg !795
  %call.i = tail call i32 (i8*, i64, i8*, ...)* @snprintf(i8* getelementptr inbounds ([300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([30 x i8]* @.str20, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8]* @.str2, i64 0, i64 0)) #4, !dbg !796
  tail call void @error(i8* getelementptr inbounds ([300 x i8]* @errortext, i64 0, i64 0), i32 100) #4, !dbg !797
  %.pre = load i16*** %array2D, align 8, !dbg !798, !tbaa !760
  br label %if.end, !dbg !794

if.end:                                           ; preds = %if.then, %entry
  %1 = phi i16** [ %.pre, %if.then ], [ %0, %entry ]
  %mul = mul nsw i32 %columns, %rows, !dbg !798
  %conv2 = sext i32 %mul to i64, !dbg !798
  %call3 = tail call noalias i8* @calloc(i64 %conv2, i64 2) #4, !dbg !798
  %2 = bitcast i8* %call3 to i16*, !dbg !798
  store i16* %2, i16** %1, align 8, !dbg !798, !tbaa !760
  %cmp4 = icmp eq i8* %call3, null, !dbg !798
  br i1 %cmp4, label %if.then6, label %for.cond.preheader, !dbg !798

if.then6:                                         ; preds = %if.end
  tail call void @llvm.dbg.value(metadata !792, i64 0, metadata !799) #5, !dbg !801
  %call.i28 = tail call i32 (i8*, i64, i8*, ...)* @snprintf(i8* getelementptr inbounds ([300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([30 x i8]* @.str20, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8]* @.str2, i64 0, i64 0)) #4, !dbg !802
  tail call void @error(i8* getelementptr inbounds ([300 x i8]* @errortext, i64 0, i64 0), i32 100) #4, !dbg !803
  br label %for.cond.preheader, !dbg !800

for.cond.preheader:                               ; preds = %if.then6, %if.end
  %cmp829 = icmp sgt i32 %rows, 1, !dbg !804
  br i1 %cmp829, label %for.body.lr.ph, label %for.end, !dbg !804

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %idx.ext = sext i32 %columns to i64, !dbg !806
  br label %for.body, !dbg !804

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %3 = add nsw i64 %indvars.iv, -1, !dbg !806
  %4 = load i16*** %array2D, align 8, !dbg !806, !tbaa !760
  %arrayidx10 = getelementptr inbounds i16** %4, i64 %3, !dbg !806
  %5 = load i16** %arrayidx10, align 8, !dbg !806, !tbaa !760
  %add.ptr = getelementptr inbounds i16* %5, i64 %idx.ext, !dbg !806
  %arrayidx12 = getelementptr inbounds i16** %4, i64 %indvars.iv, !dbg !806
  store i16* %add.ptr, i16** %arrayidx12, align 8, !dbg !806, !tbaa !760
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !804
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !804
  %exitcond = icmp eq i32 %lftr.wideiv, %rows, !dbg !804
  br i1 %exitcond, label %for.end, label %for.body, !dbg !804

for.end:                                          ; preds = %for.body, %for.cond.preheader
  %mul15 = shl i32 %mul, 1, !dbg !807
  ret i32 %mul15, !dbg !807
}
