define void @free_mem4Dint(i32**** %array4D, i32 %idx, i32 %frames) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32**** %array4D}, i64 0, metadata !181), !dbg !1014
  tail call void @llvm.dbg.value(metadata !{i32 %idx}, i64 0, metadata !182), !dbg !1014
  tail call void @llvm.dbg.value(metadata !{i32 %frames}, i64 0, metadata !183), !dbg !1014
  %tobool = icmp eq i32**** %array4D, null, !dbg !1015
  br i1 %tobool, label %if.else, label %for.cond.preheader, !dbg !1015

for.cond.preheader:                               ; preds = %entry
  %cmp5 = icmp sgt i32 %idx, 0, !dbg !1016
  br i1 %cmp5, label %for.body, label %for.end, !dbg !1016

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %arrayidx = getelementptr inbounds i32**** %array4D, i64 %indvars.iv, !dbg !1019
  %0 = load i32**** %arrayidx, align 8, !dbg !1019, !tbaa !760
  tail call void @free_mem3Dint(i32*** %0, i32 %frames) #6, !dbg !1019
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1016
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !1016
  %exitcond = icmp eq i32 %lftr.wideiv, %idx, !dbg !1016
  br i1 %exitcond, label %for.end, label %for.body, !dbg !1016

for.end:                                          ; preds = %for.body, %for.cond.preheader
  %1 = bitcast i32**** %array4D to i8*, !dbg !1020
  tail call void @free(i8* %1) #4, !dbg !1020
  br label %if.end, !dbg !1021

if.else:                                          ; preds = %entry
  tail call void @error(i8* getelementptr inbounds ([44 x i8]* @.str19, i64 0, i64 0), i32 100) #4, !dbg !1022
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  ret void, !dbg !1024
}
