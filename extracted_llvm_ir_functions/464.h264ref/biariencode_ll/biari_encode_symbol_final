define void @biari_encode_symbol_final(%struct.EncodingEnvironment* %eep, i16 signext %symbol) #0 {
  tail call void @llvm.dbg.value(metadata %struct.EncodingEnvironment* %eep, i64 0, metadata !101, metadata !634), !dbg !960
  tail call void @llvm.dbg.value(metadata i16 %symbol, i64 0, metadata !102, metadata !634), !dbg !961
  %1 = getelementptr inbounds %struct.EncodingEnvironment* %eep, i64 0, i32 1, !dbg !962
  %2 = load i32* %1, align 4, !dbg !962, !tbaa !680
  %3 = add i32 %2, -2, !dbg !963
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !103, metadata !634), !dbg !964
  %4 = getelementptr inbounds %struct.EncodingEnvironment* %eep, i64 0, i32 0, !dbg !965
  %5 = load i32* %4, align 4, !dbg !965, !tbaa !657
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !104, metadata !634), !dbg !966
  %6 = icmp eq i16 %symbol, 0, !dbg !967
  tail call void @llvm.dbg.value(metadata i32 2, i64 0, metadata !103, metadata !634), !dbg !964
  %7 = select i1 %6, i32 0, i32 %3, !dbg !969
  %.1 = add i32 %7, %5, !dbg !969
  %. = select i1 %6, i32 %3, i32 2
  %8 = icmp ult i32 %., 256, !dbg !970
  br i1 %8, label %.lr.ph27, label %._crit_edge39, !dbg !971

._crit_edge39:                                    ; preds = %0
  %.pre40 = getelementptr inbounds %struct.EncodingEnvironment* %eep, i64 0, i32 14, !dbg !972
  br label %select.unfold._crit_edge, !dbg !971

.lr.ph27:                                         ; preds = %0
  %9 = getelementptr inbounds %struct.EncodingEnvironment* %eep, i64 0, i32 2, !dbg !973
  %10 = getelementptr inbounds %struct.EncodingEnvironment* %eep, i64 0, i32 3, !dbg !979
  %11 = getelementptr inbounds %struct.EncodingEnvironment* %eep, i64 0, i32 6, !dbg !981
  %12 = getelementptr inbounds %struct.EncodingEnvironment* %eep, i64 0, i32 5, !dbg !981
  %13 = getelementptr inbounds %struct.EncodingEnvironment* %eep, i64 0, i32 14, !dbg !981
  %14 = getelementptr inbounds %struct.EncodingEnvironment* %eep, i64 0, i32 16, !dbg !983
  %15 = getelementptr inbounds %struct.EncodingEnvironment* %eep, i64 0, i32 4, !dbg !985
  br label %16, !dbg !971

; <label>:16                                      ; preds = %.lr.ph27, %select.unfold
  %low.025 = phi i32 [ %.1, %.lr.ph27 ], [ %129, %select.unfold ]
  %range.024 = phi i32 [ %., %.lr.ph27 ], [ %130, %select.unfold ]
  %17 = icmp ugt i32 %low.025, 511, !dbg !986
  br i1 %17, label %18, label %71, !dbg !987

; <label>:18                                      ; preds = %16
  %19 = load i32* %9, align 4, !dbg !973, !tbaa !668
  %20 = shl i32 %19, 1, !dbg !973
  %21 = or i32 %20, 1, !dbg !973
  store i32 %21, i32* %9, align 4, !dbg !973, !tbaa !668
  %22 = load i32* %10, align 4, !dbg !979, !tbaa !671
  %23 = add i32 %22, -1, !dbg !979
  store i32 %23, i32* %10, align 4, !dbg !979, !tbaa !671
  %24 = icmp eq i32 %23, 0, !dbg !979
  br i1 %24, label %28, label %.preheader, !dbg !973

.preheader:                                       ; preds = %28, %.lr.ph13, %18
  %25 = phi i32 [ %23, %18 ], [ 8, %.lr.ph13 ], [ 8, %28 ]
  %26 = load i32* %15, align 4, !dbg !985, !tbaa !665
  %27 = icmp eq i32 %26, 0, !dbg !985
  br i1 %27, label %._crit_edge, label %.lr.ph23, !dbg !985

; <label>:28                                      ; preds = %18
  %29 = trunc i32 %21 to i8, !dbg !981
  %30 = load i32** %11, align 8, !dbg !981, !tbaa !677
  %31 = load i32* %30, align 4, !dbg !981, !tbaa !685
  %32 = add nsw i32 %31, 1, !dbg !981
  store i32 %32, i32* %30, align 4, !dbg !981, !tbaa !685
  %33 = sext i32 %31 to i64, !dbg !981
  %34 = load i8** %12, align 8, !dbg !981, !tbaa !674
  %35 = getelementptr inbounds i8* %34, i64 %33, !dbg !981
  store i8 %29, i8* %35, align 1, !dbg !981, !tbaa !719
  store i32 8, i32* %10, align 4, !dbg !981, !tbaa !671
  %36 = load i32* %13, align 4, !dbg !981, !tbaa !683
  %37 = icmp sgt i32 %36, 7, !dbg !981
  br i1 %37, label %.lr.ph13, label %.preheader, !dbg !981

.lr.ph13:                                         ; preds = %28
  %.promoted16 = load i32* %14, align 4, !dbg !983, !tbaa !691
  %38 = add i32 %36, -8, !dbg !981
  %39 = lshr i32 %38, 3, !dbg !981
  %40 = shl nuw i32 %39, 3, !dbg !981
  %41 = add i32 %.promoted16, 1, !dbg !981
  %42 = add i32 %41, %39, !dbg !981
  %43 = sub i32 %38, %40, !dbg !981
  store i32 %43, i32* %13, align 4, !dbg !983, !tbaa !683
  store i32 %42, i32* %14, align 4, !dbg !983, !tbaa !691
  br label %.preheader, !dbg !981

.loopexit:                                        ; preds = %.lr.ph18, %54
  %.pre38 = load i32* %15, align 4, !dbg !985, !tbaa !665
  br label %.backedge

.lr.ph23:                                         ; preds = %.preheader, %.backedge
  %44 = phi i32 [ %52, %.backedge ], [ %25, %.preheader ], !dbg !988
  %45 = phi i32 [ %51, %.backedge ], [ %26, %.preheader ]
  %46 = add i32 %45, -1, !dbg !988
  store i32 %46, i32* %15, align 4, !dbg !988, !tbaa !665
  %47 = load i32* %9, align 4, !dbg !990, !tbaa !668
  %48 = shl i32 %47, 1, !dbg !990
  store i32 %48, i32* %9, align 4, !dbg !990, !tbaa !668
  %49 = add i32 %44, -1, !dbg !992
  store i32 %49, i32* %10, align 4, !dbg !992, !tbaa !671
  %50 = icmp eq i32 %49, 0, !dbg !992
  br i1 %50, label %54, label %.backedge, !dbg !990

.backedge:                                        ; preds = %.lr.ph23, %.loopexit
  %51 = phi i32 [ %46, %.lr.ph23 ], [ %.pre38, %.loopexit ]
  %52 = phi i32 [ %49, %.lr.ph23 ], [ 8, %.loopexit ]
  %53 = icmp eq i32 %51, 0, !dbg !985
  br i1 %53, label %._crit_edge, label %.lr.ph23, !dbg !985

; <label>:54                                      ; preds = %.lr.ph23
  %55 = trunc i32 %48 to i8, !dbg !994
  %56 = load i32** %11, align 8, !dbg !994, !tbaa !677
  %57 = load i32* %56, align 4, !dbg !994, !tbaa !685
  %58 = add nsw i32 %57, 1, !dbg !994
  store i32 %58, i32* %56, align 4, !dbg !994, !tbaa !685
  %59 = sext i32 %57 to i64, !dbg !994
  %60 = load i8** %12, align 8, !dbg !994, !tbaa !674
  %61 = getelementptr inbounds i8* %60, i64 %59, !dbg !994
  store i8 %55, i8* %61, align 1, !dbg !994, !tbaa !719
  store i32 8, i32* %10, align 4, !dbg !994, !tbaa !671
  %62 = load i32* %13, align 4, !dbg !994, !tbaa !683
  %63 = icmp sgt i32 %62, 7, !dbg !994
  br i1 %63, label %.lr.ph18, label %.loopexit, !dbg !994

.lr.ph18:                                         ; preds = %54
  %.promoted21 = load i32* %14, align 4, !dbg !996, !tbaa !691
  %64 = add i32 %62, -8, !dbg !994
  %65 = lshr i32 %64, 3, !dbg !994
  %66 = shl nuw i32 %65, 3, !dbg !994
  %67 = add i32 %.promoted21, 1, !dbg !994
  %68 = add i32 %67, %65, !dbg !994
  %69 = sub i32 %64, %66, !dbg !994
  store i32 %69, i32* %13, align 4, !dbg !996, !tbaa !683
  store i32 %68, i32* %14, align 4, !dbg !996, !tbaa !691
  br label %.loopexit, !dbg !994

._crit_edge:                                      ; preds = %.backedge, %.preheader
  %70 = add i32 %low.025, -512, !dbg !998
  tail call void @llvm.dbg.value(metadata i32 %70, i64 0, metadata !104, metadata !634), !dbg !966
  br label %select.unfold, !dbg !999

; <label>:71                                      ; preds = %16
  %72 = icmp ult i32 %low.025, 256, !dbg !1000
  br i1 %72, label %73, label %125, !dbg !1002

; <label>:73                                      ; preds = %71
  %74 = load i32* %9, align 4, !dbg !1003, !tbaa !668
  %75 = shl i32 %74, 1, !dbg !1003
  store i32 %75, i32* %9, align 4, !dbg !1003, !tbaa !668
  %76 = load i32* %10, align 4, !dbg !1007, !tbaa !671
  %77 = add i32 %76, -1, !dbg !1007
  store i32 %77, i32* %10, align 4, !dbg !1007, !tbaa !671
  %78 = icmp eq i32 %77, 0, !dbg !1007
  br i1 %78, label %82, label %.preheader3, !dbg !1003

.preheader3:                                      ; preds = %82, %.lr.ph, %73
  %79 = phi i32 [ %77, %73 ], [ 8, %.lr.ph ], [ 8, %82 ]
  %80 = load i32* %15, align 4, !dbg !1009, !tbaa !665
  %81 = icmp eq i32 %80, 0, !dbg !1009
  br i1 %81, label %select.unfold, label %.lr.ph12, !dbg !1009

; <label>:82                                      ; preds = %73
  %83 = trunc i32 %75 to i8, !dbg !1010
  %84 = load i32** %11, align 8, !dbg !1010, !tbaa !677
  %85 = load i32* %84, align 4, !dbg !1010, !tbaa !685
  %86 = add nsw i32 %85, 1, !dbg !1010
  store i32 %86, i32* %84, align 4, !dbg !1010, !tbaa !685
  %87 = sext i32 %85 to i64, !dbg !1010
  %88 = load i8** %12, align 8, !dbg !1010, !tbaa !674
  %89 = getelementptr inbounds i8* %88, i64 %87, !dbg !1010
  store i8 %83, i8* %89, align 1, !dbg !1010, !tbaa !719
  store i32 8, i32* %10, align 4, !dbg !1010, !tbaa !671
  %90 = load i32* %13, align 4, !dbg !1010, !tbaa !683
  %91 = icmp sgt i32 %90, 7, !dbg !1010
  br i1 %91, label %.lr.ph, label %.preheader3, !dbg !1010

.lr.ph:                                           ; preds = %82
  %.promoted = load i32* %14, align 4, !dbg !1012, !tbaa !691
  %92 = add i32 %90, -8, !dbg !1010
  %93 = lshr i32 %92, 3, !dbg !1010
  %94 = shl nuw i32 %93, 3, !dbg !1010
  %95 = add i32 %.promoted, 1, !dbg !1010
  %96 = add i32 %95, %93, !dbg !1010
  %97 = sub i32 %92, %94, !dbg !1010
  store i32 %97, i32* %13, align 4, !dbg !1012, !tbaa !683
  store i32 %96, i32* %14, align 4, !dbg !1012, !tbaa !691
  br label %.preheader3, !dbg !1010

.loopexit2:                                       ; preds = %.lr.ph7, %109
  %.pre = load i32* %15, align 4, !dbg !1009, !tbaa !665
  br label %.backedge5

.lr.ph12:                                         ; preds = %.preheader3, %.backedge5
  %98 = phi i32 [ %107, %.backedge5 ], [ %79, %.preheader3 ], !dbg !1014
  %99 = phi i32 [ %106, %.backedge5 ], [ %80, %.preheader3 ]
  %100 = add i32 %99, -1, !dbg !1014
  store i32 %100, i32* %15, align 4, !dbg !1014, !tbaa !665
  %101 = load i32* %9, align 4, !dbg !1016, !tbaa !668
  %102 = shl i32 %101, 1, !dbg !1016
  %103 = or i32 %102, 1, !dbg !1016
  store i32 %103, i32* %9, align 4, !dbg !1016, !tbaa !668
  %104 = add i32 %98, -1, !dbg !1018
  store i32 %104, i32* %10, align 4, !dbg !1018, !tbaa !671
  %105 = icmp eq i32 %104, 0, !dbg !1018
  br i1 %105, label %109, label %.backedge5, !dbg !1016

.backedge5:                                       ; preds = %.lr.ph12, %.loopexit2
  %106 = phi i32 [ %100, %.lr.ph12 ], [ %.pre, %.loopexit2 ]
  %107 = phi i32 [ %104, %.lr.ph12 ], [ 8, %.loopexit2 ]
  %108 = icmp eq i32 %106, 0, !dbg !1009
  br i1 %108, label %select.unfold, label %.lr.ph12, !dbg !1009

; <label>:109                                     ; preds = %.lr.ph12
  %110 = trunc i32 %103 to i8, !dbg !1020
  %111 = load i32** %11, align 8, !dbg !1020, !tbaa !677
  %112 = load i32* %111, align 4, !dbg !1020, !tbaa !685
  %113 = add nsw i32 %112, 1, !dbg !1020
  store i32 %113, i32* %111, align 4, !dbg !1020, !tbaa !685
  %114 = sext i32 %112 to i64, !dbg !1020
  %115 = load i8** %12, align 8, !dbg !1020, !tbaa !674
  %116 = getelementptr inbounds i8* %115, i64 %114, !dbg !1020
  store i8 %110, i8* %116, align 1, !dbg !1020, !tbaa !719
  store i32 8, i32* %10, align 4, !dbg !1020, !tbaa !671
  %117 = load i32* %13, align 4, !dbg !1020, !tbaa !683
  %118 = icmp sgt i32 %117, 7, !dbg !1020
  br i1 %118, label %.lr.ph7, label %.loopexit2, !dbg !1020

.lr.ph7:                                          ; preds = %109
  %.promoted10 = load i32* %14, align 4, !dbg !1022, !tbaa !691
  %119 = add i32 %117, -8, !dbg !1020
  %120 = lshr i32 %119, 3, !dbg !1020
  %121 = shl nuw i32 %120, 3, !dbg !1020
  %122 = add i32 %.promoted10, 1, !dbg !1020
  %123 = add i32 %122, %120, !dbg !1020
  %124 = sub i32 %119, %121, !dbg !1020
  store i32 %124, i32* %13, align 4, !dbg !1022, !tbaa !683
  store i32 %123, i32* %14, align 4, !dbg !1022, !tbaa !691
  br label %.loopexit2, !dbg !1020

; <label>:125                                     ; preds = %71
  %126 = load i32* %15, align 4, !dbg !1024, !tbaa !665
  %127 = add i32 %126, 1, !dbg !1024
  store i32 %127, i32* %15, align 4, !dbg !1024, !tbaa !665
  %128 = add i32 %low.025, -256, !dbg !1026
  tail call void @llvm.dbg.value(metadata i32 %128, i64 0, metadata !104, metadata !634), !dbg !966
  br label %select.unfold

select.unfold:                                    ; preds = %.backedge5, %.preheader3, %125, %._crit_edge
  %low.1 = phi i32 [ %70, %._crit_edge ], [ %128, %125 ], [ %low.025, %.preheader3 ], [ %low.025, %.backedge5 ]
  %129 = shl i32 %low.1, 1, !dbg !1027
  tail call void @llvm.dbg.value(metadata i32 %129, i64 0, metadata !104, metadata !634), !dbg !966
  %130 = shl i32 %range.024, 1, !dbg !1028
  tail call void @llvm.dbg.value(metadata i32 %130, i64 0, metadata !103, metadata !634), !dbg !964
  %131 = icmp ult i32 %130, 256, !dbg !970
  br i1 %131, label %16, label %select.unfold._crit_edge, !dbg !971

select.unfold._crit_edge:                         ; preds = %select.unfold, %._crit_edge39
  %.pre-phi = phi i32* [ %.pre40, %._crit_edge39 ], [ %13, %select.unfold ], !dbg !972
  %low.0.lcssa = phi i32 [ %.1, %._crit_edge39 ], [ %129, %select.unfold ]
  %range.0.lcssa = phi i32 [ %3, %._crit_edge39 ], [ %130, %select.unfold ]
  store i32 %range.0.lcssa, i32* %1, align 4, !dbg !1029, !tbaa !680
  store i32 %low.0.lcssa, i32* %4, align 4, !dbg !1030, !tbaa !657
  %132 = load i32* %.pre-phi, align 4, !dbg !1031, !tbaa !683
  %133 = add nsw i32 %132, 1, !dbg !1031
  store i32 %133, i32* %.pre-phi, align 4, !dbg !1031, !tbaa !683
  ret void, !dbg !1032
}
