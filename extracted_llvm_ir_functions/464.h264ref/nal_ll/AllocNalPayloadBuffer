define void @AllocNalPayloadBuffer() #0 {
entry:
  %0 = load %struct.InputParameters** @input, align 8, !tbaa !3
  %img_width = getelementptr inbounds %struct.InputParameters* %0, i64 0, i32 16
  %1 = load i32* %img_width, align 4, !tbaa !2
  %2 = load %struct.ImageParameters** @img, align 8, !tbaa !3
  %auto_crop_right = getelementptr inbounds %struct.ImageParameters* %2, i64 0, i32 165
  %3 = load i32* %auto_crop_right, align 4, !tbaa !2
  %add = add nsw i32 %3, %1
  %img_height = getelementptr inbounds %struct.InputParameters* %0, i64 0, i32 17
  %4 = load i32* %img_height, align 4, !tbaa !2
  %auto_crop_bottom = getelementptr inbounds %struct.ImageParameters* %2, i64 0, i32 166
  %5 = load i32* %auto_crop_bottom, align 4, !tbaa !2
  %add1 = add nsw i32 %5, %4
  %mul = shl i32 %add, 2
  %mul2 = mul i32 %mul, %add1
  %6 = load i8** @NAL_Payload_buffer, align 8, !tbaa !3
  %tobool.i = icmp eq i8* %6, null
  br i1 %tobool.i, label %FreeNalPayloadBuffer.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  tail call void @free(i8* %6) #2
  store i8* null, i8** @NAL_Payload_buffer, align 8, !tbaa !3
  br label %FreeNalPayloadBuffer.exit

FreeNalPayloadBuffer.exit:                        ; preds = %entry, %if.then.i
  %conv = sext i32 %mul2 to i64
  %call = tail call noalias i8* @calloc(i64 %conv, i64 1) #2
  store i8* %call, i8** @NAL_Payload_buffer, align 8, !tbaa !3
  ret void
}
