define i32 @mb_is_available(i32 %mbAddr, i32 %currMbAddr) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %mbAddr}, i64 0, metadata !16), !dbg !689
  tail call void @llvm.dbg.value(metadata !{i32 %currMbAddr}, i64 0, metadata !17), !dbg !689
  %cmp = icmp slt i32 %mbAddr, 0, !dbg !690
  br i1 %cmp, label %return, label %lor.lhs.false, !dbg !690

lor.lhs.false:                                    ; preds = %entry
  %0 = load %struct.ImageParameters** @img, align 8, !dbg !690, !tbaa !691
  %PicSizeInMbs = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 110, !dbg !690
  %1 = load i32* %PicSizeInMbs, align 4, !dbg !690, !tbaa !694
  %cmp1 = icmp sgt i32 %1, %mbAddr, !dbg !690
  br i1 %cmp1, label %if.end, label %return, !dbg !690

if.end:                                           ; preds = %lor.lhs.false
  %DeblockCall = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 143, !dbg !695
  %2 = load i32* %DeblockCall, align 4, !dbg !695, !tbaa !694
  %tobool = icmp eq i32 %2, 0, !dbg !695
  br i1 %tobool, label %if.then2, label %if.end10, !dbg !695

if.then2:                                         ; preds = %if.end
  %idxprom = sext i32 %mbAddr to i64, !dbg !696
  %mb_data = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 51, !dbg !696
  %3 = load %struct.macroblock** %mb_data, align 8, !dbg !696, !tbaa !691
  %slice_nr = getelementptr inbounds %struct.macroblock* %3, i64 %idxprom, i32 1, !dbg !696
  %4 = load i32* %slice_nr, align 4, !dbg !696, !tbaa !694
  %idxprom3 = sext i32 %currMbAddr to i64, !dbg !696
  %slice_nr6 = getelementptr inbounds %struct.macroblock* %3, i64 %idxprom3, i32 1, !dbg !696
  %5 = load i32* %slice_nr6, align 4, !dbg !696, !tbaa !694
  %cmp7 = icmp eq i32 %4, %5, !dbg !696
  br i1 %cmp7, label %if.end10, label %return, !dbg !696

if.end10:                                         ; preds = %if.then2, %if.end
  br label %return, !dbg !698

return:                                           ; preds = %if.then2, %entry, %lor.lhs.false, %if.end10
  %retval.0 = phi i32 [ 1, %if.end10 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 0, %if.then2 ]
  ret i32 %retval.0, !dbg !698
}
