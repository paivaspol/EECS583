define void @poc_ref_pic_reorder(%struct.storable_picture** nocapture readonly %list, i32 %num_ref_idx_lX_active, i32* nocapture %remapping_of_pic_nums_idc, i32* nocapture %abs_diff_pic_num_minus1, i32* nocapture readnone %long_term_pic_idx, i32 %weighted_prediction, i32 %list_no) #0 {
  %default_order = alloca [32 x i32], align 16
  %1 = bitcast [32 x i32]* %default_order to i8*
  %re_order = alloca [32 x i32], align 16
  %tmp_reorder = alloca [32 x i32], align 16
  %2 = bitcast [32 x i32]* %tmp_reorder to i8*
  %list_sign = alloca [32 x i32], align 16
  %poc_diff = alloca [32 x i32], align 16
  tail call void @llvm.dbg.value(metadata %struct.storable_picture** %list, i64 0, metadata !362, metadata !785), !dbg !1801
  tail call void @llvm.dbg.value(metadata i32 %num_ref_idx_lX_active, i64 0, metadata !363, metadata !785), !dbg !1802
  tail call void @llvm.dbg.value(metadata i32* %remapping_of_pic_nums_idc, i64 0, metadata !364, metadata !785), !dbg !1803
  tail call void @llvm.dbg.value(metadata i32* %abs_diff_pic_num_minus1, i64 0, metadata !365, metadata !785), !dbg !1804
  tail call void @llvm.dbg.value(metadata i32* %long_term_pic_idx, i64 0, metadata !366, metadata !785), !dbg !1805
  tail call void @llvm.dbg.value(metadata i32 %weighted_prediction, i64 0, metadata !367, metadata !785), !dbg !1806
  tail call void @llvm.dbg.value(metadata i32 %list_no, i64 0, metadata !368, metadata !785), !dbg !1807
  call void @llvm.lifetime.start(i64 128, i8* %1) #3, !dbg !1808
  tail call void @llvm.dbg.declare(metadata [32 x i32]* %default_order, metadata !374, metadata !785), !dbg !1809
  %3 = bitcast [32 x i32]* %re_order to i8*, !dbg !1810
  call void @llvm.lifetime.start(i64 128, i8* %3) #3, !dbg !1810
  tail call void @llvm.dbg.declare(metadata [32 x i32]* %re_order, metadata !378, metadata !785), !dbg !1811
  call void @llvm.lifetime.start(i64 128, i8* %2) #3, !dbg !1812
  tail call void @llvm.dbg.declare(metadata [32 x i32]* %tmp_reorder, metadata !379, metadata !785), !dbg !1813
  %4 = bitcast [32 x i32]* %list_sign to i8*, !dbg !1814
  call void @llvm.lifetime.start(i64 128, i8* %4) #3, !dbg !1814
  tail call void @llvm.dbg.declare(metadata [32 x i32]* %list_sign, metadata !380, metadata !785), !dbg !1815
  %5 = bitcast [32 x i32]* %poc_diff to i8*, !dbg !1816
  call void @llvm.lifetime.start(i64 128, i8* %5) #3, !dbg !1816
  tail call void @llvm.dbg.declare(metadata [32 x i32]* %poc_diff, metadata !383, metadata !785), !dbg !1817
  %6 = load i32* @log2_max_frame_num_minus4, align 4, !dbg !1818, !tbaa !914
  %7 = add i32 %6, 4, !dbg !1819
  %8 = shl i32 1, %7, !dbg !1820
  tail call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !388, metadata !785), !dbg !1821
  %9 = load %struct.ImageParameters** @img, align 8, !dbg !1822, !tbaa !775
  %10 = getelementptr inbounds %struct.ImageParameters* %9, i64 0, i32 7, !dbg !1824
  %11 = load i32* %10, align 4, !dbg !1824, !tbaa !1126
  %12 = icmp eq i32 %11, 0, !dbg !1825
  %13 = getelementptr inbounds %struct.ImageParameters* %9, i64 0, i32 105
  %14 = load i32* %13, align 4
  br i1 %12, label %19, label %15, !dbg !1826

; <label>:15                                      ; preds = %0
  %16 = shl nsw i32 %8, 1, !dbg !1827
  tail call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !387, metadata !785), !dbg !1829
  %17 = shl i32 %14, 1, !dbg !1830
  %18 = or i32 %17, 1, !dbg !1831
  tail call void @llvm.dbg.value(metadata i32 %18, i64 0, metadata !372, metadata !785), !dbg !1832
  br label %19

; <label>:19                                      ; preds = %0, %15
  %currPicNum.0 = phi i32 [ %18, %15 ], [ %14, %0 ]
  %maxPicNum.0 = phi i32 [ %16, %15 ], [ %8, %0 ]
  tail call void @llvm.dbg.value(metadata i32 %currPicNum.0, i64 0, metadata !373, metadata !785), !dbg !1833
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !369, metadata !785), !dbg !1834
  %20 = icmp eq i32 %num_ref_idx_lX_active, 0, !dbg !1835
  br i1 %20, label %.preheader10, label %.lr.ph43, !dbg !1838

.lr.ph43:                                         ; preds = %19
  %21 = add i32 %num_ref_idx_lX_active, -1, !dbg !1838
  br label %29, !dbg !1838

.preheader10:                                     ; preds = %29, %19
  %22 = load i32* getelementptr inbounds (%struct.decoded_picture_buffer* @dpb, i64 0, i32 5), align 8, !dbg !1839, !tbaa !1842
  %23 = icmp eq i32 %22, 0, !dbg !1843
  br i1 %23, label %.lr.ph38, label %.lr.ph40, !dbg !1844

.lr.ph40:                                         ; preds = %.preheader10
  %24 = load %struct.frame_store*** getelementptr inbounds (%struct.decoded_picture_buffer* @dpb, i64 0, i32 1), align 8, !dbg !1845, !tbaa !1847
  %25 = load %struct.storable_picture** @enc_picture, align 8, !dbg !1848, !tbaa !775
  %26 = getelementptr inbounds %struct.storable_picture* %25, i64 0, i32 1, !dbg !1851
  %27 = icmp eq i32 %list_no, 0, !dbg !1852
  %28 = zext i32 %22 to i64, !dbg !1844
  br label %39, !dbg !1844

; <label>:29                                      ; preds = %29, %.lr.ph43
  %indvars.iv66 = phi i64 [ 0, %.lr.ph43 ], [ %indvars.iv.next67, %29 ]
  %30 = getelementptr inbounds %struct.storable_picture** %list, i64 %indvars.iv66, !dbg !1854
  %31 = load %struct.storable_picture** %30, align 8, !dbg !1854, !tbaa !775
  %32 = getelementptr inbounds %struct.storable_picture* %31, i64 0, i32 11, !dbg !1856
  %33 = load i32* %32, align 4, !dbg !1856, !tbaa !1857
  %34 = getelementptr inbounds [32 x i32]* %default_order, i64 0, i64 %indvars.iv66, !dbg !1858
  store i32 %33, i32* %34, align 4, !dbg !1859, !tbaa !914
  %indvars.iv.next67 = add nuw nsw i64 %indvars.iv66, 1, !dbg !1838
  %lftr.wideiv68 = trunc i64 %indvars.iv66 to i32, !dbg !1838
  %exitcond69 = icmp eq i32 %lftr.wideiv68, %21, !dbg !1838
  br i1 %exitcond69, label %.preheader10, label %29, !dbg !1838

.preheader9:                                      ; preds = %75
  %35 = icmp eq i32 %22, 1, !dbg !1860
  br i1 %35, label %.preheader7, label %.lr.ph38, !dbg !1863

.lr.ph38:                                         ; preds = %.preheader10, %.preheader9
  %36 = add i32 %22, -1, !dbg !1864
  %37 = zext i32 %22 to i64, !dbg !1863
  %38 = zext i32 %36 to i64, !dbg !1863
  br label %79, !dbg !1863

; <label>:39                                      ; preds = %.lr.ph40, %75
  %indvars.iv64 = phi i64 [ 0, %.lr.ph40 ], [ %indvars.iv.next65, %75 ]
  %40 = getelementptr inbounds %struct.frame_store** %24, i64 %indvars.iv64, !dbg !1865
  %41 = load %struct.frame_store** %40, align 8, !dbg !1865, !tbaa !775
  %42 = getelementptr inbounds %struct.frame_store* %41, i64 0, i32 10, !dbg !1866
  %43 = load %struct.storable_picture** %42, align 8, !dbg !1866, !tbaa !1867
  %44 = getelementptr inbounds %struct.storable_picture* %43, i64 0, i32 11, !dbg !1869
  %45 = load i32* %44, align 4, !dbg !1869, !tbaa !1857
  %46 = getelementptr inbounds [32 x i32]* %re_order, i64 0, i64 %indvars.iv64, !dbg !1870
  store i32 %45, i32* %46, align 4, !dbg !1871, !tbaa !914
  %47 = getelementptr inbounds %struct.frame_store* %41, i64 0, i32 0, !dbg !1872
  %48 = load i32* %47, align 4, !dbg !1872, !tbaa !1873
  %49 = icmp eq i32 %48, 3, !dbg !1874
  br i1 %49, label %50, label %75, !dbg !1875

; <label>:50                                      ; preds = %39
  %51 = getelementptr inbounds %struct.storable_picture* %43, i64 0, i32 15, !dbg !1876
  %52 = load i32* %51, align 4, !dbg !1876, !tbaa !1877
  %53 = icmp eq i32 %52, 0, !dbg !1878
  br i1 %53, label %75, label %54, !dbg !1879

; <label>:54                                      ; preds = %50
  %55 = getelementptr inbounds %struct.storable_picture* %43, i64 0, i32 14, !dbg !1880
  %56 = load i32* %55, align 4, !dbg !1880, !tbaa !1881
  %57 = icmp eq i32 %56, 0, !dbg !1882
  br i1 %57, label %58, label %75, !dbg !1883

; <label>:58                                      ; preds = %54
  %59 = getelementptr inbounds %struct.storable_picture* %43, i64 0, i32 1, !dbg !1884
  %60 = load i32* %59, align 4, !dbg !1884, !tbaa !1370
  %61 = load i32* %26, align 4, !dbg !1851, !tbaa !1370
  %62 = sub nsw i32 %60, %61, !dbg !1885
  %ispos3 = icmp sgt i32 %62, -1, !dbg !1886
  %neg4 = sub i32 0, %62, !dbg !1886
  %63 = select i1 %ispos3, i32 %62, i32 %neg4, !dbg !1886
  tail call void @llvm.dbg.value(metadata i32 %63, i64 0, metadata !386, metadata !785), !dbg !1887
  %64 = getelementptr inbounds [32 x i32]* %poc_diff, i64 0, i64 %indvars.iv64, !dbg !1888
  store i32 %63, i32* %64, align 4, !dbg !1889, !tbaa !914
  br i1 %27, label %65, label %70, !dbg !1890

; <label>:65                                      ; preds = %58
  %66 = icmp sgt i32 %60, %61, !dbg !1891
  %67 = getelementptr inbounds [32 x i32]* %list_sign, i64 0, i64 %indvars.iv64, !dbg !1894
  br i1 %66, label %68, label %69, !dbg !1896

; <label>:68                                      ; preds = %65
  store i32 1, i32* %67, align 4, !dbg !1897, !tbaa !914
  br label %75, !dbg !1898

; <label>:69                                      ; preds = %65
  store i32 -1, i32* %67, align 4, !dbg !1899, !tbaa !914
  br label %75

; <label>:70                                      ; preds = %58
  %71 = icmp slt i32 %60, %61, !dbg !1901
  %72 = getelementptr inbounds [32 x i32]* %list_sign, i64 0, i64 %indvars.iv64, !dbg !1904
  br i1 %71, label %73, label %74, !dbg !1906

; <label>:73                                      ; preds = %70
  store i32 1, i32* %72, align 4, !dbg !1907, !tbaa !914
  br label %75, !dbg !1908

; <label>:74                                      ; preds = %70
  store i32 -1, i32* %72, align 4, !dbg !1909, !tbaa !914
  br label %75

; <label>:75                                      ; preds = %54, %50, %39, %73, %74, %68, %69
  %indvars.iv.next65 = add nuw nsw i64 %indvars.iv64, 1, !dbg !1844
  %76 = icmp ult i64 %indvars.iv.next65, %28, !dbg !1843
  br i1 %76, label %39, label %.preheader9, !dbg !1844

.loopexit8:                                       ; preds = %102, %79
  %77 = icmp ult i64 %indvars.iv.next63, %38, !dbg !1860
  %indvars.iv.next57 = add nuw nsw i64 %indvars.iv56, 1, !dbg !1863
  br i1 %77, label %79, label %.preheader7, !dbg !1863

.preheader7:                                      ; preds = %.loopexit8, %.preheader9
  br i1 %20, label %.thread, label %.lr.ph31, !dbg !1911

.lr.ph31:                                         ; preds = %.preheader7
  %78 = add i32 %num_ref_idx_lX_active, -1, !dbg !1911
  br label %103, !dbg !1911

; <label>:79                                      ; preds = %.lr.ph38, %.loopexit8
  %indvars.iv62 = phi i64 [ 0, %.lr.ph38 ], [ %indvars.iv.next63, %.loopexit8 ]
  %indvars.iv56 = phi i64 [ 1, %.lr.ph38 ], [ %indvars.iv.next57, %.loopexit8 ]
  %indvars.iv.next63 = add nuw nsw i64 %indvars.iv62, 1, !dbg !1863
  %80 = icmp ult i64 %indvars.iv.next63, %37, !dbg !1913
  br i1 %80, label %.lr.ph36, label %.loopexit8, !dbg !1917

.lr.ph36:                                         ; preds = %79
  %81 = getelementptr inbounds [32 x i32]* %poc_diff, i64 0, i64 %indvars.iv62, !dbg !1918
  %82 = getelementptr inbounds [32 x i32]* %re_order, i64 0, i64 %indvars.iv62, !dbg !1921
  %83 = getelementptr inbounds [32 x i32]* %list_sign, i64 0, i64 %indvars.iv62, !dbg !1923
  br label %84, !dbg !1917

; <label>:84                                      ; preds = %102, %.lr.ph36
  %indvars.iv58 = phi i64 [ %indvars.iv56, %.lr.ph36 ], [ %indvars.iv.next59, %102 ]
  %85 = load i32* %81, align 4, !dbg !1918, !tbaa !914
  %86 = getelementptr inbounds [32 x i32]* %poc_diff, i64 0, i64 %indvars.iv58, !dbg !1924
  %87 = load i32* %86, align 4, !dbg !1924, !tbaa !914
  %88 = icmp sgt i32 %85, %87, !dbg !1925
  br i1 %88, label %._crit_edge, label %89, !dbg !1926

._crit_edge:                                      ; preds = %84
  %.pre = load i32* %83, align 4, !dbg !1923, !tbaa !914
  %.phi.trans.insert = getelementptr inbounds [32 x i32]* %list_sign, i64 0, i64 %indvars.iv58
  %.pre70 = load i32* %.phi.trans.insert, align 4, !dbg !1927, !tbaa !914
  br label %96, !dbg !1926

; <label>:89                                      ; preds = %84
  %90 = icmp eq i32 %85, %87, !dbg !1928
  br i1 %90, label %91, label %102, !dbg !1929

; <label>:91                                      ; preds = %89
  %92 = getelementptr inbounds [32 x i32]* %list_sign, i64 0, i64 %indvars.iv58, !dbg !1930
  %93 = load i32* %92, align 4, !dbg !1930, !tbaa !914
  %94 = load i32* %83, align 4, !dbg !1931, !tbaa !914
  %95 = icmp sgt i32 %93, %94, !dbg !1932
  br i1 %95, label %96, label %102, !dbg !1933

; <label>:96                                      ; preds = %._crit_edge, %91
  %.pre-phi = phi i32* [ %.phi.trans.insert, %._crit_edge ], [ %92, %91 ], !dbg !1927
  %97 = phi i32 [ %.pre70, %._crit_edge ], [ %93, %91 ]
  %98 = phi i32 [ %.pre, %._crit_edge ], [ %94, %91 ]
  tail call void @llvm.dbg.value(metadata i32 %85, i64 0, metadata !384, metadata !785), !dbg !1934
  store i32 %87, i32* %81, align 4, !dbg !1935, !tbaa !914
  store i32 %85, i32* %86, align 4, !dbg !1936, !tbaa !914
  %99 = load i32* %82, align 4, !dbg !1921, !tbaa !914
  tail call void @llvm.dbg.value(metadata i32 %99, i64 0, metadata !384, metadata !785), !dbg !1934
  %100 = getelementptr inbounds [32 x i32]* %re_order, i64 0, i64 %indvars.iv58, !dbg !1937
  %101 = load i32* %100, align 4, !dbg !1937, !tbaa !914
  store i32 %101, i32* %82, align 4, !dbg !1938, !tbaa !914
  store i32 %99, i32* %100, align 4, !dbg !1939, !tbaa !914
  tail call void @llvm.dbg.value(metadata i32 %98, i64 0, metadata !384, metadata !785), !dbg !1934
  store i32 %97, i32* %83, align 4, !dbg !1940, !tbaa !914
  store i32 %98, i32* %.pre-phi, align 4, !dbg !1941, !tbaa !914
  br label %102, !dbg !1942

; <label>:102                                     ; preds = %89, %91, %96
  %indvars.iv.next59 = add nuw nsw i64 %indvars.iv58, 1, !dbg !1917
  %lftr.wideiv60 = trunc i64 %indvars.iv58 to i32, !dbg !1917
  %exitcond61 = icmp eq i32 %lftr.wideiv60, %36, !dbg !1917
  br i1 %exitcond61, label %.loopexit8, label %84, !dbg !1917

; <label>:103                                     ; preds = %103, %.lr.ph31
  %indvars.iv = phi i64 [ 0, %.lr.ph31 ], [ %indvars.iv.next, %103 ]
  %no_reorder.029 = phi i32 [ 1, %.lr.ph31 ], [ %no_reorder.0., %103 ]
  %104 = getelementptr inbounds [32 x i32]* %default_order, i64 0, i64 %indvars.iv, !dbg !1943
  %105 = load i32* %104, align 4, !dbg !1943, !tbaa !914
  %106 = getelementptr inbounds [32 x i32]* %re_order, i64 0, i64 %indvars.iv, !dbg !1947
  %107 = load i32* %106, align 4, !dbg !1947, !tbaa !914
  %108 = icmp eq i32 %105, %107, !dbg !1948
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !382, metadata !785), !dbg !1949
  %no_reorder.0. = select i1 %108, i32 %no_reorder.029, i32 0, !dbg !1950
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1911
  %lftr.wideiv54 = trunc i64 %indvars.iv to i32, !dbg !1911
  %exitcond55 = icmp eq i32 %lftr.wideiv54, %78, !dbg !1911
  br i1 %exitcond55, label %109, label %103, !dbg !1911

; <label>:109                                     ; preds = %103
  %phitmp = icmp eq i32 %no_reorder.0., 0, !dbg !1911
  br i1 %phitmp, label %.preheader5, label %.thread, !dbg !1951

.preheader5:                                      ; preds = %109
  br i1 %20, label %.critedge.thread, label %.lr.ph27, !dbg !1952

.critedge.thread:                                 ; preds = %.preheader5
  store i32 3, i32* %remapping_of_pic_nums_idc, align 4, !dbg !1956, !tbaa !914
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !370, metadata !785), !dbg !1957
  br label %156, !dbg !1958

.lr.ph27:                                         ; preds = %.preheader5
  %110 = add i32 %num_ref_idx_lX_active, -1, !dbg !1952
  %111 = zext i32 %110 to i64
  %112 = shl nuw nsw i64 %111, 2, !dbg !1952
  %113 = add nuw nsw i64 %112, 4, !dbg !1952
  %114 = zext i32 %num_ref_idx_lX_active to i64, !dbg !1952
  br label %115, !dbg !1952

.loopexit:                                        ; preds = %143
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 %113, i32 16, i1 false), !dbg !1960
  br label %115, !dbg !1952

; <label>:115                                     ; preds = %.loopexit, %.lr.ph27
  %indvars.iv52 = phi i64 [ 0, %.lr.ph27 ], [ %indvars.iv.next53, %.loopexit ]
  %picNumLXPred.025 = phi i32 [ %currPicNum.0, %.lr.ph27 ], [ %117, %.loopexit ]
  %116 = getelementptr inbounds [32 x i32]* %re_order, i64 0, i64 %indvars.iv52, !dbg !1966
  %117 = load i32* %116, align 4, !dbg !1966, !tbaa !914
  %118 = sub nsw i32 %117, %picNumLXPred.025, !dbg !1967
  tail call void @llvm.dbg.value(metadata i32 %118, i64 0, metadata !385, metadata !785), !dbg !1968
  %119 = icmp slt i32 %118, 1, !dbg !1969
  %120 = getelementptr inbounds i32* %remapping_of_pic_nums_idc, i64 %indvars.iv52, !dbg !1971
  br i1 %119, label %121, label %125, !dbg !1973

; <label>:121                                     ; preds = %115
  store i32 0, i32* %120, align 4, !dbg !1974, !tbaa !914
  %ispos1 = icmp sgt i32 %118, -1, !dbg !1975
  %neg2 = sub i32 0, %118, !dbg !1975
  %122 = select i1 %ispos1, i32 %118, i32 %neg2, !dbg !1975
  %123 = getelementptr inbounds i32* %abs_diff_pic_num_minus1, i64 %indvars.iv52, !dbg !1976
  %124 = icmp slt i32 %122, 1, !dbg !1977
  %..v = select i1 %124, i32 %maxPicNum.0, i32 %122, !dbg !1979
  %. = add i32 %..v, -1, !dbg !1979
  store i32 %., i32* %123, align 4, !dbg !1980, !tbaa !914
  br label %.lr.ph16, !dbg !1979

; <label>:125                                     ; preds = %115
  store i32 1, i32* %120, align 4, !dbg !1981, !tbaa !914
  %126 = add nsw i32 %118, -1, !dbg !1983
  %127 = getelementptr inbounds i32* %abs_diff_pic_num_minus1, i64 %indvars.iv52, !dbg !1984
  store i32 %126, i32* %127, align 4, !dbg !1985, !tbaa !914
  br label %.lr.ph16

.lr.ph16:                                         ; preds = %121, %125
  tail call void @llvm.dbg.value(metadata i32 %117, i64 0, metadata !373, metadata !785), !dbg !1833
  %128 = getelementptr inbounds [32 x i32]* %tmp_reorder, i64 0, i64 %indvars.iv52, !dbg !1986
  store i32 %117, i32* %128, align 4, !dbg !1987, !tbaa !914
  %129 = trunc i64 %indvars.iv52 to i32, !dbg !1988
  br label %130, !dbg !1988

; <label>:130                                     ; preds = %138, %.lr.ph16
  %indvars.iv46 = phi i64 [ %indvars.iv52, %.lr.ph16 ], [ %indvars.iv.next47, %138 ]
  %k.013 = phi i32 [ %129, %.lr.ph16 ], [ %k.1, %138 ]
  %131 = getelementptr inbounds [32 x i32]* %default_order, i64 0, i64 %indvars.iv46, !dbg !1990
  %132 = load i32* %131, align 4, !dbg !1990, !tbaa !914
  %133 = icmp eq i32 %132, %117, !dbg !1994
  br i1 %133, label %138, label %134, !dbg !1995

; <label>:134                                     ; preds = %130
  %135 = add i32 %k.013, 1, !dbg !1996
  tail call void @llvm.dbg.value(metadata i32 %135, i64 0, metadata !371, metadata !785), !dbg !1998
  %136 = zext i32 %135 to i64, !dbg !1999
  %137 = getelementptr inbounds [32 x i32]* %tmp_reorder, i64 0, i64 %136, !dbg !1999
  store i32 %132, i32* %137, align 4, !dbg !2000, !tbaa !914
  br label %138, !dbg !2001

; <label>:138                                     ; preds = %130, %134
  %k.1 = phi i32 [ %135, %134 ], [ %k.013, %130 ]
  %indvars.iv.next47 = add nuw nsw i64 %indvars.iv46, 1, !dbg !1988
  %lftr.wideiv = trunc i64 %indvars.iv46 to i32, !dbg !1988
  %exitcond = icmp eq i32 %lftr.wideiv, %110, !dbg !1988
  br i1 %exitcond, label %._crit_edge17, label %130, !dbg !1988

._crit_edge17:                                    ; preds = %138
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !381, metadata !785), !dbg !2002
  %indvars.iv.next53 = add nuw nsw i64 %indvars.iv52, 1, !dbg !1952
  %139 = icmp ult i64 %indvars.iv.next53, %114, !dbg !2003
  br i1 %139, label %.lr.ph20, label %.critedge, !dbg !2006

.lr.ph20:                                         ; preds = %._crit_edge17
  %140 = trunc i64 %indvars.iv.next53 to i32, !dbg !2006
  br label %143, !dbg !2006

; <label>:141                                     ; preds = %143
  %142 = icmp ult i32 %150, %num_ref_idx_lX_active, !dbg !2003
  br i1 %142, label %143, label %.critedge, !dbg !2006

; <label>:143                                     ; preds = %.lr.ph20, %141
  %j.218 = phi i32 [ %140, %.lr.ph20 ], [ %150, %141 ]
  %144 = zext i32 %j.218 to i64, !dbg !2007
  %145 = getelementptr inbounds [32 x i32]* %tmp_reorder, i64 0, i64 %144, !dbg !2007
  %146 = load i32* %145, align 4, !dbg !2007, !tbaa !914
  %147 = getelementptr inbounds [32 x i32]* %re_order, i64 0, i64 %144, !dbg !2010
  %148 = load i32* %147, align 4, !dbg !2010, !tbaa !914
  %149 = icmp eq i32 %146, %148, !dbg !2011
  %150 = add nuw i32 %j.218, 1, !dbg !2012
  tail call void @llvm.dbg.value(metadata i32 %150, i64 0, metadata !370, metadata !785), !dbg !1957
  br i1 %149, label %141, label %.loopexit, !dbg !2013

.critedge:                                        ; preds = %._crit_edge17, %141
  %phitmp72 = and i64 %indvars.iv.next53, 4294967295
  %151 = getelementptr inbounds i32* %remapping_of_pic_nums_idc, i64 %phitmp72, !dbg !2014
  store i32 3, i32* %151, align 4, !dbg !1956, !tbaa !914
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !370, metadata !785), !dbg !1957
  br i1 %20, label %156, label %.lr.ph, !dbg !1958

.lr.ph:                                           ; preds = %.critedge
  %152 = add i32 %num_ref_idx_lX_active, -1, !dbg !1958
  %153 = zext i32 %152 to i64
  %154 = shl nuw nsw i64 %153, 2, !dbg !1958
  %155 = add nuw nsw i64 %154, 4, !dbg !1958
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 %155, i32 16, i1 false), !dbg !2015
  br label %156, !dbg !1958

; <label>:156                                     ; preds = %.critedge.thread, %.critedge, %.lr.ph
  %157 = icmp eq i32 %list_no, 0, !dbg !2018
  %158 = getelementptr inbounds %struct.ImageParameters* %9, i64 0, i32 50, !dbg !2020
  %159 = load %struct.Slice** %158, align 8, !dbg !2020, !tbaa !780
  br i1 %157, label %160, label %162, !dbg !2022

; <label>:160                                     ; preds = %156
  %161 = getelementptr inbounds %struct.Slice* %159, i64 0, i32 10, !dbg !2023
  store i32 1, i32* %161, align 4, !dbg !2024, !tbaa !789
  br label %.thread, !dbg !2025

; <label>:162                                     ; preds = %156
  %163 = getelementptr inbounds %struct.Slice* %159, i64 0, i32 14, !dbg !2026
  store i32 1, i32* %163, align 4, !dbg !2028, !tbaa !793
  br label %.thread

.thread:                                          ; preds = %.preheader7, %160, %162, %109
  call void @llvm.lifetime.end(i64 128, i8* %5) #3, !dbg !2029
  call void @llvm.lifetime.end(i64 128, i8* %4) #3, !dbg !2029
  call void @llvm.lifetime.end(i64 128, i8* %2) #3, !dbg !2029
  call void @llvm.lifetime.end(i64 128, i8* %3) #3, !dbg !2029
  call void @llvm.lifetime.end(i64 128, i8* %1) #3, !dbg !2029
  ret void, !dbg !2029
}
