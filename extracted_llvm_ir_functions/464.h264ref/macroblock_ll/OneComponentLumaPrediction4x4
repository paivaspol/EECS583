define void @OneComponentLumaPrediction4x4(i32* nocapture %mpred, i32 %pic_pix_x, i32 %pic_pix_y, i16* nocapture %mv, i16 signext %ref, %struct.storable_picture** nocapture %list) #0 {
entry:
  %shl = shl i32 %pic_pix_y, 2
  %arrayidx = getelementptr inbounds i16* %mv, i64 1
  %0 = load i16* %arrayidx, align 2, !tbaa !4
  %conv = sext i16 %0 to i32
  %add = add nsw i32 %conv, %shl
  %add1 = add nsw i32 %add, 4
  %add2 = add nsw i32 %add, 8
  %add3 = add nsw i32 %add, 12
  %shl4 = shl i32 %pic_pix_x, 2
  %1 = load i16* %mv, align 2, !tbaa !4
  %conv6 = sext i16 %1 to i32
  %add7 = add nsw i32 %conv6, %shl4
  %add8 = add nsw i32 %add7, 4
  %add9 = add nsw i32 %add7, 8
  %add10 = add nsw i32 %add7, 12
  %idxprom = sext i16 %ref to i64
  %arrayidx11 = getelementptr inbounds %struct.storable_picture** %list, i64 %idxprom
  %2 = load %struct.storable_picture** %arrayidx11, align 8, !tbaa !0
  %size_x = getelementptr inbounds %struct.storable_picture* %2, i64 0, i32 18
  %3 = load i32* %size_x, align 4, !tbaa !3
  %size_y = getelementptr inbounds %struct.storable_picture* %2, i64 0, i32 19
  %4 = load i32* %size_y, align 4, !tbaa !3
  %imgY_ups = getelementptr inbounds %struct.storable_picture* %2, i64 0, i32 28
  %5 = load i16*** %imgY_ups, align 8, !tbaa !0
  %call = tail call zeroext i16 @UMVPelY_14(i16** %5, i32 %add, i32 %add7, i32 %4, i32 %3) #7
  %conv16 = zext i16 %call to i32
  %incdec.ptr = getelementptr inbounds i32* %mpred, i64 1
  store i32 %conv16, i32* %mpred, align 4, !tbaa !3
  %call17 = tail call zeroext i16 @UMVPelY_14(i16** %5, i32 %add, i32 %add8, i32 %4, i32 %3) #7
  %conv18 = zext i16 %call17 to i32
  %incdec.ptr19 = getelementptr inbounds i32* %mpred, i64 2
  store i32 %conv18, i32* %incdec.ptr, align 4, !tbaa !3
  %call20 = tail call zeroext i16 @UMVPelY_14(i16** %5, i32 %add, i32 %add9, i32 %4, i32 %3) #7
  %conv21 = zext i16 %call20 to i32
  %incdec.ptr22 = getelementptr inbounds i32* %mpred, i64 3
  store i32 %conv21, i32* %incdec.ptr19, align 4, !tbaa !3
  %call23 = tail call zeroext i16 @UMVPelY_14(i16** %5, i32 %add, i32 %add10, i32 %4, i32 %3) #7
  %conv24 = zext i16 %call23 to i32
  %incdec.ptr25 = getelementptr inbounds i32* %mpred, i64 4
  store i32 %conv24, i32* %incdec.ptr22, align 4, !tbaa !3
  %call26 = tail call zeroext i16 @UMVPelY_14(i16** %5, i32 %add1, i32 %add7, i32 %4, i32 %3) #7
  %conv27 = zext i16 %call26 to i32
  %incdec.ptr28 = getelementptr inbounds i32* %mpred, i64 5
  store i32 %conv27, i32* %incdec.ptr25, align 4, !tbaa !3
  %call29 = tail call zeroext i16 @UMVPelY_14(i16** %5, i32 %add1, i32 %add8, i32 %4, i32 %3) #7
  %conv30 = zext i16 %call29 to i32
  %incdec.ptr31 = getelementptr inbounds i32* %mpred, i64 6
  store i32 %conv30, i32* %incdec.ptr28, align 4, !tbaa !3
  %call32 = tail call zeroext i16 @UMVPelY_14(i16** %5, i32 %add1, i32 %add9, i32 %4, i32 %3) #7
  %conv33 = zext i16 %call32 to i32
  %incdec.ptr34 = getelementptr inbounds i32* %mpred, i64 7
  store i32 %conv33, i32* %incdec.ptr31, align 4, !tbaa !3
  %call35 = tail call zeroext i16 @UMVPelY_14(i16** %5, i32 %add1, i32 %add10, i32 %4, i32 %3) #7
  %conv36 = zext i16 %call35 to i32
  %incdec.ptr37 = getelementptr inbounds i32* %mpred, i64 8
  store i32 %conv36, i32* %incdec.ptr34, align 4, !tbaa !3
  %call38 = tail call zeroext i16 @UMVPelY_14(i16** %5, i32 %add2, i32 %add7, i32 %4, i32 %3) #7
  %conv39 = zext i16 %call38 to i32
  %incdec.ptr40 = getelementptr inbounds i32* %mpred, i64 9
  store i32 %conv39, i32* %incdec.ptr37, align 4, !tbaa !3
  %call41 = tail call zeroext i16 @UMVPelY_14(i16** %5, i32 %add2, i32 %add8, i32 %4, i32 %3) #7
  %conv42 = zext i16 %call41 to i32
  %incdec.ptr43 = getelementptr inbounds i32* %mpred, i64 10
  store i32 %conv42, i32* %incdec.ptr40, align 4, !tbaa !3
  %call44 = tail call zeroext i16 @UMVPelY_14(i16** %5, i32 %add2, i32 %add9, i32 %4, i32 %3) #7
  %conv45 = zext i16 %call44 to i32
  %incdec.ptr46 = getelementptr inbounds i32* %mpred, i64 11
  store i32 %conv45, i32* %incdec.ptr43, align 4, !tbaa !3
  %call47 = tail call zeroext i16 @UMVPelY_14(i16** %5, i32 %add2, i32 %add10, i32 %4, i32 %3) #7
  %conv48 = zext i16 %call47 to i32
  %incdec.ptr49 = getelementptr inbounds i32* %mpred, i64 12
  store i32 %conv48, i32* %incdec.ptr46, align 4, !tbaa !3
  %call50 = tail call zeroext i16 @UMVPelY_14(i16** %5, i32 %add3, i32 %add7, i32 %4, i32 %3) #7
  %conv51 = zext i16 %call50 to i32
  %incdec.ptr52 = getelementptr inbounds i32* %mpred, i64 13
  store i32 %conv51, i32* %incdec.ptr49, align 4, !tbaa !3
  %call53 = tail call zeroext i16 @UMVPelY_14(i16** %5, i32 %add3, i32 %add8, i32 %4, i32 %3) #7
  %conv54 = zext i16 %call53 to i32
  %incdec.ptr55 = getelementptr inbounds i32* %mpred, i64 14
  store i32 %conv54, i32* %incdec.ptr52, align 4, !tbaa !3
  %call56 = tail call zeroext i16 @UMVPelY_14(i16** %5, i32 %add3, i32 %add9, i32 %4, i32 %3) #7
  %conv57 = zext i16 %call56 to i32
  %incdec.ptr58 = getelementptr inbounds i32* %mpred, i64 15
  store i32 %conv57, i32* %incdec.ptr55, align 4, !tbaa !3
  %call59 = tail call zeroext i16 @UMVPelY_14(i16** %5, i32 %add3, i32 %add10, i32 %4, i32 %3) #7
  %conv60 = zext i16 %call59 to i32
  store i32 %conv60, i32* %incdec.ptr58, align 4, !tbaa !3
  ret void
}
