define i32 @writeLumaCoeff4x4_CABAC(i32 %b8, i32 %b4, i32 %intra4x4mode) #0 {
entry:
  %0 = load %struct.ImageParameters** @img, align 8, !tbaa !0
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 3
  %1 = load i32* %current_mb_nr, align 4, !tbaa !3
  %idxprom = sext i32 %1 to i64
  %mb_data = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 51
  %2 = load %struct.macroblock** %mb_data, align 8, !tbaa !0
  %currSEnr = getelementptr inbounds %struct.macroblock* %2, i64 %idxprom, i32 0
  %3 = load i32* %currSEnr, align 4, !tbaa !3
  %idxprom1 = sext i32 %3 to i64
  %arrayidx2 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 52, i64 %idxprom1
  %currentSlice = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 50
  %4 = load %struct.Slice** %currentSlice, align 8, !tbaa !0
  %5 = load %struct.InputParameters** @input, align 8, !tbaa !0
  %partition_mode = getelementptr inbounds %struct.InputParameters* %5, i64 0, i32 61
  %6 = load i32* %partition_mode, align 4, !tbaa !3
  %idxprom3 = sext i32 %6 to i64
  %arrayidx4 = getelementptr inbounds [2 x i32*]* @assignSE2partition, i64 0, i64 %idxprom3
  %7 = load i32** %arrayidx4, align 8, !tbaa !0
  %idxprom5 = sext i32 %b4 to i64
  %idxprom6 = sext i32 %b8 to i64
  %cofAC = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 47
  %8 = load i32***** %cofAC, align 8, !tbaa !0
  %arrayidx7 = getelementptr inbounds i32**** %8, i64 %idxprom6
  %9 = load i32**** %arrayidx7, align 8, !tbaa !0
  %arrayidx8 = getelementptr inbounds i32*** %9, i64 %idxprom5
  %10 = load i32*** %arrayidx8, align 8, !tbaa !0
  %11 = load i32** %10, align 8, !tbaa !0
  %arrayidx15 = getelementptr inbounds i32** %10, i64 1
  %12 = load i32** %arrayidx15, align 8, !tbaa !0
  %and16 = and i32 %b4, 1
  %and = shl i32 %b8, 1
  %13 = and i32 %and, 2
  %14 = or i32 %13, %and16
  %subblock_x = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 18
  store i32 %14, i32* %subblock_x, align 4, !tbaa !3
  %cmp22 = icmp slt i32 %b8, 2
  %cmp24 = icmp slt i32 %b4, 2
  br i1 %cmp22, label %cond.true23, label %cond.false26

cond.true23:                                      ; preds = %entry
  %15 = zext i1 %cmp24 to i32
  %cond25 = xor i32 %15, 1
  br label %cond.end29

cond.false26:                                     ; preds = %entry
  %cond28 = select i1 %cmp24, i32 2, i32 3
  br label %cond.end29

cond.end29:                                       ; preds = %cond.false26, %cond.true23
  %cond30 = phi i32 [ %cond25, %cond.true23 ], [ %cond28, %cond.false26 ]
  %subblock_y = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 19
  store i32 %cond30, i32* %subblock_y, align 4, !tbaa !3
  %tobool = icmp ne i32 %intra4x4mode, 0
  %cond39 = select i1 %tobool, i32 7, i32 12
  %partArr = getelementptr inbounds %struct.Slice* %4, i64 0, i32 6
  %arrayidx50 = getelementptr inbounds %struct.macroblock* %2, i64 %idxprom, i32 5, i64 5
  %cond42 = select i1 %tobool, i32 9, i32 14
  br label %for.body

for.body:                                         ; preds = %cond.end29, %for.body
  %indvars.iv = phi i64 [ 0, %cond.end29 ], [ %indvars.iv.next, %for.body ]
  %rate.081 = phi i32 [ 0, %cond.end29 ], [ %add52, %for.body ]
  %currSE.080 = phi %struct.syntaxelement* [ %arrayidx2, %cond.end29 ], [ %incdec.ptr, %for.body ]
  %arrayidx34 = getelementptr inbounds i32* %11, i64 %indvars.iv
  %16 = load i32* %arrayidx34, align 4, !tbaa !3
  %value1 = getelementptr inbounds %struct.syntaxelement* %currSE.080, i64 0, i32 1
  store i32 %16, i32* %value1, align 4, !tbaa !3
  %arrayidx36 = getelementptr inbounds i32* %12, i64 %indvars.iv
  %17 = load i32* %arrayidx36, align 4, !tbaa !3
  %value2 = getelementptr inbounds %struct.syntaxelement* %currSE.080, i64 0, i32 2
  store i32 %17, i32* %value2, align 4, !tbaa !3
  %writing = getelementptr inbounds %struct.syntaxelement* %currSE.080, i64 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeRunLevel_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing, align 8, !tbaa !0
  %context = getelementptr inbounds %struct.syntaxelement* %currSE.080, i64 0, i32 6
  store i32 5, i32* %context, align 4, !tbaa !3
  %18 = trunc i64 %indvars.iv to i32
  %cmp37 = icmp eq i32 %18, 0
  %cond39.cond42 = select i1 %cmp37, i32 %cond39, i32 %cond42
  %type = getelementptr inbounds %struct.syntaxelement* %currSE.080, i64 0, i32 0
  store i32 %cond39.cond42, i32* %type, align 4, !tbaa !3
  %19 = load %struct.ImageParameters** @img, align 8, !tbaa !0
  %is_intra_block = getelementptr inbounds %struct.ImageParameters* %19, i64 0, i32 20
  store i32 %intra4x4mode, i32* %is_intra_block, align 4, !tbaa !3
  %20 = load i32* %type, align 4, !tbaa !3
  %idxprom46 = sext i32 %20 to i64
  %arrayidx47 = getelementptr inbounds i32* %7, i64 %idxprom46
  %21 = load i32* %arrayidx47, align 4, !tbaa !3
  %idxprom48 = sext i32 %21 to i64
  %22 = load %struct.datapartition** %partArr, align 8, !tbaa !0
  %arrayidx49 = getelementptr inbounds %struct.datapartition* %22, i64 %idxprom48
  %writeSyntaxElement = getelementptr inbounds %struct.datapartition* %22, i64 %idxprom48, i32 2
  %23 = load i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement, align 8, !tbaa !0
  %call = tail call i32 %23(%struct.syntaxelement* %currSE.080, %struct.datapartition* %arrayidx49) #7
  %len = getelementptr inbounds %struct.syntaxelement* %currSE.080, i64 0, i32 3
  %24 = load i32* %len, align 4, !tbaa !3
  %25 = load i32* %arrayidx50, align 4, !tbaa !3
  %add = add nsw i32 %25, %24
  store i32 %add, i32* %arrayidx50, align 4, !tbaa !3
  %26 = load i32* %len, align 4, !tbaa !3
  %add52 = add nsw i32 %26, %rate.081
  %incdec.ptr = getelementptr inbounds %struct.syntaxelement* %currSE.080, i64 1
  %27 = load i32* %currSEnr, align 4, !tbaa !3
  %inc = add nsw i32 %27, 1
  store i32 %inc, i32* %currSEnr, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %phitmp = icmp eq i32 %16, 0
  %cmp31 = icmp sgt i32 %18, 15
  %or.cond = or i1 %cmp31, %phitmp
  br i1 %or.cond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  ret i32 %add52
}
