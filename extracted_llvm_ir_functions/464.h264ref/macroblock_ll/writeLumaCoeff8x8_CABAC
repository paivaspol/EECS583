define i32 @writeLumaCoeff8x8_CABAC(i32 %b8, i32 %intra_mode) #0 {
entry:
  %0 = load %struct.ImageParameters** @img, align 8, !tbaa !0
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 3
  %1 = load i32* %current_mb_nr, align 4, !tbaa !3
  %idxprom = sext i32 %1 to i64
  %mb_data = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 51
  %2 = load %struct.macroblock** %mb_data, align 8, !tbaa !0
  %currSEnr = getelementptr inbounds %struct.macroblock* %2, i64 %idxprom, i32 0
  %3 = load i32* %currSEnr, align 4, !tbaa !3
  %idxprom1 = sext i32 %3 to i64
  %arrayidx2 = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 52, i64 %idxprom1
  %currentSlice = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 50
  %4 = load %struct.Slice** %currentSlice, align 8, !tbaa !0
  %5 = load %struct.InputParameters** @input, align 8, !tbaa !0
  %partition_mode = getelementptr inbounds %struct.InputParameters* %5, i64 0, i32 61
  %6 = load i32* %partition_mode, align 4, !tbaa !3
  %idxprom3 = sext i32 %6 to i64
  %arrayidx4 = getelementptr inbounds [2 x i32*]* @assignSE2partition, i64 0, i64 %idxprom3
  %7 = load i32** %arrayidx4, align 8, !tbaa !0
  %idxprom5 = sext i32 %b8 to i64
  %cofAC = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 47
  %8 = load i32***** %cofAC, align 8, !tbaa !0
  %arrayidx6 = getelementptr inbounds i32**** %8, i64 %idxprom5
  %9 = load i32**** %arrayidx6, align 8, !tbaa !0
  %10 = load i32*** %9, align 8, !tbaa !0
  %11 = load i32** %10, align 8, !tbaa !0
  %arrayidx13 = getelementptr inbounds i32** %10, i64 1
  %12 = load i32** %arrayidx13, align 8, !tbaa !0
  %and = shl i32 %b8, 1
  %13 = and i32 %and, 2
  %subblock_x = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 18
  store i32 %13, i32* %subblock_x, align 4, !tbaa !3
  %cmp14 = icmp slt i32 %b8, 2
  %cond15 = select i1 %cmp14, i32 0, i32 2
  %subblock_y = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 19
  store i32 %cond15, i32* %subblock_y, align 4, !tbaa !3
  %tobool = icmp ne i32 %intra_mode, 0
  %cond23 = select i1 %tobool, i32 7, i32 12
  %arrayidx34 = getelementptr inbounds i32* %7, i64 18
  %partArr36 = getelementptr inbounds %struct.Slice* %4, i64 0, i32 6
  %arrayidx38 = getelementptr inbounds %struct.macroblock* %2, i64 %idxprom, i32 5, i64 5
  %cond25 = select i1 %tobool, i32 9, i32 14
  br label %for.body

for.body:                                         ; preds = %entry, %if.end
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %if.end ]
  %rate.068 = phi i32 [ 0, %entry ], [ %add40, %if.end ]
  %currSE.067 = phi %struct.syntaxelement* [ %arrayidx2, %entry ], [ %incdec.ptr, %if.end ]
  %arrayidx19 = getelementptr inbounds i32* %11, i64 %indvars.iv
  %14 = load i32* %arrayidx19, align 4, !tbaa !3
  %value1 = getelementptr inbounds %struct.syntaxelement* %currSE.067, i64 0, i32 1
  store i32 %14, i32* %value1, align 4, !tbaa !3
  %arrayidx21 = getelementptr inbounds i32* %12, i64 %indvars.iv
  %15 = load i32* %arrayidx21, align 4, !tbaa !3
  %value2 = getelementptr inbounds %struct.syntaxelement* %currSE.067, i64 0, i32 2
  store i32 %15, i32* %value2, align 4, !tbaa !3
  %writing = getelementptr inbounds %struct.syntaxelement* %currSE.067, i64 0, i32 9
  store void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* @writeRunLevel_CABAC, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)** %writing, align 8, !tbaa !0
  %context = getelementptr inbounds %struct.syntaxelement* %currSE.067, i64 0, i32 6
  store i32 2, i32* %context, align 4, !tbaa !3
  %16 = trunc i64 %indvars.iv to i32
  %cmp22 = icmp eq i32 %16, 0
  %cond23.cond25 = select i1 %cmp22, i32 %cond23, i32 %cond25
  %type = getelementptr inbounds %struct.syntaxelement* %currSE.067, i64 0, i32 0
  store i32 %cond23.cond25, i32* %type, align 4, !tbaa !3
  %17 = load %struct.ImageParameters** @img, align 8, !tbaa !0
  %is_intra_block = getelementptr inbounds %struct.ImageParameters* %17, i64 0, i32 20
  store i32 %intra_mode, i32* %is_intra_block, align 4, !tbaa !3
  %type27 = getelementptr inbounds %struct.ImageParameters* %17, i64 0, i32 6
  %18 = load i32* %type27, align 4, !tbaa !3
  %cmp28 = icmp eq i32 %18, 1
  br i1 %cmp28, label %if.else, label %if.then

if.then:                                          ; preds = %for.body
  %19 = load i32* %type, align 4, !tbaa !3
  %idxprom30 = sext i32 %19 to i64
  %arrayidx31 = getelementptr inbounds i32* %7, i64 %idxprom30
  %20 = load i32* %arrayidx31, align 4, !tbaa !3
  %idxprom32 = sext i32 %20 to i64
  %21 = load %struct.datapartition** %partArr36, align 8, !tbaa !0
  %arrayidx33 = getelementptr inbounds %struct.datapartition* %21, i64 %idxprom32
  br label %if.end

if.else:                                          ; preds = %for.body
  %22 = load i32* %arrayidx34, align 4, !tbaa !3
  %idxprom35 = sext i32 %22 to i64
  %23 = load %struct.datapartition** %partArr36, align 8, !tbaa !0
  %arrayidx37 = getelementptr inbounds %struct.datapartition* %23, i64 %idxprom35
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %dataPart.0 = phi %struct.datapartition* [ %arrayidx33, %if.then ], [ %arrayidx37, %if.else ]
  %writeSyntaxElement = getelementptr inbounds %struct.datapartition* %dataPart.0, i64 0, i32 2
  %24 = load i32 (%struct.syntaxelement*, %struct.datapartition*)** %writeSyntaxElement, align 8, !tbaa !0
  %call = tail call i32 %24(%struct.syntaxelement* %currSE.067, %struct.datapartition* %dataPart.0) #7
  %len = getelementptr inbounds %struct.syntaxelement* %currSE.067, i64 0, i32 3
  %25 = load i32* %len, align 4, !tbaa !3
  %26 = load i32* %arrayidx38, align 4, !tbaa !3
  %add = add nsw i32 %26, %25
  store i32 %add, i32* %arrayidx38, align 4, !tbaa !3
  %27 = load i32* %len, align 4, !tbaa !3
  %add40 = add nsw i32 %27, %rate.068
  %incdec.ptr = getelementptr inbounds %struct.syntaxelement* %currSE.067, i64 1
  %28 = load i32* %currSEnr, align 4, !tbaa !3
  %inc = add nsw i32 %28, 1
  store i32 %inc, i32* %currSEnr, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %phitmp = icmp eq i32 %14, 0
  %cmp16 = icmp sgt i32 %16, 63
  %or.cond = or i1 %cmp16, %phitmp
  br i1 %or.cond, label %for.end, label %for.body

for.end:                                          ; preds = %if.end
  ret i32 %add40
}
