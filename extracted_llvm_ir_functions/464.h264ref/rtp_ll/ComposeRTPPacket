define i32 @ComposeRTPPacket(%struct.RTPpacket_t* nocapture %p) #0 {
entry:
  %v = getelementptr inbounds %struct.RTPpacket_t* %p, i64 0, i32 0
  %0 = load i32* %v, align 4, !tbaa !0
  %p1 = getelementptr inbounds %struct.RTPpacket_t* %p, i64 0, i32 1
  %1 = load i32* %p1, align 4, !tbaa !0
  %shl = shl i32 %1, 2
  %or = or i32 %shl, %0
  %x = getelementptr inbounds %struct.RTPpacket_t* %p, i64 0, i32 2
  %2 = load i32* %x, align 4, !tbaa !0
  %shl2 = shl i32 %2, 3
  %or3 = or i32 %or, %shl2
  %cc = getelementptr inbounds %struct.RTPpacket_t* %p, i64 0, i32 3
  %3 = load i32* %cc, align 4, !tbaa !0
  %shl4 = shl i32 %3, 4
  %or5 = or i32 %or3, %shl4
  %conv = trunc i32 %or5 to i8
  %packet = getelementptr inbounds %struct.RTPpacket_t* %p, i64 0, i32 11
  %4 = load i8** %packet, align 8, !tbaa !3
  store i8 %conv, i8* %4, align 1, !tbaa !1
  %m = getelementptr inbounds %struct.RTPpacket_t* %p, i64 0, i32 4
  %5 = load i32* %m, align 4, !tbaa !0
  %pt = getelementptr inbounds %struct.RTPpacket_t* %p, i64 0, i32 5
  %6 = load i32* %pt, align 4, !tbaa !0
  %shl6 = shl i32 %6, 1
  %or7 = or i32 %shl6, %5
  %conv8 = trunc i32 %or7 to i8
  %7 = load i8** %packet, align 8, !tbaa !3
  %arrayidx10 = getelementptr inbounds i8* %7, i64 1
  store i8 %conv8, i8* %arrayidx10, align 1, !tbaa !1
  %seq = getelementptr inbounds %struct.RTPpacket_t* %p, i64 0, i32 6
  %8 = load i32* %seq, align 4, !tbaa !0
  %conv11 = trunc i32 %8 to i8
  %9 = load i8** %packet, align 8, !tbaa !3
  %arrayidx13 = getelementptr inbounds i8* %9, i64 2
  store i8 %conv11, i8* %arrayidx13, align 1, !tbaa !1
  %10 = load i32* %seq, align 4, !tbaa !0
  %shr = lshr i32 %10, 8
  %conv16 = trunc i32 %shr to i8
  %11 = load i8** %packet, align 8, !tbaa !3
  %arrayidx18 = getelementptr inbounds i8* %11, i64 3
  store i8 %conv16, i8* %arrayidx18, align 1, !tbaa !1
  %12 = load i8** %packet, align 8, !tbaa !3
  %arrayidx20 = getelementptr inbounds i8* %12, i64 4
  %timestamp = getelementptr inbounds %struct.RTPpacket_t* %p, i64 0, i32 7
  %13 = bitcast i8* %arrayidx20 to i32*
  %14 = load i32* %timestamp, align 1
  store i32 %14, i32* %13, align 1
  %15 = load i8** %packet, align 8, !tbaa !3
  %arrayidx22 = getelementptr inbounds i8* %15, i64 8
  %ssrc = getelementptr inbounds %struct.RTPpacket_t* %p, i64 0, i32 8
  %16 = bitcast i8* %arrayidx22 to i32*
  %17 = load i32* %ssrc, align 1
  store i32 %17, i32* %16, align 1
  %18 = load i8** %packet, align 8, !tbaa !3
  %arrayidx24 = getelementptr inbounds i8* %18, i64 12
  %payload = getelementptr inbounds %struct.RTPpacket_t* %p, i64 0, i32 9
  %19 = load i8** %payload, align 8, !tbaa !3
  %paylen = getelementptr inbounds %struct.RTPpacket_t* %p, i64 0, i32 10
  %20 = load i32* %paylen, align 4, !tbaa !0
  %conv25 = zext i32 %20 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx24, i8* %19, i64 %conv25, i32 1, i1 false)
  %21 = load i32* %paylen, align 4, !tbaa !0
  %add = add i32 %21, 12
  %packlen = getelementptr inbounds %struct.RTPpacket_t* %p, i64 0, i32 12
  store i32 %add, i32* %packlen, align 4, !tbaa !0
  ret i32 0
}
