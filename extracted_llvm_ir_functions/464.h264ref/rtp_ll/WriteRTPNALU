define i32 @WriteRTPNALU(%struct.NALU_t* nocapture %n) #0 {
entry:
  %forbidden_bit = getelementptr inbounds %struct.NALU_t* %n, i64 0, i32 5
  %0 = load i32* %forbidden_bit, align 4, !tbaa !0
  %shl = shl i32 %0, 7
  %nal_reference_idc = getelementptr inbounds %struct.NALU_t* %n, i64 0, i32 4
  %1 = load i32* %nal_reference_idc, align 4, !tbaa !0
  %shl1 = shl i32 %1, 5
  %or = or i32 %shl1, %shl
  %nal_unit_type = getelementptr inbounds %struct.NALU_t* %n, i64 0, i32 3
  %2 = load i32* %nal_unit_type, align 4, !tbaa !0
  %or2 = or i32 %or, %2
  %conv = trunc i32 %or2 to i8
  %buf = getelementptr inbounds %struct.NALU_t* %n, i64 0, i32 6
  %3 = load i8** %buf, align 8, !tbaa !3
  store i8 %conv, i8* %3, align 1, !tbaa !1
  %call = tail call noalias i8* @malloc(i64 72) #5
  %4 = bitcast i8* %call to %struct.RTPpacket_t*
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @no_mem_exit(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0)) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call4 = tail call noalias i8* @malloc(i64 65508) #5
  %packet = getelementptr inbounds i8* %call, i64 56
  %5 = bitcast i8* %packet to i8**
  store i8* %call4, i8** %5, align 8, !tbaa !3
  %cmp5 = icmp eq i8* %call4, null
  br i1 %cmp5, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end
  tail call void @no_mem_exit(i8* getelementptr inbounds ([15 x i8]* @.str1, i64 0, i64 0)) #5
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end
  %call9 = tail call noalias i8* @malloc(i64 65508) #5
  %payload = getelementptr inbounds i8* %call, i64 40
  %6 = bitcast i8* %payload to i8**
  store i8* %call9, i8** %6, align 8, !tbaa !3
  %cmp10 = icmp eq i8* %call9, null
  br i1 %cmp10, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end8
  tail call void @no_mem_exit(i8* getelementptr inbounds ([15 x i8]* @.str2, i64 0, i64 0)) #5
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %if.end8
  %v = bitcast i8* %call to i32*
  store i32 2, i32* %v, align 4, !tbaa !0
  %p14 = getelementptr inbounds i8* %call, i64 4
  %7 = bitcast i8* %p14 to i32*
  store i32 0, i32* %7, align 4, !tbaa !0
  %x = getelementptr inbounds i8* %call, i64 8
  %8 = bitcast i8* %x to i32*
  store i32 0, i32* %8, align 4, !tbaa !0
  %cc = getelementptr inbounds i8* %call, i64 12
  %9 = bitcast i8* %cc to i32*
  store i32 0, i32* %9, align 4, !tbaa !0
  %startcodeprefix_len = getelementptr inbounds %struct.NALU_t* %n, i64 0, i32 0
  %10 = load i32* %startcodeprefix_len, align 4, !tbaa !0
  %cmp15 = icmp eq i32 %10, 4
  %conv16 = zext i1 %cmp15 to i32
  %m = getelementptr inbounds i8* %call, i64 16
  %11 = bitcast i8* %m to i32*
  store i32 %conv16, i32* %11, align 4, !tbaa !0
  %pt = getelementptr inbounds i8* %call, i64 20
  %12 = bitcast i8* %pt to i32*
  store i32 105, i32* %12, align 4, !tbaa !0
  %13 = load i32* @CurrentRTPSequenceNumber, align 4, !tbaa !0
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* @CurrentRTPSequenceNumber, align 4, !tbaa !0
  %seq = getelementptr inbounds i8* %call, i64 24
  %14 = bitcast i8* %seq to i32*
  store i32 %13, i32* %14, align 4, !tbaa !0
  %15 = load i32* @CurrentRTPTimestamp, align 4, !tbaa !0
  %timestamp = getelementptr inbounds i8* %call, i64 28
  %16 = bitcast i8* %timestamp to i32*
  store i32 %15, i32* %16, align 4, !tbaa !0
  %ssrc = getelementptr inbounds i8* %call, i64 32
  %17 = bitcast i8* %ssrc to i32*
  store i32 305419896, i32* %17, align 4, !tbaa !0
  %len = getelementptr inbounds %struct.NALU_t* %n, i64 0, i32 1
  %18 = load i32* %len, align 4, !tbaa !0
  %paylen = getelementptr inbounds i8* %call, i64 48
  %19 = bitcast i8* %paylen to i32*
  store i32 %18, i32* %19, align 4, !tbaa !0
  %20 = load i8** %buf, align 8, !tbaa !3
  %conv20 = zext i32 %18 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call9, i8* %20, i64 %conv20, i32 1, i1 false)
  %call21 = tail call i32 @ComposeRTPPacket(%struct.RTPpacket_t* %4) #6
  %21 = load %struct._IO_FILE** @f, align 8, !tbaa !3
  %call27 = tail call i32 @WriteRTPPacket(%struct.RTPpacket_t* %4, %struct._IO_FILE* %21) #6
  %cmp28 = icmp slt i32 %call27, 0
  br i1 %cmp28, label %if.then30, label %if.end32

if.then30:                                        ; preds = %if.end13
  %packlen = getelementptr inbounds i8* %call, i64 64
  %22 = bitcast i8* %packlen to i32*
  %23 = load i32* %22, align 4, !tbaa !0
  %call31 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str4, i64 0, i64 0), i32 %23) #5
  tail call void @exit(i32 -1) #7
  unreachable

if.end32:                                         ; preds = %if.end13
  %24 = load i8** %5, align 8, !tbaa !3
  tail call void @free(i8* %24) #5
  %25 = load i8** %6, align 8, !tbaa !3
  tail call void @free(i8* %25) #5
  tail call void @free(i8* %call) #5
  %26 = load i32* %len, align 4, !tbaa !0
  %mul = shl i32 %26, 3
  ret i32 %mul
}
