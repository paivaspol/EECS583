define i32 @writeSyntaxElement_Level_VLCN(%struct.syntaxelement* nocapture %se, i32 %vlc, %struct.datapartition* nocapture %this_dataPart) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.syntaxelement* %se}, i64 0, metadata !295), !dbg !1163
  tail call void @llvm.dbg.value(metadata !{i32 %vlc}, i64 0, metadata !296), !dbg !1163
  tail call void @llvm.dbg.value(metadata !{%struct.datapartition* %this_dataPart}, i64 0, metadata !297), !dbg !1163
  %value1 = getelementptr inbounds %struct.syntaxelement* %se, i64 0, i32 1, !dbg !1164
  %0 = load i32* %value1, align 4, !dbg !1164, !tbaa !806
  tail call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !300), !dbg !1164
  %ispos = icmp sgt i32 %0, -1, !dbg !1165
  %neg32 = sub i32 0, %0, !dbg !1165
  %1 = select i1 %ispos, i32 %0, i32 %neg32, !dbg !1165
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !301), !dbg !1165
  %.lobit = lshr i32 %0, 31, !dbg !1166
  tail call void @llvm.dbg.value(metadata !{i32 %.lobit}, i64 0, metadata !302), !dbg !1166
  %sub = add nsw i32 %vlc, -1, !dbg !1167
  tail call void @llvm.dbg.value(metadata !{i32 %sub}, i64 0, metadata !303), !dbg !1167
  %shl = shl i32 15, %sub, !dbg !1168
  %add = add nsw i32 %shl, 1, !dbg !1168
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !304), !dbg !1168
  %sub1 = add nsw i32 %1, -1, !dbg !1169
  tail call void @llvm.dbg.value(metadata !{i32 %shr}, i64 0, metadata !305), !dbg !1169
  tail call void @llvm.dbg.value(metadata !{i32 %neg}, i64 0, metadata !306), !dbg !1170
  tail call void @llvm.dbg.value(metadata !{i32 %and}, i64 0, metadata !307), !dbg !1171
  %cmp4 = icmp slt i32 %1, %add, !dbg !1172
  br i1 %cmp4, label %if.then, label %if.else, !dbg !1172

if.then:                                          ; preds = %entry
  %shl2 = shl i32 -1, %sub, !dbg !1170
  %neg = xor i32 %shl2, 2147483647, !dbg !1170
  %and = and i32 %sub1, %neg, !dbg !1171
  %shr = ashr i32 %sub1, %sub, !dbg !1169
  %add5 = add i32 %vlc, 1, !dbg !1173
  %add6 = add i32 %add5, %shr, !dbg !1173
  tail call void @llvm.dbg.value(metadata !{i32 %add6}, i64 0, metadata !299), !dbg !1173
  %shl8 = shl i32 1, %vlc, !dbg !1175
  %shl9 = shl i32 %and, 1, !dbg !1175
  %or = or i32 %.lobit, %shl8, !dbg !1175
  %or10 = or i32 %or, %shl9, !dbg !1175
  tail call void @llvm.dbg.value(metadata !{i32 %or10}, i64 0, metadata !298), !dbg !1175
  br label %if.end, !dbg !1176

if.else:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata !1177, i64 0, metadata !299), !dbg !1178
  %sub11 = sub nsw i32 %1, %add, !dbg !1180
  %shl12 = shl i32 %sub11, 1, !dbg !1180
  %or13 = or i32 %.lobit, %shl12, !dbg !1180
  %or14 = or i32 %or13, 4096, !dbg !1180
  tail call void @llvm.dbg.value(metadata !{i32 %or14}, i64 0, metadata !298), !dbg !1180
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %iLength.0 = phi i32 [ %add6, %if.then ], [ 28, %if.else ]
  %2 = phi i32 [ %or10, %if.then ], [ %or14, %if.else ]
  %len = getelementptr inbounds %struct.syntaxelement* %se, i64 0, i32 3, !dbg !1181
  store i32 %iLength.0, i32* %len, align 4, !dbg !1181, !tbaa !806
  %inf = getelementptr inbounds %struct.syntaxelement* %se, i64 0, i32 4, !dbg !1182
  store i32 %2, i32* %inf, align 4, !dbg !1182, !tbaa !806
  tail call void @llvm.dbg.value(metadata !{%struct.syntaxelement* %se}, i64 0, metadata !1183), !dbg !1185
  tail call void @llvm.dbg.value(metadata !{i32 %iLength.0}, i64 0, metadata !1186), !dbg !1187
  %bitpattern.i = getelementptr inbounds %struct.syntaxelement* %se, i64 0, i32 5, !dbg !1188
  store i32 0, i32* %bitpattern.i, align 4, !dbg !1189, !tbaa !806
  %cmp10.i = icmp sgt i32 %iLength.0, 0, !dbg !1190
  br i1 %cmp10.i, label %while.body.i, label %symbol2vlc.exit, !dbg !1190

while.body.i:                                     ; preds = %if.end, %while.body.i
  %dec12.in.i = phi i32 [ %dec12.i, %while.body.i ], [ %iLength.0, %if.end ]
  %storemerge11.i = phi i32 [ %or.i, %while.body.i ], [ 0, %if.end ]
  %dec12.i = add nsw i32 %dec12.in.i, -1, !dbg !1190
  %shl.i = shl i32 %storemerge11.i, 1, !dbg !1191
  %shr8.i = lshr i32 %2, %dec12.i, !dbg !1189
  %and.i = and i32 %shr8.i, 1, !dbg !1189
  %or.i = or i32 %and.i, %shl.i, !dbg !1189
  tail call void @llvm.dbg.value(metadata !{i32 %dec12.i}, i64 0, metadata !1186), !dbg !1190
  %cmp.i = icmp sgt i32 %dec12.i, 0, !dbg !1190
  br i1 %cmp.i, label %while.body.i, label %while.cond.while.end_crit_edge.i, !dbg !1190

while.cond.while.end_crit_edge.i:                 ; preds = %while.body.i
  store i32 %or.i, i32* %bitpattern.i, align 4, !dbg !1189, !tbaa !806
  br label %symbol2vlc.exit, !dbg !1190

symbol2vlc.exit:                                  ; preds = %if.end, %while.cond.while.end_crit_edge.i
  %bitstream = getelementptr inbounds %struct.datapartition* %this_dataPart, i64 0, i32 0, !dbg !1192
  %3 = load %struct.Bitstream** %bitstream, align 8, !dbg !1192, !tbaa !810
  tail call void @writeUVLC2buffer(%struct.syntaxelement* %se, %struct.Bitstream* %3) #6, !dbg !1192
  %4 = load i32* %len, align 4, !dbg !1193, !tbaa !806
  ret i32 %4, !dbg !1193
}
