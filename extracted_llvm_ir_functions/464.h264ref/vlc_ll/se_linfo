define void @se_linfo(i32 %se, i32 %dummy, i32* nocapture %len, i32* nocapture %info) #0 {
entry:
  %cmp = icmp slt i32 %se, 1
  %. = zext i1 %cmp to i32
  %ispos = icmp sgt i32 %se, -1
  %neg = sub i32 0, %se
  %0 = select i1 %ispos, i32 %se, i32 %neg
  %shl = shl i32 %0, 1
  br label %land.rhs

for.cond:                                         ; preds = %land.rhs
  %nn.017 = sdiv i32 %nn.017.in, 2
  %cmp1 = icmp slt i32 %inc, 16
  br i1 %cmp1, label %land.rhs, label %for.end

land.rhs:                                         ; preds = %entry, %for.cond
  %nn.017.in = phi i32 [ %shl, %entry ], [ %nn.017, %for.cond ]
  %i.015 = phi i32 [ 0, %entry ], [ %inc, %for.cond ]
  %nn.0.in.off = add i32 %nn.017.in, 1
  %1 = icmp ugt i32 %nn.0.in.off, 2
  %inc = add nsw i32 %i.015, 1
  br i1 %1, label %for.cond, label %for.end

for.end:                                          ; preds = %for.cond, %land.rhs
  %i.0.lcssa = phi i32 [ %inc, %for.cond ], [ %i.015, %land.rhs ]
  %mul = shl nsw i32 %i.0.lcssa, 1
  %add13 = or i32 %mul, 1
  store i32 %add13, i32* %len, align 4, !tbaa !0
  %2 = tail call double @ldexp(double 1.000000e+00, i32 %i.0.lcssa) #1
  %conv5 = fptosi double %2 to i32
  %sub = or i32 %shl, %.
  %add6 = sub i32 %sub, %conv5
  store i32 %add6, i32* %info, align 4, !tbaa !0
  ret void
}
