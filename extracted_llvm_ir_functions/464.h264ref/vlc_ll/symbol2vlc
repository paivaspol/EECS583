define i32 @symbol2vlc(%struct.syntaxelement* nocapture %sym) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.syntaxelement* %sym}, i64 0, metadata !252), !dbg !1008
  %len = getelementptr inbounds %struct.syntaxelement* %sym, i64 0, i32 3, !dbg !1009
  %0 = load i32* %len, align 4, !dbg !1009, !tbaa !806
  tail call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !253), !dbg !1009
  %bitpattern = getelementptr inbounds %struct.syntaxelement* %sym, i64 0, i32 5, !dbg !1010
  store i32 0, i32* %bitpattern, align 4, !dbg !1011, !tbaa !806
  %cmp10 = icmp sgt i32 %0, 0, !dbg !1013
  br i1 %cmp10, label %while.body.lr.ph, label %while.end, !dbg !1013

while.body.lr.ph:                                 ; preds = %entry
  %inf = getelementptr inbounds %struct.syntaxelement* %sym, i64 0, i32 4, !dbg !1011
  %1 = load i32* %inf, align 4, !dbg !1011, !tbaa !806
  br label %while.body, !dbg !1013

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %dec12.in = phi i32 [ %0, %while.body.lr.ph ], [ %dec12, %while.body ]
  %storemerge11 = phi i32 [ 0, %while.body.lr.ph ], [ %or, %while.body ]
  %dec12 = add nsw i32 %dec12.in, -1, !dbg !1013
  %shl = shl i32 %storemerge11, 1, !dbg !1014
  %shr8 = lshr i32 %1, %dec12, !dbg !1011
  %and = and i32 %shr8, 1, !dbg !1011
  %or = or i32 %and, %shl, !dbg !1011
  tail call void @llvm.dbg.value(metadata !{i32 %dec12}, i64 0, metadata !253), !dbg !1013
  %cmp = icmp sgt i32 %dec12, 0, !dbg !1013
  br i1 %cmp, label %while.body, label %while.cond.while.end_crit_edge, !dbg !1013

while.cond.while.end_crit_edge:                   ; preds = %while.body
  store i32 %or, i32* %bitpattern, align 4, !dbg !1011, !tbaa !806
  br label %while.end, !dbg !1013

while.end:                                        ; preds = %while.cond.while.end_crit_edge, %entry
  ret i32 0, !dbg !1015
}
