define i32 @writeSyntaxElement_Run(%struct.syntaxelement* nocapture %se, %struct.datapartition* nocapture %this_dataPart) #0 {
entry:
  %len = getelementptr inbounds %struct.syntaxelement* %se, i64 0, i32 3
  %0 = load i32* %len, align 4, !tbaa !0
  %value1 = getelementptr inbounds %struct.syntaxelement* %se, i64 0, i32 1
  %1 = load i32* %value1, align 4, !tbaa !0
  %idxprom = sext i32 %1 to i64
  %idxprom1 = sext i32 %0 to i64
  %arrayidx2 = getelementptr inbounds [15 x [16 x i32]]* @writeSyntaxElement_Run.lentab, i64 0, i64 %idxprom1, i64 %idxprom
  %2 = load i32* %arrayidx2, align 4, !tbaa !0
  store i32 %2, i32* %len, align 4, !tbaa !0
  %arrayidx8 = getelementptr inbounds [15 x [16 x i32]]* @writeSyntaxElement_Run.codtab, i64 0, i64 %idxprom1, i64 %idxprom
  %3 = load i32* %arrayidx8, align 4, !tbaa !0
  %inf = getelementptr inbounds %struct.syntaxelement* %se, i64 0, i32 4
  store i32 %3, i32* %inf, align 4, !tbaa !0
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str3, i64 0, i64 0), i32 %1) #5
  tail call void @exit(i32 -1) #6
  unreachable

if.end:                                           ; preds = %entry
  %bitpattern.i = getelementptr inbounds %struct.syntaxelement* %se, i64 0, i32 5
  store i32 0, i32* %bitpattern.i, align 4, !tbaa !0
  %cmp10.i = icmp sgt i32 %2, 0
  br i1 %cmp10.i, label %while.body.i, label %symbol2vlc.exit

while.body.i:                                     ; preds = %if.end, %while.body.i
  %dec12.in.i = phi i32 [ %dec12.i, %while.body.i ], [ %2, %if.end ]
  %storemerge11.i = phi i32 [ %or.i, %while.body.i ], [ 0, %if.end ]
  %dec12.i = add nsw i32 %dec12.in.i, -1
  %shl.i = shl i32 %storemerge11.i, 1
  %shr8.i = lshr i32 %3, %dec12.i
  %and.i = and i32 %shr8.i, 1
  %or.i = or i32 %and.i, %shl.i
  %cmp.i = icmp sgt i32 %dec12.i, 0
  br i1 %cmp.i, label %while.body.i, label %while.cond.while.end_crit_edge.i

while.cond.while.end_crit_edge.i:                 ; preds = %while.body.i
  store i32 %or.i, i32* %bitpattern.i, align 4, !tbaa !0
  br label %symbol2vlc.exit

symbol2vlc.exit:                                  ; preds = %if.end, %while.cond.while.end_crit_edge.i
  %bitstream = getelementptr inbounds %struct.datapartition* %this_dataPart, i64 0, i32 0
  %4 = load %struct.Bitstream** %bitstream, align 8, !tbaa !3
  tail call void @writeUVLC2buffer(%struct.syntaxelement* %se, %struct.Bitstream* %4) #4
  %5 = load i32* %len, align 4, !tbaa !0
  ret i32 %5
}
