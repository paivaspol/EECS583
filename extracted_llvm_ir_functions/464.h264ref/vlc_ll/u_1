define i32 @u_1(i8* nocapture %tracestring, i32 %value, %struct.datapartition* nocapture %part) #0 {
entry:
  %symbol = alloca %struct.syntaxelement, align 8
  %0 = bitcast %struct.syntaxelement* %symbol to i8*
  call void @llvm.lifetime.start(i64 48, i8* %0) #1
  %bitpattern = getelementptr inbounds %struct.syntaxelement* %symbol, i64 0, i32 5
  store i32 %value, i32* %bitpattern, align 4, !tbaa !0
  %len = getelementptr inbounds %struct.syntaxelement* %symbol, i64 0, i32 3
  store i32 1, i32* %len, align 4, !tbaa !0
  %type = getelementptr inbounds %struct.syntaxelement* %symbol, i64 0, i32 0
  store i32 0, i32* %type, align 8, !tbaa !0
  %value1 = getelementptr inbounds %struct.syntaxelement* %symbol, i64 0, i32 1
  store i32 %value, i32* %value1, align 4, !tbaa !0
  %value2 = getelementptr inbounds %struct.syntaxelement* %symbol, i64 0, i32 2
  store i32 0, i32* %value2, align 8, !tbaa !0
  %bitstream.i = getelementptr inbounds %struct.datapartition* %part, i64 0, i32 0
  %1 = load %struct.Bitstream** %bitstream.i, align 8, !tbaa !3
  call void @writeUVLC2buffer(%struct.syntaxelement* %symbol, %struct.Bitstream* %1) #5
  %2 = load i32* %type, align 8, !tbaa !0
  %cmp.i = icmp eq i32 %2, 0
  br i1 %cmp.i, label %writeSyntaxElement_fixed.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %3 = load %struct.Bitstream** %bitstream.i, align 8, !tbaa !3
  %write_flag.i = getelementptr inbounds %struct.Bitstream* %3, i64 0, i32 10
  store i32 1, i32* %write_flag.i, align 4, !tbaa !0
  br label %writeSyntaxElement_fixed.exit

writeSyntaxElement_fixed.exit:                    ; preds = %entry, %if.then.i
  %4 = load i32* %len, align 4, !tbaa !0
  call void @llvm.lifetime.end(i64 48, i8* %0) #1
  ret i32 %4
}
