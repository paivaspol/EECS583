define void @levrun_linfo_inter(i32 %level, i32 %run, i32* nocapture %len, i32* nocapture %info) #0 {
  tail call void @llvm.dbg.value(metadata i32 %level, i64 0, metadata !193, metadata !814), !dbg !1081
  tail call void @llvm.dbg.value(metadata i32 %run, i64 0, metadata !194, metadata !814), !dbg !1082
  tail call void @llvm.dbg.value(metadata i32* %len, i64 0, metadata !195, metadata !814), !dbg !1083
  tail call void @llvm.dbg.value(metadata i32* %info, i64 0, metadata !196, metadata !814), !dbg !1084
  %1 = icmp eq i32 %level, 0, !dbg !1085
  br i1 %1, label %2, label %3, !dbg !1087

; <label>:2                                       ; preds = %0
  store i32 1, i32* %len, align 4, !dbg !1088, !tbaa !863
  br label %34, !dbg !1090

; <label>:3                                       ; preds = %0
  %4 = icmp slt i32 %level, 1, !dbg !1091
  %. = zext i1 %4 to i32, !dbg !1093
  %ispos = icmp sgt i32 %level, -1, !dbg !1094
  %neg = sub i32 0, %level, !dbg !1094
  %5 = select i1 %ispos, i32 %level, i32 %neg, !dbg !1094
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !197, metadata !814), !dbg !1095
  %6 = sext i32 %run to i64, !dbg !1096
  %7 = getelementptr inbounds [16 x i8]* @levrun_linfo_inter.LEVRUN, i64 0, i64 %6, !dbg !1096
  %8 = load i8* %7, align 1, !dbg !1096, !tbaa !1021
  %9 = zext i8 %8 to i32, !dbg !1096
  %10 = icmp sgt i32 %5, %9, !dbg !1098
  br i1 %10, label %18, label %11, !dbg !1099

; <label>:11                                      ; preds = %3
  %12 = add nsw i32 %5, -1, !dbg !1100
  %13 = sext i32 %12 to i64, !dbg !1102
  %14 = getelementptr inbounds [4 x [10 x i8]]* @levrun_linfo_inter.NTAB, i64 0, i64 %13, i64 %6, !dbg !1102
  %15 = load i8* %14, align 1, !dbg !1102, !tbaa !1021
  %16 = zext i8 %15 to i32, !dbg !1102
  %17 = add nuw nsw i32 %16, 1, !dbg !1103
  tail call void @llvm.dbg.value(metadata i32 %17, i64 0, metadata !199, metadata !814), !dbg !1104
  br label %23, !dbg !1105

; <label>:18                                      ; preds = %3
  %19 = sub nsw i32 %5, %9, !dbg !1106
  %20 = shl i32 %19, 5, !dbg !1108
  %21 = shl i32 %run, 1, !dbg !1109
  %22 = add nsw i32 %20, %21, !dbg !1110
  tail call void @llvm.dbg.value(metadata i32 %22, i64 0, metadata !199, metadata !814), !dbg !1104
  br label %23

; <label>:23                                      ; preds = %18, %11
  %n.0 = phi i32 [ %17, %11 ], [ %22, %18 ]
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !198, metadata !814), !dbg !1111
  %nn.0.in.off2 = add i32 %n.0, 1, !dbg !1112
  %24 = icmp ugt i32 %nn.0.in.off2, 2, !dbg !1112
  br i1 %24, label %.lr.ph, label %.critedge, !dbg !1115

.lr.ph:                                           ; preds = %23, %.lr.ph
  %nn.0.in4 = phi i32 [ %nn.0, %.lr.ph ], [ %n.0, %23 ]
  %i.03 = phi i32 [ %25, %.lr.ph ], [ 0, %23 ]
  %nn.0 = sdiv i32 %nn.0.in4, 2, !dbg !1116
  %25 = add nuw nsw i32 %i.03, 1, !dbg !1117
  tail call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !198, metadata !814), !dbg !1111
  %26 = icmp slt i32 %25, 16, !dbg !1118
  %nn.0.in.off = add nsw i32 %nn.0, 1, !dbg !1112
  %27 = icmp ugt i32 %nn.0.in.off, 2, !dbg !1112
  %or.cond = and i1 %26, %27, !dbg !1115
  br i1 %or.cond, label %.lr.ph, label %.critedge, !dbg !1115

.critedge:                                        ; preds = %.lr.ph, %23
  %i.0.lcssa = phi i32 [ 0, %23 ], [ %25, %.lr.ph ]
  %28 = shl nsw i32 %i.0.lcssa, 1, !dbg !1119
  %29 = or i32 %28, 1, !dbg !1120
  store i32 %29, i32* %len, align 4, !dbg !1121, !tbaa !863
  %30 = tail call double @ldexp(double 1.000000e+00, i32 %i.0.lcssa) #1, !dbg !1122
  %31 = fptosi double %30 to i32, !dbg !1123
  %32 = add i32 %n.0, %., !dbg !1124
  %33 = sub i32 %32, %31, !dbg !1125
  store i32 %33, i32* %info, align 4, !dbg !1126, !tbaa !863
  br label %34, !dbg !1127

; <label>:34                                      ; preds = %.critedge, %2
  ret void, !dbg !1127
}
