define void @writeUVLC2buffer(%struct.syntaxelement* nocapture %se, %struct.Bitstream* nocapture %currStream) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.syntaxelement* %se}, i64 0, metadata !242), !dbg !964
  tail call void @llvm.dbg.value(metadata !{%struct.Bitstream* %currStream}, i64 0, metadata !243), !dbg !964
  %len = getelementptr inbounds %struct.syntaxelement* %se, i64 0, i32 3, !dbg !965
  %0 = load i32* %len, align 4, !dbg !965, !tbaa !806
  tail call void @llvm.dbg.value(metadata !{i32 %shl}, i64 0, metadata !245), !dbg !965
  tail call void @llvm.dbg.value(metadata !33, i64 0, metadata !244), !dbg !966
  %cmp28 = icmp sgt i32 %0, 0, !dbg !966
  br i1 %cmp28, label %for.body.lr.ph, label %for.end, !dbg !966

for.body.lr.ph:                                   ; preds = %entry
  %sub = add nsw i32 %0, -1, !dbg !965
  %shl = shl i32 1, %sub, !dbg !965
  %byte_buf = getelementptr inbounds %struct.Bitstream* %currStream, i64 0, i32 2, !dbg !968
  %bitpattern = getelementptr inbounds %struct.syntaxelement* %se, i64 0, i32 5, !dbg !970
  %bits_to_go = getelementptr inbounds %struct.Bitstream* %currStream, i64 0, i32 1, !dbg !971
  %byte_pos = getelementptr inbounds %struct.Bitstream* %currStream, i64 0, i32 0, !dbg !972
  %streamBuffer = getelementptr inbounds %struct.Bitstream* %currStream, i64 0, i32 9, !dbg !972
  %.pre = load i8* %byte_buf, align 1, !dbg !968, !tbaa !807
  br label %for.body, !dbg !966

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %1 = phi i8 [ %.pre, %for.body.lr.ph ], [ %7, %for.inc ], !dbg !968
  %mask.030 = phi i32 [ %shl, %for.body.lr.ph ], [ %shr, %for.inc ]
  %i.029 = phi i32 [ 0, %for.body.lr.ph ], [ %inc15, %for.inc ]
  %shl2 = shl i8 %1, 1, !dbg !968
  store i8 %shl2, i8* %byte_buf, align 1, !dbg !968, !tbaa !807
  %2 = load i32* %bitpattern, align 4, !dbg !970, !tbaa !806
  %and = and i32 %2, %mask.030, !dbg !970
  %tobool = icmp eq i32 %and, 0, !dbg !970
  br i1 %tobool, label %if.end, label %if.then, !dbg !970

if.then:                                          ; preds = %for.body
  %or = or i8 %shl2, 1, !dbg !974
  store i8 %or, i8* %byte_buf, align 1, !dbg !974, !tbaa !807
  br label %if.end, !dbg !974

if.end:                                           ; preds = %for.body, %if.then
  %3 = phi i8 [ %or, %if.then ], [ %shl2, %for.body ]
  %4 = load i32* %bits_to_go, align 4, !dbg !971, !tbaa !806
  %dec = add nsw i32 %4, -1, !dbg !971
  store i32 %dec, i32* %bits_to_go, align 4, !dbg !971, !tbaa !806
  %shr = lshr i32 %mask.030, 1, !dbg !975
  tail call void @llvm.dbg.value(metadata !{i32 %shr}, i64 0, metadata !245), !dbg !975
  %cmp8 = icmp eq i32 %dec, 0, !dbg !976
  br i1 %cmp8, label %if.then10, label %for.inc, !dbg !976

if.then10:                                        ; preds = %if.end
  store i32 8, i32* %bits_to_go, align 4, !dbg !977, !tbaa !806
  %5 = load i32* %byte_pos, align 4, !dbg !972, !tbaa !806
  %inc = add nsw i32 %5, 1, !dbg !972
  store i32 %inc, i32* %byte_pos, align 4, !dbg !972, !tbaa !806
  %idxprom = sext i32 %5 to i64, !dbg !972
  %6 = load i8** %streamBuffer, align 8, !dbg !972, !tbaa !810
  %arrayidx = getelementptr inbounds i8* %6, i64 %idxprom, !dbg !972
  store i8 %3, i8* %arrayidx, align 1, !dbg !972, !tbaa !807
  store i8 0, i8* %byte_buf, align 1, !dbg !978, !tbaa !807
  br label %for.inc, !dbg !979

for.inc:                                          ; preds = %if.end, %if.then10
  %7 = phi i8 [ %3, %if.end ], [ 0, %if.then10 ]
  %inc15 = add nsw i32 %i.029, 1, !dbg !966
  tail call void @llvm.dbg.value(metadata !{i32 %inc15}, i64 0, metadata !244), !dbg !966
  %8 = load i32* %len, align 4, !dbg !966, !tbaa !806
  %cmp = icmp slt i32 %inc15, %8, !dbg !966
  br i1 %cmp, label %for.body, label %for.end, !dbg !966

for.end:                                          ; preds = %for.inc, %entry
  ret void, !dbg !980
}
