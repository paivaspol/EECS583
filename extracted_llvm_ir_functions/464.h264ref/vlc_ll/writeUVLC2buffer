define void @writeUVLC2buffer(%struct.syntaxelement* nocapture %se, %struct.Bitstream* nocapture %currStream) #0 {
entry:
  %len = getelementptr inbounds %struct.syntaxelement* %se, i64 0, i32 3
  %0 = load i32* %len, align 4, !tbaa !0
  %cmp28 = icmp sgt i32 %0, 0
  br i1 %cmp28, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %sub = add nsw i32 %0, -1
  %shl = shl i32 1, %sub
  %byte_buf = getelementptr inbounds %struct.Bitstream* %currStream, i64 0, i32 2
  %bitpattern = getelementptr inbounds %struct.syntaxelement* %se, i64 0, i32 5
  %bits_to_go = getelementptr inbounds %struct.Bitstream* %currStream, i64 0, i32 1
  %byte_pos = getelementptr inbounds %struct.Bitstream* %currStream, i64 0, i32 0
  %streamBuffer = getelementptr inbounds %struct.Bitstream* %currStream, i64 0, i32 9
  %.pre = load i8* %byte_buf, align 1, !tbaa !1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %1 = phi i8 [ %.pre, %for.body.lr.ph ], [ %7, %for.inc ]
  %mask.030 = phi i32 [ %shl, %for.body.lr.ph ], [ %shr, %for.inc ]
  %i.029 = phi i32 [ 0, %for.body.lr.ph ], [ %inc15, %for.inc ]
  %shl2 = shl i8 %1, 1
  store i8 %shl2, i8* %byte_buf, align 1, !tbaa !1
  %2 = load i32* %bitpattern, align 4, !tbaa !0
  %and = and i32 %2, %mask.030
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  %or = or i8 %shl2, 1
  store i8 %or, i8* %byte_buf, align 1, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %for.body, %if.then
  %3 = phi i8 [ %or, %if.then ], [ %shl2, %for.body ]
  %4 = load i32* %bits_to_go, align 4, !tbaa !0
  %dec = add nsw i32 %4, -1
  store i32 %dec, i32* %bits_to_go, align 4, !tbaa !0
  %shr = lshr i32 %mask.030, 1
  %cmp8 = icmp eq i32 %dec, 0
  br i1 %cmp8, label %if.then10, label %for.inc

if.then10:                                        ; preds = %if.end
  store i32 8, i32* %bits_to_go, align 4, !tbaa !0
  %5 = load i32* %byte_pos, align 4, !tbaa !0
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %byte_pos, align 4, !tbaa !0
  %idxprom = sext i32 %5 to i64
  %6 = load i8** %streamBuffer, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds i8* %6, i64 %idxprom
  store i8 %3, i8* %arrayidx, align 1, !tbaa !1
  store i8 0, i8* %byte_buf, align 1, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.then10
  %7 = phi i8 [ %3, %if.end ], [ 0, %if.then10 ]
  %inc15 = add nsw i32 %i.029, 1
  %8 = load i32* %len, align 4, !tbaa !0
  %cmp = icmp slt i32 %inc15, %8
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %entry
  ret void
}
