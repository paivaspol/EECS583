define void @AppendTmpbits2Buf(%struct.Bitstream* nocapture %dest, %struct.Bitstream* nocapture %source) #0 {
entry:
  %byte_pos = getelementptr inbounds %struct.Bitstream* %source, i64 0, i32 0
  %0 = load i32* %byte_pos, align 4, !tbaa !3
  %cmp113 = icmp sgt i32 %0, 0
  br i1 %cmp113, label %for.cond1.preheader.lr.ph, label %for.end27

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %byte_buf = getelementptr inbounds %struct.Bitstream* %dest, i64 0, i32 2
  %streamBuffer = getelementptr inbounds %struct.Bitstream* %source, i64 0, i32 9
  %bits_to_go = getelementptr inbounds %struct.Bitstream* %dest, i64 0, i32 1
  %byte_pos18 = getelementptr inbounds %struct.Bitstream* %dest, i64 0, i32 0
  %streamBuffer20 = getelementptr inbounds %struct.Bitstream* %dest, i64 0, i32 9
  %.pre116.pre = load i8* %byte_buf, align 1, !tbaa !1
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond1.preheader.lr.ph, %for.inc25
  %.pre116 = phi i8 [ %.pre116.pre, %for.cond1.preheader.lr.ph ], [ %8, %for.inc25 ]
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next, %for.inc25 ]
  br label %for.body3

for.body3:                                        ; preds = %for.inc, %for.cond1.preheader
  %1 = phi i8 [ %.pre116, %for.cond1.preheader ], [ %8, %for.inc ]
  %mask.0112 = phi i32 [ 128, %for.cond1.preheader ], [ %shr107, %for.inc ]
  %j.0111 = phi i32 [ 0, %for.cond1.preheader ], [ %inc24, %for.inc ]
  %shl = shl i8 %1, 1
  store i8 %shl, i8* %byte_buf, align 1, !tbaa !1
  %2 = load i8** %streamBuffer, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i8* %2, i64 %indvars.iv
  %3 = load i8* %arrayidx, align 1, !tbaa !1
  %conv5 = zext i8 %3 to i32
  %and = and i32 %conv5, %mask.0112
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body3
  %or = or i8 %shl, 1
  store i8 %or, i8* %byte_buf, align 1, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %for.body3, %if.then
  %4 = phi i8 [ %or, %if.then ], [ %shl, %for.body3 ]
  %5 = load i32* %bits_to_go, align 4, !tbaa !3
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %bits_to_go, align 4, !tbaa !3
  %shr107 = lshr i32 %mask.0112, 1
  %cmp13 = icmp eq i32 %dec, 0
  br i1 %cmp13, label %if.then15, label %for.inc

if.then15:                                        ; preds = %if.end
  store i32 8, i32* %bits_to_go, align 4, !tbaa !3
  %6 = load i32* %byte_pos18, align 4, !tbaa !3
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %byte_pos18, align 4, !tbaa !3
  %idxprom19 = sext i32 %6 to i64
  %7 = load i8** %streamBuffer20, align 8, !tbaa !0
  %arrayidx21 = getelementptr inbounds i8* %7, i64 %idxprom19
  store i8 %4, i8* %arrayidx21, align 1, !tbaa !1
  store i8 0, i8* %byte_buf, align 1, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.then15
  %8 = phi i8 [ %4, %if.end ], [ 0, %if.then15 ]
  %inc24 = add nsw i32 %j.0111, 1
  %exitcond115 = icmp eq i32 %inc24, 8
  br i1 %exitcond115, label %for.inc25, label %for.body3

for.inc25:                                        ; preds = %for.inc
  %indvars.iv.next = add i64 %indvars.iv, 1
  %9 = load i32* %byte_pos, align 4, !tbaa !3
  %10 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %10, %9
  br i1 %cmp, label %for.cond1.preheader, label %for.end27

for.end27:                                        ; preds = %for.inc25, %entry
  %bits_to_go28 = getelementptr inbounds %struct.Bitstream* %source, i64 0, i32 1
  %11 = load i32* %bits_to_go28, align 4, !tbaa !3
  %sub = sub i32 8, %11
  %cmp29 = icmp sgt i32 %sub, 0
  br i1 %cmp29, label %for.body38.lr.ph, label %if.end75

for.body38.lr.ph:                                 ; preds = %for.end27
  %sub32 = add nsw i32 %sub, -1
  %shl33 = shl i32 1, %sub32
  %byte_buf39 = getelementptr inbounds %struct.Bitstream* %dest, i64 0, i32 2
  %byte_buf43 = getelementptr inbounds %struct.Bitstream* %source, i64 0, i32 2
  %bits_to_go54 = getelementptr inbounds %struct.Bitstream* %dest, i64 0, i32 1
  %byte_pos65 = getelementptr inbounds %struct.Bitstream* %dest, i64 0, i32 0
  %streamBuffer68 = getelementptr inbounds %struct.Bitstream* %dest, i64 0, i32 9
  %.pre = load i8* %byte_buf39, align 1, !tbaa !1
  br label %for.body38

for.body38:                                       ; preds = %for.inc72, %for.body38.lr.ph
  %12 = phi i8 [ %.pre, %for.body38.lr.ph ], [ %18, %for.inc72 ]
  %mask.1.in110 = phi i32 [ %shl33, %for.body38.lr.ph ], [ %shr57106, %for.inc72 ]
  %j.1109 = phi i32 [ 0, %for.body38.lr.ph ], [ %inc73, %for.inc72 ]
  %shl41 = shl i8 %12, 1
  store i8 %shl41, i8* %byte_buf39, align 1, !tbaa !1
  %13 = load i8* %byte_buf43, align 1, !tbaa !1
  %conv44 = zext i8 %13 to i32
  %conv45 = and i32 %mask.1.in110, 255
  %and46 = and i32 %conv44, %conv45
  %tobool47 = icmp eq i32 %and46, 0
  br i1 %tobool47, label %if.end53, label %if.then48

if.then48:                                        ; preds = %for.body38
  %or51 = or i8 %shl41, 1
  store i8 %or51, i8* %byte_buf39, align 1, !tbaa !1
  br label %if.end53

if.end53:                                         ; preds = %for.body38, %if.then48
  %14 = phi i8 [ %or51, %if.then48 ], [ %shl41, %for.body38 ]
  %15 = load i32* %bits_to_go54, align 4, !tbaa !3
  %dec55 = add nsw i32 %15, -1
  store i32 %dec55, i32* %bits_to_go54, align 4, !tbaa !3
  %shr57106 = lshr i32 %conv45, 1
  %cmp60 = icmp eq i32 %dec55, 0
  br i1 %cmp60, label %if.then62, label %for.inc72

if.then62:                                        ; preds = %if.end53
  store i32 8, i32* %bits_to_go54, align 4, !tbaa !3
  %16 = load i32* %byte_pos65, align 4, !tbaa !3
  %inc66 = add nsw i32 %16, 1
  store i32 %inc66, i32* %byte_pos65, align 4, !tbaa !3
  %idxprom67 = sext i32 %16 to i64
  %17 = load i8** %streamBuffer68, align 8, !tbaa !0
  %arrayidx69 = getelementptr inbounds i8* %17, i64 %idxprom67
  store i8 %14, i8* %arrayidx69, align 1, !tbaa !1
  store i8 0, i8* %byte_buf39, align 1, !tbaa !1
  br label %for.inc72

for.inc72:                                        ; preds = %if.end53, %if.then62
  %18 = phi i8 [ %14, %if.end53 ], [ 0, %if.then62 ]
  %inc73 = add nsw i32 %j.1109, 1
  %exitcond = icmp eq i32 %inc73, %sub
  br i1 %exitcond, label %if.end75, label %for.body38

if.end75:                                         ; preds = %for.inc72, %for.end27
  ret void
}
