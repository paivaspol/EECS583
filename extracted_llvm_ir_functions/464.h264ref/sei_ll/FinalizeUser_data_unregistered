define void @FinalizeUser_data_unregistered() #0 {
entry:
  %sym = alloca %struct.syntaxelement, align 8
  %0 = bitcast %struct.syntaxelement* %sym to i8*, !dbg !1570
  call void @llvm.lifetime.start(i64 48, i8* %0) #6, !dbg !1570
  call void @llvm.dbg.declare(metadata !{%struct.syntaxelement* %sym}, metadata !282), !dbg !1570
  %1 = load %struct.Bitstream** getelementptr inbounds (%struct.user_data_unregistered_information_struct* @seiUser_data_unregistered, i64 0, i32 2), align 8, !dbg !1571, !tbaa !926
  call void @llvm.dbg.value(metadata !{%struct.Bitstream* %1}, i64 0, metadata !283), !dbg !1571
  %type = getelementptr inbounds %struct.syntaxelement* %sym, i64 0, i32 0, !dbg !1572
  store i32 0, i32* %type, align 8, !dbg !1572, !tbaa !937
  %mapping = getelementptr inbounds %struct.syntaxelement* %sym, i64 0, i32 8, !dbg !1573
  store void (i32, i32, i32*, i32*)* @ue_linfo, void (i32, i32, i32*, i32*)** %mapping, align 8, !dbg !1573, !tbaa !926
  call void @llvm.dbg.value(metadata !60, i64 0, metadata !281), !dbg !1574
  %2 = load i32* getelementptr inbounds (%struct.user_data_unregistered_information_struct* @seiUser_data_unregistered, i64 0, i32 1), align 8, !dbg !1574, !tbaa !937
  %cmp41 = icmp sgt i32 %2, 0, !dbg !1574
  br i1 %cmp41, label %for.body.lr.ph, label %for.end, !dbg !1574

for.body.lr.ph:                                   ; preds = %entry
  %bitpattern = getelementptr inbounds %struct.syntaxelement* %sym, i64 0, i32 5, !dbg !1576
  %len = getelementptr inbounds %struct.syntaxelement* %sym, i64 0, i32 3, !dbg !1578
  br label %for.body, !dbg !1574

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %3 = load i8** getelementptr inbounds (%struct.user_data_unregistered_information_struct* @seiUser_data_unregistered, i64 0, i32 0), align 8, !dbg !1576, !tbaa !926
  %arrayidx = getelementptr inbounds i8* %3, i64 %indvars.iv, !dbg !1576
  %4 = load i8* %arrayidx, align 1, !dbg !1576, !tbaa !927
  %conv = sext i8 %4 to i32, !dbg !1576
  store i32 %conv, i32* %bitpattern, align 4, !dbg !1576, !tbaa !937
  store i32 8, i32* %len, align 4, !dbg !1578, !tbaa !937
  %call = call i32 @writeSyntaxElement2Buf_Fixed(%struct.syntaxelement* %sym, %struct.Bitstream* %1) #8, !dbg !1579
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1574
  %5 = load i32* getelementptr inbounds (%struct.user_data_unregistered_information_struct* @seiUser_data_unregistered, i64 0, i32 1), align 8, !dbg !1574, !tbaa !937
  %6 = trunc i64 %indvars.iv.next to i32, !dbg !1574
  %cmp = icmp slt i32 %6, %5, !dbg !1574
  br i1 %cmp, label %for.body, label %for.end, !dbg !1574

for.end:                                          ; preds = %for.body, %entry
  %bits_to_go = getelementptr inbounds %struct.Bitstream* %1, i64 0, i32 1, !dbg !1580
  %7 = load i32* %bits_to_go, align 4, !dbg !1580, !tbaa !937
  %cmp1 = icmp eq i32 %7, 8, !dbg !1580
  br i1 %cmp1, label %for.end.if.end24_crit_edge, label %if.then, !dbg !1580

for.end.if.end24_crit_edge:                       ; preds = %for.end
  %byte_pos25.pre = getelementptr inbounds %struct.Bitstream* %1, i64 0, i32 0, !dbg !1581
  br label %if.end24, !dbg !1580

if.then:                                          ; preds = %for.end
  %byte_buf = getelementptr inbounds %struct.Bitstream* %1, i64 0, i32 2, !dbg !1582
  %8 = load i8* %byte_buf, align 1, !dbg !1582, !tbaa !927
  %shl = shl i8 %8, 1, !dbg !1582
  %or = or i8 %shl, 1, !dbg !1584
  store i8 %or, i8* %byte_buf, align 1, !dbg !1584, !tbaa !927
  %dec = add nsw i32 %7, -1, !dbg !1585
  store i32 %dec, i32* %bits_to_go, align 4, !dbg !1585, !tbaa !937
  %cmp10 = icmp eq i32 %dec, 0, !dbg !1586
  br i1 %cmp10, label %if.end, label %if.then12, !dbg !1586

if.then12:                                        ; preds = %if.then
  %conv15 = zext i8 %or to i32, !dbg !1586
  %shl16 = shl i32 %conv15, %dec, !dbg !1586
  %conv17 = trunc i32 %shl16 to i8, !dbg !1586
  store i8 %conv17, i8* %byte_buf, align 1, !dbg !1586, !tbaa !927
  br label %if.end, !dbg !1586

if.end:                                           ; preds = %if.then, %if.then12
  %9 = phi i8 [ %or, %if.then ], [ %conv17, %if.then12 ]
  store i32 8, i32* %bits_to_go, align 4, !dbg !1587, !tbaa !937
  %byte_pos = getelementptr inbounds %struct.Bitstream* %1, i64 0, i32 0, !dbg !1588
  %10 = load i32* %byte_pos, align 4, !dbg !1588, !tbaa !937
  %inc20 = add nsw i32 %10, 1, !dbg !1588
  store i32 %inc20, i32* %byte_pos, align 4, !dbg !1588, !tbaa !937
  %idxprom21 = sext i32 %10 to i64, !dbg !1588
  %streamBuffer = getelementptr inbounds %struct.Bitstream* %1, i64 0, i32 9, !dbg !1588
  %11 = load i8** %streamBuffer, align 8, !dbg !1588, !tbaa !926
  %arrayidx22 = getelementptr inbounds i8* %11, i64 %idxprom21, !dbg !1588
  store i8 %9, i8* %arrayidx22, align 1, !dbg !1588, !tbaa !927
  store i8 0, i8* %byte_buf, align 1, !dbg !1589, !tbaa !927
  br label %if.end24, !dbg !1590

if.end24:                                         ; preds = %for.end.if.end24_crit_edge, %if.end
  %byte_pos25.pre-phi = phi i32* [ %byte_pos25.pre, %for.end.if.end24_crit_edge ], [ %byte_pos, %if.end ], !dbg !1581
  %12 = load i32* %byte_pos25.pre-phi, align 4, !dbg !1581, !tbaa !937
  store i32 %12, i32* getelementptr inbounds (%struct.user_data_unregistered_information_struct* @seiUser_data_unregistered, i64 0, i32 3), align 8, !dbg !1581, !tbaa !937
  call void @llvm.lifetime.end(i64 48, i8* %0) #6, !dbg !1591
  ret void, !dbg !1591
}
