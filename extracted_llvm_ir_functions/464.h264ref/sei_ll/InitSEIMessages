define void @InitSEIMessages() #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %if.end, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %if.end ]
  %call = tail call noalias i8* @malloc(i64 65496) #6
  %data = getelementptr inbounds [2 x %struct.sei_struct]* @sei_message, i64 0, i64 %indvars.iv, i32 3
  store i8* %call, i8** %data, align 8, !tbaa !0
  %cmp4 = icmp eq i8* %call, null
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  tail call void @no_mem_exit(i8* getelementptr inbounds ([37 x i8]* @.str, i64 0, i64 0)) #6
  %.pre = load i8** %data, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %0 = phi i8* [ %.pre, %if.then ], [ %call, %for.body ]
  %subPacketType = getelementptr inbounds [2 x %struct.sei_struct]* @sei_message, i64 0, i64 %indvars.iv, i32 2
  store i8 5, i8* %subPacketType, align 8, !tbaa !1
  tail call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 65496, i32 1, i1 false) #4
  %payloadSize.i = getelementptr inbounds [2 x %struct.sei_struct]* @sei_message, i64 0, i64 %indvars.iv, i32 1
  store i32 0, i32* %payloadSize.i, align 4, !tbaa !3
  %available.i = getelementptr inbounds [2 x %struct.sei_struct]* @sei_message, i64 0, i64 %indvars.iv, i32 0
  store i32 0, i32* %available.i, align 8, !tbaa !1
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv16 = trunc i64 %indvars.iv.next to i32
  %exitcond17 = icmp eq i32 %lftr.wideiv16, 2
  br i1 %exitcond17, label %for.end, label %for.body

for.end:                                          ; preds = %if.end
  store %struct.Bitstream* null, %struct.Bitstream** getelementptr inbounds (%struct.spare_picture_struct* @seiSparePicturePayload, i64 0, i32 3), align 8, !tbaa !0
  tail call void @InitSparePicture() #7
  tail call void @InitSubseqChar() #7
  %1 = load %struct.InputParameters** @input, align 8, !tbaa !0
  %NumFramesInELSubSeq = getelementptr inbounds %struct.InputParameters* %1, i64 0, i32 99
  %2 = load i32* %NumFramesInELSubSeq, align 4, !tbaa !3
  %cmp7 = icmp eq i32 %2, 0
  br i1 %cmp7, label %if.end9, label %if.then8

if.then8:                                         ; preds = %for.end
  store i32 1, i32* @seiHasSubseqLayerInfo, align 4, !tbaa !1
  store i32 0, i32* getelementptr inbounds (%struct.subseq_layer_information_struct* @seiSubseqLayerInfo, i64 0, i32 3), align 4, !tbaa !3
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %if.then8
  %indvars.iv.i = phi i64 [ 0, %if.then8 ], [ %indvars.iv.next.i, %for.body.i ]
  %arrayidx.i = getelementptr inbounds %struct.subseq_layer_information_struct* @seiSubseqLayerInfo, i64 0, i32 0, i64 %indvars.iv.i
  store i16 0, i16* %arrayidx.i, align 2, !tbaa !4
  %arrayidx2.i = getelementptr inbounds %struct.subseq_layer_information_struct* @seiSubseqLayerInfo, i64 0, i32 1, i64 %indvars.iv.i
  store i16 0, i16* %arrayidx2.i, align 2, !tbaa !4
  %3 = load i32* getelementptr inbounds (%struct.subseq_layer_information_struct* @seiSubseqLayerInfo, i64 0, i32 3), align 4, !tbaa !3
  %inc.i = add nsw i32 %3, 1
  store i32 %inc.i, i32* getelementptr inbounds (%struct.subseq_layer_information_struct* @seiSubseqLayerInfo, i64 0, i32 3), align 4, !tbaa !3
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 2
  br i1 %exitcond, label %if.end9, label %for.body.i

if.end9:                                          ; preds = %for.body.i, %for.end
  tail call void @InitSceneInformation() #7
  tail call void @InitPanScanRectInfo() #7
  tail call void @InitUser_data_unregistered() #7
  tail call void @InitUser_data_registered_itu_t_t35() #7
  tail call void @InitRandomAccess() #7
  ret void
}
