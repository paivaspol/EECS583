define void @FinalizeSubseqChar() #0 {
entry:
  %sym = alloca %struct.syntaxelement, align 8
  %0 = bitcast %struct.syntaxelement* %sym to i8*
  call void @llvm.lifetime.start(i64 48, i8* %0) #4
  %1 = load %struct.Bitstream** getelementptr inbounds (%struct.subseq_char_information_struct* @seiSubseqChar, i64 0, i32 10), align 8, !tbaa !0
  %type = getelementptr inbounds %struct.syntaxelement* %sym, i64 0, i32 0
  store i32 0, i32* %type, align 8, !tbaa !3
  %mapping = getelementptr inbounds %struct.syntaxelement* %sym, i64 0, i32 8
  store void (i32, i32, i32*, i32*)* @ue_linfo, void (i32, i32, i32*, i32*)** %mapping, align 8, !tbaa !0
  %2 = load i32* getelementptr inbounds (%struct.subseq_char_information_struct* @seiSubseqChar, i64 0, i32 0), align 8, !tbaa !3
  %value1 = getelementptr inbounds %struct.syntaxelement* %sym, i64 0, i32 1
  store i32 %2, i32* %value1, align 4, !tbaa !3
  %call = call i32 @writeSyntaxElement2Buf_UVLC(%struct.syntaxelement* %sym, %struct.Bitstream* %1) #6
  %3 = load i32* getelementptr inbounds (%struct.subseq_char_information_struct* @seiSubseqChar, i64 0, i32 1), align 4, !tbaa !3
  store i32 %3, i32* %value1, align 4, !tbaa !3
  %call2 = call i32 @writeSyntaxElement2Buf_UVLC(%struct.syntaxelement* %sym, %struct.Bitstream* %1) #6
  %4 = load i32* getelementptr inbounds (%struct.subseq_char_information_struct* @seiSubseqChar, i64 0, i32 2), align 8, !tbaa !3
  %bitpattern = getelementptr inbounds %struct.syntaxelement* %sym, i64 0, i32 5
  store i32 %4, i32* %bitpattern, align 4, !tbaa !3
  %len = getelementptr inbounds %struct.syntaxelement* %sym, i64 0, i32 3
  store i32 1, i32* %len, align 4, !tbaa !3
  %call3 = call i32 @writeSyntaxElement2Buf_Fixed(%struct.syntaxelement* %sym, %struct.Bitstream* %1) #6
  %5 = load i64* bitcast (i32* getelementptr inbounds (%struct.subseq_char_information_struct* @seiSubseqChar, i64 0, i32 2) to i64*), align 8
  %6 = trunc i64 %5 to i32
  %tobool = icmp eq i32 %6, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %7 = lshr i64 %5, 32
  %8 = trunc i64 %7 to i32
  store i32 %8, i32* %bitpattern, align 4, !tbaa !3
  store i32 32, i32* %len, align 4, !tbaa !3
  %call6 = call i32 @writeSyntaxElement2Buf_Fixed(%struct.syntaxelement* %sym, %struct.Bitstream* %1) #6
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %9 = load i32* getelementptr inbounds (%struct.subseq_char_information_struct* @seiSubseqChar, i64 0, i32 4), align 8, !tbaa !3
  store i32 %9, i32* %bitpattern, align 4, !tbaa !3
  store i32 1, i32* %len, align 4, !tbaa !3
  %call9 = call i32 @writeSyntaxElement2Buf_Fixed(%struct.syntaxelement* %sym, %struct.Bitstream* %1) #6
  %10 = load i64* bitcast (i32* getelementptr inbounds (%struct.subseq_char_information_struct* @seiSubseqChar, i64 0, i32 4) to i64*), align 8
  %11 = trunc i64 %10 to i32
  %tobool10 = icmp eq i32 %11, 0
  br i1 %tobool10, label %if.end18, label %if.then11

if.then11:                                        ; preds = %if.end
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  store i32 %13, i32* %bitpattern, align 4, !tbaa !3
  store i32 16, i32* %len, align 4, !tbaa !3
  %call14 = call i32 @writeSyntaxElement2Buf_Fixed(%struct.syntaxelement* %sym, %struct.Bitstream* %1) #6
  %14 = load i32* getelementptr inbounds (%struct.subseq_char_information_struct* @seiSubseqChar, i64 0, i32 6), align 8, !tbaa !3
  store i32 %14, i32* %bitpattern, align 4, !tbaa !3
  store i32 16, i32* %len, align 4, !tbaa !3
  %call17 = call i32 @writeSyntaxElement2Buf_Fixed(%struct.syntaxelement* %sym, %struct.Bitstream* %1) #6
  br label %if.end18

if.end18:                                         ; preds = %if.end, %if.then11
  %15 = load i32* getelementptr inbounds (%struct.subseq_char_information_struct* @seiSubseqChar, i64 0, i32 7), align 4, !tbaa !3
  store i32 %15, i32* %value1, align 4, !tbaa !3
  %call20 = call i32 @writeSyntaxElement2Buf_UVLC(%struct.syntaxelement* %sym, %struct.Bitstream* %1) #6
  %16 = load i32* getelementptr inbounds (%struct.subseq_char_information_struct* @seiSubseqChar, i64 0, i32 7), align 4, !tbaa !3
  %cmp77 = icmp sgt i32 %16, 0
  br i1 %cmp77, label %for.body, label %for.end

for.body:                                         ; preds = %if.end18, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.end18 ]
  %arrayidx = getelementptr inbounds %struct.subseq_char_information_struct* @seiSubseqChar, i64 0, i32 8, i64 %indvars.iv
  %17 = load i32* %arrayidx, align 4, !tbaa !3
  store i32 %17, i32* %value1, align 4, !tbaa !3
  %call22 = call i32 @writeSyntaxElement2Buf_UVLC(%struct.syntaxelement* %sym, %struct.Bitstream* %1) #6
  %arrayidx24 = getelementptr inbounds %struct.subseq_char_information_struct* @seiSubseqChar, i64 0, i32 9, i64 %indvars.iv
  %18 = load i32* %arrayidx24, align 4, !tbaa !3
  store i32 %18, i32* %value1, align 4, !tbaa !3
  %call26 = call i32 @writeSyntaxElement2Buf_UVLC(%struct.syntaxelement* %sym, %struct.Bitstream* %1) #6
  %indvars.iv.next = add i64 %indvars.iv, 1
  %19 = load i32* getelementptr inbounds (%struct.subseq_char_information_struct* @seiSubseqChar, i64 0, i32 7), align 4, !tbaa !3
  %20 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %20, %19
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %if.end18
  %bits_to_go = getelementptr inbounds %struct.Bitstream* %1, i64 0, i32 1
  %21 = load i32* %bits_to_go, align 4, !tbaa !3
  %cmp27 = icmp eq i32 %21, 8
  br i1 %cmp27, label %for.end.if.end50_crit_edge, label %if.then28

for.end.if.end50_crit_edge:                       ; preds = %for.end
  %byte_pos51.pre = getelementptr inbounds %struct.Bitstream* %1, i64 0, i32 0
  br label %if.end50

if.then28:                                        ; preds = %for.end
  %byte_buf = getelementptr inbounds %struct.Bitstream* %1, i64 0, i32 2
  %22 = load i8* %byte_buf, align 1, !tbaa !1
  %shl = shl i8 %22, 1
  %or = or i8 %shl, 1
  store i8 %or, i8* %byte_buf, align 1, !tbaa !1
  %dec = add nsw i32 %21, -1
  store i32 %dec, i32* %bits_to_go, align 4, !tbaa !3
  %cmp35 = icmp eq i32 %dec, 0
  br i1 %cmp35, label %if.end43, label %if.then37

if.then37:                                        ; preds = %if.then28
  %conv40 = zext i8 %or to i32
  %shl41 = shl i32 %conv40, %dec
  %conv42 = trunc i32 %shl41 to i8
  store i8 %conv42, i8* %byte_buf, align 1, !tbaa !1
  br label %if.end43

if.end43:                                         ; preds = %if.then28, %if.then37
  %23 = phi i8 [ %or, %if.then28 ], [ %conv42, %if.then37 ]
  store i32 8, i32* %bits_to_go, align 4, !tbaa !3
  %byte_pos = getelementptr inbounds %struct.Bitstream* %1, i64 0, i32 0
  %24 = load i32* %byte_pos, align 4, !tbaa !3
  %inc46 = add nsw i32 %24, 1
  store i32 %inc46, i32* %byte_pos, align 4, !tbaa !3
  %idxprom47 = sext i32 %24 to i64
  %streamBuffer = getelementptr inbounds %struct.Bitstream* %1, i64 0, i32 9
  %25 = load i8** %streamBuffer, align 8, !tbaa !0
  %arrayidx48 = getelementptr inbounds i8* %25, i64 %idxprom47
  store i8 %23, i8* %arrayidx48, align 1, !tbaa !1
  store i8 0, i8* %byte_buf, align 1, !tbaa !1
  br label %if.end50

if.end50:                                         ; preds = %for.end.if.end50_crit_edge, %if.end43
  %byte_pos51.pre-phi = phi i32* [ %byte_pos51.pre, %for.end.if.end50_crit_edge ], [ %byte_pos, %if.end43 ]
  %26 = load i32* %byte_pos51.pre-phi, align 4, !tbaa !3
  store i32 %26, i32* getelementptr inbounds (%struct.subseq_char_information_struct* @seiSubseqChar, i64 0, i32 11), align 8, !tbaa !3
  call void @llvm.lifetime.end(i64 48, i8* %0) #4
  ret void
}
