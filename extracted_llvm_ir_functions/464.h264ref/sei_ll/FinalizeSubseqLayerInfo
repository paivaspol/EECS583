define void @FinalizeSubseqLayerInfo() #0 {
entry:
  store i32 0, i32* getelementptr inbounds (%struct.subseq_layer_information_struct* @seiSubseqLayerInfo, i64 0, i32 4), align 4, !tbaa !3
  %0 = load i32* getelementptr inbounds (%struct.subseq_layer_information_struct* @seiSubseqLayerInfo, i64 0, i32 3), align 4, !tbaa !3
  %cmp16 = icmp sgt i32 %0, 0
  br i1 %cmp16, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv20 = phi i64 [ %indvars.iv.next21, %for.body ], [ 0, %entry ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds %struct.subseq_layer_information_struct* @seiSubseqLayerInfo, i64 0, i32 0, i64 %indvars.iv20
  %1 = load i16* %arrayidx, align 2, !tbaa !4
  %arrayidx2 = getelementptr inbounds %struct.subseq_layer_information_struct* @seiSubseqLayerInfo, i64 0, i32 2, i64 %indvars.iv
  %2 = bitcast i8* %arrayidx2 to i16*
  store i16 %1, i16* %2, align 4, !tbaa !4
  %3 = or i64 %indvars.iv, 2
  %arrayidx4 = getelementptr inbounds %struct.subseq_layer_information_struct* @seiSubseqLayerInfo, i64 0, i32 1, i64 %indvars.iv20
  %4 = load i16* %arrayidx4, align 2, !tbaa !4
  %arrayidx6 = getelementptr inbounds %struct.subseq_layer_information_struct* @seiSubseqLayerInfo, i64 0, i32 2, i64 %3
  %5 = bitcast i8* %arrayidx6 to i16*
  store i16 %4, i16* %5, align 2, !tbaa !4
  %indvars.iv.next = add i64 %indvars.iv, 4
  %6 = load i32* getelementptr inbounds (%struct.subseq_layer_information_struct* @seiSubseqLayerInfo, i64 0, i32 4), align 4, !tbaa !3
  %add8 = add nsw i32 %6, 4
  store i32 %add8, i32* getelementptr inbounds (%struct.subseq_layer_information_struct* @seiSubseqLayerInfo, i64 0, i32 4), align 4, !tbaa !3
  %indvars.iv.next21 = add i64 %indvars.iv20, 1
  %7 = load i32* getelementptr inbounds (%struct.subseq_layer_information_struct* @seiSubseqLayerInfo, i64 0, i32 3), align 4, !tbaa !3
  %8 = trunc i64 %indvars.iv.next21 to i32
  %cmp = icmp slt i32 %8, %7
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  ret void
}
