define void @FinalizeSpareMBMap() #0 {
entry:
  %sym = alloca %struct.syntaxelement, align 8
  %0 = load %struct.ImageParameters** @img, align 8, !tbaa !0
  %number = getelementptr inbounds %struct.ImageParameters* %0, i64 0, i32 0
  %1 = load i32* %number, align 4, !tbaa !3
  %rem = srem i32 %1, 256
  %2 = bitcast %struct.syntaxelement* %sym to i8*
  call void @llvm.lifetime.start(i64 48, i8* %2) #4
  %type = getelementptr inbounds %struct.syntaxelement* %sym, i64 0, i32 0
  store i32 0, i32* %type, align 8, !tbaa !3
  %mapping = getelementptr inbounds %struct.syntaxelement* %sym, i64 0, i32 8
  store void (i32, i32, i32*, i32*)* @ue_linfo, void (i32, i32, i32*, i32*)** %mapping, align 8, !tbaa !0
  %3 = load %struct.Bitstream** getelementptr inbounds (%struct.spare_picture_struct* @seiSparePicturePayload, i64 0, i32 3), align 8, !tbaa !0
  %call = call noalias i8* @malloc(i64 48) #6
  %4 = bitcast i8* %call to %struct.Bitstream*
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @no_mem_exit(i8* getelementptr inbounds ([25 x i8]* @.str3, i64 0, i64 0)) #6
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call1 = call noalias i8* @malloc(i64 65496) #6
  %streamBuffer = getelementptr inbounds i8* %call, i64 32
  %5 = bitcast i8* %streamBuffer to i8**
  store i8* %call1, i8** %5, align 8, !tbaa !0
  %cmp3 = icmp eq i8* %call1, null
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  call void @no_mem_exit(i8* getelementptr inbounds ([39 x i8]* @.str4, i64 0, i64 0)) #6
  %.pre = load i8** %5, align 8, !tbaa !0
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end
  %6 = phi i8* [ %.pre, %if.then4 ], [ %call1, %if.end ]
  %bits_to_go = getelementptr inbounds i8* %call, i64 4
  %7 = bitcast i8* %bits_to_go to i32*
  store i32 8, i32* %7, align 4, !tbaa !3
  %byte_pos = bitcast i8* %call to i32*
  store i32 0, i32* %byte_pos, align 4, !tbaa !3
  %8 = getelementptr inbounds i8* %call, i64 8
  store i8 0, i8* %8, align 1, !tbaa !1
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 65496, i32 1, i1 false)
  %9 = load i32* getelementptr inbounds (%struct.spare_picture_struct* @seiSparePicturePayload, i64 0, i32 0), align 8, !tbaa !3
  %sub = sub nsw i32 %rem, %9
  %cmp7 = icmp slt i32 %sub, 0
  %add = add nsw i32 %sub, 256
  %add.sub = select i1 %cmp7, i32 %add, i32 %sub
  %value1 = getelementptr inbounds %struct.syntaxelement* %sym, i64 0, i32 1
  store i32 %add.sub, i32* %value1, align 4, !tbaa !3
  %call10 = call i32 @writeSyntaxElement2Buf_UVLC(%struct.syntaxelement* %sym, %struct.Bitstream* %4) #6
  %10 = load i32* getelementptr inbounds (%struct.spare_picture_struct* @seiSparePicturePayload, i64 0, i32 1), align 4, !tbaa !3
  %sub11 = add nsw i32 %10, -1
  store i32 %sub11, i32* %value1, align 4, !tbaa !3
  %call13 = call i32 @writeSyntaxElement2Buf_UVLC(%struct.syntaxelement* %sym, %struct.Bitstream* %4) #6
  call void @AppendTmpbits2Buf(%struct.Bitstream* %4, %struct.Bitstream* %3) #7
  %11 = load i32* %7, align 4, !tbaa !3
  %cmp15 = icmp eq i32 %11, 8
  br i1 %cmp15, label %if.end38, label %if.then16

if.then16:                                        ; preds = %if.end5
  %12 = load i8* %8, align 1, !tbaa !1
  %shl = shl i8 %12, 1
  %or = or i8 %shl, 1
  store i8 %or, i8* %8, align 1, !tbaa !1
  %dec = add nsw i32 %11, -1
  store i32 %dec, i32* %7, align 4, !tbaa !3
  %cmp24 = icmp eq i32 %dec, 0
  br i1 %cmp24, label %if.end32, label %if.then26

if.then26:                                        ; preds = %if.then16
  %conv29 = zext i8 %or to i32
  %shl30 = shl i32 %conv29, %dec
  %conv31 = trunc i32 %shl30 to i8
  store i8 %conv31, i8* %8, align 1, !tbaa !1
  br label %if.end32

if.end32:                                         ; preds = %if.then16, %if.then26
  %13 = phi i8 [ %or, %if.then16 ], [ %conv31, %if.then26 ]
  store i32 8, i32* %7, align 4, !tbaa !3
  %14 = load i32* %byte_pos, align 4, !tbaa !3
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %byte_pos, align 4, !tbaa !3
  %idxprom = sext i32 %14 to i64
  %15 = load i8** %5, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i8* %15, i64 %idxprom
  store i8 %13, i8* %arrayidx, align 1, !tbaa !1
  store i8 0, i8* %8, align 1, !tbaa !1
  br label %if.end38

if.end38:                                         ; preds = %if.end5, %if.end32
  %16 = load i32* %byte_pos, align 4, !tbaa !3
  store i32 %16, i32* getelementptr inbounds (%struct.spare_picture_struct* @seiSparePicturePayload, i64 0, i32 2), align 8, !tbaa !3
  store %struct.Bitstream* %4, %struct.Bitstream** getelementptr inbounds (%struct.spare_picture_struct* @seiSparePicturePayload, i64 0, i32 3), align 8, !tbaa !0
  %streamBuffer40 = getelementptr inbounds %struct.Bitstream* %3, i64 0, i32 9
  %17 = load i8** %streamBuffer40, align 8, !tbaa !0
  call void @free(i8* %17) #6
  %18 = bitcast %struct.Bitstream* %3 to i8*
  call void @free(i8* %18) #6
  call void @llvm.lifetime.end(i64 48, i8* %2) #4
  ret void
}
