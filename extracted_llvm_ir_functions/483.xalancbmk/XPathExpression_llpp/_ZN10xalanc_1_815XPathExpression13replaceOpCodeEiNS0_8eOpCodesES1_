define void @_ZN10xalanc_1_815XPathExpression13replaceOpCodeEiNS0_8eOpCodesES1_(%"class.xalanc_1_8::XPathExpression"* nocapture %this, i32 %theIndex, i32 %theOldOpCode, i32 %theNewOpCode) #0 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::XPathExpression"* %this}, i64 0, metadata !6267), !dbg !8652
  tail call void @llvm.dbg.value(metadata !{i32 %theIndex}, i64 0, metadata !6268), !dbg !8653
  tail call void @llvm.dbg.value(metadata !{i32 %theOldOpCode}, i64 0, metadata !6269), !dbg !8654
  tail call void @llvm.dbg.value(metadata !{i32 %theNewOpCode}, i64 0, metadata !6270), !dbg !8655
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::XPathExpression"* %this}, i64 0, metadata !8656), !dbg !8658
  %_M_finish.i.i = getelementptr inbounds %"class.xalanc_1_8::XPathExpression"* %this, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !8659
  %0 = load i32** %_M_finish.i.i, align 8, !dbg !8659, !tbaa !7842
  %_M_start.i.i = getelementptr inbounds %"class.xalanc_1_8::XPathExpression"* %this, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !8659
  %1 = load i32** %_M_start.i.i, align 8, !dbg !8659, !tbaa !7842
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %0 to i64, !dbg !8659
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %1 to i64, !dbg !8659
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i, !dbg !8659
  %sub.ptr.div.i2.i = lshr exact i64 %sub.ptr.sub.i.i, 2, !dbg !8659
  %conv.i = trunc i64 %sub.ptr.div.i2.i to i32, !dbg !8660
  %cmp = icmp sgt i32 %conv.i, %theIndex, !dbg !8657
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !8657

lor.lhs.false:                                    ; preds = %entry
  %conv = sext i32 %theIndex to i64, !dbg !8661
  tail call void @llvm.dbg.value(metadata !{i64 %conv}, i64 0, metadata !8662), !dbg !8663
  %add.ptr.i18 = getelementptr inbounds i32* %1, i64 %conv, !dbg !8664
  %2 = load i32* %add.ptr.i18, align 4, !dbg !8661, !tbaa !8474
  %cmp3 = icmp eq i32 %2, %theOldOpCode, !dbg !8661
  br i1 %cmp3, label %lor.lhs.false4, label %if.then, !dbg !8661

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  tail call void @llvm.dbg.value(metadata !{i32 %theOldOpCode}, i64 0, metadata !8665), !dbg !8667
  %add.i19 = add nsw i32 %theOldOpCode, 3, !dbg !8668
  tail call void @llvm.dbg.value(metadata !{i32 %add.i19}, i64 0, metadata !8665), !dbg !8668
  %3 = icmp ugt i32 %add.i19, 82, !dbg !8669
  br i1 %3, label %_ZN10xalanc_1_815getOpCodeLengthEi.exit24, label %if.else.i22, !dbg !8669

if.else.i22:                                      ; preds = %lor.lhs.false4
  %idxprom.i20 = sext i32 %add.i19 to i64, !dbg !8670
  %arrayidx.i21 = getelementptr inbounds [83 x i32]* @_ZN10xalanc_1_8L20theOpCodeLengthArrayE, i64 0, i64 %idxprom.i20, !dbg !8670
  %4 = load i32* %arrayidx.i21, align 4, !dbg !8670, !tbaa !8474
  br label %_ZN10xalanc_1_815getOpCodeLengthEi.exit24, !dbg !8670

_ZN10xalanc_1_815getOpCodeLengthEi.exit24:        ; preds = %lor.lhs.false4, %if.else.i22
  %retval.0.i23 = phi i32 [ %4, %if.else.i22 ], [ 0, %lor.lhs.false4 ]
  tail call void @llvm.dbg.value(metadata !{i32 %theNewOpCode}, i64 0, metadata !8671), !dbg !8673
  %add.i = add nsw i32 %theNewOpCode, 3, !dbg !8674
  tail call void @llvm.dbg.value(metadata !{i32 %add.i}, i64 0, metadata !8671), !dbg !8674
  %5 = icmp ugt i32 %add.i, 82, !dbg !8675
  br i1 %5, label %_ZN10xalanc_1_815getOpCodeLengthEi.exit, label %if.else.i, !dbg !8675

if.else.i:                                        ; preds = %_ZN10xalanc_1_815getOpCodeLengthEi.exit24
  %idxprom.i = sext i32 %add.i to i64, !dbg !8676
  %arrayidx.i = getelementptr inbounds [83 x i32]* @_ZN10xalanc_1_8L20theOpCodeLengthArrayE, i64 0, i64 %idxprom.i, !dbg !8676
  %6 = load i32* %arrayidx.i, align 4, !dbg !8676, !tbaa !8474
  br label %_ZN10xalanc_1_815getOpCodeLengthEi.exit, !dbg !8676

_ZN10xalanc_1_815getOpCodeLengthEi.exit:          ; preds = %_ZN10xalanc_1_815getOpCodeLengthEi.exit24, %if.else.i
  %retval.0.i = phi i32 [ %6, %if.else.i ], [ 0, %_ZN10xalanc_1_815getOpCodeLengthEi.exit24 ]
  %cmp7 = icmp eq i32 %retval.0.i23, %retval.0.i, !dbg !8672
  br i1 %cmp7, label %if.else, label %if.then, !dbg !8672

if.then:                                          ; preds = %_ZN10xalanc_1_815getOpCodeLengthEi.exit, %lor.lhs.false, %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 128) #5, !dbg !8677
  %7 = bitcast i8* %exception to %"class.xalanc_1_8::XPathExpression::InvalidOpCodeException"*, !dbg !8677
  invoke void @_ZN10xalanc_1_815XPathExpression22InvalidOpCodeExceptionC2Ei(%"class.xalanc_1_8::XPathExpression::InvalidOpCodeException"* %7, i32 %theNewOpCode) #8
          to label %invoke.cont unwind label %lpad, !dbg !8677

invoke.cont:                                      ; preds = %if.then
  tail call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN10xalanc_1_815XPathExpression22InvalidOpCodeExceptionE to i8*), i8* bitcast (void (%"class.xalanc_1_8::XPathExpression::XPathExpressionException"*)* @_ZN10xalanc_1_815XPathExpression24XPathExpressionExceptionD2Ev to i8*)) #12, !dbg !8677
  unreachable, !dbg !8677

lpad:                                             ; preds = %if.then
  %8 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !8677
  tail call void @__cxa_free_exception(i8* %exception) #5, !dbg !8677
  resume { i8*, i32 } %8, !dbg !8677

if.else:                                          ; preds = %_ZN10xalanc_1_815getOpCodeLengthEi.exit
  tail call void @llvm.dbg.value(metadata !{i64 %conv}, i64 0, metadata !8679), !dbg !8682
  store i32 %theNewOpCode, i32* %add.ptr.i18, align 4, !dbg !8680, !tbaa !8474
  ret void, !dbg !8683
}
