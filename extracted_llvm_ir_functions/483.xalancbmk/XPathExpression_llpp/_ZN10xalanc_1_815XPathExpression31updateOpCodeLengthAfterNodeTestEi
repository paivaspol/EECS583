define void @_ZN10xalanc_1_815XPathExpression31updateOpCodeLengthAfterNodeTestEi(%"class.xalanc_1_8::XPathExpression"* nocapture %this, i32 %theIndex) #0 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::XPathExpression"* %this}, i64 0, metadata !6302), !dbg !8828
  tail call void @llvm.dbg.value(metadata !{i32 %theIndex}, i64 0, metadata !6303), !dbg !8828
  %conv = sext i32 %theIndex to i64, !dbg !8829
  tail call void @llvm.dbg.value(metadata !{i64 %conv}, i64 0, metadata !8830), !dbg !8831
  %_M_start.i = getelementptr inbounds %"class.xalanc_1_8::XPathExpression"* %this, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !8832
  %0 = load i32** %_M_start.i, align 8, !dbg !8832, !tbaa !7842
  %add.ptr.i = getelementptr inbounds i32* %0, i64 %conv, !dbg !8832
  %1 = load i32* %add.ptr.i, align 4, !dbg !8829, !tbaa !8474
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !6304), !dbg !8829
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !8833), !dbg !8835
  %add.i = add nsw i32 %1, 3, !dbg !8836
  tail call void @llvm.dbg.value(metadata !{i32 %add.i}, i64 0, metadata !8833), !dbg !8836
  %2 = icmp ugt i32 %add.i, 82, !dbg !8837
  br i1 %2, label %if.then, label %_ZN10xalanc_1_815getOpCodeLengthEi.exit, !dbg !8837

_ZN10xalanc_1_815getOpCodeLengthEi.exit:          ; preds = %entry
  %cmp = icmp ne i32 %1, 0, !dbg !8838
  %cmp.i19 = icmp ult i32 %1, 53, !dbg !8839
  %or.cond = and i1 %cmp, %cmp.i19, !dbg !8838
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !8841), !dbg !8842
  br i1 %or.cond, label %_ZN10xalanc_1_815XPathExpression16isNodeTestOpCodeEi.exit, label %if.then, !dbg !8838

_ZN10xalanc_1_815XPathExpression16isNodeTestOpCodeEi.exit: ; preds = %_ZN10xalanc_1_815getOpCodeLengthEi.exit
  %idxprom.i20 = sext i32 %1 to i64, !dbg !8843
  %3 = lshr i64 8022019656384516, %idxprom.i20, !dbg !8843
  %4 = and i64 %3, 1, !dbg !8843
  %tobool.i = icmp eq i64 %4, 0, !dbg !8843
  br i1 %tobool.i, label %if.then, label %if.else, !dbg !8840

if.then:                                          ; preds = %_ZN10xalanc_1_815XPathExpression16isNodeTestOpCodeEi.exit, %_ZN10xalanc_1_815getOpCodeLengthEi.exit, %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 128) #5, !dbg !8844
  %5 = bitcast i8* %exception to %"class.xalanc_1_8::XPathExpression::InvalidOpCodeException"*, !dbg !8844
  invoke void @_ZN10xalanc_1_815XPathExpression22InvalidOpCodeExceptionC2Ei(%"class.xalanc_1_8::XPathExpression::InvalidOpCodeException"* %5, i32 %1) #8
          to label %invoke.cont unwind label %lpad, !dbg !8844

invoke.cont:                                      ; preds = %if.then
  tail call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN10xalanc_1_815XPathExpression22InvalidOpCodeExceptionE to i8*), i8* bitcast (void (%"class.xalanc_1_8::XPathExpression::XPathExpressionException"*)* @_ZN10xalanc_1_815XPathExpression24XPathExpressionExceptionD2Ev to i8*)) #12, !dbg !8844
  unreachable, !dbg !8844

lpad:                                             ; preds = %if.then
  %6 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !8844
  tail call void @__cxa_free_exception(i8* %exception) #5, !dbg !8844
  resume { i8*, i32 } %6, !dbg !8844

if.else:                                          ; preds = %_ZN10xalanc_1_815XPathExpression16isNodeTestOpCodeEi.exit
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::XPathExpression"* %this}, i64 0, metadata !8846), !dbg !8849
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::XPathExpression"* %this}, i64 0, metadata !8850), !dbg !8852
  %_M_finish.i.i.i = getelementptr inbounds %"class.xalanc_1_8::XPathExpression"* %this, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !8853
  %7 = load i32** %_M_finish.i.i.i, align 8, !dbg !8853, !tbaa !7842
  %sub.ptr.lhs.cast.i.i.i = ptrtoint i32* %7 to i64, !dbg !8853
  %sub.ptr.rhs.cast.i.i.i = ptrtoint i32* %0 to i64, !dbg !8853
  %sub.ptr.sub.i.i.i = sub i64 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i, !dbg !8853
  %sub.ptr.div.i2.i.i = lshr exact i64 %sub.ptr.sub.i.i.i, 2, !dbg !8853
  %conv.i.i = trunc i64 %sub.ptr.div.i2.i.i to i32, !dbg !8854
  tail call void @llvm.dbg.value(metadata !{i32 %conv.i.i}, i64 0, metadata !8855), !dbg !8851
  %cmp.i = icmp sgt i32 %conv.i.i, 1, !dbg !8856
  br i1 %cmp.i, label %if.then.i, label %_ZNK10xalanc_1_815XPathExpression15opCodeMapLengthEv.exit, !dbg !8856

if.then.i:                                        ; preds = %if.else
  tail call void @llvm.dbg.value(metadata !8487, i64 0, metadata !8857), !dbg !8859
  %add.ptr.i.i = getelementptr inbounds i32* %0, i64 1, !dbg !8860
  %8 = load i32* %add.ptr.i.i, align 4, !dbg !8858, !tbaa !8474
  br label %_ZNK10xalanc_1_815XPathExpression15opCodeMapLengthEv.exit, !dbg !8858

_ZNK10xalanc_1_815XPathExpression15opCodeMapLengthEv.exit: ; preds = %if.else, %if.then.i
  %retval.0.i = phi i32 [ %8, %if.then.i ], [ %conv.i.i, %if.else ]
  %sub = sub nsw i32 %retval.0.i, %theIndex, !dbg !8847
  %add8 = add nsw i32 %theIndex, 2, !dbg !8861
  %conv9 = sext i32 %add8 to i64, !dbg !8861
  tail call void @llvm.dbg.value(metadata !{i64 %conv9}, i64 0, metadata !8862), !dbg !8863
  %add.ptr.i17 = getelementptr inbounds i32* %0, i64 %conv9, !dbg !8864
  store i32 %sub, i32* %add.ptr.i17, align 4, !dbg !8861, !tbaa !8474
  ret void, !dbg !8865
}
