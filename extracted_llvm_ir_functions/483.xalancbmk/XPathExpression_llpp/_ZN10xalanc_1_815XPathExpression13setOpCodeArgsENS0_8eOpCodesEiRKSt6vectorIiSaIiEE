define void @_ZN10xalanc_1_815XPathExpression13setOpCodeArgsENS0_8eOpCodesEiRKSt6vectorIiSaIiEE(%"class.xalanc_1_8::XPathExpression"* nocapture %this, i32 %theOpCode, i32 %theIndex, %"class.std::vector.0"* nocapture %theArgs) #0 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::XPathExpression"* %this}, i64 0, metadata !6246), !dbg !8538
  tail call void @llvm.dbg.value(metadata !{i32 %theOpCode}, i64 0, metadata !6247), !dbg !8539
  tail call void @llvm.dbg.value(metadata !{i32 %theIndex}, i64 0, metadata !6248), !dbg !8540
  tail call void @llvm.dbg.value(metadata !{%"class.std::vector.0"* %theArgs}, i64 0, metadata !6249), !dbg !8541
  tail call void @llvm.dbg.value(metadata !{i32 %theOpCode}, i64 0, metadata !8542), !dbg !8544
  %add.i = add nsw i32 %theOpCode, 3, !dbg !8545
  tail call void @llvm.dbg.value(metadata !{i32 %add.i}, i64 0, metadata !8542), !dbg !8545
  %0 = icmp ugt i32 %add.i, 82, !dbg !8546
  br i1 %0, label %if.then, label %_ZN10xalanc_1_815getOpCodeLengthEi.exit, !dbg !8546

_ZN10xalanc_1_815getOpCodeLengthEi.exit:          ; preds = %entry
  %idxprom.i = sext i32 %add.i to i64, !dbg !8547
  %arrayidx.i = getelementptr inbounds [83 x i32]* @_ZN10xalanc_1_8L20theOpCodeLengthArrayE, i64 0, i64 %idxprom.i, !dbg !8547
  %1 = load i32* %arrayidx.i, align 4, !dbg !8547, !tbaa !8474
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !6250), !dbg !8543
  %cmp = icmp eq i32 %theOpCode, 0, !dbg !8548
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8548

lor.lhs.false:                                    ; preds = %_ZN10xalanc_1_815getOpCodeLengthEi.exit
  %conv = sext i32 %theIndex to i64, !dbg !8549
  tail call void @llvm.dbg.value(metadata !{i64 %conv}, i64 0, metadata !8550), !dbg !8551
  %_M_start.i54 = getelementptr inbounds %"class.xalanc_1_8::XPathExpression"* %this, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !8552
  %2 = load i32** %_M_start.i54, align 8, !dbg !8552, !tbaa !7842
  %add.ptr.i55 = getelementptr inbounds i32* %2, i64 %conv, !dbg !8552
  %3 = load i32* %add.ptr.i55, align 4, !dbg !8549, !tbaa !8474
  %cmp3 = icmp eq i32 %3, %theOpCode, !dbg !8549
  br i1 %cmp3, label %if.else, label %if.then, !dbg !8549

if.then:                                          ; preds = %entry, %lor.lhs.false, %_ZN10xalanc_1_815getOpCodeLengthEi.exit
  %exception = tail call i8* @__cxa_allocate_exception(i64 128) #5, !dbg !8554
  %4 = bitcast i8* %exception to %"class.xalanc_1_8::XPathExpression::InvalidOpCodeException"*, !dbg !8554
  invoke void @_ZN10xalanc_1_815XPathExpression22InvalidOpCodeExceptionC2Ei(%"class.xalanc_1_8::XPathExpression::InvalidOpCodeException"* %4, i32 %theOpCode) #8
          to label %invoke.cont unwind label %lpad, !dbg !8554

invoke.cont:                                      ; preds = %if.then
  tail call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN10xalanc_1_815XPathExpression22InvalidOpCodeExceptionE to i8*), i8* bitcast (void (%"class.xalanc_1_8::XPathExpression::XPathExpressionException"*)* @_ZN10xalanc_1_815XPathExpression24XPathExpressionExceptionD2Ev to i8*)) #12, !dbg !8554
  unreachable, !dbg !8554

lpad:                                             ; preds = %if.then
  %5 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !8554
  %6 = extractvalue { i8*, i32 } %5, 0, !dbg !8554
  %7 = extractvalue { i8*, i32 } %5, 1, !dbg !8554
  tail call void @__cxa_free_exception(i8* %exception) #5, !dbg !8554
  br label %eh.resume, !dbg !8554

if.else:                                          ; preds = %lor.lhs.false
  %sub4 = add nsw i32 %1, -2, !dbg !8556
  tail call void @llvm.dbg.value(metadata !{i32 %sub4}, i64 0, metadata !6251), !dbg !8556
  %conv5 = sext i32 %sub4 to i64, !dbg !8557
  tail call void @llvm.dbg.value(metadata !{%"class.std::vector.0"* %theArgs}, i64 0, metadata !8558), !dbg !8559
  %_M_finish.i = getelementptr inbounds %"class.std::vector.0"* %theArgs, i64 0, i32 0, i32 0, i32 1, !dbg !8560
  %8 = load i32** %_M_finish.i, align 8, !dbg !8560, !tbaa !7842
  %_M_start.i60 = getelementptr inbounds %"class.std::vector.0"* %theArgs, i64 0, i32 0, i32 0, i32 0, !dbg !8560
  %9 = load i32** %_M_start.i60, align 8, !dbg !8560, !tbaa !7842
  %sub.ptr.lhs.cast.i = ptrtoint i32* %8 to i64, !dbg !8560
  %sub.ptr.rhs.cast.i = ptrtoint i32* %9 to i64, !dbg !8560
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !8560
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 2, !dbg !8560
  %cmp7 = icmp eq i64 %conv5, %sub.ptr.div.i, !dbg !8557
  br i1 %cmp7, label %for.cond.preheader, label %if.then8, !dbg !8557

for.cond.preheader:                               ; preds = %if.else
  %cmp1362 = icmp sgt i32 %sub4, 0, !dbg !8561
  br i1 %cmp1362, label %for.body.lr.ph, label %if.end33, !dbg !8561

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %add = add i32 %theIndex, 2, !dbg !8562
  br label %for.body, !dbg !8561

if.then8:                                         ; preds = %if.else
  %exception9 = tail call i8* @__cxa_allocate_exception(i64 128) #5, !dbg !8565
  %10 = bitcast i8* %exception9 to %"class.xalanc_1_8::XPathExpression::InvalidArgumentCountException"*, !dbg !8565
  invoke void @_ZN10xalanc_1_815XPathExpression29InvalidArgumentCountExceptionC2Eiii(%"class.xalanc_1_8::XPathExpression::InvalidArgumentCountException"* %10, i32 %theOpCode, i32 %1, i32 %sub4) #8
          to label %invoke.cont11 unwind label %lpad10, !dbg !8565

invoke.cont11:                                    ; preds = %if.then8
  tail call void @__cxa_throw(i8* %exception9, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN10xalanc_1_815XPathExpression29InvalidArgumentCountExceptionE to i8*), i8* bitcast (void (%"class.xalanc_1_8::XPathExpression::XPathExpressionException"*)* @_ZN10xalanc_1_815XPathExpression24XPathExpressionExceptionD2Ev to i8*)) #12, !dbg !8565
  unreachable, !dbg !8565

lpad10:                                           ; preds = %if.then8
  %11 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !8565
  %12 = extractvalue { i8*, i32 } %11, 0, !dbg !8565
  %13 = extractvalue { i8*, i32 } %11, 1, !dbg !8565
  tail call void @__cxa_free_exception(i8* %exception9) #5, !dbg !8565
  br label %eh.resume, !dbg !8565

for.body:                                         ; preds = %for.body.lr.ph, %if.else24
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.else24 ]
  tail call void @llvm.dbg.value(metadata !{%"class.std::vector.0"* %theArgs}, i64 0, metadata !8567), !dbg !8569
  tail call void @llvm.dbg.value(metadata !{i64 %indvars.iv}, i64 0, metadata !8570), !dbg !8569
  %add.ptr.i59 = getelementptr inbounds i32* %9, i64 %indvars.iv, !dbg !8571
  %14 = load i32* %add.ptr.i59, align 4, !dbg !8568, !tbaa !8474
  %cmp16 = icmp slt i32 %14, 0, !dbg !8568
  br i1 %cmp16, label %if.then17, label %if.else24, !dbg !8568

if.then17:                                        ; preds = %for.body
  %exception18 = tail call i8* @__cxa_allocate_exception(i64 128) #5, !dbg !8572
  %15 = bitcast i8* %exception18 to %"class.xalanc_1_8::XPathExpression::InvalidArgumentException"*, !dbg !8572
  tail call void @llvm.dbg.value(metadata !{%"class.std::vector.0"* %theArgs}, i64 0, metadata !8574), !dbg !8576
  tail call void @llvm.dbg.value(metadata !{i64 %indvars.iv}, i64 0, metadata !8577), !dbg !8576
  %16 = load i32** %_M_start.i60, align 8, !dbg !8578, !tbaa !7842
  %add.ptr.i57 = getelementptr inbounds i32* %16, i64 %indvars.iv, !dbg !8578
  %17 = load i32* %add.ptr.i57, align 4, !dbg !8575, !tbaa !8474
  invoke void @_ZN10xalanc_1_815XPathExpression24InvalidArgumentExceptionC2Eii(%"class.xalanc_1_8::XPathExpression::InvalidArgumentException"* %15, i32 %theOpCode, i32 %17) #8
          to label %invoke.cont23 unwind label %lpad20, !dbg !8575

invoke.cont23:                                    ; preds = %if.then17
  tail call void @__cxa_throw(i8* %exception18, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN10xalanc_1_815XPathExpression24InvalidArgumentExceptionE to i8*), i8* bitcast (void (%"class.xalanc_1_8::XPathExpression::XPathExpressionException"*)* @_ZN10xalanc_1_815XPathExpression24XPathExpressionExceptionD2Ev to i8*)) #12, !dbg !8575
  unreachable, !dbg !8575

lpad20:                                           ; preds = %if.then17
  %18 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !8575
  %19 = extractvalue { i8*, i32 } %18, 0, !dbg !8575
  %20 = extractvalue { i8*, i32 } %18, 1, !dbg !8575
  tail call void @__cxa_free_exception(i8* %exception18) #5, !dbg !8575
  br label %eh.resume, !dbg !8575

if.else24:                                        ; preds = %for.body
  tail call void @llvm.dbg.value(metadata !{%"class.std::vector.0"* %theArgs}, i64 0, metadata !8579), !dbg !8581
  tail call void @llvm.dbg.value(metadata !{i64 %indvars.iv}, i64 0, metadata !8582), !dbg !8581
  %21 = trunc i64 %indvars.iv to i32, !dbg !8562
  %add29 = add i32 %add, %21, !dbg !8562
  %conv30 = sext i32 %add29 to i64, !dbg !8562
  tail call void @llvm.dbg.value(metadata !{i64 %conv30}, i64 0, metadata !8583), !dbg !8584
  %add.ptr.i = getelementptr inbounds i32* %2, i64 %conv30, !dbg !8585
  store i32 %14, i32* %add.ptr.i, align 4, !dbg !8562, !tbaa !8474
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !8561
  %22 = trunc i64 %indvars.iv.next to i32, !dbg !8561
  %cmp13 = icmp slt i32 %22, %sub4, !dbg !8561
  br i1 %cmp13, label %for.body, label %if.end33, !dbg !8561

if.end33:                                         ; preds = %if.else24, %for.cond.preheader
  ret void, !dbg !8586

eh.resume:                                        ; preds = %lpad20, %lpad10, %lpad
  %ehselector.slot.0 = phi i32 [ %7, %lpad ], [ %13, %lpad10 ], [ %20, %lpad20 ]
  %exn.slot.0 = phi i8* [ %6, %lpad ], [ %12, %lpad10 ], [ %19, %lpad20 ]
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.0, 0, !dbg !8554
  %lpad.val34 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.0, 1, !dbg !8554
  resume { i8*, i32 } %lpad.val34, !dbg !8554
}
