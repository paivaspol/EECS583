define i32 @_ZNK10xalanc_1_815XPathExpression24getOpCodeLengthFromOpMapEi(%"class.xalanc_1_8::XPathExpression"* nocapture %this, i32 %theIndex) #0 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::XPathExpression"* %this}, i64 0, metadata !6239), !dbg !8507
  tail call void @llvm.dbg.value(metadata !{i32 %theIndex}, i64 0, metadata !6240), !dbg !8507
  tail call void @llvm.dbg.value(metadata !84, i64 0, metadata !6241), !dbg !8508
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::XPathExpression"* %this}, i64 0, metadata !8509), !dbg !8511
  %_M_finish.i.i = getelementptr inbounds %"class.xalanc_1_8::XPathExpression"* %this, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !8512
  %0 = load i32** %_M_finish.i.i, align 8, !dbg !8512, !tbaa !7842
  %_M_start.i.i = getelementptr inbounds %"class.xalanc_1_8::XPathExpression"* %this, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !8512
  %1 = load i32** %_M_start.i.i, align 8, !dbg !8512, !tbaa !7842
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %0 to i64, !dbg !8512
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %1 to i64, !dbg !8512
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i, !dbg !8512
  %sub.ptr.div.i2.i = lshr exact i64 %sub.ptr.sub.i.i, 2, !dbg !8512
  %conv.i = trunc i64 %sub.ptr.div.i2.i to i32, !dbg !8513
  %cmp = icmp sgt i32 %conv.i, %theIndex, !dbg !8510
  br i1 %cmp, label %if.else, label %if.then, !dbg !8510

if.then:                                          ; preds = %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 128) #5, !dbg !8514
  %2 = bitcast i8* %exception to %"class.xalanc_1_8::XPathExpression::InvalidOpCodeException"*, !dbg !8514
  invoke void @_ZN10xalanc_1_815XPathExpression22InvalidOpCodeExceptionC2Ei(%"class.xalanc_1_8::XPathExpression::InvalidOpCodeException"* %2, i32 -1) #8
          to label %invoke.cont unwind label %lpad, !dbg !8514

invoke.cont:                                      ; preds = %if.then
  tail call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN10xalanc_1_815XPathExpression22InvalidOpCodeExceptionE to i8*), i8* bitcast (void (%"class.xalanc_1_8::XPathExpression::XPathExpressionException"*)* @_ZN10xalanc_1_815XPathExpression24XPathExpressionExceptionD2Ev to i8*)) #12, !dbg !8514
  unreachable, !dbg !8514

lpad:                                             ; preds = %if.then
  %3 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !8514
  %4 = extractvalue { i8*, i32 } %3, 0, !dbg !8514
  %5 = extractvalue { i8*, i32 } %3, 1, !dbg !8514
  tail call void @__cxa_free_exception(i8* %exception) #5, !dbg !8514
  br label %eh.resume, !dbg !8514

if.else:                                          ; preds = %entry
  %conv = sext i32 %theIndex to i64, !dbg !8516
  tail call void @llvm.dbg.value(metadata !{i64 %conv}, i64 0, metadata !8517), !dbg !8518
  %add.ptr.i22 = getelementptr inbounds i32* %1, i64 %conv, !dbg !8519
  %6 = load i32* %add.ptr.i22, align 4, !dbg !8516, !tbaa !8474
  tail call void @llvm.dbg.value(metadata !{i32 %6}, i64 0, metadata !8521), !dbg !8522
  %add.i = add nsw i32 %6, 3, !dbg !8523
  tail call void @llvm.dbg.value(metadata !{i32 %add.i}, i64 0, metadata !8521), !dbg !8523
  %7 = icmp ugt i32 %add.i, 82, !dbg !8524
  %cmp4 = icmp eq i32 %6, 0, !dbg !8525
  %or.cond = or i1 %7, %cmp4, !dbg !8524
  tail call void @llvm.dbg.value(metadata !{i32 %12}, i64 0, metadata !6242), !dbg !8516
  br i1 %or.cond, label %if.then5, label %if.else9, !dbg !8524

if.then5:                                         ; preds = %if.else
  %exception6 = tail call i8* @__cxa_allocate_exception(i64 128) #5, !dbg !8526
  %8 = bitcast i8* %exception6 to %"class.xalanc_1_8::XPathExpression::InvalidOpCodeException"*, !dbg !8526
  invoke void @_ZN10xalanc_1_815XPathExpression22InvalidOpCodeExceptionC2Ei(%"class.xalanc_1_8::XPathExpression::InvalidOpCodeException"* %8, i32 -1) #8
          to label %invoke.cont8 unwind label %lpad7, !dbg !8526

invoke.cont8:                                     ; preds = %if.then5
  tail call void @__cxa_throw(i8* %exception6, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN10xalanc_1_815XPathExpression22InvalidOpCodeExceptionE to i8*), i8* bitcast (void (%"class.xalanc_1_8::XPathExpression::XPathExpressionException"*)* @_ZN10xalanc_1_815XPathExpression24XPathExpressionExceptionD2Ev to i8*)) #12, !dbg !8526
  unreachable, !dbg !8526

lpad7:                                            ; preds = %if.then5
  %9 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !8526
  %10 = extractvalue { i8*, i32 } %9, 0, !dbg !8526
  %11 = extractvalue { i8*, i32 } %9, 1, !dbg !8526
  tail call void @__cxa_free_exception(i8* %exception6) #5, !dbg !8526
  br label %eh.resume, !dbg !8526

if.else9:                                         ; preds = %if.else
  %idxprom.i = sext i32 %add.i to i64, !dbg !8528
  %arrayidx.i = getelementptr inbounds [83 x i32]* @_ZN10xalanc_1_8L20theOpCodeLengthArrayE, i64 0, i64 %idxprom.i, !dbg !8528
  %12 = load i32* %arrayidx.i, align 4, !dbg !8528, !tbaa !8474
  %cmp10 = icmp sgt i32 %12, 1, !dbg !8529
  br i1 %cmp10, label %if.then11, label %if.end16, !dbg !8529

if.then11:                                        ; preds = %if.else9
  %add = add nsw i32 %theIndex, 1, !dbg !8531
  %conv13 = sext i32 %add to i64, !dbg !8531
  tail call void @llvm.dbg.value(metadata !{i64 %conv13}, i64 0, metadata !8533), !dbg !8534
  %add.ptr.i = getelementptr inbounds i32* %1, i64 %conv13, !dbg !8535
  %13 = load i32* %add.ptr.i, align 4, !dbg !8531, !tbaa !8474
  tail call void @llvm.dbg.value(metadata !{i32 %13}, i64 0, metadata !6241), !dbg !8531
  br label %if.end16, !dbg !8536

if.end16:                                         ; preds = %if.then11, %if.else9
  %theResult.0 = phi i32 [ %13, %if.then11 ], [ 0, %if.else9 ]
  ret i32 %theResult.0, !dbg !8537

eh.resume:                                        ; preds = %lpad7, %lpad
  %exn.slot.0 = phi i8* [ %4, %lpad ], [ %10, %lpad7 ]
  %ehselector.slot.0 = phi i32 [ %5, %lpad ], [ %11, %lpad7 ]
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.0, 0, !dbg !8514
  %lpad.val17 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.0, 1, !dbg !8514
  resume { i8*, i32 } %lpad.val17, !dbg !8514
}
