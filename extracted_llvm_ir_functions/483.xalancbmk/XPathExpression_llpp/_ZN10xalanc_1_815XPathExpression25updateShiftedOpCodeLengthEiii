define void @_ZN10xalanc_1_815XPathExpression25updateShiftedOpCodeLengthEiii(%"class.xalanc_1_8::XPathExpression"* nocapture %this, i32 %theOpCode, i32, i32 %theNewIndex) #0 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::XPathExpression"* %this}, i64 0, metadata !6279), !dbg !8745
  tail call void @llvm.dbg.value(metadata !{i32 %theOpCode}, i64 0, metadata !6280), !dbg !8746
  tail call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !6281), !dbg !8747
  tail call void @llvm.dbg.value(metadata !{i32 %theNewIndex}, i64 0, metadata !6282), !dbg !8748
  tail call void @llvm.dbg.value(metadata !{i32 %theOpCode}, i64 0, metadata !8749), !dbg !8751
  %add.i = add nsw i32 %theOpCode, 3, !dbg !8752
  tail call void @llvm.dbg.value(metadata !{i32 %add.i}, i64 0, metadata !8749), !dbg !8752
  %1 = icmp ugt i32 %add.i, 82, !dbg !8753
  %cmp = icmp eq i32 %theOpCode, 0, !dbg !8754
  %or.cond = or i1 %1, %cmp, !dbg !8753
  br i1 %or.cond, label %if.then, label %lor.lhs.false, !dbg !8753

lor.lhs.false:                                    ; preds = %entry
  %conv = sext i32 %theNewIndex to i64, !dbg !8755
  tail call void @llvm.dbg.value(metadata !{i64 %conv}, i64 0, metadata !8756), !dbg !8757
  %_M_start.i30 = getelementptr inbounds %"class.xalanc_1_8::XPathExpression"* %this, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !8758
  %2 = load i32** %_M_start.i30, align 8, !dbg !8758, !tbaa !7842
  %add.ptr.i31 = getelementptr inbounds i32* %2, i64 %conv, !dbg !8758
  %3 = load i32* %add.ptr.i31, align 4, !dbg !8755, !tbaa !8474
  %cmp3 = icmp eq i32 %3, %theOpCode, !dbg !8755
  br i1 %cmp3, label %if.else, label %if.then, !dbg !8755

if.then:                                          ; preds = %entry, %lor.lhs.false
  %exception = tail call i8* @__cxa_allocate_exception(i64 128) #5, !dbg !8759
  %4 = bitcast i8* %exception to %"class.xalanc_1_8::XPathExpression::InvalidOpCodeException"*, !dbg !8759
  invoke void @_ZN10xalanc_1_815XPathExpression22InvalidOpCodeExceptionC2Ei(%"class.xalanc_1_8::XPathExpression::InvalidOpCodeException"* %4, i32 %theOpCode) #8
          to label %invoke.cont unwind label %lpad, !dbg !8759

invoke.cont:                                      ; preds = %if.then
  tail call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN10xalanc_1_815XPathExpression22InvalidOpCodeExceptionE to i8*), i8* bitcast (void (%"class.xalanc_1_8::XPathExpression::XPathExpressionException"*)* @_ZN10xalanc_1_815XPathExpression24XPathExpressionExceptionD2Ev to i8*)) #12, !dbg !8759
  unreachable, !dbg !8759

lpad:                                             ; preds = %if.then
  %5 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !8759
  %6 = extractvalue { i8*, i32 } %5, 0, !dbg !8759
  %7 = extractvalue { i8*, i32 } %5, 1, !dbg !8759
  tail call void @__cxa_free_exception(i8* %exception) #5, !dbg !8759
  br label %eh.resume, !dbg !8759

if.else:                                          ; preds = %lor.lhs.false
  %add = add nsw i32 %theNewIndex, 1, !dbg !8761
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !6284), !dbg !8761
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::XPathExpression"* %this}, i64 0, metadata !8762), !dbg !8764
  %_M_finish.i.i35 = getelementptr inbounds %"class.xalanc_1_8::XPathExpression"* %this, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !8765
  %8 = load i32** %_M_finish.i.i35, align 8, !dbg !8765, !tbaa !7842
  %sub.ptr.lhs.cast.i.i37 = ptrtoint i32* %8 to i64, !dbg !8765
  %sub.ptr.rhs.cast.i.i38 = ptrtoint i32* %2 to i64, !dbg !8765
  %sub.ptr.sub.i.i39 = sub i64 %sub.ptr.lhs.cast.i.i37, %sub.ptr.rhs.cast.i.i38, !dbg !8765
  %sub.ptr.div.i2.i40 = lshr exact i64 %sub.ptr.sub.i.i39, 2, !dbg !8765
  %conv.i41 = trunc i64 %sub.ptr.div.i2.i40 to i32, !dbg !8766
  %cmp5 = icmp slt i32 %add, %conv.i41, !dbg !8763
  br i1 %cmp5, label %if.else10, label %if.then6, !dbg !8763

if.then6:                                         ; preds = %if.else
  %exception7 = tail call i8* @__cxa_allocate_exception(i64 128) #5, !dbg !8767
  %9 = bitcast i8* %exception7 to %"class.xalanc_1_8::XPathExpression::InvalidOpCodeException"*, !dbg !8767
  invoke void @_ZN10xalanc_1_815XPathExpression22InvalidOpCodeExceptionC2Ei(%"class.xalanc_1_8::XPathExpression::InvalidOpCodeException"* %9, i32 %theOpCode) #8
          to label %invoke.cont9 unwind label %lpad8, !dbg !8767

invoke.cont9:                                     ; preds = %if.then6
  tail call void @__cxa_throw(i8* %exception7, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN10xalanc_1_815XPathExpression22InvalidOpCodeExceptionE to i8*), i8* bitcast (void (%"class.xalanc_1_8::XPathExpression::XPathExpressionException"*)* @_ZN10xalanc_1_815XPathExpression24XPathExpressionExceptionD2Ev to i8*)) #12, !dbg !8767
  unreachable, !dbg !8767

lpad8:                                            ; preds = %if.then6
  %10 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !8767
  %11 = extractvalue { i8*, i32 } %10, 0, !dbg !8767
  %12 = extractvalue { i8*, i32 } %10, 1, !dbg !8767
  tail call void @__cxa_free_exception(i8* %exception7) #5, !dbg !8767
  br label %eh.resume, !dbg !8767

if.else10:                                        ; preds = %if.else
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::XPathExpression"* %this}, i64 0, metadata !8769), !dbg !8771
  tail call void @llvm.dbg.value(metadata !{i32 %theNewIndex}, i64 0, metadata !8772), !dbg !8771
  %conv.i33 = sext i32 %add to i64, !dbg !8773
  tail call void @llvm.dbg.value(metadata !{i64 %conv.i33}, i64 0, metadata !8774), !dbg !8775
  %add.ptr.i.i = getelementptr inbounds i32* %2, i64 %conv.i33, !dbg !8776
  %13 = load i32* %add.ptr.i.i, align 4, !dbg !8773, !tbaa !8474
  %add2.i = add nsw i32 %13, %theNewIndex, !dbg !8773
  tail call void @llvm.dbg.value(metadata !{i32 %add2.i}, i64 0, metadata !6287), !dbg !8770
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::XPathExpression"* %this}, i64 0, metadata !8777), !dbg !8779
  %cmp13 = icmp slt i32 %add2.i, %conv.i41, !dbg !8778
  br i1 %cmp13, label %if.then14, label %if.end21, !dbg !8778

if.then14:                                        ; preds = %if.else10
  %call15 = tail call i32 @_ZNK10xalanc_1_815XPathExpression24getOpCodeLengthFromOpMapEi(%"class.xalanc_1_8::XPathExpression"* %this, i32 %add2.i) #8, !dbg !8780
  tail call void @llvm.dbg.value(metadata !{i64 %conv.i33}, i64 0, metadata !8782), !dbg !8783
  %14 = load i32** %_M_start.i30, align 8, !dbg !8784, !tbaa !7842
  %add.ptr.i = getelementptr inbounds i32* %14, i64 %conv.i33, !dbg !8784
  %15 = load i32* %add.ptr.i, align 4, !dbg !8780, !tbaa !8474
  %add19 = add nsw i32 %15, %call15, !dbg !8780
  store i32 %add19, i32* %add.ptr.i, align 4, !dbg !8780, !tbaa !8474
  br label %if.end21, !dbg !8785

if.end21:                                         ; preds = %if.then14, %if.else10
  ret void, !dbg !8786

eh.resume:                                        ; preds = %lpad8, %lpad
  %ehselector.slot.0 = phi i32 [ %7, %lpad ], [ %12, %lpad8 ]
  %exn.slot.0 = phi i8* [ %6, %lpad ], [ %11, %lpad8 ]
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.0, 0, !dbg !8759
  %lpad.val22 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.0, 1, !dbg !8759
  resume { i8*, i32 } %lpad.val22, !dbg !8759
}
