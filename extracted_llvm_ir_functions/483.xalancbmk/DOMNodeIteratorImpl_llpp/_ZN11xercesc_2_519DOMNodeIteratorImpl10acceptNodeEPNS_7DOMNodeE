define zeroext i1 @_ZN11xercesc_2_519DOMNodeIteratorImpl10acceptNodeEPNS_7DOMNodeE(%"class.xercesc_2_5::DOMNodeIteratorImpl"* nocapture %this, %"class.xercesc_2_5::DOMNode"* %node) #2 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::DOMNodeIteratorImpl"* %this}, i64 0, metadata !1732), !dbg !1871
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::DOMNode"* %node}, i64 0, metadata !1733), !dbg !1871
  %fDetached = getelementptr inbounds %"class.xercesc_2_5::DOMNodeIteratorImpl"* %this, i64 0, i32 6, !dbg !1872
  %0 = load i8* %fDetached, align 1, !dbg !1872, !tbaa !1787, !range !1791
  %tobool = icmp eq i8 %0, 0, !dbg !1872
  br i1 %tobool, label %if.end, label %if.then, !dbg !1872

if.then:                                          ; preds = %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 24) #8, !dbg !1873
  %1 = bitcast i8* %exception to %"class.xercesc_2_5::DOMException"*, !dbg !1873
  invoke void @_ZN11xercesc_2_512DOMExceptionC1EsPKt(%"class.xercesc_2_5::DOMException"* %1, i16 signext 11, i16* null) #7
          to label %invoke.cont unwind label %lpad, !dbg !1873

invoke.cont:                                      ; preds = %if.then
  tail call void @__cxa_throw(i8* %exception, i8* bitcast (i8** @_ZTIN11xercesc_2_512DOMExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_5::DOMException"*)* @_ZN11xercesc_2_512DOMExceptionD1Ev to i8*)) #9, !dbg !1873
  unreachable, !dbg !1873

lpad:                                             ; preds = %if.then
  %2 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !1873
  tail call void @__cxa_free_exception(i8* %exception) #8, !dbg !1873
  resume { i8*, i32 } %2, !dbg !1873

if.end:                                           ; preds = %entry
  %fNodeFilter = getelementptr inbounds %"class.xercesc_2_5::DOMNodeIteratorImpl"* %this, i64 0, i32 4, !dbg !1874
  %3 = load %"class.xercesc_2_5::DOMNodeFilter"** %fNodeFilter, align 8, !dbg !1874, !tbaa !1784
  %cmp = icmp eq %"class.xercesc_2_5::DOMNodeFilter"* %3, null, !dbg !1874
  %fWhatToShow = getelementptr inbounds %"class.xercesc_2_5::DOMNodeIteratorImpl"* %this, i64 0, i32 3, !dbg !1875
  %4 = load i64* %fWhatToShow, align 8, !dbg !1875, !tbaa !1786
  %5 = bitcast %"class.xercesc_2_5::DOMNode"* %node to i16 (%"class.xercesc_2_5::DOMNode"*)***, !dbg !1875
  %vtable = load i16 (%"class.xercesc_2_5::DOMNode"*)*** %5, align 8, !dbg !1875, !tbaa !1782
  %vfn = getelementptr inbounds i16 (%"class.xercesc_2_5::DOMNode"*)** %vtable, i64 4, !dbg !1875
  %6 = load i16 (%"class.xercesc_2_5::DOMNode"*)** %vfn, align 8, !dbg !1875
  %call = tail call signext i16 %6(%"class.xercesc_2_5::DOMNode"* %node) #7, !dbg !1875
  %conv = sext i16 %call to i32, !dbg !1875
  %sub = add nsw i32 %conv, -1, !dbg !1875
  %shl = shl i32 1, %sub, !dbg !1875
  %conv3 = sext i32 %shl to i64, !dbg !1875
  %and = and i64 %conv3, %4, !dbg !1875
  %cmp4 = icmp ne i64 %and, 0, !dbg !1875
  %cmp4.not = xor i1 %cmp4, true, !dbg !1874
  %brmerge = or i1 %cmp, %cmp4.not, !dbg !1874
  %cmp4.mux = and i1 %cmp, %cmp4, !dbg !1874
  br i1 %brmerge, label %return, label %land.rhs, !dbg !1874

land.rhs:                                         ; preds = %if.end
  %7 = load %"class.xercesc_2_5::DOMNodeFilter"** %fNodeFilter, align 8, !dbg !1877, !tbaa !1784
  %8 = bitcast %"class.xercesc_2_5::DOMNodeFilter"* %7 to i16 (%"class.xercesc_2_5::DOMNodeFilter"*, %"class.xercesc_2_5::DOMNode"*)***, !dbg !1877
  %vtable16 = load i16 (%"class.xercesc_2_5::DOMNodeFilter"*, %"class.xercesc_2_5::DOMNode"*)*** %8, align 8, !dbg !1877, !tbaa !1782
  %vfn17 = getelementptr inbounds i16 (%"class.xercesc_2_5::DOMNodeFilter"*, %"class.xercesc_2_5::DOMNode"*)** %vtable16, i64 2, !dbg !1877
  %9 = load i16 (%"class.xercesc_2_5::DOMNodeFilter"*, %"class.xercesc_2_5::DOMNode"*)** %vfn17, align 8, !dbg !1877
  %call18 = tail call signext i16 %9(%"class.xercesc_2_5::DOMNodeFilter"* %7, %"class.xercesc_2_5::DOMNode"* %node) #7, !dbg !1877
  %cmp20 = icmp eq i16 %call18, 1, !dbg !1877
  br label %return

return:                                           ; preds = %if.end, %land.rhs
  %retval.0 = phi i1 [ %cmp4.mux, %if.end ], [ %cmp20, %land.rhs ]
  ret i1 %retval.0, !dbg !1879
}
