define zeroext i1 @_ZN11xercesc_2_516NodeIteratorImpl10acceptNodeENS_8DOM_NodeE(%"class.xercesc_2_5::NodeIteratorImpl"* nocapture %this, %"class.xercesc_2_5::DOM_Node"* %node) #1 align 2 {
entry:
  %ref.tmp = alloca %"class.xercesc_2_5::DOMString", align 8
  call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::NodeIteratorImpl"* %this}, i64 0, metadata !2976), !dbg !3291
  call void @llvm.dbg.declare(metadata !{%"class.xercesc_2_5::DOM_Node"* %node}, metadata !2977), !dbg !3291
  %fDetached = getelementptr inbounds %"class.xercesc_2_5::NodeIteratorImpl"* %this, i64 0, i32 5, !dbg !3292
  %0 = load i8* %fDetached, align 1, !dbg !3292, !tbaa !3196, !range !3220
  %tobool = icmp eq i8 %0, 0, !dbg !3292
  br i1 %tobool, label %if.end, label %if.then, !dbg !3292

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 24) #9, !dbg !3293
  invoke void @_ZN11xercesc_2_59DOMStringC1Ei(%"class.xercesc_2_5::DOMString"* %ref.tmp, i32 0) #7
          to label %invoke.cont unwind label %ehcleanup.thread, !dbg !3293

invoke.cont:                                      ; preds = %if.then
  %1 = bitcast i8* %exception to %"class.xercesc_2_5::DOM_DOMException"*, !dbg !3293
  invoke void @_ZN11xercesc_2_516DOM_DOMExceptionC1EsRKNS_9DOMStringE(%"class.xercesc_2_5::DOM_DOMException"* %1, i16 signext 11, %"class.xercesc_2_5::DOMString"* %ref.tmp) #7
          to label %invoke.cont3 unwind label %lpad2, !dbg !3293

invoke.cont3:                                     ; preds = %invoke.cont
  invoke void @__cxa_throw(i8* %exception, i8* bitcast (i8** @_ZTIN11xercesc_2_516DOM_DOMExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_5::DOM_DOMException"*)* @_ZN11xercesc_2_516DOM_DOMExceptionD1Ev to i8*)) #10
          to label %unreachable unwind label %lpad2, !dbg !3293

ehcleanup.thread:                                 ; preds = %if.then
  %2 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !3293
  %3 = extractvalue { i8*, i32 } %2, 0, !dbg !3293
  %4 = extractvalue { i8*, i32 } %2, 1, !dbg !3293
  br label %cleanup.action, !dbg !3293

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %cleanup.isactive.0 = phi i1 [ false, %invoke.cont3 ], [ true, %invoke.cont ]
  %5 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !3293
  %6 = extractvalue { i8*, i32 } %5, 0, !dbg !3293
  %7 = extractvalue { i8*, i32 } %5, 1, !dbg !3293
  invoke void @_ZN11xercesc_2_59DOMStringD1Ev(%"class.xercesc_2_5::DOMString"* %ref.tmp) #7
          to label %ehcleanup unwind label %terminate.lpad, !dbg !3293

ehcleanup:                                        ; preds = %lpad2
  br i1 %cleanup.isactive.0, label %cleanup.action, label %eh.resume, !dbg !3293

cleanup.action:                                   ; preds = %ehcleanup.thread, %ehcleanup
  %ehselector.slot.025 = phi i32 [ %4, %ehcleanup.thread ], [ %7, %ehcleanup ]
  %exn.slot.023 = phi i8* [ %3, %ehcleanup.thread ], [ %6, %ehcleanup ]
  call void @__cxa_free_exception(i8* %exception) #9, !dbg !3293
  br label %eh.resume, !dbg !3293

if.end:                                           ; preds = %entry
  %fNodeFilter = getelementptr inbounds %"class.xercesc_2_5::NodeIteratorImpl"* %this, i64 0, i32 3, !dbg !3294
  %8 = load %"class.xercesc_2_5::DOM_NodeFilter"** %fNodeFilter, align 8, !dbg !3294, !tbaa !3194
  %cmp = icmp eq %"class.xercesc_2_5::DOM_NodeFilter"* %8, null, !dbg !3294
  %fWhatToShow = getelementptr inbounds %"class.xercesc_2_5::NodeIteratorImpl"* %this, i64 0, i32 2, !dbg !3295
  %9 = load i64* %fWhatToShow, align 8, !dbg !3295, !tbaa !3216
  %call = call signext i16 @_ZNK11xercesc_2_58DOM_Node11getNodeTypeEv(%"class.xercesc_2_5::DOM_Node"* %node) #7, !dbg !3295
  %conv = sext i16 %call to i32, !dbg !3295
  %sub = add nsw i32 %conv, -1, !dbg !3295
  %shl = shl i32 1, %sub, !dbg !3295
  %conv7 = sext i32 %shl to i64, !dbg !3295
  %and = and i64 %conv7, %9, !dbg !3295
  %cmp8 = icmp ne i64 %and, 0, !dbg !3295
  %cmp8.not = xor i1 %cmp8, true, !dbg !3294
  %brmerge = or i1 %cmp, %cmp8.not, !dbg !3294
  %cmp8.mux = and i1 %cmp, %cmp8, !dbg !3294
  br i1 %brmerge, label %return, label %land.rhs, !dbg !3294

land.rhs:                                         ; preds = %if.end
  %10 = load %"class.xercesc_2_5::DOM_NodeFilter"** %fNodeFilter, align 8, !dbg !3297, !tbaa !3194
  %11 = bitcast %"class.xercesc_2_5::DOM_NodeFilter"* %10 to i16 (%"class.xercesc_2_5::DOM_NodeFilter"*, %"class.xercesc_2_5::DOM_Node"*)***, !dbg !3297
  %vtable = load i16 (%"class.xercesc_2_5::DOM_NodeFilter"*, %"class.xercesc_2_5::DOM_Node"*)*** %11, align 8, !dbg !3297, !tbaa !3192
  %vfn = getelementptr inbounds i16 (%"class.xercesc_2_5::DOM_NodeFilter"*, %"class.xercesc_2_5::DOM_Node"*)** %vtable, i64 2, !dbg !3297
  %12 = load i16 (%"class.xercesc_2_5::DOM_NodeFilter"*, %"class.xercesc_2_5::DOM_Node"*)** %vfn, align 8, !dbg !3297
  %call18 = call signext i16 %12(%"class.xercesc_2_5::DOM_NodeFilter"* %10, %"class.xercesc_2_5::DOM_Node"* %node) #7, !dbg !3297
  %cmp20 = icmp eq i16 %call18, 1, !dbg !3297
  br label %return

return:                                           ; preds = %if.end, %land.rhs
  %retval.0 = phi i1 [ %cmp8.mux, %if.end ], [ %cmp20, %land.rhs ]
  ret i1 %retval.0, !dbg !3299

eh.resume:                                        ; preds = %ehcleanup, %cleanup.action
  %ehselector.slot.024 = phi i32 [ %7, %ehcleanup ], [ %ehselector.slot.025, %cleanup.action ]
  %exn.slot.022 = phi i8* [ %6, %ehcleanup ], [ %exn.slot.023, %cleanup.action ]
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.022, 0, !dbg !3293
  %lpad.val21 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.024, 1, !dbg !3293
  resume { i8*, i32 } %lpad.val21, !dbg !3293

terminate.lpad:                                   ; preds = %lpad2
  %13 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          catch i8* null, !dbg !3293
  %14 = extractvalue { i8*, i32 } %13, 0, !dbg !3293
  call void @__clang_call_terminate(i8* %14) #8, !dbg !3293
  unreachable, !dbg !3293

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}
