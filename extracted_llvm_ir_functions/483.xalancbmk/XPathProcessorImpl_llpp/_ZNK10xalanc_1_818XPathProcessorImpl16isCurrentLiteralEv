define zeroext i1 @_ZNK10xalanc_1_818XPathProcessorImpl16isCurrentLiteralEv(%"class.xalanc_1_8::XPathProcessorImpl"* nocapture %this) #6 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::XPathProcessorImpl"* %this}, i64 0, metadata !9212), !dbg !14888
  %m_size.i.i.i = getelementptr inbounds %"class.xalanc_1_8::XPathProcessorImpl"* %this, i64 0, i32 1, i32 1, !dbg !14889
  %0 = load i32* %m_size.i.i.i, align 4, !dbg !14889, !tbaa !11527
  %sub = add i32 %0, -1, !dbg !14892
  tail call void @llvm.dbg.value(metadata !{i32 %sub}, i64 0, metadata !9213), !dbg !14892
  %cmp = icmp slt i32 %sub, 1, !dbg !14893
  br i1 %cmp, label %return, label %if.else, !dbg !14893

if.else:                                          ; preds = %entry
  %m_tokenChar = getelementptr inbounds %"class.xalanc_1_8::XPathProcessorImpl"* %this, i64 0, i32 2, !dbg !14894
  %1 = load i16* %m_tokenChar, align 2, !dbg !14894, !tbaa !11511
  tail call void @llvm.dbg.value(metadata !{i16 %1}, i64 0, metadata !9214), !dbg !14894
  tail call void @llvm.dbg.value(metadata !{i32 %sub}, i64 0, metadata !14895), !dbg !14897
  tail call void @llvm.dbg.value(metadata !{i32 %sub}, i64 0, metadata !14898), !dbg !14900
  %conv.i.i = zext i32 %sub to i64, !dbg !14901
  tail call void @llvm.dbg.value(metadata !{i64 %conv.i.i}, i64 0, metadata !14902), !dbg !14903
  %_M_start.i.i.i = getelementptr inbounds %"class.xalanc_1_8::XPathProcessorImpl"* %this, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, !dbg !14904
  %2 = load i16** %_M_start.i.i.i, align 8, !dbg !14904, !tbaa !11526
  %add.ptr.i.i.i = getelementptr inbounds i16* %2, i64 %conv.i.i, !dbg !14904
  %3 = load i16* %add.ptr.i.i.i, align 2, !dbg !14899, !tbaa !11511
  tail call void @llvm.dbg.value(metadata !{i16 %3}, i64 0, metadata !9216), !dbg !14896
  %cmp4 = icmp eq i16 %1, 34, !dbg !14905
  %cmp6 = icmp eq i16 %3, 34, !dbg !14905
  %or.cond = and i1 %cmp4, %cmp6, !dbg !14905
  br i1 %or.cond, label %return, label %lor.lhs.false, !dbg !14905

lor.lhs.false:                                    ; preds = %if.else
  %cmp8 = icmp eq i16 %1, 39, !dbg !14905
  %cmp11 = icmp eq i16 %3, 39, !dbg !14905
  %or.cond17 = and i1 %cmp8, %cmp11, !dbg !14905
  ret i1 %or.cond17, !dbg !14905

return:                                           ; preds = %if.else, %entry
  %retval.0 = phi i1 [ false, %entry ], [ true, %if.else ]
  ret i1 %retval.0, !dbg !14906
}
