define zeroext i1 @_ZN10xalanc_1_810startsWithEPKtjS1_j(i16* nocapture %theString, i32 %theStringLength, i16* nocapture %theSubstring, i32 %theSubstringLength) #4 {
entry:
  tail call void @llvm.dbg.value(metadata !{i16* %theString}, i64 0, metadata !3039), !dbg !6747
  tail call void @llvm.dbg.value(metadata !{i32 %theStringLength}, i64 0, metadata !3040), !dbg !6748
  tail call void @llvm.dbg.value(metadata !{i16* %theSubstring}, i64 0, metadata !3041), !dbg !6749
  tail call void @llvm.dbg.value(metadata !{i32 %theSubstringLength}, i64 0, metadata !3042), !dbg !6750
  %cmp = icmp eq i32 %theSubstringLength, 0, !dbg !6751
  br i1 %cmp, label %return, label %if.else, !dbg !6751

if.else:                                          ; preds = %entry
  %cmp1 = icmp ult i32 %theStringLength, %theSubstringLength, !dbg !6752
  br i1 %cmp1, label %return, label %land.rhs, !dbg !6752

for.cond:                                         ; preds = %land.rhs
  %cmp4 = icmp ult i32 %inc, %theSubstringLength, !dbg !6753
  br i1 %cmp4, label %land.rhs, label %for.end, !dbg !6753

land.rhs:                                         ; preds = %if.else, %for.cond
  %i.020 = phi i32 [ %inc, %for.cond ], [ 0, %if.else ]
  %idxprom = zext i32 %i.020 to i64, !dbg !6753
  %arrayidx = getelementptr inbounds i16* %theString, i64 %idxprom, !dbg !6753
  %0 = load i16* %arrayidx, align 2, !dbg !6753, !tbaa !6609
  %arrayidx6 = getelementptr inbounds i16* %theSubstring, i64 %idxprom, !dbg !6753
  %1 = load i16* %arrayidx6, align 2, !dbg !6753, !tbaa !6609
  %cmp8 = icmp eq i16 %0, %1, !dbg !6753
  %inc = add i32 %i.020, 1, !dbg !6755
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !3043), !dbg !6755
  br i1 %cmp8, label %for.cond, label %for.end

for.end:                                          ; preds = %for.cond, %land.rhs
  %i.0.lcssa = phi i32 [ %i.020, %land.rhs ], [ %inc, %for.cond ]
  %cmp9 = icmp eq i32 %i.0.lcssa, %theSubstringLength, !dbg !6756
  br label %return, !dbg !6757

return:                                           ; preds = %for.end, %if.else, %entry
  %retval.0 = phi i1 [ true, %entry ], [ false, %if.else ], [ %cmp9, %for.end ]
  ret i1 %retval.0, !dbg !6759
}
