define void @_ZN11xercesc_2_510NodeVectorC2EPNS_13MemoryManagerE(%"class.xercesc_2_5::NodeVector"* nocapture %this, %"class.xercesc_2_5::MemoryManager"* %manager) unnamed_addr #0 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::NodeVector"* %this}, i64 0, metadata !176), !dbg !240
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::MemoryManager"* %manager}, i64 0, metadata !179), !dbg !240
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_5::NodeVector"* %this, i64 0, i32 3, !dbg !241
  store %"class.xercesc_2_5::MemoryManager"* %manager, %"class.xercesc_2_5::MemoryManager"** %fMemoryManager, align 8, !dbg !241, !tbaa !243
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::NodeVector"* %this}, i64 0, metadata !246), !dbg !249
  tail call void @llvm.dbg.value(metadata !250, i64 0, metadata !251), !dbg !249
  %0 = bitcast %"class.xercesc_2_5::MemoryManager"* %manager to i8* (%"class.xercesc_2_5::MemoryManager"*, i64)***, !dbg !252
  %vtable.i = load i8* (%"class.xercesc_2_5::MemoryManager"*, i64)*** %0, align 8, !dbg !252, !tbaa !253
  %vfn.i = getelementptr inbounds i8* (%"class.xercesc_2_5::MemoryManager"*, i64)** %vtable.i, i64 2, !dbg !252
  %1 = load i8* (%"class.xercesc_2_5::MemoryManager"*, i64)** %vfn.i, align 8, !dbg !252
  %call.i = tail call i8* %1(%"class.xercesc_2_5::MemoryManager"* %manager, i64 80) #4, !dbg !252
  %2 = bitcast i8* %call.i to %"class.xercesc_2_5::NodeImpl"**, !dbg !252
  %data.i = getelementptr inbounds %"class.xercesc_2_5::NodeVector"* %this, i64 0, i32 0, !dbg !252
  store %"class.xercesc_2_5::NodeImpl"** %2, %"class.xercesc_2_5::NodeImpl"*** %data.i, align 8, !dbg !252, !tbaa !243
  %allocatedSize.i = getelementptr inbounds %"class.xercesc_2_5::NodeVector"* %this, i64 0, i32 1, !dbg !254
  store i32 10, i32* %allocatedSize.i, align 4, !dbg !254, !tbaa !255
  %nextFreeSlot.i = getelementptr inbounds %"class.xercesc_2_5::NodeVector"* %this, i64 0, i32 2, !dbg !256
  store i32 0, i32* %nextFreeSlot.i, align 4, !dbg !256, !tbaa !255
  ret void, !dbg !257
}
