define zeroext i1 @_ZN11xercesc_2_519XTemplateComparator12isEquivalentEPNS_11RefVectorOfINS_17SchemaElementDeclEEES4_(%"class.xercesc_2_5::RefVectorOf.4"* %lValue, %"class.xercesc_2_5::RefVectorOf.4"* %rValue) #3 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::RefVectorOf.4"* %lValue}, i64 0, metadata !9316), !dbg !11963
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::RefVectorOf.4"* %rValue}, i64 0, metadata !9317), !dbg !11964
  %cmp = icmp eq %"class.xercesc_2_5::RefVectorOf.4"* %lValue, %rValue, !dbg !11965
  br i1 %cmp, label %return, label %if.end, !dbg !11965

if.end:                                           ; preds = %entry
  %tobool = icmp ne %"class.xercesc_2_5::RefVectorOf.4"* %lValue, null, !dbg !11965
  %tobool1 = icmp eq %"class.xercesc_2_5::RefVectorOf.4"* %rValue, null, !dbg !11965
  %or.cond30 = xor i1 %tobool, %tobool1, !dbg !11965
  br i1 %or.cond30, label %if.end6, label %return, !dbg !11965

if.end6:                                          ; preds = %if.end
  %0 = getelementptr inbounds %"class.xercesc_2_5::RefVectorOf.4"* %lValue, i64 0, i32 0, !dbg !11966
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::BaseRefVectorOf.5"* %0}, i64 0, metadata !11967), !dbg !11968
  %fCurCount.i = getelementptr inbounds %"class.xercesc_2_5::RefVectorOf.4"* %lValue, i64 0, i32 0, i32 2, !dbg !11969
  %1 = load i32* %fCurCount.i, align 4, !dbg !11969, !tbaa !11832
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !9318), !dbg !11966
  %2 = getelementptr inbounds %"class.xercesc_2_5::RefVectorOf.4"* %rValue, i64 0, i32 0, !dbg !11971
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::BaseRefVectorOf.5"* %2}, i64 0, metadata !11972), !dbg !11973
  %fCurCount.i31 = getelementptr inbounds %"class.xercesc_2_5::RefVectorOf.4"* %rValue, i64 0, i32 0, i32 2, !dbg !11974
  %3 = load i32* %fCurCount.i31, align 4, !dbg !11974, !tbaa !11832
  tail call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !9319), !dbg !11971
  %cmp8 = icmp eq i32 %1, %3, !dbg !11975
  br i1 %cmp8, label %for.cond.preheader, label %return, !dbg !11975

for.cond.preheader:                               ; preds = %if.end6
  %cmp1132 = icmp sgt i32 %1, 0, !dbg !11976
  br i1 %cmp1132, label %for.body, label %return, !dbg !11976

for.cond:                                         ; preds = %for.body
  %cmp11 = icmp slt i32 %inc, %1, !dbg !11976
  br i1 %cmp11, label %for.body, label %return, !dbg !11976

for.body:                                         ; preds = %for.cond.preheader, %for.cond
  %i.033 = phi i32 [ %inc, %for.cond ], [ 0, %for.cond.preheader ]
  %call12 = tail call %"class.xercesc_2_5::SchemaElementDecl"* @_ZN11xercesc_2_515BaseRefVectorOfINS_17SchemaElementDeclEE9elementAtEj(%"class.xercesc_2_5::BaseRefVectorOf.5"* %0, i32 %i.033) #9, !dbg !11977
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::SchemaElementDecl"* %call12}, i64 0, metadata !9322), !dbg !11977
  %call13 = tail call %"class.xercesc_2_5::SchemaElementDecl"* @_ZN11xercesc_2_515BaseRefVectorOfINS_17SchemaElementDeclEE9elementAtEj(%"class.xercesc_2_5::BaseRefVectorOf.5"* %2, i32 %i.033) #9, !dbg !11978
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::SchemaElementDecl"* %call13}, i64 0, metadata !9324), !dbg !11978
  %call14 = tail call zeroext i1 @_ZN11xercesc_2_517XObjectComparator12isEquivalentEPNS_17SchemaElementDeclES2_(%"class.xercesc_2_5::SchemaElementDecl"* %call12, %"class.xercesc_2_5::SchemaElementDecl"* %call13) #9, !dbg !11979
  %inc = add nsw i32 %i.033, 1, !dbg !11976
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !9320), !dbg !11976
  br i1 %call14, label %for.cond, label %return, !dbg !11979

return:                                           ; preds = %for.cond.preheader, %for.body, %for.cond, %if.end, %if.end6, %entry
  %retval.0 = phi i1 [ true, %entry ], [ false, %if.end ], [ false, %if.end6 ], [ true, %for.cond.preheader ], [ false, %for.body ], [ true, %for.cond ]
  ret i1 %retval.0, !dbg !11980
}
