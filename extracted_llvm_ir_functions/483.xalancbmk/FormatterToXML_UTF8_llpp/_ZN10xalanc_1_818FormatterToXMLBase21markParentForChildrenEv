define linkonce_odr zeroext i1 @_ZN10xalanc_1_818FormatterToXMLBase21markParentForChildrenEv(%"class.xalanc_1_8::FormatterToXMLBase"* nocapture %this) #6 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::FormatterToXMLBase"* %this}, i64 0, metadata !3725), !dbg !4597
  %m_elemStack = getelementptr inbounds %"class.xalanc_1_8::FormatterToXMLBase"* %this, i64 0, i32 13, !dbg !4598
  tail call void @llvm.dbg.value(metadata !{%"class.std::vector.0"* %m_elemStack}, i64 0, metadata !4599), !dbg !4600
  tail call void @llvm.dbg.value(metadata !{%"class.std::vector.0"* %m_elemStack}, i64 0, metadata !4601), !dbg !4604
  tail call void @llvm.dbg.value(metadata !4605, i64 0, metadata !4606), !dbg !4608
  tail call void @llvm.dbg.value(metadata !4605, i64 0, metadata !4609), !dbg !4611
  %_M_p.i.i.i.i = getelementptr inbounds %"class.std::vector.0"* %m_elemStack, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4612
  %0 = load i64** %_M_p.i.i.i.i, align 8, !dbg !4612, !tbaa !3979
  %_M_offset.i.i.i.i = getelementptr inbounds %"class.xalanc_1_8::FormatterToXMLBase"* %this, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4612
  %1 = load i32* %_M_offset.i.i.i.i, align 4, !dbg !4612, !tbaa !3981
  tail call void @llvm.dbg.value(metadata !{i64* %0}, i64 0, metadata !4613), !dbg !4614
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !4615), !dbg !4614
  tail call void @llvm.dbg.value(metadata !{%"class.std::vector.0"* %m_elemStack}, i64 0, metadata !4616), !dbg !4617
  tail call void @llvm.dbg.value(metadata !4605, i64 0, metadata !4618), !dbg !4620
  tail call void @llvm.dbg.value(metadata !4605, i64 0, metadata !4621), !dbg !4623
  %_M_p.i.i.i5.i = getelementptr inbounds %"class.xalanc_1_8::FormatterToXMLBase"* %this, i64 0, i32 13, i32 0, i32 0, i32 1, i32 0, i32 0, !dbg !4624
  %2 = load i64** %_M_p.i.i.i5.i, align 8, !dbg !4624, !tbaa !3979
  %_M_offset.i.i.i6.i = getelementptr inbounds %"class.xalanc_1_8::FormatterToXMLBase"* %this, i64 0, i32 13, i32 0, i32 0, i32 1, i32 0, i32 1, !dbg !4624
  %3 = load i32* %_M_offset.i.i.i6.i, align 4, !dbg !4624, !tbaa !3981
  tail call void @llvm.dbg.value(metadata !{i64* %2}, i64 0, metadata !4625), !dbg !4626
  tail call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !4627), !dbg !4626
  tail call void @llvm.dbg.value(metadata !4628, i64 0, metadata !4629), !dbg !4630
  tail call void @llvm.dbg.value(metadata !4628, i64 0, metadata !4631), !dbg !4630
  %cmp.i.i = icmp eq i64* %0, %2, !dbg !4632
  %cmp4.i.i = icmp eq i32 %1, %3, !dbg !4632
  %4 = and i1 %cmp.i.i, %cmp4.i.i, !dbg !4632
  br i1 %4, label %return, label %if.then, !dbg !4598

if.then:                                          ; preds = %entry
  %call3 = tail call { i64*, i64 } @_ZNSt6vectorIbSaIbEE4backEv(%"class.std::vector.0"* %m_elemStack) #11, !dbg !4633
  %5 = extractvalue { i64*, i64 } %call3, 0, !dbg !4633
  %6 = extractvalue { i64*, i64 } %call3, 1, !dbg !4633
  tail call void @llvm.dbg.value(metadata !4635, i64 0, metadata !4636), !dbg !4637
  %7 = load i64* %5, align 8, !dbg !4638, !tbaa !4639
  %and.i = and i64 %6, %7, !dbg !4638
  %tobool.i = icmp eq i64 %and.i, 0, !dbg !4638
  br i1 %tobool.i, label %if.then5, label %return, !dbg !4633

if.then5:                                         ; preds = %if.then
  tail call void @llvm.dbg.value(metadata !4635, i64 0, metadata !4640), !dbg !4643
  tail call void @llvm.dbg.value(metadata !4644, i64 0, metadata !4645), !dbg !4643
  %or.i = or i64 %7, %6, !dbg !4646
  store i64 %or.i, i64* %5, align 8, !dbg !4646, !tbaa !4639
  br label %return, !dbg !4648

return:                                           ; preds = %if.then, %entry, %if.then5
  %retval.0 = phi i1 [ true, %if.then5 ], [ false, %if.then ], [ false, %entry ]
  ret i1 %retval.0, !dbg !4649
}
