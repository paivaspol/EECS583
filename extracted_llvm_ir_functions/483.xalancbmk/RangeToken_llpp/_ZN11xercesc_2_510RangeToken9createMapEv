define void @_ZN11xercesc_2_510RangeToken9createMapEv(%"class.xercesc_2_5::RangeToken"* nocapture %this) #0 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::RangeToken"* %this}, i64 0, metadata !1099), !dbg !1755
  tail call void @llvm.dbg.value(metadata !1756, i64 0, metadata !1100), !dbg !1757
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_5::RangeToken"* %this, i64 0, i32 9, !dbg !1758
  %0 = load %"class.xercesc_2_5::MemoryManager"** %fMemoryManager, align 8, !dbg !1758, !tbaa !1417
  %1 = bitcast %"class.xercesc_2_5::MemoryManager"* %0 to i8* (%"class.xercesc_2_5::MemoryManager"*, i64)***, !dbg !1758
  %vtable = load i8* (%"class.xercesc_2_5::MemoryManager"*, i64)*** %1, align 8, !dbg !1758, !tbaa !1412
  %vfn = getelementptr inbounds i8* (%"class.xercesc_2_5::MemoryManager"*, i64)** %vtable, i64 2, !dbg !1758
  %2 = load i8* (%"class.xercesc_2_5::MemoryManager"*, i64)** %vfn, align 8, !dbg !1758
  %call = tail call i8* %2(%"class.xercesc_2_5::MemoryManager"* %0, i64 32) #9, !dbg !1758
  %3 = bitcast i8* %call to i32*, !dbg !1758
  %fMap = getelementptr inbounds %"class.xercesc_2_5::RangeToken"* %this, i64 0, i32 6, !dbg !1758
  store i32* %3, i32** %fMap, align 8, !dbg !1758, !tbaa !1417
  %fElemCount = getelementptr inbounds %"class.xercesc_2_5::RangeToken"* %this, i64 0, i32 4, !dbg !1759
  %4 = load i32* %fElemCount, align 4, !dbg !1759, !tbaa !1416
  %fNonMapIndex = getelementptr inbounds %"class.xercesc_2_5::RangeToken"* %this, i64 0, i32 3, !dbg !1759
  store i32 %4, i32* %fNonMapIndex, align 4, !dbg !1759, !tbaa !1416
  tail call void @llvm.dbg.value(metadata !925, i64 0, metadata !1101), !dbg !1760
  call void @llvm.memset.p0i8.i64(i8* %call, i8 0, i64 32, i32 4, i1 false), !dbg !1761
  %5 = load i32* %fElemCount, align 4, !dbg !1763, !tbaa !1416
  %cmp551 = icmp eq i32 %5, 0, !dbg !1763
  br i1 %cmp551, label %for.end30, label %for.body6.lr.ph, !dbg !1763

for.body6.lr.ph:                                  ; preds = %entry
  %fRanges = getelementptr inbounds %"class.xercesc_2_5::RangeToken"* %this, i64 0, i32 7, !dbg !1764
  %6 = load i32** %fRanges, align 8, !dbg !1764, !tbaa !1417
  br label %for.body6, !dbg !1763

for.cond3:                                        ; preds = %if.end
  %7 = load i32* %fElemCount, align 4, !dbg !1763, !tbaa !1416
  %cmp5 = icmp ult i32 %add29, %7, !dbg !1763
  br i1 %cmp5, label %for.body6, label %for.end30, !dbg !1763

for.body6:                                        ; preds = %for.body6.lr.ph, %for.cond3
  %j.052 = phi i32 [ 0, %for.body6.lr.ph ], [ %add29, %for.cond3 ]
  %idxprom7 = zext i32 %j.052 to i64, !dbg !1764
  %arrayidx8 = getelementptr inbounds i32* %6, i64 %idxprom7, !dbg !1764
  %8 = load i32* %arrayidx8, align 4, !dbg !1764, !tbaa !1416
  tail call void @llvm.dbg.value(metadata !{i32 %8}, i64 0, metadata !1105), !dbg !1764
  %add44 = or i32 %j.052, 1, !dbg !1765
  %idxprom9 = zext i32 %add44 to i64, !dbg !1765
  %arrayidx11 = getelementptr inbounds i32* %6, i64 %idxprom9, !dbg !1765
  %9 = load i32* %arrayidx11, align 4, !dbg !1765, !tbaa !1416
  tail call void @llvm.dbg.value(metadata !{i32 %9}, i64 0, metadata !1107), !dbg !1765
  %cmp12 = icmp slt i32 %8, 256, !dbg !1766
  br i1 %cmp12, label %for.cond13.preheader, label %if.else, !dbg !1766

for.cond13.preheader:                             ; preds = %for.body6
  %cmp1445 = icmp sgt i32 %8, %9, !dbg !1767
  br i1 %cmp1445, label %if.end, label %for.body16.lr.ph, !dbg !1767

for.body16.lr.ph:                                 ; preds = %for.cond13.preheader
  %10 = load i32** %fMap, align 8, !dbg !1768, !tbaa !1417
  %11 = add i32 %8, -1, !dbg !1767
  %12 = sub i32 %11, %9, !dbg !1767
  %13 = add i32 %8, -256, !dbg !1767
  %14 = icmp ugt i32 %12, %13
  %umax = select i1 %14, i32 %12, i32 %13
  %15 = sub i32 %8, %umax, !dbg !1767
  br label %for.body16, !dbg !1767

for.body16:                                       ; preds = %for.body16, %for.body16.lr.ph
  %k.048 = phi i32 [ %8, %for.body16.lr.ph ], [ %inc21, %for.body16 ]
  %and = and i32 %k.048, 31, !dbg !1768
  %shl = shl i32 1, %and, !dbg !1768
  %div = sdiv i32 %k.048, 32, !dbg !1768
  %idxprom17 = sext i32 %div to i64, !dbg !1768
  %arrayidx19 = getelementptr inbounds i32* %10, i64 %idxprom17, !dbg !1768
  %16 = load i32* %arrayidx19, align 4, !dbg !1768, !tbaa !1416
  %or = or i32 %16, %shl, !dbg !1768
  store i32 %or, i32* %arrayidx19, align 4, !dbg !1768, !tbaa !1416
  %inc21 = add nsw i32 %k.048, 1, !dbg !1767
  tail call void @llvm.dbg.value(metadata !{i32 %inc21}, i64 0, metadata !1108), !dbg !1767
  %exitcond = icmp eq i32 %inc21, %15, !dbg !1767
  br i1 %exitcond, label %if.end, label %for.body16, !dbg !1767

if.else:                                          ; preds = %for.body6
  store i32 %j.052, i32* %fNonMapIndex, align 4, !dbg !1770, !tbaa !1416
  br label %for.end30, !dbg !1772

if.end:                                           ; preds = %for.body16, %for.cond13.preheader
  %cmp24 = icmp sgt i32 %9, 255, !dbg !1773
  %add29 = add i32 %j.052, 2, !dbg !1763
  tail call void @llvm.dbg.value(metadata !{i32 %add29}, i64 0, metadata !1103), !dbg !1763
  br i1 %cmp24, label %if.then25, label %for.cond3, !dbg !1773

if.then25:                                        ; preds = %if.end
  store i32 %j.052, i32* %fNonMapIndex, align 4, !dbg !1774, !tbaa !1416
  br label %for.end30, !dbg !1776

for.end30:                                        ; preds = %entry, %for.cond3, %if.then25, %if.else
  ret void, !dbg !1777
}
