define internal fastcc %"class.xercesc_2_5::XMLMutex"* @_ZN11xercesc_2_5L13gScannerMutexEv() #3 {
entry:
  %lockInit = alloca %"class.xercesc_2_5::XMLMutexLock", align 8
  %.b10 = load i1* @_ZN11xercesc_2_5L11sRegisteredE, align 1
  br i1 %.b10, label %if.end8, label %if.then, !dbg !9252

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata !{%"class.xercesc_2_5::XMLMutexLock"* %lockInit}, metadata !7776), !dbg !9253
  %0 = load %"class.xercesc_2_5::XMLMutex"** @_ZN11xercesc_2_516XMLPlatformUtils13fgAtomicMutexE, align 8, !dbg !9253, !tbaa !8169
  call void @_ZN11xercesc_2_512XMLMutexLockC1EPNS_8XMLMutexE(%"class.xercesc_2_5::XMLMutexLock"* %lockInit, %"class.xercesc_2_5::XMLMutex"* %0) #10, !dbg !9253
  %.b = load i1* @_ZN11xercesc_2_5L11sRegisteredE, align 1
  br i1 %.b, label %if.end, label %if.then2, !dbg !9254

if.then2:                                         ; preds = %if.then
  %call = invoke i8* @_ZN11xercesc_2_57XMemorynwEm(i64 8) #10
          to label %invoke.cont unwind label %lpad, !dbg !9255

invoke.cont:                                      ; preds = %if.then2
  %1 = bitcast i8* %call to %"class.xercesc_2_5::XMLMutex"*, !dbg !9255
  invoke void @_ZN11xercesc_2_58XMLMutexC1Ev(%"class.xercesc_2_5::XMLMutex"* %1) #10
          to label %invoke.cont4 unwind label %lpad3, !dbg !9255

invoke.cont4:                                     ; preds = %invoke.cont
  store %"class.xercesc_2_5::XMLMutex"* %1, %"class.xercesc_2_5::XMLMutex"** @_ZN11xercesc_2_5L13sScannerMutexE, align 8, !dbg !9255, !tbaa !8169
  invoke void @_ZN11xercesc_2_518XMLRegisterCleanup15registerCleanupEPFvvE(%"class.xercesc_2_5::XMLRegisterCleanup"* @_ZN11xercesc_2_5L19scannerMutexCleanupE, void ()* @_ZN11xercesc_2_510XMLScanner18reinitScannerMutexEv) #10
          to label %invoke.cont6 unwind label %lpad, !dbg !9257

invoke.cont6:                                     ; preds = %invoke.cont4
  store i1 true, i1* @_ZN11xercesc_2_5L11sRegisteredE, align 1
  br label %if.end, !dbg !9258

lpad:                                             ; preds = %invoke.cont4, %if.then2
  %2 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !9255
  %3 = extractvalue { i8*, i32 } %2, 0, !dbg !9255
  %4 = extractvalue { i8*, i32 } %2, 1, !dbg !9255
  br label %ehcleanup, !dbg !9255

lpad3:                                            ; preds = %invoke.cont
  %5 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !9255
  %6 = extractvalue { i8*, i32 } %5, 0, !dbg !9255
  %7 = extractvalue { i8*, i32 } %5, 1, !dbg !9255
  invoke void @_ZN11xercesc_2_57XMemorydlEPv(i8* %call) #10
          to label %ehcleanup unwind label %terminate.lpad, !dbg !9255

if.end:                                           ; preds = %invoke.cont6, %if.then
  call void @_ZN11xercesc_2_512XMLMutexLockD1Ev(%"class.xercesc_2_5::XMLMutexLock"* %lockInit) #10, !dbg !9259
  br label %if.end8, !dbg !9260

ehcleanup:                                        ; preds = %lpad3, %lpad
  %exn.slot.0 = phi i8* [ %3, %lpad ], [ %6, %lpad3 ]
  %ehselector.slot.0 = phi i32 [ %4, %lpad ], [ %7, %lpad3 ]
  invoke void @_ZN11xercesc_2_512XMLMutexLockD1Ev(%"class.xercesc_2_5::XMLMutexLock"* %lockInit) #10
          to label %eh.resume unwind label %terminate.lpad, !dbg !9260

if.end8:                                          ; preds = %if.end, %entry
  %8 = load %"class.xercesc_2_5::XMLMutex"** @_ZN11xercesc_2_5L13sScannerMutexE, align 8, !dbg !9261, !tbaa !8169
  ret %"class.xercesc_2_5::XMLMutex"* %8, !dbg !9261

eh.resume:                                        ; preds = %ehcleanup
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.0, 0, !dbg !9260
  %lpad.val9 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.0, 1, !dbg !9260
  resume { i8*, i32 } %lpad.val9, !dbg !9260

terminate.lpad:                                   ; preds = %ehcleanup, %lpad3
  %9 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          catch i8* null, !dbg !9255
  %10 = extractvalue { i8*, i32 } %9, 0, !dbg !9255
  call void @__clang_call_terminate(i8* %10) #9, !dbg !9255
  unreachable, !dbg !9255
}
