define void @_ZN11xercesc_2_510XMLScanner9scanResetERNS_13XMLPScanTokenE(%"class.xercesc_2_5::XMLScanner"* %this, %"class.xercesc_2_5::XMLPScanToken"* nocapture %token) #3 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::XMLScanner"* %this}, i64 0, metadata !6091), !dbg !9008
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::XMLPScanToken"* %token}, i64 0, metadata !6092), !dbg !9008
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::XMLScanner"* %this}, i64 0, metadata !9009), !dbg !9011
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::XMLPScanToken"* %token}, i64 0, metadata !9012), !dbg !9011
  %fScannerId.i = getelementptr inbounds %"class.xercesc_2_5::XMLScanner"* %this, i64 0, i32 29, !dbg !9013
  %0 = load i32* %fScannerId.i, align 4, !dbg !9013, !tbaa !8183
  %fScannerId2.i = getelementptr inbounds %"class.xercesc_2_5::XMLPScanToken"* %token, i64 0, i32 0, !dbg !9013
  %1 = load i32* %fScannerId2.i, align 4, !dbg !9013, !tbaa !8183
  %cmp.i = icmp eq i32 %0, %1, !dbg !9013
  br i1 %cmp.i, label %_ZN11xercesc_2_510XMLScanner12isLegalTokenERKNS_13XMLPScanTokenE.exit, label %if.then, !dbg !9013

_ZN11xercesc_2_510XMLScanner12isLegalTokenERKNS_13XMLPScanTokenE.exit: ; preds = %entry
  %fSequenceId.i = getelementptr inbounds %"class.xercesc_2_5::XMLScanner"* %this, i64 0, i32 30, !dbg !9013
  %2 = load i32* %fSequenceId.i, align 4, !dbg !9013, !tbaa !8183
  %fSequenceId3.i = getelementptr inbounds %"class.xercesc_2_5::XMLPScanToken"* %token, i64 0, i32 1, !dbg !9013
  %3 = load i32* %fSequenceId3.i, align 4, !dbg !9013, !tbaa !8183
  %cmp4.i = icmp eq i32 %2, %3, !dbg !9013
  br i1 %cmp4.i, label %if.end, label %if.then, !dbg !9010

if.then:                                          ; preds = %entry, %_ZN11xercesc_2_510XMLScanner12isLegalTokenERKNS_13XMLPScanTokenE.exit
  %exception = tail call i8* @__cxa_allocate_exception(i64 48) #5, !dbg !9014
  %4 = bitcast i8* %exception to %"class.xercesc_2_5::RuntimeException"*, !dbg !9014
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_5::XMLScanner"* %this, i64 0, i32 53, !dbg !9014
  %5 = load %"class.xercesc_2_5::MemoryManager"** %fMemoryManager, align 8, !dbg !9014, !tbaa !8169
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::RuntimeException"* %4}, i64 0, metadata !9015), !dbg !9016
  tail call void @llvm.dbg.value(metadata !8399, i64 0, metadata !9017), !dbg !9016
  tail call void @llvm.dbg.value(metadata !9018, i64 0, metadata !9019), !dbg !9016
  tail call void @llvm.dbg.value(metadata !9020, i64 0, metadata !9021), !dbg !9016
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::MemoryManager"* %5}, i64 0, metadata !9022), !dbg !9016
  invoke void @_ZN11xercesc_2_516RuntimeExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_5::RuntimeException"* %4, i8* getelementptr inbounds ([62 x i8]* @.str, i64 0, i64 0), i32 676, i32 76, %"class.xercesc_2_5::MemoryManager"* %5) #10
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then
  tail call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_516RuntimeExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_5::RuntimeException"*)* @_ZN11xercesc_2_516RuntimeExceptionD1Ev to i8*)) #11, !dbg !9014
  unreachable, !dbg !9014

lpad:                                             ; preds = %if.then
  %6 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !9014
  tail call void @__cxa_free_exception(i8* %exception) #5, !dbg !9014
  resume { i8*, i32 } %6, !dbg !9014

if.end:                                           ; preds = %_ZN11xercesc_2_510XMLScanner12isLegalTokenERKNS_13XMLPScanTokenE.exit
  %fReaderMgr = getelementptr inbounds %"class.xercesc_2_5::XMLScanner"* %this, i64 0, i32 40, !dbg !9023
  tail call void @_ZN11xercesc_2_59ReaderMgr5resetEv(%"class.xercesc_2_5::ReaderMgr"* %fReaderMgr) #10, !dbg !9023
  %7 = load i32* %fSequenceId.i, align 4, !dbg !9024, !tbaa !8183
  %inc = add i32 %7, 1, !dbg !9024
  store i32 %inc, i32* %fSequenceId.i, align 4, !dbg !9024, !tbaa !8183
  %fErrorCount = getelementptr inbounds %"class.xercesc_2_5::XMLScanner"* %this, i64 0, i32 17, !dbg !9025
  store i32 0, i32* %fErrorCount, align 4, !dbg !9025, !tbaa !8183
  ret void, !dbg !9026
}
