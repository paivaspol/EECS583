define i32 @_ZNK11xercesc_2_59XMLReader12getSrcOffsetEv(%"class.xercesc_2_5::XMLReader"* nocapture %this) #2 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::XMLReader"* %this}, i64 0, metadata !1474), !dbg !2937
  %fSrcOfsSupported = getelementptr inbounds %"class.xercesc_2_5::XMLReader"* %this, i64 0, i32 19, !dbg !2938
  %0 = load i8* %fSrcOfsSupported, align 1, !dbg !2938, !tbaa !2432, !range !2488
  %tobool = icmp eq i8 %0, 0, !dbg !2938
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !2938

lor.lhs.false:                                    ; preds = %entry
  %fCalculateSrcOfs = getelementptr inbounds %"class.xercesc_2_5::XMLReader"* %this, i64 0, i32 20, !dbg !2938
  %1 = load i8* %fCalculateSrcOfs, align 1, !dbg !2938, !tbaa !2432, !range !2488
  %tobool2 = icmp eq i8 %1, 0, !dbg !2938
  br i1 %tobool2, label %if.then, label %if.end, !dbg !2938

if.then:                                          ; preds = %lor.lhs.false, %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 48) #9, !dbg !2939
  %2 = bitcast i8* %exception to %"class.xercesc_2_5::RuntimeException"*, !dbg !2939
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_5::XMLReader"* %this, i64 0, i32 30, !dbg !2939
  %3 = load %"class.xercesc_2_5::MemoryManager"** %fMemoryManager, align 8, !dbg !2939, !tbaa !2403
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::RuntimeException"* %2}, i64 0, metadata !2940), !dbg !2941
  tail call void @llvm.dbg.value(metadata !2570, i64 0, metadata !2942), !dbg !2941
  tail call void @llvm.dbg.value(metadata !2943, i64 0, metadata !2944), !dbg !2941
  tail call void @llvm.dbg.value(metadata !2945, i64 0, metadata !2946), !dbg !2941
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::MemoryManager"* %3}, i64 0, metadata !2947), !dbg !2941
  invoke void @_ZN11xercesc_2_516RuntimeExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_5::RuntimeException"* %2, i8* getelementptr inbounds ([61 x i8]* @.str, i64 0, i64 0), i32 440, i32 72, %"class.xercesc_2_5::MemoryManager"* %3) #10
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then
  tail call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_516RuntimeExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_5::RuntimeException"*)* @_ZN11xercesc_2_516RuntimeExceptionD1Ev to i8*)) #11, !dbg !2939
  unreachable, !dbg !2939

lpad:                                             ; preds = %if.then
  %4 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !2939
  tail call void @__cxa_free_exception(i8* %exception) #9, !dbg !2939
  resume { i8*, i32 } %4, !dbg !2939

if.end:                                           ; preds = %lor.lhs.false
  %fSrcOfsBase = getelementptr inbounds %"class.xercesc_2_5::XMLReader"* %this, i64 0, i32 18, !dbg !2948
  %5 = load i32* %fSrcOfsBase, align 4, !dbg !2948, !tbaa !2430
  tail call void @llvm.dbg.value(metadata !{i32 %5}, i64 0, metadata !1476), !dbg !2948
  tail call void @llvm.dbg.value(metadata !1369, i64 0, metadata !1477), !dbg !2949
  %fCharIndex = getelementptr inbounds %"class.xercesc_2_5::XMLReader"* %this, i64 0, i32 0, !dbg !2949
  %6 = load i32* %fCharIndex, align 4, !dbg !2949, !tbaa !2430
  %cmp7 = icmp eq i32 %6, 0, !dbg !2949
  br i1 %cmp7, label %for.end, label %for.body, !dbg !2949

for.body:                                         ; preds = %if.end, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.end ]
  %offset.08 = phi i32 [ %add, %for.body ], [ %5, %if.end ]
  %arrayidx = getelementptr inbounds %"class.xercesc_2_5::XMLReader"* %this, i64 0, i32 3, i64 %indvars.iv, !dbg !2950
  %7 = load i8* %arrayidx, align 1, !dbg !2950, !tbaa !2401
  %conv = zext i8 %7 to i32, !dbg !2950
  %add = add i32 %conv, %offset.08, !dbg !2950
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !1476), !dbg !2950
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !2949
  %8 = trunc i64 %indvars.iv.next to i32, !dbg !2949
  %cmp = icmp ult i32 %8, %6, !dbg !2949
  br i1 %cmp, label %for.body, label %for.end, !dbg !2949

for.end:                                          ; preds = %for.body, %if.end
  %offset.0.lcssa = phi i32 [ %5, %if.end ], [ %add, %for.body ]
  ret i32 %offset.0.lcssa, !dbg !2951
}
