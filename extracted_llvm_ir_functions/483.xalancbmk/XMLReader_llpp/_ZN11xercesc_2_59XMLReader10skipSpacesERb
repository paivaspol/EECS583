define zeroext i1 @_ZN11xercesc_2_59XMLReader10skipSpacesERb(%"class.xercesc_2_5::XMLReader"* %this, i8* nocapture %skippedSomething) #2 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::XMLReader"* %this}, i64 0, metadata !1516), !dbg !3182
  tail call void @llvm.dbg.value(metadata !{i8* %skippedSomething}, i64 0, metadata !1517), !dbg !3182
  %fCurLine = getelementptr inbounds %"class.xercesc_2_5::XMLReader"* %this, i64 0, i32 5, !dbg !3183
  %0 = load i64* %fCurLine, align 8, !dbg !3183, !tbaa !2431
  tail call void @llvm.dbg.value(metadata !{i64 %0}, i64 0, metadata !1518), !dbg !3183
  %fCurCol = getelementptr inbounds %"class.xercesc_2_5::XMLReader"* %this, i64 0, i32 4, !dbg !3184
  %1 = load i64* %fCurCol, align 8, !dbg !3184, !tbaa !2431
  tail call void @llvm.dbg.value(metadata !{i64 %1}, i64 0, metadata !1519), !dbg !3184
  %fCharIndex = getelementptr inbounds %"class.xercesc_2_5::XMLReader"* %this, i64 0, i32 0, !dbg !3185
  %fCharsAvail = getelementptr inbounds %"class.xercesc_2_5::XMLReader"* %this, i64 0, i32 2, !dbg !3185
  %fgCharCharsTable.i = getelementptr inbounds %"class.xercesc_2_5::XMLReader"* %this, i64 0, i32 27, !dbg !3186
  %fSource = getelementptr inbounds %"class.xercesc_2_5::XMLReader"* %this, i64 0, i32 17, !dbg !3188
  %fNEL = getelementptr inbounds %"class.xercesc_2_5::XMLReader"* %this, i64 0, i32 28, !dbg !3190
  br label %while.cond2, !dbg !3193

while.cond2:                                      ; preds = %if.then20, %land.lhs.true, %while.end, %if.then50, %if.else54, %if.then10, %if.then34, %lor.lhs.false, %entry
  %2 = load i32* %fCharIndex, align 4, !dbg !3185, !tbaa !2430
  %3 = load i32* %fCharsAvail, align 4, !dbg !3185, !tbaa !2430
  %cmp = icmp ult i32 %2, %3, !dbg !3185
  br i1 %cmp, label %while.body3, label %while.end, !dbg !3185

while.body3:                                      ; preds = %while.cond2
  %idxprom = zext i32 %2 to i64, !dbg !3187
  %arrayidx = getelementptr inbounds %"class.xercesc_2_5::XMLReader"* %this, i64 0, i32 1, i64 %idxprom, !dbg !3187
  %4 = load i16* %arrayidx, align 2, !dbg !3187, !tbaa !2400
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::XMLReader"* %this}, i64 0, metadata !3194), !dbg !3195
  tail call void @llvm.dbg.value(metadata !{i16 %4}, i64 0, metadata !3196), !dbg !3195
  %idxprom.i = zext i16 %4 to i64, !dbg !3186
  %5 = load i8** %fgCharCharsTable.i, align 8, !dbg !3186, !tbaa !2403
  %arrayidx.i = getelementptr inbounds i8* %5, i64 %idxprom.i, !dbg !3186
  %6 = load i8* %arrayidx.i, align 1, !dbg !3186, !tbaa !2401
  %cmp.i = icmp slt i8 %6, 0, !dbg !3186
  br i1 %cmp.i, label %if.then, label %if.else59, !dbg !3187

if.then:                                          ; preds = %while.body3
  %inc = add i32 %2, 1, !dbg !3197
  store i32 %inc, i32* %fCharIndex, align 4, !dbg !3197, !tbaa !2430
  %7 = load i16* %arrayidx, align 2, !dbg !3197, !tbaa !2400
  tail call void @llvm.dbg.value(metadata !{i16 %7}, i64 0, metadata !1520), !dbg !3197
  switch i16 %7, label %if.else54 [
    i16 13, label %if.then10
    i16 10, label %if.then50
    i16 133, label %land.lhs.true47
    i16 8232, label %land.lhs.true47
  ], !dbg !3198

if.then10:                                        ; preds = %if.then
  store i64 1, i64* %fCurCol, align 8, !dbg !3199, !tbaa !2431
  %8 = load i64* %fCurLine, align 8, !dbg !3200, !tbaa !2431
  %inc13 = add nsw i64 %8, 1, !dbg !3200
  store i64 %inc13, i64* %fCurLine, align 8, !dbg !3200, !tbaa !2431
  %9 = load i32* %fSource, align 4, !dbg !3188, !tbaa !2454
  %cmp14 = icmp eq i32 %9, 1, !dbg !3188
  br i1 %cmp14, label %if.then15, label %while.cond2, !dbg !3188

if.then15:                                        ; preds = %if.then10
  %cmp18 = icmp ult i32 %inc, %3, !dbg !3201
  br i1 %cmp18, label %if.then20, label %lor.lhs.false, !dbg !3201

lor.lhs.false:                                    ; preds = %if.then15
  %call19 = tail call zeroext i1 @_ZN11xercesc_2_59XMLReader17refreshCharBufferEv(%"class.xercesc_2_5::XMLReader"* %this) #10, !dbg !3201
  br i1 %call19, label %lor.lhs.false.if.then20_crit_edge, label %while.cond2, !dbg !3201

lor.lhs.false.if.then20_crit_edge:                ; preds = %lor.lhs.false
  %.pre = load i32* %fCharIndex, align 4, !dbg !3190, !tbaa !2430
  br label %if.then20, !dbg !3201

if.then20:                                        ; preds = %lor.lhs.false.if.then20_crit_edge, %if.then15
  %10 = phi i32 [ %.pre, %lor.lhs.false.if.then20_crit_edge ], [ %inc, %if.then15 ]
  %idxprom22 = zext i32 %10 to i64, !dbg !3190
  %arrayidx24 = getelementptr inbounds %"class.xercesc_2_5::XMLReader"* %this, i64 0, i32 1, i64 %idxprom22, !dbg !3190
  %11 = load i16* %arrayidx24, align 2, !dbg !3190, !tbaa !2400
  switch i16 %11, label %while.cond2 [
    i16 10, label %if.then34
    i16 133, label %land.lhs.true
  ], !dbg !3190

land.lhs.true:                                    ; preds = %if.then20
  %12 = load i8* %fNEL, align 1, !dbg !3190, !tbaa !2432, !range !2488
  %tobool = icmp eq i8 %12, 0, !dbg !3190
  br i1 %tobool, label %while.cond2, label %if.then34, !dbg !3190

if.then34:                                        ; preds = %if.then20, %land.lhs.true
  %inc36 = add i32 %10, 1, !dbg !3202
  store i32 %inc36, i32* %fCharIndex, align 4, !dbg !3202, !tbaa !2430
  br label %while.cond2, !dbg !3202

land.lhs.true47:                                  ; preds = %if.then, %if.then
  %13 = load i8* %fNEL, align 1, !dbg !3203, !tbaa !2432, !range !2488
  %tobool49 = icmp eq i8 %13, 0, !dbg !3203
  br i1 %tobool49, label %if.else54, label %if.then50, !dbg !3203

if.then50:                                        ; preds = %land.lhs.true47, %if.then
  store i64 1, i64* %fCurCol, align 8, !dbg !3204, !tbaa !2431
  %14 = load i64* %fCurLine, align 8, !dbg !3206, !tbaa !2431
  %inc53 = add nsw i64 %14, 1, !dbg !3206
  store i64 %inc53, i64* %fCurLine, align 8, !dbg !3206, !tbaa !2431
  br label %while.cond2, !dbg !3207

if.else54:                                        ; preds = %land.lhs.true47, %if.then
  %15 = load i64* %fCurCol, align 8, !dbg !3208, !tbaa !2431
  %inc56 = add nsw i64 %15, 1, !dbg !3208
  store i64 %inc56, i64* %fCurCol, align 8, !dbg !3208, !tbaa !2431
  br label %while.cond2

if.else59:                                        ; preds = %while.body3
  %16 = load i64* %fCurLine, align 8, !dbg !3210, !tbaa !2431
  %cmp61 = icmp eq i64 %0, %16, !dbg !3210
  br i1 %cmp61, label %lor.rhs, label %return, !dbg !3210

lor.rhs:                                          ; preds = %if.else59
  %17 = load i64* %fCurCol, align 8, !dbg !3210, !tbaa !2431
  %cmp63 = icmp ne i64 %1, %17, !dbg !3210
  br label %return, !dbg !3210

while.end:                                        ; preds = %while.cond2
  %call65 = tail call zeroext i1 @_ZN11xercesc_2_59XMLReader17refreshCharBufferEv(%"class.xercesc_2_5::XMLReader"* %this) #10, !dbg !3212
  br i1 %call65, label %while.cond2, label %while.end68, !dbg !3212

while.end68:                                      ; preds = %while.end
  %18 = load i64* %fCurLine, align 8, !dbg !3213, !tbaa !2431
  %cmp70 = icmp eq i64 %0, %18, !dbg !3213
  br i1 %cmp70, label %lor.rhs71, label %return, !dbg !3213

lor.rhs71:                                        ; preds = %while.end68
  %19 = load i64* %fCurCol, align 8, !dbg !3213, !tbaa !2431
  %cmp73 = icmp ne i64 %1, %19, !dbg !3213
  br label %return, !dbg !3213

return:                                           ; preds = %lor.rhs, %if.else59, %lor.rhs71, %while.end68
  %.sink = phi i1 [ true, %while.end68 ], [ %cmp73, %lor.rhs71 ], [ true, %if.else59 ], [ %cmp63, %lor.rhs ]
  %retval.0 = phi i1 [ false, %while.end68 ], [ false, %lor.rhs71 ], [ true, %if.else59 ], [ true, %lor.rhs ]
  %frombool = zext i1 %.sink to i8, !dbg !3210
  store i8 %frombool, i8* %skippedSomething, align 1, !dbg !3210, !tbaa !2432
  ret i1 %retval.0, !dbg !3214
}
