define internal fastcc void @_ZN11xercesc_2_5L10setupRangeEPiPKtj(i32* nocapture %rangeMap, i16* nocapture %theTable, i32 %startingIndex) #4 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32* %rangeMap}, i64 0, metadata !1024), !dbg !1634
  tail call void @llvm.dbg.value(metadata !{i16* %theTable}, i64 0, metadata !1025), !dbg !1635
  tail call void @llvm.dbg.value(metadata !{i32 %startingIndex}, i64 0, metadata !1026), !dbg !1636
  tail call void @llvm.dbg.value(metadata !{i16* %theTable}, i64 0, metadata !1027), !dbg !1637
  %0 = load i16* %theTable, align 2, !dbg !1638, !tbaa !1507
  %tobool26 = icmp eq i16 %0, 0, !dbg !1638
  %incdec.ptr27 = getelementptr inbounds i16* %theTable, i64 1, !dbg !1639
  tail call void @llvm.dbg.value(metadata !{i16* %incdec.ptr.lcssa}, i64 0, metadata !1027), !dbg !1639
  br i1 %tobool26, label %while.cond2.preheader, label %while.body, !dbg !1638

while.cond2.preheader:                            ; preds = %while.body, %entry
  %incdec.ptr.lcssa = phi i16* [ %incdec.ptr27, %entry ], [ %incdec.ptr, %while.body ]
  %startingIndex.addr.0.lcssa = phi i32 [ %startingIndex, %entry ], [ %inc, %while.body ]
  %1 = load i16* %incdec.ptr.lcssa, align 2, !dbg !1641, !tbaa !1507
  %tobool323 = icmp eq i16 %1, 0, !dbg !1641
  br i1 %tobool323, label %while.end14, label %while.body4, !dbg !1641

while.body:                                       ; preds = %entry, %while.body
  %incdec.ptr29 = phi i16* [ %incdec.ptr, %while.body ], [ %incdec.ptr27, %entry ]
  %2 = phi i16 [ %3, %while.body ], [ %0, %entry ]
  %startingIndex.addr.028 = phi i32 [ %inc, %while.body ], [ %startingIndex, %entry ]
  %conv = zext i16 %2 to i32, !dbg !1639
  %inc = add i32 %startingIndex.addr.028, 1, !dbg !1639
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !1026), !dbg !1639
  %idxprom = zext i32 %startingIndex.addr.028 to i64, !dbg !1639
  %arrayidx = getelementptr inbounds i32* %rangeMap, i64 %idxprom, !dbg !1639
  store i32 %conv, i32* %arrayidx, align 4, !dbg !1639, !tbaa !1584
  %3 = load i16* %incdec.ptr29, align 2, !dbg !1638, !tbaa !1507
  %tobool = icmp eq i16 %3, 0, !dbg !1638
  %incdec.ptr = getelementptr inbounds i16* %incdec.ptr29, i64 1, !dbg !1639
  tail call void @llvm.dbg.value(metadata !{i16* %incdec.ptr.lcssa}, i64 0, metadata !1027), !dbg !1639
  br i1 %tobool, label %while.cond2.preheader, label %while.body, !dbg !1638

while.body4:                                      ; preds = %while.cond2.preheader, %while.body4
  %4 = phi i16 [ %5, %while.body4 ], [ %1, %while.cond2.preheader ]
  %startingIndex.addr.125 = phi i32 [ %inc11, %while.body4 ], [ %startingIndex.addr.0.lcssa, %while.cond2.preheader ]
  %pchCur.124 = phi i16* [ %incdec.ptr5, %while.body4 ], [ %incdec.ptr.lcssa, %while.cond2.preheader ]
  %incdec.ptr5 = getelementptr inbounds i16* %pchCur.124, i64 1, !dbg !1642
  tail call void @llvm.dbg.value(metadata !{i16* %incdec.ptr5}, i64 0, metadata !1027), !dbg !1642
  tail call void @llvm.dbg.value(metadata !{i16 %4}, i64 0, metadata !1029), !dbg !1642
  %conv6 = zext i16 %4 to i32, !dbg !1643
  %inc7 = add i32 %startingIndex.addr.125, 1, !dbg !1643
  tail call void @llvm.dbg.value(metadata !{i32 %inc7}, i64 0, metadata !1026), !dbg !1643
  %idxprom8 = zext i32 %startingIndex.addr.125 to i64, !dbg !1643
  %arrayidx9 = getelementptr inbounds i32* %rangeMap, i64 %idxprom8, !dbg !1643
  store i32 %conv6, i32* %arrayidx9, align 4, !dbg !1643, !tbaa !1584
  %inc11 = add i32 %startingIndex.addr.125, 2, !dbg !1644
  tail call void @llvm.dbg.value(metadata !{i32 %inc11}, i64 0, metadata !1026), !dbg !1644
  %idxprom12 = zext i32 %inc7 to i64, !dbg !1644
  %arrayidx13 = getelementptr inbounds i32* %rangeMap, i64 %idxprom12, !dbg !1644
  store i32 %conv6, i32* %arrayidx13, align 4, !dbg !1644, !tbaa !1584
  %5 = load i16* %incdec.ptr5, align 2, !dbg !1641, !tbaa !1507
  %tobool3 = icmp eq i16 %5, 0, !dbg !1641
  br i1 %tobool3, label %while.end14, label %while.body4, !dbg !1641

while.end14:                                      ; preds = %while.body4, %while.cond2.preheader
  ret void, !dbg !1645
}
