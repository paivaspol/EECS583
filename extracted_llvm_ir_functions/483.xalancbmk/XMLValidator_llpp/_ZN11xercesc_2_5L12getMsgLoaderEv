define internal fastcc %"class.xercesc_2_5::XMLMsgLoader"* @_ZN11xercesc_2_5L12getMsgLoaderEv() #3 {
entry:
  %lockInit.i = alloca %"class.xercesc_2_5::XMLMutexLock", align 8
  %lockInit = alloca %"class.xercesc_2_5::XMLMutexLock", align 8
  %0 = load %"class.xercesc_2_5::XMLMsgLoader"** @_ZN11xercesc_2_5L10sMsgLoaderE, align 8, !dbg !4029, !tbaa !3974
  %tobool = icmp eq %"class.xercesc_2_5::XMLMsgLoader"* %0, null, !dbg !4029
  br i1 %tobool, label %if.then, label %if.end10, !dbg !4029

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata !{%"class.xercesc_2_5::XMLMutexLock"* %lockInit}, metadata !3665), !dbg !4030
  %1 = bitcast %"class.xercesc_2_5::XMLMutexLock"* %lockInit.i to i8*, !dbg !4031
  call void @llvm.lifetime.start(i64 8, i8* %1), !dbg !4031
  %2 = load %"class.xercesc_2_5::XMLMutex"** @_ZN11xercesc_2_5L9sMsgMutexE, align 8, !dbg !4031, !tbaa !3974
  %tobool.i = icmp eq %"class.xercesc_2_5::XMLMutex"* %2, null, !dbg !4031
  br i1 %tobool.i, label %if.then.i, label %_ZN11xercesc_2_5L15gValidatorMutexEv.exit, !dbg !4031

if.then.i:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata !{%"class.xercesc_2_5::XMLMutexLock"* %lockInit.i}, metadata !3936), !dbg !4032
  %3 = load %"class.xercesc_2_5::XMLMutex"** @_ZN11xercesc_2_516XMLPlatformUtils13fgAtomicMutexE, align 8, !dbg !4032, !tbaa !3974
  call void @_ZN11xercesc_2_512XMLMutexLockC1EPNS_8XMLMutexE(%"class.xercesc_2_5::XMLMutexLock"* %lockInit.i, %"class.xercesc_2_5::XMLMutex"* %3) #8, !dbg !4032
  %4 = load %"class.xercesc_2_5::XMLMutex"** @_ZN11xercesc_2_5L9sMsgMutexE, align 8, !dbg !4033, !tbaa !3974
  %tobool1.i = icmp eq %"class.xercesc_2_5::XMLMutex"* %4, null, !dbg !4033
  br i1 %tobool1.i, label %if.then2.i, label %if.end.i, !dbg !4033

if.then2.i:                                       ; preds = %if.then.i
  %call.i = invoke i8* @_ZN11xercesc_2_57XMemorynwEm(i64 8) #8
          to label %invoke.cont.i unwind label %lpad.i, !dbg !4034

invoke.cont.i:                                    ; preds = %if.then2.i
  %5 = bitcast i8* %call.i to %"class.xercesc_2_5::XMLMutex"*, !dbg !4034
  invoke void @_ZN11xercesc_2_58XMLMutexC1Ev(%"class.xercesc_2_5::XMLMutex"* %5) #8
          to label %invoke.cont4.i unwind label %lpad3.i, !dbg !4034

invoke.cont4.i:                                   ; preds = %invoke.cont.i
  store %"class.xercesc_2_5::XMLMutex"* %5, %"class.xercesc_2_5::XMLMutex"** @_ZN11xercesc_2_5L9sMsgMutexE, align 8, !dbg !4034, !tbaa !3974
  invoke void @_ZN11xercesc_2_518XMLRegisterCleanup15registerCleanupEPFvvE(%"class.xercesc_2_5::XMLRegisterCleanup"* @_ZN11xercesc_2_5L21validatorMutexCleanupE, void ()* @_ZN11xercesc_2_512XMLValidator14reinitMsgMutexEv) #8
          to label %if.end.i unwind label %lpad.i, !dbg !4036

lpad.i:                                           ; preds = %invoke.cont4.i, %if.then2.i
  %6 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !4034
  %7 = extractvalue { i8*, i32 } %6, 0, !dbg !4034
  %8 = extractvalue { i8*, i32 } %6, 1, !dbg !4034
  br label %ehcleanup.i, !dbg !4034

lpad3.i:                                          ; preds = %invoke.cont.i
  %9 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !4034
  %10 = extractvalue { i8*, i32 } %9, 0, !dbg !4034
  %11 = extractvalue { i8*, i32 } %9, 1, !dbg !4034
  invoke void @_ZN11xercesc_2_57XMemorydlEPv(i8* %call.i) #8
          to label %ehcleanup.i unwind label %terminate.lpad.i, !dbg !4034

if.end.i:                                         ; preds = %invoke.cont4.i, %if.then.i
  call void @_ZN11xercesc_2_512XMLMutexLockD1Ev(%"class.xercesc_2_5::XMLMutexLock"* %lockInit.i) #8, !dbg !4037
  %.pre.i = load %"class.xercesc_2_5::XMLMutex"** @_ZN11xercesc_2_5L9sMsgMutexE, align 8, !dbg !4038, !tbaa !3974
  br label %_ZN11xercesc_2_5L15gValidatorMutexEv.exit, !dbg !4039

ehcleanup.i:                                      ; preds = %lpad3.i, %lpad.i
  %exn.slot.0.i = phi i8* [ %7, %lpad.i ], [ %10, %lpad3.i ]
  %ehselector.slot.0.i = phi i32 [ %8, %lpad.i ], [ %11, %lpad3.i ]
  invoke void @_ZN11xercesc_2_512XMLMutexLockD1Ev(%"class.xercesc_2_5::XMLMutexLock"* %lockInit.i) #8
          to label %eh.resume.i unwind label %terminate.lpad.i, !dbg !4039

eh.resume.i:                                      ; preds = %ehcleanup.i
  %lpad.val.i = insertvalue { i8*, i32 } undef, i8* %exn.slot.0.i, 0, !dbg !4039
  %lpad.val9.i = insertvalue { i8*, i32 } %lpad.val.i, i32 %ehselector.slot.0.i, 1, !dbg !4039
  resume { i8*, i32 } %lpad.val9.i, !dbg !4039

terminate.lpad.i:                                 ; preds = %ehcleanup.i, %lpad3.i
  %12 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          catch i8* null, !dbg !4034
  %13 = extractvalue { i8*, i32 } %12, 0, !dbg !4034
  call void @__clang_call_terminate(i8* %13) #7, !dbg !4034
  unreachable, !dbg !4034

_ZN11xercesc_2_5L15gValidatorMutexEv.exit:        ; preds = %if.then, %if.end.i
  %14 = phi %"class.xercesc_2_5::XMLMutex"* [ %2, %if.then ], [ %.pre.i, %if.end.i ]
  call void @llvm.lifetime.end(i64 8, i8* %1), !dbg !4038
  call void @_ZN11xercesc_2_512XMLMutexLockC1EPNS_8XMLMutexE(%"class.xercesc_2_5::XMLMutexLock"* %lockInit, %"class.xercesc_2_5::XMLMutex"* %14) #8, !dbg !4030
  %15 = load %"class.xercesc_2_5::XMLMsgLoader"** @_ZN11xercesc_2_5L10sMsgLoaderE, align 8, !dbg !4040, !tbaa !3974
  %tobool1 = icmp eq %"class.xercesc_2_5::XMLMsgLoader"* %15, null, !dbg !4040
  br i1 %tobool1, label %if.then2, label %if.end8, !dbg !4040

if.then2:                                         ; preds = %_ZN11xercesc_2_5L15gValidatorMutexEv.exit
  %call3 = invoke %"class.xercesc_2_5::XMLMsgLoader"* @_ZN11xercesc_2_516XMLPlatformUtils10loadMsgSetEPKt(i16* getelementptr inbounds ([0 x i16]* @_ZN11xercesc_2_56XMLUni16fgValidityDomainE, i64 0, i64 0)) #8
          to label %invoke.cont unwind label %lpad, !dbg !4041

invoke.cont:                                      ; preds = %if.then2
  store %"class.xercesc_2_5::XMLMsgLoader"* %call3, %"class.xercesc_2_5::XMLMsgLoader"** @_ZN11xercesc_2_5L10sMsgLoaderE, align 8, !dbg !4041, !tbaa !3974
  %tobool4 = icmp eq %"class.xercesc_2_5::XMLMsgLoader"* %call3, null, !dbg !4043
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !4043

if.then5:                                         ; preds = %invoke.cont
  invoke void @_ZN11xercesc_2_516XMLPlatformUtils5panicENS_12PanicHandler12PanicReasonsE(i32 4) #8
          to label %if.end unwind label %lpad, !dbg !4044

lpad:                                             ; preds = %if.end, %if.then5, %if.then2
  %16 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !4041
  invoke void @_ZN11xercesc_2_512XMLMutexLockD1Ev(%"class.xercesc_2_5::XMLMutexLock"* %lockInit) #8
          to label %eh.resume unwind label %terminate.lpad, !dbg !4045

if.end:                                           ; preds = %invoke.cont, %if.then5
  invoke void @_ZN11xercesc_2_518XMLRegisterCleanup15registerCleanupEPFvvE(%"class.xercesc_2_5::XMLRegisterCleanup"* @_ZN11xercesc_2_5L16msgLoaderCleanupE, void ()* @_ZN11xercesc_2_512XMLValidator15reinitMsgLoaderEv) #8
          to label %if.end8 unwind label %lpad, !dbg !4046

if.end8:                                          ; preds = %_ZN11xercesc_2_5L15gValidatorMutexEv.exit, %if.end
  call void @_ZN11xercesc_2_512XMLMutexLockD1Ev(%"class.xercesc_2_5::XMLMutexLock"* %lockInit) #8, !dbg !4047
  %.pre = load %"class.xercesc_2_5::XMLMsgLoader"** @_ZN11xercesc_2_5L10sMsgLoaderE, align 8, !dbg !4048, !tbaa !3974
  br label %if.end10, !dbg !4045

if.end10:                                         ; preds = %entry, %if.end8
  %17 = phi %"class.xercesc_2_5::XMLMsgLoader"* [ %0, %entry ], [ %.pre, %if.end8 ]
  ret %"class.xercesc_2_5::XMLMsgLoader"* %17, !dbg !4048

eh.resume:                                        ; preds = %lpad
  resume { i8*, i32 } %16, !dbg !4045

terminate.lpad:                                   ; preds = %lpad
  %18 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          catch i8* null, !dbg !4045
  %19 = extractvalue { i8*, i32 } %18, 0, !dbg !4045
  call void @__clang_call_terminate(i8* %19) #7, !dbg !4045
  unreachable, !dbg !4045
}
