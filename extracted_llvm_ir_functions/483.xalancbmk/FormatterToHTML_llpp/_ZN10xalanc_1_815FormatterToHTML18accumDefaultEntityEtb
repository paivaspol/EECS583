define zeroext i1 @_ZN10xalanc_1_815FormatterToHTML18accumDefaultEntityEtb(%"class.xalanc_1_8::FormatterToHTML"* %this, i16 zeroext %ch, i1 zeroext %escLF) unnamed_addr #1 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::FormatterToHTML"* %this}, i64 0, metadata !3541), !dbg !6216
  tail call void @llvm.dbg.value(metadata !{i16 %ch}, i64 0, metadata !3542), !dbg !6217
  tail call void @llvm.dbg.value(metadata !{i1 %escLF}, i64 0, metadata !3543), !dbg !6218
  %0 = getelementptr inbounds %"class.xalanc_1_8::FormatterToHTML"* %this, i64 0, i32 0, !dbg !6219
  %call = tail call zeroext i1 @_ZN10xalanc_1_814FormatterToXML18accumDefaultEntityEtb(%"class.xalanc_1_8::FormatterToXML"* %0, i16 zeroext %ch, i1 zeroext %escLF) #10, !dbg !6219
  br i1 %call, label %return, label %while.body.lr.ph, !dbg !6219

while.body.lr.ph:                                 ; preds = %entry, %if.then13
  %theLast.0.ph33 = phi %"struct.xalanc_1_8::FormatterToHTML::Entity"* [ %theLast.029, %if.then13 ], [ bitcast (i16* getelementptr inbounds (<{ { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] } }>* @_ZN10xalanc_1_815FormatterToHTML10s_entitiesE, i64 0, i32 194, i32 0) to %"struct.xalanc_1_8::FormatterToHTML::Entity"*), %entry ]
  %theFirst.0.ph32 = phi %"struct.xalanc_1_8::FormatterToHTML::Entity"* [ %add.ptr14, %if.then13 ], [ bitcast (<{ { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] }, { i16, i32, [9 x i16], [2 x i8] } }>* @_ZN10xalanc_1_815FormatterToHTML10s_entitiesE to %"struct.xalanc_1_8::FormatterToHTML::Entity"*), %entry ]
  %sub.ptr.rhs.cast = ptrtoint %"struct.xalanc_1_8::FormatterToHTML::Entity"* %theFirst.0.ph32 to i64, !dbg !6220
  br label %while.body, !dbg !6221

while.body:                                       ; preds = %while.body.lr.ph, %if.then6
  %theLast.029 = phi %"struct.xalanc_1_8::FormatterToHTML::Entity"* [ %theLast.0.ph33, %while.body.lr.ph ], [ %add.ptr7, %if.then6 ]
  %sub.ptr.lhs.cast = ptrtoint %"struct.xalanc_1_8::FormatterToHTML::Entity"* %theLast.029 to i64, !dbg !6220
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6220
  %div = sdiv i64 %sub.ptr.sub, 56, !dbg !6220
  %m_char = getelementptr inbounds %"struct.xalanc_1_8::FormatterToHTML::Entity"* %theFirst.0.ph32, i64 %div, i32 0, !dbg !6222
  %1 = load i16* %m_char, align 2, !dbg !6222, !tbaa !5048
  %cmp5 = icmp ugt i16 %1, %ch, !dbg !6222
  br i1 %cmp5, label %if.then6, label %if.else8, !dbg !6222

if.then6:                                         ; preds = %while.body
  %add.ptr.sum26 = add i64 %div, -1, !dbg !6223
  %add.ptr7 = getelementptr inbounds %"struct.xalanc_1_8::FormatterToHTML::Entity"* %theFirst.0.ph32, i64 %add.ptr.sum26, !dbg !6223
  tail call void @llvm.dbg.value(metadata !{%"struct.xalanc_1_8::FormatterToHTML::Entity"* %add.ptr7}, i64 0, metadata !3546), !dbg !6223
  %cmp2 = icmp slt i64 %add.ptr.sum26, 0, !dbg !6221
  br i1 %cmp2, label %return, label %while.body, !dbg !6221

if.else8:                                         ; preds = %while.body
  %cmp12 = icmp ult i16 %1, %ch, !dbg !6225
  br i1 %cmp12, label %if.then13, label %if.else15, !dbg !6225

if.then13:                                        ; preds = %if.else8
  %add.ptr.sum = add i64 %div, 1, !dbg !6226
  %add.ptr14 = getelementptr inbounds %"struct.xalanc_1_8::FormatterToHTML::Entity"* %theFirst.0.ph32, i64 %add.ptr.sum, !dbg !6226
  tail call void @llvm.dbg.value(metadata !{%"struct.xalanc_1_8::FormatterToHTML::Entity"* %add.ptr14}, i64 0, metadata !3544), !dbg !6226
  %cmp228 = icmp ugt %"struct.xalanc_1_8::FormatterToHTML::Entity"* %add.ptr14, %theLast.029, !dbg !6221
  br i1 %cmp228, label %return, label %while.body.lr.ph, !dbg !6221

if.else15:                                        ; preds = %if.else8
  %arraydecay = getelementptr inbounds %"struct.xalanc_1_8::FormatterToHTML::Entity"* %theFirst.0.ph32, i64 %div, i32 2, i64 0, !dbg !6228
  %m_length = getelementptr inbounds %"struct.xalanc_1_8::FormatterToHTML::Entity"* %theFirst.0.ph32, i64 %div, i32 1, !dbg !6228
  %2 = load i32* %m_length, align 4, !dbg !6228, !tbaa !4961
  tail call void @_ZN10xalanc_1_815FormatterToHTML20copyEntityIntoBufferEPKtj(%"class.xalanc_1_8::FormatterToHTML"* %this, i16* %arraydecay, i32 %2) #10, !dbg !6228
  br label %return, !dbg !6230

return:                                           ; preds = %if.then6, %if.then13, %entry, %if.else15
  %retval.0 = phi i1 [ true, %if.else15 ], [ true, %entry ], [ false, %if.then13 ], [ false, %if.then6 ]
  ret i1 %retval.0, !dbg !6231
}
