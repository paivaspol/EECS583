define zeroext i1 @_ZN11xercesc_2_517RegularExpression9matchCharEPNS0_7ContextEiRisb(%"class.xercesc_2_5::RegularExpression"* nocapture %this, %"class.xercesc_2_5::RegularExpression::Context"* nocapture %context, i32 %ch, i32* nocapture %offset, i16 signext %direction, i1 zeroext %ignoreCase) #3 align 2 {
entry:
  %ch1.addr.i = alloca i32, align 4
  %ch2.addr.i = alloca i32, align 4
  %tmpOffset = alloca i32, align 4
  %strCh = alloca i32, align 4
  call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::RegularExpression"* %this}, i64 0, metadata !3101), !dbg !6317
  call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::RegularExpression::Context"* %context}, i64 0, metadata !3102), !dbg !6317
  call void @llvm.dbg.value(metadata !{i32 %ch}, i64 0, metadata !3103), !dbg !6318
  call void @llvm.dbg.value(metadata !{i32* %offset}, i64 0, metadata !3104), !dbg !6318
  call void @llvm.dbg.value(metadata !{i16 %direction}, i64 0, metadata !3105), !dbg !6319
  call void @llvm.dbg.value(metadata !{i1 %ignoreCase}, i64 0, metadata !3106), !dbg !6319
  call void @llvm.dbg.declare(metadata !{i32* %tmpOffset}, metadata !3107), !dbg !6320
  %cmp = icmp sgt i16 %direction, 0, !dbg !6320
  %0 = load i32* %offset, align 4, !dbg !6320, !tbaa !4692
  %not.cmp = xor i1 %cmp, true, !dbg !6320
  %sub = sext i1 %not.cmp to i32, !dbg !6320
  %cond = add nsw i32 %0, %sub, !dbg !6320
  call void @llvm.dbg.value(metadata !{i32 %cond}, i64 0, metadata !3107), !dbg !6320
  store i32 %cond, i32* %tmpOffset, align 4, !dbg !6320, !tbaa !4692
  %fLimit = getelementptr inbounds %"class.xercesc_2_5::RegularExpression::Context"* %context, i64 0, i32 2, !dbg !6321
  %1 = load i32* %fLimit, align 4, !dbg !6321, !tbaa !4692
  %cmp2 = icmp sge i32 %cond, %1, !dbg !6321
  %cmp3 = icmp slt i32 %cond, 0, !dbg !6321
  %or.cond = or i1 %cmp2, %cmp3, !dbg !6321
  br i1 %or.cond, label %return, label %if.end, !dbg !6321

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata !{i32* %strCh}, metadata !3108), !dbg !6322
  call void @llvm.dbg.value(metadata !1440, i64 0, metadata !3108), !dbg !6322
  store i32 0, i32* %strCh, align 4, !dbg !6322, !tbaa !4692
  %call = call zeroext i1 @_ZN11xercesc_2_517RegularExpression7Context6nextChERiS2_s(%"class.xercesc_2_5::RegularExpression::Context"* %context, i32* %strCh, i32* %tmpOffset, i16 signext %direction) #9, !dbg !6323
  br i1 %call, label %if.end5, label %return, !dbg !6323

if.end5:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata !{i32* %strCh}, i64 0, metadata !3108), !dbg !6324
  %2 = load i32* %strCh, align 4, !dbg !6324, !tbaa !4692
  br i1 %ignoreCase, label %cond.true6, label %cond.end10, !dbg !6325

cond.true6:                                       ; preds = %if.end5
  %3 = bitcast i32* %ch1.addr.i to i8*, !dbg !6326
  call void @llvm.lifetime.start(i64 4, i8* %3), !dbg !6326
  %4 = bitcast i32* %ch2.addr.i to i8*, !dbg !6326
  call void @llvm.lifetime.start(i64 4, i8* %4), !dbg !6326
  call void @llvm.dbg.value(metadata !4837, i64 0, metadata !6327), !dbg !6326
  call void @llvm.dbg.value(metadata !{i32 %ch}, i64 0, metadata !6328), !dbg !6326
  call void @llvm.dbg.value(metadata !{i32 %ch}, i64 0, metadata !4166), !dbg !6326
  store i32 %ch, i32* %ch1.addr.i, align 4, !tbaa !4692
  call void @llvm.dbg.declare(metadata !{i32* %ch1.addr.i}, metadata !4166), !dbg !6326
  call void @llvm.dbg.value(metadata !{i32 %2}, i64 0, metadata !6329), !dbg !6330
  call void @llvm.dbg.value(metadata !{i32 %2}, i64 0, metadata !4167), !dbg !6330
  store i32 %2, i32* %ch2.addr.i, align 4, !tbaa !4692
  call void @llvm.dbg.declare(metadata !{i32* %ch2.addr.i}, metadata !4167), !dbg !6330
  %5 = bitcast i32* %ch1.addr.i to i16*, !dbg !6331
  %6 = bitcast i32* %ch2.addr.i to i16*, !dbg !6331
  %call.i = call i32 @_ZN11xercesc_2_59XMLString15compareNIStringEPKtS2_j(i16* %5, i16* %6, i32 1) #9, !dbg !6331
  %cmp.i = icmp eq i32 %call.i, 0, !dbg !6331
  call void @llvm.lifetime.end(i64 4, i8* %3), !dbg !6331
  call void @llvm.lifetime.end(i64 4, i8* %4), !dbg !6331
  br i1 %cmp.i, label %if.end15, label %return, !dbg !6332

cond.end10:                                       ; preds = %if.end5
  %cmp9 = icmp eq i32 %2, %ch, !dbg !6324
  br i1 %cmp9, label %if.end15, label %return, !dbg !6332

if.end15:                                         ; preds = %cond.true6, %cond.end10
  call void @llvm.dbg.value(metadata !{i32* %tmpOffset}, i64 0, metadata !3107), !dbg !6333
  %7 = load i32* %tmpOffset, align 4, !dbg !6333, !tbaa !4692
  br i1 %cmp, label %cond.true18, label %cond.end20, !dbg !6333

cond.true18:                                      ; preds = %if.end15
  %inc = add nsw i32 %7, 1, !dbg !6333
  call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !3107), !dbg !6333
  store i32 %inc, i32* %tmpOffset, align 4, !dbg !6333, !tbaa !4692
  br label %cond.end20, !dbg !6333

cond.end20:                                       ; preds = %if.end15, %cond.true18
  %cond21 = phi i32 [ %inc, %cond.true18 ], [ %7, %if.end15 ], !dbg !6333
  store i32 %cond21, i32* %offset, align 4, !dbg !6333, !tbaa !4692
  br label %return, !dbg !6334

return:                                           ; preds = %cond.true6, %cond.end10, %if.end, %entry, %cond.end20
  %retval.0 = phi i1 [ true, %cond.end20 ], [ false, %entry ], [ false, %if.end ], [ false, %cond.end10 ], [ false, %cond.true6 ]
  ret i1 %retval.0, !dbg !6334
}
