define zeroext i1 @_ZN11xercesc_2_510DTDScanner13checkForPERefEbb(%"class.xercesc_2_5::DTDScanner"* %this, i1 zeroext %inLiteral, i1 zeroext %inMarkup) #4 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::DTDScanner"* %this}, i64 0, metadata !5773), !dbg !7974
  tail call void @llvm.dbg.value(metadata !{i1 %inLiteral}, i64 0, metadata !5774), !dbg !7974
  tail call void @llvm.dbg.value(metadata !{i1 %inMarkup}, i64 0, metadata !5775), !dbg !7975
  tail call void @llvm.dbg.value(metadata !7976, i64 0, metadata !5776), !dbg !7977
  %fReaderMgr = getelementptr inbounds %"class.xercesc_2_5::DTDScanner"* %this, i64 0, i32 11, !dbg !7978
  %0 = load %"class.xercesc_2_5::ReaderMgr"** %fReaderMgr, align 8, !dbg !7978, !tbaa !7891
  %call = tail call zeroext i1 @_ZN11xercesc_2_59ReaderMgr12skippedSpaceEv(%"class.xercesc_2_5::ReaderMgr"* %0) #10, !dbg !7978
  br i1 %call, label %if.then, label %if.end, !dbg !7978

if.then:                                          ; preds = %entry
  %1 = load %"class.xercesc_2_5::ReaderMgr"** %fReaderMgr, align 8, !dbg !7979, !tbaa !7891
  %call4 = tail call zeroext i1 @_ZN11xercesc_2_59ReaderMgr14skipPastSpacesEv(%"class.xercesc_2_5::ReaderMgr"* %1) #10, !dbg !7979
  tail call void @llvm.dbg.value(metadata !7981, i64 0, metadata !5776), !dbg !7982
  br label %if.end, !dbg !7983

if.end:                                           ; preds = %if.then, %entry
  %gotSpace.0 = phi i8 [ 1, %if.then ], [ 0, %entry ]
  %2 = load %"class.xercesc_2_5::ReaderMgr"** %fReaderMgr, align 8, !dbg !7984, !tbaa !7891
  %call6 = tail call zeroext i1 @_ZN11xercesc_2_59ReaderMgr11skippedCharEt(%"class.xercesc_2_5::ReaderMgr"* %2, i16 zeroext 37) #10, !dbg !7984
  br i1 %call6, label %while.body.preheader, label %return, !dbg !7984

while.body.preheader:                             ; preds = %if.end
  %fScanner = getelementptr inbounds %"class.xercesc_2_5::DTDScanner"* %this, i64 0, i32 12, !dbg !7985
  br label %while.body, !dbg !7987

while.body:                                       ; preds = %while.body.preheader, %if.end19
  %gotSpace.1 = phi i8 [ %gotSpace.2, %if.end19 ], [ %gotSpace.0, %while.body.preheader ]
  %call11 = tail call zeroext i1 @_ZN11xercesc_2_510DTDScanner11expandPERefEbbbb(%"class.xercesc_2_5::DTDScanner"* %this, i1 zeroext false, i1 zeroext %inLiteral, i1 zeroext %inMarkup, i1 zeroext false) #10, !dbg !7987
  br i1 %call11, label %if.end13, label %if.then12, !dbg !7987

if.then12:                                        ; preds = %while.body
  %3 = load %"class.xercesc_2_5::XMLScanner"** %fScanner, align 8, !dbg !7985, !tbaa !7891
  tail call void @_ZN11xercesc_2_510XMLScanner9emitErrorENS_7XMLErrs5CodesE(%"class.xercesc_2_5::XMLScanner"* %3, i32 226) #10, !dbg !7985
  br label %if.end13, !dbg !7985

if.end13:                                         ; preds = %if.then12, %while.body
  %4 = load %"class.xercesc_2_5::ReaderMgr"** %fReaderMgr, align 8, !dbg !7988, !tbaa !7891
  %call15 = tail call zeroext i1 @_ZN11xercesc_2_59ReaderMgr12skippedSpaceEv(%"class.xercesc_2_5::ReaderMgr"* %4) #10, !dbg !7988
  br i1 %call15, label %if.then16, label %if.end19, !dbg !7988

if.then16:                                        ; preds = %if.end13
  %5 = load %"class.xercesc_2_5::ReaderMgr"** %fReaderMgr, align 8, !dbg !7989, !tbaa !7891
  %call18 = tail call zeroext i1 @_ZN11xercesc_2_59ReaderMgr14skipPastSpacesEv(%"class.xercesc_2_5::ReaderMgr"* %5) #10, !dbg !7989
  tail call void @llvm.dbg.value(metadata !7981, i64 0, metadata !5776), !dbg !7991
  br label %if.end19, !dbg !7992

if.end19:                                         ; preds = %if.then16, %if.end13
  %gotSpace.2 = phi i8 [ 1, %if.then16 ], [ %gotSpace.1, %if.end13 ]
  %6 = load %"class.xercesc_2_5::ReaderMgr"** %fReaderMgr, align 8, !dbg !7993, !tbaa !7891
  %call21 = tail call zeroext i1 @_ZN11xercesc_2_59ReaderMgr11skippedCharEt(%"class.xercesc_2_5::ReaderMgr"* %6, i16 zeroext 37) #10, !dbg !7993
  br i1 %call21, label %while.body, label %while.end, !dbg !7993

while.end:                                        ; preds = %if.end19
  %7 = and i8 %gotSpace.2, 1, !dbg !7994
  br label %return, !dbg !7994

return:                                           ; preds = %if.end, %while.end
  %retval.0.in = phi i8 [ %7, %while.end ], [ %gotSpace.0, %if.end ]
  %retval.0 = icmp ne i8 %retval.0.in, 0, !dbg !7994
  ret i1 %retval.0, !dbg !7995
}
