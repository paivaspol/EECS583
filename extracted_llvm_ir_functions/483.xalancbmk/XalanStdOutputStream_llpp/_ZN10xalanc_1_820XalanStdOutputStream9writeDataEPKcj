define void @_ZN10xalanc_1_820XalanStdOutputStream9writeDataEPKcj(%"class.xalanc_1_8::XalanStdOutputStream"* nocapture %this, i8* %theBuffer, i32 %theBufferLength) unnamed_addr #2 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::XalanStdOutputStream"* %this}, i64 0, metadata !3951), !dbg !4447
  tail call void @llvm.dbg.value(metadata !{i8* %theBuffer}, i64 0, metadata !3952), !dbg !4448
  tail call void @llvm.dbg.value(metadata !{i32 %theBufferLength}, i64 0, metadata !3953), !dbg !4449
  %m_outputStream = getelementptr inbounds %"class.xalanc_1_8::XalanStdOutputStream"* %this, i64 0, i32 1, !dbg !4450
  %ref = load %"class.std::basic_ostream"** %m_outputStream, align 8, !dbg !4450, !tbaa !4392
  %conv = zext i32 %theBufferLength to i64, !dbg !4450
  %call = tail call %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* %ref, i8* %theBuffer, i64 %conv) #7, !dbg !4450
  %ref3 = load %"class.std::basic_ostream"** %m_outputStream, align 8, !dbg !4451, !tbaa !4392
  %0 = bitcast %"class.std::basic_ostream"* %ref3 to i8**, !dbg !4451
  %vtable = load i8** %0, align 8, !dbg !4451, !tbaa !4390
  %vbase.offset.ptr = getelementptr i8* %vtable, i64 -24, !dbg !4451
  %1 = bitcast i8* %vbase.offset.ptr to i64*, !dbg !4451
  %vbase.offset = load i64* %1, align 8, !dbg !4451
  %2 = bitcast %"class.std::basic_ostream"* %ref3 to i8*, !dbg !4451
  %add.ptr.sum = add i64 %vbase.offset, 32, !dbg !4452
  %_M_streambuf_state.i.i.i = getelementptr inbounds i8* %2, i64 %add.ptr.sum, !dbg !4452
  %3 = bitcast i8* %_M_streambuf_state.i.i.i to i32*, !dbg !4452
  %4 = load i32* %3, align 4, !dbg !4452, !tbaa !4415
  tail call void @llvm.dbg.value(metadata !4416, i64 0, metadata !4455), !dbg !4457
  tail call void @llvm.dbg.value(metadata !4420, i64 0, metadata !4458), !dbg !4457
  tail call void @llvm.dbg.value(metadata !{i32 %4}, i64 0, metadata !4459), !dbg !4460
  tail call void @llvm.dbg.value(metadata !4424, i64 0, metadata !4461), !dbg !4460
  %and.i.i.i = and i32 %4, 5, !dbg !4462
  %cmp.i.i = icmp eq i32 %and.i.i.i, 0, !dbg !4456
  br i1 %cmp.i.i, label %if.end, label %if.then, !dbg !4451

if.then:                                          ; preds = %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 120) #1, !dbg !4463
  %5 = bitcast i8* %exception to %"class.xalanc_1_8::XalanStdOutputStream::XalanStdOutputStreamWriteException"*, !dbg !4463
  %call5 = tail call i32* @__errno_location() #10, !dbg !4463
  %6 = load i32* %call5, align 4, !dbg !4463, !tbaa !4445
  invoke void @_ZN10xalanc_1_820XalanStdOutputStream34XalanStdOutputStreamWriteExceptionC2Ei(%"class.xalanc_1_8::XalanStdOutputStream::XalanStdOutputStreamWriteException"* %5, i32 %6) #7
          to label %invoke.cont unwind label %lpad, !dbg !4463

invoke.cont:                                      ; preds = %if.then
  tail call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN10xalanc_1_820XalanStdOutputStream34XalanStdOutputStreamWriteExceptionE to i8*), i8* bitcast (void (%"class.xalanc_1_8::XalanStdOutputStream::XalanStdOutputStreamWriteException"*)* @_ZN10xalanc_1_820XalanStdOutputStream34XalanStdOutputStreamWriteExceptionD2Ev to i8*)) #11, !dbg !4463
  unreachable, !dbg !4463

lpad:                                             ; preds = %if.then
  %7 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !4463
  tail call void @__cxa_free_exception(i8* %exception) #1, !dbg !4463
  resume { i8*, i32 } %7, !dbg !4463

if.end:                                           ; preds = %entry
  ret void, !dbg !4465
}
