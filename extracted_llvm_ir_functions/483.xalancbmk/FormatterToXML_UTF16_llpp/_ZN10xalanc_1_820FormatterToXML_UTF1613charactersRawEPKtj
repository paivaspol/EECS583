define void @_ZN10xalanc_1_820FormatterToXML_UTF1613charactersRawEPKtj(%"class.xalanc_1_8::FormatterToXML_UTF16"* %this, i16* %chars, i32 %length) unnamed_addr #0 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::FormatterToXML_UTF16"* %this}, i64 0, metadata !3030), !dbg !5041
  tail call void @llvm.dbg.value(metadata !{i16* %chars}, i64 0, metadata !3031), !dbg !5042
  tail call void @llvm.dbg.value(metadata !{i32 %length}, i64 0, metadata !3032), !dbg !5043
  tail call void @_ZN10xalanc_1_820FormatterToXML_UTF1617writeParentTagEndEv(%"class.xalanc_1_8::FormatterToXML_UTF16"* %this) #11, !dbg !5044
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::FormatterToXML_UTF16"* %this}, i64 0, metadata !5045), !dbg !5047
  tail call void @llvm.dbg.value(metadata !{i16* %chars}, i64 0, metadata !5048), !dbg !5049
  tail call void @llvm.dbg.value(metadata !{i32 %length}, i64 0, metadata !5050), !dbg !5051
  %cmp.i = icmp ugt i32 %length, 1024, !dbg !5052
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !5052

if.then.i:                                        ; preds = %entry
  %0 = bitcast %"class.xalanc_1_8::FormatterToXML_UTF16"* %this to void (%"class.xalanc_1_8::FormatterToXML_UTF16"*)***, !dbg !5053
  %vtable.i = load void (%"class.xalanc_1_8::FormatterToXML_UTF16"*)*** %0, align 8, !dbg !5053, !tbaa !3947
  %vfn.i = getelementptr inbounds void (%"class.xalanc_1_8::FormatterToXML_UTF16"*)** %vtable.i, i64 22, !dbg !5053
  %1 = load void (%"class.xalanc_1_8::FormatterToXML_UTF16"*)** %vfn.i, align 8, !dbg !5053
  tail call void %1(%"class.xalanc_1_8::FormatterToXML_UTF16"* %this) #11, !dbg !5053
  %m_writer.i = getelementptr inbounds %"class.xalanc_1_8::FormatterToXML_UTF16"* %this, i64 0, i32 0, i32 1, !dbg !5054
  %2 = load %"class.xalanc_1_8::Writer"** %m_writer.i, align 8, !dbg !5054, !tbaa !3949
  %3 = bitcast %"class.xalanc_1_8::Writer"* %2 to void (%"class.xalanc_1_8::Writer"*, i16*, i32, i32)***, !dbg !5054
  %vtable2.i = load void (%"class.xalanc_1_8::Writer"*, i16*, i32, i32)*** %3, align 8, !dbg !5054, !tbaa !3947
  %vfn3.i = getelementptr inbounds void (%"class.xalanc_1_8::Writer"*, i16*, i32, i32)** %vtable2.i, i64 7, !dbg !5054
  %4 = load void (%"class.xalanc_1_8::Writer"*, i16*, i32, i32)** %vfn3.i, align 8, !dbg !5054
  tail call void %4(%"class.xalanc_1_8::Writer"* %2, i16* %chars, i32 0, i32 %length) #11, !dbg !5054
  br label %_ZN10xalanc_1_820FormatterToXML_UTF165writeEPKtj.exit, !dbg !5055

if.else.i:                                        ; preds = %entry
  %m_bufferRemaining.i = getelementptr inbounds %"class.xalanc_1_8::FormatterToXML_UTF16"* %this, i64 0, i32 3, !dbg !5056
  %5 = load i32* %m_bufferRemaining.i, align 4, !dbg !5056, !tbaa !3951
  %cmp4.i = icmp ult i32 %5, %length, !dbg !5056
  br i1 %cmp4.i, label %if.then5.i, label %for.cond.preheader.i, !dbg !5056

if.then5.i:                                       ; preds = %if.else.i
  %6 = bitcast %"class.xalanc_1_8::FormatterToXML_UTF16"* %this to void (%"class.xalanc_1_8::FormatterToXML_UTF16"*)***, !dbg !5057
  %vtable6.i = load void (%"class.xalanc_1_8::FormatterToXML_UTF16"*)*** %6, align 8, !dbg !5057, !tbaa !3947
  %vfn7.i = getelementptr inbounds void (%"class.xalanc_1_8::FormatterToXML_UTF16"*)** %vtable6.i, i64 22, !dbg !5057
  %7 = load void (%"class.xalanc_1_8::FormatterToXML_UTF16"*)** %vfn7.i, align 8, !dbg !5057
  tail call void %7(%"class.xalanc_1_8::FormatterToXML_UTF16"* %this) #11, !dbg !5057
  br label %for.cond.preheader.i, !dbg !5058

for.cond.preheader.i:                             ; preds = %if.then5.i, %if.else.i
  %cmp819.i = icmp eq i32 %length, 0, !dbg !5059
  br i1 %cmp819.i, label %for.end.i, label %for.body.lr.ph.i, !dbg !5059

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %m_bufferPosition.i = getelementptr inbounds %"class.xalanc_1_8::FormatterToXML_UTF16"* %this, i64 0, i32 2, !dbg !5060
  %m_bufferPosition.promoted.i = load i16** %m_bufferPosition.i, align 8, !dbg !5061, !tbaa !3949
  %8 = add i32 %length, -1, !dbg !5059
  %9 = zext i32 %8 to i64, !dbg !5059
  br label %for.body.i, !dbg !5059

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %10 = phi i16* [ %m_bufferPosition.promoted.i, %for.body.lr.ph.i ], [ %incdec.ptr.i, %for.body.i ], !dbg !5060
  %arrayidx.i = getelementptr inbounds i16* %chars, i64 %indvars.iv.i, !dbg !5060
  %11 = load i16* %arrayidx.i, align 2, !dbg !5060, !tbaa !3977
  store i16 %11, i16* %10, align 2, !dbg !5060, !tbaa !3977
  %incdec.ptr.i = getelementptr inbounds i16* %10, i64 1, !dbg !5061
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1, !dbg !5059
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32, !dbg !5059
  %exitcond = icmp eq i32 %lftr.wideiv, %length, !dbg !5059
  br i1 %exitcond, label %for.cond.for.end_crit_edge.i, label %for.body.i, !dbg !5059

for.cond.for.end_crit_edge.i:                     ; preds = %for.body.i
  %12 = add i64 %9, 1, !dbg !5059
  %scevgep.i = getelementptr i16* %m_bufferPosition.promoted.i, i64 %12, !dbg !5059
  store i16* %scevgep.i, i16** %m_bufferPosition.i, align 8, !dbg !5061, !tbaa !3949
  br label %for.end.i, !dbg !5059

for.end.i:                                        ; preds = %for.cond.preheader.i, %for.cond.for.end_crit_edge.i
  %13 = load i32* %m_bufferRemaining.i, align 4, !dbg !5062, !tbaa !3951
  %sub.i = sub i32 %13, %length, !dbg !5062
  store i32 %sub.i, i32* %m_bufferRemaining.i, align 4, !dbg !5062, !tbaa !3951
  br label %_ZN10xalanc_1_820FormatterToXML_UTF165writeEPKtj.exit

_ZN10xalanc_1_820FormatterToXML_UTF165writeEPKtj.exit: ; preds = %if.then.i, %for.end.i
  ret void, !dbg !5063
}
