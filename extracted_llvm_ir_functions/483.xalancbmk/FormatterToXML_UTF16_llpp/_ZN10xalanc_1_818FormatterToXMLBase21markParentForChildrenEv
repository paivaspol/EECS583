define linkonce_odr zeroext i1 @_ZN10xalanc_1_818FormatterToXMLBase21markParentForChildrenEv(%"class.xalanc_1_8::FormatterToXMLBase"* nocapture %this) #6 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::FormatterToXMLBase"* %this}, i64 0, metadata !3750), !dbg !4416
  %m_elemStack = getelementptr inbounds %"class.xalanc_1_8::FormatterToXMLBase"* %this, i64 0, i32 13, !dbg !4417
  tail call void @llvm.dbg.value(metadata !{%"class.std::vector.0"* %m_elemStack}, i64 0, metadata !4418), !dbg !4419
  tail call void @llvm.dbg.value(metadata !{%"class.std::vector.0"* %m_elemStack}, i64 0, metadata !4420), !dbg !4423
  tail call void @llvm.dbg.value(metadata !4424, i64 0, metadata !4425), !dbg !4427
  tail call void @llvm.dbg.value(metadata !4424, i64 0, metadata !4428), !dbg !4430
  %_M_p.i.i.i.i = getelementptr inbounds %"class.std::vector.0"* %m_elemStack, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4431
  %0 = load i64** %_M_p.i.i.i.i, align 8, !dbg !4431, !tbaa !3949
  %_M_offset.i.i.i.i = getelementptr inbounds %"class.xalanc_1_8::FormatterToXMLBase"* %this, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4431
  %1 = load i32* %_M_offset.i.i.i.i, align 4, !dbg !4431, !tbaa !3951
  tail call void @llvm.dbg.value(metadata !{i64* %0}, i64 0, metadata !4432), !dbg !4433
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !4434), !dbg !4433
  tail call void @llvm.dbg.value(metadata !{%"class.std::vector.0"* %m_elemStack}, i64 0, metadata !4435), !dbg !4436
  tail call void @llvm.dbg.value(metadata !4424, i64 0, metadata !4437), !dbg !4439
  tail call void @llvm.dbg.value(metadata !4424, i64 0, metadata !4440), !dbg !4442
  %_M_p.i.i.i5.i = getelementptr inbounds %"class.xalanc_1_8::FormatterToXMLBase"* %this, i64 0, i32 13, i32 0, i32 0, i32 1, i32 0, i32 0, !dbg !4443
  %2 = load i64** %_M_p.i.i.i5.i, align 8, !dbg !4443, !tbaa !3949
  %_M_offset.i.i.i6.i = getelementptr inbounds %"class.xalanc_1_8::FormatterToXMLBase"* %this, i64 0, i32 13, i32 0, i32 0, i32 1, i32 0, i32 1, !dbg !4443
  %3 = load i32* %_M_offset.i.i.i6.i, align 4, !dbg !4443, !tbaa !3951
  tail call void @llvm.dbg.value(metadata !{i64* %2}, i64 0, metadata !4444), !dbg !4445
  tail call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !4446), !dbg !4445
  tail call void @llvm.dbg.value(metadata !4447, i64 0, metadata !4448), !dbg !4449
  tail call void @llvm.dbg.value(metadata !4447, i64 0, metadata !4450), !dbg !4449
  %cmp.i.i = icmp eq i64* %0, %2, !dbg !4451
  %cmp4.i.i = icmp eq i32 %1, %3, !dbg !4451
  %4 = and i1 %cmp.i.i, %cmp4.i.i, !dbg !4451
  br i1 %4, label %return, label %if.then, !dbg !4417

if.then:                                          ; preds = %entry
  %call3 = tail call { i64*, i64 } @_ZNSt6vectorIbSaIbEE4backEv(%"class.std::vector.0"* %m_elemStack) #11, !dbg !4452
  %5 = extractvalue { i64*, i64 } %call3, 0, !dbg !4452
  %6 = extractvalue { i64*, i64 } %call3, 1, !dbg !4452
  tail call void @llvm.dbg.value(metadata !4454, i64 0, metadata !4455), !dbg !4456
  %7 = load i64* %5, align 8, !dbg !4457, !tbaa !4458
  %and.i = and i64 %6, %7, !dbg !4457
  %tobool.i = icmp eq i64 %and.i, 0, !dbg !4457
  br i1 %tobool.i, label %if.then5, label %return, !dbg !4452

if.then5:                                         ; preds = %if.then
  tail call void @llvm.dbg.value(metadata !4454, i64 0, metadata !4459), !dbg !4462
  tail call void @llvm.dbg.value(metadata !4463, i64 0, metadata !4464), !dbg !4462
  %or.i = or i64 %7, %6, !dbg !4465
  store i64 %or.i, i64* %5, align 8, !dbg !4465, !tbaa !4458
  br label %return, !dbg !4467

return:                                           ; preds = %if.then, %entry, %if.then5
  %retval.0 = phi i1 [ true, %if.then5 ], [ false, %if.then ], [ false, %entry ]
  ret i1 %retval.0, !dbg !4468
}
