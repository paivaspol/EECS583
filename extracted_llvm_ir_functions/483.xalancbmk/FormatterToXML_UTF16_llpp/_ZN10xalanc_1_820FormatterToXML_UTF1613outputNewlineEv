define void @_ZN10xalanc_1_820FormatterToXML_UTF1613outputNewlineEv(%"class.xalanc_1_8::FormatterToXML_UTF16"* %this) unnamed_addr #0 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::FormatterToXML_UTF16"* %this}, i64 0, metadata !3083), !dbg !5636
  %m_newlineString = getelementptr inbounds %"class.xalanc_1_8::FormatterToXML_UTF16"* %this, i64 0, i32 0, i32 9, !dbg !5637
  %0 = load i16** %m_newlineString, align 8, !dbg !5637, !tbaa !3949
  %m_newlineStringLength = getelementptr inbounds %"class.xalanc_1_8::FormatterToXML_UTF16"* %this, i64 0, i32 0, i32 10, !dbg !5637
  %1 = load i32* %m_newlineStringLength, align 4, !dbg !5637, !tbaa !3951
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::FormatterToXML_UTF16"* %this}, i64 0, metadata !5638), !dbg !5639
  tail call void @llvm.dbg.value(metadata !{i16* %0}, i64 0, metadata !5640), !dbg !5641
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !5642), !dbg !5643
  %cmp.i = icmp ugt i32 %1, 1024, !dbg !5644
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !5644

if.then.i:                                        ; preds = %entry
  %2 = bitcast %"class.xalanc_1_8::FormatterToXML_UTF16"* %this to void (%"class.xalanc_1_8::FormatterToXML_UTF16"*)***, !dbg !5645
  %vtable.i = load void (%"class.xalanc_1_8::FormatterToXML_UTF16"*)*** %2, align 8, !dbg !5645, !tbaa !3947
  %vfn.i = getelementptr inbounds void (%"class.xalanc_1_8::FormatterToXML_UTF16"*)** %vtable.i, i64 22, !dbg !5645
  %3 = load void (%"class.xalanc_1_8::FormatterToXML_UTF16"*)** %vfn.i, align 8, !dbg !5645
  tail call void %3(%"class.xalanc_1_8::FormatterToXML_UTF16"* %this) #11, !dbg !5645
  %m_writer.i = getelementptr inbounds %"class.xalanc_1_8::FormatterToXML_UTF16"* %this, i64 0, i32 0, i32 1, !dbg !5646
  %4 = load %"class.xalanc_1_8::Writer"** %m_writer.i, align 8, !dbg !5646, !tbaa !3949
  %5 = bitcast %"class.xalanc_1_8::Writer"* %4 to void (%"class.xalanc_1_8::Writer"*, i16*, i32, i32)***, !dbg !5646
  %vtable2.i = load void (%"class.xalanc_1_8::Writer"*, i16*, i32, i32)*** %5, align 8, !dbg !5646, !tbaa !3947
  %vfn3.i = getelementptr inbounds void (%"class.xalanc_1_8::Writer"*, i16*, i32, i32)** %vtable2.i, i64 7, !dbg !5646
  %6 = load void (%"class.xalanc_1_8::Writer"*, i16*, i32, i32)** %vfn3.i, align 8, !dbg !5646
  tail call void %6(%"class.xalanc_1_8::Writer"* %4, i16* %0, i32 0, i32 %1) #11, !dbg !5646
  br label %_ZN10xalanc_1_820FormatterToXML_UTF165writeEPKtj.exit, !dbg !5647

if.else.i:                                        ; preds = %entry
  %m_bufferRemaining.i = getelementptr inbounds %"class.xalanc_1_8::FormatterToXML_UTF16"* %this, i64 0, i32 3, !dbg !5648
  %7 = load i32* %m_bufferRemaining.i, align 4, !dbg !5648, !tbaa !3951
  %cmp4.i = icmp ult i32 %7, %1, !dbg !5648
  br i1 %cmp4.i, label %if.then5.i, label %for.cond.preheader.i, !dbg !5648

if.then5.i:                                       ; preds = %if.else.i
  %8 = bitcast %"class.xalanc_1_8::FormatterToXML_UTF16"* %this to void (%"class.xalanc_1_8::FormatterToXML_UTF16"*)***, !dbg !5649
  %vtable6.i = load void (%"class.xalanc_1_8::FormatterToXML_UTF16"*)*** %8, align 8, !dbg !5649, !tbaa !3947
  %vfn7.i = getelementptr inbounds void (%"class.xalanc_1_8::FormatterToXML_UTF16"*)** %vtable6.i, i64 22, !dbg !5649
  %9 = load void (%"class.xalanc_1_8::FormatterToXML_UTF16"*)** %vfn7.i, align 8, !dbg !5649
  tail call void %9(%"class.xalanc_1_8::FormatterToXML_UTF16"* %this) #11, !dbg !5649
  br label %for.cond.preheader.i, !dbg !5650

for.cond.preheader.i:                             ; preds = %if.then5.i, %if.else.i
  %cmp819.i = icmp eq i32 %1, 0, !dbg !5651
  br i1 %cmp819.i, label %for.end.i, label %for.body.lr.ph.i, !dbg !5651

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %m_bufferPosition.i = getelementptr inbounds %"class.xalanc_1_8::FormatterToXML_UTF16"* %this, i64 0, i32 2, !dbg !5652
  %m_bufferPosition.promoted.i = load i16** %m_bufferPosition.i, align 8, !dbg !5653, !tbaa !3949
  %10 = add i32 %1, -1, !dbg !5651
  %11 = zext i32 %10 to i64, !dbg !5651
  br label %for.body.i, !dbg !5651

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %12 = phi i16* [ %m_bufferPosition.promoted.i, %for.body.lr.ph.i ], [ %incdec.ptr.i, %for.body.i ], !dbg !5652
  %arrayidx.i = getelementptr inbounds i16* %0, i64 %indvars.iv.i, !dbg !5652
  %13 = load i16* %arrayidx.i, align 2, !dbg !5652, !tbaa !3977
  store i16 %13, i16* %12, align 2, !dbg !5652, !tbaa !3977
  %incdec.ptr.i = getelementptr inbounds i16* %12, i64 1, !dbg !5653
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1, !dbg !5651
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32, !dbg !5651
  %exitcond = icmp eq i32 %lftr.wideiv, %1, !dbg !5651
  br i1 %exitcond, label %for.cond.for.end_crit_edge.i, label %for.body.i, !dbg !5651

for.cond.for.end_crit_edge.i:                     ; preds = %for.body.i
  %14 = add i64 %11, 1, !dbg !5651
  %scevgep.i = getelementptr i16* %m_bufferPosition.promoted.i, i64 %14, !dbg !5651
  store i16* %scevgep.i, i16** %m_bufferPosition.i, align 8, !dbg !5653, !tbaa !3949
  br label %for.end.i, !dbg !5651

for.end.i:                                        ; preds = %for.cond.preheader.i, %for.cond.for.end_crit_edge.i
  %15 = load i32* %m_bufferRemaining.i, align 4, !dbg !5654, !tbaa !3951
  %sub.i = sub i32 %15, %1, !dbg !5654
  store i32 %sub.i, i32* %m_bufferRemaining.i, align 4, !dbg !5654, !tbaa !3951
  br label %_ZN10xalanc_1_820FormatterToXML_UTF165writeEPKtj.exit

_ZN10xalanc_1_820FormatterToXML_UTF165writeEPKtj.exit: ; preds = %if.then.i, %for.end.i
  ret void, !dbg !5655
}
