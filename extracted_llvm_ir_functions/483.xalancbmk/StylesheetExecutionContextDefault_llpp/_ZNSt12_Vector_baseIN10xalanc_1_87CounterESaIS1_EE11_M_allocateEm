define linkonce_odr noalias %"struct.xalanc_1_8::Counter"* @_ZNSt12_Vector_baseIN10xalanc_1_87CounterESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.257"* nocapture %this, i64 %__n) #3 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"struct.std::_Vector_base.257"* %this}, i64 0, metadata !63782), !dbg !75548
  tail call void @llvm.dbg.value(metadata !{i64 %__n}, i64 0, metadata !63783), !dbg !75548
  %cmp = icmp eq i64 %__n, 0, !dbg !75549
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !75549

cond.true:                                        ; preds = %entry
  tail call void @llvm.dbg.value(metadata !{i64 %__n}, i64 0, metadata !75551), !dbg !75552
  tail call void @llvm.dbg.value(metadata !67742, i64 0, metadata !75553), !dbg !75552
  %cmp.i = icmp ugt i64 %__n, 384307168202282325, !dbg !75554
  br i1 %cmp.i, label %if.then.i, label %_ZN9__gnu_cxx13new_allocatorIN10xalanc_1_87CounterEE8allocateEmPKv.exit, !dbg !75554

if.then.i:                                        ; preds = %cond.true
  tail call void @_ZSt17__throw_bad_allocv() #15, !dbg !75556
  unreachable, !dbg !75556

_ZN9__gnu_cxx13new_allocatorIN10xalanc_1_87CounterEE8allocateEmPKv.exit: ; preds = %cond.true
  %mul.i = mul i64 %__n, 48, !dbg !75557
  %call2.i = tail call noalias i8* @_Znwm(i64 %mul.i) #11, !dbg !75557
  %0 = bitcast i8* %call2.i to %"struct.xalanc_1_8::Counter"*, !dbg !75557
  br label %cond.end, !dbg !75549

cond.end:                                         ; preds = %entry, %_ZN9__gnu_cxx13new_allocatorIN10xalanc_1_87CounterEE8allocateEmPKv.exit
  %cond = phi %"struct.xalanc_1_8::Counter"* [ %0, %_ZN9__gnu_cxx13new_allocatorIN10xalanc_1_87CounterEE8allocateEmPKv.exit ], [ null, %entry ], !dbg !75549
  ret %"struct.xalanc_1_8::Counter"* %cond, !dbg !75549
}
