define void @_ZN11xercesc_2_56BitSet7andWithERKS0_(%"class.xercesc_2_5::BitSet"* nocapture %this, %"class.xercesc_2_5::BitSet"* nocapture %other) #0 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::BitSet"* %this}, i64 0, metadata !253), !dbg !384
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::BitSet"* %other}, i64 0, metadata !254), !dbg !384
  %fUnitLen = getelementptr inbounds %"class.xercesc_2_5::BitSet"* %this, i64 0, i32 2, !dbg !385
  %0 = load i32* %fUnitLen, align 4, !dbg !385, !tbaa !304
  %fUnitLen2 = getelementptr inbounds %"class.xercesc_2_5::BitSet"* %other, i64 0, i32 2, !dbg !385
  %1 = load i32* %fUnitLen2, align 4, !dbg !385, !tbaa !304
  %cmp = icmp ult i32 %0, %1, !dbg !385
  br i1 %cmp, label %if.then, label %for.cond.preheader, !dbg !385

if.then:                                          ; preds = %entry
  %mul = shl i32 %1, 5, !dbg !386
  tail call void @_ZN11xercesc_2_56BitSet14ensureCapacityEj(%"class.xercesc_2_5::BitSet"* %this, i32 %mul) #5, !dbg !386
  %.pre = load i32* %fUnitLen2, align 4, !dbg !387, !tbaa !304
  br label %for.cond.preheader, !dbg !386

for.cond.preheader:                               ; preds = %if.then, %entry
  %2 = phi i32 [ %.pre, %if.then ], [ %1, %entry ]
  %cmp515 = icmp eq i32 %2, 0, !dbg !387
  br i1 %cmp515, label %for.end, label %for.body.lr.ph, !dbg !387

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %fBits = getelementptr inbounds %"class.xercesc_2_5::BitSet"* %other, i64 0, i32 1, !dbg !388
  %3 = load i64** %fBits, align 8, !dbg !388, !tbaa !301
  %fBits7 = getelementptr inbounds %"class.xercesc_2_5::BitSet"* %this, i64 0, i32 1, !dbg !388
  %4 = load i64** %fBits7, align 8, !dbg !388, !tbaa !301
  br label %for.body, !dbg !387

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds i64* %3, i64 %indvars.iv, !dbg !388
  %5 = load i64* %arrayidx, align 8, !dbg !388, !tbaa !322
  %arrayidx8 = getelementptr inbounds i64* %4, i64 %indvars.iv, !dbg !388
  %6 = load i64* %arrayidx8, align 8, !dbg !388, !tbaa !322
  %and = and i64 %6, %5, !dbg !388
  store i64 %and, i64* %arrayidx8, align 8, !dbg !388, !tbaa !322
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !387
  %7 = trunc i64 %indvars.iv.next to i32, !dbg !387
  %cmp5 = icmp ult i32 %7, %2, !dbg !387
  br i1 %cmp5, label %for.body, label %for.end, !dbg !387

for.end:                                          ; preds = %for.body, %for.cond.preheader
  ret void, !dbg !389
}
