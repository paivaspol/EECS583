define void @_ZN11xercesc_2_516NamedNodeMapImpl9removeAllEv(%"class.xercesc_2_5::NamedNodeMapImpl"* nocapture %this) unnamed_addr #2 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::NamedNodeMapImpl"* %this}, i64 0, metadata !1302), !dbg !1511
  %nodes = getelementptr inbounds %"class.xercesc_2_5::NamedNodeMapImpl"* %this, i64 0, i32 1, !dbg !1512
  %0 = load %"class.xercesc_2_5::NodeVector"** %nodes, align 8, !dbg !1512, !tbaa !1445
  %tobool = icmp eq %"class.xercesc_2_5::NodeVector"* %0, null, !dbg !1512
  br i1 %tobool, label %if.end12, label %if.then, !dbg !1512

if.then:                                          ; preds = %entry
  %call = tail call i32 @_ZN11xercesc_2_510NodeVector4sizeEv(%"class.xercesc_2_5::NodeVector"* %0) #5, !dbg !1513
  %i.019 = add i32 %call, -1, !dbg !1513
  %cmp20 = icmp sgt i32 %i.019, -1, !dbg !1513
  %1 = load %"class.xercesc_2_5::NodeVector"** %nodes, align 8, !dbg !1514, !tbaa !1445
  br i1 %cmp20, label %for.body.lr.ph, label %for.end, !dbg !1513

for.body.lr.ph:                                   ; preds = %if.then
  %ownerNode = getelementptr inbounds %"class.xercesc_2_5::NamedNodeMapImpl"* %this, i64 0, i32 2, !dbg !1515
  %2 = load i16* @_ZN11xercesc_2_58NodeImpl5OWNEDE, align 2, !dbg !1516, !tbaa !1494
  %neg.i = xor i16 %2, -1, !dbg !1516
  br label %for.body, !dbg !1513

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %3 = phi %"class.xercesc_2_5::NodeVector"* [ %1, %for.body.lr.ph ], [ %10, %for.cond.backedge ]
  %i.021 = phi i32 [ %i.019, %for.body.lr.ph ], [ %i.0, %for.cond.backedge ]
  %call4 = tail call %"class.xercesc_2_5::NodeImpl"* @_ZN11xercesc_2_510NodeVector9elementAtEj(%"class.xercesc_2_5::NodeVector"* %3, i32 %i.021) #5, !dbg !1514
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::NodeImpl"* %call4}, i64 0, metadata !1306), !dbg !1514
  %4 = load %"class.xercesc_2_5::NodeImpl"** %ownerNode, align 8, !dbg !1515, !tbaa !1445
  %5 = bitcast %"class.xercesc_2_5::NodeImpl"* %4 to %"class.xercesc_2_5::DocumentImpl"* (%"class.xercesc_2_5::NodeImpl"*)***, !dbg !1515
  %vtable = load %"class.xercesc_2_5::DocumentImpl"* (%"class.xercesc_2_5::NodeImpl"*)*** %5, align 8, !dbg !1515, !tbaa !1441
  %vfn = getelementptr inbounds %"class.xercesc_2_5::DocumentImpl"* (%"class.xercesc_2_5::NodeImpl"*)** %vtable, i64 26, !dbg !1515
  %6 = load %"class.xercesc_2_5::DocumentImpl"* (%"class.xercesc_2_5::NodeImpl"*)** %vfn, align 8, !dbg !1515
  %call5 = tail call %"class.xercesc_2_5::DocumentImpl"* %6(%"class.xercesc_2_5::NodeImpl"* %4) #5, !dbg !1515
  %7 = getelementptr inbounds %"class.xercesc_2_5::DocumentImpl"* %call5, i64 0, i32 0, i32 0, i32 0, !dbg !1515
  %ownerNode6 = getelementptr inbounds %"class.xercesc_2_5::NodeImpl"* %call4, i64 0, i32 1, !dbg !1515
  store %"class.xercesc_2_5::NodeImpl"* %7, %"class.xercesc_2_5::NodeImpl"** %ownerNode6, align 8, !dbg !1515, !tbaa !1445
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::NodeImpl"* %call4}, i64 0, metadata !1518), !dbg !1519
  tail call void @llvm.dbg.value(metadata !1520, i64 0, metadata !1521), !dbg !1519
  %flags.i = getelementptr inbounds %"class.xercesc_2_5::NodeImpl"* %call4, i64 0, i32 2, !dbg !1516
  %8 = load i16* %flags.i, align 2, !dbg !1516, !tbaa !1494
  %and.i = and i16 %8, %neg.i, !dbg !1516
  store i16 %and.i, i16* %flags.i, align 2, !dbg !1516, !tbaa !1494
  %nodeRefCount = getelementptr inbounds %"class.xercesc_2_5::NodeImpl"* %call4, i64 0, i32 0, i32 0, i32 1, !dbg !1522
  %9 = load i32* %nodeRefCount, align 4, !dbg !1522, !tbaa !1451
  %cmp7 = icmp eq i32 %9, 0, !dbg !1522
  br i1 %cmp7, label %if.then8, label %for.cond.backedge, !dbg !1522

for.cond.backedge:                                ; preds = %for.body, %if.then8
  %i.0 = add i32 %i.021, -1, !dbg !1513
  %cmp = icmp sgt i32 %i.0, -1, !dbg !1513
  %10 = load %"class.xercesc_2_5::NodeVector"** %nodes, align 8, !dbg !1514, !tbaa !1445
  br i1 %cmp, label %for.body, label %for.end, !dbg !1513

if.then8:                                         ; preds = %for.body
  tail call void @_ZN11xercesc_2_58NodeImpl8deleteIfEPS0_(%"class.xercesc_2_5::NodeImpl"* %call4) #5, !dbg !1523
  br label %for.cond.backedge, !dbg !1523

for.end:                                          ; preds = %for.cond.backedge, %if.then
  %.lcssa = phi %"class.xercesc_2_5::NodeVector"* [ %1, %if.then ], [ %10, %for.cond.backedge ]
  %isnull = icmp eq %"class.xercesc_2_5::NodeVector"* %.lcssa, null, !dbg !1524
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !1524

delete.notnull:                                   ; preds = %for.end
  invoke void @_ZN11xercesc_2_510NodeVectorD1Ev(%"class.xercesc_2_5::NodeVector"* %.lcssa) #5
          to label %invoke.cont unwind label %lpad, !dbg !1524

invoke.cont:                                      ; preds = %delete.notnull
  %11 = bitcast %"class.xercesc_2_5::NodeVector"* %.lcssa to i8*, !dbg !1524
  tail call void @_ZN11xercesc_2_57XMemorydlEPv(i8* %11) #5, !dbg !1524
  br label %delete.end, !dbg !1524

delete.end:                                       ; preds = %invoke.cont, %for.end
  store %"class.xercesc_2_5::NodeVector"* null, %"class.xercesc_2_5::NodeVector"** %nodes, align 8, !dbg !1525, !tbaa !1445
  br label %if.end12, !dbg !1526

lpad:                                             ; preds = %delete.notnull
  %12 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !1524
  %13 = bitcast %"class.xercesc_2_5::NodeVector"* %.lcssa to i8*, !dbg !1524
  invoke void @_ZN11xercesc_2_57XMemorydlEPv(i8* %13) #5
          to label %eh.resume unwind label %terminate.lpad, !dbg !1524

if.end12:                                         ; preds = %entry, %delete.end
  ret void, !dbg !1527

eh.resume:                                        ; preds = %lpad
  resume { i8*, i32 } %12, !dbg !1524

terminate.lpad:                                   ; preds = %lpad
  %14 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          catch i8* null, !dbg !1524
  %15 = extractvalue { i8*, i32 } %14, 0, !dbg !1524
  tail call void @__clang_call_terminate(i8* %15) #6, !dbg !1524
  unreachable, !dbg !1524
}
