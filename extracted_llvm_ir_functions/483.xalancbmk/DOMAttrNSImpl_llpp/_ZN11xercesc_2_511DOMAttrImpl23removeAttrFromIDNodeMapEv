define linkonce_odr void @_ZN11xercesc_2_511DOMAttrImpl23removeAttrFromIDNodeMapEv(%"class.xercesc_2_5::DOMAttrImpl"* %this) unnamed_addr #7 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::DOMAttrImpl"* %this}, i64 0, metadata !2136), !dbg !3034
  %flags.i = getelementptr inbounds %"class.xercesc_2_5::DOMAttrImpl"* %this, i64 0, i32 1, i32 1, !dbg !3035
  %0 = load i16* %flags.i, align 2, !dbg !3035, !tbaa !2764
  %1 = load i16* @_ZN11xercesc_2_511DOMNodeImpl7ID_ATTRE, align 2, !dbg !3035, !tbaa !2764
  %and3.i = and i16 %1, %0, !dbg !3035
  %cmp.i = icmp eq i16 %and3.i, 0, !dbg !3035
  br i1 %cmp.i, label %if.end, label %if.then, !dbg !3036

if.then:                                          ; preds = %entry
  %2 = bitcast %"class.xercesc_2_5::DOMAttrImpl"* %this to %"class.xercesc_2_5::DOMDocument"* (%"class.xercesc_2_5::DOMAttrImpl"*)***, !dbg !3038
  %vtable = load %"class.xercesc_2_5::DOMDocument"* (%"class.xercesc_2_5::DOMAttrImpl"*)*** %2, align 8, !dbg !3038, !tbaa !2726
  %vfn = getelementptr inbounds %"class.xercesc_2_5::DOMDocument"* (%"class.xercesc_2_5::DOMAttrImpl"*)** %vtable, i64 12, !dbg !3038
  %3 = load %"class.xercesc_2_5::DOMDocument"* (%"class.xercesc_2_5::DOMAttrImpl"*)** %vfn, align 8, !dbg !3038
  %call2 = tail call %"class.xercesc_2_5::DOMDocument"* %3(%"class.xercesc_2_5::DOMAttrImpl"* %this) #8, !dbg !3038
  %fNodeIDMap.i = getelementptr inbounds %"class.xercesc_2_5::DOMDocument"* %call2, i64 2, i32 2, !dbg !3040
  %4 = bitcast %"class.xercesc_2_5::DOMDocumentTraversal"* %fNodeIDMap.i to %"class.xercesc_2_5::DOMNodeIDMap"**, !dbg !3040
  %5 = load %"class.xercesc_2_5::DOMNodeIDMap"** %4, align 8, !dbg !3040, !tbaa !2744
  %6 = getelementptr inbounds %"class.xercesc_2_5::DOMAttrImpl"* %this, i64 0, i32 0, !dbg !3038
  tail call void @_ZN11xercesc_2_512DOMNodeIDMap6removeEPNS_7DOMAttrE(%"class.xercesc_2_5::DOMNodeIDMap"* %5, %"class.xercesc_2_5::DOMAttr"* %6) #8, !dbg !3038
  tail call void @llvm.dbg.value(metadata !3042, i64 0, metadata !3043), !dbg !3045
  %7 = load i16* %flags.i, align 2, !dbg !3046, !tbaa !2764
  %neg.i = xor i16 %1, -1, !dbg !3046
  %and.i = and i16 %7, %neg.i, !dbg !3046
  store i16 %and.i, i16* %flags.i, align 2, !dbg !3046, !tbaa !2764
  br label %if.end, !dbg !3047

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !3048
}
