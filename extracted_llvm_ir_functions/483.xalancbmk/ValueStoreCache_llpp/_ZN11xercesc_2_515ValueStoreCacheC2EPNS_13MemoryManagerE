define void @_ZN11xercesc_2_515ValueStoreCacheC2EPNS_13MemoryManagerE(%"class.xercesc_2_5::ValueStoreCache"* nocapture %this, %"class.xercesc_2_5::MemoryManager"* %manager) unnamed_addr #3 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::ValueStoreCache"* %this}, i64 0, metadata !4382), !dbg !5531
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::MemoryManager"* %manager}, i64 0, metadata !4384), !dbg !5531
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_5::ValueStoreCache"* %this, i64 0, i32 5, !dbg !5532
  %0 = bitcast %"class.xercesc_2_5::ValueStoreCache"* %this to i8*, !dbg !5532
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 40, i32 8, i1 false), !dbg !5532
  store %"class.xercesc_2_5::MemoryManager"* %manager, %"class.xercesc_2_5::MemoryManager"** %fMemoryManager, align 8, !dbg !5532, !tbaa !5533
  invoke void @_ZN11xercesc_2_515ValueStoreCache4initEv(%"class.xercesc_2_5::ValueStoreCache"* %this) #9
          to label %try.cont unwind label %lpad, !dbg !5536

lpad:                                             ; preds = %entry
  %1 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          catch i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_520OutOfMemoryExceptionE to i8*)
          catch i8* null, !dbg !5536
  %2 = extractvalue { i8*, i32 } %1, 0, !dbg !5536
  %3 = extractvalue { i8*, i32 } %1, 1, !dbg !5536
  %4 = tail call i32 @llvm.eh.typeid.for(i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_520OutOfMemoryExceptionE to i8*)) #4, !dbg !5538
  %matches = icmp eq i32 %3, %4, !dbg !5538
  %5 = tail call i8* @__cxa_begin_catch(i8* %2) #4, !dbg !5539
  br i1 %matches, label %catch5, label %catch, !dbg !5538

catch5:                                           ; preds = %lpad
  invoke void @__cxa_rethrow() #10
          to label %unreachable unwind label %lpad7, !dbg !5540

catch:                                            ; preds = %lpad
  invoke void @_ZN11xercesc_2_515ValueStoreCache7cleanUpEv(%"class.xercesc_2_5::ValueStoreCache"* %this) #9
          to label %invoke.cont3 unwind label %lpad2, !dbg !5542

invoke.cont3:                                     ; preds = %catch
  invoke void @__cxa_rethrow() #10
          to label %unreachable unwind label %lpad2, !dbg !5544

lpad2:                                            ; preds = %invoke.cont3, %catch
  %6 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !5542
  %7 = extractvalue { i8*, i32 } %6, 0, !dbg !5542
  %8 = extractvalue { i8*, i32 } %6, 1, !dbg !5542
  invoke void @__cxa_end_catch()
          to label %eh.resume unwind label %terminate.lpad, !dbg !5539

lpad7:                                            ; preds = %catch5
  %9 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !5540
  %10 = extractvalue { i8*, i32 } %9, 0, !dbg !5540
  %11 = extractvalue { i8*, i32 } %9, 1, !dbg !5540
  invoke void @__cxa_end_catch()
          to label %eh.resume unwind label %terminate.lpad, !dbg !5545

try.cont:                                         ; preds = %entry
  ret void, !dbg !5546

eh.resume:                                        ; preds = %lpad7, %lpad2
  %ehselector.slot.0 = phi i32 [ %11, %lpad7 ], [ %8, %lpad2 ]
  %exn.slot.0 = phi i8* [ %10, %lpad7 ], [ %7, %lpad2 ]
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.0, 0, !dbg !5539
  %lpad.val11 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.0, 1, !dbg !5539
  resume { i8*, i32 } %lpad.val11, !dbg !5539

terminate.lpad:                                   ; preds = %lpad7, %lpad2
  %12 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          catch i8* null, !dbg !5539
  %13 = extractvalue { i8*, i32 } %12, 0, !dbg !5539
  tail call void @__clang_call_terminate(i8* %13) #8, !dbg !5539
  unreachable, !dbg !5539

unreachable:                                      ; preds = %catch5, %invoke.cont3
  unreachable
}
