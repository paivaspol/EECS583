define linkonce_odr void @_ZN11xercesc_2_511DOMAttrImpl23removeAttrFromIDNodeMapEv(%"class.xercesc_2_5::DOMAttrImpl"* %this) unnamed_addr #8 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::DOMAttrImpl"* %this}, i64 0, metadata !2293), !dbg !2813
  %flags.i = getelementptr inbounds %"class.xercesc_2_5::DOMAttrImpl"* %this, i64 0, i32 1, i32 1, !dbg !2814
  %0 = load i16* %flags.i, align 2, !dbg !2814, !tbaa !2492
  %1 = load i16* @_ZN11xercesc_2_511DOMNodeImpl7ID_ATTRE, align 2, !dbg !2814, !tbaa !2492
  %and3.i = and i16 %1, %0, !dbg !2814
  %cmp.i = icmp eq i16 %and3.i, 0, !dbg !2814
  br i1 %cmp.i, label %if.end, label %if.then, !dbg !2815

if.then:                                          ; preds = %entry
  %2 = bitcast %"class.xercesc_2_5::DOMAttrImpl"* %this to %"class.xercesc_2_5::DOMDocument"* (%"class.xercesc_2_5::DOMAttrImpl"*)***, !dbg !2817
  %vtable = load %"class.xercesc_2_5::DOMDocument"* (%"class.xercesc_2_5::DOMAttrImpl"*)*** %2, align 8, !dbg !2817, !tbaa !2479
  %vfn = getelementptr inbounds %"class.xercesc_2_5::DOMDocument"* (%"class.xercesc_2_5::DOMAttrImpl"*)** %vtable, i64 12, !dbg !2817
  %3 = load %"class.xercesc_2_5::DOMDocument"* (%"class.xercesc_2_5::DOMAttrImpl"*)** %vfn, align 8, !dbg !2817
  %call2 = tail call %"class.xercesc_2_5::DOMDocument"* %3(%"class.xercesc_2_5::DOMAttrImpl"* %this) #9, !dbg !2817
  %fNodeIDMap.i = getelementptr inbounds %"class.xercesc_2_5::DOMDocument"* %call2, i64 2, i32 2, !dbg !2819
  %4 = bitcast %"class.xercesc_2_5::DOMDocumentTraversal"* %fNodeIDMap.i to %"class.xercesc_2_5::DOMNodeIDMap"**, !dbg !2819
  %5 = load %"class.xercesc_2_5::DOMNodeIDMap"** %4, align 8, !dbg !2819, !tbaa !2481
  %6 = getelementptr inbounds %"class.xercesc_2_5::DOMAttrImpl"* %this, i64 0, i32 0, !dbg !2817
  tail call void @_ZN11xercesc_2_512DOMNodeIDMap6removeEPNS_7DOMAttrE(%"class.xercesc_2_5::DOMNodeIDMap"* %5, %"class.xercesc_2_5::DOMAttr"* %6) #9, !dbg !2817
  tail call void @llvm.dbg.value(metadata !2525, i64 0, metadata !2820), !dbg !2822
  %7 = load i16* %flags.i, align 2, !dbg !2823, !tbaa !2492
  %neg.i = xor i16 %1, -1, !dbg !2823
  %and.i = and i16 %7, %neg.i, !dbg !2823
  store i16 %and.i, i16* %flags.i, align 2, !dbg !2823, !tbaa !2492
  br label %if.end, !dbg !2824

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !2825
}
