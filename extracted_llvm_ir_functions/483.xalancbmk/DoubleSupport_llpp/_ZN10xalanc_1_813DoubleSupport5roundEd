define double @_ZN10xalanc_1_813DoubleSupport5roundEd(double %theValue) #4 align 2 {
entry:
  %intPart = alloca double, align 8
  call void @llvm.dbg.value(metadata !{double %theValue}, i64 0, metadata !1699), !dbg !2606
  tail call void @llvm.dbg.value(metadata !{double %theValue}, i64 0, metadata !2607), !dbg !2609
  tail call void @llvm.dbg.declare(metadata !2159, metadata !2130), !dbg !2610
  %0 = load i64* bitcast (%"union.xalanc_1_8::DoubleSupport::NumberUnion"* @_ZN10xalanc_1_813DoubleSupport5s_NaNE to i64*), align 8, !dbg !2611
  %1 = trunc i64 %0 to i32, !dbg !2611
  %2 = bitcast double %theValue to i64, !dbg !2611
  %temp.sroa.0.0.extract.trunc.i = trunc i64 %2 to i32, !dbg !2611
  %cmp.i = icmp eq i32 %1, %temp.sroa.0.0.extract.trunc.i, !dbg !2611
  br i1 %cmp.i, label %_ZN10xalanc_1_813DoubleSupport5isNaNEd.exit, label %_ZN10xalanc_1_813DoubleSupport18isPositiveInfinityEd.exit, !dbg !2611

_ZN10xalanc_1_813DoubleSupport5isNaNEd.exit:      ; preds = %entry
  %3 = bitcast i64 %0 to double
  %4 = lshr i64 %0, 32
  %5 = trunc i64 %4 to i32
  %temp.sroa.0.4.extract.shift.i = lshr i64 %2, 32, !dbg !2611
  %temp.sroa.0.4.extract.trunc.i = trunc i64 %temp.sroa.0.4.extract.shift.i to i32, !dbg !2611
  %cmp2.i = icmp eq i32 %5, %temp.sroa.0.4.extract.trunc.i, !dbg !2611
  br i1 %cmp2.i, label %return, label %_ZN10xalanc_1_813DoubleSupport5isNaNEd.exit.i39, !dbg !2608

_ZN10xalanc_1_813DoubleSupport5isNaNEd.exit.i39:  ; preds = %_ZN10xalanc_1_813DoubleSupport5isNaNEd.exit
  tail call void @llvm.dbg.value(metadata !{double %theValue}, i64 0, metadata !2612), !dbg !2614
  tail call void @llvm.dbg.value(metadata !{double %theValue}, i64 0, metadata !2615), !dbg !2617
  tail call void @llvm.dbg.declare(metadata !2159, metadata !2130), !dbg !2618
  %6 = lshr i64 %0, 32
  %7 = trunc i64 %6 to i32
  %temp.sroa.0.4.extract.shift.i.i36 = lshr i64 %2, 32, !dbg !2619
  %temp.sroa.0.4.extract.trunc.i.i37 = trunc i64 %temp.sroa.0.4.extract.shift.i.i36 to i32, !dbg !2619
  %cmp2.i.i38 = icmp ne i32 %7, %temp.sroa.0.4.extract.trunc.i.i37, !dbg !2619
  %cmp.i40 = fcmp oeq double %theValue, 0x7FF0000000000000, !dbg !2616
  %or.cond = and i1 %cmp2.i.i38, %cmp.i40, !dbg !2616
  br i1 %or.cond, label %return, label %_ZN10xalanc_1_813DoubleSupport5isNaNEd.exit.i, !dbg !2616

_ZN10xalanc_1_813DoubleSupport18isPositiveInfinityEd.exit: ; preds = %entry
  tail call void @llvm.dbg.value(metadata !{double %theValue}, i64 0, metadata !2612), !dbg !2614
  tail call void @llvm.dbg.value(metadata !{double %theValue}, i64 0, metadata !2615), !dbg !2617
  tail call void @llvm.dbg.declare(metadata !2159, metadata !2130), !dbg !2618
  %cmp.i40.old = fcmp oeq double %theValue, 0x7FF0000000000000, !dbg !2616
  br i1 %cmp.i40.old, label %return, label %_ZN10xalanc_1_813DoubleSupport18isNegativeInfinityEd.exit, !dbg !2613

_ZN10xalanc_1_813DoubleSupport5isNaNEd.exit.i:    ; preds = %_ZN10xalanc_1_813DoubleSupport5isNaNEd.exit.i39
  tail call void @llvm.dbg.value(metadata !{double %theValue}, i64 0, metadata !2620), !dbg !2622
  tail call void @llvm.dbg.value(metadata !{double %theValue}, i64 0, metadata !2623), !dbg !2626
  tail call void @llvm.dbg.declare(metadata !2159, metadata !2130), !dbg !2627
  %8 = lshr i64 %0, 32
  %9 = trunc i64 %8 to i32
  %temp.sroa.0.4.extract.shift.i.i = lshr i64 %2, 32, !dbg !2628
  %temp.sroa.0.4.extract.trunc.i.i = trunc i64 %temp.sroa.0.4.extract.shift.i.i to i32, !dbg !2628
  %cmp2.i.i = icmp ne i32 %9, %temp.sroa.0.4.extract.trunc.i.i, !dbg !2628
  %cmp.i32 = fcmp oeq double %theValue, 0xFFF0000000000000, !dbg !2624
  %or.cond42 = and i1 %cmp2.i.i, %cmp.i32, !dbg !2624
  br i1 %or.cond42, label %return, label %if.else9, !dbg !2624

_ZN10xalanc_1_813DoubleSupport18isNegativeInfinityEd.exit: ; preds = %_ZN10xalanc_1_813DoubleSupport18isPositiveInfinityEd.exit
  tail call void @llvm.dbg.value(metadata !{double %theValue}, i64 0, metadata !2620), !dbg !2622
  tail call void @llvm.dbg.value(metadata !{double %theValue}, i64 0, metadata !2623), !dbg !2626
  tail call void @llvm.dbg.declare(metadata !2159, metadata !2130), !dbg !2627
  %cmp.i32.old = fcmp oeq double %theValue, 0xFFF0000000000000, !dbg !2624
  br i1 %cmp.i32.old, label %return, label %if.else9, !dbg !2621

if.else9:                                         ; preds = %_ZN10xalanc_1_813DoubleSupport5isNaNEd.exit.i, %_ZN10xalanc_1_813DoubleSupport18isNegativeInfinityEd.exit
  %cmp = fcmp oeq double %theValue, 0.000000e+00, !dbg !2629
  br i1 %cmp, label %return, label %if.else11, !dbg !2629

if.else11:                                        ; preds = %if.else9
  %cmp12 = fcmp ogt double %theValue, 0.000000e+00, !dbg !2630
  br i1 %cmp12, label %if.then13, label %if.else15, !dbg !2630

if.then13:                                        ; preds = %if.else11
  %add = fadd double %theValue, 5.000000e-01, !dbg !2631
  %conv = fptosi double %add to i64, !dbg !2631
  %conv14 = sitofp i64 %conv to double, !dbg !2631
  br label %return, !dbg !2631

if.else15:                                        ; preds = %if.else11
  call void @llvm.dbg.declare(metadata !{double* %intPart}, metadata !1700), !dbg !2633
  call void @llvm.dbg.value(metadata !2634, i64 0, metadata !1700), !dbg !2633
  store double 0.000000e+00, double* %intPart, align 8, !dbg !2633, !tbaa !2355
  %call16 = call double @modf(double %theValue, double* %intPart) #10, !dbg !2635
  call void @llvm.dbg.value(metadata !{double %call16}, i64 0, metadata !1702), !dbg !2635
  %cmp17 = fcmp oeq double %call16, -5.000000e-01, !dbg !2636
  br i1 %cmp17, label %if.then18, label %if.else22, !dbg !2636

if.then18:                                        ; preds = %if.else15
  %add19 = fadd double %theValue, 5.000000e-01, !dbg !2637
  %conv20 = fptosi double %add19 to i64, !dbg !2637
  %conv21 = sitofp i64 %conv20 to double, !dbg !2637
  br label %return, !dbg !2637

if.else22:                                        ; preds = %if.else15
  %sub = fadd double %theValue, -5.000000e-01, !dbg !2639
  %conv23 = fptosi double %sub to i64, !dbg !2639
  %conv24 = sitofp i64 %conv23 to double, !dbg !2639
  br label %return, !dbg !2639

return:                                           ; preds = %_ZN10xalanc_1_813DoubleSupport5isNaNEd.exit, %_ZN10xalanc_1_813DoubleSupport5isNaNEd.exit.i, %_ZN10xalanc_1_813DoubleSupport5isNaNEd.exit.i39, %_ZN10xalanc_1_813DoubleSupport18isNegativeInfinityEd.exit, %_ZN10xalanc_1_813DoubleSupport18isPositiveInfinityEd.exit, %if.else9, %if.else22, %if.then18, %if.then13
  %retval.0 = phi double [ %conv14, %if.then13 ], [ %conv21, %if.then18 ], [ %conv24, %if.else22 ], [ 0.000000e+00, %if.else9 ], [ 0x7FF0000000000000, %_ZN10xalanc_1_813DoubleSupport18isPositiveInfinityEd.exit ], [ 0xFFF0000000000000, %_ZN10xalanc_1_813DoubleSupport18isNegativeInfinityEd.exit ], [ 0x7FF0000000000000, %_ZN10xalanc_1_813DoubleSupport5isNaNEd.exit.i39 ], [ 0xFFF0000000000000, %_ZN10xalanc_1_813DoubleSupport5isNaNEd.exit.i ], [ %3, %_ZN10xalanc_1_813DoubleSupport5isNaNEd.exit ]
  ret double %retval.0, !dbg !2641
}
