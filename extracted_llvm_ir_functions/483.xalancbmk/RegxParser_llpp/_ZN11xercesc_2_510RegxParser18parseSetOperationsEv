define %"class.xercesc_2_5::RangeToken"* @_ZN11xercesc_2_510RegxParser18parseSetOperationsEv(%"class.xercesc_2_5::RegxParser"* %this) unnamed_addr #2 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::RegxParser"* %this}, i64 0, metadata !2386), !dbg !4493
  %0 = bitcast %"class.xercesc_2_5::RegxParser"* %this to %"class.xercesc_2_5::RangeToken"* (%"class.xercesc_2_5::RegxParser"*, i1)***, !dbg !4494
  %vtable = load %"class.xercesc_2_5::RangeToken"* (%"class.xercesc_2_5::RegxParser"*, i1)*** %0, align 8, !dbg !4494, !tbaa !3277
  %vfn = getelementptr inbounds %"class.xercesc_2_5::RangeToken"* (%"class.xercesc_2_5::RegxParser"*, i1)** %vtable, i64 29, !dbg !4494
  %1 = load %"class.xercesc_2_5::RangeToken"* (%"class.xercesc_2_5::RegxParser"*, i1)** %vfn, align 8, !dbg !4494
  %call = tail call %"class.xercesc_2_5::RangeToken"* %1(%"class.xercesc_2_5::RegxParser"* %this, i1 zeroext false) #9, !dbg !4494
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::RangeToken"* %call}, i64 0, metadata !2387), !dbg !4494
  %fState = getelementptr inbounds %"class.xercesc_2_5::RegxParser"* %this, i64 0, i32 8, !dbg !4495
  %2 = bitcast %"class.xercesc_2_5::RangeToken"* %call to void (%"class.xercesc_2_5::RangeToken"*, %"class.xercesc_2_5::Token"*)***, !dbg !4496
  %fCharData25 = getelementptr inbounds %"class.xercesc_2_5::RegxParser"* %this, i64 0, i32 9, !dbg !4498
  %3 = bitcast %"class.xercesc_2_5::RangeToken"* %call to void (%"class.xercesc_2_5::RangeToken"*, %"class.xercesc_2_5::RangeToken"*)***, !dbg !4499
  br label %while.cond, !dbg !4495

while.cond:                                       ; preds = %if.then27, %if.then33, %if.then22, %entry
  %4 = load i16* %fState, align 2, !dbg !4495, !tbaa !3280
  switch i16 %4, label %if.else41 [
    i16 7, label %while.end
    i16 0, label %land.lhs.true
    i16 4, label %if.then
  ], !dbg !4495

land.lhs.true:                                    ; preds = %while.cond
  %5 = load i32* %fCharData25, align 4, !dbg !4501, !tbaa !3271
  switch i32 %5, label %if.else41 [
    i32 45, label %if.then
    i32 38, label %if.then
  ], !dbg !4501

if.then:                                          ; preds = %while.cond, %land.lhs.true, %land.lhs.true
  tail call void @_ZN11xercesc_2_510RegxParser11processNextEv(%"class.xercesc_2_5::RegxParser"* %this) #9, !dbg !4502
  %6 = load i16* %fState, align 2, !dbg !4503, !tbaa !3280
  %cmp14 = icmp eq i16 %6, 9, !dbg !4503
  br i1 %cmp14, label %if.end, label %if.then15, !dbg !4503

if.then15:                                        ; preds = %if.then
  %exception = tail call i8* @__cxa_allocate_exception(i64 48) #8, !dbg !4504
  %7 = bitcast i8* %exception to %"class.xercesc_2_5::ParseException"*, !dbg !4504
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_5::RegxParser"* %this, i64 0, i32 1, !dbg !4504
  %8 = load %"class.xercesc_2_5::MemoryManager"** %fMemoryManager, align 8, !dbg !4504, !tbaa !3278
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::ParseException"* %7}, i64 0, metadata !4505), !dbg !4506
  tail call void @llvm.dbg.value(metadata !3350, i64 0, metadata !4507), !dbg !4506
  tail call void @llvm.dbg.value(metadata !4508, i64 0, metadata !4509), !dbg !4506
  tail call void @llvm.dbg.value(metadata !4510, i64 0, metadata !4511), !dbg !4506
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::MemoryManager"* %8}, i64 0, metadata !4512), !dbg !4506
  invoke void @_ZN11xercesc_2_514ParseExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_5::ParseException"* %7, i8* getelementptr inbounds ([62 x i8]* @.str, i64 0, i64 0), i32 1312, i32 136, %"class.xercesc_2_5::MemoryManager"* %8) #9
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then15
  tail call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_514ParseExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_5::ParseException"*)* @_ZN11xercesc_2_514ParseExceptionD1Ev to i8*)) #11, !dbg !4504
  unreachable, !dbg !4504

lpad:                                             ; preds = %if.then15
  %9 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !4504
  %10 = extractvalue { i8*, i32 } %9, 0, !dbg !4504
  %11 = extractvalue { i8*, i32 } %9, 1, !dbg !4504
  tail call void @__cxa_free_exception(i8* %exception) #8, !dbg !4504
  br label %eh.resume, !dbg !4504

if.end:                                           ; preds = %if.then
  %vtable16 = load %"class.xercesc_2_5::RangeToken"* (%"class.xercesc_2_5::RegxParser"*, i1)*** %0, align 8, !dbg !4513, !tbaa !3277
  %vfn17 = getelementptr inbounds %"class.xercesc_2_5::RangeToken"* (%"class.xercesc_2_5::RegxParser"*, i1)** %vtable16, i64 29, !dbg !4513
  %12 = load %"class.xercesc_2_5::RangeToken"* (%"class.xercesc_2_5::RegxParser"*, i1)** %vfn17, align 8, !dbg !4513
  %call18 = tail call %"class.xercesc_2_5::RangeToken"* %12(%"class.xercesc_2_5::RegxParser"* %this, i1 zeroext false) #9, !dbg !4513
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::RangeToken"* %call18}, i64 0, metadata !2388), !dbg !4513
  %13 = load i16* %fState, align 2, !dbg !4514, !tbaa !3280
  %cmp21 = icmp eq i16 %13, 4, !dbg !4514
  br i1 %cmp21, label %if.then22, label %if.else, !dbg !4514

if.then22:                                        ; preds = %if.end
  %vtable23 = load void (%"class.xercesc_2_5::RangeToken"*, %"class.xercesc_2_5::Token"*)*** %2, align 8, !dbg !4496, !tbaa !3277
  %vfn24 = getelementptr inbounds void (%"class.xercesc_2_5::RangeToken"*, %"class.xercesc_2_5::Token"*)** %vtable23, i64 13, !dbg !4496
  %14 = load void (%"class.xercesc_2_5::RangeToken"*, %"class.xercesc_2_5::Token"*)** %vfn24, align 8, !dbg !4496
  %15 = getelementptr inbounds %"class.xercesc_2_5::RangeToken"* %call18, i64 0, i32 0, !dbg !4496
  tail call void %14(%"class.xercesc_2_5::RangeToken"* %call, %"class.xercesc_2_5::Token"* %15) #9, !dbg !4496
  br label %while.cond, !dbg !4515

if.else:                                          ; preds = %if.end
  %16 = load i32* %fCharData25, align 4, !dbg !4498, !tbaa !3271
  switch i32 %16, label %if.else36 [
    i32 45, label %if.then27
    i32 38, label %if.then33
  ], !dbg !4498

if.then27:                                        ; preds = %if.else
  %vtable28 = load void (%"class.xercesc_2_5::RangeToken"*, %"class.xercesc_2_5::RangeToken"*)*** %3, align 8, !dbg !4499, !tbaa !3277
  %vfn29 = getelementptr inbounds void (%"class.xercesc_2_5::RangeToken"*, %"class.xercesc_2_5::RangeToken"*)** %vtable28, i64 16, !dbg !4499
  %17 = load void (%"class.xercesc_2_5::RangeToken"*, %"class.xercesc_2_5::RangeToken"*)** %vfn29, align 8, !dbg !4499
  tail call void %17(%"class.xercesc_2_5::RangeToken"* %call, %"class.xercesc_2_5::RangeToken"* %call18) #9, !dbg !4499
  br label %while.cond, !dbg !4516

if.then33:                                        ; preds = %if.else
  %vtable34 = load void (%"class.xercesc_2_5::RangeToken"*, %"class.xercesc_2_5::RangeToken"*)*** %3, align 8, !dbg !4517, !tbaa !3277
  %vfn35 = getelementptr inbounds void (%"class.xercesc_2_5::RangeToken"*, %"class.xercesc_2_5::RangeToken"*)** %vtable34, i64 17, !dbg !4517
  %18 = load void (%"class.xercesc_2_5::RangeToken"*, %"class.xercesc_2_5::RangeToken"*)** %vfn35, align 8, !dbg !4517
  tail call void %18(%"class.xercesc_2_5::RangeToken"* %call, %"class.xercesc_2_5::RangeToken"* %call18) #9, !dbg !4517
  br label %while.cond

if.else36:                                        ; preds = %if.else
  %exception37 = tail call i8* @__cxa_allocate_exception(i64 4) #8, !dbg !4519
  %19 = bitcast i8* %exception37 to i32*, !dbg !4519
  store i32 0, i32* %19, align 4, !dbg !4519, !tbaa !3271
  tail call void @__cxa_throw(i8* %exception37, i8* bitcast (i8** @_ZTIi to i8*), i8* null) #11, !dbg !4519
  unreachable, !dbg !4519

if.else41:                                        ; preds = %while.cond, %land.lhs.true
  %exception42 = tail call i8* @__cxa_allocate_exception(i64 48) #8, !dbg !4521
  %20 = bitcast i8* %exception42 to %"class.xercesc_2_5::ParseException"*, !dbg !4521
  %fMemoryManager43 = getelementptr inbounds %"class.xercesc_2_5::RegxParser"* %this, i64 0, i32 1, !dbg !4521
  %21 = load %"class.xercesc_2_5::MemoryManager"** %fMemoryManager43, align 8, !dbg !4521, !tbaa !3278
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::ParseException"* %20}, i64 0, metadata !4523), !dbg !4524
  tail call void @llvm.dbg.value(metadata !3350, i64 0, metadata !4525), !dbg !4524
  tail call void @llvm.dbg.value(metadata !4526, i64 0, metadata !4527), !dbg !4524
  tail call void @llvm.dbg.value(metadata !4528, i64 0, metadata !4529), !dbg !4524
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::MemoryManager"* %21}, i64 0, metadata !4530), !dbg !4524
  invoke void @_ZN11xercesc_2_514ParseExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_5::ParseException"* %20, i8* getelementptr inbounds ([62 x i8]* @.str, i64 0, i64 0), i32 1330, i32 137, %"class.xercesc_2_5::MemoryManager"* %21) #9
          to label %invoke.cont45 unwind label %lpad44

invoke.cont45:                                    ; preds = %if.else41
  tail call void @__cxa_throw(i8* %exception42, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_514ParseExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_5::ParseException"*)* @_ZN11xercesc_2_514ParseExceptionD1Ev to i8*)) #11, !dbg !4521
  unreachable, !dbg !4521

lpad44:                                           ; preds = %if.else41
  %22 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !4521
  %23 = extractvalue { i8*, i32 } %22, 0, !dbg !4521
  %24 = extractvalue { i8*, i32 } %22, 1, !dbg !4521
  tail call void @__cxa_free_exception(i8* %exception42) #8, !dbg !4521
  br label %eh.resume, !dbg !4521

while.end:                                        ; preds = %while.cond
  tail call void @_ZN11xercesc_2_510RegxParser11processNextEv(%"class.xercesc_2_5::RegxParser"* %this) #9, !dbg !4531
  ret %"class.xercesc_2_5::RangeToken"* %call, !dbg !4532

eh.resume:                                        ; preds = %lpad44, %lpad
  %ehselector.slot.0 = phi i32 [ %11, %lpad ], [ %24, %lpad44 ]
  %exn.slot.0 = phi i8* [ %10, %lpad ], [ %23, %lpad44 ]
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.0, 0, !dbg !4504
  %lpad.val47 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.0, 1, !dbg !4504
  resume { i8*, i32 } %lpad.val47, !dbg !4504
}
