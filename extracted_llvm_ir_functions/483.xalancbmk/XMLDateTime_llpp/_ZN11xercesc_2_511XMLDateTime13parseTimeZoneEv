define void @_ZN11xercesc_2_511XMLDateTime13parseTimeZoneEv(%"class.xercesc_2_5::XMLDateTime"* nocapture %this) #1 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::XMLDateTime"* %this}, i64 0, metadata !1426), !dbg !3234
  %fStart = getelementptr inbounds %"class.xercesc_2_5::XMLDateTime"* %this, i64 0, i32 3, !dbg !3235
  %0 = load i32* %fStart, align 4, !dbg !3235, !tbaa !2454
  %fEnd = getelementptr inbounds %"class.xercesc_2_5::XMLDateTime"* %this, i64 0, i32 4, !dbg !3235
  %1 = load i32* %fEnd, align 4, !dbg !3235, !tbaa !2454
  %cmp = icmp slt i32 %0, %1, !dbg !3235
  br i1 %cmp, label %if.then, label %if.end5, !dbg !3235

if.then:                                          ; preds = %entry
  %call = tail call i32 @_ZN11xercesc_2_511XMLDateTime11findUTCSignEi(%"class.xercesc_2_5::XMLDateTime"* %this, i32 %0) #9, !dbg !3236
  tail call void @llvm.dbg.value(metadata !{i32 %call}, i64 0, metadata !1427), !dbg !3236
  %cmp3 = icmp slt i32 %call, 0, !dbg !3237
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !3237

if.then4:                                         ; preds = %if.then
  %exception = tail call i8* @__cxa_allocate_exception(i64 48) #2, !dbg !3238
  %2 = bitcast i8* %exception to %"class.xercesc_2_5::SchemaDateTimeException"*, !dbg !3238
  %fBuffer = getelementptr inbounds %"class.xercesc_2_5::XMLDateTime"* %this, i64 0, i32 6, !dbg !3238
  %3 = load i16** %fBuffer, align 8, !dbg !3238, !tbaa !2446
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_5::XMLDateTime"* %this, i64 0, i32 7, !dbg !3238
  %4 = load %"class.xercesc_2_5::MemoryManager"** %fMemoryManager, align 8, !dbg !3238, !tbaa !2446
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::SchemaDateTimeException"* %2}, i64 0, metadata !3240), !dbg !3241
  tail call void @llvm.dbg.value(metadata !2954, i64 0, metadata !3242), !dbg !3241
  tail call void @llvm.dbg.value(metadata !3243, i64 0, metadata !3244), !dbg !3241
  tail call void @llvm.dbg.value(metadata !3245, i64 0, metadata !3246), !dbg !3241
  tail call void @llvm.dbg.value(metadata !{i16* %3}, i64 0, metadata !3247), !dbg !3241
  tail call void @llvm.dbg.value(metadata !2961, i64 0, metadata !3248), !dbg !3241
  tail call void @llvm.dbg.value(metadata !2961, i64 0, metadata !3249), !dbg !3241
  tail call void @llvm.dbg.value(metadata !2961, i64 0, metadata !3250), !dbg !3241
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::MemoryManager"* %4}, i64 0, metadata !3251), !dbg !3241
  invoke void @_ZN11xercesc_2_523SchemaDateTimeExceptionC2EPKcjNS_10XMLExcepts5CodesEPKtS6_S6_S6_PNS_13MemoryManagerE(%"class.xercesc_2_5::SchemaDateTimeException"* %2, i8* getelementptr inbounds ([63 x i8]* @.str, i64 0, i64 0), i32 1216, i32 336, i16* %3, i16* null, i16* null, i16* null, %"class.xercesc_2_5::MemoryManager"* %4) #9
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then4
  tail call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_523SchemaDateTimeExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_5::SchemaDateTimeException"*)* @_ZN11xercesc_2_523SchemaDateTimeExceptionD1Ev to i8*)) #12, !dbg !3238
  unreachable, !dbg !3238

lpad:                                             ; preds = %if.then4
  %5 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !3238
  tail call void @__cxa_free_exception(i8* %exception) #2, !dbg !3238
  resume { i8*, i32 } %5, !dbg !3238

if.else:                                          ; preds = %if.then
  tail call void @_ZN11xercesc_2_511XMLDateTime11getTimeZoneEi(%"class.xercesc_2_5::XMLDateTime"* %this, i32 %call) #9, !dbg !3252
  br label %if.end5, !dbg !3254

if.end5:                                          ; preds = %if.else, %entry
  ret void, !dbg !3255
}
