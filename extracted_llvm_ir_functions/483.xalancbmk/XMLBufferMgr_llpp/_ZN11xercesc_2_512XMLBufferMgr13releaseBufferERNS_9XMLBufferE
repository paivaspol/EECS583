define void @_ZN11xercesc_2_512XMLBufferMgr13releaseBufferERNS_9XMLBufferE(%"class.xercesc_2_5::XMLBufferMgr"* nocapture %this, %"class.xercesc_2_5::XMLBuffer"* %toRelease) #0 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::XMLBufferMgr"* %this}, i64 0, metadata !771), !dbg !1068
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::XMLBuffer"* %toRelease}, i64 0, metadata !772), !dbg !1068
  tail call void @llvm.dbg.value(metadata !464, i64 0, metadata !773), !dbg !1069
  %fBufCount = getelementptr inbounds %"class.xercesc_2_5::XMLBufferMgr"* %this, i64 0, i32 0, !dbg !1069
  %0 = load i32* %fBufCount, align 4, !dbg !1069, !tbaa !980
  %cmp7 = icmp eq i32 %0, 0, !dbg !1069
  br i1 %cmp7, label %for.end, label %for.body.lr.ph, !dbg !1069

for.body.lr.ph:                                   ; preds = %entry
  %fBufList = getelementptr inbounds %"class.xercesc_2_5::XMLBufferMgr"* %this, i64 0, i32 2, !dbg !1070
  %1 = load %"class.xercesc_2_5::XMLBuffer"*** %fBufList, align 8, !dbg !1070, !tbaa !983
  br label %for.body, !dbg !1069

for.cond:                                         ; preds = %for.body
  %cmp = icmp ult i32 %inc, %0, !dbg !1069
  br i1 %cmp, label %for.body, label %for.end, !dbg !1069

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %index.08 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.cond ]
  %idxprom = zext i32 %index.08 to i64, !dbg !1070
  %arrayidx = getelementptr inbounds %"class.xercesc_2_5::XMLBuffer"** %1, i64 %idxprom, !dbg !1070
  %2 = load %"class.xercesc_2_5::XMLBuffer"** %arrayidx, align 8, !dbg !1070, !tbaa !983
  %cmp2 = icmp eq %"class.xercesc_2_5::XMLBuffer"* %2, %toRelease, !dbg !1070
  %inc = add i32 %index.08, 1, !dbg !1069
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !773), !dbg !1069
  br i1 %cmp2, label %if.then, label %for.cond, !dbg !1070

if.then:                                          ; preds = %for.body
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::XMLBuffer"* %toRelease}, i64 0, metadata !1072), !dbg !1075
  tail call void @llvm.dbg.value(metadata !1076, i64 0, metadata !1077), !dbg !1075
  %fUsed.i = getelementptr inbounds %"class.xercesc_2_5::XMLBuffer"* %toRelease, i64 0, i32 0, !dbg !1078
  store i8 0, i8* %fUsed.i, align 1, !dbg !1078, !tbaa !1020
  ret void, !dbg !1079

for.end:                                          ; preds = %for.cond, %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 48) #7, !dbg !1079
  %3 = bitcast i8* %exception to %"class.xercesc_2_5::RuntimeException"*, !dbg !1079
  %fMemoryManager = getelementptr inbounds %"class.xercesc_2_5::XMLBufferMgr"* %this, i64 0, i32 1, !dbg !1079
  %4 = load %"class.xercesc_2_5::MemoryManager"** %fMemoryManager, align 8, !dbg !1079, !tbaa !983
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::RuntimeException"* %3}, i64 0, metadata !1080), !dbg !1081
  tail call void @llvm.dbg.value(metadata !1053, i64 0, metadata !1082), !dbg !1081
  tail call void @llvm.dbg.value(metadata !1083, i64 0, metadata !1084), !dbg !1081
  tail call void @llvm.dbg.value(metadata !1085, i64 0, metadata !1086), !dbg !1081
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::MemoryManager"* %4}, i64 0, metadata !1087), !dbg !1081
  invoke void @_ZN11xercesc_2_516RuntimeExceptionC2EPKcjNS_10XMLExcepts5CodesEPNS_13MemoryManagerE(%"class.xercesc_2_5::RuntimeException"* %3, i8* getelementptr inbounds ([64 x i8]* @.str, i64 0, i64 0), i32 179, i32 14, %"class.xercesc_2_5::MemoryManager"* %4) #5
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %for.end
  tail call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11xercesc_2_516RuntimeExceptionE to i8*), i8* bitcast (void (%"class.xercesc_2_5::RuntimeException"*)* @_ZN11xercesc_2_516RuntimeExceptionD1Ev to i8*)) #8, !dbg !1079
  unreachable, !dbg !1079

lpad:                                             ; preds = %for.end
  %5 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !1079
  tail call void @__cxa_free_exception(i8* %exception) #7, !dbg !1079
  resume { i8*, i32 } %5, !dbg !1079
}
