define void @_ZN11xercesc_2_59XMLString4trimEPc(i8* nocapture %toTrim) #4 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %toTrim}, i64 0, metadata !1699), !dbg !3156
  %call = tail call i64 @strlen(i8* %toTrim) #14, !dbg !3157
  %conv = trunc i64 %call to i32, !dbg !3157
  tail call void @llvm.dbg.value(metadata !{i32 %conv}, i64 0, metadata !1700), !dbg !3157
  tail call void @llvm.dbg.value(metadata !1004, i64 0, metadata !1701), !dbg !3158
  %cmp59 = icmp eq i32 %conv, 0, !dbg !3158
  br i1 %cmp59, label %for.cond3.preheader, label %for.body, !dbg !3158

for.cond:                                         ; preds = %for.body
  %0 = trunc i64 %indvars.iv.next to i32, !dbg !3158
  %cmp = icmp ult i32 %0, %conv, !dbg !3158
  br i1 %cmp, label %for.body, label %for.cond3.preheader, !dbg !3158

for.cond3.preheader:                              ; preds = %for.cond, %for.body, %entry
  %skip.0.lcssa = phi i32 [ 0, %entry ], [ %skip.060, %for.body ], [ %inc, %for.cond ]
  br label %for.cond3, !dbg !3160

for.body:                                         ; preds = %entry, %for.cond
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond ], [ 0, %entry ]
  %skip.060 = phi i32 [ %inc, %for.cond ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds i8* %toTrim, i64 %indvars.iv, !dbg !3162
  %1 = load i8* %arrayidx, align 1, !dbg !3162, !tbaa !2818
  %conv1 = sext i8 %1 to i32, !dbg !3162
  %call2 = tail call i32 @isspace(i32 %conv1) #13, !dbg !3162
  %tobool = icmp eq i32 %call2, 0, !dbg !3162
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !3158
  %inc = add i32 %skip.060, 1, !dbg !3158
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !1701), !dbg !3158
  br i1 %tobool, label %for.cond3.preheader, label %for.cond, !dbg !3162

for.cond3:                                        ; preds = %for.cond3.preheader, %for.body5
  %scrape.0 = phi i32 [ %sub, %for.body5 ], [ %conv, %for.cond3.preheader ]
  %cmp4 = icmp ugt i32 %scrape.0, %skip.0.lcssa, !dbg !3160
  br i1 %cmp4, label %for.body5, label %for.end14, !dbg !3160

for.body5:                                        ; preds = %for.cond3
  %sub = add i32 %scrape.0, -1, !dbg !3164
  %idxprom6 = zext i32 %sub to i64, !dbg !3164
  %arrayidx7 = getelementptr inbounds i8* %toTrim, i64 %idxprom6, !dbg !3164
  %2 = load i8* %arrayidx7, align 1, !dbg !3164, !tbaa !2818
  %conv8 = sext i8 %2 to i32, !dbg !3164
  %call9 = tail call i32 @isspace(i32 %conv8) #13, !dbg !3164
  %tobool10 = icmp eq i32 %call9, 0, !dbg !3164
  br i1 %tobool10, label %for.end14, label %for.cond3, !dbg !3164

for.end14:                                        ; preds = %for.body5, %for.cond3
  %cmp15 = icmp eq i32 %scrape.0, %conv, !dbg !3166
  br i1 %cmp15, label %if.end19, label %if.then16, !dbg !3166

if.then16:                                        ; preds = %for.end14
  %idxprom17 = zext i32 %scrape.0 to i64, !dbg !3167
  %arrayidx18 = getelementptr inbounds i8* %toTrim, i64 %idxprom17, !dbg !3167
  store i8 0, i8* %arrayidx18, align 1, !dbg !3167, !tbaa !2818
  br label %if.end19, !dbg !3167

if.end19:                                         ; preds = %for.end14, %if.then16
  %tobool20 = icmp eq i32 %skip.0.lcssa, 0, !dbg !3168
  br i1 %tobool20, label %if.end33, label %while.cond.preheader, !dbg !3168

while.cond.preheader:                             ; preds = %if.end19
  %idxprom2254 = zext i32 %skip.0.lcssa to i64, !dbg !3169
  %arrayidx2355 = getelementptr inbounds i8* %toTrim, i64 %idxprom2254, !dbg !3169
  %3 = load i8* %arrayidx2355, align 1, !dbg !3169, !tbaa !2818
  %tobool2456 = icmp eq i8 %3, 0, !dbg !3169
  br i1 %tobool2456, label %while.end, label %while.body, !dbg !3169

while.body:                                       ; preds = %while.cond.preheader, %while.body
  %4 = phi i8 [ %5, %while.body ], [ %3, %while.cond.preheader ]
  %index.058 = phi i32 [ %inc28, %while.body ], [ 0, %while.cond.preheader ]
  %skip.157 = phi i32 [ %inc25, %while.body ], [ %skip.0.lcssa, %while.cond.preheader ]
  %inc25 = add i32 %skip.157, 1, !dbg !3170
  tail call void @llvm.dbg.value(metadata !{i32 %inc25}, i64 0, metadata !1701), !dbg !3170
  %inc28 = add i32 %index.058, 1, !dbg !3170
  tail call void @llvm.dbg.value(metadata !{i32 %inc28}, i64 0, metadata !1703), !dbg !3170
  %idxprom29 = zext i32 %index.058 to i64, !dbg !3170
  %arrayidx30 = getelementptr inbounds i8* %toTrim, i64 %idxprom29, !dbg !3170
  store i8 %4, i8* %arrayidx30, align 1, !dbg !3170, !tbaa !2818
  %idxprom22 = zext i32 %inc25 to i64, !dbg !3169
  %arrayidx23 = getelementptr inbounds i8* %toTrim, i64 %idxprom22, !dbg !3169
  %5 = load i8* %arrayidx23, align 1, !dbg !3169, !tbaa !2818
  %tobool24 = icmp eq i8 %5, 0, !dbg !3169
  br i1 %tobool24, label %while.cond.while.end_crit_edge, label %while.body, !dbg !3169

while.cond.while.end_crit_edge:                   ; preds = %while.body
  %phitmp = zext i32 %inc28 to i64, !dbg !3169
  br label %while.end, !dbg !3169

while.end:                                        ; preds = %while.cond.while.end_crit_edge, %while.cond.preheader
  %index.0.lcssa = phi i64 [ %phitmp, %while.cond.while.end_crit_edge ], [ 0, %while.cond.preheader ]
  %arrayidx32 = getelementptr inbounds i8* %toTrim, i64 %index.0.lcssa, !dbg !3171
  store i8 0, i8* %arrayidx32, align 1, !dbg !3171, !tbaa !2818
  br label %if.end33, !dbg !3172

if.end33:                                         ; preds = %if.end19, %while.end
  ret void, !dbg !3173
}
