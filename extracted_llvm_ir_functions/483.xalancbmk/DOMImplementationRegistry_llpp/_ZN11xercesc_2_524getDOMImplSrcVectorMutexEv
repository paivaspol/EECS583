define %"class.xercesc_2_5::XMLMutex"* @_ZN11xercesc_2_524getDOMImplSrcVectorMutexEv() #1 {
entry:
  %lock = alloca %"class.xercesc_2_5::XMLMutexLock", align 8
  %0 = load atomic i8* bitcast (i64* @_ZGVZN11xercesc_2_524getDOMImplSrcVectorMutexEvE28cleanupDOMImplSrcVectorMutex to i8*) acquire, align 8, !dbg !1424
  %guard.uninitialized = icmp eq i8 %0, 0, !dbg !1424
  br i1 %guard.uninitialized, label %init.check, label %init.end, !dbg !1424

init.check:                                       ; preds = %entry
  %1 = call i32 @__cxa_guard_acquire(i64* @_ZGVZN11xercesc_2_524getDOMImplSrcVectorMutexEvE28cleanupDOMImplSrcVectorMutex) #2, !dbg !1424
  %tobool = icmp eq i32 %1, 0, !dbg !1424
  br i1 %tobool, label %init.end, label %invoke.cont, !dbg !1424

invoke.cont:                                      ; preds = %init.check
  call void @llvm.dbg.value(metadata !1425, i64 0, metadata !1426) #2, !dbg !1427
  call void @llvm.dbg.value(metadata !1425, i64 0, metadata !1428) #2, !dbg !1430
  call void @llvm.dbg.value(metadata !1425, i64 0, metadata !1431) #2, !dbg !1433
  call void @llvm.memset.p0i8.i64(i8* bitcast (%"class.xercesc_2_5::XMLRegisterCleanup"* @_ZZN11xercesc_2_524getDOMImplSrcVectorMutexEvE28cleanupDOMImplSrcVectorMutex to i8*), i8 0, i64 24, i32 8, i1 false) #2, !dbg !1434
  call void @__cxa_guard_release(i64* @_ZGVZN11xercesc_2_524getDOMImplSrcVectorMutexEvE28cleanupDOMImplSrcVectorMutex) #2, !dbg !1424
  br label %init.end, !dbg !1424

init.end:                                         ; preds = %init.check, %invoke.cont, %entry
  %2 = load %"class.xercesc_2_5::XMLMutex"** @_ZN11xercesc_2_5L22gDOMImplSrcVectorMutexE, align 8, !dbg !1435, !tbaa !1381
  %tobool1 = icmp eq %"class.xercesc_2_5::XMLMutex"* %2, null, !dbg !1435
  br i1 %tobool1, label %if.then, label %if.end11, !dbg !1435

if.then:                                          ; preds = %init.end
  call void @llvm.dbg.declare(metadata !{%"class.xercesc_2_5::XMLMutexLock"* %lock}, metadata !986), !dbg !1436
  %3 = load %"class.xercesc_2_5::XMLMutex"** @_ZN11xercesc_2_516XMLPlatformUtils13fgAtomicMutexE, align 8, !dbg !1436, !tbaa !1381
  call void @_ZN11xercesc_2_512XMLMutexLockC1EPNS_8XMLMutexE(%"class.xercesc_2_5::XMLMutexLock"* %lock, %"class.xercesc_2_5::XMLMutex"* %3) #6, !dbg !1436
  %4 = load %"class.xercesc_2_5::XMLMutex"** @_ZN11xercesc_2_5L22gDOMImplSrcVectorMutexE, align 8, !dbg !1437, !tbaa !1381
  %tobool2 = icmp eq %"class.xercesc_2_5::XMLMutex"* %4, null, !dbg !1437
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !1437

if.then3:                                         ; preds = %if.then
  %call = invoke i8* @_ZN11xercesc_2_57XMemorynwEm(i64 8) #6
          to label %invoke.cont5 unwind label %lpad4, !dbg !1438

invoke.cont5:                                     ; preds = %if.then3
  %5 = bitcast i8* %call to %"class.xercesc_2_5::XMLMutex"*, !dbg !1438
  invoke void @_ZN11xercesc_2_58XMLMutexC1Ev(%"class.xercesc_2_5::XMLMutex"* %5) #6
          to label %invoke.cont7 unwind label %lpad6, !dbg !1438

invoke.cont7:                                     ; preds = %invoke.cont5
  store %"class.xercesc_2_5::XMLMutex"* %5, %"class.xercesc_2_5::XMLMutex"** @_ZN11xercesc_2_5L22gDOMImplSrcVectorMutexE, align 8, !dbg !1438, !tbaa !1381
  invoke void @_ZN11xercesc_2_518XMLRegisterCleanup15registerCleanupEPFvvE(%"class.xercesc_2_5::XMLRegisterCleanup"* @_ZZN11xercesc_2_524getDOMImplSrcVectorMutexEvE28cleanupDOMImplSrcVectorMutex, void ()* @_ZN11xercesc_2_5L27reinitDOMImplSrcVectorMutexEv) #6
          to label %if.end unwind label %lpad4, !dbg !1440

lpad4:                                            ; preds = %invoke.cont7, %if.then3
  %6 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !1438
  %7 = extractvalue { i8*, i32 } %6, 0, !dbg !1438
  %8 = extractvalue { i8*, i32 } %6, 1, !dbg !1438
  br label %ehcleanup, !dbg !1438

lpad6:                                            ; preds = %invoke.cont5
  %9 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !1438
  %10 = extractvalue { i8*, i32 } %9, 0, !dbg !1438
  %11 = extractvalue { i8*, i32 } %9, 1, !dbg !1438
  invoke void @_ZN11xercesc_2_57XMemorydlEPv(i8* %call) #6
          to label %ehcleanup unwind label %terminate.lpad, !dbg !1438

if.end:                                           ; preds = %if.then, %invoke.cont7
  call void @_ZN11xercesc_2_512XMLMutexLockD1Ev(%"class.xercesc_2_5::XMLMutexLock"* %lock) #6, !dbg !1441
  %.pre = load %"class.xercesc_2_5::XMLMutex"** @_ZN11xercesc_2_5L22gDOMImplSrcVectorMutexE, align 8, !dbg !1442, !tbaa !1381
  br label %if.end11, !dbg !1443

ehcleanup:                                        ; preds = %lpad6, %lpad4
  %exn.slot.0 = phi i8* [ %7, %lpad4 ], [ %10, %lpad6 ]
  %ehselector.slot.0 = phi i32 [ %8, %lpad4 ], [ %11, %lpad6 ]
  invoke void @_ZN11xercesc_2_512XMLMutexLockD1Ev(%"class.xercesc_2_5::XMLMutexLock"* %lock) #6
          to label %eh.resume unwind label %terminate.lpad, !dbg !1443

if.end11:                                         ; preds = %init.end, %if.end
  %12 = phi %"class.xercesc_2_5::XMLMutex"* [ %2, %init.end ], [ %.pre, %if.end ]
  ret %"class.xercesc_2_5::XMLMutex"* %12, !dbg !1442

eh.resume:                                        ; preds = %ehcleanup
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.0, 0, !dbg !1424
  %lpad.val12 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.0, 1, !dbg !1424
  resume { i8*, i32 } %lpad.val12, !dbg !1424

terminate.lpad:                                   ; preds = %ehcleanup, %lpad6
  %13 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          catch i8* null, !dbg !1438
  %14 = extractvalue { i8*, i32 } %13, 0, !dbg !1438
  call void @__clang_call_terminate(i8* %14) #7, !dbg !1438
  unreachable, !dbg !1438
}
