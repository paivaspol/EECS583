define void @_ZN10xalanc_1_814FormatterToXML14accumNameArrayEPKtjj(%"class.xalanc_1_8::FormatterToXML"* %this, i16* nocapture %chars, i32 %start, i32 %length) #2 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::FormatterToXML"* %this}, i64 0, metadata !3715), !dbg !6719
  tail call void @llvm.dbg.value(metadata !{i16* %chars}, i64 0, metadata !3716), !dbg !6720
  tail call void @llvm.dbg.value(metadata !{i32 %start}, i64 0, metadata !3717), !dbg !6721
  tail call void @llvm.dbg.value(metadata !{i32 %length}, i64 0, metadata !3718), !dbg !6722
  %add = add i32 %length, %start, !dbg !6723
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !3719), !dbg !6723
  tail call void @llvm.dbg.value(metadata !{i32 %start}, i64 0, metadata !3720), !dbg !6724
  %cmp5 = icmp ugt i32 %add, %start, !dbg !6724
  br i1 %cmp5, label %for.body.lr.ph, label %for.end, !dbg !6724

for.body.lr.ph:                                   ; preds = %entry
  %m_accumNameCharFunction.i = getelementptr inbounds %"class.xalanc_1_8::FormatterToXML"* %this, i64 0, i32 36, !dbg !6725
  %0 = bitcast %"class.xalanc_1_8::FormatterToXML"* %this to i8*, !dbg !6725
  %1 = zext i32 %start to i64
  br label %for.body, !dbg !6724

for.body:                                         ; preds = %_ZN10xalanc_1_814FormatterToXML9accumNameEt.exit, %for.body.lr.ph
  %indvars.iv = phi i64 [ %1, %for.body.lr.ph ], [ %indvars.iv.next, %_ZN10xalanc_1_814FormatterToXML9accumNameEt.exit ]
  %i.06 = phi i32 [ %start, %for.body.lr.ph ], [ %inc, %_ZN10xalanc_1_814FormatterToXML9accumNameEt.exit ]
  %arrayidx = getelementptr inbounds i16* %chars, i64 %indvars.iv, !dbg !6726
  %2 = load i16* %arrayidx, align 2, !dbg !6726, !tbaa !6201
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::FormatterToXML"* %this}, i64 0, metadata !6728), !dbg !6729
  tail call void @llvm.dbg.value(metadata !{i16 %2}, i64 0, metadata !6730), !dbg !6729
  %3 = load { i64, i64 }* %m_accumNameCharFunction.i, align 8, !dbg !6725, !tbaa !6038
  %memptr.adj.i = extractvalue { i64, i64 } %3, 1, !dbg !6725
  %4 = getelementptr inbounds i8* %0, i64 %memptr.adj.i, !dbg !6725
  %this.adjusted.i = bitcast i8* %4 to %"class.xalanc_1_8::FormatterToXML"*, !dbg !6725
  %memptr.ptr.i = extractvalue { i64, i64 } %3, 0, !dbg !6725
  %5 = and i64 %memptr.ptr.i, 1, !dbg !6725
  %memptr.isvirtual.i = icmp eq i64 %5, 0, !dbg !6725
  br i1 %memptr.isvirtual.i, label %memptr.nonvirtual.i, label %memptr.virtual.i, !dbg !6725

memptr.virtual.i:                                 ; preds = %for.body
  %6 = bitcast i8* %4 to i8**, !dbg !6725
  %memptr.vtable.i = load i8** %6, align 8, !dbg !6725
  %7 = add i64 %memptr.ptr.i, -1, !dbg !6725
  %8 = getelementptr i8* %memptr.vtable.i, i64 %7, !dbg !6725
  %9 = bitcast i8* %8 to void (%"class.xalanc_1_8::FormatterToXML"*, i16)**, !dbg !6725
  %memptr.virtualfn.i = load void (%"class.xalanc_1_8::FormatterToXML"*, i16)** %9, align 8, !dbg !6725
  br label %_ZN10xalanc_1_814FormatterToXML9accumNameEt.exit, !dbg !6725

memptr.nonvirtual.i:                              ; preds = %for.body
  %memptr.nonvirtualfn.i = inttoptr i64 %memptr.ptr.i to void (%"class.xalanc_1_8::FormatterToXML"*, i16)*, !dbg !6725
  br label %_ZN10xalanc_1_814FormatterToXML9accumNameEt.exit, !dbg !6725

_ZN10xalanc_1_814FormatterToXML9accumNameEt.exit: ; preds = %memptr.virtual.i, %memptr.nonvirtual.i
  %10 = phi void (%"class.xalanc_1_8::FormatterToXML"*, i16)* [ %memptr.virtualfn.i, %memptr.virtual.i ], [ %memptr.nonvirtualfn.i, %memptr.nonvirtual.i ], !dbg !6725
  tail call void %10(%"class.xalanc_1_8::FormatterToXML"* %this.adjusted.i, i16 zeroext %2) #11, !dbg !6725
  %inc = add i32 %i.06, 1, !dbg !6724
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !3720), !dbg !6724
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !6724
  %exitcond = icmp eq i32 %inc, %add, !dbg !6724
  br i1 %exitcond, label %for.end, label %for.body, !dbg !6724

for.end:                                          ; preds = %_ZN10xalanc_1_814FormatterToXML9accumNameEt.exit, %entry
  ret void, !dbg !6731
}
