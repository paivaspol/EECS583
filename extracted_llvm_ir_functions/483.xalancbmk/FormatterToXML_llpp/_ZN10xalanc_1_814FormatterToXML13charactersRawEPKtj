define void @_ZN10xalanc_1_814FormatterToXML13charactersRawEPKtj(%"class.xalanc_1_8::FormatterToXML"* %this, i16* %chars, i32 %length) unnamed_addr #2 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::FormatterToXML"* %this}, i64 0, metadata !3847), !dbg !8582
  tail call void @llvm.dbg.value(metadata !{i16* %chars}, i64 0, metadata !3848), !dbg !8583
  tail call void @llvm.dbg.value(metadata !{i32 %length}, i64 0, metadata !3849), !dbg !8584
  %m_inEntityRef = getelementptr inbounds %"class.xalanc_1_8::FormatterToXML"* %this, i64 0, i32 27, !dbg !8585
  %0 = load i8* %m_inEntityRef, align 1, !dbg !8585, !tbaa !6040, !range !6218
  %cmp = icmp eq i8 %0, 0, !dbg !8585
  br i1 %cmp, label %if.then, label %if.end, !dbg !8585

if.then:                                          ; preds = %entry
  tail call void @_ZN10xalanc_1_814FormatterToXML17writeParentTagEndEv(%"class.xalanc_1_8::FormatterToXML"* %this) #11, !dbg !8586
  %m_ispreserve = getelementptr inbounds %"class.xalanc_1_8::FormatterToXML"* %this, i64 0, i32 7, !dbg !8588
  store i8 1, i8* %m_ispreserve, align 1, !dbg !8588, !tbaa !6040
  tail call void @llvm.dbg.value(metadata !{%"class.xalanc_1_8::FormatterToXML"* %this}, i64 0, metadata !8589), !dbg !8591
  tail call void @llvm.dbg.value(metadata !{i16* %chars}, i64 0, metadata !8592), !dbg !8593
  tail call void @llvm.dbg.value(metadata !201, i64 0, metadata !8594), !dbg !8595
  tail call void @llvm.dbg.value(metadata !{i32 %length}, i64 0, metadata !8596), !dbg !8597
  %m_accumContentArrayFunction.i = getelementptr inbounds %"class.xalanc_1_8::FormatterToXML"* %this, i64 0, i32 43, !dbg !8598
  %1 = load { i64, i64 }* %m_accumContentArrayFunction.i, align 8, !dbg !8598, !tbaa !6038
  %memptr.adj.i = extractvalue { i64, i64 } %1, 1, !dbg !8598
  %2 = bitcast %"class.xalanc_1_8::FormatterToXML"* %this to i8*, !dbg !8598
  %3 = getelementptr inbounds i8* %2, i64 %memptr.adj.i, !dbg !8598
  %this.adjusted.i = bitcast i8* %3 to %"class.xalanc_1_8::FormatterToXML"*, !dbg !8598
  %memptr.ptr.i = extractvalue { i64, i64 } %1, 0, !dbg !8598
  %4 = and i64 %memptr.ptr.i, 1, !dbg !8598
  %memptr.isvirtual.i = icmp eq i64 %4, 0, !dbg !8598
  br i1 %memptr.isvirtual.i, label %memptr.nonvirtual.i, label %memptr.virtual.i, !dbg !8598

memptr.virtual.i:                                 ; preds = %if.then
  %5 = bitcast i8* %3 to i8**, !dbg !8598
  %memptr.vtable.i = load i8** %5, align 8, !dbg !8598
  %6 = add i64 %memptr.ptr.i, -1, !dbg !8598
  %7 = getelementptr i8* %memptr.vtable.i, i64 %6, !dbg !8598
  %8 = bitcast i8* %7 to void (%"class.xalanc_1_8::FormatterToXML"*, i16*, i32, i32)**, !dbg !8598
  %memptr.virtualfn.i = load void (%"class.xalanc_1_8::FormatterToXML"*, i16*, i32, i32)** %8, align 8, !dbg !8598
  br label %_ZN10xalanc_1_814FormatterToXML12accumContentEPKtjj.exit, !dbg !8598

memptr.nonvirtual.i:                              ; preds = %if.then
  %memptr.nonvirtualfn.i = inttoptr i64 %memptr.ptr.i to void (%"class.xalanc_1_8::FormatterToXML"*, i16*, i32, i32)*, !dbg !8598
  br label %_ZN10xalanc_1_814FormatterToXML12accumContentEPKtjj.exit, !dbg !8598

_ZN10xalanc_1_814FormatterToXML12accumContentEPKtjj.exit: ; preds = %memptr.virtual.i, %memptr.nonvirtual.i
  %9 = phi void (%"class.xalanc_1_8::FormatterToXML"*, i16*, i32, i32)* [ %memptr.virtualfn.i, %memptr.virtual.i ], [ %memptr.nonvirtualfn.i, %memptr.nonvirtual.i ], !dbg !8598
  tail call void %9(%"class.xalanc_1_8::FormatterToXML"* %this.adjusted.i, i16* %chars, i32 0, i32 %length) #11, !dbg !8598
  br label %if.end, !dbg !8599

if.end:                                           ; preds = %_ZN10xalanc_1_814FormatterToXML12accumContentEPKtjj.exit, %entry
  ret void, !dbg !8600
}
