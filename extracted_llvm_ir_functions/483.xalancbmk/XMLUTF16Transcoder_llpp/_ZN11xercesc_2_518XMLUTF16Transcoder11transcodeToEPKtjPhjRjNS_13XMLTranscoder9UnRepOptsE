define i32 @_ZN11xercesc_2_518XMLUTF16Transcoder11transcodeToEPKtjPhjRjNS_13XMLTranscoder9UnRepOptsE(%"class.xercesc_2_5::XMLUTF16Transcoder"* nocapture %this, i16* nocapture %srcData, i32 %srcCount, i8* nocapture %toFill, i32 %maxBytes, i32* nocapture %charsEaten, i32) unnamed_addr #3 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::XMLUTF16Transcoder"* %this}, i64 0, metadata !249), !dbg !353
  tail call void @llvm.dbg.value(metadata !{i16* %srcData}, i64 0, metadata !250), !dbg !353
  tail call void @llvm.dbg.value(metadata !{i32 %srcCount}, i64 0, metadata !251), !dbg !354
  tail call void @llvm.dbg.value(metadata !{i8* %toFill}, i64 0, metadata !252), !dbg !355
  tail call void @llvm.dbg.value(metadata !{i32 %maxBytes}, i64 0, metadata !253), !dbg !356
  tail call void @llvm.dbg.value(metadata !{i32* %charsEaten}, i64 0, metadata !254), !dbg !357
  tail call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !255), !dbg !358
  %div = lshr i32 %maxBytes, 1, !dbg !359
  tail call void @llvm.dbg.value(metadata !{i32 %div}, i64 0, metadata !256), !dbg !359
  %cmp = icmp ugt i32 %div, %srcCount, !dbg !360
  %cond = select i1 %cmp, i32 %srcCount, i32 %div, !dbg !360
  tail call void @llvm.dbg.value(metadata !{i32 %cond}, i64 0, metadata !257), !dbg !360
  tail call void @llvm.dbg.value(metadata !{i16* %2}, i64 0, metadata !258), !dbg !361
  tail call void @llvm.dbg.value(metadata !{i16* %srcData}, i64 0, metadata !260), !dbg !362
  %fSwapped = getelementptr inbounds %"class.xercesc_2_5::XMLUTF16Transcoder"* %this, i64 0, i32 1, !dbg !363
  %1 = load i8* %fSwapped, align 1, !dbg !363, !tbaa !314, !range !338
  %tobool = icmp eq i8 %1, 0, !dbg !363
  br i1 %tobool, label %if.else, label %if.then, !dbg !363

if.then:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata !136, i64 0, metadata !261), !dbg !364
  %cmp317 = icmp eq i32 %cond, 0, !dbg !364
  br i1 %cmp317, label %if.end, label %for.body.lr.ph, !dbg !364

for.body.lr.ph:                                   ; preds = %if.then
  %2 = bitcast i8* %toFill to i16*, !dbg !361
  %3 = xor i32 %srcCount, -1, !dbg !364
  %4 = xor i32 %div, -1, !dbg !364
  %5 = icmp ugt i32 %3, %4
  %umax = select i1 %5, i32 %3, i32 %4
  %6 = xor i32 %umax, -1, !dbg !364
  br label %for.body, !dbg !364

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %outPtr.020 = phi i16* [ %2, %for.body.lr.ph ], [ %incdec.ptr4, %for.body ]
  %index.019 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %srcPtr.018 = phi i16* [ %srcData, %for.body.lr.ph ], [ %incdec.ptr, %for.body ]
  %incdec.ptr = getelementptr inbounds i16* %srcPtr.018, i64 1, !dbg !365
  tail call void @llvm.dbg.value(metadata !{i16* %incdec.ptr}, i64 0, metadata !260), !dbg !365
  %7 = load i16* %srcPtr.018, align 2, !dbg !365, !tbaa !341
  tail call void @llvm.dbg.value(metadata !{i16 %7}, i64 0, metadata !264), !dbg !365
  tail call void @llvm.dbg.value(metadata !{i16 %7}, i64 0, metadata !366) #4, !dbg !368
  %and.i = tail call i16 @llvm.bswap.i16(i16 %7) #4, !dbg !369
  %incdec.ptr4 = getelementptr inbounds i16* %outPtr.020, i64 1, !dbg !367
  tail call void @llvm.dbg.value(metadata !{i16* %incdec.ptr4}, i64 0, metadata !258), !dbg !367
  store i16 %and.i, i16* %outPtr.020, align 2, !dbg !367, !tbaa !341
  %inc = add i32 %index.019, 1, !dbg !364
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !261), !dbg !364
  %exitcond = icmp eq i32 %inc, %6, !dbg !364
  br i1 %exitcond, label %if.end, label %for.body, !dbg !364

if.else:                                          ; preds = %entry
  %8 = bitcast i16* %srcData to i8*, !dbg !370
  %conv5 = zext i32 %cond to i64, !dbg !370
  %mul = shl nuw nsw i64 %conv5, 1, !dbg !370
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %toFill, i8* %8, i64 %mul, i32 1, i1 false), !dbg !370
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body, %if.else
  store i32 %cond, i32* %charsEaten, align 4, !dbg !373, !tbaa !350
  %mul7 = shl i32 %cond, 1, !dbg !374
  ret i32 %mul7, !dbg !374
}
