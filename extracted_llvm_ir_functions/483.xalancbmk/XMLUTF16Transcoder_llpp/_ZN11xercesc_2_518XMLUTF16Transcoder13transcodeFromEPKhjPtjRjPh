define i32 @_ZN11xercesc_2_518XMLUTF16Transcoder13transcodeFromEPKhjPtjRjPh(%"class.xercesc_2_5::XMLUTF16Transcoder"* nocapture %this, i8* nocapture %srcData, i32 %srcCount, i16* nocapture %toFill, i32 %maxChars, i32* nocapture %bytesEaten, i8* nocapture %charSizes) unnamed_addr #3 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::XMLUTF16Transcoder"* %this}, i64 0, metadata !229), !dbg !327
  tail call void @llvm.dbg.value(metadata !{i8* %srcData}, i64 0, metadata !230), !dbg !327
  tail call void @llvm.dbg.value(metadata !{i32 %srcCount}, i64 0, metadata !231), !dbg !328
  tail call void @llvm.dbg.value(metadata !{i16* %toFill}, i64 0, metadata !232), !dbg !329
  tail call void @llvm.dbg.value(metadata !{i32 %maxChars}, i64 0, metadata !233), !dbg !330
  tail call void @llvm.dbg.value(metadata !{i32* %bytesEaten}, i64 0, metadata !234), !dbg !331
  tail call void @llvm.dbg.value(metadata !{i8* %charSizes}, i64 0, metadata !235), !dbg !332
  %div = lshr i32 %srcCount, 1, !dbg !333
  tail call void @llvm.dbg.value(metadata !{i32 %div}, i64 0, metadata !236), !dbg !333
  %cmp = icmp ult i32 %div, %maxChars, !dbg !334
  %cond = select i1 %cmp, i32 %div, i32 %maxChars, !dbg !334
  tail call void @llvm.dbg.value(metadata !{i32 %cond}, i64 0, metadata !237), !dbg !334
  tail call void @llvm.dbg.value(metadata !{i16* %1}, i64 0, metadata !238), !dbg !335
  tail call void @llvm.dbg.value(metadata !{i16* %toFill}, i64 0, metadata !243), !dbg !336
  %fSwapped = getelementptr inbounds %"class.xercesc_2_5::XMLUTF16Transcoder"* %this, i64 0, i32 1, !dbg !337
  %0 = load i8* %fSwapped, align 1, !dbg !337, !tbaa !314, !range !338
  %tobool = icmp eq i8 %0, 0, !dbg !337
  br i1 %tobool, label %if.else, label %if.then, !dbg !337

if.then:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata !136, i64 0, metadata !244), !dbg !339
  %cmp319 = icmp eq i32 %cond, 0, !dbg !339
  br i1 %cmp319, label %if.end.loopexit, label %for.body.lr.ph, !dbg !339

for.body.lr.ph:                                   ; preds = %if.then
  %1 = bitcast i8* %srcData to i16*, !dbg !335
  %2 = xor i32 %maxChars, -1, !dbg !339
  %3 = xor i32 %div, -1, !dbg !339
  %4 = icmp ugt i32 %2, %3
  %umax = select i1 %4, i32 %2, i32 %3
  %5 = xor i32 %umax, -1, !dbg !339
  br label %for.body, !dbg !339

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %index.022 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %outPtr.021 = phi i16* [ %toFill, %for.body.lr.ph ], [ %incdec.ptr4, %for.body ]
  %asUTF16.020 = phi i16* [ %1, %for.body.lr.ph ], [ %incdec.ptr, %for.body ]
  %incdec.ptr = getelementptr inbounds i16* %asUTF16.020, i64 1, !dbg !340
  tail call void @llvm.dbg.value(metadata !{i16* %incdec.ptr}, i64 0, metadata !238), !dbg !340
  %6 = load i16* %asUTF16.020, align 2, !dbg !340, !tbaa !341
  tail call void @llvm.dbg.value(metadata !{i16 %6}, i64 0, metadata !342) #4, !dbg !343
  %and.i = tail call i16 @llvm.bswap.i16(i16 %6) #4, !dbg !344
  %incdec.ptr4 = getelementptr inbounds i16* %outPtr.021, i64 1, !dbg !340
  tail call void @llvm.dbg.value(metadata !{i16* %incdec.ptr4}, i64 0, metadata !243), !dbg !340
  store i16 %and.i, i16* %outPtr.021, align 2, !dbg !340, !tbaa !341
  %inc = add i32 %index.022, 1, !dbg !339
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !244), !dbg !339
  %exitcond = icmp eq i32 %inc, %5, !dbg !339
  br i1 %exitcond, label %if.end.loopexit, label %for.body, !dbg !339

if.else:                                          ; preds = %entry
  %7 = bitcast i16* %toFill to i8*, !dbg !346
  %conv5 = zext i32 %cond to i64, !dbg !346
  %mul = shl nuw nsw i64 %conv5, 1, !dbg !346
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %srcData, i64 %mul, i32 1, i1 false), !dbg !346
  br label %if.end

if.end.loopexit:                                  ; preds = %for.body, %if.then
  %conv6.pre = zext i32 %cond to i64, !dbg !349
  br label %if.end

if.end:                                           ; preds = %if.end.loopexit, %if.else
  %conv6.pre-phi = phi i64 [ %conv6.pre, %if.end.loopexit ], [ %conv5, %if.else ], !dbg !349
  %mul7 = shl i32 %cond, 1, !dbg !349
  store i32 %mul7, i32* %bytesEaten, align 4, !dbg !349, !tbaa !350
  tail call void @llvm.memset.p0i8.i64(i8* %charSizes, i8 2, i64 %conv6.pre-phi, i32 1, i1 false), !dbg !351
  ret i32 %cond, !dbg !352
}
