define i32 @_ZN11xercesc_2_512DocumentImpl20indexofQualifiedNameERKNS_9DOMStringE(%"class.xercesc_2_5::DOMString"* %qName) #2 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.xercesc_2_5::DOMString"* %qName}, i64 0, metadata !4933), !dbg !6240
  %call = tail call i16* @_ZNK11xercesc_2_59DOMString9rawBufferEv(%"class.xercesc_2_5::DOMString"* %qName) #9, !dbg !6241
  tail call void @llvm.dbg.value(metadata !{i16* %call}, i64 0, metadata !4934), !dbg !6241
  %call1 = tail call i32 @_ZNK11xercesc_2_59DOMString6lengthEv(%"class.xercesc_2_5::DOMString"* %qName) #9, !dbg !6242
  tail call void @llvm.dbg.value(metadata !{i32 %call1}, i64 0, metadata !4935), !dbg !6242
  tail call void @llvm.dbg.value(metadata !6243, i64 0, metadata !4936), !dbg !6244
  tail call void @llvm.dbg.value(metadata !4684, i64 0, metadata !4937), !dbg !6244
  tail call void @llvm.dbg.value(metadata !4684, i64 0, metadata !4938), !dbg !6245
  %cmp24 = icmp sgt i32 %call1, 0, !dbg !6245
  br i1 %cmp24, label %for.body, label %for.end, !dbg !6245

for.body:                                         ; preds = %entry, %for.body
  %i.028 = phi i32 [ %inc3, %for.body ], [ 0, %entry ]
  %count.027 = phi i32 [ %inc.count.0, %for.body ], [ 0, %entry ]
  %index.026 = phi i32 [ %i.0.index.0, %for.body ], [ -1, %entry ]
  %qNameP.025 = phi i16* [ %incdec.ptr, %for.body ], [ %call, %entry ]
  %incdec.ptr = getelementptr inbounds i16* %qNameP.025, i64 1, !dbg !6246
  tail call void @llvm.dbg.value(metadata !{i16* %incdec.ptr}, i64 0, metadata !4934), !dbg !6246
  %0 = load i16* %qNameP.025, align 2, !dbg !6246, !tbaa !5876
  %cmp2 = icmp eq i16 %0, 58, !dbg !6246
  tail call void @llvm.dbg.value(metadata !{i32 %i.028}, i64 0, metadata !4936), !dbg !6247
  %i.0.index.0 = select i1 %cmp2, i32 %i.028, i32 %index.026, !dbg !6246
  %inc = zext i1 %cmp2 to i32, !dbg !6246
  %inc.count.0 = add nsw i32 %inc, %count.027, !dbg !6246
  %inc3 = add nsw i32 %i.028, 1, !dbg !6245
  tail call void @llvm.dbg.value(metadata !{i32 %inc3}, i64 0, metadata !4938), !dbg !6245
  %exitcond = icmp eq i32 %inc3, %call1, !dbg !6245
  br i1 %exitcond, label %for.end, label %for.body, !dbg !6245

for.end:                                          ; preds = %for.body, %entry
  %count.0.lcssa = phi i32 [ 0, %entry ], [ %inc.count.0, %for.body ]
  %index.0.lcssa = phi i32 [ -1, %entry ], [ %i.0.index.0, %for.body ]
  %cmp4 = icmp eq i32 %call1, 0, !dbg !6249
  %cmp5 = icmp sgt i32 %count.0.lcssa, 1, !dbg !6249
  %or.cond = or i1 %cmp4, %cmp5, !dbg !6249
  %cmp7 = icmp eq i32 %index.0.lcssa, 0, !dbg !6249
  %or.cond22 = or i1 %or.cond, %cmp7, !dbg !6249
  %sub = add nsw i32 %call1, -1, !dbg !6249
  %cmp9 = icmp eq i32 %index.0.lcssa, %sub, !dbg !6249
  %or.cond23 = or i1 %or.cond22, %cmp9, !dbg !6249
  br i1 %or.cond23, label %return, label %if.end11, !dbg !6249

if.end11:                                         ; preds = %for.end
  %cmp12 = icmp eq i32 %count.0.lcssa, 0, !dbg !6250
  %cond = select i1 %cmp12, i32 0, i32 %index.0.lcssa, !dbg !6250
  br label %return, !dbg !6250

return:                                           ; preds = %for.end, %if.end11
  %retval.0 = phi i32 [ %cond, %if.end11 ], [ -1, %for.end ]
  ret i32 %retval.0, !dbg !6251
}
