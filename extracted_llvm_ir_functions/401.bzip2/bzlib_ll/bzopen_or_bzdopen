define internal fastcc i8* @bzopen_or_bzdopen(i8* %path, i32 %fd, i8* readonly %mode, i32 %open_mode) #4 {
  %bzerr = alloca i32, align 4
  %unused = alloca [5000 x i8], align 16
  %mode2 = alloca [10 x i8], align 1
  %1 = getelementptr inbounds [5000 x i8]* %unused, i64 0, i64 0
  call void @llvm.lifetime.start(i64 5000, i8* %1) #8
  %2 = getelementptr inbounds [10 x i8]* %mode2, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 10, i32 1, i1 false)
  %3 = icmp eq i8* %mode, null
  br i1 %3, label %50, label %.preheader

.preheader:                                       ; preds = %0
  %4 = load i8* %mode, align 1, !tbaa !42
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.preheader, %11
  %6 = phi i8 [ %13, %11 ], [ %4, %.preheader ]
  %smallMode.06 = phi i32 [ %smallMode.1, %11 ], [ 0, %.preheader ]
  %.015 = phi i8* [ %12, %11 ], [ %mode, %.preheader ]
  %blockSize100k.04 = phi i32 [ %blockSize100k.1, %11 ], [ 9, %.preheader ]
  %writing.03 = phi i32 [ %writing.1, %11 ], [ 0, %.preheader ]
  %7 = sext i8 %6 to i32
  switch i32 %7, label %10 [
    i32 114, label %11
    i32 119, label %8
    i32 115, label %9
  ]

; <label>:8                                       ; preds = %.lr.ph
  br label %11

; <label>:9                                       ; preds = %.lr.ph
  br label %11

; <label>:10                                      ; preds = %.lr.ph
  %isdigittmp = add nsw i32 %7, -48
  %isdigit = icmp ult i32 %isdigittmp, 10
  %isdigittmp.blockSize100k.0 = select i1 %isdigit, i32 %isdigittmp, i32 %blockSize100k.04
  br label %11

; <label>:11                                      ; preds = %10, %.lr.ph, %9, %8
  %writing.1 = phi i32 [ %writing.03, %9 ], [ 1, %8 ], [ 0, %.lr.ph ], [ %writing.03, %10 ]
  %blockSize100k.1 = phi i32 [ %blockSize100k.04, %9 ], [ %blockSize100k.04, %8 ], [ %blockSize100k.04, %.lr.ph ], [ %isdigittmp.blockSize100k.0, %10 ]
  %smallMode.1 = phi i32 [ 1, %9 ], [ %smallMode.06, %8 ], [ %smallMode.06, %.lr.ph ], [ %smallMode.06, %10 ]
  %12 = getelementptr inbounds i8* %.015, i64 1
  %13 = load i8* %12, align 1, !tbaa !42
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %11, %.preheader
  %smallMode.0.lcssa = phi i32 [ 0, %.preheader ], [ %smallMode.1, %11 ]
  %blockSize100k.0.lcssa = phi i32 [ 9, %.preheader ], [ %blockSize100k.1, %11 ]
  %writing.0.lcssa = phi i32 [ 0, %.preheader ], [ %writing.1, %11 ]
  %15 = icmp ne i32 %writing.0.lcssa, 0
  %16 = select i1 %15, i8* getelementptr inbounds ([2 x i8]* @.str6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str7, i64 0, i64 0)
  %17 = call i8* @__strcat_chk(i8* %2, i8* %16, i64 10) #10
  %18 = call i8* @__strcat_chk(i8* %2, i8* getelementptr inbounds ([2 x i8]* @.str8, i64 0, i64 0), i64 10) #10
  %19 = icmp eq i32 %open_mode, 0
  br i1 %19, label %20, label %30

; <label>:20                                      ; preds = %._crit_edge
  %21 = icmp eq i8* %path, null
  br i1 %21, label %24, label %22

; <label>:22                                      ; preds = %20
  %strcmpload = load i8* %path, align 1
  %23 = icmp eq i8 %strcmpload, 0
  br i1 %23, label %24, label %28

; <label>:24                                      ; preds = %22, %20
  %25 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !2
  %26 = load %struct.__sFILE** @__stdinp, align 8, !tbaa !2
  %27 = select i1 %15, %struct.__sFILE* %25, %struct.__sFILE* %26
  br label %32

; <label>:28                                      ; preds = %22
  %29 = call %struct.__sFILE* @"\01_fopen"(i8* %path, i8* %2) #10
  br label %32

; <label>:30                                      ; preds = %._crit_edge
  %31 = call %struct.__sFILE* @"\01_fdopen"(i32 %fd, i8* %2) #10
  br label %32

; <label>:32                                      ; preds = %24, %28, %30
  %fp.0 = phi %struct.__sFILE* [ %27, %24 ], [ %29, %28 ], [ %31, %30 ]
  %33 = icmp eq %struct.__sFILE* %fp.0, null
  br i1 %33, label %50, label %34

; <label>:34                                      ; preds = %32
  br i1 %15, label %35, label %39

; <label>:35                                      ; preds = %34
  %36 = icmp slt i32 %blockSize100k.0.lcssa, 1
  %.blockSize100k.0 = select i1 %36, i32 1, i32 %blockSize100k.0.lcssa
  %37 = icmp sgt i32 %.blockSize100k.0, 9
  %blockSize100k.3 = select i1 %37, i32 9, i32 %.blockSize100k.0
  %38 = call i8* @BZ2_bzWriteOpen(i32* %bzerr, %struct.__sFILE* %fp.0, i32 %blockSize100k.3, i32 0, i32 30) #12
  br label %41

; <label>:39                                      ; preds = %34
  %40 = call i8* @BZ2_bzReadOpen(i32* %bzerr, %struct.__sFILE* %fp.0, i32 0, i32 %smallMode.0.lcssa, i8* %1, i32 0) #12
  br label %41

; <label>:41                                      ; preds = %39, %35
  %bzfp.0 = phi i8* [ %38, %35 ], [ %40, %39 ]
  %42 = icmp eq i8* %bzfp.0, null
  br i1 %42, label %43, label %50

; <label>:43                                      ; preds = %41
  %44 = load %struct.__sFILE** @__stdinp, align 8, !tbaa !2
  %45 = icmp eq %struct.__sFILE* %fp.0, %44
  %46 = load %struct.__sFILE** @__stdoutp, align 8
  %47 = icmp eq %struct.__sFILE* %fp.0, %46
  %or.cond = or i1 %45, %47
  br i1 %or.cond, label %50, label %48

; <label>:48                                      ; preds = %43
  %49 = call i32 @fclose(%struct.__sFILE* %fp.0) #10
  br label %50

; <label>:50                                      ; preds = %41, %48, %43, %32, %0
  %.0 = phi i8* [ null, %0 ], [ null, %32 ], [ null, %43 ], [ null, %48 ], [ %bzfp.0, %41 ]
  call void @llvm.lifetime.end(i64 5000, i8* %1) #8
  ret i8* %.0
}
