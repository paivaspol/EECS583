define i32 @BZ2_bzDecompressInit(%struct.bz_stream* %strm, i32 %verbosity, i32 %small) #4 {
entry:
  %cmp = icmp eq %struct.bz_stream* %strm, null
  %0 = icmp ugt i32 %small, 1
  %or.cond = or i1 %cmp, %0
  %1 = icmp ugt i32 %verbosity, 4
  %or.cond56 = or i1 %or.cond, %1
  br i1 %or.cond56, label %return, label %if.end10

if.end10:                                         ; preds = %entry
  %bzalloc = getelementptr inbounds %struct.bz_stream* %strm, i64 0, i32 9
  %2 = load i8* (i8*, i32, i32)** %bzalloc, align 8, !tbaa !0
  %cmp11 = icmp eq i8* (i8*, i32, i32)* %2, null
  br i1 %cmp11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.end10
  store i8* (i8*, i32, i32)* @default_bzalloc, i8* (i8*, i32, i32)** %bzalloc, align 8, !tbaa !0
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end10
  %3 = phi i8* (i8*, i32, i32)* [ @default_bzalloc, %if.then12 ], [ %2, %if.end10 ]
  %bzfree = getelementptr inbounds %struct.bz_stream* %strm, i64 0, i32 10
  %4 = load void (i8*, i8*)** %bzfree, align 8, !tbaa !0
  %cmp15 = icmp eq void (i8*, i8*)* %4, null
  br i1 %cmp15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.end14
  store void (i8*, i8*)* @default_bzfree, void (i8*, i8*)** %bzfree, align 8, !tbaa !0
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.end14
  %opaque = getelementptr inbounds %struct.bz_stream* %strm, i64 0, i32 11
  %5 = load i8** %opaque, align 8, !tbaa !0
  %call20 = tail call i8* %3(i8* %5, i32 64144, i32 1) #11
  %cmp21 = icmp eq i8* %call20, null
  br i1 %cmp21, label %return, label %if.end23

if.end23:                                         ; preds = %if.end18
  %strm24 = bitcast i8* %call20 to %struct.bz_stream**
  store %struct.bz_stream* %strm, %struct.bz_stream** %strm24, align 8, !tbaa !0
  %state = getelementptr inbounds %struct.bz_stream* %strm, i64 0, i32 8
  store i8* %call20, i8** %state, align 8, !tbaa !0
  %state25 = getelementptr inbounds i8* %call20, i64 8
  %6 = bitcast i8* %state25 to i32*
  store i32 10, i32* %6, align 4, !tbaa !3
  %bsLive = getelementptr inbounds i8* %call20, i64 36
  %7 = bitcast i8* %bsLive to i32*
  store i32 0, i32* %7, align 4, !tbaa !3
  %bsBuff = getelementptr inbounds i8* %call20, i64 32
  %8 = bitcast i8* %bsBuff to i32*
  store i32 0, i32* %8, align 4, !tbaa !3
  %calculatedCombinedCRC = getelementptr inbounds i8* %call20, i64 3188
  %9 = bitcast i8* %calculatedCombinedCRC to i32*
  store i32 0, i32* %9, align 4, !tbaa !3
  %total_in_lo32 = getelementptr inbounds %struct.bz_stream* %strm, i64 0, i32 2
  store i32 0, i32* %total_in_lo32, align 4, !tbaa !3
  %total_in_hi32 = getelementptr inbounds %struct.bz_stream* %strm, i64 0, i32 3
  store i32 0, i32* %total_in_hi32, align 4, !tbaa !3
  %total_out_lo32 = getelementptr inbounds %struct.bz_stream* %strm, i64 0, i32 6
  store i32 0, i32* %total_out_lo32, align 4, !tbaa !3
  %total_out_hi32 = getelementptr inbounds %struct.bz_stream* %strm, i64 0, i32 7
  store i32 0, i32* %total_out_hi32, align 4, !tbaa !3
  %conv = trunc i32 %small to i8
  %10 = getelementptr inbounds i8* %call20, i64 44
  store i8 %conv, i8* %10, align 1, !tbaa !1
  %tt = getelementptr inbounds i8* %call20, i64 3152
  %currBlockNo = getelementptr inbounds i8* %call20, i64 48
  %11 = bitcast i8* %currBlockNo to i32*
  store i32 0, i32* %11, align 4, !tbaa !3
  %verbosity26 = getelementptr inbounds i8* %call20, i64 52
  %12 = bitcast i8* %verbosity26 to i32*
  call void @llvm.memset.p0i8.i64(i8* %tt, i8 0, i64 24, i32 8, i1 false)
  store i32 %verbosity, i32* %12, align 4, !tbaa !3
  br label %return

return:                                           ; preds = %if.end18, %entry, %if.end23
  %retval.0 = phi i32 [ 0, %if.end23 ], [ -2, %entry ], [ -3, %if.end18 ]
  ret i32 %retval.0
}
