define void @BZ2_bzclose(i8* %b) #4 {
entry:
  %bzerr = alloca i32, align 4
  %cmp = icmp eq i8* %b, null
  br i1 %cmp, label %if.end5, label %if.end

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds i8* %b, i64 5008
  %1 = load i8* %0, align 1, !tbaa !1
  %tobool = icmp eq i8 %1, 0
  br i1 %tobool, label %if.else, label %if.then1

if.then1:                                         ; preds = %if.end
  call void @BZ2_bzWriteClose64(i32* %bzerr, i8* %b, i32 0, i32* null, i32* null, i32* null, i32* null) #11
  %2 = load i32* %bzerr, align 4, !tbaa !3
  %cmp2 = icmp eq i32 %2, 0
  br i1 %cmp2, label %if.end5, label %if.then3

if.then3:                                         ; preds = %if.then1
  call void @BZ2_bzWriteClose64(i32* null, i8* %b, i32 1, i32* null, i32* null, i32* null, i32* null) #11
  br label %if.end5

if.else:                                          ; preds = %if.end
  call void @BZ2_bzReadClose(i32* %bzerr, i8* %b) #13
  br label %if.end5

if.end5:                                          ; preds = %entry, %if.then1, %if.then3, %if.else
  ret void
}
