define i32 @BZ2_bzBuffToBuffDecompress(i8* %dest, i32* %destLen, i8* %source, i32 %sourceLen, i32 %small, i32 %verbosity) #4 {
entry:
  %strm = alloca %struct.bz_stream, align 8
  %0 = bitcast %struct.bz_stream* %strm to i8*
  call void @llvm.lifetime.start(i64 80, i8* %0) #7
  %cmp = icmp eq i8* %dest, null
  %cmp1 = icmp eq i32* %destLen, null
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp eq i8* %source, null
  %or.cond42 = or i1 %or.cond, %cmp3
  %1 = icmp ugt i32 %small, 1
  %or.cond43 = or i1 %or.cond42, %1
  %2 = icmp ugt i32 %verbosity, 4
  %or.cond44 = or i1 %or.cond43, %2
  br i1 %or.cond44, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %bzalloc = getelementptr inbounds %struct.bz_stream* %strm, i64 0, i32 9
  %3 = bitcast i8* (i8*, i32, i32)** %bzalloc to i8*
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 24, i32 8, i1 false)
  %call = call i32 @BZ2_bzDecompressInit(%struct.bz_stream* %strm, i32 %verbosity, i32 %small) #13
  %cmp11 = icmp eq i32 %call, 0
  br i1 %cmp11, label %if.end13, label %cleanup

if.end13:                                         ; preds = %if.end
  %next_in = getelementptr inbounds %struct.bz_stream* %strm, i64 0, i32 0
  store i8* %source, i8** %next_in, align 8, !tbaa !0
  %next_out = getelementptr inbounds %struct.bz_stream* %strm, i64 0, i32 4
  store i8* %dest, i8** %next_out, align 8, !tbaa !0
  %avail_in = getelementptr inbounds %struct.bz_stream* %strm, i64 0, i32 1
  store i32 %sourceLen, i32* %avail_in, align 8, !tbaa !3
  %4 = load i32* %destLen, align 4, !tbaa !3
  %avail_out = getelementptr inbounds %struct.bz_stream* %strm, i64 0, i32 5
  store i32 %4, i32* %avail_out, align 8, !tbaa !3
  %call14 = call i32 @BZ2_bzDecompress(%struct.bz_stream* %strm) #13
  switch i32 %call14, label %errhandler [
    i32 0, label %output_overflow_or_eof
    i32 4, label %if.end20
  ]

if.end20:                                         ; preds = %if.end13
  %5 = load i32* %avail_out, align 8, !tbaa !3
  %6 = load i32* %destLen, align 4, !tbaa !3
  %sub = sub i32 %6, %5
  store i32 %sub, i32* %destLen, align 4, !tbaa !3
  %call22 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm) #13
  br label %cleanup

output_overflow_or_eof:                           ; preds = %if.end13
  %7 = load i32* %avail_out, align 8, !tbaa !3
  %cmp24 = icmp eq i32 %7, 0
  %call26 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm) #13
  %. = select i1 %cmp24, i32 -8, i32 -7
  br label %cleanup

errhandler:                                       ; preds = %if.end13
  %call28 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm) #13
  br label %cleanup

cleanup:                                          ; preds = %output_overflow_or_eof, %if.end, %entry, %errhandler, %if.end20
  %retval.0 = phi i32 [ %call14, %errhandler ], [ 0, %if.end20 ], [ -2, %entry ], [ %call, %if.end ], [ %., %output_overflow_or_eof ]
  call void @llvm.lifetime.end(i64 80, i8* %0) #7
  ret i32 %retval.0
}
