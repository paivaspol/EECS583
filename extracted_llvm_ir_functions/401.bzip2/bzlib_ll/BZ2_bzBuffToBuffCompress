define i32 @BZ2_bzBuffToBuffCompress(i8* %dest, i32* %destLen, i8* %source, i32 %sourceLen, i32 %blockSize100k, i32 %verbosity, i32 %workFactor) #4 {
  %strm = alloca %struct.bz_stream, align 8
  %1 = bitcast %struct.bz_stream* %strm to i8*
  call void @llvm.lifetime.start(i64 80, i8* %1) #8
  %2 = icmp eq i8* %dest, null
  %3 = icmp eq i32* %destLen, null
  %or.cond = or i1 %2, %3
  %4 = icmp eq i8* %source, null
  %or.cond3 = or i1 %or.cond, %4
  %blockSize100k.off = add i32 %blockSize100k, -1
  %5 = icmp ugt i32 %blockSize100k.off, 8
  %6 = or i1 %or.cond3, %5
  %7 = icmp ugt i32 %verbosity, 4
  %8 = or i1 %7, %6
  %9 = icmp ugt i32 %workFactor, 250
  %10 = or i1 %9, %8
  br i1 %10, label %33, label %11

; <label>:11                                      ; preds = %0
  %12 = icmp eq i32 %workFactor, 0
  %.workFactor = select i1 %12, i32 30, i32 %workFactor
  %13 = getelementptr inbounds %struct.bz_stream* %strm, i64 0, i32 9
  %14 = bitcast i8* (i8*, i32, i32)** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* %14, i8 0, i64 24, i32 8, i1 false)
  %15 = call i32 @BZ2_bzCompressInit(%struct.bz_stream* %strm, i32 %blockSize100k, i32 %verbosity, i32 %.workFactor) #12
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %33

; <label>:17                                      ; preds = %11
  %18 = getelementptr inbounds %struct.bz_stream* %strm, i64 0, i32 0
  store i8* %source, i8** %18, align 8, !tbaa !44
  %19 = getelementptr inbounds %struct.bz_stream* %strm, i64 0, i32 4
  store i8* %dest, i8** %19, align 8, !tbaa !43
  %20 = getelementptr inbounds %struct.bz_stream* %strm, i64 0, i32 1
  store i32 %sourceLen, i32* %20, align 8, !tbaa !40
  %21 = load i32* %destLen, align 4, !tbaa !45
  %22 = getelementptr inbounds %struct.bz_stream* %strm, i64 0, i32 5
  store i32 %21, i32* %22, align 8, !tbaa !41
  %23 = call i32 @BZ2_bzCompress(%struct.bz_stream* %strm, i32 2) #12
  switch i32 %23, label %31 [
    i32 3, label %29
    i32 4, label %24
  ]

; <label>:24                                      ; preds = %17
  %25 = load i32* %22, align 8, !tbaa !41
  %26 = load i32* %destLen, align 4, !tbaa !45
  %27 = sub i32 %26, %25
  store i32 %27, i32* %destLen, align 4, !tbaa !45
  %28 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %strm) #12
  br label %33

; <label>:29                                      ; preds = %17
  %30 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %strm) #12
  br label %33

; <label>:31                                      ; preds = %17
  %32 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %strm) #12
  br label %33

; <label>:33                                      ; preds = %11, %0, %31, %29, %24
  %.016 = phi i32 [ -8, %29 ], [ %23, %31 ], [ 0, %24 ], [ -2, %0 ], [ %15, %11 ]
  call void @llvm.lifetime.end(i64 80, i8* %1) #8
  ret i32 %.016
}
