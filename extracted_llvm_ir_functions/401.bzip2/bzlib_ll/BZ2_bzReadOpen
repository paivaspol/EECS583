define i8* @BZ2_bzReadOpen(i32* %bzerror, i32 %f, i32 %verbosity, i32 %small, i8* %unused, i32 %nUnused) #4 {
entry:
  %cmp = icmp ne i32* %bzerror, null
  br i1 %cmp, label %if.then, label %if.end3

if.then:                                          ; preds = %entry
  store i32 0, i32* %bzerror, align 4, !tbaa !3
  br label %if.end3

if.end3:                                          ; preds = %entry, %if.then
  %cmp4 = icmp eq i32 %f, 0
  %0 = icmp ugt i32 %small, 1
  %or.cond = or i1 %cmp4, %0
  %1 = icmp ugt i32 %verbosity, 4
  %or.cond121 = or i1 %or.cond, %1
  br i1 %or.cond121, label %if.then21, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %if.end3
  %cmp12 = icmp ne i8* %unused, null
  %cmp14 = icmp eq i32 %nUnused, 0
  %or.cond122 = or i1 %cmp12, %cmp14
  %or.cond122.not = xor i1 %or.cond122, true
  %2 = icmp ugt i32 %nUnused, 5000
  %or.cond123 = and i1 %cmp12, %2
  %or.cond127 = or i1 %or.cond123, %or.cond122.not
  br i1 %or.cond127, label %if.then21, label %if.end29

if.then21:                                        ; preds = %lor.lhs.false11, %if.end3
  br i1 %cmp, label %if.then23, label %return

if.then23:                                        ; preds = %if.then21
  store i32 -2, i32* %bzerror, align 4, !tbaa !3
  br label %return

if.end29:                                         ; preds = %lor.lhs.false11
  %call = tail call noalias i8* @malloc(i64 5104) #11
  %cmp30 = icmp eq i8* %call, null
  br i1 %cmp30, label %if.then31, label %if.end39

if.then31:                                        ; preds = %if.end29
  br i1 %cmp, label %if.end34, label %return

if.end34:                                         ; preds = %if.then31
  store i32 -3, i32* %bzerror, align 4, !tbaa !3
  br label %return

if.end39:                                         ; preds = %if.end29
  br i1 %cmp, label %if.end42, label %if.end46

if.end42:                                         ; preds = %if.end39
  store i32 0, i32* %bzerror, align 4, !tbaa !3
  br label %if.end46

if.end46:                                         ; preds = %if.end39, %if.end42
  %lastErr45 = getelementptr inbounds i8* %call, i64 5096
  %3 = bitcast i8* %lastErr45 to i32*
  store i32 0, i32* %3, align 4, !tbaa !3
  %4 = getelementptr inbounds i8* %call, i64 5100
  store i8 0, i8* %4, align 1, !tbaa !1
  %handle = bitcast i8* %call to i32*
  store i32 %f, i32* %handle, align 4, !tbaa !3
  %bufN = getelementptr inbounds i8* %call, i64 5004
  %5 = bitcast i8* %bufN to i32*
  store i32 0, i32* %5, align 4, !tbaa !3
  %6 = getelementptr inbounds i8* %call, i64 5008
  store i8 0, i8* %6, align 1, !tbaa !1
  %strm = getelementptr inbounds i8* %call, i64 5016
  %7 = bitcast i8* %strm to %struct.bz_stream*
  %bzalloc = getelementptr inbounds i8* %call, i64 5072
  %cmp49128 = icmp sgt i32 %nUnused, 0
  call void @llvm.memset.p0i8.i64(i8* %bzalloc, i8 0, i64 24, i32 8, i1 false)
  br i1 %cmp49128, label %while.body, label %while.end

while.body:                                       ; preds = %if.end46, %while.body
  %8 = phi i32 [ %inc, %while.body ], [ 0, %if.end46 ]
  %nUnused.addr.0130 = phi i32 [ %dec, %while.body ], [ %nUnused, %if.end46 ]
  %unused.addr.0129 = phi i8* [ %add.ptr, %while.body ], [ %unused, %if.end46 ]
  %9 = load i8* %unused.addr.0129, align 1, !tbaa !1
  %idxprom = sext i32 %8 to i64
  %buf.sum = add i64 %idxprom, 4
  %arrayidx = getelementptr inbounds i8* %call, i64 %buf.sum
  store i8 %9, i8* %arrayidx, align 1, !tbaa !1
  %10 = load i32* %5, align 4, !tbaa !3
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %5, align 4, !tbaa !3
  %add.ptr = getelementptr inbounds i8* %unused.addr.0129, i64 1
  %dec = add nsw i32 %nUnused.addr.0130, -1
  %cmp49 = icmp sgt i32 %dec, 0
  br i1 %cmp49, label %while.body, label %while.end

while.end:                                        ; preds = %while.body, %if.end46
  %call53 = tail call i32 @BZ2_bzDecompressInit(%struct.bz_stream* %7, i32 %verbosity, i32 %small) #13
  %cmp54 = icmp eq i32 %call53, 0
  br i1 %cmp54, label %if.end63, label %if.then55

if.then55:                                        ; preds = %while.end
  br i1 %cmp, label %if.then57, label %if.then60

if.then57:                                        ; preds = %if.then55
  store i32 %call53, i32* %bzerror, align 4, !tbaa !3
  br label %if.then60

if.then60:                                        ; preds = %if.then55, %if.then57
  tail call void @free(i8* %call) #11
  br label %return

if.end63:                                         ; preds = %while.end
  %11 = load i32* %5, align 4, !tbaa !3
  %avail_in = getelementptr inbounds i8* %call, i64 5024
  %12 = bitcast i8* %avail_in to i32*
  store i32 %11, i32* %12, align 4, !tbaa !3
  %buf66 = getelementptr inbounds i8* %call, i64 4
  %next_in = bitcast i8* %strm to i8**
  store i8* %buf66, i8** %next_in, align 8, !tbaa !0
  store i8 1, i8* %4, align 1, !tbaa !1
  br label %return

return:                                           ; preds = %if.then31, %if.end34, %if.then23, %if.then21, %if.end63, %if.then60
  %retval.0 = phi i8* [ null, %if.then60 ], [ %call, %if.end63 ], [ null, %if.then21 ], [ null, %if.then23 ], [ null, %if.end34 ], [ null, %if.then31 ]
  ret i8* %retval.0
}
