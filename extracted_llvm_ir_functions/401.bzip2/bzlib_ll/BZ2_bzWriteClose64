define void @BZ2_bzWriteClose64(i32* %bzerror, i8* %b, i32 %abandon, i32* %nbytes_in_lo32, i32* %nbytes_in_hi32, i32* %nbytes_out_lo32, i32* %nbytes_out_hi32) #4 {
entry:
  %cmp = icmp eq i8* %b, null
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq i32* %bzerror, null
  br i1 %cmp1, label %return, label %if.then2

if.then2:                                         ; preds = %if.then
  store i32 0, i32* %bzerror, align 4, !tbaa !3
  br label %return

if.end6:                                          ; preds = %entry
  %0 = getelementptr inbounds i8* %b, i64 5008
  %1 = load i8* %0, align 1, !tbaa !1
  %tobool = icmp eq i8 %1, 0
  br i1 %tobool, label %if.then7, label %if.end15

if.then7:                                         ; preds = %if.end6
  %cmp8 = icmp eq i32* %bzerror, null
  br i1 %cmp8, label %if.then12, label %if.then9

if.then9:                                         ; preds = %if.then7
  store i32 -1, i32* %bzerror, align 4, !tbaa !3
  br label %if.then12

if.then12:                                        ; preds = %if.then9, %if.then7
  %lastErr13 = getelementptr inbounds i8* %b, i64 5096
  %2 = bitcast i8* %lastErr13 to i32*
  store i32 -1, i32* %2, align 4, !tbaa !3
  br label %return

if.end15:                                         ; preds = %if.end6
  %cmp16 = icmp ne i32* %nbytes_in_lo32, null
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end15
  store i32 0, i32* %nbytes_in_lo32, align 4, !tbaa !3
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %if.end15
  %cmp19 = icmp ne i32* %nbytes_in_hi32, null
  br i1 %cmp19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end18
  store i32 0, i32* %nbytes_in_hi32, align 4, !tbaa !3
  br label %if.end21

if.end21:                                         ; preds = %if.then20, %if.end18
  %cmp22 = icmp ne i32* %nbytes_out_lo32, null
  br i1 %cmp22, label %if.then23, label %if.end24

if.then23:                                        ; preds = %if.end21
  store i32 0, i32* %nbytes_out_lo32, align 4, !tbaa !3
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.end21
  %cmp25 = icmp ne i32* %nbytes_out_hi32, null
  br i1 %cmp25, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end24
  store i32 0, i32* %nbytes_out_hi32, align 4, !tbaa !3
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %if.end24
  %tobool28 = icmp eq i32 %abandon, 0
  br i1 %tobool28, label %land.lhs.true, label %if.end69

land.lhs.true:                                    ; preds = %if.end27
  %lastErr29 = getelementptr inbounds i8* %b, i64 5096
  %3 = bitcast i8* %lastErr29 to i32*
  %4 = load i32* %3, align 4, !tbaa !3
  %cmp30 = icmp eq i32 %4, 0
  br i1 %cmp30, label %while.body.preheader, label %if.end69

while.body.preheader:                             ; preds = %land.lhs.true
  %strm = getelementptr inbounds i8* %b, i64 5016
  %5 = bitcast i8* %strm to %struct.bz_stream*
  %avail_out = getelementptr inbounds i8* %b, i64 5048
  %6 = bitcast i8* %avail_out to i32*
  %buf = getelementptr inbounds i8* %b, i64 4
  %next_out = getelementptr inbounds i8* %b, i64 5040
  %7 = bitcast i8* %next_out to i8**
  %handle = bitcast i8* %b to i32*
  br label %while.body

while.body:                                       ; preds = %while.body.preheader, %if.end65
  store i32 5000, i32* %6, align 4, !tbaa !3
  store i8* %buf, i8** %7, align 8, !tbaa !0
  %call = tail call i32 @BZ2_bzCompress(%struct.bz_stream* %5, i32 2) #13
  %call.off = add i32 %call, -3
  %8 = icmp ugt i32 %call.off, 1
  br i1 %8, label %if.then37, label %if.end45

if.then37:                                        ; preds = %while.body
  %cmp38 = icmp eq i32* %bzerror, null
  br i1 %cmp38, label %if.then42, label %if.then39

if.then39:                                        ; preds = %if.then37
  store i32 %call, i32* %bzerror, align 4, !tbaa !3
  br label %if.then42

if.then42:                                        ; preds = %if.then39, %if.then37
  store i32 %call, i32* %3, align 4, !tbaa !3
  br label %return

if.end45:                                         ; preds = %while.body
  %9 = load i32* %6, align 4, !tbaa !3
  %cmp48 = icmp ult i32 %9, 5000
  br i1 %cmp48, label %if.then49, label %if.end65

if.then49:                                        ; preds = %if.end45
  %sub = sub i32 5000, %9
  %10 = load i32* %handle, align 4, !tbaa !3
  %call54 = tail call i32 @spec_fwrite(i8* %buf, i32 1, i32 %sub, i32 %10) #11
  %cmp55 = icmp eq i32 %sub, %call54
  br i1 %cmp55, label %if.end65, label %if.then56

if.then56:                                        ; preds = %if.then49
  %cmp57 = icmp eq i32* %bzerror, null
  br i1 %cmp57, label %if.then61, label %if.then58

if.then58:                                        ; preds = %if.then56
  store i32 -6, i32* %bzerror, align 4, !tbaa !3
  br label %if.then61

if.then61:                                        ; preds = %if.then58, %if.then56
  store i32 -6, i32* %3, align 4, !tbaa !3
  br label %return

if.end65:                                         ; preds = %if.then49, %if.end45
  %cmp66 = icmp eq i32 %call, 4
  br i1 %cmp66, label %if.end69, label %while.body

if.end69:                                         ; preds = %if.end65, %if.end27, %land.lhs.true
  br i1 %cmp16, label %if.then74, label %if.end76

if.then74:                                        ; preds = %if.end69
  %total_in_lo32 = getelementptr inbounds i8* %b, i64 5028
  %11 = bitcast i8* %total_in_lo32 to i32*
  %12 = load i32* %11, align 4, !tbaa !3
  store i32 %12, i32* %nbytes_in_lo32, align 4, !tbaa !3
  br label %if.end76

if.end76:                                         ; preds = %if.then74, %if.end69
  br i1 %cmp19, label %if.then78, label %if.end80

if.then78:                                        ; preds = %if.end76
  %total_in_hi32 = getelementptr inbounds i8* %b, i64 5032
  %13 = bitcast i8* %total_in_hi32 to i32*
  %14 = load i32* %13, align 4, !tbaa !3
  store i32 %14, i32* %nbytes_in_hi32, align 4, !tbaa !3
  br label %if.end80

if.end80:                                         ; preds = %if.then78, %if.end76
  br i1 %cmp22, label %if.then82, label %if.end84

if.then82:                                        ; preds = %if.end80
  %total_out_lo32 = getelementptr inbounds i8* %b, i64 5052
  %15 = bitcast i8* %total_out_lo32 to i32*
  %16 = load i32* %15, align 4, !tbaa !3
  store i32 %16, i32* %nbytes_out_lo32, align 4, !tbaa !3
  br label %if.end84

if.end84:                                         ; preds = %if.then82, %if.end80
  br i1 %cmp25, label %if.then86, label %if.end88

if.then86:                                        ; preds = %if.end84
  %total_out_hi32 = getelementptr inbounds i8* %b, i64 5056
  %17 = bitcast i8* %total_out_hi32 to i32*
  %18 = load i32* %17, align 4, !tbaa !3
  store i32 %18, i32* %nbytes_out_hi32, align 4, !tbaa !3
  br label %if.end88

if.end88:                                         ; preds = %if.then86, %if.end84
  %cmp89 = icmp eq i32* %bzerror, null
  br i1 %cmp89, label %if.end95, label %if.then90

if.then90:                                        ; preds = %if.end88
  store i32 0, i32* %bzerror, align 4, !tbaa !3
  br label %if.end95

if.end95:                                         ; preds = %if.end88, %if.then90
  %lastErr94 = getelementptr inbounds i8* %b, i64 5096
  %19 = bitcast i8* %lastErr94 to i32*
  store i32 0, i32* %19, align 4, !tbaa !3
  %strm96 = getelementptr inbounds i8* %b, i64 5016
  %20 = bitcast i8* %strm96 to %struct.bz_stream*
  %call97 = tail call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %20) #13
  tail call void @free(i8* %b) #11
  br label %return

return:                                           ; preds = %if.then2, %if.then, %if.then61, %if.then42, %if.then12, %if.end95
  ret void
}
