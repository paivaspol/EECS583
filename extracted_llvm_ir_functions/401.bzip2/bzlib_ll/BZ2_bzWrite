define void @BZ2_bzWrite(i32* %bzerror, i8* %b, i8* %buf, i32 %len) #4 {
entry:
  %cmp = icmp ne i32* %bzerror, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %bzerror, align 4, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp ne i8* %b, null
  br i1 %cmp1, label %if.end3, label %if.then8

if.end3:                                          ; preds = %if.end
  %lastErr = getelementptr inbounds i8* %b, i64 5096
  %0 = bitcast i8* %lastErr to i32*
  store i32 0, i32* %0, align 4, !tbaa !3
  %cmp5 = icmp eq i8* %buf, null
  %cmp7 = icmp slt i32 %len, 0
  %or.cond128 = or i1 %cmp5, %cmp7
  br i1 %or.cond128, label %if.then8, label %if.end16

if.then8:                                         ; preds = %if.end, %if.end3
  br i1 %cmp, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.then8
  store i32 -2, i32* %bzerror, align 4, !tbaa !3
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.then8
  br i1 %cmp1, label %if.then13, label %return

if.then13:                                        ; preds = %if.end11
  %lastErr14 = getelementptr inbounds i8* %b, i64 5096
  %1 = bitcast i8* %lastErr14 to i32*
  store i32 -2, i32* %1, align 4, !tbaa !3
  br label %return

if.end16:                                         ; preds = %if.end3
  %2 = getelementptr inbounds i8* %b, i64 5008
  %3 = load i8* %2, align 1, !tbaa !1
  %tobool = icmp eq i8 %3, 0
  br i1 %tobool, label %if.then17, label %if.end25

if.then17:                                        ; preds = %if.end16
  br i1 %cmp, label %if.then19, label %if.then22

if.then19:                                        ; preds = %if.then17
  store i32 -1, i32* %bzerror, align 4, !tbaa !3
  br label %if.then22

if.then22:                                        ; preds = %if.then17, %if.then19
  store i32 -1, i32* %0, align 4, !tbaa !3
  br label %return

if.end25:                                         ; preds = %if.end16
  %cmp26 = icmp eq i32 %len, 0
  br i1 %cmp26, label %if.then27, label %if.end35

if.then27:                                        ; preds = %if.end25
  br i1 %cmp, label %if.then29, label %if.then32

if.then29:                                        ; preds = %if.then27
  store i32 0, i32* %bzerror, align 4, !tbaa !3
  br label %if.then32

if.then32:                                        ; preds = %if.then27, %if.then29
  store i32 0, i32* %0, align 4, !tbaa !3
  br label %return

if.end35:                                         ; preds = %if.end25
  %strm = getelementptr inbounds i8* %b, i64 5016
  %4 = bitcast i8* %strm to %struct.bz_stream*
  %avail_in = getelementptr inbounds i8* %b, i64 5024
  %5 = bitcast i8* %avail_in to i32*
  store i32 %len, i32* %5, align 4, !tbaa !3
  %next_in = bitcast i8* %strm to i8**
  store i8* %buf, i8** %next_in, align 8, !tbaa !0
  %avail_out = getelementptr inbounds i8* %b, i64 5048
  %6 = bitcast i8* %avail_out to i32*
  %buf38 = getelementptr inbounds i8* %b, i64 4
  %next_out = getelementptr inbounds i8* %b, i64 5040
  %7 = bitcast i8* %next_out to i8**
  %handle = bitcast i8* %b to i32*
  br label %while.body

while.body:                                       ; preds = %if.end70, %if.end35
  store i32 5000, i32* %6, align 4, !tbaa !3
  store i8* %buf38, i8** %7, align 8, !tbaa !0
  %call = tail call i32 @BZ2_bzCompress(%struct.bz_stream* %4, i32 0) #13
  %cmp41 = icmp eq i32 %call, 1
  br i1 %cmp41, label %if.end50, label %if.then42

if.then42:                                        ; preds = %while.body
  br i1 %cmp, label %if.then44, label %if.then47

if.then44:                                        ; preds = %if.then42
  store i32 %call, i32* %bzerror, align 4, !tbaa !3
  br label %if.then47

if.then47:                                        ; preds = %if.then42, %if.then44
  store i32 %call, i32* %0, align 4, !tbaa !3
  br label %return

if.end50:                                         ; preds = %while.body
  %8 = load i32* %6, align 4, !tbaa !3
  %cmp53 = icmp ult i32 %8, 5000
  br i1 %cmp53, label %if.then54, label %if.end70

if.then54:                                        ; preds = %if.end50
  %sub = sub i32 5000, %8
  %9 = load i32* %handle, align 4, !tbaa !3
  %call59 = tail call i32 @spec_fwrite(i8* %buf38, i32 1, i32 %sub, i32 %9) #11
  %cmp60 = icmp eq i32 %sub, %call59
  br i1 %cmp60, label %if.end70, label %if.then61

if.then61:                                        ; preds = %if.then54
  br i1 %cmp, label %if.then63, label %if.then66

if.then63:                                        ; preds = %if.then61
  store i32 -6, i32* %bzerror, align 4, !tbaa !3
  br label %if.then66

if.then66:                                        ; preds = %if.then61, %if.then63
  store i32 -6, i32* %0, align 4, !tbaa !3
  br label %return

if.end70:                                         ; preds = %if.then54, %if.end50
  %10 = load i32* %5, align 4, !tbaa !3
  %cmp73 = icmp eq i32 %10, 0
  br i1 %cmp73, label %if.then74, label %while.body

if.then74:                                        ; preds = %if.end70
  br i1 %cmp, label %if.then76, label %if.then79

if.then76:                                        ; preds = %if.then74
  store i32 0, i32* %bzerror, align 4, !tbaa !3
  br label %if.then79

if.then79:                                        ; preds = %if.then74, %if.then76
  store i32 0, i32* %0, align 4, !tbaa !3
  br label %return

return:                                           ; preds = %if.then79, %if.then66, %if.then47, %if.then32, %if.then22, %if.end11, %if.then13
  ret void
}
