define void @BZ2_blockSort(%struct.EState* nocapture %s) #0 {
  %stackLo.i.i = alloca [100 x i32], align 16
  %stackHi.i.i = alloca [100 x i32], align 16
  %stackD.i.i = alloca [100 x i32], align 16
  %runningOrder.i = alloca [256 x i32], align 16
  %bigDone.i = alloca [256 x i8], align 16
  %copyStart.i = alloca [256 x i32], align 16
  %copyEnd.i = alloca [256 x i32], align 16
  %budget = alloca i32, align 4
  %1 = getelementptr inbounds %struct.EState* %s, i64 0, i32 8
  %2 = load i32** %1, align 8, !tbaa !2
  %3 = getelementptr inbounds %struct.EState* %s, i64 0, i32 9
  %4 = load i8** %3, align 8, !tbaa !8
  %5 = getelementptr inbounds %struct.EState* %s, i64 0, i32 6
  %6 = load i32** %5, align 8, !tbaa !9
  %7 = getelementptr inbounds %struct.EState* %s, i64 0, i32 17
  %8 = load i32* %7, align 4, !tbaa !10
  %9 = getelementptr inbounds %struct.EState* %s, i64 0, i32 28
  %10 = load i32* %9, align 4, !tbaa !11
  %11 = getelementptr inbounds %struct.EState* %s, i64 0, i32 12
  %12 = load i32* %11, align 4, !tbaa !12
  %13 = icmp slt i32 %8, 10000
  br i1 %13, label %14, label %19

; <label>:14                                      ; preds = %0
  %15 = getelementptr inbounds %struct.EState* %s, i64 0, i32 4
  %16 = load i32** %15, align 8, !tbaa !13
  %17 = getelementptr inbounds %struct.EState* %s, i64 0, i32 5
  %18 = load i32** %17, align 8, !tbaa !14
  tail call fastcc void @fallbackSort(i32* %16, i32* %18, i32* %6, i32 %8, i32 %10) #5
  br label %714

; <label>:19                                      ; preds = %0
  %20 = add nsw i32 %8, 34
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = add nsw i32 %8, 35
  %. = select i1 %22, i32 %20, i32 %23
  %24 = sext i32 %. to i64
  %25 = getelementptr inbounds i8* %4, i64 %24
  %26 = bitcast i8* %25 to i16*
  %27 = icmp slt i32 %12, 1
  %wfact.0 = select i1 %27, i32 1, i32 %12
  %28 = icmp sgt i32 %wfact.0, 100
  %wfact.0.op = add i32 %wfact.0, -1
  %wfact.0.op.op = sdiv i32 %wfact.0.op, 3
  %29 = select i1 %28, i32 33, i32 %wfact.0.op.op
  %30 = mul nsw i32 %29, %8
  store i32 %30, i32* %budget, align 4, !tbaa !15
  %bigDone177.i = getelementptr inbounds [256 x i8]* %bigDone.i, i64 0, i64 0
  %31 = bitcast [256 x i32]* %runningOrder.i to i8*
  call void @llvm.lifetime.start(i64 1024, i8* %31) #3
  call void @llvm.lifetime.start(i64 256, i8* %bigDone177.i) #3
  %32 = bitcast [256 x i32]* %copyStart.i to i8*
  call void @llvm.lifetime.start(i64 1024, i8* %32) #3
  %33 = bitcast [256 x i32]* %copyEnd.i to i8*
  call void @llvm.lifetime.start(i64 1024, i8* %33) #3
  %34 = icmp sgt i32 %10, 3
  br i1 %34, label %35, label %.preheader13.i

; <label>:35                                      ; preds = %19
  %36 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !16
  %37 = tail call i64 @fwrite(i8* getelementptr inbounds ([34 x i8]* @.str6, i64 0, i64 0), i64 33, i64 1, %struct.__sFILE* %36) #3
  br label %.preheader13.i

.preheader13.i:                                   ; preds = %35, %19, %.preheader13.i
  %indvars.iv193.i = phi i64 [ %indvars.iv.next194.i, %.preheader13.i ], [ 65536, %19 ], [ 65536, %35 ]
  %38 = getelementptr inbounds i32* %6, i64 %indvars.iv193.i
  store i32 0, i32* %38, align 4, !tbaa !15
  %indvars.iv.next194.i = add nsw i64 %indvars.iv193.i, -1
  %39 = icmp sgt i64 %indvars.iv193.i, 0
  br i1 %39, label %.preheader13.i, label %40

; <label>:40                                      ; preds = %.preheader13.i
  %41 = load i8* %4, align 1, !tbaa !17
  %42 = zext i8 %41 to i32
  %43 = shl nuw nsw i32 %42, 8
  %44 = add i32 %8, -1
  %45 = icmp sgt i32 %44, 2
  br i1 %45, label %.lr.ph102.i, label %.preheader12.i

.lr.ph102.i:                                      ; preds = %40
  %46 = sext i32 %44 to i64
  %47 = add i32 %8, -4
  br label %53

..preheader12_crit_edge.i:                        ; preds = %53
  %48 = and i32 %47, -4
  %49 = add i32 %8, -5
  %50 = sub i32 %49, %48
  br label %.preheader12.i

.preheader12.i:                                   ; preds = %..preheader12_crit_edge.i, %40
  %i.1.lcssa.i = phi i32 [ %50, %..preheader12_crit_edge.i ], [ %44, %40 ]
  %j.0.lcssa.i = phi i32 [ %96, %..preheader12_crit_edge.i ], [ %43, %40 ]
  %51 = icmp sgt i32 %i.1.lcssa.i, -1
  br i1 %51, label %.lr.ph98.i, label %.preheader11.i

.lr.ph98.i:                                       ; preds = %.preheader12.i
  %52 = sext i32 %i.1.lcssa.i to i64
  br label %104

; <label>:53                                      ; preds = %53, %.lr.ph102.i
  %indvars.iv191.i = phi i64 [ %46, %.lr.ph102.i ], [ %indvars.iv.next192.i, %53 ]
  %i.1100.i = phi i32 [ %44, %.lr.ph102.i ], [ %101, %53 ]
  %j.099.i = phi i32 [ %43, %.lr.ph102.i ], [ %96, %53 ]
  %54 = getelementptr inbounds i16* %26, i64 %indvars.iv191.i
  store i16 0, i16* %54, align 2, !tbaa !18
  %55 = ashr i32 %j.099.i, 8
  %56 = getelementptr inbounds i8* %4, i64 %indvars.iv191.i
  %57 = load i8* %56, align 1, !tbaa !17
  %58 = zext i8 %57 to i32
  %59 = shl nuw nsw i32 %58, 8
  %60 = or i32 %59, %55
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i32* %6, i64 %61
  %63 = load i32* %62, align 4, !tbaa !15
  %64 = add i32 %63, 1
  store i32 %64, i32* %62, align 4, !tbaa !15
  %65 = add nsw i64 %indvars.iv191.i, -1
  %66 = getelementptr inbounds i16* %26, i64 %65
  store i16 0, i16* %66, align 2, !tbaa !18
  %67 = ashr i32 %60, 8
  %68 = getelementptr inbounds i8* %4, i64 %65
  %69 = load i8* %68, align 1, !tbaa !17
  %70 = zext i8 %69 to i32
  %71 = shl nuw nsw i32 %70, 8
  %72 = or i32 %67, %71
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i32* %6, i64 %73
  %75 = load i32* %74, align 4, !tbaa !15
  %76 = add i32 %75, 1
  store i32 %76, i32* %74, align 4, !tbaa !15
  %77 = add nsw i64 %indvars.iv191.i, -2
  %78 = getelementptr inbounds i16* %26, i64 %77
  store i16 0, i16* %78, align 2, !tbaa !18
  %79 = ashr i32 %72, 8
  %80 = getelementptr inbounds i8* %4, i64 %77
  %81 = load i8* %80, align 1, !tbaa !17
  %82 = zext i8 %81 to i32
  %83 = shl nuw nsw i32 %82, 8
  %84 = or i32 %79, %83
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i32* %6, i64 %85
  %87 = load i32* %86, align 4, !tbaa !15
  %88 = add i32 %87, 1
  store i32 %88, i32* %86, align 4, !tbaa !15
  %89 = add nsw i64 %indvars.iv191.i, -3
  %90 = getelementptr inbounds i16* %26, i64 %89
  store i16 0, i16* %90, align 2, !tbaa !18
  %91 = ashr i32 %84, 8
  %92 = getelementptr inbounds i8* %4, i64 %89
  %93 = load i8* %92, align 1, !tbaa !17
  %94 = zext i8 %93 to i32
  %95 = shl nuw nsw i32 %94, 8
  %96 = or i32 %91, %95
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i32* %6, i64 %97
  %99 = load i32* %98, align 4, !tbaa !15
  %100 = add i32 %99, 1
  store i32 %100, i32* %98, align 4, !tbaa !15
  %101 = add nsw i32 %i.1100.i, -4
  %102 = icmp sgt i32 %101, 2
  %indvars.iv.next192.i = add nsw i64 %indvars.iv191.i, -4
  br i1 %102, label %53, label %..preheader12_crit_edge.i

.preheader11.i:                                   ; preds = %104, %.preheader12.i
  %103 = sext i32 %8 to i64
  br label %117

; <label>:104                                     ; preds = %104, %.lr.ph98.i
  %indvars.iv189.i = phi i64 [ %52, %.lr.ph98.i ], [ %indvars.iv.next190.i, %104 ]
  %j.196.i = phi i32 [ %j.0.lcssa.i, %.lr.ph98.i ], [ %111, %104 ]
  %105 = getelementptr inbounds i16* %26, i64 %indvars.iv189.i
  store i16 0, i16* %105, align 2, !tbaa !18
  %106 = ashr i32 %j.196.i, 8
  %107 = getelementptr inbounds i8* %4, i64 %indvars.iv189.i
  %108 = load i8* %107, align 1, !tbaa !17
  %109 = zext i8 %108 to i32
  %110 = shl nuw nsw i32 %109, 8
  %111 = or i32 %110, %106
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i32* %6, i64 %112
  %114 = load i32* %113, align 4, !tbaa !15
  %115 = add i32 %114, 1
  store i32 %115, i32* %113, align 4, !tbaa !15
  %indvars.iv.next190.i = add nsw i64 %indvars.iv189.i, -1
  %116 = icmp sgt i64 %indvars.iv189.i, 0
  br i1 %116, label %104, label %.preheader11.i

; <label>:117                                     ; preds = %117, %.preheader11.i
  %indvars.iv185.i = phi i64 [ 0, %.preheader11.i ], [ %indvars.iv.next186.i, %117 ]
  %118 = getelementptr inbounds i8* %4, i64 %indvars.iv185.i
  %119 = load i8* %118, align 1, !tbaa !17
  %120 = add nsw i64 %indvars.iv185.i, %103
  %121 = getelementptr inbounds i8* %4, i64 %120
  store i8 %119, i8* %121, align 1, !tbaa !17
  %122 = getelementptr inbounds i16* %26, i64 %120
  store i16 0, i16* %122, align 2, !tbaa !18
  %indvars.iv.next186.i = add nuw nsw i64 %indvars.iv185.i, 1
  %exitcond187.i = icmp eq i64 %indvars.iv.next186.i, 34
  br i1 %exitcond187.i, label %123, label %117

; <label>:123                                     ; preds = %117
  br i1 %34, label %124, label %.preheader10.i

; <label>:124                                     ; preds = %123
  %125 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !16
  %126 = tail call i64 @fwrite(i8* getelementptr inbounds ([28 x i8]* @.str2, i64 0, i64 0), i64 27, i64 1, %struct.__sFILE* %125) #3
  br label %.preheader10.i

.preheader10.i:                                   ; preds = %124, %123
  %.pre.i = load i32* %6, align 4, !tbaa !15
  br label %127

; <label>:127                                     ; preds = %127, %.preheader10.i
  %128 = phi i32 [ %.pre.i, %.preheader10.i ], [ %131, %127 ]
  %indvars.iv182.i = phi i64 [ 1, %.preheader10.i ], [ %indvars.iv.next183.i, %127 ]
  %129 = getelementptr inbounds i32* %6, i64 %indvars.iv182.i
  %130 = load i32* %129, align 4, !tbaa !15
  %131 = add i32 %130, %128
  store i32 %131, i32* %129, align 4, !tbaa !15
  %indvars.iv.next183.i = add nuw nsw i64 %indvars.iv182.i, 1
  %exitcond184.i = icmp eq i64 %indvars.iv.next183.i, 65537
  br i1 %exitcond184.i, label %132, label %127

; <label>:132                                     ; preds = %127
  %133 = load i8* %4, align 1, !tbaa !17
  %134 = zext i8 %133 to i16
  %135 = shl nuw i16 %134, 8
  br i1 %45, label %.lr.ph91.i, label %.preheader9.i

.lr.ph91.i:                                       ; preds = %132
  %136 = sext i32 %44 to i64
  %137 = add i32 %8, -4
  br label %143

..preheader9_crit_edge.i:                         ; preds = %143
  %138 = and i32 %137, -4
  %139 = add i32 %8, -5
  %140 = sub i32 %139, %138
  br label %.preheader9.i

.preheader9.i:                                    ; preds = %..preheader9_crit_edge.i, %132
  %i.5.lcssa.i = phi i32 [ %140, %..preheader9_crit_edge.i ], [ %44, %132 ]
  %s.0.lcssa.i = phi i16 [ %188, %..preheader9_crit_edge.i ], [ %135, %132 ]
  %141 = icmp sgt i32 %i.5.lcssa.i, -1
  br i1 %141, label %.lr.ph87.i, label %.preheader8.i

.lr.ph87.i:                                       ; preds = %.preheader9.i
  %142 = sext i32 %i.5.lcssa.i to i64
  br label %202

; <label>:143                                     ; preds = %143, %.lr.ph91.i
  %indvars.iv180.i = phi i64 [ %136, %.lr.ph91.i ], [ %indvars.iv.next181.i, %143 ]
  %i.589.i = phi i32 [ %44, %.lr.ph91.i ], [ %196, %143 ]
  %s.088.i = phi i16 [ %135, %.lr.ph91.i ], [ %188, %143 ]
  %144 = lshr i16 %s.088.i, 8
  %145 = getelementptr inbounds i8* %4, i64 %indvars.iv180.i
  %146 = load i8* %145, align 1, !tbaa !17
  %147 = zext i8 %146 to i16
  %148 = shl nuw i16 %147, 8
  %149 = or i16 %148, %144
  %150 = zext i16 %149 to i64
  %151 = getelementptr inbounds i32* %6, i64 %150
  %152 = load i32* %151, align 4, !tbaa !15
  %153 = add i32 %152, -1
  store i32 %153, i32* %151, align 4, !tbaa !15
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds i32* %2, i64 %154
  %156 = trunc i64 %indvars.iv180.i to i32
  store i32 %156, i32* %155, align 4, !tbaa !15
  %157 = add nsw i64 %indvars.iv180.i, -1
  %158 = getelementptr inbounds i8* %4, i64 %157
  %159 = load i8* %158, align 1, !tbaa !17
  %160 = zext i8 %159 to i16
  %161 = shl nuw i16 %160, 8
  %162 = or i16 %161, %147
  %163 = zext i16 %162 to i64
  %164 = getelementptr inbounds i32* %6, i64 %163
  %165 = load i32* %164, align 4, !tbaa !15
  %166 = add i32 %165, -1
  store i32 %166, i32* %164, align 4, !tbaa !15
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i32* %2, i64 %167
  %169 = trunc i64 %157 to i32
  store i32 %169, i32* %168, align 4, !tbaa !15
  %170 = add nsw i64 %indvars.iv180.i, -2
  %171 = getelementptr inbounds i8* %4, i64 %170
  %172 = load i8* %171, align 1, !tbaa !17
  %173 = zext i8 %172 to i16
  %174 = shl nuw i16 %173, 8
  %175 = or i16 %174, %160
  %176 = zext i16 %175 to i64
  %177 = getelementptr inbounds i32* %6, i64 %176
  %178 = load i32* %177, align 4, !tbaa !15
  %179 = add i32 %178, -1
  store i32 %179, i32* %177, align 4, !tbaa !15
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i32* %2, i64 %180
  %182 = trunc i64 %170 to i32
  store i32 %182, i32* %181, align 4, !tbaa !15
  %183 = add nsw i64 %indvars.iv180.i, -3
  %184 = getelementptr inbounds i8* %4, i64 %183
  %185 = load i8* %184, align 1, !tbaa !17
  %186 = zext i8 %185 to i16
  %187 = shl nuw i16 %186, 8
  %188 = or i16 %187, %173
  %189 = zext i16 %188 to i64
  %190 = getelementptr inbounds i32* %6, i64 %189
  %191 = load i32* %190, align 4, !tbaa !15
  %192 = add i32 %191, -1
  store i32 %192, i32* %190, align 4, !tbaa !15
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds i32* %2, i64 %193
  %195 = trunc i64 %183 to i32
  store i32 %195, i32* %194, align 4, !tbaa !15
  %196 = add nsw i32 %i.589.i, -4
  %197 = icmp sgt i32 %196, 2
  %indvars.iv.next181.i = add nsw i64 %indvars.iv180.i, -4
  br i1 %197, label %143, label %..preheader9_crit_edge.i

.preheader8.i:                                    ; preds = %202, %.preheader9.i
  call void @llvm.memset.p0i8.i64(i8* %bigDone177.i, i8 0, i64 256, i32 16, i1 false) #3
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %.preheader8.i
  %index = phi i64 [ 0, %.preheader8.i ], [ %index.next, %vector.body ]
  %198 = getelementptr inbounds [256 x i32]* %runningOrder.i, i64 0, i64 %index
  %199 = trunc i64 %index to i32
  %broadcast.splatinsert177 = insertelement <4 x i32> undef, i32 %199, i32 0
  %broadcast.splat178 = shufflevector <4 x i32> %broadcast.splatinsert177, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction179 = add <4 x i32> %broadcast.splat178, <i32 0, i32 1, i32 2, i32 3>
  %200 = bitcast i32* %198 to <4 x i32>*
  store <4 x i32> %induction179, <4 x i32>* %200, align 16, !tbaa !15
  %index.next = add i64 %index, 4
  %201 = icmp eq i64 %index.next, 256
  br i1 %201, label %.preheader7.i, label %vector.body, !llvm.loop !20

; <label>:202                                     ; preds = %202, %.lr.ph87.i
  %indvars.iv178.i = phi i64 [ %142, %.lr.ph87.i ], [ %indvars.iv.next179.i, %202 ]
  %s.185.i = phi i16 [ %s.0.lcssa.i, %.lr.ph87.i ], [ %208, %202 ]
  %203 = lshr i16 %s.185.i, 8
  %204 = getelementptr inbounds i8* %4, i64 %indvars.iv178.i
  %205 = load i8* %204, align 1, !tbaa !17
  %206 = zext i8 %205 to i16
  %207 = shl nuw i16 %206, 8
  %208 = or i16 %207, %203
  %209 = zext i16 %208 to i64
  %210 = getelementptr inbounds i32* %6, i64 %209
  %211 = load i32* %210, align 4, !tbaa !15
  %212 = add i32 %211, -1
  store i32 %212, i32* %210, align 4, !tbaa !15
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds i32* %2, i64 %213
  %215 = trunc i64 %indvars.iv178.i to i32
  store i32 %215, i32* %214, align 4, !tbaa !15
  %indvars.iv.next179.i = add nsw i64 %indvars.iv178.i, -1
  %216 = icmp sgt i64 %indvars.iv178.i, 0
  br i1 %216, label %202, label %.preheader8.i

.preheader7.i:                                    ; preds = %vector.body, %._crit_edge83.i
  %h.1.i = phi i32 [ %217, %._crit_edge83.i ], [ 364, %vector.body ]
  %217 = sdiv i32 %h.1.i, 3
  %218 = icmp slt i32 %h.1.i, 768
  br i1 %218, label %.lr.ph82.i, label %._crit_edge83.i

.lr.ph82.i:                                       ; preds = %.preheader7.i
  %219 = add nsw i32 %217, -1
  %220 = sext i32 %217 to i64
  br label %221

; <label>:221                                     ; preds = %253, %.lr.ph82.i
  %indvars.iv172.i = phi i64 [ %220, %.lr.ph82.i ], [ %indvars.iv.next173.i, %253 ]
  %222 = getelementptr inbounds [256 x i32]* %runningOrder.i, i64 0, i64 %indvars.iv172.i
  %223 = load i32* %222, align 4, !tbaa !15
  %224 = shl i32 %223, 8
  %225 = add i32 %224, 256
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds i32* %6, i64 %226
  %228 = load i32* %227, align 4, !tbaa !15
  %229 = sext i32 %224 to i64
  %230 = getelementptr inbounds i32* %6, i64 %229
  %231 = load i32* %230, align 4, !tbaa !15
  %232 = sub i32 %228, %231
  %233 = trunc i64 %indvars.iv172.i to i32
  br label %234

; <label>:234                                     ; preds = %249, %221
  %j.2.i = phi i32 [ %233, %221 ], [ %235, %249 ]
  %235 = sub nsw i32 %j.2.i, %217
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [256 x i32]* %runningOrder.i, i64 0, i64 %236
  %238 = load i32* %237, align 4, !tbaa !15
  %239 = shl i32 %238, 8
  %240 = add i32 %239, 256
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds i32* %6, i64 %241
  %243 = load i32* %242, align 4, !tbaa !15
  %244 = sext i32 %239 to i64
  %245 = getelementptr inbounds i32* %6, i64 %244
  %246 = load i32* %245, align 4, !tbaa !15
  %247 = sub i32 %243, %246
  %248 = icmp ugt i32 %247, %232
  br i1 %248, label %249, label %253

; <label>:249                                     ; preds = %234
  %250 = sext i32 %j.2.i to i64
  %251 = getelementptr inbounds [256 x i32]* %runningOrder.i, i64 0, i64 %250
  store i32 %238, i32* %251, align 4, !tbaa !15
  %252 = icmp sgt i32 %235, %219
  br i1 %252, label %234, label %253

; <label>:253                                     ; preds = %249, %234
  %j.3.i = phi i32 [ %235, %249 ], [ %j.2.i, %234 ]
  %254 = sext i32 %j.3.i to i64
  %255 = getelementptr inbounds [256 x i32]* %runningOrder.i, i64 0, i64 %254
  store i32 %223, i32* %255, align 4, !tbaa !15
  %indvars.iv.next173.i = add nsw i64 %indvars.iv172.i, 1
  %256 = icmp slt i64 %indvars.iv.next173.i, 256
  br i1 %256, label %221, label %._crit_edge83.i

._crit_edge83.i:                                  ; preds = %253, %.preheader7.i
  %h.1.off.i = add nsw i32 %h.1.i, -3
  %257 = icmp ugt i32 %h.1.off.i, 2
  br i1 %257, label %.preheader7.i, label %.preheader5.i

.preheader5.i:                                    ; preds = %._crit_edge83.i
  %258 = bitcast [100 x i32]* %stackLo.i.i to i8*
  %259 = bitcast [100 x i32]* %stackHi.i.i to i8*
  %260 = bitcast [100 x i32]* %stackD.i.i to i8*
  %261 = getelementptr inbounds [100 x i32]* %stackLo.i.i, i64 0, i64 0
  %262 = getelementptr inbounds [100 x i32]* %stackHi.i.i, i64 0, i64 0
  %263 = getelementptr inbounds [100 x i32]* %stackD.i.i, i64 0, i64 0
  br label %264

; <label>:264                                     ; preds = %683, %.preheader5.i
  %.pr.i.i119 = phi i32 [ %30, %.preheader5.i ], [ %.pr.i.i121, %683 ]
  %indvars.iv170.i = phi i64 [ 0, %.preheader5.i ], [ %indvars.iv.next171.i, %683 ]
  %numQSorted.078.i = phi i32 [ 0, %.preheader5.i ], [ %numQSorted.3.i, %683 ]
  %265 = getelementptr inbounds [256 x i32]* %runningOrder.i, i64 0, i64 %indvars.iv170.i
  %266 = load i32* %265, align 4, !tbaa !15
  %267 = shl i32 %266, 8
  %268 = sext i32 %267 to i64
  br label %269

; <label>:269                                     ; preds = %553, %264
  %.pr.i.i120 = phi i32 [ %.pr.i.i119, %264 ], [ %.pr.i.i121, %553 ]
  %indvars.iv.i = phi i64 [ 0, %264 ], [ %indvars.iv.next.i, %553 ]
  %numQSorted.163.i = phi i32 [ %numQSorted.078.i, %264 ], [ %numQSorted.3.i, %553 ]
  %270 = trunc i64 %indvars.iv.i to i32
  %271 = icmp eq i32 %270, %266
  br i1 %271, label %553, label %272

; <label>:272                                     ; preds = %269
  %273 = add nsw i64 %indvars.iv.i, %268
  %274 = getelementptr inbounds i32* %6, i64 %273
  %275 = load i32* %274, align 4, !tbaa !15
  %276 = and i32 %275, 2097152
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %550

; <label>:278                                     ; preds = %272
  %279 = and i32 %275, -2097153
  %280 = add nsw i64 %273, 1
  %281 = getelementptr inbounds i32* %6, i64 %280
  %282 = load i32* %281, align 4, !tbaa !15
  %283 = and i32 %282, -2097153
  %284 = add i32 %283, -1
  %285 = icmp sgt i32 %284, %279
  br i1 %285, label %286, label %550

; <label>:286                                     ; preds = %278
  br i1 %34, label %287, label %292

; <label>:287                                     ; preds = %286
  %288 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !16
  %289 = sub i32 1, %279
  %290 = add i32 %289, %284
  %291 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %288, i8* getelementptr inbounds ([48 x i8]* @.str7, i64 0, i64 0), i32 %266, i32 %270, i32 %numQSorted.163.i, i32 %290) #6
  br label %292

; <label>:292                                     ; preds = %287, %286
  call void @llvm.lifetime.start(i64 400, i8* %258) #3
  call void @llvm.lifetime.start(i64 400, i8* %259) #3
  call void @llvm.lifetime.start(i64 400, i8* %260) #3
  store i32 %279, i32* %261, align 16, !tbaa !15
  store i32 %284, i32* %262, align 16, !tbaa !15
  store i32 2, i32* %263, align 16, !tbaa !15
  br label %.lr.ph72.i.i

.lr.ph72.i.i:                                     ; preds = %.outer14.backedge.i.i, %292
  %.pr.i.i117 = phi i32 [ %.pr.i.i120, %292 ], [ %.pre195.pre.i, %.outer14.backedge.i.i ]
  %sp.0.ph84.i.i = phi i32 [ 1, %292 ], [ %sp.0.ph.be.i.i, %.outer14.backedge.i.i ]
  %293 = icmp slt i32 %sp.0.ph84.i.i, 100
  %294 = add nsw i32 %sp.0.ph84.i.i, -1
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds [100 x i32]* %stackLo.i.i, i64 0, i64 %295
  %297 = getelementptr inbounds [100 x i32]* %stackHi.i.i, i64 0, i64 %295
  %298 = getelementptr inbounds [100 x i32]* %stackD.i.i, i64 0, i64 %295
  br label %299

; <label>:299                                     ; preds = %485, %.lr.ph72.i.i
  br i1 %293, label %301, label %300

; <label>:300                                     ; preds = %299
  tail call void @BZ2_bz__AssertH__fail(i32 1001) #6
  br label %301

; <label>:301                                     ; preds = %300, %299
  %302 = load i32* %296, align 4, !tbaa !15
  %303 = load i32* %297, align 4, !tbaa !15
  %304 = load i32* %298, align 4, !tbaa !15
  %305 = sub nsw i32 %303, %302
  %306 = icmp slt i32 %305, 20
  %307 = icmp sgt i32 %304, 14
  %or.cond.i.i = or i1 %306, %307
  br i1 %or.cond.i.i, label %308, label %398

; <label>:308                                     ; preds = %301
  %309 = add nsw i32 %305, 1
  %310 = icmp slt i32 %309, 2
  br i1 %310, label %mainSimpleSort.exit.i.i, label %.preheader3.i.i.i

.preheader3.i.i.i:                                ; preds = %308, %.preheader3.i.i.i
  %indvars.iv8.i.i.i = phi i64 [ %indvars.iv.next9.i.i.i, %.preheader3.i.i.i ], [ 0, %308 ]
  %311 = getelementptr inbounds [14 x i32]* @incs, i64 0, i64 %indvars.iv8.i.i.i
  %312 = load i32* %311, align 4, !tbaa !15
  %313 = icmp slt i32 %312, %309
  %indvars.iv.next9.i.i.i = add nuw i64 %indvars.iv8.i.i.i, 1
  br i1 %313, label %.preheader3.i.i.i, label %.preheader.i.i.i

.preheader.i.i.i:                                 ; preds = %.preheader3.i.i.i
  %314 = trunc i64 %indvars.iv8.i.i.i to i32
  %315 = icmp sgt i32 %314, 0
  br i1 %315, label %.lr.ph.i.i.i, label %mainSimpleSort.exit.i.i

.lr.ph.i.i.i:                                     ; preds = %.preheader.i.i.i
  %316 = sext i32 %303 to i64
  %sext.i.i.i = shl i64 %indvars.iv8.i.i.i, 32
  %317 = ashr exact i64 %sext.i.i.i, 32
  br label %319

.loopexit.i.i.i:                                  ; preds = %368, %345, %325
  %318 = icmp sgt i64 %indvars.iv6.i.i.i, 1
  br i1 %318, label %319, label %mainSimpleSort.exit.i.i.loopexit

; <label>:319                                     ; preds = %.loopexit.i.i.i, %.lr.ph.i.i.i
  %indvars.iv6.i.i.i = phi i64 [ %317, %.lr.ph.i.i.i ], [ %indvars.iv.next7.i.i.i, %.loopexit.i.i.i ]
  %indvars.iv.next7.i.i.i = add nsw i64 %indvars.iv6.i.i.i, -1
  %320 = getelementptr inbounds [14 x i32]* @incs, i64 0, i64 %indvars.iv.next7.i.i.i
  %321 = load i32* %320, align 4, !tbaa !15
  %322 = add i32 %321, %302
  %323 = add nsw i32 %322, -1
  %324 = sext i32 %322 to i64
  br label %325

; <label>:325                                     ; preds = %391, %319
  %indvars.iv.i.i.i = phi i64 [ %indvars.iv.next.i.i.i, %391 ], [ %324, %319 ]
  %326 = icmp sgt i64 %indvars.iv.i.i.i, %316
  br i1 %326, label %.loopexit.i.i.i, label %327

; <label>:327                                     ; preds = %325
  %328 = getelementptr inbounds i32* %2, i64 %indvars.iv.i.i.i
  %329 = load i32* %328, align 4, !tbaa !15
  %330 = add i32 %329, %304
  %331 = trunc i64 %indvars.iv.i.i.i to i32
  br label %332

; <label>:332                                     ; preds = %340, %327
  %j.0.i.i.i = phi i32 [ %331, %327 ], [ %333, %340 ]
  %333 = sub nsw i32 %j.0.i.i.i, %321
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds i32* %2, i64 %334
  %336 = load i32* %335, align 4, !tbaa !15
  %337 = add i32 %336, %304
  %338 = call fastcc zeroext i8 @mainGtU(i32 %337, i32 %330, i8* %4, i16* %26, i32 %8, i32* %budget) #6
  %339 = icmp eq i8 %338, 0
  br i1 %339, label %345, label %340

; <label>:340                                     ; preds = %332
  %341 = load i32* %335, align 4, !tbaa !15
  %342 = sext i32 %j.0.i.i.i to i64
  %343 = getelementptr inbounds i32* %2, i64 %342
  store i32 %341, i32* %343, align 4, !tbaa !15
  %344 = icmp sgt i32 %333, %323
  br i1 %344, label %332, label %345

; <label>:345                                     ; preds = %340, %332
  %j.1.i.i.i = phi i32 [ %333, %340 ], [ %j.0.i.i.i, %332 ]
  %346 = sext i32 %j.1.i.i.i to i64
  %347 = getelementptr inbounds i32* %2, i64 %346
  store i32 %329, i32* %347, align 4, !tbaa !15
  %348 = add nsw i64 %indvars.iv.i.i.i, 1
  %349 = icmp slt i64 %indvars.iv.i.i.i, %316
  br i1 %349, label %350, label %.loopexit.i.i.i

; <label>:350                                     ; preds = %345
  %351 = getelementptr inbounds i32* %2, i64 %348
  %352 = load i32* %351, align 4, !tbaa !15
  %353 = add i32 %352, %304
  %354 = trunc i64 %348 to i32
  br label %355

; <label>:355                                     ; preds = %363, %350
  %j.2.i.i.i = phi i32 [ %354, %350 ], [ %356, %363 ]
  %356 = sub nsw i32 %j.2.i.i.i, %321
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds i32* %2, i64 %357
  %359 = load i32* %358, align 4, !tbaa !15
  %360 = add i32 %359, %304
  %361 = call fastcc zeroext i8 @mainGtU(i32 %360, i32 %353, i8* %4, i16* %26, i32 %8, i32* %budget) #6
  %362 = icmp eq i8 %361, 0
  br i1 %362, label %368, label %363

; <label>:363                                     ; preds = %355
  %364 = load i32* %358, align 4, !tbaa !15
  %365 = sext i32 %j.2.i.i.i to i64
  %366 = getelementptr inbounds i32* %2, i64 %365
  store i32 %364, i32* %366, align 4, !tbaa !15
  %367 = icmp sgt i32 %356, %323
  br i1 %367, label %355, label %368

; <label>:368                                     ; preds = %363, %355
  %j.3.i.i.i = phi i32 [ %356, %363 ], [ %j.2.i.i.i, %355 ]
  %369 = sext i32 %j.3.i.i.i to i64
  %370 = getelementptr inbounds i32* %2, i64 %369
  store i32 %352, i32* %370, align 4, !tbaa !15
  %371 = add nsw i64 %indvars.iv.i.i.i, 2
  %372 = icmp sgt i64 %371, %316
  br i1 %372, label %.loopexit.i.i.i, label %373

; <label>:373                                     ; preds = %368
  %374 = getelementptr inbounds i32* %2, i64 %371
  %375 = load i32* %374, align 4, !tbaa !15
  %376 = add i32 %375, %304
  %377 = trunc i64 %371 to i32
  br label %378

; <label>:378                                     ; preds = %386, %373
  %j.4.i.i.i = phi i32 [ %377, %373 ], [ %379, %386 ]
  %379 = sub nsw i32 %j.4.i.i.i, %321
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds i32* %2, i64 %380
  %382 = load i32* %381, align 4, !tbaa !15
  %383 = add i32 %382, %304
  %384 = call fastcc zeroext i8 @mainGtU(i32 %383, i32 %376, i8* %4, i16* %26, i32 %8, i32* %budget) #6
  %385 = icmp eq i8 %384, 0
  br i1 %385, label %391, label %386

; <label>:386                                     ; preds = %378
  %387 = load i32* %381, align 4, !tbaa !15
  %388 = sext i32 %j.4.i.i.i to i64
  %389 = getelementptr inbounds i32* %2, i64 %388
  store i32 %387, i32* %389, align 4, !tbaa !15
  %390 = icmp sgt i32 %379, %323
  br i1 %390, label %378, label %391

; <label>:391                                     ; preds = %386, %378
  %j.5.i.i.i = phi i32 [ %379, %386 ], [ %j.4.i.i.i, %378 ]
  %392 = sext i32 %j.5.i.i.i to i64
  %393 = getelementptr inbounds i32* %2, i64 %392
  store i32 %375, i32* %393, align 4, !tbaa !15
  %394 = load i32* %budget, align 4, !tbaa !15
  %395 = icmp slt i32 %394, 0
  %indvars.iv.next.i.i.i = add nsw i64 %indvars.iv.i.i.i, 3
  br i1 %395, label %mainQSort3.exit.i, label %325

mainSimpleSort.exit.i.i.loopexit:                 ; preds = %.loopexit.i.i.i
  %.pr.i.i.pre = load i32* %budget, align 4, !tbaa !15
  br label %mainSimpleSort.exit.i.i

mainSimpleSort.exit.i.i:                          ; preds = %mainSimpleSort.exit.i.i.loopexit, %.preheader.i.i.i, %308
  %.pr.i.i = phi i32 [ %.pr.i.i.pre, %mainSimpleSort.exit.i.i.loopexit ], [ %.pr.i.i117, %.preheader.i.i.i ], [ %.pr.i.i117, %308 ]
  %396 = icmp slt i32 %.pr.i.i, 0
  br i1 %396, label %mainQSort3.exit.i, label %.outer14.backedge.i.i

.outer14.backedge.i.i:                            ; preds = %._crit_edge83.i.i, %mainSimpleSort.exit.i.i
  %.pre195.pre.i = phi i32 [ %.pr.i.i117, %._crit_edge83.i.i ], [ %.pr.i.i, %mainSimpleSort.exit.i.i ]
  %sp.0.ph.be.i.i = phi i32 [ %545, %._crit_edge83.i.i ], [ %294, %mainSimpleSort.exit.i.i ]
  %397 = icmp sgt i32 %sp.0.ph.be.i.i, 0
  br i1 %397, label %.lr.ph72.i.i, label %mainQSort3.exit.i

; <label>:398                                     ; preds = %301
  %399 = sext i32 %302 to i64
  %400 = getelementptr inbounds i32* %2, i64 %399
  %401 = load i32* %400, align 4, !tbaa !15
  %402 = add i32 %401, %304
  %403 = zext i32 %402 to i64
  %404 = getelementptr inbounds i8* %4, i64 %403
  %405 = load i8* %404, align 1, !tbaa !17
  %406 = sext i32 %303 to i64
  %407 = getelementptr inbounds i32* %2, i64 %406
  %408 = load i32* %407, align 4, !tbaa !15
  %409 = add i32 %408, %304
  %410 = zext i32 %409 to i64
  %411 = getelementptr inbounds i8* %4, i64 %410
  %412 = load i8* %411, align 1, !tbaa !17
  %413 = add nsw i32 %303, %302
  %414 = ashr i32 %413, 1
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds i32* %2, i64 %415
  %417 = load i32* %416, align 4, !tbaa !15
  %418 = add i32 %417, %304
  %419 = zext i32 %418 to i64
  %420 = getelementptr inbounds i8* %4, i64 %419
  %421 = load i8* %420, align 1, !tbaa !17
  %422 = icmp ugt i8 %405, %412
  %a.b.i.i.i = select i1 %422, i8 %405, i8 %412
  %b.a.i.i.i = select i1 %422, i8 %412, i8 %405
  %423 = icmp ugt i8 %a.b.i.i.i, %421
  br i1 %423, label %424, label %mmed3.exit.i.i

; <label>:424                                     ; preds = %398
  %425 = icmp ugt i8 %b.a.i.i.i, %421
  %b.a.c.i.i.i = select i1 %425, i8 %b.a.i.i.i, i8 %421
  br label %mmed3.exit.i.i

mmed3.exit.i.i:                                   ; preds = %424, %398
  %426 = phi i8 [ %b.a.c.i.i.i, %424 ], [ %a.b.i.i.i, %398 ]
  br label %.outer8.i.i

.outer8.i.i:                                      ; preds = %475, %mmed3.exit.i.i
  %gtHi.0.ph.i.i = phi i32 [ %476, %475 ], [ %303, %mmed3.exit.i.i ]
  %ltLo.0.ph.i.i = phi i32 [ %ltLo.0.ph10.lcssa.i.i, %475 ], [ %302, %mmed3.exit.i.i ]
  %unHi.0.ph.i.i = phi i32 [ %482, %475 ], [ %303, %mmed3.exit.i.i ]
  %unLo.0.ph.i.i = phi i32 [ %481, %475 ], [ %302, %mmed3.exit.i.i ]
  %427 = icmp sgt i32 %unLo.0.ph.i.i, %unHi.0.ph.i.i
  br i1 %427, label %.preheader.i.i, label %.lr.ph.lr.ph.i.i

.lr.ph.lr.ph.i.i:                                 ; preds = %.outer8.i.i
  %428 = sext i32 %unHi.0.ph.i.i to i64
  %429 = sext i32 %ltLo.0.ph.i.i to i64
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.outer9.i.i, %.lr.ph.lr.ph.i.i
  %indvars.iv138.i.i = phi i64 [ %indvars.iv.next139.i.i, %.outer9.i.i ], [ %429, %.lr.ph.lr.ph.i.i ]
  %unLo.0.ph1249.i.i = phi i32 [ %443, %.outer9.i.i ], [ %unLo.0.ph.i.i, %.lr.ph.lr.ph.i.i ]
  %ltLo.0.ph1048.i.i = phi i32 [ %442, %.outer9.i.i ], [ %ltLo.0.ph.i.i, %.lr.ph.lr.ph.i.i ]
  %430 = sext i32 %unLo.0.ph1249.i.i to i64
  br label %431

; <label>:431                                     ; preds = %452, %.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %452 ], [ %430, %.lr.ph.i.i ]
  %unLo.041.i.i = phi i32 [ %453, %452 ], [ %unLo.0.ph1249.i.i, %.lr.ph.i.i ]
  %432 = getelementptr inbounds i32* %2, i64 %indvars.iv.i.i
  %433 = load i32* %432, align 4, !tbaa !15
  %434 = add i32 %433, %304
  %435 = zext i32 %434 to i64
  %436 = getelementptr inbounds i8* %4, i64 %435
  %437 = load i8* %436, align 1, !tbaa !17
  %438 = icmp eq i8 %437, %426
  br i1 %438, label %.outer9.i.i, label %445

.outer9.i.i:                                      ; preds = %431
  %439 = trunc i64 %indvars.iv.i.i to i32
  %440 = getelementptr inbounds i32* %2, i64 %indvars.iv138.i.i
  %441 = load i32* %440, align 4, !tbaa !15
  store i32 %441, i32* %432, align 4, !tbaa !15
  store i32 %433, i32* %440, align 4, !tbaa !15
  %442 = add nsw i32 %ltLo.0.ph1048.i.i, 1
  %443 = add nsw i32 %439, 1
  %444 = icmp slt i32 %439, %unHi.0.ph.i.i
  %indvars.iv.next139.i.i = add i64 %indvars.iv138.i.i, 1
  br i1 %444, label %.lr.ph.i.i, label %.preheader.i.i

; <label>:445                                     ; preds = %431
  %446 = icmp ugt i8 %437, %426
  br i1 %446, label %..preheader_crit_edge45.i.i, label %452

..preheader_crit_edge.i.i:                        ; preds = %452
  %447 = trunc i64 %indvars.iv138.i.i to i32
  br label %.preheader.i.i

..preheader_crit_edge45.i.i:                      ; preds = %445
  %448 = trunc i64 %indvars.iv138.i.i to i32
  %449 = trunc i64 %indvars.iv.i.i to i32
  br label %.preheader.i.i

.preheader.i.i:                                   ; preds = %.outer9.i.i, %..preheader_crit_edge45.i.i, %..preheader_crit_edge.i.i, %.outer8.i.i
  %ltLo.0.ph10.lcssa.i.i = phi i32 [ %447, %..preheader_crit_edge.i.i ], [ %448, %..preheader_crit_edge45.i.i ], [ %ltLo.0.ph.i.i, %.outer8.i.i ], [ %442, %.outer9.i.i ]
  %unLo.0.lcssa.i.i = phi i32 [ %453, %..preheader_crit_edge.i.i ], [ %449, %..preheader_crit_edge45.i.i ], [ %unLo.0.ph.i.i, %.outer8.i.i ], [ %443, %.outer9.i.i ]
  %450 = icmp sgt i32 %unLo.0.lcssa.i.i, %unHi.0.ph.i.i
  br i1 %450, label %.critedge.i.i, label %.lr.ph53.lr.ph.i.i

.lr.ph53.lr.ph.i.i:                               ; preds = %.preheader.i.i
  %451 = sext i32 %gtHi.0.ph.i.i to i64
  br label %.lr.ph53.i.i

; <label>:452                                     ; preds = %445
  %453 = add nsw i32 %unLo.041.i.i, 1
  %454 = icmp slt i64 %indvars.iv.i.i, %428
  %indvars.iv.next.i.i = add nsw i64 %indvars.iv.i.i, 1
  br i1 %454, label %431, label %..preheader_crit_edge.i.i

; <label>:455                                     ; preds = %472, %.lr.ph53.i.i
  %indvars.iv140.i.i = phi i64 [ %469, %.lr.ph53.i.i ], [ %indvars.iv.next141.i.i, %472 ]
  %unHi.152.i.i = phi i32 [ %unHi.1.ph63.i.i, %.lr.ph53.i.i ], [ %473, %472 ]
  %456 = getelementptr inbounds i32* %2, i64 %indvars.iv140.i.i
  %457 = load i32* %456, align 4, !tbaa !15
  %458 = add i32 %457, %304
  %459 = zext i32 %458 to i64
  %460 = getelementptr inbounds i8* %4, i64 %459
  %461 = load i8* %460, align 1, !tbaa !17
  %462 = icmp eq i8 %461, %426
  br i1 %462, label %.outer.i.i, label %470

.outer.i.i:                                       ; preds = %455
  %463 = trunc i64 %indvars.iv140.i.i to i32
  %464 = getelementptr inbounds i32* %2, i64 %indvars.iv142.i.i
  %465 = load i32* %464, align 4, !tbaa !15
  store i32 %465, i32* %456, align 4, !tbaa !15
  store i32 %457, i32* %464, align 4, !tbaa !15
  %466 = add nsw i32 %gtHi.1.ph62.i.i, -1
  %467 = add nsw i32 %463, -1
  %468 = icmp sgt i32 %unLo.0.lcssa.i.i, %467
  %indvars.iv.next143.i.i = add i64 %indvars.iv142.i.i, -1
  br i1 %468, label %.critedge.i.i, label %.lr.ph53.i.i

.lr.ph53.i.i:                                     ; preds = %.outer.i.i, %.lr.ph53.lr.ph.i.i
  %indvars.iv142.i.i = phi i64 [ %451, %.lr.ph53.lr.ph.i.i ], [ %indvars.iv.next143.i.i, %.outer.i.i ]
  %unHi.1.ph63.i.i = phi i32 [ %unHi.0.ph.i.i, %.lr.ph53.lr.ph.i.i ], [ %467, %.outer.i.i ]
  %gtHi.1.ph62.i.i = phi i32 [ %gtHi.0.ph.i.i, %.lr.ph53.lr.ph.i.i ], [ %466, %.outer.i.i ]
  %469 = sext i32 %unHi.1.ph63.i.i to i64
  br label %455

; <label>:470                                     ; preds = %455
  %471 = icmp ult i8 %461, %426
  br i1 %471, label %475, label %472

; <label>:472                                     ; preds = %470
  %473 = add nsw i32 %unHi.152.i.i, -1
  %474 = icmp sgt i32 %unLo.0.lcssa.i.i, %473
  %indvars.iv.next141.i.i = add i64 %indvars.iv140.i.i, -1
  br i1 %474, label %..critedge_crit_edge.i.i, label %455

; <label>:475                                     ; preds = %470
  %476 = trunc i64 %indvars.iv142.i.i to i32
  %477 = trunc i64 %indvars.iv140.i.i to i32
  %478 = sext i32 %unLo.0.lcssa.i.i to i64
  %479 = getelementptr inbounds i32* %2, i64 %478
  %480 = load i32* %479, align 4, !tbaa !15
  store i32 %457, i32* %479, align 4, !tbaa !15
  store i32 %480, i32* %456, align 4, !tbaa !15
  %481 = add nsw i32 %unLo.0.lcssa.i.i, 1
  %482 = add nsw i32 %477, -1
  br label %.outer8.i.i

..critedge_crit_edge.i.i:                         ; preds = %472
  %483 = trunc i64 %indvars.iv142.i.i to i32
  br label %.critedge.i.i

.critedge.i.i:                                    ; preds = %.preheader.i.i, %.outer.i.i, %..critedge_crit_edge.i.i
  %gtHi.1.ph.lcssa24.i.i = phi i32 [ %483, %..critedge_crit_edge.i.i ], [ %466, %.outer.i.i ], [ %gtHi.0.ph.i.i, %.preheader.i.i ]
  %unHi.1.lcssa.i.i = phi i32 [ %473, %..critedge_crit_edge.i.i ], [ %467, %.outer.i.i ], [ %unHi.0.ph.i.i, %.preheader.i.i ]
  %484 = icmp slt i32 %gtHi.1.ph.lcssa24.i.i, %ltLo.0.ph10.lcssa.i.i
  br i1 %484, label %485, label %487

; <label>:485                                     ; preds = %.critedge.i.i
  store i32 %302, i32* %296, align 4, !tbaa !15
  store i32 %303, i32* %297, align 4, !tbaa !15
  %486 = add nsw i32 %304, 1
  store i32 %486, i32* %298, align 4, !tbaa !15
  br label %299

; <label>:487                                     ; preds = %.critedge.i.i
  %488 = sub nsw i32 %ltLo.0.ph10.lcssa.i.i, %302
  %489 = sub nsw i32 %unLo.0.lcssa.i.i, %ltLo.0.ph10.lcssa.i.i
  %490 = icmp slt i32 %488, %489
  %..i.i = select i1 %490, i32 %488, i32 %489
  %491 = icmp sgt i32 %..i.i, 0
  br i1 %491, label %.lr.ph76.i.i, label %._crit_edge.i.i

.lr.ph76.i.i:                                     ; preds = %487
  %492 = add i32 %unLo.0.lcssa.i.i, 1
  %493 = add i32 %302, -1
  %494 = sub i32 %493, %ltLo.0.ph10.lcssa.i.i
  %495 = add i32 %ltLo.0.ph10.lcssa.i.i, -1
  %496 = sub i32 %495, %unLo.0.lcssa.i.i
  %497 = icmp sgt i32 %494, %496
  %smax.i.i = select i1 %497, i32 %494, i32 %496
  %498 = add i32 %492, %smax.i.i
  %499 = sext i32 %498 to i64
  br label %500

; <label>:500                                     ; preds = %500, %.lr.ph76.i.i
  %indvars.iv146.i.i = phi i64 [ %399, %.lr.ph76.i.i ], [ %indvars.iv.next147.i.i, %500 ]
  %indvars.iv144.i.i = phi i64 [ %499, %.lr.ph76.i.i ], [ %indvars.iv.next145.i.i, %500 ]
  %yyn.075.i.i = phi i32 [ %..i.i, %.lr.ph76.i.i ], [ %505, %500 ]
  %501 = getelementptr inbounds i32* %2, i64 %indvars.iv146.i.i
  %502 = load i32* %501, align 4, !tbaa !15
  %503 = getelementptr inbounds i32* %2, i64 %indvars.iv144.i.i
  %504 = load i32* %503, align 4, !tbaa !15
  store i32 %504, i32* %501, align 4, !tbaa !15
  store i32 %502, i32* %503, align 4, !tbaa !15
  %indvars.iv.next147.i.i = add nsw i64 %indvars.iv146.i.i, 1
  %505 = add nsw i32 %yyn.075.i.i, -1
  %506 = icmp sgt i32 %yyn.075.i.i, 1
  %indvars.iv.next145.i.i = add nsw i64 %indvars.iv144.i.i, 1
  br i1 %506, label %500, label %._crit_edge.i.i

._crit_edge.i.i:                                  ; preds = %500, %487
  %507 = sub nsw i32 %303, %gtHi.1.ph.lcssa24.i.i
  %508 = sub nsw i32 %gtHi.1.ph.lcssa24.i.i, %unHi.1.lcssa.i.i
  %509 = icmp slt i32 %507, %508
  %.1.i.i = select i1 %509, i32 %507, i32 %508
  %510 = icmp sgt i32 %.1.i.i, 0
  br i1 %510, label %.lr.ph82.i.i, label %._crit_edge83.i.i

.lr.ph82.i.i:                                     ; preds = %._crit_edge.i.i
  %511 = sub nsw i32 %303, %.1.i.i
  %512 = sext i32 %unLo.0.lcssa.i.i to i64
  br label %513

; <label>:513                                     ; preds = %513, %.lr.ph82.i.i
  %indvars.iv155.i.i = phi i64 [ %512, %.lr.ph82.i.i ], [ %indvars.iv.next156.i.i, %513 ]
  %yyp25.080.in.i.i = phi i32 [ %511, %.lr.ph82.i.i ], [ %yyp25.080.i.i, %513 ]
  %yyn6.079.i.i = phi i32 [ %.1.i.i, %.lr.ph82.i.i ], [ %519, %513 ]
  %yyp25.080.i.i = add nsw i32 %yyp25.080.in.i.i, 1
  %514 = getelementptr inbounds i32* %2, i64 %indvars.iv155.i.i
  %515 = load i32* %514, align 4, !tbaa !15
  %516 = sext i32 %yyp25.080.i.i to i64
  %517 = getelementptr inbounds i32* %2, i64 %516
  %518 = load i32* %517, align 4, !tbaa !15
  store i32 %518, i32* %514, align 4, !tbaa !15
  store i32 %515, i32* %517, align 4, !tbaa !15
  %indvars.iv.next156.i.i = add nsw i64 %indvars.iv155.i.i, 1
  %519 = add nsw i32 %yyn6.079.i.i, -1
  %520 = icmp sgt i32 %yyn6.079.i.i, 1
  br i1 %520, label %513, label %._crit_edge83.i.i

._crit_edge83.i.i:                                ; preds = %513, %._crit_edge.i.i
  %521 = sub i32 %302, %ltLo.0.ph10.lcssa.i.i
  %522 = add i32 %521, %unLo.0.lcssa.i.i
  %523 = add nsw i32 %522, -1
  %524 = sub nsw i32 %303, %508
  %525 = add nsw i32 %524, 1
  %526 = add nsw i32 %304, 1
  %527 = sub nsw i32 %523, %302
  %528 = sub nsw i32 %303, %525
  %529 = icmp slt i32 %527, %528
  %.2.i.i = select i1 %529, i32 %302, i32 %525
  %.3.i.i = select i1 %529, i32 %525, i32 %302
  %.4.i.i = select i1 %529, i32 %523, i32 %303
  %.5.i.i = select i1 %529, i32 %303, i32 %523
  %530 = sub nsw i32 %.4.i.i, %.2.i.i
  %531 = sub nsw i32 %524, %522
  %532 = icmp slt i32 %530, %531
  %..2.i.i = select i1 %532, i32 %522, i32 %.2.i.i
  %.4..i.i = select i1 %532, i32 %.4.i.i, i32 %524
  %..4.i.i = select i1 %532, i32 %524, i32 %.4.i.i
  %.6.i.i = select i1 %532, i32 %304, i32 %526
  %.7.i.i = select i1 %532, i32 %526, i32 %304
  %.2..i.i = select i1 %532, i32 %.2.i.i, i32 %522
  %533 = sub nsw i32 %.5.i.i, %.3.i.i
  %534 = sub nsw i32 %..4.i.i, %..2.i.i
  %535 = icmp slt i32 %533, %534
  %.3.nextLo.sroa.8.1.i.i = select i1 %535, i32 %.3.i.i, i32 %..2.i.i
  %nextLo.sroa.8.1..3.i.i = select i1 %535, i32 %..2.i.i, i32 %.3.i.i
  %.5.nextHi.sroa.8.1.i.i = select i1 %535, i32 %.5.i.i, i32 %..4.i.i
  %nextHi.sroa.8.1..5.i.i = select i1 %535, i32 %..4.i.i, i32 %.5.i.i
  %.nextD.sroa.6.1.i.i = select i1 %535, i32 %304, i32 %.7.i.i
  %nextD.sroa.6.1..i.i = select i1 %535, i32 %.7.i.i, i32 %304
  store i32 %nextLo.sroa.8.1..3.i.i, i32* %296, align 4, !tbaa !15
  store i32 %nextHi.sroa.8.1..5.i.i, i32* %297, align 4, !tbaa !15
  store i32 %nextD.sroa.6.1..i.i, i32* %298, align 4, !tbaa !15
  %536 = sext i32 %sp.0.ph84.i.i to i64
  %537 = getelementptr inbounds [100 x i32]* %stackLo.i.i, i64 0, i64 %536
  store i32 %.3.nextLo.sroa.8.1.i.i, i32* %537, align 4, !tbaa !15
  %538 = getelementptr inbounds [100 x i32]* %stackHi.i.i, i64 0, i64 %536
  store i32 %.5.nextHi.sroa.8.1.i.i, i32* %538, align 4, !tbaa !15
  %539 = getelementptr inbounds [100 x i32]* %stackD.i.i, i64 0, i64 %536
  store i32 %.nextD.sroa.6.1.i.i, i32* %539, align 4, !tbaa !15
  %540 = add nsw i32 %sp.0.ph84.i.i, 1
  %541 = sext i32 %540 to i64
  %542 = getelementptr inbounds [100 x i32]* %stackLo.i.i, i64 0, i64 %541
  store i32 %.2..i.i, i32* %542, align 4, !tbaa !15
  %543 = getelementptr inbounds [100 x i32]* %stackHi.i.i, i64 0, i64 %541
  store i32 %.4..i.i, i32* %543, align 4, !tbaa !15
  %544 = getelementptr inbounds [100 x i32]* %stackD.i.i, i64 0, i64 %541
  store i32 %.6.i.i, i32* %544, align 4, !tbaa !15
  %545 = add nsw i32 %sp.0.ph84.i.i, 2
  br label %.outer14.backedge.i.i

mainQSort3.exit.i:                                ; preds = %mainSimpleSort.exit.i.i, %.outer14.backedge.i.i, %391
  %.pr.i.i123 = phi i32 [ %394, %391 ], [ %.pr.i.i, %mainSimpleSort.exit.i.i ], [ %.pre195.pre.i, %.outer14.backedge.i.i ]
  call void @llvm.lifetime.end(i64 400, i8* %260) #3
  call void @llvm.lifetime.end(i64 400, i8* %259) #3
  call void @llvm.lifetime.end(i64 400, i8* %258) #3
  %546 = icmp slt i32 %.pr.i.i123, 0
  br i1 %546, label %mainSort.exit, label %mainQSort3.exit._crit_edge.i

mainQSort3.exit._crit_edge.i:                     ; preds = %mainQSort3.exit.i
  %547 = add i32 %numQSorted.163.i, 1
  %548 = sub i32 %547, %279
  %549 = add i32 %548, %284
  %.pre196.i = load i32* %274, align 4, !tbaa !15
  br label %550

; <label>:550                                     ; preds = %mainQSort3.exit._crit_edge.i, %278, %272
  %.pr.i.i122 = phi i32 [ %.pr.i.i120, %272 ], [ %.pr.i.i123, %mainQSort3.exit._crit_edge.i ], [ %.pr.i.i120, %278 ]
  %551 = phi i32 [ %275, %272 ], [ %.pre196.i, %mainQSort3.exit._crit_edge.i ], [ %275, %278 ]
  %numQSorted.2.i = phi i32 [ %numQSorted.163.i, %272 ], [ %549, %mainQSort3.exit._crit_edge.i ], [ %numQSorted.163.i, %278 ]
  %552 = or i32 %551, 2097152
  store i32 %552, i32* %274, align 4, !tbaa !15
  br label %553

; <label>:553                                     ; preds = %550, %269
  %.pr.i.i121 = phi i32 [ %.pr.i.i122, %550 ], [ %.pr.i.i120, %269 ]
  %numQSorted.3.i = phi i32 [ %numQSorted.2.i, %550 ], [ %numQSorted.163.i, %269 ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %554 = icmp slt i64 %indvars.iv.next.i, 256
  br i1 %554, label %269, label %555

; <label>:555                                     ; preds = %553
  %556 = sext i32 %266 to i64
  %557 = getelementptr inbounds [256 x i8]* %bigDone.i, i64 0, i64 %556
  %558 = load i8* %557, align 1, !tbaa !17
  %559 = icmp eq i8 %558, 0
  br i1 %559, label %.preheader4.i, label %560

; <label>:560                                     ; preds = %555
  tail call void @BZ2_bz__AssertH__fail(i32 1006) #6
  br label %.preheader4.i

.preheader4.i:                                    ; preds = %560, %555, %.preheader4.i
  %indvars.iv161.i = phi i64 [ %indvars.iv.next162.i, %.preheader4.i ], [ 0, %555 ], [ 0, %560 ]
  %561 = shl i64 %indvars.iv161.i, 8
  %562 = add nsw i64 %561, %556
  %563 = getelementptr inbounds i32* %6, i64 %562
  %564 = load i32* %563, align 4, !tbaa !15
  %565 = and i32 %564, -2097153
  %566 = getelementptr inbounds [256 x i32]* %copyStart.i, i64 0, i64 %indvars.iv161.i
  store i32 %565, i32* %566, align 4, !tbaa !15
  %567 = add nsw i64 %562, 1
  %568 = getelementptr inbounds i32* %6, i64 %567
  %569 = load i32* %568, align 4, !tbaa !15
  %570 = and i32 %569, -2097153
  %571 = add i32 %570, -1
  %572 = getelementptr inbounds [256 x i32]* %copyEnd.i, i64 0, i64 %indvars.iv161.i
  store i32 %571, i32* %572, align 4, !tbaa !15
  %indvars.iv.next162.i = add nuw nsw i64 %indvars.iv161.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next162.i, 256
  br i1 %exitcond.i, label %573, label %.preheader4.i

; <label>:573                                     ; preds = %.preheader4.i
  %574 = getelementptr inbounds i32* %6, i64 %268
  %575 = load i32* %574, align 4, !tbaa !15
  %576 = and i32 %575, -2097153
  %577 = getelementptr inbounds [256 x i32]* %copyStart.i, i64 0, i64 %556
  %578 = load i32* %577, align 4, !tbaa !15
  %579 = icmp slt i32 %576, %578
  br i1 %579, label %.lr.ph.i, label %._crit_edge.i

.lr.ph.i:                                         ; preds = %573
  %580 = sext i32 %576 to i64
  br label %581

; <label>:581                                     ; preds = %601, %.lr.ph.i
  %582 = phi i32 [ %578, %.lr.ph.i ], [ %602, %601 ]
  %indvars.iv163.i = phi i64 [ %580, %.lr.ph.i ], [ %indvars.iv.next164.i, %601 ]
  %583 = getelementptr inbounds i32* %2, i64 %indvars.iv163.i
  %584 = load i32* %583, align 4, !tbaa !15
  %585 = add i32 %584, -1
  %586 = icmp slt i32 %585, 0
  %587 = select i1 %586, i32 %8, i32 0
  %..i = add nsw i32 %587, %585
  %588 = sext i32 %..i to i64
  %589 = getelementptr inbounds i8* %4, i64 %588
  %590 = load i8* %589, align 1, !tbaa !17
  %591 = zext i8 %590 to i64
  %592 = getelementptr inbounds [256 x i8]* %bigDone.i, i64 0, i64 %591
  %593 = load i8* %592, align 1, !tbaa !17
  %594 = icmp eq i8 %593, 0
  br i1 %594, label %595, label %601

; <label>:595                                     ; preds = %581
  %596 = getelementptr inbounds [256 x i32]* %copyStart.i, i64 0, i64 %591
  %597 = load i32* %596, align 4, !tbaa !15
  %598 = add nsw i32 %597, 1
  store i32 %598, i32* %596, align 4, !tbaa !15
  %599 = sext i32 %597 to i64
  %600 = getelementptr inbounds i32* %2, i64 %599
  store i32 %..i, i32* %600, align 4, !tbaa !15
  %.pre197.i = load i32* %577, align 4, !tbaa !15
  br label %601

; <label>:601                                     ; preds = %595, %581
  %602 = phi i32 [ %582, %581 ], [ %.pre197.i, %595 ]
  %indvars.iv.next164.i = add nsw i64 %indvars.iv163.i, 1
  %603 = sext i32 %602 to i64
  %604 = icmp slt i64 %indvars.iv.next164.i, %603
  br i1 %604, label %581, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %601, %573
  %605 = phi i32 [ %578, %573 ], [ %602, %601 ]
  %606 = add i32 %267, 256
  %607 = sext i32 %606 to i64
  %608 = getelementptr inbounds i32* %6, i64 %607
  %609 = load i32* %608, align 4, !tbaa !15
  %610 = and i32 %609, -2097153
  %j.767.i = add i32 %610, -1
  %611 = getelementptr inbounds [256 x i32]* %copyEnd.i, i64 0, i64 %556
  %612 = load i32* %611, align 4, !tbaa !15
  %613 = icmp sgt i32 %j.767.i, %612
  br i1 %613, label %.lr.ph70.i.preheader, label %._crit_edge71.i

.lr.ph70.i.preheader:                             ; preds = %._crit_edge.i
  %614 = sext i32 %j.767.i to i64
  br label %.lr.ph70.i

.lr.ph70.i:                                       ; preds = %.lr.ph70.i.preheader, %.backedge.i
  %indvars.iv114 = phi i64 [ %614, %.lr.ph70.i.preheader ], [ %indvars.iv.next115, %.backedge.i ]
  %615 = phi i32 [ %612, %.lr.ph70.i.preheader ], [ %628, %.backedge.i ]
  %j.768.i = phi i32 [ %j.767.i, %.lr.ph70.i.preheader ], [ %j.7.i, %.backedge.i ]
  %616 = getelementptr inbounds i32* %2, i64 %indvars.iv114
  %617 = load i32* %616, align 4, !tbaa !15
  %618 = add i32 %617, -1
  %619 = icmp slt i32 %618, 0
  %620 = select i1 %619, i32 %8, i32 0
  %.1.i = add nsw i32 %620, %618
  %621 = sext i32 %.1.i to i64
  %622 = getelementptr inbounds i8* %4, i64 %621
  %623 = load i8* %622, align 1, !tbaa !17
  %624 = zext i8 %623 to i64
  %625 = getelementptr inbounds [256 x i8]* %bigDone.i, i64 0, i64 %624
  %626 = load i8* %625, align 1, !tbaa !17
  %627 = icmp eq i8 %626, 0
  br i1 %627, label %630, label %.backedge.i

.backedge.i:                                      ; preds = %630, %.lr.ph70.i
  %628 = phi i32 [ %615, %.lr.ph70.i ], [ %.pre198.i, %630 ]
  %j.7.i = add nsw i32 %j.768.i, -1
  %629 = icmp sgt i32 %j.7.i, %628
  %indvars.iv.next115 = add i64 %indvars.iv114, -1
  br i1 %629, label %.lr.ph70.i, label %._crit_edge71.i

; <label>:630                                     ; preds = %.lr.ph70.i
  %631 = getelementptr inbounds [256 x i32]* %copyEnd.i, i64 0, i64 %624
  %632 = load i32* %631, align 4, !tbaa !15
  %633 = add nsw i32 %632, -1
  store i32 %633, i32* %631, align 4, !tbaa !15
  %634 = sext i32 %632 to i64
  %635 = getelementptr inbounds i32* %2, i64 %634
  store i32 %.1.i, i32* %635, align 4, !tbaa !15
  %.pre198.i = load i32* %611, align 4, !tbaa !15
  br label %.backedge.i

._crit_edge71.i:                                  ; preds = %.backedge.i, %._crit_edge.i
  %.lcssa60.i = phi i32 [ %612, %._crit_edge.i ], [ %628, %.backedge.i ]
  %636 = add nsw i32 %605, -1
  %637 = icmp eq i32 %636, %.lcssa60.i
  br i1 %637, label %.preheader.i, label %638

; <label>:638                                     ; preds = %._crit_edge71.i
  %639 = icmp eq i32 %605, 0
  %640 = icmp eq i32 %.lcssa60.i, %44
  %or.cond.i = and i1 %639, %640
  br i1 %or.cond.i, label %.preheader.i, label %641

; <label>:641                                     ; preds = %638
  tail call void @BZ2_bz__AssertH__fail(i32 1007) #6
  br label %.preheader.i

.preheader.i:                                     ; preds = %641, %638, %._crit_edge71.i, %.preheader.i
  %indvars.iv165.i = phi i64 [ %indvars.iv.next166.i, %.preheader.i ], [ 0, %._crit_edge71.i ], [ 0, %638 ], [ 0, %641 ]
  %642 = shl i64 %indvars.iv165.i, 8
  %643 = add nsw i64 %642, %556
  %644 = getelementptr inbounds i32* %6, i64 %643
  %645 = load i32* %644, align 4, !tbaa !15
  %646 = or i32 %645, 2097152
  store i32 %646, i32* %644, align 4, !tbaa !15
  %indvars.iv.next166.i = add nuw nsw i64 %indvars.iv165.i, 1
  %exitcond167.i = icmp eq i64 %indvars.iv.next166.i, 256
  br i1 %exitcond167.i, label %647, label %.preheader.i

; <label>:647                                     ; preds = %.preheader.i
  store i8 1, i8* %557, align 1, !tbaa !17
  %648 = icmp slt i64 %indvars.iv170.i, 255
  br i1 %648, label %649, label %683

; <label>:649                                     ; preds = %647
  %650 = load i32* %574, align 4, !tbaa !15
  %651 = and i32 %650, -2097153
  %652 = load i32* %608, align 4, !tbaa !15
  %653 = and i32 %652, -2097153
  %654 = sub i32 %653, %651
  br label %655

; <label>:655                                     ; preds = %655, %649
  %shifts.0.i = phi i32 [ 0, %649 ], [ %658, %655 ]
  %656 = ashr i32 %654, %shifts.0.i
  %657 = icmp sgt i32 %656, 65534
  %658 = add nuw nsw i32 %shifts.0.i, 1
  br i1 %657, label %655, label %659

; <label>:659                                     ; preds = %655
  %660 = add nsw i32 %654, -1
  %661 = icmp sgt i32 %654, 0
  br i1 %661, label %.lr.ph76.i, label %._crit_edge77.i

.lr.ph76.i:                                       ; preds = %659
  %662 = sext i32 %654 to i64
  %663 = sext i32 %651 to i64
  br label %664

; <label>:664                                     ; preds = %678, %.lr.ph76.i
  %indvars.iv168.in.i = phi i64 [ %662, %.lr.ph76.i ], [ %indvars.iv168.i, %678 ]
  %indvars.iv168.i = add nsw i64 %indvars.iv168.in.i, -1
  %665 = add nsw i64 %indvars.iv168.i, %663
  %666 = getelementptr inbounds i32* %2, i64 %665
  %667 = load i32* %666, align 4, !tbaa !15
  %668 = trunc i64 %indvars.iv168.i to i32
  %669 = ashr i32 %668, %shifts.0.i
  %670 = trunc i32 %669 to i16
  %671 = sext i32 %667 to i64
  %672 = getelementptr inbounds i16* %26, i64 %671
  store i16 %670, i16* %672, align 2, !tbaa !18
  %673 = icmp slt i32 %667, 34
  br i1 %673, label %674, label %678

; <label>:674                                     ; preds = %664
  %675 = add nsw i32 %667, %8
  %676 = sext i32 %675 to i64
  %677 = getelementptr inbounds i16* %26, i64 %676
  store i16 %670, i16* %677, align 2, !tbaa !18
  br label %678

; <label>:678                                     ; preds = %674, %664
  %679 = icmp sgt i64 %indvars.iv168.in.i, 1
  br i1 %679, label %664, label %._crit_edge77.i

._crit_edge77.i:                                  ; preds = %678, %659
  %680 = ashr i32 %660, %shifts.0.i
  %681 = icmp slt i32 %680, 65536
  br i1 %681, label %683, label %682

; <label>:682                                     ; preds = %._crit_edge77.i
  tail call void @BZ2_bz__AssertH__fail(i32 1002) #6
  br label %683

; <label>:683                                     ; preds = %682, %._crit_edge77.i, %647
  %indvars.iv.next171.i = add nuw nsw i64 %indvars.iv170.i, 1
  %684 = icmp slt i64 %indvars.iv.next171.i, 256
  br i1 %684, label %264, label %685

; <label>:685                                     ; preds = %683
  br i1 %34, label %686, label %mainSort.exit

; <label>:686                                     ; preds = %685
  %687 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !16
  %688 = sub nsw i32 %8, %numQSorted.3.i
  %689 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %687, i8* getelementptr inbounds ([44 x i8]* @.str8, i64 0, i64 0), i32 %8, i32 %numQSorted.3.i, i32 %688) #6
  br label %mainSort.exit

mainSort.exit:                                    ; preds = %mainQSort3.exit.i, %685, %686
  %690 = phi i32 [ %.pr.i.i121, %685 ], [ %.pr.i.i121, %686 ], [ %.pr.i.i123, %mainQSort3.exit.i ]
  call void @llvm.lifetime.end(i64 1024, i8* %33) #3
  call void @llvm.lifetime.end(i64 1024, i8* %32) #3
  call void @llvm.lifetime.end(i64 256, i8* %bigDone177.i) #3
  call void @llvm.lifetime.end(i64 1024, i8* %31) #3
  %691 = icmp sgt i32 %10, 2
  br i1 %691, label %692, label %702

; <label>:692                                     ; preds = %mainSort.exit
  %693 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !16
  %694 = sub nsw i32 %30, %690
  %695 = sitofp i32 %694 to float
  %696 = icmp eq i32 %8, 0
  %697 = sitofp i32 %8 to float
  %698 = select i1 %696, float 1.000000e+00, float %697
  %699 = fdiv float %695, %698
  %700 = fpext float %699 to double
  %701 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %693, i8* getelementptr inbounds ([38 x i8]* @.str, i64 0, i64 0), i32 %694, i32 %8, double %700) #6
  br label %702

; <label>:702                                     ; preds = %692, %mainSort.exit
  %703 = icmp slt i32 %690, 0
  br i1 %703, label %704, label %714

; <label>:704                                     ; preds = %702
  %705 = icmp sgt i32 %10, 1
  br i1 %705, label %706, label %709

; <label>:706                                     ; preds = %704
  %707 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !16
  %708 = tail call i64 @fwrite(i8* getelementptr inbounds ([54 x i8]* @.str1, i64 0, i64 0), i64 53, i64 1, %struct.__sFILE* %707)
  br label %709

; <label>:709                                     ; preds = %706, %704
  %710 = getelementptr inbounds %struct.EState* %s, i64 0, i32 4
  %711 = load i32** %710, align 8, !tbaa !13
  %712 = getelementptr inbounds %struct.EState* %s, i64 0, i32 5
  %713 = load i32** %712, align 8, !tbaa !14
  tail call fastcc void @fallbackSort(i32* %711, i32* %713, i32* %6, i32 %8, i32 %10) #5
  br label %714

; <label>:714                                     ; preds = %702, %709, %14
  %715 = getelementptr inbounds %struct.EState* %s, i64 0, i32 7
  store i32 -1, i32* %715, align 4, !tbaa !23
  %716 = load i32* %7, align 4, !tbaa !10
  %717 = icmp sgt i32 %716, 0
  br i1 %717, label %.lr.ph, label %thread-pre-split.thread

.lr.ph:                                           ; preds = %714, %721
  %indvars.iv = phi i64 [ %indvars.iv.next, %721 ], [ 0, %714 ]
  %718 = getelementptr inbounds i32* %2, i64 %indvars.iv
  %719 = load i32* %718, align 4, !tbaa !15
  %720 = icmp eq i32 %719, 0
  br i1 %720, label %thread-pre-split, label %721

; <label>:721                                     ; preds = %.lr.ph
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %722 = sext i32 %716 to i64
  %723 = icmp slt i64 %indvars.iv.next, %722
  br i1 %723, label %.lr.ph, label %thread-pre-split.thread

thread-pre-split:                                 ; preds = %.lr.ph
  %724 = trunc i64 %indvars.iv to i32
  store i32 %724, i32* %715, align 4, !tbaa !23
  %phitmp = icmp eq i32 %724, -1
  br i1 %phitmp, label %thread-pre-split.thread, label %725

thread-pre-split.thread:                          ; preds = %721, %714, %thread-pre-split
  tail call void @BZ2_bz__AssertH__fail(i32 1003) #6
  br label %725

; <label>:725                                     ; preds = %thread-pre-split, %thread-pre-split.thread
  ret void
}
