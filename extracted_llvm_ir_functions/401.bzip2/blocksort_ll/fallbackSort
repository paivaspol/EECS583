define internal fastcc void @fallbackSort(i32* %fmap, i32* nocapture %eclass, i32* nocapture %bhtab, i32 %nblock, i32 %verb) #0 {
  %bhtab185 = bitcast i32* %bhtab to i8*
  %stackLo.i = alloca [100 x i32], align 16
  %stackHi.i = alloca [100 x i32], align 16
  %ftab = alloca [257 x i32], align 16
  %1 = bitcast [257 x i32]* %ftab to i8*
  %ftabCopy = alloca [256 x i32], align 16
  %2 = bitcast [256 x i32]* %ftabCopy to i8*
  tail call void @llvm.dbg.value(metadata i32* %fmap, i64 0, metadata !124, metadata !375), !dbg !1070
  tail call void @llvm.dbg.value(metadata i32* %eclass, i64 0, metadata !125, metadata !375), !dbg !1071
  tail call void @llvm.dbg.value(metadata i32* %bhtab, i64 0, metadata !126, metadata !375), !dbg !1072
  tail call void @llvm.dbg.value(metadata i32 %nblock, i64 0, metadata !127, metadata !375), !dbg !1073
  tail call void @llvm.dbg.value(metadata i32 %verb, i64 0, metadata !128, metadata !375), !dbg !1074
  call void @llvm.lifetime.start(i64 1028, i8* %1) #4, !dbg !1075
  tail call void @llvm.dbg.declare(metadata [257 x i32]* %ftab, metadata !129, metadata !375), !dbg !1076
  call void @llvm.lifetime.start(i64 1024, i8* %2) #4, !dbg !1077
  tail call void @llvm.dbg.declare(metadata [256 x i32]* %ftabCopy, metadata !133, metadata !375), !dbg !1078
  %3 = bitcast i32* %eclass to i8*, !dbg !1079
  tail call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !145, metadata !375), !dbg !1080
  %4 = icmp sgt i32 %verb, 3, !dbg !1081
  tail call void @llvm.dbg.declare(metadata [100 x i32]* %stackLo.i, metadata !166, metadata !375), !dbg !1083
  tail call void @llvm.dbg.declare(metadata [100 x i32]* %stackHi.i, metadata !170, metadata !375), !dbg !1089
  br i1 %4, label %5, label %.preheader22, !dbg !1090

; <label>:5                                       ; preds = %0
  %6 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1091, !tbaa !459
  %7 = tail call i64 @fwrite(i8* getelementptr inbounds ([28 x i8]* @.str2, i64 0, i64 0), i64 27, i64 1, %struct.__sFILE* %6), !dbg !1091
  br label %.preheader22, !dbg !1091

.preheader22:                                     ; preds = %5, %0
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 1028, i32 16, i1 false), !dbg !1092
  %8 = icmp sgt i32 %nblock, 0, !dbg !1095
  br i1 %8, label %.lr.ph104, label %.preheader20, !dbg !1098

.lr.ph104:                                        ; preds = %.preheader22
  %9 = add i32 %nblock, -1, !dbg !1098
  br label %10, !dbg !1098

..preheader20_crit_edge:                          ; preds = %10
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds [257 x i32]* %ftab, i64 0, i64 0
  %.pre.pre = load i32* %.phi.trans.insert.phi.trans.insert, align 16, !dbg !1099, !tbaa !442
  br label %.preheader20, !dbg !1098

.preheader20:                                     ; preds = %.preheader22, %..preheader20_crit_edge
  %.pre = phi i32 [ %.pre.pre, %..preheader20_crit_edge ], [ 0, %.preheader22 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %1, i64 1024, i32 16, i1 false), !dbg !1102
  br label %18, !dbg !1105

; <label>:10                                      ; preds = %10, %.lr.ph104
  %indvars.iv196 = phi i64 [ 0, %.lr.ph104 ], [ %indvars.iv.next197, %10 ]
  %11 = getelementptr inbounds i8* %3, i64 %indvars.iv196, !dbg !1106
  %12 = load i8* %11, align 1, !dbg !1106, !tbaa !467
  %13 = zext i8 %12 to i64, !dbg !1107
  %14 = getelementptr inbounds [257 x i32]* %ftab, i64 0, i64 %13, !dbg !1107
  %15 = load i32* %14, align 4, !dbg !1108, !tbaa !442
  %16 = add nsw i32 %15, 1, !dbg !1108
  store i32 %16, i32* %14, align 4, !dbg !1108, !tbaa !442
  %indvars.iv.next197 = add nuw nsw i64 %indvars.iv196, 1, !dbg !1098
  %lftr.wideiv198 = trunc i64 %indvars.iv196 to i32, !dbg !1098
  %exitcond199 = icmp eq i32 %lftr.wideiv198, %9, !dbg !1098
  br i1 %exitcond199, label %..preheader20_crit_edge, label %10, !dbg !1098

.preheader18:                                     ; preds = %18
  br i1 %8, label %.lr.ph99, label %._crit_edge100, !dbg !1109

.lr.ph99:                                         ; preds = %.preheader18
  %17 = add i32 %nblock, -1, !dbg !1109
  br label %23, !dbg !1109

; <label>:18                                      ; preds = %18, %.preheader20
  %19 = phi i32 [ %.pre, %.preheader20 ], [ %22, %18 ], !dbg !1111
  %indvars.iv190 = phi i64 [ 1, %.preheader20 ], [ %indvars.iv.next191, %18 ]
  %20 = getelementptr inbounds [257 x i32]* %ftab, i64 0, i64 %indvars.iv190, !dbg !1112
  %21 = load i32* %20, align 4, !dbg !1113, !tbaa !442
  %22 = add nsw i32 %21, %19, !dbg !1113
  store i32 %22, i32* %20, align 4, !dbg !1113, !tbaa !442
  %indvars.iv.next191 = add nuw nsw i64 %indvars.iv190, 1, !dbg !1105
  %exitcond192 = icmp eq i64 %indvars.iv.next191, 257, !dbg !1105
  br i1 %exitcond192, label %.preheader18, label %18, !dbg !1105

; <label>:23                                      ; preds = %23, %.lr.ph99
  %indvars.iv186 = phi i64 [ 0, %.lr.ph99 ], [ %indvars.iv.next187, %23 ]
  %24 = getelementptr inbounds i8* %3, i64 %indvars.iv186, !dbg !1114
  %25 = load i8* %24, align 1, !dbg !1114, !tbaa !467
  %26 = zext i8 %25 to i64, !dbg !1117
  %27 = getelementptr inbounds [257 x i32]* %ftab, i64 0, i64 %26, !dbg !1117
  %28 = load i32* %27, align 4, !dbg !1117, !tbaa !442
  %29 = add nsw i32 %28, -1, !dbg !1118
  tail call void @llvm.dbg.value(metadata i32 %29, i64 0, metadata !138, metadata !375), !dbg !1119
  store i32 %29, i32* %27, align 4, !dbg !1120, !tbaa !442
  %30 = sext i32 %29 to i64, !dbg !1121
  %31 = getelementptr inbounds i32* %fmap, i64 %30, !dbg !1121
  %32 = trunc i64 %indvars.iv186 to i32, !dbg !1122
  store i32 %32, i32* %31, align 4, !dbg !1122, !tbaa !442
  %indvars.iv.next187 = add nuw nsw i64 %indvars.iv186, 1, !dbg !1109
  %exitcond189 = icmp eq i32 %32, %17, !dbg !1109
  br i1 %exitcond189, label %._crit_edge100, label %23, !dbg !1109

._crit_edge100:                                   ; preds = %23, %.preheader18
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !136, metadata !375), !dbg !1123
  %33 = icmp sgt i32 %nblock, -64, !dbg !1124
  br i1 %33, label %.lr.ph97, label %.preheader17, !dbg !1127

.lr.ph97:                                         ; preds = %._crit_edge100
  %34 = sdiv i32 %nblock, 32, !dbg !1128
  %35 = add nsw i32 %34, 1, !dbg !1127
  %36 = icmp sgt i32 %nblock, -32
  %37 = zext i32 %35 to i64
  %.op = shl nuw nsw i64 %37, 2, !dbg !1127
  %.op.op = add nuw nsw i64 %.op, 4, !dbg !1127
  %38 = select i1 %36, i64 %.op.op, i64 4, !dbg !1127
  call void @llvm.memset.p0i8.i64(i8* %bhtab185, i8 0, i64 %38, i32 4, i1 false), !dbg !1129
  br label %.preheader17, !dbg !1127

.preheader17:                                     ; preds = %._crit_edge100, %.lr.ph97, %.preheader17
  %indvars.iv180 = phi i64 [ %indvars.iv.next181, %.preheader17 ], [ 0, %.lr.ph97 ], [ 0, %._crit_edge100 ]
  %39 = getelementptr inbounds [257 x i32]* %ftab, i64 0, i64 %indvars.iv180, !dbg !1130
  %40 = load i32* %39, align 4, !dbg !1130, !tbaa !442
  %41 = and i32 %40, 31, !dbg !1130
  %42 = shl i32 1, %41, !dbg !1130
  %43 = ashr i32 %40, 5, !dbg !1130
  %44 = sext i32 %43 to i64, !dbg !1130
  %45 = getelementptr inbounds i32* %bhtab, i64 %44, !dbg !1130
  %46 = load i32* %45, align 4, !dbg !1130, !tbaa !442
  %47 = or i32 %42, %46, !dbg !1130
  store i32 %47, i32* %45, align 4, !dbg !1130, !tbaa !442
  %indvars.iv.next181 = add nuw nsw i64 %indvars.iv180, 1, !dbg !1133
  %exitcond182 = icmp eq i64 %indvars.iv.next181, 256, !dbg !1133
  br i1 %exitcond182, label %.preheader16, label %.preheader17, !dbg !1133

.preheader15:                                     ; preds = %.preheader16
  %48 = bitcast [100 x i32]* %stackLo.i to i8*, !dbg !1134
  %49 = bitcast [100 x i32]* %stackHi.i to i8*, !dbg !1135
  %50 = getelementptr inbounds [100 x i32]* %stackLo.i, i64 0, i64 0, !dbg !1136
  %51 = getelementptr inbounds [100 x i32]* %stackHi.i, i64 0, i64 0, !dbg !1136
  %52 = add i32 %nblock, -1, !dbg !1138
  br label %72, !dbg !1138

.preheader16:                                     ; preds = %.preheader17, %.preheader16
  %i.793 = phi i32 [ %71, %.preheader16 ], [ 0, %.preheader17 ]
  %53 = shl nsw i32 %i.793, 1, !dbg !1139
  %54 = add nsw i32 %53, %nblock, !dbg !1139
  %55 = and i32 %54, 31, !dbg !1139
  %56 = shl i32 1, %55, !dbg !1139
  %57 = ashr i32 %54, 5, !dbg !1139
  %58 = sext i32 %57 to i64, !dbg !1139
  %59 = getelementptr inbounds i32* %bhtab, i64 %58, !dbg !1139
  %60 = load i32* %59, align 4, !dbg !1139, !tbaa !442
  %61 = or i32 %60, %56, !dbg !1139
  store i32 %61, i32* %59, align 4, !dbg !1139, !tbaa !442
  %62 = add nsw i32 %54, 1, !dbg !1143
  %63 = and i32 %62, 31, !dbg !1143
  %64 = shl i32 1, %63, !dbg !1143
  %65 = xor i32 %64, -1, !dbg !1143
  %66 = ashr i32 %62, 5, !dbg !1143
  %67 = sext i32 %66 to i64, !dbg !1143
  %68 = getelementptr inbounds i32* %bhtab, i64 %67, !dbg !1143
  %69 = load i32* %68, align 4, !dbg !1143, !tbaa !442
  %70 = and i32 %69, %65, !dbg !1143
  store i32 %70, i32* %68, align 4, !dbg !1143, !tbaa !442
  %71 = add nuw nsw i32 %i.793, 1, !dbg !1144
  tail call void @llvm.dbg.value(metadata i32 %71, i64 0, metadata !136, metadata !375), !dbg !1123
  %exitcond179 = icmp eq i32 %71, 32, !dbg !1145
  br i1 %exitcond179, label %.preheader15, label %.preheader16, !dbg !1145

; <label>:72                                      ; preds = %.preheader15, %391
  %H.0 = phi i32 [ %392, %391 ], [ 1, %.preheader15 ]
  br i1 %4, label %73, label %.preheader14, !dbg !1138

; <label>:73                                      ; preds = %72
  %74 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1146, !tbaa !459
  %75 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %74, i8* getelementptr inbounds ([23 x i8]* @.str3, i64 0, i64 0), i32 %H.0) #7, !dbg !1146
  br label %.preheader14, !dbg !1146

.preheader14:                                     ; preds = %73, %72
  br i1 %8, label %.lr.ph, label %.outer, !dbg !1148

.lr.ph:                                           ; preds = %.preheader14, %.lr.ph
  %indvars.iv164 = phi i64 [ %indvars.iv.next165, %.lr.ph ], [ 0, %.preheader14 ]
  %j.083 = phi i32 [ %j.0.i.8, %.lr.ph ], [ 0, %.preheader14 ]
  %76 = trunc i64 %indvars.iv164 to i32, !dbg !1150
  %77 = ashr i32 %76, 5, !dbg !1150
  %78 = sext i32 %77 to i64, !dbg !1150
  %79 = getelementptr inbounds i32* %bhtab, i64 %78, !dbg !1150
  %80 = load i32* %79, align 4, !dbg !1150, !tbaa !442
  %81 = and i32 %76, 31, !dbg !1150
  %82 = shl i32 1, %81, !dbg !1150
  %83 = and i32 %80, %82, !dbg !1150
  %84 = icmp eq i32 %83, 0, !dbg !1150
  %j.0.i.8 = select i1 %84, i32 %j.083, i32 %76, !dbg !1154
  %85 = getelementptr inbounds i32* %fmap, i64 %indvars.iv164, !dbg !1155
  %86 = load i32* %85, align 4, !dbg !1155, !tbaa !442
  %87 = sub i32 %86, %H.0, !dbg !1156
  tail call void @llvm.dbg.value(metadata i32 %87, i64 0, metadata !138, metadata !375), !dbg !1119
  %88 = icmp slt i32 %87, 0, !dbg !1157
  %89 = select i1 %88, i32 %nblock, i32 0, !dbg !1159
  %k.0 = add nsw i32 %89, %87, !dbg !1159
  %90 = sext i32 %k.0 to i64, !dbg !1160
  %91 = getelementptr inbounds i32* %eclass, i64 %90, !dbg !1160
  store i32 %j.0.i.8, i32* %91, align 4, !dbg !1161, !tbaa !442
  %indvars.iv.next165 = add nuw nsw i64 %indvars.iv164, 1, !dbg !1148
  %exitcond167 = icmp eq i32 %76, %52, !dbg !1148
  br i1 %exitcond167, label %.outer, label %.lr.ph, !dbg !1148

.outer:                                           ; preds = %fallbackQSort3.exit, %385, %.preheader14, %.lr.ph
  %r.0.ph = phi i32 [ -1, %.lr.ph ], [ -1, %.preheader14 ], [ %145, %385 ], [ %145, %fallbackQSort3.exit ]
  %nNotDone.0.ph = phi i32 [ 0, %.lr.ph ], [ 0, %.preheader14 ], [ %152, %385 ], [ %152, %fallbackQSort3.exit ]
  br label %.backedge

.backedge:                                        ; preds = %147, %.backedge, %.outer
  %k.1.in = phi i32 [ %r.0.ph, %.outer ], [ %k.1, %.backedge ], [ %145, %147 ]
  %k.1 = add nsw i32 %k.1.in, 1, !dbg !1162
  %92 = ashr i32 %k.1, 5, !dbg !1163
  %93 = sext i32 %92 to i64, !dbg !1163
  %94 = getelementptr inbounds i32* %bhtab, i64 %93, !dbg !1163
  %95 = load i32* %94, align 4, !dbg !1163, !tbaa !442
  %96 = and i32 %k.1, 31, !dbg !1163
  %97 = shl i32 1, %96, !dbg !1163
  %98 = and i32 %97, %95, !dbg !1163
  %99 = icmp eq i32 %98, 0, !dbg !1163
  %100 = icmp ne i32 %96, 0, !dbg !1164
  %not. = xor i1 %99, true, !dbg !1164
  %. = and i1 %100, %not., !dbg !1164
  br i1 %., label %.backedge, label %101, !dbg !1165

; <label>:101                                     ; preds = %.backedge
  br i1 %99, label %.loopexit11, label %.preheader12, !dbg !1166

.preheader12:                                     ; preds = %101, %.preheader12
  %k.2 = phi i32 [ %107, %.preheader12 ], [ %k.1, %101 ]
  %102 = ashr i32 %k.2, 5, !dbg !1167
  %103 = sext i32 %102 to i64, !dbg !1167
  %104 = getelementptr inbounds i32* %bhtab, i64 %103, !dbg !1167
  %105 = load i32* %104, align 4, !dbg !1167, !tbaa !442
  %106 = icmp eq i32 %105, -1, !dbg !1170
  %107 = add nsw i32 %k.2, 32, !dbg !1171
  tail call void @llvm.dbg.value(metadata i32 %107, i64 0, metadata !138, metadata !375), !dbg !1119
  br i1 %106, label %.preheader12, label %.preheader10, !dbg !1172

.preheader10:                                     ; preds = %.preheader12, %.preheader10
  %k.3 = phi i32 [ %116, %.preheader10 ], [ %k.2, %.preheader12 ]
  %108 = ashr i32 %k.3, 5, !dbg !1173
  %109 = sext i32 %108 to i64, !dbg !1173
  %110 = getelementptr inbounds i32* %bhtab, i64 %109, !dbg !1173
  %111 = load i32* %110, align 4, !dbg !1173, !tbaa !442
  %112 = and i32 %k.3, 31, !dbg !1173
  %113 = shl i32 1, %112, !dbg !1173
  %114 = and i32 %113, %111, !dbg !1173
  %115 = icmp eq i32 %114, 0, !dbg !1174
  %116 = add nsw i32 %k.3, 1, !dbg !1175
  tail call void @llvm.dbg.value(metadata i32 %116, i64 0, metadata !138, metadata !375), !dbg !1119
  br i1 %115, label %.loopexit11, label %.preheader10, !dbg !1174

.loopexit11:                                      ; preds = %.preheader10, %101
  %k.4 = phi i32 [ %k.1, %101 ], [ %k.3, %.preheader10 ]
  %117 = add nsw i32 %k.4, -1, !dbg !1176
  tail call void @llvm.dbg.value(metadata i32 %117, i64 0, metadata !139, metadata !375), !dbg !1177
  %118 = icmp sgt i32 %k.4, %nblock, !dbg !1178
  br i1 %118, label %387, label %.preheader9, !dbg !1180

.preheader9:                                      ; preds = %.loopexit11, %.preheader9
  %k.5 = phi i32 [ %128, %.preheader9 ], [ %k.4, %.loopexit11 ]
  %119 = ashr i32 %k.5, 5, !dbg !1181
  %120 = sext i32 %119 to i64, !dbg !1181
  %121 = getelementptr inbounds i32* %bhtab, i64 %120, !dbg !1181
  %122 = load i32* %121, align 4, !dbg !1181, !tbaa !442
  %123 = and i32 %k.5, 31, !dbg !1181
  %124 = shl i32 1, %123, !dbg !1181
  %125 = and i32 %124, %122, !dbg !1181
  %126 = icmp eq i32 %125, 0, !dbg !1181
  %127 = icmp ne i32 %123, 0, !dbg !1182
  %.2 = and i1 %127, %126, !dbg !1182
  %128 = add nsw i32 %k.5, 1, !dbg !1183
  tail call void @llvm.dbg.value(metadata i32 %128, i64 0, metadata !138, metadata !375), !dbg !1119
  br i1 %.2, label %.preheader9, label %129, !dbg !1184

; <label>:129                                     ; preds = %.preheader9
  br i1 %126, label %.preheader8, label %.loopexit7, !dbg !1185

.preheader8:                                      ; preds = %129, %.preheader8
  %k.6 = phi i32 [ %135, %.preheader8 ], [ %k.5, %129 ]
  %130 = ashr i32 %k.6, 5, !dbg !1186
  %131 = sext i32 %130 to i64, !dbg !1186
  %132 = getelementptr inbounds i32* %bhtab, i64 %131, !dbg !1186
  %133 = load i32* %132, align 4, !dbg !1186, !tbaa !442
  %134 = icmp eq i32 %133, 0, !dbg !1189
  %135 = add nsw i32 %k.6, 32, !dbg !1190
  tail call void @llvm.dbg.value(metadata i32 %135, i64 0, metadata !138, metadata !375), !dbg !1119
  br i1 %134, label %.preheader8, label %.preheader6, !dbg !1191

.preheader6:                                      ; preds = %.preheader8, %.preheader6
  %k.7 = phi i32 [ %144, %.preheader6 ], [ %k.6, %.preheader8 ]
  %136 = ashr i32 %k.7, 5, !dbg !1192
  %137 = sext i32 %136 to i64, !dbg !1192
  %138 = getelementptr inbounds i32* %bhtab, i64 %137, !dbg !1192
  %139 = load i32* %138, align 4, !dbg !1192, !tbaa !442
  %140 = and i32 %k.7, 31, !dbg !1192
  %141 = shl i32 1, %140, !dbg !1192
  %142 = and i32 %141, %139, !dbg !1192
  %143 = icmp eq i32 %142, 0, !dbg !1193
  %144 = add nsw i32 %k.7, 1, !dbg !1194
  tail call void @llvm.dbg.value(metadata i32 %144, i64 0, metadata !138, metadata !375), !dbg !1119
  br i1 %143, label %.preheader6, label %.loopexit7, !dbg !1195

.loopexit7:                                       ; preds = %.preheader6, %129
  %k.8 = phi i32 [ %k.5, %129 ], [ %k.7, %.preheader6 ]
  %145 = add nsw i32 %k.8, -1, !dbg !1196
  tail call void @llvm.dbg.value(metadata i32 %145, i64 0, metadata !140, metadata !375), !dbg !1197
  %146 = icmp sgt i32 %k.8, %nblock, !dbg !1198
  br i1 %146, label %387, label %147, !dbg !1200

; <label>:147                                     ; preds = %.loopexit7
  %148 = icmp sgt i32 %145, %117, !dbg !1201
  br i1 %148, label %149, label %.backedge, !dbg !1202

; <label>:149                                     ; preds = %147
  %.neg = sub i32 1, %k.4
  %150 = add i32 %nNotDone.0.ph, 1, !dbg !1203
  %151 = add i32 %150, %.neg, !dbg !1204
  %152 = add i32 %151, %145, !dbg !1205
  tail call void @llvm.dbg.value(metadata i32 %152, i64 0, metadata !143, metadata !375), !dbg !1206
  tail call void @llvm.dbg.value(metadata i32* %fmap, i64 0, metadata !150, metadata !375) #4, !dbg !1207
  tail call void @llvm.dbg.value(metadata i32* %eclass, i64 0, metadata !151, metadata !375) #4, !dbg !1208
  tail call void @llvm.dbg.value(metadata i32 %117, i64 0, metadata !152, metadata !375) #4, !dbg !1209
  tail call void @llvm.dbg.value(metadata i32 %145, i64 0, metadata !153, metadata !375) #4, !dbg !1210
  call void @llvm.lifetime.start(i64 400, i8* %48) #4, !dbg !1134
  call void @llvm.lifetime.start(i64 400, i8* %49) #4, !dbg !1135
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !164, metadata !375) #4, !dbg !1211
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !160, metadata !375) #4, !dbg !1212
  store i32 %117, i32* %50, align 16, !dbg !1136, !tbaa !442
  store i32 %145, i32* %51, align 16, !dbg !1136, !tbaa !442
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !160, metadata !375) #4, !dbg !1212
  br label %.lr.ph.i, !dbg !1213

.lr.ph.i:                                         ; preds = %fallbackSimpleSort.exit.outer.backedge.i, %149
  %r.0.ph76.i = phi i32 [ 0, %149 ], [ %233, %fallbackSimpleSort.exit.outer.backedge.i ], !dbg !1214
  %sp.0.ph75.i = phi i32 [ 1, %149 ], [ %sp.0.ph.be.i, %fallbackSimpleSort.exit.outer.backedge.i ], !dbg !1214
  %153 = sext i32 %sp.0.ph75.i to i64
  br label %154, !dbg !1213

; <label>:154                                     ; preds = %fallbackSimpleSort.exit.backedge.i, %.lr.ph.i
  %indvars.iv168 = phi i64 [ %indvars.iv.next169, %fallbackSimpleSort.exit.backedge.i ], [ %153, %.lr.ph.i ]
  %sp.031.i = phi i32 [ %158, %fallbackSimpleSort.exit.backedge.i ], [ %sp.0.ph75.i, %.lr.ph.i ], !dbg !1214
  %155 = icmp slt i64 %indvars.iv168, 100, !dbg !1215
  br i1 %155, label %157, label %156, !dbg !1218

; <label>:156                                     ; preds = %154
  tail call void @BZ2_bz__AssertH__fail(i32 1004) #7, !dbg !1215
  br label %157, !dbg !1215

; <label>:157                                     ; preds = %156, %154
  %158 = add nsw i32 %sp.031.i, -1, !dbg !1219
  tail call void @llvm.dbg.value(metadata i32 %158, i64 0, metadata !160, metadata !375) #4, !dbg !1212
  %159 = sext i32 %158 to i64, !dbg !1219
  %160 = getelementptr inbounds [100 x i32]* %stackLo.i, i64 0, i64 %159, !dbg !1219
  %161 = load i32* %160, align 4, !dbg !1219, !tbaa !442
  tail call void @llvm.dbg.value(metadata i32 %161, i64 0, metadata !161, metadata !375) #4, !dbg !1221
  %162 = getelementptr inbounds [100 x i32]* %stackHi.i, i64 0, i64 %159, !dbg !1219
  %163 = load i32* %162, align 4, !dbg !1219, !tbaa !442
  tail call void @llvm.dbg.value(metadata i32 %163, i64 0, metadata !162, metadata !375) #4, !dbg !1222
  %164 = sub nsw i32 %163, %161, !dbg !1223
  %165 = icmp slt i32 %164, 10, !dbg !1225
  br i1 %165, label %166, label %229, !dbg !1226

; <label>:166                                     ; preds = %157
  tail call void @llvm.dbg.value(metadata i32* %fmap, i64 0, metadata !201, metadata !375) #4, !dbg !1227
  tail call void @llvm.dbg.value(metadata i32* %eclass, i64 0, metadata !202, metadata !375) #4, !dbg !1230
  tail call void @llvm.dbg.value(metadata i32 %161, i64 0, metadata !203, metadata !375) #4, !dbg !1231
  tail call void @llvm.dbg.value(metadata i32 %163, i64 0, metadata !204, metadata !375) #4, !dbg !1232
  %167 = icmp eq i32 %163, %161, !dbg !1233
  br i1 %167, label %fallbackSimpleSort.exit.backedge.i, label %169, !dbg !1235

fallbackSimpleSort.exit.backedge.i:               ; preds = %.critedge1.i.i, %.preheader.i.i, %166
  %168 = icmp sgt i64 %indvars.iv168, 1, !dbg !1236
  %indvars.iv.next169 = add nsw i64 %indvars.iv168, -1, !dbg !1213
  br i1 %168, label %154, label %fallbackQSort3.exit, !dbg !1213

; <label>:169                                     ; preds = %166
  %170 = icmp sgt i32 %164, 3, !dbg !1237
  br i1 %170, label %174, label %.preheader.i.i, !dbg !1239

.preheader.i.i:                                   ; preds = %.critedge.i.i, %174, %169
  %171 = icmp sgt i32 %163, %161, !dbg !1240
  br i1 %171, label %.lr.ph8.i.i, label %fallbackSimpleSort.exit.backedge.i, !dbg !1243

.lr.ph8.i.i:                                      ; preds = %.preheader.i.i
  %172 = sext i32 %163 to i64, !dbg !1243
  %173 = sext i32 %161 to i64, !dbg !1243
  br label %206, !dbg !1243

; <label>:174                                     ; preds = %169
  %175 = add i32 %163, -4, !dbg !1244
  tail call void @llvm.dbg.value(metadata i32 %175, i64 0, metadata !205, metadata !375) #4, !dbg !1247
  %176 = icmp slt i32 %175, %161, !dbg !1248
  br i1 %176, label %.preheader.i.i, label %.lr.ph17.i.i, !dbg !1250

.lr.ph17.i.i:                                     ; preds = %174
  %177 = sext i32 %175 to i64, !dbg !1251
  %178 = sext i32 %163 to i64, !dbg !1250
  %179 = sext i32 %161 to i64, !dbg !1250
  br label %180, !dbg !1250

; <label>:180                                     ; preds = %.critedge.i.i, %.lr.ph17.i.i
  %indvars.iv28.i.i = phi i64 [ %indvars.iv.next29.i.i, %.critedge.i.i ], [ %177, %.lr.ph17.i.i ], !dbg !1251
  %indvars.iv.i.i = phi i32 [ %indvars.iv.next.i.i, %.critedge.i.i ], [ %163, %.lr.ph17.i.i ], !dbg !1251
  %181 = getelementptr inbounds i32* %fmap, i64 %indvars.iv28.i.i, !dbg !1252
  %182 = load i32* %181, align 4, !dbg !1252, !tbaa !442
  tail call void @llvm.dbg.value(metadata i32 %182, i64 0, metadata !207, metadata !375) #4, !dbg !1254
  %183 = sext i32 %182 to i64, !dbg !1255
  %184 = getelementptr inbounds i32* %eclass, i64 %183, !dbg !1255
  %185 = load i32* %184, align 4, !dbg !1255, !tbaa !442
  tail call void @llvm.dbg.value(metadata i32 %185, i64 0, metadata !208, metadata !375) #4, !dbg !1256
  %186 = add nsw i64 %indvars.iv28.i.i, 4, !dbg !1257
  %187 = icmp sgt i64 %186, %178, !dbg !1259
  %188 = trunc i64 %indvars.iv28.i.i to i32, !dbg !1261
  br i1 %187, label %.critedge.i.i, label %.lr.ph12.i.i, !dbg !1261

.lr.ph12.i.i:                                     ; preds = %180
  %189 = sext i32 %indvars.iv.i.i to i64, !dbg !1251
  %190 = trunc i64 %186 to i32, !dbg !1261
  br label %191, !dbg !1261

; <label>:191                                     ; preds = %198, %.lr.ph12.i.i
  %indvars.iv25.i.i = phi i64 [ %189, %.lr.ph12.i.i ], [ %indvars.iv.next26.i.i, %198 ], !dbg !1251
  %j.011.i.i = phi i32 [ %190, %.lr.ph12.i.i ], [ %j.0.i.i, %198 ], !dbg !1251
  %j.0.in10.i.i = phi i32 [ %188, %.lr.ph12.i.i ], [ %202, %198 ], !dbg !1251
  %192 = getelementptr inbounds i32* %fmap, i64 %indvars.iv25.i.i, !dbg !1262
  %193 = load i32* %192, align 4, !dbg !1262, !tbaa !442
  %194 = zext i32 %193 to i64, !dbg !1263
  %195 = getelementptr inbounds i32* %eclass, i64 %194, !dbg !1263
  %196 = load i32* %195, align 4, !dbg !1263, !tbaa !442
  %197 = icmp ugt i32 %185, %196, !dbg !1264
  br i1 %197, label %198, label %.critedge.i.i, !dbg !1265

; <label>:198                                     ; preds = %191
  %199 = sext i32 %j.0.in10.i.i to i64, !dbg !1266
  %200 = getelementptr inbounds i32* %fmap, i64 %199, !dbg !1266
  store i32 %193, i32* %200, align 4, !dbg !1267, !tbaa !442
  %j.0.i.i = add nsw i32 %j.011.i.i, 4, !dbg !1257
  %201 = icmp sgt i32 %j.0.i.i, %163, !dbg !1259
  %indvars.iv.next26.i.i = add i64 %indvars.iv25.i.i, 4, !dbg !1261
  %202 = trunc i64 %indvars.iv25.i.i to i32, !dbg !1261
  br i1 %201, label %.critedge.i.i, label %191, !dbg !1261

.critedge.i.i:                                    ; preds = %198, %191, %180
  %j.0.in.lcssa.i.i = phi i32 [ %188, %180 ], [ %j.0.in10.i.i, %191 ], [ %202, %198 ], !dbg !1251
  %203 = sext i32 %j.0.in.lcssa.i.i to i64, !dbg !1268
  %204 = getelementptr inbounds i32* %fmap, i64 %203, !dbg !1268
  store i32 %182, i32* %204, align 4, !dbg !1269, !tbaa !442
  %205 = icmp sgt i64 %indvars.iv28.i.i, %179, !dbg !1248
  %indvars.iv.next.i.i = add i32 %indvars.iv.i.i, -1, !dbg !1250
  %indvars.iv.next29.i.i = add nsw i64 %indvars.iv28.i.i, -1, !dbg !1250
  br i1 %205, label %180, label %.preheader.i.i, !dbg !1250

; <label>:206                                     ; preds = %.critedge1.i.i, %.lr.ph8.i.i
  %indvars.iv23.i.i = phi i64 [ %172, %.lr.ph8.i.i ], [ %indvars.iv.next24.i.i, %.critedge1.i.i ], !dbg !1251
  %i.17.in.i.i = phi i32 [ %163, %.lr.ph8.i.i ], [ %i.17.i.i, %.critedge1.i.i ], !dbg !1251
  %indvars.iv.next24.i.i = add nsw i64 %indvars.iv23.i.i, -1, !dbg !1243
  %i.17.i.i = add nsw i32 %i.17.in.i.i, -1, !dbg !1270
  %207 = getelementptr inbounds i32* %fmap, i64 %indvars.iv.next24.i.i, !dbg !1271
  %208 = load i32* %207, align 4, !dbg !1271, !tbaa !442
  tail call void @llvm.dbg.value(metadata i32 %208, i64 0, metadata !207, metadata !375) #4, !dbg !1254
  %209 = sext i32 %208 to i64, !dbg !1273
  %210 = getelementptr inbounds i32* %eclass, i64 %209, !dbg !1273
  %211 = load i32* %210, align 4, !dbg !1273, !tbaa !442
  tail call void @llvm.dbg.value(metadata i32 %211, i64 0, metadata !208, metadata !375) #4, !dbg !1256
  tail call void @llvm.dbg.value(metadata i32 %i.17.i.i, i64 0, metadata !206, metadata !375) #4, !dbg !1274
  %212 = icmp sgt i32 %i.17.in.i.i, %163, !dbg !1275
  br i1 %212, label %.critedge1.i.i, label %.lr.ph.i.i, !dbg !1278

.lr.ph.i.i:                                       ; preds = %206, %219
  %indvars.iv21.i.i = phi i64 [ %indvars.iv.next22.i.i, %219 ], [ %indvars.iv23.i.i, %206 ], !dbg !1251
  %j.12.i.i = phi i32 [ %222, %219 ], [ %i.17.in.i.i, %206 ], !dbg !1251
  %213 = getelementptr inbounds i32* %fmap, i64 %indvars.iv21.i.i, !dbg !1279
  %214 = load i32* %213, align 4, !dbg !1279, !tbaa !442
  %215 = zext i32 %214 to i64, !dbg !1280
  %216 = getelementptr inbounds i32* %eclass, i64 %215, !dbg !1280
  %217 = load i32* %216, align 4, !dbg !1280, !tbaa !442
  %218 = icmp ugt i32 %211, %217, !dbg !1281
  br i1 %218, label %219, label %..critedge1_crit_edge3.i.i, !dbg !1282

; <label>:219                                     ; preds = %.lr.ph.i.i
  %220 = add nsw i64 %indvars.iv21.i.i, -1, !dbg !1283
  %221 = getelementptr inbounds i32* %fmap, i64 %220, !dbg !1284
  store i32 %214, i32* %221, align 4, !dbg !1285, !tbaa !442
  %222 = add nsw i32 %j.12.i.i, 1, !dbg !1286
  tail call void @llvm.dbg.value(metadata i32 %222, i64 0, metadata !206, metadata !375) #4, !dbg !1274
  %223 = icmp slt i64 %indvars.iv21.i.i, %172, !dbg !1275
  %indvars.iv.next22.i.i = add nsw i64 %indvars.iv21.i.i, 1, !dbg !1278
  br i1 %223, label %.lr.ph.i.i, label %.critedge1.i.i, !dbg !1278

..critedge1_crit_edge3.i.i:                       ; preds = %.lr.ph.i.i
  %224 = trunc i64 %indvars.iv21.i.i to i32, !dbg !1282
  br label %.critedge1.i.i, !dbg !1282

.critedge1.i.i:                                   ; preds = %219, %..critedge1_crit_edge3.i.i, %206
  %j.1.lcssa.i.i = phi i32 [ %224, %..critedge1_crit_edge3.i.i ], [ %i.17.in.i.i, %206 ], [ %222, %219 ], !dbg !1251
  %225 = add nsw i32 %j.1.lcssa.i.i, -1, !dbg !1287
  %226 = sext i32 %225 to i64, !dbg !1288
  %227 = getelementptr inbounds i32* %fmap, i64 %226, !dbg !1288
  store i32 %208, i32* %227, align 4, !dbg !1289, !tbaa !442
  %228 = icmp sgt i64 %indvars.iv.next24.i.i, %173, !dbg !1240
  br i1 %228, label %206, label %fallbackSimpleSort.exit.backedge.i, !dbg !1243

; <label>:229                                     ; preds = %157
  %230 = trunc i64 %indvars.iv168 to i32, !dbg !1290
  %231 = mul nuw nsw i32 %r.0.ph76.i, 7621, !dbg !1290
  %232 = add nuw nsw i32 %231, 1, !dbg !1291
  %233 = and i32 %232, 32767, !dbg !1292
  tail call void @llvm.dbg.value(metadata i32 %233, i64 0, metadata !164, metadata !375) #4, !dbg !1211
  %234 = urem i32 %233, 3, !dbg !1293
  tail call void @llvm.dbg.value(metadata i32 %234, i64 0, metadata !165, metadata !375) #4, !dbg !1294
  switch i32 %234, label %249 [
    i32 0, label %235
    i32 1, label %241
  ], !dbg !1295

; <label>:235                                     ; preds = %229
  %236 = sext i32 %161 to i64, !dbg !1296
  %237 = getelementptr inbounds i32* %fmap, i64 %236, !dbg !1296
  %238 = load i32* %237, align 4, !dbg !1296, !tbaa !442
  %239 = zext i32 %238 to i64, !dbg !1298
  %240 = getelementptr inbounds i32* %eclass, i64 %239, !dbg !1298
  br label %255, !dbg !1299

; <label>:241                                     ; preds = %229
  %242 = add nsw i32 %163, %161, !dbg !1300
  %243 = ashr i32 %242, 1, !dbg !1302
  %244 = sext i32 %243 to i64, !dbg !1303
  %245 = getelementptr inbounds i32* %fmap, i64 %244, !dbg !1303
  %246 = load i32* %245, align 4, !dbg !1303, !tbaa !442
  %247 = zext i32 %246 to i64, !dbg !1304
  %248 = getelementptr inbounds i32* %eclass, i64 %247, !dbg !1304
  br label %255, !dbg !1305

; <label>:249                                     ; preds = %229
  %250 = sext i32 %163 to i64, !dbg !1306
  %251 = getelementptr inbounds i32* %fmap, i64 %250, !dbg !1306
  %252 = load i32* %251, align 4, !dbg !1306, !tbaa !442
  %253 = zext i32 %252 to i64, !dbg !1307
  %254 = getelementptr inbounds i32* %eclass, i64 %253, !dbg !1307
  br label %255, !dbg !1214

; <label>:255                                     ; preds = %249, %241, %235
  %med.0.in.i = phi i32* [ %240, %235 ], [ %248, %241 ], [ %254, %249 ], !dbg !1214
  %med.0.i = load i32* %med.0.in.i, align 4, !dbg !1298
  tail call void @llvm.dbg.value(metadata i32 %161, i64 0, metadata !156, metadata !375) #4, !dbg !1308
  tail call void @llvm.dbg.value(metadata i32 %161, i64 0, metadata !154, metadata !375) #4, !dbg !1309
  tail call void @llvm.dbg.value(metadata i32 %163, i64 0, metadata !157, metadata !375) #4, !dbg !1310
  tail call void @llvm.dbg.value(metadata i32 %163, i64 0, metadata !155, metadata !375) #4, !dbg !1311
  br label %.outer9.i, !dbg !1312

.outer9.i:                                        ; preds = %302, %255
  %gtHi.0.ph.i = phi i32 [ %303, %302 ], [ %163, %255 ], !dbg !1214
  %ltLo.0.ph.i = phi i32 [ %ltLo.0.ph11.lcssa.i, %302 ], [ %161, %255 ], !dbg !1214
  %unHi.0.ph.i = phi i32 [ %309, %302 ], [ %163, %255 ], !dbg !1214
  %unLo.0.ph.i = phi i32 [ %308, %302 ], [ %161, %255 ], !dbg !1214
  %256 = icmp sgt i32 %unLo.0.ph.i, %unHi.0.ph.i, !dbg !1313
  br i1 %256, label %.preheader.i, label %.lr.ph33.lr.ph.i, !dbg !1315

.lr.ph33.lr.ph.i:                                 ; preds = %.outer9.i
  %257 = sext i32 %unHi.0.ph.i to i64, !dbg !1315
  %258 = sext i32 %ltLo.0.ph.i to i64, !dbg !1214
  br label %.lr.ph33.i, !dbg !1315

.lr.ph33.i:                                       ; preds = %.outer10.i, %.lr.ph33.lr.ph.i
  %indvars.iv129.i = phi i64 [ %indvars.iv.next130.i, %.outer10.i ], [ %258, %.lr.ph33.lr.ph.i ], !dbg !1214
  %unLo.0.ph1341.i = phi i32 [ %271, %.outer10.i ], [ %unLo.0.ph.i, %.lr.ph33.lr.ph.i ], !dbg !1214
  %ltLo.0.ph1140.i = phi i32 [ %270, %.outer10.i ], [ %ltLo.0.ph.i, %.lr.ph33.lr.ph.i ], !dbg !1214
  %259 = sext i32 %unLo.0.ph1341.i to i64, !dbg !1214
  br label %260, !dbg !1315

; <label>:260                                     ; preds = %280, %.lr.ph33.i
  %indvars.iv127.i = phi i64 [ %indvars.iv.next128.i, %280 ], [ %259, %.lr.ph33.i ], !dbg !1214
  %unLo.032.i = phi i32 [ %281, %280 ], [ %unLo.0.ph1341.i, %.lr.ph33.i ], !dbg !1214
  %261 = getelementptr inbounds i32* %fmap, i64 %indvars.iv127.i, !dbg !1316
  %262 = load i32* %261, align 4, !dbg !1316, !tbaa !442
  %263 = zext i32 %262 to i64, !dbg !1317
  %264 = getelementptr inbounds i32* %eclass, i64 %263, !dbg !1317
  %265 = load i32* %264, align 4, !dbg !1317, !tbaa !442
  %266 = icmp eq i32 %265, %med.0.i, !dbg !1318
  br i1 %266, label %.outer10.i, label %273, !dbg !1319

.outer10.i:                                       ; preds = %260
  %267 = trunc i64 %indvars.iv127.i to i32, !dbg !1320
  tail call void @llvm.dbg.value(metadata i32 %262, i64 0, metadata !171, metadata !375) #4, !dbg !1320
  %268 = getelementptr inbounds i32* %fmap, i64 %indvars.iv129.i, !dbg !1320
  %269 = load i32* %268, align 4, !dbg !1320, !tbaa !442
  store i32 %269, i32* %261, align 4, !dbg !1320, !tbaa !442
  store i32 %262, i32* %268, align 4, !dbg !1320, !tbaa !442
  %270 = add nsw i32 %ltLo.0.ph1140.i, 1, !dbg !1321
  tail call void @llvm.dbg.value(metadata i32 %270, i64 0, metadata !156, metadata !375) #4, !dbg !1308
  %271 = add nsw i32 %267, 1, !dbg !1322
  tail call void @llvm.dbg.value(metadata i32 %271, i64 0, metadata !154, metadata !375) #4, !dbg !1309
  %272 = icmp slt i32 %267, %unHi.0.ph.i, !dbg !1313
  %indvars.iv.next130.i = add i64 %indvars.iv129.i, 1, !dbg !1315
  br i1 %272, label %.lr.ph33.i, label %.preheader.i, !dbg !1315

; <label>:273                                     ; preds = %260
  %274 = icmp sgt i32 %265, %med.0.i, !dbg !1323
  br i1 %274, label %..preheader_crit_edge37.i, label %280, !dbg !1325

..preheader_crit_edge.i:                          ; preds = %280
  %275 = trunc i64 %indvars.iv129.i to i32, !dbg !1315
  br label %.preheader.i, !dbg !1315

..preheader_crit_edge37.i:                        ; preds = %273
  %276 = trunc i64 %indvars.iv129.i to i32, !dbg !1325
  %277 = trunc i64 %indvars.iv127.i to i32, !dbg !1325
  br label %.preheader.i, !dbg !1325

.preheader.i:                                     ; preds = %.outer10.i, %..preheader_crit_edge37.i, %..preheader_crit_edge.i, %.outer9.i
  %ltLo.0.ph11.lcssa.i = phi i32 [ %275, %..preheader_crit_edge.i ], [ %276, %..preheader_crit_edge37.i ], [ %ltLo.0.ph.i, %.outer9.i ], [ %270, %.outer10.i ], !dbg !1214
  %unLo.0.lcssa.i = phi i32 [ %281, %..preheader_crit_edge.i ], [ %277, %..preheader_crit_edge37.i ], [ %unLo.0.ph.i, %.outer9.i ], [ %271, %.outer10.i ], !dbg !1214
  %278 = icmp sgt i32 %unLo.0.lcssa.i, %unHi.0.ph.i, !dbg !1326
  br i1 %278, label %.critedge.i, label %.lr.ph45.lr.ph.i, !dbg !1328

.lr.ph45.lr.ph.i:                                 ; preds = %.preheader.i
  %279 = sext i32 %gtHi.0.ph.i to i64, !dbg !1214
  br label %.lr.ph45.i, !dbg !1328

; <label>:280                                     ; preds = %273
  %281 = add nsw i32 %unLo.032.i, 1, !dbg !1329
  tail call void @llvm.dbg.value(metadata i32 %281, i64 0, metadata !154, metadata !375) #4, !dbg !1309
  %282 = icmp slt i64 %indvars.iv127.i, %257, !dbg !1313
  %indvars.iv.next128.i = add nsw i64 %indvars.iv127.i, 1, !dbg !1315
  br i1 %282, label %260, label %..preheader_crit_edge.i, !dbg !1315

; <label>:283                                     ; preds = %299, %.lr.ph45.i
  %indvars.iv131.i = phi i64 [ %296, %.lr.ph45.i ], [ %indvars.iv.next132.i, %299 ], !dbg !1214
  %unHi.144.i = phi i32 [ %unHi.1.ph55.i, %.lr.ph45.i ], [ %300, %299 ], !dbg !1214
  %284 = getelementptr inbounds i32* %fmap, i64 %indvars.iv131.i, !dbg !1330
  %285 = load i32* %284, align 4, !dbg !1330, !tbaa !442
  %286 = zext i32 %285 to i64, !dbg !1331
  %287 = getelementptr inbounds i32* %eclass, i64 %286, !dbg !1331
  %288 = load i32* %287, align 4, !dbg !1331, !tbaa !442
  %289 = icmp eq i32 %288, %med.0.i, !dbg !1332
  br i1 %289, label %.outer.i, label %297, !dbg !1333

.outer.i:                                         ; preds = %283
  %290 = trunc i64 %indvars.iv131.i to i32, !dbg !1334
  tail call void @llvm.dbg.value(metadata i32 %285, i64 0, metadata !178, metadata !375) #4, !dbg !1334
  %291 = getelementptr inbounds i32* %fmap, i64 %indvars.iv133.i, !dbg !1334
  %292 = load i32* %291, align 4, !dbg !1334, !tbaa !442
  store i32 %292, i32* %284, align 4, !dbg !1334, !tbaa !442
  store i32 %285, i32* %291, align 4, !dbg !1334, !tbaa !442
  %293 = add nsw i32 %gtHi.1.ph54.i, -1, !dbg !1335
  tail call void @llvm.dbg.value(metadata i32 %293, i64 0, metadata !157, metadata !375) #4, !dbg !1310
  %294 = add nsw i32 %290, -1, !dbg !1336
  tail call void @llvm.dbg.value(metadata i32 %294, i64 0, metadata !155, metadata !375) #4, !dbg !1311
  %295 = icmp sgt i32 %unLo.0.lcssa.i, %294, !dbg !1326
  %indvars.iv.next134.i = add i64 %indvars.iv133.i, -1, !dbg !1328
  br i1 %295, label %.critedge.i, label %.lr.ph45.i, !dbg !1328

.lr.ph45.i:                                       ; preds = %.outer.i, %.lr.ph45.lr.ph.i
  %indvars.iv133.i = phi i64 [ %279, %.lr.ph45.lr.ph.i ], [ %indvars.iv.next134.i, %.outer.i ], !dbg !1214
  %unHi.1.ph55.i = phi i32 [ %unHi.0.ph.i, %.lr.ph45.lr.ph.i ], [ %294, %.outer.i ], !dbg !1214
  %gtHi.1.ph54.i = phi i32 [ %gtHi.0.ph.i, %.lr.ph45.lr.ph.i ], [ %293, %.outer.i ], !dbg !1214
  %296 = sext i32 %unHi.1.ph55.i to i64, !dbg !1214
  br label %283, !dbg !1328

; <label>:297                                     ; preds = %283
  %298 = icmp slt i32 %288, %med.0.i, !dbg !1337
  br i1 %298, label %302, label %299, !dbg !1339

; <label>:299                                     ; preds = %297
  %300 = add nsw i32 %unHi.144.i, -1, !dbg !1340
  tail call void @llvm.dbg.value(metadata i32 %300, i64 0, metadata !155, metadata !375) #4, !dbg !1311
  %301 = icmp sgt i32 %unLo.0.lcssa.i, %300, !dbg !1326
  %indvars.iv.next132.i = add i64 %indvars.iv131.i, -1, !dbg !1328
  br i1 %301, label %..critedge_crit_edge.i, label %283, !dbg !1328

; <label>:302                                     ; preds = %297
  %303 = trunc i64 %indvars.iv133.i to i32, !dbg !1341
  %304 = trunc i64 %indvars.iv131.i to i32, !dbg !1341
  %305 = sext i32 %unLo.0.lcssa.i to i64, !dbg !1341
  %306 = getelementptr inbounds i32* %fmap, i64 %305, !dbg !1341
  %307 = load i32* %306, align 4, !dbg !1341, !tbaa !442
  tail call void @llvm.dbg.value(metadata i32 %307, i64 0, metadata !183, metadata !375) #4, !dbg !1341
  store i32 %285, i32* %306, align 4, !dbg !1341, !tbaa !442
  store i32 %307, i32* %284, align 4, !dbg !1341, !tbaa !442
  %308 = add nsw i32 %unLo.0.lcssa.i, 1, !dbg !1342
  tail call void @llvm.dbg.value(metadata i32 %308, i64 0, metadata !154, metadata !375) #4, !dbg !1309
  %309 = add nsw i32 %304, -1, !dbg !1343
  tail call void @llvm.dbg.value(metadata i32 %309, i64 0, metadata !155, metadata !375) #4, !dbg !1311
  br label %.outer9.i, !dbg !1312

..critedge_crit_edge.i:                           ; preds = %299
  %310 = trunc i64 %indvars.iv133.i to i32, !dbg !1328
  br label %.critedge.i, !dbg !1328

.critedge.i:                                      ; preds = %.preheader.i, %.outer.i, %..critedge_crit_edge.i
  %gtHi.1.ph.lcssa30.i = phi i32 [ %310, %..critedge_crit_edge.i ], [ %293, %.outer.i ], [ %gtHi.0.ph.i, %.preheader.i ], !dbg !1214
  %unHi.1.lcssa.i = phi i32 [ %300, %..critedge_crit_edge.i ], [ %294, %.outer.i ], [ %unHi.0.ph.i, %.preheader.i ], !dbg !1214
  %311 = icmp slt i32 %gtHi.1.ph.lcssa30.i, %ltLo.0.ph11.lcssa.i, !dbg !1344
  br i1 %311, label %fallbackSimpleSort.exit.outer.backedge.i, label %313, !dbg !1346

fallbackSimpleSort.exit.outer.backedge.i:         ; preds = %361, %356, %.critedge.i
  %sp.0.ph.be.i = phi i32 [ %365, %361 ], [ %360, %356 ], [ %158, %.critedge.i ], !dbg !1214
  %312 = icmp sgt i32 %sp.0.ph.be.i, 0, !dbg !1236
  br i1 %312, label %.lr.ph.i, label %fallbackQSort3.exit, !dbg !1213

; <label>:313                                     ; preds = %.critedge.i
  %314 = sub nsw i32 %ltLo.0.ph11.lcssa.i, %161, !dbg !1347
  %315 = sub nsw i32 %unLo.0.lcssa.i, %ltLo.0.ph11.lcssa.i, !dbg !1347
  %316 = icmp slt i32 %314, %315, !dbg !1347
  %..i = select i1 %316, i32 %314, i32 %315, !dbg !1347
  tail call void @llvm.dbg.value(metadata i32 %..i, i64 0, metadata !158, metadata !375) #4, !dbg !1348
  tail call void @llvm.dbg.value(metadata i32 %161, i64 0, metadata !185, metadata !375) #4, !dbg !1349
  tail call void @llvm.dbg.value(metadata i32 %..i, i64 0, metadata !188, metadata !375) #4, !dbg !1349
  %317 = icmp sgt i32 %..i, 0, !dbg !1349
  br i1 %317, label %.lr.ph67.i, label %._crit_edge.i, !dbg !1349

.lr.ph67.i:                                       ; preds = %313
  %318 = add i32 %unLo.0.lcssa.i, 1, !dbg !1349
  %319 = add i32 %ltLo.0.ph11.lcssa.i, -1, !dbg !1349
  %320 = sub i32 %319, %unLo.0.lcssa.i, !dbg !1349
  %321 = add i32 %161, -1, !dbg !1349
  %322 = sub i32 %321, %ltLo.0.ph11.lcssa.i, !dbg !1349
  %323 = icmp sgt i32 %320, %322, !dbg !1214
  %smax.i = select i1 %323, i32 %320, i32 %322, !dbg !1214
  %324 = add i32 %318, %smax.i, !dbg !1349
  %325 = sext i32 %324 to i64, !dbg !1214
  %326 = sext i32 %161 to i64, !dbg !1214
  br label %327, !dbg !1349

; <label>:327                                     ; preds = %327, %.lr.ph67.i
  %indvars.iv137.i = phi i64 [ %326, %.lr.ph67.i ], [ %indvars.iv.next138.i, %327 ], !dbg !1214
  %indvars.iv135.i = phi i64 [ %325, %.lr.ph67.i ], [ %indvars.iv.next136.i, %327 ], !dbg !1214
  %yyn.066.i = phi i32 [ %..i, %.lr.ph67.i ], [ %332, %327 ], !dbg !1214
  %328 = getelementptr inbounds i32* %fmap, i64 %indvars.iv137.i, !dbg !1350
  %329 = load i32* %328, align 4, !dbg !1350, !tbaa !442
  tail call void @llvm.dbg.value(metadata i32 %329, i64 0, metadata !189, metadata !375) #4, !dbg !1350
  %330 = getelementptr inbounds i32* %fmap, i64 %indvars.iv135.i, !dbg !1350
  %331 = load i32* %330, align 4, !dbg !1350, !tbaa !442
  store i32 %331, i32* %328, align 4, !dbg !1350, !tbaa !442
  store i32 %329, i32* %330, align 4, !dbg !1350, !tbaa !442
  %indvars.iv.next138.i = add nsw i64 %indvars.iv137.i, 1, !dbg !1349
  %332 = add nsw i32 %yyn.066.i, -1, !dbg !1351
  tail call void @llvm.dbg.value(metadata i32 %332, i64 0, metadata !188, metadata !375) #4, !dbg !1349
  %333 = icmp sgt i32 %yyn.066.i, 1, !dbg !1349
  %indvars.iv.next136.i = add nsw i64 %indvars.iv135.i, 1, !dbg !1349
  br i1 %333, label %327, label %._crit_edge.i, !dbg !1349

._crit_edge.i:                                    ; preds = %327, %313
  %334 = sub nsw i32 %163, %gtHi.1.ph.lcssa30.i, !dbg !1352
  %335 = sub nsw i32 %gtHi.1.ph.lcssa30.i, %unHi.1.lcssa.i, !dbg !1352
  %336 = icmp slt i32 %334, %335, !dbg !1352
  %.8.i = select i1 %336, i32 %334, i32 %335, !dbg !1352
  tail call void @llvm.dbg.value(metadata i32 %.8.i, i64 0, metadata !159, metadata !375) #4, !dbg !1353
  tail call void @llvm.dbg.value(metadata i32 %281, i64 0, metadata !192, metadata !375) #4, !dbg !1354
  tail call void @llvm.dbg.value(metadata i32 %.8.i, i64 0, metadata !195, metadata !375) #4, !dbg !1354
  %337 = icmp sgt i32 %.8.i, 0, !dbg !1354
  br i1 %337, label %.lr.ph73.i, label %._crit_edge74.i, !dbg !1354

.lr.ph73.i:                                       ; preds = %._crit_edge.i
  %338 = sub nsw i32 %163, %.8.i, !dbg !1354
  %339 = sext i32 %unLo.0.lcssa.i to i64, !dbg !1214
  br label %340, !dbg !1354

; <label>:340                                     ; preds = %340, %.lr.ph73.i
  %indvars.iv146.i = phi i64 [ %339, %.lr.ph73.i ], [ %indvars.iv.next147.i, %340 ], !dbg !1214
  %yyp25.071.in.i = phi i32 [ %338, %.lr.ph73.i ], [ %yyp25.071.i, %340 ], !dbg !1214
  %yyn6.070.i = phi i32 [ %.8.i, %.lr.ph73.i ], [ %346, %340 ], !dbg !1214
  %yyp25.071.i = add nsw i32 %yyp25.071.in.i, 1, !dbg !1354
  %341 = getelementptr inbounds i32* %fmap, i64 %indvars.iv146.i, !dbg !1355
  %342 = load i32* %341, align 4, !dbg !1355, !tbaa !442
  tail call void @llvm.dbg.value(metadata i32 %342, i64 0, metadata !196, metadata !375) #4, !dbg !1355
  %343 = sext i32 %yyp25.071.i to i64, !dbg !1355
  %344 = getelementptr inbounds i32* %fmap, i64 %343, !dbg !1355
  %345 = load i32* %344, align 4, !dbg !1355, !tbaa !442
  store i32 %345, i32* %341, align 4, !dbg !1355, !tbaa !442
  store i32 %342, i32* %344, align 4, !dbg !1355, !tbaa !442
  %indvars.iv.next147.i = add nsw i64 %indvars.iv146.i, 1, !dbg !1354
  %346 = add nsw i32 %yyn6.070.i, -1, !dbg !1356
  tail call void @llvm.dbg.value(metadata i32 %346, i64 0, metadata !195, metadata !375) #4, !dbg !1354
  %347 = icmp sgt i32 %yyn6.070.i, 1, !dbg !1354
  br i1 %347, label %340, label %._crit_edge74.i, !dbg !1354

._crit_edge74.i:                                  ; preds = %340, %._crit_edge.i
  %348 = add i32 %161, -1, !dbg !1357
  %349 = sub i32 %348, %ltLo.0.ph11.lcssa.i, !dbg !1358
  %350 = add i32 %349, %unLo.0.lcssa.i, !dbg !1359
  tail call void @llvm.dbg.value(metadata i32 %350, i64 0, metadata !158, metadata !375) #4, !dbg !1348
  %351 = sub nsw i32 %163, %335, !dbg !1360
  %352 = add nsw i32 %351, 1, !dbg !1361
  tail call void @llvm.dbg.value(metadata i32 %352, i64 0, metadata !159, metadata !375) #4, !dbg !1353
  %353 = sub nsw i32 %350, %161, !dbg !1362
  %354 = sub nsw i32 %163, %352, !dbg !1364
  %355 = icmp sgt i32 %353, %354, !dbg !1365
  br i1 %355, label %356, label %361, !dbg !1366

; <label>:356                                     ; preds = %._crit_edge74.i
  store i32 %161, i32* %160, align 4, !dbg !1367, !tbaa !442
  store i32 %350, i32* %162, align 4, !dbg !1367, !tbaa !442
  tail call void @llvm.dbg.value(metadata i32 %158, i64 0, metadata !160, metadata !375) #4, !dbg !1212
  %sext151.i = shl i64 %indvars.iv168, 32, !dbg !1370
  %357 = ashr exact i64 %sext151.i, 32, !dbg !1370
  %358 = getelementptr inbounds [100 x i32]* %stackLo.i, i64 0, i64 %357, !dbg !1370
  store i32 %352, i32* %358, align 4, !dbg !1370, !tbaa !442
  %359 = getelementptr inbounds [100 x i32]* %stackHi.i, i64 0, i64 %357, !dbg !1370
  store i32 %163, i32* %359, align 4, !dbg !1370, !tbaa !442
  %360 = add nsw i32 %230, 1, !dbg !1370
  tail call void @llvm.dbg.value(metadata i32 %360, i64 0, metadata !160, metadata !375) #4, !dbg !1212
  br label %fallbackSimpleSort.exit.outer.backedge.i, !dbg !1372

; <label>:361                                     ; preds = %._crit_edge74.i
  store i32 %352, i32* %160, align 4, !dbg !1373, !tbaa !442
  store i32 %163, i32* %162, align 4, !dbg !1373, !tbaa !442
  tail call void @llvm.dbg.value(metadata i32 %158, i64 0, metadata !160, metadata !375) #4, !dbg !1212
  %sext.i = shl i64 %indvars.iv168, 32, !dbg !1376
  %362 = ashr exact i64 %sext.i, 32, !dbg !1376
  %363 = getelementptr inbounds [100 x i32]* %stackLo.i, i64 0, i64 %362, !dbg !1376
  store i32 %161, i32* %363, align 4, !dbg !1376, !tbaa !442
  %364 = getelementptr inbounds [100 x i32]* %stackHi.i, i64 0, i64 %362, !dbg !1376
  store i32 %350, i32* %364, align 4, !dbg !1376, !tbaa !442
  %365 = add nsw i32 %230, 1, !dbg !1376
  tail call void @llvm.dbg.value(metadata i32 %365, i64 0, metadata !160, metadata !375) #4, !dbg !1212
  br label %fallbackSimpleSort.exit.outer.backedge.i, !dbg !1214

fallbackQSort3.exit:                              ; preds = %fallbackSimpleSort.exit.outer.backedge.i, %fallbackSimpleSort.exit.backedge.i
  call void @llvm.lifetime.end(i64 400, i8* %49) #4, !dbg !1378
  call void @llvm.lifetime.end(i64 400, i8* %48) #4, !dbg !1378
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !141, metadata !375), !dbg !1379
  tail call void @llvm.dbg.value(metadata i32 %117, i64 0, metadata !136, metadata !375), !dbg !1123
  %366 = icmp sgt i32 %117, %145, !dbg !1380
  br i1 %366, label %.outer, label %.lr.ph92, !dbg !1383

.lr.ph92:                                         ; preds = %fallbackQSort3.exit
  %367 = sext i32 %117 to i64
  %368 = sext i32 %145 to i64, !dbg !1383
  br label %369, !dbg !1383

; <label>:369                                     ; preds = %385, %.lr.ph92
  %indvars.iv177 = phi i64 [ %indvars.iv.next178, %385 ], [ %367, %.lr.ph92 ]
  %cc.090 = phi i32 [ %cc.1, %385 ], [ -1, %.lr.ph92 ]
  %370 = getelementptr inbounds i32* %fmap, i64 %indvars.iv177, !dbg !1384
  %371 = load i32* %370, align 4, !dbg !1384, !tbaa !442
  %372 = zext i32 %371 to i64, !dbg !1386
  %373 = getelementptr inbounds i32* %eclass, i64 %372, !dbg !1386
  %374 = load i32* %373, align 4, !dbg !1386, !tbaa !442
  tail call void @llvm.dbg.value(metadata i32 %374, i64 0, metadata !142, metadata !375), !dbg !1387
  %375 = icmp eq i32 %cc.090, %374, !dbg !1388
  br i1 %375, label %385, label %376, !dbg !1390

; <label>:376                                     ; preds = %369
  %377 = trunc i64 %indvars.iv177 to i32, !dbg !1391
  %378 = and i32 %377, 31, !dbg !1391
  %379 = shl i32 1, %378, !dbg !1391
  %380 = ashr i32 %377, 5, !dbg !1391
  %381 = sext i32 %380 to i64, !dbg !1391
  %382 = getelementptr inbounds i32* %bhtab, i64 %381, !dbg !1391
  %383 = load i32* %382, align 4, !dbg !1391, !tbaa !442
  %384 = or i32 %383, %379, !dbg !1391
  store i32 %384, i32* %382, align 4, !dbg !1391, !tbaa !442
  tail call void @llvm.dbg.value(metadata i32 %374, i64 0, metadata !141, metadata !375), !dbg !1379
  br label %385, !dbg !1393

; <label>:385                                     ; preds = %369, %376
  %cc.1 = phi i32 [ %374, %376 ], [ %cc.090, %369 ]
  %indvars.iv.next178 = add nsw i64 %indvars.iv177, 1, !dbg !1383
  %386 = icmp slt i64 %indvars.iv177, %368, !dbg !1380
  br i1 %386, label %369, label %.outer, !dbg !1383

; <label>:387                                     ; preds = %.loopexit7, %.loopexit11
  br i1 %4, label %388, label %391, !dbg !1394

; <label>:388                                     ; preds = %387
  %389 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1395, !tbaa !459
  %390 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %389, i8* getelementptr inbounds ([24 x i8]* @.str4, i64 0, i64 0), i32 %nNotDone.0.ph) #7, !dbg !1395
  br label %391, !dbg !1395

; <label>:391                                     ; preds = %388, %387
  %392 = shl nsw i32 %H.0, 1, !dbg !1397
  tail call void @llvm.dbg.value(metadata i32 %392, i64 0, metadata !135, metadata !375), !dbg !1398
  %393 = icmp sgt i32 %392, %nblock, !dbg !1399
  %394 = icmp eq i32 %nNotDone.0.ph, 0, !dbg !1401
  %or.cond = or i1 %393, %394, !dbg !1402
  br i1 %or.cond, label %395, label %72, !dbg !1402

; <label>:395                                     ; preds = %391
  br i1 %4, label %396, label %.preheader3, !dbg !1403

; <label>:396                                     ; preds = %395
  %397 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1404, !tbaa !459
  %398 = tail call i64 @fwrite(i8* getelementptr inbounds ([34 x i8]* @.str5, i64 0, i64 0), i64 33, i64 1, %struct.__sFILE* %397), !dbg !1404
  br label %.preheader3, !dbg !1404

.preheader3:                                      ; preds = %396, %395
  br i1 %8, label %.preheader, label %.thread, !dbg !1406

.preheader:                                       ; preds = %.preheader3, %404
  %indvars.iv162 = phi i64 [ %indvars.iv.next163, %404 ], [ 0, %.preheader3 ]
  %j.281 = phi i64 [ %indvars.iv, %404 ], [ 0, %.preheader3 ]
  %sext = shl i64 %j.281, 32
  %399 = ashr exact i64 %sext, 32
  br label %400, !dbg !1408

; <label>:400                                     ; preds = %400, %.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %400 ], [ %399, %.preheader ]
  %401 = getelementptr inbounds [256 x i32]* %ftabCopy, i64 0, i64 %indvars.iv, !dbg !1408
  %402 = load i32* %401, align 4, !dbg !1408, !tbaa !442
  %403 = icmp eq i32 %402, 0, !dbg !1411
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1412
  br i1 %403, label %400, label %404, !dbg !1412

; <label>:404                                     ; preds = %400
  %405 = add nsw i32 %402, -1, !dbg !1413
  store i32 %405, i32* %401, align 4, !dbg !1413, !tbaa !442
  %406 = trunc i64 %indvars.iv to i8, !dbg !1414
  %407 = getelementptr inbounds i32* %fmap, i64 %indvars.iv162, !dbg !1415
  %408 = load i32* %407, align 4, !dbg !1415, !tbaa !442
  %409 = zext i32 %408 to i64, !dbg !1416
  %410 = getelementptr inbounds i8* %3, i64 %409, !dbg !1416
  store i8 %406, i8* %410, align 1, !dbg !1417, !tbaa !467
  %indvars.iv.next163 = add nuw nsw i64 %indvars.iv162, 1, !dbg !1406
  %lftr.wideiv = trunc i64 %indvars.iv162 to i32, !dbg !1406
  %exitcond = icmp eq i32 %lftr.wideiv, %52, !dbg !1406
  br i1 %exitcond, label %411, label %.preheader, !dbg !1406

; <label>:411                                     ; preds = %404
  %412 = trunc i64 %indvars.iv to i32, !dbg !1413
  %phitmp = icmp slt i32 %412, 256, !dbg !1406
  br i1 %phitmp, label %.thread, label %413, !dbg !1418

; <label>:413                                     ; preds = %411
  tail call void @BZ2_bz__AssertH__fail(i32 1005) #7, !dbg !1420
  br label %.thread, !dbg !1420

.thread:                                          ; preds = %.preheader3, %413, %411
  call void @llvm.lifetime.end(i64 1024, i8* %2) #4, !dbg !1422
  call void @llvm.lifetime.end(i64 1028, i8* %1) #4, !dbg !1422
  ret void, !dbg !1422
}
