define internal fastcc %struct.zzzz* @snocString(%struct.zzzz* %root, i8* %name) #0 {
  %1 = icmp eq %struct.zzzz* %root, null
  br i1 %1, label %2, label %.preheader

; <label>:2                                       ; preds = %0
  %3 = tail call i8* @malloc(i64 16) #9
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %mkCell.exit

; <label>:5                                       ; preds = %2
  tail call fastcc void @outOfMemory() #11
  unreachable

mkCell.exit:                                      ; preds = %2
  tail call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 16, i32 8, i1 false) #6
  %6 = tail call i64 @strlen(i8* %name) #9
  %7 = shl i64 %6, 32
  %sext = add i64 %7, 21474836480
  %8 = ashr exact i64 %sext, 32
  %9 = tail call i8* @malloc(i64 %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %myMalloc.exit

; <label>:11                                      ; preds = %mkCell.exit
  tail call fastcc void @outOfMemory() #11
  unreachable

myMalloc.exit:                                    ; preds = %mkCell.exit
  %12 = bitcast i8* %3 to %struct.zzzz*
  %13 = bitcast i8* %3 to i8**
  store i8* %9, i8** %13, align 8, !tbaa !9
  %14 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %9, i1 false)
  %15 = tail call i8* @__strcpy_chk(i8* %9, i8* %name, i64 %14) #9
  ret %struct.zzzz* %12

.preheader:                                       ; preds = %0, %.preheader
  %tmp1.0 = phi %struct.zzzz* [ %17, %.preheader ], [ %root, %0 ]
  %16 = getelementptr inbounds %struct.zzzz* %tmp1.0, i64 0, i32 1
  %17 = load %struct.zzzz** %16, align 8, !tbaa !11
  %18 = icmp eq %struct.zzzz* %17, null
  br i1 %18, label %19, label %.preheader

; <label>:19                                      ; preds = %.preheader
  %20 = tail call fastcc %struct.zzzz* @snocString(%struct.zzzz* null, i8* %name) #10
  store %struct.zzzz* %20, %struct.zzzz** %16, align 8, !tbaa !11
  ret %struct.zzzz* %root
}
