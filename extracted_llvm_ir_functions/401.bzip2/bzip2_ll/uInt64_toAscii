define internal fastcc void @uInt64_toAscii(i8* nocapture %outbuf, %struct.UInt64* nocapture readonly %n) #0 {
  %buf = alloca [32 x i8], align 16
  %n_copy = alloca i64, align 8, !dbg !2682
  %tmpcast = bitcast i64* %n_copy to %struct.UInt64*, !dbg !2682
  tail call void @llvm.dbg.value(metadata i8* %outbuf, i64 0, metadata !380, metadata !524), !dbg !2683
  tail call void @llvm.dbg.value(metadata %struct.UInt64* %n, i64 0, metadata !381, metadata !524), !dbg !2684
  tail call void @llvm.dbg.declare(metadata [32 x i8]* %buf, metadata !384, metadata !524), !dbg !2685
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !386, metadata !524), !dbg !2686
  %1 = bitcast %struct.UInt64* %n to i64*, !dbg !2682
  %2 = load i64* %1, align 1, !dbg !2682
  store i64 %2, i64* %n_copy, align 8, !dbg !2682
  br label %uInt64_isZero.exit.thread, !dbg !2687

uInt64_isZero.exit.thread:                        ; preds = %18, %0
  %indvars.iv7 = phi i64 [ 0, %0 ], [ %indvars.iv.next8, %18 ]
  tail call void @llvm.dbg.value(metadata %struct.UInt64* %tmpcast, i64 0, metadata !387, metadata !524), !dbg !2688
  tail call void @llvm.dbg.value(metadata %struct.UInt64* %tmpcast, i64 0, metadata !392, metadata !524), !dbg !2689
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !393, metadata !524), !dbg !2692
  tail call void @llvm.dbg.value(metadata i32 7, i64 0, metadata !395, metadata !524), !dbg !2693
  br label %3, !dbg !2694

; <label>:3                                       ; preds = %3, %uInt64_isZero.exit.thread
  %indvars.iv.i = phi i64 [ 7, %uInt64_isZero.exit.thread ], [ %indvars.iv.next.i, %3 ], !dbg !2696
  %rem.01.i = phi i32 [ 0, %uInt64_isZero.exit.thread ], [ %11, %3 ], !dbg !2696
  %4 = shl nuw nsw i32 %rem.01.i, 8, !dbg !2697
  %5 = getelementptr inbounds %struct.UInt64* %tmpcast, i64 0, i32 0, i64 %indvars.iv.i, !dbg !2700
  %6 = load i8* %5, align 1, !dbg !2700, !tbaa !547
  %7 = zext i8 %6 to i32, !dbg !2700
  %8 = or i32 %7, %4, !dbg !2701
  tail call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !394, metadata !524), !dbg !2702
  %9 = udiv i32 %8, 10, !dbg !2703
  %10 = trunc i32 %9 to i8, !dbg !2704
  store i8 %10, i8* %5, align 1, !dbg !2705, !tbaa !547
  %11 = urem i32 %8, 10, !dbg !2706
  tail call void @llvm.dbg.value(metadata i32 %11, i64 0, metadata !393, metadata !524), !dbg !2692
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1, !dbg !2694
  %12 = icmp sgt i64 %indvars.iv.i, 0, !dbg !2707
  br i1 %12, label %3, label %uInt64_qrm10.exit, !dbg !2694

uInt64_qrm10.exit:                                ; preds = %3
  tail call void @llvm.dbg.value(metadata i32 %11, i64 0, metadata !383, metadata !524), !dbg !2708
  %13 = or i32 %11, 48, !dbg !2709
  %14 = trunc i32 %13 to i8, !dbg !2710
  %15 = getelementptr inbounds [32 x i8]* %buf, i64 0, i64 %indvars.iv7, !dbg !2711
  store i8 %14, i8* %15, align 1, !dbg !2712, !tbaa !547
  %indvars.iv.next8 = add nuw i64 %indvars.iv7, 1
  tail call void @llvm.dbg.value(metadata %struct.UInt64* %tmpcast, i64 0, metadata !387, metadata !524), !dbg !2688
  tail call void @llvm.dbg.value(metadata %struct.UInt64* %tmpcast, i64 0, metadata !400, metadata !524), !dbg !2713
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !401, metadata !524), !dbg !2715
  br label %18, !dbg !2716

; <label>:16                                      ; preds = %18
  %17 = icmp slt i64 %indvars.iv.next.i2, 8, !dbg !2718
  br i1 %17, label %18, label %22, !dbg !2716

; <label>:18                                      ; preds = %16, %uInt64_qrm10.exit
  %indvars.iv.i1 = phi i64 [ 0, %uInt64_qrm10.exit ], [ %indvars.iv.next.i2, %16 ], !dbg !2720
  %19 = getelementptr inbounds %struct.UInt64* %tmpcast, i64 0, i32 0, i64 %indvars.iv.i1, !dbg !2721
  %20 = load i8* %19, align 1, !dbg !2721, !tbaa !547
  %21 = icmp eq i8 %20, 0, !dbg !2723
  %indvars.iv.next.i2 = add nuw nsw i64 %indvars.iv.i1, 1, !dbg !2716
  br i1 %21, label %16, label %uInt64_isZero.exit.thread, !dbg !2724

; <label>:22                                      ; preds = %16
  %23 = trunc i64 %indvars.iv7 to i32, !dbg !2725
  %sext = shl i64 %indvars.iv.next8, 32, !dbg !2725
  %24 = ashr exact i64 %sext, 32, !dbg !2725
  %25 = getelementptr inbounds i8* %outbuf, i64 %24, !dbg !2725
  store i8 0, i8* %25, align 1, !dbg !2726, !tbaa !547
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !382, metadata !524), !dbg !2727
  %26 = icmp slt i32 %23, 0, !dbg !2728
  br i1 %26, label %._crit_edge, label %.lr.ph, !dbg !2731

.lr.ph:                                           ; preds = %22, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %22 ]
  %27 = trunc i64 %indvars.iv to i32, !dbg !2732
  %28 = sub i64 %indvars.iv7, %indvars.iv, !dbg !2732
  %sext9 = shl i64 %28, 32, !dbg !2733
  %29 = ashr exact i64 %sext9, 32, !dbg !2733
  %30 = getelementptr inbounds [32 x i8]* %buf, i64 0, i64 %29, !dbg !2733
  %31 = load i8* %30, align 1, !dbg !2733, !tbaa !547
  %32 = getelementptr inbounds i8* %outbuf, i64 %indvars.iv, !dbg !2734
  store i8 %31, i8* %32, align 1, !dbg !2735, !tbaa !547
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2731
  %exitcond = icmp eq i32 %27, %23, !dbg !2731
  br i1 %exitcond, label %._crit_edge, label %.lr.ph, !dbg !2731

._crit_edge:                                      ; preds = %.lr.ph, %22
  ret void, !dbg !2736
}
