define internal fastcc void @uInt64_toAscii(i8* nocapture %outbuf, %struct.UInt64* nocapture %n) #0 {
entry:
  %buf = alloca [32 x i8], align 16
  %n_copy = alloca i64, align 8, !dbg !1530
  %tmpcast = bitcast i64* %n_copy to %struct.UInt64*, !dbg !1530
  call void @llvm.dbg.value(metadata !{i8* %outbuf}, i64 0, metadata !352), !dbg !1531
  call void @llvm.dbg.value(metadata !{%struct.UInt64* %n}, i64 0, metadata !353), !dbg !1531
  call void @llvm.dbg.declare(metadata !{[32 x i8]* %buf}, metadata !356), !dbg !1532
  call void @llvm.dbg.value(metadata !18, i64 0, metadata !358), !dbg !1533
  call void @llvm.dbg.declare(metadata !{%struct.UInt64* %tmpcast}, metadata !359), !dbg !1530
  %0 = bitcast %struct.UInt64* %n to i64*, !dbg !1530
  %1 = load i64* %0, align 1, !dbg !1530
  store i64 %1, i64* %n_copy, align 8, !dbg !1530
  br label %do.body, !dbg !1534

do.body:                                          ; preds = %for.body.i23, %entry
  %indvars.iv30 = phi i64 [ 0, %entry ], [ %indvars.iv.next31, %for.body.i23 ]
  %nBuf.0 = phi i32 [ 0, %entry ], [ %inc, %for.body.i23 ]
  tail call void @llvm.dbg.value(metadata !{%struct.UInt64* %tmpcast}, i64 0, metadata !1535), !dbg !1538
  tail call void @llvm.dbg.value(metadata !18, i64 0, metadata !1539), !dbg !1540
  tail call void @llvm.dbg.value(metadata !1541, i64 0, metadata !1542), !dbg !1543
  br label %for.body.i, !dbg !1543

for.body.i:                                       ; preds = %for.body.i, %do.body
  %indvars.iv.i = phi i64 [ 7, %do.body ], [ %indvars.iv.next.i, %for.body.i ]
  %rem.012.i = phi i32 [ 0, %do.body ], [ %rem6.i, %for.body.i ]
  %mul.i = shl nuw nsw i32 %rem.012.i, 8, !dbg !1545
  %arrayidx.i = getelementptr inbounds %struct.UInt64* %tmpcast, i64 0, i32 0, i64 %indvars.iv.i, !dbg !1545
  %2 = load i8* %arrayidx.i, align 1, !dbg !1545, !tbaa !485
  %conv.i = zext i8 %2 to i32, !dbg !1545
  %add.i = or i32 %conv.i, %mul.i, !dbg !1545
  tail call void @llvm.dbg.value(metadata !{i32 %add.i}, i64 0, metadata !1547), !dbg !1545
  %div.i = udiv i32 %add.i, 10, !dbg !1548
  %conv2.i = trunc i32 %div.i to i8, !dbg !1548
  store i8 %conv2.i, i8* %arrayidx.i, align 1, !dbg !1548, !tbaa !485
  %rem6.i = urem i32 %add.i, 10, !dbg !1549
  tail call void @llvm.dbg.value(metadata !{i32 %rem6.i}, i64 0, metadata !1539), !dbg !1549
  %indvars.iv.next.i = add i64 %indvars.iv.i, -1, !dbg !1543
  %3 = trunc i64 %indvars.iv.i to i32, !dbg !1543
  %cmp.i = icmp sgt i32 %3, 0, !dbg !1543
  br i1 %cmp.i, label %for.body.i, label %uInt64_qrm10.exit, !dbg !1543

uInt64_qrm10.exit:                                ; preds = %for.body.i
  call void @llvm.dbg.value(metadata !{i32 %rem6.i}, i64 0, metadata !355), !dbg !1536
  %add27 = or i32 %rem6.i, 48, !dbg !1550
  %conv = trunc i32 %add27 to i8, !dbg !1550
  %arrayidx = getelementptr inbounds [32 x i8]* %buf, i64 0, i64 %indvars.iv30, !dbg !1550
  store i8 %conv, i8* %arrayidx, align 1, !dbg !1550, !tbaa !485
  %indvars.iv.next31 = add i64 %indvars.iv30, 1
  %inc = add nsw i32 %nBuf.0, 1, !dbg !1551
  call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !358), !dbg !1551
  tail call void @llvm.dbg.value(metadata !{%struct.UInt64* %tmpcast}, i64 0, metadata !1552), !dbg !1554
  tail call void @llvm.dbg.value(metadata !18, i64 0, metadata !1555), !dbg !1556
  br label %for.body.i23, !dbg !1556

for.cond.i:                                       ; preds = %for.body.i23
  %4 = trunc i64 %indvars.iv.next.i22 to i32, !dbg !1556
  %cmp.i19 = icmp slt i32 %4, 8, !dbg !1556
  br i1 %cmp.i19, label %for.body.i23, label %do.end, !dbg !1556

for.body.i23:                                     ; preds = %for.cond.i, %uInt64_qrm10.exit
  %indvars.iv.i20 = phi i64 [ 0, %uInt64_qrm10.exit ], [ %indvars.iv.next.i22, %for.cond.i ]
  %arrayidx.i21 = getelementptr inbounds %struct.UInt64* %tmpcast, i64 0, i32 0, i64 %indvars.iv.i20, !dbg !1558
  %5 = load i8* %arrayidx.i21, align 1, !dbg !1558, !tbaa !485
  %cmp1.i = icmp eq i8 %5, 0, !dbg !1558
  %indvars.iv.next.i22 = add i64 %indvars.iv.i20, 1, !dbg !1556
  br i1 %cmp1.i, label %for.cond.i, label %do.body, !dbg !1558

do.end:                                           ; preds = %for.cond.i
  %idxprom2 = sext i32 %inc to i64, !dbg !1559
  %arrayidx3 = getelementptr inbounds i8* %outbuf, i64 %idxprom2, !dbg !1559
  store i8 0, i8* %arrayidx3, align 1, !dbg !1559, !tbaa !485
  call void @llvm.dbg.value(metadata !18, i64 0, metadata !354), !dbg !1560
  %cmp28 = icmp sgt i32 %nBuf.0, -1, !dbg !1560
  br i1 %cmp28, label %for.body, label %for.end, !dbg !1560

for.body:                                         ; preds = %do.end, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %do.end ]
  %6 = trunc i64 %indvars.iv to i32, !dbg !1562
  %sub5 = sub i32 %nBuf.0, %6, !dbg !1562
  %idxprom6 = sext i32 %sub5 to i64, !dbg !1562
  %arrayidx7 = getelementptr inbounds [32 x i8]* %buf, i64 0, i64 %idxprom6, !dbg !1562
  %7 = load i8* %arrayidx7, align 1, !dbg !1562, !tbaa !485
  %arrayidx9 = getelementptr inbounds i8* %outbuf, i64 %indvars.iv, !dbg !1562
  store i8 %7, i8* %arrayidx9, align 1, !dbg !1562, !tbaa !485
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1560
  %8 = trunc i64 %indvars.iv.next to i32, !dbg !1560
  %cmp = icmp slt i32 %8, %inc, !dbg !1560
  br i1 %cmp, label %for.body, label %for.end, !dbg !1560

for.end:                                          ; preds = %for.body, %do.end
  ret void, !dbg !1563
}
