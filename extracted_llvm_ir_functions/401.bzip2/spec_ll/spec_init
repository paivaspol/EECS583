define i32 @spec_init() #0 {
  %1 = load i32* @dbglvl, align 4, !dbg !145, !tbaa !148
  %2 = icmp sgt i32 %1, 3, !dbg !145
  br i1 %2, label %3, label %.preheader2, !dbg !150

; <label>:3                                       ; preds = %0
  %puts1 = tail call i32 @puts(i8* getelementptr inbounds ([10 x i8]* @str23, i64 0, i64 0)), !dbg !145
  br label %.preheader2, !dbg !145

.preheader2:                                      ; preds = %0, %3, %._crit_edge
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %._crit_edge ], [ 0, %3 ], [ 0, %0 ]
  %4 = getelementptr inbounds [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %indvars.iv5, !dbg !151
  %5 = getelementptr inbounds %struct.spec_fd_t* %4, i64 0, i32 0, !dbg !152
  %6 = load i32* %5, align 8, !dbg !152, !tbaa !153
  tail call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !25, metadata !127), !dbg !156
  %7 = bitcast %struct.spec_fd_t* %4 to i8*, !dbg !157
  %8 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %7, i1 false), !dbg !157
  %9 = tail call i8* @__memset_chk(i8* %7, i32 0, i64 24, i64 %8) #6, !dbg !157
  store i32 %6, i32* %5, align 8, !dbg !158, !tbaa !153
  %10 = add nsw i32 %6, 1048576, !dbg !159
  %11 = sext i32 %10 to i64, !dbg !160
  %12 = tail call i8* @malloc(i64 %11) #6, !dbg !161
  %13 = getelementptr inbounds [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %indvars.iv5, i32 3, !dbg !162
  store i8* %12, i8** %13, align 8, !dbg !163, !tbaa !164
  %14 = icmp eq i8* %12, null, !dbg !165
  br i1 %14, label %18, label %.preheader, !dbg !167

.preheader:                                       ; preds = %.preheader2
  %15 = icmp sgt i32 %6, 0, !dbg !168
  br i1 %15, label %.lr.ph, label %._crit_edge, !dbg !171

.lr.ph:                                           ; preds = %.preheader
  %16 = sext i32 %6 to i64, !dbg !171
  store i8 0, i8* %12, align 1, !dbg !172, !tbaa !174
  %17 = icmp sgt i32 %6, 1024, !dbg !168
  br i1 %17, label %._crit_edge7, label %._crit_edge, !dbg !171

; <label>:18                                      ; preds = %.preheader2
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([35 x i8]* @str, i64 0, i64 0)), !dbg !175
  tail call void @exit(i32 0) #7, !dbg !177
  unreachable, !dbg !177

._crit_edge7:                                     ; preds = %.lr.ph, %._crit_edge7
  %indvars.iv.next8 = phi i64 [ %indvars.iv.next, %._crit_edge7 ], [ 1024, %.lr.ph ]
  %.pre = load i8** %13, align 8, !dbg !178, !tbaa !164
  %19 = getelementptr inbounds i8* %.pre, i64 %indvars.iv.next8, !dbg !179
  store i8 0, i8* %19, align 1, !dbg !172, !tbaa !174
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next8, 1024, !dbg !171
  %20 = icmp slt i64 %indvars.iv.next, %16, !dbg !168
  br i1 %20, label %._crit_edge7, label %._crit_edge, !dbg !171

._crit_edge:                                      ; preds = %.lr.ph, %._crit_edge7, %.preheader
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !180
  %21 = icmp slt i64 %indvars.iv.next6, 3, !dbg !181
  br i1 %21, label %.preheader2, label %22, !dbg !180

; <label>:22                                      ; preds = %._crit_edge
  ret i32 0, !dbg !182
}
