define void @BZ2_hbAssignCodes(i32* nocapture %code, i8* nocapture %length, i32 %minLen, i32 %maxLen, i32 %alphaSize) #0 {
entry:
  %cmp22 = icmp sgt i32 %minLen, %maxLen
  br i1 %cmp22, label %for.end11, label %for.cond1.preheader.lr.ph

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %cmp219 = icmp sgt i32 %alphaSize, 0
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.end, %for.cond1.preheader.lr.ph
  %vec.024 = phi i32 [ 0, %for.cond1.preheader.lr.ph ], [ %shl, %for.end ]
  %n.023 = phi i32 [ %minLen, %for.cond1.preheader.lr.ph ], [ %inc10, %for.end ]
  br i1 %cmp219, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1.preheader, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.cond1.preheader ]
  %vec.120 = phi i32 [ %vec.2, %for.inc ], [ %vec.024, %for.cond1.preheader ]
  %arrayidx = getelementptr inbounds i8* %length, i64 %indvars.iv
  %0 = load i8* %arrayidx, align 1, !tbaa !1
  %conv = zext i8 %0 to i32
  %cmp4 = icmp eq i32 %conv, %n.023
  br i1 %cmp4, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body3
  %arrayidx7 = getelementptr inbounds i32* %code, i64 %indvars.iv
  store i32 %vec.120, i32* %arrayidx7, align 4, !tbaa !0
  %inc = add nsw i32 %vec.120, 1
  br label %for.inc

for.inc:                                          ; preds = %for.body3, %if.then
  %vec.2 = phi i32 [ %inc, %if.then ], [ %vec.120, %for.body3 ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %alphaSize
  br i1 %exitcond, label %for.end, label %for.body3

for.end:                                          ; preds = %for.inc, %for.cond1.preheader
  %vec.1.lcssa = phi i32 [ %vec.024, %for.cond1.preheader ], [ %vec.2, %for.inc ]
  %shl = shl i32 %vec.1.lcssa, 1
  %inc10 = add nsw i32 %n.023, 1
  %cmp = icmp slt i32 %n.023, %maxLen
  br i1 %cmp, label %for.cond1.preheader, label %for.end11

for.end11:                                        ; preds = %for.end, %entry
  ret void
}
