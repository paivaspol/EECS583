define void @BZ2_hbMakeCodeLengths(i8* nocapture %len, i32* nocapture readonly %freq, i32 %alphaSize, i32 %maxLen) #0 {
  %heap = alloca [260 x i32], align 16
  %weight = alloca [516 x i32], align 16
  %parent = alloca [516 x i32], align 16
  tail call void @llvm.dbg.value(metadata i8* %len, i64 0, metadata !17, metadata !88), !dbg !89
  tail call void @llvm.dbg.value(metadata i32* %freq, i64 0, metadata !18, metadata !88), !dbg !90
  tail call void @llvm.dbg.value(metadata i32 %alphaSize, i64 0, metadata !19, metadata !88), !dbg !91
  tail call void @llvm.dbg.value(metadata i32 %maxLen, i64 0, metadata !20, metadata !88), !dbg !92
  %1 = bitcast [260 x i32]* %heap to i8*, !dbg !93
  call void @llvm.lifetime.start(i64 1040, i8* %1) #2, !dbg !93
  tail call void @llvm.dbg.declare(metadata [260 x i32]* %heap, metadata !29, metadata !88), !dbg !94
  %2 = bitcast [516 x i32]* %weight to i8*, !dbg !95
  call void @llvm.lifetime.start(i64 2064, i8* %2) #2, !dbg !95
  tail call void @llvm.dbg.declare(metadata [516 x i32]* %weight, metadata !33, metadata !88), !dbg !96
  %3 = bitcast [516 x i32]* %parent to i8*, !dbg !97
  call void @llvm.lifetime.start(i64 2064, i8* %3) #2, !dbg !97
  tail call void @llvm.dbg.declare(metadata [516 x i32]* %parent, metadata !37, metadata !88), !dbg !98
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !25, metadata !88), !dbg !99
  %4 = icmp sgt i32 %alphaSize, 0, !dbg !100
  %5 = add i32 %alphaSize, -1, !dbg !103
  br i1 %4, label %.lr.ph53, label %.preheader14, !dbg !103

.preheader14:                                     ; preds = %.lr.ph53, %0
  %6 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 0, !dbg !104
  %7 = getelementptr inbounds [516 x i32]* %weight, i64 0, i64 0, !dbg !105
  %8 = getelementptr inbounds [516 x i32]* %parent, i64 0, i64 0, !dbg !106
  %9 = icmp slt i32 %alphaSize, 1, !dbg !107
  %10 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 1, !dbg !108
  %11 = sext i32 %alphaSize to i64
  tail call void @llvm.dbg.value(metadata i32 %alphaSize, i64 0, metadata !21, metadata !88), !dbg !109
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !22, metadata !88), !dbg !110
  store i32 0, i32* %6, align 16, !dbg !111, !tbaa !112
  store i32 0, i32* %7, align 16, !dbg !116, !tbaa !112
  store i32 -2, i32* %8, align 16, !dbg !117, !tbaa !112
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !25, metadata !88), !dbg !99
  br i1 %9, label %._crit_edge47.thread, label %.lr.ph19, !dbg !118

.lr.ph53:                                         ; preds = %0, %.lr.ph53
  %indvars.iv78 = phi i64 [ %indvars.iv.next79, %.lr.ph53 ], [ 0, %0 ]
  %12 = getelementptr inbounds i32* %freq, i64 %indvars.iv78, !dbg !119
  %13 = load i32* %12, align 4, !dbg !119, !tbaa !112
  %14 = icmp eq i32 %13, 0, !dbg !120
  %.op = shl i32 %13, 8, !dbg !121
  %15 = select i1 %14, i32 256, i32 %.op, !dbg !121
  %indvars.iv.next79 = add nuw nsw i64 %indvars.iv78, 1, !dbg !103
  %16 = getelementptr inbounds [516 x i32]* %weight, i64 0, i64 %indvars.iv.next79, !dbg !122
  store i32 %15, i32* %16, align 4, !dbg !123, !tbaa !112
  %lftr.wideiv80 = trunc i64 %indvars.iv78 to i32, !dbg !103
  %exitcond81 = icmp eq i32 %lftr.wideiv80, %5, !dbg !103
  br i1 %exitcond81, label %.preheader14, label %.lr.ph53, !dbg !103

.loopexit.loopexit:                               ; preds = %.lr.ph50
  tail call void @llvm.dbg.value(metadata i32 %alphaSize, i64 0, metadata !21, metadata !88), !dbg !109
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !22, metadata !88), !dbg !110
  store i32 0, i32* %6, align 16, !dbg !111, !tbaa !112
  store i32 0, i32* %7, align 16, !dbg !116, !tbaa !112
  store i32 -2, i32* %8, align 16, !dbg !117, !tbaa !112
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !25, metadata !88), !dbg !99
  br i1 %9, label %._crit_edge47.thread, label %.lr.ph19, !dbg !118

.lr.ph19:                                         ; preds = %.loopexit.loopexit, %.preheader14, %._crit_edge
  %indvars.iv62 = phi i64 [ %indvars.iv.next63, %._crit_edge ], [ 1, %.preheader14 ], [ 1, %.loopexit.loopexit ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %._crit_edge ], [ 0, %.preheader14 ], [ 0, %.loopexit.loopexit ]
  %17 = getelementptr inbounds [516 x i32]* %parent, i64 0, i64 %indvars.iv62, !dbg !124
  store i32 -1, i32* %17, align 4, !dbg !125, !tbaa !112
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !118
  %18 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 %indvars.iv.next, !dbg !126
  %19 = trunc i64 %indvars.iv62 to i32, !dbg !127
  store i32 %19, i32* %18, align 4, !dbg !127, !tbaa !112
  %20 = getelementptr inbounds [516 x i32]* %weight, i64 0, i64 %indvars.iv62, !dbg !128
  %21 = load i32* %20, align 4, !dbg !128, !tbaa !112
  %22 = trunc i64 %indvars.iv.next to i32, !dbg !128
  %23 = ashr i32 %22, 1, !dbg !128
  %24 = sext i32 %23 to i64, !dbg !128
  %25 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 %24, !dbg !128
  %26 = load i32* %25, align 4, !dbg !128, !tbaa !112
  %27 = sext i32 %26 to i64, !dbg !128
  %28 = getelementptr inbounds [516 x i32]* %weight, i64 0, i64 %27, !dbg !128
  %29 = load i32* %28, align 4, !dbg !128, !tbaa !112
  %30 = icmp slt i32 %21, %29, !dbg !128
  br i1 %30, label %.lr.ph, label %._crit_edge, !dbg !128

.lr.ph:                                           ; preds = %.lr.ph19, %.lr.ph
  %31 = phi i32* [ %43, %.lr.ph ], [ %18, %.lr.ph19 ]
  %32 = phi i32 [ %37, %.lr.ph ], [ %26, %.lr.ph19 ]
  %33 = phi i32 [ %34, %.lr.ph ], [ %23, %.lr.ph19 ]
  store i32 %32, i32* %31, align 4, !dbg !129, !tbaa !112
  tail call void @llvm.dbg.value(metadata i32 %34, i64 0, metadata !38, metadata !88), !dbg !128
  %34 = ashr i32 %33, 1, !dbg !128
  %35 = sext i32 %34 to i64, !dbg !128
  %36 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 %35, !dbg !128
  %37 = load i32* %36, align 4, !dbg !128, !tbaa !112
  %38 = sext i32 %37 to i64, !dbg !128
  %39 = getelementptr inbounds [516 x i32]* %weight, i64 0, i64 %38, !dbg !128
  %40 = load i32* %39, align 4, !dbg !128, !tbaa !112
  %41 = icmp slt i32 %21, %40, !dbg !128
  %42 = sext i32 %33 to i64, !dbg !129
  %43 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 %42, !dbg !129
  br i1 %41, label %.lr.ph, label %._crit_edge, !dbg !128

._crit_edge:                                      ; preds = %.lr.ph, %.lr.ph19
  %.lcssa = phi i32* [ %18, %.lr.ph19 ], [ %43, %.lr.ph ]
  store i32 %19, i32* %.lcssa, align 4, !dbg !128, !tbaa !112
  %indvars.iv.next63 = add nuw nsw i64 %indvars.iv62, 1, !dbg !118
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !118
  %exitcond = icmp eq i32 %lftr.wideiv, %5, !dbg !118
  br i1 %exitcond, label %._crit_edge20, label %.lr.ph19, !dbg !118

._crit_edge20:                                    ; preds = %._crit_edge
  %44 = icmp slt i32 %alphaSize, 260, !dbg !131
  br i1 %44, label %.preheader13, label %.preheader13.thread, !dbg !134

.preheader13.thread:                              ; preds = %._crit_edge20
  tail call void @BZ2_bz__AssertH__fail(i32 2001) #4, !dbg !131
  br label %.lr.ph42, !dbg !135

.preheader13:                                     ; preds = %._crit_edge20
  %45 = icmp sgt i32 %alphaSize, 1, !dbg !136
  br i1 %45, label %.lr.ph42, label %176, !dbg !135

.lr.ph42:                                         ; preds = %.preheader13.thread, %.preheader13
  %46 = sext i32 %alphaSize to i64
  br label %47, !dbg !135

; <label>:47                                      ; preds = %.lr.ph42, %._crit_edge38
  %indvars.iv67 = phi i64 [ %46, %.lr.ph42 ], [ %indvars.iv.next68, %._crit_edge38 ]
  %indvars.iv65 = phi i64 [ %11, %.lr.ph42 ], [ %indvars.iv.next66, %._crit_edge38 ]
  %48 = load i32* %10, align 4, !dbg !108, !tbaa !112
  tail call void @llvm.dbg.value(metadata i32 %48, i64 0, metadata !23, metadata !88), !dbg !137
  %49 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 %indvars.iv67, !dbg !138
  %50 = load i32* %49, align 4, !dbg !138, !tbaa !112
  store i32 %50, i32* %10, align 4, !dbg !139, !tbaa !112
  %indvars.iv.next68 = add nsw i64 %indvars.iv67, -1, !dbg !135
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !45, metadata !88), !dbg !140
  tail call void @llvm.dbg.value(metadata i32 %50, i64 0, metadata !49, metadata !88), !dbg !140
  tail call void @llvm.dbg.value(metadata i32 2, i64 0, metadata !48, metadata !88), !dbg !140
  %51 = icmp slt i64 %indvars.iv67, 3, !dbg !141
  br i1 %51, label %._crit_edge25, label %.lr.ph24, !dbg !144

.lr.ph24:                                         ; preds = %47
  %52 = sext i32 %50 to i64, !dbg !145
  %53 = getelementptr inbounds [516 x i32]* %weight, i64 0, i64 %52, !dbg !145
  %54 = load i32* %53, align 4, !dbg !145, !tbaa !112
  br label %55, !dbg !144

; <label>:55                                      ; preds = %.lr.ph24, %81
  %56 = phi i32 [ 2, %.lr.ph24 ], [ %84, %81 ]
  %zz1.022 = phi i32 [ 1, %.lr.ph24 ], [ %yy.0, %81 ]
  %57 = sext i32 %56 to i64, !dbg !147
  %58 = icmp slt i64 %57, %indvars.iv.next68, !dbg !147
  br i1 %58, label %59, label %73, !dbg !147

; <label>:59                                      ; preds = %55
  %60 = or i32 %56, 1, !dbg !147
  %61 = sext i32 %60 to i64, !dbg !147
  %62 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 %61, !dbg !147
  %63 = load i32* %62, align 4, !dbg !147, !tbaa !112
  %64 = sext i32 %63 to i64, !dbg !147
  %65 = getelementptr inbounds [516 x i32]* %weight, i64 0, i64 %64, !dbg !147
  %66 = load i32* %65, align 4, !dbg !147, !tbaa !112
  %67 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 %57, !dbg !147
  %68 = load i32* %67, align 8, !dbg !147, !tbaa !112
  %69 = sext i32 %68 to i64, !dbg !147
  %70 = getelementptr inbounds [516 x i32]* %weight, i64 0, i64 %69, !dbg !147
  %71 = load i32* %70, align 4, !dbg !147, !tbaa !112
  %72 = icmp slt i32 %66, %71, !dbg !147
  tail call void @llvm.dbg.value(metadata i32 %60, i64 0, metadata !48, metadata !88), !dbg !140
  %.8 = select i1 %72, i32 %60, i32 %56, !dbg !144
  br label %73, !dbg !144

; <label>:73                                      ; preds = %59, %55
  %yy.0 = phi i32 [ %56, %55 ], [ %.8, %59 ]
  %74 = sext i32 %yy.0 to i64, !dbg !145
  %75 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 %74, !dbg !145
  %76 = load i32* %75, align 4, !dbg !145, !tbaa !112
  %77 = sext i32 %76 to i64, !dbg !145
  %78 = getelementptr inbounds [516 x i32]* %weight, i64 0, i64 %77, !dbg !145
  %79 = load i32* %78, align 4, !dbg !145, !tbaa !112
  %80 = icmp slt i32 %54, %79, !dbg !145
  br i1 %80, label %._crit_edge25, label %81, !dbg !144

; <label>:81                                      ; preds = %73
  %82 = sext i32 %zz1.022 to i64, !dbg !144
  %83 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 %82, !dbg !144
  store i32 %76, i32* %83, align 4, !dbg !144, !tbaa !112
  tail call void @llvm.dbg.value(metadata i32 %yy.0, i64 0, metadata !45, metadata !88), !dbg !140
  %84 = shl i32 %yy.0, 1, !dbg !144
  tail call void @llvm.dbg.value(metadata i32 %84, i64 0, metadata !48, metadata !88), !dbg !140
  %85 = sext i32 %84 to i64, !dbg !141
  %86 = icmp sgt i64 %85, %indvars.iv.next68, !dbg !141
  br i1 %86, label %._crit_edge25, label %55, !dbg !144

._crit_edge25:                                    ; preds = %81, %73, %47
  %zz1.0.lcssa = phi i32 [ 1, %47 ], [ %yy.0, %81 ], [ %zz1.022, %73 ]
  %87 = sext i32 %zz1.0.lcssa to i64, !dbg !140
  %88 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 %87, !dbg !140
  store i32 %50, i32* %88, align 4, !dbg !140, !tbaa !112
  %89 = load i32* %10, align 4, !dbg !149, !tbaa !112
  tail call void @llvm.dbg.value(metadata i32 %89, i64 0, metadata !24, metadata !88), !dbg !150
  %90 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 %indvars.iv.next68, !dbg !151
  %91 = load i32* %90, align 4, !dbg !151, !tbaa !112
  store i32 %91, i32* %10, align 4, !dbg !152, !tbaa !112
  %92 = add nsw i64 %indvars.iv67, -2, !dbg !153
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !50, metadata !88), !dbg !154
  tail call void @llvm.dbg.value(metadata i32 %91, i64 0, metadata !53, metadata !88), !dbg !154
  tail call void @llvm.dbg.value(metadata i32 2, i64 0, metadata !52, metadata !88), !dbg !154
  %93 = icmp slt i64 %92, 2, !dbg !155
  br i1 %93, label %._crit_edge32, label %.lr.ph31, !dbg !158

.lr.ph31:                                         ; preds = %._crit_edge25
  %94 = sext i32 %91 to i64, !dbg !159
  %95 = getelementptr inbounds [516 x i32]* %weight, i64 0, i64 %94, !dbg !159
  %96 = load i32* %95, align 4, !dbg !159, !tbaa !112
  br label %97, !dbg !158

; <label>:97                                      ; preds = %.lr.ph31, %123
  %98 = phi i32 [ 2, %.lr.ph31 ], [ %126, %123 ]
  %zz3.029 = phi i32 [ 1, %.lr.ph31 ], [ %yy4.0, %123 ]
  %99 = sext i32 %98 to i64, !dbg !161
  %100 = icmp slt i64 %99, %92, !dbg !161
  br i1 %100, label %101, label %115, !dbg !161

; <label>:101                                     ; preds = %97
  %102 = or i32 %98, 1, !dbg !161
  %103 = sext i32 %102 to i64, !dbg !161
  %104 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 %103, !dbg !161
  %105 = load i32* %104, align 4, !dbg !161, !tbaa !112
  %106 = sext i32 %105 to i64, !dbg !161
  %107 = getelementptr inbounds [516 x i32]* %weight, i64 0, i64 %106, !dbg !161
  %108 = load i32* %107, align 4, !dbg !161, !tbaa !112
  %109 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 %99, !dbg !161
  %110 = load i32* %109, align 8, !dbg !161, !tbaa !112
  %111 = sext i32 %110 to i64, !dbg !161
  %112 = getelementptr inbounds [516 x i32]* %weight, i64 0, i64 %111, !dbg !161
  %113 = load i32* %112, align 4, !dbg !161, !tbaa !112
  %114 = icmp slt i32 %108, %113, !dbg !161
  tail call void @llvm.dbg.value(metadata i32 %102, i64 0, metadata !52, metadata !88), !dbg !154
  %.9 = select i1 %114, i32 %102, i32 %98, !dbg !158
  br label %115, !dbg !158

; <label>:115                                     ; preds = %101, %97
  %yy4.0 = phi i32 [ %98, %97 ], [ %.9, %101 ]
  %116 = sext i32 %yy4.0 to i64, !dbg !159
  %117 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 %116, !dbg !159
  %118 = load i32* %117, align 4, !dbg !159, !tbaa !112
  %119 = sext i32 %118 to i64, !dbg !159
  %120 = getelementptr inbounds [516 x i32]* %weight, i64 0, i64 %119, !dbg !159
  %121 = load i32* %120, align 4, !dbg !159, !tbaa !112
  %122 = icmp slt i32 %96, %121, !dbg !159
  br i1 %122, label %._crit_edge32, label %123, !dbg !158

; <label>:123                                     ; preds = %115
  %124 = sext i32 %zz3.029 to i64, !dbg !158
  %125 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 %124, !dbg !158
  store i32 %118, i32* %125, align 4, !dbg !158, !tbaa !112
  tail call void @llvm.dbg.value(metadata i32 %yy4.0, i64 0, metadata !50, metadata !88), !dbg !154
  %126 = shl i32 %yy4.0, 1, !dbg !158
  tail call void @llvm.dbg.value(metadata i32 %126, i64 0, metadata !52, metadata !88), !dbg !154
  %127 = sext i32 %126 to i64, !dbg !155
  %128 = icmp sgt i64 %127, %92, !dbg !155
  br i1 %128, label %._crit_edge32, label %97, !dbg !158

._crit_edge32:                                    ; preds = %123, %115, %._crit_edge25
  %zz3.0.lcssa = phi i32 [ 1, %._crit_edge25 ], [ %yy4.0, %123 ], [ %zz3.029, %115 ]
  %129 = sext i32 %zz3.0.lcssa to i64, !dbg !154
  %130 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 %129, !dbg !154
  store i32 %91, i32* %130, align 4, !dbg !154, !tbaa !112
  %indvars.iv.next66 = add nsw i64 %indvars.iv65, 1, !dbg !135
  %131 = sext i32 %89 to i64, !dbg !163
  %132 = getelementptr inbounds [516 x i32]* %parent, i64 0, i64 %131, !dbg !163
  %133 = trunc i64 %indvars.iv.next66 to i32, !dbg !164
  store i32 %133, i32* %132, align 4, !dbg !164, !tbaa !112
  %134 = sext i32 %48 to i64, !dbg !165
  %135 = getelementptr inbounds [516 x i32]* %parent, i64 0, i64 %134, !dbg !165
  store i32 %133, i32* %135, align 4, !dbg !166, !tbaa !112
  %136 = getelementptr inbounds [516 x i32]* %weight, i64 0, i64 %134, !dbg !167
  %137 = load i32* %136, align 4, !dbg !167, !tbaa !112
  %138 = and i32 %137, -256, !dbg !167
  %139 = getelementptr inbounds [516 x i32]* %weight, i64 0, i64 %131, !dbg !167
  %140 = load i32* %139, align 4, !dbg !167, !tbaa !112
  %141 = and i32 %140, -256, !dbg !167
  %142 = add i32 %141, %138, !dbg !167
  %143 = and i32 %137, 255, !dbg !167
  %144 = and i32 %140, 255, !dbg !167
  %145 = icmp ugt i32 %143, %144, !dbg !167
  %.10 = select i1 %145, i32 %137, i32 %140, !dbg !167
  %146 = and i32 %.10, 255, !dbg !167
  %147 = add nuw nsw i32 %146, 1, !dbg !167
  %148 = or i32 %147, %142, !dbg !167
  %149 = getelementptr inbounds [516 x i32]* %weight, i64 0, i64 %indvars.iv.next66, !dbg !168
  store i32 %148, i32* %149, align 4, !dbg !169, !tbaa !112
  %150 = getelementptr inbounds [516 x i32]* %parent, i64 0, i64 %indvars.iv.next66, !dbg !170
  store i32 -1, i32* %150, align 4, !dbg !171, !tbaa !112
  store i32 %133, i32* %90, align 4, !dbg !172, !tbaa !112
  %151 = trunc i64 %indvars.iv.next68 to i32, !dbg !173
  %152 = ashr i32 %151, 1, !dbg !173
  %153 = sext i32 %152 to i64, !dbg !173
  %154 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 %153, !dbg !173
  %155 = load i32* %154, align 4, !dbg !173, !tbaa !112
  %156 = sext i32 %155 to i64, !dbg !173
  %157 = getelementptr inbounds [516 x i32]* %weight, i64 0, i64 %156, !dbg !173
  %158 = load i32* %157, align 4, !dbg !173, !tbaa !112
  %159 = icmp slt i32 %148, %158, !dbg !173
  br i1 %159, label %.lr.ph37, label %._crit_edge38, !dbg !173

.lr.ph37:                                         ; preds = %._crit_edge32, %.lr.ph37
  %160 = phi i32* [ %172, %.lr.ph37 ], [ %90, %._crit_edge32 ]
  %161 = phi i32 [ %166, %.lr.ph37 ], [ %155, %._crit_edge32 ]
  %162 = phi i32 [ %163, %.lr.ph37 ], [ %152, %._crit_edge32 ]
  store i32 %161, i32* %160, align 4, !dbg !174, !tbaa !112
  tail call void @llvm.dbg.value(metadata i32 %163, i64 0, metadata !54, metadata !88), !dbg !173
  %163 = ashr i32 %162, 1, !dbg !173
  %164 = sext i32 %163 to i64, !dbg !173
  %165 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 %164, !dbg !173
  %166 = load i32* %165, align 4, !dbg !173, !tbaa !112
  %167 = sext i32 %166 to i64, !dbg !173
  %168 = getelementptr inbounds [516 x i32]* %weight, i64 0, i64 %167, !dbg !173
  %169 = load i32* %168, align 4, !dbg !173, !tbaa !112
  %170 = icmp slt i32 %148, %169, !dbg !173
  %171 = sext i32 %162 to i64, !dbg !174
  %172 = getelementptr inbounds [260 x i32]* %heap, i64 0, i64 %171, !dbg !174
  br i1 %170, label %.lr.ph37, label %._crit_edge38, !dbg !173

._crit_edge38:                                    ; preds = %.lr.ph37, %._crit_edge32
  %.lcssa15 = phi i32* [ %90, %._crit_edge32 ], [ %172, %.lr.ph37 ]
  store i32 %133, i32* %.lcssa15, align 4, !dbg !173, !tbaa !112
  %173 = icmp sgt i64 %indvars.iv.next68, 1, !dbg !136
  br i1 %173, label %47, label %._crit_edge43, !dbg !135

._crit_edge43:                                    ; preds = %._crit_edge38
  %174 = shl i32 %alphaSize, 1, !dbg !135
  %175 = add i32 %174, -1, !dbg !135
  br label %176, !dbg !135

; <label>:176                                     ; preds = %._crit_edge43, %.preheader13
  %nNodes.0.lcssa = phi i32 [ %175, %._crit_edge43 ], [ %alphaSize, %.preheader13 ]
  %177 = icmp slt i32 %nNodes.0.lcssa, 516, !dbg !176
  br i1 %177, label %.preheader12, label %178, !dbg !179

; <label>:178                                     ; preds = %176
  tail call void @BZ2_bz__AssertH__fail(i32 2002) #4, !dbg !176
  br label %.preheader12, !dbg !176

.preheader12:                                     ; preds = %178, %176
  br i1 %9, label %._crit_edge47.thread, label %.preheader, !dbg !180

.preheader:                                       ; preds = %.preheader12, %186
  %indvars.iv70 = phi i64 [ %indvars.iv.next71, %186 ], [ 1, %.preheader12 ]
  %tooLong.045 = phi i8 [ %.tooLong.0, %186 ], [ 0, %.preheader12 ]
  %179 = trunc i64 %indvars.iv70 to i32, !dbg !182
  br label %180, !dbg !182

; <label>:180                                     ; preds = %180, %.preheader
  %k.0 = phi i32 [ %183, %180 ], [ %179, %.preheader ]
  %j.0 = phi i32 [ %185, %180 ], [ 0, %.preheader ]
  %181 = sext i32 %k.0 to i64, !dbg !182
  %182 = getelementptr inbounds [516 x i32]* %parent, i64 0, i64 %181, !dbg !182
  %183 = load i32* %182, align 4, !dbg !182, !tbaa !112
  %184 = icmp sgt i32 %183, -1, !dbg !185
  tail call void @llvm.dbg.value(metadata i32 %183, i64 0, metadata !27, metadata !88), !dbg !186
  %185 = add nuw nsw i32 %j.0, 1, !dbg !187
  tail call void @llvm.dbg.value(metadata i32 %185, i64 0, metadata !26, metadata !88), !dbg !189
  br i1 %184, label %180, label %186, !dbg !190

; <label>:186                                     ; preds = %180
  %187 = trunc i32 %j.0 to i8, !dbg !191
  %188 = add nsw i64 %indvars.iv70, -1, !dbg !192
  %189 = getelementptr inbounds i8* %len, i64 %188, !dbg !193
  store i8 %187, i8* %189, align 1, !dbg !194, !tbaa !195
  %190 = icmp sgt i32 %j.0, %maxLen, !dbg !196
  tail call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !28, metadata !88), !dbg !198
  %.tooLong.0 = select i1 %190, i8 1, i8 %tooLong.045, !dbg !199
  %indvars.iv.next71 = add nuw nsw i64 %indvars.iv70, 1, !dbg !180
  %exitcond73 = icmp eq i32 %179, %alphaSize, !dbg !180
  br i1 %exitcond73, label %._crit_edge47, label %.preheader, !dbg !180

._crit_edge47:                                    ; preds = %186
  %191 = icmp eq i8 %.tooLong.0, 0, !dbg !200
  br i1 %191, label %._crit_edge47.thread, label %.preheader11, !dbg !202

.preheader11:                                     ; preds = %._crit_edge47
  br i1 %9, label %._crit_edge47.thread.critedge, label %.lr.ph50, !dbg !203

.lr.ph50:                                         ; preds = %.preheader11, %.lr.ph50
  %indvars.iv74 = phi i64 [ %indvars.iv.next75, %.lr.ph50 ], [ 1, %.preheader11 ]
  %192 = getelementptr inbounds [516 x i32]* %weight, i64 0, i64 %indvars.iv74, !dbg !205
  %193 = load i32* %192, align 4, !dbg !205, !tbaa !112
  %194 = ashr i32 %193, 8, !dbg !208
  tail call void @llvm.dbg.value(metadata i32 %194, i64 0, metadata !26, metadata !88), !dbg !189
  %195 = sdiv i32 %194, 2, !dbg !209
  %196 = shl nsw i32 %195, 8, !dbg !210
  %197 = add nsw i32 %196, 256, !dbg !210
  store i32 %197, i32* %192, align 4, !dbg !211, !tbaa !112
  %indvars.iv.next75 = add nuw nsw i64 %indvars.iv74, 1, !dbg !203
  %lftr.wideiv76 = trunc i64 %indvars.iv74 to i32, !dbg !203
  %exitcond77 = icmp eq i32 %lftr.wideiv76, %alphaSize, !dbg !203
  br i1 %exitcond77, label %.loopexit.loopexit, label %.lr.ph50, !dbg !203

._crit_edge47.thread.critedge:                    ; preds = %.preheader11
  tail call void @llvm.dbg.value(metadata i32 %alphaSize, i64 0, metadata !21, metadata !88), !dbg !109
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !22, metadata !88), !dbg !110
  store i32 0, i32* %6, align 16, !dbg !111, !tbaa !112
  store i32 0, i32* %7, align 16, !dbg !116, !tbaa !112
  store i32 -2, i32* %8, align 16, !dbg !117, !tbaa !112
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !25, metadata !88), !dbg !99
  br label %._crit_edge47.thread

._crit_edge47.thread:                             ; preds = %.preheader14, %._crit_edge47, %.preheader12, %.loopexit.loopexit, %._crit_edge47.thread.critedge
  call void @llvm.lifetime.end(i64 2064, i8* %3) #2, !dbg !212
  call void @llvm.lifetime.end(i64 2064, i8* %2) #2, !dbg !212
  call void @llvm.lifetime.end(i64 1040, i8* %1) #2, !dbg !212
  ret void, !dbg !212
}
