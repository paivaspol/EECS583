define void @SubMtx_sparseTriplesInfo(%struct._SubMtx* %mtx, i32* %pnent, i32** %prowids, i32** %pcolids, double** %pentries) #0 {
entry:
  %cmp = icmp eq %struct._SubMtx* %mtx, null
  %cmp1 = icmp eq i32* %pnent, null
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp eq i32** %prowids, null
  %or.cond67 = or i1 %or.cond, %cmp3
  %cmp5 = icmp eq i32** %pcolids, null
  %or.cond68 = or i1 %or.cond67, %cmp5
  %cmp7 = icmp eq double** %pentries, null
  %or.cond69 = or i1 %or.cond68, %cmp7
  br i1 %or.cond69, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([70 x i8]* @.str12, i64 0, i64 0), %struct._SubMtx* %mtx, i32* %pnent, i32** %prowids, i32** %pcolids, double** %pentries) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 0
  %1 = load i32* %type, align 4, !tbaa !3
  %.off = add i32 %1, -1
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.end15, label %if.then12

if.then12:                                        ; preds = %if.end
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([113 x i8]* @.str13, i64 0, i64 0), %struct._SubMtx* %mtx, i32* %pnent, i32** %prowids, i32** %pcolids, double** %pentries, i32 %1) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end15:                                         ; preds = %if.end
  %mode = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 1
  %3 = load i32* %mode, align 4, !tbaa !3
  %cmp16 = icmp eq i32 %3, 4
  br i1 %cmp16, label %if.end20, label %if.then17

if.then17:                                        ; preds = %if.end15
  %4 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call19 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([103 x i8]* @.str14, i64 0, i64 0), %struct._SubMtx* %mtx, i32* %pnent, i32** %prowids, i32** %pcolids, double** %pentries, i32 %3) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end20:                                         ; preds = %if.end15
  %nent = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 6
  %5 = load i32* %nent, align 4, !tbaa !3
  store i32 %5, i32* %pnent, align 4, !tbaa !3
  %vec = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 8, i32 3
  %6 = load double** %vec, align 8, !tbaa !0
  %7 = bitcast double* %6 to i32*
  %nrow = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 4
  %8 = load i32* %nrow, align 4, !tbaa !3
  %add = add nsw i32 %8, 7
  %ncol = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 5
  %9 = load i32* %ncol, align 4, !tbaa !3
  %add21 = add nsw i32 %add, %9
  %idx.ext = sext i32 %add21 to i64
  %add.ptr = getelementptr inbounds i32* %7, i64 %idx.ext
  store i32* %add.ptr, i32** %prowids, align 8, !tbaa !0
  %10 = load i32* %nent, align 4, !tbaa !3
  %add23 = add nsw i32 %add21, %10
  %idx.ext24 = sext i32 %add23 to i64
  %add.ptr25 = getelementptr inbounds i32* %7, i64 %idx.ext24
  store i32* %add.ptr25, i32** %pcolids, align 8, !tbaa !0
  %add27 = add i32 %10, 1
  %add28 = add i32 %add27, %add23
  %div = sdiv i32 %add28, 2
  %idx.ext29 = sext i32 %div to i64
  %add.ptr30 = getelementptr inbounds double* %6, i64 %idx.ext29
  store double* %add.ptr30, double** %pentries, align 8, !tbaa !0
  ret void
}
