define void @SubMtx_columnIndices(%struct._SubMtx* nocapture %mtx, i32* nocapture %pncol, i32** %pcolind) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._SubMtx* %mtx}, i64 0, metadata !67), !dbg !523
  tail call void @llvm.dbg.value(metadata !{i32* %pncol}, i64 0, metadata !68), !dbg !524
  tail call void @llvm.dbg.value(metadata !{i32** %pcolind}, i64 0, metadata !69), !dbg !525
  %ncol = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 5, !dbg !526
  %0 = load i32* %ncol, align 4, !dbg !526, !tbaa !488
  store i32 %0, i32* %pncol, align 4, !dbg !526, !tbaa !488
  %cmp = icmp eq i32** %pcolind, null, !dbg !527
  br i1 %cmp, label %if.end, label %if.then, !dbg !527

if.then:                                          ; preds = %entry
  %vec = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 8, i32 3, !dbg !528
  %1 = load double** %vec, align 8, !dbg !528, !tbaa !483
  %2 = bitcast double* %1 to i32*, !dbg !528
  %nrow = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 4, !dbg !528
  %3 = load i32* %nrow, align 4, !dbg !528, !tbaa !488
  %idx.ext = sext i32 %3 to i64, !dbg !528
  %add.ptr.sum = add i64 %idx.ext, 7, !dbg !528
  %add.ptr1 = getelementptr inbounds i32* %2, i64 %add.ptr.sum, !dbg !528
  store i32* %add.ptr1, i32** %pcolind, align 8, !dbg !528, !tbaa !483
  br label %if.end, !dbg !530

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !531
}
