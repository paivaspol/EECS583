define %struct._ChvList* @FrontMtx_postList(%struct._FrontMtx* %frontmtx, %struct._IV* %frontOwnersIV, i32 %lockflag) #0 {
entry:
  %nfront = alloca i32, align 4
  %frontOwners = alloca i32*, align 8
  %cmp = icmp eq %struct._FrontMtx* %frontmtx, null
  %cmp1 = icmp eq %struct._IV* %frontOwnersIV, null
  %or.cond = or i1 %cmp, %cmp1
  %0 = icmp ugt i32 %lockflag, 2
  %or.cond134 = or i1 %or.cond, %0
  br i1 %or.cond134, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([57 x i8]* @.str16, i64 0, i64 0), %struct._FrontMtx* %frontmtx, %struct._IV* %frontOwnersIV, i32 %lockflag) #5
  call void @exit(i32 -1) #7
  unreachable

if.end:                                           ; preds = %entry
  %frontETree = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 11
  %2 = load %struct._ETree** %frontETree, align 8, !tbaa !0
  %call6 = call i32* @ETree_fch(%struct._ETree* %2) #5
  %3 = load %struct._ETree** %frontETree, align 8, !tbaa !0
  %call8 = call i32* @ETree_sib(%struct._ETree* %3) #5
  call void @IV_sizeAndEntries(%struct._IV* %frontOwnersIV, i32* %nfront, i32** %frontOwners) #5
  %4 = load i32* %nfront, align 4, !tbaa !3
  %add = add nsw i32 %4, 1
  %call9 = call i32* @IVinit(i32 %add, i32 0) #5
  %cmp10 = icmp sgt i32 %lockflag, 0
  br i1 %cmp10, label %if.then11, label %if.end14

if.then11:                                        ; preds = %if.end
  %5 = load i32* %nfront, align 4, !tbaa !3
  %add12 = add nsw i32 %5, 1
  %call13 = call i8* @CVinit(i32 %add12, i8 signext 78) #5
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then11
  %flags.0 = phi i8* [ %call13, %if.then11 ], [ null, %if.end ]
  %call15 = call i32 @IV_max(%struct._IV* %frontOwnersIV) #5
  %add16 = add nsw i32 %call15, 1
  %call17 = call i32* @IVinit(i32 %add16, i32 -1) #5
  %6 = load i32* %nfront, align 4, !tbaa !3
  %cmp18147 = icmp sgt i32 %6, 0
  br i1 %cmp18147, label %for.body.lr.ph, label %for.end49

for.body.lr.ph:                                   ; preds = %if.end14
  %cmp36 = icmp eq i8* %flags.0, null
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc47
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc47 ]
  %arrayidx = getelementptr inbounds i32* %call6, i64 %indvars.iv
  %I.0140 = load i32* %arrayidx, align 4
  %cmp20141 = icmp eq i32 %I.0140, -1
  br i1 %cmp20141, label %for.end, label %for.body21.lr.ph

for.body21.lr.ph:                                 ; preds = %for.body
  %.pre = load i32** %frontOwners, align 8, !tbaa !0
  br label %for.body21

for.body21:                                       ; preds = %for.body21.lr.ph, %for.inc
  %I.0144 = phi i32 [ %I.0140, %for.body21.lr.ph ], [ %I.0, %for.inc ]
  %count.0143 = phi i32 [ 0, %for.body21.lr.ph ], [ %count.1, %for.inc ]
  %nchild.0142 = phi i32 [ 0, %for.body21.lr.ph ], [ %inc, %for.inc ]
  %inc = add nsw i32 %nchild.0142, 1
  %idxprom22 = sext i32 %I.0144 to i64
  %arrayidx23 = getelementptr inbounds i32* %.pre, i64 %idxprom22
  %7 = load i32* %arrayidx23, align 4, !tbaa !3
  %idxprom24 = sext i32 %7 to i64
  %arrayidx25 = getelementptr inbounds i32* %call17, i64 %idxprom24
  %8 = load i32* %arrayidx25, align 4, !tbaa !3
  %9 = trunc i64 %indvars.iv to i32
  %cmp26 = icmp eq i32 %8, %9
  br i1 %cmp26, label %for.inc, label %if.then27

if.then27:                                        ; preds = %for.body21
  store i32 %9, i32* %arrayidx25, align 4, !tbaa !3
  %inc30 = add nsw i32 %count.0143, 1
  br label %for.inc

for.inc:                                          ; preds = %for.body21, %if.then27
  %count.1 = phi i32 [ %inc30, %if.then27 ], [ %count.0143, %for.body21 ]
  %arrayidx33 = getelementptr inbounds i32* %call8, i64 %idxprom22
  %I.0 = load i32* %arrayidx33, align 4
  %cmp20 = icmp eq i32 %I.0, -1
  br i1 %cmp20, label %for.end, label %for.body21

for.end:                                          ; preds = %for.inc, %for.body
  %count.0.lcssa = phi i32 [ 0, %for.body ], [ %count.1, %for.inc ]
  %nchild.0.lcssa = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %arrayidx35 = getelementptr inbounds i32* %call9, i64 %indvars.iv
  store i32 %nchild.0.lcssa, i32* %arrayidx35, align 4, !tbaa !3
  br i1 %cmp36, label %for.inc47, label %if.then37

if.then37:                                        ; preds = %for.end
  %cmp38 = icmp sgt i32 %count.0.lcssa, 1
  %arrayidx41 = getelementptr inbounds i8* %flags.0, i64 %indvars.iv
  br i1 %cmp38, label %if.then39, label %if.else42

if.then39:                                        ; preds = %if.then37
  store i8 89, i8* %arrayidx41, align 1, !tbaa !1
  br label %for.inc47

if.else42:                                        ; preds = %if.then37
  store i8 78, i8* %arrayidx41, align 1, !tbaa !1
  br label %for.inc47

for.inc47:                                        ; preds = %for.end, %if.else42, %if.then39
  %indvars.iv.next = add i64 %indvars.iv, 1
  %10 = load i32* %nfront, align 4, !tbaa !3
  %11 = trunc i64 %indvars.iv.next to i32
  %cmp18 = icmp slt i32 %11, %10
  br i1 %cmp18, label %for.body, label %for.end49

for.end49:                                        ; preds = %for.inc47, %if.end14
  %12 = load %struct._ETree** %frontETree, align 8, !tbaa !0
  %call51 = call i32 @ETree_root(%struct._ETree* %12) #5
  %cmp53135 = icmp eq i32 %call51, -1
  br i1 %cmp53135, label %for.end69, label %for.body54.lr.ph

for.body54.lr.ph:                                 ; preds = %for.end49
  %13 = load i32** %frontOwners, align 8, !tbaa !0
  br label %for.body54

for.body54:                                       ; preds = %for.body54.lr.ph, %for.inc66
  %count.2138 = phi i32 [ 0, %for.body54.lr.ph ], [ %count.3, %for.inc66 ]
  %J.1137 = phi i32 [ %call51, %for.body54.lr.ph ], [ %16, %for.inc66 ]
  %nchild.1136 = phi i32 [ 0, %for.body54.lr.ph ], [ %inc55, %for.inc66 ]
  %inc55 = add nsw i32 %nchild.1136, 1
  %idxprom56 = sext i32 %J.1137 to i64
  %arrayidx57 = getelementptr inbounds i32* %13, i64 %idxprom56
  %14 = load i32* %arrayidx57, align 4, !tbaa !3
  %idxprom58 = sext i32 %14 to i64
  %arrayidx59 = getelementptr inbounds i32* %call17, i64 %idxprom58
  %15 = load i32* %arrayidx59, align 4, !tbaa !3
  %cmp60 = icmp eq i32 %15, %J.1137
  br i1 %cmp60, label %for.inc66, label %if.then61

if.then61:                                        ; preds = %for.body54
  store i32 %J.1137, i32* %arrayidx59, align 4, !tbaa !3
  %inc64 = add nsw i32 %count.2138, 1
  br label %for.inc66

for.inc66:                                        ; preds = %for.body54, %if.then61
  %count.3 = phi i32 [ %inc64, %if.then61 ], [ %count.2138, %for.body54 ]
  %arrayidx68 = getelementptr inbounds i32* %call8, i64 %idxprom56
  %16 = load i32* %arrayidx68, align 4, !tbaa !3
  %cmp53 = icmp eq i32 %16, -1
  br i1 %cmp53, label %for.end69, label %for.body54

for.end69:                                        ; preds = %for.inc66, %for.end49
  %count.2.lcssa = phi i32 [ 0, %for.end49 ], [ %count.3, %for.inc66 ]
  %nchild.1.lcssa = phi i32 [ 0, %for.end49 ], [ %inc55, %for.inc66 ]
  %17 = load i32* %nfront, align 4, !tbaa !3
  %idxprom70 = sext i32 %17 to i64
  %arrayidx71 = getelementptr inbounds i32* %call9, i64 %idxprom70
  store i32 %nchild.1.lcssa, i32* %arrayidx71, align 4, !tbaa !3
  %cmp72 = icmp ne i8* %flags.0, null
  br i1 %cmp72, label %if.then73, label %if.end82

if.then73:                                        ; preds = %for.end69
  %cmp74 = icmp sgt i32 %count.2.lcssa, 1
  %18 = load i32* %nfront, align 4, !tbaa !3
  %idxprom76 = sext i32 %18 to i64
  %arrayidx77 = getelementptr inbounds i8* %flags.0, i64 %idxprom76
  br i1 %cmp74, label %if.then75, label %if.else78

if.then75:                                        ; preds = %if.then73
  store i8 89, i8* %arrayidx77, align 1, !tbaa !1
  br label %if.end82

if.else78:                                        ; preds = %if.then73
  store i8 78, i8* %arrayidx77, align 1, !tbaa !1
  br label %if.end82

if.end82:                                         ; preds = %if.then75, %if.else78, %for.end69
  %call83 = call %struct._ChvList* @ChvList_new() #5
  %19 = load i32* %nfront, align 4, !tbaa !3
  %add84 = add nsw i32 %19, 1
  call void @ChvList_init(%struct._ChvList* %call83, i32 %add84, i32* %call9, i32 %lockflag, i8* %flags.0) #5
  call void @IVfree(i32* %call17) #5
  call void @IVfree(i32* %call9) #5
  br i1 %cmp72, label %if.then86, label %if.end87

if.then86:                                        ; preds = %if.end82
  call void @CVfree(i8* %flags.0) #5
  br label %if.end87

if.end87:                                         ; preds = %if.then86, %if.end82
  ret %struct._ChvList* %call83
}
