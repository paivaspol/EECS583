define %struct._Ideq* @FrontMtx_setUpDequeue(%struct._FrontMtx* %frontmtx, i32* %owners, i32 %myid, i8* %status, %struct._IP** %heads, i8 signext %activeFlag, i8 signext %inactiveFlag, i32 %msglvl, %struct._IO_FILE* nocapture %msgFile) #0 {
entry:
  %cmp = icmp eq %struct._FrontMtx* %frontmtx, null
  %cmp1 = icmp eq i32* %owners, null
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp eq i8* %status, null
  %or.cond79 = or i1 %or.cond, %cmp3
  %cmp5 = icmp slt i32 %myid, 0
  %or.cond80 = or i1 %or.cond79, %cmp5
  br i1 %or.cond80, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %conv = sext i8 %activeFlag to i32
  %conv6 = sext i8 %inactiveFlag to i32
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([139 x i8]* @.str15, i64 0, i64 0), %struct._FrontMtx* %frontmtx, i32* %owners, i32 %myid, i8* %status, %struct._IP** %heads, i32 %conv, i32 %conv6) #5
  tail call void @exit(i32 -1) #7
  unreachable

if.end:                                           ; preds = %entry
  %nfront7 = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 0
  %1 = load i32* %nfront7, align 4, !tbaa !3
  %tree8 = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 10
  %2 = load %struct._Tree** %tree8, align 8, !tbaa !0
  %par9 = getelementptr inbounds %struct._Tree* %2, i64 0, i32 2
  %3 = load i32** %par9, align 8, !tbaa !0
  tail call void @CVfill(i32 %1, i8* %status, i8 signext %inactiveFlag) #5
  %cmp1083 = icmp sgt i32 %1, 0
  br i1 %cmp1083, label %for.body.lr.ph, label %for.end47

for.body.lr.ph:                                   ; preds = %if.end
  %cmp22 = icmp eq %struct._IP** %heads, null
  br label %for.body

for.body:                                         ; preds = %for.inc45, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc45 ]
  %J.085 = phi i32 [ 0, %for.body.lr.ph ], [ %inc46, %for.inc45 ]
  %npath.084 = phi i32 [ 0, %for.body.lr.ph ], [ %npath.1, %for.inc45 ]
  %arrayidx = getelementptr inbounds i8* %status, i64 %indvars.iv
  %4 = load i8* %arrayidx, align 1, !tbaa !1
  %cmp14 = icmp eq i8 %4, %inactiveFlag
  br i1 %cmp14, label %if.then16, label %for.inc45

if.then16:                                        ; preds = %for.body
  %arrayidx18 = getelementptr inbounds i32* %owners, i64 %indvars.iv
  %5 = load i32* %arrayidx18, align 4, !tbaa !3
  %cmp19 = icmp eq i32 %5, %myid
  br i1 %cmp19, label %land.rhs.lr.ph, label %lor.lhs.false21

lor.lhs.false21:                                  ; preds = %if.then16
  br i1 %cmp22, label %for.inc45, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false21
  %arrayidx25 = getelementptr inbounds %struct._IP** %heads, i64 %indvars.iv
  %6 = load %struct._IP** %arrayidx25, align 8, !tbaa !0
  %cmp26 = icmp eq %struct._IP* %6, null
  br i1 %cmp26, label %for.inc45, label %land.rhs.lr.ph

land.rhs.lr.ph:                                   ; preds = %if.then16, %land.lhs.true
  %inc = add nsw i32 %npath.084, 1
  br label %land.rhs

land.rhs:                                         ; preds = %land.rhs.lr.ph, %for.body38
  %K.082 = phi i32 [ %J.085, %land.rhs.lr.ph ], [ %8, %for.body38 ]
  %idxprom32 = sext i32 %K.082 to i64
  %arrayidx33 = getelementptr inbounds i8* %status, i64 %idxprom32
  %7 = load i8* %arrayidx33, align 1, !tbaa !1
  %cmp36 = icmp eq i8 %7, %activeFlag
  br i1 %cmp36, label %for.inc45, label %for.body38

for.body38:                                       ; preds = %land.rhs
  store i8 %activeFlag, i8* %arrayidx33, align 1, !tbaa !1
  %arrayidx42 = getelementptr inbounds i32* %3, i64 %idxprom32
  %8 = load i32* %arrayidx42, align 4, !tbaa !3
  %cmp30 = icmp eq i32 %8, -1
  br i1 %cmp30, label %for.inc45, label %land.rhs

for.inc45:                                        ; preds = %land.rhs, %for.body38, %land.lhs.true, %lor.lhs.false21, %for.body
  %npath.1 = phi i32 [ %npath.084, %land.lhs.true ], [ %npath.084, %lor.lhs.false21 ], [ %npath.084, %for.body ], [ %inc, %for.body38 ], [ %inc, %land.rhs ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %inc46 = add nsw i32 %J.085, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %1
  br i1 %exitcond, label %for.end47, label %for.body

for.end47:                                        ; preds = %for.inc45, %if.end
  %npath.0.lcssa = phi i32 [ 0, %if.end ], [ %npath.1, %for.inc45 ]
  %call48 = tail call %struct._Ideq* @Ideq_new() #5
  %call49 = tail call i32 @Ideq_resize(%struct._Ideq* %call48, i32 %npath.0.lcssa) #5
  ret %struct._Ideq* %call48
}
