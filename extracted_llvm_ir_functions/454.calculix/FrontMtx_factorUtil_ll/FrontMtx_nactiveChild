define i32* @FrontMtx_nactiveChild(%struct._FrontMtx* %frontmtx, i8* %status, i32 %myid) #0 {
entry:
  %cmp = icmp eq %struct._FrontMtx* %frontmtx, null
  %cmp1 = icmp eq i8* %status, null
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp slt i32 %myid, 0
  %or.cond30 = or i1 %or.cond, %cmp3
  br i1 %or.cond30, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([60 x i8]* @.str14, i64 0, i64 0), %struct._FrontMtx* %frontmtx, i8* %status, i32 %myid) #5
  tail call void @exit(i32 -1) #7
  unreachable

if.end:                                           ; preds = %entry
  %nfront4 = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 0
  %1 = load i32* %nfront4, align 4, !tbaa !3
  %frontETree = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 11
  %2 = load %struct._ETree** %frontETree, align 8, !tbaa !0
  %call5 = tail call i32* @ETree_par(%struct._ETree* %2) #5
  %call6 = tail call i32* @IVinit(i32 %1, i32 0) #5
  %cmp731 = icmp sgt i32 %1, 0
  br i1 %cmp731, label %for.body, label %for.end

for.body:                                         ; preds = %if.end, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.end ]
  %arrayidx = getelementptr inbounds i8* %status, i64 %indvars.iv
  %3 = load i8* %arrayidx, align 1, !tbaa !1
  %cmp8 = icmp eq i8 %3, 87
  br i1 %cmp8, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %arrayidx11 = getelementptr inbounds i32* %call5, i64 %indvars.iv
  %4 = load i32* %arrayidx11, align 4, !tbaa !3
  %cmp12 = icmp eq i32 %4, -1
  br i1 %cmp12, label %for.inc, label %if.then14

if.then14:                                        ; preds = %land.lhs.true
  %idxprom15 = sext i32 %4 to i64
  %arrayidx16 = getelementptr inbounds i32* %call6, i64 %idxprom15
  %5 = load i32* %arrayidx16, align 4, !tbaa !3
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %arrayidx16, align 4, !tbaa !3
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %for.body, %if.then14
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %1
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.end
  ret i32* %call6
}
