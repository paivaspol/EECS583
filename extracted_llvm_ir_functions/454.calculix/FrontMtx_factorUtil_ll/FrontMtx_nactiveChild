define i32* @FrontMtx_nactiveChild(%struct._FrontMtx* %frontmtx, i8* %status, i32 %myid) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._FrontMtx* %frontmtx}, i64 0, metadata !416), !dbg !1059
  tail call void @llvm.dbg.value(metadata !{i8* %status}, i64 0, metadata !417), !dbg !1060
  tail call void @llvm.dbg.value(metadata !{i32 %myid}, i64 0, metadata !418), !dbg !1061
  %cmp = icmp eq %struct._FrontMtx* %frontmtx, null, !dbg !1062
  %cmp1 = icmp eq i8* %status, null, !dbg !1062
  %or.cond = or i1 %cmp, %cmp1, !dbg !1062
  %cmp3 = icmp slt i32 %myid, 0, !dbg !1062
  %or.cond30 = or i1 %or.cond, %cmp3, !dbg !1062
  br i1 %or.cond30, label %if.then, label %if.end, !dbg !1062

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !1063, !tbaa !607
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([60 x i8]* @.str14, i64 0, i64 0), %struct._FrontMtx* %frontmtx, i8* %status, i32 %myid) #6, !dbg !1063
  tail call void @exit(i32 -1) #8, !dbg !1065
  unreachable, !dbg !1065

if.end:                                           ; preds = %entry
  %nfront4 = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 0, !dbg !1066
  %1 = load i32* %nfront4, align 4, !dbg !1066, !tbaa !612
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !421), !dbg !1066
  %frontETree = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 11, !dbg !1067
  %2 = load %struct._ETree** %frontETree, align 8, !dbg !1067, !tbaa !607
  %call5 = tail call i32* @ETree_par(%struct._ETree* %2) #6, !dbg !1067
  tail call void @llvm.dbg.value(metadata !{i32* %call5}, i64 0, metadata !423), !dbg !1067
  %call6 = tail call i32* @IVinit(i32 %1, i32 0) #6, !dbg !1068
  tail call void @llvm.dbg.value(metadata !{i32* %call6}, i64 0, metadata !422), !dbg !1068
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !419), !dbg !1069
  %cmp731 = icmp sgt i32 %1, 0, !dbg !1069
  br i1 %cmp731, label %for.body, label %for.end, !dbg !1069

for.body:                                         ; preds = %if.end, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.end ]
  %arrayidx = getelementptr inbounds i8* %status, i64 %indvars.iv, !dbg !1071
  %3 = load i8* %arrayidx, align 1, !dbg !1071, !tbaa !608
  %cmp8 = icmp eq i8 %3, 87, !dbg !1071
  br i1 %cmp8, label %land.lhs.true, label %for.inc, !dbg !1071

land.lhs.true:                                    ; preds = %for.body
  %arrayidx11 = getelementptr inbounds i32* %call5, i64 %indvars.iv, !dbg !1071
  %4 = load i32* %arrayidx11, align 4, !dbg !1071, !tbaa !612
  tail call void @llvm.dbg.value(metadata !{i32 %4}, i64 0, metadata !420), !dbg !1071
  %cmp12 = icmp eq i32 %4, -1, !dbg !1071
  br i1 %cmp12, label %for.inc, label %if.then14, !dbg !1071

if.then14:                                        ; preds = %land.lhs.true
  %idxprom15 = sext i32 %4 to i64, !dbg !1073
  %arrayidx16 = getelementptr inbounds i32* %call6, i64 %idxprom15, !dbg !1073
  %5 = load i32* %arrayidx16, align 4, !dbg !1073, !tbaa !612
  %inc = add nsw i32 %5, 1, !dbg !1073
  store i32 %inc, i32* %arrayidx16, align 4, !dbg !1073, !tbaa !612
  br label %for.inc, !dbg !1075

for.inc:                                          ; preds = %land.lhs.true, %for.body, %if.then14
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1069
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !1069
  %exitcond = icmp eq i32 %lftr.wideiv, %1, !dbg !1069
  br i1 %exitcond, label %for.end, label %for.body, !dbg !1069

for.end:                                          ; preds = %for.inc, %if.end
  ret i32* %call6, !dbg !1076
}
