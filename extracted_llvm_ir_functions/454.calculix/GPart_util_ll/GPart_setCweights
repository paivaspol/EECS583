define void @GPart_setCweights(%struct._GPart* %gpart) #0 {
entry:
  %usize = alloca i32, align 4
  %uadj = alloca i32*, align 8
  %cmp = icmp eq %struct._GPart* %gpart, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([51 x i8]* @.str, i64 0, i64 0), %struct._GPart* null) #4
  call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  %nvtx1 = getelementptr inbounds %struct._GPart* %gpart, i64 0, i32 2
  %1 = load i32* %nvtx1, align 4, !tbaa !3
  %cmp2 = icmp slt i32 %1, 1
  br i1 %cmp2, label %if.then5, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %g3 = getelementptr inbounds %struct._GPart* %gpart, i64 0, i32 1
  %2 = load %struct._Graph** %g3, align 8, !tbaa !0
  %cmp4 = icmp eq %struct._Graph* %2, null
  br i1 %cmp4, label %if.then5, label %for.body.lr.ph

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %3 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([58 x i8]* @.str1, i64 0, i64 0), %struct._GPart* %gpart) #4
  call void @exit(i32 -1) #5
  unreachable

for.body.lr.ph:                                   ; preds = %lor.lhs.false
  %compidsIV = getelementptr inbounds %struct._GPart* %gpart, i64 0, i32 5
  %call8 = call i32* @IV_entries(%struct._IV* %compidsIV) #4
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv168 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next169, %for.inc ]
  %arrayidx = getelementptr inbounds i32* %call8, i64 %indvars.iv168
  %4 = load i32* %arrayidx, align 4, !tbaa !3
  %cmp10 = icmp eq i32 %4, 0
  br i1 %cmp10, label %for.inc, label %if.then11

if.then11:                                        ; preds = %for.body
  store i32 -1, i32* %arrayidx, align 4, !tbaa !3
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then11
  %indvars.iv.next169 = add i64 %indvars.iv168, 1
  %lftr.wideiv170 = trunc i64 %indvars.iv.next169 to i32
  %exitcond171 = icmp eq i32 %lftr.wideiv170, %1
  br i1 %exitcond171, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %call15 = call i32* @IVinit(i32 %1, i32 -1) #4
  br label %for.body18

for.body18:                                       ; preds = %for.end, %for.inc52
  %indvars.iv164 = phi i64 [ %indvars.iv.next165, %for.inc52 ], [ 0, %for.end ]
  %ncomp.0152 = phi i32 [ %ncomp.1, %for.inc52 ], [ 0, %for.end ]
  %arrayidx20 = getelementptr inbounds i32* %call8, i64 %indvars.iv164
  %5 = load i32* %arrayidx20, align 4, !tbaa !3
  %cmp21 = icmp eq i32 %5, -1
  br i1 %cmp21, label %if.then22, label %for.inc52

if.then22:                                        ; preds = %for.body18
  %inc23 = add nsw i32 %ncomp.0152, 1
  store i32 %inc23, i32* %arrayidx20, align 4, !tbaa !3
  %6 = trunc i64 %indvars.iv164 to i32
  store i32 %6, i32* %call15, align 4, !tbaa !3
  br label %while.body

while.cond.loopexit:                              ; preds = %for.inc48, %while.body
  %last.1.lcssa = phi i32 [ %last.0149, %while.body ], [ %last.2, %for.inc48 ]
  %7 = trunc i64 %indvars.iv162 to i32
  %cmp28 = icmp slt i32 %7, %last.1.lcssa
  br i1 %cmp28, label %while.cond.loopexit.while.body_crit_edge, label %for.inc52

while.cond.loopexit.while.body_crit_edge:         ; preds = %while.cond.loopexit
  %arrayidx31.phi.trans.insert = getelementptr inbounds i32* %call15, i64 %indvars.iv.next163
  %.pre172 = load i32* %arrayidx31.phi.trans.insert, align 4, !tbaa !3
  br label %while.body

while.body:                                       ; preds = %while.cond.loopexit.while.body_crit_edge, %if.then22
  %8 = phi i32 [ %.pre172, %while.cond.loopexit.while.body_crit_edge ], [ %6, %if.then22 ]
  %indvars.iv162 = phi i64 [ %indvars.iv.next163, %while.cond.loopexit.while.body_crit_edge ], [ 0, %if.then22 ]
  %last.0149 = phi i32 [ %last.1.lcssa, %while.cond.loopexit.while.body_crit_edge ], [ 0, %if.then22 ]
  %indvars.iv.next163 = add i64 %indvars.iv162, 1
  call void @Graph_adjAndSize(%struct._Graph* %2, i32 %8, i32* %usize, i32** %uadj) #4
  %9 = load i32* %usize, align 4, !tbaa !3
  %cmp33145 = icmp sgt i32 %9, 0
  br i1 %cmp33145, label %for.body34.lr.ph, label %while.cond.loopexit

for.body34.lr.ph:                                 ; preds = %while.body
  %10 = load i32** %uadj, align 8, !tbaa !0
  br label %for.body34

for.body34:                                       ; preds = %for.body34.lr.ph, %for.inc48
  %11 = phi i32 [ %9, %for.body34.lr.ph ], [ %14, %for.inc48 ]
  %indvars.iv160 = phi i64 [ 0, %for.body34.lr.ph ], [ %indvars.iv.next161, %for.inc48 ]
  %last.1146 = phi i32 [ %last.0149, %for.body34.lr.ph ], [ %last.2, %for.inc48 ]
  %arrayidx36 = getelementptr inbounds i32* %10, i64 %indvars.iv160
  %12 = load i32* %arrayidx36, align 4, !tbaa !3
  %cmp37 = icmp slt i32 %12, %1
  br i1 %cmp37, label %land.lhs.true, label %for.inc48

land.lhs.true:                                    ; preds = %for.body34
  %idxprom38 = sext i32 %12 to i64
  %arrayidx39 = getelementptr inbounds i32* %call8, i64 %idxprom38
  %13 = load i32* %arrayidx39, align 4, !tbaa !3
  %cmp40 = icmp eq i32 %13, -1
  br i1 %cmp40, label %if.then41, label %for.inc48

if.then41:                                        ; preds = %land.lhs.true
  store i32 %inc23, i32* %arrayidx39, align 4, !tbaa !3
  %inc44 = add nsw i32 %last.1146, 1
  %idxprom45 = sext i32 %inc44 to i64
  %arrayidx46 = getelementptr inbounds i32* %call15, i64 %idxprom45
  store i32 %12, i32* %arrayidx46, align 4, !tbaa !3
  %.pre = load i32* %usize, align 4, !tbaa !3
  br label %for.inc48

for.inc48:                                        ; preds = %for.body34, %land.lhs.true, %if.then41
  %14 = phi i32 [ %.pre, %if.then41 ], [ %11, %land.lhs.true ], [ %11, %for.body34 ]
  %last.2 = phi i32 [ %inc44, %if.then41 ], [ %last.1146, %land.lhs.true ], [ %last.1146, %for.body34 ]
  %indvars.iv.next161 = add i64 %indvars.iv160, 1
  %15 = trunc i64 %indvars.iv.next161 to i32
  %cmp33 = icmp slt i32 %15, %14
  br i1 %cmp33, label %for.body34, label %while.cond.loopexit

for.inc52:                                        ; preds = %while.cond.loopexit, %for.body18
  %ncomp.1 = phi i32 [ %ncomp.0152, %for.body18 ], [ %inc23, %while.cond.loopexit ]
  %indvars.iv.next165 = add i64 %indvars.iv164, 1
  %lftr.wideiv166 = trunc i64 %indvars.iv.next165 to i32
  %exitcond167 = icmp eq i32 %lftr.wideiv166, %1
  br i1 %exitcond167, label %for.end54, label %for.body18

for.end54:                                        ; preds = %for.inc52
  %ncomp55 = getelementptr inbounds %struct._GPart* %gpart, i64 0, i32 4
  store i32 %ncomp.1, i32* %ncomp55, align 4, !tbaa !3
  %cweightsIV = getelementptr inbounds %struct._GPart* %gpart, i64 0, i32 6
  %add = add nsw i32 %ncomp.1, 1
  call void @IV_setSize(%struct._IV* %cweightsIV, i32 %add) #4
  %call57 = call i32* @IV_entries(%struct._IV* %cweightsIV) #4
  call void @IVzero(i32 %add, i32* %call57) #4
  %16 = load %struct._Graph** %g3, align 8, !tbaa !0
  %vwghts60 = getelementptr inbounds %struct._Graph* %16, i64 0, i32 7
  %17 = load i32** %vwghts60, align 8, !tbaa !0
  %cmp61 = icmp eq i32* %17, null
  br i1 %cmp61, label %for.body78, label %for.body65

for.body65:                                       ; preds = %for.end54, %for.body65
  %indvars.iv156 = phi i64 [ %indvars.iv.next157, %for.body65 ], [ 0, %for.end54 ]
  %arrayidx67 = getelementptr inbounds i32* %17, i64 %indvars.iv156
  %18 = load i32* %arrayidx67, align 4, !tbaa !3
  %arrayidx69 = getelementptr inbounds i32* %call8, i64 %indvars.iv156
  %19 = load i32* %arrayidx69, align 4, !tbaa !3
  %idxprom70 = sext i32 %19 to i64
  %arrayidx71 = getelementptr inbounds i32* %call57, i64 %idxprom70
  %20 = load i32* %arrayidx71, align 4, !tbaa !3
  %add72 = add nsw i32 %20, %18
  store i32 %add72, i32* %arrayidx71, align 4, !tbaa !3
  %indvars.iv.next157 = add i64 %indvars.iv156, 1
  %lftr.wideiv158 = trunc i64 %indvars.iv.next157 to i32
  %exitcond159 = icmp eq i32 %lftr.wideiv158, %1
  br i1 %exitcond159, label %if.end87, label %for.body65

for.body78:                                       ; preds = %for.end54, %for.body78
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body78 ], [ 0, %for.end54 ]
  %arrayidx80 = getelementptr inbounds i32* %call8, i64 %indvars.iv
  %21 = load i32* %arrayidx80, align 4, !tbaa !3
  %idxprom81 = sext i32 %21 to i64
  %arrayidx82 = getelementptr inbounds i32* %call57, i64 %idxprom81
  %22 = load i32* %arrayidx82, align 4, !tbaa !3
  %inc83 = add nsw i32 %22, 1
  store i32 %inc83, i32* %arrayidx82, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %1
  br i1 %exitcond, label %if.end87, label %for.body78

if.end87:                                         ; preds = %for.body65, %for.body78
  call void @IVfree(i32* %call15) #4
  ret void
}
