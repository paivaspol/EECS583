define i32 @DVisdescending(i32 %n, double* nocapture readonly %dvec) #0 {
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !38, metadata !512), !dbg !573
  tail call void @llvm.dbg.value(metadata double* %dvec, i64 0, metadata !39, metadata !512), !dbg !574
  %1 = icmp slt i32 %n, 1, !dbg !575
  br i1 %1, label %.loopexit, label %2, !dbg !576

; <label>:2                                       ; preds = %0
  %3 = icmp eq i32 %n, 1, !dbg !577
  br i1 %3, label %.loopexit, label %.lr.ph, !dbg !578

.lr.ph:                                           ; preds = %2
  %4 = sext i32 %n to i64, !dbg !579
  %.pre = load double* %dvec, align 8, !dbg !581, !tbaa !565
  br label %7, !dbg !579

; <label>:5                                       ; preds = %7
  %6 = icmp slt i64 %indvars.iv.next, %4, !dbg !585
  br i1 %6, label %7, label %.loopexit, !dbg !579

; <label>:7                                       ; preds = %.lr.ph, %5
  %8 = phi double [ %.pre, %.lr.ph ], [ %10, %5 ], !dbg !586
  %indvars.iv = phi i64 [ 1, %.lr.ph ], [ %indvars.iv.next, %5 ]
  %9 = getelementptr inbounds double* %dvec, i64 %indvars.iv, !dbg !587
  %10 = load double* %9, align 8, !dbg !587, !tbaa !565
  %11 = fcmp olt double %8, %10, !dbg !588
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !579
  br i1 %11, label %.loopexit, label %5, !dbg !589

.loopexit:                                        ; preds = %7, %5, %2, %0
  %.0 = phi i32 [ 0, %0 ], [ 1, %2 ], [ 1, %5 ], [ 0, %7 ]
  ret i32 %.0, !dbg !590
}
