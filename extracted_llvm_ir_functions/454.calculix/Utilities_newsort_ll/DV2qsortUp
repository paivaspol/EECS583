define void @DV2qsortUp(i32 %n, double* %dvec1, double* %dvec2) #1 {
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !418, metadata !512), !dbg !2283
  tail call void @llvm.dbg.value(metadata double* %dvec1, i64 0, metadata !419, metadata !512), !dbg !2284
  tail call void @llvm.dbg.value(metadata double* %dvec2, i64 0, metadata !420, metadata !512), !dbg !2285
  %1 = icmp slt i32 %n, 11, !dbg !2286
  br i1 %1, label %tailrecurse._crit_edge, label %.lr.ph34, !dbg !2288

tailrecurse._crit_edge:                           ; preds = %tailrecurse, %0
  %dvec2.tr.lcssa = phi double* [ %dvec2, %0 ], [ %125, %tailrecurse ]
  %dvec1.tr.lcssa = phi double* [ %dvec1, %0 ], [ %124, %tailrecurse ]
  %n.tr.lcssa = phi i32 [ %n, %0 ], [ %95, %tailrecurse ]
  tail call void @DV2isortUp(i32 %n.tr.lcssa, double* %dvec1.tr.lcssa, double* %dvec2.tr.lcssa) #3, !dbg !2289
  ret void, !dbg !2291

.lr.ph34:                                         ; preds = %0, %tailrecurse
  %dvec2.tr32 = phi double* [ %125, %tailrecurse ], [ %dvec2, %0 ]
  %dvec1.tr31 = phi double* [ %124, %tailrecurse ], [ %dvec1, %0 ]
  %n.tr30 = phi i32 [ %95, %tailrecurse ], [ %n, %0 ]
  %2 = tail call fastcc double @Dcentervalue(i32 %n.tr30, double* %dvec1.tr31) #3, !dbg !2292
  tail call void @llvm.dbg.value(metadata double %2, i64 0, metadata !422, metadata !512), !dbg !2294
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !424, metadata !512), !dbg !2295
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !423, metadata !512), !dbg !2296
  %3 = add nsw i32 %n.tr30, -1, !dbg !2297
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !426, metadata !512), !dbg !2298
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !425, metadata !512), !dbg !2299
  %4 = icmp slt i32 %n.tr30, 1, !dbg !2300
  br i1 %4, label %.critedge.preheader._crit_edge, label %.lr.ph103.lr.ph, !dbg !2304

.lr.ph103.lr.ph:                                  ; preds = %.lr.ph34
  %5 = sext i32 %3 to i64, !dbg !2300
  br label %.lr.ph103, !dbg !2304

.lr.ph103:                                        ; preds = %.lr.ph103.lr.ph, %.outer
  %6 = phi i64 [ %5, %.lr.ph103.lr.ph ], [ %30, %.outer ]
  %7 = phi i64 [ 0, %.lr.ph103.lr.ph ], [ %29, %.outer ]
  %d.0.ph113 = phi i32 [ %3, %.lr.ph103.lr.ph ], [ %d.0102, %.outer ]
  %c.0.ph112 = phi i32 [ %3, %.lr.ph103.lr.ph ], [ %c.0101, %.outer ]
  %a.0.ph111 = phi i32 [ 0, %.lr.ph103.lr.ph ], [ %a.1, %.outer ]
  br label %8, !dbg !2304

; <label>:8                                       ; preds = %.lr.ph103, %52
  %9 = phi i64 [ %6, %.lr.ph103 ], [ %68, %52 ]
  %d.0102 = phi i32 [ %d.0.ph113, %.lr.ph103 ], [ %d.112, %52 ]
  %c.0101 = phi i32 [ %c.0.ph112, %.lr.ph103 ], [ %67, %52 ]
  %indvars.iv55100 = phi i64 [ %7, %.lr.ph103 ], [ %indvars.iv.next56, %52 ]
  %10 = getelementptr inbounds double* %dvec1.tr31, i64 %indvars.iv55100, !dbg !2305
  %11 = load double* %10, align 8, !dbg !2305, !tbaa !565
  %12 = fcmp ugt double %11, %2, !dbg !2306
  br i1 %12, label %.lr.ph, label %13, !dbg !2307

; <label>:13                                      ; preds = %8
  %14 = fcmp oeq double %11, %2, !dbg !2308
  br i1 %14, label %15, label %.outer, !dbg !2311

; <label>:15                                      ; preds = %13
  %16 = sext i32 %a.0.ph111 to i64, !dbg !2312
  %17 = getelementptr inbounds double* %dvec1.tr31, i64 %16, !dbg !2312
  %18 = bitcast double* %17 to i64*, !dbg !2312
  %19 = load i64* %18, align 8, !dbg !2312, !tbaa !565
  store double %11, double* %17, align 8, !dbg !2312, !tbaa !565
  %20 = bitcast double* %10 to i64*, !dbg !2312
  store i64 %19, i64* %20, align 8, !dbg !2312, !tbaa !565
  %21 = getelementptr inbounds double* %dvec2.tr32, i64 %16, !dbg !2312
  %22 = bitcast double* %21 to i64*, !dbg !2312
  %23 = load i64* %22, align 8, !dbg !2312, !tbaa !565
  %24 = getelementptr inbounds double* %dvec2.tr32, i64 %indvars.iv55100, !dbg !2312
  %25 = bitcast double* %24 to i64*, !dbg !2312
  %26 = load i64* %25, align 8, !dbg !2312, !tbaa !565
  store i64 %26, i64* %22, align 8, !dbg !2312, !tbaa !565
  store i64 %23, i64* %25, align 8, !dbg !2312, !tbaa !565
  %27 = add nsw i32 %a.0.ph111, 1, !dbg !2315
  tail call void @llvm.dbg.value(metadata i32 %27, i64 0, metadata !423, metadata !512), !dbg !2296
  br label %.outer, !dbg !2316

.outer:                                           ; preds = %15, %13
  %a.1 = phi i32 [ %27, %15 ], [ %a.0.ph111, %13 ]
  %28 = shl i64 %indvars.iv55100, 32
  %sext = add i64 %28, 4294967296
  %29 = ashr exact i64 %sext, 32
  %30 = sext i32 %c.0101 to i64, !dbg !2300
  %31 = icmp sgt i64 %29, %30, !dbg !2300
  br i1 %31, label %.critedge.preheader._crit_edge, label %.lr.ph103, !dbg !2304

.lr.ph:                                           ; preds = %8, %.critedge
  %indvars.iv = phi i64 [ %indvars.iv.next, %.critedge ], [ %9, %8 ]
  %d.112 = phi i32 [ %d.2, %.critedge ], [ %d.0102, %8 ]
  %c.111 = phi i32 [ %50, %.critedge ], [ %c.0101, %8 ]
  %32 = getelementptr inbounds double* %dvec1.tr31, i64 %indvars.iv, !dbg !2317
  %33 = load double* %32, align 8, !dbg !2317, !tbaa !565
  %34 = fcmp ult double %33, %2, !dbg !2318
  br i1 %34, label %52, label %35, !dbg !2319

; <label>:35                                      ; preds = %.lr.ph
  %36 = fcmp oeq double %33, %2, !dbg !2320
  br i1 %36, label %37, label %.critedge, !dbg !2323

; <label>:37                                      ; preds = %35
  tail call void @llvm.dbg.value(metadata double %33, i64 0, metadata !421, metadata !512), !dbg !2324
  %38 = sext i32 %d.112 to i64, !dbg !2325
  %39 = getelementptr inbounds double* %dvec1.tr31, i64 %38, !dbg !2325
  %40 = bitcast double* %39 to i64*, !dbg !2325
  %41 = load i64* %40, align 8, !dbg !2325, !tbaa !565
  %42 = bitcast double* %32 to i64*, !dbg !2325
  store i64 %41, i64* %42, align 8, !dbg !2325, !tbaa !565
  store double %33, double* %39, align 8, !dbg !2325, !tbaa !565
  %43 = getelementptr inbounds double* %dvec2.tr32, i64 %indvars.iv, !dbg !2325
  %44 = bitcast double* %43 to i64*, !dbg !2325
  %45 = load i64* %44, align 8, !dbg !2325, !tbaa !565
  %46 = getelementptr inbounds double* %dvec2.tr32, i64 %38, !dbg !2325
  %47 = bitcast double* %46 to i64*, !dbg !2325
  %48 = load i64* %47, align 8, !dbg !2325, !tbaa !565
  store i64 %48, i64* %44, align 8, !dbg !2325, !tbaa !565
  store i64 %45, i64* %47, align 8, !dbg !2325, !tbaa !565
  %49 = add nsw i32 %d.112, -1, !dbg !2328
  tail call void @llvm.dbg.value(metadata i32 %49, i64 0, metadata !426, metadata !512), !dbg !2298
  br label %.critedge, !dbg !2329

.critedge:                                        ; preds = %37, %35
  %d.2 = phi i32 [ %49, %37 ], [ %d.112, %35 ]
  %50 = add nsw i32 %c.111, -1, !dbg !2330
  tail call void @llvm.dbg.value(metadata i32 %50, i64 0, metadata !425, metadata !512), !dbg !2299
  %51 = icmp sgt i64 %indvars.iv, %indvars.iv55100, !dbg !2331
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !2332
  br i1 %51, label %.lr.ph, label %.critedge.preheader._crit_edge, !dbg !2332

; <label>:52                                      ; preds = %.lr.ph
  %53 = trunc i64 %indvars.iv to i32, !dbg !2333
  %54 = getelementptr inbounds double* %dvec1.tr31, i64 %indvars.iv55100, !dbg !2333
  %55 = bitcast double* %54 to i64*, !dbg !2333
  %56 = load i64* %55, align 8, !dbg !2333, !tbaa !565
  %sext79 = shl i64 %indvars.iv, 32, !dbg !2333
  %57 = ashr exact i64 %sext79, 32, !dbg !2333
  %58 = getelementptr inbounds double* %dvec1.tr31, i64 %57, !dbg !2333
  %59 = bitcast double* %58 to i64*, !dbg !2333
  %60 = load i64* %59, align 8, !dbg !2333, !tbaa !565
  store i64 %60, i64* %55, align 8, !dbg !2333, !tbaa !565
  store i64 %56, i64* %59, align 8, !dbg !2333, !tbaa !565
  %61 = getelementptr inbounds double* %dvec2.tr32, i64 %indvars.iv55100, !dbg !2333
  %62 = bitcast double* %61 to i64*, !dbg !2333
  %63 = load i64* %62, align 8, !dbg !2333, !tbaa !565
  %64 = getelementptr inbounds double* %dvec2.tr32, i64 %57, !dbg !2333
  %65 = bitcast double* %64 to i64*, !dbg !2333
  %66 = load i64* %65, align 8, !dbg !2333, !tbaa !565
  store i64 %66, i64* %62, align 8, !dbg !2333, !tbaa !565
  store i64 %63, i64* %65, align 8, !dbg !2333, !tbaa !565
  %67 = add nsw i32 %53, -1, !dbg !2335
  tail call void @llvm.dbg.value(metadata i32 %67, i64 0, metadata !425, metadata !512), !dbg !2299
  %indvars.iv.next56 = add i64 %indvars.iv55100, 1, !dbg !2336
  %68 = sext i32 %67 to i64, !dbg !2300
  %69 = icmp sgt i64 %indvars.iv.next56, %68, !dbg !2300
  br i1 %69, label %.critedge.preheader._crit_edge, label %8, !dbg !2304

.critedge.preheader._crit_edge:                   ; preds = %.outer, %.lr.ph34, %52, %.critedge
  %a.0.ph96 = phi i32 [ %a.0.ph111, %.critedge ], [ 0, %.lr.ph34 ], [ %a.1, %.outer ], [ %a.0.ph111, %52 ]
  %indvars.iv5586 = phi i64 [ %indvars.iv55100, %.critedge ], [ 0, %.lr.ph34 ], [ %29, %.outer ], [ %indvars.iv.next56, %52 ]
  %d.1.lcssa = phi i32 [ %d.2, %.critedge ], [ %3, %.lr.ph34 ], [ %d.0102, %.outer ], [ %d.112, %52 ]
  %c.1.lcssa = phi i32 [ %50, %.critedge ], [ %3, %.lr.ph34 ], [ %c.0101, %.outer ], [ %67, %52 ]
  %b.042 = trunc i64 %indvars.iv5586 to i32, !dbg !2332
  %70 = sub nsw i32 %b.042, %a.0.ph96, !dbg !2337
  %71 = icmp sgt i32 %a.0.ph96, %70, !dbg !2338
  %.a.0 = select i1 %71, i32 %70, i32 %a.0.ph96, !dbg !2339
  tail call void @llvm.dbg.value(metadata i32 %.a.0, i64 0, metadata !429, metadata !512), !dbg !2340
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !427, metadata !512), !dbg !2341
  %72 = icmp eq i32 %.a.0, 0, !dbg !2342
  br i1 %72, label %._crit_edge, label %.lr.ph23, !dbg !2345

.lr.ph23:                                         ; preds = %.critedge.preheader._crit_edge
  %73 = add i32 %b.042, 1, !dbg !2345
  %74 = add i32 %a.0.ph96, -1, !dbg !2345
  %75 = sub i32 %74, %b.042, !dbg !2345
  %76 = xor i32 %a.0.ph96, -1, !dbg !2345
  %77 = icmp sgt i32 %75, %76
  %smax = select i1 %77, i32 %75, i32 %76
  %78 = add i32 %73, %smax, !dbg !2345
  %79 = sext i32 %78 to i64
  br label %80, !dbg !2345

; <label>:80                                      ; preds = %.lr.ph23, %80
  %indvars.iv59 = phi i64 [ 0, %.lr.ph23 ], [ %indvars.iv.next60, %80 ]
  %indvars.iv57 = phi i64 [ %79, %.lr.ph23 ], [ %indvars.iv.next58, %80 ]
  %s.022 = phi i32 [ %.a.0, %.lr.ph23 ], [ %93, %80 ]
  %81 = getelementptr inbounds double* %dvec1.tr31, i64 %indvars.iv59, !dbg !2346
  %82 = bitcast double* %81 to i64*, !dbg !2346
  %83 = load i64* %82, align 8, !dbg !2346, !tbaa !565
  %84 = getelementptr inbounds double* %dvec1.tr31, i64 %indvars.iv57, !dbg !2346
  %85 = bitcast double* %84 to i64*, !dbg !2346
  %86 = load i64* %85, align 8, !dbg !2346, !tbaa !565
  store i64 %86, i64* %82, align 8, !dbg !2346, !tbaa !565
  store i64 %83, i64* %85, align 8, !dbg !2346, !tbaa !565
  %87 = getelementptr inbounds double* %dvec2.tr32, i64 %indvars.iv59, !dbg !2346
  %88 = bitcast double* %87 to i64*, !dbg !2346
  %89 = load i64* %88, align 8, !dbg !2346, !tbaa !565
  %90 = getelementptr inbounds double* %dvec2.tr32, i64 %indvars.iv57, !dbg !2346
  %91 = bitcast double* %90 to i64*, !dbg !2346
  %92 = load i64* %91, align 8, !dbg !2346, !tbaa !565
  store i64 %92, i64* %88, align 8, !dbg !2346, !tbaa !565
  store i64 %89, i64* %91, align 8, !dbg !2346, !tbaa !565
  %indvars.iv.next60 = add nuw nsw i64 %indvars.iv59, 1, !dbg !2345
  %93 = add nsw i32 %s.022, -1, !dbg !2349
  tail call void @llvm.dbg.value(metadata i32 %93, i64 0, metadata !429, metadata !512), !dbg !2340
  %94 = icmp eq i32 %93, 0, !dbg !2342
  %indvars.iv.next58 = add nsw i64 %indvars.iv57, 1, !dbg !2345
  br i1 %94, label %._crit_edge, label %80, !dbg !2345

._crit_edge:                                      ; preds = %80, %.critedge.preheader._crit_edge
  %95 = sub nsw i32 %d.1.lcssa, %c.1.lcssa, !dbg !2350
  %96 = sub nsw i32 %3, %d.1.lcssa, !dbg !2351
  %97 = icmp sgt i32 %95, %96, !dbg !2352
  %. = select i1 %97, i32 %96, i32 %95, !dbg !2353
  tail call void @llvm.dbg.value(metadata i32 %., i64 0, metadata !429, metadata !512), !dbg !2340
  tail call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !427, metadata !512), !dbg !2341
  %98 = icmp eq i32 %., 0, !dbg !2354
  br i1 %98, label %tailrecurse, label %.lr.ph28, !dbg !2357

.lr.ph28:                                         ; preds = %._crit_edge
  %99 = add i32 %n.tr30, 1, !dbg !2357
  %100 = add i32 %c.1.lcssa, -1, !dbg !2357
  %101 = sub i32 %100, %d.1.lcssa, !dbg !2357
  %102 = sub i32 %d.1.lcssa, %n.tr30, !dbg !2357
  %103 = icmp sgt i32 %101, %102
  %smax67 = select i1 %103, i32 %101, i32 %102
  %104 = add i32 %99, %smax67, !dbg !2357
  %105 = sext i32 %104 to i64
  %sext78 = shl i64 %indvars.iv5586, 32
  %106 = ashr exact i64 %sext78, 32
  br label %107, !dbg !2357

; <label>:107                                     ; preds = %.lr.ph28, %107
  %indvars.iv70 = phi i64 [ %106, %.lr.ph28 ], [ %indvars.iv.next71, %107 ]
  %indvars.iv68 = phi i64 [ %105, %.lr.ph28 ], [ %indvars.iv.next69, %107 ]
  %s.126 = phi i32 [ %., %.lr.ph28 ], [ %120, %107 ]
  %108 = getelementptr inbounds double* %dvec1.tr31, i64 %indvars.iv70, !dbg !2358
  %109 = bitcast double* %108 to i64*, !dbg !2358
  %110 = load i64* %109, align 8, !dbg !2358, !tbaa !565
  %111 = getelementptr inbounds double* %dvec1.tr31, i64 %indvars.iv68, !dbg !2358
  %112 = bitcast double* %111 to i64*, !dbg !2358
  %113 = load i64* %112, align 8, !dbg !2358, !tbaa !565
  store i64 %113, i64* %109, align 8, !dbg !2358, !tbaa !565
  store i64 %110, i64* %112, align 8, !dbg !2358, !tbaa !565
  %114 = getelementptr inbounds double* %dvec2.tr32, i64 %indvars.iv70, !dbg !2358
  %115 = bitcast double* %114 to i64*, !dbg !2358
  %116 = load i64* %115, align 8, !dbg !2358, !tbaa !565
  %117 = getelementptr inbounds double* %dvec2.tr32, i64 %indvars.iv68, !dbg !2358
  %118 = bitcast double* %117 to i64*, !dbg !2358
  %119 = load i64* %118, align 8, !dbg !2358, !tbaa !565
  store i64 %119, i64* %115, align 8, !dbg !2358, !tbaa !565
  store i64 %116, i64* %118, align 8, !dbg !2358, !tbaa !565
  %indvars.iv.next71 = add nsw i64 %indvars.iv70, 1, !dbg !2357
  %120 = add nsw i32 %s.126, -1, !dbg !2361
  tail call void @llvm.dbg.value(metadata i32 %120, i64 0, metadata !429, metadata !512), !dbg !2340
  %121 = icmp eq i32 %120, 0, !dbg !2354
  %indvars.iv.next69 = add nsw i64 %indvars.iv68, 1, !dbg !2357
  br i1 %121, label %tailrecurse, label %107, !dbg !2357

tailrecurse:                                      ; preds = %107, %._crit_edge
  tail call void @DV2qsortUp(i32 %70, double* %dvec1.tr31, double* %dvec2.tr32) #3, !dbg !2362
  %122 = sext i32 %n.tr30 to i64, !dbg !2363
  %123 = sext i32 %95 to i64, !dbg !2364
  %.sum = sub nsw i64 %122, %123, !dbg !2364
  %124 = getelementptr inbounds double* %dvec1.tr31, i64 %.sum, !dbg !2364
  %125 = getelementptr inbounds double* %dvec2.tr32, i64 %.sum, !dbg !2365
  tail call void @llvm.dbg.value(metadata i32 %95, i64 0, metadata !418, metadata !512), !dbg !2283
  tail call void @llvm.dbg.value(metadata double* %124, i64 0, metadata !419, metadata !512), !dbg !2284
  tail call void @llvm.dbg.value(metadata double* %125, i64 0, metadata !420, metadata !512), !dbg !2285
  %126 = icmp slt i32 %95, 11, !dbg !2286
  br i1 %126, label %tailrecurse._crit_edge, label %.lr.ph34, !dbg !2288
}
