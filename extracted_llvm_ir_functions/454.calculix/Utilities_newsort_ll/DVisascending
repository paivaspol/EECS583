define i32 @DVisascending(i32 %n, double* nocapture %dvec) #0 {
entry:
  %cmp = icmp slt i32 %n, 1
  br i1 %cmp, label %return, label %if.else

if.else:                                          ; preds = %entry
  %cmp1 = icmp eq i32 %n, 1
  br i1 %cmp1, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.else
  %.pre = load double* %dvec, align 8, !tbaa !3
  br label %for.body

for.cond:                                         ; preds = %for.body
  %0 = trunc i64 %indvars.iv.next to i32
  %cmp4 = icmp slt i32 %0, %n
  br i1 %cmp4, label %for.body, label %return

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %1 = phi double [ %.pre, %for.body.lr.ph ], [ %2, %for.cond ]
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %arrayidx6 = getelementptr inbounds double* %dvec, i64 %indvars.iv
  %2 = load double* %arrayidx6, align 8, !tbaa !3
  %cmp7 = fcmp ogt double %1, %2
  %indvars.iv.next = add i64 %indvars.iv, 1
  br i1 %cmp7, label %return, label %for.cond

return:                                           ; preds = %for.body, %for.cond, %if.else, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 1, %if.else ], [ 0, %for.body ], [ 1, %for.cond ]
  ret i32 %retval.0
}
