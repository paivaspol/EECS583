define i32 @DVisascending(i32 %n, double* nocapture %dvec) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %n}, i64 0, metadata !27), !dbg !522
  tail call void @llvm.dbg.value(metadata !{double* %dvec}, i64 0, metadata !28), !dbg !523
  %cmp = icmp slt i32 %n, 1, !dbg !524
  br i1 %cmp, label %return, label %if.else, !dbg !524

if.else:                                          ; preds = %entry
  %cmp1 = icmp eq i32 %n, 1, !dbg !525
  br i1 %cmp1, label %return, label %for.body.lr.ph, !dbg !525

for.body.lr.ph:                                   ; preds = %if.else
  %.pre = load double* %dvec, align 8, !dbg !526, !tbaa !529
  br label %for.body, !dbg !530

for.cond:                                         ; preds = %for.body
  %0 = trunc i64 %indvars.iv.next to i32, !dbg !530
  %cmp4 = icmp slt i32 %0, %n, !dbg !530
  br i1 %cmp4, label %for.body, label %return, !dbg !530

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %1 = phi double [ %.pre, %for.body.lr.ph ], [ %2, %for.cond ], !dbg !526
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %arrayidx6 = getelementptr inbounds double* %dvec, i64 %indvars.iv, !dbg !526
  %2 = load double* %arrayidx6, align 8, !dbg !526, !tbaa !529
  %cmp7 = fcmp ogt double %1, %2, !dbg !526
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !530
  br i1 %cmp7, label %return, label %for.cond, !dbg !526

return:                                           ; preds = %for.body, %for.cond, %if.else, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 1, %if.else ], [ 0, %for.body ], [ 1, %for.cond ]
  ret i32 %retval.0, !dbg !531
}
