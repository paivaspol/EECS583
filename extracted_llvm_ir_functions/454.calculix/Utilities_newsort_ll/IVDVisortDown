define void @IVDVisortDown(i32 %n, i32* nocapture %ivec, double* nocapture %dvec) #1 {
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !91, metadata !512), !dbg !699
  tail call void @llvm.dbg.value(metadata i32* %ivec, i64 0, metadata !92, metadata !512), !dbg !700
  tail call void @llvm.dbg.value(metadata double* %dvec, i64 0, metadata !93, metadata !512), !dbg !701
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !95, metadata !512), !dbg !702
  %1 = icmp sgt i32 %n, 1, !dbg !703
  br i1 %1, label %.preheader.lr.ph, label %._crit_edge, !dbg !706

.preheader.lr.ph:                                 ; preds = %0
  %2 = add i32 %n, -1, !dbg !706
  br label %.lr.ph, !dbg !706

.lr.ph:                                           ; preds = %.preheader.lr.ph, %.critedge
  %indvars.iv = phi i64 [ 1, %.preheader.lr.ph ], [ %indvars.iv.next, %.critedge ]
  %.phi.trans.insert = getelementptr inbounds i32* %ivec, i64 %indvars.iv
  %.pre = load i32* %.phi.trans.insert, align 4, !dbg !707, !tbaa !525
  br label %3, !dbg !711

; <label>:3                                       ; preds = %.lr.ph, %7
  %indvars.iv4 = phi i64 [ %indvars.iv, %.lr.ph ], [ %indvars.iv.next5, %7 ]
  %indvars.iv.next5 = add nsw i64 %indvars.iv4, -1, !dbg !711
  %4 = getelementptr inbounds i32* %ivec, i64 %indvars.iv.next5, !dbg !712
  %5 = load i32* %4, align 4, !dbg !712, !tbaa !525
  %6 = icmp slt i32 %5, %.pre, !dbg !713
  br i1 %6, label %7, label %.critedge, !dbg !714

; <label>:7                                       ; preds = %3
  %8 = getelementptr inbounds i32* %ivec, i64 %indvars.iv4, !dbg !707
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !96, metadata !512), !dbg !715
  store i32 %.pre, i32* %4, align 4, !dbg !716, !tbaa !525
  store i32 %5, i32* %8, align 4, !dbg !716, !tbaa !525
  %9 = getelementptr inbounds double* %dvec, i64 %indvars.iv.next5, !dbg !716
  %10 = bitcast double* %9 to i64*, !dbg !716
  %11 = load i64* %10, align 8, !dbg !716, !tbaa !565
  %12 = getelementptr inbounds double* %dvec, i64 %indvars.iv4, !dbg !716
  %13 = bitcast double* %12 to i64*, !dbg !716
  %14 = load i64* %13, align 8, !dbg !716, !tbaa !565
  store i64 %14, i64* %10, align 8, !dbg !716, !tbaa !565
  store i64 %11, i64* %13, align 8, !dbg !716, !tbaa !565
  %15 = icmp sgt i64 %indvars.iv4, 1, !dbg !719
  br i1 %15, label %3, label %.critedge, !dbg !711

.critedge:                                        ; preds = %7, %3
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !706
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !706
  %exitcond = icmp eq i32 %lftr.wideiv, %2, !dbg !706
  br i1 %exitcond, label %._crit_edge, label %.lr.ph, !dbg !706

._crit_edge:                                      ; preds = %.critedge, %0
  ret void, !dbg !720
}
