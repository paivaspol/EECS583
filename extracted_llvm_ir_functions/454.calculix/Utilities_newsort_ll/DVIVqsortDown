define void @DVIVqsortDown(i32 %n, double* %dvec, i32* %ivec) #1 {
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !461, metadata !512), !dbg !2532
  tail call void @llvm.dbg.value(metadata double* %dvec, i64 0, metadata !462, metadata !512), !dbg !2533
  tail call void @llvm.dbg.value(metadata i32* %ivec, i64 0, metadata !463, metadata !512), !dbg !2534
  %1 = icmp slt i32 %n, 11, !dbg !2535
  br i1 %1, label %tailrecurse._crit_edge, label %.lr.ph34, !dbg !2537

tailrecurse._crit_edge:                           ; preds = %tailrecurse, %0
  %ivec.tr.lcssa = phi i32* [ %ivec, %0 ], [ %115, %tailrecurse ]
  %dvec.tr.lcssa = phi double* [ %dvec, %0 ], [ %114, %tailrecurse ]
  %n.tr.lcssa = phi i32 [ %n, %0 ], [ %87, %tailrecurse ]
  tail call void @DVIVisortDown(i32 %n.tr.lcssa, double* %dvec.tr.lcssa, i32* %ivec.tr.lcssa) #3, !dbg !2538
  ret void, !dbg !2540

.lr.ph34:                                         ; preds = %0, %tailrecurse
  %ivec.tr32 = phi i32* [ %115, %tailrecurse ], [ %ivec, %0 ]
  %dvec.tr31 = phi double* [ %114, %tailrecurse ], [ %dvec, %0 ]
  %n.tr30 = phi i32 [ %87, %tailrecurse ], [ %n, %0 ]
  %2 = tail call fastcc double @Dcentervalue(i32 %n.tr30, double* %dvec.tr31) #3, !dbg !2541
  tail call void @llvm.dbg.value(metadata double %2, i64 0, metadata !465, metadata !512), !dbg !2543
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !467, metadata !512), !dbg !2544
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !466, metadata !512), !dbg !2545
  %3 = add nsw i32 %n.tr30, -1, !dbg !2546
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !469, metadata !512), !dbg !2547
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !468, metadata !512), !dbg !2548
  %4 = icmp slt i32 %n.tr30, 1, !dbg !2549
  br i1 %4, label %.critedge.preheader._crit_edge, label %.lr.ph103.lr.ph, !dbg !2553

.lr.ph103.lr.ph:                                  ; preds = %.lr.ph34
  %5 = sext i32 %3 to i64, !dbg !2549
  br label %.lr.ph103, !dbg !2553

.lr.ph103:                                        ; preds = %.lr.ph103.lr.ph, %.outer
  %6 = phi i64 [ %5, %.lr.ph103.lr.ph ], [ %28, %.outer ]
  %7 = phi i64 [ 0, %.lr.ph103.lr.ph ], [ %27, %.outer ]
  %d.0.ph113 = phi i32 [ %3, %.lr.ph103.lr.ph ], [ %d.0102, %.outer ]
  %c.0.ph112 = phi i32 [ %3, %.lr.ph103.lr.ph ], [ %c.0101, %.outer ]
  %a.0.ph111 = phi i32 [ 0, %.lr.ph103.lr.ph ], [ %a.1, %.outer ]
  br label %8, !dbg !2553

; <label>:8                                       ; preds = %.lr.ph103, %48
  %9 = phi i64 [ %6, %.lr.ph103 ], [ %62, %48 ]
  %d.0102 = phi i32 [ %d.0.ph113, %.lr.ph103 ], [ %d.112, %48 ]
  %c.0101 = phi i32 [ %c.0.ph112, %.lr.ph103 ], [ %61, %48 ]
  %indvars.iv55100 = phi i64 [ %7, %.lr.ph103 ], [ %indvars.iv.next56, %48 ]
  %10 = getelementptr inbounds double* %dvec.tr31, i64 %indvars.iv55100, !dbg !2554
  %11 = load double* %10, align 8, !dbg !2554, !tbaa !565
  %12 = fcmp ult double %11, %2, !dbg !2555
  br i1 %12, label %.lr.ph, label %13, !dbg !2556

; <label>:13                                      ; preds = %8
  %14 = fcmp oeq double %11, %2, !dbg !2557
  br i1 %14, label %15, label %.outer, !dbg !2560

; <label>:15                                      ; preds = %13
  %16 = sext i32 %a.0.ph111 to i64, !dbg !2561
  %17 = getelementptr inbounds i32* %ivec.tr32, i64 %16, !dbg !2561
  %18 = load i32* %17, align 4, !dbg !2561, !tbaa !525
  tail call void @llvm.dbg.value(metadata i32 %18, i64 0, metadata !470, metadata !512), !dbg !2564
  %19 = getelementptr inbounds i32* %ivec.tr32, i64 %indvars.iv55100, !dbg !2561
  %20 = load i32* %19, align 4, !dbg !2561, !tbaa !525
  store i32 %20, i32* %17, align 4, !dbg !2561, !tbaa !525
  store i32 %18, i32* %19, align 4, !dbg !2561, !tbaa !525
  %21 = getelementptr inbounds double* %dvec.tr31, i64 %16, !dbg !2561
  %22 = bitcast double* %21 to i64*, !dbg !2561
  %23 = load i64* %22, align 8, !dbg !2561, !tbaa !565
  %24 = bitcast double* %10 to i64*, !dbg !2561
  store double %11, double* %21, align 8, !dbg !2561, !tbaa !565
  store i64 %23, i64* %24, align 8, !dbg !2561, !tbaa !565
  %25 = add nsw i32 %a.0.ph111, 1, !dbg !2565
  tail call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !466, metadata !512), !dbg !2545
  br label %.outer, !dbg !2566

.outer:                                           ; preds = %15, %13
  %a.1 = phi i32 [ %25, %15 ], [ %a.0.ph111, %13 ]
  %26 = shl i64 %indvars.iv55100, 32
  %sext = add i64 %26, 4294967296
  %27 = ashr exact i64 %sext, 32
  %28 = sext i32 %c.0101 to i64, !dbg !2549
  %29 = icmp sgt i64 %27, %28, !dbg !2549
  br i1 %29, label %.critedge.preheader._crit_edge, label %.lr.ph103, !dbg !2553

.lr.ph:                                           ; preds = %8, %.critedge
  %indvars.iv = phi i64 [ %indvars.iv.next, %.critedge ], [ %9, %8 ]
  %d.112 = phi i32 [ %d.2, %.critedge ], [ %d.0102, %8 ]
  %c.111 = phi i32 [ %46, %.critedge ], [ %c.0101, %8 ]
  %30 = getelementptr inbounds double* %dvec.tr31, i64 %indvars.iv, !dbg !2567
  %31 = load double* %30, align 8, !dbg !2567, !tbaa !565
  %32 = fcmp ugt double %31, %2, !dbg !2568
  br i1 %32, label %48, label %33, !dbg !2569

; <label>:33                                      ; preds = %.lr.ph
  %34 = fcmp oeq double %31, %2, !dbg !2570
  br i1 %34, label %35, label %.critedge, !dbg !2573

; <label>:35                                      ; preds = %33
  %36 = getelementptr inbounds i32* %ivec.tr32, i64 %indvars.iv, !dbg !2574
  %37 = load i32* %36, align 4, !dbg !2574, !tbaa !525
  tail call void @llvm.dbg.value(metadata i32 %37, i64 0, metadata !470, metadata !512), !dbg !2564
  %38 = sext i32 %d.112 to i64, !dbg !2574
  %39 = getelementptr inbounds i32* %ivec.tr32, i64 %38, !dbg !2574
  %40 = load i32* %39, align 4, !dbg !2574, !tbaa !525
  store i32 %40, i32* %36, align 4, !dbg !2574, !tbaa !525
  store i32 %37, i32* %39, align 4, !dbg !2574, !tbaa !525
  %41 = bitcast double* %30 to i64*, !dbg !2574
  %42 = getelementptr inbounds double* %dvec.tr31, i64 %38, !dbg !2574
  %43 = bitcast double* %42 to i64*, !dbg !2574
  %44 = load i64* %43, align 8, !dbg !2574, !tbaa !565
  store i64 %44, i64* %41, align 8, !dbg !2574, !tbaa !565
  store double %31, double* %42, align 8, !dbg !2574, !tbaa !565
  %45 = add nsw i32 %d.112, -1, !dbg !2577
  tail call void @llvm.dbg.value(metadata i32 %45, i64 0, metadata !469, metadata !512), !dbg !2547
  br label %.critedge, !dbg !2578

.critedge:                                        ; preds = %35, %33
  %d.2 = phi i32 [ %45, %35 ], [ %d.112, %33 ]
  %46 = add nsw i32 %c.111, -1, !dbg !2579
  tail call void @llvm.dbg.value(metadata i32 %46, i64 0, metadata !468, metadata !512), !dbg !2548
  %47 = icmp sgt i64 %indvars.iv, %indvars.iv55100, !dbg !2580
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !2581
  br i1 %47, label %.lr.ph, label %.critedge.preheader._crit_edge, !dbg !2581

; <label>:48                                      ; preds = %.lr.ph
  %49 = trunc i64 %indvars.iv to i32, !dbg !2582
  %50 = getelementptr inbounds i32* %ivec.tr32, i64 %indvars.iv55100, !dbg !2582
  %51 = load i32* %50, align 4, !dbg !2582, !tbaa !525
  tail call void @llvm.dbg.value(metadata i32 %51, i64 0, metadata !470, metadata !512), !dbg !2564
  %sext79 = shl i64 %indvars.iv, 32, !dbg !2582
  %52 = ashr exact i64 %sext79, 32, !dbg !2582
  %53 = getelementptr inbounds i32* %ivec.tr32, i64 %52, !dbg !2582
  %54 = load i32* %53, align 4, !dbg !2582, !tbaa !525
  store i32 %54, i32* %50, align 4, !dbg !2582, !tbaa !525
  store i32 %51, i32* %53, align 4, !dbg !2582, !tbaa !525
  %55 = getelementptr inbounds double* %dvec.tr31, i64 %indvars.iv55100, !dbg !2582
  %56 = bitcast double* %55 to i64*, !dbg !2582
  %57 = load i64* %56, align 8, !dbg !2582, !tbaa !565
  %58 = getelementptr inbounds double* %dvec.tr31, i64 %52, !dbg !2582
  %59 = bitcast double* %58 to i64*, !dbg !2582
  %60 = load i64* %59, align 8, !dbg !2582, !tbaa !565
  store i64 %60, i64* %56, align 8, !dbg !2582, !tbaa !565
  store i64 %57, i64* %59, align 8, !dbg !2582, !tbaa !565
  %61 = add nsw i32 %49, -1, !dbg !2584
  tail call void @llvm.dbg.value(metadata i32 %61, i64 0, metadata !468, metadata !512), !dbg !2548
  %indvars.iv.next56 = add i64 %indvars.iv55100, 1, !dbg !2585
  %62 = sext i32 %61 to i64, !dbg !2549
  %63 = icmp sgt i64 %indvars.iv.next56, %62, !dbg !2549
  br i1 %63, label %.critedge.preheader._crit_edge, label %8, !dbg !2553

.critedge.preheader._crit_edge:                   ; preds = %.outer, %.lr.ph34, %48, %.critedge
  %a.0.ph96 = phi i32 [ %a.0.ph111, %.critedge ], [ 0, %.lr.ph34 ], [ %a.1, %.outer ], [ %a.0.ph111, %48 ]
  %indvars.iv5586 = phi i64 [ %indvars.iv55100, %.critedge ], [ 0, %.lr.ph34 ], [ %27, %.outer ], [ %indvars.iv.next56, %48 ]
  %d.1.lcssa = phi i32 [ %d.2, %.critedge ], [ %3, %.lr.ph34 ], [ %d.0102, %.outer ], [ %d.112, %48 ]
  %c.1.lcssa = phi i32 [ %46, %.critedge ], [ %3, %.lr.ph34 ], [ %c.0101, %.outer ], [ %61, %48 ]
  %b.042 = trunc i64 %indvars.iv5586 to i32, !dbg !2581
  %64 = sub nsw i32 %b.042, %a.0.ph96, !dbg !2586
  %65 = icmp sgt i32 %a.0.ph96, %64, !dbg !2587
  %.a.0 = select i1 %65, i32 %64, i32 %a.0.ph96, !dbg !2588
  tail call void @llvm.dbg.value(metadata i32 %.a.0, i64 0, metadata !473, metadata !512), !dbg !2589
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !471, metadata !512), !dbg !2590
  %66 = icmp eq i32 %.a.0, 0, !dbg !2591
  br i1 %66, label %._crit_edge, label %.lr.ph23, !dbg !2594

.lr.ph23:                                         ; preds = %.critedge.preheader._crit_edge
  %67 = add i32 %b.042, 1, !dbg !2594
  %68 = add i32 %a.0.ph96, -1, !dbg !2594
  %69 = sub i32 %68, %b.042, !dbg !2594
  %70 = xor i32 %a.0.ph96, -1, !dbg !2594
  %71 = icmp sgt i32 %69, %70
  %smax = select i1 %71, i32 %69, i32 %70
  %72 = add i32 %67, %smax, !dbg !2594
  %73 = sext i32 %72 to i64
  br label %74, !dbg !2594

; <label>:74                                      ; preds = %.lr.ph23, %74
  %indvars.iv59 = phi i64 [ 0, %.lr.ph23 ], [ %indvars.iv.next60, %74 ]
  %indvars.iv57 = phi i64 [ %73, %.lr.ph23 ], [ %indvars.iv.next58, %74 ]
  %s.022 = phi i32 [ %.a.0, %.lr.ph23 ], [ %85, %74 ]
  %75 = getelementptr inbounds i32* %ivec.tr32, i64 %indvars.iv59, !dbg !2595
  %76 = load i32* %75, align 4, !dbg !2595, !tbaa !525
  tail call void @llvm.dbg.value(metadata i32 %76, i64 0, metadata !470, metadata !512), !dbg !2564
  %77 = getelementptr inbounds i32* %ivec.tr32, i64 %indvars.iv57, !dbg !2595
  %78 = load i32* %77, align 4, !dbg !2595, !tbaa !525
  store i32 %78, i32* %75, align 4, !dbg !2595, !tbaa !525
  store i32 %76, i32* %77, align 4, !dbg !2595, !tbaa !525
  %79 = getelementptr inbounds double* %dvec.tr31, i64 %indvars.iv59, !dbg !2595
  %80 = bitcast double* %79 to i64*, !dbg !2595
  %81 = load i64* %80, align 8, !dbg !2595, !tbaa !565
  %82 = getelementptr inbounds double* %dvec.tr31, i64 %indvars.iv57, !dbg !2595
  %83 = bitcast double* %82 to i64*, !dbg !2595
  %84 = load i64* %83, align 8, !dbg !2595, !tbaa !565
  store i64 %84, i64* %80, align 8, !dbg !2595, !tbaa !565
  store i64 %81, i64* %83, align 8, !dbg !2595, !tbaa !565
  %indvars.iv.next60 = add nuw nsw i64 %indvars.iv59, 1, !dbg !2594
  %85 = add nsw i32 %s.022, -1, !dbg !2598
  tail call void @llvm.dbg.value(metadata i32 %85, i64 0, metadata !473, metadata !512), !dbg !2589
  %86 = icmp eq i32 %85, 0, !dbg !2591
  %indvars.iv.next58 = add nsw i64 %indvars.iv57, 1, !dbg !2594
  br i1 %86, label %._crit_edge, label %74, !dbg !2594

._crit_edge:                                      ; preds = %74, %.critedge.preheader._crit_edge
  %87 = sub nsw i32 %d.1.lcssa, %c.1.lcssa, !dbg !2599
  %88 = sub nsw i32 %3, %d.1.lcssa, !dbg !2600
  %89 = icmp sgt i32 %87, %88, !dbg !2601
  %. = select i1 %89, i32 %88, i32 %87, !dbg !2602
  tail call void @llvm.dbg.value(metadata i32 %., i64 0, metadata !473, metadata !512), !dbg !2589
  tail call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !471, metadata !512), !dbg !2590
  %90 = icmp eq i32 %., 0, !dbg !2603
  br i1 %90, label %tailrecurse, label %.lr.ph28, !dbg !2606

.lr.ph28:                                         ; preds = %._crit_edge
  %91 = add i32 %n.tr30, 1, !dbg !2606
  %92 = add i32 %c.1.lcssa, -1, !dbg !2606
  %93 = sub i32 %92, %d.1.lcssa, !dbg !2606
  %94 = sub i32 %d.1.lcssa, %n.tr30, !dbg !2606
  %95 = icmp sgt i32 %93, %94
  %smax67 = select i1 %95, i32 %93, i32 %94
  %96 = add i32 %91, %smax67, !dbg !2606
  %97 = sext i32 %96 to i64
  %sext78 = shl i64 %indvars.iv5586, 32
  %98 = ashr exact i64 %sext78, 32
  br label %99, !dbg !2606

; <label>:99                                      ; preds = %.lr.ph28, %99
  %indvars.iv70 = phi i64 [ %98, %.lr.ph28 ], [ %indvars.iv.next71, %99 ]
  %indvars.iv68 = phi i64 [ %97, %.lr.ph28 ], [ %indvars.iv.next69, %99 ]
  %s.126 = phi i32 [ %., %.lr.ph28 ], [ %110, %99 ]
  %100 = getelementptr inbounds i32* %ivec.tr32, i64 %indvars.iv70, !dbg !2607
  %101 = load i32* %100, align 4, !dbg !2607, !tbaa !525
  tail call void @llvm.dbg.value(metadata i32 %101, i64 0, metadata !470, metadata !512), !dbg !2564
  %102 = getelementptr inbounds i32* %ivec.tr32, i64 %indvars.iv68, !dbg !2607
  %103 = load i32* %102, align 4, !dbg !2607, !tbaa !525
  store i32 %103, i32* %100, align 4, !dbg !2607, !tbaa !525
  store i32 %101, i32* %102, align 4, !dbg !2607, !tbaa !525
  %104 = getelementptr inbounds double* %dvec.tr31, i64 %indvars.iv70, !dbg !2607
  %105 = bitcast double* %104 to i64*, !dbg !2607
  %106 = load i64* %105, align 8, !dbg !2607, !tbaa !565
  %107 = getelementptr inbounds double* %dvec.tr31, i64 %indvars.iv68, !dbg !2607
  %108 = bitcast double* %107 to i64*, !dbg !2607
  %109 = load i64* %108, align 8, !dbg !2607, !tbaa !565
  store i64 %109, i64* %105, align 8, !dbg !2607, !tbaa !565
  store i64 %106, i64* %108, align 8, !dbg !2607, !tbaa !565
  %indvars.iv.next71 = add nsw i64 %indvars.iv70, 1, !dbg !2606
  %110 = add nsw i32 %s.126, -1, !dbg !2610
  tail call void @llvm.dbg.value(metadata i32 %110, i64 0, metadata !473, metadata !512), !dbg !2589
  %111 = icmp eq i32 %110, 0, !dbg !2603
  %indvars.iv.next69 = add nsw i64 %indvars.iv68, 1, !dbg !2606
  br i1 %111, label %tailrecurse, label %99, !dbg !2606

tailrecurse:                                      ; preds = %99, %._crit_edge
  tail call void @DVIVqsortDown(i32 %64, double* %dvec.tr31, i32* %ivec.tr32) #3, !dbg !2611
  %112 = sext i32 %n.tr30 to i64, !dbg !2612
  %113 = sext i32 %87 to i64, !dbg !2613
  %.sum = sub nsw i64 %112, %113, !dbg !2613
  %114 = getelementptr inbounds double* %dvec.tr31, i64 %.sum, !dbg !2613
  %115 = getelementptr inbounds i32* %ivec.tr32, i64 %.sum, !dbg !2614
  tail call void @llvm.dbg.value(metadata i32 %87, i64 0, metadata !461, metadata !512), !dbg !2532
  tail call void @llvm.dbg.value(metadata double* %114, i64 0, metadata !462, metadata !512), !dbg !2533
  tail call void @llvm.dbg.value(metadata i32* %115, i64 0, metadata !463, metadata !512), !dbg !2534
  %116 = icmp slt i32 %87, 11, !dbg !2535
  br i1 %116, label %tailrecurse._crit_edge, label %.lr.ph34, !dbg !2537
}
