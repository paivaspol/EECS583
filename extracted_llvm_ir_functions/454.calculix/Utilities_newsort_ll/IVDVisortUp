define void @IVDVisortUp(i32 %n, i32* nocapture %ivec, double* nocapture %dvec) #1 {
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !82, metadata !512), !dbg !677
  tail call void @llvm.dbg.value(metadata i32* %ivec, i64 0, metadata !83, metadata !512), !dbg !678
  tail call void @llvm.dbg.value(metadata double* %dvec, i64 0, metadata !84, metadata !512), !dbg !679
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !86, metadata !512), !dbg !680
  %1 = icmp sgt i32 %n, 1, !dbg !681
  br i1 %1, label %.preheader.lr.ph, label %._crit_edge, !dbg !684

.preheader.lr.ph:                                 ; preds = %0
  %2 = add i32 %n, -1, !dbg !684
  br label %.lr.ph, !dbg !684

.lr.ph:                                           ; preds = %.preheader.lr.ph, %.critedge
  %indvars.iv = phi i64 [ 1, %.preheader.lr.ph ], [ %indvars.iv.next, %.critedge ]
  %.phi.trans.insert = getelementptr inbounds i32* %ivec, i64 %indvars.iv
  %.pre = load i32* %.phi.trans.insert, align 4, !dbg !685, !tbaa !525
  br label %3, !dbg !689

; <label>:3                                       ; preds = %.lr.ph, %7
  %indvars.iv4 = phi i64 [ %indvars.iv, %.lr.ph ], [ %indvars.iv.next5, %7 ]
  %indvars.iv.next5 = add nsw i64 %indvars.iv4, -1, !dbg !689
  %4 = getelementptr inbounds i32* %ivec, i64 %indvars.iv.next5, !dbg !690
  %5 = load i32* %4, align 4, !dbg !690, !tbaa !525
  %6 = icmp sgt i32 %5, %.pre, !dbg !691
  br i1 %6, label %7, label %.critedge, !dbg !692

; <label>:7                                       ; preds = %3
  %8 = getelementptr inbounds i32* %ivec, i64 %indvars.iv4, !dbg !685
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !87, metadata !512), !dbg !693
  store i32 %.pre, i32* %4, align 4, !dbg !694, !tbaa !525
  store i32 %5, i32* %8, align 4, !dbg !694, !tbaa !525
  %9 = getelementptr inbounds double* %dvec, i64 %indvars.iv.next5, !dbg !694
  %10 = bitcast double* %9 to i64*, !dbg !694
  %11 = load i64* %10, align 8, !dbg !694, !tbaa !565
  %12 = getelementptr inbounds double* %dvec, i64 %indvars.iv4, !dbg !694
  %13 = bitcast double* %12 to i64*, !dbg !694
  %14 = load i64* %13, align 8, !dbg !694, !tbaa !565
  store i64 %14, i64* %10, align 8, !dbg !694, !tbaa !565
  store i64 %11, i64* %13, align 8, !dbg !694, !tbaa !565
  %15 = icmp sgt i64 %indvars.iv4, 1, !dbg !697
  br i1 %15, label %3, label %.critedge, !dbg !689

.critedge:                                        ; preds = %7, %3
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !684
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !684
  %exitcond = icmp eq i32 %lftr.wideiv, %2, !dbg !684
  br i1 %exitcond, label %._crit_edge, label %.lr.ph, !dbg !684

._crit_edge:                                      ; preds = %.critedge, %0
  ret void, !dbg !698
}
