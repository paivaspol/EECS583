define void @IV2ZVqsortUp(i32 %n, i32* %ivec1, i32* %ivec2, double* %zvec) #1 {
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !360, metadata !512), !dbg !1890
  tail call void @llvm.dbg.value(metadata i32* %ivec1, i64 0, metadata !361, metadata !512), !dbg !1891
  tail call void @llvm.dbg.value(metadata i32* %ivec2, i64 0, metadata !362, metadata !512), !dbg !1892
  tail call void @llvm.dbg.value(metadata double* %zvec, i64 0, metadata !363, metadata !512), !dbg !1893
  %1 = icmp slt i32 %n, 11, !dbg !1894
  br i1 %1, label %tailrecurse._crit_edge, label %.lr.ph35, !dbg !1896

tailrecurse._crit_edge:                           ; preds = %tailrecurse, %0
  %zvec.tr.lcssa = phi double* [ %zvec, %0 ], [ %216, %tailrecurse ]
  %ivec2.tr.lcssa = phi i32* [ %ivec2, %0 ], [ %212, %tailrecurse ]
  %ivec1.tr.lcssa = phi i32* [ %ivec1, %0 ], [ %211, %tailrecurse ]
  %n.tr.lcssa = phi i32 [ %n, %0 ], [ %164, %tailrecurse ]
  tail call void @IV2ZVisortUp(i32 %n.tr.lcssa, i32* %ivec1.tr.lcssa, i32* %ivec2.tr.lcssa, double* %zvec.tr.lcssa) #3, !dbg !1897
  ret void, !dbg !1899

.lr.ph35:                                         ; preds = %0, %tailrecurse
  %zvec.tr33 = phi double* [ %216, %tailrecurse ], [ %zvec, %0 ]
  %ivec2.tr32 = phi i32* [ %212, %tailrecurse ], [ %ivec2, %0 ]
  %ivec1.tr31 = phi i32* [ %211, %tailrecurse ], [ %ivec1, %0 ]
  %n.tr30 = phi i32 [ %164, %tailrecurse ], [ %n, %0 ]
  %2 = tail call fastcc i32 @Icentervalue(i32 %n.tr30, i32* %ivec1.tr31) #3, !dbg !1900
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !373, metadata !512), !dbg !1902
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !366, metadata !512), !dbg !1903
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !365, metadata !512), !dbg !1904
  %3 = add nsw i32 %n.tr30, -1, !dbg !1905
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !368, metadata !512), !dbg !1906
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !367, metadata !512), !dbg !1907
  %4 = icmp slt i32 %n.tr30, 1, !dbg !1908
  br i1 %4, label %.critedge.preheader._crit_edge, label %.lr.ph107.lr.ph, !dbg !1912

.lr.ph107.lr.ph:                                  ; preds = %.lr.ph35
  %5 = sext i32 %3 to i64, !dbg !1908
  br label %.lr.ph107, !dbg !1912

.lr.ph107:                                        ; preds = %.lr.ph107.lr.ph, %.outer
  %6 = phi i64 [ %5, %.lr.ph107.lr.ph ], [ %47, %.outer ]
  %7 = phi i64 [ 0, %.lr.ph107.lr.ph ], [ %46, %.outer ]
  %d.0.ph117 = phi i32 [ %3, %.lr.ph107.lr.ph ], [ %d.0106, %.outer ]
  %c.0.ph116 = phi i32 [ %3, %.lr.ph107.lr.ph ], [ %c.0105, %.outer ]
  %a.0.ph115 = phi i32 [ 0, %.lr.ph107.lr.ph ], [ %a.1, %.outer ]
  br label %8, !dbg !1912

; <label>:8                                       ; preds = %.lr.ph107, %86
  %9 = phi i64 [ %6, %.lr.ph107 ], [ %119, %86 ]
  %d.0106 = phi i32 [ %d.0.ph117, %.lr.ph107 ], [ %d.112, %86 ]
  %c.0105 = phi i32 [ %c.0.ph116, %.lr.ph107 ], [ %118, %86 ]
  %indvars.iv58104 = phi i64 [ %7, %.lr.ph107 ], [ %indvars.iv.next59, %86 ]
  %10 = getelementptr inbounds i32* %ivec1.tr31, i64 %indvars.iv58104, !dbg !1913
  %11 = load i32* %10, align 4, !dbg !1913, !tbaa !525
  %12 = icmp sgt i32 %11, %2, !dbg !1914
  br i1 %12, label %.lr.ph, label %13, !dbg !1915

; <label>:13                                      ; preds = %8
  %14 = icmp eq i32 %11, %2, !dbg !1916
  br i1 %14, label %15, label %.outer, !dbg !1919

; <label>:15                                      ; preds = %13
  %16 = trunc i64 %indvars.iv58104 to i32, !dbg !1916
  %17 = sext i32 %a.0.ph115 to i64, !dbg !1920
  %18 = getelementptr inbounds i32* %ivec1.tr31, i64 %17, !dbg !1920
  %19 = load i32* %18, align 4, !dbg !1920, !tbaa !525
  tail call void @llvm.dbg.value(metadata i32 %19, i64 0, metadata !369, metadata !512), !dbg !1923
  store i32 %2, i32* %18, align 4, !dbg !1920, !tbaa !525
  store i32 %19, i32* %10, align 4, !dbg !1920, !tbaa !525
  %20 = getelementptr inbounds i32* %ivec2.tr32, i64 %17, !dbg !1920
  %21 = load i32* %20, align 4, !dbg !1920, !tbaa !525
  tail call void @llvm.dbg.value(metadata i32 %21, i64 0, metadata !369, metadata !512), !dbg !1923
  %22 = getelementptr inbounds i32* %ivec2.tr32, i64 %indvars.iv58104, !dbg !1920
  %23 = load i32* %22, align 4, !dbg !1920, !tbaa !525
  store i32 %23, i32* %20, align 4, !dbg !1920, !tbaa !525
  store i32 %21, i32* %22, align 4, !dbg !1920, !tbaa !525
  %24 = shl nsw i32 %a.0.ph115, 1, !dbg !1920
  %25 = sext i32 %24 to i64, !dbg !1920
  %26 = getelementptr inbounds double* %zvec.tr33, i64 %25, !dbg !1920
  %27 = bitcast double* %26 to i64*, !dbg !1920
  %28 = load i64* %27, align 8, !dbg !1920, !tbaa !565
  %29 = shl nsw i32 %16, 1, !dbg !1920
  %30 = sext i32 %29 to i64, !dbg !1920
  %31 = getelementptr inbounds double* %zvec.tr33, i64 %30, !dbg !1920
  %32 = bitcast double* %31 to i64*, !dbg !1920
  %33 = load i64* %32, align 8, !dbg !1920, !tbaa !565
  store i64 %33, i64* %27, align 8, !dbg !1920, !tbaa !565
  store i64 %28, i64* %32, align 8, !dbg !1920, !tbaa !565
  %34 = or i32 %24, 1, !dbg !1920
  %35 = sext i32 %34 to i64, !dbg !1920
  %36 = getelementptr inbounds double* %zvec.tr33, i64 %35, !dbg !1920
  %37 = bitcast double* %36 to i64*, !dbg !1920
  %38 = load i64* %37, align 8, !dbg !1920, !tbaa !565
  %39 = or i32 %29, 1, !dbg !1920
  %40 = sext i32 %39 to i64, !dbg !1920
  %41 = getelementptr inbounds double* %zvec.tr33, i64 %40, !dbg !1920
  %42 = bitcast double* %41 to i64*, !dbg !1920
  %43 = load i64* %42, align 8, !dbg !1920, !tbaa !565
  store i64 %43, i64* %37, align 8, !dbg !1920, !tbaa !565
  store i64 %38, i64* %42, align 8, !dbg !1920, !tbaa !565
  %44 = add nsw i32 %a.0.ph115, 1, !dbg !1924
  tail call void @llvm.dbg.value(metadata i32 %44, i64 0, metadata !365, metadata !512), !dbg !1904
  br label %.outer, !dbg !1925

.outer:                                           ; preds = %15, %13
  %a.1 = phi i32 [ %44, %15 ], [ %a.0.ph115, %13 ]
  %45 = shl i64 %indvars.iv58104, 32
  %sext = add i64 %45, 4294967296
  %46 = ashr exact i64 %sext, 32
  %47 = sext i32 %c.0105 to i64, !dbg !1908
  %48 = icmp sgt i64 %46, %47, !dbg !1908
  br i1 %48, label %.critedge.preheader._crit_edge, label %.lr.ph107, !dbg !1912

.lr.ph:                                           ; preds = %8, %.critedge
  %indvars.iv = phi i64 [ %indvars.iv.next, %.critedge ], [ %9, %8 ]
  %d.112 = phi i32 [ %d.2, %.critedge ], [ %d.0106, %8 ]
  %c.111 = phi i32 [ %84, %.critedge ], [ %c.0105, %8 ]
  %49 = getelementptr inbounds i32* %ivec1.tr31, i64 %indvars.iv, !dbg !1926
  %50 = load i32* %49, align 4, !dbg !1926, !tbaa !525
  %51 = icmp slt i32 %50, %2, !dbg !1927
  br i1 %51, label %86, label %52, !dbg !1928

; <label>:52                                      ; preds = %.lr.ph
  %53 = icmp eq i32 %50, %2, !dbg !1929
  br i1 %53, label %54, label %.critedge, !dbg !1932

; <label>:54                                      ; preds = %52
  tail call void @llvm.dbg.value(metadata i32 %50, i64 0, metadata !369, metadata !512), !dbg !1923
  %55 = sext i32 %d.112 to i64, !dbg !1933
  %56 = getelementptr inbounds i32* %ivec1.tr31, i64 %55, !dbg !1933
  %57 = load i32* %56, align 4, !dbg !1933, !tbaa !525
  store i32 %57, i32* %49, align 4, !dbg !1933, !tbaa !525
  store i32 %2, i32* %56, align 4, !dbg !1933, !tbaa !525
  %58 = getelementptr inbounds i32* %ivec2.tr32, i64 %indvars.iv, !dbg !1933
  %59 = load i32* %58, align 4, !dbg !1933, !tbaa !525
  tail call void @llvm.dbg.value(metadata i32 %59, i64 0, metadata !369, metadata !512), !dbg !1923
  %60 = getelementptr inbounds i32* %ivec2.tr32, i64 %55, !dbg !1933
  %61 = load i32* %60, align 4, !dbg !1933, !tbaa !525
  store i32 %61, i32* %58, align 4, !dbg !1933, !tbaa !525
  store i32 %59, i32* %60, align 4, !dbg !1933, !tbaa !525
  %62 = trunc i64 %indvars.iv to i32, !dbg !1933
  %63 = shl nsw i32 %62, 1, !dbg !1933
  %64 = sext i32 %63 to i64, !dbg !1933
  %65 = getelementptr inbounds double* %zvec.tr33, i64 %64, !dbg !1933
  %66 = bitcast double* %65 to i64*, !dbg !1933
  %67 = load i64* %66, align 8, !dbg !1933, !tbaa !565
  %68 = shl nsw i32 %d.112, 1, !dbg !1933
  %69 = sext i32 %68 to i64, !dbg !1933
  %70 = getelementptr inbounds double* %zvec.tr33, i64 %69, !dbg !1933
  %71 = bitcast double* %70 to i64*, !dbg !1933
  %72 = load i64* %71, align 8, !dbg !1933, !tbaa !565
  store i64 %72, i64* %66, align 8, !dbg !1933, !tbaa !565
  store i64 %67, i64* %71, align 8, !dbg !1933, !tbaa !565
  %73 = or i32 %63, 1, !dbg !1933
  %74 = sext i32 %73 to i64, !dbg !1933
  %75 = getelementptr inbounds double* %zvec.tr33, i64 %74, !dbg !1933
  %76 = bitcast double* %75 to i64*, !dbg !1933
  %77 = load i64* %76, align 8, !dbg !1933, !tbaa !565
  %78 = or i32 %68, 1, !dbg !1933
  %79 = sext i32 %78 to i64, !dbg !1933
  %80 = getelementptr inbounds double* %zvec.tr33, i64 %79, !dbg !1933
  %81 = bitcast double* %80 to i64*, !dbg !1933
  %82 = load i64* %81, align 8, !dbg !1933, !tbaa !565
  store i64 %82, i64* %76, align 8, !dbg !1933, !tbaa !565
  store i64 %77, i64* %81, align 8, !dbg !1933, !tbaa !565
  %83 = add nsw i32 %d.112, -1, !dbg !1936
  tail call void @llvm.dbg.value(metadata i32 %83, i64 0, metadata !368, metadata !512), !dbg !1906
  br label %.critedge, !dbg !1937

.critedge:                                        ; preds = %54, %52
  %d.2 = phi i32 [ %83, %54 ], [ %d.112, %52 ]
  %84 = add nsw i32 %c.111, -1, !dbg !1938
  tail call void @llvm.dbg.value(metadata i32 %84, i64 0, metadata !367, metadata !512), !dbg !1907
  %85 = icmp sgt i64 %indvars.iv, %indvars.iv58104, !dbg !1939
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !1940
  br i1 %85, label %.lr.ph, label %.critedge.preheader._crit_edge, !dbg !1940

; <label>:86                                      ; preds = %.lr.ph
  %87 = trunc i64 %indvars.iv to i32, !dbg !1941
  %88 = getelementptr inbounds i32* %ivec1.tr31, i64 %indvars.iv58104, !dbg !1941
  %89 = load i32* %88, align 4, !dbg !1941, !tbaa !525
  tail call void @llvm.dbg.value(metadata i32 %89, i64 0, metadata !369, metadata !512), !dbg !1923
  %sext82 = shl i64 %indvars.iv, 32, !dbg !1941
  %90 = ashr exact i64 %sext82, 32, !dbg !1941
  %91 = getelementptr inbounds i32* %ivec1.tr31, i64 %90, !dbg !1941
  %92 = load i32* %91, align 4, !dbg !1941, !tbaa !525
  store i32 %92, i32* %88, align 4, !dbg !1941, !tbaa !525
  store i32 %89, i32* %91, align 4, !dbg !1941, !tbaa !525
  %93 = getelementptr inbounds i32* %ivec2.tr32, i64 %indvars.iv58104, !dbg !1941
  %94 = load i32* %93, align 4, !dbg !1941, !tbaa !525
  tail call void @llvm.dbg.value(metadata i32 %94, i64 0, metadata !369, metadata !512), !dbg !1923
  %95 = getelementptr inbounds i32* %ivec2.tr32, i64 %90, !dbg !1941
  %96 = load i32* %95, align 4, !dbg !1941, !tbaa !525
  store i32 %96, i32* %93, align 4, !dbg !1941, !tbaa !525
  store i32 %94, i32* %95, align 4, !dbg !1941, !tbaa !525
  %97 = trunc i64 %indvars.iv58104 to i32, !dbg !1941
  %98 = shl nsw i32 %97, 1, !dbg !1941
  %99 = sext i32 %98 to i64, !dbg !1941
  %100 = getelementptr inbounds double* %zvec.tr33, i64 %99, !dbg !1941
  %101 = bitcast double* %100 to i64*, !dbg !1941
  %102 = load i64* %101, align 8, !dbg !1941, !tbaa !565
  %103 = shl nsw i32 %87, 1, !dbg !1941
  %104 = sext i32 %103 to i64, !dbg !1941
  %105 = getelementptr inbounds double* %zvec.tr33, i64 %104, !dbg !1941
  %106 = bitcast double* %105 to i64*, !dbg !1941
  %107 = load i64* %106, align 8, !dbg !1941, !tbaa !565
  store i64 %107, i64* %101, align 8, !dbg !1941, !tbaa !565
  store i64 %102, i64* %106, align 8, !dbg !1941, !tbaa !565
  %108 = or i32 %98, 1, !dbg !1941
  %109 = sext i32 %108 to i64, !dbg !1941
  %110 = getelementptr inbounds double* %zvec.tr33, i64 %109, !dbg !1941
  %111 = bitcast double* %110 to i64*, !dbg !1941
  %112 = load i64* %111, align 8, !dbg !1941, !tbaa !565
  %113 = or i32 %103, 1, !dbg !1941
  %114 = sext i32 %113 to i64, !dbg !1941
  %115 = getelementptr inbounds double* %zvec.tr33, i64 %114, !dbg !1941
  %116 = bitcast double* %115 to i64*, !dbg !1941
  %117 = load i64* %116, align 8, !dbg !1941, !tbaa !565
  store i64 %117, i64* %111, align 8, !dbg !1941, !tbaa !565
  store i64 %112, i64* %116, align 8, !dbg !1941, !tbaa !565
  %118 = add nsw i32 %87, -1, !dbg !1943
  tail call void @llvm.dbg.value(metadata i32 %118, i64 0, metadata !367, metadata !512), !dbg !1907
  %indvars.iv.next59 = add i64 %indvars.iv58104, 1, !dbg !1944
  %119 = sext i32 %118 to i64, !dbg !1908
  %120 = icmp sgt i64 %indvars.iv.next59, %119, !dbg !1908
  br i1 %120, label %.critedge.preheader._crit_edge, label %8, !dbg !1912

.critedge.preheader._crit_edge:                   ; preds = %.outer, %.lr.ph35, %86, %.critedge
  %a.0.ph99 = phi i32 [ %a.0.ph115, %.critedge ], [ 0, %.lr.ph35 ], [ %a.1, %.outer ], [ %a.0.ph115, %86 ]
  %indvars.iv5889 = phi i64 [ %indvars.iv58104, %.critedge ], [ 0, %.lr.ph35 ], [ %46, %.outer ], [ %indvars.iv.next59, %86 ]
  %d.1.lcssa = phi i32 [ %d.2, %.critedge ], [ %3, %.lr.ph35 ], [ %d.0106, %.outer ], [ %d.112, %86 ]
  %c.1.lcssa = phi i32 [ %84, %.critedge ], [ %3, %.lr.ph35 ], [ %c.0105, %.outer ], [ %118, %86 ]
  %b.044 = trunc i64 %indvars.iv5889 to i32, !dbg !1940
  %121 = sub nsw i32 %b.044, %a.0.ph99, !dbg !1945
  %122 = icmp sgt i32 %a.0.ph99, %121, !dbg !1946
  %.a.0 = select i1 %122, i32 %121, i32 %a.0.ph99, !dbg !1947
  tail call void @llvm.dbg.value(metadata i32 %.a.0, i64 0, metadata !372, metadata !512), !dbg !1948
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !370, metadata !512), !dbg !1949
  %123 = icmp eq i32 %.a.0, 0, !dbg !1950
  br i1 %123, label %._crit_edge, label %.lr.ph23, !dbg !1953

.lr.ph23:                                         ; preds = %.critedge.preheader._crit_edge
  %124 = add i32 %b.044, 1, !dbg !1953
  %125 = add i32 %a.0.ph99, -1, !dbg !1953
  %126 = sub i32 %125, %b.044, !dbg !1953
  %127 = xor i32 %a.0.ph99, -1, !dbg !1953
  %128 = icmp sgt i32 %126, %127
  %smax = select i1 %128, i32 %126, i32 %127
  %129 = add i32 %124, %smax, !dbg !1953
  %130 = sext i32 %129 to i64
  br label %131, !dbg !1953

; <label>:131                                     ; preds = %.lr.ph23, %131
  %indvars.iv62 = phi i64 [ 0, %.lr.ph23 ], [ %indvars.iv.next63, %131 ]
  %indvars.iv60 = phi i64 [ %130, %.lr.ph23 ], [ %indvars.iv.next61, %131 ]
  %s.022 = phi i32 [ %.a.0, %.lr.ph23 ], [ %162, %131 ]
  %132 = getelementptr inbounds i32* %ivec1.tr31, i64 %indvars.iv62, !dbg !1954
  %133 = load i32* %132, align 4, !dbg !1954, !tbaa !525
  tail call void @llvm.dbg.value(metadata i32 %133, i64 0, metadata !369, metadata !512), !dbg !1923
  %134 = getelementptr inbounds i32* %ivec1.tr31, i64 %indvars.iv60, !dbg !1954
  %135 = load i32* %134, align 4, !dbg !1954, !tbaa !525
  store i32 %135, i32* %132, align 4, !dbg !1954, !tbaa !525
  store i32 %133, i32* %134, align 4, !dbg !1954, !tbaa !525
  %136 = getelementptr inbounds i32* %ivec2.tr32, i64 %indvars.iv62, !dbg !1954
  %137 = load i32* %136, align 4, !dbg !1954, !tbaa !525
  tail call void @llvm.dbg.value(metadata i32 %137, i64 0, metadata !369, metadata !512), !dbg !1923
  %138 = getelementptr inbounds i32* %ivec2.tr32, i64 %indvars.iv60, !dbg !1954
  %139 = load i32* %138, align 4, !dbg !1954, !tbaa !525
  store i32 %139, i32* %136, align 4, !dbg !1954, !tbaa !525
  store i32 %137, i32* %138, align 4, !dbg !1954, !tbaa !525
  %140 = trunc i64 %indvars.iv62 to i32, !dbg !1954
  %141 = shl nsw i32 %140, 1, !dbg !1954
  %142 = sext i32 %141 to i64, !dbg !1954
  %143 = getelementptr inbounds double* %zvec.tr33, i64 %142, !dbg !1954
  %144 = bitcast double* %143 to i64*, !dbg !1954
  %145 = load i64* %144, align 8, !dbg !1954, !tbaa !565
  %146 = trunc i64 %indvars.iv60 to i32, !dbg !1954
  %147 = shl nsw i32 %146, 1, !dbg !1954
  %148 = sext i32 %147 to i64, !dbg !1954
  %149 = getelementptr inbounds double* %zvec.tr33, i64 %148, !dbg !1954
  %150 = bitcast double* %149 to i64*, !dbg !1954
  %151 = load i64* %150, align 8, !dbg !1954, !tbaa !565
  store i64 %151, i64* %144, align 8, !dbg !1954, !tbaa !565
  store i64 %145, i64* %150, align 8, !dbg !1954, !tbaa !565
  %152 = or i32 %141, 1, !dbg !1954
  %153 = sext i32 %152 to i64, !dbg !1954
  %154 = getelementptr inbounds double* %zvec.tr33, i64 %153, !dbg !1954
  %155 = bitcast double* %154 to i64*, !dbg !1954
  %156 = load i64* %155, align 8, !dbg !1954, !tbaa !565
  %157 = or i32 %147, 1, !dbg !1954
  %158 = sext i32 %157 to i64, !dbg !1954
  %159 = getelementptr inbounds double* %zvec.tr33, i64 %158, !dbg !1954
  %160 = bitcast double* %159 to i64*, !dbg !1954
  %161 = load i64* %160, align 8, !dbg !1954, !tbaa !565
  store i64 %161, i64* %155, align 8, !dbg !1954, !tbaa !565
  store i64 %156, i64* %160, align 8, !dbg !1954, !tbaa !565
  %indvars.iv.next63 = add nuw nsw i64 %indvars.iv62, 1, !dbg !1953
  %162 = add nsw i32 %s.022, -1, !dbg !1957
  tail call void @llvm.dbg.value(metadata i32 %162, i64 0, metadata !372, metadata !512), !dbg !1948
  %163 = icmp eq i32 %162, 0, !dbg !1950
  %indvars.iv.next61 = add nsw i64 %indvars.iv60, 1, !dbg !1953
  br i1 %163, label %._crit_edge, label %131, !dbg !1953

._crit_edge:                                      ; preds = %131, %.critedge.preheader._crit_edge
  %164 = sub nsw i32 %d.1.lcssa, %c.1.lcssa, !dbg !1958
  %165 = sub nsw i32 %3, %d.1.lcssa, !dbg !1959
  %166 = icmp sgt i32 %164, %165, !dbg !1960
  %. = select i1 %166, i32 %165, i32 %164, !dbg !1961
  tail call void @llvm.dbg.value(metadata i32 %., i64 0, metadata !372, metadata !512), !dbg !1948
  tail call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !370, metadata !512), !dbg !1949
  %167 = icmp eq i32 %., 0, !dbg !1962
  br i1 %167, label %tailrecurse, label %.lr.ph28, !dbg !1965

.lr.ph28:                                         ; preds = %._crit_edge
  %168 = add i32 %n.tr30, 1, !dbg !1965
  %169 = add i32 %c.1.lcssa, -1, !dbg !1965
  %170 = sub i32 %169, %d.1.lcssa, !dbg !1965
  %171 = sub i32 %d.1.lcssa, %n.tr30, !dbg !1965
  %172 = icmp sgt i32 %170, %171
  %smax70 = select i1 %172, i32 %170, i32 %171
  %173 = add i32 %168, %smax70, !dbg !1965
  %174 = sext i32 %173 to i64
  %sext81 = shl i64 %indvars.iv5889, 32
  %175 = ashr exact i64 %sext81, 32
  br label %176, !dbg !1965

; <label>:176                                     ; preds = %.lr.ph28, %176
  %indvars.iv73 = phi i64 [ %175, %.lr.ph28 ], [ %indvars.iv.next74, %176 ]
  %indvars.iv71 = phi i64 [ %174, %.lr.ph28 ], [ %indvars.iv.next72, %176 ]
  %s.126 = phi i32 [ %., %.lr.ph28 ], [ %207, %176 ]
  %177 = getelementptr inbounds i32* %ivec1.tr31, i64 %indvars.iv73, !dbg !1966
  %178 = load i32* %177, align 4, !dbg !1966, !tbaa !525
  tail call void @llvm.dbg.value(metadata i32 %178, i64 0, metadata !369, metadata !512), !dbg !1923
  %179 = getelementptr inbounds i32* %ivec1.tr31, i64 %indvars.iv71, !dbg !1966
  %180 = load i32* %179, align 4, !dbg !1966, !tbaa !525
  store i32 %180, i32* %177, align 4, !dbg !1966, !tbaa !525
  store i32 %178, i32* %179, align 4, !dbg !1966, !tbaa !525
  %181 = getelementptr inbounds i32* %ivec2.tr32, i64 %indvars.iv73, !dbg !1966
  %182 = load i32* %181, align 4, !dbg !1966, !tbaa !525
  tail call void @llvm.dbg.value(metadata i32 %182, i64 0, metadata !369, metadata !512), !dbg !1923
  %183 = getelementptr inbounds i32* %ivec2.tr32, i64 %indvars.iv71, !dbg !1966
  %184 = load i32* %183, align 4, !dbg !1966, !tbaa !525
  store i32 %184, i32* %181, align 4, !dbg !1966, !tbaa !525
  store i32 %182, i32* %183, align 4, !dbg !1966, !tbaa !525
  %185 = trunc i64 %indvars.iv73 to i32, !dbg !1966
  %186 = shl nsw i32 %185, 1, !dbg !1966
  %187 = sext i32 %186 to i64, !dbg !1966
  %188 = getelementptr inbounds double* %zvec.tr33, i64 %187, !dbg !1966
  %189 = bitcast double* %188 to i64*, !dbg !1966
  %190 = load i64* %189, align 8, !dbg !1966, !tbaa !565
  %191 = trunc i64 %indvars.iv71 to i32, !dbg !1966
  %192 = shl nsw i32 %191, 1, !dbg !1966
  %193 = sext i32 %192 to i64, !dbg !1966
  %194 = getelementptr inbounds double* %zvec.tr33, i64 %193, !dbg !1966
  %195 = bitcast double* %194 to i64*, !dbg !1966
  %196 = load i64* %195, align 8, !dbg !1966, !tbaa !565
  store i64 %196, i64* %189, align 8, !dbg !1966, !tbaa !565
  store i64 %190, i64* %195, align 8, !dbg !1966, !tbaa !565
  %197 = or i32 %186, 1, !dbg !1966
  %198 = sext i32 %197 to i64, !dbg !1966
  %199 = getelementptr inbounds double* %zvec.tr33, i64 %198, !dbg !1966
  %200 = bitcast double* %199 to i64*, !dbg !1966
  %201 = load i64* %200, align 8, !dbg !1966, !tbaa !565
  %202 = or i32 %192, 1, !dbg !1966
  %203 = sext i32 %202 to i64, !dbg !1966
  %204 = getelementptr inbounds double* %zvec.tr33, i64 %203, !dbg !1966
  %205 = bitcast double* %204 to i64*, !dbg !1966
  %206 = load i64* %205, align 8, !dbg !1966, !tbaa !565
  store i64 %206, i64* %200, align 8, !dbg !1966, !tbaa !565
  store i64 %201, i64* %205, align 8, !dbg !1966, !tbaa !565
  %indvars.iv.next74 = add nsw i64 %indvars.iv73, 1, !dbg !1965
  %207 = add nsw i32 %s.126, -1, !dbg !1969
  tail call void @llvm.dbg.value(metadata i32 %207, i64 0, metadata !372, metadata !512), !dbg !1948
  %208 = icmp eq i32 %207, 0, !dbg !1962
  %indvars.iv.next72 = add nsw i64 %indvars.iv71, 1, !dbg !1965
  br i1 %208, label %tailrecurse, label %176, !dbg !1965

tailrecurse:                                      ; preds = %176, %._crit_edge
  tail call void @IV2ZVqsortUp(i32 %121, i32* %ivec1.tr31, i32* %ivec2.tr32, double* %zvec.tr33) #3, !dbg !1970
  %209 = sext i32 %n.tr30 to i64, !dbg !1971
  %210 = sext i32 %164 to i64, !dbg !1972
  %.sum = sub nsw i64 %209, %210, !dbg !1972
  %211 = getelementptr inbounds i32* %ivec1.tr31, i64 %.sum, !dbg !1972
  %212 = getelementptr inbounds i32* %ivec2.tr32, i64 %.sum, !dbg !1973
  %213 = sub nsw i32 %n.tr30, %164, !dbg !1974
  %214 = shl nsw i32 %213, 1, !dbg !1975
  %215 = sext i32 %214 to i64, !dbg !1976
  %216 = getelementptr inbounds double* %zvec.tr33, i64 %215, !dbg !1976
  tail call void @llvm.dbg.value(metadata i32 %164, i64 0, metadata !360, metadata !512), !dbg !1890
  tail call void @llvm.dbg.value(metadata i32* %211, i64 0, metadata !361, metadata !512), !dbg !1891
  tail call void @llvm.dbg.value(metadata i32* %212, i64 0, metadata !362, metadata !512), !dbg !1892
  tail call void @llvm.dbg.value(metadata double* %216, i64 0, metadata !363, metadata !512), !dbg !1893
  %217 = icmp slt i32 %164, 11, !dbg !1894
  br i1 %217, label %tailrecurse._crit_edge, label %.lr.ph35, !dbg !1896
}
