define void @IVZVqsortUp(i32 %n, i32* %ivec, double* %zvec) #1 {
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !330, metadata !512), !dbg !1720
  tail call void @llvm.dbg.value(metadata i32* %ivec, i64 0, metadata !331, metadata !512), !dbg !1721
  tail call void @llvm.dbg.value(metadata double* %zvec, i64 0, metadata !332, metadata !512), !dbg !1722
  %1 = icmp slt i32 %n, 11, !dbg !1723
  br i1 %1, label %tailrecurse._crit_edge, label %.lr.ph32, !dbg !1725

tailrecurse._crit_edge:                           ; preds = %tailrecurse, %0
  %zvec.tr.lcssa = phi double* [ %zvec, %0 ], [ %195, %tailrecurse ]
  %ivec.tr.lcssa = phi i32* [ %ivec, %0 ], [ %191, %tailrecurse ]
  %n.tr.lcssa = phi i32 [ %n, %0 ], [ %148, %tailrecurse ]
  tail call void @IVZVisortUp(i32 %n.tr.lcssa, i32* %ivec.tr.lcssa, double* %zvec.tr.lcssa) #3, !dbg !1726
  ret void, !dbg !1728

.lr.ph32:                                         ; preds = %0, %tailrecurse
  %zvec.tr30 = phi double* [ %195, %tailrecurse ], [ %zvec, %0 ]
  %ivec.tr29 = phi i32* [ %191, %tailrecurse ], [ %ivec, %0 ]
  %n.tr28 = phi i32 [ %148, %tailrecurse ], [ %n, %0 ]
  %2 = tail call fastcc i32 @Icentervalue(i32 %n.tr28, i32* %ivec.tr29) #3, !dbg !1729
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !342, metadata !512), !dbg !1731
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !335, metadata !512), !dbg !1732
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !334, metadata !512), !dbg !1733
  %3 = add nsw i32 %n.tr28, -1, !dbg !1734
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !337, metadata !512), !dbg !1735
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !336, metadata !512), !dbg !1736
  %4 = icmp slt i32 %n.tr28, 1, !dbg !1737
  br i1 %4, label %.critedge.preheader._crit_edge, label %.lr.ph94.lr.ph, !dbg !1741

.lr.ph94.lr.ph:                                   ; preds = %.lr.ph32
  %5 = sext i32 %3 to i64, !dbg !1737
  br label %.lr.ph94, !dbg !1741

.lr.ph94:                                         ; preds = %.lr.ph94.lr.ph, %.outer
  %6 = phi i64 [ %5, %.lr.ph94.lr.ph ], [ %43, %.outer ]
  %7 = phi i64 [ 0, %.lr.ph94.lr.ph ], [ %42, %.outer ]
  %d.0.ph104 = phi i32 [ %3, %.lr.ph94.lr.ph ], [ %d.093, %.outer ]
  %c.0.ph103 = phi i32 [ %3, %.lr.ph94.lr.ph ], [ %c.092, %.outer ]
  %a.0.ph102 = phi i32 [ 0, %.lr.ph94.lr.ph ], [ %a.1, %.outer ]
  br label %8, !dbg !1741

; <label>:8                                       ; preds = %.lr.ph94, %78
  %9 = phi i64 [ %6, %.lr.ph94 ], [ %107, %78 ]
  %d.093 = phi i32 [ %d.0.ph104, %.lr.ph94 ], [ %d.110, %78 ]
  %c.092 = phi i32 [ %c.0.ph103, %.lr.ph94 ], [ %106, %78 ]
  %indvars.iv5291 = phi i64 [ %7, %.lr.ph94 ], [ %indvars.iv.next53, %78 ]
  %10 = getelementptr inbounds i32* %ivec.tr29, i64 %indvars.iv5291, !dbg !1742
  %11 = load i32* %10, align 4, !dbg !1742, !tbaa !525
  %12 = icmp sgt i32 %11, %2, !dbg !1743
  br i1 %12, label %.lr.ph, label %13, !dbg !1744

; <label>:13                                      ; preds = %8
  %14 = icmp eq i32 %11, %2, !dbg !1745
  br i1 %14, label %15, label %.outer, !dbg !1748

; <label>:15                                      ; preds = %13
  %16 = trunc i64 %indvars.iv5291 to i32, !dbg !1745
  %17 = sext i32 %a.0.ph102 to i64, !dbg !1749
  %18 = getelementptr inbounds i32* %ivec.tr29, i64 %17, !dbg !1749
  %19 = load i32* %18, align 4, !dbg !1749, !tbaa !525
  tail call void @llvm.dbg.value(metadata i32 %19, i64 0, metadata !338, metadata !512), !dbg !1752
  store i32 %2, i32* %18, align 4, !dbg !1749, !tbaa !525
  store i32 %19, i32* %10, align 4, !dbg !1749, !tbaa !525
  %20 = shl nsw i32 %a.0.ph102, 1, !dbg !1749
  %21 = sext i32 %20 to i64, !dbg !1749
  %22 = getelementptr inbounds double* %zvec.tr30, i64 %21, !dbg !1749
  %23 = bitcast double* %22 to i64*, !dbg !1749
  %24 = load i64* %23, align 8, !dbg !1749, !tbaa !565
  %25 = shl nsw i32 %16, 1, !dbg !1749
  %26 = sext i32 %25 to i64, !dbg !1749
  %27 = getelementptr inbounds double* %zvec.tr30, i64 %26, !dbg !1749
  %28 = bitcast double* %27 to i64*, !dbg !1749
  %29 = load i64* %28, align 8, !dbg !1749, !tbaa !565
  store i64 %29, i64* %23, align 8, !dbg !1749, !tbaa !565
  store i64 %24, i64* %28, align 8, !dbg !1749, !tbaa !565
  %30 = or i32 %20, 1, !dbg !1749
  %31 = sext i32 %30 to i64, !dbg !1749
  %32 = getelementptr inbounds double* %zvec.tr30, i64 %31, !dbg !1749
  %33 = bitcast double* %32 to i64*, !dbg !1749
  %34 = load i64* %33, align 8, !dbg !1749, !tbaa !565
  %35 = or i32 %25, 1, !dbg !1749
  %36 = sext i32 %35 to i64, !dbg !1749
  %37 = getelementptr inbounds double* %zvec.tr30, i64 %36, !dbg !1749
  %38 = bitcast double* %37 to i64*, !dbg !1749
  %39 = load i64* %38, align 8, !dbg !1749, !tbaa !565
  store i64 %39, i64* %33, align 8, !dbg !1749, !tbaa !565
  store i64 %34, i64* %38, align 8, !dbg !1749, !tbaa !565
  %40 = add nsw i32 %a.0.ph102, 1, !dbg !1753
  tail call void @llvm.dbg.value(metadata i32 %40, i64 0, metadata !334, metadata !512), !dbg !1733
  br label %.outer, !dbg !1754

.outer:                                           ; preds = %15, %13
  %a.1 = phi i32 [ %40, %15 ], [ %a.0.ph102, %13 ]
  %41 = shl i64 %indvars.iv5291, 32
  %sext = add i64 %41, 4294967296
  %42 = ashr exact i64 %sext, 32
  %43 = sext i32 %c.092 to i64, !dbg !1737
  %44 = icmp sgt i64 %42, %43, !dbg !1737
  br i1 %44, label %.critedge.preheader._crit_edge, label %.lr.ph94, !dbg !1741

.lr.ph:                                           ; preds = %8, %.critedge
  %indvars.iv = phi i64 [ %indvars.iv.next, %.critedge ], [ %9, %8 ]
  %d.110 = phi i32 [ %d.2, %.critedge ], [ %d.093, %8 ]
  %c.19 = phi i32 [ %76, %.critedge ], [ %c.092, %8 ]
  %45 = getelementptr inbounds i32* %ivec.tr29, i64 %indvars.iv, !dbg !1755
  %46 = load i32* %45, align 4, !dbg !1755, !tbaa !525
  %47 = icmp slt i32 %46, %2, !dbg !1756
  br i1 %47, label %78, label %48, !dbg !1757

; <label>:48                                      ; preds = %.lr.ph
  %49 = icmp eq i32 %46, %2, !dbg !1758
  br i1 %49, label %50, label %.critedge, !dbg !1761

; <label>:50                                      ; preds = %48
  tail call void @llvm.dbg.value(metadata i32 %46, i64 0, metadata !338, metadata !512), !dbg !1752
  %51 = sext i32 %d.110 to i64, !dbg !1762
  %52 = getelementptr inbounds i32* %ivec.tr29, i64 %51, !dbg !1762
  %53 = load i32* %52, align 4, !dbg !1762, !tbaa !525
  store i32 %53, i32* %45, align 4, !dbg !1762, !tbaa !525
  store i32 %2, i32* %52, align 4, !dbg !1762, !tbaa !525
  %54 = trunc i64 %indvars.iv to i32, !dbg !1762
  %55 = shl nsw i32 %54, 1, !dbg !1762
  %56 = sext i32 %55 to i64, !dbg !1762
  %57 = getelementptr inbounds double* %zvec.tr30, i64 %56, !dbg !1762
  %58 = bitcast double* %57 to i64*, !dbg !1762
  %59 = load i64* %58, align 8, !dbg !1762, !tbaa !565
  %60 = shl nsw i32 %d.110, 1, !dbg !1762
  %61 = sext i32 %60 to i64, !dbg !1762
  %62 = getelementptr inbounds double* %zvec.tr30, i64 %61, !dbg !1762
  %63 = bitcast double* %62 to i64*, !dbg !1762
  %64 = load i64* %63, align 8, !dbg !1762, !tbaa !565
  store i64 %64, i64* %58, align 8, !dbg !1762, !tbaa !565
  store i64 %59, i64* %63, align 8, !dbg !1762, !tbaa !565
  %65 = or i32 %55, 1, !dbg !1762
  %66 = sext i32 %65 to i64, !dbg !1762
  %67 = getelementptr inbounds double* %zvec.tr30, i64 %66, !dbg !1762
  %68 = bitcast double* %67 to i64*, !dbg !1762
  %69 = load i64* %68, align 8, !dbg !1762, !tbaa !565
  %70 = or i32 %60, 1, !dbg !1762
  %71 = sext i32 %70 to i64, !dbg !1762
  %72 = getelementptr inbounds double* %zvec.tr30, i64 %71, !dbg !1762
  %73 = bitcast double* %72 to i64*, !dbg !1762
  %74 = load i64* %73, align 8, !dbg !1762, !tbaa !565
  store i64 %74, i64* %68, align 8, !dbg !1762, !tbaa !565
  store i64 %69, i64* %73, align 8, !dbg !1762, !tbaa !565
  %75 = add nsw i32 %d.110, -1, !dbg !1765
  tail call void @llvm.dbg.value(metadata i32 %75, i64 0, metadata !337, metadata !512), !dbg !1735
  br label %.critedge, !dbg !1766

.critedge:                                        ; preds = %50, %48
  %d.2 = phi i32 [ %75, %50 ], [ %d.110, %48 ]
  %76 = add nsw i32 %c.19, -1, !dbg !1767
  tail call void @llvm.dbg.value(metadata i32 %76, i64 0, metadata !336, metadata !512), !dbg !1736
  %77 = icmp sgt i64 %indvars.iv, %indvars.iv5291, !dbg !1768
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !1769
  br i1 %77, label %.lr.ph, label %.critedge.preheader._crit_edge, !dbg !1769

; <label>:78                                      ; preds = %.lr.ph
  %79 = trunc i64 %indvars.iv to i32, !dbg !1770
  %80 = getelementptr inbounds i32* %ivec.tr29, i64 %indvars.iv5291, !dbg !1770
  %81 = load i32* %80, align 4, !dbg !1770, !tbaa !525
  tail call void @llvm.dbg.value(metadata i32 %81, i64 0, metadata !338, metadata !512), !dbg !1752
  %sext70 = shl i64 %indvars.iv, 32, !dbg !1770
  %82 = ashr exact i64 %sext70, 32, !dbg !1770
  %83 = getelementptr inbounds i32* %ivec.tr29, i64 %82, !dbg !1770
  %84 = load i32* %83, align 4, !dbg !1770, !tbaa !525
  store i32 %84, i32* %80, align 4, !dbg !1770, !tbaa !525
  store i32 %81, i32* %83, align 4, !dbg !1770, !tbaa !525
  %85 = trunc i64 %indvars.iv5291 to i32, !dbg !1770
  %86 = shl nsw i32 %85, 1, !dbg !1770
  %87 = sext i32 %86 to i64, !dbg !1770
  %88 = getelementptr inbounds double* %zvec.tr30, i64 %87, !dbg !1770
  %89 = bitcast double* %88 to i64*, !dbg !1770
  %90 = load i64* %89, align 8, !dbg !1770, !tbaa !565
  %91 = shl nsw i32 %79, 1, !dbg !1770
  %92 = sext i32 %91 to i64, !dbg !1770
  %93 = getelementptr inbounds double* %zvec.tr30, i64 %92, !dbg !1770
  %94 = bitcast double* %93 to i64*, !dbg !1770
  %95 = load i64* %94, align 8, !dbg !1770, !tbaa !565
  store i64 %95, i64* %89, align 8, !dbg !1770, !tbaa !565
  store i64 %90, i64* %94, align 8, !dbg !1770, !tbaa !565
  %96 = or i32 %86, 1, !dbg !1770
  %97 = sext i32 %96 to i64, !dbg !1770
  %98 = getelementptr inbounds double* %zvec.tr30, i64 %97, !dbg !1770
  %99 = bitcast double* %98 to i64*, !dbg !1770
  %100 = load i64* %99, align 8, !dbg !1770, !tbaa !565
  %101 = or i32 %91, 1, !dbg !1770
  %102 = sext i32 %101 to i64, !dbg !1770
  %103 = getelementptr inbounds double* %zvec.tr30, i64 %102, !dbg !1770
  %104 = bitcast double* %103 to i64*, !dbg !1770
  %105 = load i64* %104, align 8, !dbg !1770, !tbaa !565
  store i64 %105, i64* %99, align 8, !dbg !1770, !tbaa !565
  store i64 %100, i64* %104, align 8, !dbg !1770, !tbaa !565
  %106 = add nsw i32 %79, -1, !dbg !1772
  tail call void @llvm.dbg.value(metadata i32 %106, i64 0, metadata !336, metadata !512), !dbg !1736
  %indvars.iv.next53 = add i64 %indvars.iv5291, 1, !dbg !1773
  %107 = sext i32 %106 to i64, !dbg !1737
  %108 = icmp sgt i64 %indvars.iv.next53, %107, !dbg !1737
  br i1 %108, label %.critedge.preheader._crit_edge, label %8, !dbg !1741

.critedge.preheader._crit_edge:                   ; preds = %.outer, %.lr.ph32, %78, %.critedge
  %a.0.ph87 = phi i32 [ %a.0.ph102, %.critedge ], [ 0, %.lr.ph32 ], [ %a.1, %.outer ], [ %a.0.ph102, %78 ]
  %indvars.iv5277 = phi i64 [ %indvars.iv5291, %.critedge ], [ 0, %.lr.ph32 ], [ %42, %.outer ], [ %indvars.iv.next53, %78 ]
  %d.1.lcssa = phi i32 [ %d.2, %.critedge ], [ %3, %.lr.ph32 ], [ %d.093, %.outer ], [ %d.110, %78 ]
  %c.1.lcssa = phi i32 [ %76, %.critedge ], [ %3, %.lr.ph32 ], [ %c.092, %.outer ], [ %106, %78 ]
  %b.040 = trunc i64 %indvars.iv5277 to i32, !dbg !1769
  %109 = sub nsw i32 %b.040, %a.0.ph87, !dbg !1774
  %110 = icmp sgt i32 %a.0.ph87, %109, !dbg !1775
  %.a.0 = select i1 %110, i32 %109, i32 %a.0.ph87, !dbg !1776
  tail call void @llvm.dbg.value(metadata i32 %.a.0, i64 0, metadata !341, metadata !512), !dbg !1777
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !339, metadata !512), !dbg !1778
  %111 = icmp eq i32 %.a.0, 0, !dbg !1779
  br i1 %111, label %._crit_edge, label %.lr.ph21, !dbg !1782

.lr.ph21:                                         ; preds = %.critedge.preheader._crit_edge
  %112 = add i32 %b.040, 1, !dbg !1782
  %113 = add i32 %a.0.ph87, -1, !dbg !1782
  %114 = sub i32 %113, %b.040, !dbg !1782
  %115 = xor i32 %a.0.ph87, -1, !dbg !1782
  %116 = icmp sgt i32 %114, %115
  %smax = select i1 %116, i32 %114, i32 %115
  %117 = add i32 %112, %smax, !dbg !1782
  %118 = sext i32 %117 to i64
  br label %119, !dbg !1782

; <label>:119                                     ; preds = %.lr.ph21, %119
  %indvars.iv56 = phi i64 [ 0, %.lr.ph21 ], [ %indvars.iv.next57, %119 ]
  %indvars.iv54 = phi i64 [ %118, %.lr.ph21 ], [ %indvars.iv.next55, %119 ]
  %s.020 = phi i32 [ %.a.0, %.lr.ph21 ], [ %146, %119 ]
  %120 = getelementptr inbounds i32* %ivec.tr29, i64 %indvars.iv56, !dbg !1783
  %121 = load i32* %120, align 4, !dbg !1783, !tbaa !525
  tail call void @llvm.dbg.value(metadata i32 %121, i64 0, metadata !338, metadata !512), !dbg !1752
  %122 = getelementptr inbounds i32* %ivec.tr29, i64 %indvars.iv54, !dbg !1783
  %123 = load i32* %122, align 4, !dbg !1783, !tbaa !525
  store i32 %123, i32* %120, align 4, !dbg !1783, !tbaa !525
  store i32 %121, i32* %122, align 4, !dbg !1783, !tbaa !525
  %124 = trunc i64 %indvars.iv56 to i32, !dbg !1783
  %125 = shl nsw i32 %124, 1, !dbg !1783
  %126 = sext i32 %125 to i64, !dbg !1783
  %127 = getelementptr inbounds double* %zvec.tr30, i64 %126, !dbg !1783
  %128 = bitcast double* %127 to i64*, !dbg !1783
  %129 = load i64* %128, align 8, !dbg !1783, !tbaa !565
  %130 = trunc i64 %indvars.iv54 to i32, !dbg !1783
  %131 = shl nsw i32 %130, 1, !dbg !1783
  %132 = sext i32 %131 to i64, !dbg !1783
  %133 = getelementptr inbounds double* %zvec.tr30, i64 %132, !dbg !1783
  %134 = bitcast double* %133 to i64*, !dbg !1783
  %135 = load i64* %134, align 8, !dbg !1783, !tbaa !565
  store i64 %135, i64* %128, align 8, !dbg !1783, !tbaa !565
  store i64 %129, i64* %134, align 8, !dbg !1783, !tbaa !565
  %136 = or i32 %125, 1, !dbg !1783
  %137 = sext i32 %136 to i64, !dbg !1783
  %138 = getelementptr inbounds double* %zvec.tr30, i64 %137, !dbg !1783
  %139 = bitcast double* %138 to i64*, !dbg !1783
  %140 = load i64* %139, align 8, !dbg !1783, !tbaa !565
  %141 = or i32 %131, 1, !dbg !1783
  %142 = sext i32 %141 to i64, !dbg !1783
  %143 = getelementptr inbounds double* %zvec.tr30, i64 %142, !dbg !1783
  %144 = bitcast double* %143 to i64*, !dbg !1783
  %145 = load i64* %144, align 8, !dbg !1783, !tbaa !565
  store i64 %145, i64* %139, align 8, !dbg !1783, !tbaa !565
  store i64 %140, i64* %144, align 8, !dbg !1783, !tbaa !565
  %indvars.iv.next57 = add nuw nsw i64 %indvars.iv56, 1, !dbg !1782
  %146 = add nsw i32 %s.020, -1, !dbg !1786
  tail call void @llvm.dbg.value(metadata i32 %146, i64 0, metadata !341, metadata !512), !dbg !1777
  %147 = icmp eq i32 %146, 0, !dbg !1779
  %indvars.iv.next55 = add nsw i64 %indvars.iv54, 1, !dbg !1782
  br i1 %147, label %._crit_edge, label %119, !dbg !1782

._crit_edge:                                      ; preds = %119, %.critedge.preheader._crit_edge
  %148 = sub nsw i32 %d.1.lcssa, %c.1.lcssa, !dbg !1787
  %149 = sub nsw i32 %3, %d.1.lcssa, !dbg !1788
  %150 = icmp sgt i32 %148, %149, !dbg !1789
  %. = select i1 %150, i32 %149, i32 %148, !dbg !1790
  tail call void @llvm.dbg.value(metadata i32 %., i64 0, metadata !341, metadata !512), !dbg !1777
  tail call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !339, metadata !512), !dbg !1778
  %151 = icmp eq i32 %., 0, !dbg !1791
  br i1 %151, label %tailrecurse, label %.lr.ph26, !dbg !1794

.lr.ph26:                                         ; preds = %._crit_edge
  %152 = add i32 %n.tr28, 1, !dbg !1794
  %153 = add i32 %c.1.lcssa, -1, !dbg !1794
  %154 = sub i32 %153, %d.1.lcssa, !dbg !1794
  %155 = sub i32 %d.1.lcssa, %n.tr28, !dbg !1794
  %156 = icmp sgt i32 %154, %155
  %smax61 = select i1 %156, i32 %154, i32 %155
  %157 = add i32 %152, %smax61, !dbg !1794
  %158 = sext i32 %157 to i64
  %sext69 = shl i64 %indvars.iv5277, 32
  %159 = ashr exact i64 %sext69, 32
  br label %160, !dbg !1794

; <label>:160                                     ; preds = %.lr.ph26, %160
  %indvars.iv64 = phi i64 [ %159, %.lr.ph26 ], [ %indvars.iv.next65, %160 ]
  %indvars.iv62 = phi i64 [ %158, %.lr.ph26 ], [ %indvars.iv.next63, %160 ]
  %s.124 = phi i32 [ %., %.lr.ph26 ], [ %187, %160 ]
  %161 = getelementptr inbounds i32* %ivec.tr29, i64 %indvars.iv64, !dbg !1795
  %162 = load i32* %161, align 4, !dbg !1795, !tbaa !525
  tail call void @llvm.dbg.value(metadata i32 %162, i64 0, metadata !338, metadata !512), !dbg !1752
  %163 = getelementptr inbounds i32* %ivec.tr29, i64 %indvars.iv62, !dbg !1795
  %164 = load i32* %163, align 4, !dbg !1795, !tbaa !525
  store i32 %164, i32* %161, align 4, !dbg !1795, !tbaa !525
  store i32 %162, i32* %163, align 4, !dbg !1795, !tbaa !525
  %165 = trunc i64 %indvars.iv64 to i32, !dbg !1795
  %166 = shl nsw i32 %165, 1, !dbg !1795
  %167 = sext i32 %166 to i64, !dbg !1795
  %168 = getelementptr inbounds double* %zvec.tr30, i64 %167, !dbg !1795
  %169 = bitcast double* %168 to i64*, !dbg !1795
  %170 = load i64* %169, align 8, !dbg !1795, !tbaa !565
  %171 = trunc i64 %indvars.iv62 to i32, !dbg !1795
  %172 = shl nsw i32 %171, 1, !dbg !1795
  %173 = sext i32 %172 to i64, !dbg !1795
  %174 = getelementptr inbounds double* %zvec.tr30, i64 %173, !dbg !1795
  %175 = bitcast double* %174 to i64*, !dbg !1795
  %176 = load i64* %175, align 8, !dbg !1795, !tbaa !565
  store i64 %176, i64* %169, align 8, !dbg !1795, !tbaa !565
  store i64 %170, i64* %175, align 8, !dbg !1795, !tbaa !565
  %177 = or i32 %166, 1, !dbg !1795
  %178 = sext i32 %177 to i64, !dbg !1795
  %179 = getelementptr inbounds double* %zvec.tr30, i64 %178, !dbg !1795
  %180 = bitcast double* %179 to i64*, !dbg !1795
  %181 = load i64* %180, align 8, !dbg !1795, !tbaa !565
  %182 = or i32 %172, 1, !dbg !1795
  %183 = sext i32 %182 to i64, !dbg !1795
  %184 = getelementptr inbounds double* %zvec.tr30, i64 %183, !dbg !1795
  %185 = bitcast double* %184 to i64*, !dbg !1795
  %186 = load i64* %185, align 8, !dbg !1795, !tbaa !565
  store i64 %186, i64* %180, align 8, !dbg !1795, !tbaa !565
  store i64 %181, i64* %185, align 8, !dbg !1795, !tbaa !565
  %indvars.iv.next65 = add nsw i64 %indvars.iv64, 1, !dbg !1794
  %187 = add nsw i32 %s.124, -1, !dbg !1798
  tail call void @llvm.dbg.value(metadata i32 %187, i64 0, metadata !341, metadata !512), !dbg !1777
  %188 = icmp eq i32 %187, 0, !dbg !1791
  %indvars.iv.next63 = add nsw i64 %indvars.iv62, 1, !dbg !1794
  br i1 %188, label %tailrecurse, label %160, !dbg !1794

tailrecurse:                                      ; preds = %160, %._crit_edge
  tail call void @IVZVqsortUp(i32 %109, i32* %ivec.tr29, double* %zvec.tr30) #3, !dbg !1799
  %189 = sext i32 %n.tr28 to i64, !dbg !1800
  %190 = sext i32 %148 to i64, !dbg !1801
  %.sum = sub nsw i64 %189, %190, !dbg !1801
  %191 = getelementptr inbounds i32* %ivec.tr29, i64 %.sum, !dbg !1801
  %192 = sub nsw i32 %n.tr28, %148, !dbg !1802
  %193 = shl nsw i32 %192, 1, !dbg !1803
  %194 = sext i32 %193 to i64, !dbg !1804
  %195 = getelementptr inbounds double* %zvec.tr30, i64 %194, !dbg !1804
  tail call void @llvm.dbg.value(metadata i32 %148, i64 0, metadata !330, metadata !512), !dbg !1720
  tail call void @llvm.dbg.value(metadata i32* %191, i64 0, metadata !331, metadata !512), !dbg !1721
  tail call void @llvm.dbg.value(metadata double* %195, i64 0, metadata !332, metadata !512), !dbg !1722
  %196 = icmp slt i32 %148, 11, !dbg !1723
  br i1 %196, label %tailrecurse._crit_edge, label %.lr.ph32, !dbg !1725
}
