define i32 @IV2DVsortUpAndCompress(i32 %n, i32* %ivec1, i32* %ivec2, double* %dvec) #0 {
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !57, metadata !83), !dbg !280
  tail call void @llvm.dbg.value(metadata i32* %ivec1, i64 0, metadata !58, metadata !83), !dbg !281
  tail call void @llvm.dbg.value(metadata i32* %ivec2, i64 0, metadata !59, metadata !83), !dbg !282
  tail call void @llvm.dbg.value(metadata double* %dvec, i64 0, metadata !60, metadata !83), !dbg !283
  %1 = icmp slt i32 %n, 0, !dbg !284
  %2 = icmp eq i32* %ivec1, null, !dbg !286
  %or.cond = or i1 %1, %2, !dbg !287
  %3 = icmp eq i32* %ivec2, null, !dbg !288
  %or.cond3 = or i1 %or.cond, %3, !dbg !287
  %4 = icmp eq double* %dvec, null, !dbg !289
  %or.cond5 = or i1 %or.cond3, %4, !dbg !287
  br i1 %or.cond5, label %5, label %8, !dbg !287

; <label>:5                                       ; preds = %0
  %6 = load %struct.__sFILE** @__stderrp, align 8, !dbg !290, !tbaa !92
  %7 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %6, i8* getelementptr inbounds ([105 x i8]* @.str4, i64 0, i64 0), i32 %n, i32* %ivec1, i32* %ivec2, double* %dvec, i32 %n, i32* %ivec1, i32* %ivec2, double* %dvec) #5, !dbg !292
  tail call void @exit(i32 -1) #6, !dbg !293
  unreachable, !dbg !293

; <label>:8                                       ; preds = %0
  %9 = icmp eq i32 %n, 0, !dbg !294
  br i1 %9, label %40, label %10, !dbg !296

; <label>:10                                      ; preds = %8
  tail call void @IV2DVqsortUp(i32 %n, i32* %ivec1, i32* %ivec2, double* %dvec) #5, !dbg !297
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !66, metadata !83), !dbg !298
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !61, metadata !83), !dbg !299
  %11 = load i32* %ivec1, align 4, !dbg !300, !tbaa !110
  tail call void @llvm.dbg.value(metadata i32 %11, i64 0, metadata !64, metadata !83), !dbg !301
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !63, metadata !83), !dbg !302
  %12 = icmp sgt i32 %n, 1, !dbg !303
  br i1 %12, label %.lr.ph, label %._crit_edge, !dbg !306

.lr.ph:                                           ; preds = %10
  %13 = add i32 %n, -1, !dbg !306
  br label %14, !dbg !306

; <label>:14                                      ; preds = %._crit_edge12, %.lr.ph
  %indvars.iv = phi i64 [ 1, %.lr.ph ], [ %indvars.iv.next, %._crit_edge12 ]
  %start.09 = phi i32 [ 0, %.lr.ph ], [ %start.1, %._crit_edge12 ]
  %key.08 = phi i32 [ %11, %.lr.ph ], [ %key.1, %._crit_edge12 ]
  %first.06 = phi i32 [ 0, %.lr.ph ], [ %first.1, %._crit_edge12 ]
  %15 = getelementptr inbounds i32* %ivec1, i64 %indvars.iv, !dbg !307
  %16 = load i32* %15, align 4, !dbg !307, !tbaa !110
  %17 = icmp eq i32 %key.08, %16, !dbg !310
  %.pre = trunc i64 %indvars.iv to i32, !dbg !306
  br i1 %17, label %._crit_edge12, label %18, !dbg !311

; <label>:18                                      ; preds = %14
  %19 = sub nsw i32 %.pre, %start.09, !dbg !312
  %20 = sext i32 %start.09 to i64, !dbg !314
  %21 = getelementptr inbounds i32* %ivec2, i64 %20, !dbg !314
  %22 = getelementptr inbounds double* %dvec, i64 %20, !dbg !315
  %23 = tail call i32 @IVDVsortUpAndCompress(i32 %19, i32* %21, double* %22) #7, !dbg !316
  tail call void @llvm.dbg.value(metadata i32 %23, i64 0, metadata !65, metadata !83), !dbg !317
  %24 = sext i32 %first.06 to i64, !dbg !318
  %25 = getelementptr inbounds i32* %ivec1, i64 %24, !dbg !318
  tail call void @IVfill(i32 %23, i32* %25, i32 %key.08) #5, !dbg !319
  %26 = getelementptr inbounds i32* %ivec2, i64 %24, !dbg !320
  tail call void @IVcopy(i32 %23, i32* %26, i32* %21) #5, !dbg !321
  %27 = getelementptr inbounds double* %dvec, i64 %24, !dbg !322
  tail call void @DVcopy(i32 %23, double* %27, double* %22) #5, !dbg !323
  %28 = add nsw i32 %23, %first.06, !dbg !324
  tail call void @llvm.dbg.value(metadata i32 %28, i64 0, metadata !61, metadata !83), !dbg !299
  %29 = load i32* %15, align 4, !dbg !325, !tbaa !110
  tail call void @llvm.dbg.value(metadata i32 %29, i64 0, metadata !64, metadata !83), !dbg !301
  br label %._crit_edge12, !dbg !326

._crit_edge12:                                    ; preds = %14, %18
  %first.1 = phi i32 [ %28, %18 ], [ %first.06, %14 ]
  %key.1 = phi i32 [ %29, %18 ], [ %key.08, %14 ]
  %start.1 = phi i32 [ %.pre, %18 ], [ %start.09, %14 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !306
  %exitcond = icmp eq i32 %.pre, %13, !dbg !306
  br i1 %exitcond, label %._crit_edge, label %14, !dbg !306

._crit_edge:                                      ; preds = %._crit_edge12, %10
  %start.0.lcssa = phi i32 [ 0, %10 ], [ %start.1, %._crit_edge12 ]
  %key.0.lcssa = phi i32 [ %11, %10 ], [ %key.1, %._crit_edge12 ]
  %first.0.lcssa = phi i32 [ 0, %10 ], [ %first.1, %._crit_edge12 ]
  %30 = sub nsw i32 %n, %start.0.lcssa, !dbg !327
  %31 = sext i32 %start.0.lcssa to i64, !dbg !328
  %32 = getelementptr inbounds i32* %ivec2, i64 %31, !dbg !328
  %33 = getelementptr inbounds double* %dvec, i64 %31, !dbg !329
  %34 = tail call i32 @IVDVsortUpAndCompress(i32 %30, i32* %32, double* %33) #7, !dbg !330
  tail call void @llvm.dbg.value(metadata i32 %34, i64 0, metadata !65, metadata !83), !dbg !317
  %35 = sext i32 %first.0.lcssa to i64, !dbg !331
  %36 = getelementptr inbounds i32* %ivec1, i64 %35, !dbg !331
  tail call void @IVfill(i32 %34, i32* %36, i32 %key.0.lcssa) #5, !dbg !332
  %37 = getelementptr inbounds i32* %ivec2, i64 %35, !dbg !333
  tail call void @IVcopy(i32 %34, i32* %37, i32* %32) #5, !dbg !334
  %38 = getelementptr inbounds double* %dvec, i64 %35, !dbg !335
  tail call void @DVcopy(i32 %34, double* %38, double* %33) #5, !dbg !336
  %39 = add nsw i32 %34, %first.0.lcssa, !dbg !337
  tail call void @llvm.dbg.value(metadata i32 %39, i64 0, metadata !61, metadata !83), !dbg !299
  br label %40, !dbg !338

; <label>:40                                      ; preds = %8, %._crit_edge
  %.0 = phi i32 [ %39, %._crit_edge ], [ 0, %8 ]
  ret i32 %.0, !dbg !339
}
