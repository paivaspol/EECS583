define i32 @IV2sortUpAndCompress(i32 %n, i32* %ivec1, i32* %ivec2) #0 {
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !44, metadata !83), !dbg !228
  tail call void @llvm.dbg.value(metadata i32* %ivec1, i64 0, metadata !45, metadata !83), !dbg !229
  tail call void @llvm.dbg.value(metadata i32* %ivec2, i64 0, metadata !46, metadata !83), !dbg !230
  %1 = icmp slt i32 %n, 0, !dbg !231
  %2 = icmp eq i32* %ivec1, null, !dbg !233
  %or.cond = or i1 %1, %2, !dbg !234
  %3 = icmp eq i32* %ivec2, null, !dbg !235
  %or.cond3 = or i1 %or.cond, %3, !dbg !234
  br i1 %or.cond3, label %4, label %7, !dbg !234

; <label>:4                                       ; preds = %0
  %5 = load %struct.__sFILE** @__stderrp, align 8, !dbg !236, !tbaa !92
  %6 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %5, i8* getelementptr inbounds ([89 x i8]* @.str3, i64 0, i64 0), i32 %n, i32* %ivec1, i32* %ivec2, i32 %n, i32* %ivec1, i32* %ivec2) #5, !dbg !238
  tail call void @exit(i32 -1) #6, !dbg !239
  unreachable, !dbg !239

; <label>:7                                       ; preds = %0
  %8 = icmp eq i32 %n, 0, !dbg !240
  br i1 %8, label %35, label %9, !dbg !242

; <label>:9                                       ; preds = %7
  tail call void @IV2qsortUp(i32 %n, i32* %ivec1, i32* %ivec2) #5, !dbg !243
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !52, metadata !83), !dbg !244
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !47, metadata !83), !dbg !245
  %10 = load i32* %ivec1, align 4, !dbg !246, !tbaa !110
  tail call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !50, metadata !83), !dbg !247
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !49, metadata !83), !dbg !248
  %11 = icmp sgt i32 %n, 1, !dbg !249
  br i1 %11, label %.lr.ph, label %._crit_edge, !dbg !252

.lr.ph:                                           ; preds = %9
  %12 = add i32 %n, -1, !dbg !252
  br label %13, !dbg !252

; <label>:13                                      ; preds = %._crit_edge10, %.lr.ph
  %indvars.iv = phi i64 [ 1, %.lr.ph ], [ %indvars.iv.next, %._crit_edge10 ]
  %start.07 = phi i32 [ 0, %.lr.ph ], [ %start.1, %._crit_edge10 ]
  %key.06 = phi i32 [ %10, %.lr.ph ], [ %key.1, %._crit_edge10 ]
  %first.04 = phi i32 [ 0, %.lr.ph ], [ %first.1, %._crit_edge10 ]
  %14 = getelementptr inbounds i32* %ivec1, i64 %indvars.iv, !dbg !253
  %15 = load i32* %14, align 4, !dbg !253, !tbaa !110
  %16 = icmp eq i32 %key.06, %15, !dbg !256
  %.pre = trunc i64 %indvars.iv to i32, !dbg !252
  br i1 %16, label %._crit_edge10, label %17, !dbg !257

; <label>:17                                      ; preds = %13
  %18 = sub nsw i32 %.pre, %start.07, !dbg !258
  %19 = sext i32 %start.07 to i64, !dbg !260
  %20 = getelementptr inbounds i32* %ivec2, i64 %19, !dbg !260
  %21 = tail call i32 @IVsortUpAndCompress(i32 %18, i32* %20) #7, !dbg !261
  tail call void @llvm.dbg.value(metadata i32 %21, i64 0, metadata !51, metadata !83), !dbg !262
  %22 = sext i32 %first.04 to i64, !dbg !263
  %23 = getelementptr inbounds i32* %ivec1, i64 %22, !dbg !263
  tail call void @IVfill(i32 %21, i32* %23, i32 %key.06) #5, !dbg !264
  %24 = getelementptr inbounds i32* %ivec2, i64 %22, !dbg !265
  tail call void @IVcopy(i32 %21, i32* %24, i32* %20) #5, !dbg !266
  %25 = add nsw i32 %21, %first.04, !dbg !267
  tail call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !47, metadata !83), !dbg !245
  %26 = load i32* %14, align 4, !dbg !268, !tbaa !110
  tail call void @llvm.dbg.value(metadata i32 %26, i64 0, metadata !50, metadata !83), !dbg !247
  br label %._crit_edge10, !dbg !269

._crit_edge10:                                    ; preds = %13, %17
  %first.1 = phi i32 [ %25, %17 ], [ %first.04, %13 ]
  %key.1 = phi i32 [ %26, %17 ], [ %key.06, %13 ]
  %start.1 = phi i32 [ %.pre, %17 ], [ %start.07, %13 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !252
  %exitcond = icmp eq i32 %.pre, %12, !dbg !252
  br i1 %exitcond, label %._crit_edge, label %13, !dbg !252

._crit_edge:                                      ; preds = %._crit_edge10, %9
  %start.0.lcssa = phi i32 [ 0, %9 ], [ %start.1, %._crit_edge10 ]
  %key.0.lcssa = phi i32 [ %10, %9 ], [ %key.1, %._crit_edge10 ]
  %first.0.lcssa = phi i32 [ 0, %9 ], [ %first.1, %._crit_edge10 ]
  %27 = sub nsw i32 %n, %start.0.lcssa, !dbg !270
  %28 = sext i32 %start.0.lcssa to i64, !dbg !271
  %29 = getelementptr inbounds i32* %ivec2, i64 %28, !dbg !271
  %30 = tail call i32 @IVsortUpAndCompress(i32 %27, i32* %29) #7, !dbg !272
  tail call void @llvm.dbg.value(metadata i32 %30, i64 0, metadata !51, metadata !83), !dbg !262
  %31 = sext i32 %first.0.lcssa to i64, !dbg !273
  %32 = getelementptr inbounds i32* %ivec1, i64 %31, !dbg !273
  tail call void @IVfill(i32 %30, i32* %32, i32 %key.0.lcssa) #5, !dbg !274
  %33 = getelementptr inbounds i32* %ivec2, i64 %31, !dbg !275
  tail call void @IVcopy(i32 %30, i32* %33, i32* %29) #5, !dbg !276
  %34 = add nsw i32 %30, %first.0.lcssa, !dbg !277
  tail call void @llvm.dbg.value(metadata i32 %34, i64 0, metadata !47, metadata !83), !dbg !245
  br label %35, !dbg !278

; <label>:35                                      ; preds = %7, %._crit_edge
  %.0 = phi i32 [ %34, %._crit_edge ], [ 0, %7 ]
  ret i32 %.0, !dbg !279
}
