define i32 @IV2ZVsortUpAndCompress(i32 %n, i32* %ivec1, i32* %ivec2, double* %zvec) #0 {
entry:
  %cmp = icmp slt i32 %n, 0
  %cmp1 = icmp eq i32* %ivec1, null
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp eq i32* %ivec2, null
  %or.cond116 = or i1 %or.cond, %cmp3
  %cmp5 = icmp eq double* %zvec, null
  %or.cond117 = or i1 %or.cond116, %cmp5
  br i1 %or.cond117, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([105 x i8]* @.str5, i64 0, i64 0), i32 %n, i32* %ivec1, i32* %ivec2, double* %zvec, i32 %n, i32* %ivec1, i32* %ivec2, double* %zvec) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  %cmp6 = icmp eq i32 %n, 0
  br i1 %cmp6, label %return, label %if.end8

if.end8:                                          ; preds = %if.end
  tail call void @IV2ZVqsortUp(i32 %n, i32* %ivec1, i32* %ivec2, double* %zvec) #4
  %1 = load i32* %ivec1, align 4, !tbaa !3
  %cmp9118 = icmp sgt i32 %n, 1
  br i1 %cmp9118, label %for.body, label %for.end

for.body:                                         ; preds = %if.end8, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 1, %if.end8 ]
  %start.0122 = phi i32 [ %start.1, %for.inc ], [ 0, %if.end8 ]
  %key.0121 = phi i32 [ %key.1, %for.inc ], [ %1, %if.end8 ]
  %first.0119 = phi i32 [ %first.1, %for.inc ], [ 0, %if.end8 ]
  %arrayidx10 = getelementptr inbounds i32* %ivec1, i64 %indvars.iv
  %2 = load i32* %arrayidx10, align 4, !tbaa !3
  %cmp11 = icmp eq i32 %key.0121, %2
  br i1 %cmp11, label %for.inc, label %if.then12

if.then12:                                        ; preds = %for.body
  %3 = trunc i64 %indvars.iv to i32
  %sub = sub nsw i32 %3, %start.0122
  %idx.ext = sext i32 %start.0122 to i64
  %add.ptr = getelementptr inbounds i32* %ivec2, i64 %idx.ext
  %mul = shl nsw i32 %start.0122, 1
  %idx.ext13 = sext i32 %mul to i64
  %add.ptr14 = getelementptr inbounds double* %zvec, i64 %idx.ext13
  %call15 = tail call i32 @IVZVsortUpAndCompress(i32 %sub, i32* %add.ptr, double* %add.ptr14) #6
  %idx.ext16 = sext i32 %first.0119 to i64
  %add.ptr17 = getelementptr inbounds i32* %ivec1, i64 %idx.ext16
  tail call void @IVfill(i32 %call15, i32* %add.ptr17, i32 %key.0121) #4
  %add.ptr19 = getelementptr inbounds i32* %ivec2, i64 %idx.ext16
  tail call void @IVcopy(i32 %call15, i32* %add.ptr19, i32* %add.ptr) #4
  %mul22 = shl nsw i32 %call15, 1
  %mul23 = shl nsw i32 %first.0119, 1
  %idx.ext24 = sext i32 %mul23 to i64
  %add.ptr25 = getelementptr inbounds double* %zvec, i64 %idx.ext24
  tail call void @DVcopy(i32 %mul22, double* %add.ptr25, double* %add.ptr14) #4
  %add = add nsw i32 %call15, %first.0119
  %4 = load i32* %arrayidx10, align 4, !tbaa !3
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then12
  %first.1 = phi i32 [ %add, %if.then12 ], [ %first.0119, %for.body ]
  %key.1 = phi i32 [ %4, %if.then12 ], [ %key.0121, %for.body ]
  %start.1 = phi i32 [ %3, %if.then12 ], [ %start.0122, %for.body ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %n
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.end8
  %start.0.lcssa = phi i32 [ 0, %if.end8 ], [ %start.1, %for.inc ]
  %key.0.lcssa = phi i32 [ %1, %if.end8 ], [ %key.1, %for.inc ]
  %first.0.lcssa = phi i32 [ 0, %if.end8 ], [ %first.1, %for.inc ]
  %sub32 = sub nsw i32 %n, %start.0.lcssa
  %idx.ext33 = sext i32 %start.0.lcssa to i64
  %add.ptr34 = getelementptr inbounds i32* %ivec2, i64 %idx.ext33
  %mul35 = shl nsw i32 %start.0.lcssa, 1
  %idx.ext36 = sext i32 %mul35 to i64
  %add.ptr37 = getelementptr inbounds double* %zvec, i64 %idx.ext36
  %call38 = tail call i32 @IVZVsortUpAndCompress(i32 %sub32, i32* %add.ptr34, double* %add.ptr37) #6
  %idx.ext39 = sext i32 %first.0.lcssa to i64
  %add.ptr40 = getelementptr inbounds i32* %ivec1, i64 %idx.ext39
  tail call void @IVfill(i32 %call38, i32* %add.ptr40, i32 %key.0.lcssa) #4
  %add.ptr42 = getelementptr inbounds i32* %ivec2, i64 %idx.ext39
  tail call void @IVcopy(i32 %call38, i32* %add.ptr42, i32* %add.ptr34) #4
  %mul45 = shl nsw i32 %call38, 1
  %mul46 = shl nsw i32 %first.0.lcssa, 1
  %idx.ext47 = sext i32 %mul46 to i64
  %add.ptr48 = getelementptr inbounds double* %zvec, i64 %idx.ext47
  tail call void @DVcopy(i32 %mul45, double* %add.ptr48, double* %add.ptr37) #4
  %add52 = add nsw i32 %call38, %first.0.lcssa
  br label %return

return:                                           ; preds = %if.end, %for.end
  %retval.0 = phi i32 [ %add52, %for.end ], [ 0, %if.end ]
  ret i32 %retval.0
}
