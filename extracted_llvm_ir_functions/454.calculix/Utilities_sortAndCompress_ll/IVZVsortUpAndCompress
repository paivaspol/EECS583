define i32 @IVZVsortUpAndCompress(i32 %n, i32* %ivec, double* %zvec) #0 {
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !33, metadata !83), !dbg !170
  tail call void @llvm.dbg.value(metadata i32* %ivec, i64 0, metadata !34, metadata !83), !dbg !171
  tail call void @llvm.dbg.value(metadata double* %zvec, i64 0, metadata !35, metadata !83), !dbg !172
  %1 = icmp slt i32 %n, 0, !dbg !173
  %2 = icmp eq i32* %ivec, null, !dbg !175
  %or.cond = or i1 %1, %2, !dbg !176
  %3 = icmp eq double* %zvec, null, !dbg !177
  %or.cond3 = or i1 %or.cond, %3, !dbg !176
  br i1 %or.cond3, label %4, label %7, !dbg !176

; <label>:4                                       ; preds = %0
  %5 = load %struct.__sFILE** @__stderrp, align 8, !dbg !178, !tbaa !92
  %6 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %5, i8* getelementptr inbounds ([88 x i8]* @.str2, i64 0, i64 0), i32 %n, i32* %ivec, double* %zvec, i32 %n, i32* %ivec, double* %zvec) #5, !dbg !180
  tail call void @exit(i32 -1) #6, !dbg !181
  unreachable, !dbg !181

; <label>:7                                       ; preds = %0
  %8 = icmp eq i32 %n, 0, !dbg !182
  br i1 %8, label %.loopexit, label %9, !dbg !184

; <label>:9                                       ; preds = %7
  tail call void @IVZVqsortUp(i32 %n, i32* %ivec, double* %zvec) #5, !dbg !185
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !36, metadata !83), !dbg !186
  tail call void @llvm.dbg.value(metadata i32 %11, i64 0, metadata !39, metadata !83), !dbg !187
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !38, metadata !83), !dbg !188
  %10 = icmp sgt i32 %n, 1, !dbg !189
  br i1 %10, label %.lr.ph, label %.loopexit, !dbg !192

.lr.ph:                                           ; preds = %9
  %11 = load i32* %ivec, align 4, !dbg !193, !tbaa !110
  %12 = add i32 %n, -1, !dbg !192
  br label %13, !dbg !192

; <label>:13                                      ; preds = %61, %.lr.ph
  %indvars.iv = phi i64 [ 1, %.lr.ph ], [ %indvars.iv.next, %61 ]
  %key.06 = phi i32 [ %11, %.lr.ph ], [ %key.1, %61 ]
  %first.04 = phi i32 [ 1, %.lr.ph ], [ %first.1, %61 ]
  %14 = getelementptr inbounds i32* %ivec, i64 %indvars.iv, !dbg !194
  %15 = load i32* %14, align 4, !dbg !194, !tbaa !110
  %16 = icmp eq i32 %key.06, %15, !dbg !197
  br i1 %16, label %17, label %38, !dbg !198

; <label>:17                                      ; preds = %13
  %18 = trunc i64 %indvars.iv to i32, !dbg !199
  %19 = shl nsw i32 %18, 1, !dbg !199
  %20 = sext i32 %19 to i64, !dbg !201
  %21 = getelementptr inbounds double* %zvec, i64 %20, !dbg !201
  %22 = load double* %21, align 8, !dbg !201, !tbaa !154
  %23 = shl i32 %first.04, 1, !dbg !202
  %24 = add i32 %23, -2, !dbg !202
  %25 = sext i32 %24 to i64, !dbg !203
  %26 = getelementptr inbounds double* %zvec, i64 %25, !dbg !203
  %27 = load double* %26, align 8, !dbg !204, !tbaa !154
  %28 = fadd double %22, %27, !dbg !204
  store double %28, double* %26, align 8, !dbg !204, !tbaa !154
  %29 = or i32 %19, 1, !dbg !205
  %30 = sext i32 %29 to i64, !dbg !206
  %31 = getelementptr inbounds double* %zvec, i64 %30, !dbg !206
  %32 = load double* %31, align 8, !dbg !206, !tbaa !154
  %33 = add i32 %23, -1, !dbg !207
  %34 = sext i32 %33 to i64, !dbg !208
  %35 = getelementptr inbounds double* %zvec, i64 %34, !dbg !208
  %36 = load double* %35, align 8, !dbg !209, !tbaa !154
  %37 = fadd double %32, %36, !dbg !209
  store double %37, double* %35, align 8, !dbg !209, !tbaa !154
  br label %61, !dbg !210

; <label>:38                                      ; preds = %13
  tail call void @llvm.dbg.value(metadata i32 %15, i64 0, metadata !39, metadata !83), !dbg !187
  %39 = sext i32 %first.04 to i64, !dbg !211
  %40 = getelementptr inbounds i32* %ivec, i64 %39, !dbg !211
  store i32 %15, i32* %40, align 4, !dbg !214, !tbaa !110
  %41 = trunc i64 %indvars.iv to i32, !dbg !215
  %42 = shl nsw i32 %41, 1, !dbg !215
  %43 = sext i32 %42 to i64, !dbg !216
  %44 = getelementptr inbounds double* %zvec, i64 %43, !dbg !216
  %45 = bitcast double* %44 to i64*, !dbg !216
  %46 = load i64* %45, align 8, !dbg !216, !tbaa !154
  %47 = shl nsw i32 %first.04, 1, !dbg !217
  %48 = sext i32 %47 to i64, !dbg !218
  %49 = getelementptr inbounds double* %zvec, i64 %48, !dbg !218
  %50 = bitcast double* %49 to i64*, !dbg !219
  store i64 %46, i64* %50, align 8, !dbg !219, !tbaa !154
  %51 = or i32 %42, 1, !dbg !220
  %52 = sext i32 %51 to i64, !dbg !221
  %53 = getelementptr inbounds double* %zvec, i64 %52, !dbg !221
  %54 = bitcast double* %53 to i64*, !dbg !221
  %55 = load i64* %54, align 8, !dbg !221, !tbaa !154
  %56 = or i32 %47, 1, !dbg !222
  %57 = sext i32 %56 to i64, !dbg !223
  %58 = getelementptr inbounds double* %zvec, i64 %57, !dbg !223
  %59 = bitcast double* %58 to i64*, !dbg !224
  store i64 %55, i64* %59, align 8, !dbg !224, !tbaa !154
  %60 = add nsw i32 %first.04, 1, !dbg !225
  tail call void @llvm.dbg.value(metadata i32 %60, i64 0, metadata !36, metadata !83), !dbg !186
  br label %61, !dbg !226

; <label>:61                                      ; preds = %17, %38
  %lftr.wideiv.pre-phi = phi i32 [ %18, %17 ], [ %41, %38 ], !dbg !192
  %first.1 = phi i32 [ %first.04, %17 ], [ %60, %38 ]
  %key.1 = phi i32 [ %key.06, %17 ], [ %15, %38 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !192
  %exitcond = icmp eq i32 %lftr.wideiv.pre-phi, %12, !dbg !192
  br i1 %exitcond, label %.loopexit, label %13, !dbg !192

.loopexit:                                        ; preds = %61, %9, %7
  %.0 = phi i32 [ 0, %7 ], [ 1, %9 ], [ %first.1, %61 ]
  ret i32 %.0, !dbg !227
}
