define double* @Chv_diagLocation(%struct._Chv* %chv, i32 %ichv) #0 {
entry:
  %cmp = icmp eq %struct._Chv* %chv, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([50 x i8]* @.str10, i64 0, i64 0), %struct._Chv* null) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  %cmp1 = icmp slt i32 %ichv, 0
  %nD4.phi.trans.insert = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 1
  %.pre = load i32* %nD4.phi.trans.insert, align 4, !tbaa !3
  %cmp2 = icmp slt i32 %.pre, %ichv
  %or.cond = or i1 %cmp1, %cmp2
  br i1 %or.cond, label %if.then3, label %if.end6

if.then3:                                         ; preds = %if.end
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([59 x i8]* @.str11, i64 0, i64 0), %struct._Chv* %chv, i32 %ichv, i32 %.pre) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end6:                                          ; preds = %if.end
  %entries = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 8
  %2 = load double** %entries, align 8, !tbaa !0
  %cmp7 = icmp eq double* %2, null
  br i1 %cmp7, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.end6
  %3 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([61 x i8]* @.str12, i64 0, i64 0), %struct._Chv* %chv) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end10:                                         ; preds = %if.end6
  %type = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 4
  %4 = load i32* %type, align 4, !tbaa !3
  switch i32 %4, label %if.else101 [
    i32 1, label %if.then12
    i32 2, label %if.then54
  ]

if.then12:                                        ; preds = %if.end10
  %symflag = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 5
  %5 = load i32* %symflag, align 4, !tbaa !3
  switch i32 %5, label %if.else46 [
    i32 0, label %if.then14
    i32 2, label %if.then22
  ]

if.then14:                                        ; preds = %if.then12
  %nU = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 3
  %6 = load i32* %nU, align 4, !tbaa !3
  %add = add nsw i32 %6, %.pre
  %mul = mul nsw i32 %add, %ichv
  %idx.ext = sext i32 %mul to i64
  %sub = add nsw i32 %ichv, -1
  %mul17 = mul nsw i32 %sub, %ichv
  %div = sdiv i32 %mul17, 2
  %idx.ext18 = sext i32 %div to i64
  %add.ptr.sum = sub i64 %idx.ext, %idx.ext18
  %add.ptr19 = getelementptr inbounds double* %2, i64 %add.ptr.sum
  br label %if.end105

if.then22:                                        ; preds = %if.then12
  %mul24 = shl nsw i32 %ichv, 1
  %add25158 = or i32 %mul24, 1
  %mul27 = mul nsw i32 %.pre, %add25158
  %idx.ext28 = sext i32 %mul27 to i64
  %add30 = add nsw i32 %ichv, 1
  %nL = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 2
  %7 = load i32* %nL, align 4, !tbaa !3
  %mul31 = mul nsw i32 %7, %add30
  %idx.ext32 = sext i32 %mul31 to i64
  %nU34 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 3
  %8 = load i32* %nU34, align 4, !tbaa !3
  %mul35 = mul nsw i32 %8, %ichv
  %idx.ext36 = sext i32 %mul35 to i64
  %mul38 = mul nsw i32 %ichv, %ichv
  %idx.ext39159 = zext i32 %mul38 to i64
  %idx.ext42 = sext i32 %ichv to i64
  %add.ptr29.sum = xor i64 %idx.ext42, -1
  %add.ptr33.sum = sub i64 %add.ptr29.sum, %idx.ext39159
  %add.ptr37.sum = add i64 %add.ptr33.sum, %idx.ext28
  %add.ptr41.sum = add i64 %add.ptr37.sum, %idx.ext32
  %add.ptr44.sum = add i64 %add.ptr41.sum, %idx.ext36
  %add.ptr45 = getelementptr inbounds double* %2, i64 %add.ptr44.sum
  br label %if.end105

if.else46:                                        ; preds = %if.then12
  %9 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call48 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([122 x i8]* @.str13, i64 0, i64 0), %struct._Chv* %chv, i32 %5) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.then54:                                        ; preds = %if.end10
  %symflag55 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 5
  %10 = load i32* %symflag55, align 4, !tbaa !3
  switch i32 %10, label %if.else96 [
    i32 0, label %if.then60
    i32 1, label %if.then60
    i32 2, label %if.then76
  ]

if.then60:                                        ; preds = %if.then54, %if.then54
  %nU63 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 3
  %11 = load i32* %nU63, align 4, !tbaa !3
  %add64 = add nsw i32 %11, %.pre
  %mul65 = mul nsw i32 %add64, %ichv
  %sub66 = add nsw i32 %ichv, -1
  %mul67 = mul nsw i32 %sub66, %ichv
  %div68 = sdiv i32 %mul67, 2
  %sub69 = sub nsw i32 %mul65, %div68
  %mul70 = shl nsw i32 %sub69, 1
  %idx.ext71 = sext i32 %mul70 to i64
  %add.ptr72 = getelementptr inbounds double* %2, i64 %idx.ext71
  br label %if.end105

if.then76:                                        ; preds = %if.then54
  %mul78 = shl nsw i32 %ichv, 1
  %add79157 = or i32 %mul78, 1
  %mul81 = mul nsw i32 %.pre, %add79157
  %add82 = add nsw i32 %ichv, 1
  %nL83 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 2
  %12 = load i32* %nL83, align 4, !tbaa !3
  %mul84 = mul nsw i32 %12, %add82
  %nU86 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 3
  %13 = load i32* %nU86, align 4, !tbaa !3
  %mul87 = mul nsw i32 %13, %ichv
  %mul89 = mul nsw i32 %ichv, %ichv
  %sum = add i32 %mul89, %ichv
  %add88 = sub i32 %mul81, %sum
  %sub90 = add i32 %add88, %mul84
  %sub91 = add i32 %sub90, %mul87
  %sub92 = shl i32 %sub91, 1
  %mul93 = add i32 %sub92, -2
  %idx.ext94 = sext i32 %mul93 to i64
  %add.ptr95 = getelementptr inbounds double* %2, i64 %idx.ext94
  br label %if.end105

if.else96:                                        ; preds = %if.then54
  %14 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call98 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([154 x i8]* @.str14, i64 0, i64 0), %struct._Chv* %chv, i32 %10) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.else101:                                       ; preds = %if.end10
  %15 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %symflag102 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 5
  %16 = load i32* %symflag102, align 4, !tbaa !3
  %call103 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([91 x i8]* @.str15, i64 0, i64 0), %struct._Chv* %chv, i32 %16) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end105:                                        ; preds = %if.then76, %if.then60, %if.then14, %if.then22
  %diag.0 = phi double* [ %add.ptr19, %if.then14 ], [ %add.ptr45, %if.then22 ], [ %add.ptr72, %if.then60 ], [ %add.ptr95, %if.then76 ]
  ret double* %diag.0
}
