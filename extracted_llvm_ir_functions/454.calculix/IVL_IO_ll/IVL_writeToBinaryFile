define i32 @IVL_writeToBinaryFile(%struct._IVL* %ivl, %struct._IO_FILE* %fp) #0 {
entry:
  %jsize = alloca i32, align 4
  %jind = alloca i32*, align 8
  %itemp = alloca [3 x i32], align 4
  %cmp = icmp eq %struct._IVL* %ivl, null
  %cmp1 = icmp eq %struct._IO_FILE* %fp, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %entry
  %nlist3 = getelementptr inbounds %struct._IVL* %ivl, i64 0, i32 2
  %0 = load i32* %nlist3, align 4, !tbaa !3
  %cmp4 = icmp slt i32 %0, 1
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false2, %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([58 x i8]* @.str28, i64 0, i64 0), %struct._IVL* %ivl, %struct._IO_FILE* %fp) #5
  call void @exit(i32 -1) #8
  unreachable

if.end:                                           ; preds = %lor.lhs.false2
  %type = getelementptr inbounds %struct._IVL* %ivl, i64 0, i32 0
  %2 = load i32* %type, align 4, !tbaa !3
  %arrayidx = getelementptr inbounds [3 x i32]* %itemp, i64 0, i64 0
  store i32 %2, i32* %arrayidx, align 4, !tbaa !3
  %arrayidx6 = getelementptr inbounds [3 x i32]* %itemp, i64 0, i64 1
  store i32 %0, i32* %arrayidx6, align 4, !tbaa !3
  %tsize = getelementptr inbounds %struct._IVL* %ivl, i64 0, i32 3
  %3 = load i32* %tsize, align 4, !tbaa !3
  %arrayidx7 = getelementptr inbounds [3 x i32]* %itemp, i64 0, i64 2
  store i32 %3, i32* %arrayidx7, align 4, !tbaa !3
  %4 = bitcast [3 x i32]* %itemp to i8*
  %call8 = call i64 @fwrite(i8* %4, i64 4, i64 3, %struct._IO_FILE* %fp) #5
  %conv = trunc i64 %call8 to i32
  %cmp9 = icmp eq i32 %conv, 3
  br i1 %cmp9, label %if.end13, label %if.then11

if.then11:                                        ; preds = %if.end
  %5 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([72 x i8]* @.str29, i64 0, i64 0), %struct._IVL* %ivl, %struct._IO_FILE* %fp, i32 %conv, i32 3) #5
  br label %return

if.end13:                                         ; preds = %if.end
  %sizes = getelementptr inbounds %struct._IVL* %ivl, i64 0, i32 4
  %6 = load i32** %sizes, align 8, !tbaa !0
  %7 = bitcast i32* %6 to i8*
  %8 = load i32* %nlist3, align 4, !tbaa !3
  %conv15 = sext i32 %8 to i64
  %call16 = call i64 @fwrite(i8* %7, i64 4, i64 %conv15, %struct._IO_FILE* %fp) #5
  %conv17 = trunc i64 %call16 to i32
  %9 = load i32* %nlist3, align 4, !tbaa !3
  %cmp19 = icmp eq i32 %conv17, %9
  br i1 %cmp19, label %if.end24, label %if.then21

if.then21:                                        ; preds = %if.end13
  %10 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([77 x i8]* @.str30, i64 0, i64 0), %struct._IVL* %ivl, %struct._IO_FILE* %fp, i32 %conv17, i32 %9) #5
  br label %return

if.end24:                                         ; preds = %if.end13
  %11 = load i32* %type, align 4, !tbaa !3
  %.off = add i32 %11, -1
  %switch = icmp ult i32 %.off, 3
  %cmp2772 = icmp sgt i32 %conv17, 0
  %or.cond75 = and i1 %switch, %cmp2772
  br i1 %or.cond75, label %for.body, label %return

for.body:                                         ; preds = %if.end24, %for.inc
  %j.073 = phi i32 [ %inc, %for.inc ], [ 0, %if.end24 ]
  call void @IVL_listAndSize(%struct._IVL* %ivl, i32 %j.073, i32* %jsize, i32** %jind) #5
  %12 = load i32* %jsize, align 4, !tbaa !3
  %cmp29 = icmp sgt i32 %12, 0
  br i1 %cmp29, label %if.then31, label %for.inc

if.then31:                                        ; preds = %for.body
  %13 = load i32** %jind, align 8, !tbaa !0
  %14 = bitcast i32* %13 to i8*
  %conv32 = sext i32 %12 to i64
  %call33 = call i64 @fwrite(i8* %14, i64 4, i64 %conv32, %struct._IO_FILE* %fp) #5
  %conv34 = trunc i64 %call33 to i32
  %15 = load i32* %jsize, align 4, !tbaa !3
  %cmp35 = icmp eq i32 %conv34, %15
  br i1 %cmp35, label %for.inc, label %if.then37

if.then37:                                        ; preds = %if.then31
  %16 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call38 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([74 x i8]* @.str31, i64 0, i64 0), %struct._IVL* %ivl, %struct._IO_FILE* %fp, i32 %j.073, i32 %conv34, i32 %15) #5
  br label %return

for.inc:                                          ; preds = %if.then31, %for.body
  %inc = add nsw i32 %j.073, 1
  %17 = load i32* %nlist3, align 4, !tbaa !3
  %cmp27 = icmp slt i32 %inc, %17
  br i1 %cmp27, label %for.body, label %return

return:                                           ; preds = %for.inc, %if.end24, %if.then37, %if.then21, %if.then11
  %retval.0 = phi i32 [ 0, %if.then11 ], [ 0, %if.then21 ], [ 0, %if.then37 ], [ 1, %if.end24 ], [ 1, %for.inc ]
  ret i32 %retval.0
}
