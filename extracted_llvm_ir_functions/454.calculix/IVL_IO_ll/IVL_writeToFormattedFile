define i32 @IVL_writeToFormattedFile(%struct._IVL* %ivl, %struct._IO_FILE* %fp) #0 {
entry:
  %ierr = alloca i32, align 4
  %jsize = alloca i32, align 4
  %jind = alloca i32*, align 8
  %cmp = icmp eq %struct._IVL* %ivl, null
  %cmp1 = icmp eq %struct._IO_FILE* %fp, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %entry
  %nlist3 = getelementptr inbounds %struct._IVL* %ivl, i64 0, i32 2
  %0 = load i32* %nlist3, align 4, !tbaa !3
  %cmp4 = icmp slt i32 %0, 1
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false2, %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([61 x i8]* @.str23, i64 0, i64 0), %struct._IVL* %ivl, %struct._IO_FILE* %fp) #5
  call void @exit(i32 -1) #8
  unreachable

if.end:                                           ; preds = %lor.lhs.false2
  %type = getelementptr inbounds %struct._IVL* %ivl, i64 0, i32 0
  %2 = load i32* %type, align 4, !tbaa !3
  %tsize = getelementptr inbounds %struct._IVL* %ivl, i64 0, i32 3
  %3 = load i32* %tsize, align 4, !tbaa !3
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([11 x i8]* @.str24, i64 0, i64 0), i32 %2, i32 %0, i32 %3) #5
  %cmp7 = icmp slt i32 %call6, 0
  br i1 %cmp7, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.end
  %4 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([86 x i8]* @.str25, i64 0, i64 0), %struct._IVL* %ivl, %struct._IO_FILE* %fp, i32 %call6) #5
  br label %return

if.end10:                                         ; preds = %if.end
  %5 = load i32* %nlist3, align 4, !tbaa !3
  %cmp12 = icmp sgt i32 %5, 0
  br i1 %cmp12, label %if.then13, label %if.end20

if.then13:                                        ; preds = %if.end10
  %sizes = getelementptr inbounds %struct._IVL* %ivl, i64 0, i32 4
  %6 = load i32** %sizes, align 8, !tbaa !0
  %call15 = call i32 @IVfp80(%struct._IO_FILE* %fp, i32 %5, i32* %6, i32 80, i32* %ierr) #5
  %7 = load i32* %ierr, align 4, !tbaa !3
  %cmp16 = icmp slt i32 %7, 0
  br i1 %cmp16, label %if.then17, label %if.end20

if.then17:                                        ; preds = %if.then13
  %8 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([89 x i8]* @.str26, i64 0, i64 0), %struct._IVL* %ivl, %struct._IO_FILE* %fp, i32 %7) #5
  br label %return

if.end20:                                         ; preds = %if.then13, %if.end10
  %9 = load i32* %type, align 4, !tbaa !3
  %.off = add i32 %9, -1
  %switch = icmp ult i32 %.off, 3
  br i1 %switch, label %for.cond.preheader, label %return

for.cond.preheader:                               ; preds = %if.end20
  %10 = load i32* %nlist3, align 4, !tbaa !3
  %cmp2358 = icmp sgt i32 %10, 0
  br i1 %cmp2358, label %for.body, label %return

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %count.060 = phi i32 [ %count.1, %for.inc ], [ 80, %for.cond.preheader ]
  %j.059 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ]
  call void @IVL_listAndSize(%struct._IVL* %ivl, i32 %j.059, i32* %jsize, i32** %jind) #5
  %11 = load i32* %jsize, align 4, !tbaa !3
  %cmp24 = icmp sgt i32 %11, 0
  br i1 %cmp24, label %if.then25, label %for.inc

if.then25:                                        ; preds = %for.body
  %12 = load i32** %jind, align 8, !tbaa !0
  %call26 = call i32 @IVfp80(%struct._IO_FILE* %fp, i32 %11, i32* %12, i32 %count.060, i32* %ierr) #5
  %13 = load i32* %ierr, align 4, !tbaa !3
  %cmp27 = icmp slt i32 %13, 0
  br i1 %cmp27, label %if.then28, label %for.inc

if.then28:                                        ; preds = %if.then25
  %14 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([90 x i8]* @.str27, i64 0, i64 0), %struct._IVL* %ivl, %struct._IO_FILE* %fp, i32 %13, i32 %j.059) #5
  br label %return

for.inc:                                          ; preds = %for.body, %if.then25
  %count.1 = phi i32 [ %call26, %if.then25 ], [ %count.060, %for.body ]
  %inc = add nsw i32 %j.059, 1
  %15 = load i32* %nlist3, align 4, !tbaa !3
  %cmp23 = icmp slt i32 %inc, %15
  br i1 %cmp23, label %for.body, label %return

return:                                           ; preds = %for.cond.preheader, %for.inc, %if.end20, %if.then28, %if.then17, %if.then8
  %retval.0 = phi i32 [ 0, %if.then8 ], [ 0, %if.then17 ], [ 0, %if.then28 ], [ 1, %if.end20 ], [ 1, %for.inc ], [ 1, %for.cond.preheader ]
  ret i32 %retval.0
}
