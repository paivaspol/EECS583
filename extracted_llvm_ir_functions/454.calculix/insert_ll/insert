define void @insert(i32* nocapture %ipointer, i32** nocapture %mast1p, i32** nocapture %mast2p, i32* nocapture readonly %i1, i32* nocapture readonly %i2, i32* nocapture %ifree, i32* nocapture %nzs_) #0 {
  tail call void @llvm.dbg.value(metadata i32* %ipointer, i64 0, metadata !12, metadata !28), !dbg !29
  tail call void @llvm.dbg.value(metadata i32** %mast1p, i64 0, metadata !13, metadata !28), !dbg !30
  tail call void @llvm.dbg.value(metadata i32** %mast2p, i64 0, metadata !14, metadata !28), !dbg !31
  tail call void @llvm.dbg.value(metadata i32* %i1, i64 0, metadata !15, metadata !28), !dbg !32
  tail call void @llvm.dbg.value(metadata i32* %i2, i64 0, metadata !16, metadata !28), !dbg !33
  tail call void @llvm.dbg.value(metadata i32* %ifree, i64 0, metadata !17, metadata !28), !dbg !34
  tail call void @llvm.dbg.value(metadata i32* %nzs_, i64 0, metadata !18, metadata !28), !dbg !35
  tail call void @llvm.dbg.value(metadata i32* null, i64 0, metadata !22, metadata !28), !dbg !36
  tail call void @llvm.dbg.value(metadata i32* null, i64 0, metadata !23, metadata !28), !dbg !37
  %1 = load i32** %mast1p, align 8, !dbg !38, !tbaa !39
  tail call void @llvm.dbg.value(metadata i32* %1, i64 0, metadata !22, metadata !28), !dbg !36
  %2 = load i32** %mast2p, align 8, !dbg !43, !tbaa !39
  tail call void @llvm.dbg.value(metadata i32* %2, i64 0, metadata !23, metadata !28), !dbg !37
  %3 = load i32* %i1, align 4, !dbg !44, !tbaa !46
  %4 = load i32* %i2, align 4, !dbg !48, !tbaa !46
  %5 = icmp slt i32 %3, %4, !dbg !49
  %. = select i1 %5, i32 %3, i32 %4, !dbg !50
  %.1 = select i1 %5, i32 %4, i32 %3, !dbg !50
  %6 = add nsw i32 %.1, -1, !dbg !52
  %7 = sext i32 %6 to i64, !dbg !54
  %8 = getelementptr inbounds i32* %ipointer, i64 %7, !dbg !54
  %9 = load i32* %8, align 4, !dbg !54, !tbaa !46
  %10 = icmp eq i32 %9, 0, !dbg !55
  br i1 %10, label %11, label %.preheader, !dbg !56

; <label>:11                                      ; preds = %0
  %12 = load i32* %ifree, align 4, !dbg !57, !tbaa !46
  %13 = add nsw i32 %12, 1, !dbg !57
  store i32 %13, i32* %ifree, align 4, !dbg !57, !tbaa !46
  %14 = load i32* %nzs_, align 4, !dbg !59, !tbaa !46
  %15 = icmp slt i32 %12, %14, !dbg !61
  br i1 %15, label %33, label %16, !dbg !62

; <label>:16                                      ; preds = %11
  %17 = sitofp i32 %14 to double, !dbg !63
  %18 = fmul double %17, 1.100000e+00, !dbg !65
  %19 = fptosi double %18 to i32, !dbg !66
  store i32 %19, i32* %nzs_, align 4, !dbg !67, !tbaa !46
  %20 = bitcast i32* %1 to i8*, !dbg !68
  %21 = sext i32 %19 to i64, !dbg !68
  %22 = shl nsw i64 %21, 2, !dbg !68
  %23 = tail call i8* @realloc(i8* %20, i64 %22) #3, !dbg !68
  %24 = bitcast i8* %23 to i32*, !dbg !68
  tail call void @llvm.dbg.value(metadata i32* %24, i64 0, metadata !22, metadata !28), !dbg !36
  %25 = bitcast i32* %2 to i8*, !dbg !69
  %26 = load i32* %nzs_, align 4, !dbg !69, !tbaa !46
  %27 = sext i32 %26 to i64, !dbg !69
  %28 = shl nsw i64 %27, 2, !dbg !69
  %29 = tail call i8* @realloc(i8* %25, i64 %28) #3, !dbg !69
  %30 = bitcast i8* %29 to i32*, !dbg !69
  tail call void @llvm.dbg.value(metadata i32* %30, i64 0, metadata !23, metadata !28), !dbg !37
  %31 = load i32* %nzs_, align 4, !dbg !70, !tbaa !46
  %32 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str, i64 0, i64 0), i32 %31) #3, !dbg !71
  %.pre4 = load i32* %ifree, align 4, !dbg !72, !tbaa !46
  br label %33, !dbg !73

; <label>:33                                      ; preds = %11, %16
  %34 = phi i32 [ %.pre4, %16 ], [ %13, %11 ]
  %mast1.0 = phi i32* [ %24, %16 ], [ %1, %11 ]
  %mast2.0 = phi i32* [ %30, %16 ], [ %2, %11 ]
  store i32 %34, i32* %8, align 4, !dbg !74, !tbaa !46
  %35 = load i32* %ifree, align 4, !dbg !75, !tbaa !46
  %36 = add nsw i32 %35, -1, !dbg !76
  %37 = sext i32 %36 to i64, !dbg !77
  %38 = getelementptr inbounds i32* %mast1.0, i64 %37, !dbg !77
  store i32 %., i32* %38, align 4, !dbg !78, !tbaa !46
  %39 = load i32* %ifree, align 4, !dbg !79, !tbaa !46
  %40 = add nsw i32 %39, -1, !dbg !80
  %41 = sext i32 %40 to i64, !dbg !81
  %42 = getelementptr inbounds i32* %mast2.0, i64 %41, !dbg !81
  store i32 0, i32* %42, align 4, !dbg !82, !tbaa !46
  br label %.loopexit, !dbg !83

.preheader:                                       ; preds = %0, %48
  %istart.0 = phi i32 [ %50, %48 ], [ %9, %0 ]
  %43 = add nsw i32 %istart.0, -1, !dbg !84
  %44 = sext i32 %43 to i64, !dbg !88
  %45 = getelementptr inbounds i32* %1, i64 %44, !dbg !88
  %46 = load i32* %45, align 4, !dbg !88, !tbaa !46
  %47 = icmp eq i32 %46, %., !dbg !89
  br i1 %47, label %.loopexit, label %48, !dbg !90

; <label>:48                                      ; preds = %.preheader
  %49 = getelementptr inbounds i32* %2, i64 %44, !dbg !91
  %50 = load i32* %49, align 4, !dbg !91, !tbaa !46
  %51 = icmp eq i32 %50, 0, !dbg !93
  br i1 %51, label %52, label %.preheader, !dbg !94

; <label>:52                                      ; preds = %48
  %53 = load i32* %ifree, align 4, !dbg !95, !tbaa !46
  %54 = add nsw i32 %53, 1, !dbg !95
  store i32 %54, i32* %ifree, align 4, !dbg !95, !tbaa !46
  %55 = load i32* %nzs_, align 4, !dbg !97, !tbaa !46
  %56 = icmp slt i32 %53, %55, !dbg !99
  br i1 %56, label %74, label %57, !dbg !100

; <label>:57                                      ; preds = %52
  %58 = sitofp i32 %55 to double, !dbg !101
  %59 = fmul double %58, 1.100000e+00, !dbg !103
  %60 = fptosi double %59 to i32, !dbg !104
  store i32 %60, i32* %nzs_, align 4, !dbg !105, !tbaa !46
  %61 = bitcast i32* %1 to i8*, !dbg !106
  %62 = sext i32 %60 to i64, !dbg !106
  %63 = shl nsw i64 %62, 2, !dbg !106
  %64 = tail call i8* @realloc(i8* %61, i64 %63) #3, !dbg !106
  %65 = bitcast i8* %64 to i32*, !dbg !106
  tail call void @llvm.dbg.value(metadata i32* %65, i64 0, metadata !22, metadata !28), !dbg !36
  %66 = bitcast i32* %2 to i8*, !dbg !107
  %67 = load i32* %nzs_, align 4, !dbg !107, !tbaa !46
  %68 = sext i32 %67 to i64, !dbg !107
  %69 = shl nsw i64 %68, 2, !dbg !107
  %70 = tail call i8* @realloc(i8* %66, i64 %69) #3, !dbg !107
  %71 = bitcast i8* %70 to i32*, !dbg !107
  tail call void @llvm.dbg.value(metadata i32* %71, i64 0, metadata !23, metadata !28), !dbg !37
  %72 = load i32* %nzs_, align 4, !dbg !108, !tbaa !46
  %73 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str, i64 0, i64 0), i32 %72) #3, !dbg !109
  %.pre = load i32* %ifree, align 4, !dbg !110, !tbaa !46
  br label %74, !dbg !111

; <label>:74                                      ; preds = %52, %57
  %75 = phi i32 [ %.pre, %57 ], [ %54, %52 ]
  %mast1.1 = phi i32* [ %65, %57 ], [ %1, %52 ]
  %mast2.1 = phi i32* [ %71, %57 ], [ %2, %52 ]
  %76 = getelementptr inbounds i32* %mast2.1, i64 %44, !dbg !112
  store i32 %75, i32* %76, align 4, !dbg !113, !tbaa !46
  %77 = load i32* %ifree, align 4, !dbg !114, !tbaa !46
  %78 = add nsw i32 %77, -1, !dbg !115
  %79 = sext i32 %78 to i64, !dbg !116
  %80 = getelementptr inbounds i32* %mast1.1, i64 %79, !dbg !116
  store i32 %., i32* %80, align 4, !dbg !117, !tbaa !46
  %81 = load i32* %ifree, align 4, !dbg !118, !tbaa !46
  %82 = add nsw i32 %81, -1, !dbg !119
  %83 = sext i32 %82 to i64, !dbg !120
  %84 = getelementptr inbounds i32* %mast2.1, i64 %83, !dbg !120
  store i32 0, i32* %84, align 4, !dbg !121, !tbaa !46
  br label %.loopexit, !dbg !122

.loopexit:                                        ; preds = %.preheader, %74, %33
  %mast1.2 = phi i32* [ %mast1.0, %33 ], [ %mast1.1, %74 ], [ %1, %.preheader ]
  %mast2.2 = phi i32* [ %mast2.0, %33 ], [ %mast2.1, %74 ], [ %2, %.preheader ]
  store i32* %mast1.2, i32** %mast1p, align 8, !dbg !123, !tbaa !39
  store i32* %mast2.2, i32** %mast2p, align 8, !dbg !124, !tbaa !39
  ret void, !dbg !125
}
