define void @insert(i32* nocapture %ipointer, i32** nocapture %mast1p, i32** nocapture %mast2p, i32* nocapture %i1, i32* nocapture %i2, i32* nocapture %ifree, i32* nocapture %nzs_) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32* %ipointer}, i64 0, metadata !12), !dbg !24
  tail call void @llvm.dbg.value(metadata !{i32** %mast1p}, i64 0, metadata !13), !dbg !24
  tail call void @llvm.dbg.value(metadata !{i32** %mast2p}, i64 0, metadata !14), !dbg !24
  tail call void @llvm.dbg.value(metadata !{i32* %i1}, i64 0, metadata !15), !dbg !24
  tail call void @llvm.dbg.value(metadata !{i32* %i2}, i64 0, metadata !16), !dbg !25
  tail call void @llvm.dbg.value(metadata !{i32* %ifree}, i64 0, metadata !17), !dbg !25
  tail call void @llvm.dbg.value(metadata !{i32* %nzs_}, i64 0, metadata !18), !dbg !25
  tail call void @llvm.dbg.value(metadata !26, i64 0, metadata !22), !dbg !27
  tail call void @llvm.dbg.value(metadata !26, i64 0, metadata !23), !dbg !27
  %0 = load i32** %mast1p, align 8, !dbg !28, !tbaa !29
  tail call void @llvm.dbg.value(metadata !{i32* %0}, i64 0, metadata !22), !dbg !28
  %1 = load i32** %mast2p, align 8, !dbg !32, !tbaa !29
  tail call void @llvm.dbg.value(metadata !{i32* %1}, i64 0, metadata !23), !dbg !32
  %2 = load i32* %i1, align 4, !dbg !33, !tbaa !34
  %3 = load i32* %i2, align 4, !dbg !33, !tbaa !34
  %cmp = icmp slt i32 %2, %3, !dbg !33
  %. = select i1 %cmp, i32 %2, i32 %3, !dbg !35
  %.116 = select i1 %cmp, i32 %3, i32 %2, !dbg !35
  %sub = add nsw i32 %.116, -1, !dbg !37
  %idxprom = sext i32 %sub to i64, !dbg !37
  %arrayidx = getelementptr inbounds i32* %ipointer, i64 %idxprom, !dbg !37
  %4 = load i32* %arrayidx, align 4, !dbg !37, !tbaa !34
  %cmp1 = icmp eq i32 %4, 0, !dbg !37
  br i1 %cmp1, label %if.then2, label %while.body, !dbg !37

if.then2:                                         ; preds = %entry
  %5 = load i32* %ifree, align 4, !dbg !38, !tbaa !34
  %inc = add nsw i32 %5, 1, !dbg !38
  store i32 %inc, i32* %ifree, align 4, !dbg !38, !tbaa !34
  %6 = load i32* %nzs_, align 4, !dbg !40, !tbaa !34
  %cmp3 = icmp slt i32 %5, %6, !dbg !40
  br i1 %cmp3, label %if.end12, label %if.then4, !dbg !40

if.then4:                                         ; preds = %if.then2
  %conv = sitofp i32 %6 to double, !dbg !41
  %mul = fmul double %conv, 1.100000e+00, !dbg !41
  %conv5 = fptosi double %mul to i32, !dbg !41
  store i32 %conv5, i32* %nzs_, align 4, !dbg !41, !tbaa !34
  %7 = bitcast i32* %0 to i8*, !dbg !43
  %conv6 = sext i32 %conv5 to i64, !dbg !43
  %mul7 = shl nsw i64 %conv6, 2, !dbg !43
  %call = tail call i8* @realloc(i8* %7, i64 %mul7) #3, !dbg !43
  %8 = bitcast i8* %call to i32*, !dbg !43
  tail call void @llvm.dbg.value(metadata !{i32* %8}, i64 0, metadata !22), !dbg !43
  %9 = bitcast i32* %1 to i8*, !dbg !44
  %10 = load i32* %nzs_, align 4, !dbg !44, !tbaa !34
  %conv8 = sext i32 %10 to i64, !dbg !44
  %mul9 = shl nsw i64 %conv8, 2, !dbg !44
  %call10 = tail call i8* @realloc(i8* %9, i64 %mul9) #3, !dbg !44
  %11 = bitcast i8* %call10 to i32*, !dbg !44
  tail call void @llvm.dbg.value(metadata !{i32* %11}, i64 0, metadata !23), !dbg !44
  %12 = load i32* %nzs_, align 4, !dbg !45, !tbaa !34
  %call11 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str, i64 0, i64 0), i32 %12) #3, !dbg !45
  %.pre = load i32* %ifree, align 4, !dbg !46, !tbaa !34
  br label %if.end12, !dbg !47

if.end12:                                         ; preds = %if.then2, %if.then4
  %13 = phi i32 [ %.pre, %if.then4 ], [ %inc, %if.then2 ]
  %mast1.0 = phi i32* [ %8, %if.then4 ], [ %0, %if.then2 ]
  %mast2.0 = phi i32* [ %11, %if.then4 ], [ %1, %if.then2 ]
  store i32 %13, i32* %arrayidx, align 4, !dbg !46, !tbaa !34
  %14 = load i32* %ifree, align 4, !dbg !48, !tbaa !34
  %sub16 = add nsw i32 %14, -1, !dbg !48
  %idxprom17 = sext i32 %sub16 to i64, !dbg !48
  %arrayidx18 = getelementptr inbounds i32* %mast1.0, i64 %idxprom17, !dbg !48
  store i32 %., i32* %arrayidx18, align 4, !dbg !48, !tbaa !34
  %15 = load i32* %ifree, align 4, !dbg !49, !tbaa !34
  %sub19 = add nsw i32 %15, -1, !dbg !49
  %idxprom20 = sext i32 %sub19 to i64, !dbg !49
  %arrayidx21 = getelementptr inbounds i32* %mast2.0, i64 %idxprom20, !dbg !49
  store i32 0, i32* %arrayidx21, align 4, !dbg !49, !tbaa !34
  br label %if.end68, !dbg !50

while.body:                                       ; preds = %entry, %if.end32
  %istart.0 = phi i32 [ %17, %if.end32 ], [ %4, %entry ]
  %sub26 = add nsw i32 %istart.0, -1, !dbg !51
  %idxprom27 = sext i32 %sub26 to i64, !dbg !51
  %arrayidx28 = getelementptr inbounds i32* %0, i64 %idxprom27, !dbg !51
  %16 = load i32* %arrayidx28, align 4, !dbg !51, !tbaa !34
  %cmp29 = icmp eq i32 %16, %., !dbg !51
  br i1 %cmp29, label %if.end68, label %if.end32, !dbg !51

if.end32:                                         ; preds = %while.body
  %arrayidx35 = getelementptr inbounds i32* %1, i64 %idxprom27, !dbg !54
  %17 = load i32* %arrayidx35, align 4, !dbg !54, !tbaa !34
  %cmp36 = icmp eq i32 %17, 0, !dbg !54
  br i1 %cmp36, label %if.then38, label %while.body, !dbg !54

if.then38:                                        ; preds = %if.end32
  %18 = load i32* %ifree, align 4, !dbg !55, !tbaa !34
  %inc39 = add nsw i32 %18, 1, !dbg !55
  store i32 %inc39, i32* %ifree, align 4, !dbg !55, !tbaa !34
  %19 = load i32* %nzs_, align 4, !dbg !57, !tbaa !34
  %cmp40 = icmp slt i32 %18, %19, !dbg !57
  br i1 %cmp40, label %if.end53, label %if.then42, !dbg !57

if.then42:                                        ; preds = %if.then38
  %conv43 = sitofp i32 %19 to double, !dbg !58
  %mul44 = fmul double %conv43, 1.100000e+00, !dbg !58
  %conv45 = fptosi double %mul44 to i32, !dbg !58
  store i32 %conv45, i32* %nzs_, align 4, !dbg !58, !tbaa !34
  %20 = bitcast i32* %0 to i8*, !dbg !60
  %conv46 = sext i32 %conv45 to i64, !dbg !60
  %mul47 = shl nsw i64 %conv46, 2, !dbg !60
  %call48 = tail call i8* @realloc(i8* %20, i64 %mul47) #3, !dbg !60
  %21 = bitcast i8* %call48 to i32*, !dbg !60
  tail call void @llvm.dbg.value(metadata !{i32* %21}, i64 0, metadata !22), !dbg !60
  %22 = bitcast i32* %1 to i8*, !dbg !61
  %23 = load i32* %nzs_, align 4, !dbg !61, !tbaa !34
  %conv49 = sext i32 %23 to i64, !dbg !61
  %mul50 = shl nsw i64 %conv49, 2, !dbg !61
  %call51 = tail call i8* @realloc(i8* %22, i64 %mul50) #3, !dbg !61
  %24 = bitcast i8* %call51 to i32*, !dbg !61
  tail call void @llvm.dbg.value(metadata !{i32* %24}, i64 0, metadata !23), !dbg !61
  %25 = load i32* %nzs_, align 4, !dbg !62, !tbaa !34
  %call52 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str, i64 0, i64 0), i32 %25) #3, !dbg !62
  %.pre119 = load i32* %ifree, align 4, !dbg !63, !tbaa !34
  br label %if.end53, !dbg !64

if.end53:                                         ; preds = %if.then38, %if.then42
  %26 = phi i32 [ %.pre119, %if.then42 ], [ %inc39, %if.then38 ]
  %mast1.1 = phi i32* [ %21, %if.then42 ], [ %0, %if.then38 ]
  %mast2.1 = phi i32* [ %24, %if.then42 ], [ %1, %if.then38 ]
  %arrayidx56 = getelementptr inbounds i32* %mast2.1, i64 %idxprom27, !dbg !63
  store i32 %26, i32* %arrayidx56, align 4, !dbg !63, !tbaa !34
  %27 = load i32* %ifree, align 4, !dbg !65, !tbaa !34
  %sub57 = add nsw i32 %27, -1, !dbg !65
  %idxprom58 = sext i32 %sub57 to i64, !dbg !65
  %arrayidx59 = getelementptr inbounds i32* %mast1.1, i64 %idxprom58, !dbg !65
  store i32 %., i32* %arrayidx59, align 4, !dbg !65, !tbaa !34
  %28 = load i32* %ifree, align 4, !dbg !66, !tbaa !34
  %sub60 = add nsw i32 %28, -1, !dbg !66
  %idxprom61 = sext i32 %sub60 to i64, !dbg !66
  %arrayidx62 = getelementptr inbounds i32* %mast2.1, i64 %idxprom61, !dbg !66
  store i32 0, i32* %arrayidx62, align 4, !dbg !66, !tbaa !34
  br label %if.end68, !dbg !67

if.end68:                                         ; preds = %while.body, %if.end53, %if.end12
  %mast1.2 = phi i32* [ %mast1.0, %if.end12 ], [ %mast1.1, %if.end53 ], [ %0, %while.body ]
  %mast2.2 = phi i32* [ %mast2.0, %if.end12 ], [ %mast2.1, %if.end53 ], [ %1, %while.body ]
  store i32* %mast1.2, i32** %mast1p, align 8, !dbg !68, !tbaa !29
  store i32* %mast2.2, i32** %mast2p, align 8, !dbg !69, !tbaa !29
  ret void, !dbg !70
}
