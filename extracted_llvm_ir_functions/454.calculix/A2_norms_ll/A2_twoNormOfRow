define double @A2_twoNormOfRow(%struct._A2* %mtx, i32 %irow) #0 {
  tail call void @llvm.dbg.value(metadata %struct._A2* %mtx, i64 0, metadata !210, metadata !233), !dbg !1100
  tail call void @llvm.dbg.value(metadata i32 %irow, i64 0, metadata !211, metadata !233), !dbg !1101
  %1 = icmp eq %struct._A2* %mtx, null, !dbg !1102
  br i1 %1, label %11, label %2, !dbg !1104

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 6, !dbg !1105
  %4 = load double** %3, align 8, !dbg !1105, !tbaa !277
  %5 = icmp eq double* %4, null, !dbg !1106
  %6 = icmp slt i32 %irow, 0, !dbg !1107
  %or.cond = or i1 %6, %5, !dbg !1108
  br i1 %or.cond, label %11, label %7, !dbg !1108

; <label>:7                                       ; preds = %2
  %8 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 1, !dbg !1109
  %9 = load i32* %8, align 4, !dbg !1109, !tbaa !239
  %10 = icmp slt i32 %9, %irow, !dbg !1110
  br i1 %10, label %11, label %14, !dbg !1111

; <label>:11                                      ; preds = %7, %2, %0
  %12 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1112, !tbaa !265
  %13 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %12, i8* getelementptr inbounds ([52 x i8]* @.str16, i64 0, i64 0), %struct._A2* %mtx, i32 %irow) #6, !dbg !1114
  tail call void @exit(i32 -1) #7, !dbg !1115
  unreachable, !dbg !1115

; <label>:14                                      ; preds = %7
  %15 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 0, !dbg !1116
  %16 = load i32* %15, align 4, !dbg !1116, !tbaa !270
  %.off = add i32 %16, -1, !dbg !1118
  %switch = icmp ult i32 %.off, 2, !dbg !1118
  br i1 %switch, label %20, label %17, !dbg !1118

; <label>:17                                      ; preds = %14
  %18 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1119, !tbaa !265
  %19 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %18, i8* getelementptr inbounds ([95 x i8]* @.str17, i64 0, i64 0), %struct._A2* %mtx, i32 %irow, i32 %16) #6, !dbg !1121
  tail call void @exit(i32 -1) #7, !dbg !1122
  unreachable, !dbg !1122

; <label>:20                                      ; preds = %14
  %21 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 2, !dbg !1123
  %22 = load i32* %21, align 4, !dbg !1123, !tbaa !249
  tail call void @llvm.dbg.value(metadata i32 %22, i64 0, metadata !217, metadata !233), !dbg !1124
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !212, metadata !233), !dbg !1125
  switch i32 %16, label %.loopexit [
    i32 1, label %23
    i32 2, label %46
  ], !dbg !1126

; <label>:23                                      ; preds = %20
  %24 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 3, !dbg !1127
  %25 = load i32* %24, align 4, !dbg !1127, !tbaa !254
  %26 = mul nsw i32 %25, %irow, !dbg !1130
  %27 = sext i32 %26 to i64, !dbg !1131
  %28 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 4, !dbg !1132
  %29 = load i32* %28, align 4, !dbg !1132, !tbaa !259
  tail call void @llvm.dbg.value(metadata i32 %29, i64 0, metadata !214, metadata !233), !dbg !1134
  %30 = icmp eq i32 %29, 1, !dbg !1135
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !215, metadata !233), !dbg !1136
  %31 = icmp sgt i32 %22, 0, !dbg !1137
  br i1 %30, label %.preheader, label %.preheader7, !dbg !1141

.preheader7:                                      ; preds = %23
  br i1 %31, label %.lr.ph18, label %.loopexit, !dbg !1142

.lr.ph18:                                         ; preds = %.preheader7
  %32 = sext i32 %29 to i64
  %33 = add i32 %22, -1, !dbg !1142
  br label %40, !dbg !1142

.preheader:                                       ; preds = %23
  br i1 %31, label %.lr.ph, label %.loopexit, !dbg !1145

.lr.ph:                                           ; preds = %.preheader
  %34 = add i32 %22, -1, !dbg !1145
  br label %35, !dbg !1145

; <label>:35                                      ; preds = %35, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %35 ]
  %sum.014 = phi double [ 0.000000e+00, %.lr.ph ], [ %39, %35 ]
  %.sum6 = add nsw i64 %indvars.iv, %27, !dbg !1146
  %36 = getelementptr inbounds double* %4, i64 %.sum6, !dbg !1146
  %37 = load double* %36, align 8, !dbg !1146, !tbaa !307
  %38 = fmul double %37, %37, !dbg !1148
  %39 = fadd double %sum.014, %38, !dbg !1149
  tail call void @llvm.dbg.value(metadata double %39, i64 0, metadata !212, metadata !233), !dbg !1125
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1145
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !1145
  %exitcond = icmp eq i32 %lftr.wideiv, %34, !dbg !1145
  br i1 %exitcond, label %.loopexit, label %35, !dbg !1145

; <label>:40                                      ; preds = %40, %.lr.ph18
  %indvars.iv32 = phi i64 [ 0, %.lr.ph18 ], [ %indvars.iv.next33, %40 ]
  %sum.117 = phi double [ 0.000000e+00, %.lr.ph18 ], [ %44, %40 ]
  %jcol.115 = phi i32 [ 0, %.lr.ph18 ], [ %45, %40 ]
  %.sum5 = add nsw i64 %indvars.iv32, %27, !dbg !1150
  %41 = getelementptr inbounds double* %4, i64 %.sum5, !dbg !1150
  %42 = load double* %41, align 8, !dbg !1150, !tbaa !307
  %43 = fmul double %42, %42, !dbg !1153
  %44 = fadd double %sum.117, %43, !dbg !1154
  tail call void @llvm.dbg.value(metadata double %44, i64 0, metadata !212, metadata !233), !dbg !1125
  %45 = add nuw nsw i32 %jcol.115, 1, !dbg !1155
  tail call void @llvm.dbg.value(metadata i32 %45, i64 0, metadata !215, metadata !233), !dbg !1136
  %indvars.iv.next33 = add i64 %indvars.iv32, %32, !dbg !1142
  %exitcond34 = icmp eq i32 %jcol.115, %33, !dbg !1142
  br i1 %exitcond34, label %.loopexit, label %40, !dbg !1142

; <label>:46                                      ; preds = %20
  %47 = shl i32 %irow, 1, !dbg !1156
  %48 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 3, !dbg !1159
  %49 = load i32* %48, align 4, !dbg !1159, !tbaa !254
  %50 = mul nsw i32 %47, %49, !dbg !1160
  %51 = sext i32 %50 to i64, !dbg !1161
  %52 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 4, !dbg !1162
  %53 = load i32* %52, align 4, !dbg !1162, !tbaa !259
  tail call void @llvm.dbg.value(metadata i32 %53, i64 0, metadata !214, metadata !233), !dbg !1134
  %54 = icmp eq i32 %53, 1, !dbg !1164
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !215, metadata !233), !dbg !1136
  %55 = icmp sgt i32 %22, 0, !dbg !1165
  br i1 %54, label %.preheader9, label %.preheader11, !dbg !1169

.preheader11:                                     ; preds = %46
  br i1 %55, label %.lr.ph27, label %.loopexit, !dbg !1170

.lr.ph27:                                         ; preds = %.preheader11
  %56 = sext i32 %53 to i64
  %57 = add i32 %22, -1, !dbg !1170
  br label %71, !dbg !1170

.preheader9:                                      ; preds = %46
  br i1 %55, label %.lr.ph22, label %.loopexit, !dbg !1173

.lr.ph22:                                         ; preds = %.preheader9
  %58 = add i32 %22, -1, !dbg !1173
  br label %59, !dbg !1173

; <label>:59                                      ; preds = %59, %.lr.ph22
  %indvars.iv35 = phi i64 [ 0, %.lr.ph22 ], [ %indvars.iv.next36, %59 ]
  %sum.221 = phi double [ 0.000000e+00, %.lr.ph22 ], [ %70, %59 ]
  %60 = trunc i64 %indvars.iv35 to i32, !dbg !1174
  %61 = shl nsw i32 %60, 1, !dbg !1174
  %62 = sext i32 %61 to i64, !dbg !1176
  %.sum3 = add nsw i64 %62, %51, !dbg !1176
  %63 = getelementptr inbounds double* %4, i64 %.sum3, !dbg !1176
  %64 = bitcast double* %63 to <2 x double>*, !dbg !1176
  %65 = load <2 x double>* %64, align 8, !dbg !1176, !tbaa !307
  %66 = fmul <2 x double> %65, %65, !dbg !1177
  %67 = extractelement <2 x double> %66, i32 0, !dbg !1178
  %68 = extractelement <2 x double> %66, i32 1, !dbg !1178
  %69 = fadd double %67, %68, !dbg !1178
  %70 = fadd double %sum.221, %69, !dbg !1179
  tail call void @llvm.dbg.value(metadata double %70, i64 0, metadata !212, metadata !233), !dbg !1125
  %indvars.iv.next36 = add nuw nsw i64 %indvars.iv35, 1, !dbg !1173
  %exitcond38 = icmp eq i32 %60, %58, !dbg !1173
  br i1 %exitcond38, label %.loopexit, label %59, !dbg !1173

; <label>:71                                      ; preds = %71, %.lr.ph27
  %indvars.iv39 = phi i64 [ 0, %.lr.ph27 ], [ %indvars.iv.next40, %71 ]
  %sum.326 = phi double [ 0.000000e+00, %.lr.ph27 ], [ %84, %71 ]
  %jcol.324 = phi i32 [ 0, %.lr.ph27 ], [ %85, %71 ]
  %72 = trunc i64 %indvars.iv39 to i32, !dbg !1180
  %73 = shl nsw i32 %72, 1, !dbg !1180
  %74 = sext i32 %73 to i64, !dbg !1183
  %.sum = add nsw i64 %74, %51, !dbg !1183
  %75 = getelementptr inbounds double* %4, i64 %.sum, !dbg !1183
  %76 = load double* %75, align 8, !dbg !1183, !tbaa !307
  %77 = fmul double %76, %76, !dbg !1184
  %78 = or i32 %73, 1, !dbg !1185
  %79 = sext i32 %78 to i64, !dbg !1186
  %.sum2 = add nsw i64 %79, %51, !dbg !1186
  %80 = getelementptr inbounds double* %4, i64 %.sum2, !dbg !1186
  %81 = load double* %80, align 8, !dbg !1186, !tbaa !307
  %82 = fmul double %81, %81, !dbg !1187
  %83 = fadd double %77, %82, !dbg !1188
  %84 = fadd double %sum.326, %83, !dbg !1189
  tail call void @llvm.dbg.value(metadata double %84, i64 0, metadata !212, metadata !233), !dbg !1125
  %85 = add nuw nsw i32 %jcol.324, 1, !dbg !1190
  tail call void @llvm.dbg.value(metadata i32 %85, i64 0, metadata !215, metadata !233), !dbg !1136
  %indvars.iv.next40 = add i64 %indvars.iv39, %56, !dbg !1170
  %exitcond41 = icmp eq i32 %jcol.324, %57, !dbg !1170
  br i1 %exitcond41, label %.loopexit, label %71, !dbg !1170

.loopexit:                                        ; preds = %71, %59, %40, %35, %.preheader11, %.preheader9, %.preheader7, %.preheader, %20
  %sum.4 = phi double [ 0.000000e+00, %20 ], [ 0.000000e+00, %.preheader ], [ 0.000000e+00, %.preheader7 ], [ 0.000000e+00, %.preheader9 ], [ 0.000000e+00, %.preheader11 ], [ %39, %35 ], [ %44, %40 ], [ %70, %59 ], [ %84, %71 ]
  %86 = tail call double @sqrt(double %sum.4) #8, !dbg !1191
  tail call void @llvm.dbg.value(metadata double %86, i64 0, metadata !212, metadata !233), !dbg !1125
  ret double %86, !dbg !1192
}
