define double @A2_oneNorm(%struct._A2* %mtx) #0 {
entry:
  %cmp = icmp eq %struct._A2* %mtx, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([45 x i8]* @.str4, i64 0, i64 0), %struct._A2* null) #5
  tail call void @exit(i32 -1) #6
  unreachable

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 0
  %1 = load i32* %type, align 4, !tbaa !0
  %.off = add i32 %1, -1
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.end7, label %if.then4

if.then4:                                         ; preds = %if.end
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([87 x i8]* @.str5, i64 0, i64 0), %struct._A2* %mtx, i32 %1) #5
  tail call void @exit(i32 -1) #6
  unreachable

if.end7:                                          ; preds = %if.end
  %n1 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 1
  %3 = load i32* %n1, align 4, !tbaa !0
  %cmp8 = icmp slt i32 %3, 1
  br i1 %cmp8, label %return, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %if.end7
  %n2 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 2
  %4 = load i32* %n2, align 4, !tbaa !0
  %cmp10 = icmp slt i32 %4, 1
  br i1 %cmp10, label %return, label %if.end12

if.end12:                                         ; preds = %lor.lhs.false9
  switch i32 %1, label %return [
    i32 1, label %if.then15
    i32 2, label %if.then65
  ]

if.then15:                                        ; preds = %if.end12
  %inc1 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 3
  %5 = load i32* %inc1, align 4, !tbaa !0
  %cmp16 = icmp eq i32 %5, 1
  %inc218 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 4
  %6 = load i32* %inc218, align 4, !tbaa !0
  %entries = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 6
  %7 = load double** %entries, align 8, !tbaa !3
  %cmp19205 = icmp sgt i32 %4, 0
  br i1 %cmp16, label %for.cond.preheader, label %for.cond39.preheader

for.cond39.preheader:                             ; preds = %if.then15
  br i1 %cmp19205, label %for.cond42.preheader.lr.ph, label %return

for.cond42.preheader.lr.ph:                       ; preds = %for.cond39.preheader
  %cmp43210 = icmp sgt i32 %3, 0
  %idx.ext58 = sext i32 %6 to i64
  %8 = sext i32 %5 to i64
  br label %for.cond42.preheader

for.cond.preheader:                               ; preds = %if.then15
  br i1 %cmp19205, label %for.cond20.preheader.lr.ph, label %return

for.cond20.preheader.lr.ph:                       ; preds = %for.cond.preheader
  %cmp21202 = icmp sgt i32 %3, 0
  %idx.ext = sext i32 %6 to i64
  br label %for.cond20.preheader

for.cond20.preheader:                             ; preds = %for.end, %for.cond20.preheader.lr.ph
  %norm.0208 = phi double [ 0.000000e+00, %for.cond20.preheader.lr.ph ], [ %norm.1, %for.end ]
  %col.0207 = phi double* [ %7, %for.cond20.preheader.lr.ph ], [ %add.ptr, %for.end ]
  %jcol.0206 = phi i32 [ 0, %for.cond20.preheader.lr.ph ], [ %inc28, %for.end ]
  br i1 %cmp21202, label %for.body22, label %for.end

for.body22:                                       ; preds = %for.cond20.preheader, %for.body22
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body22 ], [ 0, %for.cond20.preheader ]
  %sum.0204 = phi double [ %add, %for.body22 ], [ 0.000000e+00, %for.cond20.preheader ]
  %arrayidx = getelementptr inbounds double* %col.0207, i64 %indvars.iv
  %9 = load double* %arrayidx, align 8, !tbaa !4
  %call23 = tail call double @fabs(double %9) #7
  %add = fadd double %sum.0204, %call23
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %3
  br i1 %exitcond, label %for.end, label %for.body22

for.end:                                          ; preds = %for.body22, %for.cond20.preheader
  %sum.0.lcssa = phi double [ 0.000000e+00, %for.cond20.preheader ], [ %add, %for.body22 ]
  %cmp24 = fcmp olt double %norm.0208, %sum.0.lcssa
  %norm.1 = select i1 %cmp24, double %sum.0.lcssa, double %norm.0208
  %inc28 = add nsw i32 %jcol.0206, 1
  %add.ptr = getelementptr inbounds double* %col.0207, i64 %idx.ext
  %exitcond242 = icmp eq i32 %inc28, %4
  br i1 %exitcond242, label %return, label %for.cond20.preheader

for.cond42.preheader:                             ; preds = %for.end52, %for.cond42.preheader.lr.ph
  %norm.2219 = phi double [ 0.000000e+00, %for.cond42.preheader.lr.ph ], [ %norm.3, %for.end52 ]
  %jcol37.0218 = phi i32 [ 0, %for.cond42.preheader.lr.ph ], [ %inc57, %for.end52 ]
  %col31.0217 = phi double* [ %7, %for.cond42.preheader.lr.ph ], [ %add.ptr59, %for.end52 ]
  br i1 %cmp43210, label %for.body44, label %for.end52

for.body44:                                       ; preds = %for.cond42.preheader, %for.body44
  %indvars.iv243 = phi i64 [ %indvars.iv.next244, %for.body44 ], [ 0, %for.cond42.preheader ]
  %irow36.0212 = phi i32 [ %inc50, %for.body44 ], [ 0, %for.cond42.preheader ]
  %sum30.0211 = phi double [ %add48, %for.body44 ], [ 0.000000e+00, %for.cond42.preheader ]
  %arrayidx46 = getelementptr inbounds double* %col31.0217, i64 %indvars.iv243
  %10 = load double* %arrayidx46, align 8, !tbaa !4
  %call47 = tail call double @fabs(double %10) #7
  %add48 = fadd double %sum30.0211, %call47
  %inc50 = add nsw i32 %irow36.0212, 1
  %indvars.iv.next244 = add i64 %indvars.iv243, %8
  %exitcond245 = icmp eq i32 %inc50, %3
  br i1 %exitcond245, label %for.end52, label %for.body44

for.end52:                                        ; preds = %for.body44, %for.cond42.preheader
  %sum30.0.lcssa = phi double [ 0.000000e+00, %for.cond42.preheader ], [ %add48, %for.body44 ]
  %cmp53 = fcmp olt double %norm.2219, %sum30.0.lcssa
  %norm.3 = select i1 %cmp53, double %sum30.0.lcssa, double %norm.2219
  %inc57 = add nsw i32 %jcol37.0218, 1
  %add.ptr59 = getelementptr inbounds double* %col31.0217, i64 %idx.ext58
  %exitcond246 = icmp eq i32 %inc57, %4
  br i1 %exitcond246, label %return, label %for.cond42.preheader

if.then65:                                        ; preds = %if.end12
  %inc166 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 3
  %11 = load i32* %inc166, align 4, !tbaa !0
  %cmp67 = icmp eq i32 %11, 1
  %inc272 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 4
  %12 = load i32* %inc272, align 4, !tbaa !0
  %entries75 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 6
  %13 = load double** %entries75, align 8, !tbaa !3
  %cmp80221 = icmp sgt i32 %3, 0
  %mul98 = shl nsw i32 %12, 1
  %idx.ext99 = sext i32 %mul98 to i64
  br i1 %cmp67, label %for.cond79.preheader, label %for.cond116.preheader.lr.ph

for.cond116.preheader.lr.ph:                      ; preds = %if.then65
  %14 = sext i32 %11 to i64
  br label %for.cond116.preheader

for.cond79.preheader:                             ; preds = %if.then65, %for.end92
  %norm.4229 = phi double [ %norm.5, %for.end92 ], [ 0.000000e+00, %if.then65 ]
  %jcol74.0228 = phi i32 [ %inc97, %for.end92 ], [ 0, %if.then65 ]
  %col70.0227 = phi double* [ %add.ptr100, %for.end92 ], [ %13, %if.then65 ]
  br i1 %cmp80221, label %for.body81, label %for.end92

for.body81:                                       ; preds = %for.cond79.preheader, %for.body81
  %indvars.iv247 = phi i64 [ %indvars.iv.next248, %for.body81 ], [ 0, %for.cond79.preheader ]
  %sum69.0222 = phi double [ %add89, %for.body81 ], [ 0.000000e+00, %for.cond79.preheader ]
  %15 = trunc i64 %indvars.iv247 to i32
  %mul = shl nsw i32 %15, 1
  %idxprom82 = sext i32 %mul to i64
  %arrayidx83 = getelementptr inbounds double* %col70.0227, i64 %idxprom82
  %16 = load double* %arrayidx83, align 8, !tbaa !4
  %add85201 = or i32 %mul, 1
  %idxprom86 = sext i32 %add85201 to i64
  %arrayidx87 = getelementptr inbounds double* %col70.0227, i64 %idxprom86
  %17 = load double* %arrayidx87, align 8, !tbaa !4
  %call88 = tail call double @Zabs(double %16, double %17) #5
  %add89 = fadd double %sum69.0222, %call88
  %indvars.iv.next248 = add i64 %indvars.iv247, 1
  %lftr.wideiv249 = trunc i64 %indvars.iv.next248 to i32
  %exitcond250 = icmp eq i32 %lftr.wideiv249, %3
  br i1 %exitcond250, label %for.end92, label %for.body81

for.end92:                                        ; preds = %for.body81, %for.cond79.preheader
  %sum69.0.lcssa = phi double [ 0.000000e+00, %for.cond79.preheader ], [ %add89, %for.body81 ]
  %cmp93 = fcmp olt double %norm.4229, %sum69.0.lcssa
  %norm.5 = select i1 %cmp93, double %sum69.0.lcssa, double %norm.4229
  %inc97 = add nsw i32 %jcol74.0228, 1
  %add.ptr100 = getelementptr inbounds double* %col70.0227, i64 %idx.ext99
  %exitcond251 = icmp eq i32 %inc97, %4
  br i1 %exitcond251, label %return, label %for.cond79.preheader

for.cond116.preheader:                            ; preds = %for.end131, %for.cond116.preheader.lr.ph
  %jcol110.0240 = phi i32 [ 0, %for.cond116.preheader.lr.ph ], [ %inc136, %for.end131 ]
  %norm.6239 = phi double [ 0.000000e+00, %for.cond116.preheader.lr.ph ], [ %norm.7, %for.end131 ]
  %col104.0238 = phi double* [ %13, %for.cond116.preheader.lr.ph ], [ %add.ptr139, %for.end131 ]
  br i1 %cmp80221, label %for.body118, label %for.end131

for.body118:                                      ; preds = %for.cond116.preheader, %for.body118
  %indvars.iv252 = phi i64 [ %indvars.iv.next253, %for.body118 ], [ 0, %for.cond116.preheader ]
  %irow109.0233 = phi i32 [ %inc129, %for.body118 ], [ 0, %for.cond116.preheader ]
  %sum103.0232 = phi double [ %add127, %for.body118 ], [ 0.000000e+00, %for.cond116.preheader ]
  %18 = trunc i64 %indvars.iv252 to i32
  %mul119 = shl nsw i32 %18, 1
  %idxprom120 = sext i32 %mul119 to i64
  %arrayidx121 = getelementptr inbounds double* %col104.0238, i64 %idxprom120
  %19 = load double* %arrayidx121, align 8, !tbaa !4
  %add123200 = or i32 %mul119, 1
  %idxprom124 = sext i32 %add123200 to i64
  %arrayidx125 = getelementptr inbounds double* %col104.0238, i64 %idxprom124
  %20 = load double* %arrayidx125, align 8, !tbaa !4
  %call126 = tail call double @Zabs(double %19, double %20) #5
  %add127 = fadd double %sum103.0232, %call126
  %inc129 = add nsw i32 %irow109.0233, 1
  %indvars.iv.next253 = add i64 %indvars.iv252, %14
  %exitcond254 = icmp eq i32 %inc129, %3
  br i1 %exitcond254, label %for.end131, label %for.body118

for.end131:                                       ; preds = %for.body118, %for.cond116.preheader
  %sum103.0.lcssa = phi double [ 0.000000e+00, %for.cond116.preheader ], [ %add127, %for.body118 ]
  %cmp132 = fcmp olt double %norm.6239, %sum103.0.lcssa
  %norm.7 = select i1 %cmp132, double %sum103.0.lcssa, double %norm.6239
  %inc136 = add nsw i32 %jcol110.0240, 1
  %add.ptr139 = getelementptr inbounds double* %col104.0238, i64 %idx.ext99
  %exitcond255 = icmp eq i32 %inc136, %4
  br i1 %exitcond255, label %return, label %for.cond116.preheader

return:                                           ; preds = %for.end131, %for.end92, %for.cond39.preheader, %for.end52, %for.cond.preheader, %for.end, %if.end12, %if.end7, %lor.lhs.false9
  %retval.0 = phi double [ 0.000000e+00, %lor.lhs.false9 ], [ 0.000000e+00, %if.end7 ], [ 0.000000e+00, %if.end12 ], [ 0.000000e+00, %for.cond.preheader ], [ %norm.1, %for.end ], [ 0.000000e+00, %for.cond39.preheader ], [ %norm.3, %for.end52 ], [ %norm.5, %for.end92 ], [ %norm.7, %for.end131 ]
  ret double %retval.0
}
