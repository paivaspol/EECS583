define double @A2_infinityNormOfRow(%struct._A2* %mtx, i32 %irow) #0 {
  tail call void @llvm.dbg.value(metadata %struct._A2* %mtx, i64 0, metadata !220, metadata !233), !dbg !1193
  tail call void @llvm.dbg.value(metadata i32 %irow, i64 0, metadata !221, metadata !233), !dbg !1194
  %1 = icmp eq %struct._A2* %mtx, null, !dbg !1195
  br i1 %1, label %11, label %2, !dbg !1197

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 6, !dbg !1198
  %4 = load double** %3, align 8, !dbg !1198, !tbaa !277
  %5 = icmp eq double* %4, null, !dbg !1199
  %6 = icmp slt i32 %irow, 0, !dbg !1200
  %or.cond = or i1 %6, %5, !dbg !1201
  br i1 %or.cond, label %11, label %7, !dbg !1201

; <label>:7                                       ; preds = %2
  %8 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 1, !dbg !1202
  %9 = load i32* %8, align 4, !dbg !1202, !tbaa !239
  %10 = icmp slt i32 %9, %irow, !dbg !1203
  br i1 %10, label %11, label %14, !dbg !1204

; <label>:11                                      ; preds = %7, %2, %0
  %12 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1205, !tbaa !265
  %13 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %12, i8* getelementptr inbounds ([57 x i8]* @.str18, i64 0, i64 0), %struct._A2* %mtx, i32 %irow) #6, !dbg !1207
  tail call void @exit(i32 -1) #7, !dbg !1208
  unreachable, !dbg !1208

; <label>:14                                      ; preds = %7
  %15 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 0, !dbg !1209
  %16 = load i32* %15, align 4, !dbg !1209, !tbaa !270
  %.off = add i32 %16, -1, !dbg !1211
  %switch = icmp ult i32 %.off, 2, !dbg !1211
  br i1 %switch, label %20, label %17, !dbg !1211

; <label>:17                                      ; preds = %14
  %18 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1212, !tbaa !265
  %19 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %18, i8* getelementptr inbounds ([100 x i8]* @.str19, i64 0, i64 0), %struct._A2* %mtx, i32 %irow, i32 %16) #6, !dbg !1214
  tail call void @exit(i32 -1) #7, !dbg !1215
  unreachable, !dbg !1215

; <label>:20                                      ; preds = %14
  %21 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 2, !dbg !1216
  %22 = load i32* %21, align 4, !dbg !1216, !tbaa !249
  tail call void @llvm.dbg.value(metadata i32 %22, i64 0, metadata !228, metadata !233), !dbg !1217
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !222, metadata !233), !dbg !1218
  switch i32 %16, label %.loopexit [
    i32 1, label %23
    i32 2, label %46
  ], !dbg !1219

; <label>:23                                      ; preds = %20
  %24 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 3, !dbg !1220
  %25 = load i32* %24, align 4, !dbg !1220, !tbaa !254
  %26 = mul nsw i32 %25, %irow, !dbg !1223
  %27 = sext i32 %26 to i64, !dbg !1224
  %28 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 4, !dbg !1225
  %29 = load i32* %28, align 4, !dbg !1225, !tbaa !259
  tail call void @llvm.dbg.value(metadata i32 %29, i64 0, metadata !225, metadata !233), !dbg !1227
  %30 = icmp eq i32 %29, 1, !dbg !1228
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !226, metadata !233), !dbg !1229
  %31 = icmp sgt i32 %22, 0, !dbg !1230
  br i1 %30, label %.preheader, label %.preheader7, !dbg !1234

.preheader7:                                      ; preds = %23
  br i1 %31, label %.lr.ph18, label %.loopexit, !dbg !1235

.lr.ph18:                                         ; preds = %.preheader7
  %32 = sext i32 %29 to i64
  %33 = add i32 %22, -1, !dbg !1235
  br label %40, !dbg !1235

.preheader:                                       ; preds = %23
  br i1 %31, label %.lr.ph, label %.loopexit, !dbg !1238

.lr.ph:                                           ; preds = %.preheader
  %34 = add i32 %22, -1, !dbg !1238
  br label %35, !dbg !1238

; <label>:35                                      ; preds = %35, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %35 ]
  %norm.014 = phi double [ 0.000000e+00, %.lr.ph ], [ %norm.1, %35 ]
  %.sum6 = add nsw i64 %indvars.iv, %27, !dbg !1239
  %36 = getelementptr inbounds double* %4, i64 %.sum6, !dbg !1239
  %37 = load double* %36, align 8, !dbg !1239, !tbaa !307
  %38 = tail call double @fabs(double %37) #8, !dbg !1241
  tail call void @llvm.dbg.value(metadata double %38, i64 0, metadata !223, metadata !233), !dbg !1242
  %39 = fcmp olt double %norm.014, %38, !dbg !1243
  tail call void @llvm.dbg.value(metadata double %38, i64 0, metadata !222, metadata !233), !dbg !1218
  %norm.1 = select i1 %39, double %38, double %norm.014, !dbg !1245
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1238
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !1238
  %exitcond = icmp eq i32 %lftr.wideiv, %34, !dbg !1238
  br i1 %exitcond, label %.loopexit, label %35, !dbg !1238

; <label>:40                                      ; preds = %40, %.lr.ph18
  %indvars.iv29 = phi i64 [ 0, %.lr.ph18 ], [ %indvars.iv.next30, %40 ]
  %norm.217 = phi double [ 0.000000e+00, %.lr.ph18 ], [ %norm.3, %40 ]
  %jcol.115 = phi i32 [ 0, %.lr.ph18 ], [ %45, %40 ]
  %.sum5 = add nsw i64 %indvars.iv29, %27, !dbg !1246
  %41 = getelementptr inbounds double* %4, i64 %.sum5, !dbg !1246
  %42 = load double* %41, align 8, !dbg !1246, !tbaa !307
  %43 = tail call double @fabs(double %42) #8, !dbg !1249
  tail call void @llvm.dbg.value(metadata double %43, i64 0, metadata !223, metadata !233), !dbg !1242
  %44 = fcmp olt double %norm.217, %43, !dbg !1250
  tail call void @llvm.dbg.value(metadata double %43, i64 0, metadata !222, metadata !233), !dbg !1218
  %norm.3 = select i1 %44, double %43, double %norm.217, !dbg !1252
  %45 = add nuw nsw i32 %jcol.115, 1, !dbg !1253
  tail call void @llvm.dbg.value(metadata i32 %45, i64 0, metadata !226, metadata !233), !dbg !1229
  %indvars.iv.next30 = add i64 %indvars.iv29, %32, !dbg !1235
  %exitcond31 = icmp eq i32 %jcol.115, %33, !dbg !1235
  br i1 %exitcond31, label %.loopexit, label %40, !dbg !1235

; <label>:46                                      ; preds = %20
  %47 = shl i32 %irow, 1, !dbg !1254
  %48 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 3, !dbg !1257
  %49 = load i32* %48, align 4, !dbg !1257, !tbaa !254
  %50 = mul nsw i32 %47, %49, !dbg !1258
  %51 = sext i32 %50 to i64, !dbg !1259
  %52 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 4, !dbg !1260
  %53 = load i32* %52, align 4, !dbg !1260, !tbaa !259
  tail call void @llvm.dbg.value(metadata i32 %53, i64 0, metadata !225, metadata !233), !dbg !1227
  %54 = icmp eq i32 %53, 1, !dbg !1262
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !226, metadata !233), !dbg !1229
  %55 = icmp sgt i32 %22, 0, !dbg !1263
  br i1 %54, label %.preheader9, label %.preheader11, !dbg !1267

.preheader11:                                     ; preds = %46
  br i1 %55, label %.lr.ph27, label %.loopexit, !dbg !1268

.lr.ph27:                                         ; preds = %.preheader11
  %56 = sext i32 %53 to i64
  %57 = add i32 %22, -1, !dbg !1268
  br label %71, !dbg !1268

.preheader9:                                      ; preds = %46
  br i1 %55, label %.lr.ph22, label %.loopexit, !dbg !1271

.lr.ph22:                                         ; preds = %.preheader9
  %58 = add i32 %22, -1, !dbg !1271
  br label %59, !dbg !1271

; <label>:59                                      ; preds = %59, %.lr.ph22
  %indvars.iv32 = phi i64 [ 0, %.lr.ph22 ], [ %indvars.iv.next33, %59 ]
  %norm.421 = phi double [ 0.000000e+00, %.lr.ph22 ], [ %norm.5, %59 ]
  %60 = trunc i64 %indvars.iv32 to i32, !dbg !1272
  %61 = shl nsw i32 %60, 1, !dbg !1272
  %62 = sext i32 %61 to i64, !dbg !1274
  %.sum3 = add nsw i64 %62, %51, !dbg !1274
  %63 = getelementptr inbounds double* %4, i64 %.sum3, !dbg !1274
  %64 = load double* %63, align 8, !dbg !1274, !tbaa !307
  %65 = or i32 %61, 1, !dbg !1275
  %66 = sext i32 %65 to i64, !dbg !1276
  %.sum4 = add nsw i64 %66, %51, !dbg !1276
  %67 = getelementptr inbounds double* %4, i64 %.sum4, !dbg !1276
  %68 = load double* %67, align 8, !dbg !1276, !tbaa !307
  %69 = tail call double @Zabs(double %64, double %68) #6, !dbg !1277
  tail call void @llvm.dbg.value(metadata double %69, i64 0, metadata !223, metadata !233), !dbg !1242
  %70 = fcmp olt double %norm.421, %69, !dbg !1278
  tail call void @llvm.dbg.value(metadata double %69, i64 0, metadata !222, metadata !233), !dbg !1218
  %norm.5 = select i1 %70, double %69, double %norm.421, !dbg !1280
  %indvars.iv.next33 = add nuw nsw i64 %indvars.iv32, 1, !dbg !1271
  %exitcond35 = icmp eq i32 %60, %58, !dbg !1271
  br i1 %exitcond35, label %.loopexit, label %59, !dbg !1271

; <label>:71                                      ; preds = %71, %.lr.ph27
  %indvars.iv36 = phi i64 [ 0, %.lr.ph27 ], [ %indvars.iv.next37, %71 ]
  %norm.626 = phi double [ 0.000000e+00, %.lr.ph27 ], [ %norm.7, %71 ]
  %jcol.324 = phi i32 [ 0, %.lr.ph27 ], [ %83, %71 ]
  %72 = trunc i64 %indvars.iv36 to i32, !dbg !1281
  %73 = shl nsw i32 %72, 1, !dbg !1281
  %74 = sext i32 %73 to i64, !dbg !1284
  %.sum = add nsw i64 %74, %51, !dbg !1284
  %75 = getelementptr inbounds double* %4, i64 %.sum, !dbg !1284
  %76 = load double* %75, align 8, !dbg !1284, !tbaa !307
  %77 = or i32 %73, 1, !dbg !1285
  %78 = sext i32 %77 to i64, !dbg !1286
  %.sum2 = add nsw i64 %78, %51, !dbg !1286
  %79 = getelementptr inbounds double* %4, i64 %.sum2, !dbg !1286
  %80 = load double* %79, align 8, !dbg !1286, !tbaa !307
  %81 = tail call double @Zabs(double %76, double %80) #6, !dbg !1287
  tail call void @llvm.dbg.value(metadata double %81, i64 0, metadata !223, metadata !233), !dbg !1242
  %82 = fcmp olt double %norm.626, %81, !dbg !1288
  tail call void @llvm.dbg.value(metadata double %81, i64 0, metadata !222, metadata !233), !dbg !1218
  %norm.7 = select i1 %82, double %81, double %norm.626, !dbg !1290
  %83 = add nuw nsw i32 %jcol.324, 1, !dbg !1291
  tail call void @llvm.dbg.value(metadata i32 %83, i64 0, metadata !226, metadata !233), !dbg !1229
  %indvars.iv.next37 = add i64 %indvars.iv36, %56, !dbg !1268
  %exitcond38 = icmp eq i32 %jcol.324, %57, !dbg !1268
  br i1 %exitcond38, label %.loopexit, label %71, !dbg !1268

.loopexit:                                        ; preds = %71, %59, %40, %35, %.preheader11, %.preheader9, %.preheader7, %.preheader, %20
  %norm.8 = phi double [ 0.000000e+00, %20 ], [ 0.000000e+00, %.preheader ], [ 0.000000e+00, %.preheader7 ], [ 0.000000e+00, %.preheader9 ], [ 0.000000e+00, %.preheader11 ], [ %norm.1, %35 ], [ %norm.3, %40 ], [ %norm.5, %59 ], [ %norm.7, %71 ]
  ret double %norm.8, !dbg !1292
}
