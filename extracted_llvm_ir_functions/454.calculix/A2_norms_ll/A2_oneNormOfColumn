define double @A2_oneNormOfColumn(%struct._A2* %mtx, i32 %jcol) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._A2* %mtx}, i64 0, metadata !154), !dbg !447
  tail call void @llvm.dbg.value(metadata !{i32 %jcol}, i64 0, metadata !155), !dbg !448
  %cmp = icmp eq %struct._A2* %mtx, null, !dbg !449
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !449

lor.lhs.false:                                    ; preds = %entry
  %entries = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 6, !dbg !449
  %0 = load double** %entries, align 8, !dbg !449, !tbaa !221
  %cmp1 = icmp eq double* %0, null, !dbg !449
  %cmp3 = icmp slt i32 %jcol, 0, !dbg !449
  %or.cond = or i1 %cmp1, %cmp3, !dbg !449
  br i1 %or.cond, label %if.then, label %lor.lhs.false4, !dbg !449

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %n2 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 2, !dbg !449
  %1 = load i32* %n2, align 4, !dbg !449, !tbaa !216
  %cmp5 = icmp slt i32 %1, %jcol, !dbg !449
  br i1 %cmp5, label %if.then, label %if.end, !dbg !449

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !450, !tbaa !221
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([55 x i8]* @.str8, i64 0, i64 0), %struct._A2* %mtx, i32 %jcol) #6, !dbg !450
  tail call void @exit(i32 -1) #7, !dbg !452
  unreachable, !dbg !452

if.end:                                           ; preds = %lor.lhs.false4
  %type = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 0, !dbg !453
  %3 = load i32* %type, align 4, !dbg !453, !tbaa !216
  %.off = add i32 %3, -1, !dbg !453
  %switch = icmp ult i32 %.off, 2, !dbg !453
  br i1 %switch, label %if.end13, label %if.then10, !dbg !453

if.then10:                                        ; preds = %if.end
  %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !454, !tbaa !221
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([98 x i8]* @.str9, i64 0, i64 0), %struct._A2* %mtx, i32 %jcol, i32 %3) #6, !dbg !454
  tail call void @exit(i32 -1) #7, !dbg !456
  unreachable, !dbg !456

if.end13:                                         ; preds = %if.end
  %n1 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 1, !dbg !457
  %5 = load i32* %n1, align 4, !dbg !457, !tbaa !216
  tail call void @llvm.dbg.value(metadata !{i32 %5}, i64 0, metadata !161), !dbg !457
  tail call void @llvm.dbg.value(metadata !228, i64 0, metadata !156), !dbg !458
  switch i32 %3, label %if.end82 [
    i32 1, label %if.then16
    i32 2, label %if.then38
  ], !dbg !459

if.then16:                                        ; preds = %if.end13
  %inc2 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 4, !dbg !460
  %6 = load i32* %inc2, align 4, !dbg !460, !tbaa !216
  %mul = mul nsw i32 %6, %jcol, !dbg !460
  %idx.ext = sext i32 %mul to i64, !dbg !460
  %inc118 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 3, !dbg !462
  %7 = load i32* %inc118, align 4, !dbg !462, !tbaa !216
  tail call void @llvm.dbg.value(metadata !{i32 %7}, i64 0, metadata !158), !dbg !462
  %cmp19 = icmp eq i32 %7, 1, !dbg !462
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !159), !dbg !463
  %cmp21136 = icmp sgt i32 %5, 0, !dbg !463
  br i1 %cmp19, label %for.cond.preheader, label %for.cond23.preheader, !dbg !462

for.cond23.preheader:                             ; preds = %if.then16
  br i1 %cmp21136, label %for.body25.lr.ph, label %if.end82, !dbg !466

for.body25.lr.ph:                                 ; preds = %for.cond23.preheader
  %8 = sext i32 %7 to i64
  br label %for.body25, !dbg !466

for.cond.preheader:                               ; preds = %if.then16
  br i1 %cmp21136, label %for.body, label %if.end82, !dbg !463

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %sum.0138 = phi double [ %add, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %add.ptr.sum135 = add i64 %indvars.iv, %idx.ext, !dbg !469
  %arrayidx = getelementptr inbounds double* %0, i64 %add.ptr.sum135, !dbg !469
  %9 = load double* %arrayidx, align 8, !dbg !469, !tbaa !248
  %call22 = tail call double @fabs(double %9) #8, !dbg !469
  %add = fadd double %sum.0138, %call22, !dbg !469
  tail call void @llvm.dbg.value(metadata !{double %add}, i64 0, metadata !156), !dbg !469
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !463
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !463
  %exitcond = icmp eq i32 %lftr.wideiv, %5, !dbg !463
  br i1 %exitcond, label %if.end82, label %for.body, !dbg !463

for.body25:                                       ; preds = %for.body25, %for.body25.lr.ph
  %indvars.iv156 = phi i64 [ 0, %for.body25.lr.ph ], [ %indvars.iv.next157, %for.body25 ]
  %sum.1143 = phi double [ 0.000000e+00, %for.body25.lr.ph ], [ %add29, %for.body25 ]
  %irow.1141 = phi i32 [ 0, %for.body25.lr.ph ], [ %inc31, %for.body25 ]
  %add.ptr.sum = add i64 %indvars.iv156, %idx.ext, !dbg !471
  %arrayidx27 = getelementptr inbounds double* %0, i64 %add.ptr.sum, !dbg !471
  %10 = load double* %arrayidx27, align 8, !dbg !471, !tbaa !248
  %call28 = tail call double @fabs(double %10) #8, !dbg !471
  %add29 = fadd double %sum.1143, %call28, !dbg !471
  tail call void @llvm.dbg.value(metadata !{double %add29}, i64 0, metadata !156), !dbg !471
  %inc31 = add nsw i32 %irow.1141, 1, !dbg !466
  tail call void @llvm.dbg.value(metadata !{i32 %inc31}, i64 0, metadata !159), !dbg !466
  %indvars.iv.next157 = add i64 %indvars.iv156, %8, !dbg !466
  %exitcond158 = icmp eq i32 %inc31, %5, !dbg !466
  br i1 %exitcond158, label %if.end82, label %for.body25, !dbg !466

if.then38:                                        ; preds = %if.end13
  %mul40 = shl i32 %jcol, 1, !dbg !473
  %inc241 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 4, !dbg !473
  %11 = load i32* %inc241, align 4, !dbg !473, !tbaa !216
  %mul42 = mul nsw i32 %mul40, %11, !dbg !473
  %idx.ext43 = sext i32 %mul42 to i64, !dbg !473
  %inc145 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 3, !dbg !475
  %12 = load i32* %inc145, align 4, !dbg !475, !tbaa !216
  tail call void @llvm.dbg.value(metadata !{i32 %12}, i64 0, metadata !158), !dbg !475
  %cmp46 = icmp eq i32 %12, 1, !dbg !475
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !159), !dbg !476
  %cmp49146 = icmp sgt i32 %5, 0, !dbg !476
  br i1 %cmp46, label %for.cond48.preheader, label %for.cond64.preheader, !dbg !475

for.cond64.preheader:                             ; preds = %if.then38
  br i1 %cmp49146, label %for.body66.lr.ph, label %if.end82, !dbg !479

for.body66.lr.ph:                                 ; preds = %for.cond64.preheader
  %13 = sext i32 %12 to i64
  br label %for.body66, !dbg !479

for.cond48.preheader:                             ; preds = %if.then38
  br i1 %cmp49146, label %for.body50, label %if.end82, !dbg !476

for.body50:                                       ; preds = %for.cond48.preheader, %for.body50
  %indvars.iv159 = phi i64 [ %indvars.iv.next160, %for.body50 ], [ 0, %for.cond48.preheader ]
  %sum.2148 = phi double [ %add59, %for.body50 ], [ 0.000000e+00, %for.cond48.preheader ]
  %14 = trunc i64 %indvars.iv159 to i32, !dbg !482
  %mul51 = shl nsw i32 %14, 1, !dbg !482
  %idxprom52 = sext i32 %mul51 to i64, !dbg !482
  %add.ptr44.sum132 = add i64 %idxprom52, %idx.ext43, !dbg !482
  %arrayidx53 = getelementptr inbounds double* %0, i64 %add.ptr44.sum132, !dbg !482
  %15 = load double* %arrayidx53, align 8, !dbg !482, !tbaa !248
  %add55133 = or i32 %mul51, 1, !dbg !482
  %idxprom56 = sext i32 %add55133 to i64, !dbg !482
  %add.ptr44.sum134 = add i64 %idxprom56, %idx.ext43, !dbg !482
  %arrayidx57 = getelementptr inbounds double* %0, i64 %add.ptr44.sum134, !dbg !482
  %16 = load double* %arrayidx57, align 8, !dbg !482, !tbaa !248
  %call58 = tail call double @Zabs(double %15, double %16) #6, !dbg !482
  %add59 = fadd double %sum.2148, %call58, !dbg !482
  tail call void @llvm.dbg.value(metadata !{double %add59}, i64 0, metadata !156), !dbg !482
  %indvars.iv.next160 = add i64 %indvars.iv159, 1, !dbg !476
  %lftr.wideiv161 = trunc i64 %indvars.iv.next160 to i32, !dbg !476
  %exitcond162 = icmp eq i32 %lftr.wideiv161, %5, !dbg !476
  br i1 %exitcond162, label %if.end82, label %for.body50, !dbg !476

for.body66:                                       ; preds = %for.body66, %for.body66.lr.ph
  %indvars.iv163 = phi i64 [ 0, %for.body66.lr.ph ], [ %indvars.iv.next164, %for.body66 ]
  %sum.3154 = phi double [ 0.000000e+00, %for.body66.lr.ph ], [ %add75, %for.body66 ]
  %irow.3152 = phi i32 [ 0, %for.body66.lr.ph ], [ %inc77, %for.body66 ]
  %17 = trunc i64 %indvars.iv163 to i32, !dbg !484
  %mul67 = shl nsw i32 %17, 1, !dbg !484
  %idxprom68 = sext i32 %mul67 to i64, !dbg !484
  %add.ptr44.sum = add i64 %idxprom68, %idx.ext43, !dbg !484
  %arrayidx69 = getelementptr inbounds double* %0, i64 %add.ptr44.sum, !dbg !484
  %18 = load double* %arrayidx69, align 8, !dbg !484, !tbaa !248
  %add71130 = or i32 %mul67, 1, !dbg !484
  %idxprom72 = sext i32 %add71130 to i64, !dbg !484
  %add.ptr44.sum131 = add i64 %idxprom72, %idx.ext43, !dbg !484
  %arrayidx73 = getelementptr inbounds double* %0, i64 %add.ptr44.sum131, !dbg !484
  %19 = load double* %arrayidx73, align 8, !dbg !484, !tbaa !248
  %call74 = tail call double @Zabs(double %18, double %19) #6, !dbg !484
  %add75 = fadd double %sum.3154, %call74, !dbg !484
  tail call void @llvm.dbg.value(metadata !{double %add75}, i64 0, metadata !156), !dbg !484
  %inc77 = add nsw i32 %irow.3152, 1, !dbg !479
  tail call void @llvm.dbg.value(metadata !{i32 %inc77}, i64 0, metadata !159), !dbg !479
  %indvars.iv.next164 = add i64 %indvars.iv163, %13, !dbg !479
  %exitcond165 = icmp eq i32 %inc77, %5, !dbg !479
  br i1 %exitcond165, label %if.end82, label %for.body66, !dbg !479

if.end82:                                         ; preds = %for.cond64.preheader, %for.body66, %for.cond48.preheader, %for.body50, %for.cond23.preheader, %for.body25, %for.cond.preheader, %for.body, %if.end13
  %sum.4 = phi double [ 0.000000e+00, %if.end13 ], [ 0.000000e+00, %for.cond.preheader ], [ %add, %for.body ], [ 0.000000e+00, %for.cond23.preheader ], [ %add29, %for.body25 ], [ 0.000000e+00, %for.cond48.preheader ], [ %add59, %for.body50 ], [ 0.000000e+00, %for.cond64.preheader ], [ %add75, %for.body66 ]
  ret double %sum.4, !dbg !486
}
