define double @A2_infinityNormOfColumn(%struct._A2* %mtx, i32 %jcol) #0 {
  tail call void @llvm.dbg.value(metadata %struct._A2* %mtx, i64 0, metadata !189, metadata !233), !dbg !909
  tail call void @llvm.dbg.value(metadata i32 %jcol, i64 0, metadata !190, metadata !233), !dbg !910
  %1 = icmp eq %struct._A2* %mtx, null, !dbg !911
  br i1 %1, label %11, label %2, !dbg !913

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 6, !dbg !914
  %4 = load double** %3, align 8, !dbg !914, !tbaa !277
  %5 = icmp eq double* %4, null, !dbg !915
  %6 = icmp slt i32 %jcol, 0, !dbg !916
  %or.cond = or i1 %6, %5, !dbg !917
  br i1 %or.cond, label %11, label %7, !dbg !917

; <label>:7                                       ; preds = %2
  %8 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 2, !dbg !918
  %9 = load i32* %8, align 4, !dbg !918, !tbaa !249
  %10 = icmp slt i32 %9, %jcol, !dbg !919
  br i1 %10, label %11, label %14, !dbg !920

; <label>:11                                      ; preds = %7, %2, %0
  %12 = load %struct.__sFILE** @__stderrp, align 8, !dbg !921, !tbaa !265
  %13 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %12, i8* getelementptr inbounds ([60 x i8]* @.str12, i64 0, i64 0), %struct._A2* %mtx, i32 %jcol) #6, !dbg !923
  tail call void @exit(i32 -1) #7, !dbg !924
  unreachable, !dbg !924

; <label>:14                                      ; preds = %7
  %15 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 0, !dbg !925
  %16 = load i32* %15, align 4, !dbg !925, !tbaa !270
  %.off = add i32 %16, -1, !dbg !927
  %switch = icmp ult i32 %.off, 2, !dbg !927
  br i1 %switch, label %20, label %17, !dbg !927

; <label>:17                                      ; preds = %14
  %18 = load %struct.__sFILE** @__stderrp, align 8, !dbg !928, !tbaa !265
  %19 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %18, i8* getelementptr inbounds ([103 x i8]* @.str13, i64 0, i64 0), %struct._A2* %mtx, i32 %jcol, i32 %16) #6, !dbg !930
  tail call void @exit(i32 -1) #7, !dbg !931
  unreachable, !dbg !931

; <label>:20                                      ; preds = %14
  %21 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 1, !dbg !932
  %22 = load i32* %21, align 4, !dbg !932, !tbaa !239
  tail call void @llvm.dbg.value(metadata i32 %22, i64 0, metadata !197, metadata !233), !dbg !933
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !191, metadata !233), !dbg !934
  switch i32 %16, label %.loopexit [
    i32 1, label %23
    i32 2, label %46
  ], !dbg !935

; <label>:23                                      ; preds = %20
  %24 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 4, !dbg !936
  %25 = load i32* %24, align 4, !dbg !936, !tbaa !259
  %26 = mul nsw i32 %25, %jcol, !dbg !939
  %27 = sext i32 %26 to i64, !dbg !940
  %28 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 3, !dbg !941
  %29 = load i32* %28, align 4, !dbg !941, !tbaa !254
  tail call void @llvm.dbg.value(metadata i32 %29, i64 0, metadata !194, metadata !233), !dbg !943
  %30 = icmp eq i32 %29, 1, !dbg !944
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !195, metadata !233), !dbg !945
  %31 = icmp sgt i32 %22, 0, !dbg !946
  br i1 %30, label %.preheader, label %.preheader7, !dbg !950

.preheader7:                                      ; preds = %23
  br i1 %31, label %.lr.ph18, label %.loopexit, !dbg !951

.lr.ph18:                                         ; preds = %.preheader7
  %32 = sext i32 %29 to i64
  %33 = add i32 %22, -1, !dbg !951
  br label %40, !dbg !951

.preheader:                                       ; preds = %23
  br i1 %31, label %.lr.ph, label %.loopexit, !dbg !954

.lr.ph:                                           ; preds = %.preheader
  %34 = add i32 %22, -1, !dbg !954
  br label %35, !dbg !954

; <label>:35                                      ; preds = %35, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %35 ]
  %norm.014 = phi double [ 0.000000e+00, %.lr.ph ], [ %norm.1, %35 ]
  %.sum6 = add nsw i64 %indvars.iv, %27, !dbg !955
  %36 = getelementptr inbounds double* %4, i64 %.sum6, !dbg !955
  %37 = load double* %36, align 8, !dbg !955, !tbaa !307
  %38 = tail call double @fabs(double %37) #8, !dbg !957
  tail call void @llvm.dbg.value(metadata double %38, i64 0, metadata !192, metadata !233), !dbg !958
  %39 = fcmp olt double %norm.014, %38, !dbg !959
  tail call void @llvm.dbg.value(metadata double %38, i64 0, metadata !191, metadata !233), !dbg !934
  %norm.1 = select i1 %39, double %38, double %norm.014, !dbg !961
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !954
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !954
  %exitcond = icmp eq i32 %lftr.wideiv, %34, !dbg !954
  br i1 %exitcond, label %.loopexit, label %35, !dbg !954

; <label>:40                                      ; preds = %40, %.lr.ph18
  %indvars.iv29 = phi i64 [ 0, %.lr.ph18 ], [ %indvars.iv.next30, %40 ]
  %norm.217 = phi double [ 0.000000e+00, %.lr.ph18 ], [ %norm.3, %40 ]
  %irow.115 = phi i32 [ 0, %.lr.ph18 ], [ %45, %40 ]
  %.sum5 = add nsw i64 %indvars.iv29, %27, !dbg !962
  %41 = getelementptr inbounds double* %4, i64 %.sum5, !dbg !962
  %42 = load double* %41, align 8, !dbg !962, !tbaa !307
  %43 = tail call double @fabs(double %42) #8, !dbg !965
  tail call void @llvm.dbg.value(metadata double %43, i64 0, metadata !192, metadata !233), !dbg !958
  %44 = fcmp olt double %norm.217, %43, !dbg !966
  tail call void @llvm.dbg.value(metadata double %43, i64 0, metadata !191, metadata !233), !dbg !934
  %norm.3 = select i1 %44, double %43, double %norm.217, !dbg !968
  %45 = add nuw nsw i32 %irow.115, 1, !dbg !969
  tail call void @llvm.dbg.value(metadata i32 %45, i64 0, metadata !195, metadata !233), !dbg !945
  %indvars.iv.next30 = add i64 %indvars.iv29, %32, !dbg !951
  %exitcond31 = icmp eq i32 %irow.115, %33, !dbg !951
  br i1 %exitcond31, label %.loopexit, label %40, !dbg !951

; <label>:46                                      ; preds = %20
  %47 = shl i32 %jcol, 1, !dbg !970
  %48 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 4, !dbg !973
  %49 = load i32* %48, align 4, !dbg !973, !tbaa !259
  %50 = mul nsw i32 %47, %49, !dbg !974
  %51 = sext i32 %50 to i64, !dbg !975
  %52 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 3, !dbg !976
  %53 = load i32* %52, align 4, !dbg !976, !tbaa !254
  tail call void @llvm.dbg.value(metadata i32 %53, i64 0, metadata !194, metadata !233), !dbg !943
  %54 = icmp eq i32 %53, 1, !dbg !978
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !195, metadata !233), !dbg !945
  %55 = icmp sgt i32 %22, 0, !dbg !979
  br i1 %54, label %.preheader9, label %.preheader11, !dbg !983

.preheader11:                                     ; preds = %46
  br i1 %55, label %.lr.ph27, label %.loopexit, !dbg !984

.lr.ph27:                                         ; preds = %.preheader11
  %56 = sext i32 %53 to i64
  %57 = add i32 %22, -1, !dbg !984
  br label %71, !dbg !984

.preheader9:                                      ; preds = %46
  br i1 %55, label %.lr.ph22, label %.loopexit, !dbg !987

.lr.ph22:                                         ; preds = %.preheader9
  %58 = add i32 %22, -1, !dbg !987
  br label %59, !dbg !987

; <label>:59                                      ; preds = %59, %.lr.ph22
  %indvars.iv32 = phi i64 [ 0, %.lr.ph22 ], [ %indvars.iv.next33, %59 ]
  %norm.421 = phi double [ 0.000000e+00, %.lr.ph22 ], [ %norm.5, %59 ]
  %60 = trunc i64 %indvars.iv32 to i32, !dbg !988
  %61 = shl nsw i32 %60, 1, !dbg !988
  %62 = sext i32 %61 to i64, !dbg !990
  %.sum3 = add nsw i64 %62, %51, !dbg !990
  %63 = getelementptr inbounds double* %4, i64 %.sum3, !dbg !990
  %64 = load double* %63, align 8, !dbg !990, !tbaa !307
  %65 = or i32 %61, 1, !dbg !991
  %66 = sext i32 %65 to i64, !dbg !992
  %.sum4 = add nsw i64 %66, %51, !dbg !992
  %67 = getelementptr inbounds double* %4, i64 %.sum4, !dbg !992
  %68 = load double* %67, align 8, !dbg !992, !tbaa !307
  %69 = tail call double @Zabs(double %64, double %68) #6, !dbg !993
  tail call void @llvm.dbg.value(metadata double %69, i64 0, metadata !192, metadata !233), !dbg !958
  %70 = fcmp olt double %norm.421, %69, !dbg !994
  tail call void @llvm.dbg.value(metadata double %69, i64 0, metadata !191, metadata !233), !dbg !934
  %norm.5 = select i1 %70, double %69, double %norm.421, !dbg !996
  %indvars.iv.next33 = add nuw nsw i64 %indvars.iv32, 1, !dbg !987
  %exitcond35 = icmp eq i32 %60, %58, !dbg !987
  br i1 %exitcond35, label %.loopexit, label %59, !dbg !987

; <label>:71                                      ; preds = %71, %.lr.ph27
  %indvars.iv36 = phi i64 [ 0, %.lr.ph27 ], [ %indvars.iv.next37, %71 ]
  %norm.626 = phi double [ 0.000000e+00, %.lr.ph27 ], [ %norm.7, %71 ]
  %irow.324 = phi i32 [ 0, %.lr.ph27 ], [ %83, %71 ]
  %72 = trunc i64 %indvars.iv36 to i32, !dbg !997
  %73 = shl nsw i32 %72, 1, !dbg !997
  %74 = sext i32 %73 to i64, !dbg !1000
  %.sum = add nsw i64 %74, %51, !dbg !1000
  %75 = getelementptr inbounds double* %4, i64 %.sum, !dbg !1000
  %76 = load double* %75, align 8, !dbg !1000, !tbaa !307
  %77 = or i32 %73, 1, !dbg !1001
  %78 = sext i32 %77 to i64, !dbg !1002
  %.sum2 = add nsw i64 %78, %51, !dbg !1002
  %79 = getelementptr inbounds double* %4, i64 %.sum2, !dbg !1002
  %80 = load double* %79, align 8, !dbg !1002, !tbaa !307
  %81 = tail call double @Zabs(double %76, double %80) #6, !dbg !1003
  tail call void @llvm.dbg.value(metadata double %81, i64 0, metadata !192, metadata !233), !dbg !958
  %82 = fcmp olt double %norm.626, %81, !dbg !1004
  tail call void @llvm.dbg.value(metadata double %81, i64 0, metadata !191, metadata !233), !dbg !934
  %norm.7 = select i1 %82, double %81, double %norm.626, !dbg !1006
  %83 = add nuw nsw i32 %irow.324, 1, !dbg !1007
  tail call void @llvm.dbg.value(metadata i32 %83, i64 0, metadata !195, metadata !233), !dbg !945
  %indvars.iv.next37 = add i64 %indvars.iv36, %56, !dbg !984
  %exitcond38 = icmp eq i32 %irow.324, %57, !dbg !984
  br i1 %exitcond38, label %.loopexit, label %71, !dbg !984

.loopexit:                                        ; preds = %71, %59, %40, %35, %.preheader11, %.preheader9, %.preheader7, %.preheader, %20
  %norm.8 = phi double [ 0.000000e+00, %20 ], [ 0.000000e+00, %.preheader ], [ 0.000000e+00, %.preheader7 ], [ 0.000000e+00, %.preheader9 ], [ 0.000000e+00, %.preheader11 ], [ %norm.1, %35 ], [ %norm.3, %40 ], [ %norm.5, %59 ], [ %norm.7, %71 ]
  ret double %norm.8, !dbg !1008
}
