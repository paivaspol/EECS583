define i32 @IV_writeForMatlab(%struct._IV* %iv, i8* %name, %struct._IO_FILE* %fp) #0 {
entry:
  %size = alloca i32, align 4
  %entries = alloca i32*, align 8
  %cmp = icmp eq %struct._IV* %iv, null
  %cmp1 = icmp eq %struct._IO_FILE* %fp, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([51 x i8]* @.str32, i64 0, i64 0), %struct._IV* %iv, i8* %name, %struct._IO_FILE* %fp) #5
  call void @exit(i32 -1) #8
  unreachable

if.end:                                           ; preds = %entry
  call void @IV_sizeAndEntries(%struct._IV* %iv, i32* %size, i32** %entries) #5
  %1 = load i32* %size, align 4, !tbaa !3
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([22 x i8]* @.str33, i64 0, i64 0), i8* %name, i32 %1, i32 %1) #5
  %2 = load i32* %size, align 4, !tbaa !3
  %cmp316 = icmp sgt i32 %2, 0
  br i1 %cmp316, label %for.body, label %for.end

for.body:                                         ; preds = %if.end, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.end ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %3 = load i32** %entries, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i32* %3, i64 %indvars.iv
  %4 = load i32* %arrayidx, align 4, !tbaa !3
  %add4 = add nsw i32 %4, 1
  %5 = trunc i64 %indvars.iv.next to i32
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([16 x i8]* @.str34, i64 0, i64 0), i8* %name, i32 %5, i32 %add4) #5
  %6 = load i32* %size, align 4, !tbaa !3
  %cmp3 = icmp slt i32 %5, %6
  br i1 %cmp3, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %if.end
  ret i32 1
}
