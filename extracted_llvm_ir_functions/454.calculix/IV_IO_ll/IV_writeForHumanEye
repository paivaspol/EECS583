define i32 @IV_writeForHumanEye(%struct._IV* %iv, %struct._IO_FILE* %fp) #0 {
entry:
  %ierr = alloca i32, align 4
  %cmp = icmp eq %struct._IV* %iv, null
  %cmp1 = icmp eq %struct._IO_FILE* %fp, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([56 x i8]* @.str25, i64 0, i64 0), %struct._IV* %iv, %struct._IO_FILE* %fp) #5
  call void @exit(i32 -1) #8
  unreachable

if.end:                                           ; preds = %entry
  %call2 = call i32 @IV_writeStats(%struct._IV* %iv, %struct._IO_FILE* %fp) #7
  %cmp3 = icmp eq i32 %call2, 0
  br i1 %cmp3, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([88 x i8]* @.str26, i64 0, i64 0), %struct._IV* %iv, %struct._IO_FILE* %fp, i32 0, %struct._IV* %iv, %struct._IO_FILE* %fp) #5
  br label %return

if.end6:                                          ; preds = %if.end
  %size = getelementptr inbounds %struct._IV* %iv, i64 0, i32 0
  %2 = load i32* %size, align 4, !tbaa !3
  %vec = getelementptr inbounds %struct._IV* %iv, i64 0, i32 3
  %3 = load i32** %vec, align 8, !tbaa !0
  %call7 = call i32 @IVfp80(%struct._IO_FILE* %fp, i32 %2, i32* %3, i32 80, i32* %ierr) #5
  br label %return

return:                                           ; preds = %if.end6, %if.then4
  %retval.0 = phi i32 [ 0, %if.then4 ], [ 1, %if.end6 ]
  ret i32 %retval.0
}
