define void @BKL_init(%struct._BKL* %bkl, %struct._BPG* %bpg, float %alpha) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._BKL* %bkl}, i64 0, metadata !78), !dbg !81
  tail call void @llvm.dbg.value(metadata !{%struct._BPG* %bpg}, i64 0, metadata !79), !dbg !82
  tail call void @llvm.dbg.value(metadata !{float %alpha}, i64 0, metadata !80), !dbg !83
  %cmp = icmp eq %struct._BKL* %bkl, null, !dbg !84
  %cmp1 = icmp eq %struct._BPG* %bpg, null, !dbg !84
  %or.cond = or i1 %cmp, %cmp1, !dbg !84
  br i1 %or.cond, label %if.then, label %if.end, !dbg !84

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !85, !tbaa !87
  %conv = fpext float %alpha to double, !dbg !85
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([48 x i8]* @.str, i64 0, i64 0), %struct._BKL* %bkl, %struct._BPG* %bpg, double %conv) #5, !dbg !85
  tail call void @exit(i32 -1) #6, !dbg !90
  unreachable, !dbg !90

if.end:                                           ; preds = %entry
  tail call void @BKL_clearData(%struct._BKL* %bkl) #5, !dbg !91
  %bpg2 = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 0, !dbg !92
  store %struct._BPG* %bpg, %struct._BPG** %bpg2, align 8, !dbg !92, !tbaa !87
  %nX = getelementptr inbounds %struct._BPG* %bpg, i64 0, i32 0, !dbg !93
  %1 = load i32* %nX, align 4, !dbg !93, !tbaa !94
  %ndom = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 1, !dbg !93
  store i32 %1, i32* %ndom, align 4, !dbg !93, !tbaa !94
  %nY = getelementptr inbounds %struct._BPG* %bpg, i64 0, i32 1, !dbg !95
  %2 = load i32* %nY, align 4, !dbg !95, !tbaa !94
  %nseg = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 2, !dbg !95
  store i32 %2, i32* %nseg, align 4, !dbg !95, !tbaa !94
  %3 = load i32* %nX, align 4, !dbg !96, !tbaa !94
  %4 = load i32* %nY, align 4, !dbg !96, !tbaa !94
  %add = add nsw i32 %4, %3, !dbg !96
  %nreg = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 3, !dbg !96
  store i32 %add, i32* %nreg, align 4, !dbg !96, !tbaa !94
  %graph = getelementptr inbounds %struct._BPG* %bpg, i64 0, i32 2, !dbg !97
  %5 = load %struct._Graph** %graph, align 8, !dbg !97, !tbaa !87
  %vwghts = getelementptr inbounds %struct._Graph* %5, i64 0, i32 7, !dbg !97
  %6 = load i32** %vwghts, align 8, !dbg !97, !tbaa !87
  %cmp5 = icmp eq i32* %6, null, !dbg !97
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !97

if.then7:                                         ; preds = %if.end
  %totweight = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 4, !dbg !98
  store i32 %add, i32* %totweight, align 4, !dbg !98, !tbaa !94
  %call10 = tail call i32* @IVinit(i32 %add, i32 1) #5, !dbg !100
  %regwghts = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 12, !dbg !100
  store i32* %call10, i32** %regwghts, align 8, !dbg !100, !tbaa !87
  br label %if.end18, !dbg !101

if.else:                                          ; preds = %if.end
  %regwghts13 = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 12, !dbg !102
  store i32* %6, i32** %regwghts13, align 8, !dbg !102, !tbaa !87
  %call16 = tail call i32 @IVsum(i32 %add, i32* %6) #5, !dbg !104
  %totweight17 = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 4, !dbg !104
  store i32 %call16, i32* %totweight17, align 4, !dbg !104, !tbaa !94
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then7
  %7 = load i32* %nreg, align 4, !dbg !105, !tbaa !94
  %call20 = tail call i32* @IVinit(i32 %7, i32 0) #5, !dbg !105
  %colors = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 10, !dbg !105
  store i32* %call20, i32** %colors, align 8, !dbg !105, !tbaa !87
  %alpha21 = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 13, !dbg !106
  store float %alpha, float* %alpha21, align 4, !dbg !106, !tbaa !107
  ret void, !dbg !108
}
