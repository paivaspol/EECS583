define void @BKL_init(%struct._BKL* %bkl, %struct._BPG* %bpg, float %alpha) #0 {
entry:
  %cmp = icmp eq %struct._BKL* %bkl, null
  %cmp1 = icmp eq %struct._BPG* %bpg, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %conv = fpext float %alpha to double
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([48 x i8]* @.str, i64 0, i64 0), %struct._BKL* %bkl, %struct._BPG* %bpg, double %conv) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  tail call void @BKL_clearData(%struct._BKL* %bkl) #4
  %bpg2 = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 0
  store %struct._BPG* %bpg, %struct._BPG** %bpg2, align 8, !tbaa !0
  %nX = getelementptr inbounds %struct._BPG* %bpg, i64 0, i32 0
  %1 = load i32* %nX, align 4, !tbaa !3
  %ndom = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 1
  store i32 %1, i32* %ndom, align 4, !tbaa !3
  %nY = getelementptr inbounds %struct._BPG* %bpg, i64 0, i32 1
  %2 = load i32* %nY, align 4, !tbaa !3
  %nseg = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 2
  store i32 %2, i32* %nseg, align 4, !tbaa !3
  %3 = load i32* %nX, align 4, !tbaa !3
  %4 = load i32* %nY, align 4, !tbaa !3
  %add = add nsw i32 %4, %3
  %nreg = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 3
  store i32 %add, i32* %nreg, align 4, !tbaa !3
  %graph = getelementptr inbounds %struct._BPG* %bpg, i64 0, i32 2
  %5 = load %struct._Graph** %graph, align 8, !tbaa !0
  %vwghts = getelementptr inbounds %struct._Graph* %5, i64 0, i32 7
  %6 = load i32** %vwghts, align 8, !tbaa !0
  %cmp5 = icmp eq i32* %6, null
  br i1 %cmp5, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.end
  %totweight = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 4
  store i32 %add, i32* %totweight, align 4, !tbaa !3
  %call10 = tail call i32* @IVinit(i32 %add, i32 1) #4
  %regwghts = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 12
  store i32* %call10, i32** %regwghts, align 8, !tbaa !0
  br label %if.end18

if.else:                                          ; preds = %if.end
  %regwghts13 = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 12
  store i32* %6, i32** %regwghts13, align 8, !tbaa !0
  %call16 = tail call i32 @IVsum(i32 %add, i32* %6) #4
  %totweight17 = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 4
  store i32 %call16, i32* %totweight17, align 4, !tbaa !3
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then7
  %7 = load i32* %nreg, align 4, !tbaa !3
  %call20 = tail call i32* @IVinit(i32 %7, i32 0) #4
  %colors = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 10
  store i32* %call20, i32** %colors, align 8, !tbaa !0
  %alpha21 = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 13
  store float %alpha, float* %alpha21, align 4, !tbaa !4
  ret void
}
