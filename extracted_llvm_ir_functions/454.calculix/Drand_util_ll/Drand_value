define double @Drand_value(%struct._Drand* %drand) #0 {
entry:
  %cmp = icmp eq %struct._Drand* %drand, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([45 x i8]* @.str, i64 0, i64 0), %struct._Drand* null) #3
  tail call void @exit(i32 -1) #4
  unreachable

if.end:                                           ; preds = %entry
  %mode = getelementptr inbounds %struct._Drand* %drand, i64 0, i32 8
  %1 = load i32* %mode, align 4, !tbaa !3
  %cmp1 = icmp eq i32 %1, 1
  %seed1 = getelementptr inbounds %struct._Drand* %drand, i64 0, i32 0
  %2 = load double* %seed1, align 8, !tbaa !4
  %mul = fmul double %2, 4.001400e+04
  %base1 = getelementptr inbounds %struct._Drand* %drand, i64 0, i32 2
  %3 = load double* %base1, align 8, !tbaa !4
  %call3 = tail call double @fmod(double %mul, double %3) #3
  store double %call3, double* %seed1, align 8, !tbaa !4
  %seed2 = getelementptr inbounds %struct._Drand* %drand, i64 0, i32 1
  %4 = load double* %seed2, align 8, !tbaa !4
  %mul5 = fmul double %4, 4.069200e+04
  %base2 = getelementptr inbounds %struct._Drand* %drand, i64 0, i32 3
  %5 = load double* %base2, align 8, !tbaa !4
  %call6 = tail call double @fmod(double %mul5, double %5) #3
  store double %call6, double* %seed2, align 8, !tbaa !4
  %6 = load double* %seed1, align 8, !tbaa !4
  %sub = fsub double %6, %call6
  %cmp10 = fcmp ole double %sub, 0.000000e+00
  %7 = load double* %base1, align 8, !tbaa !4
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  br i1 %cmp10, label %if.then11, label %if.end14

if.then11:                                        ; preds = %if.then2
  %sub13 = fadd double %7, -1.000000e+00
  %add = fadd double %sub, %sub13
  br label %if.end14

if.end14:                                         ; preds = %if.then2, %if.then11
  %t.0 = phi double [ %add, %if.then11 ], [ %sub, %if.then2 ]
  %lower = getelementptr inbounds %struct._Drand* %drand, i64 0, i32 4
  %8 = load double* %lower, align 8, !tbaa !4
  %div = fdiv double %t.0, %7
  %upper = getelementptr inbounds %struct._Drand* %drand, i64 0, i32 5
  %9 = load double* %upper, align 8, !tbaa !4
  %sub17 = fsub double %9, %8
  %mul18 = fmul double %div, %sub17
  %add19 = fadd double %8, %mul18
  br label %if.end89

if.else:                                          ; preds = %if.end
  br i1 %cmp10, label %if.then34, label %if.end38

if.then34:                                        ; preds = %if.else
  %sub36 = fadd double %7, -1.000000e+00
  %add37 = fadd double %sub, %sub36
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.then34
  %t.1 = phi double [ %add37, %if.then34 ], [ %sub, %if.else ]
  %div40 = fdiv double %t.1, %7
  %mul42 = fmul double %6, 4.001400e+04
  %call44 = tail call double @fmod(double %mul42, double %7) #3
  store double %call44, double* %seed1, align 8, !tbaa !4
  %10 = load double* %seed2, align 8, !tbaa !4
  %mul47 = fmul double %10, 4.069200e+04
  %11 = load double* %base2, align 8, !tbaa !4
  %call49 = tail call double @fmod(double %mul47, double %11) #3
  store double %call49, double* %seed2, align 8, !tbaa !4
  %12 = load double* %seed1, align 8, !tbaa !4
  %sub53 = fsub double %12, %call49
  %cmp54 = fcmp ugt double %sub53, 0.000000e+00
  %.pre146 = load double* %base1, align 8, !tbaa !4
  br i1 %cmp54, label %if.end59, label %if.then55

if.then55:                                        ; preds = %if.end38
  %sub57 = fadd double %.pre146, -1.000000e+00
  %add58 = fadd double %sub53, %sub57
  br label %if.end59

if.end59:                                         ; preds = %if.end38, %if.then55
  %t.2 = phi double [ %add58, %if.then55 ], [ %sub53, %if.end38 ]
  %div61 = fdiv double %t.2, %.pre146
  %add62 = fadd double %div40, %div61
  %mul64 = fmul double %12, 4.001400e+04
  %call66 = tail call double @fmod(double %mul64, double %.pre146) #3
  store double %call66, double* %seed1, align 8, !tbaa !4
  %13 = load double* %seed2, align 8, !tbaa !4
  %mul69 = fmul double %13, 4.069200e+04
  %14 = load double* %base2, align 8, !tbaa !4
  %call71 = tail call double @fmod(double %mul69, double %14) #3
  store double %call71, double* %seed2, align 8, !tbaa !4
  %15 = load double* %seed1, align 8, !tbaa !4
  %sub75 = fsub double %15, %call71
  %cmp76 = fcmp ugt double %sub75, 0.000000e+00
  %.pre147 = load double* %base1, align 8, !tbaa !4
  br i1 %cmp76, label %if.end81, label %if.then77

if.then77:                                        ; preds = %if.end59
  %sub79 = fadd double %.pre147, -1.000000e+00
  %add80 = fadd double %sub75, %sub79
  br label %if.end81

if.end81:                                         ; preds = %if.end59, %if.then77
  %t.3 = phi double [ %add80, %if.then77 ], [ %sub75, %if.end59 ]
  %div83 = fdiv double %t.3, %.pre147
  %add84 = fadd double %add62, %div83
  %mean = getelementptr inbounds %struct._Drand* %drand, i64 0, i32 6
  %16 = load double* %mean, align 8, !tbaa !4
  %sigma = getelementptr inbounds %struct._Drand* %drand, i64 0, i32 7
  %17 = load double* %sigma, align 8, !tbaa !4
  %mul85 = fmul double %add84, 2.000000e+00
  %sub86 = fadd double %mul85, -3.000000e+00
  %mul87 = fmul double %17, %sub86
  %add88 = fadd double %16, %mul87
  br label %if.end89

if.end89:                                         ; preds = %if.end81, %if.end14
  %t.4 = phi double [ %add19, %if.end14 ], [ %add88, %if.end81 ]
  ret double %t.4
}
