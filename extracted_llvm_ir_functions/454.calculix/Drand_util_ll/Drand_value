define double @Drand_value(%struct._Drand* %drand) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._Drand* %drand}, i64 0, metadata !25), !dbg !52
  %cmp = icmp eq %struct._Drand* %drand, null, !dbg !53
  br i1 %cmp, label %if.then, label %if.end, !dbg !53

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !54, !tbaa !56
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([45 x i8]* @.str, i64 0, i64 0), %struct._Drand* null) #4, !dbg !54
  tail call void @exit(i32 -1) #5, !dbg !59
  unreachable, !dbg !59

if.end:                                           ; preds = %entry
  %mode = getelementptr inbounds %struct._Drand* %drand, i64 0, i32 8, !dbg !60
  %1 = load i32* %mode, align 4, !dbg !60, !tbaa !61
  %cmp1 = icmp eq i32 %1, 1, !dbg !60
  %seed1 = getelementptr inbounds %struct._Drand* %drand, i64 0, i32 0, !dbg !62
  %2 = load double* %seed1, align 8, !dbg !62, !tbaa !64
  %mul = fmul double %2, 4.001400e+04, !dbg !62
  %base1 = getelementptr inbounds %struct._Drand* %drand, i64 0, i32 2, !dbg !62
  %3 = load double* %base1, align 8, !dbg !62, !tbaa !64
  %call3 = tail call double @fmod(double %mul, double %3) #4, !dbg !62
  store double %call3, double* %seed1, align 8, !dbg !62, !tbaa !64
  %seed2 = getelementptr inbounds %struct._Drand* %drand, i64 0, i32 1, !dbg !65
  %4 = load double* %seed2, align 8, !dbg !65, !tbaa !64
  %mul5 = fmul double %4, 4.069200e+04, !dbg !65
  %base2 = getelementptr inbounds %struct._Drand* %drand, i64 0, i32 3, !dbg !65
  %5 = load double* %base2, align 8, !dbg !65, !tbaa !64
  %call6 = tail call double @fmod(double %mul5, double %5) #4, !dbg !65
  store double %call6, double* %seed2, align 8, !dbg !65, !tbaa !64
  %6 = load double* %seed1, align 8, !dbg !66, !tbaa !64
  %sub = fsub double %6, %call6, !dbg !66
  tail call void @llvm.dbg.value(metadata !{double %sub}, i64 0, metadata !27), !dbg !66
  %cmp10 = fcmp ole double %sub, 0.000000e+00, !dbg !67
  %7 = load double* %base1, align 8, !dbg !68, !tbaa !64
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !60

if.then2:                                         ; preds = %if.end
  br i1 %cmp10, label %if.then11, label %if.end14, !dbg !67

if.then11:                                        ; preds = %if.then2
  %sub13 = fadd double %7, -1.000000e+00, !dbg !68
  %add = fadd double %sub, %sub13, !dbg !68
  tail call void @llvm.dbg.value(metadata !{double %add}, i64 0, metadata !27), !dbg !68
  br label %if.end14, !dbg !70

if.end14:                                         ; preds = %if.then2, %if.then11
  %t.0 = phi double [ %add, %if.then11 ], [ %sub, %if.then2 ]
  %lower = getelementptr inbounds %struct._Drand* %drand, i64 0, i32 4, !dbg !71
  %8 = load double* %lower, align 8, !dbg !71, !tbaa !64
  %div = fdiv double %t.0, %7, !dbg !71
  %upper = getelementptr inbounds %struct._Drand* %drand, i64 0, i32 5, !dbg !71
  %9 = load double* %upper, align 8, !dbg !71, !tbaa !64
  %sub17 = fsub double %9, %8, !dbg !71
  %mul18 = fmul double %div, %sub17, !dbg !71
  %add19 = fadd double %8, %mul18, !dbg !71
  tail call void @llvm.dbg.value(metadata !{double %add19}, i64 0, metadata !27), !dbg !71
  br label %if.end89, !dbg !72

if.else:                                          ; preds = %if.end
  br i1 %cmp10, label %if.then34, label %if.end38, !dbg !73

if.then34:                                        ; preds = %if.else
  %sub36 = fadd double %7, -1.000000e+00, !dbg !75
  %add37 = fadd double %sub, %sub36, !dbg !75
  tail call void @llvm.dbg.value(metadata !{double %add37}, i64 0, metadata !27), !dbg !75
  br label %if.end38, !dbg !77

if.end38:                                         ; preds = %if.else, %if.then34
  %t.1 = phi double [ %add37, %if.then34 ], [ %sub, %if.else ]
  %div40 = fdiv double %t.1, %7, !dbg !78
  tail call void @llvm.dbg.value(metadata !{double %div40}, i64 0, metadata !27), !dbg !78
  tail call void @llvm.dbg.value(metadata !{double %div40}, i64 0, metadata !26), !dbg !79
  %mul42 = fmul double %6, 4.001400e+04, !dbg !80
  %call44 = tail call double @fmod(double %mul42, double %7) #4, !dbg !80
  store double %call44, double* %seed1, align 8, !dbg !80, !tbaa !64
  %10 = load double* %seed2, align 8, !dbg !81, !tbaa !64
  %mul47 = fmul double %10, 4.069200e+04, !dbg !81
  %11 = load double* %base2, align 8, !dbg !81, !tbaa !64
  %call49 = tail call double @fmod(double %mul47, double %11) #4, !dbg !81
  store double %call49, double* %seed2, align 8, !dbg !81, !tbaa !64
  %12 = load double* %seed1, align 8, !dbg !82, !tbaa !64
  %sub53 = fsub double %12, %call49, !dbg !82
  tail call void @llvm.dbg.value(metadata !{double %sub53}, i64 0, metadata !27), !dbg !82
  %cmp54 = fcmp ugt double %sub53, 0.000000e+00, !dbg !83
  %.pre146 = load double* %base1, align 8, !dbg !84, !tbaa !64
  br i1 %cmp54, label %if.end59, label %if.then55, !dbg !83

if.then55:                                        ; preds = %if.end38
  %sub57 = fadd double %.pre146, -1.000000e+00, !dbg !85
  %add58 = fadd double %sub53, %sub57, !dbg !85
  tail call void @llvm.dbg.value(metadata !{double %add58}, i64 0, metadata !27), !dbg !85
  br label %if.end59, !dbg !87

if.end59:                                         ; preds = %if.end38, %if.then55
  %t.2 = phi double [ %add58, %if.then55 ], [ %sub53, %if.end38 ]
  %div61 = fdiv double %t.2, %.pre146, !dbg !84
  tail call void @llvm.dbg.value(metadata !{double %div61}, i64 0, metadata !27), !dbg !84
  %add62 = fadd double %div40, %div61, !dbg !88
  tail call void @llvm.dbg.value(metadata !{double %add62}, i64 0, metadata !26), !dbg !88
  %mul64 = fmul double %12, 4.001400e+04, !dbg !89
  %call66 = tail call double @fmod(double %mul64, double %.pre146) #4, !dbg !89
  store double %call66, double* %seed1, align 8, !dbg !89, !tbaa !64
  %13 = load double* %seed2, align 8, !dbg !90, !tbaa !64
  %mul69 = fmul double %13, 4.069200e+04, !dbg !90
  %14 = load double* %base2, align 8, !dbg !90, !tbaa !64
  %call71 = tail call double @fmod(double %mul69, double %14) #4, !dbg !90
  store double %call71, double* %seed2, align 8, !dbg !90, !tbaa !64
  %15 = load double* %seed1, align 8, !dbg !91, !tbaa !64
  %sub75 = fsub double %15, %call71, !dbg !91
  tail call void @llvm.dbg.value(metadata !{double %sub75}, i64 0, metadata !27), !dbg !91
  %cmp76 = fcmp ugt double %sub75, 0.000000e+00, !dbg !92
  %.pre147 = load double* %base1, align 8, !dbg !93, !tbaa !64
  br i1 %cmp76, label %if.end81, label %if.then77, !dbg !92

if.then77:                                        ; preds = %if.end59
  %sub79 = fadd double %.pre147, -1.000000e+00, !dbg !94
  %add80 = fadd double %sub75, %sub79, !dbg !94
  tail call void @llvm.dbg.value(metadata !{double %add80}, i64 0, metadata !27), !dbg !94
  br label %if.end81, !dbg !96

if.end81:                                         ; preds = %if.end59, %if.then77
  %t.3 = phi double [ %add80, %if.then77 ], [ %sub75, %if.end59 ]
  %div83 = fdiv double %t.3, %.pre147, !dbg !93
  tail call void @llvm.dbg.value(metadata !{double %div83}, i64 0, metadata !27), !dbg !93
  %add84 = fadd double %add62, %div83, !dbg !97
  tail call void @llvm.dbg.value(metadata !{double %add84}, i64 0, metadata !26), !dbg !97
  %mean = getelementptr inbounds %struct._Drand* %drand, i64 0, i32 6, !dbg !98
  %16 = load double* %mean, align 8, !dbg !98, !tbaa !64
  %sigma = getelementptr inbounds %struct._Drand* %drand, i64 0, i32 7, !dbg !98
  %17 = load double* %sigma, align 8, !dbg !98, !tbaa !64
  %mul85 = fmul double %add84, 2.000000e+00, !dbg !98
  %sub86 = fadd double %mul85, -3.000000e+00, !dbg !98
  %mul87 = fmul double %17, %sub86, !dbg !98
  %add88 = fadd double %16, %mul87, !dbg !98
  tail call void @llvm.dbg.value(metadata !{double %add88}, i64 0, metadata !27), !dbg !98
  br label %if.end89

if.end89:                                         ; preds = %if.end81, %if.end14
  %t.4 = phi double [ %add19, %if.end14 ], [ %add88, %if.end81 ]
  ret double %t.4, !dbg !99
}
