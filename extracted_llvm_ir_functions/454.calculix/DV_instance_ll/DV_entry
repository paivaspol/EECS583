define double @DV_entry(%struct._DV* %dv, i32 %loc) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._DV* %dv}, i64 0, metadata !32), !dbg !79
  tail call void @llvm.dbg.value(metadata !{i32 %loc}, i64 0, metadata !33), !dbg !80
  %cmp = icmp eq %struct._DV* %dv, null, !dbg !81
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !81

lor.lhs.false:                                    ; preds = %entry
  %vec = getelementptr inbounds %struct._DV* %dv, i64 0, i32 3, !dbg !81
  %0 = load double** %vec, align 8, !dbg !81, !tbaa !61
  %cmp1 = icmp eq double* %0, null, !dbg !81
  br i1 %cmp1, label %if.then, label %if.end, !dbg !81

if.then:                                          ; preds = %lor.lhs.false, %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !dbg !82, !tbaa !61
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([42 x i8]* @.str3, i64 0, i64 0), %struct._DV* %dv) #5, !dbg !82
  tail call void @exit(i32 -1) #6, !dbg !84
  unreachable, !dbg !84

if.end:                                           ; preds = %lor.lhs.false
  %cmp2 = icmp slt i32 %loc, 0, !dbg !85
  br i1 %cmp2, label %return, label %lor.lhs.false3, !dbg !85

lor.lhs.false3:                                   ; preds = %if.end
  %size = getelementptr inbounds %struct._DV* %dv, i64 0, i32 0, !dbg !85
  %2 = load i32* %size, align 4, !dbg !85, !tbaa !66
  %cmp4 = icmp sgt i32 %2, %loc, !dbg !85
  br i1 %cmp4, label %if.else, label %return, !dbg !85

if.else:                                          ; preds = %lor.lhs.false3
  %idxprom = sext i32 %loc to i64, !dbg !86
  %arrayidx = getelementptr inbounds double* %0, i64 %idxprom, !dbg !86
  %3 = load double* %arrayidx, align 8, !dbg !86, !tbaa !88
  br label %return, !dbg !86

return:                                           ; preds = %if.end, %lor.lhs.false3, %if.else
  %retval.0 = phi double [ %3, %if.else ], [ 0.000000e+00, %lor.lhs.false3 ], [ 0.000000e+00, %if.end ]
  ret double %retval.0, !dbg !89
}
