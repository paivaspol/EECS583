define void @DV_sizeAndEntries(%struct._DV* %dv, i32* %psize, double** %pentries) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._DV* %dv}, i64 0, metadata !45), !dbg !96
  tail call void @llvm.dbg.value(metadata !{i32* %psize}, i64 0, metadata !46), !dbg !97
  tail call void @llvm.dbg.value(metadata !{double** %pentries}, i64 0, metadata !47), !dbg !98
  %cmp = icmp eq %struct._DV* %dv, null, !dbg !99
  %cmp1 = icmp eq i32* %psize, null, !dbg !99
  %or.cond = or i1 %cmp, %cmp1, !dbg !99
  %cmp3 = icmp eq double** %pentries, null, !dbg !99
  %or.cond11 = or i1 %or.cond, %cmp3, !dbg !99
  br i1 %or.cond11, label %if.then, label %if.end, !dbg !99

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !100, !tbaa !61
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([57 x i8]* @.str5, i64 0, i64 0), %struct._DV* %dv, i32* %psize, double** %pentries) #5, !dbg !100
  tail call void @exit(i32 -1) #6, !dbg !102
  unreachable, !dbg !102

if.end:                                           ; preds = %entry
  %size = getelementptr inbounds %struct._DV* %dv, i64 0, i32 0, !dbg !103
  %1 = load i32* %size, align 4, !dbg !103, !tbaa !66
  store i32 %1, i32* %psize, align 4, !dbg !103, !tbaa !66
  %vec = getelementptr inbounds %struct._DV* %dv, i64 0, i32 3, !dbg !104
  %2 = load double** %vec, align 8, !dbg !104, !tbaa !61
  store double* %2, double** %pentries, align 8, !dbg !104, !tbaa !61
  ret void, !dbg !105
}
