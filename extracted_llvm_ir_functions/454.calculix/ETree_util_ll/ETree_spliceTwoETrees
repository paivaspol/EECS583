define %struct._ETree* @ETree_spliceTwoETrees(%struct._ETree* %etree0, %struct._Graph* %graph0, %struct._IV* %mapIV, %struct._ETree* %etree1) #0 {
entry:
  %vadj = alloca i32*, align 8
  %vsize = alloca i32, align 4
  %cmp = icmp eq %struct._ETree* %etree0, null
  %cmp1 = icmp eq %struct._Graph* %graph0, null
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp eq %struct._IV* %mapIV, null
  %or.cond261 = or i1 %or.cond, %cmp3
  %cmp5 = icmp eq %struct._ETree* %etree1, null
  %or.cond262 = or i1 %or.cond261, %cmp5
  br i1 %or.cond262, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([64 x i8]* @.str14, i64 0, i64 0), %struct._ETree* %etree0, %struct._Graph* %graph0, %struct._IV* %mapIV, %struct._ETree* %etree1) #4
  call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  %nfront = getelementptr inbounds %struct._ETree* %etree0, i64 0, i32 0
  %1 = load i32* %nfront, align 4, !tbaa !3
  %nvtx6 = getelementptr inbounds %struct._ETree* %etree0, i64 0, i32 1
  %2 = load i32* %nvtx6, align 4, !tbaa !3
  %tree = getelementptr inbounds %struct._ETree* %etree0, i64 0, i32 2
  %3 = load %struct._Tree** %tree, align 8, !tbaa !0
  %par = getelementptr inbounds %struct._Tree* %3, i64 0, i32 2
  %4 = load i32** %par, align 8, !tbaa !0
  %sib = getelementptr inbounds %struct._Tree* %3, i64 0, i32 4
  %5 = load i32** %sib, align 8, !tbaa !0
  %nodwghtsIV = getelementptr inbounds %struct._ETree* %etree0, i64 0, i32 3
  %6 = load %struct._IV** %nodwghtsIV, align 8, !tbaa !0
  %call9 = call i32* @IV_entries(%struct._IV* %6) #4
  %bndwghtsIV = getelementptr inbounds %struct._ETree* %etree0, i64 0, i32 4
  %7 = load %struct._IV** %bndwghtsIV, align 8, !tbaa !0
  %call10 = call i32* @IV_entries(%struct._IV* %7) #4
  %vtxToFrontIV = getelementptr inbounds %struct._ETree* %etree0, i64 0, i32 5
  %8 = load %struct._IV** %vtxToFrontIV, align 8, !tbaa !0
  %call11 = call i32* @IV_entries(%struct._IV* %8) #4
  %nfront12 = getelementptr inbounds %struct._ETree* %etree1, i64 0, i32 0
  %9 = load i32* %nfront12, align 4, !tbaa !3
  %tree13 = getelementptr inbounds %struct._ETree* %etree1, i64 0, i32 2
  %10 = load %struct._Tree** %tree13, align 8, !tbaa !0
  %par14 = getelementptr inbounds %struct._Tree* %10, i64 0, i32 2
  %11 = load i32** %par14, align 8, !tbaa !0
  %bndwghtsIV15 = getelementptr inbounds %struct._ETree* %etree1, i64 0, i32 4
  %12 = load %struct._IV** %bndwghtsIV15, align 8, !tbaa !0
  %call16 = call i32* @IV_entries(%struct._IV* %12) #4
  %nodwghtsIV17 = getelementptr inbounds %struct._ETree* %etree1, i64 0, i32 3
  %13 = load %struct._IV** %nodwghtsIV17, align 8, !tbaa !0
  %call18 = call i32* @IV_entries(%struct._IV* %13) #4
  %vtxToFrontIV19 = getelementptr inbounds %struct._ETree* %etree1, i64 0, i32 5
  %14 = load %struct._IV** %vtxToFrontIV19, align 8, !tbaa !0
  %call20 = call i32* @IV_entries(%struct._IV* %14) #4
  %call21 = call i32* @IV_entries(%struct._IV* %mapIV) #4
  %add = add nsw i32 %9, %1
  %call22 = call %struct._ETree* @ETree_new() #4
  %15 = load i32* %nvtx6, align 4, !tbaa !3
  call void @ETree_init1(%struct._ETree* %call22, i32 %add, i32 %15) #4
  %tree24 = getelementptr inbounds %struct._ETree* %call22, i64 0, i32 2
  %16 = load %struct._Tree** %tree24, align 8, !tbaa !0
  %par25 = getelementptr inbounds %struct._Tree* %16, i64 0, i32 2
  %17 = load i32** %par25, align 8, !tbaa !0
  %nodwghtsIV26 = getelementptr inbounds %struct._ETree* %call22, i64 0, i32 3
  %18 = load %struct._IV** %nodwghtsIV26, align 8, !tbaa !0
  %call27 = call i32* @IV_entries(%struct._IV* %18) #4
  %bndwghtsIV28 = getelementptr inbounds %struct._ETree* %call22, i64 0, i32 4
  %19 = load %struct._IV** %bndwghtsIV28, align 8, !tbaa !0
  %call29 = call i32* @IV_entries(%struct._IV* %19) #4
  %vtxToFrontIV30 = getelementptr inbounds %struct._ETree* %call22, i64 0, i32 5
  %20 = load %struct._IV** %vtxToFrontIV30, align 8, !tbaa !0
  %call31 = call i32* @IV_entries(%struct._IV* %20) #4
  %cmp32280 = icmp sgt i32 %1, 0
  br i1 %cmp32280, label %for.body, label %for.cond43.preheader

for.cond43.preheader:                             ; preds = %for.body, %if.end
  %cmp44278 = icmp sgt i32 %9, 0
  br i1 %cmp44278, label %for.body45.lr.ph, label %for.cond65.preheader

for.body45.lr.ph:                                 ; preds = %for.cond43.preheader
  %21 = sext i32 %1 to i64
  br label %for.body45

for.body:                                         ; preds = %if.end, %for.body
  %indvars.iv295 = phi i64 [ %indvars.iv.next296, %for.body ], [ 0, %if.end ]
  %arrayidx = getelementptr inbounds i32* %4, i64 %indvars.iv295
  %22 = load i32* %arrayidx, align 4, !tbaa !3
  %arrayidx34 = getelementptr inbounds i32* %17, i64 %indvars.iv295
  store i32 %22, i32* %arrayidx34, align 4, !tbaa !3
  %arrayidx36 = getelementptr inbounds i32* %call9, i64 %indvars.iv295
  %23 = load i32* %arrayidx36, align 4, !tbaa !3
  %arrayidx38 = getelementptr inbounds i32* %call27, i64 %indvars.iv295
  store i32 %23, i32* %arrayidx38, align 4, !tbaa !3
  %arrayidx40 = getelementptr inbounds i32* %call10, i64 %indvars.iv295
  %24 = load i32* %arrayidx40, align 4, !tbaa !3
  %arrayidx42 = getelementptr inbounds i32* %call29, i64 %indvars.iv295
  store i32 %24, i32* %arrayidx42, align 4, !tbaa !3
  %indvars.iv.next296 = add i64 %indvars.iv295, 1
  %lftr.wideiv297 = trunc i64 %indvars.iv.next296 to i32
  %exitcond298 = icmp eq i32 %lftr.wideiv297, %1
  br i1 %exitcond298, label %for.cond43.preheader, label %for.body

for.cond65.preheader:                             ; preds = %for.body45, %for.cond43.preheader
  %cmp66276 = icmp sgt i32 %2, 0
  br i1 %cmp66276, label %for.body67, label %for.end84

for.body45:                                       ; preds = %for.body45, %for.body45.lr.ph
  %indvars.iv288 = phi i64 [ 0, %for.body45.lr.ph ], [ %indvars.iv.next289, %for.body45 ]
  %arrayidx47 = getelementptr inbounds i32* %11, i64 %indvars.iv288
  %25 = load i32* %arrayidx47, align 4, !tbaa !3
  %add48 = add nsw i32 %25, %1
  %26 = add nsw i64 %indvars.iv288, %21
  %arrayidx51 = getelementptr inbounds i32* %17, i64 %26
  store i32 %add48, i32* %arrayidx51, align 4, !tbaa !3
  %arrayidx53 = getelementptr inbounds i32* %call18, i64 %indvars.iv288
  %27 = load i32* %arrayidx53, align 4, !tbaa !3
  %arrayidx56 = getelementptr inbounds i32* %call27, i64 %26
  store i32 %27, i32* %arrayidx56, align 4, !tbaa !3
  %arrayidx58 = getelementptr inbounds i32* %call16, i64 %indvars.iv288
  %28 = load i32* %arrayidx58, align 4, !tbaa !3
  %arrayidx61 = getelementptr inbounds i32* %call29, i64 %26
  store i32 %28, i32* %arrayidx61, align 4, !tbaa !3
  %indvars.iv.next289 = add i64 %indvars.iv288, 1
  %lftr.wideiv291 = trunc i64 %indvars.iv.next289 to i32
  %exitcond292 = icmp eq i32 %lftr.wideiv291, %9
  br i1 %exitcond292, label %for.cond65.preheader, label %for.body45

for.body67:                                       ; preds = %for.cond65.preheader, %for.inc82
  %indvars.iv284 = phi i64 [ %indvars.iv.next285, %for.inc82 ], [ 0, %for.cond65.preheader ]
  %arrayidx69 = getelementptr inbounds i32* %call11, i64 %indvars.iv284
  %29 = load i32* %arrayidx69, align 4, !tbaa !3
  %cmp70 = icmp sgt i32 %29, -1
  br i1 %cmp70, label %if.then71, label %if.else

if.then71:                                        ; preds = %for.body67
  %arrayidx73 = getelementptr inbounds i32* %call31, i64 %indvars.iv284
  store i32 %29, i32* %arrayidx73, align 4, !tbaa !3
  br label %for.inc82

if.else:                                          ; preds = %for.body67
  %arrayidx75 = getelementptr inbounds i32* %call21, i64 %indvars.iv284
  %30 = load i32* %arrayidx75, align 4, !tbaa !3
  %idxprom76 = sext i32 %30 to i64
  %arrayidx77 = getelementptr inbounds i32* %call20, i64 %idxprom76
  %31 = load i32* %arrayidx77, align 4, !tbaa !3
  %add78 = add nsw i32 %31, %1
  %arrayidx80 = getelementptr inbounds i32* %call31, i64 %indvars.iv284
  store i32 %add78, i32* %arrayidx80, align 4, !tbaa !3
  br label %for.inc82

for.inc82:                                        ; preds = %if.then71, %if.else
  %indvars.iv.next285 = add i64 %indvars.iv284, 1
  %lftr.wideiv286 = trunc i64 %indvars.iv.next285 to i32
  %exitcond287 = icmp eq i32 %lftr.wideiv286, %2
  br i1 %exitcond287, label %for.end84, label %for.body67

for.end84:                                        ; preds = %for.inc82, %for.cond65.preheader
  %call85 = call i32* @IVinit(i32 %1, i32 -1) #4
  %call86 = call i32* @IVinit(i32 %2, i32 -1) #4
  br i1 %cmp66276, label %for.body89, label %for.end103

for.body89:                                       ; preds = %for.end84, %for.inc101
  %indvars.iv282 = phi i64 [ %indvars.iv.next283, %for.inc101 ], [ 0, %for.end84 ]
  %arrayidx91 = getelementptr inbounds i32* %call11, i64 %indvars.iv282
  %32 = load i32* %arrayidx91, align 4, !tbaa !3
  %cmp92 = icmp sgt i32 %32, -1
  br i1 %cmp92, label %if.then93, label %for.inc101

if.then93:                                        ; preds = %for.body89
  %idxprom94 = sext i32 %32 to i64
  %arrayidx95 = getelementptr inbounds i32* %call85, i64 %idxprom94
  %33 = load i32* %arrayidx95, align 4, !tbaa !3
  %arrayidx97 = getelementptr inbounds i32* %call86, i64 %indvars.iv282
  store i32 %33, i32* %arrayidx97, align 4, !tbaa !3
  %34 = trunc i64 %indvars.iv282 to i32
  store i32 %34, i32* %arrayidx95, align 4, !tbaa !3
  br label %for.inc101

for.inc101:                                       ; preds = %for.body89, %if.then93
  %indvars.iv.next283 = add i64 %indvars.iv282, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next283 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %2
  br i1 %exitcond, label %for.end103, label %for.body89

for.end103:                                       ; preds = %for.inc101, %for.end84
  %call104 = call i32* @IVinit(i32 %2, i32 -1) #4
  %35 = load %struct._Tree** %tree, align 8, !tbaa !0
  %root = getelementptr inbounds %struct._Tree* %35, i64 0, i32 1
  %J.2271 = load i32* %root, align 4
  %cmp107272 = icmp eq i32 %J.2271, -1
  br i1 %cmp107272, label %for.end156, label %for.body108

for.body108:                                      ; preds = %for.end103, %for.inc153
  %J.2273 = phi i32 [ %J.2, %for.inc153 ], [ %J.2271, %for.end103 ]
  %idxprom109 = sext i32 %J.2273 to i64
  %arrayidx110 = getelementptr inbounds i32* %call85, i64 %idxprom109
  %v.2266 = load i32* %arrayidx110, align 4
  %cmp112267 = icmp eq i32 %v.2266, -1
  br i1 %cmp112267, label %for.inc153, label %for.body113

for.body113:                                      ; preds = %for.body108, %for.inc143
  %v.2269 = phi i32 [ %v.2, %for.inc143 ], [ %v.2266, %for.body108 ]
  %K.0268 = phi i32 [ %K.1.lcssa, %for.inc143 ], [ %9, %for.body108 ]
  call void @Graph_adjAndSize(%struct._Graph* %graph0, i32 %v.2269, i32* %vsize, i32** %vadj) #4
  %36 = load i32* %vsize, align 4, !tbaa !3
  %cmp115263 = icmp sgt i32 %36, 0
  br i1 %cmp115263, label %for.body116.lr.ph, label %for.inc143

for.body116.lr.ph:                                ; preds = %for.body113
  %37 = load i32** %vadj, align 8, !tbaa !0
  br label %for.body116

for.body116:                                      ; preds = %for.body116.lr.ph, %for.inc140
  %38 = phi i32 [ %36, %for.body116.lr.ph ], [ %44, %for.inc140 ]
  %indvars.iv = phi i64 [ 0, %for.body116.lr.ph ], [ %indvars.iv.next, %for.inc140 ]
  %K.1264 = phi i32 [ %K.0268, %for.body116.lr.ph ], [ %K.2, %for.inc140 ]
  %arrayidx118 = getelementptr inbounds i32* %37, i64 %indvars.iv
  %39 = load i32* %arrayidx118, align 4, !tbaa !3
  %idxprom119 = sext i32 %39 to i64
  %arrayidx120 = getelementptr inbounds i32* %call11, i64 %idxprom119
  %40 = load i32* %arrayidx120, align 4, !tbaa !3
  %cmp121 = icmp slt i32 %40, 0
  br i1 %cmp121, label %if.then122, label %for.inc140

if.then122:                                       ; preds = %for.body116
  %arrayidx124 = getelementptr inbounds i32* %call21, i64 %idxprom119
  %41 = load i32* %arrayidx124, align 4, !tbaa !3
  %idxprom125 = sext i32 %41 to i64
  %arrayidx126 = getelementptr inbounds i32* %call104, i64 %idxprom125
  %42 = load i32* %arrayidx126, align 4, !tbaa !3
  %cmp127 = icmp eq i32 %42, %J.2273
  br i1 %cmp127, label %for.inc140, label %if.then128

if.then128:                                       ; preds = %if.then122
  store i32 %J.2273, i32* %arrayidx126, align 4, !tbaa !3
  %arrayidx132 = getelementptr inbounds i32* %call20, i64 %idxprom125
  %43 = load i32* %arrayidx132, align 4, !tbaa !3
  %cmp133 = icmp sgt i32 %K.1264, %43
  %.K.1 = select i1 %cmp133, i32 %43, i32 %K.1264
  %.pre = load i32* %vsize, align 4, !tbaa !3
  br label %for.inc140

for.inc140:                                       ; preds = %if.then128, %if.then122, %for.body116
  %44 = phi i32 [ %38, %if.then122 ], [ %38, %for.body116 ], [ %.pre, %if.then128 ]
  %K.2 = phi i32 [ %K.1264, %if.then122 ], [ %K.1264, %for.body116 ], [ %.K.1, %if.then128 ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %45 = trunc i64 %indvars.iv.next to i32
  %cmp115 = icmp slt i32 %45, %44
  br i1 %cmp115, label %for.body116, label %for.inc143

for.inc143:                                       ; preds = %for.inc140, %for.body113
  %K.1.lcssa = phi i32 [ %K.0268, %for.body113 ], [ %K.2, %for.inc140 ]
  %idxprom144 = sext i32 %v.2269 to i64
  %arrayidx145 = getelementptr inbounds i32* %call86, i64 %idxprom144
  %v.2 = load i32* %arrayidx145, align 4
  %cmp112 = icmp eq i32 %v.2, -1
  br i1 %cmp112, label %for.end146, label %for.body113

for.end146:                                       ; preds = %for.inc143
  %cmp147 = icmp slt i32 %K.1.lcssa, %9
  br i1 %cmp147, label %if.then148, label %for.inc153

if.then148:                                       ; preds = %for.end146
  %add149 = add nsw i32 %K.1.lcssa, %1
  %arrayidx151 = getelementptr inbounds i32* %17, i64 %idxprom109
  store i32 %add149, i32* %arrayidx151, align 4, !tbaa !3
  br label %for.inc153

for.inc153:                                       ; preds = %for.body108, %for.end146, %if.then148
  %arrayidx155 = getelementptr inbounds i32* %5, i64 %idxprom109
  %J.2 = load i32* %arrayidx155, align 4
  %cmp107 = icmp eq i32 %J.2, -1
  br i1 %cmp107, label %for.end156, label %for.body108

for.end156:                                       ; preds = %for.inc153, %for.end103
  %46 = load %struct._Tree** %tree24, align 8, !tbaa !0
  call void @Tree_setFchSibRoot(%struct._Tree* %46) #4
  call void @IVfree(i32* %call85) #4
  call void @IVfree(i32* %call86) #4
  call void @IVfree(i32* %call104) #4
  ret %struct._ETree* %call22
}
