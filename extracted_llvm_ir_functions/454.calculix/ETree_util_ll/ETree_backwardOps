define %struct._DV* @ETree_backwardOps(%struct._ETree* %etree, i32 %type, i32 %symflag, i32* %vwghts, %struct._IVL* %symbfacIVL) #0 {
  %size = alloca i32, align 4
  %indices = alloca i32*, align 8
  tail call void @llvm.dbg.value(metadata %struct._ETree* %etree, i64 0, metadata !141, metadata !258), !dbg !533
  tail call void @llvm.dbg.value(metadata i32 %type, i64 0, metadata !142, metadata !258), !dbg !534
  tail call void @llvm.dbg.value(metadata i32 %symflag, i64 0, metadata !143, metadata !258), !dbg !535
  tail call void @llvm.dbg.value(metadata i32* %vwghts, i64 0, metadata !144, metadata !258), !dbg !536
  tail call void @llvm.dbg.value(metadata %struct._IVL* %symbfacIVL, i64 0, metadata !145, metadata !258), !dbg !537
  %1 = icmp eq %struct._ETree* %etree, null, !dbg !538
  %2 = icmp eq %struct._IVL* %symbfacIVL, null, !dbg !540
  %or.cond = or i1 %1, %2, !dbg !541
  br i1 %or.cond, label %3, label %6, !dbg !541

; <label>:3                                       ; preds = %0
  %4 = load %struct.__sFILE** @__stderrp, align 8, !dbg !542, !tbaa !265
  %5 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %4, i8* getelementptr inbounds ([57 x i8]* @.str10, i64 0, i64 0), %struct._ETree* %etree, i32* %vwghts, %struct._IVL* %symbfacIVL) #5, !dbg !544
  tail call void @exit(i32 -1) #6, !dbg !545
  unreachable, !dbg !545

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 0, !dbg !546
  %8 = load i32* %7, align 4, !dbg !546, !tbaa !316
  tail call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !158, metadata !258), !dbg !547
  %9 = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 5, !dbg !548
  %10 = load %struct._IV** %9, align 8, !dbg !548, !tbaa !303
  %11 = tail call i32* @IV_entries(%struct._IV* %10) #5, !dbg !549
  tail call void @llvm.dbg.value(metadata i32* %11, i64 0, metadata !166, metadata !258), !dbg !550
  %12 = tail call i32* @IVinit(i32 %8, i32 -1) #5, !dbg !551
  tail call void @llvm.dbg.value(metadata i32* %12, i64 0, metadata !164, metadata !258), !dbg !552
  %13 = tail call i32* @IVinit(i32 %8, i32 -1) #5, !dbg !553
  tail call void @llvm.dbg.value(metadata i32* %13, i64 0, metadata !165, metadata !258), !dbg !554
  %14 = tail call i32* @IVinit(i32 %8, i32 0) #5, !dbg !555
  tail call void @llvm.dbg.value(metadata i32* %14, i64 0, metadata !162, metadata !258), !dbg !556
  %15 = tail call %struct._DV* @DV_new() #5, !dbg !557
  tail call void @llvm.dbg.value(metadata %struct._DV* %15, i64 0, metadata !150, metadata !258), !dbg !558
  tail call void @DV_init(%struct._DV* %15, i32 %8, double* null) #5, !dbg !559
  %16 = tail call double* @DV_entries(%struct._DV* %15) #5, !dbg !560
  tail call void @llvm.dbg.value(metadata double* %16, i64 0, metadata !149, metadata !258), !dbg !561
  tail call void @DV_fill(%struct._DV* %15, double 0.000000e+00) #5, !dbg !562
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !153, metadata !258), !dbg !563
  %17 = icmp sgt i32 %8, 0, !dbg !564
  br i1 %17, label %.lr.ph29, label %._crit_edge30, !dbg !567

.lr.ph29:                                         ; preds = %6
  %18 = icmp eq i32 %symflag, 2, !dbg !568
  %19 = icmp ult i32 %symflag, 2, !dbg !574
  %20 = icmp eq i32* %vwghts, null, !dbg !579
  %21 = add i32 %8, -1, !dbg !567
  br label %22, !dbg !567

; <label>:22                                      ; preds = %._crit_edge22, %.lr.ph29
  %indvars.iv33 = phi i64 [ 0, %.lr.ph29 ], [ %indvars.iv.next34, %._crit_edge22 ]
  %opsKbndK.027 = phi double [ undef, %.lr.ph29 ], [ %opsKbndK.1.lcssa, %._crit_edge22 ]
  %opsKK.026 = phi double [ undef, %.lr.ph29 ], [ %opsKK.1.lcssa, %._crit_edge22 ]
  %23 = trunc i64 %indvars.iv33 to i32, !dbg !585
  %24 = call double @ETree_nInternalOpsInFront(%struct._ETree* %etree, i32 %type, i32 %symflag, i32 %23) #7, !dbg !585
  %25 = getelementptr inbounds double* %16, i64 %indvars.iv33, !dbg !586
  %26 = load double* %25, align 8, !dbg !587, !tbaa !588
  %27 = fadd double %24, %26, !dbg !587
  store double %27, double* %25, align 8, !dbg !587, !tbaa !588
  %28 = call i32 @ETree_frontSize(%struct._ETree* %etree, i32 %23) #5, !dbg !590
  call void @llvm.dbg.value(metadata i32 %28, i64 0, metadata !160, metadata !258), !dbg !591
  %29 = call i32 @ETree_frontBoundarySize(%struct._ETree* %etree, i32 %23) #5, !dbg !592
  call void @llvm.dbg.value(metadata i32 %29, i64 0, metadata !151, metadata !258), !dbg !593
  call void @llvm.dbg.value(metadata i32* %size, i64 0, metadata !159, metadata !258), !dbg !594
  call void @llvm.dbg.value(metadata i32** %indices, i64 0, metadata !163, metadata !258), !dbg !595
  call void @IVL_listAndSize(%struct._IVL* %symbfacIVL, i32 %23, i32* %size, i32** %indices) #5, !dbg !596
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !157, metadata !258), !dbg !597
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !152, metadata !258), !dbg !598
  call void @llvm.dbg.value(metadata i32* %size, i64 0, metadata !159, metadata !258), !dbg !594
  %30 = load i32* %size, align 4, !dbg !599, !tbaa !342
  %31 = icmp sgt i32 %30, 0, !dbg !600
  br i1 %31, label %.lr.ph, label %._crit_edge.thread, !dbg !601

._crit_edge.thread:                               ; preds = %22
  call void @IVqsortUp(i32 0, i32* %12) #5, !dbg !602
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !146, metadata !258), !dbg !603
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !152, metadata !258), !dbg !598
  br label %._crit_edge22, !dbg !604

.lr.ph:                                           ; preds = %22
  %32 = load i32** %indices, align 8, !dbg !605, !tbaa !265
  br label %33, !dbg !601

; <label>:33                                      ; preds = %.lr.ph, %57
  %34 = phi i32 [ %30, %.lr.ph ], [ %58, %57 ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %57 ]
  %nadj.013 = phi i32 [ 0, %.lr.ph ], [ %nadj.2, %57 ]
  call void @llvm.dbg.value(metadata i32** %indices, i64 0, metadata !163, metadata !258), !dbg !595
  %35 = getelementptr inbounds i32* %32, i64 %indvars.iv, !dbg !605
  %36 = load i32* %35, align 4, !dbg !605, !tbaa !342
  call void @llvm.dbg.value(metadata i32 %36, i64 0, metadata !154, metadata !258), !dbg !606
  %37 = sext i32 %36 to i64, !dbg !607
  %38 = getelementptr inbounds i32* %11, i64 %37, !dbg !607
  %39 = load i32* %38, align 4, !dbg !607, !tbaa !342
  call void @llvm.dbg.value(metadata i32 %39, i64 0, metadata !155, metadata !258), !dbg !608
  %40 = icmp eq i32 %39, %23, !dbg !609
  br i1 %40, label %57, label %41, !dbg !610

; <label>:41                                      ; preds = %33
  br i1 %20, label %45, label %42, !dbg !611

; <label>:42                                      ; preds = %41
  %43 = getelementptr inbounds i32* %vwghts, i64 %37, !dbg !612
  %44 = load i32* %43, align 4, !dbg !612, !tbaa !342
  br label %45, !dbg !611

; <label>:45                                      ; preds = %41, %42
  %46 = phi i32 [ %44, %42 ], [ 1, %41 ], !dbg !611
  call void @llvm.dbg.value(metadata i32 %46, i64 0, metadata !156, metadata !258), !dbg !613
  %47 = sext i32 %39 to i64, !dbg !614
  %48 = getelementptr inbounds i32* %13, i64 %47, !dbg !614
  %49 = load i32* %48, align 4, !dbg !614, !tbaa !342
  %50 = icmp eq i32 %49, %23, !dbg !616
  %.pre38 = getelementptr inbounds i32* %14, i64 %47, !dbg !617
  br i1 %50, label %._crit_edge37, label %51, !dbg !618

; <label>:51                                      ; preds = %45
  store i32 0, i32* %.pre38, align 4, !dbg !619, !tbaa !342
  store i32 %23, i32* %48, align 4, !dbg !621, !tbaa !342
  %52 = add nsw i32 %nadj.013, 1, !dbg !622
  call void @llvm.dbg.value(metadata i32 %52, i64 0, metadata !157, metadata !258), !dbg !597
  %53 = sext i32 %nadj.013 to i64, !dbg !623
  %54 = getelementptr inbounds i32* %12, i64 %53, !dbg !623
  store i32 %39, i32* %54, align 4, !dbg !624, !tbaa !342
  br label %._crit_edge37, !dbg !625

._crit_edge37:                                    ; preds = %45, %51
  %nadj.1 = phi i32 [ %52, %51 ], [ %nadj.013, %45 ]
  %55 = load i32* %.pre38, align 4, !dbg !626, !tbaa !342
  %56 = add nsw i32 %55, %46, !dbg !626
  store i32 %56, i32* %.pre38, align 4, !dbg !626, !tbaa !342
  %.pre = load i32* %size, align 4, !dbg !599, !tbaa !342
  br label %57, !dbg !627

; <label>:57                                      ; preds = %33, %._crit_edge37
  %58 = phi i32 [ %.pre, %._crit_edge37 ], [ %34, %33 ], !dbg !601
  %nadj.2 = phi i32 [ %nadj.1, %._crit_edge37 ], [ %nadj.013, %33 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !601
  call void @llvm.dbg.value(metadata i32* %size, i64 0, metadata !159, metadata !258), !dbg !594
  %59 = sext i32 %58 to i64, !dbg !600
  %60 = icmp slt i64 %indvars.iv.next, %59, !dbg !600
  br i1 %60, label %33, label %._crit_edge, !dbg !601

._crit_edge:                                      ; preds = %57
  call void @IVqsortUp(i32 %nadj.2, i32* %12) #5, !dbg !602
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !146, metadata !258), !dbg !603
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !152, metadata !258), !dbg !598
  %61 = icmp sgt i32 %nadj.2, 0, !dbg !628
  br i1 %61, label %.lr.ph21, label %._crit_edge22, !dbg !604

.lr.ph21:                                         ; preds = %._crit_edge
  %62 = shl nsw i32 %28, 1, !dbg !629
  %63 = shl nsw i32 %28, 3, !dbg !631
  %64 = shl i32 %28, 2, !dbg !632
  %65 = add i32 %nadj.2, -1, !dbg !604
  br label %66, !dbg !604

; <label>:66                                      ; preds = %111, %.lr.ph21
  %indvars.iv31 = phi i64 [ 0, %.lr.ph21 ], [ %indvars.iv.next32, %111 ]
  %opsKbndK.118 = phi double [ %opsKbndK.027, %.lr.ph21 ], [ %opsKbndK.25, %111 ]
  %opsKK.117 = phi double [ %opsKK.026, %.lr.ph21 ], [ %opsKK.24, %111 ]
  %bndwghtJ.016 = phi i32 [ %29, %.lr.ph21 ], [ %72, %111 ]
  %67 = getelementptr inbounds i32* %12, i64 %indvars.iv31, !dbg !634
  %68 = load i32* %67, align 4, !dbg !634, !tbaa !342
  call void @llvm.dbg.value(metadata i32 %68, i64 0, metadata !155, metadata !258), !dbg !608
  %69 = sext i32 %68 to i64, !dbg !635
  %70 = getelementptr inbounds i32* %14, i64 %69, !dbg !635
  %71 = load i32* %70, align 4, !dbg !635, !tbaa !342
  call void @llvm.dbg.value(metadata i32 %71, i64 0, metadata !161, metadata !258), !dbg !636
  %72 = sub nsw i32 %bndwghtJ.016, %71, !dbg !637
  call void @llvm.dbg.value(metadata i32 %72, i64 0, metadata !151, metadata !258), !dbg !593
  switch i32 %type, label %102 [
    i32 1, label %73
    i32 2, label %82
  ], !dbg !638

; <label>:73                                      ; preds = %66
  %74 = mul nsw i32 %71, %62, !dbg !639
  %75 = mul nsw i32 %74, %72, !dbg !640
  %76 = sitofp i32 %75 to double, !dbg !641
  call void @llvm.dbg.value(metadata double %76, i64 0, metadata !147, metadata !258), !dbg !642
  switch i32 %symflag, label %.thread [
    i32 0, label %77
    i32 2, label %.thread9
  ], !dbg !643

; <label>:77                                      ; preds = %73
  %78 = mul nsw i32 %71, %28, !dbg !644
  %79 = add nsw i32 %71, 1, !dbg !647
  %80 = mul nsw i32 %78, %79, !dbg !648
  %81 = sitofp i32 %80 to double, !dbg !649
  call void @llvm.dbg.value(metadata double %81, i64 0, metadata !148, metadata !258), !dbg !650
  br label %.thread, !dbg !651

; <label>:82                                      ; preds = %66
  %83 = mul nsw i32 %71, %63, !dbg !652
  %84 = mul nsw i32 %83, %72, !dbg !653
  %85 = sitofp i32 %84 to double, !dbg !654
  call void @llvm.dbg.value(metadata double %85, i64 0, metadata !147, metadata !258), !dbg !642
  br i1 %19, label %86, label %91, !dbg !574

; <label>:86                                      ; preds = %82
  %87 = mul nsw i32 %64, %71, !dbg !655
  %88 = add nsw i32 %71, 1, !dbg !656
  %89 = mul nsw i32 %87, %88, !dbg !657
  %90 = sitofp i32 %89 to double, !dbg !658
  call void @llvm.dbg.value(metadata double %90, i64 0, metadata !148, metadata !258), !dbg !650
  br label %.thread, !dbg !659

; <label>:91                                      ; preds = %82
  br i1 %18, label %.thread9, label %.thread, !dbg !660

.thread:                                          ; preds = %73, %91, %86, %77
  %opsKK.2.ph = phi double [ %opsKK.117, %73 ], [ %opsKK.117, %91 ], [ %90, %86 ], [ %81, %77 ]
  %opsKbndK.2.ph = phi double [ %76, %73 ], [ %85, %91 ], [ %85, %86 ], [ %76, %77 ]
  %92 = fadd double %opsKK.2.ph, %opsKbndK.2.ph, !dbg !661
  %93 = getelementptr inbounds double* %16, i64 %69, !dbg !662
  %94 = load double* %93, align 8, !dbg !663, !tbaa !588
  %95 = fadd double %94, %92, !dbg !663
  br label %111, !dbg !664

.thread9:                                         ; preds = %73, %91
  %.sink12 = phi i32 [ %83, %91 ], [ %74, %73 ]
  %opsKbndK.2.ph8 = phi double [ %85, %91 ], [ %76, %73 ]
  %96 = mul nsw i32 %.sink12, %71, !dbg !665
  %97 = sitofp i32 %96 to double, !dbg !668
  %98 = fadd double %opsKbndK.2.ph8, %97, !dbg !661
  %99 = getelementptr inbounds double* %16, i64 %69, !dbg !662
  %100 = load double* %99, align 8, !dbg !663, !tbaa !588
  %101 = fadd double %100, %98, !dbg !663
  br label %107, !dbg !664

; <label>:102                                     ; preds = %66
  %103 = fadd double %opsKK.117, %opsKbndK.118, !dbg !661
  %104 = getelementptr inbounds double* %16, i64 %69, !dbg !662
  %105 = load double* %104, align 8, !dbg !663, !tbaa !588
  %106 = fadd double %103, %105, !dbg !663
  br i1 %18, label %107, label %111, !dbg !664

; <label>:107                                     ; preds = %.thread9, %102
  %108 = phi double [ %101, %.thread9 ], [ %106, %102 ]
  %109 = phi double* [ %99, %.thread9 ], [ %104, %102 ]
  %opsKbndK.211 = phi double [ %opsKbndK.2.ph8, %.thread9 ], [ %opsKbndK.118, %102 ]
  %opsKK.210 = phi double [ %97, %.thread9 ], [ %opsKK.117, %102 ]
  %110 = fadd double %108, %opsKbndK.211, !dbg !669
  br label %111, !dbg !671

; <label>:111                                     ; preds = %.thread, %102, %107
  %112 = phi double* [ %109, %107 ], [ %104, %102 ], [ %93, %.thread ]
  %opsKbndK.25 = phi double [ %opsKbndK.211, %107 ], [ %opsKbndK.118, %102 ], [ %opsKbndK.2.ph, %.thread ]
  %opsKK.24 = phi double [ %opsKK.210, %107 ], [ %opsKK.117, %102 ], [ %opsKK.2.ph, %.thread ]
  %storemerge = phi double [ %110, %107 ], [ %106, %102 ], [ %95, %.thread ]
  store double %storemerge, double* %112, align 8, !dbg !663, !tbaa !588
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1, !dbg !604
  %lftr.wideiv = trunc i64 %indvars.iv31 to i32, !dbg !604
  %exitcond = icmp eq i32 %lftr.wideiv, %65, !dbg !604
  br i1 %exitcond, label %._crit_edge22, label %66, !dbg !604

._crit_edge22:                                    ; preds = %111, %._crit_edge.thread, %._crit_edge
  %opsKbndK.1.lcssa = phi double [ %opsKbndK.027, %._crit_edge ], [ %opsKbndK.027, %._crit_edge.thread ], [ %opsKbndK.25, %111 ]
  %opsKK.1.lcssa = phi double [ %opsKK.026, %._crit_edge ], [ %opsKK.026, %._crit_edge.thread ], [ %opsKK.24, %111 ]
  %indvars.iv.next34 = add nuw nsw i64 %indvars.iv33, 1, !dbg !567
  %exitcond36 = icmp eq i32 %23, %21, !dbg !567
  br i1 %exitcond36, label %._crit_edge30, label %22, !dbg !567

._crit_edge30:                                    ; preds = %._crit_edge22, %6
  call void @IVfree(i32* %12) #5, !dbg !672
  call void @IVfree(i32* %13) #5, !dbg !673
  call void @IVfree(i32* %14) #5, !dbg !674
  ret %struct._DV* %15, !dbg !675
}
