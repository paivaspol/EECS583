define internal fastcc void @inputMatrix(%struct._InpMtx* %inpmtx, i32 %nrow, i32 %ncol, i32 %rowstride, i32 %colstride, i32* nocapture readonly %rowind, i32* nocapture readonly %colind, double* nocapture readonly %mtxent) #0 {
  tail call void @llvm.dbg.value(metadata %struct._InpMtx* %inpmtx, i64 0, metadata !276, metadata !320), !dbg !941
  tail call void @llvm.dbg.value(metadata i32 %nrow, i64 0, metadata !277, metadata !320), !dbg !942
  tail call void @llvm.dbg.value(metadata i32 %ncol, i64 0, metadata !278, metadata !320), !dbg !943
  tail call void @llvm.dbg.value(metadata i32 %rowstride, i64 0, metadata !279, metadata !320), !dbg !944
  tail call void @llvm.dbg.value(metadata i32 %colstride, i64 0, metadata !280, metadata !320), !dbg !945
  tail call void @llvm.dbg.value(metadata i32* %rowind, i64 0, metadata !281, metadata !320), !dbg !946
  tail call void @llvm.dbg.value(metadata i32* %colind, i64 0, metadata !282, metadata !320), !dbg !947
  tail call void @llvm.dbg.value(metadata double* %mtxent, i64 0, metadata !283, metadata !320), !dbg !948
  %1 = mul nsw i32 %ncol, %nrow, !dbg !949
  tail call fastcc void @prepareToAddNewEntries(%struct._InpMtx* %inpmtx, i32 %1) #7, !dbg !950
  %2 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 4, !dbg !951
  %3 = load i32* %2, align 4, !dbg !951, !tbaa !365
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !288, metadata !320), !dbg !952
  %4 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 6, !dbg !953
  %5 = tail call i32* @IV_entries(%struct._IV* %4) #5, !dbg !954
  tail call void @llvm.dbg.value(metadata i32* %5, i64 0, metadata !290, metadata !320), !dbg !955
  %6 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 7, !dbg !956
  %7 = tail call i32* @IV_entries(%struct._IV* %6) #5, !dbg !957
  tail call void @llvm.dbg.value(metadata i32* %7, i64 0, metadata !291, metadata !320), !dbg !958
  %8 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 0, !dbg !959
  %9 = load i32* %8, align 4, !dbg !959, !tbaa !337
  switch i32 %9, label %.loopexit [
    i32 1, label %.preheader4
    i32 2, label %.preheader5
    i32 3, label %.preheader7
  ], !dbg !961

.preheader7:                                      ; preds = %0
  %10 = icmp sgt i32 %ncol, 0, !dbg !962
  br i1 %10, label %.lr.ph48, label %.loopexit, !dbg !968

.lr.ph48:                                         ; preds = %.preheader7
  %11 = icmp sgt i32 %nrow, 0, !dbg !969
  %12 = add i32 %nrow, -1, !dbg !968
  %13 = add i32 %ncol, -1, !dbg !968
  br label %44, !dbg !968

.preheader5:                                      ; preds = %0
  %14 = icmp sgt i32 %ncol, 0, !dbg !973
  br i1 %14, label %.lr.ph39, label %.loopexit, !dbg !977

.lr.ph39:                                         ; preds = %.preheader5
  %15 = icmp sgt i32 %nrow, 0, !dbg !978
  %16 = add i32 %nrow, -1, !dbg !977
  %17 = add i32 %ncol, -1, !dbg !977
  br label %33, !dbg !977

.preheader4:                                      ; preds = %0
  %18 = icmp sgt i32 %ncol, 0, !dbg !982
  br i1 %18, label %.lr.ph30, label %.loopexit, !dbg !986

.lr.ph30:                                         ; preds = %.preheader4
  %19 = icmp sgt i32 %nrow, 0, !dbg !987
  %20 = add i32 %nrow, -1, !dbg !986
  %21 = add i32 %ncol, -1, !dbg !986
  br label %22, !dbg !986

; <label>:22                                      ; preds = %32, %.lr.ph30
  %indvars.iv76 = phi i64 [ 0, %.lr.ph30 ], [ %indvars.iv.next77, %32 ]
  %kk.028 = phi i32 [ %3, %.lr.ph30 ], [ %kk.1.lcssa, %32 ]
  %23 = getelementptr inbounds i32* %colind, i64 %indvars.iv76, !dbg !991
  %24 = load i32* %23, align 4, !dbg !991, !tbaa !379
  tail call void @llvm.dbg.value(metadata i32 %24, i64 0, metadata !284, metadata !320), !dbg !992
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !285, metadata !320), !dbg !993
  br i1 %19, label %.lr.ph25, label %32, !dbg !994

.lr.ph25:                                         ; preds = %22
  %25 = sext i32 %kk.028 to i64
  br label %26, !dbg !994

; <label>:26                                      ; preds = %26, %.lr.ph25
  %indvars.iv71 = phi i64 [ %25, %.lr.ph25 ], [ %indvars.iv.next72, %26 ]
  %indvars.iv69 = phi i64 [ 0, %.lr.ph25 ], [ %indvars.iv.next70, %26 ]
  %27 = getelementptr inbounds i32* %rowind, i64 %indvars.iv69, !dbg !995
  %28 = load i32* %27, align 4, !dbg !995, !tbaa !379
  tail call void @llvm.dbg.value(metadata i32 %28, i64 0, metadata !289, metadata !320), !dbg !997
  %29 = getelementptr inbounds i32* %5, i64 %indvars.iv71, !dbg !998
  store i32 %28, i32* %29, align 4, !dbg !999, !tbaa !379
  %30 = getelementptr inbounds i32* %7, i64 %indvars.iv71, !dbg !1000
  store i32 %24, i32* %30, align 4, !dbg !1001, !tbaa !379
  %indvars.iv.next70 = add nuw nsw i64 %indvars.iv69, 1, !dbg !994
  %indvars.iv.next72 = add nsw i64 %indvars.iv71, 1, !dbg !994
  %lftr.wideiv73 = trunc i64 %indvars.iv69 to i32, !dbg !994
  %exitcond74 = icmp eq i32 %lftr.wideiv73, %20, !dbg !994
  br i1 %exitcond74, label %._crit_edge26, label %26, !dbg !994

._crit_edge26:                                    ; preds = %26
  %31 = add i32 %kk.028, %nrow, !dbg !994
  br label %32, !dbg !994

; <label>:32                                      ; preds = %._crit_edge26, %22
  %kk.1.lcssa = phi i32 [ %31, %._crit_edge26 ], [ %kk.028, %22 ]
  %indvars.iv.next77 = add nuw nsw i64 %indvars.iv76, 1, !dbg !986
  %lftr.wideiv78 = trunc i64 %indvars.iv76 to i32, !dbg !986
  %exitcond79 = icmp eq i32 %lftr.wideiv78, %21, !dbg !986
  br i1 %exitcond79, label %.loopexit, label %22, !dbg !986

; <label>:33                                      ; preds = %43, %.lr.ph39
  %indvars.iv87 = phi i64 [ 0, %.lr.ph39 ], [ %indvars.iv.next88, %43 ]
  %kk.237 = phi i32 [ %3, %.lr.ph39 ], [ %kk.3.lcssa, %43 ]
  %34 = getelementptr inbounds i32* %colind, i64 %indvars.iv87, !dbg !1002
  %35 = load i32* %34, align 4, !dbg !1002, !tbaa !379
  tail call void @llvm.dbg.value(metadata i32 %35, i64 0, metadata !284, metadata !320), !dbg !992
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !285, metadata !320), !dbg !993
  br i1 %15, label %.lr.ph34, label %43, !dbg !1003

.lr.ph34:                                         ; preds = %33
  %36 = sext i32 %kk.237 to i64
  br label %37, !dbg !1003

; <label>:37                                      ; preds = %37, %.lr.ph34
  %indvars.iv82 = phi i64 [ %36, %.lr.ph34 ], [ %indvars.iv.next83, %37 ]
  %indvars.iv80 = phi i64 [ 0, %.lr.ph34 ], [ %indvars.iv.next81, %37 ]
  %38 = getelementptr inbounds i32* %rowind, i64 %indvars.iv80, !dbg !1004
  %39 = load i32* %38, align 4, !dbg !1004, !tbaa !379
  tail call void @llvm.dbg.value(metadata i32 %39, i64 0, metadata !289, metadata !320), !dbg !997
  %40 = getelementptr inbounds i32* %5, i64 %indvars.iv82, !dbg !1006
  store i32 %35, i32* %40, align 4, !dbg !1007, !tbaa !379
  %41 = getelementptr inbounds i32* %7, i64 %indvars.iv82, !dbg !1008
  store i32 %39, i32* %41, align 4, !dbg !1009, !tbaa !379
  %indvars.iv.next81 = add nuw nsw i64 %indvars.iv80, 1, !dbg !1003
  %indvars.iv.next83 = add nsw i64 %indvars.iv82, 1, !dbg !1003
  %lftr.wideiv84 = trunc i64 %indvars.iv80 to i32, !dbg !1003
  %exitcond85 = icmp eq i32 %lftr.wideiv84, %16, !dbg !1003
  br i1 %exitcond85, label %._crit_edge35, label %37, !dbg !1003

._crit_edge35:                                    ; preds = %37
  %42 = add i32 %kk.237, %nrow, !dbg !1003
  br label %43, !dbg !1003

; <label>:43                                      ; preds = %._crit_edge35, %33
  %kk.3.lcssa = phi i32 [ %42, %._crit_edge35 ], [ %kk.237, %33 ]
  %indvars.iv.next88 = add nuw nsw i64 %indvars.iv87, 1, !dbg !977
  %lftr.wideiv89 = trunc i64 %indvars.iv87 to i32, !dbg !977
  %exitcond90 = icmp eq i32 %lftr.wideiv89, %17, !dbg !977
  br i1 %exitcond90, label %.loopexit, label %33, !dbg !977

; <label>:44                                      ; preds = %56, %.lr.ph48
  %indvars.iv97 = phi i64 [ 0, %.lr.ph48 ], [ %indvars.iv.next98, %56 ]
  %kk.446 = phi i32 [ %3, %.lr.ph48 ], [ %kk.5.lcssa, %56 ]
  %45 = getelementptr inbounds i32* %colind, i64 %indvars.iv97, !dbg !1010
  %46 = load i32* %45, align 4, !dbg !1010, !tbaa !379
  tail call void @llvm.dbg.value(metadata i32 %46, i64 0, metadata !284, metadata !320), !dbg !992
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !285, metadata !320), !dbg !993
  br i1 %11, label %.lr.ph43, label %56, !dbg !1011

.lr.ph43:                                         ; preds = %44
  %47 = sext i32 %kk.446 to i64
  br label %48, !dbg !1011

; <label>:48                                      ; preds = %48, %.lr.ph43
  %indvars.iv93 = phi i64 [ %47, %.lr.ph43 ], [ %indvars.iv.next94, %48 ]
  %indvars.iv91 = phi i64 [ 0, %.lr.ph43 ], [ %indvars.iv.next92, %48 ]
  %49 = getelementptr inbounds i32* %rowind, i64 %indvars.iv91, !dbg !1012
  %50 = load i32* %49, align 4, !dbg !1012, !tbaa !379
  tail call void @llvm.dbg.value(metadata i32 %50, i64 0, metadata !289, metadata !320), !dbg !997
  %51 = icmp slt i32 %46, %50, !dbg !1014
  %52 = getelementptr inbounds i32* %5, i64 %indvars.iv93, !dbg !1016
  %. = select i1 %51, i32 %46, i32 %50
  store i32 %., i32* %52, align 4, !dbg !1018, !tbaa !379
  %53 = sub nsw i32 %46, %50, !dbg !1019
  %54 = getelementptr inbounds i32* %7, i64 %indvars.iv93, !dbg !1020
  store i32 %53, i32* %54, align 4, !dbg !1021, !tbaa !379
  %indvars.iv.next92 = add nuw nsw i64 %indvars.iv91, 1, !dbg !1011
  %indvars.iv.next94 = add nsw i64 %indvars.iv93, 1, !dbg !1011
  %lftr.wideiv95 = trunc i64 %indvars.iv91 to i32, !dbg !1011
  %exitcond96 = icmp eq i32 %lftr.wideiv95, %12, !dbg !1011
  br i1 %exitcond96, label %._crit_edge44, label %48, !dbg !1011

._crit_edge44:                                    ; preds = %48
  %55 = add i32 %kk.446, %nrow, !dbg !1011
  br label %56, !dbg !1011

; <label>:56                                      ; preds = %._crit_edge44, %44
  %kk.5.lcssa = phi i32 [ %55, %._crit_edge44 ], [ %kk.446, %44 ]
  %indvars.iv.next98 = add nuw nsw i64 %indvars.iv97, 1, !dbg !968
  %lftr.wideiv99 = trunc i64 %indvars.iv97 to i32, !dbg !968
  %exitcond100 = icmp eq i32 %lftr.wideiv99, %13, !dbg !968
  br i1 %exitcond100, label %.loopexit, label %44, !dbg !968

.loopexit:                                        ; preds = %56, %43, %32, %.preheader7, %.preheader5, %.preheader4, %0
  %57 = add nsw i32 %3, %1, !dbg !1022
  tail call void @IV_setSize(%struct._IV* %4, i32 %57) #5, !dbg !1023
  tail call void @IV_setSize(%struct._IV* %6, i32 %57) #5, !dbg !1024
  %58 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 2, !dbg !1025
  %59 = load i32* %58, align 4, !dbg !1025, !tbaa !350
  %60 = icmp eq i32 %59, 1, !dbg !1025
  br i1 %60, label %61, label %82, !dbg !1026

; <label>:61                                      ; preds = %.loopexit
  %62 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 8, !dbg !1027
  %63 = tail call double* @DV_entries(%struct._DV* %62) #5, !dbg !1028
  tail call void @llvm.dbg.value(metadata double* %63, i64 0, metadata !292, metadata !320), !dbg !1029
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !286, metadata !320), !dbg !1030
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !287, metadata !320), !dbg !1031
  %64 = icmp sgt i32 %ncol, 0, !dbg !1032
  br i1 %64, label %.preheader3.lr.ph, label %._crit_edge21, !dbg !1035

.preheader3.lr.ph:                                ; preds = %61
  %65 = icmp sgt i32 %nrow, 0, !dbg !1036
  %66 = sext i32 %rowstride to i64, !dbg !1035
  %67 = add i32 %nrow, -1, !dbg !1035
  %68 = sext i32 %colstride to i64, !dbg !1035
  %69 = add i32 %ncol, -1, !dbg !1035
  br label %.preheader3, !dbg !1035

.preheader3:                                      ; preds = %81, %.preheader3.lr.ph
  %indvars.iv65 = phi i64 [ 0, %.preheader3.lr.ph ], [ %indvars.iv.next66, %81 ]
  %kk.619 = phi i32 [ %3, %.preheader3.lr.ph ], [ %kk.7.lcssa, %81 ]
  br i1 %65, label %.lr.ph16, label %81, !dbg !1040

.lr.ph16:                                         ; preds = %.preheader3
  %70 = mul nsw i64 %indvars.iv65, %68, !dbg !1041
  %71 = sext i32 %kk.619 to i64
  br label %72, !dbg !1040

; <label>:72                                      ; preds = %72, %.lr.ph16
  %indvars.iv61 = phi i64 [ %71, %.lr.ph16 ], [ %indvars.iv.next62, %72 ]
  %indvars.iv59 = phi i64 [ 0, %.lr.ph16 ], [ %indvars.iv.next60, %72 ]
  %73 = mul nsw i64 %indvars.iv59, %66, !dbg !1043
  %74 = add nsw i64 %73, %70, !dbg !1044
  %75 = getelementptr inbounds double* %mtxent, i64 %74, !dbg !1045
  %76 = bitcast double* %75 to i64*, !dbg !1045
  %77 = load i64* %76, align 8, !dbg !1045, !tbaa !417
  %78 = getelementptr inbounds double* %63, i64 %indvars.iv61, !dbg !1046
  %79 = bitcast double* %78 to i64*, !dbg !1047
  store i64 %77, i64* %79, align 8, !dbg !1047, !tbaa !417
  %indvars.iv.next60 = add nuw nsw i64 %indvars.iv59, 1, !dbg !1040
  %indvars.iv.next62 = add nsw i64 %indvars.iv61, 1, !dbg !1040
  %lftr.wideiv63 = trunc i64 %indvars.iv59 to i32, !dbg !1040
  %exitcond64 = icmp eq i32 %lftr.wideiv63, %67, !dbg !1040
  br i1 %exitcond64, label %._crit_edge17, label %72, !dbg !1040

._crit_edge17:                                    ; preds = %72
  %80 = add i32 %kk.619, %nrow, !dbg !1040
  br label %81, !dbg !1040

; <label>:81                                      ; preds = %._crit_edge17, %.preheader3
  %kk.7.lcssa = phi i32 [ %80, %._crit_edge17 ], [ %kk.619, %.preheader3 ]
  %indvars.iv.next66 = add nuw nsw i64 %indvars.iv65, 1, !dbg !1035
  %lftr.wideiv67 = trunc i64 %indvars.iv65 to i32, !dbg !1035
  %exitcond68 = icmp eq i32 %lftr.wideiv67, %69, !dbg !1035
  br i1 %exitcond68, label %._crit_edge21, label %.preheader3, !dbg !1035

._crit_edge21:                                    ; preds = %81, %61
  tail call void @DV_setSize(%struct._DV* %62, i32 %57) #5, !dbg !1048
  %.pr = load i32* %58, align 4, !dbg !1049, !tbaa !350
  br label %82, !dbg !1050

; <label>:82                                      ; preds = %._crit_edge21, %.loopexit
  %83 = phi i32 [ %.pr, %._crit_edge21 ], [ %59, %.loopexit ], !dbg !1049
  %84 = icmp eq i32 %83, 2, !dbg !1049
  br i1 %84, label %85, label %122, !dbg !1051

; <label>:85                                      ; preds = %82
  %86 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 8, !dbg !1052
  %87 = tail call double* @DV_entries(%struct._DV* %86) #5, !dbg !1053
  tail call void @llvm.dbg.value(metadata double* %87, i64 0, metadata !296, metadata !320), !dbg !1054
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !286, metadata !320), !dbg !1030
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !287, metadata !320), !dbg !1031
  %88 = icmp sgt i32 %ncol, 0, !dbg !1055
  br i1 %88, label %.preheader.lr.ph, label %._crit_edge13, !dbg !1058

.preheader.lr.ph:                                 ; preds = %85
  %89 = icmp sgt i32 %nrow, 0, !dbg !1059
  %90 = sext i32 %rowstride to i64, !dbg !1058
  %91 = add i32 %nrow, -1, !dbg !1058
  %92 = sext i32 %colstride to i64, !dbg !1058
  %93 = add i32 %ncol, -1, !dbg !1058
  br label %.preheader, !dbg !1058

.preheader:                                       ; preds = %120, %.preheader.lr.ph
  %indvars.iv55 = phi i64 [ 0, %.preheader.lr.ph ], [ %indvars.iv.next56, %120 ]
  %kk.811 = phi i32 [ %3, %.preheader.lr.ph ], [ %kk.9.lcssa, %120 ]
  br i1 %89, label %.lr.ph, label %120, !dbg !1063

.lr.ph:                                           ; preds = %.preheader
  %94 = mul nsw i64 %indvars.iv55, %92, !dbg !1064
  %95 = sext i32 %kk.811 to i64
  br label %96, !dbg !1063

; <label>:96                                      ; preds = %96, %.lr.ph
  %indvars.iv53 = phi i64 [ %95, %.lr.ph ], [ %indvars.iv.next54, %96 ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %96 ]
  %97 = mul nsw i64 %indvars.iv, %90, !dbg !1066
  %98 = add nsw i64 %97, %94, !dbg !1067
  %99 = trunc i64 %98 to i32, !dbg !1068
  %100 = shl nsw i32 %99, 1, !dbg !1068
  %101 = sext i32 %100 to i64, !dbg !1069
  %102 = getelementptr inbounds double* %mtxent, i64 %101, !dbg !1069
  %103 = bitcast double* %102 to i64*, !dbg !1069
  %104 = load i64* %103, align 8, !dbg !1069, !tbaa !417
  %105 = trunc i64 %indvars.iv53 to i32, !dbg !1070
  %106 = shl nsw i32 %105, 1, !dbg !1070
  %107 = sext i32 %106 to i64, !dbg !1071
  %108 = getelementptr inbounds double* %87, i64 %107, !dbg !1071
  %109 = bitcast double* %108 to i64*, !dbg !1072
  store i64 %104, i64* %109, align 8, !dbg !1072, !tbaa !417
  %110 = or i32 %100, 1, !dbg !1073
  %111 = sext i32 %110 to i64, !dbg !1074
  %112 = getelementptr inbounds double* %mtxent, i64 %111, !dbg !1074
  %113 = bitcast double* %112 to i64*, !dbg !1074
  %114 = load i64* %113, align 8, !dbg !1074, !tbaa !417
  %115 = or i32 %106, 1, !dbg !1075
  %116 = sext i32 %115 to i64, !dbg !1076
  %117 = getelementptr inbounds double* %87, i64 %116, !dbg !1076
  %118 = bitcast double* %117 to i64*, !dbg !1077
  store i64 %114, i64* %118, align 8, !dbg !1077, !tbaa !417
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1063
  %indvars.iv.next54 = add nsw i64 %indvars.iv53, 1, !dbg !1063
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !1063
  %exitcond = icmp eq i32 %lftr.wideiv, %91, !dbg !1063
  br i1 %exitcond, label %._crit_edge, label %96, !dbg !1063

._crit_edge:                                      ; preds = %96
  %119 = add i32 %kk.811, %nrow, !dbg !1063
  br label %120, !dbg !1063

; <label>:120                                     ; preds = %._crit_edge, %.preheader
  %kk.9.lcssa = phi i32 [ %119, %._crit_edge ], [ %kk.811, %.preheader ]
  %indvars.iv.next56 = add nuw nsw i64 %indvars.iv55, 1, !dbg !1058
  %lftr.wideiv57 = trunc i64 %indvars.iv55 to i32, !dbg !1058
  %exitcond58 = icmp eq i32 %lftr.wideiv57, %93, !dbg !1058
  br i1 %exitcond58, label %._crit_edge13, label %.preheader, !dbg !1058

._crit_edge13:                                    ; preds = %120, %85
  %121 = shl nsw i32 %57, 1, !dbg !1078
  tail call void @DV_setSize(%struct._DV* %86, i32 %121) #5, !dbg !1079
  br label %122, !dbg !1080

; <label>:122                                     ; preds = %._crit_edge13, %82
  %123 = load i32* %2, align 4, !dbg !1081, !tbaa !365
  %124 = add nsw i32 %123, %1, !dbg !1081
  store i32 %124, i32* %2, align 4, !dbg !1081, !tbaa !365
  %125 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 1, !dbg !1082
  store i32 1, i32* %125, align 4, !dbg !1083, !tbaa !435
  ret void, !dbg !1084
}
