define internal fastcc void @inputChevron(%struct._InpMtx* %inpmtx, i32 %chv, i32 %chvsize, i32* %chvind, double* %chvent) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._InpMtx* %inpmtx}, i64 0, metadata !237), !dbg !583
  tail call void @llvm.dbg.value(metadata !{i32 %chv}, i64 0, metadata !238), !dbg !584
  tail call void @llvm.dbg.value(metadata !{i32 %chvsize}, i64 0, metadata !239), !dbg !585
  tail call void @llvm.dbg.value(metadata !{i32* %chvind}, i64 0, metadata !240), !dbg !586
  tail call void @llvm.dbg.value(metadata !{double* %chvent}, i64 0, metadata !241), !dbg !587
  tail call fastcc void @prepareToAddNewEntries(%struct._InpMtx* %inpmtx, i32 %chvsize) #7, !dbg !588
  %nent1 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 4, !dbg !589
  %0 = load i32* %nent1, align 4, !dbg !589, !tbaa !313
  tail call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !245), !dbg !589
  %ivec1IV = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 6, !dbg !590
  %call = tail call i32* @IV_entries(%struct._IV* %ivec1IV) #5, !dbg !590
  tail call void @llvm.dbg.value(metadata !{i32* %call}, i64 0, metadata !248), !dbg !590
  %ivec2IV = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 7, !dbg !591
  %call2 = tail call i32* @IV_entries(%struct._IV* %ivec2IV) #5, !dbg !591
  tail call void @llvm.dbg.value(metadata !{i32* %call2}, i64 0, metadata !249), !dbg !591
  %coordType = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 0, !dbg !592
  %1 = load i32* %coordType, align 4, !dbg !592, !tbaa !313
  switch i32 %1, label %if.end42 [
    i32 1, label %for.cond.preheader
    i32 2, label %for.cond15.preheader
    i32 3, label %if.then37
  ], !dbg !592

for.cond15.preheader:                             ; preds = %entry
  %cmp16137 = icmp sgt i32 %chvsize, 0, !dbg !593
  br i1 %cmp16137, label %for.body17.lr.ph, label %if.end42, !dbg !593

for.body17.lr.ph:                                 ; preds = %for.cond15.preheader
  %2 = sext i32 %0 to i64, !dbg !593
  br label %for.body17, !dbg !593

for.cond.preheader:                               ; preds = %entry
  %cmp3133 = icmp sgt i32 %chvsize, 0, !dbg !596
  br i1 %cmp3133, label %for.body.lr.ph, label %if.end42, !dbg !596

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %3 = sext i32 %0 to i64, !dbg !596
  br label %for.body, !dbg !596

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv140 = phi i64 [ %3, %for.body.lr.ph ], [ %indvars.iv.next141, %for.body ], !dbg !596
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds i32* %chvind, i64 %indvars.iv, !dbg !599
  %4 = load i32* %arrayidx, align 4, !dbg !599, !tbaa !313
  tail call void @llvm.dbg.value(metadata !{i32 %4}, i64 0, metadata !246), !dbg !599
  %cmp4 = icmp sgt i32 %4, -1, !dbg !599
  tail call void @llvm.dbg.value(metadata !{i32 %chv}, i64 0, metadata !247), !dbg !601
  tail call void @llvm.dbg.value(metadata !{i32 %chv}, i64 0, metadata !242), !dbg !603
  %sub = select i1 %cmp4, i32 0, i32 %4, !dbg !599
  %row.0 = sub nsw i32 %chv, %sub, !dbg !599
  %add = select i1 %cmp4, i32 %4, i32 0, !dbg !599
  %col.0 = add nsw i32 %add, %chv, !dbg !599
  %arrayidx7 = getelementptr inbounds i32* %call, i64 %indvars.iv140, !dbg !605
  store i32 %row.0, i32* %arrayidx7, align 4, !dbg !605, !tbaa !313
  %arrayidx9 = getelementptr inbounds i32* %call2, i64 %indvars.iv140, !dbg !606
  store i32 %col.0, i32* %arrayidx9, align 4, !dbg !606, !tbaa !313
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !596
  %indvars.iv.next141 = add i64 %indvars.iv140, 1, !dbg !596
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !596
  %exitcond = icmp eq i32 %lftr.wideiv, %chvsize, !dbg !596
  br i1 %exitcond, label %if.end42, label %for.body, !dbg !596

for.body17:                                       ; preds = %for.body17, %for.body17.lr.ph
  %indvars.iv144 = phi i64 [ %2, %for.body17.lr.ph ], [ %indvars.iv.next145, %for.body17 ], !dbg !593
  %indvars.iv142 = phi i64 [ 0, %for.body17.lr.ph ], [ %indvars.iv.next143, %for.body17 ]
  %arrayidx19 = getelementptr inbounds i32* %chvind, i64 %indvars.iv142, !dbg !607
  %5 = load i32* %arrayidx19, align 4, !dbg !607, !tbaa !313
  tail call void @llvm.dbg.value(metadata !{i32 %5}, i64 0, metadata !246), !dbg !607
  %cmp20 = icmp sgt i32 %5, -1, !dbg !607
  tail call void @llvm.dbg.value(metadata !{i32 %chv}, i64 0, metadata !247), !dbg !609
  tail call void @llvm.dbg.value(metadata !{i32 %chv}, i64 0, metadata !242), !dbg !611
  %sub24 = select i1 %cmp20, i32 0, i32 %5, !dbg !607
  %row.1 = sub nsw i32 %chv, %sub24, !dbg !607
  %add22 = select i1 %cmp20, i32 %5, i32 0, !dbg !607
  %col.1 = add nsw i32 %add22, %chv, !dbg !607
  %arrayidx27 = getelementptr inbounds i32* %call, i64 %indvars.iv144, !dbg !613
  store i32 %col.1, i32* %arrayidx27, align 4, !dbg !613, !tbaa !313
  %arrayidx29 = getelementptr inbounds i32* %call2, i64 %indvars.iv144, !dbg !614
  store i32 %row.1, i32* %arrayidx29, align 4, !dbg !614, !tbaa !313
  %indvars.iv.next143 = add i64 %indvars.iv142, 1, !dbg !593
  %indvars.iv.next145 = add i64 %indvars.iv144, 1, !dbg !593
  %lftr.wideiv146 = trunc i64 %indvars.iv.next143 to i32, !dbg !593
  %exitcond147 = icmp eq i32 %lftr.wideiv146, %chvsize, !dbg !593
  br i1 %exitcond147, label %if.end42, label %for.body17, !dbg !593

if.then37:                                        ; preds = %entry
  %idx.ext = sext i32 %0 to i64, !dbg !615
  %add.ptr = getelementptr inbounds i32* %call, i64 %idx.ext, !dbg !615
  tail call void @IVfill(i32 %chvsize, i32* %add.ptr, i32 %chv) #5, !dbg !615
  %add.ptr39 = getelementptr inbounds i32* %call2, i64 %idx.ext, !dbg !617
  tail call void @IVcopy(i32 %chvsize, i32* %add.ptr39, i32* %chvind) #5, !dbg !617
  br label %if.end42, !dbg !618

if.end42:                                         ; preds = %for.cond15.preheader, %for.body17, %for.cond.preheader, %for.body, %entry, %if.then37
  %add44 = add nsw i32 %0, %chvsize, !dbg !619
  tail call void @IV_setSize(%struct._IV* %ivec1IV, i32 %add44) #5, !dbg !619
  tail call void @IV_setSize(%struct._IV* %ivec2IV, i32 %add44) #5, !dbg !620
  %inputMode = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 2, !dbg !621
  %6 = load i32* %inputMode, align 4, !dbg !621, !tbaa !313
  %cmp47 = icmp eq i32 %6, 1, !dbg !621
  br i1 %cmp47, label %if.then48, label %if.end67, !dbg !621

if.then48:                                        ; preds = %if.end42
  %dvecDV = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 8, !dbg !622
  %call49 = tail call double* @DV_entries(%struct._DV* %dvecDV) #5, !dbg !622
  %idx.ext50 = sext i32 %0 to i64, !dbg !622
  %add.ptr51 = getelementptr inbounds double* %call49, i64 %idx.ext50, !dbg !622
  tail call void @llvm.dbg.value(metadata !{double* %add.ptr51}, i64 0, metadata !250), !dbg !622
  tail call void @DVcopy(i32 %chvsize, double* %add.ptr51, double* %chvent) #5, !dbg !623
  tail call void @DV_setSize(%struct._DV* %dvecDV, i32 %add44) #5, !dbg !624
  br label %if.end67, !dbg !625

if.end67:                                         ; preds = %if.end42, %if.then48
  %7 = load i32* %nent1, align 4, !dbg !626, !tbaa !313
  %add69 = add nsw i32 %7, %chvsize, !dbg !626
  store i32 %add69, i32* %nent1, align 4, !dbg !626, !tbaa !313
  %storageMode = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 1, !dbg !627
  store i32 1, i32* %storageMode, align 4, !dbg !627, !tbaa !313
  ret void, !dbg !628
}
