define internal fastcc void @inputChevron(%struct._InpMtx* %inpmtx, i32 %chv, i32 %chvsize, i32* %chvind, double* %chvent) #0 {
entry:
  tail call fastcc void @prepareToAddNewEntries(%struct._InpMtx* %inpmtx, i32 %chvsize) #6
  %nent1 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 4
  %0 = load i32* %nent1, align 4, !tbaa !3
  %ivec1IV = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 6
  %call = tail call i32* @IV_entries(%struct._IV* %ivec1IV) #4
  %ivec2IV = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 7
  %call2 = tail call i32* @IV_entries(%struct._IV* %ivec2IV) #4
  %coordType = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 0
  %1 = load i32* %coordType, align 4, !tbaa !3
  switch i32 %1, label %if.end42 [
    i32 1, label %for.cond.preheader
    i32 2, label %for.cond15.preheader
    i32 3, label %if.then37
  ]

for.cond15.preheader:                             ; preds = %entry
  %cmp16137 = icmp sgt i32 %chvsize, 0
  br i1 %cmp16137, label %for.body17.lr.ph, label %if.end42

for.body17.lr.ph:                                 ; preds = %for.cond15.preheader
  %2 = sext i32 %0 to i64
  br label %for.body17

for.cond.preheader:                               ; preds = %entry
  %cmp3133 = icmp sgt i32 %chvsize, 0
  br i1 %cmp3133, label %for.body.lr.ph, label %if.end42

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %3 = sext i32 %0 to i64
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv140 = phi i64 [ %3, %for.body.lr.ph ], [ %indvars.iv.next141, %for.body ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds i32* %chvind, i64 %indvars.iv
  %4 = load i32* %arrayidx, align 4, !tbaa !3
  %cmp4 = icmp sgt i32 %4, -1
  %sub = select i1 %cmp4, i32 0, i32 %4
  %row.0 = sub nsw i32 %chv, %sub
  %add = select i1 %cmp4, i32 %4, i32 0
  %col.0 = add nsw i32 %add, %chv
  %arrayidx7 = getelementptr inbounds i32* %call, i64 %indvars.iv140
  store i32 %row.0, i32* %arrayidx7, align 4, !tbaa !3
  %arrayidx9 = getelementptr inbounds i32* %call2, i64 %indvars.iv140
  store i32 %col.0, i32* %arrayidx9, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %indvars.iv.next141 = add i64 %indvars.iv140, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %chvsize
  br i1 %exitcond, label %if.end42, label %for.body

for.body17:                                       ; preds = %for.body17, %for.body17.lr.ph
  %indvars.iv144 = phi i64 [ %2, %for.body17.lr.ph ], [ %indvars.iv.next145, %for.body17 ]
  %indvars.iv142 = phi i64 [ 0, %for.body17.lr.ph ], [ %indvars.iv.next143, %for.body17 ]
  %arrayidx19 = getelementptr inbounds i32* %chvind, i64 %indvars.iv142
  %5 = load i32* %arrayidx19, align 4, !tbaa !3
  %cmp20 = icmp sgt i32 %5, -1
  %sub24 = select i1 %cmp20, i32 0, i32 %5
  %row.1 = sub nsw i32 %chv, %sub24
  %add22 = select i1 %cmp20, i32 %5, i32 0
  %col.1 = add nsw i32 %add22, %chv
  %arrayidx27 = getelementptr inbounds i32* %call, i64 %indvars.iv144
  store i32 %col.1, i32* %arrayidx27, align 4, !tbaa !3
  %arrayidx29 = getelementptr inbounds i32* %call2, i64 %indvars.iv144
  store i32 %row.1, i32* %arrayidx29, align 4, !tbaa !3
  %indvars.iv.next143 = add i64 %indvars.iv142, 1
  %indvars.iv.next145 = add i64 %indvars.iv144, 1
  %lftr.wideiv146 = trunc i64 %indvars.iv.next143 to i32
  %exitcond147 = icmp eq i32 %lftr.wideiv146, %chvsize
  br i1 %exitcond147, label %if.end42, label %for.body17

if.then37:                                        ; preds = %entry
  %idx.ext = sext i32 %0 to i64
  %add.ptr = getelementptr inbounds i32* %call, i64 %idx.ext
  tail call void @IVfill(i32 %chvsize, i32* %add.ptr, i32 %chv) #4
  %add.ptr39 = getelementptr inbounds i32* %call2, i64 %idx.ext
  tail call void @IVcopy(i32 %chvsize, i32* %add.ptr39, i32* %chvind) #4
  br label %if.end42

if.end42:                                         ; preds = %for.cond15.preheader, %for.body17, %for.cond.preheader, %for.body, %entry, %if.then37
  %add44 = add nsw i32 %0, %chvsize
  tail call void @IV_setSize(%struct._IV* %ivec1IV, i32 %add44) #4
  tail call void @IV_setSize(%struct._IV* %ivec2IV, i32 %add44) #4
  %inputMode = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 2
  %6 = load i32* %inputMode, align 4, !tbaa !3
  %cmp47 = icmp eq i32 %6, 1
  br i1 %cmp47, label %if.then48, label %if.end67

if.then48:                                        ; preds = %if.end42
  %dvecDV = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 8
  %call49 = tail call double* @DV_entries(%struct._DV* %dvecDV) #4
  %idx.ext50 = sext i32 %0 to i64
  %add.ptr51 = getelementptr inbounds double* %call49, i64 %idx.ext50
  tail call void @DVcopy(i32 %chvsize, double* %add.ptr51, double* %chvent) #4
  tail call void @DV_setSize(%struct._DV* %dvecDV, i32 %add44) #4
  br label %if.end67

if.end67:                                         ; preds = %if.end42, %if.then48
  %7 = load i32* %nent1, align 4, !tbaa !3
  %add69 = add nsw i32 %7, %chvsize
  store i32 %add69, i32* %nent1, align 4, !tbaa !3
  %storageMode = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 1
  store i32 1, i32* %storageMode, align 4, !tbaa !3
  ret void
}
