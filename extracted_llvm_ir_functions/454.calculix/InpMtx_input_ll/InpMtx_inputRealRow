define void @InpMtx_inputRealRow(%struct._InpMtx* %inpmtx, i32 %row, i32 %rowsize, i32* %rowind, double* %rowent) #0 {
entry:
  %cmp = icmp eq %struct._InpMtx* %inpmtx, null
  %cmp1 = icmp slt i32 %row, 0
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp slt i32 %rowsize, 0
  %or.cond28 = or i1 %or.cond, %cmp3
  %cmp5 = icmp eq i32* %rowind, null
  %or.cond29 = or i1 %or.cond28, %cmp5
  %cmp7 = icmp eq double* %rowent, null
  %or.cond30 = or i1 %or.cond29, %cmp7
  br i1 %or.cond30, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([65 x i8]* @.str11, i64 0, i64 0), %struct._InpMtx* %inpmtx, i32 %row, i32 %rowsize, i32* %rowind, double* %rowent) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  %inputMode = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 2
  %1 = load i32* %inputMode, align 4, !tbaa !3
  %cmp8 = icmp eq i32 %1, 1
  br i1 %cmp8, label %if.end11, label %if.then9

if.then9:                                         ; preds = %if.end
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([85 x i8]* @.str12, i64 0, i64 0), %struct._InpMtx* %inpmtx, i32 %row, i32 %rowsize, i32* %rowind, double* %rowent) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end11:                                         ; preds = %if.end
  tail call fastcc void @inputRow(%struct._InpMtx* %inpmtx, i32 %row, i32 %rowsize, i32* %rowind, double* %rowent) #6
  ret void
}
