define void @InpMtx_inputMatrix(%struct._InpMtx* %inpmtx, i32 %nrow, i32 %ncol, i32 %rowstride, i32 %colstride, i32* %rowind, i32* %colind) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._InpMtx* %inpmtx}, i64 0, metadata !136), !dbg !659
  tail call void @llvm.dbg.value(metadata !{i32 %nrow}, i64 0, metadata !137), !dbg !660
  tail call void @llvm.dbg.value(metadata !{i32 %ncol}, i64 0, metadata !138), !dbg !661
  tail call void @llvm.dbg.value(metadata !{i32 %rowstride}, i64 0, metadata !139), !dbg !662
  tail call void @llvm.dbg.value(metadata !{i32 %colstride}, i64 0, metadata !140), !dbg !663
  tail call void @llvm.dbg.value(metadata !{i32* %rowind}, i64 0, metadata !141), !dbg !664
  tail call void @llvm.dbg.value(metadata !{i32* %colind}, i64 0, metadata !142), !dbg !665
  %cmp = icmp eq %struct._InpMtx* %inpmtx, null, !dbg !666
  %cmp1 = icmp slt i32 %nrow, 0, !dbg !666
  %or.cond = or i1 %cmp, %cmp1, !dbg !666
  %cmp3 = icmp slt i32 %ncol, 0, !dbg !666
  %or.cond45 = or i1 %or.cond, %cmp3, !dbg !666
  %cmp5 = icmp slt i32 %rowstride, 1, !dbg !666
  %or.cond46 = or i1 %or.cond45, %cmp5, !dbg !666
  %cmp7 = icmp slt i32 %colstride, 1, !dbg !666
  %or.cond47 = or i1 %or.cond46, %cmp7, !dbg !666
  %cmp9 = icmp eq i32* %rowind, null, !dbg !666
  %or.cond48 = or i1 %or.cond47, %cmp9, !dbg !666
  %cmp11 = icmp eq i32* %colind, null, !dbg !666
  %or.cond49 = or i1 %or.cond48, %cmp11, !dbg !666
  br i1 %or.cond49, label %if.then, label %if.end, !dbg !666

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !667, !tbaa !308
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([70 x i8]* @.str27, i64 0, i64 0), %struct._InpMtx* %inpmtx, i32 %nrow, i32 %ncol, i32 %rowstride, i32 %colstride, i32* %rowind, i32* %colind) #5, !dbg !667
  tail call void @exit(i32 -1) #6, !dbg !669
  unreachable, !dbg !669

if.end:                                           ; preds = %entry
  %inputMode = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 2, !dbg !670
  %1 = load i32* %inputMode, align 4, !dbg !670, !tbaa !313
  %cmp12 = icmp eq i32 %1, 0, !dbg !670
  br i1 %cmp12, label %if.end15, label %if.then13, !dbg !670

if.then13:                                        ; preds = %if.end
  %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !671, !tbaa !308
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([105 x i8]* @.str28, i64 0, i64 0), %struct._InpMtx* %inpmtx, i32 %nrow, i32 %ncol, i32 %rowstride, i32 %colstride, i32* %rowind, i32* %colind) #5, !dbg !671
  tail call void @exit(i32 -1) #6, !dbg !673
  unreachable, !dbg !673

if.end15:                                         ; preds = %if.end
  %cmp16 = icmp eq i32 %nrow, 0, !dbg !674
  %cmp18 = icmp eq i32 %ncol, 0, !dbg !674
  %or.cond50 = or i1 %cmp16, %cmp18, !dbg !674
  br i1 %or.cond50, label %return, label %if.end20, !dbg !674

if.end20:                                         ; preds = %if.end15
  tail call fastcc void @inputMatrix(%struct._InpMtx* %inpmtx, i32 %nrow, i32 %ncol, i32 %rowstride, i32 %colstride, i32* %rowind, i32* %colind, double* null) #7, !dbg !675
  br label %return, !dbg !676

return:                                           ; preds = %if.end15, %if.end20
  ret void, !dbg !676
}
