define internal fastcc void @inputTriples(%struct._InpMtx* %inpmtx, i32 %ntriples, i32* %rowids, i32* %colids, double* %entries) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._InpMtx* %inpmtx}, i64 0, metadata !191), !dbg !807
  tail call void @llvm.dbg.value(metadata !{i32 %ntriples}, i64 0, metadata !192), !dbg !808
  tail call void @llvm.dbg.value(metadata !{i32* %rowids}, i64 0, metadata !193), !dbg !809
  tail call void @llvm.dbg.value(metadata !{i32* %colids}, i64 0, metadata !194), !dbg !810
  tail call void @llvm.dbg.value(metadata !{double* %entries}, i64 0, metadata !195), !dbg !811
  tail call fastcc void @prepareToAddNewEntries(%struct._InpMtx* %inpmtx, i32 %ntriples) #7, !dbg !812
  %nent1 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 4, !dbg !813
  %0 = load i32* %nent1, align 4, !dbg !813, !tbaa !313
  tail call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !196), !dbg !813
  %ivec1IV = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 6, !dbg !814
  %call = tail call i32* @IV_entries(%struct._IV* %ivec1IV) #5, !dbg !814
  tail call void @llvm.dbg.value(metadata !{i32* %call}, i64 0, metadata !197), !dbg !814
  %ivec2IV = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 7, !dbg !815
  %call2 = tail call i32* @IV_entries(%struct._IV* %ivec2IV) #5, !dbg !815
  tail call void @llvm.dbg.value(metadata !{i32* %call2}, i64 0, metadata !198), !dbg !815
  %idx.ext = sext i32 %0 to i64, !dbg !816
  %add.ptr = getelementptr inbounds i32* %call, i64 %idx.ext, !dbg !816
  tail call void @IVcopy(i32 %ntriples, i32* %add.ptr, i32* %rowids) #5, !dbg !816
  %add.ptr4 = getelementptr inbounds i32* %call2, i64 %idx.ext, !dbg !817
  tail call void @IVcopy(i32 %ntriples, i32* %add.ptr4, i32* %colids) #5, !dbg !817
  %add = add nsw i32 %0, %ntriples, !dbg !818
  tail call void @IV_setSize(%struct._IV* %ivec1IV, i32 %add) #5, !dbg !818
  tail call void @IV_setSize(%struct._IV* %ivec2IV, i32 %add) #5, !dbg !819
  %inputMode = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 2, !dbg !820
  %1 = load i32* %inputMode, align 4, !dbg !820, !tbaa !313
  switch i32 %1, label %if.end24 [
    i32 1, label %if.then
    i32 2, label %if.then15
  ], !dbg !820

if.then:                                          ; preds = %entry
  %dvecDV = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 8, !dbg !821
  %call8 = tail call double* @DV_entries(%struct._DV* %dvecDV) #5, !dbg !821
  tail call void @llvm.dbg.value(metadata !{double* %call8}, i64 0, metadata !199), !dbg !821
  %add.ptr10 = getelementptr inbounds double* %call8, i64 %idx.ext, !dbg !822
  tail call void @DVcopy(i32 %ntriples, double* %add.ptr10, double* %entries) #5, !dbg !822
  tail call void @DV_setSize(%struct._DV* %dvecDV, i32 %add) #5, !dbg !823
  br label %if.end24, !dbg !824

if.then15:                                        ; preds = %entry
  %dvecDV17 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 8, !dbg !825
  %call18 = tail call double* @DV_entries(%struct._DV* %dvecDV17) #5, !dbg !825
  tail call void @llvm.dbg.value(metadata !{double* %call18}, i64 0, metadata !201), !dbg !825
  %mul = shl nsw i32 %0, 1, !dbg !826
  %idx.ext19 = sext i32 %mul to i64, !dbg !826
  %add.ptr20 = getelementptr inbounds double* %call18, i64 %idx.ext19, !dbg !826
  tail call void @ZVcopy(i32 %ntriples, double* %add.ptr20, double* %entries) #5, !dbg !826
  %mul23 = shl nsw i32 %add, 1, !dbg !827
  tail call void @DV_setSize(%struct._DV* %dvecDV17, i32 %mul23) #5, !dbg !827
  br label %if.end24, !dbg !828

if.end24:                                         ; preds = %entry, %if.then15, %if.then
  %2 = load i32* %nent1, align 4, !dbg !829, !tbaa !313
  %add26 = add nsw i32 %2, %ntriples, !dbg !829
  store i32 %add26, i32* %nent1, align 4, !dbg !829, !tbaa !313
  %storageMode = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 1, !dbg !830
  store i32 1, i32* %storageMode, align 4, !dbg !830, !tbaa !313
  ret void, !dbg !831
}
