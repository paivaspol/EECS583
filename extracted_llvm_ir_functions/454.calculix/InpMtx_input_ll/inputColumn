define internal fastcc void @inputColumn(%struct._InpMtx* %inpmtx, i32 %col, i32 %colsize, i32* %colind, double* %colent) #0 {
  tail call void @llvm.dbg.value(metadata %struct._InpMtx* %inpmtx, i64 0, metadata !236, metadata !320), !dbg !651
  tail call void @llvm.dbg.value(metadata i32 %col, i64 0, metadata !237, metadata !320), !dbg !652
  tail call void @llvm.dbg.value(metadata i32 %colsize, i64 0, metadata !238, metadata !320), !dbg !653
  tail call void @llvm.dbg.value(metadata i32* %colind, i64 0, metadata !239, metadata !320), !dbg !654
  tail call void @llvm.dbg.value(metadata double* %colent, i64 0, metadata !240, metadata !320), !dbg !655
  tail call fastcc void @prepareToAddNewEntries(%struct._InpMtx* %inpmtx, i32 %colsize) #7, !dbg !656
  %1 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 4, !dbg !657
  %2 = load i32* %1, align 4, !dbg !657, !tbaa !365
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !243, metadata !320), !dbg !658
  %3 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 6, !dbg !659
  %4 = tail call i32* @IV_entries(%struct._IV* %3) #5, !dbg !660
  tail call void @llvm.dbg.value(metadata i32* %4, i64 0, metadata !245, metadata !320), !dbg !661
  %5 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 7, !dbg !662
  %6 = tail call i32* @IV_entries(%struct._IV* %5) #5, !dbg !663
  tail call void @llvm.dbg.value(metadata i32* %6, i64 0, metadata !246, metadata !320), !dbg !664
  %7 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 0, !dbg !665
  %8 = load i32* %7, align 4, !dbg !665, !tbaa !337
  switch i32 %8, label %.loopexit [
    i32 1, label %12
    i32 2, label %16
    i32 3, label %.preheader
  ], !dbg !667

.preheader:                                       ; preds = %0
  %9 = icmp sgt i32 %colsize, 0, !dbg !668
  br i1 %9, label %.lr.ph, label %.loopexit, !dbg !674

.lr.ph:                                           ; preds = %.preheader
  %10 = sext i32 %2 to i64
  %11 = add i32 %colsize, -1, !dbg !674
  br label %20, !dbg !674

; <label>:12                                      ; preds = %0
  %13 = sext i32 %2 to i64, !dbg !675
  %14 = getelementptr inbounds i32* %4, i64 %13, !dbg !675
  tail call void @IVcopy(i32 %colsize, i32* %14, i32* %colind) #5, !dbg !677
  %15 = getelementptr inbounds i32* %6, i64 %13, !dbg !678
  tail call void @IVfill(i32 %colsize, i32* %15, i32 %col) #5, !dbg !679
  br label %.loopexit, !dbg !680

; <label>:16                                      ; preds = %0
  %17 = sext i32 %2 to i64, !dbg !681
  %18 = getelementptr inbounds i32* %4, i64 %17, !dbg !681
  tail call void @IVfill(i32 %colsize, i32* %18, i32 %col) #5, !dbg !683
  %19 = getelementptr inbounds i32* %6, i64 %17, !dbg !684
  tail call void @IVcopy(i32 %colsize, i32* %19, i32* %colind) #5, !dbg !685
  br label %.loopexit, !dbg !686

; <label>:20                                      ; preds = %20, %.lr.ph
  %indvars.iv = phi i64 [ %10, %.lr.ph ], [ %indvars.iv.next, %20 ]
  %ii.03 = phi i32 [ 0, %.lr.ph ], [ %28, %20 ]
  %21 = getelementptr inbounds i32* %colind, i64 %indvars.iv, !dbg !687
  %22 = load i32* %21, align 4, !dbg !687, !tbaa !379
  tail call void @llvm.dbg.value(metadata i32 %22, i64 0, metadata !244, metadata !320), !dbg !689
  %23 = icmp sle i32 %22, %col, !dbg !690
  %24 = select i1 %23, i32 %22, i32 %col, !dbg !691
  %25 = getelementptr inbounds i32* %4, i64 %indvars.iv, !dbg !692
  store i32 %24, i32* %25, align 4, !dbg !693, !tbaa !379
  %26 = sub nsw i32 %col, %22, !dbg !694
  %27 = getelementptr inbounds i32* %6, i64 %indvars.iv, !dbg !695
  store i32 %26, i32* %27, align 4, !dbg !696, !tbaa !379
  %28 = add nuw nsw i32 %ii.03, 1, !dbg !697
  tail call void @llvm.dbg.value(metadata i32 %28, i64 0, metadata !241, metadata !320), !dbg !698
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !674
  %exitcond = icmp eq i32 %ii.03, %11, !dbg !674
  br i1 %exitcond, label %.loopexit, label %20, !dbg !674

.loopexit:                                        ; preds = %20, %.preheader, %0, %16, %12
  %29 = add nsw i32 %2, %colsize, !dbg !699
  tail call void @IV_setSize(%struct._IV* %3, i32 %29) #5, !dbg !700
  tail call void @IV_setSize(%struct._IV* %5, i32 %29) #5, !dbg !701
  %30 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 2, !dbg !702
  %31 = load i32* %30, align 4, !dbg !702, !tbaa !350
  switch i32 %31, label %44 [
    i32 1, label %32
    i32 2, label %37
  ], !dbg !703

; <label>:32                                      ; preds = %.loopexit
  %33 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 8, !dbg !704
  %34 = tail call double* @DV_entries(%struct._DV* %33) #5, !dbg !705
  %35 = sext i32 %2 to i64, !dbg !706
  %36 = getelementptr inbounds double* %34, i64 %35, !dbg !706
  tail call void @llvm.dbg.value(metadata double* %36, i64 0, metadata !247, metadata !320), !dbg !707
  tail call void @DVcopy(i32 %colsize, double* %36, double* %colent) #5, !dbg !708
  tail call void @DV_setSize(%struct._DV* %33, i32 %29) #5, !dbg !709
  br label %44, !dbg !710

; <label>:37                                      ; preds = %.loopexit
  %38 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 8, !dbg !711
  %39 = tail call double* @DV_entries(%struct._DV* %38) #5, !dbg !712
  %40 = shl nsw i32 %2, 1, !dbg !713
  %41 = sext i32 %40 to i64, !dbg !714
  %42 = getelementptr inbounds double* %39, i64 %41, !dbg !714
  tail call void @llvm.dbg.value(metadata double* %42, i64 0, metadata !250, metadata !320), !dbg !715
  tail call void @ZVcopy(i32 %colsize, double* %42, double* %colent) #5, !dbg !716
  %43 = shl nsw i32 %29, 1, !dbg !717
  tail call void @DV_setSize(%struct._DV* %38, i32 %43) #5, !dbg !718
  br label %44, !dbg !719

; <label>:44                                      ; preds = %.loopexit, %37, %32
  store i32 %29, i32* %1, align 4, !dbg !720, !tbaa !365
  %45 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 1, !dbg !721
  store i32 1, i32* %45, align 4, !dbg !722, !tbaa !435
  ret void, !dbg !723
}
