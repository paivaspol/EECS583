define internal fastcc void @inputEntry(%struct._InpMtx* %inpmtx, i32 %row, i32 %col, double %real, double %imag) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._InpMtx* %inpmtx}, i64 0, metadata !290), !dbg !323
  tail call void @llvm.dbg.value(metadata !{i32 %row}, i64 0, metadata !291), !dbg !324
  tail call void @llvm.dbg.value(metadata !{i32 %col}, i64 0, metadata !292), !dbg !325
  tail call void @llvm.dbg.value(metadata !{double %real}, i64 0, metadata !293), !dbg !326
  tail call void @llvm.dbg.value(metadata !{double %imag}, i64 0, metadata !294), !dbg !327
  tail call fastcc void @prepareToAddNewEntries(%struct._InpMtx* %inpmtx, i32 1) #7, !dbg !328
  %nent1 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 4, !dbg !329
  %0 = load i32* %nent1, align 4, !dbg !329, !tbaa !313
  tail call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !295), !dbg !329
  %ivec1IV = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 6, !dbg !330
  %call = tail call i32* @IV_entries(%struct._IV* %ivec1IV) #5, !dbg !330
  tail call void @llvm.dbg.value(metadata !{i32* %call}, i64 0, metadata !296), !dbg !330
  %ivec2IV = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 7, !dbg !331
  %call2 = tail call i32* @IV_entries(%struct._IV* %ivec2IV) #5, !dbg !331
  tail call void @llvm.dbg.value(metadata !{i32* %call2}, i64 0, metadata !297), !dbg !331
  %coordType = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 0, !dbg !332
  %1 = load i32* %coordType, align 4, !dbg !332, !tbaa !313
  switch i32 %1, label %if.end30 [
    i32 1, label %if.then
    i32 2, label %if.then7
    i32 3, label %if.then15
  ], !dbg !332

if.then:                                          ; preds = %entry
  %idxprom = sext i32 %0 to i64, !dbg !333
  %arrayidx = getelementptr inbounds i32* %call, i64 %idxprom, !dbg !333
  store i32 %row, i32* %arrayidx, align 4, !dbg !333, !tbaa !313
  %arrayidx4 = getelementptr inbounds i32* %call2, i64 %idxprom, !dbg !335
  store i32 %col, i32* %arrayidx4, align 4, !dbg !335, !tbaa !313
  br label %if.end30, !dbg !336

if.then7:                                         ; preds = %entry
  %idxprom8 = sext i32 %0 to i64, !dbg !337
  %arrayidx9 = getelementptr inbounds i32* %call, i64 %idxprom8, !dbg !337
  store i32 %col, i32* %arrayidx9, align 4, !dbg !337, !tbaa !313
  %arrayidx11 = getelementptr inbounds i32* %call2, i64 %idxprom8, !dbg !339
  store i32 %row, i32* %arrayidx11, align 4, !dbg !339, !tbaa !313
  br label %if.end30, !dbg !340

if.then15:                                        ; preds = %entry
  %cmp16 = icmp sgt i32 %row, %col, !dbg !341
  %idxprom23 = sext i32 %0 to i64, !dbg !343
  %arrayidx24 = getelementptr inbounds i32* %call, i64 %idxprom23, !dbg !343
  br i1 %cmp16, label %if.else22, label %if.then17, !dbg !341

if.then17:                                        ; preds = %if.then15
  store i32 %row, i32* %arrayidx24, align 4, !dbg !345, !tbaa !313
  %sub = sub nsw i32 %col, %row, !dbg !347
  %arrayidx21 = getelementptr inbounds i32* %call2, i64 %idxprom23, !dbg !347
  store i32 %sub, i32* %arrayidx21, align 4, !dbg !347, !tbaa !313
  br label %if.end30, !dbg !348

if.else22:                                        ; preds = %if.then15
  store i32 %col, i32* %arrayidx24, align 4, !dbg !343, !tbaa !313
  %sub25 = sub nsw i32 %col, %row, !dbg !349
  %arrayidx27 = getelementptr inbounds i32* %call2, i64 %idxprom23, !dbg !349
  store i32 %sub25, i32* %arrayidx27, align 4, !dbg !349, !tbaa !313
  br label %if.end30

if.end30:                                         ; preds = %entry, %if.then7, %if.then17, %if.else22, %if.then
  %add = add nsw i32 %0, 1, !dbg !350
  tail call void @IV_setSize(%struct._IV* %ivec1IV, i32 %add) #5, !dbg !350
  tail call void @IV_setSize(%struct._IV* %ivec2IV, i32 %add) #5, !dbg !351
  %inputMode = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 2, !dbg !352
  %2 = load i32* %inputMode, align 4, !dbg !352, !tbaa !313
  switch i32 %2, label %if.end58 [
    i32 1, label %if.then35
    i32 2, label %if.then44
  ], !dbg !352

if.then35:                                        ; preds = %if.end30
  %dvecDV = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 8, !dbg !353
  %call36 = tail call double* @DV_entries(%struct._DV* %dvecDV) #5, !dbg !353
  tail call void @llvm.dbg.value(metadata !{double* %call36}, i64 0, metadata !298), !dbg !353
  %idxprom37 = sext i32 %0 to i64, !dbg !354
  %arrayidx38 = getelementptr inbounds double* %call36, i64 %idxprom37, !dbg !354
  store double %real, double* %arrayidx38, align 8, !dbg !354, !tbaa !355
  tail call void @DV_setSize(%struct._DV* %dvecDV, i32 %add) #5, !dbg !356
  br label %if.end58, !dbg !357

if.then44:                                        ; preds = %if.end30
  %dvecDV46 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 8, !dbg !358
  %call47 = tail call double* @DV_entries(%struct._DV* %dvecDV46) #5, !dbg !358
  tail call void @llvm.dbg.value(metadata !{double* %call47}, i64 0, metadata !300), !dbg !358
  %mul = shl nsw i32 %0, 1, !dbg !359
  %idxprom48 = sext i32 %mul to i64, !dbg !359
  %arrayidx49 = getelementptr inbounds double* %call47, i64 %idxprom48, !dbg !359
  store double %real, double* %arrayidx49, align 8, !dbg !359, !tbaa !355
  %add51107 = or i32 %mul, 1, !dbg !360
  %idxprom52 = sext i32 %add51107 to i64, !dbg !360
  %arrayidx53 = getelementptr inbounds double* %call47, i64 %idxprom52, !dbg !360
  store double %imag, double* %arrayidx53, align 8, !dbg !360, !tbaa !355
  %mul56 = shl nsw i32 %add, 1, !dbg !361
  tail call void @DV_setSize(%struct._DV* %dvecDV46, i32 %mul56) #5, !dbg !361
  br label %if.end58, !dbg !362

if.end58:                                         ; preds = %if.end30, %if.then44, %if.then35
  %3 = load i32* %nent1, align 4, !dbg !363, !tbaa !313
  %inc = add nsw i32 %3, 1, !dbg !363
  store i32 %inc, i32* %nent1, align 4, !dbg !363, !tbaa !313
  %storageMode = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 1, !dbg !364
  store i32 1, i32* %storageMode, align 4, !dbg !364, !tbaa !313
  ret void, !dbg !365
}
