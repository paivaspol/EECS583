define internal fastcc void @inputRow(%struct._InpMtx* %inpmtx, i32 %row, i32 %rowsize, i32* %rowind, double* %rowent) #0 {
  tail call void @llvm.dbg.value(metadata %struct._InpMtx* %inpmtx, i64 0, metadata !217, metadata !320), !dbg !513
  tail call void @llvm.dbg.value(metadata i32 %row, i64 0, metadata !218, metadata !320), !dbg !514
  tail call void @llvm.dbg.value(metadata i32 %rowsize, i64 0, metadata !219, metadata !320), !dbg !515
  tail call void @llvm.dbg.value(metadata i32* %rowind, i64 0, metadata !220, metadata !320), !dbg !516
  tail call void @llvm.dbg.value(metadata double* %rowent, i64 0, metadata !221, metadata !320), !dbg !517
  tail call fastcc void @prepareToAddNewEntries(%struct._InpMtx* %inpmtx, i32 %rowsize) #7, !dbg !518
  %1 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 4, !dbg !519
  %2 = load i32* %1, align 4, !dbg !519, !tbaa !365
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !225, metadata !320), !dbg !520
  %3 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 6, !dbg !521
  %4 = tail call i32* @IV_entries(%struct._IV* %3) #5, !dbg !522
  tail call void @llvm.dbg.value(metadata i32* %4, i64 0, metadata !226, metadata !320), !dbg !523
  %5 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 7, !dbg !524
  %6 = tail call i32* @IV_entries(%struct._IV* %5) #5, !dbg !525
  tail call void @llvm.dbg.value(metadata i32* %6, i64 0, metadata !227, metadata !320), !dbg !526
  %7 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 0, !dbg !527
  %8 = load i32* %7, align 4, !dbg !527, !tbaa !337
  switch i32 %8, label %.loopexit [
    i32 1, label %11
    i32 2, label %15
    i32 3, label %.preheader
  ], !dbg !529

.preheader:                                       ; preds = %0
  %9 = icmp sgt i32 %rowsize, 0, !dbg !530
  br i1 %9, label %.lr.ph, label %.loopexit, !dbg !536

.lr.ph:                                           ; preds = %.preheader
  %10 = add i32 %rowsize, -1, !dbg !536
  br label %19, !dbg !536

; <label>:11                                      ; preds = %0
  %12 = sext i32 %2 to i64, !dbg !537
  %13 = getelementptr inbounds i32* %4, i64 %12, !dbg !537
  tail call void @IVfill(i32 %rowsize, i32* %13, i32 %row) #5, !dbg !539
  %14 = getelementptr inbounds i32* %6, i64 %12, !dbg !540
  tail call void @IVcopy(i32 %rowsize, i32* %14, i32* %rowind) #5, !dbg !541
  br label %.loopexit, !dbg !542

; <label>:15                                      ; preds = %0
  %16 = sext i32 %2 to i64, !dbg !543
  %17 = getelementptr inbounds i32* %6, i64 %16, !dbg !543
  tail call void @IVfill(i32 %rowsize, i32* %17, i32 %row) #5, !dbg !545
  %18 = getelementptr inbounds i32* %4, i64 %16, !dbg !546
  tail call void @IVcopy(i32 %rowsize, i32* %18, i32* %rowind) #5, !dbg !547
  br label %.loopexit, !dbg !548

; <label>:19                                      ; preds = %19, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %19 ]
  %20 = getelementptr inbounds i32* %rowind, i64 %indvars.iv, !dbg !549
  %21 = load i32* %20, align 4, !dbg !549, !tbaa !379
  tail call void @llvm.dbg.value(metadata i32 %21, i64 0, metadata !222, metadata !320), !dbg !551
  %22 = icmp sge i32 %21, %row, !dbg !552
  %23 = select i1 %22, i32 %row, i32 %21, !dbg !553
  %24 = getelementptr inbounds i32* %4, i64 %indvars.iv, !dbg !554
  store i32 %23, i32* %24, align 4, !dbg !555, !tbaa !379
  %25 = sub nsw i32 %21, %row, !dbg !556
  %26 = getelementptr inbounds i32* %6, i64 %indvars.iv, !dbg !557
  store i32 %25, i32* %26, align 4, !dbg !558, !tbaa !379
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !536
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !536
  %exitcond = icmp eq i32 %lftr.wideiv, %10, !dbg !536
  br i1 %exitcond, label %.loopexit, label %19, !dbg !536

.loopexit:                                        ; preds = %19, %.preheader, %0, %15, %11
  %27 = add nsw i32 %2, %rowsize, !dbg !559
  tail call void @IV_setSize(%struct._IV* %3, i32 %27) #5, !dbg !560
  tail call void @IV_setSize(%struct._IV* %5, i32 %27) #5, !dbg !561
  %28 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 2, !dbg !562
  %29 = load i32* %28, align 4, !dbg !562, !tbaa !350
  switch i32 %29, label %42 [
    i32 1, label %30
    i32 2, label %35
  ], !dbg !563

; <label>:30                                      ; preds = %.loopexit
  %31 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 8, !dbg !564
  %32 = tail call double* @DV_entries(%struct._DV* %31) #5, !dbg !565
  tail call void @llvm.dbg.value(metadata double* %32, i64 0, metadata !228, metadata !320), !dbg !566
  %33 = sext i32 %2 to i64, !dbg !567
  %34 = getelementptr inbounds double* %32, i64 %33, !dbg !567
  tail call void @DVcopy(i32 %rowsize, double* %34, double* %rowent) #5, !dbg !568
  tail call void @DV_setSize(%struct._DV* %31, i32 %27) #5, !dbg !569
  br label %42, !dbg !570

; <label>:35                                      ; preds = %.loopexit
  %36 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 8, !dbg !571
  %37 = tail call double* @DV_entries(%struct._DV* %36) #5, !dbg !572
  tail call void @llvm.dbg.value(metadata double* %37, i64 0, metadata !231, metadata !320), !dbg !573
  %38 = shl nsw i32 %2, 1, !dbg !574
  %39 = sext i32 %38 to i64, !dbg !575
  %40 = getelementptr inbounds double* %37, i64 %39, !dbg !575
  tail call void @ZVcopy(i32 %rowsize, double* %40, double* %rowent) #5, !dbg !576
  %41 = shl nsw i32 %27, 1, !dbg !577
  tail call void @DV_setSize(%struct._DV* %36, i32 %41) #5, !dbg !578
  br label %42, !dbg !579

; <label>:42                                      ; preds = %.loopexit, %35, %30
  %43 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 1, !dbg !580
  store i32 1, i32* %43, align 4, !dbg !581, !tbaa !435
  %44 = load i32* %1, align 4, !dbg !582, !tbaa !365
  %45 = add nsw i32 %44, %rowsize, !dbg !582
  store i32 %45, i32* %1, align 4, !dbg !582, !tbaa !365
  ret void, !dbg !583
}
