define void @Graph_adjAndEweights(%struct._Graph* %g, i32 %jvtx, i32* %psize, i32** %padj, i32** %pewghts) #0 {
entry:
  %cmp = icmp eq %struct._Graph* %g, null
  %cmp1 = icmp slt i32 %jvtx, 0
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %entry
  %nvtx = getelementptr inbounds %struct._Graph* %g, i64 0, i32 1
  %0 = load i32* %nvtx, align 4, !tbaa !0
  %nvbnd = getelementptr inbounds %struct._Graph* %g, i64 0, i32 2
  %1 = load i32* %nvbnd, align 4, !tbaa !0
  %add = add nsw i32 %1, %0
  %cmp3 = icmp sle i32 %add, %jvtx
  %cmp5 = icmp eq i32* %psize, null
  %or.cond58 = or i1 %cmp3, %cmp5
  %cmp7 = icmp eq i32** %padj, null
  %or.cond59 = or i1 %or.cond58, %cmp7
  %cmp9 = icmp eq i32** %pewghts, null
  %or.cond60 = or i1 %or.cond59, %cmp9
  br i1 %or.cond60, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false2, %entry
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([64 x i8]* @.str3, i64 0, i64 0), %struct._Graph* %g, i32 %jvtx, i32* %psize, i32** %padj, i32** %pewghts) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %lor.lhs.false2
  %adjIVL = getelementptr inbounds %struct._Graph* %g, i64 0, i32 6
  %3 = load %struct._IVL** %adjIVL, align 8, !tbaa !3
  %cmp10 = icmp eq %struct._IVL* %3, null
  br i1 %cmp10, label %if.then11, label %if.end13

if.then11:                                        ; preds = %if.end
  %4 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([72 x i8]* @.str4, i64 0, i64 0), %struct._Graph* %g, i32 %jvtx, i32* %psize, i32** %padj, i32** %pewghts) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end13:                                         ; preds = %if.end
  %type = getelementptr inbounds %struct._Graph* %g, i64 0, i32 0
  %5 = load i32* %type, align 4, !tbaa !0
  %cmp14 = icmp sgt i32 %5, 1
  br i1 %cmp14, label %land.lhs.true, label %if.end19

land.lhs.true:                                    ; preds = %if.end13
  %ewghtIVL = getelementptr inbounds %struct._Graph* %g, i64 0, i32 8
  %6 = load %struct._IVL** %ewghtIVL, align 8, !tbaa !3
  %cmp15 = icmp eq %struct._IVL* %6, null
  br i1 %cmp15, label %if.then16, label %if.end19

if.then16:                                        ; preds = %land.lhs.true
  %7 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([91 x i8]* @.str5, i64 0, i64 0), %struct._Graph* %g, i32 %jvtx, i32* %psize, i32** %padj, i32** %pewghts, i32 %5) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end19:                                         ; preds = %land.lhs.true, %if.end13
  tail call void @IVL_listAndSize(%struct._IVL* %3, i32 %jvtx, i32* %psize, i32** %padj) #4
  %8 = load i32* %type, align 4, !tbaa !0
  %cmp22 = icmp sgt i32 %8, 1
  br i1 %cmp22, label %if.then23, label %if.else

if.then23:                                        ; preds = %if.end19
  %ewghtIVL24 = getelementptr inbounds %struct._Graph* %g, i64 0, i32 8
  %9 = load %struct._IVL** %ewghtIVL24, align 8, !tbaa !3
  tail call void @IVL_listAndSize(%struct._IVL* %9, i32 %jvtx, i32* %psize, i32** %pewghts) #4
  br label %if.end25

if.else:                                          ; preds = %if.end19
  store i32* null, i32** %pewghts, align 8, !tbaa !3
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then23
  ret void
}
