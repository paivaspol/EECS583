define void @DenseMtx_setFields(%struct._DenseMtx* %mtx, i32 %type, i32 %rowid, i32 %colid, i32 %nrow, i32 %ncol, i32 %inc1, i32 %inc2) #0 {
entry:
  %cmp = icmp eq %struct._DenseMtx* %mtx, null
  %cmp1 = icmp slt i32 %nrow, 0
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp slt i32 %ncol, 0
  %or.cond71 = or i1 %or.cond, %cmp3
  br i1 %or.cond71, label %if.then, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %entry
  %cmp5 = icmp eq i32 %inc1, %ncol
  %cmp6 = icmp eq i32 %inc2, 1
  %or.cond72 = and i1 %cmp5, %cmp6
  br i1 %or.cond72, label %if.end, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %lor.lhs.false4
  %cmp8 = icmp eq i32 %inc1, 1
  %cmp10 = icmp eq i32 %inc2, %nrow
  %or.cond73 = and i1 %cmp8, %cmp10
  br i1 %or.cond73, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false7, %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([70 x i8]* @.str4, i64 0, i64 0), %struct._DenseMtx* %mtx, i32 %rowid, i32 %colid, i32 %nrow, i32 %ncol, i32 %inc1, i32 %inc2) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %lor.lhs.false7, %lor.lhs.false4
  %wrkDV = getelementptr inbounds %struct._DenseMtx* %mtx, i64 0, i32 10
  %call11 = tail call double* @DV_entries(%struct._DV* %wrkDV) #4
  %1 = bitcast double* %call11 to i32*
  store i32 %type, i32* %1, align 4, !tbaa !3
  %type12 = getelementptr inbounds %struct._DenseMtx* %mtx, i64 0, i32 0
  store i32 %type, i32* %type12, align 4, !tbaa !3
  %arrayidx13 = getelementptr inbounds i32* %1, i64 1
  store i32 %rowid, i32* %arrayidx13, align 4, !tbaa !3
  %rowid14 = getelementptr inbounds %struct._DenseMtx* %mtx, i64 0, i32 1
  store i32 %rowid, i32* %rowid14, align 4, !tbaa !3
  %arrayidx1568 = getelementptr inbounds double* %call11, i64 1
  %arrayidx15 = bitcast double* %arrayidx1568 to i32*
  store i32 %colid, i32* %arrayidx15, align 4, !tbaa !3
  %colid16 = getelementptr inbounds %struct._DenseMtx* %mtx, i64 0, i32 2
  store i32 %colid, i32* %colid16, align 4, !tbaa !3
  %arrayidx17 = getelementptr inbounds i32* %1, i64 3
  store i32 %nrow, i32* %arrayidx17, align 4, !tbaa !3
  %nrow18 = getelementptr inbounds %struct._DenseMtx* %mtx, i64 0, i32 3
  store i32 %nrow, i32* %nrow18, align 4, !tbaa !3
  %arrayidx1969 = getelementptr inbounds double* %call11, i64 2
  %arrayidx19 = bitcast double* %arrayidx1969 to i32*
  store i32 %ncol, i32* %arrayidx19, align 4, !tbaa !3
  %ncol20 = getelementptr inbounds %struct._DenseMtx* %mtx, i64 0, i32 4
  store i32 %ncol, i32* %ncol20, align 4, !tbaa !3
  %arrayidx21 = getelementptr inbounds i32* %1, i64 5
  store i32 %inc1, i32* %arrayidx21, align 4, !tbaa !3
  %inc122 = getelementptr inbounds %struct._DenseMtx* %mtx, i64 0, i32 5
  store i32 %inc1, i32* %inc122, align 4, !tbaa !3
  %arrayidx2370 = getelementptr inbounds double* %call11, i64 3
  %arrayidx23 = bitcast double* %arrayidx2370 to i32*
  store i32 %inc2, i32* %arrayidx23, align 4, !tbaa !3
  %inc224 = getelementptr inbounds %struct._DenseMtx* %mtx, i64 0, i32 6
  store i32 %inc2, i32* %inc224, align 4, !tbaa !3
  %add.ptr = getelementptr inbounds i32* %1, i64 7
  %rowind = getelementptr inbounds %struct._DenseMtx* %mtx, i64 0, i32 7
  store i32* %add.ptr, i32** %rowind, align 8, !tbaa !0
  %idx.ext = sext i32 %nrow to i64
  %add.ptr.sum = add i64 %idx.ext, 7
  %add.ptr26 = getelementptr inbounds i32* %1, i64 %add.ptr.sum
  %colind = getelementptr inbounds %struct._DenseMtx* %mtx, i64 0, i32 8
  store i32* %add.ptr26, i32** %colind, align 8, !tbaa !0
  %add = add nsw i32 %nrow, 8
  %add27 = add nsw i32 %add, %ncol
  %div = sdiv i32 %add27, 2
  %idx.ext28 = sext i32 %div to i64
  %add.ptr29 = getelementptr inbounds double* %call11, i64 %idx.ext28
  %entries = getelementptr inbounds %struct._DenseMtx* %mtx, i64 0, i32 9
  store double* %add.ptr29, double** %entries, align 8, !tbaa !0
  ret void
}
