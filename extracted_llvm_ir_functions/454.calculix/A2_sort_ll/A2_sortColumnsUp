define i32 @A2_sortColumnsUp(%struct._A2* %mtx, i32 %ncol, i32* %colids) #0 {
  tail call void @llvm.dbg.value(metadata %struct._A2* %mtx, i64 0, metadata !56, metadata !74), !dbg !235
  tail call void @llvm.dbg.value(metadata i32 %ncol, i64 0, metadata !57, metadata !74), !dbg !236
  tail call void @llvm.dbg.value(metadata i32* %colids, i64 0, metadata !58, metadata !74), !dbg !237
  %1 = icmp eq %struct._A2* %mtx, null, !dbg !238
  br i1 %1, label %.thread, label %4, !dbg !240

.thread:                                          ; preds = %0
  %2 = load %struct.__sFILE** @__stderrp, align 8, !dbg !241, !tbaa !94
  %3 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %2, i8* getelementptr inbounds ([56 x i8]* @.str4, i64 0, i64 0), %struct._A2* null, i32 %ncol, i32* %colids) #5, !dbg !243
  br label %14, !dbg !244

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 2, !dbg !245
  %6 = load i32* %5, align 4, !dbg !245, !tbaa !159
  %7 = icmp slt i32 %6, %ncol, !dbg !246
  %8 = icmp slt i32 %ncol, 0, !dbg !247
  %or.cond = or i1 %8, %7, !dbg !248
  %9 = icmp eq i32* %colids, null, !dbg !249
  %or.cond3 = or i1 %9, %or.cond, !dbg !248
  br i1 %or.cond3, label %10, label %15, !dbg !248

; <label>:10                                      ; preds = %4
  %11 = load %struct.__sFILE** @__stderrp, align 8, !dbg !241, !tbaa !94
  %12 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %11, i8* getelementptr inbounds ([56 x i8]* @.str4, i64 0, i64 0), %struct._A2* %mtx, i32 %ncol, i32* %colids) #5, !dbg !243
  %13 = load %struct.__sFILE** @__stderrp, align 8, !dbg !250, !tbaa !94
  tail call void @A2_writeStats(%struct._A2* %mtx, %struct.__sFILE* %13) #5, !dbg !253
  br label %14, !dbg !254

; <label>:14                                      ; preds = %.thread, %10
  tail call void @exit(i32 -1) #6, !dbg !255
  unreachable, !dbg !255

; <label>:15                                      ; preds = %4
  %16 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 0, !dbg !256
  %17 = load i32* %16, align 4, !dbg !256, !tbaa !126
  %.off = add i32 %17, -1, !dbg !258
  %switch = icmp ult i32 %.off, 2, !dbg !258
  br i1 %switch, label %21, label %18, !dbg !258

; <label>:18                                      ; preds = %15
  %19 = load %struct.__sFILE** @__stderrp, align 8, !dbg !259, !tbaa !94
  %20 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %19, i8* getelementptr inbounds ([99 x i8]* @.str5, i64 0, i64 0), %struct._A2* %mtx, i32 %ncol, i32* %colids, i32 %17) #5, !dbg !261
  tail call void @exit(i32 -1) #6, !dbg !262
  unreachable, !dbg !262

; <label>:21                                      ; preds = %15
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !62, metadata !74), !dbg !263
  %22 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 4, !dbg !264
  %23 = load i32* %22, align 4, !dbg !264, !tbaa !265
  %24 = icmp eq i32 %23, 1, !dbg !266
  br i1 %24, label %28, label %.preheader, !dbg !267

.preheader:                                       ; preds = %21
  %25 = add i32 %ncol, -1, !dbg !268
  %26 = sext i32 %ncol to i64, !dbg !268
  %27 = icmp sgt i32 %ncol, 0, !dbg !268
  br i1 %27, label %.lr.ph29, label %.loopexit, !dbg !272

; <label>:28                                      ; preds = %21
  %29 = tail call i32* @IVinit(i32 %ncol, i32 -1) #5, !dbg !273
  tail call void @llvm.dbg.value(metadata i32* %29, i64 0, metadata !69, metadata !74), !dbg !274
  %30 = load i32* %16, align 4, !dbg !275, !tbaa !126
  switch i32 %30, label %36 [
    i32 1, label %31
    i32 2, label %33
  ], !dbg !277

; <label>:31                                      ; preds = %28
  %32 = tail call double* @DVinit(i32 %ncol, double 0.000000e+00) #5, !dbg !278
  tail call void @llvm.dbg.value(metadata double* %32, i64 0, metadata !64, metadata !74), !dbg !280
  br label %36, !dbg !281

; <label>:33                                      ; preds = %28
  %34 = shl nsw i32 %ncol, 1, !dbg !282
  %35 = tail call double* @DVinit(i32 %34, double 0.000000e+00) #5, !dbg !285
  tail call void @llvm.dbg.value(metadata double* %35, i64 0, metadata !64, metadata !74), !dbg !280
  br label %36, !dbg !286

; <label>:36                                      ; preds = %28, %33, %31
  %dvtmp.0 = phi double* [ %32, %31 ], [ %35, %33 ], [ undef, %28 ]
  tail call void @IVramp(i32 %ncol, i32* %29, i32 0, i32 1) #5, !dbg !287
  tail call void @IV2qsortUp(i32 %ncol, i32* %colids, i32* %29) #5, !dbg !288
  %37 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 1, !dbg !289
  %38 = load i32* %37, align 4, !dbg !289, !tbaa !83
  tail call void @llvm.dbg.value(metadata i32 %38, i64 0, metadata !68, metadata !74), !dbg !290
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !67, metadata !74), !dbg !291
  %39 = icmp sgt i32 %38, 0, !dbg !292
  br i1 %39, label %.lr.ph, label %._crit_edge, !dbg !295

.lr.ph:                                           ; preds = %36
  %40 = add i32 %38, -1, !dbg !295
  br label %41, !dbg !295

; <label>:41                                      ; preds = %49, %.lr.ph
  %irow.06 = phi i32 [ 0, %.lr.ph ], [ %50, %49 ]
  %42 = load i32* %16, align 4, !dbg !296, !tbaa !126
  switch i32 %42, label %49 [
    i32 1, label %43
    i32 2, label %46
  ], !dbg !299

; <label>:43                                      ; preds = %41
  %44 = tail call double* @A2_row(%struct._A2* %mtx, i32 %irow.06) #5, !dbg !300
  tail call void @DVcopy(i32 %ncol, double* %dvtmp.0, double* %44) #5, !dbg !302
  %45 = tail call double* @A2_row(%struct._A2* %mtx, i32 %irow.06) #5, !dbg !303
  tail call void @DVgather(i32 %ncol, double* %45, double* %dvtmp.0, i32* %29) #5, !dbg !304
  br label %49, !dbg !305

; <label>:46                                      ; preds = %41
  %47 = tail call double* @A2_row(%struct._A2* %mtx, i32 %irow.06) #5, !dbg !306
  tail call void @ZVcopy(i32 %ncol, double* %dvtmp.0, double* %47) #5, !dbg !309
  %48 = tail call double* @A2_row(%struct._A2* %mtx, i32 %irow.06) #5, !dbg !310
  tail call void @ZVgather(i32 %ncol, double* %48, double* %dvtmp.0, i32* %29) #5, !dbg !311
  br label %49, !dbg !312

; <label>:49                                      ; preds = %41, %43, %46
  %50 = add nuw nsw i32 %irow.06, 1, !dbg !313
  tail call void @llvm.dbg.value(metadata i32 %50, i64 0, metadata !67, metadata !74), !dbg !291
  %exitcond = icmp eq i32 %irow.06, %40, !dbg !295
  br i1 %exitcond, label %._crit_edge, label %41, !dbg !295

._crit_edge:                                      ; preds = %49, %36
  tail call void @IVfree(i32* %29) #5, !dbg !314
  tail call void @DVfree(double* %dvtmp.0) #5, !dbg !315
  br label %.loopexit, !dbg !316

; <label>:51                                      ; preds = %.lr.ph29, %.backedge
  %target.028 = phi i32 [ %target.0.ph32, %.lr.ph29 ], [ %54, %.backedge ]
  %indvars.iv27 = phi i64 [ %72, %.lr.ph29 ], [ %indvars.iv.be, %.backedge ]
  %indvars.iv1926 = phi i64 [ %71, %.lr.ph29 ], [ %indvars.iv19.be, %.backedge ]
  tail call void @llvm.dbg.value(metadata i32 %54, i64 0, metadata !60, metadata !74), !dbg !317
  %52 = getelementptr inbounds i32* %colids, i64 %indvars.iv1926, !dbg !318
  %53 = load i32* %52, align 4, !dbg !318, !tbaa !190
  tail call void @llvm.dbg.value(metadata i32 %53, i64 0, metadata !61, metadata !74), !dbg !320
  %54 = add nsw i32 %target.028, 1, !dbg !321
  tail call void @llvm.dbg.value(metadata i32 %54, i64 0, metadata !59, metadata !74), !dbg !323
  %55 = icmp slt i32 %54, %ncol, !dbg !324
  %56 = trunc i64 %indvars.iv1926 to i32, !dbg !326
  br i1 %55, label %.lr.ph11, label %.backedge, !dbg !326

.lr.ph11:                                         ; preds = %51, %.lr.ph11
  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %.lr.ph11 ], [ %indvars.iv27, %51 ]
  %ii.09 = phi i32 [ %61, %.lr.ph11 ], [ %54, %51 ]
  %mincol.08 = phi i32 [ %ii.0.mincol.0, %.lr.ph11 ], [ %56, %51 ]
  %mincolid.07 = phi i32 [ %.mincolid.0, %.lr.ph11 ], [ %53, %51 ]
  %57 = getelementptr inbounds i32* %colids, i64 %indvars.iv16, !dbg !327
  %58 = load i32* %57, align 4, !dbg !327, !tbaa !190
  %59 = icmp sgt i32 %mincolid.07, %58, !dbg !330
  tail call void @llvm.dbg.value(metadata i32 %61, i64 0, metadata !60, metadata !74), !dbg !317
  tail call void @llvm.dbg.value(metadata i32 %58, i64 0, metadata !61, metadata !74), !dbg !320
  %.mincolid.0 = select i1 %59, i32 %58, i32 %mincolid.07, !dbg !331
  %60 = trunc i64 %indvars.iv16 to i32, !dbg !331
  %ii.0.mincol.0 = select i1 %59, i32 %60, i32 %mincol.08, !dbg !331
  %61 = add nsw i32 %ii.09, 1, !dbg !332
  tail call void @llvm.dbg.value(metadata i32 %61, i64 0, metadata !59, metadata !74), !dbg !323
  %indvars.iv.next17 = add nsw i64 %indvars.iv16, 1, !dbg !326
  %exitcond18 = icmp eq i32 %ii.09, %25, !dbg !326
  br i1 %exitcond18, label %._crit_edge12, label %.lr.ph11, !dbg !326

._crit_edge12:                                    ; preds = %.lr.ph11
  %62 = icmp eq i32 %ii.0.mincol.0, %56, !dbg !333
  br i1 %62, label %.backedge, label %.outer, !dbg !335

.backedge:                                        ; preds = %51, %._crit_edge12
  %indvars.iv.be = add nsw i64 %indvars.iv27, 1, !dbg !335
  %indvars.iv19.be = add nsw i64 %indvars.iv1926, 1, !dbg !335
  %63 = icmp slt i64 %indvars.iv19.be, %26, !dbg !268
  br i1 %63, label %51, label %.loopexit, !dbg !272

.outer:                                           ; preds = %._crit_edge12
  %64 = sext i32 %ii.0.mincol.0 to i64, !dbg !336
  %65 = getelementptr inbounds i32* %colids, i64 %64, !dbg !336
  store i32 %53, i32* %65, align 4, !dbg !338, !tbaa !190
  store i32 %.mincolid.0, i32* %52, align 4, !dbg !339, !tbaa !190
  tail call void @A2_swapColumns(%struct._A2* %mtx, i32 %56, i32 %ii.0.mincol.0) #5, !dbg !340
  %66 = add nuw nsw i32 %nswap.0.ph31, 1, !dbg !341
  tail call void @llvm.dbg.value(metadata i32 %66, i64 0, metadata !62, metadata !74), !dbg !263
  %67 = add i32 %target.028, 2
  %68 = sext i32 %67 to i64
  %69 = sext i32 %54 to i64
  %70 = icmp slt i32 %54, %ncol, !dbg !268
  br i1 %70, label %.lr.ph29, label %.loopexit, !dbg !272

.lr.ph29:                                         ; preds = %.preheader, %.outer
  %71 = phi i64 [ %69, %.outer ], [ 0, %.preheader ]
  %72 = phi i64 [ %68, %.outer ], [ 1, %.preheader ]
  %target.0.ph32 = phi i32 [ %54, %.outer ], [ 0, %.preheader ]
  %nswap.0.ph31 = phi i32 [ %66, %.outer ], [ 0, %.preheader ]
  br label %51, !dbg !272

.loopexit:                                        ; preds = %.outer, %.preheader, %.backedge, %._crit_edge
  %nswap.2 = phi i32 [ 0, %._crit_edge ], [ 0, %.preheader ], [ %66, %.outer ], [ %nswap.0.ph31, %.backedge ]
  ret i32 %nswap.2, !dbg !342
}
