define i32 @A2_sortRowsUp(%struct._A2* %mtx, i32 %nrow, i32* %rowids) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._A2* %mtx}, i64 0, metadata !39), !dbg !83
  tail call void @llvm.dbg.value(metadata !{i32 %nrow}, i64 0, metadata !40), !dbg !84
  tail call void @llvm.dbg.value(metadata !{i32* %rowids}, i64 0, metadata !41), !dbg !85
  %cmp = icmp eq %struct._A2* %mtx, null, !dbg !86
  br i1 %cmp, label %if.then.thread, label %lor.lhs.false, !dbg !86

if.then.thread:                                   ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !87, !tbaa !76
  %call147 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([53 x i8]* @.str2, i64 0, i64 0), %struct._A2* null, i32 %nrow, i32* %rowids) #5, !dbg !87
  br label %if.end, !dbg !89

lor.lhs.false:                                    ; preds = %entry
  %n1 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 1, !dbg !86
  %1 = load i32* %n1, align 4, !dbg !86, !tbaa !71
  %cmp1 = icmp slt i32 %1, %nrow, !dbg !86
  %cmp3 = icmp slt i32 %nrow, 0, !dbg !86
  %or.cond = or i1 %cmp1, %cmp3, !dbg !86
  %cmp5 = icmp eq i32* %rowids, null, !dbg !86
  %or.cond146 = or i1 %or.cond, %cmp5, !dbg !86
  br i1 %or.cond146, label %if.then7, label %if.end8, !dbg !86

if.then7:                                         ; preds = %lor.lhs.false
  %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !87, !tbaa !76
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([53 x i8]* @.str2, i64 0, i64 0), %struct._A2* %mtx, i32 %nrow, i32* %rowids) #5, !dbg !87
  %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !90, !tbaa !76
  tail call void @A2_writeStats(%struct._A2* %mtx, %struct._IO_FILE* %3) #5, !dbg !90
  br label %if.end, !dbg !92

if.end:                                           ; preds = %if.then.thread, %if.then7
  tail call void @exit(i32 -1) #6, !dbg !93
  unreachable, !dbg !93

if.end8:                                          ; preds = %lor.lhs.false
  %type = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 0, !dbg !94
  %4 = load i32* %type, align 4, !dbg !94, !tbaa !71
  %.off = add i32 %4, -1, !dbg !94
  %switch = icmp ult i32 %.off, 2, !dbg !94
  br i1 %switch, label %if.end16, label %if.then13, !dbg !94

if.then13:                                        ; preds = %if.end8
  %5 = load %struct._IO_FILE** @stderr, align 8, !dbg !95, !tbaa !76
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([96 x i8]* @.str3, i64 0, i64 0), %struct._A2* %mtx, i32 %nrow, i32* %rowids, i32 %4) #5, !dbg !95
  tail call void @exit(i32 -1) #6, !dbg !97
  unreachable, !dbg !97

if.end16:                                         ; preds = %if.end8
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !45), !dbg !98
  %inc1 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 3, !dbg !99
  %6 = load i32* %inc1, align 4, !dbg !99, !tbaa !71
  %cmp17 = icmp eq i32 %6, 1, !dbg !99
  br i1 %cmp17, label %if.then18, label %for.cond45.outer, !dbg !99

if.then18:                                        ; preds = %if.end16
  %call19 = tail call i32* @IVinit(i32 %nrow, i32 -1) #5, !dbg !100
  tail call void @llvm.dbg.value(metadata !{i32* %call19}, i64 0, metadata !51), !dbg !100
  %7 = load i32* %type, align 4, !dbg !101, !tbaa !71
  switch i32 %7, label %if.end29 [
    i32 1, label %if.then22
    i32 2, label %if.then26
  ], !dbg !101

if.then22:                                        ; preds = %if.then18
  %call23 = tail call double* @DVinit(i32 %nrow, double 0.000000e+00) #5, !dbg !102
  tail call void @llvm.dbg.value(metadata !{double* %call23}, i64 0, metadata !47), !dbg !102
  br label %if.end29, !dbg !104

if.then26:                                        ; preds = %if.then18
  %mul = shl nsw i32 %nrow, 1, !dbg !105
  %call27 = tail call double* @DVinit(i32 %mul, double 0.000000e+00) #5, !dbg !105
  tail call void @llvm.dbg.value(metadata !{double* %call27}, i64 0, metadata !47), !dbg !105
  br label %if.end29, !dbg !107

if.end29:                                         ; preds = %if.then18, %if.then26, %if.then22
  %dvtmp.0 = phi double* [ %call23, %if.then22 ], [ %call27, %if.then26 ], [ undef, %if.then18 ]
  tail call void @IVramp(i32 %nrow, i32* %call19, i32 0, i32 1) #5, !dbg !108
  tail call void @IV2qsortUp(i32 %nrow, i32* %rowids, i32* %call19) #5, !dbg !109
  %n2 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 2, !dbg !110
  %8 = load i32* %n2, align 4, !dbg !110, !tbaa !71
  tail call void @llvm.dbg.value(metadata !{i32 %8}, i64 0, metadata !50), !dbg !110
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !49), !dbg !111
  %cmp30148 = icmp sgt i32 %8, 0, !dbg !111
  br i1 %cmp30148, label %for.body, label %for.end, !dbg !111

for.body:                                         ; preds = %for.inc, %if.end29
  %jcol.0149 = phi i32 [ 0, %if.end29 ], [ %inc, %for.inc ]
  %9 = load i32* %type, align 4, !dbg !113, !tbaa !71
  switch i32 %9, label %for.inc [
    i32 1, label %if.then33
    i32 2, label %if.then39
  ], !dbg !113

if.then33:                                        ; preds = %for.body
  %call34 = tail call double* @A2_column(%struct._A2* %mtx, i32 %jcol.0149) #5, !dbg !115
  tail call void @DVcopy(i32 %nrow, double* %dvtmp.0, double* %call34) #5, !dbg !115
  %call35 = tail call double* @A2_column(%struct._A2* %mtx, i32 %jcol.0149) #5, !dbg !117
  tail call void @DVgather(i32 %nrow, double* %call35, double* %dvtmp.0, i32* %call19) #5, !dbg !117
  br label %for.inc, !dbg !118

if.then39:                                        ; preds = %for.body
  %call40 = tail call double* @A2_column(%struct._A2* %mtx, i32 %jcol.0149) #5, !dbg !119
  tail call void @ZVcopy(i32 %nrow, double* %dvtmp.0, double* %call40) #5, !dbg !119
  %call41 = tail call double* @A2_column(%struct._A2* %mtx, i32 %jcol.0149) #5, !dbg !121
  tail call void @ZVgather(i32 %nrow, double* %call41, double* %dvtmp.0, i32* %call19) #5, !dbg !121
  br label %for.inc, !dbg !122

for.inc:                                          ; preds = %for.body, %if.then33, %if.then39
  %inc = add nsw i32 %jcol.0149, 1, !dbg !111
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !49), !dbg !111
  %exitcond = icmp eq i32 %inc, %8, !dbg !111
  br i1 %exitcond, label %for.end, label %for.body, !dbg !111

for.end:                                          ; preds = %for.inc, %if.end29
  tail call void @IVfree(i32* %call19) #5, !dbg !123
  tail call void @DVfree(double* %dvtmp.0) #5, !dbg !124
  br label %if.end74, !dbg !125

for.cond45:                                       ; preds = %for.body47, %for.cond45.outer, %for.end60
  %indvars.iv161 = phi i64 [ %15, %for.cond45.outer ], [ %indvars.iv.next162, %for.end60 ], [ %indvars.iv.next162, %for.body47 ]
  %indvars.iv.in = phi i64 [ %15, %for.cond45.outer ], [ %indvars.iv, %for.end60 ], [ %indvars.iv, %for.body47 ]
  %target.0 = phi i32 [ %target.0.ph, %for.cond45.outer ], [ %add, %for.end60 ], [ %add, %for.body47 ]
  %indvars.iv = add i64 %indvars.iv.in, 1
  %10 = trunc i64 %indvars.iv161 to i32, !dbg !126
  %cmp46 = icmp slt i32 %10, %nrow, !dbg !126
  br i1 %cmp46, label %for.body47, label %if.end74, !dbg !126

for.body47:                                       ; preds = %for.cond45
  tail call void @llvm.dbg.value(metadata !{i32 %target.0}, i64 0, metadata !43), !dbg !129
  %arrayidx = getelementptr inbounds i32* %rowids, i64 %indvars.iv161, !dbg !131
  %11 = load i32* %arrayidx, align 4, !dbg !131, !tbaa !71
  tail call void @llvm.dbg.value(metadata !{i32 %11}, i64 0, metadata !44), !dbg !131
  %indvars.iv.next162 = add i64 %indvars.iv161, 1, !dbg !132
  %add = add nsw i32 %target.0, 1, !dbg !133
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !42), !dbg !133
  %12 = trunc i64 %indvars.iv.next162 to i32, !dbg !133
  %cmp49150 = icmp slt i32 %12, %nrow, !dbg !133
  br i1 %cmp49150, label %for.body50, label %for.cond45, !dbg !133

for.body50:                                       ; preds = %for.body47, %for.body50
  %indvars.iv156 = phi i64 [ %indvars.iv.next157, %for.body50 ], [ %indvars.iv, %for.body47 ], !dbg !132
  %ii.0153 = phi i32 [ %inc59, %for.body50 ], [ %add, %for.body47 ]
  %minrow.0152 = phi i32 [ %ii.0.minrow.0, %for.body50 ], [ %target.0, %for.body47 ]
  %minrowid.0151 = phi i32 [ %.minrowid.0, %for.body50 ], [ %11, %for.body47 ]
  %arrayidx52 = getelementptr inbounds i32* %rowids, i64 %indvars.iv156, !dbg !135
  %13 = load i32* %arrayidx52, align 4, !dbg !135, !tbaa !71
  %cmp53 = icmp sgt i32 %minrowid.0151, %13, !dbg !135
  tail call void @llvm.dbg.value(metadata !{i32 %ii.0153}, i64 0, metadata !43), !dbg !137
  tail call void @llvm.dbg.value(metadata !{i32 %13}, i64 0, metadata !44), !dbg !139
  %.minrowid.0 = select i1 %cmp53, i32 %13, i32 %minrowid.0151, !dbg !135
  %14 = trunc i64 %indvars.iv156 to i32, !dbg !135
  %ii.0.minrow.0 = select i1 %cmp53, i32 %14, i32 %minrow.0152, !dbg !135
  %inc59 = add nsw i32 %ii.0153, 1, !dbg !133
  tail call void @llvm.dbg.value(metadata !{i32 %inc59}, i64 0, metadata !42), !dbg !133
  %indvars.iv.next157 = add i64 %indvars.iv156, 1, !dbg !133
  %exitcond159 = icmp eq i32 %inc59, %nrow, !dbg !133
  br i1 %exitcond159, label %for.end60, label %for.body50, !dbg !133

for.end60:                                        ; preds = %for.body50
  %cmp61 = icmp eq i32 %ii.0.minrow.0, %10, !dbg !132
  br i1 %cmp61, label %for.cond45, label %if.then62, !dbg !132

if.then62:                                        ; preds = %for.end60
  %idxprom65 = sext i32 %ii.0.minrow.0 to i64, !dbg !140
  %arrayidx66 = getelementptr inbounds i32* %rowids, i64 %idxprom65, !dbg !140
  store i32 %11, i32* %arrayidx66, align 4, !dbg !140, !tbaa !71
  store i32 %.minrowid.0, i32* %arrayidx, align 4, !dbg !142, !tbaa !71
  tail call void @A2_swapRows(%struct._A2* %mtx, i32 %target.0, i32 %ii.0.minrow.0) #5, !dbg !143
  %inc69 = add nsw i32 %nswap.0.ph, 1, !dbg !144
  tail call void @llvm.dbg.value(metadata !{i32 %inc69}, i64 0, metadata !45), !dbg !144
  br label %for.cond45.outer, !dbg !145

for.cond45.outer:                                 ; preds = %if.end16, %if.then62
  %nswap.0.ph = phi i32 [ %inc69, %if.then62 ], [ 0, %if.end16 ]
  %target.0.ph = phi i32 [ %add, %if.then62 ], [ 0, %if.end16 ]
  %15 = sext i32 %target.0.ph to i64
  br label %for.cond45

if.end74:                                         ; preds = %for.cond45, %for.end
  %nswap.2 = phi i32 [ 0, %for.end ], [ %nswap.0.ph, %for.cond45 ]
  ret i32 %nswap.2, !dbg !146
}
