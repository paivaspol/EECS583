define %struct._IV* @Tree_setSubtreeImetric(%struct._Tree* %tree, %struct._IV* %vmetricIV) #0 {
entry:
  %cmp = icmp eq %struct._Tree* %tree, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %n = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 0
  %0 = load i32* %n, align 4, !tbaa !0
  %cmp1 = icmp slt i32 %0, 1
  %cmp3 = icmp eq %struct._IV* %vmetricIV, null
  %or.cond = or i1 %cmp1, %cmp3
  br i1 %or.cond, label %if.then, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %call = tail call i32 @IV_size(%struct._IV* %vmetricIV) #4
  %cmp6 = icmp eq i32 %0, %call
  br i1 %cmp6, label %lor.lhs.false7, label %if.then

lor.lhs.false7:                                   ; preds = %lor.lhs.false4
  %call8 = tail call i32* @IV_entries(%struct._IV* %vmetricIV) #4
  %cmp9 = icmp eq i32* %call8, null
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false7, %lor.lhs.false, %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([59 x i8]* @.str, i64 0, i64 0), %struct._Tree* %tree, %struct._IV* %vmetricIV) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %lor.lhs.false7
  %call11 = tail call %struct._IV* @IV_new() #4
  %2 = load i32* %n, align 4, !tbaa !0
  tail call void @IV_init(%struct._IV* %call11, i32 %2, i32* null) #4
  %call13 = tail call i32* @IV_entries(%struct._IV* %call11) #4
  %call14 = tail call i32 @Tree_postOTfirst(%struct._Tree* %tree) #4
  %cmp1557 = icmp eq i32 %call14, -1
  br i1 %cmp1557, label %for.end31, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end
  %fch = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 3
  %sib = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc29
  %v.058 = phi i32 [ %call14, %for.body.lr.ph ], [ %call30, %for.inc29 ]
  %idxprom = sext i32 %v.058 to i64
  %arrayidx = getelementptr inbounds i32* %call8, i64 %idxprom
  %3 = load i32* %arrayidx, align 4, !tbaa !0
  %arrayidx17 = getelementptr inbounds i32* %call13, i64 %idxprom
  store i32 %3, i32* %arrayidx17, align 4, !tbaa !0
  %4 = load i32** %fch, align 8, !tbaa !3
  %arrayidx19 = getelementptr inbounds i32* %4, i64 %idxprom
  %u.054 = load i32* %arrayidx19, align 4
  %cmp2155 = icmp eq i32 %u.054, -1
  br i1 %cmp2155, label %for.inc29, label %for.body22.lr.ph

for.body22.lr.ph:                                 ; preds = %for.body
  %.pre = load i32** %sib, align 8, !tbaa !3
  br label %for.body22

for.body22:                                       ; preds = %for.body22.lr.ph, %for.body22
  %5 = phi i32 [ %3, %for.body22.lr.ph ], [ %add, %for.body22 ]
  %u.056 = phi i32 [ %u.054, %for.body22.lr.ph ], [ %u.0, %for.body22 ]
  %idxprom23 = sext i32 %u.056 to i64
  %arrayidx24 = getelementptr inbounds i32* %call13, i64 %idxprom23
  %6 = load i32* %arrayidx24, align 4, !tbaa !0
  %add = add nsw i32 %5, %6
  store i32 %add, i32* %arrayidx17, align 4, !tbaa !0
  %arrayidx28 = getelementptr inbounds i32* %.pre, i64 %idxprom23
  %u.0 = load i32* %arrayidx28, align 4
  %cmp21 = icmp eq i32 %u.0, -1
  br i1 %cmp21, label %for.inc29, label %for.body22

for.inc29:                                        ; preds = %for.body22, %for.body
  %call30 = tail call i32 @Tree_postOTnext(%struct._Tree* %tree, i32 %v.058) #4
  %cmp15 = icmp eq i32 %call30, -1
  br i1 %cmp15, label %for.end31, label %for.body

for.end31:                                        ; preds = %for.inc29, %if.end
  ret %struct._IV* %call11
}
