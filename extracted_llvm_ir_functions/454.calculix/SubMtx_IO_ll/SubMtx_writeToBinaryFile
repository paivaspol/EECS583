define i32 @SubMtx_writeToBinaryFile(%struct._SubMtx* %mtx, %struct._IO_FILE* %fp) #0 {
entry:
  %entries = alloca double*, align 8
  %inc1 = alloca i32, align 4
  %inc2 = alloca i32, align 4
  %ncol = alloca i32, align 4
  %nent = alloca i32, align 4
  %nrow = alloca i32, align 4
  %itemp = alloca [7 x i32], align 16
  %colids = alloca i32*, align 8
  %colind = alloca i32*, align 8
  %firstlocs = alloca i32*, align 8
  %indices = alloca i32*, align 8
  %pivotsizes = alloca i32*, align 8
  %rowids = alloca i32*, align 8
  %rowind = alloca i32*, align 8
  %sizes = alloca i32*, align 8
  %cmp = icmp eq %struct._SubMtx* %mtx, null
  %cmp1 = icmp eq %struct._IO_FILE* %fp, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([61 x i8]* @.str43, i64 0, i64 0), %struct._SubMtx* %mtx, %struct._IO_FILE* %fp) #5
  call void @exit(i32 -1) #8
  unreachable

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 0
  %1 = load i32* %type, align 4, !tbaa !3
  %arrayidx = getelementptr inbounds [7 x i32]* %itemp, i64 0, i64 0
  store i32 %1, i32* %arrayidx, align 16, !tbaa !3
  %mode = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 1
  %2 = load i32* %mode, align 4, !tbaa !3
  %arrayidx2 = getelementptr inbounds [7 x i32]* %itemp, i64 0, i64 1
  store i32 %2, i32* %arrayidx2, align 4, !tbaa !3
  %rowid = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 2
  %3 = load i32* %rowid, align 4, !tbaa !3
  %arrayidx3 = getelementptr inbounds [7 x i32]* %itemp, i64 0, i64 2
  store i32 %3, i32* %arrayidx3, align 8, !tbaa !3
  %colid = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 3
  %4 = load i32* %colid, align 4, !tbaa !3
  %arrayidx4 = getelementptr inbounds [7 x i32]* %itemp, i64 0, i64 3
  store i32 %4, i32* %arrayidx4, align 4, !tbaa !3
  %nrow5 = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 4
  %5 = load i32* %nrow5, align 4, !tbaa !3
  %arrayidx6 = getelementptr inbounds [7 x i32]* %itemp, i64 0, i64 4
  store i32 %5, i32* %arrayidx6, align 16, !tbaa !3
  %ncol7 = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 5
  %6 = load i32* %ncol7, align 4, !tbaa !3
  %arrayidx8 = getelementptr inbounds [7 x i32]* %itemp, i64 0, i64 5
  store i32 %6, i32* %arrayidx8, align 4, !tbaa !3
  %nent9 = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 6
  %7 = load i32* %nent9, align 4, !tbaa !3
  %arrayidx10 = getelementptr inbounds [7 x i32]* %itemp, i64 0, i64 6
  store i32 %7, i32* %arrayidx10, align 8, !tbaa !3
  %8 = bitcast [7 x i32]* %itemp to i8*
  %call11 = call i64 @fwrite(i8* %8, i64 4, i64 7, %struct._IO_FILE* %fp) #5
  call void @SubMtx_rowIndices(%struct._SubMtx* %mtx, i32* %nrow, i32** %rowind) #5
  %9 = load i32** %rowind, align 8, !tbaa !0
  %10 = bitcast i32* %9 to i8*
  %11 = load i32* %nrow, align 4, !tbaa !3
  %conv12 = sext i32 %11 to i64
  %call13 = call i64 @fwrite(i8* %10, i64 4, i64 %conv12, %struct._IO_FILE* %fp) #5
  call void @SubMtx_columnIndices(%struct._SubMtx* %mtx, i32* %ncol, i32** %colind) #5
  %12 = load i32** %colind, align 8, !tbaa !0
  %13 = bitcast i32* %12 to i8*
  %14 = load i32* %ncol, align 4, !tbaa !3
  %conv15 = sext i32 %14 to i64
  %call16 = call i64 @fwrite(i8* %13, i64 4, i64 %conv15, %struct._IO_FILE* %fp) #5
  %15 = load i32* %mode, align 4, !tbaa !3
  switch i32 %15, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb19
    i32 3, label %sw.bb26
    i32 4, label %sw.bb33
    i32 5, label %sw.bb40
    i32 6, label %sw.bb47
    i32 7, label %sw.bb54
    i32 8, label %sw.bb55
    i32 9, label %sw.bb55
  ]

sw.bb:                                            ; preds = %if.end, %if.end
  call void @SubMtx_denseInfo(%struct._SubMtx* %mtx, i32* %nrow, i32* %ncol, i32* %inc1, i32* %inc2, double** %entries) #5
  %16 = load i32* %nrow, align 4, !tbaa !3
  %17 = load i32* %ncol, align 4, !tbaa !3
  %mul = mul nsw i32 %17, %16
  store i32 %mul, i32* %nent, align 4, !tbaa !3
  br label %sw.epilog

sw.bb19:                                          ; preds = %if.end
  call void @SubMtx_sparseRowsInfo(%struct._SubMtx* %mtx, i32* %nrow, i32* %nent, i32** %sizes, i32** %indices, double** %entries) #5
  %18 = load i32** %sizes, align 8, !tbaa !0
  %19 = bitcast i32* %18 to i8*
  %20 = load i32* %nrow, align 4, !tbaa !3
  %conv20 = sext i32 %20 to i64
  %call21 = call i64 @fwrite(i8* %19, i64 4, i64 %conv20, %struct._IO_FILE* %fp) #5
  %21 = load i32** %indices, align 8, !tbaa !0
  %22 = bitcast i32* %21 to i8*
  %23 = load i32* %nent, align 4, !tbaa !3
  %conv23 = sext i32 %23 to i64
  %call24 = call i64 @fwrite(i8* %22, i64 4, i64 %conv23, %struct._IO_FILE* %fp) #5
  br label %sw.epilog

sw.bb26:                                          ; preds = %if.end
  call void @SubMtx_sparseColumnsInfo(%struct._SubMtx* %mtx, i32* %ncol, i32* %nent, i32** %sizes, i32** %indices, double** %entries) #5
  %24 = load i32** %sizes, align 8, !tbaa !0
  %25 = bitcast i32* %24 to i8*
  %26 = load i32* %ncol, align 4, !tbaa !3
  %conv27 = sext i32 %26 to i64
  %call28 = call i64 @fwrite(i8* %25, i64 4, i64 %conv27, %struct._IO_FILE* %fp) #5
  %27 = load i32** %indices, align 8, !tbaa !0
  %28 = bitcast i32* %27 to i8*
  %29 = load i32* %nent, align 4, !tbaa !3
  %conv30 = sext i32 %29 to i64
  %call31 = call i64 @fwrite(i8* %28, i64 4, i64 %conv30, %struct._IO_FILE* %fp) #5
  br label %sw.epilog

sw.bb33:                                          ; preds = %if.end
  call void @SubMtx_sparseTriplesInfo(%struct._SubMtx* %mtx, i32* %nent, i32** %rowids, i32** %colids, double** %entries) #5
  %30 = load i32** %rowids, align 8, !tbaa !0
  %31 = bitcast i32* %30 to i8*
  %32 = load i32* %nent, align 4, !tbaa !3
  %conv34 = sext i32 %32 to i64
  %call35 = call i64 @fwrite(i8* %31, i64 4, i64 %conv34, %struct._IO_FILE* %fp) #5
  %33 = load i32** %colids, align 8, !tbaa !0
  %34 = bitcast i32* %33 to i8*
  %35 = load i32* %nent, align 4, !tbaa !3
  %conv37 = sext i32 %35 to i64
  %call38 = call i64 @fwrite(i8* %34, i64 4, i64 %conv37, %struct._IO_FILE* %fp) #5
  br label %sw.epilog

sw.bb40:                                          ; preds = %if.end
  call void @SubMtx_denseSubrowsInfo(%struct._SubMtx* %mtx, i32* %nrow, i32* %nent, i32** %firstlocs, i32** %sizes, double** %entries) #5
  %36 = load i32** %firstlocs, align 8, !tbaa !0
  %37 = bitcast i32* %36 to i8*
  %38 = load i32* %nrow, align 4, !tbaa !3
  %conv41 = sext i32 %38 to i64
  %call42 = call i64 @fwrite(i8* %37, i64 4, i64 %conv41, %struct._IO_FILE* %fp) #5
  %39 = load i32** %sizes, align 8, !tbaa !0
  %40 = bitcast i32* %39 to i8*
  %41 = load i32* %nrow, align 4, !tbaa !3
  %conv44 = sext i32 %41 to i64
  %call45 = call i64 @fwrite(i8* %40, i64 4, i64 %conv44, %struct._IO_FILE* %fp) #5
  br label %sw.epilog

sw.bb47:                                          ; preds = %if.end
  call void @SubMtx_denseSubcolumnsInfo(%struct._SubMtx* %mtx, i32* %ncol, i32* %nent, i32** %firstlocs, i32** %sizes, double** %entries) #5
  %42 = load i32** %firstlocs, align 8, !tbaa !0
  %43 = bitcast i32* %42 to i8*
  %44 = load i32* %ncol, align 4, !tbaa !3
  %conv48 = sext i32 %44 to i64
  %call49 = call i64 @fwrite(i8* %43, i64 4, i64 %conv48, %struct._IO_FILE* %fp) #5
  %45 = load i32** %sizes, align 8, !tbaa !0
  %46 = bitcast i32* %45 to i8*
  %47 = load i32* %ncol, align 4, !tbaa !3
  %conv51 = sext i32 %47 to i64
  %call52 = call i64 @fwrite(i8* %46, i64 4, i64 %conv51, %struct._IO_FILE* %fp) #5
  br label %sw.epilog

sw.bb54:                                          ; preds = %if.end
  call void @SubMtx_diagonalInfo(%struct._SubMtx* %mtx, i32* %nent, double** %entries) #5
  br label %sw.epilog

sw.bb55:                                          ; preds = %if.end, %if.end
  call void @SubMtx_blockDiagonalInfo(%struct._SubMtx* %mtx, i32* %nrow, i32* %nent, i32** %pivotsizes, double** %entries) #5
  %48 = load i32** %pivotsizes, align 8, !tbaa !0
  %49 = bitcast i32* %48 to i8*
  %50 = load i32* %nrow, align 4, !tbaa !3
  %conv56 = sext i32 %50 to i64
  %call57 = call i64 @fwrite(i8* %49, i64 4, i64 %conv56, %struct._IO_FILE* %fp) #5
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end, %sw.bb55, %sw.bb54, %sw.bb47, %sw.bb40, %sw.bb33, %sw.bb26, %sw.bb19, %sw.bb
  %51 = load i32* %type, align 4, !tbaa !3
  switch i32 %51, label %if.end75 [
    i32 1, label %if.then62
    i32 2, label %if.then69
  ]

if.then62:                                        ; preds = %sw.epilog
  %52 = load double** %entries, align 8, !tbaa !0
  %53 = bitcast double* %52 to i8*
  %54 = load i32* %nent, align 4, !tbaa !3
  %conv63 = sext i32 %54 to i64
  %call64 = call i64 @fwrite(i8* %53, i64 8, i64 %conv63, %struct._IO_FILE* %fp) #5
  br label %if.end75

if.then69:                                        ; preds = %sw.epilog
  %55 = load double** %entries, align 8, !tbaa !0
  %56 = bitcast double* %55 to i8*
  %57 = load i32* %nent, align 4, !tbaa !3
  %mul70 = shl nsw i32 %57, 1
  %conv71 = sext i32 %mul70 to i64
  %call72 = call i64 @fwrite(i8* %56, i64 8, i64 %conv71, %struct._IO_FILE* %fp) #5
  br label %if.end75

if.end75:                                         ; preds = %sw.epilog, %if.then69, %if.then62
  ret i32 1
}
