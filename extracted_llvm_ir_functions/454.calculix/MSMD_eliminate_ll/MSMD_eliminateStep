define i32 @MSMD_eliminateStep(%struct._MSMD* %msmd, %struct._MSMDinfo* %info) #0 {
entry:
  %deg = alloca i32, align 4
  %mindeg = alloca i32, align 4
  %vid = alloca i32, align 4
  %cmp = icmp eq %struct._MSMD* %msmd, null
  %cmp1 = icmp eq %struct._MSMDinfo* %info, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([51 x i8]* @.str13, i64 0, i64 0), %struct._MSMD* %msmd, %struct._MSMDinfo* %info) #5
  call void @exit(i32 -1) #6
  unreachable

if.end:                                           ; preds = %entry
  %heap = getelementptr inbounds %struct._MSMD* %msmd, i64 0, i32 1
  %1 = load %struct._IIheap** %heap, align 8, !tbaa !0
  %size = getelementptr inbounds %struct._IIheap* %1, i64 0, i32 0
  %2 = load i32* %size, align 4, !tbaa !3
  %cmp2 = icmp eq i32 %2, 0
  br i1 %cmp2, label %return, label %if.end4

if.end4:                                          ; preds = %if.end
  %msglvl = getelementptr inbounds %struct._MSMDinfo* %info, i64 0, i32 4
  %3 = load i32* %msglvl, align 4, !tbaa !3
  %cmp5 = icmp sgt i32 %3, 2
  br i1 %cmp5, label %if.then6, label %if.end4.if.end10_crit_edge

if.end4.if.end10_crit_edge:                       ; preds = %if.end4
  %stageInfo11.pre = getelementptr inbounds %struct._MSMDinfo* %info, i64 0, i32 10
  br label %if.end10

if.then6:                                         ; preds = %if.end4
  %msgFile = getelementptr inbounds %struct._MSMDinfo* %info, i64 0, i32 5
  %4 = load %struct._IO_FILE** %msgFile, align 8, !tbaa !0
  %stageInfo = getelementptr inbounds %struct._MSMDinfo* %info, i64 0, i32 10
  %5 = load %struct._MSMDstageInfo** %stageInfo, align 8, !tbaa !0
  %nstep = getelementptr inbounds %struct._MSMDstageInfo* %5, i64 0, i32 0
  %6 = load i32* %nstep, align 4, !tbaa !3
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([10 x i8]* @.str14, i64 0, i64 0), i32 %6) #5
  %7 = load %struct._IO_FILE** %msgFile, align 8, !tbaa !0
  %call9 = call i32 @fflush(%struct._IO_FILE* %7) #5
  %.pre = load %struct._IIheap** %heap, align 8, !tbaa !0
  br label %if.end10

if.end10:                                         ; preds = %if.end4.if.end10_crit_edge, %if.then6
  %stageInfo11.pre-phi = phi %struct._MSMDstageInfo** [ %stageInfo11.pre, %if.end4.if.end10_crit_edge ], [ %stageInfo, %if.then6 ]
  %8 = phi %struct._IIheap* [ %1, %if.end4.if.end10_crit_edge ], [ %.pre, %if.then6 ]
  %9 = load %struct._MSMDstageInfo** %stageInfo11.pre-phi, align 8, !tbaa !0
  %nstep12 = getelementptr inbounds %struct._MSMDstageInfo* %9, i64 0, i32 0
  %10 = load i32* %nstep12, align 4, !tbaa !3
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %nstep12, align 4, !tbaa !3
  call void @IIheap_root(%struct._IIheap* %8, i32* %vid, i32* %mindeg) #5
  %stepType = getelementptr inbounds %struct._MSMDinfo* %info, i64 0, i32 2
  %11 = load double* %stepType, align 8, !tbaa !4
  %cmp14 = fcmp ugt double %11, 1.000000e+00
  %12 = load i32* %mindeg, align 4, !tbaa !3
  br i1 %cmp14, label %if.else, label %do.body.preheader

if.else:                                          ; preds = %if.end10
  %conv = sitofp i32 %12 to double
  %mul = fmul double %11, %conv
  %conv17 = fptosi double %mul to i32
  br label %do.body.preheader

do.body.preheader:                                ; preds = %if.else, %if.end10
  %maxdeg.0.ph = phi i32 [ %12, %if.end10 ], [ %conv17, %if.else ]
  %vertices = getelementptr inbounds %struct._MSMD* %msmd, i64 0, i32 5
  %msgFile28 = getelementptr inbounds %struct._MSMDinfo* %info, i64 0, i32 5
  %.pre124 = load %struct._IIheap** %heap, align 8, !tbaa !0
  br label %do.body

do.body:                                          ; preds = %do.body.preheader, %do.cond
  %13 = phi %struct._IIheap* [ %34, %do.cond ], [ %.pre124, %do.body.preheader ]
  %nelim.0 = phi i32 [ %inc37, %do.cond ], [ 0, %do.body.preheader ]
  call void @IIheap_root(%struct._IIheap* %13, i32* %vid, i32* %deg) #5
  %14 = load i32* %deg, align 4, !tbaa !3
  %cmp20 = icmp sgt i32 %14, %maxdeg.0.ph
  br i1 %cmp20, label %return, label %if.end23

if.end23:                                         ; preds = %do.body
  %15 = load %struct._MSMDvtx** %vertices, align 8, !tbaa !0
  %16 = load i32* %vid, align 4, !tbaa !3
  %idx.ext = sext i32 %16 to i64
  %add.ptr = getelementptr inbounds %struct._MSMDvtx* %15, i64 %idx.ext
  %17 = load i32* %msglvl, align 4, !tbaa !3
  %cmp25 = icmp sgt i32 %17, 1
  br i1 %cmp25, label %if.then27, label %if.end23.if.end32_crit_edge

if.end23.if.end32_crit_edge:                      ; preds = %if.end23
  %wght35.pre = getelementptr inbounds %struct._MSMDvtx* %15, i64 %idx.ext, i32 4
  br label %if.end32

if.then27:                                        ; preds = %if.end23
  %18 = load %struct._IO_FILE** %msgFile28, align 8, !tbaa !0
  %wght = getelementptr inbounds %struct._MSMDvtx* %15, i64 %idx.ext, i32 4
  %19 = load i32* %wght, align 4, !tbaa !3
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([46 x i8]* @.str15, i64 0, i64 0), i32 %16, i32 %19, i32 %14) #5
  %20 = load %struct._IO_FILE** %msgFile28, align 8, !tbaa !0
  %call31 = call i32 @fflush(%struct._IO_FILE* %20) #5
  br label %if.end32

if.end32:                                         ; preds = %if.end23.if.end32_crit_edge, %if.then27
  %wght35.pre-phi = phi i32* [ %wght35.pre, %if.end23.if.end32_crit_edge ], [ %wght, %if.then27 ]
  %21 = load %struct._MSMDstageInfo** %stageInfo11.pre-phi, align 8, !tbaa !0
  %nfront = getelementptr inbounds %struct._MSMDstageInfo* %21, i64 0, i32 1
  %22 = load i32* %nfront, align 4, !tbaa !3
  %inc34 = add nsw i32 %22, 1
  store i32 %inc34, i32* %nfront, align 4, !tbaa !3
  %23 = load i32* %wght35.pre-phi, align 4, !tbaa !3
  %welim = getelementptr inbounds %struct._MSMDstageInfo* %21, i64 0, i32 2
  %24 = load i32* %welim, align 4, !tbaa !3
  %add = add nsw i32 %24, %23
  store i32 %add, i32* %welim, align 4, !tbaa !3
  %inc37 = add nsw i32 %nelim.0, 1
  %25 = load %struct._IIheap** %heap, align 8, !tbaa !0
  %26 = load i32* %vid, align 4, !tbaa !3
  call void @IIheap_remove(%struct._IIheap* %25, i32 %26) #5
  call void @MSMD_eliminateVtx(%struct._MSMD* %msmd, %struct._MSMDvtx* %add.ptr, %struct._MSMDinfo* %info) #7
  %27 = load i32* %wght35.pre-phi, align 4, !tbaa !3
  %bndwght = getelementptr inbounds %struct._MSMDvtx* %15, i64 %idx.ext, i32 7
  %28 = load i32* %bndwght, align 4, !tbaa !3
  %add42 = add nsw i32 %28, %27
  %29 = load %struct._MSMDstageInfo** %stageInfo11.pre-phi, align 8, !tbaa !0
  %nfind = getelementptr inbounds %struct._MSMDstageInfo* %29, i64 0, i32 3
  %30 = load i32* %nfind, align 4, !tbaa !3
  %add44 = add nsw i32 %add42, %30
  store i32 %add44, i32* %nfind, align 4, !tbaa !3
  %mul45 = mul nsw i32 %28, %27
  %add46 = add nsw i32 %27, 1
  %mul47 = mul nsw i32 %add46, %27
  %div = sdiv i32 %mul47, 2
  %add48 = add nsw i32 %div, %mul45
  %nzf = getelementptr inbounds %struct._MSMDstageInfo* %29, i64 0, i32 4
  %31 = load i32* %nzf, align 4, !tbaa !3
  %add50 = add nsw i32 %add48, %31
  store i32 %add50, i32* %nzf, align 4, !tbaa !3
  %conv51 = sitofp i32 %27 to double
  %conv52 = sitofp i32 %28 to double
  %mul53 = fmul double %conv51, %conv52
  %add56 = fadd double %conv51, %conv52
  %add57 = fadd double %add56, 1.000000e+00
  %mul58 = fmul double %mul53, %add57
  %conv61 = sitofp i32 %add46 to double
  %mul62 = fmul double %conv51, %conv61
  %mul63 = shl nsw i32 %27, 1
  %add64123 = or i32 %mul63, 1
  %conv65 = sitofp i32 %add64123 to double
  %mul66 = fmul double %mul62, %conv65
  %div67 = fdiv double %mul66, 6.000000e+00
  %add68 = fadd double %mul58, %div67
  %ops = getelementptr inbounds %struct._MSMDstageInfo* %29, i64 0, i32 5
  %32 = load double* %ops, align 8, !tbaa !4
  %add70 = fadd double %add68, %32
  store double %add70, double* %ops, align 8, !tbaa !4
  %33 = load double* %stepType, align 8, !tbaa !4
  %cmp72 = fcmp olt double %33, 1.000000e+00
  br i1 %cmp72, label %return, label %do.cond

do.cond:                                          ; preds = %if.end32
  %34 = load %struct._IIheap** %heap, align 8, !tbaa !0
  %size77 = getelementptr inbounds %struct._IIheap* %34, i64 0, i32 0
  %35 = load i32* %size77, align 4, !tbaa !3
  %cmp78 = icmp sgt i32 %35, 0
  br i1 %cmp78, label %do.body, label %return

return:                                           ; preds = %do.cond, %do.body, %if.end32, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ %inc37, %do.cond ], [ %nelim.0, %do.body ], [ %inc37, %if.end32 ]
  ret i32 %retval.0
}
