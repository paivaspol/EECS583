define %struct._IV* @FrontMtx_colmapIV(%struct._FrontMtx* %frontmtx) #0 {
  %ncolJ = alloca i32, align 4
  %colindJ = alloca i32*, align 8
  tail call void @llvm.dbg.value(metadata %struct._FrontMtx* %frontmtx, i64 0, metadata !180, metadata !374), !dbg !375
  %1 = tail call i32 @FrontMtx_neqns(%struct._FrontMtx* %frontmtx) #7, !dbg !376
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !184, metadata !374), !dbg !377
  %2 = tail call i32 @FrontMtx_nfront(%struct._FrontMtx* %frontmtx) #7, !dbg !378
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !185, metadata !374), !dbg !379
  %3 = tail call %struct._IV* @IV_new() #7, !dbg !380
  tail call void @llvm.dbg.value(metadata %struct._IV* %3, i64 0, metadata !189, metadata !374), !dbg !381
  tail call void @IV_init(%struct._IV* %3, i32 %1, i32* null) #7, !dbg !382
  %4 = tail call i32* @IV_entries(%struct._IV* %3) #7, !dbg !383
  tail call void @llvm.dbg.value(metadata i32* %4, i64 0, metadata !188, metadata !374), !dbg !384
  tail call void @IVfill(i32 %1, i32* %4, i32 -1) #7, !dbg !385
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !182, metadata !374), !dbg !386
  %5 = icmp sgt i32 %2, 0, !dbg !387
  br i1 %5, label %.lr.ph4, label %._crit_edge, !dbg !390

.lr.ph4:                                          ; preds = %0
  %6 = add i32 %2, -1, !dbg !390
  br label %7, !dbg !390

; <label>:7                                       ; preds = %.loopexit, %.lr.ph4
  %J.03 = phi i32 [ 0, %.lr.ph4 ], [ %21, %.loopexit ]
  %8 = call i32 @FrontMtx_frontSize(%struct._FrontMtx* %frontmtx, i32 %J.03) #7, !dbg !391
  call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !186, metadata !374), !dbg !394
  %9 = icmp sgt i32 %8, 0, !dbg !395
  br i1 %9, label %10, label %.loopexit, !dbg !396

; <label>:10                                      ; preds = %7
  call void @llvm.dbg.value(metadata i32* %ncolJ, i64 0, metadata !183, metadata !374), !dbg !397
  call void @llvm.dbg.value(metadata i32** %colindJ, i64 0, metadata !187, metadata !374), !dbg !398
  call void @FrontMtx_columnIndices(%struct._FrontMtx* %frontmtx, i32 %J.03, i32* %ncolJ, i32** %colindJ) #7, !dbg !399
  call void @llvm.dbg.value(metadata i32* %ncolJ, i64 0, metadata !183, metadata !374), !dbg !397
  %11 = load i32* %ncolJ, align 4, !dbg !401, !tbaa !403
  %12 = icmp sgt i32 %11, 0, !dbg !407
  call void @llvm.dbg.value(metadata i32** %colindJ, i64 0, metadata !187, metadata !374), !dbg !398
  %13 = load i32** %colindJ, align 8
  %14 = icmp ne i32* %13, null, !dbg !408
  %or.cond = and i1 %12, %14, !dbg !409
  br i1 %or.cond, label %.lr.ph, label %.loopexit, !dbg !409

.lr.ph:                                           ; preds = %10
  %15 = add i32 %8, -1, !dbg !410
  br label %16, !dbg !410

; <label>:16                                      ; preds = %16, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %16 ]
  call void @llvm.dbg.value(metadata i32** %colindJ, i64 0, metadata !187, metadata !374), !dbg !398
  %17 = getelementptr inbounds i32* %13, i64 %indvars.iv, !dbg !413
  %18 = load i32* %17, align 4, !dbg !413, !tbaa !403
  %19 = sext i32 %18 to i64, !dbg !416
  %20 = getelementptr inbounds i32* %4, i64 %19, !dbg !416
  store i32 %J.03, i32* %20, align 4, !dbg !417, !tbaa !403
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !410
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !410
  %exitcond = icmp eq i32 %lftr.wideiv, %15, !dbg !410
  br i1 %exitcond, label %.loopexit, label %16, !dbg !410

.loopexit:                                        ; preds = %16, %7, %10
  %21 = add nuw nsw i32 %J.03, 1, !dbg !418
  call void @llvm.dbg.value(metadata i32 %21, i64 0, metadata !182, metadata !374), !dbg !386
  %exitcond5 = icmp eq i32 %J.03, %6, !dbg !390
  br i1 %exitcond5, label %._crit_edge, label %7, !dbg !390

._crit_edge:                                      ; preds = %.loopexit, %0
  ret %struct._IV* %3, !dbg !419
}
