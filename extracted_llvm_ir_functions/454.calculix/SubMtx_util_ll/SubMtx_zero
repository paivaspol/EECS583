define void @SubMtx_zero(%struct._SubMtx* %mtx) #0 {
entry:
  %cmp = icmp eq %struct._SubMtx* %mtx, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([45 x i8]* @.str10, i64 0, i64 0), %struct._SubMtx* null) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 0
  %1 = load i32* %type, align 4, !tbaa !3
  switch i32 %1, label %if.end9 [
    i32 1, label %if.then2
    i32 2, label %if.then5
  ]

if.then2:                                         ; preds = %if.end
  %nent = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 6
  %2 = load i32* %nent, align 4, !tbaa !3
  %entries = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 7
  %3 = load double** %entries, align 8, !tbaa !0
  tail call void @DVzero(i32 %2, double* %3) #4
  br label %if.end9

if.then5:                                         ; preds = %if.end
  %nent6 = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 6
  %4 = load i32* %nent6, align 4, !tbaa !3
  %mul = shl nsw i32 %4, 1
  %entries7 = getelementptr inbounds %struct._SubMtx* %mtx, i64 0, i32 7
  %5 = load double** %entries7, align 8, !tbaa !0
  tail call void @DVzero(i32 %mul, double* %5) #4
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then5, %if.then2
  ret void
}
