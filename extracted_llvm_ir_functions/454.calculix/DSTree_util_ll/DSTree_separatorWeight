define i32 @DSTree_separatorWeight(%struct._DSTree* %dstree, i32* readonly %vwghts) #0 {
  %nvtx = alloca i32, align 4
  %map = alloca i32*, align 8
  tail call void @llvm.dbg.value(metadata %struct._DSTree* %dstree, i64 0, metadata !72, metadata !86), !dbg !308
  tail call void @llvm.dbg.value(metadata i32* %vwghts, i64 0, metadata !73, metadata !86), !dbg !309
  %1 = icmp eq %struct._DSTree* %dstree, null, !dbg !310
  br i1 %1, label %2, label %5, !dbg !312

; <label>:2                                       ; preds = %0
  %3 = load %struct.__sFILE** @__stderrp, align 8, !dbg !313, !tbaa !93
  %4 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %3, i8* getelementptr inbounds ([56 x i8]* @.str3, i64 0, i64 0), %struct._DSTree* null) #5, !dbg !315
  tail call void @exit(i32 -1) #6, !dbg !316
  unreachable, !dbg !316

; <label>:5                                       ; preds = %0
  %6 = tail call %struct._Tree* @DSTree_tree(%struct._DSTree* %dstree) #5, !dbg !317
  tail call void @llvm.dbg.value(metadata %struct._Tree* %6, i64 0, metadata !81, metadata !86), !dbg !318
  %7 = tail call %struct._IV* @DSTree_mapIV(%struct._DSTree* %dstree) #5, !dbg !319
  tail call void @llvm.dbg.value(metadata %struct._IV* %7, i64 0, metadata !80, metadata !86), !dbg !320
  tail call void @llvm.dbg.value(metadata i32* %nvtx, i64 0, metadata !75, metadata !86), !dbg !321
  tail call void @llvm.dbg.value(metadata i32** %map, i64 0, metadata !79, metadata !86), !dbg !322
  call void @IV_sizeAndEntries(%struct._IV* %7, i32* %nvtx, i32** %map) #5, !dbg !323
  %8 = getelementptr inbounds %struct._Tree* %6, i64 0, i32 3, !dbg !324
  %9 = load i32** %8, align 8, !dbg !324, !tbaa !170
  call void @llvm.dbg.value(metadata i32* %9, i64 0, metadata !78, metadata !86), !dbg !325
  %10 = icmp eq i32* %vwghts, null, !dbg !326
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !76, metadata !86), !dbg !328
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !77, metadata !86), !dbg !329
  call void @llvm.dbg.value(metadata i32* %nvtx, i64 0, metadata !75, metadata !86), !dbg !321
  %11 = load i32* %nvtx, align 4, !dbg !330, !tbaa !183
  %12 = icmp sgt i32 %11, 0, !dbg !334
  br i1 %10, label %.preheader, label %.preheader1, !dbg !335

.preheader1:                                      ; preds = %5
  br i1 %12, label %.lr.ph7, label %.loopexit, !dbg !336

.lr.ph7:                                          ; preds = %.preheader1
  %13 = load i32** %map, align 8, !dbg !339, !tbaa !93
  %14 = sext i32 %11 to i64, !dbg !336
  br label %17, !dbg !336

.preheader:                                       ; preds = %5
  br i1 %12, label %.lr.ph, label %.loopexit, !dbg !342

.lr.ph:                                           ; preds = %.preheader
  %15 = load i32** %map, align 8, !dbg !343, !tbaa !93
  %16 = sext i32 %11 to i64, !dbg !342
  br label %30, !dbg !342

; <label>:17                                      ; preds = %.lr.ph7, %28
  %indvars.iv9 = phi i64 [ 0, %.lr.ph7 ], [ %indvars.iv.next10, %28 ]
  %sepwght.06 = phi i32 [ 0, %.lr.ph7 ], [ %sepwght.1, %28 ]
  call void @llvm.dbg.value(metadata i32** %map, i64 0, metadata !79, metadata !86), !dbg !322
  %18 = getelementptr inbounds i32* %13, i64 %indvars.iv9, !dbg !339
  %19 = load i32* %18, align 4, !dbg !339, !tbaa !183
  call void @llvm.dbg.value(metadata i32 %19, i64 0, metadata !74, metadata !86), !dbg !345
  %20 = sext i32 %19 to i64, !dbg !346
  %21 = getelementptr inbounds i32* %9, i64 %20, !dbg !346
  %22 = load i32* %21, align 4, !dbg !346, !tbaa !183
  %23 = icmp eq i32 %22, -1, !dbg !348
  br i1 %23, label %28, label %24, !dbg !349

; <label>:24                                      ; preds = %17
  %25 = getelementptr inbounds i32* %vwghts, i64 %indvars.iv9, !dbg !350
  %26 = load i32* %25, align 4, !dbg !350, !tbaa !183
  %27 = add nsw i32 %26, %sepwght.06, !dbg !352
  call void @llvm.dbg.value(metadata i32 %27, i64 0, metadata !76, metadata !86), !dbg !328
  br label %28, !dbg !353

; <label>:28                                      ; preds = %17, %24
  %sepwght.1 = phi i32 [ %27, %24 ], [ %sepwght.06, %17 ]
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !336
  call void @llvm.dbg.value(metadata i32* %nvtx, i64 0, metadata !75, metadata !86), !dbg !321
  %29 = icmp slt i64 %indvars.iv.next10, %14, !dbg !354
  br i1 %29, label %17, label %.loopexit, !dbg !336

; <label>:30                                      ; preds = %.lr.ph, %30
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %30 ]
  %sepwght.24 = phi i32 [ 0, %.lr.ph ], [ %sepwght.2., %30 ]
  call void @llvm.dbg.value(metadata i32** %map, i64 0, metadata !79, metadata !86), !dbg !322
  %31 = getelementptr inbounds i32* %15, i64 %indvars.iv, !dbg !343
  %32 = load i32* %31, align 4, !dbg !343, !tbaa !183
  call void @llvm.dbg.value(metadata i32 %32, i64 0, metadata !74, metadata !86), !dbg !345
  %33 = sext i32 %32 to i64, !dbg !355
  %34 = getelementptr inbounds i32* %9, i64 %33, !dbg !355
  %35 = load i32* %34, align 4, !dbg !355, !tbaa !183
  %not. = icmp ne i32 %35, -1, !dbg !357
  %36 = zext i1 %not. to i32, !dbg !357
  %sepwght.2. = add nsw i32 %36, %sepwght.24, !dbg !357
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !342
  call void @llvm.dbg.value(metadata i32* %nvtx, i64 0, metadata !75, metadata !86), !dbg !321
  %37 = icmp slt i64 %indvars.iv.next, %16, !dbg !334
  br i1 %37, label %30, label %.loopexit, !dbg !342

.loopexit:                                        ; preds = %28, %30, %.preheader1, %.preheader
  %sepwght.4 = phi i32 [ 0, %.preheader ], [ 0, %.preheader1 ], [ %sepwght.2., %30 ], [ %sepwght.1, %28 ]
  ret i32 %sepwght.4, !dbg !358
}
