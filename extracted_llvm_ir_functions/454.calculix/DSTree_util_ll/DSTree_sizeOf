define i32 @DSTree_sizeOf(%struct._DSTree* %dstree) #0 {
entry:
  %cmp = icmp eq %struct._DSTree* %dstree, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([47 x i8]* @.str, i64 0, i64 0), %struct._DSTree* null) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  %tree = getelementptr inbounds %struct._DSTree* %dstree, i64 0, i32 0
  %1 = load %struct._Tree** %tree, align 8, !tbaa !0
  %cmp1 = icmp eq %struct._Tree* %1, null
  br i1 %cmp1, label %if.end5, label %if.then2

if.then2:                                         ; preds = %if.end
  %call4 = tail call i32 @Tree_sizeOf(%struct._Tree* %1) #4
  %add = add nsw i32 %call4, 16
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then2
  %nbytes.0 = phi i32 [ %add, %if.then2 ], [ 16, %if.end ]
  %mapIV = getelementptr inbounds %struct._DSTree* %dstree, i64 0, i32 1
  %2 = load %struct._IV** %mapIV, align 8, !tbaa !0
  %cmp6 = icmp eq %struct._IV* %2, null
  br i1 %cmp6, label %if.end11, label %if.then7

if.then7:                                         ; preds = %if.end5
  %call9 = tail call i32 @IV_sizeOf(%struct._IV* %2) #4
  %add10 = add nsw i32 %call9, %nbytes.0
  br label %if.end11

if.end11:                                         ; preds = %if.end5, %if.then7
  %nbytes.1 = phi i32 [ %add10, %if.then7 ], [ %nbytes.0, %if.end5 ]
  ret i32 %nbytes.1
}
