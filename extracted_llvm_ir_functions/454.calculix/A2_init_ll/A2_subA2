define void @A2_subA2(%struct._A2* %mtxA, %struct._A2* %mtxB, i32 %firstrow, i32 %lastrow, i32 %firstcol, i32 %lastcol) #0 {
entry:
  %cmp = icmp eq %struct._A2* %mtxA, null
  %cmp1 = icmp eq %struct._A2* %mtxB, null
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp slt i32 %firstrow, 0
  %or.cond105 = or i1 %or.cond, %cmp3
  br i1 %or.cond105, label %if.then, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %entry
  %n1 = getelementptr inbounds %struct._A2* %mtxB, i64 0, i32 1
  %0 = load i32* %n1, align 4, !tbaa !3
  %cmp5 = icmp sle i32 %0, %lastrow
  %cmp7 = icmp slt i32 %firstcol, 0
  %or.cond106 = or i1 %cmp5, %cmp7
  br i1 %or.cond106, label %if.then, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %n2 = getelementptr inbounds %struct._A2* %mtxB, i64 0, i32 2
  %1 = load i32* %n2, align 4, !tbaa !3
  %cmp9 = icmp sgt i32 %1, %lastcol
  br i1 %cmp9, label %if.end17, label %if.then

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false8, %entry
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([57 x i8]* @.str3, i64 0, i64 0), %struct._A2* %mtxA, %struct._A2* %mtxB, i32 %firstrow, i32 %lastrow, i32 %firstcol, i32 %lastcol) #5
  br i1 %cmp, label %if.end, label %if.then11

if.then11:                                        ; preds = %if.then
  %3 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %4 = tail call i64 @fwrite(i8* getelementptr inbounds ([11 x i8]* @.str4, i64 0, i64 0), i64 10, i64 1, %struct._IO_FILE* %3)
  %5 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  tail call void @A2_writeForHumanEye(%struct._A2* %mtxA, %struct._IO_FILE* %5) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then11
  br i1 %cmp1, label %if.end16, label %if.then14

if.then14:                                        ; preds = %if.end
  %6 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %7 = tail call i64 @fwrite(i8* getelementptr inbounds ([12 x i8]* @.str5, i64 0, i64 0), i64 11, i64 1, %struct._IO_FILE* %6)
  %8 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  tail call void @A2_writeForHumanEye(%struct._A2* %mtxB, %struct._IO_FILE* %8) #5
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then14
  tail call void @exit(i32 -1) #6
  unreachable

if.end17:                                         ; preds = %lor.lhs.false8
  %type = getelementptr inbounds %struct._A2* %mtxB, i64 0, i32 0
  %9 = load i32* %type, align 4, !tbaa !3
  %.off = add i32 %9, -1
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.end25, label %if.then22

if.then22:                                        ; preds = %if.end17
  %10 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call24 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([59 x i8]* @.str6, i64 0, i64 0), %struct._A2* %mtxA, %struct._A2* %mtxB, i32 %firstrow, i32 %lastrow, i32 %firstcol, i32 %lastcol, i32 %9) #5
  tail call void @exit(i32 -1) #6
  unreachable

if.end25:                                         ; preds = %if.end17
  %type27 = getelementptr inbounds %struct._A2* %mtxA, i64 0, i32 0
  store i32 %9, i32* %type27, align 4, !tbaa !3
  %inc1 = getelementptr inbounds %struct._A2* %mtxB, i64 0, i32 3
  %11 = load i32* %inc1, align 4, !tbaa !3
  %inc128 = getelementptr inbounds %struct._A2* %mtxA, i64 0, i32 3
  store i32 %11, i32* %inc128, align 4, !tbaa !3
  %inc2 = getelementptr inbounds %struct._A2* %mtxB, i64 0, i32 4
  %12 = load i32* %inc2, align 4, !tbaa !3
  %inc229 = getelementptr inbounds %struct._A2* %mtxA, i64 0, i32 4
  store i32 %12, i32* %inc229, align 4, !tbaa !3
  %sub = sub i32 1, %firstrow
  %add = add i32 %sub, %lastrow
  %n130 = getelementptr inbounds %struct._A2* %mtxA, i64 0, i32 1
  store i32 %add, i32* %n130, align 4, !tbaa !3
  %sub31 = sub i32 1, %firstcol
  %add32 = add i32 %sub31, %lastcol
  %n233 = getelementptr inbounds %struct._A2* %mtxA, i64 0, i32 2
  store i32 %add32, i32* %n233, align 4, !tbaa !3
  %13 = load i32* %type, align 4, !tbaa !3
  switch i32 %13, label %if.end57 [
    i32 1, label %if.then36
    i32 2, label %if.then45
  ]

if.then36:                                        ; preds = %if.end25
  %entries = getelementptr inbounds %struct._A2* %mtxB, i64 0, i32 6
  %14 = load double** %entries, align 8, !tbaa !0
  %15 = load i32* %inc1, align 4, !tbaa !3
  %mul = mul nsw i32 %15, %firstrow
  %idx.ext = sext i32 %mul to i64
  %16 = load i32* %inc2, align 4, !tbaa !3
  %mul39 = mul nsw i32 %16, %firstcol
  %idx.ext40 = sext i32 %mul39 to i64
  %add.ptr.sum = add i64 %idx.ext40, %idx.ext
  %add.ptr41 = getelementptr inbounds double* %14, i64 %add.ptr.sum
  %entries42 = getelementptr inbounds %struct._A2* %mtxA, i64 0, i32 6
  store double* %add.ptr41, double** %entries42, align 8, !tbaa !0
  br label %if.end57

if.then45:                                        ; preds = %if.end25
  %entries46 = getelementptr inbounds %struct._A2* %mtxB, i64 0, i32 6
  %17 = load double** %entries46, align 8, !tbaa !0
  %18 = load i32* %inc1, align 4, !tbaa !3
  %mul48 = mul nsw i32 %18, %firstrow
  %19 = load i32* %inc2, align 4, !tbaa !3
  %mul50 = mul nsw i32 %19, %firstcol
  %add51 = add nsw i32 %mul50, %mul48
  %mul52 = shl nsw i32 %add51, 1
  %idx.ext53 = sext i32 %mul52 to i64
  %add.ptr54 = getelementptr inbounds double* %17, i64 %idx.ext53
  %entries55 = getelementptr inbounds %struct._A2* %mtxA, i64 0, i32 6
  store double* %add.ptr54, double** %entries55, align 8, !tbaa !0
  br label %if.end57

if.end57:                                         ; preds = %if.end25, %if.then45, %if.then36
  %nowned = getelementptr inbounds %struct._A2* %mtxA, i64 0, i32 5
  store i32 0, i32* %nowned, align 4, !tbaa !3
  ret void
}
