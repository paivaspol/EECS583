define void @A2_subA2(%struct._A2* %mtxA, %struct._A2* %mtxB, i32 %firstrow, i32 %lastrow, i32 %firstcol, i32 %lastcol) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._A2* %mtxA}, i64 0, metadata !38), !dbg !107
  tail call void @llvm.dbg.value(metadata !{%struct._A2* %mtxB}, i64 0, metadata !39), !dbg !108
  tail call void @llvm.dbg.value(metadata !{i32 %firstrow}, i64 0, metadata !40), !dbg !109
  tail call void @llvm.dbg.value(metadata !{i32 %lastrow}, i64 0, metadata !41), !dbg !110
  tail call void @llvm.dbg.value(metadata !{i32 %firstcol}, i64 0, metadata !42), !dbg !111
  tail call void @llvm.dbg.value(metadata !{i32 %lastcol}, i64 0, metadata !43), !dbg !112
  %cmp = icmp eq %struct._A2* %mtxA, null, !dbg !113
  %cmp1 = icmp eq %struct._A2* %mtxB, null, !dbg !113
  %or.cond = or i1 %cmp, %cmp1, !dbg !113
  %cmp3 = icmp slt i32 %firstrow, 0, !dbg !113
  %or.cond105 = or i1 %or.cond, %cmp3, !dbg !113
  br i1 %or.cond105, label %if.then, label %lor.lhs.false4, !dbg !113

lor.lhs.false4:                                   ; preds = %entry
  %n1 = getelementptr inbounds %struct._A2* %mtxB, i64 0, i32 1, !dbg !113
  %0 = load i32* %n1, align 4, !dbg !113, !tbaa !72
  %cmp5 = icmp sle i32 %0, %lastrow, !dbg !113
  %cmp7 = icmp slt i32 %firstcol, 0, !dbg !113
  %or.cond106 = or i1 %cmp5, %cmp7, !dbg !113
  br i1 %or.cond106, label %if.then, label %lor.lhs.false8, !dbg !113

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %n2 = getelementptr inbounds %struct._A2* %mtxB, i64 0, i32 2, !dbg !113
  %1 = load i32* %n2, align 4, !dbg !113, !tbaa !72
  %cmp9 = icmp sgt i32 %1, %lastcol, !dbg !113
  br i1 %cmp9, label %if.end17, label %if.then, !dbg !113

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false8, %entry
  %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !114, !tbaa !54
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([57 x i8]* @.str3, i64 0, i64 0), %struct._A2* %mtxA, %struct._A2* %mtxB, i32 %firstrow, i32 %lastrow, i32 %firstcol, i32 %lastcol) #6, !dbg !114
  br i1 %cmp, label %if.end, label %if.then11, !dbg !116

if.then11:                                        ; preds = %if.then
  %3 = load %struct._IO_FILE** @stderr, align 8, !dbg !117, !tbaa !54
  %4 = tail call i64 @fwrite(i8* getelementptr inbounds ([11 x i8]* @.str4, i64 0, i64 0), i64 10, i64 1, %struct._IO_FILE* %3), !dbg !117
  %5 = load %struct._IO_FILE** @stderr, align 8, !dbg !119, !tbaa !54
  tail call void @A2_writeForHumanEye(%struct._A2* %mtxA, %struct._IO_FILE* %5) #6, !dbg !119
  br label %if.end, !dbg !120

if.end:                                           ; preds = %if.then, %if.then11
  br i1 %cmp1, label %if.end16, label %if.then14, !dbg !121

if.then14:                                        ; preds = %if.end
  %6 = load %struct._IO_FILE** @stderr, align 8, !dbg !122, !tbaa !54
  %7 = tail call i64 @fwrite(i8* getelementptr inbounds ([12 x i8]* @.str5, i64 0, i64 0), i64 11, i64 1, %struct._IO_FILE* %6), !dbg !122
  %8 = load %struct._IO_FILE** @stderr, align 8, !dbg !124, !tbaa !54
  tail call void @A2_writeForHumanEye(%struct._A2* %mtxB, %struct._IO_FILE* %8) #6, !dbg !124
  br label %if.end16, !dbg !125

if.end16:                                         ; preds = %if.end, %if.then14
  tail call void @exit(i32 -1) #7, !dbg !126
  unreachable, !dbg !126

if.end17:                                         ; preds = %lor.lhs.false8
  %type = getelementptr inbounds %struct._A2* %mtxB, i64 0, i32 0, !dbg !127
  %9 = load i32* %type, align 4, !dbg !127, !tbaa !72
  %.off = add i32 %9, -1, !dbg !127
  %switch = icmp ult i32 %.off, 2, !dbg !127
  br i1 %switch, label %if.end25, label %if.then22, !dbg !127

if.then22:                                        ; preds = %if.end17
  %10 = load %struct._IO_FILE** @stderr, align 8, !dbg !128, !tbaa !54
  %call24 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([59 x i8]* @.str6, i64 0, i64 0), %struct._A2* %mtxA, %struct._A2* %mtxB, i32 %firstrow, i32 %lastrow, i32 %firstcol, i32 %lastcol, i32 %9) #6, !dbg !128
  tail call void @exit(i32 -1) #7, !dbg !130
  unreachable, !dbg !130

if.end25:                                         ; preds = %if.end17
  %type27 = getelementptr inbounds %struct._A2* %mtxA, i64 0, i32 0, !dbg !131
  store i32 %9, i32* %type27, align 4, !dbg !131, !tbaa !72
  %inc1 = getelementptr inbounds %struct._A2* %mtxB, i64 0, i32 3, !dbg !132
  %11 = load i32* %inc1, align 4, !dbg !132, !tbaa !72
  %inc128 = getelementptr inbounds %struct._A2* %mtxA, i64 0, i32 3, !dbg !132
  store i32 %11, i32* %inc128, align 4, !dbg !132, !tbaa !72
  %inc2 = getelementptr inbounds %struct._A2* %mtxB, i64 0, i32 4, !dbg !133
  %12 = load i32* %inc2, align 4, !dbg !133, !tbaa !72
  %inc229 = getelementptr inbounds %struct._A2* %mtxA, i64 0, i32 4, !dbg !133
  store i32 %12, i32* %inc229, align 4, !dbg !133, !tbaa !72
  %sub = sub i32 1, %firstrow, !dbg !134
  %add = add i32 %sub, %lastrow, !dbg !134
  %n130 = getelementptr inbounds %struct._A2* %mtxA, i64 0, i32 1, !dbg !134
  store i32 %add, i32* %n130, align 4, !dbg !134, !tbaa !72
  %sub31 = sub i32 1, %firstcol, !dbg !135
  %add32 = add i32 %sub31, %lastcol, !dbg !135
  %n233 = getelementptr inbounds %struct._A2* %mtxA, i64 0, i32 2, !dbg !135
  store i32 %add32, i32* %n233, align 4, !dbg !135, !tbaa !72
  %13 = load i32* %type, align 4, !dbg !136, !tbaa !72
  switch i32 %13, label %if.end57 [
    i32 1, label %if.then36
    i32 2, label %if.then45
  ], !dbg !136

if.then36:                                        ; preds = %if.end25
  %entries = getelementptr inbounds %struct._A2* %mtxB, i64 0, i32 6, !dbg !137
  %14 = load double** %entries, align 8, !dbg !137, !tbaa !54
  %15 = load i32* %inc1, align 4, !dbg !137, !tbaa !72
  %mul = mul nsw i32 %15, %firstrow, !dbg !137
  %idx.ext = sext i32 %mul to i64, !dbg !137
  %16 = load i32* %inc2, align 4, !dbg !137, !tbaa !72
  %mul39 = mul nsw i32 %16, %firstcol, !dbg !137
  %idx.ext40 = sext i32 %mul39 to i64, !dbg !137
  %add.ptr.sum = add i64 %idx.ext40, %idx.ext, !dbg !137
  %add.ptr41 = getelementptr inbounds double* %14, i64 %add.ptr.sum, !dbg !137
  %entries42 = getelementptr inbounds %struct._A2* %mtxA, i64 0, i32 6, !dbg !137
  store double* %add.ptr41, double** %entries42, align 8, !dbg !137, !tbaa !54
  br label %if.end57, !dbg !139

if.then45:                                        ; preds = %if.end25
  %entries46 = getelementptr inbounds %struct._A2* %mtxB, i64 0, i32 6, !dbg !140
  %17 = load double** %entries46, align 8, !dbg !140, !tbaa !54
  %18 = load i32* %inc1, align 4, !dbg !140, !tbaa !72
  %mul48 = mul nsw i32 %18, %firstrow, !dbg !140
  %19 = load i32* %inc2, align 4, !dbg !140, !tbaa !72
  %mul50 = mul nsw i32 %19, %firstcol, !dbg !140
  %add51 = add nsw i32 %mul50, %mul48, !dbg !140
  %mul52 = shl nsw i32 %add51, 1, !dbg !140
  %idx.ext53 = sext i32 %mul52 to i64, !dbg !140
  %add.ptr54 = getelementptr inbounds double* %17, i64 %idx.ext53, !dbg !140
  %entries55 = getelementptr inbounds %struct._A2* %mtxA, i64 0, i32 6, !dbg !140
  store double* %add.ptr54, double** %entries55, align 8, !dbg !140, !tbaa !54
  br label %if.end57, !dbg !142

if.end57:                                         ; preds = %if.end25, %if.then45, %if.then36
  %nowned = getelementptr inbounds %struct._A2* %mtxA, i64 0, i32 5, !dbg !143
  store i32 0, i32* %nowned, align 4, !dbg !143, !tbaa !72
  ret void, !dbg !144
}
