define void @IV_copy(%struct._IV* %iv1, %struct._IV* %iv2) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._IV* %iv1}, i64 0, metadata !106), !dbg !343
  tail call void @llvm.dbg.value(metadata !{%struct._IV* %iv2}, i64 0, metadata !107), !dbg !344
  %cmp = icmp eq %struct._IV* %iv1, null, !dbg !345
  %cmp1 = icmp eq %struct._IV* %iv2, null, !dbg !345
  %or.cond = or i1 %cmp, %cmp1, !dbg !345
  br i1 %or.cond, label %if.then, label %if.end, !dbg !345

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !346, !tbaa !175
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([44 x i8]* @.str16, i64 0, i64 0), %struct._IV* %iv1, %struct._IV* %iv2) #6, !dbg !346
  tail call void @exit(i32 -1) #7, !dbg !348
  unreachable, !dbg !348

if.end:                                           ; preds = %entry
  %size2 = getelementptr inbounds %struct._IV* %iv1, i64 0, i32 0, !dbg !349
  %1 = load i32* %size2, align 4, !dbg !349, !tbaa !181
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !109), !dbg !349
  %size3 = getelementptr inbounds %struct._IV* %iv2, i64 0, i32 0, !dbg !350
  %2 = load i32* %size3, align 4, !dbg !350, !tbaa !181
  %cmp4 = icmp sgt i32 %1, %2, !dbg !350
  tail call void @llvm.dbg.value(metadata !{i32 %2}, i64 0, metadata !109), !dbg !351
  %. = select i1 %cmp4, i32 %2, i32 %1, !dbg !350
  %vec = getelementptr inbounds %struct._IV* %iv1, i64 0, i32 3, !dbg !353
  %3 = load i32** %vec, align 8, !dbg !353, !tbaa !175
  tail call void @llvm.dbg.value(metadata !{i32* %3}, i64 0, metadata !110), !dbg !353
  %vec8 = getelementptr inbounds %struct._IV* %iv2, i64 0, i32 3, !dbg !354
  %4 = load i32** %vec8, align 8, !dbg !354, !tbaa !175
  tail call void @llvm.dbg.value(metadata !{i32* %4}, i64 0, metadata !111), !dbg !354
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !108), !dbg !355
  %cmp923 = icmp sgt i32 %., 0, !dbg !355
  br i1 %cmp923, label %for.body.lr.ph, label %for.end, !dbg !355

for.body.lr.ph:                                   ; preds = %if.end
  %5 = xor i32 %2, -1, !dbg !355
  %6 = xor i32 %1, -1, !dbg !355
  %7 = icmp sgt i32 %5, %6, !dbg !355
  %smax = select i1 %7, i32 %5, i32 %6, !dbg !355
  %8 = xor i32 %smax, -1, !dbg !355
  br label %for.body, !dbg !355

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds i32* %4, i64 %indvars.iv, !dbg !357
  %9 = load i32* %arrayidx, align 4, !dbg !357, !tbaa !181
  %arrayidx11 = getelementptr inbounds i32* %3, i64 %indvars.iv, !dbg !357
  store i32 %9, i32* %arrayidx11, align 4, !dbg !357, !tbaa !181
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !355
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !355
  %exitcond = icmp eq i32 %lftr.wideiv, %8, !dbg !355
  br i1 %exitcond, label %for.end, label %for.body, !dbg !355

for.end:                                          ; preds = %for.body, %if.end
  ret void, !dbg !359
}
