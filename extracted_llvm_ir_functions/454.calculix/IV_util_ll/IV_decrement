define i32 @IV_decrement(%struct._IV* %iv, i32 %loc) #0 {
entry:
  %cmp = icmp eq %struct._IV* %iv, null
  %cmp1 = icmp slt i32 %loc, 0
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %entry
  %size = getelementptr inbounds %struct._IV* %iv, i64 0, i32 0
  %0 = load i32* %size, align 4, !tbaa !3
  %cmp3 = icmp sgt i32 %0, %loc
  br i1 %cmp3, label %if.end8, label %if.then

if.then:                                          ; preds = %lor.lhs.false2, %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([49 x i8]* @.str19, i64 0, i64 0), %struct._IV* %iv, i32 %loc) #5
  br i1 %cmp, label %if.end, label %if.then5

if.then5:                                         ; preds = %if.then
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %size6 = getelementptr inbounds %struct._IV* %iv, i64 0, i32 0
  %3 = load i32* %size6, align 4, !tbaa !3
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([22 x i8]* @.str18, i64 0, i64 0), i32 %loc, i32 %3) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then5
  tail call void @exit(i32 -1) #6
  unreachable

if.end8:                                          ; preds = %lor.lhs.false2
  %idxprom = sext i32 %loc to i64
  %vec = getelementptr inbounds %struct._IV* %iv, i64 0, i32 3
  %4 = load i32** %vec, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i32* %4, i64 %idxprom
  %5 = load i32* %arrayidx, align 4, !tbaa !3
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %arrayidx, align 4, !tbaa !3
  ret i32 %dec
}
