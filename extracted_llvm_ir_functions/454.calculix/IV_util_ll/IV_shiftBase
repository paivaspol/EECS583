define void @IV_shiftBase(%struct._IV* %iv, i32 %offset) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._IV* %iv}, i64 0, metadata !20), !dbg !170
  tail call void @llvm.dbg.value(metadata !{i32 %offset}, i64 0, metadata !21), !dbg !171
  %cmp = icmp eq %struct._IV* %iv, null, !dbg !172
  br i1 %cmp, label %if.then, label %if.end, !dbg !172

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !173, !tbaa !175
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([49 x i8]* @.str, i64 0, i64 0), %struct._IV* null, i32 %offset) #6, !dbg !173
  tail call void @exit(i32 -1) #7, !dbg !178
  unreachable, !dbg !178

if.end:                                           ; preds = %entry
  %vec = getelementptr inbounds %struct._IV* %iv, i64 0, i32 3, !dbg !179
  %1 = load i32** %vec, align 8, !dbg !179, !tbaa !175
  %idx.ext = sext i32 %offset to i64, !dbg !179
  %add.ptr = getelementptr inbounds i32* %1, i64 %idx.ext, !dbg !179
  store i32* %add.ptr, i32** %vec, align 8, !dbg !179, !tbaa !175
  %size = getelementptr inbounds %struct._IV* %iv, i64 0, i32 0, !dbg !180
  %2 = load i32* %size, align 4, !dbg !180, !tbaa !181
  %sub = sub nsw i32 %2, %offset, !dbg !180
  store i32 %sub, i32* %size, align 4, !dbg !180, !tbaa !181
  %maxsize = getelementptr inbounds %struct._IV* %iv, i64 0, i32 1, !dbg !182
  %3 = load i32* %maxsize, align 4, !dbg !182, !tbaa !181
  %sub1 = sub nsw i32 %3, %offset, !dbg !182
  store i32 %sub1, i32* %maxsize, align 4, !dbg !182, !tbaa !181
  ret void, !dbg !183
}
