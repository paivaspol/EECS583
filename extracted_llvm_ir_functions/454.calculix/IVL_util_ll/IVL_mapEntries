define %struct._IVL* @IVL_mapEntries(%struct._IVL* %ivl, %struct._IV* %mapIV) #0 {
entry:
  %size = alloca i32, align 4
  %list = alloca i32*, align 8
  %cmp = icmp eq %struct._IVL* %ivl, null
  %cmp1 = icmp eq %struct._IV* %mapIV, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([51 x i8]* @.str8, i64 0, i64 0), %struct._IVL* %ivl, %struct._IV* %mapIV) #4
  call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  %nlist2 = getelementptr inbounds %struct._IVL* %ivl, i64 0, i32 2
  %1 = load i32* %nlist2, align 4, !tbaa !3
  %call3 = call i32 @IV_size(%struct._IV* %mapIV) #4
  %call4 = call i32* @IV_entries(%struct._IV* %mapIV) #4
  %cmp5 = icmp slt i32 %1, 1
  %cmp7 = icmp slt i32 %call3, 0
  %or.cond93 = or i1 %cmp5, %cmp7
  %cmp9 = icmp eq i32* %call4, null
  %or.cond94 = or i1 %or.cond93, %cmp9
  br i1 %or.cond94, label %return, label %if.end11

if.end11:                                         ; preds = %if.end
  %call12 = call %struct._IVL* @IVL_new() #4
  call void @IVL_init1(%struct._IVL* %call12, i32 1, i32 %1) #4
  %call13 = call i32 @IVL_maxListSize(%struct._IVL* %ivl) #6
  %call14 = call i32* @IVinit(i32 %call13, i32 -1) #4
  %cmp15104 = icmp sgt i32 %1, 0
  br i1 %cmp15104, label %for.body, label %for.end55

for.body:                                         ; preds = %if.end11, %if.end52
  %ilist.0105 = phi i32 [ %inc54, %if.end52 ], [ 0, %if.end11 ]
  call void @IVL_listAndSize(%struct._IVL* %ivl, i32 %ilist.0105, i32* %size, i32** %list) #4
  %2 = load i32* %size, align 4, !tbaa !3
  %cmp1796 = icmp sgt i32 %2, 0
  br i1 %cmp1796, label %for.body18.lr.ph, label %if.end52

for.body18.lr.ph:                                 ; preds = %for.body
  %3 = load i32** %list, align 8, !tbaa !0
  br label %for.body18

for.body18:                                       ; preds = %for.body18.lr.ph, %for.inc
  %4 = phi i32 [ %2, %for.body18.lr.ph ], [ %7, %for.inc ]
  %indvars.iv = phi i64 [ 0, %for.body18.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %count.098 = phi i32 [ 0, %for.body18.lr.ph ], [ %count.1, %for.inc ]
  %arrayidx = getelementptr inbounds i32* %3, i64 %indvars.iv
  %5 = load i32* %arrayidx, align 4, !tbaa !3
  %cmp19 = icmp sgt i32 %5, -1
  %cmp22 = icmp slt i32 %5, %call3
  %or.cond95 = and i1 %cmp19, %cmp22
  br i1 %or.cond95, label %if.then23, label %for.inc

if.then23:                                        ; preds = %for.body18
  %idxprom26 = sext i32 %5 to i64
  %arrayidx27 = getelementptr inbounds i32* %call4, i64 %idxprom26
  %6 = load i32* %arrayidx27, align 4, !tbaa !3
  %inc = add nsw i32 %count.098, 1
  %idxprom28 = sext i32 %count.098 to i64
  %arrayidx29 = getelementptr inbounds i32* %call14, i64 %idxprom28
  store i32 %6, i32* %arrayidx29, align 4, !tbaa !3
  %.pre108 = load i32* %size, align 4, !tbaa !3
  br label %for.inc

for.inc:                                          ; preds = %for.body18, %if.then23
  %7 = phi i32 [ %.pre108, %if.then23 ], [ %4, %for.body18 ]
  %count.1 = phi i32 [ %inc, %if.then23 ], [ %count.098, %for.body18 ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %8 = trunc i64 %indvars.iv.next to i32
  %cmp17 = icmp slt i32 %8, %7
  br i1 %cmp17, label %for.body18, label %for.end

for.end:                                          ; preds = %for.inc
  %cmp32 = icmp sgt i32 %count.1, 0
  br i1 %cmp32, label %for.body36.lr.ph, label %if.end52

for.body36.lr.ph:                                 ; preds = %for.end
  call void @IVqsortUp(i32 %count.1, i32* %call14) #4
  store i32 %count.1, i32* %size, align 4, !tbaa !3
  br label %for.body36

for.body36:                                       ; preds = %for.body36.lr.ph, %for.inc49
  %9 = phi i32 [ %count.1, %for.body36.lr.ph ], [ %12, %for.inc49 ]
  %indvars.iv106 = phi i64 [ 0, %for.body36.lr.ph ], [ %indvars.iv.next107, %for.inc49 ]
  %count.2102 = phi i32 [ 0, %for.body36.lr.ph ], [ %count.3, %for.inc49 ]
  %value.0100 = phi i32 [ -1, %for.body36.lr.ph ], [ %value.1, %for.inc49 ]
  %arrayidx38 = getelementptr inbounds i32* %call14, i64 %indvars.iv106
  %10 = load i32* %arrayidx38, align 4, !tbaa !3
  %cmp39 = icmp eq i32 %10, %value.0100
  br i1 %cmp39, label %for.inc49, label %if.then40

if.then40:                                        ; preds = %for.body36
  %inc43 = add nsw i32 %count.2102, 1
  %idxprom44 = sext i32 %count.2102 to i64
  %arrayidx45 = getelementptr inbounds i32* %call14, i64 %idxprom44
  store i32 %10, i32* %arrayidx45, align 4, !tbaa !3
  %11 = load i32* %arrayidx38, align 4, !tbaa !3
  %.pre = load i32* %size, align 4, !tbaa !3
  br label %for.inc49

for.inc49:                                        ; preds = %for.body36, %if.then40
  %12 = phi i32 [ %.pre, %if.then40 ], [ %9, %for.body36 ]
  %value.1 = phi i32 [ %11, %if.then40 ], [ %value.0100, %for.body36 ]
  %count.3 = phi i32 [ %inc43, %if.then40 ], [ %count.2102, %for.body36 ]
  %indvars.iv.next107 = add i64 %indvars.iv106, 1
  %13 = trunc i64 %indvars.iv.next107 to i32
  %cmp35 = icmp slt i32 %13, %12
  br i1 %cmp35, label %for.body36, label %if.end52

if.end52:                                         ; preds = %for.body, %for.inc49, %for.end
  %count.4 = phi i32 [ %count.1, %for.end ], [ %count.3, %for.inc49 ], [ 0, %for.body ]
  call void @IVL_setList(%struct._IVL* %call12, i32 %ilist.0105, i32 %count.4, i32* %call14) #4
  %inc54 = add nsw i32 %ilist.0105, 1
  %exitcond = icmp eq i32 %inc54, %1
  br i1 %exitcond, label %for.end55, label %for.body

for.end55:                                        ; preds = %if.end52, %if.end11
  call void @IVfree(i32* %call14) #4
  br label %return

return:                                           ; preds = %if.end, %for.end55
  %retval.0 = phi %struct._IVL* [ %call12, %for.end55 ], [ null, %if.end ]
  ret %struct._IVL* %retval.0
}
