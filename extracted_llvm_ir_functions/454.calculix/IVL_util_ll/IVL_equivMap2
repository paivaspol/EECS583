define %struct._IV* @IVL_equivMap2(%struct._IVL* %ivl) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._IVL* %ivl}, i64 0, metadata !124), !dbg !382
  %call = tail call i32* @IVL_equivMap1(%struct._IVL* %ivl) #7, !dbg !383
  tail call void @llvm.dbg.value(metadata !{i32* %call}, i64 0, metadata !125), !dbg !383
  %cmp = icmp eq i32* %call, null, !dbg !383
  br i1 %cmp, label %if.end, label %if.else, !dbg !383

if.else:                                          ; preds = %entry
  %call1 = tail call %struct._IV* @IV_new() #5, !dbg !384
  tail call void @llvm.dbg.value(metadata !{%struct._IV* %call1}, i64 0, metadata !126), !dbg !384
  %nlist = getelementptr inbounds %struct._IVL* %ivl, i64 0, i32 2, !dbg !386
  %0 = load i32* %nlist, align 4, !dbg !386, !tbaa !203
  tail call void @IV_init2(%struct._IV* %call1, i32 %0, i32 %0, i32 1, i32* %call) #5, !dbg !386
  br label %if.end

if.end:                                           ; preds = %entry, %if.else
  %mapIV.0 = phi %struct._IV* [ %call1, %if.else ], [ null, %entry ]
  ret %struct._IV* %mapIV.0, !dbg !387
}
