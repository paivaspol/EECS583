define i32 @IVL_maxListSize(%struct._IVL* %ivl) #0 {
entry:
  %size = alloca i32, align 4
  %ent = alloca i32*, align 8
  %cmp = icmp eq %struct._IVL* %ivl, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %nlist1 = getelementptr inbounds %struct._IVL* %ivl, i64 0, i32 2
  %0 = load i32* %nlist1, align 4, !tbaa !3
  %cmp2 = icmp slt i32 %0, 1
  br i1 %cmp2, label %if.then, label %for.body

if.then:                                          ; preds = %lor.lhs.false, %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([48 x i8]* @.str3, i64 0, i64 0), %struct._IVL* %ivl) #4
  call void @exit(i32 -1) #5
  unreachable

for.body:                                         ; preds = %lor.lhs.false, %for.body
  %ilist.015 = phi i32 [ %inc, %for.body ], [ 0, %lor.lhs.false ]
  %maxsize.014 = phi i32 [ %.maxsize.0, %for.body ], [ 0, %lor.lhs.false ]
  call void @IVL_listAndSize(%struct._IVL* %ivl, i32 %ilist.015, i32* %size, i32** %ent) #4
  %2 = load i32* %size, align 4, !tbaa !3
  %cmp4 = icmp slt i32 %maxsize.014, %2
  %.maxsize.0 = select i1 %cmp4, i32 %2, i32 %maxsize.014
  %inc = add nsw i32 %ilist.015, 1
  %exitcond = icmp eq i32 %inc, %0
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  ret i32 %.maxsize.0
}
