define i32* @IVL_equivMap1(%struct._IVL* %ivl) #0 {
entry:
  %vsize = alloca i32, align 4
  %wsize = alloca i32, align 4
  %vadj = alloca i32*, align 8
  %wadj = alloca i32*, align 8
  %cmp = icmp eq %struct._IVL* %ivl, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %nlist1 = getelementptr inbounds %struct._IVL* %ivl, i64 0, i32 2
  %0 = load i32* %nlist1, align 4, !tbaa !3
  %cmp2 = icmp slt i32 %0, 0
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([46 x i8]* @.str6, i64 0, i64 0), %struct._IVL* %ivl) #4
  call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %lor.lhs.false
  %cmp3 = icmp eq i32 %0, 0
  br i1 %cmp3, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end
  %call6 = call i32* @IVinit(i32 %0, i32 -1) #4
  %call7 = call i32* @IVinit(i32 %0, i32 -1) #4
  %call8 = call i32* @IVinit(i32 %0, i32 -1) #4
  br label %for.body

for.body:                                         ; preds = %for.inc24, %for.body.lr.ph
  %indvars.iv231 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next232, %for.inc24 ]
  %nlist2.0212 = phi i32 [ 0, %for.body.lr.ph ], [ %nlist2.1, %for.inc24 ]
  %ntest.0211 = phi i32 [ 0, %for.body.lr.ph ], [ %ntest.1, %for.inc24 ]
  %2 = trunc i64 %indvars.iv231 to i32
  call void @IVL_listAndSize(%struct._IVL* %ivl, i32 %2, i32* %vsize, i32** %vadj) #4
  %3 = load i32* %vsize, align 4, !tbaa !3
  %cmp10 = icmp sgt i32 %3, 0
  br i1 %cmp10, label %for.body14.lr.ph, label %if.else

for.body14.lr.ph:                                 ; preds = %for.body
  %4 = load i32** %vadj, align 8, !tbaa !0
  br label %for.body14

for.body14:                                       ; preds = %for.body14.lr.ph, %for.body14
  %indvars.iv229 = phi i64 [ 0, %for.body14.lr.ph ], [ %indvars.iv.next230, %for.body14 ]
  %sum.0206 = phi i32 [ 0, %for.body14.lr.ph ], [ %add, %for.body14 ]
  %arrayidx = getelementptr inbounds i32* %4, i64 %indvars.iv229
  %5 = load i32* %arrayidx, align 4, !tbaa !3
  %add = add nsw i32 %5, %sum.0206
  %indvars.iv.next230 = add i64 %indvars.iv229, 1
  %6 = trunc i64 %indvars.iv.next230 to i32
  %cmp13 = icmp slt i32 %6, %3
  br i1 %cmp13, label %for.body14, label %for.end

for.end:                                          ; preds = %for.body14
  %idxprom15 = sext i32 %ntest.0211 to i64
  %arrayidx16 = getelementptr inbounds i32* %call7, i64 %idxprom15
  store i32 %2, i32* %arrayidx16, align 4, !tbaa !3
  %arrayidx18 = getelementptr inbounds i32* %call8, i64 %idxprom15
  store i32 %add, i32* %arrayidx18, align 4, !tbaa !3
  %inc19 = add nsw i32 %ntest.0211, 1
  br label %for.inc24

if.else:                                          ; preds = %for.body
  %inc20 = add nsw i32 %nlist2.0212, 1
  %arrayidx22 = getelementptr inbounds i32* %call6, i64 %indvars.iv231
  store i32 %nlist2.0212, i32* %arrayidx22, align 4, !tbaa !3
  br label %for.inc24

for.inc24:                                        ; preds = %for.end, %if.else
  %ntest.1 = phi i32 [ %inc19, %for.end ], [ %ntest.0211, %if.else ]
  %nlist2.1 = phi i32 [ %nlist2.0212, %for.end ], [ %inc20, %if.else ]
  %indvars.iv.next232 = add i64 %indvars.iv231, 1
  %lftr.wideiv233 = trunc i64 %indvars.iv.next232 to i32
  %exitcond234 = icmp eq i32 %lftr.wideiv233, %0
  br i1 %exitcond234, label %for.end26, label %for.body

for.end26:                                        ; preds = %for.inc24
  call void @IV2qsortUp(i32 %ntest.1, i32* %call8, i32* %call7) #4
  %call27 = call i32* @IVinit(i32 %0, i32 -1) #4
  %cmp29201 = icmp sgt i32 %ntest.1, 0
  br i1 %cmp29201, label %for.body30, label %for.end97

for.body30:                                       ; preds = %for.end26, %for.inc95
  %indvars.iv224 = phi i64 [ %indvars.iv.next225.pre-phi, %for.inc95 ], [ 0, %for.end26 ]
  %indvars.iv219 = phi i64 [ %indvars.iv.next220, %for.inc95 ], [ 1, %for.end26 ]
  %itest.0203 = phi i32 [ %inc96.pre-phi, %for.inc95 ], [ 0, %for.end26 ]
  %nlist2.2202 = phi i32 [ %nlist2.3, %for.inc95 ], [ %nlist2.1, %for.end26 ]
  %arrayidx32 = getelementptr inbounds i32* %call7, i64 %indvars.iv224
  %7 = load i32* %arrayidx32, align 4, !tbaa !3
  %idxprom33 = sext i32 %7 to i64
  %arrayidx34 = getelementptr inbounds i32* %call6, i64 %idxprom33
  %8 = load i32* %arrayidx34, align 4, !tbaa !3
  %cmp35 = icmp eq i32 %8, -1
  br i1 %cmp35, label %if.then36, label %for.body30.for.inc95_crit_edge

for.body30.for.inc95_crit_edge:                   ; preds = %for.body30
  %indvars.iv.next225.pre = add i64 %indvars.iv224, 1
  %inc96.pre = add nsw i32 %itest.0203, 1
  %lftr.wideiv227.pre = trunc i64 %indvars.iv.next225.pre to i32
  br label %for.inc95

if.then36:                                        ; preds = %for.body30
  %inc37 = add nsw i32 %nlist2.2202, 1
  store i32 %nlist2.2202, i32* %arrayidx34, align 4, !tbaa !3
  call void @IVL_listAndSize(%struct._IVL* %ivl, i32 %7, i32* %vsize, i32** %vadj) #4
  %9 = add nsw i64 %indvars.iv224, 1
  %jtest.0198 = add nsw i32 %itest.0203, 1
  %10 = trunc i64 %9 to i32
  %cmp42199 = icmp slt i32 %10, %ntest.1
  br i1 %cmp42199, label %for.body43.lr.ph, label %for.inc95

for.body43.lr.ph:                                 ; preds = %if.then36
  %arrayidx47 = getelementptr inbounds i32* %call8, i64 %indvars.iv224
  %arrayidx56 = getelementptr inbounds i32* %call27, i64 %idxprom33
  br label %for.body43

for.body43:                                       ; preds = %for.body43.lr.ph, %for.cond41.backedge
  %indvars.iv221 = phi i64 [ %indvars.iv219, %for.body43.lr.ph ], [ %indvars.iv.next222, %for.cond41.backedge ]
  %jtest.0200 = phi i32 [ %jtest.0198, %for.body43.lr.ph ], [ %jtest.0, %for.cond41.backedge ]
  %arrayidx45 = getelementptr inbounds i32* %call7, i64 %indvars.iv221
  %11 = load i32* %arrayidx45, align 4, !tbaa !3
  %12 = load i32* %arrayidx47, align 4, !tbaa !3
  %arrayidx49 = getelementptr inbounds i32* %call8, i64 %indvars.iv221
  %13 = load i32* %arrayidx49, align 4, !tbaa !3
  %cmp50 = icmp eq i32 %12, %13
  br i1 %cmp50, label %if.else52, label %for.inc95

if.else52:                                        ; preds = %for.body43
  call void @IVL_listAndSize(%struct._IVL* %ivl, i32 %11, i32* %wsize, i32** %wadj) #4
  %14 = load i32* %vsize, align 4, !tbaa !3
  %15 = load i32* %wsize, align 4, !tbaa !3
  %cmp53 = icmp eq i32 %14, %15
  br i1 %cmp53, label %if.then54, label %for.cond41.backedge

if.then54:                                        ; preds = %if.else52
  %16 = load i32* %arrayidx56, align 4, !tbaa !3
  %cmp57 = icmp eq i32 %16, 1
  br i1 %cmp57, label %if.end61, label %if.then58

if.then58:                                        ; preds = %if.then54
  store i32 1, i32* %arrayidx56, align 4, !tbaa !3
  %17 = load i32* %vsize, align 4, !tbaa !3
  %18 = load i32** %vadj, align 8, !tbaa !0
  call void @IVqsortUp(i32 %17, i32* %18) #4
  br label %if.end61

if.end61:                                         ; preds = %if.then54, %if.then58
  %idxprom62 = sext i32 %11 to i64
  %arrayidx63 = getelementptr inbounds i32* %call27, i64 %idxprom62
  %19 = load i32* %arrayidx63, align 4, !tbaa !3
  %cmp64 = icmp eq i32 %19, 1
  br i1 %cmp64, label %for.cond69.preheader, label %if.then65

if.then65:                                        ; preds = %if.end61
  store i32 1, i32* %arrayidx63, align 4, !tbaa !3
  %20 = load i32* %wsize, align 4, !tbaa !3
  %21 = load i32** %wadj, align 8, !tbaa !0
  call void @IVqsortUp(i32 %20, i32* %21) #4
  br label %for.cond69.preheader

for.cond69.preheader:                             ; preds = %if.end61, %if.then65
  %22 = load i32* %vsize, align 4, !tbaa !3
  %cmp70196 = icmp sgt i32 %22, 0
  br i1 %cmp70196, label %for.body71.lr.ph, label %for.end81

for.body71.lr.ph:                                 ; preds = %for.cond69.preheader
  %23 = load i32** %vadj, align 8, !tbaa !0
  %24 = load i32** %wadj, align 8, !tbaa !0
  br label %for.body71

for.cond69:                                       ; preds = %for.body71
  %25 = trunc i64 %indvars.iv.next218 to i32
  %cmp70 = icmp slt i32 %25, %22
  br i1 %cmp70, label %for.body71, label %for.end81

for.body71:                                       ; preds = %for.body71.lr.ph, %for.cond69
  %indvars.iv217 = phi i64 [ 0, %for.body71.lr.ph ], [ %indvars.iv.next218, %for.cond69 ]
  %ii.1197 = phi i32 [ 0, %for.body71.lr.ph ], [ %inc80, %for.cond69 ]
  %arrayidx73 = getelementptr inbounds i32* %23, i64 %indvars.iv217
  %26 = load i32* %arrayidx73, align 4, !tbaa !3
  %arrayidx75 = getelementptr inbounds i32* %24, i64 %indvars.iv217
  %27 = load i32* %arrayidx75, align 4, !tbaa !3
  %cmp76 = icmp eq i32 %26, %27
  %indvars.iv.next218 = add i64 %indvars.iv217, 1
  %inc80 = add nsw i32 %ii.1197, 1
  br i1 %cmp76, label %for.cond69, label %for.end81

for.end81:                                        ; preds = %for.cond69, %for.body71, %for.cond69.preheader
  %ii.1.lcssa = phi i32 [ 0, %for.cond69.preheader ], [ %ii.1197, %for.body71 ], [ %inc80, %for.cond69 ]
  %cmp82 = icmp eq i32 %ii.1.lcssa, %22
  br i1 %cmp82, label %if.then83, label %for.cond41.backedge

for.cond41.backedge:                              ; preds = %for.end81, %if.then83, %if.else52
  %jtest.0 = add nsw i32 %jtest.0200, 1
  %cmp42 = icmp slt i32 %jtest.0, %ntest.1
  %indvars.iv.next222 = add i64 %indvars.iv221, 1
  br i1 %cmp42, label %for.body43, label %for.inc95

if.then83:                                        ; preds = %for.end81
  %28 = load i32* %arrayidx34, align 4, !tbaa !3
  %arrayidx87 = getelementptr inbounds i32* %call6, i64 %idxprom62
  store i32 %28, i32* %arrayidx87, align 4, !tbaa !3
  br label %for.cond41.backedge

for.inc95:                                        ; preds = %if.then36, %for.body43, %for.cond41.backedge, %for.body30.for.inc95_crit_edge
  %lftr.wideiv227.pre-phi = phi i32 [ %lftr.wideiv227.pre, %for.body30.for.inc95_crit_edge ], [ %10, %for.cond41.backedge ], [ %10, %for.body43 ], [ %10, %if.then36 ]
  %inc96.pre-phi = phi i32 [ %inc96.pre, %for.body30.for.inc95_crit_edge ], [ %jtest.0198, %for.cond41.backedge ], [ %jtest.0198, %for.body43 ], [ %jtest.0198, %if.then36 ]
  %indvars.iv.next225.pre-phi = phi i64 [ %indvars.iv.next225.pre, %for.body30.for.inc95_crit_edge ], [ %9, %for.cond41.backedge ], [ %9, %for.body43 ], [ %9, %if.then36 ]
  %nlist2.3 = phi i32 [ %nlist2.2202, %for.body30.for.inc95_crit_edge ], [ %inc37, %for.cond41.backedge ], [ %inc37, %for.body43 ], [ %inc37, %if.then36 ]
  %indvars.iv.next220 = add i64 %indvars.iv219, 1
  %exitcond228 = icmp eq i32 %lftr.wideiv227.pre-phi, %ntest.1
  br i1 %exitcond228, label %for.end97, label %for.body30

for.end97:                                        ; preds = %for.inc95, %for.end26
  %nlist2.2.lcssa = phi i32 [ %nlist2.1, %for.end26 ], [ %nlist2.3, %for.inc95 ]
  call void @IVfree(i32* %call27) #4
  call void @IVfree(i32* %call8) #4
  call void @IVfree(i32* %call7) #4
  %call98 = call i32* @IVinit(i32 %nlist2.2.lcssa, i32 -1) #4
  br label %for.body101

for.body101:                                      ; preds = %for.end97, %if.end111
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end111 ], [ 0, %for.end97 ]
  %nv2.0195 = phi i32 [ %nv2.1, %if.end111 ], [ 0, %for.end97 ]
  %arrayidx103 = getelementptr inbounds i32* %call6, i64 %indvars.iv
  %29 = load i32* %arrayidx103, align 4, !tbaa !3
  %idxprom104 = sext i32 %29 to i64
  %arrayidx105 = getelementptr inbounds i32* %call98, i64 %idxprom104
  %30 = load i32* %arrayidx105, align 4, !tbaa !3
  %cmp106 = icmp eq i32 %30, -1
  br i1 %cmp106, label %if.then107, label %if.end111

if.then107:                                       ; preds = %for.body101
  %inc108 = add nsw i32 %nv2.0195, 1
  store i32 %nv2.0195, i32* %arrayidx105, align 4, !tbaa !3
  br label %if.end111

if.end111:                                        ; preds = %if.then107, %for.body101
  %31 = phi i32 [ %nv2.0195, %if.then107 ], [ %30, %for.body101 ]
  %nv2.1 = phi i32 [ %inc108, %if.then107 ], [ %nv2.0195, %for.body101 ]
  store i32 %31, i32* %arrayidx103, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %0
  br i1 %exitcond, label %for.end118, label %for.body101

for.end118:                                       ; preds = %if.end111
  call void @IVfree(i32* %call98) #4
  br label %return

return:                                           ; preds = %if.end, %for.end118
  %retval.0 = phi i32* [ %call6, %for.end118 ], [ null, %if.end ]
  ret i32* %retval.0
}
