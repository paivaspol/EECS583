define void @IVL_overwrite(%struct._IVL* %ivl, %struct._IV* %oldToNewIV) #0 {
entry:
  %size = alloca i32, align 4
  %list = alloca i32*, align 8
  %cmp = icmp eq %struct._IVL* %ivl, null
  %cmp1 = icmp eq %struct._IV* %oldToNewIV, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([50 x i8]* @.str7, i64 0, i64 0), %struct._IVL* %ivl, %struct._IV* %oldToNewIV) #4
  call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  %call2 = call i32* @IV_entries(%struct._IV* %oldToNewIV) #4
  %call3 = call i32 @IV_size(%struct._IV* %oldToNewIV) #4
  %nlist4 = getelementptr inbounds %struct._IVL* %ivl, i64 0, i32 2
  %1 = load i32* %nlist4, align 4, !tbaa !3
  %cmp540 = icmp sgt i32 %1, 0
  br i1 %cmp540, label %for.body, label %for.end23

for.body:                                         ; preds = %if.end, %for.inc21
  %ilist.041 = phi i32 [ %inc22, %for.inc21 ], [ 0, %if.end ]
  call void @IVL_listAndSize(%struct._IVL* %ivl, i32 %ilist.041, i32* %size, i32** %list) #4
  %2 = load i32* %size, align 4, !tbaa !3
  %cmp738 = icmp sgt i32 %2, 0
  br i1 %cmp738, label %for.body8.lr.ph, label %for.inc21

for.body8.lr.ph:                                  ; preds = %for.body
  %3 = load i32** %list, align 8, !tbaa !0
  br label %for.body8

for.body8:                                        ; preds = %for.body8.lr.ph, %for.inc
  %4 = phi i32 [ %2, %for.body8.lr.ph ], [ %7, %for.inc ]
  %indvars.iv = phi i64 [ 0, %for.body8.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds i32* %3, i64 %indvars.iv
  %5 = load i32* %arrayidx, align 4, !tbaa !3
  %cmp9 = icmp sgt i32 %5, -1
  %cmp12 = icmp slt i32 %5, %call3
  %or.cond37 = and i1 %cmp9, %cmp12
  br i1 %or.cond37, label %if.then13, label %for.inc

if.then13:                                        ; preds = %for.body8
  %idxprom16 = sext i32 %5 to i64
  %arrayidx17 = getelementptr inbounds i32* %call2, i64 %idxprom16
  %6 = load i32* %arrayidx17, align 4, !tbaa !3
  store i32 %6, i32* %arrayidx, align 4, !tbaa !3
  %.pre = load i32* %size, align 4, !tbaa !3
  br label %for.inc

for.inc:                                          ; preds = %for.body8, %if.then13
  %7 = phi i32 [ %4, %for.body8 ], [ %.pre, %if.then13 ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %8 = trunc i64 %indvars.iv.next to i32
  %cmp7 = icmp slt i32 %8, %7
  br i1 %cmp7, label %for.body8, label %for.inc21

for.inc21:                                        ; preds = %for.inc, %for.body
  %inc22 = add nsw i32 %ilist.041, 1
  %exitcond = icmp eq i32 %inc22, %1
  br i1 %exitcond, label %for.end23, label %for.body

for.end23:                                        ; preds = %for.inc21, %if.end
  ret void
}
