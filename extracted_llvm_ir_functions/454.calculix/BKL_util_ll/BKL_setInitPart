define float @BKL_setInitPart(%struct._BKL* %bkl, i32 %flag, i32 %seed, i32* %domcolors) #0 {
entry:
  %dsize = alloca i32, align 4
  %ssize = alloca i32, align 4
  %dadj = alloca i32*, align 8
  %sadj = alloca i32*, align 8
  %drand = alloca %struct._Drand, align 8
  %cmp = icmp eq %struct._BKL* %bkl, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %flag.off = add i32 %flag, -1
  %0 = icmp ugt i32 %flag.off, 5
  br i1 %0, label %if.then, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp5 = icmp eq i32 %flag, 6
  %cmp6 = icmp eq i32* %domcolors, null
  %or.cond = and i1 %cmp5, %cmp6
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([58 x i8]* @.str7, i64 0, i64 0), %struct._BKL* %bkl, i32 %flag, i32 %seed, i32* %domcolors) #5
  call void @exit(i32 -1) #6
  unreachable

if.end:                                           ; preds = %lor.lhs.false4
  %bpg7 = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 0
  %2 = load %struct._BPG** %bpg7, align 8, !tbaa !0
  %ndom8 = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 1
  %3 = load i32* %ndom8, align 4, !tbaa !3
  %colors9 = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 10
  %4 = load i32** %colors9, align 8, !tbaa !0
  switch i32 %3, label %if.else17 [
    i32 1, label %if.then12
    i32 2, label %if.then14
  ]

if.then12:                                        ; preds = %if.end
  store i32 1, i32* %4, align 4, !tbaa !3
  call void @BKL_setColorWeights(%struct._BKL* %bkl) #7
  br label %if.end95

if.then14:                                        ; preds = %if.end
  store i32 1, i32* %4, align 4, !tbaa !3
  %arrayidx16 = getelementptr inbounds i32* %4, i64 1
  store i32 2, i32* %arrayidx16, align 4, !tbaa !3
  call void @BKL_setColorWeights(%struct._BKL* %bkl) #7
  br label %if.end95

if.else17:                                        ; preds = %if.end
  switch i32 %flag, label %if.end95 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb25
    i32 3, label %sw.bb25
    i32 4, label %sw.bb37
    i32 5, label %sw.bb37
    i32 6, label %sw.bb93
  ]

sw.bb:                                            ; preds = %if.else17
  %5 = bitcast %struct._Drand* %drand to i8*
  call void @llvm.lifetime.start(i64 72, i8* %5) #1
  call void @Drand_setDefaultFields(%struct._Drand* %drand) #5
  call void @Drand_init(%struct._Drand* %drand) #5
  call void @Drand_setUniform(%struct._Drand* %drand, double 0.000000e+00, double 1.000000e+00) #5
  %cmp18 = icmp sgt i32 %seed, 0
  br i1 %cmp18, label %if.then19, label %for.cond.preheader

if.then19:                                        ; preds = %sw.bb
  call void @Drand_setSeed(%struct._Drand* %drand, i32 %seed) #5
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then19, %sw.bb
  %cmp21173 = icmp sgt i32 %3, 0
  br i1 %cmp21173, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %call22 = call double @Drand_value(%struct._Drand* %drand) #5
  %cmp23 = fcmp olt double %call22, 5.000000e-01
  %cond = select i1 %cmp23, i32 1, i32 2
  %arrayidx24 = getelementptr inbounds i32* %4, i64 %indvars.iv
  store i32 %cond, i32* %arrayidx24, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %3
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %for.cond.preheader
  call void @BKL_setColorWeights(%struct._BKL* %bkl) #7
  call void @llvm.lifetime.end(i64 72, i8* %5) #1
  br label %if.end95

sw.bb25:                                          ; preds = %if.else17, %if.else17
  call void @IVfill(i32 %3, i32* %4, i32 2) #5
  %cmp26 = icmp eq i32 %flag, 2
  br i1 %cmp26, label %if.then27, label %if.else30

if.then27:                                        ; preds = %sw.bb25
  %rem = srem i32 %seed, %3
  %idxprom28 = sext i32 %rem to i64
  %arrayidx29 = getelementptr inbounds i32* %4, i64 %idxprom28
  store i32 1, i32* %arrayidx29, align 4, !tbaa !3
  br label %if.end36

if.else30:                                        ; preds = %sw.bb25
  %6 = load %struct._BPG** %bpg7, align 8, !tbaa !0
  %rem32 = srem i32 %seed, %3
  %call33 = call i32 @BPG_pseudoperipheralnode(%struct._BPG* %6, i32 %rem32) #5
  %idxprom34 = sext i32 %call33 to i64
  %arrayidx35 = getelementptr inbounds i32* %4, i64 %idxprom34
  store i32 1, i32* %arrayidx35, align 4, !tbaa !3
  br label %if.end36

if.end36:                                         ; preds = %if.else30, %if.then27
  call void @BKL_setColorWeights(%struct._BKL* %bkl) #7
  br label %if.end95

sw.bb37:                                          ; preds = %if.else17, %if.else17
  call void @IVfill(i32 %3, i32* %4, i32 2) #5
  call void @BKL_setColorWeights(%struct._BKL* %bkl) #7
  %call38 = call i32* @IVinit(i32 %3, i32 -1) #5
  %call39 = call i32* @IVinit(i32 %3, i32 -1) #5
  %cmp40 = icmp eq i32 %flag, 4
  br i1 %cmp40, label %if.then41, label %if.else44

if.then41:                                        ; preds = %sw.bb37
  %rem42 = srem i32 %seed, %3
  br label %if.end49

if.else44:                                        ; preds = %sw.bb37
  %7 = load %struct._BPG** %bpg7, align 8, !tbaa !0
  %rem46 = srem i32 %seed, %3
  %call47 = call i32 @BPG_pseudoperipheralnode(%struct._BPG* %7, i32 %rem46) #5
  br label %if.end49

if.end49:                                         ; preds = %if.else44, %if.then41
  %storemerge = phi i32 [ %call47, %if.else44 ], [ %rem42, %if.then41 ]
  store i32 %storemerge, i32* %call38, align 4, !tbaa !3
  %idxprom51 = sext i32 %storemerge to i64
  %arrayidx52 = getelementptr inbounds i32* %call39, i64 %idxprom51
  store i32 1, i32* %arrayidx52, align 4, !tbaa !3
  %arrayidx57 = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 11, i64 1
  %arrayidx58 = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 11, i64 2
  %graph = getelementptr inbounds %struct._BPG* %2, i64 0, i32 2
  %sub = add nsw i32 %3, -1
  br label %while.body

while.cond.loopexit:                              ; preds = %for.inc90, %if.end61
  %last.1.lcssa = phi i32 [ %last.0185, %if.end61 ], [ %last.2.lcssa, %for.inc90 ]
  %8 = trunc i64 %indvars.iv190 to i32
  %cmp53 = icmp slt i32 %8, %last.1.lcssa
  br i1 %cmp53, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond.loopexit, %if.end49
  %indvars.iv190 = phi i64 [ %indvars.iv.next191, %while.cond.loopexit ], [ 0, %if.end49 ]
  %last.0185 = phi i32 [ %last.1.lcssa, %while.cond.loopexit ], [ 0, %if.end49 ]
  %indvars.iv.next191 = add i64 %indvars.iv190, 1
  %arrayidx56 = getelementptr inbounds i32* %call38, i64 %indvars.iv190
  %9 = load i32* %arrayidx56, align 4, !tbaa !3
  call void @BKL_flipDomain(%struct._BKL* %bkl, i32 %9) #7
  %10 = load i32* %arrayidx57, align 4, !tbaa !3
  %11 = load i32* %arrayidx58, align 4, !tbaa !3
  %cmp59 = icmp slt i32 %10, %11
  br i1 %cmp59, label %if.end61, label %while.end

if.end61:                                         ; preds = %while.body
  %12 = load %struct._Graph** %graph, align 8, !tbaa !0
  call void @Graph_adjAndSize(%struct._Graph* %12, i32 %9, i32* %dsize, i32** %dadj) #5
  %13 = load i32* %dsize, align 4, !tbaa !3
  %cmp63180 = icmp sgt i32 %13, 0
  br i1 %cmp63180, label %for.body64, label %while.cond.loopexit

for.body64:                                       ; preds = %if.end61, %for.inc90
  %indvars.iv188 = phi i64 [ %indvars.iv.next189, %for.inc90 ], [ 0, %if.end61 ]
  %last.1181 = phi i32 [ %last.2.lcssa, %for.inc90 ], [ %last.0185, %if.end61 ]
  %14 = load i32** %dadj, align 8, !tbaa !0
  %arrayidx66 = getelementptr inbounds i32* %14, i64 %indvars.iv188
  %15 = load i32* %arrayidx66, align 4, !tbaa !3
  %16 = load %struct._Graph** %graph, align 8, !tbaa !0
  call void @Graph_adjAndSize(%struct._Graph* %16, i32 %15, i32* %ssize, i32** %sadj) #5
  %17 = load i32* %ssize, align 4, !tbaa !3
  %cmp69176 = icmp sgt i32 %17, 0
  br i1 %cmp69176, label %for.body70.lr.ph, label %for.inc90

for.body70.lr.ph:                                 ; preds = %for.body64
  %18 = load i32** %sadj, align 8, !tbaa !0
  br label %for.body70

for.body70:                                       ; preds = %for.body70.lr.ph, %for.inc87
  %19 = phi i32 [ %17, %for.body70.lr.ph ], [ %23, %for.inc87 ]
  %indvars.iv186 = phi i64 [ 0, %for.body70.lr.ph ], [ %indvars.iv.next187, %for.inc87 ]
  %last.2177 = phi i32 [ %last.1181, %for.body70.lr.ph ], [ %last.3, %for.inc87 ]
  %arrayidx72 = getelementptr inbounds i32* %18, i64 %indvars.iv186
  %20 = load i32* %arrayidx72, align 4, !tbaa !3
  %idxprom73 = sext i32 %20 to i64
  %arrayidx74 = getelementptr inbounds i32* %call39, i64 %idxprom73
  %21 = load i32* %arrayidx74, align 4, !tbaa !3
  %cmp75 = icmp eq i32 %21, -1
  br i1 %cmp75, label %if.then76, label %for.inc87

if.then76:                                        ; preds = %for.body70
  %cmp77 = icmp eq i32 %last.2177, %sub
  br i1 %cmp77, label %if.then78, label %if.end80

if.then78:                                        ; preds = %if.then76
  %22 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call79 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([69 x i8]* @.str8, i64 0, i64 0), %struct._BKL* %bkl, i32 %flag, i32 %seed, i32* %domcolors) #5
  call void @exit(i32 -1) #6
  unreachable

if.end80:                                         ; preds = %if.then76
  store i32 1, i32* %arrayidx74, align 4, !tbaa !3
  %inc83 = add nsw i32 %last.2177, 1
  %idxprom84 = sext i32 %inc83 to i64
  %arrayidx85 = getelementptr inbounds i32* %call38, i64 %idxprom84
  store i32 %20, i32* %arrayidx85, align 4, !tbaa !3
  %.pre = load i32* %ssize, align 4, !tbaa !3
  br label %for.inc87

for.inc87:                                        ; preds = %for.body70, %if.end80
  %23 = phi i32 [ %.pre, %if.end80 ], [ %19, %for.body70 ]
  %last.3 = phi i32 [ %inc83, %if.end80 ], [ %last.2177, %for.body70 ]
  %indvars.iv.next187 = add i64 %indvars.iv186, 1
  %24 = trunc i64 %indvars.iv.next187 to i32
  %cmp69 = icmp slt i32 %24, %23
  br i1 %cmp69, label %for.body70, label %for.inc90

for.inc90:                                        ; preds = %for.inc87, %for.body64
  %last.2.lcssa = phi i32 [ %last.1181, %for.body64 ], [ %last.3, %for.inc87 ]
  %indvars.iv.next189 = add i64 %indvars.iv188, 1
  %25 = load i32* %dsize, align 4, !tbaa !3
  %26 = trunc i64 %indvars.iv.next189 to i32
  %cmp63 = icmp slt i32 %26, %25
  br i1 %cmp63, label %for.body64, label %while.cond.loopexit

while.end:                                        ; preds = %while.cond.loopexit, %while.body
  call void @IVfree(i32* %call38) #5
  call void @IVfree(i32* %call39) #5
  call void @BKL_setColorWeights(%struct._BKL* %bkl) #7
  br label %if.end95

sw.bb93:                                          ; preds = %if.else17
  call void @IVcopy(i32 %3, i32* %4, i32* %domcolors) #5
  call void @BKL_setColorWeights(%struct._BKL* %bkl) #7
  br label %if.end95

if.end95:                                         ; preds = %if.then14, %if.else17, %sw.bb93, %while.end, %if.end36, %for.end, %if.then12
  %call96 = call float @BKL_evalfcn(%struct._BKL* %bkl) #5
  ret float %call96
}
