define i32 @BKL_greyCodeDomain(%struct._BKL* %bkl, i32 %count) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._BKL* %bkl}, i64 0, metadata !134), !dbg !285
  tail call void @llvm.dbg.value(metadata !{i32 %count}, i64 0, metadata !135), !dbg !286
  %cmp = icmp eq %struct._BKL* %bkl, null, !dbg !287
  br i1 %cmp, label %if.then, label %for.cond.preheader, !dbg !287

for.cond.preheader:                               ; preds = %entry
  %rem7 = srem i32 %count, 2, !dbg !288
  %cmp18 = icmp eq i32 %rem7, 1, !dbg !288
  br i1 %cmp18, label %if.then2, label %for.inc, !dbg !288

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !291, !tbaa !183
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([52 x i8]* @.str6, i64 0, i64 0), %struct._BKL* null) #6, !dbg !291
  tail call void @exit(i32 -1) #7, !dbg !293
  unreachable, !dbg !293

if.then2:                                         ; preds = %for.inc, %for.cond.preheader
  %idom.0.lcssa = phi i32 [ 0, %for.cond.preheader ], [ %inc, %for.inc ]
  ret i32 %idom.0.lcssa, !dbg !294

for.inc:                                          ; preds = %for.cond.preheader, %for.inc
  %idom.010 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ]
  %chk.09 = phi i32 [ %mul, %for.inc ], [ 2, %for.cond.preheader ]
  %inc = add nsw i32 %idom.010, 1, !dbg !296
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !137), !dbg !296
  tail call void @llvm.dbg.value(metadata !{i32 %chk.09}, i64 0, metadata !138), !dbg !296
  %mul = shl nsw i32 %chk.09, 1, !dbg !296
  tail call void @llvm.dbg.value(metadata !{i32 %mul}, i64 0, metadata !136), !dbg !296
  %rem = srem i32 %count, %mul, !dbg !288
  %cmp1 = icmp eq i32 %rem, %chk.09, !dbg !288
  br i1 %cmp1, label %if.then2, label %for.inc, !dbg !288
}
