define i32 @InpMtx_readFromHBfile(%struct._InpMtx* %inpmtx, i8* %fn) #0 {
entry:
  %type = alloca i8*, align 8
  %ncol = alloca i32, align 4
  %nnonzeros = alloca i32, align 4
  %nrhs = alloca i32, align 4
  %nrow = alloca i32, align 4
  %cmp = icmp eq %struct._InpMtx* %inpmtx, null
  %cmp1 = icmp eq i8* %fn, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), %struct._InpMtx* %inpmtx, i8* %fn) #6
  br label %return

if.end:                                           ; preds = %entry
  %call2 = call i32 @strcmp(i8* %fn, i8* getelementptr inbounds ([5 x i8]* @.str63, i64 0, i64 0)) #7
  %cmp3 = icmp eq i32 %call2, 0
  br i1 %cmp3, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %2 = call i64 @fwrite(i8* getelementptr inbounds ([23 x i8]* @.str64, i64 0, i64 0), i64 22, i64 1, %struct._IO_FILE* %1) #5
  call void @exit(i32 0) #9
  unreachable

if.end6:                                          ; preds = %if.end
  %call7 = call i32 @readHB_info(i8* %fn, i32* %nrow, i32* %ncol, i32* %nnonzeros, i8** %type, i32* %nrhs) #6
  %cmp8 = icmp eq i32 %call7, 1
  br i1 %cmp8, label %if.end10, label %return

if.end10:                                         ; preds = %if.end6
  %3 = load i8** %type, align 8, !tbaa !0
  %4 = load i8* %3, align 1, !tbaa !1
  %conv = sext i8 %4 to i32
  switch i32 %conv, label %sw.default [
    i32 80, label %sw.epilog
    i32 82, label %sw.bb11
    i32 67, label %sw.bb12
  ]

sw.bb11:                                          ; preds = %if.end10
  br label %sw.epilog

sw.bb12:                                          ; preds = %if.end10
  br label %sw.epilog

sw.default:                                       ; preds = %if.end10
  %5 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([91 x i8]* @.str65, i64 0, i64 0), i8* %3) #6
  call void @exit(i32 -1) #9
  unreachable

sw.epilog:                                        ; preds = %if.end10, %sw.bb12, %sw.bb11
  %inputMode.0 = phi i32 [ 2, %sw.bb12 ], [ 1, %sw.bb11 ], [ 0, %if.end10 ]
  %6 = load i32* %nnonzeros, align 4, !tbaa !3
  call void @InpMtx_init(%struct._InpMtx* %inpmtx, i32 2, i32 %inputMode.0, i32 %6, i32 0) #6
  %7 = load i32* %ncol, align 4, !tbaa !3
  %add = add nsw i32 %7, 1
  %call14 = call i32* @IVinit(i32 %add, i32 -1) #6
  %call15 = call i32* @InpMtx_ivec1(%struct._InpMtx* %inpmtx) #6
  %call16 = call i32* @InpMtx_ivec2(%struct._InpMtx* %inpmtx) #6
  %call17 = call double* @InpMtx_dvec(%struct._InpMtx* %inpmtx) #6
  %8 = load i32* %nnonzeros, align 4, !tbaa !3
  call void @InpMtx_setNent(%struct._InpMtx* %inpmtx, i32 %8) #6
  %call18 = call i32 @readHB_mat_double(i8* %fn, i32* %call14, i32* %call16, double* %call17) #6
  %cmp19 = icmp eq i32 %call18, 1
  br i1 %cmp19, label %for.cond.preheader, label %return

for.cond.preheader:                               ; preds = %sw.epilog
  %9 = load i32* %ncol, align 4, !tbaa !3
  %cmp2392 = icmp slt i32 %9, 0
  br i1 %cmp2392, label %for.cond26.preheader, label %for.body

for.cond26.preheader:                             ; preds = %for.body, %for.cond.preheader
  %10 = phi i32 [ %9, %for.cond.preheader ], [ %13, %for.body ]
  %11 = load i32* %nnonzeros, align 4, !tbaa !3
  %cmp2790 = icmp sgt i32 %11, 0
  br i1 %cmp2790, label %for.body29, label %for.cond36.preheader

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv98 = phi i64 [ %indvars.iv.next99, %for.body ], [ 0, %for.cond.preheader ]
  %arrayidx25 = getelementptr inbounds i32* %call14, i64 %indvars.iv98
  %12 = load i32* %arrayidx25, align 4, !tbaa !3
  %dec = add nsw i32 %12, -1
  store i32 %dec, i32* %arrayidx25, align 4, !tbaa !3
  %indvars.iv.next99 = add i64 %indvars.iv98, 1
  %13 = load i32* %ncol, align 4, !tbaa !3
  %14 = trunc i64 %indvars.iv98 to i32
  %cmp23 = icmp slt i32 %14, %13
  br i1 %cmp23, label %for.body, label %for.cond26.preheader

for.cond26.for.cond36.preheader_crit_edge:        ; preds = %for.body29
  %.pre = load i32* %ncol, align 4, !tbaa !3
  br label %for.cond36.preheader

for.cond36.preheader:                             ; preds = %for.cond26.for.cond36.preheader_crit_edge, %for.cond26.preheader
  %15 = phi i32 [ %.pre, %for.cond26.for.cond36.preheader_crit_edge ], [ %10, %for.cond26.preheader ]
  %cmp3788 = icmp sgt i32 %15, 0
  br i1 %cmp3788, label %for.body39, label %for.end56

for.body29:                                       ; preds = %for.cond26.preheader, %for.body29
  %indvars.iv96 = phi i64 [ %indvars.iv.next97, %for.body29 ], [ 0, %for.cond26.preheader ]
  %arrayidx31 = getelementptr inbounds i32* %call16, i64 %indvars.iv96
  %16 = load i32* %arrayidx31, align 4, !tbaa !3
  %dec32 = add nsw i32 %16, -1
  store i32 %dec32, i32* %arrayidx31, align 4, !tbaa !3
  %indvars.iv.next97 = add i64 %indvars.iv96, 1
  %17 = load i32* %nnonzeros, align 4, !tbaa !3
  %18 = trunc i64 %indvars.iv.next97 to i32
  %cmp27 = icmp slt i32 %18, %17
  br i1 %cmp27, label %for.body29, label %for.cond26.for.cond36.preheader_crit_edge

for.cond45.for.cond36.loopexit_crit_edge:         ; preds = %for.body48
  %.pre100 = load i32* %ncol, align 4, !tbaa !3
  br label %for.cond36.loopexit

for.cond36.loopexit:                              ; preds = %for.cond45.for.cond36.loopexit_crit_edge, %for.body39
  %19 = phi i32 [ %.pre100, %for.cond45.for.cond36.loopexit_crit_edge ], [ %21, %for.body39 ]
  %20 = trunc i64 %indvars.iv.next95 to i32
  %cmp37 = icmp slt i32 %20, %19
  br i1 %cmp37, label %for.body39, label %for.end56

for.body39:                                       ; preds = %for.cond36.loopexit, %for.cond36.preheader
  %21 = phi i32 [ %15, %for.cond36.preheader ], [ %19, %for.cond36.loopexit ]
  %indvars.iv94 = phi i64 [ 0, %for.cond36.preheader ], [ %indvars.iv.next95, %for.cond36.loopexit ]
  %arrayidx41 = getelementptr inbounds i32* %call14, i64 %indvars.iv94
  %22 = load i32* %arrayidx41, align 4, !tbaa !3
  %indvars.iv.next95 = add i64 %indvars.iv94, 1
  %arrayidx44 = getelementptr inbounds i32* %call14, i64 %indvars.iv.next95
  %23 = load i32* %arrayidx44, align 4, !tbaa !3
  %sub = add nsw i32 %23, -1
  %cmp4686 = icmp sgt i32 %22, %sub
  br i1 %cmp4686, label %for.cond36.loopexit, label %for.body48.lr.ph

for.body48.lr.ph:                                 ; preds = %for.body39
  %24 = sext i32 %22 to i64
  br label %for.body48

for.body48:                                       ; preds = %for.body48, %for.body48.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body48 ], [ %24, %for.body48.lr.ph ]
  %arrayidx50 = getelementptr inbounds i32* %call15, i64 %indvars.iv
  %25 = trunc i64 %indvars.iv94 to i32
  store i32 %25, i32* %arrayidx50, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %26 = trunc i64 %indvars.iv to i32
  %cmp46 = icmp slt i32 %26, %sub
  br i1 %cmp46, label %for.body48, label %for.cond45.for.cond36.loopexit_crit_edge

for.end56:                                        ; preds = %for.cond36.loopexit, %for.cond36.preheader
  call void @IVfree(i32* %call14) #6
  %27 = load i8** %type, align 8, !tbaa !0
  call void @CVfree(i8* %27) #6
  br label %return

return:                                           ; preds = %sw.epilog, %if.end6, %for.end56, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 1, %for.end56 ], [ %call7, %if.end6 ], [ %call18, %sw.epilog ]
  ret i32 %retval.0
}
