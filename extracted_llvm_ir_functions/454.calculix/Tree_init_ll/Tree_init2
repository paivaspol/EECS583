define void @Tree_init2(%struct._Tree* %tree, i32 %size, i32* %par) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._Tree* %tree}, i64 0, metadata !27), !dbg !78
  tail call void @llvm.dbg.value(metadata !{i32 %size}, i64 0, metadata !28), !dbg !79
  tail call void @llvm.dbg.value(metadata !{i32* %par}, i64 0, metadata !29), !dbg !80
  %cmp = icmp eq %struct._Tree* %tree, null, !dbg !81
  %cmp1 = icmp slt i32 %size, 1, !dbg !81
  %or.cond = or i1 %cmp, %cmp1, !dbg !81
  %cmp3 = icmp eq i32* %par, null, !dbg !81
  %or.cond14 = or i1 %or.cond, %cmp3, !dbg !81
  br i1 %or.cond14, label %if.then, label %if.end, !dbg !81

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !82, !tbaa !64
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([50 x i8]* @.str1, i64 0, i64 0), %struct._Tree* %tree, i32 %size, i32* %par) #5, !dbg !82
  tail call void @exit(i32 -1) #6, !dbg !84
  unreachable, !dbg !84

if.end:                                           ; preds = %entry
  tail call void @Tree_init1(%struct._Tree* %tree, i32 %size) #7, !dbg !85
  %par4 = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 2, !dbg !86
  %1 = load i32** %par4, align 8, !dbg !86, !tbaa !64
  tail call void @IVcopy(i32 %size, i32* %1, i32* %par) #5, !dbg !86
  tail call void @Tree_setFchSibRoot(%struct._Tree* %tree) #7, !dbg !87
  ret void, !dbg !88
}
