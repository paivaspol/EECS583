define void @Tree_init1(%struct._Tree* %tree, i32 %size) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._Tree* %tree}, i64 0, metadata !21), !dbg !59
  tail call void @llvm.dbg.value(metadata !{i32 %size}, i64 0, metadata !22), !dbg !60
  %cmp = icmp eq %struct._Tree* %tree, null, !dbg !61
  %cmp1 = icmp slt i32 %size, 0, !dbg !61
  %or.cond = or i1 %cmp, %cmp1, !dbg !61
  br i1 %or.cond, label %if.then, label %if.end, !dbg !61

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !62, !tbaa !64
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([47 x i8]* @.str, i64 0, i64 0), %struct._Tree* %tree, i32 %size) #5, !dbg !62
  tail call void @exit(i32 -1) #6, !dbg !67
  unreachable, !dbg !67

if.end:                                           ; preds = %entry
  tail call void @Tree_clearData(%struct._Tree* %tree) #5, !dbg !68
  %n = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 0, !dbg !69
  store i32 %size, i32* %n, align 4, !dbg !69, !tbaa !70
  %cmp2 = icmp sgt i32 %size, 0, !dbg !71
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !71

if.then3:                                         ; preds = %if.end
  %call4 = tail call i32* @IVinit(i32 %size, i32 -1) #5, !dbg !72
  %par = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 2, !dbg !72
  store i32* %call4, i32** %par, align 8, !dbg !72, !tbaa !64
  %call5 = tail call i32* @IVinit(i32 %size, i32 -1) #5, !dbg !74
  %fch = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 3, !dbg !74
  store i32* %call5, i32** %fch, align 8, !dbg !74, !tbaa !64
  %call6 = tail call i32* @IVinit(i32 %size, i32 -1) #5, !dbg !75
  %sib = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 4, !dbg !75
  store i32* %call6, i32** %sib, align 8, !dbg !75, !tbaa !64
  br label %if.end7, !dbg !76

if.end7:                                          ; preds = %if.then3, %if.end
  ret void, !dbg !77
}
