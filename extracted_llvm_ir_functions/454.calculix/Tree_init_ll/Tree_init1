define void @Tree_init1(%struct._Tree* %tree, i32 %size) #0 {
entry:
  %cmp = icmp eq %struct._Tree* %tree, null
  %cmp1 = icmp slt i32 %size, 0
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([47 x i8]* @.str, i64 0, i64 0), %struct._Tree* %tree, i32 %size) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  tail call void @Tree_clearData(%struct._Tree* %tree) #4
  %n = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 0
  store i32 %size, i32* %n, align 4, !tbaa !3
  %cmp2 = icmp sgt i32 %size, 0
  br i1 %cmp2, label %if.then3, label %if.end7

if.then3:                                         ; preds = %if.end
  %call4 = tail call i32* @IVinit(i32 %size, i32 -1) #4
  %par = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 2
  store i32* %call4, i32** %par, align 8, !tbaa !0
  %call5 = tail call i32* @IVinit(i32 %size, i32 -1) #4
  %fch = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 3
  store i32* %call5, i32** %fch, align 8, !tbaa !0
  %call6 = tail call i32* @IVinit(i32 %size, i32 -1) #4
  %sib = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 4
  store i32* %call6, i32** %sib, align 8, !tbaa !0
  br label %if.end7

if.end7:                                          ; preds = %if.then3, %if.end
  ret void
}
