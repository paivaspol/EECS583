define void @Tree_setFchSibRoot(%struct._Tree* %tree) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._Tree* %tree}, i64 0, metadata !43), !dbg !89
  %cmp = icmp eq %struct._Tree* %tree, null, !dbg !90
  br i1 %cmp, label %if.then, label %if.end, !dbg !90

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !91, !tbaa !64
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([52 x i8]* @.str3, i64 0, i64 0), %struct._Tree* null) #5, !dbg !91
  tail call void @exit(i32 -1) #6, !dbg !93
  unreachable, !dbg !93

if.end:                                           ; preds = %entry
  %n1 = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 0, !dbg !94
  %1 = load i32* %n1, align 4, !dbg !94, !tbaa !70
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !44), !dbg !94
  %cmp2 = icmp slt i32 %1, 1, !dbg !94
  br i1 %cmp2, label %return, label %for.body.lr.ph.lr.ph, !dbg !94

for.body.lr.ph.lr.ph:                             ; preds = %if.end
  %par5 = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 2, !dbg !95
  %2 = load i32** %par5, align 8, !dbg !95, !tbaa !64
  tail call void @llvm.dbg.value(metadata !{i32* %2}, i64 0, metadata !49), !dbg !95
  %fch6 = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 3, !dbg !96
  %3 = load i32** %fch6, align 8, !dbg !96, !tbaa !64
  tail call void @llvm.dbg.value(metadata !{i32* %3}, i64 0, metadata !48), !dbg !96
  %sib7 = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 4, !dbg !97
  %4 = load i32** %sib7, align 8, !dbg !97, !tbaa !64
  tail call void @llvm.dbg.value(metadata !{i32* %4}, i64 0, metadata !50), !dbg !97
  tail call void @IVfill(i32 %1, i32* %3, i32 -1) #5, !dbg !98
  %5 = load i32** %sib7, align 8, !dbg !99, !tbaa !64
  tail call void @IVfill(i32 %1, i32* %5, i32 -1) #5, !dbg !99
  tail call void @llvm.dbg.value(metadata !100, i64 0, metadata !45), !dbg !101
  br label %for.body.lr.ph, !dbg !102

for.body.lr.ph:                                   ; preds = %for.body.lr.ph.lr.ph, %if.else
  %u.04452.in = phi i32 [ %1, %for.body.lr.ph.lr.ph ], [ %u.046, %if.else ]
  %root.0.ph51 = phi i32 [ -1, %for.body.lr.ph.lr.ph ], [ %u.046, %if.else ]
  %6 = sext i32 %u.04452.in to i64
  br label %for.body, !dbg !102

for.body:                                         ; preds = %for.body.lr.ph, %if.then12
  %indvars.iv = phi i64 [ %6, %for.body.lr.ph ], [ %indvars.iv.next, %if.then12 ]
  %u.046.in = phi i32 [ %u.04452.in, %for.body.lr.ph ], [ %u.046, %if.then12 ]
  %indvars.iv.next = add i64 %indvars.iv, -1, !dbg !102
  %u.046 = add nsw i32 %u.046.in, -1, !dbg !102
  %arrayidx = getelementptr inbounds i32* %2, i64 %indvars.iv.next, !dbg !104
  %7 = load i32* %arrayidx, align 4, !dbg !104, !tbaa !70
  tail call void @llvm.dbg.value(metadata !{i32 %7}, i64 0, metadata !47), !dbg !104
  %cmp11 = icmp eq i32 %7, -1, !dbg !104
  br i1 %cmp11, label %if.else, label %if.then12, !dbg !104

if.then12:                                        ; preds = %for.body
  %idxprom13 = sext i32 %7 to i64, !dbg !106
  %arrayidx14 = getelementptr inbounds i32* %3, i64 %idxprom13, !dbg !106
  %8 = load i32* %arrayidx14, align 4, !dbg !106, !tbaa !70
  %arrayidx16 = getelementptr inbounds i32* %4, i64 %indvars.iv.next, !dbg !106
  store i32 %8, i32* %arrayidx16, align 4, !dbg !106, !tbaa !70
  %9 = trunc i64 %indvars.iv.next to i32, !dbg !108
  store i32 %9, i32* %arrayidx14, align 4, !dbg !108, !tbaa !70
  %cmp10 = icmp sgt i32 %9, 0, !dbg !102
  br i1 %cmp10, label %for.body, label %for.end, !dbg !102

if.else:                                          ; preds = %for.body
  %arrayidx20 = getelementptr inbounds i32* %4, i64 %indvars.iv.next, !dbg !109
  store i32 %root.0.ph51, i32* %arrayidx20, align 4, !dbg !109, !tbaa !70
  tail call void @llvm.dbg.value(metadata !{i32 %u.046}, i64 0, metadata !45), !dbg !111
  %cmp1045 = icmp sgt i32 %u.046, 0, !dbg !102
  br i1 %cmp1045, label %for.body.lr.ph, label %for.end, !dbg !102

for.end:                                          ; preds = %if.else, %if.then12
  %root.0.ph48 = phi i32 [ %root.0.ph51, %if.then12 ], [ %u.046, %if.else ]
  %root22 = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 1, !dbg !112
  store i32 %root.0.ph48, i32* %root22, align 4, !dbg !112, !tbaa !70
  br label %return, !dbg !113

return:                                           ; preds = %if.end, %for.end
  ret void, !dbg !113
}
