define void @Tree_init3(%struct._Tree* %tree, i32 %size, i32* %par, i32* %fch, i32* %sib) #0 {
entry:
  %cmp = icmp eq %struct._Tree* %tree, null
  %cmp1 = icmp slt i32 %size, 1
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp eq i32* %par, null
  %or.cond28 = or i1 %or.cond, %cmp3
  %cmp5 = icmp eq i32* %fch, null
  %or.cond29 = or i1 %or.cond28, %cmp5
  %cmp7 = icmp eq i32* %sib, null
  %or.cond30 = or i1 %or.cond29, %cmp7
  br i1 %or.cond30, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([56 x i8]* @.str2, i64 0, i64 0), %struct._Tree* %tree, i32 %size, i32* %par, i32* %fch, i32* %sib) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  tail call void @Tree_init1(%struct._Tree* %tree, i32 %size) #6
  %par8 = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 2
  %1 = load i32** %par8, align 8, !tbaa !0
  tail call void @IVcopy(i32 %size, i32* %1, i32* %par) #4
  %fch9 = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 3
  %2 = load i32** %fch9, align 8, !tbaa !0
  tail call void @IVcopy(i32 %size, i32* %2, i32* %fch) #4
  %sib10 = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 4
  %3 = load i32** %sib10, align 8, !tbaa !0
  tail call void @IVcopy(i32 %size, i32* %3, i32* %sib) #4
  tail call void @Tree_setRoot(%struct._Tree* %tree) #6
  ret void
}
