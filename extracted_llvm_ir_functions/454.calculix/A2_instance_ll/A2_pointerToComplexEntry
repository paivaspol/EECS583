define void @A2_pointerToComplexEntry(%struct._A2* %mtx, i32 %irow, i32 %jcol, double** %ppReal, double** %ppImag) #0 {
entry:
  %cmp = icmp eq %struct._A2* %mtx, null
  %cmp1 = icmp eq double** %ppReal, null
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp eq double** %ppImag, null
  %or.cond80 = or i1 %or.cond, %cmp3
  br i1 %or.cond80, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([70 x i8]* @.str38, i64 0, i64 0), %struct._A2* %mtx, i32 %irow, i32 %jcol, double** %ppReal, double** %ppImag) #3
  tail call void @exit(i32 -1) #4
  unreachable

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 0
  %1 = load i32* %type, align 4, !tbaa !3
  %cmp4 = icmp eq i32 %1, 2
  br i1 %cmp4, label %if.end8, label %if.then5

if.then5:                                         ; preds = %if.end
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([97 x i8]* @.str39, i64 0, i64 0), %struct._A2* %mtx, i32 %irow, i32 %jcol, double** %ppReal, double** %ppImag, i32 %1) #3
  tail call void @exit(i32 -1) #4
  unreachable

if.end8:                                          ; preds = %if.end
  %entries = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 6
  %3 = load double** %entries, align 8, !tbaa !0
  %cmp9 = icmp eq double* %3, null
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end8
  %4 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([91 x i8]* @.str40, i64 0, i64 0), %struct._A2* %mtx, i32 %irow, i32 %jcol, double** %ppReal, double** %ppImag) #3
  tail call void @exit(i32 -1) #4
  unreachable

if.end12:                                         ; preds = %if.end8
  %cmp13 = icmp sgt i32 %irow, -1
  %n117.phi.trans.insert = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 1
  %.pre = load i32* %n117.phi.trans.insert, align 4, !tbaa !3
  %cmp15 = icmp sgt i32 %.pre, %irow
  %or.cond82 = and i1 %cmp13, %cmp15
  br i1 %or.cond82, label %if.end19, label %if.then16

if.then16:                                        ; preds = %if.end12
  %5 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([90 x i8]* @.str41, i64 0, i64 0), %struct._A2* %mtx, i32 %irow, i32 %jcol, double** %ppReal, double** %ppImag, i32 %irow, i32 %.pre) #3
  tail call void @exit(i32 -1) #4
  unreachable

if.end19:                                         ; preds = %if.end12
  %cmp20 = icmp sgt i32 %jcol, -1
  %n224.phi.trans.insert = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 2
  %.pre81 = load i32* %n224.phi.trans.insert, align 4, !tbaa !3
  %cmp22 = icmp sgt i32 %.pre81, %jcol
  %or.cond83 = and i1 %cmp20, %cmp22
  br i1 %or.cond83, label %if.end26, label %if.then23

if.then23:                                        ; preds = %if.end19
  %6 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call25 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([90 x i8]* @.str42, i64 0, i64 0), %struct._A2* %mtx, i32 %irow, i32 %jcol, double** %ppReal, double** %ppImag, i32 %jcol, i32 %.pre81) #3
  tail call void @exit(i32 -1) #4
  unreachable

if.end26:                                         ; preds = %if.end19
  %inc1 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 3
  %7 = load i32* %inc1, align 4, !tbaa !3
  %mul = mul nsw i32 %7, %irow
  %inc2 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 4
  %8 = load i32* %inc2, align 4, !tbaa !3
  %mul27 = mul nsw i32 %8, %jcol
  %add = add nsw i32 %mul27, %mul
  %mul28 = shl nsw i32 %add, 1
  %idx.ext = sext i32 %mul28 to i64
  %add.ptr = getelementptr inbounds double* %3, i64 %idx.ext
  store double* %add.ptr, double** %ppReal, align 8, !tbaa !0
  %9 = load double** %entries, align 8, !tbaa !0
  %add.ptr32.sum79 = or i64 %idx.ext, 1
  %add.ptr33 = getelementptr inbounds double* %9, i64 %add.ptr32.sum79
  store double* %add.ptr33, double** %ppImag, align 8, !tbaa !0
  ret void
}
