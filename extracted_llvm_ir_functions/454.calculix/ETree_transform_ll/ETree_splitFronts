define %struct._ETree* @ETree_splitFronts(%struct._ETree* %etree, i32* %vwghts, i32 %maxfrontsize, i32 %seed) #0 {
entry:
  %cmp = icmp eq %struct._ETree* %etree, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %nfront1 = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 0
  %0 = load i32* %nfront1, align 4, !tbaa !0
  %cmp2 = icmp slt i32 %0, 1
  br i1 %cmp2, label %if.then, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %nvtx4 = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 1
  %1 = load i32* %nvtx4, align 4, !tbaa !0
  %cmp5 = icmp slt i32 %1, 1
  %cmp7 = icmp slt i32 %maxfrontsize, 1
  %or.cond321 = or i1 %cmp5, %cmp7
  br i1 %or.cond321, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([60 x i8]* @.str9, i64 0, i64 0), %struct._ETree* %etree, i32* %vwghts, i32 %maxfrontsize, i32 %seed) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %lor.lhs.false3
  %tree8 = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 2
  %3 = load %struct._Tree** %tree8, align 8, !tbaa !3
  %fch9 = getelementptr inbounds %struct._Tree* %3, i64 0, i32 3
  %4 = load i32** %fch9, align 8, !tbaa !3
  %sib10 = getelementptr inbounds %struct._Tree* %3, i64 0, i32 4
  %5 = load i32** %sib10, align 8, !tbaa !3
  %nodwghtsIV = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 3
  %6 = load %struct._IV** %nodwghtsIV, align 8, !tbaa !3
  %call11 = tail call i32* @IV_entries(%struct._IV* %6) #4
  %bndwghtsIV = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 4
  %7 = load %struct._IV** %bndwghtsIV, align 8, !tbaa !3
  %call12 = tail call i32* @IV_entries(%struct._IV* %7) #4
  %vtxToFrontIV = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 5
  %8 = load %struct._IV** %vtxToFrontIV, align 8, !tbaa !3
  %call13 = tail call i32* @IV_entries(%struct._IV* %8) #4
  %call14 = tail call i32* @IVinit(i32 %1, i32 -1) #4
  %call15 = tail call i32* @IVinit(i32 %0, i32 -1) #4
  %call16 = tail call i32* @IVinit(i32 %1, i32 -1) #4
  %call17 = tail call i32* @IVinit(i32 %1, i32 -1) #4
  %call18 = tail call i32* @IVinit(i32 %1, i32 -1) #4
  %call19 = tail call i32* @IVinit(i32 %0, i32 -1) #4
  %call20 = tail call i32* @IVinit(i32 %1, i32 -1) #4
  %call21 = tail call i32* @IVinit(i32 %1, i32 -1) #4
  %cmp22355 = icmp sgt i32 %1, 0
  br i1 %cmp22355, label %for.body, label %for.end

for.body:                                         ; preds = %if.end, %for.body
  %indvars.iv369 = phi i64 [ %indvars.iv.next370, %for.body ], [ 0, %if.end ]
  %arrayidx = getelementptr inbounds i32* %call13, i64 %indvars.iv369
  %9 = load i32* %arrayidx, align 4, !tbaa !0
  %idxprom23 = sext i32 %9 to i64
  %arrayidx24 = getelementptr inbounds i32* %call19, i64 %idxprom23
  %10 = load i32* %arrayidx24, align 4, !tbaa !0
  %arrayidx26 = getelementptr inbounds i32* %call20, i64 %indvars.iv369
  store i32 %10, i32* %arrayidx26, align 4, !tbaa !0
  %11 = trunc i64 %indvars.iv369 to i32
  store i32 %11, i32* %arrayidx24, align 4, !tbaa !0
  %indvars.iv.next370 = add i64 %indvars.iv369, 1
  %lftr.wideiv371 = trunc i64 %indvars.iv.next370 to i32
  %exitcond372 = icmp eq i32 %lftr.wideiv371, %1
  br i1 %exitcond372, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end
  %call29 = tail call i32 @Tree_postOTfirst(%struct._Tree* %3) #4
  %cmp31350 = icmp eq i32 %call29, -1
  br i1 %cmp31350, label %for.end165, label %for.body32.lr.ph

for.body32.lr.ph:                                 ; preds = %for.end
  %add96 = add i32 %maxfrontsize, -1
  %cmp107 = icmp sgt i32 %seed, 0
  %cmp117 = icmp eq i32* %vwghts, null
  br label %for.body32

for.body32:                                       ; preds = %for.body32.lr.ph, %for.inc163
  %J.0353 = phi i32 [ %call29, %for.body32.lr.ph ], [ %call164, %for.inc163 ]
  %Jnew.0352 = phi i32 [ undef, %for.body32.lr.ph ], [ %Jnew.2, %for.inc163 ]
  %nfront2.0351 = phi i32 [ 0, %for.body32.lr.ph ], [ %nfront2.2, %for.inc163 ]
  %idxprom33 = sext i32 %J.0353 to i64
  %arrayidx34 = getelementptr inbounds i32* %call19, i64 %idxprom33
  %v.1322 = load i32* %arrayidx34, align 4
  %cmp36323 = icmp eq i32 %v.1322, -1
  br i1 %cmp36323, label %for.end47, label %for.body37

for.body37:                                       ; preds = %for.body32, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %cond.end ], [ 0, %for.body32 ]
  %v.1326 = phi i32 [ %v.1, %cond.end ], [ %v.1322, %for.body32 ]
  %count.0325 = phi i32 [ %inc38, %cond.end ], [ 0, %for.body32 ]
  %sizeJ.0324 = phi i32 [ %add, %cond.end ], [ 0, %for.body32 ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %inc38 = add nsw i32 %count.0325, 1
  %arrayidx40 = getelementptr inbounds i32* %call21, i64 %indvars.iv
  store i32 %v.1326, i32* %arrayidx40, align 4, !tbaa !0
  %idxprom45.pre = sext i32 %v.1326 to i64
  br i1 %cmp117, label %cond.end, label %cond.true

cond.true:                                        ; preds = %for.body37
  %arrayidx43 = getelementptr inbounds i32* %vwghts, i64 %idxprom45.pre
  %12 = load i32* %arrayidx43, align 4, !tbaa !0
  br label %cond.end

cond.end:                                         ; preds = %for.body37, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ 1, %for.body37 ]
  %add = add nsw i32 %cond, %sizeJ.0324
  %arrayidx46 = getelementptr inbounds i32* %call20, i64 %idxprom45.pre
  %v.1 = load i32* %arrayidx46, align 4
  %cmp36 = icmp eq i32 %v.1, -1
  br i1 %cmp36, label %for.end47, label %for.body37

for.end47:                                        ; preds = %cond.end, %for.body32
  %count.0.lcssa = phi i32 [ 0, %for.body32 ], [ %inc38, %cond.end ]
  %sizeJ.0.lcssa = phi i32 [ 0, %for.body32 ], [ %add, %cond.end ]
  %arrayidx49 = getelementptr inbounds i32* %call11, i64 %idxprom33
  %13 = load i32* %arrayidx49, align 4, !tbaa !0
  %cmp50 = icmp eq i32 %sizeJ.0.lcssa, %13
  br i1 %cmp50, label %if.end55, label %if.then51

if.then51:                                        ; preds = %for.end47
  %14 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %call54 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([83 x i8]* @.str10, i64 0, i64 0), %struct._ETree* %etree, i32* %vwghts, i32 %maxfrontsize, i32 %seed, i32 %J.0353, i32 %sizeJ.0.lcssa, i32 %13) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end55:                                         ; preds = %for.end47
  %cmp56 = icmp sgt i32 %sizeJ.0.lcssa, %maxfrontsize
  br i1 %cmp56, label %lor.lhs.false57, label %if.then61

lor.lhs.false57:                                  ; preds = %if.end55
  %arrayidx59 = getelementptr inbounds i32* %4, i64 %idxprom33
  %15 = load i32* %arrayidx59, align 4, !tbaa !0
  %cmp60 = icmp eq i32 %15, -1
  br i1 %cmp60, label %if.then61, label %if.else

if.then61:                                        ; preds = %if.end55, %lor.lhs.false57
  %inc62 = add nsw i32 %nfront2.0351, 1
  %cmp64343 = icmp sgt i32 %count.0.lcssa, 0
  br i1 %cmp64343, label %for.body65, label %for.end72

for.body65:                                       ; preds = %if.then61, %for.body65
  %indvars.iv364 = phi i64 [ %indvars.iv.next365, %for.body65 ], [ 0, %if.then61 ]
  %arrayidx67 = getelementptr inbounds i32* %call21, i64 %indvars.iv364
  %16 = load i32* %arrayidx67, align 4, !tbaa !0
  %idxprom68 = sext i32 %16 to i64
  %arrayidx69 = getelementptr inbounds i32* %call16, i64 %idxprom68
  store i32 %nfront2.0351, i32* %arrayidx69, align 4, !tbaa !0
  %indvars.iv.next365 = add i64 %indvars.iv364, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next365 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %count.0.lcssa
  br i1 %exitcond, label %for.end72, label %for.body65

for.end72:                                        ; preds = %for.body65, %if.then61
  %arrayidx74 = getelementptr inbounds i32* %4, i64 %idxprom33
  %I.0345 = load i32* %arrayidx74, align 4
  %cmp76346 = icmp eq i32 %I.0345, -1
  br i1 %cmp76346, label %for.end85, label %for.body77

for.body77:                                       ; preds = %for.end72, %for.body77
  %I.0347 = phi i32 [ %I.0, %for.body77 ], [ %I.0345, %for.end72 ]
  %idxprom78 = sext i32 %I.0347 to i64
  %arrayidx79 = getelementptr inbounds i32* %call15, i64 %idxprom78
  %17 = load i32* %arrayidx79, align 4, !tbaa !0
  %idxprom80 = sext i32 %17 to i64
  %arrayidx81 = getelementptr inbounds i32* %call14, i64 %idxprom80
  store i32 %nfront2.0351, i32* %arrayidx81, align 4, !tbaa !0
  %arrayidx84 = getelementptr inbounds i32* %5, i64 %idxprom78
  %I.0 = load i32* %arrayidx84, align 4
  %cmp76 = icmp eq i32 %I.0, -1
  br i1 %cmp76, label %for.end85, label %for.body77

for.end85:                                        ; preds = %for.body77, %for.end72
  %18 = load i32* %arrayidx49, align 4, !tbaa !0
  %idxprom88 = sext i32 %nfront2.0351 to i64
  %arrayidx89 = getelementptr inbounds i32* %call17, i64 %idxprom88
  store i32 %18, i32* %arrayidx89, align 4, !tbaa !0
  %arrayidx91 = getelementptr inbounds i32* %call12, i64 %idxprom33
  %19 = load i32* %arrayidx91, align 4, !tbaa !0
  %arrayidx93 = getelementptr inbounds i32* %call18, i64 %idxprom88
  store i32 %19, i32* %arrayidx93, align 4, !tbaa !0
  %arrayidx95 = getelementptr inbounds i32* %call15, i64 %idxprom33
  store i32 %nfront2.0351, i32* %arrayidx95, align 4, !tbaa !0
  br label %for.inc163

if.else:                                          ; preds = %lor.lhs.false57
  %sub = add i32 %add96, %sizeJ.0.lcssa
  %div = sdiv i32 %sub, %maxfrontsize
  %div97 = sdiv i32 %sizeJ.0.lcssa, %div
  %rem = srem i32 %sizeJ.0.lcssa, %div
  %not.cmp98 = icmp ne i32 %rem, 0
  %inc100 = zext i1 %not.cmp98 to i32
  %div97.inc100 = add nsw i32 %inc100, %div97
  %arrayidx105 = getelementptr inbounds i32* %call12, i64 %idxprom33
  %20 = load i32* %arrayidx105, align 4, !tbaa !0
  %add106 = add nsw i32 %20, %sizeJ.0.lcssa
  br i1 %cmp107, label %if.then108, label %while.cond.preheader

if.then108:                                       ; preds = %if.else
  tail call void @IVshuffle(i32 %count.0.lcssa, i32* %call21, i32 %seed) #4
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.then108, %if.else
  %cmp110336 = icmp sgt i32 %count.0.lcssa, 0
  br i1 %cmp110336, label %while.body.lr.ph, label %while.end159

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %21 = sext i32 %nfront2.0351 to i64
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %if.end153
  %indvars.iv362 = phi i64 [ %21, %while.body.lr.ph ], [ %indvars.iv.next363, %if.end153 ]
  %ii.1340 = phi i32 [ 0, %while.body.lr.ph ], [ %ii.2.lcssa, %if.end153 ]
  %nbnd.0339 = phi i32 [ %add106, %while.body.lr.ph ], [ %sub156, %if.end153 ]
  %nfront2.1338 = phi i32 [ %nfront2.0351, %while.body.lr.ph ], [ %inc111, %if.end153 ]
  %prev.0337 = phi i32 [ -1, %while.body.lr.ph ], [ %.pre-phi, %if.end153 ]
  %indvars.iv.next363 = add i64 %indvars.iv362, 1
  %inc111 = add nsw i32 %nfront2.1338, 1
  %cmp113328 = icmp slt i32 %ii.1340, %count.0.lcssa
  br i1 %cmp113328, label %while.body114.lr.ph, label %while.end

while.body114.lr.ph:                              ; preds = %while.body
  %22 = sext i32 %ii.1340 to i64
  br label %while.body114

while.body114:                                    ; preds = %while.body114.lr.ph, %if.then128
  %indvars.iv360 = phi i64 [ %22, %while.body114.lr.ph ], [ %indvars.iv.next361, %if.then128 ]
  %ii.2330 = phi i32 [ %ii.1340, %while.body114.lr.ph ], [ %inc132, %if.then128 ]
  %size.0329 = phi i32 [ 0, %while.body114.lr.ph ], [ %add124, %if.then128 ]
  %arrayidx116 = getelementptr inbounds i32* %call21, i64 %indvars.iv360
  %23 = load i32* %arrayidx116, align 4, !tbaa !0
  br i1 %cmp117, label %cond.end122, label %cond.true118

cond.true118:                                     ; preds = %while.body114
  %idxprom119 = sext i32 %23 to i64
  %arrayidx120 = getelementptr inbounds i32* %vwghts, i64 %idxprom119
  %24 = load i32* %arrayidx120, align 4, !tbaa !0
  br label %cond.end122

cond.end122:                                      ; preds = %while.body114, %cond.true118
  %cond123 = phi i32 [ %24, %cond.true118 ], [ 1, %while.body114 ]
  %add124 = add nsw i32 %cond123, %size.0329
  %cmp125 = icmp sge i32 %div97.inc100, %add124
  %cmp127 = icmp eq i32 %size.0329, 0
  %or.cond = or i1 %cmp125, %cmp127
  br i1 %or.cond, label %if.then128, label %while.end

if.then128:                                       ; preds = %cond.end122
  %idxprom129 = sext i32 %23 to i64
  %arrayidx130 = getelementptr inbounds i32* %call16, i64 %idxprom129
  %25 = trunc i64 %indvars.iv362 to i32
  store i32 %25, i32* %arrayidx130, align 4, !tbaa !0
  %indvars.iv.next361 = add i64 %indvars.iv360, 1
  %inc132 = add nsw i32 %ii.2330, 1
  %26 = trunc i64 %indvars.iv.next361 to i32
  %cmp113 = icmp slt i32 %26, %count.0.lcssa
  br i1 %cmp113, label %while.body114, label %while.end

while.end:                                        ; preds = %if.then128, %cond.end122, %while.body
  %ii.2.lcssa = phi i32 [ %ii.1340, %while.body ], [ %ii.2330, %cond.end122 ], [ %inc132, %if.then128 ]
  %size.0.lcssa = phi i32 [ 0, %while.body ], [ %size.0329, %cond.end122 ], [ %add124, %if.then128 ]
  %cmp135 = icmp eq i32 %prev.0337, -1
  br i1 %cmp135, label %for.cond139.preheader, label %if.else150

for.cond139.preheader:                            ; preds = %while.end
  %I.1333 = load i32* %arrayidx59, align 4
  %cmp140334 = icmp eq i32 %I.1333, -1
  br i1 %cmp140334, label %for.cond139.preheader.if.end153.loopexit_crit_edge, label %for.body141

for.cond139.preheader.if.end153.loopexit_crit_edge: ; preds = %for.cond139.preheader
  %.pre.pre = trunc i64 %indvars.iv362 to i32
  br label %if.end153

for.body141:                                      ; preds = %for.cond139.preheader, %for.body141
  %I.1335 = phi i32 [ %I.1, %for.body141 ], [ %I.1333, %for.cond139.preheader ]
  %idxprom142 = sext i32 %I.1335 to i64
  %arrayidx143 = getelementptr inbounds i32* %call15, i64 %idxprom142
  %27 = load i32* %arrayidx143, align 4, !tbaa !0
  %idxprom144 = sext i32 %27 to i64
  %arrayidx145 = getelementptr inbounds i32* %call14, i64 %idxprom144
  %28 = trunc i64 %indvars.iv362 to i32
  store i32 %28, i32* %arrayidx145, align 4, !tbaa !0
  %arrayidx148 = getelementptr inbounds i32* %5, i64 %idxprom142
  %I.1 = load i32* %arrayidx148, align 4
  %cmp140 = icmp eq i32 %I.1, -1
  br i1 %cmp140, label %if.end153, label %for.body141

if.else150:                                       ; preds = %while.end
  %idxprom151 = sext i32 %prev.0337 to i64
  %arrayidx152 = getelementptr inbounds i32* %call14, i64 %idxprom151
  %29 = trunc i64 %indvars.iv362 to i32
  store i32 %29, i32* %arrayidx152, align 4, !tbaa !0
  br label %if.end153

if.end153:                                        ; preds = %for.cond139.preheader.if.end153.loopexit_crit_edge, %for.body141, %if.else150
  %.pre-phi = phi i32 [ %29, %if.else150 ], [ %.pre.pre, %for.cond139.preheader.if.end153.loopexit_crit_edge ], [ %28, %for.body141 ]
  %arrayidx155 = getelementptr inbounds i32* %call17, i64 %indvars.iv362
  store i32 %size.0.lcssa, i32* %arrayidx155, align 4, !tbaa !0
  %sub156 = sub nsw i32 %nbnd.0339, %size.0.lcssa
  %arrayidx158 = getelementptr inbounds i32* %call18, i64 %indvars.iv362
  store i32 %sub156, i32* %arrayidx158, align 4, !tbaa !0
  %cmp110 = icmp slt i32 %ii.2.lcssa, %count.0.lcssa
  br i1 %cmp110, label %while.body, label %while.end159

while.end159:                                     ; preds = %if.end153, %while.cond.preheader
  %Jnew.1.lcssa = phi i32 [ %Jnew.0352, %while.cond.preheader ], [ %nfront2.1338, %if.end153 ]
  %nfront2.1.lcssa = phi i32 [ %nfront2.0351, %while.cond.preheader ], [ %inc111, %if.end153 ]
  %arrayidx161 = getelementptr inbounds i32* %call15, i64 %idxprom33
  store i32 %Jnew.1.lcssa, i32* %arrayidx161, align 4, !tbaa !0
  br label %for.inc163

for.inc163:                                       ; preds = %for.end85, %while.end159
  %nfront2.2 = phi i32 [ %inc62, %for.end85 ], [ %nfront2.1.lcssa, %while.end159 ]
  %Jnew.2 = phi i32 [ %nfront2.0351, %for.end85 ], [ %Jnew.1.lcssa, %while.end159 ]
  %call164 = tail call i32 @Tree_postOTnext(%struct._Tree* %3, i32 %J.0353) #4
  %cmp31 = icmp eq i32 %call164, -1
  br i1 %cmp31, label %for.end165, label %for.body32

for.end165:                                       ; preds = %for.inc163, %for.end
  %nfront2.0.lcssa = phi i32 [ 0, %for.end ], [ %nfront2.2, %for.inc163 ]
  %call166 = tail call %struct._ETree* @ETree_new() #4
  tail call void @ETree_init1(%struct._ETree* %call166, i32 %nfront2.0.lcssa, i32 %1) #4
  %tree167 = getelementptr inbounds %struct._ETree* %call166, i64 0, i32 2
  %30 = load %struct._Tree** %tree167, align 8, !tbaa !3
  %par = getelementptr inbounds %struct._Tree* %30, i64 0, i32 2
  %31 = load i32** %par, align 8, !tbaa !3
  tail call void @IVcopy(i32 %nfront2.0.lcssa, i32* %31, i32* %call14) #4
  %32 = load %struct._Tree** %tree167, align 8, !tbaa !3
  tail call void @Tree_setFchSibRoot(%struct._Tree* %32) #4
  %vtxToFrontIV169 = getelementptr inbounds %struct._ETree* %call166, i64 0, i32 5
  %33 = load %struct._IV** %vtxToFrontIV169, align 8, !tbaa !3
  %call170 = tail call i32* @IV_entries(%struct._IV* %33) #4
  tail call void @IVcopy(i32 %1, i32* %call170, i32* %call16) #4
  %nodwghtsIV171 = getelementptr inbounds %struct._ETree* %call166, i64 0, i32 3
  %34 = load %struct._IV** %nodwghtsIV171, align 8, !tbaa !3
  %call172 = tail call i32* @IV_entries(%struct._IV* %34) #4
  tail call void @IVcopy(i32 %nfront2.0.lcssa, i32* %call172, i32* %call17) #4
  %bndwghtsIV173 = getelementptr inbounds %struct._ETree* %call166, i64 0, i32 4
  %35 = load %struct._IV** %bndwghtsIV173, align 8, !tbaa !3
  %call174 = tail call i32* @IV_entries(%struct._IV* %35) #4
  tail call void @IVcopy(i32 %nfront2.0.lcssa, i32* %call174, i32* %call18) #4
  tail call void @IVfree(i32* %call14) #4
  tail call void @IVfree(i32* %call15) #4
  tail call void @IVfree(i32* %call16) #4
  tail call void @IVfree(i32* %call17) #4
  tail call void @IVfree(i32* %call18) #4
  tail call void @IVfree(i32* %call19) #4
  tail call void @IVfree(i32* %call20) #4
  tail call void @IVfree(i32* %call21) #4
  ret %struct._ETree* %call166
}
