define void @DV_copy(%struct._DV* %dv1, %struct._DV* %dv2) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._DV* %dv1}, i64 0, metadata !91), !dbg !237
  tail call void @llvm.dbg.value(metadata !{%struct._DV* %dv2}, i64 0, metadata !92), !dbg !238
  %cmp = icmp eq %struct._DV* %dv1, null, !dbg !239
  %cmp1 = icmp eq %struct._DV* %dv2, null, !dbg !239
  %or.cond = or i1 %cmp, %cmp1, !dbg !239
  br i1 %or.cond, label %if.then, label %if.end, !dbg !239

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !240, !tbaa !102
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([44 x i8]* @.str15, i64 0, i64 0), %struct._DV* %dv1, %struct._DV* %dv2) #5, !dbg !240
  tail call void @exit(i32 -1) #6, !dbg !242
  unreachable, !dbg !242

if.end:                                           ; preds = %entry
  %size2 = getelementptr inbounds %struct._DV* %dv1, i64 0, i32 0, !dbg !243
  %1 = load i32* %size2, align 4, !dbg !243, !tbaa !108
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !94), !dbg !243
  %size3 = getelementptr inbounds %struct._DV* %dv2, i64 0, i32 0, !dbg !244
  %2 = load i32* %size3, align 4, !dbg !244, !tbaa !108
  %cmp4 = icmp sgt i32 %1, %2, !dbg !244
  tail call void @llvm.dbg.value(metadata !{i32 %2}, i64 0, metadata !94), !dbg !245
  %. = select i1 %cmp4, i32 %2, i32 %1, !dbg !244
  %vec = getelementptr inbounds %struct._DV* %dv1, i64 0, i32 3, !dbg !247
  %3 = load double** %vec, align 8, !dbg !247, !tbaa !102
  tail call void @llvm.dbg.value(metadata !{double* %3}, i64 0, metadata !95), !dbg !247
  %vec8 = getelementptr inbounds %struct._DV* %dv2, i64 0, i32 3, !dbg !248
  %4 = load double** %vec8, align 8, !dbg !248, !tbaa !102
  tail call void @llvm.dbg.value(metadata !{double* %4}, i64 0, metadata !96), !dbg !248
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !93), !dbg !249
  %cmp923 = icmp sgt i32 %., 0, !dbg !249
  br i1 %cmp923, label %for.body.lr.ph, label %for.end, !dbg !249

for.body.lr.ph:                                   ; preds = %if.end
  %5 = xor i32 %2, -1, !dbg !249
  %6 = xor i32 %1, -1, !dbg !249
  %7 = icmp sgt i32 %5, %6, !dbg !249
  %smax = select i1 %7, i32 %5, i32 %6, !dbg !249
  %8 = xor i32 %smax, -1, !dbg !249
  br label %for.body, !dbg !249

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds double* %4, i64 %indvars.iv, !dbg !251
  %9 = load double* %arrayidx, align 8, !dbg !251, !tbaa !126
  %arrayidx11 = getelementptr inbounds double* %3, i64 %indvars.iv, !dbg !251
  store double %9, double* %arrayidx11, align 8, !dbg !251, !tbaa !126
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !249
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !249
  %exitcond = icmp eq i32 %lftr.wideiv, %8, !dbg !249
  br i1 %exitcond, label %for.end, label %for.body, !dbg !249

for.end:                                          ; preds = %for.body, %if.end
  ret void, !dbg !253
}
