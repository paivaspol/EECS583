define void @DV_copy(%struct._DV* %dv1, %struct._DV* %dv2) #0 {
  tail call void @llvm.dbg.value(metadata %struct._DV* %dv1, i64 0, metadata !92, metadata !102), !dbg !387
  tail call void @llvm.dbg.value(metadata %struct._DV* %dv2, i64 0, metadata !93, metadata !102), !dbg !388
  %1 = icmp eq %struct._DV* %dv1, null, !dbg !389
  %2 = icmp eq %struct._DV* %dv2, null, !dbg !391
  %or.cond = or i1 %1, %2, !dbg !392
  br i1 %or.cond, label %3, label %6, !dbg !392

; <label>:3                                       ; preds = %0
  %4 = load %struct.__sFILE** @__stderrp, align 8, !dbg !393, !tbaa !110
  %5 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %4, i8* getelementptr inbounds ([44 x i8]* @.str15, i64 0, i64 0), %struct._DV* %dv1, %struct._DV* %dv2) #5, !dbg !395
  tail call void @exit(i32 -1) #6, !dbg !396
  unreachable, !dbg !396

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct._DV* %dv1, i64 0, i32 0, !dbg !397
  %8 = load i32* %7, align 4, !dbg !397, !tbaa !126
  tail call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !95, metadata !102), !dbg !398
  %9 = getelementptr inbounds %struct._DV* %dv2, i64 0, i32 0, !dbg !399
  %10 = load i32* %9, align 4, !dbg !399, !tbaa !126
  %11 = icmp sgt i32 %8, %10, !dbg !401
  tail call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !95, metadata !102), !dbg !398
  %. = select i1 %11, i32 %10, i32 %8, !dbg !402
  %12 = getelementptr inbounds %struct._DV* %dv1, i64 0, i32 3, !dbg !403
  %13 = load double** %12, align 8, !dbg !403, !tbaa !118
  tail call void @llvm.dbg.value(metadata double* %13, i64 0, metadata !96, metadata !102), !dbg !404
  %14 = getelementptr inbounds %struct._DV* %dv2, i64 0, i32 3, !dbg !405
  %15 = load double** %14, align 8, !dbg !405, !tbaa !118
  tail call void @llvm.dbg.value(metadata double* %15, i64 0, metadata !97, metadata !102), !dbg !406
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !94, metadata !102), !dbg !407
  %16 = icmp sgt i32 %., 0, !dbg !408
  br i1 %16, label %.lr.ph, label %._crit_edge, !dbg !411

.lr.ph:                                           ; preds = %6
  %17 = xor i32 %10, -1, !dbg !411
  %18 = xor i32 %8, -1, !dbg !411
  %19 = icmp sgt i32 %17, %18
  %smax = select i1 %19, i32 %17, i32 %18
  %20 = sub i32 -2, %smax, !dbg !411
  br label %21, !dbg !411

; <label>:21                                      ; preds = %21, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %21 ]
  %22 = getelementptr inbounds double* %15, i64 %indvars.iv, !dbg !412
  %23 = bitcast double* %22 to i64*, !dbg !412
  %24 = load i64* %23, align 8, !dbg !412, !tbaa !156
  %25 = getelementptr inbounds double* %13, i64 %indvars.iv, !dbg !414
  %26 = bitcast double* %25 to i64*, !dbg !415
  store i64 %24, i64* %26, align 8, !dbg !415, !tbaa !156
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !411
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !411
  %exitcond = icmp eq i32 %lftr.wideiv, %20, !dbg !411
  br i1 %exitcond, label %._crit_edge, label %21, !dbg !411

._crit_edge:                                      ; preds = %21, %6
  ret void, !dbg !416
}
