define void @DV_shiftBase(%struct._DV* %dv, i32 %offset) #0 {
  tail call void @llvm.dbg.value(metadata %struct._DV* %dv, i64 0, metadata !22, metadata !102), !dbg !103
  tail call void @llvm.dbg.value(metadata i32 %offset, i64 0, metadata !23, metadata !102), !dbg !104
  %1 = icmp eq %struct._DV* %dv, null, !dbg !105
  br i1 %1, label %2, label %5, !dbg !107

; <label>:2                                       ; preds = %0
  %3 = load %struct.__sFILE** @__stderrp, align 8, !dbg !108, !tbaa !110
  %4 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %3, i8* getelementptr inbounds ([49 x i8]* @.str, i64 0, i64 0), %struct._DV* null, i32 %offset) #5, !dbg !114
  tail call void @exit(i32 -1) #6, !dbg !115
  unreachable, !dbg !115

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._DV* %dv, i64 0, i32 3, !dbg !116
  %7 = load double** %6, align 8, !dbg !117, !tbaa !118
  %8 = sext i32 %offset to i64, !dbg !117
  %9 = getelementptr inbounds double* %7, i64 %8, !dbg !117
  store double* %9, double** %6, align 8, !dbg !117, !tbaa !118
  %10 = getelementptr inbounds %struct._DV* %dv, i64 0, i32 1, !dbg !121
  %11 = load i32* %10, align 4, !dbg !122, !tbaa !123
  %12 = sub nsw i32 %11, %offset, !dbg !122
  store i32 %12, i32* %10, align 4, !dbg !122, !tbaa !123
  %13 = getelementptr inbounds %struct._DV* %dv, i64 0, i32 0, !dbg !124
  %14 = load i32* %13, align 4, !dbg !125, !tbaa !126
  %15 = sub nsw i32 %14, %offset, !dbg !125
  store i32 %15, i32* %13, align 4, !dbg !125, !tbaa !126
  ret void, !dbg !127
}
