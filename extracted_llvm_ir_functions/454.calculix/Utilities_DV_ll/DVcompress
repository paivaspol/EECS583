define i32 @DVcompress(i32 %size1, double* %x1, double* %y1, i32 %size2, double* %x2, double* %y2) #0 {
entry:
  %cmp = icmp slt i32 %size1, 1
  %cmp1 = icmp slt i32 %size2, 1
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %return, label %if.else

if.else:                                          ; preds = %entry
  %cmp2 = icmp eq double* %x1, null
  %cmp4 = icmp eq double* %y1, null
  %or.cond131 = or i1 %cmp2, %cmp4
  %cmp6 = icmp eq double* %x2, null
  %or.cond132 = or i1 %or.cond131, %cmp6
  %cmp8 = icmp eq double* %y2, null
  %or.cond133 = or i1 %or.cond132, %cmp8
  br i1 %or.cond133, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.else
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([102 x i8]* @.str4, i64 0, i64 0), i32 %size1, double* %x1, double* %y1, i32 %size2, double* %x2, double* %y2) #5
  tail call void @exit(i32 -1) #6
  unreachable

if.end10:                                         ; preds = %if.else
  %call11 = tail call double* @DVinit(i32 %size1, double 0.000000e+00) #7
  %cmp12139 = icmp sgt i32 %size1, 1
  br i1 %cmp12139, label %for.body, label %for.end

for.body:                                         ; preds = %if.end10, %for.body
  %indvars.iv142 = phi i64 [ %indvars.iv.next143, %for.body ], [ 1, %if.end10 ]
  %arrayidx = getelementptr inbounds double* %x1, i64 %indvars.iv142
  %1 = load double* %arrayidx, align 8, !tbaa !3
  %2 = add nsw i64 %indvars.iv142, -1
  %arrayidx14 = getelementptr inbounds double* %x1, i64 %2
  %3 = load double* %arrayidx14, align 8, !tbaa !3
  %sub15 = fsub double %1, %3
  %arrayidx17 = getelementptr inbounds double* %y1, i64 %indvars.iv142
  %4 = load double* %arrayidx17, align 8, !tbaa !3
  %arrayidx20 = getelementptr inbounds double* %y1, i64 %2
  %5 = load double* %arrayidx20, align 8, !tbaa !3
  %sub21 = fsub double %4, %5
  %mul = fmul double %sub15, %sub15
  %mul22 = fmul double %sub21, %sub21
  %add = fadd double %mul, %mul22
  %call23 = tail call double @sqrt(double %add) #5
  %arrayidx26 = getelementptr inbounds double* %call11, i64 %2
  store double %call23, double* %arrayidx26, align 8, !tbaa !3
  %indvars.iv.next143 = add i64 %indvars.iv142, 1
  %lftr.wideiv145 = trunc i64 %indvars.iv.next143 to i32
  %exitcond146 = icmp eq i32 %lftr.wideiv145, %size1
  br i1 %exitcond146, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end10
  %call27 = tail call double @DVsum(i32 %size1, double* %call11) #7
  %sub28 = add nsw i32 %size2, -2
  %conv = sitofp i32 %sub28 to double
  %div = fdiv double %call27, %conv
  %6 = load double* %x1, align 8, !tbaa !3
  store double %6, double* %x2, align 8, !tbaa !3
  %7 = load double* %y1, align 8, !tbaa !3
  store double %7, double* %y2, align 8, !tbaa !3
  %sub39 = add i32 %size1, -1
  %cmp40134 = icmp sgt i32 %sub39, 1
  br i1 %cmp40134, label %for.body42, label %for.end62

for.body42:                                       ; preds = %for.end, %for.inc60
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc60 ], [ 1, %for.end ]
  %i.0136 = phi i32 [ %i.1, %for.inc60 ], [ 1, %for.end ]
  %path.0135 = phi double [ %path.1, %for.inc60 ], [ 0.000000e+00, %for.end ]
  %8 = add nsw i64 %indvars.iv, -1
  %arrayidx45 = getelementptr inbounds double* %call11, i64 %8
  %9 = load double* %arrayidx45, align 8, !tbaa !3
  %add46 = fadd double %path.0135, %9
  %cmp47 = fcmp ult double %add46, %div
  br i1 %cmp47, label %for.inc60, label %if.then49

if.then49:                                        ; preds = %for.body42
  %arrayidx51 = getelementptr inbounds double* %x1, i64 %indvars.iv
  %10 = load double* %arrayidx51, align 8, !tbaa !3
  %idxprom52 = sext i32 %i.0136 to i64
  %arrayidx53 = getelementptr inbounds double* %x2, i64 %idxprom52
  store double %10, double* %arrayidx53, align 8, !tbaa !3
  %arrayidx55 = getelementptr inbounds double* %y1, i64 %indvars.iv
  %11 = load double* %arrayidx55, align 8, !tbaa !3
  %arrayidx57 = getelementptr inbounds double* %y2, i64 %idxprom52
  store double %11, double* %arrayidx57, align 8, !tbaa !3
  %inc58 = add nsw i32 %i.0136, 1
  br label %for.inc60

for.inc60:                                        ; preds = %for.body42, %if.then49
  %path.1 = phi double [ 0.000000e+00, %if.then49 ], [ %add46, %for.body42 ]
  %i.1 = phi i32 [ %inc58, %if.then49 ], [ %i.0136, %for.body42 ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %sub39
  br i1 %exitcond, label %for.end62, label %for.body42

for.end62:                                        ; preds = %for.inc60, %for.end
  %i.0.lcssa = phi i32 [ 1, %for.end ], [ %i.1, %for.inc60 ]
  %idxprom64 = sext i32 %sub39 to i64
  %arrayidx65 = getelementptr inbounds double* %x1, i64 %idxprom64
  %12 = load double* %arrayidx65, align 8, !tbaa !3
  %idxprom66 = sext i32 %i.0.lcssa to i64
  %arrayidx67 = getelementptr inbounds double* %x2, i64 %idxprom66
  store double %12, double* %arrayidx67, align 8, !tbaa !3
  %arrayidx70 = getelementptr inbounds double* %y1, i64 %idxprom64
  %13 = load double* %arrayidx70, align 8, !tbaa !3
  %arrayidx72 = getelementptr inbounds double* %y2, i64 %idxprom66
  store double %13, double* %arrayidx72, align 8, !tbaa !3
  %inc73 = add nsw i32 %i.0.lcssa, 1
  %cmp.i = icmp eq double* %call11, null
  br i1 %cmp.i, label %return, label %if.then2.i

if.then2.i:                                       ; preds = %for.end62
  %14 = bitcast double* %call11 to i8*
  tail call void @free(i8* %14) #5
  br label %return

return:                                           ; preds = %if.then2.i, %for.end62, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %inc73, %for.end62 ], [ %inc73, %if.then2.i ]
  ret i32 %retval.0
}
