define double @DVmaxabs(i32 %size, double* %y, i32* %ploc) #0 {
  tail call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !276, metadata !696), !dbg !1182
  tail call void @llvm.dbg.value(metadata double* %y, i64 0, metadata !277, metadata !696), !dbg !1183
  tail call void @llvm.dbg.value(metadata i32* %ploc, i64 0, metadata !278, metadata !696), !dbg !1184
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !279, metadata !696), !dbg !1185
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !280, metadata !696), !dbg !1186
  %1 = icmp sgt i32 %size, 0, !dbg !1187
  br i1 %1, label %2, label %24, !dbg !1188

; <label>:2                                       ; preds = %0
  %3 = icmp eq double* %y, null, !dbg !1189
  br i1 %3, label %4, label %7, !dbg !1190

; <label>:4                                       ; preds = %2
  %5 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1191, !tbaa !709
  %6 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %5, i8* getelementptr inbounds ([71 x i8]* @.str21, i64 0, i64 0), i32 %size, double* null, i32* %ploc) #7, !dbg !1193
  tail call void @exit(i32 -1) #8, !dbg !1194
  unreachable, !dbg !1194

; <label>:7                                       ; preds = %2
  %8 = load double* %y, align 8, !dbg !1195, !tbaa !718
  %9 = fcmp ult double %8, 0.000000e+00, !dbg !1196
  br i1 %9, label %10, label %.preheader, !dbg !1197

; <label>:10                                      ; preds = %7
  %11 = fsub double -0.000000e+00, %8, !dbg !1198
  br label %.preheader, !dbg !1197

.preheader:                                       ; preds = %7, %10
  %maxval.0.ph = phi double [ %11, %10 ], [ %8, %7 ]
  %12 = icmp sgt i32 %size, 1, !dbg !1199
  br i1 %12, label %.lr.ph, label %._crit_edge, !dbg !1202

.lr.ph:                                           ; preds = %.preheader
  %13 = add i32 %size, -1, !dbg !1202
  br label %14, !dbg !1202

; <label>:14                                      ; preds = %20, %.lr.ph
  %indvars.iv = phi i64 [ 1, %.lr.ph ], [ %indvars.iv.next, %20 ]
  %maxval.03 = phi double [ %maxval.0.ph, %.lr.ph ], [ %maxval.1, %20 ]
  %loc.01 = phi i32 [ 0, %.lr.ph ], [ %loc.1, %20 ]
  %15 = getelementptr inbounds double* %y, i64 %indvars.iv, !dbg !1203
  %16 = load double* %15, align 8, !dbg !1203, !tbaa !718
  %17 = fcmp ult double %16, 0.000000e+00, !dbg !1205
  br i1 %17, label %18, label %20, !dbg !1206

; <label>:18                                      ; preds = %14
  %19 = fsub double -0.000000e+00, %16, !dbg !1207
  br label %20, !dbg !1206

; <label>:20                                      ; preds = %14, %18
  %21 = phi double [ %19, %18 ], [ %16, %14 ], !dbg !1206
  tail call void @llvm.dbg.value(metadata double %21, i64 0, metadata !286, metadata !696), !dbg !1208
  %22 = fcmp olt double %maxval.03, %21, !dbg !1209
  tail call void @llvm.dbg.value(metadata double %21, i64 0, metadata !279, metadata !696), !dbg !1185
  %23 = trunc i64 %indvars.iv to i32, !dbg !1211
  %loc.1 = select i1 %22, i32 %23, i32 %loc.01, !dbg !1211
  %maxval.1 = select i1 %22, double %21, double %maxval.03, !dbg !1211
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1202
  %exitcond = icmp eq i32 %23, %13, !dbg !1202
  br i1 %exitcond, label %._crit_edge, label %14, !dbg !1202

._crit_edge:                                      ; preds = %20, %.preheader
  %maxval.0.lcssa = phi double [ %maxval.0.ph, %.preheader ], [ %maxval.1, %20 ]
  %loc.0.lcssa = phi i32 [ 0, %.preheader ], [ %loc.1, %20 ]
  store i32 %loc.0.lcssa, i32* %ploc, align 4, !dbg !1212, !tbaa !771
  br label %24, !dbg !1213

; <label>:24                                      ; preds = %._crit_edge, %0
  %loc.2 = phi i32 [ %loc.0.lcssa, %._crit_edge ], [ -1, %0 ]
  %maxval.2 = phi double [ %maxval.0.lcssa, %._crit_edge ], [ 0.000000e+00, %0 ]
  store i32 %loc.2, i32* %ploc, align 4, !dbg !1214, !tbaa !771
  ret double %maxval.2, !dbg !1215
}
