define double @DVmaxabs(i32 %size, double* %y, i32* %ploc) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %size}, i64 0, metadata !245), !dbg !924
  tail call void @llvm.dbg.value(metadata !{double* %y}, i64 0, metadata !246), !dbg !925
  tail call void @llvm.dbg.value(metadata !{i32* %ploc}, i64 0, metadata !247), !dbg !926
  tail call void @llvm.dbg.value(metadata !705, i64 0, metadata !248), !dbg !927
  tail call void @llvm.dbg.value(metadata !903, i64 0, metadata !249), !dbg !928
  %cmp = icmp sgt i32 %size, 0, !dbg !929
  br i1 %cmp, label %if.then, label %if.end21, !dbg !929

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq double* %y, null, !dbg !930
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !930

if.then2:                                         ; preds = %if.then
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !931, !tbaa !629
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([71 x i8]* @.str21, i64 0, i64 0), i32 %size, double* null, i32* %ploc) #6, !dbg !931
  tail call void @exit(i32 -1) #7, !dbg !933
  unreachable, !dbg !933

if.else:                                          ; preds = %if.then
  %1 = load double* %y, align 8, !dbg !934, !tbaa !635
  %cmp3 = fcmp ult double %1, 0.000000e+00, !dbg !934
  br i1 %cmp3, label %cond.false, label %for.cond.preheader, !dbg !934

cond.false:                                       ; preds = %if.else
  %sub = fsub double -0.000000e+00, %1, !dbg !934
  br label %for.cond.preheader, !dbg !934

for.cond.preheader:                               ; preds = %if.else, %cond.false
  %maxval.0.ph = phi double [ %sub, %cond.false ], [ %1, %if.else ]
  %cmp638 = icmp sgt i32 %size, 1, !dbg !935
  br i1 %cmp638, label %for.body, label %for.end, !dbg !935

for.body:                                         ; preds = %for.cond.preheader, %cond.end16
  %indvars.iv = phi i64 [ %indvars.iv.next, %cond.end16 ], [ 1, %for.cond.preheader ]
  %maxval.041 = phi double [ %maxval.1, %cond.end16 ], [ %maxval.0.ph, %for.cond.preheader ]
  %loc.039 = phi i32 [ %loc.1, %cond.end16 ], [ 0, %for.cond.preheader ]
  %arrayidx7 = getelementptr inbounds double* %y, i64 %indvars.iv, !dbg !937
  %2 = load double* %arrayidx7, align 8, !dbg !937, !tbaa !635
  %cmp8 = fcmp ult double %2, 0.000000e+00, !dbg !937
  br i1 %cmp8, label %cond.false12, label %cond.end16, !dbg !937

cond.false12:                                     ; preds = %for.body
  %sub15 = fsub double -0.000000e+00, %2, !dbg !937
  br label %cond.end16, !dbg !937

cond.end16:                                       ; preds = %for.body, %cond.false12
  %cond17 = phi double [ %sub15, %cond.false12 ], [ %2, %for.body ], !dbg !937
  tail call void @llvm.dbg.value(metadata !{double %cond17}, i64 0, metadata !253), !dbg !937
  %cmp18 = fcmp olt double %maxval.041, %cond17, !dbg !939
  tail call void @llvm.dbg.value(metadata !{double %cond17}, i64 0, metadata !248), !dbg !940
  tail call void @llvm.dbg.value(metadata !918, i64 0, metadata !249), !dbg !942
  %3 = trunc i64 %indvars.iv to i32, !dbg !939
  %loc.1 = select i1 %cmp18, i32 %3, i32 %loc.039, !dbg !939
  %maxval.1 = select i1 %cmp18, double %cond17, double %maxval.041, !dbg !939
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !935
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !935
  %exitcond = icmp eq i32 %lftr.wideiv, %size, !dbg !935
  br i1 %exitcond, label %for.end, label %for.body, !dbg !935

for.end:                                          ; preds = %cond.end16, %for.cond.preheader
  %maxval.0.lcssa = phi double [ %maxval.0.ph, %for.cond.preheader ], [ %maxval.1, %cond.end16 ]
  %loc.0.lcssa = phi i32 [ 0, %for.cond.preheader ], [ %loc.1, %cond.end16 ]
  store i32 %loc.0.lcssa, i32* %ploc, align 4, !dbg !943, !tbaa !665
  br label %if.end21, !dbg !944

if.end21:                                         ; preds = %for.end, %entry
  %loc.2 = phi i32 [ %loc.0.lcssa, %for.end ], [ -1, %entry ]
  %maxval.2 = phi double [ %maxval.0.lcssa, %for.end ], [ 0.000000e+00, %entry ]
  store i32 %loc.2, i32* %ploc, align 4, !dbg !945, !tbaa !665
  ret double %maxval.2, !dbg !946
}
