define void @DVdot23(i32 %n, double* %row0, double* %row1, double* %col0, double* %col1, double* %col2, double* %sums) #0 {
entry:
  %cmp = icmp eq double* %sums, null
  %cmp1 = icmp eq double* %row0, null
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp eq double* %row1, null
  %or.cond72 = or i1 %or.cond, %cmp3
  %cmp5 = icmp eq double* %col0, null
  %or.cond73 = or i1 %or.cond72, %cmp5
  %cmp7 = icmp eq double* %col1, null
  %or.cond74 = or i1 %or.cond73, %cmp7
  %cmp9 = icmp eq double* %col2, null
  %or.cond75 = or i1 %or.cond74, %cmp9
  br i1 %or.cond75, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %cmp1076 = icmp sgt i32 %n, 0
  br i1 %cmp1076, label %for.body, label %for.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([59 x i8]* @.str40, i64 0, i64 0), i32 %n, double* %row0, double* %row1, double* %col0, double* %col1, double* %col2, double* %sums) #5
  tail call void @exit(i32 -1) #6
  unreachable

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %s00.083 = phi double [ %add, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %s01.082 = phi double [ %add20, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %s02.081 = phi double [ %add22, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %s10.080 = phi double [ %add24, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %s11.079 = phi double [ %add26, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %s12.077 = phi double [ %add28, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %arrayidx = getelementptr inbounds double* %row0, i64 %indvars.iv
  %1 = load double* %arrayidx, align 8, !tbaa !3
  %arrayidx12 = getelementptr inbounds double* %row1, i64 %indvars.iv
  %2 = load double* %arrayidx12, align 8, !tbaa !3
  %arrayidx14 = getelementptr inbounds double* %col0, i64 %indvars.iv
  %3 = load double* %arrayidx14, align 8, !tbaa !3
  %arrayidx16 = getelementptr inbounds double* %col1, i64 %indvars.iv
  %4 = load double* %arrayidx16, align 8, !tbaa !3
  %arrayidx18 = getelementptr inbounds double* %col2, i64 %indvars.iv
  %5 = load double* %arrayidx18, align 8, !tbaa !3
  %mul = fmul double %1, %3
  %add = fadd double %s00.083, %mul
  %mul19 = fmul double %1, %4
  %add20 = fadd double %s01.082, %mul19
  %mul21 = fmul double %1, %5
  %add22 = fadd double %s02.081, %mul21
  %mul23 = fmul double %2, %3
  %add24 = fadd double %s10.080, %mul23
  %mul25 = fmul double %2, %4
  %add26 = fadd double %s11.079, %mul25
  %mul27 = fmul double %2, %5
  %add28 = fadd double %s12.077, %mul27
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %n
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %for.cond.preheader
  %s00.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add, %for.body ]
  %s01.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add20, %for.body ]
  %s02.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add22, %for.body ]
  %s10.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add24, %for.body ]
  %s11.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add26, %for.body ]
  %s12.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add28, %for.body ]
  store double %s00.0.lcssa, double* %sums, align 8, !tbaa !3
  %arrayidx30 = getelementptr inbounds double* %sums, i64 1
  store double %s01.0.lcssa, double* %arrayidx30, align 8, !tbaa !3
  %arrayidx31 = getelementptr inbounds double* %sums, i64 2
  store double %s02.0.lcssa, double* %arrayidx31, align 8, !tbaa !3
  %arrayidx32 = getelementptr inbounds double* %sums, i64 3
  store double %s10.0.lcssa, double* %arrayidx32, align 8, !tbaa !3
  %arrayidx33 = getelementptr inbounds double* %sums, i64 4
  store double %s11.0.lcssa, double* %arrayidx33, align 8, !tbaa !3
  %arrayidx34 = getelementptr inbounds double* %sums, i64 5
  store double %s12.0.lcssa, double* %arrayidx34, align 8, !tbaa !3
  ret void
}
