define void @DVdot23(i32 %n, double* %row0, double* %row1, double* %col0, double* %col1, double* %col2, double* %sums) #0 {
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !537, metadata !696), !dbg !1679
  tail call void @llvm.dbg.value(metadata double* %row0, i64 0, metadata !538, metadata !696), !dbg !1680
  tail call void @llvm.dbg.value(metadata double* %row1, i64 0, metadata !539, metadata !696), !dbg !1681
  tail call void @llvm.dbg.value(metadata double* %col0, i64 0, metadata !540, metadata !696), !dbg !1682
  tail call void @llvm.dbg.value(metadata double* %col1, i64 0, metadata !541, metadata !696), !dbg !1683
  tail call void @llvm.dbg.value(metadata double* %col2, i64 0, metadata !542, metadata !696), !dbg !1684
  tail call void @llvm.dbg.value(metadata double* %sums, i64 0, metadata !543, metadata !696), !dbg !1685
  %1 = icmp eq double* %sums, null, !dbg !1686
  %2 = icmp eq double* %row0, null, !dbg !1688
  %or.cond = or i1 %2, %1, !dbg !1689
  %3 = icmp eq double* %row1, null, !dbg !1690
  %or.cond3 = or i1 %3, %or.cond, !dbg !1689
  %4 = icmp eq double* %col0, null, !dbg !1691
  %or.cond5 = or i1 %4, %or.cond3, !dbg !1689
  %5 = icmp eq double* %col1, null, !dbg !1692
  %or.cond7 = or i1 %5, %or.cond5, !dbg !1689
  %6 = icmp eq double* %col2, null, !dbg !1693
  %or.cond9 = or i1 %6, %or.cond7, !dbg !1689
  br i1 %or.cond9, label %9, label %.preheader, !dbg !1689

.preheader:                                       ; preds = %0
  %7 = icmp sgt i32 %n, 0, !dbg !1694
  br i1 %7, label %.lr.ph, label %._crit_edge, !dbg !1695

.lr.ph:                                           ; preds = %.preheader
  %8 = add i32 %n, -1, !dbg !1695
  br label %12, !dbg !1695

; <label>:9                                       ; preds = %0
  %10 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1696, !tbaa !709
  %11 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %10, i8* getelementptr inbounds ([59 x i8]* @.str40, i64 0, i64 0), i32 %n, double* %row0, double* %row1, double* %col0, double* %col1, double* %col2, double* %sums) #7, !dbg !1698
  tail call void @exit(i32 -1) #8, !dbg !1699
  unreachable, !dbg !1699

; <label>:12                                      ; preds = %12, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %12 ]
  %13 = phi <2 x double> [ zeroinitializer, %.lr.ph ], [ %31, %12 ]
  %14 = phi <2 x double> [ zeroinitializer, %.lr.ph ], [ %36, %12 ]
  %15 = phi <2 x double> [ zeroinitializer, %.lr.ph ], [ %42, %12 ]
  %16 = getelementptr inbounds double* %row0, i64 %indvars.iv, !dbg !1700
  %17 = load double* %16, align 8, !dbg !1700, !tbaa !718
  tail call void @llvm.dbg.value(metadata double %17, i64 0, metadata !551, metadata !696), !dbg !1701
  %18 = getelementptr inbounds double* %row1, i64 %indvars.iv, !dbg !1702
  %19 = load double* %18, align 8, !dbg !1702, !tbaa !718
  tail call void @llvm.dbg.value(metadata double %19, i64 0, metadata !555, metadata !696), !dbg !1703
  %20 = getelementptr inbounds double* %col0, i64 %indvars.iv, !dbg !1704
  %21 = load double* %20, align 8, !dbg !1704, !tbaa !718
  tail call void @llvm.dbg.value(metadata double %21, i64 0, metadata !556, metadata !696), !dbg !1705
  %22 = getelementptr inbounds double* %col1, i64 %indvars.iv, !dbg !1706
  %23 = load double* %22, align 8, !dbg !1706, !tbaa !718
  tail call void @llvm.dbg.value(metadata double %23, i64 0, metadata !557, metadata !696), !dbg !1707
  %24 = getelementptr inbounds double* %col2, i64 %indvars.iv, !dbg !1708
  %25 = load double* %24, align 8, !dbg !1708, !tbaa !718
  tail call void @llvm.dbg.value(metadata double %25, i64 0, metadata !558, metadata !696), !dbg !1709
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !544, metadata !696), !dbg !1710
  %26 = insertelement <2 x double> undef, double %17, i32 0, !dbg !1711
  %27 = insertelement <2 x double> %26, double %17, i32 1, !dbg !1711
  %28 = insertelement <2 x double> undef, double %21, i32 0, !dbg !1711
  %29 = insertelement <2 x double> %28, double %23, i32 1, !dbg !1711
  %30 = fmul <2 x double> %27, %29, !dbg !1711
  %31 = fadd <2 x double> %13, %30, !dbg !1712
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !545, metadata !696), !dbg !1713
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !546, metadata !696), !dbg !1714
  %32 = insertelement <2 x double> %26, double %19, i32 1, !dbg !1715
  %33 = insertelement <2 x double> undef, double %25, i32 0, !dbg !1715
  %34 = insertelement <2 x double> %33, double %21, i32 1, !dbg !1715
  %35 = fmul <2 x double> %32, %34, !dbg !1715
  %36 = fadd <2 x double> %14, %35, !dbg !1716
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !547, metadata !696), !dbg !1717
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !548, metadata !696), !dbg !1718
  %37 = insertelement <2 x double> undef, double %19, i32 0, !dbg !1719
  %38 = insertelement <2 x double> %37, double %19, i32 1, !dbg !1719
  %39 = insertelement <2 x double> undef, double %23, i32 0, !dbg !1719
  %40 = insertelement <2 x double> %39, double %25, i32 1, !dbg !1719
  %41 = fmul <2 x double> %38, %40, !dbg !1719
  %42 = fadd <2 x double> %15, %41, !dbg !1720
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !549, metadata !696), !dbg !1721
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1695
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !1695
  %exitcond = icmp eq i32 %lftr.wideiv, %8, !dbg !1695
  br i1 %exitcond, label %._crit_edge, label %12, !dbg !1695

._crit_edge:                                      ; preds = %12, %.preheader
  %43 = phi <2 x double> [ zeroinitializer, %.preheader ], [ %31, %12 ]
  %44 = phi <2 x double> [ zeroinitializer, %.preheader ], [ %36, %12 ]
  %45 = phi <2 x double> [ zeroinitializer, %.preheader ], [ %42, %12 ]
  %46 = bitcast double* %sums to <2 x double>*, !dbg !1722
  store <2 x double> %43, <2 x double>* %46, align 8, !dbg !1722, !tbaa !718
  %47 = getelementptr inbounds double* %sums, i64 2, !dbg !1723
  %48 = bitcast double* %47 to <2 x double>*, !dbg !1724
  store <2 x double> %44, <2 x double>* %48, align 8, !dbg !1724, !tbaa !718
  %49 = getelementptr inbounds double* %sums, i64 4, !dbg !1725
  %50 = bitcast double* %49 to <2 x double>*, !dbg !1726
  store <2 x double> %45, <2 x double>* %50, align 8, !dbg !1726, !tbaa !718
  ret void, !dbg !1727
}
