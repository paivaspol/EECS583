define void @DVdot23(i32 %n, double* %row0, double* %row1, double* %col0, double* %col1, double* %col2, double* %sums) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %n}, i64 0, metadata !473), !dbg !1227
  tail call void @llvm.dbg.value(metadata !{double* %row0}, i64 0, metadata !474), !dbg !1228
  tail call void @llvm.dbg.value(metadata !{double* %row1}, i64 0, metadata !475), !dbg !1229
  tail call void @llvm.dbg.value(metadata !{double* %col0}, i64 0, metadata !476), !dbg !1230
  tail call void @llvm.dbg.value(metadata !{double* %col1}, i64 0, metadata !477), !dbg !1231
  tail call void @llvm.dbg.value(metadata !{double* %col2}, i64 0, metadata !478), !dbg !1232
  tail call void @llvm.dbg.value(metadata !{double* %sums}, i64 0, metadata !479), !dbg !1233
  %cmp = icmp eq double* %sums, null, !dbg !1234
  %cmp1 = icmp eq double* %row0, null, !dbg !1234
  %or.cond = or i1 %cmp, %cmp1, !dbg !1234
  %cmp3 = icmp eq double* %row1, null, !dbg !1234
  %or.cond72 = or i1 %or.cond, %cmp3, !dbg !1234
  %cmp5 = icmp eq double* %col0, null, !dbg !1234
  %or.cond73 = or i1 %or.cond72, %cmp5, !dbg !1234
  %cmp7 = icmp eq double* %col1, null, !dbg !1234
  %or.cond74 = or i1 %or.cond73, %cmp7, !dbg !1234
  %cmp9 = icmp eq double* %col2, null, !dbg !1234
  %or.cond75 = or i1 %or.cond74, %cmp9, !dbg !1234
  br i1 %or.cond75, label %if.then, label %for.cond.preheader, !dbg !1234

for.cond.preheader:                               ; preds = %entry
  %cmp1076 = icmp sgt i32 %n, 0, !dbg !1235
  br i1 %cmp1076, label %for.body, label %for.end, !dbg !1235

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !1236, !tbaa !629
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([59 x i8]* @.str40, i64 0, i64 0), i32 %n, double* %row0, double* %row1, double* %col0, double* %col1, double* %col2, double* %sums) #6, !dbg !1236
  tail call void @exit(i32 -1) #7, !dbg !1238
  unreachable, !dbg !1238

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %s00.083 = phi double [ %add, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %s01.082 = phi double [ %add20, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %s02.081 = phi double [ %add22, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %s10.080 = phi double [ %add24, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %s11.079 = phi double [ %add26, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %s12.077 = phi double [ %add28, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %arrayidx = getelementptr inbounds double* %row0, i64 %indvars.iv, !dbg !1239
  %1 = load double* %arrayidx, align 8, !dbg !1239, !tbaa !635
  tail call void @llvm.dbg.value(metadata !{double %1}, i64 0, metadata !487), !dbg !1239
  %arrayidx12 = getelementptr inbounds double* %row1, i64 %indvars.iv, !dbg !1239
  %2 = load double* %arrayidx12, align 8, !dbg !1239, !tbaa !635
  tail call void @llvm.dbg.value(metadata !{double %2}, i64 0, metadata !490), !dbg !1239
  %arrayidx14 = getelementptr inbounds double* %col0, i64 %indvars.iv, !dbg !1240
  %3 = load double* %arrayidx14, align 8, !dbg !1240, !tbaa !635
  tail call void @llvm.dbg.value(metadata !{double %3}, i64 0, metadata !491), !dbg !1240
  %arrayidx16 = getelementptr inbounds double* %col1, i64 %indvars.iv, !dbg !1240
  %4 = load double* %arrayidx16, align 8, !dbg !1240, !tbaa !635
  tail call void @llvm.dbg.value(metadata !{double %4}, i64 0, metadata !492), !dbg !1240
  %arrayidx18 = getelementptr inbounds double* %col2, i64 %indvars.iv, !dbg !1240
  %5 = load double* %arrayidx18, align 8, !dbg !1240, !tbaa !635
  tail call void @llvm.dbg.value(metadata !{double %5}, i64 0, metadata !493), !dbg !1240
  %mul = fmul double %1, %3, !dbg !1241
  %add = fadd double %s00.083, %mul, !dbg !1241
  tail call void @llvm.dbg.value(metadata !{double %add}, i64 0, metadata !480), !dbg !1241
  %mul19 = fmul double %1, %4, !dbg !1241
  %add20 = fadd double %s01.082, %mul19, !dbg !1241
  tail call void @llvm.dbg.value(metadata !{double %add20}, i64 0, metadata !481), !dbg !1241
  %mul21 = fmul double %1, %5, !dbg !1241
  %add22 = fadd double %s02.081, %mul21, !dbg !1241
  tail call void @llvm.dbg.value(metadata !{double %add22}, i64 0, metadata !482), !dbg !1241
  %mul23 = fmul double %2, %3, !dbg !1242
  %add24 = fadd double %s10.080, %mul23, !dbg !1242
  tail call void @llvm.dbg.value(metadata !{double %add24}, i64 0, metadata !483), !dbg !1242
  %mul25 = fmul double %2, %4, !dbg !1242
  %add26 = fadd double %s11.079, %mul25, !dbg !1242
  tail call void @llvm.dbg.value(metadata !{double %add26}, i64 0, metadata !484), !dbg !1242
  %mul27 = fmul double %2, %5, !dbg !1242
  %add28 = fadd double %s12.077, %mul27, !dbg !1242
  tail call void @llvm.dbg.value(metadata !{double %add28}, i64 0, metadata !485), !dbg !1242
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1235
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !1235
  %exitcond = icmp eq i32 %lftr.wideiv, %n, !dbg !1235
  br i1 %exitcond, label %for.end, label %for.body, !dbg !1235

for.end:                                          ; preds = %for.body, %for.cond.preheader
  %s00.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add, %for.body ]
  %s01.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add20, %for.body ]
  %s02.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add22, %for.body ]
  %s10.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add24, %for.body ]
  %s11.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add26, %for.body ]
  %s12.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add28, %for.body ]
  store double %s00.0.lcssa, double* %sums, align 8, !dbg !1243, !tbaa !635
  %arrayidx30 = getelementptr inbounds double* %sums, i64 1, !dbg !1243
  store double %s01.0.lcssa, double* %arrayidx30, align 8, !dbg !1243, !tbaa !635
  %arrayidx31 = getelementptr inbounds double* %sums, i64 2, !dbg !1243
  store double %s02.0.lcssa, double* %arrayidx31, align 8, !dbg !1243, !tbaa !635
  %arrayidx32 = getelementptr inbounds double* %sums, i64 3, !dbg !1244
  store double %s10.0.lcssa, double* %arrayidx32, align 8, !dbg !1244, !tbaa !635
  %arrayidx33 = getelementptr inbounds double* %sums, i64 4, !dbg !1244
  store double %s11.0.lcssa, double* %arrayidx33, align 8, !dbg !1244, !tbaa !635
  %arrayidx34 = getelementptr inbounds double* %sums, i64 5, !dbg !1244
  store double %s12.0.lcssa, double* %arrayidx34, align 8, !dbg !1244, !tbaa !635
  ret void, !dbg !1245
}
