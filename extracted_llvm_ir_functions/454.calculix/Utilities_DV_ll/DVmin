define double @DVmin(i32 %size, double* %y, i32* %ploc) #0 {
entry:
  %cmp = icmp sgt i32 %size, 0
  br i1 %cmp, label %if.then, label %if.end10

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq double* %y, null
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([68 x i8]* @.str22, i64 0, i64 0), i32 %size, double* null, i32* %ploc) #5
  tail call void @exit(i32 -1) #6
  unreachable

if.else:                                          ; preds = %if.then
  %1 = load double* %y, align 8, !tbaa !3
  %cmp325 = icmp sgt i32 %size, 1
  br i1 %cmp325, label %for.body, label %for.end

for.body:                                         ; preds = %if.else, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 1, %if.else ]
  %loc.027 = phi i32 [ %loc.1, %for.body ], [ 0, %if.else ]
  %minval.026 = phi double [ %minval.1, %for.body ], [ %1, %if.else ]
  %arrayidx4 = getelementptr inbounds double* %y, i64 %indvars.iv
  %2 = load double* %arrayidx4, align 8, !tbaa !3
  %cmp5 = fcmp ogt double %minval.026, %2
  %minval.1 = select i1 %cmp5, double %2, double %minval.026
  %3 = trunc i64 %indvars.iv to i32
  %loc.1 = select i1 %cmp5, i32 %3, i32 %loc.027
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %size
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.else
  %loc.0.lcssa = phi i32 [ 0, %if.else ], [ %loc.1, %for.body ]
  %minval.0.lcssa = phi double [ %1, %if.else ], [ %minval.1, %for.body ]
  store i32 %loc.0.lcssa, i32* %ploc, align 4, !tbaa !4
  br label %if.end10

if.end10:                                         ; preds = %for.end, %entry
  %minval.2 = phi double [ %minval.0.lcssa, %for.end ], [ 0.000000e+00, %entry ]
  %loc.2 = phi i32 [ %loc.0.lcssa, %for.end ], [ -1, %entry ]
  store i32 %loc.2, i32* %ploc, align 4, !tbaa !4
  ret double %minval.2
}
