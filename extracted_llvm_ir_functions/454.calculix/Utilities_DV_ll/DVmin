define double @DVmin(i32 %size, double* %y, i32* %ploc) #0 {
  tail call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !289, metadata !696), !dbg !1216
  tail call void @llvm.dbg.value(metadata double* %y, i64 0, metadata !290, metadata !696), !dbg !1217
  tail call void @llvm.dbg.value(metadata i32* %ploc, i64 0, metadata !291, metadata !696), !dbg !1218
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !292, metadata !696), !dbg !1219
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !293, metadata !696), !dbg !1220
  %1 = icmp sgt i32 %size, 0, !dbg !1221
  br i1 %1, label %2, label %16, !dbg !1222

; <label>:2                                       ; preds = %0
  %3 = icmp eq double* %y, null, !dbg !1223
  br i1 %3, label %4, label %7, !dbg !1224

; <label>:4                                       ; preds = %2
  %5 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1225, !tbaa !709
  %6 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %5, i8* getelementptr inbounds ([68 x i8]* @.str22, i64 0, i64 0), i32 %size, double* null, i32* %ploc) #7, !dbg !1227
  tail call void @exit(i32 -1) #8, !dbg !1228
  unreachable, !dbg !1228

; <label>:7                                       ; preds = %2
  %8 = load double* %y, align 8, !dbg !1229, !tbaa !718
  tail call void @llvm.dbg.value(metadata double %8, i64 0, metadata !292, metadata !696), !dbg !1219
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !293, metadata !696), !dbg !1220
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !294, metadata !696), !dbg !1230
  %9 = icmp sgt i32 %size, 1, !dbg !1231
  br i1 %9, label %.lr.ph, label %._crit_edge, !dbg !1234

.lr.ph:                                           ; preds = %7
  %10 = add i32 %size, -1, !dbg !1234
  br label %11, !dbg !1234

; <label>:11                                      ; preds = %11, %.lr.ph
  %indvars.iv = phi i64 [ 1, %.lr.ph ], [ %indvars.iv.next, %11 ]
  %loc.02 = phi i32 [ 0, %.lr.ph ], [ %loc.1, %11 ]
  %minval.01 = phi double [ %8, %.lr.ph ], [ %minval.1, %11 ]
  %12 = getelementptr inbounds double* %y, i64 %indvars.iv, !dbg !1235
  %13 = load double* %12, align 8, !dbg !1235, !tbaa !718
  %14 = fcmp ogt double %minval.01, %13, !dbg !1238
  tail call void @llvm.dbg.value(metadata double %13, i64 0, metadata !292, metadata !696), !dbg !1219
  %minval.1 = select i1 %14, double %13, double %minval.01, !dbg !1239
  %15 = trunc i64 %indvars.iv to i32, !dbg !1239
  %loc.1 = select i1 %14, i32 %15, i32 %loc.02, !dbg !1239
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1234
  %exitcond = icmp eq i32 %15, %10, !dbg !1234
  br i1 %exitcond, label %._crit_edge, label %11, !dbg !1234

._crit_edge:                                      ; preds = %11, %7
  %loc.0.lcssa = phi i32 [ 0, %7 ], [ %loc.1, %11 ]
  %minval.0.lcssa = phi double [ %8, %7 ], [ %minval.1, %11 ]
  store i32 %loc.0.lcssa, i32* %ploc, align 4, !dbg !1240, !tbaa !771
  br label %16, !dbg !1241

; <label>:16                                      ; preds = %._crit_edge, %0
  %minval.2 = phi double [ %minval.0.lcssa, %._crit_edge ], [ 0.000000e+00, %0 ]
  %loc.2 = phi i32 [ %loc.0.lcssa, %._crit_edge ], [ -1, %0 ]
  store i32 %loc.2, i32* %ploc, align 4, !dbg !1242, !tbaa !771
  ret double %minval.2, !dbg !1243
}
