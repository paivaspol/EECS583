define void @DVdot22(i32 %n, double* %row0, double* %row1, double* %col0, double* %col1, double* %sums) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %n}, i64 0, metadata !539), !dbg !1283
  tail call void @llvm.dbg.value(metadata !{double* %row0}, i64 0, metadata !540), !dbg !1284
  tail call void @llvm.dbg.value(metadata !{double* %row1}, i64 0, metadata !541), !dbg !1285
  tail call void @llvm.dbg.value(metadata !{double* %col0}, i64 0, metadata !542), !dbg !1286
  tail call void @llvm.dbg.value(metadata !{double* %col1}, i64 0, metadata !543), !dbg !1287
  tail call void @llvm.dbg.value(metadata !{double* %sums}, i64 0, metadata !544), !dbg !1288
  %cmp = icmp eq double* %sums, null, !dbg !1289
  %cmp1 = icmp eq double* %row0, null, !dbg !1289
  %or.cond = or i1 %cmp, %cmp1, !dbg !1289
  %cmp3 = icmp eq double* %row1, null, !dbg !1289
  %or.cond52 = or i1 %or.cond, %cmp3, !dbg !1289
  %cmp5 = icmp eq double* %col0, null, !dbg !1289
  %or.cond53 = or i1 %or.cond52, %cmp5, !dbg !1289
  %cmp7 = icmp eq double* %col1, null, !dbg !1289
  %or.cond54 = or i1 %or.cond53, %cmp7, !dbg !1289
  br i1 %or.cond54, label %if.then, label %for.cond.preheader, !dbg !1289

for.cond.preheader:                               ; preds = %entry
  %cmp855 = icmp sgt i32 %n, 0, !dbg !1290
  br i1 %cmp855, label %for.body, label %for.end, !dbg !1290

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !1291, !tbaa !629
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([56 x i8]* @.str43, i64 0, i64 0), i32 %n, double* %row0, double* %row1, double* %col0, double* %col1, double* %sums) #6, !dbg !1291
  tail call void @exit(i32 -1) #7, !dbg !1293
  unreachable, !dbg !1293

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %s00.060 = phi double [ %add, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %s01.059 = phi double [ %add16, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %s10.058 = phi double [ %add18, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %s11.057 = phi double [ %add20, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %arrayidx = getelementptr inbounds double* %row0, i64 %indvars.iv, !dbg !1294
  %1 = load double* %arrayidx, align 8, !dbg !1294, !tbaa !635
  tail call void @llvm.dbg.value(metadata !{double %1}, i64 0, metadata !550), !dbg !1294
  %arrayidx10 = getelementptr inbounds double* %row1, i64 %indvars.iv, !dbg !1294
  %2 = load double* %arrayidx10, align 8, !dbg !1294, !tbaa !635
  tail call void @llvm.dbg.value(metadata !{double %2}, i64 0, metadata !553), !dbg !1294
  %arrayidx12 = getelementptr inbounds double* %col0, i64 %indvars.iv, !dbg !1295
  %3 = load double* %arrayidx12, align 8, !dbg !1295, !tbaa !635
  tail call void @llvm.dbg.value(metadata !{double %3}, i64 0, metadata !554), !dbg !1295
  %arrayidx14 = getelementptr inbounds double* %col1, i64 %indvars.iv, !dbg !1295
  %4 = load double* %arrayidx14, align 8, !dbg !1295, !tbaa !635
  tail call void @llvm.dbg.value(metadata !{double %4}, i64 0, metadata !555), !dbg !1295
  %mul = fmul double %1, %3, !dbg !1296
  %add = fadd double %s00.060, %mul, !dbg !1296
  tail call void @llvm.dbg.value(metadata !{double %add}, i64 0, metadata !545), !dbg !1296
  %mul15 = fmul double %1, %4, !dbg !1296
  %add16 = fadd double %s01.059, %mul15, !dbg !1296
  tail call void @llvm.dbg.value(metadata !{double %add16}, i64 0, metadata !546), !dbg !1296
  %mul17 = fmul double %2, %3, !dbg !1297
  %add18 = fadd double %s10.058, %mul17, !dbg !1297
  tail call void @llvm.dbg.value(metadata !{double %add18}, i64 0, metadata !547), !dbg !1297
  %mul19 = fmul double %2, %4, !dbg !1297
  %add20 = fadd double %s11.057, %mul19, !dbg !1297
  tail call void @llvm.dbg.value(metadata !{double %add20}, i64 0, metadata !548), !dbg !1297
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1290
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !1290
  %exitcond = icmp eq i32 %lftr.wideiv, %n, !dbg !1290
  br i1 %exitcond, label %for.end, label %for.body, !dbg !1290

for.end:                                          ; preds = %for.body, %for.cond.preheader
  %s00.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add, %for.body ]
  %s01.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add16, %for.body ]
  %s10.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add18, %for.body ]
  %s11.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add20, %for.body ]
  store double %s00.0.lcssa, double* %sums, align 8, !dbg !1298, !tbaa !635
  %arrayidx22 = getelementptr inbounds double* %sums, i64 1, !dbg !1298
  store double %s01.0.lcssa, double* %arrayidx22, align 8, !dbg !1298, !tbaa !635
  %arrayidx23 = getelementptr inbounds double* %sums, i64 2, !dbg !1299
  store double %s10.0.lcssa, double* %arrayidx23, align 8, !dbg !1299, !tbaa !635
  %arrayidx24 = getelementptr inbounds double* %sums, i64 3, !dbg !1299
  store double %s11.0.lcssa, double* %arrayidx24, align 8, !dbg !1299, !tbaa !635
  ret void, !dbg !1300
}
