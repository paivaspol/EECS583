define void @DVscatterAddZero(i32 %size, double* %y, i32* %index, double* %x) #0 {
  tail call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !383, metadata !696), !dbg !1412
  tail call void @llvm.dbg.value(metadata double* %y, i64 0, metadata !384, metadata !696), !dbg !1413
  tail call void @llvm.dbg.value(metadata i32* %index, i64 0, metadata !385, metadata !696), !dbg !1414
  tail call void @llvm.dbg.value(metadata double* %x, i64 0, metadata !386, metadata !696), !dbg !1415
  %1 = icmp sgt i32 %size, 0, !dbg !1416
  br i1 %1, label %2, label %.loopexit, !dbg !1417

; <label>:2                                       ; preds = %0
  %3 = icmp eq double* %y, null, !dbg !1418
  %4 = icmp eq double* %x, null, !dbg !1419
  %or.cond = or i1 %3, %4, !dbg !1420
  %5 = icmp eq i32* %index, null, !dbg !1421
  %or.cond3 = or i1 %5, %or.cond, !dbg !1420
  br i1 %or.cond3, label %7, label %.lr.ph, !dbg !1420

.lr.ph:                                           ; preds = %2
  %6 = add i32 %size, -1, !dbg !1422
  br label %10, !dbg !1422

; <label>:7                                       ; preds = %2
  %8 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1424, !tbaa !709
  %9 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %8, i8* getelementptr inbounds ([88 x i8]* @.str30, i64 0, i64 0), i32 %size, double* %y, i32* %index, double* %x) #7, !dbg !1426
  tail call void @exit(i32 -1) #8, !dbg !1427
  unreachable, !dbg !1427

; <label>:10                                      ; preds = %10, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %10 ]
  %11 = getelementptr inbounds double* %x, i64 %indvars.iv, !dbg !1428
  %12 = load double* %11, align 8, !dbg !1428, !tbaa !718
  %13 = getelementptr inbounds i32* %index, i64 %indvars.iv, !dbg !1431
  %14 = load i32* %13, align 4, !dbg !1431, !tbaa !771
  %15 = sext i32 %14 to i64, !dbg !1432
  %16 = getelementptr inbounds double* %y, i64 %15, !dbg !1432
  %17 = load double* %16, align 8, !dbg !1433, !tbaa !718
  %18 = fadd double %12, %17, !dbg !1433
  store double %18, double* %16, align 8, !dbg !1433, !tbaa !718
  store double 0.000000e+00, double* %11, align 8, !dbg !1434, !tbaa !718
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1422
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !1422
  %exitcond = icmp eq i32 %lftr.wideiv, %6, !dbg !1422
  br i1 %exitcond, label %.loopexit, label %10, !dbg !1422

.loopexit:                                        ; preds = %10, %0
  ret void, !dbg !1435
}
