define void @DVscatterAddZero(i32 %size, double* %y, i32* %index, double* %x) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %size}, i64 0, metadata !334), !dbg !1080
  tail call void @llvm.dbg.value(metadata !{double* %y}, i64 0, metadata !335), !dbg !1081
  tail call void @llvm.dbg.value(metadata !{i32* %index}, i64 0, metadata !336), !dbg !1082
  tail call void @llvm.dbg.value(metadata !{double* %x}, i64 0, metadata !337), !dbg !1083
  %cmp = icmp sgt i32 %size, 0, !dbg !1084
  br i1 %cmp, label %if.then, label %if.end13, !dbg !1084

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq double* %y, null, !dbg !1085
  %cmp2 = icmp eq double* %x, null, !dbg !1085
  %or.cond = or i1 %cmp1, %cmp2, !dbg !1085
  %cmp4 = icmp eq i32* %index, null, !dbg !1085
  %or.cond27 = or i1 %or.cond, %cmp4, !dbg !1085
  br i1 %or.cond27, label %if.then5, label %for.body, !dbg !1085

if.then5:                                         ; preds = %if.then
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !1086, !tbaa !629
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([88 x i8]* @.str30, i64 0, i64 0), i32 %size, double* %y, i32* %index, double* %x) #6, !dbg !1086
  tail call void @exit(i32 -1) #7, !dbg !1088
  unreachable, !dbg !1088

for.body:                                         ; preds = %if.then, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.then ]
  %arrayidx = getelementptr inbounds double* %x, i64 %indvars.iv, !dbg !1089
  %1 = load double* %arrayidx, align 8, !dbg !1089, !tbaa !635
  %arrayidx8 = getelementptr inbounds i32* %index, i64 %indvars.iv, !dbg !1089
  %2 = load i32* %arrayidx8, align 4, !dbg !1089, !tbaa !665
  %idxprom9 = sext i32 %2 to i64, !dbg !1089
  %arrayidx10 = getelementptr inbounds double* %y, i64 %idxprom9, !dbg !1089
  %3 = load double* %arrayidx10, align 8, !dbg !1089, !tbaa !635
  %add = fadd double %1, %3, !dbg !1089
  store double %add, double* %arrayidx10, align 8, !dbg !1089, !tbaa !635
  store double 0.000000e+00, double* %arrayidx, align 8, !dbg !1092, !tbaa !635
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1093
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !1093
  %exitcond = icmp eq i32 %lftr.wideiv, %size, !dbg !1093
  br i1 %exitcond, label %if.end13, label %for.body, !dbg !1093

if.end13:                                         ; preds = %for.body, %entry
  ret void, !dbg !1094
}
