define void @DVdot31(i32 %n, double* %row0, double* %row1, double* %row2, double* %col0, double* %sums) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %n}, i64 0, metadata !575), !dbg !1316
  tail call void @llvm.dbg.value(metadata !{double* %row0}, i64 0, metadata !576), !dbg !1317
  tail call void @llvm.dbg.value(metadata !{double* %row1}, i64 0, metadata !577), !dbg !1318
  tail call void @llvm.dbg.value(metadata !{double* %row2}, i64 0, metadata !578), !dbg !1319
  tail call void @llvm.dbg.value(metadata !{double* %col0}, i64 0, metadata !579), !dbg !1320
  tail call void @llvm.dbg.value(metadata !{double* %sums}, i64 0, metadata !580), !dbg !1321
  %cmp = icmp eq double* %sums, null, !dbg !1322
  %cmp1 = icmp eq double* %row0, null, !dbg !1322
  %or.cond = or i1 %cmp, %cmp1, !dbg !1322
  %cmp3 = icmp eq double* %row1, null, !dbg !1322
  %or.cond45 = or i1 %or.cond, %cmp3, !dbg !1322
  %cmp5 = icmp eq double* %row2, null, !dbg !1322
  %or.cond46 = or i1 %or.cond45, %cmp5, !dbg !1322
  %cmp7 = icmp eq double* %col0, null, !dbg !1322
  %or.cond47 = or i1 %or.cond46, %cmp7, !dbg !1322
  br i1 %or.cond47, label %if.then, label %for.cond.preheader, !dbg !1322

for.cond.preheader:                               ; preds = %entry
  %cmp848 = icmp sgt i32 %n, 0, !dbg !1323
  br i1 %cmp848, label %for.body, label %for.end, !dbg !1323

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !1324, !tbaa !629
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([56 x i8]* @.str45, i64 0, i64 0), i32 %n, double* %row0, double* %row1, double* %row2, double* %col0, double* %sums) #6, !dbg !1324
  tail call void @exit(i32 -1) #7, !dbg !1326
  unreachable, !dbg !1326

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %s00.052 = phi double [ %add, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %s10.051 = phi double [ %add16, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %s20.050 = phi double [ %add18, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %arrayidx = getelementptr inbounds double* %row0, i64 %indvars.iv, !dbg !1327
  %1 = load double* %arrayidx, align 8, !dbg !1327, !tbaa !635
  tail call void @llvm.dbg.value(metadata !{double %1}, i64 0, metadata !585), !dbg !1327
  %arrayidx10 = getelementptr inbounds double* %row1, i64 %indvars.iv, !dbg !1327
  %2 = load double* %arrayidx10, align 8, !dbg !1327, !tbaa !635
  tail call void @llvm.dbg.value(metadata !{double %2}, i64 0, metadata !588), !dbg !1327
  %arrayidx12 = getelementptr inbounds double* %row2, i64 %indvars.iv, !dbg !1327
  %3 = load double* %arrayidx12, align 8, !dbg !1327, !tbaa !635
  tail call void @llvm.dbg.value(metadata !{double %3}, i64 0, metadata !589), !dbg !1327
  %arrayidx14 = getelementptr inbounds double* %col0, i64 %indvars.iv, !dbg !1328
  %4 = load double* %arrayidx14, align 8, !dbg !1328, !tbaa !635
  tail call void @llvm.dbg.value(metadata !{double %4}, i64 0, metadata !590), !dbg !1328
  %mul = fmul double %1, %4, !dbg !1329
  %add = fadd double %s00.052, %mul, !dbg !1329
  tail call void @llvm.dbg.value(metadata !{double %add}, i64 0, metadata !581), !dbg !1329
  %mul15 = fmul double %2, %4, !dbg !1330
  %add16 = fadd double %s10.051, %mul15, !dbg !1330
  tail call void @llvm.dbg.value(metadata !{double %add16}, i64 0, metadata !582), !dbg !1330
  %mul17 = fmul double %3, %4, !dbg !1331
  %add18 = fadd double %s20.050, %mul17, !dbg !1331
  tail call void @llvm.dbg.value(metadata !{double %add18}, i64 0, metadata !583), !dbg !1331
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1323
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !1323
  %exitcond = icmp eq i32 %lftr.wideiv, %n, !dbg !1323
  br i1 %exitcond, label %for.end, label %for.body, !dbg !1323

for.end:                                          ; preds = %for.body, %for.cond.preheader
  %s00.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add, %for.body ]
  %s10.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add16, %for.body ]
  %s20.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add18, %for.body ]
  store double %s00.0.lcssa, double* %sums, align 8, !dbg !1332, !tbaa !635
  %arrayidx20 = getelementptr inbounds double* %sums, i64 1, !dbg !1333
  store double %s10.0.lcssa, double* %arrayidx20, align 8, !dbg !1333, !tbaa !635
  %arrayidx21 = getelementptr inbounds double* %sums, i64 2, !dbg !1334
  store double %s20.0.lcssa, double* %arrayidx21, align 8, !dbg !1334, !tbaa !635
  ret void, !dbg !1335
}
