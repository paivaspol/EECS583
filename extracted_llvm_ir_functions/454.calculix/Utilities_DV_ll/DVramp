define void @DVramp(i32 %size, double* %y, double %start, double %inc) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %size}, i64 0, metadata !288), !dbg !1012
  tail call void @llvm.dbg.value(metadata !{double* %y}, i64 0, metadata !289), !dbg !1013
  tail call void @llvm.dbg.value(metadata !{double %start}, i64 0, metadata !290), !dbg !1014
  tail call void @llvm.dbg.value(metadata !{double %inc}, i64 0, metadata !291), !dbg !1015
  %cmp = icmp sgt i32 %size, 0, !dbg !1016
  br i1 %cmp, label %if.then, label %if.end5, !dbg !1016

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq double* %y, null, !dbg !1017
  br i1 %cmp1, label %if.then2, label %for.body, !dbg !1017

if.then2:                                         ; preds = %if.then
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !1018, !tbaa !629
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([81 x i8]* @.str25, i64 0, i64 0), i32 %size, double* null, double %start, double %inc) #6, !dbg !1018
  tail call void @exit(i32 -1) #7, !dbg !1020
  unreachable, !dbg !1020

for.body:                                         ; preds = %if.then, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.then ]
  %val.017 = phi double [ %add, %for.body ], [ %start, %if.then ]
  %arrayidx = getelementptr inbounds double* %y, i64 %indvars.iv, !dbg !1021
  store double %val.017, double* %arrayidx, align 8, !dbg !1021, !tbaa !635
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1024
  %add = fadd double %val.017, %inc, !dbg !1024
  tail call void @llvm.dbg.value(metadata !{double %add}, i64 0, metadata !295), !dbg !1024
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !1024
  %exitcond = icmp eq i32 %lftr.wideiv, %size, !dbg !1024
  br i1 %exitcond, label %if.end5, label %for.body, !dbg !1024

if.end5:                                          ; preds = %for.body, %entry
  ret void, !dbg !1025
}
