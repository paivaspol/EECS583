define void @DVaxpy(i32 %size, double* %y, double %alpha, double* %x) #0 {
  tail call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !27, metadata !696), !dbg !723
  tail call void @llvm.dbg.value(metadata double* %y, i64 0, metadata !28, metadata !696), !dbg !724
  tail call void @llvm.dbg.value(metadata double %alpha, i64 0, metadata !29, metadata !696), !dbg !725
  tail call void @llvm.dbg.value(metadata double* %x, i64 0, metadata !30, metadata !696), !dbg !726
  %1 = icmp slt i32 %size, 0, !dbg !727
  %2 = fcmp oeq double %alpha, 0.000000e+00, !dbg !728
  %or.cond = or i1 %1, %2, !dbg !729
  br i1 %or.cond, label %.loopexit, label %3, !dbg !729

; <label>:3                                       ; preds = %0
  %4 = icmp eq double* %y, null, !dbg !730
  %5 = icmp eq double* %x, null, !dbg !731
  %or.cond3 = or i1 %4, %5, !dbg !732
  br i1 %or.cond3, label %8, label %.preheader, !dbg !732

.preheader:                                       ; preds = %3
  %6 = icmp sgt i32 %size, 0, !dbg !733
  br i1 %6, label %.lr.ph, label %.loopexit, !dbg !736

.lr.ph:                                           ; preds = %.preheader
  %7 = add i32 %size, -1, !dbg !736
  br label %11, !dbg !736

; <label>:8                                       ; preds = %3
  %9 = load %struct.__sFILE** @__stderrp, align 8, !dbg !737, !tbaa !709
  %10 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %9, i8* getelementptr inbounds ([79 x i8]* @.str1, i64 0, i64 0), i32 %size, double* %y, double %alpha, double* %x) #7, !dbg !739
  tail call void @exit(i32 -1) #8, !dbg !740
  unreachable, !dbg !740

; <label>:11                                      ; preds = %11, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %11 ]
  %12 = getelementptr inbounds double* %x, i64 %indvars.iv, !dbg !741
  %13 = load double* %12, align 8, !dbg !741, !tbaa !718
  %14 = fmul double %13, %alpha, !dbg !743
  %15 = getelementptr inbounds double* %y, i64 %indvars.iv, !dbg !744
  %16 = load double* %15, align 8, !dbg !745, !tbaa !718
  %17 = fadd double %16, %14, !dbg !745
  store double %17, double* %15, align 8, !dbg !745, !tbaa !718
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !736
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !736
  %exitcond = icmp eq i32 %lftr.wideiv, %7, !dbg !736
  br i1 %exitcond, label %.loopexit, label %11, !dbg !736

.loopexit:                                        ; preds = %11, %.preheader, %0
  ret void, !dbg !746
}
