define void @DVdot33(i32 %n, double* %row0, double* %row1, double* %row2, double* %col0, double* %col1, double* %col2, double* %sums) #0 {
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !506, metadata !696), !dbg !1615
  tail call void @llvm.dbg.value(metadata double* %row0, i64 0, metadata !507, metadata !696), !dbg !1616
  tail call void @llvm.dbg.value(metadata double* %row1, i64 0, metadata !508, metadata !696), !dbg !1617
  tail call void @llvm.dbg.value(metadata double* %row2, i64 0, metadata !509, metadata !696), !dbg !1618
  tail call void @llvm.dbg.value(metadata double* %col0, i64 0, metadata !510, metadata !696), !dbg !1619
  tail call void @llvm.dbg.value(metadata double* %col1, i64 0, metadata !511, metadata !696), !dbg !1620
  tail call void @llvm.dbg.value(metadata double* %col2, i64 0, metadata !512, metadata !696), !dbg !1621
  tail call void @llvm.dbg.value(metadata double* %sums, i64 0, metadata !513, metadata !696), !dbg !1622
  %1 = icmp eq double* %sums, null, !dbg !1623
  %2 = icmp eq double* %row0, null, !dbg !1625
  %or.cond = or i1 %2, %1, !dbg !1626
  %3 = icmp eq double* %row1, null, !dbg !1627
  %or.cond3 = or i1 %3, %or.cond, !dbg !1626
  %4 = icmp eq double* %row2, null, !dbg !1628
  %or.cond5 = or i1 %4, %or.cond3, !dbg !1626
  %5 = icmp eq double* %col0, null, !dbg !1629
  %or.cond7 = or i1 %5, %or.cond5, !dbg !1626
  %6 = icmp eq double* %col1, null, !dbg !1630
  %or.cond9 = or i1 %6, %or.cond7, !dbg !1626
  %7 = icmp eq double* %col2, null, !dbg !1631
  %or.cond11 = or i1 %7, %or.cond9, !dbg !1626
  br i1 %or.cond11, label %10, label %.preheader, !dbg !1626

.preheader:                                       ; preds = %0
  %8 = icmp sgt i32 %n, 0, !dbg !1632
  br i1 %8, label %.lr.ph, label %._crit_edge, !dbg !1633

.lr.ph:                                           ; preds = %.preheader
  %9 = add i32 %n, -1, !dbg !1633
  br label %13, !dbg !1633

; <label>:10                                      ; preds = %0
  %11 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1634, !tbaa !709
  %12 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %11, i8* getelementptr inbounds ([62 x i8]* @.str39, i64 0, i64 0), i32 %n, double* %row0, double* %row1, double* %row2, double* %col0, double* %col1, double* %col2, double* %sums) #7, !dbg !1636
  tail call void @exit(i32 -1) #8, !dbg !1637
  unreachable, !dbg !1637

; <label>:13                                      ; preds = %13, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %13 ]
  %s22.014 = phi double [ 0.000000e+00, %.lr.ph ], [ %52, %13 ]
  %14 = phi <2 x double> [ zeroinitializer, %.lr.ph ], [ %35, %13 ]
  %15 = phi <2 x double> [ zeroinitializer, %.lr.ph ], [ %40, %13 ]
  %16 = phi <2 x double> [ zeroinitializer, %.lr.ph ], [ %46, %13 ]
  %17 = phi <2 x double> [ zeroinitializer, %.lr.ph ], [ %50, %13 ]
  %18 = getelementptr inbounds double* %row0, i64 %indvars.iv, !dbg !1638
  %19 = load double* %18, align 8, !dbg !1638, !tbaa !718
  tail call void @llvm.dbg.value(metadata double %19, i64 0, metadata !524, metadata !696), !dbg !1639
  %20 = getelementptr inbounds double* %row1, i64 %indvars.iv, !dbg !1640
  %21 = load double* %20, align 8, !dbg !1640, !tbaa !718
  tail call void @llvm.dbg.value(metadata double %21, i64 0, metadata !528, metadata !696), !dbg !1641
  %22 = getelementptr inbounds double* %row2, i64 %indvars.iv, !dbg !1642
  %23 = load double* %22, align 8, !dbg !1642, !tbaa !718
  tail call void @llvm.dbg.value(metadata double %23, i64 0, metadata !529, metadata !696), !dbg !1643
  %24 = getelementptr inbounds double* %col0, i64 %indvars.iv, !dbg !1644
  %25 = load double* %24, align 8, !dbg !1644, !tbaa !718
  tail call void @llvm.dbg.value(metadata double %25, i64 0, metadata !530, metadata !696), !dbg !1645
  %26 = getelementptr inbounds double* %col1, i64 %indvars.iv, !dbg !1646
  %27 = load double* %26, align 8, !dbg !1646, !tbaa !718
  tail call void @llvm.dbg.value(metadata double %27, i64 0, metadata !531, metadata !696), !dbg !1647
  %28 = getelementptr inbounds double* %col2, i64 %indvars.iv, !dbg !1648
  %29 = load double* %28, align 8, !dbg !1648, !tbaa !718
  tail call void @llvm.dbg.value(metadata double %29, i64 0, metadata !532, metadata !696), !dbg !1649
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !514, metadata !696), !dbg !1650
  %30 = insertelement <2 x double> undef, double %19, i32 0, !dbg !1651
  %31 = insertelement <2 x double> %30, double %19, i32 1, !dbg !1651
  %32 = insertelement <2 x double> undef, double %25, i32 0, !dbg !1651
  %33 = insertelement <2 x double> %32, double %27, i32 1, !dbg !1651
  %34 = fmul <2 x double> %31, %33, !dbg !1651
  %35 = fadd <2 x double> %14, %34, !dbg !1652
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !515, metadata !696), !dbg !1653
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !516, metadata !696), !dbg !1654
  %36 = insertelement <2 x double> %30, double %21, i32 1, !dbg !1655
  %37 = insertelement <2 x double> undef, double %29, i32 0, !dbg !1655
  %38 = insertelement <2 x double> %37, double %25, i32 1, !dbg !1655
  %39 = fmul <2 x double> %36, %38, !dbg !1655
  %40 = fadd <2 x double> %15, %39, !dbg !1656
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !517, metadata !696), !dbg !1657
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !518, metadata !696), !dbg !1658
  %41 = insertelement <2 x double> undef, double %21, i32 0, !dbg !1659
  %42 = insertelement <2 x double> %41, double %21, i32 1, !dbg !1659
  %43 = insertelement <2 x double> undef, double %27, i32 0, !dbg !1659
  %44 = insertelement <2 x double> %43, double %29, i32 1, !dbg !1659
  %45 = fmul <2 x double> %42, %44, !dbg !1659
  %46 = fadd <2 x double> %16, %45, !dbg !1660
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !519, metadata !696), !dbg !1661
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !520, metadata !696), !dbg !1662
  %47 = insertelement <2 x double> undef, double %23, i32 0, !dbg !1663
  %48 = insertelement <2 x double> %47, double %23, i32 1, !dbg !1663
  %49 = fmul <2 x double> %48, %33, !dbg !1663
  %50 = fadd <2 x double> %17, %49, !dbg !1664
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !521, metadata !696), !dbg !1665
  %51 = fmul double %23, %29, !dbg !1666
  %52 = fadd double %s22.014, %51, !dbg !1667
  tail call void @llvm.dbg.value(metadata double %52, i64 0, metadata !522, metadata !696), !dbg !1668
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1633
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !1633
  %exitcond = icmp eq i32 %lftr.wideiv, %9, !dbg !1633
  br i1 %exitcond, label %._crit_edge, label %13, !dbg !1633

._crit_edge:                                      ; preds = %13, %.preheader
  %s22.0.lcssa = phi double [ 0.000000e+00, %.preheader ], [ %52, %13 ]
  %53 = phi <2 x double> [ zeroinitializer, %.preheader ], [ %35, %13 ]
  %54 = phi <2 x double> [ zeroinitializer, %.preheader ], [ %40, %13 ]
  %55 = phi <2 x double> [ zeroinitializer, %.preheader ], [ %46, %13 ]
  %56 = phi <2 x double> [ zeroinitializer, %.preheader ], [ %50, %13 ]
  %57 = bitcast double* %sums to <2 x double>*, !dbg !1669
  store <2 x double> %53, <2 x double>* %57, align 8, !dbg !1669, !tbaa !718
  %58 = getelementptr inbounds double* %sums, i64 2, !dbg !1670
  %59 = bitcast double* %58 to <2 x double>*, !dbg !1671
  store <2 x double> %54, <2 x double>* %59, align 8, !dbg !1671, !tbaa !718
  %60 = getelementptr inbounds double* %sums, i64 4, !dbg !1672
  %61 = bitcast double* %60 to <2 x double>*, !dbg !1673
  store <2 x double> %55, <2 x double>* %61, align 8, !dbg !1673, !tbaa !718
  %62 = getelementptr inbounds double* %sums, i64 6, !dbg !1674
  %63 = bitcast double* %62 to <2 x double>*, !dbg !1675
  store <2 x double> %56, <2 x double>* %63, align 8, !dbg !1675, !tbaa !718
  %64 = getelementptr inbounds double* %sums, i64 8, !dbg !1676
  store double %s22.0.lcssa, double* %64, align 8, !dbg !1677, !tbaa !718
  ret void, !dbg !1678
}
