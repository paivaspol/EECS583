define void @DVgatherZero(i32 %size, double* %y, double* %x, i32* %index) #0 {
  tail call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !224, metadata !696), !dbg !1087
  tail call void @llvm.dbg.value(metadata double* %y, i64 0, metadata !225, metadata !696), !dbg !1088
  tail call void @llvm.dbg.value(metadata double* %x, i64 0, metadata !226, metadata !696), !dbg !1089
  tail call void @llvm.dbg.value(metadata i32* %index, i64 0, metadata !227, metadata !696), !dbg !1090
  %1 = icmp sgt i32 %size, 0, !dbg !1091
  br i1 %1, label %2, label %.loopexit, !dbg !1092

; <label>:2                                       ; preds = %0
  %3 = icmp eq double* %y, null, !dbg !1093
  %4 = icmp eq double* %x, null, !dbg !1094
  %or.cond = or i1 %3, %4, !dbg !1095
  %5 = icmp eq i32* %index, null, !dbg !1096
  %or.cond3 = or i1 %or.cond, %5, !dbg !1095
  br i1 %or.cond3, label %7, label %.lr.ph, !dbg !1095

.lr.ph:                                           ; preds = %2
  %6 = add i32 %size, -1, !dbg !1097
  br label %10, !dbg !1097

; <label>:7                                       ; preds = %2
  %8 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1099, !tbaa !709
  %9 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %8, i8* getelementptr inbounds ([85 x i8]* @.str15, i64 0, i64 0), i32 %size, double* %y, double* %x, i32* %index) #7, !dbg !1101
  tail call void @exit(i32 -1) #8, !dbg !1102
  unreachable, !dbg !1102

; <label>:10                                      ; preds = %10, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %10 ]
  %11 = getelementptr inbounds i32* %index, i64 %indvars.iv, !dbg !1103
  %12 = load i32* %11, align 4, !dbg !1103, !tbaa !771
  tail call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !233, metadata !696), !dbg !1106
  %13 = sext i32 %12 to i64, !dbg !1107
  %14 = getelementptr inbounds double* %x, i64 %13, !dbg !1107
  %15 = bitcast double* %14 to i64*, !dbg !1107
  %16 = load i64* %15, align 8, !dbg !1107, !tbaa !718
  %17 = getelementptr inbounds double* %y, i64 %indvars.iv, !dbg !1108
  %18 = bitcast double* %17 to i64*, !dbg !1109
  store i64 %16, i64* %18, align 8, !dbg !1109, !tbaa !718
  store double 0.000000e+00, double* %14, align 8, !dbg !1110, !tbaa !718
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1097
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !1097
  %exitcond = icmp eq i32 %lftr.wideiv, %6, !dbg !1097
  br i1 %exitcond, label %.loopexit, label %10, !dbg !1097

.loopexit:                                        ; preds = %10, %0
  ret void, !dbg !1111
}
