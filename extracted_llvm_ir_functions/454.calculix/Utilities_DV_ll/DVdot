define double @DVdot(i32 %size, double* %y, double* %x) #0 {
  tail call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !80, metadata !696), !dbg !922
  tail call void @llvm.dbg.value(metadata double* %y, i64 0, metadata !81, metadata !696), !dbg !923
  tail call void @llvm.dbg.value(metadata double* %x, i64 0, metadata !82, metadata !696), !dbg !924
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !83, metadata !696), !dbg !925
  %1 = icmp sgt i32 %size, 0, !dbg !926
  br i1 %1, label %2, label %.loopexit, !dbg !927

; <label>:2                                       ; preds = %0
  %3 = icmp eq double* %y, null, !dbg !928
  %4 = icmp eq double* %x, null, !dbg !929
  %or.cond = or i1 %3, %4, !dbg !930
  br i1 %or.cond, label %6, label %.lr.ph, !dbg !930

.lr.ph:                                           ; preds = %2
  %5 = add i32 %size, -1, !dbg !931
  br label %9, !dbg !931

; <label>:6                                       ; preds = %2
  %7 = load %struct.__sFILE** @__stderrp, align 8, !dbg !933, !tbaa !709
  %8 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %7, i8* getelementptr inbounds ([65 x i8]* @.str5, i64 0, i64 0), i32 %size, double* %y, double* %x) #7, !dbg !935
  tail call void @exit(i32 -1) #8, !dbg !936
  unreachable, !dbg !936

; <label>:9                                       ; preds = %9, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %9 ]
  %sum.02 = phi double [ 0.000000e+00, %.lr.ph ], [ %15, %9 ]
  %10 = getelementptr inbounds double* %y, i64 %indvars.iv, !dbg !937
  %11 = load double* %10, align 8, !dbg !937, !tbaa !718
  %12 = getelementptr inbounds double* %x, i64 %indvars.iv, !dbg !940
  %13 = load double* %12, align 8, !dbg !940, !tbaa !718
  %14 = fmul double %11, %13, !dbg !941
  %15 = fadd double %sum.02, %14, !dbg !942
  tail call void @llvm.dbg.value(metadata double %15, i64 0, metadata !83, metadata !696), !dbg !925
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !931
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !931
  %exitcond = icmp eq i32 %lftr.wideiv, %5, !dbg !931
  br i1 %exitcond, label %.loopexit, label %9, !dbg !931

.loopexit:                                        ; preds = %9, %0
  %sum.1 = phi double [ 0.000000e+00, %0 ], [ %15, %9 ]
  ret double %sum.1, !dbg !943
}
