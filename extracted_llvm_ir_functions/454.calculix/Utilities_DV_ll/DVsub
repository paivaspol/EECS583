define void @DVsub(i32 %size, double* %y, double* %x) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %size}, i64 0, metadata !298), !dbg !1026
  tail call void @llvm.dbg.value(metadata !{double* %y}, i64 0, metadata !299), !dbg !1027
  tail call void @llvm.dbg.value(metadata !{double* %x}, i64 0, metadata !300), !dbg !1028
  %cmp = icmp sgt i32 %size, 0, !dbg !1029
  br i1 %cmp, label %if.then, label %if.end7, !dbg !1029

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq double* %y, null, !dbg !1030
  %cmp2 = icmp eq double* %x, null, !dbg !1030
  %or.cond = or i1 %cmp1, %cmp2, !dbg !1030
  br i1 %or.cond, label %if.then3, label %for.body, !dbg !1030

if.then3:                                         ; preds = %if.then
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !1031, !tbaa !629
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([65 x i8]* @.str26, i64 0, i64 0), i32 %size, double* %y, double* %x) #6, !dbg !1031
  tail call void @exit(i32 -1) #7, !dbg !1033
  unreachable, !dbg !1033

for.body:                                         ; preds = %if.then, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.then ]
  %arrayidx = getelementptr inbounds double* %x, i64 %indvars.iv, !dbg !1034
  %1 = load double* %arrayidx, align 8, !dbg !1034, !tbaa !635
  %arrayidx6 = getelementptr inbounds double* %y, i64 %indvars.iv, !dbg !1034
  %2 = load double* %arrayidx6, align 8, !dbg !1034, !tbaa !635
  %sub = fsub double %2, %1, !dbg !1034
  store double %sub, double* %arrayidx6, align 8, !dbg !1034, !tbaa !635
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1037
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !1037
  %exitcond = icmp eq i32 %lftr.wideiv, %size, !dbg !1037
  br i1 %exitcond, label %if.end7, label %for.body, !dbg !1037

if.end7:                                          ; preds = %for.body, %entry
  ret void, !dbg !1038
}
