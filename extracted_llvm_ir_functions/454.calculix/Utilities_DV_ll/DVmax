define double @DVmax(i32 %size, double* %y, i32* %ploc) #0 {
  tail call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !264, metadata !696), !dbg !1154
  tail call void @llvm.dbg.value(metadata double* %y, i64 0, metadata !265, metadata !696), !dbg !1155
  tail call void @llvm.dbg.value(metadata i32* %ploc, i64 0, metadata !266, metadata !696), !dbg !1156
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !267, metadata !696), !dbg !1157
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !268, metadata !696), !dbg !1158
  %1 = icmp sgt i32 %size, 0, !dbg !1159
  br i1 %1, label %2, label %16, !dbg !1160

; <label>:2                                       ; preds = %0
  %3 = icmp eq double* %y, null, !dbg !1161
  br i1 %3, label %4, label %7, !dbg !1162

; <label>:4                                       ; preds = %2
  %5 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1163, !tbaa !709
  %6 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %5, i8* getelementptr inbounds ([68 x i8]* @.str20, i64 0, i64 0), i32 %size, double* null, i32* %ploc) #7, !dbg !1165
  tail call void @exit(i32 -1) #8, !dbg !1166
  unreachable, !dbg !1166

; <label>:7                                       ; preds = %2
  %8 = load double* %y, align 8, !dbg !1167, !tbaa !718
  tail call void @llvm.dbg.value(metadata double %8, i64 0, metadata !267, metadata !696), !dbg !1157
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !268, metadata !696), !dbg !1158
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !269, metadata !696), !dbg !1168
  %9 = icmp sgt i32 %size, 1, !dbg !1169
  br i1 %9, label %.lr.ph, label %._crit_edge, !dbg !1172

.lr.ph:                                           ; preds = %7
  %10 = add i32 %size, -1, !dbg !1172
  br label %11, !dbg !1172

; <label>:11                                      ; preds = %11, %.lr.ph
  %indvars.iv = phi i64 [ 1, %.lr.ph ], [ %indvars.iv.next, %11 ]
  %loc.02 = phi i32 [ 0, %.lr.ph ], [ %loc.1, %11 ]
  %maxval.01 = phi double [ %8, %.lr.ph ], [ %maxval.1, %11 ]
  %12 = getelementptr inbounds double* %y, i64 %indvars.iv, !dbg !1173
  %13 = load double* %12, align 8, !dbg !1173, !tbaa !718
  %14 = fcmp olt double %maxval.01, %13, !dbg !1176
  tail call void @llvm.dbg.value(metadata double %13, i64 0, metadata !267, metadata !696), !dbg !1157
  %maxval.1 = select i1 %14, double %13, double %maxval.01, !dbg !1177
  %15 = trunc i64 %indvars.iv to i32, !dbg !1177
  %loc.1 = select i1 %14, i32 %15, i32 %loc.02, !dbg !1177
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1172
  %exitcond = icmp eq i32 %15, %10, !dbg !1172
  br i1 %exitcond, label %._crit_edge, label %11, !dbg !1172

._crit_edge:                                      ; preds = %11, %7
  %loc.0.lcssa = phi i32 [ 0, %7 ], [ %loc.1, %11 ]
  %maxval.0.lcssa = phi double [ %8, %7 ], [ %maxval.1, %11 ]
  store i32 %loc.0.lcssa, i32* %ploc, align 4, !dbg !1178, !tbaa !771
  br label %16, !dbg !1179

; <label>:16                                      ; preds = %._crit_edge, %0
  %maxval.2 = phi double [ %maxval.0.lcssa, %._crit_edge ], [ 0.000000e+00, %0 ]
  %loc.2 = phi i32 [ %loc.0.lcssa, %._crit_edge ], [ -1, %0 ]
  store i32 %loc.2, i32* %ploc, align 4, !dbg !1180, !tbaa !771
  ret double %maxval.2, !dbg !1181
}
