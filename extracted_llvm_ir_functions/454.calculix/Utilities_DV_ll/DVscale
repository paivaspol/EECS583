define void @DVscale(i32 %size, double* %y, double %alpha) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %size}, i64 0, metadata !306), !dbg !1039
  tail call void @llvm.dbg.value(metadata !{double* %y}, i64 0, metadata !307), !dbg !1040
  tail call void @llvm.dbg.value(metadata !{double %alpha}, i64 0, metadata !308), !dbg !1041
  %cmp = icmp sgt i32 %size, 0, !dbg !1042
  %cmp1 = fcmp une double %alpha, 1.000000e+00, !dbg !1042
  %or.cond = and i1 %cmp, %cmp1, !dbg !1042
  br i1 %or.cond, label %if.then, label %if.end5, !dbg !1042

if.then:                                          ; preds = %entry
  %cmp2 = icmp eq double* %y, null, !dbg !1043
  br i1 %cmp2, label %if.then3, label %for.body, !dbg !1043

if.then3:                                         ; preds = %if.then
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !1044, !tbaa !629
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([71 x i8]* @.str27, i64 0, i64 0), i32 %size, double* null, double %alpha) #6, !dbg !1044
  tail call void @exit(i32 -1) #7, !dbg !1046
  unreachable, !dbg !1046

for.body:                                         ; preds = %if.then, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.then ]
  %arrayidx = getelementptr inbounds double* %y, i64 %indvars.iv, !dbg !1047
  %1 = load double* %arrayidx, align 8, !dbg !1047, !tbaa !635
  %mul = fmul double %1, %alpha, !dbg !1047
  store double %mul, double* %arrayidx, align 8, !dbg !1047, !tbaa !635
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1050
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !1050
  %exitcond = icmp eq i32 %lftr.wideiv, %size, !dbg !1050
  br i1 %exitcond, label %if.end5, label %for.body, !dbg !1050

if.end5:                                          ; preds = %for.body, %entry
  ret void, !dbg !1051
}
