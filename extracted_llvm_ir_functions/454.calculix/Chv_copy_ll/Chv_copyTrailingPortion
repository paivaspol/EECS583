define void @Chv_copyTrailingPortion(%struct._Chv* %chvI, %struct._Chv* %chvJ, i32 %offset) #0 {
entry:
  %ncolI = alloca i32, align 4
  %ncolJ = alloca i32, align 4
  %nDJ = alloca i32, align 4
  %nLJ = alloca i32, align 4
  %nrowI = alloca i32, align 4
  %nrowJ = alloca i32, align 4
  %nUJ = alloca i32, align 4
  %colindI = alloca i32*, align 8
  %colindJ = alloca i32*, align 8
  %rowindI = alloca i32*, align 8
  %rowindJ = alloca i32*, align 8
  %cmp = icmp eq %struct._Chv* %chvI, null
  %cmp1 = icmp eq %struct._Chv* %chvJ, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([63 x i8]* @.str14, i64 0, i64 0), %struct._Chv* %chvI, %struct._Chv* %chvJ, i32 %offset) #5
  call void @exit(i32 -1) #6
  unreachable

if.end:                                           ; preds = %entry
  call void @Chv_dimensions(%struct._Chv* %chvJ, i32* %nDJ, i32* %nLJ, i32* %nUJ) #5
  %cmp2 = icmp sgt i32 %offset, -1
  %.pre = load i32* %nDJ, align 4, !tbaa !3
  %cmp4 = icmp sgt i32 %.pre, %offset
  %or.cond113 = and i1 %cmp2, %cmp4
  br i1 %or.cond113, label %if.end7, label %if.then5

if.then5:                                         ; preds = %if.end
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([75 x i8]* @.str15, i64 0, i64 0), %struct._Chv* %chvI, %struct._Chv* %chvJ, i32 %offset, i32 %.pre, i32 %offset) #5
  call void @exit(i32 -1) #6
  unreachable

if.end7:                                          ; preds = %if.end
  call void @Chv_columnIndices(%struct._Chv* %chvJ, i32* %ncolJ, i32** %colindJ) #5
  %symflag = getelementptr inbounds %struct._Chv* %chvJ, i64 0, i32 5
  %2 = load i32* %symflag, align 4, !tbaa !3
  %switch = icmp ult i32 %2, 2
  br i1 %switch, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.end7
  %id = getelementptr inbounds %struct._Chv* %chvJ, i64 0, i32 0
  %3 = load i32* %id, align 4, !tbaa !3
  %4 = load i32* %nDJ, align 4, !tbaa !3
  %sub = sub nsw i32 %4, %offset
  %5 = load i32* %nUJ, align 4, !tbaa !3
  %type = getelementptr inbounds %struct._Chv* %chvJ, i64 0, i32 4
  %6 = load i32* %type, align 4, !tbaa !3
  call void @Chv_init(%struct._Chv* %chvI, i32 %3, i32 %sub, i32 0, i32 %5, i32 %6, i32 %2) #5
  call void @Chv_columnIndices(%struct._Chv* %chvI, i32* %ncolI, i32** %colindI) #5
  %7 = load i32* %nDJ, align 4, !tbaa !3
  %8 = load i32* %nUJ, align 4, !tbaa !3
  %add = sub i32 %7, %offset
  %sub14 = add i32 %add, %8
  %9 = load i32** %colindI, align 8, !tbaa !0
  %10 = load i32** %colindJ, align 8, !tbaa !0
  %idx.ext = sext i32 %offset to i64
  %add.ptr = getelementptr inbounds i32* %10, i64 %idx.ext
  call void @IVcopy(i32 %sub14, i32* %9, i32* %add.ptr) #5
  %11 = load i32* %nDJ, align 4, !tbaa !3
  %12 = load i32* %nUJ, align 4, !tbaa !3
  %add15 = add nsw i32 %12, %11
  %mul = mul nsw i32 %add15, %offset
  %sub16 = add nsw i32 %offset, -1
  %mul17 = mul nsw i32 %sub16, %offset
  %div = sdiv i32 %mul17, 2
  %sub18 = sub nsw i32 %mul, %div
  %add19 = add nsw i32 %11, 1
  %mul20 = mul nsw i32 %add19, %11
  %div21 = sdiv i32 %mul20, 2
  %mul22 = mul nsw i32 %12, %11
  %add23 = add nsw i32 %div21, %mul22
  %sub24 = sub i32 %add23, %sub18
  br label %if.end46

if.else:                                          ; preds = %if.end7
  call void @Chv_rowIndices(%struct._Chv* %chvJ, i32* %nrowJ, i32** %rowindJ) #5
  %id25 = getelementptr inbounds %struct._Chv* %chvJ, i64 0, i32 0
  %13 = load i32* %id25, align 4, !tbaa !3
  %14 = load i32* %nDJ, align 4, !tbaa !3
  %sub26 = sub nsw i32 %14, %offset
  %15 = load i32* %nLJ, align 4, !tbaa !3
  %16 = load i32* %nUJ, align 4, !tbaa !3
  %type27 = getelementptr inbounds %struct._Chv* %chvJ, i64 0, i32 4
  %17 = load i32* %type27, align 4, !tbaa !3
  %18 = load i32* %symflag, align 4, !tbaa !3
  call void @Chv_init(%struct._Chv* %chvI, i32 %13, i32 %sub26, i32 %15, i32 %16, i32 %17, i32 %18) #5
  call void @Chv_columnIndices(%struct._Chv* %chvI, i32* %ncolI, i32** %colindI) #5
  %19 = load i32* %nDJ, align 4, !tbaa !3
  %20 = load i32* %nUJ, align 4, !tbaa !3
  %add29 = sub i32 %19, %offset
  %sub30 = add i32 %add29, %20
  %21 = load i32** %colindI, align 8, !tbaa !0
  %22 = load i32** %colindJ, align 8, !tbaa !0
  %idx.ext31 = sext i32 %offset to i64
  %add.ptr32 = getelementptr inbounds i32* %22, i64 %idx.ext31
  call void @IVcopy(i32 %sub30, i32* %21, i32* %add.ptr32) #5
  call void @Chv_rowIndices(%struct._Chv* %chvI, i32* %nrowI, i32** %rowindI) #5
  %23 = load i32* %nDJ, align 4, !tbaa !3
  %24 = load i32* %nLJ, align 4, !tbaa !3
  %add33 = sub i32 %23, %offset
  %sub34 = add i32 %add33, %24
  %25 = load i32** %rowindI, align 8, !tbaa !0
  %26 = load i32** %rowindJ, align 8, !tbaa !0
  %add.ptr36 = getelementptr inbounds i32* %26, i64 %idx.ext31
  call void @IVcopy(i32 %sub34, i32* %25, i32* %add.ptr36) #5
  %27 = load i32* %nDJ, align 4, !tbaa !3
  %mul37 = shl i32 %27, 1
  %28 = load i32* %nLJ, align 4, !tbaa !3
  %29 = load i32* %nUJ, align 4, !tbaa !3
  %add38 = sub i32 %28, %offset
  %add39 = add i32 %add38, %mul37
  %sub40 = add i32 %add39, %29
  %mul41 = mul nsw i32 %sub40, %offset
  %add42 = add nsw i32 %28, %27
  %add43 = add nsw i32 %add42, %29
  %mul44 = mul nsw i32 %add43, %27
  %sub45 = sub nsw i32 %mul44, %mul41
  br label %if.end46

if.end46:                                         ; preds = %if.else, %if.then12
  %first.0 = phi i32 [ %sub18, %if.then12 ], [ %mul41, %if.else ]
  %nentToCopy.0 = phi i32 [ %sub24, %if.then12 ], [ %sub45, %if.else ]
  %type47 = getelementptr inbounds %struct._Chv* %chvJ, i64 0, i32 4
  %30 = load i32* %type47, align 4, !tbaa !3
  switch i32 %30, label %if.end65 [
    i32 1, label %if.then49
    i32 2, label %if.then57
  ]

if.then49:                                        ; preds = %if.end46
  %call50 = call double* @Chv_entries(%struct._Chv* %chvI) #5
  %call51 = call double* @Chv_entries(%struct._Chv* %chvJ) #5
  %idx.ext52 = sext i32 %first.0 to i64
  %add.ptr53 = getelementptr inbounds double* %call51, i64 %idx.ext52
  call void @DVcopy(i32 %nentToCopy.0, double* %call50, double* %add.ptr53) #5
  br label %if.end65

if.then57:                                        ; preds = %if.end46
  %mul58 = shl nsw i32 %nentToCopy.0, 1
  %call59 = call double* @Chv_entries(%struct._Chv* %chvI) #5
  %call60 = call double* @Chv_entries(%struct._Chv* %chvJ) #5
  %mul61 = shl nsw i32 %first.0, 1
  %idx.ext62 = sext i32 %mul61 to i64
  %add.ptr63 = getelementptr inbounds double* %call60, i64 %idx.ext62
  call void @DVcopy(i32 %mul58, double* %call59, double* %add.ptr63) #5
  br label %if.end65

if.end65:                                         ; preds = %if.end46, %if.then57, %if.then49
  ret void
}
