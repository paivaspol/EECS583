define void @ZV_sizeAndEntries(%struct._ZV* %dv, i32* %psize, double** %pentries) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._ZV* %dv}, i64 0, metadata !55), !dbg !127
  tail call void @llvm.dbg.value(metadata !{i32* %psize}, i64 0, metadata !56), !dbg !128
  tail call void @llvm.dbg.value(metadata !{double** %pentries}, i64 0, metadata !57), !dbg !129
  %cmp = icmp eq %struct._ZV* %dv, null, !dbg !130
  %cmp1 = icmp eq i32* %psize, null, !dbg !130
  %or.cond = or i1 %cmp, %cmp1, !dbg !130
  %cmp3 = icmp eq double** %pentries, null, !dbg !130
  %or.cond11 = or i1 %or.cond, %cmp3, !dbg !130
  br i1 %or.cond11, label %if.then, label %if.end, !dbg !130

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !131, !tbaa !72
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([57 x i8]* @.str8, i64 0, i64 0), %struct._ZV* %dv, i32* %psize, double** %pentries) #5, !dbg !131
  tail call void @exit(i32 -1) #6, !dbg !133
  unreachable, !dbg !133

if.end:                                           ; preds = %entry
  %size = getelementptr inbounds %struct._ZV* %dv, i64 0, i32 0, !dbg !134
  %1 = load i32* %size, align 4, !dbg !134, !tbaa !77
  store i32 %1, i32* %psize, align 4, !dbg !134, !tbaa !77
  %vec = getelementptr inbounds %struct._ZV* %dv, i64 0, i32 3, !dbg !135
  %2 = load double** %vec, align 8, !dbg !135, !tbaa !72
  store double* %2, double** %pentries, align 8, !dbg !135, !tbaa !72
  ret void, !dbg !136
}
