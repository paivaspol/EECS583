define internal fastcc i32 @nonsym1x1(%struct._Chv* %chv, i32 %irow, i32 %jcol, double %tau, double* nocapture readonly %rowmaxes, double* nocapture readonly %colmaxes) #0 {
  %value = alloca double, align 8
  %imag = alloca double, align 8
  %real = alloca double, align 8
  tail call void @llvm.dbg.value(metadata %struct._Chv* %chv, i64 0, metadata !151, metadata !171), !dbg !671
  tail call void @llvm.dbg.value(metadata i32 %irow, i64 0, metadata !152, metadata !171), !dbg !672
  tail call void @llvm.dbg.value(metadata i32 %jcol, i64 0, metadata !153, metadata !171), !dbg !673
  tail call void @llvm.dbg.value(metadata double %tau, i64 0, metadata !154, metadata !171), !dbg !674
  tail call void @llvm.dbg.value(metadata double* %rowmaxes, i64 0, metadata !155, metadata !171), !dbg !675
  tail call void @llvm.dbg.value(metadata double* %colmaxes, i64 0, metadata !156, metadata !171), !dbg !676
  %1 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 4, !dbg !677
  %2 = load i32* %1, align 4, !dbg !677, !tbaa !198
  switch i32 %2, label %10 [
    i32 1, label %3
    i32 2, label %6
  ], !dbg !678

; <label>:3                                       ; preds = %0
  tail call void @llvm.dbg.value(metadata double* %value, i64 0, metadata !160, metadata !171), !dbg !679
  call void @Chv_realEntry(%struct._Chv* %chv, i32 %irow, i32 %jcol, double* %value) #7, !dbg !680
  call void @llvm.dbg.value(metadata double* %value, i64 0, metadata !160, metadata !171), !dbg !679
  %4 = load double* %value, align 8, !dbg !681, !tbaa !277
  %5 = call double @fabs(double %4) #9, !dbg !682
  call void @llvm.dbg.value(metadata double %5, i64 0, metadata !158, metadata !171), !dbg !683
  br label %10, !dbg !684

; <label>:6                                       ; preds = %0
  tail call void @llvm.dbg.value(metadata double* %imag, i64 0, metadata !163, metadata !171), !dbg !685
  tail call void @llvm.dbg.value(metadata double* %real, i64 0, metadata !166, metadata !171), !dbg !686
  call void @Chv_complexEntry(%struct._Chv* %chv, i32 %irow, i32 %jcol, double* %real, double* %imag) #7, !dbg !687
  call void @llvm.dbg.value(metadata double* %real, i64 0, metadata !166, metadata !171), !dbg !686
  %7 = load double* %real, align 8, !dbg !688, !tbaa !277
  call void @llvm.dbg.value(metadata double* %imag, i64 0, metadata !163, metadata !171), !dbg !685
  %8 = load double* %imag, align 8, !dbg !689, !tbaa !277
  %9 = call double @Zabs(double %7, double %8) #7, !dbg !690
  call void @llvm.dbg.value(metadata double %9, i64 0, metadata !158, metadata !171), !dbg !683
  br label %10, !dbg !691

; <label>:10                                      ; preds = %0, %6, %3
  %magn.0 = phi double [ %5, %3 ], [ %9, %6 ], [ undef, %0 ]
  %11 = fmul double %magn.0, %tau, !dbg !692
  call void @llvm.dbg.value(metadata double %11, i64 0, metadata !157, metadata !171), !dbg !693
  %12 = sext i32 %irow to i64, !dbg !694
  %13 = getelementptr inbounds double* %rowmaxes, i64 %12, !dbg !694
  %14 = load double* %13, align 8, !dbg !694, !tbaa !277
  %15 = fcmp ugt double %14, %11, !dbg !696
  br i1 %15, label %21, label %16, !dbg !697

; <label>:16                                      ; preds = %10
  %17 = sext i32 %jcol to i64, !dbg !698
  %18 = getelementptr inbounds double* %colmaxes, i64 %17, !dbg !698
  %19 = load double* %18, align 8, !dbg !698, !tbaa !277
  %20 = fcmp ugt double %19, %11, !dbg !699
  br i1 %20, label %21, label %22, !dbg !700

; <label>:21                                      ; preds = %16, %10
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !159, metadata !171), !dbg !701
  br label %22

; <label>:22                                      ; preds = %16, %21
  %rc.0 = phi i32 [ 0, %21 ], [ 1, %16 ]
  ret i32 %rc.0, !dbg !702
}
