define void @I2Ohash_insert(%struct._I2Ohash* %hashtable, i32 %key1, i32 %key2, i8* %value) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._I2Ohash* %hashtable}, i64 0, metadata !34), !dbg !80
  tail call void @llvm.dbg.value(metadata !{i32 %key1}, i64 0, metadata !35), !dbg !81
  tail call void @llvm.dbg.value(metadata !{i32 %key2}, i64 0, metadata !36), !dbg !82
  tail call void @llvm.dbg.value(metadata !{i8* %value}, i64 0, metadata !37), !dbg !83
  %cmp = icmp eq %struct._I2Ohash* %hashtable, null, !dbg !84
  br i1 %cmp, label %if.then, label %if.end, !dbg !84

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !85, !tbaa !87
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([60 x i8]* @.str, i64 0, i64 0), %struct._I2Ohash* null, i32 %key1, i32 %key2, i8* %value) #5, !dbg !85
  tail call void @exit(i32 -1) #6, !dbg !90
  unreachable, !dbg !90

if.end:                                           ; preds = %entry
  %add = add nsw i32 %key1, 1, !dbg !91
  %nlist = getelementptr inbounds %struct._I2Ohash* %hashtable, i64 0, i32 0, !dbg !91
  %1 = load i32* %nlist, align 4, !dbg !91, !tbaa !92
  %rem = srem i32 %add, %1, !dbg !91
  tail call void @llvm.dbg.value(metadata !{i32 %rem}, i64 0, metadata !39), !dbg !91
  %add1 = add nsw i32 %key2, 1, !dbg !93
  %rem3 = srem i32 %add1, %1, !dbg !93
  tail call void @llvm.dbg.value(metadata !{i32 %rem3}, i64 0, metadata !40), !dbg !93
  %mul = mul nsw i32 %rem3, %rem, !dbg !94
  %rem5 = srem i32 %mul, %1, !dbg !94
  tail call void @llvm.dbg.value(metadata !{i32 %rem5}, i64 0, metadata !38), !dbg !94
  %freeI2OP = getelementptr inbounds %struct._I2Ohash* %hashtable, i64 0, i32 4, !dbg !95
  %2 = load %struct._I2OP** %freeI2OP, align 8, !dbg !95, !tbaa !87
  tail call void @llvm.dbg.value(metadata !{%struct._I2OP* %2}, i64 0, metadata !41), !dbg !95
  %cmp6 = icmp eq %struct._I2OP* %2, null, !dbg !95
  br i1 %cmp6, label %if.then7, label %if.end18, !dbg !95

if.then7:                                         ; preds = %if.end
  %grow = getelementptr inbounds %struct._I2Ohash* %hashtable, i64 0, i32 1, !dbg !96
  %3 = load i32* %grow, align 4, !dbg !96, !tbaa !92
  %cmp8 = icmp slt i32 %3, 1, !dbg !96
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !96

if.then9:                                         ; preds = %if.then7
  %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !98, !tbaa !87
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([76 x i8]* @.str1, i64 0, i64 0), %struct._I2Ohash* %hashtable, i32 %key1, i32 %key2, i8* %value, i32 %3) #5, !dbg !98
  tail call void @exit(i32 -1) #6, !dbg !100
  unreachable, !dbg !100

if.end12:                                         ; preds = %if.then7
  %call14 = tail call %struct._I2OP* @I2OP_init(i32 %3, i32 1) #5, !dbg !101
  tail call void @llvm.dbg.value(metadata !{%struct._I2OP* %call14}, i64 0, metadata !41), !dbg !101
  %add.ptr = getelementptr inbounds %struct._I2OP* %call14, i64 1, !dbg !102
  store %struct._I2OP* %add.ptr, %struct._I2OP** %freeI2OP, align 8, !dbg !102, !tbaa !87
  %baseI2OP = getelementptr inbounds %struct._I2Ohash* %hashtable, i64 0, i32 3, !dbg !103
  %5 = load %struct._I2OP** %baseI2OP, align 8, !dbg !103, !tbaa !87
  %next = getelementptr inbounds %struct._I2OP* %call14, i64 0, i32 3, !dbg !103
  store %struct._I2OP* %5, %struct._I2OP** %next, align 8, !dbg !103, !tbaa !87
  store %struct._I2OP* %call14, %struct._I2OP** %baseI2OP, align 8, !dbg !104, !tbaa !87
  %6 = load %struct._I2OP** %freeI2OP, align 8, !dbg !105, !tbaa !87
  tail call void @llvm.dbg.value(metadata !{%struct._I2OP* %6}, i64 0, metadata !41), !dbg !105
  br label %if.end18, !dbg !106

if.end18:                                         ; preds = %if.end12, %if.end
  %i2op.0 = phi %struct._I2OP* [ %6, %if.end12 ], [ %2, %if.end ]
  %next19 = getelementptr inbounds %struct._I2OP* %i2op.0, i64 0, i32 3, !dbg !107
  %7 = load %struct._I2OP** %next19, align 8, !dbg !107, !tbaa !87
  store %struct._I2OP* %7, %struct._I2OP** %freeI2OP, align 8, !dbg !107, !tbaa !87
  %value0 = getelementptr inbounds %struct._I2OP* %i2op.0, i64 0, i32 0, !dbg !108
  store i32 %key1, i32* %value0, align 4, !dbg !108, !tbaa !92
  %value1 = getelementptr inbounds %struct._I2OP* %i2op.0, i64 0, i32 1, !dbg !109
  store i32 %key2, i32* %value1, align 4, !dbg !109, !tbaa !92
  %value2 = getelementptr inbounds %struct._I2OP* %i2op.0, i64 0, i32 2, !dbg !110
  store i8* %value, i8** %value2, align 8, !dbg !110, !tbaa !87
  store %struct._I2OP* null, %struct._I2OP** %next19, align 8, !dbg !111, !tbaa !87
  %idxprom = sext i32 %rem5 to i64, !dbg !112
  %heads = getelementptr inbounds %struct._I2Ohash* %hashtable, i64 0, i32 5, !dbg !112
  %8 = load %struct._I2OP*** %heads, align 8, !dbg !112, !tbaa !87
  %arrayidx = getelementptr inbounds %struct._I2OP** %8, i64 %idxprom, !dbg !112
  tail call void @llvm.dbg.value(metadata !114, i64 0, metadata !43), !dbg !112
  %j2op.085 = load %struct._I2OP** %arrayidx, align 8, !dbg !112
  %cmp2286 = icmp eq %struct._I2OP* %j2op.085, null, !dbg !112
  br i1 %cmp2286, label %if.then33, label %for.body, !dbg !112

for.body:                                         ; preds = %if.end18, %if.end30
  %j2op.088 = phi %struct._I2OP* [ %j2op.0, %if.end30 ], [ %j2op.085, %if.end18 ]
  %prev.087 = phi %struct._I2OP* [ %j2op.088, %if.end30 ], [ null, %if.end18 ]
  %value023 = getelementptr inbounds %struct._I2OP* %j2op.088, i64 0, i32 0, !dbg !115
  %9 = load i32* %value023, align 4, !dbg !115, !tbaa !92
  %cmp24 = icmp sgt i32 %9, %key1, !dbg !115
  br i1 %cmp24, label %for.end, label %lor.lhs.false, !dbg !115

lor.lhs.false:                                    ; preds = %for.body
  %cmp26 = icmp eq i32 %9, %key1, !dbg !115
  br i1 %cmp26, label %land.lhs.true, label %if.end30, !dbg !115

land.lhs.true:                                    ; preds = %lor.lhs.false
  %value127 = getelementptr inbounds %struct._I2OP* %j2op.088, i64 0, i32 1, !dbg !115
  %10 = load i32* %value127, align 4, !dbg !115, !tbaa !92
  %cmp28 = icmp slt i32 %10, %key2, !dbg !115
  br i1 %cmp28, label %if.end30, label %for.end, !dbg !115

if.end30:                                         ; preds = %land.lhs.true, %lor.lhs.false
  tail call void @llvm.dbg.value(metadata !{%struct._I2OP* %j2op.0.lcssa94}, i64 0, metadata !43), !dbg !117
  %next31 = getelementptr inbounds %struct._I2OP* %j2op.088, i64 0, i32 3, !dbg !118
  %j2op.0 = load %struct._I2OP** %next31, align 8, !dbg !112
  %cmp22 = icmp eq %struct._I2OP* %j2op.0, null, !dbg !112
  br i1 %cmp22, label %for.end, label %for.body, !dbg !112

for.end:                                          ; preds = %if.end30, %land.lhs.true, %for.body
  %j2op.0.lcssa = phi %struct._I2OP* [ %j2op.088, %for.body ], [ %j2op.088, %land.lhs.true ], [ null, %if.end30 ]
  %prev.0.lcssa = phi %struct._I2OP* [ %prev.087, %for.body ], [ %prev.087, %land.lhs.true ], [ %j2op.088, %if.end30 ]
  %cmp32 = icmp eq %struct._I2OP* %prev.0.lcssa, null, !dbg !119
  br i1 %cmp32, label %if.then33, label %if.else, !dbg !119

if.then33:                                        ; preds = %if.end18, %for.end
  %j2op.0.lcssa95 = phi %struct._I2OP* [ %j2op.0.lcssa, %for.end ], [ null, %if.end18 ]
  store %struct._I2OP* %i2op.0, %struct._I2OP** %arrayidx, align 8, !dbg !120, !tbaa !87
  br label %if.end38, !dbg !122

if.else:                                          ; preds = %for.end
  %next37 = getelementptr inbounds %struct._I2OP* %prev.0.lcssa, i64 0, i32 3, !dbg !123
  store %struct._I2OP* %i2op.0, %struct._I2OP** %next37, align 8, !dbg !123, !tbaa !87
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.then33
  %j2op.0.lcssa94 = phi %struct._I2OP* [ %j2op.0.lcssa, %if.else ], [ %j2op.0.lcssa95, %if.then33 ]
  store %struct._I2OP* %j2op.0.lcssa94, %struct._I2OP** %next19, align 8, !dbg !125, !tbaa !87
  %nitem = getelementptr inbounds %struct._I2Ohash* %hashtable, i64 0, i32 2, !dbg !126
  %11 = load i32* %nitem, align 4, !dbg !126, !tbaa !92
  %inc = add nsw i32 %11, 1, !dbg !126
  store i32 %inc, i32* %nitem, align 4, !dbg !126, !tbaa !92
  ret void, !dbg !127
}
