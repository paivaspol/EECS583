define %struct._IVL* @SymbFac_initFromInpMtx(%struct._ETree* %etree, %struct._InpMtx* %inpmtx) #0 {
entry:
  %size = alloca i32, align 4
  %adj = alloca i32*, align 8
  %cmp = icmp eq %struct._ETree* %etree, null
  br i1 %cmp, label %if.then.thread, label %lor.lhs.false

if.then.thread:                                   ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call246 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([59 x i8]* @.str1, i64 0, i64 0), %struct._ETree* null, %struct._InpMtx* %inpmtx) #4
  br label %if.end

lor.lhs.false:                                    ; preds = %entry
  %nfront1 = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 0
  %1 = load i32* %nfront1, align 4, !tbaa !3
  %cmp2 = icmp slt i32 %1, 1
  br i1 %cmp2, label %if.then.thread247, label %lor.lhs.false3

if.then.thread247:                                ; preds = %lor.lhs.false
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call248 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([59 x i8]* @.str1, i64 0, i64 0), %struct._ETree* %etree, %struct._InpMtx* %inpmtx) #4
  br label %if.then9

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %nvtx4 = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 1
  %3 = load i32* %nvtx4, align 4, !tbaa !3
  %cmp5 = icmp slt i32 %3, 1
  %cmp7 = icmp eq %struct._InpMtx* %inpmtx, null
  %or.cond = or i1 %cmp5, %cmp7
  br i1 %or.cond, label %if.then, label %if.end15

if.then:                                          ; preds = %lor.lhs.false3
  %4 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([59 x i8]* @.str1, i64 0, i64 0), %struct._ETree* %etree, %struct._InpMtx* %inpmtx) #4
  br label %if.then9

if.then9:                                         ; preds = %if.then, %if.then.thread247
  %5 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call10 = call i32 @ETree_writeStats(%struct._ETree* %etree, %struct._IO_FILE* %5) #4
  br label %if.end

if.end:                                           ; preds = %if.then.thread, %if.then9
  %cmp11 = icmp eq %struct._InpMtx* %inpmtx, null
  br i1 %cmp11, label %if.end14, label %if.then12

if.then12:                                        ; preds = %if.end
  %6 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call13 = call i32 @InpMtx_writeStats(%struct._InpMtx* %inpmtx, %struct._IO_FILE* %6) #4
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then12
  call void @exit(i32 -1) #5
  unreachable

if.end15:                                         ; preds = %lor.lhs.false3
  %coordType = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 0
  %7 = load i32* %coordType, align 4, !tbaa !3
  %cmp16 = icmp eq i32 %7, 3
  br i1 %cmp16, label %if.end20, label %if.then17

if.then17:                                        ; preds = %if.end15
  %8 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call18 = call i32 @InpMtx_coordType(%struct._InpMtx* %inpmtx) #4
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([96 x i8]* @.str2, i64 0, i64 0), i32 %call18) #4
  call void @exit(i32 -1) #5
  unreachable

if.end20:                                         ; preds = %if.end15
  %storageMode = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 1
  %9 = load i32* %storageMode, align 4, !tbaa !3
  %cmp21 = icmp eq i32 %9, 3
  br i1 %cmp21, label %if.end25, label %if.then22

if.then22:                                        ; preds = %if.end20
  %10 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call23 = call i32 @InpMtx_storageMode(%struct._InpMtx* %inpmtx) #4
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([97 x i8]* @.str3, i64 0, i64 0), i32 %call23) #4
  call void @exit(i32 -1) #5
  unreachable

if.end25:                                         ; preds = %if.end20
  %call26 = call i32 @InpMtx_nvector(%struct._InpMtx* %inpmtx) #4
  %call27 = call %struct._IVL* @IVL_new() #4
  call void @IVL_init1(%struct._IVL* %call27, i32 1, i32 %1) #4
  %call28 = call i32* @IVinit(i32 %3, i32 -1) #4
  %call29 = call i32* @IVinit(i32 %3, i32 -1) #4
  %call30 = call i32* @IVinit(i32 %3, i32 -1) #4
  %call31 = call i32* @IVinit(i32 %1, i32 -1) #4
  %call32 = call i32* @IVinit(i32 %3, i32 -1) #4
  %nodwghtsIV = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 3
  %11 = load %struct._IV** %nodwghtsIV, align 8, !tbaa !0
  %call33 = call i32* @IV_entries(%struct._IV* %11) #4
  %bndwghtsIV = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 4
  %12 = load %struct._IV** %bndwghtsIV, align 8, !tbaa !0
  %call34 = call i32* @IV_entries(%struct._IV* %12) #4
  %vtxToFrontIV = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 5
  %13 = load %struct._IV** %vtxToFrontIV, align 8, !tbaa !0
  %call35 = call i32* @IV_entries(%struct._IV* %13) #4
  %cmp36272 = icmp sgt i32 %3, 0
  br i1 %cmp36272, label %for.body, label %for.end

for.body:                                         ; preds = %if.end25, %for.body
  %indvars.iv281 = phi i64 [ %indvars.iv.next282, %for.body ], [ 0, %if.end25 ]
  %arrayidx = getelementptr inbounds i32* %call35, i64 %indvars.iv281
  %14 = load i32* %arrayidx, align 4, !tbaa !3
  %idxprom37 = sext i32 %14 to i64
  %arrayidx38 = getelementptr inbounds i32* %call31, i64 %idxprom37
  %15 = load i32* %arrayidx38, align 4, !tbaa !3
  %arrayidx40 = getelementptr inbounds i32* %call32, i64 %indvars.iv281
  store i32 %15, i32* %arrayidx40, align 4, !tbaa !3
  %16 = trunc i64 %indvars.iv281 to i32
  store i32 %16, i32* %arrayidx38, align 4, !tbaa !3
  %indvars.iv.next282 = add i64 %indvars.iv281, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next282 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %3
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end25
  %tree43 = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 2
  %17 = load %struct._Tree** %tree43, align 8, !tbaa !0
  %fch44 = getelementptr inbounds %struct._Tree* %17, i64 0, i32 3
  %18 = load i32** %fch44, align 8, !tbaa !0
  %sib45 = getelementptr inbounds %struct._Tree* %17, i64 0, i32 4
  %19 = load i32** %sib45, align 8, !tbaa !0
  %call46 = call i32 @Tree_postOTfirst(%struct._Tree* %17) #4
  %cmp48270 = icmp eq i32 %call46, -1
  br i1 %cmp48270, label %for.end145, label %for.body49

for.body49:                                       ; preds = %for.end, %for.end137
  %J.0271 = phi i32 [ %call144, %for.end137 ], [ %call46, %for.end ]
  %idxprom50 = sext i32 %J.0271 to i64
  %arrayidx51 = getelementptr inbounds i32* %call31, i64 %idxprom50
  %v.1249 = load i32* %arrayidx51, align 4
  %cmp53250 = icmp eq i32 %v.1249, -1
  br i1 %cmp53250, label %for.end63, label %for.body54

for.body54:                                       ; preds = %for.body49, %for.body54
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body54 ], [ 0, %for.body49 ]
  %v.1252 = phi i32 [ %v.1, %for.body54 ], [ %v.1249, %for.body49 ]
  %count.0251 = phi i32 [ %inc57, %for.body54 ], [ 0, %for.body49 ]
  %idxprom55 = sext i32 %v.1252 to i64
  %arrayidx56 = getelementptr inbounds i32* %call28, i64 %idxprom55
  store i32 %J.0271, i32* %arrayidx56, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %inc57 = add nsw i32 %count.0251, 1
  %arrayidx59 = getelementptr inbounds i32* %call30, i64 %indvars.iv
  store i32 %v.1252, i32* %arrayidx59, align 4, !tbaa !3
  %arrayidx62 = getelementptr inbounds i32* %call32, i64 %idxprom55
  %v.1 = load i32* %arrayidx62, align 4
  %cmp53 = icmp eq i32 %v.1, -1
  br i1 %cmp53, label %for.end63, label %for.body54

for.end63:                                        ; preds = %for.body54, %for.body49
  %count.0.lcssa = phi i32 [ 0, %for.body49 ], [ %inc57, %for.body54 ]
  %arrayidx65 = getelementptr inbounds i32* %18, i64 %idxprom50
  %I.0254 = load i32* %arrayidx65, align 4
  %cmp67255 = icmp eq i32 %I.0254, -1
  br i1 %cmp67255, label %for.cond98.loopexit, label %for.body68

for.body68:                                       ; preds = %for.end63, %for.inc91
  %I.0257 = phi i32 [ %I.0, %for.inc91 ], [ %I.0254, %for.end63 ]
  %count.1256 = phi i32 [ %count.2.ph, %for.inc91 ], [ %count.0.lcssa, %for.end63 ]
  call void @IVL_listAndSize(%struct._IVL* %call27, i32 %I.0257, i32* %size, i32** %adj) #4
  %20 = load i32* %size, align 4, !tbaa !3
  %21 = load i32** %adj, align 8, !tbaa !0
  %22 = sext i32 %count.1256 to i64
  br label %for.cond69.outer

for.cond69.outer:                                 ; preds = %if.then81, %for.body68
  %indvars.iv277 = phi i64 [ %indvars.iv.next278, %if.then81 ], [ %22, %for.body68 ]
  %ii.0.in.ph = phi i32 [ %ii.0, %if.then81 ], [ %20, %for.body68 ]
  %count.2.ph = phi i32 [ %inc84, %if.then81 ], [ %count.1256, %for.body68 ]
  %23 = sext i32 %ii.0.in.ph to i64
  br label %for.cond69

for.cond69:                                       ; preds = %for.cond69.outer, %if.then77
  %indvars.iv275 = phi i64 [ %23, %for.cond69.outer ], [ %indvars.iv.next276, %if.then77 ]
  %ii.0.in = phi i32 [ %ii.0.in.ph, %for.cond69.outer ], [ %ii.0, %if.then77 ]
  %indvars.iv.next276 = add i64 %indvars.iv275, -1
  %ii.0 = add nsw i32 %ii.0.in, -1
  %24 = trunc i64 %indvars.iv275 to i32
  %cmp70 = icmp sgt i32 %24, 0
  br i1 %cmp70, label %for.body71, label %for.inc91

for.body71:                                       ; preds = %for.cond69
  %arrayidx73 = getelementptr inbounds i32* %21, i64 %indvars.iv.next276
  %25 = load i32* %arrayidx73, align 4, !tbaa !3
  %idxprom74 = sext i32 %25 to i64
  %arrayidx75 = getelementptr inbounds i32* %call35, i64 %idxprom74
  %26 = load i32* %arrayidx75, align 4, !tbaa !3
  %cmp76 = icmp sgt i32 %26, %J.0271
  br i1 %cmp76, label %if.then77, label %for.inc91

if.then77:                                        ; preds = %for.body71
  %arrayidx79 = getelementptr inbounds i32* %call28, i64 %idxprom74
  %27 = load i32* %arrayidx79, align 4, !tbaa !3
  %cmp80 = icmp eq i32 %27, %J.0271
  br i1 %cmp80, label %for.cond69, label %if.then81

if.then81:                                        ; preds = %if.then77
  store i32 %J.0271, i32* %arrayidx79, align 4, !tbaa !3
  %indvars.iv.next278 = add i64 %indvars.iv277, 1
  %inc84 = add nsw i32 %count.2.ph, 1
  %arrayidx86 = getelementptr inbounds i32* %call30, i64 %indvars.iv277
  store i32 %25, i32* %arrayidx86, align 4, !tbaa !3
  br label %for.cond69.outer

for.inc91:                                        ; preds = %for.cond69, %for.body71
  %idxprom92 = sext i32 %I.0257 to i64
  %arrayidx93 = getelementptr inbounds i32* %19, i64 %idxprom92
  %I.0 = load i32* %arrayidx93, align 4
  %cmp67 = icmp eq i32 %I.0, -1
  br i1 %cmp67, label %for.cond98.loopexit, label %for.body68

for.cond98.loopexit:                              ; preds = %for.inc91, %for.end63
  %count.1.lcssa = phi i32 [ %count.0.lcssa, %for.end63 ], [ %count.2.ph, %for.inc91 ]
  %v.2263 = load i32* %arrayidx51, align 4
  %cmp99264 = icmp eq i32 %v.2263, -1
  br i1 %cmp99264, label %for.end137, label %for.body100

for.body100:                                      ; preds = %for.cond98.loopexit, %for.inc134
  %v.2266 = phi i32 [ %v.2, %for.inc134 ], [ %v.2263, %for.cond98.loopexit ]
  %count.4265 = phi i32 [ %count.7, %for.inc134 ], [ %count.1.lcssa, %for.cond98.loopexit ]
  %cmp101 = icmp slt i32 %v.2266, %call26
  br i1 %cmp101, label %if.then102, label %for.inc134

if.then102:                                       ; preds = %for.body100
  call void @InpMtx_vector(%struct._InpMtx* %inpmtx, i32 %v.2266, i32* %size, i32** %adj) #4
  %28 = load i32* %size, align 4, !tbaa !3
  %cmp104259 = icmp sgt i32 %28, 0
  br i1 %cmp104259, label %for.body105.lr.ph, label %for.inc134

for.body105.lr.ph:                                ; preds = %if.then102
  %29 = load i32** %adj, align 8, !tbaa !0
  br label %for.body105

for.body105:                                      ; preds = %for.body105.lr.ph, %for.inc130
  %30 = phi i32 [ %28, %for.body105.lr.ph ], [ %35, %for.inc130 ]
  %indvars.iv279 = phi i64 [ 0, %for.body105.lr.ph ], [ %indvars.iv.next280, %for.inc130 ]
  %count.5261 = phi i32 [ %count.4265, %for.body105.lr.ph ], [ %count.6, %for.inc130 ]
  %arrayidx107 = getelementptr inbounds i32* %29, i64 %indvars.iv279
  %31 = load i32* %arrayidx107, align 4, !tbaa !3
  %cmp108 = icmp sgt i32 %31, -1
  %32 = sub i32 0, %31
  %w.0.p = select i1 %cmp108, i32 %31, i32 %32
  %w.0 = add i32 %w.0.p, %v.2266
  %idxprom117 = sext i32 %w.0 to i64
  %arrayidx118 = getelementptr inbounds i32* %call35, i64 %idxprom117
  %33 = load i32* %arrayidx118, align 4, !tbaa !3
  %cmp119 = icmp sgt i32 %33, %J.0271
  br i1 %cmp119, label %land.lhs.true, label %for.inc130

land.lhs.true:                                    ; preds = %for.body105
  %arrayidx121 = getelementptr inbounds i32* %call28, i64 %idxprom117
  %34 = load i32* %arrayidx121, align 4, !tbaa !3
  %cmp122 = icmp eq i32 %34, %J.0271
  br i1 %cmp122, label %for.inc130, label %if.then123

if.then123:                                       ; preds = %land.lhs.true
  store i32 %J.0271, i32* %arrayidx121, align 4, !tbaa !3
  %inc126 = add nsw i32 %count.5261, 1
  %idxprom127 = sext i32 %count.5261 to i64
  %arrayidx128 = getelementptr inbounds i32* %call30, i64 %idxprom127
  store i32 %w.0, i32* %arrayidx128, align 4, !tbaa !3
  %.pre = load i32* %size, align 4, !tbaa !3
  br label %for.inc130

for.inc130:                                       ; preds = %land.lhs.true, %for.body105, %if.then123
  %35 = phi i32 [ %.pre, %if.then123 ], [ %30, %land.lhs.true ], [ %30, %for.body105 ]
  %count.6 = phi i32 [ %inc126, %if.then123 ], [ %count.5261, %land.lhs.true ], [ %count.5261, %for.body105 ]
  %indvars.iv.next280 = add i64 %indvars.iv279, 1
  %36 = trunc i64 %indvars.iv.next280 to i32
  %cmp104 = icmp slt i32 %36, %35
  br i1 %cmp104, label %for.body105, label %for.inc134

for.inc134:                                       ; preds = %if.then102, %for.inc130, %for.body100
  %count.7 = phi i32 [ %count.4265, %for.body100 ], [ %count.4265, %if.then102 ], [ %count.6, %for.inc130 ]
  %idxprom135 = sext i32 %v.2266 to i64
  %arrayidx136 = getelementptr inbounds i32* %call32, i64 %idxprom135
  %v.2 = load i32* %arrayidx136, align 4
  %cmp99 = icmp eq i32 %v.2, -1
  br i1 %cmp99, label %for.end137, label %for.body100

for.end137:                                       ; preds = %for.inc134, %for.cond98.loopexit
  %count.4.lcssa = phi i32 [ %count.1.lcssa, %for.cond98.loopexit ], [ %count.7, %for.inc134 ]
  %arrayidx139 = getelementptr inbounds i32* %call33, i64 %idxprom50
  store i32 %count.0.lcssa, i32* %arrayidx139, align 4, !tbaa !3
  %sub140 = sub nsw i32 %count.4.lcssa, %count.0.lcssa
  %arrayidx142 = getelementptr inbounds i32* %call34, i64 %idxprom50
  store i32 %sub140, i32* %arrayidx142, align 4, !tbaa !3
  call void @IVqsortUp(i32 %count.4.lcssa, i32* %call30) #4
  call void @IVL_setList(%struct._IVL* %call27, i32 %J.0271, i32 %count.4.lcssa, i32* %call30) #4
  %call144 = call i32 @Tree_postOTnext(%struct._Tree* %17, i32 %J.0271) #4
  %cmp48 = icmp eq i32 %call144, -1
  br i1 %cmp48, label %for.end145, label %for.body49

for.end145:                                       ; preds = %for.end137, %for.end
  call void @IVfree(i32* %call30) #4
  call void @IVfree(i32* %call28) #4
  call void @IVfree(i32* %call29) #4
  call void @IVfree(i32* %call31) #4
  call void @IVfree(i32* %call32) #4
  ret %struct._IVL* %call27
}
