define %struct._IVL* @SymbFac_initFromPencil(%struct._ETree* %etree, %struct._Pencil* %pencil) #0 {
entry:
  %size = alloca i32, align 4
  %adj = alloca i32*, align 8
  %cmp = icmp eq %struct._ETree* %etree, null
  br i1 %cmp, label %if.then.thread, label %lor.lhs.false

if.then.thread:                                   ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call331 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([59 x i8]* @.str4, i64 0, i64 0), %struct._ETree* null, %struct._Pencil* %pencil) #4
  br label %if.end

lor.lhs.false:                                    ; preds = %entry
  %nfront1 = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 0
  %1 = load i32* %nfront1, align 4, !tbaa !3
  %cmp2 = icmp slt i32 %1, 1
  br i1 %cmp2, label %if.then.thread332, label %lor.lhs.false3

if.then.thread332:                                ; preds = %lor.lhs.false
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call333 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([59 x i8]* @.str4, i64 0, i64 0), %struct._ETree* %etree, %struct._Pencil* %pencil) #4
  br label %if.then9

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %nvtx4 = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 1
  %3 = load i32* %nvtx4, align 4, !tbaa !3
  %cmp5 = icmp slt i32 %3, 1
  %cmp7 = icmp eq %struct._Pencil* %pencil, null
  %or.cond = or i1 %cmp5, %cmp7
  br i1 %or.cond, label %if.then, label %if.end15

if.then:                                          ; preds = %lor.lhs.false3
  %4 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([59 x i8]* @.str4, i64 0, i64 0), %struct._ETree* %etree, %struct._Pencil* %pencil) #4
  br label %if.then9

if.then9:                                         ; preds = %if.then, %if.then.thread332
  %5 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call10 = call i32 @ETree_writeStats(%struct._ETree* %etree, %struct._IO_FILE* %5) #4
  br label %if.end

if.end:                                           ; preds = %if.then.thread, %if.then9
  %cmp11 = icmp eq %struct._Pencil* %pencil, null
  br i1 %cmp11, label %if.end14, label %if.then12

if.then12:                                        ; preds = %if.end
  %6 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call13 = call i32 @Pencil_writeStats(%struct._Pencil* %pencil, %struct._IO_FILE* %6) #4
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then12
  call void @exit(i32 -1) #5
  unreachable

if.end15:                                         ; preds = %lor.lhs.false3
  %inpmtxA16 = getelementptr inbounds %struct._Pencil* %pencil, i64 0, i32 2
  %7 = load %struct._InpMtx** %inpmtxA16, align 8, !tbaa !0
  %inpmtxB17 = getelementptr inbounds %struct._Pencil* %pencil, i64 0, i32 3
  %8 = load %struct._InpMtx** %inpmtxB17, align 8, !tbaa !0
  %cmp18 = icmp ne %struct._InpMtx* %7, null
  br i1 %cmp18, label %if.then19, label %if.end31

if.then19:                                        ; preds = %if.end15
  %coordType = getelementptr inbounds %struct._InpMtx* %7, i64 0, i32 0
  %9 = load i32* %coordType, align 4, !tbaa !3
  %cmp20 = icmp eq i32 %9, 3
  br i1 %cmp20, label %if.end24, label %if.then21

if.then21:                                        ; preds = %if.then19
  %10 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call22 = call i32 @InpMtx_coordType(%struct._InpMtx* %7) #4
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([96 x i8]* @.str5, i64 0, i64 0), i32 %call22) #4
  call void @exit(i32 -1) #5
  unreachable

if.end24:                                         ; preds = %if.then19
  %storageMode = getelementptr inbounds %struct._InpMtx* %7, i64 0, i32 1
  %11 = load i32* %storageMode, align 4, !tbaa !3
  %cmp25 = icmp eq i32 %11, 3
  br i1 %cmp25, label %if.end29, label %if.then26

if.then26:                                        ; preds = %if.end24
  %12 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call27 = call i32 @InpMtx_storageMode(%struct._InpMtx* %7) #4
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([97 x i8]* @.str6, i64 0, i64 0), i32 %call27) #4
  call void @exit(i32 -1) #5
  unreachable

if.end29:                                         ; preds = %if.end24
  %call30 = call i32 @InpMtx_nvector(%struct._InpMtx* %7) #4
  br label %if.end31

if.end31:                                         ; preds = %if.end15, %if.end29
  %cmp32 = icmp ne %struct._InpMtx* %8, null
  br i1 %cmp32, label %if.then33, label %if.end48

if.then33:                                        ; preds = %if.end31
  %coordType34 = getelementptr inbounds %struct._InpMtx* %8, i64 0, i32 0
  %13 = load i32* %coordType34, align 4, !tbaa !3
  %cmp35 = icmp eq i32 %13, 3
  br i1 %cmp35, label %if.end39, label %if.then36

if.then36:                                        ; preds = %if.then33
  %14 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call37 = call i32 @InpMtx_coordType(%struct._InpMtx* %8) #4
  %call38 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([96 x i8]* @.str5, i64 0, i64 0), i32 %call37) #4
  call void @exit(i32 -1) #5
  unreachable

if.end39:                                         ; preds = %if.then33
  %storageMode40 = getelementptr inbounds %struct._InpMtx* %8, i64 0, i32 1
  %15 = load i32* %storageMode40, align 4, !tbaa !3
  %cmp41 = icmp eq i32 %15, 3
  br i1 %cmp41, label %if.end45, label %if.then42

if.then42:                                        ; preds = %if.end39
  %16 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call43 = call i32 @InpMtx_storageMode(%struct._InpMtx* %8) #4
  %call44 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([97 x i8]* @.str6, i64 0, i64 0), i32 %call43) #4
  call void @exit(i32 -1) #5
  unreachable

if.end45:                                         ; preds = %if.end39
  %call46 = call i32 @InpMtx_nvector(%struct._InpMtx* %8) #4
  br label %if.end48

if.end48:                                         ; preds = %if.end31, %if.end45
  %call49 = call %struct._IVL* @IVL_new() #4
  call void @IVL_init1(%struct._IVL* %call49, i32 1, i32 %1) #4
  %call50 = call i32* @IVinit(i32 %3, i32 -1) #4
  %call51 = call i32* @IVinit(i32 %3, i32 -1) #4
  %call52 = call i32* @IVinit(i32 %3, i32 -1) #4
  %call53 = call i32* @IVinit(i32 %1, i32 -1) #4
  %call54 = call i32* @IVinit(i32 %3, i32 -1) #4
  %nodwghtsIV = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 3
  %17 = load %struct._IV** %nodwghtsIV, align 8, !tbaa !0
  %call55 = call i32* @IV_entries(%struct._IV* %17) #4
  %bndwghtsIV = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 4
  %18 = load %struct._IV** %bndwghtsIV, align 8, !tbaa !0
  %call56 = call i32* @IV_entries(%struct._IV* %18) #4
  %vtxToFrontIV = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 5
  %19 = load %struct._IV** %vtxToFrontIV, align 8, !tbaa !0
  %call57 = call i32* @IV_entries(%struct._IV* %19) #4
  %cmp58361 = icmp sgt i32 %3, 0
  br i1 %cmp58361, label %for.body, label %for.end

for.body:                                         ; preds = %if.end48, %for.body
  %indvars.iv372 = phi i64 [ %indvars.iv.next373, %for.body ], [ 0, %if.end48 ]
  %arrayidx = getelementptr inbounds i32* %call57, i64 %indvars.iv372
  %20 = load i32* %arrayidx, align 4, !tbaa !3
  %idxprom59 = sext i32 %20 to i64
  %arrayidx60 = getelementptr inbounds i32* %call53, i64 %idxprom59
  %21 = load i32* %arrayidx60, align 4, !tbaa !3
  %arrayidx62 = getelementptr inbounds i32* %call54, i64 %indvars.iv372
  store i32 %21, i32* %arrayidx62, align 4, !tbaa !3
  %22 = trunc i64 %indvars.iv372 to i32
  store i32 %22, i32* %arrayidx60, align 4, !tbaa !3
  %indvars.iv.next373 = add i64 %indvars.iv372, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next373 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %3
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end48
  %tree65 = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 2
  %23 = load %struct._Tree** %tree65, align 8, !tbaa !0
  %fch66 = getelementptr inbounds %struct._Tree* %23, i64 0, i32 3
  %24 = load i32** %fch66, align 8, !tbaa !0
  %sib67 = getelementptr inbounds %struct._Tree* %23, i64 0, i32 4
  %25 = load i32** %sib67, align 8, !tbaa !0
  %call68 = call i32 @Tree_postOTfirst(%struct._Tree* %23) #4
  %cmp70359 = icmp eq i32 %call68, -1
  br i1 %cmp70359, label %for.end203, label %for.body71

for.body71:                                       ; preds = %for.end, %for.end195
  %J.0360 = phi i32 [ %call202, %for.end195 ], [ %call68, %for.end ]
  %idxprom72 = sext i32 %J.0360 to i64
  %arrayidx73 = getelementptr inbounds i32* %call53, i64 %idxprom72
  %v.1334 = load i32* %arrayidx73, align 4
  %cmp75335 = icmp eq i32 %v.1334, -1
  br i1 %cmp75335, label %for.end85, label %for.body76

for.body76:                                       ; preds = %for.body71, %for.body76
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body76 ], [ 0, %for.body71 ]
  %v.1337 = phi i32 [ %v.1, %for.body76 ], [ %v.1334, %for.body71 ]
  %count.0336 = phi i32 [ %inc79, %for.body76 ], [ 0, %for.body71 ]
  %idxprom77 = sext i32 %v.1337 to i64
  %arrayidx78 = getelementptr inbounds i32* %call50, i64 %idxprom77
  store i32 %J.0360, i32* %arrayidx78, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %inc79 = add nsw i32 %count.0336, 1
  %arrayidx81 = getelementptr inbounds i32* %call52, i64 %indvars.iv
  store i32 %v.1337, i32* %arrayidx81, align 4, !tbaa !3
  %arrayidx84 = getelementptr inbounds i32* %call54, i64 %idxprom77
  %v.1 = load i32* %arrayidx84, align 4
  %cmp75 = icmp eq i32 %v.1, -1
  br i1 %cmp75, label %for.end85, label %for.body76

for.end85:                                        ; preds = %for.body76, %for.body71
  %count.0.lcssa = phi i32 [ 0, %for.body71 ], [ %inc79, %for.body76 ]
  %arrayidx87 = getelementptr inbounds i32* %24, i64 %idxprom72
  %I.0339 = load i32* %arrayidx87, align 4
  %cmp89340 = icmp eq i32 %I.0339, -1
  br i1 %cmp89340, label %for.cond121.loopexit, label %for.body90

for.body90:                                       ; preds = %for.end85, %for.inc114
  %I.0342 = phi i32 [ %I.0, %for.inc114 ], [ %I.0339, %for.end85 ]
  %count.1341 = phi i32 [ %count.2.ph, %for.inc114 ], [ %count.0.lcssa, %for.end85 ]
  call void @IVL_listAndSize(%struct._IVL* %call49, i32 %I.0342, i32* %size, i32** %adj) #4
  %26 = load i32* %size, align 4, !tbaa !3
  %27 = load i32** %adj, align 8, !tbaa !0
  %28 = sext i32 %count.1341 to i64
  br label %for.cond91.outer

for.cond91.outer:                                 ; preds = %if.then103, %for.body90
  %indvars.iv366 = phi i64 [ %indvars.iv.next367, %if.then103 ], [ %28, %for.body90 ]
  %ii.0.in.ph = phi i32 [ %ii.0, %if.then103 ], [ %26, %for.body90 ]
  %count.2.ph = phi i32 [ %inc106, %if.then103 ], [ %count.1341, %for.body90 ]
  %29 = sext i32 %ii.0.in.ph to i64
  br label %for.cond91

for.cond91:                                       ; preds = %for.cond91.outer, %if.then99
  %indvars.iv364 = phi i64 [ %29, %for.cond91.outer ], [ %indvars.iv.next365, %if.then99 ]
  %ii.0.in = phi i32 [ %ii.0.in.ph, %for.cond91.outer ], [ %ii.0, %if.then99 ]
  %indvars.iv.next365 = add i64 %indvars.iv364, -1
  %ii.0 = add nsw i32 %ii.0.in, -1
  %30 = trunc i64 %indvars.iv364 to i32
  %cmp92 = icmp sgt i32 %30, 0
  br i1 %cmp92, label %for.body93, label %for.inc114

for.body93:                                       ; preds = %for.cond91
  %arrayidx95 = getelementptr inbounds i32* %27, i64 %indvars.iv.next365
  %31 = load i32* %arrayidx95, align 4, !tbaa !3
  %idxprom96 = sext i32 %31 to i64
  %arrayidx97 = getelementptr inbounds i32* %call57, i64 %idxprom96
  %32 = load i32* %arrayidx97, align 4, !tbaa !3
  %cmp98 = icmp sgt i32 %32, %J.0360
  br i1 %cmp98, label %if.then99, label %for.inc114

if.then99:                                        ; preds = %for.body93
  %arrayidx101 = getelementptr inbounds i32* %call50, i64 %idxprom96
  %33 = load i32* %arrayidx101, align 4, !tbaa !3
  %cmp102 = icmp eq i32 %33, %J.0360
  br i1 %cmp102, label %for.cond91, label %if.then103

if.then103:                                       ; preds = %if.then99
  store i32 %J.0360, i32* %arrayidx101, align 4, !tbaa !3
  %indvars.iv.next367 = add i64 %indvars.iv366, 1
  %inc106 = add nsw i32 %count.2.ph, 1
  %arrayidx108 = getelementptr inbounds i32* %call52, i64 %indvars.iv366
  store i32 %31, i32* %arrayidx108, align 4, !tbaa !3
  br label %for.cond91.outer

for.inc114:                                       ; preds = %for.cond91, %for.body93
  %idxprom115 = sext i32 %I.0342 to i64
  %arrayidx116 = getelementptr inbounds i32* %25, i64 %idxprom115
  %I.0 = load i32* %arrayidx116, align 4
  %cmp89 = icmp eq i32 %I.0, -1
  br i1 %cmp89, label %for.cond121.loopexit, label %for.body90

for.cond121.loopexit:                             ; preds = %for.inc114, %for.end85
  %count.1.lcssa = phi i32 [ %count.0.lcssa, %for.end85 ], [ %count.2.ph, %for.inc114 ]
  %v.2352 = load i32* %arrayidx73, align 4
  %cmp122353 = icmp eq i32 %v.2352, -1
  br i1 %cmp122353, label %for.end195, label %for.body123

for.body123:                                      ; preds = %for.cond121.loopexit, %for.inc192
  %v.2355 = phi i32 [ %v.2, %for.inc192 ], [ %v.2352, %for.cond121.loopexit ]
  %count.4354 = phi i32 [ %count.10, %for.inc192 ], [ %count.1.lcssa, %for.cond121.loopexit ]
  br i1 %cmp18, label %if.then125, label %if.end156

if.then125:                                       ; preds = %for.body123
  call void @InpMtx_vector(%struct._InpMtx* %7, i32 %v.2355, i32* %size, i32** %adj) #4
  %34 = load i32* %size, align 4, !tbaa !3
  %cmp127344 = icmp sgt i32 %34, 0
  br i1 %cmp127344, label %for.body128.lr.ph, label %if.end156

for.body128.lr.ph:                                ; preds = %if.then125
  %35 = load i32** %adj, align 8, !tbaa !0
  br label %for.body128

for.body128:                                      ; preds = %for.body128.lr.ph, %for.inc153
  %36 = phi i32 [ %34, %for.body128.lr.ph ], [ %41, %for.inc153 ]
  %indvars.iv368 = phi i64 [ 0, %for.body128.lr.ph ], [ %indvars.iv.next369, %for.inc153 ]
  %count.5346 = phi i32 [ %count.4354, %for.body128.lr.ph ], [ %count.6, %for.inc153 ]
  %arrayidx130 = getelementptr inbounds i32* %35, i64 %indvars.iv368
  %37 = load i32* %arrayidx130, align 4, !tbaa !3
  %cmp131 = icmp sgt i32 %37, -1
  %38 = sub i32 0, %37
  %w.0.p = select i1 %cmp131, i32 %37, i32 %38
  %w.0 = add i32 %w.0.p, %v.2355
  %idxprom140 = sext i32 %w.0 to i64
  %arrayidx141 = getelementptr inbounds i32* %call57, i64 %idxprom140
  %39 = load i32* %arrayidx141, align 4, !tbaa !3
  %cmp142 = icmp sgt i32 %39, %J.0360
  br i1 %cmp142, label %land.lhs.true, label %for.inc153

land.lhs.true:                                    ; preds = %for.body128
  %arrayidx144 = getelementptr inbounds i32* %call50, i64 %idxprom140
  %40 = load i32* %arrayidx144, align 4, !tbaa !3
  %cmp145 = icmp eq i32 %40, %J.0360
  br i1 %cmp145, label %for.inc153, label %if.then146

if.then146:                                       ; preds = %land.lhs.true
  store i32 %J.0360, i32* %arrayidx144, align 4, !tbaa !3
  %inc149 = add nsw i32 %count.5346, 1
  %idxprom150 = sext i32 %count.5346 to i64
  %arrayidx151 = getelementptr inbounds i32* %call52, i64 %idxprom150
  store i32 %w.0, i32* %arrayidx151, align 4, !tbaa !3
  %.pre = load i32* %size, align 4, !tbaa !3
  br label %for.inc153

for.inc153:                                       ; preds = %land.lhs.true, %for.body128, %if.then146
  %41 = phi i32 [ %.pre, %if.then146 ], [ %36, %land.lhs.true ], [ %36, %for.body128 ]
  %count.6 = phi i32 [ %inc149, %if.then146 ], [ %count.5346, %land.lhs.true ], [ %count.5346, %for.body128 ]
  %indvars.iv.next369 = add i64 %indvars.iv368, 1
  %42 = trunc i64 %indvars.iv.next369 to i32
  %cmp127 = icmp slt i32 %42, %41
  br i1 %cmp127, label %for.body128, label %if.end156

if.end156:                                        ; preds = %if.then125, %for.inc153, %for.body123
  %count.7 = phi i32 [ %count.4354, %for.body123 ], [ %count.4354, %if.then125 ], [ %count.6, %for.inc153 ]
  br i1 %cmp32, label %if.then158, label %for.inc192

if.then158:                                       ; preds = %if.end156
  call void @InpMtx_vector(%struct._InpMtx* %8, i32 %v.2355, i32* %size, i32** %adj) #4
  %43 = load i32* %size, align 4, !tbaa !3
  %cmp160348 = icmp sgt i32 %43, 0
  br i1 %cmp160348, label %for.body161.lr.ph, label %for.inc192

for.body161.lr.ph:                                ; preds = %if.then158
  %44 = load i32** %adj, align 8, !tbaa !0
  br label %for.body161

for.body161:                                      ; preds = %for.body161.lr.ph, %for.inc188
  %45 = phi i32 [ %43, %for.body161.lr.ph ], [ %50, %for.inc188 ]
  %indvars.iv370 = phi i64 [ 0, %for.body161.lr.ph ], [ %indvars.iv.next371, %for.inc188 ]
  %count.8350 = phi i32 [ %count.7, %for.body161.lr.ph ], [ %count.9, %for.inc188 ]
  %arrayidx163 = getelementptr inbounds i32* %44, i64 %indvars.iv370
  %46 = load i32* %arrayidx163, align 4, !tbaa !3
  %cmp164 = icmp sgt i32 %46, -1
  %47 = sub i32 0, %46
  %w.1.p = select i1 %cmp164, i32 %46, i32 %47
  %w.1 = add i32 %w.1.p, %v.2355
  %idxprom174 = sext i32 %w.1 to i64
  %arrayidx175 = getelementptr inbounds i32* %call57, i64 %idxprom174
  %48 = load i32* %arrayidx175, align 4, !tbaa !3
  %cmp176 = icmp sgt i32 %48, %J.0360
  br i1 %cmp176, label %land.lhs.true177, label %for.inc188

land.lhs.true177:                                 ; preds = %for.body161
  %arrayidx179 = getelementptr inbounds i32* %call50, i64 %idxprom174
  %49 = load i32* %arrayidx179, align 4, !tbaa !3
  %cmp180 = icmp eq i32 %49, %J.0360
  br i1 %cmp180, label %for.inc188, label %if.then181

if.then181:                                       ; preds = %land.lhs.true177
  store i32 %J.0360, i32* %arrayidx179, align 4, !tbaa !3
  %inc184 = add nsw i32 %count.8350, 1
  %idxprom185 = sext i32 %count.8350 to i64
  %arrayidx186 = getelementptr inbounds i32* %call52, i64 %idxprom185
  store i32 %w.1, i32* %arrayidx186, align 4, !tbaa !3
  %.pre374 = load i32* %size, align 4, !tbaa !3
  br label %for.inc188

for.inc188:                                       ; preds = %land.lhs.true177, %for.body161, %if.then181
  %50 = phi i32 [ %.pre374, %if.then181 ], [ %45, %land.lhs.true177 ], [ %45, %for.body161 ]
  %count.9 = phi i32 [ %inc184, %if.then181 ], [ %count.8350, %land.lhs.true177 ], [ %count.8350, %for.body161 ]
  %indvars.iv.next371 = add i64 %indvars.iv370, 1
  %51 = trunc i64 %indvars.iv.next371 to i32
  %cmp160 = icmp slt i32 %51, %50
  br i1 %cmp160, label %for.body161, label %for.inc192

for.inc192:                                       ; preds = %if.then158, %for.inc188, %if.end156
  %count.10 = phi i32 [ %count.7, %if.end156 ], [ %count.7, %if.then158 ], [ %count.9, %for.inc188 ]
  %idxprom193 = sext i32 %v.2355 to i64
  %arrayidx194 = getelementptr inbounds i32* %call54, i64 %idxprom193
  %v.2 = load i32* %arrayidx194, align 4
  %cmp122 = icmp eq i32 %v.2, -1
  br i1 %cmp122, label %for.end195, label %for.body123

for.end195:                                       ; preds = %for.inc192, %for.cond121.loopexit
  %count.4.lcssa = phi i32 [ %count.1.lcssa, %for.cond121.loopexit ], [ %count.10, %for.inc192 ]
  %arrayidx197 = getelementptr inbounds i32* %call55, i64 %idxprom72
  store i32 %count.0.lcssa, i32* %arrayidx197, align 4, !tbaa !3
  %sub198 = sub nsw i32 %count.4.lcssa, %count.0.lcssa
  %arrayidx200 = getelementptr inbounds i32* %call56, i64 %idxprom72
  store i32 %sub198, i32* %arrayidx200, align 4, !tbaa !3
  call void @IVqsortUp(i32 %count.4.lcssa, i32* %call52) #4
  call void @IVL_setList(%struct._IVL* %call49, i32 %J.0360, i32 %count.4.lcssa, i32* %call52) #4
  %call202 = call i32 @Tree_postOTnext(%struct._Tree* %23, i32 %J.0360) #4
  %cmp70 = icmp eq i32 %call202, -1
  br i1 %cmp70, label %for.end203, label %for.body71

for.end203:                                       ; preds = %for.end195, %for.end
  call void @IVfree(i32* %call52) #4
  call void @IVfree(i32* %call50) #4
  call void @IVfree(i32* %call51) #4
  call void @IVfree(i32* %call53) #4
  call void @IVfree(i32* %call54) #4
  ret %struct._IVL* %call49
}
