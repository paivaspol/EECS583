define i32 @FrontMtx_writeToBinaryFile(%struct._FrontMtx* %frontmtx, %struct._IO_FILE* %fp) #0 {
entry:
  %nadj = alloca i32, align 4
  %nmtx = alloca i32, align 4
  %adj = alloca i32*, align 8
  %itemp = alloca [10 x i32], align 16
  %0 = bitcast [10 x i32]* %itemp to i8*
  call void @llvm.lifetime.start(i64 40, i8* %0) #3
  %cmp = icmp eq %struct._FrontMtx* %frontmtx, null
  %cmp1 = icmp eq %struct._IO_FILE* %fp, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([63 x i8]* @.str50, i64 0, i64 0), %struct._FrontMtx* %frontmtx, %struct._IO_FILE* %fp) #6
  call void @exit(i32 -1) #9
  unreachable

if.end:                                           ; preds = %entry
  %nfront2 = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 0
  %2 = load i32* %nfront2, align 4, !tbaa !3
  %arrayidx = getelementptr inbounds [10 x i32]* %itemp, i64 0, i64 0
  store i32 %2, i32* %arrayidx, align 16, !tbaa !3
  %neqns = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 1
  %3 = load i32* %neqns, align 4, !tbaa !3
  %arrayidx3 = getelementptr inbounds [10 x i32]* %itemp, i64 0, i64 1
  store i32 %3, i32* %arrayidx3, align 4, !tbaa !3
  %type = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 2
  %4 = load i32* %type, align 4, !tbaa !3
  %arrayidx4 = getelementptr inbounds [10 x i32]* %itemp, i64 0, i64 2
  store i32 %4, i32* %arrayidx4, align 8, !tbaa !3
  %symmetryflag = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 3
  %5 = load i32* %symmetryflag, align 4, !tbaa !3
  %arrayidx5 = getelementptr inbounds [10 x i32]* %itemp, i64 0, i64 3
  store i32 %5, i32* %arrayidx5, align 4, !tbaa !3
  %pivotingflag = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 5
  %6 = load i32* %pivotingflag, align 4, !tbaa !3
  %arrayidx6 = getelementptr inbounds [10 x i32]* %itemp, i64 0, i64 4
  store i32 %6, i32* %arrayidx6, align 16, !tbaa !3
  %sparsityflag = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 4
  %7 = load i32* %sparsityflag, align 4, !tbaa !3
  %arrayidx7 = getelementptr inbounds [10 x i32]* %itemp, i64 0, i64 5
  store i32 %7, i32* %arrayidx7, align 4, !tbaa !3
  %dataMode = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 6
  %8 = load i32* %dataMode, align 4, !tbaa !3
  %arrayidx8 = getelementptr inbounds [10 x i32]* %itemp, i64 0, i64 6
  store i32 %8, i32* %arrayidx8, align 8, !tbaa !3
  %nentD = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 7
  %9 = load i32* %nentD, align 4, !tbaa !3
  %arrayidx9 = getelementptr inbounds [10 x i32]* %itemp, i64 0, i64 7
  store i32 %9, i32* %arrayidx9, align 4, !tbaa !3
  %nentL = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 8
  %10 = load i32* %nentL, align 4, !tbaa !3
  %arrayidx10 = getelementptr inbounds [10 x i32]* %itemp, i64 0, i64 8
  store i32 %10, i32* %arrayidx10, align 16, !tbaa !3
  %nentU = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 9
  %11 = load i32* %nentU, align 4, !tbaa !3
  %arrayidx11 = getelementptr inbounds [10 x i32]* %itemp, i64 0, i64 9
  store i32 %11, i32* %arrayidx11, align 4, !tbaa !3
  %call12 = call i64 @fwrite(i8* %0, i64 4, i64 10, %struct._IO_FILE* %fp) #6
  %conv = trunc i64 %call12 to i32
  %cmp13 = icmp slt i32 %conv, 0
  br i1 %cmp13, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end
  %12 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([88 x i8]* @.str51, i64 0, i64 0), %struct._FrontMtx* %frontmtx, %struct._IO_FILE* %fp, i32 %conv) #6
  br label %cleanup

if.end17:                                         ; preds = %if.end
  %frontETree = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 11
  %13 = load %struct._ETree** %frontETree, align 8, !tbaa !0
  %call18 = call i32 @ETree_writeToBinaryFile(%struct._ETree* %13, %struct._IO_FILE* %fp) #6
  %cmp19 = icmp eq i32 %call18, 1
  br i1 %cmp19, label %if.end23, label %if.then21

if.then21:                                        ; preds = %if.end17
  %14 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([88 x i8]* @.str52, i64 0, i64 0), %struct._FrontMtx* %frontmtx, %struct._IO_FILE* %fp, i32 %call18) #6
  br label %cleanup

if.end23:                                         ; preds = %if.end17
  %symbfacIVL = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 13
  %15 = load %struct._IVL** %symbfacIVL, align 8, !tbaa !0
  %call24 = call i32 @IVL_writeToBinaryFile(%struct._IVL* %15, %struct._IO_FILE* %fp) #6
  %cmp25 = icmp eq i32 %call24, 1
  br i1 %cmp25, label %if.end29, label %if.then27

if.then27:                                        ; preds = %if.end23
  %16 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([88 x i8]* @.str53, i64 0, i64 0), %struct._FrontMtx* %frontmtx, %struct._IO_FILE* %fp, i32 %call24) #6
  br label %cleanup

if.end29:                                         ; preds = %if.end23
  %17 = load i32* %pivotingflag, align 4, !tbaa !3
  %cmp31 = icmp eq i32 %17, 1
  br i1 %cmp31, label %if.then33, label %if.end62

if.then33:                                        ; preds = %if.end29
  %frontsizesIV = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 12
  %18 = load %struct._IV** %frontsizesIV, align 8, !tbaa !0
  %call34 = call i32 @IV_writeToBinaryFile(%struct._IV* %18, %struct._IO_FILE* %fp) #6
  %cmp35 = icmp eq i32 %call34, 1
  br i1 %cmp35, label %if.end40, label %if.then37

if.then37:                                        ; preds = %if.then33
  %19 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call38 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([90 x i8]* @.str54, i64 0, i64 0), %struct._FrontMtx* %frontmtx, %struct._IO_FILE* %fp, i32 %call34) #6
  br label %cleanup

if.end40:                                         ; preds = %if.then33
  %.pr = load i32* %pivotingflag, align 4, !tbaa !3
  %cmp42 = icmp eq i32 %.pr, 1
  br i1 %cmp42, label %if.then44, label %if.end62

if.then44:                                        ; preds = %if.end40
  %20 = load i32* %symmetryflag, align 4, !tbaa !3
  %cmp46 = icmp eq i32 %20, 2
  br i1 %cmp46, label %if.then48, label %if.end55

if.then48:                                        ; preds = %if.then44
  %rowadjIVL = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 14
  %21 = load %struct._IVL** %rowadjIVL, align 8, !tbaa !0
  %call49 = call i32 @IVL_writeToBinaryFile(%struct._IVL* %21, %struct._IO_FILE* %fp) #6
  %cmp50 = icmp eq i32 %call49, 1
  br i1 %cmp50, label %if.end55, label %if.then52

if.then52:                                        ; preds = %if.then48
  %22 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call53 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([87 x i8]* @.str55, i64 0, i64 0), %struct._FrontMtx* %frontmtx, %struct._IO_FILE* %fp, i32 %call49) #6
  br label %cleanup

if.end55:                                         ; preds = %if.then48, %if.then44
  %coladjIVL = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 15
  %23 = load %struct._IVL** %coladjIVL, align 8, !tbaa !0
  %call56 = call i32 @IVL_writeToBinaryFile(%struct._IVL* %23, %struct._IO_FILE* %fp) #6
  %cmp57 = icmp eq i32 %call56, 1
  br i1 %cmp57, label %if.end62, label %if.then59

if.then59:                                        ; preds = %if.end55
  %24 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call60 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([87 x i8]* @.str56, i64 0, i64 0), %struct._FrontMtx* %frontmtx, %struct._IO_FILE* %fp, i32 %call56) #6
  br label %cleanup

if.end62:                                         ; preds = %if.end29, %if.end55, %if.end40
  %25 = load i32* %dataMode, align 4, !tbaa !3
  %cmp64 = icmp eq i32 %25, 1
  %26 = load i32* %symmetryflag, align 4, !tbaa !3
  %cmp68 = icmp eq i32 %26, 2
  br i1 %cmp64, label %if.then66, label %if.else

if.then66:                                        ; preds = %if.end62
  br i1 %cmp68, label %if.then70, label %if.end122

if.then70:                                        ; preds = %if.then66
  store i32 0, i32* %nmtx, align 4, !tbaa !3
  %cmp71573 = icmp sgt i32 %2, 0
  br i1 %cmp71573, label %for.body, label %for.end.thread

for.end.thread:                                   ; preds = %if.then70
  %27 = bitcast i32* %nmtx to i8*
  %call79611 = call i64 @fwrite(i8* %27, i64 4, i64 1, %struct._IO_FILE* %fp) #6
  br label %for.end93.thread

for.body:                                         ; preds = %if.then70, %for.inc
  %J.0574 = phi i32 [ %inc78, %for.inc ], [ 0, %if.then70 ]
  %call73 = call %struct._SubMtx* @FrontMtx_lowerMtx(%struct._FrontMtx* %frontmtx, i32 %J.0574, i32 %J.0574) #6
  %cmp74 = icmp eq %struct._SubMtx* %call73, null
  br i1 %cmp74, label %for.inc, label %if.then76

if.then76:                                        ; preds = %for.body
  %28 = load i32* %nmtx, align 4, !tbaa !3
  %inc = add nsw i32 %28, 1
  store i32 %inc, i32* %nmtx, align 4, !tbaa !3
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then76
  %inc78 = add nsw i32 %J.0574, 1
  %exitcond604 = icmp eq i32 %inc78, %2
  br i1 %exitcond604, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %29 = bitcast i32* %nmtx to i8*
  %call79 = call i64 @fwrite(i8* %29, i64 4, i64 1, %struct._IO_FILE* %fp) #6
  br i1 %cmp71573, label %for.body84, label %for.end93.thread

for.body84:                                       ; preds = %for.end, %for.inc91
  %J.1572 = phi i32 [ %inc92, %for.inc91 ], [ 0, %for.end ]
  %call85 = call %struct._SubMtx* @FrontMtx_lowerMtx(%struct._FrontMtx* %frontmtx, i32 %J.1572, i32 %J.1572) #6
  %cmp86 = icmp eq %struct._SubMtx* %call85, null
  br i1 %cmp86, label %for.inc91, label %if.then88

if.then88:                                        ; preds = %for.body84
  %call89 = call i32 @SubMtx_writeToBinaryFile(%struct._SubMtx* %call85, %struct._IO_FILE* %fp) #6
  br label %for.inc91

for.inc91:                                        ; preds = %for.body84, %if.then88
  %inc92 = add nsw i32 %J.1572, 1
  %exitcond603 = icmp eq i32 %inc92, %2
  br i1 %exitcond603, label %for.end93, label %for.body84

for.end93.thread:                                 ; preds = %for.end.thread, %for.end
  %.ph = phi i8* [ %27, %for.end.thread ], [ %29, %for.end ]
  store i32 0, i32* %nmtx, align 4, !tbaa !3
  br label %for.end106

for.end93:                                        ; preds = %for.inc91
  store i32 0, i32* %nmtx, align 4, !tbaa !3
  br i1 %cmp71573, label %for.body97, label %for.end106.thread

for.end106.thread:                                ; preds = %for.end93
  %call107612 = call i64 @fwrite(i8* %29, i64 4, i64 1, %struct._IO_FILE* %fp) #6
  br label %for.end150.thread

for.body97:                                       ; preds = %for.end93, %for.inc104
  %J.2570 = phi i32 [ %inc105, %for.inc104 ], [ 0, %for.end93 ]
  %call98 = call %struct._SubMtx* @FrontMtx_lowerMtx(%struct._FrontMtx* %frontmtx, i32 %2, i32 %J.2570) #6
  %cmp99 = icmp eq %struct._SubMtx* %call98, null
  br i1 %cmp99, label %for.inc104, label %if.then101

if.then101:                                       ; preds = %for.body97
  %30 = load i32* %nmtx, align 4, !tbaa !3
  %inc102 = add nsw i32 %30, 1
  store i32 %inc102, i32* %nmtx, align 4, !tbaa !3
  br label %for.inc104

for.inc104:                                       ; preds = %for.body97, %if.then101
  %inc105 = add nsw i32 %J.2570, 1
  %exitcond602 = icmp eq i32 %inc105, %2
  br i1 %exitcond602, label %for.end106, label %for.body97

for.end106:                                       ; preds = %for.inc104, %for.end93.thread
  %31 = phi i8* [ %.ph, %for.end93.thread ], [ %29, %for.inc104 ]
  %call107 = call i64 @fwrite(i8* %31, i64 4, i64 1, %struct._IO_FILE* %fp) #6
  br i1 %cmp71573, label %for.body112, label %for.end150.thread

for.body112:                                      ; preds = %for.end106, %for.inc119
  %J.3568 = phi i32 [ %inc120, %for.inc119 ], [ 0, %for.end106 ]
  %call113 = call %struct._SubMtx* @FrontMtx_lowerMtx(%struct._FrontMtx* %frontmtx, i32 %2, i32 %J.3568) #6
  %cmp114 = icmp eq %struct._SubMtx* %call113, null
  br i1 %cmp114, label %for.inc119, label %if.then116

if.then116:                                       ; preds = %for.body112
  %call117 = call i32 @SubMtx_writeToBinaryFile(%struct._SubMtx* %call113, %struct._IO_FILE* %fp) #6
  br label %for.inc119

for.inc119:                                       ; preds = %for.body112, %if.then116
  %inc120 = add nsw i32 %J.3568, 1
  %exitcond601 = icmp eq i32 %inc120, %2
  br i1 %exitcond601, label %if.end122, label %for.body112

if.end122:                                        ; preds = %for.inc119, %if.then66
  store i32 0, i32* %nmtx, align 4, !tbaa !3
  %cmp124565 = icmp sgt i32 %2, 0
  br i1 %cmp124565, label %for.body126, label %for.end135.thread

for.end135.thread:                                ; preds = %if.end122
  %32 = bitcast i32* %nmtx to i8*
  %call136615 = call i64 @fwrite(i8* %32, i64 4, i64 1, %struct._IO_FILE* %fp) #6
  br label %for.end178.thread

for.body126:                                      ; preds = %if.end122, %for.inc133
  %J.4566 = phi i32 [ %inc134, %for.inc133 ], [ 0, %if.end122 ]
  %call127 = call %struct._SubMtx* @FrontMtx_diagMtx(%struct._FrontMtx* %frontmtx, i32 %J.4566) #6
  %cmp128 = icmp eq %struct._SubMtx* %call127, null
  br i1 %cmp128, label %for.inc133, label %if.then130

if.then130:                                       ; preds = %for.body126
  %33 = load i32* %nmtx, align 4, !tbaa !3
  %inc131 = add nsw i32 %33, 1
  store i32 %inc131, i32* %nmtx, align 4, !tbaa !3
  br label %for.inc133

for.inc133:                                       ; preds = %for.body126, %if.then130
  %inc134 = add nsw i32 %J.4566, 1
  %exitcond600 = icmp eq i32 %inc134, %2
  br i1 %exitcond600, label %for.end135, label %for.body126

for.end135:                                       ; preds = %for.inc133
  %34 = bitcast i32* %nmtx to i8*
  %call136 = call i64 @fwrite(i8* %34, i64 4, i64 1, %struct._IO_FILE* %fp) #6
  br i1 %cmp124565, label %for.body141, label %for.end178.thread

for.body141:                                      ; preds = %for.end135, %for.inc148
  %J.5564 = phi i32 [ %inc149, %for.inc148 ], [ 0, %for.end135 ]
  %call142 = call %struct._SubMtx* @FrontMtx_diagMtx(%struct._FrontMtx* %frontmtx, i32 %J.5564) #6
  %cmp143 = icmp eq %struct._SubMtx* %call142, null
  br i1 %cmp143, label %for.inc148, label %if.then145

if.then145:                                       ; preds = %for.body141
  %call146 = call i32 @SubMtx_writeToBinaryFile(%struct._SubMtx* %call142, %struct._IO_FILE* %fp) #6
  br label %for.inc148

for.inc148:                                       ; preds = %for.body141, %if.then145
  %inc149 = add nsw i32 %J.5564, 1
  %exitcond599 = icmp eq i32 %inc149, %2
  br i1 %exitcond599, label %for.end150, label %for.body141

for.end150.thread:                                ; preds = %for.end106.thread, %for.end106
  store i32 0, i32* %nmtx, align 4, !tbaa !3
  %35 = bitcast i32* %nmtx to i8*
  %call136617 = call i64 @fwrite(i8* %35, i64 4, i64 1, %struct._IO_FILE* %fp) #6
  store i32 0, i32* %nmtx, align 4, !tbaa !3
  %call164623 = call i64 @fwrite(i8* %35, i64 4, i64 1, %struct._IO_FILE* %fp) #6
  store i32 0, i32* %nmtx, align 4, !tbaa !3
  %call192628633 = call i64 @fwrite(i8* %35, i64 4, i64 1, %struct._IO_FILE* %fp) #6
  br label %cleanup

for.end150:                                       ; preds = %for.inc148
  store i32 0, i32* %nmtx, align 4, !tbaa !3
  br label %for.body154

for.body154:                                      ; preds = %for.end150, %for.inc161
  %J.6562 = phi i32 [ %inc162, %for.inc161 ], [ 0, %for.end150 ]
  %call155 = call %struct._SubMtx* @FrontMtx_upperMtx(%struct._FrontMtx* %frontmtx, i32 %J.6562, i32 %J.6562) #6
  %cmp156 = icmp eq %struct._SubMtx* %call155, null
  br i1 %cmp156, label %for.inc161, label %if.then158

if.then158:                                       ; preds = %for.body154
  %36 = load i32* %nmtx, align 4, !tbaa !3
  %inc159 = add nsw i32 %36, 1
  store i32 %inc159, i32* %nmtx, align 4, !tbaa !3
  br label %for.inc161

for.inc161:                                       ; preds = %for.body154, %if.then158
  %inc162 = add nsw i32 %J.6562, 1
  %exitcond598 = icmp eq i32 %inc162, %2
  br i1 %exitcond598, label %for.end163, label %for.body154

for.end163:                                       ; preds = %for.inc161
  %call164 = call i64 @fwrite(i8* %34, i64 4, i64 1, %struct._IO_FILE* %fp) #6
  br label %for.body169

for.body169:                                      ; preds = %for.inc176, %for.end163
  %J.7560 = phi i32 [ 0, %for.end163 ], [ %inc177, %for.inc176 ]
  %call170 = call %struct._SubMtx* @FrontMtx_upperMtx(%struct._FrontMtx* %frontmtx, i32 %J.7560, i32 %J.7560) #6
  %cmp171 = icmp eq %struct._SubMtx* %call170, null
  br i1 %cmp171, label %for.inc176, label %if.then173

if.then173:                                       ; preds = %for.body169
  %call174 = call i32 @SubMtx_writeToBinaryFile(%struct._SubMtx* %call170, %struct._IO_FILE* %fp) #6
  br label %for.inc176

for.inc176:                                       ; preds = %for.body169, %if.then173
  %inc177 = add nsw i32 %J.7560, 1
  %exitcond597 = icmp eq i32 %inc177, %2
  br i1 %exitcond597, label %for.end178, label %for.body169

for.end178.thread:                                ; preds = %for.end135.thread, %for.end135
  %.ph619.ph = phi i8* [ %32, %for.end135.thread ], [ %34, %for.end135 ]
  store i32 0, i32* %nmtx, align 4, !tbaa !3
  %call164623631 = call i64 @fwrite(i8* %.ph619.ph, i64 4, i64 1, %struct._IO_FILE* %fp) #6
  store i32 0, i32* %nmtx, align 4, !tbaa !3
  %call192628 = call i64 @fwrite(i8* %.ph619.ph, i64 4, i64 1, %struct._IO_FILE* %fp) #6
  br label %cleanup

for.end178:                                       ; preds = %for.inc176
  store i32 0, i32* %nmtx, align 4, !tbaa !3
  br label %for.body182

for.body182:                                      ; preds = %for.end178, %for.inc189
  %J.8558 = phi i32 [ %inc190, %for.inc189 ], [ 0, %for.end178 ]
  %call183 = call %struct._SubMtx* @FrontMtx_upperMtx(%struct._FrontMtx* %frontmtx, i32 %J.8558, i32 %2) #6
  %cmp184 = icmp eq %struct._SubMtx* %call183, null
  br i1 %cmp184, label %for.inc189, label %if.then186

if.then186:                                       ; preds = %for.body182
  %37 = load i32* %nmtx, align 4, !tbaa !3
  %inc187 = add nsw i32 %37, 1
  store i32 %inc187, i32* %nmtx, align 4, !tbaa !3
  br label %for.inc189

for.inc189:                                       ; preds = %for.body182, %if.then186
  %inc190 = add nsw i32 %J.8558, 1
  %exitcond596 = icmp eq i32 %inc190, %2
  br i1 %exitcond596, label %for.end191, label %for.body182

for.end191:                                       ; preds = %for.inc189
  %call192 = call i64 @fwrite(i8* %34, i64 4, i64 1, %struct._IO_FILE* %fp) #6
  br label %for.body197

for.body197:                                      ; preds = %for.end191, %for.inc204
  %J.9556 = phi i32 [ %inc205, %for.inc204 ], [ 0, %for.end191 ]
  %call198 = call %struct._SubMtx* @FrontMtx_upperMtx(%struct._FrontMtx* %frontmtx, i32 %J.9556, i32 %2) #6
  %cmp199 = icmp eq %struct._SubMtx* %call198, null
  br i1 %cmp199, label %for.inc204, label %if.then201

if.then201:                                       ; preds = %for.body197
  %call202 = call i32 @SubMtx_writeToBinaryFile(%struct._SubMtx* %call198, %struct._IO_FILE* %fp) #6
  br label %for.inc204

for.inc204:                                       ; preds = %for.body197, %if.then201
  %inc205 = add nsw i32 %J.9556, 1
  %exitcond = icmp eq i32 %inc205, %2
  br i1 %exitcond, label %cleanup, label %for.body197

if.else:                                          ; preds = %if.end62
  br i1 %cmp68, label %if.then210, label %if.end217

if.then210:                                       ; preds = %if.else
  %lowerblockIVL = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 16
  %38 = load %struct._IVL** %lowerblockIVL, align 8, !tbaa !0
  %call211 = call i32 @IVL_writeToBinaryFile(%struct._IVL* %38, %struct._IO_FILE* %fp) #6
  %cmp212 = icmp eq i32 %call211, 1
  br i1 %cmp212, label %if.end217, label %if.then214

if.then214:                                       ; preds = %if.then210
  %39 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call215 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([91 x i8]* @.str57, i64 0, i64 0), %struct._FrontMtx* %frontmtx, %struct._IO_FILE* %fp, i32 %call211) #6
  br label %cleanup

if.end217:                                        ; preds = %if.then210, %if.else
  %upperblockIVL = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 17
  %40 = load %struct._IVL** %upperblockIVL, align 8, !tbaa !0
  %call218 = call i32 @IVL_writeToBinaryFile(%struct._IVL* %40, %struct._IO_FILE* %fp) #6
  %cmp219 = icmp eq i32 %call218, 1
  br i1 %cmp219, label %if.end223, label %if.then221

if.then221:                                       ; preds = %if.end217
  %41 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call222 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([91 x i8]* @.str58, i64 0, i64 0), %struct._FrontMtx* %frontmtx, %struct._IO_FILE* %fp, i32 %call218) #6
  br label %cleanup

if.end223:                                        ; preds = %if.end217
  %42 = load i32* %symmetryflag, align 4, !tbaa !3
  %cmp225 = icmp eq i32 %42, 2
  br i1 %cmp225, label %if.then227, label %if.end223.if.end277_crit_edge

if.end223.if.end277_crit_edge:                    ; preds = %if.end223
  %.pre = load i32* %nfront2, align 4, !tbaa !3
  br label %if.end277

if.then227:                                       ; preds = %if.end223
  store i32 0, i32* %nmtx, align 4, !tbaa !3
  %43 = load i32* %nfront2, align 4, !tbaa !3
  %cmp230594 = icmp sgt i32 %43, 0
  br i1 %cmp230594, label %for.body232.lr.ph, label %for.end250

for.body232.lr.ph:                                ; preds = %if.then227
  %lowerblockIVL233 = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 16
  br label %for.body232

for.body232:                                      ; preds = %for.body232.lr.ph, %for.inc248
  %J.10595 = phi i32 [ 0, %for.body232.lr.ph ], [ %inc249, %for.inc248 ]
  %44 = load %struct._IVL** %lowerblockIVL233, align 8, !tbaa !0
  call void @IVL_listAndSize(%struct._IVL* %44, i32 %J.10595, i32* %nadj, i32** %adj) #6
  %45 = load i32* %nadj, align 4, !tbaa !3
  %cmp235592 = icmp sgt i32 %45, 0
  br i1 %cmp235592, label %for.body237, label %for.inc248

for.body237:                                      ; preds = %for.body232, %for.inc245
  %indvars.iv609 = phi i64 [ %indvars.iv.next610, %for.inc245 ], [ 0, %for.body232 ]
  %46 = load i32** %adj, align 8, !tbaa !0
  %arrayidx238 = getelementptr inbounds i32* %46, i64 %indvars.iv609
  %47 = load i32* %arrayidx238, align 4, !tbaa !3
  %call239 = call %struct._SubMtx* @FrontMtx_lowerMtx(%struct._FrontMtx* %frontmtx, i32 %47, i32 %J.10595) #6
  %cmp240 = icmp eq %struct._SubMtx* %call239, null
  br i1 %cmp240, label %for.inc245, label %if.then242

if.then242:                                       ; preds = %for.body237
  %48 = load i32* %nmtx, align 4, !tbaa !3
  %inc243 = add nsw i32 %48, 1
  store i32 %inc243, i32* %nmtx, align 4, !tbaa !3
  br label %for.inc245

for.inc245:                                       ; preds = %for.body237, %if.then242
  %indvars.iv.next610 = add i64 %indvars.iv609, 1
  %49 = load i32* %nadj, align 4, !tbaa !3
  %50 = trunc i64 %indvars.iv.next610 to i32
  %cmp235 = icmp slt i32 %50, %49
  br i1 %cmp235, label %for.body237, label %for.inc248

for.inc248:                                       ; preds = %for.inc245, %for.body232
  %inc249 = add nsw i32 %J.10595, 1
  %51 = load i32* %nfront2, align 4, !tbaa !3
  %cmp230 = icmp slt i32 %inc249, %51
  br i1 %cmp230, label %for.body232, label %for.end250

for.end250:                                       ; preds = %for.inc248, %if.then227
  %52 = bitcast i32* %nmtx to i8*
  %call251 = call i64 @fwrite(i8* %52, i64 4, i64 1, %struct._IO_FILE* %fp) #6
  %53 = load i32* %nfront2, align 4, !tbaa !3
  %cmp255590 = icmp sgt i32 %53, 0
  br i1 %cmp255590, label %for.body257.lr.ph, label %if.end277.thread

if.end277.thread:                                 ; preds = %for.end250
  store i32 0, i32* %nmtx, align 4, !tbaa !3
  br label %for.end291

for.body257.lr.ph:                                ; preds = %for.end250
  %lowerblockIVL258 = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 16
  br label %for.body257

for.body257:                                      ; preds = %for.body257.lr.ph, %for.inc274
  %J.11591 = phi i32 [ 0, %for.body257.lr.ph ], [ %inc275, %for.inc274 ]
  %54 = load %struct._IVL** %lowerblockIVL258, align 8, !tbaa !0
  call void @IVL_listAndSize(%struct._IVL* %54, i32 %J.11591, i32* %nadj, i32** %adj) #6
  %55 = load i32* %nadj, align 4, !tbaa !3
  %cmp260588 = icmp sgt i32 %55, 0
  br i1 %cmp260588, label %for.body262, label %for.inc274

for.body262:                                      ; preds = %for.body257, %for.inc271
  %indvars.iv607 = phi i64 [ %indvars.iv.next608, %for.inc271 ], [ 0, %for.body257 ]
  %56 = load i32** %adj, align 8, !tbaa !0
  %arrayidx264 = getelementptr inbounds i32* %56, i64 %indvars.iv607
  %57 = load i32* %arrayidx264, align 4, !tbaa !3
  %call265 = call %struct._SubMtx* @FrontMtx_lowerMtx(%struct._FrontMtx* %frontmtx, i32 %57, i32 %J.11591) #6
  %cmp266 = icmp eq %struct._SubMtx* %call265, null
  br i1 %cmp266, label %for.inc271, label %if.then268

if.then268:                                       ; preds = %for.body262
  %call269 = call i32 @SubMtx_writeToBinaryFile(%struct._SubMtx* %call265, %struct._IO_FILE* %fp) #6
  br label %for.inc271

for.inc271:                                       ; preds = %for.body262, %if.then268
  %indvars.iv.next608 = add i64 %indvars.iv607, 1
  %58 = load i32* %nadj, align 4, !tbaa !3
  %59 = trunc i64 %indvars.iv.next608 to i32
  %cmp260 = icmp slt i32 %59, %58
  br i1 %cmp260, label %for.body262, label %for.inc274

for.inc274:                                       ; preds = %for.inc271, %for.body257
  %inc275 = add nsw i32 %J.11591, 1
  %60 = load i32* %nfront2, align 4, !tbaa !3
  %cmp255 = icmp slt i32 %inc275, %60
  br i1 %cmp255, label %for.body257, label %if.end277

if.end277:                                        ; preds = %for.inc274, %if.end223.if.end277_crit_edge
  %61 = phi i32 [ %.pre, %if.end223.if.end277_crit_edge ], [ %60, %for.inc274 ]
  store i32 0, i32* %nmtx, align 4, !tbaa !3
  %cmp280586 = icmp sgt i32 %61, 0
  br i1 %cmp280586, label %for.body282, label %for.end291

for.body282:                                      ; preds = %if.end277, %for.inc289
  %J.12587 = phi i32 [ %inc290, %for.inc289 ], [ 0, %if.end277 ]
  %call283 = call %struct._SubMtx* @FrontMtx_diagMtx(%struct._FrontMtx* %frontmtx, i32 %J.12587) #6
  %cmp284 = icmp eq %struct._SubMtx* %call283, null
  br i1 %cmp284, label %for.inc289, label %if.then286

if.then286:                                       ; preds = %for.body282
  %62 = load i32* %nmtx, align 4, !tbaa !3
  %inc287 = add nsw i32 %62, 1
  store i32 %inc287, i32* %nmtx, align 4, !tbaa !3
  br label %for.inc289

for.inc289:                                       ; preds = %for.body282, %if.then286
  %inc290 = add nsw i32 %J.12587, 1
  %63 = load i32* %nfront2, align 4, !tbaa !3
  %cmp280 = icmp slt i32 %inc290, %63
  br i1 %cmp280, label %for.body282, label %for.end291

for.end291:                                       ; preds = %for.inc289, %if.end277.thread, %if.end277
  %64 = bitcast i32* %nmtx to i8*
  %call292 = call i64 @fwrite(i8* %64, i64 4, i64 1, %struct._IO_FILE* %fp) #6
  %65 = load i32* %nfront2, align 4, !tbaa !3
  %cmp296584 = icmp sgt i32 %65, 0
  br i1 %cmp296584, label %for.body298, label %for.end307.thread

for.end307.thread:                                ; preds = %for.end291
  store i32 0, i32* %nmtx, align 4, !tbaa !3
  br label %for.end331

for.body298:                                      ; preds = %for.end291, %for.inc305
  %J.13585 = phi i32 [ %inc306, %for.inc305 ], [ 0, %for.end291 ]
  %call299 = call %struct._SubMtx* @FrontMtx_diagMtx(%struct._FrontMtx* %frontmtx, i32 %J.13585) #6
  %cmp300 = icmp eq %struct._SubMtx* %call299, null
  br i1 %cmp300, label %for.inc305, label %if.then302

if.then302:                                       ; preds = %for.body298
  %call303 = call i32 @SubMtx_writeToBinaryFile(%struct._SubMtx* %call299, %struct._IO_FILE* %fp) #6
  br label %for.inc305

for.inc305:                                       ; preds = %for.body298, %if.then302
  %inc306 = add nsw i32 %J.13585, 1
  %66 = load i32* %nfront2, align 4, !tbaa !3
  %cmp296 = icmp slt i32 %inc306, %66
  br i1 %cmp296, label %for.body298, label %for.end307

for.end307:                                       ; preds = %for.inc305
  store i32 0, i32* %nmtx, align 4, !tbaa !3
  %cmp310582 = icmp sgt i32 %66, 0
  br i1 %cmp310582, label %for.body312, label %for.end331

for.body312:                                      ; preds = %for.end307, %for.inc329
  %J.14583 = phi i32 [ %inc330, %for.inc329 ], [ 0, %for.end307 ]
  %67 = load %struct._IVL** %upperblockIVL, align 8, !tbaa !0
  call void @IVL_listAndSize(%struct._IVL* %67, i32 %J.14583, i32* %nadj, i32** %adj) #6
  %68 = load i32* %nadj, align 4, !tbaa !3
  %cmp315580 = icmp sgt i32 %68, 0
  br i1 %cmp315580, label %for.body317, label %for.inc329

for.body317:                                      ; preds = %for.body312, %for.inc326
  %indvars.iv605 = phi i64 [ %indvars.iv.next606, %for.inc326 ], [ 0, %for.body312 ]
  %69 = load i32** %adj, align 8, !tbaa !0
  %arrayidx319 = getelementptr inbounds i32* %69, i64 %indvars.iv605
  %70 = load i32* %arrayidx319, align 4, !tbaa !3
  %call320 = call %struct._SubMtx* @FrontMtx_upperMtx(%struct._FrontMtx* %frontmtx, i32 %J.14583, i32 %70) #6
  %cmp321 = icmp eq %struct._SubMtx* %call320, null
  br i1 %cmp321, label %for.inc326, label %if.then323

if.then323:                                       ; preds = %for.body317
  %71 = load i32* %nmtx, align 4, !tbaa !3
  %inc324 = add nsw i32 %71, 1
  store i32 %inc324, i32* %nmtx, align 4, !tbaa !3
  br label %for.inc326

for.inc326:                                       ; preds = %for.body317, %if.then323
  %indvars.iv.next606 = add i64 %indvars.iv605, 1
  %72 = load i32* %nadj, align 4, !tbaa !3
  %73 = trunc i64 %indvars.iv.next606 to i32
  %cmp315 = icmp slt i32 %73, %72
  br i1 %cmp315, label %for.body317, label %for.inc329

for.inc329:                                       ; preds = %for.inc326, %for.body312
  %inc330 = add nsw i32 %J.14583, 1
  %74 = load i32* %nfront2, align 4, !tbaa !3
  %cmp310 = icmp slt i32 %inc330, %74
  br i1 %cmp310, label %for.body312, label %for.end331

for.end331:                                       ; preds = %for.inc329, %for.end307.thread, %for.end307
  %call332 = call i64 @fwrite(i8* %64, i64 4, i64 1, %struct._IO_FILE* %fp) #6
  %75 = load i32* %nfront2, align 4, !tbaa !3
  %cmp336578 = icmp sgt i32 %75, 0
  br i1 %cmp336578, label %for.body338, label %cleanup

for.body338:                                      ; preds = %for.end331, %for.inc355
  %J.15579 = phi i32 [ %inc356, %for.inc355 ], [ 0, %for.end331 ]
  %76 = load %struct._IVL** %upperblockIVL, align 8, !tbaa !0
  call void @IVL_listAndSize(%struct._IVL* %76, i32 %J.15579, i32* %nadj, i32** %adj) #6
  %77 = load i32* %nadj, align 4, !tbaa !3
  %cmp341575 = icmp sgt i32 %77, 0
  br i1 %cmp341575, label %for.body343, label %for.inc355

for.body343:                                      ; preds = %for.body338, %for.inc352
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc352 ], [ 0, %for.body338 ]
  %78 = load i32** %adj, align 8, !tbaa !0
  %arrayidx345 = getelementptr inbounds i32* %78, i64 %indvars.iv
  %79 = load i32* %arrayidx345, align 4, !tbaa !3
  %call346 = call %struct._SubMtx* @FrontMtx_upperMtx(%struct._FrontMtx* %frontmtx, i32 %J.15579, i32 %79) #6
  %cmp347 = icmp eq %struct._SubMtx* %call346, null
  br i1 %cmp347, label %for.inc352, label %if.then349

if.then349:                                       ; preds = %for.body343
  %call350 = call i32 @SubMtx_writeToBinaryFile(%struct._SubMtx* %call346, %struct._IO_FILE* %fp) #6
  br label %for.inc352

for.inc352:                                       ; preds = %for.body343, %if.then349
  %indvars.iv.next = add i64 %indvars.iv, 1
  %80 = load i32* %nadj, align 4, !tbaa !3
  %81 = trunc i64 %indvars.iv.next to i32
  %cmp341 = icmp slt i32 %81, %80
  br i1 %cmp341, label %for.body343, label %for.inc355

for.inc355:                                       ; preds = %for.inc352, %for.body338
  %inc356 = add nsw i32 %J.15579, 1
  %82 = load i32* %nfront2, align 4, !tbaa !3
  %cmp336 = icmp slt i32 %inc356, %82
  br i1 %cmp336, label %for.body338, label %cleanup

cleanup:                                          ; preds = %for.end178.thread, %for.end150.thread, %for.end331, %for.inc355, %for.inc204, %if.then221, %if.then214, %if.then59, %if.then52, %if.then37, %if.then27, %if.then21, %if.then15
  %retval.0 = phi i32 [ 0, %if.then15 ], [ 0, %if.then21 ], [ 0, %if.then27 ], [ 0, %if.then37 ], [ 0, %if.then52 ], [ 0, %if.then59 ], [ 0, %if.then214 ], [ 0, %if.then221 ], [ 1, %for.inc204 ], [ 1, %for.end178.thread ], [ 1, %for.inc355 ], [ 1, %for.end331 ], [ 1, %for.end150.thread ]
  call void @llvm.lifetime.end(i64 40, i8* %0) #3
  ret i32 %retval.0
}
