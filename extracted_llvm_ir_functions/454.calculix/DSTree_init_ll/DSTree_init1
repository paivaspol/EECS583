define void @DSTree_init1(%struct._DSTree* %dstree, i32 %ndomsep, i32 %nvtx) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._DSTree* %dstree}, i64 0, metadata !37), !dbg !47
  tail call void @llvm.dbg.value(metadata !{i32 %ndomsep}, i64 0, metadata !38), !dbg !48
  tail call void @llvm.dbg.value(metadata !{i32 %nvtx}, i64 0, metadata !39), !dbg !49
  %cmp = icmp eq %struct._DSTree* %dstree, null, !dbg !50
  %cmp1 = icmp slt i32 %ndomsep, 1, !dbg !50
  %or.cond = or i1 %cmp, %cmp1, !dbg !50
  br i1 %or.cond, label %if.then, label %if.end, !dbg !50

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !51, !tbaa !53
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([52 x i8]* @.str, i64 0, i64 0), %struct._DSTree* %dstree, i32 %ndomsep, i32 %nvtx) #5, !dbg !51
  tail call void @exit(i32 -1) #6, !dbg !56
  unreachable, !dbg !56

if.end:                                           ; preds = %entry
  tail call void @DSTree_clearData(%struct._DSTree* %dstree) #5, !dbg !57
  %call2 = tail call %struct._Tree* @Tree_new() #5, !dbg !58
  %tree = getelementptr inbounds %struct._DSTree* %dstree, i64 0, i32 0, !dbg !58
  store %struct._Tree* %call2, %struct._Tree** %tree, align 8, !dbg !58, !tbaa !53
  tail call void @Tree_init1(%struct._Tree* %call2, i32 %ndomsep) #5, !dbg !59
  %call4 = tail call %struct._IV* @IV_new() #5, !dbg !60
  %mapIV = getelementptr inbounds %struct._DSTree* %dstree, i64 0, i32 1, !dbg !60
  store %struct._IV* %call4, %struct._IV** %mapIV, align 8, !dbg !60, !tbaa !53
  tail call void @IV_init(%struct._IV* %call4, i32 %nvtx, i32* null) #5, !dbg !61
  %1 = load %struct._IV** %mapIV, align 8, !dbg !62, !tbaa !53
  tail call void @IV_fill(%struct._IV* %1, i32 -1) #5, !dbg !62
  ret void, !dbg !63
}
