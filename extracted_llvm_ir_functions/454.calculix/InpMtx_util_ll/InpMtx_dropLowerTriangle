define void @InpMtx_dropLowerTriangle(%struct._InpMtx* %inpmtx) #0 {
  tail call void @llvm.dbg.value(metadata %struct._InpMtx* %inpmtx, i64 0, metadata !90, metadata !225), !dbg !548
  %1 = icmp eq %struct._InpMtx* %inpmtx, null, !dbg !549
  br i1 %1, label %2, label %5, !dbg !551

; <label>:2                                       ; preds = %0
  %3 = load %struct.__sFILE** @__stderrp, align 8, !dbg !552, !tbaa !232
  %4 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %3, i8* getelementptr inbounds ([58 x i8]* @.str4, i64 0, i64 0), %struct._InpMtx* null) #7, !dbg !554
  tail call void @exit(i32 -1) #8, !dbg !555
  unreachable, !dbg !555

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 0, !dbg !556
  %7 = load i32* %6, align 4, !dbg !556, !tbaa !404
  %.off = add i32 %7, -1, !dbg !558
  %switch = icmp ult i32 %.off, 3, !dbg !558
  br i1 %switch, label %11, label %8, !dbg !558

; <label>:8                                       ; preds = %5
  %9 = load %struct.__sFILE** @__stderrp, align 8, !dbg !559, !tbaa !232
  %10 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %9, i8* getelementptr inbounds ([63 x i8]* @.str5, i64 0, i64 0), %struct._InpMtx* %inpmtx) #7, !dbg !561
  tail call void @exit(i32 -1) #8, !dbg !562
  unreachable, !dbg !562

; <label>:11                                      ; preds = %5
  %12 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 4, !dbg !563
  %13 = load i32* %12, align 4, !dbg !563, !tbaa !248
  tail call void @llvm.dbg.value(metadata i32 %13, i64 0, metadata !94, metadata !225), !dbg !564
  %14 = tail call i32* @InpMtx_ivec1(%struct._InpMtx* %inpmtx) #7, !dbg !565
  tail call void @llvm.dbg.value(metadata i32* %14, i64 0, metadata !95, metadata !225), !dbg !566
  %15 = tail call i32* @InpMtx_ivec2(%struct._InpMtx* %inpmtx) #7, !dbg !567
  tail call void @llvm.dbg.value(metadata i32* %15, i64 0, metadata !96, metadata !225), !dbg !568
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !92, metadata !225), !dbg !569
  %16 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 2, !dbg !570
  %17 = load i32* %16, align 4, !dbg !570, !tbaa !277
  %.off1 = add i32 %17, -1, !dbg !572
  %switch2 = icmp ult i32 %.off1, 2, !dbg !572
  br i1 %switch2, label %18, label %20, !dbg !572

; <label>:18                                      ; preds = %11
  %19 = tail call double* @InpMtx_dvec(%struct._InpMtx* %inpmtx) #7, !dbg !573
  tail call void @llvm.dbg.value(metadata double* %19, i64 0, metadata !91, metadata !225), !dbg !575
  br label %20, !dbg !576

; <label>:20                                      ; preds = %11, %18
  %dvec.0 = phi double* [ %19, %18 ], [ undef, %11 ]
  %21 = load i32* %6, align 4, !dbg !577, !tbaa !404
  switch i32 %21, label %.loopexit [
    i32 1, label %.preheader
    i32 2, label %.preheader3
    i32 3, label %.preheader5
  ], !dbg !579

.preheader5:                                      ; preds = %20
  %22 = icmp sgt i32 %13, 0, !dbg !580
  br i1 %22, label %.lr.ph15, label %.loopexit, !dbg !586

.lr.ph15:                                         ; preds = %.preheader5
  %23 = add i32 %13, -1, !dbg !586
  br label %92, !dbg !586

.preheader3:                                      ; preds = %20
  %24 = icmp sgt i32 %13, 0, !dbg !587
  br i1 %24, label %.lr.ph11, label %.loopexit, !dbg !591

.lr.ph11:                                         ; preds = %.preheader3
  %25 = add i32 %13, -1, !dbg !591
  br label %60, !dbg !591

.preheader:                                       ; preds = %20
  %26 = icmp sgt i32 %13, 0, !dbg !592
  br i1 %26, label %.lr.ph, label %.loopexit, !dbg !596

.lr.ph:                                           ; preds = %.preheader
  %27 = add i32 %13, -1, !dbg !596
  br label %28, !dbg !596

; <label>:28                                      ; preds = %59, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %59 ]
  %count.08 = phi i32 [ 0, %.lr.ph ], [ %count.1, %59 ]
  %29 = getelementptr inbounds i32* %14, i64 %indvars.iv, !dbg !597
  %30 = load i32* %29, align 4, !dbg !597, !tbaa !265
  %31 = getelementptr inbounds i32* %15, i64 %indvars.iv, !dbg !600
  %32 = load i32* %31, align 4, !dbg !600, !tbaa !265
  %33 = icmp sgt i32 %30, %32, !dbg !601
  br i1 %33, label %59, label %34, !dbg !602

; <label>:34                                      ; preds = %28
  %35 = sext i32 %count.08 to i64, !dbg !603
  %36 = getelementptr inbounds i32* %14, i64 %35, !dbg !603
  store i32 %30, i32* %36, align 4, !dbg !605, !tbaa !265
  %37 = load i32* %31, align 4, !dbg !606, !tbaa !265
  %38 = getelementptr inbounds i32* %15, i64 %35, !dbg !607
  store i32 %37, i32* %38, align 4, !dbg !608, !tbaa !265
  %39 = load i32* %16, align 4, !dbg !609, !tbaa !277
  switch i32 %39, label %57 [
    i32 1, label %40
    i32 2, label %46
  ], !dbg !611

; <label>:40                                      ; preds = %34
  %41 = getelementptr inbounds double* %dvec.0, i64 %indvars.iv, !dbg !612
  %42 = bitcast double* %41 to i64*, !dbg !612
  %43 = load i64* %42, align 8, !dbg !612, !tbaa !461
  %44 = getelementptr inbounds double* %dvec.0, i64 %35, !dbg !614
  %45 = bitcast double* %44 to i64*, !dbg !615
  store i64 %43, i64* %45, align 8, !dbg !615, !tbaa !461
  br label %57, !dbg !616

; <label>:46                                      ; preds = %34
  %47 = trunc i64 %indvars.iv to i32, !dbg !617
  %48 = shl nsw i32 %47, 1, !dbg !617
  %49 = sext i32 %48 to i64, !dbg !620
  %50 = getelementptr inbounds double* %dvec.0, i64 %49, !dbg !620
  %51 = shl nsw i32 %count.08, 1, !dbg !621
  %52 = sext i32 %51 to i64, !dbg !622
  %53 = getelementptr inbounds double* %dvec.0, i64 %52, !dbg !622
  %54 = bitcast double* %50 to <2 x i64>*, !dbg !620
  %55 = load <2 x i64>* %54, align 8, !dbg !620, !tbaa !461
  %56 = bitcast double* %53 to <2 x i64>*, !dbg !623
  store <2 x i64> %55, <2 x i64>* %56, align 8, !dbg !623, !tbaa !461
  br label %57, !dbg !624

; <label>:57                                      ; preds = %34, %46, %40
  %58 = add nsw i32 %count.08, 1, !dbg !625
  tail call void @llvm.dbg.value(metadata i32 %58, i64 0, metadata !92, metadata !225), !dbg !569
  br label %59, !dbg !626

; <label>:59                                      ; preds = %28, %57
  %count.1 = phi i32 [ %58, %57 ], [ %count.08, %28 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !596
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !596
  %exitcond = icmp eq i32 %lftr.wideiv, %27, !dbg !596
  br i1 %exitcond, label %.loopexit, label %28, !dbg !596

; <label>:60                                      ; preds = %91, %.lr.ph11
  %indvars.iv17 = phi i64 [ 0, %.lr.ph11 ], [ %indvars.iv.next18, %91 ]
  %count.210 = phi i32 [ 0, %.lr.ph11 ], [ %count.3, %91 ]
  %61 = getelementptr inbounds i32* %14, i64 %indvars.iv17, !dbg !627
  %62 = load i32* %61, align 4, !dbg !627, !tbaa !265
  %63 = getelementptr inbounds i32* %15, i64 %indvars.iv17, !dbg !630
  %64 = load i32* %63, align 4, !dbg !630, !tbaa !265
  %65 = icmp slt i32 %62, %64, !dbg !631
  br i1 %65, label %91, label %66, !dbg !632

; <label>:66                                      ; preds = %60
  %67 = sext i32 %count.210 to i64, !dbg !633
  %68 = getelementptr inbounds i32* %14, i64 %67, !dbg !633
  store i32 %62, i32* %68, align 4, !dbg !635, !tbaa !265
  %69 = load i32* %63, align 4, !dbg !636, !tbaa !265
  %70 = getelementptr inbounds i32* %15, i64 %67, !dbg !637
  store i32 %69, i32* %70, align 4, !dbg !638, !tbaa !265
  %71 = load i32* %16, align 4, !dbg !639, !tbaa !277
  switch i32 %71, label %89 [
    i32 1, label %72
    i32 2, label %78
  ], !dbg !641

; <label>:72                                      ; preds = %66
  %73 = getelementptr inbounds double* %dvec.0, i64 %indvars.iv17, !dbg !642
  %74 = bitcast double* %73 to i64*, !dbg !642
  %75 = load i64* %74, align 8, !dbg !642, !tbaa !461
  %76 = getelementptr inbounds double* %dvec.0, i64 %67, !dbg !644
  %77 = bitcast double* %76 to i64*, !dbg !645
  store i64 %75, i64* %77, align 8, !dbg !645, !tbaa !461
  br label %89, !dbg !646

; <label>:78                                      ; preds = %66
  %79 = trunc i64 %indvars.iv17 to i32, !dbg !647
  %80 = shl nsw i32 %79, 1, !dbg !647
  %81 = sext i32 %80 to i64, !dbg !650
  %82 = getelementptr inbounds double* %dvec.0, i64 %81, !dbg !650
  %83 = shl nsw i32 %count.210, 1, !dbg !651
  %84 = sext i32 %83 to i64, !dbg !652
  %85 = getelementptr inbounds double* %dvec.0, i64 %84, !dbg !652
  %86 = bitcast double* %82 to <2 x i64>*, !dbg !650
  %87 = load <2 x i64>* %86, align 8, !dbg !650, !tbaa !461
  %88 = bitcast double* %85 to <2 x i64>*, !dbg !653
  store <2 x i64> %87, <2 x i64>* %88, align 8, !dbg !653, !tbaa !461
  br label %89, !dbg !654

; <label>:89                                      ; preds = %66, %78, %72
  %90 = add nsw i32 %count.210, 1, !dbg !655
  tail call void @llvm.dbg.value(metadata i32 %90, i64 0, metadata !92, metadata !225), !dbg !569
  br label %91, !dbg !656

; <label>:91                                      ; preds = %60, %89
  %count.3 = phi i32 [ %90, %89 ], [ %count.210, %60 ]
  %indvars.iv.next18 = add nuw nsw i64 %indvars.iv17, 1, !dbg !591
  %lftr.wideiv19 = trunc i64 %indvars.iv17 to i32, !dbg !591
  %exitcond20 = icmp eq i32 %lftr.wideiv19, %25, !dbg !591
  br i1 %exitcond20, label %.loopexit, label %60, !dbg !591

; <label>:92                                      ; preds = %123, %.lr.ph15
  %indvars.iv21 = phi i64 [ 0, %.lr.ph15 ], [ %indvars.iv.next22, %123 ]
  %count.414 = phi i32 [ 0, %.lr.ph15 ], [ %count.5, %123 ]
  %93 = getelementptr inbounds i32* %15, i64 %indvars.iv21, !dbg !657
  %94 = load i32* %93, align 4, !dbg !657, !tbaa !265
  %95 = icmp sgt i32 %94, -1, !dbg !660
  br i1 %95, label %96, label %123, !dbg !661

; <label>:96                                      ; preds = %92
  %97 = getelementptr inbounds i32* %14, i64 %indvars.iv21, !dbg !662
  %98 = load i32* %97, align 4, !dbg !662, !tbaa !265
  %99 = sext i32 %count.414 to i64, !dbg !664
  %100 = getelementptr inbounds i32* %14, i64 %99, !dbg !664
  store i32 %98, i32* %100, align 4, !dbg !665, !tbaa !265
  %101 = load i32* %93, align 4, !dbg !666, !tbaa !265
  %102 = getelementptr inbounds i32* %15, i64 %99, !dbg !667
  store i32 %101, i32* %102, align 4, !dbg !668, !tbaa !265
  %103 = load i32* %16, align 4, !dbg !669, !tbaa !277
  switch i32 %103, label %121 [
    i32 1, label %104
    i32 2, label %110
  ], !dbg !671

; <label>:104                                     ; preds = %96
  %105 = getelementptr inbounds double* %dvec.0, i64 %indvars.iv21, !dbg !672
  %106 = bitcast double* %105 to i64*, !dbg !672
  %107 = load i64* %106, align 8, !dbg !672, !tbaa !461
  %108 = getelementptr inbounds double* %dvec.0, i64 %99, !dbg !674
  %109 = bitcast double* %108 to i64*, !dbg !675
  store i64 %107, i64* %109, align 8, !dbg !675, !tbaa !461
  br label %121, !dbg !676

; <label>:110                                     ; preds = %96
  %111 = trunc i64 %indvars.iv21 to i32, !dbg !677
  %112 = shl nsw i32 %111, 1, !dbg !677
  %113 = sext i32 %112 to i64, !dbg !680
  %114 = getelementptr inbounds double* %dvec.0, i64 %113, !dbg !680
  %115 = shl nsw i32 %count.414, 1, !dbg !681
  %116 = sext i32 %115 to i64, !dbg !682
  %117 = getelementptr inbounds double* %dvec.0, i64 %116, !dbg !682
  %118 = bitcast double* %114 to <2 x i64>*, !dbg !680
  %119 = load <2 x i64>* %118, align 8, !dbg !680, !tbaa !461
  %120 = bitcast double* %117 to <2 x i64>*, !dbg !683
  store <2 x i64> %119, <2 x i64>* %120, align 8, !dbg !683, !tbaa !461
  br label %121, !dbg !684

; <label>:121                                     ; preds = %96, %110, %104
  %122 = add nsw i32 %count.414, 1, !dbg !685
  tail call void @llvm.dbg.value(metadata i32 %122, i64 0, metadata !92, metadata !225), !dbg !569
  br label %123, !dbg !686

; <label>:123                                     ; preds = %92, %121
  %count.5 = phi i32 [ %122, %121 ], [ %count.414, %92 ]
  %indvars.iv.next22 = add nuw nsw i64 %indvars.iv21, 1, !dbg !586
  %lftr.wideiv23 = trunc i64 %indvars.iv21 to i32, !dbg !586
  %exitcond24 = icmp eq i32 %lftr.wideiv23, %23, !dbg !586
  br i1 %exitcond24, label %.loopexit, label %92, !dbg !586

.loopexit:                                        ; preds = %123, %91, %59, %.preheader5, %.preheader3, %.preheader, %20
  %count.6 = phi i32 [ 0, %20 ], [ 0, %.preheader ], [ 0, %.preheader3 ], [ 0, %.preheader5 ], [ %count.1, %59 ], [ %count.3, %91 ], [ %count.5, %123 ]
  store i32 %count.6, i32* %12, align 4, !dbg !687, !tbaa !248
  %124 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 6, !dbg !688
  tail call void @IV_setSize(%struct._IV* %124, i32 %count.6) #7, !dbg !689
  %125 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 7, !dbg !690
  tail call void @IV_setSize(%struct._IV* %125, i32 %count.6) #7, !dbg !691
  %126 = load i32* %16, align 4, !dbg !692, !tbaa !277
  switch i32 %126, label %132 [
    i32 1, label %127
    i32 2, label %129
  ], !dbg !694

; <label>:127                                     ; preds = %.loopexit
  %128 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 8, !dbg !695
  tail call void @DV_setSize(%struct._DV* %128, i32 %count.6) #7, !dbg !697
  br label %132, !dbg !698

; <label>:129                                     ; preds = %.loopexit
  %130 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 8, !dbg !699
  %131 = shl nsw i32 %count.6, 1, !dbg !702
  tail call void @DV_setSize(%struct._DV* %130, i32 %131) #7, !dbg !703
  br label %132, !dbg !704

; <label>:132                                     ; preds = %.loopexit, %129, %127
  ret void, !dbg !705
}
