define void @InpMtx_dropOffdiagonalEntries(%struct._InpMtx* %inpmtx) #0 {
  tail call void @llvm.dbg.value(metadata %struct._InpMtx* %inpmtx, i64 0, metadata !81, metadata !225), !dbg !394
  %1 = icmp eq %struct._InpMtx* %inpmtx, null, !dbg !395
  br i1 %1, label %2, label %5, !dbg !397

; <label>:2                                       ; preds = %0
  %3 = load %struct.__sFILE** @__stderrp, align 8, !dbg !398, !tbaa !232
  %4 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %3, i8* getelementptr inbounds ([63 x i8]* @.str2, i64 0, i64 0), %struct._InpMtx* null) #7, !dbg !400
  tail call void @exit(i32 -1) #8, !dbg !401
  unreachable, !dbg !401

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 0, !dbg !402
  %7 = load i32* %6, align 4, !dbg !402, !tbaa !404
  %.off = add i32 %7, -1, !dbg !405
  %switch = icmp ult i32 %.off, 3, !dbg !405
  br i1 %switch, label %11, label %8, !dbg !405

; <label>:8                                       ; preds = %5
  %9 = load %struct.__sFILE** @__stderrp, align 8, !dbg !406, !tbaa !232
  %10 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %9, i8* getelementptr inbounds ([72 x i8]* @.str3, i64 0, i64 0), %struct._InpMtx* %inpmtx, i32 %7) #7, !dbg !408
  tail call void @exit(i32 -1) #8, !dbg !409
  unreachable, !dbg !409

; <label>:11                                      ; preds = %5
  %12 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 4, !dbg !410
  %13 = load i32* %12, align 4, !dbg !410, !tbaa !248
  tail call void @llvm.dbg.value(metadata i32 %13, i64 0, metadata !85, metadata !225), !dbg !411
  %14 = tail call i32* @InpMtx_ivec1(%struct._InpMtx* %inpmtx) #7, !dbg !412
  tail call void @llvm.dbg.value(metadata i32* %14, i64 0, metadata !86, metadata !225), !dbg !413
  %15 = tail call i32* @InpMtx_ivec2(%struct._InpMtx* %inpmtx) #7, !dbg !414
  tail call void @llvm.dbg.value(metadata i32* %15, i64 0, metadata !87, metadata !225), !dbg !415
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !83, metadata !225), !dbg !416
  %16 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 2, !dbg !417
  %17 = load i32* %16, align 4, !dbg !417, !tbaa !277
  %.off1 = add i32 %17, -1, !dbg !419
  %switch2 = icmp ult i32 %.off1, 2, !dbg !419
  br i1 %switch2, label %18, label %20, !dbg !419

; <label>:18                                      ; preds = %11
  %19 = tail call double* @InpMtx_dvec(%struct._InpMtx* %inpmtx) #7, !dbg !420
  tail call void @llvm.dbg.value(metadata double* %19, i64 0, metadata !82, metadata !225), !dbg !422
  br label %20, !dbg !423

; <label>:20                                      ; preds = %11, %18
  %dvec.0 = phi double* [ %19, %18 ], [ undef, %11 ]
  %21 = load i32* %6, align 4, !dbg !424, !tbaa !404
  switch i32 %21, label %.loopexit [
    i32 1, label %.preheader
    i32 2, label %.preheader5
    i32 3, label %.preheader7
  ], !dbg !426

.preheader7:                                      ; preds = %20
  %22 = icmp sgt i32 %13, 0, !dbg !427
  br i1 %22, label %.lr.ph17, label %.loopexit, !dbg !433

.lr.ph17:                                         ; preds = %.preheader7
  %23 = add i32 %13, -1, !dbg !433
  br label %92, !dbg !433

.preheader5:                                      ; preds = %20
  %24 = icmp sgt i32 %13, 0, !dbg !434
  br i1 %24, label %.lr.ph13, label %.loopexit, !dbg !438

.lr.ph13:                                         ; preds = %.preheader5
  %25 = add i32 %13, -1, !dbg !438
  br label %60, !dbg !438

.preheader:                                       ; preds = %20
  %26 = icmp sgt i32 %13, 0, !dbg !439
  br i1 %26, label %.lr.ph, label %.loopexit, !dbg !443

.lr.ph:                                           ; preds = %.preheader
  %27 = add i32 %13, -1, !dbg !443
  br label %28, !dbg !443

; <label>:28                                      ; preds = %59, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %59 ]
  %count.010 = phi i32 [ 0, %.lr.ph ], [ %count.1, %59 ]
  %29 = getelementptr inbounds i32* %14, i64 %indvars.iv, !dbg !444
  %30 = load i32* %29, align 4, !dbg !444, !tbaa !265
  %31 = getelementptr inbounds i32* %15, i64 %indvars.iv, !dbg !447
  %32 = load i32* %31, align 4, !dbg !447, !tbaa !265
  %33 = icmp eq i32 %30, %32, !dbg !448
  br i1 %33, label %34, label %59, !dbg !449

; <label>:34                                      ; preds = %28
  %35 = sext i32 %count.010 to i64, !dbg !450
  %36 = getelementptr inbounds i32* %14, i64 %35, !dbg !450
  store i32 %30, i32* %36, align 4, !dbg !452, !tbaa !265
  %37 = load i32* %31, align 4, !dbg !453, !tbaa !265
  %38 = getelementptr inbounds i32* %15, i64 %35, !dbg !454
  store i32 %37, i32* %38, align 4, !dbg !455, !tbaa !265
  %39 = load i32* %16, align 4, !dbg !456, !tbaa !277
  switch i32 %39, label %57 [
    i32 1, label %40
    i32 2, label %46
  ], !dbg !458

; <label>:40                                      ; preds = %34
  %41 = getelementptr inbounds double* %dvec.0, i64 %indvars.iv, !dbg !459
  %42 = bitcast double* %41 to i64*, !dbg !459
  %43 = load i64* %42, align 8, !dbg !459, !tbaa !461
  %44 = getelementptr inbounds double* %dvec.0, i64 %35, !dbg !462
  %45 = bitcast double* %44 to i64*, !dbg !463
  store i64 %43, i64* %45, align 8, !dbg !463, !tbaa !461
  br label %57, !dbg !464

; <label>:46                                      ; preds = %34
  %47 = trunc i64 %indvars.iv to i32, !dbg !465
  %48 = shl nsw i32 %47, 1, !dbg !465
  %49 = sext i32 %48 to i64, !dbg !468
  %50 = getelementptr inbounds double* %dvec.0, i64 %49, !dbg !468
  %51 = shl nsw i32 %count.010, 1, !dbg !469
  %52 = sext i32 %51 to i64, !dbg !470
  %53 = getelementptr inbounds double* %dvec.0, i64 %52, !dbg !470
  %54 = bitcast double* %50 to <2 x i64>*, !dbg !468
  %55 = load <2 x i64>* %54, align 8, !dbg !468, !tbaa !461
  %56 = bitcast double* %53 to <2 x i64>*, !dbg !471
  store <2 x i64> %55, <2 x i64>* %56, align 8, !dbg !471, !tbaa !461
  br label %57, !dbg !472

; <label>:57                                      ; preds = %34, %46, %40
  %58 = add nsw i32 %count.010, 1, !dbg !473
  tail call void @llvm.dbg.value(metadata i32 %58, i64 0, metadata !83, metadata !225), !dbg !416
  br label %59, !dbg !474

; <label>:59                                      ; preds = %28, %57
  %count.1 = phi i32 [ %58, %57 ], [ %count.010, %28 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !443
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !443
  %exitcond = icmp eq i32 %lftr.wideiv, %27, !dbg !443
  br i1 %exitcond, label %.loopexit, label %28, !dbg !443

; <label>:60                                      ; preds = %91, %.lr.ph13
  %indvars.iv19 = phi i64 [ 0, %.lr.ph13 ], [ %indvars.iv.next20, %91 ]
  %count.212 = phi i32 [ 0, %.lr.ph13 ], [ %count.3, %91 ]
  %61 = getelementptr inbounds i32* %14, i64 %indvars.iv19, !dbg !475
  %62 = load i32* %61, align 4, !dbg !475, !tbaa !265
  %63 = getelementptr inbounds i32* %15, i64 %indvars.iv19, !dbg !478
  %64 = load i32* %63, align 4, !dbg !478, !tbaa !265
  %65 = icmp eq i32 %62, %64, !dbg !479
  br i1 %65, label %66, label %91, !dbg !480

; <label>:66                                      ; preds = %60
  %67 = sext i32 %count.212 to i64, !dbg !481
  %68 = getelementptr inbounds i32* %14, i64 %67, !dbg !481
  store i32 %62, i32* %68, align 4, !dbg !483, !tbaa !265
  %69 = load i32* %63, align 4, !dbg !484, !tbaa !265
  %70 = getelementptr inbounds i32* %15, i64 %67, !dbg !485
  store i32 %69, i32* %70, align 4, !dbg !486, !tbaa !265
  %71 = load i32* %16, align 4, !dbg !487, !tbaa !277
  switch i32 %71, label %89 [
    i32 1, label %72
    i32 2, label %78
  ], !dbg !489

; <label>:72                                      ; preds = %66
  %73 = getelementptr inbounds double* %dvec.0, i64 %indvars.iv19, !dbg !490
  %74 = bitcast double* %73 to i64*, !dbg !490
  %75 = load i64* %74, align 8, !dbg !490, !tbaa !461
  %76 = getelementptr inbounds double* %dvec.0, i64 %67, !dbg !492
  %77 = bitcast double* %76 to i64*, !dbg !493
  store i64 %75, i64* %77, align 8, !dbg !493, !tbaa !461
  br label %89, !dbg !494

; <label>:78                                      ; preds = %66
  %79 = trunc i64 %indvars.iv19 to i32, !dbg !495
  %80 = shl nsw i32 %79, 1, !dbg !495
  %81 = sext i32 %80 to i64, !dbg !498
  %82 = getelementptr inbounds double* %dvec.0, i64 %81, !dbg !498
  %83 = shl nsw i32 %count.212, 1, !dbg !499
  %84 = sext i32 %83 to i64, !dbg !500
  %85 = getelementptr inbounds double* %dvec.0, i64 %84, !dbg !500
  %86 = bitcast double* %82 to <2 x i64>*, !dbg !498
  %87 = load <2 x i64>* %86, align 8, !dbg !498, !tbaa !461
  %88 = bitcast double* %85 to <2 x i64>*, !dbg !501
  store <2 x i64> %87, <2 x i64>* %88, align 8, !dbg !501, !tbaa !461
  br label %89, !dbg !502

; <label>:89                                      ; preds = %66, %78, %72
  %90 = add nsw i32 %count.212, 1, !dbg !503
  tail call void @llvm.dbg.value(metadata i32 %90, i64 0, metadata !83, metadata !225), !dbg !416
  br label %91, !dbg !504

; <label>:91                                      ; preds = %60, %89
  %count.3 = phi i32 [ %90, %89 ], [ %count.212, %60 ]
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !438
  %lftr.wideiv21 = trunc i64 %indvars.iv19 to i32, !dbg !438
  %exitcond22 = icmp eq i32 %lftr.wideiv21, %25, !dbg !438
  br i1 %exitcond22, label %.loopexit, label %60, !dbg !438

; <label>:92                                      ; preds = %123, %.lr.ph17
  %indvars.iv23 = phi i64 [ 0, %.lr.ph17 ], [ %indvars.iv.next24, %123 ]
  %count.416 = phi i32 [ 0, %.lr.ph17 ], [ %count.5, %123 ]
  %93 = getelementptr inbounds i32* %15, i64 %indvars.iv23, !dbg !505
  %94 = load i32* %93, align 4, !dbg !505, !tbaa !265
  %95 = icmp eq i32 %94, 0, !dbg !508
  br i1 %95, label %96, label %123, !dbg !509

; <label>:96                                      ; preds = %92
  %97 = getelementptr inbounds i32* %14, i64 %indvars.iv23, !dbg !510
  %98 = load i32* %97, align 4, !dbg !510, !tbaa !265
  %99 = sext i32 %count.416 to i64, !dbg !512
  %100 = getelementptr inbounds i32* %14, i64 %99, !dbg !512
  store i32 %98, i32* %100, align 4, !dbg !513, !tbaa !265
  %101 = load i32* %93, align 4, !dbg !514, !tbaa !265
  %102 = getelementptr inbounds i32* %15, i64 %99, !dbg !515
  store i32 %101, i32* %102, align 4, !dbg !516, !tbaa !265
  %103 = load i32* %16, align 4, !dbg !517, !tbaa !277
  switch i32 %103, label %121 [
    i32 1, label %104
    i32 2, label %110
  ], !dbg !519

; <label>:104                                     ; preds = %96
  %105 = getelementptr inbounds double* %dvec.0, i64 %indvars.iv23, !dbg !520
  %106 = bitcast double* %105 to i64*, !dbg !520
  %107 = load i64* %106, align 8, !dbg !520, !tbaa !461
  %108 = getelementptr inbounds double* %dvec.0, i64 %99, !dbg !522
  %109 = bitcast double* %108 to i64*, !dbg !523
  store i64 %107, i64* %109, align 8, !dbg !523, !tbaa !461
  br label %121, !dbg !524

; <label>:110                                     ; preds = %96
  %111 = trunc i64 %indvars.iv23 to i32, !dbg !525
  %112 = shl nsw i32 %111, 1, !dbg !525
  %113 = sext i32 %112 to i64, !dbg !528
  %114 = getelementptr inbounds double* %dvec.0, i64 %113, !dbg !528
  %115 = shl nsw i32 %count.416, 1, !dbg !529
  %116 = sext i32 %115 to i64, !dbg !530
  %117 = getelementptr inbounds double* %dvec.0, i64 %116, !dbg !530
  %118 = bitcast double* %114 to <2 x i64>*, !dbg !528
  %119 = load <2 x i64>* %118, align 8, !dbg !528, !tbaa !461
  %120 = bitcast double* %117 to <2 x i64>*, !dbg !531
  store <2 x i64> %119, <2 x i64>* %120, align 8, !dbg !531, !tbaa !461
  br label %121, !dbg !532

; <label>:121                                     ; preds = %96, %110, %104
  %122 = add nsw i32 %count.416, 1, !dbg !533
  tail call void @llvm.dbg.value(metadata i32 %122, i64 0, metadata !83, metadata !225), !dbg !416
  br label %123, !dbg !534

; <label>:123                                     ; preds = %92, %121
  %count.5 = phi i32 [ %122, %121 ], [ %count.416, %92 ]
  %indvars.iv.next24 = add nuw nsw i64 %indvars.iv23, 1, !dbg !433
  %lftr.wideiv25 = trunc i64 %indvars.iv23 to i32, !dbg !433
  %exitcond26 = icmp eq i32 %lftr.wideiv25, %23, !dbg !433
  br i1 %exitcond26, label %.loopexit, label %92, !dbg !433

.loopexit:                                        ; preds = %123, %91, %59, %.preheader7, %.preheader5, %.preheader, %20
  %count.6 = phi i32 [ 0, %20 ], [ 0, %.preheader ], [ 0, %.preheader5 ], [ 0, %.preheader7 ], [ %count.1, %59 ], [ %count.3, %91 ], [ %count.5, %123 ]
  store i32 %count.6, i32* %12, align 4, !dbg !535, !tbaa !248
  %124 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 6, !dbg !536
  tail call void @IV_setSize(%struct._IV* %124, i32 %count.6) #7, !dbg !537
  %125 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 7, !dbg !538
  tail call void @IV_setSize(%struct._IV* %125, i32 %count.6) #7, !dbg !539
  %126 = load i32* %16, align 4, !dbg !540, !tbaa !277
  %.off3 = add i32 %126, -1, !dbg !542
  %switch4 = icmp ult i32 %.off3, 2, !dbg !542
  br i1 %switch4, label %127, label %129, !dbg !542

; <label>:127                                     ; preds = %.loopexit
  %128 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 8, !dbg !543
  tail call void @DV_setSize(%struct._DV* %128, i32 %count.6) #7, !dbg !545
  br label %129, !dbg !546

; <label>:129                                     ; preds = %.loopexit, %127
  ret void, !dbg !547
}
