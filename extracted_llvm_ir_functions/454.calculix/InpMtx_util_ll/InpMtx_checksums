define void @InpMtx_checksums(%struct._InpMtx* %inpmtx, double* %sums) #0 {
entry:
  %cmp = icmp eq %struct._InpMtx* %inpmtx, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([53 x i8]* @.str13, i64 0, i64 0), %struct._InpMtx* null, double* %sums) #6
  tail call void @exit(i32 -1) #7
  unreachable

if.end:                                           ; preds = %entry
  %inputMode = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 2
  %1 = load i32* %inputMode, align 4, !tbaa !3
  %switch = icmp ult i32 %1, 3
  br i1 %switch, label %sw.epilog, label %sw.default

sw.default:                                       ; preds = %if.end
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([57 x i8]* @.str14, i64 0, i64 0), %struct._InpMtx* %inpmtx, double* %sums) #6
  tail call void @exit(i32 -1) #7
  unreachable

sw.epilog:                                        ; preds = %if.end
  %arrayidx = getelementptr inbounds double* %sums, i64 2
  %arrayidx2 = getelementptr inbounds double* %sums, i64 1
  %3 = bitcast double* %sums to i8*
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 24, i32 8, i1 false)
  %call4 = tail call i32 @InpMtx_nent(%struct._InpMtx* %inpmtx) #6
  %cmp5 = icmp slt i32 %call4, 1
  br i1 %cmp5, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.epilog
  %call8 = tail call i32* @InpMtx_ivec1(%struct._InpMtx* %inpmtx) #6
  %call9 = tail call i32* @InpMtx_ivec2(%struct._InpMtx* %inpmtx) #6
  %sums.promoted = load double* %sums, align 8, !tbaa !4
  %arrayidx2.promoted = load double* %arrayidx2, align 8, !tbaa !4
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv99 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next100, %for.body ]
  %4 = phi double [ %arrayidx2.promoted, %for.body.lr.ph ], [ %add19, %for.body ]
  %5 = phi double [ %sums.promoted, %for.body.lr.ph ], [ %add, %for.body ]
  %arrayidx11 = getelementptr inbounds i32* %call8, i64 %indvars.iv99
  %6 = load i32* %arrayidx11, align 4, !tbaa !3
  %ispos = icmp sgt i32 %6, -1
  %neg = sub i32 0, %6
  %7 = select i1 %ispos, i32 %6, i32 %neg
  %conv = sitofp i32 %7 to double
  %add = fadd double %5, %conv
  %arrayidx15 = getelementptr inbounds i32* %call9, i64 %indvars.iv99
  %8 = load i32* %arrayidx15, align 4, !tbaa !3
  %ispos86 = icmp sgt i32 %8, -1
  %neg87 = sub i32 0, %8
  %9 = select i1 %ispos86, i32 %8, i32 %neg87
  %conv17 = sitofp i32 %9 to double
  %add19 = fadd double %4, %conv17
  %indvars.iv.next100 = add i64 %indvars.iv99, 1
  %lftr.wideiv101 = trunc i64 %indvars.iv.next100 to i32
  %exitcond102 = icmp eq i32 %lftr.wideiv101, %call4
  br i1 %exitcond102, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  store double %add, double* %sums, align 8, !tbaa !4
  store double %add19, double* %arrayidx2, align 8, !tbaa !4
  %10 = load i32* %inputMode, align 4, !tbaa !3
  switch i32 %10, label %return [
    i32 2, label %sw.bb35
    i32 1, label %sw.bb21
  ]

sw.bb21:                                          ; preds = %for.end
  %call22 = tail call double* @InpMtx_dvec(%struct._InpMtx* %inpmtx) #6
  %.pre = load double* %arrayidx, align 8, !tbaa !4
  br label %for.body26

for.body26:                                       ; preds = %for.body26, %sw.bb21
  %11 = phi double [ %.pre, %sw.bb21 ], [ %add31, %for.body26 ]
  %indvars.iv95 = phi i64 [ 0, %sw.bb21 ], [ %indvars.iv.next96, %for.body26 ]
  %arrayidx28 = getelementptr inbounds double* %call22, i64 %indvars.iv95
  %12 = load double* %arrayidx28, align 8, !tbaa !4
  %call29 = tail call double @fabs(double %12) #9
  %add31 = fadd double %call29, %11
  store double %add31, double* %arrayidx, align 8, !tbaa !4
  %indvars.iv.next96 = add i64 %indvars.iv95, 1
  %lftr.wideiv97 = trunc i64 %indvars.iv.next96 to i32
  %exitcond98 = icmp eq i32 %lftr.wideiv97, %call4
  br i1 %exitcond98, label %return, label %for.body26

sw.bb35:                                          ; preds = %for.end
  %call37 = tail call double* @InpMtx_dvec(%struct._InpMtx* %inpmtx) #6
  br label %for.body41

for.body41:                                       ; preds = %sw.bb35, %for.body41
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body41 ], [ 0, %sw.bb35 ]
  %13 = trunc i64 %indvars.iv to i32
  %mul = shl nsw i32 %13, 1
  %idxprom42 = sext i32 %mul to i64
  %arrayidx43 = getelementptr inbounds double* %call37, i64 %idxprom42
  %14 = load double* %arrayidx43, align 8, !tbaa !4
  %add4585 = or i32 %mul, 1
  %idxprom46 = sext i32 %add4585 to i64
  %arrayidx47 = getelementptr inbounds double* %call37, i64 %idxprom46
  %15 = load double* %arrayidx47, align 8, !tbaa !4
  %call48 = tail call double @Zabs(double %14, double %15) #6
  %16 = load double* %arrayidx, align 8, !tbaa !4
  %add50 = fadd double %call48, %16
  store double %add50, double* %arrayidx, align 8, !tbaa !4
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %call4
  br i1 %exitcond, label %return, label %for.body41

return:                                           ; preds = %for.body26, %for.body41, %for.end, %sw.epilog
  ret void
}
