define void @InpMtx_sortAndCompress(%struct._InpMtx* %inpmtx) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._InpMtx* %inpmtx}, i64 0, metadata !48), !dbg !213
  %cmp = icmp eq %struct._InpMtx* %inpmtx, null, !dbg !214
  br i1 %cmp, label %if.then, label %if.end, !dbg !214

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !215, !tbaa !217
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([56 x i8]* @.str, i64 0, i64 0), %struct._InpMtx* null) #7, !dbg !215
  tail call void @exit(i32 -1) #8, !dbg !220
  unreachable, !dbg !220

if.end:                                           ; preds = %entry
  %storageMode = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 1, !dbg !221
  %1 = load i32* %storageMode, align 4, !dbg !221, !tbaa !222
  %.off = add i32 %1, -2, !dbg !221
  %switch = icmp ult i32 %.off, 2, !dbg !221
  br i1 %switch, label %return, label %lor.lhs.false4, !dbg !221

lor.lhs.false4:                                   ; preds = %if.end
  %nent5 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 4, !dbg !221
  %2 = load i32* %nent5, align 4, !dbg !221, !tbaa !222
  tail call void @llvm.dbg.value(metadata !{i32 %2}, i64 0, metadata !50), !dbg !221
  %cmp6 = icmp eq i32 %2, 0, !dbg !221
  br i1 %cmp6, label %return, label %if.end9, !dbg !221

if.end9:                                          ; preds = %lor.lhs.false4
  %call10 = tail call i32* @InpMtx_ivec1(%struct._InpMtx* %inpmtx) #7, !dbg !223
  tail call void @llvm.dbg.value(metadata !{i32* %call10}, i64 0, metadata !52), !dbg !223
  %call11 = tail call i32* @InpMtx_ivec2(%struct._InpMtx* %inpmtx) #7, !dbg !224
  tail call void @llvm.dbg.value(metadata !{i32* %call11}, i64 0, metadata !53), !dbg !224
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !51), !dbg !225
  tail call void @llvm.dbg.value(metadata !226, i64 0, metadata !49), !dbg !227
  %cmp1291 = icmp sgt i32 %2, 1, !dbg !227
  br i1 %cmp1291, label %for.body.lr.ph, label %return, !dbg !227

for.body.lr.ph:                                   ; preds = %if.end9
  %.pre = load i32* %call10, align 4, !dbg !229, !tbaa !222
  br label %for.body, !dbg !227

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %3 = phi i32 [ %.pre, %for.body.lr.ph ], [ %5, %for.inc ], !dbg !229
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %4 = add nsw i64 %indvars.iv, -1, !dbg !229
  %arrayidx14 = getelementptr inbounds i32* %call10, i64 %indvars.iv, !dbg !229
  %5 = load i32* %arrayidx14, align 4, !dbg !229, !tbaa !222
  %cmp15 = icmp sgt i32 %3, %5, !dbg !229
  br i1 %cmp15, label %if.then32, label %lor.lhs.false16, !dbg !229

lor.lhs.false16:                                  ; preds = %for.body
  %cmp22 = icmp eq i32 %3, %5, !dbg !229
  br i1 %cmp22, label %land.lhs.true, label %for.inc, !dbg !229

land.lhs.true:                                    ; preds = %lor.lhs.false16
  %arrayidx25 = getelementptr inbounds i32* %call11, i64 %4, !dbg !229
  %6 = load i32* %arrayidx25, align 4, !dbg !229, !tbaa !222
  %arrayidx27 = getelementptr inbounds i32* %call11, i64 %indvars.iv, !dbg !229
  %7 = load i32* %arrayidx27, align 4, !dbg !229, !tbaa !222
  %cmp28 = icmp sgt i32 %6, %7, !dbg !229
  br i1 %cmp28, label %if.then32, label %for.inc, !dbg !229

for.inc:                                          ; preds = %lor.lhs.false16, %land.lhs.true
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !227
  %8 = trunc i64 %indvars.iv.next to i32, !dbg !227
  %cmp12 = icmp slt i32 %8, %2, !dbg !227
  br i1 %cmp12, label %for.body, label %return, !dbg !227

if.then32:                                        ; preds = %land.lhs.true, %for.body
  %inputMode = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 2, !dbg !231
  %9 = load i32* %inputMode, align 4, !dbg !231, !tbaa !222
  switch i32 %9, label %return [
    i32 0, label %if.then34
    i32 1, label %if.then39
    i32 2, label %if.then46
  ], !dbg !231

if.then34:                                        ; preds = %if.then32
  %call35 = tail call i32 @IV2sortUpAndCompress(i32 %2, i32* %call10, i32* %call11) #7, !dbg !232
  store i32 %call35, i32* %nent5, align 4, !dbg !232, !tbaa !222
  br label %return, !dbg !234

if.then39:                                        ; preds = %if.then32
  %call40 = tail call double* @InpMtx_dvec(%struct._InpMtx* %inpmtx) #7, !dbg !235
  tail call void @llvm.dbg.value(metadata !{double* %call40}, i64 0, metadata !54), !dbg !235
  %call41 = tail call i32 @IV2DVsortUpAndCompress(i32 %2, i32* %call10, i32* %call11, double* %call40) #7, !dbg !236
  store i32 %call41, i32* %nent5, align 4, !dbg !236, !tbaa !222
  br label %return, !dbg !237

if.then46:                                        ; preds = %if.then32
  %call48 = tail call double* @InpMtx_dvec(%struct._InpMtx* %inpmtx) #7, !dbg !238
  tail call void @llvm.dbg.value(metadata !{double* %call48}, i64 0, metadata !57), !dbg !238
  %call49 = tail call i32 @IV2ZVsortUpAndCompress(i32 %2, i32* %call10, i32* %call11, double* %call48) #7, !dbg !239
  store i32 %call49, i32* %nent5, align 4, !dbg !239, !tbaa !222
  br label %return, !dbg !240

return:                                           ; preds = %if.end9, %for.inc, %if.end, %if.then39, %if.then46, %if.then34, %if.then32, %lor.lhs.false4
  store i32 2, i32* %storageMode, align 4, !dbg !241, !tbaa !222
  ret void, !dbg !243
}
