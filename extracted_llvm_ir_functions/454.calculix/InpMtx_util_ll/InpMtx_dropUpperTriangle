define void @InpMtx_dropUpperTriangle(%struct._InpMtx* %inpmtx) #0 {
  tail call void @llvm.dbg.value(metadata %struct._InpMtx* %inpmtx, i64 0, metadata !99, metadata !225), !dbg !706
  %1 = icmp eq %struct._InpMtx* %inpmtx, null, !dbg !707
  br i1 %1, label %2, label %5, !dbg !709

; <label>:2                                       ; preds = %0
  %3 = load %struct.__sFILE** @__stderrp, align 8, !dbg !710, !tbaa !232
  %4 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %3, i8* getelementptr inbounds ([58 x i8]* @.str6, i64 0, i64 0), %struct._InpMtx* null) #7, !dbg !712
  tail call void @exit(i32 -1) #8, !dbg !713
  unreachable, !dbg !713

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 0, !dbg !714
  %7 = load i32* %6, align 4, !dbg !714, !tbaa !404
  %.off = add i32 %7, -1, !dbg !716
  %switch = icmp ult i32 %.off, 3, !dbg !716
  br i1 %switch, label %11, label %8, !dbg !716

; <label>:8                                       ; preds = %5
  %9 = load %struct.__sFILE** @__stderrp, align 8, !dbg !717, !tbaa !232
  %10 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %9, i8* getelementptr inbounds ([63 x i8]* @.str7, i64 0, i64 0), %struct._InpMtx* %inpmtx) #7, !dbg !719
  tail call void @exit(i32 -1) #8, !dbg !720
  unreachable, !dbg !720

; <label>:11                                      ; preds = %5
  %12 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 4, !dbg !721
  %13 = load i32* %12, align 4, !dbg !721, !tbaa !248
  tail call void @llvm.dbg.value(metadata i32 %13, i64 0, metadata !103, metadata !225), !dbg !722
  %14 = tail call i32* @InpMtx_ivec1(%struct._InpMtx* %inpmtx) #7, !dbg !723
  tail call void @llvm.dbg.value(metadata i32* %14, i64 0, metadata !104, metadata !225), !dbg !724
  %15 = tail call i32* @InpMtx_ivec2(%struct._InpMtx* %inpmtx) #7, !dbg !725
  tail call void @llvm.dbg.value(metadata i32* %15, i64 0, metadata !105, metadata !225), !dbg !726
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !101, metadata !225), !dbg !727
  %16 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 2, !dbg !728
  %17 = load i32* %16, align 4, !dbg !728, !tbaa !277
  %.off1 = add i32 %17, -1, !dbg !730
  %switch2 = icmp ult i32 %.off1, 2, !dbg !730
  br i1 %switch2, label %18, label %20, !dbg !730

; <label>:18                                      ; preds = %11
  %19 = tail call double* @InpMtx_dvec(%struct._InpMtx* %inpmtx) #7, !dbg !731
  tail call void @llvm.dbg.value(metadata double* %19, i64 0, metadata !100, metadata !225), !dbg !733
  br label %20, !dbg !734

; <label>:20                                      ; preds = %11, %18
  %dvec.0 = phi double* [ %19, %18 ], [ undef, %11 ]
  %21 = load i32* %6, align 4, !dbg !735, !tbaa !404
  switch i32 %21, label %.loopexit [
    i32 1, label %.preheader
    i32 2, label %.preheader5
    i32 3, label %.preheader7
  ], !dbg !737

.preheader7:                                      ; preds = %20
  %22 = icmp sgt i32 %13, 0, !dbg !738
  br i1 %22, label %.lr.ph17, label %.loopexit, !dbg !744

.lr.ph17:                                         ; preds = %.preheader7
  %23 = add i32 %13, -1, !dbg !744
  br label %92, !dbg !744

.preheader5:                                      ; preds = %20
  %24 = icmp sgt i32 %13, 0, !dbg !745
  br i1 %24, label %.lr.ph13, label %.loopexit, !dbg !749

.lr.ph13:                                         ; preds = %.preheader5
  %25 = add i32 %13, -1, !dbg !749
  br label %60, !dbg !749

.preheader:                                       ; preds = %20
  %26 = icmp sgt i32 %13, 0, !dbg !750
  br i1 %26, label %.lr.ph, label %.loopexit, !dbg !754

.lr.ph:                                           ; preds = %.preheader
  %27 = add i32 %13, -1, !dbg !754
  br label %28, !dbg !754

; <label>:28                                      ; preds = %59, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %59 ]
  %count.010 = phi i32 [ 0, %.lr.ph ], [ %count.1, %59 ]
  %29 = getelementptr inbounds i32* %14, i64 %indvars.iv, !dbg !755
  %30 = load i32* %29, align 4, !dbg !755, !tbaa !265
  %31 = getelementptr inbounds i32* %15, i64 %indvars.iv, !dbg !758
  %32 = load i32* %31, align 4, !dbg !758, !tbaa !265
  %33 = icmp slt i32 %30, %32, !dbg !759
  br i1 %33, label %59, label %34, !dbg !760

; <label>:34                                      ; preds = %28
  %35 = sext i32 %count.010 to i64, !dbg !761
  %36 = getelementptr inbounds i32* %14, i64 %35, !dbg !761
  store i32 %30, i32* %36, align 4, !dbg !763, !tbaa !265
  %37 = load i32* %31, align 4, !dbg !764, !tbaa !265
  %38 = getelementptr inbounds i32* %15, i64 %35, !dbg !765
  store i32 %37, i32* %38, align 4, !dbg !766, !tbaa !265
  %39 = load i32* %16, align 4, !dbg !767, !tbaa !277
  switch i32 %39, label %57 [
    i32 1, label %40
    i32 2, label %46
  ], !dbg !769

; <label>:40                                      ; preds = %34
  %41 = getelementptr inbounds double* %dvec.0, i64 %indvars.iv, !dbg !770
  %42 = bitcast double* %41 to i64*, !dbg !770
  %43 = load i64* %42, align 8, !dbg !770, !tbaa !461
  %44 = getelementptr inbounds double* %dvec.0, i64 %35, !dbg !772
  %45 = bitcast double* %44 to i64*, !dbg !773
  store i64 %43, i64* %45, align 8, !dbg !773, !tbaa !461
  br label %57, !dbg !774

; <label>:46                                      ; preds = %34
  %47 = trunc i64 %indvars.iv to i32, !dbg !775
  %48 = shl nsw i32 %47, 1, !dbg !775
  %49 = sext i32 %48 to i64, !dbg !778
  %50 = getelementptr inbounds double* %dvec.0, i64 %49, !dbg !778
  %51 = shl nsw i32 %count.010, 1, !dbg !779
  %52 = sext i32 %51 to i64, !dbg !780
  %53 = getelementptr inbounds double* %dvec.0, i64 %52, !dbg !780
  %54 = bitcast double* %50 to <2 x i64>*, !dbg !778
  %55 = load <2 x i64>* %54, align 8, !dbg !778, !tbaa !461
  %56 = bitcast double* %53 to <2 x i64>*, !dbg !781
  store <2 x i64> %55, <2 x i64>* %56, align 8, !dbg !781, !tbaa !461
  br label %57, !dbg !782

; <label>:57                                      ; preds = %34, %46, %40
  %58 = add nsw i32 %count.010, 1, !dbg !783
  tail call void @llvm.dbg.value(metadata i32 %58, i64 0, metadata !101, metadata !225), !dbg !727
  br label %59, !dbg !784

; <label>:59                                      ; preds = %28, %57
  %count.1 = phi i32 [ %58, %57 ], [ %count.010, %28 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !754
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !754
  %exitcond = icmp eq i32 %lftr.wideiv, %27, !dbg !754
  br i1 %exitcond, label %.loopexit, label %28, !dbg !754

; <label>:60                                      ; preds = %91, %.lr.ph13
  %indvars.iv19 = phi i64 [ 0, %.lr.ph13 ], [ %indvars.iv.next20, %91 ]
  %count.212 = phi i32 [ 0, %.lr.ph13 ], [ %count.3, %91 ]
  %61 = getelementptr inbounds i32* %14, i64 %indvars.iv19, !dbg !785
  %62 = load i32* %61, align 4, !dbg !785, !tbaa !265
  %63 = getelementptr inbounds i32* %15, i64 %indvars.iv19, !dbg !788
  %64 = load i32* %63, align 4, !dbg !788, !tbaa !265
  %65 = icmp sgt i32 %62, %64, !dbg !789
  br i1 %65, label %91, label %66, !dbg !790

; <label>:66                                      ; preds = %60
  %67 = sext i32 %count.212 to i64, !dbg !791
  %68 = getelementptr inbounds i32* %14, i64 %67, !dbg !791
  store i32 %62, i32* %68, align 4, !dbg !793, !tbaa !265
  %69 = load i32* %63, align 4, !dbg !794, !tbaa !265
  %70 = getelementptr inbounds i32* %15, i64 %67, !dbg !795
  store i32 %69, i32* %70, align 4, !dbg !796, !tbaa !265
  %71 = load i32* %16, align 4, !dbg !797, !tbaa !277
  switch i32 %71, label %89 [
    i32 1, label %72
    i32 2, label %78
  ], !dbg !799

; <label>:72                                      ; preds = %66
  %73 = getelementptr inbounds double* %dvec.0, i64 %indvars.iv19, !dbg !800
  %74 = bitcast double* %73 to i64*, !dbg !800
  %75 = load i64* %74, align 8, !dbg !800, !tbaa !461
  %76 = getelementptr inbounds double* %dvec.0, i64 %67, !dbg !802
  %77 = bitcast double* %76 to i64*, !dbg !803
  store i64 %75, i64* %77, align 8, !dbg !803, !tbaa !461
  br label %89, !dbg !804

; <label>:78                                      ; preds = %66
  %79 = trunc i64 %indvars.iv19 to i32, !dbg !805
  %80 = shl nsw i32 %79, 1, !dbg !805
  %81 = sext i32 %80 to i64, !dbg !808
  %82 = getelementptr inbounds double* %dvec.0, i64 %81, !dbg !808
  %83 = shl nsw i32 %count.212, 1, !dbg !809
  %84 = sext i32 %83 to i64, !dbg !810
  %85 = getelementptr inbounds double* %dvec.0, i64 %84, !dbg !810
  %86 = bitcast double* %82 to <2 x i64>*, !dbg !808
  %87 = load <2 x i64>* %86, align 8, !dbg !808, !tbaa !461
  %88 = bitcast double* %85 to <2 x i64>*, !dbg !811
  store <2 x i64> %87, <2 x i64>* %88, align 8, !dbg !811, !tbaa !461
  br label %89, !dbg !812

; <label>:89                                      ; preds = %66, %78, %72
  %90 = add nsw i32 %count.212, 1, !dbg !813
  tail call void @llvm.dbg.value(metadata i32 %90, i64 0, metadata !101, metadata !225), !dbg !727
  br label %91, !dbg !814

; <label>:91                                      ; preds = %60, %89
  %count.3 = phi i32 [ %90, %89 ], [ %count.212, %60 ]
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !749
  %lftr.wideiv21 = trunc i64 %indvars.iv19 to i32, !dbg !749
  %exitcond22 = icmp eq i32 %lftr.wideiv21, %25, !dbg !749
  br i1 %exitcond22, label %.loopexit, label %60, !dbg !749

; <label>:92                                      ; preds = %123, %.lr.ph17
  %indvars.iv23 = phi i64 [ 0, %.lr.ph17 ], [ %indvars.iv.next24, %123 ]
  %count.416 = phi i32 [ 0, %.lr.ph17 ], [ %count.5, %123 ]
  %93 = getelementptr inbounds i32* %15, i64 %indvars.iv23, !dbg !815
  %94 = load i32* %93, align 4, !dbg !815, !tbaa !265
  %95 = icmp slt i32 %94, 1, !dbg !818
  br i1 %95, label %96, label %123, !dbg !819

; <label>:96                                      ; preds = %92
  %97 = getelementptr inbounds i32* %14, i64 %indvars.iv23, !dbg !820
  %98 = load i32* %97, align 4, !dbg !820, !tbaa !265
  %99 = sext i32 %count.416 to i64, !dbg !822
  %100 = getelementptr inbounds i32* %14, i64 %99, !dbg !822
  store i32 %98, i32* %100, align 4, !dbg !823, !tbaa !265
  %101 = load i32* %93, align 4, !dbg !824, !tbaa !265
  %102 = getelementptr inbounds i32* %15, i64 %99, !dbg !825
  store i32 %101, i32* %102, align 4, !dbg !826, !tbaa !265
  %103 = load i32* %16, align 4, !dbg !827, !tbaa !277
  switch i32 %103, label %121 [
    i32 1, label %104
    i32 2, label %110
  ], !dbg !829

; <label>:104                                     ; preds = %96
  %105 = getelementptr inbounds double* %dvec.0, i64 %indvars.iv23, !dbg !830
  %106 = bitcast double* %105 to i64*, !dbg !830
  %107 = load i64* %106, align 8, !dbg !830, !tbaa !461
  %108 = getelementptr inbounds double* %dvec.0, i64 %99, !dbg !832
  %109 = bitcast double* %108 to i64*, !dbg !833
  store i64 %107, i64* %109, align 8, !dbg !833, !tbaa !461
  br label %121, !dbg !834

; <label>:110                                     ; preds = %96
  %111 = trunc i64 %indvars.iv23 to i32, !dbg !835
  %112 = shl nsw i32 %111, 1, !dbg !835
  %113 = sext i32 %112 to i64, !dbg !838
  %114 = getelementptr inbounds double* %dvec.0, i64 %113, !dbg !838
  %115 = shl nsw i32 %count.416, 1, !dbg !839
  %116 = sext i32 %115 to i64, !dbg !840
  %117 = getelementptr inbounds double* %dvec.0, i64 %116, !dbg !840
  %118 = bitcast double* %114 to <2 x i64>*, !dbg !838
  %119 = load <2 x i64>* %118, align 8, !dbg !838, !tbaa !461
  %120 = bitcast double* %117 to <2 x i64>*, !dbg !841
  store <2 x i64> %119, <2 x i64>* %120, align 8, !dbg !841, !tbaa !461
  br label %121, !dbg !842

; <label>:121                                     ; preds = %96, %110, %104
  %122 = add nsw i32 %count.416, 1, !dbg !843
  tail call void @llvm.dbg.value(metadata i32 %122, i64 0, metadata !101, metadata !225), !dbg !727
  br label %123, !dbg !844

; <label>:123                                     ; preds = %92, %121
  %count.5 = phi i32 [ %122, %121 ], [ %count.416, %92 ]
  %indvars.iv.next24 = add nuw nsw i64 %indvars.iv23, 1, !dbg !744
  %lftr.wideiv25 = trunc i64 %indvars.iv23 to i32, !dbg !744
  %exitcond26 = icmp eq i32 %lftr.wideiv25, %23, !dbg !744
  br i1 %exitcond26, label %.loopexit, label %92, !dbg !744

.loopexit:                                        ; preds = %123, %91, %59, %.preheader7, %.preheader5, %.preheader, %20
  %count.6 = phi i32 [ 0, %20 ], [ 0, %.preheader ], [ 0, %.preheader5 ], [ 0, %.preheader7 ], [ %count.1, %59 ], [ %count.3, %91 ], [ %count.5, %123 ]
  store i32 %count.6, i32* %12, align 4, !dbg !845, !tbaa !248
  %124 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 6, !dbg !846
  tail call void @IV_setSize(%struct._IV* %124, i32 %count.6) #7, !dbg !847
  %125 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 7, !dbg !848
  tail call void @IV_setSize(%struct._IV* %125, i32 %count.6) #7, !dbg !849
  %126 = load i32* %16, align 4, !dbg !850, !tbaa !277
  %.off3 = add i32 %126, -1, !dbg !852
  %switch4 = icmp ult i32 %.off3, 2, !dbg !852
  br i1 %switch4, label %127, label %129, !dbg !852

; <label>:127                                     ; preds = %.loopexit
  %128 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 8, !dbg !853
  tail call void @DV_setSize(%struct._DV* %128, i32 %count.6) #7, !dbg !855
  br label %129, !dbg !856

; <label>:129                                     ; preds = %.loopexit, %127
  ret void, !dbg !857
}
