define void @InpMtx_mapToUpperTriangleH(%struct._InpMtx* %inpmtx) #0 {
  tail call void @llvm.dbg.value(metadata %struct._InpMtx* %inpmtx, i64 0, metadata !126, metadata !225), !dbg !1006
  %1 = icmp eq %struct._InpMtx* %inpmtx, null, !dbg !1007
  br i1 %1, label %2, label %5, !dbg !1009

; <label>:2                                       ; preds = %0
  %3 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1010, !tbaa !232
  %4 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %3, i8* getelementptr inbounds ([59 x i8]* @.str10, i64 0, i64 0), %struct._InpMtx* null) #7, !dbg !1012
  tail call void @exit(i32 -1) #8, !dbg !1013
  unreachable, !dbg !1013

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 0, !dbg !1014
  %7 = load i32* %6, align 4, !dbg !1014, !tbaa !404
  %.off = add i32 %7, -1, !dbg !1016
  %switch = icmp ult i32 %.off, 3, !dbg !1016
  br i1 %switch, label %11, label %8, !dbg !1016

; <label>:8                                       ; preds = %5
  %9 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1017, !tbaa !232
  %10 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %9, i8* getelementptr inbounds ([88 x i8]* @.str11, i64 0, i64 0), %struct._InpMtx* %inpmtx, i32 %7) #7, !dbg !1019
  tail call void @exit(i32 -1) #8, !dbg !1020
  unreachable, !dbg !1020

; <label>:11                                      ; preds = %5
  %12 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 2, !dbg !1021
  %13 = load i32* %12, align 4, !dbg !1021, !tbaa !277
  %14 = icmp eq i32 %13, 2, !dbg !1021
  br i1 %14, label %18, label %15, !dbg !1023

; <label>:15                                      ; preds = %11
  %16 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1024, !tbaa !232
  %17 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %16, i8* getelementptr inbounds ([76 x i8]* @.str12, i64 0, i64 0), %struct._InpMtx* %inpmtx) #7, !dbg !1026
  tail call void @exit(i32 -1) #8, !dbg !1027
  unreachable, !dbg !1027

; <label>:18                                      ; preds = %11
  %19 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 4, !dbg !1028
  %20 = load i32* %19, align 4, !dbg !1028, !tbaa !248
  tail call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !130, metadata !225), !dbg !1029
  %21 = tail call i32* @InpMtx_ivec1(%struct._InpMtx* %inpmtx) #7, !dbg !1030
  tail call void @llvm.dbg.value(metadata i32* %21, i64 0, metadata !132, metadata !225), !dbg !1031
  %22 = tail call i32* @InpMtx_ivec2(%struct._InpMtx* %inpmtx) #7, !dbg !1032
  tail call void @llvm.dbg.value(metadata i32* %22, i64 0, metadata !133, metadata !225), !dbg !1033
  %23 = tail call double* @InpMtx_dvec(%struct._InpMtx* %inpmtx) #7, !dbg !1034
  tail call void @llvm.dbg.value(metadata double* %23, i64 0, metadata !127, metadata !225), !dbg !1035
  %24 = load i32* %6, align 4, !dbg !1036, !tbaa !404
  switch i32 %24, label %.loopexit [
    i32 1, label %.preheader
    i32 2, label %.preheader1
    i32 3, label %.preheader3
  ], !dbg !1038

.preheader3:                                      ; preds = %18
  %25 = icmp sgt i32 %20, 0, !dbg !1039
  br i1 %25, label %.lr.ph9, label %.loopexit, !dbg !1045

.lr.ph9:                                          ; preds = %.preheader3
  %26 = add i32 %20, -1, !dbg !1045
  br label %61, !dbg !1045

.preheader1:                                      ; preds = %18
  %27 = icmp sgt i32 %20, 0, !dbg !1046
  br i1 %27, label %.lr.ph7, label %.loopexit, !dbg !1050

.lr.ph7:                                          ; preds = %.preheader1
  %28 = add i32 %20, -1, !dbg !1050
  br label %46, !dbg !1050

.preheader:                                       ; preds = %18
  %29 = icmp sgt i32 %20, 0, !dbg !1051
  br i1 %29, label %.lr.ph, label %.loopexit, !dbg !1055

.lr.ph:                                           ; preds = %.preheader
  %30 = add i32 %20, -1, !dbg !1055
  br label %31, !dbg !1055

; <label>:31                                      ; preds = %45, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %45 ]
  %32 = getelementptr inbounds i32* %21, i64 %indvars.iv, !dbg !1056
  %33 = load i32* %32, align 4, !dbg !1056, !tbaa !265
  tail call void @llvm.dbg.value(metadata i32 %33, i64 0, metadata !131, metadata !225), !dbg !1059
  %34 = getelementptr inbounds i32* %22, i64 %indvars.iv, !dbg !1060
  %35 = load i32* %34, align 4, !dbg !1060, !tbaa !265
  tail call void @llvm.dbg.value(metadata i32 %35, i64 0, metadata !128, metadata !225), !dbg !1061
  %36 = icmp sgt i32 %33, %35, !dbg !1062
  br i1 %36, label %37, label %._crit_edge19, !dbg !1063

._crit_edge19:                                    ; preds = %31
  %.pre = trunc i64 %indvars.iv to i32, !dbg !1055
  br label %45, !dbg !1063

; <label>:37                                      ; preds = %31
  store i32 %35, i32* %32, align 4, !dbg !1064, !tbaa !265
  store i32 %33, i32* %34, align 4, !dbg !1066, !tbaa !265
  %38 = trunc i64 %indvars.iv to i32, !dbg !1067
  %39 = shl nsw i32 %38, 1, !dbg !1067
  %40 = or i32 %39, 1, !dbg !1068
  %41 = sext i32 %40 to i64, !dbg !1069
  %42 = getelementptr inbounds double* %23, i64 %41, !dbg !1069
  %43 = load double* %42, align 8, !dbg !1069, !tbaa !461
  %44 = fsub double -0.000000e+00, %43, !dbg !1070
  store double %44, double* %42, align 8, !dbg !1071, !tbaa !461
  br label %45, !dbg !1072

; <label>:45                                      ; preds = %._crit_edge19, %37
  %lftr.wideiv.pre-phi = phi i32 [ %.pre, %._crit_edge19 ], [ %38, %37 ], !dbg !1055
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1055
  %exitcond = icmp eq i32 %lftr.wideiv.pre-phi, %30, !dbg !1055
  br i1 %exitcond, label %.loopexit, label %31, !dbg !1055

; <label>:46                                      ; preds = %60, %.lr.ph7
  %indvars.iv10 = phi i64 [ 0, %.lr.ph7 ], [ %indvars.iv.next11, %60 ]
  %47 = getelementptr inbounds i32* %22, i64 %indvars.iv10, !dbg !1073
  %48 = load i32* %47, align 4, !dbg !1073, !tbaa !265
  tail call void @llvm.dbg.value(metadata i32 %48, i64 0, metadata !131, metadata !225), !dbg !1059
  %49 = getelementptr inbounds i32* %21, i64 %indvars.iv10, !dbg !1076
  %50 = load i32* %49, align 4, !dbg !1076, !tbaa !265
  tail call void @llvm.dbg.value(metadata i32 %50, i64 0, metadata !128, metadata !225), !dbg !1061
  %51 = icmp sgt i32 %48, %50, !dbg !1077
  br i1 %51, label %52, label %._crit_edge18, !dbg !1078

._crit_edge18:                                    ; preds = %46
  %.pre20 = trunc i64 %indvars.iv10 to i32, !dbg !1050
  br label %60, !dbg !1078

; <label>:52                                      ; preds = %46
  store i32 %48, i32* %49, align 4, !dbg !1079, !tbaa !265
  store i32 %50, i32* %47, align 4, !dbg !1081, !tbaa !265
  %53 = trunc i64 %indvars.iv10 to i32, !dbg !1082
  %54 = shl nsw i32 %53, 1, !dbg !1082
  %55 = or i32 %54, 1, !dbg !1083
  %56 = sext i32 %55 to i64, !dbg !1084
  %57 = getelementptr inbounds double* %23, i64 %56, !dbg !1084
  %58 = load double* %57, align 8, !dbg !1084, !tbaa !461
  %59 = fsub double -0.000000e+00, %58, !dbg !1085
  store double %59, double* %57, align 8, !dbg !1086, !tbaa !461
  br label %60, !dbg !1087

; <label>:60                                      ; preds = %._crit_edge18, %52
  %lftr.wideiv12.pre-phi = phi i32 [ %.pre20, %._crit_edge18 ], [ %53, %52 ], !dbg !1050
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1, !dbg !1050
  %exitcond13 = icmp eq i32 %lftr.wideiv12.pre-phi, %28, !dbg !1050
  br i1 %exitcond13, label %.loopexit, label %46, !dbg !1050

; <label>:61                                      ; preds = %74, %.lr.ph9
  %indvars.iv14 = phi i64 [ 0, %.lr.ph9 ], [ %indvars.iv.next15, %74 ]
  %62 = getelementptr inbounds i32* %22, i64 %indvars.iv14, !dbg !1088
  %63 = load i32* %62, align 4, !dbg !1088, !tbaa !265
  %64 = icmp slt i32 %63, 0, !dbg !1091
  br i1 %64, label %65, label %._crit_edge, !dbg !1092

._crit_edge:                                      ; preds = %61
  %.pre21 = trunc i64 %indvars.iv14 to i32, !dbg !1045
  br label %74, !dbg !1092

; <label>:65                                      ; preds = %61
  %66 = sub nsw i32 0, %63, !dbg !1093
  store i32 %66, i32* %62, align 4, !dbg !1095, !tbaa !265
  %67 = trunc i64 %indvars.iv14 to i32, !dbg !1096
  %68 = shl nsw i32 %67, 1, !dbg !1096
  %69 = or i32 %68, 1, !dbg !1097
  %70 = sext i32 %69 to i64, !dbg !1098
  %71 = getelementptr inbounds double* %23, i64 %70, !dbg !1098
  %72 = load double* %71, align 8, !dbg !1098, !tbaa !461
  %73 = fsub double -0.000000e+00, %72, !dbg !1099
  store double %73, double* %71, align 8, !dbg !1100, !tbaa !461
  br label %74, !dbg !1101

; <label>:74                                      ; preds = %._crit_edge, %65
  %lftr.wideiv16.pre-phi = phi i32 [ %.pre21, %._crit_edge ], [ %67, %65 ], !dbg !1045
  %indvars.iv.next15 = add nuw nsw i64 %indvars.iv14, 1, !dbg !1045
  %exitcond17 = icmp eq i32 %lftr.wideiv16.pre-phi, %26, !dbg !1045
  br i1 %exitcond17, label %.loopexit, label %61, !dbg !1045

.loopexit:                                        ; preds = %74, %60, %45, %.preheader3, %.preheader1, %.preheader, %18
  %75 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 1, !dbg !1102
  store i32 1, i32* %75, align 4, !dbg !1103, !tbaa !240
  ret void, !dbg !1104
}
