define void @Mrhor(double* nocapture readonly %C, i32 %neq, i32* nocapture readonly %ia, i32* nocapture readonly %iz, double* nocapture readonly %r, double* nocapture %rho) #0 {
  tail call void @llvm.dbg.value(metadata double* %C, i64 0, metadata !123, metadata !176), !dbg !697
  tail call void @llvm.dbg.value(metadata i32 %neq, i64 0, metadata !124, metadata !176), !dbg !698
  tail call void @llvm.dbg.value(metadata i32* %ia, i64 0, metadata !125, metadata !176), !dbg !699
  tail call void @llvm.dbg.value(metadata i32* %iz, i64 0, metadata !126, metadata !176), !dbg !700
  tail call void @llvm.dbg.value(metadata double* %r, i64 0, metadata !127, metadata !176), !dbg !701
  tail call void @llvm.dbg.value(metadata double* %rho, i64 0, metadata !128, metadata !176), !dbg !702
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !129, metadata !176), !dbg !703
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !130, metadata !176), !dbg !704
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !131, metadata !176), !dbg !705
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !132, metadata !176), !dbg !706
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !133, metadata !176), !dbg !707
  %1 = bitcast double* %r to i64*, !dbg !708
  %2 = load i64* %1, align 8, !dbg !708, !tbaa !242
  %3 = bitcast double* %rho to i64*, !dbg !709
  store i64 %2, i64* %3, align 8, !dbg !709, !tbaa !242
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !129, metadata !176), !dbg !703
  %4 = icmp sgt i32 %neq, 1, !dbg !710
  br i1 %4, label %.lr.ph15, label %._crit_edge, !dbg !713

.lr.ph15:                                         ; preds = %0
  %5 = add i32 %neq, -1, !dbg !713
  %.pre = load i32* %iz, align 4, !dbg !714, !tbaa !205
  br label %7, !dbg !713

.preheader:                                       ; preds = %._crit_edge12
  br i1 %4, label %.lr.ph6, label %._crit_edge, !dbg !716

.lr.ph6:                                          ; preds = %.preheader
  %6 = sext i32 %neq to i64
  br label %33, !dbg !716

; <label>:7                                       ; preds = %._crit_edge12, %.lr.ph15
  %8 = phi i32 [ %.pre, %.lr.ph15 ], [ %10, %._crit_edge12 ], !dbg !707
  %indvars.iv22 = phi i64 [ 1, %.lr.ph15 ], [ %indvars.iv.next23, %._crit_edge12 ]
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !133, metadata !176), !dbg !707
  %9 = getelementptr inbounds i32* %iz, i64 %indvars.iv22, !dbg !718
  %10 = load i32* %9, align 4, !dbg !718, !tbaa !205
  tail call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !132, metadata !176), !dbg !706
  %j.07 = add i32 %8, 1, !dbg !719
  %11 = icmp slt i32 %j.07, %10, !dbg !720
  br i1 %11, label %.lr.ph11, label %._crit_edge12, !dbg !723

.lr.ph11:                                         ; preds = %7
  %12 = sext i32 %j.07 to i64
  %13 = add i32 %10, -1, !dbg !723
  br label %14, !dbg !723

; <label>:14                                      ; preds = %14, %.lr.ph11
  %indvars.iv18 = phi i64 [ %12, %.lr.ph11 ], [ %indvars.iv.next19, %14 ]
  %j.09 = phi i32 [ %j.07, %.lr.ph11 ], [ %j.0, %14 ]
  %s.08 = phi double [ 0.000000e+00, %.lr.ph11 ], [ %23, %14 ]
  %15 = getelementptr inbounds double* %C, i64 %indvars.iv18, !dbg !724
  %16 = load double* %15, align 8, !dbg !724, !tbaa !242
  %17 = getelementptr inbounds i32* %ia, i64 %indvars.iv18, !dbg !725
  %18 = load i32* %17, align 4, !dbg !725, !tbaa !205
  %19 = sext i32 %18 to i64, !dbg !726
  %20 = getelementptr inbounds double* %rho, i64 %19, !dbg !726
  %21 = load double* %20, align 8, !dbg !726, !tbaa !242
  %22 = fmul double %16, %21, !dbg !727
  %23 = fadd double %s.08, %22, !dbg !728
  tail call void @llvm.dbg.value(metadata double %23, i64 0, metadata !133, metadata !176), !dbg !707
  %j.0 = add nsw i32 %j.09, 1, !dbg !719
  %indvars.iv.next19 = add nsw i64 %indvars.iv18, 1, !dbg !723
  %exitcond21 = icmp eq i32 %j.09, %13, !dbg !723
  br i1 %exitcond21, label %._crit_edge12, label %14, !dbg !723

._crit_edge12:                                    ; preds = %14, %7
  %s.0.lcssa = phi double [ 0.000000e+00, %7 ], [ %23, %14 ]
  %24 = getelementptr inbounds double* %r, i64 %indvars.iv22, !dbg !729
  %25 = load double* %24, align 8, !dbg !729, !tbaa !242
  %26 = fsub double %25, %s.0.lcssa, !dbg !730
  %27 = sext i32 %10 to i64, !dbg !731
  %28 = getelementptr inbounds double* %C, i64 %27, !dbg !731
  %29 = load double* %28, align 8, !dbg !731, !tbaa !242
  %30 = fdiv double %26, %29, !dbg !732
  %31 = getelementptr inbounds double* %rho, i64 %indvars.iv22, !dbg !733
  store double %30, double* %31, align 8, !dbg !734, !tbaa !242
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !713
  %lftr.wideiv24 = trunc i64 %indvars.iv22 to i32, !dbg !713
  %exitcond25 = icmp eq i32 %lftr.wideiv24, %5, !dbg !713
  br i1 %exitcond25, label %.preheader, label %7, !dbg !713

.loopexit:                                        ; preds = %.lr.ph, %._crit_edge26, %33
  %32 = icmp sgt i64 %indvars.iv.next17, 1, !dbg !735
  br i1 %32, label %33, label %._crit_edge, !dbg !716

; <label>:33                                      ; preds = %.lr.ph6, %.loopexit
  %indvars.iv16 = phi i64 [ %6, %.lr.ph6 ], [ %indvars.iv.next17, %.loopexit ]
  %indvars.iv.next17 = add nsw i64 %indvars.iv16, -1, !dbg !716
  %34 = getelementptr inbounds i32* %iz, i64 %indvars.iv.next17, !dbg !737
  %35 = load i32* %34, align 4, !dbg !737, !tbaa !205
  %36 = sext i32 %35 to i64, !dbg !739
  %37 = getelementptr inbounds double* %C, i64 %36, !dbg !739
  %38 = load double* %37, align 8, !dbg !739, !tbaa !242
  %39 = getelementptr inbounds double* %rho, i64 %indvars.iv.next17, !dbg !740
  %40 = load double* %39, align 8, !dbg !741, !tbaa !242
  %41 = fdiv double %40, %38, !dbg !741
  store double %41, double* %39, align 8, !dbg !741, !tbaa !242
  %42 = add nsw i64 %indvars.iv16, -2, !dbg !742
  %43 = getelementptr inbounds i32* %iz, i64 %42, !dbg !743
  %44 = load i32* %43, align 4, !dbg !743, !tbaa !205
  %45 = add nsw i32 %35, -1, !dbg !744
  tail call void @llvm.dbg.value(metadata i32 %45, i64 0, metadata !132, metadata !176), !dbg !706
  %46 = icmp slt i32 %44, %45, !dbg !745
  br i1 %46, label %.lr.ph, label %.loopexit, !dbg !748

.lr.ph:                                           ; preds = %33
  %47 = sext i32 %44 to i64
  %48 = add i32 %35, -2, !dbg !748
  %indvars.iv.next28 = add nsw i64 %47, 1, !dbg !748
  %49 = getelementptr inbounds double* %C, i64 %indvars.iv.next28, !dbg !749
  %50 = load double* %49, align 8, !dbg !749, !tbaa !242
  %51 = fmul double %50, %41, !dbg !750
  %52 = getelementptr inbounds i32* %ia, i64 %indvars.iv.next28, !dbg !751
  %53 = load i32* %52, align 4, !dbg !751, !tbaa !205
  %54 = sext i32 %53 to i64, !dbg !752
  %55 = getelementptr inbounds double* %rho, i64 %54, !dbg !752
  %56 = load double* %55, align 8, !dbg !753, !tbaa !242
  %57 = fsub double %56, %51, !dbg !753
  store double %57, double* %55, align 8, !dbg !753, !tbaa !242
  %exitcond30 = icmp eq i32 %44, %48, !dbg !748
  br i1 %exitcond30, label %.loopexit, label %._crit_edge26, !dbg !748

._crit_edge26:                                    ; preds = %.lr.ph, %._crit_edge26
  %indvars.iv.next31 = phi i64 [ %indvars.iv.next, %._crit_edge26 ], [ %indvars.iv.next28, %.lr.ph ]
  %.pre27 = load double* %39, align 8, !dbg !754, !tbaa !242
  %indvars.iv.next = add nsw i64 %indvars.iv.next31, 1, !dbg !748
  %58 = getelementptr inbounds double* %C, i64 %indvars.iv.next, !dbg !749
  %59 = load double* %58, align 8, !dbg !749, !tbaa !242
  %60 = fmul double %59, %.pre27, !dbg !750
  %61 = getelementptr inbounds i32* %ia, i64 %indvars.iv.next, !dbg !751
  %62 = load i32* %61, align 4, !dbg !751, !tbaa !205
  %63 = sext i32 %62 to i64, !dbg !752
  %64 = getelementptr inbounds double* %rho, i64 %63, !dbg !752
  %65 = load double* %64, align 8, !dbg !753, !tbaa !242
  %66 = fsub double %65, %60, !dbg !753
  store double %66, double* %64, align 8, !dbg !753, !tbaa !242
  %lftr.wideiv = trunc i64 %indvars.iv.next31 to i32, !dbg !748
  %exitcond = icmp eq i32 %lftr.wideiv, %48, !dbg !748
  br i1 %exitcond, label %.loopexit, label %._crit_edge26, !dbg !748

._crit_edge:                                      ; preds = %.loopexit, %0, %.preheader
  ret void, !dbg !755
}
