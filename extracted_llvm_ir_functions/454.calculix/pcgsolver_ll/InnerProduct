define void @InnerProduct(double* nocapture readonly %a, double* nocapture readonly %b, i32 %n, double* nocapture %Sum) #0 {
  tail call void @llvm.dbg.value(metadata double* %a, i64 0, metadata !138, metadata !176), !dbg !756
  tail call void @llvm.dbg.value(metadata double* %b, i64 0, metadata !139, metadata !176), !dbg !757
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !140, metadata !176), !dbg !758
  tail call void @llvm.dbg.value(metadata double* %Sum, i64 0, metadata !141, metadata !176), !dbg !759
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !142, metadata !176), !dbg !760
  store double 0.000000e+00, double* %Sum, align 8, !dbg !761, !tbaa !242
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !142, metadata !176), !dbg !760
  %1 = icmp sgt i32 %n, 0, !dbg !762
  br i1 %1, label %.lr.ph, label %._crit_edge, !dbg !763

.lr.ph:                                           ; preds = %0
  %2 = add i32 %n, -1, !dbg !763
  br label %3, !dbg !763

; <label>:3                                       ; preds = %3, %.lr.ph
  %4 = phi double [ 0.000000e+00, %.lr.ph ], [ %10, %3 ], !dbg !764
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %3 ]
  %5 = getelementptr inbounds double* %a, i64 %indvars.iv, !dbg !764
  %6 = load double* %5, align 8, !dbg !764, !tbaa !242
  %7 = getelementptr inbounds double* %b, i64 %indvars.iv, !dbg !765
  %8 = load double* %7, align 8, !dbg !765, !tbaa !242
  %9 = fmul double %6, %8, !dbg !766
  %10 = fadd double %4, %9, !dbg !767
  store double %10, double* %Sum, align 8, !dbg !767, !tbaa !242
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !763
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !763
  %exitcond = icmp eq i32 %lftr.wideiv, %2, !dbg !763
  br i1 %exitcond, label %._crit_edge, label %3, !dbg !763

._crit_edge:                                      ; preds = %3, %0
  ret void, !dbg !768
}
