define void @InnerProduct(double* nocapture %a, double* nocapture %b, i32 %n, double* nocapture %Sum) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{double* %a}, i64 0, metadata !138), !dbg !445
  tail call void @llvm.dbg.value(metadata !{double* %b}, i64 0, metadata !139), !dbg !445
  tail call void @llvm.dbg.value(metadata !{i32 %n}, i64 0, metadata !140), !dbg !445
  tail call void @llvm.dbg.value(metadata !{double* %Sum}, i64 0, metadata !141), !dbg !445
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !142), !dbg !446
  store double 0.000000e+00, double* %Sum, align 8, !dbg !447, !tbaa !206
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !142), !dbg !448
  %cmp7 = icmp sgt i32 %n, 0, !dbg !448
  br i1 %cmp7, label %for.body, label %for.end, !dbg !448

for.body:                                         ; preds = %entry, %for.body
  %0 = phi double [ %add, %for.body ], [ 0.000000e+00, %entry ], !dbg !448
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds double* %a, i64 %indvars.iv, !dbg !448
  %1 = load double* %arrayidx, align 8, !dbg !448, !tbaa !206
  %arrayidx2 = getelementptr inbounds double* %b, i64 %indvars.iv, !dbg !448
  %2 = load double* %arrayidx2, align 8, !dbg !448, !tbaa !206
  %mul = fmul double %1, %2, !dbg !448
  %add = fadd double %0, %mul, !dbg !448
  store double %add, double* %Sum, align 8, !dbg !448, !tbaa !206
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !448
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !448
  %exitcond = icmp eq i32 %lftr.wideiv, %n, !dbg !448
  br i1 %exitcond, label %for.end, label %for.body, !dbg !448

for.end:                                          ; preds = %for.body, %entry
  ret void, !dbg !449
}
