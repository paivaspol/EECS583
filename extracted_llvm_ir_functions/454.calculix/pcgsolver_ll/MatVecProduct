define void @MatVecProduct(double* nocapture %A, double* nocapture %p, i32 %neq, i32* nocapture %ia, i32* nocapture %iz, double* nocapture %z) #0 {
entry:
  %0 = load i32* %iz, align 4, !tbaa !0
  %idxprom = sext i32 %0 to i64
  %arrayidx1 = getelementptr inbounds double* %A, i64 %idxprom
  %1 = load double* %arrayidx1, align 8, !tbaa !3
  %2 = load double* %p, align 8, !tbaa !3
  %mul = fmul double %1, %2
  store double %mul, double* %z, align 8, !tbaa !3
  %cmp70 = icmp sgt i32 %neq, 1
  br i1 %cmp70, label %for.body, label %for.end41

for.body:                                         ; preds = %entry, %for.inc39
  %3 = phi i32 [ %4, %for.inc39 ], [ %0, %entry ]
  %indvars.iv72 = phi i64 [ %indvars.iv.next73, %for.inc39 ], [ 1, %entry ]
  %arrayidx5 = getelementptr inbounds i32* %iz, i64 %indvars.iv72
  %4 = load i32* %arrayidx5, align 4, !tbaa !0
  %idxprom6 = sext i32 %4 to i64
  %arrayidx7 = getelementptr inbounds double* %A, i64 %idxprom6
  %5 = load double* %arrayidx7, align 8, !tbaa !3
  %arrayidx9 = getelementptr inbounds double* %p, i64 %indvars.iv72
  %6 = load double* %arrayidx9, align 8, !tbaa !3
  %mul10 = fmul double %5, %6
  %arrayidx12 = getelementptr inbounds double* %z, i64 %indvars.iv72
  store double %mul10, double* %arrayidx12, align 8, !tbaa !3
  %sub17 = add nsw i32 %4, -1
  %cmp1968 = icmp slt i32 %3, %sub17
  br i1 %cmp1968, label %for.body20.lr.ph, label %for.inc39

for.body20.lr.ph:                                 ; preds = %for.body
  %7 = sext i32 %3 to i64
  br label %for.body20

for.body20:                                       ; preds = %for.body20.for.body20_crit_edge, %for.body20.lr.ph
  %8 = phi double [ %mul10, %for.body20.lr.ph ], [ %.pre, %for.body20.for.body20_crit_edge ]
  %indvars.iv = phi i64 [ %7, %for.body20.lr.ph ], [ %indvars.iv.next, %for.body20.for.body20_crit_edge ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %arrayidx22 = getelementptr inbounds i32* %ia, i64 %indvars.iv.next
  %9 = load i32* %arrayidx22, align 4, !tbaa !0
  %arrayidx24 = getelementptr inbounds double* %A, i64 %indvars.iv.next
  %10 = load double* %arrayidx24, align 8, !tbaa !3
  %idxprom25 = sext i32 %9 to i64
  %arrayidx26 = getelementptr inbounds double* %p, i64 %idxprom25
  %11 = load double* %arrayidx26, align 8, !tbaa !3
  %mul27 = fmul double %10, %11
  %add30 = fadd double %8, %mul27
  store double %add30, double* %arrayidx12, align 8, !tbaa !3
  %12 = load double* %arrayidx24, align 8, !tbaa !3
  %13 = load double* %arrayidx9, align 8, !tbaa !3
  %mul35 = fmul double %12, %13
  %arrayidx37 = getelementptr inbounds double* %z, i64 %idxprom25
  %14 = load double* %arrayidx37, align 8, !tbaa !3
  %add38 = fadd double %14, %mul35
  store double %add38, double* %arrayidx37, align 8, !tbaa !3
  %15 = trunc i64 %indvars.iv.next to i32
  %cmp19 = icmp slt i32 %15, %sub17
  br i1 %cmp19, label %for.body20.for.body20_crit_edge, label %for.inc39

for.body20.for.body20_crit_edge:                  ; preds = %for.body20
  %.pre = load double* %arrayidx12, align 8, !tbaa !3
  br label %for.body20

for.inc39:                                        ; preds = %for.body20, %for.body
  %indvars.iv.next73 = add i64 %indvars.iv72, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next73 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %neq
  br i1 %exitcond, label %for.end41, label %for.body

for.end41:                                        ; preds = %for.inc39, %entry
  ret void
}
