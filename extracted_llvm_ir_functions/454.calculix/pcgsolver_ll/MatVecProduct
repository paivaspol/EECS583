define void @MatVecProduct(double* nocapture readonly %A, double* nocapture readonly %p, i32 %neq, i32* nocapture readonly %ia, i32* nocapture readonly %iz, double* nocapture %z) #0 {
  tail call void @llvm.dbg.value(metadata double* %A, i64 0, metadata !81, metadata !176), !dbg !769
  tail call void @llvm.dbg.value(metadata double* %p, i64 0, metadata !82, metadata !176), !dbg !770
  tail call void @llvm.dbg.value(metadata i32 %neq, i64 0, metadata !83, metadata !176), !dbg !771
  tail call void @llvm.dbg.value(metadata i32* %ia, i64 0, metadata !84, metadata !176), !dbg !772
  tail call void @llvm.dbg.value(metadata i32* %iz, i64 0, metadata !85, metadata !176), !dbg !773
  tail call void @llvm.dbg.value(metadata double* %z, i64 0, metadata !86, metadata !176), !dbg !774
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !87, metadata !176), !dbg !775
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !88, metadata !176), !dbg !776
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !89, metadata !176), !dbg !777
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !90, metadata !176), !dbg !778
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !91, metadata !176), !dbg !779
  %1 = load i32* %iz, align 4, !dbg !780, !tbaa !205
  %2 = sext i32 %1 to i64, !dbg !781
  %3 = getelementptr inbounds double* %A, i64 %2, !dbg !781
  %4 = load double* %3, align 8, !dbg !781, !tbaa !242
  %5 = load double* %p, align 8, !dbg !782, !tbaa !242
  %6 = fmul double %4, %5, !dbg !783
  store double %6, double* %z, align 8, !dbg !784, !tbaa !242
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !87, metadata !176), !dbg !775
  %7 = icmp sgt i32 %neq, 1, !dbg !785
  br i1 %7, label %.lr.ph5, label %._crit_edge6, !dbg !788

.lr.ph5:                                          ; preds = %0
  %8 = add i32 %neq, -1, !dbg !788
  br label %9, !dbg !788

; <label>:9                                       ; preds = %._crit_edge, %.lr.ph5
  %10 = phi i32 [ %1, %.lr.ph5 ], [ %12, %._crit_edge ], !dbg !789
  %indvars.iv7 = phi i64 [ 1, %.lr.ph5 ], [ %indvars.iv.next8, %._crit_edge ]
  %11 = getelementptr inbounds i32* %iz, i64 %indvars.iv7, !dbg !789
  %12 = load i32* %11, align 4, !dbg !789, !tbaa !205
  %13 = sext i32 %12 to i64, !dbg !791
  %14 = getelementptr inbounds double* %A, i64 %13, !dbg !791
  %15 = load double* %14, align 8, !dbg !791, !tbaa !242
  %16 = getelementptr inbounds double* %p, i64 %indvars.iv7, !dbg !792
  %17 = load double* %16, align 8, !dbg !792, !tbaa !242
  %18 = fmul double %15, %17, !dbg !793
  %19 = getelementptr inbounds double* %z, i64 %indvars.iv7, !dbg !794
  store double %18, double* %19, align 8, !dbg !795, !tbaa !242
  %20 = add nsw i32 %12, -1, !dbg !796
  tail call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !90, metadata !176), !dbg !778
  %21 = icmp slt i32 %10, %20, !dbg !797
  br i1 %21, label %.lr.ph, label %._crit_edge, !dbg !800

.lr.ph:                                           ; preds = %9
  %22 = sext i32 %10 to i64
  %23 = add i32 %12, -2, !dbg !800
  br label %24, !dbg !800

; <label>:24                                      ; preds = %._crit_edge11, %.lr.ph
  %25 = phi double [ %18, %.lr.ph ], [ %.pre, %._crit_edge11 ]
  %indvars.iv = phi i64 [ %22, %.lr.ph ], [ %indvars.iv.next, %._crit_edge11 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !800
  %26 = getelementptr inbounds i32* %ia, i64 %indvars.iv.next, !dbg !801
  %27 = load i32* %26, align 4, !dbg !801, !tbaa !205
  tail call void @llvm.dbg.value(metadata i32 %27, i64 0, metadata !91, metadata !176), !dbg !779
  %28 = getelementptr inbounds double* %A, i64 %indvars.iv.next, !dbg !803
  %29 = load double* %28, align 8, !dbg !803, !tbaa !242
  %30 = sext i32 %27 to i64, !dbg !804
  %31 = getelementptr inbounds double* %p, i64 %30, !dbg !804
  %32 = load double* %31, align 8, !dbg !804, !tbaa !242
  %33 = fmul double %29, %32, !dbg !805
  %34 = fadd double %25, %33, !dbg !806
  store double %34, double* %19, align 8, !dbg !806, !tbaa !242
  %35 = load double* %28, align 8, !dbg !807, !tbaa !242
  %36 = load double* %16, align 8, !dbg !808, !tbaa !242
  %37 = fmul double %35, %36, !dbg !809
  %38 = getelementptr inbounds double* %z, i64 %30, !dbg !810
  %39 = load double* %38, align 8, !dbg !811, !tbaa !242
  %40 = fadd double %39, %37, !dbg !811
  store double %40, double* %38, align 8, !dbg !811, !tbaa !242
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !800
  %exitcond = icmp eq i32 %lftr.wideiv, %23, !dbg !800
  br i1 %exitcond, label %._crit_edge, label %._crit_edge11, !dbg !800

._crit_edge11:                                    ; preds = %24
  %.pre = load double* %19, align 8, !dbg !806, !tbaa !242
  br label %24, !dbg !800

._crit_edge:                                      ; preds = %24, %9
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1, !dbg !788
  %lftr.wideiv9 = trunc i64 %indvars.iv7 to i32, !dbg !788
  %exitcond10 = icmp eq i32 %lftr.wideiv9, %8, !dbg !788
  br i1 %exitcond10, label %._crit_edge6, label %9, !dbg !788

._crit_edge6:                                     ; preds = %._crit_edge, %0
  ret void, !dbg !812
}
