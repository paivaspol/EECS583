define i32 @cgsolver(double* nocapture %A, double* nocapture %x, double* nocapture %b, i32 %neq, i32 %len, i32* nocapture %ia, i32* nocapture %iz, double* nocapture %eps, i32* nocapture %niter, i32 %precFlg) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{double* %A}, i64 0, metadata !13), !dbg !172
  tail call void @llvm.dbg.value(metadata !{double* %x}, i64 0, metadata !14), !dbg !172
  tail call void @llvm.dbg.value(metadata !{double* %b}, i64 0, metadata !15), !dbg !172
  tail call void @llvm.dbg.value(metadata !{i32 %neq}, i64 0, metadata !16), !dbg !172
  tail call void @llvm.dbg.value(metadata !{i32 %len}, i64 0, metadata !17), !dbg !172
  tail call void @llvm.dbg.value(metadata !{i32* %ia}, i64 0, metadata !18), !dbg !173
  tail call void @llvm.dbg.value(metadata !{i32* %iz}, i64 0, metadata !19), !dbg !173
  tail call void @llvm.dbg.value(metadata !{double* %eps}, i64 0, metadata !20), !dbg !174
  tail call void @llvm.dbg.value(metadata !{i32* %niter}, i64 0, metadata !21), !dbg !174
  tail call void @llvm.dbg.value(metadata !{i32 %precFlg}, i64 0, metadata !22), !dbg !174
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !23), !dbg !175
  tail call void @llvm.dbg.value(metadata !176, i64 0, metadata !24), !dbg !177
  tail call void @llvm.dbg.value(metadata !176, i64 0, metadata !25), !dbg !177
  tail call void @llvm.dbg.value(metadata !176, i64 0, metadata !26), !dbg !177
  tail call void @llvm.dbg.value(metadata !176, i64 0, metadata !27), !dbg !177
  tail call void @llvm.dbg.value(metadata !176, i64 0, metadata !28), !dbg !177
  tail call void @llvm.dbg.value(metadata !176, i64 0, metadata !29), !dbg !177
  tail call void @llvm.dbg.value(metadata !176, i64 0, metadata !30), !dbg !177
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !23), !dbg !178
  %cmp97 = icmp sgt i32 %neq, 0, !dbg !178
  br i1 %cmp97, label %for.body, label %for.cond1.preheader, !dbg !178

for.cond1.preheader:                              ; preds = %for.body, %entry
  %cmp295 = icmp sgt i32 %len, 0, !dbg !180
  br i1 %cmp295, label %for.body3, label %for.end9, !dbg !180

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv103 = phi i64 [ %indvars.iv.next104, %for.body ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds i32* %iz, i64 %indvars.iv103, !dbg !178
  %0 = load i32* %arrayidx, align 4, !dbg !178, !tbaa !182
  %dec = add nsw i32 %0, -1, !dbg !178
  store i32 %dec, i32* %arrayidx, align 4, !dbg !178, !tbaa !182
  %indvars.iv.next104 = add i64 %indvars.iv103, 1, !dbg !178
  %lftr.wideiv105 = trunc i64 %indvars.iv.next104 to i32, !dbg !178
  %exitcond106 = icmp eq i32 %lftr.wideiv105, %neq, !dbg !178
  br i1 %exitcond106, label %for.cond1.preheader, label %for.body, !dbg !178

for.body3:                                        ; preds = %for.cond1.preheader, %for.body3
  %indvars.iv99 = phi i64 [ %indvars.iv.next100, %for.body3 ], [ 0, %for.cond1.preheader ]
  %arrayidx5 = getelementptr inbounds i32* %ia, i64 %indvars.iv99, !dbg !180
  %1 = load i32* %arrayidx5, align 4, !dbg !180, !tbaa !182
  %dec6 = add nsw i32 %1, -1, !dbg !180
  store i32 %dec6, i32* %arrayidx5, align 4, !dbg !180, !tbaa !182
  %indvars.iv.next100 = add i64 %indvars.iv99, 1, !dbg !180
  %lftr.wideiv101 = trunc i64 %indvars.iv.next100 to i32, !dbg !180
  %exitcond102 = icmp eq i32 %lftr.wideiv101, %len, !dbg !180
  br i1 %exitcond102, label %for.end9, label %for.body3, !dbg !180

for.end9:                                         ; preds = %for.body3, %for.cond1.preheader
  %conv = sext i32 %neq to i64, !dbg !185
  %call = tail call i8* @u_calloc(i64 %conv, i64 8) #6, !dbg !185
  %2 = bitcast i8* %call to double*, !dbg !185
  tail call void @llvm.dbg.value(metadata !{double* %2}, i64 0, metadata !24), !dbg !185
  tail call void @Scaling(double* %A, double* %b, i32 %neq, i32* %ia, i32* %iz, double* %2) #7, !dbg !186
  switch i32 %precFlg, label %for.cond30.preheader [
    i32 0, label %if.then
    i32 3, label %if.then18
  ], !dbg !187

if.then:                                          ; preds = %for.end9
  %call11 = tail call i8* @u_calloc(i64 %conv, i64 8) #6, !dbg !188
  %3 = bitcast i8* %call11 to double*, !dbg !188
  tail call void @llvm.dbg.value(metadata !{double* %3}, i64 0, metadata !25), !dbg !188
  %call13 = tail call i8* @u_calloc(i64 %conv, i64 8) #6, !dbg !190
  %4 = bitcast i8* %call13 to double*, !dbg !190
  tail call void @llvm.dbg.value(metadata !{double* %4}, i64 0, metadata !26), !dbg !190
  %call15 = tail call i8* @u_calloc(i64 %conv, i64 8) #6, !dbg !191
  %5 = bitcast i8* %call15 to double*, !dbg !191
  tail call void @llvm.dbg.value(metadata !{double* %5}, i64 0, metadata !27), !dbg !191
  tail call void @CG(double* %A, double* %x, double* %b, i32 %neq, i32 undef, i32* %ia, i32* %iz, double* %eps, i32* %niter, double* %3, double* %4, double* %5) #7, !dbg !192
  tail call void @free(i8* %call11) #6, !dbg !193
  tail call void @free(i8* %call13) #6, !dbg !193
  tail call void @free(i8* %call15) #6, !dbg !193
  br label %for.cond30.preheader, !dbg !194

if.then18:                                        ; preds = %for.end9
  %call20 = tail call i8* @u_calloc(i64 %conv, i64 8) #6, !dbg !195
  %6 = bitcast i8* %call20 to double*, !dbg !195
  tail call void @llvm.dbg.value(metadata !{double* %6}, i64 0, metadata !30), !dbg !195
  %call22 = tail call i8* @u_calloc(i64 %conv, i64 8) #6, !dbg !197
  %7 = bitcast i8* %call22 to double*, !dbg !197
  tail call void @llvm.dbg.value(metadata !{double* %7}, i64 0, metadata !25), !dbg !197
  %call24 = tail call i8* @u_calloc(i64 %conv, i64 8) #6, !dbg !198
  %8 = bitcast i8* %call24 to double*, !dbg !198
  tail call void @llvm.dbg.value(metadata !{double* %8}, i64 0, metadata !29), !dbg !198
  %conv25 = sext i32 %len to i64, !dbg !199
  %call26 = tail call i8* @u_calloc(i64 %conv25, i64 8) #6, !dbg !199
  %9 = bitcast i8* %call26 to double*, !dbg !199
  tail call void @llvm.dbg.value(metadata !{double* %9}, i64 0, metadata !28), !dbg !199
  %call28 = tail call i8* @u_calloc(i64 %conv, i64 8) #6, !dbg !200
  %10 = bitcast i8* %call28 to double*, !dbg !200
  tail call void @llvm.dbg.value(metadata !{double* %10}, i64 0, metadata !27), !dbg !200
  tail call void @PCG(double* %A, double* %x, double* %b, i32 %neq, i32 %len, i32* %ia, i32* %iz, double* %eps, i32* %niter, i32 3, double* %6, double* %7, double* %8, double* %9, double* %10) #7, !dbg !201
  tail call void @free(i8* %call20) #6, !dbg !202
  tail call void @free(i8* %call22) #6, !dbg !202
  tail call void @free(i8* %call24) #6, !dbg !202
  tail call void @free(i8* %call26) #6, !dbg !202
  tail call void @free(i8* %call28) #6, !dbg !202
  br label %for.cond30.preheader, !dbg !203

for.cond30.preheader:                             ; preds = %for.end9, %if.then18, %if.then
  br i1 %cmp97, label %for.body33, label %for.end40, !dbg !204

for.body33:                                       ; preds = %for.cond30.preheader, %for.body33
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body33 ], [ 0, %for.cond30.preheader ]
  %arrayidx35 = getelementptr inbounds double* %2, i64 %indvars.iv, !dbg !204
  %11 = load double* %arrayidx35, align 8, !dbg !204, !tbaa !206
  %arrayidx37 = getelementptr inbounds double* %x, i64 %indvars.iv, !dbg !204
  %12 = load double* %arrayidx37, align 8, !dbg !204, !tbaa !206
  %mul = fmul double %11, %12, !dbg !204
  store double %mul, double* %arrayidx37, align 8, !dbg !204, !tbaa !206
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !204
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !204
  %exitcond = icmp eq i32 %lftr.wideiv, %neq, !dbg !204
  br i1 %exitcond, label %for.end40, label %for.body33, !dbg !204

for.end40:                                        ; preds = %for.body33, %for.cond30.preheader
  tail call void @free(i8* %call) #6, !dbg !207
  ret i32 0, !dbg !208
}
