define void @PreConditioning(double* nocapture readonly %A, i32 %neq, i32 %len, i32* nocapture readonly %ia, i32* nocapture readonly %iz, double %alpha, i32 %precFlg, double* nocapture %C, i32* nocapture %ier) #0 {
  tail call void @llvm.dbg.value(metadata double* %A, i64 0, metadata !96, metadata !176), !dbg !593
  tail call void @llvm.dbg.value(metadata i32 %neq, i64 0, metadata !97, metadata !176), !dbg !594
  tail call void @llvm.dbg.value(metadata i32 %len, i64 0, metadata !98, metadata !176), !dbg !595
  tail call void @llvm.dbg.value(metadata i32* %ia, i64 0, metadata !99, metadata !176), !dbg !596
  tail call void @llvm.dbg.value(metadata i32* %iz, i64 0, metadata !100, metadata !176), !dbg !597
  tail call void @llvm.dbg.value(metadata double %alpha, i64 0, metadata !101, metadata !176), !dbg !598
  tail call void @llvm.dbg.value(metadata i32 %precFlg, i64 0, metadata !102, metadata !176), !dbg !599
  tail call void @llvm.dbg.value(metadata double* %C, i64 0, metadata !103, metadata !176), !dbg !600
  tail call void @llvm.dbg.value(metadata i32* %ier, i64 0, metadata !104, metadata !176), !dbg !601
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !105, metadata !176), !dbg !602
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !106, metadata !176), !dbg !603
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !107, metadata !176), !dbg !604
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !108, metadata !176), !dbg !605
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !109, metadata !176), !dbg !606
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !110, metadata !176), !dbg !607
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !111, metadata !176), !dbg !608
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !112, metadata !176), !dbg !609
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !113, metadata !176), !dbg !610
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !114, metadata !176), !dbg !611
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !115, metadata !176), !dbg !612
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !116, metadata !176), !dbg !613
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !117, metadata !176), !dbg !614
  %1 = fadd double %alpha, 1.000000e+00, !dbg !615
  %2 = fdiv double 1.000000e+00, %1, !dbg !616
  tail call void @llvm.dbg.value(metadata double %2, i64 0, metadata !118, metadata !176), !dbg !617
  %3 = bitcast double* %A to i64*, !dbg !618
  %4 = load i64* %3, align 8, !dbg !618, !tbaa !242
  %5 = bitcast double* %C to i64*, !dbg !619
  store i64 %4, i64* %5, align 8, !dbg !619, !tbaa !242
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !105, metadata !176), !dbg !602
  %6 = icmp sgt i32 %neq, 1, !dbg !620
  br i1 %6, label %.lr.ph16, label %._crit_edge8, !dbg !623

.lr.ph16:                                         ; preds = %0
  %7 = add i32 %neq, -1, !dbg !623
  %.pre = load i32* %iz, align 4, !dbg !624, !tbaa !205
  br label %9, !dbg !623

.preheader:                                       ; preds = %._crit_edge13
  br i1 %6, label %.lr.ph7, label %._crit_edge8, !dbg !626

.lr.ph7:                                          ; preds = %.preheader
  %8 = sext i32 %neq to i64, !dbg !626
  %.pre33 = load i32* %iz, align 4, !dbg !628, !tbaa !205
  br label %27, !dbg !626

; <label>:9                                       ; preds = %._crit_edge13, %.lr.ph16
  %10 = phi i32 [ %.pre, %.lr.ph16 ], [ %12, %._crit_edge13 ], !dbg !631
  %indvars.iv30 = phi i64 [ 1, %.lr.ph16 ], [ %indvars.iv.next31, %._crit_edge13 ]
  %11 = getelementptr inbounds i32* %iz, i64 %indvars.iv30, !dbg !632
  %12 = load i32* %11, align 4, !dbg !632, !tbaa !205
  tail call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !108, metadata !176), !dbg !605
  %13 = sext i32 %12 to i64, !dbg !633
  %14 = getelementptr inbounds double* %A, i64 %13, !dbg !633
  %15 = bitcast double* %14 to i64*, !dbg !633
  %16 = load i64* %15, align 8, !dbg !633, !tbaa !242
  %17 = getelementptr inbounds double* %C, i64 %13, !dbg !634
  %18 = bitcast double* %17 to i64*, !dbg !635
  store i64 %16, i64* %18, align 8, !dbg !635, !tbaa !242
  %j.09 = add i32 %10, 1, !dbg !636
  %19 = icmp slt i32 %j.09, %12, !dbg !637
  br i1 %19, label %.lr.ph12, label %._crit_edge13, !dbg !640

.lr.ph12:                                         ; preds = %9
  %20 = sext i32 %j.09 to i64
  %21 = add i32 %12, -1, !dbg !640
  br label %22, !dbg !640

; <label>:22                                      ; preds = %22, %.lr.ph12
  %indvars.iv26 = phi i64 [ %20, %.lr.ph12 ], [ %indvars.iv.next27, %22 ]
  %j.010 = phi i32 [ %j.09, %.lr.ph12 ], [ %j.0, %22 ]
  %23 = getelementptr inbounds double* %A, i64 %indvars.iv26, !dbg !641
  %24 = load double* %23, align 8, !dbg !641, !tbaa !242
  %25 = fmul double %2, %24, !dbg !642
  %26 = getelementptr inbounds double* %C, i64 %indvars.iv26, !dbg !643
  store double %25, double* %26, align 8, !dbg !644, !tbaa !242
  %j.0 = add nsw i32 %j.010, 1, !dbg !636
  %indvars.iv.next27 = add nsw i64 %indvars.iv26, 1, !dbg !640
  %exitcond29 = icmp eq i32 %j.010, %21, !dbg !640
  br i1 %exitcond29, label %._crit_edge13, label %22, !dbg !640

._crit_edge13:                                    ; preds = %22, %9
  %indvars.iv.next31 = add nuw nsw i64 %indvars.iv30, 1, !dbg !623
  %lftr.wideiv = trunc i64 %indvars.iv30 to i32, !dbg !623
  %exitcond32 = icmp eq i32 %lftr.wideiv, %7, !dbg !623
  br i1 %exitcond32, label %.preheader, label %9, !dbg !623

; <label>:27                                      ; preds = %.lr.ph7, %83
  %28 = phi i32 [ %.pre33, %.lr.ph7 ], [ %31, %83 ]
  %indvars.iv24 = phi i64 [ 1, %.lr.ph7 ], [ %indvars.iv.next25, %83 ]
  %29 = add i32 %28, 1, !dbg !645
  tail call void @llvm.dbg.value(metadata i32 %29, i64 0, metadata !107, metadata !176), !dbg !604
  %30 = getelementptr inbounds i32* %iz, i64 %indvars.iv24, !dbg !646
  %31 = load i32* %30, align 4, !dbg !646, !tbaa !205
  tail call void @llvm.dbg.value(metadata i32 %31, i64 0, metadata !108, metadata !176), !dbg !605
  tail call void @llvm.dbg.value(metadata i32 %29, i64 0, metadata !106, metadata !176), !dbg !603
  %32 = icmp slt i32 %29, %31, !dbg !647
  br i1 %32, label %.lr.ph5, label %._crit_edge35, !dbg !650

._crit_edge35:                                    ; preds = %27
  %.pre36 = sext i32 %31 to i64, !dbg !651
  br label %._crit_edge, !dbg !650

.lr.ph5:                                          ; preds = %27
  %33 = add i32 %28, 2, !dbg !650
  %34 = sext i32 %33 to i64
  %35 = sext i32 %31 to i64, !dbg !650
  %36 = sext i32 %29 to i64
  %37 = add i32 %31, -1, !dbg !650
  br label %.lr.ph, !dbg !650

.loopexit1:                                       ; preds = %.loopexit
  %indvars.iv.next19 = add nsw i64 %indvars.iv18, 1, !dbg !650
  %indvars.iv.next23 = add nsw i64 %indvars.iv22, 1, !dbg !650
  %exitcond = icmp eq i32 %j.14, %37, !dbg !650
  br i1 %exitcond, label %._crit_edge, label %.lr.ph, !dbg !650

.lr.ph:                                           ; preds = %.lr.ph5, %.loopexit1
  %indvars.iv22 = phi i64 [ %36, %.lr.ph5 ], [ %indvars.iv.next23, %.loopexit1 ]
  %indvars.iv18 = phi i64 [ %34, %.lr.ph5 ], [ %indvars.iv.next19, %.loopexit1 ]
  %j.14 = phi i32 [ %29, %.lr.ph5 ], [ %49, %.loopexit1 ]
  %38 = getelementptr inbounds i32* %ia, i64 %indvars.iv22, !dbg !653
  %39 = load i32* %38, align 4, !dbg !653, !tbaa !205
  %40 = sext i32 %39 to i64, !dbg !655
  %41 = getelementptr inbounds i32* %iz, i64 %40, !dbg !655
  %42 = load i32* %41, align 4, !dbg !655, !tbaa !205
  %43 = sext i32 %42 to i64, !dbg !656
  %44 = getelementptr inbounds double* %C, i64 %43, !dbg !656
  %45 = load double* %44, align 8, !dbg !656, !tbaa !242
  %46 = getelementptr inbounds double* %C, i64 %indvars.iv22, !dbg !657
  %47 = load double* %46, align 8, !dbg !658, !tbaa !242
  %48 = fdiv double %47, %45, !dbg !658
  store double %48, double* %46, align 8, !dbg !658, !tbaa !242
  %49 = add nsw i32 %j.14, 1, !dbg !659
  tail call void @llvm.dbg.value(metadata i32 %49, i64 0, metadata !110, metadata !176), !dbg !607
  tail call void @llvm.dbg.value(metadata i32 %31, i64 0, metadata !111, metadata !176), !dbg !608
  tail call void @llvm.dbg.value(metadata i32 %49, i64 0, metadata !109, metadata !176), !dbg !606
  br label %50, !dbg !660

; <label>:50                                      ; preds = %.loopexit, %.lr.ph
  %indvars.iv20 = phi i64 [ %indvars.iv.next21, %.loopexit ], [ %indvars.iv18, %.lr.ph ]
  %51 = getelementptr inbounds i32* %ia, i64 %indvars.iv20, !dbg !662
  %52 = load i32* %51, align 4, !dbg !662, !tbaa !205
  tail call void @llvm.dbg.value(metadata i32 %52, i64 0, metadata !117, metadata !176), !dbg !614
  %53 = add nsw i32 %52, -1, !dbg !665
  %54 = sext i32 %53 to i64, !dbg !666
  %55 = getelementptr inbounds i32* %iz, i64 %54, !dbg !666
  %56 = load i32* %55, align 4, !dbg !666, !tbaa !205
  %57 = sext i32 %52 to i64, !dbg !667
  %58 = getelementptr inbounds i32* %iz, i64 %57, !dbg !667
  %59 = load i32* %58, align 4, !dbg !667, !tbaa !205
  tail call void @llvm.dbg.value(metadata i32 %59, i64 0, metadata !114, metadata !176), !dbg !611
  %60 = sext i32 %56 to i64
  %61 = sext i32 %59 to i64, !dbg !668
  br label %62, !dbg !668

; <label>:62                                      ; preds = %69, %50
  %indvars.iv = phi i64 [ %indvars.iv.next, %69 ], [ %60, %50 ]
  %l.0.in = phi i32 [ %l.0, %69 ], [ %56, %50 ]
  %l.0 = add nsw i32 %l.0.in, 1, !dbg !670
  %63 = icmp slt i64 %indvars.iv, %61, !dbg !671
  br i1 %63, label %64, label %.loopexit, !dbg !673

; <label>:64                                      ; preds = %62
  %65 = sext i32 %l.0 to i64, !dbg !674
  %66 = getelementptr inbounds i32* %ia, i64 %65, !dbg !674
  %67 = load i32* %66, align 4, !dbg !674, !tbaa !205
  %68 = icmp sgt i32 %67, %39, !dbg !677
  br i1 %68, label %.loopexit, label %69, !dbg !678

; <label>:69                                      ; preds = %64
  %70 = icmp slt i32 %67, %39, !dbg !679
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !681
  br i1 %70, label %62, label %71, !dbg !681

; <label>:71                                      ; preds = %69
  %72 = load double* %46, align 8, !dbg !682, !tbaa !242
  %73 = getelementptr inbounds double* %C, i64 %65, !dbg !683
  %74 = load double* %73, align 8, !dbg !683, !tbaa !242
  %75 = fmul double %72, %74, !dbg !684
  %76 = getelementptr inbounds double* %C, i64 %indvars.iv20, !dbg !685
  %77 = load double* %76, align 8, !dbg !686, !tbaa !242
  %78 = fsub double %77, %75, !dbg !686
  store double %78, double* %76, align 8, !dbg !686, !tbaa !242
  br label %.loopexit, !dbg !687

.loopexit:                                        ; preds = %62, %64, %71
  %79 = icmp slt i64 %indvars.iv20, %35, !dbg !688
  %indvars.iv.next21 = add nsw i64 %indvars.iv20, 1, !dbg !660
  br i1 %79, label %50, label %.loopexit1, !dbg !660

._crit_edge:                                      ; preds = %.loopexit1, %._crit_edge35
  %.pre-phi = phi i64 [ %.pre36, %._crit_edge35 ], [ %35, %.loopexit1 ], !dbg !651
  tail call void @llvm.dbg.value(metadata i32 %31, i64 0, metadata !115, metadata !176), !dbg !612
  %80 = getelementptr inbounds double* %C, i64 %.pre-phi, !dbg !651
  %81 = load double* %80, align 8, !dbg !651, !tbaa !242
  %82 = fcmp olt double %81, 1.000000e-06, !dbg !689
  br i1 %82, label %.loopexit2, label %83, !dbg !690

; <label>:83                                      ; preds = %._crit_edge
  %84 = tail call double @sqrt(double %81) #8, !dbg !691
  store double %84, double* %80, align 8, !dbg !692, !tbaa !242
  %indvars.iv.next25 = add nuw nsw i64 %indvars.iv24, 1, !dbg !626
  %85 = icmp slt i64 %indvars.iv.next25, %8, !dbg !693
  br i1 %85, label %27, label %._crit_edge8, !dbg !626

._crit_edge8:                                     ; preds = %83, %0, %.preheader
  store i32 1, i32* %ier, align 4, !dbg !694, !tbaa !205
  br label %.loopexit2, !dbg !695

.loopexit2:                                       ; preds = %._crit_edge, %._crit_edge8
  ret void, !dbg !696
}
