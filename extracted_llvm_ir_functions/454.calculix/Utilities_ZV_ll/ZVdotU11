define void @ZVdotU11(i32 %n, double* nocapture %y0, double* nocapture %x0, double* nocapture %sums) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %n}, i64 0, metadata !562), !dbg !1423
  tail call void @llvm.dbg.value(metadata !{double* %y0}, i64 0, metadata !563), !dbg !1424
  tail call void @llvm.dbg.value(metadata !{double* %x0}, i64 0, metadata !564), !dbg !1425
  tail call void @llvm.dbg.value(metadata !{double* %sums}, i64 0, metadata !565), !dbg !1426
  tail call void @llvm.dbg.value(metadata !1235, i64 0, metadata !567), !dbg !1427
  tail call void @llvm.dbg.value(metadata !1235, i64 0, metadata !566), !dbg !1427
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !574), !dbg !1428
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !572), !dbg !1428
  tail call void @llvm.dbg.value(metadata !1239, i64 0, metadata !573), !dbg !1428
  %cmp30 = icmp sgt i32 %n, 0, !dbg !1428
  br i1 %cmp30, label %for.body, label %for.end, !dbg !1428

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv37 = phi i64 [ %indvars.iv.next38, %for.body ], [ 1, %entry ], !dbg !1428
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %ii.033 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %i00.032 = phi double [ %add11, %for.body ], [ 0.000000e+00, %entry ]
  %r00.031 = phi double [ %add, %for.body ], [ 0.000000e+00, %entry ]
  %arrayidx = getelementptr inbounds double* %y0, i64 %indvars.iv, !dbg !1430
  %0 = load double* %arrayidx, align 8, !dbg !1430, !tbaa !861
  tail call void @llvm.dbg.value(metadata !{double %0}, i64 0, metadata !571), !dbg !1430
  %arrayidx2 = getelementptr inbounds double* %y0, i64 %indvars.iv37, !dbg !1430
  %1 = load double* %arrayidx2, align 8, !dbg !1430, !tbaa !861
  tail call void @llvm.dbg.value(metadata !{double %1}, i64 0, metadata !570), !dbg !1430
  %arrayidx4 = getelementptr inbounds double* %x0, i64 %indvars.iv, !dbg !1432
  %2 = load double* %arrayidx4, align 8, !dbg !1432, !tbaa !861
  tail call void @llvm.dbg.value(metadata !{double %2}, i64 0, metadata !569), !dbg !1432
  %arrayidx6 = getelementptr inbounds double* %x0, i64 %indvars.iv37, !dbg !1432
  %3 = load double* %arrayidx6, align 8, !dbg !1432, !tbaa !861
  tail call void @llvm.dbg.value(metadata !{double %3}, i64 0, metadata !568), !dbg !1432
  %mul = fmul double %0, %2, !dbg !1433
  %mul7 = fmul double %1, %3, !dbg !1433
  %sub = fsub double %mul, %mul7, !dbg !1433
  %add = fadd double %r00.031, %sub, !dbg !1433
  tail call void @llvm.dbg.value(metadata !{double %add}, i64 0, metadata !567), !dbg !1433
  %mul8 = fmul double %0, %3, !dbg !1433
  %mul9 = fmul double %1, %2, !dbg !1433
  %add10 = fadd double %mul9, %mul8, !dbg !1433
  %add11 = fadd double %i00.032, %add10, !dbg !1433
  tail call void @llvm.dbg.value(metadata !{double %add11}, i64 0, metadata !566), !dbg !1433
  %inc = add nsw i32 %ii.033, 1, !dbg !1428
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !572), !dbg !1428
  %indvars.iv.next = add i64 %indvars.iv, 2, !dbg !1428
  %indvars.iv.next38 = add i64 %indvars.iv37, 2, !dbg !1428
  %exitcond = icmp eq i32 %inc, %n, !dbg !1428
  br i1 %exitcond, label %for.end, label %for.body, !dbg !1428

for.end:                                          ; preds = %for.body, %entry
  %i00.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add11, %for.body ]
  %r00.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add, %for.body ]
  store double %r00.0.lcssa, double* %sums, align 8, !dbg !1434, !tbaa !861
  %arrayidx15 = getelementptr inbounds double* %sums, i64 1, !dbg !1434
  store double %i00.0.lcssa, double* %arrayidx15, align 8, !dbg !1434, !tbaa !861
  ret void, !dbg !1435
}
