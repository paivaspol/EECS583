define void @ZVscale(i32 %size, double* %y, double %areal, double %aimag) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %size}, i64 0, metadata !145), !dbg !1042
  tail call void @llvm.dbg.value(metadata !{double* %y}, i64 0, metadata !146), !dbg !1043
  tail call void @llvm.dbg.value(metadata !{double %areal}, i64 0, metadata !147), !dbg !1044
  tail call void @llvm.dbg.value(metadata !{double %aimag}, i64 0, metadata !148), !dbg !1045
  %cmp = icmp slt i32 %size, 0, !dbg !1046
  %cmp1 = icmp eq double* %y, null, !dbg !1046
  %or.cond = or i1 %cmp, %cmp1, !dbg !1046
  br i1 %or.cond, label %if.then, label %for.cond.preheader, !dbg !1046

for.cond.preheader:                               ; preds = %entry
  %cmp234 = icmp sgt i32 %size, 0, !dbg !1047
  br i1 %cmp234, label %for.body, label %for.end, !dbg !1047

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !1049, !tbaa !925
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([50 x i8]* @.str8, i64 0, i64 0), i32 %size, double* %y, double %areal, double %aimag) #6, !dbg !1049
  tail call void @exit(i32 -1) #8, !dbg !1051
  unreachable, !dbg !1051

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %ii.035 = phi i32 [ %inc, %for.body ], [ 0, %for.cond.preheader ]
  %arrayidx = getelementptr inbounds double* %y, i64 %indvars.iv, !dbg !1052
  %1 = load double* %arrayidx, align 8, !dbg !1052, !tbaa !861
  tail call void @llvm.dbg.value(metadata !{double %1}, i64 0, metadata !150), !dbg !1052
  %2 = or i64 %indvars.iv, 1, !dbg !1054
  %arrayidx4 = getelementptr inbounds double* %y, i64 %2, !dbg !1054
  %3 = load double* %arrayidx4, align 8, !dbg !1054, !tbaa !861
  tail call void @llvm.dbg.value(metadata !{double %3}, i64 0, metadata !149), !dbg !1054
  %mul = fmul double %1, %areal, !dbg !1055
  %mul5 = fmul double %3, %aimag, !dbg !1055
  %sub = fsub double %mul, %mul5, !dbg !1055
  store double %sub, double* %arrayidx, align 8, !dbg !1055, !tbaa !861
  %mul8 = fmul double %3, %areal, !dbg !1056
  %mul9 = fmul double %1, %aimag, !dbg !1056
  %add10 = fadd double %mul9, %mul8, !dbg !1056
  store double %add10, double* %arrayidx4, align 8, !dbg !1056, !tbaa !861
  %inc = add nsw i32 %ii.035, 1, !dbg !1047
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !151), !dbg !1047
  %indvars.iv.next = add i64 %indvars.iv, 2, !dbg !1047
  %exitcond = icmp eq i32 %inc, %size, !dbg !1047
  br i1 %exitcond, label %for.end, label %for.body, !dbg !1047

for.end:                                          ; preds = %for.body, %for.cond.preheader
  ret void, !dbg !1057
}
