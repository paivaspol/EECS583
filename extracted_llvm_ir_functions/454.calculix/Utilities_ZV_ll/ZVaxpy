define void @ZVaxpy(i32 %size, double* %y, double %areal, double %aimag, double* %x) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %size}, i64 0, metadata !132), !dbg !1025
  tail call void @llvm.dbg.value(metadata !{double* %y}, i64 0, metadata !133), !dbg !1026
  tail call void @llvm.dbg.value(metadata !{double %areal}, i64 0, metadata !134), !dbg !1027
  tail call void @llvm.dbg.value(metadata !{double %aimag}, i64 0, metadata !135), !dbg !1028
  tail call void @llvm.dbg.value(metadata !{double* %x}, i64 0, metadata !136), !dbg !1029
  %cmp = icmp slt i32 %size, 0, !dbg !1030
  %cmp1 = icmp eq double* %y, null, !dbg !1030
  %or.cond = or i1 %cmp, %cmp1, !dbg !1030
  %cmp3 = icmp eq double* %x, null, !dbg !1030
  %or.cond39 = or i1 %or.cond, %cmp3, !dbg !1030
  br i1 %or.cond39, label %if.then, label %for.cond.preheader, !dbg !1030

for.cond.preheader:                               ; preds = %entry
  %cmp440 = icmp sgt i32 %size, 0, !dbg !1031
  br i1 %cmp440, label %for.body, label %for.end, !dbg !1031

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !1033, !tbaa !925
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([52 x i8]* @.str7, i64 0, i64 0), i32 %size, double* %y, double %areal, double %aimag, double* %x) #6, !dbg !1033
  tail call void @exit(i32 -1) #8, !dbg !1035
  unreachable, !dbg !1035

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %ii.041 = phi i32 [ %inc, %for.body ], [ 0, %for.cond.preheader ]
  %arrayidx = getelementptr inbounds double* %x, i64 %indvars.iv, !dbg !1036
  %1 = load double* %arrayidx, align 8, !dbg !1036, !tbaa !861
  tail call void @llvm.dbg.value(metadata !{double %1}, i64 0, metadata !138), !dbg !1036
  %2 = or i64 %indvars.iv, 1, !dbg !1038
  %arrayidx6 = getelementptr inbounds double* %x, i64 %2, !dbg !1038
  %3 = load double* %arrayidx6, align 8, !dbg !1038, !tbaa !861
  tail call void @llvm.dbg.value(metadata !{double %3}, i64 0, metadata !137), !dbg !1038
  %mul = fmul double %1, %areal, !dbg !1039
  %mul7 = fmul double %3, %aimag, !dbg !1039
  %sub = fsub double %mul, %mul7, !dbg !1039
  %arrayidx9 = getelementptr inbounds double* %y, i64 %indvars.iv, !dbg !1039
  %4 = load double* %arrayidx9, align 8, !dbg !1039, !tbaa !861
  %add10 = fadd double %4, %sub, !dbg !1039
  store double %add10, double* %arrayidx9, align 8, !dbg !1039, !tbaa !861
  %mul11 = fmul double %3, %areal, !dbg !1040
  %mul12 = fmul double %1, %aimag, !dbg !1040
  %add13 = fadd double %mul12, %mul11, !dbg !1040
  %arrayidx16 = getelementptr inbounds double* %y, i64 %2, !dbg !1040
  %5 = load double* %arrayidx16, align 8, !dbg !1040, !tbaa !861
  %add17 = fadd double %5, %add13, !dbg !1040
  store double %add17, double* %arrayidx16, align 8, !dbg !1040, !tbaa !861
  %inc = add nsw i32 %ii.041, 1, !dbg !1031
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !139), !dbg !1031
  %indvars.iv.next = add i64 %indvars.iv, 2, !dbg !1031
  %exitcond = icmp eq i32 %inc, %size, !dbg !1031
  br i1 %exitcond, label %for.end, label %for.body, !dbg !1031

for.end:                                          ; preds = %for.body, %for.cond.preheader
  ret void, !dbg !1041
}
