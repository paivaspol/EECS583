define i32 @Zrecip(double %areal, double %aimag, double* nocapture %pbreal, double* nocapture %pbimag) #0 {
entry:
  %cmp = fcmp oeq double %areal, 0.000000e+00
  %cmp1 = fcmp oeq double %aimag, 0.000000e+00
  %or.cond = and i1 %cmp, %cmp1
  br i1 %or.cond, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call = tail call double @fabs(double %areal) #4
  %call2 = tail call double @fabs(double %aimag) #4
  %cmp3 = fcmp ult double %call, %call2
  br i1 %cmp3, label %if.else, label %if.then4

if.then4:                                         ; preds = %if.end
  %div = fdiv double %aimag, %areal
  %mul = fmul double %div, %aimag
  %add = fadd double %mul, %areal
  %div5 = fdiv double 1.000000e+00, %add
  %0 = fmul double %div, %div5
  %mul6 = fsub double -0.000000e+00, %0
  br label %if.end13

if.else:                                          ; preds = %if.end
  %div7 = fdiv double %areal, %aimag
  %mul8 = fmul double %div7, %areal
  %add9 = fadd double %mul8, %aimag
  %div10 = fdiv double -1.000000e+00, %add9
  %1 = fmul double %div7, %div10
  %mul12 = fsub double -0.000000e+00, %1
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then4
  %bimag.0 = phi double [ %mul6, %if.then4 ], [ %div10, %if.else ]
  %breal.0 = phi double [ %div5, %if.then4 ], [ %mul12, %if.else ]
  store double %breal.0, double* %pbreal, align 8, !tbaa !0
  store double %bimag.0, double* %pbimag, align 8, !tbaa !0
  br label %return

return:                                           ; preds = %entry, %if.end13
  %retval.0 = phi i32 [ 1, %if.end13 ], [ 0, %entry ]
  ret i32 %retval.0
}
