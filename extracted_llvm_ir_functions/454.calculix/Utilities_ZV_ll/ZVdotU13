define void @ZVdotU13(i32 %n, double* nocapture %y0, double* nocapture %x0, double* nocapture %x1, double* nocapture %x2, double* nocapture %sums) #0 {
entry:
  %cmp84 = icmp sgt i32 %n, 0
  br i1 %cmp84, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv99 = phi i64 [ %indvars.iv.next100, %for.body ], [ 1, %entry ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %ii.091 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %i00.090 = phi double [ %add19, %for.body ], [ 0.000000e+00, %entry ]
  %i01.089 = phi double [ %add27, %for.body ], [ 0.000000e+00, %entry ]
  %i02.088 = phi double [ %add35, %for.body ], [ 0.000000e+00, %entry ]
  %r00.087 = phi double [ %add, %for.body ], [ 0.000000e+00, %entry ]
  %r01.086 = phi double [ %add23, %for.body ], [ 0.000000e+00, %entry ]
  %r02.085 = phi double [ %add31, %for.body ], [ 0.000000e+00, %entry ]
  %arrayidx = getelementptr inbounds double* %y0, i64 %indvars.iv
  %0 = load double* %arrayidx, align 8, !tbaa !0
  %arrayidx2 = getelementptr inbounds double* %y0, i64 %indvars.iv99
  %1 = load double* %arrayidx2, align 8, !tbaa !0
  %arrayidx4 = getelementptr inbounds double* %x0, i64 %indvars.iv
  %2 = load double* %arrayidx4, align 8, !tbaa !0
  %arrayidx6 = getelementptr inbounds double* %x0, i64 %indvars.iv99
  %3 = load double* %arrayidx6, align 8, !tbaa !0
  %arrayidx8 = getelementptr inbounds double* %x1, i64 %indvars.iv
  %4 = load double* %arrayidx8, align 8, !tbaa !0
  %arrayidx10 = getelementptr inbounds double* %x1, i64 %indvars.iv99
  %5 = load double* %arrayidx10, align 8, !tbaa !0
  %arrayidx12 = getelementptr inbounds double* %x2, i64 %indvars.iv
  %6 = load double* %arrayidx12, align 8, !tbaa !0
  %arrayidx14 = getelementptr inbounds double* %x2, i64 %indvars.iv99
  %7 = load double* %arrayidx14, align 8, !tbaa !0
  %mul = fmul double %0, %2
  %mul15 = fmul double %1, %3
  %sub = fsub double %mul, %mul15
  %add = fadd double %r00.087, %sub
  %mul16 = fmul double %0, %3
  %mul17 = fmul double %1, %2
  %add18 = fadd double %mul17, %mul16
  %add19 = fadd double %i00.090, %add18
  %mul20 = fmul double %0, %4
  %mul21 = fmul double %1, %5
  %sub22 = fsub double %mul20, %mul21
  %add23 = fadd double %r01.086, %sub22
  %mul24 = fmul double %0, %5
  %mul25 = fmul double %1, %4
  %add26 = fadd double %mul25, %mul24
  %add27 = fadd double %i01.089, %add26
  %mul28 = fmul double %0, %6
  %mul29 = fmul double %1, %7
  %sub30 = fsub double %mul28, %mul29
  %add31 = fadd double %r02.085, %sub30
  %mul32 = fmul double %0, %7
  %mul33 = fmul double %1, %6
  %add34 = fadd double %mul33, %mul32
  %add35 = fadd double %i02.088, %add34
  %inc = add nsw i32 %ii.091, 1
  %indvars.iv.next = add i64 %indvars.iv, 2
  %indvars.iv.next100 = add i64 %indvars.iv99, 2
  %exitcond = icmp eq i32 %inc, %n
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %i00.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add19, %for.body ]
  %i01.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add27, %for.body ]
  %i02.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add35, %for.body ]
  %r00.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add, %for.body ]
  %r01.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add23, %for.body ]
  %r02.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add31, %for.body ]
  store double %r00.0.lcssa, double* %sums, align 8, !tbaa !0
  %arrayidx39 = getelementptr inbounds double* %sums, i64 1
  store double %i00.0.lcssa, double* %arrayidx39, align 8, !tbaa !0
  %arrayidx40 = getelementptr inbounds double* %sums, i64 2
  store double %r01.0.lcssa, double* %arrayidx40, align 8, !tbaa !0
  %arrayidx41 = getelementptr inbounds double* %sums, i64 3
  store double %i01.0.lcssa, double* %arrayidx41, align 8, !tbaa !0
  %arrayidx42 = getelementptr inbounds double* %sums, i64 4
  store double %r02.0.lcssa, double* %arrayidx42, align 8, !tbaa !0
  %arrayidx43 = getelementptr inbounds double* %sums, i64 5
  store double %i02.0.lcssa, double* %arrayidx43, align 8, !tbaa !0
  ret void
}
