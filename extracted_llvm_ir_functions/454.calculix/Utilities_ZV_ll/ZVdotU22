define void @ZVdotU22(i32 %n, double* nocapture %y0, double* nocapture %y1, double* nocapture %x0, double* nocapture %x1, double* nocapture %sums) #0 {
entry:
  %cmp106 = icmp sgt i32 %n, 0
  br i1 %cmp106, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv125 = phi i64 [ %indvars.iv.next126, %for.body ], [ 1, %entry ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %ii.0115 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %i00.0114 = phi double [ %add19, %for.body ], [ 0.000000e+00, %entry ]
  %i01.0113 = phi double [ %add27, %for.body ], [ 0.000000e+00, %entry ]
  %i10.0112 = phi double [ %add35, %for.body ], [ 0.000000e+00, %entry ]
  %i11.0111 = phi double [ %add43, %for.body ], [ 0.000000e+00, %entry ]
  %r00.0110 = phi double [ %add, %for.body ], [ 0.000000e+00, %entry ]
  %r01.0109 = phi double [ %add23, %for.body ], [ 0.000000e+00, %entry ]
  %r10.0108 = phi double [ %add31, %for.body ], [ 0.000000e+00, %entry ]
  %r11.0107 = phi double [ %add39, %for.body ], [ 0.000000e+00, %entry ]
  %arrayidx = getelementptr inbounds double* %y0, i64 %indvars.iv
  %0 = load double* %arrayidx, align 8, !tbaa !0
  %arrayidx2 = getelementptr inbounds double* %y0, i64 %indvars.iv125
  %1 = load double* %arrayidx2, align 8, !tbaa !0
  %arrayidx4 = getelementptr inbounds double* %y1, i64 %indvars.iv
  %2 = load double* %arrayidx4, align 8, !tbaa !0
  %arrayidx6 = getelementptr inbounds double* %y1, i64 %indvars.iv125
  %3 = load double* %arrayidx6, align 8, !tbaa !0
  %arrayidx8 = getelementptr inbounds double* %x0, i64 %indvars.iv
  %4 = load double* %arrayidx8, align 8, !tbaa !0
  %arrayidx10 = getelementptr inbounds double* %x0, i64 %indvars.iv125
  %5 = load double* %arrayidx10, align 8, !tbaa !0
  %arrayidx12 = getelementptr inbounds double* %x1, i64 %indvars.iv
  %6 = load double* %arrayidx12, align 8, !tbaa !0
  %arrayidx14 = getelementptr inbounds double* %x1, i64 %indvars.iv125
  %7 = load double* %arrayidx14, align 8, !tbaa !0
  %mul = fmul double %0, %4
  %mul15 = fmul double %1, %5
  %sub = fsub double %mul, %mul15
  %add = fadd double %r00.0110, %sub
  %mul16 = fmul double %0, %5
  %mul17 = fmul double %1, %4
  %add18 = fadd double %mul17, %mul16
  %add19 = fadd double %i00.0114, %add18
  %mul20 = fmul double %0, %6
  %mul21 = fmul double %1, %7
  %sub22 = fsub double %mul20, %mul21
  %add23 = fadd double %r01.0109, %sub22
  %mul24 = fmul double %0, %7
  %mul25 = fmul double %1, %6
  %add26 = fadd double %mul25, %mul24
  %add27 = fadd double %i01.0113, %add26
  %mul28 = fmul double %2, %4
  %mul29 = fmul double %3, %5
  %sub30 = fsub double %mul28, %mul29
  %add31 = fadd double %r10.0108, %sub30
  %mul32 = fmul double %2, %5
  %mul33 = fmul double %3, %4
  %add34 = fadd double %mul33, %mul32
  %add35 = fadd double %i10.0112, %add34
  %mul36 = fmul double %2, %6
  %mul37 = fmul double %3, %7
  %sub38 = fsub double %mul36, %mul37
  %add39 = fadd double %r11.0107, %sub38
  %mul40 = fmul double %2, %7
  %mul41 = fmul double %3, %6
  %add42 = fadd double %mul41, %mul40
  %add43 = fadd double %i11.0111, %add42
  %inc = add nsw i32 %ii.0115, 1
  %indvars.iv.next = add i64 %indvars.iv, 2
  %indvars.iv.next126 = add i64 %indvars.iv125, 2
  %exitcond = icmp eq i32 %inc, %n
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %i00.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add19, %for.body ]
  %i01.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add27, %for.body ]
  %i10.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add35, %for.body ]
  %i11.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add43, %for.body ]
  %r00.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add, %for.body ]
  %r01.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add23, %for.body ]
  %r10.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add31, %for.body ]
  %r11.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add39, %for.body ]
  store double %r00.0.lcssa, double* %sums, align 8, !tbaa !0
  %arrayidx47 = getelementptr inbounds double* %sums, i64 1
  store double %i00.0.lcssa, double* %arrayidx47, align 8, !tbaa !0
  %arrayidx48 = getelementptr inbounds double* %sums, i64 2
  store double %r01.0.lcssa, double* %arrayidx48, align 8, !tbaa !0
  %arrayidx49 = getelementptr inbounds double* %sums, i64 3
  store double %i01.0.lcssa, double* %arrayidx49, align 8, !tbaa !0
  %arrayidx50 = getelementptr inbounds double* %sums, i64 4
  store double %r10.0.lcssa, double* %arrayidx50, align 8, !tbaa !0
  %arrayidx51 = getelementptr inbounds double* %sums, i64 5
  store double %i10.0.lcssa, double* %arrayidx51, align 8, !tbaa !0
  %arrayidx52 = getelementptr inbounds double* %sums, i64 6
  store double %r11.0.lcssa, double* %arrayidx52, align 8, !tbaa !0
  %arrayidx53 = getelementptr inbounds double* %sums, i64 7
  store double %i11.0.lcssa, double* %arrayidx53, align 8, !tbaa !0
  ret void
}
