define void @ZVdotC31(i32 %n, double* nocapture readonly %y0, double* nocapture readonly %y1, double* nocapture readonly %y2, double* nocapture readonly %x0, double* nocapture %sums) #2 {
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !665, metadata !841), !dbg !2404
  tail call void @llvm.dbg.value(metadata double* %y0, i64 0, metadata !666, metadata !841), !dbg !2405
  tail call void @llvm.dbg.value(metadata double* %y1, i64 0, metadata !667, metadata !841), !dbg !2406
  tail call void @llvm.dbg.value(metadata double* %y2, i64 0, metadata !668, metadata !841), !dbg !2407
  tail call void @llvm.dbg.value(metadata double* %x0, i64 0, metadata !669, metadata !841), !dbg !2408
  tail call void @llvm.dbg.value(metadata double* %sums, i64 0, metadata !670, metadata !841), !dbg !2409
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !676, metadata !841), !dbg !2410
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !675, metadata !841), !dbg !2411
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !674, metadata !841), !dbg !2412
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !673, metadata !841), !dbg !2413
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !672, metadata !841), !dbg !2414
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !671, metadata !841), !dbg !2415
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !687, metadata !841), !dbg !2416
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !685, metadata !841), !dbg !2417
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !686, metadata !841), !dbg !2418
  %1 = icmp sgt i32 %n, 0, !dbg !2419
  br i1 %1, label %.lr.ph, label %._crit_edge, !dbg !2422

.lr.ph:                                           ; preds = %0
  %2 = add i32 %n, -1, !dbg !2422
  br label %3, !dbg !2422

; <label>:3                                       ; preds = %3, %.lr.ph
  %indvars.iv20 = phi i64 [ 1, %.lr.ph ], [ %indvars.iv.next21, %3 ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %3 ]
  %ii.07 = phi i32 [ 0, %.lr.ph ], [ %53, %3 ]
  %4 = phi <2 x double> [ zeroinitializer, %.lr.ph ], [ %32, %3 ]
  %5 = phi <2 x double> [ zeroinitializer, %.lr.ph ], [ %42, %3 ]
  %6 = phi <2 x double> [ zeroinitializer, %.lr.ph ], [ %52, %3 ]
  %7 = getelementptr inbounds double* %y0, i64 %indvars.iv, !dbg !2423
  %8 = load double* %7, align 8, !dbg !2423, !tbaa !907
  tail call void @llvm.dbg.value(metadata double %8, i64 0, metadata !682, metadata !841), !dbg !2425
  %9 = getelementptr inbounds double* %y0, i64 %indvars.iv20, !dbg !2426
  %10 = load double* %9, align 8, !dbg !2426, !tbaa !907
  tail call void @llvm.dbg.value(metadata double %10, i64 0, metadata !679, metadata !841), !dbg !2427
  %11 = getelementptr inbounds double* %y1, i64 %indvars.iv, !dbg !2428
  %12 = load double* %11, align 8, !dbg !2428, !tbaa !907
  tail call void @llvm.dbg.value(metadata double %12, i64 0, metadata !683, metadata !841), !dbg !2429
  %13 = getelementptr inbounds double* %y1, i64 %indvars.iv20, !dbg !2430
  %14 = load double* %13, align 8, !dbg !2430, !tbaa !907
  tail call void @llvm.dbg.value(metadata double %14, i64 0, metadata !680, metadata !841), !dbg !2431
  %15 = getelementptr inbounds double* %y2, i64 %indvars.iv, !dbg !2432
  %16 = load double* %15, align 8, !dbg !2432, !tbaa !907
  tail call void @llvm.dbg.value(metadata double %16, i64 0, metadata !684, metadata !841), !dbg !2433
  %17 = getelementptr inbounds double* %y2, i64 %indvars.iv20, !dbg !2434
  %18 = load double* %17, align 8, !dbg !2434, !tbaa !907
  tail call void @llvm.dbg.value(metadata double %18, i64 0, metadata !681, metadata !841), !dbg !2435
  %19 = getelementptr inbounds double* %x0, i64 %indvars.iv, !dbg !2436
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !678, metadata !841), !dbg !2437
  %20 = bitcast double* %19 to <2 x double>*, !dbg !2436
  %21 = load <2 x double>* %20, align 8, !dbg !2436, !tbaa !907
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !677, metadata !841), !dbg !2438
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !674, metadata !841), !dbg !2412
  %22 = insertelement <2 x double> undef, double %8, i32 0, !dbg !2439
  %23 = insertelement <2 x double> %22, double %8, i32 1, !dbg !2439
  %24 = fmul <2 x double> %23, %21, !dbg !2439
  %25 = insertelement <2 x double> undef, double %10, i32 0, !dbg !2440
  %26 = insertelement <2 x double> %25, double %10, i32 1, !dbg !2440
  %27 = shufflevector <2 x double> %21, <2 x double> undef, <2 x i32> <i32 1, i32 0>, !dbg !2440
  %28 = fmul <2 x double> %26, %27, !dbg !2440
  %29 = fadd <2 x double> %24, %28, !dbg !2441
  %30 = fsub <2 x double> %24, %28, !dbg !2441
  %31 = shufflevector <2 x double> %29, <2 x double> %30, <2 x i32> <i32 0, i32 3>, !dbg !2441
  %32 = fadd <2 x double> %4, %31, !dbg !2442
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !671, metadata !841), !dbg !2415
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !675, metadata !841), !dbg !2411
  %33 = insertelement <2 x double> undef, double %12, i32 0, !dbg !2443
  %34 = insertelement <2 x double> %33, double %12, i32 1, !dbg !2443
  %35 = fmul <2 x double> %34, %21, !dbg !2443
  %36 = insertelement <2 x double> undef, double %14, i32 0, !dbg !2444
  %37 = insertelement <2 x double> %36, double %14, i32 1, !dbg !2444
  %38 = fmul <2 x double> %37, %27, !dbg !2444
  %39 = fadd <2 x double> %35, %38, !dbg !2445
  %40 = fsub <2 x double> %35, %38, !dbg !2445
  %41 = shufflevector <2 x double> %39, <2 x double> %40, <2 x i32> <i32 0, i32 3>, !dbg !2445
  %42 = fadd <2 x double> %5, %41, !dbg !2446
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !672, metadata !841), !dbg !2414
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !676, metadata !841), !dbg !2410
  %43 = insertelement <2 x double> undef, double %16, i32 0, !dbg !2447
  %44 = insertelement <2 x double> %43, double %16, i32 1, !dbg !2447
  %45 = fmul <2 x double> %44, %21, !dbg !2447
  %46 = insertelement <2 x double> undef, double %18, i32 0, !dbg !2448
  %47 = insertelement <2 x double> %46, double %18, i32 1, !dbg !2448
  %48 = fmul <2 x double> %47, %27, !dbg !2448
  %49 = fadd <2 x double> %45, %48, !dbg !2449
  %50 = fsub <2 x double> %45, %48, !dbg !2449
  %51 = shufflevector <2 x double> %49, <2 x double> %50, <2 x i32> <i32 0, i32 3>, !dbg !2449
  %52 = fadd <2 x double> %6, %51, !dbg !2450
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !673, metadata !841), !dbg !2413
  %53 = add nuw nsw i32 %ii.07, 1, !dbg !2451
  tail call void @llvm.dbg.value(metadata i32 %53, i64 0, metadata !685, metadata !841), !dbg !2417
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 2, !dbg !2422
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 2, !dbg !2422
  %exitcond = icmp eq i32 %ii.07, %2, !dbg !2422
  br i1 %exitcond, label %._crit_edge, label %3, !dbg !2422

._crit_edge:                                      ; preds = %3, %0
  %54 = phi <2 x double> [ zeroinitializer, %0 ], [ %32, %3 ]
  %55 = phi <2 x double> [ zeroinitializer, %0 ], [ %42, %3 ]
  %56 = phi <2 x double> [ zeroinitializer, %0 ], [ %52, %3 ]
  %57 = bitcast double* %sums to <2 x double>*, !dbg !2452
  store <2 x double> %54, <2 x double>* %57, align 8, !dbg !2452, !tbaa !907
  %58 = getelementptr inbounds double* %sums, i64 2, !dbg !2453
  %59 = bitcast double* %58 to <2 x double>*, !dbg !2454
  store <2 x double> %55, <2 x double>* %59, align 8, !dbg !2454, !tbaa !907
  %60 = getelementptr inbounds double* %sums, i64 4, !dbg !2455
  %61 = bitcast double* %60 to <2 x double>*, !dbg !2456
  store <2 x double> %56, <2 x double>* %61, align 8, !dbg !2456, !tbaa !907
  ret void, !dbg !2457
}
