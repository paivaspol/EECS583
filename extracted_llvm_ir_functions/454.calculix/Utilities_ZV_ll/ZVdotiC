define void @ZVdotiC(i32 %size, double* %y, i32* %index, double* %x, double* %prdot, double* %pidot) #0 {
entry:
  %cmp = icmp slt i32 %size, 0
  %cmp1 = icmp eq double* %y, null
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp eq i32* %index, null
  %or.cond60 = or i1 %or.cond, %cmp3
  %cmp5 = icmp eq double* %x, null
  %or.cond61 = or i1 %or.cond60, %cmp5
  %cmp7 = icmp eq double* %prdot, null
  %or.cond62 = or i1 %or.cond61, %cmp7
  %cmp9 = icmp eq double* %pidot, null
  %or.cond63 = or i1 %or.cond62, %cmp9
  br i1 %or.cond63, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %cmp1064 = icmp sgt i32 %size, 0
  br i1 %cmp1064, label %for.body, label %for.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([56 x i8]* @.str6, i64 0, i64 0), i32 %size, double* %y, i32* %index, double* %x, double* %prdot, double* %pidot) #5
  tail call void @exit(i32 -1) #7
  unreachable

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv71 = phi i64 [ %indvars.iv.next72, %for.body ], [ 0, %for.cond.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %isum.066 = phi double [ %add30, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %rsum.065 = phi double [ %add26, %for.body ], [ 0.000000e+00, %for.cond.preheader ]
  %arrayidx = getelementptr inbounds double* %x, i64 %indvars.iv
  %1 = load double* %arrayidx, align 8, !tbaa !0
  %2 = or i64 %indvars.iv, 1
  %arrayidx12 = getelementptr inbounds double* %x, i64 %2
  %3 = load double* %arrayidx12, align 8, !tbaa !0
  %arrayidx14 = getelementptr inbounds i32* %index, i64 %indvars.iv71
  %4 = load i32* %arrayidx14, align 4, !tbaa !4
  %mul = shl nsw i32 %4, 1
  %idxprom15 = sext i32 %mul to i64
  %arrayidx16 = getelementptr inbounds double* %y, i64 %idxprom15
  %5 = load double* %arrayidx16, align 8, !tbaa !0
  %add2059 = or i32 %mul, 1
  %idxprom21 = sext i32 %add2059 to i64
  %arrayidx22 = getelementptr inbounds double* %y, i64 %idxprom21
  %6 = load double* %arrayidx22, align 8, !tbaa !0
  %mul23 = fmul double %1, %5
  %mul24 = fmul double %3, %6
  %add25 = fadd double %mul23, %mul24
  %add26 = fadd double %rsum.065, %add25
  %7 = fmul double %1, %6
  %mul28 = fmul double %3, %5
  %add29 = fsub double %mul28, %7
  %add30 = fadd double %isum.066, %add29
  %indvars.iv.next72 = add i64 %indvars.iv71, 1
  %indvars.iv.next = add i64 %indvars.iv, 2
  %lftr.wideiv = trunc i64 %indvars.iv.next72 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %size
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %for.cond.preheader
  %isum.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add30, %for.body ]
  %rsum.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add26, %for.body ]
  store double %rsum.0.lcssa, double* %prdot, align 8, !tbaa !0
  store double %isum.0.lcssa, double* %pidot, align 8, !tbaa !0
  ret void
}
