define void @ZVdotU(i32 %size, double* %y, double* %x, double* %prdot, double* %pidot) #2 {
  tail call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !67, metadata !841), !dbg !1071
  tail call void @llvm.dbg.value(metadata double* %y, i64 0, metadata !68, metadata !841), !dbg !1072
  tail call void @llvm.dbg.value(metadata double* %x, i64 0, metadata !69, metadata !841), !dbg !1073
  tail call void @llvm.dbg.value(metadata double* %prdot, i64 0, metadata !70, metadata !841), !dbg !1074
  tail call void @llvm.dbg.value(metadata double* %pidot, i64 0, metadata !71, metadata !841), !dbg !1075
  %1 = icmp slt i32 %size, 0, !dbg !1076
  %2 = icmp eq double* %y, null, !dbg !1078
  %or.cond = or i1 %1, %2, !dbg !1079
  %3 = icmp eq double* %x, null, !dbg !1080
  %or.cond3 = or i1 %or.cond, %3, !dbg !1079
  %4 = icmp eq double* %prdot, null, !dbg !1081
  %or.cond5 = or i1 %or.cond3, %4, !dbg !1079
  %5 = icmp eq double* %pidot, null, !dbg !1082
  %or.cond7 = or i1 %or.cond5, %5, !dbg !1079
  br i1 %or.cond7, label %8, label %.preheader, !dbg !1079

.preheader:                                       ; preds = %0
  %6 = icmp sgt i32 %size, 0, !dbg !1083
  br i1 %6, label %.lr.ph, label %._crit_edge, !dbg !1086

.lr.ph:                                           ; preds = %.preheader
  %7 = add i32 %size, -1, !dbg !1086
  br label %11, !dbg !1086

; <label>:8                                       ; preds = %0
  %9 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1087, !tbaa !1046
  %10 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %9, i8* getelementptr inbounds ([52 x i8]* @.str4, i64 0, i64 0), i32 %size, double* %y, double* %x, double* %prdot, double* %pidot) #8, !dbg !1089
  tail call void @exit(i32 -1) #9, !dbg !1090
  unreachable, !dbg !1090

; <label>:11                                      ; preds = %11, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %11 ]
  %ii.010 = phi i32 [ 0, %.lr.ph ], [ %31, %11 ]
  %isum.09 = phi double [ 0.000000e+00, %.lr.ph ], [ %30, %11 ]
  %rsum.08 = phi double [ 0.000000e+00, %.lr.ph ], [ %22, %11 ]
  %12 = getelementptr inbounds double* %x, i64 %indvars.iv, !dbg !1091
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !75, metadata !841), !dbg !1093
  %13 = bitcast double* %12 to <2 x double>*, !dbg !1091
  %14 = load <2 x double>* %13, align 8, !dbg !1091, !tbaa !907
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !74, metadata !841), !dbg !1094
  %15 = getelementptr inbounds double* %y, i64 %indvars.iv, !dbg !1095
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !77, metadata !841), !dbg !1096
  %16 = bitcast double* %15 to <2 x double>*, !dbg !1095
  %17 = load <2 x double>* %16, align 8, !dbg !1095, !tbaa !907
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !76, metadata !841), !dbg !1097
  %18 = fmul <2 x double> %14, %17, !dbg !1098
  %19 = extractelement <2 x double> %18, i32 0, !dbg !1099
  %20 = extractelement <2 x double> %18, i32 1, !dbg !1099
  %21 = fsub double %19, %20, !dbg !1099
  %22 = fadd double %rsum.08, %21, !dbg !1100
  tail call void @llvm.dbg.value(metadata double %22, i64 0, metadata !73, metadata !841), !dbg !1101
  %23 = extractelement <2 x double> %14, i32 0, !dbg !1102
  %24 = extractelement <2 x double> %17, i32 1, !dbg !1102
  %25 = fmul double %23, %24, !dbg !1102
  %26 = extractelement <2 x double> %14, i32 1, !dbg !1103
  %27 = extractelement <2 x double> %17, i32 0, !dbg !1103
  %28 = fmul double %26, %27, !dbg !1103
  %29 = fadd double %28, %25, !dbg !1104
  %30 = fadd double %isum.09, %29, !dbg !1105
  tail call void @llvm.dbg.value(metadata double %30, i64 0, metadata !72, metadata !841), !dbg !1106
  %31 = add nuw nsw i32 %ii.010, 1, !dbg !1107
  tail call void @llvm.dbg.value(metadata i32 %31, i64 0, metadata !78, metadata !841), !dbg !1108
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 2, !dbg !1086
  %exitcond = icmp eq i32 %ii.010, %7, !dbg !1086
  br i1 %exitcond, label %._crit_edge, label %11, !dbg !1086

._crit_edge:                                      ; preds = %11, %.preheader
  %isum.0.lcssa = phi double [ 0.000000e+00, %.preheader ], [ %30, %11 ]
  %rsum.0.lcssa = phi double [ 0.000000e+00, %.preheader ], [ %22, %11 ]
  store double %rsum.0.lcssa, double* %prdot, align 8, !dbg !1109, !tbaa !907
  store double %isum.0.lcssa, double* %pidot, align 8, !dbg !1110, !tbaa !907
  ret void, !dbg !1111
}
