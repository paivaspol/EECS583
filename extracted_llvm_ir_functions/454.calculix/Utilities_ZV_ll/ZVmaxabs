define double @ZVmaxabs(i32 %size, double* %x) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %size}, i64 0, metadata !234), !dbg !1095
  tail call void @llvm.dbg.value(metadata !{double* %x}, i64 0, metadata !235), !dbg !1096
  %cmp = icmp slt i32 %size, 0, !dbg !1097
  %cmp1 = icmp eq double* %x, null, !dbg !1097
  %or.cond = or i1 %cmp, %cmp1, !dbg !1097
  br i1 %or.cond, label %if.then, label %for.cond.preheader, !dbg !1097

for.cond.preheader:                               ; preds = %entry
  %cmp256 = icmp sgt i32 %size, 0, !dbg !1098
  br i1 %cmp256, label %for.body, label %for.end, !dbg !1098

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !1100, !tbaa !925
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([45 x i8]* @.str12, i64 0, i64 0), i32 %size, double* %x) #6, !dbg !1100
  tail call void @exit(i32 -1) #8, !dbg !1102
  unreachable, !dbg !1102

for.body:                                         ; preds = %for.cond.preheader, %if.end25
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end25 ], [ 0, %for.cond.preheader ]
  %ii.058 = phi i32 [ %inc, %if.end25 ], [ 0, %for.cond.preheader ]
  %maxabs.057 = phi double [ %maxabs.1, %if.end25 ], [ 0.000000e+00, %for.cond.preheader ]
  %arrayidx = getelementptr inbounds double* %x, i64 %indvars.iv, !dbg !1103
  %1 = load double* %arrayidx, align 8, !dbg !1103, !tbaa !861
  %call3 = tail call double @fabs(double %1) #5, !dbg !1103
  tail call void @llvm.dbg.value(metadata !{double %call3}, i64 0, metadata !239), !dbg !1103
  %2 = or i64 %indvars.iv, 1, !dbg !1105
  %arrayidx5 = getelementptr inbounds double* %x, i64 %2, !dbg !1105
  %3 = load double* %arrayidx5, align 8, !dbg !1105, !tbaa !861
  %call6 = tail call double @fabs(double %3) #5, !dbg !1105
  tail call void @llvm.dbg.value(metadata !{double %call6}, i64 0, metadata !237), !dbg !1105
  %cmp7 = fcmp oeq double %1, 0.000000e+00, !dbg !1106
  br i1 %cmp7, label %if.end25, label %if.else, !dbg !1106

if.else:                                          ; preds = %for.body
  %cmp9 = fcmp oeq double %3, 0.000000e+00, !dbg !1107
  br i1 %cmp9, label %if.end25, label %if.else11, !dbg !1107

if.else11:                                        ; preds = %if.else
  %cmp12 = fcmp ult double %call3, %call6, !dbg !1108
  br i1 %cmp12, label %if.else17, label %if.then13, !dbg !1108

if.then13:                                        ; preds = %if.else11
  %div = fdiv double %call6, %call3, !dbg !1109
  tail call void @llvm.dbg.value(metadata !{double %div}, i64 0, metadata !240), !dbg !1109
  %mul = fmul double %div, %div, !dbg !1111
  %add14 = fadd double %mul, 1.000000e+00, !dbg !1111
  %call15 = tail call double @sqrt(double %add14) #6, !dbg !1111
  %mul16 = fmul double %call3, %call15, !dbg !1111
  tail call void @llvm.dbg.value(metadata !{double %mul16}, i64 0, metadata !236), !dbg !1111
  br label %if.end25, !dbg !1112

if.else17:                                        ; preds = %if.else11
  %div18 = fdiv double %call3, %call6, !dbg !1113
  tail call void @llvm.dbg.value(metadata !{double %div18}, i64 0, metadata !240), !dbg !1113
  %mul19 = fmul double %div18, %div18, !dbg !1115
  %add20 = fadd double %mul19, 1.000000e+00, !dbg !1115
  %call21 = tail call double @sqrt(double %add20) #6, !dbg !1115
  %mul22 = fmul double %call6, %call21, !dbg !1115
  tail call void @llvm.dbg.value(metadata !{double %mul22}, i64 0, metadata !236), !dbg !1115
  br label %if.end25

if.end25:                                         ; preds = %if.else, %for.body, %if.else17, %if.then13
  %abs.0 = phi double [ %mul16, %if.then13 ], [ %mul22, %if.else17 ], [ %call6, %for.body ], [ %call3, %if.else ]
  %cmp26 = icmp eq i32 %ii.058, 0, !dbg !1116
  %cmp28 = fcmp olt double %maxabs.057, %abs.0, !dbg !1116
  %or.cond55 = or i1 %cmp26, %cmp28, !dbg !1116
  tail call void @llvm.dbg.value(metadata !{double %abs.0}, i64 0, metadata !238), !dbg !1117
  %maxabs.1 = select i1 %or.cond55, double %abs.0, double %maxabs.057, !dbg !1116
  %inc = add nsw i32 %ii.058, 1, !dbg !1098
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !241), !dbg !1098
  %indvars.iv.next = add i64 %indvars.iv, 2, !dbg !1098
  %exitcond = icmp eq i32 %inc, %size, !dbg !1098
  br i1 %exitcond, label %for.end, label %for.body, !dbg !1098

for.end:                                          ; preds = %if.end25, %for.cond.preheader
  %maxabs.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %maxabs.1, %if.end25 ]
  ret double %maxabs.0.lcssa, !dbg !1119
}
