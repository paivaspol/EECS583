define void @ZVdotU33(i32 %n, double* nocapture %y0, double* nocapture %y1, double* nocapture %y2, double* nocapture %x0, double* nocapture %x1, double* nocapture %x2, double* nocapture %sums) #0 {
entry:
  %cmp226 = icmp sgt i32 %n, 0
  br i1 %cmp226, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv265 = phi i64 [ %indvars.iv.next266, %for.body ], [ 1, %entry ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %ii.0245 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %i00.0244 = phi double [ %add27, %for.body ], [ 0.000000e+00, %entry ]
  %i01.0243 = phi double [ %add35, %for.body ], [ 0.000000e+00, %entry ]
  %i02.0242 = phi double [ %add43, %for.body ], [ 0.000000e+00, %entry ]
  %i10.0241 = phi double [ %add51, %for.body ], [ 0.000000e+00, %entry ]
  %i11.0240 = phi double [ %add59, %for.body ], [ 0.000000e+00, %entry ]
  %i12.0239 = phi double [ %add67, %for.body ], [ 0.000000e+00, %entry ]
  %i20.0238 = phi double [ %add75, %for.body ], [ 0.000000e+00, %entry ]
  %i21.0237 = phi double [ %add83, %for.body ], [ 0.000000e+00, %entry ]
  %i22.0236 = phi double [ %add91, %for.body ], [ 0.000000e+00, %entry ]
  %r00.0235 = phi double [ %add, %for.body ], [ 0.000000e+00, %entry ]
  %r01.0234 = phi double [ %add31, %for.body ], [ 0.000000e+00, %entry ]
  %r02.0233 = phi double [ %add39, %for.body ], [ 0.000000e+00, %entry ]
  %r22.0232 = phi double [ %add87, %for.body ], [ 0.000000e+00, %entry ]
  %r21.0231 = phi double [ %add79, %for.body ], [ 0.000000e+00, %entry ]
  %r20.0230 = phi double [ %add71, %for.body ], [ 0.000000e+00, %entry ]
  %r12.0229 = phi double [ %add63, %for.body ], [ 0.000000e+00, %entry ]
  %r11.0228 = phi double [ %add55, %for.body ], [ 0.000000e+00, %entry ]
  %r10.0227 = phi double [ %add47, %for.body ], [ 0.000000e+00, %entry ]
  %arrayidx = getelementptr inbounds double* %y0, i64 %indvars.iv
  %0 = load double* %arrayidx, align 8, !tbaa !0
  %arrayidx2 = getelementptr inbounds double* %y0, i64 %indvars.iv265
  %1 = load double* %arrayidx2, align 8, !tbaa !0
  %arrayidx4 = getelementptr inbounds double* %y1, i64 %indvars.iv
  %2 = load double* %arrayidx4, align 8, !tbaa !0
  %arrayidx6 = getelementptr inbounds double* %y1, i64 %indvars.iv265
  %3 = load double* %arrayidx6, align 8, !tbaa !0
  %arrayidx8 = getelementptr inbounds double* %y2, i64 %indvars.iv
  %4 = load double* %arrayidx8, align 8, !tbaa !0
  %arrayidx10 = getelementptr inbounds double* %y2, i64 %indvars.iv265
  %5 = load double* %arrayidx10, align 8, !tbaa !0
  %arrayidx12 = getelementptr inbounds double* %x0, i64 %indvars.iv
  %6 = load double* %arrayidx12, align 8, !tbaa !0
  %arrayidx14 = getelementptr inbounds double* %x0, i64 %indvars.iv265
  %7 = load double* %arrayidx14, align 8, !tbaa !0
  %arrayidx16 = getelementptr inbounds double* %x1, i64 %indvars.iv
  %8 = load double* %arrayidx16, align 8, !tbaa !0
  %arrayidx18 = getelementptr inbounds double* %x1, i64 %indvars.iv265
  %9 = load double* %arrayidx18, align 8, !tbaa !0
  %arrayidx20 = getelementptr inbounds double* %x2, i64 %indvars.iv
  %10 = load double* %arrayidx20, align 8, !tbaa !0
  %arrayidx22 = getelementptr inbounds double* %x2, i64 %indvars.iv265
  %11 = load double* %arrayidx22, align 8, !tbaa !0
  %mul = fmul double %0, %6
  %mul23 = fmul double %1, %7
  %sub = fsub double %mul, %mul23
  %add = fadd double %r00.0235, %sub
  %mul24 = fmul double %0, %7
  %mul25 = fmul double %1, %6
  %add26 = fadd double %mul25, %mul24
  %add27 = fadd double %i00.0244, %add26
  %mul28 = fmul double %0, %8
  %mul29 = fmul double %1, %9
  %sub30 = fsub double %mul28, %mul29
  %add31 = fadd double %r01.0234, %sub30
  %mul32 = fmul double %0, %9
  %mul33 = fmul double %1, %8
  %add34 = fadd double %mul33, %mul32
  %add35 = fadd double %i01.0243, %add34
  %mul36 = fmul double %0, %10
  %mul37 = fmul double %1, %11
  %sub38 = fsub double %mul36, %mul37
  %add39 = fadd double %r02.0233, %sub38
  %mul40 = fmul double %0, %11
  %mul41 = fmul double %1, %10
  %add42 = fadd double %mul41, %mul40
  %add43 = fadd double %i02.0242, %add42
  %mul44 = fmul double %2, %6
  %mul45 = fmul double %3, %7
  %sub46 = fsub double %mul44, %mul45
  %add47 = fadd double %r10.0227, %sub46
  %mul48 = fmul double %2, %7
  %mul49 = fmul double %3, %6
  %add50 = fadd double %mul49, %mul48
  %add51 = fadd double %i10.0241, %add50
  %mul52 = fmul double %2, %8
  %mul53 = fmul double %3, %9
  %sub54 = fsub double %mul52, %mul53
  %add55 = fadd double %r11.0228, %sub54
  %mul56 = fmul double %2, %9
  %mul57 = fmul double %3, %8
  %add58 = fadd double %mul57, %mul56
  %add59 = fadd double %i11.0240, %add58
  %mul60 = fmul double %2, %10
  %mul61 = fmul double %3, %11
  %sub62 = fsub double %mul60, %mul61
  %add63 = fadd double %r12.0229, %sub62
  %mul64 = fmul double %2, %11
  %mul65 = fmul double %3, %10
  %add66 = fadd double %mul65, %mul64
  %add67 = fadd double %i12.0239, %add66
  %mul68 = fmul double %4, %6
  %mul69 = fmul double %5, %7
  %sub70 = fsub double %mul68, %mul69
  %add71 = fadd double %r20.0230, %sub70
  %mul72 = fmul double %4, %7
  %mul73 = fmul double %5, %6
  %add74 = fadd double %mul73, %mul72
  %add75 = fadd double %i20.0238, %add74
  %mul76 = fmul double %4, %8
  %mul77 = fmul double %5, %9
  %sub78 = fsub double %mul76, %mul77
  %add79 = fadd double %r21.0231, %sub78
  %mul80 = fmul double %4, %9
  %mul81 = fmul double %5, %8
  %add82 = fadd double %mul81, %mul80
  %add83 = fadd double %i21.0237, %add82
  %mul84 = fmul double %4, %10
  %mul85 = fmul double %5, %11
  %sub86 = fsub double %mul84, %mul85
  %add87 = fadd double %r22.0232, %sub86
  %mul88 = fmul double %4, %11
  %mul89 = fmul double %5, %10
  %add90 = fadd double %mul89, %mul88
  %add91 = fadd double %i22.0236, %add90
  %inc = add nsw i32 %ii.0245, 1
  %indvars.iv.next = add i64 %indvars.iv, 2
  %indvars.iv.next266 = add i64 %indvars.iv265, 2
  %exitcond = icmp eq i32 %inc, %n
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %i00.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add27, %for.body ]
  %i01.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add35, %for.body ]
  %i02.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add43, %for.body ]
  %i10.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add51, %for.body ]
  %i11.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add59, %for.body ]
  %i12.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add67, %for.body ]
  %i20.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add75, %for.body ]
  %i21.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add83, %for.body ]
  %i22.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add91, %for.body ]
  %r00.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add, %for.body ]
  %r01.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add31, %for.body ]
  %r02.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add39, %for.body ]
  %r22.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add87, %for.body ]
  %r21.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add79, %for.body ]
  %r20.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add71, %for.body ]
  %r12.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add63, %for.body ]
  %r11.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add55, %for.body ]
  %r10.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add47, %for.body ]
  store double %r00.0.lcssa, double* %sums, align 8, !tbaa !0
  %arrayidx95 = getelementptr inbounds double* %sums, i64 1
  store double %i00.0.lcssa, double* %arrayidx95, align 8, !tbaa !0
  %arrayidx96 = getelementptr inbounds double* %sums, i64 2
  store double %r01.0.lcssa, double* %arrayidx96, align 8, !tbaa !0
  %arrayidx97 = getelementptr inbounds double* %sums, i64 3
  store double %i01.0.lcssa, double* %arrayidx97, align 8, !tbaa !0
  %arrayidx98 = getelementptr inbounds double* %sums, i64 4
  store double %r02.0.lcssa, double* %arrayidx98, align 8, !tbaa !0
  %arrayidx99 = getelementptr inbounds double* %sums, i64 5
  store double %i02.0.lcssa, double* %arrayidx99, align 8, !tbaa !0
  %arrayidx100 = getelementptr inbounds double* %sums, i64 6
  store double %r10.0.lcssa, double* %arrayidx100, align 8, !tbaa !0
  %arrayidx101 = getelementptr inbounds double* %sums, i64 7
  store double %i10.0.lcssa, double* %arrayidx101, align 8, !tbaa !0
  %arrayidx102 = getelementptr inbounds double* %sums, i64 8
  store double %r11.0.lcssa, double* %arrayidx102, align 8, !tbaa !0
  %arrayidx103 = getelementptr inbounds double* %sums, i64 9
  store double %i11.0.lcssa, double* %arrayidx103, align 8, !tbaa !0
  %arrayidx104 = getelementptr inbounds double* %sums, i64 10
  store double %r12.0.lcssa, double* %arrayidx104, align 8, !tbaa !0
  %arrayidx105 = getelementptr inbounds double* %sums, i64 11
  store double %i12.0.lcssa, double* %arrayidx105, align 8, !tbaa !0
  %arrayidx106 = getelementptr inbounds double* %sums, i64 12
  store double %r20.0.lcssa, double* %arrayidx106, align 8, !tbaa !0
  %arrayidx107 = getelementptr inbounds double* %sums, i64 13
  store double %i20.0.lcssa, double* %arrayidx107, align 8, !tbaa !0
  %arrayidx108 = getelementptr inbounds double* %sums, i64 14
  store double %r21.0.lcssa, double* %arrayidx108, align 8, !tbaa !0
  %arrayidx109 = getelementptr inbounds double* %sums, i64 15
  store double %i21.0.lcssa, double* %arrayidx109, align 8, !tbaa !0
  %arrayidx110 = getelementptr inbounds double* %sums, i64 16
  store double %r22.0.lcssa, double* %arrayidx110, align 8, !tbaa !0
  %arrayidx111 = getelementptr inbounds double* %sums, i64 17
  store double %i22.0.lcssa, double* %arrayidx111, align 8, !tbaa !0
  ret void
}
