define void @ZVgather(i32 %size, double* %y, double* %x, i32* %index) #2 {
  tail call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !309, metadata !841), !dbg !1603
  tail call void @llvm.dbg.value(metadata double* %y, i64 0, metadata !310, metadata !841), !dbg !1604
  tail call void @llvm.dbg.value(metadata double* %x, i64 0, metadata !311, metadata !841), !dbg !1605
  tail call void @llvm.dbg.value(metadata i32* %index, i64 0, metadata !312, metadata !841), !dbg !1606
  %1 = icmp sgt i32 %size, 0, !dbg !1607
  br i1 %1, label %2, label %.loopexit, !dbg !1608

; <label>:2                                       ; preds = %0
  %3 = icmp eq double* %y, null, !dbg !1609
  %4 = icmp eq double* %x, null, !dbg !1610
  %or.cond = or i1 %3, %4, !dbg !1611
  %5 = icmp eq i32* %index, null, !dbg !1612
  %or.cond3 = or i1 %or.cond, %5, !dbg !1611
  br i1 %or.cond3, label %7, label %.lr.ph, !dbg !1611

.lr.ph:                                           ; preds = %2
  %6 = add i32 %size, -1, !dbg !1613
  br label %10, !dbg !1613

; <label>:7                                       ; preds = %2
  %8 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1615, !tbaa !1046
  %9 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %8, i8* getelementptr inbounds ([81 x i8]* @.str16, i64 0, i64 0), i32 %size, double* %y, double* %x, i32* %index) #8, !dbg !1617
  tail call void @exit(i32 -1) #9, !dbg !1618
  unreachable, !dbg !1618

; <label>:10                                      ; preds = %10, %.lr.ph
  %indvars.iv6 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next7, %10 ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %10 ]
  %11 = getelementptr inbounds i32* %index, i64 %indvars.iv, !dbg !1619
  %12 = load i32* %11, align 4, !dbg !1619, !tbaa !1180
  %13 = shl nsw i32 %12, 1, !dbg !1622
  tail call void @llvm.dbg.value(metadata i32 %13, i64 0, metadata !319, metadata !841), !dbg !1623
  %14 = sext i32 %13 to i64, !dbg !1624
  %15 = getelementptr inbounds double* %x, i64 %14, !dbg !1624
  %16 = bitcast double* %15 to i64*, !dbg !1624
  %17 = load i64* %16, align 8, !dbg !1624, !tbaa !907
  %18 = getelementptr inbounds double* %y, i64 %indvars.iv6, !dbg !1625
  %19 = bitcast double* %18 to i64*, !dbg !1626
  store i64 %17, i64* %19, align 8, !dbg !1626, !tbaa !907
  %20 = or i32 %13, 1, !dbg !1627
  %21 = sext i32 %20 to i64, !dbg !1628
  %22 = getelementptr inbounds double* %x, i64 %21, !dbg !1628
  %23 = bitcast double* %22 to i64*, !dbg !1628
  %24 = load i64* %23, align 8, !dbg !1628, !tbaa !907
  %25 = or i64 %indvars.iv6, 1, !dbg !1629
  %26 = getelementptr inbounds double* %y, i64 %25, !dbg !1630
  %27 = bitcast double* %26 to i64*, !dbg !1631
  store i64 %24, i64* %27, align 8, !dbg !1631, !tbaa !907
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1613
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 2, !dbg !1613
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !1613
  %exitcond = icmp eq i32 %lftr.wideiv, %6, !dbg !1613
  br i1 %exitcond, label %.loopexit, label %10, !dbg !1613

.loopexit:                                        ; preds = %10, %0
  ret void, !dbg !1632
}
