define void @ZVscale2(i32 %size, double* %x, double* %y, double %areal, double %aimag, double %breal, double %bimag, double %creal, double %cimag, double %dreal, double %dimag) #0 {
entry:
  %cmp = icmp slt i32 %size, 0
  %cmp1 = icmp eq double* %x, null
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp eq double* %y, null
  %or.cond91 = or i1 %or.cond, %cmp3
  br i1 %or.cond91, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %cmp492 = icmp sgt i32 %size, 0
  br i1 %cmp492, label %for.body, label %for.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([52 x i8]* @.str15, i64 0, i64 0), i32 %size, double* %x, double* %y) #5
  tail call void @exit(i32 -1) #7
  unreachable

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %ii.093 = phi i32 [ %inc, %for.body ], [ 0, %for.cond.preheader ]
  %arrayidx = getelementptr inbounds double* %x, i64 %indvars.iv
  %1 = load double* %arrayidx, align 8, !tbaa !0
  %2 = or i64 %indvars.iv, 1
  %arrayidx6 = getelementptr inbounds double* %x, i64 %2
  %3 = load double* %arrayidx6, align 8, !tbaa !0
  %arrayidx8 = getelementptr inbounds double* %y, i64 %indvars.iv
  %4 = load double* %arrayidx8, align 8, !tbaa !0
  %arrayidx11 = getelementptr inbounds double* %y, i64 %2
  %5 = load double* %arrayidx11, align 8, !tbaa !0
  %mul = fmul double %1, %areal
  %mul12 = fmul double %3, %aimag
  %sub = fsub double %mul, %mul12
  %mul13 = fmul double %4, %breal
  %add14 = fadd double %sub, %mul13
  %mul15 = fmul double %5, %bimag
  %sub16 = fsub double %add14, %mul15
  store double %sub16, double* %arrayidx, align 8, !tbaa !0
  %mul19 = fmul double %3, %areal
  %mul20 = fmul double %1, %aimag
  %add21 = fadd double %mul20, %mul19
  %mul22 = fmul double %5, %breal
  %add23 = fadd double %add21, %mul22
  %mul24 = fmul double %4, %bimag
  %add25 = fadd double %mul24, %add23
  store double %add25, double* %arrayidx6, align 8, !tbaa !0
  %mul29 = fmul double %1, %creal
  %mul30 = fmul double %3, %cimag
  %sub31 = fsub double %mul29, %mul30
  %mul32 = fmul double %4, %dreal
  %add33 = fadd double %sub31, %mul32
  %mul34 = fmul double %5, %dimag
  %sub35 = fsub double %add33, %mul34
  store double %sub35, double* %arrayidx8, align 8, !tbaa !0
  %mul38 = fmul double %3, %creal
  %mul39 = fmul double %1, %cimag
  %add40 = fadd double %mul39, %mul38
  %mul41 = fmul double %5, %dreal
  %add42 = fadd double %add40, %mul41
  %mul43 = fmul double %4, %dimag
  %add44 = fadd double %mul43, %add42
  store double %add44, double* %arrayidx11, align 8, !tbaa !0
  %inc = add nsw i32 %ii.093, 1
  %indvars.iv.next = add i64 %indvars.iv, 2
  %exitcond = icmp eq i32 %inc, %size
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %for.cond.preheader
  ret void
}
