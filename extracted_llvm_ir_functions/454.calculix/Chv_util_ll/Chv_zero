define void @Chv_zero(%struct._Chv* %chv) #0 {
entry:
  %cmp = icmp eq %struct._Chv* %chv, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([42 x i8]* @.str11, i64 0, i64 0), %struct._Chv* null) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 4
  %1 = load i32* %type, align 4, !tbaa !3
  switch i32 %1, label %if.else10 [
    i32 1, label %if.then2
    i32 2, label %if.then7
  ]

if.then2:                                         ; preds = %if.end
  %call3 = tail call i32 @Chv_nent(%struct._Chv* %chv) #4
  %call4 = tail call double* @Chv_entries(%struct._Chv* %chv) #4
  tail call void @DVzero(i32 %call3, double* %call4) #4
  br label %if.end14

if.then7:                                         ; preds = %if.end
  %call8 = tail call i32 @Chv_nent(%struct._Chv* %chv) #4
  %call9 = tail call double* @Chv_entries(%struct._Chv* %chv) #4
  tail call void @ZVzero(i32 %call8, double* %call9) #4
  br label %if.end14

if.else10:                                        ; preds = %if.end
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([83 x i8]* @.str12, i64 0, i64 0), %struct._Chv* %chv, i32 %1) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end14:                                         ; preds = %if.then7, %if.then2
  ret void
}
