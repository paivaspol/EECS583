define double @Chv_maxabs(%struct._Chv* %chv) #0 {
entry:
  %loc = alloca i32, align 4
  %cmp = icmp eq %struct._Chv* %chv, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([44 x i8]* @.str3, i64 0, i64 0), %struct._Chv* null) #4
  call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 4
  %1 = load i32* %type, align 4, !tbaa !3
  switch i32 %1, label %if.else12 [
    i32 1, label %if.then2
    i32 2, label %if.then8
  ]

if.then2:                                         ; preds = %if.end
  %call3 = call i32 @Chv_nent(%struct._Chv* %chv) #4
  %call4 = call double* @Chv_entries(%struct._Chv* %chv) #4
  %call5 = call double @DVmaxabs(i32 %call3, double* %call4, i32* %loc) #4
  br label %if.end16

if.then8:                                         ; preds = %if.end
  %call9 = call i32 @Chv_nent(%struct._Chv* %chv) #4
  %call10 = call double* @Chv_entries(%struct._Chv* %chv) #4
  %call11 = call double @ZVmaxabs(i32 %call9, double* %call10) #4
  br label %if.end16

if.else12:                                        ; preds = %if.end
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([86 x i8]* @.str4, i64 0, i64 0), %struct._Chv* %chv, i32 %1) #4
  call void @exit(i32 -1) #5
  unreachable

if.end16:                                         ; preds = %if.then8, %if.then2
  %maxabs.0 = phi double [ %call5, %if.then2 ], [ %call11, %if.then8 ]
  ret double %maxabs.0
}
