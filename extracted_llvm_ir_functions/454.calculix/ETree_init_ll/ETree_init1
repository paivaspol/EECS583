define void @ETree_init1(%struct._ETree* %etree, i32 %nfront, i32 %nvtx) #0 {
entry:
  %cmp = icmp eq %struct._ETree* %etree, null
  %cmp1 = icmp slt i32 %nfront, 0
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp slt i32 %nvtx, %nfront
  %or.cond39 = or i1 %or.cond, %cmp3
  br i1 %or.cond39, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([51 x i8]* @.str, i64 0, i64 0), %struct._ETree* %etree, i32 %nfront, i32 %nvtx) #6
  tail call void @exit(i32 -1) #7
  unreachable

if.end:                                           ; preds = %entry
  tail call void @ETree_clearData(%struct._ETree* %etree) #6
  %nfront4 = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 0
  store i32 %nfront, i32* %nfront4, align 4, !tbaa !3
  %nvtx5 = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 1
  store i32 %nvtx, i32* %nvtx5, align 4, !tbaa !3
  %call6 = tail call %struct._Tree* @Tree_new() #6
  %tree = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 2
  store %struct._Tree* %call6, %struct._Tree** %tree, align 8, !tbaa !0
  tail call void @Tree_init1(%struct._Tree* %call6, i32 %nfront) #6
  %call8 = tail call %struct._IV* @IV_new() #6
  %nodwghtsIV = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 3
  store %struct._IV* %call8, %struct._IV** %nodwghtsIV, align 8, !tbaa !0
  tail call void @IV_init(%struct._IV* %call8, i32 %nfront, i32* null) #6
  %1 = load %struct._IV** %nodwghtsIV, align 8, !tbaa !0
  tail call void @IV_fill(%struct._IV* %1, i32 0) #6
  %call11 = tail call %struct._IV* @IV_new() #6
  %bndwghtsIV = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 4
  store %struct._IV* %call11, %struct._IV** %bndwghtsIV, align 8, !tbaa !0
  tail call void @IV_init(%struct._IV* %call11, i32 %nfront, i32* null) #6
  %2 = load %struct._IV** %bndwghtsIV, align 8, !tbaa !0
  tail call void @IV_fill(%struct._IV* %2, i32 0) #6
  %call14 = tail call %struct._IV* @IV_new() #6
  %vtxToFrontIV = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 5
  store %struct._IV* %call14, %struct._IV** %vtxToFrontIV, align 8, !tbaa !0
  tail call void @IV_init(%struct._IV* %call14, i32 %nvtx, i32* null) #6
  ret void
}
