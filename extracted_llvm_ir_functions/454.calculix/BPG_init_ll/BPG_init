define void @BPG_init(%struct._BPG* %bpg, i32 %nX, i32 %nY, %struct._Graph* %graph) #0 {
entry:
  %vsize = alloca i32, align 4
  %vadj = alloca i32*, align 8
  %cmp = icmp eq %struct._BPG* %bpg, null
  %cmp1 = icmp slt i32 %nX, 1
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp slt i32 %nY, 1
  %or.cond100 = or i1 %or.cond, %cmp3
  %cmp5 = icmp eq %struct._Graph* %graph, null
  %or.cond101 = or i1 %or.cond100, %cmp5
  br i1 %or.cond101, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([51 x i8]* @.str, i64 0, i64 0), %struct._BPG* %bpg, i32 %nX, i32 %nY, %struct._Graph* %graph) #5
  call void @exit(i32 -1) #6
  unreachable

if.end:                                           ; preds = %entry
  call void @BPG_clearData(%struct._BPG* %bpg) #5
  %nX6 = getelementptr inbounds %struct._BPG* %bpg, i64 0, i32 0
  store i32 %nX, i32* %nX6, align 4, !tbaa !3
  %nY7 = getelementptr inbounds %struct._BPG* %bpg, i64 0, i32 1
  store i32 %nY, i32* %nY7, align 4, !tbaa !3
  %graph8 = getelementptr inbounds %struct._BPG* %bpg, i64 0, i32 2
  store %struct._Graph* %graph, %struct._Graph** %graph8, align 8, !tbaa !0
  %adjIVL9 = getelementptr inbounds %struct._Graph* %graph, i64 0, i32 6
  %1 = load %struct._IVL** %adjIVL9, align 8, !tbaa !0
  %cmp10124 = icmp sgt i32 %nX, 0
  %add = add nsw i32 %nY, %nX
  br i1 %cmp10124, label %for.body, label %for.cond23.preheader

for.cond23.preheader:                             ; preds = %if.end, %while.end
  %cmp25112 = icmp sgt i32 %nY, 0
  br i1 %cmp25112, label %for.body26, label %for.end50

for.body:                                         ; preds = %if.end, %while.end
  %v.0125 = phi i32 [ %inc22, %while.end ], [ 0, %if.end ]
  call void @IVL_listAndSize(%struct._IVL* %1, i32 %v.0125, i32* %vsize, i32** %vadj) #5
  %2 = load i32* %vsize, align 4, !tbaa !3
  %cmp11116120 = icmp slt i32 %2, 1
  br i1 %cmp11116120, label %while.end, label %while.body.lr.ph.lr.ph

while.body.lr.ph.lr.ph:                           ; preds = %for.body
  %sub = add nsw i32 %2, -1
  %3 = load i32** %vadj, align 8, !tbaa !0
  %4 = sext i32 %2 to i64
  br label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %while.body.lr.ph.lr.ph, %if.else
  %indvars.iv139.in = phi i64 [ %4, %while.body.lr.ph.lr.ph ], [ %indvars.iv139, %if.else ]
  %ii.0.ph122 = phi i32 [ 0, %while.body.lr.ph.lr.ph ], [ %ii.0117, %if.else ]
  %jj.0.ph121 = phi i32 [ %sub, %while.body.lr.ph.lr.ph ], [ %dec, %if.else ]
  %indvars.iv139 = add i64 %indvars.iv139.in, -1
  %5 = sext i32 %ii.0.ph122 to i64
  br label %while.body

while.cond:                                       ; preds = %land.lhs.true
  %indvars.iv.next138 = add i64 %indvars.iv137, 1
  %6 = trunc i64 %indvars.iv137 to i32
  %7 = trunc i64 %indvars.iv139 to i32
  %cmp11 = icmp slt i32 %6, %7
  br i1 %cmp11, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond, %while.body.lr.ph
  %indvars.iv137 = phi i64 [ %indvars.iv.next138, %while.cond ], [ %5, %while.body.lr.ph ]
  %ii.0117 = phi i32 [ %inc, %while.cond ], [ %ii.0.ph122, %while.body.lr.ph ]
  %arrayidx = getelementptr inbounds i32* %3, i64 %indvars.iv137
  %8 = load i32* %arrayidx, align 4, !tbaa !3
  %cmp12 = icmp slt i32 %8, %nX
  br i1 %cmp12, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %while.body
  %cmp13 = icmp slt i32 %8, %add
  %inc = add nsw i32 %ii.0117, 1
  br i1 %cmp13, label %while.cond, label %if.else

if.else:                                          ; preds = %while.body, %land.lhs.true
  %arrayidx16 = getelementptr inbounds i32* %3, i64 %indvars.iv139
  %9 = load i32* %arrayidx16, align 4, !tbaa !3
  store i32 %9, i32* %arrayidx, align 4, !tbaa !3
  store i32 %8, i32* %arrayidx16, align 4, !tbaa !3
  %dec = add nsw i32 %jj.0.ph121, -1
  %cmp11116 = icmp sgt i32 %ii.0117, %dec
  br i1 %cmp11116, label %while.end, label %while.body.lr.ph

while.end:                                        ; preds = %for.body, %if.else, %while.cond
  %ii.0.lcssa = phi i32 [ %inc, %while.cond ], [ 0, %for.body ], [ %ii.0117, %if.else ]
  store i32 %ii.0.lcssa, i32* %vsize, align 4, !tbaa !3
  call void @IVL_setList(%struct._IVL* %1, i32 %v.0125, i32 %ii.0.lcssa, i32* null) #5
  %inc22 = add nsw i32 %v.0125, 1
  %exitcond = icmp eq i32 %inc22, %nX
  br i1 %exitcond, label %for.cond23.preheader, label %for.body

for.body26:                                       ; preds = %for.cond23.preheader, %while.end47
  %v.1113 = phi i32 [ %inc49, %while.end47 ], [ %nX, %for.cond23.preheader ]
  call void @IVL_listAndSize(%struct._IVL* %1, i32 %v.1113, i32* %vsize, i32** %vadj) #5
  %10 = load i32* %vsize, align 4, !tbaa !3
  %cmp29105108 = icmp slt i32 %10, 1
  br i1 %cmp29105108, label %while.end47, label %while.body30.lr.ph.lr.ph

while.body30.lr.ph.lr.ph:                         ; preds = %for.body26
  %sub27 = add nsw i32 %10, -1
  %11 = load i32** %vadj, align 8, !tbaa !0
  %12 = sext i32 %10 to i64
  br label %while.body30.lr.ph

while.body30.lr.ph:                               ; preds = %while.body30.lr.ph.lr.ph, %if.else38
  %indvars.iv130.in = phi i64 [ %12, %while.body30.lr.ph.lr.ph ], [ %indvars.iv130, %if.else38 ]
  %ii.1.ph110 = phi i32 [ 0, %while.body30.lr.ph.lr.ph ], [ %ii.1106, %if.else38 ]
  %jj.1.ph109 = phi i32 [ %sub27, %while.body30.lr.ph.lr.ph ], [ %dec45, %if.else38 ]
  %indvars.iv130 = add i64 %indvars.iv130.in, -1
  %13 = sext i32 %ii.1.ph110 to i64
  br label %while.body30

while.cond28:                                     ; preds = %while.body30
  %indvars.iv.next = add i64 %indvars.iv, 1
  %14 = trunc i64 %indvars.iv to i32
  %15 = trunc i64 %indvars.iv130 to i32
  %cmp29 = icmp slt i32 %14, %15
  br i1 %cmp29, label %while.body30, label %while.end47

while.body30:                                     ; preds = %while.cond28, %while.body30.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %while.cond28 ], [ %13, %while.body30.lr.ph ]
  %ii.1106 = phi i32 [ %inc37, %while.cond28 ], [ %ii.1.ph110, %while.body30.lr.ph ]
  %arrayidx32 = getelementptr inbounds i32* %11, i64 %indvars.iv
  %16 = load i32* %arrayidx32, align 4, !tbaa !3
  %cmp33 = icmp sgt i32 %16, -1
  %cmp35 = icmp slt i32 %16, %nX
  %or.cond102 = and i1 %cmp33, %cmp35
  %inc37 = add nsw i32 %ii.1106, 1
  br i1 %or.cond102, label %while.cond28, label %if.else38

if.else38:                                        ; preds = %while.body30
  %arrayidx40 = getelementptr inbounds i32* %11, i64 %indvars.iv130
  %17 = load i32* %arrayidx40, align 4, !tbaa !3
  store i32 %17, i32* %arrayidx32, align 4, !tbaa !3
  store i32 %16, i32* %arrayidx40, align 4, !tbaa !3
  %dec45 = add nsw i32 %jj.1.ph109, -1
  %cmp29105 = icmp sgt i32 %ii.1106, %dec45
  br i1 %cmp29105, label %while.end47, label %while.body30.lr.ph

while.end47:                                      ; preds = %for.body26, %if.else38, %while.cond28
  %ii.1.lcssa = phi i32 [ %inc37, %while.cond28 ], [ 0, %for.body26 ], [ %ii.1106, %if.else38 ]
  store i32 %ii.1.lcssa, i32* %vsize, align 4, !tbaa !3
  call void @IVL_setList(%struct._IVL* %1, i32 %v.1113, i32 %ii.1.lcssa, i32* null) #5
  %inc49 = add nsw i32 %v.1113, 1
  %cmp25 = icmp slt i32 %inc49, %add
  br i1 %cmp25, label %for.body26, label %for.end50

for.end50:                                        ; preds = %while.end47, %for.cond23.preheader
  ret void
}
