define void @IP_fprintf(%struct.__sFILE* %fp, %struct._IP* readonly %ip) #0 {
  tail call void @llvm.dbg.value(metadata %struct.__sFILE* %fp, i64 0, metadata !82, metadata !176), !dbg !177
  tail call void @llvm.dbg.value(metadata %struct._IP* %ip, i64 0, metadata !83, metadata !176), !dbg !178
  %1 = icmp ne %struct.__sFILE* %fp, null, !dbg !179
  %2 = icmp ne %struct._IP* %ip, null, !dbg !180
  %or.cond = and i1 %1, %2, !dbg !181
  br i1 %or.cond, label %.lr.ph, label %.loopexit, !dbg !181

.lr.ph:                                           ; preds = %0, %7
  %i.03 = phi i32 [ %13, %7 ], [ 0, %0 ]
  %.02 = phi %struct._IP* [ %12, %7 ], [ %ip, %0 ]
  %3 = and i32 %i.03, 15, !dbg !182
  %4 = icmp eq i32 %3, 0, !dbg !182
  br i1 %4, label %5, label %7, !dbg !185

; <label>:5                                       ; preds = %.lr.ph
  %6 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str, i64 0, i64 0), i64 2, i64 1, %struct.__sFILE* %fp), !dbg !186
  br label %7, !dbg !186

; <label>:7                                       ; preds = %5, %.lr.ph
  %8 = getelementptr inbounds %struct._IP* %.02, i64 0, i32 0, !dbg !187
  %9 = load i32* %8, align 4, !dbg !187, !tbaa !188
  %10 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %fp, i8* getelementptr inbounds ([5 x i8]* @.str1, i64 0, i64 0), i32 %9) #5, !dbg !194
  %11 = getelementptr inbounds %struct._IP* %.02, i64 0, i32 1, !dbg !195
  %12 = load %struct._IP** %11, align 8, !dbg !195, !tbaa !196
  tail call void @llvm.dbg.value(metadata %struct._IP* %12, i64 0, metadata !83, metadata !176), !dbg !178
  %13 = add nuw nsw i32 %i.03, 1, !dbg !197
  tail call void @llvm.dbg.value(metadata i32 %13, i64 0, metadata !84, metadata !176), !dbg !198
  %14 = icmp eq %struct._IP* %12, null, !dbg !199
  br i1 %14, label %.loopexit, label %.lr.ph, !dbg !200

.loopexit:                                        ; preds = %7, %0
  ret void, !dbg !201
}
