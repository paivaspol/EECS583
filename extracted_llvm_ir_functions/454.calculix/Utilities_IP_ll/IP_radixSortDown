define %struct._IP* @IP_radixSortDown(%struct._IP* %ip) #0 {
entry:
  %cmp = icmp eq %struct._IP* %ip, null
  br i1 %cmp, label %if.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %ip0.025 = phi %struct._IP* [ %1, %for.body ], [ %ip, %entry ]
  %val = getelementptr inbounds %struct._IP* %ip0.025, i64 0, i32 0
  %0 = load i32* %val, align 4, !tbaa !0
  %sub = sub nsw i32 0, %0
  store i32 %sub, i32* %val, align 4, !tbaa !0
  %next = getelementptr inbounds %struct._IP* %ip0.025, i64 0, i32 1
  %1 = load %struct._IP** %next, align 8, !tbaa !3
  %cmp1 = icmp eq %struct._IP* %1, null
  br i1 %cmp1, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %call = tail call %struct._IP* @IP_radixSortUp(%struct._IP* %ip) #6
  %cmp422 = icmp eq %struct._IP* %call, null
  br i1 %cmp422, label %if.end, label %for.body5

for.body5:                                        ; preds = %for.end, %for.body5
  %ip0.123 = phi %struct._IP* [ %3, %for.body5 ], [ %call, %for.end ]
  %val6 = getelementptr inbounds %struct._IP* %ip0.123, i64 0, i32 0
  %2 = load i32* %val6, align 4, !tbaa !0
  %sub7 = sub nsw i32 0, %2
  store i32 %sub7, i32* %val6, align 4, !tbaa !0
  %next10 = getelementptr inbounds %struct._IP* %ip0.123, i64 0, i32 1
  %3 = load %struct._IP** %next10, align 8, !tbaa !3
  %cmp4 = icmp eq %struct._IP* %3, null
  br i1 %cmp4, label %if.end, label %for.body5

if.end:                                           ; preds = %for.end, %for.body5, %entry
  %ip1.0 = phi %struct._IP* [ null, %entry ], [ %call, %for.body5 ], [ null, %for.end ]
  ret %struct._IP* %ip1.0
}
