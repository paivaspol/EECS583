define i32 @IP_fp80(%struct._IO_FILE* %fp, %struct._IP* %ip, i32 %column) #0 {
entry:
  %cmp = icmp eq %struct._IO_FILE* %fp, null
  %cmp1 = icmp eq %struct._IP* %ip, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.end11, label %while.body

while.body:                                       ; preds = %entry, %if.end8
  %ip.addr.0 = phi %struct._IP* [ %4, %if.end8 ], [ %ip, %entry ]
  %column.addr.0 = phi i32 [ %column.addr.1, %if.end8 ], [ %column, %entry ]
  %val = getelementptr inbounds %struct._IP* %ip.addr.0, i64 0, i32 0
  %0 = load i32* %val, align 4, !tbaa !0
  %cmp3 = icmp slt i32 %0, 0
  %sub = sub nsw i32 0, %0
  %inum.0 = select i1 %cmp3, i32 %sub, i32 %0
  %1 = lshr i32 %0, 31
  %2 = or i32 %1, 2
  %cmp524 = icmp slt i32 %inum.0, 10
  br i1 %cmp524, label %for.end, label %for.body

for.body:                                         ; preds = %while.body, %for.body
  %pow.026 = phi i32 [ %mul, %for.body ], [ 10, %while.body ]
  %nchar.125 = phi i32 [ %inc, %for.body ], [ %2, %while.body ]
  %inc = add nsw i32 %nchar.125, 1
  %mul = mul nsw i32 %pow.026, 10
  %cmp5 = icmp slt i32 %inum.0, %mul
  br i1 %cmp5, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %while.body
  %nchar.1.lcssa = phi i32 [ %2, %while.body ], [ %inc, %for.body ]
  %add = add nsw i32 %nchar.1.lcssa, %column.addr.0
  %cmp6 = icmp sgt i32 %add, 79
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %for.end
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %fp)
  %.pre = load i32* %val, align 4, !tbaa !0
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %for.end
  %3 = phi i32 [ %.pre, %if.then7 ], [ %0, %for.end ]
  %column.addr.1 = phi i32 [ %nchar.1.lcssa, %if.then7 ], [ %add, %for.end ]
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([4 x i8]* @.str3, i64 0, i64 0), i32 %3) #4
  %next = getelementptr inbounds %struct._IP* %ip.addr.0, i64 0, i32 1
  %4 = load %struct._IP** %next, align 8, !tbaa !3
  %cmp2.old = icmp eq %struct._IP* %4, null
  br i1 %cmp2.old, label %if.end11, label %while.body

if.end11:                                         ; preds = %if.end8, %entry
  %column.addr.2 = phi i32 [ %column, %entry ], [ %column.addr.1, %if.end8 ]
  ret i32 %column.addr.2
}
