define %struct._IP* @IP_mergeUp(%struct._IP* %ip1, %struct._IP* %ip2) #0 {
entry:
  %cmp = icmp eq %struct._IP* %ip1, null
  br i1 %cmp, label %if.end28, label %if.else

if.else:                                          ; preds = %entry
  %cmp1 = icmp eq %struct._IP* %ip2, null
  br i1 %cmp1, label %if.end28, label %if.else3

if.else3:                                         ; preds = %if.else
  %val = getelementptr inbounds %struct._IP* %ip2, i64 0, i32 0
  %0 = load i32* %val, align 4, !tbaa !0
  %val4 = getelementptr inbounds %struct._IP* %ip1, i64 0, i32 0
  %1 = load i32* %val4, align 4, !tbaa !0
  %cmp5 = icmp slt i32 %0, %1
  br i1 %cmp5, label %if.then6, label %if.else7

if.then6:                                         ; preds = %if.else3
  %next = getelementptr inbounds %struct._IP* %ip2, i64 0, i32 1
  %2 = load %struct._IP** %next, align 8, !tbaa !3
  br label %while.cond.preheader

if.else7:                                         ; preds = %if.else3
  %next8 = getelementptr inbounds %struct._IP* %ip1, i64 0, i32 1
  %3 = load %struct._IP** %next8, align 8, !tbaa !3
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.else7, %if.then6
  %ip1.addr.0.ph = phi %struct._IP* [ %ip1, %if.then6 ], [ %3, %if.else7 ]
  %ip2.addr.0.ph = phi %struct._IP* [ %2, %if.then6 ], [ %ip2, %if.else7 ]
  %head.0.ph = phi %struct._IP* [ %ip2, %if.then6 ], [ %ip1, %if.else7 ]
  %cmp971 = icmp eq %struct._IP* %ip1.addr.0.ph, null
  %cmp105972 = icmp eq %struct._IP* %ip2.addr.0.ph, null
  %or.cond6073 = or i1 %cmp971, %cmp105972
  br i1 %or.cond6073, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %while.cond.preheader, %if.else17
  %tail.0.ph5576 = phi %struct._IP* [ %ip1.addr.0.ph5274, %if.else17 ], [ %head.0.ph, %while.cond.preheader ]
  %ip2.addr.0.ph5375 = phi %struct._IP* [ %ip2.addr.061, %if.else17 ], [ %ip2.addr.0.ph, %while.cond.preheader ]
  %ip1.addr.0.ph5274 = phi %struct._IP* [ %7, %if.else17 ], [ %ip1.addr.0.ph, %while.cond.preheader ]
  %val12 = getelementptr inbounds %struct._IP* %ip1.addr.0.ph5274, i64 0, i32 0
  %4 = load i32* %val12, align 4, !tbaa !0
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %if.then14
  %tail.062 = phi %struct._IP* [ %tail.0.ph5576, %while.body.lr.ph ], [ %ip2.addr.061, %if.then14 ]
  %ip2.addr.061 = phi %struct._IP* [ %ip2.addr.0.ph5375, %while.body.lr.ph ], [ %6, %if.then14 ]
  %val11 = getelementptr inbounds %struct._IP* %ip2.addr.061, i64 0, i32 0
  %5 = load i32* %val11, align 4, !tbaa !0
  %cmp13 = icmp slt i32 %5, %4
  %next15 = getelementptr inbounds %struct._IP* %tail.062, i64 0, i32 1
  br i1 %cmp13, label %if.then14, label %if.else17

if.then14:                                        ; preds = %while.body
  store %struct._IP* %ip2.addr.061, %struct._IP** %next15, align 8, !tbaa !3
  %next16 = getelementptr inbounds %struct._IP* %ip2.addr.061, i64 0, i32 1
  %6 = load %struct._IP** %next16, align 8, !tbaa !3
  %cmp10 = icmp eq %struct._IP* %6, null
  br i1 %cmp10, label %while.end.thread, label %while.body

while.end.thread:                                 ; preds = %if.then14
  %next2388 = getelementptr inbounds %struct._IP* %ip2.addr.061, i64 0, i32 1
  br label %if.else24

if.else17:                                        ; preds = %while.body
  store %struct._IP* %ip1.addr.0.ph5274, %struct._IP** %next15, align 8, !tbaa !3
  %next19 = getelementptr inbounds %struct._IP* %ip1.addr.0.ph5274, i64 0, i32 1
  %7 = load %struct._IP** %next19, align 8, !tbaa !3
  %cmp9 = icmp eq %struct._IP* %7, null
  %cmp1059 = icmp eq %struct._IP* %ip2.addr.061, null
  %or.cond60 = or i1 %cmp9, %cmp1059
  br i1 %or.cond60, label %while.end, label %while.body.lr.ph

while.end:                                        ; preds = %while.cond.preheader, %if.else17
  %ip1.addr.0.ph5266 = phi %struct._IP* [ %ip1.addr.0.ph, %while.cond.preheader ], [ %7, %if.else17 ]
  %cmp9.lcssa = phi i1 [ %cmp971, %while.cond.preheader ], [ %cmp9, %if.else17 ]
  %tail.0.lcssa = phi %struct._IP* [ %head.0.ph, %while.cond.preheader ], [ %ip1.addr.0.ph5274, %if.else17 ]
  %ip2.addr.0.lcssa = phi %struct._IP* [ %ip2.addr.0.ph, %while.cond.preheader ], [ %ip2.addr.061, %if.else17 ]
  %next23 = getelementptr inbounds %struct._IP* %tail.0.lcssa, i64 0, i32 1
  br i1 %cmp9.lcssa, label %if.then22, label %if.else24

if.then22:                                        ; preds = %while.end
  store %struct._IP* %ip2.addr.0.lcssa, %struct._IP** %next23, align 8, !tbaa !3
  br label %if.end28

if.else24:                                        ; preds = %while.end.thread, %while.end
  %next2390 = phi %struct._IP** [ %next2388, %while.end.thread ], [ %next23, %while.end ]
  %ip1.addr.0.ph526689 = phi %struct._IP* [ %ip1.addr.0.ph5274, %while.end.thread ], [ %ip1.addr.0.ph5266, %while.end ]
  store %struct._IP* %ip1.addr.0.ph526689, %struct._IP** %next2390, align 8, !tbaa !3
  br label %if.end28

if.end28:                                         ; preds = %if.else, %entry, %if.else24, %if.then22
  %head.1 = phi %struct._IP* [ %head.0.ph, %if.then22 ], [ %head.0.ph, %if.else24 ], [ %ip2, %entry ], [ %ip1, %if.else ]
  ret %struct._IP* %head.1
}
