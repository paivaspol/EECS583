define %struct._IP* @IP_mergeUp(%struct._IP* %ip1, %struct._IP* %ip2) #0 {
  tail call void @llvm.dbg.value(metadata %struct._IP* %ip1, i64 0, metadata !123, metadata !176), !dbg !309
  tail call void @llvm.dbg.value(metadata %struct._IP* %ip2, i64 0, metadata !124, metadata !176), !dbg !310
  %1 = icmp eq %struct._IP* %ip1, null, !dbg !311
  br i1 %1, label %37, label %2, !dbg !313

; <label>:2                                       ; preds = %0
  %3 = icmp eq %struct._IP* %ip2, null, !dbg !314
  br i1 %3, label %37, label %4, !dbg !316

; <label>:4                                       ; preds = %2
  %5 = getelementptr inbounds %struct._IP* %ip2, i64 0, i32 0, !dbg !317
  %6 = load i32* %5, align 4, !dbg !317, !tbaa !188
  %7 = getelementptr inbounds %struct._IP* %ip1, i64 0, i32 0, !dbg !320
  %8 = load i32* %7, align 4, !dbg !320, !tbaa !188
  %9 = icmp slt i32 %6, %8, !dbg !321
  br i1 %9, label %10, label %13, !dbg !322

; <label>:10                                      ; preds = %4
  tail call void @llvm.dbg.value(metadata %struct._IP* %ip2, i64 0, metadata !126, metadata !176), !dbg !323
  tail call void @llvm.dbg.value(metadata %struct._IP* %ip2, i64 0, metadata !125, metadata !176), !dbg !324
  %11 = getelementptr inbounds %struct._IP* %ip2, i64 0, i32 1, !dbg !325
  %12 = load %struct._IP** %11, align 8, !dbg !325, !tbaa !196
  tail call void @llvm.dbg.value(metadata %struct._IP* %12, i64 0, metadata !124, metadata !176), !dbg !310
  br label %.preheader, !dbg !327

; <label>:13                                      ; preds = %4
  tail call void @llvm.dbg.value(metadata %struct._IP* %ip1, i64 0, metadata !126, metadata !176), !dbg !323
  tail call void @llvm.dbg.value(metadata %struct._IP* %ip1, i64 0, metadata !125, metadata !176), !dbg !324
  %14 = getelementptr inbounds %struct._IP* %ip1, i64 0, i32 1, !dbg !328
  %15 = load %struct._IP** %14, align 8, !dbg !328, !tbaa !196
  tail call void @llvm.dbg.value(metadata %struct._IP* %15, i64 0, metadata !123, metadata !176), !dbg !309
  br label %.preheader

.preheader:                                       ; preds = %13, %10
  %.02.ph = phi %struct._IP* [ %15, %13 ], [ %ip1, %10 ]
  %.0.ph = phi %struct._IP* [ %ip2, %13 ], [ %12, %10 ]
  %head.0.ph = phi %struct._IP* [ %ip1, %13 ], [ %ip2, %10 ]
  %16 = icmp ne %struct._IP* %.02.ph, null, !dbg !330
  %17 = icmp ne %struct._IP* %.0.ph, null, !dbg !331
  %or.cond917 = and i1 %16, %17, !dbg !332
  br i1 %or.cond917, label %.lr.ph, label %.critedge, !dbg !332

.lr.ph:                                           ; preds = %.preheader, %.outer
  %tail.0.ph620 = phi %struct._IP* [ %.02.ph318, %.outer ], [ %head.0.ph, %.preheader ]
  %.0.ph419 = phi %struct._IP* [ %.010, %.outer ], [ %.0.ph, %.preheader ]
  %.02.ph318 = phi %struct._IP* [ %30, %.outer ], [ %.02.ph, %.preheader ]
  %18 = getelementptr inbounds %struct._IP* %.02.ph318, i64 0, i32 0, !dbg !333
  %19 = load i32* %18, align 4, !dbg !333, !tbaa !188
  br label %20, !dbg !332

; <label>:20                                      ; preds = %25, %.lr.ph
  %tail.011 = phi %struct._IP* [ %tail.0.ph620, %.lr.ph ], [ %.010, %25 ]
  %.010 = phi %struct._IP* [ %.0.ph419, %.lr.ph ], [ %27, %25 ]
  %21 = getelementptr inbounds %struct._IP* %.010, i64 0, i32 0, !dbg !336
  %22 = load i32* %21, align 4, !dbg !336, !tbaa !188
  %23 = icmp slt i32 %22, %19, !dbg !337
  %24 = getelementptr inbounds %struct._IP* %tail.011, i64 0, i32 1, !dbg !338
  br i1 %23, label %25, label %.outer, !dbg !340

; <label>:25                                      ; preds = %20
  store %struct._IP* %.010, %struct._IP** %24, align 8, !dbg !341, !tbaa !196
  tail call void @llvm.dbg.value(metadata %struct._IP* %27, i64 0, metadata !126, metadata !176), !dbg !323
  %26 = getelementptr inbounds %struct._IP* %.010, i64 0, i32 1, !dbg !342
  %27 = load %struct._IP** %26, align 8, !dbg !342, !tbaa !196
  tail call void @llvm.dbg.value(metadata %struct._IP* %27, i64 0, metadata !124, metadata !176), !dbg !310
  %28 = icmp eq %struct._IP* %27, null, !dbg !331
  br i1 %28, label %.critedge, label %20, !dbg !332

.outer:                                           ; preds = %20
  store %struct._IP* %.02.ph318, %struct._IP** %24, align 8, !dbg !343, !tbaa !196
  tail call void @llvm.dbg.value(metadata %struct._IP* %30, i64 0, metadata !126, metadata !176), !dbg !323
  %29 = getelementptr inbounds %struct._IP* %.02.ph318, i64 0, i32 1, !dbg !345
  %30 = load %struct._IP** %29, align 8, !dbg !345, !tbaa !196
  tail call void @llvm.dbg.value(metadata %struct._IP* %30, i64 0, metadata !123, metadata !176), !dbg !309
  %31 = icmp ne %struct._IP* %30, null, !dbg !330
  %32 = icmp ne %struct._IP* %.010, null, !dbg !331
  %or.cond9 = and i1 %31, %32, !dbg !332
  br i1 %or.cond9, label %.lr.ph, label %.critedge, !dbg !332

.critedge:                                        ; preds = %.outer, %25, %.preheader
  %.02.ph3.lcssa = phi %struct._IP* [ %.02.ph, %.preheader ], [ %.02.ph318, %25 ], [ %30, %.outer ]
  %tail.0.lcssa = phi %struct._IP* [ %head.0.ph, %.preheader ], [ %.010, %25 ], [ %.02.ph318, %.outer ]
  %.0.lcssa = phi %struct._IP* [ %.0.ph, %.preheader ], [ null, %25 ], [ %.010, %.outer ]
  %33 = icmp eq %struct._IP* %.02.ph3.lcssa, null, !dbg !346
  %34 = getelementptr inbounds %struct._IP* %tail.0.lcssa, i64 0, i32 1, !dbg !348
  br i1 %33, label %35, label %36, !dbg !350

; <label>:35                                      ; preds = %.critedge
  store %struct._IP* %.0.lcssa, %struct._IP** %34, align 8, !dbg !351, !tbaa !196
  br label %37, !dbg !352

; <label>:36                                      ; preds = %.critedge
  store %struct._IP* %.02.ph3.lcssa, %struct._IP** %34, align 8, !dbg !353, !tbaa !196
  br label %37

; <label>:37                                      ; preds = %2, %0, %36, %35
  %head.1 = phi %struct._IP* [ %head.0.ph, %35 ], [ %head.0.ph, %36 ], [ %ip2, %0 ], [ %ip1, %2 ]
  ret %struct._IP* %head.1, !dbg !355
}
