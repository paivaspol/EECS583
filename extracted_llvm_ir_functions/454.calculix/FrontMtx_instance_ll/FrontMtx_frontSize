define i32 @FrontMtx_frontSize(%struct._FrontMtx* %frontmtx, i32 %J) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._FrontMtx* %frontmtx}, i64 0, metadata !211), !dbg !332
  tail call void @llvm.dbg.value(metadata !{i32 %J}, i64 0, metadata !212), !dbg !333
  %cmp = icmp eq %struct._FrontMtx* %frontmtx, null, !dbg !334
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !334

lor.lhs.false:                                    ; preds = %entry
  %frontsizesIV = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 12, !dbg !334
  %0 = load %struct._IV** %frontsizesIV, align 8, !dbg !334, !tbaa !288
  %cmp1 = icmp eq %struct._IV* %0, null, !dbg !334
  %cmp3 = icmp slt i32 %J, 0, !dbg !334
  %or.cond = or i1 %cmp1, %cmp3, !dbg !334
  br i1 %or.cond, label %if.then, label %lor.lhs.false4, !dbg !334

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %nfront = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 0, !dbg !334
  %1 = load i32* %nfront, align 4, !dbg !334, !tbaa !293
  %cmp5 = icmp sgt i32 %1, %J, !dbg !334
  br i1 %cmp5, label %if.end, label %if.then, !dbg !334

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !335, !tbaa !288
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([55 x i8]* @.str6, i64 0, i64 0), %struct._FrontMtx* %frontmtx, i32 %J) #6, !dbg !335
  tail call void @exit(i32 -1) #7, !dbg !337
  unreachable, !dbg !337

if.end:                                           ; preds = %lor.lhs.false4
  %call7 = tail call i32 @IV_entry(%struct._IV* %0, i32 %J) #6, !dbg !338
  ret i32 %call7, !dbg !338
}
