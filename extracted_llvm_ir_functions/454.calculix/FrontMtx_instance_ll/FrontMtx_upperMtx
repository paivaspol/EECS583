define %struct._SubMtx* @FrontMtx_upperMtx(%struct._FrontMtx* %frontmtx, i32 %J, i32 %K) #0 {
entry:
  %mtx = alloca %struct._SubMtx*, align 8
  %cmp = icmp eq %struct._FrontMtx* %frontmtx, null
  %cmp1 = icmp slt i32 %J, 0
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %entry
  %nfront = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 0
  %0 = load i32* %nfront, align 4, !tbaa !3
  %cmp3 = icmp sle i32 %0, %J
  %cmp5 = icmp slt i32 %K, %J
  %or.cond52 = or i1 %cmp3, %cmp5
  %cmp8 = icmp slt i32 %0, %K
  %or.cond53 = or i1 %or.cond52, %cmp8
  br i1 %or.cond53, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false2, %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([57 x i8]* @.str11, i64 0, i64 0), %struct._FrontMtx* %frontmtx, i32 %J, i32 %K) #5
  call void @exit(i32 -1) #6
  unreachable

if.end:                                           ; preds = %lor.lhs.false2
  %dataMode = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 6
  %2 = load i32* %dataMode, align 4, !tbaa !3
  %cmp9 = icmp eq i32 %2, 1
  br i1 %cmp9, label %if.then10, label %if.else20

if.then10:                                        ; preds = %if.end
  %cmp12 = icmp eq i32 %0, %K
  br i1 %cmp12, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.then10
  %idxprom = sext i32 %J to i64
  %p_mtxUJN = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 20
  %3 = load %struct._SubMtx*** %p_mtxUJN, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %struct._SubMtx** %3, i64 %idxprom
  %4 = load %struct._SubMtx** %arrayidx, align 8, !tbaa !0
  store %struct._SubMtx* %4, %struct._SubMtx** %mtx, align 8, !tbaa !0
  br label %if.end30

if.else:                                          ; preds = %if.then10
  %cmp14 = icmp eq i32 %K, %J
  br i1 %cmp14, label %if.then15, label %if.end30

if.then15:                                        ; preds = %if.else
  %idxprom16 = sext i32 %J to i64
  %p_mtxUJJ = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 19
  %5 = load %struct._SubMtx*** %p_mtxUJJ, align 8, !tbaa !0
  %arrayidx17 = getelementptr inbounds %struct._SubMtx** %5, i64 %idxprom16
  %6 = load %struct._SubMtx** %arrayidx17, align 8, !tbaa !0
  store %struct._SubMtx* %6, %struct._SubMtx** %mtx, align 8, !tbaa !0
  br label %if.end30

if.else20:                                        ; preds = %if.end
  %upperhash = getelementptr inbounds %struct._FrontMtx* %frontmtx, i64 0, i32 24
  %7 = load %struct._I2Ohash** %upperhash, align 8, !tbaa !0
  %cmp21 = icmp eq %struct._I2Ohash* %7, null
  br i1 %cmp21, label %if.then22, label %if.else23

if.then22:                                        ; preds = %if.else20
  store %struct._SubMtx* null, %struct._SubMtx** %mtx, align 8, !tbaa !0
  br label %if.end30

if.else23:                                        ; preds = %if.else20
  %8 = bitcast %struct._SubMtx** %mtx to i8**
  %call25 = call i32 @I2Ohash_locate(%struct._I2Ohash* %7, i32 %J, i32 %K, i8** %8) #5
  %cmp26 = icmp eq i32 %call25, 0
  br i1 %cmp26, label %if.then27, label %if.else23.if.end30_crit_edge

if.else23.if.end30_crit_edge:                     ; preds = %if.else23
  %.pre = load %struct._SubMtx** %mtx, align 8, !tbaa !0
  br label %if.end30

if.then27:                                        ; preds = %if.else23
  store %struct._SubMtx* null, %struct._SubMtx** %mtx, align 8, !tbaa !0
  br label %if.end30

if.end30:                                         ; preds = %if.else23.if.end30_crit_edge, %if.then22, %if.then27, %if.then13, %if.then15, %if.else
  %9 = phi %struct._SubMtx* [ %.pre, %if.else23.if.end30_crit_edge ], [ null, %if.then22 ], [ null, %if.then27 ], [ %4, %if.then13 ], [ %6, %if.then15 ], [ undef, %if.else ]
  ret %struct._SubMtx* %9
}
