define i32 @Tree_writeForHumanEye(%struct._Tree* %tree, %struct._IO_FILE* %fp) #0 {
entry:
  %cmp = icmp eq %struct._Tree* %tree, null
  %cmp1 = icmp eq %struct._IO_FILE* %fp, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([58 x i8]* @.str28, i64 0, i64 0), %struct._Tree* %tree, %struct._IO_FILE* %fp) #5
  tail call void @exit(i32 -1) #8
  unreachable

if.end:                                           ; preds = %entry
  %call2 = tail call i32 @Tree_writeStats(%struct._Tree* %tree, %struct._IO_FILE* %fp) #7
  %cmp3 = icmp eq i32 %call2, 0
  br i1 %cmp3, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([92 x i8]* @.str29, i64 0, i64 0), %struct._Tree* %tree, %struct._IO_FILE* %fp, i32 0, %struct._Tree* %tree, %struct._IO_FILE* %fp) #5
  br label %return

if.end6:                                          ; preds = %if.end
  %2 = tail call i64 @fwrite(i8* getelementptr inbounds ([37 x i8]* @.str30, i64 0, i64 0), i64 36, i64 1, %struct._IO_FILE* %fp) #9
  %n = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 0
  %3 = load i32* %n, align 4, !tbaa !3
  %cmp833 = icmp sgt i32 %3, 0
  br i1 %cmp833, label %for.body.lr.ph, label %return

for.body.lr.ph:                                   ; preds = %if.end6
  %par = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 2
  %fch = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 3
  %sib = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %4 = load i32** %par, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i32* %4, i64 %indvars.iv
  %5 = load i32* %arrayidx, align 4, !tbaa !3
  %6 = load i32** %fch, align 8, !tbaa !0
  %arrayidx10 = getelementptr inbounds i32* %6, i64 %indvars.iv
  %7 = load i32* %arrayidx10, align 4, !tbaa !3
  %8 = load i32** %sib, align 8, !tbaa !0
  %arrayidx12 = getelementptr inbounds i32* %8, i64 %indvars.iv
  %9 = load i32* %arrayidx12, align 4, !tbaa !3
  %10 = trunc i64 %indvars.iv to i32
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([20 x i8]* @.str31, i64 0, i64 0), i32 %10, i32 %5, i32 %7, i32 %9) #5
  %indvars.iv.next = add i64 %indvars.iv, 1
  %11 = load i32* %n, align 4, !tbaa !3
  %12 = trunc i64 %indvars.iv.next to i32
  %cmp8 = icmp slt i32 %12, %11
  br i1 %cmp8, label %for.body, label %return

return:                                           ; preds = %if.end6, %for.body, %if.then4
  %retval.0 = phi i32 [ 0, %if.then4 ], [ 1, %for.body ], [ 1, %if.end6 ]
  ret i32 %retval.0
}
