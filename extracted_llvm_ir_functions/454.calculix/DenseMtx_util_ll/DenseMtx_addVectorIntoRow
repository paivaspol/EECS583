define void @DenseMtx_addVectorIntoRow(%struct._DenseMtx* %mtx, i32 %irow, double* %vec) #0 {
  %nrow = alloca i32, align 4
  %ncol = alloca i32, align 4
  %colind = alloca i32*, align 8
  %rowind = alloca i32*, align 8
  tail call void @llvm.dbg.value(metadata %struct._DenseMtx* %mtx, i64 0, metadata !178, metadata !195), !dbg !843
  tail call void @llvm.dbg.value(metadata i32 %irow, i64 0, metadata !179, metadata !195), !dbg !844
  tail call void @llvm.dbg.value(metadata double* %vec, i64 0, metadata !180, metadata !195), !dbg !845
  %1 = icmp eq %struct._DenseMtx* %mtx, null, !dbg !846
  %2 = icmp slt i32 %irow, 0, !dbg !848
  %or.cond = or i1 %1, %2, !dbg !849
  %3 = icmp eq double* %vec, null, !dbg !850
  %or.cond3 = or i1 %or.cond, %3, !dbg !849
  br i1 %or.cond3, label %4, label %7, !dbg !849

; <label>:4                                       ; preds = %0
  %5 = load %struct.__sFILE** @__stderrp, align 8, !dbg !851, !tbaa !202
  %6 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %5, i8* getelementptr inbounds ([82 x i8]* @.str17, i64 0, i64 0), %struct._DenseMtx* %mtx, i32 %irow, double* %vec) #7, !dbg !853
  tail call void @exit(i32 -1) #8, !dbg !854
  unreachable, !dbg !854

; <label>:7                                       ; preds = %0
  tail call void @llvm.dbg.value(metadata i32* %nrow, i64 0, metadata !187, metadata !195), !dbg !855
  tail call void @llvm.dbg.value(metadata i32** %rowind, i64 0, metadata !190, metadata !195), !dbg !856
  call void @DenseMtx_rowIndices(%struct._DenseMtx* %mtx, i32* %nrow, i32** %rowind) #7, !dbg !857
  call void @llvm.dbg.value(metadata i32* %nrow, i64 0, metadata !187, metadata !195), !dbg !855
  %8 = load i32* %nrow, align 4, !dbg !858, !tbaa !216
  %9 = icmp sgt i32 %8, %irow, !dbg !860
  br i1 %9, label %13, label %10, !dbg !861

; <label>:10                                      ; preds = %7
  %11 = load %struct.__sFILE** @__stderrp, align 8, !dbg !862, !tbaa !202
  %12 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %11, i8* getelementptr inbounds ([68 x i8]* @.str18, i64 0, i64 0), i32 %irow, i32 %8) #7, !dbg !864
  call void @exit(i32 -1) #8, !dbg !865
  unreachable, !dbg !865

; <label>:13                                      ; preds = %7
  call void @llvm.dbg.value(metadata i32* %ncol, i64 0, metadata !188, metadata !195), !dbg !866
  call void @llvm.dbg.value(metadata i32** %colind, i64 0, metadata !189, metadata !195), !dbg !867
  call void @DenseMtx_columnIndices(%struct._DenseMtx* %mtx, i32* %ncol, i32** %colind) #7, !dbg !868
  %14 = call i32 @DenseMtx_rowIncrement(%struct._DenseMtx* %mtx) #7, !dbg !869
  call void @llvm.dbg.value(metadata i32 %14, i64 0, metadata !182, metadata !195), !dbg !870
  %15 = call i32 @DenseMtx_columnIncrement(%struct._DenseMtx* %mtx) #7, !dbg !871
  call void @llvm.dbg.value(metadata i32 %15, i64 0, metadata !183, metadata !195), !dbg !872
  %16 = call double* @DenseMtx_entries(%struct._DenseMtx* %mtx) #7, !dbg !873
  call void @llvm.dbg.value(metadata double* %16, i64 0, metadata !181, metadata !195), !dbg !874
  %17 = getelementptr inbounds %struct._DenseMtx* %mtx, i64 0, i32 0, !dbg !875
  %18 = load i32* %17, align 4, !dbg !875, !tbaa !302
  switch i32 %18, label %.loopexit [
    i32 1, label %19
    i32 2, label %33
  ], !dbg !877

; <label>:19                                      ; preds = %13
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !185, metadata !195), !dbg !878
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !184, metadata !195), !dbg !879
  call void @llvm.dbg.value(metadata i32 %22, i64 0, metadata !186, metadata !195), !dbg !880
  call void @llvm.dbg.value(metadata i32* %ncol, i64 0, metadata !188, metadata !195), !dbg !866
  %20 = load i32* %ncol, align 4, !dbg !881, !tbaa !216
  %21 = icmp sgt i32 %20, 0, !dbg !885
  br i1 %21, label %.lr.ph, label %.loopexit, !dbg !886

.lr.ph:                                           ; preds = %19
  %22 = mul nsw i32 %14, %irow, !dbg !887
  %23 = sext i32 %22 to i64
  %24 = sext i32 %15 to i64
  br label %25, !dbg !886

; <label>:25                                      ; preds = %.lr.ph, %25
  %indvars.iv12 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next13, %25 ]
  %indvars.iv = phi i64 [ %23, %.lr.ph ], [ %indvars.iv.next, %25 ]
  %jj.06 = phi i32 [ 0, %.lr.ph ], [ %31, %25 ]
  %26 = getelementptr inbounds double* %vec, i64 %indvars.iv12, !dbg !888
  %27 = load double* %26, align 8, !dbg !888, !tbaa !326
  %28 = getelementptr inbounds double* %16, i64 %indvars.iv, !dbg !890
  %29 = load double* %28, align 8, !dbg !891, !tbaa !326
  %30 = fadd double %27, %29, !dbg !891
  store double %30, double* %28, align 8, !dbg !891, !tbaa !326
  %31 = add nuw nsw i32 %jj.06, 1, !dbg !892
  call void @llvm.dbg.value(metadata i32 %31, i64 0, metadata !184, metadata !195), !dbg !879
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !886
  call void @llvm.dbg.value(metadata i32 %31, i64 0, metadata !185, metadata !195), !dbg !878
  %indvars.iv.next = add i64 %indvars.iv, %24, !dbg !886
  call void @llvm.dbg.value(metadata i32* %ncol, i64 0, metadata !188, metadata !195), !dbg !866
  %32 = icmp slt i32 %31, %20, !dbg !885
  br i1 %32, label %25, label %.loopexit, !dbg !886

; <label>:33                                      ; preds = %13
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !185, metadata !195), !dbg !878
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !184, metadata !195), !dbg !879
  call void @llvm.dbg.value(metadata i32 %36, i64 0, metadata !186, metadata !195), !dbg !880
  call void @llvm.dbg.value(metadata i32* %ncol, i64 0, metadata !188, metadata !195), !dbg !866
  %34 = load i32* %ncol, align 4, !dbg !893, !tbaa !216
  %35 = icmp sgt i32 %34, 0, !dbg !898
  br i1 %35, label %.lr.ph11, label %.loopexit, !dbg !899

.lr.ph11:                                         ; preds = %33
  %36 = mul nsw i32 %14, %irow, !dbg !900
  %37 = sext i32 %36 to i64
  %38 = sext i32 %15 to i64
  br label %39, !dbg !899

; <label>:39                                      ; preds = %.lr.ph11, %39
  %indvars.iv16 = phi i64 [ 0, %.lr.ph11 ], [ %indvars.iv.next17, %39 ]
  %indvars.iv14 = phi i64 [ %37, %.lr.ph11 ], [ %indvars.iv.next15, %39 ]
  %jj.19 = phi i32 [ 0, %.lr.ph11 ], [ %60, %39 ]
  %40 = trunc i64 %indvars.iv16 to i32, !dbg !901
  %41 = shl nsw i32 %40, 1, !dbg !901
  %42 = sext i32 %41 to i64, !dbg !903
  %43 = getelementptr inbounds double* %vec, i64 %42, !dbg !903
  %44 = load double* %43, align 8, !dbg !903, !tbaa !326
  %45 = trunc i64 %indvars.iv14 to i32, !dbg !904
  %46 = shl nsw i32 %45, 1, !dbg !904
  %47 = sext i32 %46 to i64, !dbg !905
  %48 = getelementptr inbounds double* %16, i64 %47, !dbg !905
  %49 = load double* %48, align 8, !dbg !906, !tbaa !326
  %50 = fadd double %44, %49, !dbg !906
  store double %50, double* %48, align 8, !dbg !906, !tbaa !326
  %51 = or i32 %41, 1, !dbg !907
  %52 = sext i32 %51 to i64, !dbg !908
  %53 = getelementptr inbounds double* %vec, i64 %52, !dbg !908
  %54 = load double* %53, align 8, !dbg !908, !tbaa !326
  %55 = or i32 %46, 1, !dbg !909
  %56 = sext i32 %55 to i64, !dbg !910
  %57 = getelementptr inbounds double* %16, i64 %56, !dbg !910
  %58 = load double* %57, align 8, !dbg !911, !tbaa !326
  %59 = fadd double %54, %58, !dbg !911
  store double %59, double* %57, align 8, !dbg !911, !tbaa !326
  %60 = add nuw nsw i32 %jj.19, 1, !dbg !912
  call void @llvm.dbg.value(metadata i32 %60, i64 0, metadata !184, metadata !195), !dbg !879
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !899
  call void @llvm.dbg.value(metadata i32 %60, i64 0, metadata !185, metadata !195), !dbg !878
  %indvars.iv.next15 = add i64 %indvars.iv14, %38, !dbg !899
  call void @llvm.dbg.value(metadata i32* %ncol, i64 0, metadata !188, metadata !195), !dbg !866
  %61 = icmp slt i32 %60, %34, !dbg !898
  br i1 %61, label %39, label %.loopexit, !dbg !899

.loopexit:                                        ; preds = %39, %25, %33, %19, %13
  ret void, !dbg !913
}
