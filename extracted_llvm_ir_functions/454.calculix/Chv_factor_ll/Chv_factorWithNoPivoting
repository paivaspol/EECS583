define i32 @Chv_factorWithNoPivoting(%struct._Chv* %chv, %struct._PatchAndGoInfo* %info) #0 {
entry:
  %wrkChv = alloca %struct._Chv, align 8
  %ncol = alloca i32, align 4
  %nrow = alloca i32, align 4
  %colind = alloca i32*, align 8
  %rowind = alloca i32*, align 8
  %colmaxabs = alloca double, align 8
  %diagabs = alloca double, align 8
  %rowmaxabs = alloca double, align 8
  %colmaxabs38 = alloca double, align 8
  %diagabs39 = alloca double, align 8
  %rowmaxabs41 = alloca double, align 8
  %0 = bitcast %struct._Chv* %wrkChv to i8*
  call void @llvm.lifetime.start(i64 80, i8* %0) #1
  %cmp = icmp eq %struct._Chv* %chv, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %2 = call i64 @fwrite(i8* getelementptr inbounds ([56 x i8]* @.str, i64 0, i64 0), i64 55, i64 1, %struct._IO_FILE* %1)
  call void @exit(i32 -1) #6
  unreachable

if.end:                                           ; preds = %entry
  %nD1 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 1
  %3 = load i32* %nD1, align 4, !tbaa !3
  call void @Chv_setDefaultFields(%struct._Chv* %wrkChv) #7
  call void @Chv_rowIndices(%struct._Chv* %chv, i32* %nrow, i32** %rowind) #7
  call void @Chv_columnIndices(%struct._Chv* %chv, i32* %ncol, i32** %colind) #7
  %id = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 0
  %4 = load i32* %id, align 4, !tbaa !3
  %nL = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 2
  %5 = load i32* %nL, align 4, !tbaa !3
  %nU = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 3
  %6 = load i32* %nU, align 4, !tbaa !3
  %type = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 4
  %7 = load i32* %type, align 4, !tbaa !3
  %symflag = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 5
  %8 = load i32* %symflag, align 4, !tbaa !3
  %9 = load i32** %rowind, align 8, !tbaa !0
  %10 = load i32** %colind, align 8, !tbaa !0
  %call2 = call double* @Chv_entries(%struct._Chv* %chv) #7
  call void @Chv_initWithPointers(%struct._Chv* %wrkChv, i32 %4, i32 %3, i32 %5, i32 %6, i32 %7, i32 %8, i32* %9, i32* %10, double* %call2) #7
  %cmp3 = icmp eq %struct._PatchAndGoInfo* %info, null
  br i1 %cmp3, label %while.cond.preheader, label %if.else

while.cond.preheader:                             ; preds = %if.end
  %cmp5129 = icmp sgt i32 %3, 0
  br i1 %cmp5129, label %while.body, label %if.end92

while.body:                                       ; preds = %while.cond.preheader, %if.end9
  %nelim.0130 = phi i32 [ %inc, %if.end9 ], [ 0, %while.cond.preheader ]
  %call6 = call i32 @Chv_r1upd(%struct._Chv* %wrkChv) #8
  %cmp7 = icmp eq i32 %call6, 0
  br i1 %cmp7, label %if.end92, label %if.end9

if.end9:                                          ; preds = %while.body
  call void @Chv_shift(%struct._Chv* %wrkChv, i32 1) #7
  %inc = add nsw i32 %nelim.0130, 1
  %cmp5 = icmp slt i32 %inc, %3
  br i1 %cmp5, label %while.body, label %if.end92

if.else:                                          ; preds = %if.end
  %strategy = getelementptr inbounds %struct._PatchAndGoInfo* %info, i64 0, i32 0
  %11 = load i32* %strategy, align 4, !tbaa !3
  switch i32 %11, label %if.else87 [
    i32 1, label %for.cond.preheader
    i32 2, label %for.cond42.preheader
  ]

for.cond42.preheader:                             ; preds = %if.else
  %cmp43136 = icmp sgt i32 %3, 0
  br i1 %cmp43136, label %for.body44.lr.ph, label %if.end92

for.body44.lr.ph:                                 ; preds = %for.cond42.preheader
  %fudge = getelementptr inbounds %struct._PatchAndGoInfo* %info, i64 0, i32 2
  %entries60 = getelementptr inbounds %struct._Chv* %wrkChv, i64 0, i32 8
  %fudgeIV70 = getelementptr inbounds %struct._PatchAndGoInfo* %info, i64 0, i32 3
  %fudgeDV = getelementptr inbounds %struct._PatchAndGoInfo* %info, i64 0, i32 4
  %colind74 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 7
  br label %for.body44

for.cond.preheader:                               ; preds = %if.else
  %cmp12132 = icmp sgt i32 %3, 0
  br i1 %cmp12132, label %for.body.lr.ph, label %if.end92

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %toosmall = getelementptr inbounds %struct._PatchAndGoInfo* %info, i64 0, i32 1
  %entries = getelementptr inbounds %struct._Chv* %wrkChv, i64 0, i32 8
  %fudgeIV = getelementptr inbounds %struct._PatchAndGoInfo* %info, i64 0, i32 3
  %colind28 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 7
  br label %for.body

for.body:                                         ; preds = %if.end31, %for.body.lr.ph
  %nelim.1133 = phi i32 [ 0, %for.body.lr.ph ], [ %inc33, %if.end31 ]
  call void @Chv_maxabsInChevron(%struct._Chv* %wrkChv, i32 0, double* %diagabs, double* %rowmaxabs, double* %colmaxabs) #8
  %12 = load double* %rowmaxabs, align 8, !tbaa !4
  %13 = load double* %colmaxabs, align 8, !tbaa !4
  %cmp13 = fcmp oge double %12, %13
  %cond = select i1 %cmp13, double %12, double %13
  %14 = load double* %diagabs, align 8, !tbaa !4
  %15 = load double* %toosmall, align 8, !tbaa !4
  %mul = fmul double %15, %cond
  %cmp14 = fcmp ugt double %14, %mul
  br i1 %cmp14, label %if.end31, label %if.then15

if.then15:                                        ; preds = %for.body
  %16 = load i32* %type, align 4, !tbaa !3
  %cmp17 = icmp eq i32 %16, 1
  %17 = load double** %entries, align 8, !tbaa !0
  store double 1.000000e+00, double* %17, align 8, !tbaa !4
  br i1 %cmp17, label %if.end24, label %if.else19

if.else19:                                        ; preds = %if.then15
  %arrayidx23 = getelementptr inbounds double* %17, i64 1
  store double 0.000000e+00, double* %arrayidx23, align 8, !tbaa !4
  br label %if.end24

if.end24:                                         ; preds = %if.then15, %if.else19
  call void @Chv_zeroOffdiagonalOfChevron(%struct._Chv* %chv, i32 0) #8
  %18 = load %struct._IV** %fudgeIV, align 8, !tbaa !0
  %cmp25 = icmp eq %struct._IV* %18, null
  br i1 %cmp25, label %if.end31, label %if.then26

if.then26:                                        ; preds = %if.end24
  %19 = load i32** %colind28, align 8, !tbaa !0
  %20 = load i32* %19, align 4, !tbaa !3
  call void @IV_push(%struct._IV* %18, i32 %20) #7
  br label %if.end31

if.end31:                                         ; preds = %if.end24, %for.body, %if.then26
  %call32 = call i32 @Chv_r1upd(%struct._Chv* %wrkChv) #8
  call void @Chv_shift(%struct._Chv* %wrkChv, i32 1) #7
  %inc33 = add nsw i32 %nelim.1133, 1
  %exitcond = icmp eq i32 %inc33, %3
  br i1 %exitcond, label %if.end92, label %for.body

for.body44:                                       ; preds = %if.end82, %for.body44.lr.ph
  %nelim.2137 = phi i32 [ 0, %for.body44.lr.ph ], [ %inc85, %if.end82 ]
  call void @Chv_maxabsInChevron(%struct._Chv* %wrkChv, i32 0, double* %diagabs39, double* %rowmaxabs41, double* %colmaxabs38) #8
  %21 = load double* %rowmaxabs41, align 8, !tbaa !4
  %22 = load double* %colmaxabs38, align 8, !tbaa !4
  %cmp45 = fcmp oge double %21, %22
  %cond49 = select i1 %cmp45, double %21, double %22
  %23 = load double* %diagabs39, align 8, !tbaa !4
  %24 = load double* %fudge, align 8, !tbaa !4
  %cmp50 = fcmp ugt double %23, %24
  br i1 %cmp50, label %if.end82, label %if.then51

if.then51:                                        ; preds = %for.body44
  %cmp52 = fcmp olt double %cond49, 1.000000e+00
  %offmaxabs40.0 = select i1 %cmp52, double 1.000000e+00, double %cond49
  %25 = load i32* %type, align 4, !tbaa !3
  %cmp56 = icmp eq i32 %25, 1
  %mul59 = fmul double %24, %offmaxabs40.0
  %26 = load double** %entries60, align 8, !tbaa !0
  store double %mul59, double* %26, align 8, !tbaa !4
  br i1 %cmp56, label %if.end69, label %if.else62

if.else62:                                        ; preds = %if.then51
  %arrayidx68 = getelementptr inbounds double* %26, i64 1
  store double 0.000000e+00, double* %arrayidx68, align 8, !tbaa !4
  br label %if.end69

if.end69:                                         ; preds = %if.then51, %if.else62
  %27 = load %struct._IV** %fudgeIV70, align 8, !tbaa !0
  %cmp71 = icmp eq %struct._IV* %27, null
  br i1 %cmp71, label %if.end76, label %if.then72

if.then72:                                        ; preds = %if.end69
  %28 = load i32** %colind74, align 8, !tbaa !0
  %29 = load i32* %28, align 4, !tbaa !3
  call void @IV_push(%struct._IV* %27, i32 %29) #7
  br label %if.end76

if.end76:                                         ; preds = %if.end69, %if.then72
  %30 = load %struct._DV** %fudgeDV, align 8, !tbaa !0
  %cmp77 = icmp eq %struct._DV* %30, null
  br i1 %cmp77, label %if.end82, label %if.then78

if.then78:                                        ; preds = %if.end76
  %sub = fsub double %23, %mul59
  %call80 = call double @fabs(double %sub) #9
  call void @DV_push(%struct._DV* %30, double %call80) #7
  br label %if.end82

if.end82:                                         ; preds = %if.end76, %for.body44, %if.then78
  %call83 = call i32 @Chv_r1upd(%struct._Chv* %wrkChv) #8
  call void @Chv_shift(%struct._Chv* %wrkChv, i32 1) #7
  %inc85 = add nsw i32 %nelim.2137, 1
  %exitcond140 = icmp eq i32 %inc85, %3
  br i1 %exitcond140, label %if.end92, label %for.body44

if.else87:                                        ; preds = %if.else
  %31 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call89 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([86 x i8]* @.str1, i64 0, i64 0), i32 %11) #7
  call void @exit(i32 -1) #6
  unreachable

if.end92:                                         ; preds = %for.cond42.preheader, %if.end82, %for.cond.preheader, %if.end31, %while.cond.preheader, %while.body, %if.end9
  %nelim.3 = phi i32 [ 0, %while.cond.preheader ], [ %nelim.0130, %while.body ], [ %inc, %if.end9 ], [ 0, %for.cond.preheader ], [ %3, %if.end31 ], [ 0, %for.cond42.preheader ], [ %3, %if.end82 ]
  call void @llvm.lifetime.end(i64 80, i8* %0) #1
  ret i32 %nelim.3
}
