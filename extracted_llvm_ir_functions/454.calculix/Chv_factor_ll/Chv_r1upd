define i32 @Chv_r1upd(%struct._Chv* %chv) #0 {
  %fac1.i1 = alloca double, align 8
  %fac2.i2 = alloca double, align 8
  %nD.i3 = alloca i32, align 4
  %nL.i4 = alloca i32, align 4
  %nU.i5 = alloca i32, align 4
  %fac1.i = alloca double, align 8
  %fac2.i = alloca double, align 8
  %nD.i = alloca i32, align 4
  %nL.i = alloca i32, align 4
  %nU.i = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._Chv* %chv, i64 0, metadata !113, metadata !232), !dbg !405
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !114, metadata !232), !dbg !406
  %1 = icmp eq %struct._Chv* %chv, null, !dbg !407
  br i1 %1, label %2, label %5, !dbg !409

; <label>:2                                       ; preds = %0
  %3 = load %struct.__sFILE** @__stderrp, align 8, !dbg !410, !tbaa !241
  %4 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %3, i8* getelementptr inbounds ([43 x i8]* @.str7, i64 0, i64 0), %struct._Chv* null) #8, !dbg !412
  tail call void @exit(i32 -1) #7, !dbg !413
  unreachable, !dbg !413

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 5, !dbg !414
  %7 = load i32* %6, align 4, !dbg !414, !tbaa !270
  switch i32 %7, label %234 [
    i32 2, label %8
    i32 0, label %149
    i32 1, label %149
  ], !dbg !416

; <label>:8                                       ; preds = %5
  %9 = bitcast double* %fac1.i to i8*, !dbg !417
  call void @llvm.lifetime.start(i64 8, i8* %9), !dbg !417
  %10 = bitcast double* %fac2.i to i8*, !dbg !417
  call void @llvm.lifetime.start(i64 8, i8* %10), !dbg !417
  %11 = bitcast i32* %nD.i to i8*, !dbg !417
  call void @llvm.lifetime.start(i64 4, i8* %11), !dbg !417
  %12 = bitcast i32* %nL.i to i8*, !dbg !417
  call void @llvm.lifetime.start(i64 4, i8* %12), !dbg !417
  %13 = bitcast i32* %nU.i to i8*, !dbg !417
  call void @llvm.lifetime.start(i64 4, i8* %13), !dbg !417
  tail call void @llvm.dbg.value(metadata %struct._Chv* %chv, i64 0, metadata !168, metadata !232) #1, !dbg !417
  tail call void @llvm.dbg.value(metadata i32* %nD.i, i64 0, metadata !184, metadata !232) #1, !dbg !420
  tail call void @llvm.dbg.value(metadata i32* %nL.i, i64 0, metadata !185, metadata !232) #1, !dbg !421
  tail call void @llvm.dbg.value(metadata i32* %nU.i, i64 0, metadata !186, metadata !232) #1, !dbg !422
  call void @Chv_dimensions(%struct._Chv* %chv, i32* %nD.i, i32* %nL.i, i32* %nU.i) #8, !dbg !423
  %14 = call double* @Chv_entries(%struct._Chv* %chv) #8, !dbg !424
  call void @llvm.dbg.value(metadata double* %14, i64 0, metadata !177, metadata !232) #1, !dbg !425
  call void @llvm.dbg.value(metadata i32* %nD.i, i64 0, metadata !184, metadata !232) #1, !dbg !420
  %15 = load i32* %nD.i, align 4, !dbg !426, !tbaa !353
  call void @llvm.dbg.value(metadata i32* %nL.i, i64 0, metadata !185, metadata !232) #1, !dbg !421
  %16 = load i32* %nL.i, align 4, !dbg !427, !tbaa !353
  %17 = add i32 %16, %15, !dbg !428
  %18 = add nsw i32 %17, -1, !dbg !429
  call void @llvm.dbg.value(metadata i32 %18, i64 0, metadata !178, metadata !232) #1, !dbg !430
  call void @llvm.dbg.value(metadata i32* %nU.i, i64 0, metadata !186, metadata !232) #1, !dbg !422
  %19 = load i32* %nU.i, align 4, !dbg !431, !tbaa !353
  call void @llvm.dbg.value(metadata i32 %18, i64 0, metadata !183, metadata !232) #1, !dbg !432
  %20 = add i32 %15, -1, !dbg !433
  %21 = add i32 %20, %19, !dbg !434
  call void @llvm.dbg.value(metadata i32 %21, i64 0, metadata !189, metadata !232) #1, !dbg !435
  %22 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 4, !dbg !436
  %23 = load i32* %22, align 4, !dbg !436, !tbaa !268
  switch i32 %23, label %thread-pre-split.i [
    i32 1, label %24
    i32 2, label %29
  ], !dbg !438

; <label>:24                                      ; preds = %8
  %25 = sext i32 %18 to i64, !dbg !439
  %26 = getelementptr inbounds double* %14, i64 %25, !dbg !439
  %27 = load double* %26, align 8, !dbg !439, !tbaa !330
  call void @llvm.dbg.value(metadata double %27, i64 0, metadata !170, metadata !232) #1, !dbg !441
  %28 = fcmp oeq double %27, 0.000000e+00, !dbg !442
  br i1 %28, label %nonsym1x1.exit, label %.thread.i, !dbg !444

; <label>:29                                      ; preds = %8
  %30 = shl nsw i32 %18, 1, !dbg !445
  %31 = sext i32 %30 to i64, !dbg !448
  %32 = getelementptr inbounds double* %14, i64 %31, !dbg !448
  %33 = load double* %32, align 8, !dbg !448, !tbaa !330
  call void @llvm.dbg.value(metadata double %33, i64 0, metadata !170, metadata !232) #1, !dbg !441
  %34 = or i32 %30, 1, !dbg !449
  %35 = sext i32 %34 to i64, !dbg !450
  %36 = getelementptr inbounds double* %14, i64 %35, !dbg !450
  %37 = load double* %36, align 8, !dbg !450, !tbaa !330
  call void @llvm.dbg.value(metadata double %37, i64 0, metadata !169, metadata !232) #1, !dbg !451
  %38 = fcmp oeq double %33, 0.000000e+00, !dbg !452
  %39 = fcmp oeq double %37, 0.000000e+00, !dbg !454
  %or.cond.i = and i1 %38, %39, !dbg !455
  br i1 %or.cond.i, label %nonsym1x1.exit, label %thread-pre-split.thread27.i, !dbg !455

.thread.i:                                        ; preds = %24
  %40 = fdiv double 1.000000e+00, %27, !dbg !456
  call void @llvm.dbg.value(metadata double %40, i64 0, metadata !171, metadata !232) #1, !dbg !459
  store double %40, double* %fac1.i, align 8, !dbg !460, !tbaa !330
  br label %43, !dbg !461

thread-pre-split.thread27.i:                      ; preds = %29
  call void @llvm.dbg.value(metadata double* %fac1.i, i64 0, metadata !171, metadata !232) #1, !dbg !459
  call void @llvm.dbg.value(metadata double* %fac2.i, i64 0, metadata !172, metadata !232) #1, !dbg !462
  %41 = call i32 @Zrecip(double %33, double %37, double* %fac1.i, double* %fac2.i) #8, !dbg !463
  %.pre.i = load i32* %22, align 4, !dbg !466, !tbaa !268
  br label %thread-pre-split.i, !dbg !468

thread-pre-split.i:                               ; preds = %thread-pre-split.thread27.i, %8
  %42 = phi i32 [ %.pre.i, %thread-pre-split.thread27.i ], [ %23, %8 ], !dbg !469
  switch i32 %42, label %48 [
    i32 1, label %thread-pre-split.i._crit_edge
    i32 2, label %45
  ], !dbg !461

thread-pre-split.i._crit_edge:                    ; preds = %thread-pre-split.i
  %.pre13 = load double* %fac1.i, align 8, !dbg !470, !tbaa !330
  br label %43, !dbg !461

; <label>:43                                      ; preds = %thread-pre-split.i._crit_edge, %.thread.i
  %44 = phi double [ %.pre13, %thread-pre-split.i._crit_edge ], [ %40, %.thread.i ]
  call void @llvm.dbg.value(metadata double* %fac1.i, i64 0, metadata !171, metadata !232) #1, !dbg !459
  call void @DVscale(i32 %18, double* %14, double %44) #8, !dbg !472
  br label %48, !dbg !473

; <label>:45                                      ; preds = %thread-pre-split.i
  call void @llvm.dbg.value(metadata double* %fac1.i, i64 0, metadata !171, metadata !232) #1, !dbg !459
  %46 = load double* %fac1.i, align 8, !dbg !474, !tbaa !330
  call void @llvm.dbg.value(metadata double* %fac2.i, i64 0, metadata !172, metadata !232) #1, !dbg !462
  %47 = load double* %fac2.i, align 8, !dbg !477, !tbaa !330
  call void @ZVscale(i32 %18, double* %14, double %46, double %47) #8, !dbg !478
  br label %48, !dbg !479

; <label>:48                                      ; preds = %45, %43, %thread-pre-split.i
  call void @llvm.dbg.value(metadata i32 %17, i64 0, metadata !187, metadata !232) #1, !dbg !480
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !180, metadata !232) #1, !dbg !481
  call void @llvm.dbg.value(metadata i32* %nD.i, i64 0, metadata !184, metadata !232) #1, !dbg !420
  %49 = load i32* %nD.i, align 4, !dbg !482, !tbaa !353
  %50 = icmp sgt i32 %49, 1, !dbg !485
  br i1 %50, label %.lr.ph.i, label %._crit_edge.i, !dbg !486

.lr.ph.i:                                         ; preds = %48
  %51 = shl i32 %15, 1, !dbg !486
  %52 = add i32 %51, %16, !dbg !486
  %53 = add i32 %52, %19, !dbg !486
  %54 = sext i32 %53 to i64, !dbg !469
  %55 = sext i32 %17 to i64, !dbg !469
  %56 = add i32 %17, -2, !dbg !486
  %57 = sext i32 %56 to i64, !dbg !469
  br label %58, !dbg !486

; <label>:58                                      ; preds = %127, %.lr.ph.i
  %indvars.iv24.i = phi i64 [ %57, %.lr.ph.i ], [ %indvars.iv.next25.i, %127 ], !dbg !469
  %indvars.iv20.i = phi i64 [ %55, %.lr.ph.i ], [ %indvars.iv.next21.i, %127 ], !dbg !469
  %indvars.iv.i = phi i64 [ %54, %.lr.ph.i ], [ %indvars.iv.next.i, %127 ], !dbg !469
  %usize.017.i = phi i32 [ %21, %.lr.ph.i ], [ %62, %127 ], !dbg !469
  %lsize.015.i = phi i32 [ %18, %.lr.ph.i ], [ %61, %127 ], !dbg !469
  %kchv.013.i = phi i32 [ 1, %.lr.ph.i ], [ %128, %127 ], !dbg !469
  %dloc.012.i = phi i32 [ %18, %.lr.ph.i ], [ %60, %127 ], !dbg !469
  %ureal.011.i = phi double [ undef, %.lr.ph.i ], [ %ureal.1.i, %127 ], !dbg !469
  %uimag.010.i = phi double [ undef, %.lr.ph.i ], [ %uimag.1.i, %127 ], !dbg !469
  %lreal.09.i = phi double [ undef, %.lr.ph.i ], [ %lreal.1.i, %127 ], !dbg !469
  %limag.08.i = phi double [ undef, %.lr.ph.i ], [ %limag.1.i, %127 ], !dbg !469
  %indvars.iv.next.i = add i64 %indvars.iv.i, -2, !dbg !486
  %59 = trunc i64 %indvars.iv.next.i to i32, !dbg !487
  %60 = add nsw i32 %dloc.012.i, %59, !dbg !487
  call void @llvm.dbg.value(metadata i32 %60, i64 0, metadata !178, metadata !232) #1, !dbg !430
  %61 = add nsw i32 %lsize.015.i, -1, !dbg !489
  call void @llvm.dbg.value(metadata i32 %61, i64 0, metadata !183, metadata !232) #1, !dbg !432
  %62 = add nsw i32 %usize.017.i, -1, !dbg !490
  call void @llvm.dbg.value(metadata i32 %62, i64 0, metadata !189, metadata !232) #1, !dbg !435
  %63 = sub nsw i32 %60, %61, !dbg !491
  call void @llvm.dbg.value(metadata i32 %63, i64 0, metadata !182, metadata !232) #1, !dbg !492
  %64 = add nsw i32 %60, 1, !dbg !493
  call void @llvm.dbg.value(metadata i32 %64, i64 0, metadata !188, metadata !232) #1, !dbg !494
  %65 = load i32* %22, align 4, !dbg !495, !tbaa !268
  %66 = trunc i64 %indvars.iv20.i to i32, !dbg !497
  %67 = trunc i64 %indvars.iv24.i to i32, !dbg !497
  switch i32 %65, label %79 [
    i32 1, label %thread-pre-split2.i
    i32 2, label %68
  ], !dbg !497

; <label>:68                                      ; preds = %58
  %69 = shl nsw i32 %67, 1, !dbg !498
  %70 = or i32 %69, 1, !dbg !501
  %71 = sext i32 %70 to i64, !dbg !502
  %72 = getelementptr inbounds double* %14, i64 %71, !dbg !502
  %73 = load double* %72, align 8, !dbg !502, !tbaa !330
  call void @llvm.dbg.value(metadata double %73, i64 0, metadata !173, metadata !232) #1, !dbg !503
  %74 = shl nsw i32 %66, 1, !dbg !504
  %75 = or i32 %74, 1, !dbg !505
  %76 = sext i32 %75 to i64, !dbg !506
  %77 = getelementptr inbounds double* %14, i64 %76, !dbg !506
  %78 = load double* %77, align 8, !dbg !506, !tbaa !330
  call void @llvm.dbg.value(metadata double %78, i64 0, metadata !175, metadata !232) #1, !dbg !507
  br label %thread-pre-split2.i, !dbg !508

thread-pre-split2.i:                              ; preds = %68, %58
  %limag.1.ph.i = phi double [ %73, %68 ], [ %limag.08.i, %58 ], !dbg !469
  %.pn.in.i = phi i32 [ %69, %68 ], [ %67, %58 ], !dbg !469
  %uimag.1.ph.i = phi double [ %78, %68 ], [ %uimag.010.i, %58 ], !dbg !469
  %.pn6.in.i = phi i32 [ %74, %68 ], [ %66, %58 ], !dbg !469
  %.pn6.i = sext i32 %.pn6.in.i to i64, !dbg !509
  %.pn.i = sext i32 %.pn.in.i to i64, !dbg !510
  %ureal.1.ph.in.i = getelementptr inbounds double* %14, i64 %.pn6.i, !dbg !509
  %lreal.1.ph.in.i = getelementptr inbounds double* %14, i64 %.pn.i, !dbg !510
  %ureal.1.ph.i = load double* %ureal.1.ph.in.i, align 8, !dbg !509
  %lreal.1.ph.i = load double* %lreal.1.ph.in.i, align 8, !dbg !510
  br label %79, !dbg !469

; <label>:79                                      ; preds = %thread-pre-split2.i, %58
  %limag.1.i = phi double [ %limag.1.ph.i, %thread-pre-split2.i ], [ %limag.08.i, %58 ], !dbg !469
  %lreal.1.i = phi double [ %lreal.1.ph.i, %thread-pre-split2.i ], [ %lreal.09.i, %58 ], !dbg !469
  %uimag.1.i = phi double [ %uimag.1.ph.i, %thread-pre-split2.i ], [ %uimag.010.i, %58 ], !dbg !469
  %ureal.1.i = phi double [ %ureal.1.ph.i, %thread-pre-split2.i ], [ %ureal.011.i, %58 ], !dbg !469
  switch i32 %65, label %109 [
    i32 1, label %.thread30.i
    i32 2, label %.thread31.i
  ], !dbg !511

.thread30.i:                                      ; preds = %79
  %80 = fmul double %lreal.1.i, %ureal.1.i, !dbg !512
  %81 = sext i32 %60 to i64, !dbg !515
  %82 = getelementptr inbounds double* %14, i64 %81, !dbg !515
  %83 = load double* %82, align 8, !dbg !516, !tbaa !330
  %84 = fsub double %83, %80, !dbg !516
  store double %84, double* %82, align 8, !dbg !516, !tbaa !330
  %85 = sext i32 %63 to i64, !dbg !517
  %86 = getelementptr inbounds double* %14, i64 %85, !dbg !517
  %87 = fsub double -0.000000e+00, %ureal.1.i, !dbg !520
  call void @DVaxpy(i32 %61, double* %86, double %87, double* %14) #8, !dbg !521
  br label %thread-pre-split4.i, !dbg !522

.thread31.i:                                      ; preds = %79
  %88 = fmul double %lreal.1.i, %ureal.1.i, !dbg !523
  %89 = fmul double %limag.1.i, %uimag.1.i, !dbg !526
  %90 = fsub double %88, %89, !dbg !527
  %91 = shl nsw i32 %60, 1, !dbg !528
  %92 = sext i32 %91 to i64, !dbg !529
  %93 = getelementptr inbounds double* %14, i64 %92, !dbg !529
  %94 = load double* %93, align 8, !dbg !530, !tbaa !330
  %95 = fsub double %94, %90, !dbg !530
  store double %95, double* %93, align 8, !dbg !530, !tbaa !330
  %96 = fmul double %lreal.1.i, %uimag.1.i, !dbg !531
  %97 = fmul double %limag.1.i, %ureal.1.i, !dbg !532
  %98 = fadd double %96, %97, !dbg !533
  %99 = or i32 %91, 1, !dbg !534
  %100 = sext i32 %99 to i64, !dbg !535
  %101 = getelementptr inbounds double* %14, i64 %100, !dbg !535
  %102 = load double* %101, align 8, !dbg !536, !tbaa !330
  %103 = fsub double %102, %98, !dbg !536
  store double %103, double* %101, align 8, !dbg !536, !tbaa !330
  %104 = shl nsw i32 %63, 1, !dbg !537
  %105 = sext i32 %104 to i64, !dbg !540
  %106 = getelementptr inbounds double* %14, i64 %105, !dbg !540
  %107 = fsub double -0.000000e+00, %ureal.1.i, !dbg !541
  %108 = fsub double -0.000000e+00, %uimag.1.i, !dbg !542
  call void @ZVaxpy(i32 %61, double* %106, double %107, double %108, double* %14) #8, !dbg !543
  br label %thread-pre-split4.i, !dbg !544

thread-pre-split4.i:                              ; preds = %.thread31.i, %.thread30.i
  %.pr5.i = load i32* %22, align 4, !dbg !545, !tbaa !268
  br label %109, !dbg !469

; <label>:109                                     ; preds = %thread-pre-split4.i, %79
  %110 = phi i32 [ %.pr5.i, %thread-pre-split4.i ], [ %65, %79 ], !dbg !545
  switch i32 %110, label %127 [
    i32 1, label %111
    i32 2, label %117
  ], !dbg !547

; <label>:111                                     ; preds = %109
  %112 = sext i32 %64 to i64, !dbg !548
  %113 = getelementptr inbounds double* %14, i64 %112, !dbg !548
  %114 = fsub double -0.000000e+00, %lreal.1.i, !dbg !550
  %115 = add nsw i64 %indvars.iv20.i, 1, !dbg !551
  %116 = getelementptr inbounds double* %14, i64 %115, !dbg !552
  call void @DVaxpy(i32 %62, double* %113, double %114, double* %116) #8, !dbg !553
  br label %127, !dbg !554

; <label>:117                                     ; preds = %109
  %118 = shl nsw i32 %64, 1, !dbg !555
  %119 = sext i32 %118 to i64, !dbg !558
  %120 = getelementptr inbounds double* %14, i64 %119, !dbg !558
  %121 = fsub double -0.000000e+00, %lreal.1.i, !dbg !559
  %122 = fsub double -0.000000e+00, %limag.1.i, !dbg !560
  %123 = shl i32 %66, 1, !dbg !561
  %124 = add nsw i32 %123, 2, !dbg !562
  %125 = sext i32 %124 to i64, !dbg !563
  %126 = getelementptr inbounds double* %14, i64 %125, !dbg !563
  call void @ZVaxpy(i32 %62, double* %120, double %121, double %122, double* %126) #8, !dbg !564
  br label %127, !dbg !565

; <label>:127                                     ; preds = %117, %111, %109
  %indvars.iv.next21.i = add i64 %indvars.iv20.i, 1, !dbg !486
  %128 = add nuw nsw i32 %kchv.013.i, 1, !dbg !566
  call void @llvm.dbg.value(metadata i32 %128, i64 0, metadata !180, metadata !232) #1, !dbg !481
  call void @llvm.dbg.value(metadata i32* %nD.i, i64 0, metadata !184, metadata !232) #1, !dbg !420
  %129 = load i32* %nD.i, align 4, !dbg !482, !tbaa !353
  %130 = icmp slt i32 %128, %129, !dbg !485
  %indvars.iv.next25.i = add i64 %indvars.iv24.i, -1, !dbg !486
  br i1 %130, label %58, label %._crit_edge.i, !dbg !486

._crit_edge.i:                                    ; preds = %127, %48
  %.lcssa.i = phi i32 [ %49, %48 ], [ %129, %127 ], !dbg !469
  call void @llvm.dbg.value(metadata i32* %nU.i, i64 0, metadata !186, metadata !232) #1, !dbg !422
  %131 = load i32* %nU.i, align 4, !dbg !567, !tbaa !353
  %132 = add i32 %.lcssa.i, -1, !dbg !568
  %133 = add i32 %132, %131, !dbg !569
  call void @llvm.dbg.value(metadata i32 %133, i64 0, metadata !189, metadata !232) #1, !dbg !435
  %134 = load i32* %22, align 4, !dbg !570, !tbaa !268
  switch i32 %134, label %nonsym1x1.exit [
    i32 1, label %135
    i32 2, label %141
  ], !dbg !572

; <label>:135                                     ; preds = %._crit_edge.i
  call void @llvm.dbg.value(metadata i32* %nL.i, i64 0, metadata !185, metadata !232) #1, !dbg !421
  %136 = load i32* %nL.i, align 4, !dbg !573, !tbaa !353
  %137 = add nsw i32 %136, %.lcssa.i, !dbg !575
  %138 = sext i32 %137 to i64, !dbg !576
  %139 = getelementptr inbounds double* %14, i64 %138, !dbg !576
  call void @llvm.dbg.value(metadata double* %fac1.i, i64 0, metadata !171, metadata !232) #1, !dbg !459
  %140 = load double* %fac1.i, align 8, !dbg !577, !tbaa !330
  call void @DVscale(i32 %133, double* %139, double %140) #8, !dbg !578
  br label %nonsym1x1.exit, !dbg !579

; <label>:141                                     ; preds = %._crit_edge.i
  call void @llvm.dbg.value(metadata i32* %nL.i, i64 0, metadata !185, metadata !232) #1, !dbg !421
  %142 = load i32* %nL.i, align 4, !dbg !580, !tbaa !353
  %143 = add nsw i32 %142, %.lcssa.i, !dbg !583
  %144 = shl nsw i32 %143, 1, !dbg !584
  %145 = sext i32 %144 to i64, !dbg !585
  %146 = getelementptr inbounds double* %14, i64 %145, !dbg !585
  call void @llvm.dbg.value(metadata double* %fac1.i, i64 0, metadata !171, metadata !232) #1, !dbg !459
  %147 = load double* %fac1.i, align 8, !dbg !586, !tbaa !330
  call void @llvm.dbg.value(metadata double* %fac2.i, i64 0, metadata !172, metadata !232) #1, !dbg !462
  %148 = load double* %fac2.i, align 8, !dbg !587, !tbaa !330
  call void @ZVscale(i32 %133, double* %146, double %147, double %148) #8, !dbg !588
  br label %nonsym1x1.exit, !dbg !589

nonsym1x1.exit:                                   ; preds = %24, %29, %._crit_edge.i, %135, %141
  %.0.i = phi i32 [ 0, %24 ], [ 0, %29 ], [ 1, %._crit_edge.i ], [ 1, %141 ], [ 1, %135 ], !dbg !469
  call void @llvm.lifetime.end(i64 8, i8* %9), !dbg !590
  call void @llvm.lifetime.end(i64 8, i8* %10), !dbg !590
  call void @llvm.lifetime.end(i64 4, i8* %11), !dbg !590
  call void @llvm.lifetime.end(i64 4, i8* %12), !dbg !590
  call void @llvm.lifetime.end(i64 4, i8* %13), !dbg !590
  call void @llvm.dbg.value(metadata i32 %.0.i, i64 0, metadata !114, metadata !232), !dbg !406
  br label %237, !dbg !591

; <label>:149                                     ; preds = %5, %5
  %150 = bitcast double* %fac1.i1 to i8*, !dbg !592
  call void @llvm.lifetime.start(i64 8, i8* %150), !dbg !592
  %151 = bitcast double* %fac2.i2 to i8*, !dbg !592
  call void @llvm.lifetime.start(i64 8, i8* %151), !dbg !592
  %152 = bitcast i32* %nD.i3 to i8*, !dbg !592
  call void @llvm.lifetime.start(i64 4, i8* %152), !dbg !592
  %153 = bitcast i32* %nL.i4 to i8*, !dbg !592
  call void @llvm.lifetime.start(i64 4, i8* %153), !dbg !592
  %154 = bitcast i32* %nU.i5 to i8*, !dbg !592
  call void @llvm.lifetime.start(i64 4, i8* %154), !dbg !592
  tail call void @llvm.dbg.value(metadata %struct._Chv* %chv, i64 0, metadata !147, metadata !232) #1, !dbg !592
  tail call void @llvm.dbg.value(metadata i32* %nD.i3, i64 0, metadata !160, metadata !232) #1, !dbg !596
  tail call void @llvm.dbg.value(metadata i32* %nL.i4, i64 0, metadata !161, metadata !232) #1, !dbg !597
  tail call void @llvm.dbg.value(metadata i32* %nU.i5, i64 0, metadata !162, metadata !232) #1, !dbg !598
  call void @Chv_dimensions(%struct._Chv* %chv, i32* %nD.i3, i32* %nL.i4, i32* %nU.i5) #8, !dbg !599
  %155 = call double* @Chv_entries(%struct._Chv* %chv) #8, !dbg !600
  call void @llvm.dbg.value(metadata double* %155, i64 0, metadata !156, metadata !232) #1, !dbg !601
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !157, metadata !232) #1, !dbg !602
  call void @llvm.dbg.value(metadata i32* %nD.i3, i64 0, metadata !160, metadata !232) #1, !dbg !596
  %156 = load i32* %nD.i3, align 4, !dbg !603, !tbaa !353
  call void @llvm.dbg.value(metadata i32* %nU.i5, i64 0, metadata !162, metadata !232) #1, !dbg !598
  %157 = load i32* %nU.i5, align 4, !dbg !604, !tbaa !353
  %158 = add i32 %157, %156, !dbg !605
  call void @llvm.dbg.value(metadata i32 %158, i64 0, metadata !158, metadata !232) #1, !dbg !606
  %159 = add nsw i32 %158, -1, !dbg !607
  call void @llvm.dbg.value(metadata i32 %159, i64 0, metadata !165, metadata !232) #1, !dbg !608
  %160 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 4, !dbg !609
  %161 = load i32* %160, align 4, !dbg !609, !tbaa !268
  switch i32 %161, label %.thread.i7 [
    i32 1, label %162
    i32 2, label %166
  ], !dbg !611

; <label>:162                                     ; preds = %149
  %163 = load double* %155, align 8, !dbg !612, !tbaa !330
  call void @llvm.dbg.value(metadata double %163, i64 0, metadata !149, metadata !232) #1, !dbg !614
  %164 = fcmp oeq double %163, 0.000000e+00, !dbg !615
  br i1 %164, label %symmetric1x1.exit, label %.thread17.i, !dbg !617

.thread17.i:                                      ; preds = %162
  %165 = fdiv double 1.000000e+00, %163, !dbg !618
  call void @llvm.dbg.value(metadata double %165, i64 0, metadata !150, metadata !232) #1, !dbg !619
  store double %165, double* %fac1.i1, align 8, !dbg !620, !tbaa !330
  %.pre14 = getelementptr inbounds double* %155, i64 1, !dbg !621
  br label %178, !dbg !624

; <label>:166                                     ; preds = %149
  %167 = load double* %155, align 8, !dbg !625, !tbaa !330
  call void @llvm.dbg.value(metadata double %167, i64 0, metadata !149, metadata !232) #1, !dbg !614
  %168 = getelementptr inbounds double* %155, i64 1, !dbg !628
  %169 = load double* %168, align 8, !dbg !628, !tbaa !330
  call void @llvm.dbg.value(metadata double %169, i64 0, metadata !148, metadata !232) #1, !dbg !629
  %170 = fcmp oeq double %167, 0.000000e+00, !dbg !630
  %171 = fcmp oeq double %169, 0.000000e+00, !dbg !632
  %or.cond.i6 = and i1 %170, %171, !dbg !633
  br i1 %or.cond.i6, label %symmetric1x1.exit, label %172, !dbg !633

; <label>:172                                     ; preds = %166
  %173 = load i32* %6, align 4, !dbg !634, !tbaa !270
  %174 = icmp eq i32 %173, 1, !dbg !634
  br i1 %174, label %.thread20.i, label %176, !dbg !636

.thread20.i:                                      ; preds = %172
  %175 = fdiv double 1.000000e+00, %167, !dbg !637
  call void @llvm.dbg.value(metadata double %175, i64 0, metadata !150, metadata !232) #1, !dbg !619
  store double %175, double* %fac1.i1, align 8, !dbg !639, !tbaa !330
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !151, metadata !232) #1, !dbg !640
  store double 0.000000e+00, double* %fac2.i2, align 8, !dbg !641, !tbaa !330
  store double 0.000000e+00, double* %168, align 8, !dbg !642, !tbaa !330
  br label %.thread.i7, !dbg !624

; <label>:176                                     ; preds = %172
  call void @llvm.dbg.value(metadata double* %fac1.i1, i64 0, metadata !150, metadata !232) #1, !dbg !619
  call void @llvm.dbg.value(metadata double* %fac2.i2, i64 0, metadata !151, metadata !232) #1, !dbg !640
  %177 = call i32 @Zrecip(double %167, double %169, double* %fac1.i1, double* %fac2.i2) #8, !dbg !643
  %.pr.pre.i = load i32* %160, align 4, !dbg !645, !tbaa !268
  %phitmp.i = icmp eq i32 %.pr.pre.i, 1, !dbg !646
  br i1 %phitmp.i, label %._crit_edge, label %.thread.i7, !dbg !624

._crit_edge:                                      ; preds = %176
  %.pre = load double* %fac1.i1, align 8, !dbg !647, !tbaa !330
  br label %178, !dbg !624

; <label>:178                                     ; preds = %._crit_edge, %.thread17.i
  %.pre-phi = phi double* [ %168, %._crit_edge ], [ %.pre14, %.thread17.i ], !dbg !621
  %179 = phi double [ %.pre, %._crit_edge ], [ %165, %.thread17.i ]
  %dimag.0.ph19.i = phi double [ %169, %._crit_edge ], [ undef, %.thread17.i ], !dbg !646
  %dreal.0.ph18.i = phi double [ %167, %._crit_edge ], [ %163, %.thread17.i ], !dbg !646
  call void @llvm.dbg.value(metadata double* %fac1.i1, i64 0, metadata !150, metadata !232) #1, !dbg !619
  call void @DVscale(i32 %159, double* %.pre-phi, double %179) #8, !dbg !648
  br label %.preheader.i, !dbg !649

.thread.i7:                                       ; preds = %176, %.thread20.i, %149
  %dimag.05.i = phi double [ %169, %176 ], [ undef, %149 ], [ %169, %.thread20.i ], !dbg !646
  %dreal.03.i = phi double [ %167, %176 ], [ undef, %149 ], [ %167, %.thread20.i ], !dbg !646
  %180 = load i32* %6, align 4, !dbg !650, !tbaa !270
  %181 = icmp eq i32 %180, 1, !dbg !650
  br i1 %181, label %182, label %186, !dbg !652

; <label>:182                                     ; preds = %.thread.i7
  %183 = shl nsw i32 %159, 1, !dbg !653
  %184 = getelementptr inbounds double* %155, i64 2, !dbg !655
  call void @llvm.dbg.value(metadata double* %fac1.i1, i64 0, metadata !150, metadata !232) #1, !dbg !619
  %185 = load double* %fac1.i1, align 8, !dbg !656, !tbaa !330
  call void @DVscale(i32 %183, double* %184, double %185) #8, !dbg !657
  br label %.preheader.i, !dbg !658

; <label>:186                                     ; preds = %.thread.i7
  %187 = getelementptr inbounds double* %155, i64 2, !dbg !659
  call void @llvm.dbg.value(metadata double* %fac1.i1, i64 0, metadata !150, metadata !232) #1, !dbg !619
  %188 = load double* %fac1.i1, align 8, !dbg !661, !tbaa !330
  call void @llvm.dbg.value(metadata double* %fac2.i2, i64 0, metadata !151, metadata !232) #1, !dbg !640
  %189 = load double* %fac2.i2, align 8, !dbg !662, !tbaa !330
  call void @ZVscale(i32 %159, double* %187, double %188, double %189) #8, !dbg !663
  br label %.preheader.i, !dbg !646

.preheader.i:                                     ; preds = %186, %182, %178
  %dimag.04.ph.i = phi double [ %dimag.0.ph19.i, %178 ], [ %dimag.05.i, %186 ], [ %dimag.05.i, %182 ], !dbg !646
  %dreal.02.ph.i = phi double [ %dreal.0.ph18.i, %178 ], [ %dreal.03.i, %186 ], [ %dreal.03.i, %182 ], !dbg !646
  call void @llvm.dbg.value(metadata i32* %nD.i3, i64 0, metadata !160, metadata !232) #1, !dbg !596
  %190 = load i32* %nD.i3, align 4, !dbg !664, !tbaa !353
  %191 = icmp sgt i32 %190, 1, !dbg !667
  br i1 %191, label %.lr.ph.i8, label %symmetric1x1.exit, !dbg !668

.lr.ph.i8:                                        ; preds = %.preheader.i
  %192 = sext i32 %158 to i64, !dbg !646
  br label %193, !dbg !668

; <label>:193                                     ; preds = %thread-pre-split.i11, %.lr.ph.i8
  %indvars.iv14.i = phi i64 [ %192, %.lr.ph.i8 ], [ %indvars.iv.next15.i, %thread-pre-split.i11 ], !dbg !646
  %indvars.iv.i9 = phi i64 [ 1, %.lr.ph.i8 ], [ %indvars.iv.next.i10, %thread-pre-split.i11 ], !dbg !646
  %usize.013.i = phi i32 [ %159, %.lr.ph.i8 ], [ %231, %thread-pre-split.i11 ], !dbg !646
  %uijloc.012.i = phi i32 [ 1, %.lr.ph.i8 ], [ %230, %thread-pre-split.i11 ], !dbg !646
  %dloc.09.i = phi i32 [ 0, %.lr.ph.i8 ], [ %195, %thread-pre-split.i11 ], !dbg !646
  %194 = trunc i64 %indvars.iv14.i to i32, !dbg !669
  %195 = add nsw i32 %dloc.09.i, %194, !dbg !669
  call void @llvm.dbg.value(metadata i32 %195, i64 0, metadata !157, metadata !232) #1, !dbg !602
  %196 = load i32* %160, align 4, !dbg !671, !tbaa !268
  switch i32 %196, label %thread-pre-split.i11 [
    i32 1, label %thread-pre-split.thread25.i
    i32 2, label %203
  ], !dbg !673

thread-pre-split.thread25.i:                      ; preds = %193
  %197 = getelementptr inbounds double* %155, i64 %indvars.iv.i9, !dbg !674
  %198 = load double* %197, align 8, !dbg !674, !tbaa !330
  call void @llvm.dbg.value(metadata double %198, i64 0, metadata !155, metadata !232) #1, !dbg !676
  %199 = fmul double %dreal.02.ph.i, %198, !dbg !677
  call void @llvm.dbg.value(metadata double %199, i64 0, metadata !153, metadata !232) #1, !dbg !678
  %200 = sext i32 %195 to i64, !dbg !679
  %201 = getelementptr inbounds double* %155, i64 %200, !dbg !679
  %202 = fsub double -0.000000e+00, %199, !dbg !682
  call void @DVaxpy(i32 %usize.013.i, double* %201, double %202, double* %197) #8, !dbg !683
  br label %thread-pre-split.i11, !dbg !684

; <label>:203                                     ; preds = %193
  %204 = trunc i64 %indvars.iv.i9 to i32, !dbg !685
  %205 = shl nsw i32 %204, 1, !dbg !685
  %206 = sext i32 %205 to i64, !dbg !688
  %207 = getelementptr inbounds double* %155, i64 %206, !dbg !688
  %208 = load double* %207, align 8, !dbg !688, !tbaa !330
  call void @llvm.dbg.value(metadata double %208, i64 0, metadata !155, metadata !232) #1, !dbg !676
  %209 = or i32 %205, 1, !dbg !689
  %210 = sext i32 %209 to i64, !dbg !690
  %211 = getelementptr inbounds double* %155, i64 %210, !dbg !690
  %212 = load double* %211, align 8, !dbg !690, !tbaa !330
  call void @llvm.dbg.value(metadata double %212, i64 0, metadata !154, metadata !232) #1, !dbg !691
  %213 = load i32* %6, align 4, !dbg !692, !tbaa !270
  %214 = icmp eq i32 %213, 1, !dbg !692
  %215 = fmul double %dreal.02.ph.i, %208, !dbg !694
  br i1 %214, label %216, label %219, !dbg !696

; <label>:216                                     ; preds = %203
  call void @llvm.dbg.value(metadata double %215, i64 0, metadata !153, metadata !232) #1, !dbg !678
  %217 = fmul double %dreal.02.ph.i, %212, !dbg !697
  %218 = fsub double -0.000000e+00, %217, !dbg !697
  call void @llvm.dbg.value(metadata double %218, i64 0, metadata !152, metadata !232) #1, !dbg !698
  br label %thread-pre-split.thread.i, !dbg !699

; <label>:219                                     ; preds = %203
  %220 = fmul double %dimag.04.ph.i, %212, !dbg !700
  %221 = fsub double %215, %220, !dbg !702
  call void @llvm.dbg.value(metadata double %221, i64 0, metadata !153, metadata !232) #1, !dbg !678
  %222 = fmul double %dreal.02.ph.i, %212, !dbg !703
  %223 = fmul double %dimag.04.ph.i, %208, !dbg !704
  %224 = fadd double %223, %222, !dbg !705
  call void @llvm.dbg.value(metadata double %224, i64 0, metadata !152, metadata !232) #1, !dbg !698
  br label %thread-pre-split.thread.i, !dbg !646

thread-pre-split.thread.i:                        ; preds = %219, %216
  %lreal.123.i = phi double [ %215, %216 ], [ %221, %219 ], !dbg !646
  %limag.121.i = phi double [ %218, %216 ], [ %224, %219 ], !dbg !646
  %225 = shl nsw i32 %195, 1, !dbg !706
  %226 = sext i32 %225 to i64, !dbg !709
  %227 = getelementptr inbounds double* %155, i64 %226, !dbg !709
  %228 = fsub double -0.000000e+00, %lreal.123.i, !dbg !710
  %229 = fsub double -0.000000e+00, %limag.121.i, !dbg !711
  call void @ZVaxpy(i32 %usize.013.i, double* %227, double %228, double %229, double* %207) #8, !dbg !712
  br label %thread-pre-split.i11, !dbg !713

thread-pre-split.i11:                             ; preds = %thread-pre-split.thread.i, %thread-pre-split.thread25.i, %193
  %indvars.iv.next.i10 = add nuw nsw i64 %indvars.iv.i9, 1, !dbg !668
  %230 = add nuw nsw i32 %uijloc.012.i, 1, !dbg !714
  call void @llvm.dbg.value(metadata i32 %230, i64 0, metadata !163, metadata !232) #1, !dbg !715
  %indvars.iv.next15.i = add i64 %indvars.iv14.i, -1, !dbg !668
  %231 = add nsw i32 %usize.013.i, -1, !dbg !716
  call void @llvm.dbg.value(metadata i32 %231, i64 0, metadata !165, metadata !232) #1, !dbg !608
  call void @llvm.dbg.value(metadata i32 %230, i64 0, metadata !159, metadata !232) #1, !dbg !717
  call void @llvm.dbg.value(metadata i32* %nD.i3, i64 0, metadata !160, metadata !232) #1, !dbg !596
  %232 = load i32* %nD.i3, align 4, !dbg !664, !tbaa !353
  %233 = icmp slt i32 %230, %232, !dbg !667
  br i1 %233, label %193, label %symmetric1x1.exit, !dbg !668

symmetric1x1.exit:                                ; preds = %thread-pre-split.i11, %162, %166, %.preheader.i
  %.0.i12 = phi i32 [ 0, %162 ], [ 0, %166 ], [ 1, %.preheader.i ], [ 1, %thread-pre-split.i11 ], !dbg !646
  call void @llvm.lifetime.end(i64 8, i8* %150), !dbg !718
  call void @llvm.lifetime.end(i64 8, i8* %151), !dbg !718
  call void @llvm.lifetime.end(i64 4, i8* %152), !dbg !718
  call void @llvm.lifetime.end(i64 4, i8* %153), !dbg !718
  call void @llvm.lifetime.end(i64 4, i8* %154), !dbg !718
  call void @llvm.dbg.value(metadata i32 %.0.i12, i64 0, metadata !114, metadata !232), !dbg !406
  br label %237

; <label>:234                                     ; preds = %5
  %235 = load %struct.__sFILE** @__stderrp, align 8, !dbg !719, !tbaa !241
  %236 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %235, i8* getelementptr inbounds ([46 x i8]* @.str8, i64 0, i64 0), %struct._Chv* %chv, i32 %7) #8, !dbg !721
  tail call void @exit(i32 -1) #7, !dbg !722
  unreachable, !dbg !722

; <label>:237                                     ; preds = %symmetric1x1.exit, %nonsym1x1.exit
  %rc.0 = phi i32 [ %.0.i, %nonsym1x1.exit ], [ %.0.i12, %symmetric1x1.exit ]
  ret i32 %rc.0, !dbg !723
}
