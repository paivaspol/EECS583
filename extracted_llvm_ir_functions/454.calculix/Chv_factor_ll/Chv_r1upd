define i32 @Chv_r1upd(%struct._Chv* %chv) #0 {
entry:
  %fac1.i22 = alloca double, align 8
  %fac2.i23 = alloca double, align 8
  %nD.i24 = alloca i32, align 4
  %nL.i25 = alloca i32, align 4
  %nU.i26 = alloca i32, align 4
  %fac1.i = alloca double, align 8
  %fac2.i = alloca double, align 8
  %nD.i = alloca i32, align 4
  %nL.i = alloca i32, align 4
  %nU.i = alloca i32, align 4
  %cmp = icmp eq %struct._Chv* %chv, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([43 x i8]* @.str7, i64 0, i64 0), %struct._Chv* null) #7
  call void @exit(i32 -1) #6
  unreachable

if.end:                                           ; preds = %entry
  %symflag = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 5
  %1 = load i32* %symflag, align 4, !tbaa !3
  switch i32 %1, label %if.else10 [
    i32 2, label %if.then2
    i32 0, label %if.then8
    i32 1, label %if.then8
  ]

if.then2:                                         ; preds = %if.end
  %2 = bitcast double* %fac1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = bitcast double* %fac2.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast i32* %nD.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %nL.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %nU.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  call void @Chv_dimensions(%struct._Chv* %chv, i32* %nD.i, i32* %nL.i, i32* %nU.i) #7
  %call.i = call double* @Chv_entries(%struct._Chv* %chv) #7
  %7 = load i32* %nD.i, align 4, !tbaa !3
  %8 = load i32* %nL.i, align 4, !tbaa !3
  %add.i = add i32 %8, %7
  %sub.i = add nsw i32 %add.i, -1
  %9 = load i32* %nU.i, align 4, !tbaa !3
  %add6.i = add i32 %7, -1
  %sub7.i = add i32 %add6.i, %9
  %type.i = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 4
  %10 = load i32* %type.i, align 4, !tbaa !3
  switch i32 %10, label %if.end35.i [
    i32 1, label %if.then.i
    i32 2, label %if.then12.i
  ]

if.then.i:                                        ; preds = %if.then2
  %idxprom.i = sext i32 %sub.i to i64
  %arrayidx.i = getelementptr inbounds double* %call.i, i64 %idxprom.i
  %11 = load double* %arrayidx.i, align 8, !tbaa !4
  %cmp8.i = fcmp oeq double %11, 0.000000e+00
  br i1 %cmp8.i, label %if.end14, label %if.end35.thread.i

if.then12.i:                                      ; preds = %if.then2
  %mul13.i = shl nsw i32 %sub.i, 1
  %idxprom14.i = sext i32 %mul13.i to i64
  %arrayidx15.i = getelementptr inbounds double* %call.i, i64 %idxprom14.i
  %12 = load double* %arrayidx15.i, align 8, !tbaa !4
  %add17259.i = or i32 %mul13.i, 1
  %idxprom18.i = sext i32 %add17259.i to i64
  %arrayidx19.i = getelementptr inbounds double* %call.i, i64 %idxprom18.i
  %13 = load double* %arrayidx19.i, align 8, !tbaa !4
  %cmp20.i = fcmp oeq double %12, 0.000000e+00
  %cmp21.i = fcmp oeq double %13, 0.000000e+00
  %or.cond.i = and i1 %cmp20.i, %cmp21.i
  br i1 %or.cond.i, label %if.end14, label %if.then32.i

if.end35.thread.i:                                ; preds = %if.then.i
  %div.i = fdiv double 1.000000e+00, %11
  store double %div.i, double* %fac1.i, align 8, !tbaa !4
  br label %if.then38.i

if.then32.i:                                      ; preds = %if.then12.i
  %call33.i = call i32 @Zrecip(double %12, double %13, double* %fac1.i, double* %fac2.i) #7
  %.pre.i = load i32* %type.i, align 4, !tbaa !3
  br label %if.end35.i

if.end35.i:                                       ; preds = %if.then32.i, %if.then2
  %14 = phi i32 [ %.pre.i, %if.then32.i ], [ %10, %if.then2 ]
  switch i32 %14, label %if.end44.i [
    i32 1, label %if.end35.i.if.then38.i_crit_edge
    i32 2, label %if.then42.i
  ]

if.end35.i.if.then38.i_crit_edge:                 ; preds = %if.end35.i
  %.pre = load double* %fac1.i, align 8, !tbaa !4
  br label %if.then38.i

if.then38.i:                                      ; preds = %if.end35.i.if.then38.i_crit_edge, %if.end35.thread.i
  %15 = phi double [ %.pre, %if.end35.i.if.then38.i_crit_edge ], [ %div.i, %if.end35.thread.i ]
  call void @DVscale(i32 %sub.i, double* %call.i, double %15) #7
  br label %if.end44.i

if.then42.i:                                      ; preds = %if.end35.i
  %16 = load double* %fac1.i, align 8, !tbaa !4
  %17 = load double* %fac2.i, align 8, !tbaa !4
  call void @ZVscale(i32 %sub.i, double* %call.i, double %16, double %17) #7
  br label %if.end44.i

if.end44.i:                                       ; preds = %if.end35.i, %if.then42.i, %if.then38.i
  %18 = load i32* %nD.i, align 4, !tbaa !3
  %cmp47263.i = icmp sgt i32 %18, 1
  br i1 %cmp47263.i, label %for.body.lr.ph.i, label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.end44.i
  %19 = shl i32 %7, 1
  %20 = add i32 %19, %8
  %21 = add i32 %20, %9
  %22 = sext i32 %21 to i64
  %23 = sext i32 %add.i to i64
  %24 = add i32 %add.i, -2
  %25 = sext i32 %24 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %if.end147.for.body_crit_edge.i, %for.body.lr.ph.i
  %indvars.iv282.i = phi i64 [ %25, %for.body.lr.ph.i ], [ %indvars.iv.next283.i, %if.end147.for.body_crit_edge.i ]
  %indvars.iv276.i = phi i64 [ %23, %for.body.lr.ph.i ], [ %indvars.iv.next277.i, %if.end147.for.body_crit_edge.i ]
  %indvars.iv.i = phi i64 [ %22, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %if.end147.for.body_crit_edge.i ]
  %usize.0273.i = phi i32 [ %sub7.i, %for.body.lr.ph.i ], [ %dec49.i, %if.end147.for.body_crit_edge.i ]
  %lsize.0271.i = phi i32 [ %sub.i, %for.body.lr.ph.i ], [ %dec.i, %if.end147.for.body_crit_edge.i ]
  %kchv.0269.i = phi i32 [ 2, %for.body.lr.ph.i ], [ %phitmp.i, %if.end147.for.body_crit_edge.i ]
  %dloc.0268.i = phi i32 [ %sub.i, %for.body.lr.ph.i ], [ %add48.i, %if.end147.for.body_crit_edge.i ]
  %ureal.0267.i = phi double [ undef, %for.body.lr.ph.i ], [ %ureal.1.i, %if.end147.for.body_crit_edge.i ]
  %uimag.0266.i = phi double [ undef, %for.body.lr.ph.i ], [ %uimag.1.i, %if.end147.for.body_crit_edge.i ]
  %lreal.0265.i = phi double [ undef, %for.body.lr.ph.i ], [ %lreal.1.i, %if.end147.for.body_crit_edge.i ]
  %limag.0264.i = phi double [ undef, %for.body.lr.ph.i ], [ %limag.1.i, %if.end147.for.body_crit_edge.i ]
  %indvars.iv.next.i = add i64 %indvars.iv.i, -2
  %26 = trunc i64 %indvars.iv.next.i to i32
  %add48.i = add nsw i32 %dloc.0268.i, %26
  %dec.i = add nsw i32 %lsize.0271.i, -1
  %dec49.i = add nsw i32 %usize.0273.i, -1
  %sub50.i = sub nsw i32 %add48.i, %dec.i
  %add51.i = add nsw i32 %add48.i, 1
  %27 = load i32* %type.i, align 4, !tbaa !3
  %28 = trunc i64 %indvars.iv276.i to i32
  %29 = trunc i64 %indvars.iv282.i to i32
  switch i32 %27, label %if.end78.i [
    i32 1, label %if.end78thread-pre-split.i
    i32 2, label %if.then62.i
  ]

if.then62.i:                                      ; preds = %for.body.i
  %mul63.i = shl nsw i32 %29, 1
  %add67257.i = or i32 %mul63.i, 1
  %idxprom68.i = sext i32 %add67257.i to i64
  %arrayidx69.i = getelementptr inbounds double* %call.i, i64 %idxprom68.i
  %30 = load double* %arrayidx69.i, align 8, !tbaa !4
  %mul70.i = shl nsw i32 %28, 1
  %add74258.i = or i32 %mul70.i, 1
  %idxprom75.i = sext i32 %add74258.i to i64
  %arrayidx76.i = getelementptr inbounds double* %call.i, i64 %idxprom75.i
  %31 = load double* %arrayidx76.i, align 8, !tbaa !4
  br label %if.end78thread-pre-split.i

if.end78thread-pre-split.i:                       ; preds = %if.then62.i, %for.body.i
  %limag.1.ph.i = phi double [ %30, %if.then62.i ], [ %limag.0264.i, %for.body.i ]
  %idxprom64.pn.in.i = phi i32 [ %mul63.i, %if.then62.i ], [ %29, %for.body.i ]
  %uimag.1.ph.i = phi double [ %31, %if.then62.i ], [ %uimag.0266.i, %for.body.i ]
  %idxprom71.pn.in.i = phi i32 [ %mul70.i, %if.then62.i ], [ %28, %for.body.i ]
  %idxprom71.pn.i = sext i32 %idxprom71.pn.in.i to i64
  %idxprom64.pn.i = sext i32 %idxprom64.pn.in.i to i64
  %ureal.1.ph.in.i = getelementptr inbounds double* %call.i, i64 %idxprom71.pn.i
  %lreal.1.ph.in.i = getelementptr inbounds double* %call.i, i64 %idxprom64.pn.i
  %ureal.1.ph.i = load double* %ureal.1.ph.in.i, align 8
  %lreal.1.ph.i = load double* %lreal.1.ph.in.i, align 8
  br label %if.end78.i

if.end78.i:                                       ; preds = %if.end78thread-pre-split.i, %for.body.i
  %limag.1.i = phi double [ %limag.1.ph.i, %if.end78thread-pre-split.i ], [ %limag.0264.i, %for.body.i ]
  %lreal.1.i = phi double [ %lreal.1.ph.i, %if.end78thread-pre-split.i ], [ %lreal.0265.i, %for.body.i ]
  %uimag.1.i = phi double [ %uimag.1.ph.i, %if.end78thread-pre-split.i ], [ %uimag.0266.i, %for.body.i ]
  %ureal.1.i = phi double [ %ureal.1.ph.i, %if.end78thread-pre-split.i ], [ %ureal.0267.i, %for.body.i ]
  switch i32 %27, label %if.end123.i [
    i32 1, label %if.end106.thread.i
    i32 2, label %if.end106.thread289.i
  ]

if.end106.thread.i:                               ; preds = %if.end78.i
  %mul82.i = fmul double %lreal.1.i, %ureal.1.i
  %idxprom83.i = sext i32 %add48.i to i64
  %arrayidx84.i = getelementptr inbounds double* %call.i, i64 %idxprom83.i
  %32 = load double* %arrayidx84.i, align 8, !tbaa !4
  %sub85.i = fsub double %32, %mul82.i
  store double %sub85.i, double* %arrayidx84.i, align 8, !tbaa !4
  %idxprom110.i = sext i32 %sub50.i to i64
  %arrayidx111.i = getelementptr inbounds double* %call.i, i64 %idxprom110.i
  %sub112.i = fsub double -0.000000e+00, %ureal.1.i
  call void @DVaxpy(i32 %dec.i, double* %arrayidx111.i, double %sub112.i, double* %call.i) #7
  br label %if.end123thread-pre-split.i

if.end106.thread289.i:                            ; preds = %if.end78.i
  %mul90.i = fmul double %lreal.1.i, %ureal.1.i
  %mul91.i = fmul double %limag.1.i, %uimag.1.i
  %sub92.i = fsub double %mul90.i, %mul91.i
  %mul93.i = shl nsw i32 %add48.i, 1
  %idxprom94.i = sext i32 %mul93.i to i64
  %arrayidx95.i = getelementptr inbounds double* %call.i, i64 %idxprom94.i
  %33 = load double* %arrayidx95.i, align 8, !tbaa !4
  %sub96.i = fsub double %33, %sub92.i
  store double %sub96.i, double* %arrayidx95.i, align 8, !tbaa !4
  %mul97.i = fmul double %lreal.1.i, %uimag.1.i
  %mul98.i = fmul double %limag.1.i, %ureal.1.i
  %add99.i = fadd double %mul97.i, %mul98.i
  %add101256.i = or i32 %mul93.i, 1
  %idxprom102.i = sext i32 %add101256.i to i64
  %arrayidx103.i = getelementptr inbounds double* %call.i, i64 %idxprom102.i
  %34 = load double* %arrayidx103.i, align 8, !tbaa !4
  %sub104.i = fsub double %34, %add99.i
  store double %sub104.i, double* %arrayidx103.i, align 8, !tbaa !4
  %mul117.i = shl nsw i32 %sub50.i, 1
  %idxprom118.i = sext i32 %mul117.i to i64
  %arrayidx119.i = getelementptr inbounds double* %call.i, i64 %idxprom118.i
  %sub120.i = fsub double -0.000000e+00, %ureal.1.i
  %sub121.i = fsub double -0.000000e+00, %uimag.1.i
  call void @ZVaxpy(i32 %dec.i, double* %arrayidx119.i, double %sub120.i, double %sub121.i, double* %call.i) #7
  br label %if.end123thread-pre-split.i

if.end123thread-pre-split.i:                      ; preds = %if.end106.thread289.i, %if.end106.thread.i
  %.pr261.i = load i32* %type.i, align 4, !tbaa !3
  br label %if.end123.i

if.end123.i:                                      ; preds = %if.end123thread-pre-split.i, %if.end78.i
  %35 = phi i32 [ %.pr261.i, %if.end123thread-pre-split.i ], [ %27, %if.end78.i ]
  switch i32 %35, label %if.end147.i [
    i32 1, label %if.then126.i
    i32 2, label %if.then136.i
  ]

if.then126.i:                                     ; preds = %if.end123.i
  %idxprom127.i = sext i32 %add51.i to i64
  %arrayidx128.i = getelementptr inbounds double* %call.i, i64 %idxprom127.i
  %sub129.i = fsub double -0.000000e+00, %lreal.1.i
  %36 = add nsw i64 %indvars.iv276.i, 1
  %arrayidx132.i = getelementptr inbounds double* %call.i, i64 %36
  call void @DVaxpy(i32 %dec49.i, double* %arrayidx128.i, double %sub129.i, double* %arrayidx132.i) #7
  br label %if.end147.i

if.then136.i:                                     ; preds = %if.end123.i
  %mul137.i = shl nsw i32 %add51.i, 1
  %idxprom138.i = sext i32 %mul137.i to i64
  %arrayidx139.i = getelementptr inbounds double* %call.i, i64 %idxprom138.i
  %sub140.i = fsub double -0.000000e+00, %lreal.1.i
  %sub141.i = fsub double -0.000000e+00, %limag.1.i
  %mul142.i = shl i32 %28, 1
  %add143.i = add nsw i32 %mul142.i, 2
  %idxprom144.i = sext i32 %add143.i to i64
  %arrayidx145.i = getelementptr inbounds double* %call.i, i64 %idxprom144.i
  call void @ZVaxpy(i32 %dec49.i, double* %arrayidx139.i, double %sub140.i, double %sub141.i, double* %arrayidx145.i) #7
  br label %if.end147.i

if.end147.i:                                      ; preds = %if.end123.i, %if.then136.i, %if.then126.i
  %37 = load i32* %nD.i, align 4, !tbaa !3
  %cmp47.i = icmp slt i32 %kchv.0269.i, %37
  br i1 %cmp47.i, label %if.end147.for.body_crit_edge.i, label %for.end.i

if.end147.for.body_crit_edge.i:                   ; preds = %if.end147.i
  %indvars.iv.next283.i = add i64 %indvars.iv282.i, -1
  %indvars.iv.next277.i = add i64 %indvars.iv276.i, 1
  %phitmp.i = add i32 %kchv.0269.i, 1
  br label %for.body.i

for.end.i:                                        ; preds = %if.end147.i, %if.end44.i
  %.lcssa.i = phi i32 [ %18, %if.end44.i ], [ %37, %if.end147.i ]
  %38 = load i32* %nU.i, align 4, !tbaa !3
  %add151.i = add i32 %.lcssa.i, -1
  %sub152.i = add i32 %add151.i, %38
  %39 = load i32* %type.i, align 4, !tbaa !3
  switch i32 %39, label %if.end14 [
    i32 1, label %if.then155.i
    i32 2, label %if.then162.i
  ]

if.then155.i:                                     ; preds = %for.end.i
  %40 = load i32* %nL.i, align 4, !tbaa !3
  %add156.i = add nsw i32 %40, %.lcssa.i
  %idxprom157.i = sext i32 %add156.i to i64
  %arrayidx158.i = getelementptr inbounds double* %call.i, i64 %idxprom157.i
  %41 = load double* %fac1.i, align 8, !tbaa !4
  call void @DVscale(i32 %sub152.i, double* %arrayidx158.i, double %41) #7
  br label %if.end14

if.then162.i:                                     ; preds = %for.end.i
  %42 = load i32* %nL.i, align 4, !tbaa !3
  %add163.i = add nsw i32 %42, %.lcssa.i
  %mul164.i = shl nsw i32 %add163.i, 1
  %idxprom165.i = sext i32 %mul164.i to i64
  %arrayidx166.i = getelementptr inbounds double* %call.i, i64 %idxprom165.i
  %43 = load double* %fac1.i, align 8, !tbaa !4
  %44 = load double* %fac2.i, align 8, !tbaa !4
  call void @ZVscale(i32 %sub152.i, double* %arrayidx166.i, double %43, double %44) #7
  br label %if.end14

if.then8:                                         ; preds = %if.end, %if.end
  %45 = bitcast double* %fac1.i22 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %45) #1
  %46 = bitcast double* %fac2.i23 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %46) #1
  %47 = bitcast i32* %nD.i24 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %47) #1
  %48 = bitcast i32* %nL.i25 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %48) #1
  %49 = bitcast i32* %nU.i26 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %49) #1
  call void @Chv_dimensions(%struct._Chv* %chv, i32* %nD.i24, i32* %nL.i25, i32* %nU.i26) #7
  %call.i27 = call double* @Chv_entries(%struct._Chv* %chv) #7
  %50 = load i32* %nD.i24, align 4, !tbaa !3
  %51 = load i32* %nU.i26, align 4, !tbaa !3
  %add.i28 = add i32 %51, %50
  %sub.i29 = add nsw i32 %add.i28, -1
  %type.i30 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 4
  %52 = load i32* %type.i30, align 4, !tbaa !3
  switch i32 %52, label %if.else33.i [
    i32 1, label %if.then.i31
    i32 2, label %if.then6.i
  ]

if.then.i31:                                      ; preds = %if.then8
  %53 = load double* %call.i27, align 8, !tbaa !4
  %cmp2.i = fcmp oeq double %53, 0.000000e+00
  br i1 %cmp2.i, label %if.end14, label %if.end28.thread.i

if.end28.thread.i:                                ; preds = %if.then.i31
  %div.i32 = fdiv double 1.000000e+00, %53
  store double %div.i32, double* %fac1.i22, align 8, !tbaa !4
  %arrayidx32.i.pre = getelementptr inbounds double* %call.i27, i64 1
  br label %if.then31.i

if.then6.i:                                       ; preds = %if.then8
  %54 = load double* %call.i27, align 8, !tbaa !4
  %arrayidx12.i = getelementptr inbounds double* %call.i27, i64 1
  %55 = load double* %arrayidx12.i, align 8, !tbaa !4
  %cmp13.i = fcmp oeq double %54, 0.000000e+00
  %cmp14.i = fcmp oeq double %55, 0.000000e+00
  %or.cond.i33 = and i1 %cmp13.i, %cmp14.i
  br i1 %or.cond.i33, label %if.end14, label %if.end16.i

if.end16.i:                                       ; preds = %if.then6.i
  %56 = load i32* %symflag, align 4, !tbaa !3
  %cmp17.i = icmp eq i32 %56, 1
  br i1 %cmp17.i, label %if.end28.thread183.i, label %if.end28.i

if.end28.thread183.i:                             ; preds = %if.end16.i
  %div19.i = fdiv double 1.000000e+00, %54
  store double %div19.i, double* %fac1.i22, align 8, !tbaa !4
  store double 0.000000e+00, double* %fac2.i23, align 8, !tbaa !4
  store double 0.000000e+00, double* %arrayidx12.i, align 8, !tbaa !4
  br label %if.else33.i

if.end28.i:                                       ; preds = %if.end16.i
  %call25.i = call i32 @Zrecip(double %54, double %55, double* %fac1.i22, double* %fac2.i23) #7
  %.pr.pre.i = load i32* %type.i30, align 4, !tbaa !3
  %phitmp.i34 = icmp eq i32 %.pr.pre.i, 1
  br i1 %phitmp.i34, label %if.end28.i.if.then31.i_crit_edge, label %if.else33.i

if.end28.i.if.then31.i_crit_edge:                 ; preds = %if.end28.i
  %.pre48 = load double* %fac1.i22, align 8, !tbaa !4
  br label %if.then31.i

if.then31.i:                                      ; preds = %if.end28.i.if.then31.i_crit_edge, %if.end28.thread.i
  %arrayidx32.i.pre-phi = phi double* [ %arrayidx12.i, %if.end28.i.if.then31.i_crit_edge ], [ %arrayidx32.i.pre, %if.end28.thread.i ]
  %57 = phi double [ %.pre48, %if.end28.i.if.then31.i_crit_edge ], [ %div.i32, %if.end28.thread.i ]
  %dimag.0.ph182.i = phi double [ %55, %if.end28.i.if.then31.i_crit_edge ], [ undef, %if.end28.thread.i ]
  %dreal.0.ph181.i = phi double [ %54, %if.end28.i.if.then31.i_crit_edge ], [ %53, %if.end28.thread.i ]
  call void @DVscale(i32 %sub.i29, double* %arrayidx32.i.pre-phi, double %57) #7
  br label %for.cond.preheader.i

if.else33.i:                                      ; preds = %if.end28.i, %if.then8, %if.end28.thread183.i
  %dimag.0167.i = phi double [ %55, %if.end28.thread183.i ], [ undef, %if.then8 ], [ %55, %if.end28.i ]
  %dreal.0165.i = phi double [ %54, %if.end28.thread183.i ], [ undef, %if.then8 ], [ %54, %if.end28.i ]
  %58 = load i32* %symflag, align 4, !tbaa !3
  %cmp35.i = icmp eq i32 %58, 1
  br i1 %cmp35.i, label %if.then36.i, label %if.else39.i

if.then36.i:                                      ; preds = %if.else33.i
  %mul37.i = shl nsw i32 %sub.i29, 1
  %arrayidx38.i = getelementptr inbounds double* %call.i27, i64 2
  %59 = load double* %fac1.i22, align 8, !tbaa !4
  call void @DVscale(i32 %mul37.i, double* %arrayidx38.i, double %59) #7
  br label %for.cond.preheader.i

if.else39.i:                                      ; preds = %if.else33.i
  %arrayidx40.i = getelementptr inbounds double* %call.i27, i64 2
  %60 = load double* %fac1.i22, align 8, !tbaa !4
  %61 = load double* %fac2.i23, align 8, !tbaa !4
  call void @ZVscale(i32 %sub.i29, double* %arrayidx40.i, double %60, double %61) #7
  br label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.else39.i, %if.then36.i, %if.then31.i
  %dimag.0166.ph.i = phi double [ %dimag.0.ph182.i, %if.then31.i ], [ %dimag.0167.i, %if.else39.i ], [ %dimag.0167.i, %if.then36.i ]
  %dreal.0164.ph.i = phi double [ %dreal.0.ph181.i, %if.then31.i ], [ %dreal.0165.i, %if.else39.i ], [ %dreal.0165.i, %if.then36.i ]
  %62 = load i32* %nD.i24, align 4, !tbaa !3
  %cmp44169.i = icmp sgt i32 %62, 1
  br i1 %cmp44169.i, label %for.body.lr.ph.i35, label %if.end14

for.body.lr.ph.i35:                               ; preds = %for.cond.preheader.i
  %63 = sext i32 %add.i28 to i64
  br label %for.body.i37

for.body.i37:                                     ; preds = %if.end101.for.body_crit_edge.i, %for.body.lr.ph.i35
  %indvars.iv177.i = phi i64 [ %63, %for.body.lr.ph.i35 ], [ %indvars.iv.next178.i, %if.end101.for.body_crit_edge.i ]
  %indvars.iv.i36 = phi i64 [ 1, %for.body.lr.ph.i35 ], [ %indvars.iv.next.i45, %if.end101.for.body_crit_edge.i ]
  %usize.0176.i = phi i32 [ %sub.i29, %for.body.lr.ph.i35 ], [ %dec102.i, %if.end101.for.body_crit_edge.i ]
  %uijloc.0175.i = phi i32 [ 2, %for.body.lr.ph.i35 ], [ %phitmp180.i, %if.end101.for.body_crit_edge.i ]
  %dloc.0172.i = phi i32 [ 0, %for.body.lr.ph.i35 ], [ %add45.i, %if.end101.for.body_crit_edge.i ]
  %lreal.0171.i = phi double [ undef, %for.body.lr.ph.i35 ], [ %lreal.1189.i, %if.end101.for.body_crit_edge.i ]
  %limag.0170.i = phi double [ undef, %for.body.lr.ph.i35 ], [ %limag.1187.i, %if.end101.for.body_crit_edge.i ]
  %64 = trunc i64 %indvars.iv177.i to i32
  %add45.i = add nsw i32 %dloc.0172.i, %64
  %65 = load i32* %type.i30, align 4, !tbaa !3
  switch i32 %65, label %if.end79.i [
    i32 1, label %if.end79.thread.i
    i32 2, label %if.then56.i
  ]

if.end79.thread.i:                                ; preds = %for.body.i37
  %arrayidx51.i = getelementptr inbounds double* %call.i27, i64 %indvars.iv.i36
  %66 = load double* %arrayidx51.i, align 8, !tbaa !4
  %mul52.i = fmul double %dreal.0164.ph.i, %66
  br label %if.then82.i

if.then56.i:                                      ; preds = %for.body.i37
  %67 = trunc i64 %indvars.iv.i36 to i32
  %mul57.i = shl nsw i32 %67, 1
  %idxprom58.i = sext i32 %mul57.i to i64
  %arrayidx59.i = getelementptr inbounds double* %call.i27, i64 %idxprom58.i
  %68 = load double* %arrayidx59.i, align 8, !tbaa !4
  %add61162.i = or i32 %mul57.i, 1
  %idxprom62.i = sext i32 %add61162.i to i64
  %arrayidx63.i = getelementptr inbounds double* %call.i27, i64 %idxprom62.i
  %69 = load double* %arrayidx63.i, align 8, !tbaa !4
  %70 = load i32* %symflag, align 4, !tbaa !3
  %cmp65.i = icmp eq i32 %70, 1
  %mul67.i = fmul double %dreal.0164.ph.i, %68
  br i1 %cmp65.i, label %if.end79.thread190.i, label %if.else70.i

if.end79.thread190.i:                             ; preds = %if.then56.i
  %71 = fmul double %dreal.0164.ph.i, %69
  %mul69.i = fsub double -0.000000e+00, %71
  br label %if.then91.i

if.else70.i:                                      ; preds = %if.then56.i
  %mul72.i = fmul double %dimag.0166.ph.i, %69
  %sub73.i = fsub double %mul67.i, %mul72.i
  %mul74.i = fmul double %dreal.0164.ph.i, %69
  %mul75.i = fmul double %dimag.0166.ph.i, %68
  %add76.i = fadd double %mul75.i, %mul74.i
  br label %if.end79.i

if.end79.i:                                       ; preds = %if.else70.i, %for.body.i37
  %limag.1.i38 = phi double [ %limag.0170.i, %for.body.i37 ], [ %add76.i, %if.else70.i ]
  %lreal.1.i39 = phi double [ %lreal.0171.i, %for.body.i37 ], [ %sub73.i, %if.else70.i ]
  switch i32 %65, label %if.end101.i [
    i32 1, label %if.end79.i.if.then82.i_crit_edge
    i32 2, label %if.end79.i.if.then91.i_crit_edge
  ]

if.end79.i.if.then82.i_crit_edge:                 ; preds = %if.end79.i
  %arrayidx87.i.pre = getelementptr inbounds double* %call.i27, i64 %indvars.iv.i36
  br label %if.then82.i

if.end79.i.if.then91.i_crit_edge:                 ; preds = %if.end79.i
  %.pre49 = trunc i64 %indvars.iv.i36 to i32
  %mul97.i44.pre = shl nsw i32 %.pre49, 1
  %idxprom98.i.pre = sext i32 %mul97.i44.pre to i64
  %arrayidx99.i.pre = getelementptr inbounds double* %call.i27, i64 %idxprom98.i.pre
  br label %if.then91.i

if.then82.i:                                      ; preds = %if.end79.i.if.then82.i_crit_edge, %if.end79.thread.i
  %arrayidx87.i.pre-phi = phi double* [ %arrayidx87.i.pre, %if.end79.i.if.then82.i_crit_edge ], [ %arrayidx51.i, %if.end79.thread.i ]
  %lreal.1188.i = phi double [ %lreal.1.i39, %if.end79.i.if.then82.i_crit_edge ], [ %mul52.i, %if.end79.thread.i ]
  %limag.1186.i = phi double [ %limag.1.i38, %if.end79.i.if.then82.i_crit_edge ], [ %limag.0170.i, %if.end79.thread.i ]
  %idxprom83.i40 = sext i32 %add45.i to i64
  %arrayidx84.i41 = getelementptr inbounds double* %call.i27, i64 %idxprom83.i40
  %sub85.i42 = fsub double -0.000000e+00, %lreal.1188.i
  call void @DVaxpy(i32 %usize.0176.i, double* %arrayidx84.i41, double %sub85.i42, double* %arrayidx87.i.pre-phi) #7
  br label %if.end101.i

if.then91.i:                                      ; preds = %if.end79.i.if.then91.i_crit_edge, %if.end79.thread190.i
  %arrayidx99.i.pre-phi = phi double* [ %arrayidx99.i.pre, %if.end79.i.if.then91.i_crit_edge ], [ %arrayidx59.i, %if.end79.thread190.i ]
  %lreal.1192.i = phi double [ %lreal.1.i39, %if.end79.i.if.then91.i_crit_edge ], [ %mul67.i, %if.end79.thread190.i ]
  %limag.1191.i = phi double [ %limag.1.i38, %if.end79.i.if.then91.i_crit_edge ], [ %mul69.i, %if.end79.thread190.i ]
  %mul92.i = shl nsw i32 %add45.i, 1
  %idxprom93.i = sext i32 %mul92.i to i64
  %arrayidx94.i = getelementptr inbounds double* %call.i27, i64 %idxprom93.i
  %sub95.i = fsub double -0.000000e+00, %lreal.1192.i
  %sub96.i43 = fsub double -0.000000e+00, %limag.1191.i
  call void @ZVaxpy(i32 %usize.0176.i, double* %arrayidx94.i, double %sub95.i, double %sub96.i43, double* %arrayidx99.i.pre-phi) #7
  br label %if.end101.i

if.end101.i:                                      ; preds = %if.then91.i, %if.then82.i, %if.end79.i
  %lreal.1189.i = phi double [ %lreal.1.i39, %if.end79.i ], [ %lreal.1192.i, %if.then91.i ], [ %lreal.1188.i, %if.then82.i ]
  %limag.1187.i = phi double [ %limag.1.i38, %if.end79.i ], [ %limag.1191.i, %if.then91.i ], [ %limag.1186.i, %if.then82.i ]
  %72 = load i32* %nD.i24, align 4, !tbaa !3
  %cmp44.i = icmp slt i32 %uijloc.0175.i, %72
  br i1 %cmp44.i, label %if.end101.for.body_crit_edge.i, label %if.end14

if.end101.for.body_crit_edge.i:                   ; preds = %if.end101.i
  %dec102.i = add nsw i32 %usize.0176.i, -1
  %indvars.iv.next178.i = add i64 %indvars.iv177.i, -1
  %indvars.iv.next.i45 = add i64 %indvars.iv.i36, 1
  %phitmp180.i = add i32 %uijloc.0175.i, 1
  br label %for.body.i37

if.else10:                                        ; preds = %if.end
  %73 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([46 x i8]* @.str8, i64 0, i64 0), %struct._Chv* %chv, i32 %1) #7
  call void @exit(i32 -1) #6
  unreachable

if.end14:                                         ; preds = %if.end101.i, %for.cond.preheader.i, %if.then6.i, %if.then.i31, %if.then162.i, %if.then155.i, %for.end.i, %if.then12.i, %if.then.i
  %rc.0 = phi i32 [ 0, %if.then.i ], [ 0, %if.then12.i ], [ 1, %for.end.i ], [ 1, %if.then162.i ], [ 1, %if.then155.i ], [ 0, %if.then.i31 ], [ 0, %if.then6.i ], [ 1, %for.cond.preheader.i ], [ 1, %if.end101.i ]
  ret i32 %rc.0
}
