define i32 @Chv_factorWithPivoting(%struct._Chv* %chv, i32 %ndelay, i32 %pivotflag, %struct._IV* %pivotsizesIV, %struct._DV* %workDV, double %tau, i32* %pntest) #0 {
entry:
  %wrkChv = alloca %struct._Chv, align 8
  %irow = alloca i32, align 4
  %jcol = alloca i32, align 4
  %ncol = alloca i32, align 4
  %nrow = alloca i32, align 4
  %colind = alloca i32*, align 8
  %rowind = alloca i32*, align 8
  %0 = bitcast %struct._Chv* %wrkChv to i8*
  call void @llvm.lifetime.start(i64 80, i8* %0) #1
  %notlhs = icmp eq %struct._Chv* %chv, null
  %notrhs = icmp ne i32 %pivotflag, 1
  %or.cond.not = or i1 %notrhs, %notlhs
  %cmp3 = icmp slt i32 %ndelay, 0
  %or.cond131 = or i1 %or.cond.not, %cmp3
  br i1 %or.cond131, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %2 = call i64 @fwrite(i8* getelementptr inbounds ([54 x i8]* @.str2, i64 0, i64 0), i64 53, i64 1, %struct._IO_FILE* %1)
  call void @exit(i32 -1) #6
  unreachable

if.end:                                           ; preds = %entry
  %cmp4 = icmp eq %struct._DV* %workDV, null
  br i1 %cmp4, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.end
  %3 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %4 = call i64 @fwrite(i8* getelementptr inbounds ([60 x i8]* @.str3, i64 0, i64 0), i64 59, i64 1, %struct._IO_FILE* %3)
  call void @exit(i32 -1) #6
  unreachable

if.end7:                                          ; preds = %if.end
  %cmp8 = fcmp olt double %tau, 1.000000e+00
  br i1 %cmp8, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end7
  %5 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([65 x i8]* @.str4, i64 0, i64 0), double %tau) #7
  call void @exit(i32 -1) #6
  unreachable

if.end11:                                         ; preds = %if.end7
  %type = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 4
  %6 = load i32* %type, align 4, !tbaa !3
  switch i32 %6, label %if.end18.if.end31_crit_edge [
    i32 1, label %land.lhs.true
    i32 2, label %land.lhs.true21
  ]

land.lhs.true:                                    ; preds = %if.end11
  %symflag = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 5
  %7 = load i32* %symflag, align 4, !tbaa !3
  %cmp13 = icmp eq i32 %7, 0
  %cmp15 = icmp eq %struct._IV* %pivotsizesIV, null
  %or.cond132 = and i1 %cmp13, %cmp15
  br i1 %or.cond132, label %if.then16, label %if.end18.if.end31_crit_edge

if.then16:                                        ; preds = %land.lhs.true
  %8 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %9 = call i64 @fwrite(i8* getelementptr inbounds ([105 x i8]* @.str5, i64 0, i64 0), i64 104, i64 1, %struct._IO_FILE* %8)
  call void @exit(i32 -1) #6
  unreachable

if.end18.if.end31_crit_edge:                      ; preds = %if.end11, %land.lhs.true
  %symflag34.pre = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 5
  br label %if.end31

land.lhs.true21:                                  ; preds = %if.end11
  %symflag22 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 5
  %10 = load i32* %symflag22, align 4, !tbaa !3
  %switch = icmp ult i32 %10, 2
  %cmp28 = icmp eq %struct._IV* %pivotsizesIV, null
  %or.cond133 = and i1 %switch, %cmp28
  br i1 %or.cond133, label %if.then29, label %if.end31

if.then29:                                        ; preds = %land.lhs.true21
  %11 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %12 = call i64 @fwrite(i8* getelementptr inbounds ([121 x i8]* @.str6, i64 0, i64 0), i64 120, i64 1, %struct._IO_FILE* %11)
  call void @exit(i32 -1) #6
  unreachable

if.end31:                                         ; preds = %if.end18.if.end31_crit_edge, %land.lhs.true21
  %symflag34.pre-phi = phi i32* [ %symflag34.pre, %if.end18.if.end31_crit_edge ], [ %symflag22, %land.lhs.true21 ]
  %nD32 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 1
  %13 = load i32* %nD32, align 4, !tbaa !3
  call void @Chv_setDefaultFields(%struct._Chv* %wrkChv) #7
  call void @Chv_rowIndices(%struct._Chv* %chv, i32* %nrow, i32** %rowind) #7
  call void @Chv_columnIndices(%struct._Chv* %chv, i32* %ncol, i32** %colind) #7
  %id = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 0
  %14 = load i32* %id, align 4, !tbaa !3
  %nL = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 2
  %15 = load i32* %nL, align 4, !tbaa !3
  %nU = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 3
  %16 = load i32* %nU, align 4, !tbaa !3
  %17 = load i32* %type, align 4, !tbaa !3
  %18 = load i32* %symflag34.pre-phi, align 4, !tbaa !3
  %19 = load i32** %rowind, align 8, !tbaa !0
  %20 = load i32** %colind, align 8, !tbaa !0
  %call35 = call double* @Chv_entries(%struct._Chv* %chv) #7
  call void @Chv_initWithPointers(%struct._Chv* %wrkChv, i32 %14, i32 %13, i32 %15, i32 %16, i32 %17, i32 %18, i32* %19, i32* %20, double* %call35) #7
  %21 = load i32* %symflag34.pre-phi, align 4, !tbaa !3
  %switch134 = icmp ult i32 %21, 2
  br i1 %switch134, label %if.then41, label %while.cond66.preheader

while.cond66.preheader:                           ; preds = %if.end31
  %cmp67139 = icmp sgt i32 %13, 0
  br i1 %cmp67139, label %while.body68, label %if.end82

if.then41:                                        ; preds = %if.end31
  call void @IV_setSize(%struct._IV* %pivotsizesIV, i32 0) #7
  %cmp42135 = icmp sgt i32 %13, 0
  br i1 %cmp42135, label %while.body, label %if.end82

while.body:                                       ; preds = %if.then41, %while.cond.backedge
  %ndelay.addr.0137 = phi i32 [ 0, %while.cond.backedge ], [ %ndelay, %if.then41 ]
  %nelim.0136 = phi i32 [ %nelim.0.be, %while.cond.backedge ], [ 0, %if.then41 ]
  %call43 = call i32 @Chv_findPivot(%struct._Chv* %wrkChv, %struct._DV* %workDV, double %tau, i32 %ndelay.addr.0137, i32* %irow, i32* %jcol, i32* %pntest) #7
  %22 = load i32* %irow, align 4, !tbaa !3
  %23 = load i32* %jcol, align 4, !tbaa !3
  %cmp44 = icmp sgt i32 %22, %23
  br i1 %cmp44, label %if.then45, label %if.end46

if.then45:                                        ; preds = %while.body
  store i32 %23, i32* %irow, align 4, !tbaa !3
  store i32 %22, i32* %jcol, align 4, !tbaa !3
  br label %if.end46

if.end46:                                         ; preds = %if.then45, %while.body
  %24 = phi i32 [ %22, %if.then45 ], [ %23, %while.body ]
  %25 = phi i32 [ %23, %if.then45 ], [ %22, %while.body ]
  %add = add nsw i32 %25, %nelim.0136
  store i32 %add, i32* %irow, align 4, !tbaa !3
  %add47 = add nsw i32 %24, %nelim.0136
  store i32 %add47, i32* %jcol, align 4, !tbaa !3
  %cmp48 = icmp eq i32 %call43, 0
  br i1 %cmp48, label %if.end82, label %if.else

if.else:                                          ; preds = %if.end46
  %cmp50 = icmp eq i32 %add, %add47
  call void @Chv_swapRowsAndColumns(%struct._Chv* %chv, i32 %nelim.0136, i32 %add) #7
  br i1 %cmp50, label %if.then51, label %if.else56

if.then51:                                        ; preds = %if.else
  %call52 = call i32 @Chv_r1upd(%struct._Chv* %wrkChv) #8
  %cmp53 = icmp eq i32 %call52, 0
  br i1 %cmp53, label %if.end82, label %if.end55

if.end55:                                         ; preds = %if.then51
  call void @Chv_shift(%struct._Chv* %wrkChv, i32 1) #7
  %inc = add nsw i32 %nelim.0136, 1
  call void @IV_push(%struct._IV* %pivotsizesIV, i32 1) #7
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.end55, %if.end61
  %nelim.0.be = phi i32 [ %inc, %if.end55 ], [ %add62, %if.end61 ]
  %cmp42 = icmp slt i32 %nelim.0.be, %13
  br i1 %cmp42, label %while.body, label %if.end82

if.else56:                                        ; preds = %if.else
  %add57 = add nsw i32 %nelim.0136, 1
  %26 = load i32* %jcol, align 4, !tbaa !3
  call void @Chv_swapRowsAndColumns(%struct._Chv* %chv, i32 %add57, i32 %26) #7
  %call58 = call i32 @Chv_r2upd(%struct._Chv* %wrkChv) #8
  %cmp59 = icmp eq i32 %call58, 0
  br i1 %cmp59, label %if.end82, label %if.end61

if.end61:                                         ; preds = %if.else56
  call void @Chv_shift(%struct._Chv* %wrkChv, i32 2) #7
  %add62 = add nsw i32 %nelim.0136, 2
  call void @IV_push(%struct._IV* %pivotsizesIV, i32 2) #7
  br label %while.cond.backedge

while.body68:                                     ; preds = %while.cond66.preheader, %if.end78
  %ndelay.addr.1141 = phi i32 [ 0, %if.end78 ], [ %ndelay, %while.cond66.preheader ]
  %nelim.1140 = phi i32 [ %inc79, %if.end78 ], [ 0, %while.cond66.preheader ]
  %call69 = call i32 @Chv_findPivot(%struct._Chv* %wrkChv, %struct._DV* %workDV, double %tau, i32 %ndelay.addr.1141, i32* %irow, i32* %jcol, i32* %pntest) #7
  %27 = load i32* %irow, align 4, !tbaa !3
  %add70 = add nsw i32 %27, %nelim.1140
  store i32 %add70, i32* %irow, align 4, !tbaa !3
  %28 = load i32* %jcol, align 4, !tbaa !3
  %add71 = add nsw i32 %28, %nelim.1140
  store i32 %add71, i32* %jcol, align 4, !tbaa !3
  %cmp72 = icmp eq i32 %call69, 0
  br i1 %cmp72, label %if.end82, label %if.else74

if.else74:                                        ; preds = %while.body68
  call void @Chv_swapRows(%struct._Chv* %chv, i32 %nelim.1140, i32 %add70) #7
  %29 = load i32* %jcol, align 4, !tbaa !3
  call void @Chv_swapColumns(%struct._Chv* %chv, i32 %nelim.1140, i32 %29) #7
  %call75 = call i32 @Chv_r1upd(%struct._Chv* %wrkChv) #8
  %cmp76 = icmp eq i32 %call75, 0
  br i1 %cmp76, label %if.end82, label %if.end78

if.end78:                                         ; preds = %if.else74
  call void @Chv_shift(%struct._Chv* %wrkChv, i32 1) #7
  %inc79 = add nsw i32 %nelim.1140, 1
  %cmp67 = icmp slt i32 %inc79, %13
  br i1 %cmp67, label %while.body68, label %if.end82

if.end82:                                         ; preds = %while.cond66.preheader, %while.body68, %if.else74, %if.end78, %if.then41, %if.end46, %if.then51, %if.else56, %while.cond.backedge
  %nelim.2 = phi i32 [ 0, %if.then41 ], [ %nelim.0136, %if.end46 ], [ %nelim.0136, %if.then51 ], [ %nelim.0136, %if.else56 ], [ %nelim.0.be, %while.cond.backedge ], [ 0, %while.cond66.preheader ], [ %nelim.1140, %while.body68 ], [ %nelim.1140, %if.else74 ], [ %inc79, %if.end78 ]
  call void @llvm.lifetime.end(i64 80, i8* %0) #1
  ret i32 %nelim.2
}
