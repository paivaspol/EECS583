define void @GPart_init(%struct._GPart* %gpart, %struct._Graph* %g) #0 {
entry:
  %cmp = icmp eq %struct._GPart* %gpart, null
  %cmp1 = icmp eq %struct._Graph* %g, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %entry
  %nvtx = getelementptr inbounds %struct._Graph* %g, i64 0, i32 1
  %0 = load i32* %nvtx, align 4, !tbaa !0
  %cmp3 = icmp slt i32 %0, 1
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false2, %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([47 x i8]* @.str, i64 0, i64 0), %struct._GPart* %gpart, %struct._Graph* %g) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %lor.lhs.false2
  tail call void @GPart_clearData(%struct._GPart* %gpart) #4
  %2 = load i32* %nvtx, align 4, !tbaa !0
  %nvtx5 = getelementptr inbounds %struct._GPart* %gpart, i64 0, i32 2
  store i32 %2, i32* %nvtx5, align 4, !tbaa !0
  %nvbnd = getelementptr inbounds %struct._Graph* %g, i64 0, i32 2
  %3 = load i32* %nvbnd, align 4, !tbaa !0
  %nvbnd6 = getelementptr inbounds %struct._GPart* %gpart, i64 0, i32 3
  store i32 %3, i32* %nvbnd6, align 4, !tbaa !0
  %g7 = getelementptr inbounds %struct._GPart* %gpart, i64 0, i32 1
  store %struct._Graph* %g, %struct._Graph** %g7, align 8, !tbaa !3
  %ncomp = getelementptr inbounds %struct._GPart* %gpart, i64 0, i32 4
  store i32 1, i32* %ncomp, align 4, !tbaa !0
  %compidsIV = getelementptr inbounds %struct._GPart* %gpart, i64 0, i32 5
  %4 = load i32* %nvtx, align 4, !tbaa !0
  tail call void @IV_setSize(%struct._IV* %compidsIV, i32 %4) #4
  tail call void @IV_fill(%struct._IV* %compidsIV, i32 1) #4
  ret void
}
