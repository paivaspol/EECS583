define i32 @Tree_nchild(%struct._Tree* %tree, i32 %v) #0 {
entry:
  %cmp = icmp eq %struct._Tree* %tree, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %n = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 0
  %0 = load i32* %n, align 4, !tbaa !0
  %cmp1 = icmp slt i32 %0, 1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([48 x i8]* @.str6, i64 0, i64 0), %struct._Tree* %tree, i32 %v) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %lor.lhs.false
  %cmp2 = icmp sgt i32 %v, -1
  %cmp5 = icmp sgt i32 %0, %v
  %or.cond = and i1 %cmp2, %cmp5
  br i1 %or.cond, label %if.end9, label %if.then6

if.then6:                                         ; preds = %if.end
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([56 x i8]* @.str7, i64 0, i64 0), %struct._Tree* %tree, i32 %v, i32 %v, i32 %0) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end9:                                          ; preds = %if.end
  %idxprom = sext i32 %v to i64
  %fch = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 3
  %3 = load i32** %fch, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds i32* %3, i64 %idxprom
  %w.026 = load i32* %arrayidx, align 4
  %cmp1027 = icmp eq i32 %w.026, -1
  br i1 %cmp1027, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end9
  %sib = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 4
  %4 = load i32** %sib, align 8, !tbaa !3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %w.029 = phi i32 [ %w.026, %for.body.lr.ph ], [ %w.0, %for.body ]
  %nchild.028 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %inc = add nsw i32 %nchild.028, 1
  %idxprom11 = sext i32 %w.029 to i64
  %arrayidx12 = getelementptr inbounds i32* %4, i64 %idxprom11
  %w.0 = load i32* %arrayidx12, align 4
  %cmp10 = icmp eq i32 %w.0, -1
  br i1 %cmp10, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end9
  %nchild.0.lcssa = phi i32 [ 0, %if.end9 ], [ %inc, %for.body ]
  ret i32 %nchild.0.lcssa
}
