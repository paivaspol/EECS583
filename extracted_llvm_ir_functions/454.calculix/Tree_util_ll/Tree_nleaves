define i32 @Tree_nleaves(%struct._Tree* %tree) #0 {
entry:
  %cmp = icmp eq %struct._Tree* %tree, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %n = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 0
  %0 = load i32* %n, align 4, !tbaa !0
  %cmp1 = icmp slt i32 %0, 1
  br i1 %cmp1, label %if.then, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %lor.lhs.false
  %fch = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 3
  %1 = load i32** %fch, align 8, !tbaa !3
  br label %for.body

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([46 x i8]* @.str4, i64 0, i64 0), %struct._Tree* %tree) #4
  tail call void @exit(i32 -1) #5
  unreachable

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %nleaf.016 = phi i32 [ 0, %for.body.lr.ph ], [ %inc.nleaf.0, %for.body ]
  %arrayidx = getelementptr inbounds i32* %1, i64 %indvars.iv
  %3 = load i32* %arrayidx, align 4, !tbaa !0
  %cmp4 = icmp eq i32 %3, -1
  %inc = zext i1 %cmp4 to i32
  %inc.nleaf.0 = add nsw i32 %inc, %nleaf.016
  %indvars.iv.next = add i64 %indvars.iv, 1
  %4 = trunc i64 %indvars.iv.next to i32
  %cmp3 = icmp slt i32 %4, %0
  br i1 %cmp3, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  ret i32 %inc.nleaf.0
}
