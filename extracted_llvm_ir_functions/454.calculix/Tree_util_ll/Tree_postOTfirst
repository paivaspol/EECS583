define i32 @Tree_postOTfirst(%struct._Tree* %tree) #0 {
entry:
  %cmp = icmp eq %struct._Tree* %tree, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %n = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 0
  %0 = load i32* %n, align 4, !tbaa !0
  %cmp1 = icmp slt i32 %0, 1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), %struct._Tree* %tree) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %lor.lhs.false
  %root = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 1
  %2 = load i32* %root, align 4, !tbaa !0
  %cmp2 = icmp eq i32 %2, -1
  br i1 %cmp2, label %if.end8, label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.end
  %fch = getelementptr inbounds %struct._Tree* %tree, i64 0, i32 3
  %3 = load i32** %fch, align 8, !tbaa !3
  br label %while.cond

while.cond:                                       ; preds = %while.cond.preheader, %while.cond
  %v.0 = phi i32 [ %4, %while.cond ], [ %2, %while.cond.preheader ]
  %idxprom = sext i32 %v.0 to i64
  %arrayidx = getelementptr inbounds i32* %3, i64 %idxprom
  %4 = load i32* %arrayidx, align 4, !tbaa !0
  %cmp4 = icmp eq i32 %4, -1
  br i1 %cmp4, label %if.end8, label %while.cond

if.end8:                                          ; preds = %while.cond, %if.end
  %v.1 = phi i32 [ -1, %if.end ], [ %v.0, %while.cond ]
  ret i32 %v.1
}
