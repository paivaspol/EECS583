define void @IIheap_print(%struct._IIheap* %heap, %struct._IO_FILE* %fp) #0 {
entry:
  %ierr = alloca i32, align 4
  %cmp = icmp eq %struct._IIheap* %heap, null
  %cmp1 = icmp eq %struct._IO_FILE* %fp, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([75 x i8]* @.str12, i64 0, i64 0), %struct._IIheap* %heap, %struct._IO_FILE* %fp) #6
  call void @exit(i32 -1) #7
  unreachable

if.end:                                           ; preds = %entry
  %size = getelementptr inbounds %struct._IIheap* %heap, i64 0, i32 0
  %1 = load i32* %size, align 4, !tbaa !3
  %maxsize = getelementptr inbounds %struct._IIheap* %heap, i64 0, i32 1
  %2 = load i32* %maxsize, align 4, !tbaa !3
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([41 x i8]* @.str13, i64 0, i64 0), i32 %1, i32 %2) #6
  %3 = load i32* %size, align 4, !tbaa !3
  %cmp4 = icmp sgt i32 %3, 0
  br i1 %cmp4, label %if.then5, label %if.end15

if.then5:                                         ; preds = %if.end
  %4 = call i64 @fwrite(i8* getelementptr inbounds ([41 x i8]* @.str14, i64 0, i64 0), i64 40, i64 1, %struct._IO_FILE* %fp)
  %5 = load i32* %size, align 4, !tbaa !3
  %cmp834 = icmp sgt i32 %5, 0
  br i1 %cmp834, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.then5
  %keys = getelementptr inbounds %struct._IIheap* %heap, i64 0, i32 3
  %values = getelementptr inbounds %struct._IIheap* %heap, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %6 = load i32** %keys, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i32* %6, i64 %indvars.iv
  %7 = load i32* %arrayidx, align 4, !tbaa !3
  %8 = load i32** %values, align 8, !tbaa !0
  %arrayidx10 = getelementptr inbounds i32* %8, i64 %indvars.iv
  %9 = load i32* %arrayidx10, align 4, !tbaa !3
  %10 = trunc i64 %indvars.iv to i32
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([14 x i8]* @.str15, i64 0, i64 0), i32 %10, i32 %7, i32 %9) #6
  %indvars.iv.next = add i64 %indvars.iv, 1
  %11 = load i32* %size, align 4, !tbaa !3
  %12 = trunc i64 %indvars.iv.next to i32
  %cmp8 = icmp slt i32 %12, %11
  br i1 %cmp8, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %if.then5
  %13 = call i64 @fwrite(i8* getelementptr inbounds ([19 x i8]* @.str16, i64 0, i64 0), i64 18, i64 1, %struct._IO_FILE* %fp)
  %14 = load i32* %maxsize, align 4, !tbaa !3
  %heapLoc = getelementptr inbounds %struct._IIheap* %heap, i64 0, i32 2
  %15 = load i32** %heapLoc, align 8, !tbaa !0
  %call14 = call i32 @IVfp80(%struct._IO_FILE* %fp, i32 %14, i32* %15, i32 80, i32* %ierr) #6
  br label %if.end15

if.end15:                                         ; preds = %for.end, %if.end
  ret void
}
