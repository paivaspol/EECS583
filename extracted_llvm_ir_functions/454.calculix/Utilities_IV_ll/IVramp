define void @IVramp(i32 %size, i32* %y, i32 %start, i32 %inc) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %size}, i64 0, metadata !242), !dbg !662
  tail call void @llvm.dbg.value(metadata !{i32* %y}, i64 0, metadata !243), !dbg !663
  tail call void @llvm.dbg.value(metadata !{i32 %start}, i64 0, metadata !244), !dbg !664
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !245), !dbg !665
  %cmp = icmp sgt i32 %size, 0, !dbg !666
  br i1 %cmp, label %if.then, label %if.end5, !dbg !666

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq i32* %y, null, !dbg !667
  br i1 %cmp1, label %if.then2, label %for.body, !dbg !667

if.then2:                                         ; preds = %if.then
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !668, !tbaa !341
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([80 x i8]* @.str21, i64 0, i64 0), i32 %size, i32* null, i32 %start, i32 %inc) #7, !dbg !668
  tail call void @exit(i32 -1) #8, !dbg !670
  unreachable, !dbg !670

for.body:                                         ; preds = %if.then, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.then ]
  %j.017 = phi i32 [ %add, %for.body ], [ %start, %if.then ]
  %arrayidx = getelementptr inbounds i32* %y, i64 %indvars.iv, !dbg !671
  store i32 %j.017, i32* %arrayidx, align 4, !dbg !671, !tbaa !351
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !674
  %add = add nsw i32 %j.017, %inc, !dbg !674
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !249), !dbg !674
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !674
  %exitcond = icmp eq i32 %lftr.wideiv, %size, !dbg !674
  br i1 %exitcond, label %if.end5, label %for.body, !dbg !674

if.end5:                                          ; preds = %for.body, %entry
  ret void, !dbg !675
}
