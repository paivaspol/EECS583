define void @IVramp(i32 %size, i32* %y, i32 %start, i32 %inc) #0 {
entry:
  %cmp = icmp sgt i32 %size, 0
  br i1 %cmp, label %if.then, label %if.end5

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq i32* %y, null
  br i1 %cmp1, label %if.then2, label %for.body

if.then2:                                         ; preds = %if.then
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([80 x i8]* @.str21, i64 0, i64 0), i32 %size, i32* null, i32 %start, i32 %inc) #6
  tail call void @exit(i32 -1) #7
  unreachable

for.body:                                         ; preds = %if.then, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.then ]
  %j.017 = phi i32 [ %add, %for.body ], [ %start, %if.then ]
  %arrayidx = getelementptr inbounds i32* %y, i64 %indvars.iv
  store i32 %j.017, i32* %arrayidx, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %add = add nsw i32 %j.017, %inc
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %size
  br i1 %exitcond, label %if.end5, label %for.body

if.end5:                                          ; preds = %for.body, %entry
  ret void
}
