define i32* @IVinverse(i32 %size, i32* %y) #0 {
entry:
  %cmp = icmp sgt i32 %size, 0
  br i1 %cmp, label %if.then, label %if.end16

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq i32* %y, null
  br i1 %cmp1, label %if.then2, label %for.body.lr.ph

if.then2:                                         ; preds = %if.then
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([61 x i8]* @.str13, i64 0, i64 0), i32 %size, i32* null) #6
  tail call void @exit(i32 -1) #7
  unreachable

for.body.lr.ph:                                   ; preds = %if.then
  %call3 = tail call i32* @IVinit(i32 %size, i32 -1) #8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end ]
  %i.035 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end ]
  %arrayidx = getelementptr inbounds i32* %y, i64 %indvars.iv
  %1 = load i32* %arrayidx, align 4, !tbaa !3
  %cmp5 = icmp sgt i32 %1, -1
  %cmp6 = icmp slt i32 %1, %size
  %or.cond = and i1 %cmp5, %cmp6
  br i1 %or.cond, label %lor.lhs.false7, label %if.then11

lor.lhs.false7:                                   ; preds = %for.body
  %idxprom8 = sext i32 %1 to i64
  %arrayidx9 = getelementptr inbounds i32* %call3, i64 %idxprom8
  %2 = load i32* %arrayidx9, align 4, !tbaa !3
  %cmp10 = icmp eq i32 %2, -1
  br i1 %cmp10, label %if.end, label %if.then11

if.then11:                                        ; preds = %for.body, %lor.lhs.false7
  %3 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([71 x i8]* @.str14, i64 0, i64 0), i32 %i.035, i32 %1) #6
  tail call void @exit(i32 -1) #7
  unreachable

if.end:                                           ; preds = %lor.lhs.false7
  %4 = trunc i64 %indvars.iv to i32
  store i32 %4, i32* %arrayidx9, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %inc = add nsw i32 %i.035, 1
  %5 = trunc i64 %indvars.iv.next to i32
  %cmp4 = icmp slt i32 %5, %size
  br i1 %cmp4, label %for.body, label %if.end16

if.end16:                                         ; preds = %if.end, %entry
  %x.0 = phi i32* [ null, %entry ], [ %call3, %if.end ]
  ret i32* %x.0
}
