define void @IVgather(i32 %size, i32* %y, i32* %x, i32* %index) #0 {
  tail call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !160, metadata !380), !dbg !624
  tail call void @llvm.dbg.value(metadata i32* %y, i64 0, metadata !161, metadata !380), !dbg !625
  tail call void @llvm.dbg.value(metadata i32* %x, i64 0, metadata !162, metadata !380), !dbg !626
  tail call void @llvm.dbg.value(metadata i32* %index, i64 0, metadata !163, metadata !380), !dbg !627
  %1 = icmp sgt i32 %size, 0, !dbg !628
  br i1 %1, label %2, label %.loopexit, !dbg !629

; <label>:2                                       ; preds = %0
  %3 = icmp eq i32* %y, null, !dbg !630
  %4 = icmp eq i32* %x, null, !dbg !631
  %or.cond = or i1 %3, %4, !dbg !632
  %5 = icmp eq i32* %index, null, !dbg !633
  %or.cond3 = or i1 %or.cond, %5, !dbg !632
  br i1 %or.cond3, label %7, label %.lr.ph, !dbg !632

.lr.ph:                                           ; preds = %2
  %6 = add i32 %size, -1, !dbg !634
  br label %10, !dbg !634

; <label>:7                                       ; preds = %2
  %8 = load %struct.__sFILE** @__stderrp, align 8, !dbg !636, !tbaa !399
  %9 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %8, i8* getelementptr inbounds ([80 x i8]* @.str9, i64 0, i64 0), i32 %size, i32* %y, i32* %x, i32* %index) #8, !dbg !638
  tail call void @exit(i32 -1) #9, !dbg !639
  unreachable, !dbg !639

; <label>:10                                      ; preds = %10, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %10 ]
  %11 = getelementptr inbounds i32* %index, i64 %indvars.iv, !dbg !640
  %12 = load i32* %11, align 4, !dbg !640, !tbaa !414
  %13 = sext i32 %12 to i64, !dbg !643
  %14 = getelementptr inbounds i32* %x, i64 %13, !dbg !643
  %15 = load i32* %14, align 4, !dbg !643, !tbaa !414
  %16 = getelementptr inbounds i32* %y, i64 %indvars.iv, !dbg !644
  store i32 %15, i32* %16, align 4, !dbg !645, !tbaa !414
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !634
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !634
  %exitcond = icmp eq i32 %lftr.wideiv, %6, !dbg !634
  br i1 %exitcond, label %.loopexit, label %10, !dbg !634

.loopexit:                                        ; preds = %10, %0
  ret void, !dbg !646
}
