define void @IVfill(i32 %size, i32* %y, i32 %ival) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %size}, i64 0, metadata !41), !dbg !392
  tail call void @llvm.dbg.value(metadata !{i32* %y}, i64 0, metadata !42), !dbg !393
  tail call void @llvm.dbg.value(metadata !{i32 %ival}, i64 0, metadata !43), !dbg !394
  %cmp = icmp sgt i32 %size, 0, !dbg !395
  br i1 %cmp, label %if.then, label %if.end4, !dbg !395

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq i32* %y, null, !dbg !396
  br i1 %cmp1, label %if.then2, label %for.body, !dbg !396

if.then2:                                         ; preds = %if.then
  %0 = load %struct._IO_FILE** @stderr, align 8, !dbg !397, !tbaa !341
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([69 x i8]* @.str2, i64 0, i64 0), i32 %size, i32* null, i32 %ival) #7, !dbg !397
  tail call void @exit(i32 -1) #8, !dbg !399
  unreachable, !dbg !399

for.body:                                         ; preds = %if.then, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.then ]
  %arrayidx = getelementptr inbounds i32* %y, i64 %indvars.iv, !dbg !400
  store i32 %ival, i32* %arrayidx, align 4, !dbg !400, !tbaa !351
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !403
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !403
  %exitcond = icmp eq i32 %lftr.wideiv, %size, !dbg !403
  br i1 %exitcond, label %if.end4, label %for.body, !dbg !403

if.end4:                                          ; preds = %for.body, %entry
  ret void, !dbg !404
}
