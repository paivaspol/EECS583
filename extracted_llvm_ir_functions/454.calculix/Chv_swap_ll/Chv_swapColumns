define void @Chv_swapColumns(%struct._Chv* %chv, i32 %icol, i32 %jcol) #0 {
  %ncol = alloca i32, align 4
  %nD = alloca i32, align 4
  %nL = alloca i32, align 4
  %nU = alloca i32, align 4
  %colind = alloca i32*, align 8
  tail call void @llvm.dbg.value(metadata %struct._Chv* %chv, i64 0, metadata !55, metadata !112), !dbg !509
  tail call void @llvm.dbg.value(metadata i32 %icol, i64 0, metadata !56, metadata !112), !dbg !510
  tail call void @llvm.dbg.value(metadata i32 %jcol, i64 0, metadata !57, metadata !112), !dbg !511
  %1 = icmp eq %struct._Chv* %chv, null, !dbg !512
  %2 = or i32 %jcol, %icol, !dbg !514
  %3 = icmp slt i32 %2, 0, !dbg !514
  %4 = or i1 %1, %3, !dbg !514
  br i1 %4, label %5, label %8, !dbg !514

; <label>:5                                       ; preds = %0
  %6 = load %struct.__sFILE** @__stderrp, align 8, !dbg !515, !tbaa !121
  %7 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %6, i8* getelementptr inbounds ([55 x i8]* @.str5, i64 0, i64 0), %struct._Chv* %chv, i32 %icol, i32 %jcol) #5, !dbg !517
  tail call void @exit(i32 -1) #6, !dbg !518
  unreachable, !dbg !518

; <label>:8                                       ; preds = %0
  %9 = icmp eq i32 %icol, %jcol, !dbg !519
  br i1 %9, label %.loopexit, label %10, !dbg !521

; <label>:10                                      ; preds = %8
  tail call void @llvm.dbg.value(metadata i32* %nD, i64 0, metadata !65, metadata !112), !dbg !522
  tail call void @llvm.dbg.value(metadata i32* %nL, i64 0, metadata !66, metadata !112), !dbg !523
  tail call void @llvm.dbg.value(metadata i32* %nU, i64 0, metadata !67, metadata !112), !dbg !524
  call void @Chv_dimensions(%struct._Chv* %chv, i32* %nD, i32* %nL, i32* %nU) #5, !dbg !525
  %11 = call double* @Chv_entries(%struct._Chv* %chv) #5, !dbg !526
  call void @llvm.dbg.value(metadata double* %11, i64 0, metadata !59, metadata !112), !dbg !527
  %12 = icmp eq double* %11, null, !dbg !528
  %.pre = load i32* %nD, align 4, !dbg !530, !tbaa !136
  br i1 %12, label %._crit_edge, label %13, !dbg !532

; <label>:13                                      ; preds = %10
  call void @llvm.dbg.value(metadata i32* %nD, i64 0, metadata !65, metadata !112), !dbg !522
  %14 = icmp sgt i32 %.pre, %icol, !dbg !533
  %15 = icmp sgt i32 %.pre, %jcol, !dbg !534
  %or.cond = and i1 %14, %15, !dbg !535
  br i1 %or.cond, label %18, label %._crit_edge, !dbg !535

._crit_edge:                                      ; preds = %10, %13
  %16 = load %struct.__sFILE** @__stderrp, align 8, !dbg !536, !tbaa !121
  call void @llvm.dbg.value(metadata i32* %nD, i64 0, metadata !65, metadata !112), !dbg !522
  %17 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %16, i8* getelementptr inbounds ([78 x i8]* @.str6, i64 0, i64 0), %struct._Chv* %chv, i32 %icol, i32 %jcol, double* %11, i32 %.pre) #5, !dbg !537
  call void @exit(i32 -1) #6, !dbg !538
  unreachable, !dbg !538

; <label>:18                                      ; preds = %13
  %19 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 4, !dbg !539
  %20 = load i32* %19, align 4, !dbg !539, !tbaa !157
  %.off = add i32 %20, -1, !dbg !541
  %switch = icmp ult i32 %.off, 2, !dbg !541
  br i1 %switch, label %24, label %21, !dbg !541

; <label>:21                                      ; preds = %18
  %22 = load %struct.__sFILE** @__stderrp, align 8, !dbg !542, !tbaa !121
  %23 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %22, i8* getelementptr inbounds ([96 x i8]* @.str7, i64 0, i64 0), %struct._Chv* %chv, i32 %icol, i32 %jcol, i32 %20) #5, !dbg !544
  call void @exit(i32 -1) #6, !dbg !545
  unreachable, !dbg !545

; <label>:24                                      ; preds = %18
  %25 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 5, !dbg !546
  %26 = load i32* %25, align 4, !dbg !546, !tbaa !167
  switch i32 %26, label %269 [
    i32 0, label %27
    i32 1, label %27
    i32 2, label %28
  ], !dbg !548

; <label>:27                                      ; preds = %24, %24
  call void @Chv_swapRowsAndColumns(%struct._Chv* %chv, i32 %icol, i32 %jcol) #7, !dbg !549
  br label %.loopexit, !dbg !551

; <label>:28                                      ; preds = %24
  call void @llvm.dbg.value(metadata i32* %ncol, i64 0, metadata !64, metadata !112), !dbg !552
  call void @llvm.dbg.value(metadata i32** %colind, i64 0, metadata !69, metadata !112), !dbg !553
  call void @Chv_columnIndices(%struct._Chv* %chv, i32* %ncol, i32** %colind) #5, !dbg !554
  %29 = sext i32 %icol to i64, !dbg !557
  call void @llvm.dbg.value(metadata i32** %colind, i64 0, metadata !69, metadata !112), !dbg !553
  %30 = load i32** %colind, align 8, !dbg !557, !tbaa !121
  %31 = getelementptr inbounds i32* %30, i64 %29, !dbg !557
  %32 = load i32* %31, align 4, !dbg !557, !tbaa !136
  call void @llvm.dbg.value(metadata i32 %32, i64 0, metadata !62, metadata !112), !dbg !558
  %33 = sext i32 %jcol to i64, !dbg !559
  %34 = getelementptr inbounds i32* %30, i64 %33, !dbg !559
  %35 = load i32* %34, align 4, !dbg !559, !tbaa !136
  store i32 %35, i32* %31, align 4, !dbg !560, !tbaa !136
  call void @llvm.dbg.value(metadata i32** %colind, i64 0, metadata !69, metadata !112), !dbg !553
  store i32 %32, i32* %34, align 4, !dbg !561, !tbaa !136
  %36 = icmp sgt i32 %icol, %jcol, !dbg !562
  call void @llvm.dbg.value(metadata i32 %icol, i64 0, metadata !62, metadata !112), !dbg !558
  call void @llvm.dbg.value(metadata i32 %jcol, i64 0, metadata !56, metadata !112), !dbg !510
  call void @llvm.dbg.value(metadata i32 %icol, i64 0, metadata !57, metadata !112), !dbg !511
  %icol.jcol = select i1 %36, i32 %icol, i32 %jcol, !dbg !564
  %jcol.icol = select i1 %36, i32 %jcol, i32 %icol, !dbg !564
  call void @llvm.dbg.value(metadata i32* %nD, i64 0, metadata !65, metadata !112), !dbg !522
  %37 = load i32* %nD, align 4, !dbg !565, !tbaa !136
  call void @llvm.dbg.value(metadata i32* %nL, i64 0, metadata !66, metadata !112), !dbg !523
  %38 = load i32* %nL, align 4, !dbg !566, !tbaa !136
  %39 = add i32 %37, -1, !dbg !567
  %40 = add i32 %39, %38, !dbg !568
  %41 = add nsw i32 %40, %jcol.icol, !dbg !569
  call void @llvm.dbg.value(metadata i32 %41, i64 0, metadata !61, metadata !112), !dbg !570
  %42 = add nsw i32 %40, %icol.jcol, !dbg !571
  call void @llvm.dbg.value(metadata i32 %42, i64 0, metadata !63, metadata !112), !dbg !572
  %43 = shl i32 %37, 1, !dbg !573
  call void @llvm.dbg.value(metadata i32* %nU, i64 0, metadata !67, metadata !112), !dbg !524
  %44 = load i32* %nU, align 4, !dbg !574, !tbaa !136
  %45 = add i32 %38, -3, !dbg !575
  %46 = add i32 %45, %43, !dbg !576
  %47 = add i32 %46, %44, !dbg !577
  call void @llvm.dbg.value(metadata i32 %47, i64 0, metadata !68, metadata !112), !dbg !578
  %48 = load i32* %19, align 4, !dbg !579, !tbaa !157
  switch i32 %48, label %.loopexit [
    i32 1, label %.preheader6
    i32 2, label %.preheader10
  ], !dbg !581

.preheader10:                                     ; preds = %28
  %49 = icmp sgt i32 %jcol.icol, 0, !dbg !582
  br i1 %49, label %.lr.ph43, label %.preheader9, !dbg !587

.lr.ph43:                                         ; preds = %.preheader10
  %50 = add i32 %38, %44, !dbg !587
  %51 = shl i32 %37, 1, !dbg !587
  %52 = add i32 %50, %51, !dbg !587
  %53 = add i32 %52, -3, !dbg !587
  %54 = sext i32 %53 to i64
  %55 = xor i32 %jcol, -1, !dbg !587
  %56 = xor i32 %icol, -1, !dbg !587
  %57 = icmp sgt i32 %55, %56
  %smax79 = select i1 %57, i32 %55, i32 %56
  %58 = shl i32 %smax79, 1, !dbg !587
  %59 = add i32 %52, %58, !dbg !587
  %60 = icmp sgt i32 %jcol, %icol
  %smax80 = select i1 %60, i32 %jcol, i32 %icol
  %61 = add i32 %44, %smax80, !dbg !587
  %62 = add i32 %52, -5, !dbg !587
  %63 = sub i32 -2, %smax79, !dbg !587
  %64 = mul i32 %62, %63, !dbg !587
  %65 = add i32 %61, %64, !dbg !587
  %66 = mul i32 %37, 3, !dbg !587
  %67 = add i32 %65, %66, !dbg !587
  %68 = shl i32 %38, 1, !dbg !587
  %69 = add i32 %67, %68, !dbg !587
  %70 = sub i32 -3, %smax79, !dbg !587
  %71 = mul i32 %63, %70, !dbg !587
  %72 = and i32 %71, -2, !dbg !587
  %73 = add i32 %44, %64, !dbg !587
  %74 = add i32 %73, %66, !dbg !587
  %75 = add i32 %74, %68, !dbg !587
  %76 = add i32 %75, -5, !dbg !587
  %77 = sub i32 %76, %smax79, !dbg !587
  br label %187, !dbg !587

.preheader6:                                      ; preds = %28
  %78 = icmp sgt i32 %jcol.icol, 0, !dbg !588
  br i1 %78, label %.lr.ph24, label %.preheader5, !dbg !592

.lr.ph24:                                         ; preds = %.preheader6
  %79 = add i32 %38, %44, !dbg !592
  %80 = shl i32 %37, 1, !dbg !592
  %81 = add i32 %79, %80, !dbg !592
  %82 = add i32 %81, -3, !dbg !592
  %83 = sext i32 %82 to i64
  %84 = xor i32 %jcol, -1, !dbg !592
  %85 = xor i32 %icol, -1, !dbg !592
  %86 = icmp sgt i32 %84, %85
  %smax65 = select i1 %86, i32 %84, i32 %85
  %87 = shl i32 %smax65, 1, !dbg !592
  %88 = add i32 %81, %87, !dbg !592
  %89 = icmp sgt i32 %jcol, %icol
  %smax66 = select i1 %89, i32 %jcol, i32 %icol
  %90 = add i32 %44, %smax66, !dbg !592
  %91 = add i32 %81, -5, !dbg !592
  %92 = sub i32 -2, %smax65, !dbg !592
  %93 = mul i32 %91, %92, !dbg !592
  %94 = add i32 %90, %93, !dbg !592
  %95 = mul i32 %37, 3, !dbg !592
  %96 = add i32 %94, %95, !dbg !592
  %97 = shl i32 %38, 1, !dbg !592
  %98 = add i32 %96, %97, !dbg !592
  %99 = sub i32 -3, %smax65, !dbg !592
  %100 = mul i32 %92, %99, !dbg !592
  %101 = and i32 %100, -2, !dbg !592
  %102 = add i32 %44, %93, !dbg !592
  %103 = add i32 %102, %95, !dbg !592
  %104 = add i32 %103, %97, !dbg !592
  %105 = add i32 %104, -5, !dbg !592
  %106 = sub i32 %105, %smax65, !dbg !592
  br label %127, !dbg !592

..preheader5_crit_edge:                           ; preds = %127
  %107 = add i32 %88, -1, !dbg !592
  %108 = add i32 %98, -4, !dbg !592
  %109 = sub i32 %108, %101, !dbg !592
  %110 = sub i32 %106, %101, !dbg !592
  br label %.preheader5, !dbg !592

.preheader5:                                      ; preds = %..preheader5_crit_edge, %.preheader6
  %stride.0.lcssa = phi i32 [ %107, %..preheader5_crit_edge ], [ %47, %.preheader6 ]
  %joff.0.lcssa = phi i32 [ %109, %..preheader5_crit_edge ], [ %42, %.preheader6 ]
  %ioff.0.lcssa = phi i32 [ %110, %..preheader5_crit_edge ], [ %41, %.preheader6 ]
  %111 = icmp slt i32 %jcol.icol, %icol.jcol, !dbg !593
  br i1 %111, label %.lr.ph18, label %.preheader, !dbg !596

.lr.ph18:                                         ; preds = %.preheader5
  %112 = sext i32 %stride.0.lcssa to i64
  %113 = sext i32 %ioff.0.lcssa to i64
  %114 = add i32 %joff.0.lcssa, %stride.0.lcssa, !dbg !596
  %115 = icmp sgt i32 %jcol, %icol
  %smax = select i1 %115, i32 %jcol, i32 %icol
  %116 = xor i32 %jcol, -1, !dbg !596
  %117 = xor i32 %icol, -1, !dbg !596
  %118 = icmp sgt i32 %116, %117
  %smax62 = select i1 %118, i32 %116, i32 %117
  %119 = add i32 %smax, %smax62, !dbg !596
  %120 = add i32 %stride.0.lcssa, -2, !dbg !596
  %121 = mul i32 %119, %120, !dbg !596
  %122 = add i32 %114, %121, !dbg !596
  %123 = add i32 %119, -1, !dbg !596
  %124 = mul i32 %123, %119, !dbg !596
  %125 = and i32 %124, -2, !dbg !596
  %126 = sub i32 %122, %125, !dbg !596
  br label %146, !dbg !596

; <label>:127                                     ; preds = %127, %.lr.ph24
  %indvars.iv63 = phi i64 [ %83, %.lr.ph24 ], [ %indvars.iv.next64, %127 ]
  %joff.022 = phi i32 [ %42, %.lr.ph24 ], [ %138, %127 ]
  %ioff.021 = phi i32 [ %41, %.lr.ph24 ], [ %137, %127 ]
  %ii.020 = phi i32 [ 0, %.lr.ph24 ], [ %139, %127 ]
  %128 = sext i32 %ioff.021 to i64, !dbg !597
  %129 = getelementptr inbounds double* %11, i64 %128, !dbg !597
  %130 = bitcast double* %129 to i64*, !dbg !597
  %131 = load i64* %130, align 8, !dbg !597, !tbaa !219
  %132 = sext i32 %joff.022 to i64, !dbg !599
  %133 = getelementptr inbounds double* %11, i64 %132, !dbg !599
  %134 = bitcast double* %133 to i64*, !dbg !599
  %135 = load i64* %134, align 8, !dbg !599, !tbaa !219
  store i64 %135, i64* %130, align 8, !dbg !600, !tbaa !219
  store i64 %131, i64* %134, align 8, !dbg !601, !tbaa !219
  %136 = trunc i64 %indvars.iv63 to i32, !dbg !602
  %137 = add nsw i32 %136, %ioff.021, !dbg !602
  call void @llvm.dbg.value(metadata i32 %137, i64 0, metadata !61, metadata !112), !dbg !570
  %138 = add nsw i32 %136, %joff.022, !dbg !603
  call void @llvm.dbg.value(metadata i32 %138, i64 0, metadata !63, metadata !112), !dbg !572
  %139 = add nuw nsw i32 %ii.020, 1, !dbg !604
  call void @llvm.dbg.value(metadata i32 %139, i64 0, metadata !60, metadata !112), !dbg !605
  %indvars.iv.next64 = add nsw i64 %indvars.iv63, -2, !dbg !592
  %exitcond = icmp eq i32 %ii.020, %92, !dbg !592
  br i1 %exitcond, label %..preheader5_crit_edge, label %127, !dbg !592

..preheader_crit_edge:                            ; preds = %146
  %140 = add i32 %ioff.0.lcssa, -1, !dbg !596
  %141 = sub i32 %140, %119, !dbg !596
  br label %.preheader, !dbg !596

.preheader:                                       ; preds = %..preheader_crit_edge, %.preheader5
  %joff.1.lcssa = phi i32 [ %126, %..preheader_crit_edge ], [ %joff.0.lcssa, %.preheader5 ]
  %ioff.1.lcssa = phi i32 [ %141, %..preheader_crit_edge ], [ %ioff.0.lcssa, %.preheader5 ]
  call void @llvm.dbg.value(metadata i32* %nD, i64 0, metadata !65, metadata !112), !dbg !522
  call void @llvm.dbg.value(metadata i32* %nL, i64 0, metadata !66, metadata !112), !dbg !523
  %142 = add nsw i32 %38, %37, !dbg !606
  %143 = icmp slt i32 %icol.jcol, %142, !dbg !609
  br i1 %143, label %.lr.ph, label %.loopexit, !dbg !610

.lr.ph:                                           ; preds = %.preheader
  %144 = sext i32 %joff.1.lcssa to i64
  %145 = sext i32 %ioff.1.lcssa to i64
  br label %158, !dbg !610

; <label>:146                                     ; preds = %.lr.ph18, %146
  %indvars.iv60 = phi i64 [ %113, %.lr.ph18 ], [ %indvars.iv.next61, %146 ]
  %indvars.iv58 = phi i64 [ %112, %.lr.ph18 ], [ %indvars.iv.next59, %146 ]
  %joff.116 = phi i32 [ %joff.0.lcssa, %.lr.ph18 ], [ %155, %146 ]
  %ii.114 = phi i32 [ %jcol.icol, %.lr.ph18 ], [ %156, %146 ]
  %147 = getelementptr inbounds double* %11, i64 %indvars.iv60, !dbg !611
  %148 = bitcast double* %147 to i64*, !dbg !611
  %149 = load i64* %148, align 8, !dbg !611, !tbaa !219
  %150 = sext i32 %joff.116 to i64, !dbg !613
  %151 = getelementptr inbounds double* %11, i64 %150, !dbg !613
  %152 = bitcast double* %151 to i64*, !dbg !613
  %153 = load i64* %152, align 8, !dbg !613, !tbaa !219
  store i64 %153, i64* %148, align 8, !dbg !614, !tbaa !219
  store i64 %149, i64* %152, align 8, !dbg !615, !tbaa !219
  %indvars.iv.next61 = add nsw i64 %indvars.iv60, -1, !dbg !596
  %154 = trunc i64 %indvars.iv58 to i32, !dbg !616
  %155 = add nsw i32 %154, %joff.116, !dbg !616
  call void @llvm.dbg.value(metadata i32 %155, i64 0, metadata !63, metadata !112), !dbg !572
  %indvars.iv.next59 = add nsw i64 %indvars.iv58, -2, !dbg !596
  %156 = add nsw i32 %ii.114, 1, !dbg !617
  call void @llvm.dbg.value(metadata i32 %156, i64 0, metadata !60, metadata !112), !dbg !605
  %157 = icmp slt i32 %156, %icol.jcol, !dbg !593
  br i1 %157, label %146, label %..preheader_crit_edge, !dbg !596

; <label>:158                                     ; preds = %.lr.ph, %158
  %indvars.iv56 = phi i64 [ %145, %.lr.ph ], [ %indvars.iv.next57, %158 ]
  %indvars.iv = phi i64 [ %144, %.lr.ph ], [ %indvars.iv.next, %158 ]
  %ii.211 = phi i32 [ %icol.jcol, %.lr.ph ], [ %165, %158 ]
  %159 = getelementptr inbounds double* %11, i64 %indvars.iv56, !dbg !618
  %160 = bitcast double* %159 to i64*, !dbg !618
  %161 = load i64* %160, align 8, !dbg !618, !tbaa !219
  %162 = getelementptr inbounds double* %11, i64 %indvars.iv, !dbg !620
  %163 = bitcast double* %162 to i64*, !dbg !620
  %164 = load i64* %163, align 8, !dbg !620, !tbaa !219
  store i64 %164, i64* %160, align 8, !dbg !621, !tbaa !219
  store i64 %161, i64* %163, align 8, !dbg !622, !tbaa !219
  %indvars.iv.next57 = add nsw i64 %indvars.iv56, -1, !dbg !610
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !610
  %165 = add nsw i32 %ii.211, 1, !dbg !623
  call void @llvm.dbg.value(metadata i32 %165, i64 0, metadata !60, metadata !112), !dbg !605
  call void @llvm.dbg.value(metadata i32* %nD, i64 0, metadata !65, metadata !112), !dbg !522
  call void @llvm.dbg.value(metadata i32* %nL, i64 0, metadata !66, metadata !112), !dbg !523
  %166 = icmp slt i32 %165, %142, !dbg !609
  br i1 %166, label %158, label %.loopexit, !dbg !610

..preheader9_crit_edge:                           ; preds = %187
  %167 = add i32 %59, -1, !dbg !587
  %168 = add i32 %69, -4, !dbg !587
  %169 = sub i32 %168, %72, !dbg !587
  %170 = sub i32 %77, %72, !dbg !587
  br label %.preheader9, !dbg !587

.preheader9:                                      ; preds = %..preheader9_crit_edge, %.preheader10
  %stride.2.lcssa = phi i32 [ %167, %..preheader9_crit_edge ], [ %47, %.preheader10 ]
  %joff.3.lcssa = phi i32 [ %169, %..preheader9_crit_edge ], [ %42, %.preheader10 ]
  %ioff.3.lcssa = phi i32 [ %170, %..preheader9_crit_edge ], [ %41, %.preheader10 ]
  %171 = icmp slt i32 %jcol.icol, %icol.jcol, !dbg !624
  br i1 %171, label %.lr.ph36, label %.preheader7, !dbg !627

.lr.ph36:                                         ; preds = %.preheader9
  %172 = sext i32 %stride.2.lcssa to i64
  %173 = sext i32 %ioff.3.lcssa to i64
  %174 = add i32 %joff.3.lcssa, %stride.2.lcssa, !dbg !627
  %175 = icmp sgt i32 %jcol, %icol
  %smax75 = select i1 %175, i32 %jcol, i32 %icol
  %176 = xor i32 %jcol, -1, !dbg !627
  %177 = xor i32 %icol, -1, !dbg !627
  %178 = icmp sgt i32 %176, %177
  %smax76 = select i1 %178, i32 %176, i32 %177
  %179 = add i32 %smax75, %smax76, !dbg !627
  %180 = add i32 %stride.2.lcssa, -2, !dbg !627
  %181 = mul i32 %179, %180, !dbg !627
  %182 = add i32 %174, %181, !dbg !627
  %183 = add i32 %179, -1, !dbg !627
  %184 = mul i32 %183, %179, !dbg !627
  %185 = and i32 %184, -2, !dbg !627
  %186 = sub i32 %182, %185, !dbg !627
  br label %218, !dbg !627

; <label>:187                                     ; preds = %187, %.lr.ph43
  %indvars.iv77 = phi i64 [ %54, %.lr.ph43 ], [ %indvars.iv.next78, %187 ]
  %joff.341 = phi i32 [ %42, %.lr.ph43 ], [ %210, %187 ]
  %ioff.340 = phi i32 [ %41, %.lr.ph43 ], [ %209, %187 ]
  %ii.339 = phi i32 [ 0, %.lr.ph43 ], [ %211, %187 ]
  %188 = shl nsw i32 %ioff.340, 1, !dbg !628
  %189 = sext i32 %188 to i64, !dbg !630
  %190 = getelementptr inbounds double* %11, i64 %189, !dbg !630
  %191 = bitcast double* %190 to i64*, !dbg !630
  %192 = load i64* %191, align 8, !dbg !630, !tbaa !219
  %193 = shl nsw i32 %joff.341, 1, !dbg !631
  %194 = sext i32 %193 to i64, !dbg !632
  %195 = getelementptr inbounds double* %11, i64 %194, !dbg !632
  %196 = bitcast double* %195 to i64*, !dbg !632
  %197 = load i64* %196, align 8, !dbg !632, !tbaa !219
  store i64 %197, i64* %191, align 8, !dbg !633, !tbaa !219
  store i64 %192, i64* %196, align 8, !dbg !634, !tbaa !219
  %198 = or i32 %188, 1, !dbg !635
  %199 = sext i32 %198 to i64, !dbg !636
  %200 = getelementptr inbounds double* %11, i64 %199, !dbg !636
  %201 = bitcast double* %200 to i64*, !dbg !636
  %202 = load i64* %201, align 8, !dbg !636, !tbaa !219
  %203 = or i32 %193, 1, !dbg !637
  %204 = sext i32 %203 to i64, !dbg !638
  %205 = getelementptr inbounds double* %11, i64 %204, !dbg !638
  %206 = bitcast double* %205 to i64*, !dbg !638
  %207 = load i64* %206, align 8, !dbg !638, !tbaa !219
  store i64 %207, i64* %201, align 8, !dbg !639, !tbaa !219
  store i64 %202, i64* %206, align 8, !dbg !640, !tbaa !219
  %208 = trunc i64 %indvars.iv77 to i32, !dbg !641
  %209 = add nsw i32 %208, %ioff.340, !dbg !641
  call void @llvm.dbg.value(metadata i32 %209, i64 0, metadata !61, metadata !112), !dbg !570
  %210 = add nsw i32 %208, %joff.341, !dbg !642
  call void @llvm.dbg.value(metadata i32 %210, i64 0, metadata !63, metadata !112), !dbg !572
  %211 = add nuw nsw i32 %ii.339, 1, !dbg !643
  call void @llvm.dbg.value(metadata i32 %211, i64 0, metadata !60, metadata !112), !dbg !605
  %indvars.iv.next78 = add nsw i64 %indvars.iv77, -2, !dbg !587
  %exitcond81 = icmp eq i32 %ii.339, %63, !dbg !587
  br i1 %exitcond81, label %..preheader9_crit_edge, label %187, !dbg !587

..preheader7_crit_edge:                           ; preds = %218
  %212 = add i32 %ioff.3.lcssa, -1, !dbg !627
  %213 = sub i32 %212, %179, !dbg !627
  br label %.preheader7, !dbg !627

.preheader7:                                      ; preds = %..preheader7_crit_edge, %.preheader9
  %joff.4.lcssa = phi i32 [ %186, %..preheader7_crit_edge ], [ %joff.3.lcssa, %.preheader9 ]
  %ioff.4.lcssa = phi i32 [ %213, %..preheader7_crit_edge ], [ %ioff.3.lcssa, %.preheader9 ]
  call void @llvm.dbg.value(metadata i32* %nD, i64 0, metadata !65, metadata !112), !dbg !522
  call void @llvm.dbg.value(metadata i32* %nL, i64 0, metadata !66, metadata !112), !dbg !523
  %214 = add nsw i32 %38, %37, !dbg !644
  %215 = icmp slt i32 %icol.jcol, %214, !dbg !647
  br i1 %215, label %.lr.ph31, label %.loopexit, !dbg !648

.lr.ph31:                                         ; preds = %.preheader7
  %216 = sext i32 %joff.4.lcssa to i64
  %217 = sext i32 %ioff.4.lcssa to i64
  br label %244, !dbg !648

; <label>:218                                     ; preds = %.lr.ph36, %218
  %indvars.iv73 = phi i64 [ %173, %.lr.ph36 ], [ %indvars.iv.next74, %218 ]
  %indvars.iv71 = phi i64 [ %172, %.lr.ph36 ], [ %indvars.iv.next72, %218 ]
  %joff.434 = phi i32 [ %joff.3.lcssa, %.lr.ph36 ], [ %241, %218 ]
  %ii.432 = phi i32 [ %jcol.icol, %.lr.ph36 ], [ %242, %218 ]
  %219 = trunc i64 %indvars.iv73 to i32, !dbg !649
  %220 = shl nsw i32 %219, 1, !dbg !649
  %221 = sext i32 %220 to i64, !dbg !651
  %222 = getelementptr inbounds double* %11, i64 %221, !dbg !651
  %223 = bitcast double* %222 to i64*, !dbg !651
  %224 = load i64* %223, align 8, !dbg !651, !tbaa !219
  %225 = shl nsw i32 %joff.434, 1, !dbg !652
  %226 = sext i32 %225 to i64, !dbg !653
  %227 = getelementptr inbounds double* %11, i64 %226, !dbg !653
  %228 = bitcast double* %227 to i64*, !dbg !653
  %229 = load i64* %228, align 8, !dbg !653, !tbaa !219
  store i64 %229, i64* %223, align 8, !dbg !654, !tbaa !219
  store i64 %224, i64* %228, align 8, !dbg !655, !tbaa !219
  %230 = or i32 %220, 1, !dbg !656
  %231 = sext i32 %230 to i64, !dbg !657
  %232 = getelementptr inbounds double* %11, i64 %231, !dbg !657
  %233 = bitcast double* %232 to i64*, !dbg !657
  %234 = load i64* %233, align 8, !dbg !657, !tbaa !219
  %235 = or i32 %225, 1, !dbg !658
  %236 = sext i32 %235 to i64, !dbg !659
  %237 = getelementptr inbounds double* %11, i64 %236, !dbg !659
  %238 = bitcast double* %237 to i64*, !dbg !659
  %239 = load i64* %238, align 8, !dbg !659, !tbaa !219
  store i64 %239, i64* %233, align 8, !dbg !660, !tbaa !219
  store i64 %234, i64* %238, align 8, !dbg !661, !tbaa !219
  %indvars.iv.next74 = add nsw i64 %indvars.iv73, -1, !dbg !627
  %240 = trunc i64 %indvars.iv71 to i32, !dbg !662
  %241 = add nsw i32 %240, %joff.434, !dbg !662
  call void @llvm.dbg.value(metadata i32 %241, i64 0, metadata !63, metadata !112), !dbg !572
  %indvars.iv.next72 = add nsw i64 %indvars.iv71, -2, !dbg !627
  %242 = add nsw i32 %ii.432, 1, !dbg !663
  call void @llvm.dbg.value(metadata i32 %242, i64 0, metadata !60, metadata !112), !dbg !605
  %243 = icmp slt i32 %242, %icol.jcol, !dbg !624
  br i1 %243, label %218, label %..preheader7_crit_edge, !dbg !627

; <label>:244                                     ; preds = %.lr.ph31, %244
  %indvars.iv69 = phi i64 [ %217, %.lr.ph31 ], [ %indvars.iv.next70, %244 ]
  %indvars.iv67 = phi i64 [ %216, %.lr.ph31 ], [ %indvars.iv.next68, %244 ]
  %ii.528 = phi i32 [ %icol.jcol, %.lr.ph31 ], [ %267, %244 ]
  %245 = trunc i64 %indvars.iv69 to i32, !dbg !664
  %246 = shl nsw i32 %245, 1, !dbg !664
  %247 = sext i32 %246 to i64, !dbg !666
  %248 = getelementptr inbounds double* %11, i64 %247, !dbg !666
  %249 = bitcast double* %248 to i64*, !dbg !666
  %250 = load i64* %249, align 8, !dbg !666, !tbaa !219
  %251 = trunc i64 %indvars.iv67 to i32, !dbg !667
  %252 = shl nsw i32 %251, 1, !dbg !667
  %253 = sext i32 %252 to i64, !dbg !668
  %254 = getelementptr inbounds double* %11, i64 %253, !dbg !668
  %255 = bitcast double* %254 to i64*, !dbg !668
  %256 = load i64* %255, align 8, !dbg !668, !tbaa !219
  store i64 %256, i64* %249, align 8, !dbg !669, !tbaa !219
  store i64 %250, i64* %255, align 8, !dbg !670, !tbaa !219
  %257 = or i32 %246, 1, !dbg !671
  %258 = sext i32 %257 to i64, !dbg !672
  %259 = getelementptr inbounds double* %11, i64 %258, !dbg !672
  %260 = bitcast double* %259 to i64*, !dbg !672
  %261 = load i64* %260, align 8, !dbg !672, !tbaa !219
  %262 = or i32 %252, 1, !dbg !673
  %263 = sext i32 %262 to i64, !dbg !674
  %264 = getelementptr inbounds double* %11, i64 %263, !dbg !674
  %265 = bitcast double* %264 to i64*, !dbg !674
  %266 = load i64* %265, align 8, !dbg !674, !tbaa !219
  store i64 %266, i64* %260, align 8, !dbg !675, !tbaa !219
  store i64 %261, i64* %265, align 8, !dbg !676, !tbaa !219
  %indvars.iv.next70 = add nsw i64 %indvars.iv69, -1, !dbg !648
  %indvars.iv.next68 = add nsw i64 %indvars.iv67, -1, !dbg !648
  %267 = add nsw i32 %ii.528, 1, !dbg !677
  call void @llvm.dbg.value(metadata i32 %267, i64 0, metadata !60, metadata !112), !dbg !605
  call void @llvm.dbg.value(metadata i32* %nD, i64 0, metadata !65, metadata !112), !dbg !522
  call void @llvm.dbg.value(metadata i32* %nL, i64 0, metadata !66, metadata !112), !dbg !523
  %268 = icmp slt i32 %267, %214, !dbg !647
  br i1 %268, label %244, label %.loopexit, !dbg !648

; <label>:269                                     ; preds = %24
  %270 = load %struct.__sFILE** @__stderrp, align 8, !dbg !678, !tbaa !121
  %271 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %270, i8* getelementptr inbounds ([65 x i8]* @.str8, i64 0, i64 0), %struct._Chv* %chv, i32 %icol, i32 %jcol, i32 %26) #5, !dbg !680
  call void @exit(i32 -1) #6, !dbg !681
  unreachable, !dbg !681

.loopexit:                                        ; preds = %244, %158, %.preheader7, %.preheader, %28, %27, %8
  ret void, !dbg !682
}
