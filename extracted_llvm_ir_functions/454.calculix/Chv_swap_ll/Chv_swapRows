define void @Chv_swapRows(%struct._Chv* %chv, i32 %irow, i32 %jrow) #0 {
entry:
  %nD = alloca i32, align 4
  %nL = alloca i32, align 4
  %nrow = alloca i32, align 4
  %nU = alloca i32, align 4
  %rowind = alloca i32*, align 8
  %cmp = icmp eq %struct._Chv* %chv, null
  %cmp1 = icmp slt i32 %irow, 0
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp slt i32 %jrow, 0
  %or.cond391 = or i1 %or.cond, %cmp3
  br i1 %or.cond391, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([52 x i8]* @.str, i64 0, i64 0), %struct._Chv* %chv, i32 %irow, i32 %jrow) #4
  call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  %cmp4 = icmp eq i32 %irow, %jrow
  br i1 %cmp4, label %return, label %if.end6

if.end6:                                          ; preds = %if.end
  call void @Chv_dimensions(%struct._Chv* %chv, i32* %nD, i32* %nL, i32* %nU) #4
  %1 = load i32* %nD, align 4, !tbaa !3
  %cmp7 = icmp sgt i32 %1, %irow
  %cmp9 = icmp sgt i32 %1, %jrow
  %or.cond392 = and i1 %cmp7, %cmp9
  br i1 %or.cond392, label %if.end12, label %if.then10

if.then10:                                        ; preds = %if.end6
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([72 x i8]* @.str1, i64 0, i64 0), %struct._Chv* %chv, i32 %irow, i32 %irow, i32 %1) #4
  call void @exit(i32 -1) #5
  unreachable

if.end12:                                         ; preds = %if.end6
  %call13 = call double* @Chv_entries(%struct._Chv* %chv) #4
  %cmp14 = icmp eq double* %call13, null
  br i1 %cmp14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end12
  %3 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %4 = load i32* %nD, align 4, !tbaa !3
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([75 x i8]* @.str2, i64 0, i64 0), %struct._Chv* %chv, i32 %irow, i32 %jrow, double* null, i32 %4) #4
  call void @exit(i32 -1) #5
  unreachable

if.end17:                                         ; preds = %if.end12
  %type = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 4
  %5 = load i32* %type, align 4, !tbaa !3
  %.off = add i32 %5, -1
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.end25, label %if.then22

if.then22:                                        ; preds = %if.end17
  %6 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([93 x i8]* @.str3, i64 0, i64 0), %struct._Chv* %chv, i32 %irow, i32 %jrow, i32 %5) #4
  call void @exit(i32 -1) #5
  unreachable

if.end25:                                         ; preds = %if.end17
  %symflag = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 5
  %7 = load i32* %symflag, align 4, !tbaa !3
  switch i32 %7, label %if.else216 [
    i32 0, label %if.then30
    i32 1, label %if.then30
    i32 2, label %if.then33
  ]

if.then30:                                        ; preds = %if.end25, %if.end25
  call void @Chv_swapRowsAndColumns(%struct._Chv* %chv, i32 %irow, i32 %jrow) #6
  br label %return

if.then33:                                        ; preds = %if.end25
  call void @Chv_rowIndices(%struct._Chv* %chv, i32* %nrow, i32** %rowind) #4
  %idxprom = sext i32 %irow to i64
  %8 = load i32** %rowind, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i32* %8, i64 %idxprom
  %9 = load i32* %arrayidx, align 4, !tbaa !3
  %idxprom34 = sext i32 %jrow to i64
  %arrayidx35 = getelementptr inbounds i32* %8, i64 %idxprom34
  %10 = load i32* %arrayidx35, align 4, !tbaa !3
  store i32 %10, i32* %arrayidx, align 4, !tbaa !3
  store i32 %9, i32* %arrayidx35, align 4, !tbaa !3
  %cmp40 = icmp sgt i32 %irow, %jrow
  %irow.jrow = select i1 %cmp40, i32 %irow, i32 %jrow
  %jrow.irow = select i1 %cmp40, i32 %jrow, i32 %irow
  %11 = load i32* %nD, align 4, !tbaa !3
  %12 = load i32* %nL, align 4, !tbaa !3
  %add = add i32 %11, -1
  %sub = add i32 %add, %12
  %sub43 = sub nsw i32 %sub, %jrow.irow
  %sub46 = sub nsw i32 %sub, %irow.jrow
  %mul = shl i32 %11, 1
  %13 = load i32* %nU, align 4, !tbaa !3
  %add47 = add i32 %12, -1
  %add48 = add i32 %add47, %mul
  %sub49 = add i32 %add48, %13
  %14 = load i32* %type, align 4, !tbaa !3
  switch i32 %14, label %return [
    i32 1, label %for.cond.preheader
    i32 2, label %for.cond103.preheader
  ]

for.cond103.preheader:                            ; preds = %if.then33
  %cmp104425 = icmp sgt i32 %jrow.irow, 0
  br i1 %cmp104425, label %for.body105.lr.ph, label %for.cond140.preheader

for.body105.lr.ph:                                ; preds = %for.cond103.preheader
  %15 = add i32 %12, %13
  %16 = shl i32 %11, 1
  %17 = add i32 %15, %16
  %18 = add i32 %17, -1
  %19 = sext i32 %18 to i64
  %20 = xor i32 %jrow, -1
  %21 = xor i32 %irow, -1
  %22 = icmp sgt i32 %20, %21
  %smax460 = select i1 %22, i32 %20, i32 %21
  %23 = shl i32 %smax460, 1
  %24 = add i32 %17, %23
  %25 = sub i32 -2, %smax460
  %26 = add i32 %17, -3
  %27 = mul i32 %25, %26
  %28 = add i32 %13, %27
  %29 = mul i32 %11, 3
  %30 = add i32 %28, %29
  %31 = shl i32 %12, 1
  %32 = add i32 %30, %31
  %33 = icmp sgt i32 %jrow, %irow
  %smax461 = select i1 %33, i32 %jrow, i32 %irow
  %34 = sub i32 -3, %smax460
  %35 = mul i32 %25, %34
  %36 = and i32 %35, -2
  %37 = add i32 %13, %smax460
  %38 = add i32 %37, %27
  %39 = add i32 %38, %29
  %40 = add i32 %39, %31
  %41 = add i32 %40, -1
  %42 = xor i32 %smax460, -1
  br label %for.body105

for.cond.preheader:                               ; preds = %if.then33
  %cmp53404 = icmp sgt i32 %jrow.irow, 0
  br i1 %cmp53404, label %for.body.lr.ph, label %for.cond65.preheader

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %43 = add i32 %12, %13
  %44 = shl i32 %11, 1
  %45 = add i32 %43, %44
  %46 = add i32 %45, -1
  %47 = sext i32 %46 to i64
  %48 = xor i32 %jrow, -1
  %49 = xor i32 %irow, -1
  %50 = icmp sgt i32 %48, %49
  %smax445 = select i1 %50, i32 %48, i32 %49
  %51 = shl i32 %smax445, 1
  %52 = add i32 %45, %51
  %53 = sub i32 -2, %smax445
  %54 = add i32 %45, -3
  %55 = mul i32 %53, %54
  %56 = add i32 %13, %55
  %57 = mul i32 %11, 3
  %58 = add i32 %56, %57
  %59 = shl i32 %12, 1
  %60 = add i32 %58, %59
  %61 = icmp sgt i32 %jrow, %irow
  %smax446 = select i1 %61, i32 %jrow, i32 %irow
  %62 = sub i32 -3, %smax445
  %63 = mul i32 %53, %62
  %64 = and i32 %63, -2
  %65 = add i32 %13, %smax445
  %66 = add i32 %65, %55
  %67 = add i32 %66, %57
  %68 = add i32 %67, %59
  %69 = add i32 %68, -1
  %70 = xor i32 %smax445, -1
  br label %for.body

for.cond.for.cond65.preheader_crit_edge:          ; preds = %for.body
  %71 = add i32 %52, 1
  %72 = add i32 %60, -2
  %73 = sub i32 %72, %smax446
  %74 = sub i32 %73, %64
  %75 = sub i32 %69, %64
  br label %for.cond65.preheader

for.cond65.preheader:                             ; preds = %for.cond.for.cond65.preheader_crit_edge, %for.cond.preheader
  %stride.0.lcssa = phi i32 [ %71, %for.cond.for.cond65.preheader_crit_edge ], [ %sub49, %for.cond.preheader ]
  %joff.0.lcssa = phi i32 [ %74, %for.cond.for.cond65.preheader_crit_edge ], [ %sub46, %for.cond.preheader ]
  %ioff.0.lcssa = phi i32 [ %75, %for.cond.for.cond65.preheader_crit_edge ], [ %sub43, %for.cond.preheader ]
  %cmp66398 = icmp slt i32 %jrow.irow, %irow.jrow
  br i1 %cmp66398, label %for.body67.lr.ph, label %for.cond82.preheader

for.body67.lr.ph:                                 ; preds = %for.cond65.preheader
  %76 = sext i32 %stride.0.lcssa to i64
  %77 = sext i32 %ioff.0.lcssa to i64
  %78 = icmp sgt i32 %jrow, %irow
  %smax = select i1 %78, i32 %jrow, i32 %irow
  %79 = xor i32 %jrow, -1
  %80 = xor i32 %irow, -1
  %81 = icmp sgt i32 %79, %80
  %smax441 = select i1 %81, i32 %79, i32 %80
  %82 = add i32 %smax, %smax441
  %83 = add i32 %stride.0.lcssa, -2
  %84 = mul i32 %82, %83
  %85 = add i32 %82, -1
  %86 = mul i32 %82, %85
  %87 = and i32 %86, -2
  %88 = add i32 %ioff.0.lcssa, %smax
  %89 = add i32 %88, %smax441
  br label %for.body67

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv442 = phi i64 [ %47, %for.body.lr.ph ], [ %indvars.iv.next443, %for.body ]
  %joff.0407 = phi i32 [ %sub46, %for.body.lr.ph ], [ %add63, %for.body ]
  %ioff.0406 = phi i32 [ %sub43, %for.body.lr.ph ], [ %add62, %for.body ]
  %ii.0405 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %idxprom54 = sext i32 %ioff.0406 to i64
  %arrayidx55 = getelementptr inbounds double* %call13, i64 %idxprom54
  %90 = load double* %arrayidx55, align 8, !tbaa !4
  %idxprom56 = sext i32 %joff.0407 to i64
  %arrayidx57 = getelementptr inbounds double* %call13, i64 %idxprom56
  %91 = load double* %arrayidx57, align 8, !tbaa !4
  store double %91, double* %arrayidx55, align 8, !tbaa !4
  store double %90, double* %arrayidx57, align 8, !tbaa !4
  %92 = trunc i64 %indvars.iv442 to i32
  %add62 = add nsw i32 %92, %ioff.0406
  %add63 = add nsw i32 %92, %joff.0407
  %inc = add nsw i32 %ii.0405, 1
  %indvars.iv.next443 = add i64 %indvars.iv442, -2
  %exitcond = icmp eq i32 %inc, %70
  br i1 %exitcond, label %for.cond.for.cond65.preheader_crit_edge, label %for.body

for.cond65.for.cond82.preheader_crit_edge:        ; preds = %for.body67
  %93 = add i32 %joff.0.lcssa, %stride.0.lcssa
  %94 = add i32 %93, %84
  %95 = sub i32 %94, %87
  %96 = add i32 %89, 1
  br label %for.cond82.preheader

for.cond82.preheader:                             ; preds = %for.cond65.for.cond82.preheader_crit_edge, %for.cond65.preheader
  %joff.1.lcssa = phi i32 [ %95, %for.cond65.for.cond82.preheader_crit_edge ], [ %joff.0.lcssa, %for.cond65.preheader ]
  %ioff.1.lcssa = phi i32 [ %96, %for.cond65.for.cond82.preheader_crit_edge ], [ %ioff.0.lcssa, %for.cond65.preheader ]
  %add83393 = add nsw i32 %13, %11
  %cmp84394 = icmp slt i32 %irow.jrow, %add83393
  br i1 %cmp84394, label %for.body85.lr.ph, label %return

for.body85.lr.ph:                                 ; preds = %for.cond82.preheader
  %97 = sext i32 %joff.1.lcssa to i64
  %98 = sext i32 %ioff.1.lcssa to i64
  br label %for.body85

for.body67:                                       ; preds = %for.body67.lr.ph, %for.body67
  %indvars.iv439 = phi i64 [ %77, %for.body67.lr.ph ], [ %indvars.iv.next440, %for.body67 ]
  %indvars.iv437 = phi i64 [ %76, %for.body67.lr.ph ], [ %indvars.iv.next438, %for.body67 ]
  %joff.1401 = phi i32 [ %joff.0.lcssa, %for.body67.lr.ph ], [ %add77, %for.body67 ]
  %ii.1399 = phi i32 [ %jrow.irow, %for.body67.lr.ph ], [ %inc80, %for.body67 ]
  %arrayidx69 = getelementptr inbounds double* %call13, i64 %indvars.iv439
  %99 = load double* %arrayidx69, align 8, !tbaa !4
  %idxprom70 = sext i32 %joff.1401 to i64
  %arrayidx71 = getelementptr inbounds double* %call13, i64 %idxprom70
  %100 = load double* %arrayidx71, align 8, !tbaa !4
  store double %100, double* %arrayidx69, align 8, !tbaa !4
  store double %99, double* %arrayidx71, align 8, !tbaa !4
  %indvars.iv.next440 = add i64 %indvars.iv439, 1
  %101 = trunc i64 %indvars.iv437 to i32
  %add77 = add nsw i32 %101, %joff.1401
  %indvars.iv.next438 = add i64 %indvars.iv437, -2
  %inc80 = add nsw i32 %ii.1399, 1
  %cmp66 = icmp slt i32 %inc80, %irow.jrow
  br i1 %cmp66, label %for.body67, label %for.cond65.for.cond82.preheader_crit_edge

for.body85:                                       ; preds = %for.body85.lr.ph, %for.body85
  %indvars.iv433 = phi i64 [ %98, %for.body85.lr.ph ], [ %indvars.iv.next434, %for.body85 ]
  %indvars.iv = phi i64 [ %97, %for.body85.lr.ph ], [ %indvars.iv.next, %for.body85 ]
  %ii.2395 = phi i32 [ %irow.jrow, %for.body85.lr.ph ], [ %inc97, %for.body85 ]
  %arrayidx87 = getelementptr inbounds double* %call13, i64 %indvars.iv433
  %102 = load double* %arrayidx87, align 8, !tbaa !4
  %arrayidx89 = getelementptr inbounds double* %call13, i64 %indvars.iv
  %103 = load double* %arrayidx89, align 8, !tbaa !4
  store double %103, double* %arrayidx87, align 8, !tbaa !4
  store double %102, double* %arrayidx89, align 8, !tbaa !4
  %indvars.iv.next434 = add i64 %indvars.iv433, 1
  %indvars.iv.next = add i64 %indvars.iv, 1
  %inc97 = add nsw i32 %ii.2395, 1
  %cmp84 = icmp slt i32 %inc97, %add83393
  br i1 %cmp84, label %for.body85, label %return

for.cond103.for.cond140.preheader_crit_edge:      ; preds = %for.body105
  %104 = add i32 %24, 1
  %105 = add i32 %32, -2
  %106 = sub i32 %105, %smax461
  %107 = sub i32 %106, %36
  %108 = sub i32 %41, %36
  br label %for.cond140.preheader

for.cond140.preheader:                            ; preds = %for.cond103.for.cond140.preheader_crit_edge, %for.cond103.preheader
  %stride.2.lcssa = phi i32 [ %104, %for.cond103.for.cond140.preheader_crit_edge ], [ %sub49, %for.cond103.preheader ]
  %joff.3.lcssa = phi i32 [ %107, %for.cond103.for.cond140.preheader_crit_edge ], [ %sub46, %for.cond103.preheader ]
  %ioff.3.lcssa = phi i32 [ %108, %for.cond103.for.cond140.preheader_crit_edge ], [ %sub43, %for.cond103.preheader ]
  %cmp141418 = icmp slt i32 %jrow.irow, %irow.jrow
  br i1 %cmp141418, label %for.body142.lr.ph, label %for.cond177.preheader

for.body142.lr.ph:                                ; preds = %for.cond140.preheader
  %109 = sext i32 %stride.2.lcssa to i64
  %110 = sext i32 %ioff.3.lcssa to i64
  %111 = icmp sgt i32 %jrow, %irow
  %smax455 = select i1 %111, i32 %jrow, i32 %irow
  %112 = xor i32 %jrow, -1
  %113 = xor i32 %irow, -1
  %114 = icmp sgt i32 %112, %113
  %smax456 = select i1 %114, i32 %112, i32 %113
  %115 = add i32 %smax455, %smax456
  %116 = add i32 %stride.2.lcssa, -2
  %117 = mul i32 %115, %116
  %118 = add i32 %115, -1
  %119 = mul i32 %115, %118
  %120 = and i32 %119, -2
  %121 = add i32 %ioff.3.lcssa, %smax455
  %122 = add i32 %121, %smax456
  br label %for.body142

for.body105:                                      ; preds = %for.body105, %for.body105.lr.ph
  %indvars.iv457 = phi i64 [ %19, %for.body105.lr.ph ], [ %indvars.iv.next458, %for.body105 ]
  %joff.3428 = phi i32 [ %sub46, %for.body105.lr.ph ], [ %add135, %for.body105 ]
  %ioff.3427 = phi i32 [ %sub43, %for.body105.lr.ph ], [ %add134, %for.body105 ]
  %ii.3426 = phi i32 [ 0, %for.body105.lr.ph ], [ %inc138, %for.body105 ]
  %mul106 = shl nsw i32 %ioff.3427, 1
  %idxprom107 = sext i32 %mul106 to i64
  %arrayidx108 = getelementptr inbounds double* %call13, i64 %idxprom107
  %123 = load double* %arrayidx108, align 8, !tbaa !4
  %mul109 = shl nsw i32 %joff.3428, 1
  %idxprom110 = sext i32 %mul109 to i64
  %arrayidx111 = getelementptr inbounds double* %call13, i64 %idxprom110
  %124 = load double* %arrayidx111, align 8, !tbaa !4
  store double %124, double* %arrayidx108, align 8, !tbaa !4
  store double %123, double* %arrayidx111, align 8, !tbaa !4
  %add119389 = or i32 %mul106, 1
  %idxprom120 = sext i32 %add119389 to i64
  %arrayidx121 = getelementptr inbounds double* %call13, i64 %idxprom120
  %125 = load double* %arrayidx121, align 8, !tbaa !4
  %add123390 = or i32 %mul109, 1
  %idxprom124 = sext i32 %add123390 to i64
  %arrayidx125 = getelementptr inbounds double* %call13, i64 %idxprom124
  %126 = load double* %arrayidx125, align 8, !tbaa !4
  store double %126, double* %arrayidx121, align 8, !tbaa !4
  store double %125, double* %arrayidx125, align 8, !tbaa !4
  %127 = trunc i64 %indvars.iv457 to i32
  %add134 = add nsw i32 %127, %ioff.3427
  %add135 = add nsw i32 %127, %joff.3428
  %inc138 = add nsw i32 %ii.3426, 1
  %indvars.iv.next458 = add i64 %indvars.iv457, -2
  %exitcond462 = icmp eq i32 %inc138, %42
  br i1 %exitcond462, label %for.cond103.for.cond140.preheader_crit_edge, label %for.body105

for.cond140.for.cond177.preheader_crit_edge:      ; preds = %for.body142
  %128 = add i32 %joff.3.lcssa, %stride.2.lcssa
  %129 = add i32 %128, %117
  %130 = sub i32 %129, %120
  %131 = add i32 %122, 1
  br label %for.cond177.preheader

for.cond177.preheader:                            ; preds = %for.cond140.for.cond177.preheader_crit_edge, %for.cond140.preheader
  %joff.4.lcssa = phi i32 [ %130, %for.cond140.for.cond177.preheader_crit_edge ], [ %joff.3.lcssa, %for.cond140.preheader ]
  %ioff.4.lcssa = phi i32 [ %131, %for.cond140.for.cond177.preheader_crit_edge ], [ %ioff.3.lcssa, %for.cond140.preheader ]
  %add178413 = add nsw i32 %13, %11
  %cmp179414 = icmp slt i32 %irow.jrow, %add178413
  br i1 %cmp179414, label %for.body180.lr.ph, label %return

for.body180.lr.ph:                                ; preds = %for.cond177.preheader
  %132 = sext i32 %joff.4.lcssa to i64
  %133 = sext i32 %ioff.4.lcssa to i64
  br label %for.body180

for.body142:                                      ; preds = %for.body142.lr.ph, %for.body142
  %indvars.iv453 = phi i64 [ %110, %for.body142.lr.ph ], [ %indvars.iv.next454, %for.body142 ]
  %indvars.iv451 = phi i64 [ %109, %for.body142.lr.ph ], [ %indvars.iv.next452, %for.body142 ]
  %joff.4421 = phi i32 [ %joff.3.lcssa, %for.body142.lr.ph ], [ %add172, %for.body142 ]
  %ii.4419 = phi i32 [ %jrow.irow, %for.body142.lr.ph ], [ %inc175, %for.body142 ]
  %134 = trunc i64 %indvars.iv453 to i32
  %mul143 = shl nsw i32 %134, 1
  %idxprom144 = sext i32 %mul143 to i64
  %arrayidx145 = getelementptr inbounds double* %call13, i64 %idxprom144
  %135 = load double* %arrayidx145, align 8, !tbaa !4
  %mul146 = shl nsw i32 %joff.4421, 1
  %idxprom147 = sext i32 %mul146 to i64
  %arrayidx148 = getelementptr inbounds double* %call13, i64 %idxprom147
  %136 = load double* %arrayidx148, align 8, !tbaa !4
  store double %136, double* %arrayidx145, align 8, !tbaa !4
  store double %135, double* %arrayidx148, align 8, !tbaa !4
  %add156387 = or i32 %mul143, 1
  %idxprom157 = sext i32 %add156387 to i64
  %arrayidx158 = getelementptr inbounds double* %call13, i64 %idxprom157
  %137 = load double* %arrayidx158, align 8, !tbaa !4
  %add160388 = or i32 %mul146, 1
  %idxprom161 = sext i32 %add160388 to i64
  %arrayidx162 = getelementptr inbounds double* %call13, i64 %idxprom161
  %138 = load double* %arrayidx162, align 8, !tbaa !4
  store double %138, double* %arrayidx158, align 8, !tbaa !4
  store double %137, double* %arrayidx162, align 8, !tbaa !4
  %indvars.iv.next454 = add i64 %indvars.iv453, 1
  %139 = trunc i64 %indvars.iv451 to i32
  %add172 = add nsw i32 %139, %joff.4421
  %indvars.iv.next452 = add i64 %indvars.iv451, -2
  %inc175 = add nsw i32 %ii.4419, 1
  %cmp141 = icmp slt i32 %inc175, %irow.jrow
  br i1 %cmp141, label %for.body142, label %for.cond140.for.cond177.preheader_crit_edge

for.body180:                                      ; preds = %for.body180.lr.ph, %for.body180
  %indvars.iv449 = phi i64 [ %133, %for.body180.lr.ph ], [ %indvars.iv.next450, %for.body180 ]
  %indvars.iv447 = phi i64 [ %132, %for.body180.lr.ph ], [ %indvars.iv.next448, %for.body180 ]
  %ii.5415 = phi i32 [ %irow.jrow, %for.body180.lr.ph ], [ %inc212, %for.body180 ]
  %140 = trunc i64 %indvars.iv449 to i32
  %mul181 = shl nsw i32 %140, 1
  %idxprom182 = sext i32 %mul181 to i64
  %arrayidx183 = getelementptr inbounds double* %call13, i64 %idxprom182
  %141 = load double* %arrayidx183, align 8, !tbaa !4
  %142 = trunc i64 %indvars.iv447 to i32
  %mul184 = shl nsw i32 %142, 1
  %idxprom185 = sext i32 %mul184 to i64
  %arrayidx186 = getelementptr inbounds double* %call13, i64 %idxprom185
  %143 = load double* %arrayidx186, align 8, !tbaa !4
  store double %143, double* %arrayidx183, align 8, !tbaa !4
  store double %141, double* %arrayidx186, align 8, !tbaa !4
  %add194385 = or i32 %mul181, 1
  %idxprom195 = sext i32 %add194385 to i64
  %arrayidx196 = getelementptr inbounds double* %call13, i64 %idxprom195
  %144 = load double* %arrayidx196, align 8, !tbaa !4
  %add198386 = or i32 %mul184, 1
  %idxprom199 = sext i32 %add198386 to i64
  %arrayidx200 = getelementptr inbounds double* %call13, i64 %idxprom199
  %145 = load double* %arrayidx200, align 8, !tbaa !4
  store double %145, double* %arrayidx196, align 8, !tbaa !4
  store double %144, double* %arrayidx200, align 8, !tbaa !4
  %indvars.iv.next450 = add i64 %indvars.iv449, 1
  %indvars.iv.next448 = add i64 %indvars.iv447, 1
  %inc212 = add nsw i32 %ii.5415, 1
  %cmp179 = icmp slt i32 %inc212, %add178413
  br i1 %cmp179, label %for.body180, label %return

if.else216:                                       ; preds = %if.end25
  %146 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call218 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %146, i8* getelementptr inbounds ([62 x i8]* @.str4, i64 0, i64 0), %struct._Chv* %chv, i32 %irow, i32 %jrow, i32 %7) #4
  call void @exit(i32 -1) #5
  unreachable

return:                                           ; preds = %for.cond177.preheader, %for.body180, %for.cond82.preheader, %for.body85, %if.then33, %if.then30, %if.end
  ret void
}
