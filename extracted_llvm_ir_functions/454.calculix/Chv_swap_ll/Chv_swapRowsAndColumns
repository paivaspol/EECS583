define void @Chv_swapRowsAndColumns(%struct._Chv* %chv, i32 %ii, i32 %jj) #0 {
entry:
  %ncol = alloca i32, align 4
  %nD = alloca i32, align 4
  %nL = alloca i32, align 4
  %nU = alloca i32, align 4
  %colind = alloca i32*, align 8
  %cmp = icmp eq %struct._Chv* %chv, null
  %cmp1 = icmp slt i32 %ii, 0
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp slt i32 %jj, 0
  %or.cond530 = or i1 %or.cond, %cmp3
  br i1 %or.cond530, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([62 x i8]* @.str9, i64 0, i64 0), %struct._Chv* %chv, i32 %ii, i32 %jj) #4
  call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  %cmp4 = icmp eq i32 %ii, %jj
  br i1 %cmp4, label %return, label %if.end6

if.end6:                                          ; preds = %if.end
  call void @Chv_dimensions(%struct._Chv* %chv, i32* %nD, i32* %nL, i32* %nU) #4
  %call7 = call double* @Chv_entries(%struct._Chv* %chv) #4
  %cmp8 = icmp eq double* %call7, null
  %.pre = load i32* %nD, align 4, !tbaa !3
  br i1 %cmp8, label %if.then13, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %if.end6
  %cmp10 = icmp sgt i32 %.pre, %ii
  %cmp12 = icmp sgt i32 %.pre, %jj
  %or.cond531 = and i1 %cmp10, %cmp12
  br i1 %or.cond531, label %if.end15, label %if.then13

if.then13:                                        ; preds = %if.end6, %lor.lhs.false9
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([85 x i8]* @.str10, i64 0, i64 0), %struct._Chv* %chv, i32 %ii, i32 %jj, double* %call7, i32 %.pre) #4
  call void @exit(i32 -1) #5
  unreachable

if.end15:                                         ; preds = %lor.lhs.false9
  %type = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 4
  %2 = load i32* %type, align 4, !tbaa !3
  %.off = add i32 %2, -1
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.end23, label %if.then20

if.then20:                                        ; preds = %if.end15
  %3 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([103 x i8]* @.str11, i64 0, i64 0), %struct._Chv* %chv, i32 %ii, i32 %jj, i32 %2) #4
  call void @exit(i32 -1) #5
  unreachable

if.end23:                                         ; preds = %if.end15
  %symflag = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 5
  %4 = load i32* %symflag, align 4, !tbaa !3
  switch i32 %4, label %if.else306 [
    i32 2, label %if.then25
    i32 0, label %if.then31
    i32 1, label %if.then31
  ]

if.then25:                                        ; preds = %if.end23
  call void @Chv_swapRows(%struct._Chv* %chv, i32 %ii, i32 %jj) #6
  call void @Chv_swapColumns(%struct._Chv* %chv, i32 %ii, i32 %jj) #6
  br label %return

if.then31:                                        ; preds = %if.end23, %if.end23
  call void @Chv_columnIndices(%struct._Chv* %chv, i32* %ncol, i32** %colind) #4
  %idxprom = sext i32 %ii to i64
  %5 = load i32** %colind, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i32* %5, i64 %idxprom
  %6 = load i32* %arrayidx, align 4, !tbaa !3
  %idxprom32 = sext i32 %jj to i64
  %arrayidx33 = getelementptr inbounds i32* %5, i64 %idxprom32
  %7 = load i32* %arrayidx33, align 4, !tbaa !3
  store i32 %7, i32* %arrayidx, align 4, !tbaa !3
  store i32 %6, i32* %arrayidx33, align 4, !tbaa !3
  %cmp38 = icmp sgt i32 %ii, %jj
  %ii.jj = select i1 %cmp38, i32 %ii, i32 %jj
  %jj.ii = select i1 %cmp38, i32 %jj, i32 %ii
  %8 = load i32* %nD, align 4, !tbaa !3
  %9 = load i32* %nU, align 4, !tbaa !3
  %add = add i32 %8, -1
  %sub = add i32 %add, %9
  %10 = load i32* %type, align 4, !tbaa !3
  switch i32 %10, label %if.end97 [
    i32 1, label %for.cond.preheader
    i32 2, label %for.cond60.preheader
  ]

for.cond60.preheader:                             ; preds = %if.then31
  %cmp61570 = icmp sgt i32 %jj.ii, 0
  br i1 %cmp61570, label %for.body62.lr.ph, label %if.end97.thread625

if.end97.thread625:                               ; preds = %for.cond60.preheader
  %inc98626 = add i32 %jj.ii, 1
  %add99627 = add nsw i32 %ii.jj, %sub
  br label %for.cond127.preheader

for.body62.lr.ph:                                 ; preds = %for.cond60.preheader
  %11 = add i32 %8, %9
  %12 = add i32 %11, -1
  %13 = sext i32 %12 to i64
  %14 = xor i32 %jj, -1
  %15 = xor i32 %ii, -1
  %16 = icmp sgt i32 %14, %15
  %smax613 = select i1 %16, i32 %14, i32 %15
  %17 = icmp sgt i32 %jj, %ii
  %smax614 = select i1 %17, i32 %jj, i32 %ii
  %18 = add i32 %11, %smax614
  %19 = add i32 %11, -2
  %20 = sub i32 -2, %smax613
  %21 = mul i32 %19, %20
  %22 = add i32 %18, %21
  %23 = zext i32 %20 to i33
  %24 = sub i32 -3, %smax613
  %25 = zext i32 %24 to i33
  %26 = mul i33 %23, %25
  %27 = lshr i33 %26, 1
  %28 = trunc i33 %27 to i32
  %29 = add i32 %11, %21
  %30 = add i32 %29, -2
  %31 = sub i32 %30, %smax613
  %32 = xor i32 %smax613, -1
  br label %for.body62

for.cond.preheader:                               ; preds = %if.then31
  %cmp44561 = icmp sgt i32 %jj.ii, 0
  br i1 %cmp44561, label %for.body.lr.ph, label %if.end97.thread

if.end97.thread:                                  ; preds = %for.cond.preheader
  %inc98617 = add i32 %jj.ii, 1
  %add99618 = add nsw i32 %ii.jj, %sub
  br label %for.cond105.preheader

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %33 = add i32 %8, %9
  %34 = add i32 %33, -1
  %35 = sext i32 %34 to i64
  %36 = xor i32 %jj, -1
  %37 = xor i32 %ii, -1
  %38 = icmp sgt i32 %36, %37
  %smax608 = select i1 %38, i32 %36, i32 %37
  %39 = icmp sgt i32 %jj, %ii
  %smax609 = select i1 %39, i32 %jj, i32 %ii
  %40 = add i32 %33, %smax609
  %41 = add i32 %33, -2
  %42 = sub i32 -2, %smax608
  %43 = mul i32 %41, %42
  %44 = add i32 %40, %43
  %45 = zext i32 %42 to i33
  %46 = sub i32 -3, %smax608
  %47 = zext i32 %46 to i33
  %48 = mul i33 %45, %47
  %49 = lshr i33 %48, 1
  %50 = trunc i33 %49 to i32
  %51 = add i32 %33, %43
  %52 = add i32 %51, -2
  %53 = sub i32 %52, %smax608
  %54 = xor i32 %smax608, -1
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv605 = phi i64 [ %35, %for.body.lr.ph ], [ %indvars.iv.next606, %for.body ]
  %ioff.0565 = phi i32 [ %jj.ii, %for.body.lr.ph ], [ %add53, %for.body ]
  %joff.0564 = phi i32 [ %ii.jj, %for.body.lr.ph ], [ %add54, %for.body ]
  %kk.0562 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %idxprom45 = sext i32 %ioff.0565 to i64
  %arrayidx46 = getelementptr inbounds double* %call7, i64 %idxprom45
  %55 = load double* %arrayidx46, align 8, !tbaa !4
  %idxprom47 = sext i32 %joff.0564 to i64
  %arrayidx48 = getelementptr inbounds double* %call7, i64 %idxprom47
  %56 = load double* %arrayidx48, align 8, !tbaa !4
  store double %56, double* %arrayidx46, align 8, !tbaa !4
  store double %55, double* %arrayidx48, align 8, !tbaa !4
  %57 = trunc i64 %indvars.iv605 to i32
  %add53 = add nsw i32 %ioff.0565, %57
  %add54 = add nsw i32 %joff.0564, %57
  %inc = add nsw i32 %kk.0562, 1
  %indvars.iv.next606 = add i64 %indvars.iv605, -1
  %exitcond = icmp eq i32 %inc, %54
  br i1 %exitcond, label %for.cond.if.end97thread-pre-split.loopexit_crit_edge, label %for.body

for.body62:                                       ; preds = %for.body62, %for.body62.lr.ph
  %indvars.iv610 = phi i64 [ %13, %for.body62.lr.ph ], [ %indvars.iv.next611, %for.body62 ]
  %ioff.1574 = phi i32 [ %jj.ii, %for.body62.lr.ph ], [ %add90, %for.body62 ]
  %joff.1573 = phi i32 [ %ii.jj, %for.body62.lr.ph ], [ %add91, %for.body62 ]
  %kk.1571 = phi i32 [ 0, %for.body62.lr.ph ], [ %inc94, %for.body62 ]
  %mul = shl nsw i32 %ioff.1574, 1
  %idxprom63 = sext i32 %mul to i64
  %arrayidx64 = getelementptr inbounds double* %call7, i64 %idxprom63
  %58 = load double* %arrayidx64, align 8, !tbaa !4
  %mul65 = shl nsw i32 %joff.1573, 1
  %idxprom66 = sext i32 %mul65 to i64
  %arrayidx67 = getelementptr inbounds double* %call7, i64 %idxprom66
  %59 = load double* %arrayidx67, align 8, !tbaa !4
  store double %59, double* %arrayidx64, align 8, !tbaa !4
  store double %58, double* %arrayidx67, align 8, !tbaa !4
  %add75528 = or i32 %mul, 1
  %idxprom76 = sext i32 %add75528 to i64
  %arrayidx77 = getelementptr inbounds double* %call7, i64 %idxprom76
  %60 = load double* %arrayidx77, align 8, !tbaa !4
  %add79529 = or i32 %mul65, 1
  %idxprom80 = sext i32 %add79529 to i64
  %arrayidx81 = getelementptr inbounds double* %call7, i64 %idxprom80
  %61 = load double* %arrayidx81, align 8, !tbaa !4
  store double %61, double* %arrayidx77, align 8, !tbaa !4
  store double %60, double* %arrayidx81, align 8, !tbaa !4
  %62 = trunc i64 %indvars.iv610 to i32
  %add90 = add nsw i32 %ioff.1574, %62
  %add91 = add nsw i32 %joff.1573, %62
  %inc94 = add nsw i32 %kk.1571, 1
  %indvars.iv.next611 = add i64 %indvars.iv610, -1
  %exitcond615 = icmp eq i32 %inc94, %32
  br i1 %exitcond615, label %for.cond60.if.end97thread-pre-split.loopexit569_crit_edge, label %for.body62

for.cond.if.end97thread-pre-split.loopexit_crit_edge: ; preds = %for.body
  %63 = add i32 %33, %smax608
  %64 = add i32 %44, -1
  %65 = sub i32 %64, %50
  %66 = sub i32 %53, %50
  br label %if.end97

for.cond60.if.end97thread-pre-split.loopexit569_crit_edge: ; preds = %for.body62
  %67 = add i32 %11, %smax613
  %68 = add i32 %22, -1
  %69 = sub i32 %68, %28
  %70 = sub i32 %31, %28
  br label %if.end97

if.end97:                                         ; preds = %for.cond.if.end97thread-pre-split.loopexit_crit_edge, %for.cond60.if.end97thread-pre-split.loopexit569_crit_edge, %if.then31
  %stride.2 = phi i32 [ %sub, %if.then31 ], [ %63, %for.cond.if.end97thread-pre-split.loopexit_crit_edge ], [ %67, %for.cond60.if.end97thread-pre-split.loopexit569_crit_edge ]
  %joff.2 = phi i32 [ %ii.jj, %if.then31 ], [ %65, %for.cond.if.end97thread-pre-split.loopexit_crit_edge ], [ %69, %for.cond60.if.end97thread-pre-split.loopexit569_crit_edge ]
  %ioff.2 = phi i32 [ %jj.ii, %if.then31 ], [ %66, %for.cond.if.end97thread-pre-split.loopexit_crit_edge ], [ %70, %for.cond60.if.end97thread-pre-split.loopexit569_crit_edge ]
  %inc98 = add i32 %ioff.2, 1
  %add99 = add nsw i32 %joff.2, %stride.2
  switch i32 %10, label %if.end193 [
    i32 1, label %for.cond105.preheader
    i32 2, label %for.cond127.preheader
  ]

for.cond127.preheader:                            ; preds = %if.end97.thread625, %if.end97
  %add99632 = phi i32 [ %add99627, %if.end97.thread625 ], [ %add99, %if.end97 ]
  %inc98631 = phi i32 [ %inc98626, %if.end97.thread625 ], [ %inc98, %if.end97 ]
  %ioff.2630 = phi i32 [ %jj.ii, %if.end97.thread625 ], [ %ioff.2, %if.end97 ]
  %joff.2629 = phi i32 [ %ii.jj, %if.end97.thread625 ], [ %joff.2, %if.end97 ]
  %stride.2628 = phi i32 [ %sub, %if.end97.thread625 ], [ %stride.2, %if.end97 ]
  %kk.3553 = add nsw i32 %jj.ii, 1
  %cmp128554 = icmp slt i32 %kk.3553, %ii.jj
  %71 = load i32* %symflag, align 4, !tbaa !3
  br i1 %cmp128554, label %for.body129.lr.ph, label %for.end178

for.body129.lr.ph:                                ; preds = %for.cond127.preheader
  %cmp151 = icmp eq i32 %71, 0
  %72 = sext i32 %inc98631 to i64
  %73 = add i32 %stride.2628, -1
  %74 = sext i32 %73 to i64
  %75 = icmp sgt i32 %jj, %ii
  %smax603 = select i1 %75, i32 %jj, i32 %ii
  %76 = xor i32 %jj, -1
  %77 = xor i32 %ii, -1
  %78 = icmp sgt i32 %76, %77
  %smax604 = select i1 %78, i32 %76, i32 %77
  %79 = add i32 %smax603, %smax604
  %80 = add i32 %79, -1
  %81 = add i32 %stride.2628, -2
  %82 = mul i32 %80, %81
  %83 = add i32 %joff.2629, %82
  %84 = shl i32 %stride.2628, 1
  %85 = add i32 %83, %84
  %86 = zext i32 %80 to i33
  %87 = add i32 %79, -2
  %88 = zext i32 %87 to i33
  %89 = mul i33 %86, %88
  %90 = lshr i33 %89, 1
  %91 = trunc i33 %90 to i32
  %92 = add i32 %ioff.2630, %smax603
  %93 = add i32 %92, %smax604
  br label %for.body129

for.cond105.preheader:                            ; preds = %if.end97.thread, %if.end97
  %add99624 = phi i32 [ %add99618, %if.end97.thread ], [ %add99, %if.end97 ]
  %inc98623 = phi i32 [ %inc98617, %if.end97.thread ], [ %inc98, %if.end97 ]
  %ioff.2621 = phi i32 [ %jj.ii, %if.end97.thread ], [ %ioff.2, %if.end97 ]
  %joff.2620 = phi i32 [ %ii.jj, %if.end97.thread ], [ %joff.2, %if.end97 ]
  %stride.2619 = phi i32 [ %sub, %if.end97.thread ], [ %stride.2, %if.end97 ]
  %kk.2546 = add nsw i32 %jj.ii, 1
  %cmp106547 = icmp slt i32 %kk.2546, %ii.jj
  br i1 %cmp106547, label %for.body107.lr.ph, label %if.end193

for.body107.lr.ph:                                ; preds = %for.cond105.preheader
  %94 = sext i32 %inc98623 to i64
  %95 = add i32 %stride.2619, -1
  %96 = sext i32 %95 to i64
  %97 = icmp sgt i32 %jj, %ii
  %smax = select i1 %97, i32 %jj, i32 %ii
  %98 = xor i32 %jj, -1
  %99 = xor i32 %ii, -1
  %100 = icmp sgt i32 %98, %99
  %smax596 = select i1 %100, i32 %98, i32 %99
  %101 = add i32 %smax, %smax596
  %102 = add i32 %101, -1
  %103 = add i32 %stride.2619, -2
  %104 = mul i32 %102, %103
  %105 = add i32 %joff.2620, %104
  %106 = shl i32 %stride.2619, 1
  %107 = add i32 %105, %106
  %108 = zext i32 %102 to i33
  %109 = add i32 %101, -2
  %110 = zext i32 %109 to i33
  %111 = mul i33 %108, %110
  %112 = lshr i33 %111, 1
  %113 = trunc i33 %112 to i32
  %114 = add i32 %ioff.2621, %smax
  %115 = add i32 %114, %smax596
  br label %for.body107

for.body107:                                      ; preds = %for.body107.lr.ph, %for.body107
  %indvars.iv593 = phi i64 [ %96, %for.body107.lr.ph ], [ %indvars.iv.next594, %for.body107 ]
  %indvars.iv590 = phi i64 [ %94, %for.body107.lr.ph ], [ %indvars.iv.next591, %for.body107 ]
  %kk.2551 = phi i32 [ %kk.2546, %for.body107.lr.ph ], [ %kk.2, %for.body107 ]
  %joff.3549 = phi i32 [ %add99624, %for.body107.lr.ph ], [ %add117, %for.body107 ]
  %arrayidx109 = getelementptr inbounds double* %call7, i64 %indvars.iv590
  %116 = load double* %arrayidx109, align 8, !tbaa !4
  %idxprom110 = sext i32 %joff.3549 to i64
  %arrayidx111 = getelementptr inbounds double* %call7, i64 %idxprom110
  %117 = load double* %arrayidx111, align 8, !tbaa !4
  store double %117, double* %arrayidx109, align 8, !tbaa !4
  store double %116, double* %arrayidx111, align 8, !tbaa !4
  %118 = trunc i64 %indvars.iv593 to i32
  %add117 = add nsw i32 %joff.3549, %118
  %kk.2 = add nsw i32 %kk.2551, 1
  %cmp106 = icmp slt i32 %kk.2, %ii.jj
  %indvars.iv.next591 = add i64 %indvars.iv590, 1
  %indvars.iv.next594 = add i64 %indvars.iv593, -1
  br i1 %cmp106, label %for.body107, label %for.cond105.if.end193.loopexit_crit_edge

for.body129:                                      ; preds = %for.body129.lr.ph, %if.end172
  %indvars.iv600 = phi i64 [ %74, %for.body129.lr.ph ], [ %indvars.iv.next601, %if.end172 ]
  %indvars.iv597 = phi i64 [ %72, %for.body129.lr.ph ], [ %indvars.iv.next598, %if.end172 ]
  %kk.3558 = phi i32 [ %kk.3553, %for.body129.lr.ph ], [ %kk.3, %if.end172 ]
  %joff.4556 = phi i32 [ %add99632, %for.body129.lr.ph ], [ %add174, %if.end172 ]
  %119 = trunc i64 %indvars.iv597 to i32
  %mul130 = shl nsw i32 %119, 1
  %idxprom131 = sext i32 %mul130 to i64
  %arrayidx132 = getelementptr inbounds double* %call7, i64 %idxprom131
  %120 = load double* %arrayidx132, align 8, !tbaa !4
  %add134526 = or i32 %mul130, 1
  %idxprom135 = sext i32 %add134526 to i64
  %arrayidx136 = getelementptr inbounds double* %call7, i64 %idxprom135
  %121 = load double* %arrayidx136, align 8, !tbaa !4
  %mul137 = shl nsw i32 %joff.4556, 1
  %idxprom138 = sext i32 %mul137 to i64
  %arrayidx139 = getelementptr inbounds double* %call7, i64 %idxprom138
  %122 = load double* %arrayidx139, align 8, !tbaa !4
  %add141527 = or i32 %mul137, 1
  %idxprom142 = sext i32 %add141527 to i64
  %arrayidx143 = getelementptr inbounds double* %call7, i64 %idxprom142
  %123 = load double* %arrayidx143, align 8, !tbaa !4
  store double %122, double* %arrayidx132, align 8, !tbaa !4
  store double %120, double* %arrayidx139, align 8, !tbaa !4
  br i1 %cmp151, label %if.then152, label %if.else161

if.then152:                                       ; preds = %for.body129
  store double %123, double* %arrayidx136, align 8, !tbaa !4
  br label %if.end172

if.else161:                                       ; preds = %for.body129
  %sub162 = fsub double -0.000000e+00, %123
  store double %sub162, double* %arrayidx136, align 8, !tbaa !4
  %sub167 = fsub double -0.000000e+00, %121
  br label %if.end172

if.end172:                                        ; preds = %if.else161, %if.then152
  %storemerge = phi double [ %sub167, %if.else161 ], [ %121, %if.then152 ]
  store double %storemerge, double* %arrayidx143, align 8, !tbaa !4
  %124 = trunc i64 %indvars.iv600 to i32
  %add174 = add nsw i32 %joff.4556, %124
  %kk.3 = add nsw i32 %kk.3558, 1
  %cmp128 = icmp slt i32 %kk.3, %ii.jj
  %indvars.iv.next598 = add i64 %indvars.iv597, 1
  %indvars.iv.next601 = add i64 %indvars.iv600, -1
  br i1 %cmp128, label %for.body129, label %for.cond127.for.end178_crit_edge

for.cond127.for.end178_crit_edge:                 ; preds = %if.end172
  %125 = add i32 %85, -1
  %126 = sub i32 %125, %91
  %127 = add i32 %93, 1
  br label %for.end178

for.end178:                                       ; preds = %for.cond127.preheader, %for.cond127.for.end178_crit_edge
  %ioff.4.lcssa = phi i32 [ %127, %for.cond127.for.end178_crit_edge ], [ %inc98631, %for.cond127.preheader ]
  %joff.4.lcssa = phi i32 [ %126, %for.cond127.for.end178_crit_edge ], [ %add99632, %for.cond127.preheader ]
  %cmp180 = icmp eq i32 %71, 1
  br i1 %cmp180, label %if.then181, label %if.end193

if.then181:                                       ; preds = %for.end178
  %mul182 = shl nsw i32 %ioff.4.lcssa, 1
  %add183525 = or i32 %mul182, 1
  %idxprom184 = sext i32 %add183525 to i64
  %arrayidx185 = getelementptr inbounds double* %call7, i64 %idxprom184
  %128 = load double* %arrayidx185, align 8, !tbaa !4
  %sub186 = fsub double -0.000000e+00, %128
  store double %sub186, double* %arrayidx185, align 8, !tbaa !4
  br label %if.end193

for.cond105.if.end193.loopexit_crit_edge:         ; preds = %for.body107
  %129 = add i32 %107, -1
  %130 = sub i32 %129, %113
  %131 = add i32 %115, 1
  br label %if.end193

if.end193:                                        ; preds = %for.cond105.preheader, %for.cond105.if.end193.loopexit_crit_edge, %if.end97, %if.then181, %for.end178
  %ioff.2622 = phi i32 [ %ioff.2630, %if.then181 ], [ %ioff.2630, %for.end178 ], [ %ioff.2, %if.end97 ], [ %ioff.2621, %for.cond105.if.end193.loopexit_crit_edge ], [ %ioff.2621, %for.cond105.preheader ]
  %joff.5 = phi i32 [ %joff.4.lcssa, %if.then181 ], [ %joff.4.lcssa, %for.end178 ], [ %add99, %if.end97 ], [ %130, %for.cond105.if.end193.loopexit_crit_edge ], [ %add99624, %for.cond105.preheader ]
  %ioff.5 = phi i32 [ %ioff.4.lcssa, %if.then181 ], [ %ioff.4.lcssa, %for.end178 ], [ %inc98, %if.end97 ], [ %131, %for.cond105.if.end193.loopexit_crit_edge ], [ %inc98623, %for.cond105.preheader ]
  switch i32 %10, label %return [
    i32 1, label %if.end238.thread
    i32 2, label %if.end238.thread633
  ]

if.end238.thread:                                 ; preds = %if.end193
  %idxprom197 = sext i32 %ioff.2622 to i64
  %arrayidx198 = getelementptr inbounds double* %call7, i64 %idxprom197
  %132 = load double* %arrayidx198, align 8, !tbaa !4
  %idxprom199 = sext i32 %joff.5 to i64
  %arrayidx200 = getelementptr inbounds double* %call7, i64 %idxprom199
  %133 = load double* %arrayidx200, align 8, !tbaa !4
  store double %133, double* %arrayidx198, align 8, !tbaa !4
  store double %132, double* %arrayidx200, align 8, !tbaa !4
  %kk.4533 = add nsw i32 %ii.jj, 1
  %add246534 = add nsw i32 %9, %8
  %cmp247535 = icmp slt i32 %kk.4533, %add246534
  br i1 %cmp247535, label %for.body248.lr.ph, label %return

if.end238.thread633:                              ; preds = %if.end193
  %mul209 = shl nsw i32 %ioff.2622, 1
  %idxprom210 = sext i32 %mul209 to i64
  %arrayidx211 = getelementptr inbounds double* %call7, i64 %idxprom210
  %134 = load double* %arrayidx211, align 8, !tbaa !4
  %mul212 = shl nsw i32 %joff.5, 1
  %idxprom213 = sext i32 %mul212 to i64
  %arrayidx214 = getelementptr inbounds double* %call7, i64 %idxprom213
  %135 = load double* %arrayidx214, align 8, !tbaa !4
  store double %135, double* %arrayidx211, align 8, !tbaa !4
  store double %134, double* %arrayidx214, align 8, !tbaa !4
  %add222523 = or i32 %mul209, 1
  %idxprom223 = sext i32 %add222523 to i64
  %arrayidx224 = getelementptr inbounds double* %call7, i64 %idxprom223
  %136 = load double* %arrayidx224, align 8, !tbaa !4
  %add226524 = or i32 %mul212, 1
  %idxprom227 = sext i32 %add226524 to i64
  %arrayidx228 = getelementptr inbounds double* %call7, i64 %idxprom227
  %137 = load double* %arrayidx228, align 8, !tbaa !4
  store double %137, double* %arrayidx224, align 8, !tbaa !4
  store double %136, double* %arrayidx228, align 8, !tbaa !4
  %kk.5540 = add nsw i32 %ii.jj, 1
  %add268541 = add nsw i32 %9, %8
  %cmp269542 = icmp slt i32 %kk.5540, %add268541
  br i1 %cmp269542, label %for.body270.lr.ph, label %return

for.body270.lr.ph:                                ; preds = %if.end238.thread633
  %138 = add i32 %ioff.5, 1
  %139 = sext i32 %138 to i64
  %140 = add i32 %joff.5, 1
  %141 = sext i32 %140 to i64
  br label %for.body270

for.body248.lr.ph:                                ; preds = %if.end238.thread
  %142 = add i32 %ioff.5, 1
  %143 = sext i32 %142 to i64
  %144 = add i32 %joff.5, 1
  %145 = sext i32 %144 to i64
  br label %for.body248

for.body248:                                      ; preds = %for.body248.lr.ph, %for.body248
  %indvars.iv579 = phi i64 [ %145, %for.body248.lr.ph ], [ %indvars.iv.next580, %for.body248 ]
  %indvars.iv = phi i64 [ %143, %for.body248.lr.ph ], [ %indvars.iv.next, %for.body248 ]
  %kk.4538 = phi i32 [ %kk.4533, %for.body248.lr.ph ], [ %kk.4, %for.body248 ]
  %arrayidx250 = getelementptr inbounds double* %call7, i64 %indvars.iv
  %146 = load double* %arrayidx250, align 8, !tbaa !4
  %arrayidx252 = getelementptr inbounds double* %call7, i64 %indvars.iv579
  %147 = load double* %arrayidx252, align 8, !tbaa !4
  store double %147, double* %arrayidx250, align 8, !tbaa !4
  store double %146, double* %arrayidx252, align 8, !tbaa !4
  %kk.4 = add nsw i32 %kk.4538, 1
  %cmp247 = icmp slt i32 %kk.4, %add246534
  %indvars.iv.next = add i64 %indvars.iv, 1
  %indvars.iv.next580 = add i64 %indvars.iv579, 1
  br i1 %cmp247, label %for.body248, label %return

for.body270:                                      ; preds = %for.body270.lr.ph, %for.body270
  %indvars.iv587 = phi i64 [ %141, %for.body270.lr.ph ], [ %indvars.iv.next588, %for.body270 ]
  %indvars.iv584 = phi i64 [ %139, %for.body270.lr.ph ], [ %indvars.iv.next585, %for.body270 ]
  %kk.5545 = phi i32 [ %kk.5540, %for.body270.lr.ph ], [ %kk.5, %for.body270 ]
  %148 = trunc i64 %indvars.iv584 to i32
  %mul271 = shl nsw i32 %148, 1
  %idxprom272 = sext i32 %mul271 to i64
  %arrayidx273 = getelementptr inbounds double* %call7, i64 %idxprom272
  %149 = load double* %arrayidx273, align 8, !tbaa !4
  %150 = trunc i64 %indvars.iv587 to i32
  %mul274 = shl nsw i32 %150, 1
  %idxprom275 = sext i32 %mul274 to i64
  %arrayidx276 = getelementptr inbounds double* %call7, i64 %idxprom275
  %151 = load double* %arrayidx276, align 8, !tbaa !4
  store double %151, double* %arrayidx273, align 8, !tbaa !4
  store double %149, double* %arrayidx276, align 8, !tbaa !4
  %add284521 = or i32 %mul271, 1
  %idxprom285 = sext i32 %add284521 to i64
  %arrayidx286 = getelementptr inbounds double* %call7, i64 %idxprom285
  %152 = load double* %arrayidx286, align 8, !tbaa !4
  %add288522 = or i32 %mul274, 1
  %idxprom289 = sext i32 %add288522 to i64
  %arrayidx290 = getelementptr inbounds double* %call7, i64 %idxprom289
  %153 = load double* %arrayidx290, align 8, !tbaa !4
  store double %153, double* %arrayidx286, align 8, !tbaa !4
  store double %152, double* %arrayidx290, align 8, !tbaa !4
  %kk.5 = add nsw i32 %kk.5545, 1
  %cmp269 = icmp slt i32 %kk.5, %add268541
  %indvars.iv.next585 = add i64 %indvars.iv584, 1
  %indvars.iv.next588 = add i64 %indvars.iv587, 1
  br i1 %cmp269, label %for.body270, label %return

if.else306:                                       ; preds = %if.end23
  %154 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call308 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %154, i8* getelementptr inbounds ([72 x i8]* @.str12, i64 0, i64 0), %struct._Chv* %chv, i32 %ii, i32 %jj, i32 %4) #4
  call void @exit(i32 -1) #5
  unreachable

return:                                           ; preds = %if.end193, %if.end238.thread633, %for.body270, %if.end238.thread, %for.body248, %if.then25, %if.end
  ret void
}
