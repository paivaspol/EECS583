define void @Chv_swapRowsAndColumns(%struct._Chv* %chv, i32 %ii, i32 %jj) #0 {
  %ncol = alloca i32, align 4
  %nD = alloca i32, align 4
  %nL = alloca i32, align 4
  %nU = alloca i32, align 4
  %colind = alloca i32*, align 8
  tail call void @llvm.dbg.value(metadata %struct._Chv* %chv, i64 0, metadata !72, metadata !112), !dbg !305
  tail call void @llvm.dbg.value(metadata i32 %ii, i64 0, metadata !73, metadata !112), !dbg !306
  tail call void @llvm.dbg.value(metadata i32 %jj, i64 0, metadata !74, metadata !112), !dbg !307
  %1 = icmp eq %struct._Chv* %chv, null, !dbg !308
  %2 = or i32 %jj, %ii, !dbg !310
  %3 = icmp slt i32 %2, 0, !dbg !310
  %4 = or i1 %1, %3, !dbg !310
  br i1 %4, label %5, label %8, !dbg !310

; <label>:5                                       ; preds = %0
  %6 = load %struct.__sFILE** @__stderrp, align 8, !dbg !311, !tbaa !121
  %7 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %6, i8* getelementptr inbounds ([62 x i8]* @.str9, i64 0, i64 0), %struct._Chv* %chv, i32 %ii, i32 %jj) #5, !dbg !313
  tail call void @exit(i32 -1) #6, !dbg !314
  unreachable, !dbg !314

; <label>:8                                       ; preds = %0
  %9 = icmp eq i32 %ii, %jj, !dbg !315
  br i1 %9, label %.loopexit, label %10, !dbg !317

; <label>:10                                      ; preds = %8
  tail call void @llvm.dbg.value(metadata i32* %nD, i64 0, metadata !84, metadata !112), !dbg !318
  tail call void @llvm.dbg.value(metadata i32* %nL, i64 0, metadata !85, metadata !112), !dbg !319
  tail call void @llvm.dbg.value(metadata i32* %nU, i64 0, metadata !86, metadata !112), !dbg !320
  call void @Chv_dimensions(%struct._Chv* %chv, i32* %nD, i32* %nL, i32* %nU) #5, !dbg !321
  %11 = call double* @Chv_entries(%struct._Chv* %chv) #5, !dbg !322
  call void @llvm.dbg.value(metadata double* %11, i64 0, metadata !76, metadata !112), !dbg !323
  %12 = icmp eq double* %11, null, !dbg !324
  %.pre93 = load i32* %nD, align 4, !dbg !326, !tbaa !136
  br i1 %12, label %._crit_edge92, label %13, !dbg !328

; <label>:13                                      ; preds = %10
  call void @llvm.dbg.value(metadata i32* %nD, i64 0, metadata !84, metadata !112), !dbg !318
  %14 = icmp sgt i32 %.pre93, %ii, !dbg !329
  %15 = icmp sgt i32 %.pre93, %jj, !dbg !330
  %or.cond = and i1 %14, %15, !dbg !331
  br i1 %or.cond, label %18, label %._crit_edge92, !dbg !331

._crit_edge92:                                    ; preds = %10, %13
  %16 = load %struct.__sFILE** @__stderrp, align 8, !dbg !332, !tbaa !121
  call void @llvm.dbg.value(metadata i32* %nD, i64 0, metadata !84, metadata !112), !dbg !318
  %17 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %16, i8* getelementptr inbounds ([85 x i8]* @.str10, i64 0, i64 0), %struct._Chv* %chv, i32 %ii, i32 %jj, double* %11, i32 %.pre93) #5, !dbg !333
  call void @exit(i32 -1) #6, !dbg !334
  unreachable, !dbg !334

; <label>:18                                      ; preds = %13
  %19 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 4, !dbg !335
  %20 = load i32* %19, align 4, !dbg !335, !tbaa !157
  %.off = add i32 %20, -1, !dbg !337
  %switch = icmp ult i32 %.off, 2, !dbg !337
  br i1 %switch, label %24, label %21, !dbg !337

; <label>:21                                      ; preds = %18
  %22 = load %struct.__sFILE** @__stderrp, align 8, !dbg !338, !tbaa !121
  %23 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %22, i8* getelementptr inbounds ([103 x i8]* @.str11, i64 0, i64 0), %struct._Chv* %chv, i32 %ii, i32 %jj, i32 %20) #5, !dbg !340
  call void @exit(i32 -1) #6, !dbg !341
  unreachable, !dbg !341

; <label>:24                                      ; preds = %18
  %25 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 5, !dbg !342
  %26 = load i32* %25, align 4, !dbg !342, !tbaa !167
  switch i32 %26, label %307 [
    i32 2, label %27
    i32 0, label %28
    i32 1, label %28
  ], !dbg !343

; <label>:27                                      ; preds = %24
  call void @Chv_swapRows(%struct._Chv* %chv, i32 %ii, i32 %jj) #7, !dbg !344
  call void @Chv_swapColumns(%struct._Chv* %chv, i32 %ii, i32 %jj) #7, !dbg !346
  br label %.loopexit, !dbg !347

; <label>:28                                      ; preds = %24, %24
  call void @llvm.dbg.value(metadata i32* %ncol, i64 0, metadata !83, metadata !112), !dbg !348
  call void @llvm.dbg.value(metadata i32** %colind, i64 0, metadata !88, metadata !112), !dbg !349
  call void @Chv_columnIndices(%struct._Chv* %chv, i32* %ncol, i32** %colind) #5, !dbg !350
  %29 = sext i32 %ii to i64, !dbg !351
  call void @llvm.dbg.value(metadata i32** %colind, i64 0, metadata !88, metadata !112), !dbg !349
  %30 = load i32** %colind, align 8, !dbg !351, !tbaa !121
  %31 = getelementptr inbounds i32* %30, i64 %29, !dbg !351
  %32 = load i32* %31, align 4, !dbg !351, !tbaa !136
  call void @llvm.dbg.value(metadata i32 %32, i64 0, metadata !79, metadata !112), !dbg !352
  %33 = sext i32 %jj to i64, !dbg !353
  %34 = getelementptr inbounds i32* %30, i64 %33, !dbg !353
  %35 = load i32* %34, align 4, !dbg !353, !tbaa !136
  store i32 %35, i32* %31, align 4, !dbg !354, !tbaa !136
  call void @llvm.dbg.value(metadata i32** %colind, i64 0, metadata !88, metadata !112), !dbg !349
  store i32 %32, i32* %34, align 4, !dbg !355, !tbaa !136
  %36 = icmp sgt i32 %ii, %jj, !dbg !356
  call void @llvm.dbg.value(metadata i32 %ii, i64 0, metadata !79, metadata !112), !dbg !352
  call void @llvm.dbg.value(metadata i32 %jj, i64 0, metadata !73, metadata !112), !dbg !306
  call void @llvm.dbg.value(metadata i32 %ii, i64 0, metadata !74, metadata !112), !dbg !307
  %ii.jj = select i1 %36, i32 %ii, i32 %jj, !dbg !358
  %jj.ii = select i1 %36, i32 %jj, i32 %ii, !dbg !358
  call void @llvm.dbg.value(metadata i32 %jj.ii, i64 0, metadata !78, metadata !112), !dbg !359
  call void @llvm.dbg.value(metadata i32 %ii.jj, i64 0, metadata !81, metadata !112), !dbg !360
  call void @llvm.dbg.value(metadata i32* %nD, i64 0, metadata !84, metadata !112), !dbg !318
  %37 = load i32* %nD, align 4, !dbg !361, !tbaa !136
  call void @llvm.dbg.value(metadata i32* %nU, i64 0, metadata !86, metadata !112), !dbg !320
  %38 = load i32* %nU, align 4, !dbg !362, !tbaa !136
  %39 = add i32 %37, -1, !dbg !363
  %40 = add i32 %39, %38, !dbg !364
  call void @llvm.dbg.value(metadata i32 %40, i64 0, metadata !87, metadata !112), !dbg !365
  %41 = load i32* %19, align 4, !dbg !366, !tbaa !157
  switch i32 %41, label %thread-pre-split [
    i32 1, label %.preheader12
    i32 2, label %.preheader13
  ], !dbg !368

.preheader13:                                     ; preds = %28
  %42 = icmp sgt i32 %jj.ii, 0, !dbg !369
  br i1 %42, label %.lr.ph51, label %thread-pre-split.thread98, !dbg !374

thread-pre-split.thread98:                        ; preds = %.preheader13
  call void @llvm.dbg.value(metadata i32 %ioff.2, i64 0, metadata !77, metadata !112), !dbg !375
  %43 = add i32 %jj.ii, 1, !dbg !376
  call void @llvm.dbg.value(metadata i32 %136, i64 0, metadata !78, metadata !112), !dbg !359
  %44 = add nsw i32 %ii.jj, %40, !dbg !377
  call void @llvm.dbg.value(metadata i32 %137, i64 0, metadata !81, metadata !112), !dbg !360
  br label %.preheader11, !dbg !378

.lr.ph51:                                         ; preds = %.preheader13
  %45 = add i32 %37, %38, !dbg !374
  %46 = add i32 %45, -1, !dbg !374
  %47 = sext i32 %46 to i64
  %48 = xor i32 %jj, -1, !dbg !374
  %49 = xor i32 %ii, -1, !dbg !374
  %50 = icmp sgt i32 %48, %49
  %smax89 = select i1 %50, i32 %48, i32 %49
  %51 = icmp sgt i32 %jj, %ii
  %smax90 = select i1 %51, i32 %jj, i32 %ii
  %52 = add i32 %45, %smax90, !dbg !374
  %53 = add i32 %45, -2, !dbg !374
  %54 = sub i32 -2, %smax89, !dbg !374
  %55 = mul i32 %53, %54, !dbg !374
  %56 = add i32 %52, %55, !dbg !374
  %57 = zext i32 %54 to i33
  %58 = sub i32 -3, %smax89, !dbg !374
  %59 = zext i32 %58 to i33
  %60 = mul i33 %57, %59, !dbg !374
  %61 = lshr i33 %60, 1, !dbg !374
  %62 = trunc i33 %61 to i32
  %63 = add i32 %45, %55, !dbg !374
  %64 = add i32 %63, -2, !dbg !374
  %65 = sub i32 %64, %smax89, !dbg !374
  br label %103, !dbg !374

.preheader12:                                     ; preds = %28
  %66 = icmp sgt i32 %jj.ii, 0, !dbg !379
  br i1 %66, label %.lr.ph43, label %thread-pre-split.thread, !dbg !383

thread-pre-split.thread:                          ; preds = %.preheader12
  call void @llvm.dbg.value(metadata i32 %ioff.2, i64 0, metadata !77, metadata !112), !dbg !375
  %67 = add i32 %jj.ii, 1, !dbg !376
  call void @llvm.dbg.value(metadata i32 %136, i64 0, metadata !78, metadata !112), !dbg !359
  %68 = add nsw i32 %ii.jj, %40, !dbg !377
  call void @llvm.dbg.value(metadata i32 %137, i64 0, metadata !81, metadata !112), !dbg !360
  br label %.preheader9, !dbg !378

.lr.ph43:                                         ; preds = %.preheader12
  %69 = add i32 %37, %38, !dbg !383
  %70 = add i32 %69, -1, !dbg !383
  %71 = sext i32 %70 to i64
  %72 = xor i32 %jj, -1, !dbg !383
  %73 = xor i32 %ii, -1, !dbg !383
  %74 = icmp sgt i32 %72, %73
  %smax85 = select i1 %74, i32 %72, i32 %73
  %75 = icmp sgt i32 %jj, %ii
  %smax86 = select i1 %75, i32 %jj, i32 %ii
  %76 = add i32 %69, %smax86, !dbg !383
  %77 = add i32 %69, -2, !dbg !383
  %78 = sub i32 -2, %smax85, !dbg !383
  %79 = mul i32 %77, %78, !dbg !383
  %80 = add i32 %76, %79, !dbg !383
  %81 = zext i32 %78 to i33
  %82 = sub i32 -3, %smax85, !dbg !383
  %83 = zext i32 %82 to i33
  %84 = mul i33 %81, %83, !dbg !383
  %85 = lshr i33 %84, 1, !dbg !383
  %86 = trunc i33 %85 to i32
  %87 = add i32 %69, %79, !dbg !383
  %88 = add i32 %87, -2, !dbg !383
  %89 = sub i32 %88, %smax85, !dbg !383
  br label %90, !dbg !383

; <label>:90                                      ; preds = %90, %.lr.ph43
  %indvars.iv83 = phi i64 [ %71, %.lr.ph43 ], [ %indvars.iv.next84, %90 ]
  %ioff.042 = phi i32 [ %jj.ii, %.lr.ph43 ], [ %100, %90 ]
  %joff.041 = phi i32 [ %ii.jj, %.lr.ph43 ], [ %101, %90 ]
  %kk.039 = phi i32 [ 0, %.lr.ph43 ], [ %102, %90 ]
  %91 = sext i32 %ioff.042 to i64, !dbg !384
  %92 = getelementptr inbounds double* %11, i64 %91, !dbg !384
  %93 = bitcast double* %92 to i64*, !dbg !384
  %94 = load i64* %93, align 8, !dbg !384, !tbaa !219
  %95 = sext i32 %joff.041 to i64, !dbg !386
  %96 = getelementptr inbounds double* %11, i64 %95, !dbg !386
  %97 = bitcast double* %96 to i64*, !dbg !386
  %98 = load i64* %97, align 8, !dbg !386, !tbaa !219
  store i64 %98, i64* %93, align 8, !dbg !387, !tbaa !219
  store i64 %94, i64* %97, align 8, !dbg !388, !tbaa !219
  %99 = trunc i64 %indvars.iv83 to i32, !dbg !389
  %100 = add nsw i32 %ioff.042, %99, !dbg !389
  call void @llvm.dbg.value(metadata i32 %100, i64 0, metadata !78, metadata !112), !dbg !359
  %101 = add nsw i32 %joff.041, %99, !dbg !390
  call void @llvm.dbg.value(metadata i32 %101, i64 0, metadata !81, metadata !112), !dbg !360
  %102 = add nuw nsw i32 %kk.039, 1, !dbg !391
  call void @llvm.dbg.value(metadata i32 %102, i64 0, metadata !82, metadata !112), !dbg !392
  %indvars.iv.next84 = add nsw i64 %indvars.iv83, -1, !dbg !383
  %exitcond = icmp eq i32 %kk.039, %78, !dbg !383
  br i1 %exitcond, label %.thread-pre-split.loopexit_crit_edge, label %90, !dbg !383

; <label>:103                                     ; preds = %103, %.lr.ph51
  %indvars.iv87 = phi i64 [ %47, %.lr.ph51 ], [ %indvars.iv.next88, %103 ]
  %ioff.150 = phi i32 [ %jj.ii, %.lr.ph51 ], [ %125, %103 ]
  %joff.149 = phi i32 [ %ii.jj, %.lr.ph51 ], [ %126, %103 ]
  %kk.147 = phi i32 [ 0, %.lr.ph51 ], [ %127, %103 ]
  %104 = shl nsw i32 %ioff.150, 1, !dbg !393
  %105 = sext i32 %104 to i64, !dbg !395
  %106 = getelementptr inbounds double* %11, i64 %105, !dbg !395
  %107 = bitcast double* %106 to i64*, !dbg !395
  %108 = load i64* %107, align 8, !dbg !395, !tbaa !219
  %109 = shl nsw i32 %joff.149, 1, !dbg !396
  %110 = sext i32 %109 to i64, !dbg !397
  %111 = getelementptr inbounds double* %11, i64 %110, !dbg !397
  %112 = bitcast double* %111 to i64*, !dbg !397
  %113 = load i64* %112, align 8, !dbg !397, !tbaa !219
  store i64 %113, i64* %107, align 8, !dbg !398, !tbaa !219
  store i64 %108, i64* %112, align 8, !dbg !399, !tbaa !219
  %114 = or i32 %104, 1, !dbg !400
  %115 = sext i32 %114 to i64, !dbg !401
  %116 = getelementptr inbounds double* %11, i64 %115, !dbg !401
  %117 = bitcast double* %116 to i64*, !dbg !401
  %118 = load i64* %117, align 8, !dbg !401, !tbaa !219
  %119 = or i32 %109, 1, !dbg !402
  %120 = sext i32 %119 to i64, !dbg !403
  %121 = getelementptr inbounds double* %11, i64 %120, !dbg !403
  %122 = bitcast double* %121 to i64*, !dbg !403
  %123 = load i64* %122, align 8, !dbg !403, !tbaa !219
  store i64 %123, i64* %117, align 8, !dbg !404, !tbaa !219
  store i64 %118, i64* %122, align 8, !dbg !405, !tbaa !219
  %124 = trunc i64 %indvars.iv87 to i32, !dbg !406
  %125 = add nsw i32 %ioff.150, %124, !dbg !406
  call void @llvm.dbg.value(metadata i32 %125, i64 0, metadata !78, metadata !112), !dbg !359
  %126 = add nsw i32 %joff.149, %124, !dbg !407
  call void @llvm.dbg.value(metadata i32 %126, i64 0, metadata !81, metadata !112), !dbg !360
  %127 = add nuw nsw i32 %kk.147, 1, !dbg !408
  call void @llvm.dbg.value(metadata i32 %127, i64 0, metadata !82, metadata !112), !dbg !392
  %indvars.iv.next88 = add nsw i64 %indvars.iv87, -1, !dbg !374
  %exitcond91 = icmp eq i32 %kk.147, %54, !dbg !374
  br i1 %exitcond91, label %.thread-pre-split.loopexit14_crit_edge, label %103, !dbg !374

.thread-pre-split.loopexit_crit_edge:             ; preds = %90
  %128 = add i32 %69, %smax85, !dbg !383
  %129 = add i32 %80, -1, !dbg !383
  %130 = sub i32 %129, %86, !dbg !383
  %131 = sub i32 %89, %86, !dbg !383
  br label %thread-pre-split, !dbg !383

.thread-pre-split.loopexit14_crit_edge:           ; preds = %103
  %132 = add i32 %45, %smax89, !dbg !374
  %133 = add i32 %56, -1, !dbg !374
  %134 = sub i32 %133, %62, !dbg !374
  %135 = sub i32 %65, %62, !dbg !374
  br label %thread-pre-split, !dbg !374

thread-pre-split:                                 ; preds = %.thread-pre-split.loopexit_crit_edge, %.thread-pre-split.loopexit14_crit_edge, %28
  %stride.2 = phi i32 [ %40, %28 ], [ %128, %.thread-pre-split.loopexit_crit_edge ], [ %132, %.thread-pre-split.loopexit14_crit_edge ]
  %joff.2 = phi i32 [ %ii.jj, %28 ], [ %130, %.thread-pre-split.loopexit_crit_edge ], [ %134, %.thread-pre-split.loopexit14_crit_edge ]
  %ioff.2 = phi i32 [ %jj.ii, %28 ], [ %131, %.thread-pre-split.loopexit_crit_edge ], [ %135, %.thread-pre-split.loopexit14_crit_edge ]
  call void @llvm.dbg.value(metadata i32 %ioff.2, i64 0, metadata !77, metadata !112), !dbg !375
  %136 = add i32 %ioff.2, 1, !dbg !376
  call void @llvm.dbg.value(metadata i32 %136, i64 0, metadata !78, metadata !112), !dbg !359
  %137 = add nsw i32 %joff.2, %stride.2, !dbg !377
  call void @llvm.dbg.value(metadata i32 %137, i64 0, metadata !81, metadata !112), !dbg !360
  switch i32 %41, label %.loopexit10 [
    i32 1, label %.preheader9
    i32 2, label %.preheader11
  ], !dbg !378

.preheader11:                                     ; preds = %thread-pre-split.thread98, %thread-pre-split
  %138 = phi i32 [ %44, %thread-pre-split.thread98 ], [ %137, %thread-pre-split ]
  %139 = phi i32 [ %43, %thread-pre-split.thread98 ], [ %136, %thread-pre-split ]
  %ioff.2101 = phi i32 [ %jj.ii, %thread-pre-split.thread98 ], [ %ioff.2, %thread-pre-split ]
  %joff.2100 = phi i32 [ %ii.jj, %thread-pre-split.thread98 ], [ %joff.2, %thread-pre-split ]
  %stride.299 = phi i32 [ %40, %thread-pre-split.thread98 ], [ %stride.2, %thread-pre-split ]
  %kk.331 = add nsw i32 %jj.ii, 1, !dbg !409
  %140 = icmp slt i32 %kk.331, %ii.jj, !dbg !410
  %141 = load i32* %25, align 4, !dbg !411, !tbaa !167
  br i1 %140, label %.lr.ph36, label %.preheader11._crit_edge, !dbg !413

.lr.ph36:                                         ; preds = %.preheader11
  %142 = icmp eq i32 %141, 0, !dbg !411
  %143 = sext i32 %139 to i64
  %144 = add i32 %stride.299, -1, !dbg !413
  %145 = sext i32 %144 to i64
  %146 = icmp sgt i32 %jj, %ii
  %smax81 = select i1 %146, i32 %jj, i32 %ii
  %147 = xor i32 %jj, -1, !dbg !413
  %148 = xor i32 %ii, -1, !dbg !413
  %149 = icmp sgt i32 %147, %148
  %smax82 = select i1 %149, i32 %147, i32 %148
  %150 = add i32 %smax81, %smax82, !dbg !413
  %151 = add i32 %150, -1, !dbg !413
  %152 = add i32 %stride.299, -2, !dbg !413
  %153 = mul i32 %151, %152, !dbg !413
  %154 = add i32 %joff.2100, %153, !dbg !413
  %155 = shl i32 %stride.299, 1, !dbg !413
  %156 = add i32 %154, %155, !dbg !413
  %157 = zext i32 %151 to i33
  %158 = add i32 %150, -2, !dbg !413
  %159 = zext i32 %158 to i33
  %160 = mul i33 %157, %159, !dbg !413
  %161 = lshr i33 %160, 1, !dbg !413
  %162 = trunc i33 %161 to i32
  %163 = add i32 %ioff.2101, %smax81, !dbg !413
  %164 = add i32 %163, %smax82, !dbg !413
  br label %201, !dbg !413

.preheader9:                                      ; preds = %thread-pre-split.thread, %thread-pre-split
  %165 = phi i32 [ %68, %thread-pre-split.thread ], [ %137, %thread-pre-split ]
  %166 = phi i32 [ %67, %thread-pre-split.thread ], [ %136, %thread-pre-split ]
  %ioff.296 = phi i32 [ %jj.ii, %thread-pre-split.thread ], [ %ioff.2, %thread-pre-split ]
  %joff.295 = phi i32 [ %ii.jj, %thread-pre-split.thread ], [ %joff.2, %thread-pre-split ]
  %stride.294 = phi i32 [ %40, %thread-pre-split.thread ], [ %stride.2, %thread-pre-split ]
  %kk.224 = add nsw i32 %jj.ii, 1, !dbg !414
  %167 = icmp slt i32 %kk.224, %ii.jj, !dbg !415
  br i1 %167, label %.lr.ph29, label %thread-pre-split5.thread, !dbg !416

.lr.ph29:                                         ; preds = %.preheader9
  %168 = sext i32 %166 to i64
  %169 = add i32 %stride.294, -1, !dbg !416
  %170 = sext i32 %169 to i64
  %171 = icmp sgt i32 %jj, %ii
  %smax = select i1 %171, i32 %jj, i32 %ii
  %172 = xor i32 %jj, -1, !dbg !416
  %173 = xor i32 %ii, -1, !dbg !416
  %174 = icmp sgt i32 %172, %173
  %smax76 = select i1 %174, i32 %172, i32 %173
  %175 = add i32 %smax, %smax76, !dbg !416
  %176 = add i32 %175, -1, !dbg !416
  %177 = add i32 %stride.294, -2, !dbg !416
  %178 = mul i32 %176, %177, !dbg !416
  %179 = add i32 %joff.295, %178, !dbg !416
  %180 = shl i32 %stride.294, 1, !dbg !416
  %181 = add i32 %179, %180, !dbg !416
  %182 = zext i32 %176 to i33
  %183 = add i32 %175, -2, !dbg !416
  %184 = zext i32 %183 to i33
  %185 = mul i33 %182, %184, !dbg !416
  %186 = lshr i33 %185, 1, !dbg !416
  %187 = trunc i33 %186 to i32
  %188 = add i32 %ioff.296, %smax, !dbg !416
  %189 = add i32 %188, %smax76, !dbg !416
  br label %190, !dbg !416

; <label>:190                                     ; preds = %.lr.ph29, %190
  %indvars.iv74 = phi i64 [ %170, %.lr.ph29 ], [ %indvars.iv.next75, %190 ]
  %indvars.iv72 = phi i64 [ %168, %.lr.ph29 ], [ %indvars.iv.next73, %190 ]
  %kk.228 = phi i32 [ %kk.224, %.lr.ph29 ], [ %kk.2, %190 ]
  %joff.326 = phi i32 [ %165, %.lr.ph29 ], [ %199, %190 ]
  %191 = getelementptr inbounds double* %11, i64 %indvars.iv72, !dbg !417
  %192 = bitcast double* %191 to i64*, !dbg !417
  %193 = load i64* %192, align 8, !dbg !417, !tbaa !219
  %194 = sext i32 %joff.326 to i64, !dbg !418
  %195 = getelementptr inbounds double* %11, i64 %194, !dbg !418
  %196 = bitcast double* %195 to i64*, !dbg !418
  %197 = load i64* %196, align 8, !dbg !418, !tbaa !219
  store i64 %197, i64* %192, align 8, !dbg !419, !tbaa !219
  store i64 %193, i64* %196, align 8, !dbg !420, !tbaa !219
  %198 = trunc i64 %indvars.iv74 to i32, !dbg !421
  %199 = add nsw i32 %joff.326, %198, !dbg !421
  call void @llvm.dbg.value(metadata i32 %199, i64 0, metadata !81, metadata !112), !dbg !360
  %kk.2 = add nsw i32 %kk.228, 1, !dbg !414
  %200 = icmp slt i32 %kk.2, %ii.jj, !dbg !415
  %indvars.iv.next73 = add nsw i64 %indvars.iv72, 1, !dbg !416
  %indvars.iv.next75 = add nsw i64 %indvars.iv74, -1, !dbg !416
  br i1 %200, label %190, label %..loopexit10_crit_edge, !dbg !416

; <label>:201                                     ; preds = %.lr.ph36, %225
  %indvars.iv79 = phi i64 [ %145, %.lr.ph36 ], [ %indvars.iv.next80, %225 ]
  %indvars.iv77 = phi i64 [ %143, %.lr.ph36 ], [ %indvars.iv.next78, %225 ]
  %kk.335 = phi i32 [ %kk.331, %.lr.ph36 ], [ %kk.3, %225 ]
  %joff.433 = phi i32 [ %138, %.lr.ph36 ], [ %227, %225 ]
  %202 = trunc i64 %indvars.iv77 to i32, !dbg !422
  %203 = shl nsw i32 %202, 1, !dbg !422
  %204 = sext i32 %203 to i64, !dbg !423
  %205 = getelementptr inbounds double* %11, i64 %204, !dbg !423
  %206 = bitcast double* %205 to i64*, !dbg !423
  %207 = load i64* %206, align 8, !dbg !423, !tbaa !219
  %208 = or i32 %203, 1, !dbg !424
  %209 = sext i32 %208 to i64, !dbg !425
  %210 = getelementptr inbounds double* %11, i64 %209, !dbg !425
  %211 = load double* %210, align 8, !dbg !425, !tbaa !219
  call void @llvm.dbg.value(metadata double %211, i64 0, metadata !99, metadata !112), !dbg !426
  %212 = shl nsw i32 %joff.433, 1, !dbg !427
  %213 = sext i32 %212 to i64, !dbg !428
  %214 = getelementptr inbounds double* %11, i64 %213, !dbg !428
  %215 = bitcast double* %214 to i64*, !dbg !428
  %216 = load i64* %215, align 8, !dbg !428, !tbaa !219
  %217 = or i32 %212, 1, !dbg !429
  %218 = sext i32 %217 to i64, !dbg !430
  %219 = getelementptr inbounds double* %11, i64 %218, !dbg !430
  %220 = load double* %219, align 8, !dbg !430, !tbaa !219
  call void @llvm.dbg.value(metadata double %220, i64 0, metadata !105, metadata !112), !dbg !431
  store i64 %216, i64* %206, align 8, !dbg !432, !tbaa !219
  store i64 %207, i64* %215, align 8, !dbg !433, !tbaa !219
  br i1 %142, label %221, label %222, !dbg !434

; <label>:221                                     ; preds = %201
  store double %220, double* %210, align 8, !dbg !435, !tbaa !219
  br label %225, !dbg !437

; <label>:222                                     ; preds = %201
  %223 = fsub double -0.000000e+00, %220, !dbg !438
  store double %223, double* %210, align 8, !dbg !440, !tbaa !219
  %224 = fsub double -0.000000e+00, %211, !dbg !441
  br label %225

; <label>:225                                     ; preds = %222, %221
  %storemerge = phi double [ %224, %222 ], [ %211, %221 ]
  store double %storemerge, double* %219, align 8, !dbg !442, !tbaa !219
  %226 = trunc i64 %indvars.iv79 to i32, !dbg !443
  %227 = add nsw i32 %joff.433, %226, !dbg !443
  call void @llvm.dbg.value(metadata i32 %227, i64 0, metadata !81, metadata !112), !dbg !360
  %kk.3 = add nsw i32 %kk.335, 1, !dbg !409
  %228 = icmp slt i32 %kk.3, %ii.jj, !dbg !410
  %indvars.iv.next78 = add nsw i64 %indvars.iv77, 1, !dbg !413
  %indvars.iv.next80 = add nsw i64 %indvars.iv79, -1, !dbg !413
  br i1 %228, label %201, label %._crit_edge, !dbg !413

._crit_edge:                                      ; preds = %225
  %229 = add i32 %156, -1, !dbg !413
  %230 = sub i32 %229, %162, !dbg !413
  %231 = add i32 %164, 1, !dbg !413
  br label %.preheader11._crit_edge, !dbg !413

.preheader11._crit_edge:                          ; preds = %.preheader11, %._crit_edge
  %ioff.4.lcssa = phi i32 [ %231, %._crit_edge ], [ %139, %.preheader11 ]
  %joff.4.lcssa = phi i32 [ %230, %._crit_edge ], [ %138, %.preheader11 ]
  %232 = icmp eq i32 %141, 1, !dbg !444
  br i1 %232, label %233, label %.loopexit10, !dbg !446

; <label>:233                                     ; preds = %.preheader11._crit_edge
  %234 = shl nsw i32 %ioff.4.lcssa, 1, !dbg !447
  %235 = or i32 %234, 1, !dbg !449
  %236 = sext i32 %235 to i64, !dbg !450
  %237 = getelementptr inbounds double* %11, i64 %236, !dbg !450
  %238 = load double* %237, align 8, !dbg !450, !tbaa !219
  %239 = fsub double -0.000000e+00, %238, !dbg !451
  store double %239, double* %237, align 8, !dbg !452, !tbaa !219
  br label %.loopexit10, !dbg !453

..loopexit10_crit_edge:                           ; preds = %190
  %240 = add i32 %181, -1, !dbg !416
  %241 = sub i32 %240, %187, !dbg !416
  %242 = add i32 %189, 1, !dbg !416
  br label %.loopexit10, !dbg !416

.loopexit10:                                      ; preds = %..loopexit10_crit_edge, %thread-pre-split, %233, %.preheader11._crit_edge
  %ioff.297 = phi i32 [ %ioff.2101, %233 ], [ %ioff.2101, %.preheader11._crit_edge ], [ %ioff.2, %thread-pre-split ], [ %ioff.296, %..loopexit10_crit_edge ]
  %joff.5 = phi i32 [ %joff.4.lcssa, %233 ], [ %joff.4.lcssa, %.preheader11._crit_edge ], [ %137, %thread-pre-split ], [ %241, %..loopexit10_crit_edge ]
  %ioff.5 = phi i32 [ %ioff.4.lcssa, %233 ], [ %ioff.4.lcssa, %.preheader11._crit_edge ], [ %136, %thread-pre-split ], [ %242, %..loopexit10_crit_edge ]
  call void @llvm.dbg.value(metadata i32 %joff.5, i64 0, metadata !80, metadata !112), !dbg !454
  switch i32 %41, label %.loopexit [
    i32 1, label %thread-pre-split5.thread
    i32 2, label %thread-pre-split5.thread111
  ], !dbg !455

thread-pre-split5.thread:                         ; preds = %.loopexit10, %.preheader9
  %ioff.5107 = phi i32 [ %ioff.5, %.loopexit10 ], [ %166, %.preheader9 ]
  %joff.5103 = phi i32 [ %joff.5, %.loopexit10 ], [ %165, %.preheader9 ]
  %ioff.297102 = phi i32 [ %ioff.297, %.loopexit10 ], [ %ioff.296, %.preheader9 ]
  %243 = sext i32 %ioff.297102 to i64, !dbg !456
  %244 = getelementptr inbounds double* %11, i64 %243, !dbg !456
  %245 = bitcast double* %244 to i64*, !dbg !456
  %246 = load i64* %245, align 8, !dbg !456, !tbaa !219
  %247 = sext i32 %joff.5103 to i64, !dbg !459
  %248 = getelementptr inbounds double* %11, i64 %247, !dbg !459
  %249 = bitcast double* %248 to i64*, !dbg !459
  %250 = load i64* %249, align 8, !dbg !459, !tbaa !219
  store i64 %250, i64* %245, align 8, !dbg !460, !tbaa !219
  store i64 %246, i64* %249, align 8, !dbg !461, !tbaa !219
  %kk.415 = add nsw i32 %ii.jj, 1, !dbg !462
  call void @llvm.dbg.value(metadata i32* %nD, i64 0, metadata !84, metadata !112), !dbg !318
  call void @llvm.dbg.value(metadata i32* %nU, i64 0, metadata !86, metadata !112), !dbg !320
  %251 = add nsw i32 %38, %37, !dbg !466
  %252 = icmp slt i32 %kk.415, %251, !dbg !468
  br i1 %252, label %.lr.ph, label %.loopexit, !dbg !469

thread-pre-split5.thread111:                      ; preds = %.loopexit10
  %253 = shl nsw i32 %ioff.297, 1, !dbg !470
  %254 = sext i32 %253 to i64, !dbg !473
  %255 = getelementptr inbounds double* %11, i64 %254, !dbg !473
  %256 = shl nsw i32 %joff.5, 1, !dbg !474
  %257 = sext i32 %256 to i64, !dbg !475
  %258 = getelementptr inbounds double* %11, i64 %257, !dbg !475
  %259 = bitcast double* %255 to <2 x i64>*, !dbg !473
  %260 = load <2 x i64>* %259, align 8, !dbg !473, !tbaa !219
  %261 = bitcast double* %258 to <2 x i64>*, !dbg !475
  %262 = load <2 x i64>* %261, align 8, !dbg !475, !tbaa !219
  %263 = bitcast double* %255 to <2 x i64>*, !dbg !476
  store <2 x i64> %262, <2 x i64>* %263, align 8, !dbg !476, !tbaa !219
  %264 = bitcast double* %258 to <2 x i64>*, !dbg !477
  store <2 x i64> %260, <2 x i64>* %264, align 8, !dbg !477, !tbaa !219
  %kk.519 = add nsw i32 %ii.jj, 1, !dbg !478
  call void @llvm.dbg.value(metadata i32* %nD, i64 0, metadata !84, metadata !112), !dbg !318
  call void @llvm.dbg.value(metadata i32* %nU, i64 0, metadata !86, metadata !112), !dbg !320
  %265 = add nsw i32 %38, %37, !dbg !482
  %266 = icmp slt i32 %kk.519, %265, !dbg !484
  br i1 %266, label %.lr.ph23, label %.loopexit, !dbg !485

.lr.ph23:                                         ; preds = %thread-pre-split5.thread111
  %267 = add i32 %ioff.5, 1, !dbg !485
  %268 = sext i32 %267 to i64
  %269 = add i32 %joff.5, 1, !dbg !485
  %270 = sext i32 %269 to i64
  br label %283, !dbg !485

.lr.ph:                                           ; preds = %thread-pre-split5.thread
  %271 = add i32 %ioff.5107, 1, !dbg !469
  %272 = sext i32 %271 to i64
  %273 = add i32 %joff.5103, 1, !dbg !469
  %274 = sext i32 %273 to i64
  br label %275, !dbg !469

; <label>:275                                     ; preds = %.lr.ph, %275
  %indvars.iv64 = phi i64 [ %274, %.lr.ph ], [ %indvars.iv.next65, %275 ]
  %indvars.iv = phi i64 [ %272, %.lr.ph ], [ %indvars.iv.next, %275 ]
  %kk.418 = phi i32 [ %kk.415, %.lr.ph ], [ %kk.4, %275 ]
  %276 = getelementptr inbounds double* %11, i64 %indvars.iv, !dbg !486
  %277 = bitcast double* %276 to i64*, !dbg !486
  %278 = load i64* %277, align 8, !dbg !486, !tbaa !219
  %279 = getelementptr inbounds double* %11, i64 %indvars.iv64, !dbg !488
  %280 = bitcast double* %279 to i64*, !dbg !488
  %281 = load i64* %280, align 8, !dbg !488, !tbaa !219
  store i64 %281, i64* %277, align 8, !dbg !489, !tbaa !219
  store i64 %278, i64* %280, align 8, !dbg !490, !tbaa !219
  %kk.4 = add nsw i32 %kk.418, 1, !dbg !462
  call void @llvm.dbg.value(metadata i32* %nD, i64 0, metadata !84, metadata !112), !dbg !318
  call void @llvm.dbg.value(metadata i32* %nU, i64 0, metadata !86, metadata !112), !dbg !320
  %282 = icmp slt i32 %kk.4, %251, !dbg !468
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !469
  %indvars.iv.next65 = add nsw i64 %indvars.iv64, 1, !dbg !469
  br i1 %282, label %275, label %.loopexit, !dbg !469

; <label>:283                                     ; preds = %.lr.ph23, %283
  %indvars.iv70 = phi i64 [ %270, %.lr.ph23 ], [ %indvars.iv.next71, %283 ]
  %indvars.iv68 = phi i64 [ %268, %.lr.ph23 ], [ %indvars.iv.next69, %283 ]
  %kk.522 = phi i32 [ %kk.519, %.lr.ph23 ], [ %kk.5, %283 ]
  %284 = trunc i64 %indvars.iv68 to i32, !dbg !491
  %285 = shl nsw i32 %284, 1, !dbg !491
  %286 = sext i32 %285 to i64, !dbg !493
  %287 = getelementptr inbounds double* %11, i64 %286, !dbg !493
  %288 = bitcast double* %287 to i64*, !dbg !493
  %289 = load i64* %288, align 8, !dbg !493, !tbaa !219
  %290 = trunc i64 %indvars.iv70 to i32, !dbg !494
  %291 = shl nsw i32 %290, 1, !dbg !494
  %292 = sext i32 %291 to i64, !dbg !495
  %293 = getelementptr inbounds double* %11, i64 %292, !dbg !495
  %294 = bitcast double* %293 to i64*, !dbg !495
  %295 = load i64* %294, align 8, !dbg !495, !tbaa !219
  store i64 %295, i64* %288, align 8, !dbg !496, !tbaa !219
  store i64 %289, i64* %294, align 8, !dbg !497, !tbaa !219
  %296 = or i32 %285, 1, !dbg !498
  %297 = sext i32 %296 to i64, !dbg !499
  %298 = getelementptr inbounds double* %11, i64 %297, !dbg !499
  %299 = bitcast double* %298 to i64*, !dbg !499
  %300 = load i64* %299, align 8, !dbg !499, !tbaa !219
  %301 = or i32 %291, 1, !dbg !500
  %302 = sext i32 %301 to i64, !dbg !501
  %303 = getelementptr inbounds double* %11, i64 %302, !dbg !501
  %304 = bitcast double* %303 to i64*, !dbg !501
  %305 = load i64* %304, align 8, !dbg !501, !tbaa !219
  store i64 %305, i64* %299, align 8, !dbg !502, !tbaa !219
  store i64 %300, i64* %304, align 8, !dbg !503, !tbaa !219
  %kk.5 = add nsw i32 %kk.522, 1, !dbg !478
  call void @llvm.dbg.value(metadata i32* %nD, i64 0, metadata !84, metadata !112), !dbg !318
  call void @llvm.dbg.value(metadata i32* %nU, i64 0, metadata !86, metadata !112), !dbg !320
  %306 = icmp slt i32 %kk.5, %265, !dbg !484
  %indvars.iv.next69 = add nsw i64 %indvars.iv68, 1, !dbg !485
  %indvars.iv.next71 = add nsw i64 %indvars.iv70, 1, !dbg !485
  br i1 %306, label %283, label %.loopexit, !dbg !485

; <label>:307                                     ; preds = %24
  %308 = load %struct.__sFILE** @__stderrp, align 8, !dbg !504, !tbaa !121
  %309 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %308, i8* getelementptr inbounds ([72 x i8]* @.str12, i64 0, i64 0), %struct._Chv* %chv, i32 %ii, i32 %jj, i32 %26) #5, !dbg !506
  call void @exit(i32 -1) #6, !dbg !507
  unreachable, !dbg !507

.loopexit:                                        ; preds = %283, %275, %.loopexit10, %thread-pre-split5.thread111, %thread-pre-split5.thread, %27, %8
  ret void, !dbg !508
}
