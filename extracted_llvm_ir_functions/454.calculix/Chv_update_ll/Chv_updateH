define void @Chv_updateH(%struct._Chv* %chvT, %struct._SubMtx* %mtxD, %struct._SubMtx* %mtxU, %struct._DV* %tempDV) #0 {
entry:
  %ncolT = alloca i32, align 4
  %ncolU = alloca i32, align 4
  %colindT = alloca i32*, align 8
  %colindU = alloca i32*, align 8
  %isum = alloca double, align 8
  %rsum = alloca double, align 8
  %sums = alloca [18 x double], align 16
  %entU = alloca double*, align 8
  %inc1 = alloca i32, align 4
  %inc2 = alloca i32, align 4
  %nrowU = alloca i32, align 4
  %isum769 = alloca double, align 8
  %rsum770 = alloca double, align 8
  %entU773 = alloca double*, align 8
  %nentU = alloca i32, align 4
  %indU = alloca i32*, align 8
  %sizes = alloca i32*, align 8
  %cmp = icmp eq %struct._Chv* %chvT, null
  %cmp1 = icmp eq %struct._SubMtx* %mtxD, null
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp eq %struct._SubMtx* %mtxU, null
  %or.cond1464 = or i1 %or.cond, %cmp3
  %cmp5 = icmp eq %struct._DV* %tempDV, null
  %or.cond1465 = or i1 %or.cond1464, %cmp5
  br i1 %or.cond1465, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([54 x i8]* @.str, i64 0, i64 0), %struct._Chv* %chvT, %struct._SubMtx* %mtxD, %struct._SubMtx* %mtxU, %struct._DV* %tempDV) #5
  call void @exit(i32 -1) #6
  unreachable

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct._Chv* %chvT, i64 0, i32 4
  %1 = load i32* %type, align 4, !tbaa !3
  %cmp6 = icmp eq i32 %1, 2
  br i1 %cmp6, label %if.end9, label %if.then7

if.then7:                                         ; preds = %if.end
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([75 x i8]* @.str1, i64 0, i64 0), %struct._Chv* %chvT, %struct._SubMtx* %mtxD, %struct._SubMtx* %mtxU, %struct._DV* %tempDV) #5
  call void @exit(i32 -1) #6
  unreachable

if.end9:                                          ; preds = %if.end
  %type10 = getelementptr inbounds %struct._SubMtx* %mtxD, i64 0, i32 0
  %3 = load i32* %type10, align 4, !tbaa !3
  %cmp11 = icmp eq i32 %3, 2
  br i1 %cmp11, label %if.end14, label %if.then12

if.then12:                                        ; preds = %if.end9
  %4 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([75 x i8]* @.str2, i64 0, i64 0), %struct._Chv* %chvT, %struct._SubMtx* %mtxD, %struct._SubMtx* %mtxU, %struct._DV* %tempDV) #5
  call void @exit(i32 -1) #6
  unreachable

if.end14:                                         ; preds = %if.end9
  %type15 = getelementptr inbounds %struct._SubMtx* %mtxU, i64 0, i32 0
  %5 = load i32* %type15, align 4, !tbaa !3
  %cmp16 = icmp eq i32 %5, 2
  br i1 %cmp16, label %if.end19, label %if.then17

if.then17:                                        ; preds = %if.end14
  %6 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([75 x i8]* @.str3, i64 0, i64 0), %struct._Chv* %chvT, %struct._SubMtx* %mtxD, %struct._SubMtx* %mtxU, %struct._DV* %tempDV) #5
  call void @exit(i32 -1) #6
  unreachable

if.end19:                                         ; preds = %if.end14
  call void @Chv_columnIndices(%struct._Chv* %chvT, i32* %ncolT, i32** %colindT) #5
  call void @SubMtx_columnIndices(%struct._SubMtx* %mtxU, i32* %ncolU, i32** %colindU) #5
  %7 = load i32** %colindT, align 8, !tbaa !0
  %8 = load i32* %7, align 4, !tbaa !3
  %nD = getelementptr inbounds %struct._Chv* %chvT, i64 0, i32 1
  %9 = load i32* %nD, align 4, !tbaa !3
  %sub = add nsw i32 %9, -1
  %idxprom = sext i32 %sub to i64
  %arrayidx20 = getelementptr inbounds i32* %7, i64 %idxprom
  %10 = load i32* %arrayidx20, align 4, !tbaa !3
  %11 = load i32* %ncolU, align 4, !tbaa !3
  %cmp211536 = icmp sgt i32 %11, 0
  br i1 %cmp211536, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end19
  %12 = load i32** %colindU, align 8, !tbaa !0
  br label %for.body

for.cond:                                         ; preds = %for.body
  %13 = trunc i64 %indvars.iv.next1599 to i32
  %cmp21 = icmp slt i32 %13, %11
  br i1 %cmp21, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %indvars.iv1598 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next1599, %for.cond ]
  %jcolU.01537 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.cond ]
  %arrayidx23 = getelementptr inbounds i32* %12, i64 %indvars.iv1598
  %14 = load i32* %arrayidx23, align 4, !tbaa !3
  %cmp24 = icmp sgt i32 %8, %14
  %cmp27 = icmp sgt i32 %14, %10
  %or.cond1466 = or i1 %cmp24, %cmp27
  %indvars.iv.next1599 = add i64 %indvars.iv1598, 1
  %inc = add nsw i32 %jcolU.01537, 1
  br i1 %or.cond1466, label %for.cond, label %for.end

for.end:                                          ; preds = %for.cond, %for.body, %if.end19
  %jcolU.0.lcssa = phi i32 [ 0, %if.end19 ], [ %jcolU.01537, %for.body ], [ %inc, %for.cond ]
  %cmp30 = icmp eq i32 %jcolU.0.lcssa, %11
  br i1 %cmp30, label %return, label %for.cond33.preheader

for.cond33.preheader:                             ; preds = %for.end
  %cmp341531 = icmp slt i32 %jcolU.0.lcssa, %11
  br i1 %cmp341531, label %for.body35.lr.ph, label %for.end57

for.body35.lr.ph:                                 ; preds = %for.cond33.preheader
  %15 = load i32** %colindU, align 8, !tbaa !0
  %16 = sext i32 %jcolU.0.lcssa to i64
  br label %for.body35

for.cond33:                                       ; preds = %for.body35
  %inc42 = add nsw i32 %jcolU.11533, 1
  %17 = trunc i64 %indvars.iv.next1595 to i32
  %cmp34 = icmp slt i32 %17, %11
  %18 = trunc i64 %indvars.iv1594 to i32
  br i1 %cmp34, label %for.body35, label %for.cond44.preheader

for.cond44.preheader:                             ; preds = %for.cond33, %for.body35
  %lastInU.0.lcssa = phi i32 [ %lastInU.01532, %for.body35 ], [ %jcolU.11533, %for.cond33 ]
  br i1 %cmp341531, label %while.cond.preheader.lr.ph, label %for.end57

while.cond.preheader.lr.ph:                       ; preds = %for.cond44.preheader
  %19 = load i32** %colindU, align 8, !tbaa !0
  %20 = sext i32 %jcolU.0.lcssa to i64
  br label %while.cond.preheader

for.body35:                                       ; preds = %for.body35.lr.ph, %for.cond33
  %indvars.iv1594 = phi i64 [ %16, %for.body35.lr.ph ], [ %indvars.iv.next1595, %for.cond33 ]
  %jcolU.11533 = phi i32 [ %jcolU.0.lcssa, %for.body35.lr.ph ], [ %inc42, %for.cond33 ]
  %lastInU.01532 = phi i32 [ %jcolU.0.lcssa, %for.body35.lr.ph ], [ %18, %for.cond33 ]
  %arrayidx37 = getelementptr inbounds i32* %15, i64 %indvars.iv1594
  %21 = load i32* %arrayidx37, align 4, !tbaa !3
  %cmp38 = icmp sgt i32 %21, %10
  %indvars.iv.next1595 = add i64 %indvars.iv1594, 1
  br i1 %cmp38, label %for.cond44.preheader, label %for.cond33

while.cond.preheader:                             ; preds = %while.cond.preheader.lr.ph, %while.end
  %indvars.iv1590 = phi i64 [ %20, %while.cond.preheader.lr.ph ], [ %indvars.iv.next1591, %while.end ]
  %jcolT.01530 = phi i32 [ 0, %while.cond.preheader.lr.ph ], [ %jcolT.1, %while.end ]
  %arrayidx48 = getelementptr inbounds i32* %19, i64 %indvars.iv1590
  %22 = load i32* %arrayidx48, align 4, !tbaa !3
  %23 = sext i32 %jcolT.01530 to i64
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %while.cond.preheader
  %indvars.iv1588 = phi i64 [ %indvars.iv.next1589, %while.cond ], [ %23, %while.cond.preheader ]
  %jcolT.1 = phi i32 [ %inc52, %while.cond ], [ %jcolT.01530, %while.cond.preheader ]
  %arrayidx50 = getelementptr inbounds i32* %7, i64 %indvars.iv1588
  %24 = load i32* %arrayidx50, align 4, !tbaa !3
  %cmp51 = icmp eq i32 %22, %24
  %indvars.iv.next1589 = add i64 %indvars.iv1588, 1
  %inc52 = add nsw i32 %jcolT.1, 1
  br i1 %cmp51, label %while.end, label %while.cond

while.end:                                        ; preds = %while.cond
  store i32 %jcolT.1, i32* %arrayidx48, align 4, !tbaa !3
  %indvars.iv.next1591 = add i64 %indvars.iv1590, 1
  %25 = load i32* %ncolU, align 4, !tbaa !3
  %26 = trunc i64 %indvars.iv.next1591 to i32
  %cmp45 = icmp slt i32 %26, %25
  br i1 %cmp45, label %while.cond.preheader, label %for.end57

for.end57:                                        ; preds = %for.cond33.preheader, %while.end, %for.cond44.preheader
  %lastInU.0.lcssa1601 = phi i32 [ %lastInU.0.lcssa, %for.cond44.preheader ], [ %lastInU.0.lcssa, %while.end ], [ %jcolU.0.lcssa, %for.cond33.preheader ]
  %mode = getelementptr inbounds %struct._SubMtx* %mtxU, i64 0, i32 1
  %27 = load i32* %mode, align 4, !tbaa !3
  switch i32 %27, label %if.else887 [
    i32 1, label %if.then59
    i32 3, label %if.then768
  ]

if.then59:                                        ; preds = %for.end57
  %28 = bitcast [18 x double]* %sums to i8*
  call void @llvm.lifetime.start(i64 144, i8* %28) #4
  call void @SubMtx_denseInfo(%struct._SubMtx* %mtxU, i32* %nrowU, i32* %ncolU, i32* %inc1, i32* %inc2, double** %entU) #5
  %29 = load i32* %nrowU, align 4, !tbaa !3
  %mul = mul nsw i32 %29, 6
  call void @DV_setSize(%struct._DV* %tempDV, i32 %mul) #5
  %call60 = call double* @DV_entries(%struct._DV* %tempDV) #5
  %30 = load i32* %nrowU, align 4, !tbaa !3
  %mul61 = shl nsw i32 %30, 1
  %idx.ext = sext i32 %mul61 to i64
  %add.ptr = getelementptr inbounds double* %call60, i64 %idx.ext
  %add.ptr.sum = shl nsw i64 %idx.ext, 1
  %add.ptr64 = getelementptr inbounds double* %call60, i64 %add.ptr.sum
  %31 = load double** %entU, align 8, !tbaa !0
  %mul65 = shl i32 %jcolU.0.lcssa, 1
  %mul66 = mul nsw i32 %mul65, %30
  %idx.ext67 = sext i32 %mul66 to i64
  %add.ptr68 = getelementptr inbounds double* %31, i64 %idx.ext67
  %sub70 = add nsw i32 %lastInU.0.lcssa1601, -2
  %cmp711506 = icmp sgt i32 %jcolU.0.lcssa, %sub70
  br i1 %cmp711506, label %for.end395, label %for.body72.lr.ph

for.body72.lr.ph:                                 ; preds = %if.then59
  %arraydecay291 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 0
  %arrayidx303 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 1
  %arrayidx308 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 2
  %arrayidx312 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 3
  %arrayidx317 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 4
  %arrayidx321 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 5
  %arrayidx326 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 6
  %arrayidx330 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 7
  %arrayidx335 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 8
  %arrayidx339 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 9
  %arrayidx344 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 10
  %arrayidx348 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 11
  %arrayidx252 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 12
  %arrayidx256 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 13
  %arrayidx261 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 14
  %arrayidx265 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 15
  %arrayidx270 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 16
  %arrayidx274 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 17
  %32 = sext i32 %jcolU.0.lcssa to i64
  br label %for.body72

for.body72:                                       ; preds = %if.end389, %for.body72.lr.ph
  %33 = phi i32 [ %30, %for.body72.lr.ph ], [ %162, %if.end389 ]
  %indvars.iv1568 = phi i64 [ %32, %for.body72.lr.ph ], [ %indvars.iv.next1569, %if.end389 ]
  %indvars.iv1561.in = phi i64 [ %32, %for.body72.lr.ph ], [ %indvars.iv1561, %if.end389 ]
  %rowUT0.01508 = phi double* [ %add.ptr68, %for.body72.lr.ph ], [ %add.ptr392, %if.end389 ]
  %irowUT.01507 = phi i32 [ %jcolU.0.lcssa, %for.body72.lr.ph ], [ %add176, %if.end389 ]
  %indvars.iv1561 = add i64 %indvars.iv1561.in, 3
  %mul73 = shl nsw i32 %33, 1
  %idx.ext74 = sext i32 %mul73 to i64
  %add.ptr75 = getelementptr inbounds double* %rowUT0.01508, i64 %idx.ext74
  %add.ptr75.sum = shl nsw i64 %idx.ext74, 1
  %add.ptr78 = getelementptr inbounds double* %rowUT0.01508, i64 %add.ptr75.sum
  %34 = load i32** %colindU, align 8, !tbaa !0
  %arrayidx80 = getelementptr inbounds i32* %34, i64 %indvars.iv1568
  %35 = load i32* %arrayidx80, align 4, !tbaa !3
  %call81 = call double* @Chv_diagLocation(%struct._Chv* %chvT, i32 %35) #5
  %mul82 = shl nsw i32 %35, 1
  %idx.ext83 = sext i32 %mul82 to i64
  %36 = add nsw i64 %indvars.iv1568, 1
  %37 = load i32** %colindU, align 8, !tbaa !0
  %arrayidx86 = getelementptr inbounds i32* %37, i64 %36
  %38 = load i32* %arrayidx86, align 4, !tbaa !3
  %call87 = call double* @Chv_diagLocation(%struct._Chv* %chvT, i32 %38) #5
  %mul88 = shl nsw i32 %38, 1
  %idx.ext89 = sext i32 %mul88 to i64
  %39 = add nsw i64 %indvars.iv1568, 2
  %40 = load i32** %colindU, align 8, !tbaa !0
  %arrayidx94 = getelementptr inbounds i32* %40, i64 %39
  %41 = load i32* %arrayidx94, align 4, !tbaa !3
  %call95 = call double* @Chv_diagLocation(%struct._Chv* %chvT, i32 %41) #5
  %mul96 = shl nsw i32 %41, 1
  %idx.ext97 = sext i32 %mul96 to i64
  %42 = load i32* %nrowU, align 4, !tbaa !3
  %mul100 = mul nsw i32 %42, 6
  call void @DVzero(i32 %mul100, double* %call60) #5
  call void @SubMtx_scale3vec(%struct._SubMtx* %mtxD, double* %call60, double* %add.ptr, double* %add.ptr64, double* %rowUT0.01508, double* %add.ptr75, double* %add.ptr78) #5
  %43 = load i32* %nrowU, align 4, !tbaa !3
  %cmp1021494 = icmp sgt i32 %43, 0
  br i1 %cmp1021494, label %for.body103, label %for.end133

for.body103:                                      ; preds = %for.body72, %for.body103
  %indvars.iv1557 = phi i64 [ %indvars.iv.next1558, %for.body103 ], [ 0, %for.body72 ]
  %44 = trunc i64 %indvars.iv1557 to i32
  %mul104 = shl nsw i32 %44, 1
  %add1051462 = or i32 %mul104, 1
  %idxprom106 = sext i32 %add1051462 to i64
  %arrayidx107 = getelementptr inbounds double* %call60, i64 %idxprom106
  %45 = load double* %arrayidx107, align 8, !tbaa !4
  %sub108 = fsub double -0.000000e+00, %45
  store double %sub108, double* %arrayidx107, align 8, !tbaa !4
  %add.ptr.sum1463 = add i64 %idxprom106, %idx.ext
  %arrayidx116 = getelementptr inbounds double* %call60, i64 %add.ptr.sum1463
  %46 = load double* %arrayidx116, align 8, !tbaa !4
  %sub117 = fsub double -0.000000e+00, %46
  store double %sub117, double* %arrayidx116, align 8, !tbaa !4
  %add.ptr64.sum = add i64 %idxprom106, %add.ptr.sum
  %arrayidx125 = getelementptr inbounds double* %call60, i64 %add.ptr64.sum
  %47 = load double* %arrayidx125, align 8, !tbaa !4
  %sub126 = fsub double -0.000000e+00, %47
  store double %sub126, double* %arrayidx125, align 8, !tbaa !4
  %indvars.iv.next1558 = add i64 %indvars.iv1557, 1
  %48 = trunc i64 %indvars.iv.next1558 to i32
  %cmp102 = icmp slt i32 %48, %43
  br i1 %cmp102, label %for.body103, label %for.end133

for.end133:                                       ; preds = %for.body103, %for.body72
  call void @ZVdotU(i32 %43, double* %call60, double* %rowUT0.01508, double* %rsum, double* %isum) #5
  %49 = load double* %rsum, align 8, !tbaa !4
  %50 = load double* %call81, align 8, !tbaa !4
  %sub137 = fsub double %50, %49
  store double %sub137, double* %call81, align 8, !tbaa !4
  %51 = load i32* %nrowU, align 4, !tbaa !3
  call void @ZVdotU(i32 %51, double* %call60, double* %add.ptr75, double* %rsum, double* %isum) #5
  %52 = load double* %rsum, align 8, !tbaa !4
  %add.ptr84.sum = sub i64 %idx.ext89, %idx.ext83
  %arrayidx140 = getelementptr inbounds double* %call81, i64 %add.ptr84.sum
  %53 = load double* %arrayidx140, align 8, !tbaa !4
  %sub141 = fsub double %53, %52
  store double %sub141, double* %arrayidx140, align 8, !tbaa !4
  %54 = load double* %isum, align 8, !tbaa !4
  %add1431414 = or i32 %mul88, 1
  %idxprom144 = sext i32 %add1431414 to i64
  %add.ptr84.sum1415 = sub i64 %idxprom144, %idx.ext83
  %arrayidx145 = getelementptr inbounds double* %call81, i64 %add.ptr84.sum1415
  %55 = load double* %arrayidx145, align 8, !tbaa !4
  %sub146 = fsub double %55, %54
  store double %sub146, double* %arrayidx145, align 8, !tbaa !4
  %56 = load i32* %nrowU, align 4, !tbaa !3
  call void @ZVdotU(i32 %56, double* %call60, double* %add.ptr78, double* %rsum, double* %isum) #5
  %57 = load double* %rsum, align 8, !tbaa !4
  %add.ptr84.sum1416 = sub i64 %idx.ext97, %idx.ext83
  %arrayidx149 = getelementptr inbounds double* %call81, i64 %add.ptr84.sum1416
  %58 = load double* %arrayidx149, align 8, !tbaa !4
  %sub150 = fsub double %58, %57
  store double %sub150, double* %arrayidx149, align 8, !tbaa !4
  %59 = load double* %isum, align 8, !tbaa !4
  %add1521417 = or i32 %mul96, 1
  %idxprom153 = sext i32 %add1521417 to i64
  %add.ptr84.sum1418 = sub i64 %idxprom153, %idx.ext83
  %arrayidx154 = getelementptr inbounds double* %call81, i64 %add.ptr84.sum1418
  %60 = load double* %arrayidx154, align 8, !tbaa !4
  %sub155 = fsub double %60, %59
  store double %sub155, double* %arrayidx154, align 8, !tbaa !4
  %61 = load i32* %nrowU, align 4, !tbaa !3
  call void @ZVdotU(i32 %61, double* %add.ptr, double* %add.ptr75, double* %rsum, double* %isum) #5
  %62 = load double* %rsum, align 8, !tbaa !4
  %63 = load double* %call87, align 8, !tbaa !4
  %sub159 = fsub double %63, %62
  store double %sub159, double* %call87, align 8, !tbaa !4
  %64 = load i32* %nrowU, align 4, !tbaa !3
  call void @ZVdotU(i32 %64, double* %add.ptr, double* %add.ptr78, double* %rsum, double* %isum) #5
  %65 = load double* %rsum, align 8, !tbaa !4
  %add.ptr91.sum = sub i64 %idx.ext97, %idx.ext89
  %arrayidx162 = getelementptr inbounds double* %call87, i64 %add.ptr91.sum
  %66 = load double* %arrayidx162, align 8, !tbaa !4
  %sub163 = fsub double %66, %65
  store double %sub163, double* %arrayidx162, align 8, !tbaa !4
  %67 = load double* %isum, align 8, !tbaa !4
  %add.ptr91.sum1419 = sub i64 %idxprom153, %idx.ext89
  %arrayidx167 = getelementptr inbounds double* %call87, i64 %add.ptr91.sum1419
  %68 = load double* %arrayidx167, align 8, !tbaa !4
  %sub168 = fsub double %68, %67
  store double %sub168, double* %arrayidx167, align 8, !tbaa !4
  %69 = load i32* %nrowU, align 4, !tbaa !3
  call void @ZVdotU(i32 %69, double* %add.ptr64, double* %add.ptr78, double* %rsum, double* %isum) #5
  %70 = load double* %rsum, align 8, !tbaa !4
  %71 = load double* %call95, align 8, !tbaa !4
  %sub172 = fsub double %71, %70
  store double %sub172, double* %call95, align 8, !tbaa !4
  %72 = load i32* %nrowU, align 4, !tbaa !3
  %mul173 = shl nsw i32 %72, 1
  %idx.ext174 = sext i32 %mul173 to i64
  %add.ptr78.sum = add i64 %idx.ext174, %add.ptr75.sum
  %add.ptr175 = getelementptr inbounds double* %rowUT0.01508, i64 %add.ptr78.sum
  %indvars.iv.next1569 = add i64 %indvars.iv1568, 3
  %add176 = add nsw i32 %irowUT.01507, 3
  %73 = load i32* %ncolU, align 4, !tbaa !3
  %sub1781498 = add nsw i32 %73, -2
  %74 = trunc i64 %indvars.iv.next1569 to i32
  %cmp1791499 = icmp slt i32 %74, %sub1781498
  br i1 %cmp1791499, label %for.body180, label %for.end284

for.body180:                                      ; preds = %for.end133, %for.body180
  %75 = phi i32 [ %118, %for.body180 ], [ %72, %for.end133 ]
  %indvars.iv1563 = phi i64 [ %indvars.iv.next1564, %for.body180 ], [ %indvars.iv1561, %for.end133 ]
  %jcolU.31501 = phi i32 [ %add283, %for.body180 ], [ %add176, %for.end133 ]
  %colU0.01500 = phi double* [ %add.ptr281, %for.body180 ], [ %add.ptr175, %for.end133 ]
  %mul181 = shl nsw i32 %75, 1
  %idx.ext182 = sext i32 %mul181 to i64
  %add.ptr183 = getelementptr inbounds double* %colU0.01500, i64 %idx.ext182
  %add.ptr183.sum = shl nsw i64 %idx.ext182, 1
  %add.ptr186 = getelementptr inbounds double* %colU0.01500, i64 %add.ptr183.sum
  call void @ZVdotU33(i32 %75, double* %call60, double* %add.ptr, double* %add.ptr64, double* %colU0.01500, double* %add.ptr183, double* %add.ptr186, double* %arraydecay291) #5
  %76 = load i32** %colindU, align 8, !tbaa !0
  %arrayidx188 = getelementptr inbounds i32* %76, i64 %indvars.iv1563
  %77 = load i32* %arrayidx188, align 4, !tbaa !3
  %mul189 = shl nsw i32 %77, 1
  %78 = add nsw i64 %indvars.iv1563, 1
  %arrayidx192 = getelementptr inbounds i32* %76, i64 %78
  %79 = load i32* %arrayidx192, align 4, !tbaa !3
  %mul193 = shl nsw i32 %79, 1
  %80 = add nsw i64 %indvars.iv1563, 2
  %arrayidx196 = getelementptr inbounds i32* %76, i64 %80
  %81 = load i32* %arrayidx196, align 4, !tbaa !3
  %mul197 = shl nsw i32 %81, 1
  %82 = load double* %arraydecay291, align 16, !tbaa !4
  %idxprom199 = sext i32 %mul189 to i64
  %add.ptr84.sum1441 = sub i64 %idxprom199, %idx.ext83
  %arrayidx200 = getelementptr inbounds double* %call81, i64 %add.ptr84.sum1441
  %83 = load double* %arrayidx200, align 8, !tbaa !4
  %sub201 = fsub double %83, %82
  store double %sub201, double* %arrayidx200, align 8, !tbaa !4
  %84 = load double* %arrayidx303, align 8, !tbaa !4
  %add2031442 = or i32 %mul189, 1
  %idxprom204 = sext i32 %add2031442 to i64
  %add.ptr84.sum1443 = sub i64 %idxprom204, %idx.ext83
  %arrayidx205 = getelementptr inbounds double* %call81, i64 %add.ptr84.sum1443
  %85 = load double* %arrayidx205, align 8, !tbaa !4
  %sub206 = fsub double %85, %84
  store double %sub206, double* %arrayidx205, align 8, !tbaa !4
  %86 = load double* %arrayidx308, align 16, !tbaa !4
  %idxprom208 = sext i32 %mul193 to i64
  %add.ptr84.sum1444 = sub i64 %idxprom208, %idx.ext83
  %arrayidx209 = getelementptr inbounds double* %call81, i64 %add.ptr84.sum1444
  %87 = load double* %arrayidx209, align 8, !tbaa !4
  %sub210 = fsub double %87, %86
  store double %sub210, double* %arrayidx209, align 8, !tbaa !4
  %88 = load double* %arrayidx312, align 8, !tbaa !4
  %add2121445 = or i32 %mul193, 1
  %idxprom213 = sext i32 %add2121445 to i64
  %add.ptr84.sum1446 = sub i64 %idxprom213, %idx.ext83
  %arrayidx214 = getelementptr inbounds double* %call81, i64 %add.ptr84.sum1446
  %89 = load double* %arrayidx214, align 8, !tbaa !4
  %sub215 = fsub double %89, %88
  store double %sub215, double* %arrayidx214, align 8, !tbaa !4
  %90 = load double* %arrayidx317, align 16, !tbaa !4
  %idxprom217 = sext i32 %mul197 to i64
  %add.ptr84.sum1447 = sub i64 %idxprom217, %idx.ext83
  %arrayidx218 = getelementptr inbounds double* %call81, i64 %add.ptr84.sum1447
  %91 = load double* %arrayidx218, align 8, !tbaa !4
  %sub219 = fsub double %91, %90
  store double %sub219, double* %arrayidx218, align 8, !tbaa !4
  %92 = load double* %arrayidx321, align 8, !tbaa !4
  %add2211448 = or i32 %mul197, 1
  %idxprom222 = sext i32 %add2211448 to i64
  %add.ptr84.sum1449 = sub i64 %idxprom222, %idx.ext83
  %arrayidx223 = getelementptr inbounds double* %call81, i64 %add.ptr84.sum1449
  %93 = load double* %arrayidx223, align 8, !tbaa !4
  %sub224 = fsub double %93, %92
  store double %sub224, double* %arrayidx223, align 8, !tbaa !4
  %94 = load double* %arrayidx326, align 16, !tbaa !4
  %add.ptr91.sum1450 = sub i64 %idxprom199, %idx.ext89
  %arrayidx227 = getelementptr inbounds double* %call87, i64 %add.ptr91.sum1450
  %95 = load double* %arrayidx227, align 8, !tbaa !4
  %sub228 = fsub double %95, %94
  store double %sub228, double* %arrayidx227, align 8, !tbaa !4
  %96 = load double* %arrayidx330, align 8, !tbaa !4
  %add.ptr91.sum1451 = sub i64 %idxprom204, %idx.ext89
  %arrayidx232 = getelementptr inbounds double* %call87, i64 %add.ptr91.sum1451
  %97 = load double* %arrayidx232, align 8, !tbaa !4
  %sub233 = fsub double %97, %96
  store double %sub233, double* %arrayidx232, align 8, !tbaa !4
  %98 = load double* %arrayidx335, align 16, !tbaa !4
  %add.ptr91.sum1452 = sub i64 %idxprom208, %idx.ext89
  %arrayidx236 = getelementptr inbounds double* %call87, i64 %add.ptr91.sum1452
  %99 = load double* %arrayidx236, align 8, !tbaa !4
  %sub237 = fsub double %99, %98
  store double %sub237, double* %arrayidx236, align 8, !tbaa !4
  %100 = load double* %arrayidx339, align 8, !tbaa !4
  %add.ptr91.sum1453 = sub i64 %idxprom213, %idx.ext89
  %arrayidx241 = getelementptr inbounds double* %call87, i64 %add.ptr91.sum1453
  %101 = load double* %arrayidx241, align 8, !tbaa !4
  %sub242 = fsub double %101, %100
  store double %sub242, double* %arrayidx241, align 8, !tbaa !4
  %102 = load double* %arrayidx344, align 16, !tbaa !4
  %add.ptr91.sum1454 = sub i64 %idxprom217, %idx.ext89
  %arrayidx245 = getelementptr inbounds double* %call87, i64 %add.ptr91.sum1454
  %103 = load double* %arrayidx245, align 8, !tbaa !4
  %sub246 = fsub double %103, %102
  store double %sub246, double* %arrayidx245, align 8, !tbaa !4
  %104 = load double* %arrayidx348, align 8, !tbaa !4
  %add.ptr91.sum1455 = sub i64 %idxprom222, %idx.ext89
  %arrayidx250 = getelementptr inbounds double* %call87, i64 %add.ptr91.sum1455
  %105 = load double* %arrayidx250, align 8, !tbaa !4
  %sub251 = fsub double %105, %104
  store double %sub251, double* %arrayidx250, align 8, !tbaa !4
  %106 = load double* %arrayidx252, align 16, !tbaa !4
  %add.ptr99.sum1456 = sub i64 %idxprom199, %idx.ext97
  %arrayidx254 = getelementptr inbounds double* %call95, i64 %add.ptr99.sum1456
  %107 = load double* %arrayidx254, align 8, !tbaa !4
  %sub255 = fsub double %107, %106
  store double %sub255, double* %arrayidx254, align 8, !tbaa !4
  %108 = load double* %arrayidx256, align 8, !tbaa !4
  %add.ptr99.sum1457 = sub i64 %idxprom204, %idx.ext97
  %arrayidx259 = getelementptr inbounds double* %call95, i64 %add.ptr99.sum1457
  %109 = load double* %arrayidx259, align 8, !tbaa !4
  %sub260 = fsub double %109, %108
  store double %sub260, double* %arrayidx259, align 8, !tbaa !4
  %110 = load double* %arrayidx261, align 16, !tbaa !4
  %add.ptr99.sum1458 = sub i64 %idxprom208, %idx.ext97
  %arrayidx263 = getelementptr inbounds double* %call95, i64 %add.ptr99.sum1458
  %111 = load double* %arrayidx263, align 8, !tbaa !4
  %sub264 = fsub double %111, %110
  store double %sub264, double* %arrayidx263, align 8, !tbaa !4
  %112 = load double* %arrayidx265, align 8, !tbaa !4
  %add.ptr99.sum1459 = sub i64 %idxprom213, %idx.ext97
  %arrayidx268 = getelementptr inbounds double* %call95, i64 %add.ptr99.sum1459
  %113 = load double* %arrayidx268, align 8, !tbaa !4
  %sub269 = fsub double %113, %112
  store double %sub269, double* %arrayidx268, align 8, !tbaa !4
  %114 = load double* %arrayidx270, align 16, !tbaa !4
  %add.ptr99.sum1460 = sub i64 %idxprom217, %idx.ext97
  %arrayidx272 = getelementptr inbounds double* %call95, i64 %add.ptr99.sum1460
  %115 = load double* %arrayidx272, align 8, !tbaa !4
  %sub273 = fsub double %115, %114
  store double %sub273, double* %arrayidx272, align 8, !tbaa !4
  %116 = load double* %arrayidx274, align 8, !tbaa !4
  %add.ptr99.sum1461 = sub i64 %idxprom222, %idx.ext97
  %arrayidx277 = getelementptr inbounds double* %call95, i64 %add.ptr99.sum1461
  %117 = load double* %arrayidx277, align 8, !tbaa !4
  %sub278 = fsub double %117, %116
  store double %sub278, double* %arrayidx277, align 8, !tbaa !4
  %118 = load i32* %nrowU, align 4, !tbaa !3
  %mul279 = shl nsw i32 %118, 1
  %idx.ext280 = sext i32 %mul279 to i64
  %add.ptr186.sum = add i64 %idx.ext280, %add.ptr183.sum
  %add.ptr281 = getelementptr inbounds double* %colU0.01500, i64 %add.ptr186.sum
  %add283 = add nsw i32 %jcolU.31501, 3
  %119 = load i32* %ncolU, align 4, !tbaa !3
  %sub178 = add nsw i32 %119, -2
  %cmp179 = icmp slt i32 %add283, %sub178
  %indvars.iv.next1564 = add i64 %indvars.iv1563, 3
  br i1 %cmp179, label %for.body180, label %for.end284

for.end284:                                       ; preds = %for.body180, %for.end133
  %120 = phi i32 [ %72, %for.end133 ], [ %118, %for.body180 ]
  %sub178.lcssa = phi i32 [ %sub1781498, %for.end133 ], [ %sub178, %for.body180 ]
  %.lcssa1497 = phi i32 [ %73, %for.end133 ], [ %119, %for.body180 ]
  %jcolU.3.lcssa = phi i32 [ %74, %for.end133 ], [ %add283, %for.body180 ]
  %colU0.0.lcssa = phi double* [ %add.ptr175, %for.end133 ], [ %add.ptr281, %for.body180 ]
  %cmp286 = icmp eq i32 %jcolU.3.lcssa, %sub178.lcssa
  br i1 %cmp286, label %if.then287, label %if.else353

if.then287:                                       ; preds = %for.end284
  %mul288 = shl nsw i32 %120, 1
  %idx.ext289 = sext i32 %mul288 to i64
  %add.ptr290 = getelementptr inbounds double* %colU0.0.lcssa, i64 %idx.ext289
  call void @ZVdotU32(i32 %120, double* %call60, double* %add.ptr, double* %add.ptr64, double* %colU0.0.lcssa, double* %add.ptr290, double* %arraydecay291) #5
  %idxprom292 = sext i32 %sub178.lcssa to i64
  %121 = load i32** %colindU, align 8, !tbaa !0
  %arrayidx293 = getelementptr inbounds i32* %121, i64 %idxprom292
  %122 = load i32* %arrayidx293, align 4, !tbaa !3
  %mul294 = shl nsw i32 %122, 1
  %add295 = add nsw i32 %sub178.lcssa, 1
  %idxprom296 = sext i32 %add295 to i64
  %arrayidx297 = getelementptr inbounds i32* %121, i64 %idxprom296
  %123 = load i32* %arrayidx297, align 4, !tbaa !3
  %mul298 = shl nsw i32 %123, 1
  %124 = load double* %arraydecay291, align 16, !tbaa !4
  %idxprom300 = sext i32 %mul294 to i64
  %add.ptr84.sum1427 = sub i64 %idxprom300, %idx.ext83
  %arrayidx301 = getelementptr inbounds double* %call81, i64 %add.ptr84.sum1427
  %125 = load double* %arrayidx301, align 8, !tbaa !4
  %sub302 = fsub double %125, %124
  store double %sub302, double* %arrayidx301, align 8, !tbaa !4
  %126 = load double* %arrayidx303, align 8, !tbaa !4
  %add3041428 = or i32 %mul294, 1
  %idxprom305 = sext i32 %add3041428 to i64
  %add.ptr84.sum1429 = sub i64 %idxprom305, %idx.ext83
  %arrayidx306 = getelementptr inbounds double* %call81, i64 %add.ptr84.sum1429
  %127 = load double* %arrayidx306, align 8, !tbaa !4
  %sub307 = fsub double %127, %126
  store double %sub307, double* %arrayidx306, align 8, !tbaa !4
  %128 = load double* %arrayidx308, align 16, !tbaa !4
  %idxprom309 = sext i32 %mul298 to i64
  %add.ptr84.sum1430 = sub i64 %idxprom309, %idx.ext83
  %arrayidx310 = getelementptr inbounds double* %call81, i64 %add.ptr84.sum1430
  %129 = load double* %arrayidx310, align 8, !tbaa !4
  %sub311 = fsub double %129, %128
  store double %sub311, double* %arrayidx310, align 8, !tbaa !4
  %130 = load double* %arrayidx312, align 8, !tbaa !4
  %add3131431 = or i32 %mul298, 1
  %idxprom314 = sext i32 %add3131431 to i64
  %add.ptr84.sum1432 = sub i64 %idxprom314, %idx.ext83
  %arrayidx315 = getelementptr inbounds double* %call81, i64 %add.ptr84.sum1432
  %131 = load double* %arrayidx315, align 8, !tbaa !4
  %sub316 = fsub double %131, %130
  store double %sub316, double* %arrayidx315, align 8, !tbaa !4
  %132 = load double* %arrayidx317, align 16, !tbaa !4
  %add.ptr91.sum1433 = sub i64 %idxprom300, %idx.ext89
  %arrayidx319 = getelementptr inbounds double* %call87, i64 %add.ptr91.sum1433
  %133 = load double* %arrayidx319, align 8, !tbaa !4
  %sub320 = fsub double %133, %132
  store double %sub320, double* %arrayidx319, align 8, !tbaa !4
  %134 = load double* %arrayidx321, align 8, !tbaa !4
  %add.ptr91.sum1434 = sub i64 %idxprom305, %idx.ext89
  %arrayidx324 = getelementptr inbounds double* %call87, i64 %add.ptr91.sum1434
  %135 = load double* %arrayidx324, align 8, !tbaa !4
  %sub325 = fsub double %135, %134
  store double %sub325, double* %arrayidx324, align 8, !tbaa !4
  %136 = load double* %arrayidx326, align 16, !tbaa !4
  %add.ptr91.sum1435 = sub i64 %idxprom309, %idx.ext89
  %arrayidx328 = getelementptr inbounds double* %call87, i64 %add.ptr91.sum1435
  %137 = load double* %arrayidx328, align 8, !tbaa !4
  %sub329 = fsub double %137, %136
  store double %sub329, double* %arrayidx328, align 8, !tbaa !4
  %138 = load double* %arrayidx330, align 8, !tbaa !4
  %add.ptr91.sum1436 = sub i64 %idxprom314, %idx.ext89
  %arrayidx333 = getelementptr inbounds double* %call87, i64 %add.ptr91.sum1436
  %139 = load double* %arrayidx333, align 8, !tbaa !4
  %sub334 = fsub double %139, %138
  store double %sub334, double* %arrayidx333, align 8, !tbaa !4
  %140 = load double* %arrayidx335, align 16, !tbaa !4
  %add.ptr99.sum1437 = sub i64 %idxprom300, %idx.ext97
  %arrayidx337 = getelementptr inbounds double* %call95, i64 %add.ptr99.sum1437
  %141 = load double* %arrayidx337, align 8, !tbaa !4
  %sub338 = fsub double %141, %140
  store double %sub338, double* %arrayidx337, align 8, !tbaa !4
  %142 = load double* %arrayidx339, align 8, !tbaa !4
  %add.ptr99.sum1438 = sub i64 %idxprom305, %idx.ext97
  %arrayidx342 = getelementptr inbounds double* %call95, i64 %add.ptr99.sum1438
  %143 = load double* %arrayidx342, align 8, !tbaa !4
  %sub343 = fsub double %143, %142
  store double %sub343, double* %arrayidx342, align 8, !tbaa !4
  %144 = load double* %arrayidx344, align 16, !tbaa !4
  %add.ptr99.sum1439 = sub i64 %idxprom309, %idx.ext97
  %arrayidx346 = getelementptr inbounds double* %call95, i64 %add.ptr99.sum1439
  %145 = load double* %arrayidx346, align 8, !tbaa !4
  %sub347 = fsub double %145, %144
  store double %sub347, double* %arrayidx346, align 8, !tbaa !4
  %146 = load double* %arrayidx348, align 8, !tbaa !4
  %add.ptr99.sum1440 = sub i64 %idxprom314, %idx.ext97
  %arrayidx351 = getelementptr inbounds double* %call95, i64 %add.ptr99.sum1440
  %147 = load double* %arrayidx351, align 8, !tbaa !4
  %sub352 = fsub double %147, %146
  store double %sub352, double* %arrayidx351, align 8, !tbaa !4
  br label %if.end389

if.else353:                                       ; preds = %for.end284
  %sub354 = add nsw i32 %.lcssa1497, -1
  %cmp355 = icmp eq i32 %jcolU.3.lcssa, %sub354
  br i1 %cmp355, label %if.then356, label %if.end389

if.then356:                                       ; preds = %if.else353
  call void @ZVdotU31(i32 %120, double* %call60, double* %add.ptr, double* %add.ptr64, double* %colU0.0.lcssa, double* %arraydecay291) #5
  %idxprom358 = sext i32 %jcolU.3.lcssa to i64
  %148 = load i32** %colindU, align 8, !tbaa !0
  %arrayidx359 = getelementptr inbounds i32* %148, i64 %idxprom358
  %149 = load i32* %arrayidx359, align 4, !tbaa !3
  %mul360 = shl nsw i32 %149, 1
  %150 = load double* %arraydecay291, align 16, !tbaa !4
  %idxprom362 = sext i32 %mul360 to i64
  %add.ptr84.sum1421 = sub i64 %idxprom362, %idx.ext83
  %arrayidx363 = getelementptr inbounds double* %call81, i64 %add.ptr84.sum1421
  %151 = load double* %arrayidx363, align 8, !tbaa !4
  %sub364 = fsub double %151, %150
  store double %sub364, double* %arrayidx363, align 8, !tbaa !4
  %152 = load double* %arrayidx303, align 8, !tbaa !4
  %add3661422 = or i32 %mul360, 1
  %idxprom367 = sext i32 %add3661422 to i64
  %add.ptr84.sum1423 = sub i64 %idxprom367, %idx.ext83
  %arrayidx368 = getelementptr inbounds double* %call81, i64 %add.ptr84.sum1423
  %153 = load double* %arrayidx368, align 8, !tbaa !4
  %sub369 = fsub double %153, %152
  store double %sub369, double* %arrayidx368, align 8, !tbaa !4
  %154 = load double* %arrayidx308, align 16, !tbaa !4
  %add.ptr91.sum1424 = sub i64 %idxprom362, %idx.ext89
  %arrayidx372 = getelementptr inbounds double* %call87, i64 %add.ptr91.sum1424
  %155 = load double* %arrayidx372, align 8, !tbaa !4
  %sub373 = fsub double %155, %154
  store double %sub373, double* %arrayidx372, align 8, !tbaa !4
  %156 = load double* %arrayidx312, align 8, !tbaa !4
  %add.ptr91.sum1425 = sub i64 %idxprom367, %idx.ext89
  %arrayidx377 = getelementptr inbounds double* %call87, i64 %add.ptr91.sum1425
  %157 = load double* %arrayidx377, align 8, !tbaa !4
  %sub378 = fsub double %157, %156
  store double %sub378, double* %arrayidx377, align 8, !tbaa !4
  %158 = load double* %arrayidx317, align 16, !tbaa !4
  %add.ptr99.sum = sub i64 %idxprom362, %idx.ext97
  %arrayidx381 = getelementptr inbounds double* %call95, i64 %add.ptr99.sum
  %159 = load double* %arrayidx381, align 8, !tbaa !4
  %sub382 = fsub double %159, %158
  store double %sub382, double* %arrayidx381, align 8, !tbaa !4
  %160 = load double* %arrayidx321, align 8, !tbaa !4
  %add.ptr99.sum1426 = sub i64 %idxprom367, %idx.ext97
  %arrayidx386 = getelementptr inbounds double* %call95, i64 %add.ptr99.sum1426
  %161 = load double* %arrayidx386, align 8, !tbaa !4
  %sub387 = fsub double %161, %160
  store double %sub387, double* %arrayidx386, align 8, !tbaa !4
  br label %if.end389

if.end389:                                        ; preds = %if.else353, %if.then356, %if.then287
  %162 = load i32* %nrowU, align 4, !tbaa !3
  %mul390 = shl nsw i32 %162, 1
  %idx.ext391 = sext i32 %mul390 to i64
  %add.ptr78.sum1420 = add i64 %idx.ext391, %add.ptr75.sum
  %add.ptr392 = getelementptr inbounds double* %rowUT0.01508, i64 %add.ptr78.sum1420
  %cmp71 = icmp sgt i32 %74, %sub70
  br i1 %cmp71, label %for.end395, label %for.body72

for.end395:                                       ; preds = %if.end389, %if.then59
  %163 = phi i32 [ %30, %if.then59 ], [ %162, %if.end389 ]
  %rowUT0.0.lcssa = phi double* [ %add.ptr68, %if.then59 ], [ %add.ptr392, %if.end389 ]
  %irowUT.0.lcssa = phi i32 [ %jcolU.0.lcssa, %if.then59 ], [ %add176, %if.end389 ]
  %sub396 = add nsw i32 %lastInU.0.lcssa1601, -1
  %cmp397 = icmp eq i32 %irowUT.0.lcssa, %sub396
  br i1 %cmp397, label %if.then398, label %if.else623

if.then398:                                       ; preds = %for.end395
  %mul399 = shl nsw i32 %163, 1
  %idx.ext400 = sext i32 %mul399 to i64
  %add.ptr401 = getelementptr inbounds double* %rowUT0.0.lcssa, i64 %idx.ext400
  %idxprom402 = sext i32 %irowUT.0.lcssa to i64
  %164 = load i32** %colindU, align 8, !tbaa !0
  %arrayidx403 = getelementptr inbounds i32* %164, i64 %idxprom402
  %165 = load i32* %arrayidx403, align 4, !tbaa !3
  %call404 = call double* @Chv_diagLocation(%struct._Chv* %chvT, i32 %165) #5
  %mul405 = shl nsw i32 %165, 1
  %idx.ext406 = sext i32 %mul405 to i64
  %add409 = add nsw i32 %irowUT.0.lcssa, 1
  %idxprom410 = sext i32 %add409 to i64
  %166 = load i32** %colindU, align 8, !tbaa !0
  %arrayidx411 = getelementptr inbounds i32* %166, i64 %idxprom410
  %167 = load i32* %arrayidx411, align 4, !tbaa !3
  %call412 = call double* @Chv_diagLocation(%struct._Chv* %chvT, i32 %167) #5
  %mul413 = shl nsw i32 %167, 1
  %idx.ext414 = sext i32 %mul413 to i64
  %168 = load i32* %nrowU, align 4, !tbaa !3
  %mul417 = shl nsw i32 %168, 2
  call void @DVzero(i32 %mul417, double* %call60) #5
  call void @SubMtx_scale2vec(%struct._SubMtx* %mtxD, double* %call60, double* %add.ptr, double* %rowUT0.0.lcssa, double* %add.ptr401) #5
  %169 = load i32* %nrowU, align 4, !tbaa !3
  %cmp4191477 = icmp sgt i32 %169, 0
  br i1 %cmp4191477, label %for.body420, label %for.end441

for.body420:                                      ; preds = %if.then398, %for.body420
  %indvars.iv1546 = phi i64 [ %indvars.iv.next1547, %for.body420 ], [ 0, %if.then398 ]
  %170 = trunc i64 %indvars.iv1546 to i32
  %mul421 = shl nsw i32 %170, 1
  %add4221412 = or i32 %mul421, 1
  %idxprom423 = sext i32 %add4221412 to i64
  %arrayidx424 = getelementptr inbounds double* %call60, i64 %idxprom423
  %171 = load double* %arrayidx424, align 8, !tbaa !4
  %sub425 = fsub double -0.000000e+00, %171
  store double %sub425, double* %arrayidx424, align 8, !tbaa !4
  %add.ptr.sum1413 = add i64 %idxprom423, %idx.ext
  %arrayidx433 = getelementptr inbounds double* %call60, i64 %add.ptr.sum1413
  %172 = load double* %arrayidx433, align 8, !tbaa !4
  %sub434 = fsub double -0.000000e+00, %172
  store double %sub434, double* %arrayidx433, align 8, !tbaa !4
  %indvars.iv.next1547 = add i64 %indvars.iv1546, 1
  %173 = trunc i64 %indvars.iv.next1547 to i32
  %cmp419 = icmp slt i32 %173, %169
  br i1 %cmp419, label %for.body420, label %for.end441

for.end441:                                       ; preds = %for.body420, %if.then398
  call void @ZVdotU(i32 %169, double* %call60, double* %rowUT0.0.lcssa, double* %rsum, double* %isum) #5
  %174 = load double* %rsum, align 8, !tbaa !4
  %175 = load double* %call404, align 8, !tbaa !4
  %sub445 = fsub double %175, %174
  store double %sub445, double* %call404, align 8, !tbaa !4
  %176 = load i32* %nrowU, align 4, !tbaa !3
  call void @ZVdotU(i32 %176, double* %call60, double* %add.ptr401, double* %rsum, double* %isum) #5
  %177 = load double* %rsum, align 8, !tbaa !4
  %add.ptr408.sum = sub i64 %idx.ext414, %idx.ext406
  %arrayidx448 = getelementptr inbounds double* %call404, i64 %add.ptr408.sum
  %178 = load double* %arrayidx448, align 8, !tbaa !4
  %sub449 = fsub double %178, %177
  store double %sub449, double* %arrayidx448, align 8, !tbaa !4
  %179 = load double* %isum, align 8, !tbaa !4
  %add4511381 = or i32 %mul413, 1
  %idxprom452 = sext i32 %add4511381 to i64
  %add.ptr408.sum1382 = sub i64 %idxprom452, %idx.ext406
  %arrayidx453 = getelementptr inbounds double* %call404, i64 %add.ptr408.sum1382
  %180 = load double* %arrayidx453, align 8, !tbaa !4
  %sub454 = fsub double %180, %179
  store double %sub454, double* %arrayidx453, align 8, !tbaa !4
  %181 = load i32* %nrowU, align 4, !tbaa !3
  call void @ZVdotU(i32 %181, double* %add.ptr, double* %add.ptr401, double* %rsum, double* %isum) #5
  %182 = load double* %rsum, align 8, !tbaa !4
  %183 = load double* %call412, align 8, !tbaa !4
  %sub458 = fsub double %183, %182
  store double %sub458, double* %call412, align 8, !tbaa !4
  %184 = load i32* %nrowU, align 4, !tbaa !3
  %mul459 = shl nsw i32 %184, 1
  %idx.ext460 = sext i32 %mul459 to i64
  %add.ptr401.sum = add i64 %idx.ext460, %idx.ext400
  %add.ptr461 = getelementptr inbounds double* %rowUT0.0.lcssa, i64 %add.ptr401.sum
  %add462 = add i32 %irowUT.0.lcssa, 2
  %185 = load i32* %ncolU, align 4, !tbaa !3
  %sub4641469 = add nsw i32 %185, -2
  %cmp4651470 = icmp slt i32 %add462, %sub4641469
  br i1 %cmp4651470, label %for.body466.lr.ph, label %for.end544

for.body466.lr.ph:                                ; preds = %for.end441
  %arraydecay473 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 0
  %arrayidx489 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 1
  %arrayidx494 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 2
  %arrayidx498 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 3
  %arrayidx503 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 4
  %arrayidx507 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 5
  %arrayidx512 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 6
  %arrayidx516 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 7
  %arrayidx521 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 8
  %arrayidx525 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 9
  %arrayidx530 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 10
  %arrayidx534 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 11
  %186 = sext i32 %add462 to i64
  br label %for.body466

for.body466:                                      ; preds = %for.body466.lr.ph, %for.body466
  %187 = phi i32 [ %184, %for.body466.lr.ph ], [ %218, %for.body466 ]
  %indvars.iv1541 = phi i64 [ %186, %for.body466.lr.ph ], [ %indvars.iv.next1542, %for.body466 ]
  %jcolU.41472 = phi i32 [ %add462, %for.body466.lr.ph ], [ %add543, %for.body466 ]
  %colU0.11471 = phi double* [ %add.ptr461, %for.body466.lr.ph ], [ %add.ptr541, %for.body466 ]
  %mul467 = shl nsw i32 %187, 1
  %idx.ext468 = sext i32 %mul467 to i64
  %add.ptr469 = getelementptr inbounds double* %colU0.11471, i64 %idx.ext468
  %add.ptr469.sum = shl nsw i64 %idx.ext468, 1
  %add.ptr472 = getelementptr inbounds double* %colU0.11471, i64 %add.ptr469.sum
  call void @ZVdotU23(i32 %187, double* %call60, double* %add.ptr, double* %colU0.11471, double* %add.ptr469, double* %add.ptr472, double* %arraydecay473) #5
  %188 = load i32** %colindU, align 8, !tbaa !0
  %arrayidx475 = getelementptr inbounds i32* %188, i64 %indvars.iv1541
  %189 = load i32* %arrayidx475, align 4, !tbaa !3
  %mul476 = shl nsw i32 %189, 1
  %190 = add nsw i64 %indvars.iv1541, 1
  %arrayidx479 = getelementptr inbounds i32* %188, i64 %190
  %191 = load i32* %arrayidx479, align 4, !tbaa !3
  %mul480 = shl nsw i32 %191, 1
  %192 = add nsw i64 %indvars.iv1541, 2
  %arrayidx483 = getelementptr inbounds i32* %188, i64 %192
  %193 = load i32* %arrayidx483, align 4, !tbaa !3
  %mul484 = shl nsw i32 %193, 1
  %194 = load double* %arraydecay473, align 16, !tbaa !4
  %idxprom486 = sext i32 %mul476 to i64
  %add.ptr408.sum1397 = sub i64 %idxprom486, %idx.ext406
  %arrayidx487 = getelementptr inbounds double* %call404, i64 %add.ptr408.sum1397
  %195 = load double* %arrayidx487, align 8, !tbaa !4
  %sub488 = fsub double %195, %194
  store double %sub488, double* %arrayidx487, align 8, !tbaa !4
  %196 = load double* %arrayidx489, align 8, !tbaa !4
  %add4901398 = or i32 %mul476, 1
  %idxprom491 = sext i32 %add4901398 to i64
  %add.ptr408.sum1399 = sub i64 %idxprom491, %idx.ext406
  %arrayidx492 = getelementptr inbounds double* %call404, i64 %add.ptr408.sum1399
  %197 = load double* %arrayidx492, align 8, !tbaa !4
  %sub493 = fsub double %197, %196
  store double %sub493, double* %arrayidx492, align 8, !tbaa !4
  %198 = load double* %arrayidx494, align 16, !tbaa !4
  %idxprom495 = sext i32 %mul480 to i64
  %add.ptr408.sum1400 = sub i64 %idxprom495, %idx.ext406
  %arrayidx496 = getelementptr inbounds double* %call404, i64 %add.ptr408.sum1400
  %199 = load double* %arrayidx496, align 8, !tbaa !4
  %sub497 = fsub double %199, %198
  store double %sub497, double* %arrayidx496, align 8, !tbaa !4
  %200 = load double* %arrayidx498, align 8, !tbaa !4
  %add4991401 = or i32 %mul480, 1
  %idxprom500 = sext i32 %add4991401 to i64
  %add.ptr408.sum1402 = sub i64 %idxprom500, %idx.ext406
  %arrayidx501 = getelementptr inbounds double* %call404, i64 %add.ptr408.sum1402
  %201 = load double* %arrayidx501, align 8, !tbaa !4
  %sub502 = fsub double %201, %200
  store double %sub502, double* %arrayidx501, align 8, !tbaa !4
  %202 = load double* %arrayidx503, align 16, !tbaa !4
  %idxprom504 = sext i32 %mul484 to i64
  %add.ptr408.sum1403 = sub i64 %idxprom504, %idx.ext406
  %arrayidx505 = getelementptr inbounds double* %call404, i64 %add.ptr408.sum1403
  %203 = load double* %arrayidx505, align 8, !tbaa !4
  %sub506 = fsub double %203, %202
  store double %sub506, double* %arrayidx505, align 8, !tbaa !4
  %204 = load double* %arrayidx507, align 8, !tbaa !4
  %add5081404 = or i32 %mul484, 1
  %idxprom509 = sext i32 %add5081404 to i64
  %add.ptr408.sum1405 = sub i64 %idxprom509, %idx.ext406
  %arrayidx510 = getelementptr inbounds double* %call404, i64 %add.ptr408.sum1405
  %205 = load double* %arrayidx510, align 8, !tbaa !4
  %sub511 = fsub double %205, %204
  store double %sub511, double* %arrayidx510, align 8, !tbaa !4
  %206 = load double* %arrayidx512, align 16, !tbaa !4
  %add.ptr416.sum1406 = sub i64 %idxprom486, %idx.ext414
  %arrayidx514 = getelementptr inbounds double* %call412, i64 %add.ptr416.sum1406
  %207 = load double* %arrayidx514, align 8, !tbaa !4
  %sub515 = fsub double %207, %206
  store double %sub515, double* %arrayidx514, align 8, !tbaa !4
  %208 = load double* %arrayidx516, align 8, !tbaa !4
  %add.ptr416.sum1407 = sub i64 %idxprom491, %idx.ext414
  %arrayidx519 = getelementptr inbounds double* %call412, i64 %add.ptr416.sum1407
  %209 = load double* %arrayidx519, align 8, !tbaa !4
  %sub520 = fsub double %209, %208
  store double %sub520, double* %arrayidx519, align 8, !tbaa !4
  %210 = load double* %arrayidx521, align 16, !tbaa !4
  %add.ptr416.sum1408 = sub i64 %idxprom495, %idx.ext414
  %arrayidx523 = getelementptr inbounds double* %call412, i64 %add.ptr416.sum1408
  %211 = load double* %arrayidx523, align 8, !tbaa !4
  %sub524 = fsub double %211, %210
  store double %sub524, double* %arrayidx523, align 8, !tbaa !4
  %212 = load double* %arrayidx525, align 8, !tbaa !4
  %add.ptr416.sum1409 = sub i64 %idxprom500, %idx.ext414
  %arrayidx528 = getelementptr inbounds double* %call412, i64 %add.ptr416.sum1409
  %213 = load double* %arrayidx528, align 8, !tbaa !4
  %sub529 = fsub double %213, %212
  store double %sub529, double* %arrayidx528, align 8, !tbaa !4
  %214 = load double* %arrayidx530, align 16, !tbaa !4
  %add.ptr416.sum1410 = sub i64 %idxprom504, %idx.ext414
  %arrayidx532 = getelementptr inbounds double* %call412, i64 %add.ptr416.sum1410
  %215 = load double* %arrayidx532, align 8, !tbaa !4
  %sub533 = fsub double %215, %214
  store double %sub533, double* %arrayidx532, align 8, !tbaa !4
  %216 = load double* %arrayidx534, align 8, !tbaa !4
  %add.ptr416.sum1411 = sub i64 %idxprom509, %idx.ext414
  %arrayidx537 = getelementptr inbounds double* %call412, i64 %add.ptr416.sum1411
  %217 = load double* %arrayidx537, align 8, !tbaa !4
  %sub538 = fsub double %217, %216
  store double %sub538, double* %arrayidx537, align 8, !tbaa !4
  %218 = load i32* %nrowU, align 4, !tbaa !3
  %mul539 = shl nsw i32 %218, 1
  %idx.ext540 = sext i32 %mul539 to i64
  %add.ptr472.sum = add i64 %idx.ext540, %add.ptr469.sum
  %add.ptr541 = getelementptr inbounds double* %colU0.11471, i64 %add.ptr472.sum
  %add543 = add nsw i32 %jcolU.41472, 3
  %219 = load i32* %ncolU, align 4, !tbaa !3
  %sub464 = add nsw i32 %219, -2
  %cmp465 = icmp slt i32 %add543, %sub464
  %indvars.iv.next1542 = add i64 %indvars.iv1541, 3
  br i1 %cmp465, label %for.body466, label %for.end544

for.end544:                                       ; preds = %for.body466, %for.end441
  %220 = phi i32 [ %184, %for.end441 ], [ %218, %for.body466 ]
  %sub464.lcssa = phi i32 [ %sub4641469, %for.end441 ], [ %sub464, %for.body466 ]
  %.lcssa = phi i32 [ %185, %for.end441 ], [ %219, %for.body466 ]
  %jcolU.4.lcssa = phi i32 [ %add462, %for.end441 ], [ %add543, %for.body466 ]
  %colU0.1.lcssa = phi double* [ %add.ptr461, %for.end441 ], [ %add.ptr541, %for.body466 ]
  %cmp546 = icmp eq i32 %jcolU.4.lcssa, %sub464.lcssa
  br i1 %cmp546, label %if.then547, label %if.else595

if.then547:                                       ; preds = %for.end544
  %mul548 = shl nsw i32 %220, 1
  %idx.ext549 = sext i32 %mul548 to i64
  %add.ptr550 = getelementptr inbounds double* %colU0.1.lcssa, i64 %idx.ext549
  %arraydecay551 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 0
  call void @ZVdotU22(i32 %220, double* %call60, double* %add.ptr, double* %colU0.1.lcssa, double* %add.ptr550, double* %arraydecay551) #5
  %idxprom552 = sext i32 %sub464.lcssa to i64
  %221 = load i32** %colindU, align 8, !tbaa !0
  %arrayidx553 = getelementptr inbounds i32* %221, i64 %idxprom552
  %222 = load i32* %arrayidx553, align 4, !tbaa !3
  %mul554 = shl nsw i32 %222, 1
  %add555 = add nsw i32 %sub464.lcssa, 1
  %idxprom556 = sext i32 %add555 to i64
  %arrayidx557 = getelementptr inbounds i32* %221, i64 %idxprom556
  %223 = load i32* %arrayidx557, align 4, !tbaa !3
  %mul558 = shl nsw i32 %223, 1
  %224 = load double* %arraydecay551, align 16, !tbaa !4
  %idxprom560 = sext i32 %mul554 to i64
  %add.ptr408.sum1387 = sub i64 %idxprom560, %idx.ext406
  %arrayidx561 = getelementptr inbounds double* %call404, i64 %add.ptr408.sum1387
  %225 = load double* %arrayidx561, align 8, !tbaa !4
  %sub562 = fsub double %225, %224
  store double %sub562, double* %arrayidx561, align 8, !tbaa !4
  %arrayidx563 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 1
  %226 = load double* %arrayidx563, align 8, !tbaa !4
  %add5641388 = or i32 %mul554, 1
  %idxprom565 = sext i32 %add5641388 to i64
  %add.ptr408.sum1389 = sub i64 %idxprom565, %idx.ext406
  %arrayidx566 = getelementptr inbounds double* %call404, i64 %add.ptr408.sum1389
  %227 = load double* %arrayidx566, align 8, !tbaa !4
  %sub567 = fsub double %227, %226
  store double %sub567, double* %arrayidx566, align 8, !tbaa !4
  %arrayidx568 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 2
  %228 = load double* %arrayidx568, align 16, !tbaa !4
  %idxprom569 = sext i32 %mul558 to i64
  %add.ptr408.sum1390 = sub i64 %idxprom569, %idx.ext406
  %arrayidx570 = getelementptr inbounds double* %call404, i64 %add.ptr408.sum1390
  %229 = load double* %arrayidx570, align 8, !tbaa !4
  %sub571 = fsub double %229, %228
  store double %sub571, double* %arrayidx570, align 8, !tbaa !4
  %arrayidx572 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 3
  %230 = load double* %arrayidx572, align 8, !tbaa !4
  %add5731391 = or i32 %mul558, 1
  %idxprom574 = sext i32 %add5731391 to i64
  %add.ptr408.sum1392 = sub i64 %idxprom574, %idx.ext406
  %arrayidx575 = getelementptr inbounds double* %call404, i64 %add.ptr408.sum1392
  %231 = load double* %arrayidx575, align 8, !tbaa !4
  %sub576 = fsub double %231, %230
  store double %sub576, double* %arrayidx575, align 8, !tbaa !4
  %arrayidx577 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 4
  %232 = load double* %arrayidx577, align 16, !tbaa !4
  %add.ptr416.sum1393 = sub i64 %idxprom560, %idx.ext414
  %arrayidx579 = getelementptr inbounds double* %call412, i64 %add.ptr416.sum1393
  %233 = load double* %arrayidx579, align 8, !tbaa !4
  %sub580 = fsub double %233, %232
  store double %sub580, double* %arrayidx579, align 8, !tbaa !4
  %arrayidx581 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 5
  %234 = load double* %arrayidx581, align 8, !tbaa !4
  %add.ptr416.sum1394 = sub i64 %idxprom565, %idx.ext414
  %arrayidx584 = getelementptr inbounds double* %call412, i64 %add.ptr416.sum1394
  %235 = load double* %arrayidx584, align 8, !tbaa !4
  %sub585 = fsub double %235, %234
  store double %sub585, double* %arrayidx584, align 8, !tbaa !4
  %arrayidx586 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 6
  %236 = load double* %arrayidx586, align 16, !tbaa !4
  %add.ptr416.sum1395 = sub i64 %idxprom569, %idx.ext414
  %arrayidx588 = getelementptr inbounds double* %call412, i64 %add.ptr416.sum1395
  %237 = load double* %arrayidx588, align 8, !tbaa !4
  %sub589 = fsub double %237, %236
  store double %sub589, double* %arrayidx588, align 8, !tbaa !4
  %arrayidx590 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 7
  %238 = load double* %arrayidx590, align 8, !tbaa !4
  %add.ptr416.sum1396 = sub i64 %idxprom574, %idx.ext414
  %arrayidx593 = getelementptr inbounds double* %call412, i64 %add.ptr416.sum1396
  %239 = load double* %arrayidx593, align 8, !tbaa !4
  %sub594 = fsub double %239, %238
  store double %sub594, double* %arrayidx593, align 8, !tbaa !4
  br label %for.cond891.preheader

if.else595:                                       ; preds = %for.end544
  %sub596 = add nsw i32 %.lcssa, -1
  %cmp597 = icmp eq i32 %jcolU.4.lcssa, %sub596
  br i1 %cmp597, label %if.then598, label %for.cond891.preheader

if.then598:                                       ; preds = %if.else595
  %arraydecay599 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 0
  call void @ZVdotU21(i32 %220, double* %call60, double* %add.ptr, double* %colU0.1.lcssa, double* %arraydecay599) #5
  %idxprom600 = sext i32 %jcolU.4.lcssa to i64
  %240 = load i32** %colindU, align 8, !tbaa !0
  %arrayidx601 = getelementptr inbounds i32* %240, i64 %idxprom600
  %241 = load i32* %arrayidx601, align 4, !tbaa !3
  %mul602 = shl nsw i32 %241, 1
  %242 = load double* %arraydecay599, align 16, !tbaa !4
  %idxprom604 = sext i32 %mul602 to i64
  %add.ptr408.sum1383 = sub i64 %idxprom604, %idx.ext406
  %arrayidx605 = getelementptr inbounds double* %call404, i64 %add.ptr408.sum1383
  %243 = load double* %arrayidx605, align 8, !tbaa !4
  %sub606 = fsub double %243, %242
  store double %sub606, double* %arrayidx605, align 8, !tbaa !4
  %arrayidx607 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 1
  %244 = load double* %arrayidx607, align 8, !tbaa !4
  %add6081384 = or i32 %mul602, 1
  %idxprom609 = sext i32 %add6081384 to i64
  %add.ptr408.sum1385 = sub i64 %idxprom609, %idx.ext406
  %arrayidx610 = getelementptr inbounds double* %call404, i64 %add.ptr408.sum1385
  %245 = load double* %arrayidx610, align 8, !tbaa !4
  %sub611 = fsub double %245, %244
  store double %sub611, double* %arrayidx610, align 8, !tbaa !4
  %arrayidx612 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 2
  %246 = load double* %arrayidx612, align 16, !tbaa !4
  %add.ptr416.sum = sub i64 %idxprom604, %idx.ext414
  %arrayidx614 = getelementptr inbounds double* %call412, i64 %add.ptr416.sum
  %247 = load double* %arrayidx614, align 8, !tbaa !4
  %sub615 = fsub double %247, %246
  store double %sub615, double* %arrayidx614, align 8, !tbaa !4
  %arrayidx616 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 3
  %248 = load double* %arrayidx616, align 8, !tbaa !4
  %add.ptr416.sum1386 = sub i64 %idxprom609, %idx.ext414
  %arrayidx619 = getelementptr inbounds double* %call412, i64 %add.ptr416.sum1386
  %249 = load double* %arrayidx619, align 8, !tbaa !4
  %sub620 = fsub double %249, %248
  store double %sub620, double* %arrayidx619, align 8, !tbaa !4
  br label %for.cond891.preheader

if.else623:                                       ; preds = %for.end395
  %cmp624 = icmp eq i32 %irowUT.0.lcssa, %lastInU.0.lcssa1601
  br i1 %cmp624, label %if.then625, label %for.cond891.preheader

if.then625:                                       ; preds = %if.else623
  %idxprom626 = sext i32 %lastInU.0.lcssa1601 to i64
  %250 = load i32** %colindU, align 8, !tbaa !0
  %arrayidx627 = getelementptr inbounds i32* %250, i64 %idxprom626
  %251 = load i32* %arrayidx627, align 4, !tbaa !3
  %call628 = call double* @Chv_diagLocation(%struct._Chv* %chvT, i32 %251) #5
  %mul629 = shl nsw i32 %251, 1
  %idx.ext630 = sext i32 %mul629 to i64
  %252 = load i32* %nrowU, align 4, !tbaa !3
  %mul633 = shl nsw i32 %252, 1
  call void @DVzero(i32 %mul633, double* %call60) #5
  call void @SubMtx_scale1vec(%struct._SubMtx* %mtxD, double* %call60, double* %rowUT0.0.lcssa) #5
  %253 = load i32* %nrowU, align 4, !tbaa !3
  %cmp6351490 = icmp sgt i32 %253, 0
  br i1 %cmp6351490, label %for.body636, label %for.end648

for.body636:                                      ; preds = %if.then625, %for.body636
  %indvars.iv1555 = phi i64 [ %indvars.iv.next1556, %for.body636 ], [ 0, %if.then625 ]
  %254 = trunc i64 %indvars.iv1555 to i32
  %mul637 = shl nsw i32 %254, 1
  %add6381380 = or i32 %mul637, 1
  %idxprom639 = sext i32 %add6381380 to i64
  %arrayidx640 = getelementptr inbounds double* %call60, i64 %idxprom639
  %255 = load double* %arrayidx640, align 8, !tbaa !4
  %sub641 = fsub double -0.000000e+00, %255
  store double %sub641, double* %arrayidx640, align 8, !tbaa !4
  %indvars.iv.next1556 = add i64 %indvars.iv1555, 1
  %256 = trunc i64 %indvars.iv.next1556 to i32
  %cmp635 = icmp slt i32 %256, %253
  br i1 %cmp635, label %for.body636, label %for.end648

for.end648:                                       ; preds = %for.body636, %if.then625
  call void @ZVdotU(i32 %253, double* %call60, double* %rowUT0.0.lcssa, double* %rsum, double* %isum) #5
  %257 = load double* %rsum, align 8, !tbaa !4
  %258 = load double* %call628, align 8, !tbaa !4
  %sub652 = fsub double %258, %257
  store double %sub652, double* %call628, align 8, !tbaa !4
  %259 = load i32* %nrowU, align 4, !tbaa !3
  %mul653 = shl nsw i32 %259, 1
  %idx.ext654 = sext i32 %mul653 to i64
  %add.ptr655 = getelementptr inbounds double* %rowUT0.0.lcssa, i64 %idx.ext654
  %add656 = add i32 %lastInU.0.lcssa1601, 1
  %260 = load i32* %ncolU, align 4, !tbaa !3
  %sub6581481 = add nsw i32 %260, -2
  %cmp6591482 = icmp slt i32 %add656, %sub6581481
  br i1 %cmp6591482, label %for.body660.lr.ph, label %for.end711

for.body660.lr.ph:                                ; preds = %for.end648
  %arraydecay667 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 0
  %arrayidx683 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 1
  %arrayidx688 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 2
  %arrayidx692 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 3
  %arrayidx697 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 4
  %arrayidx701 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 5
  %261 = sext i32 %add656 to i64
  br label %for.body660

for.body660:                                      ; preds = %for.body660.lr.ph, %for.body660
  %262 = phi i32 [ %259, %for.body660.lr.ph ], [ %281, %for.body660 ]
  %indvars.iv1550 = phi i64 [ %261, %for.body660.lr.ph ], [ %indvars.iv.next1551, %for.body660 ]
  %jcolU.51484 = phi i32 [ %add656, %for.body660.lr.ph ], [ %add710, %for.body660 ]
  %colU0.21483 = phi double* [ %add.ptr655, %for.body660.lr.ph ], [ %add.ptr708, %for.body660 ]
  %mul661 = shl nsw i32 %262, 1
  %idx.ext662 = sext i32 %mul661 to i64
  %add.ptr663 = getelementptr inbounds double* %colU0.21483, i64 %idx.ext662
  %add.ptr663.sum = shl nsw i64 %idx.ext662, 1
  %add.ptr666 = getelementptr inbounds double* %colU0.21483, i64 %add.ptr663.sum
  call void @ZVdotU13(i32 %262, double* %call60, double* %colU0.21483, double* %add.ptr663, double* %add.ptr666, double* %arraydecay667) #5
  %263 = load i32** %colindU, align 8, !tbaa !0
  %arrayidx669 = getelementptr inbounds i32* %263, i64 %indvars.iv1550
  %264 = load i32* %arrayidx669, align 4, !tbaa !3
  %mul670 = shl nsw i32 %264, 1
  %265 = add nsw i64 %indvars.iv1550, 1
  %arrayidx673 = getelementptr inbounds i32* %263, i64 %265
  %266 = load i32* %arrayidx673, align 4, !tbaa !3
  %mul674 = shl nsw i32 %266, 1
  %267 = add nsw i64 %indvars.iv1550, 2
  %arrayidx677 = getelementptr inbounds i32* %263, i64 %267
  %268 = load i32* %arrayidx677, align 4, !tbaa !3
  %mul678 = shl nsw i32 %268, 1
  %269 = load double* %arraydecay667, align 16, !tbaa !4
  %idxprom680 = sext i32 %mul670 to i64
  %add.ptr632.sum1371 = sub i64 %idxprom680, %idx.ext630
  %arrayidx681 = getelementptr inbounds double* %call628, i64 %add.ptr632.sum1371
  %270 = load double* %arrayidx681, align 8, !tbaa !4
  %sub682 = fsub double %270, %269
  store double %sub682, double* %arrayidx681, align 8, !tbaa !4
  %271 = load double* %arrayidx683, align 8, !tbaa !4
  %add6841372 = or i32 %mul670, 1
  %idxprom685 = sext i32 %add6841372 to i64
  %add.ptr632.sum1373 = sub i64 %idxprom685, %idx.ext630
  %arrayidx686 = getelementptr inbounds double* %call628, i64 %add.ptr632.sum1373
  %272 = load double* %arrayidx686, align 8, !tbaa !4
  %sub687 = fsub double %272, %271
  store double %sub687, double* %arrayidx686, align 8, !tbaa !4
  %273 = load double* %arrayidx688, align 16, !tbaa !4
  %idxprom689 = sext i32 %mul674 to i64
  %add.ptr632.sum1374 = sub i64 %idxprom689, %idx.ext630
  %arrayidx690 = getelementptr inbounds double* %call628, i64 %add.ptr632.sum1374
  %274 = load double* %arrayidx690, align 8, !tbaa !4
  %sub691 = fsub double %274, %273
  store double %sub691, double* %arrayidx690, align 8, !tbaa !4
  %275 = load double* %arrayidx692, align 8, !tbaa !4
  %add6931375 = or i32 %mul674, 1
  %idxprom694 = sext i32 %add6931375 to i64
  %add.ptr632.sum1376 = sub i64 %idxprom694, %idx.ext630
  %arrayidx695 = getelementptr inbounds double* %call628, i64 %add.ptr632.sum1376
  %276 = load double* %arrayidx695, align 8, !tbaa !4
  %sub696 = fsub double %276, %275
  store double %sub696, double* %arrayidx695, align 8, !tbaa !4
  %277 = load double* %arrayidx697, align 16, !tbaa !4
  %idxprom698 = sext i32 %mul678 to i64
  %add.ptr632.sum1377 = sub i64 %idxprom698, %idx.ext630
  %arrayidx699 = getelementptr inbounds double* %call628, i64 %add.ptr632.sum1377
  %278 = load double* %arrayidx699, align 8, !tbaa !4
  %sub700 = fsub double %278, %277
  store double %sub700, double* %arrayidx699, align 8, !tbaa !4
  %279 = load double* %arrayidx701, align 8, !tbaa !4
  %add7021378 = or i32 %mul678, 1
  %idxprom703 = sext i32 %add7021378 to i64
  %add.ptr632.sum1379 = sub i64 %idxprom703, %idx.ext630
  %arrayidx704 = getelementptr inbounds double* %call628, i64 %add.ptr632.sum1379
  %280 = load double* %arrayidx704, align 8, !tbaa !4
  %sub705 = fsub double %280, %279
  store double %sub705, double* %arrayidx704, align 8, !tbaa !4
  %281 = load i32* %nrowU, align 4, !tbaa !3
  %mul706 = shl nsw i32 %281, 1
  %idx.ext707 = sext i32 %mul706 to i64
  %add.ptr666.sum = add i64 %idx.ext707, %add.ptr663.sum
  %add.ptr708 = getelementptr inbounds double* %colU0.21483, i64 %add.ptr666.sum
  %add710 = add nsw i32 %jcolU.51484, 3
  %282 = load i32* %ncolU, align 4, !tbaa !3
  %sub658 = add nsw i32 %282, -2
  %cmp659 = icmp slt i32 %add710, %sub658
  %indvars.iv.next1551 = add i64 %indvars.iv1550, 3
  br i1 %cmp659, label %for.body660, label %for.end711

for.end711:                                       ; preds = %for.body660, %for.end648
  %283 = phi i32 [ %259, %for.end648 ], [ %281, %for.body660 ]
  %sub658.lcssa = phi i32 [ %sub6581481, %for.end648 ], [ %sub658, %for.body660 ]
  %.lcssa1480 = phi i32 [ %260, %for.end648 ], [ %282, %for.body660 ]
  %jcolU.5.lcssa = phi i32 [ %add656, %for.end648 ], [ %add710, %for.body660 ]
  %colU0.2.lcssa = phi double* [ %add.ptr655, %for.end648 ], [ %add.ptr708, %for.body660 ]
  %cmp713 = icmp eq i32 %jcolU.5.lcssa, %sub658.lcssa
  br i1 %cmp713, label %if.then714, label %if.else744

if.then714:                                       ; preds = %for.end711
  %mul715 = shl nsw i32 %283, 1
  %idx.ext716 = sext i32 %mul715 to i64
  %add.ptr717 = getelementptr inbounds double* %colU0.2.lcssa, i64 %idx.ext716
  %arraydecay718 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 0
  call void @ZVdotU12(i32 %283, double* %call60, double* %colU0.2.lcssa, double* %add.ptr717, double* %arraydecay718) #5
  %idxprom719 = sext i32 %sub658.lcssa to i64
  %284 = load i32** %colindU, align 8, !tbaa !0
  %arrayidx720 = getelementptr inbounds i32* %284, i64 %idxprom719
  %285 = load i32* %arrayidx720, align 4, !tbaa !3
  %mul721 = shl nsw i32 %285, 1
  %add722 = add nsw i32 %sub658.lcssa, 1
  %idxprom723 = sext i32 %add722 to i64
  %arrayidx724 = getelementptr inbounds i32* %284, i64 %idxprom723
  %286 = load i32* %arrayidx724, align 4, !tbaa !3
  %mul725 = shl nsw i32 %286, 1
  %287 = load double* %arraydecay718, align 16, !tbaa !4
  %idxprom727 = sext i32 %mul721 to i64
  %add.ptr632.sum1365 = sub i64 %idxprom727, %idx.ext630
  %arrayidx728 = getelementptr inbounds double* %call628, i64 %add.ptr632.sum1365
  %288 = load double* %arrayidx728, align 8, !tbaa !4
  %sub729 = fsub double %288, %287
  store double %sub729, double* %arrayidx728, align 8, !tbaa !4
  %arrayidx730 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 1
  %289 = load double* %arrayidx730, align 8, !tbaa !4
  %add7311366 = or i32 %mul721, 1
  %idxprom732 = sext i32 %add7311366 to i64
  %add.ptr632.sum1367 = sub i64 %idxprom732, %idx.ext630
  %arrayidx733 = getelementptr inbounds double* %call628, i64 %add.ptr632.sum1367
  %290 = load double* %arrayidx733, align 8, !tbaa !4
  %sub734 = fsub double %290, %289
  store double %sub734, double* %arrayidx733, align 8, !tbaa !4
  %arrayidx735 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 2
  %291 = load double* %arrayidx735, align 16, !tbaa !4
  %idxprom736 = sext i32 %mul725 to i64
  %add.ptr632.sum1368 = sub i64 %idxprom736, %idx.ext630
  %arrayidx737 = getelementptr inbounds double* %call628, i64 %add.ptr632.sum1368
  %292 = load double* %arrayidx737, align 8, !tbaa !4
  %sub738 = fsub double %292, %291
  store double %sub738, double* %arrayidx737, align 8, !tbaa !4
  %arrayidx739 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 3
  %293 = load double* %arrayidx739, align 8, !tbaa !4
  %add7401369 = or i32 %mul725, 1
  %idxprom741 = sext i32 %add7401369 to i64
  %add.ptr632.sum1370 = sub i64 %idxprom741, %idx.ext630
  %arrayidx742 = getelementptr inbounds double* %call628, i64 %add.ptr632.sum1370
  %294 = load double* %arrayidx742, align 8, !tbaa !4
  %sub743 = fsub double %294, %293
  store double %sub743, double* %arrayidx742, align 8, !tbaa !4
  br label %for.cond891.preheader

if.else744:                                       ; preds = %for.end711
  %sub745 = add nsw i32 %.lcssa1480, -1
  %cmp746 = icmp eq i32 %jcolU.5.lcssa, %sub745
  br i1 %cmp746, label %if.then747, label %for.cond891.preheader

if.then747:                                       ; preds = %if.else744
  %arraydecay748 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 0
  call void @ZVdotU11(i32 %283, double* %call60, double* %colU0.2.lcssa, double* %arraydecay748) #5
  %idxprom749 = sext i32 %jcolU.5.lcssa to i64
  %295 = load i32** %colindU, align 8, !tbaa !0
  %arrayidx750 = getelementptr inbounds i32* %295, i64 %idxprom749
  %296 = load i32* %arrayidx750, align 4, !tbaa !3
  %mul751 = shl nsw i32 %296, 1
  %297 = load double* %arraydecay748, align 16, !tbaa !4
  %idxprom753 = sext i32 %mul751 to i64
  %add.ptr632.sum = sub i64 %idxprom753, %idx.ext630
  %arrayidx754 = getelementptr inbounds double* %call628, i64 %add.ptr632.sum
  %298 = load double* %arrayidx754, align 8, !tbaa !4
  %sub755 = fsub double %298, %297
  store double %sub755, double* %arrayidx754, align 8, !tbaa !4
  %arrayidx756 = getelementptr inbounds [18 x double]* %sums, i64 0, i64 1
  %299 = load double* %arrayidx756, align 8, !tbaa !4
  %add7571363 = or i32 %mul751, 1
  %idxprom758 = sext i32 %add7571363 to i64
  %add.ptr632.sum1364 = sub i64 %idxprom758, %idx.ext630
  %arrayidx759 = getelementptr inbounds double* %call628, i64 %add.ptr632.sum1364
  %300 = load double* %arrayidx759, align 8, !tbaa !4
  %sub760 = fsub double %300, %299
  store double %sub760, double* %arrayidx759, align 8, !tbaa !4
  br label %for.cond891.preheader

if.then768:                                       ; preds = %for.end57
  call void @SubMtx_sparseColumnsInfo(%struct._SubMtx* %mtxU, i32* %ncolU, i32* %nentU, i32** %sizes, i32** %indU, double** %entU773) #5
  %nrow = getelementptr inbounds %struct._SubMtx* %mtxU, i64 0, i32 4
  %301 = load i32* %nrow, align 4, !tbaa !3
  %mul782 = shl nsw i32 %301, 2
  call void @DV_setSize(%struct._DV* %tempDV, i32 %mul782) #5
  %call783 = call double* @DV_entries(%struct._DV* %tempDV) #5
  %mul784 = shl nsw i32 %301, 1
  %idx.ext785 = sext i32 %mul784 to i64
  %add.ptr786 = getelementptr inbounds double* %call783, i64 %idx.ext785
  %cmp7881524 = icmp sgt i32 %jcolU.0.lcssa, 0
  br i1 %cmp7881524, label %for.body789.lr.ph, label %for.end795

for.body789.lr.ph:                                ; preds = %if.then768
  %302 = load i32** %sizes, align 8, !tbaa !0
  br label %for.body789

for.body789:                                      ; preds = %for.body789, %for.body789.lr.ph
  %indvars.iv1584 = phi i64 [ 0, %for.body789.lr.ph ], [ %indvars.iv.next1585, %for.body789 ]
  %offset.01525 = phi i32 [ 0, %for.body789.lr.ph ], [ %add792, %for.body789 ]
  %arrayidx791 = getelementptr inbounds i32* %302, i64 %indvars.iv1584
  %303 = load i32* %arrayidx791, align 4, !tbaa !3
  %add792 = add nsw i32 %303, %offset.01525
  %indvars.iv.next1585 = add i64 %indvars.iv1584, 1
  %lftr.wideiv1586 = trunc i64 %indvars.iv.next1585 to i32
  %exitcond1587 = icmp eq i32 %lftr.wideiv1586, %jcolU.0.lcssa
  br i1 %exitcond1587, label %for.end795, label %for.body789

for.end795:                                       ; preds = %for.body789, %if.then768
  %offset.0.lcssa = phi i32 [ 0, %if.then768 ], [ %add792, %for.body789 ]
  %cmp8021519 = icmp sgt i32 %jcolU.0.lcssa, %lastInU.0.lcssa1601
  br i1 %cmp8021519, label %for.cond891.preheader, label %for.body803.lr.ph

for.body803.lr.ph:                                ; preds = %for.end795
  %mul796 = shl nsw i32 %offset.0.lcssa, 1
  %idx.ext799 = sext i32 %offset.0.lcssa to i64
  %304 = load i32** %indU, align 8, !tbaa !0
  %idx.ext797 = sext i32 %mul796 to i64
  %305 = load double** %entU773, align 8, !tbaa !0
  %add.ptr800 = getelementptr inbounds i32* %304, i64 %idx.ext799
  %add.ptr798 = getelementptr inbounds double* %305, i64 %idx.ext797
  %cmp8381513 = icmp sgt i32 %301, 0
  %306 = sext i32 %jcolU.0.lcssa to i64
  br label %for.body803

for.cond891.preheader:                            ; preds = %for.end795, %for.inc884, %if.else623, %if.else595, %if.then598, %if.then547, %if.then714, %if.then747, %if.else744
  %307 = load i32* %ncolU, align 4, !tbaa !3
  %cmp8921467 = icmp slt i32 %jcolU.0.lcssa, %307
  br i1 %cmp8921467, label %for.body893.lr.ph, label %return

for.body893.lr.ph:                                ; preds = %for.cond891.preheader
  %308 = load i32** %colindU, align 8, !tbaa !0
  %309 = load i32** %colindT, align 8, !tbaa !0
  %310 = sext i32 %jcolU.0.lcssa to i64
  br label %for.body893

for.body803:                                      ; preds = %for.inc884.for.body803_crit_edge, %for.body803.lr.ph
  %indvars.iv1582 = phi i64 [ %indvars.iv.next1583, %for.inc884.for.body803_crit_edge ], [ %306, %for.body803.lr.ph ]
  %indUT0.01523 = phi i32* [ %indUT0.1, %for.inc884.for.body803_crit_edge ], [ %add.ptr800, %for.body803.lr.ph ]
  %rowUT0774.01520 = phi double* [ %rowUT0774.1, %for.inc884.for.body803_crit_edge ], [ %add.ptr798, %for.body803.lr.ph ]
  %311 = load i32** %sizes, align 8, !tbaa !0
  %arrayidx805 = getelementptr inbounds i32* %311, i64 %indvars.iv1582
  %312 = load i32* %arrayidx805, align 4, !tbaa !3
  %cmp806 = icmp sgt i32 %312, 0
  br i1 %cmp806, label %for.body818.lr.ph, label %for.body803.for.inc884_crit_edge

for.body803.for.inc884_crit_edge:                 ; preds = %for.body803
  %.pre1600 = trunc i64 %indvars.iv1582 to i32
  br label %for.inc884

for.body818.lr.ph:                                ; preds = %for.body803
  %313 = load i32** %colindU, align 8, !tbaa !0
  %arrayidx809 = getelementptr inbounds i32* %313, i64 %indvars.iv1582
  %314 = load i32* %arrayidx809, align 4, !tbaa !3
  %call810 = call double* @Chv_diagLocation(%struct._Chv* %chvT, i32 %314) #5
  %mul811 = shl nsw i32 %314, 1
  %idx.ext812 = sext i32 %mul811 to i64
  call void @DVzero(i32 %mul782, double* %call783) #5
  br label %for.body818

for.body818:                                      ; preds = %for.body818, %for.body818.lr.ph
  %indvars.iv1572 = phi i64 [ 0, %for.body818.lr.ph ], [ %indvars.iv.next1573, %for.body818 ]
  %arrayidx820 = getelementptr inbounds i32* %indUT0.01523, i64 %indvars.iv1572
  %315 = load i32* %arrayidx820, align 4, !tbaa !3
  %mul821 = shl nsw i32 %315, 1
  %add8221360 = or i32 %mul821, 1
  %316 = trunc i64 %indvars.iv1572 to i32
  %mul823 = shl nsw i32 %316, 1
  %idxprom824 = sext i32 %mul823 to i64
  %arrayidx825 = getelementptr inbounds double* %rowUT0774.01520, i64 %idxprom824
  %317 = load double* %arrayidx825, align 8, !tbaa !4
  %idxprom826 = sext i32 %mul821 to i64
  %add.ptr786.sum = add i64 %idxprom826, %idx.ext785
  %arrayidx827 = getelementptr inbounds double* %call783, i64 %add.ptr786.sum
  store double %317, double* %arrayidx827, align 8, !tbaa !4
  %add8291361 = or i32 %mul823, 1
  %idxprom830 = sext i32 %add8291361 to i64
  %arrayidx831 = getelementptr inbounds double* %rowUT0774.01520, i64 %idxprom830
  %318 = load double* %arrayidx831, align 8, !tbaa !4
  %idxprom832 = sext i32 %add8221360 to i64
  %add.ptr786.sum1362 = add i64 %idxprom832, %idx.ext785
  %arrayidx833 = getelementptr inbounds double* %call783, i64 %add.ptr786.sum1362
  store double %318, double* %arrayidx833, align 8, !tbaa !4
  %indvars.iv.next1573 = add i64 %indvars.iv1572, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next1573 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %312
  br i1 %exitcond, label %for.end836, label %for.body818

for.end836:                                       ; preds = %for.body818
  call void @SubMtx_scale1vec(%struct._SubMtx* %mtxD, double* %call783, double* %add.ptr786) #5
  br i1 %cmp8381513, label %for.body839, label %for.cond852.loopexit

for.body839:                                      ; preds = %for.end836, %for.body839
  %indvars.iv1574 = phi i64 [ %indvars.iv.next1575, %for.body839 ], [ 0, %for.end836 ]
  %319 = trunc i64 %indvars.iv1574 to i32
  %mul840 = shl nsw i32 %319, 1
  %add8411359 = or i32 %mul840, 1
  %idxprom842 = sext i32 %add8411359 to i64
  %arrayidx843 = getelementptr inbounds double* %call783, i64 %idxprom842
  %320 = load double* %arrayidx843, align 8, !tbaa !4
  %sub844 = fsub double -0.000000e+00, %320
  store double %sub844, double* %arrayidx843, align 8, !tbaa !4
  %indvars.iv.next1575 = add i64 %indvars.iv1574, 1
  %lftr.wideiv1576 = trunc i64 %indvars.iv.next1575 to i32
  %exitcond1577 = icmp eq i32 %lftr.wideiv1576, %301
  br i1 %exitcond1577, label %for.cond852.loopexit, label %for.body839

for.cond852.loopexit:                             ; preds = %for.body839, %for.end836
  %321 = load i32* %ncolU, align 4, !tbaa !3
  %322 = trunc i64 %indvars.iv1582 to i32
  %cmp8531515 = icmp slt i32 %322, %321
  br i1 %cmp8531515, label %for.body854, label %for.end877

for.body854:                                      ; preds = %for.inc875, %for.cond852.loopexit
  %323 = phi i32 [ %321, %for.cond852.loopexit ], [ %332, %for.inc875 ]
  %indvars.iv1580 = phi i64 [ %indvars.iv1582, %for.cond852.loopexit ], [ %indvars.iv.next1581, %for.inc875 ]
  %indU0.01518 = phi i32* [ %indUT0.01523, %for.cond852.loopexit ], [ %indU0.1, %for.inc875 ]
  %colU0772.01516 = phi double* [ %rowUT0774.01520, %for.cond852.loopexit ], [ %colU0772.1, %for.inc875 ]
  %324 = load i32** %sizes, align 8, !tbaa !0
  %arrayidx856 = getelementptr inbounds i32* %324, i64 %indvars.iv1580
  %325 = load i32* %arrayidx856, align 4, !tbaa !3
  %cmp857 = icmp sgt i32 %325, 0
  br i1 %cmp857, label %if.then858, label %for.inc875

if.then858:                                       ; preds = %for.body854
  call void @ZVdotiU(i32 %325, double* %call783, i32* %indU0.01518, double* %colU0772.01516, double* %rsum770, double* %isum769) #5
  %326 = load i32** %colindU, align 8, !tbaa !0
  %arrayidx860 = getelementptr inbounds i32* %326, i64 %indvars.iv1580
  %327 = load i32* %arrayidx860, align 4, !tbaa !3
  %mul861 = shl nsw i32 %327, 1
  %328 = load double* %rsum770, align 8, !tbaa !4
  %idxprom862 = sext i32 %mul861 to i64
  %add.ptr814.sum = sub i64 %idxprom862, %idx.ext812
  %arrayidx863 = getelementptr inbounds double* %call810, i64 %add.ptr814.sum
  %329 = load double* %arrayidx863, align 8, !tbaa !4
  %sub864 = fsub double %329, %328
  store double %sub864, double* %arrayidx863, align 8, !tbaa !4
  %330 = load double* %isum769, align 8, !tbaa !4
  %add8651357 = or i32 %mul861, 1
  %idxprom866 = sext i32 %add8651357 to i64
  %add.ptr814.sum1358 = sub i64 %idxprom866, %idx.ext812
  %arrayidx867 = getelementptr inbounds double* %call810, i64 %add.ptr814.sum1358
  %331 = load double* %arrayidx867, align 8, !tbaa !4
  %sub868 = fsub double %331, %330
  store double %sub868, double* %arrayidx867, align 8, !tbaa !4
  %mul869 = shl nsw i32 %325, 1
  %idx.ext870 = sext i32 %mul869 to i64
  %add.ptr871 = getelementptr inbounds double* %colU0772.01516, i64 %idx.ext870
  %idx.ext872 = sext i32 %325 to i64
  %add.ptr873 = getelementptr inbounds i32* %indU0.01518, i64 %idx.ext872
  %.pre = load i32* %ncolU, align 4, !tbaa !3
  br label %for.inc875

for.inc875:                                       ; preds = %for.body854, %if.then858
  %332 = phi i32 [ %.pre, %if.then858 ], [ %323, %for.body854 ]
  %colU0772.1 = phi double* [ %add.ptr871, %if.then858 ], [ %colU0772.01516, %for.body854 ]
  %indU0.1 = phi i32* [ %add.ptr873, %if.then858 ], [ %indU0.01518, %for.body854 ]
  %indvars.iv.next1581 = add i64 %indvars.iv1580, 1
  %333 = trunc i64 %indvars.iv.next1581 to i32
  %cmp853 = icmp slt i32 %333, %332
  br i1 %cmp853, label %for.body854, label %for.end877

for.end877:                                       ; preds = %for.inc875, %for.cond852.loopexit
  %mul878 = shl nsw i32 %312, 1
  %idx.ext879 = sext i32 %mul878 to i64
  %add.ptr880 = getelementptr inbounds double* %rowUT0774.01520, i64 %idx.ext879
  %idx.ext881 = sext i32 %312 to i64
  %add.ptr882 = getelementptr inbounds i32* %indUT0.01523, i64 %idx.ext881
  br label %for.inc884

for.inc884:                                       ; preds = %for.body803.for.inc884_crit_edge, %for.end877
  %.pre-phi = phi i32 [ %.pre1600, %for.body803.for.inc884_crit_edge ], [ %322, %for.end877 ]
  %rowUT0774.1 = phi double* [ %rowUT0774.01520, %for.body803.for.inc884_crit_edge ], [ %add.ptr880, %for.end877 ]
  %indUT0.1 = phi i32* [ %indUT0.01523, %for.body803.for.inc884_crit_edge ], [ %add.ptr882, %for.end877 ]
  %cmp802 = icmp slt i32 %.pre-phi, %lastInU.0.lcssa1601
  br i1 %cmp802, label %for.inc884.for.body803_crit_edge, label %for.cond891.preheader

for.inc884.for.body803_crit_edge:                 ; preds = %for.inc884
  %indvars.iv.next1583 = add i64 %indvars.iv1582, 1
  br label %for.body803

if.else887:                                       ; preds = %for.end57
  %334 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call888 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %334, i8* getelementptr inbounds ([83 x i8]* @.str4, i64 0, i64 0), %struct._Chv* %chvT, %struct._SubMtx* %mtxD, %struct._SubMtx* %mtxU, %struct._DV* %tempDV) #5
  call void @exit(i32 -1) #6
  unreachable

for.body893:                                      ; preds = %for.body893.lr.ph, %for.body893
  %indvars.iv = phi i64 [ %310, %for.body893.lr.ph ], [ %indvars.iv.next, %for.body893 ]
  %arrayidx895 = getelementptr inbounds i32* %308, i64 %indvars.iv
  %335 = load i32* %arrayidx895, align 4, !tbaa !3
  %idxprom896 = sext i32 %335 to i64
  %arrayidx897 = getelementptr inbounds i32* %309, i64 %idxprom896
  %336 = load i32* %arrayidx897, align 4, !tbaa !3
  store i32 %336, i32* %arrayidx895, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %337 = load i32* %ncolU, align 4, !tbaa !3
  %338 = trunc i64 %indvars.iv.next to i32
  %cmp892 = icmp slt i32 %338, %337
  br i1 %cmp892, label %for.body893, label %return

return:                                           ; preds = %for.cond891.preheader, %for.body893, %for.end
  ret void
}
