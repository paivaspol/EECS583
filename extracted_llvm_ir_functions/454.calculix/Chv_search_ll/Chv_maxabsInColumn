define i32 @Chv_maxabsInColumn(%struct._Chv* %chv, i32 %jcol, double* %pmaxval) #0 {
  %nD = alloca i32, align 4
  %nL = alloca i32, align 4
  %nU = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct._Chv* %chv, i64 0, metadata !108, metadata !161), !dbg !932
  tail call void @llvm.dbg.value(metadata i32 %jcol, i64 0, metadata !109, metadata !161), !dbg !933
  tail call void @llvm.dbg.value(metadata double* %pmaxval, i64 0, metadata !110, metadata !161), !dbg !934
  %1 = icmp eq %struct._Chv* %chv, null, !dbg !935
  %2 = icmp slt i32 %jcol, 0, !dbg !937
  %or.cond = or i1 %1, %2, !dbg !938
  %3 = icmp eq double* %pmaxval, null, !dbg !939
  %or.cond3 = or i1 %or.cond, %3, !dbg !938
  br i1 %or.cond3, label %4, label %7, !dbg !938

; <label>:4                                       ; preds = %0
  %5 = load %struct.__sFILE** @__stderrp, align 8, !dbg !940, !tbaa !173
  %6 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %5, i8* getelementptr inbounds ([58 x i8]* @.str12, i64 0, i64 0), %struct._Chv* %chv, i32 %jcol, double* %pmaxval) #6, !dbg !942
  tail call void @exit(i32 -1) #7, !dbg !943
  unreachable, !dbg !943

; <label>:7                                       ; preds = %0
  tail call void @llvm.dbg.value(metadata i32* %nD, i64 0, metadata !116, metadata !161), !dbg !944
  tail call void @llvm.dbg.value(metadata i32* %nL, i64 0, metadata !117, metadata !161), !dbg !945
  tail call void @llvm.dbg.value(metadata i32* %nU, i64 0, metadata !119, metadata !161), !dbg !946
  call void @Chv_dimensions(%struct._Chv* %chv, i32* %nD, i32* %nL, i32* %nU) #6, !dbg !947
  %8 = call double* @Chv_entries(%struct._Chv* %chv) #6, !dbg !948
  call void @llvm.dbg.value(metadata double* %8, i64 0, metadata !113, metadata !161), !dbg !949
  call void @llvm.dbg.value(metadata i32* %nD, i64 0, metadata !116, metadata !161), !dbg !944
  %9 = load i32* %nD, align 4, !dbg !950, !tbaa !201
  call void @llvm.dbg.value(metadata i32* %nL, i64 0, metadata !117, metadata !161), !dbg !945
  %10 = load i32* %nL, align 4, !dbg !951, !tbaa !201
  %11 = add i32 %10, %9, !dbg !952
  call void @llvm.dbg.value(metadata i32 %11, i64 0, metadata !118, metadata !161), !dbg !953
  call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !114, metadata !161), !dbg !954
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !111, metadata !161), !dbg !955
  %12 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 4, !dbg !956
  %13 = load i32* %12, align 4, !dbg !956, !tbaa !187
  switch i32 %13, label %206 [
    i32 1, label %14
    i32 2, label %98
  ], !dbg !958

; <label>:14                                      ; preds = %7
  %15 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 5, !dbg !959
  %16 = load i32* %15, align 4, !dbg !959, !tbaa !195
  switch i32 %16, label %.loopexit [
    i32 2, label %17
    i32 0, label %60
  ], !dbg !962

; <label>:17                                      ; preds = %14
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !111, metadata !161), !dbg !955
  %18 = add i32 %jcol, -1, !dbg !963
  %19 = add i32 %18, %11, !dbg !965
  call void @llvm.dbg.value(metadata i32 %19, i64 0, metadata !120, metadata !161), !dbg !966
  call void @llvm.dbg.value(metadata i32* %nU, i64 0, metadata !119, metadata !161), !dbg !946
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !115, metadata !161), !dbg !967
  %20 = icmp sgt i32 %jcol, 0, !dbg !968
  br i1 %20, label %.lr.ph28, label %.preheader, !dbg !971

.lr.ph28:                                         ; preds = %17
  %21 = load i32* %nU, align 4, !dbg !972, !tbaa !201
  %22 = add i32 %10, %21, !dbg !971
  %23 = shl i32 %9, 1, !dbg !971
  %24 = add i32 %22, %23, !dbg !971
  %25 = add i32 %24, -3, !dbg !971
  %26 = sext i32 %25 to i64
  %27 = add i32 %21, %jcol, !dbg !971
  %28 = add i32 %24, -5, !dbg !971
  %29 = mul i32 %28, %18, !dbg !971
  %30 = add i32 %27, %29, !dbg !971
  %31 = mul i32 %9, 3, !dbg !971
  %32 = add i32 %30, %31, !dbg !971
  %33 = shl i32 %10, 1, !dbg !971
  %34 = add i32 %32, %33, !dbg !971
  %35 = add i32 %jcol, -2, !dbg !971
  %36 = mul i32 %18, %35, !dbg !971
  %37 = and i32 %36, -2, !dbg !971
  br label %43, !dbg !971

..preheader_crit_edge:                            ; preds = %43
  %38 = add i32 %34, -4, !dbg !971
  %39 = sub i32 %38, %37, !dbg !971
  br label %.preheader, !dbg !971

.preheader:                                       ; preds = %..preheader_crit_edge, %17
  %off.0.lcssa = phi i32 [ %39, %..preheader_crit_edge ], [ %19, %17 ]
  %maxval.0.lcssa = phi double [ %maxval.1, %..preheader_crit_edge ], [ 0.000000e+00, %17 ]
  %irow.0.lcssa = phi i32 [ %irow.1, %..preheader_crit_edge ], [ -1, %17 ]
  %40 = icmp sgt i32 %11, %jcol, !dbg !973
  br i1 %40, label %.lr.ph, label %.loopexit, !dbg !976

.lr.ph:                                           ; preds = %.preheader
  %41 = sext i32 %off.0.lcssa to i64
  %42 = add i32 %11, -1, !dbg !976
  br label %53, !dbg !976

; <label>:43                                      ; preds = %43, %.lr.ph28
  %indvars.iv85 = phi i64 [ %26, %.lr.ph28 ], [ %indvars.iv.next86, %43 ]
  %off.026 = phi i32 [ %19, %.lr.ph28 ], [ %51, %43 ]
  %maxval.025 = phi double [ 0.000000e+00, %.lr.ph28 ], [ %maxval.1, %43 ]
  %ii.024 = phi i32 [ 0, %.lr.ph28 ], [ %52, %43 ]
  %irow.023 = phi i32 [ -1, %.lr.ph28 ], [ %irow.1, %43 ]
  %44 = sext i32 %off.026 to i64, !dbg !977
  %45 = getelementptr inbounds double* %8, i64 %44, !dbg !977
  %46 = load double* %45, align 8, !dbg !977, !tbaa !219
  %47 = call double @fabs(double %46) #8, !dbg !979
  call void @llvm.dbg.value(metadata double %47, i64 0, metadata !112, metadata !161), !dbg !980
  %48 = icmp eq i32 %irow.023, -1, !dbg !981
  %49 = fcmp olt double %maxval.025, %47, !dbg !983
  %or.cond4 = or i1 %48, %49, !dbg !984
  call void @llvm.dbg.value(metadata i32 %52, i64 0, metadata !114, metadata !161), !dbg !954
  call void @llvm.dbg.value(metadata double %47, i64 0, metadata !111, metadata !161), !dbg !955
  %irow.1 = select i1 %or.cond4, i32 %ii.024, i32 %irow.023, !dbg !984
  %maxval.1 = select i1 %or.cond4, double %47, double %maxval.025, !dbg !984
  %50 = trunc i64 %indvars.iv85 to i32, !dbg !985
  %51 = add nsw i32 %50, %off.026, !dbg !985
  call void @llvm.dbg.value(metadata i32 %51, i64 0, metadata !120, metadata !161), !dbg !966
  %52 = add nuw nsw i32 %ii.024, 1, !dbg !986
  call void @llvm.dbg.value(metadata i32 %52, i64 0, metadata !115, metadata !161), !dbg !967
  %indvars.iv.next86 = add nsw i64 %indvars.iv85, -2, !dbg !971
  %exitcond87 = icmp eq i32 %ii.024, %18, !dbg !971
  br i1 %exitcond87, label %..preheader_crit_edge, label %43, !dbg !971

; <label>:53                                      ; preds = %53, %.lr.ph
  %indvars.iv = phi i64 [ %41, %.lr.ph ], [ %indvars.iv.next, %53 ]
  %maxval.220 = phi double [ %maxval.0.lcssa, %.lr.ph ], [ %maxval.3, %53 ]
  %ii.119 = phi i32 [ %jcol, %.lr.ph ], [ %59, %53 ]
  %irow.218 = phi i32 [ %irow.0.lcssa, %.lr.ph ], [ %irow.3, %53 ]
  %54 = getelementptr inbounds double* %8, i64 %indvars.iv, !dbg !987
  %55 = load double* %54, align 8, !dbg !987, !tbaa !219
  %56 = call double @fabs(double %55) #8, !dbg !989
  call void @llvm.dbg.value(metadata double %56, i64 0, metadata !112, metadata !161), !dbg !980
  %57 = icmp eq i32 %irow.218, -1, !dbg !990
  %58 = fcmp olt double %maxval.220, %56, !dbg !992
  %or.cond5 = or i1 %57, %58, !dbg !993
  call void @llvm.dbg.value(metadata i32 %59, i64 0, metadata !114, metadata !161), !dbg !954
  call void @llvm.dbg.value(metadata double %56, i64 0, metadata !111, metadata !161), !dbg !955
  %irow.3 = select i1 %or.cond5, i32 %ii.119, i32 %irow.218, !dbg !993
  %maxval.3 = select i1 %or.cond5, double %56, double %maxval.220, !dbg !993
  %59 = add nsw i32 %ii.119, 1, !dbg !994
  call void @llvm.dbg.value(metadata i32 %59, i64 0, metadata !115, metadata !161), !dbg !967
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !976
  %exitcond = icmp eq i32 %ii.119, %42, !dbg !976
  br i1 %exitcond, label %.loopexit, label %53, !dbg !976

; <label>:60                                      ; preds = %14
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !111, metadata !161), !dbg !955
  call void @llvm.dbg.value(metadata i32 %jcol, i64 0, metadata !120, metadata !161), !dbg !966
  call void @llvm.dbg.value(metadata i32* %nU, i64 0, metadata !119, metadata !161), !dbg !946
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !115, metadata !161), !dbg !967
  %61 = icmp sgt i32 %jcol, 0, !dbg !995
  br i1 %61, label %.lr.ph45, label %.preheader12, !dbg !1000

.lr.ph45:                                         ; preds = %60
  %62 = load i32* %nU, align 4, !dbg !1001, !tbaa !201
  %63 = add nsw i32 %62, %9, !dbg !1002
  %64 = sext i32 %63 to i64
  %65 = add i32 %63, %jcol, !dbg !1000
  %66 = add i32 %63, -2, !dbg !1000
  %67 = add i32 %jcol, -1, !dbg !1000
  %68 = mul i32 %66, %67, !dbg !1000
  %69 = add i32 %65, %68, !dbg !1000
  %70 = zext i32 %67 to i33
  %71 = add i32 %jcol, -2, !dbg !1000
  %72 = zext i32 %71 to i33
  %73 = mul i33 %70, %72, !dbg !1000
  %74 = lshr i33 %73, 1, !dbg !1000
  %75 = trunc i33 %74 to i32
  br label %81, !dbg !1000

..preheader12_crit_edge:                          ; preds = %81
  %76 = add i32 %69, -1, !dbg !1000
  %77 = sub i32 %76, %75, !dbg !1000
  br label %.preheader12, !dbg !1000

.preheader12:                                     ; preds = %..preheader12_crit_edge, %60
  %off.2.lcssa = phi i32 [ %77, %..preheader12_crit_edge ], [ %jcol, %60 ]
  %maxval.4.lcssa = phi double [ %maxval.5, %..preheader12_crit_edge ], [ 0.000000e+00, %60 ]
  %irow.4.lcssa = phi i32 [ %irow.5, %..preheader12_crit_edge ], [ -1, %60 ]
  %78 = icmp sgt i32 %11, %jcol, !dbg !1003
  br i1 %78, label %.lr.ph36, label %.loopexit, !dbg !1006

.lr.ph36:                                         ; preds = %.preheader12
  %79 = sext i32 %off.2.lcssa to i64
  %80 = add i32 %11, -1, !dbg !1006
  br label %91, !dbg !1006

; <label>:81                                      ; preds = %81, %.lr.ph45
  %indvars.iv91 = phi i64 [ %64, %.lr.ph45 ], [ %indvars.iv.next92, %81 ]
  %off.243 = phi i32 [ %jcol, %.lr.ph45 ], [ %89, %81 ]
  %maxval.442 = phi double [ 0.000000e+00, %.lr.ph45 ], [ %maxval.5, %81 ]
  %ii.241 = phi i32 [ 0, %.lr.ph45 ], [ %90, %81 ]
  %irow.440 = phi i32 [ -1, %.lr.ph45 ], [ %irow.5, %81 ]
  %indvars.iv.next92 = add nsw i64 %indvars.iv91, -1, !dbg !1000
  %82 = sext i32 %off.243 to i64, !dbg !1007
  %83 = getelementptr inbounds double* %8, i64 %82, !dbg !1007
  %84 = load double* %83, align 8, !dbg !1007, !tbaa !219
  %85 = call double @fabs(double %84) #8, !dbg !1009
  call void @llvm.dbg.value(metadata double %85, i64 0, metadata !112, metadata !161), !dbg !980
  %86 = icmp eq i32 %irow.440, -1, !dbg !1010
  %87 = fcmp olt double %maxval.442, %85, !dbg !1012
  %or.cond6 = or i1 %86, %87, !dbg !1013
  call void @llvm.dbg.value(metadata i32 %90, i64 0, metadata !114, metadata !161), !dbg !954
  call void @llvm.dbg.value(metadata double %85, i64 0, metadata !111, metadata !161), !dbg !955
  %irow.5 = select i1 %or.cond6, i32 %ii.241, i32 %irow.440, !dbg !1013
  %maxval.5 = select i1 %or.cond6, double %85, double %maxval.442, !dbg !1013
  %88 = trunc i64 %indvars.iv.next92 to i32, !dbg !1014
  %89 = add nsw i32 %88, %off.243, !dbg !1014
  call void @llvm.dbg.value(metadata i32 %89, i64 0, metadata !120, metadata !161), !dbg !966
  %90 = add nuw nsw i32 %ii.241, 1, !dbg !1015
  call void @llvm.dbg.value(metadata i32 %90, i64 0, metadata !115, metadata !161), !dbg !967
  %exitcond93 = icmp eq i32 %ii.241, %67, !dbg !1000
  br i1 %exitcond93, label %..preheader12_crit_edge, label %81, !dbg !1000

; <label>:91                                      ; preds = %91, %.lr.ph36
  %indvars.iv88 = phi i64 [ %79, %.lr.ph36 ], [ %indvars.iv.next89, %91 ]
  %maxval.634 = phi double [ %maxval.4.lcssa, %.lr.ph36 ], [ %maxval.7, %91 ]
  %ii.333 = phi i32 [ %jcol, %.lr.ph36 ], [ %97, %91 ]
  %irow.632 = phi i32 [ %irow.4.lcssa, %.lr.ph36 ], [ %irow.7, %91 ]
  %92 = getelementptr inbounds double* %8, i64 %indvars.iv88, !dbg !1016
  %93 = load double* %92, align 8, !dbg !1016, !tbaa !219
  %94 = call double @fabs(double %93) #8, !dbg !1018
  call void @llvm.dbg.value(metadata double %94, i64 0, metadata !112, metadata !161), !dbg !980
  %95 = icmp eq i32 %irow.632, -1, !dbg !1019
  %96 = fcmp olt double %maxval.634, %94, !dbg !1021
  %or.cond7 = or i1 %95, %96, !dbg !1022
  call void @llvm.dbg.value(metadata i32 %97, i64 0, metadata !114, metadata !161), !dbg !954
  call void @llvm.dbg.value(metadata double %94, i64 0, metadata !111, metadata !161), !dbg !955
  %irow.7 = select i1 %or.cond7, i32 %ii.333, i32 %irow.632, !dbg !1022
  %maxval.7 = select i1 %or.cond7, double %94, double %maxval.634, !dbg !1022
  %97 = add nsw i32 %ii.333, 1, !dbg !1023
  call void @llvm.dbg.value(metadata i32 %97, i64 0, metadata !115, metadata !161), !dbg !967
  %indvars.iv.next89 = add nsw i64 %indvars.iv88, 1, !dbg !1006
  %exitcond90 = icmp eq i32 %ii.333, %80, !dbg !1006
  br i1 %exitcond90, label %.loopexit, label %91, !dbg !1006

; <label>:98                                      ; preds = %7
  %99 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 5, !dbg !1024
  %100 = load i32* %99, align 4, !dbg !1024, !tbaa !195
  switch i32 %100, label %.loopexit [
    i32 2, label %101
    i32 0, label %156
    i32 1, label %156
  ], !dbg !1028

; <label>:101                                     ; preds = %98
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !111, metadata !161), !dbg !955
  %102 = add i32 %jcol, -1, !dbg !1029
  %103 = add i32 %102, %11, !dbg !1031
  call void @llvm.dbg.value(metadata i32 %103, i64 0, metadata !120, metadata !161), !dbg !966
  call void @llvm.dbg.value(metadata i32* %nU, i64 0, metadata !119, metadata !161), !dbg !946
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !115, metadata !161), !dbg !967
  %104 = icmp sgt i32 %jcol, 0, !dbg !1032
  br i1 %104, label %.lr.ph61, label %.preheader14, !dbg !1035

.lr.ph61:                                         ; preds = %101
  %105 = load i32* %nU, align 4, !dbg !1036, !tbaa !201
  %106 = add i32 %10, %105, !dbg !1035
  %107 = shl i32 %9, 1, !dbg !1035
  %108 = add i32 %106, %107, !dbg !1035
  %109 = add i32 %108, -3, !dbg !1035
  %110 = sext i32 %109 to i64
  %111 = add i32 %105, %jcol, !dbg !1035
  %112 = add i32 %108, -5, !dbg !1035
  %113 = mul i32 %112, %102, !dbg !1035
  %114 = add i32 %111, %113, !dbg !1035
  %115 = mul i32 %9, 3, !dbg !1035
  %116 = add i32 %114, %115, !dbg !1035
  %117 = shl i32 %10, 1, !dbg !1035
  %118 = add i32 %116, %117, !dbg !1035
  %119 = add i32 %jcol, -2, !dbg !1035
  %120 = mul i32 %102, %119, !dbg !1035
  %121 = and i32 %120, -2, !dbg !1035
  br label %127, !dbg !1035

..preheader14_crit_edge:                          ; preds = %127
  %122 = add i32 %118, -4, !dbg !1035
  %123 = sub i32 %122, %121, !dbg !1035
  br label %.preheader14, !dbg !1035

.preheader14:                                     ; preds = %..preheader14_crit_edge, %101
  %off.4.lcssa = phi i32 [ %123, %..preheader14_crit_edge ], [ %103, %101 ]
  %maxval.8.lcssa = phi double [ %maxval.9, %..preheader14_crit_edge ], [ 0.000000e+00, %101 ]
  %irow.8.lcssa = phi i32 [ %irow.9, %..preheader14_crit_edge ], [ -1, %101 ]
  %124 = icmp sgt i32 %11, %jcol, !dbg !1037
  br i1 %124, label %.lr.ph53, label %.loopexit, !dbg !1040

.lr.ph53:                                         ; preds = %.preheader14
  %125 = sext i32 %off.4.lcssa to i64
  %126 = add i32 %11, -1, !dbg !1040
  br label %142, !dbg !1040

; <label>:127                                     ; preds = %127, %.lr.ph61
  %indvars.iv97 = phi i64 [ %110, %.lr.ph61 ], [ %indvars.iv.next98, %127 ]
  %off.459 = phi i32 [ %103, %.lr.ph61 ], [ %140, %127 ]
  %maxval.858 = phi double [ 0.000000e+00, %.lr.ph61 ], [ %maxval.9, %127 ]
  %ii.457 = phi i32 [ 0, %.lr.ph61 ], [ %141, %127 ]
  %irow.856 = phi i32 [ -1, %.lr.ph61 ], [ %irow.9, %127 ]
  %128 = shl nsw i32 %off.459, 1, !dbg !1041
  %129 = sext i32 %128 to i64, !dbg !1043
  %130 = getelementptr inbounds double* %8, i64 %129, !dbg !1043
  %131 = load double* %130, align 8, !dbg !1043, !tbaa !219
  %132 = or i32 %128, 1, !dbg !1044
  %133 = sext i32 %132 to i64, !dbg !1045
  %134 = getelementptr inbounds double* %8, i64 %133, !dbg !1045
  %135 = load double* %134, align 8, !dbg !1045, !tbaa !219
  %136 = call double @Zabs(double %131, double %135) #6, !dbg !1046
  call void @llvm.dbg.value(metadata double %136, i64 0, metadata !112, metadata !161), !dbg !980
  %137 = icmp eq i32 %irow.856, -1, !dbg !1047
  %138 = fcmp olt double %maxval.858, %136, !dbg !1049
  %or.cond8 = or i1 %137, %138, !dbg !1050
  call void @llvm.dbg.value(metadata i32 %141, i64 0, metadata !114, metadata !161), !dbg !954
  call void @llvm.dbg.value(metadata double %136, i64 0, metadata !111, metadata !161), !dbg !955
  %irow.9 = select i1 %or.cond8, i32 %ii.457, i32 %irow.856, !dbg !1050
  %maxval.9 = select i1 %or.cond8, double %136, double %maxval.858, !dbg !1050
  %139 = trunc i64 %indvars.iv97 to i32, !dbg !1051
  %140 = add nsw i32 %139, %off.459, !dbg !1051
  call void @llvm.dbg.value(metadata i32 %140, i64 0, metadata !120, metadata !161), !dbg !966
  %141 = add nuw nsw i32 %ii.457, 1, !dbg !1052
  call void @llvm.dbg.value(metadata i32 %141, i64 0, metadata !115, metadata !161), !dbg !967
  %indvars.iv.next98 = add nsw i64 %indvars.iv97, -2, !dbg !1035
  %exitcond99 = icmp eq i32 %ii.457, %102, !dbg !1035
  br i1 %exitcond99, label %..preheader14_crit_edge, label %127, !dbg !1035

; <label>:142                                     ; preds = %142, %.lr.ph53
  %indvars.iv94 = phi i64 [ %125, %.lr.ph53 ], [ %indvars.iv.next95, %142 ]
  %maxval.1051 = phi double [ %maxval.8.lcssa, %.lr.ph53 ], [ %maxval.11, %142 ]
  %ii.550 = phi i32 [ %jcol, %.lr.ph53 ], [ %155, %142 ]
  %irow.1049 = phi i32 [ %irow.8.lcssa, %.lr.ph53 ], [ %irow.11, %142 ]
  %143 = trunc i64 %indvars.iv94 to i32, !dbg !1053
  %144 = shl nsw i32 %143, 1, !dbg !1053
  %145 = sext i32 %144 to i64, !dbg !1055
  %146 = getelementptr inbounds double* %8, i64 %145, !dbg !1055
  %147 = load double* %146, align 8, !dbg !1055, !tbaa !219
  %148 = or i32 %144, 1, !dbg !1056
  %149 = sext i32 %148 to i64, !dbg !1057
  %150 = getelementptr inbounds double* %8, i64 %149, !dbg !1057
  %151 = load double* %150, align 8, !dbg !1057, !tbaa !219
  %152 = call double @Zabs(double %147, double %151) #6, !dbg !1058
  call void @llvm.dbg.value(metadata double %152, i64 0, metadata !112, metadata !161), !dbg !980
  %153 = icmp eq i32 %irow.1049, -1, !dbg !1059
  %154 = fcmp olt double %maxval.1051, %152, !dbg !1061
  %or.cond9 = or i1 %153, %154, !dbg !1062
  call void @llvm.dbg.value(metadata i32 %155, i64 0, metadata !114, metadata !161), !dbg !954
  call void @llvm.dbg.value(metadata double %152, i64 0, metadata !111, metadata !161), !dbg !955
  %irow.11 = select i1 %or.cond9, i32 %ii.550, i32 %irow.1049, !dbg !1062
  %maxval.11 = select i1 %or.cond9, double %152, double %maxval.1051, !dbg !1062
  %155 = add nsw i32 %ii.550, 1, !dbg !1063
  call void @llvm.dbg.value(metadata i32 %155, i64 0, metadata !115, metadata !161), !dbg !967
  %indvars.iv.next95 = add nsw i64 %indvars.iv94, -1, !dbg !1040
  %exitcond96 = icmp eq i32 %ii.550, %126, !dbg !1040
  br i1 %exitcond96, label %.loopexit, label %142, !dbg !1040

; <label>:156                                     ; preds = %98, %98
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !111, metadata !161), !dbg !955
  call void @llvm.dbg.value(metadata i32 %jcol, i64 0, metadata !120, metadata !161), !dbg !966
  call void @llvm.dbg.value(metadata i32* %nD, i64 0, metadata !116, metadata !161), !dbg !944
  call void @llvm.dbg.value(metadata i32* %nU, i64 0, metadata !119, metadata !161), !dbg !946
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !115, metadata !161), !dbg !967
  %157 = icmp sgt i32 %jcol, 0, !dbg !1064
  br i1 %157, label %.lr.ph78, label %.preheader16, !dbg !1069

.lr.ph78:                                         ; preds = %156
  %158 = load i32* %nU, align 4, !dbg !1070, !tbaa !201
  %159 = add nsw i32 %158, %9, !dbg !1071
  %160 = sext i32 %159 to i64
  %161 = add i32 %159, %jcol, !dbg !1069
  %162 = add i32 %159, -2, !dbg !1069
  %163 = add i32 %jcol, -1, !dbg !1069
  %164 = mul i32 %162, %163, !dbg !1069
  %165 = add i32 %161, %164, !dbg !1069
  %166 = zext i32 %163 to i33
  %167 = add i32 %jcol, -2, !dbg !1069
  %168 = zext i32 %167 to i33
  %169 = mul i33 %166, %168, !dbg !1069
  %170 = lshr i33 %169, 1, !dbg !1069
  %171 = trunc i33 %170 to i32
  br label %177, !dbg !1069

..preheader16_crit_edge:                          ; preds = %177
  %172 = add i32 %165, -1, !dbg !1069
  %173 = sub i32 %172, %171, !dbg !1069
  br label %.preheader16, !dbg !1069

.preheader16:                                     ; preds = %..preheader16_crit_edge, %156
  %off.6.lcssa = phi i32 [ %173, %..preheader16_crit_edge ], [ %jcol, %156 ]
  %maxval.12.lcssa = phi double [ %maxval.13, %..preheader16_crit_edge ], [ 0.000000e+00, %156 ]
  %irow.12.lcssa = phi i32 [ %irow.13, %..preheader16_crit_edge ], [ -1, %156 ]
  %174 = icmp sgt i32 %11, %jcol, !dbg !1072
  br i1 %174, label %.lr.ph69, label %.loopexit, !dbg !1075

.lr.ph69:                                         ; preds = %.preheader16
  %175 = sext i32 %off.6.lcssa to i64
  %176 = add i32 %11, -1, !dbg !1075
  br label %192, !dbg !1075

; <label>:177                                     ; preds = %177, %.lr.ph78
  %indvars.iv103 = phi i64 [ %160, %.lr.ph78 ], [ %indvars.iv.next104, %177 ]
  %off.676 = phi i32 [ %jcol, %.lr.ph78 ], [ %190, %177 ]
  %maxval.1275 = phi double [ 0.000000e+00, %.lr.ph78 ], [ %maxval.13, %177 ]
  %ii.674 = phi i32 [ 0, %.lr.ph78 ], [ %191, %177 ]
  %irow.1273 = phi i32 [ -1, %.lr.ph78 ], [ %irow.13, %177 ]
  %indvars.iv.next104 = add nsw i64 %indvars.iv103, -1, !dbg !1069
  %178 = shl nsw i32 %off.676, 1, !dbg !1076
  %179 = sext i32 %178 to i64, !dbg !1078
  %180 = getelementptr inbounds double* %8, i64 %179, !dbg !1078
  %181 = load double* %180, align 8, !dbg !1078, !tbaa !219
  %182 = or i32 %178, 1, !dbg !1079
  %183 = sext i32 %182 to i64, !dbg !1080
  %184 = getelementptr inbounds double* %8, i64 %183, !dbg !1080
  %185 = load double* %184, align 8, !dbg !1080, !tbaa !219
  %186 = call double @Zabs(double %181, double %185) #6, !dbg !1081
  call void @llvm.dbg.value(metadata double %186, i64 0, metadata !112, metadata !161), !dbg !980
  %187 = icmp eq i32 %irow.1273, -1, !dbg !1082
  %188 = fcmp olt double %maxval.1275, %186, !dbg !1084
  %or.cond10 = or i1 %187, %188, !dbg !1085
  call void @llvm.dbg.value(metadata i32 %191, i64 0, metadata !114, metadata !161), !dbg !954
  call void @llvm.dbg.value(metadata double %186, i64 0, metadata !111, metadata !161), !dbg !955
  %irow.13 = select i1 %or.cond10, i32 %ii.674, i32 %irow.1273, !dbg !1085
  %maxval.13 = select i1 %or.cond10, double %186, double %maxval.1275, !dbg !1085
  %189 = trunc i64 %indvars.iv.next104 to i32, !dbg !1086
  %190 = add nsw i32 %189, %off.676, !dbg !1086
  call void @llvm.dbg.value(metadata i32 %190, i64 0, metadata !120, metadata !161), !dbg !966
  %191 = add nuw nsw i32 %ii.674, 1, !dbg !1087
  call void @llvm.dbg.value(metadata i32 %191, i64 0, metadata !115, metadata !161), !dbg !967
  %exitcond105 = icmp eq i32 %ii.674, %163, !dbg !1069
  br i1 %exitcond105, label %..preheader16_crit_edge, label %177, !dbg !1069

; <label>:192                                     ; preds = %192, %.lr.ph69
  %indvars.iv100 = phi i64 [ %175, %.lr.ph69 ], [ %indvars.iv.next101, %192 ]
  %maxval.1467 = phi double [ %maxval.12.lcssa, %.lr.ph69 ], [ %maxval.15, %192 ]
  %ii.766 = phi i32 [ %jcol, %.lr.ph69 ], [ %205, %192 ]
  %irow.1465 = phi i32 [ %irow.12.lcssa, %.lr.ph69 ], [ %irow.15, %192 ]
  %193 = trunc i64 %indvars.iv100 to i32, !dbg !1088
  %194 = shl nsw i32 %193, 1, !dbg !1088
  %195 = sext i32 %194 to i64, !dbg !1090
  %196 = getelementptr inbounds double* %8, i64 %195, !dbg !1090
  %197 = load double* %196, align 8, !dbg !1090, !tbaa !219
  %198 = or i32 %194, 1, !dbg !1091
  %199 = sext i32 %198 to i64, !dbg !1092
  %200 = getelementptr inbounds double* %8, i64 %199, !dbg !1092
  %201 = load double* %200, align 8, !dbg !1092, !tbaa !219
  %202 = call double @Zabs(double %197, double %201) #6, !dbg !1093
  call void @llvm.dbg.value(metadata double %202, i64 0, metadata !112, metadata !161), !dbg !980
  %203 = icmp eq i32 %irow.1465, -1, !dbg !1094
  %204 = fcmp olt double %maxval.1467, %202, !dbg !1096
  %or.cond11 = or i1 %203, %204, !dbg !1097
  call void @llvm.dbg.value(metadata i32 %205, i64 0, metadata !114, metadata !161), !dbg !954
  call void @llvm.dbg.value(metadata double %202, i64 0, metadata !111, metadata !161), !dbg !955
  %irow.15 = select i1 %or.cond11, i32 %ii.766, i32 %irow.1465, !dbg !1097
  %maxval.15 = select i1 %or.cond11, double %202, double %maxval.1467, !dbg !1097
  %205 = add nsw i32 %ii.766, 1, !dbg !1098
  call void @llvm.dbg.value(metadata i32 %205, i64 0, metadata !115, metadata !161), !dbg !967
  %indvars.iv.next101 = add nsw i64 %indvars.iv100, 1, !dbg !1075
  %exitcond102 = icmp eq i32 %ii.766, %176, !dbg !1075
  br i1 %exitcond102, label %.loopexit, label %192, !dbg !1075

; <label>:206                                     ; preds = %7
  %207 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1099, !tbaa !173
  %208 = getelementptr inbounds %struct._Chv* %chv, i64 0, i32 5, !dbg !1101
  %209 = load i32* %208, align 4, !dbg !1101, !tbaa !195
  %210 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %207, i8* getelementptr inbounds ([64 x i8]* @.str13, i64 0, i64 0), %struct._Chv* %chv, i32 %jcol, double* %pmaxval, i32 %209) #6, !dbg !1102
  call void @exit(i32 -1) #7, !dbg !1103
  unreachable, !dbg !1103

.loopexit:                                        ; preds = %192, %142, %91, %53, %.preheader16, %.preheader14, %.preheader12, %.preheader, %98, %14
  %irow.16 = phi i32 [ -1, %14 ], [ -1, %98 ], [ %irow.0.lcssa, %.preheader ], [ %irow.4.lcssa, %.preheader12 ], [ %irow.8.lcssa, %.preheader14 ], [ %irow.12.lcssa, %.preheader16 ], [ %irow.3, %53 ], [ %irow.7, %91 ], [ %irow.11, %142 ], [ %irow.15, %192 ]
  %maxval.16 = phi double [ 0.000000e+00, %14 ], [ 0.000000e+00, %98 ], [ %maxval.0.lcssa, %.preheader ], [ %maxval.4.lcssa, %.preheader12 ], [ %maxval.8.lcssa, %.preheader14 ], [ %maxval.12.lcssa, %.preheader16 ], [ %maxval.3, %53 ], [ %maxval.7, %91 ], [ %maxval.11, %142 ], [ %maxval.15, %192 ]
  store double %maxval.16, double* %pmaxval, align 8, !dbg !1104, !tbaa !219
  ret i32 %irow.16, !dbg !1105
}
