define void @DenseMtx_permuteRows(%struct._DenseMtx* %mtx, %struct._IV* %oldToNewIV) #0 {
entry:
  %a2 = alloca %struct._A2, align 8
  %maxnrow = alloca i32, align 4
  %nrow = alloca i32, align 4
  %oldToNew = alloca i32*, align 8
  %rowind = alloca i32*, align 8
  %cmp = icmp eq %struct._DenseMtx* %mtx, null
  %cmp1 = icmp eq %struct._IV* %oldToNewIV, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([57 x i8]* @.str, i64 0, i64 0), %struct._DenseMtx* %mtx, %struct._IV* %oldToNewIV) #4
  call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  call void @DenseMtx_rowIndices(%struct._DenseMtx* %mtx, i32* %nrow, i32** %rowind) #4
  %1 = load i32* %nrow, align 4, !tbaa !3
  %cmp2 = icmp slt i32 %1, 1
  br i1 %cmp2, label %return, label %if.end4

if.end4:                                          ; preds = %if.end
  call void @IV_sizeAndEntries(%struct._IV* %oldToNewIV, i32* %maxnrow, i32** %oldToNew) #4
  %2 = load i32* %nrow, align 4, !tbaa !3
  %cmp532 = icmp sgt i32 %2, 0
  br i1 %cmp532, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end4
  %3 = load i32** %rowind, align 8, !tbaa !0
  %4 = load i32** %oldToNew, align 8, !tbaa !0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end11
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end11 ]
  %arrayidx = getelementptr inbounds i32* %3, i64 %indvars.iv
  %5 = load i32* %arrayidx, align 4, !tbaa !3
  %cmp6 = icmp sgt i32 %5, -1
  %.pre = load i32* %maxnrow, align 4, !tbaa !3
  %cmp8 = icmp slt i32 %5, %.pre
  %or.cond35 = and i1 %cmp6, %cmp8
  br i1 %or.cond35, label %if.end11, label %if.then9

if.then9:                                         ; preds = %for.body
  %6 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([70 x i8]* @.str1, i64 0, i64 0), %struct._DenseMtx* %mtx, %struct._IV* %oldToNewIV, i32 %5, i32 %.pre) #4
  call void @exit(i32 -1) #5
  unreachable

if.end11:                                         ; preds = %for.body
  %idxprom14 = sext i32 %5 to i64
  %arrayidx15 = getelementptr inbounds i32* %4, i64 %idxprom14
  %7 = load i32* %arrayidx15, align 4, !tbaa !3
  store i32 %7, i32* %arrayidx, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %8 = load i32* %nrow, align 4, !tbaa !3
  %9 = trunc i64 %indvars.iv.next to i32
  %cmp5 = icmp slt i32 %9, %8
  br i1 %cmp5, label %for.body, label %for.end

for.end:                                          ; preds = %if.end11, %if.end4
  call void @A2_setDefaultFields(%struct._A2* %a2) #4
  call void @DenseMtx_setA2(%struct._DenseMtx* %mtx, %struct._A2* %a2) #4
  %10 = load i32* %nrow, align 4, !tbaa !3
  %11 = load i32** %rowind, align 8, !tbaa !0
  %call18 = call i32 @A2_sortRowsUp(%struct._A2* %a2, i32 %10, i32* %11) #4
  br label %return

return:                                           ; preds = %if.end, %for.end
  ret void
}
