define float @BKL_fidmat(%struct._BKL* %bkl) #0 {
entry:
  %cmp = icmp eq %struct._BKL* %bkl, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([44 x i8]* @.str, i64 0, i64 0), %struct._BKL* null) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  %ndom1 = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 1
  %1 = load i32* %ndom1, align 4, !tbaa !3
  %cmp2 = icmp slt i32 %1, 9
  br i1 %cmp2, label %if.then3, label %if.then9

if.then3:                                         ; preds = %if.end
  %sub = add nsw i32 %1, -1
  %call4 = tail call i32* @IVinit(i32 %sub, i32 -1) #4
  %call5 = tail call i32* @IVinit(i32 %sub, i32 -1) #4
  tail call void @IVramp(i32 %sub, i32* %call4, i32 1, i32 1) #4
  %call6 = tail call float @BKL_exhSearch(%struct._BKL* %bkl, i32 %sub, i32* %call4, i32* %call5) #4
  tail call void @IVfree(i32* %call4) #4
  tail call void @IVfree(i32* %call5) #4
  %call7 = tail call float @BKL_evalfcn(%struct._BKL* %bkl) #4
  br label %if.end48

if.then9:                                         ; preds = %if.end
  %conv = sext i32 %1 to i64
  %mul = shl nsw i64 %conv, 5
  %call10 = tail call noalias i8* @malloc(i64 %mul) #4
  %2 = bitcast i8* %call10 to %struct._cell*
  %cmp11 = icmp eq i8* %call10, null
  br i1 %cmp11, label %if.then13, label %for.body.lr.ph

if.then13:                                        ; preds = %if.then9
  %3 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([49 x i8]* @.str1, i64 0, i64 0), i64 %mul, i32 98, i8* getelementptr inbounds ([75 x i8]* @.str2, i64 0, i64 0)) #4
  tail call void @exit(i32 -1) #5
  unreachable

for.body.lr.ph:                                   ; preds = %if.then9
  %call29 = tail call i32* @IVinit(i32 %1, i32 -1) #4
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %idom.093 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %cell.092 = phi %struct._cell* [ %2, %for.body.lr.ph ], [ %incdec.ptr, %for.body ]
  %domid = getelementptr inbounds %struct._cell* %cell.092, i64 0, i32 0
  store i32 %idom.093, i32* %domid, align 4, !tbaa !3
  %deltaW = getelementptr inbounds %struct._cell* %cell.092, i64 0, i32 3
  store i32 0, i32* %deltaW, align 4, !tbaa !3
  %deltaB = getelementptr inbounds %struct._cell* %cell.092, i64 0, i32 2
  store i32 0, i32* %deltaB, align 4, !tbaa !3
  %deltaS = getelementptr inbounds %struct._cell* %cell.092, i64 0, i32 1
  store i32 0, i32* %deltaS, align 4, !tbaa !3
  %next = getelementptr inbounds %struct._cell* %cell.092, i64 0, i32 5
  store %struct._cell* %cell.092, %struct._cell** %next, align 8, !tbaa !0
  %prev = getelementptr inbounds %struct._cell* %cell.092, i64 0, i32 4
  store %struct._cell* %cell.092, %struct._cell** %prev, align 8, !tbaa !0
  %inc = add nsw i32 %idom.093, 1
  %incdec.ptr = getelementptr inbounds %struct._cell* %cell.092, i64 1
  %exitcond = icmp eq i32 %inc, %1
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %bpg = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 0
  %4 = load %struct._BPG** %bpg, align 8, !tbaa !0
  %call32 = tail call %struct._Graph* @BPG_makeGraphXbyX(%struct._BPG* %4) #4
  %npass = getelementptr inbounds %struct._BKL* %bkl, i64 0, i32 5
  store i32 1, i32* %npass, align 4, !tbaa !3
  %call34 = tail call fastcc float @BKL_fidmatPass(%struct._BKL* %bkl, %struct._cell* %2, i32* %call29, %struct._Graph* %call32, i32 1) #6
  br label %while.body

while.body:                                       ; preds = %while.body, %for.end
  %bestcost.0 = phi float [ %call34, %for.end ], [ %call38, %while.body ]
  %5 = load i32* %npass, align 4, !tbaa !3
  %inc36 = add nsw i32 %5, 1
  store i32 %inc36, i32* %npass, align 4, !tbaa !3
  %call38 = tail call fastcc float @BKL_fidmatPass(%struct._BKL* %bkl, %struct._cell* %2, i32* %call29, %struct._Graph* %call32, i32 %inc36) #6
  %cmp39 = fcmp olt float %call38, %bestcost.0
  br i1 %cmp39, label %while.body, label %if.end47

if.end47:                                         ; preds = %while.body
  tail call void @free(i8* %call10) #4
  tail call void @IVfree(i32* %call29) #4
  tail call void @Graph_free(%struct._Graph* %call32) #4
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then3
  %cost.0 = phi float [ %call7, %if.then3 ], [ %call38, %if.end47 ]
  ret float %cost.0
}
