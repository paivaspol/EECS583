define void @A2_extractRowDV(%struct._A2* %mtx, %struct._DV* %rowDV, i32 %irow) #0 {
entry:
  %cmp = icmp eq %struct._A2* %mtx, null
  %cmp1 = icmp eq %struct._DV* %rowDV, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %entry
  %entries3 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 6
  %0 = load double** %entries3, align 8, !tbaa !0
  %cmp4 = icmp eq double* %0, null
  %cmp6 = icmp slt i32 %irow, 0
  %or.cond48 = or i1 %cmp4, %cmp6
  br i1 %or.cond48, label %if.then, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %lor.lhs.false2
  %n1 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 1
  %1 = load i32* %n1, align 4, !tbaa !3
  %cmp8 = icmp sgt i32 %1, %irow
  br i1 %cmp8, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false7, %lor.lhs.false2, %entry
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([55 x i8]* @.str18, i64 0, i64 0), %struct._A2* %mtx, %struct._DV* %rowDV, i32 %irow) #5
  tail call void @exit(i32 -1) #6
  unreachable

if.end:                                           ; preds = %lor.lhs.false7
  %type = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 0
  %3 = load i32* %type, align 4, !tbaa !3
  %cmp9 = icmp eq i32 %3, 1
  br i1 %cmp9, label %if.end13, label %if.then10

if.then10:                                        ; preds = %if.end
  %4 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([79 x i8]* @.str19, i64 0, i64 0), %struct._A2* %mtx, %struct._DV* %rowDV, i32 %irow, i32 %3) #5
  tail call void @exit(i32 -1) #6
  unreachable

if.end13:                                         ; preds = %if.end
  %call14 = tail call i32 @DV_size(%struct._DV* %rowDV) #5
  %n215 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 2
  %5 = load i32* %n215, align 4, !tbaa !3
  %cmp16 = icmp slt i32 %call14, %5
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end13
  tail call void @DV_setSize(%struct._DV* %rowDV, i32 %5) #5
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %if.end13
  %call19 = tail call double* @DV_entries(%struct._DV* %rowDV) #5
  %6 = load double** %entries3, align 8, !tbaa !0
  %cmp2249 = icmp sgt i32 %5, 0
  br i1 %cmp2249, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end18
  %inc220 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 4
  %7 = load i32* %inc220, align 4, !tbaa !3
  %inc1 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 3
  %8 = load i32* %inc1, align 4, !tbaa !3
  %mul = mul nsw i32 %8, %irow
  %9 = sext i32 %mul to i64
  %10 = sext i32 %7 to i64
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv52 = phi i64 [ %9, %for.body.lr.ph ], [ %indvars.iv.next53, %for.body ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds double* %6, i64 %indvars.iv52
  %11 = load double* %arrayidx, align 8, !tbaa !4
  %arrayidx24 = getelementptr inbounds double* %call19, i64 %indvars.iv
  store double %11, double* %arrayidx24, align 8, !tbaa !4
  %indvars.iv.next = add i64 %indvars.iv, 1
  %indvars.iv.next53 = add i64 %indvars.iv52, %10
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %5
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end18
  ret void
}
