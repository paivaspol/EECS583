define void @A2_swapRows(%struct._A2* %a, i32 %irow1, i32 %irow2) #0 {
  tail call void @llvm.dbg.value(metadata %struct._A2* %a, i64 0, metadata !329, metadata !355), !dbg !1833
  tail call void @llvm.dbg.value(metadata i32 %irow1, i64 0, metadata !330, metadata !355), !dbg !1834
  tail call void @llvm.dbg.value(metadata i32 %irow2, i64 0, metadata !331, metadata !355), !dbg !1835
  %1 = icmp eq %struct._A2* %a, null, !dbg !1836
  %2 = icmp slt i32 %irow1, 0, !dbg !1838
  %or.cond = or i1 %1, %2, !dbg !1839
  br i1 %or.cond, label %7, label %3, !dbg !1839

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct._A2* %a, i64 0, i32 1, !dbg !1840
  %5 = load i32* %4, align 4, !dbg !1840, !tbaa !413
  %notlhs = icmp sgt i32 %5, %irow1, !dbg !1841
  %notrhs = icmp sgt i32 %irow2, -1, !dbg !1841
  %or.cond3.not = and i1 %notrhs, %notlhs, !dbg !1841
  %6 = icmp sgt i32 %5, %irow2, !dbg !1842
  %or.cond15 = and i1 %6, %or.cond3.not, !dbg !1841
  br i1 %or.cond15, label %10, label %7, !dbg !1841

; <label>:7                                       ; preds = %3, %0
  %8 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1843, !tbaa !362
  %9 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %8, i8* getelementptr inbounds ([51 x i8]* @.str50, i64 0, i64 0), %struct._A2* %a, i32 %irow1, i32 %irow2) #6, !dbg !1845
  tail call void @exit(i32 -1) #7, !dbg !1846
  unreachable, !dbg !1846

; <label>:10                                      ; preds = %3
  %11 = icmp slt i32 %5, 1, !dbg !1847
  br i1 %11, label %28, label %12, !dbg !1849

; <label>:12                                      ; preds = %10
  %13 = getelementptr inbounds %struct._A2* %a, i64 0, i32 3, !dbg !1850
  %14 = load i32* %13, align 4, !dbg !1850, !tbaa !421
  %15 = icmp slt i32 %14, 1, !dbg !1851
  br i1 %15, label %28, label %16, !dbg !1852

; <label>:16                                      ; preds = %12
  %17 = getelementptr inbounds %struct._A2* %a, i64 0, i32 2, !dbg !1853
  %18 = load i32* %17, align 4, !dbg !1853, !tbaa !416
  tail call void @llvm.dbg.value(metadata i32 %18, i64 0, metadata !338, metadata !355), !dbg !1854
  %19 = icmp slt i32 %18, 1, !dbg !1855
  br i1 %19, label %28, label %20, !dbg !1856

; <label>:20                                      ; preds = %16
  %21 = getelementptr inbounds %struct._A2* %a, i64 0, i32 4, !dbg !1857
  %22 = load i32* %21, align 4, !dbg !1857, !tbaa !424
  tail call void @llvm.dbg.value(metadata i32 %22, i64 0, metadata !335, metadata !355), !dbg !1858
  %23 = icmp slt i32 %22, 1, !dbg !1859
  br i1 %23, label %28, label %24, !dbg !1860

; <label>:24                                      ; preds = %20
  %25 = getelementptr inbounds %struct._A2* %a, i64 0, i32 6, !dbg !1861
  %26 = load double** %25, align 8, !dbg !1861, !tbaa !429
  %27 = icmp eq double* %26, null, !dbg !1862
  br i1 %27, label %28, label %31, !dbg !1863

; <label>:28                                      ; preds = %24, %20, %16, %12, %10
  %29 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1864, !tbaa !362
  %30 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %29, i8* getelementptr inbounds ([55 x i8]* @.str51, i64 0, i64 0), %struct._A2* %a, i32 %irow1, i32 %irow2) #6, !dbg !1866
  tail call void @exit(i32 -1) #7, !dbg !1867
  unreachable, !dbg !1867

; <label>:31                                      ; preds = %24
  %32 = getelementptr inbounds %struct._A2* %a, i64 0, i32 0, !dbg !1868
  %33 = load i32* %32, align 4, !dbg !1868, !tbaa !370
  %.off = add i32 %33, -1, !dbg !1870
  %switch = icmp ult i32 %.off, 2, !dbg !1870
  br i1 %switch, label %37, label %34, !dbg !1870

; <label>:34                                      ; preds = %31
  %35 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1871, !tbaa !362
  %36 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %35, i8* getelementptr inbounds ([94 x i8]* @.str52, i64 0, i64 0), %struct._A2* %a, i32 %irow1, i32 %irow2, i32 %33) #6, !dbg !1873
  tail call void @exit(i32 -1) #7, !dbg !1874
  unreachable, !dbg !1874

; <label>:37                                      ; preds = %31
  %38 = icmp eq i32 %irow1, %irow2, !dbg !1875
  br i1 %38, label %.loopexit, label %39, !dbg !1877

; <label>:39                                      ; preds = %37
  switch i32 %33, label %.loopexit [
    i32 1, label %40
    i32 2, label %64
  ], !dbg !1878

; <label>:40                                      ; preds = %39
  %41 = mul nsw i32 %14, %irow1, !dbg !1879
  %42 = sext i32 %41 to i64, !dbg !1882
  %43 = mul nsw i32 %14, %irow2, !dbg !1883
  %44 = sext i32 %43 to i64, !dbg !1884
  %45 = icmp eq i32 %22, 1, !dbg !1885
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !336, metadata !355), !dbg !1887
  br i1 %45, label %.lr.ph, label %.lr.ph25, !dbg !1888

.lr.ph25:                                         ; preds = %40
  %46 = sext i32 %22 to i64
  %47 = add i32 %18, -1, !dbg !1889
  br label %56, !dbg !1889

.lr.ph:                                           ; preds = %40
  %48 = add i32 %18, -1, !dbg !1892
  br label %49, !dbg !1892

; <label>:49                                      ; preds = %49, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %49 ]
  %.sum13 = add nsw i64 %indvars.iv, %42, !dbg !1895
  %50 = getelementptr inbounds double* %26, i64 %.sum13, !dbg !1895
  %51 = bitcast double* %50 to i64*, !dbg !1895
  %52 = load i64* %51, align 8, !dbg !1895, !tbaa !557
  %.sum14 = add nsw i64 %indvars.iv, %44, !dbg !1898
  %53 = getelementptr inbounds double* %26, i64 %.sum14, !dbg !1898
  %54 = bitcast double* %53 to i64*, !dbg !1898
  %55 = load i64* %54, align 8, !dbg !1898, !tbaa !557
  store i64 %55, i64* %51, align 8, !dbg !1899, !tbaa !557
  store i64 %52, i64* %54, align 8, !dbg !1900, !tbaa !557
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1892
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !1892
  %exitcond = icmp eq i32 %lftr.wideiv, %48, !dbg !1892
  br i1 %exitcond, label %.loopexit, label %49, !dbg !1892

; <label>:56                                      ; preds = %56, %.lr.ph25
  %indvars.iv33 = phi i64 [ 0, %.lr.ph25 ], [ %indvars.iv.next34, %56 ]
  %j.123 = phi i32 [ 0, %.lr.ph25 ], [ %63, %56 ]
  %.sum11 = add nsw i64 %indvars.iv33, %42, !dbg !1901
  %57 = getelementptr inbounds double* %26, i64 %.sum11, !dbg !1901
  %58 = bitcast double* %57 to i64*, !dbg !1901
  %59 = load i64* %58, align 8, !dbg !1901, !tbaa !557
  %.sum12 = add nsw i64 %indvars.iv33, %44, !dbg !1904
  %60 = getelementptr inbounds double* %26, i64 %.sum12, !dbg !1904
  %61 = bitcast double* %60 to i64*, !dbg !1904
  %62 = load i64* %61, align 8, !dbg !1904, !tbaa !557
  store i64 %62, i64* %58, align 8, !dbg !1905, !tbaa !557
  store i64 %59, i64* %61, align 8, !dbg !1906, !tbaa !557
  %63 = add nuw nsw i32 %j.123, 1, !dbg !1907
  tail call void @llvm.dbg.value(metadata i32 %63, i64 0, metadata !336, metadata !355), !dbg !1887
  %indvars.iv.next34 = add i64 %indvars.iv33, %46, !dbg !1889
  %exitcond35 = icmp eq i32 %j.123, %47, !dbg !1889
  br i1 %exitcond35, label %.loopexit, label %56, !dbg !1889

; <label>:64                                      ; preds = %39
  %65 = shl i32 %irow1, 1, !dbg !1908
  %66 = mul nsw i32 %65, %14, !dbg !1911
  %67 = sext i32 %66 to i64, !dbg !1912
  %68 = shl i32 %irow2, 1, !dbg !1913
  %69 = mul nsw i32 %68, %14, !dbg !1914
  %70 = sext i32 %69 to i64, !dbg !1915
  %71 = icmp eq i32 %22, 1, !dbg !1916
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !336, metadata !355), !dbg !1887
  br i1 %71, label %.lr.ph27, label %.lr.ph30, !dbg !1918

.lr.ph30:                                         ; preds = %64
  %72 = sext i32 %22 to i64
  %73 = add i32 %18, -1, !dbg !1919
  br label %93, !dbg !1919

.lr.ph27:                                         ; preds = %64
  %74 = add i32 %18, -1, !dbg !1922
  br label %75, !dbg !1922

; <label>:75                                      ; preds = %75, %.lr.ph27
  %indvars.iv36 = phi i64 [ 0, %.lr.ph27 ], [ %indvars.iv.next37, %75 ]
  %76 = trunc i64 %indvars.iv36 to i32, !dbg !1925
  %77 = shl nsw i32 %76, 1, !dbg !1925
  %78 = sext i32 %77 to i64, !dbg !1928
  %.sum7 = add nsw i64 %78, %67, !dbg !1928
  %79 = getelementptr inbounds double* %26, i64 %.sum7, !dbg !1928
  %80 = bitcast double* %79 to i64*, !dbg !1928
  %81 = load i64* %80, align 8, !dbg !1928, !tbaa !557
  %.sum8 = add nsw i64 %78, %70, !dbg !1929
  %82 = getelementptr inbounds double* %26, i64 %.sum8, !dbg !1929
  %83 = bitcast double* %82 to i64*, !dbg !1929
  %84 = load i64* %83, align 8, !dbg !1929, !tbaa !557
  store i64 %84, i64* %80, align 8, !dbg !1930, !tbaa !557
  store i64 %81, i64* %83, align 8, !dbg !1931, !tbaa !557
  %85 = or i32 %77, 1, !dbg !1932
  %86 = sext i32 %85 to i64, !dbg !1933
  %.sum9 = add nsw i64 %86, %67, !dbg !1933
  %87 = getelementptr inbounds double* %26, i64 %.sum9, !dbg !1933
  %88 = bitcast double* %87 to i64*, !dbg !1933
  %89 = load i64* %88, align 8, !dbg !1933, !tbaa !557
  %.sum10 = add nsw i64 %86, %70, !dbg !1934
  %90 = getelementptr inbounds double* %26, i64 %.sum10, !dbg !1934
  %91 = bitcast double* %90 to i64*, !dbg !1934
  %92 = load i64* %91, align 8, !dbg !1934, !tbaa !557
  store i64 %92, i64* %88, align 8, !dbg !1935, !tbaa !557
  store i64 %89, i64* %91, align 8, !dbg !1936, !tbaa !557
  %indvars.iv.next37 = add nuw nsw i64 %indvars.iv36, 1, !dbg !1922
  %exitcond39 = icmp eq i32 %76, %74, !dbg !1922
  br i1 %exitcond39, label %.loopexit, label %75, !dbg !1922

; <label>:93                                      ; preds = %93, %.lr.ph30
  %indvars.iv40 = phi i64 [ 0, %.lr.ph30 ], [ %indvars.iv.next41, %93 ]
  %j.328 = phi i32 [ 0, %.lr.ph30 ], [ %111, %93 ]
  %94 = trunc i64 %indvars.iv40 to i32, !dbg !1937
  %95 = shl nsw i32 %94, 1, !dbg !1937
  %96 = sext i32 %95 to i64, !dbg !1940
  %.sum = add nsw i64 %96, %67, !dbg !1940
  %97 = getelementptr inbounds double* %26, i64 %.sum, !dbg !1940
  %98 = bitcast double* %97 to i64*, !dbg !1940
  %99 = load i64* %98, align 8, !dbg !1940, !tbaa !557
  %.sum4 = add nsw i64 %96, %70, !dbg !1941
  %100 = getelementptr inbounds double* %26, i64 %.sum4, !dbg !1941
  %101 = bitcast double* %100 to i64*, !dbg !1941
  %102 = load i64* %101, align 8, !dbg !1941, !tbaa !557
  store i64 %102, i64* %98, align 8, !dbg !1942, !tbaa !557
  store i64 %99, i64* %101, align 8, !dbg !1943, !tbaa !557
  %103 = or i32 %95, 1, !dbg !1944
  %104 = sext i32 %103 to i64, !dbg !1945
  %.sum5 = add nsw i64 %104, %67, !dbg !1945
  %105 = getelementptr inbounds double* %26, i64 %.sum5, !dbg !1945
  %106 = bitcast double* %105 to i64*, !dbg !1945
  %107 = load i64* %106, align 8, !dbg !1945, !tbaa !557
  %.sum6 = add nsw i64 %104, %70, !dbg !1946
  %108 = getelementptr inbounds double* %26, i64 %.sum6, !dbg !1946
  %109 = bitcast double* %108 to i64*, !dbg !1946
  %110 = load i64* %109, align 8, !dbg !1946, !tbaa !557
  store i64 %110, i64* %106, align 8, !dbg !1947, !tbaa !557
  store i64 %107, i64* %109, align 8, !dbg !1948, !tbaa !557
  %111 = add nuw nsw i32 %j.328, 1, !dbg !1949
  tail call void @llvm.dbg.value(metadata i32 %111, i64 0, metadata !336, metadata !355), !dbg !1887
  %indvars.iv.next41 = add i64 %indvars.iv40, %72, !dbg !1919
  %exitcond42 = icmp eq i32 %j.328, %73, !dbg !1919
  br i1 %exitcond42, label %.loopexit, label %93, !dbg !1919

.loopexit:                                        ; preds = %93, %75, %56, %49, %39, %37
  ret void, !dbg !1950
}
