define void @A2_swapColumns(%struct._A2* %a, i32 %jcol1, i32 %jcol2) #0 {
  tail call void @llvm.dbg.value(metadata %struct._A2* %a, i64 0, metadata !341, metadata !355), !dbg !1951
  tail call void @llvm.dbg.value(metadata i32 %jcol1, i64 0, metadata !342, metadata !355), !dbg !1952
  tail call void @llvm.dbg.value(metadata i32 %jcol2, i64 0, metadata !343, metadata !355), !dbg !1953
  %1 = icmp eq %struct._A2* %a, null, !dbg !1954
  %2 = icmp slt i32 %jcol1, 0, !dbg !1956
  %or.cond = or i1 %1, %2, !dbg !1957
  br i1 %or.cond, label %7, label %3, !dbg !1957

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct._A2* %a, i64 0, i32 2, !dbg !1958
  %5 = load i32* %4, align 4, !dbg !1958, !tbaa !416
  %notlhs = icmp sgt i32 %5, %jcol1, !dbg !1959
  %notrhs = icmp sgt i32 %jcol2, -1, !dbg !1959
  %or.cond3.not = and i1 %notrhs, %notlhs, !dbg !1959
  %6 = icmp sgt i32 %5, %jcol2, !dbg !1960
  %or.cond15 = and i1 %6, %or.cond3.not, !dbg !1959
  br i1 %or.cond15, label %10, label %7, !dbg !1959

; <label>:7                                       ; preds = %3, %0
  %8 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1961, !tbaa !362
  %9 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %8, i8* getelementptr inbounds ([54 x i8]* @.str53, i64 0, i64 0), %struct._A2* %a, i32 %jcol1, i32 %jcol2) #6, !dbg !1963
  tail call void @exit(i32 -1) #7, !dbg !1964
  unreachable, !dbg !1964

; <label>:10                                      ; preds = %3
  %11 = getelementptr inbounds %struct._A2* %a, i64 0, i32 1, !dbg !1965
  %12 = load i32* %11, align 4, !dbg !1965, !tbaa !413
  tail call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !350, metadata !355), !dbg !1967
  %13 = icmp slt i32 %12, 1, !dbg !1968
  br i1 %13, label %27, label %14, !dbg !1969

; <label>:14                                      ; preds = %10
  %15 = getelementptr inbounds %struct._A2* %a, i64 0, i32 3, !dbg !1970
  %16 = load i32* %15, align 4, !dbg !1970, !tbaa !421
  tail call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !348, metadata !355), !dbg !1971
  %17 = icmp slt i32 %16, 1, !dbg !1972
  %18 = icmp slt i32 %5, 1, !dbg !1973
  %or.cond16 = or i1 %18, %17, !dbg !1974
  br i1 %or.cond16, label %27, label %19, !dbg !1974

; <label>:19                                      ; preds = %14
  %20 = getelementptr inbounds %struct._A2* %a, i64 0, i32 4, !dbg !1975
  %21 = load i32* %20, align 4, !dbg !1975, !tbaa !424
  %22 = icmp slt i32 %21, 1, !dbg !1976
  br i1 %22, label %27, label %23, !dbg !1977

; <label>:23                                      ; preds = %19
  %24 = getelementptr inbounds %struct._A2* %a, i64 0, i32 6, !dbg !1978
  %25 = load double** %24, align 8, !dbg !1978, !tbaa !429
  %26 = icmp eq double* %25, null, !dbg !1979
  br i1 %26, label %27, label %30, !dbg !1980

; <label>:27                                      ; preds = %23, %19, %14, %10
  %28 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1981, !tbaa !362
  %29 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %28, i8* getelementptr inbounds ([58 x i8]* @.str54, i64 0, i64 0), %struct._A2* %a, i32 %jcol1, i32 %jcol2) #6, !dbg !1983
  tail call void @exit(i32 -1) #7, !dbg !1984
  unreachable, !dbg !1984

; <label>:30                                      ; preds = %23
  %31 = getelementptr inbounds %struct._A2* %a, i64 0, i32 0, !dbg !1985
  %32 = load i32* %31, align 4, !dbg !1985, !tbaa !370
  %.off = add i32 %32, -1, !dbg !1987
  %switch = icmp ult i32 %.off, 2, !dbg !1987
  br i1 %switch, label %36, label %33, !dbg !1987

; <label>:33                                      ; preds = %30
  %34 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1988, !tbaa !362
  %35 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %34, i8* getelementptr inbounds ([97 x i8]* @.str55, i64 0, i64 0), %struct._A2* %a, i32 %jcol1, i32 %jcol2, i32 %32) #6, !dbg !1990
  tail call void @exit(i32 -1) #7, !dbg !1991
  unreachable, !dbg !1991

; <label>:36                                      ; preds = %30
  %37 = icmp eq i32 %jcol1, %jcol2, !dbg !1992
  br i1 %37, label %.loopexit, label %38, !dbg !1994

; <label>:38                                      ; preds = %36
  switch i32 %32, label %.loopexit [
    i32 1, label %39
    i32 2, label %63
  ], !dbg !1995

; <label>:39                                      ; preds = %38
  %40 = mul nsw i32 %21, %jcol1, !dbg !1996
  %41 = sext i32 %40 to i64, !dbg !1999
  %42 = mul nsw i32 %21, %jcol2, !dbg !2000
  %43 = sext i32 %42 to i64, !dbg !2001
  %44 = icmp eq i32 %16, 1, !dbg !2002
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !347, metadata !355), !dbg !2004
  br i1 %44, label %.lr.ph, label %.lr.ph26, !dbg !2005

.lr.ph26:                                         ; preds = %39
  %45 = sext i32 %16 to i64
  %46 = add i32 %12, -1, !dbg !2006
  br label %55, !dbg !2006

.lr.ph:                                           ; preds = %39
  %47 = add i32 %12, -1, !dbg !2009
  br label %48, !dbg !2009

; <label>:48                                      ; preds = %48, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %48 ]
  %.sum13 = add nsw i64 %indvars.iv, %41, !dbg !2012
  %49 = getelementptr inbounds double* %25, i64 %.sum13, !dbg !2012
  %50 = bitcast double* %49 to i64*, !dbg !2012
  %51 = load i64* %50, align 8, !dbg !2012, !tbaa !557
  %.sum14 = add nsw i64 %indvars.iv, %43, !dbg !2015
  %52 = getelementptr inbounds double* %25, i64 %.sum14, !dbg !2015
  %53 = bitcast double* %52 to i64*, !dbg !2015
  %54 = load i64* %53, align 8, !dbg !2015, !tbaa !557
  store i64 %54, i64* %50, align 8, !dbg !2016, !tbaa !557
  store i64 %51, i64* %53, align 8, !dbg !2017, !tbaa !557
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2009
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !2009
  %exitcond = icmp eq i32 %lftr.wideiv, %47, !dbg !2009
  br i1 %exitcond, label %.loopexit, label %48, !dbg !2009

; <label>:55                                      ; preds = %55, %.lr.ph26
  %indvars.iv34 = phi i64 [ 0, %.lr.ph26 ], [ %indvars.iv.next35, %55 ]
  %i.124 = phi i32 [ 0, %.lr.ph26 ], [ %62, %55 ]
  %.sum11 = add nsw i64 %indvars.iv34, %41, !dbg !2018
  %56 = getelementptr inbounds double* %25, i64 %.sum11, !dbg !2018
  %57 = bitcast double* %56 to i64*, !dbg !2018
  %58 = load i64* %57, align 8, !dbg !2018, !tbaa !557
  %.sum12 = add nsw i64 %indvars.iv34, %43, !dbg !2021
  %59 = getelementptr inbounds double* %25, i64 %.sum12, !dbg !2021
  %60 = bitcast double* %59 to i64*, !dbg !2021
  %61 = load i64* %60, align 8, !dbg !2021, !tbaa !557
  store i64 %61, i64* %57, align 8, !dbg !2022, !tbaa !557
  store i64 %58, i64* %60, align 8, !dbg !2023, !tbaa !557
  %62 = add nuw nsw i32 %i.124, 1, !dbg !2024
  tail call void @llvm.dbg.value(metadata i32 %62, i64 0, metadata !347, metadata !355), !dbg !2004
  %indvars.iv.next35 = add i64 %indvars.iv34, %45, !dbg !2006
  %exitcond36 = icmp eq i32 %i.124, %46, !dbg !2006
  br i1 %exitcond36, label %.loopexit, label %55, !dbg !2006

; <label>:63                                      ; preds = %38
  %64 = shl i32 %jcol1, 1, !dbg !2025
  %65 = mul nsw i32 %64, %21, !dbg !2028
  %66 = sext i32 %65 to i64, !dbg !2029
  %67 = shl i32 %jcol2, 1, !dbg !2030
  %68 = mul nsw i32 %67, %21, !dbg !2031
  %69 = sext i32 %68 to i64, !dbg !2032
  %70 = icmp eq i32 %16, 1, !dbg !2033
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !347, metadata !355), !dbg !2004
  br i1 %70, label %.lr.ph28, label %.lr.ph31, !dbg !2035

.lr.ph31:                                         ; preds = %63
  %71 = sext i32 %16 to i64
  %72 = add i32 %12, -1, !dbg !2036
  br label %92, !dbg !2036

.lr.ph28:                                         ; preds = %63
  %73 = add i32 %12, -1, !dbg !2039
  br label %74, !dbg !2039

; <label>:74                                      ; preds = %74, %.lr.ph28
  %indvars.iv37 = phi i64 [ 0, %.lr.ph28 ], [ %indvars.iv.next38, %74 ]
  %75 = trunc i64 %indvars.iv37 to i32, !dbg !2042
  %76 = shl nsw i32 %75, 1, !dbg !2042
  %77 = sext i32 %76 to i64, !dbg !2045
  %.sum7 = add nsw i64 %77, %66, !dbg !2045
  %78 = getelementptr inbounds double* %25, i64 %.sum7, !dbg !2045
  %79 = bitcast double* %78 to i64*, !dbg !2045
  %80 = load i64* %79, align 8, !dbg !2045, !tbaa !557
  %.sum8 = add nsw i64 %77, %69, !dbg !2046
  %81 = getelementptr inbounds double* %25, i64 %.sum8, !dbg !2046
  %82 = bitcast double* %81 to i64*, !dbg !2046
  %83 = load i64* %82, align 8, !dbg !2046, !tbaa !557
  store i64 %83, i64* %79, align 8, !dbg !2047, !tbaa !557
  store i64 %80, i64* %82, align 8, !dbg !2048, !tbaa !557
  %84 = or i32 %76, 1, !dbg !2049
  %85 = sext i32 %84 to i64, !dbg !2050
  %.sum9 = add nsw i64 %85, %66, !dbg !2050
  %86 = getelementptr inbounds double* %25, i64 %.sum9, !dbg !2050
  %87 = bitcast double* %86 to i64*, !dbg !2050
  %88 = load i64* %87, align 8, !dbg !2050, !tbaa !557
  %.sum10 = add nsw i64 %85, %69, !dbg !2051
  %89 = getelementptr inbounds double* %25, i64 %.sum10, !dbg !2051
  %90 = bitcast double* %89 to i64*, !dbg !2051
  %91 = load i64* %90, align 8, !dbg !2051, !tbaa !557
  store i64 %91, i64* %87, align 8, !dbg !2052, !tbaa !557
  store i64 %88, i64* %90, align 8, !dbg !2053, !tbaa !557
  %indvars.iv.next38 = add nuw nsw i64 %indvars.iv37, 1, !dbg !2039
  %exitcond40 = icmp eq i32 %75, %73, !dbg !2039
  br i1 %exitcond40, label %.loopexit, label %74, !dbg !2039

; <label>:92                                      ; preds = %92, %.lr.ph31
  %indvars.iv41 = phi i64 [ 0, %.lr.ph31 ], [ %indvars.iv.next42, %92 ]
  %i.329 = phi i32 [ 0, %.lr.ph31 ], [ %110, %92 ]
  %93 = trunc i64 %indvars.iv41 to i32, !dbg !2054
  %94 = shl nsw i32 %93, 1, !dbg !2054
  %95 = sext i32 %94 to i64, !dbg !2057
  %.sum = add nsw i64 %95, %66, !dbg !2057
  %96 = getelementptr inbounds double* %25, i64 %.sum, !dbg !2057
  %97 = bitcast double* %96 to i64*, !dbg !2057
  %98 = load i64* %97, align 8, !dbg !2057, !tbaa !557
  %.sum4 = add nsw i64 %95, %69, !dbg !2058
  %99 = getelementptr inbounds double* %25, i64 %.sum4, !dbg !2058
  %100 = bitcast double* %99 to i64*, !dbg !2058
  %101 = load i64* %100, align 8, !dbg !2058, !tbaa !557
  store i64 %101, i64* %97, align 8, !dbg !2059, !tbaa !557
  store i64 %98, i64* %100, align 8, !dbg !2060, !tbaa !557
  %102 = or i32 %94, 1, !dbg !2061
  %103 = sext i32 %102 to i64, !dbg !2062
  %.sum5 = add nsw i64 %103, %66, !dbg !2062
  %104 = getelementptr inbounds double* %25, i64 %.sum5, !dbg !2062
  %105 = bitcast double* %104 to i64*, !dbg !2062
  %106 = load i64* %105, align 8, !dbg !2062, !tbaa !557
  %.sum6 = add nsw i64 %103, %69, !dbg !2063
  %107 = getelementptr inbounds double* %25, i64 %.sum6, !dbg !2063
  %108 = bitcast double* %107 to i64*, !dbg !2063
  %109 = load i64* %108, align 8, !dbg !2063, !tbaa !557
  store i64 %109, i64* %105, align 8, !dbg !2064, !tbaa !557
  store i64 %106, i64* %108, align 8, !dbg !2065, !tbaa !557
  %110 = add nuw nsw i32 %i.329, 1, !dbg !2066
  tail call void @llvm.dbg.value(metadata i32 %110, i64 0, metadata !347, metadata !355), !dbg !2004
  %indvars.iv.next42 = add i64 %indvars.iv41, %71, !dbg !2036
  %exitcond43 = icmp eq i32 %i.329, %72, !dbg !2036
  br i1 %exitcond43, label %.loopexit, label %92, !dbg !2036

.loopexit:                                        ; preds = %92, %74, %55, %48, %38, %36
  ret void, !dbg !2067
}
