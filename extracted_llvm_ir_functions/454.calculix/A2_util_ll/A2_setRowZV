define void @A2_setRowZV(%struct._A2* %mtx, %struct._ZV* %rowZV, i32 %irow) #0 {
  tail call void @llvm.dbg.value(metadata %struct._A2* %mtx, i64 0, metadata !168, metadata !355), !dbg !1021
  tail call void @llvm.dbg.value(metadata %struct._ZV* %rowZV, i64 0, metadata !169, metadata !355), !dbg !1022
  tail call void @llvm.dbg.value(metadata i32 %irow, i64 0, metadata !170, metadata !355), !dbg !1023
  %1 = icmp eq %struct._A2* %mtx, null, !dbg !1024
  %2 = icmp eq %struct._ZV* %rowZV, null, !dbg !1026
  %or.cond = or i1 %1, %2, !dbg !1027
  br i1 %or.cond, label %13, label %3, !dbg !1027

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @ZV_size(%struct._ZV* %rowZV) #6, !dbg !1028
  %5 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 2, !dbg !1029
  %6 = load i32* %5, align 4, !dbg !1029, !tbaa !416
  tail call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !176, metadata !355), !dbg !1030
  %7 = icmp ne i32 %4, %6, !dbg !1031
  %8 = icmp slt i32 %irow, 0, !dbg !1032
  %or.cond3 = or i1 %8, %7, !dbg !1033
  br i1 %or.cond3, label %13, label %9, !dbg !1033

; <label>:9                                       ; preds = %3
  %10 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 1, !dbg !1034
  %11 = load i32* %10, align 4, !dbg !1034, !tbaa !413
  %12 = icmp sgt i32 %11, %irow, !dbg !1035
  br i1 %12, label %16, label %13, !dbg !1036

; <label>:13                                      ; preds = %9, %3, %0
  %14 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1037, !tbaa !362
  %15 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %14, i8* getelementptr inbounds ([51 x i8]* @.str28, i64 0, i64 0), %struct._A2* %mtx, %struct._ZV* %rowZV, i32 %irow) #6, !dbg !1039
  tail call void @exit(i32 -1) #7, !dbg !1040
  unreachable, !dbg !1040

; <label>:16                                      ; preds = %9
  %17 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 0, !dbg !1041
  %18 = load i32* %17, align 4, !dbg !1041, !tbaa !370
  %19 = icmp eq i32 %18, 2, !dbg !1041
  br i1 %19, label %23, label %20, !dbg !1043

; <label>:20                                      ; preds = %16
  %21 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1044, !tbaa !362
  %22 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %21, i8* getelementptr inbounds ([78 x i8]* @.str29, i64 0, i64 0), %struct._A2* %mtx, %struct._ZV* %rowZV, i32 %irow, i32 %18) #6, !dbg !1046
  tail call void @exit(i32 -1) #7, !dbg !1047
  unreachable, !dbg !1047

; <label>:23                                      ; preds = %16
  %24 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 3, !dbg !1048
  %25 = load i32* %24, align 4, !dbg !1048, !tbaa !421
  tail call void @llvm.dbg.value(metadata i32 %32, i64 0, metadata !175, metadata !355), !dbg !1049
  %26 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 4, !dbg !1050
  %27 = load i32* %26, align 4, !dbg !1050, !tbaa !424
  tail call void @llvm.dbg.value(metadata i32 %27, i64 0, metadata !173, metadata !355), !dbg !1051
  %28 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 6, !dbg !1052
  %29 = load double** %28, align 8, !dbg !1052, !tbaa !429
  tail call void @llvm.dbg.value(metadata double* %29, i64 0, metadata !171, metadata !355), !dbg !1053
  %30 = tail call double* @ZV_entries(%struct._ZV* %rowZV) #6, !dbg !1054
  tail call void @llvm.dbg.value(metadata double* %30, i64 0, metadata !172, metadata !355), !dbg !1055
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !174, metadata !355), !dbg !1056
  %31 = icmp sgt i32 %4, 0, !dbg !1057
  br i1 %31, label %.lr.ph, label %._crit_edge, !dbg !1060

.lr.ph:                                           ; preds = %23
  %32 = mul nsw i32 %25, %irow, !dbg !1061
  %33 = sext i32 %32 to i64
  %34 = sext i32 %27 to i64
  %35 = add i32 %4, -1, !dbg !1060
  br label %36, !dbg !1060

; <label>:36                                      ; preds = %36, %.lr.ph
  %indvars.iv6 = phi i64 [ %33, %.lr.ph ], [ %indvars.iv.next7, %36 ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %36 ]
  %37 = trunc i64 %indvars.iv to i32, !dbg !1062
  %38 = shl nsw i32 %37, 1, !dbg !1062
  %39 = sext i32 %38 to i64, !dbg !1064
  %40 = getelementptr inbounds double* %30, i64 %39, !dbg !1064
  %41 = bitcast double* %40 to i64*, !dbg !1064
  %42 = load i64* %41, align 8, !dbg !1064, !tbaa !557
  %43 = trunc i64 %indvars.iv6 to i32, !dbg !1065
  %44 = shl nsw i32 %43, 1, !dbg !1065
  %45 = sext i32 %44 to i64, !dbg !1066
  %46 = getelementptr inbounds double* %29, i64 %45, !dbg !1066
  %47 = bitcast double* %46 to i64*, !dbg !1067
  store i64 %42, i64* %47, align 8, !dbg !1067, !tbaa !557
  %48 = or i32 %38, 1, !dbg !1068
  %49 = sext i32 %48 to i64, !dbg !1069
  %50 = getelementptr inbounds double* %30, i64 %49, !dbg !1069
  %51 = bitcast double* %50 to i64*, !dbg !1069
  %52 = load i64* %51, align 8, !dbg !1069, !tbaa !557
  %53 = or i32 %44, 1, !dbg !1070
  %54 = sext i32 %53 to i64, !dbg !1071
  %55 = getelementptr inbounds double* %29, i64 %54, !dbg !1071
  %56 = bitcast double* %55 to i64*, !dbg !1072
  store i64 %52, i64* %56, align 8, !dbg !1072, !tbaa !557
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1060
  %indvars.iv.next7 = add i64 %indvars.iv6, %34, !dbg !1060
  %exitcond = icmp eq i32 %37, %35, !dbg !1060
  br i1 %exitcond, label %._crit_edge, label %36, !dbg !1060

._crit_edge:                                      ; preds = %36, %23
  ret void, !dbg !1073
}
