define void @A2_setColumnDV(%struct._A2* %mtx, %struct._DV* %colDV, i32 %jcol) #0 {
entry:
  %cmp = icmp eq %struct._A2* %mtx, null
  %cmp1 = icmp eq %struct._DV* %colDV, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %entry
  %call = tail call i32 @DV_size(%struct._DV* %colDV) #5
  %n13 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 1
  %0 = load i32* %n13, align 4, !tbaa !3
  %cmp4 = icmp ne i32 %call, %0
  %cmp6 = icmp slt i32 %jcol, 0
  %or.cond41 = or i1 %cmp4, %cmp6
  br i1 %or.cond41, label %if.then, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %lor.lhs.false2
  %n2 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 2
  %1 = load i32* %n2, align 4, !tbaa !3
  %cmp8 = icmp sgt i32 %1, %jcol
  br i1 %cmp8, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false7, %entry
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([54 x i8]* @.str30, i64 0, i64 0), %struct._A2* %mtx, %struct._DV* %colDV, i32 %jcol) #5
  tail call void @exit(i32 -1) #6
  unreachable

if.end:                                           ; preds = %lor.lhs.false7
  %type = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 0
  %3 = load i32* %type, align 4, !tbaa !3
  %cmp10 = icmp eq i32 %3, 1
  br i1 %cmp10, label %if.end14, label %if.then11

if.then11:                                        ; preds = %if.end
  %4 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([78 x i8]* @.str31, i64 0, i64 0), %struct._A2* %mtx, %struct._DV* %colDV, i32 %jcol, i32 %3) #5
  tail call void @exit(i32 -1) #6
  unreachable

if.end14:                                         ; preds = %if.end
  %inc2 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 4
  %5 = load i32* %inc2, align 4, !tbaa !3
  %inc115 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 3
  %6 = load i32* %inc115, align 4, !tbaa !3
  %entries16 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 6
  %7 = load double** %entries16, align 8, !tbaa !0
  %call17 = tail call double* @DV_entries(%struct._DV* %colDV) #5
  %cmp1842 = icmp sgt i32 %call, 0
  br i1 %cmp1842, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end14
  %mul = mul nsw i32 %5, %jcol
  %8 = sext i32 %mul to i64
  %9 = sext i32 %6 to i64
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv45 = phi i64 [ %8, %for.body.lr.ph ], [ %indvars.iv.next46, %for.body ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds double* %call17, i64 %indvars.iv
  %10 = load double* %arrayidx, align 8, !tbaa !4
  %arrayidx20 = getelementptr inbounds double* %7, i64 %indvars.iv45
  store double %10, double* %arrayidx20, align 8, !tbaa !4
  %indvars.iv.next = add i64 %indvars.iv, 1
  %indvars.iv.next46 = add i64 %indvars.iv45, %9
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %call
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.end14
  ret void
}
