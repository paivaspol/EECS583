define void @A2_extractRowZV(%struct._A2* %mtx, %struct._ZV* %rowZV, i32 %irow) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._A2* %mtx}, i64 0, metadata !123), !dbg !565
  tail call void @llvm.dbg.value(metadata !{%struct._ZV* %rowZV}, i64 0, metadata !124), !dbg !566
  tail call void @llvm.dbg.value(metadata !{i32 %irow}, i64 0, metadata !125), !dbg !567
  %cmp = icmp eq %struct._A2* %mtx, null, !dbg !568
  %cmp1 = icmp eq %struct._ZV* %rowZV, null, !dbg !568
  %or.cond = or i1 %cmp, %cmp1, !dbg !568
  br i1 %or.cond, label %if.then, label %lor.lhs.false2, !dbg !568

lor.lhs.false2:                                   ; preds = %entry
  %entries3 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 6, !dbg !568
  %0 = load double** %entries3, align 8, !dbg !568, !tbaa !348
  %cmp4 = icmp eq double* %0, null, !dbg !568
  %cmp6 = icmp slt i32 %irow, 0, !dbg !568
  %or.cond64 = or i1 %cmp4, %cmp6, !dbg !568
  br i1 %or.cond64, label %if.then, label %lor.lhs.false7, !dbg !568

lor.lhs.false7:                                   ; preds = %lor.lhs.false2
  %n1 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 1, !dbg !568
  %1 = load i32* %n1, align 4, !dbg !568, !tbaa !353
  %cmp8 = icmp sgt i32 %1, %irow, !dbg !568
  br i1 %cmp8, label %if.end, label %if.then, !dbg !568

if.then:                                          ; preds = %lor.lhs.false7, %lor.lhs.false2, %entry
  %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !569, !tbaa !348
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([55 x i8]* @.str20, i64 0, i64 0), %struct._A2* %mtx, %struct._ZV* %rowZV, i32 %irow) #6, !dbg !569
  tail call void @exit(i32 -1) #7, !dbg !571
  unreachable, !dbg !571

if.end:                                           ; preds = %lor.lhs.false7
  %type = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 0, !dbg !572
  %3 = load i32* %type, align 4, !dbg !572, !tbaa !353
  %cmp9 = icmp eq i32 %3, 2, !dbg !572
  br i1 %cmp9, label %if.end13, label %if.then10, !dbg !572

if.then10:                                        ; preds = %if.end
  %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !573, !tbaa !348
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([82 x i8]* @.str21, i64 0, i64 0), %struct._A2* %mtx, %struct._ZV* %rowZV, i32 %irow, i32 %3) #6, !dbg !573
  tail call void @exit(i32 -1) #7, !dbg !575
  unreachable, !dbg !575

if.end13:                                         ; preds = %if.end
  %call14 = tail call i32 @ZV_size(%struct._ZV* %rowZV) #6, !dbg !576
  %n215 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 2, !dbg !576
  %5 = load i32* %n215, align 4, !dbg !576, !tbaa !353
  tail call void @llvm.dbg.value(metadata !{i32 %5}, i64 0, metadata !131), !dbg !576
  %cmp16 = icmp slt i32 %call14, %5, !dbg !576
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !576

if.then17:                                        ; preds = %if.end13
  tail call void @ZV_setSize(%struct._ZV* %rowZV, i32 %5) #6, !dbg !577
  br label %if.end18, !dbg !579

if.end18:                                         ; preds = %if.then17, %if.end13
  %call19 = tail call double* @ZV_entries(%struct._ZV* %rowZV) #6, !dbg !580
  tail call void @llvm.dbg.value(metadata !{double* %call19}, i64 0, metadata !127), !dbg !580
  tail call void @llvm.dbg.value(metadata !{i32 %mul}, i64 0, metadata !130), !dbg !581
  tail call void @llvm.dbg.value(metadata !{i32 %7}, i64 0, metadata !128), !dbg !582
  %6 = load double** %entries3, align 8, !dbg !583, !tbaa !348
  tail call void @llvm.dbg.value(metadata !{double* %6}, i64 0, metadata !126), !dbg !583
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !129), !dbg !584
  %cmp2265 = icmp sgt i32 %5, 0, !dbg !584
  br i1 %cmp2265, label %for.body.lr.ph, label %for.end, !dbg !584

for.body.lr.ph:                                   ; preds = %if.end18
  %inc220 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 4, !dbg !582
  %7 = load i32* %inc220, align 4, !dbg !582, !tbaa !353
  %inc1 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 3, !dbg !581
  %8 = load i32* %inc1, align 4, !dbg !581, !tbaa !353
  %mul = mul nsw i32 %8, %irow, !dbg !581
  %9 = sext i32 %mul to i64, !dbg !584
  %10 = sext i32 %7 to i64, !dbg !584
  br label %for.body, !dbg !584

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv68 = phi i64 [ %9, %for.body.lr.ph ], [ %indvars.iv.next69, %for.body ], !dbg !584
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %11 = trunc i64 %indvars.iv68 to i32, !dbg !586
  %mul23 = shl nsw i32 %11, 1, !dbg !586
  %idxprom = sext i32 %mul23 to i64, !dbg !586
  %arrayidx = getelementptr inbounds double* %6, i64 %idxprom, !dbg !586
  %12 = load double* %arrayidx, align 8, !dbg !586, !tbaa !452
  %13 = trunc i64 %indvars.iv to i32, !dbg !586
  %mul24 = shl nsw i32 %13, 1, !dbg !586
  %idxprom25 = sext i32 %mul24 to i64, !dbg !586
  %arrayidx26 = getelementptr inbounds double* %call19, i64 %idxprom25, !dbg !586
  store double %12, double* %arrayidx26, align 8, !dbg !586, !tbaa !452
  %add62 = or i32 %mul23, 1, !dbg !588
  %idxprom28 = sext i32 %add62 to i64, !dbg !588
  %arrayidx29 = getelementptr inbounds double* %6, i64 %idxprom28, !dbg !588
  %14 = load double* %arrayidx29, align 8, !dbg !588, !tbaa !452
  %add3163 = or i32 %mul24, 1, !dbg !588
  %idxprom32 = sext i32 %add3163 to i64, !dbg !588
  %arrayidx33 = getelementptr inbounds double* %call19, i64 %idxprom32, !dbg !588
  store double %14, double* %arrayidx33, align 8, !dbg !588, !tbaa !452
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !584
  %indvars.iv.next69 = add i64 %indvars.iv68, %10, !dbg !584
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !584
  %exitcond = icmp eq i32 %lftr.wideiv, %5, !dbg !584
  br i1 %exitcond, label %for.end, label %for.body, !dbg !584

for.end:                                          ; preds = %for.body, %if.end18
  ret void, !dbg !589
}
