define void @A2_copy(%struct._A2* %A, %struct._A2* %B) #0 {
  tail call void @llvm.dbg.value(metadata %struct._A2* %A, i64 0, metadata !269, metadata !355), !dbg !1450
  tail call void @llvm.dbg.value(metadata %struct._A2* %B, i64 0, metadata !270, metadata !355), !dbg !1451
  %1 = icmp eq %struct._A2* %A, null, !dbg !1452
  br i1 %1, label %43, label %2, !dbg !1454

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._A2* %A, i64 0, i32 1, !dbg !1455
  %4 = load i32* %3, align 4, !dbg !1455, !tbaa !413
  tail call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !285, metadata !355), !dbg !1456
  %5 = icmp slt i32 %4, 0, !dbg !1457
  br i1 %5, label %46, label %6, !dbg !1458

; <label>:6                                       ; preds = %2
  %7 = getelementptr inbounds %struct._A2* %A, i64 0, i32 2, !dbg !1459
  %8 = load i32* %7, align 4, !dbg !1459, !tbaa !416
  tail call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !282, metadata !355), !dbg !1460
  %9 = icmp slt i32 %8, 0, !dbg !1461
  br i1 %9, label %46, label %10, !dbg !1462

; <label>:10                                      ; preds = %6
  %11 = getelementptr inbounds %struct._A2* %A, i64 0, i32 3, !dbg !1463
  %12 = load i32* %11, align 4, !dbg !1463, !tbaa !421
  tail call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !273, metadata !355), !dbg !1464
  %13 = icmp slt i32 %12, 1, !dbg !1465
  br i1 %13, label %46, label %14, !dbg !1466

; <label>:14                                      ; preds = %10
  %15 = getelementptr inbounds %struct._A2* %A, i64 0, i32 4, !dbg !1467
  %16 = load i32* %15, align 4, !dbg !1467, !tbaa !424
  tail call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !275, metadata !355), !dbg !1468
  %17 = icmp slt i32 %16, 1, !dbg !1469
  br i1 %17, label %46, label %18, !dbg !1470

; <label>:18                                      ; preds = %14
  %19 = getelementptr inbounds %struct._A2* %A, i64 0, i32 6, !dbg !1471
  %20 = load double** %19, align 8, !dbg !1471, !tbaa !429
  tail call void @llvm.dbg.value(metadata double* %20, i64 0, metadata !271, metadata !355), !dbg !1472
  %21 = icmp eq double* %20, null, !dbg !1473
  %22 = icmp eq %struct._A2* %B, null, !dbg !1474
  %or.cond = or i1 %22, %21, !dbg !1475
  br i1 %or.cond, label %46, label %23, !dbg !1475

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct._A2* %B, i64 0, i32 1, !dbg !1476
  %25 = load i32* %24, align 4, !dbg !1476, !tbaa !413
  tail call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !286, metadata !355), !dbg !1477
  %26 = icmp slt i32 %25, 0, !dbg !1478
  br i1 %26, label %46, label %27, !dbg !1479

; <label>:27                                      ; preds = %23
  %28 = getelementptr inbounds %struct._A2* %B, i64 0, i32 2, !dbg !1480
  %29 = load i32* %28, align 4, !dbg !1480, !tbaa !416
  tail call void @llvm.dbg.value(metadata i32 %29, i64 0, metadata !283, metadata !355), !dbg !1481
  %30 = icmp slt i32 %29, 0, !dbg !1482
  br i1 %30, label %46, label %31, !dbg !1483

; <label>:31                                      ; preds = %27
  %32 = getelementptr inbounds %struct._A2* %B, i64 0, i32 3, !dbg !1484
  %33 = load i32* %32, align 4, !dbg !1484, !tbaa !421
  tail call void @llvm.dbg.value(metadata i32 %33, i64 0, metadata !274, metadata !355), !dbg !1485
  %34 = icmp slt i32 %33, 1, !dbg !1486
  br i1 %34, label %46, label %35, !dbg !1487

; <label>:35                                      ; preds = %31
  %36 = getelementptr inbounds %struct._A2* %B, i64 0, i32 4, !dbg !1488
  %37 = load i32* %36, align 4, !dbg !1488, !tbaa !424
  tail call void @llvm.dbg.value(metadata i32 %37, i64 0, metadata !276, metadata !355), !dbg !1489
  %38 = icmp slt i32 %37, 1, !dbg !1490
  br i1 %38, label %46, label %39, !dbg !1491

; <label>:39                                      ; preds = %35
  %40 = getelementptr inbounds %struct._A2* %B, i64 0, i32 6, !dbg !1492
  %41 = load double** %40, align 8, !dbg !1492, !tbaa !429
  tail call void @llvm.dbg.value(metadata double* %41, i64 0, metadata !272, metadata !355), !dbg !1493
  %42 = icmp eq double* %41, null, !dbg !1494
  br i1 %42, label %46, label %59, !dbg !1495

; <label>:43                                      ; preds = %0
  %44 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1496, !tbaa !362
  %45 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %44, i8* getelementptr inbounds ([44 x i8]* @.str42, i64 0, i64 0), %struct._A2* null, %struct._A2* %B) #6, !dbg !1498
  br label %52

; <label>:46                                      ; preds = %39, %35, %31, %27, %23, %18, %14, %10, %6, %2
  %47 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1496, !tbaa !362
  %48 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %47, i8* getelementptr inbounds ([44 x i8]* @.str42, i64 0, i64 0), %struct._A2* %A, %struct._A2* %B) #6, !dbg !1498
  %49 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1499, !tbaa !362
  %50 = tail call i64 @fwrite(i8* getelementptr inbounds ([19 x i8]* @.str43, i64 0, i64 0), i64 18, i64 1, %struct.__sFILE* %49), !dbg !1502
  %51 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1503, !tbaa !362
  tail call void @A2_writeStats(%struct._A2* %A, %struct.__sFILE* %51) #6, !dbg !1504
  br label %52, !dbg !1505

; <label>:52                                      ; preds = %43, %46
  %53 = icmp eq %struct._A2* %B, null, !dbg !1506
  br i1 %53, label %58, label %54, !dbg !1508

; <label>:54                                      ; preds = %52
  %55 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1509, !tbaa !362
  %56 = tail call i64 @fwrite(i8* getelementptr inbounds ([20 x i8]* @.str44, i64 0, i64 0), i64 19, i64 1, %struct.__sFILE* %55), !dbg !1511
  %57 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1512, !tbaa !362
  tail call void @A2_writeStats(%struct._A2* %B, %struct.__sFILE* %57) #6, !dbg !1513
  br label %58, !dbg !1514

; <label>:58                                      ; preds = %52, %54
  tail call void @exit(i32 -1) #7, !dbg !1515
  unreachable, !dbg !1515

; <label>:59                                      ; preds = %39
  %60 = getelementptr inbounds %struct._A2* %A, i64 0, i32 0, !dbg !1516
  %61 = load i32* %60, align 4, !dbg !1516, !tbaa !370
  %.off = add i32 %61, -1, !dbg !1518
  %switch = icmp ult i32 %.off, 2, !dbg !1518
  br i1 %switch, label %65, label %62, !dbg !1518

; <label>:62                                      ; preds = %59
  %63 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1519, !tbaa !362
  %64 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %63, i8* getelementptr inbounds ([87 x i8]* @.str45, i64 0, i64 0), %struct._A2* %A, %struct._A2* %B, i32 %61) #6, !dbg !1521
  tail call void @exit(i32 -1) #7, !dbg !1522
  unreachable, !dbg !1522

; <label>:65                                      ; preds = %59
  %66 = getelementptr inbounds %struct._A2* %B, i64 0, i32 0, !dbg !1523
  %67 = load i32* %66, align 4, !dbg !1523, !tbaa !370
  %.off14 = add i32 %67, -1, !dbg !1525
  %switch15 = icmp ult i32 %.off14, 2, !dbg !1525
  br i1 %switch15, label %71, label %68, !dbg !1525

; <label>:68                                      ; preds = %65
  %69 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1526, !tbaa !362
  %70 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %69, i8* getelementptr inbounds ([87 x i8]* @.str45, i64 0, i64 0), %struct._A2* %A, %struct._A2* %B, i32 %67) #6, !dbg !1528
  tail call void @exit(i32 -1) #7, !dbg !1529
  unreachable, !dbg !1529

; <label>:71                                      ; preds = %65
  %72 = icmp eq i32 %61, %67, !dbg !1530
  br i1 %72, label %76, label %73, !dbg !1532

; <label>:73                                      ; preds = %71
  %74 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1533, !tbaa !362
  %75 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %74, i8* getelementptr inbounds ([79 x i8]* @.str46, i64 0, i64 0), %struct._A2* %A, %struct._A2* %B, i32 %61, i32 %67) #6, !dbg !1535
  tail call void @exit(i32 -1) #7, !dbg !1536
  unreachable, !dbg !1536

; <label>:76                                      ; preds = %71
  %77 = icmp sle i32 %4, %25, !dbg !1537
  %78 = select i1 %77, i32 %4, i32 %25, !dbg !1538
  tail call void @llvm.dbg.value(metadata i32 %78, i64 0, metadata !284, metadata !355), !dbg !1539
  %79 = icmp sle i32 %8, %29, !dbg !1540
  %80 = select i1 %79, i32 %8, i32 %29, !dbg !1541
  tail call void @llvm.dbg.value(metadata i32 %80, i64 0, metadata !281, metadata !355), !dbg !1542
  switch i32 %61, label %.loopexit [
    i32 1, label %81
    i32 2, label %151
  ], !dbg !1543

; <label>:81                                      ; preds = %76
  %82 = icmp eq i32 %12, 1, !dbg !1544
  %83 = icmp eq i32 %33, 1, !dbg !1545
  %or.cond7 = and i1 %82, %83, !dbg !1546
  br i1 %or.cond7, label %.preheader16, label %104, !dbg !1546

.preheader16:                                     ; preds = %81
  %84 = icmp sgt i32 %80, 0, !dbg !1547
  br i1 %84, label %.preheader.lr.ph, label %.loopexit, !dbg !1550

.preheader.lr.ph:                                 ; preds = %.preheader16
  %85 = icmp sgt i32 %78, 0, !dbg !1551
  %86 = sext i32 %16 to i64, !dbg !1555
  %87 = sext i32 %37 to i64, !dbg !1556
  %88 = xor i32 %4, -1, !dbg !1550
  %89 = xor i32 %25, -1, !dbg !1550
  %90 = icmp sgt i32 %88, %89
  %smax = select i1 %90, i32 %88, i32 %89
  %91 = sub i32 -2, %smax, !dbg !1550
  %92 = xor i32 %8, -1, !dbg !1550
  %93 = xor i32 %29, -1, !dbg !1550
  %94 = icmp sgt i32 %92, %93
  %smax62 = select i1 %94, i32 %92, i32 %93
  %95 = sub i32 -2, %smax62, !dbg !1550
  br label %.preheader, !dbg !1550

.preheader:                                       ; preds = %._crit_edge, %.preheader.lr.ph
  %colB.035 = phi double* [ %41, %.preheader.lr.ph ], [ %102, %._crit_edge ]
  %colA.034 = phi double* [ %20, %.preheader.lr.ph ], [ %101, %._crit_edge ]
  %jcol.033 = phi i32 [ 0, %.preheader.lr.ph ], [ %103, %._crit_edge ]
  br i1 %85, label %.lr.ph, label %._crit_edge, !dbg !1557

.lr.ph:                                           ; preds = %.preheader, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %.preheader ]
  %96 = getelementptr inbounds double* %colB.035, i64 %indvars.iv, !dbg !1558
  %97 = bitcast double* %96 to i64*, !dbg !1558
  %98 = load i64* %97, align 8, !dbg !1558, !tbaa !557
  %99 = getelementptr inbounds double* %colA.034, i64 %indvars.iv, !dbg !1560
  %100 = bitcast double* %99 to i64*, !dbg !1561
  store i64 %98, i64* %100, align 8, !dbg !1561, !tbaa !557
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1557
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !1557
  %exitcond = icmp eq i32 %lftr.wideiv, %91, !dbg !1557
  br i1 %exitcond, label %._crit_edge, label %.lr.ph, !dbg !1557

._crit_edge:                                      ; preds = %.lr.ph, %.preheader
  %101 = getelementptr inbounds double* %colA.034, i64 %86, !dbg !1555
  tail call void @llvm.dbg.value(metadata double* %101, i64 0, metadata !287, metadata !355), !dbg !1562
  %102 = getelementptr inbounds double* %colB.035, i64 %87, !dbg !1556
  tail call void @llvm.dbg.value(metadata double* %102, i64 0, metadata !292, metadata !355), !dbg !1563
  %103 = add nuw nsw i32 %jcol.033, 1, !dbg !1564
  tail call void @llvm.dbg.value(metadata i32 %103, i64 0, metadata !278, metadata !355), !dbg !1565
  %exitcond63 = icmp eq i32 %jcol.033, %95, !dbg !1550
  br i1 %exitcond63, label %.loopexit, label %.preheader, !dbg !1550

; <label>:104                                     ; preds = %81
  %105 = icmp eq i32 %16, 1, !dbg !1566
  %106 = icmp eq i32 %37, 1, !dbg !1567
  %or.cond9 = and i1 %105, %106, !dbg !1568
  %107 = icmp sgt i32 %78, 0, !dbg !1569
  br i1 %or.cond9, label %.preheader18, label %.preheader21, !dbg !1568

.preheader21:                                     ; preds = %104
  br i1 %107, label %.preheader20.lr.ph, label %.loopexit, !dbg !1572

.preheader20.lr.ph:                               ; preds = %.preheader21
  %108 = icmp sgt i32 %80, 0, !dbg !1575
  %109 = sext i32 %37 to i64, !dbg !1572
  %110 = sext i32 %16 to i64, !dbg !1572
  %111 = xor i32 %8, -1, !dbg !1572
  %112 = xor i32 %29, -1, !dbg !1572
  %113 = icmp sgt i32 %111, %112
  %smax74 = select i1 %113, i32 %111, i32 %112
  %114 = sub i32 -2, %smax74, !dbg !1572
  %115 = sext i32 %33 to i64, !dbg !1572
  %116 = sext i32 %12 to i64, !dbg !1572
  %117 = xor i32 %4, -1, !dbg !1572
  %118 = xor i32 %25, -1, !dbg !1572
  %119 = icmp sgt i32 %117, %118
  %smax79 = select i1 %119, i32 %117, i32 %118
  %120 = sub i32 -2, %smax79, !dbg !1572
  br label %.preheader20, !dbg !1572

.preheader18:                                     ; preds = %104
  br i1 %107, label %.preheader17.lr.ph, label %.loopexit, !dbg !1580

.preheader17.lr.ph:                               ; preds = %.preheader18
  %121 = icmp sgt i32 %80, 0, !dbg !1581
  %122 = shl nsw i32 %12, 1, !dbg !1585
  %123 = sext i32 %122 to i64, !dbg !1586
  %124 = xor i32 %8, -1, !dbg !1580
  %125 = xor i32 %29, -1, !dbg !1580
  %126 = icmp sgt i32 %124, %125
  %smax66 = select i1 %126, i32 %124, i32 %125
  %127 = sub i32 -2, %smax66, !dbg !1580
  %128 = xor i32 %4, -1, !dbg !1580
  %129 = xor i32 %25, -1, !dbg !1580
  %130 = icmp sgt i32 %128, %129
  %smax70 = select i1 %130, i32 %128, i32 %129
  %131 = sub i32 -2, %smax70, !dbg !1580
  br label %.preheader17, !dbg !1580

.preheader17:                                     ; preds = %._crit_edge38, %.preheader17.lr.ph
  %irow.140 = phi i32 [ 0, %.preheader17.lr.ph ], [ %138, %._crit_edge38 ]
  %rowA.039 = phi double* [ %20, %.preheader17.lr.ph ], [ %137, %._crit_edge38 ]
  br i1 %121, label %.lr.ph37, label %._crit_edge38, !dbg !1587

.lr.ph37:                                         ; preds = %.preheader17, %.lr.ph37
  %indvars.iv64 = phi i64 [ %indvars.iv.next65, %.lr.ph37 ], [ 0, %.preheader17 ]
  %132 = getelementptr inbounds double* %41, i64 %indvars.iv64, !dbg !1588
  %133 = bitcast double* %132 to i64*, !dbg !1588
  %134 = load i64* %133, align 8, !dbg !1588, !tbaa !557
  %135 = getelementptr inbounds double* %rowA.039, i64 %indvars.iv64, !dbg !1590
  %136 = bitcast double* %135 to i64*, !dbg !1591
  store i64 %134, i64* %136, align 8, !dbg !1591, !tbaa !557
  %indvars.iv.next65 = add nuw nsw i64 %indvars.iv64, 1, !dbg !1587
  %lftr.wideiv67 = trunc i64 %indvars.iv64 to i32, !dbg !1587
  %exitcond68 = icmp eq i32 %lftr.wideiv67, %127, !dbg !1587
  br i1 %exitcond68, label %._crit_edge38, label %.lr.ph37, !dbg !1587

._crit_edge38:                                    ; preds = %.lr.ph37, %.preheader17
  %137 = getelementptr inbounds double* %rowA.039, i64 %123, !dbg !1586
  tail call void @llvm.dbg.value(metadata double* %137, i64 0, metadata !293, metadata !355), !dbg !1592
  %138 = add nuw nsw i32 %irow.140, 1, !dbg !1593
  tail call void @llvm.dbg.value(metadata i32 %138, i64 0, metadata !277, metadata !355), !dbg !1594
  %exitcond71 = icmp eq i32 %irow.140, %131, !dbg !1580
  br i1 %exitcond71, label %.loopexit, label %.preheader17, !dbg !1580

.preheader20:                                     ; preds = %._crit_edge43, %.preheader20.lr.ph
  %indvars.iv77 = phi i64 [ 0, %.preheader20.lr.ph ], [ %indvars.iv.next78, %._crit_edge43 ]
  br i1 %108, label %.lr.ph42, label %._crit_edge43, !dbg !1595

.lr.ph42:                                         ; preds = %.preheader20
  %139 = mul nsw i64 %indvars.iv77, %116, !dbg !1596
  %140 = mul nsw i64 %indvars.iv77, %115, !dbg !1598
  br label %141, !dbg !1595

; <label>:141                                     ; preds = %141, %.lr.ph42
  %indvars.iv72 = phi i64 [ 0, %.lr.ph42 ], [ %indvars.iv.next73, %141 ]
  %142 = mul nsw i64 %indvars.iv72, %110, !dbg !1599
  %143 = add nsw i64 %142, %139, !dbg !1600
  %144 = mul nsw i64 %indvars.iv72, %109, !dbg !1601
  %145 = add nsw i64 %144, %140, !dbg !1602
  %146 = getelementptr inbounds double* %41, i64 %145, !dbg !1603
  %147 = bitcast double* %146 to i64*, !dbg !1603
  %148 = load i64* %147, align 8, !dbg !1603, !tbaa !557
  %149 = getelementptr inbounds double* %20, i64 %143, !dbg !1604
  %150 = bitcast double* %149 to i64*, !dbg !1605
  store i64 %148, i64* %150, align 8, !dbg !1605, !tbaa !557
  %indvars.iv.next73 = add nuw nsw i64 %indvars.iv72, 1, !dbg !1595
  %lftr.wideiv75 = trunc i64 %indvars.iv72 to i32, !dbg !1595
  %exitcond76 = icmp eq i32 %lftr.wideiv75, %114, !dbg !1595
  br i1 %exitcond76, label %._crit_edge43, label %141, !dbg !1595

._crit_edge43:                                    ; preds = %141, %.preheader20
  %indvars.iv.next78 = add nuw nsw i64 %indvars.iv77, 1, !dbg !1572
  %lftr.wideiv80 = trunc i64 %indvars.iv77 to i32, !dbg !1572
  %exitcond81 = icmp eq i32 %lftr.wideiv80, %120, !dbg !1572
  br i1 %exitcond81, label %.loopexit, label %.preheader20, !dbg !1572

; <label>:151                                     ; preds = %76
  %152 = icmp eq i32 %12, 1, !dbg !1606
  %153 = icmp eq i32 %33, 1, !dbg !1607
  %or.cond11 = and i1 %152, %153, !dbg !1608
  br i1 %or.cond11, label %.preheader24, label %186, !dbg !1608

.preheader24:                                     ; preds = %151
  %154 = icmp sgt i32 %80, 0, !dbg !1609
  br i1 %154, label %.preheader23.lr.ph, label %.loopexit, !dbg !1612

.preheader23.lr.ph:                               ; preds = %.preheader24
  %155 = icmp sgt i32 %78, 0, !dbg !1613
  %156 = shl nsw i32 %16, 1, !dbg !1617
  %157 = sext i32 %156 to i64, !dbg !1618
  %158 = shl nsw i32 %37, 1, !dbg !1619
  %159 = sext i32 %158 to i64, !dbg !1620
  %160 = xor i32 %4, -1, !dbg !1612
  %161 = xor i32 %25, -1, !dbg !1612
  %162 = icmp sgt i32 %160, %161
  %smax84 = select i1 %162, i32 %160, i32 %161
  %163 = sub i32 -2, %smax84, !dbg !1612
  %164 = xor i32 %8, -1, !dbg !1612
  %165 = xor i32 %29, -1, !dbg !1612
  %166 = icmp sgt i32 %164, %165
  %smax87 = select i1 %166, i32 %164, i32 %165
  %167 = sub i32 -2, %smax87, !dbg !1612
  br label %.preheader23, !dbg !1612

.preheader23:                                     ; preds = %._crit_edge47, %.preheader23.lr.ph
  %colB2.050 = phi double* [ %41, %.preheader23.lr.ph ], [ %184, %._crit_edge47 ]
  %colA1.049 = phi double* [ %20, %.preheader23.lr.ph ], [ %183, %._crit_edge47 ]
  %jcol.348 = phi i32 [ 0, %.preheader23.lr.ph ], [ %185, %._crit_edge47 ]
  br i1 %155, label %.lr.ph46, label %._crit_edge47, !dbg !1621

.lr.ph46:                                         ; preds = %.preheader23, %.lr.ph46
  %indvars.iv82 = phi i64 [ %indvars.iv.next83, %.lr.ph46 ], [ 0, %.preheader23 ]
  %168 = trunc i64 %indvars.iv82 to i32, !dbg !1622
  %169 = shl nsw i32 %168, 1, !dbg !1622
  %170 = sext i32 %169 to i64, !dbg !1624
  %171 = getelementptr inbounds double* %colB2.050, i64 %170, !dbg !1624
  %172 = bitcast double* %171 to i64*, !dbg !1624
  %173 = load i64* %172, align 8, !dbg !1624, !tbaa !557
  %174 = getelementptr inbounds double* %colA1.049, i64 %170, !dbg !1625
  %175 = bitcast double* %174 to i64*, !dbg !1626
  store i64 %173, i64* %175, align 8, !dbg !1626, !tbaa !557
  %176 = or i32 %169, 1, !dbg !1627
  %177 = sext i32 %176 to i64, !dbg !1628
  %178 = getelementptr inbounds double* %colB2.050, i64 %177, !dbg !1628
  %179 = bitcast double* %178 to i64*, !dbg !1628
  %180 = load i64* %179, align 8, !dbg !1628, !tbaa !557
  %181 = getelementptr inbounds double* %colA1.049, i64 %177, !dbg !1629
  %182 = bitcast double* %181 to i64*, !dbg !1630
  store i64 %180, i64* %182, align 8, !dbg !1630, !tbaa !557
  %indvars.iv.next83 = add nuw nsw i64 %indvars.iv82, 1, !dbg !1621
  %exitcond86 = icmp eq i32 %168, %163, !dbg !1621
  br i1 %exitcond86, label %._crit_edge47, label %.lr.ph46, !dbg !1621

._crit_edge47:                                    ; preds = %.lr.ph46, %.preheader23
  %183 = getelementptr inbounds double* %colA1.049, i64 %157, !dbg !1618
  tail call void @llvm.dbg.value(metadata double* %183, i64 0, metadata !297, metadata !355), !dbg !1631
  %184 = getelementptr inbounds double* %colB2.050, i64 %159, !dbg !1620
  tail call void @llvm.dbg.value(metadata double* %184, i64 0, metadata !302, metadata !355), !dbg !1632
  %185 = add nuw nsw i32 %jcol.348, 1, !dbg !1633
  tail call void @llvm.dbg.value(metadata i32 %185, i64 0, metadata !278, metadata !355), !dbg !1565
  %exitcond88 = icmp eq i32 %jcol.348, %167, !dbg !1612
  br i1 %exitcond88, label %.loopexit, label %.preheader23, !dbg !1612

; <label>:186                                     ; preds = %151
  %187 = icmp eq i32 %16, 1, !dbg !1634
  %188 = icmp eq i32 %37, 1, !dbg !1635
  %or.cond13 = and i1 %187, %188, !dbg !1636
  %189 = icmp sgt i32 %78, 0, !dbg !1637
  br i1 %or.cond13, label %.preheader27, label %.preheader30, !dbg !1636

.preheader30:                                     ; preds = %186
  br i1 %189, label %.preheader29.lr.ph, label %.loopexit, !dbg !1640

.preheader29.lr.ph:                               ; preds = %.preheader30
  %190 = icmp sgt i32 %80, 0, !dbg !1643
  %191 = sext i32 %37 to i64, !dbg !1640
  %192 = sext i32 %16 to i64, !dbg !1640
  %193 = xor i32 %8, -1, !dbg !1640
  %194 = xor i32 %29, -1, !dbg !1640
  %195 = icmp sgt i32 %193, %194
  %smax98 = select i1 %195, i32 %193, i32 %194
  %196 = sub i32 -2, %smax98, !dbg !1640
  %197 = sext i32 %33 to i64, !dbg !1640
  %198 = sext i32 %12 to i64, !dbg !1640
  %199 = xor i32 %4, -1, !dbg !1640
  %200 = xor i32 %25, -1, !dbg !1640
  %201 = icmp sgt i32 %199, %200
  %smax103 = select i1 %201, i32 %199, i32 %200
  %202 = sub i32 -2, %smax103, !dbg !1640
  br label %.preheader29, !dbg !1640

.preheader27:                                     ; preds = %186
  br i1 %189, label %.preheader26.lr.ph, label %.loopexit, !dbg !1648

.preheader26.lr.ph:                               ; preds = %.preheader27
  %203 = icmp sgt i32 %80, 0, !dbg !1649
  %204 = shl nsw i32 %12, 1, !dbg !1653
  %205 = sext i32 %204 to i64, !dbg !1654
  %206 = shl nsw i32 %33, 1, !dbg !1655
  %207 = sext i32 %206 to i64, !dbg !1656
  %208 = xor i32 %8, -1, !dbg !1648
  %209 = xor i32 %29, -1, !dbg !1648
  %210 = icmp sgt i32 %208, %209
  %smax91 = select i1 %210, i32 %208, i32 %209
  %211 = sub i32 -2, %smax91, !dbg !1648
  %212 = xor i32 %4, -1, !dbg !1648
  %213 = xor i32 %25, -1, !dbg !1648
  %214 = icmp sgt i32 %212, %213
  %smax94 = select i1 %214, i32 %212, i32 %213
  %215 = sub i32 -2, %smax94, !dbg !1648
  br label %.preheader26, !dbg !1648

.preheader26:                                     ; preds = %._crit_edge53, %.preheader26.lr.ph
  %rowB4.056 = phi double* [ %41, %.preheader26.lr.ph ], [ %232, %._crit_edge53 ]
  %rowA3.055 = phi double* [ %20, %.preheader26.lr.ph ], [ %231, %._crit_edge53 ]
  %irow.454 = phi i32 [ 0, %.preheader26.lr.ph ], [ %233, %._crit_edge53 ]
  br i1 %203, label %.lr.ph52, label %._crit_edge53, !dbg !1657

.lr.ph52:                                         ; preds = %.preheader26, %.lr.ph52
  %indvars.iv89 = phi i64 [ %indvars.iv.next90, %.lr.ph52 ], [ 0, %.preheader26 ]
  %216 = trunc i64 %indvars.iv89 to i32, !dbg !1658
  %217 = shl nsw i32 %216, 1, !dbg !1658
  %218 = sext i32 %217 to i64, !dbg !1660
  %219 = getelementptr inbounds double* %rowB4.056, i64 %218, !dbg !1660
  %220 = bitcast double* %219 to i64*, !dbg !1660
  %221 = load i64* %220, align 8, !dbg !1660, !tbaa !557
  %222 = getelementptr inbounds double* %rowA3.055, i64 %218, !dbg !1661
  %223 = bitcast double* %222 to i64*, !dbg !1662
  store i64 %221, i64* %223, align 8, !dbg !1662, !tbaa !557
  %224 = or i32 %217, 1, !dbg !1663
  %225 = sext i32 %224 to i64, !dbg !1664
  %226 = getelementptr inbounds double* %rowB4.056, i64 %225, !dbg !1664
  %227 = bitcast double* %226 to i64*, !dbg !1664
  %228 = load i64* %227, align 8, !dbg !1664, !tbaa !557
  %229 = getelementptr inbounds double* %rowA3.055, i64 %225, !dbg !1665
  %230 = bitcast double* %229 to i64*, !dbg !1666
  store i64 %228, i64* %230, align 8, !dbg !1666, !tbaa !557
  %indvars.iv.next90 = add nuw nsw i64 %indvars.iv89, 1, !dbg !1657
  %exitcond93 = icmp eq i32 %216, %211, !dbg !1657
  br i1 %exitcond93, label %._crit_edge53, label %.lr.ph52, !dbg !1657

._crit_edge53:                                    ; preds = %.lr.ph52, %.preheader26
  %231 = getelementptr inbounds double* %rowA3.055, i64 %205, !dbg !1654
  tail call void @llvm.dbg.value(metadata double* %231, i64 0, metadata !303, metadata !355), !dbg !1667
  %232 = getelementptr inbounds double* %rowB4.056, i64 %207, !dbg !1656
  tail call void @llvm.dbg.value(metadata double* %232, i64 0, metadata !306, metadata !355), !dbg !1668
  %233 = add nuw nsw i32 %irow.454, 1, !dbg !1669
  tail call void @llvm.dbg.value(metadata i32 %233, i64 0, metadata !277, metadata !355), !dbg !1594
  %exitcond95 = icmp eq i32 %irow.454, %215, !dbg !1648
  br i1 %exitcond95, label %.loopexit, label %.preheader26, !dbg !1648

.preheader29:                                     ; preds = %._crit_edge59, %.preheader29.lr.ph
  %indvars.iv101 = phi i64 [ 0, %.preheader29.lr.ph ], [ %indvars.iv.next102, %._crit_edge59 ]
  br i1 %190, label %.lr.ph58, label %._crit_edge59, !dbg !1670

.lr.ph58:                                         ; preds = %.preheader29
  %234 = mul nsw i64 %indvars.iv101, %198, !dbg !1671
  %235 = mul nsw i64 %indvars.iv101, %197, !dbg !1673
  br label %236, !dbg !1670

; <label>:236                                     ; preds = %236, %.lr.ph58
  %indvars.iv96 = phi i64 [ 0, %.lr.ph58 ], [ %indvars.iv.next97, %236 ]
  %237 = mul nsw i64 %indvars.iv96, %192, !dbg !1674
  %238 = add nsw i64 %237, %234, !dbg !1675
  %239 = mul nsw i64 %indvars.iv96, %191, !dbg !1676
  %240 = add nsw i64 %239, %235, !dbg !1677
  %241 = trunc i64 %240 to i32, !dbg !1678
  %242 = shl nsw i32 %241, 1, !dbg !1678
  %243 = sext i32 %242 to i64, !dbg !1679
  %244 = getelementptr inbounds double* %41, i64 %243, !dbg !1679
  %245 = bitcast double* %244 to i64*, !dbg !1679
  %246 = load i64* %245, align 8, !dbg !1679, !tbaa !557
  %247 = trunc i64 %238 to i32, !dbg !1680
  %248 = shl nsw i32 %247, 1, !dbg !1680
  %249 = sext i32 %248 to i64, !dbg !1681
  %250 = getelementptr inbounds double* %20, i64 %249, !dbg !1681
  %251 = bitcast double* %250 to i64*, !dbg !1682
  store i64 %246, i64* %251, align 8, !dbg !1682, !tbaa !557
  %252 = or i32 %242, 1, !dbg !1683
  %253 = sext i32 %252 to i64, !dbg !1684
  %254 = getelementptr inbounds double* %41, i64 %253, !dbg !1684
  %255 = bitcast double* %254 to i64*, !dbg !1684
  %256 = load i64* %255, align 8, !dbg !1684, !tbaa !557
  %257 = or i32 %248, 1, !dbg !1685
  %258 = sext i32 %257 to i64, !dbg !1686
  %259 = getelementptr inbounds double* %20, i64 %258, !dbg !1686
  %260 = bitcast double* %259 to i64*, !dbg !1687
  store i64 %256, i64* %260, align 8, !dbg !1687, !tbaa !557
  %indvars.iv.next97 = add nuw nsw i64 %indvars.iv96, 1, !dbg !1670
  %lftr.wideiv99 = trunc i64 %indvars.iv96 to i32, !dbg !1670
  %exitcond100 = icmp eq i32 %lftr.wideiv99, %196, !dbg !1670
  br i1 %exitcond100, label %._crit_edge59, label %236, !dbg !1670

._crit_edge59:                                    ; preds = %236, %.preheader29
  %indvars.iv.next102 = add nuw nsw i64 %indvars.iv101, 1, !dbg !1640
  %lftr.wideiv104 = trunc i64 %indvars.iv101 to i32, !dbg !1640
  %exitcond105 = icmp eq i32 %lftr.wideiv104, %202, !dbg !1640
  br i1 %exitcond105, label %.loopexit, label %.preheader29, !dbg !1640

.loopexit:                                        ; preds = %._crit_edge59, %._crit_edge53, %._crit_edge47, %._crit_edge43, %._crit_edge38, %._crit_edge, %.preheader30, %.preheader27, %.preheader24, %.preheader21, %.preheader18, %.preheader16, %76
  ret void, !dbg !1688
}
