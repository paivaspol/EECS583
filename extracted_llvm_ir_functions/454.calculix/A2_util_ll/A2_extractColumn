define void @A2_extractColumn(%struct._A2* %mtx, double* %col, i32 %jcol) #0 {
  tail call void @llvm.dbg.value(metadata %struct._A2* %mtx, i64 0, metadata !61, metadata !355), !dbg !573
  tail call void @llvm.dbg.value(metadata double* %col, i64 0, metadata !62, metadata !355), !dbg !574
  tail call void @llvm.dbg.value(metadata i32 %jcol, i64 0, metadata !63, metadata !355), !dbg !575
  %1 = icmp eq %struct._A2* %mtx, null, !dbg !576
  %2 = icmp eq double* %col, null, !dbg !578
  %or.cond = or i1 %1, %2, !dbg !579
  br i1 %or.cond, label %12, label %3, !dbg !579

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 6, !dbg !580
  %5 = load double** %4, align 8, !dbg !580, !tbaa !429
  %6 = icmp eq double* %5, null, !dbg !581
  %7 = icmp slt i32 %jcol, 0, !dbg !582
  %or.cond3 = or i1 %7, %6, !dbg !583
  br i1 %or.cond3, label %12, label %8, !dbg !583

; <label>:8                                       ; preds = %3
  %9 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 2, !dbg !584
  %10 = load i32* %9, align 4, !dbg !584, !tbaa !416
  %11 = icmp sgt i32 %10, %jcol, !dbg !585
  br i1 %11, label %15, label %12, !dbg !586

; <label>:12                                      ; preds = %8, %3, %0
  %13 = load %struct.__sFILE** @__stderrp, align 8, !dbg !587, !tbaa !362
  %14 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %13, i8* getelementptr inbounds ([56 x i8]* @.str12, i64 0, i64 0), %struct._A2* %mtx, double* %col, i32 %jcol) #6, !dbg !589
  tail call void @exit(i32 -1) #7, !dbg !590
  unreachable, !dbg !590

; <label>:15                                      ; preds = %8
  %16 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 0, !dbg !591
  %17 = load i32* %16, align 4, !dbg !591, !tbaa !370
  %.off = add i32 %17, -1, !dbg !593
  %switch = icmp ult i32 %.off, 2, !dbg !593
  br i1 %switch, label %21, label %18, !dbg !593

; <label>:18                                      ; preds = %15
  %19 = load %struct.__sFILE** @__stderrp, align 8, !dbg !594, !tbaa !362
  %20 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %19, i8* getelementptr inbounds ([99 x i8]* @.str13, i64 0, i64 0), %struct._A2* %mtx, double* %col, i32 %jcol, i32 %17) #6, !dbg !596
  tail call void @exit(i32 -1) #7, !dbg !597
  unreachable, !dbg !597

; <label>:21                                      ; preds = %15
  %22 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 4, !dbg !598
  %23 = load i32* %22, align 4, !dbg !598, !tbaa !424
  %24 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 1, !dbg !599
  %25 = load i32* %24, align 4, !dbg !599, !tbaa !413
  tail call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !68, metadata !355), !dbg !600
  %26 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 3, !dbg !601
  %27 = load i32* %26, align 4, !dbg !601, !tbaa !421
  tail call void @llvm.dbg.value(metadata i32 %27, i64 0, metadata !66, metadata !355), !dbg !602
  tail call void @llvm.dbg.value(metadata double* %5, i64 0, metadata !64, metadata !355), !dbg !603
  switch i32 %17, label %.loopexit [
    i32 1, label %.preheader
    i32 2, label %.preheader4
  ], !dbg !604

.preheader4:                                      ; preds = %21
  %28 = icmp sgt i32 %25, 0, !dbg !605
  br i1 %28, label %.lr.ph10, label %.loopexit, !dbg !611

.lr.ph10:                                         ; preds = %.preheader4
  %29 = mul i32 %23, %jcol, !dbg !611
  %30 = sext i32 %29 to i64
  %31 = sext i32 %27 to i64
  %32 = add i32 %25, -1, !dbg !611
  br label %44, !dbg !611

.preheader:                                       ; preds = %21
  %33 = icmp sgt i32 %25, 0, !dbg !612
  br i1 %33, label %.lr.ph, label %.loopexit, !dbg !616

.lr.ph:                                           ; preds = %.preheader
  %34 = mul i32 %23, %jcol, !dbg !616
  %35 = sext i32 %34 to i64
  %36 = sext i32 %27 to i64
  %37 = add i32 %25, -1, !dbg !616
  br label %38, !dbg !616

; <label>:38                                      ; preds = %38, %.lr.ph
  %indvars.iv11 = phi i64 [ %35, %.lr.ph ], [ %indvars.iv.next12, %38 ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %38 ]
  %39 = getelementptr inbounds double* %5, i64 %indvars.iv11, !dbg !617
  %40 = bitcast double* %39 to i64*, !dbg !617
  %41 = load i64* %40, align 8, !dbg !617, !tbaa !557
  %42 = getelementptr inbounds double* %col, i64 %indvars.iv, !dbg !619
  %43 = bitcast double* %42 to i64*, !dbg !620
  store i64 %41, i64* %43, align 8, !dbg !620, !tbaa !557
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !616
  %indvars.iv.next12 = add i64 %indvars.iv11, %36, !dbg !616
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !616
  %exitcond = icmp eq i32 %lftr.wideiv, %37, !dbg !616
  br i1 %exitcond, label %.loopexit, label %38, !dbg !616

; <label>:44                                      ; preds = %44, %.lr.ph10
  %indvars.iv15 = phi i64 [ %30, %.lr.ph10 ], [ %indvars.iv.next16, %44 ]
  %indvars.iv13 = phi i64 [ 0, %.lr.ph10 ], [ %indvars.iv.next14, %44 ]
  %45 = trunc i64 %indvars.iv15 to i32, !dbg !621
  %46 = shl nsw i32 %45, 1, !dbg !621
  %47 = sext i32 %46 to i64, !dbg !623
  %48 = getelementptr inbounds double* %5, i64 %47, !dbg !623
  %49 = bitcast double* %48 to i64*, !dbg !623
  %50 = load i64* %49, align 8, !dbg !623, !tbaa !557
  %51 = trunc i64 %indvars.iv13 to i32, !dbg !624
  %52 = shl nsw i32 %51, 1, !dbg !624
  %53 = sext i32 %52 to i64, !dbg !625
  %54 = getelementptr inbounds double* %col, i64 %53, !dbg !625
  %55 = bitcast double* %54 to i64*, !dbg !626
  store i64 %50, i64* %55, align 8, !dbg !626, !tbaa !557
  %56 = or i32 %46, 1, !dbg !627
  %57 = sext i32 %56 to i64, !dbg !628
  %58 = getelementptr inbounds double* %5, i64 %57, !dbg !628
  %59 = bitcast double* %58 to i64*, !dbg !628
  %60 = load i64* %59, align 8, !dbg !628, !tbaa !557
  %61 = or i32 %52, 1, !dbg !629
  %62 = sext i32 %61 to i64, !dbg !630
  %63 = getelementptr inbounds double* %col, i64 %62, !dbg !630
  %64 = bitcast double* %63 to i64*, !dbg !631
  store i64 %60, i64* %64, align 8, !dbg !631, !tbaa !557
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1, !dbg !611
  %indvars.iv.next16 = add i64 %indvars.iv15, %31, !dbg !611
  %exitcond18 = icmp eq i32 %51, %32, !dbg !611
  br i1 %exitcond18, label %.loopexit, label %44, !dbg !611

.loopexit:                                        ; preds = %44, %38, %.preheader4, %.preheader, %21
  ret void, !dbg !632
}
