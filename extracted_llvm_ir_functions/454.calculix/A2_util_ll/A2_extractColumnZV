define void @A2_extractColumnZV(%struct._A2* %mtx, %struct._ZV* %colZV, i32 %jcol) #0 {
  tail call void @llvm.dbg.value(metadata %struct._A2* %mtx, i64 0, metadata !146, metadata !355), !dbg !915
  tail call void @llvm.dbg.value(metadata %struct._ZV* %colZV, i64 0, metadata !147, metadata !355), !dbg !916
  tail call void @llvm.dbg.value(metadata i32 %jcol, i64 0, metadata !148, metadata !355), !dbg !917
  %1 = icmp eq %struct._A2* %mtx, null, !dbg !918
  %2 = icmp eq %struct._ZV* %colZV, null, !dbg !920
  %or.cond = or i1 %1, %2, !dbg !921
  br i1 %or.cond, label %12, label %3, !dbg !921

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 6, !dbg !922
  %5 = load double** %4, align 8, !dbg !922, !tbaa !429
  %6 = icmp eq double* %5, null, !dbg !923
  %7 = icmp slt i32 %jcol, 0, !dbg !924
  %or.cond3 = or i1 %7, %6, !dbg !925
  br i1 %or.cond3, label %12, label %8, !dbg !925

; <label>:8                                       ; preds = %3
  %9 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 2, !dbg !926
  %10 = load i32* %9, align 4, !dbg !926, !tbaa !416
  %11 = icmp sgt i32 %10, %jcol, !dbg !927
  br i1 %11, label %15, label %12, !dbg !928

; <label>:12                                      ; preds = %8, %3, %0
  %13 = load %struct.__sFILE** @__stderrp, align 8, !dbg !929, !tbaa !362
  %14 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %13, i8* getelementptr inbounds ([58 x i8]* @.str24, i64 0, i64 0), %struct._A2* %mtx, %struct._ZV* %colZV, i32 %jcol) #6, !dbg !931
  tail call void @exit(i32 -1) #7, !dbg !932
  unreachable, !dbg !932

; <label>:15                                      ; preds = %8
  %16 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 0, !dbg !933
  %17 = load i32* %16, align 4, !dbg !933, !tbaa !370
  %18 = icmp eq i32 %17, 2, !dbg !933
  br i1 %18, label %22, label %19, !dbg !935

; <label>:19                                      ; preds = %15
  %20 = load %struct.__sFILE** @__stderrp, align 8, !dbg !936, !tbaa !362
  %21 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %20, i8* getelementptr inbounds ([85 x i8]* @.str25, i64 0, i64 0), %struct._A2* %mtx, %struct._ZV* %colZV, i32 %jcol, i32 %17) #6, !dbg !938
  tail call void @exit(i32 -1) #7, !dbg !939
  unreachable, !dbg !939

; <label>:22                                      ; preds = %15
  %23 = tail call i32 @ZV_size(%struct._ZV* %colZV) #6, !dbg !940
  %24 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 1, !dbg !942
  %25 = load i32* %24, align 4, !dbg !942, !tbaa !413
  tail call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !154, metadata !355), !dbg !943
  %26 = icmp slt i32 %23, %25, !dbg !944
  br i1 %26, label %27, label %28, !dbg !945

; <label>:27                                      ; preds = %22
  tail call void @ZV_setSize(%struct._ZV* %colZV, i32 %25) #6, !dbg !946
  br label %28, !dbg !948

; <label>:28                                      ; preds = %27, %22
  %29 = tail call double* @ZV_entries(%struct._ZV* %colZV) #6, !dbg !949
  tail call void @llvm.dbg.value(metadata double* %29, i64 0, metadata !150, metadata !355), !dbg !950
  tail call void @llvm.dbg.value(metadata i32 %36, i64 0, metadata !153, metadata !355), !dbg !951
  tail call void @llvm.dbg.value(metadata i32 %33, i64 0, metadata !152, metadata !355), !dbg !952
  %30 = load double** %4, align 8, !dbg !953, !tbaa !429
  tail call void @llvm.dbg.value(metadata double* %30, i64 0, metadata !149, metadata !355), !dbg !954
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !151, metadata !355), !dbg !955
  %31 = icmp sgt i32 %25, 0, !dbg !956
  br i1 %31, label %.lr.ph, label %._crit_edge, !dbg !959

.lr.ph:                                           ; preds = %28
  %32 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 3, !dbg !960
  %33 = load i32* %32, align 4, !dbg !960, !tbaa !421
  %34 = getelementptr inbounds %struct._A2* %mtx, i64 0, i32 4, !dbg !961
  %35 = load i32* %34, align 4, !dbg !961, !tbaa !424
  %36 = mul nsw i32 %35, %jcol, !dbg !962
  %37 = sext i32 %36 to i64
  %38 = sext i32 %33 to i64
  %39 = add i32 %25, -1, !dbg !959
  br label %40, !dbg !959

; <label>:40                                      ; preds = %40, %.lr.ph
  %indvars.iv6 = phi i64 [ %37, %.lr.ph ], [ %indvars.iv.next7, %40 ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %40 ]
  %41 = trunc i64 %indvars.iv6 to i32, !dbg !963
  %42 = shl nsw i32 %41, 1, !dbg !963
  %43 = sext i32 %42 to i64, !dbg !965
  %44 = getelementptr inbounds double* %30, i64 %43, !dbg !965
  %45 = bitcast double* %44 to i64*, !dbg !965
  %46 = load i64* %45, align 8, !dbg !965, !tbaa !557
  %47 = trunc i64 %indvars.iv to i32, !dbg !966
  %48 = shl nsw i32 %47, 1, !dbg !966
  %49 = sext i32 %48 to i64, !dbg !967
  %50 = getelementptr inbounds double* %29, i64 %49, !dbg !967
  %51 = bitcast double* %50 to i64*, !dbg !968
  store i64 %46, i64* %51, align 8, !dbg !968, !tbaa !557
  %52 = or i32 %42, 1, !dbg !969
  %53 = sext i32 %52 to i64, !dbg !970
  %54 = getelementptr inbounds double* %30, i64 %53, !dbg !970
  %55 = bitcast double* %54 to i64*, !dbg !970
  %56 = load i64* %55, align 8, !dbg !970, !tbaa !557
  %57 = or i32 %48, 1, !dbg !971
  %58 = sext i32 %57 to i64, !dbg !972
  %59 = getelementptr inbounds double* %29, i64 %58, !dbg !972
  %60 = bitcast double* %59 to i64*, !dbg !973
  store i64 %56, i64* %60, align 8, !dbg !973, !tbaa !557
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !959
  %indvars.iv.next7 = add i64 %indvars.iv6, %38, !dbg !959
  %exitcond = icmp eq i32 %47, %39, !dbg !959
  br i1 %exitcond, label %._crit_edge, label %40, !dbg !959

._crit_edge:                                      ; preds = %40, %28
  ret void, !dbg !974
}
