define void @InpMtx_vector(%struct._InpMtx* %inpmtx, i32 %id, i32* %pnent, i32** %pindices) #0 {
entry:
  %cmp = icmp eq %struct._InpMtx* %inpmtx, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([56 x i8]* @.str14, i64 0, i64 0), %struct._InpMtx* null, i32 %id, i32* %pnent, i32** %pindices) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end:                                           ; preds = %entry
  %storageMode = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 1
  %1 = load i32* %storageMode, align 4, !tbaa !3
  %cmp1 = icmp eq i32 %1, 3
  br i1 %cmp1, label %if.end4, label %if.then2

if.then2:                                         ; preds = %if.end
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([56 x i8]* @.str14, i64 0, i64 0), %struct._InpMtx* %inpmtx, i32 %id, i32* %pnent, i32** %pindices) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end4:                                          ; preds = %if.end
  %cmp5 = icmp eq i32* %pnent, null
  %cmp6 = icmp eq i32** %pindices, null
  %or.cond = or i1 %cmp5, %cmp6
  br i1 %or.cond, label %if.then7, label %if.end9

if.then7:                                         ; preds = %if.end4
  %3 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([83 x i8]* @.str15, i64 0, i64 0), %struct._InpMtx* %inpmtx, i32 %id, i32* %pnent, i32** %pindices, i32* %pnent, i32** %pindices) #4
  tail call void @exit(i32 -1) #5
  unreachable

if.end9:                                          ; preds = %if.end4
  %vecidsIV = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 11
  %call10 = tail call i32 @IV_findValueAscending(%struct._IV* %vecidsIV, i32 %id) #4
  %cmp11 = icmp eq i32 %call10, -1
  br i1 %cmp11, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.end9
  store i32 0, i32* %pnent, align 4, !tbaa !3
  br label %if.end17

if.else:                                          ; preds = %if.end9
  %idxprom = sext i32 %call10 to i64
  %vec = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 12, i32 3
  %4 = load i32** %vec, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i32* %4, i64 %idxprom
  %5 = load i32* %arrayidx, align 4, !tbaa !3
  store i32 %5, i32* %pnent, align 4, !tbaa !3
  %vec14 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 13, i32 3
  %6 = load i32** %vec14, align 8, !tbaa !0
  %arrayidx15 = getelementptr inbounds i32* %6, i64 %idxprom
  %7 = load i32* %arrayidx15, align 4, !tbaa !3
  %vec16 = getelementptr inbounds %struct._InpMtx* %inpmtx, i64 0, i32 7, i32 3
  %8 = load i32** %vec16, align 8, !tbaa !0
  %idx.ext = sext i32 %7 to i64
  %add.ptr = getelementptr inbounds i32* %8, i64 %idx.ext
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then12
  %storemerge = phi i32* [ %add.ptr, %if.else ], [ null, %if.then12 ]
  store i32* %storemerge, i32** %pindices, align 8, !tbaa !0
  ret void
}
