define i32 @readHB_newaux_double(i8* %filename, i8 signext %AuxType, double** nocapture %b) #0 {
entry:
  %Nrhs = alloca i32, align 4
  %M = alloca i32, align 4
  %N = alloca i32, align 4
  %nonzeros = alloca i32, align 4
  %Type = alloca i8*, align 8
  %call = call i32 @readHB_info(i8* %filename, i32* %M, i32* %N, i32* %nonzeros, i8** %Type, i32* %Nrhs) #9
  %0 = load i32* %Nrhs, align 4, !tbaa !3
  %cmp = icmp slt i32 %0, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %2 = call i64 @fwrite(i8* getelementptr inbounds ([62 x i8]* @.str39, i64 0, i64 0), i64 61, i64 1, %struct._IO_FILE* %1)
  br label %return

if.else:                                          ; preds = %entry
  %3 = load i8** %Type, align 8, !tbaa !0
  %4 = load i8* %3, align 1, !tbaa !1
  %cmp2 = icmp eq i8 %4, 67
  br i1 %cmp2, label %if.then4, label %if.else15

if.then4:                                         ; preds = %if.else
  %5 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([56 x i8]* @.str40, i64 0, i64 0), i8* %filename) #8
  %6 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %7 = call i64 @fwrite(i8* getelementptr inbounds ([61 x i8]* @.str41, i64 0, i64 0), i64 60, i64 1, %struct._IO_FILE* %6)
  %8 = load i32* %M, align 4, !tbaa !3
  %9 = load i32* %Nrhs, align 4, !tbaa !3
  %mul = mul nsw i32 %9, %8
  %conv7 = sext i32 %mul to i64
  %mul9 = shl nsw i64 %conv7, 4
  %call10 = call noalias i8* @malloc(i64 %mul9) #8
  %10 = bitcast i8* %call10 to double*
  store double* %10, double** %b, align 8, !tbaa !0
  %cmp11 = icmp eq i8* %call10, null
  br i1 %cmp11, label %if.then13, label %if.end

if.then13:                                        ; preds = %if.then4
  call fastcc void @IOHBTerminate(i8* getelementptr inbounds ([30 x i8]* @.str42, i64 0, i64 0)) #9
  unreachable

if.end:                                           ; preds = %if.then4
  %call14 = call i32 @readHB_aux_double(i8* %filename, i8 signext %AuxType, double* %10) #9
  br label %return

if.else15:                                        ; preds = %if.else
  %11 = load i32* %M, align 4, !tbaa !3
  %mul16 = mul nsw i32 %11, %0
  %conv17 = sext i32 %mul16 to i64
  %mul18 = shl nsw i64 %conv17, 3
  %call19 = call noalias i8* @malloc(i64 %mul18) #8
  %12 = bitcast i8* %call19 to double*
  store double* %12, double** %b, align 8, !tbaa !0
  %cmp20 = icmp eq i8* %call19, null
  br i1 %cmp20, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.else15
  call fastcc void @IOHBTerminate(i8* getelementptr inbounds ([30 x i8]* @.str42, i64 0, i64 0)) #9
  unreachable

if.end23:                                         ; preds = %if.else15
  %call24 = call i32 @readHB_aux_double(i8* %filename, i8 signext %AuxType, double* %12) #9
  br label %return

return:                                           ; preds = %if.end23, %if.end, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ %call14, %if.end ], [ %call24, %if.end23 ]
  ret i32 %retval.0
}
