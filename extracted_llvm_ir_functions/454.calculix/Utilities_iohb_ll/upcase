define internal fastcc void @upcase(i8* nocapture %S) #0 {
  tail call void @llvm.dbg.value(metadata i8* %S, i64 0, metadata !547, metadata !563), !dbg !800
  %1 = tail call i64 @strlen(i8* %S) #8, !dbg !801
  %2 = trunc i64 %1 to i32, !dbg !801
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !549, metadata !563), !dbg !802
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !548, metadata !563), !dbg !803
  %3 = icmp sgt i32 %2, 0, !dbg !804
  br i1 %3, label %.lr.ph, label %._crit_edge, !dbg !807

.lr.ph:                                           ; preds = %0
  %4 = add i32 %2, -1, !dbg !807
  br label %5, !dbg !807

; <label>:5                                       ; preds = %5, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %5 ]
  %6 = getelementptr inbounds i8* %S, i64 %indvars.iv, !dbg !808
  %7 = load i8* %6, align 1, !dbg !808, !tbaa !615
  %8 = sext i8 %7 to i32, !dbg !808
  tail call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !555, metadata !563) #2, !dbg !809
  %9 = tail call i32 @__toupper(i32 %8) #8, !dbg !811
  %10 = trunc i32 %9 to i8, !dbg !812
  store i8 %10, i8* %6, align 1, !dbg !813, !tbaa !615
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !807
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !807
  %exitcond = icmp eq i32 %lftr.wideiv, %4, !dbg !807
  br i1 %exitcond, label %._crit_edge, label %5, !dbg !807

._crit_edge:                                      ; preds = %5, %0
  ret void, !dbg !814
}
