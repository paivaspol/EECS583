define i32 @Graph_writeToFile(%struct._Graph* %graph, i8* %fn) #0 {
entry:
  %cmp = icmp eq %struct._Graph* %graph, null
  %cmp1 = icmp eq i8* %fn, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([54 x i8]* @.str25, i64 0, i64 0), %struct._Graph* %graph, i8* %fn) #6
  br label %return

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct._Graph* %graph, i64 0, i32 0
  %1 = load i32* %type, align 4, !tbaa !3
  %2 = icmp ugt i32 %1, 3
  br i1 %2, label %if.then6, label %if.end9

if.then6:                                         ; preds = %if.end
  %3 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([57 x i8]* @.str26, i64 0, i64 0), %struct._Graph* %graph, i8* %fn, i32 %1) #6
  br label %return

if.end9:                                          ; preds = %if.end
  %call10 = tail call i64 @strlen(i8* %fn) #7
  %conv = trunc i64 %call10 to i32
  %cmp13 = icmp sgt i32 %conv, 7
  br i1 %cmp13, label %if.then15, label %if.else57

if.then15:                                        ; preds = %if.end9
  %sub = shl i64 %call10, 32
  %sext = add i64 %sub, -30064771072
  %idxprom = ashr exact i64 %sext, 32
  %arrayidx = getelementptr inbounds i8* %fn, i64 %idxprom
  %call16 = tail call i32 @strcmp(i8* %arrayidx, i8* getelementptr inbounds ([8 x i8]* @.str79, i64 0, i64 0)) #7
  %cmp17 = icmp eq i32 %call16, 0
  br i1 %cmp17, label %if.then19, label %if.else28

if.then19:                                        ; preds = %if.then15
  %call20 = tail call %struct._IO_FILE* @fopen(i8* %fn, i8* getelementptr inbounds ([3 x i8]* @.str27, i64 0, i64 0)) #6
  %cmp21 = icmp eq %struct._IO_FILE* %call20, null
  br i1 %cmp21, label %if.then23, label %if.else

if.then23:                                        ; preds = %if.then19
  %4 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call24 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([60 x i8]* @.str28, i64 0, i64 0), %struct._Graph* %graph, i8* %fn, i8* %fn) #6
  br label %return

if.else:                                          ; preds = %if.then19
  %call25 = tail call i32 @Graph_writeToBinaryFile(%struct._Graph* %graph, %struct._IO_FILE* %call20) #8
  %call26 = tail call i32 @fclose(%struct._IO_FILE* %call20) #6
  br label %return

if.else28:                                        ; preds = %if.then15
  %call32 = tail call i32 @strcmp(i8* %arrayidx, i8* getelementptr inbounds ([8 x i8]* @.str78, i64 0, i64 0)) #7
  %cmp33 = icmp eq i32 %call32, 0
  br i1 %cmp33, label %if.then35, label %if.else45

if.then35:                                        ; preds = %if.else28
  %call36 = tail call %struct._IO_FILE* @fopen(i8* %fn, i8* getelementptr inbounds ([2 x i8]* @.str29, i64 0, i64 0)) #6
  %cmp37 = icmp eq %struct._IO_FILE* %call36, null
  br i1 %cmp37, label %if.then39, label %if.else41

if.then39:                                        ; preds = %if.then35
  %5 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call40 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([60 x i8]* @.str28, i64 0, i64 0), %struct._Graph* %graph, i8* %fn, i8* %fn) #6
  br label %return

if.else41:                                        ; preds = %if.then35
  %call42 = tail call i32 @Graph_writeToFormattedFile(%struct._Graph* %graph, %struct._IO_FILE* %call36) #8
  %call43 = tail call i32 @fclose(%struct._IO_FILE* %call36) #6
  br label %return

if.else45:                                        ; preds = %if.else28
  %call46 = tail call %struct._IO_FILE* @fopen(i8* %fn, i8* getelementptr inbounds ([2 x i8]* @.str30, i64 0, i64 0)) #6
  %cmp47 = icmp eq %struct._IO_FILE* %call46, null
  br i1 %cmp47, label %if.then49, label %if.else51

if.then49:                                        ; preds = %if.else45
  %6 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call50 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([60 x i8]* @.str28, i64 0, i64 0), %struct._Graph* %graph, i8* %fn, i8* %fn) #6
  br label %return

if.else51:                                        ; preds = %if.else45
  %call52 = tail call i32 @Graph_writeForHumanEye(%struct._Graph* %graph, %struct._IO_FILE* %call46) #8
  %call53 = tail call i32 @fclose(%struct._IO_FILE* %call46) #6
  br label %return

if.else57:                                        ; preds = %if.end9
  %call58 = tail call %struct._IO_FILE* @fopen(i8* %fn, i8* getelementptr inbounds ([2 x i8]* @.str30, i64 0, i64 0)) #6
  %cmp59 = icmp eq %struct._IO_FILE* %call58, null
  br i1 %cmp59, label %if.then61, label %if.else63

if.then61:                                        ; preds = %if.else57
  %7 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call62 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([60 x i8]* @.str28, i64 0, i64 0), %struct._Graph* %graph, i8* %fn, i8* %fn) #6
  br label %return

if.else63:                                        ; preds = %if.else57
  %call64 = tail call i32 @Graph_writeForHumanEye(%struct._Graph* %graph, %struct._IO_FILE* %call58) #8
  %call65 = tail call i32 @fclose(%struct._IO_FILE* %call58) #6
  br label %return

return:                                           ; preds = %if.else41, %if.then39, %if.else51, %if.then49, %if.then23, %if.else, %if.else63, %if.then61, %if.then6, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then6 ], [ 0, %if.then23 ], [ %call25, %if.else ], [ 0, %if.then39 ], [ %call42, %if.else41 ], [ 0, %if.then49 ], [ %call52, %if.else51 ], [ 0, %if.then61 ], [ %call64, %if.else63 ]
  ret i32 %retval.0
}
