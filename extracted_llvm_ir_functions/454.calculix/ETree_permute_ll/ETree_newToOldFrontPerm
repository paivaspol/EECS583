define %struct._IV* @ETree_newToOldFrontPerm(%struct._ETree* %etree) #0 {
  tail call void @llvm.dbg.value(metadata %struct._ETree* %etree, i64 0, metadata !42, metadata !93), !dbg !94
  %1 = icmp eq %struct._ETree* %etree, null, !dbg !95
  br i1 %1, label %10, label %2, !dbg !97

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 0, !dbg !98
  %4 = load i32* %3, align 4, !dbg !98, !tbaa !99
  tail call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !43, metadata !93), !dbg !105
  %5 = icmp slt i32 %4, 1, !dbg !106
  br i1 %5, label %10, label %6, !dbg !107

; <label>:6                                       ; preds = %2
  %7 = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 1, !dbg !108
  %8 = load i32* %7, align 4, !dbg !108, !tbaa !109
  tail call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !44, metadata !93), !dbg !110
  %9 = icmp slt i32 %8, 1, !dbg !111
  br i1 %9, label %10, label %13, !dbg !112

; <label>:10                                      ; preds = %6, %2, %0
  %11 = load %struct.__sFILE** @__stderrp, align 8, !dbg !113, !tbaa !115
  %12 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %11, i8* getelementptr inbounds ([57 x i8]* @.str, i64 0, i64 0), %struct._ETree* %etree) #5, !dbg !116
  tail call void @exit(i32 -1) #6, !dbg !117
  unreachable, !dbg !117

; <label>:13                                      ; preds = %6
  %14 = tail call %struct._IV* @IV_new() #5, !dbg !118
  tail call void @llvm.dbg.value(metadata %struct._IV* %14, i64 0, metadata !45, metadata !93), !dbg !119
  tail call void @IV_init(%struct._IV* %14, i32 %4, i32* null) #5, !dbg !120
  %15 = getelementptr inbounds %struct._ETree* %etree, i64 0, i32 2, !dbg !121
  %16 = load %struct._Tree** %15, align 8, !dbg !121, !tbaa !122
  %17 = tail call i32* @IV_entries(%struct._IV* %14) #5, !dbg !123
  tail call void @Tree_fillNewToOldPerm(%struct._Tree* %16, i32* %17) #5, !dbg !124
  ret %struct._IV* %14, !dbg !125
}
