define i32 @BPG_pseudoperipheralnode(%struct._BPG* %bpg, i32 %seed) #0 {
  tail call void @llvm.dbg.value(metadata %struct._BPG* %bpg, i64 0, metadata !56, metadata !92), !dbg !93
  tail call void @llvm.dbg.value(metadata i32 %seed, i64 0, metadata !57, metadata !92), !dbg !94
  %1 = icmp eq %struct._BPG* %bpg, null, !dbg !95
  br i1 %1, label %2, label %5, !dbg !97

; <label>:2                                       ; preds = %0
  %3 = load %struct.__sFILE** @__stderrp, align 8, !dbg !98, !tbaa !100
  %4 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %3, i8* getelementptr inbounds ([61 x i8]* @.str, i64 0, i64 0), %struct._BPG* null, i32 %seed) #5, !dbg !104
  tail call void @exit(i32 -1) #6, !dbg !105
  unreachable, !dbg !105

; <label>:5                                       ; preds = %0
  %6 = icmp slt i32 %seed, 0, !dbg !106
  %7 = sub nsw i32 0, %seed, !dbg !108
  tail call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !57, metadata !92), !dbg !94
  %.seed = select i1 %6, i32 %7, i32 %seed, !dbg !110
  %8 = getelementptr inbounds %struct._BPG* %bpg, i64 0, i32 0, !dbg !111
  %9 = load i32* %8, align 4, !dbg !111, !tbaa !112
  %10 = getelementptr inbounds %struct._BPG* %bpg, i64 0, i32 1, !dbg !115
  %11 = load i32* %10, align 4, !dbg !115, !tbaa !116
  %12 = add nsw i32 %11, %9, !dbg !117
  %13 = srem i32 %.seed, %12, !dbg !118
  tail call void @llvm.dbg.value(metadata i32 %13, i64 0, metadata !57, metadata !92), !dbg !94
  %14 = tail call i32* @IVinit(i32 %12, i32 -1) #5, !dbg !119
  tail call void @llvm.dbg.value(metadata i32* %14, i64 0, metadata !65, metadata !92), !dbg !120
  %15 = load i32* %8, align 4, !dbg !121, !tbaa !112
  %16 = load i32* %10, align 4, !dbg !122, !tbaa !116
  %17 = add nsw i32 %16, %15, !dbg !123
  %18 = tail call i32* @IVinit(i32 %17, i32 -1) #5, !dbg !124
  tail call void @llvm.dbg.value(metadata i32* %18, i64 0, metadata !64, metadata !92), !dbg !125
  %19 = load i32* %8, align 4, !dbg !126, !tbaa !112
  %20 = load i32* %10, align 4, !dbg !127, !tbaa !116
  %21 = add nsw i32 %20, %19, !dbg !128
  %22 = tail call i32* @IVinit(i32 %21, i32 -1) #5, !dbg !129
  tail call void @llvm.dbg.value(metadata i32* %22, i64 0, metadata !66, metadata !92), !dbg !130
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !60, metadata !92), !dbg !131
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !63, metadata !92), !dbg !132
  %23 = tail call i32 @BPG_levelStructure(%struct._BPG* %bpg, i32 %13, i32* %14, i32* %18, i32* %22, i32 1) #7, !dbg !133
  tail call void @llvm.dbg.value(metadata i32 %23, i64 0, metadata !58, metadata !92), !dbg !134
  %.pn12 = sext i32 %23 to i64, !dbg !135
  %.pn.in.in3 = getelementptr inbounds i32* %14, i64 %.pn12, !dbg !135
  %.pn.in4 = load i32* %.pn.in.in3, align 4, !dbg !135
  %.pn5 = sext i32 %.pn.in4 to i64, !dbg !136
  %rad.0.in6 = getelementptr inbounds i32* %18, i64 %.pn5, !dbg !136
  %rad.07 = load i32* %rad.0.in6, align 4, !dbg !136
  %24 = icmp sgt i32 %rad.07, 0, !dbg !137
  br i1 %24, label %.lr.ph, label %._crit_edge, !dbg !138

.lr.ph:                                           ; preds = %5, %.lr.ph
  %rad.010 = phi i32 [ %rad.0, %.lr.ph ], [ %rad.07, %5 ]
  %.pn.in9 = phi i32 [ %.pn.in, %.lr.ph ], [ %.pn.in4, %5 ]
  %tag.08 = phi i32 [ %25, %.lr.ph ], [ 1, %5 ]
  tail call void @llvm.dbg.value(metadata i32 %rad.0, i64 0, metadata !60, metadata !92), !dbg !131
  tail call void @llvm.dbg.value(metadata i32 %.pn.in, i64 0, metadata !62, metadata !92), !dbg !139
  %25 = add nuw nsw i32 %tag.08, 1, !dbg !140
  tail call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !63, metadata !92), !dbg !132
  %26 = tail call i32 @BPG_levelStructure(%struct._BPG* %bpg, i32 %.pn.in9, i32* %14, i32* %18, i32* %22, i32 %25) #7, !dbg !142
  tail call void @llvm.dbg.value(metadata i32 %26, i64 0, metadata !58, metadata !92), !dbg !134
  %.pn1 = sext i32 %26 to i64, !dbg !135
  %.pn.in.in = getelementptr inbounds i32* %14, i64 %.pn1, !dbg !135
  %.pn.in = load i32* %.pn.in.in, align 4, !dbg !135
  %.pn = sext i32 %.pn.in to i64, !dbg !136
  %rad.0.in = getelementptr inbounds i32* %18, i64 %.pn, !dbg !136
  %rad.0 = load i32* %rad.0.in, align 4, !dbg !136
  %27 = icmp slt i32 %rad.010, %rad.0, !dbg !137
  br i1 %27, label %.lr.ph, label %._crit_edge, !dbg !138

._crit_edge:                                      ; preds = %.lr.ph, %5
  %root.0.lcssa = phi i32 [ undef, %5 ], [ %.pn.in9, %.lr.ph ]
  tail call void @IVfree(i32* %14) #5, !dbg !143
  tail call void @IVfree(i32* %18) #5, !dbg !144
  tail call void @IVfree(i32* %22) #5, !dbg !145
  ret i32 %root.0.lcssa, !dbg !146
}
