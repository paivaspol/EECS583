define void @lextree_ci_active(%struct.lextree_t* nocapture %lextree, i32* nocapture %ci_active) #0 {
entry:
  %active = getelementptr inbounds %struct.lextree_t* %lextree, i64 0, i32 5
  %0 = load %struct.lextree_node_t*** %active, align 8, !tbaa !0
  %n_active = getelementptr inbounds %struct.lextree_t* %lextree, i64 0, i32 7
  %1 = load i32* %n_active, align 4, !tbaa !3
  %cmp9 = icmp sgt i32 %1, 0
  br i1 %cmp9, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds %struct.lextree_node_t** %0, i64 %indvars.iv
  %2 = load %struct.lextree_node_t** %arrayidx, align 8, !tbaa !0
  %ci = getelementptr inbounds %struct.lextree_node_t* %2, i64 0, i32 6
  %3 = load i8* %ci, align 1, !tbaa !1
  %conv = sext i8 %3 to i32
  %and = and i32 %conv, 31
  %shl = shl i32 1, %and
  %shr = ashr i32 %conv, 5
  %idxprom3 = sext i32 %shr to i64
  %arrayidx4 = getelementptr inbounds i32* %ci_active, i64 %idxprom3
  %4 = load i32* %arrayidx4, align 4, !tbaa !3
  %or = or i32 %shl, %4
  store i32 %or, i32* %arrayidx4, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %5 = load i32* %n_active, align 4, !tbaa !3
  %6 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %6, %5
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  ret void
}
