define void @lextree_ssid_active(%struct.lextree_t* nocapture %lextree, i32* nocapture %ssid, i32* nocapture %comssid) #0 {
entry:
  %active = getelementptr inbounds %struct.lextree_t* %lextree, i64 0, i32 5
  %0 = load %struct.lextree_node_t*** %active, align 8, !tbaa !0
  %n_active = getelementptr inbounds %struct.lextree_t* %lextree, i64 0, i32 7
  %1 = load i32* %n_active, align 4, !tbaa !3
  %cmp11 = icmp sgt i32 %1, 0
  br i1 %cmp11, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds %struct.lextree_node_t** %0, i64 %indvars.iv
  %2 = load %struct.lextree_node_t** %arrayidx, align 8, !tbaa !0
  %composite = getelementptr inbounds %struct.lextree_node_t* %2, i64 0, i32 7
  %3 = load i8* %composite, align 1, !tbaa !1
  %tobool = icmp eq i8 %3, 0
  %ssid1 = getelementptr inbounds %struct.lextree_node_t* %2, i64 0, i32 4
  %4 = load i32* %ssid1, align 4, !tbaa !3
  %idxprom2 = sext i32 %4 to i64
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %for.body
  %arrayidx3 = getelementptr inbounds i32* %comssid, i64 %idxprom2
  store i32 1, i32* %arrayidx3, align 4, !tbaa !3
  br label %for.inc

if.else:                                          ; preds = %for.body
  %arrayidx6 = getelementptr inbounds i32* %ssid, i64 %idxprom2
  store i32 1, i32* %arrayidx6, align 4, !tbaa !3
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  %indvars.iv.next = add i64 %indvars.iv, 1
  %5 = load i32* %n_active, align 4, !tbaa !3
  %6 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %6, %5
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %entry
  ret void
}
