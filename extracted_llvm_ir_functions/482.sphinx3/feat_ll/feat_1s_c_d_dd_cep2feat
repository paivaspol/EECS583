define void @feat_1s_c_d_dd_cep2feat(%struct.feat_s* nocapture %fcb, float** nocapture %mfc, float** nocapture %feat) #0 {
entry:
  %0 = load float** %feat, align 8, !tbaa !0
  %1 = bitcast float* %0 to i8*
  %2 = load float** %mfc, align 8, !tbaa !0
  %3 = bitcast float* %2 to i8*
  %cepsize = getelementptr inbounds %struct.feat_s* %fcb, i64 0, i32 1
  %4 = load i32* %cepsize, align 4, !tbaa !3
  %conv = sext i32 %4 to i64
  %mul = shl nsw i64 %conv, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %3, i64 %mul, i32 4, i1 false)
  %5 = load float** %feat, align 8, !tbaa !0
  %6 = load i32* %cepsize, align 4, !tbaa !3
  %idx.ext = sext i32 %6 to i64
  %arrayidx4 = getelementptr inbounds float** %mfc, i64 2
  %7 = load float** %arrayidx4, align 8, !tbaa !0
  %arrayidx5 = getelementptr inbounds float** %mfc, i64 -2
  %8 = load float** %arrayidx5, align 8, !tbaa !0
  %cmp68 = icmp sgt i32 %6, 0
  br i1 %cmp68, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv70 = phi i64 [ %indvars.iv.next71, %for.body ], [ 0, %entry ]
  %arrayidx8 = getelementptr inbounds float* %7, i64 %indvars.iv70
  %9 = load float* %arrayidx8, align 4, !tbaa !5
  %arrayidx10 = getelementptr inbounds float* %8, i64 %indvars.iv70
  %10 = load float* %arrayidx10, align 4, !tbaa !5
  %sub = fsub float %9, %10
  %add.ptr.sum65 = add i64 %indvars.iv70, %idx.ext
  %arrayidx12 = getelementptr inbounds float* %5, i64 %add.ptr.sum65
  store float %sub, float* %arrayidx12, align 4, !tbaa !5
  %indvars.iv.next71 = add i64 %indvars.iv70, 1
  %11 = trunc i64 %indvars.iv.next71 to i32
  %cmp = icmp slt i32 %11, %6
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  %add.ptr.sum = shl nsw i64 %idx.ext, 1
  %arrayidx16 = getelementptr inbounds float** %mfc, i64 3
  %12 = load float** %arrayidx16, align 8, !tbaa !0
  %arrayidx17 = getelementptr inbounds float** %mfc, i64 -1
  %13 = load float** %arrayidx17, align 8, !tbaa !0
  %arrayidx18 = getelementptr inbounds float** %mfc, i64 1
  %14 = load float** %arrayidx18, align 8, !tbaa !0
  %arrayidx19 = getelementptr inbounds float** %mfc, i64 -3
  %15 = load float** %arrayidx19, align 8, !tbaa !0
  br i1 %cmp68, label %for.body24, label %for.end40

for.body24:                                       ; preds = %for.end, %for.body24
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body24 ], [ 0, %for.end ]
  %arrayidx26 = getelementptr inbounds float* %12, i64 %indvars.iv
  %16 = load float* %arrayidx26, align 4, !tbaa !5
  %arrayidx28 = getelementptr inbounds float* %13, i64 %indvars.iv
  %17 = load float* %arrayidx28, align 4, !tbaa !5
  %sub29 = fsub float %16, %17
  %arrayidx31 = getelementptr inbounds float* %14, i64 %indvars.iv
  %18 = load float* %arrayidx31, align 4, !tbaa !5
  %arrayidx33 = getelementptr inbounds float* %15, i64 %indvars.iv
  %19 = load float* %arrayidx33, align 4, !tbaa !5
  %sub34 = fsub float %18, %19
  %sub35 = fsub float %sub29, %sub34
  %add.ptr15.sum = add i64 %add.ptr.sum, %indvars.iv
  %arrayidx37 = getelementptr inbounds float* %5, i64 %add.ptr15.sum
  store float %sub35, float* %arrayidx37, align 4, !tbaa !5
  %indvars.iv.next = add i64 %indvars.iv, 1
  %20 = trunc i64 %indvars.iv.next to i32
  %cmp22 = icmp slt i32 %20, %6
  br i1 %cmp22, label %for.body24, label %for.end40

for.end40:                                        ; preds = %for.body24, %for.end
  ret void
}
