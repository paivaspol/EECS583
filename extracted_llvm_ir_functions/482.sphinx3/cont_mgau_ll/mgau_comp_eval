define i32 @mgau_comp_eval(%struct.mgau_model_t* nocapture %g, i32 %s, float* nocapture %x, i32* nocapture %score) #0 {
entry:
  %veclen1 = getelementptr inbounds %struct.mgau_model_t* %g, i64 0, i32 2
  %0 = load i32* %veclen1, align 4, !tbaa !0
  %idxprom = sext i32 %s to i64
  %mgau2 = getelementptr inbounds %struct.mgau_model_t* %g, i64 0, i32 3
  %1 = load %struct.mgau_t** %mgau2, align 8, !tbaa !3
  %call = tail call double @log_to_logs3_factor() #5
  %n_comp = getelementptr inbounds %struct.mgau_t* %1, i64 %idxprom, i32 0
  %2 = load i32* %n_comp, align 4, !tbaa !0
  %cmp67 = icmp sgt i32 %2, 0
  br i1 %cmp67, label %for.body.lr.ph, label %for.end40

for.body.lr.ph:                                   ; preds = %entry
  %mean = getelementptr inbounds %struct.mgau_t* %1, i64 %idxprom, i32 1
  %3 = load float*** %mean, align 8, !tbaa !3
  %var = getelementptr inbounds %struct.mgau_t* %1, i64 %idxprom, i32 2
  %4 = load float*** %var, align 8, !tbaa !3
  %lrd = getelementptr inbounds %struct.mgau_t* %1, i64 %idxprom, i32 3
  %5 = load float** %lrd, align 8, !tbaa !3
  %cmp1064 = icmp sgt i32 %0, 0
  %distfloor = getelementptr inbounds %struct.mgau_model_t* %g, i64 0, i32 4
  %6 = load double* %distfloor, align 8, !tbaa !5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.end
  %indvars.iv71 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next72, %for.end ]
  %bs.068 = phi i32 [ -2147483648, %for.body.lr.ph ], [ %conv27.bs.0, %for.end ]
  %arrayidx4 = getelementptr inbounds float** %3, i64 %indvars.iv71
  %7 = load float** %arrayidx4, align 8, !tbaa !3
  %arrayidx6 = getelementptr inbounds float** %4, i64 %indvars.iv71
  %8 = load float** %arrayidx6, align 8, !tbaa !3
  %arrayidx8 = getelementptr inbounds float* %5, i64 %indvars.iv71
  %9 = load float* %arrayidx8, align 4, !tbaa !4
  %conv = fpext float %9 to double
  br i1 %cmp1064, label %for.body12, label %for.end

for.body12:                                       ; preds = %for.body, %for.body12
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body12 ], [ 0, %for.body ]
  %dval.065 = phi double [ %sub22, %for.body12 ], [ %conv, %for.body ]
  %arrayidx14 = getelementptr inbounds float* %x, i64 %indvars.iv
  %10 = load float* %arrayidx14, align 4, !tbaa !4
  %arrayidx16 = getelementptr inbounds float* %7, i64 %indvars.iv
  %11 = load float* %arrayidx16, align 4, !tbaa !4
  %sub = fsub float %10, %11
  %conv17 = fpext float %sub to double
  %mul = fmul double %conv17, %conv17
  %arrayidx19 = getelementptr inbounds float* %8, i64 %indvars.iv
  %12 = load float* %arrayidx19, align 4, !tbaa !4
  %conv20 = fpext float %12 to double
  %mul21 = fmul double %conv20, %mul
  %sub22 = fsub double %dval.065, %mul21
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %0
  br i1 %exitcond, label %for.end, label %for.body12

for.end:                                          ; preds = %for.body12, %for.body
  %dval.0.lcssa = phi double [ %conv, %for.body ], [ %sub22, %for.body12 ]
  %cmp23 = fcmp olt double %dval.0.lcssa, %6
  %dval.1 = select i1 %cmp23, double %6, double %dval.0.lcssa
  %mul26 = fmul double %call, %dval.1
  %conv27 = fptosi double %mul26 to i32
  %arrayidx29 = getelementptr inbounds i32* %score, i64 %indvars.iv71
  store i32 %conv27, i32* %arrayidx29, align 4, !tbaa !0
  %cmp32 = icmp sgt i32 %conv27, %bs.068
  %conv27.bs.0 = select i1 %cmp32, i32 %conv27, i32 %bs.068
  %indvars.iv.next72 = add i64 %indvars.iv71, 1
  %13 = load i32* %n_comp, align 4, !tbaa !0
  %14 = trunc i64 %indvars.iv.next72 to i32
  %cmp = icmp slt i32 %14, %13
  br i1 %cmp, label %for.body, label %for.end40

for.end40:                                        ; preds = %for.end, %entry
  %bs.0.lcssa = phi i32 [ -2147483648, %entry ], [ %conv27.bs.0, %for.end ]
  ret i32 %bs.0.lcssa
}
