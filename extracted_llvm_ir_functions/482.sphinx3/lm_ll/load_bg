define internal fastcc void @load_bg(%struct.lm_s* nocapture %lm, i16 zeroext %lw1) #2 {
entry:
  %idxprom = zext i16 %lw1 to i64
  %ug = getelementptr inbounds %struct.lm_s* %lm, i64 0, i32 9
  %0 = load %struct.ug_t** %ug, align 8, !tbaa !0
  %firstbg = getelementptr inbounds %struct.ug_t* %0, i64 %idxprom, i32 3
  %1 = load i32* %firstbg, align 4, !tbaa !3
  %add = add i64 %idxprom, 1
  %firstbg4 = getelementptr inbounds %struct.ug_t* %0, i64 %add, i32 3
  %2 = load i32* %firstbg4, align 4, !tbaa !3
  %sub = sub nsw i32 %2, %1
  %.b = load i1* @LM_IN_MEMORY, align 1
  br i1 %.b, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %idxprom5 = sext i32 %1 to i64
  %bg6 = getelementptr inbounds %struct.lm_s* %lm, i64 0, i32 10
  %3 = load %struct.bg_t** %bg6, align 8, !tbaa !0
  %arrayidx7 = getelementptr inbounds %struct.bg_t* %3, i64 %idxprom5
  %membg = getelementptr inbounds %struct.lm_s* %lm, i64 0, i32 12
  %4 = load %struct.membg_t** %membg, align 8, !tbaa !0
  %bg10 = getelementptr inbounds %struct.membg_t* %4, i64 %idxprom, i32 0
  store %struct.bg_t* %arrayidx7, %struct.bg_t** %bg10, align 8, !tbaa !0
  br label %if.end98

if.else:                                          ; preds = %entry
  %add11 = add nsw i32 %sub, 1
  %conv12 = sext i32 %add11 to i64
  %call = tail call i8* @__ckd_calloc__(i64 %conv12, i64 8, i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 919) #8
  %5 = bitcast i8* %call to %struct.bg_t*
  %membg14 = getelementptr inbounds %struct.lm_s* %lm, i64 0, i32 12
  %6 = load %struct.membg_t** %membg14, align 8, !tbaa !0
  %bg16 = getelementptr inbounds %struct.membg_t* %6, i64 %idxprom, i32 0
  store %struct.bg_t* %5, %struct.bg_t** %bg16, align 8, !tbaa !0
  %fp = getelementptr inbounds %struct.lm_s* %lm, i64 0, i32 21
  %7 = load %struct._IO_FILE** %fp, align 8, !tbaa !0
  %bgoff = getelementptr inbounds %struct.lm_s* %lm, i64 0, i32 23
  %8 = load i32* %bgoff, align 4, !tbaa !3
  %conv17 = sext i32 %8 to i64
  %conv18 = sext i32 %1 to i64
  %mul = shl nsw i64 %conv18, 3
  %add19 = add i64 %conv17, %mul
  %call20 = tail call i32 @fseek(%struct._IO_FILE* %7, i64 %add19, i32 0) #8
  %cmp = icmp slt i32 %call20, 0
  br i1 %cmp, label %if.then22, label %if.end

if.then22:                                        ; preds = %if.else
  tail call void @_E__pr_header(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i64 922, i8* getelementptr inbounds ([13 x i8]* @.str32, i64 0, i64 0)) #8
  tail call void (i8*, ...)* @_E__fatal_sys_error(i8* getelementptr inbounds ([14 x i8]* @.str33, i64 0, i64 0)) #8
  br label %if.end

if.end:                                           ; preds = %if.then22, %if.else
  %9 = load %struct._IO_FILE** %fp, align 8, !tbaa !0
  %call26 = tail call i64 @fread(i8* %call, i64 8, i64 %conv12, %struct._IO_FILE* %9) #8
  %cmp29 = icmp eq i64 %call26, %conv12
  br i1 %cmp29, label %if.end32, label %if.then31

if.then31:                                        ; preds = %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i64 926, i8* getelementptr inbounds ([12 x i8]* @.str3, i64 0, i64 0)) #8
  tail call void (i8*, ...)* @_E__die_error(i8* getelementptr inbounds ([14 x i8]* @.str35, i64 0, i64 0)) #8
  br label %if.end32

if.end32:                                         ; preds = %if.end, %if.then31
  %byteswap = getelementptr inbounds %struct.lm_s* %lm, i64 0, i32 22
  %10 = load i32* %byteswap, align 4, !tbaa !3
  %tobool33 = icmp eq i32 %10, 0
  %cmp35150 = icmp slt i32 %sub, 0
  %or.cond = or i1 %tobool33, %cmp35150
  br i1 %or.cond, label %if.end98, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end32
  %11 = add i32 %2, 1
  %12 = sub i32 %11, %1
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.body.lr.ph ]
  %wid = getelementptr inbounds %struct.bg_t* %5, i64 %indvars.iv, i32 0
  %13 = load i16* %wid, align 2, !tbaa !5
  %or = tail call i16 @llvm.bswap.i16(i16 %13)
  store i16 %or, i16* %wid, align 2, !tbaa !5
  %probid = getelementptr inbounds %struct.bg_t* %5, i64 %indvars.iv, i32 1
  %14 = load i16* %probid, align 2, !tbaa !5
  %or60 = tail call i16 @llvm.bswap.i16(i16 %14)
  store i16 %or60, i16* %probid, align 2, !tbaa !5
  %bowtid = getelementptr inbounds %struct.bg_t* %5, i64 %indvars.iv, i32 2
  %15 = load i16* %bowtid, align 2, !tbaa !5
  %or76 = tail call i16 @llvm.bswap.i16(i16 %15)
  store i16 %or76, i16* %bowtid, align 2, !tbaa !5
  %firsttg = getelementptr inbounds %struct.bg_t* %5, i64 %indvars.iv, i32 3
  %16 = load i16* %firsttg, align 2, !tbaa !5
  %or92 = tail call i16 @llvm.bswap.i16(i16 %16)
  store i16 %or92, i16* %firsttg, align 2, !tbaa !5
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %12
  br i1 %exitcond, label %if.end98, label %for.body

if.end98:                                         ; preds = %for.body, %if.end32, %if.then
  %n_bg_fill = getelementptr inbounds %struct.lm_s* %lm, i64 0, i32 28
  %17 = load i32* %n_bg_fill, align 4, !tbaa !3
  %inc99 = add nsw i32 %17, 1
  store i32 %inc99, i32* %n_bg_fill, align 4, !tbaa !3
  %n_bg_inmem = getelementptr inbounds %struct.lm_s* %lm, i64 0, i32 29
  %18 = load i32* %n_bg_inmem, align 4, !tbaa !3
  %add100 = add nsw i32 %18, %sub
  store i32 %add100, i32* %n_bg_inmem, align 4, !tbaa !3
  ret void
}
