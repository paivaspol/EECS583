define i32 @fe_compute_melcosine(%struct.melfb_t* nocapture %MEL_FB) #0 {
entry:
  %num_filters = getelementptr inbounds %struct.melfb_t* %MEL_FB, i64 0, i32 2
  %0 = load i32* %num_filters, align 4, !tbaa !0
  %conv = sitofp i32 %0 to double
  %mul = fmul double %conv, 2.000000e+00
  %num_cepstra = getelementptr inbounds %struct.melfb_t* %MEL_FB, i64 0, i32 1
  %1 = load i32* %num_cepstra, align 4, !tbaa !0
  %call = tail call i8** @fe_create_2d(i32 %1, i32 %0, i32 4) #4
  %2 = bitcast i8** %call to float**
  %mel_cosine = getelementptr inbounds %struct.melfb_t* %MEL_FB, i64 0, i32 7
  store float** %2, float*** %mel_cosine, align 8, !tbaa !3
  %cmp = icmp eq i8** %call, null
  br i1 %cmp, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %3 = load i32* %num_cepstra, align 4, !tbaa !0
  %cmp538 = icmp sgt i32 %3, 0
  br i1 %cmp538, label %for.body.lr.ph, label %for.end23

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %.pre = load i32* %num_filters, align 4, !tbaa !0
  br label %for.body

if.then:                                          ; preds = %entry
  %4 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %5 = tail call i64 @fwrite(i8* getelementptr inbounds ([58 x i8]* @.str1, i64 0, i64 0), i64 57, i64 1, %struct._IO_FILE* %4)
  tail call void @exit(i32 0) #6
  unreachable

for.body:                                         ; preds = %for.body.lr.ph, %for.inc21
  %6 = phi i32 [ %3, %for.body.lr.ph ], [ %14, %for.inc21 ]
  %7 = phi i32 [ %.pre, %for.body.lr.ph ], [ %15, %for.inc21 ]
  %indvars.iv40 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next41, %for.inc21 ]
  %8 = trunc i64 %indvars.iv40 to i32
  %conv7 = sitofp i32 %8 to double
  %mul8 = fmul double %conv7, 0x401921FB54442D18
  %div = fdiv double %mul8, %mul
  %cmp1136 = icmp sgt i32 %7, 0
  br i1 %cmp1136, label %for.body13, label %for.inc21

for.body13:                                       ; preds = %for.body, %for.body13
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body13 ], [ 0, %for.body ]
  %9 = trunc i64 %indvars.iv to i32
  %conv14 = sitofp i32 %9 to double
  %add = fadd double %conv14, 5.000000e-01
  %mul15 = fmul double %div, %add
  %call16 = tail call double @cos(double %mul15) #5
  %conv17 = fptrunc double %call16 to float
  %10 = load float*** %mel_cosine, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds float** %10, i64 %indvars.iv40
  %11 = load float** %arrayidx, align 8, !tbaa !3
  %arrayidx20 = getelementptr inbounds float* %11, i64 %indvars.iv
  store float %conv17, float* %arrayidx20, align 4, !tbaa !4
  %indvars.iv.next = add i64 %indvars.iv, 1
  %12 = load i32* %num_filters, align 4, !tbaa !0
  %13 = trunc i64 %indvars.iv.next to i32
  %cmp11 = icmp slt i32 %13, %12
  br i1 %cmp11, label %for.body13, label %for.cond9.for.inc21_crit_edge

for.cond9.for.inc21_crit_edge:                    ; preds = %for.body13
  %.pre42 = load i32* %num_cepstra, align 4, !tbaa !0
  br label %for.inc21

for.inc21:                                        ; preds = %for.cond9.for.inc21_crit_edge, %for.body
  %14 = phi i32 [ %.pre42, %for.cond9.for.inc21_crit_edge ], [ %6, %for.body ]
  %15 = phi i32 [ %12, %for.cond9.for.inc21_crit_edge ], [ %7, %for.body ]
  %indvars.iv.next41 = add i64 %indvars.iv40, 1
  %16 = trunc i64 %indvars.iv.next41 to i32
  %cmp5 = icmp slt i32 %16, %14
  br i1 %cmp5, label %for.body, label %for.end23

for.end23:                                        ; preds = %for.inc21, %for.cond.preheader
  ret i32 0
}
