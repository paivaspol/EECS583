define void @bio_verify_chksum(%struct._IO_FILE* nocapture %fp, i32 %byteswap, i32 %chksum) #0 {
entry:
  %file_chksum = alloca i32, align 4
  %0 = bitcast i32* %file_chksum to i8*
  %call = call i64 @fread(i8* %0, i64 4, i64 1, %struct._IO_FILE* %fp) #6
  %cmp = icmp eq i64 %call, 1
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @_E__pr_header(i8* getelementptr inbounds ([51 x i8]* @.str3, i64 0, i64 0), i64 289, i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0)) #6
  call void (i8*, ...)* @_E__die_error(i8* getelementptr inbounds ([22 x i8]* @.str17, i64 0, i64 0)) #6
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %tobool = icmp eq i32 %byteswap, 0
  %.pre = load i32* %file_chksum, align 4, !tbaa !3
  br i1 %tobool, label %if.end9, label %if.then1

if.then1:                                         ; preds = %if.end
  %or8 = call i32 @llvm.bswap.i32(i32 %.pre)
  store i32 %or8, i32* %file_chksum, align 4, !tbaa !3
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then1
  %1 = phi i32 [ %or8, %if.then1 ], [ %.pre, %if.end ]
  %cmp10 = icmp eq i32 %1, %chksum
  br i1 %cmp10, label %if.end12, label %if.then11

if.then11:                                        ; preds = %if.end9
  call void @_E__pr_header(i8* getelementptr inbounds ([51 x i8]* @.str3, i64 0, i64 0), i64 293, i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0)) #6
  call void (i8*, ...)* @_E__die_error(i8* getelementptr inbounds ([51 x i8]* @.str18, i64 0, i64 0), i32 %1, i32 %chksum) #6
  br label %if.end12

if.end12:                                         ; preds = %if.end9, %if.then11
  ret void
}
