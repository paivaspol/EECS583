define double @vector_vqgen(float** nocapture %data, i32 %rows, i32 %cols, i32 %vqrows, double %epsilon, i32 %maxiter, float** nocapture %mean, i32* nocapture %map) #0 {
entry:
  %t = alloca double, align 8
  %tm = alloca %struct.ptmr_t, align 8
  %0 = bitcast %struct.ptmr_t* %tm to i8*
  call void @llvm.lifetime.start(i64 56, i8* %0) #3
  %add = add nsw i32 %rows, 31
  %shr = ashr i32 %add, 5
  %conv = sext i32 %shr to i64
  %call = call i8* @__ckd_calloc__(i64 %conv, i64 4, i8* getelementptr inbounds ([54 x i8]* @.str2, i64 0, i64 0), i32 326) #5
  %1 = bitcast i8* %call to i32*
  call void @ptmr_init(%struct.ptmr_t* %tm) #5
  call void @ptmr_start(%struct.ptmr_t* %tm) #5
  call void @spec_srand(i32 1) #5
  %cmp254 = icmp sgt i32 %vqrows, 0
  %conv17 = sext i32 %cols to i64
  %mul18 = shl nsw i64 %conv17, 2
  br i1 %cmp254, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %while.end
  %indvars.iv281 = phi i64 [ %indvars.iv.next282, %while.end ], [ 0, %entry ]
  %call2 = call double @spec_rand() #5
  %mul = fmul double %call2, 0x41DFFFFFFFC00000
  %conv3 = fptosi double %mul to i32
  %rem = srem i32 %conv3, %rows
  %shr4242 = ashr i32 %rem, 5
  %idxprom243 = sext i32 %shr4242 to i64
  %arrayidx244 = getelementptr inbounds i32* %1, i64 %idxprom243
  %2 = load i32* %arrayidx244, align 4, !tbaa !3
  %and245 = and i32 %rem, 31
  %shl246 = shl i32 1, %and245
  %and5247 = and i32 %shl246, %2
  %tobool248 = icmp eq i32 %and5247, 0
  br i1 %tobool248, label %while.end, label %while.body

while.body:                                       ; preds = %for.body, %while.body
  %r.0249 = phi i32 [ %.inc, %while.body ], [ %rem, %for.body ]
  %inc = add nsw i32 %r.0249, 1
  %cmp6 = icmp sge i32 %inc, %rows
  %.inc = select i1 %cmp6, i32 0, i32 %inc
  %shr4 = ashr i32 %.inc, 5
  %idxprom = sext i32 %shr4 to i64
  %arrayidx = getelementptr inbounds i32* %1, i64 %idxprom
  %3 = load i32* %arrayidx, align 4, !tbaa !3
  %and = and i32 %.inc, 31
  %shl = shl i32 1, %and
  %and5 = and i32 %shl, %3
  %tobool = icmp eq i32 %and5, 0
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %while.body, %for.body
  %shl.lcssa = phi i32 [ %shl246, %for.body ], [ %shl, %while.body ]
  %.lcssa = phi i32 [ %2, %for.body ], [ %3, %while.body ]
  %arrayidx.lcssa = phi i32* [ %arrayidx244, %for.body ], [ %arrayidx, %while.body ]
  %r.0.lcssa = phi i32 [ %rem, %for.body ], [ %.inc, %while.body ]
  %or = or i32 %shl.lcssa, %.lcssa
  store i32 %or, i32* %arrayidx.lcssa, align 4, !tbaa !3
  %arrayidx14 = getelementptr inbounds float** %mean, i64 %indvars.iv281
  %4 = load float** %arrayidx14, align 8, !tbaa !4
  %5 = bitcast float* %4 to i8*
  %idxprom15 = sext i32 %r.0.lcssa to i64
  %arrayidx16 = getelementptr inbounds float** %data, i64 %idxprom15
  %6 = load float** %arrayidx16, align 8, !tbaa !4
  %7 = bitcast float* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %7, i64 %mul18, i32 1, i1 false)
  %indvars.iv.next282 = add i64 %indvars.iv281, 1
  %lftr.wideiv283 = trunc i64 %indvars.iv.next282 to i32
  %exitcond284 = icmp eq i32 %lftr.wideiv283, %vqrows
  br i1 %exitcond284, label %for.end, label %for.body

for.end:                                          ; preds = %entry, %while.end
  call void @ckd_free(i8* %call) #5
  %conv20 = sext i32 %vqrows to i64
  %call21 = call i8* @__ckd_calloc__(i64 %conv20, i64 4, i8* getelementptr inbounds ([54 x i8]* @.str2, i64 0, i64 0), i32 367) #5
  %8 = bitcast i8* %call21 to i32*
  %call23 = call i8* @__ckd_calloc__(i64 %conv17, i64 4, i8* getelementptr inbounds ([54 x i8]* @.str2, i64 0, i64 0), i32 370) #5
  %9 = bitcast i8* %call23 to float*
  %call24 = call i32 @vector_mean(float* %9, float** %mean, i32 %vqrows, i32 %cols) #6
  %sub46 = add nsw i32 %maxiter, -1
  %cmp27229 = icmp sgt i32 %rows, 0
  %t_cpu = getelementptr inbounds %struct.ptmr_t* %tm, i64 0, i32 1
  %cmp110238 = icmp sgt i32 %cols, 0
  %10 = add i32 %cols, -1
  %11 = zext i32 %10 to i64
  %12 = shl nuw nsw i64 %11, 2
  %13 = add i64 %12, 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc142, %for.end
  %prev_sqerr.0 = phi double [ 0.000000e+00, %for.end ], [ %sqerr.0.lcssa, %for.inc142 ]
  %it.0 = phi i32 [ 0, %for.end ], [ %inc143, %for.inc142 ]
  br i1 %cmp27229, label %for.body29, label %for.end38

for.body29:                                       ; preds = %for.cond25, %for.body29
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body29 ], [ 0, %for.cond25 ]
  %sqerr.0230 = phi double [ %add35, %for.body29 ], [ 0.000000e+00, %for.cond25 ]
  %arrayidx31 = getelementptr inbounds float** %data, i64 %indvars.iv
  %14 = load float** %arrayidx31, align 8, !tbaa !4
  %call32 = call i32 @vector_vqlabel(float* %14, float** %mean, i32 %vqrows, i32 %cols, double* %t) #6
  %arrayidx34 = getelementptr inbounds i32* %map, i64 %indvars.iv
  store i32 %call32, i32* %arrayidx34, align 4, !tbaa !3
  %15 = load double* %t, align 8, !tbaa !5
  %add35 = fadd double %sqerr.0230, %15
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %rows
  br i1 %exitcond, label %for.end38, label %for.body29

for.end38:                                        ; preds = %for.body29, %for.cond25
  %sqerr.0.lcssa = phi double [ 0.000000e+00, %for.cond25 ], [ %add35, %for.body29 ]
  call void @ptmr_stop(%struct.ptmr_t* %tm) #5
  %cmp39 = icmp eq i32 %it.0, 0
  br i1 %cmp39, label %if.then41, label %if.else

if.then41:                                        ; preds = %for.end38
  call void @_E__pr_info_header(i8* getelementptr inbounds ([54 x i8]* @.str2, i64 0, i64 0), i64 383, i8* getelementptr inbounds ([5 x i8]* @.str3, i64 0, i64 0)) #5
  %16 = load double* %t_cpu, align 8, !tbaa !5
  call void (i8*, ...)* @_E__pr_info(i8* getelementptr inbounds ([32 x i8]* @.str4, i64 0, i64 0), i32 0, double %16, double %sqerr.0.lcssa) #5
  br label %if.end43

if.else:                                          ; preds = %for.end38
  call void @_E__pr_info_header(i8* getelementptr inbounds ([54 x i8]* @.str2, i64 0, i64 0), i64 385, i8* getelementptr inbounds ([5 x i8]* @.str3, i64 0, i64 0)) #5
  %17 = load double* %t_cpu, align 8, !tbaa !5
  %sub = fsub double %prev_sqerr.0, %sqerr.0.lcssa
  %div = fdiv double %sub, %prev_sqerr.0
  call void (i8*, ...)* @_E__pr_info(i8* getelementptr inbounds ([43 x i8]* @.str5, i64 0, i64 0), i32 %it.0, double %17, double %sqerr.0.lcssa, double %div) #5
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then41
  %cmp44 = fcmp une double %sqerr.0.lcssa, 0.000000e+00
  %cmp47 = icmp slt i32 %it.0, %sub46
  %or.cond = and i1 %cmp44, %cmp47
  br i1 %or.cond, label %lor.lhs.false49, label %for.end144

lor.lhs.false49:                                  ; preds = %if.end43
  %cmp50 = icmp sgt i32 %it.0, 0
  br i1 %cmp50, label %land.lhs.true, label %if.end57

land.lhs.true:                                    ; preds = %lor.lhs.false49
  %sub52 = fsub double %prev_sqerr.0, %sqerr.0.lcssa
  %div53 = fdiv double %sub52, %prev_sqerr.0
  %cmp54 = fcmp olt double %div53, %epsilon
  br i1 %cmp54, label %for.end144, label %if.end57

if.end57:                                         ; preds = %land.lhs.true, %lor.lhs.false49
  call void @ptmr_start(%struct.ptmr_t* %tm) #5
  br i1 %cmp254, label %for.cond62.preheader, label %for.cond78.loopexit

for.cond62.preheader:                             ; preds = %if.end57, %for.end72
  %indvars.iv260 = phi i64 [ %indvars.iv.next261, %for.end72 ], [ 0, %if.end57 ]
  br i1 %cmp110238, label %for.body65.lr.ph, label %for.end72

for.body65.lr.ph:                                 ; preds = %for.cond62.preheader
  %arrayidx68 = getelementptr inbounds float** %mean, i64 %indvars.iv260
  %18 = load float** %arrayidx68, align 8, !tbaa !4
  %19 = bitcast float* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* %19, i8 0, i64 %13, i32 4, i1 false)
  br label %for.end72

for.end72:                                        ; preds = %for.body65.lr.ph, %for.cond62.preheader
  %arrayidx74 = getelementptr inbounds i32* %8, i64 %indvars.iv260
  store i32 0, i32* %arrayidx74, align 4, !tbaa !3
  %indvars.iv.next261 = add i64 %indvars.iv260, 1
  %lftr.wideiv262 = trunc i64 %indvars.iv.next261 to i32
  %exitcond263 = icmp eq i32 %lftr.wideiv262, %vqrows
  br i1 %exitcond263, label %for.cond78.loopexit, label %for.cond62.preheader

for.cond78.loopexit:                              ; preds = %for.end72, %if.end57
  br i1 %cmp27229, label %for.body81, label %for.cond96.loopexit

for.body81:                                       ; preds = %for.cond78.loopexit, %vector_accum.exit
  %indvars.iv266 = phi i64 [ %indvars.iv.next267, %vector_accum.exit ], [ 0, %for.cond78.loopexit ]
  %arrayidx83 = getelementptr inbounds i32* %map, i64 %indvars.iv266
  %20 = load i32* %arrayidx83, align 4, !tbaa !3
  %idxprom84 = sext i32 %20 to i64
  %arrayidx85 = getelementptr inbounds float** %mean, i64 %idxprom84
  %21 = load float** %arrayidx85, align 8, !tbaa !4
  %arrayidx87 = getelementptr inbounds float** %data, i64 %indvars.iv266
  %22 = load float** %arrayidx87, align 8, !tbaa !4
  br i1 %cmp110238, label %for.body.i, label %vector_accum.exit

for.body.i:                                       ; preds = %for.body81, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ 0, %for.body81 ]
  %arrayidx.i = getelementptr inbounds float* %22, i64 %indvars.iv.i
  %23 = load float* %arrayidx.i, align 4, !tbaa !0
  %arrayidx2.i = getelementptr inbounds float* %21, i64 %indvars.iv.i
  %24 = load float* %arrayidx2.i, align 4, !tbaa !0
  %add.i = fadd float %23, %24
  store float %add.i, float* %arrayidx2.i, align 4, !tbaa !0
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  %lftr.wideiv264 = trunc i64 %indvars.iv.next.i to i32
  %exitcond265 = icmp eq i32 %lftr.wideiv264, %cols
  br i1 %exitcond265, label %vector_accum.exit, label %for.body.i

vector_accum.exit:                                ; preds = %for.body.i, %for.body81
  %arrayidx91 = getelementptr inbounds i32* %8, i64 %idxprom84
  %25 = load i32* %arrayidx91, align 4, !tbaa !3
  %inc92 = add nsw i32 %25, 1
  store i32 %inc92, i32* %arrayidx91, align 4, !tbaa !3
  %indvars.iv.next267 = add i64 %indvars.iv266, 1
  %lftr.wideiv268 = trunc i64 %indvars.iv.next267 to i32
  %exitcond269 = icmp eq i32 %lftr.wideiv268, %rows
  br i1 %exitcond269, label %for.cond96.loopexit, label %for.body81

for.cond96.loopexit:                              ; preds = %vector_accum.exit, %for.cond78.loopexit
  br i1 %cmp254, label %for.body99, label %for.inc142

for.body99:                                       ; preds = %for.cond96.loopexit, %for.inc139
  %indvars.iv274 = phi i64 [ %indvars.iv.next275, %for.inc139 ], [ 0, %for.cond96.loopexit ]
  %arrayidx101 = getelementptr inbounds i32* %8, i64 %indvars.iv274
  %26 = load i32* %arrayidx101, align 4, !tbaa !3
  %cmp102 = icmp sgt i32 %26, 1
  br i1 %cmp102, label %if.then104, label %if.else127

if.then104:                                       ; preds = %for.body99
  %conv107 = sitofp i32 %26 to double
  %div108 = fdiv double 1.000000e+00, %conv107
  store double %div108, double* %t, align 8, !tbaa !5
  br i1 %cmp110238, label %for.body112.lr.ph, label %for.inc139

for.body112.lr.ph:                                ; preds = %if.then104
  %arrayidx115 = getelementptr inbounds float** %mean, i64 %indvars.iv274
  %27 = load float** %arrayidx115, align 8, !tbaa !4
  br label %for.body112

for.body112:                                      ; preds = %for.body112, %for.body112.lr.ph
  %indvars.iv270 = phi i64 [ 0, %for.body112.lr.ph ], [ %indvars.iv.next271, %for.body112 ]
  %arrayidx116 = getelementptr inbounds float* %27, i64 %indvars.iv270
  %28 = load float* %arrayidx116, align 4, !tbaa !0
  %conv117 = fpext float %28 to double
  %mul118 = fmul double %conv117, %div108
  %conv119 = fptrunc double %mul118 to float
  store float %conv119, float* %arrayidx116, align 4, !tbaa !0
  %indvars.iv.next271 = add i64 %indvars.iv270, 1
  %lftr.wideiv272 = trunc i64 %indvars.iv.next271 to i32
  %exitcond273 = icmp eq i32 %lftr.wideiv272, %cols
  br i1 %exitcond273, label %for.inc139, label %for.body112

if.else127:                                       ; preds = %for.body99
  %cmp130 = icmp eq i32 %26, 0
  br i1 %cmp130, label %if.then132, label %for.inc139

if.then132:                                       ; preds = %if.else127
  call void @_E__pr_header(i8* getelementptr inbounds ([54 x i8]* @.str2, i64 0, i64 0), i64 413, i8* getelementptr inbounds ([6 x i8]* @.str6, i64 0, i64 0)) #5
  %29 = trunc i64 %indvars.iv274 to i32
  call void (i8*, ...)* @_E__pr_warn(i8* getelementptr inbounds ([28 x i8]* @.str7, i64 0, i64 0), i32 %it.0, i32 %29) #5
  %arrayidx134 = getelementptr inbounds float** %mean, i64 %indvars.iv274
  %30 = load float** %arrayidx134, align 8, !tbaa !4
  %31 = bitcast float* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %call23, i64 %mul18, i32 4, i1 false)
  br label %for.inc139

for.inc139:                                       ; preds = %if.then104, %for.body112, %if.then132, %if.else127
  %indvars.iv.next275 = add i64 %indvars.iv274, 1
  %lftr.wideiv276 = trunc i64 %indvars.iv.next275 to i32
  %exitcond277 = icmp eq i32 %lftr.wideiv276, %vqrows
  br i1 %exitcond277, label %for.inc142, label %for.body99

for.inc142:                                       ; preds = %for.inc139, %for.cond96.loopexit
  %inc143 = add nsw i32 %it.0, 1
  br label %for.cond25

for.end144:                                       ; preds = %if.end43, %land.lhs.true
  call void @ckd_free(i8* %call21) #5
  call void @ckd_free(i8* %call23) #5
  call void @llvm.lifetime.end(i64 56, i8* %0) #3
  ret double %sqerr.0.lcssa
}
