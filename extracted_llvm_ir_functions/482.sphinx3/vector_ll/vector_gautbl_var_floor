define void @vector_gautbl_var_floor(%struct.vector_gautbl_t* nocapture %gautbl, double %floor) #0 {
entry:
  %n_gau = getelementptr inbounds %struct.vector_gautbl_t* %gautbl, i64 0, i32 0
  %0 = load i32* %n_gau, align 4, !tbaa !3
  %cmp5 = icmp sgt i32 %0, 0
  br i1 %cmp5, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %var = getelementptr inbounds %struct.vector_gautbl_t* %gautbl, i64 0, i32 3
  %1 = load float*** %var, align 8, !tbaa !4
  %veclen = getelementptr inbounds %struct.vector_gautbl_t* %gautbl, i64 0, i32 1
  %2 = load i32* %veclen, align 4, !tbaa !3
  %cmp11.i = icmp sgt i32 %2, 0
  %conv3.i = fptrunc double %floor to float
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %vector_floor.exit
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %vector_floor.exit ]
  %arrayidx = getelementptr inbounds float** %1, i64 %indvars.iv
  %3 = load float** %arrayidx, align 8, !tbaa !4
  br i1 %cmp11.i, label %for.body.i, label %vector_floor.exit

for.body.i:                                       ; preds = %for.body, %for.inc.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.inc.i ], [ 0, %for.body ]
  %arrayidx.i = getelementptr inbounds float* %3, i64 %indvars.iv.i
  %4 = load float* %arrayidx.i, align 4, !tbaa !0
  %conv.i = fpext float %4 to double
  %cmp1.i = fcmp olt double %conv.i, %floor
  br i1 %cmp1.i, label %if.then.i, label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  store float %conv3.i, float* %arrayidx.i, align 4, !tbaa !0
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %2
  br i1 %exitcond, label %vector_floor.exit, label %for.body.i

vector_floor.exit:                                ; preds = %for.inc.i, %for.body
  %indvars.iv.next = add i64 %indvars.iv, 1
  %5 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %5, %0
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %vector_floor.exit, %entry
  ret void
}
