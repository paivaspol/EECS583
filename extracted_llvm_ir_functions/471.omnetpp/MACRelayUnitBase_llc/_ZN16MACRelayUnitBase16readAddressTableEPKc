define void @_ZN16MACRelayUnitBase16readAddressTableEPKc(%class.MACRelayUnitBase* %this, i8* %fileName) #0 align 2 {
  %1 = alloca %class.MACAddress, align 8
  %2 = tail call %struct.__sFILE* @"\01_fopen"(i8* %fileName, i8* getelementptr inbounds ([2 x i8]* @.str28, i64 0, i64 0)) #11
  %3 = icmp eq %struct.__sFILE* %2, null
  br i1 %3, label %4, label %.preheader

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %class.MACRelayUnitBase* %this, i64 0, i32 0
  tail call void (%class.cSimpleModule*, i8*, ...)* @_ZNK13cSimpleModule5errorEPKcz(%class.cSimpleModule* %5, i8* getelementptr inbounds ([36 x i8]* @.str29, i64 0, i64 0), i8* %fileName) #11
  br label %.preheader

.preheader:                                       ; preds = %4, %0
  %6 = call i8* @_Z8fgetlineP7__sFILE(%struct.__sFILE* %2) #11
  %7 = icmp eq i8* %6, null
  br i1 %7, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.preheader
  %8 = getelementptr inbounds %class.MACRelayUnitBase* %this, i64 0, i32 0
  %9 = getelementptr inbounds %class.MACRelayUnitBase* %this, i64 0, i32 4
  %10 = getelementptr inbounds %class.MACAddress* %1, i64 0, i32 0
  br label %11

; <label>:11                                      ; preds = %.lr.ph, %.backedge
  %12 = phi i8* [ %6, %.lr.ph ], [ %16, %.backedge ]
  %lineno.02 = phi i32 [ 0, %.lr.ph ], [ %13, %.backedge ]
  %13 = add nuw nsw i32 %lineno.02, 1
  %14 = load i8* %12, align 1, !tbaa !18
  %15 = icmp eq i8 %14, 35
  br i1 %15, label %.backedge, label %18

.backedge:                                        ; preds = %11, %28, %18
  %16 = call i8* @_Z8fgetlineP7__sFILE(%struct.__sFILE* %2) #11
  %17 = icmp eq i8* %16, null
  br i1 %17, label %._crit_edge, label %11

; <label>:18                                      ; preds = %11
  %19 = call i8* @strtok(i8* %12, i8* getelementptr inbounds ([3 x i8]* @.str30, i64 0, i64 0)) #11
  %20 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8]* @.str30, i64 0, i64 0)) #11
  %21 = icmp eq i8* %19, null
  br i1 %21, label %.backedge, label %22

; <label>:22                                      ; preds = %18
  %23 = icmp eq i8* %20, null
  br i1 %23, label %24, label %25

; <label>:24                                      ; preds = %22
  call void (%class.cSimpleModule*, i8*, ...)* @_ZNK13cSimpleModule5errorEPKcz(%class.cSimpleModule* %8, i8* getelementptr inbounds ([43 x i8]* @.str31, i64 0, i64 0), i32 %13, i8* %fileName) #11
  br label %25

; <label>:25                                      ; preds = %22, %24
  %26 = call i32 @atoi(i8* %20) #11
  call void @_ZN10MACAddressC1EPKc(%class.MACAddress* %1, i8* %19) #11
  %27 = invoke dereferenceable(16) %"struct.MACRelayUnitBase::AddressEntry"* @_ZNSt3__13mapI10MACAddressN16MACRelayUnitBase12AddressEntryENS2_11MAC_compareENS_9allocatorINS_4pairIKS1_S3_EEEEEixERS7_(%"class.std::__1::map"* %9, %class.MACAddress* dereferenceable(16) %1) #11
          to label %28 unwind label %31

; <label>:28                                      ; preds = %25
  %29 = getelementptr inbounds %"struct.MACRelayUnitBase::AddressEntry"* %27, i64 0, i32 0
  store i32 %26, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.MACRelayUnitBase::AddressEntry"* %27, i64 0, i32 1
  store double 0.000000e+00, double* %30, align 8
  call void @_ZN15MACAddress_BaseD2Ev(%class.MACAddress_Base* %10) #11
  call void @_ZdaPv(i8* %12) #12
  br label %.backedge

; <label>:31                                      ; preds = %25
  %32 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  invoke void @_ZN15MACAddress_BaseD2Ev(%class.MACAddress_Base* %10) #11
          to label %_ZN10MACAddressD1Ev.exit unwind label %34

._crit_edge:                                      ; preds = %.backedge, %.preheader
  %33 = call i32 @fclose(%struct.__sFILE* %2) #11
  ret void

_ZN10MACAddressD1Ev.exit:                         ; preds = %31
  resume { i8*, i32 } %32

; <label>:34                                      ; preds = %31
  %35 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          catch i8* null
  %36 = extractvalue { i8*, i32 } %35, 0
  call void @__clang_call_terminate(i8* %36) #13
  unreachable
}
