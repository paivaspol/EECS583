define void @_Z9task_freeP5_Task(%struct._Task* %t) #6 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._Task* %t}, i64 0, metadata !107), !dbg !174
  %used = getelementptr inbounds %struct._Task* %t, i64 0, i32 3, !dbg !175
  store i32 0, i32* %used, align 4, !dbg !175, !tbaa !148
  %next = getelementptr inbounds %struct._Task* %t, i64 0, i32 5, !dbg !176
  %0 = load %struct._Task** %next, align 8, !dbg !176, !tbaa !138
  %cmp = icmp eq %struct._Task* %0, null, !dbg !176
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !176

land.lhs.true:                                    ; preds = %entry
  %used2 = getelementptr inbounds %struct._Task* %0, i64 0, i32 3, !dbg !176
  %1 = load i32* %used2, align 4, !dbg !176, !tbaa !148
  %tobool = icmp eq i32 %1, 0, !dbg !176
  br i1 %tobool, label %if.then, label %if.end, !dbg !176

if.then:                                          ; preds = %land.lhs.true
  %size = getelementptr inbounds %struct._Task* %0, i64 0, i32 4, !dbg !177
  %2 = load i32* %size, align 4, !dbg !177, !tbaa !148
  %size4 = getelementptr inbounds %struct._Task* %t, i64 0, i32 4, !dbg !177
  %3 = load i32* %size4, align 4, !dbg !177, !tbaa !148
  %add = add i32 %3, %2, !dbg !177
  store i32 %add, i32* %size4, align 4, !dbg !177, !tbaa !148
  %next6 = getelementptr inbounds %struct._Task* %0, i64 0, i32 5, !dbg !179
  %4 = load %struct._Task** %next6, align 8, !dbg !179, !tbaa !138
  store %struct._Task* %4, %struct._Task** %next, align 8, !dbg !179, !tbaa !138
  br label %if.end, !dbg !180

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %5 = phi %struct._Task* [ %0, %land.lhs.true ], [ null, %entry ], [ %4, %if.then ]
  %6 = load %struct._Task** getelementptr inbounds (%struct._Task* @main_task, i64 0, i32 5), align 8, !dbg !181, !tbaa !138
  tail call void @llvm.dbg.value(metadata !{%struct._Task* %6}, i64 0, metadata !108), !dbg !181
  %cmp8 = icmp eq %struct._Task* %6, %t, !dbg !182
  br i1 %cmp8, label %if.end22, label %while.cond, !dbg !182

while.cond:                                       ; preds = %if.end, %while.cond
  %p.0 = phi %struct._Task* [ %7, %while.cond ], [ %6, %if.end ]
  %next10 = getelementptr inbounds %struct._Task* %p.0, i64 0, i32 5, !dbg !183
  %7 = load %struct._Task** %next10, align 8, !dbg !183, !tbaa !138
  %cmp11 = icmp eq %struct._Task* %7, %t, !dbg !183
  br i1 %cmp11, label %while.end, label %while.cond, !dbg !183

while.end:                                        ; preds = %while.cond
  %used13 = getelementptr inbounds %struct._Task* %p.0, i64 0, i32 3, !dbg !185
  %8 = load i32* %used13, align 4, !dbg !185, !tbaa !148
  %tobool14 = icmp eq i32 %8, 0, !dbg !185
  br i1 %tobool14, label %if.then15, label %if.end22, !dbg !185

if.then15:                                        ; preds = %while.end
  %size16 = getelementptr inbounds %struct._Task* %t, i64 0, i32 4, !dbg !186
  %9 = load i32* %size16, align 4, !dbg !186, !tbaa !148
  %size17 = getelementptr inbounds %struct._Task* %p.0, i64 0, i32 4, !dbg !186
  %10 = load i32* %size17, align 4, !dbg !186, !tbaa !148
  %add18 = add i32 %10, %9, !dbg !186
  store i32 %add18, i32* %size17, align 4, !dbg !186, !tbaa !148
  store %struct._Task* %5, %struct._Task** %next10, align 8, !dbg !188, !tbaa !138
  br label %if.end22, !dbg !189

if.end22:                                         ; preds = %while.end, %if.end, %if.then15
  ret void, !dbg !190
}
