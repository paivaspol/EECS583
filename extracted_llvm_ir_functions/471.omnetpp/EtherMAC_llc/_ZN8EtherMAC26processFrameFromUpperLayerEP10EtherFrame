define void @_ZN8EtherMAC26processFrameFromUpperLayerEP10EtherFrame(%class.EtherMAC* %this, %class.EtherFrame* %frame) #0 align 2 {
  %buf = alloca [20 x i8], align 16
  %1 = getelementptr inbounds %class.EtherFrame* %frame, i64 0, i32 0, i32 1
  %2 = load i32* %1, align 4, !tbaa !51
  %.off = add i32 %2, -2001
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %5, label %3

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 0
  tail call void (%class.cSimpleModule*, i8*, ...)* @_ZNK13cSimpleModule5errorEPKcz(%class.cSimpleModule* %4, i8* getelementptr inbounds ([66 x i8]* @.str77, i64 0, i64 0), i32 %2) #10
  br label %5

; <label>:5                                       ; preds = %0, %3
  %6 = bitcast %class.EtherFrame* %frame to %class.MACAddress* (%class.EtherFrame*)***
  %7 = load %class.MACAddress* (%class.EtherFrame*)*** %6, align 8, !tbaa !25
  %8 = getelementptr inbounds %class.MACAddress* (%class.EtherFrame*)** %7, i64 19
  %9 = load %class.MACAddress* (%class.EtherFrame*)** %8, align 8
  %10 = tail call dereferenceable(16) %class.MACAddress* %9(%class.EtherFrame* %frame) #10
  %11 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 3
  %12 = tail call zeroext i1 @_ZNK10MACAddress6equalsERKS_(%class.MACAddress* %10, %class.MACAddress* dereferenceable(16) %11) #10
  br i1 %12, label %13, label %27

; <label>:13                                      ; preds = %5
  %14 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 0
  %15 = getelementptr inbounds %class.EtherFrame* %frame, i64 0, i32 0, i32 0
  %16 = bitcast %class.EtherFrame* %frame to i8* (%class.cObject*)***
  %17 = load i8* (%class.cObject*)*** %16, align 8, !tbaa !25
  %18 = getelementptr inbounds i8* (%class.cObject*)** %17, i64 3
  %19 = load i8* (%class.cObject*)** %18, align 8
  %20 = tail call i8* %19(%class.cObject* %15) #10
  %21 = load %class.MACAddress* (%class.EtherFrame*)*** %6, align 8, !tbaa !25
  %22 = getelementptr inbounds %class.MACAddress* (%class.EtherFrame*)** %21, i64 19
  %23 = load %class.MACAddress* (%class.EtherFrame*)** %22, align 8
  %24 = tail call dereferenceable(16) %class.MACAddress* %23(%class.EtherFrame* %frame) #10
  %25 = getelementptr inbounds [20 x i8]* %buf, i64 0, i64 0
  %26 = call i8* @_ZNK10MACAddress11toHexStringEPc(%class.MACAddress* %24, i8* %25) #10
  call void (%class.cSimpleModule*, i8*, ...)* @_ZNK13cSimpleModule5errorEPKcz(%class.cSimpleModule* %14, i8* getelementptr inbounds ([75 x i8]* @.str78, i64 0, i64 0), i8* %20, i8* %26) #10
  br label %27

; <label>:27                                      ; preds = %13, %5
  %28 = getelementptr inbounds %class.EtherFrame* %frame, i64 0, i32 0, i32 3
  %29 = load i64* %28, align 8, !tbaa !52
  %30 = icmp sgt i64 %29, 12144
  br i1 %30, label %31, label %34

; <label>:31                                      ; preds = %27
  %32 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 0
  %33 = sdiv i64 %29, 8
  call void (%class.cSimpleModule*, i8*, ...)* @_ZNK13cSimpleModule5errorEPKcz(%class.cSimpleModule* %32, i8* getelementptr inbounds ([77 x i8]* @.str79, i64 0, i64 0), i64 %33, i32 1518) #10
  br label %34

; <label>:34                                      ; preds = %31, %27
  %35 = load i32* %1, align 4, !tbaa !51
  %36 = icmp eq i32 %35, 2002
  br i1 %36, label %97, label %37

; <label>:37                                      ; preds = %34
  %38 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 40
  %39 = load i64* %38, align 8, !tbaa !53
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8, !tbaa !53
  %41 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 25
  %42 = call i32 @_ZNK6cQueue6lengthEv(%class.cQueue* %41) #10
  %43 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 8
  %44 = load i32* %43, align 4, !tbaa !23
  %45 = icmp slt i32 %42, %44
  br i1 %45, label %71, label %46

; <label>:46                                      ; preds = %37
  %47 = load i32* getelementptr inbounds (%class.cEnvir* @ev, i64 0, i32 1), align 4, !tbaa !40
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %60

; <label>:49                                      ; preds = %46
  call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* getelementptr inbounds ([8 x i8]* @.str80, i64 0, i64 0)) #10
  %50 = getelementptr inbounds %class.EtherFrame* %frame, i64 0, i32 0, i32 0
  %51 = bitcast %class.EtherFrame* %frame to i8* (%class.cObject*)***
  %52 = load i8* (%class.cObject*)*** %51, align 8, !tbaa !25
  %53 = getelementptr inbounds i8* (%class.cObject*)** %52, i64 7
  %54 = load i8* (%class.cObject*)** %53, align 8
  %55 = call i8* %54(%class.cObject* %50) #10
  %56 = load i8* (%class.cObject*)*** %51, align 8, !tbaa !25
  %57 = getelementptr inbounds i8* (%class.cObject*)** %56, i64 3
  %58 = load i8* (%class.cObject*)** %57, align 8
  %59 = call i8* %58(%class.cObject* %50) #10
  call void (%class.cEnvir*, i8*, ...)* @_ZN6cEnvir6printfEPKcz(%class.cEnvir* @ev, i8* getelementptr inbounds ([7 x i8]* @.str173, i64 0, i64 0), i8* %55, i8* %59) #10
  call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* getelementptr inbounds ([54 x i8]* @.str81, i64 0, i64 0)) #10
  br label %60

; <label>:60                                      ; preds = %49, %46
  %61 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 41
  %62 = load i64* %61, align 8, !tbaa !54
  %63 = add i64 %62, 1
  store i64 %63, i64* %61, align 8, !tbaa !54
  %64 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 53
  %65 = uitofp i64 %63 to double
  %66 = call zeroext i1 @_ZN10cOutVector6recordEd(%class.cOutVector* %64, double %65) #10
  %67 = bitcast %class.EtherFrame* %frame to void (%class.EtherFrame*)***
  %68 = load void (%class.EtherFrame*)*** %67, align 8, !tbaa !25
  %69 = getelementptr inbounds void (%class.EtherFrame*)** %68, i64 1
  %70 = load void (%class.EtherFrame*)** %69, align 8
  call void %70(%class.EtherFrame* %frame) #10
  br label %143

; <label>:71                                      ; preds = %37
  %72 = load %class.MACAddress* (%class.EtherFrame*)*** %6, align 8, !tbaa !25
  %73 = getelementptr inbounds %class.MACAddress* (%class.EtherFrame*)** %72, i64 21
  %74 = load %class.MACAddress* (%class.EtherFrame*)** %73, align 8
  %75 = call dereferenceable(16) %class.MACAddress* %74(%class.EtherFrame* %frame) #10
  %76 = call zeroext i1 @_ZNK10MACAddress7isEmptyEv(%class.MACAddress* %75) #10
  br i1 %76, label %77, label %82

; <label>:77                                      ; preds = %71
  %78 = bitcast %class.EtherFrame* %frame to void (%class.EtherFrame*, %class.MACAddress*)***
  %79 = load void (%class.EtherFrame*, %class.MACAddress*)*** %78, align 8, !tbaa !25
  %80 = getelementptr inbounds void (%class.EtherFrame*, %class.MACAddress*)** %79, i64 22
  %81 = load void (%class.EtherFrame*, %class.MACAddress*)** %80, align 8
  call void %81(%class.EtherFrame* %frame, %class.MACAddress* dereferenceable(16) %11) #10
  br label %82

; <label>:82                                      ; preds = %77, %71
  %83 = load i32* getelementptr inbounds (%class.cEnvir* @ev, i64 0, i32 1), align 4, !tbaa !40
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %._crit_edge

._crit_edge:                                      ; preds = %82
  %.pre = getelementptr inbounds %class.EtherFrame* %frame, i64 0, i32 0, i32 0
  br label %96

; <label>:85                                      ; preds = %82
  call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* getelementptr inbounds ([8 x i8]* @.str80, i64 0, i64 0)) #10
  %86 = getelementptr inbounds %class.EtherFrame* %frame, i64 0, i32 0, i32 0
  %87 = bitcast %class.EtherFrame* %frame to i8* (%class.cObject*)***
  %88 = load i8* (%class.cObject*)*** %87, align 8, !tbaa !25
  %89 = getelementptr inbounds i8* (%class.cObject*)** %88, i64 7
  %90 = load i8* (%class.cObject*)** %89, align 8
  %91 = call i8* %90(%class.cObject* %86) #10
  %92 = load i8* (%class.cObject*)*** %87, align 8, !tbaa !25
  %93 = getelementptr inbounds i8* (%class.cObject*)** %92, i64 3
  %94 = load i8* (%class.cObject*)** %93, align 8
  %95 = call i8* %94(%class.cObject* %86) #10
  call void (%class.cEnvir*, i8*, ...)* @_ZN6cEnvir6printfEPKcz(%class.cEnvir* @ev, i8* getelementptr inbounds ([7 x i8]* @.str173, i64 0, i64 0), i8* %91, i8* %95) #10
  call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* getelementptr inbounds ([41 x i8]* @.str82, i64 0, i64 0)) #10
  br label %96

; <label>:96                                      ; preds = %._crit_edge, %85
  %.pre-phi = phi %class.cObject* [ %.pre, %._crit_edge ], [ %86, %85 ]
  call void @_ZN6cQueue6insertEP7cObject(%class.cQueue* %41, %class.cObject* %.pre-phi) #10
  br label %114

; <label>:97                                      ; preds = %34
  %98 = load i32* getelementptr inbounds (%class.cEnvir* @ev, i64 0, i32 1), align 4, !tbaa !40
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

; <label>:100                                     ; preds = %97
  call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* getelementptr inbounds ([34 x i8]* @.str83, i64 0, i64 0)) #10
  br label %101

; <label>:101                                     ; preds = %97, %100
  %102 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 25
  %103 = bitcast %class.cQueue* %102 to i32 (%class.cQueue*)***
  %104 = load i32 (%class.cQueue*)*** %103, align 8, !tbaa !25
  %105 = getelementptr inbounds i32 (%class.cQueue*)** %104, i64 23
  %106 = load i32 (%class.cQueue*)** %105, align 8
  %107 = call i32 %106(%class.cQueue* %102) #10
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %112, label %109

; <label>:109                                     ; preds = %101
  %110 = call %class.cObject* @_ZNK6cQueue4tailEv(%class.cQueue* %102) #10
  %111 = getelementptr inbounds %class.EtherFrame* %frame, i64 0, i32 0, i32 0
  call void @_ZN6cQueue12insertBeforeEP7cObjectS1_(%class.cQueue* %102, %class.cObject* %110, %class.cObject* %111) #10
  br label %114

; <label>:112                                     ; preds = %101
  %113 = getelementptr inbounds %class.EtherFrame* %frame, i64 0, i32 0, i32 0
  call void @_ZN6cQueue6insertEP7cObject(%class.cQueue* %102, %class.cObject* %113) #10
  br label %114

; <label>:114                                     ; preds = %109, %112, %96
  %115 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 15
  %116 = load i8* %115, align 1, !tbaa !31, !range !30
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %118, label %143

; <label>:118                                     ; preds = %114
  %119 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 5
  %120 = load i8* %119, align 1, !tbaa !33, !range !30
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %126

; <label>:122                                     ; preds = %118
  %123 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 19
  %124 = load i32* %123, align 4, !tbaa !35
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %143

; <label>:126                                     ; preds = %118, %122
  %127 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 18
  %128 = load i32* %127, align 4, !tbaa !34
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %130, label %143

; <label>:130                                     ; preds = %126
  %131 = load i32* getelementptr inbounds (%class.cEnvir* @ev, i64 0, i32 1), align 4, !tbaa !40
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

; <label>:133                                     ; preds = %130
  call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* getelementptr inbounds ([75 x i8]* @.str84, i64 0, i64 0)) #10
  br label %134

; <label>:134                                     ; preds = %130, %133
  %135 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 0
  %136 = call double @_ZNK13cSimpleModule7simTimeEv(%class.cSimpleModule* %135) #10
  %137 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 12
  %138 = load double* %137, align 8, !tbaa !46
  %139 = fadd double %136, %138
  %140 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 29
  %141 = load %class.cMessage** %140, align 8, !tbaa !17
  %142 = call i32 @_ZN13cSimpleModule10scheduleAtEdP8cMessage(%class.cSimpleModule* %135, double %139, %class.cMessage* %141) #10
  store i32 2, i32* %127, align 4, !tbaa !34
  br label %143

; <label>:143                                     ; preds = %114, %60, %134, %126, %122
  ret void
}
