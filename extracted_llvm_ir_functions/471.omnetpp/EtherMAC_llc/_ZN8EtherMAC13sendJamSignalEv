define void @_ZN8EtherMAC13sendJamSignalEv(%class.EtherMAC* %this) #2 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%class.EtherMAC* %this}, i64 0, metadata !4955), !dbg !6601
  %call = tail call i8* @_ZN7cObjectnwEm(i64 168) #11, !dbg !6602
  %0 = bitcast i8* %call to %class.cMessage*, !dbg !6602
  invoke void @_ZN8cMessageC1EPKcilib(%class.cMessage* %0, i8* getelementptr inbounds ([11 x i8]* @.str124, i64 0, i64 0), i32 2000, i64 1, i32 0, i1 zeroext false) #11
          to label %invoke.cont unwind label %lpad, !dbg !6602

invoke.cont:                                      ; preds = %entry
  tail call void @llvm.dbg.value(metadata !{%class.cMessage* %0}, i64 0, metadata !4956), !dbg !6602
  tail call void @_ZN8cMessage9setLengthEl(%class.cMessage* %0, i64 32) #11, !dbg !6603
  %1 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 0, !dbg !6604
  %call2 = tail call i32 @_ZN13cSimpleModule4sendEP8cMessagePKci(%class.cSimpleModule* %1, %class.cMessage* %0, i8* getelementptr inbounds ([12 x i8]* @.str12, i64 0, i64 0), i32 -1) #11, !dbg !6604
  %call3 = tail call double @_ZNK13cSimpleModule7simTimeEv(%class.cSimpleModule* %1) #11, !dbg !6605
  %jamDuration = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 12, !dbg !6605
  %2 = load double* %jamDuration, align 8, !dbg !6605, !tbaa !5436
  %add = fadd double %call3, %2, !dbg !6605
  %endJammingMsg = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 30, !dbg !6605
  %3 = load %class.cMessage** %endJammingMsg, align 8, !dbg !6605, !tbaa !5362
  %call4 = tail call i32 @_ZN13cSimpleModule10scheduleAtEdP8cMessage(%class.cSimpleModule* %1, double %add, %class.cMessage* %3) #11, !dbg !6605
  %transmitState = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 17, !dbg !6606
  store i32 4, i32* %transmitState, align 4, !dbg !6606, !tbaa !5376
  ret void, !dbg !6607

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !6602
  tail call void @_ZdlPv(i8* %call) #12, !dbg !6602
  resume { i8*, i32 } %4, !dbg !6602
}
