define void @_ZN8EtherMAC15startAutoconfigEv(%class.EtherMAC* %this) #0 align 2 {
  %1 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 15
  store i8 1, i8* %1, align 1, !tbaa !31
  %2 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 16
  store double 0.000000e+00, double* %2, align 8, !tbaa !38
  %3 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 17
  store i8 0, i8* %3, align 1, !tbaa !39
  %4 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 0, i32 0
  %5 = tail call dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %4, i8* getelementptr inbounds ([7 x i8]* @.str14, i64 0, i64 0)) #10
  %6 = tail call double @_ZN4cPar11doubleValueEv(%class.cPar* %5) #10
  %7 = tail call dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %4, i8* getelementptr inbounds ([14 x i8]* @.str15, i64 0, i64 0)) #10
  %8 = tail call zeroext i1 @_ZN4cPar9boolValueEv(%class.cPar* %7) #10
  %9 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 9
  store double 0.000000e+00, double* %9, align 8, !tbaa !32
  %10 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 5
  %11 = zext i1 %8 to i8
  store i8 %11, i8* %10, align 1, !tbaa !33
  %.not = xor i1 %8, true
  %12 = fcmp ogt double %6, 0.000000e+00
  %or.cond = or i1 %12, %.not
  br i1 %or.cond, label %13, label %._crit_edge

._crit_edge:                                      ; preds = %0
  %.pre = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 0
  br label %44

; <label>:13                                      ; preds = %0
  %14 = load i32* getelementptr inbounds (%class.cEnvir* @ev, i64 0, i32 1), align 4, !tbaa !40
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %21

; <label>:16                                      ; preds = %13
  tail call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* getelementptr inbounds ([39 x i8]* @.str56, i64 0, i64 0)) #10
  %17 = fdiv double %6, 1.000000e+06
  tail call void (%class.cEnvir*, i8*, ...)* @_ZN6cEnvir6printfEPKcz(%class.cEnvir* @ev, i8* getelementptr inbounds ([3 x i8]* @.str172, i64 0, i64 0), double %17) #10
  tail call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* getelementptr inbounds ([5 x i8]* @.str57, i64 0, i64 0)) #10
  %18 = load i8* %10, align 1, !tbaa !33, !range !30
  %19 = icmp ne i8 %18, 0
  %20 = select i1 %19, i8* getelementptr inbounds ([7 x i8]* @.str53, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8]* @.str54, i64 0, i64 0)
  tail call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* %20) #10
  tail call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* getelementptr inbounds ([2 x i8]* @.str66, i64 0, i64 0)) #10
  br label %21

; <label>:21                                      ; preds = %13, %16
  %22 = tail call i8* @_ZN7cObjectnwEm(i64 184) #10
  %23 = bitcast i8* %22 to %class.EtherAutoconfig*
  invoke void @_ZN15EtherAutoconfigC1EPKci(%class.EtherAutoconfig* %23, i8* getelementptr inbounds ([9 x i8]* @.str58, i64 0, i64 0), i32 0) #10
          to label %24 unwind label %30

; <label>:24                                      ; preds = %21
  br i1 %8, label %34, label %25

; <label>:25                                      ; preds = %24
  %26 = bitcast i8* %22 to void (%class.EtherAutoconfig*, i1)***
  %27 = load void (%class.EtherAutoconfig*, i1)*** %26, align 8, !tbaa !25
  %28 = getelementptr inbounds void (%class.EtherAutoconfig*, i1)** %27, i64 22
  %29 = load void (%class.EtherAutoconfig*, i1)** %28, align 8
  tail call void %29(%class.EtherAutoconfig* %23, i1 zeroext true) #10
  br label %34

; <label>:30                                      ; preds = %21
  %31 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  %33 = extractvalue { i8*, i32 } %31, 1
  tail call void @_ZdlPv(i8* %22) #11
  br label %55

; <label>:34                                      ; preds = %25, %24
  br i1 %12, label %35, label %40

; <label>:35                                      ; preds = %34
  %36 = bitcast i8* %22 to void (%class.EtherAutoconfig*, double)***
  %37 = load void (%class.EtherAutoconfig*, double)*** %36, align 8, !tbaa !25
  %38 = getelementptr inbounds void (%class.EtherAutoconfig*, double)** %37, i64 20
  %39 = load void (%class.EtherAutoconfig*, double)** %38, align 8
  tail call void %39(%class.EtherAutoconfig* %23, double %6) #10
  br label %40

; <label>:40                                      ; preds = %35, %34
  %41 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 0
  %42 = bitcast i8* %22 to %class.cMessage*
  %43 = tail call i32 @_ZN13cSimpleModule4sendEP8cMessagePKci(%class.cSimpleModule* %41, %class.cMessage* %42, i8* getelementptr inbounds ([12 x i8]* @.str11, i64 0, i64 0), i32 -1) #10
  br label %44

; <label>:44                                      ; preds = %._crit_edge, %40
  %.pre-phi = phi %class.cSimpleModule* [ %.pre, %._crit_edge ], [ %41, %40 ]
  %45 = tail call double @_ZNK13cSimpleModule7simTimeEv(%class.cSimpleModule* %.pre-phi) #10
  %46 = tail call i8* @_ZN7cObjectnwEm(i64 168) #10
  %47 = bitcast i8* %46 to %class.cMessage*
  invoke void @_ZN8cMessageC1EPKcilib(%class.cMessage* %47, i8* getelementptr inbounds ([14 x i8]* @.str59, i64 0, i64 0), i32 106, i64 1, i32 0, i1 zeroext false) #10
          to label %48 unwind label %51

; <label>:48                                      ; preds = %44
  %49 = fadd double %45, 1.000000e-03
  %50 = tail call i32 @_ZN13cSimpleModule10scheduleAtEdP8cMessage(%class.cSimpleModule* %.pre-phi, double %49, %class.cMessage* %47) #10
  ret void

; <label>:51                                      ; preds = %44
  %52 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %53 = extractvalue { i8*, i32 } %52, 0
  %54 = extractvalue { i8*, i32 } %52, 1
  tail call void @_ZdlPv(i8* %46) #11
  br label %55

; <label>:55                                      ; preds = %51, %30
  %.02 = phi i8* [ %53, %51 ], [ %32, %30 ]
  %.0 = phi i32 [ %54, %51 ], [ %33, %30 ]
  %56 = insertvalue { i8*, i32 } undef, i8* %.02, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %.0, 1
  resume { i8*, i32 } %57
}
