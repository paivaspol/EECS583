define void @_ZN8EtherMAC6finishEv(%class.EtherMAC* %this) unnamed_addr #0 align 2 {
  %1 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 1
  %2 = load i8* %1, align 1, !tbaa !24, !range !30
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %86

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 0, i32 0
  %6 = tail call dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %5, i8* getelementptr inbounds ([13 x i8]* @.str149, i64 0, i64 0)) #10
  %7 = tail call zeroext i1 @_ZN4cPar9boolValueEv(%class.cPar* %6) #10
  br i1 %7, label %8, label %86

; <label>:8                                       ; preds = %4
  %9 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 0
  %10 = tail call double @_ZNK13cSimpleModule7simTimeEv(%class.cSimpleModule* %9) #10
  %11 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 34
  %12 = load double* %11, align 8, !tbaa !67
  %13 = fsub double %10, %12
  %14 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 33
  %15 = load double* %14, align 8, !tbaa !69
  %16 = fsub double %13, %15
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([15 x i8]* @.str150, i64 0, i64 0), double %10) #10
  %17 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 9
  %18 = load double* %17, align 8, !tbaa !32
  %19 = fdiv double %18, 1.000000e+06
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([12 x i8]* @.str151, i64 0, i64 0), double %19) #10
  %20 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 5
  %21 = load i8* %20, align 1, !tbaa !33, !range !30
  %22 = icmp ne i8 %21, 0
  %23 = uitofp i1 %22 to double
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([12 x i8]* @.str152, i64 0, i64 0), double %23) #10
  %24 = fmul double %16, 1.000000e+02
  %25 = fdiv double %24, %10
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([20 x i8]* @.str153, i64 0, i64 0), double %25) #10
  %26 = load double* %11, align 8, !tbaa !67
  %27 = fmul double %26, 1.000000e+02
  %28 = fdiv double %27, %10
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([27 x i8]* @.str154, i64 0, i64 0), double %28) #10
  %29 = load double* %14, align 8, !tbaa !69
  %30 = fmul double %29, 1.000000e+02
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([25 x i8]* @.str155, i64 0, i64 0), double %30) #10
  %31 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 36
  %32 = load i64* %31, align 8, !tbaa !64
  %33 = uitofp i64 %32 to double
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([12 x i8]* @.str156, i64 0, i64 0), double %33) #10
  %34 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 37
  %35 = load i64* %34, align 8, !tbaa !74
  %36 = uitofp i64 %35 to double
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([12 x i8]* @.str157, i64 0, i64 0), double %36) #10
  %37 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 38
  %38 = load i64* %37, align 8, !tbaa !65
  %39 = uitofp i64 %38 to double
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([11 x i8]* @.str158, i64 0, i64 0), double %39) #10
  %40 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 39
  %41 = load i64* %40, align 8, !tbaa !75
  %42 = uitofp i64 %41 to double
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([11 x i8]* @.str159, i64 0, i64 0), double %42) #10
  %43 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 40
  %44 = load i64* %43, align 8, !tbaa !53
  %45 = uitofp i64 %44 to double
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([25 x i8]* @.str160, i64 0, i64 0), double %45) #10
  %46 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 41
  %47 = load i64* %46, align 8, !tbaa !54
  %48 = uitofp i64 %47 to double
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([46 x i8]* @.str161, i64 0, i64 0), double %48) #10
  %49 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 42
  %50 = load i64* %49, align 8, !tbaa !73
  %51 = uitofp i64 %50 to double
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([27 x i8]* @.str162, i64 0, i64 0), double %51) #10
  %52 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 43
  %53 = load i64* %52, align 8, !tbaa !76
  %54 = uitofp i64 %53 to double
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([28 x i8]* @.str163, i64 0, i64 0), double %54) #10
  %55 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 44
  %56 = load i64* %55, align 8, !tbaa !77
  %57 = uitofp i64 %56 to double
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([23 x i8]* @.str164, i64 0, i64 0), double %57) #10
  %58 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 46
  %59 = load i64* %58, align 8, !tbaa !66
  %60 = uitofp i64 %59 to double
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([18 x i8]* @.str165, i64 0, i64 0), double %60) #10
  %61 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 45
  %62 = load i64* %61, align 8, !tbaa !70
  %63 = uitofp i64 %62 to double
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([18 x i8]* @.str166, i64 0, i64 0), double %63) #10
  %64 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 47
  %65 = load i64* %64, align 8, !tbaa !59
  %66 = uitofp i64 %65 to double
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([11 x i8]* @.str47, i64 0, i64 0), double %66) #10
  %67 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 48
  %68 = load i64* %67, align 8, !tbaa !71
  %69 = uitofp i64 %68 to double
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([9 x i8]* @.str19, i64 0, i64 0), double %69) #10
  %70 = fcmp ogt double %10, 0.000000e+00
  br i1 %70, label %71, label %86

; <label>:71                                      ; preds = %8
  %72 = load i64* %31, align 8, !tbaa !64
  %73 = uitofp i64 %72 to double
  %74 = fdiv double %73, %10
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([16 x i8]* @.str167, i64 0, i64 0), double %74) #10
  %75 = load i64* %34, align 8, !tbaa !74
  %76 = uitofp i64 %75 to double
  %77 = fdiv double %76, %10
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([16 x i8]* @.str168, i64 0, i64 0), double %77) #10
  %78 = load i64* %37, align 8, !tbaa !65
  %79 = shl i64 %78, 3
  %80 = uitofp i64 %79 to double
  %81 = fdiv double %80, %10
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([14 x i8]* @.str169, i64 0, i64 0), double %81) #10
  %82 = load i64* %40, align 8, !tbaa !75
  %83 = shl i64 %82, 3
  %84 = uitofp i64 %83 to double
  %85 = fdiv double %84, %10
  tail call void @_ZN13cSimpleModule12recordScalarEPKcd(%class.cSimpleModule* %9, i8* getelementptr inbounds ([14 x i8]* @.str170, i64 0, i64 0), double %85) #10
  br label %86

; <label>:86                                      ; preds = %0, %8, %71, %4
  ret void
}
