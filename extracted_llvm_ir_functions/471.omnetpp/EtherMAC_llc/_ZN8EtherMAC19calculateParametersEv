define void @_ZN8EtherMAC19calculateParametersEv(%class.EtherMAC* %this) #2 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%class.EtherMAC* %this}, i64 0, metadata !4836), !dbg !5719
  %disabled = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 1, !dbg !5720
  %0 = load i8* %disabled, align 1, !dbg !5720, !tbaa !5393, !range !5425
  %tobool = icmp eq i8 %0, 0, !dbg !5720
  br i1 %tobool, label %if.end, label %if.then, !dbg !5720

if.then:                                          ; preds = %entry
  %bitTime = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 9, !dbg !5721
  %frameBursting = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 6, !dbg !5723
  store i8 0, i8* %frameBursting, align 1, !dbg !5723, !tbaa !5393
  %carrierExtension = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 5, !dbg !5723
  store i8 0, i8* %carrierExtension, align 1, !dbg !5723, !tbaa !5393
  %1 = bitcast double* %bitTime to i8*, !dbg !5724
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 40, i32 8, i1 false), !dbg !5721
  br label %return, !dbg !5724

if.end:                                           ; preds = %entry
  %txrate = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 8, !dbg !5725
  %2 = load double* %txrate, align 8, !dbg !5725, !tbaa !5436
  %cmp = fcmp une double %2, 1.000000e+07, !dbg !5725
  %cmp3 = fcmp une double %2, 1.000000e+08, !dbg !5725
  %or.cond = and i1 %cmp, %cmp3, !dbg !5725
  %cmp6 = fcmp une double %2, 1.000000e+09, !dbg !5725
  %or.cond35 = and i1 %or.cond, %cmp6, !dbg !5725
  br i1 %or.cond35, label %if.then7, label %if.end8, !dbg !5725

if.then7:                                         ; preds = %if.end
  %3 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 0, !dbg !5726
  tail call void (%class.cSimpleModule*, i8*, ...)* @_ZNK13cSimpleModule5errorEPKcz(%class.cSimpleModule* %3, i8* getelementptr inbounds ([52 x i8]* @.str56, i64 0, i64 0), i64 10000000, i64 100000000, i64 1000000000) #11, !dbg !5726
  %.pre = load double* %txrate, align 8, !dbg !5728, !tbaa !5436
  br label %if.end8, !dbg !5729

if.end8:                                          ; preds = %if.then7, %if.end
  %4 = phi double [ %.pre, %if.then7 ], [ %2, %if.end ]
  %div = fdiv double 1.000000e+00, %4, !dbg !5728
  %bitTime10 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 9, !dbg !5728
  store double %div, double* %bitTime10, align 8, !dbg !5728, !tbaa !5436
  %cmp12 = fcmp oeq double %4, 1.000000e+09, !dbg !5730
  br i1 %cmp12, label %land.rhs, label %land.end, !dbg !5730

land.rhs:                                         ; preds = %if.end8
  %duplexMode = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 4, !dbg !5730
  %5 = load i8* %duplexMode, align 1, !dbg !5730, !tbaa !5393, !range !5425
  %lnot = xor i8 %5, 1, !dbg !5730
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end8
  %6 = phi i8 [ 0, %if.end8 ], [ %lnot, %land.rhs ]
  %carrierExtension14 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 5
  store i8 %6, i8* %carrierExtension14, align 1, !tbaa !5393
  %frameBursting17 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 6, !dbg !5731
  %frombool18 = zext i1 %cmp12 to i8, !dbg !5731
  store i8 %frombool18, i8* %frameBursting17, align 1, !dbg !5731, !tbaa !5393
  %cmp20 = fcmp oeq double %4, 1.000000e+07, !dbg !5732
  %cmp22 = fcmp oeq double %4, 1.000000e+08, !dbg !5732
  %or.cond36 = or i1 %cmp20, %cmp22, !dbg !5732
  %slotTime24 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 10, !dbg !5733
  %. = select i1 %or.cond36, double 5.120000e-05, double 4.096000e-06, !dbg !5733
  store double %., double* %slotTime24, align 8, !dbg !5733, !tbaa !5436
  %div28 = fdiv double 9.600000e+01, %4, !dbg !5734
  %interFrameGap29 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 11, !dbg !5734
  store double %div28, double* %interFrameGap29, align 8, !dbg !5734, !tbaa !5436
  %mul = fmul double %div, 3.200000e+01, !dbg !5735
  %jamDuration31 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 12, !dbg !5735
  store double %mul, double* %jamDuration31, align 8, !dbg !5735, !tbaa !5436
  %tobool33 = icmp ne i8 %6, 0, !dbg !5736
  %conv = select i1 %tobool33, double 5.120000e+02, double 6.400000e+01, !dbg !5736
  %shortestFrameDuration34 = getelementptr inbounds %class.EtherMAC* %this, i64 0, i32 13, !dbg !5736
  store double %conv, double* %shortestFrameDuration34, align 8, !dbg !5736, !tbaa !5436
  br label %return, !dbg !5736

return:                                           ; preds = %land.end, %if.then
  ret void, !dbg !5736
}
