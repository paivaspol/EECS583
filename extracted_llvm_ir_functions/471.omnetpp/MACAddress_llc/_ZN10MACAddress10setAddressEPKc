define void @_ZN10MACAddress10setAddressEPKc(%class.MACAddress* nocapture %this, i8* %hexstr) #0 align 2 {
  %1 = icmp eq i8* %hexstr, null
  br i1 %1, label %2, label %.preheader

; <label>:2                                       ; preds = %0
  %3 = tail call i8* @__cxa_allocate_exception(i64 8) #3
  %4 = invoke noalias i8* @_Znwm(i64 32) #14
          to label %5 unwind label %9

; <label>:5                                       ; preds = %2
  %6 = bitcast i8* %4 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %6, i8* getelementptr inbounds ([55 x i8]* @.str1, i64 0, i64 0)) #12
          to label %7 unwind label %13

; <label>:7                                       ; preds = %5
  %8 = bitcast i8* %3 to i8**
  store i8* %4, i8** %8, align 8, !tbaa !5
  tail call void @__cxa_throw(i8* %3, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #15
  unreachable

; <label>:9                                       ; preds = %2
  %10 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = extractvalue { i8*, i32 } %10, 1
  br label %17

; <label>:13                                      ; preds = %5
  %14 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = extractvalue { i8*, i32 } %14, 1
  tail call void @_ZdlPv(i8* %4) #16
  br label %17

; <label>:17                                      ; preds = %13, %9
  %.01 = phi i8* [ %15, %13 ], [ %11, %9 ]
  %.0 = phi i32 [ %16, %13 ], [ %12, %9 ]
  tail call void @__cxa_free_exception(i8* %3) #3
  br label %84

.preheader:                                       ; preds = %0, %65
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %65 ], [ 0, %0 ]
  %s.023.i = phi i8* [ %s.3.i, %65 ], [ %hexstr, %0 ]
  %k.022.i = phi i32 [ %k.1.i, %65 ], [ 0, %0 ]
  %18 = icmp eq i8* %s.023.i, null
  br i1 %18, label %22, label %19

; <label>:19                                      ; preds = %.preheader
  %20 = load i8* %s.023.i, align 1, !tbaa !8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %.lr.ph.i

; <label>:22                                      ; preds = %19, %.preheader
  %23 = getelementptr inbounds %class.MACAddress* %this, i64 0, i32 1, i64 %indvars.iv.i
  store i8 0, i8* %23, align 1, !tbaa !8
  br label %65

.lr.ph.i:                                         ; preds = %19, %_Z8isxdigiti.exit.thread.i
  %24 = phi i8 [ %31, %_Z8isxdigiti.exit.thread.i ], [ %20, %19 ]
  %s.116.i = phi i8* [ %30, %_Z8isxdigiti.exit.thread.i ], [ %s.023.i, %19 ]
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %_Z8isxdigiti.exit.thread.i, label %_Z8isxdigiti.exit.i

_Z8isxdigiti.exit.i:                              ; preds = %.lr.ph.i
  %26 = sext i8 %24 to i64
  %27 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %26
  %28 = load i32* %27, align 4, !tbaa !9
  %.lobit.i.i = and i32 %28, 65536
  %29 = icmp eq i32 %.lobit.i.i, 0
  br i1 %29, label %_Z8isxdigiti.exit.thread.i, label %_Z7isdigiti.exit.i

_Z8isxdigiti.exit.thread.i:                       ; preds = %_Z8isxdigiti.exit.i, %.lr.ph.i
  %30 = getelementptr inbounds i8* %s.116.i, i64 1
  %31 = load i8* %30, align 1, !tbaa !8
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %.critedge.thread.i, label %.lr.ph.i

.critedge.thread.i:                               ; preds = %_Z8isxdigiti.exit.thread.i
  %33 = getelementptr inbounds %class.MACAddress* %this, i64 0, i32 1, i64 %indvars.iv.i
  store i8 0, i8* %33, align 1, !tbaa !8
  br label %65

_Z7isdigiti.exit.i:                               ; preds = %_Z8isxdigiti.exit.i
  %.lobit.i2.i = and i32 %28, 1024
  %34 = icmp eq i32 %.lobit.i2.i, 0
  br i1 %34, label %_Z7isloweri.exit9.i, label %35

; <label>:35                                      ; preds = %_Z7isdigiti.exit.i
  %36 = add i8 %24, -48
  br label %39

_Z7isloweri.exit9.i:                              ; preds = %_Z7isdigiti.exit.i
  %37 = and i32 %28, 4096
  %.sink1.i.i8.i = icmp ne i32 %37, 0
  %.sink.v.i = select i1 %.sink1.i.i8.i, i8 -97, i8 -65
  %.sink.i = add i8 %24, 10
  %38 = add i8 %.sink.i, %.sink.v.i
  br label %39

; <label>:39                                      ; preds = %_Z7isloweri.exit9.i, %35
  %40 = phi i8 [ %36, %35 ], [ %38, %_Z7isloweri.exit9.i ]
  %41 = shl i8 %40, 4
  %s.217.i = getelementptr inbounds i8* %s.116.i, i64 1
  %42 = load i8* %s.217.i, align 1, !tbaa !8
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %.critedge1.thread.i, label %.lr.ph20.i

.lr.ph20.i:                                       ; preds = %39, %_Z8isxdigiti.exit6.thread.backedge.i
  %44 = phi i8 [ %51, %_Z8isxdigiti.exit6.thread.backedge.i ], [ %42, %39 ]
  %45 = phi i8* [ %s.219.i, %_Z8isxdigiti.exit6.thread.backedge.i ], [ %s.116.i, %39 ]
  %s.219.i = phi i8* [ %s.2.i, %_Z8isxdigiti.exit6.thread.backedge.i ], [ %s.217.i, %39 ]
  %46 = icmp slt i8 %44, 0
  br i1 %46, label %_Z8isxdigiti.exit6.thread.backedge.i, label %_Z8isxdigiti.exit6.i

_Z8isxdigiti.exit6.i:                             ; preds = %.lr.ph20.i
  %47 = sext i8 %44 to i64
  %48 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %47
  %49 = load i32* %48, align 4, !tbaa !9
  %.lobit.i5.i = and i32 %49, 65536
  %50 = icmp eq i32 %.lobit.i5.i, 0
  br i1 %50, label %_Z8isxdigiti.exit6.thread.backedge.i, label %_Z7isdigiti.exit4.i

_Z8isxdigiti.exit6.thread.backedge.i:             ; preds = %_Z8isxdigiti.exit6.i, %.lr.ph20.i
  %s.2.i = getelementptr inbounds i8* %45, i64 2
  %51 = load i8* %s.2.i, align 1, !tbaa !8
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %.critedge1.thread.i, label %.lr.ph20.i

.critedge1.thread.i:                              ; preds = %_Z8isxdigiti.exit6.thread.backedge.i, %39
  %s.215.i = phi i8* [ %s.217.i, %39 ], [ %s.2.i, %_Z8isxdigiti.exit6.thread.backedge.i ]
  %53 = getelementptr inbounds %class.MACAddress* %this, i64 0, i32 1, i64 %indvars.iv.i
  store i8 0, i8* %53, align 1, !tbaa !8
  br label %65

_Z7isdigiti.exit4.i:                              ; preds = %_Z8isxdigiti.exit6.i
  %.lobit.i3.i = and i32 %49, 1024
  %54 = icmp eq i32 %.lobit.i3.i, 0
  br i1 %54, label %_Z7isloweri.exit.i, label %55

; <label>:55                                      ; preds = %_Z7isdigiti.exit4.i
  %56 = add i8 %44, -48
  br label %59

_Z7isloweri.exit.i:                               ; preds = %_Z7isdigiti.exit4.i
  %57 = and i32 %49, 4096
  %.sink1.i.i.i = icmp ne i32 %57, 0
  %.sink1.v.i = select i1 %.sink1.i.i.i, i8 -97, i8 -65
  %.sink1.i = add i8 %44, 10
  %58 = add i8 %.sink1.i, %.sink1.v.i
  br label %59

; <label>:59                                      ; preds = %_Z7isloweri.exit.i, %55
  %60 = phi i8 [ %56, %55 ], [ %58, %_Z7isloweri.exit.i ]
  %61 = add i8 %60, %41
  %62 = getelementptr inbounds i8* %45, i64 2
  %63 = getelementptr inbounds %class.MACAddress* %this, i64 0, i32 1, i64 %indvars.iv.i
  store i8 %61, i8* %63, align 1, !tbaa !8
  %64 = add nsw i32 %k.022.i, 1
  br label %65

; <label>:65                                      ; preds = %59, %.critedge1.thread.i, %.critedge.thread.i, %22
  %k.1.i = phi i32 [ %64, %59 ], [ %k.022.i, %.critedge1.thread.i ], [ %k.022.i, %.critedge.thread.i ], [ %k.022.i, %22 ]
  %s.3.i = phi i8* [ %62, %59 ], [ %s.215.i, %.critedge1.thread.i ], [ %30, %.critedge.thread.i ], [ %s.023.i, %22 ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 6
  br i1 %exitcond.i, label %_ZL8hextobinPKcPhi.exit, label %.preheader

_ZL8hextobinPKcPhi.exit:                          ; preds = %65
  %66 = icmp eq i32 %k.1.i, 6
  br i1 %66, label %83, label %67

; <label>:67                                      ; preds = %_ZL8hextobinPKcPhi.exit
  %68 = tail call i8* @__cxa_allocate_exception(i64 8) #3
  %69 = invoke noalias i8* @_Znwm(i64 32) #14
          to label %70 unwind label %74

; <label>:70                                      ; preds = %67
  %71 = bitcast i8* %69 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %71, i8* getelementptr inbounds ([89 x i8]* @.str2, i64 0, i64 0), i8* %hexstr) #12
          to label %72 unwind label %78

; <label>:72                                      ; preds = %70
  %73 = bitcast i8* %68 to i8**
  store i8* %69, i8** %73, align 8, !tbaa !5
  tail call void @__cxa_throw(i8* %68, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #15
  unreachable

; <label>:74                                      ; preds = %67
  %75 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %76 = extractvalue { i8*, i32 } %75, 0
  %77 = extractvalue { i8*, i32 } %75, 1
  br label %82

; <label>:78                                      ; preds = %70
  %79 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %80 = extractvalue { i8*, i32 } %79, 0
  %81 = extractvalue { i8*, i32 } %79, 1
  tail call void @_ZdlPv(i8* %69) #16
  br label %82

; <label>:82                                      ; preds = %78, %74
  %.12 = phi i8* [ %80, %78 ], [ %76, %74 ]
  %.1 = phi i32 [ %81, %78 ], [ %77, %74 ]
  tail call void @__cxa_free_exception(i8* %68) #3
  br label %84

; <label>:83                                      ; preds = %_ZL8hextobinPKcPhi.exit
  ret void

; <label>:84                                      ; preds = %82, %17
  %.23 = phi i8* [ %.12, %82 ], [ %.01, %17 ]
  %.2 = phi i32 [ %.1, %82 ], [ %.0, %17 ]
  %85 = insertvalue { i8*, i32 } undef, i8* %.23, 0
  %86 = insertvalue { i8*, i32 } %85, i32 %.2, 1
  resume { i8*, i32 } %86
}
