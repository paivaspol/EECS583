define void @_ZN10MACAddress10setAddressEPKc(%class.MACAddress* nocapture %this, i8* %hexstr) #2 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%class.MACAddress* %this}, i64 0, metadata !1290), !dbg !1381
  tail call void @llvm.dbg.value(metadata !{i8* %hexstr}, i64 0, metadata !1291), !dbg !1381
  %tobool = icmp eq i8* %hexstr, null, !dbg !1382
  br i1 %tobool, label %if.then, label %for.body.i, !dbg !1382

if.then:                                          ; preds = %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 8) #1, !dbg !1383
  %0 = bitcast i8* %exception to %class.cException**, !dbg !1383
  %call = invoke noalias i8* @_Znwm(i64 32) #11
          to label %invoke.cont unwind label %lpad, !dbg !1383

invoke.cont:                                      ; preds = %if.then
  %1 = bitcast i8* %call to %class.cException*, !dbg !1383
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %1, i8* getelementptr inbounds ([55 x i8]* @.str1, i64 0, i64 0)) #11
          to label %invoke.cont3 unwind label %lpad2, !dbg !1383

invoke.cont3:                                     ; preds = %invoke.cont
  store %class.cException* %1, %class.cException** %0, align 8, !dbg !1383, !tbaa !1384
  tail call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13, !dbg !1383
  unreachable, !dbg !1383

lpad:                                             ; preds = %if.then
  %2 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !1383
  %3 = extractvalue { i8*, i32 } %2, 0, !dbg !1383
  %4 = extractvalue { i8*, i32 } %2, 1, !dbg !1383
  br label %ehcleanup, !dbg !1383

lpad2:                                            ; preds = %invoke.cont
  %5 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !1383
  %6 = extractvalue { i8*, i32 } %5, 0, !dbg !1383
  %7 = extractvalue { i8*, i32 } %5, 1, !dbg !1383
  tail call void @_ZdlPv(i8* %call) #14, !dbg !1383
  br label %ehcleanup, !dbg !1383

ehcleanup:                                        ; preds = %lpad2, %lpad
  %exn.slot.0 = phi i8* [ %6, %lpad2 ], [ %3, %lpad ]
  %ehselector.slot.0 = phi i32 [ %7, %lpad2 ], [ %4, %lpad ]
  tail call void @__cxa_free_exception(i8* %exception) #1, !dbg !1383
  br label %eh.resume, !dbg !1383

for.body.i:                                       ; preds = %entry, %for.inc.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.inc.i ], [ 0, %entry ]
  %s.014.i = phi i8* [ %s.3.i, %for.inc.i ], [ %hexstr, %entry ]
  %k.013.i = phi i32 [ %k.1.i, %for.inc.i ], [ 0, %entry ]
  %tobool.i = icmp eq i8* %s.014.i, null, !dbg !1386
  br i1 %tobool.i, label %if.then.i, label %lor.lhs.false.i, !dbg !1386

lor.lhs.false.i:                                  ; preds = %for.body.i
  %8 = load i8* %s.014.i, align 1, !dbg !1386, !tbaa !1385
  %tobool1.i = icmp eq i8 %8, 0, !dbg !1386
  br i1 %tobool1.i, label %if.then.i, label %land.rhs.i, !dbg !1386

if.then.i:                                        ; preds = %lor.lhs.false.i, %for.body.i
  %arrayidx.i = getelementptr inbounds %class.MACAddress* %this, i64 0, i32 1, i64 %indvars.iv.i, !dbg !1388
  store i8 0, i8* %arrayidx.i, align 1, !dbg !1388, !tbaa !1385
  br label %for.inc.i, !dbg !1390

while.cond.i:                                     ; preds = %land.rhs.i
  %9 = load i8* %incdec.ptr.i, align 1, !dbg !1391, !tbaa !1385
  %tobool2.i = icmp eq i8 %9, 0, !dbg !1391
  br i1 %tobool2.i, label %if.then5.i, label %land.rhs.i, !dbg !1391

land.rhs.i:                                       ; preds = %lor.lhs.false.i, %while.cond.i
  %10 = phi i8 [ %9, %while.cond.i ], [ %8, %lor.lhs.false.i ]
  %s.19.i = phi i8* [ %incdec.ptr.i, %while.cond.i ], [ %s.014.i, %lor.lhs.false.i ]
  %conv.i = sext i8 %10 to i32, !dbg !1391
  %call.i = tail call i32 @isxdigit(i32 %conv.i) #14, !dbg !1391
  %lnot.i = icmp eq i32 %call.i, 0, !dbg !1391
  %incdec.ptr.i = getelementptr inbounds i8* %s.19.i, i64 1, !dbg !1391
  tail call void @llvm.dbg.value(metadata !{i8* %incdec.ptr.i}, i64 0, metadata !1392) #1, !dbg !1391
  br i1 %lnot.i, label %while.cond.i, label %while.end.i

while.end.i:                                      ; preds = %land.rhs.i
  %.pr.i = load i8* %s.19.i, align 1, !dbg !1393, !tbaa !1385
  %tobool4.i = icmp eq i8 %.pr.i, 0, !dbg !1393
  br i1 %tobool4.i, label %if.then5.i, label %if.end.i, !dbg !1393

if.then5.i:                                       ; preds = %while.cond.i, %while.end.i
  %s.17.i = phi i8* [ %s.19.i, %while.end.i ], [ %incdec.ptr.i, %while.cond.i ]
  %arrayidx7.i = getelementptr inbounds %class.MACAddress* %this, i64 0, i32 1, i64 %indvars.iv.i, !dbg !1394
  store i8 0, i8* %arrayidx7.i, align 1, !dbg !1394, !tbaa !1385
  br label %for.inc.i, !dbg !1394

if.end.i:                                         ; preds = %while.end.i
  %conv8.i = sext i8 %.pr.i to i32, !dbg !1396
  %isdigittmp.i = add i32 %conv8.i, -48, !dbg !1396
  %isdigit.i = icmp ult i32 %isdigittmp.i, 10, !dbg !1396
  br i1 %isdigit.i, label %cond.true.i, label %cond.false.i, !dbg !1396

cond.true.i:                                      ; preds = %if.end.i
  %sub.i = add i8 %.pr.i, -48, !dbg !1396
  br label %cond.end22.i, !dbg !1396

cond.false.i:                                     ; preds = %if.end.i
  %call13.i = tail call i32 @islower(i32 %conv8.i) #14, !dbg !1396
  %tobool14.i = icmp ne i32 %call13.i, 0, !dbg !1396
  %11 = load i8* %s.19.i, align 1, !dbg !1396, !tbaa !1385
  %sub17.sink.v.i = select i1 %tobool14.i, i8 -97, i8 -65, !dbg !1396
  %sub17.sink.i = add i8 %11, 10, !dbg !1396
  %add.i = add i8 %sub17.sink.i, %sub17.sink.v.i, !dbg !1396
  br label %cond.end22.i, !dbg !1396

cond.end22.i:                                     ; preds = %cond.false.i, %cond.true.i
  %cond23.i = phi i8 [ %sub.i, %cond.true.i ], [ %add.i, %cond.false.i ], !dbg !1396
  tail call void @llvm.dbg.value(metadata !{i8 %cond23.i}, i64 0, metadata !1397) #1, !dbg !1396
  %shl.i = shl i8 %cond23.i, 4, !dbg !1398
  tail call void @llvm.dbg.value(metadata !{i8 %shl.i}, i64 0, metadata !1397) #1, !dbg !1398
  br label %while.cond28.i, !dbg !1399

while.cond28.i:                                   ; preds = %land.rhs30.i, %cond.end22.i
  %s.1.pn.i = phi i8* [ %s.19.i, %cond.end22.i ], [ %s.2.i, %land.rhs30.i ]
  %s.2.i = getelementptr inbounds i8* %s.1.pn.i, i64 1, !dbg !1400
  %12 = load i8* %s.2.i, align 1, !dbg !1399, !tbaa !1385
  %tobool29.i = icmp eq i8 %12, 0, !dbg !1399
  br i1 %tobool29.i, label %if.then40.i, label %land.rhs30.i, !dbg !1399

land.rhs30.i:                                     ; preds = %while.cond28.i
  %conv31.i = sext i8 %12 to i32, !dbg !1399
  %call32.i = tail call i32 @isxdigit(i32 %conv31.i) #14, !dbg !1399
  %lnot34.i = icmp eq i32 %call32.i, 0, !dbg !1399
  br i1 %lnot34.i, label %while.cond28.i, label %while.end38.i

while.end38.i:                                    ; preds = %land.rhs30.i
  %.pr4.i = load i8* %s.2.i, align 1, !dbg !1401, !tbaa !1385
  %tobool39.i = icmp eq i8 %.pr4.i, 0, !dbg !1401
  br i1 %tobool39.i, label %if.then40.i, label %if.end43.i, !dbg !1401

if.then40.i:                                      ; preds = %while.cond28.i, %while.end38.i
  %arrayidx42.i = getelementptr inbounds %class.MACAddress* %this, i64 0, i32 1, i64 %indvars.iv.i, !dbg !1402
  store i8 0, i8* %arrayidx42.i, align 1, !dbg !1402, !tbaa !1385
  br label %for.inc.i, !dbg !1402

if.end43.i:                                       ; preds = %while.end38.i
  %conv44.i = sext i8 %.pr4.i to i32, !dbg !1404
  %isdigittmp1.i = add i32 %conv44.i, -48, !dbg !1404
  %isdigit2.i = icmp ult i32 %isdigittmp1.i, 10, !dbg !1404
  br i1 %isdigit2.i, label %cond.true47.i, label %cond.false50.i, !dbg !1404

cond.true47.i:                                    ; preds = %if.end43.i
  %sub49.i = add i8 %.pr4.i, -48, !dbg !1404
  br label %cond.end64.i, !dbg !1404

cond.false50.i:                                   ; preds = %if.end43.i
  %call52.i = tail call i32 @islower(i32 %conv44.i) #14, !dbg !1404
  %tobool53.i = icmp ne i32 %call52.i, 0, !dbg !1404
  %13 = load i8* %s.2.i, align 1, !dbg !1404, !tbaa !1385
  %sub56.sink.v.i = select i1 %tobool53.i, i8 -97, i8 -65, !dbg !1404
  %sub56.sink.i = add i8 %13, 10, !dbg !1404
  %add57.i = add i8 %sub56.sink.i, %sub56.sink.v.i, !dbg !1404
  br label %cond.end64.i, !dbg !1404

cond.end64.i:                                     ; preds = %cond.false50.i, %cond.true47.i
  %cond65.i = phi i8 [ %sub49.i, %cond.true47.i ], [ %add57.i, %cond.false50.i ], !dbg !1404
  %add67.i = add i8 %cond65.i, %shl.i, !dbg !1404
  tail call void @llvm.dbg.value(metadata !{i8 %add67.i}, i64 0, metadata !1397) #1, !dbg !1404
  %incdec.ptr69.i = getelementptr inbounds i8* %s.1.pn.i, i64 2, !dbg !1405
  tail call void @llvm.dbg.value(metadata !{i8* %incdec.ptr69.i}, i64 0, metadata !1392) #1, !dbg !1405
  %arrayidx71.i = getelementptr inbounds %class.MACAddress* %this, i64 0, i32 1, i64 %indvars.iv.i, !dbg !1406
  store i8 %add67.i, i8* %arrayidx71.i, align 1, !dbg !1406, !tbaa !1385
  %inc.i = add nsw i32 %k.013.i, 1, !dbg !1407
  tail call void @llvm.dbg.value(metadata !{i32 %inc.i}, i64 0, metadata !1408) #1, !dbg !1407
  br label %for.inc.i

for.inc.i:                                        ; preds = %cond.end64.i, %if.then40.i, %if.then5.i, %if.then.i
  %k.1.i = phi i32 [ %inc.i, %cond.end64.i ], [ %k.013.i, %if.then40.i ], [ %k.013.i, %if.then5.i ], [ %k.013.i, %if.then.i ]
  %s.3.i = phi i8* [ %incdec.ptr69.i, %cond.end64.i ], [ %s.2.i, %if.then40.i ], [ %s.17.i, %if.then5.i ], [ %s.014.i, %if.then.i ]
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1, !dbg !1409
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32, !dbg !1409
  %exitcond = icmp eq i32 %lftr.wideiv, 6, !dbg !1409
  br i1 %exitcond, label %_ZL8hextobinPKcPhi.exit, label %for.body.i, !dbg !1409

_ZL8hextobinPKcPhi.exit:                          ; preds = %for.inc.i
  %cmp = icmp eq i32 %k.1.i, 6, !dbg !1387
  br i1 %cmp, label %if.end14, label %if.then5, !dbg !1387

if.then5:                                         ; preds = %_ZL8hextobinPKcPhi.exit
  %exception6 = tail call i8* @__cxa_allocate_exception(i64 8) #1, !dbg !1410
  %14 = bitcast i8* %exception6 to %class.cException**, !dbg !1410
  %call9 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %invoke.cont8 unwind label %lpad7, !dbg !1410

invoke.cont8:                                     ; preds = %if.then5
  %15 = bitcast i8* %call9 to %class.cException*, !dbg !1410
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %15, i8* getelementptr inbounds ([89 x i8]* @.str2, i64 0, i64 0), i8* %hexstr) #11
          to label %invoke.cont11 unwind label %lpad10, !dbg !1410

invoke.cont11:                                    ; preds = %invoke.cont8
  store %class.cException* %15, %class.cException** %14, align 8, !dbg !1410, !tbaa !1384
  tail call void @__cxa_throw(i8* %exception6, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13, !dbg !1410
  unreachable, !dbg !1410

lpad7:                                            ; preds = %if.then5
  %16 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !1410
  %17 = extractvalue { i8*, i32 } %16, 0, !dbg !1410
  %18 = extractvalue { i8*, i32 } %16, 1, !dbg !1410
  br label %ehcleanup13, !dbg !1410

lpad10:                                           ; preds = %invoke.cont8
  %19 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !1410
  %20 = extractvalue { i8*, i32 } %19, 0, !dbg !1410
  %21 = extractvalue { i8*, i32 } %19, 1, !dbg !1410
  tail call void @_ZdlPv(i8* %call9) #14, !dbg !1410
  br label %ehcleanup13, !dbg !1410

ehcleanup13:                                      ; preds = %lpad10, %lpad7
  %exn.slot.1 = phi i8* [ %20, %lpad10 ], [ %17, %lpad7 ]
  %ehselector.slot.1 = phi i32 [ %21, %lpad10 ], [ %18, %lpad7 ]
  tail call void @__cxa_free_exception(i8* %exception6) #1, !dbg !1410
  br label %eh.resume, !dbg !1410

if.end14:                                         ; preds = %_ZL8hextobinPKcPhi.exit
  ret void, !dbg !1411

eh.resume:                                        ; preds = %ehcleanup13, %ehcleanup
  %exn.slot.2 = phi i8* [ %exn.slot.1, %ehcleanup13 ], [ %exn.slot.0, %ehcleanup ]
  %ehselector.slot.2 = phi i32 [ %ehselector.slot.1, %ehcleanup13 ], [ %ehselector.slot.0, %ehcleanup ]
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.2, 0, !dbg !1383
  %lpad.val15 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.2, 1, !dbg !1383
  resume { i8*, i32 } %lpad.val15, !dbg !1383
}
