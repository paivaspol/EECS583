define i8* @_Z20EtherAppResp__createv() #0 {
  %1 = tail call i8* @_ZN7cObjectnwEm(i64 184) #9, !dbg !5119
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !3404, metadata !4839), !dbg !5120
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !3405, metadata !4839), !dbg !5122
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !3397, metadata !4839), !dbg !5123
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !3398, metadata !4839), !dbg !5125
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !3524, metadata !4839), !dbg !5126
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !3525, metadata !4839), !dbg !5128
  %2 = bitcast i8* %1 to %class.cMessage*, !dbg !5129
  invoke void @_ZN8cMessageC2EPKcilib(%class.cMessage* %2, i8* null, i32 0, i64 1, i32 0, i1 zeroext false) #9
          to label %3 unwind label %11, !dbg !5130

; <label>:3                                       ; preds = %0
  %4 = bitcast i8* %1 to i32 (...)***, !dbg !5129
  %5 = getelementptr inbounds i8* %1, i64 168, !dbg !5131
  %6 = bitcast i8* %5 to %class.cPolymorphic**, !dbg !5131
  store %class.cPolymorphic* null, %class.cPolymorphic** %6, align 8, !dbg !5132, !tbaa !4854
  store i32 (...)** bitcast (i8** getelementptr inbounds ([25 x i8*]* @_ZTV12EtherAppResp, i64 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8, !dbg !5133, !tbaa !4860
  %7 = getelementptr inbounds i8* %1, i64 176, !dbg !5134
  %8 = bitcast i8* %7 to i32*, !dbg !5134
  store i32 0, i32* %8, align 4, !dbg !5135, !tbaa !5136
  %9 = getelementptr inbounds i8* %1, i64 180, !dbg !5139
  %10 = bitcast i8* %9 to i32*, !dbg !5139
  store i32 0, i32* %10, align 4, !dbg !5140, !tbaa !5141
  ret i8* %1, !dbg !5119

; <label>:11                                      ; preds = %0
  %12 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !5119
  tail call void @_ZdlPv(i8* %1) #10, !dbg !5119
  resume { i8*, i32 } %12, !dbg !5119
}
