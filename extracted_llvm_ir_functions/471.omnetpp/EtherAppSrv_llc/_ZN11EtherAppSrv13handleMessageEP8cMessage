define void @_ZN11EtherAppSrv13handleMessageEP8cMessage(%class.EtherAppSrv* %this, %class.cMessage* %msg) unnamed_addr #0 align 2 {
  %srcAddr = alloca %class.MACAddress, align 8
  %msgname = alloca [30 x i8], align 16
  %1 = load i32* getelementptr inbounds (%class.cEnvir* @ev, i64 0, i32 1), align 4, !tbaa !21
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %7

; <label>:3                                       ; preds = %0
  tail call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* getelementptr inbounds ([18 x i8]* @.str3, i64 0, i64 0)) #11
  %4 = getelementptr inbounds %class.cMessage* %msg, i64 0, i32 0, i32 1
  %5 = load i8** %4, align 8, !tbaa !19
  %6 = icmp eq i8* %5, null
  %..i = select i1 %6, i8* getelementptr inbounds ([1 x i8]* @.str17, i64 0, i64 0), i8* %5
  tail call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* %..i) #11
  tail call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* getelementptr inbounds ([3 x i8]* @.str4, i64 0, i64 0)) #11
  br label %7

; <label>:7                                       ; preds = %0, %3
  %8 = getelementptr inbounds %class.EtherAppSrv* %this, i64 0, i32 4
  %9 = load i64* %8, align 8, !tbaa !25
  %10 = add nsw i64 %9, 1
  store i64 %10, i64* %8, align 8, !tbaa !25
  %11 = getelementptr inbounds %class.EtherAppSrv* %this, i64 0, i32 0
  %12 = tail call double @_ZNK13cSimpleModule7simTimeEv(%class.cSimpleModule* %11) #11
  %13 = getelementptr inbounds %class.cMessage* %msg, i64 0, i32 13
  %14 = load double* %13, align 8, !tbaa !26
  %15 = fsub double %12, %14
  %16 = getelementptr inbounds %class.EtherAppSrv* %this, i64 0, i32 5
  %17 = tail call zeroext i1 @_ZN10cOutVector6recordEd(%class.cOutVector* %16, double %15) #11
  %18 = getelementptr inbounds %class.EtherAppSrv* %this, i64 0, i32 6
  tail call void @_ZN7cStdDev7collectEd(%class.cStdDev* %18, double %15) #11
  %19 = getelementptr inbounds %class.cMessage* %msg, i64 0, i32 0
  %20 = tail call %class.EtherAppReq* @_Z14check_and_castIP11EtherAppReqET_P7cObject(%class.cObject* %19) #11
  %21 = getelementptr inbounds %class.EtherAppReq* %20, i64 0, i32 0, i32 1
  %22 = load %class.cPolymorphic** %21, align 8, !tbaa !23
  store %class.cPolymorphic* null, %class.cPolymorphic** %21, align 8, !tbaa !23
  %23 = tail call %class.EtherCtrl* @_Z14check_and_castIP9EtherCtrlET_P12cPolymorphic(%class.cPolymorphic* %22) #11
  %24 = bitcast %class.EtherCtrl* %23 to %class.MACAddress* (%class.EtherCtrl*)***
  %25 = load %class.MACAddress* (%class.EtherCtrl*)*** %24, align 8, !tbaa !14
  %26 = getelementptr inbounds %class.MACAddress* (%class.EtherCtrl*)** %25, i64 5
  %27 = load %class.MACAddress* (%class.EtherCtrl*)** %26, align 8
  %28 = tail call dereferenceable(16) %class.MACAddress* %27(%class.EtherCtrl* %23) #11
  call void @_ZN10MACAddressC2ERKS_(%class.MACAddress* %srcAddr, %class.MACAddress* dereferenceable(16) %28) #11
  %29 = bitcast %class.EtherAppReq* %20 to i64 (%class.EtherAppReq*)***
  %30 = load i64 (%class.EtherAppReq*)*** %29, align 8, !tbaa !14
  %31 = getelementptr inbounds i64 (%class.EtherAppReq*)** %30, i64 19
  %32 = load i64 (%class.EtherAppReq*)** %31, align 8
  %33 = invoke i64 %32(%class.EtherAppReq* %20) #11
          to label %34 unwind label %.loopexit.split-lp

; <label>:34                                      ; preds = %7
  %35 = load i64 (%class.EtherAppReq*)*** %29, align 8, !tbaa !14
  %36 = getelementptr inbounds i64 (%class.EtherAppReq*)** %35, i64 21
  %37 = load i64 (%class.EtherAppReq*)** %36, align 8
  %38 = invoke i64 %37(%class.EtherAppReq* %20) #11
          to label %39 unwind label %.loopexit.split-lp

; <label>:39                                      ; preds = %34
  %40 = getelementptr inbounds [30 x i8]* %msgname, i64 0, i64 0
  %41 = getelementptr inbounds %class.cMessage* %msg, i64 0, i32 0, i32 1
  %42 = load i8** %41, align 8, !tbaa !19
  %43 = icmp eq i8* %42, null
  %..i2 = select i1 %43, i8* getelementptr inbounds ([1 x i8]* @.str17, i64 0, i64 0), i8* %42
  %44 = call i8* @strcpy(i8* %40, i8* %..i2) #11
  %45 = bitcast %class.cMessage* %msg to void (%class.cMessage*)***
  %46 = load void (%class.cMessage*)*** %45, align 8, !tbaa !14
  %47 = getelementptr inbounds void (%class.cMessage*)** %46, i64 1
  %48 = load void (%class.cMessage*)** %47, align 8
  invoke void %48(%class.cMessage* %msg) #11
          to label %49 unwind label %.loopexit.split-lp

; <label>:49                                      ; preds = %39
  %50 = icmp eq %class.EtherCtrl* %23, null
  br i1 %50, label %.preheader, label %51

; <label>:51                                      ; preds = %49
  %52 = bitcast %class.EtherCtrl* %23 to void (%class.EtherCtrl*)***
  %53 = load void (%class.EtherCtrl*)*** %52, align 8, !tbaa !14
  %54 = getelementptr inbounds void (%class.EtherCtrl*)** %53, i64 1
  %55 = load void (%class.EtherCtrl*)** %54, align 8
  invoke void %55(%class.EtherCtrl* %23) #11
          to label %.preheader unwind label %.loopexit.split-lp

.preheader:                                       ; preds = %51, %49
  %56 = icmp sgt i64 %38, 0
  br i1 %56, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader
  %57 = trunc i64 %33 to i32
  %58 = getelementptr inbounds %class.EtherAppSrv* %this, i64 0, i32 3
  br label %59

; <label>:59                                      ; preds = %.lr.ph, %78
  %replyBytes.03 = phi i64 [ %38, %.lr.ph ], [ %64, %78 ]
  %60 = icmp sgt i64 %replyBytes.03, 1497
  %61 = trunc i64 %replyBytes.03 to i32
  %62 = select i1 %60, i32 1497, i32 %61
  %63 = sext i32 %62 to i64
  %64 = sub nsw i64 %replyBytes.03, %63
  %65 = invoke i8* @_ZN7cObjectnwEm(i64 184) #11
          to label %66 unwind label %.loopexit

; <label>:66                                      ; preds = %59
  %67 = bitcast i8* %65 to %class.EtherAppResp*
  invoke void @_ZN12EtherAppRespC1EPKci(%class.EtherAppResp* %67, i8* null, i32 2003) #11
          to label %68 unwind label %85

; <label>:68                                      ; preds = %66
  %69 = bitcast i8* %65 to void (%class.EtherAppResp*, i32)***
  %70 = load void (%class.EtherAppResp*, i32)*** %69, align 8, !tbaa !14
  %71 = getelementptr inbounds void (%class.EtherAppResp*, i32)** %70, i64 20
  %72 = load void (%class.EtherAppResp*, i32)** %71, align 8
  invoke void %72(%class.EtherAppResp* %67, i32 %57) #11
          to label %73 unwind label %.loopexit

; <label>:73                                      ; preds = %68
  %74 = bitcast i8* %65 to %class.cMessage*
  %75 = shl nsw i32 %62, 3
  %76 = sext i32 %75 to i64
  invoke void @_ZN8cMessage9setLengthEl(%class.cMessage* %74, i64 %76) #11
          to label %77 unwind label %.loopexit

; <label>:77                                      ; preds = %73
  invoke void @_ZN11EtherAppSrv10sendPacketEP8cMessageRK10MACAddress(%class.EtherAppSrv* %this, %class.cMessage* %74, %class.MACAddress* dereferenceable(16) %srcAddr) #11
          to label %78 unwind label %.loopexit

; <label>:78                                      ; preds = %77
  %79 = load i64* %58, align 8, !tbaa !28
  %80 = add nsw i64 %79, 1
  store i64 %80, i64* %58, align 8, !tbaa !28
  %81 = icmp sgt i64 %64, 0
  br i1 %81, label %59, label %._crit_edge

.loopexit:                                        ; preds = %59, %68, %73, %77
  %lpad.loopexit = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %82

.loopexit.split-lp:                               ; preds = %7, %34, %39, %51
  %lpad.loopexit.split-lp = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %82

; <label>:82                                      ; preds = %.loopexit.split-lp, %.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %.loopexit ], [ %lpad.loopexit.split-lp, %.loopexit.split-lp ]
  %83 = extractvalue { i8*, i32 } %lpad.phi, 0
  %84 = extractvalue { i8*, i32 } %lpad.phi, 1
  br label %90

; <label>:85                                      ; preds = %66
  %86 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %87 = extractvalue { i8*, i32 } %86, 0
  %88 = extractvalue { i8*, i32 } %86, 1
  call void @_ZdlPv(i8* %65) #12
  br label %90

._crit_edge:                                      ; preds = %78, %.preheader
  %89 = getelementptr inbounds %class.MACAddress* %srcAddr, i64 0, i32 0
  call void @_ZN15MACAddress_BaseD2Ev(%class.MACAddress_Base* %89) #11
  ret void

; <label>:90                                      ; preds = %85, %82
  %.01 = phi i32 [ %84, %82 ], [ %88, %85 ]
  %.0 = phi i8* [ %83, %82 ], [ %87, %85 ]
  %91 = getelementptr inbounds %class.MACAddress* %srcAddr, i64 0, i32 0
  invoke void @_ZN15MACAddress_BaseD2Ev(%class.MACAddress_Base* %91) #11
          to label %_ZN10MACAddressD1Ev.exit unwind label %94

_ZN10MACAddressD1Ev.exit:                         ; preds = %90
  %92 = insertvalue { i8*, i32 } undef, i8* %.0, 0
  %93 = insertvalue { i8*, i32 } %92, i32 %.01, 1
  resume { i8*, i32 } %93

; <label>:94                                      ; preds = %90
  %95 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  call void @__clang_call_terminate(i8* %96) #14
  unreachable
}
