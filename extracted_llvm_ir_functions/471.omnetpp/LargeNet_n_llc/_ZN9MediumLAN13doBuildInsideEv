define void @_ZN9MediumLAN13doBuildInsideEv(%class.MediumLAN* %this) unnamed_addr #0 align 2 {
  %value = alloca %class.cPar, align 8
  %b1 = alloca [64 x i8], align 16
  %machines = alloca %class.cArray, align 8
  %1 = getelementptr inbounds %class.MediumLAN* %this, i64 0, i32 0, i32 0
  %2 = bitcast %class.cPar* %value to i8*
  call void @llvm.lifetime.start(i64 120, i8* %2) #2
  call void @_ZN4cParC1EPKc(%class.cPar* %value, i8* null) #10
  %3 = getelementptr inbounds [64 x i8]* %b1, i64 0, i64 0
  call void @llvm.lifetime.start(i64 64, i8* %3) #2
  %4 = bitcast %class.cArray* %machines to i8*
  call void @llvm.lifetime.start(i64 80, i8* %4) #2
  invoke void @_ZN6cArrayC1EPKcii(%class.cArray* %machines, i8* null, i32 0, i32 10) #10
          to label %5 unwind label %17

; <label>:5                                       ; preds = %0
  %6 = invoke %class.cObject* @_ZNK5cHead4findEPKc(%class.cHead* @modtypes, i8* getelementptr inbounds ([12 x i8]* @.str23, i64 0, i64 0)) #10
          to label %7 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:7                                       ; preds = %5
  %8 = bitcast %class.cObject* %6 to %class.cModuleType*
  %9 = icmp eq %class.cObject* %6, null
  br i1 %9, label %10, label %32

; <label>:10                                      ; preds = %7
  %11 = call i8* @__cxa_allocate_exception(i64 8) #2
  %12 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %13 unwind label %23

; <label>:13                                      ; preds = %10
  %14 = bitcast i8* %12 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %14, i8* getelementptr inbounds ([43 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8]* @.str23, i64 0, i64 0)) #10
          to label %15 unwind label %27

; <label>:15                                      ; preds = %13
  %16 = bitcast i8* %11 to i8**
  store i8* %12, i8** %16, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %11, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:17                                      ; preds = %1540, %0
  %18 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  br label %1543

.loopexit:                                        ; preds = %1150, %1198, %1220, %1222, %1243, %1290, %1311, %1313, %1241, %.lr.ph
  %lpad.loopexit = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.loopexit.split-lp

.loopexit.split-lp.loopexit:                      ; preds = %.lr.ph149, %901, %973, %971, %950, %903, %882, %880, %858, %810
  %lpad.loopexit100 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.loopexit.split-lp

.loopexit.split-lp.loopexit.split-lp.loopexit:    ; preds = %.lr.ph151, %761, %764, %767
  %lpad.loopexit103 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.loopexit.split-lp

.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %729, %669, %773, %._crit_edge, %735, %734, %_ZN6cArrayixEi.exit99, %726, %706, %703, %699, %673, %_ZN4cParaSEPKc.exit96, %667, %.lr.ph154
  %lpad.loopexit105 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.loopexit.split-lp

.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %.lr.ph158, %509, %512, %514
  %lpad.loopexit108 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.loopexit.split-lp

.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %381, %378, %375, %.lr.ph162
  %lpad.loopexit110 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.loopexit.split-lp

.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %.lr.ph167, %281, %_ZN4cParaSEPKc.exit72, %287, %313, %317, %320, %340, %_ZN6cArrayixEi.exit75, %348, %349, %._crit_edge163, %387, %283, %343
  %lpad.loopexit113 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.loopexit.split-lp

.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %128, %126, %123, %.lr.ph171
  %lpad.loopexit115 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.loopexit.split-lp

.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %788, %804, %635, %612, %582, %566, %539, %993, %1059, %523, %1128, %480, %1144, %424, %397, %_ZN4cParcvlEv.exit81._crit_edge, %1339, %249, %226, %196, %1355, %1381, %180, %153, %1425, %1433, %137, %1449, %94, %1475, %38, %5, %1529, %1521, %1519, %1508, %1500, %1499, %1488, %_ZN4cParcvlEv.exit, %1473, %1462, %_ZN4cParcvlEv.exit64, %1447, %1439, %1430, %1427, %1414, %1406, %1405, %1394, %_ZN4cParcvlEv.exit67, %1379, %1368, %_ZN4cParcvlEv.exit68, %1353, %1345, %1336, %1333, %1321, %1300, %1279, %1255, %1230, %1209, %1187, %1163, %1142, %1134, %1125, %1123, %1112, %1104, %1103, %1092, %1083, %1072, %_ZN4cParcvlEv.exit85, %1057, %1046, %1038, %1037, %1026, %1017, %1006, %_ZN4cParcvlEv.exit86, %_ZN4cParcvlEv.exit97._crit_edge, %981, %960, %939, %915, %890, %869, %847, %823, %802, %794, %785, %783, %._crit_edge155, %743, %715, %681, %655, %644, %633, %622, %611, %605, %604, %603, %592, %580, %572, %563, %561, %560, %549, %537, %529, %520, %._crit_edge159, %493, %485, %484, %_ZN6cArrayixEi.exit82, %469, %461, %458, %454, %436, %428, %_ZN4cParaSEPKc.exit78, %422, %418, %407, %._crit_edge168, %357, %329, %295, %269, %258, %247, %236, %225, %219, %218, %217, %206, %194, %186, %177, %175, %174, %163, %151, %143, %134, %._crit_edge172, %107, %99, %98, %_ZN6cArrayixEi.exit, %83, %75, %72, %68, %50, %42, %_ZN4cParaSEPKc.exit, %36, %32, %15
  %lpad.loopexit.split-lp116 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.loopexit.split-lp

.loopexit.split-lp:                               ; preds = %.loopexit.split-lp.loopexit, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit, %.loopexit.split-lp.loopexit.split-lp.loopexit, %.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %.loopexit ], [ %lpad.loopexit100, %.loopexit.split-lp.loopexit ], [ %lpad.loopexit103, %.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit105, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit108, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit110, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit113, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit115, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp116, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ]
  %21 = extractvalue { i8*, i32 } %lpad.phi, 0
  %22 = extractvalue { i8*, i32 } %lpad.phi, 1
  br label %1542

; <label>:23                                      ; preds = %10
  %24 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %25 = extractvalue { i8*, i32 } %24, 0
  %26 = extractvalue { i8*, i32 } %24, 1
  br label %31

; <label>:27                                      ; preds = %13
  %28 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  %30 = extractvalue { i8*, i32 } %28, 1
  call void @_ZdlPv(i8* %12) #11
  br label %31

; <label>:31                                      ; preds = %27, %23
  %.04 = phi i32 [ %30, %27 ], [ %26, %23 ]
  %.0 = phi i8* [ %29, %27 ], [ %25, %23 ]
  call void @__cxa_free_exception(i8* %11) #2
  br label %1542

; <label>:32                                      ; preds = %7
  %33 = invoke i8* @_ZN7cObjectnwEm(i64 120) #10
          to label %34 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:34                                      ; preds = %32
  %35 = bitcast i8* %33 to %class.cPar*
  invoke void @_ZN4cParC1EPKc(%class.cPar* %35, i8* null) #10
          to label %36 unwind label %52

; <label>:36                                      ; preds = %34
  %37 = invoke i8* @_ZN7cModule10machineParEPKc(%class.cModule* %1, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0)) #10
          to label %38 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:38                                      ; preds = %36
  %39 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setStringValueEPKc(%class.cPar* %35, i8* %37) #10
          to label %_ZN4cParaSEPKc.exit unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParaSEPKc.exit:                              ; preds = %38
  %40 = bitcast i8* %33 to %class.cObject*
  %41 = invoke i32 @_ZN6cArray3addEP7cObject(%class.cArray* %machines, %class.cObject* %40) #10
          to label %42 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:42                                      ; preds = %_ZN4cParaSEPKc.exit
  %43 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %44 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:44                                      ; preds = %42
  br i1 %43, label %45, label %65

; <label>:45                                      ; preds = %44
  %46 = call i8* @__cxa_allocate_exception(i64 8) #2
  %47 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %48 unwind label %56

; <label>:48                                      ; preds = %45
  %49 = bitcast i8* %47 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %49, i32 11) #10
          to label %50 unwind label %60

; <label>:50                                      ; preds = %48
  %51 = bitcast i8* %46 to i8**
  store i8* %47, i8** %51, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %46, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:52                                      ; preds = %34
  %53 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  %55 = extractvalue { i8*, i32 } %53, 1
  call void @_ZdlPv(i8* %33) #11
  br label %1542

; <label>:56                                      ; preds = %45
  %57 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  %59 = extractvalue { i8*, i32 } %57, 1
  br label %64

; <label>:60                                      ; preds = %48
  %61 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  %63 = extractvalue { i8*, i32 } %61, 1
  call void @_ZdlPv(i8* %47) #11
  br label %64

; <label>:64                                      ; preds = %60, %56
  %.110 = phi i32 [ %63, %60 ], [ %59, %56 ]
  %.1 = phi i8* [ %62, %60 ], [ %58, %56 ]
  call void @__cxa_free_exception(i8* %46) #2
  br label %1542

; <label>:65                                      ; preds = %44
  %66 = load %class.cNetMod** getelementptr inbounds (%class.cSimulation* @simulation, i64 0, i32 10), align 8, !tbaa !6
  %67 = icmp eq %class.cNetMod* %66, null
  br i1 %67, label %72, label %68

; <label>:68                                      ; preds = %65
  %69 = invoke i32 @_ZN7cNetMod16isLocalMachineInERK6cArray(%class.cNetMod* %66, %class.cArray* dereferenceable(80) %machines) #10
          to label %70 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:70                                      ; preds = %68
  %71 = icmp ne i32 %69, 0
  br label %72

; <label>:72                                      ; preds = %70, %65
  %73 = phi i1 [ true, %65 ], [ %71, %70 ]
  %74 = invoke %class.cModule* @_ZN11cModuleType6createEPKcP7cModuleb(%class.cModuleType* %8, i8* getelementptr inbounds ([7 x i8]* @.str24, i64 0, i64 0), %class.cModule* %1, i1 zeroext %73) #10
          to label %75 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:75                                      ; preds = %72
  %76 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %77 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:77                                      ; preds = %75
  br i1 %76, label %78, label %94

; <label>:78                                      ; preds = %77
  %79 = call i8* @__cxa_allocate_exception(i64 8) #2
  %80 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %81 unwind label %85

; <label>:81                                      ; preds = %78
  %82 = bitcast i8* %80 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %82, i32 11) #10
          to label %83 unwind label %89

; <label>:83                                      ; preds = %81
  %84 = bitcast i8* %79 to i8**
  store i8* %80, i8** %84, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %79, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:85                                      ; preds = %78
  %86 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %87 = extractvalue { i8*, i32 } %86, 0
  %88 = extractvalue { i8*, i32 } %86, 1
  br label %93

; <label>:89                                      ; preds = %81
  %90 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %91 = extractvalue { i8*, i32 } %90, 0
  %92 = extractvalue { i8*, i32 } %90, 1
  call void @_ZdlPv(i8* %80) #11
  br label %93

; <label>:93                                      ; preds = %89, %85
  %.211 = phi i32 [ %92, %89 ], [ %88, %85 ]
  %.2 = phi i8* [ %91, %89 ], [ %87, %85 ]
  call void @__cxa_free_exception(i8* %79) #2
  br label %1542

; <label>:94                                      ; preds = %77
  %95 = invoke %class.cObject* @_ZN6cArray3getEi(%class.cArray* %machines, i32 0) #10
          to label %_ZN6cArrayixEi.exit unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN6cArrayixEi.exit:                              ; preds = %94
  %96 = bitcast %class.cObject* %95 to %class.cPar*
  %97 = invoke i8* @_ZN4cPar11stringValueEv(%class.cPar* %96) #10
          to label %98 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:98                                      ; preds = %_ZN6cArrayixEi.exit
  invoke void @_ZN7cModule13setMachineParEPKcS1_(%class.cModule* %74, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0), i8* %97) #10
          to label %99 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:99                                      ; preds = %98
  %100 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %101 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:101                                     ; preds = %99
  br i1 %100, label %102, label %118

; <label>:102                                     ; preds = %101
  %103 = call i8* @__cxa_allocate_exception(i64 8) #2
  %104 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %105 unwind label %109

; <label>:105                                     ; preds = %102
  %106 = bitcast i8* %104 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %106, i32 11) #10
          to label %107 unwind label %113

; <label>:107                                     ; preds = %105
  %108 = bitcast i8* %103 to i8**
  store i8* %104, i8** %108, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %103, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:109                                     ; preds = %102
  %110 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %111 = extractvalue { i8*, i32 } %110, 0
  %112 = extractvalue { i8*, i32 } %110, 1
  br label %117

; <label>:113                                     ; preds = %105
  %114 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %115 = extractvalue { i8*, i32 } %114, 0
  %116 = extractvalue { i8*, i32 } %114, 1
  call void @_ZdlPv(i8* %104) #11
  br label %117

; <label>:117                                     ; preds = %113, %109
  %.312 = phi i32 [ %116, %113 ], [ %112, %109 ]
  %.3 = phi i8* [ %115, %113 ], [ %111, %109 ]
  call void @__cxa_free_exception(i8* %103) #2
  br label %1542

; <label>:118                                     ; preds = %101
  %119 = getelementptr inbounds %class.cModule* %74, i64 0, i32 6, i32 5
  %120 = load i32* %119, align 4, !tbaa !14
  %121 = icmp sgt i32 %120, -1
  br i1 %121, label %.lr.ph171, label %._crit_edge172

.lr.ph171:                                        ; preds = %118, %130
  %k.0169 = phi i32 [ %131, %130 ], [ 0, %118 ]
  %122 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEi(%class.cModule* %74, i32 %k.0169) #10
          to label %123 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:123                                     ; preds = %.lr.ph171
  %124 = invoke zeroext i1 @_ZNK4cPar7isInputEv(%class.cPar* %122) #10
          to label %125 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:125                                     ; preds = %123
  br i1 %124, label %126, label %130

; <label>:126                                     ; preds = %125
  %127 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEi(%class.cModule* %74, i32 %k.0169) #10
          to label %128 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:128                                     ; preds = %126
  %129 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar4readEv(%class.cPar* %127) #10
          to label %130 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:130                                     ; preds = %125, %128
  %131 = add nuw nsw i32 %k.0169, 1
  %132 = icmp slt i32 %k.0169, %120
  br i1 %132, label %.lr.ph171, label %._crit_edge172

._crit_edge172:                                   ; preds = %130, %118
  %133 = invoke noalias i8* @_Znam(i64 48) #12
          to label %134 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:134                                     ; preds = %._crit_edge172
  %135 = bitcast i8* %133 to %"struct.cPar::ExprElem"*
  %136 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str25, i64 0, i64 0)) #10
          to label %137 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:137                                     ; preds = %134
  store i8 82, i8* %133, align 1, !tbaa !16
  %138 = bitcast %class.cPar* %136 to %class.cObject* (%class.cPar*)***
  %139 = load %class.cObject* (%class.cPar*)*** %138, align 8, !tbaa !18
  %140 = getelementptr inbounds %class.cObject* (%class.cPar*)** %139, i64 2
  %141 = load %class.cObject* (%class.cPar*)** %140, align 8
  %142 = invoke %class.cObject* %141(%class.cPar* %136) #10
          to label %143 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:143                                     ; preds = %137
  %144 = getelementptr inbounds i8* %133, i64 8
  %145 = bitcast i8* %144 to %class.cObject**
  store %class.cObject* %142, %class.cObject** %145, align 8, !tbaa !2
  %146 = getelementptr inbounds i8* %133, i64 16
  store i8 68, i8* %146, align 1, !tbaa !16
  %147 = getelementptr inbounds i8* %133, i64 24
  %148 = bitcast i8* %147 to double*
  store double 2.000000e+00, double* %148, align 8, !tbaa !20
  %149 = getelementptr inbounds i8* %133, i64 32
  store i8 64, i8* %149, align 1, !tbaa !16
  %150 = getelementptr inbounds i8* %133, i64 40
  store i8 43, i8* %150, align 1, !tbaa !21
  invoke void @_ZN4cPar17cancelRedirectionEv(%class.cPar* %value) #10
          to label %151 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:151                                     ; preds = %143
  %152 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setDoubleValueEPNS_8ExprElemEi(%class.cPar* %value, %"struct.cPar::ExprElem"* %135, i32 3) #10
          to label %153 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:153                                     ; preds = %151
  %154 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %value) #10
          to label %155 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:155                                     ; preds = %153
  %156 = trunc i64 %154 to i32
  %157 = icmp slt i32 %156, 0
  br i1 %157, label %158, label %174

; <label>:158                                     ; preds = %155
  %159 = call i8* @__cxa_allocate_exception(i64 8) #2
  %160 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %161 unwind label %165

; <label>:161                                     ; preds = %158
  %162 = bitcast i8* %160 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %162, i8* getelementptr inbounds ([58 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str24, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %156, i8* getelementptr inbounds ([10 x i8]* @.str26, i64 0, i64 0)) #10
          to label %163 unwind label %169

; <label>:163                                     ; preds = %161
  %164 = bitcast i8* %159 to i8**
  store i8* %160, i8** %164, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %159, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:165                                     ; preds = %158
  %166 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %167 = extractvalue { i8*, i32 } %166, 0
  %168 = extractvalue { i8*, i32 } %166, 1
  br label %173

; <label>:169                                     ; preds = %161
  %170 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %171 = extractvalue { i8*, i32 } %170, 0
  %172 = extractvalue { i8*, i32 } %170, 1
  call void @_ZdlPv(i8* %160) #11
  br label %173

; <label>:173                                     ; preds = %169, %165
  %.413 = phi i32 [ %172, %169 ], [ %168, %165 ]
  %.4 = phi i8* [ %171, %169 ], [ %167, %165 ]
  call void @__cxa_free_exception(i8* %159) #2
  br label %1542

; <label>:174                                     ; preds = %155
  invoke void @_ZN7cModule11setGateSizeEPKci(%class.cModule* %74, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %156) #10
          to label %175 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:175                                     ; preds = %174
  %176 = invoke noalias i8* @_Znam(i64 48) #12
          to label %177 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:177                                     ; preds = %175
  %178 = bitcast i8* %176 to %"struct.cPar::ExprElem"*
  %179 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str25, i64 0, i64 0)) #10
          to label %180 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:180                                     ; preds = %177
  store i8 82, i8* %176, align 1, !tbaa !16
  %181 = bitcast %class.cPar* %179 to %class.cObject* (%class.cPar*)***
  %182 = load %class.cObject* (%class.cPar*)*** %181, align 8, !tbaa !18
  %183 = getelementptr inbounds %class.cObject* (%class.cPar*)** %182, i64 2
  %184 = load %class.cObject* (%class.cPar*)** %183, align 8
  %185 = invoke %class.cObject* %184(%class.cPar* %179) #10
          to label %186 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:186                                     ; preds = %180
  %187 = getelementptr inbounds i8* %176, i64 8
  %188 = bitcast i8* %187 to %class.cObject**
  store %class.cObject* %185, %class.cObject** %188, align 8, !tbaa !2
  %189 = getelementptr inbounds i8* %176, i64 16
  store i8 68, i8* %189, align 1, !tbaa !16
  %190 = getelementptr inbounds i8* %176, i64 24
  %191 = bitcast i8* %190 to double*
  store double 2.000000e+00, double* %191, align 8, !tbaa !20
  %192 = getelementptr inbounds i8* %176, i64 32
  store i8 64, i8* %192, align 1, !tbaa !16
  %193 = getelementptr inbounds i8* %176, i64 40
  store i8 43, i8* %193, align 1, !tbaa !21
  invoke void @_ZN4cPar17cancelRedirectionEv(%class.cPar* %value) #10
          to label %194 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:194                                     ; preds = %186
  %195 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setDoubleValueEPNS_8ExprElemEi(%class.cPar* %value, %"struct.cPar::ExprElem"* %178, i32 3) #10
          to label %196 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:196                                     ; preds = %194
  %197 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %value) #10
          to label %198 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:198                                     ; preds = %196
  %199 = trunc i64 %197 to i32
  %200 = icmp slt i32 %199, 0
  br i1 %200, label %201, label %217

; <label>:201                                     ; preds = %198
  %202 = call i8* @__cxa_allocate_exception(i64 8) #2
  %203 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %204 unwind label %208

; <label>:204                                     ; preds = %201
  %205 = bitcast i8* %203 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %205, i8* getelementptr inbounds ([58 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str24, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %199, i8* getelementptr inbounds ([10 x i8]* @.str26, i64 0, i64 0)) #10
          to label %206 unwind label %212

; <label>:206                                     ; preds = %204
  %207 = bitcast i8* %202 to i8**
  store i8* %203, i8** %207, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %202, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:208                                     ; preds = %201
  %209 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %210 = extractvalue { i8*, i32 } %209, 0
  %211 = extractvalue { i8*, i32 } %209, 1
  br label %216

; <label>:212                                     ; preds = %204
  %213 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %214 = extractvalue { i8*, i32 } %213, 0
  %215 = extractvalue { i8*, i32 } %213, 1
  call void @_ZdlPv(i8* %203) #11
  br label %216

; <label>:216                                     ; preds = %212, %208
  %.514 = phi i32 [ %215, %212 ], [ %211, %208 ]
  %.5 = phi i8* [ %214, %212 ], [ %210, %208 ]
  call void @__cxa_free_exception(i8* %202) #2
  br label %1542

; <label>:217                                     ; preds = %198
  invoke void @_ZN7cModule11setGateSizeEPKci(%class.cModule* %74, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %199) #10
          to label %218 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:218                                     ; preds = %217
  invoke void @_ZN7cModule16setDisplayStringEiPKcb(%class.cModule* %74, i32 0, i8* getelementptr inbounds ([10 x i8]* @.str27, i64 0, i64 0), i1 zeroext true) #10
          to label %219 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:219                                     ; preds = %218
  %220 = bitcast %class.cModule* %74 to i32 (%class.cModule*)***
  %221 = load i32 (%class.cModule*)*** %220, align 8, !tbaa !18
  %222 = getelementptr inbounds i32 (%class.cModule*)** %221, i64 21
  %223 = load i32 (%class.cModule*)** %222, align 8
  %224 = invoke i32 %223(%class.cModule* %74) #10
          to label %225 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:225                                     ; preds = %219
  invoke void @_ZN6cArray5clearEv(%class.cArray* %machines) #10
          to label %226 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:226                                     ; preds = %225
  %227 = invoke %class.cObject* @_ZNK5cHead4findEPKc(%class.cHead* @modtypes, i8* getelementptr inbounds ([10 x i8]* @.str12, i64 0, i64 0)) #10
          to label %228 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:228                                     ; preds = %226
  %229 = bitcast %class.cObject* %227 to %class.cModuleType*
  %230 = icmp eq %class.cObject* %227, null
  br i1 %230, label %231, label %247

; <label>:231                                     ; preds = %228
  %232 = call i8* @__cxa_allocate_exception(i64 8) #2
  %233 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %234 unwind label %238

; <label>:234                                     ; preds = %231
  %235 = bitcast i8* %233 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %235, i8* getelementptr inbounds ([43 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str12, i64 0, i64 0)) #10
          to label %236 unwind label %242

; <label>:236                                     ; preds = %234
  %237 = bitcast i8* %232 to i8**
  store i8* %233, i8** %237, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %232, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:238                                     ; preds = %231
  %239 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %240 = extractvalue { i8*, i32 } %239, 0
  %241 = extractvalue { i8*, i32 } %239, 1
  br label %246

; <label>:242                                     ; preds = %234
  %243 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %244 = extractvalue { i8*, i32 } %243, 0
  %245 = extractvalue { i8*, i32 } %243, 1
  call void @_ZdlPv(i8* %233) #11
  br label %246

; <label>:246                                     ; preds = %242, %238
  %.615 = phi i32 [ %245, %242 ], [ %241, %238 ]
  %.6 = phi i8* [ %244, %242 ], [ %240, %238 ]
  call void @__cxa_free_exception(i8* %232) #2
  br label %1542

; <label>:247                                     ; preds = %228
  %248 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str25, i64 0, i64 0)) #10
          to label %249 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:249                                     ; preds = %247
  %250 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %248) #10
          to label %_ZN4cParcvlEv.exit71 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParcvlEv.exit71:                             ; preds = %249
  %251 = trunc i64 %250 to i32
  %252 = icmp slt i32 %251, 1
  br i1 %252, label %253, label %269

; <label>:253                                     ; preds = %_ZN4cParcvlEv.exit71
  %254 = call i8* @__cxa_allocate_exception(i64 8) #2
  %255 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %256 unwind label %260

; <label>:256                                     ; preds = %253
  %257 = bitcast i8* %255 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %257, i8* getelementptr inbounds ([65 x i8]* @.str13, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str14, i64 0, i64 0), i32 %251, i8* getelementptr inbounds ([10 x i8]* @.str26, i64 0, i64 0)) #10
          to label %258 unwind label %264

; <label>:258                                     ; preds = %256
  %259 = bitcast i8* %254 to i8**
  store i8* %255, i8** %259, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %254, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:260                                     ; preds = %253
  %261 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %262 = extractvalue { i8*, i32 } %261, 0
  %263 = extractvalue { i8*, i32 } %261, 1
  br label %268

; <label>:264                                     ; preds = %256
  %265 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %266 = extractvalue { i8*, i32 } %265, 0
  %267 = extractvalue { i8*, i32 } %265, 1
  call void @_ZdlPv(i8* %255) #11
  br label %268

; <label>:268                                     ; preds = %264, %260
  %.716 = phi i32 [ %267, %264 ], [ %263, %260 ]
  %.7 = phi i8* [ %266, %264 ], [ %262, %260 ]
  call void @__cxa_free_exception(i8* %254) #2
  br label %1542

; <label>:269                                     ; preds = %_ZN4cParcvlEv.exit71
  %270 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %250, i64 8)
  %271 = extractvalue { i64, i1 } %270, 1
  %272 = extractvalue { i64, i1 } %270, 0
  %273 = select i1 %271, i64 -1, i64 %272
  %274 = invoke noalias i8* @_Znam(i64 %273) #12
          to label %275 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:275                                     ; preds = %269
  %276 = bitcast i8* %274 to %class.cModule**
  %277 = icmp sgt i64 %250, 0
  br i1 %277, label %.lr.ph167, label %._crit_edge168

.lr.ph167:                                        ; preds = %275, %394
  %sub_i.0165 = phi i64 [ %395, %394 ], [ 0, %275 ]
  %278 = invoke i8* @_ZN7cObjectnwEm(i64 120) #10
          to label %279 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:279                                     ; preds = %.lr.ph167
  %280 = bitcast i8* %278 to %class.cPar*
  invoke void @_ZN4cParC1EPKc(%class.cPar* %280, i8* null) #10
          to label %281 unwind label %297

; <label>:281                                     ; preds = %279
  %282 = invoke i8* @_ZN7cModule10machineParEPKc(%class.cModule* %1, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0)) #10
          to label %283 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:283                                     ; preds = %281
  %284 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setStringValueEPKc(%class.cPar* %280, i8* %282) #10
          to label %_ZN4cParaSEPKc.exit72 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

_ZN4cParaSEPKc.exit72:                            ; preds = %283
  %285 = bitcast i8* %278 to %class.cObject*
  %286 = invoke i32 @_ZN6cArray3addEP7cObject(%class.cArray* %machines, %class.cObject* %285) #10
          to label %287 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:287                                     ; preds = %_ZN4cParaSEPKc.exit72
  %288 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %289 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:289                                     ; preds = %287
  br i1 %288, label %290, label %310

; <label>:290                                     ; preds = %289
  %291 = call i8* @__cxa_allocate_exception(i64 8) #2
  %292 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %293 unwind label %301

; <label>:293                                     ; preds = %290
  %294 = bitcast i8* %292 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %294, i32 11) #10
          to label %295 unwind label %305

; <label>:295                                     ; preds = %293
  %296 = bitcast i8* %291 to i8**
  store i8* %292, i8** %296, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %291, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:297                                     ; preds = %279
  %298 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %299 = extractvalue { i8*, i32 } %298, 0
  %300 = extractvalue { i8*, i32 } %298, 1
  call void @_ZdlPv(i8* %278) #11
  br label %1542

; <label>:301                                     ; preds = %290
  %302 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %303 = extractvalue { i8*, i32 } %302, 0
  %304 = extractvalue { i8*, i32 } %302, 1
  br label %309

; <label>:305                                     ; preds = %293
  %306 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %307 = extractvalue { i8*, i32 } %306, 0
  %308 = extractvalue { i8*, i32 } %306, 1
  call void @_ZdlPv(i8* %292) #11
  br label %309

; <label>:309                                     ; preds = %305, %301
  %.817 = phi i32 [ %308, %305 ], [ %304, %301 ]
  %.8 = phi i8* [ %307, %305 ], [ %303, %301 ]
  call void @__cxa_free_exception(i8* %291) #2
  br label %1542

; <label>:310                                     ; preds = %289
  %311 = load %class.cNetMod** getelementptr inbounds (%class.cSimulation* @simulation, i64 0, i32 10), align 8, !tbaa !6
  %312 = icmp eq %class.cNetMod* %311, null
  br i1 %312, label %317, label %313

; <label>:313                                     ; preds = %310
  %314 = invoke i32 @_ZN7cNetMod16isLocalMachineInERK6cArray(%class.cNetMod* %311, %class.cArray* dereferenceable(80) %machines) #10
          to label %315 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:315                                     ; preds = %313
  %316 = icmp ne i32 %314, 0
  br label %317

; <label>:317                                     ; preds = %315, %310
  %318 = phi i1 [ true, %310 ], [ %316, %315 ]
  %319 = invoke %class.cModule* @_ZN11cModuleType6createEPKcP7cModuleb(%class.cModuleType* %229, i8* getelementptr inbounds ([5 x i8]* @.str14, i64 0, i64 0), %class.cModule* %1, i1 zeroext %318) #10
          to label %320 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:320                                     ; preds = %317
  %321 = getelementptr inbounds %class.cModule** %276, i64 %sub_i.0165
  store %class.cModule* %319, %class.cModule** %321, align 8, !tbaa !2
  %322 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %323 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:323                                     ; preds = %320
  br i1 %322, label %324, label %340

; <label>:324                                     ; preds = %323
  %325 = call i8* @__cxa_allocate_exception(i64 8) #2
  %326 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %327 unwind label %331

; <label>:327                                     ; preds = %324
  %328 = bitcast i8* %326 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %328, i32 11) #10
          to label %329 unwind label %335

; <label>:329                                     ; preds = %327
  %330 = bitcast i8* %325 to i8**
  store i8* %326, i8** %330, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %325, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:331                                     ; preds = %324
  %332 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %333 = extractvalue { i8*, i32 } %332, 0
  %334 = extractvalue { i8*, i32 } %332, 1
  br label %339

; <label>:335                                     ; preds = %327
  %336 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %337 = extractvalue { i8*, i32 } %336, 0
  %338 = extractvalue { i8*, i32 } %336, 1
  call void @_ZdlPv(i8* %326) #11
  br label %339

; <label>:339                                     ; preds = %335, %331
  %.918 = phi i32 [ %338, %335 ], [ %334, %331 ]
  %.9 = phi i8* [ %337, %335 ], [ %333, %331 ]
  call void @__cxa_free_exception(i8* %325) #2
  br label %1542

; <label>:340                                     ; preds = %323
  %341 = load %class.cModule** %321, align 8, !tbaa !2
  %342 = trunc i64 %sub_i.0165 to i32
  invoke void @_ZN7cModule8setIndexEii(%class.cModule* %341, i32 %342, i32 %251) #10
          to label %343 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:343                                     ; preds = %340
  %344 = load %class.cModule** %321, align 8, !tbaa !2
  %345 = invoke %class.cObject* @_ZN6cArray3getEi(%class.cArray* %machines, i32 0) #10
          to label %_ZN6cArrayixEi.exit75 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

_ZN6cArrayixEi.exit75:                            ; preds = %343
  %346 = bitcast %class.cObject* %345 to %class.cPar*
  %347 = invoke i8* @_ZN4cPar11stringValueEv(%class.cPar* %346) #10
          to label %348 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:348                                     ; preds = %_ZN6cArrayixEi.exit75
  invoke void @_ZN7cModule13setMachineParEPKcS1_(%class.cModule* %344, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0), i8* %347) #10
          to label %349 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:349                                     ; preds = %348
  %350 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %351 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:351                                     ; preds = %349
  br i1 %350, label %352, label %368

; <label>:352                                     ; preds = %351
  %353 = call i8* @__cxa_allocate_exception(i64 8) #2
  %354 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %355 unwind label %359

; <label>:355                                     ; preds = %352
  %356 = bitcast i8* %354 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %356, i32 11) #10
          to label %357 unwind label %363

; <label>:357                                     ; preds = %355
  %358 = bitcast i8* %353 to i8**
  store i8* %354, i8** %358, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %353, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:359                                     ; preds = %352
  %360 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %361 = extractvalue { i8*, i32 } %360, 0
  %362 = extractvalue { i8*, i32 } %360, 1
  br label %367

; <label>:363                                     ; preds = %355
  %364 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %365 = extractvalue { i8*, i32 } %364, 0
  %366 = extractvalue { i8*, i32 } %364, 1
  call void @_ZdlPv(i8* %354) #11
  br label %367

; <label>:367                                     ; preds = %363, %359
  %.1019 = phi i32 [ %366, %363 ], [ %362, %359 ]
  %.10 = phi i8* [ %365, %363 ], [ %361, %359 ]
  call void @__cxa_free_exception(i8* %353) #2
  br label %1542

; <label>:368                                     ; preds = %351
  %369 = load %class.cModule** %321, align 8, !tbaa !2
  %370 = getelementptr inbounds %class.cModule* %369, i64 0, i32 6, i32 5
  %371 = load i32* %370, align 4, !tbaa !14
  %372 = icmp sgt i32 %371, -1
  br i1 %372, label %.lr.ph162, label %._crit_edge163

.lr.ph162:                                        ; preds = %368, %383
  %373 = phi %class.cModule* [ %386, %383 ], [ %369, %368 ]
  %k.1160 = phi i32 [ %384, %383 ], [ 0, %368 ]
  %374 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEi(%class.cModule* %373, i32 %k.1160) #10
          to label %375 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:375                                     ; preds = %.lr.ph162
  %376 = invoke zeroext i1 @_ZNK4cPar7isInputEv(%class.cPar* %374) #10
          to label %377 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:377                                     ; preds = %375
  br i1 %376, label %378, label %383

; <label>:378                                     ; preds = %377
  %379 = load %class.cModule** %321, align 8, !tbaa !2
  %380 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEi(%class.cModule* %379, i32 %k.1160) #10
          to label %381 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:381                                     ; preds = %378
  %382 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar4readEv(%class.cPar* %380) #10
          to label %383 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:383                                     ; preds = %377, %381
  %384 = add nuw nsw i32 %k.1160, 1
  %385 = icmp slt i32 %k.1160, %371
  %386 = load %class.cModule** %321, align 8, !tbaa !2
  br i1 %385, label %.lr.ph162, label %._crit_edge163

._crit_edge163:                                   ; preds = %383, %368
  %.lcssa140 = phi %class.cModule* [ %369, %368 ], [ %386, %383 ]
  invoke void @_ZN7cModule16setDisplayStringEiPKcb(%class.cModule* %.lcssa140, i32 0, i8* getelementptr inbounds ([7 x i8]* @.str15, i64 0, i64 0), i1 zeroext true) #10
          to label %387 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:387                                     ; preds = %._crit_edge163
  %388 = load %class.cModule** %321, align 8, !tbaa !2
  %389 = bitcast %class.cModule* %388 to i32 (%class.cModule*)***
  %390 = load i32 (%class.cModule*)*** %389, align 8, !tbaa !18
  %391 = getelementptr inbounds i32 (%class.cModule*)** %390, i64 21
  %392 = load i32 (%class.cModule*)** %391, align 8
  %393 = invoke i32 %392(%class.cModule* %388) #10
          to label %394 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:394                                     ; preds = %387
  %395 = add nuw nsw i64 %sub_i.0165, 1
  %396 = icmp slt i64 %395, %250
  br i1 %396, label %.lr.ph167, label %._crit_edge168

._crit_edge168:                                   ; preds = %394, %275
  invoke void @_ZN6cArray5clearEv(%class.cArray* %machines) #10
          to label %397 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:397                                     ; preds = %._crit_edge168
  %398 = invoke %class.cObject* @_ZNK5cHead4findEPKc(%class.cHead* @modtypes, i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0)) #10
          to label %399 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:399                                     ; preds = %397
  %400 = bitcast %class.cObject* %398 to %class.cModuleType*
  %401 = icmp eq %class.cObject* %398, null
  br i1 %401, label %402, label %418

; <label>:402                                     ; preds = %399
  %403 = call i8* @__cxa_allocate_exception(i64 8) #2
  %404 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %405 unwind label %409

; <label>:405                                     ; preds = %402
  %406 = bitcast i8* %404 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %406, i8* getelementptr inbounds ([43 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0)) #10
          to label %407 unwind label %413

; <label>:407                                     ; preds = %405
  %408 = bitcast i8* %403 to i8**
  store i8* %404, i8** %408, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %403, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:409                                     ; preds = %402
  %410 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %411 = extractvalue { i8*, i32 } %410, 0
  %412 = extractvalue { i8*, i32 } %410, 1
  br label %417

; <label>:413                                     ; preds = %405
  %414 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %415 = extractvalue { i8*, i32 } %414, 0
  %416 = extractvalue { i8*, i32 } %414, 1
  call void @_ZdlPv(i8* %404) #11
  br label %417

; <label>:417                                     ; preds = %413, %409
  %.1120 = phi i32 [ %416, %413 ], [ %412, %409 ]
  %.11 = phi i8* [ %415, %413 ], [ %411, %409 ]
  call void @__cxa_free_exception(i8* %403) #2
  br label %1542

; <label>:418                                     ; preds = %399
  %419 = invoke i8* @_ZN7cObjectnwEm(i64 120) #10
          to label %420 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:420                                     ; preds = %418
  %421 = bitcast i8* %419 to %class.cPar*
  invoke void @_ZN4cParC1EPKc(%class.cPar* %421, i8* null) #10
          to label %422 unwind label %438

; <label>:422                                     ; preds = %420
  %423 = invoke i8* @_ZN7cModule10machineParEPKc(%class.cModule* %1, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0)) #10
          to label %424 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:424                                     ; preds = %422
  %425 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setStringValueEPKc(%class.cPar* %421, i8* %423) #10
          to label %_ZN4cParaSEPKc.exit78 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParaSEPKc.exit78:                            ; preds = %424
  %426 = bitcast i8* %419 to %class.cObject*
  %427 = invoke i32 @_ZN6cArray3addEP7cObject(%class.cArray* %machines, %class.cObject* %426) #10
          to label %428 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:428                                     ; preds = %_ZN4cParaSEPKc.exit78
  %429 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %430 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:430                                     ; preds = %428
  br i1 %429, label %431, label %451

; <label>:431                                     ; preds = %430
  %432 = call i8* @__cxa_allocate_exception(i64 8) #2
  %433 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %434 unwind label %442

; <label>:434                                     ; preds = %431
  %435 = bitcast i8* %433 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %435, i32 11) #10
          to label %436 unwind label %446

; <label>:436                                     ; preds = %434
  %437 = bitcast i8* %432 to i8**
  store i8* %433, i8** %437, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %432, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:438                                     ; preds = %420
  %439 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %440 = extractvalue { i8*, i32 } %439, 0
  %441 = extractvalue { i8*, i32 } %439, 1
  call void @_ZdlPv(i8* %419) #11
  br label %1542

; <label>:442                                     ; preds = %431
  %443 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %444 = extractvalue { i8*, i32 } %443, 0
  %445 = extractvalue { i8*, i32 } %443, 1
  br label %450

; <label>:446                                     ; preds = %434
  %447 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %448 = extractvalue { i8*, i32 } %447, 0
  %449 = extractvalue { i8*, i32 } %447, 1
  call void @_ZdlPv(i8* %433) #11
  br label %450

; <label>:450                                     ; preds = %446, %442
  %.1221 = phi i32 [ %449, %446 ], [ %445, %442 ]
  %.12 = phi i8* [ %448, %446 ], [ %444, %442 ]
  call void @__cxa_free_exception(i8* %432) #2
  br label %1542

; <label>:451                                     ; preds = %430
  %452 = load %class.cNetMod** getelementptr inbounds (%class.cSimulation* @simulation, i64 0, i32 10), align 8, !tbaa !6
  %453 = icmp eq %class.cNetMod* %452, null
  br i1 %453, label %458, label %454

; <label>:454                                     ; preds = %451
  %455 = invoke i32 @_ZN7cNetMod16isLocalMachineInERK6cArray(%class.cNetMod* %452, %class.cArray* dereferenceable(80) %machines) #10
          to label %456 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:456                                     ; preds = %454
  %457 = icmp ne i32 %455, 0
  br label %458

; <label>:458                                     ; preds = %456, %451
  %459 = phi i1 [ true, %451 ], [ %457, %456 ]
  %460 = invoke %class.cModule* @_ZN11cModuleType6createEPKcP7cModuleb(%class.cModuleType* %400, i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), %class.cModule* %1, i1 zeroext %459) #10
          to label %461 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:461                                     ; preds = %458
  %462 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %463 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:463                                     ; preds = %461
  br i1 %462, label %464, label %480

; <label>:464                                     ; preds = %463
  %465 = call i8* @__cxa_allocate_exception(i64 8) #2
  %466 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %467 unwind label %471

; <label>:467                                     ; preds = %464
  %468 = bitcast i8* %466 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %468, i32 11) #10
          to label %469 unwind label %475

; <label>:469                                     ; preds = %467
  %470 = bitcast i8* %465 to i8**
  store i8* %466, i8** %470, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %465, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:471                                     ; preds = %464
  %472 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %473 = extractvalue { i8*, i32 } %472, 0
  %474 = extractvalue { i8*, i32 } %472, 1
  br label %479

; <label>:475                                     ; preds = %467
  %476 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %477 = extractvalue { i8*, i32 } %476, 0
  %478 = extractvalue { i8*, i32 } %476, 1
  call void @_ZdlPv(i8* %466) #11
  br label %479

; <label>:479                                     ; preds = %475, %471
  %.1322 = phi i32 [ %478, %475 ], [ %474, %471 ]
  %.13 = phi i8* [ %477, %475 ], [ %473, %471 ]
  call void @__cxa_free_exception(i8* %465) #2
  br label %1542

; <label>:480                                     ; preds = %463
  %481 = invoke %class.cObject* @_ZN6cArray3getEi(%class.cArray* %machines, i32 0) #10
          to label %_ZN6cArrayixEi.exit82 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN6cArrayixEi.exit82:                            ; preds = %480
  %482 = bitcast %class.cObject* %481 to %class.cPar*
  %483 = invoke i8* @_ZN4cPar11stringValueEv(%class.cPar* %482) #10
          to label %484 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:484                                     ; preds = %_ZN6cArrayixEi.exit82
  invoke void @_ZN7cModule13setMachineParEPKcS1_(%class.cModule* %460, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0), i8* %483) #10
          to label %485 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:485                                     ; preds = %484
  %486 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %487 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:487                                     ; preds = %485
  br i1 %486, label %488, label %504

; <label>:488                                     ; preds = %487
  %489 = call i8* @__cxa_allocate_exception(i64 8) #2
  %490 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %491 unwind label %495

; <label>:491                                     ; preds = %488
  %492 = bitcast i8* %490 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %492, i32 11) #10
          to label %493 unwind label %499

; <label>:493                                     ; preds = %491
  %494 = bitcast i8* %489 to i8**
  store i8* %490, i8** %494, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %489, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:495                                     ; preds = %488
  %496 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %497 = extractvalue { i8*, i32 } %496, 0
  %498 = extractvalue { i8*, i32 } %496, 1
  br label %503

; <label>:499                                     ; preds = %491
  %500 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %501 = extractvalue { i8*, i32 } %500, 0
  %502 = extractvalue { i8*, i32 } %500, 1
  call void @_ZdlPv(i8* %490) #11
  br label %503

; <label>:503                                     ; preds = %499, %495
  %.1423 = phi i32 [ %502, %499 ], [ %498, %495 ]
  %.14 = phi i8* [ %501, %499 ], [ %497, %495 ]
  call void @__cxa_free_exception(i8* %489) #2
  br label %1542

; <label>:504                                     ; preds = %487
  %505 = getelementptr inbounds %class.cModule* %460, i64 0, i32 6, i32 5
  %506 = load i32* %505, align 4, !tbaa !14
  %507 = icmp sgt i32 %506, -1
  br i1 %507, label %.lr.ph158, label %._crit_edge159

.lr.ph158:                                        ; preds = %504, %516
  %k.2156 = phi i32 [ %517, %516 ], [ 0, %504 ]
  %508 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEi(%class.cModule* %460, i32 %k.2156) #10
          to label %509 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:509                                     ; preds = %.lr.ph158
  %510 = invoke zeroext i1 @_ZNK4cPar7isInputEv(%class.cPar* %508) #10
          to label %511 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:511                                     ; preds = %509
  br i1 %510, label %512, label %516

; <label>:512                                     ; preds = %511
  %513 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEi(%class.cModule* %460, i32 %k.2156) #10
          to label %514 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:514                                     ; preds = %512
  %515 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar4readEv(%class.cPar* %513) #10
          to label %516 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:516                                     ; preds = %511, %514
  %517 = add nuw nsw i32 %k.2156, 1
  %518 = icmp slt i32 %k.2156, %506
  br i1 %518, label %.lr.ph158, label %._crit_edge159

._crit_edge159:                                   ; preds = %516, %504
  %519 = invoke noalias i8* @_Znam(i64 48) #12
          to label %520 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:520                                     ; preds = %._crit_edge159
  %521 = bitcast i8* %519 to %"struct.cPar::ExprElem"*
  %522 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str6, i64 0, i64 0)) #10
          to label %523 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:523                                     ; preds = %520
  store i8 82, i8* %519, align 1, !tbaa !16
  %524 = bitcast %class.cPar* %522 to %class.cObject* (%class.cPar*)***
  %525 = load %class.cObject* (%class.cPar*)*** %524, align 8, !tbaa !18
  %526 = getelementptr inbounds %class.cObject* (%class.cPar*)** %525, i64 2
  %527 = load %class.cObject* (%class.cPar*)** %526, align 8
  %528 = invoke %class.cObject* %527(%class.cPar* %522) #10
          to label %529 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:529                                     ; preds = %523
  %530 = getelementptr inbounds i8* %519, i64 8
  %531 = bitcast i8* %530 to %class.cObject**
  store %class.cObject* %528, %class.cObject** %531, align 8, !tbaa !2
  %532 = getelementptr inbounds i8* %519, i64 16
  store i8 68, i8* %532, align 1, !tbaa !16
  %533 = getelementptr inbounds i8* %519, i64 24
  %534 = bitcast i8* %533 to double*
  store double 1.000000e+00, double* %534, align 8, !tbaa !20
  %535 = getelementptr inbounds i8* %519, i64 32
  store i8 64, i8* %535, align 1, !tbaa !16
  %536 = getelementptr inbounds i8* %519, i64 40
  store i8 43, i8* %536, align 1, !tbaa !21
  invoke void @_ZN4cPar17cancelRedirectionEv(%class.cPar* %value) #10
          to label %537 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:537                                     ; preds = %529
  %538 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setDoubleValueEPNS_8ExprElemEi(%class.cPar* %value, %"struct.cPar::ExprElem"* %521, i32 3) #10
          to label %539 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:539                                     ; preds = %537
  %540 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %value) #10
          to label %541 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:541                                     ; preds = %539
  %542 = trunc i64 %540 to i32
  %543 = icmp slt i32 %542, 0
  br i1 %543, label %544, label %560

; <label>:544                                     ; preds = %541
  %545 = call i8* @__cxa_allocate_exception(i64 8) #2
  %546 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %547 unwind label %551

; <label>:547                                     ; preds = %544
  %548 = bitcast i8* %546 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %548, i8* getelementptr inbounds ([58 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %542, i8* getelementptr inbounds ([10 x i8]* @.str26, i64 0, i64 0)) #10
          to label %549 unwind label %555

; <label>:549                                     ; preds = %547
  %550 = bitcast i8* %545 to i8**
  store i8* %546, i8** %550, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %545, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:551                                     ; preds = %544
  %552 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %553 = extractvalue { i8*, i32 } %552, 0
  %554 = extractvalue { i8*, i32 } %552, 1
  br label %559

; <label>:555                                     ; preds = %547
  %556 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %557 = extractvalue { i8*, i32 } %556, 0
  %558 = extractvalue { i8*, i32 } %556, 1
  call void @_ZdlPv(i8* %546) #11
  br label %559

; <label>:559                                     ; preds = %555, %551
  %.1524 = phi i32 [ %558, %555 ], [ %554, %551 ]
  %.15 = phi i8* [ %557, %555 ], [ %553, %551 ]
  call void @__cxa_free_exception(i8* %545) #2
  br label %1542

; <label>:560                                     ; preds = %541
  invoke void @_ZN7cModule11setGateSizeEPKci(%class.cModule* %460, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %542) #10
          to label %561 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:561                                     ; preds = %560
  %562 = invoke noalias i8* @_Znam(i64 48) #12
          to label %563 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:563                                     ; preds = %561
  %564 = bitcast i8* %562 to %"struct.cPar::ExprElem"*
  %565 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str6, i64 0, i64 0)) #10
          to label %566 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:566                                     ; preds = %563
  store i8 82, i8* %562, align 1, !tbaa !16
  %567 = bitcast %class.cPar* %565 to %class.cObject* (%class.cPar*)***
  %568 = load %class.cObject* (%class.cPar*)*** %567, align 8, !tbaa !18
  %569 = getelementptr inbounds %class.cObject* (%class.cPar*)** %568, i64 2
  %570 = load %class.cObject* (%class.cPar*)** %569, align 8
  %571 = invoke %class.cObject* %570(%class.cPar* %565) #10
          to label %572 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:572                                     ; preds = %566
  %573 = getelementptr inbounds i8* %562, i64 8
  %574 = bitcast i8* %573 to %class.cObject**
  store %class.cObject* %571, %class.cObject** %574, align 8, !tbaa !2
  %575 = getelementptr inbounds i8* %562, i64 16
  store i8 68, i8* %575, align 1, !tbaa !16
  %576 = getelementptr inbounds i8* %562, i64 24
  %577 = bitcast i8* %576 to double*
  store double 1.000000e+00, double* %577, align 8, !tbaa !20
  %578 = getelementptr inbounds i8* %562, i64 32
  store i8 64, i8* %578, align 1, !tbaa !16
  %579 = getelementptr inbounds i8* %562, i64 40
  store i8 43, i8* %579, align 1, !tbaa !21
  invoke void @_ZN4cPar17cancelRedirectionEv(%class.cPar* %value) #10
          to label %580 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:580                                     ; preds = %572
  %581 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setDoubleValueEPNS_8ExprElemEi(%class.cPar* %value, %"struct.cPar::ExprElem"* %564, i32 3) #10
          to label %582 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:582                                     ; preds = %580
  %583 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %value) #10
          to label %584 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:584                                     ; preds = %582
  %585 = trunc i64 %583 to i32
  %586 = icmp slt i32 %585, 0
  br i1 %586, label %587, label %603

; <label>:587                                     ; preds = %584
  %588 = call i8* @__cxa_allocate_exception(i64 8) #2
  %589 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %590 unwind label %594

; <label>:590                                     ; preds = %587
  %591 = bitcast i8* %589 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %591, i8* getelementptr inbounds ([58 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %585, i8* getelementptr inbounds ([10 x i8]* @.str26, i64 0, i64 0)) #10
          to label %592 unwind label %598

; <label>:592                                     ; preds = %590
  %593 = bitcast i8* %588 to i8**
  store i8* %589, i8** %593, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %588, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:594                                     ; preds = %587
  %595 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %596 = extractvalue { i8*, i32 } %595, 0
  %597 = extractvalue { i8*, i32 } %595, 1
  br label %602

; <label>:598                                     ; preds = %590
  %599 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %600 = extractvalue { i8*, i32 } %599, 0
  %601 = extractvalue { i8*, i32 } %599, 1
  call void @_ZdlPv(i8* %589) #11
  br label %602

; <label>:602                                     ; preds = %598, %594
  %.1625 = phi i32 [ %601, %598 ], [ %597, %594 ]
  %.16 = phi i8* [ %600, %598 ], [ %596, %594 ]
  call void @__cxa_free_exception(i8* %588) #2
  br label %1542

; <label>:603                                     ; preds = %584
  invoke void @_ZN7cModule11setGateSizeEPKci(%class.cModule* %460, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %585) #10
          to label %604 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:604                                     ; preds = %603
  invoke void @_ZN7cModule16setDisplayStringEiPKcb(%class.cModule* %460, i32 0, i8* getelementptr inbounds ([10 x i8]* @.str11, i64 0, i64 0), i1 zeroext true) #10
          to label %605 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:605                                     ; preds = %604
  %606 = bitcast %class.cModule* %460 to i32 (%class.cModule*)***
  %607 = load i32 (%class.cModule*)*** %606, align 8, !tbaa !18
  %608 = getelementptr inbounds i32 (%class.cModule*)** %607, i64 21
  %609 = load i32 (%class.cModule*)** %608, align 8
  %610 = invoke i32 %609(%class.cModule* %460) #10
          to label %611 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:611                                     ; preds = %605
  invoke void @_ZN6cArray5clearEv(%class.cArray* %machines) #10
          to label %612 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:612                                     ; preds = %611
  %613 = invoke %class.cObject* @_ZNK5cHead4findEPKc(%class.cHead* @modtypes, i8* getelementptr inbounds ([10 x i8]* @.str12, i64 0, i64 0)) #10
          to label %614 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:614                                     ; preds = %612
  %615 = bitcast %class.cObject* %613 to %class.cModuleType*
  %616 = icmp eq %class.cObject* %613, null
  br i1 %616, label %617, label %633

; <label>:617                                     ; preds = %614
  %618 = call i8* @__cxa_allocate_exception(i64 8) #2
  %619 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %620 unwind label %624

; <label>:620                                     ; preds = %617
  %621 = bitcast i8* %619 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %621, i8* getelementptr inbounds ([43 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str12, i64 0, i64 0)) #10
          to label %622 unwind label %628

; <label>:622                                     ; preds = %620
  %623 = bitcast i8* %618 to i8**
  store i8* %619, i8** %623, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %618, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:624                                     ; preds = %617
  %625 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %626 = extractvalue { i8*, i32 } %625, 0
  %627 = extractvalue { i8*, i32 } %625, 1
  br label %632

; <label>:628                                     ; preds = %620
  %629 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %630 = extractvalue { i8*, i32 } %629, 0
  %631 = extractvalue { i8*, i32 } %629, 1
  call void @_ZdlPv(i8* %619) #11
  br label %632

; <label>:632                                     ; preds = %628, %624
  %.1726 = phi i32 [ %631, %628 ], [ %627, %624 ]
  %.17 = phi i8* [ %630, %628 ], [ %626, %624 ]
  call void @__cxa_free_exception(i8* %618) #2
  br label %1542

; <label>:633                                     ; preds = %614
  %634 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str6, i64 0, i64 0)) #10
          to label %635 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:635                                     ; preds = %633
  %636 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %634) #10
          to label %_ZN4cParcvlEv.exit95 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParcvlEv.exit95:                             ; preds = %635
  %637 = trunc i64 %636 to i32
  %638 = icmp slt i32 %637, 1
  br i1 %638, label %639, label %655

; <label>:639                                     ; preds = %_ZN4cParcvlEv.exit95
  %640 = call i8* @__cxa_allocate_exception(i64 8) #2
  %641 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %642 unwind label %646

; <label>:642                                     ; preds = %639
  %643 = bitcast i8* %641 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %643, i8* getelementptr inbounds ([65 x i8]* @.str13, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str28, i64 0, i64 0), i32 %637, i8* getelementptr inbounds ([10 x i8]* @.str26, i64 0, i64 0)) #10
          to label %644 unwind label %650

; <label>:644                                     ; preds = %642
  %645 = bitcast i8* %640 to i8**
  store i8* %641, i8** %645, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %640, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:646                                     ; preds = %639
  %647 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %648 = extractvalue { i8*, i32 } %647, 0
  %649 = extractvalue { i8*, i32 } %647, 1
  br label %654

; <label>:650                                     ; preds = %642
  %651 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %652 = extractvalue { i8*, i32 } %651, 0
  %653 = extractvalue { i8*, i32 } %651, 1
  call void @_ZdlPv(i8* %641) #11
  br label %654

; <label>:654                                     ; preds = %650, %646
  %.1827 = phi i32 [ %653, %650 ], [ %649, %646 ]
  %.18 = phi i8* [ %652, %650 ], [ %648, %646 ]
  call void @__cxa_free_exception(i8* %640) #2
  br label %1542

; <label>:655                                     ; preds = %_ZN4cParcvlEv.exit95
  %656 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %636, i64 8)
  %657 = extractvalue { i64, i1 } %656, 1
  %658 = extractvalue { i64, i1 } %656, 0
  %659 = select i1 %657, i64 -1, i64 %658
  %660 = invoke noalias i8* @_Znam(i64 %659) #12
          to label %661 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:661                                     ; preds = %655
  %662 = bitcast i8* %660 to %class.cModule**
  %663 = icmp sgt i64 %636, 0
  br i1 %663, label %.lr.ph154, label %._crit_edge155

.lr.ph154:                                        ; preds = %661, %780
  %sub_i.1152 = phi i64 [ %781, %780 ], [ 0, %661 ]
  %664 = invoke i8* @_ZN7cObjectnwEm(i64 120) #10
          to label %665 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:665                                     ; preds = %.lr.ph154
  %666 = bitcast i8* %664 to %class.cPar*
  invoke void @_ZN4cParC1EPKc(%class.cPar* %666, i8* null) #10
          to label %667 unwind label %683

; <label>:667                                     ; preds = %665
  %668 = invoke i8* @_ZN7cModule10machineParEPKc(%class.cModule* %1, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0)) #10
          to label %669 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:669                                     ; preds = %667
  %670 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setStringValueEPKc(%class.cPar* %666, i8* %668) #10
          to label %_ZN4cParaSEPKc.exit96 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

_ZN4cParaSEPKc.exit96:                            ; preds = %669
  %671 = bitcast i8* %664 to %class.cObject*
  %672 = invoke i32 @_ZN6cArray3addEP7cObject(%class.cArray* %machines, %class.cObject* %671) #10
          to label %673 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:673                                     ; preds = %_ZN4cParaSEPKc.exit96
  %674 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %675 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:675                                     ; preds = %673
  br i1 %674, label %676, label %696

; <label>:676                                     ; preds = %675
  %677 = call i8* @__cxa_allocate_exception(i64 8) #2
  %678 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %679 unwind label %687

; <label>:679                                     ; preds = %676
  %680 = bitcast i8* %678 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %680, i32 11) #10
          to label %681 unwind label %691

; <label>:681                                     ; preds = %679
  %682 = bitcast i8* %677 to i8**
  store i8* %678, i8** %682, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %677, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:683                                     ; preds = %665
  %684 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %685 = extractvalue { i8*, i32 } %684, 0
  %686 = extractvalue { i8*, i32 } %684, 1
  call void @_ZdlPv(i8* %664) #11
  br label %1542

; <label>:687                                     ; preds = %676
  %688 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %689 = extractvalue { i8*, i32 } %688, 0
  %690 = extractvalue { i8*, i32 } %688, 1
  br label %695

; <label>:691                                     ; preds = %679
  %692 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %693 = extractvalue { i8*, i32 } %692, 0
  %694 = extractvalue { i8*, i32 } %692, 1
  call void @_ZdlPv(i8* %678) #11
  br label %695

; <label>:695                                     ; preds = %691, %687
  %.1928 = phi i32 [ %694, %691 ], [ %690, %687 ]
  %.19 = phi i8* [ %693, %691 ], [ %689, %687 ]
  call void @__cxa_free_exception(i8* %677) #2
  br label %1542

; <label>:696                                     ; preds = %675
  %697 = load %class.cNetMod** getelementptr inbounds (%class.cSimulation* @simulation, i64 0, i32 10), align 8, !tbaa !6
  %698 = icmp eq %class.cNetMod* %697, null
  br i1 %698, label %703, label %699

; <label>:699                                     ; preds = %696
  %700 = invoke i32 @_ZN7cNetMod16isLocalMachineInERK6cArray(%class.cNetMod* %697, %class.cArray* dereferenceable(80) %machines) #10
          to label %701 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:701                                     ; preds = %699
  %702 = icmp ne i32 %700, 0
  br label %703

; <label>:703                                     ; preds = %701, %696
  %704 = phi i1 [ true, %696 ], [ %702, %701 ]
  %705 = invoke %class.cModule* @_ZN11cModuleType6createEPKcP7cModuleb(%class.cModuleType* %615, i8* getelementptr inbounds ([6 x i8]* @.str28, i64 0, i64 0), %class.cModule* %1, i1 zeroext %704) #10
          to label %706 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:706                                     ; preds = %703
  %707 = getelementptr inbounds %class.cModule** %662, i64 %sub_i.1152
  store %class.cModule* %705, %class.cModule** %707, align 8, !tbaa !2
  %708 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %709 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:709                                     ; preds = %706
  br i1 %708, label %710, label %726

; <label>:710                                     ; preds = %709
  %711 = call i8* @__cxa_allocate_exception(i64 8) #2
  %712 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %713 unwind label %717

; <label>:713                                     ; preds = %710
  %714 = bitcast i8* %712 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %714, i32 11) #10
          to label %715 unwind label %721

; <label>:715                                     ; preds = %713
  %716 = bitcast i8* %711 to i8**
  store i8* %712, i8** %716, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %711, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:717                                     ; preds = %710
  %718 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %719 = extractvalue { i8*, i32 } %718, 0
  %720 = extractvalue { i8*, i32 } %718, 1
  br label %725

; <label>:721                                     ; preds = %713
  %722 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %723 = extractvalue { i8*, i32 } %722, 0
  %724 = extractvalue { i8*, i32 } %722, 1
  call void @_ZdlPv(i8* %712) #11
  br label %725

; <label>:725                                     ; preds = %721, %717
  %.2029 = phi i32 [ %724, %721 ], [ %720, %717 ]
  %.20 = phi i8* [ %723, %721 ], [ %719, %717 ]
  call void @__cxa_free_exception(i8* %711) #2
  br label %1542

; <label>:726                                     ; preds = %709
  %727 = load %class.cModule** %707, align 8, !tbaa !2
  %728 = trunc i64 %sub_i.1152 to i32
  invoke void @_ZN7cModule8setIndexEii(%class.cModule* %727, i32 %728, i32 %637) #10
          to label %729 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:729                                     ; preds = %726
  %730 = load %class.cModule** %707, align 8, !tbaa !2
  %731 = invoke %class.cObject* @_ZN6cArray3getEi(%class.cArray* %machines, i32 0) #10
          to label %_ZN6cArrayixEi.exit99 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

_ZN6cArrayixEi.exit99:                            ; preds = %729
  %732 = bitcast %class.cObject* %731 to %class.cPar*
  %733 = invoke i8* @_ZN4cPar11stringValueEv(%class.cPar* %732) #10
          to label %734 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:734                                     ; preds = %_ZN6cArrayixEi.exit99
  invoke void @_ZN7cModule13setMachineParEPKcS1_(%class.cModule* %730, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0), i8* %733) #10
          to label %735 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:735                                     ; preds = %734
  %736 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %737 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:737                                     ; preds = %735
  br i1 %736, label %738, label %754

; <label>:738                                     ; preds = %737
  %739 = call i8* @__cxa_allocate_exception(i64 8) #2
  %740 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %741 unwind label %745

; <label>:741                                     ; preds = %738
  %742 = bitcast i8* %740 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %742, i32 11) #10
          to label %743 unwind label %749

; <label>:743                                     ; preds = %741
  %744 = bitcast i8* %739 to i8**
  store i8* %740, i8** %744, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %739, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:745                                     ; preds = %738
  %746 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %747 = extractvalue { i8*, i32 } %746, 0
  %748 = extractvalue { i8*, i32 } %746, 1
  br label %753

; <label>:749                                     ; preds = %741
  %750 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %751 = extractvalue { i8*, i32 } %750, 0
  %752 = extractvalue { i8*, i32 } %750, 1
  call void @_ZdlPv(i8* %740) #11
  br label %753

; <label>:753                                     ; preds = %749, %745
  %.2130 = phi i32 [ %752, %749 ], [ %748, %745 ]
  %.21 = phi i8* [ %751, %749 ], [ %747, %745 ]
  call void @__cxa_free_exception(i8* %739) #2
  br label %1542

; <label>:754                                     ; preds = %737
  %755 = load %class.cModule** %707, align 8, !tbaa !2
  %756 = getelementptr inbounds %class.cModule* %755, i64 0, i32 6, i32 5
  %757 = load i32* %756, align 4, !tbaa !14
  %758 = icmp sgt i32 %757, -1
  br i1 %758, label %.lr.ph151, label %._crit_edge

.lr.ph151:                                        ; preds = %754, %769
  %759 = phi %class.cModule* [ %772, %769 ], [ %755, %754 ]
  %k.3150 = phi i32 [ %770, %769 ], [ 0, %754 ]
  %760 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEi(%class.cModule* %759, i32 %k.3150) #10
          to label %761 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:761                                     ; preds = %.lr.ph151
  %762 = invoke zeroext i1 @_ZNK4cPar7isInputEv(%class.cPar* %760) #10
          to label %763 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:763                                     ; preds = %761
  br i1 %762, label %764, label %769

; <label>:764                                     ; preds = %763
  %765 = load %class.cModule** %707, align 8, !tbaa !2
  %766 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEi(%class.cModule* %765, i32 %k.3150) #10
          to label %767 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:767                                     ; preds = %764
  %768 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar4readEv(%class.cPar* %766) #10
          to label %769 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:769                                     ; preds = %763, %767
  %770 = add nuw nsw i32 %k.3150, 1
  %771 = icmp slt i32 %k.3150, %757
  %772 = load %class.cModule** %707, align 8, !tbaa !2
  br i1 %771, label %.lr.ph151, label %._crit_edge

._crit_edge:                                      ; preds = %769, %754
  %.lcssa133 = phi %class.cModule* [ %755, %754 ], [ %772, %769 ]
  invoke void @_ZN7cModule16setDisplayStringEiPKcb(%class.cModule* %.lcssa133, i32 0, i8* getelementptr inbounds ([7 x i8]* @.str15, i64 0, i64 0), i1 zeroext true) #10
          to label %773 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:773                                     ; preds = %._crit_edge
  %774 = load %class.cModule** %707, align 8, !tbaa !2
  %775 = bitcast %class.cModule* %774 to i32 (%class.cModule*)***
  %776 = load i32 (%class.cModule*)*** %775, align 8, !tbaa !18
  %777 = getelementptr inbounds i32 (%class.cModule*)** %776, i64 21
  %778 = load i32 (%class.cModule*)** %777, align 8
  %779 = invoke i32 %778(%class.cModule* %774) #10
          to label %780 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:780                                     ; preds = %773
  %781 = add nuw nsw i64 %sub_i.1152, 1
  %782 = icmp slt i64 %781, %636
  br i1 %782, label %.lr.ph154, label %._crit_edge155

._crit_edge155:                                   ; preds = %780, %661
  invoke void @_ZN6cArray5clearEv(%class.cArray* %machines) #10
          to label %783 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:783                                     ; preds = %._crit_edge155
  %784 = invoke noalias i8* @_Znam(i64 48) #12
          to label %785 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:785                                     ; preds = %783
  %786 = bitcast i8* %784 to %"struct.cPar::ExprElem"*
  %787 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str25, i64 0, i64 0)) #10
          to label %788 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:788                                     ; preds = %785
  store i8 82, i8* %784, align 1, !tbaa !16
  %789 = bitcast %class.cPar* %787 to %class.cObject* (%class.cPar*)***
  %790 = load %class.cObject* (%class.cPar*)*** %789, align 8, !tbaa !18
  %791 = getelementptr inbounds %class.cObject* (%class.cPar*)** %790, i64 2
  %792 = load %class.cObject* (%class.cPar*)** %791, align 8
  %793 = invoke %class.cObject* %792(%class.cPar* %787) #10
          to label %794 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:794                                     ; preds = %788
  %795 = getelementptr inbounds i8* %784, i64 8
  %796 = bitcast i8* %795 to %class.cObject**
  store %class.cObject* %793, %class.cObject** %796, align 8, !tbaa !2
  %797 = getelementptr inbounds i8* %784, i64 16
  store i8 68, i8* %797, align 1, !tbaa !16
  %798 = getelementptr inbounds i8* %784, i64 24
  %799 = bitcast i8* %798 to double*
  store double 1.000000e+00, double* %799, align 8, !tbaa !20
  %800 = getelementptr inbounds i8* %784, i64 32
  store i8 64, i8* %800, align 1, !tbaa !16
  %801 = getelementptr inbounds i8* %784, i64 40
  store i8 45, i8* %801, align 1, !tbaa !21
  invoke void @_ZN4cPar17cancelRedirectionEv(%class.cPar* %value) #10
          to label %802 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:802                                     ; preds = %794
  %803 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setDoubleValueEPNS_8ExprElemEi(%class.cPar* %value, %"struct.cPar::ExprElem"* %786, i32 3) #10
          to label %804 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:804                                     ; preds = %802
  %805 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %value) #10
          to label %_ZN4cParcvlEv.exit97.preheader unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParcvlEv.exit97.preheader:                   ; preds = %804
  %806 = icmp slt i64 %805, 0
  br i1 %806, label %_ZN4cParcvlEv.exit97._crit_edge, label %.lr.ph149

_ZN4cParcvlEv.exit97:                             ; preds = %975
  %807 = add nuw nsw i64 %i_index.0148, 1
  %808 = icmp slt i64 %i_index.0148, %805
  br i1 %808, label %.lr.ph149, label %_ZN4cParcvlEv.exit97._crit_edge

.lr.ph149:                                        ; preds = %_ZN4cParcvlEv.exit97.preheader, %_ZN4cParcvlEv.exit97
  %i_index.0148 = phi i64 [ %807, %_ZN4cParcvlEv.exit97 ], [ 0, %_ZN4cParcvlEv.exit97.preheader ]
  %809 = invoke %class.cObject* @_ZNK5cHead4findEPKc(%class.cHead* @linktypes, i8* getelementptr inbounds ([6 x i8]* @.str17, i64 0, i64 0)) #10
          to label %810 unwind label %.loopexit.split-lp.loopexit

; <label>:810                                     ; preds = %.lr.ph149
  %811 = bitcast %class.cObject* %809 to %class.cLinkType*
  %812 = trunc i64 %i_index.0148 to i32
  %813 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %74, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %812) #10
          to label %814 unwind label %.loopexit.split-lp.loopexit

; <label>:814                                     ; preds = %810
  %815 = icmp eq i32 %813, -1
  br i1 %815, label %816, label %834

; <label>:816                                     ; preds = %814
  %817 = call i8* @__cxa_allocate_exception(i64 8) #2
  %818 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %819 unwind label %825

; <label>:819                                     ; preds = %816
  %820 = invoke i8* @_Z17opp_mkindexednamePcPKci(i8* %3, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %812) #10
          to label %821 unwind label %829

; <label>:821                                     ; preds = %819
  %822 = bitcast i8* %818 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %822, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str24, i64 0, i64 0), i8* %820) #10
          to label %823 unwind label %829

; <label>:823                                     ; preds = %821
  %824 = bitcast i8* %817 to i8**
  store i8* %818, i8** %824, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %817, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:825                                     ; preds = %816
  %826 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %827 = extractvalue { i8*, i32 } %826, 0
  %828 = extractvalue { i8*, i32 } %826, 1
  br label %833

; <label>:829                                     ; preds = %821, %819
  %830 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %831 = extractvalue { i8*, i32 } %830, 0
  %832 = extractvalue { i8*, i32 } %830, 1
  call void @_ZdlPv(i8* %818) #11
  br label %833

; <label>:833                                     ; preds = %829, %825
  %.2332 = phi i32 [ %832, %829 ], [ %828, %825 ]
  %.23 = phi i8* [ %831, %829 ], [ %827, %825 ]
  call void @__cxa_free_exception(i8* %817) #2
  br label %1542

; <label>:834                                     ; preds = %814
  %835 = load %class.cModule** %276, align 8, !tbaa !2
  %836 = getelementptr inbounds %class.cModule* %835, i64 0, i32 10
  %837 = load i32* %836, align 4, !tbaa !22
  %838 = icmp slt i32 %837, 0
  %839 = sext i32 %837 to i64
  %840 = select i1 %838, i64 1, i64 %839
  %841 = icmp slt i64 %i_index.0148, %840
  br i1 %841, label %858, label %842

; <label>:842                                     ; preds = %834
  %843 = call i8* @__cxa_allocate_exception(i64 8) #2
  %844 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %845 unwind label %849

; <label>:845                                     ; preds = %842
  %846 = bitcast i8* %844 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %846, i8* getelementptr inbounds ([49 x i8]* @.str19, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str14, i64 0, i64 0), i32 %812, i8* getelementptr inbounds ([10 x i8]* @.str26, i64 0, i64 0)) #10
          to label %847 unwind label %853

; <label>:847                                     ; preds = %845
  %848 = bitcast i8* %843 to i8**
  store i8* %844, i8** %848, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %843, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:849                                     ; preds = %842
  %850 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %851 = extractvalue { i8*, i32 } %850, 0
  %852 = extractvalue { i8*, i32 } %850, 1
  br label %857

; <label>:853                                     ; preds = %845
  %854 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %855 = extractvalue { i8*, i32 } %854, 0
  %856 = extractvalue { i8*, i32 } %854, 1
  call void @_ZdlPv(i8* %844) #11
  br label %857

; <label>:857                                     ; preds = %853, %849
  %.2433 = phi i32 [ %856, %853 ], [ %852, %849 ]
  %.24 = phi i8* [ %855, %853 ], [ %851, %849 ]
  call void @__cxa_free_exception(i8* %843) #2
  br label %1542

; <label>:858                                     ; preds = %834
  %859 = getelementptr inbounds %class.cModule** %276, i64 %i_index.0148
  %860 = load %class.cModule** %859, align 8, !tbaa !2
  %861 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %860, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 -1) #10
          to label %862 unwind label %.loopexit.split-lp.loopexit

; <label>:862                                     ; preds = %858
  %863 = icmp eq i32 %861, -1
  br i1 %863, label %864, label %880

; <label>:864                                     ; preds = %862
  %865 = call i8* @__cxa_allocate_exception(i64 8) #2
  %866 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %867 unwind label %871

; <label>:867                                     ; preds = %864
  %868 = bitcast i8* %866 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %868, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str14, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0)) #10
          to label %869 unwind label %875

; <label>:869                                     ; preds = %867
  %870 = bitcast i8* %865 to i8**
  store i8* %866, i8** %870, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %865, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:871                                     ; preds = %864
  %872 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %873 = extractvalue { i8*, i32 } %872, 0
  %874 = extractvalue { i8*, i32 } %872, 1
  br label %879

; <label>:875                                     ; preds = %867
  %876 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %877 = extractvalue { i8*, i32 } %876, 0
  %878 = extractvalue { i8*, i32 } %876, 1
  call void @_ZdlPv(i8* %866) #11
  br label %879

; <label>:879                                     ; preds = %875, %871
  %.2534 = phi i32 [ %878, %875 ], [ %874, %871 ]
  %.25 = phi i8* [ %877, %875 ], [ %873, %871 ]
  call void @__cxa_free_exception(i8* %865) #2
  br label %1542

; <label>:880                                     ; preds = %862
  %881 = load %class.cModule** %859, align 8, !tbaa !2
  invoke void @_Z7connectP7cModuleiP9cLinkTypeS0_i(%class.cModule* %74, i32 %813, %class.cLinkType* %811, %class.cModule* %881, i32 %861) #10
          to label %882 unwind label %.loopexit.split-lp.loopexit

; <label>:882                                     ; preds = %880
  %883 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %884 unwind label %.loopexit.split-lp.loopexit

; <label>:884                                     ; preds = %882
  br i1 %883, label %885, label %901

; <label>:885                                     ; preds = %884
  %886 = call i8* @__cxa_allocate_exception(i64 8) #2
  %887 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %888 unwind label %892

; <label>:888                                     ; preds = %885
  %889 = bitcast i8* %887 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %889, i32 11) #10
          to label %890 unwind label %896

; <label>:890                                     ; preds = %888
  %891 = bitcast i8* %886 to i8**
  store i8* %887, i8** %891, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %886, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:892                                     ; preds = %885
  %893 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %894 = extractvalue { i8*, i32 } %893, 0
  %895 = extractvalue { i8*, i32 } %893, 1
  br label %900

; <label>:896                                     ; preds = %888
  %897 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %898 = extractvalue { i8*, i32 } %897, 0
  %899 = extractvalue { i8*, i32 } %897, 1
  call void @_ZdlPv(i8* %887) #11
  br label %900

; <label>:900                                     ; preds = %896, %892
  %.2635 = phi i32 [ %899, %896 ], [ %895, %892 ]
  %.26 = phi i8* [ %898, %896 ], [ %894, %892 ]
  call void @__cxa_free_exception(i8* %886) #2
  br label %1542

; <label>:901                                     ; preds = %884
  %902 = invoke %class.cObject* @_ZNK5cHead4findEPKc(%class.cHead* @linktypes, i8* getelementptr inbounds ([6 x i8]* @.str17, i64 0, i64 0)) #10
          to label %903 unwind label %.loopexit.split-lp.loopexit

; <label>:903                                     ; preds = %901
  %904 = bitcast %class.cObject* %902 to %class.cLinkType*
  %905 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %74, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %812) #10
          to label %906 unwind label %.loopexit.split-lp.loopexit

; <label>:906                                     ; preds = %903
  %907 = icmp eq i32 %905, -1
  br i1 %907, label %908, label %926

; <label>:908                                     ; preds = %906
  %909 = call i8* @__cxa_allocate_exception(i64 8) #2
  %910 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %911 unwind label %917

; <label>:911                                     ; preds = %908
  %912 = invoke i8* @_Z17opp_mkindexednamePcPKci(i8* %3, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %812) #10
          to label %913 unwind label %921

; <label>:913                                     ; preds = %911
  %914 = bitcast i8* %910 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %914, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str24, i64 0, i64 0), i8* %912) #10
          to label %915 unwind label %921

; <label>:915                                     ; preds = %913
  %916 = bitcast i8* %909 to i8**
  store i8* %910, i8** %916, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %909, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:917                                     ; preds = %908
  %918 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %919 = extractvalue { i8*, i32 } %918, 0
  %920 = extractvalue { i8*, i32 } %918, 1
  br label %925

; <label>:921                                     ; preds = %913, %911
  %922 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %923 = extractvalue { i8*, i32 } %922, 0
  %924 = extractvalue { i8*, i32 } %922, 1
  call void @_ZdlPv(i8* %910) #11
  br label %925

; <label>:925                                     ; preds = %921, %917
  %.2736 = phi i32 [ %924, %921 ], [ %920, %917 ]
  %.27 = phi i8* [ %923, %921 ], [ %919, %917 ]
  call void @__cxa_free_exception(i8* %909) #2
  br label %1542

; <label>:926                                     ; preds = %906
  %927 = load %class.cModule** %276, align 8, !tbaa !2
  %928 = getelementptr inbounds %class.cModule* %927, i64 0, i32 10
  %929 = load i32* %928, align 4, !tbaa !22
  %930 = icmp slt i32 %929, 0
  %931 = sext i32 %929 to i64
  %932 = select i1 %930, i64 1, i64 %931
  %933 = icmp slt i64 %i_index.0148, %932
  br i1 %933, label %950, label %934

; <label>:934                                     ; preds = %926
  %935 = call i8* @__cxa_allocate_exception(i64 8) #2
  %936 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %937 unwind label %941

; <label>:937                                     ; preds = %934
  %938 = bitcast i8* %936 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %938, i8* getelementptr inbounds ([49 x i8]* @.str19, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str14, i64 0, i64 0), i32 %812, i8* getelementptr inbounds ([10 x i8]* @.str26, i64 0, i64 0)) #10
          to label %939 unwind label %945

; <label>:939                                     ; preds = %937
  %940 = bitcast i8* %935 to i8**
  store i8* %936, i8** %940, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %935, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:941                                     ; preds = %934
  %942 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %943 = extractvalue { i8*, i32 } %942, 0
  %944 = extractvalue { i8*, i32 } %942, 1
  br label %949

; <label>:945                                     ; preds = %937
  %946 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %947 = extractvalue { i8*, i32 } %946, 0
  %948 = extractvalue { i8*, i32 } %946, 1
  call void @_ZdlPv(i8* %936) #11
  br label %949

; <label>:949                                     ; preds = %945, %941
  %.2837 = phi i32 [ %948, %945 ], [ %944, %941 ]
  %.28 = phi i8* [ %947, %945 ], [ %943, %941 ]
  call void @__cxa_free_exception(i8* %935) #2
  br label %1542

; <label>:950                                     ; preds = %926
  %951 = load %class.cModule** %859, align 8, !tbaa !2
  %952 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %951, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 -1) #10
          to label %953 unwind label %.loopexit.split-lp.loopexit

; <label>:953                                     ; preds = %950
  %954 = icmp eq i32 %952, -1
  br i1 %954, label %955, label %971

; <label>:955                                     ; preds = %953
  %956 = call i8* @__cxa_allocate_exception(i64 8) #2
  %957 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %958 unwind label %962

; <label>:958                                     ; preds = %955
  %959 = bitcast i8* %957 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %959, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str14, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0)) #10
          to label %960 unwind label %966

; <label>:960                                     ; preds = %958
  %961 = bitcast i8* %956 to i8**
  store i8* %957, i8** %961, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %956, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:962                                     ; preds = %955
  %963 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %964 = extractvalue { i8*, i32 } %963, 0
  %965 = extractvalue { i8*, i32 } %963, 1
  br label %970

; <label>:966                                     ; preds = %958
  %967 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %968 = extractvalue { i8*, i32 } %967, 0
  %969 = extractvalue { i8*, i32 } %967, 1
  call void @_ZdlPv(i8* %957) #11
  br label %970

; <label>:970                                     ; preds = %966, %962
  %.2938 = phi i32 [ %969, %966 ], [ %965, %962 ]
  %.29 = phi i8* [ %968, %966 ], [ %964, %962 ]
  call void @__cxa_free_exception(i8* %956) #2
  br label %1542

; <label>:971                                     ; preds = %953
  %972 = load %class.cModule** %859, align 8, !tbaa !2
  invoke void @_Z7connectP7cModuleiP9cLinkTypeS0_i(%class.cModule* %972, i32 %952, %class.cLinkType* %904, %class.cModule* %74, i32 %905) #10
          to label %973 unwind label %.loopexit.split-lp.loopexit

; <label>:973                                     ; preds = %971
  %974 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %975 unwind label %.loopexit.split-lp.loopexit

; <label>:975                                     ; preds = %973
  br i1 %974, label %976, label %_ZN4cParcvlEv.exit97

; <label>:976                                     ; preds = %975
  %977 = call i8* @__cxa_allocate_exception(i64 8) #2
  %978 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %979 unwind label %983

; <label>:979                                     ; preds = %976
  %980 = bitcast i8* %978 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %980, i32 11) #10
          to label %981 unwind label %987

; <label>:981                                     ; preds = %979
  %982 = bitcast i8* %977 to i8**
  store i8* %978, i8** %982, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %977, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:983                                     ; preds = %976
  %984 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %985 = extractvalue { i8*, i32 } %984, 0
  %986 = extractvalue { i8*, i32 } %984, 1
  br label %991

; <label>:987                                     ; preds = %979
  %988 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %989 = extractvalue { i8*, i32 } %988, 0
  %990 = extractvalue { i8*, i32 } %988, 1
  call void @_ZdlPv(i8* %978) #11
  br label %991

; <label>:991                                     ; preds = %987, %983
  %.3039 = phi i32 [ %990, %987 ], [ %986, %983 ]
  %.30 = phi i8* [ %989, %987 ], [ %985, %983 ]
  call void @__cxa_free_exception(i8* %977) #2
  br label %1542

_ZN4cParcvlEv.exit97._crit_edge:                  ; preds = %_ZN4cParcvlEv.exit97, %_ZN4cParcvlEv.exit97.preheader
  %992 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str25, i64 0, i64 0)) #10
          to label %993 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:993                                     ; preds = %_ZN4cParcvlEv.exit97._crit_edge
  %994 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %992) #10
          to label %_ZN4cParcvlEv.exit86 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParcvlEv.exit86:                             ; preds = %993
  %995 = trunc i64 %994 to i32
  %996 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %74, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %995) #10
          to label %997 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:997                                     ; preds = %_ZN4cParcvlEv.exit86
  %998 = icmp eq i32 %996, -1
  br i1 %998, label %999, label %1017

; <label>:999                                     ; preds = %997
  %1000 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1001 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1002 unwind label %1008

; <label>:1002                                    ; preds = %999
  %1003 = invoke i8* @_Z17opp_mkindexednamePcPKci(i8* %3, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %995) #10
          to label %1004 unwind label %1012

; <label>:1004                                    ; preds = %1002
  %1005 = bitcast i8* %1001 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %1005, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str24, i64 0, i64 0), i8* %1003) #10
          to label %1006 unwind label %1012

; <label>:1006                                    ; preds = %1004
  %1007 = bitcast i8* %1000 to i8**
  store i8* %1001, i8** %1007, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1000, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1008                                    ; preds = %999
  %1009 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1010 = extractvalue { i8*, i32 } %1009, 0
  %1011 = extractvalue { i8*, i32 } %1009, 1
  br label %1016

; <label>:1012                                    ; preds = %1004, %1002
  %1013 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1014 = extractvalue { i8*, i32 } %1013, 0
  %1015 = extractvalue { i8*, i32 } %1013, 1
  call void @_ZdlPv(i8* %1001) #11
  br label %1016

; <label>:1016                                    ; preds = %1012, %1008
  %.3140 = phi i32 [ %1015, %1012 ], [ %1011, %1008 ]
  %.31 = phi i8* [ %1014, %1012 ], [ %1010, %1008 ]
  call void @__cxa_free_exception(i8* %1000) #2
  br label %1542

; <label>:1017                                    ; preds = %997
  %1018 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %1, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 -1) #10
          to label %1019 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1019                                    ; preds = %1017
  %1020 = icmp eq i32 %1018, -1
  br i1 %1020, label %1021, label %1037

; <label>:1021                                    ; preds = %1019
  %1022 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1023 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1024 unwind label %1028

; <label>:1024                                    ; preds = %1021
  %1025 = bitcast i8* %1023 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %1025, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8]* @.str20, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0)) #10
          to label %1026 unwind label %1032

; <label>:1026                                    ; preds = %1024
  %1027 = bitcast i8* %1022 to i8**
  store i8* %1023, i8** %1027, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1022, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1028                                    ; preds = %1021
  %1029 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1030 = extractvalue { i8*, i32 } %1029, 0
  %1031 = extractvalue { i8*, i32 } %1029, 1
  br label %1036

; <label>:1032                                    ; preds = %1024
  %1033 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1034 = extractvalue { i8*, i32 } %1033, 0
  %1035 = extractvalue { i8*, i32 } %1033, 1
  call void @_ZdlPv(i8* %1023) #11
  br label %1036

; <label>:1036                                    ; preds = %1032, %1028
  %.3241 = phi i32 [ %1035, %1032 ], [ %1031, %1028 ]
  %.32 = phi i8* [ %1034, %1032 ], [ %1030, %1028 ]
  call void @__cxa_free_exception(i8* %1022) #2
  br label %1542

; <label>:1037                                    ; preds = %1019
  invoke void @_Z7connectP7cModuleiP9cLinkTypeS0_i(%class.cModule* %74, i32 %996, %class.cLinkType* null, %class.cModule* %1, i32 %1018) #10
          to label %1038 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1038                                    ; preds = %1037
  %1039 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %1040 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1040                                    ; preds = %1038
  br i1 %1039, label %1041, label %1057

; <label>:1041                                    ; preds = %1040
  %1042 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1043 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1044 unwind label %1048

; <label>:1044                                    ; preds = %1041
  %1045 = bitcast i8* %1043 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %1045, i32 11) #10
          to label %1046 unwind label %1052

; <label>:1046                                    ; preds = %1044
  %1047 = bitcast i8* %1042 to i8**
  store i8* %1043, i8** %1047, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1042, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1048                                    ; preds = %1041
  %1049 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1050 = extractvalue { i8*, i32 } %1049, 0
  %1051 = extractvalue { i8*, i32 } %1049, 1
  br label %1056

; <label>:1052                                    ; preds = %1044
  %1053 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1054 = extractvalue { i8*, i32 } %1053, 0
  %1055 = extractvalue { i8*, i32 } %1053, 1
  call void @_ZdlPv(i8* %1043) #11
  br label %1056

; <label>:1056                                    ; preds = %1052, %1048
  %.3342 = phi i32 [ %1055, %1052 ], [ %1051, %1048 ]
  %.33 = phi i8* [ %1054, %1052 ], [ %1050, %1048 ]
  call void @__cxa_free_exception(i8* %1042) #2
  br label %1542

; <label>:1057                                    ; preds = %1040
  %1058 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str25, i64 0, i64 0)) #10
          to label %1059 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1059                                    ; preds = %1057
  %1060 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %1058) #10
          to label %_ZN4cParcvlEv.exit85 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParcvlEv.exit85:                             ; preds = %1059
  %1061 = trunc i64 %1060 to i32
  %1062 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %74, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %1061) #10
          to label %1063 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1063                                    ; preds = %_ZN4cParcvlEv.exit85
  %1064 = icmp eq i32 %1062, -1
  br i1 %1064, label %1065, label %1083

; <label>:1065                                    ; preds = %1063
  %1066 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1067 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1068 unwind label %1074

; <label>:1068                                    ; preds = %1065
  %1069 = invoke i8* @_Z17opp_mkindexednamePcPKci(i8* %3, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %1061) #10
          to label %1070 unwind label %1078

; <label>:1070                                    ; preds = %1068
  %1071 = bitcast i8* %1067 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %1071, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str24, i64 0, i64 0), i8* %1069) #10
          to label %1072 unwind label %1078

; <label>:1072                                    ; preds = %1070
  %1073 = bitcast i8* %1066 to i8**
  store i8* %1067, i8** %1073, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1066, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1074                                    ; preds = %1065
  %1075 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1076 = extractvalue { i8*, i32 } %1075, 0
  %1077 = extractvalue { i8*, i32 } %1075, 1
  br label %1082

; <label>:1078                                    ; preds = %1070, %1068
  %1079 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1080 = extractvalue { i8*, i32 } %1079, 0
  %1081 = extractvalue { i8*, i32 } %1079, 1
  call void @_ZdlPv(i8* %1067) #11
  br label %1082

; <label>:1082                                    ; preds = %1078, %1074
  %.3443 = phi i32 [ %1081, %1078 ], [ %1077, %1074 ]
  %.34 = phi i8* [ %1080, %1078 ], [ %1076, %1074 ]
  call void @__cxa_free_exception(i8* %1066) #2
  br label %1542

; <label>:1083                                    ; preds = %1063
  %1084 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %1, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 -1) #10
          to label %1085 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1085                                    ; preds = %1083
  %1086 = icmp eq i32 %1084, -1
  br i1 %1086, label %1087, label %1103

; <label>:1087                                    ; preds = %1085
  %1088 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1089 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1090 unwind label %1094

; <label>:1090                                    ; preds = %1087
  %1091 = bitcast i8* %1089 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %1091, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8]* @.str20, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0)) #10
          to label %1092 unwind label %1098

; <label>:1092                                    ; preds = %1090
  %1093 = bitcast i8* %1088 to i8**
  store i8* %1089, i8** %1093, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1088, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1094                                    ; preds = %1087
  %1095 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1096 = extractvalue { i8*, i32 } %1095, 0
  %1097 = extractvalue { i8*, i32 } %1095, 1
  br label %1102

; <label>:1098                                    ; preds = %1090
  %1099 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1100 = extractvalue { i8*, i32 } %1099, 0
  %1101 = extractvalue { i8*, i32 } %1099, 1
  call void @_ZdlPv(i8* %1089) #11
  br label %1102

; <label>:1102                                    ; preds = %1098, %1094
  %.3544 = phi i32 [ %1101, %1098 ], [ %1097, %1094 ]
  %.35 = phi i8* [ %1100, %1098 ], [ %1096, %1094 ]
  call void @__cxa_free_exception(i8* %1088) #2
  br label %1542

; <label>:1103                                    ; preds = %1085
  invoke void @_Z7connectP7cModuleiP9cLinkTypeS0_i(%class.cModule* %1, i32 %1084, %class.cLinkType* null, %class.cModule* %74, i32 %1062) #10
          to label %1104 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1104                                    ; preds = %1103
  %1105 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %1106 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1106                                    ; preds = %1104
  br i1 %1105, label %1107, label %1123

; <label>:1107                                    ; preds = %1106
  %1108 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1109 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1110 unwind label %1114

; <label>:1110                                    ; preds = %1107
  %1111 = bitcast i8* %1109 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %1111, i32 11) #10
          to label %1112 unwind label %1118

; <label>:1112                                    ; preds = %1110
  %1113 = bitcast i8* %1108 to i8**
  store i8* %1109, i8** %1113, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1108, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1114                                    ; preds = %1107
  %1115 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1116 = extractvalue { i8*, i32 } %1115, 0
  %1117 = extractvalue { i8*, i32 } %1115, 1
  br label %1122

; <label>:1118                                    ; preds = %1110
  %1119 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1120 = extractvalue { i8*, i32 } %1119, 0
  %1121 = extractvalue { i8*, i32 } %1119, 1
  call void @_ZdlPv(i8* %1109) #11
  br label %1122

; <label>:1122                                    ; preds = %1118, %1114
  %.3645 = phi i32 [ %1121, %1118 ], [ %1117, %1114 ]
  %.36 = phi i8* [ %1120, %1118 ], [ %1116, %1114 ]
  call void @__cxa_free_exception(i8* %1108) #2
  br label %1542

; <label>:1123                                    ; preds = %1106
  %1124 = invoke noalias i8* @_Znam(i64 48) #12
          to label %1125 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1125                                    ; preds = %1123
  %1126 = bitcast i8* %1124 to %"struct.cPar::ExprElem"*
  %1127 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str6, i64 0, i64 0)) #10
          to label %1128 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1128                                    ; preds = %1125
  store i8 82, i8* %1124, align 1, !tbaa !16
  %1129 = bitcast %class.cPar* %1127 to %class.cObject* (%class.cPar*)***
  %1130 = load %class.cObject* (%class.cPar*)*** %1129, align 8, !tbaa !18
  %1131 = getelementptr inbounds %class.cObject* (%class.cPar*)** %1130, i64 2
  %1132 = load %class.cObject* (%class.cPar*)** %1131, align 8
  %1133 = invoke %class.cObject* %1132(%class.cPar* %1127) #10
          to label %1134 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1134                                    ; preds = %1128
  %1135 = getelementptr inbounds i8* %1124, i64 8
  %1136 = bitcast i8* %1135 to %class.cObject**
  store %class.cObject* %1133, %class.cObject** %1136, align 8, !tbaa !2
  %1137 = getelementptr inbounds i8* %1124, i64 16
  store i8 68, i8* %1137, align 1, !tbaa !16
  %1138 = getelementptr inbounds i8* %1124, i64 24
  %1139 = bitcast i8* %1138 to double*
  store double 1.000000e+00, double* %1139, align 8, !tbaa !20
  %1140 = getelementptr inbounds i8* %1124, i64 32
  store i8 64, i8* %1140, align 1, !tbaa !16
  %1141 = getelementptr inbounds i8* %1124, i64 40
  store i8 45, i8* %1141, align 1, !tbaa !21
  invoke void @_ZN4cPar17cancelRedirectionEv(%class.cPar* %value) #10
          to label %1142 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1142                                    ; preds = %1134
  %1143 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setDoubleValueEPNS_8ExprElemEi(%class.cPar* %value, %"struct.cPar::ExprElem"* %1126, i32 3) #10
          to label %1144 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1144                                    ; preds = %1142
  %1145 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %value) #10
          to label %_ZN4cParcvlEv.exit81.preheader unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParcvlEv.exit81.preheader:                   ; preds = %1144
  %1146 = icmp slt i64 %1145, 0
  br i1 %1146, label %_ZN4cParcvlEv.exit81._crit_edge, label %.lr.ph

_ZN4cParcvlEv.exit81:                             ; preds = %1315
  %1147 = add nuw nsw i64 %i_index1.0147, 1
  %1148 = icmp slt i64 %i_index1.0147, %1145
  br i1 %1148, label %.lr.ph, label %_ZN4cParcvlEv.exit81._crit_edge

.lr.ph:                                           ; preds = %_ZN4cParcvlEv.exit81.preheader, %_ZN4cParcvlEv.exit81
  %i_index1.0147 = phi i64 [ %1147, %_ZN4cParcvlEv.exit81 ], [ 0, %_ZN4cParcvlEv.exit81.preheader ]
  %1149 = invoke %class.cObject* @_ZNK5cHead4findEPKc(%class.cHead* @linktypes, i8* getelementptr inbounds ([6 x i8]* @.str17, i64 0, i64 0)) #10
          to label %1150 unwind label %.loopexit

; <label>:1150                                    ; preds = %.lr.ph
  %1151 = bitcast %class.cObject* %1149 to %class.cLinkType*
  %1152 = trunc i64 %i_index1.0147 to i32
  %1153 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %460, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %1152) #10
          to label %1154 unwind label %.loopexit

; <label>:1154                                    ; preds = %1150
  %1155 = icmp eq i32 %1153, -1
  br i1 %1155, label %1156, label %1174

; <label>:1156                                    ; preds = %1154
  %1157 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1158 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1159 unwind label %1165

; <label>:1159                                    ; preds = %1156
  %1160 = invoke i8* @_Z17opp_mkindexednamePcPKci(i8* %3, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %1152) #10
          to label %1161 unwind label %1169

; <label>:1161                                    ; preds = %1159
  %1162 = bitcast i8* %1158 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %1162, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i8* %1160) #10
          to label %1163 unwind label %1169

; <label>:1163                                    ; preds = %1161
  %1164 = bitcast i8* %1157 to i8**
  store i8* %1158, i8** %1164, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1157, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1165                                    ; preds = %1156
  %1166 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1167 = extractvalue { i8*, i32 } %1166, 0
  %1168 = extractvalue { i8*, i32 } %1166, 1
  br label %1173

; <label>:1169                                    ; preds = %1161, %1159
  %1170 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1171 = extractvalue { i8*, i32 } %1170, 0
  %1172 = extractvalue { i8*, i32 } %1170, 1
  call void @_ZdlPv(i8* %1158) #11
  br label %1173

; <label>:1173                                    ; preds = %1169, %1165
  %.3847 = phi i32 [ %1172, %1169 ], [ %1168, %1165 ]
  %.38 = phi i8* [ %1171, %1169 ], [ %1167, %1165 ]
  call void @__cxa_free_exception(i8* %1157) #2
  br label %1542

; <label>:1174                                    ; preds = %1154
  %1175 = load %class.cModule** %662, align 8, !tbaa !2
  %1176 = getelementptr inbounds %class.cModule* %1175, i64 0, i32 10
  %1177 = load i32* %1176, align 4, !tbaa !22
  %1178 = icmp slt i32 %1177, 0
  %1179 = sext i32 %1177 to i64
  %1180 = select i1 %1178, i64 1, i64 %1179
  %1181 = icmp slt i64 %i_index1.0147, %1180
  br i1 %1181, label %1198, label %1182

; <label>:1182                                    ; preds = %1174
  %1183 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1184 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1185 unwind label %1189

; <label>:1185                                    ; preds = %1182
  %1186 = bitcast i8* %1184 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %1186, i8* getelementptr inbounds ([49 x i8]* @.str19, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str28, i64 0, i64 0), i32 %1152, i8* getelementptr inbounds ([10 x i8]* @.str26, i64 0, i64 0)) #10
          to label %1187 unwind label %1193

; <label>:1187                                    ; preds = %1185
  %1188 = bitcast i8* %1183 to i8**
  store i8* %1184, i8** %1188, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1183, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1189                                    ; preds = %1182
  %1190 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1191 = extractvalue { i8*, i32 } %1190, 0
  %1192 = extractvalue { i8*, i32 } %1190, 1
  br label %1197

; <label>:1193                                    ; preds = %1185
  %1194 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1195 = extractvalue { i8*, i32 } %1194, 0
  %1196 = extractvalue { i8*, i32 } %1194, 1
  call void @_ZdlPv(i8* %1184) #11
  br label %1197

; <label>:1197                                    ; preds = %1193, %1189
  %.3948 = phi i32 [ %1196, %1193 ], [ %1192, %1189 ]
  %.39 = phi i8* [ %1195, %1193 ], [ %1191, %1189 ]
  call void @__cxa_free_exception(i8* %1183) #2
  br label %1542

; <label>:1198                                    ; preds = %1174
  %1199 = getelementptr inbounds %class.cModule** %662, i64 %i_index1.0147
  %1200 = load %class.cModule** %1199, align 8, !tbaa !2
  %1201 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %1200, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 -1) #10
          to label %1202 unwind label %.loopexit

; <label>:1202                                    ; preds = %1198
  %1203 = icmp eq i32 %1201, -1
  br i1 %1203, label %1204, label %1220

; <label>:1204                                    ; preds = %1202
  %1205 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1206 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1207 unwind label %1211

; <label>:1207                                    ; preds = %1204
  %1208 = bitcast i8* %1206 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %1208, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str28, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0)) #10
          to label %1209 unwind label %1215

; <label>:1209                                    ; preds = %1207
  %1210 = bitcast i8* %1205 to i8**
  store i8* %1206, i8** %1210, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1205, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1211                                    ; preds = %1204
  %1212 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1213 = extractvalue { i8*, i32 } %1212, 0
  %1214 = extractvalue { i8*, i32 } %1212, 1
  br label %1219

; <label>:1215                                    ; preds = %1207
  %1216 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1217 = extractvalue { i8*, i32 } %1216, 0
  %1218 = extractvalue { i8*, i32 } %1216, 1
  call void @_ZdlPv(i8* %1206) #11
  br label %1219

; <label>:1219                                    ; preds = %1215, %1211
  %.4049 = phi i32 [ %1218, %1215 ], [ %1214, %1211 ]
  %.40 = phi i8* [ %1217, %1215 ], [ %1213, %1211 ]
  call void @__cxa_free_exception(i8* %1205) #2
  br label %1542

; <label>:1220                                    ; preds = %1202
  %1221 = load %class.cModule** %1199, align 8, !tbaa !2
  invoke void @_Z7connectP7cModuleiP9cLinkTypeS0_i(%class.cModule* %460, i32 %1153, %class.cLinkType* %1151, %class.cModule* %1221, i32 %1201) #10
          to label %1222 unwind label %.loopexit

; <label>:1222                                    ; preds = %1220
  %1223 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %1224 unwind label %.loopexit

; <label>:1224                                    ; preds = %1222
  br i1 %1223, label %1225, label %1241

; <label>:1225                                    ; preds = %1224
  %1226 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1227 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1228 unwind label %1232

; <label>:1228                                    ; preds = %1225
  %1229 = bitcast i8* %1227 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %1229, i32 11) #10
          to label %1230 unwind label %1236

; <label>:1230                                    ; preds = %1228
  %1231 = bitcast i8* %1226 to i8**
  store i8* %1227, i8** %1231, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1226, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1232                                    ; preds = %1225
  %1233 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1234 = extractvalue { i8*, i32 } %1233, 0
  %1235 = extractvalue { i8*, i32 } %1233, 1
  br label %1240

; <label>:1236                                    ; preds = %1228
  %1237 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1238 = extractvalue { i8*, i32 } %1237, 0
  %1239 = extractvalue { i8*, i32 } %1237, 1
  call void @_ZdlPv(i8* %1227) #11
  br label %1240

; <label>:1240                                    ; preds = %1236, %1232
  %.4150 = phi i32 [ %1239, %1236 ], [ %1235, %1232 ]
  %.41 = phi i8* [ %1238, %1236 ], [ %1234, %1232 ]
  call void @__cxa_free_exception(i8* %1226) #2
  br label %1542

; <label>:1241                                    ; preds = %1224
  %1242 = invoke %class.cObject* @_ZNK5cHead4findEPKc(%class.cHead* @linktypes, i8* getelementptr inbounds ([6 x i8]* @.str17, i64 0, i64 0)) #10
          to label %1243 unwind label %.loopexit

; <label>:1243                                    ; preds = %1241
  %1244 = bitcast %class.cObject* %1242 to %class.cLinkType*
  %1245 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %460, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %1152) #10
          to label %1246 unwind label %.loopexit

; <label>:1246                                    ; preds = %1243
  %1247 = icmp eq i32 %1245, -1
  br i1 %1247, label %1248, label %1266

; <label>:1248                                    ; preds = %1246
  %1249 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1250 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1251 unwind label %1257

; <label>:1251                                    ; preds = %1248
  %1252 = invoke i8* @_Z17opp_mkindexednamePcPKci(i8* %3, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %1152) #10
          to label %1253 unwind label %1261

; <label>:1253                                    ; preds = %1251
  %1254 = bitcast i8* %1250 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %1254, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i8* %1252) #10
          to label %1255 unwind label %1261

; <label>:1255                                    ; preds = %1253
  %1256 = bitcast i8* %1249 to i8**
  store i8* %1250, i8** %1256, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1249, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1257                                    ; preds = %1248
  %1258 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1259 = extractvalue { i8*, i32 } %1258, 0
  %1260 = extractvalue { i8*, i32 } %1258, 1
  br label %1265

; <label>:1261                                    ; preds = %1253, %1251
  %1262 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1263 = extractvalue { i8*, i32 } %1262, 0
  %1264 = extractvalue { i8*, i32 } %1262, 1
  call void @_ZdlPv(i8* %1250) #11
  br label %1265

; <label>:1265                                    ; preds = %1261, %1257
  %.4251 = phi i32 [ %1264, %1261 ], [ %1260, %1257 ]
  %.42 = phi i8* [ %1263, %1261 ], [ %1259, %1257 ]
  call void @__cxa_free_exception(i8* %1249) #2
  br label %1542

; <label>:1266                                    ; preds = %1246
  %1267 = load %class.cModule** %662, align 8, !tbaa !2
  %1268 = getelementptr inbounds %class.cModule* %1267, i64 0, i32 10
  %1269 = load i32* %1268, align 4, !tbaa !22
  %1270 = icmp slt i32 %1269, 0
  %1271 = sext i32 %1269 to i64
  %1272 = select i1 %1270, i64 1, i64 %1271
  %1273 = icmp slt i64 %i_index1.0147, %1272
  br i1 %1273, label %1290, label %1274

; <label>:1274                                    ; preds = %1266
  %1275 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1276 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1277 unwind label %1281

; <label>:1277                                    ; preds = %1274
  %1278 = bitcast i8* %1276 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %1278, i8* getelementptr inbounds ([49 x i8]* @.str19, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str28, i64 0, i64 0), i32 %1152, i8* getelementptr inbounds ([10 x i8]* @.str26, i64 0, i64 0)) #10
          to label %1279 unwind label %1285

; <label>:1279                                    ; preds = %1277
  %1280 = bitcast i8* %1275 to i8**
  store i8* %1276, i8** %1280, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1275, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1281                                    ; preds = %1274
  %1282 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1283 = extractvalue { i8*, i32 } %1282, 0
  %1284 = extractvalue { i8*, i32 } %1282, 1
  br label %1289

; <label>:1285                                    ; preds = %1277
  %1286 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1287 = extractvalue { i8*, i32 } %1286, 0
  %1288 = extractvalue { i8*, i32 } %1286, 1
  call void @_ZdlPv(i8* %1276) #11
  br label %1289

; <label>:1289                                    ; preds = %1285, %1281
  %.4352 = phi i32 [ %1288, %1285 ], [ %1284, %1281 ]
  %.43 = phi i8* [ %1287, %1285 ], [ %1283, %1281 ]
  call void @__cxa_free_exception(i8* %1275) #2
  br label %1542

; <label>:1290                                    ; preds = %1266
  %1291 = load %class.cModule** %1199, align 8, !tbaa !2
  %1292 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %1291, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 -1) #10
          to label %1293 unwind label %.loopexit

; <label>:1293                                    ; preds = %1290
  %1294 = icmp eq i32 %1292, -1
  br i1 %1294, label %1295, label %1311

; <label>:1295                                    ; preds = %1293
  %1296 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1297 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1298 unwind label %1302

; <label>:1298                                    ; preds = %1295
  %1299 = bitcast i8* %1297 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %1299, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str28, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0)) #10
          to label %1300 unwind label %1306

; <label>:1300                                    ; preds = %1298
  %1301 = bitcast i8* %1296 to i8**
  store i8* %1297, i8** %1301, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1296, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1302                                    ; preds = %1295
  %1303 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1304 = extractvalue { i8*, i32 } %1303, 0
  %1305 = extractvalue { i8*, i32 } %1303, 1
  br label %1310

; <label>:1306                                    ; preds = %1298
  %1307 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1308 = extractvalue { i8*, i32 } %1307, 0
  %1309 = extractvalue { i8*, i32 } %1307, 1
  call void @_ZdlPv(i8* %1297) #11
  br label %1310

; <label>:1310                                    ; preds = %1306, %1302
  %.4453 = phi i32 [ %1309, %1306 ], [ %1305, %1302 ]
  %.44 = phi i8* [ %1308, %1306 ], [ %1304, %1302 ]
  call void @__cxa_free_exception(i8* %1296) #2
  br label %1542

; <label>:1311                                    ; preds = %1293
  %1312 = load %class.cModule** %1199, align 8, !tbaa !2
  invoke void @_Z7connectP7cModuleiP9cLinkTypeS0_i(%class.cModule* %1312, i32 %1292, %class.cLinkType* %1244, %class.cModule* %460, i32 %1245) #10
          to label %1313 unwind label %.loopexit

; <label>:1313                                    ; preds = %1311
  %1314 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %1315 unwind label %.loopexit

; <label>:1315                                    ; preds = %1313
  br i1 %1314, label %1316, label %_ZN4cParcvlEv.exit81

; <label>:1316                                    ; preds = %1315
  %1317 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1318 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1319 unwind label %1323

; <label>:1319                                    ; preds = %1316
  %1320 = bitcast i8* %1318 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %1320, i32 11) #10
          to label %1321 unwind label %1327

; <label>:1321                                    ; preds = %1319
  %1322 = bitcast i8* %1317 to i8**
  store i8* %1318, i8** %1322, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1317, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1323                                    ; preds = %1316
  %1324 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1325 = extractvalue { i8*, i32 } %1324, 0
  %1326 = extractvalue { i8*, i32 } %1324, 1
  br label %1331

; <label>:1327                                    ; preds = %1319
  %1328 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1329 = extractvalue { i8*, i32 } %1328, 0
  %1330 = extractvalue { i8*, i32 } %1328, 1
  call void @_ZdlPv(i8* %1318) #11
  br label %1331

; <label>:1331                                    ; preds = %1327, %1323
  %.4554 = phi i32 [ %1330, %1327 ], [ %1326, %1323 ]
  %.45 = phi i8* [ %1329, %1327 ], [ %1325, %1323 ]
  call void @__cxa_free_exception(i8* %1317) #2
  br label %1542

_ZN4cParcvlEv.exit81._crit_edge:                  ; preds = %_ZN4cParcvlEv.exit81, %_ZN4cParcvlEv.exit81.preheader
  %1332 = invoke %class.cObject* @_ZNK5cHead4findEPKc(%class.cHead* @linktypes, i8* getelementptr inbounds ([6 x i8]* @.str17, i64 0, i64 0)) #10
          to label %1333 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1333                                    ; preds = %_ZN4cParcvlEv.exit81._crit_edge
  %1334 = bitcast %class.cObject* %1332 to %class.cLinkType*
  %1335 = invoke noalias i8* @_Znam(i64 48) #12
          to label %1336 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1336                                    ; preds = %1333
  %1337 = bitcast i8* %1335 to %"struct.cPar::ExprElem"*
  %1338 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str25, i64 0, i64 0)) #10
          to label %1339 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1339                                    ; preds = %1336
  store i8 82, i8* %1335, align 1, !tbaa !16
  %1340 = bitcast %class.cPar* %1338 to %class.cObject* (%class.cPar*)***
  %1341 = load %class.cObject* (%class.cPar*)*** %1340, align 8, !tbaa !18
  %1342 = getelementptr inbounds %class.cObject* (%class.cPar*)** %1341, i64 2
  %1343 = load %class.cObject* (%class.cPar*)** %1342, align 8
  %1344 = invoke %class.cObject* %1343(%class.cPar* %1338) #10
          to label %1345 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1345                                    ; preds = %1339
  %1346 = getelementptr inbounds i8* %1335, i64 8
  %1347 = bitcast i8* %1346 to %class.cObject**
  store %class.cObject* %1344, %class.cObject** %1347, align 8, !tbaa !2
  %1348 = getelementptr inbounds i8* %1335, i64 16
  store i8 68, i8* %1348, align 1, !tbaa !16
  %1349 = getelementptr inbounds i8* %1335, i64 24
  %1350 = bitcast i8* %1349 to double*
  store double 1.000000e+00, double* %1350, align 8, !tbaa !20
  %1351 = getelementptr inbounds i8* %1335, i64 32
  store i8 64, i8* %1351, align 1, !tbaa !16
  %1352 = getelementptr inbounds i8* %1335, i64 40
  store i8 43, i8* %1352, align 1, !tbaa !21
  invoke void @_ZN4cPar17cancelRedirectionEv(%class.cPar* %value) #10
          to label %1353 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1353                                    ; preds = %1345
  %1354 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setDoubleValueEPNS_8ExprElemEi(%class.cPar* %value, %"struct.cPar::ExprElem"* %1337, i32 3) #10
          to label %1355 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1355                                    ; preds = %1353
  %1356 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %value) #10
          to label %_ZN4cParcvlEv.exit68 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParcvlEv.exit68:                             ; preds = %1355
  %1357 = trunc i64 %1356 to i32
  %1358 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %74, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %1357) #10
          to label %1359 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1359                                    ; preds = %_ZN4cParcvlEv.exit68
  %1360 = icmp eq i32 %1358, -1
  br i1 %1360, label %1361, label %1379

; <label>:1361                                    ; preds = %1359
  %1362 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1363 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1364 unwind label %1370

; <label>:1364                                    ; preds = %1361
  %1365 = invoke i8* @_Z17opp_mkindexednamePcPKci(i8* %3, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %1357) #10
          to label %1366 unwind label %1374

; <label>:1366                                    ; preds = %1364
  %1367 = bitcast i8* %1363 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %1367, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str24, i64 0, i64 0), i8* %1365) #10
          to label %1368 unwind label %1374

; <label>:1368                                    ; preds = %1366
  %1369 = bitcast i8* %1362 to i8**
  store i8* %1363, i8** %1369, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1362, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1370                                    ; preds = %1361
  %1371 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1372 = extractvalue { i8*, i32 } %1371, 0
  %1373 = extractvalue { i8*, i32 } %1371, 1
  br label %1378

; <label>:1374                                    ; preds = %1366, %1364
  %1375 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1376 = extractvalue { i8*, i32 } %1375, 0
  %1377 = extractvalue { i8*, i32 } %1375, 1
  call void @_ZdlPv(i8* %1363) #11
  br label %1378

; <label>:1378                                    ; preds = %1374, %1370
  %.4655 = phi i32 [ %1377, %1374 ], [ %1373, %1370 ]
  %.46 = phi i8* [ %1376, %1374 ], [ %1372, %1370 ]
  call void @__cxa_free_exception(i8* %1362) #2
  br label %1542

; <label>:1379                                    ; preds = %1359
  %1380 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str6, i64 0, i64 0)) #10
          to label %1381 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1381                                    ; preds = %1379
  %1382 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %1380) #10
          to label %_ZN4cParcvlEv.exit67 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParcvlEv.exit67:                             ; preds = %1381
  %1383 = trunc i64 %1382 to i32
  %1384 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %460, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %1383) #10
          to label %1385 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1385                                    ; preds = %_ZN4cParcvlEv.exit67
  %1386 = icmp eq i32 %1384, -1
  br i1 %1386, label %1387, label %1405

; <label>:1387                                    ; preds = %1385
  %1388 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1389 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1390 unwind label %1396

; <label>:1390                                    ; preds = %1387
  %1391 = invoke i8* @_Z17opp_mkindexednamePcPKci(i8* %3, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %1383) #10
          to label %1392 unwind label %1400

; <label>:1392                                    ; preds = %1390
  %1393 = bitcast i8* %1389 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %1393, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i8* %1391) #10
          to label %1394 unwind label %1400

; <label>:1394                                    ; preds = %1392
  %1395 = bitcast i8* %1388 to i8**
  store i8* %1389, i8** %1395, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1388, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1396                                    ; preds = %1387
  %1397 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1398 = extractvalue { i8*, i32 } %1397, 0
  %1399 = extractvalue { i8*, i32 } %1397, 1
  br label %1404

; <label>:1400                                    ; preds = %1392, %1390
  %1401 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1402 = extractvalue { i8*, i32 } %1401, 0
  %1403 = extractvalue { i8*, i32 } %1401, 1
  call void @_ZdlPv(i8* %1389) #11
  br label %1404

; <label>:1404                                    ; preds = %1400, %1396
  %.4756 = phi i32 [ %1403, %1400 ], [ %1399, %1396 ]
  %.47 = phi i8* [ %1402, %1400 ], [ %1398, %1396 ]
  call void @__cxa_free_exception(i8* %1388) #2
  br label %1542

; <label>:1405                                    ; preds = %1385
  invoke void @_Z7connectP7cModuleiP9cLinkTypeS0_i(%class.cModule* %74, i32 %1358, %class.cLinkType* %1334, %class.cModule* %460, i32 %1384) #10
          to label %1406 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1406                                    ; preds = %1405
  %1407 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %1408 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1408                                    ; preds = %1406
  br i1 %1407, label %1409, label %1425

; <label>:1409                                    ; preds = %1408
  %1410 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1411 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1412 unwind label %1416

; <label>:1412                                    ; preds = %1409
  %1413 = bitcast i8* %1411 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %1413, i32 11) #10
          to label %1414 unwind label %1420

; <label>:1414                                    ; preds = %1412
  %1415 = bitcast i8* %1410 to i8**
  store i8* %1411, i8** %1415, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1410, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1416                                    ; preds = %1409
  %1417 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1418 = extractvalue { i8*, i32 } %1417, 0
  %1419 = extractvalue { i8*, i32 } %1417, 1
  br label %1424

; <label>:1420                                    ; preds = %1412
  %1421 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1422 = extractvalue { i8*, i32 } %1421, 0
  %1423 = extractvalue { i8*, i32 } %1421, 1
  call void @_ZdlPv(i8* %1411) #11
  br label %1424

; <label>:1424                                    ; preds = %1420, %1416
  %.4857 = phi i32 [ %1423, %1420 ], [ %1419, %1416 ]
  %.48 = phi i8* [ %1422, %1420 ], [ %1418, %1416 ]
  call void @__cxa_free_exception(i8* %1410) #2
  br label %1542

; <label>:1425                                    ; preds = %1408
  %1426 = invoke %class.cObject* @_ZNK5cHead4findEPKc(%class.cHead* @linktypes, i8* getelementptr inbounds ([6 x i8]* @.str17, i64 0, i64 0)) #10
          to label %1427 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1427                                    ; preds = %1425
  %1428 = bitcast %class.cObject* %1426 to %class.cLinkType*
  %1429 = invoke noalias i8* @_Znam(i64 48) #12
          to label %1430 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1430                                    ; preds = %1427
  %1431 = bitcast i8* %1429 to %"struct.cPar::ExprElem"*
  %1432 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str25, i64 0, i64 0)) #10
          to label %1433 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1433                                    ; preds = %1430
  store i8 82, i8* %1429, align 1, !tbaa !16
  %1434 = bitcast %class.cPar* %1432 to %class.cObject* (%class.cPar*)***
  %1435 = load %class.cObject* (%class.cPar*)*** %1434, align 8, !tbaa !18
  %1436 = getelementptr inbounds %class.cObject* (%class.cPar*)** %1435, i64 2
  %1437 = load %class.cObject* (%class.cPar*)** %1436, align 8
  %1438 = invoke %class.cObject* %1437(%class.cPar* %1432) #10
          to label %1439 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1439                                    ; preds = %1433
  %1440 = getelementptr inbounds i8* %1429, i64 8
  %1441 = bitcast i8* %1440 to %class.cObject**
  store %class.cObject* %1438, %class.cObject** %1441, align 8, !tbaa !2
  %1442 = getelementptr inbounds i8* %1429, i64 16
  store i8 68, i8* %1442, align 1, !tbaa !16
  %1443 = getelementptr inbounds i8* %1429, i64 24
  %1444 = bitcast i8* %1443 to double*
  store double 1.000000e+00, double* %1444, align 8, !tbaa !20
  %1445 = getelementptr inbounds i8* %1429, i64 32
  store i8 64, i8* %1445, align 1, !tbaa !16
  %1446 = getelementptr inbounds i8* %1429, i64 40
  store i8 43, i8* %1446, align 1, !tbaa !21
  invoke void @_ZN4cPar17cancelRedirectionEv(%class.cPar* %value) #10
          to label %1447 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1447                                    ; preds = %1439
  %1448 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setDoubleValueEPNS_8ExprElemEi(%class.cPar* %value, %"struct.cPar::ExprElem"* %1431, i32 3) #10
          to label %1449 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1449                                    ; preds = %1447
  %1450 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %value) #10
          to label %_ZN4cParcvlEv.exit64 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParcvlEv.exit64:                             ; preds = %1449
  %1451 = trunc i64 %1450 to i32
  %1452 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %74, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %1451) #10
          to label %1453 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1453                                    ; preds = %_ZN4cParcvlEv.exit64
  %1454 = icmp eq i32 %1452, -1
  br i1 %1454, label %1455, label %1473

; <label>:1455                                    ; preds = %1453
  %1456 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1457 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1458 unwind label %1464

; <label>:1458                                    ; preds = %1455
  %1459 = invoke i8* @_Z17opp_mkindexednamePcPKci(i8* %3, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %1451) #10
          to label %1460 unwind label %1468

; <label>:1460                                    ; preds = %1458
  %1461 = bitcast i8* %1457 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %1461, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str24, i64 0, i64 0), i8* %1459) #10
          to label %1462 unwind label %1468

; <label>:1462                                    ; preds = %1460
  %1463 = bitcast i8* %1456 to i8**
  store i8* %1457, i8** %1463, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1456, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1464                                    ; preds = %1455
  %1465 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1466 = extractvalue { i8*, i32 } %1465, 0
  %1467 = extractvalue { i8*, i32 } %1465, 1
  br label %1472

; <label>:1468                                    ; preds = %1460, %1458
  %1469 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1470 = extractvalue { i8*, i32 } %1469, 0
  %1471 = extractvalue { i8*, i32 } %1469, 1
  call void @_ZdlPv(i8* %1457) #11
  br label %1472

; <label>:1472                                    ; preds = %1468, %1464
  %.4958 = phi i32 [ %1471, %1468 ], [ %1467, %1464 ]
  %.49 = phi i8* [ %1470, %1468 ], [ %1466, %1464 ]
  call void @__cxa_free_exception(i8* %1456) #2
  br label %1542

; <label>:1473                                    ; preds = %1453
  %1474 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str6, i64 0, i64 0)) #10
          to label %1475 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1475                                    ; preds = %1473
  %1476 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %1474) #10
          to label %_ZN4cParcvlEv.exit unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParcvlEv.exit:                               ; preds = %1475
  %1477 = trunc i64 %1476 to i32
  %1478 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %460, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %1477) #10
          to label %1479 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1479                                    ; preds = %_ZN4cParcvlEv.exit
  %1480 = icmp eq i32 %1478, -1
  br i1 %1480, label %1481, label %1499

; <label>:1481                                    ; preds = %1479
  %1482 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1483 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1484 unwind label %1490

; <label>:1484                                    ; preds = %1481
  %1485 = invoke i8* @_Z17opp_mkindexednamePcPKci(i8* %3, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %1477) #10
          to label %1486 unwind label %1494

; <label>:1486                                    ; preds = %1484
  %1487 = bitcast i8* %1483 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %1487, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i8* %1485) #10
          to label %1488 unwind label %1494

; <label>:1488                                    ; preds = %1486
  %1489 = bitcast i8* %1482 to i8**
  store i8* %1483, i8** %1489, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1482, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1490                                    ; preds = %1481
  %1491 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1492 = extractvalue { i8*, i32 } %1491, 0
  %1493 = extractvalue { i8*, i32 } %1491, 1
  br label %1498

; <label>:1494                                    ; preds = %1486, %1484
  %1495 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1496 = extractvalue { i8*, i32 } %1495, 0
  %1497 = extractvalue { i8*, i32 } %1495, 1
  call void @_ZdlPv(i8* %1483) #11
  br label %1498

; <label>:1498                                    ; preds = %1494, %1490
  %.5059 = phi i32 [ %1497, %1494 ], [ %1493, %1490 ]
  %.50 = phi i8* [ %1496, %1494 ], [ %1492, %1490 ]
  call void @__cxa_free_exception(i8* %1482) #2
  br label %1542

; <label>:1499                                    ; preds = %1479
  invoke void @_Z7connectP7cModuleiP9cLinkTypeS0_i(%class.cModule* %460, i32 %1478, %class.cLinkType* %1428, %class.cModule* %74, i32 %1452) #10
          to label %1500 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1500                                    ; preds = %1499
  %1501 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %1502 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1502                                    ; preds = %1500
  br i1 %1501, label %1503, label %1519

; <label>:1503                                    ; preds = %1502
  %1504 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1505 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1506 unwind label %1510

; <label>:1506                                    ; preds = %1503
  %1507 = bitcast i8* %1505 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %1507, i32 11) #10
          to label %1508 unwind label %1514

; <label>:1508                                    ; preds = %1506
  %1509 = bitcast i8* %1504 to i8**
  store i8* %1505, i8** %1509, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1504, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1510                                    ; preds = %1503
  %1511 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1512 = extractvalue { i8*, i32 } %1511, 0
  %1513 = extractvalue { i8*, i32 } %1511, 1
  br label %1518

; <label>:1514                                    ; preds = %1506
  %1515 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1516 = extractvalue { i8*, i32 } %1515, 0
  %1517 = extractvalue { i8*, i32 } %1515, 1
  call void @_ZdlPv(i8* %1505) #11
  br label %1518

; <label>:1518                                    ; preds = %1514, %1510
  %.5160 = phi i32 [ %1517, %1514 ], [ %1513, %1510 ]
  %.51 = phi i8* [ %1516, %1514 ], [ %1512, %1510 ]
  call void @__cxa_free_exception(i8* %1504) #2
  br label %1542

; <label>:1519                                    ; preds = %1502
  %1520 = invoke zeroext i1 @_ZNK7cModule24checkInternalConnectionsEv(%class.cModule* %1) #10
          to label %1521 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1521                                    ; preds = %1519
  call void @_ZdaPv(i8* %274) #11
  call void @_ZdaPv(i8* %660) #11
  %1522 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %1523 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1523                                    ; preds = %1521
  br i1 %1522, label %1524, label %1540

; <label>:1524                                    ; preds = %1523
  %1525 = call i8* @__cxa_allocate_exception(i64 8) #2
  %1526 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %1527 unwind label %1531

; <label>:1527                                    ; preds = %1524
  %1528 = bitcast i8* %1526 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %1528, i32 11) #10
          to label %1529 unwind label %1535

; <label>:1529                                    ; preds = %1527
  %1530 = bitcast i8* %1525 to i8**
  store i8* %1526, i8** %1530, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %1525, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %1550 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:1531                                    ; preds = %1524
  %1532 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1533 = extractvalue { i8*, i32 } %1532, 0
  %1534 = extractvalue { i8*, i32 } %1532, 1
  br label %1539

; <label>:1535                                    ; preds = %1527
  %1536 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %1537 = extractvalue { i8*, i32 } %1536, 0
  %1538 = extractvalue { i8*, i32 } %1536, 1
  call void @_ZdlPv(i8* %1526) #11
  br label %1539

; <label>:1539                                    ; preds = %1535, %1531
  %.5261 = phi i32 [ %1538, %1535 ], [ %1534, %1531 ]
  %.52 = phi i8* [ %1537, %1535 ], [ %1533, %1531 ]
  call void @__cxa_free_exception(i8* %1525) #2
  br label %1542

; <label>:1540                                    ; preds = %1523
  invoke void @_ZN6cArrayD1Ev(%class.cArray* %machines) #10
          to label %1541 unwind label %17

; <label>:1541                                    ; preds = %1540
  call void @llvm.lifetime.end(i64 80, i8* %4) #2
  call void @llvm.lifetime.end(i64 64, i8* %3) #2
  call void @_ZN4cParD1Ev(%class.cPar* %value) #10
  call void @llvm.lifetime.end(i64 120, i8* %2) #2
  ret void

; <label>:1542                                    ; preds = %1539, %1518, %1498, %1472, %1424, %1404, %1378, %1331, %1310, %1289, %1265, %1240, %1219, %1197, %1173, %1122, %1102, %1082, %1056, %1036, %1016, %991, %970, %949, %925, %900, %879, %857, %833, %753, %725, %695, %683, %654, %632, %602, %559, %503, %479, %450, %438, %417, %367, %339, %309, %297, %268, %246, %216, %173, %117, %93, %64, %52, %31, %.loopexit.split-lp
  %.5362 = phi i32 [ %22, %.loopexit.split-lp ], [ %.04, %31 ], [ %.110, %64 ], [ %.211, %93 ], [ %.312, %117 ], [ %.413, %173 ], [ %.514, %216 ], [ %.615, %246 ], [ %.716, %268 ], [ %.817, %309 ], [ %.918, %339 ], [ %.1019, %367 ], [ %300, %297 ], [ %.1120, %417 ], [ %.1221, %450 ], [ %.1322, %479 ], [ %.1423, %503 ], [ %.1524, %559 ], [ %.1625, %602 ], [ %.1726, %632 ], [ %.1827, %654 ], [ %.1928, %695 ], [ %.2029, %725 ], [ %.2130, %753 ], [ %686, %683 ], [ %.2332, %833 ], [ %.2433, %857 ], [ %.2534, %879 ], [ %.2635, %900 ], [ %.2736, %925 ], [ %.2837, %949 ], [ %.2938, %970 ], [ %.3039, %991 ], [ %.3140, %1016 ], [ %.3241, %1036 ], [ %.3342, %1056 ], [ %.3443, %1082 ], [ %.3544, %1102 ], [ %.3645, %1122 ], [ %.3847, %1173 ], [ %.3948, %1197 ], [ %.4049, %1219 ], [ %.4150, %1240 ], [ %.4251, %1265 ], [ %.4352, %1289 ], [ %.4453, %1310 ], [ %.4554, %1331 ], [ %.4655, %1378 ], [ %.4756, %1404 ], [ %.4857, %1424 ], [ %.4958, %1472 ], [ %.5059, %1498 ], [ %.5160, %1518 ], [ %.5261, %1539 ], [ %441, %438 ], [ %55, %52 ]
  %.53 = phi i8* [ %21, %.loopexit.split-lp ], [ %.0, %31 ], [ %.1, %64 ], [ %.2, %93 ], [ %.3, %117 ], [ %.4, %173 ], [ %.5, %216 ], [ %.6, %246 ], [ %.7, %268 ], [ %.8, %309 ], [ %.9, %339 ], [ %.10, %367 ], [ %299, %297 ], [ %.11, %417 ], [ %.12, %450 ], [ %.13, %479 ], [ %.14, %503 ], [ %.15, %559 ], [ %.16, %602 ], [ %.17, %632 ], [ %.18, %654 ], [ %.19, %695 ], [ %.20, %725 ], [ %.21, %753 ], [ %685, %683 ], [ %.23, %833 ], [ %.24, %857 ], [ %.25, %879 ], [ %.26, %900 ], [ %.27, %925 ], [ %.28, %949 ], [ %.29, %970 ], [ %.30, %991 ], [ %.31, %1016 ], [ %.32, %1036 ], [ %.33, %1056 ], [ %.34, %1082 ], [ %.35, %1102 ], [ %.36, %1122 ], [ %.38, %1173 ], [ %.39, %1197 ], [ %.40, %1219 ], [ %.41, %1240 ], [ %.42, %1265 ], [ %.43, %1289 ], [ %.44, %1310 ], [ %.45, %1331 ], [ %.46, %1378 ], [ %.47, %1404 ], [ %.48, %1424 ], [ %.49, %1472 ], [ %.50, %1498 ], [ %.51, %1518 ], [ %.52, %1539 ], [ %440, %438 ], [ %54, %52 ]
  invoke void @_ZN6cArrayD1Ev(%class.cArray* %machines) #10
          to label %1543 unwind label %1547

; <label>:1543                                    ; preds = %1542, %17
  %.5463 = phi i32 [ %.5362, %1542 ], [ %20, %17 ]
  %.54 = phi i8* [ %.53, %1542 ], [ %19, %17 ]
  invoke void @_ZN4cParD1Ev(%class.cPar* %value) #10
          to label %1544 unwind label %1547

; <label>:1544                                    ; preds = %1543
  %1545 = insertvalue { i8*, i32 } undef, i8* %.54, 0
  %1546 = insertvalue { i8*, i32 } %1545, i32 %.5463, 1
  resume { i8*, i32 } %1546

; <label>:1547                                    ; preds = %1543, %1542
  %1548 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          catch i8* null
  %1549 = extractvalue { i8*, i32 } %1548, 0
  call void @__clang_call_terminate(i8* %1549) #14
  unreachable

; <label>:1550                                    ; preds = %1529, %1508, %1488, %1462, %1414, %1394, %1368, %1321, %1300, %1279, %1255, %1230, %1209, %1187, %1163, %1112, %1092, %1072, %1046, %1026, %1006, %981, %960, %939, %915, %890, %869, %847, %823, %743, %715, %681, %644, %622, %592, %549, %493, %469, %436, %407, %357, %329, %295, %258, %236, %206, %163, %107, %83, %50, %15
  unreachable
}
