define void @_ZN8SmallLAN13doBuildInsideEv(%class.SmallLAN* %this) unnamed_addr #0 align 2 {
  %value = alloca %class.cPar, align 8
  %b1 = alloca [64 x i8], align 16
  %machines = alloca %class.cArray, align 8
  %1 = getelementptr inbounds %class.SmallLAN* %this, i64 0, i32 0, i32 0
  %2 = bitcast %class.cPar* %value to i8*
  call void @llvm.lifetime.start(i64 120, i8* %2) #2
  call void @_ZN4cParC1EPKc(%class.cPar* %value, i8* null) #10
  %3 = getelementptr inbounds [64 x i8]* %b1, i64 0, i64 0
  call void @llvm.lifetime.start(i64 64, i8* %3) #2
  %4 = bitcast %class.cArray* %machines to i8*
  call void @llvm.lifetime.start(i64 80, i8* %4) #2
  invoke void @_ZN6cArrayC1EPKcii(%class.cArray* %machines, i8* null, i32 0, i32 10) #10
          to label %5 unwind label %17

; <label>:5                                       ; preds = %0
  %6 = invoke %class.cObject* @_ZNK5cHead4findEPKc(%class.cHead* @modtypes, i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0)) #10
          to label %7 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:7                                       ; preds = %5
  %8 = bitcast %class.cObject* %6 to %class.cModuleType*
  %9 = icmp eq %class.cObject* %6, null
  br i1 %9, label %10, label %32

; <label>:10                                      ; preds = %7
  %11 = call i8* @__cxa_allocate_exception(i64 8) #2
  %12 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %13 unwind label %23

; <label>:13                                      ; preds = %10
  %14 = bitcast i8* %12 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %14, i8* getelementptr inbounds ([43 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0)) #10
          to label %15 unwind label %27

; <label>:15                                      ; preds = %13
  %16 = bitcast i8* %11 to i8**
  store i8* %12, i8** %16, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %11, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:17                                      ; preds = %758, %0
  %18 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %19 = extractvalue { i8*, i32 } %18, 0
  %20 = extractvalue { i8*, i32 } %18, 1
  br label %761

.loopexit:                                        ; preds = %424, %472, %494, %496, %517, %564, %585, %587, %515, %.lr.ph
  %lpad.loopexit = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.loopexit.split-lp

.loopexit.split-lp.loopexit:                      ; preds = %381, %378, %375, %.lr.ph73
  %lpad.loopexit49 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.loopexit.split-lp

.loopexit.split-lp.loopexit.split-lp.loopexit:    ; preds = %.lr.ph76, %281, %_ZN4cParaSEPKc.exit47, %287, %313, %317, %320, %340, %_ZN6cArrayixEi.exit48, %348, %349, %._crit_edge, %387, %283, %343
  %lpad.loopexit52 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.loopexit.split-lp

.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %128, %126, %123, %.lr.ph80
  %lpad.loopexit54 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.loopexit.split-lp

.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %249, %226, %196, %402, %418, %180, %153, %137, %607, %94, %673, %38, %5, %747, %739, %737, %726, %718, %717, %706, %697, %686, %_ZN4cParcvlEv.exit, %671, %660, %652, %651, %640, %631, %620, %_ZN4cParcvlEv.exit38, %_ZN4cParcvlEv.exit42._crit_edge, %595, %574, %553, %529, %504, %483, %461, %437, %416, %408, %399, %397, %._crit_edge77, %357, %329, %295, %269, %258, %247, %236, %225, %219, %218, %217, %206, %194, %186, %177, %175, %174, %163, %151, %143, %134, %._crit_edge81, %107, %99, %98, %_ZN6cArrayixEi.exit, %83, %75, %72, %68, %50, %42, %_ZN4cParaSEPKc.exit, %36, %32, %15
  %lpad.loopexit.split-lp55 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.loopexit.split-lp

.loopexit.split-lp:                               ; preds = %.loopexit.split-lp.loopexit, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %.loopexit.split-lp.loopexit.split-lp.loopexit, %.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %.loopexit ], [ %lpad.loopexit49, %.loopexit.split-lp.loopexit ], [ %lpad.loopexit52, %.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit54, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp55, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ]
  %21 = extractvalue { i8*, i32 } %lpad.phi, 0
  %22 = extractvalue { i8*, i32 } %lpad.phi, 1
  br label %760

; <label>:23                                      ; preds = %10
  %24 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %25 = extractvalue { i8*, i32 } %24, 0
  %26 = extractvalue { i8*, i32 } %24, 1
  br label %31

; <label>:27                                      ; preds = %13
  %28 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  %30 = extractvalue { i8*, i32 } %28, 1
  call void @_ZdlPv(i8* %12) #11
  br label %31

; <label>:31                                      ; preds = %27, %23
  %.01 = phi i32 [ %30, %27 ], [ %26, %23 ]
  %.0 = phi i8* [ %29, %27 ], [ %25, %23 ]
  call void @__cxa_free_exception(i8* %11) #2
  br label %760

; <label>:32                                      ; preds = %7
  %33 = invoke i8* @_ZN7cObjectnwEm(i64 120) #10
          to label %34 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:34                                      ; preds = %32
  %35 = bitcast i8* %33 to %class.cPar*
  invoke void @_ZN4cParC1EPKc(%class.cPar* %35, i8* null) #10
          to label %36 unwind label %52

; <label>:36                                      ; preds = %34
  %37 = invoke i8* @_ZN7cModule10machineParEPKc(%class.cModule* %1, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0)) #10
          to label %38 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:38                                      ; preds = %36
  %39 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setStringValueEPKc(%class.cPar* %35, i8* %37) #10
          to label %_ZN4cParaSEPKc.exit unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParaSEPKc.exit:                              ; preds = %38
  %40 = bitcast i8* %33 to %class.cObject*
  %41 = invoke i32 @_ZN6cArray3addEP7cObject(%class.cArray* %machines, %class.cObject* %40) #10
          to label %42 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:42                                      ; preds = %_ZN4cParaSEPKc.exit
  %43 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %44 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:44                                      ; preds = %42
  br i1 %43, label %45, label %65

; <label>:45                                      ; preds = %44
  %46 = call i8* @__cxa_allocate_exception(i64 8) #2
  %47 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %48 unwind label %56

; <label>:48                                      ; preds = %45
  %49 = bitcast i8* %47 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %49, i32 11) #10
          to label %50 unwind label %60

; <label>:50                                      ; preds = %48
  %51 = bitcast i8* %46 to i8**
  store i8* %47, i8** %51, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %46, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:52                                      ; preds = %34
  %53 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  %55 = extractvalue { i8*, i32 } %53, 1
  call void @_ZdlPv(i8* %33) #11
  br label %760

; <label>:56                                      ; preds = %45
  %57 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  %59 = extractvalue { i8*, i32 } %57, 1
  br label %64

; <label>:60                                      ; preds = %48
  %61 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  %63 = extractvalue { i8*, i32 } %61, 1
  call void @_ZdlPv(i8* %47) #11
  br label %64

; <label>:64                                      ; preds = %60, %56
  %.110 = phi i32 [ %63, %60 ], [ %59, %56 ]
  %.1 = phi i8* [ %62, %60 ], [ %58, %56 ]
  call void @__cxa_free_exception(i8* %46) #2
  br label %760

; <label>:65                                      ; preds = %44
  %66 = load %class.cNetMod** getelementptr inbounds (%class.cSimulation* @simulation, i64 0, i32 10), align 8, !tbaa !6
  %67 = icmp eq %class.cNetMod* %66, null
  br i1 %67, label %72, label %68

; <label>:68                                      ; preds = %65
  %69 = invoke i32 @_ZN7cNetMod16isLocalMachineInERK6cArray(%class.cNetMod* %66, %class.cArray* dereferenceable(80) %machines) #10
          to label %70 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:70                                      ; preds = %68
  %71 = icmp ne i32 %69, 0
  br label %72

; <label>:72                                      ; preds = %70, %65
  %73 = phi i1 [ true, %65 ], [ %71, %70 ]
  %74 = invoke %class.cModule* @_ZN11cModuleType6createEPKcP7cModuleb(%class.cModuleType* %8, i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), %class.cModule* %1, i1 zeroext %73) #10
          to label %75 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:75                                      ; preds = %72
  %76 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %77 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:77                                      ; preds = %75
  br i1 %76, label %78, label %94

; <label>:78                                      ; preds = %77
  %79 = call i8* @__cxa_allocate_exception(i64 8) #2
  %80 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %81 unwind label %85

; <label>:81                                      ; preds = %78
  %82 = bitcast i8* %80 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %82, i32 11) #10
          to label %83 unwind label %89

; <label>:83                                      ; preds = %81
  %84 = bitcast i8* %79 to i8**
  store i8* %80, i8** %84, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %79, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:85                                      ; preds = %78
  %86 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %87 = extractvalue { i8*, i32 } %86, 0
  %88 = extractvalue { i8*, i32 } %86, 1
  br label %93

; <label>:89                                      ; preds = %81
  %90 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %91 = extractvalue { i8*, i32 } %90, 0
  %92 = extractvalue { i8*, i32 } %90, 1
  call void @_ZdlPv(i8* %80) #11
  br label %93

; <label>:93                                      ; preds = %89, %85
  %.211 = phi i32 [ %92, %89 ], [ %88, %85 ]
  %.2 = phi i8* [ %91, %89 ], [ %87, %85 ]
  call void @__cxa_free_exception(i8* %79) #2
  br label %760

; <label>:94                                      ; preds = %77
  %95 = invoke %class.cObject* @_ZN6cArray3getEi(%class.cArray* %machines, i32 0) #10
          to label %_ZN6cArrayixEi.exit unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN6cArrayixEi.exit:                              ; preds = %94
  %96 = bitcast %class.cObject* %95 to %class.cPar*
  %97 = invoke i8* @_ZN4cPar11stringValueEv(%class.cPar* %96) #10
          to label %98 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:98                                      ; preds = %_ZN6cArrayixEi.exit
  invoke void @_ZN7cModule13setMachineParEPKcS1_(%class.cModule* %74, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0), i8* %97) #10
          to label %99 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:99                                      ; preds = %98
  %100 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %101 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:101                                     ; preds = %99
  br i1 %100, label %102, label %118

; <label>:102                                     ; preds = %101
  %103 = call i8* @__cxa_allocate_exception(i64 8) #2
  %104 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %105 unwind label %109

; <label>:105                                     ; preds = %102
  %106 = bitcast i8* %104 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %106, i32 11) #10
          to label %107 unwind label %113

; <label>:107                                     ; preds = %105
  %108 = bitcast i8* %103 to i8**
  store i8* %104, i8** %108, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %103, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:109                                     ; preds = %102
  %110 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %111 = extractvalue { i8*, i32 } %110, 0
  %112 = extractvalue { i8*, i32 } %110, 1
  br label %117

; <label>:113                                     ; preds = %105
  %114 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %115 = extractvalue { i8*, i32 } %114, 0
  %116 = extractvalue { i8*, i32 } %114, 1
  call void @_ZdlPv(i8* %104) #11
  br label %117

; <label>:117                                     ; preds = %113, %109
  %.312 = phi i32 [ %116, %113 ], [ %112, %109 ]
  %.3 = phi i8* [ %115, %113 ], [ %111, %109 ]
  call void @__cxa_free_exception(i8* %103) #2
  br label %760

; <label>:118                                     ; preds = %101
  %119 = getelementptr inbounds %class.cModule* %74, i64 0, i32 6, i32 5
  %120 = load i32* %119, align 4, !tbaa !14
  %121 = icmp sgt i32 %120, -1
  br i1 %121, label %.lr.ph80, label %._crit_edge81

.lr.ph80:                                         ; preds = %118, %130
  %k.078 = phi i32 [ %131, %130 ], [ 0, %118 ]
  %122 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEi(%class.cModule* %74, i32 %k.078) #10
          to label %123 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:123                                     ; preds = %.lr.ph80
  %124 = invoke zeroext i1 @_ZNK4cPar7isInputEv(%class.cPar* %122) #10
          to label %125 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:125                                     ; preds = %123
  br i1 %124, label %126, label %130

; <label>:126                                     ; preds = %125
  %127 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEi(%class.cModule* %74, i32 %k.078) #10
          to label %128 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:128                                     ; preds = %126
  %129 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar4readEv(%class.cPar* %127) #10
          to label %130 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:130                                     ; preds = %125, %128
  %131 = add nuw nsw i32 %k.078, 1
  %132 = icmp slt i32 %k.078, %120
  br i1 %132, label %.lr.ph80, label %._crit_edge81

._crit_edge81:                                    ; preds = %130, %118
  %133 = invoke noalias i8* @_Znam(i64 48) #12
          to label %134 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:134                                     ; preds = %._crit_edge81
  %135 = bitcast i8* %133 to %"struct.cPar::ExprElem"*
  %136 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str6, i64 0, i64 0)) #10
          to label %137 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:137                                     ; preds = %134
  store i8 82, i8* %133, align 1, !tbaa !16
  %138 = bitcast %class.cPar* %136 to %class.cObject* (%class.cPar*)***
  %139 = load %class.cObject* (%class.cPar*)*** %138, align 8, !tbaa !18
  %140 = getelementptr inbounds %class.cObject* (%class.cPar*)** %139, i64 2
  %141 = load %class.cObject* (%class.cPar*)** %140, align 8
  %142 = invoke %class.cObject* %141(%class.cPar* %136) #10
          to label %143 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:143                                     ; preds = %137
  %144 = getelementptr inbounds i8* %133, i64 8
  %145 = bitcast i8* %144 to %class.cObject**
  store %class.cObject* %142, %class.cObject** %145, align 8, !tbaa !2
  %146 = getelementptr inbounds i8* %133, i64 16
  store i8 68, i8* %146, align 1, !tbaa !16
  %147 = getelementptr inbounds i8* %133, i64 24
  %148 = bitcast i8* %147 to double*
  store double 1.000000e+00, double* %148, align 8, !tbaa !20
  %149 = getelementptr inbounds i8* %133, i64 32
  store i8 64, i8* %149, align 1, !tbaa !16
  %150 = getelementptr inbounds i8* %133, i64 40
  store i8 43, i8* %150, align 1, !tbaa !21
  invoke void @_ZN4cPar17cancelRedirectionEv(%class.cPar* %value) #10
          to label %151 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:151                                     ; preds = %143
  %152 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setDoubleValueEPNS_8ExprElemEi(%class.cPar* %value, %"struct.cPar::ExprElem"* %135, i32 3) #10
          to label %153 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:153                                     ; preds = %151
  %154 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %value) #10
          to label %155 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:155                                     ; preds = %153
  %156 = trunc i64 %154 to i32
  %157 = icmp slt i32 %156, 0
  br i1 %157, label %158, label %174

; <label>:158                                     ; preds = %155
  %159 = call i8* @__cxa_allocate_exception(i64 8) #2
  %160 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %161 unwind label %165

; <label>:161                                     ; preds = %158
  %162 = bitcast i8* %160 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %162, i8* getelementptr inbounds ([58 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %156, i8* getelementptr inbounds ([9 x i8]* @.str9, i64 0, i64 0)) #10
          to label %163 unwind label %169

; <label>:163                                     ; preds = %161
  %164 = bitcast i8* %159 to i8**
  store i8* %160, i8** %164, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %159, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:165                                     ; preds = %158
  %166 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %167 = extractvalue { i8*, i32 } %166, 0
  %168 = extractvalue { i8*, i32 } %166, 1
  br label %173

; <label>:169                                     ; preds = %161
  %170 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %171 = extractvalue { i8*, i32 } %170, 0
  %172 = extractvalue { i8*, i32 } %170, 1
  call void @_ZdlPv(i8* %160) #11
  br label %173

; <label>:173                                     ; preds = %169, %165
  %.413 = phi i32 [ %172, %169 ], [ %168, %165 ]
  %.4 = phi i8* [ %171, %169 ], [ %167, %165 ]
  call void @__cxa_free_exception(i8* %159) #2
  br label %760

; <label>:174                                     ; preds = %155
  invoke void @_ZN7cModule11setGateSizeEPKci(%class.cModule* %74, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %156) #10
          to label %175 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:175                                     ; preds = %174
  %176 = invoke noalias i8* @_Znam(i64 48) #12
          to label %177 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:177                                     ; preds = %175
  %178 = bitcast i8* %176 to %"struct.cPar::ExprElem"*
  %179 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str6, i64 0, i64 0)) #10
          to label %180 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:180                                     ; preds = %177
  store i8 82, i8* %176, align 1, !tbaa !16
  %181 = bitcast %class.cPar* %179 to %class.cObject* (%class.cPar*)***
  %182 = load %class.cObject* (%class.cPar*)*** %181, align 8, !tbaa !18
  %183 = getelementptr inbounds %class.cObject* (%class.cPar*)** %182, i64 2
  %184 = load %class.cObject* (%class.cPar*)** %183, align 8
  %185 = invoke %class.cObject* %184(%class.cPar* %179) #10
          to label %186 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:186                                     ; preds = %180
  %187 = getelementptr inbounds i8* %176, i64 8
  %188 = bitcast i8* %187 to %class.cObject**
  store %class.cObject* %185, %class.cObject** %188, align 8, !tbaa !2
  %189 = getelementptr inbounds i8* %176, i64 16
  store i8 68, i8* %189, align 1, !tbaa !16
  %190 = getelementptr inbounds i8* %176, i64 24
  %191 = bitcast i8* %190 to double*
  store double 1.000000e+00, double* %191, align 8, !tbaa !20
  %192 = getelementptr inbounds i8* %176, i64 32
  store i8 64, i8* %192, align 1, !tbaa !16
  %193 = getelementptr inbounds i8* %176, i64 40
  store i8 43, i8* %193, align 1, !tbaa !21
  invoke void @_ZN4cPar17cancelRedirectionEv(%class.cPar* %value) #10
          to label %194 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:194                                     ; preds = %186
  %195 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setDoubleValueEPNS_8ExprElemEi(%class.cPar* %value, %"struct.cPar::ExprElem"* %178, i32 3) #10
          to label %196 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:196                                     ; preds = %194
  %197 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %value) #10
          to label %198 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:198                                     ; preds = %196
  %199 = trunc i64 %197 to i32
  %200 = icmp slt i32 %199, 0
  br i1 %200, label %201, label %217

; <label>:201                                     ; preds = %198
  %202 = call i8* @__cxa_allocate_exception(i64 8) #2
  %203 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %204 unwind label %208

; <label>:204                                     ; preds = %201
  %205 = bitcast i8* %203 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %205, i8* getelementptr inbounds ([58 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %199, i8* getelementptr inbounds ([9 x i8]* @.str9, i64 0, i64 0)) #10
          to label %206 unwind label %212

; <label>:206                                     ; preds = %204
  %207 = bitcast i8* %202 to i8**
  store i8* %203, i8** %207, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %202, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:208                                     ; preds = %201
  %209 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %210 = extractvalue { i8*, i32 } %209, 0
  %211 = extractvalue { i8*, i32 } %209, 1
  br label %216

; <label>:212                                     ; preds = %204
  %213 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %214 = extractvalue { i8*, i32 } %213, 0
  %215 = extractvalue { i8*, i32 } %213, 1
  call void @_ZdlPv(i8* %203) #11
  br label %216

; <label>:216                                     ; preds = %212, %208
  %.514 = phi i32 [ %215, %212 ], [ %211, %208 ]
  %.5 = phi i8* [ %214, %212 ], [ %210, %208 ]
  call void @__cxa_free_exception(i8* %202) #2
  br label %760

; <label>:217                                     ; preds = %198
  invoke void @_ZN7cModule11setGateSizeEPKci(%class.cModule* %74, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %199) #10
          to label %218 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:218                                     ; preds = %217
  invoke void @_ZN7cModule16setDisplayStringEiPKcb(%class.cModule* %74, i32 0, i8* getelementptr inbounds ([10 x i8]* @.str11, i64 0, i64 0), i1 zeroext true) #10
          to label %219 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:219                                     ; preds = %218
  %220 = bitcast %class.cModule* %74 to i32 (%class.cModule*)***
  %221 = load i32 (%class.cModule*)*** %220, align 8, !tbaa !18
  %222 = getelementptr inbounds i32 (%class.cModule*)** %221, i64 21
  %223 = load i32 (%class.cModule*)** %222, align 8
  %224 = invoke i32 %223(%class.cModule* %74) #10
          to label %225 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:225                                     ; preds = %219
  invoke void @_ZN6cArray5clearEv(%class.cArray* %machines) #10
          to label %226 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:226                                     ; preds = %225
  %227 = invoke %class.cObject* @_ZNK5cHead4findEPKc(%class.cHead* @modtypes, i8* getelementptr inbounds ([10 x i8]* @.str12, i64 0, i64 0)) #10
          to label %228 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:228                                     ; preds = %226
  %229 = bitcast %class.cObject* %227 to %class.cModuleType*
  %230 = icmp eq %class.cObject* %227, null
  br i1 %230, label %231, label %247

; <label>:231                                     ; preds = %228
  %232 = call i8* @__cxa_allocate_exception(i64 8) #2
  %233 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %234 unwind label %238

; <label>:234                                     ; preds = %231
  %235 = bitcast i8* %233 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %235, i8* getelementptr inbounds ([43 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str12, i64 0, i64 0)) #10
          to label %236 unwind label %242

; <label>:236                                     ; preds = %234
  %237 = bitcast i8* %232 to i8**
  store i8* %233, i8** %237, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %232, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:238                                     ; preds = %231
  %239 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %240 = extractvalue { i8*, i32 } %239, 0
  %241 = extractvalue { i8*, i32 } %239, 1
  br label %246

; <label>:242                                     ; preds = %234
  %243 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %244 = extractvalue { i8*, i32 } %243, 0
  %245 = extractvalue { i8*, i32 } %243, 1
  call void @_ZdlPv(i8* %233) #11
  br label %246

; <label>:246                                     ; preds = %242, %238
  %.615 = phi i32 [ %245, %242 ], [ %241, %238 ]
  %.6 = phi i8* [ %244, %242 ], [ %240, %238 ]
  call void @__cxa_free_exception(i8* %232) #2
  br label %760

; <label>:247                                     ; preds = %228
  %248 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str6, i64 0, i64 0)) #10
          to label %249 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:249                                     ; preds = %247
  %250 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %248) #10
          to label %_ZN4cParcvlEv.exit46 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParcvlEv.exit46:                             ; preds = %249
  %251 = trunc i64 %250 to i32
  %252 = icmp slt i32 %251, 1
  br i1 %252, label %253, label %269

; <label>:253                                     ; preds = %_ZN4cParcvlEv.exit46
  %254 = call i8* @__cxa_allocate_exception(i64 8) #2
  %255 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %256 unwind label %260

; <label>:256                                     ; preds = %253
  %257 = bitcast i8* %255 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %257, i8* getelementptr inbounds ([65 x i8]* @.str13, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str14, i64 0, i64 0), i32 %251, i8* getelementptr inbounds ([9 x i8]* @.str9, i64 0, i64 0)) #10
          to label %258 unwind label %264

; <label>:258                                     ; preds = %256
  %259 = bitcast i8* %254 to i8**
  store i8* %255, i8** %259, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %254, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:260                                     ; preds = %253
  %261 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %262 = extractvalue { i8*, i32 } %261, 0
  %263 = extractvalue { i8*, i32 } %261, 1
  br label %268

; <label>:264                                     ; preds = %256
  %265 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %266 = extractvalue { i8*, i32 } %265, 0
  %267 = extractvalue { i8*, i32 } %265, 1
  call void @_ZdlPv(i8* %255) #11
  br label %268

; <label>:268                                     ; preds = %264, %260
  %.716 = phi i32 [ %267, %264 ], [ %263, %260 ]
  %.7 = phi i8* [ %266, %264 ], [ %262, %260 ]
  call void @__cxa_free_exception(i8* %254) #2
  br label %760

; <label>:269                                     ; preds = %_ZN4cParcvlEv.exit46
  %270 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %250, i64 8)
  %271 = extractvalue { i64, i1 } %270, 1
  %272 = extractvalue { i64, i1 } %270, 0
  %273 = select i1 %271, i64 -1, i64 %272
  %274 = invoke noalias i8* @_Znam(i64 %273) #12
          to label %275 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:275                                     ; preds = %269
  %276 = bitcast i8* %274 to %class.cModule**
  %277 = icmp sgt i64 %250, 0
  br i1 %277, label %.lr.ph76, label %._crit_edge77

.lr.ph76:                                         ; preds = %275, %394
  %sub_i.074 = phi i64 [ %395, %394 ], [ 0, %275 ]
  %278 = invoke i8* @_ZN7cObjectnwEm(i64 120) #10
          to label %279 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:279                                     ; preds = %.lr.ph76
  %280 = bitcast i8* %278 to %class.cPar*
  invoke void @_ZN4cParC1EPKc(%class.cPar* %280, i8* null) #10
          to label %281 unwind label %297

; <label>:281                                     ; preds = %279
  %282 = invoke i8* @_ZN7cModule10machineParEPKc(%class.cModule* %1, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0)) #10
          to label %283 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:283                                     ; preds = %281
  %284 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setStringValueEPKc(%class.cPar* %280, i8* %282) #10
          to label %_ZN4cParaSEPKc.exit47 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

_ZN4cParaSEPKc.exit47:                            ; preds = %283
  %285 = bitcast i8* %278 to %class.cObject*
  %286 = invoke i32 @_ZN6cArray3addEP7cObject(%class.cArray* %machines, %class.cObject* %285) #10
          to label %287 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:287                                     ; preds = %_ZN4cParaSEPKc.exit47
  %288 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %289 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:289                                     ; preds = %287
  br i1 %288, label %290, label %310

; <label>:290                                     ; preds = %289
  %291 = call i8* @__cxa_allocate_exception(i64 8) #2
  %292 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %293 unwind label %301

; <label>:293                                     ; preds = %290
  %294 = bitcast i8* %292 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %294, i32 11) #10
          to label %295 unwind label %305

; <label>:295                                     ; preds = %293
  %296 = bitcast i8* %291 to i8**
  store i8* %292, i8** %296, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %291, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:297                                     ; preds = %279
  %298 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %299 = extractvalue { i8*, i32 } %298, 0
  %300 = extractvalue { i8*, i32 } %298, 1
  call void @_ZdlPv(i8* %278) #11
  br label %760

; <label>:301                                     ; preds = %290
  %302 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %303 = extractvalue { i8*, i32 } %302, 0
  %304 = extractvalue { i8*, i32 } %302, 1
  br label %309

; <label>:305                                     ; preds = %293
  %306 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %307 = extractvalue { i8*, i32 } %306, 0
  %308 = extractvalue { i8*, i32 } %306, 1
  call void @_ZdlPv(i8* %292) #11
  br label %309

; <label>:309                                     ; preds = %305, %301
  %.817 = phi i32 [ %308, %305 ], [ %304, %301 ]
  %.8 = phi i8* [ %307, %305 ], [ %303, %301 ]
  call void @__cxa_free_exception(i8* %291) #2
  br label %760

; <label>:310                                     ; preds = %289
  %311 = load %class.cNetMod** getelementptr inbounds (%class.cSimulation* @simulation, i64 0, i32 10), align 8, !tbaa !6
  %312 = icmp eq %class.cNetMod* %311, null
  br i1 %312, label %317, label %313

; <label>:313                                     ; preds = %310
  %314 = invoke i32 @_ZN7cNetMod16isLocalMachineInERK6cArray(%class.cNetMod* %311, %class.cArray* dereferenceable(80) %machines) #10
          to label %315 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:315                                     ; preds = %313
  %316 = icmp ne i32 %314, 0
  br label %317

; <label>:317                                     ; preds = %315, %310
  %318 = phi i1 [ true, %310 ], [ %316, %315 ]
  %319 = invoke %class.cModule* @_ZN11cModuleType6createEPKcP7cModuleb(%class.cModuleType* %229, i8* getelementptr inbounds ([5 x i8]* @.str14, i64 0, i64 0), %class.cModule* %1, i1 zeroext %318) #10
          to label %320 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:320                                     ; preds = %317
  %321 = getelementptr inbounds %class.cModule** %276, i64 %sub_i.074
  store %class.cModule* %319, %class.cModule** %321, align 8, !tbaa !2
  %322 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %323 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:323                                     ; preds = %320
  br i1 %322, label %324, label %340

; <label>:324                                     ; preds = %323
  %325 = call i8* @__cxa_allocate_exception(i64 8) #2
  %326 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %327 unwind label %331

; <label>:327                                     ; preds = %324
  %328 = bitcast i8* %326 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %328, i32 11) #10
          to label %329 unwind label %335

; <label>:329                                     ; preds = %327
  %330 = bitcast i8* %325 to i8**
  store i8* %326, i8** %330, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %325, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:331                                     ; preds = %324
  %332 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %333 = extractvalue { i8*, i32 } %332, 0
  %334 = extractvalue { i8*, i32 } %332, 1
  br label %339

; <label>:335                                     ; preds = %327
  %336 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %337 = extractvalue { i8*, i32 } %336, 0
  %338 = extractvalue { i8*, i32 } %336, 1
  call void @_ZdlPv(i8* %326) #11
  br label %339

; <label>:339                                     ; preds = %335, %331
  %.918 = phi i32 [ %338, %335 ], [ %334, %331 ]
  %.9 = phi i8* [ %337, %335 ], [ %333, %331 ]
  call void @__cxa_free_exception(i8* %325) #2
  br label %760

; <label>:340                                     ; preds = %323
  %341 = load %class.cModule** %321, align 8, !tbaa !2
  %342 = trunc i64 %sub_i.074 to i32
  invoke void @_ZN7cModule8setIndexEii(%class.cModule* %341, i32 %342, i32 %251) #10
          to label %343 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:343                                     ; preds = %340
  %344 = load %class.cModule** %321, align 8, !tbaa !2
  %345 = invoke %class.cObject* @_ZN6cArray3getEi(%class.cArray* %machines, i32 0) #10
          to label %_ZN6cArrayixEi.exit48 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

_ZN6cArrayixEi.exit48:                            ; preds = %343
  %346 = bitcast %class.cObject* %345 to %class.cPar*
  %347 = invoke i8* @_ZN4cPar11stringValueEv(%class.cPar* %346) #10
          to label %348 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:348                                     ; preds = %_ZN6cArrayixEi.exit48
  invoke void @_ZN7cModule13setMachineParEPKcS1_(%class.cModule* %344, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0), i8* %347) #10
          to label %349 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:349                                     ; preds = %348
  %350 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %351 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:351                                     ; preds = %349
  br i1 %350, label %352, label %368

; <label>:352                                     ; preds = %351
  %353 = call i8* @__cxa_allocate_exception(i64 8) #2
  %354 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %355 unwind label %359

; <label>:355                                     ; preds = %352
  %356 = bitcast i8* %354 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %356, i32 11) #10
          to label %357 unwind label %363

; <label>:357                                     ; preds = %355
  %358 = bitcast i8* %353 to i8**
  store i8* %354, i8** %358, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %353, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:359                                     ; preds = %352
  %360 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %361 = extractvalue { i8*, i32 } %360, 0
  %362 = extractvalue { i8*, i32 } %360, 1
  br label %367

; <label>:363                                     ; preds = %355
  %364 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %365 = extractvalue { i8*, i32 } %364, 0
  %366 = extractvalue { i8*, i32 } %364, 1
  call void @_ZdlPv(i8* %354) #11
  br label %367

; <label>:367                                     ; preds = %363, %359
  %.1019 = phi i32 [ %366, %363 ], [ %362, %359 ]
  %.10 = phi i8* [ %365, %363 ], [ %361, %359 ]
  call void @__cxa_free_exception(i8* %353) #2
  br label %760

; <label>:368                                     ; preds = %351
  %369 = load %class.cModule** %321, align 8, !tbaa !2
  %370 = getelementptr inbounds %class.cModule* %369, i64 0, i32 6, i32 5
  %371 = load i32* %370, align 4, !tbaa !14
  %372 = icmp sgt i32 %371, -1
  br i1 %372, label %.lr.ph73, label %._crit_edge

.lr.ph73:                                         ; preds = %368, %383
  %373 = phi %class.cModule* [ %386, %383 ], [ %369, %368 ]
  %k.172 = phi i32 [ %384, %383 ], [ 0, %368 ]
  %374 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEi(%class.cModule* %373, i32 %k.172) #10
          to label %375 unwind label %.loopexit.split-lp.loopexit

; <label>:375                                     ; preds = %.lr.ph73
  %376 = invoke zeroext i1 @_ZNK4cPar7isInputEv(%class.cPar* %374) #10
          to label %377 unwind label %.loopexit.split-lp.loopexit

; <label>:377                                     ; preds = %375
  br i1 %376, label %378, label %383

; <label>:378                                     ; preds = %377
  %379 = load %class.cModule** %321, align 8, !tbaa !2
  %380 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEi(%class.cModule* %379, i32 %k.172) #10
          to label %381 unwind label %.loopexit.split-lp.loopexit

; <label>:381                                     ; preds = %378
  %382 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar4readEv(%class.cPar* %380) #10
          to label %383 unwind label %.loopexit.split-lp.loopexit

; <label>:383                                     ; preds = %377, %381
  %384 = add nuw nsw i32 %k.172, 1
  %385 = icmp slt i32 %k.172, %371
  %386 = load %class.cModule** %321, align 8, !tbaa !2
  br i1 %385, label %.lr.ph73, label %._crit_edge

._crit_edge:                                      ; preds = %383, %368
  %.lcssa64 = phi %class.cModule* [ %369, %368 ], [ %386, %383 ]
  invoke void @_ZN7cModule16setDisplayStringEiPKcb(%class.cModule* %.lcssa64, i32 0, i8* getelementptr inbounds ([7 x i8]* @.str15, i64 0, i64 0), i1 zeroext true) #10
          to label %387 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:387                                     ; preds = %._crit_edge
  %388 = load %class.cModule** %321, align 8, !tbaa !2
  %389 = bitcast %class.cModule* %388 to i32 (%class.cModule*)***
  %390 = load i32 (%class.cModule*)*** %389, align 8, !tbaa !18
  %391 = getelementptr inbounds i32 (%class.cModule*)** %390, i64 21
  %392 = load i32 (%class.cModule*)** %391, align 8
  %393 = invoke i32 %392(%class.cModule* %388) #10
          to label %394 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:394                                     ; preds = %387
  %395 = add nuw nsw i64 %sub_i.074, 1
  %396 = icmp slt i64 %395, %250
  br i1 %396, label %.lr.ph76, label %._crit_edge77

._crit_edge77:                                    ; preds = %394, %275
  invoke void @_ZN6cArray5clearEv(%class.cArray* %machines) #10
          to label %397 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:397                                     ; preds = %._crit_edge77
  %398 = invoke noalias i8* @_Znam(i64 48) #12
          to label %399 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:399                                     ; preds = %397
  %400 = bitcast i8* %398 to %"struct.cPar::ExprElem"*
  %401 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str6, i64 0, i64 0)) #10
          to label %402 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:402                                     ; preds = %399
  store i8 82, i8* %398, align 1, !tbaa !16
  %403 = bitcast %class.cPar* %401 to %class.cObject* (%class.cPar*)***
  %404 = load %class.cObject* (%class.cPar*)*** %403, align 8, !tbaa !18
  %405 = getelementptr inbounds %class.cObject* (%class.cPar*)** %404, i64 2
  %406 = load %class.cObject* (%class.cPar*)** %405, align 8
  %407 = invoke %class.cObject* %406(%class.cPar* %401) #10
          to label %408 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:408                                     ; preds = %402
  %409 = getelementptr inbounds i8* %398, i64 8
  %410 = bitcast i8* %409 to %class.cObject**
  store %class.cObject* %407, %class.cObject** %410, align 8, !tbaa !2
  %411 = getelementptr inbounds i8* %398, i64 16
  store i8 68, i8* %411, align 1, !tbaa !16
  %412 = getelementptr inbounds i8* %398, i64 24
  %413 = bitcast i8* %412 to double*
  store double 1.000000e+00, double* %413, align 8, !tbaa !20
  %414 = getelementptr inbounds i8* %398, i64 32
  store i8 64, i8* %414, align 1, !tbaa !16
  %415 = getelementptr inbounds i8* %398, i64 40
  store i8 45, i8* %415, align 1, !tbaa !21
  invoke void @_ZN4cPar17cancelRedirectionEv(%class.cPar* %value) #10
          to label %416 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:416                                     ; preds = %408
  %417 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setDoubleValueEPNS_8ExprElemEi(%class.cPar* %value, %"struct.cPar::ExprElem"* %400, i32 3) #10
          to label %418 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:418                                     ; preds = %416
  %419 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %value) #10
          to label %_ZN4cParcvlEv.exit42.preheader unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParcvlEv.exit42.preheader:                   ; preds = %418
  %420 = icmp slt i64 %419, 0
  br i1 %420, label %_ZN4cParcvlEv.exit42._crit_edge, label %.lr.ph

_ZN4cParcvlEv.exit42:                             ; preds = %589
  %421 = add nuw nsw i64 %i_index.071, 1
  %422 = icmp slt i64 %i_index.071, %419
  br i1 %422, label %.lr.ph, label %_ZN4cParcvlEv.exit42._crit_edge

.lr.ph:                                           ; preds = %_ZN4cParcvlEv.exit42.preheader, %_ZN4cParcvlEv.exit42
  %i_index.071 = phi i64 [ %421, %_ZN4cParcvlEv.exit42 ], [ 0, %_ZN4cParcvlEv.exit42.preheader ]
  %423 = invoke %class.cObject* @_ZNK5cHead4findEPKc(%class.cHead* @linktypes, i8* getelementptr inbounds ([6 x i8]* @.str17, i64 0, i64 0)) #10
          to label %424 unwind label %.loopexit

; <label>:424                                     ; preds = %.lr.ph
  %425 = bitcast %class.cObject* %423 to %class.cLinkType*
  %426 = trunc i64 %i_index.071 to i32
  %427 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %74, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %426) #10
          to label %428 unwind label %.loopexit

; <label>:428                                     ; preds = %424
  %429 = icmp eq i32 %427, -1
  br i1 %429, label %430, label %448

; <label>:430                                     ; preds = %428
  %431 = call i8* @__cxa_allocate_exception(i64 8) #2
  %432 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %433 unwind label %439

; <label>:433                                     ; preds = %430
  %434 = invoke i8* @_Z17opp_mkindexednamePcPKci(i8* %3, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %426) #10
          to label %435 unwind label %443

; <label>:435                                     ; preds = %433
  %436 = bitcast i8* %432 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %436, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i8* %434) #10
          to label %437 unwind label %443

; <label>:437                                     ; preds = %435
  %438 = bitcast i8* %431 to i8**
  store i8* %432, i8** %438, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %431, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:439                                     ; preds = %430
  %440 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %441 = extractvalue { i8*, i32 } %440, 0
  %442 = extractvalue { i8*, i32 } %440, 1
  br label %447

; <label>:443                                     ; preds = %435, %433
  %444 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %445 = extractvalue { i8*, i32 } %444, 0
  %446 = extractvalue { i8*, i32 } %444, 1
  call void @_ZdlPv(i8* %432) #11
  br label %447

; <label>:447                                     ; preds = %443, %439
  %.1221 = phi i32 [ %446, %443 ], [ %442, %439 ]
  %.12 = phi i8* [ %445, %443 ], [ %441, %439 ]
  call void @__cxa_free_exception(i8* %431) #2
  br label %760

; <label>:448                                     ; preds = %428
  %449 = load %class.cModule** %276, align 8, !tbaa !2
  %450 = getelementptr inbounds %class.cModule* %449, i64 0, i32 10
  %451 = load i32* %450, align 4, !tbaa !22
  %452 = icmp slt i32 %451, 0
  %453 = sext i32 %451 to i64
  %454 = select i1 %452, i64 1, i64 %453
  %455 = icmp slt i64 %i_index.071, %454
  br i1 %455, label %472, label %456

; <label>:456                                     ; preds = %448
  %457 = call i8* @__cxa_allocate_exception(i64 8) #2
  %458 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %459 unwind label %463

; <label>:459                                     ; preds = %456
  %460 = bitcast i8* %458 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %460, i8* getelementptr inbounds ([49 x i8]* @.str19, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str14, i64 0, i64 0), i32 %426, i8* getelementptr inbounds ([9 x i8]* @.str9, i64 0, i64 0)) #10
          to label %461 unwind label %467

; <label>:461                                     ; preds = %459
  %462 = bitcast i8* %457 to i8**
  store i8* %458, i8** %462, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %457, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:463                                     ; preds = %456
  %464 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %465 = extractvalue { i8*, i32 } %464, 0
  %466 = extractvalue { i8*, i32 } %464, 1
  br label %471

; <label>:467                                     ; preds = %459
  %468 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %469 = extractvalue { i8*, i32 } %468, 0
  %470 = extractvalue { i8*, i32 } %468, 1
  call void @_ZdlPv(i8* %458) #11
  br label %471

; <label>:471                                     ; preds = %467, %463
  %.1322 = phi i32 [ %470, %467 ], [ %466, %463 ]
  %.13 = phi i8* [ %469, %467 ], [ %465, %463 ]
  call void @__cxa_free_exception(i8* %457) #2
  br label %760

; <label>:472                                     ; preds = %448
  %473 = getelementptr inbounds %class.cModule** %276, i64 %i_index.071
  %474 = load %class.cModule** %473, align 8, !tbaa !2
  %475 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %474, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 -1) #10
          to label %476 unwind label %.loopexit

; <label>:476                                     ; preds = %472
  %477 = icmp eq i32 %475, -1
  br i1 %477, label %478, label %494

; <label>:478                                     ; preds = %476
  %479 = call i8* @__cxa_allocate_exception(i64 8) #2
  %480 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %481 unwind label %485

; <label>:481                                     ; preds = %478
  %482 = bitcast i8* %480 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %482, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str14, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0)) #10
          to label %483 unwind label %489

; <label>:483                                     ; preds = %481
  %484 = bitcast i8* %479 to i8**
  store i8* %480, i8** %484, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %479, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:485                                     ; preds = %478
  %486 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %487 = extractvalue { i8*, i32 } %486, 0
  %488 = extractvalue { i8*, i32 } %486, 1
  br label %493

; <label>:489                                     ; preds = %481
  %490 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %491 = extractvalue { i8*, i32 } %490, 0
  %492 = extractvalue { i8*, i32 } %490, 1
  call void @_ZdlPv(i8* %480) #11
  br label %493

; <label>:493                                     ; preds = %489, %485
  %.1423 = phi i32 [ %492, %489 ], [ %488, %485 ]
  %.14 = phi i8* [ %491, %489 ], [ %487, %485 ]
  call void @__cxa_free_exception(i8* %479) #2
  br label %760

; <label>:494                                     ; preds = %476
  %495 = load %class.cModule** %473, align 8, !tbaa !2
  invoke void @_Z7connectP7cModuleiP9cLinkTypeS0_i(%class.cModule* %74, i32 %427, %class.cLinkType* %425, %class.cModule* %495, i32 %475) #10
          to label %496 unwind label %.loopexit

; <label>:496                                     ; preds = %494
  %497 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %498 unwind label %.loopexit

; <label>:498                                     ; preds = %496
  br i1 %497, label %499, label %515

; <label>:499                                     ; preds = %498
  %500 = call i8* @__cxa_allocate_exception(i64 8) #2
  %501 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %502 unwind label %506

; <label>:502                                     ; preds = %499
  %503 = bitcast i8* %501 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %503, i32 11) #10
          to label %504 unwind label %510

; <label>:504                                     ; preds = %502
  %505 = bitcast i8* %500 to i8**
  store i8* %501, i8** %505, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %500, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:506                                     ; preds = %499
  %507 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %508 = extractvalue { i8*, i32 } %507, 0
  %509 = extractvalue { i8*, i32 } %507, 1
  br label %514

; <label>:510                                     ; preds = %502
  %511 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %512 = extractvalue { i8*, i32 } %511, 0
  %513 = extractvalue { i8*, i32 } %511, 1
  call void @_ZdlPv(i8* %501) #11
  br label %514

; <label>:514                                     ; preds = %510, %506
  %.1524 = phi i32 [ %513, %510 ], [ %509, %506 ]
  %.15 = phi i8* [ %512, %510 ], [ %508, %506 ]
  call void @__cxa_free_exception(i8* %500) #2
  br label %760

; <label>:515                                     ; preds = %498
  %516 = invoke %class.cObject* @_ZNK5cHead4findEPKc(%class.cHead* @linktypes, i8* getelementptr inbounds ([6 x i8]* @.str17, i64 0, i64 0)) #10
          to label %517 unwind label %.loopexit

; <label>:517                                     ; preds = %515
  %518 = bitcast %class.cObject* %516 to %class.cLinkType*
  %519 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %74, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %426) #10
          to label %520 unwind label %.loopexit

; <label>:520                                     ; preds = %517
  %521 = icmp eq i32 %519, -1
  br i1 %521, label %522, label %540

; <label>:522                                     ; preds = %520
  %523 = call i8* @__cxa_allocate_exception(i64 8) #2
  %524 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %525 unwind label %531

; <label>:525                                     ; preds = %522
  %526 = invoke i8* @_Z17opp_mkindexednamePcPKci(i8* %3, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %426) #10
          to label %527 unwind label %535

; <label>:527                                     ; preds = %525
  %528 = bitcast i8* %524 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %528, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i8* %526) #10
          to label %529 unwind label %535

; <label>:529                                     ; preds = %527
  %530 = bitcast i8* %523 to i8**
  store i8* %524, i8** %530, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %523, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:531                                     ; preds = %522
  %532 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %533 = extractvalue { i8*, i32 } %532, 0
  %534 = extractvalue { i8*, i32 } %532, 1
  br label %539

; <label>:535                                     ; preds = %527, %525
  %536 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %537 = extractvalue { i8*, i32 } %536, 0
  %538 = extractvalue { i8*, i32 } %536, 1
  call void @_ZdlPv(i8* %524) #11
  br label %539

; <label>:539                                     ; preds = %535, %531
  %.1625 = phi i32 [ %538, %535 ], [ %534, %531 ]
  %.16 = phi i8* [ %537, %535 ], [ %533, %531 ]
  call void @__cxa_free_exception(i8* %523) #2
  br label %760

; <label>:540                                     ; preds = %520
  %541 = load %class.cModule** %276, align 8, !tbaa !2
  %542 = getelementptr inbounds %class.cModule* %541, i64 0, i32 10
  %543 = load i32* %542, align 4, !tbaa !22
  %544 = icmp slt i32 %543, 0
  %545 = sext i32 %543 to i64
  %546 = select i1 %544, i64 1, i64 %545
  %547 = icmp slt i64 %i_index.071, %546
  br i1 %547, label %564, label %548

; <label>:548                                     ; preds = %540
  %549 = call i8* @__cxa_allocate_exception(i64 8) #2
  %550 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %551 unwind label %555

; <label>:551                                     ; preds = %548
  %552 = bitcast i8* %550 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %552, i8* getelementptr inbounds ([49 x i8]* @.str19, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str14, i64 0, i64 0), i32 %426, i8* getelementptr inbounds ([9 x i8]* @.str9, i64 0, i64 0)) #10
          to label %553 unwind label %559

; <label>:553                                     ; preds = %551
  %554 = bitcast i8* %549 to i8**
  store i8* %550, i8** %554, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %549, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:555                                     ; preds = %548
  %556 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %557 = extractvalue { i8*, i32 } %556, 0
  %558 = extractvalue { i8*, i32 } %556, 1
  br label %563

; <label>:559                                     ; preds = %551
  %560 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %561 = extractvalue { i8*, i32 } %560, 0
  %562 = extractvalue { i8*, i32 } %560, 1
  call void @_ZdlPv(i8* %550) #11
  br label %563

; <label>:563                                     ; preds = %559, %555
  %.1726 = phi i32 [ %562, %559 ], [ %558, %555 ]
  %.17 = phi i8* [ %561, %559 ], [ %557, %555 ]
  call void @__cxa_free_exception(i8* %549) #2
  br label %760

; <label>:564                                     ; preds = %540
  %565 = load %class.cModule** %473, align 8, !tbaa !2
  %566 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %565, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 -1) #10
          to label %567 unwind label %.loopexit

; <label>:567                                     ; preds = %564
  %568 = icmp eq i32 %566, -1
  br i1 %568, label %569, label %585

; <label>:569                                     ; preds = %567
  %570 = call i8* @__cxa_allocate_exception(i64 8) #2
  %571 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %572 unwind label %576

; <label>:572                                     ; preds = %569
  %573 = bitcast i8* %571 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %573, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str14, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0)) #10
          to label %574 unwind label %580

; <label>:574                                     ; preds = %572
  %575 = bitcast i8* %570 to i8**
  store i8* %571, i8** %575, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %570, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:576                                     ; preds = %569
  %577 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %578 = extractvalue { i8*, i32 } %577, 0
  %579 = extractvalue { i8*, i32 } %577, 1
  br label %584

; <label>:580                                     ; preds = %572
  %581 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %582 = extractvalue { i8*, i32 } %581, 0
  %583 = extractvalue { i8*, i32 } %581, 1
  call void @_ZdlPv(i8* %571) #11
  br label %584

; <label>:584                                     ; preds = %580, %576
  %.1827 = phi i32 [ %583, %580 ], [ %579, %576 ]
  %.18 = phi i8* [ %582, %580 ], [ %578, %576 ]
  call void @__cxa_free_exception(i8* %570) #2
  br label %760

; <label>:585                                     ; preds = %567
  %586 = load %class.cModule** %473, align 8, !tbaa !2
  invoke void @_Z7connectP7cModuleiP9cLinkTypeS0_i(%class.cModule* %586, i32 %566, %class.cLinkType* %518, %class.cModule* %74, i32 %519) #10
          to label %587 unwind label %.loopexit

; <label>:587                                     ; preds = %585
  %588 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %589 unwind label %.loopexit

; <label>:589                                     ; preds = %587
  br i1 %588, label %590, label %_ZN4cParcvlEv.exit42

; <label>:590                                     ; preds = %589
  %591 = call i8* @__cxa_allocate_exception(i64 8) #2
  %592 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %593 unwind label %597

; <label>:593                                     ; preds = %590
  %594 = bitcast i8* %592 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %594, i32 11) #10
          to label %595 unwind label %601

; <label>:595                                     ; preds = %593
  %596 = bitcast i8* %591 to i8**
  store i8* %592, i8** %596, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %591, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:597                                     ; preds = %590
  %598 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %599 = extractvalue { i8*, i32 } %598, 0
  %600 = extractvalue { i8*, i32 } %598, 1
  br label %605

; <label>:601                                     ; preds = %593
  %602 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %603 = extractvalue { i8*, i32 } %602, 0
  %604 = extractvalue { i8*, i32 } %602, 1
  call void @_ZdlPv(i8* %592) #11
  br label %605

; <label>:605                                     ; preds = %601, %597
  %.1928 = phi i32 [ %604, %601 ], [ %600, %597 ]
  %.19 = phi i8* [ %603, %601 ], [ %599, %597 ]
  call void @__cxa_free_exception(i8* %591) #2
  br label %760

_ZN4cParcvlEv.exit42._crit_edge:                  ; preds = %_ZN4cParcvlEv.exit42, %_ZN4cParcvlEv.exit42.preheader
  %606 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str6, i64 0, i64 0)) #10
          to label %607 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:607                                     ; preds = %_ZN4cParcvlEv.exit42._crit_edge
  %608 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %606) #10
          to label %_ZN4cParcvlEv.exit38 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParcvlEv.exit38:                             ; preds = %607
  %609 = trunc i64 %608 to i32
  %610 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %74, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %609) #10
          to label %611 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:611                                     ; preds = %_ZN4cParcvlEv.exit38
  %612 = icmp eq i32 %610, -1
  br i1 %612, label %613, label %631

; <label>:613                                     ; preds = %611
  %614 = call i8* @__cxa_allocate_exception(i64 8) #2
  %615 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %616 unwind label %622

; <label>:616                                     ; preds = %613
  %617 = invoke i8* @_Z17opp_mkindexednamePcPKci(i8* %3, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 %609) #10
          to label %618 unwind label %626

; <label>:618                                     ; preds = %616
  %619 = bitcast i8* %615 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %619, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i8* %617) #10
          to label %620 unwind label %626

; <label>:620                                     ; preds = %618
  %621 = bitcast i8* %614 to i8**
  store i8* %615, i8** %621, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %614, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:622                                     ; preds = %613
  %623 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %624 = extractvalue { i8*, i32 } %623, 0
  %625 = extractvalue { i8*, i32 } %623, 1
  br label %630

; <label>:626                                     ; preds = %618, %616
  %627 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %628 = extractvalue { i8*, i32 } %627, 0
  %629 = extractvalue { i8*, i32 } %627, 1
  call void @_ZdlPv(i8* %615) #11
  br label %630

; <label>:630                                     ; preds = %626, %622
  %.2029 = phi i32 [ %629, %626 ], [ %625, %622 ]
  %.20 = phi i8* [ %628, %626 ], [ %624, %622 ]
  call void @__cxa_free_exception(i8* %614) #2
  br label %760

; <label>:631                                     ; preds = %611
  %632 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %1, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32 -1) #10
          to label %633 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:633                                     ; preds = %631
  %634 = icmp eq i32 %632, -1
  br i1 %634, label %635, label %651

; <label>:635                                     ; preds = %633
  %636 = call i8* @__cxa_allocate_exception(i64 8) #2
  %637 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %638 unwind label %642

; <label>:638                                     ; preds = %635
  %639 = bitcast i8* %637 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %639, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8]* @.str20, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0)) #10
          to label %640 unwind label %646

; <label>:640                                     ; preds = %638
  %641 = bitcast i8* %636 to i8**
  store i8* %637, i8** %641, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %636, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:642                                     ; preds = %635
  %643 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %644 = extractvalue { i8*, i32 } %643, 0
  %645 = extractvalue { i8*, i32 } %643, 1
  br label %650

; <label>:646                                     ; preds = %638
  %647 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %648 = extractvalue { i8*, i32 } %647, 0
  %649 = extractvalue { i8*, i32 } %647, 1
  call void @_ZdlPv(i8* %637) #11
  br label %650

; <label>:650                                     ; preds = %646, %642
  %.2130 = phi i32 [ %649, %646 ], [ %645, %642 ]
  %.21 = phi i8* [ %648, %646 ], [ %644, %642 ]
  call void @__cxa_free_exception(i8* %636) #2
  br label %760

; <label>:651                                     ; preds = %633
  invoke void @_Z7connectP7cModuleiP9cLinkTypeS0_i(%class.cModule* %74, i32 %610, %class.cLinkType* null, %class.cModule* %1, i32 %632) #10
          to label %652 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:652                                     ; preds = %651
  %653 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %654 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:654                                     ; preds = %652
  br i1 %653, label %655, label %671

; <label>:655                                     ; preds = %654
  %656 = call i8* @__cxa_allocate_exception(i64 8) #2
  %657 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %658 unwind label %662

; <label>:658                                     ; preds = %655
  %659 = bitcast i8* %657 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %659, i32 11) #10
          to label %660 unwind label %666

; <label>:660                                     ; preds = %658
  %661 = bitcast i8* %656 to i8**
  store i8* %657, i8** %661, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %656, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:662                                     ; preds = %655
  %663 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %664 = extractvalue { i8*, i32 } %663, 0
  %665 = extractvalue { i8*, i32 } %663, 1
  br label %670

; <label>:666                                     ; preds = %658
  %667 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %668 = extractvalue { i8*, i32 } %667, 0
  %669 = extractvalue { i8*, i32 } %667, 1
  call void @_ZdlPv(i8* %657) #11
  br label %670

; <label>:670                                     ; preds = %666, %662
  %.2231 = phi i32 [ %669, %666 ], [ %665, %662 ]
  %.22 = phi i8* [ %668, %666 ], [ %664, %662 ]
  call void @__cxa_free_exception(i8* %656) #2
  br label %760

; <label>:671                                     ; preds = %654
  %672 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([2 x i8]* @.str6, i64 0, i64 0)) #10
          to label %673 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:673                                     ; preds = %671
  %674 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %672) #10
          to label %_ZN4cParcvlEv.exit unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParcvlEv.exit:                               ; preds = %673
  %675 = trunc i64 %674 to i32
  %676 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %74, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %675) #10
          to label %677 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:677                                     ; preds = %_ZN4cParcvlEv.exit
  %678 = icmp eq i32 %676, -1
  br i1 %678, label %679, label %697

; <label>:679                                     ; preds = %677
  %680 = call i8* @__cxa_allocate_exception(i64 8) #2
  %681 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %682 unwind label %688

; <label>:682                                     ; preds = %679
  %683 = invoke i8* @_Z17opp_mkindexednamePcPKci(i8* %3, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 %675) #10
          to label %684 unwind label %692

; <label>:684                                     ; preds = %682
  %685 = bitcast i8* %681 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %685, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i8* %683) #10
          to label %686 unwind label %692

; <label>:686                                     ; preds = %684
  %687 = bitcast i8* %680 to i8**
  store i8* %681, i8** %687, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %680, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:688                                     ; preds = %679
  %689 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %690 = extractvalue { i8*, i32 } %689, 0
  %691 = extractvalue { i8*, i32 } %689, 1
  br label %696

; <label>:692                                     ; preds = %684, %682
  %693 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %694 = extractvalue { i8*, i32 } %693, 0
  %695 = extractvalue { i8*, i32 } %693, 1
  call void @_ZdlPv(i8* %681) #11
  br label %696

; <label>:696                                     ; preds = %692, %688
  %.2332 = phi i32 [ %695, %692 ], [ %691, %688 ]
  %.23 = phi i8* [ %694, %692 ], [ %690, %688 ]
  call void @__cxa_free_exception(i8* %680) #2
  br label %760

; <label>:697                                     ; preds = %677
  %698 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %1, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0), i32 -1) #10
          to label %699 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:699                                     ; preds = %697
  %700 = icmp eq i32 %698, -1
  br i1 %700, label %701, label %717

; <label>:701                                     ; preds = %699
  %702 = call i8* @__cxa_allocate_exception(i64 8) #2
  %703 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %704 unwind label %708

; <label>:704                                     ; preds = %701
  %705 = bitcast i8* %703 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %705, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8]* @.str20, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0)) #10
          to label %706 unwind label %712

; <label>:706                                     ; preds = %704
  %707 = bitcast i8* %702 to i8**
  store i8* %703, i8** %707, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %702, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:708                                     ; preds = %701
  %709 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %710 = extractvalue { i8*, i32 } %709, 0
  %711 = extractvalue { i8*, i32 } %709, 1
  br label %716

; <label>:712                                     ; preds = %704
  %713 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %714 = extractvalue { i8*, i32 } %713, 0
  %715 = extractvalue { i8*, i32 } %713, 1
  call void @_ZdlPv(i8* %703) #11
  br label %716

; <label>:716                                     ; preds = %712, %708
  %.2433 = phi i32 [ %715, %712 ], [ %711, %708 ]
  %.24 = phi i8* [ %714, %712 ], [ %710, %708 ]
  call void @__cxa_free_exception(i8* %702) #2
  br label %760

; <label>:717                                     ; preds = %699
  invoke void @_Z7connectP7cModuleiP9cLinkTypeS0_i(%class.cModule* %1, i32 %698, %class.cLinkType* null, %class.cModule* %74, i32 %676) #10
          to label %718 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:718                                     ; preds = %717
  %719 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %720 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:720                                     ; preds = %718
  br i1 %719, label %721, label %737

; <label>:721                                     ; preds = %720
  %722 = call i8* @__cxa_allocate_exception(i64 8) #2
  %723 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %724 unwind label %728

; <label>:724                                     ; preds = %721
  %725 = bitcast i8* %723 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %725, i32 11) #10
          to label %726 unwind label %732

; <label>:726                                     ; preds = %724
  %727 = bitcast i8* %722 to i8**
  store i8* %723, i8** %727, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %722, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:728                                     ; preds = %721
  %729 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %730 = extractvalue { i8*, i32 } %729, 0
  %731 = extractvalue { i8*, i32 } %729, 1
  br label %736

; <label>:732                                     ; preds = %724
  %733 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %734 = extractvalue { i8*, i32 } %733, 0
  %735 = extractvalue { i8*, i32 } %733, 1
  call void @_ZdlPv(i8* %723) #11
  br label %736

; <label>:736                                     ; preds = %732, %728
  %.2534 = phi i32 [ %735, %732 ], [ %731, %728 ]
  %.25 = phi i8* [ %734, %732 ], [ %730, %728 ]
  call void @__cxa_free_exception(i8* %722) #2
  br label %760

; <label>:737                                     ; preds = %720
  %738 = invoke zeroext i1 @_ZNK7cModule24checkInternalConnectionsEv(%class.cModule* %1) #10
          to label %739 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:739                                     ; preds = %737
  call void @_ZdaPv(i8* %274) #11
  %740 = invoke zeroext i1 @_Z11memoryIsLowv() #10
          to label %741 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:741                                     ; preds = %739
  br i1 %740, label %742, label %758

; <label>:742                                     ; preds = %741
  %743 = call i8* @__cxa_allocate_exception(i64 8) #2
  %744 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %745 unwind label %749

; <label>:745                                     ; preds = %742
  %746 = bitcast i8* %744 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %746, i32 11) #10
          to label %747 unwind label %753

; <label>:747                                     ; preds = %745
  %748 = bitcast i8* %743 to i8**
  store i8* %744, i8** %748, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %743, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13
          to label %768 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:749                                     ; preds = %742
  %750 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %751 = extractvalue { i8*, i32 } %750, 0
  %752 = extractvalue { i8*, i32 } %750, 1
  br label %757

; <label>:753                                     ; preds = %745
  %754 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %755 = extractvalue { i8*, i32 } %754, 0
  %756 = extractvalue { i8*, i32 } %754, 1
  call void @_ZdlPv(i8* %744) #11
  br label %757

; <label>:757                                     ; preds = %753, %749
  %.2635 = phi i32 [ %756, %753 ], [ %752, %749 ]
  %.26 = phi i8* [ %755, %753 ], [ %751, %749 ]
  call void @__cxa_free_exception(i8* %743) #2
  br label %760

; <label>:758                                     ; preds = %741
  invoke void @_ZN6cArrayD1Ev(%class.cArray* %machines) #10
          to label %759 unwind label %17

; <label>:759                                     ; preds = %758
  call void @llvm.lifetime.end(i64 80, i8* %4) #2
  call void @llvm.lifetime.end(i64 64, i8* %3) #2
  call void @_ZN4cParD1Ev(%class.cPar* %value) #10
  call void @llvm.lifetime.end(i64 120, i8* %2) #2
  ret void

; <label>:760                                     ; preds = %757, %736, %716, %696, %670, %650, %630, %605, %584, %563, %539, %514, %493, %471, %447, %367, %339, %309, %297, %268, %246, %216, %173, %117, %93, %64, %52, %31, %.loopexit.split-lp
  %.2736 = phi i32 [ %22, %.loopexit.split-lp ], [ %.01, %31 ], [ %.110, %64 ], [ %.211, %93 ], [ %.312, %117 ], [ %.413, %173 ], [ %.514, %216 ], [ %.615, %246 ], [ %.716, %268 ], [ %.817, %309 ], [ %.918, %339 ], [ %.1019, %367 ], [ %300, %297 ], [ %.1221, %447 ], [ %.1322, %471 ], [ %.1423, %493 ], [ %.1524, %514 ], [ %.1625, %539 ], [ %.1726, %563 ], [ %.1827, %584 ], [ %.1928, %605 ], [ %.2029, %630 ], [ %.2130, %650 ], [ %.2231, %670 ], [ %.2332, %696 ], [ %.2433, %716 ], [ %.2534, %736 ], [ %.2635, %757 ], [ %55, %52 ]
  %.27 = phi i8* [ %21, %.loopexit.split-lp ], [ %.0, %31 ], [ %.1, %64 ], [ %.2, %93 ], [ %.3, %117 ], [ %.4, %173 ], [ %.5, %216 ], [ %.6, %246 ], [ %.7, %268 ], [ %.8, %309 ], [ %.9, %339 ], [ %.10, %367 ], [ %299, %297 ], [ %.12, %447 ], [ %.13, %471 ], [ %.14, %493 ], [ %.15, %514 ], [ %.16, %539 ], [ %.17, %563 ], [ %.18, %584 ], [ %.19, %605 ], [ %.20, %630 ], [ %.21, %650 ], [ %.22, %670 ], [ %.23, %696 ], [ %.24, %716 ], [ %.25, %736 ], [ %.26, %757 ], [ %54, %52 ]
  invoke void @_ZN6cArrayD1Ev(%class.cArray* %machines) #10
          to label %761 unwind label %765

; <label>:761                                     ; preds = %760, %17
  %.2837 = phi i32 [ %.2736, %760 ], [ %20, %17 ]
  %.28 = phi i8* [ %.27, %760 ], [ %19, %17 ]
  invoke void @_ZN4cParD1Ev(%class.cPar* %value) #10
          to label %762 unwind label %765

; <label>:762                                     ; preds = %761
  %763 = insertvalue { i8*, i32 } undef, i8* %.28, 0
  %764 = insertvalue { i8*, i32 } %763, i32 %.2837, 1
  resume { i8*, i32 } %764

; <label>:765                                     ; preds = %761, %760
  %766 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          catch i8* null
  %767 = extractvalue { i8*, i32 } %766, 0
  call void @__clang_call_terminate(i8* %767) #14
  unreachable

; <label>:768                                     ; preds = %747, %726, %706, %686, %660, %640, %620, %595, %574, %553, %529, %504, %483, %461, %437, %357, %329, %295, %258, %236, %206, %163, %107, %83, %50, %15
  unreachable
}
