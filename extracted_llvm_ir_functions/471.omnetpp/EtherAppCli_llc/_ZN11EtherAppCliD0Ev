define linkonce_odr void @_ZN11EtherAppCliD0Ev(%class.EtherAppCli* %this) unnamed_addr #6 align 2 {
  %1 = getelementptr inbounds %class.EtherAppCli* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ([35 x i8*]* @_ZTV11EtherAppCli, i64 0, i64 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !19
  %2 = getelementptr inbounds %class.EtherAppCli* %this, i64 0, i32 11, i32 0, i32 0
  invoke void @_ZN7cObjectD2Ev(%class.cObject* %2) #10
          to label %_ZN7cStdDevD1Ev.exit.i.i unwind label %6

_ZN7cStdDevD1Ev.exit.i.i:                         ; preds = %0
  %3 = getelementptr inbounds %class.EtherAppCli* %this, i64 0, i32 10
  invoke void @_ZN10cOutVectorD1Ev(%class.cOutVector* %3) #10
          to label %4 unwind label %11

; <label>:4                                       ; preds = %_ZN7cStdDevD1Ev.exit.i.i
  %5 = getelementptr inbounds %class.EtherAppCli* %this, i64 0, i32 7, i32 0
  invoke void @_ZN15MACAddress_BaseD2Ev(%class.MACAddress_Base* %5) #10
          to label %_ZN11EtherAppCliD2Ev.exit.i unwind label %15

; <label>:6                                       ; preds = %0
  %7 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  %9 = extractvalue { i8*, i32 } %7, 1
  %10 = getelementptr inbounds %class.EtherAppCli* %this, i64 0, i32 10
  invoke void @_ZN10cOutVectorD1Ev(%class.cOutVector* %10) #10
          to label %19 unwind label %25

; <label>:11                                      ; preds = %_ZN7cStdDevD1Ev.exit.i.i
  %12 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  %14 = extractvalue { i8*, i32 } %12, 1
  br label %19

; <label>:15                                      ; preds = %4
  %16 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  %18 = extractvalue { i8*, i32 } %16, 1
  br label %_ZN10MACAddressD1Ev.exit3.i.i

; <label>:19                                      ; preds = %11, %6
  %.01.i.i = phi i8* [ %13, %11 ], [ %8, %6 ]
  %.0.i.i = phi i32 [ %14, %11 ], [ %9, %6 ]
  %20 = getelementptr inbounds %class.EtherAppCli* %this, i64 0, i32 7, i32 0
  invoke void @_ZN15MACAddress_BaseD2Ev(%class.MACAddress_Base* %20) #10
          to label %_ZN10MACAddressD1Ev.exit3.i.i unwind label %25

_ZN10MACAddressD1Ev.exit3.i.i:                    ; preds = %19, %15
  %.12.i.i = phi i8* [ %17, %15 ], [ %.01.i.i, %19 ]
  %.1.i.i = phi i32 [ %18, %15 ], [ %.0.i.i, %19 ]
  %21 = getelementptr inbounds %class.EtherAppCli* %this, i64 0, i32 0
  invoke void @_ZN13cSimpleModuleD2Ev(%class.cSimpleModule* %21) #10
          to label %22 unwind label %25

; <label>:22                                      ; preds = %_ZN10MACAddressD1Ev.exit3.i.i
  %23 = insertvalue { i8*, i32 } undef, i8* %.12.i.i, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %.1.i.i, 1
  br label %.body

; <label>:25                                      ; preds = %_ZN10MACAddressD1Ev.exit3.i.i, %19, %6
  %26 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          catch i8* null
  %27 = extractvalue { i8*, i32 } %26, 0
  tail call void @__clang_call_terminate(i8* %27) #12
  unreachable

_ZN11EtherAppCliD2Ev.exit.i:                      ; preds = %4
  %28 = getelementptr inbounds %class.EtherAppCli* %this, i64 0, i32 0
  invoke void @_ZN13cSimpleModuleD2Ev(%class.cSimpleModule* %28) #10
          to label %_ZN11EtherAppCliD1Ev.exit unwind label %30

_ZN11EtherAppCliD1Ev.exit:                        ; preds = %_ZN11EtherAppCliD2Ev.exit.i
  %29 = bitcast %class.EtherAppCli* %this to i8*
  tail call void @_ZdlPv(i8* %29) #11
  ret void

; <label>:30                                      ; preds = %_ZN11EtherAppCliD2Ev.exit.i
  %31 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.body

.body:                                            ; preds = %22, %30
  %eh.lpad-body = phi { i8*, i32 } [ %31, %30 ], [ %24, %22 ]
  %32 = bitcast %class.EtherAppCli* %this to i8*
  tail call void @_ZdlPv(i8* %32) #11
  resume { i8*, i32 } %eh.lpad-body
}
