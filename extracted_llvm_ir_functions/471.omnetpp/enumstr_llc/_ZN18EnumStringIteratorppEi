define i32 @_ZN18EnumStringIteratorppEi(%class.EnumStringIterator* nocapture %this, i32) #0 align 2 {
  tail call void @llvm.dbg.value(metadata %class.EnumStringIterator* %this, i64 0, metadata !53, metadata !246), !dbg !280
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !54, metadata !246), !dbg !281
  %2 = getelementptr inbounds %class.EnumStringIterator* %this, i64 0, i32 3, !dbg !282
  %3 = load i32* %2, align 4, !dbg !282, !tbaa !266
  %4 = icmp eq i32 %3, 0, !dbg !282
  br i1 %4, label %5, label %49, !dbg !284

; <label>:5                                       ; preds = %1
  %6 = getelementptr inbounds %class.EnumStringIterator* %this, i64 0, i32 0, !dbg !285
  %7 = load i8** %6, align 8, !dbg !285, !tbaa !252
  %8 = icmp eq i8* %7, null, !dbg !285
  br i1 %8, label %49, label %9, !dbg !286

; <label>:9                                       ; preds = %5
  %10 = getelementptr inbounds %class.EnumStringIterator* %this, i64 0, i32 1, !dbg !287
  %11 = load i32* %10, align 4, !dbg !287, !tbaa !263
  %12 = getelementptr inbounds %class.EnumStringIterator* %this, i64 0, i32 2, !dbg !289
  %13 = load i32* %12, align 4, !dbg !289, !tbaa !260
  %14 = icmp slt i32 %11, %13, !dbg !290
  br i1 %14, label %15, label %.preheader, !dbg !291

; <label>:15                                      ; preds = %9
  %16 = add nsw i32 %11, 1, !dbg !292
  store i32 %16, i32* %10, align 4, !dbg !292, !tbaa !263
  br label %49, !dbg !293

.preheader:                                       ; preds = %9, %.critedge.i
  %17 = phi i8* [ %19, %.critedge.i ], [ %7, %9 ], !dbg !294
  %18 = load i8* %17, align 1, !dbg !295, !tbaa !297
  switch i8 %18, label %21 [
    i8 32, label %.critedge.i
    i8 9, label %.critedge.i
    i8 0, label %20
  ], !dbg !298

.critedge.i:                                      ; preds = %.preheader, %.preheader
  %19 = getelementptr inbounds i8* %17, i64 1, !dbg !299
  store i8* %19, i8** %6, align 8, !dbg !299, !tbaa !300
  br label %.preheader, !dbg !301

; <label>:20                                      ; preds = %.preheader
  store i32 -1, i32* %10, align 4, !dbg !302, !tbaa !263
  br label %49, !dbg !304

; <label>:21                                      ; preds = %.preheader
  %22 = tail call fastcc i32 @_ZL10get_numberRPKcRi(i8** dereferenceable(8) %6, i32* dereferenceable(4) %10) #3, !dbg !305
  %23 = icmp eq i32 %22, 0, !dbg !305
  br i1 %23, label %24, label %25, !dbg !307

; <label>:24                                      ; preds = %21
  store i32 1, i32* %2, align 4, !dbg !308, !tbaa !266
  br label %49, !dbg !310

; <label>:25                                      ; preds = %21
  store i32 -1, i32* %12, align 4, !dbg !311, !tbaa !260
  %26 = load i8** %6, align 8, !dbg !312, !tbaa !252
  %27 = load i8* %26, align 1, !dbg !314, !tbaa !297
  switch i8 %27, label %47 [
    i8 0, label %.loopexit
    i8 44, label %28
    i8 45, label %30
  ], !dbg !315

; <label>:28                                      ; preds = %25
  %29 = getelementptr inbounds i8* %26, i64 1, !dbg !316
  store i8* %29, i8** %6, align 8, !dbg !316, !tbaa !252
  br label %.loopexit, !dbg !318

; <label>:30                                      ; preds = %25
  %31 = getelementptr inbounds i8* %26, i64 1, !dbg !319
  tail call void @llvm.dbg.value(metadata i8** %6, i64 0, metadata !60, metadata !246), !dbg !322
  br label %32, !dbg !324

; <label>:32                                      ; preds = %.critedge.i5, %30
  %storemerge = phi i8* [ %31, %30 ], [ %35, %.critedge.i5 ]
  %33 = phi i8* [ %26, %30 ], [ %storemerge, %.critedge.i5 ], !dbg !325
  store i8* %storemerge, i8** %6, align 8, !dbg !326, !tbaa !300
  %34 = load i8* %storemerge, align 1, !dbg !327, !tbaa !297
  switch i8 %34, label %_ZL15skip_whitespaceRPKc.exit6 [
    i8 32, label %.critedge.i5
    i8 9, label %.critedge.i5
  ], !dbg !328

.critedge.i5:                                     ; preds = %32, %32
  %35 = getelementptr inbounds i8* %33, i64 2, !dbg !326
  br label %32, !dbg !324

_ZL15skip_whitespaceRPKc.exit6:                   ; preds = %32
  %36 = tail call fastcc i32 @_ZL10get_numberRPKcRi(i8** dereferenceable(8) %6, i32* dereferenceable(4) %12) #3, !dbg !329
  %37 = icmp eq i32 %36, 0, !dbg !329
  br i1 %37, label %38, label %39, !dbg !331

; <label>:38                                      ; preds = %_ZL15skip_whitespaceRPKc.exit6
  store i32 1, i32* %2, align 4, !dbg !332, !tbaa !266
  br label %49, !dbg !334

; <label>:39                                      ; preds = %_ZL15skip_whitespaceRPKc.exit6
  tail call void @llvm.dbg.value(metadata i8** %6, i64 0, metadata !60, metadata !246), !dbg !335
  %.pre.i1 = load i8** %6, align 8, !dbg !337, !tbaa !300
  br label %40, !dbg !338

; <label>:40                                      ; preds = %.critedge.i2, %39
  %41 = phi i8* [ %43, %.critedge.i2 ], [ %.pre.i1, %39 ], !dbg !339
  %42 = load i8* %41, align 1, !dbg !340, !tbaa !297
  switch i8 %42, label %46 [
    i8 32, label %.critedge.i2
    i8 9, label %.critedge.i2
    i8 0, label %.loopexit
    i8 44, label %44
  ], !dbg !341

.critedge.i2:                                     ; preds = %40, %40
  %43 = getelementptr inbounds i8* %41, i64 1, !dbg !342
  store i8* %43, i8** %6, align 8, !dbg !342, !tbaa !300
  br label %40, !dbg !338

; <label>:44                                      ; preds = %40
  %45 = getelementptr inbounds i8* %41, i64 1, !dbg !343
  store i8* %45, i8** %6, align 8, !dbg !343, !tbaa !252
  br label %.loopexit

; <label>:46                                      ; preds = %40
  store i32 1, i32* %2, align 4, !dbg !346, !tbaa !266
  br label %49, !dbg !348

; <label>:47                                      ; preds = %25
  store i32 1, i32* %2, align 4, !dbg !349, !tbaa !266
  br label %49, !dbg !351

.loopexit:                                        ; preds = %40, %25, %28, %44
  %48 = load i32* %10, align 4, !dbg !352, !tbaa !263
  br label %49, !dbg !353

; <label>:49                                      ; preds = %1, %5, %.loopexit, %47, %46, %38, %24, %20, %15
  %.0 = phi i32 [ %16, %15 ], [ -1, %20 ], [ %48, %.loopexit ], [ -1, %46 ], [ -1, %38 ], [ -1, %47 ], [ -1, %24 ], [ -1, %5 ], [ -1, %1 ]
  ret i32 %.0, !dbg !354
}
