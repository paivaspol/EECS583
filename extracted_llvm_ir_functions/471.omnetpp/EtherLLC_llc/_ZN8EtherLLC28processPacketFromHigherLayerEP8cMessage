define void @_ZN8EtherLLC28processPacketFromHigherLayerEP8cMessage(%class.EtherLLC* %this, %class.cMessage* %msg) unnamed_addr #0 align 2 {
  %1 = getelementptr inbounds %class.cMessage* %msg, i64 0, i32 3
  %2 = load i64* %1, align 8, !tbaa !25
  %3 = icmp sgt i64 %2, 11976
  br i1 %3, label %4, label %7

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %class.EtherLLC* %this, i64 0, i32 0
  %6 = sdiv i64 %2, 8
  tail call void (%class.cSimpleModule*, i8*, ...)* @_ZNK13cSimpleModule5errorEPKcz(%class.cSimpleModule* %5, i8* getelementptr inbounds ([96 x i8]* @.str7, i64 0, i64 0), i64 %6, i32 1500) #11
  br label %7

; <label>:7                                       ; preds = %4, %0
  %8 = getelementptr inbounds %class.EtherLLC* %this, i64 0, i32 4
  %9 = load i64* %8, align 8, !tbaa !26
  %10 = add nsw i64 %9, 1
  store i64 %10, i64* %8, align 8, !tbaa !26
  %11 = load i32* getelementptr inbounds (%class.cEnvir* @ev, i64 0, i32 1), align 4, !tbaa !27
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %.thread

; <label>:13                                      ; preds = %7
  tail call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* getelementptr inbounds ([36 x i8]* @.str8, i64 0, i64 0)) #11
  %14 = getelementptr inbounds %class.cMessage* %msg, i64 0, i32 0, i32 1
  %15 = load i8** %14, align 8, !tbaa !22
  %16 = icmp eq i8* %15, null
  %..i = select i1 %16, i8* getelementptr inbounds ([1 x i8]* @.str37, i64 0, i64 0), i8* %15
  tail call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* %..i) #11
  tail call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* getelementptr inbounds ([11 x i8]* @.str9, i64 0, i64 0)) #11
  %.pr = load i32* getelementptr inbounds (%class.cEnvir* @ev, i64 0, i32 1), align 4, !tbaa !27
  %17 = icmp eq i32 %.pr, 0
  br i1 %17, label %_ZNK11cSimulation6moduleEi.exit, label %.thread

_ZNK11cSimulation6moduleEi.exit:                  ; preds = %13
  tail call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* getelementptr inbounds ([11 x i8]* @.str10, i64 0, i64 0)) #11
  %18 = getelementptr inbounds %class.cMessage* %msg, i64 0, i32 9
  %19 = load i32* %18, align 4, !tbaa !29
  %20 = sext i32 %19 to i64
  %21 = load %class.cModule*** getelementptr inbounds (%class.cSimulation* @simulation, i64 0, i32 3), align 8, !tbaa !30
  %22 = getelementptr inbounds %class.cModule** %21, i64 %20
  %23 = load %class.cModule** %22, align 8, !tbaa !24
  %24 = bitcast %class.cModule* %23 to i8* (%class.cModule*)***
  %25 = load i8* (%class.cModule*)*** %24, align 8, !tbaa !13
  %26 = getelementptr inbounds i8* (%class.cModule*)** %25, i64 4
  %27 = load i8* (%class.cModule*)** %26, align 8
  %28 = tail call i8* %27(%class.cModule* %23) #11
  tail call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* %28) #11
  tail call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* getelementptr inbounds ([5 x i8]* @.str11, i64 0, i64 0)) #11
  %29 = getelementptr inbounds %class.cMessage* %msg, i64 0, i32 14
  %30 = load double* %29, align 8, !tbaa !35
  tail call void (%class.cEnvir*, i8*, ...)* @_ZN6cEnvir6printfEPKcz(%class.cEnvir* @ev, i8* getelementptr inbounds ([3 x i8]* @.str38, i64 0, i64 0), double %30) #11
  tail call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* getelementptr inbounds ([18 x i8]* @.str12, i64 0, i64 0)) #11
  %31 = getelementptr inbounds %class.cMessage* %msg, i64 0, i32 13
  %32 = load double* %31, align 8, !tbaa !36
  tail call void (%class.cEnvir*, i8*, ...)* @_ZN6cEnvir6printfEPKcz(%class.cEnvir* @ev, i8* getelementptr inbounds ([3 x i8]* @.str38, i64 0, i64 0), double %32) #11
  tail call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* getelementptr inbounds ([2 x i8]* @.str13, i64 0, i64 0)) #11
  br label %.thread

.thread:                                          ; preds = %7, %13, %_ZNK11cSimulation6moduleEi.exit
  %33 = getelementptr inbounds %class.cMessage* %msg, i64 0, i32 0
  %34 = tail call %class.cMessage30* @_Z14check_and_castIP10cMessage30ET_P7cObject(%class.cObject* %33) #11
  %35 = getelementptr inbounds %class.cMessage30* %34, i64 0, i32 1
  %36 = load %class.cPolymorphic** %35, align 8, !tbaa !37
  store %class.cPolymorphic* null, %class.cPolymorphic** %35, align 8, !tbaa !37
  %37 = icmp eq %class.cPolymorphic* %36, null
  br i1 %37, label %.thread3, label %38

; <label>:38                                      ; preds = %.thread
  %39 = bitcast %class.cPolymorphic* %36 to i8*
  %40 = tail call i8* @__dynamic_cast(i8* %39, i8* bitcast ({ i8*, i8* }* @_ZTI12cPolymorphic to i8*), i8* bitcast (i8** @_ZTI9EtherCtrl to i8*), i64 0) #2
  %41 = icmp eq i8* %40, null
  br i1 %41, label %.thread3, label %._crit_edge

._crit_edge:                                      ; preds = %38
  %42 = bitcast i8* %40 to %class.EtherCtrl*
  %.pre = getelementptr inbounds %class.cMessage* %msg, i64 0, i32 0, i32 1
  br label %47

.thread3:                                         ; preds = %.thread, %38
  %43 = getelementptr inbounds %class.EtherLLC* %this, i64 0, i32 0
  %44 = getelementptr inbounds %class.cMessage* %msg, i64 0, i32 0, i32 1
  %45 = load i8** %44, align 8, !tbaa !22
  %46 = icmp eq i8* %45, null
  %..i1 = select i1 %46, i8* getelementptr inbounds ([1 x i8]* @.str37, i64 0, i64 0), i8* %45
  tail call void (%class.cSimpleModule*, i8*, ...)* @_ZNK13cSimpleModule5errorEPKcz(%class.cSimpleModule* %43, i8* getelementptr inbounds ([57 x i8]* @.str14, i64 0, i64 0), i8* %..i1) #11
  br label %47

; <label>:47                                      ; preds = %._crit_edge, %.thread3
  %.pre-phi = phi i8** [ %.pre, %._crit_edge ], [ %44, %.thread3 ]
  %48 = phi i1 [ false, %._crit_edge ], [ true, %.thread3 ]
  %49 = phi %class.EtherCtrl* [ %42, %._crit_edge ], [ null, %.thread3 ]
  %50 = tail call i8* @_ZN7cObjectnwEm(i64 216) #11
  %51 = bitcast i8* %50 to %class.EtherFrameWithLLC*
  %52 = load i8** %.pre-phi, align 8, !tbaa !22
  %53 = icmp eq i8* %52, null
  %..i2 = select i1 %53, i8* getelementptr inbounds ([1 x i8]* @.str37, i64 0, i64 0), i8* %52
  invoke void @_ZN17EtherFrameWithLLCC1EPKci(%class.EtherFrameWithLLC* %51, i8* %..i2, i32 2001) #11
          to label %54 unwind label %96

; <label>:54                                      ; preds = %47
  %55 = bitcast i8* %50 to void (%class.EtherFrameWithLLC*, i32)***
  %56 = load void (%class.EtherFrameWithLLC*, i32)*** %55, align 8, !tbaa !13
  %57 = getelementptr inbounds void (%class.EtherFrameWithLLC*, i32)** %56, i64 28
  %58 = load void (%class.EtherFrameWithLLC*, i32)** %57, align 8
  tail call void %58(%class.EtherFrameWithLLC* %51, i32 0) #11
  %59 = load void (%class.EtherFrameWithLLC*, i32)*** %55, align 8, !tbaa !13
  %60 = getelementptr inbounds void (%class.EtherFrameWithLLC*, i32)** %59, i64 24
  %61 = load void (%class.EtherFrameWithLLC*, i32)** %60, align 8
  %62 = bitcast %class.EtherCtrl* %49 to i32 (%class.EtherCtrl*)***
  %63 = load i32 (%class.EtherCtrl*)*** %62, align 8, !tbaa !13
  %64 = getelementptr inbounds i32 (%class.EtherCtrl*)** %63, i64 11
  %65 = load i32 (%class.EtherCtrl*)** %64, align 8
  %66 = tail call i32 %65(%class.EtherCtrl* %49) #11
  tail call void %61(%class.EtherFrameWithLLC* %51, i32 %66) #11
  %67 = load void (%class.EtherFrameWithLLC*, i32)*** %55, align 8, !tbaa !13
  %68 = getelementptr inbounds void (%class.EtherFrameWithLLC*, i32)** %67, i64 26
  %69 = load void (%class.EtherFrameWithLLC*, i32)** %68, align 8
  %70 = load i32 (%class.EtherCtrl*)*** %62, align 8, !tbaa !13
  %71 = getelementptr inbounds i32 (%class.EtherCtrl*)** %70, i64 13
  %72 = load i32 (%class.EtherCtrl*)** %71, align 8
  %73 = tail call i32 %72(%class.EtherCtrl* %49) #11
  tail call void %69(%class.EtherFrameWithLLC* %51, i32 %73) #11
  %74 = bitcast i8* %50 to %class.EtherFrame*
  %75 = bitcast i8* %50 to void (%class.EtherFrame*, %class.MACAddress*)***
  %76 = load void (%class.EtherFrame*, %class.MACAddress*)*** %75, align 8, !tbaa !13
  %77 = getelementptr inbounds void (%class.EtherFrame*, %class.MACAddress*)** %76, i64 20
  %78 = load void (%class.EtherFrame*, %class.MACAddress*)** %77, align 8
  %79 = bitcast %class.EtherCtrl* %49 to %class.MACAddress* (%class.EtherCtrl*)***
  %80 = load %class.MACAddress* (%class.EtherCtrl*)*** %79, align 8, !tbaa !13
  %81 = getelementptr inbounds %class.MACAddress* (%class.EtherCtrl*)** %80, i64 7
  %82 = load %class.MACAddress* (%class.EtherCtrl*)** %81, align 8
  %83 = tail call dereferenceable(16) %class.MACAddress* %82(%class.EtherCtrl* %49) #11
  tail call void %78(%class.EtherFrame* %74, %class.MACAddress* dereferenceable(16) %83) #11
  %84 = bitcast i8* %50 to %class.cMessage*
  tail call void @_ZN8cMessage9setLengthEl(%class.cMessage* %84, i64 168) #11
  br i1 %48, label %90, label %85

; <label>:85                                      ; preds = %54
  %86 = bitcast %class.EtherCtrl* %49 to void (%class.EtherCtrl*)***
  %87 = load void (%class.EtherCtrl*)*** %86, align 8, !tbaa !13
  %88 = getelementptr inbounds void (%class.EtherCtrl*)** %87, i64 1
  %89 = load void (%class.EtherCtrl*)** %88, align 8
  tail call void %89(%class.EtherCtrl* %49) #11
  br label %90

; <label>:90                                      ; preds = %85, %54
  tail call void @_ZN8cMessage11encapsulateEPS_(%class.cMessage* %84, %class.cMessage* %msg) #11
  %91 = getelementptr inbounds i8* %50, i64 64
  %92 = bitcast i8* %91 to i64*
  %93 = load i64* %92, align 8, !tbaa !25
  %94 = icmp slt i64 %93, 512
  br i1 %94, label %95, label %98

; <label>:95                                      ; preds = %90
  tail call void @_ZN8cMessage9setLengthEl(%class.cMessage* %84, i64 512) #11
  br label %98

; <label>:96                                      ; preds = %47
  %97 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  tail call void @_ZdlPv(i8* %50) #12
  resume { i8*, i32 } %97

; <label>:98                                      ; preds = %95, %90
  %99 = getelementptr inbounds %class.EtherLLC* %this, i64 0, i32 0
  %100 = tail call i32 @_ZN13cSimpleModule4sendEP8cMessagePKci(%class.cSimpleModule* %99, %class.cMessage* %84, i8* getelementptr inbounds ([14 x i8]* @.str15, i64 0, i64 0), i32 -1) #11
  ret void
}
