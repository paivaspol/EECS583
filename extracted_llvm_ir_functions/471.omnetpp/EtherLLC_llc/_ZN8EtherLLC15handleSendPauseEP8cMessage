define void @_ZN8EtherLLC15handleSendPauseEP8cMessage(%class.EtherLLC* %this, %class.cMessage* %msg) unnamed_addr #2 align 2 {
entry:
  %framename = alloca [30 x i8], align 16
  call void @llvm.dbg.value(metadata !{%class.EtherLLC* %this}, i64 0, metadata !5360), !dbg !6593
  call void @llvm.dbg.value(metadata !{%class.cMessage* %msg}, i64 0, metadata !5361), !dbg !6593
  %0 = getelementptr inbounds %class.cMessage* %msg, i64 0, i32 0, !dbg !6594
  %call = call %class.cMessage30* @_Z14check_and_castIP10cMessage30ET_P7cObject(%class.cObject* %0) #11, !dbg !6594
  tail call void @llvm.dbg.value(metadata !{%class.cMessage30* %call}, i64 0, metadata !6595), !dbg !6596
  %ctrlp.i = getelementptr inbounds %class.cMessage30* %call, i64 0, i32 1, !dbg !6597
  %1 = load %class.cPolymorphic** %ctrlp.i, align 8, !dbg !6597, !tbaa !6128
  tail call void @llvm.dbg.value(metadata !{%class.cPolymorphic* %1}, i64 0, metadata !6598), !dbg !6597
  store %class.cPolymorphic* null, %class.cPolymorphic** %ctrlp.i, align 8, !dbg !6597, !tbaa !6128
  %2 = icmp eq %class.cPolymorphic* %1, null, !dbg !6594
  br i1 %2, label %if.then, label %dynamic_cast.end, !dbg !6594

dynamic_cast.end:                                 ; preds = %entry
  %3 = bitcast %class.cPolymorphic* %1 to i8*, !dbg !6594
  %4 = call i8* @__dynamic_cast(i8* %3, i8* bitcast ({ i8*, i8* }* @_ZTI12cPolymorphic to i8*), i8* bitcast (i8** @_ZTI9EtherCtrl to i8*), i64 0) #1, !dbg !6594
  %5 = bitcast i8* %4 to %class.EtherCtrl*, !dbg !6594
  call void @llvm.dbg.value(metadata !{%class.EtherCtrl* %8}, i64 0, metadata !5362), !dbg !6594
  %tobool = icmp eq i8* %4, null, !dbg !6599
  br i1 %tobool, label %if.then, label %if.end, !dbg !6599

if.then:                                          ; preds = %entry, %dynamic_cast.end
  %6 = getelementptr inbounds %class.EtherLLC* %this, i64 0, i32 0, !dbg !6600
  tail call void @llvm.dbg.value(metadata !{%class.cObject* %0}, i64 0, metadata !6601), !dbg !6602
  %namestr.i = getelementptr inbounds %class.cMessage* %msg, i64 0, i32 0, i32 1, !dbg !6603
  %7 = load i8** %namestr.i, align 8, !dbg !6603, !tbaa !6128
  %tobool.i = icmp eq i8* %7, null, !dbg !6603
  %..i = select i1 %tobool.i, i8* getelementptr inbounds ([1 x i8]* @.str41, i64 0, i64 0), i8* %7, !dbg !6603
  call void (%class.cSimpleModule*, i8*, ...)* @_ZNK13cSimpleModule5errorEPKcz(%class.cSimpleModule* %6, i8* getelementptr inbounds ([57 x i8]* @.str15, i64 0, i64 0), i8* %..i) #11, !dbg !6600
  br label %if.end, !dbg !6600

if.end:                                           ; preds = %dynamic_cast.end, %if.then
  %8 = phi %class.EtherCtrl* [ %5, %dynamic_cast.end ], [ null, %if.then ]
  %9 = bitcast %class.EtherCtrl* %8 to i32 (%class.EtherCtrl*)***, !dbg !6604
  %vtable = load i32 (%class.EtherCtrl*)*** %9, align 8, !dbg !6604, !tbaa !6125
  %vfn = getelementptr inbounds i32 (%class.EtherCtrl*)** %vtable, i64 15, !dbg !6604
  %10 = load i32 (%class.EtherCtrl*)** %vfn, align 8, !dbg !6604
  %call4 = call i32 %10(%class.EtherCtrl* %8) #11, !dbg !6604
  call void @llvm.dbg.value(metadata !{i32 %call4}, i64 0, metadata !5363), !dbg !6604
  %11 = load i32* getelementptr inbounds (%class.cEnvir* @ev, i64 0, i32 1), align 8, !dbg !6605, !tbaa !6114
  %tobool5 = icmp eq i32 %11, 0, !dbg !6605
  br i1 %tobool5, label %cond.false, label %cond.end, !dbg !6605

cond.false:                                       ; preds = %if.end
  call void @llvm.dbg.value(metadata !6227, i64 0, metadata !6606), !dbg !6607
  call void @llvm.dbg.value(metadata !6608, i64 0, metadata !6609), !dbg !6607
  call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* getelementptr inbounds ([49 x i8]* @.str28, i64 0, i64 0)) #11, !dbg !6610
  call void @llvm.dbg.value(metadata !6227, i64 0, metadata !6611), !dbg !6612
  call void @llvm.dbg.value(metadata !{i32 %call4}, i64 0, metadata !6613), !dbg !6612
  call void (%class.cEnvir*, i8*, ...)* @_ZN6cEnvir6printfEPKcz(%class.cEnvir* @ev, i8* getelementptr inbounds ([3 x i8]* @.str39, i64 0, i64 0), i32 %call4) #11, !dbg !6614
  call void @llvm.dbg.value(metadata !6227, i64 0, metadata !6606), !dbg !6607
  call void @llvm.dbg.value(metadata !6615, i64 0, metadata !6609), !dbg !6607
  call void @_ZN6cEnvir4putsEPKc(%class.cEnvir* @ev, i8* getelementptr inbounds ([8 x i8]* @.str29, i64 0, i64 0)) #11, !dbg !6610
  br label %cond.end, !dbg !6605

cond.end:                                         ; preds = %if.end, %cond.false
  call void @llvm.dbg.declare(metadata !{[30 x i8]* %framename}, metadata !5364), !dbg !6616
  %arraydecay = getelementptr inbounds [30 x i8]* %framename, i64 0, i64 0, !dbg !6617
  %mod_id.i = getelementptr inbounds %class.EtherLLC* %this, i64 0, i32 0, i32 0, i32 3, !dbg !6618
  %12 = load i32* %mod_id.i, align 4, !dbg !6618, !tbaa !6114
  %seqNum = getelementptr inbounds %class.EtherLLC* %this, i64 0, i32 1, !dbg !6617
  %13 = load i32* %seqNum, align 4, !dbg !6617, !tbaa !6114
  %inc = add nsw i32 %13, 1, !dbg !6617
  store i32 %inc, i32* %seqNum, align 4, !dbg !6617, !tbaa !6114
  %call10 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([12 x i8]* @.str30, i64 0, i64 0), i32 %12, i32 %13) #12, !dbg !6617
  %call11 = call i8* @_ZN7cObjectnwEm(i64 208) #11, !dbg !6620
  %14 = bitcast i8* %call11 to %class.EtherPauseFrame*, !dbg !6620
  invoke void @_ZN15EtherPauseFrameC1EPKci(%class.EtherPauseFrame* %14, i8* %arraydecay, i32 2002) #11
          to label %invoke.cont unwind label %lpad, !dbg !6620

invoke.cont:                                      ; preds = %cond.end
  call void @llvm.dbg.value(metadata !{%class.EtherPauseFrame* %14}, i64 0, metadata !5368), !dbg !6620
  %15 = bitcast i8* %call11 to void (%class.EtherPauseFrame*, i32)***, !dbg !6621
  %vtable13 = load void (%class.EtherPauseFrame*, i32)*** %15, align 8, !dbg !6621, !tbaa !6125
  %vfn14 = getelementptr inbounds void (%class.EtherPauseFrame*, i32)** %vtable13, i64 24, !dbg !6621
  %16 = load void (%class.EtherPauseFrame*, i32)** %vfn14, align 8, !dbg !6621
  call void %16(%class.EtherPauseFrame* %14, i32 %call4) #11, !dbg !6621
  %17 = bitcast i8* %call11 to %class.cMessage*, !dbg !6622
  call void @_ZN8cMessage9setLengthEl(%class.cMessage* %17, i64 192) #11, !dbg !6622
  tail call void @llvm.dbg.value(metadata !{%class.cMessage* %17}, i64 0, metadata !6623), !dbg !6625
  %len.i = getelementptr inbounds i8* %call11, i64 64, !dbg !6626
  %18 = bitcast i8* %len.i to i64*, !dbg !6626
  %19 = load i64* %18, align 8, !dbg !6626, !tbaa !6221
  %cmp = icmp slt i64 %19, 512, !dbg !6624
  br i1 %cmp, label %if.then16, label %if.end17, !dbg !6624

if.then16:                                        ; preds = %invoke.cont
  call void @_ZN8cMessage9setLengthEl(%class.cMessage* %17, i64 512) #11, !dbg !6627
  br label %if.end17, !dbg !6627

lpad:                                             ; preds = %cond.end
  %20 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !6620
  call void @_ZdlPv(i8* %call11) #12, !dbg !6620
  resume { i8*, i32 } %20, !dbg !6620

if.end17:                                         ; preds = %if.then16, %invoke.cont
  %21 = getelementptr inbounds %class.EtherLLC* %this, i64 0, i32 0, !dbg !6628
  %call18 = call i32 @_ZN13cSimpleModule4sendEP8cMessagePKci(%class.cSimpleModule* %21, %class.cMessage* %17, i8* getelementptr inbounds ([14 x i8]* @.str16, i64 0, i64 0), i32 -1) #11, !dbg !6628
  %isnull = icmp eq %class.cMessage* %msg, null, !dbg !6629
  br i1 %isnull, label %delete.end, label %delete.notnull, !dbg !6629

delete.notnull:                                   ; preds = %if.end17
  %22 = bitcast %class.cMessage* %msg to void (%class.cMessage*)***, !dbg !6629
  %vtable19 = load void (%class.cMessage*)*** %22, align 8, !dbg !6629, !tbaa !6125
  %vfn20 = getelementptr inbounds void (%class.cMessage*)** %vtable19, i64 1, !dbg !6629
  %23 = load void (%class.cMessage*)** %vfn20, align 8, !dbg !6629
  call void %23(%class.cMessage* %msg) #11, !dbg !6629
  br label %delete.end, !dbg !6629

delete.end:                                       ; preds = %delete.notnull, %if.end17
  ret void, !dbg !6630
}
