define void @_ZN11EtherSwitch13doBuildInsideEv(%class.EtherSwitch* %this) unnamed_addr #0 align 2 {
  %value = alloca %class.cPar, align 8
  %b1 = alloca [64 x i8], align 16
  %machines = alloca %class.cArray, align 8
  %1 = getelementptr inbounds %class.EtherSwitch* %this, i64 0, i32 0, i32 0
  %2 = bitcast %class.cPar* %value to i8*
  call void @llvm.lifetime.start(i64 120, i8* %2) #2
  call void @_ZN4cParC1EPKc(%class.cPar* %value, i8* null) #9
  %3 = getelementptr inbounds [64 x i8]* %b1, i64 0, i64 0
  call void @llvm.lifetime.start(i64 64, i8* %3) #2
  %4 = bitcast %class.cArray* %machines to i8*
  call void @llvm.lifetime.start(i64 80, i8* %4) #2
  invoke void @_ZN6cArrayC1EPKcii(%class.cArray* %machines, i8* null, i32 0, i32 10) #9
          to label %5 unwind label %7

; <label>:5                                       ; preds = %0
  %6 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([14 x i8]* @.str, i64 0, i64 0)) #9
          to label %13 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:7                                       ; preds = %732, %0
  %8 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  %10 = extractvalue { i8*, i32 } %8, 1
  br label %735

.loopexit:                                        ; preds = %380, %402, %425, %427, %470, %491, %513, %515, %558, %579, %601, %603, %646, %667, %689, %691
  %lpad.loopexit = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.loopexit.split-lp

.loopexit.split-lp.loopexit:                      ; preds = %317, %314, %311, %.lr.ph99
  %lpad.loopexit52 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.loopexit.split-lp

.loopexit.split-lp.loopexit.split-lp.loopexit:    ; preds = %209, %213, %_ZN4cParaSEPKc.exit51, %219, %245, %249, %252, %272, %_ZN6cArrayixEi.exit48, %280, %281, %300, %._crit_edge, %323, %303, %275, %215
  %lpad.loopexit55 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.loopexit.split-lp

.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %133, %131, %128, %.lr.ph106
  %lpad.loopexit57 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.loopexit.split-lp

.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %157, %99, %353, %43, %_ZN4cParcvPKcEv.exit, %15, %721, %713, %_ZN4cParcvlEv.exit._crit_edge, %699, %678, %656, %635, %611, %590, %568, %547, %523, %502, %480, %459, %435, %414, %391, %369, %351, %338, %335, %333, %._crit_edge103, %289, %261, %227, %202, %191, %178, %167, %156, %150, %149, %145, %143, %139, %._crit_edge107, %112, %104, %103, %_ZN6cArrayixEi.exit, %88, %80, %77, %73, %55, %47, %_ZN4cParaSEPKc.exit, %41, %37, %26, %13, %5
  %lpad.loopexit.split-lp58 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  br label %.loopexit.split-lp

.loopexit.split-lp:                               ; preds = %.loopexit.split-lp.loopexit, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %.loopexit.split-lp.loopexit.split-lp.loopexit, %.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %.loopexit ], [ %lpad.loopexit52, %.loopexit.split-lp.loopexit ], [ %lpad.loopexit55, %.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit57, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp58, %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ]
  %11 = extractvalue { i8*, i32 } %lpad.phi, 0
  %12 = extractvalue { i8*, i32 } %lpad.phi, 1
  br label %734

; <label>:13                                      ; preds = %5
  %14 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %1, i8* getelementptr inbounds ([14 x i8]* @.str, i64 0, i64 0)) #9
          to label %15 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:15                                      ; preds = %13
  %16 = invoke i8* @_ZN4cPar11stringValueEv(%class.cPar* %14) #9
          to label %_ZN4cParcvPKcEv.exit unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParcvPKcEv.exit:                             ; preds = %15
  %17 = invoke %class.cObject* @_ZNK5cHead4findEPKc(%class.cHead* @modtypes, i8* %16) #9
          to label %18 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:18                                      ; preds = %_ZN4cParcvPKcEv.exit
  %19 = bitcast %class.cObject* %17 to %class.cModuleType*
  %20 = icmp eq %class.cObject* %17, null
  br i1 %20, label %21, label %37

; <label>:21                                      ; preds = %18
  %22 = call i8* @__cxa_allocate_exception(i64 8) #2
  %23 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %24 unwind label %28

; <label>:24                                      ; preds = %21
  %25 = bitcast i8* %23 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %25, i8* getelementptr inbounds ([43 x i8]* @.str3, i64 0, i64 0), i8* %16) #9
          to label %26 unwind label %32

; <label>:26                                      ; preds = %24
  %27 = bitcast i8* %22 to i8**
  store i8* %23, i8** %27, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %22, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:28                                      ; preds = %21
  %29 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  %31 = extractvalue { i8*, i32 } %29, 1
  br label %36

; <label>:32                                      ; preds = %24
  %33 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  %35 = extractvalue { i8*, i32 } %33, 1
  call void @_ZdlPv(i8* %23) #10
  br label %36

; <label>:36                                      ; preds = %32, %28
  %.110 = phi i32 [ %35, %32 ], [ %31, %28 ]
  %.1 = phi i8* [ %34, %32 ], [ %30, %28 ]
  call void @__cxa_free_exception(i8* %22) #2
  br label %734

; <label>:37                                      ; preds = %18
  %38 = invoke i8* @_ZN7cObjectnwEm(i64 120) #9
          to label %39 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:39                                      ; preds = %37
  %40 = bitcast i8* %38 to %class.cPar*
  invoke void @_ZN4cParC1EPKc(%class.cPar* %40, i8* null) #9
          to label %41 unwind label %57

; <label>:41                                      ; preds = %39
  %42 = invoke i8* @_ZN7cModule10machineParEPKc(%class.cModule* %1, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0)) #9
          to label %43 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:43                                      ; preds = %41
  %44 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setStringValueEPKc(%class.cPar* %40, i8* %42) #9
          to label %_ZN4cParaSEPKc.exit unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParaSEPKc.exit:                              ; preds = %43
  %45 = bitcast i8* %38 to %class.cObject*
  %46 = invoke i32 @_ZN6cArray3addEP7cObject(%class.cArray* %machines, %class.cObject* %45) #9
          to label %47 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:47                                      ; preds = %_ZN4cParaSEPKc.exit
  %48 = invoke zeroext i1 @_Z11memoryIsLowv() #9
          to label %49 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:49                                      ; preds = %47
  br i1 %48, label %50, label %70

; <label>:50                                      ; preds = %49
  %51 = call i8* @__cxa_allocate_exception(i64 8) #2
  %52 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %53 unwind label %61

; <label>:53                                      ; preds = %50
  %54 = bitcast i8* %52 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %54, i32 11) #9
          to label %55 unwind label %65

; <label>:55                                      ; preds = %53
  %56 = bitcast i8* %51 to i8**
  store i8* %52, i8** %56, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %51, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:57                                      ; preds = %39
  %58 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %59 = extractvalue { i8*, i32 } %58, 0
  %60 = extractvalue { i8*, i32 } %58, 1
  call void @_ZdlPv(i8* %38) #10
  br label %734

; <label>:61                                      ; preds = %50
  %62 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %63 = extractvalue { i8*, i32 } %62, 0
  %64 = extractvalue { i8*, i32 } %62, 1
  br label %69

; <label>:65                                      ; preds = %53
  %66 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  %68 = extractvalue { i8*, i32 } %66, 1
  call void @_ZdlPv(i8* %52) #10
  br label %69

; <label>:69                                      ; preds = %65, %61
  %.211 = phi i32 [ %68, %65 ], [ %64, %61 ]
  %.2 = phi i8* [ %67, %65 ], [ %63, %61 ]
  call void @__cxa_free_exception(i8* %51) #2
  br label %734

; <label>:70                                      ; preds = %49
  %71 = load %class.cNetMod** getelementptr inbounds (%class.cSimulation* @simulation, i64 0, i32 10), align 8, !tbaa !6
  %72 = icmp eq %class.cNetMod* %71, null
  br i1 %72, label %77, label %73

; <label>:73                                      ; preds = %70
  %74 = invoke i32 @_ZN7cNetMod16isLocalMachineInERK6cArray(%class.cNetMod* %71, %class.cArray* dereferenceable(80) %machines) #9
          to label %75 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:75                                      ; preds = %73
  %76 = icmp ne i32 %74, 0
  br label %77

; <label>:77                                      ; preds = %75, %70
  %78 = phi i1 [ true, %70 ], [ %76, %75 ]
  %79 = invoke %class.cModule* @_ZN11cModuleType6createEPKcP7cModuleb(%class.cModuleType* %19, i8* getelementptr inbounds ([10 x i8]* @.str5, i64 0, i64 0), %class.cModule* %1, i1 zeroext %78) #9
          to label %80 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:80                                      ; preds = %77
  %81 = invoke zeroext i1 @_Z11memoryIsLowv() #9
          to label %82 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:82                                      ; preds = %80
  br i1 %81, label %83, label %99

; <label>:83                                      ; preds = %82
  %84 = call i8* @__cxa_allocate_exception(i64 8) #2
  %85 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %86 unwind label %90

; <label>:86                                      ; preds = %83
  %87 = bitcast i8* %85 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %87, i32 11) #9
          to label %88 unwind label %94

; <label>:88                                      ; preds = %86
  %89 = bitcast i8* %84 to i8**
  store i8* %85, i8** %89, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %84, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:90                                      ; preds = %83
  %91 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %92 = extractvalue { i8*, i32 } %91, 0
  %93 = extractvalue { i8*, i32 } %91, 1
  br label %98

; <label>:94                                      ; preds = %86
  %95 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %96 = extractvalue { i8*, i32 } %95, 0
  %97 = extractvalue { i8*, i32 } %95, 1
  call void @_ZdlPv(i8* %85) #10
  br label %98

; <label>:98                                      ; preds = %94, %90
  %.312 = phi i32 [ %97, %94 ], [ %93, %90 ]
  %.3 = phi i8* [ %96, %94 ], [ %92, %90 ]
  call void @__cxa_free_exception(i8* %84) #2
  br label %734

; <label>:99                                      ; preds = %82
  %100 = invoke %class.cObject* @_ZN6cArray3getEi(%class.cArray* %machines, i32 0) #9
          to label %_ZN6cArrayixEi.exit unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN6cArrayixEi.exit:                              ; preds = %99
  %101 = bitcast %class.cObject* %100 to %class.cPar*
  %102 = invoke i8* @_ZN4cPar11stringValueEv(%class.cPar* %101) #9
          to label %103 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:103                                     ; preds = %_ZN6cArrayixEi.exit
  invoke void @_ZN7cModule13setMachineParEPKcS1_(%class.cModule* %79, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0), i8* %102) #9
          to label %104 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:104                                     ; preds = %103
  %105 = invoke zeroext i1 @_Z11memoryIsLowv() #9
          to label %106 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:106                                     ; preds = %104
  br i1 %105, label %107, label %123

; <label>:107                                     ; preds = %106
  %108 = call i8* @__cxa_allocate_exception(i64 8) #2
  %109 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %110 unwind label %114

; <label>:110                                     ; preds = %107
  %111 = bitcast i8* %109 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %111, i32 11) #9
          to label %112 unwind label %118

; <label>:112                                     ; preds = %110
  %113 = bitcast i8* %108 to i8**
  store i8* %109, i8** %113, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %108, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:114                                     ; preds = %107
  %115 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %116 = extractvalue { i8*, i32 } %115, 0
  %117 = extractvalue { i8*, i32 } %115, 1
  br label %122

; <label>:118                                     ; preds = %110
  %119 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %120 = extractvalue { i8*, i32 } %119, 0
  %121 = extractvalue { i8*, i32 } %119, 1
  call void @_ZdlPv(i8* %109) #10
  br label %122

; <label>:122                                     ; preds = %118, %114
  %.413 = phi i32 [ %121, %118 ], [ %117, %114 ]
  %.4 = phi i8* [ %120, %118 ], [ %116, %114 ]
  call void @__cxa_free_exception(i8* %108) #2
  br label %734

; <label>:123                                     ; preds = %106
  %124 = getelementptr inbounds %class.cModule* %79, i64 0, i32 6, i32 5
  %125 = load i32* %124, align 4, !tbaa !14
  %126 = icmp sgt i32 %125, -1
  br i1 %126, label %.lr.ph106, label %._crit_edge107

.lr.ph106:                                        ; preds = %123, %135
  %k.0104 = phi i32 [ %136, %135 ], [ 0, %123 ]
  %127 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEi(%class.cModule* %79, i32 %k.0104) #9
          to label %128 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:128                                     ; preds = %.lr.ph106
  %129 = invoke zeroext i1 @_ZNK4cPar7isInputEv(%class.cPar* %127) #9
          to label %130 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:130                                     ; preds = %128
  br i1 %129, label %131, label %135

; <label>:131                                     ; preds = %130
  %132 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEi(%class.cModule* %79, i32 %k.0104) #9
          to label %133 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:133                                     ; preds = %131
  %134 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar4readEv(%class.cPar* %132) #9
          to label %135 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:135                                     ; preds = %130, %133
  %136 = add nuw nsw i32 %k.0104, 1
  %137 = icmp slt i32 %k.0104, %125
  br i1 %137, label %.lr.ph106, label %._crit_edge107

._crit_edge107:                                   ; preds = %135, %123
  %138 = invoke %class.cGate* @_ZN7cModule4gateEPKci(%class.cModule* %1, i8* getelementptr inbounds ([3 x i8]* @.str6, i64 0, i64 0), i32 -1) #9
          to label %139 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:139                                     ; preds = %._crit_edge107
  %140 = getelementptr inbounds %class.cGate* %138, i64 0, i32 3
  %141 = load i32* %140, align 4, !tbaa !16
  %142 = icmp slt i32 %141, 0
  %..i46 = select i1 %142, i32 1, i32 %141
  invoke void @_ZN7cModule11setGateSizeEPKci(%class.cModule* %79, i8* getelementptr inbounds ([13 x i8]* @.str8, i64 0, i64 0), i32 %..i46) #9
          to label %143 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:143                                     ; preds = %139
  %144 = invoke %class.cGate* @_ZN7cModule4gateEPKci(%class.cModule* %1, i8* getelementptr inbounds ([3 x i8]* @.str6, i64 0, i64 0), i32 -1) #9
          to label %145 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:145                                     ; preds = %143
  %146 = getelementptr inbounds %class.cGate* %144, i64 0, i32 3
  %147 = load i32* %146, align 4, !tbaa !16
  %148 = icmp slt i32 %147, 0
  %..i47 = select i1 %148, i32 1, i32 %147
  invoke void @_ZN7cModule11setGateSizeEPKci(%class.cModule* %79, i8* getelementptr inbounds ([14 x i8]* @.str10, i64 0, i64 0), i32 %..i47) #9
          to label %149 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:149                                     ; preds = %145
  invoke void @_ZN7cModule16setDisplayStringEiPKcb(%class.cModule* %79, i32 0, i8* getelementptr inbounds ([20 x i8]* @.str11, i64 0, i64 0), i1 zeroext true) #9
          to label %150 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:150                                     ; preds = %149
  %151 = bitcast %class.cModule* %79 to i32 (%class.cModule*)***
  %152 = load i32 (%class.cModule*)*** %151, align 8, !tbaa !19
  %153 = getelementptr inbounds i32 (%class.cModule*)** %152, i64 21
  %154 = load i32 (%class.cModule*)** %153, align 8
  %155 = invoke i32 %154(%class.cModule* %79) #9
          to label %156 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:156                                     ; preds = %150
  invoke void @_ZN6cArray5clearEv(%class.cArray* %machines) #9
          to label %157 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:157                                     ; preds = %156
  %158 = invoke %class.cObject* @_ZNK5cHead4findEPKc(%class.cHead* @modtypes, i8* getelementptr inbounds ([9 x i8]* @.str12, i64 0, i64 0)) #9
          to label %159 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:159                                     ; preds = %157
  %160 = bitcast %class.cObject* %158 to %class.cModuleType*
  %161 = icmp eq %class.cObject* %158, null
  br i1 %161, label %162, label %178

; <label>:162                                     ; preds = %159
  %163 = call i8* @__cxa_allocate_exception(i64 8) #2
  %164 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %165 unwind label %169

; <label>:165                                     ; preds = %162
  %166 = bitcast i8* %164 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %166, i8* getelementptr inbounds ([43 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str12, i64 0, i64 0)) #9
          to label %167 unwind label %173

; <label>:167                                     ; preds = %165
  %168 = bitcast i8* %163 to i8**
  store i8* %164, i8** %168, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %163, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:169                                     ; preds = %162
  %170 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %171 = extractvalue { i8*, i32 } %170, 0
  %172 = extractvalue { i8*, i32 } %170, 1
  br label %177

; <label>:173                                     ; preds = %165
  %174 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %175 = extractvalue { i8*, i32 } %174, 0
  %176 = extractvalue { i8*, i32 } %174, 1
  call void @_ZdlPv(i8* %164) #10
  br label %177

; <label>:177                                     ; preds = %173, %169
  %.716 = phi i32 [ %176, %173 ], [ %172, %169 ]
  %.7 = phi i8* [ %175, %173 ], [ %171, %169 ]
  call void @__cxa_free_exception(i8* %163) #2
  br label %734

; <label>:178                                     ; preds = %159
  %179 = invoke %class.cGate* @_ZN7cModule4gateEPKci(%class.cModule* %1, i8* getelementptr inbounds ([3 x i8]* @.str6, i64 0, i64 0), i32 -1) #9
          to label %180 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:180                                     ; preds = %178
  %181 = getelementptr inbounds %class.cGate* %179, i64 0, i32 3
  %182 = load i32* %181, align 4, !tbaa !16
  %183 = icmp slt i32 %182, 0
  %..i50 = select i1 %183, i32 1, i32 %182
  %184 = sext i32 %..i50 to i64
  %185 = icmp slt i32 %..i50, 1
  br i1 %185, label %186, label %202

; <label>:186                                     ; preds = %180
  %187 = call i8* @__cxa_allocate_exception(i64 8) #2
  %188 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %189 unwind label %193

; <label>:189                                     ; preds = %186
  %190 = bitcast i8* %188 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %190, i8* getelementptr inbounds ([65 x i8]* @.str13, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str14, i64 0, i64 0), i32 %..i50, i8* getelementptr inbounds ([12 x i8]* @.str9, i64 0, i64 0)) #9
          to label %191 unwind label %197

; <label>:191                                     ; preds = %189
  %192 = bitcast i8* %187 to i8**
  store i8* %188, i8** %192, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %187, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:193                                     ; preds = %186
  %194 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %195 = extractvalue { i8*, i32 } %194, 0
  %196 = extractvalue { i8*, i32 } %194, 1
  br label %201

; <label>:197                                     ; preds = %189
  %198 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %199 = extractvalue { i8*, i32 } %198, 0
  %200 = extractvalue { i8*, i32 } %198, 1
  call void @_ZdlPv(i8* %188) #10
  br label %201

; <label>:201                                     ; preds = %197, %193
  %.817 = phi i32 [ %200, %197 ], [ %196, %193 ]
  %.8 = phi i8* [ %199, %197 ], [ %195, %193 ]
  call void @__cxa_free_exception(i8* %187) #2
  br label %734

; <label>:202                                     ; preds = %180
  %203 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %184, i64 8)
  %204 = extractvalue { i64, i1 } %203, 1
  %205 = extractvalue { i64, i1 } %203, 0
  %206 = select i1 %204, i64 -1, i64 %205
  %207 = invoke noalias i8* @_Znam(i64 %206) #11
          to label %.lr.ph102 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

.lr.ph102:                                        ; preds = %202
  %208 = bitcast i8* %207 to %class.cModule**
  br label %209

; <label>:209                                     ; preds = %.lr.ph102, %330
  %sub_i.0100 = phi i64 [ 0, %.lr.ph102 ], [ %331, %330 ]
  %210 = invoke i8* @_ZN7cObjectnwEm(i64 120) #9
          to label %211 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:211                                     ; preds = %209
  %212 = bitcast i8* %210 to %class.cPar*
  invoke void @_ZN4cParC1EPKc(%class.cPar* %212, i8* null) #9
          to label %213 unwind label %229

; <label>:213                                     ; preds = %211
  %214 = invoke i8* @_ZN7cModule10machineParEPKc(%class.cModule* %1, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0)) #9
          to label %215 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:215                                     ; preds = %213
  %216 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setStringValueEPKc(%class.cPar* %212, i8* %214) #9
          to label %_ZN4cParaSEPKc.exit51 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

_ZN4cParaSEPKc.exit51:                            ; preds = %215
  %217 = bitcast i8* %210 to %class.cObject*
  %218 = invoke i32 @_ZN6cArray3addEP7cObject(%class.cArray* %machines, %class.cObject* %217) #9
          to label %219 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:219                                     ; preds = %_ZN4cParaSEPKc.exit51
  %220 = invoke zeroext i1 @_Z11memoryIsLowv() #9
          to label %221 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:221                                     ; preds = %219
  br i1 %220, label %222, label %242

; <label>:222                                     ; preds = %221
  %223 = call i8* @__cxa_allocate_exception(i64 8) #2
  %224 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %225 unwind label %233

; <label>:225                                     ; preds = %222
  %226 = bitcast i8* %224 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %226, i32 11) #9
          to label %227 unwind label %237

; <label>:227                                     ; preds = %225
  %228 = bitcast i8* %223 to i8**
  store i8* %224, i8** %228, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %223, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:229                                     ; preds = %211
  %230 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %231 = extractvalue { i8*, i32 } %230, 0
  %232 = extractvalue { i8*, i32 } %230, 1
  call void @_ZdlPv(i8* %210) #10
  br label %734

; <label>:233                                     ; preds = %222
  %234 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %235 = extractvalue { i8*, i32 } %234, 0
  %236 = extractvalue { i8*, i32 } %234, 1
  br label %241

; <label>:237                                     ; preds = %225
  %238 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %239 = extractvalue { i8*, i32 } %238, 0
  %240 = extractvalue { i8*, i32 } %238, 1
  call void @_ZdlPv(i8* %224) #10
  br label %241

; <label>:241                                     ; preds = %237, %233
  %.918 = phi i32 [ %240, %237 ], [ %236, %233 ]
  %.9 = phi i8* [ %239, %237 ], [ %235, %233 ]
  call void @__cxa_free_exception(i8* %223) #2
  br label %734

; <label>:242                                     ; preds = %221
  %243 = load %class.cNetMod** getelementptr inbounds (%class.cSimulation* @simulation, i64 0, i32 10), align 8, !tbaa !6
  %244 = icmp eq %class.cNetMod* %243, null
  br i1 %244, label %249, label %245

; <label>:245                                     ; preds = %242
  %246 = invoke i32 @_ZN7cNetMod16isLocalMachineInERK6cArray(%class.cNetMod* %243, %class.cArray* dereferenceable(80) %machines) #9
          to label %247 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:247                                     ; preds = %245
  %248 = icmp ne i32 %246, 0
  br label %249

; <label>:249                                     ; preds = %247, %242
  %250 = phi i1 [ true, %242 ], [ %248, %247 ]
  %251 = invoke %class.cModule* @_ZN11cModuleType6createEPKcP7cModuleb(%class.cModuleType* %160, i8* getelementptr inbounds ([4 x i8]* @.str14, i64 0, i64 0), %class.cModule* %1, i1 zeroext %250) #9
          to label %252 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:252                                     ; preds = %249
  %253 = getelementptr inbounds %class.cModule** %208, i64 %sub_i.0100
  store %class.cModule* %251, %class.cModule** %253, align 8, !tbaa !2
  %254 = invoke zeroext i1 @_Z11memoryIsLowv() #9
          to label %255 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:255                                     ; preds = %252
  br i1 %254, label %256, label %272

; <label>:256                                     ; preds = %255
  %257 = call i8* @__cxa_allocate_exception(i64 8) #2
  %258 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %259 unwind label %263

; <label>:259                                     ; preds = %256
  %260 = bitcast i8* %258 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %260, i32 11) #9
          to label %261 unwind label %267

; <label>:261                                     ; preds = %259
  %262 = bitcast i8* %257 to i8**
  store i8* %258, i8** %262, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %257, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:263                                     ; preds = %256
  %264 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %265 = extractvalue { i8*, i32 } %264, 0
  %266 = extractvalue { i8*, i32 } %264, 1
  br label %271

; <label>:267                                     ; preds = %259
  %268 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %269 = extractvalue { i8*, i32 } %268, 0
  %270 = extractvalue { i8*, i32 } %268, 1
  call void @_ZdlPv(i8* %258) #10
  br label %271

; <label>:271                                     ; preds = %267, %263
  %.1019 = phi i32 [ %270, %267 ], [ %266, %263 ]
  %.10 = phi i8* [ %269, %267 ], [ %265, %263 ]
  call void @__cxa_free_exception(i8* %257) #2
  br label %734

; <label>:272                                     ; preds = %255
  %273 = load %class.cModule** %253, align 8, !tbaa !2
  %274 = trunc i64 %sub_i.0100 to i32
  invoke void @_ZN7cModule8setIndexEii(%class.cModule* %273, i32 %274, i32 %..i50) #9
          to label %275 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:275                                     ; preds = %272
  %276 = load %class.cModule** %253, align 8, !tbaa !2
  %277 = invoke %class.cObject* @_ZN6cArray3getEi(%class.cArray* %machines, i32 0) #9
          to label %_ZN6cArrayixEi.exit48 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

_ZN6cArrayixEi.exit48:                            ; preds = %275
  %278 = bitcast %class.cObject* %277 to %class.cPar*
  %279 = invoke i8* @_ZN4cPar11stringValueEv(%class.cPar* %278) #9
          to label %280 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:280                                     ; preds = %_ZN6cArrayixEi.exit48
  invoke void @_ZN7cModule13setMachineParEPKcS1_(%class.cModule* %276, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0), i8* %279) #9
          to label %281 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:281                                     ; preds = %280
  %282 = invoke zeroext i1 @_Z11memoryIsLowv() #9
          to label %283 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:283                                     ; preds = %281
  br i1 %282, label %284, label %300

; <label>:284                                     ; preds = %283
  %285 = call i8* @__cxa_allocate_exception(i64 8) #2
  %286 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %287 unwind label %291

; <label>:287                                     ; preds = %284
  %288 = bitcast i8* %286 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %288, i32 11) #9
          to label %289 unwind label %295

; <label>:289                                     ; preds = %287
  %290 = bitcast i8* %285 to i8**
  store i8* %286, i8** %290, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %285, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:291                                     ; preds = %284
  %292 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %293 = extractvalue { i8*, i32 } %292, 0
  %294 = extractvalue { i8*, i32 } %292, 1
  br label %299

; <label>:295                                     ; preds = %287
  %296 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %297 = extractvalue { i8*, i32 } %296, 0
  %298 = extractvalue { i8*, i32 } %296, 1
  call void @_ZdlPv(i8* %286) #10
  br label %299

; <label>:299                                     ; preds = %295, %291
  %.1120 = phi i32 [ %298, %295 ], [ %294, %291 ]
  %.11 = phi i8* [ %297, %295 ], [ %293, %291 ]
  call void @__cxa_free_exception(i8* %285) #2
  br label %734

; <label>:300                                     ; preds = %283
  %301 = load %class.cModule** %253, align 8, !tbaa !2
  %302 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEPKc(%class.cModule* %301, i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0)) #9
          to label %303 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:303                                     ; preds = %300
  %304 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar12setBoolValueEb(%class.cPar* %302, i1 zeroext true) #9
          to label %_ZN4cParaSEb.exit unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

_ZN4cParaSEb.exit:                                ; preds = %303
  %305 = load %class.cModule** %253, align 8, !tbaa !2
  %306 = getelementptr inbounds %class.cModule* %305, i64 0, i32 6, i32 5
  %307 = load i32* %306, align 4, !tbaa !14
  %308 = icmp sgt i32 %307, -1
  br i1 %308, label %.lr.ph99, label %._crit_edge

.lr.ph99:                                         ; preds = %_ZN4cParaSEb.exit, %319
  %309 = phi %class.cModule* [ %322, %319 ], [ %305, %_ZN4cParaSEb.exit ]
  %k.198 = phi i32 [ %320, %319 ], [ 0, %_ZN4cParaSEb.exit ]
  %310 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEi(%class.cModule* %309, i32 %k.198) #9
          to label %311 unwind label %.loopexit.split-lp.loopexit

; <label>:311                                     ; preds = %.lr.ph99
  %312 = invoke zeroext i1 @_ZNK4cPar7isInputEv(%class.cPar* %310) #9
          to label %313 unwind label %.loopexit.split-lp.loopexit

; <label>:313                                     ; preds = %311
  br i1 %312, label %314, label %319

; <label>:314                                     ; preds = %313
  %315 = load %class.cModule** %253, align 8, !tbaa !2
  %316 = invoke dereferenceable(120) %class.cPar* @_ZN7cModule3parEi(%class.cModule* %315, i32 %k.198) #9
          to label %317 unwind label %.loopexit.split-lp.loopexit

; <label>:317                                     ; preds = %314
  %318 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar4readEv(%class.cPar* %316) #9
          to label %319 unwind label %.loopexit.split-lp.loopexit

; <label>:319                                     ; preds = %313, %317
  %320 = add nuw nsw i32 %k.198, 1
  %321 = icmp slt i32 %k.198, %307
  %322 = load %class.cModule** %253, align 8, !tbaa !2
  br i1 %321, label %.lr.ph99, label %._crit_edge

._crit_edge:                                      ; preds = %319, %_ZN4cParaSEb.exit
  %.lcssa90 = phi %class.cModule* [ %305, %_ZN4cParaSEb.exit ], [ %322, %319 ]
  invoke void @_ZN7cModule16setDisplayStringEiPKcb(%class.cModule* %.lcssa90, i32 0, i8* getelementptr inbounds ([21 x i8]* @.str16, i64 0, i64 0), i1 zeroext true) #9
          to label %323 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:323                                     ; preds = %._crit_edge
  %324 = load %class.cModule** %253, align 8, !tbaa !2
  %325 = bitcast %class.cModule* %324 to i32 (%class.cModule*)***
  %326 = load i32 (%class.cModule*)*** %325, align 8, !tbaa !19
  %327 = getelementptr inbounds i32 (%class.cModule*)** %326, i64 21
  %328 = load i32 (%class.cModule*)** %327, align 8
  %329 = invoke i32 %328(%class.cModule* %324) #9
          to label %330 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit

; <label>:330                                     ; preds = %323
  %331 = add nuw nsw i64 %sub_i.0100, 1
  %332 = icmp slt i64 %331, %184
  br i1 %332, label %209, label %._crit_edge103

._crit_edge103:                                   ; preds = %330
  invoke void @_ZN6cArray5clearEv(%class.cArray* %machines) #9
          to label %333 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:333                                     ; preds = %._crit_edge103
  %334 = invoke noalias i8* @_Znam(i64 48) #11
          to label %335 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:335                                     ; preds = %333
  %336 = bitcast i8* %334 to %"struct.cPar::ExprElem"*
  %337 = invoke %class.cGate* @_ZN7cModule4gateEPKci(%class.cModule* %1, i8* getelementptr inbounds ([3 x i8]* @.str6, i64 0, i64 0), i32 -1) #9
          to label %338 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:338                                     ; preds = %335
  %339 = getelementptr inbounds %class.cGate* %337, i64 0, i32 3
  %340 = load i32* %339, align 4, !tbaa !16
  %341 = icmp slt i32 %340, 0
  store i8 68, i8* %334, align 1, !tbaa !21
  %342 = sitofp i32 %340 to double
  %343 = select i1 %341, double 1.000000e+00, double %342
  %344 = getelementptr inbounds i8* %334, i64 8
  %345 = bitcast i8* %344 to double*
  store double %343, double* %345, align 8, !tbaa !23
  %346 = getelementptr inbounds i8* %334, i64 16
  store i8 68, i8* %346, align 1, !tbaa !21
  %347 = getelementptr inbounds i8* %334, i64 24
  %348 = bitcast i8* %347 to double*
  store double 1.000000e+00, double* %348, align 8, !tbaa !23
  %349 = getelementptr inbounds i8* %334, i64 32
  store i8 64, i8* %349, align 1, !tbaa !21
  %350 = getelementptr inbounds i8* %334, i64 40
  store i8 45, i8* %350, align 1, !tbaa !24
  invoke void @_ZN4cPar17cancelRedirectionEv(%class.cPar* %value) #9
          to label %351 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:351                                     ; preds = %338
  %352 = invoke dereferenceable(120) %class.cPar* @_ZN4cPar14setDoubleValueEPNS_8ExprElemEi(%class.cPar* %value, %"struct.cPar::ExprElem"* %336, i32 3) #9
          to label %353 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:353                                     ; preds = %351
  %354 = invoke i64 @_ZN4cPar9longValueEv(%class.cPar* %value) #9
          to label %_ZN4cParcvlEv.exit.preheader unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

_ZN4cParcvlEv.exit.preheader:                     ; preds = %353
  %355 = icmp slt i64 %354, 0
  br i1 %355, label %_ZN4cParcvlEv.exit._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %_ZN4cParcvlEv.exit.preheader, %_ZN4cParcvlEv.exit
  %i_index.097 = phi i64 [ %710, %_ZN4cParcvlEv.exit ], [ 0, %_ZN4cParcvlEv.exit.preheader ]
  %356 = load %class.cModule** %208, align 8, !tbaa !2
  %357 = getelementptr inbounds %class.cModule* %356, i64 0, i32 10
  %358 = load i32* %357, align 4, !tbaa !25
  %359 = icmp slt i32 %358, 0
  %360 = sext i32 %358 to i64
  %361 = select i1 %359, i64 1, i64 %360
  %362 = icmp slt i64 %i_index.097, %361
  br i1 %362, label %380, label %363

; <label>:363                                     ; preds = %.lr.ph
  %364 = call i8* @__cxa_allocate_exception(i64 8) #2
  %365 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %366 unwind label %371

; <label>:366                                     ; preds = %363
  %367 = bitcast i8* %365 to %class.cException*
  %368 = trunc i64 %i_index.097 to i32
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %367, i8* getelementptr inbounds ([49 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str14, i64 0, i64 0), i32 %368, i8* getelementptr inbounds ([12 x i8]* @.str9, i64 0, i64 0)) #9
          to label %369 unwind label %375

; <label>:369                                     ; preds = %366
  %370 = bitcast i8* %364 to i8**
  store i8* %365, i8** %370, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %364, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:371                                     ; preds = %363
  %372 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %373 = extractvalue { i8*, i32 } %372, 0
  %374 = extractvalue { i8*, i32 } %372, 1
  br label %379

; <label>:375                                     ; preds = %366
  %376 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %377 = extractvalue { i8*, i32 } %376, 0
  %378 = extractvalue { i8*, i32 } %376, 1
  call void @_ZdlPv(i8* %365) #10
  br label %379

; <label>:379                                     ; preds = %375, %371
  %.1423 = phi i32 [ %378, %375 ], [ %374, %371 ]
  %.14 = phi i8* [ %377, %375 ], [ %373, %371 ]
  call void @__cxa_free_exception(i8* %364) #2
  br label %734

; <label>:380                                     ; preds = %.lr.ph
  %381 = getelementptr inbounds %class.cModule** %208, i64 %i_index.097
  %382 = load %class.cModule** %381, align 8, !tbaa !2
  %383 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %382, i8* getelementptr inbounds ([13 x i8]* @.str19, i64 0, i64 0), i32 -1) #9
          to label %384 unwind label %.loopexit

; <label>:384                                     ; preds = %380
  %385 = icmp eq i32 %383, -1
  br i1 %385, label %386, label %402

; <label>:386                                     ; preds = %384
  %387 = call i8* @__cxa_allocate_exception(i64 8) #2
  %388 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %389 unwind label %393

; <label>:389                                     ; preds = %386
  %390 = bitcast i8* %388 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %390, i8* getelementptr inbounds ([21 x i8]* @.str20, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str14, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8]* @.str19, i64 0, i64 0)) #9
          to label %391 unwind label %397

; <label>:391                                     ; preds = %389
  %392 = bitcast i8* %387 to i8**
  store i8* %388, i8** %392, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %387, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:393                                     ; preds = %386
  %394 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %395 = extractvalue { i8*, i32 } %394, 0
  %396 = extractvalue { i8*, i32 } %394, 1
  br label %401

; <label>:397                                     ; preds = %389
  %398 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %399 = extractvalue { i8*, i32 } %398, 0
  %400 = extractvalue { i8*, i32 } %398, 1
  call void @_ZdlPv(i8* %388) #10
  br label %401

; <label>:401                                     ; preds = %397, %393
  %.1524 = phi i32 [ %400, %397 ], [ %396, %393 ]
  %.15 = phi i8* [ %399, %397 ], [ %395, %393 ]
  call void @__cxa_free_exception(i8* %387) #2
  br label %734

; <label>:402                                     ; preds = %384
  %403 = trunc i64 %i_index.097 to i32
  %404 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %79, i8* getelementptr inbounds ([14 x i8]* @.str10, i64 0, i64 0), i32 %403) #9
          to label %405 unwind label %.loopexit

; <label>:405                                     ; preds = %402
  %406 = icmp eq i32 %404, -1
  br i1 %406, label %407, label %425

; <label>:407                                     ; preds = %405
  %408 = call i8* @__cxa_allocate_exception(i64 8) #2
  %409 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %410 unwind label %416

; <label>:410                                     ; preds = %407
  %411 = invoke i8* @_Z17opp_mkindexednamePcPKci(i8* %3, i8* getelementptr inbounds ([14 x i8]* @.str10, i64 0, i64 0), i32 %403) #9
          to label %412 unwind label %420

; <label>:412                                     ; preds = %410
  %413 = bitcast i8* %409 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %413, i8* getelementptr inbounds ([21 x i8]* @.str20, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str5, i64 0, i64 0), i8* %411) #9
          to label %414 unwind label %420

; <label>:414                                     ; preds = %412
  %415 = bitcast i8* %408 to i8**
  store i8* %409, i8** %415, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %408, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:416                                     ; preds = %407
  %417 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %418 = extractvalue { i8*, i32 } %417, 0
  %419 = extractvalue { i8*, i32 } %417, 1
  br label %424

; <label>:420                                     ; preds = %412, %410
  %421 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %422 = extractvalue { i8*, i32 } %421, 0
  %423 = extractvalue { i8*, i32 } %421, 1
  call void @_ZdlPv(i8* %409) #10
  br label %424

; <label>:424                                     ; preds = %420, %416
  %.1625 = phi i32 [ %423, %420 ], [ %419, %416 ]
  %.16 = phi i8* [ %422, %420 ], [ %418, %416 ]
  call void @__cxa_free_exception(i8* %408) #2
  br label %734

; <label>:425                                     ; preds = %405
  %426 = load %class.cModule** %381, align 8, !tbaa !2
  invoke void @_Z7connectP7cModuleiP9cLinkTypeS0_i(%class.cModule* %79, i32 %404, %class.cLinkType* null, %class.cModule* %426, i32 %383) #9
          to label %427 unwind label %.loopexit

; <label>:427                                     ; preds = %425
  %428 = invoke zeroext i1 @_Z11memoryIsLowv() #9
          to label %429 unwind label %.loopexit

; <label>:429                                     ; preds = %427
  br i1 %428, label %430, label %446

; <label>:430                                     ; preds = %429
  %431 = call i8* @__cxa_allocate_exception(i64 8) #2
  %432 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %433 unwind label %437

; <label>:433                                     ; preds = %430
  %434 = bitcast i8* %432 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %434, i32 11) #9
          to label %435 unwind label %441

; <label>:435                                     ; preds = %433
  %436 = bitcast i8* %431 to i8**
  store i8* %432, i8** %436, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %431, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:437                                     ; preds = %430
  %438 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %439 = extractvalue { i8*, i32 } %438, 0
  %440 = extractvalue { i8*, i32 } %438, 1
  br label %445

; <label>:441                                     ; preds = %433
  %442 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %443 = extractvalue { i8*, i32 } %442, 0
  %444 = extractvalue { i8*, i32 } %442, 1
  call void @_ZdlPv(i8* %432) #10
  br label %445

; <label>:445                                     ; preds = %441, %437
  %.1726 = phi i32 [ %444, %441 ], [ %440, %437 ]
  %.17 = phi i8* [ %443, %441 ], [ %439, %437 ]
  call void @__cxa_free_exception(i8* %431) #2
  br label %734

; <label>:446                                     ; preds = %429
  %447 = load %class.cModule** %208, align 8, !tbaa !2
  %448 = getelementptr inbounds %class.cModule* %447, i64 0, i32 10
  %449 = load i32* %448, align 4, !tbaa !25
  %450 = icmp slt i32 %449, 0
  %451 = sext i32 %449 to i64
  %452 = select i1 %450, i64 1, i64 %451
  %453 = icmp slt i64 %i_index.097, %452
  br i1 %453, label %470, label %454

; <label>:454                                     ; preds = %446
  %455 = call i8* @__cxa_allocate_exception(i64 8) #2
  %456 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %457 unwind label %461

; <label>:457                                     ; preds = %454
  %458 = bitcast i8* %456 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %458, i8* getelementptr inbounds ([49 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str14, i64 0, i64 0), i32 %403, i8* getelementptr inbounds ([12 x i8]* @.str9, i64 0, i64 0)) #9
          to label %459 unwind label %465

; <label>:459                                     ; preds = %457
  %460 = bitcast i8* %455 to i8**
  store i8* %456, i8** %460, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %455, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:461                                     ; preds = %454
  %462 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %463 = extractvalue { i8*, i32 } %462, 0
  %464 = extractvalue { i8*, i32 } %462, 1
  br label %469

; <label>:465                                     ; preds = %457
  %466 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %467 = extractvalue { i8*, i32 } %466, 0
  %468 = extractvalue { i8*, i32 } %466, 1
  call void @_ZdlPv(i8* %456) #10
  br label %469

; <label>:469                                     ; preds = %465, %461
  %.1827 = phi i32 [ %468, %465 ], [ %464, %461 ]
  %.18 = phi i8* [ %467, %465 ], [ %463, %461 ]
  call void @__cxa_free_exception(i8* %455) #2
  br label %734

; <label>:470                                     ; preds = %446
  %471 = load %class.cModule** %381, align 8, !tbaa !2
  %472 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %471, i8* getelementptr inbounds ([14 x i8]* @.str21, i64 0, i64 0), i32 -1) #9
          to label %473 unwind label %.loopexit

; <label>:473                                     ; preds = %470
  %474 = icmp eq i32 %472, -1
  br i1 %474, label %475, label %491

; <label>:475                                     ; preds = %473
  %476 = call i8* @__cxa_allocate_exception(i64 8) #2
  %477 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %478 unwind label %482

; <label>:478                                     ; preds = %475
  %479 = bitcast i8* %477 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %479, i8* getelementptr inbounds ([21 x i8]* @.str20, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str14, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str21, i64 0, i64 0)) #9
          to label %480 unwind label %486

; <label>:480                                     ; preds = %478
  %481 = bitcast i8* %476 to i8**
  store i8* %477, i8** %481, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %476, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:482                                     ; preds = %475
  %483 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %484 = extractvalue { i8*, i32 } %483, 0
  %485 = extractvalue { i8*, i32 } %483, 1
  br label %490

; <label>:486                                     ; preds = %478
  %487 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %488 = extractvalue { i8*, i32 } %487, 0
  %489 = extractvalue { i8*, i32 } %487, 1
  call void @_ZdlPv(i8* %477) #10
  br label %490

; <label>:490                                     ; preds = %486, %482
  %.1928 = phi i32 [ %489, %486 ], [ %485, %482 ]
  %.19 = phi i8* [ %488, %486 ], [ %484, %482 ]
  call void @__cxa_free_exception(i8* %476) #2
  br label %734

; <label>:491                                     ; preds = %473
  %492 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %79, i8* getelementptr inbounds ([13 x i8]* @.str8, i64 0, i64 0), i32 %403) #9
          to label %493 unwind label %.loopexit

; <label>:493                                     ; preds = %491
  %494 = icmp eq i32 %492, -1
  br i1 %494, label %495, label %513

; <label>:495                                     ; preds = %493
  %496 = call i8* @__cxa_allocate_exception(i64 8) #2
  %497 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %498 unwind label %504

; <label>:498                                     ; preds = %495
  %499 = invoke i8* @_Z17opp_mkindexednamePcPKci(i8* %3, i8* getelementptr inbounds ([13 x i8]* @.str8, i64 0, i64 0), i32 %403) #9
          to label %500 unwind label %508

; <label>:500                                     ; preds = %498
  %501 = bitcast i8* %497 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %501, i8* getelementptr inbounds ([21 x i8]* @.str20, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str5, i64 0, i64 0), i8* %499) #9
          to label %502 unwind label %508

; <label>:502                                     ; preds = %500
  %503 = bitcast i8* %496 to i8**
  store i8* %497, i8** %503, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %496, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:504                                     ; preds = %495
  %505 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %506 = extractvalue { i8*, i32 } %505, 0
  %507 = extractvalue { i8*, i32 } %505, 1
  br label %512

; <label>:508                                     ; preds = %500, %498
  %509 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %510 = extractvalue { i8*, i32 } %509, 0
  %511 = extractvalue { i8*, i32 } %509, 1
  call void @_ZdlPv(i8* %497) #10
  br label %512

; <label>:512                                     ; preds = %508, %504
  %.2029 = phi i32 [ %511, %508 ], [ %507, %504 ]
  %.20 = phi i8* [ %510, %508 ], [ %506, %504 ]
  call void @__cxa_free_exception(i8* %496) #2
  br label %734

; <label>:513                                     ; preds = %493
  %514 = load %class.cModule** %381, align 8, !tbaa !2
  invoke void @_Z7connectP7cModuleiP9cLinkTypeS0_i(%class.cModule* %514, i32 %472, %class.cLinkType* null, %class.cModule* %79, i32 %492) #9
          to label %515 unwind label %.loopexit

; <label>:515                                     ; preds = %513
  %516 = invoke zeroext i1 @_Z11memoryIsLowv() #9
          to label %517 unwind label %.loopexit

; <label>:517                                     ; preds = %515
  br i1 %516, label %518, label %534

; <label>:518                                     ; preds = %517
  %519 = call i8* @__cxa_allocate_exception(i64 8) #2
  %520 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %521 unwind label %525

; <label>:521                                     ; preds = %518
  %522 = bitcast i8* %520 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %522, i32 11) #9
          to label %523 unwind label %529

; <label>:523                                     ; preds = %521
  %524 = bitcast i8* %519 to i8**
  store i8* %520, i8** %524, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %519, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:525                                     ; preds = %518
  %526 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %527 = extractvalue { i8*, i32 } %526, 0
  %528 = extractvalue { i8*, i32 } %526, 1
  br label %533

; <label>:529                                     ; preds = %521
  %530 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %531 = extractvalue { i8*, i32 } %530, 0
  %532 = extractvalue { i8*, i32 } %530, 1
  call void @_ZdlPv(i8* %520) #10
  br label %533

; <label>:533                                     ; preds = %529, %525
  %.2130 = phi i32 [ %532, %529 ], [ %528, %525 ]
  %.21 = phi i8* [ %531, %529 ], [ %527, %525 ]
  call void @__cxa_free_exception(i8* %519) #2
  br label %734

; <label>:534                                     ; preds = %517
  %535 = load %class.cModule** %208, align 8, !tbaa !2
  %536 = getelementptr inbounds %class.cModule* %535, i64 0, i32 10
  %537 = load i32* %536, align 4, !tbaa !25
  %538 = icmp slt i32 %537, 0
  %539 = sext i32 %537 to i64
  %540 = select i1 %538, i64 1, i64 %539
  %541 = icmp slt i64 %i_index.097, %540
  br i1 %541, label %558, label %542

; <label>:542                                     ; preds = %534
  %543 = call i8* @__cxa_allocate_exception(i64 8) #2
  %544 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %545 unwind label %549

; <label>:545                                     ; preds = %542
  %546 = bitcast i8* %544 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %546, i8* getelementptr inbounds ([49 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str14, i64 0, i64 0), i32 %403, i8* getelementptr inbounds ([12 x i8]* @.str9, i64 0, i64 0)) #9
          to label %547 unwind label %553

; <label>:547                                     ; preds = %545
  %548 = bitcast i8* %543 to i8**
  store i8* %544, i8** %548, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %543, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:549                                     ; preds = %542
  %550 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %551 = extractvalue { i8*, i32 } %550, 0
  %552 = extractvalue { i8*, i32 } %550, 1
  br label %557

; <label>:553                                     ; preds = %545
  %554 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %555 = extractvalue { i8*, i32 } %554, 0
  %556 = extractvalue { i8*, i32 } %554, 1
  call void @_ZdlPv(i8* %544) #10
  br label %557

; <label>:557                                     ; preds = %553, %549
  %.2231 = phi i32 [ %556, %553 ], [ %552, %549 ]
  %.22 = phi i8* [ %555, %553 ], [ %551, %549 ]
  call void @__cxa_free_exception(i8* %543) #2
  br label %734

; <label>:558                                     ; preds = %534
  %559 = load %class.cModule** %381, align 8, !tbaa !2
  %560 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %559, i8* getelementptr inbounds ([11 x i8]* @.str22, i64 0, i64 0), i32 -1) #9
          to label %561 unwind label %.loopexit

; <label>:561                                     ; preds = %558
  %562 = icmp eq i32 %560, -1
  br i1 %562, label %563, label %579

; <label>:563                                     ; preds = %561
  %564 = call i8* @__cxa_allocate_exception(i64 8) #2
  %565 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %566 unwind label %570

; <label>:566                                     ; preds = %563
  %567 = bitcast i8* %565 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %567, i8* getelementptr inbounds ([21 x i8]* @.str20, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str14, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str22, i64 0, i64 0)) #9
          to label %568 unwind label %574

; <label>:568                                     ; preds = %566
  %569 = bitcast i8* %564 to i8**
  store i8* %565, i8** %569, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %564, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:570                                     ; preds = %563
  %571 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %572 = extractvalue { i8*, i32 } %571, 0
  %573 = extractvalue { i8*, i32 } %571, 1
  br label %578

; <label>:574                                     ; preds = %566
  %575 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %576 = extractvalue { i8*, i32 } %575, 0
  %577 = extractvalue { i8*, i32 } %575, 1
  call void @_ZdlPv(i8* %565) #10
  br label %578

; <label>:578                                     ; preds = %574, %570
  %.2332 = phi i32 [ %577, %574 ], [ %573, %570 ]
  %.23 = phi i8* [ %576, %574 ], [ %572, %570 ]
  call void @__cxa_free_exception(i8* %564) #2
  br label %734

; <label>:579                                     ; preds = %561
  %580 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %1, i8* getelementptr inbounds ([3 x i8]* @.str6, i64 0, i64 0), i32 %403) #9
          to label %581 unwind label %.loopexit

; <label>:581                                     ; preds = %579
  %582 = icmp eq i32 %580, -1
  br i1 %582, label %583, label %601

; <label>:583                                     ; preds = %581
  %584 = call i8* @__cxa_allocate_exception(i64 8) #2
  %585 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %586 unwind label %592

; <label>:586                                     ; preds = %583
  %587 = invoke i8* @_Z17opp_mkindexednamePcPKci(i8* %3, i8* getelementptr inbounds ([3 x i8]* @.str6, i64 0, i64 0), i32 %403) #9
          to label %588 unwind label %596

; <label>:588                                     ; preds = %586
  %589 = bitcast i8* %585 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %589, i8* getelementptr inbounds ([21 x i8]* @.str20, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8]* @.str23, i64 0, i64 0), i8* %587) #9
          to label %590 unwind label %596

; <label>:590                                     ; preds = %588
  %591 = bitcast i8* %584 to i8**
  store i8* %585, i8** %591, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %584, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:592                                     ; preds = %583
  %593 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %594 = extractvalue { i8*, i32 } %593, 0
  %595 = extractvalue { i8*, i32 } %593, 1
  br label %600

; <label>:596                                     ; preds = %588, %586
  %597 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %598 = extractvalue { i8*, i32 } %597, 0
  %599 = extractvalue { i8*, i32 } %597, 1
  call void @_ZdlPv(i8* %585) #10
  br label %600

; <label>:600                                     ; preds = %596, %592
  %.2433 = phi i32 [ %599, %596 ], [ %595, %592 ]
  %.24 = phi i8* [ %598, %596 ], [ %594, %592 ]
  call void @__cxa_free_exception(i8* %584) #2
  br label %734

; <label>:601                                     ; preds = %581
  %602 = load %class.cModule** %381, align 8, !tbaa !2
  invoke void @_Z7connectP7cModuleiP9cLinkTypeS0_i(%class.cModule* %1, i32 %580, %class.cLinkType* null, %class.cModule* %602, i32 %560) #9
          to label %603 unwind label %.loopexit

; <label>:603                                     ; preds = %601
  %604 = invoke zeroext i1 @_Z11memoryIsLowv() #9
          to label %605 unwind label %.loopexit

; <label>:605                                     ; preds = %603
  br i1 %604, label %606, label %622

; <label>:606                                     ; preds = %605
  %607 = call i8* @__cxa_allocate_exception(i64 8) #2
  %608 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %609 unwind label %613

; <label>:609                                     ; preds = %606
  %610 = bitcast i8* %608 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %610, i32 11) #9
          to label %611 unwind label %617

; <label>:611                                     ; preds = %609
  %612 = bitcast i8* %607 to i8**
  store i8* %608, i8** %612, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %607, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:613                                     ; preds = %606
  %614 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %615 = extractvalue { i8*, i32 } %614, 0
  %616 = extractvalue { i8*, i32 } %614, 1
  br label %621

; <label>:617                                     ; preds = %609
  %618 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %619 = extractvalue { i8*, i32 } %618, 0
  %620 = extractvalue { i8*, i32 } %618, 1
  call void @_ZdlPv(i8* %608) #10
  br label %621

; <label>:621                                     ; preds = %617, %613
  %.2534 = phi i32 [ %620, %617 ], [ %616, %613 ]
  %.25 = phi i8* [ %619, %617 ], [ %615, %613 ]
  call void @__cxa_free_exception(i8* %607) #2
  br label %734

; <label>:622                                     ; preds = %605
  %623 = load %class.cModule** %208, align 8, !tbaa !2
  %624 = getelementptr inbounds %class.cModule* %623, i64 0, i32 10
  %625 = load i32* %624, align 4, !tbaa !25
  %626 = icmp slt i32 %625, 0
  %627 = sext i32 %625 to i64
  %628 = select i1 %626, i64 1, i64 %627
  %629 = icmp slt i64 %i_index.097, %628
  br i1 %629, label %646, label %630

; <label>:630                                     ; preds = %622
  %631 = call i8* @__cxa_allocate_exception(i64 8) #2
  %632 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %633 unwind label %637

; <label>:633                                     ; preds = %630
  %634 = bitcast i8* %632 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %634, i8* getelementptr inbounds ([49 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str14, i64 0, i64 0), i32 %403, i8* getelementptr inbounds ([12 x i8]* @.str9, i64 0, i64 0)) #9
          to label %635 unwind label %641

; <label>:635                                     ; preds = %633
  %636 = bitcast i8* %631 to i8**
  store i8* %632, i8** %636, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %631, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:637                                     ; preds = %630
  %638 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %639 = extractvalue { i8*, i32 } %638, 0
  %640 = extractvalue { i8*, i32 } %638, 1
  br label %645

; <label>:641                                     ; preds = %633
  %642 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %643 = extractvalue { i8*, i32 } %642, 0
  %644 = extractvalue { i8*, i32 } %642, 1
  call void @_ZdlPv(i8* %632) #10
  br label %645

; <label>:645                                     ; preds = %641, %637
  %.2635 = phi i32 [ %644, %641 ], [ %640, %637 ]
  %.26 = phi i8* [ %643, %641 ], [ %639, %637 ]
  call void @__cxa_free_exception(i8* %631) #2
  br label %734

; <label>:646                                     ; preds = %622
  %647 = load %class.cModule** %381, align 8, !tbaa !2
  %648 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %647, i8* getelementptr inbounds ([12 x i8]* @.str24, i64 0, i64 0), i32 -1) #9
          to label %649 unwind label %.loopexit

; <label>:649                                     ; preds = %646
  %650 = icmp eq i32 %648, -1
  br i1 %650, label %651, label %667

; <label>:651                                     ; preds = %649
  %652 = call i8* @__cxa_allocate_exception(i64 8) #2
  %653 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %654 unwind label %658

; <label>:654                                     ; preds = %651
  %655 = bitcast i8* %653 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %655, i8* getelementptr inbounds ([21 x i8]* @.str20, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str14, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8]* @.str24, i64 0, i64 0)) #9
          to label %656 unwind label %662

; <label>:656                                     ; preds = %654
  %657 = bitcast i8* %652 to i8**
  store i8* %653, i8** %657, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %652, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:658                                     ; preds = %651
  %659 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %660 = extractvalue { i8*, i32 } %659, 0
  %661 = extractvalue { i8*, i32 } %659, 1
  br label %666

; <label>:662                                     ; preds = %654
  %663 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %664 = extractvalue { i8*, i32 } %663, 0
  %665 = extractvalue { i8*, i32 } %663, 1
  call void @_ZdlPv(i8* %653) #10
  br label %666

; <label>:666                                     ; preds = %662, %658
  %.2736 = phi i32 [ %665, %662 ], [ %661, %658 ]
  %.27 = phi i8* [ %664, %662 ], [ %660, %658 ]
  call void @__cxa_free_exception(i8* %652) #2
  br label %734

; <label>:667                                     ; preds = %649
  %668 = invoke i32 @_ZNK7cModule8findGateEPKci(%class.cModule* %1, i8* getelementptr inbounds ([4 x i8]* @.str25, i64 0, i64 0), i32 %403) #9
          to label %669 unwind label %.loopexit

; <label>:669                                     ; preds = %667
  %670 = icmp eq i32 %668, -1
  br i1 %670, label %671, label %689

; <label>:671                                     ; preds = %669
  %672 = call i8* @__cxa_allocate_exception(i64 8) #2
  %673 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %674 unwind label %680

; <label>:674                                     ; preds = %671
  %675 = invoke i8* @_Z17opp_mkindexednamePcPKci(i8* %3, i8* getelementptr inbounds ([4 x i8]* @.str25, i64 0, i64 0), i32 %403) #9
          to label %676 unwind label %684

; <label>:676                                     ; preds = %674
  %677 = bitcast i8* %673 to %class.cException*
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %677, i8* getelementptr inbounds ([21 x i8]* @.str20, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8]* @.str23, i64 0, i64 0), i8* %675) #9
          to label %678 unwind label %684

; <label>:678                                     ; preds = %676
  %679 = bitcast i8* %672 to i8**
  store i8* %673, i8** %679, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %672, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:680                                     ; preds = %671
  %681 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %682 = extractvalue { i8*, i32 } %681, 0
  %683 = extractvalue { i8*, i32 } %681, 1
  br label %688

; <label>:684                                     ; preds = %676, %674
  %685 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %686 = extractvalue { i8*, i32 } %685, 0
  %687 = extractvalue { i8*, i32 } %685, 1
  call void @_ZdlPv(i8* %673) #10
  br label %688

; <label>:688                                     ; preds = %684, %680
  %.2837 = phi i32 [ %687, %684 ], [ %683, %680 ]
  %.28 = phi i8* [ %686, %684 ], [ %682, %680 ]
  call void @__cxa_free_exception(i8* %672) #2
  br label %734

; <label>:689                                     ; preds = %669
  %690 = load %class.cModule** %381, align 8, !tbaa !2
  invoke void @_Z7connectP7cModuleiP9cLinkTypeS0_i(%class.cModule* %690, i32 %648, %class.cLinkType* null, %class.cModule* %1, i32 %668) #9
          to label %691 unwind label %.loopexit

; <label>:691                                     ; preds = %689
  %692 = invoke zeroext i1 @_Z11memoryIsLowv() #9
          to label %693 unwind label %.loopexit

; <label>:693                                     ; preds = %691
  br i1 %692, label %694, label %_ZN4cParcvlEv.exit

; <label>:694                                     ; preds = %693
  %695 = call i8* @__cxa_allocate_exception(i64 8) #2
  %696 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %697 unwind label %701

; <label>:697                                     ; preds = %694
  %698 = bitcast i8* %696 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %698, i32 11) #9
          to label %699 unwind label %705

; <label>:699                                     ; preds = %697
  %700 = bitcast i8* %695 to i8**
  store i8* %696, i8** %700, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %695, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:701                                     ; preds = %694
  %702 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %703 = extractvalue { i8*, i32 } %702, 0
  %704 = extractvalue { i8*, i32 } %702, 1
  br label %709

; <label>:705                                     ; preds = %697
  %706 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %707 = extractvalue { i8*, i32 } %706, 0
  %708 = extractvalue { i8*, i32 } %706, 1
  call void @_ZdlPv(i8* %696) #10
  br label %709

; <label>:709                                     ; preds = %705, %701
  %.2938 = phi i32 [ %708, %705 ], [ %704, %701 ]
  %.29 = phi i8* [ %707, %705 ], [ %703, %701 ]
  call void @__cxa_free_exception(i8* %695) #2
  br label %734

_ZN4cParcvlEv.exit:                               ; preds = %693
  %710 = add nuw nsw i64 %i_index.097, 1
  %711 = icmp slt i64 %i_index.097, %354
  br i1 %711, label %.lr.ph, label %_ZN4cParcvlEv.exit._crit_edge

_ZN4cParcvlEv.exit._crit_edge:                    ; preds = %_ZN4cParcvlEv.exit, %_ZN4cParcvlEv.exit.preheader
  %712 = invoke zeroext i1 @_ZNK7cModule24checkInternalConnectionsEv(%class.cModule* %1) #9
          to label %713 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:713                                     ; preds = %_ZN4cParcvlEv.exit._crit_edge
  call void @_ZdaPv(i8* %207) #10
  %714 = invoke zeroext i1 @_Z11memoryIsLowv() #9
          to label %715 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:715                                     ; preds = %713
  br i1 %714, label %716, label %732

; <label>:716                                     ; preds = %715
  %717 = call i8* @__cxa_allocate_exception(i64 8) #2
  %718 = invoke noalias i8* @_Znwm(i64 32) #11
          to label %719 unwind label %723

; <label>:719                                     ; preds = %716
  %720 = bitcast i8* %718 to %class.cException*
  invoke void (%class.cException*, i32, ...)* @_ZN10cExceptionC1Eiz(%class.cException* %720, i32 11) #9
          to label %721 unwind label %727

; <label>:721                                     ; preds = %719
  %722 = bitcast i8* %717 to i8**
  store i8* %718, i8** %722, align 8, !tbaa !2
  invoke void @__cxa_throw(i8* %717, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #12
          to label %742 unwind label %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

; <label>:723                                     ; preds = %716
  %724 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %725 = extractvalue { i8*, i32 } %724, 0
  %726 = extractvalue { i8*, i32 } %724, 1
  br label %731

; <label>:727                                     ; preds = %719
  %728 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %729 = extractvalue { i8*, i32 } %728, 0
  %730 = extractvalue { i8*, i32 } %728, 1
  call void @_ZdlPv(i8* %718) #10
  br label %731

; <label>:731                                     ; preds = %727, %723
  %.3039 = phi i32 [ %730, %727 ], [ %726, %723 ]
  %.30 = phi i8* [ %729, %727 ], [ %725, %723 ]
  call void @__cxa_free_exception(i8* %717) #2
  br label %734

; <label>:732                                     ; preds = %715
  invoke void @_ZN6cArrayD1Ev(%class.cArray* %machines) #9
          to label %733 unwind label %7

; <label>:733                                     ; preds = %732
  call void @llvm.lifetime.end(i64 80, i8* %4) #2
  call void @llvm.lifetime.end(i64 64, i8* %3) #2
  call void @_ZN4cParD1Ev(%class.cPar* %value) #9
  call void @llvm.lifetime.end(i64 120, i8* %2) #2
  ret void

; <label>:734                                     ; preds = %731, %709, %688, %666, %645, %621, %600, %578, %557, %533, %512, %490, %469, %445, %424, %401, %379, %299, %271, %241, %229, %201, %177, %122, %98, %69, %57, %36, %.loopexit.split-lp
  %.3140 = phi i32 [ %12, %.loopexit.split-lp ], [ %.110, %36 ], [ %.211, %69 ], [ %.312, %98 ], [ %.413, %122 ], [ %.716, %177 ], [ %.817, %201 ], [ %.918, %241 ], [ %.1019, %271 ], [ %.1120, %299 ], [ %232, %229 ], [ %.1423, %379 ], [ %.1524, %401 ], [ %.1625, %424 ], [ %.1726, %445 ], [ %.1827, %469 ], [ %.1928, %490 ], [ %.2029, %512 ], [ %.2130, %533 ], [ %.2231, %557 ], [ %.2332, %578 ], [ %.2433, %600 ], [ %.2534, %621 ], [ %.2635, %645 ], [ %.2736, %666 ], [ %.2837, %688 ], [ %.2938, %709 ], [ %.3039, %731 ], [ %60, %57 ]
  %.31 = phi i8* [ %11, %.loopexit.split-lp ], [ %.1, %36 ], [ %.2, %69 ], [ %.3, %98 ], [ %.4, %122 ], [ %.7, %177 ], [ %.8, %201 ], [ %.9, %241 ], [ %.10, %271 ], [ %.11, %299 ], [ %231, %229 ], [ %.14, %379 ], [ %.15, %401 ], [ %.16, %424 ], [ %.17, %445 ], [ %.18, %469 ], [ %.19, %490 ], [ %.20, %512 ], [ %.21, %533 ], [ %.22, %557 ], [ %.23, %578 ], [ %.24, %600 ], [ %.25, %621 ], [ %.26, %645 ], [ %.27, %666 ], [ %.28, %688 ], [ %.29, %709 ], [ %.30, %731 ], [ %59, %57 ]
  invoke void @_ZN6cArrayD1Ev(%class.cArray* %machines) #9
          to label %735 unwind label %739

; <label>:735                                     ; preds = %734, %7
  %.3241 = phi i32 [ %.3140, %734 ], [ %10, %7 ]
  %.32 = phi i8* [ %.31, %734 ], [ %9, %7 ]
  invoke void @_ZN4cParD1Ev(%class.cPar* %value) #9
          to label %736 unwind label %739

; <label>:736                                     ; preds = %735
  %737 = insertvalue { i8*, i32 } undef, i8* %.32, 0
  %738 = insertvalue { i8*, i32 } %737, i32 %.3241, 1
  resume { i8*, i32 } %738

; <label>:739                                     ; preds = %735, %734
  %740 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          catch i8* null
  %741 = extractvalue { i8*, i32 } %740, 0
  call void @__clang_call_terminate(i8* %741) #13
  unreachable

; <label>:742                                     ; preds = %721, %699, %678, %656, %635, %611, %590, %568, %547, %523, %502, %480, %459, %435, %414, %391, %369, %289, %261, %227, %191, %167, %112, %88, %55, %26
  unreachable
}
