define linkonce_odr %class.cMessage30* @_Z14check_and_castIP10cMessage30ET_P7cObject(%class.cObject* %p) #0 {
  tail call void @llvm.dbg.value(metadata %class.cObject* %p, i64 0, metadata !4237, metadata !5468), !dbg !5739
  %1 = icmp eq %class.cObject* %p, null, !dbg !5740
  br i1 %1, label %2, label %20, !dbg !5742

; <label>:2                                       ; preds = %0
  %3 = tail call i8* @__cxa_allocate_exception(i64 8) #2, !dbg !5743
  %4 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %5 unwind label %11, !dbg !5744

; <label>:5                                       ; preds = %2
  %6 = invoke i8* @_Z12opp_typenameRKSt9type_info(%"class.std::type_info"* dereferenceable(16) bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cMessage30 to %"class.std::type_info"*)) #10
          to label %7 unwind label %15, !dbg !5745

; <label>:7                                       ; preds = %5
  %8 = bitcast i8* %4 to %class.cException*, !dbg !5744
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %8, i8* getelementptr inbounds ([56 x i8]* @.str28, i64 0, i64 0), i8* %6) #10
          to label %9 unwind label %15, !dbg !5746

; <label>:9                                       ; preds = %7
  %10 = bitcast i8* %3 to i8**, !dbg !5743
  store i8* %4, i8** %10, align 8, !dbg !5743, !tbaa !5584
  tail call void @__cxa_throw(i8* %3, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13, !dbg !5743
  unreachable, !dbg !5743

; <label>:11                                      ; preds = %2
  %12 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !5747
  %13 = extractvalue { i8*, i32 } %12, 0, !dbg !5747
  %14 = extractvalue { i8*, i32 } %12, 1, !dbg !5747
  br label %19, !dbg !5747

; <label>:15                                      ; preds = %7, %5
  %16 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !5747
  %17 = extractvalue { i8*, i32 } %16, 0, !dbg !5747
  %18 = extractvalue { i8*, i32 } %16, 1, !dbg !5747
  tail call void @_ZdlPv(i8* %4) #11, !dbg !5744
  br label %19, !dbg !5744

; <label>:19                                      ; preds = %15, %11
  %.01 = phi i32 [ %18, %15 ], [ %14, %11 ]
  %.0 = phi i8* [ %17, %15 ], [ %13, %11 ]
  tail call void @__cxa_free_exception(i8* %3) #2, !dbg !5743
  br label %55, !dbg !5743

; <label>:20                                      ; preds = %0
  %21 = bitcast %class.cObject* %p to i8*, !dbg !5748
  %22 = tail call i8* @__dynamic_cast(i8* %21, i8* bitcast (i8** @_ZTI7cObject to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI10cMessage30 to i8*), i64 0) #2, !dbg !5748
  tail call void @llvm.dbg.value(metadata %class.cMessage30* %54, i64 0, metadata !4238, metadata !5468), !dbg !5749
  %23 = icmp eq i8* %22, null, !dbg !5750
  br i1 %23, label %24, label %53, !dbg !5752

; <label>:24                                      ; preds = %20
  %25 = tail call i8* @__cxa_allocate_exception(i64 8) #2, !dbg !5753
  %26 = invoke noalias i8* @_Znwm(i64 32) #12
          to label %27 unwind label %44, !dbg !5754

; <label>:27                                      ; preds = %24
  %28 = bitcast i8* %26 to %class.cException*, !dbg !5754
  %29 = bitcast %class.cObject* %p to i8* (%class.cObject*)***, !dbg !5755
  %30 = load i8* (%class.cObject*)*** %29, align 8, !dbg !5755, !tbaa !5487
  %31 = getelementptr inbounds i8* (%class.cObject*)** %30, i64 7, !dbg !5755
  %32 = load i8* (%class.cObject*)** %31, align 8, !dbg !5755
  %33 = invoke i8* %32(%class.cObject* %p) #10
          to label %34 unwind label %48, !dbg !5755

; <label>:34                                      ; preds = %27
  %35 = load i8* (%class.cObject*)*** %29, align 8, !dbg !5756, !tbaa !5487
  %36 = getelementptr inbounds i8* (%class.cObject*)** %35, i64 4, !dbg !5756
  %37 = load i8* (%class.cObject*)** %36, align 8, !dbg !5756
  %38 = invoke i8* %37(%class.cObject* %p) #10
          to label %39 unwind label %48, !dbg !5756

; <label>:39                                      ; preds = %34
  %40 = invoke i8* @_Z12opp_typenameRKSt9type_info(%"class.std::type_info"* dereferenceable(16) bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cMessage30 to %"class.std::type_info"*)) #10
          to label %41 unwind label %48, !dbg !5757

; <label>:41                                      ; preds = %39
  invoke void (%class.cException*, i8*, ...)* @_ZN10cExceptionC1EPKcz(%class.cException* %28, i8* getelementptr inbounds ([52 x i8]* @.str29, i64 0, i64 0), i8* %33, i8* %38, i8* %40) #10
          to label %42 unwind label %48, !dbg !5758

; <label>:42                                      ; preds = %41
  %43 = bitcast i8* %25 to i8**, !dbg !5753
  store i8* %26, i8** %43, align 8, !dbg !5753, !tbaa !5584
  tail call void @__cxa_throw(i8* %25, i8* bitcast ({ i8*, i8*, i32, i8* }* @_ZTIP10cException to i8*), i8* null) #13, !dbg !5753
  unreachable, !dbg !5753

; <label>:44                                      ; preds = %24
  %45 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !5759
  %46 = extractvalue { i8*, i32 } %45, 0, !dbg !5759
  %47 = extractvalue { i8*, i32 } %45, 1, !dbg !5759
  br label %52, !dbg !5759

; <label>:48                                      ; preds = %41, %39, %34, %27
  %49 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup, !dbg !5759
  %50 = extractvalue { i8*, i32 } %49, 0, !dbg !5759
  %51 = extractvalue { i8*, i32 } %49, 1, !dbg !5759
  tail call void @_ZdlPv(i8* %26) #11, !dbg !5754
  br label %52, !dbg !5754

; <label>:52                                      ; preds = %48, %44
  %.12 = phi i32 [ %51, %48 ], [ %47, %44 ]
  %.1 = phi i8* [ %50, %48 ], [ %46, %44 ]
  tail call void @__cxa_free_exception(i8* %25) #2, !dbg !5753
  br label %55, !dbg !5753

; <label>:53                                      ; preds = %20
  %54 = bitcast i8* %22 to %class.cMessage30*, !dbg !5748
  ret %class.cMessage30* %54, !dbg !5760

; <label>:55                                      ; preds = %52, %19
  %.23 = phi i32 [ %.12, %52 ], [ %.01, %19 ]
  %.2 = phi i8* [ %.1, %52 ], [ %.0, %19 ]
  %56 = insertvalue { i8*, i32 } undef, i8* %.2, 0, !dbg !5743
  %57 = insertvalue { i8*, i32 } %56, i32 %.23, 1, !dbg !5743
  resume { i8*, i32 } %57, !dbg !5743
}
