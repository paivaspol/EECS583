define i32 @add_to_bufsize_for_field_c_(i32* nocapture %varname, i32* nocapture %chunksize) #0 {
entry:
  %vname = alloca [256 x i8], align 16
  call void @llvm.dbg.value(metadata !{i32* %varname}, i64 0, metadata !60), !dbg !168
  call void @llvm.dbg.value(metadata !{i32* %chunksize}, i64 0, metadata !61), !dbg !168
  %0 = getelementptr inbounds [256 x i8]* %vname, i64 0, i64 0, !dbg !169
  call void @llvm.lifetime.start(i64 256, i8* %0) #2, !dbg !169
  call void @llvm.dbg.declare(metadata !{[256 x i8]* %vname}, metadata !65), !dbg !169
  %1 = load i32* %varname, align 4, !dbg !170, !tbaa !110
  call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !63), !dbg !170
  call void @llvm.dbg.value(metadata !171, i64 0, metadata !62), !dbg !172
  %cmp59 = icmp slt i32 %1, 1, !dbg !172
  br i1 %cmp59, label %for.end, label %for.body.lr.ph, !dbg !172

for.body.lr.ph:                                   ; preds = %entry
  %2 = add i32 %1, 1, !dbg !172
  br label %for.body, !dbg !172

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv62 = phi i64 [ %indvars.iv.next63, %for.body ], [ 1, %for.body.lr.ph ]
  %arrayidx1 = getelementptr inbounds i32* %varname, i64 %indvars.iv62, !dbg !174
  %3 = load i32* %arrayidx1, align 4, !dbg !174, !tbaa !110
  %conv = trunc i32 %3 to i8, !dbg !174
  %4 = add nsw i64 %indvars.iv62, -1, !dbg !174
  %arrayidx3 = getelementptr inbounds [256 x i8]* %vname, i64 0, i64 %4, !dbg !174
  store i8 %conv, i8* %arrayidx3, align 1, !dbg !174, !tbaa !111
  %indvars.iv.next63 = add i64 %indvars.iv62, 1, !dbg !172
  %lftr.wideiv = trunc i64 %indvars.iv.next63 to i32, !dbg !172
  %exitcond = icmp eq i32 %lftr.wideiv, %2, !dbg !172
  br i1 %exitcond, label %for.end, label %for.body, !dbg !172

for.end:                                          ; preds = %for.body, %entry
  %idxprom4 = sext i32 %1 to i64, !dbg !176
  %arrayidx5 = getelementptr inbounds [256 x i8]* %vname, i64 0, i64 %idxprom4, !dbg !176
  store i8 0, i8* %arrayidx5, align 1, !dbg !176, !tbaa !111
  call void @llvm.dbg.value(metadata !177, i64 0, metadata !64), !dbg !178
  call void @llvm.dbg.value(metadata !2, i64 0, metadata !62), !dbg !179
  %5 = load i32* @numflds, align 4, !dbg !179, !tbaa !110
  %cmp757 = icmp sgt i32 %5, 0, !dbg !179
  br i1 %cmp757, label %for.body9, label %if.then18, !dbg !179

for.cond6:                                        ; preds = %for.body9
  %inc14 = add nsw i32 %i.158, 1, !dbg !179
  %6 = trunc i64 %indvars.iv.next to i32, !dbg !179
  %cmp7 = icmp slt i32 %6, %5, !dbg !179
  br i1 %cmp7, label %for.body9, label %if.then18, !dbg !179

for.body9:                                        ; preds = %for.end, %for.cond6
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond6 ], [ 0, %for.end ]
  %i.158 = phi i32 [ %inc14, %for.cond6 ], [ 0, %for.end ]
  %arraydecay = getelementptr inbounds [2000 x [256 x i8]]* @fld_name, i64 0, i64 %indvars.iv, i64 0, !dbg !181
  %call = call i32 @strcmp(i8* %arraydecay, i8* %0) #6, !dbg !181
  %tobool = icmp eq i32 %call, 0, !dbg !181
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !179
  call void @llvm.dbg.value(metadata !{i32 %inc14}, i64 0, metadata !62), !dbg !179
  br i1 %tobool, label %for.end15, label %for.cond6, !dbg !181

for.end15:                                        ; preds = %for.body9
  %cmp16 = icmp eq i32 %i.158, -1, !dbg !183
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !183

if.then18:                                        ; preds = %for.end, %for.cond6, %for.end15
  %inc19 = add nsw i32 %5, 1, !dbg !184
  store i32 %inc19, i32* @numflds, align 4, !dbg !184, !tbaa !110
  call void @llvm.dbg.value(metadata !{i32 %5}, i64 0, metadata !64), !dbg !184
  %idxprom20 = sext i32 %5 to i64, !dbg !186
  %arraydecay22 = getelementptr inbounds [2000 x [256 x i8]]* @fld_name, i64 0, i64 %idxprom20, i64 0, !dbg !186
  %call24 = call i8* @strcpy(i8* %arraydecay22, i8* %0) #5, !dbg !186
  %7 = load i32* %chunksize, align 4, !dbg !187, !tbaa !110
  %arrayidx26 = getelementptr inbounds [2000 x i32]* @fld_bufsize, i64 0, i64 %idxprom20, !dbg !187
  store i32 %7, i32* %arrayidx26, align 4, !dbg !187, !tbaa !110
  br label %if.end29, !dbg !188

if.else:                                          ; preds = %for.end15
  %8 = load i32* %chunksize, align 4, !dbg !189, !tbaa !110
  %idxprom27 = sext i32 %i.158 to i64, !dbg !189
  %arrayidx28 = getelementptr inbounds [2000 x i32]* @fld_bufsize, i64 0, i64 %idxprom27, !dbg !189
  %9 = load i32* %arrayidx28, align 4, !dbg !189, !tbaa !110
  %add = add nsw i32 %9, %8, !dbg !189
  store i32 %add, i32* %arrayidx28, align 4, !dbg !189, !tbaa !110
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then18
  %found.1 = phi i32 [ %5, %if.then18 ], [ %i.158, %if.else ]
  %idxprom30 = sext i32 %found.1 to i64, !dbg !191
  %arrayidx31 = getelementptr inbounds [2000 x i8*]* @fld_cache, i64 0, i64 %idxprom30, !dbg !191
  %10 = load i8** %arrayidx31, align 8, !dbg !191, !tbaa !161
  %cmp32 = icmp eq i8* %10, null, !dbg !191
  br i1 %cmp32, label %if.end37, label %if.then34, !dbg !191

if.then34:                                        ; preds = %if.end29
  call void @free(i8* %10) #5, !dbg !192
  br label %if.end37, !dbg !192

if.end37:                                         ; preds = %if.end29, %if.then34
  store i8* null, i8** %arrayidx31, align 8, !dbg !194, !tbaa !161
  call void @llvm.lifetime.end(i64 256, i8* %0) #2, !dbg !195
  ret i32 undef, !dbg !195
}
