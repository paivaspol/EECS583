define i32 @add_to_bufsize_for_field_c_(i32* nocapture readonly %varname, i32* nocapture readonly %chunksize) #0 {
  %vname = alloca [256 x i8], align 16
  tail call void @llvm.dbg.value(metadata i32* %varname, i64 0, metadata !61, metadata !113), !dbg !233
  tail call void @llvm.dbg.value(metadata i32* %chunksize, i64 0, metadata !62, metadata !113), !dbg !234
  %1 = getelementptr inbounds [256 x i8]* %vname, i64 0, i64 0, !dbg !235
  call void @llvm.lifetime.start(i64 256, i8* %1) #3, !dbg !235
  tail call void @llvm.dbg.declare(metadata [256 x i8]* %vname, metadata !66, metadata !113), !dbg !236
  %2 = load i32* %varname, align 4, !dbg !237, !tbaa !119
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !64, metadata !113), !dbg !238
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !63, metadata !113), !dbg !239
  %3 = icmp slt i32 %2, 1, !dbg !240
  br i1 %3, label %._crit_edge, label %.lr.ph4, !dbg !243

.lr.ph4:                                          ; preds = %0, %.lr.ph4
  %indvars.iv6 = phi i64 [ %indvars.iv.next7, %.lr.ph4 ], [ 1, %0 ]
  %4 = getelementptr inbounds i32* %varname, i64 %indvars.iv6, !dbg !244
  %5 = load i32* %4, align 4, !dbg !244, !tbaa !119
  %6 = trunc i32 %5 to i8, !dbg !244
  %7 = add nsw i64 %indvars.iv6, -1, !dbg !246
  %8 = getelementptr inbounds [256 x i8]* %vname, i64 0, i64 %7, !dbg !247
  store i8 %6, i8* %8, align 1, !dbg !248, !tbaa !133
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1, !dbg !243
  %lftr.wideiv = trunc i64 %indvars.iv6 to i32, !dbg !243
  %exitcond = icmp eq i32 %lftr.wideiv, %2, !dbg !243
  br i1 %exitcond, label %._crit_edge, label %.lr.ph4, !dbg !243

._crit_edge:                                      ; preds = %.lr.ph4, %0
  %9 = sext i32 %2 to i64, !dbg !249
  %10 = getelementptr inbounds [256 x i8]* %vname, i64 0, i64 %9, !dbg !249
  store i8 0, i8* %10, align 1, !dbg !250, !tbaa !133
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !65, metadata !113), !dbg !251
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !63, metadata !113), !dbg !239
  %11 = load i32* @numflds, align 4, !dbg !252, !tbaa !119
  %12 = icmp sgt i32 %11, 0, !dbg !255
  %13 = sext i32 %11 to i64, !dbg !256
  br i1 %12, label %.lr.ph, label %.thread, !dbg !256

.lr.ph:                                           ; preds = %._crit_edge, %17
  %indvars.iv = phi i64 [ %indvars.iv.next, %17 ], [ 0, %._crit_edge ]
  %14 = getelementptr inbounds [2000 x [256 x i8]]* @fld_name, i64 0, i64 %indvars.iv, i64 0, !dbg !257
  %15 = call i32 @strcmp(i8* %14, i8* %1) #5, !dbg !260
  %16 = icmp eq i32 %15, 0, !dbg !260
  br i1 %16, label %19, label %17, !dbg !261

; <label>:17                                      ; preds = %.lr.ph
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !256
  %18 = icmp slt i64 %indvars.iv.next, %13, !dbg !255
  br i1 %18, label %.lr.ph, label %.thread, !dbg !256

; <label>:19                                      ; preds = %.lr.ph
  %20 = trunc i64 %indvars.iv to i32, !dbg !262
  %21 = icmp eq i32 %20, -1, !dbg !262
  br i1 %21, label %.thread, label %28, !dbg !264

.thread:                                          ; preds = %17, %._crit_edge, %19
  %22 = add nsw i32 %11, 1, !dbg !265
  store i32 %22, i32* @numflds, align 4, !dbg !265, !tbaa !119
  tail call void @llvm.dbg.value(metadata i32 %11, i64 0, metadata !65, metadata !113), !dbg !251
  %23 = getelementptr inbounds [2000 x [256 x i8]]* @fld_name, i64 0, i64 %13, i64 0, !dbg !267
  %24 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %23, i1 false), !dbg !267
  %25 = call i8* @__strcpy_chk(i8* %23, i8* %1, i64 %24) #5, !dbg !267
  %26 = load i32* %chunksize, align 4, !dbg !268, !tbaa !119
  %27 = getelementptr inbounds [2000 x i32]* @fld_bufsize, i64 0, i64 %13, !dbg !269
  store i32 %26, i32* %27, align 4, !dbg !270, !tbaa !119
  br label %34, !dbg !271

; <label>:28                                      ; preds = %19
  %29 = load i32* %chunksize, align 4, !dbg !272, !tbaa !119
  %sext = shl i64 %indvars.iv, 32, !dbg !274
  %30 = ashr exact i64 %sext, 32, !dbg !274
  %31 = getelementptr inbounds [2000 x i32]* @fld_bufsize, i64 0, i64 %30, !dbg !274
  %32 = load i32* %31, align 4, !dbg !275, !tbaa !119
  %33 = add nsw i32 %32, %29, !dbg !275
  store i32 %33, i32* %31, align 4, !dbg !275, !tbaa !119
  br label %34

; <label>:34                                      ; preds = %28, %.thread
  %found.1 = phi i32 [ %11, %.thread ], [ %20, %28 ]
  %35 = sext i32 %found.1 to i64, !dbg !276
  %36 = getelementptr inbounds [2000 x i8*]* @fld_cache, i64 0, i64 %35, !dbg !276
  %37 = load i8** %36, align 8, !dbg !276, !tbaa !220
  %38 = icmp eq i8* %37, null, !dbg !278
  br i1 %38, label %40, label %39, !dbg !279

; <label>:39                                      ; preds = %34
  call void @free(i8* %37) #6, !dbg !280
  br label %40, !dbg !282

; <label>:40                                      ; preds = %34, %39
  store i8* null, i8** %36, align 8, !dbg !283, !tbaa !220
  call void @llvm.lifetime.end(i64 256, i8* %1) #3, !dbg !284
  ret i32 undef, !dbg !284
}
