define i32 @retrieve_pieces_of_field_c_(i8* nocapture %buf, i32* nocapture %varname, i32* nocapture readonly %insize, i32* nocapture %outsize, i32* nocapture %retval) #0 {
  %1 = load i32* @fld, align 4, !tbaa !2
  %2 = load i32* @numflds, align 4, !tbaa !2
  %3 = icmp slt i32 %1, %2
  br i1 %3, label %4, label %57

; <label>:4                                       ; preds = %0
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds [2000 x i32]* @fld_curs, i64 0, i64 %5
  %7 = load i32* %6, align 4, !tbaa !2
  %8 = load i32* %insize, align 4, !tbaa !2
  %9 = icmp sgt i32 %7, %8
  br i1 %9, label %10, label %13

; <label>:10                                      ; preds = %4
  %11 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !7
  %12 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %11, i8* getelementptr inbounds ([44 x i8]* @.str3, i64 0, i64 0), i32 %1, i32 %7, i32 %8) #5
  %.pre = load i32* @fld, align 4, !tbaa !2
  %.phi.trans.insert = sext i32 %.pre to i64
  %.phi.trans.insert7 = getelementptr inbounds [2000 x i32]* @fld_curs, i64 0, i64 %.phi.trans.insert
  %.pre8 = load i32* %.phi.trans.insert7, align 4, !tbaa !2
  %.pre9 = load i32* %insize, align 4, !tbaa !2
  br label %13

; <label>:13                                      ; preds = %10, %4
  %14 = phi i32 [ %.pre9, %10 ], [ %8, %4 ]
  %15 = phi i32 [ %.pre8, %10 ], [ %7, %4 ]
  %16 = icmp sgt i32 %15, %14
  %. = select i1 %16, i32 %14, i32 %15
  store i32 %., i32* %outsize, align 4, !tbaa !2
  %17 = load i32* @fld, align 4, !tbaa !2
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [2000 x [256 x i8]]* @fld_name, i64 0, i64 %18, i64 0
  %20 = tail call i64 @strlen(i8* %19) #5
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %varname, align 4, !tbaa !2
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %.preheader, label %.lr.ph4

.preheader:                                       ; preds = %.lr.ph4, %13
  %23 = load i32* %outsize, align 4, !tbaa !2
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %.lr.ph, label %._crit_edge

.lr.ph4:                                          ; preds = %13, %.lr.ph4
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %.lr.ph4 ], [ 1, %13 ]
  %25 = add nsw i64 %indvars.iv5, -1
  %26 = load i32* @fld, align 4, !tbaa !2
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [2000 x [256 x i8]]* @fld_name, i64 0, i64 %27, i64 %25
  %29 = load i8* %28, align 1, !tbaa !6
  %30 = sext i8 %29 to i32
  %31 = getelementptr inbounds i32* %varname, i64 %indvars.iv5
  store i32 %30, i32* %31, align 4, !tbaa !2
  %indvars.iv.next6 = add nuw i64 %indvars.iv5, 1
  %32 = load i32* %varname, align 4, !tbaa !2
  %33 = sext i32 %32 to i64
  %34 = icmp slt i64 %indvars.iv5, %33
  br i1 %34, label %.lr.ph4, label %.preheader

.lr.ph:                                           ; preds = %.preheader, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %.preheader ]
  %35 = load i32* @fld, align 4, !tbaa !2
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [2000 x i8*]* @fld_cache, i64 0, i64 %36
  %38 = load i8** %37, align 8, !tbaa !7
  %39 = getelementptr inbounds i8* %38, i64 %indvars.iv
  %40 = load i8* %39, align 1, !tbaa !6
  %41 = getelementptr inbounds i8* %buf, i64 %indvars.iv
  store i8 %40, i8* %41, align 1, !tbaa !6
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %42 = load i32* %outsize, align 4, !tbaa !2
  %43 = sext i32 %42 to i64
  %44 = icmp slt i64 %indvars.iv.next, %43
  br i1 %44, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph, %.preheader
  %45 = load i32* @fld, align 4, !tbaa !2
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [2000 x i8*]* @fld_cache, i64 0, i64 %46
  %48 = load i8** %47, align 8, !tbaa !7
  %49 = icmp eq i8* %48, null
  br i1 %49, label %51, label %50

; <label>:50                                      ; preds = %._crit_edge
  tail call void @free(i8* %48) #6
  %.pre10 = load i32* @fld, align 4, !tbaa !2
  br label %51

; <label>:51                                      ; preds = %._crit_edge, %50
  %52 = phi i32 [ %45, %._crit_edge ], [ %.pre10, %50 ]
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [2000 x i8*]* @fld_cache, i64 0, i64 %53
  store i8* null, i8** %54, align 8, !tbaa !7
  %55 = getelementptr inbounds [2000 x i32]* @fld_bufsize, i64 0, i64 %53
  store i32 0, i32* %55, align 4, !tbaa !2
  %56 = add nsw i32 %52, 1
  store i32 %56, i32* @fld, align 4, !tbaa !2
  br label %58

; <label>:57                                      ; preds = %0
  store i32 0, i32* @numflds, align 4, !tbaa !2
  br label %58

; <label>:58                                      ; preds = %57, %51
  %storemerge = phi i32 [ -1, %57 ], [ 0, %51 ]
  store i32 %storemerge, i32* %retval, align 4, !tbaa !2
  ret i32 0
}
