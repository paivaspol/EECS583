define i32 @retrieve_pieces_of_field_c_(i8* nocapture %buf, i32* nocapture %varname, i32* nocapture readonly %insize, i32* nocapture %outsize, i32* nocapture %retval) #0 {
  tail call void @llvm.dbg.value(metadata i8* %buf, i64 0, metadata !86, metadata !113), !dbg !353
  tail call void @llvm.dbg.value(metadata i32* %varname, i64 0, metadata !87, metadata !113), !dbg !354
  tail call void @llvm.dbg.value(metadata i32* %insize, i64 0, metadata !88, metadata !113), !dbg !355
  tail call void @llvm.dbg.value(metadata i32* %outsize, i64 0, metadata !89, metadata !113), !dbg !356
  tail call void @llvm.dbg.value(metadata i32* %retval, i64 0, metadata !90, metadata !113), !dbg !357
  %1 = load i32* @fld, align 4, !dbg !358, !tbaa !119
  %2 = load i32* @numflds, align 4, !dbg !360, !tbaa !119
  %3 = icmp slt i32 %1, %2, !dbg !361
  br i1 %3, label %4, label %57, !dbg !362

; <label>:4                                       ; preds = %0
  %5 = sext i32 %1 to i64, !dbg !363
  %6 = getelementptr inbounds [2000 x i32]* @fld_curs, i64 0, i64 %5, !dbg !363
  %7 = load i32* %6, align 4, !dbg !363, !tbaa !119
  %8 = load i32* %insize, align 4, !dbg !366, !tbaa !119
  %9 = icmp sgt i32 %7, %8, !dbg !367
  br i1 %9, label %10, label %13, !dbg !368

; <label>:10                                      ; preds = %4
  %11 = load %struct.__sFILE** @__stderrp, align 8, !dbg !369, !tbaa !220
  %12 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %11, i8* getelementptr inbounds ([44 x i8]* @.str3, i64 0, i64 0), i32 %1, i32 %7, i32 %8) #5, !dbg !371
  %.pre = load i32* @fld, align 4, !dbg !372, !tbaa !119
  %.phi.trans.insert = sext i32 %.pre to i64
  %.phi.trans.insert7 = getelementptr inbounds [2000 x i32]* @fld_curs, i64 0, i64 %.phi.trans.insert
  %.pre8 = load i32* %.phi.trans.insert7, align 4, !dbg !373, !tbaa !119
  %.pre9 = load i32* %insize, align 4, !dbg !374, !tbaa !119
  br label %13, !dbg !375

; <label>:13                                      ; preds = %10, %4
  %14 = phi i32 [ %.pre9, %10 ], [ %8, %4 ]
  %15 = phi i32 [ %.pre8, %10 ], [ %7, %4 ]
  %16 = icmp sgt i32 %15, %14, !dbg !376
  %. = select i1 %16, i32 %14, i32 %15, !dbg !377
  store i32 %., i32* %outsize, align 4, !dbg !378, !tbaa !119
  %17 = load i32* @fld, align 4, !dbg !379, !tbaa !119
  %18 = sext i32 %17 to i64, !dbg !380
  %19 = getelementptr inbounds [2000 x [256 x i8]]* @fld_name, i64 0, i64 %18, i64 0, !dbg !380
  %20 = tail call i64 @strlen(i8* %19) #5, !dbg !381
  %21 = trunc i64 %20 to i32, !dbg !382
  store i32 %21, i32* %varname, align 4, !dbg !383, !tbaa !119
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !91, metadata !113), !dbg !384
  %22 = icmp slt i32 %21, 1, !dbg !385
  br i1 %22, label %.preheader, label %.lr.ph4, !dbg !388

.preheader:                                       ; preds = %.lr.ph4, %13
  %23 = load i32* %outsize, align 4, !dbg !389, !tbaa !119
  %24 = icmp sgt i32 %23, 0, !dbg !392
  br i1 %24, label %.lr.ph, label %._crit_edge, !dbg !393

.lr.ph4:                                          ; preds = %13, %.lr.ph4
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %.lr.ph4 ], [ 1, %13 ]
  %25 = add nsw i64 %indvars.iv5, -1, !dbg !394
  %26 = load i32* @fld, align 4, !dbg !395, !tbaa !119
  %27 = sext i32 %26 to i64, !dbg !396
  %28 = getelementptr inbounds [2000 x [256 x i8]]* @fld_name, i64 0, i64 %27, i64 %25, !dbg !396
  %29 = load i8* %28, align 1, !dbg !396, !tbaa !133
  %30 = sext i8 %29 to i32, !dbg !396
  %31 = getelementptr inbounds i32* %varname, i64 %indvars.iv5, !dbg !397
  store i32 %30, i32* %31, align 4, !dbg !398, !tbaa !119
  %indvars.iv.next6 = add nuw i64 %indvars.iv5, 1, !dbg !388
  %32 = load i32* %varname, align 4, !dbg !399, !tbaa !119
  %33 = sext i32 %32 to i64, !dbg !385
  %34 = icmp slt i64 %indvars.iv5, %33, !dbg !385
  br i1 %34, label %.lr.ph4, label %.preheader, !dbg !388

.lr.ph:                                           ; preds = %.preheader, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %.preheader ]
  %35 = load i32* @fld, align 4, !dbg !400, !tbaa !119
  %36 = sext i32 %35 to i64, !dbg !401
  %37 = getelementptr inbounds [2000 x i8*]* @fld_cache, i64 0, i64 %36, !dbg !401
  %38 = load i8** %37, align 8, !dbg !401, !tbaa !220
  %39 = getelementptr inbounds i8* %38, i64 %indvars.iv, !dbg !401
  %40 = load i8* %39, align 1, !dbg !401, !tbaa !133
  %41 = getelementptr inbounds i8* %buf, i64 %indvars.iv, !dbg !402
  store i8 %40, i8* %41, align 1, !dbg !403, !tbaa !133
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !393
  %42 = load i32* %outsize, align 4, !dbg !389, !tbaa !119
  %43 = sext i32 %42 to i64, !dbg !392
  %44 = icmp slt i64 %indvars.iv.next, %43, !dbg !392
  br i1 %44, label %.lr.ph, label %._crit_edge, !dbg !393

._crit_edge:                                      ; preds = %.lr.ph, %.preheader
  %45 = load i32* @fld, align 4, !dbg !404, !tbaa !119
  %46 = sext i32 %45 to i64, !dbg !406
  %47 = getelementptr inbounds [2000 x i8*]* @fld_cache, i64 0, i64 %46, !dbg !406
  %48 = load i8** %47, align 8, !dbg !406, !tbaa !220
  %49 = icmp eq i8* %48, null, !dbg !407
  br i1 %49, label %51, label %50, !dbg !408

; <label>:50                                      ; preds = %._crit_edge
  tail call void @free(i8* %48) #6, !dbg !409
  %.pre10 = load i32* @fld, align 4, !dbg !410, !tbaa !119
  br label %51, !dbg !409

; <label>:51                                      ; preds = %._crit_edge, %50
  %52 = phi i32 [ %45, %._crit_edge ], [ %.pre10, %50 ]
  %53 = sext i32 %52 to i64, !dbg !411
  %54 = getelementptr inbounds [2000 x i8*]* @fld_cache, i64 0, i64 %53, !dbg !411
  store i8* null, i8** %54, align 8, !dbg !412, !tbaa !220
  %55 = getelementptr inbounds [2000 x i32]* @fld_bufsize, i64 0, i64 %53, !dbg !413
  store i32 0, i32* %55, align 4, !dbg !414, !tbaa !119
  %56 = add nsw i32 %52, 1, !dbg !415
  store i32 %56, i32* @fld, align 4, !dbg !415, !tbaa !119
  br label %58, !dbg !416

; <label>:57                                      ; preds = %0
  store i32 0, i32* @numflds, align 4, !dbg !417, !tbaa !119
  br label %58

; <label>:58                                      ; preds = %57, %51
  %storemerge = phi i32 [ -1, %57 ], [ 0, %51 ]
  store i32 %storemerge, i32* %retval, align 4, !dbg !419, !tbaa !119
  ret i32 0, !dbg !420
}
