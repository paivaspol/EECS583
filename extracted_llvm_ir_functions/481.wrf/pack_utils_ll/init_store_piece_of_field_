define i32 @init_store_piece_of_field_() #0 {
entry:
  %.b = load i1* @frst, align 1
  br i1 %.b, label %if.end, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  call void @llvm.memset.p0i8.i64(i8* bitcast ([2000 x i8*]* @fld_cache to i8*), i8 0, i64 16000, i32 16, i1 false)
  store i1 true, i1* @frst, align 1
  br label %if.end

if.end:                                           ; preds = %entry, %for.cond.preheader
  store i32 0, i32* @numflds, align 4, !tbaa !0
  br label %for.body3

for.body3:                                        ; preds = %if.end12, %if.end
  %indvars.iv = phi i64 [ 0, %if.end ], [ %indvars.iv.next, %if.end12 ]
  %arraydecay = getelementptr inbounds [2000 x [256 x i8]]* @fld_name, i64 0, i64 %indvars.iv, i64 0
  store i8 0, i8* %arraydecay, align 16
  %arrayidx7 = getelementptr inbounds [2000 x i8*]* @fld_cache, i64 0, i64 %indvars.iv
  %0 = load i8** %arrayidx7, align 8, !tbaa !3
  %cmp8 = icmp eq i8* %0, null
  br i1 %cmp8, label %if.end12, label %if.then9

if.then9:                                         ; preds = %for.body3
  tail call void @free(i8* %0) #4
  br label %if.end12

if.end12:                                         ; preds = %for.body3, %if.then9
  store i8* null, i8** %arrayidx7, align 8, !tbaa !3
  %arrayidx16 = getelementptr inbounds [2000 x i32]* @fld_curs, i64 0, i64 %indvars.iv
  store i32 0, i32* %arrayidx16, align 4, !tbaa !0
  %arrayidx18 = getelementptr inbounds [2000 x i32]* @fld_bufsize, i64 0, i64 %indvars.iv
  store i32 0, i32* %arrayidx18, align 4, !tbaa !0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 2000
  br i1 %exitcond, label %for.end21, label %for.body3

for.end21:                                        ; preds = %if.end12
  ret i32 0
}
