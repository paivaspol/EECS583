define i32 @int_pack_data_(i8* nocapture %buf, i32* nocapture %ninbytes, i8* nocapture %obuf, i32* nocapture %cursor) #0 {
entry:
  %0 = load i32* %cursor, align 4, !tbaa !0
  %sub = add i32 %0, -1
  %1 = load i32* %ninbytes, align 4, !tbaa !0
  %cmp8 = icmp sgt i32 %1, 0
  br i1 %cmp8, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %2 = sext i32 %sub to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv12 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next13, %for.body ]
  %indvars.iv = phi i64 [ %2, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %lcurs.010 = phi i32 [ %sub, %for.body.lr.ph ], [ %inc, %for.body ]
  %arrayidx = getelementptr inbounds i8* %buf, i64 %indvars.iv12
  %3 = load i8* %arrayidx, align 1, !tbaa !1
  %inc = add nsw i32 %lcurs.010, 1
  %arrayidx2 = getelementptr inbounds i8* %obuf, i64 %indvars.iv
  store i8 %3, i8* %arrayidx2, align 1, !tbaa !1
  %indvars.iv.next13 = add i64 %indvars.iv12, 1
  %4 = load i32* %ninbytes, align 4, !tbaa !0
  %5 = trunc i64 %indvars.iv.next13 to i32
  %cmp = icmp slt i32 %5, %4
  %indvars.iv.next = add i64 %indvars.iv, 1
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  %lcurs.0.lcssa = phi i32 [ %sub, %entry ], [ %inc, %for.body ]
  %add = add nsw i32 %lcurs.0.lcssa, 1
  store i32 %add, i32* %cursor, align 4, !tbaa !0
  ret i32 undef
}
