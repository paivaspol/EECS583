define i32 @int_get_ti_header_c_(i8* %hdrbuf, i32* nocapture %hdrbufsize, i32* nocapture %n, i32* nocapture %itypesize, i32* nocapture %typesize, i32* nocapture %DataHandle, i8* nocapture %Data, i32* nocapture %Count, i32* nocapture %code) #0 {
entry:
  %0 = bitcast i8* %hdrbuf to i32*
  %1 = load i32* %0, align 1
  store i32 %1, i32* %hdrbufsize, align 1
  %add.ptr = getelementptr inbounds i8* %hdrbuf, i64 4
  %2 = bitcast i8* %add.ptr to i32*
  %3 = load i32* %2, align 1
  store i32 %3, i32* %code, align 1
  %add.ptr1 = getelementptr inbounds i8* %hdrbuf, i64 8
  %4 = bitcast i8* %add.ptr1 to i32*
  %5 = load i32* %4, align 1
  store i32 %5, i32* %DataHandle, align 1
  %add.ptr2 = getelementptr inbounds i8* %hdrbuf, i64 12
  %6 = bitcast i8* %add.ptr2 to i32*
  %7 = load i32* %6, align 1
  store i32 %7, i32* %typesize, align 1
  %add.ptr3 = getelementptr inbounds i8* %hdrbuf, i64 16
  %8 = bitcast i8* %add.ptr3 to i32*
  %9 = load i32* %8, align 1
  store i32 %9, i32* %Count, align 1
  %add.ptr4 = getelementptr inbounds i8* %hdrbuf, i64 20
  %10 = load i32* %typesize, align 4, !tbaa !0
  %mul = mul nsw i32 %10, %9
  %cmp = icmp sgt i32 %mul, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %conv = sext i32 %mul to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %Data, i8* %add.ptr4, i64 %conv, i32 1, i1 false)
  %11 = load i32* %Count, align 4, !tbaa !0
  %12 = load i32* %typesize, align 4, !tbaa !0
  %mul6 = mul nsw i32 %12, %11
  %idx.ext = sext i32 %mul6 to i64
  %add.ptr4.sum = add i64 %idx.ext, 20
  %add.ptr7 = getelementptr inbounds i8* %hdrbuf, i64 %add.ptr4.sum
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %p.0 = phi i8* [ %add.ptr7, %if.then ], [ %add.ptr4, %entry ]
  %sub.ptr.lhs.cast = ptrtoint i8* %p.0 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %hdrbuf to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv8 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv8, i32* %n, align 4, !tbaa !0
  ret i32 0
}
