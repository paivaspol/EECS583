define i32 @int_get_ti_header_c_(i8* %hdrbuf, i32* %hdrbufsize, i32* nocapture %n, i32* nocapture readnone %itypesize, i32* %typesize, i32* %DataHandle, i8* %Data, i32* %Count, i32* %code) #0 {
  %1 = bitcast i32* %hdrbufsize to i8*
  %2 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %1, i1 false)
  %3 = tail call i8* @__memcpy_chk(i8* %1, i8* %hdrbuf, i64 4, i64 %2) #5
  %4 = getelementptr inbounds i8* %hdrbuf, i64 4
  %5 = bitcast i32* %code to i8*
  %6 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %5, i1 false)
  %7 = tail call i8* @__memcpy_chk(i8* %5, i8* %4, i64 4, i64 %6) #5
  %8 = getelementptr inbounds i8* %hdrbuf, i64 8
  %9 = bitcast i32* %DataHandle to i8*
  %10 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %9, i1 false)
  %11 = tail call i8* @__memcpy_chk(i8* %9, i8* %8, i64 4, i64 %10) #5
  %12 = getelementptr inbounds i8* %hdrbuf, i64 12
  %13 = bitcast i32* %typesize to i8*
  %14 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %13, i1 false)
  %15 = tail call i8* @__memcpy_chk(i8* %13, i8* %12, i64 4, i64 %14) #5
  %16 = getelementptr inbounds i8* %hdrbuf, i64 16
  %17 = bitcast i32* %Count to i8*
  %18 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %17, i1 false)
  %19 = tail call i8* @__memcpy_chk(i8* %17, i8* %16, i64 4, i64 %18) #5
  %20 = getelementptr inbounds i8* %hdrbuf, i64 20
  %21 = load i32* %Count, align 4, !tbaa !2
  %22 = load i32* %typesize, align 4, !tbaa !2
  %23 = mul nsw i32 %22, %21
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %34

; <label>:25                                      ; preds = %0
  %26 = sext i32 %23 to i64
  %27 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %Data, i1 false)
  %28 = tail call i8* @__memcpy_chk(i8* %Data, i8* %20, i64 %26, i64 %27) #5
  %29 = load i32* %Count, align 4, !tbaa !2
  %30 = load i32* %typesize, align 4, !tbaa !2
  %31 = mul nsw i32 %30, %29
  %32 = sext i32 %31 to i64
  %.sum = add nsw i64 %32, 20
  %33 = getelementptr inbounds i8* %hdrbuf, i64 %.sum
  br label %34

; <label>:34                                      ; preds = %25, %0
  %p.0 = phi i8* [ %33, %25 ], [ %20, %0 ]
  %35 = ptrtoint i8* %p.0 to i64
  %36 = ptrtoint i8* %hdrbuf to i64
  %37 = sub i64 %35, %36
  %38 = trunc i64 %37 to i32
  store i32 %38, i32* %n, align 4, !tbaa !2
  ret i32 0
}
