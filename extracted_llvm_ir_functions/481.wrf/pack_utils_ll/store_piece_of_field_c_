define i32 @store_piece_of_field_c_(i8* %buf, i32* nocapture readonly %varname, i32* nocapture readonly %chunksize, i32* nocapture %retval) #0 {
  %vname = alloca [256 x i8], align 16
  tail call void @llvm.dbg.value(metadata i8* %buf, i64 0, metadata !74, metadata !113), !dbg !285
  tail call void @llvm.dbg.value(metadata i32* %varname, i64 0, metadata !75, metadata !113), !dbg !286
  tail call void @llvm.dbg.value(metadata i32* %chunksize, i64 0, metadata !76, metadata !113), !dbg !287
  tail call void @llvm.dbg.value(metadata i32* %retval, i64 0, metadata !77, metadata !113), !dbg !288
  %1 = getelementptr inbounds [256 x i8]* %vname, i64 0, i64 0, !dbg !289
  call void @llvm.lifetime.start(i64 256, i8* %1) #3, !dbg !289
  tail call void @llvm.dbg.declare(metadata [256 x i8]* %vname, metadata !81, metadata !113), !dbg !290
  %2 = load i32* %varname, align 4, !dbg !291, !tbaa !119
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !79, metadata !113), !dbg !292
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !78, metadata !113), !dbg !293
  %3 = icmp slt i32 %2, 1, !dbg !294
  br i1 %3, label %._crit_edge, label %.lr.ph4, !dbg !297

.lr.ph4:                                          ; preds = %0, %.lr.ph4
  %indvars.iv6 = phi i64 [ %indvars.iv.next7, %.lr.ph4 ], [ 1, %0 ]
  %4 = getelementptr inbounds i32* %varname, i64 %indvars.iv6, !dbg !298
  %5 = load i32* %4, align 4, !dbg !298, !tbaa !119
  %6 = trunc i32 %5 to i8, !dbg !298
  %7 = add nsw i64 %indvars.iv6, -1, !dbg !300
  %8 = getelementptr inbounds [256 x i8]* %vname, i64 0, i64 %7, !dbg !301
  store i8 %6, i8* %8, align 1, !dbg !302, !tbaa !133
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1, !dbg !297
  %lftr.wideiv = trunc i64 %indvars.iv6 to i32, !dbg !297
  %exitcond = icmp eq i32 %lftr.wideiv, %2, !dbg !297
  br i1 %exitcond, label %._crit_edge, label %.lr.ph4, !dbg !297

._crit_edge:                                      ; preds = %.lr.ph4, %0
  %9 = sext i32 %2 to i64, !dbg !303
  %10 = getelementptr inbounds [256 x i8]* %vname, i64 0, i64 %9, !dbg !303
  store i8 0, i8* %10, align 1, !dbg !304, !tbaa !133
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !80, metadata !113), !dbg !305
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !78, metadata !113), !dbg !293
  %11 = load i32* @numflds, align 4, !dbg !306, !tbaa !119
  %12 = icmp sgt i32 %11, 0, !dbg !309
  br i1 %12, label %.lr.ph, label %.thread, !dbg !310

.lr.ph:                                           ; preds = %._crit_edge
  %13 = sext i32 %11 to i64, !dbg !310
  br label %14, !dbg !310

; <label>:14                                      ; preds = %.lr.ph, %18
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %18 ]
  %15 = getelementptr inbounds [2000 x [256 x i8]]* @fld_name, i64 0, i64 %indvars.iv, i64 0, !dbg !311
  %16 = call i32 @strcmp(i8* %15, i8* %1) #5, !dbg !314
  %17 = icmp eq i32 %16, 0, !dbg !314
  br i1 %17, label %20, label %18, !dbg !315

; <label>:18                                      ; preds = %14
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !310
  %19 = icmp slt i64 %indvars.iv.next, %13, !dbg !309
  br i1 %19, label %14, label %.thread, !dbg !310

; <label>:20                                      ; preds = %14
  %21 = trunc i64 %indvars.iv to i32, !dbg !316
  %22 = icmp eq i32 %21, -1, !dbg !316
  br i1 %22, label %.thread, label %25, !dbg !318

.thread:                                          ; preds = %18, %._crit_edge, %20
  %23 = load %struct.__sFILE** @__stderrp, align 8, !dbg !319, !tbaa !220
  %24 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %23, i8* getelementptr inbounds ([88 x i8]* @.str1, i64 0, i64 0), i8* %1) #5, !dbg !321
  store i32 1, i32* %retval, align 4, !dbg !322, !tbaa !119
  br label %55, !dbg !323

; <label>:25                                      ; preds = %20
  %sext = shl i64 %indvars.iv, 32, !dbg !324
  %26 = ashr exact i64 %sext, 32, !dbg !324
  %27 = getelementptr inbounds [2000 x i8*]* @fld_cache, i64 0, i64 %26, !dbg !324
  %28 = load i8** %27, align 8, !dbg !324, !tbaa !220
  %29 = icmp eq i8* %28, null, !dbg !326
  br i1 %29, label %30, label %._crit_edge8, !dbg !327

._crit_edge8:                                     ; preds = %25
  %.phi.trans.insert = getelementptr inbounds [2000 x i32]* @fld_curs, i64 0, i64 %26
  %.pre = load i32* %.phi.trans.insert, align 4, !dbg !328, !tbaa !119
  %.pre9 = getelementptr inbounds [2000 x i32]* @fld_bufsize, i64 0, i64 %26, !dbg !330
  br label %36, !dbg !327

; <label>:30                                      ; preds = %25
  %31 = getelementptr inbounds [2000 x i32]* @fld_bufsize, i64 0, i64 %26, !dbg !331
  %32 = load i32* %31, align 4, !dbg !331, !tbaa !119
  %33 = sext i32 %32 to i64, !dbg !331
  %34 = tail call i8* @malloc(i64 %33) #5, !dbg !333
  store i8* %34, i8** %27, align 8, !dbg !334, !tbaa !220
  %35 = getelementptr inbounds [2000 x i32]* @fld_curs, i64 0, i64 %26, !dbg !335
  store i32 0, i32* %35, align 4, !dbg !336, !tbaa !119
  br label %36, !dbg !337

; <label>:36                                      ; preds = %._crit_edge8, %30
  %.pre-phi10 = phi i32* [ %.pre9, %._crit_edge8 ], [ %31, %30 ], !dbg !330
  %.pre-phi = phi i32* [ %.phi.trans.insert, %._crit_edge8 ], [ %35, %30 ], !dbg !328
  %37 = phi i8* [ %28, %._crit_edge8 ], [ %34, %30 ]
  %38 = phi i32 [ %.pre, %._crit_edge8 ], [ 0, %30 ]
  %39 = load i32* %chunksize, align 4, !dbg !338, !tbaa !119
  %40 = add nsw i32 %39, %38, !dbg !339
  %41 = load i32* %.pre-phi10, align 4, !dbg !330, !tbaa !119
  %42 = icmp sgt i32 %40, %41, !dbg !340
  br i1 %42, label %43, label %46, !dbg !341

; <label>:43                                      ; preds = %36
  %44 = load %struct.__sFILE** @__stderrp, align 8, !dbg !342, !tbaa !220
  %45 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %44, i8* getelementptr inbounds ([59 x i8]* @.str2, i64 0, i64 0), i8* %1, i32 %38, i32 %39, i32 %41, i32 %21) #5, !dbg !344
  store i32 1, i32* %retval, align 4, !dbg !345, !tbaa !119
  br label %55, !dbg !346

; <label>:46                                      ; preds = %36
  %47 = sext i32 %38 to i64, !dbg !347
  %48 = getelementptr inbounds i8* %37, i64 %47, !dbg !347
  %49 = sext i32 %39 to i64, !dbg !347
  %50 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %48, i1 false), !dbg !347
  %51 = tail call i8* @__memcpy_chk(i8* %48, i8* %buf, i64 %49, i64 %50) #5, !dbg !347
  %52 = load i32* %chunksize, align 4, !dbg !348, !tbaa !119
  %53 = load i32* %.pre-phi, align 4, !dbg !349, !tbaa !119
  %54 = add nsw i32 %53, %52, !dbg !349
  store i32 %54, i32* %.pre-phi, align 4, !dbg !349, !tbaa !119
  store i32 0, i32* %retval, align 4, !dbg !350, !tbaa !119
  br label %55, !dbg !351

; <label>:55                                      ; preds = %46, %43, %.thread
  call void @llvm.lifetime.end(i64 256, i8* %1) #3, !dbg !352
  ret i32 0, !dbg !352
}
