define i32 @store_piece_of_field_c_(i8* %buf, i32* nocapture readonly %varname, i32* nocapture readonly %chunksize, i32* nocapture %retval) #0 {
  %vname = alloca [256 x i8], align 16
  %1 = getelementptr inbounds [256 x i8]* %vname, i64 0, i64 0
  call void @llvm.lifetime.start(i64 256, i8* %1) #3
  %2 = load i32* %varname, align 4, !tbaa !2
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %._crit_edge, label %.lr.ph4

.lr.ph4:                                          ; preds = %0, %.lr.ph4
  %indvars.iv6 = phi i64 [ %indvars.iv.next7, %.lr.ph4 ], [ 1, %0 ]
  %4 = getelementptr inbounds i32* %varname, i64 %indvars.iv6
  %5 = load i32* %4, align 4, !tbaa !2
  %6 = trunc i32 %5 to i8
  %7 = add nsw i64 %indvars.iv6, -1
  %8 = getelementptr inbounds [256 x i8]* %vname, i64 0, i64 %7
  store i8 %6, i8* %8, align 1, !tbaa !6
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1
  %lftr.wideiv = trunc i64 %indvars.iv6 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %2
  br i1 %exitcond, label %._crit_edge, label %.lr.ph4

._crit_edge:                                      ; preds = %.lr.ph4, %0
  %9 = sext i32 %2 to i64
  %10 = getelementptr inbounds [256 x i8]* %vname, i64 0, i64 %9
  store i8 0, i8* %10, align 1, !tbaa !6
  %11 = load i32* @numflds, align 4, !tbaa !2
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %.lr.ph, label %.thread

.lr.ph:                                           ; preds = %._crit_edge
  %13 = sext i32 %11 to i64
  br label %14

; <label>:14                                      ; preds = %.lr.ph, %18
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %18 ]
  %15 = getelementptr inbounds [2000 x [256 x i8]]* @fld_name, i64 0, i64 %indvars.iv, i64 0
  %16 = call i32 @strcmp(i8* %15, i8* %1) #5
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

; <label>:18                                      ; preds = %14
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %19 = icmp slt i64 %indvars.iv.next, %13
  br i1 %19, label %14, label %.thread

; <label>:20                                      ; preds = %14
  %21 = trunc i64 %indvars.iv to i32
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %.thread, label %25

.thread:                                          ; preds = %18, %._crit_edge, %20
  %23 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !7
  %24 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %23, i8* getelementptr inbounds ([88 x i8]* @.str1, i64 0, i64 0), i8* %1) #5
  store i32 1, i32* %retval, align 4, !tbaa !2
  br label %55

; <label>:25                                      ; preds = %20
  %sext = shl i64 %indvars.iv, 32
  %26 = ashr exact i64 %sext, 32
  %27 = getelementptr inbounds [2000 x i8*]* @fld_cache, i64 0, i64 %26
  %28 = load i8** %27, align 8, !tbaa !7
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %._crit_edge8

._crit_edge8:                                     ; preds = %25
  %.phi.trans.insert = getelementptr inbounds [2000 x i32]* @fld_curs, i64 0, i64 %26
  %.pre = load i32* %.phi.trans.insert, align 4, !tbaa !2
  %.pre9 = getelementptr inbounds [2000 x i32]* @fld_bufsize, i64 0, i64 %26
  br label %36

; <label>:30                                      ; preds = %25
  %31 = getelementptr inbounds [2000 x i32]* @fld_bufsize, i64 0, i64 %26
  %32 = load i32* %31, align 4, !tbaa !2
  %33 = sext i32 %32 to i64
  %34 = tail call i8* @malloc(i64 %33) #5
  store i8* %34, i8** %27, align 8, !tbaa !7
  %35 = getelementptr inbounds [2000 x i32]* @fld_curs, i64 0, i64 %26
  store i32 0, i32* %35, align 4, !tbaa !2
  br label %36

; <label>:36                                      ; preds = %._crit_edge8, %30
  %.pre-phi10 = phi i32* [ %.pre9, %._crit_edge8 ], [ %31, %30 ]
  %.pre-phi = phi i32* [ %.phi.trans.insert, %._crit_edge8 ], [ %35, %30 ]
  %37 = phi i8* [ %28, %._crit_edge8 ], [ %34, %30 ]
  %38 = phi i32 [ %.pre, %._crit_edge8 ], [ 0, %30 ]
  %39 = load i32* %chunksize, align 4, !tbaa !2
  %40 = add nsw i32 %39, %38
  %41 = load i32* %.pre-phi10, align 4, !tbaa !2
  %42 = icmp sgt i32 %40, %41
  br i1 %42, label %43, label %46

; <label>:43                                      ; preds = %36
  %44 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !7
  %45 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %44, i8* getelementptr inbounds ([59 x i8]* @.str2, i64 0, i64 0), i8* %1, i32 %38, i32 %39, i32 %41, i32 %21) #5
  store i32 1, i32* %retval, align 4, !tbaa !2
  br label %55

; <label>:46                                      ; preds = %36
  %47 = sext i32 %38 to i64
  %48 = getelementptr inbounds i8* %37, i64 %47
  %49 = sext i32 %39 to i64
  %50 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %48, i1 false)
  %51 = tail call i8* @__memcpy_chk(i8* %48, i8* %buf, i64 %49, i64 %50) #5
  %52 = load i32* %chunksize, align 4, !tbaa !2
  %53 = load i32* %.pre-phi, align 4, !tbaa !2
  %54 = add nsw i32 %53, %52
  store i32 %54, i32* %.pre-phi, align 4, !tbaa !2
  store i32 0, i32* %retval, align 4, !tbaa !2
  br label %55

; <label>:55                                      ; preds = %46, %43, %.thread
  call void @llvm.lifetime.end(i64 256, i8* %1) #3
  ret i32 0
}
