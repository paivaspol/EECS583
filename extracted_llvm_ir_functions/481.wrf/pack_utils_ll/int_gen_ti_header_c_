define i32 @int_gen_ti_header_c_(i8* nocapture %hdrbuf, i32* nocapture %hdrbufsize, i32* nocapture %itypesize, i32* nocapture %typesize, i32* nocapture %DataHandle, i8* nocapture %Data, i32* nocapture %Count, i32* nocapture %code) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %hdrbuf}, i64 0, metadata !25), !dbg !119
  tail call void @llvm.dbg.value(metadata !{i32* %hdrbufsize}, i64 0, metadata !26), !dbg !119
  tail call void @llvm.dbg.value(metadata !{i32* %itypesize}, i64 0, metadata !27), !dbg !120
  tail call void @llvm.dbg.value(metadata !{i32* %typesize}, i64 0, metadata !28), !dbg !120
  tail call void @llvm.dbg.value(metadata !{i32* %DataHandle}, i64 0, metadata !29), !dbg !121
  tail call void @llvm.dbg.value(metadata !{i8* %Data}, i64 0, metadata !30), !dbg !121
  tail call void @llvm.dbg.value(metadata !{i32* %Count}, i64 0, metadata !31), !dbg !122
  tail call void @llvm.dbg.value(metadata !{i32* %code}, i64 0, metadata !32), !dbg !122
  tail call void @llvm.dbg.value(metadata !{i8* %hdrbuf}, i64 0, metadata !34), !dbg !123
  %add.ptr = getelementptr inbounds i8* %hdrbuf, i64 4, !dbg !124
  tail call void @llvm.dbg.value(metadata !{i8* %add.ptr}, i64 0, metadata !34), !dbg !124
  %0 = bitcast i8* %add.ptr to i32*, !dbg !125
  %1 = load i32* %code, align 1, !dbg !125
  store i32 %1, i32* %0, align 1, !dbg !125
  %add.ptr1 = getelementptr inbounds i8* %hdrbuf, i64 8, !dbg !125
  tail call void @llvm.dbg.value(metadata !{i8* %add.ptr1}, i64 0, metadata !34), !dbg !125
  %2 = bitcast i8* %add.ptr1 to i32*, !dbg !126
  %3 = load i32* %DataHandle, align 1, !dbg !126
  store i32 %3, i32* %2, align 1, !dbg !126
  %add.ptr2 = getelementptr inbounds i8* %hdrbuf, i64 12, !dbg !126
  tail call void @llvm.dbg.value(metadata !{i8* %add.ptr2}, i64 0, metadata !34), !dbg !126
  %4 = bitcast i8* %add.ptr2 to i32*, !dbg !127
  %5 = load i32* %typesize, align 1, !dbg !127
  store i32 %5, i32* %4, align 1, !dbg !127
  %add.ptr3 = getelementptr inbounds i8* %hdrbuf, i64 16, !dbg !127
  tail call void @llvm.dbg.value(metadata !{i8* %add.ptr3}, i64 0, metadata !34), !dbg !127
  %6 = bitcast i8* %add.ptr3 to i32*, !dbg !128
  %7 = load i32* %Count, align 1, !dbg !128
  store i32 %7, i32* %6, align 1, !dbg !128
  %add.ptr4 = getelementptr inbounds i8* %hdrbuf, i64 20, !dbg !128
  tail call void @llvm.dbg.value(metadata !{i8* %add.ptr4}, i64 0, metadata !34), !dbg !128
  %8 = load i32* %Count, align 4, !dbg !129, !tbaa !110
  %9 = load i32* %typesize, align 4, !dbg !129, !tbaa !110
  %mul = mul nsw i32 %9, %8, !dbg !129
  %conv = sext i32 %mul to i64, !dbg !129
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr4, i8* %Data, i64 %conv, i32 1, i1 false), !dbg !129
  %10 = load i32* %Count, align 4, !dbg !129, !tbaa !110
  %11 = load i32* %typesize, align 4, !dbg !129, !tbaa !110
  %mul5 = mul nsw i32 %11, %10, !dbg !129
  %add.ptr6.offs = add i32 %mul5, 20, !dbg !130
  store i32 %add.ptr6.offs, i32* %hdrbufsize, align 4, !dbg !130, !tbaa !110
  %12 = bitcast i8* %hdrbuf to i32*, !dbg !131
  store i32 %add.ptr6.offs, i32* %12, align 1, !dbg !131
  ret i32 0, !dbg !132
}
