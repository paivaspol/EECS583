define i32 @int_gen_ti_header_c_(i8* nocapture %hdrbuf, i32* nocapture %hdrbufsize, i32* nocapture %itypesize, i32* nocapture %typesize, i32* nocapture %DataHandle, i8* nocapture %Data, i32* nocapture %Count, i32* nocapture %code) #0 {
entry:
  %add.ptr = getelementptr inbounds i8* %hdrbuf, i64 4
  %0 = bitcast i8* %add.ptr to i32*
  %1 = load i32* %code, align 1
  store i32 %1, i32* %0, align 1
  %add.ptr1 = getelementptr inbounds i8* %hdrbuf, i64 8
  %2 = bitcast i8* %add.ptr1 to i32*
  %3 = load i32* %DataHandle, align 1
  store i32 %3, i32* %2, align 1
  %add.ptr2 = getelementptr inbounds i8* %hdrbuf, i64 12
  %4 = bitcast i8* %add.ptr2 to i32*
  %5 = load i32* %typesize, align 1
  store i32 %5, i32* %4, align 1
  %add.ptr3 = getelementptr inbounds i8* %hdrbuf, i64 16
  %6 = bitcast i8* %add.ptr3 to i32*
  %7 = load i32* %Count, align 1
  store i32 %7, i32* %6, align 1
  %add.ptr4 = getelementptr inbounds i8* %hdrbuf, i64 20
  %8 = load i32* %Count, align 4, !tbaa !0
  %9 = load i32* %typesize, align 4, !tbaa !0
  %mul = mul nsw i32 %9, %8
  %conv = sext i32 %mul to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr4, i8* %Data, i64 %conv, i32 1, i1 false)
  %10 = load i32* %Count, align 4, !tbaa !0
  %11 = load i32* %typesize, align 4, !tbaa !0
  %mul5 = mul nsw i32 %11, %10
  %add.ptr6.offs = add i32 %mul5, 20
  store i32 %add.ptr6.offs, i32* %hdrbufsize, align 4, !tbaa !0
  %12 = bitcast i8* %hdrbuf to i32*
  store i32 %add.ptr6.offs, i32* %12, align 1
  ret i32 0
}
