define i32 @int_gen_ti_header_c_(i8* %hdrbuf, i32* %hdrbufsize, i32* nocapture readnone %itypesize, i32* %typesize, i32* %DataHandle, i8* %Data, i32* %Count, i32* %code) #0 {
  %1 = getelementptr inbounds i8* %hdrbuf, i64 4
  %2 = bitcast i32* %code to i8*
  %3 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %1, i1 false)
  %4 = tail call i8* @__memcpy_chk(i8* %1, i8* %2, i64 4, i64 %3) #5
  %5 = getelementptr inbounds i8* %hdrbuf, i64 8
  %6 = bitcast i32* %DataHandle to i8*
  %7 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %5, i1 false)
  %8 = tail call i8* @__memcpy_chk(i8* %5, i8* %6, i64 4, i64 %7) #5
  %9 = getelementptr inbounds i8* %hdrbuf, i64 12
  %10 = bitcast i32* %typesize to i8*
  %11 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %9, i1 false)
  %12 = tail call i8* @__memcpy_chk(i8* %9, i8* %10, i64 4, i64 %11) #5
  %13 = getelementptr inbounds i8* %hdrbuf, i64 16
  %14 = bitcast i32* %Count to i8*
  %15 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %13, i1 false)
  %16 = tail call i8* @__memcpy_chk(i8* %13, i8* %14, i64 4, i64 %15) #5
  %17 = getelementptr inbounds i8* %hdrbuf, i64 20
  %18 = load i32* %Count, align 4, !tbaa !2
  %19 = load i32* %typesize, align 4, !tbaa !2
  %20 = mul nsw i32 %19, %18
  %21 = sext i32 %20 to i64
  %22 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %17, i1 false)
  %23 = tail call i8* @__memcpy_chk(i8* %17, i8* %Data, i64 %21, i64 %22) #5
  %24 = load i32* %Count, align 4, !tbaa !2
  %25 = load i32* %typesize, align 4, !tbaa !2
  %26 = mul nsw i32 %25, %24
  %.offs = add i32 %26, 20
  store i32 %.offs, i32* %hdrbufsize, align 4, !tbaa !2
  %27 = bitcast i32* %hdrbufsize to i8*
  %28 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %hdrbuf, i1 false)
  %29 = tail call i8* @__memcpy_chk(i8* %hdrbuf, i8* %27, i64 4, i64 %28) #5
  ret i32 0
}
