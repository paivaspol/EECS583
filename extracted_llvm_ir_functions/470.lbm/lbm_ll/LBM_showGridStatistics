define void @LBM_showGridStatistics(double* nocapture readonly %grid) #0 {
  tail call void @llvm.dbg.value(metadata double* %grid, i64 0, metadata !247, metadata !331), !dbg !1194
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !248, metadata !331), !dbg !1195
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !249, metadata !331), !dbg !1196
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !250, metadata !331), !dbg !1197
  tail call void @llvm.dbg.value(metadata double 1.000000e+30, i64 0, metadata !254, metadata !331), !dbg !1198
  tail call void @llvm.dbg.value(metadata double -1.000000e+30, i64 0, metadata !255, metadata !331), !dbg !1199
  tail call void @llvm.dbg.value(metadata double 1.000000e+30, i64 0, metadata !257, metadata !331), !dbg !1200
  tail call void @llvm.dbg.value(metadata double -1.000000e+30, i64 0, metadata !258, metadata !331), !dbg !1201
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !260, metadata !331), !dbg !1202
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !261, metadata !331), !dbg !1203
  br label %1, !dbg !1204

; <label>:1                                       ; preds = %0, %127
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %127 ]
  %mass.09 = phi double [ 0.000000e+00, %0 ], [ %78, %127 ]
  %nObstacleCells.08 = phi i32 [ 0, %0 ], [ %nObstacleCells.1, %127 ]
  %maxRho.07 = phi double [ -1.000000e+30, %0 ], [ %maxRho.1, %127 ]
  %minRho.06 = phi double [ 1.000000e+30, %0 ], [ %minRho.1, %127 ]
  %nAccelCells.05 = phi i32 [ 0, %0 ], [ %nAccelCells.2, %127 ]
  %maxU2.04 = phi double [ -1.000000e+30, %0 ], [ %maxU2.1, %127 ]
  %minU2.03 = phi double [ 1.000000e+30, %0 ], [ %minU2.2, %127 ]
  %nFluidCells.02 = phi i32 [ 0, %0 ], [ %nFluidCells.2, %127 ]
  %2 = getelementptr inbounds double* %grid, i64 %indvars.iv, !dbg !1206
  %3 = load double* %2, align 8, !dbg !1206, !tbaa !362
  %4 = or i64 %indvars.iv, 1, !dbg !1209
  %5 = getelementptr inbounds double* %grid, i64 %4, !dbg !1209
  %6 = load double* %5, align 8, !dbg !1209, !tbaa !362
  %7 = fadd double %3, %6, !dbg !1210
  %8 = or i64 %indvars.iv, 2, !dbg !1211
  %9 = getelementptr inbounds double* %grid, i64 %8, !dbg !1211
  %10 = load double* %9, align 8, !dbg !1211, !tbaa !362
  %11 = fadd double %7, %10, !dbg !1212
  %12 = or i64 %indvars.iv, 3, !dbg !1213
  %13 = getelementptr inbounds double* %grid, i64 %12, !dbg !1213
  %14 = load double* %13, align 8, !dbg !1213, !tbaa !362
  %15 = fadd double %11, %14, !dbg !1214
  %16 = add nuw nsw i64 %indvars.iv, 4, !dbg !1215
  %17 = getelementptr inbounds double* %grid, i64 %16, !dbg !1215
  %18 = load double* %17, align 8, !dbg !1215, !tbaa !362
  %19 = fadd double %15, %18, !dbg !1216
  %20 = add nuw nsw i64 %indvars.iv, 5, !dbg !1217
  %21 = getelementptr inbounds double* %grid, i64 %20, !dbg !1217
  %22 = load double* %21, align 8, !dbg !1217, !tbaa !362
  %23 = fadd double %19, %22, !dbg !1218
  %24 = add nuw nsw i64 %indvars.iv, 6, !dbg !1219
  %25 = getelementptr inbounds double* %grid, i64 %24, !dbg !1219
  %26 = load double* %25, align 8, !dbg !1219, !tbaa !362
  %27 = fadd double %23, %26, !dbg !1220
  %28 = add nuw nsw i64 %indvars.iv, 7, !dbg !1221
  %29 = getelementptr inbounds double* %grid, i64 %28, !dbg !1221
  %30 = load double* %29, align 8, !dbg !1221, !tbaa !362
  %31 = fadd double %27, %30, !dbg !1222
  %32 = add nuw nsw i64 %indvars.iv, 8, !dbg !1223
  %33 = getelementptr inbounds double* %grid, i64 %32, !dbg !1223
  %34 = load double* %33, align 8, !dbg !1223, !tbaa !362
  %35 = fadd double %31, %34, !dbg !1224
  %36 = add nuw nsw i64 %indvars.iv, 9, !dbg !1225
  %37 = getelementptr inbounds double* %grid, i64 %36, !dbg !1225
  %38 = load double* %37, align 8, !dbg !1225, !tbaa !362
  %39 = fadd double %35, %38, !dbg !1226
  %40 = add nuw nsw i64 %indvars.iv, 10, !dbg !1227
  %41 = getelementptr inbounds double* %grid, i64 %40, !dbg !1227
  %42 = load double* %41, align 8, !dbg !1227, !tbaa !362
  %43 = fadd double %39, %42, !dbg !1228
  %44 = add nuw nsw i64 %indvars.iv, 11, !dbg !1229
  %45 = getelementptr inbounds double* %grid, i64 %44, !dbg !1229
  %46 = load double* %45, align 8, !dbg !1229, !tbaa !362
  %47 = fadd double %43, %46, !dbg !1230
  %48 = add nuw nsw i64 %indvars.iv, 12, !dbg !1231
  %49 = getelementptr inbounds double* %grid, i64 %48, !dbg !1231
  %50 = load double* %49, align 8, !dbg !1231, !tbaa !362
  %51 = fadd double %47, %50, !dbg !1232
  %52 = add nuw nsw i64 %indvars.iv, 13, !dbg !1233
  %53 = getelementptr inbounds double* %grid, i64 %52, !dbg !1233
  %54 = load double* %53, align 8, !dbg !1233, !tbaa !362
  %55 = fadd double %51, %54, !dbg !1234
  %56 = add nuw nsw i64 %indvars.iv, 14, !dbg !1235
  %57 = getelementptr inbounds double* %grid, i64 %56, !dbg !1235
  %58 = load double* %57, align 8, !dbg !1235, !tbaa !362
  %59 = fadd double %55, %58, !dbg !1236
  %60 = add nuw nsw i64 %indvars.iv, 15, !dbg !1237
  %61 = getelementptr inbounds double* %grid, i64 %60, !dbg !1237
  %62 = load double* %61, align 8, !dbg !1237, !tbaa !362
  %63 = fadd double %59, %62, !dbg !1238
  %64 = add nuw nsw i64 %indvars.iv, 16, !dbg !1239
  %65 = getelementptr inbounds double* %grid, i64 %64, !dbg !1239
  %66 = load double* %65, align 8, !dbg !1239, !tbaa !362
  %67 = fadd double %63, %66, !dbg !1240
  %68 = add nuw nsw i64 %indvars.iv, 17, !dbg !1241
  %69 = getelementptr inbounds double* %grid, i64 %68, !dbg !1241
  %70 = load double* %69, align 8, !dbg !1241, !tbaa !362
  %71 = fadd double %67, %70, !dbg !1242
  %72 = add nuw nsw i64 %indvars.iv, 18, !dbg !1243
  %73 = getelementptr inbounds double* %grid, i64 %72, !dbg !1243
  %74 = load double* %73, align 8, !dbg !1243, !tbaa !362
  %75 = fadd double %71, %74, !dbg !1244
  tail call void @llvm.dbg.value(metadata double %75, i64 0, metadata !259, metadata !331), !dbg !1245
  %76 = fcmp olt double %75, %minRho.06, !dbg !1246
  tail call void @llvm.dbg.value(metadata double %75, i64 0, metadata !257, metadata !331), !dbg !1200
  %minRho.1 = select i1 %76, double %75, double %minRho.06, !dbg !1248
  %77 = fcmp ogt double %75, %maxRho.07, !dbg !1249
  tail call void @llvm.dbg.value(metadata double %75, i64 0, metadata !258, metadata !331), !dbg !1201
  %maxRho.1 = select i1 %77, double %75, double %maxRho.07, !dbg !1251
  %78 = fadd double %mass.09, %75, !dbg !1252
  tail call void @llvm.dbg.value(metadata double %78, i64 0, metadata !260, metadata !331), !dbg !1202
  %79 = add nuw nsw i64 %indvars.iv, 19, !dbg !1253
  %80 = getelementptr inbounds double* %grid, i64 %79, !dbg !1253
  %81 = bitcast double* %80 to i32*, !dbg !1253
  %82 = load i32* %81, align 4, !dbg !1253, !tbaa !385
  %83 = and i32 %82, 1, !dbg !1253
  %84 = icmp eq i32 %83, 0, !dbg !1253
  br i1 %84, label %87, label %85, !dbg !1255

; <label>:85                                      ; preds = %1
  %86 = add nsw i32 %nObstacleCells.08, 1, !dbg !1256
  tail call void @llvm.dbg.value(metadata i32 %86, i64 0, metadata !248, metadata !331), !dbg !1195
  br label %127, !dbg !1258

; <label>:87                                      ; preds = %1
  %88 = lshr i32 %82, 1, !dbg !1259
  %.lobit = and i32 %88, 1, !dbg !1259
  %89 = xor i32 %.lobit, 1, !dbg !1259
  %nFluidCells.1 = add nsw i32 %89, %nFluidCells.02, !dbg !1259
  %nAccelCells.1 = add nsw i32 %.lobit, %nAccelCells.05, !dbg !1259
  %90 = fsub double %14, %18, !dbg !1261
  %91 = fadd double %90, %30, !dbg !1262
  %92 = fsub double %91, %34, !dbg !1263
  %93 = fadd double %92, %38, !dbg !1264
  %94 = fsub double %93, %42, !dbg !1265
  %95 = fadd double %94, %62, !dbg !1266
  %96 = fadd double %95, %66, !dbg !1267
  %97 = fsub double %96, %70, !dbg !1268
  %98 = fsub double %97, %74, !dbg !1269
  tail call void @llvm.dbg.value(metadata double %98, i64 0, metadata !251, metadata !331), !dbg !1270
  %99 = fsub double %6, %10, !dbg !1271
  %100 = fadd double %99, %30, !dbg !1272
  %101 = fadd double %100, %34, !dbg !1273
  %102 = fsub double %101, %38, !dbg !1274
  %103 = fsub double %102, %42, !dbg !1275
  %104 = fadd double %103, %46, !dbg !1276
  %105 = fadd double %104, %50, !dbg !1277
  %106 = fsub double %105, %54, !dbg !1278
  %107 = fsub double %106, %58, !dbg !1279
  tail call void @llvm.dbg.value(metadata double %107, i64 0, metadata !252, metadata !331), !dbg !1280
  %108 = fsub double %22, %26, !dbg !1281
  %109 = fadd double %108, %46, !dbg !1282
  %110 = fsub double %109, %50, !dbg !1283
  %111 = fadd double %110, %54, !dbg !1284
  %112 = fsub double %111, %58, !dbg !1285
  %113 = fadd double %112, %62, !dbg !1286
  %114 = fsub double %113, %66, !dbg !1287
  %115 = fadd double %114, %70, !dbg !1288
  %116 = fsub double %115, %74, !dbg !1289
  tail call void @llvm.dbg.value(metadata double %116, i64 0, metadata !253, metadata !331), !dbg !1290
  %117 = fmul double %98, %98, !dbg !1291
  %118 = fmul double %107, %107, !dbg !1292
  %119 = fadd double %118, %117, !dbg !1293
  %120 = fmul double %116, %116, !dbg !1294
  %121 = fadd double %120, %119, !dbg !1295
  %122 = fmul double %75, %75, !dbg !1296
  %123 = fdiv double %121, %122, !dbg !1297
  tail call void @llvm.dbg.value(metadata double %123, i64 0, metadata !256, metadata !331), !dbg !1298
  %124 = fcmp olt double %123, %minU2.03, !dbg !1299
  tail call void @llvm.dbg.value(metadata double %123, i64 0, metadata !254, metadata !331), !dbg !1198
  %minU2.1 = select i1 %124, double %123, double %minU2.03, !dbg !1301
  %125 = fcmp ogt double %123, %maxU2.04, !dbg !1302
  br i1 %125, label %126, label %127, !dbg !1304

; <label>:126                                     ; preds = %87
  tail call void @llvm.dbg.value(metadata double %123, i64 0, metadata !255, metadata !331), !dbg !1199
  br label %127, !dbg !1305

; <label>:127                                     ; preds = %85, %126, %87
  %nFluidCells.2 = phi i32 [ %nFluidCells.02, %85 ], [ %nFluidCells.1, %126 ], [ %nFluidCells.1, %87 ]
  %minU2.2 = phi double [ %minU2.03, %85 ], [ %minU2.1, %126 ], [ %minU2.1, %87 ]
  %maxU2.1 = phi double [ %maxU2.04, %85 ], [ %123, %126 ], [ %maxU2.04, %87 ]
  %nAccelCells.2 = phi i32 [ %nAccelCells.05, %85 ], [ %nAccelCells.1, %126 ], [ %nAccelCells.1, %87 ]
  %nObstacleCells.1 = phi i32 [ %86, %85 ], [ %nObstacleCells.08, %126 ], [ %nObstacleCells.08, %87 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 20, !dbg !1204
  %128 = icmp slt i64 %indvars.iv.next, 26000000, !dbg !1306
  br i1 %128, label %1, label %129, !dbg !1204

; <label>:129                                     ; preds = %127
  %130 = tail call double @sqrt(double %minU2.2) #9, !dbg !1307
  %131 = tail call double @sqrt(double %maxU2.1) #9, !dbg !1308
  %132 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([138 x i8]* @.str3, i64 0, i64 0), i32 %nObstacleCells.1, i32 %nAccelCells.2, i32 %nFluidCells.2, double %minRho.1, double %maxRho.1, double %78, double %130, double %131) #6, !dbg !1309
  ret void, !dbg !1310
}
