define void @LBM_compareVelocityField(double* nocapture %grid, i8* nocapture %filename, i32 %binary) #0 {
entry:
  %fileUx = alloca float, align 4
  %fileUy = alloca float, align 4
  %fileUz = alloca float, align 4
  %tobool = icmp ne i32 %binary, 0
  %cond = select i1 %tobool, i8* getelementptr inbounds ([3 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str6, i64 0, i64 0)
  %call = call %struct._IO_FILE* @fopen(i8* %filename, i8* %cond) #4
  %0 = bitcast float* %fileUx to i8*
  %1 = bitcast float* %fileUy to i8*
  %2 = bitcast float* %fileUz to i8*
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.inc512, %entry
  %indvars.iv768 = phi i64 [ 0, %entry ], [ %indvars.iv.next769, %for.inc512 ]
  %maxDiff2.0741 = phi float [ 0xC6293E5940000000, %entry ], [ %maxDiff2.3, %for.inc512 ]
  %3 = mul i64 %indvars.iv768, 10000
  br label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %for.inc509, %for.cond1.preheader
  %indvars.iv762 = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next763, %for.inc509 ]
  %maxDiff2.1739 = phi float [ %maxDiff2.0741, %for.cond1.preheader ], [ %maxDiff2.3, %for.inc509 ]
  %4 = mul nsw i64 %indvars.iv762, 100
  %5 = add i64 %4, %3
  br label %for.body6

for.body6:                                        ; preds = %if.end, %for.cond4.preheader
  %indvars.iv = phi i64 [ 0, %for.cond4.preheader ], [ %indvars.iv.next, %if.end ]
  %maxDiff2.2736 = phi float [ %maxDiff2.1739, %for.cond4.preheader ], [ %maxDiff2.3, %if.end ]
  %6 = add i64 %5, %indvars.iv
  %7 = mul nsw i64 %6, 20
  %arrayidx = getelementptr inbounds double* %grid, i64 %7
  %8 = load double* %arrayidx, align 8, !tbaa !3
  %9 = or i64 %7, 1
  %arrayidx20 = getelementptr inbounds double* %grid, i64 %9
  %10 = load double* %arrayidx20, align 8, !tbaa !3
  %add21 = fadd double %8, %10
  %11 = or i64 %7, 2
  %arrayidx30 = getelementptr inbounds double* %grid, i64 %11
  %12 = load double* %arrayidx30, align 8, !tbaa !3
  %add31 = fadd double %add21, %12
  %13 = or i64 %7, 3
  %arrayidx40 = getelementptr inbounds double* %grid, i64 %13
  %14 = load double* %arrayidx40, align 8, !tbaa !3
  %add41 = fadd double %add31, %14
  %15 = add nsw i64 %7, 4
  %arrayidx50 = getelementptr inbounds double* %grid, i64 %15
  %16 = load double* %arrayidx50, align 8, !tbaa !3
  %add51 = fadd double %add41, %16
  %17 = add nsw i64 %7, 5
  %arrayidx60 = getelementptr inbounds double* %grid, i64 %17
  %18 = load double* %arrayidx60, align 8, !tbaa !3
  %add61 = fadd double %add51, %18
  %19 = add nsw i64 %7, 6
  %arrayidx70 = getelementptr inbounds double* %grid, i64 %19
  %20 = load double* %arrayidx70, align 8, !tbaa !3
  %add71 = fadd double %add61, %20
  %21 = add nsw i64 %7, 7
  %arrayidx80 = getelementptr inbounds double* %grid, i64 %21
  %22 = load double* %arrayidx80, align 8, !tbaa !3
  %add81 = fadd double %add71, %22
  %23 = add nsw i64 %7, 8
  %arrayidx90 = getelementptr inbounds double* %grid, i64 %23
  %24 = load double* %arrayidx90, align 8, !tbaa !3
  %add91 = fadd double %add81, %24
  %25 = add nsw i64 %7, 9
  %arrayidx100 = getelementptr inbounds double* %grid, i64 %25
  %26 = load double* %arrayidx100, align 8, !tbaa !3
  %add101 = fadd double %add91, %26
  %27 = add nsw i64 %7, 10
  %arrayidx110 = getelementptr inbounds double* %grid, i64 %27
  %28 = load double* %arrayidx110, align 8, !tbaa !3
  %add111 = fadd double %add101, %28
  %29 = add nsw i64 %7, 11
  %arrayidx120 = getelementptr inbounds double* %grid, i64 %29
  %30 = load double* %arrayidx120, align 8, !tbaa !3
  %add121 = fadd double %add111, %30
  %31 = add nsw i64 %7, 12
  %arrayidx130 = getelementptr inbounds double* %grid, i64 %31
  %32 = load double* %arrayidx130, align 8, !tbaa !3
  %add131 = fadd double %add121, %32
  %33 = add nsw i64 %7, 13
  %arrayidx140 = getelementptr inbounds double* %grid, i64 %33
  %34 = load double* %arrayidx140, align 8, !tbaa !3
  %add141 = fadd double %add131, %34
  %35 = add nsw i64 %7, 14
  %arrayidx150 = getelementptr inbounds double* %grid, i64 %35
  %36 = load double* %arrayidx150, align 8, !tbaa !3
  %add151 = fadd double %add141, %36
  %37 = add nsw i64 %7, 15
  %arrayidx160 = getelementptr inbounds double* %grid, i64 %37
  %38 = load double* %arrayidx160, align 8, !tbaa !3
  %add161 = fadd double %add151, %38
  %39 = add nsw i64 %7, 16
  %arrayidx170 = getelementptr inbounds double* %grid, i64 %39
  %40 = load double* %arrayidx170, align 8, !tbaa !3
  %add171 = fadd double %add161, %40
  %41 = add nsw i64 %7, 17
  %arrayidx180 = getelementptr inbounds double* %grid, i64 %41
  %42 = load double* %arrayidx180, align 8, !tbaa !3
  %add181 = fadd double %add171, %42
  %43 = add nsw i64 %7, 18
  %arrayidx190 = getelementptr inbounds double* %grid, i64 %43
  %44 = load double* %arrayidx190, align 8, !tbaa !3
  %add191 = fadd double %add181, %44
  %sub = fsub double %14, %16
  %add219 = fadd double %sub, %22
  %sub229 = fsub double %add219, %24
  %add239 = fadd double %sub229, %26
  %sub249 = fsub double %add239, %28
  %add259 = fadd double %sub249, %38
  %add269 = fadd double %add259, %40
  %sub279 = fsub double %add269, %42
  %sub289 = fsub double %sub279, %44
  %sub308 = fsub double %10, %12
  %add318 = fadd double %sub308, %22
  %add328 = fadd double %add318, %24
  %sub338 = fsub double %add328, %26
  %sub348 = fsub double %sub338, %28
  %add358 = fadd double %sub348, %30
  %add368 = fadd double %add358, %32
  %sub378 = fsub double %add368, %34
  %sub388 = fsub double %sub378, %36
  %sub407 = fsub double %18, %20
  %add417 = fadd double %sub407, %30
  %sub427 = fsub double %add417, %32
  %add437 = fadd double %sub427, %34
  %sub447 = fsub double %add437, %36
  %add457 = fadd double %sub447, %38
  %sub467 = fsub double %add457, %40
  %add477 = fadd double %sub467, %42
  %sub487 = fsub double %add477, %44
  %div = fdiv double %sub289, %add191
  %div488 = fdiv double %sub388, %add191
  %div489 = fdiv double %sub487, %add191
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %for.body6
  %call8.i = call i64 @fread(i8* %0, i64 4, i64 1, %struct._IO_FILE* %call) #4
  %call8.i734 = call i64 @fread(i8* %1, i64 4, i64 1, %struct._IO_FILE* %call) #4
  %call8.i735 = call i64 @fread(i8* %2, i64 4, i64 1, %struct._IO_FILE* %call) #4
  br label %if.end

if.else:                                          ; preds = %for.body6
  %call491 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([10 x i8]* @.str7, i64 0, i64 0), float* %fileUx, float* %fileUy, float* %fileUz) #4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %45 = load float* %fileUx, align 4, !tbaa !5
  %conv = fpext float %45 to double
  %sub492 = fsub double %div, %conv
  %conv493 = fptrunc double %sub492 to float
  %46 = load float* %fileUy, align 4, !tbaa !5
  %conv494 = fpext float %46 to double
  %sub495 = fsub double %div488, %conv494
  %conv496 = fptrunc double %sub495 to float
  %47 = load float* %fileUz, align 4, !tbaa !5
  %conv497 = fpext float %47 to double
  %sub498 = fsub double %div489, %conv497
  %conv499 = fptrunc double %sub498 to float
  %mul500 = fmul float %conv493, %conv493
  %mul501 = fmul float %conv496, %conv496
  %add502 = fadd float %mul500, %mul501
  %mul503 = fmul float %conv499, %conv499
  %add504 = fadd float %add502, %mul503
  %cmp505 = fcmp ogt float %add504, %maxDiff2.2736
  %maxDiff2.3 = select i1 %cmp505, float %add504, float %maxDiff2.2736
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 100
  br i1 %exitcond, label %for.inc509, label %for.body6

for.inc509:                                       ; preds = %if.end
  %indvars.iv.next763 = add i64 %indvars.iv762, 1
  %lftr.wideiv766 = trunc i64 %indvars.iv.next763 to i32
  %exitcond767 = icmp eq i32 %lftr.wideiv766, 100
  br i1 %exitcond767, label %for.inc512, label %for.cond4.preheader

for.inc512:                                       ; preds = %for.inc509
  %indvars.iv.next769 = add i64 %indvars.iv768, 1
  %lftr.wideiv771 = trunc i64 %indvars.iv.next769 to i32
  %exitcond772 = icmp eq i32 %lftr.wideiv771, 130
  br i1 %exitcond772, label %for.end514, label %for.cond1.preheader

for.end514:                                       ; preds = %for.inc512
  %conv515 = fpext float %maxDiff2.3 to double
  %call516 = call double @sqrt(double %conv515) #4
  %call517 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([43 x i8]* @.str8, i64 0, i64 0), double %call516) #4
  %call518 = call i32 @fclose(%struct._IO_FILE* %call) #4
  ret void
}
