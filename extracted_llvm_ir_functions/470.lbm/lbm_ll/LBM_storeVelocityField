define void @LBM_storeVelocityField(double* nocapture %grid, i8* nocapture %filename, i32 %binary) #0 {
entry:
  %ux = alloca float, align 4
  %uy = alloca float, align 4
  %uz = alloca float, align 4
  %tobool = icmp ne i32 %binary, 0
  %cond = select i1 %tobool, i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str4, i64 0, i64 0)
  %call = call %struct._IO_FILE* @fopen(i8* %filename, i8* %cond) #4
  %0 = bitcast float* %ux to i8*
  %1 = bitcast float* %uy to i8*
  %2 = bitcast float* %uz to i8*
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.inc501, %entry
  %indvars.iv743 = phi i64 [ 0, %entry ], [ %indvars.iv.next744, %for.inc501 ]
  %3 = mul i64 %indvars.iv743, 10000
  br label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %for.inc498, %for.cond1.preheader
  %indvars.iv737 = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next738, %for.inc498 ]
  %4 = mul nsw i64 %indvars.iv737, 100
  %5 = add i64 %4, %3
  br label %for.body6

for.body6:                                        ; preds = %for.inc, %for.cond4.preheader
  %indvars.iv = phi i64 [ 0, %for.cond4.preheader ], [ %indvars.iv.next, %for.inc ]
  %6 = add i64 %5, %indvars.iv
  %7 = mul nsw i64 %6, 20
  %arrayidx = getelementptr inbounds double* %grid, i64 %7
  %8 = load double* %arrayidx, align 8, !tbaa !3
  %9 = or i64 %7, 1
  %arrayidx20 = getelementptr inbounds double* %grid, i64 %9
  %10 = load double* %arrayidx20, align 8, !tbaa !3
  %add21 = fadd double %8, %10
  %11 = or i64 %7, 2
  %arrayidx30 = getelementptr inbounds double* %grid, i64 %11
  %12 = load double* %arrayidx30, align 8, !tbaa !3
  %add31 = fadd double %add21, %12
  %13 = or i64 %7, 3
  %arrayidx40 = getelementptr inbounds double* %grid, i64 %13
  %14 = load double* %arrayidx40, align 8, !tbaa !3
  %add41 = fadd double %add31, %14
  %15 = add nsw i64 %7, 4
  %arrayidx50 = getelementptr inbounds double* %grid, i64 %15
  %16 = load double* %arrayidx50, align 8, !tbaa !3
  %add51 = fadd double %add41, %16
  %17 = add nsw i64 %7, 5
  %arrayidx60 = getelementptr inbounds double* %grid, i64 %17
  %18 = load double* %arrayidx60, align 8, !tbaa !3
  %add61 = fadd double %add51, %18
  %19 = add nsw i64 %7, 6
  %arrayidx70 = getelementptr inbounds double* %grid, i64 %19
  %20 = load double* %arrayidx70, align 8, !tbaa !3
  %add71 = fadd double %add61, %20
  %21 = add nsw i64 %7, 7
  %arrayidx80 = getelementptr inbounds double* %grid, i64 %21
  %22 = load double* %arrayidx80, align 8, !tbaa !3
  %add81 = fadd double %add71, %22
  %23 = add nsw i64 %7, 8
  %arrayidx90 = getelementptr inbounds double* %grid, i64 %23
  %24 = load double* %arrayidx90, align 8, !tbaa !3
  %add91 = fadd double %add81, %24
  %25 = add nsw i64 %7, 9
  %arrayidx100 = getelementptr inbounds double* %grid, i64 %25
  %26 = load double* %arrayidx100, align 8, !tbaa !3
  %add101 = fadd double %add91, %26
  %27 = add nsw i64 %7, 10
  %arrayidx110 = getelementptr inbounds double* %grid, i64 %27
  %28 = load double* %arrayidx110, align 8, !tbaa !3
  %add111 = fadd double %add101, %28
  %29 = add nsw i64 %7, 11
  %arrayidx120 = getelementptr inbounds double* %grid, i64 %29
  %30 = load double* %arrayidx120, align 8, !tbaa !3
  %add121 = fadd double %add111, %30
  %31 = add nsw i64 %7, 12
  %arrayidx130 = getelementptr inbounds double* %grid, i64 %31
  %32 = load double* %arrayidx130, align 8, !tbaa !3
  %add131 = fadd double %add121, %32
  %33 = add nsw i64 %7, 13
  %arrayidx140 = getelementptr inbounds double* %grid, i64 %33
  %34 = load double* %arrayidx140, align 8, !tbaa !3
  %add141 = fadd double %add131, %34
  %35 = add nsw i64 %7, 14
  %arrayidx150 = getelementptr inbounds double* %grid, i64 %35
  %36 = load double* %arrayidx150, align 8, !tbaa !3
  %add151 = fadd double %add141, %36
  %37 = add nsw i64 %7, 15
  %arrayidx160 = getelementptr inbounds double* %grid, i64 %37
  %38 = load double* %arrayidx160, align 8, !tbaa !3
  %add161 = fadd double %add151, %38
  %39 = add nsw i64 %7, 16
  %arrayidx170 = getelementptr inbounds double* %grid, i64 %39
  %40 = load double* %arrayidx170, align 8, !tbaa !3
  %add171 = fadd double %add161, %40
  %41 = add nsw i64 %7, 17
  %arrayidx180 = getelementptr inbounds double* %grid, i64 %41
  %42 = load double* %arrayidx180, align 8, !tbaa !3
  %add181 = fadd double %add171, %42
  %43 = add nsw i64 %7, 18
  %arrayidx190 = getelementptr inbounds double* %grid, i64 %43
  %44 = load double* %arrayidx190, align 8, !tbaa !3
  %add191 = fadd double %add181, %44
  %conv = fptrunc double %add191 to float
  %sub = fsub double %14, %16
  %add219 = fadd double %sub, %22
  %sub229 = fsub double %add219, %24
  %add239 = fadd double %sub229, %26
  %sub249 = fsub double %add239, %28
  %add259 = fadd double %sub249, %38
  %add269 = fadd double %add259, %40
  %sub279 = fsub double %add269, %42
  %sub289 = fsub double %sub279, %44
  %conv290 = fptrunc double %sub289 to float
  %sub309 = fsub double %10, %12
  %add319 = fadd double %sub309, %22
  %add329 = fadd double %add319, %24
  %sub339 = fsub double %add329, %26
  %sub349 = fsub double %sub339, %28
  %add359 = fadd double %sub349, %30
  %add369 = fadd double %add359, %32
  %sub379 = fsub double %add369, %34
  %sub389 = fsub double %sub379, %36
  %conv390 = fptrunc double %sub389 to float
  %sub409 = fsub double %18, %20
  %add419 = fadd double %sub409, %30
  %sub429 = fsub double %add419, %32
  %add439 = fadd double %sub429, %34
  %sub449 = fsub double %add439, %36
  %add459 = fadd double %sub449, %38
  %sub469 = fsub double %add459, %40
  %add479 = fadd double %sub469, %42
  %sub489 = fsub double %add479, %44
  %conv490 = fptrunc double %sub489 to float
  %div = fdiv float %conv290, %conv
  store float %div, float* %ux, align 4, !tbaa !5
  %div491 = fdiv float %conv390, %conv
  store float %div491, float* %uy, align 4, !tbaa !5
  %div492 = fdiv float %conv490, %conv
  store float %div492, float* %uz, align 4, !tbaa !5
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %for.body6
  %call8.i = call i64 @fwrite(i8* %0, i64 4, i64 1, %struct._IO_FILE* %call) #4
  %call8.i712 = call i64 @fwrite(i8* %1, i64 4, i64 1, %struct._IO_FILE* %call) #4
  %call8.i713 = call i64 @fwrite(i8* %2, i64 4, i64 1, %struct._IO_FILE* %call) #4
  br label %for.inc

if.else:                                          ; preds = %for.body6
  %conv494 = fpext float %div to double
  %conv495 = fpext float %div491 to double
  %conv496 = fpext float %div492 to double
  %call497 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([10 x i8]* @.str5, i64 0, i64 0), double %conv494, double %conv495, double %conv496) #4
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 100
  br i1 %exitcond, label %for.inc498, label %for.body6

for.inc498:                                       ; preds = %for.inc
  %indvars.iv.next738 = add i64 %indvars.iv737, 1
  %lftr.wideiv741 = trunc i64 %indvars.iv.next738 to i32
  %exitcond742 = icmp eq i32 %lftr.wideiv741, 100
  br i1 %exitcond742, label %for.inc501, label %for.cond4.preheader

for.inc501:                                       ; preds = %for.inc498
  %indvars.iv.next744 = add i64 %indvars.iv743, 1
  %lftr.wideiv746 = trunc i64 %indvars.iv.next744 to i32
  %exitcond747 = icmp eq i32 %lftr.wideiv746, 130
  br i1 %exitcond747, label %for.end503, label %for.cond1.preheader

for.end503:                                       ; preds = %for.inc501
  %call504 = call i32 @fclose(%struct._IO_FILE* %call) #4
  ret void
}
