define void @_ZN11regboundobj10addtoboundER9flexarrayI6pointtEii(%class.regboundobj* nocapture readonly %this, %class.flexarray.1* nocapture dereferenceable(16) %barp, i32 %x, i32 %y) #0 align 2 {
  %1 = alloca %struct.pointt, align 4
  tail call void @llvm.dbg.value(metadata %class.regboundobj* %this, i64 0, metadata !404, metadata !511), !dbg !845
  tail call void @llvm.dbg.value(metadata %class.flexarray.1* %barp, i64 0, metadata !406, metadata !511), !dbg !846
  tail call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !407, metadata !511), !dbg !847
  tail call void @llvm.dbg.value(metadata i32 %y, i64 0, metadata !408, metadata !511), !dbg !848
  tail call void @llvm.dbg.value(metadata %class.regboundobj* %this, i64 0, metadata !457, metadata !511), !dbg !849
  tail call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !458, metadata !511), !dbg !852
  tail call void @llvm.dbg.value(metadata i32 %y, i64 0, metadata !459, metadata !511), !dbg !853
  %2 = getelementptr inbounds %class.regboundobj* %this, i64 0, i32 12, !dbg !854
  %3 = load i32* %2, align 4, !dbg !854, !tbaa !855
  %4 = mul nsw i32 %3, %y, !dbg !857
  %5 = add nsw i32 %4, %x, !dbg !858
  %6 = sext i32 %5 to i64, !dbg !859
  %7 = getelementptr inbounds %class.regboundobj* %this, i64 0, i32 11, !dbg !859
  %8 = load i8** %7, align 8, !dbg !859, !tbaa !860
  %9 = getelementptr inbounds i8* %8, i64 %6, !dbg !859
  %10 = load i8* %9, align 1, !dbg !859, !tbaa !537
  %11 = zext i8 %10 to i64, !dbg !861
  %12 = getelementptr inbounds %class.regboundobj* %this, i64 0, i32 16, !dbg !861
  %13 = load %class.regmngobj** %12, align 8, !dbg !861, !tbaa !862
  %14 = getelementptr inbounds %class.regmngobj* %13, i64 0, i32 8, i64 %11, !dbg !861
  %15 = load i8* %14, align 1, !dbg !861, !tbaa !539, !range !540
  %16 = icmp eq i8 %15, 0, !dbg !861
  br i1 %16, label %51, label %17, !dbg !863

; <label>:17                                      ; preds = %0
  %18 = getelementptr inbounds %class.regboundobj* %this, i64 0, i32 6, !dbg !864
  %19 = load i32* %18, align 4, !dbg !864, !tbaa !867
  %20 = sub nsw i32 %x, %19, !dbg !868
  tail call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !464, metadata !511), !dbg !869
  %21 = mul nsw i32 %20, %20, !dbg !871
  %22 = getelementptr inbounds %class.regboundobj* %this, i64 0, i32 7, !dbg !872
  %23 = load i32* %22, align 4, !dbg !872, !tbaa !873
  %24 = sub nsw i32 %y, %23, !dbg !874
  tail call void @llvm.dbg.value(metadata i32 %24, i64 0, metadata !464, metadata !511), !dbg !875
  %25 = mul nsw i32 %24, %24, !dbg !877
  %26 = add nuw nsw i32 %25, %21, !dbg !878
  %27 = sitofp i32 %26 to double, !dbg !879
  %28 = tail call double @round(double %27) #7, !dbg !880
  %29 = getelementptr inbounds %class.regboundobj* %this, i64 0, i32 9, !dbg !881
  %30 = load i32* %29, align 4, !dbg !881, !tbaa !882
  %31 = sitofp i32 %30 to double, !dbg !881
  %32 = fcmp ugt double %28, %31, !dbg !883
  br i1 %32, label %55, label %33, !dbg !884

; <label>:33                                      ; preds = %17
  tail call void @llvm.dbg.value(metadata %struct.pointt* %1, i64 0, metadata !447, metadata !511), !dbg !885
  tail call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !448, metadata !511), !dbg !888
  tail call void @llvm.dbg.value(metadata i32 %y, i64 0, metadata !449, metadata !511), !dbg !889
  tail call void @llvm.dbg.value(metadata %struct.pointt* %1, i64 0, metadata !452, metadata !511), !dbg !890
  tail call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !453, metadata !511), !dbg !892
  tail call void @llvm.dbg.value(metadata i32 %y, i64 0, metadata !454, metadata !511), !dbg !893
  %34 = getelementptr inbounds %struct.pointt* %1, i64 0, i32 0, !dbg !894
  store i32 %x, i32* %34, align 4, !dbg !895, !tbaa !568
  %35 = getelementptr inbounds %struct.pointt* %1, i64 0, i32 1, !dbg !896
  store i32 %y, i32* %35, align 4, !dbg !897, !tbaa !572
  call void @_ZN9flexarrayI6pointtE3addERKS0_(%class.flexarray.1* %barp, %struct.pointt* dereferenceable(8) %1) #5, !dbg !898
  %36 = getelementptr inbounds %class.regboundobj* %this, i64 0, i32 5, !dbg !899
  %37 = bitcast %class.regobj** %36 to i64*, !dbg !899
  %38 = load i64* %37, align 8, !dbg !899, !tbaa !900
  tail call void @llvm.dbg.value(metadata %class.regboundobj* %this, i64 0, metadata !467, metadata !511), !dbg !901
  tail call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !468, metadata !511), !dbg !903
  tail call void @llvm.dbg.value(metadata i32 %y, i64 0, metadata !469, metadata !511), !dbg !904
  %39 = load i32* %2, align 4, !dbg !905, !tbaa !855
  %40 = mul nsw i32 %39, %y, !dbg !906
  %41 = add nsw i32 %40, %x, !dbg !907
  %42 = sext i32 %41 to i64, !dbg !908
  %43 = getelementptr inbounds %class.regboundobj* %this, i64 0, i32 10, !dbg !908
  %44 = load %class.regobj*** %43, align 8, !dbg !908, !tbaa !909
  %45 = getelementptr inbounds %class.regobj** %44, i64 %42, !dbg !908
  %46 = bitcast %class.regobj** %45 to i64*, !dbg !910
  store i64 %38, i64* %46, align 8, !dbg !910, !tbaa !911
  %47 = load %class.regobj** %36, align 8, !dbg !912, !tbaa !900
  %48 = getelementptr inbounds %class.regobj* %47, i64 0, i32 4, !dbg !913
  %49 = load i32* %48, align 4, !dbg !914, !tbaa !915
  %50 = add nsw i32 %49, 1, !dbg !914
  store i32 %50, i32* %48, align 4, !dbg !914, !tbaa !915
  br label %55, !dbg !918

; <label>:51                                      ; preds = %0
  tail call void @llvm.dbg.value(metadata %class.regboundobj* %this, i64 0, metadata !467, metadata !511), !dbg !919
  tail call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !468, metadata !511), !dbg !921
  tail call void @llvm.dbg.value(metadata i32 %y, i64 0, metadata !469, metadata !511), !dbg !922
  %52 = getelementptr inbounds %class.regboundobj* %this, i64 0, i32 10, !dbg !923
  %53 = load %class.regobj*** %52, align 8, !dbg !923, !tbaa !909
  %54 = getelementptr inbounds %class.regobj** %53, i64 %6, !dbg !923
  store %class.regobj* null, %class.regobj** %54, align 8, !dbg !924, !tbaa !911
  br label %55

; <label>:55                                      ; preds = %17, %33, %51
  ret void, !dbg !925
}
