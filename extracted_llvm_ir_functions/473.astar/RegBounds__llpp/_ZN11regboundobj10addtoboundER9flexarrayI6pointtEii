define void @_ZN11regboundobj10addtoboundER9flexarrayI6pointtEii(%class.regboundobj* nocapture %this, %class.flexarray.1* nocapture %barp, i32 %x, i32 %y) #0 align 2 {
entry:
  %ref.tmp = alloca %struct.pointt, align 4
  call void @llvm.dbg.value(metadata !{%class.regboundobj* %this}, i64 0, metadata !408), !dbg !679
  call void @llvm.dbg.value(metadata !{%class.flexarray.1* %barp}, i64 0, metadata !410), !dbg !679
  call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !411), !dbg !679
  call void @llvm.dbg.value(metadata !{i32 %y}, i64 0, metadata !412), !dbg !679
  tail call void @llvm.dbg.value(metadata !{%class.regboundobj* %this}, i64 0, metadata !680), !dbg !682
  tail call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !683), !dbg !682
  tail call void @llvm.dbg.value(metadata !{i32 %y}, i64 0, metadata !684), !dbg !682
  %mapsizex.i = getelementptr inbounds %class.regboundobj* %this, i64 0, i32 11, !dbg !685
  %0 = load i32* %mapsizex.i, align 4, !dbg !685, !tbaa !522
  %mul.i = mul nsw i32 %0, %y, !dbg !685
  %add.i = add nsw i32 %mul.i, %x, !dbg !685
  %idxprom.i = sext i32 %add.i to i64, !dbg !685
  %landscapemapp.i = getelementptr inbounds %class.regboundobj* %this, i64 0, i32 10, !dbg !685
  %1 = load i8** %landscapemapp.i, align 8, !dbg !685, !tbaa !525
  %arrayidx.i = getelementptr inbounds i8* %1, i64 %idxprom.i, !dbg !685
  %2 = load i8* %arrayidx.i, align 1, !dbg !685, !tbaa !523
  %idxprom = zext i8 %2 to i64, !dbg !681
  %regmngp = getelementptr inbounds %class.regboundobj* %this, i64 0, i32 15, !dbg !681
  %3 = load %class.regmngobj** %regmngp, align 8, !dbg !681, !tbaa !525
  %arrayidx = getelementptr inbounds %class.regmngobj* %3, i64 0, i32 8, i64 %idxprom, !dbg !681
  %4 = load i8* %arrayidx, align 1, !dbg !681, !tbaa !526, !range !527
  %tobool = icmp eq i8 %4, 0, !dbg !681
  br i1 %tobool, label %if.else, label %if.then, !dbg !681

if.then:                                          ; preds = %entry
  %xc = getelementptr inbounds %class.regboundobj* %this, i64 0, i32 5, !dbg !687
  %5 = load i32* %xc, align 4, !dbg !687, !tbaa !522
  %sub = sub nsw i32 %x, %5, !dbg !687
  tail call void @llvm.dbg.value(metadata !{i32 %sub}, i64 0, metadata !689), !dbg !690
  %mul.i30 = mul nsw i32 %sub, %sub, !dbg !691
  %yc = getelementptr inbounds %class.regboundobj* %this, i64 0, i32 6, !dbg !693
  %6 = load i32* %yc, align 4, !dbg !693, !tbaa !522
  %sub3 = sub nsw i32 %y, %6, !dbg !693
  tail call void @llvm.dbg.value(metadata !{i32 %sub3}, i64 0, metadata !694), !dbg !695
  %mul.i31 = mul nsw i32 %sub3, %sub3, !dbg !696
  %add = add nsw i32 %mul.i31, %mul.i30, !dbg !693
  %conv = sitofp i32 %add to double, !dbg !693
  %call5 = call double @round(double %conv) #7, !dbg !693
  %regionradius2 = getelementptr inbounds %class.regboundobj* %this, i64 0, i32 8, !dbg !693
  %7 = load i32* %regionradius2, align 4, !dbg !693, !tbaa !522
  %conv6 = sitofp i32 %7 to double, !dbg !693
  %cmp = fcmp ugt double %call5, %conv6, !dbg !693
  br i1 %cmp, label %if.end11, label %if.then7, !dbg !693

if.then7:                                         ; preds = %if.then
  tail call void @llvm.dbg.value(metadata !{%struct.pointt* %ref.tmp}, i64 0, metadata !697), !dbg !700
  tail call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !701), !dbg !700
  tail call void @llvm.dbg.value(metadata !{i32 %y}, i64 0, metadata !702), !dbg !700
  tail call void @llvm.dbg.value(metadata !{%struct.pointt* %ref.tmp}, i64 0, metadata !703), !dbg !705
  tail call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !706), !dbg !705
  tail call void @llvm.dbg.value(metadata !{i32 %y}, i64 0, metadata !707), !dbg !705
  %x.i.i = getelementptr inbounds %struct.pointt* %ref.tmp, i64 0, i32 0, !dbg !708
  store i32 %x, i32* %x.i.i, align 4, !dbg !708, !tbaa !522
  %y.i.i = getelementptr inbounds %struct.pointt* %ref.tmp, i64 0, i32 1, !dbg !708
  store i32 %y, i32* %y.i.i, align 4, !dbg !708, !tbaa !522
  call void @_ZN9flexarrayI6pointtE3addERKS0_(%class.flexarray.1* %barp, %struct.pointt* %ref.tmp) #5, !dbg !698
  %regionp = getelementptr inbounds %class.regboundobj* %this, i64 0, i32 4, !dbg !709
  %8 = load %class.regobj** %regionp, align 8, !dbg !709, !tbaa !525
  tail call void @llvm.dbg.value(metadata !{%class.regboundobj* %this}, i64 0, metadata !710), !dbg !711
  tail call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !712), !dbg !711
  tail call void @llvm.dbg.value(metadata !{i32 %y}, i64 0, metadata !713), !dbg !711
  %9 = load i32* %mapsizex.i, align 4, !dbg !714, !tbaa !522
  %mul.i25 = mul nsw i32 %9, %y, !dbg !714
  %add.i26 = add nsw i32 %mul.i25, %x, !dbg !714
  %idxprom.i27 = sext i32 %add.i26 to i64, !dbg !714
  %regionmapp.i28 = getelementptr inbounds %class.regboundobj* %this, i64 0, i32 9, !dbg !714
  %10 = load %class.regobj*** %regionmapp.i28, align 8, !dbg !714, !tbaa !525
  %arrayidx.i29 = getelementptr inbounds %class.regobj** %10, i64 %idxprom.i27, !dbg !714
  store %class.regobj* %8, %class.regobj** %arrayidx.i29, align 8, !dbg !709, !tbaa !525
  %11 = load %class.regobj** %regionp, align 8, !dbg !716, !tbaa !525
  %square = getelementptr inbounds %class.regobj* %11, i64 0, i32 4, !dbg !716
  %12 = load i32* %square, align 4, !dbg !716, !tbaa !522
  %inc = add nsw i32 %12, 1, !dbg !716
  store i32 %inc, i32* %square, align 4, !dbg !716, !tbaa !522
  br label %if.end11, !dbg !717

if.else:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata !{%class.regboundobj* %this}, i64 0, metadata !718), !dbg !720
  tail call void @llvm.dbg.value(metadata !{i32 %x}, i64 0, metadata !721), !dbg !720
  tail call void @llvm.dbg.value(metadata !{i32 %y}, i64 0, metadata !722), !dbg !720
  %regionmapp.i = getelementptr inbounds %class.regboundobj* %this, i64 0, i32 9, !dbg !723
  %13 = load %class.regobj*** %regionmapp.i, align 8, !dbg !723, !tbaa !525
  %arrayidx.i23 = getelementptr inbounds %class.regobj** %13, i64 %idxprom.i, !dbg !723
  store %class.regobj* null, %class.regobj** %arrayidx.i23, align 8, !dbg !719, !tbaa !525
  br label %if.end11

if.end11:                                         ; preds = %if.then, %if.then7, %if.else
  ret void, !dbg !724
}
