define zeroext i1 @_ZN9regmngobj13findfreeplaceEiiRiS0_(%class.regmngobj* nocapture %this, i32 %x0, i32 %y0, i32* nocapture %xpl, i32* nocapture %ypl) #0 align 2 {
entry:
  %bound1arp = alloca %class.flexarray.1, align 8
  %bound2arp = alloca %class.flexarray.1, align 8
  call void @llvm.dbg.value(metadata !{%class.regmngobj* %this}, i64 0, metadata !341), !dbg !591
  call void @llvm.dbg.value(metadata !{i32 %x0}, i64 0, metadata !342), !dbg !591
  call void @llvm.dbg.value(metadata !{i32 %y0}, i64 0, metadata !343), !dbg !591
  call void @llvm.dbg.value(metadata !{i32* %xpl}, i64 0, metadata !344), !dbg !591
  call void @llvm.dbg.value(metadata !{i32* %ypl}, i64 0, metadata !345), !dbg !591
  call void @llvm.dbg.declare(metadata !{%class.flexarray.1* %bound1arp}, metadata !348), !dbg !592
  call void @llvm.dbg.declare(metadata !{%class.flexarray.1* %bound2arp}, metadata !349), !dbg !592
  %flfind = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 4, !dbg !593
  store i8 0, i8* %flfind, align 1, !dbg !593, !tbaa !526
  %fillnum = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 1, !dbg !594
  %0 = load i16* %fillnum, align 2, !dbg !594, !tbaa !548
  %inc = add i16 %0, 1, !dbg !594
  store i16 %inc, i16* %fillnum, align 2, !dbg !594, !tbaa !548
  %cmp = icmp eq i16 %inc, -1, !dbg !595
  br i1 %cmp, label %if.then, label %if.end, !dbg !595

if.then:                                          ; preds = %entry
  %mmapp = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 0, !dbg !596
  %1 = load i16** %mmapp, align 8, !dbg !596, !tbaa !525
  %2 = bitcast i16* %1 to i8*, !dbg !596
  %mapsizex = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 14, !dbg !596
  %3 = load i32* %mapsizex, align 4, !dbg !596, !tbaa !522
  %mapsizey = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 15, !dbg !596
  %4 = load i32* %mapsizey, align 4, !dbg !596, !tbaa !522
  %mul = mul nsw i32 %4, %3, !dbg !596
  %conv3 = sext i32 %mul to i64, !dbg !596
  %mul4 = shl nsw i64 %conv3, 1, !dbg !596
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 %mul4, i32 2, i1 false), !dbg !596
  store i16 1, i16* %fillnum, align 2, !dbg !598, !tbaa !548
  br label %if.end, !dbg !599

if.end:                                           ; preds = %if.then, %entry
  %5 = phi i16 [ 1, %if.then ], [ %inc, %entry ]
  store i32 -1, i32* %xpl, align 4, !dbg !600, !tbaa !522
  store i32 -1, i32* %ypl, align 4, !dbg !601, !tbaa !522
  %freepointx = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 2, !dbg !602
  store i32 -1, i32* %freepointx, align 4, !dbg !602, !tbaa !522
  %freepointy = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 3, !dbg !603
  store i32 -1, i32* %freepointy, align 4, !dbg !603, !tbaa !522
  call void @llvm.dbg.value(metadata !{%class.flexarray.1* %bound1arp}, i64 0, metadata !604) #2, !dbg !606
  call void @llvm.dbg.value(metadata !607, i64 0, metadata !608) #2, !dbg !606
  %maxelemqu.i = getelementptr inbounds %class.flexarray.1* %bound1arp, i64 0, i32 2, !dbg !609
  store i32 128, i32* %maxelemqu.i, align 4, !dbg !609, !tbaa !522
  %elemqu.i = getelementptr inbounds %class.flexarray.1* %bound1arp, i64 0, i32 1, !dbg !610
  store i32 0, i32* %elemqu.i, align 8, !dbg !610, !tbaa !522
  call void @llvm.dbg.value(metadata !611, i64 0, metadata !612) #2, !dbg !614
  call void @llvm.dbg.value(metadata !571, i64 0, metadata !615) #2, !dbg !614
  %call.i.i = call noalias i8* @malloc(i64 1024) #6, !dbg !616
  %6 = bitcast i8* %call.i.i to %struct.pointt*, !dbg !613
  %ep.i = getelementptr inbounds %class.flexarray.1* %bound1arp, i64 0, i32 0, !dbg !613
  store %struct.pointt* %6, %struct.pointt** %ep.i, align 8, !dbg !613, !tbaa !525
  call void @llvm.dbg.value(metadata !{%class.flexarray.1* %bound2arp}, i64 0, metadata !617) #2, !dbg !619
  call void @llvm.dbg.value(metadata !607, i64 0, metadata !620) #2, !dbg !619
  %maxelemqu.i100 = getelementptr inbounds %class.flexarray.1* %bound2arp, i64 0, i32 2, !dbg !621
  store i32 128, i32* %maxelemqu.i100, align 4, !dbg !621, !tbaa !522
  %elemqu.i101 = getelementptr inbounds %class.flexarray.1* %bound2arp, i64 0, i32 1, !dbg !622
  store i32 0, i32* %elemqu.i101, align 8, !dbg !622, !tbaa !522
  call void @llvm.dbg.value(metadata !611, i64 0, metadata !623) #2, !dbg !625
  call void @llvm.dbg.value(metadata !571, i64 0, metadata !626) #2, !dbg !625
  %call.i.i102 = call noalias i8* @malloc(i64 1024) #6, !dbg !627
  %7 = bitcast i8* %call.i.i102 to %struct.pointt*, !dbg !624
  %ep.i103 = getelementptr inbounds %class.flexarray.1* %bound2arp, i64 0, i32 0, !dbg !624
  store %struct.pointt* %7, %struct.pointt** %ep.i103, align 8, !dbg !624, !tbaa !525
  %8 = or i32 %y0, %x0, !dbg !628
  %9 = icmp sgt i32 %8, -1, !dbg !628
  %mapmaxx = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 12, !dbg !628
  br i1 %9, label %land.lhs.true8, label %if.end22, !dbg !628

land.lhs.true8:                                   ; preds = %if.end
  %10 = load i32* %mapmaxx, align 4, !dbg !628, !tbaa !522
  %cmp9 = icmp slt i32 %10, %x0, !dbg !628
  br i1 %cmp9, label %if.end22, label %land.lhs.true10, !dbg !628

land.lhs.true10:                                  ; preds = %land.lhs.true8
  %mapmaxy = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 13, !dbg !628
  %11 = load i32* %mapmaxy, align 4, !dbg !628, !tbaa !522
  %cmp11 = icmp slt i32 %11, %y0, !dbg !628
  br i1 %cmp11, label %if.end22, label %if.then12, !dbg !628

if.then12:                                        ; preds = %land.lhs.true10
  %mapsizex13 = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 14, !dbg !629
  %12 = load i32* %mapsizex13, align 4, !dbg !629, !tbaa !522
  %mul14 = mul nsw i32 %12, %y0, !dbg !629
  %add = add nsw i32 %mul14, %x0, !dbg !629
  %idxprom = sext i32 %add to i64, !dbg !629
  %mmapp15 = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 0, !dbg !629
  %13 = load i16** %mmapp15, align 8, !dbg !629, !tbaa !525
  %arrayidx = getelementptr inbounds i16* %13, i64 %idxprom, !dbg !629
  %14 = load i16* %arrayidx, align 2, !dbg !629, !tbaa !548
  %cmp19 = icmp eq i16 %14, %5, !dbg !629
  br i1 %cmp19, label %if.end22, label %if.then20, !dbg !629

if.then20:                                        ; preds = %if.then12
  call void @_ZN9regmngobj10addtoboundER9flexarrayI6pointtEii(%class.regmngobj* %this, %class.flexarray.1* %bound1arp, i32 %x0, i32 %y0) #5, !dbg !630
  br label %if.end22, !dbg !630

if.end22:                                         ; preds = %if.end, %land.lhs.true8, %if.then12, %land.lhs.true10, %if.then20
  %sub = add nsw i32 %x0, -1, !dbg !631
  call void @llvm.dbg.value(metadata !{i32 %sub}, i64 0, metadata !353), !dbg !631
  %sub23 = add nsw i32 %y0, -1, !dbg !632
  call void @llvm.dbg.value(metadata !{i32 %sub23}, i64 0, metadata !354), !dbg !632
  %add24 = add nsw i32 %x0, 1, !dbg !633
  call void @llvm.dbg.value(metadata !{i32 %add24}, i64 0, metadata !355), !dbg !633
  %add25 = add nsw i32 %y0, 1, !dbg !634
  call void @llvm.dbg.value(metadata !{i32 %add25}, i64 0, metadata !356), !dbg !634
  %cmp26 = icmp slt i32 %x0, 1, !dbg !635
  call void @llvm.dbg.value(metadata !2, i64 0, metadata !353), !dbg !635
  %.sub = select i1 %cmp26, i32 0, i32 %sub, !dbg !635
  %cmp29 = icmp slt i32 %y0, 1, !dbg !636
  call void @llvm.dbg.value(metadata !2, i64 0, metadata !354), !dbg !636
  %y1.0 = select i1 %cmp29, i32 0, i32 %sub23, !dbg !636
  %15 = load i32* %mapmaxx, align 4, !dbg !637, !tbaa !522
  %cmp33 = icmp sgt i32 %15, %x0, !dbg !637
  call void @llvm.dbg.value(metadata !{i32 %15}, i64 0, metadata !355), !dbg !637
  %add24. = select i1 %cmp33, i32 %add24, i32 %15, !dbg !637
  %mapmaxy37 = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 13, !dbg !638
  %16 = load i32* %mapmaxy37, align 4, !dbg !638, !tbaa !522
  %cmp38 = icmp sgt i32 %16, %y0, !dbg !638
  call void @llvm.dbg.value(metadata !{i32 %16}, i64 0, metadata !356), !dbg !638
  %y2.0 = select i1 %cmp38, i32 %add25, i32 %16, !dbg !638
  %cmp42110 = icmp sgt i32 %y1.0, %y2.0, !dbg !639
  br i1 %cmp42110, label %for.end61, label %for.cond43.preheader.lr.ph, !dbg !639

for.cond43.preheader.lr.ph:                       ; preds = %if.end22
  %cmp44108 = icmp sgt i32 %.sub, %add24., !dbg !641
  %mapsizex46 = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 14, !dbg !643
  %mmapp50 = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 0, !dbg !643
  br label %for.cond43.preheader, !dbg !639

for.cond43.preheader:                             ; preds = %for.inc59, %for.cond43.preheader.lr.ph
  %y.0111 = phi i32 [ %y1.0, %for.cond43.preheader.lr.ph ], [ %inc60, %for.inc59 ]
  br i1 %cmp44108, label %for.inc59, label %for.body45, !dbg !641

for.body45:                                       ; preds = %for.cond43.preheader, %for.inc.for.body45_crit_edge
  %x.0109 = phi i32 [ %inc58, %for.inc.for.body45_crit_edge ], [ %.sub, %for.cond43.preheader ]
  %17 = load i32* %mapsizex46, align 4, !dbg !643, !tbaa !522
  %mul47 = mul nsw i32 %17, %y.0111, !dbg !643
  %add48 = add nsw i32 %mul47, %x.0109, !dbg !643
  %idxprom49 = sext i32 %add48 to i64, !dbg !643
  %18 = load i16** %mmapp50, align 8, !dbg !643, !tbaa !525
  %arrayidx51 = getelementptr inbounds i16* %18, i64 %idxprom49, !dbg !643
  %19 = load i16* %arrayidx51, align 2, !dbg !643, !tbaa !548
  %20 = load i16* %fillnum, align 2, !dbg !643, !tbaa !548
  %cmp55 = icmp eq i16 %19, %20, !dbg !643
  br i1 %cmp55, label %for.inc, label %if.then56, !dbg !643

if.then56:                                        ; preds = %for.body45
  call void @_ZN9regmngobj10addtoboundER9flexarrayI6pointtEii(%class.regmngobj* %this, %class.flexarray.1* %bound1arp, i32 %x.0109, i32 %y.0111) #5, !dbg !644
  br label %for.inc, !dbg !644

for.inc:                                          ; preds = %for.body45, %if.then56
  call void @llvm.dbg.value(metadata !{i32 %inc58}, i64 0, metadata !346), !dbg !641
  %cmp44 = icmp slt i32 %x.0109, %add24., !dbg !641
  br i1 %cmp44, label %for.inc.for.body45_crit_edge, label %for.inc59, !dbg !641

for.inc.for.body45_crit_edge:                     ; preds = %for.inc
  %inc58 = add nsw i32 %x.0109, 1, !dbg !641
  br label %for.body45, !dbg !641

for.inc59:                                        ; preds = %for.inc, %for.cond43.preheader
  %inc60 = add nsw i32 %y.0111, 1, !dbg !639
  call void @llvm.dbg.value(metadata !{i32 %inc60}, i64 0, metadata !347), !dbg !639
  %cmp42 = icmp slt i32 %y.0111, %y2.0, !dbg !639
  br i1 %cmp42, label %for.cond43.preheader, label %for.end61, !dbg !639

for.end61:                                        ; preds = %for.inc59, %if.end22
  %21 = load i32* %elemqu.i, align 8, !dbg !645, !tbaa !522
  call void @llvm.dbg.value(metadata !{i32 %21}, i64 0, metadata !350), !dbg !645
  call void @llvm.dbg.value(metadata !646, i64 0, metadata !351), !dbg !647
  %cmp62106 = icmp eq i32 %21, 0, !dbg !648
  br i1 %cmp62106, label %while.end, label %land.rhs, !dbg !648

land.rhs:                                         ; preds = %while.cond.backedge, %for.end61
  %flodd.0107 = phi i1 [ false, %for.end61 ], [ %flodd.0.be, %while.cond.backedge ]
  %22 = load i8* %flfind, align 1, !dbg !648, !tbaa !526, !range !527
  %cmp65 = icmp eq i8 %22, 0, !dbg !648
  br i1 %cmp65, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  br i1 %flodd.0107, label %if.else, label %if.then69, !dbg !649

if.then69:                                        ; preds = %while.body
  call void @_ZN9regmngobj10makebound2ER9flexarrayI6pointtES3_(%class.regmngobj* %this, %class.flexarray.1* %bound1arp, %class.flexarray.1* %bound2arp) #5, !dbg !651
  %23 = load i32* %elemqu.i101, align 8, !dbg !653, !tbaa !522
  call void @llvm.dbg.value(metadata !{i32 %23}, i64 0, metadata !350), !dbg !653
  call void @llvm.dbg.value(metadata !654, i64 0, metadata !352), !dbg !655
  br label %while.cond.backedge, !dbg !656

if.else:                                          ; preds = %while.body
  call void @_ZN9regmngobj10makebound2ER9flexarrayI6pointtES3_(%class.regmngobj* %this, %class.flexarray.1* %bound2arp, %class.flexarray.1* %bound1arp) #5, !dbg !657
  %24 = load i32* %elemqu.i, align 8, !dbg !659, !tbaa !522
  call void @llvm.dbg.value(metadata !{i32 %24}, i64 0, metadata !350), !dbg !659
  call void @llvm.dbg.value(metadata !646, i64 0, metadata !352), !dbg !660
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.else, %if.then69
  %boundl.0.be = phi i32 [ %23, %if.then69 ], [ %24, %if.else ]
  %flodd.0.be = phi i1 [ true, %if.then69 ], [ false, %if.else ]
  %cmp62 = icmp eq i32 %boundl.0.be, 0, !dbg !648
  br i1 %cmp62, label %while.end, label %land.rhs, !dbg !648

while.end:                                        ; preds = %while.cond.backedge, %land.rhs, %for.end61
  call void @llvm.dbg.value(metadata !{%class.flexarray.1* %bound1arp}, i64 0, metadata !661) #2, !dbg !663
  %25 = load %struct.pointt** %ep.i, align 8, !dbg !664, !tbaa !525
  %26 = bitcast %struct.pointt* %25 to i8*, !dbg !664
  call void @llvm.dbg.value(metadata !{i8* %26}, i64 0, metadata !666) #2, !dbg !667
  call void @free(i8* %26) #6, !dbg !668
  call void @llvm.dbg.value(metadata !{%class.flexarray.1* %bound2arp}, i64 0, metadata !669) #2, !dbg !671
  %27 = load %struct.pointt** %ep.i103, align 8, !dbg !672, !tbaa !525
  %28 = bitcast %struct.pointt* %27 to i8*, !dbg !672
  call void @llvm.dbg.value(metadata !{i8* %28}, i64 0, metadata !673) #2, !dbg !674
  call void @free(i8* %28) #6, !dbg !675
  %29 = load i32* %freepointx, align 4, !dbg !676, !tbaa !522
  store i32 %29, i32* %xpl, align 4, !dbg !676, !tbaa !522
  %30 = load i32* %freepointy, align 4, !dbg !677, !tbaa !522
  store i32 %30, i32* %ypl, align 4, !dbg !677, !tbaa !522
  %31 = load i8* %flfind, align 1, !dbg !678, !tbaa !526, !range !527
  %tobool77 = icmp ne i8 %31, 0, !dbg !678
  ret i1 %tobool77, !dbg !678
}
