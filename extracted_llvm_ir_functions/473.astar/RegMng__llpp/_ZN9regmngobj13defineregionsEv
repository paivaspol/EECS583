define void @_ZN9regmngobj13defineregionsEv(%class.regmngobj* %this) #2 align 2 {
entry:
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %rboundarp = alloca %class.flexarray.1, align 8
  %regionp = alloca %class.regobj*, align 8
  call void @llvm.dbg.value(metadata !{%class.regmngobj* %this}, i64 0, metadata !439), !dbg !995
  call void @llvm.dbg.declare(metadata !{i32* %x}, metadata !441), !dbg !996
  call void @llvm.dbg.declare(metadata !{i32* %y}, metadata !442), !dbg !996
  call void @llvm.dbg.declare(metadata !{%class.flexarray.1* %rboundarp}, metadata !445), !dbg !997
  call void @llvm.dbg.declare(metadata !{%class.regobj** %regionp}, metadata !554), !dbg !998
  call void @llvm.dbg.value(metadata !{%class.flexarray.1* %rboundarp}, i64 0, metadata !999) #5, !dbg !1001
  call void @llvm.dbg.value(metadata !933, i64 0, metadata !1002) #5, !dbg !1001
  %maxelemqu.i = getelementptr inbounds %class.flexarray.1* %rboundarp, i64 0, i32 2, !dbg !1003
  store i32 16, i32* %maxelemqu.i, align 4, !dbg !1003, !tbaa !781
  %elemqu.i = getelementptr inbounds %class.flexarray.1* %rboundarp, i64 0, i32 1, !dbg !1004
  store i32 0, i32* %elemqu.i, align 8, !dbg !1004, !tbaa !781
  call void @llvm.dbg.value(metadata !1005, i64 0, metadata !1006) #5, !dbg !1008
  call void @llvm.dbg.value(metadata !796, i64 0, metadata !1009) #5, !dbg !1008
  %call.i.i = call noalias i8* @malloc(i64 1792) #8, !dbg !1010
  %0 = bitcast i8* %call.i.i to %class.regboundobj*, !dbg !1007
  %ep.i = getelementptr inbounds %class.flexarray.1* %rboundarp, i64 0, i32 0, !dbg !1007
  store %class.regboundobj* %0, %class.regboundobj** %ep.i, align 8, !dbg !1007, !tbaa !777
  %mapmaxx = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 12, !dbg !1011
  %1 = load i32* %mapmaxx, align 4, !dbg !1011, !tbaa !781
  %conv = sitofp i32 %1 to float, !dbg !1011
  %div = fdiv float %conv, 6.200000e+02, !dbg !1011
  %mul = fmul float %div, 3.400000e+01, !dbg !1011
  %radiuscoef = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 11, !dbg !1011
  %2 = load float* %radiuscoef, align 4, !dbg !1011, !tbaa !1012
  %div2 = fdiv float %mul, %2, !dbg !1011
  %roundf = call float @roundf(float %div2) #6, !dbg !1011
  %conv4 = fptosi float %roundf to i32, !dbg !1011
  call void @llvm.dbg.value(metadata !{i32 %conv4}, i64 0, metadata !547), !dbg !1011
  %mapmaxy = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 13, !dbg !1013
  %3 = load i32* %mapmaxy, align 4, !dbg !1013, !tbaa !781
  %conv5 = sitofp i32 %3 to float, !dbg !1013
  %div6 = fdiv float %conv5, 3.090000e+02, !dbg !1013
  %mul7 = fmul float %div6, 2.000000e+01, !dbg !1013
  %div9 = fdiv float %mul7, %2, !dbg !1013
  %roundf119 = call float @roundf(float %div9) #6, !dbg !1013
  %conv12 = fptosi float %roundf119 to i32, !dbg !1013
  call void @llvm.dbg.value(metadata !{i32 %conv12}, i64 0, metadata !548), !dbg !1013
  %add = add nsw i32 %1, 1, !dbg !1014
  %conv14 = sitofp i32 %add to float, !dbg !1014
  %conv15 = sitofp i32 %conv4 to float, !dbg !1014
  %div16 = fdiv float %conv14, %conv15, !dbg !1014
  %roundf120 = call float @roundf(float %div16) #6, !dbg !1014
  %conv19 = fptosi float %roundf120 to i32, !dbg !1014
  call void @llvm.dbg.value(metadata !{i32 %conv19}, i64 0, metadata !552), !dbg !1014
  %add21 = add nsw i32 %3, 1, !dbg !1015
  %conv22 = sitofp i32 %add21 to float, !dbg !1015
  %conv23 = sitofp i32 %conv12 to float, !dbg !1015
  %div24 = fdiv float %conv22, %conv23, !dbg !1015
  %conv25 = fpext float %div24 to double, !dbg !1015
  %mul27 = fmul double %conv25, 0x3FFBB67AE8584CAA, !dbg !1015
  %div28 = fmul double %mul27, 5.000000e-01, !dbg !1015
  %call29 = call double @round(double %div28) #9, !dbg !1015
  %conv30 = fptosi double %call29 to i32, !dbg !1015
  call void @llvm.dbg.value(metadata !{i32 %conv30}, i64 0, metadata !553), !dbg !1015
  call void @llvm.dbg.value(metadata !2, i64 0, metadata !550), !dbg !1016
  call void @llvm.dbg.value(metadata !2, i64 0, metadata !551), !dbg !1017
  %div36 = sdiv i32 %conv30, 2, !dbg !1018
  %mapsizex.i = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 14, !dbg !1020
  %regionmapp.i = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 6, !dbg !1020
  %rarp = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 16, !dbg !1022
  %sub = add nsw i32 %conv4, -1, !dbg !1023
  %mul71 = fmul float %conv23, 2.000000e+00, !dbg !1025
  %conv72 = fpext float %mul71 to double, !dbg !1025
  %div74 = fdiv double %conv72, 0x3FFBB67AE8584CAA, !dbg !1025
  %div33 = sdiv i32 %conv19, 2, !dbg !1026
  br label %do.body, !dbg !1027

do.body:                                          ; preds = %do.cond, %entry
  %i2.0 = phi i32 [ 0, %entry ], [ %i2.1, %do.cond ]
  %i1.0 = phi i32 [ 0, %entry ], [ %.add55121, %do.cond ]
  %and = and i32 %i2.0, 1, !dbg !1028
  %tobool = icmp ne i32 %and, 0, !dbg !1028
  %mul31 = mul nsw i32 %i1.0, %conv19, !dbg !1029
  %xx.0.v = select i1 %tobool, i32 %conv19, i32 %div33, !dbg !1028
  %xx.0 = add i32 %mul31, %xx.0.v, !dbg !1028
  %mul37 = mul nsw i32 %i2.0, %conv30, !dbg !1018
  %add38 = add nsw i32 %div36, %mul37, !dbg !1018
  call void @llvm.dbg.value(metadata !{i32 %add38}, i64 0, metadata !444), !dbg !1018
  %call39 = call zeroext i1 @_ZN9regmngobj13findfreeplaceEiiRiS0_(%class.regmngobj* %this, i32 %xx.0, i32 %add38, i32* %x, i32* %y) #7, !dbg !1030
  br i1 %call39, label %if.else42, label %next, !dbg !1030

if.else42:                                        ; preds = %do.body
  call void @llvm.dbg.value(metadata !{i32* %x}, i64 0, metadata !441), !dbg !1021
  %4 = load i32* %x, align 4, !dbg !1021, !tbaa !781
  call void @llvm.dbg.value(metadata !{i32* %y}, i64 0, metadata !442), !dbg !1021
  %5 = load i32* %y, align 4, !dbg !1021, !tbaa !781
  tail call void @llvm.dbg.value(metadata !{%class.regmngobj* %this}, i64 0, metadata !1031), !dbg !1020
  tail call void @llvm.dbg.value(metadata !{i32 %4}, i64 0, metadata !1032), !dbg !1020
  tail call void @llvm.dbg.value(metadata !{i32 %5}, i64 0, metadata !1033), !dbg !1020
  %6 = load i32* %mapsizex.i, align 4, !dbg !1020, !tbaa !781
  %mul.i = mul nsw i32 %6, %5, !dbg !1020
  %add.i = add nsw i32 %mul.i, %4, !dbg !1020
  %idxprom.i = sext i32 %add.i to i64, !dbg !1020
  %7 = load %class.regobj*** %regionmapp.i, align 8, !dbg !1020, !tbaa !777
  %arrayidx.i = getelementptr inbounds %class.regobj** %7, i64 %idxprom.i, !dbg !1020
  %8 = load %class.regobj** %arrayidx.i, align 8, !dbg !1021, !tbaa !777
  %tobool44 = icmp eq %class.regobj* %8, null, !dbg !1021
  br i1 %tobool44, label %invoke.cont, label %next, !dbg !1021

invoke.cont:                                      ; preds = %if.else42
  %call48 = call noalias i8* @_Znwm(i64 56) #7, !dbg !1034
  %9 = bitcast i8* %call48 to %class.regobj*, !dbg !1034
  tail call void @llvm.dbg.value(metadata !{%class.regobj* %9}, i64 0, metadata !1035), !dbg !1036
  tail call void @llvm.dbg.value(metadata !{%class.regmngobj* %this}, i64 0, metadata !1037), !dbg !1036
  tail call void @llvm.dbg.value(metadata !{%class.regobj* %9}, i64 0, metadata !1038), !dbg !1039
  tail call void @llvm.dbg.value(metadata !{%class.regmngobj* %this}, i64 0, metadata !1040), !dbg !1039
  %regmngp.i.i = getelementptr inbounds i8* %call48, i64 8, !dbg !1041
  %10 = bitcast i8* %regmngp.i.i to %class.regmngobj**, !dbg !1041
  store %class.regmngobj* %this, %class.regmngobj** %10, align 8, !dbg !1041, !tbaa !777
  call void @llvm.dbg.value(metadata !{%class.regobj* %9}, i64 0, metadata !554), !dbg !1034
  store %class.regobj* %9, %class.regobj** %regionp, align 8, !dbg !1034, !tbaa !777
  %call49 = call i32 @_ZN15largesolidarrayIP6regobjE3addERKS1_(%class.largesolidarray* %rarp, %class.regobj** %regionp) #7, !dbg !1022
  call void @llvm.dbg.value(metadata !{%class.regobj** %regionp}, i64 0, metadata !554), !dbg !1022
  %11 = load %class.regobj** %regionp, align 8, !dbg !1022, !tbaa !777
  %internalnum = getelementptr inbounds %class.regobj* %11, i64 0, i32 0, !dbg !1022
  store i32 %call49, i32* %internalnum, align 4, !dbg !1022, !tbaa !781
  call void @llvm.dbg.value(metadata !{%class.regobj** %regionp}, i64 0, metadata !554), !dbg !1042
  call void @_ZN6regobj6createEv(%class.regobj* %11) #7, !dbg !1042
  call void @llvm.dbg.value(metadata !{%class.regobj** %regionp}, i64 0, metadata !554), !dbg !1043
  %flexist = getelementptr inbounds %class.regobj* %11, i64 0, i32 1, !dbg !1043
  store i8 1, i8* %flexist, align 1, !dbg !1043, !tbaa !875
  call void @llvm.dbg.value(metadata !{i32* %x}, i64 0, metadata !441), !dbg !1044
  %12 = load i32* %x, align 4, !dbg !1044, !tbaa !781
  call void @llvm.dbg.value(metadata !{%class.regobj** %regionp}, i64 0, metadata !554), !dbg !1044
  %x50 = getelementptr inbounds %class.regobj* %11, i64 0, i32 5, i32 0, !dbg !1044
  store i32 %12, i32* %x50, align 4, !dbg !1044, !tbaa !781
  call void @llvm.dbg.value(metadata !{i32* %y}, i64 0, metadata !442), !dbg !1045
  %13 = load i32* %y, align 4, !dbg !1045, !tbaa !781
  call void @llvm.dbg.value(metadata !{%class.regobj** %regionp}, i64 0, metadata !554), !dbg !1045
  %y52 = getelementptr inbounds %class.regobj* %11, i64 0, i32 5, i32 1, !dbg !1045
  store i32 %13, i32* %y52, align 4, !dbg !1045, !tbaa !781
  %call53 = call %class.regboundobj* @_ZN9flexarrayI11regboundobjE3addEv(%class.flexarray.1* %rboundarp) #7, !dbg !1046
  call void @llvm.dbg.value(metadata !{%class.regboundobj* %call53}, i64 0, metadata !555), !dbg !1046
  %flexist54 = getelementptr inbounds %class.regboundobj* %call53, i64 0, i32 16, !dbg !1047
  store i8 1, i8* %flexist54, align 1, !dbg !1047, !tbaa !875
  call void @llvm.dbg.value(metadata !{i32* %x}, i64 0, metadata !441), !dbg !1048
  %14 = load i32* %x, align 4, !dbg !1048, !tbaa !781
  call void @llvm.dbg.value(metadata !{i32* %y}, i64 0, metadata !442), !dbg !1048
  %15 = load i32* %y, align 4, !dbg !1048, !tbaa !781
  call void @llvm.dbg.value(metadata !{%class.regobj** %regionp}, i64 0, metadata !554), !dbg !1048
  call void @_ZN11regboundobj9firststepEiiP6regobjP9regmngobj(%class.regboundobj* %call53, i32 %14, i32 %15, %class.regobj* %11, %class.regmngobj* %this) #7, !dbg !1048
  br label %next, !dbg !1048

next:                                             ; preds = %if.else42, %do.body, %invoke.cont
  %add55 = add nsw i32 %i1.0, 1, !dbg !1049
  call void @llvm.dbg.value(metadata !{i32 %add55}, i64 0, metadata !550), !dbg !1049
  br i1 %tobool, label %if.then58, label %if.else63, !dbg !1050

if.then58:                                        ; preds = %next
  %cmp59 = icmp eq i32 %add55, %sub, !dbg !1023
  call void @llvm.dbg.value(metadata !2, i64 0, metadata !550), !dbg !1051
  %add61 = zext i1 %cmp59 to i32, !dbg !1023
  br label %do.cond, !dbg !1023

if.else63:                                        ; preds = %next
  %cmp64 = icmp eq i32 %add55, %conv4, !dbg !1053
  call void @llvm.dbg.value(metadata !2, i64 0, metadata !550), !dbg !1055
  %add66 = zext i1 %cmp64 to i32, !dbg !1053
  br label %do.cond, !dbg !1053

do.cond:                                          ; preds = %if.else63, %if.then58
  %cmp64.sink = phi i1 [ %cmp64, %if.else63 ], [ %cmp59, %if.then58 ]
  %add66.pn = phi i32 [ %add66, %if.else63 ], [ %add61, %if.then58 ]
  %i2.1 = add nsw i32 %add66.pn, %i2.0, !dbg !1053
  %.add55121 = select i1 %cmp64.sink, i32 0, i32 %add55, !dbg !1053
  %conv69 = sitofp i32 %i2.1 to double, !dbg !1057
  %call75 = call double @round(double %div74) #9, !dbg !1025
  %add76 = fadd double %call75, 3.000000e+00, !dbg !1025
  %cmp77 = fcmp olt double %conv69, %add76, !dbg !1025
  br i1 %cmp77, label %do.body, label %for.cond.preheader, !dbg !1025

for.cond.preheader:                               ; preds = %do.cond
  %16 = load i32* %elemqu.i, align 8, !dbg !1058, !tbaa !781
  %17 = load %class.regboundobj** %ep.i, align 8, !dbg !1061, !tbaa !777
  br label %for.cond, !dbg !1058

for.cond:                                         ; preds = %do.cond86, %for.body, %for.cond.preheader
  %fldone.0 = phi i8 [ 1, %for.cond.preheader ], [ %.fldone.0, %for.body ], [ 1, %do.cond86 ]
  %i.0 = phi i32 [ 0, %for.cond.preheader ], [ %inc, %for.body ], [ 0, %do.cond86 ]
  %cmp79 = icmp slt i32 %i.0, %16, !dbg !1058
  br i1 %cmp79, label %for.body, label %do.cond86, !dbg !1058

for.body:                                         ; preds = %for.cond
  tail call void @llvm.dbg.value(metadata !{%class.flexarray.1* %rboundarp}, i64 0, metadata !1063), !dbg !1064
  tail call void @llvm.dbg.value(metadata !{i32 %i.0}, i64 0, metadata !1065), !dbg !1064
  %idxprom.i126 = sext i32 %i.0 to i64, !dbg !1061
  %arrayidx.i128 = getelementptr inbounds %class.regboundobj* %17, i64 %idxprom.i126, !dbg !1061
  %call81 = call zeroext i1 @_ZN11regboundobj4stepEv(%class.regboundobj* %arrayidx.i128) #7, !dbg !1062
  call void @llvm.dbg.value(metadata !1066, i64 0, metadata !549), !dbg !1067
  %.fldone.0 = select i1 %call81, i8 0, i8 %fldone.0, !dbg !1062
  %inc = add nsw i32 %i.0, 1, !dbg !1058
  call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !440), !dbg !1058
  br label %for.cond, !dbg !1058

do.cond86:                                        ; preds = %for.cond
  %18 = and i8 %fldone.0, 1, !dbg !1068
  %cmp89 = icmp eq i8 %18, 0, !dbg !1068
  br i1 %cmp89, label %for.cond, label %for.cond91.preheader, !dbg !1068

for.cond91.preheader:                             ; preds = %do.cond86
  %cmp93129 = icmp sgt i32 %16, 0, !dbg !1069
  br i1 %cmp93129, label %for.body94, label %for.end98, !dbg !1069

for.body94:                                       ; preds = %for.cond91.preheader, %for.body94
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body94 ], [ 0, %for.cond91.preheader ]
  tail call void @llvm.dbg.value(metadata !{%class.flexarray.1* %rboundarp}, i64 0, metadata !1071), !dbg !1073
  tail call void @llvm.dbg.value(metadata !796, i64 0, metadata !1074), !dbg !1073
  %arrayidx.i125 = getelementptr inbounds %class.regboundobj* %17, i64 %indvars.iv, !dbg !1075
  call void @_ZN11regboundobj7destroyEv(%class.regboundobj* %arrayidx.i125) #7, !dbg !1072
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1069
  %19 = trunc i64 %indvars.iv.next to i32, !dbg !1069
  %cmp93 = icmp slt i32 %19, %16, !dbg !1069
  br i1 %cmp93, label %for.body94, label %for.end98, !dbg !1069

for.end98:                                        ; preds = %for.body94, %for.cond91.preheader
  call void @llvm.dbg.value(metadata !{%class.flexarray.1* %rboundarp}, i64 0, metadata !1076) #5, !dbg !1078
  %20 = bitcast %class.regboundobj* %17 to i8*, !dbg !1079
  call void @llvm.dbg.value(metadata !{i8* %20}, i64 0, metadata !1080) #5, !dbg !1081
  call void @free(i8* %20) #8, !dbg !1082
  ret void, !dbg !1083
}
