define void @_ZN9regmngobj14enlargeregionsEv(%class.regmngobj* %this) #2 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%class.regmngobj* %this}, i64 0, metadata !577), !dbg !1188
  %radiuscoef = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 11, !dbg !1189
  %0 = load float* %radiuscoef, align 4, !dbg !1189, !tbaa !1012
  %conv = fpext float %0 to double, !dbg !1189
  %mul = fmul double %conv, 1.070000e+02, !dbg !1189
  %mul4 = fmul double %conv, %mul, !dbg !1189
  %conv5 = fptosi double %mul4 to i32, !dbg !1189
  tail call void @llvm.dbg.value(metadata !{i32 %conv5}, i64 0, metadata !579), !dbg !1189
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !578), !dbg !1190
  %rarp = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 16, !dbg !1190
  %elemqu = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 16, i32 4, !dbg !1190
  %1 = load i32* %elemqu, align 4, !dbg !1190, !tbaa !781
  %cmp44 = icmp sgt i32 %1, 0, !dbg !1190
  br i1 %cmp44, label %for.body.lr.ph, label %for.end22, !dbg !1190

for.body.lr.ph:                                   ; preds = %entry
  %ep.i = getelementptr inbounds %class.largesolidarray* %rarp, i64 0, i32 0, !dbg !1192
  %2 = load %class.regobj*** %ep.i, align 8, !dbg !1192, !tbaa !777
  br label %for.body, !dbg !1190

for.cond7.preheader:                              ; preds = %for.body
  br i1 %cmp44, label %for.body11.lr.ph, label %for.end22, !dbg !1194

for.body11.lr.ph:                                 ; preds = %for.cond7.preheader
  %ep.i34 = getelementptr inbounds %class.largesolidarray* %rarp, i64 0, i32 0, !dbg !1196
  %3 = load %class.regobj*** %ep.i34, align 8, !dbg !1196, !tbaa !777
  br label %for.body11, !dbg !1194

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv47 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next48, %for.body ]
  tail call void @llvm.dbg.value(metadata !{%class.largesolidarray* %rarp}, i64 0, metadata !1198), !dbg !1199
  tail call void @llvm.dbg.value(metadata !796, i64 0, metadata !1200), !dbg !1199
  %arrayidx.i = getelementptr inbounds %class.regobj** %2, i64 %indvars.iv47, !dbg !1192
  %4 = load %class.regobj** %arrayidx.i, align 8, !dbg !1193, !tbaa !777
  %flredefine = getelementptr inbounds %class.regobj* %4, i64 0, i32 2, !dbg !1193
  store i8 1, i8* %flredefine, align 1, !dbg !1193, !tbaa !875
  %indvars.iv.next48 = add i64 %indvars.iv47, 1, !dbg !1190
  %5 = trunc i64 %indvars.iv.next48 to i32, !dbg !1190
  %cmp = icmp slt i32 %5, %1, !dbg !1190
  br i1 %cmp, label %for.body, label %for.cond7.preheader, !dbg !1190

for.body11:                                       ; preds = %for.body11.lr.ph, %for.inc20
  %indvars.iv = phi i64 [ 0, %for.body11.lr.ph ], [ %indvars.iv.next, %for.inc20 ]
  tail call void @llvm.dbg.value(metadata !{%class.largesolidarray* %rarp}, i64 0, metadata !1201), !dbg !1202
  tail call void @llvm.dbg.value(metadata !796, i64 0, metadata !1203), !dbg !1202
  %arrayidx.i35 = getelementptr inbounds %class.regobj** %3, i64 %indvars.iv, !dbg !1196
  %6 = load %class.regobj** %arrayidx.i35, align 8, !dbg !1197, !tbaa !777
  %square = getelementptr inbounds %class.regobj* %6, i64 0, i32 4, !dbg !1197
  %7 = load i32* %square, align 4, !dbg !1197, !tbaa !781
  %cmp14 = icmp slt i32 %7, %conv5, !dbg !1197
  br i1 %cmp14, label %if.then, label %for.inc20, !dbg !1197

if.then:                                          ; preds = %for.body11
  tail call void @llvm.dbg.value(metadata !{%class.largesolidarray* %rarp}, i64 0, metadata !1204), !dbg !1207
  tail call void @llvm.dbg.value(metadata !796, i64 0, metadata !1208), !dbg !1207
  %flredefine17 = getelementptr inbounds %class.regobj* %6, i64 0, i32 2, !dbg !1205
  store i8 0, i8* %flredefine17, align 1, !dbg !1205, !tbaa !875
  tail call void @llvm.dbg.value(metadata !{%class.largesolidarray* %rarp}, i64 0, metadata !1209), !dbg !1211
  tail call void @llvm.dbg.value(metadata !796, i64 0, metadata !1212), !dbg !1211
  %flexist = getelementptr inbounds %class.regobj* %6, i64 0, i32 1, !dbg !1210
  store i8 0, i8* %flexist, align 1, !dbg !1210, !tbaa !875
  br label %for.inc20, !dbg !1213

for.inc20:                                        ; preds = %for.body11, %if.then
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1194
  %8 = trunc i64 %indvars.iv.next to i32, !dbg !1194
  %cmp10 = icmp slt i32 %8, %1, !dbg !1194
  br i1 %cmp10, label %for.body11, label %for.end22, !dbg !1194

for.end22:                                        ; preds = %entry, %for.inc20, %for.cond7.preheader
  tail call void @_ZN9regmngobj13deleteregionsEv(%class.regmngobj* %this) #7, !dbg !1214
  %regionmapp = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 6, !dbg !1215
  %9 = load %class.regobj*** %regionmapp, align 8, !dbg !1215, !tbaa !777
  %10 = bitcast %class.regobj** %9 to i8*, !dbg !1215
  %mapsizex = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 14, !dbg !1215
  %11 = load i32* %mapsizex, align 4, !dbg !1215, !tbaa !781
  %mapsizey = getelementptr inbounds %class.regmngobj* %this, i64 0, i32 15, !dbg !1215
  %12 = load i32* %mapsizey, align 4, !dbg !1215, !tbaa !781
  %mul23 = mul nsw i32 %12, %11, !dbg !1215
  %conv24 = sext i32 %mul23 to i64, !dbg !1215
  %mul25 = shl nsw i64 %conv24, 3, !dbg !1215
  tail call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 %mul25, i32 8, i1 false), !dbg !1215
  tail call void @_ZN9regmngobj15redefineregionsEv(%class.regmngobj* %this) #7, !dbg !1216
  ret void, !dbg !1217
}
