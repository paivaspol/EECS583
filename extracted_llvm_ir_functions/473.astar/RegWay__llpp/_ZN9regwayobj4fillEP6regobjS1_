define zeroext i1 @_ZN9regwayobj4fillEP6regobjS1_(%class.regwayobj* %this, %class.regobj* %rstart, %class.regobj* %rend) #3 align 2 {
entry:
  %rstart.addr = alloca %class.regobj*, align 8
  call void @llvm.dbg.value(metadata !{%class.regwayobj* %this}, i64 0, metadata !145), !dbg !278
  call void @llvm.dbg.value(metadata !{%class.regobj* %rstart}, i64 0, metadata !146), !dbg !278
  store %class.regobj* %rstart, %class.regobj** %rstart.addr, align 8, !tbaa !240
  call void @llvm.dbg.declare(metadata !{%class.regobj** %rstart.addr}, metadata !146), !dbg !278
  call void @llvm.dbg.value(metadata !{%class.regobj* %rend}, i64 0, metadata !147), !dbg !278
  %flend = getelementptr inbounds %class.regwayobj* %this, i64 0, i32 6, !dbg !279
  store i8 0, i8* %flend, align 1, !dbg !279, !tbaa !245
  %rend2 = getelementptr inbounds %class.regwayobj* %this, i64 0, i32 7, !dbg !280
  store %class.regobj* %rend, %class.regobj** %rend2, align 8, !dbg !280, !tbaa !240
  call void @llvm.dbg.value(metadata !{%class.regobj** %rstart.addr}, i64 0, metadata !146), !dbg !281
  %rstart3 = getelementptr inbounds %class.regwayobj* %this, i64 0, i32 8, !dbg !281
  store %class.regobj* %rstart, %class.regobj** %rstart3, align 8, !dbg !281, !tbaa !240
  %regmngp = getelementptr inbounds %class.regwayobj* %this, i64 0, i32 5, !dbg !282
  %0 = load %class.regmngobj** %regmngp, align 8, !dbg !282, !tbaa !240
  %call = call i32 @_ZN9regmngobj13getregfillnumEv(%class.regmngobj* %0) #7, !dbg !282
  %regfillnum = getelementptr inbounds %class.regwayobj* %this, i64 0, i32 4, !dbg !282
  store i32 %call, i32* %regfillnum, align 4, !dbg !282, !tbaa !234
  call void @llvm.dbg.value(metadata !{%class.regobj** %rstart.addr}, i64 0, metadata !146), !dbg !283
  %fillnum = getelementptr inbounds %class.regobj* %rstart, i64 0, i32 7, !dbg !283
  store i32 %call, i32* %fillnum, align 4, !dbg !283, !tbaa !234
  call void @llvm.dbg.value(metadata !{%class.regobj** %rstart.addr}, i64 0, metadata !146), !dbg !284
  %waydist = getelementptr inbounds %class.regobj* %rstart, i64 0, i32 8, !dbg !284
  store i32 0, i32* %waydist, align 4, !dbg !284, !tbaa !234
  %bound1arp = getelementptr inbounds %class.regwayobj* %this, i64 0, i32 1, !dbg !285
  tail call void @llvm.dbg.value(metadata !{%class.flexarray* %bound1arp}, i64 0, metadata !286), !dbg !287
  %elemqu.i = getelementptr inbounds %class.regwayobj* %this, i64 0, i32 1, i32 1, !dbg !288
  store i32 0, i32* %elemqu.i, align 4, !dbg !288, !tbaa !234
  call void @_ZN9flexarrayIP6regobjE3addERKS1_(%class.flexarray* %bound1arp, %class.regobj** %rstart.addr) #7, !dbg !289
  call void @llvm.dbg.value(metadata !290, i64 0, metadata !150), !dbg !291
  %filltact = getelementptr inbounds %class.regwayobj* %this, i64 0, i32 3, !dbg !292
  call void @llvm.dbg.value(metadata !293, i64 0, metadata !148), !dbg !294
  store i32 1, i32* %filltact, align 4, !dbg !295, !tbaa !234
  %bound2arp13 = getelementptr inbounds %class.regwayobj* %this, i64 0, i32 2, !dbg !297
  %elemqu = getelementptr inbounds %class.regwayobj* %this, i64 0, i32 2, i32 1, !dbg !299
  br label %land.rhs, !dbg !301

land.rhs:                                         ; preds = %entry, %if.end
  %flodd.021 = phi i1 [ false, %entry ], [ %newflodd.0, %if.end ]
  %1 = load i8* %flend, align 1, !dbg !301, !tbaa !245, !range !302
  %cmp7 = icmp eq i8 %1, 0, !dbg !301
  br i1 %cmp7, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  br i1 %flodd.021, label %if.else, label %if.then, !dbg !303

if.then:                                          ; preds = %while.body
  call void @_ZN9regwayobj10makebound2ER9flexarrayIP6regobjES4_(%class.regwayobj* %this, %class.flexarray* %bound1arp, %class.flexarray* %bound2arp13) #7, !dbg !304
  call void @llvm.dbg.value(metadata !305, i64 0, metadata !149), !dbg !306
  br label %if.end, !dbg !307

if.else:                                          ; preds = %while.body
  call void @_ZN9regwayobj10makebound2ER9flexarrayIP6regobjES4_(%class.regwayobj* %this, %class.flexarray* %bound2arp13, %class.flexarray* %bound1arp) #7, !dbg !297
  call void @llvm.dbg.value(metadata !293, i64 0, metadata !149), !dbg !308
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %newflodd.0 = phi i1 [ true, %if.then ], [ false, %if.else ]
  %boundl.1.in = phi i32* [ %elemqu, %if.then ], [ %elemqu.i, %if.else ]
  %boundl.1 = load i32* %boundl.1.in, align 4, !dbg !299
  %2 = load i32* %filltact, align 4, !dbg !295, !tbaa !234
  %inc = add nsw i32 %2, 1, !dbg !295
  %phitmp = icmp eq i32 %boundl.1, 0, !dbg !309
  store i32 %inc, i32* %filltact, align 4, !dbg !295, !tbaa !234
  br i1 %phitmp, label %if.end.while.end_crit_edge, label %land.rhs, !dbg !301

if.end.while.end_crit_edge:                       ; preds = %if.end
  %.pre = load i8* %flend, align 1, !dbg !310, !tbaa !245
  br label %while.end, !dbg !301

while.end:                                        ; preds = %if.end.while.end_crit_edge, %land.rhs
  %3 = phi i8 [ %.pre, %if.end.while.end_crit_edge ], [ %1, %land.rhs ]
  %tobool20 = icmp ne i8 %3, 0, !dbg !310
  ret i1 %tobool20, !dbg !310
}
