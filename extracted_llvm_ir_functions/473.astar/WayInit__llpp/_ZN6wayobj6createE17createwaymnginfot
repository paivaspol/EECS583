define void @_ZN6wayobj6createE17createwaymnginfot(%class.wayobj* %this, %struct.createwaymnginfot* byval nocapture readonly align 8 %info) #3 align 2 {
  tail call void @llvm.dbg.value(metadata %class.wayobj* %this, i64 0, metadata !343, metadata !358), !dbg !842
  tail call void @llvm.dbg.declare(metadata %struct.createwaymnginfot* %info, metadata !344, metadata !358), !dbg !843
  %1 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 14, !dbg !844
  %2 = bitcast %struct.createwaymnginfot* %1 to i8*, !dbg !845
  %3 = bitcast %struct.createwaymnginfot* %info to i8*, !dbg !845
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 32, i32 4, i1 false), !dbg !845, !tbaa.struct !846
  %4 = getelementptr inbounds %struct.createwaymnginfot* %info, i64 0, i32 4, !dbg !848
  %5 = bitcast i32* %4 to i64*, !dbg !848
  %6 = load i64* %5, align 8, !dbg !848
  %7 = trunc i64 %6 to i32, !dbg !848
  %8 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 0, !dbg !849
  store i32 %7, i32* %8, align 4, !dbg !850, !tbaa !718
  %9 = lshr i64 %6, 32
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 1, !dbg !851
  store i32 %10, i32* %11, align 4, !dbg !852, !tbaa !721
  %12 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 2, !dbg !853
  store i32 %7, i32* %12, align 4, !dbg !854, !tbaa !530
  %13 = shl i32 1, %7, !dbg !855
  %14 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 3, !dbg !856
  %15 = shl i32 1, %10, !dbg !857
  %16 = insertelement <4 x i32> undef, i32 %13, i32 0, !dbg !858
  %17 = insertelement <4 x i32> %16, i32 %15, i32 1, !dbg !858
  %18 = insertelement <4 x i32> %17, i32 %13, i32 2, !dbg !858
  %19 = insertelement <4 x i32> %18, i32 %15, i32 3, !dbg !858
  %20 = add nsw <4 x i32> %19, <i32 -1, i32 -1, i32 -2, i32 -2>, !dbg !858
  %21 = bitcast i32* %14 to <4 x i32>*, !dbg !859
  store <4 x i32> %20, <4 x i32>* %21, align 4, !dbg !859, !tbaa !794
  %22 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 7, !dbg !860
  store i32 %13, i32* %22, align 4, !dbg !861, !tbaa !502
  %23 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 8, !dbg !862
  store i32 %15, i32* %23, align 4, !dbg !863, !tbaa !509
  %24 = getelementptr inbounds %struct.createwaymnginfot* %info, i64 0, i32 1, !dbg !864
  %25 = load float* %24, align 4, !dbg !864, !tbaa !865
  %26 = getelementptr inbounds %struct.createwaymnginfot* %info, i64 0, i32 0, !dbg !866
  %27 = load float* %26, align 8, !dbg !866, !tbaa !867
  %28 = fsub float %25, %27, !dbg !868
  %29 = shl nsw i32 %13, 1, !dbg !869
  %30 = sitofp i32 %29 to float, !dbg !870
  %31 = fdiv float %28, %30, !dbg !871
  %32 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 13, !dbg !872
  store float %31, float* %32, align 4, !dbg !873, !tbaa !414
  %33 = getelementptr inbounds %struct.createwaymnginfot* %info, i64 0, i32 3, !dbg !874
  %34 = load float* %33, align 4, !dbg !874, !tbaa !876
  %35 = getelementptr inbounds %struct.createwaymnginfot* %info, i64 0, i32 2, !dbg !877
  %36 = load float* %35, align 8, !dbg !877, !tbaa !878
  %37 = fsub float %34, %36, !dbg !879
  %38 = shl nsw i32 %15, 1, !dbg !880
  %39 = sitofp i32 %38 to float, !dbg !881
  %40 = fdiv float %37, %39, !dbg !882
  %41 = fcmp ogt float %40, %31, !dbg !883
  br i1 %41, label %42, label %43, !dbg !884

; <label>:42                                      ; preds = %0
  store float %40, float* %32, align 4, !dbg !885, !tbaa !414
  br label %43, !dbg !886

; <label>:43                                      ; preds = %42, %0
  %44 = sitofp i32 %13 to float, !dbg !887
  %45 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 9, !dbg !888
  %46 = sub nsw i32 0, %13, !dbg !889
  %47 = sitofp i32 %46 to float, !dbg !889
  %48 = fmul float %47, %27, !dbg !890
  %49 = sitofp i32 %15 to float, !dbg !891
  %50 = sub nsw i32 0, %15, !dbg !892
  %51 = sitofp i32 %50 to float, !dbg !892
  %52 = fmul float %51, %36, !dbg !893
  %53 = insertelement <4 x float> undef, float %44, i32 0, !dbg !894
  %54 = insertelement <4 x float> %53, float %48, i32 1, !dbg !894
  %55 = insertelement <4 x float> %54, float %49, i32 2, !dbg !894
  %56 = insertelement <4 x float> %55, float %52, i32 3, !dbg !894
  %57 = insertelement <4 x float> undef, float %28, i32 0, !dbg !894
  %58 = insertelement <4 x float> %57, float %28, i32 1, !dbg !894
  %59 = insertelement <4 x float> %58, float %37, i32 2, !dbg !894
  %60 = insertelement <4 x float> %59, float %37, i32 3, !dbg !894
  %61 = fdiv <4 x float> %56, %60, !dbg !894
  %62 = bitcast float* %45 to <4 x float>*, !dbg !895
  store <4 x float> %61, <4 x float>* %62, align 4, !dbg !895, !tbaa !847
  %63 = shl i32 %13, %10, !dbg !896
  tail call void @llvm.dbg.value(metadata i32 %63, i64 0, metadata !345, metadata !358), !dbg !897
  %64 = sext i32 %63 to i64, !dbg !898
  %65 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %64, i64 2), !dbg !898
  %66 = extractvalue { i64, i1 } %65, 1, !dbg !898
  %67 = extractvalue { i64, i1 } %65, 0, !dbg !898
  %68 = select i1 %66, i64 -1, i64 %67, !dbg !898
  %69 = tail call noalias i8* @_Znam(i64 %68) #12, !dbg !898
  %70 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 17, !dbg !899
  %71 = bitcast i16** %70 to i8**, !dbg !900
  store i8* %69, i8** %71, align 8, !dbg !900, !tbaa !533
  %72 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %64, i64 4), !dbg !901
  %73 = extractvalue { i64, i1 } %72, 1, !dbg !901
  %74 = extractvalue { i64, i1 } %72, 0, !dbg !901
  %75 = select i1 %73, i64 -1, i64 %74, !dbg !901
  %76 = tail call noalias i8* @_Znam(i64 %75) #12, !dbg !901
  %77 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 18, !dbg !902
  %78 = bitcast %struct.waymapcellt** %77 to i8**, !dbg !903
  store i8* %76, i8** %78, align 8, !dbg !903, !tbaa !729
  tail call void @_ZN6wayobj5clearEv(%class.wayobj* %this) #10, !dbg !904
  %79 = load i32* %22, align 4, !dbg !905, !tbaa !502
  %80 = load i32* %23, align 4, !dbg !906, !tbaa !509
  %81 = add i32 %80, %79, !dbg !907
  %82 = mul nsw i32 %81, 12, !dbg !908
  %83 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 21, !dbg !909
  store i32 %82, i32* %83, align 4, !dbg !910, !tbaa !911
  %84 = sext i32 %82 to i64, !dbg !912
  %85 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %84, i64 4), !dbg !912
  %86 = extractvalue { i64, i1 } %85, 1, !dbg !912
  %87 = extractvalue { i64, i1 } %85, 0, !dbg !912
  %88 = select i1 %86, i64 -1, i64 %87, !dbg !912
  %89 = tail call noalias i8* @_Znam(i64 %88) #12, !dbg !912
  %90 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 19, !dbg !913
  %91 = bitcast i32** %90 to i8**, !dbg !914
  store i8* %89, i8** %91, align 8, !dbg !914, !tbaa !915
  %92 = tail call noalias i8* @_Znam(i64 %88) #12, !dbg !916
  %93 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 20, !dbg !917
  %94 = bitcast i32** %93 to i8**, !dbg !918
  store i8* %92, i8** %94, align 8, !dbg !918, !tbaa !919
  %95 = load i32* %12, align 4, !dbg !920, !tbaa !530
  %96 = shl i32 1, %95, !dbg !921
  %97 = add nsw i32 %96, -1, !dbg !922
  %98 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 22, !dbg !923
  store i32 %97, i32* %98, align 4, !dbg !924, !tbaa !925
  %99 = getelementptr inbounds %class.wayobj* %this, i64 0, i32 27, !dbg !926
  store i16 0, i16* %99, align 2, !dbg !927, !tbaa !928
  ret void, !dbg !929
}
