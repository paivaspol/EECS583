define i32 @CCTK_RegexMatch(i8* %string, i8* %pattern, i32 %nmatch, %struct.regmatch_t* %pmatch) #1 {
entry:
  %re = alloca %struct.re_pattern_buffer, align 8
  call void @llvm.dbg.value(metadata !{i8* %string}, i64 0, metadata !190), !dbg !335
  call void @llvm.dbg.value(metadata !{i8* %pattern}, i64 0, metadata !191), !dbg !336
  call void @llvm.dbg.value(metadata !{i32 %nmatch}, i64 0, metadata !192), !dbg !337
  call void @llvm.dbg.value(metadata !{%struct.regmatch_t* %pmatch}, i64 0, metadata !193), !dbg !338
  %0 = bitcast %struct.re_pattern_buffer* %re to i8*, !dbg !339
  call void @llvm.lifetime.start(i64 64, i8* %0) #5, !dbg !339
  call void @llvm.dbg.declare(metadata !{%struct.re_pattern_buffer* %re}, metadata !196), !dbg !339
  %call = call i32 @regcomp(%struct.re_pattern_buffer* %re, i8* %pattern, i32 1) #7, !dbg !340
  %cmp = icmp eq i32 %call, 0, !dbg !340
  br i1 %cmp, label %if.then, label %if.end7, !dbg !340

if.then:                                          ; preds = %entry
  %conv = sext i32 %nmatch to i64, !dbg !341
  %call2 = call i32 @regexec(%struct.re_pattern_buffer* %re, i8* %string, i64 %conv, %struct.regmatch_t* %pmatch, i32 0) #7, !dbg !341
  call void @llvm.dbg.value(metadata !{i32 %call2}, i64 0, metadata !195), !dbg !341
  call void @regfree(%struct.re_pattern_buffer* %re) #7, !dbg !343
  %cmp3 = icmp eq i32 %call2, 0, !dbg !344
  %. = zext i1 %cmp3 to i32
  br label %if.end7

if.end7:                                          ; preds = %entry, %if.then
  %retval1.0 = phi i32 [ %., %if.then ], [ 0, %entry ]
  call void @llvm.lifetime.end(i64 64, i8* %0) #5, !dbg !345
  ret i32 %retval1.0, !dbg !345
}
