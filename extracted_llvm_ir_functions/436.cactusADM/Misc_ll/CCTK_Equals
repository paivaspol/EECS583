define i32 @CCTK_Equals(i8* %string1, i8* %string2) #1 {
  %1 = icmp ne i8* %string1, null
  %2 = icmp ne i8* %string2, null
  %or.cond = and i1 %1, %2
  br i1 %or.cond, label %12, label %3

; <label>:3                                       ; preds = %0
  %4 = icmp eq i8* %string1, null
  %or.cond3 = and i1 %4, %2
  br i1 %or.cond3, label %5, label %7

; <label>:5                                       ; preds = %3
  %6 = tail call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 0, i32 128, i8* getelementptr inbounds ([73 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8]* @.str2, i64 0, i64 0), i8* %string2) #7
  br label %15

; <label>:7                                       ; preds = %3
  %or.cond5 = or i1 %4, %2
  br i1 %or.cond5, label %10, label %8

; <label>:8                                       ; preds = %7
  %9 = tail call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 0, i32 134, i8* getelementptr inbounds ([73 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8]* @.str3, i64 0, i64 0), i8* %string1) #7
  br label %15

; <label>:10                                      ; preds = %7
  %11 = tail call i32 @CCTK_Warn(i32 0, i32 139, i8* getelementptr inbounds ([73 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8]* @.str4, i64 0, i64 0)) #7
  br label %15

; <label>:12                                      ; preds = %0
  %13 = tail call i32 @Util_StrCmpi(i8* %string1, i8* %string2) #7
  %14 = icmp eq i32 %13, 0
  %. = zext i1 %14 to i32
  ret i32 %.

; <label>:15                                      ; preds = %5, %10, %8
  ret i32 0
}
