define i32 @CCTKi_NamesStoreVariable(i8* %name, i32 %vnum, i32 %gnum) #1 {
  tail call void @llvm.dbg.value(metadata i8* %name, i64 0, metadata !37, metadata !110), !dbg !161
  tail call void @llvm.dbg.value(metadata i32 %vnum, i64 0, metadata !38, metadata !110), !dbg !162
  tail call void @llvm.dbg.value(metadata i32 %gnum, i64 0, metadata !39, metadata !110), !dbg !163
  %1 = load %struct.T_HASH** @VariableData, align 8, !dbg !164, !tbaa !115
  %2 = icmp eq %struct.T_HASH* %1, null, !dbg !164
  br i1 %2, label %3, label %5, !dbg !166

; <label>:3                                       ; preds = %0
  %4 = tail call %struct.T_HASH* @Util_HashCreate(i32 64) #6, !dbg !167
  store %struct.T_HASH* %4, %struct.T_HASH** @VariableData, align 8, !dbg !169, !tbaa !115
  br label %5, !dbg !170

; <label>:5                                       ; preds = %0, %3
  %6 = phi %struct.T_HASH* [ %1, %0 ], [ %4, %3 ]
  %7 = tail call i8* @malloc(i64 8) #6, !dbg !171
  %8 = icmp ne i8* %7, null, !dbg !172
  %9 = icmp ne %struct.T_HASH* %6, null, !dbg !174
  %or.cond = and i1 %8, %9, !dbg !175
  br i1 %or.cond, label %10, label %29, !dbg !175

; <label>:10                                      ; preds = %5
  %11 = bitcast i8* %7 to i32*, !dbg !176
  store i32 %vnum, i32* %11, align 4, !dbg !178, !tbaa !179
  %12 = getelementptr inbounds i8* %7, i64 4, !dbg !181
  %13 = bitcast i8* %12 to i32*, !dbg !181
  store i32 %gnum, i32* %13, align 4, !dbg !182, !tbaa !183
  %14 = tail call i64 @strlen(i8* %name) #6, !dbg !184
  %15 = trunc i64 %14 to i32, !dbg !184
  tail call void @llvm.dbg.value(metadata i32 %15, i64 0, metadata !67, metadata !110) #7, !dbg !185
  tail call void @llvm.dbg.value(metadata i8* %name, i64 0, metadata !68, metadata !110) #7, !dbg !187
  tail call void @llvm.dbg.value(metadata i32 %15, i64 0, metadata !70, metadata !110) #7, !dbg !188
  tail call void @llvm.dbg.value(metadata i8* %name, i64 0, metadata !71, metadata !110) #7, !dbg !189
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !69, metadata !110) #7, !dbg !190
  %16 = icmp eq i32 %15, 0, !dbg !191
  br i1 %16, label %CaseIndependentHash.exit, label %.lr.ph.i, !dbg !191

.lr.ph.i:                                         ; preds = %10, %.lr.ph.i
  %pos.03.i = phi i8* [ %19, %.lr.ph.i ], [ %name, %10 ], !dbg !192
  %i.02.i = phi i32 [ %17, %.lr.ph.i ], [ %15, %10 ], !dbg !192
  %hash.01.i = phi i32 [ %23, %.lr.ph.i ], [ 0, %10 ], !dbg !192
  %17 = add nsw i32 %i.02.i, -1, !dbg !193
  %18 = mul i32 %hash.01.i, 33, !dbg !194
  %19 = getelementptr inbounds i8* %pos.03.i, i64 1, !dbg !195
  tail call void @llvm.dbg.value(metadata i8* %19, i64 0, metadata !71, metadata !110) #7, !dbg !189
  %20 = load i8* %pos.03.i, align 1, !dbg !196, !tbaa !149
  %21 = sext i8 %20 to i32, !dbg !196
  tail call void @llvm.dbg.value(metadata i32 %21, i64 0, metadata !77, metadata !110) #7, !dbg !197
  %22 = tail call i32 @__toupper(i32 %21) #6, !dbg !199
  %23 = add i32 %22, %18, !dbg !200
  tail call void @llvm.dbg.value(metadata i32 %23, i64 0, metadata !69, metadata !110) #7, !dbg !190
  %24 = icmp eq i32 %17, 0, !dbg !191
  br i1 %24, label %CaseIndependentHash.exit.loopexit, label %.lr.ph.i, !dbg !191

CaseIndependentHash.exit.loopexit:                ; preds = %.lr.ph.i
  %.pre = load %struct.T_HASH** @VariableData, align 8, !dbg !201, !tbaa !115
  br label %CaseIndependentHash.exit

CaseIndependentHash.exit:                         ; preds = %CaseIndependentHash.exit.loopexit, %10
  %25 = phi %struct.T_HASH* [ %6, %10 ], [ %.pre, %CaseIndependentHash.exit.loopexit ]
  %hash.0.lcssa.i = phi i32 [ 0, %10 ], [ %23, %CaseIndependentHash.exit.loopexit ], !dbg !192
  tail call void @llvm.dbg.value(metadata i32 %hash.0.lcssa.i, i64 0, metadata !41, metadata !110), !dbg !202
  %26 = tail call i64 @strlen(i8* %name) #6, !dbg !203
  %27 = trunc i64 %26 to i32, !dbg !203
  %28 = tail call i32 @Util_HashStore(%struct.T_HASH* %25, i32 %27, i8* %name, i32 %hash.0.lcssa.i, i8* %7) #6, !dbg !204
  tail call void @llvm.dbg.value(metadata i32 %28, i64 0, metadata !40, metadata !110), !dbg !205
  br label %29, !dbg !206

; <label>:29                                      ; preds = %5, %CaseIndependentHash.exit
  %retval.0 = phi i32 [ %28, %CaseIndependentHash.exit ], [ -1, %5 ]
  ret i32 %retval.0, !dbg !207
}
