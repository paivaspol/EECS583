define i32 @CartApplySym2Di(%struct.cGH* nocapture readonly %GH, i32* nocapture readonly %doSym, i32* nocapture readonly %cntstag, i32* nocapture readonly %lssh, i32* nocapture readonly %ghostz, i32* nocapture readonly %sym, double* nocapture %var) #1 {
  tail call void @llvm.dbg.value(metadata %struct.cGH* %GH, i64 0, metadata !64, metadata !90), !dbg !203
  tail call void @llvm.dbg.value(metadata i32* %doSym, i64 0, metadata !65, metadata !90), !dbg !204
  tail call void @llvm.dbg.value(metadata i32* %cntstag, i64 0, metadata !66, metadata !90), !dbg !205
  tail call void @llvm.dbg.value(metadata i32* %lssh, i64 0, metadata !67, metadata !90), !dbg !206
  tail call void @llvm.dbg.value(metadata i32* %ghostz, i64 0, metadata !68, metadata !90), !dbg !207
  tail call void @llvm.dbg.value(metadata i32* %sym, i64 0, metadata !69, metadata !90), !dbg !208
  tail call void @llvm.dbg.value(metadata double* %var, i64 0, metadata !70, metadata !90), !dbg !209
  %1 = load i32* %doSym, align 4, !dbg !210, !tbaa !100
  %2 = icmp eq i32 %1, 1, !dbg !212
  br i1 %2, label %.preheader4, label %.loopexit5, !dbg !213

.preheader4:                                      ; preds = %0
  %3 = getelementptr inbounds i32* %lssh, i64 1, !dbg !214
  %4 = load i32* %3, align 4, !dbg !214, !tbaa !100
  %5 = icmp sgt i32 %4, 0, !dbg !218
  br i1 %5, label %.preheader3.lr.ph, label %.loopexit5, !dbg !219

.preheader3.lr.ph:                                ; preds = %.preheader4
  %6 = load i32* %ghostz, align 4, !dbg !220, !tbaa !100
  %7 = icmp sgt i32 %6, 0, !dbg !224
  %8 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 3, !dbg !225
  br label %.preheader3, !dbg !219

.preheader3:                                      ; preds = %.preheader3.lr.ph, %._crit_edge11
  %j.012 = phi i32 [ 0, %.preheader3.lr.ph ], [ %30, %._crit_edge11 ]
  br i1 %7, label %.lr.ph10, label %._crit_edge11, !dbg !227

.lr.ph10:                                         ; preds = %.preheader3
  %9 = load i32* %sym, align 4, !dbg !228, !tbaa !100
  %10 = sitofp i32 %9 to double, !dbg !228
  %11 = load i32* %cntstag, align 4, !dbg !225, !tbaa !100
  %12 = load i32** %8, align 8, !dbg !225, !tbaa !127
  %13 = load i32* %12, align 4, !dbg !225, !tbaa !100
  %14 = mul nsw i32 %13, %j.012, !dbg !225
  %15 = sext i32 %14 to i64, !dbg !227
  %16 = sext i32 %6 to i64, !dbg !227
  br label %17, !dbg !227

; <label>:17                                      ; preds = %.lr.ph10, %17
  %indvars.iv15 = phi i64 [ 0, %.lr.ph10 ], [ %indvars.iv.next16, %17 ]
  %18 = shl nsw i32 %6, 1, !dbg !225
  %19 = trunc i64 %indvars.iv15 to i32, !dbg !225
  %20 = sub i32 %18, %19, !dbg !225
  %21 = sub i32 %20, %11, !dbg !225
  %22 = add i32 %21, %14, !dbg !225
  %23 = sext i32 %22 to i64, !dbg !229
  %24 = getelementptr inbounds double* %var, i64 %23, !dbg !229
  %25 = load double* %24, align 8, !dbg !229, !tbaa !132
  %26 = fmul double %10, %25, !dbg !230
  %27 = add nsw i64 %15, %indvars.iv15, !dbg !231
  %28 = getelementptr inbounds double* %var, i64 %27, !dbg !232
  store double %26, double* %28, align 8, !dbg !233, !tbaa !132
  %indvars.iv.next16 = add nuw nsw i64 %indvars.iv15, 1, !dbg !227
  %29 = icmp slt i64 %indvars.iv.next16, %16, !dbg !224
  br i1 %29, label %17, label %._crit_edge11, !dbg !227

._crit_edge11:                                    ; preds = %17, %.preheader3
  %30 = add nuw nsw i32 %j.012, 1, !dbg !234
  tail call void @llvm.dbg.value(metadata i32 %30, i64 0, metadata !72, metadata !90), !dbg !235
  %31 = icmp slt i32 %30, %4, !dbg !218
  br i1 %31, label %.preheader3, label %.loopexit5, !dbg !219

.loopexit5:                                       ; preds = %._crit_edge11, %.preheader4, %0
  %32 = getelementptr inbounds i32* %doSym, i64 2, !dbg !236
  %33 = load i32* %32, align 4, !dbg !236, !tbaa !100
  %34 = icmp eq i32 %33, 1, !dbg !238
  br i1 %34, label %.preheader2, label %.loopexit, !dbg !239

.preheader2:                                      ; preds = %.loopexit5
  %35 = load i32* %lssh, align 4, !dbg !240, !tbaa !100
  %36 = icmp sgt i32 %35, 0, !dbg !244
  br i1 %36, label %.preheader.lr.ph, label %.loopexit, !dbg !245

.preheader.lr.ph:                                 ; preds = %.preheader2
  %37 = getelementptr inbounds i32* %ghostz, i64 1, !dbg !246
  %38 = load i32* %37, align 4, !dbg !246, !tbaa !100
  %39 = icmp sgt i32 %38, 0, !dbg !250
  %40 = getelementptr inbounds i32* %sym, i64 2, !dbg !251
  %41 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 3, !dbg !253
  %42 = getelementptr inbounds i32* %cntstag, i64 1, !dbg !253
  %43 = sext i32 %35 to i64, !dbg !245
  br label %.preheader, !dbg !245

.preheader:                                       ; preds = %.preheader.lr.ph, %._crit_edge
  %indvars.iv13 = phi i64 [ 0, %.preheader.lr.ph ], [ %indvars.iv.next14, %._crit_edge ]
  br i1 %39, label %.lr.ph, label %._crit_edge, !dbg !254

.lr.ph:                                           ; preds = %.preheader
  %44 = load i32* %40, align 4, !dbg !251, !tbaa !100
  %45 = sitofp i32 %44 to double, !dbg !251
  %46 = load i32** %41, align 8, !dbg !253, !tbaa !127
  %47 = load i32* %46, align 4, !dbg !253, !tbaa !100
  %48 = load i32* %42, align 4, !dbg !253, !tbaa !100
  %49 = sext i32 %47 to i64, !dbg !254
  %50 = sext i32 %38 to i64, !dbg !254
  br label %51, !dbg !254

; <label>:51                                      ; preds = %.lr.ph, %51
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %51 ]
  %52 = shl nsw i32 %38, 1, !dbg !253
  %53 = trunc i64 %indvars.iv to i32, !dbg !253
  %54 = sub i32 %52, %53, !dbg !253
  %55 = sub i32 %54, %48, !dbg !253
  %56 = mul nsw i32 %55, %47, !dbg !253
  %57 = trunc i64 %indvars.iv13 to i32, !dbg !253
  %58 = add nsw i32 %56, %57, !dbg !253
  %59 = sext i32 %58 to i64, !dbg !255
  %60 = getelementptr inbounds double* %var, i64 %59, !dbg !255
  %61 = load double* %60, align 8, !dbg !255, !tbaa !132
  %62 = fmul double %45, %61, !dbg !256
  %63 = mul nsw i64 %49, %indvars.iv, !dbg !257
  %64 = add nsw i64 %63, %indvars.iv13, !dbg !257
  %65 = getelementptr inbounds double* %var, i64 %64, !dbg !258
  store double %62, double* %65, align 8, !dbg !259, !tbaa !132
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !254
  %66 = icmp slt i64 %indvars.iv.next, %50, !dbg !250
  br i1 %66, label %51, label %._crit_edge, !dbg !254

._crit_edge:                                      ; preds = %51, %.preheader
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1, !dbg !245
  %67 = icmp slt i64 %indvars.iv.next14, %43, !dbg !244
  br i1 %67, label %.preheader, label %.loopexit, !dbg !245

.loopexit:                                        ; preds = %._crit_edge, %.preheader2, %.loopexit5
  ret i32 0, !dbg !260
}
