define i32 @CartApplySym1Di(%struct.cGH* nocapture %GH, i32* nocapture %doSym, i32* nocapture %cntstag, i32* nocapture %lssh, i32* nocapture %ghostz, i32* nocapture %sym, double* nocapture %var) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.cGH* %GH}, i64 0, metadata !76), !dbg !152
  tail call void @llvm.dbg.value(metadata !{i32* %doSym}, i64 0, metadata !77), !dbg !152
  tail call void @llvm.dbg.value(metadata !{i32* %cntstag}, i64 0, metadata !78), !dbg !152
  tail call void @llvm.dbg.value(metadata !{i32* %lssh}, i64 0, metadata !79), !dbg !153
  tail call void @llvm.dbg.value(metadata !{i32* %ghostz}, i64 0, metadata !80), !dbg !153
  tail call void @llvm.dbg.value(metadata !{i32* %sym}, i64 0, metadata !81), !dbg !153
  tail call void @llvm.dbg.value(metadata !{double* %var}, i64 0, metadata !82), !dbg !153
  tail call void @llvm.dbg.value(metadata !{%struct.cGH* %GH}, i64 0, metadata !76), !dbg !154
  tail call void @llvm.dbg.value(metadata !{i32* %lssh}, i64 0, metadata !79), !dbg !155
  %0 = load i32* %doSym, align 4, !dbg !156, !tbaa !90
  %cmp = icmp eq i32 %0, 1, !dbg !156
  br i1 %cmp, label %for.cond.preheader, label %if.end, !dbg !156

for.cond.preheader:                               ; preds = %entry
  %1 = load i32* %ghostz, align 4, !dbg !157, !tbaa !90
  %cmp216 = icmp sgt i32 %1, 0, !dbg !157
  br i1 %cmp216, label %for.body.lr.ph, label %if.end, !dbg !157

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %2 = load i32* %sym, align 4, !dbg !160, !tbaa !90
  %conv = sitofp i32 %2 to double, !dbg !160
  %3 = load i32* %cntstag, align 4, !dbg !160, !tbaa !90
  br label %for.body, !dbg !157

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %mul = shl nsw i32 %1, 1, !dbg !160
  %4 = trunc i64 %indvars.iv to i32, !dbg !160
  %sub = sub i32 %mul, %4, !dbg !160
  %sub6 = sub i32 %sub, %3, !dbg !160
  %idxprom = sext i32 %sub6 to i64, !dbg !160
  %arrayidx7 = getelementptr inbounds double* %var, i64 %idxprom, !dbg !160
  %5 = load double* %arrayidx7, align 8, !dbg !160, !tbaa !105
  %mul8 = fmul double %conv, %5, !dbg !160
  %arrayidx10 = getelementptr inbounds double* %var, i64 %indvars.iv, !dbg !160
  store double %mul8, double* %arrayidx10, align 8, !dbg !160, !tbaa !105
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !157
  %6 = trunc i64 %indvars.iv.next to i32, !dbg !157
  %cmp2 = icmp slt i32 %6, %1, !dbg !157
  br i1 %cmp2, label %for.body, label %if.end, !dbg !157

if.end:                                           ; preds = %for.cond.preheader, %for.body, %entry
  ret i32 0, !dbg !162
}
