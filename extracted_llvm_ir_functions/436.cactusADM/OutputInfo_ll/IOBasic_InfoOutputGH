define i32 @IOBasic_InfoOutputGH(%struct.cGH* %GH) #1 {
  %msg.i = alloca i8*, align 8
  %1 = tail call i8* @CCTK_GHExtension(%struct.cGH* %GH, i8* getelementptr inbounds ([8 x i8]* @.str, i64 0, i64 0)) #8
  %2 = bitcast i8* %1 to %struct.IOBASIC_GH*
  tail call fastcc void @CheckSteerableParameters(%struct.IOBASIC_GH* %2) #9
  %3 = getelementptr inbounds i8* %1, i64 4
  %4 = bitcast i8* %3 to i32*
  %5 = load i32* %4, align 4, !tbaa !2
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %177, label %7

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 1
  %9 = load i32* %8, align 4, !tbaa !8
  %10 = srem i32 %9, %5
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %177

; <label>:12                                      ; preds = %7
  %13 = tail call i32 @CCTK_NumVars() #8
  %14 = getelementptr inbounds i8* %1, i64 8
  %15 = load i8* %14, align 1, !tbaa !11
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %113, label %17

; <label>:17                                      ; preds = %12
  %18 = bitcast i8** %msg.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %18)
  %19 = load i8** getelementptr inbounds (%struct.anon.0* @iorest_, i64 0, i32 12), align 8, !tbaa !12
  store i8* null, i8** %msg.i, align 8, !tbaa !14
  %20 = icmp sgt i32 %13, 0
  br i1 %20, label %.lr.ph20.i, label %.thread35.i

.thread35.i:                                      ; preds = %17
  %21 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str26, i64 0, i64 0)) #8
  br label %._crit_edge16.i

.lr.ph20.i:                                       ; preds = %17
  %22 = getelementptr inbounds i8* %1, i64 48
  %23 = bitcast i8* %22 to %struct.IOBASIC_REDUCTIONLIST**
  %24 = add i32 %13, -1
  br label %25

; <label>:25                                      ; preds = %47, %.lr.ph20.i
  %indvars.iv28.i = phi i64 [ 0, %.lr.ph20.i ], [ %indvars.iv.next29.i, %47 ]
  %num_columns.017.i = phi i32 [ 0, %.lr.ph20.i ], [ %29, %47 ]
  %26 = load %struct.IOBASIC_REDUCTIONLIST** %23, align 8, !tbaa !15
  %27 = getelementptr inbounds %struct.IOBASIC_REDUCTIONLIST* %26, i64 %indvars.iv28.i, i32 0
  %28 = load i32* %27, align 4, !tbaa !16
  %29 = add i32 %28, %num_columns.017.i
  %30 = icmp eq i32 %28, 0
  br i1 %30, label %47, label %31

; <label>:31                                      ; preds = %25
  %32 = call i32 @CCTK_Equals(i8* %19, i8* getelementptr inbounds ([9 x i8]* @.str9, i64 0, i64 0)) #8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %37

; <label>:34                                      ; preds = %31
  %35 = call i32 @CCTK_Equals(i8* %19, i8* getelementptr inbounds ([5 x i8]* @.str10, i64 0, i64 0)) #8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %47, label %37

; <label>:37                                      ; preds = %34, %31
  %38 = trunc i64 %indvars.iv28.i to i32
  %39 = call i8* @CCTK_FullName(i32 %38) #8
  %40 = load i8** %msg.i, align 8, !tbaa !14
  %41 = icmp eq i8* %40, null
  br i1 %41, label %42, label %44

; <label>:42                                      ; preds = %37
  %43 = call i32 (i8**, i8*, ...)* @Util_asprintf(i8** %msg.i, i8* getelementptr inbounds ([30 x i8]* @.str24, i64 0, i64 0), i8* %39) #8
  br label %46

; <label>:44                                      ; preds = %37
  %45 = call i32 (i8**, i8*, ...)* @Util_asprintf(i8** %msg.i, i8* getelementptr inbounds ([6 x i8]* @.str25, i64 0, i64 0), i8* %40, i8* %39) #8
  call void @free(i8* %40) #8
  br label %46

; <label>:46                                      ; preds = %44, %42
  call void @free(i8* %39) #8
  br label %47

; <label>:47                                      ; preds = %46, %34, %25
  %indvars.iv.next29.i = add nuw nsw i64 %indvars.iv28.i, 1
  %lftr.wideiv13 = trunc i64 %indvars.iv28.i to i32
  %exitcond14 = icmp eq i32 %lftr.wideiv13, %24
  br i1 %exitcond14, label %48, label %25

; <label>:48                                      ; preds = %47
  %.pre.i = load i8** %msg.i, align 8, !tbaa !14
  %49 = icmp eq i8* %.pre.i, null
  br i1 %49, label %53, label %50

; <label>:50                                      ; preds = %48
  %51 = call i32 @CCTK_Info(i8* getelementptr inbounds ([8 x i8]* @.str, i64 0, i64 0), i8* %.pre.i) #8
  %52 = load i8** %msg.i, align 8, !tbaa !14
  call void @free(i8* %52) #8
  br label %53

; <label>:53                                      ; preds = %50, %48
  %54 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str26, i64 0, i64 0)) #8
  %55 = icmp sgt i32 %29, 0
  br i1 %55, label %.lr.ph15.i, label %._crit_edge16.i

.lr.ph15.i:                                       ; preds = %53
  %56 = add i32 %29, -1
  br label %57

; <label>:57                                      ; preds = %57, %.lr.ph15.i
  %i.013.i = phi i32 [ 0, %.lr.ph15.i ], [ %59, %57 ]
  %58 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str27, i64 0, i64 0)) #8
  %59 = add nuw nsw i32 %i.013.i, 1
  %exitcond27.i = icmp eq i32 %i.013.i, %56
  br i1 %exitcond27.i, label %._crit_edge16.i, label %57

._crit_edge16.i:                                  ; preds = %57, %53, %.thread35.i
  %60 = phi i1 [ false, %.thread35.i ], [ false, %53 ], [ true, %57 ]
  %num_columns.0.lcssa3436.i = phi i32 [ 0, %.thread35.i ], [ %29, %53 ], [ %29, %57 ]
  %61 = call i32 @putchar(i32 10) #8
  %62 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str28, i64 0, i64 0)) #8
  %brmerge.demorgan.i = and i1 %20, %60
  br i1 %brmerge.demorgan.i, label %.lr.ph12.i, label %.loopexit1.i

.lr.ph12.i:                                       ; preds = %._crit_edge16.i
  %63 = getelementptr inbounds i8* %1, i64 48
  %64 = bitcast i8* %63 to %struct.IOBASIC_REDUCTIONLIST**
  %65 = add i32 %13, -1
  br label %66

; <label>:66                                      ; preds = %._crit_edge32.i, %.lr.ph12.i
  %indvars.iv23.i = phi i64 [ 0, %.lr.ph12.i ], [ %indvars.iv.next24.i, %._crit_edge32.i ]
  %67 = load %struct.IOBASIC_REDUCTIONLIST** %64, align 8, !tbaa !15
  %68 = getelementptr inbounds %struct.IOBASIC_REDUCTIONLIST* %67, i64 %indvars.iv23.i, i32 0
  %69 = load i32* %68, align 4, !tbaa !16
  %70 = icmp sgt i32 %69, 0
  %71 = trunc i64 %indvars.iv23.i to i32
  br i1 %70, label %72, label %._crit_edge32.i

; <label>:72                                      ; preds = %66
  %73 = call i8* @CCTK_FullName(i32 %71) #8
  %74 = call i64 @strlen(i8* %73) #8
  %75 = mul i32 %69, 15
  %76 = add i32 %75, -3
  %77 = zext i32 %76 to i64
  %78 = icmp ugt i64 %74, %77
  br i1 %78, label %79, label %84

; <label>:79                                      ; preds = %72
  %80 = add nsw i32 %75, -4
  %81 = sext i32 %80 to i64
  %.sum.i = sub i64 %74, %81
  %82 = getelementptr inbounds i8* %73, i64 %.sum.i
  %83 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([7 x i8]* @.str29, i64 0, i64 0), i8* %82) #8
  br label %86

; <label>:84                                      ; preds = %72
  %85 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([8 x i8]* @.str30, i64 0, i64 0), i32 %76, i8* %73) #8
  br label %86

; <label>:86                                      ; preds = %84, %79
  call void @free(i8* %73) #8
  br label %._crit_edge32.i

._crit_edge32.i:                                  ; preds = %86, %66
  %indvars.iv.next24.i = add nuw nsw i64 %indvars.iv23.i, 1
  %exitcond12 = icmp eq i32 %71, %65
  br i1 %exitcond12, label %.loopexit1.i, label %66

.loopexit1.i:                                     ; preds = %._crit_edge32.i, %._crit_edge16.i
  %87 = call i32 @putchar(i32 10) #8
  %88 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str31, i64 0, i64 0)) #8
  br i1 %20, label %.lr.ph9.i, label %._crit_edge10.i

.lr.ph9.i:                                        ; preds = %.loopexit1.i
  %89 = getelementptr inbounds i8* %1, i64 48
  %90 = bitcast i8* %89 to %struct.IOBASIC_REDUCTIONLIST**
  %91 = add i32 %13, -1
  br label %92

; <label>:92                                      ; preds = %.loopexit.i, %.lr.ph9.i
  %indvars.iv.i = phi i64 [ 0, %.lr.ph9.i ], [ %indvars.iv.next.i, %.loopexit.i ]
  %93 = load %struct.IOBASIC_REDUCTIONLIST** %90, align 8, !tbaa !15
  %94 = getelementptr inbounds %struct.IOBASIC_REDUCTIONLIST* %93, i64 %indvars.iv.i, i32 0
  %95 = load i32* %94, align 4, !tbaa !16
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %.loopexit.i, label %97

; <label>:97                                      ; preds = %92
  %98 = getelementptr inbounds %struct.IOBASIC_REDUCTIONLIST* %93, i64 %indvars.iv.i, i32 1
  %reduction.03.i = load %struct.IOBASIC_REDUCTION** %98, align 8
  %99 = icmp eq %struct.IOBASIC_REDUCTION* %reduction.03.i, null
  br i1 %99, label %.loopexit.i, label %.lr.ph6.i

.lr.ph6.i:                                        ; preds = %97, %.lr.ph6.i
  %reduction.04.i = phi %struct.IOBASIC_REDUCTION* [ %reduction.0.i, %.lr.ph6.i ], [ %reduction.03.i, %97 ]
  %100 = getelementptr inbounds %struct.IOBASIC_REDUCTION* %reduction.04.i, i64 0, i32 1
  %101 = load i8** %100, align 8, !tbaa !18
  %102 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.str32, i64 0, i64 0), i8* %101) #8
  %103 = getelementptr inbounds %struct.IOBASIC_REDUCTION* %reduction.04.i, i64 0, i32 4
  %reduction.0.i = load %struct.IOBASIC_REDUCTION** %103, align 8
  %104 = icmp eq %struct.IOBASIC_REDUCTION* %reduction.0.i, null
  br i1 %104, label %.loopexit.i, label %.lr.ph6.i

.loopexit.i:                                      ; preds = %.lr.ph6.i, %97, %92
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %lftr.wideiv9 = trunc i64 %indvars.iv.i to i32
  %exitcond10 = icmp eq i32 %lftr.wideiv9, %91
  br i1 %exitcond10, label %._crit_edge10.i, label %92

._crit_edge10.i:                                  ; preds = %.loopexit.i, %.loopexit1.i
  %puts.i = call i32 @puts(i8* getelementptr inbounds ([2 x i8]* @str, i64 0, i64 0)) #7
  %105 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str26, i64 0, i64 0)) #8
  br i1 %60, label %.lr.ph.i, label %PrintHeader.exit

.lr.ph.i:                                         ; preds = %._crit_edge10.i
  %106 = add i32 %num_columns.0.lcssa3436.i, -1
  br label %107

; <label>:107                                     ; preds = %107, %.lr.ph.i
  %i.12.i = phi i32 [ 0, %.lr.ph.i ], [ %109, %107 ]
  %108 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str27, i64 0, i64 0)) #8
  %109 = add nuw nsw i32 %i.12.i, 1
  %exitcond.i = icmp eq i32 %i.12.i, %106
  br i1 %exitcond.i, label %PrintHeader.exit, label %107

PrintHeader.exit:                                 ; preds = %107, %._crit_edge10.i
  %110 = call i32 @putchar(i32 10) #8
  %111 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !14
  %112 = call i32 @fflush(%struct.__sFILE* %111) #8
  store i8 0, i8* %14, align 1, !tbaa !11
  call void @llvm.lifetime.end(i64 8, i8* %18)
  br label %113

; <label>:113                                     ; preds = %12, %PrintHeader.exit
  %114 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 16
  %115 = load double* %114, align 8, !tbaa !20
  %116 = call double @fabs(double %115) #10
  %117 = fcmp ogt double %116, 1.000000e-08
  %118 = fcmp oeq double %115, 0.000000e+00
  %or.cond = or i1 %118, %117
  %119 = fcmp olt double %116, 1.000000e+08
  %or.cond1 = or i1 %119, %or.cond
  %120 = load i32* %8, align 4, !tbaa !8
  br i1 %or.cond1, label %121, label %123

; <label>:121                                     ; preds = %113
  %122 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str1, i64 0, i64 0), i32 %120, double %115) #8
  br label %.preheader

; <label>:123                                     ; preds = %113
  %124 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str2, i64 0, i64 0), i32 %120, double %115) #8
  br label %.preheader

.preheader:                                       ; preds = %123, %121
  %125 = icmp sgt i32 %13, 0
  br i1 %125, label %.lr.ph8, label %._crit_edge

.lr.ph8:                                          ; preds = %.preheader
  %126 = getelementptr inbounds i8* %1, i64 48
  %127 = bitcast i8* %126 to %struct.IOBASIC_REDUCTIONLIST**
  %128 = getelementptr inbounds i8* %1, i64 32
  %129 = bitcast i8* %128 to i32**
  %130 = add i32 %13, -1
  br label %131

; <label>:131                                     ; preds = %.loopexit, %.lr.ph8
  %indvars.iv = phi i64 [ 0, %.lr.ph8 ], [ %indvars.iv.next, %.loopexit ]
  %retval.06 = phi i32 [ 0, %.lr.ph8 ], [ %retval.2, %.loopexit ]
  %132 = load %struct.IOBASIC_REDUCTIONLIST** %127, align 8, !tbaa !15
  %133 = getelementptr inbounds %struct.IOBASIC_REDUCTIONLIST* %132, i64 %indvars.iv, i32 0
  %134 = load i32* %133, align 4, !tbaa !16
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %.loopexit, label %136

; <label>:136                                     ; preds = %131
  %137 = load i32** %129, align 8, !tbaa !21
  %138 = getelementptr inbounds i32* %137, i64 %indvars.iv
  %139 = load i32* %138, align 4, !tbaa !22
  %140 = load i32* %8, align 4, !tbaa !8
  %141 = icmp eq i32 %139, %140
  br i1 %141, label %151, label %142

; <label>:142                                     ; preds = %136
  %143 = trunc i64 %indvars.iv to i32
  %144 = call i32 @IOBasic_WriteInfo(%struct.cGH* %GH, i32 %143) #8
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %151

; <label>:146                                     ; preds = %142
  %147 = load i32* %8, align 4, !tbaa !8
  %148 = load i32** %129, align 8, !tbaa !21
  %149 = getelementptr inbounds i32* %148, i64 %indvars.iv
  store i32 %147, i32* %149, align 4, !tbaa !22
  %150 = add nsw i32 %retval.06, 1
  br label %151

; <label>:151                                     ; preds = %136, %142, %146
  %retval.1 = phi i32 [ %150, %146 ], [ %retval.06, %142 ], [ %retval.06, %136 ]
  %152 = load %struct.IOBASIC_REDUCTIONLIST** %127, align 8, !tbaa !15
  %153 = getelementptr inbounds %struct.IOBASIC_REDUCTIONLIST* %152, i64 %indvars.iv, i32 1
  %reduction.04 = load %struct.IOBASIC_REDUCTION** %153, align 8
  %154 = icmp eq %struct.IOBASIC_REDUCTION* %reduction.04, null
  br i1 %154, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %151, %171
  %reduction.05 = phi %struct.IOBASIC_REDUCTION* [ %reduction.0, %171 ], [ %reduction.04, %151 ]
  %155 = getelementptr inbounds %struct.IOBASIC_REDUCTION* %reduction.05, i64 0, i32 2
  %156 = load i8* %155, align 1, !tbaa !23
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %169, label %158

; <label>:158                                     ; preds = %.lr.ph
  %159 = getelementptr inbounds %struct.IOBASIC_REDUCTION* %reduction.05, i64 0, i32 3
  %160 = load double* %159, align 8, !tbaa !24
  %161 = call double @fabs(double %160) #10
  %162 = fcmp ogt double %161, 1.000000e-08
  %163 = fcmp oeq double %160, 0.000000e+00
  %or.cond2 = or i1 %163, %162
  %164 = fcmp olt double %161, 1.000000e+08
  %or.cond3 = or i1 %164, %or.cond2
  br i1 %or.cond3, label %165, label %167

; <label>:165                                     ; preds = %158
  %166 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.str3, i64 0, i64 0), double %160) #8
  br label %171

; <label>:167                                     ; preds = %158
  %168 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.str4, i64 0, i64 0), double %160) #8
  br label %171

; <label>:169                                     ; preds = %.lr.ph
  %170 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str5, i64 0, i64 0)) #8
  br label %171

; <label>:171                                     ; preds = %165, %167, %169
  %172 = getelementptr inbounds %struct.IOBASIC_REDUCTION* %reduction.05, i64 0, i32 4
  %reduction.0 = load %struct.IOBASIC_REDUCTION** %172, align 8
  %173 = icmp eq %struct.IOBASIC_REDUCTION* %reduction.0, null
  br i1 %173, label %.loopexit, label %.lr.ph

.loopexit:                                        ; preds = %171, %151, %131
  %retval.2 = phi i32 [ %retval.06, %131 ], [ %retval.1, %151 ], [ %retval.1, %171 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %130
  br i1 %exitcond, label %._crit_edge, label %131

._crit_edge:                                      ; preds = %.loopexit, %.preheader
  %retval.0.lcssa = phi i32 [ 0, %.preheader ], [ %retval.2, %.loopexit ]
  %174 = call i32 @putchar(i32 10) #8
  %175 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !14
  %176 = call i32 @fflush(%struct.__sFILE* %175) #8
  br label %177

; <label>:177                                     ; preds = %0, %7, %._crit_edge
  %.0 = phi i32 [ %retval.0.lcssa, %._crit_edge ], [ 0, %7 ], [ 0, %0 ]
  ret i32 %.0
}
