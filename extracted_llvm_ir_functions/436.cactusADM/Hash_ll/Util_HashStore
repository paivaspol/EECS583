define i32 @Util_HashStore(%struct.T_HASH* nocapture %hash, i32 %klen, i8* nocapture %key, i32 %hashval, i8* %data) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.T_HASH* %hash}, i64 0, metadata !60), !dbg !177
  tail call void @llvm.dbg.value(metadata !{i32 %klen}, i64 0, metadata !61), !dbg !178
  tail call void @llvm.dbg.value(metadata !{i8* %key}, i64 0, metadata !62), !dbg !179
  tail call void @llvm.dbg.value(metadata !{i32 %hashval}, i64 0, metadata !63), !dbg !180
  tail call void @llvm.dbg.value(metadata !{i8* %data}, i64 0, metadata !64), !dbg !181
  %call = tail call fastcc %struct.T_HASH_ENTRY* @HashFind(%struct.T_HASH* %hash, i32 %klen, i8* %key, i32 %hashval) #7, !dbg !182
  tail call void @llvm.dbg.value(metadata !{%struct.T_HASH_ENTRY* %call}, i64 0, metadata !66), !dbg !182
  %tobool = icmp eq %struct.T_HASH_ENTRY* %call, null, !dbg !183
  br i1 %tobool, label %if.else, label %if.then, !dbg !183

if.then:                                          ; preds = %entry
  %data3 = getelementptr inbounds %struct.T_HASH_ENTRY* %call, i64 0, i32 5, !dbg !184
  store i8* %data, i8** %data3, align 8, !dbg !184, !tbaa !151
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !65), !dbg !186
  br label %if.end, !dbg !187

if.else:                                          ; preds = %entry
  %call4 = tail call i32 @Util_HashAdd(%struct.T_HASH* %hash, i32 %klen, i8* %key, i32 %hashval, i8* %data) #7, !dbg !188
  tail call void @llvm.dbg.value(metadata !{i32 %call4}, i64 0, metadata !65), !dbg !188
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %retval1.0 = phi i32 [ 0, %if.then ], [ %call4, %if.else ]
  ret i32 %retval1.0, !dbg !190
}
