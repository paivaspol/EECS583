define i32 @CCTK_InterpLocal(%struct.cGH* %GH, i32 %operator_handle, i32 %num_points, i32 %num_dims, i32 %num_in_arrays, i32 %num_out_arrays, ...) #1 {
  %indices = alloca [1 x %struct.__va_list_tag], align 16
  %1 = load %struct.cHandledData** @interp_operators, align 8, !tbaa !2
  %2 = tail call i8* @Util_GetHandledData(%struct.cHandledData* %1, i32 %operator_handle) #6
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %6

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @CCTK_Warn(i32 3, i32 731, i8* getelementptr inbounds ([75 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8]* @.str12, i64 0, i64 0)) #6
  br label %226

; <label>:6                                       ; preds = %0
  %7 = sext i32 %num_dims to i64
  %8 = shl nsw i64 %7, 2
  %9 = tail call i8* @malloc(i64 %8) #6
  %10 = bitcast i8* %9 to i32*
  %11 = shl nsw i64 %7, 3
  %12 = tail call i8* @malloc(i64 %11) #6
  %13 = bitcast i8* %12 to i8**
  %14 = tail call i8* @malloc(i64 %8) #6
  %15 = bitcast i8* %14 to i32*
  %16 = tail call i8* @malloc(i64 %11) #6
  %17 = bitcast i8* %16 to i8**
  %18 = tail call i8* @malloc(i64 %8) #6
  %19 = bitcast i8* %18 to i32*
  %20 = sext i32 %num_in_arrays to i64
  %21 = shl nsw i64 %20, 3
  %22 = tail call i8* @malloc(i64 %21) #6
  %23 = bitcast i8* %22 to i8**
  %24 = shl nsw i64 %20, 2
  %25 = tail call i8* @malloc(i64 %24) #6
  %26 = bitcast i8* %25 to i32*
  %27 = sext i32 %num_out_arrays to i64
  %28 = shl nsw i64 %27, 3
  %29 = tail call i8* @malloc(i64 %28) #6
  %30 = bitcast i8* %29 to i8**
  %31 = shl nsw i64 %27, 2
  %32 = tail call i8* @malloc(i64 %31) #6
  %33 = bitcast i8* %32 to i32*
  %34 = bitcast [1 x %struct.__va_list_tag]* %indices to i8*
  call void @llvm.va_start(i8* %34)
  %35 = icmp sgt i32 %num_dims, 0
  br i1 %35, label %.lr.ph41, label %.preheader19

.lr.ph41:                                         ; preds = %6
  %36 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 0
  %37 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 3
  %38 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 2
  %39 = add i32 %num_dims, -1
  %.pre = load i32* %36, align 16
  br label %44

.preheader23:                                     ; preds = %55
  br i1 %35, label %.lr.ph38, label %.preheader19

.lr.ph38:                                         ; preds = %.preheader23
  %40 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 0
  %41 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 3
  %42 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 2
  %43 = add i32 %num_dims, -1
  %.pre74 = load i32* %40, align 16
  br label %64

; <label>:44                                      ; preds = %55, %.lr.ph41
  %45 = phi i32 [ %.pre, %.lr.ph41 ], [ %56, %55 ]
  %indvars.iv70 = phi i64 [ 0, %.lr.ph41 ], [ %indvars.iv.next71, %55 ]
  %46 = icmp ult i32 %45, 41
  br i1 %46, label %47, label %52

; <label>:47                                      ; preds = %44
  %48 = load i8** %37, align 16
  %49 = sext i32 %45 to i64
  %50 = getelementptr i8* %48, i64 %49
  %51 = add i32 %45, 8
  store i32 %51, i32* %36, align 16
  br label %55

; <label>:52                                      ; preds = %44
  %53 = load i8** %38, align 8
  %54 = getelementptr i8* %53, i64 8
  store i8* %54, i8** %38, align 8
  br label %55

; <label>:55                                      ; preds = %52, %47
  %56 = phi i32 [ %51, %47 ], [ %45, %52 ]
  %.in16 = phi i8* [ %50, %47 ], [ %53, %52 ]
  %57 = bitcast i8* %.in16 to i32*
  %58 = load i32* %57, align 4
  %59 = getelementptr inbounds i32* %10, i64 %indvars.iv70
  store i32 %58, i32* %59, align 4, !tbaa !11
  %indvars.iv.next71 = add nuw nsw i64 %indvars.iv70, 1
  %lftr.wideiv72 = trunc i64 %indvars.iv70 to i32
  %exitcond73 = icmp eq i32 %lftr.wideiv72, %39
  br i1 %exitcond73, label %.preheader23, label %44

.preheader22:                                     ; preds = %75
  br i1 %35, label %.lr.ph36, label %.preheader19

.lr.ph36:                                         ; preds = %.preheader22
  %60 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 0
  %61 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 3
  %62 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 2
  %63 = add i32 %num_dims, -1
  %.pre75 = load i32* %60, align 16
  br label %85

; <label>:64                                      ; preds = %75, %.lr.ph38
  %65 = phi i32 [ %.pre74, %.lr.ph38 ], [ %76, %75 ]
  %indvars.iv66 = phi i64 [ 0, %.lr.ph38 ], [ %indvars.iv.next67, %75 ]
  %66 = icmp ult i32 %65, 41
  br i1 %66, label %67, label %72

; <label>:67                                      ; preds = %64
  %68 = load i8** %41, align 16
  %69 = sext i32 %65 to i64
  %70 = getelementptr i8* %68, i64 %69
  %71 = add i32 %65, 8
  store i32 %71, i32* %40, align 16
  br label %75

; <label>:72                                      ; preds = %64
  %73 = load i8** %42, align 8
  %74 = getelementptr i8* %73, i64 8
  store i8* %74, i8** %42, align 8
  br label %75

; <label>:75                                      ; preds = %72, %67
  %76 = phi i32 [ %71, %67 ], [ %65, %72 ]
  %.in15 = phi i8* [ %70, %67 ], [ %73, %72 ]
  %77 = bitcast i8* %.in15 to i64*
  %78 = load i64* %77, align 8
  %79 = getelementptr inbounds i8** %13, i64 %indvars.iv66
  %80 = bitcast i8** %79 to i64*
  store i64 %78, i64* %80, align 8, !tbaa !2
  %indvars.iv.next67 = add nuw nsw i64 %indvars.iv66, 1
  %lftr.wideiv68 = trunc i64 %indvars.iv66 to i32
  %exitcond69 = icmp eq i32 %lftr.wideiv68, %43
  br i1 %exitcond69, label %.preheader22, label %64

.preheader21:                                     ; preds = %96
  br i1 %35, label %.lr.ph34, label %.preheader19

.lr.ph34:                                         ; preds = %.preheader21
  %81 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 0
  %82 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 3
  %83 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 2
  %84 = add i32 %num_dims, -1
  %.pre76 = load i32* %81, align 16
  br label %105

; <label>:85                                      ; preds = %96, %.lr.ph36
  %86 = phi i32 [ %.pre75, %.lr.ph36 ], [ %97, %96 ]
  %indvars.iv62 = phi i64 [ 0, %.lr.ph36 ], [ %indvars.iv.next63, %96 ]
  %87 = icmp ult i32 %86, 41
  br i1 %87, label %88, label %93

; <label>:88                                      ; preds = %85
  %89 = load i8** %61, align 16
  %90 = sext i32 %86 to i64
  %91 = getelementptr i8* %89, i64 %90
  %92 = add i32 %86, 8
  store i32 %92, i32* %60, align 16
  br label %96

; <label>:93                                      ; preds = %85
  %94 = load i8** %62, align 8
  %95 = getelementptr i8* %94, i64 8
  store i8* %95, i8** %62, align 8
  br label %96

; <label>:96                                      ; preds = %93, %88
  %97 = phi i32 [ %92, %88 ], [ %86, %93 ]
  %.in14 = phi i8* [ %91, %88 ], [ %94, %93 ]
  %98 = bitcast i8* %.in14 to i32*
  %99 = load i32* %98, align 4
  %100 = getelementptr inbounds i32* %15, i64 %indvars.iv62
  store i32 %99, i32* %100, align 4, !tbaa !11
  %indvars.iv.next63 = add nuw nsw i64 %indvars.iv62, 1
  %lftr.wideiv64 = trunc i64 %indvars.iv62 to i32
  %exitcond65 = icmp eq i32 %lftr.wideiv64, %63
  br i1 %exitcond65, label %.preheader21, label %85

.preheader20:                                     ; preds = %116
  br i1 %35, label %.lr.ph32, label %.preheader19

.lr.ph32:                                         ; preds = %.preheader20
  %101 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 0
  %102 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 3
  %103 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 2
  %104 = add i32 %num_dims, -1
  %.pre77 = load i32* %101, align 16
  br label %127

; <label>:105                                     ; preds = %116, %.lr.ph34
  %106 = phi i32 [ %.pre76, %.lr.ph34 ], [ %117, %116 ]
  %indvars.iv58 = phi i64 [ 0, %.lr.ph34 ], [ %indvars.iv.next59, %116 ]
  %107 = icmp ult i32 %106, 41
  br i1 %107, label %108, label %113

; <label>:108                                     ; preds = %105
  %109 = load i8** %82, align 16
  %110 = sext i32 %106 to i64
  %111 = getelementptr i8* %109, i64 %110
  %112 = add i32 %106, 8
  store i32 %112, i32* %81, align 16
  br label %116

; <label>:113                                     ; preds = %105
  %114 = load i8** %83, align 8
  %115 = getelementptr i8* %114, i64 8
  store i8* %115, i8** %83, align 8
  br label %116

; <label>:116                                     ; preds = %113, %108
  %117 = phi i32 [ %112, %108 ], [ %106, %113 ]
  %.in13 = phi i8* [ %111, %108 ], [ %114, %113 ]
  %118 = bitcast i8* %.in13 to i64*
  %119 = load i64* %118, align 8
  %120 = getelementptr inbounds i8** %17, i64 %indvars.iv58
  %121 = bitcast i8** %120 to i64*
  store i64 %119, i64* %121, align 8, !tbaa !2
  %indvars.iv.next59 = add nuw nsw i64 %indvars.iv58, 1
  %lftr.wideiv60 = trunc i64 %indvars.iv58 to i32
  %exitcond61 = icmp eq i32 %lftr.wideiv60, %84
  br i1 %exitcond61, label %.preheader20, label %105

.preheader19:                                     ; preds = %138, %6, %.preheader23, %.preheader22, %.preheader21, %.preheader20
  %122 = icmp sgt i32 %num_in_arrays, 0
  br i1 %122, label %.lr.ph30, label %.preheader17

.lr.ph30:                                         ; preds = %.preheader19
  %123 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 0
  %124 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 3
  %125 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 2
  %126 = add i32 %num_in_arrays, -1
  %.pre78 = load i32* %123, align 16
  br label %147

; <label>:127                                     ; preds = %138, %.lr.ph32
  %128 = phi i32 [ %.pre77, %.lr.ph32 ], [ %139, %138 ]
  %indvars.iv54 = phi i64 [ 0, %.lr.ph32 ], [ %indvars.iv.next55, %138 ]
  %129 = icmp ult i32 %128, 41
  br i1 %129, label %130, label %135

; <label>:130                                     ; preds = %127
  %131 = load i8** %102, align 16
  %132 = sext i32 %128 to i64
  %133 = getelementptr i8* %131, i64 %132
  %134 = add i32 %128, 8
  store i32 %134, i32* %101, align 16
  br label %138

; <label>:135                                     ; preds = %127
  %136 = load i8** %103, align 8
  %137 = getelementptr i8* %136, i64 8
  store i8* %137, i8** %103, align 8
  br label %138

; <label>:138                                     ; preds = %135, %130
  %139 = phi i32 [ %134, %130 ], [ %128, %135 ]
  %.in12 = phi i8* [ %133, %130 ], [ %136, %135 ]
  %140 = bitcast i8* %.in12 to i32*
  %141 = load i32* %140, align 4
  %142 = getelementptr inbounds i32* %19, i64 %indvars.iv54
  store i32 %141, i32* %142, align 4, !tbaa !11
  %indvars.iv.next55 = add nuw nsw i64 %indvars.iv54, 1
  %lftr.wideiv56 = trunc i64 %indvars.iv54 to i32
  %exitcond57 = icmp eq i32 %lftr.wideiv56, %104
  br i1 %exitcond57, label %.preheader19, label %127

.preheader18:                                     ; preds = %158
  br i1 %122, label %.lr.ph28, label %.preheader17

.lr.ph28:                                         ; preds = %.preheader18
  %143 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 0
  %144 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 3
  %145 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 2
  %146 = add i32 %num_in_arrays, -1
  %.pre79 = load i32* %143, align 16
  br label %169

; <label>:147                                     ; preds = %158, %.lr.ph30
  %148 = phi i32 [ %.pre78, %.lr.ph30 ], [ %159, %158 ]
  %indvars.iv50 = phi i64 [ 0, %.lr.ph30 ], [ %indvars.iv.next51, %158 ]
  %149 = icmp ult i32 %148, 41
  br i1 %149, label %150, label %155

; <label>:150                                     ; preds = %147
  %151 = load i8** %124, align 16
  %152 = sext i32 %148 to i64
  %153 = getelementptr i8* %151, i64 %152
  %154 = add i32 %148, 8
  store i32 %154, i32* %123, align 16
  br label %158

; <label>:155                                     ; preds = %147
  %156 = load i8** %125, align 8
  %157 = getelementptr i8* %156, i64 8
  store i8* %157, i8** %125, align 8
  br label %158

; <label>:158                                     ; preds = %155, %150
  %159 = phi i32 [ %154, %150 ], [ %148, %155 ]
  %.in11 = phi i8* [ %153, %150 ], [ %156, %155 ]
  %160 = bitcast i8* %.in11 to i64*
  %161 = load i64* %160, align 8
  %162 = getelementptr inbounds i8** %23, i64 %indvars.iv50
  %163 = bitcast i8** %162 to i64*
  store i64 %161, i64* %163, align 8, !tbaa !2
  %indvars.iv.next51 = add nuw nsw i64 %indvars.iv50, 1
  %lftr.wideiv52 = trunc i64 %indvars.iv50 to i32
  %exitcond53 = icmp eq i32 %lftr.wideiv52, %126
  br i1 %exitcond53, label %.preheader18, label %147

.preheader17:                                     ; preds = %180, %.preheader19, %.preheader18
  %164 = icmp sgt i32 %num_out_arrays, 0
  br i1 %164, label %.lr.ph26, label %._crit_edge

.lr.ph26:                                         ; preds = %.preheader17
  %165 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 0
  %166 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 3
  %167 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 2
  %168 = add i32 %num_out_arrays, -1
  %.pre80 = load i32* %165, align 16
  br label %189

; <label>:169                                     ; preds = %180, %.lr.ph28
  %170 = phi i32 [ %.pre79, %.lr.ph28 ], [ %181, %180 ]
  %indvars.iv46 = phi i64 [ 0, %.lr.ph28 ], [ %indvars.iv.next47, %180 ]
  %171 = icmp ult i32 %170, 41
  br i1 %171, label %172, label %177

; <label>:172                                     ; preds = %169
  %173 = load i8** %144, align 16
  %174 = sext i32 %170 to i64
  %175 = getelementptr i8* %173, i64 %174
  %176 = add i32 %170, 8
  store i32 %176, i32* %143, align 16
  br label %180

; <label>:177                                     ; preds = %169
  %178 = load i8** %145, align 8
  %179 = getelementptr i8* %178, i64 8
  store i8* %179, i8** %145, align 8
  br label %180

; <label>:180                                     ; preds = %177, %172
  %181 = phi i32 [ %176, %172 ], [ %170, %177 ]
  %.in10 = phi i8* [ %175, %172 ], [ %178, %177 ]
  %182 = bitcast i8* %.in10 to i32*
  %183 = load i32* %182, align 4
  %184 = getelementptr inbounds i32* %26, i64 %indvars.iv46
  store i32 %183, i32* %184, align 4, !tbaa !11
  %indvars.iv.next47 = add nuw nsw i64 %indvars.iv46, 1
  %lftr.wideiv48 = trunc i64 %indvars.iv46 to i32
  %exitcond49 = icmp eq i32 %lftr.wideiv48, %146
  br i1 %exitcond49, label %.preheader17, label %169

.preheader:                                       ; preds = %200
  br i1 %164, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader
  %185 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 0
  %186 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 3
  %187 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 2
  %188 = add i32 %num_out_arrays, -1
  %.pre81 = load i32* %185, align 16
  br label %206

; <label>:189                                     ; preds = %200, %.lr.ph26
  %190 = phi i32 [ %.pre80, %.lr.ph26 ], [ %201, %200 ]
  %indvars.iv42 = phi i64 [ 0, %.lr.ph26 ], [ %indvars.iv.next43, %200 ]
  %191 = icmp ult i32 %190, 41
  br i1 %191, label %192, label %197

; <label>:192                                     ; preds = %189
  %193 = load i8** %166, align 16
  %194 = sext i32 %190 to i64
  %195 = getelementptr i8* %193, i64 %194
  %196 = add i32 %190, 8
  store i32 %196, i32* %165, align 16
  br label %200

; <label>:197                                     ; preds = %189
  %198 = load i8** %167, align 8
  %199 = getelementptr i8* %198, i64 8
  store i8* %199, i8** %167, align 8
  br label %200

; <label>:200                                     ; preds = %197, %192
  %201 = phi i32 [ %196, %192 ], [ %190, %197 ]
  %.in9 = phi i8* [ %195, %192 ], [ %198, %197 ]
  %202 = bitcast i8* %.in9 to i64*
  %203 = load i64* %202, align 8
  %204 = getelementptr inbounds i8** %30, i64 %indvars.iv42
  %205 = bitcast i8** %204 to i64*
  store i64 %203, i64* %205, align 8, !tbaa !2
  %indvars.iv.next43 = add nuw nsw i64 %indvars.iv42, 1
  %lftr.wideiv44 = trunc i64 %indvars.iv42 to i32
  %exitcond45 = icmp eq i32 %lftr.wideiv44, %168
  br i1 %exitcond45, label %.preheader, label %189

; <label>:206                                     ; preds = %217, %.lr.ph
  %207 = phi i32 [ %.pre81, %.lr.ph ], [ %218, %217 ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %217 ]
  %208 = icmp ult i32 %207, 41
  br i1 %208, label %209, label %214

; <label>:209                                     ; preds = %206
  %210 = load i8** %186, align 16
  %211 = sext i32 %207 to i64
  %212 = getelementptr i8* %210, i64 %211
  %213 = add i32 %207, 8
  store i32 %213, i32* %185, align 16
  br label %217

; <label>:214                                     ; preds = %206
  %215 = load i8** %187, align 8
  %216 = getelementptr i8* %215, i64 8
  store i8* %216, i8** %187, align 8
  br label %217

; <label>:217                                     ; preds = %214, %209
  %218 = phi i32 [ %213, %209 ], [ %207, %214 ]
  %.in = phi i8* [ %212, %209 ], [ %215, %214 ]
  %219 = bitcast i8* %.in to i32*
  %220 = load i32* %219, align 4
  %221 = getelementptr inbounds i32* %33, i64 %indvars.iv
  store i32 %220, i32* %221, align 4, !tbaa !11
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %188
  br i1 %exitcond, label %._crit_edge, label %206

._crit_edge:                                      ; preds = %217, %.preheader17, %.preheader
  call void @llvm.va_end(i8* %34)
  %222 = getelementptr inbounds i8* %2, i64 24
  %223 = bitcast i8* %222 to i32 (%struct.cGH*, i32, i32, i32, i32, i32*, i8**, i32*, i8**, i32*, i8**, i32*, i8**, i32*)**
  %224 = load i32 (%struct.cGH*, i32, i32, i32, i32, i32*, i8**, i32*, i8**, i32*, i8**, i32*, i8**, i32*)** %223, align 8, !tbaa !10
  %225 = call i32 %224(%struct.cGH* %GH, i32 %num_points, i32 %num_dims, i32 %num_in_arrays, i32 %num_out_arrays, i32* %10, i8** %13, i32* %15, i8** %17, i32* %19, i8** %23, i32* %26, i8** %30, i32* %33) #6
  call void @free(i8* %32) #7
  call void @free(i8* %29) #7
  call void @free(i8* %25) #7
  call void @free(i8* %22) #7
  call void @free(i8* %18) #7
  call void @free(i8* %16) #7
  call void @free(i8* %14) #7
  call void @free(i8* %12) #7
  call void @free(i8* %9) #7
  br label %226

; <label>:226                                     ; preds = %._crit_edge, %4
  %retcode.0 = phi i32 [ -1, %4 ], [ %225, %._crit_edge ]
  ret i32 %retcode.0
}
