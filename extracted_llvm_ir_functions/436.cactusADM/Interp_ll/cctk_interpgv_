define void @cctk_interpgv_(i32* nocapture %fortranreturn, %struct.cGH* %GH, i32* nocapture readonly %operator_handle, i32* nocapture readonly %coord_system_handle, i32* nocapture readonly %num_points, i32* nocapture readonly %num_in_array_indices, i32* nocapture readonly %num_out_arrays, ...) #1 {
  %indices = alloca [1 x %struct.__va_list_tag], align 16
  tail call void @llvm.dbg.value(metadata i32* %fortranreturn, i64 0, metadata !166, metadata !309), !dbg !555
  tail call void @llvm.dbg.value(metadata %struct.cGH* %GH, i64 0, metadata !167, metadata !309), !dbg !556
  tail call void @llvm.dbg.value(metadata i32* %operator_handle, i64 0, metadata !168, metadata !309), !dbg !557
  tail call void @llvm.dbg.value(metadata i32* %coord_system_handle, i64 0, metadata !169, metadata !309), !dbg !558
  tail call void @llvm.dbg.value(metadata i32* %num_points, i64 0, metadata !170, metadata !309), !dbg !559
  tail call void @llvm.dbg.value(metadata i32* %num_in_array_indices, i64 0, metadata !171, metadata !309), !dbg !560
  tail call void @llvm.dbg.value(metadata i32* %num_out_arrays, i64 0, metadata !172, metadata !309), !dbg !561
  tail call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %indices, metadata !173, metadata !309), !dbg !562
  %1 = load %struct.cHandledData** @interp_operators, align 8, !dbg !563, !tbaa !322
  %2 = load i32* %operator_handle, align 4, !dbg !564, !tbaa !360
  %3 = tail call i8* @Util_GetHandledData(%struct.cHandledData* %1, i32 %2) #7, !dbg !565
  %4 = load i32* %coord_system_handle, align 4, !dbg !566, !tbaa !360
  %5 = tail call i8* @CCTK_CoordSystemName(i32 %4) #7, !dbg !567
  tail call void @llvm.dbg.value(metadata i8* %5, i64 0, metadata !176, metadata !309), !dbg !568
  %6 = icmp eq i8* %3, null, !dbg !569
  br i1 %6, label %7, label %9, !dbg !570

; <label>:7                                       ; preds = %0
  %8 = tail call i32 @CCTK_Warn(i32 3, i32 566, i8* getelementptr inbounds ([75 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([77 x i8]* @.str10, i64 0, i64 0)) #7, !dbg !571
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !175, metadata !309), !dbg !573
  br label %156, !dbg !574

; <label>:9                                       ; preds = %0
  %10 = icmp eq i8* %5, null, !dbg !575
  br i1 %10, label %11, label %13, !dbg !576

; <label>:11                                      ; preds = %9
  %12 = tail call i32 @CCTK_Warn(i32 3, i32 573, i8* getelementptr inbounds ([75 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8]* @.str11, i64 0, i64 0)) #7, !dbg !577
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !175, metadata !309), !dbg !573
  br label %156, !dbg !579

; <label>:13                                      ; preds = %9
  %14 = tail call i32 @CCTK_CoordSystemDim(i8* %5) #7, !dbg !580
  tail call void @llvm.dbg.value(metadata i32 %14, i64 0, metadata !174, metadata !309), !dbg !581
  %15 = sext i32 %14 to i64, !dbg !582
  %16 = shl nsw i64 %15, 3, !dbg !583
  %17 = tail call i8* @malloc(i64 %16) #7, !dbg !584
  %18 = bitcast i8* %17 to i8**, !dbg !585
  tail call void @llvm.dbg.value(metadata i8** %18, i64 0, metadata !180, metadata !309), !dbg !586
  %19 = shl nsw i64 %15, 2, !dbg !587
  %20 = tail call i8* @malloc(i64 %19) #7, !dbg !588
  %21 = bitcast i8* %20 to i32*, !dbg !589
  tail call void @llvm.dbg.value(metadata i32* %21, i64 0, metadata !178, metadata !309), !dbg !590
  %22 = load i32* %num_in_array_indices, align 4, !dbg !591, !tbaa !360
  %23 = sext i32 %22 to i64, !dbg !591
  %24 = shl nsw i64 %23, 2, !dbg !592
  %25 = tail call i8* @malloc(i64 %24) #7, !dbg !593
  %26 = bitcast i8* %25 to i32*, !dbg !594
  tail call void @llvm.dbg.value(metadata i32* %26, i64 0, metadata !177, metadata !309), !dbg !595
  %27 = load i32* %num_out_arrays, align 4, !dbg !596, !tbaa !360
  %28 = sext i32 %27 to i64, !dbg !596
  %29 = shl nsw i64 %28, 3, !dbg !597
  %30 = tail call i8* @malloc(i64 %29) #7, !dbg !598
  %31 = bitcast i8* %30 to i8**, !dbg !599
  tail call void @llvm.dbg.value(metadata i8** %31, i64 0, metadata !181, metadata !309), !dbg !600
  %32 = shl nsw i64 %28, 2, !dbg !601
  %33 = tail call i8* @malloc(i64 %32) #7, !dbg !602
  %34 = bitcast i8* %33 to i32*, !dbg !603
  tail call void @llvm.dbg.value(metadata i32* %34, i64 0, metadata !179, metadata !309), !dbg !604
  %35 = bitcast [1 x %struct.__va_list_tag]* %indices to i8*, !dbg !605
  call void @llvm.va_start(i8* %35), !dbg !605
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !183, metadata !309), !dbg !606
  %36 = icmp sgt i32 %14, 0, !dbg !607
  br i1 %36, label %.lr.ph21, label %.preheader10, !dbg !610

.lr.ph21:                                         ; preds = %13
  %37 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 0, !dbg !611
  %38 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 3, !dbg !611
  %39 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 2, !dbg !611
  %40 = add i32 %14, -1, !dbg !610
  %.pre = load i32* %37, align 16, !dbg !611
  br label %45, !dbg !610

.preheader11:                                     ; preds = %56
  br i1 %36, label %.lr.ph18, label %.preheader10, !dbg !613

.lr.ph18:                                         ; preds = %.preheader11
  %41 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 0, !dbg !615
  %42 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 3, !dbg !615
  %43 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 2, !dbg !615
  %44 = add i32 %14, -1, !dbg !613
  %.pre32 = load i32* %41, align 16, !dbg !615
  br label %67, !dbg !613

; <label>:45                                      ; preds = %56, %.lr.ph21
  %46 = phi i32 [ %.pre, %.lr.ph21 ], [ %57, %56 ], !dbg !611
  %indvars.iv28 = phi i64 [ 0, %.lr.ph21 ], [ %indvars.iv.next29, %56 ]
  %47 = icmp ult i32 %46, 41, !dbg !611
  br i1 %47, label %48, label %53, !dbg !611

; <label>:48                                      ; preds = %45
  %49 = load i8** %38, align 16, !dbg !611
  %50 = sext i32 %46 to i64, !dbg !611
  %51 = getelementptr i8* %49, i64 %50, !dbg !611
  %52 = add i32 %46, 8, !dbg !611
  store i32 %52, i32* %37, align 16, !dbg !611
  br label %56, !dbg !611

; <label>:53                                      ; preds = %45
  %54 = load i8** %39, align 8, !dbg !611
  %55 = getelementptr i8* %54, i64 8, !dbg !611
  store i8* %55, i8** %39, align 8, !dbg !611
  br label %56, !dbg !611

; <label>:56                                      ; preds = %53, %48
  %57 = phi i32 [ %52, %48 ], [ %46, %53 ]
  %.in8 = phi i8* [ %51, %48 ], [ %54, %53 ]
  %58 = bitcast i8* %.in8 to i64*, !dbg !611
  %59 = load i64* %58, align 8, !dbg !611
  %60 = getelementptr inbounds i8** %18, i64 %indvars.iv28, !dbg !611
  %61 = bitcast i8** %60 to i64*, !dbg !611
  store i64 %59, i64* %61, align 8, !dbg !611, !tbaa !322
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !610
  %lftr.wideiv30 = trunc i64 %indvars.iv28 to i32, !dbg !610
  %exitcond31 = icmp eq i32 %lftr.wideiv30, %40, !dbg !610
  br i1 %exitcond31, label %.preheader11, label %45, !dbg !610

.preheader10:                                     ; preds = %78, %13, %.preheader11
  %62 = load i32* %num_in_array_indices, align 4, !dbg !618, !tbaa !360
  %63 = icmp sgt i32 %62, 0, !dbg !618
  br i1 %63, label %.lr.ph16, label %.preheader9, !dbg !621

.lr.ph16:                                         ; preds = %.preheader10
  %64 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 0, !dbg !622
  %65 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 3, !dbg !622
  %66 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 2, !dbg !622
  %.pre33 = load i32* %64, align 16, !dbg !622
  br label %89, !dbg !621

; <label>:67                                      ; preds = %78, %.lr.ph18
  %68 = phi i32 [ %.pre32, %.lr.ph18 ], [ %79, %78 ], !dbg !615
  %indvars.iv26 = phi i64 [ 0, %.lr.ph18 ], [ %indvars.iv.next27, %78 ]
  %69 = icmp ult i32 %68, 41, !dbg !615
  br i1 %69, label %70, label %75, !dbg !615

; <label>:70                                      ; preds = %67
  %71 = load i8** %42, align 16, !dbg !615
  %72 = sext i32 %68 to i64, !dbg !615
  %73 = getelementptr i8* %71, i64 %72, !dbg !615
  %74 = add i32 %68, 8, !dbg !615
  store i32 %74, i32* %41, align 16, !dbg !615
  br label %78, !dbg !615

; <label>:75                                      ; preds = %67
  %76 = load i8** %43, align 8, !dbg !615
  %77 = getelementptr i8* %76, i64 8, !dbg !615
  store i8* %77, i8** %43, align 8, !dbg !615
  br label %78, !dbg !615

; <label>:78                                      ; preds = %75, %70
  %79 = phi i32 [ %74, %70 ], [ %68, %75 ]
  %.in7 = phi i8* [ %73, %70 ], [ %76, %75 ]
  %80 = bitcast i8* %.in7 to i32**, !dbg !615
  %81 = load i32** %80, align 8, !dbg !615
  %82 = load i32* %81, align 4, !dbg !615, !tbaa !360
  %83 = getelementptr inbounds i32* %21, i64 %indvars.iv26, !dbg !615
  store i32 %82, i32* %83, align 4, !dbg !615, !tbaa !360
  %indvars.iv.next27 = add nuw nsw i64 %indvars.iv26, 1, !dbg !613
  %lftr.wideiv = trunc i64 %indvars.iv26 to i32, !dbg !613
  %exitcond = icmp eq i32 %lftr.wideiv, %44, !dbg !613
  br i1 %exitcond, label %.preheader10, label %67, !dbg !613

.preheader9:                                      ; preds = %100, %.preheader10
  %84 = load i32* %num_out_arrays, align 4, !dbg !624, !tbaa !360
  %85 = icmp sgt i32 %84, 0, !dbg !624
  br i1 %85, label %.lr.ph14, label %._crit_edge, !dbg !627

.lr.ph14:                                         ; preds = %.preheader9
  %86 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 0, !dbg !628
  %87 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 3, !dbg !628
  %88 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 2, !dbg !628
  %.pre34 = load i32* %86, align 16, !dbg !628
  br label %111, !dbg !627

; <label>:89                                      ; preds = %.lr.ph16, %100
  %90 = phi i32 [ %.pre33, %.lr.ph16 ], [ %101, %100 ], !dbg !622
  %indvars.iv24 = phi i64 [ 0, %.lr.ph16 ], [ %indvars.iv.next25, %100 ]
  %91 = icmp ult i32 %90, 41, !dbg !622
  br i1 %91, label %92, label %97, !dbg !622

; <label>:92                                      ; preds = %89
  %93 = load i8** %65, align 16, !dbg !622
  %94 = sext i32 %90 to i64, !dbg !622
  %95 = getelementptr i8* %93, i64 %94, !dbg !622
  %96 = add i32 %90, 8, !dbg !622
  store i32 %96, i32* %64, align 16, !dbg !622
  br label %100, !dbg !622

; <label>:97                                      ; preds = %89
  %98 = load i8** %66, align 8, !dbg !622
  %99 = getelementptr i8* %98, i64 8, !dbg !622
  store i8* %99, i8** %66, align 8, !dbg !622
  br label %100, !dbg !622

; <label>:100                                     ; preds = %97, %92
  %101 = phi i32 [ %96, %92 ], [ %90, %97 ]
  %.in6 = phi i8* [ %95, %92 ], [ %98, %97 ]
  %102 = bitcast i8* %.in6 to i32**, !dbg !622
  %103 = load i32** %102, align 8, !dbg !622
  %104 = load i32* %103, align 4, !dbg !622, !tbaa !360
  %105 = getelementptr inbounds i32* %26, i64 %indvars.iv24, !dbg !622
  store i32 %104, i32* %105, align 4, !dbg !622, !tbaa !360
  %indvars.iv.next25 = add nuw nsw i64 %indvars.iv24, 1, !dbg !621
  %106 = sext i32 %62 to i64, !dbg !618
  %107 = icmp slt i64 %indvars.iv.next25, %106, !dbg !618
  br i1 %107, label %89, label %.preheader9, !dbg !621

.preheader:                                       ; preds = %122
  br i1 %85, label %.lr.ph, label %._crit_edge, !dbg !630

.lr.ph:                                           ; preds = %.preheader
  %108 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 0, !dbg !632
  %109 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 3, !dbg !632
  %110 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 2, !dbg !632
  %.pre35 = load i32* %108, align 16, !dbg !632
  br label %130, !dbg !630

; <label>:111                                     ; preds = %.lr.ph14, %122
  %112 = phi i32 [ %.pre34, %.lr.ph14 ], [ %123, %122 ], !dbg !628
  %indvars.iv22 = phi i64 [ 0, %.lr.ph14 ], [ %indvars.iv.next23, %122 ]
  %113 = icmp ult i32 %112, 41, !dbg !628
  br i1 %113, label %114, label %119, !dbg !628

; <label>:114                                     ; preds = %111
  %115 = load i8** %87, align 16, !dbg !628
  %116 = sext i32 %112 to i64, !dbg !628
  %117 = getelementptr i8* %115, i64 %116, !dbg !628
  %118 = add i32 %112, 8, !dbg !628
  store i32 %118, i32* %86, align 16, !dbg !628
  br label %122, !dbg !628

; <label>:119                                     ; preds = %111
  %120 = load i8** %88, align 8, !dbg !628
  %121 = getelementptr i8* %120, i64 8, !dbg !628
  store i8* %121, i8** %88, align 8, !dbg !628
  br label %122, !dbg !628

; <label>:122                                     ; preds = %119, %114
  %123 = phi i32 [ %118, %114 ], [ %112, %119 ]
  %.in5 = phi i8* [ %117, %114 ], [ %120, %119 ]
  %124 = bitcast i8* %.in5 to i64*, !dbg !628
  %125 = load i64* %124, align 8, !dbg !628
  %126 = getelementptr inbounds i8** %31, i64 %indvars.iv22, !dbg !628
  %127 = bitcast i8** %126 to i64*, !dbg !628
  store i64 %125, i64* %127, align 8, !dbg !628, !tbaa !322
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !627
  %128 = sext i32 %84 to i64, !dbg !624
  %129 = icmp slt i64 %indvars.iv.next23, %128, !dbg !624
  br i1 %129, label %111, label %.preheader, !dbg !627

; <label>:130                                     ; preds = %.lr.ph, %141
  %131 = phi i32 [ %.pre35, %.lr.ph ], [ %142, %141 ], !dbg !632
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %141 ]
  %132 = icmp ult i32 %131, 41, !dbg !632
  br i1 %132, label %133, label %138, !dbg !632

; <label>:133                                     ; preds = %130
  %134 = load i8** %109, align 16, !dbg !632
  %135 = sext i32 %131 to i64, !dbg !632
  %136 = getelementptr i8* %134, i64 %135, !dbg !632
  %137 = add i32 %131, 8, !dbg !632
  store i32 %137, i32* %108, align 16, !dbg !632
  br label %141, !dbg !632

; <label>:138                                     ; preds = %130
  %139 = load i8** %110, align 8, !dbg !632
  %140 = getelementptr i8* %139, i64 8, !dbg !632
  store i8* %140, i8** %110, align 8, !dbg !632
  br label %141, !dbg !632

; <label>:141                                     ; preds = %138, %133
  %142 = phi i32 [ %137, %133 ], [ %131, %138 ]
  %.in = phi i8* [ %136, %133 ], [ %139, %138 ]
  %143 = bitcast i8* %.in to i32**, !dbg !632
  %144 = load i32** %143, align 8, !dbg !632
  %145 = load i32* %144, align 4, !dbg !632, !tbaa !360
  %146 = getelementptr inbounds i32* %34, i64 %indvars.iv, !dbg !632
  store i32 %145, i32* %146, align 4, !dbg !632, !tbaa !360
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !630
  %147 = sext i32 %84 to i64, !dbg !635
  %148 = icmp slt i64 %indvars.iv.next, %147, !dbg !635
  br i1 %148, label %130, label %._crit_edge, !dbg !630

._crit_edge:                                      ; preds = %141, %.preheader9, %.preheader
  call void @llvm.va_end(i8* %35), !dbg !636
  %149 = getelementptr inbounds i8* %3, i64 16, !dbg !637
  %150 = bitcast i8* %149 to i32 (%struct.cGH*, i8*, i32, i32, i32, i8**, i32*, i32*, i8**, i32*)**, !dbg !637
  %151 = load i32 (%struct.cGH*, i8*, i32, i32, i32, i8**, i32*, i32*, i8**, i32*)** %150, align 8, !dbg !637, !tbaa !352
  %152 = load i32* %num_points, align 4, !dbg !638, !tbaa !360
  %153 = load i32* %num_in_array_indices, align 4, !dbg !639, !tbaa !360
  %154 = load i32* %num_out_arrays, align 4, !dbg !640, !tbaa !360
  %155 = call i32 %151(%struct.cGH* %GH, i8* %5, i32 %152, i32 %153, i32 %154, i8** %18, i32* %21, i32* %26, i8** %31, i32* %34) #7, !dbg !641
  call void @llvm.dbg.value(metadata i32 %155, i64 0, metadata !175, metadata !309), !dbg !573
  call void @free(i8* %33) #8, !dbg !642
  call void @free(i8* %30) #8, !dbg !643
  call void @free(i8* %25) #8, !dbg !644
  call void @free(i8* %20) #8, !dbg !645
  call void @free(i8* %17) #8, !dbg !646
  br label %156

; <label>:156                                     ; preds = %11, %._crit_edge, %7
  %retcode.0 = phi i32 [ -1, %7 ], [ -1, %11 ], [ %155, %._crit_edge ]
  store i32 %retcode.0, i32* %fortranreturn, align 4, !dbg !647, !tbaa !360
  ret void, !dbg !648
}
