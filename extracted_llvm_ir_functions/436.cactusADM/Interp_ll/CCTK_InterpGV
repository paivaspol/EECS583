define i32 @CCTK_InterpGV(%struct.cGH* %GH, i32 %operator_handle, i32 %coord_system_handle, i32 %num_points, i32 %num_in_array_indices, i32 %num_out_arrays, ...) #1 {
  %indices = alloca [1 x %struct.__va_list_tag], align 16
  tail call void @llvm.dbg.value(metadata %struct.cGH* %GH, i64 0, metadata !120, metadata !309), !dbg !469
  tail call void @llvm.dbg.value(metadata i32 %operator_handle, i64 0, metadata !121, metadata !309), !dbg !470
  tail call void @llvm.dbg.value(metadata i32 %coord_system_handle, i64 0, metadata !122, metadata !309), !dbg !471
  tail call void @llvm.dbg.value(metadata i32 %num_points, i64 0, metadata !123, metadata !309), !dbg !472
  tail call void @llvm.dbg.value(metadata i32 %num_in_array_indices, i64 0, metadata !124, metadata !309), !dbg !473
  tail call void @llvm.dbg.value(metadata i32 %num_out_arrays, i64 0, metadata !125, metadata !309), !dbg !474
  tail call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %indices, metadata !126, metadata !309), !dbg !475
  %1 = load %struct.cHandledData** @interp_operators, align 8, !dbg !476, !tbaa !322
  %2 = tail call i8* @Util_GetHandledData(%struct.cHandledData* %1, i32 %operator_handle) #7, !dbg !477
  %3 = tail call i8* @CCTK_CoordSystemName(i32 %coord_system_handle) #7, !dbg !478
  tail call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !142, metadata !309), !dbg !479
  %4 = icmp eq i8* %2, null, !dbg !480
  br i1 %4, label %5, label %7, !dbg !481

; <label>:5                                       ; preds = %0
  %6 = tail call i32 @CCTK_Warn(i32 3, i32 493, i8* getelementptr inbounds ([75 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([77 x i8]* @.str10, i64 0, i64 0)) #7, !dbg !482
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !141, metadata !309), !dbg !484
  br label %141, !dbg !485

; <label>:7                                       ; preds = %0
  %8 = icmp eq i8* %3, null, !dbg !486
  br i1 %8, label %9, label %11, !dbg !487

; <label>:9                                       ; preds = %7
  %10 = tail call i32 @CCTK_Warn(i32 3, i32 499, i8* getelementptr inbounds ([75 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8]* @.str11, i64 0, i64 0)) #7, !dbg !488
  tail call void @llvm.dbg.value(metadata i32 -2, i64 0, metadata !141, metadata !309), !dbg !484
  br label %141, !dbg !490

; <label>:11                                      ; preds = %7
  %12 = tail call i32 @CCTK_CoordSystemDim(i8* %3) #7, !dbg !491
  tail call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !140, metadata !309), !dbg !492
  %13 = sext i32 %12 to i64, !dbg !493
  %14 = shl nsw i64 %13, 3, !dbg !494
  %15 = tail call i8* @malloc(i64 %14) #7, !dbg !495
  %16 = bitcast i8* %15 to i8**, !dbg !496
  tail call void @llvm.dbg.value(metadata i8** %16, i64 0, metadata !146, metadata !309), !dbg !497
  %17 = shl nsw i64 %13, 2, !dbg !498
  %18 = tail call i8* @malloc(i64 %17) #7, !dbg !499
  %19 = bitcast i8* %18 to i32*, !dbg !500
  tail call void @llvm.dbg.value(metadata i32* %19, i64 0, metadata !144, metadata !309), !dbg !501
  %20 = sext i32 %num_in_array_indices to i64, !dbg !502
  %21 = shl nsw i64 %20, 2, !dbg !503
  %22 = tail call i8* @malloc(i64 %21) #7, !dbg !504
  %23 = bitcast i8* %22 to i32*, !dbg !505
  tail call void @llvm.dbg.value(metadata i32* %23, i64 0, metadata !143, metadata !309), !dbg !506
  %24 = sext i32 %num_out_arrays to i64, !dbg !507
  %25 = shl nsw i64 %24, 3, !dbg !508
  %26 = tail call i8* @malloc(i64 %25) #7, !dbg !509
  %27 = bitcast i8* %26 to i8**, !dbg !510
  tail call void @llvm.dbg.value(metadata i8** %27, i64 0, metadata !147, metadata !309), !dbg !511
  %28 = shl nsw i64 %24, 2, !dbg !512
  %29 = tail call i8* @malloc(i64 %28) #7, !dbg !513
  %30 = bitcast i8* %29 to i32*, !dbg !514
  tail call void @llvm.dbg.value(metadata i32* %30, i64 0, metadata !145, metadata !309), !dbg !515
  %31 = bitcast [1 x %struct.__va_list_tag]* %indices to i8*, !dbg !516
  call void @llvm.va_start(i8* %31), !dbg !516
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !149, metadata !309), !dbg !517
  %32 = icmp sgt i32 %12, 0, !dbg !518
  br i1 %32, label %.lr.ph21, label %.preheader10, !dbg !521

.lr.ph21:                                         ; preds = %11
  %33 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 0, !dbg !522
  %34 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 3, !dbg !522
  %35 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 2, !dbg !522
  %36 = add i32 %12, -1, !dbg !521
  %.pre = load i32* %33, align 16, !dbg !522
  br label %41, !dbg !521

.preheader11:                                     ; preds = %52
  br i1 %32, label %.lr.ph18, label %.preheader10, !dbg !524

.lr.ph18:                                         ; preds = %.preheader11
  %37 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 0, !dbg !526
  %38 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 3, !dbg !526
  %39 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 2, !dbg !526
  %40 = add i32 %12, -1, !dbg !524
  %.pre38 = load i32* %37, align 16, !dbg !526
  br label %63, !dbg !524

; <label>:41                                      ; preds = %52, %.lr.ph21
  %42 = phi i32 [ %.pre, %.lr.ph21 ], [ %53, %52 ], !dbg !522
  %indvars.iv34 = phi i64 [ 0, %.lr.ph21 ], [ %indvars.iv.next35, %52 ]
  %43 = icmp ult i32 %42, 41, !dbg !522
  br i1 %43, label %44, label %49, !dbg !522

; <label>:44                                      ; preds = %41
  %45 = load i8** %34, align 16, !dbg !522
  %46 = sext i32 %42 to i64, !dbg !522
  %47 = getelementptr i8* %45, i64 %46, !dbg !522
  %48 = add i32 %42, 8, !dbg !522
  store i32 %48, i32* %33, align 16, !dbg !522
  br label %52, !dbg !522

; <label>:49                                      ; preds = %41
  %50 = load i8** %35, align 8, !dbg !522
  %51 = getelementptr i8* %50, i64 8, !dbg !522
  store i8* %51, i8** %35, align 8, !dbg !522
  br label %52, !dbg !522

; <label>:52                                      ; preds = %49, %44
  %53 = phi i32 [ %48, %44 ], [ %42, %49 ]
  %.in8 = phi i8* [ %47, %44 ], [ %50, %49 ]
  %54 = bitcast i8* %.in8 to i64*, !dbg !522
  %55 = load i64* %54, align 8, !dbg !522
  %56 = getelementptr inbounds i8** %16, i64 %indvars.iv34, !dbg !522
  %57 = bitcast i8** %56 to i64*, !dbg !522
  store i64 %55, i64* %57, align 8, !dbg !522, !tbaa !322
  %indvars.iv.next35 = add nuw nsw i64 %indvars.iv34, 1, !dbg !521
  %lftr.wideiv36 = trunc i64 %indvars.iv34 to i32, !dbg !521
  %exitcond37 = icmp eq i32 %lftr.wideiv36, %36, !dbg !521
  br i1 %exitcond37, label %.preheader11, label %41, !dbg !521

.preheader10:                                     ; preds = %74, %11, %.preheader11
  %58 = icmp sgt i32 %num_in_array_indices, 0, !dbg !529
  br i1 %58, label %.lr.ph16, label %.preheader9, !dbg !532

.lr.ph16:                                         ; preds = %.preheader10
  %59 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 0, !dbg !533
  %60 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 3, !dbg !533
  %61 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 2, !dbg !533
  %62 = add i32 %num_in_array_indices, -1, !dbg !532
  %.pre39 = load i32* %59, align 16, !dbg !533
  br label %84, !dbg !532

; <label>:63                                      ; preds = %74, %.lr.ph18
  %64 = phi i32 [ %.pre38, %.lr.ph18 ], [ %75, %74 ], !dbg !526
  %indvars.iv30 = phi i64 [ 0, %.lr.ph18 ], [ %indvars.iv.next31, %74 ]
  %65 = icmp ult i32 %64, 41, !dbg !526
  br i1 %65, label %66, label %71, !dbg !526

; <label>:66                                      ; preds = %63
  %67 = load i8** %38, align 16, !dbg !526
  %68 = sext i32 %64 to i64, !dbg !526
  %69 = getelementptr i8* %67, i64 %68, !dbg !526
  %70 = add i32 %64, 8, !dbg !526
  store i32 %70, i32* %37, align 16, !dbg !526
  br label %74, !dbg !526

; <label>:71                                      ; preds = %63
  %72 = load i8** %39, align 8, !dbg !526
  %73 = getelementptr i8* %72, i64 8, !dbg !526
  store i8* %73, i8** %39, align 8, !dbg !526
  br label %74, !dbg !526

; <label>:74                                      ; preds = %71, %66
  %75 = phi i32 [ %70, %66 ], [ %64, %71 ]
  %.in7 = phi i8* [ %69, %66 ], [ %72, %71 ]
  %76 = bitcast i8* %.in7 to i32*, !dbg !526
  %77 = load i32* %76, align 4, !dbg !526
  %78 = getelementptr inbounds i32* %19, i64 %indvars.iv30, !dbg !526
  store i32 %77, i32* %78, align 4, !dbg !526, !tbaa !360
  %indvars.iv.next31 = add nuw nsw i64 %indvars.iv30, 1, !dbg !524
  %lftr.wideiv32 = trunc i64 %indvars.iv30 to i32, !dbg !524
  %exitcond33 = icmp eq i32 %lftr.wideiv32, %40, !dbg !524
  br i1 %exitcond33, label %.preheader10, label %63, !dbg !524

.preheader9:                                      ; preds = %95, %.preheader10
  %79 = icmp sgt i32 %num_out_arrays, 0, !dbg !535
  br i1 %79, label %.lr.ph14, label %._crit_edge, !dbg !538

.lr.ph14:                                         ; preds = %.preheader9
  %80 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 0, !dbg !539
  %81 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 3, !dbg !539
  %82 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 2, !dbg !539
  %83 = add i32 %num_out_arrays, -1, !dbg !538
  %.pre40 = load i32* %80, align 16, !dbg !539
  br label %104, !dbg !538

; <label>:84                                      ; preds = %95, %.lr.ph16
  %85 = phi i32 [ %.pre39, %.lr.ph16 ], [ %96, %95 ], !dbg !533
  %indvars.iv26 = phi i64 [ 0, %.lr.ph16 ], [ %indvars.iv.next27, %95 ]
  %86 = icmp ult i32 %85, 41, !dbg !533
  br i1 %86, label %87, label %92, !dbg !533

; <label>:87                                      ; preds = %84
  %88 = load i8** %60, align 16, !dbg !533
  %89 = sext i32 %85 to i64, !dbg !533
  %90 = getelementptr i8* %88, i64 %89, !dbg !533
  %91 = add i32 %85, 8, !dbg !533
  store i32 %91, i32* %59, align 16, !dbg !533
  br label %95, !dbg !533

; <label>:92                                      ; preds = %84
  %93 = load i8** %61, align 8, !dbg !533
  %94 = getelementptr i8* %93, i64 8, !dbg !533
  store i8* %94, i8** %61, align 8, !dbg !533
  br label %95, !dbg !533

; <label>:95                                      ; preds = %92, %87
  %96 = phi i32 [ %91, %87 ], [ %85, %92 ]
  %.in6 = phi i8* [ %90, %87 ], [ %93, %92 ]
  %97 = bitcast i8* %.in6 to i32*, !dbg !533
  %98 = load i32* %97, align 4, !dbg !533
  %99 = getelementptr inbounds i32* %23, i64 %indvars.iv26, !dbg !533
  store i32 %98, i32* %99, align 4, !dbg !533, !tbaa !360
  %indvars.iv.next27 = add nuw nsw i64 %indvars.iv26, 1, !dbg !532
  %lftr.wideiv28 = trunc i64 %indvars.iv26 to i32, !dbg !532
  %exitcond29 = icmp eq i32 %lftr.wideiv28, %62, !dbg !532
  br i1 %exitcond29, label %.preheader9, label %84, !dbg !532

.preheader:                                       ; preds = %115
  br i1 %79, label %.lr.ph, label %._crit_edge, !dbg !541

.lr.ph:                                           ; preds = %.preheader
  %100 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 0, !dbg !543
  %101 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 3, !dbg !543
  %102 = getelementptr inbounds [1 x %struct.__va_list_tag]* %indices, i64 0, i64 0, i32 2, !dbg !543
  %103 = add i32 %num_out_arrays, -1, !dbg !541
  %.pre41 = load i32* %100, align 16, !dbg !543
  br label %121, !dbg !541

; <label>:104                                     ; preds = %115, %.lr.ph14
  %105 = phi i32 [ %.pre40, %.lr.ph14 ], [ %116, %115 ], !dbg !539
  %indvars.iv22 = phi i64 [ 0, %.lr.ph14 ], [ %indvars.iv.next23, %115 ]
  %106 = icmp ult i32 %105, 41, !dbg !539
  br i1 %106, label %107, label %112, !dbg !539

; <label>:107                                     ; preds = %104
  %108 = load i8** %81, align 16, !dbg !539
  %109 = sext i32 %105 to i64, !dbg !539
  %110 = getelementptr i8* %108, i64 %109, !dbg !539
  %111 = add i32 %105, 8, !dbg !539
  store i32 %111, i32* %80, align 16, !dbg !539
  br label %115, !dbg !539

; <label>:112                                     ; preds = %104
  %113 = load i8** %82, align 8, !dbg !539
  %114 = getelementptr i8* %113, i64 8, !dbg !539
  store i8* %114, i8** %82, align 8, !dbg !539
  br label %115, !dbg !539

; <label>:115                                     ; preds = %112, %107
  %116 = phi i32 [ %111, %107 ], [ %105, %112 ]
  %.in5 = phi i8* [ %110, %107 ], [ %113, %112 ]
  %117 = bitcast i8* %.in5 to i64*, !dbg !539
  %118 = load i64* %117, align 8, !dbg !539
  %119 = getelementptr inbounds i8** %27, i64 %indvars.iv22, !dbg !539
  %120 = bitcast i8** %119 to i64*, !dbg !539
  store i64 %118, i64* %120, align 8, !dbg !539, !tbaa !322
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !538
  %lftr.wideiv24 = trunc i64 %indvars.iv22 to i32, !dbg !538
  %exitcond25 = icmp eq i32 %lftr.wideiv24, %83, !dbg !538
  br i1 %exitcond25, label %.preheader, label %104, !dbg !538

; <label>:121                                     ; preds = %132, %.lr.ph
  %122 = phi i32 [ %.pre41, %.lr.ph ], [ %133, %132 ], !dbg !543
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %132 ]
  %123 = icmp ult i32 %122, 41, !dbg !543
  br i1 %123, label %124, label %129, !dbg !543

; <label>:124                                     ; preds = %121
  %125 = load i8** %101, align 16, !dbg !543
  %126 = sext i32 %122 to i64, !dbg !543
  %127 = getelementptr i8* %125, i64 %126, !dbg !543
  %128 = add i32 %122, 8, !dbg !543
  store i32 %128, i32* %100, align 16, !dbg !543
  br label %132, !dbg !543

; <label>:129                                     ; preds = %121
  %130 = load i8** %102, align 8, !dbg !543
  %131 = getelementptr i8* %130, i64 8, !dbg !543
  store i8* %131, i8** %102, align 8, !dbg !543
  br label %132, !dbg !543

; <label>:132                                     ; preds = %129, %124
  %133 = phi i32 [ %128, %124 ], [ %122, %129 ]
  %.in = phi i8* [ %127, %124 ], [ %130, %129 ]
  %134 = bitcast i8* %.in to i32*, !dbg !543
  %135 = load i32* %134, align 4, !dbg !543
  %136 = getelementptr inbounds i32* %30, i64 %indvars.iv, !dbg !543
  store i32 %135, i32* %136, align 4, !dbg !543, !tbaa !360
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !541
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !541
  %exitcond = icmp eq i32 %lftr.wideiv, %103, !dbg !541
  br i1 %exitcond, label %._crit_edge, label %121, !dbg !541

._crit_edge:                                      ; preds = %132, %.preheader9, %.preheader
  call void @llvm.va_end(i8* %31), !dbg !546
  %137 = getelementptr inbounds i8* %2, i64 16, !dbg !547
  %138 = bitcast i8* %137 to i32 (%struct.cGH*, i8*, i32, i32, i32, i8**, i32*, i32*, i8**, i32*)**, !dbg !547
  %139 = load i32 (%struct.cGH*, i8*, i32, i32, i32, i8**, i32*, i32*, i8**, i32*)** %138, align 8, !dbg !547, !tbaa !352
  %140 = call i32 %139(%struct.cGH* %GH, i8* %3, i32 %num_points, i32 %num_in_array_indices, i32 %num_out_arrays, i8** %16, i32* %19, i32* %23, i8** %27, i32* %30) #7, !dbg !548
  call void @llvm.dbg.value(metadata i32 %140, i64 0, metadata !141, metadata !309), !dbg !484
  call void @free(i8* %29) #8, !dbg !549
  call void @free(i8* %26) #8, !dbg !550
  call void @free(i8* %22) #8, !dbg !551
  call void @free(i8* %18) #8, !dbg !552
  call void @free(i8* %15) #8, !dbg !553
  br label %141

; <label>:141                                     ; preds = %9, %._crit_edge, %5
  %retcode.0 = phi i32 [ -1, %5 ], [ -2, %9 ], [ %140, %._crit_edge ]
  ret i32 %retcode.0, !dbg !554
}
