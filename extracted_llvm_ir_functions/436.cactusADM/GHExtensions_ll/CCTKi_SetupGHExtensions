define i32 @CCTKi_SetupGHExtensions(%struct.tFleshConfig* %config, i32 %convergence_level, %struct.cGH* %GH) #1 {
  %1 = load i32* @num_extensions, align 4, !tbaa !6
  %2 = icmp sgt i32 %1, 0
  br i1 %2, label %.lr.ph.i, label %CheckAllExtensionsSetup.exit

.lr.ph.i:                                         ; preds = %0, %32
  %handle.01.i = phi i32 [ %33, %32 ], [ 0, %0 ]
  %3 = load %struct.cHandledData** @GHExtensions, align 8, !tbaa !2
  %4 = tail call i8* @Util_GetHandledData(%struct.cHandledData* %3, i32 %handle.01.i) #5
  %5 = icmp eq i8* %4, null
  br i1 %5, label %32, label %6

; <label>:6                                       ; preds = %.lr.ph.i
  %7 = bitcast i8* %4 to i8* (%struct.tFleshConfig*, i32, %struct.cGH*)**
  %8 = load i8* (%struct.tFleshConfig*, i32, %struct.cGH*)** %7, align 8, !tbaa !8
  %9 = icmp eq i8* (%struct.tFleshConfig*, i32, %struct.cGH*)* %8, null
  br i1 %9, label %10, label %14

; <label>:10                                      ; preds = %6
  %11 = load %struct.cHandledData** @GHExtensions, align 8, !tbaa !2
  %12 = tail call i8* @Util_GetHandleName(%struct.cHandledData* %11, i32 %handle.01.i) #5
  %13 = tail call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 4, i32 728, i8* getelementptr inbounds ([81 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8]* @.str3, i64 0, i64 0), i8* %12) #5
  store i8* (%struct.tFleshConfig*, i32, %struct.cGH*)* @DummySetupGH, i8* (%struct.tFleshConfig*, i32, %struct.cGH*)** %7, align 8, !tbaa !8
  br label %14

; <label>:14                                      ; preds = %10, %6
  %15 = getelementptr inbounds i8* %4, i64 8
  %16 = bitcast i8* %15 to i32 (%struct.cGH*)**
  %17 = load i32 (%struct.cGH*)** %16, align 8, !tbaa !10
  %18 = icmp eq i32 (%struct.cGH*)* %17, null
  br i1 %18, label %19, label %23

; <label>:19                                      ; preds = %14
  %20 = load %struct.cHandledData** @GHExtensions, align 8, !tbaa !2
  %21 = tail call i8* @Util_GetHandleName(%struct.cHandledData* %20, i32 %handle.01.i) #5
  %22 = tail call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 4, i32 737, i8* getelementptr inbounds ([81 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str4, i64 0, i64 0), i8* %21) #5
  store i32 (%struct.cGH*)* @DummyInitGH, i32 (%struct.cGH*)** %16, align 8, !tbaa !10
  br label %23

; <label>:23                                      ; preds = %19, %14
  %24 = getelementptr inbounds i8* %4, i64 16
  %25 = bitcast i8* %24 to i32 (%struct.cGH*, i8*)**
  %26 = load i32 (%struct.cGH*, i8*)** %25, align 8, !tbaa !11
  %27 = icmp eq i32 (%struct.cGH*, i8*)* %26, null
  br i1 %27, label %28, label %32

; <label>:28                                      ; preds = %23
  %29 = load %struct.cHandledData** @GHExtensions, align 8, !tbaa !2
  %30 = tail call i8* @Util_GetHandleName(%struct.cHandledData* %29, i32 %handle.01.i) #5
  %31 = tail call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 4, i32 746, i8* getelementptr inbounds ([81 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8]* @.str5, i64 0, i64 0), i8* %30) #5
  store i32 (%struct.cGH*, i8*)* @DummyScheduleTraverseGH, i32 (%struct.cGH*, i8*)** %25, align 8, !tbaa !11
  br label %32

; <label>:32                                      ; preds = %28, %23, %.lr.ph.i
  %33 = add nuw nsw i32 %handle.01.i, 1
  %34 = load i32* @num_extensions, align 4, !tbaa !6
  %35 = icmp slt i32 %33, %34
  br i1 %35, label %.lr.ph.i, label %CheckAllExtensionsSetup.exit

CheckAllExtensionsSetup.exit:                     ; preds = %32, %0
  %36 = phi i32 [ %1, %0 ], [ %34, %32 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %.preheader.thread, label %39

.preheader.thread:                                ; preds = %CheckAllExtensionsSetup.exit
  %38 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 18
  store i8** null, i8*** %38, align 8, !tbaa !12
  br label %.loopexit

; <label>:39                                      ; preds = %CheckAllExtensionsSetup.exit
  %40 = sext i32 %36 to i64
  %41 = shl nsw i64 %40, 3
  %42 = tail call i8* @malloc(i64 %41) #5
  %43 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 18
  %44 = bitcast i8*** %43 to i8**
  store i8* %42, i8** %44, align 8, !tbaa !12
  %phitmp = icmp eq i8* %42, null
  br i1 %phitmp, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %39
  %45 = icmp sgt i32 %36, 0
  br i1 %45, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %.preheader, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %.preheader ]
  %46 = load %struct.cHandledData** @GHExtensions, align 8, !tbaa !2
  %47 = trunc i64 %indvars.iv to i32
  %48 = tail call i8* @Util_GetHandledData(%struct.cHandledData* %46, i32 %47) #5
  %49 = bitcast i8* %48 to i8* (%struct.tFleshConfig*, i32, %struct.cGH*)**
  %50 = load i8* (%struct.tFleshConfig*, i32, %struct.cGH*)** %49, align 8, !tbaa !8
  %51 = tail call i8* %50(%struct.tFleshConfig* %config, i32 %convergence_level, %struct.cGH* %GH) #5
  %52 = load i8*** %43, align 8, !tbaa !12
  %53 = getelementptr inbounds i8** %52, i64 %indvars.iv
  store i8* %51, i8** %53, align 8, !tbaa !2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %54 = load i32* @num_extensions, align 4, !tbaa !6
  %55 = sext i32 %54 to i64
  %56 = icmp slt i64 %indvars.iv.next, %55
  br i1 %56, label %.lr.ph, label %.loopexit

.loopexit:                                        ; preds = %.lr.ph, %.preheader, %.preheader.thread, %39
  %return_code.0 = phi i32 [ 1, %39 ], [ 0, %.preheader.thread ], [ 0, %.preheader ], [ 0, %.lr.ph ]
  ret i32 %return_code.0
}
