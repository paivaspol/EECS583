define internal i32 @IntParameterEvaluator(i32 %nvars, i8** nocapture readonly %vars, %struct.uExpressionValue* nocapture %vals, i8* %data) #2 {
  %endptr = alloca i8*, align 8
  %thorn = alloca i8*, align 8
  %param = alloca i8*, align 8
  %type = alloca i32, align 4
  %1 = icmp sgt i32 %nvars, 0
  br i1 %1, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %0
  %2 = add i32 %nvars, -1
  br label %3

; <label>:3                                       ; preds = %37, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %37 ]
  %4 = getelementptr inbounds %struct.uExpressionValue* %vals, i64 %indvars.iv, i32 0
  store i32 1, i32* %4, align 4, !tbaa !33
  %5 = getelementptr inbounds i8** %vars, i64 %indvars.iv
  %6 = load i8** %5, align 8, !tbaa !2
  %7 = call i8* @Util_Strdup(i8* %6) #10
  %8 = call i64 @strtol(i8* %7, i8** %endptr, i32 0) #10
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds %struct.uExpressionValue* %vals, i64 %indvars.iv, i32 1
  %11 = bitcast %union.anon* %10 to i32*
  store i32 %9, i32* %11, align 4, !tbaa !6
  %12 = load i8** %endptr, align 8, !tbaa !2
  %13 = icmp eq i8* %12, %7
  br i1 %13, label %14, label %37

; <label>:14                                      ; preds = %3
  %15 = call i32 @CCTK_DecomposeName(i8* %7, i8** %thorn, i8** %param) #9
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

; <label>:17                                      ; preds = %14
  store i8* null, i8** %thorn, align 8, !tbaa !2
  store i8* null, i8** %param, align 8, !tbaa !2
  br label %21

; <label>:18                                      ; preds = %14
  %19 = load i8** %thorn, align 8, !tbaa !2
  %20 = load i8** %param, align 8, !tbaa !2
  br label %21

; <label>:21                                      ; preds = %18, %17
  %use_thorn.0 = phi i8* [ %data, %17 ], [ %19, %18 ]
  %use_param.0 = phi i8* [ %7, %17 ], [ %20, %18 ]
  %22 = call i8* @CCTK_ParameterGet(i8* %use_param.0, i8* %use_thorn.0, i32* %type) #10
  %23 = icmp ne i8* %22, null
  %24 = load i32* %type, align 4
  %25 = icmp eq i32 %24, 4
  %or.cond = and i1 %23, %25
  br i1 %or.cond, label %26, label %29

; <label>:26                                      ; preds = %21
  %27 = bitcast i8* %22 to i32*
  %28 = load i32* %27, align 4, !tbaa !6
  store i32 %28, i32* %11, align 4, !tbaa !6
  br label %34

; <label>:29                                      ; preds = %21
  br i1 %23, label %32, label %30

; <label>:30                                      ; preds = %29
  %31 = call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 0, i32 2367, i8* getelementptr inbounds ([75 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8]* @.str61, i64 0, i64 0), i8* %use_thorn.0, i8* %use_param.0) #10
  br label %34

; <label>:32                                      ; preds = %29
  %33 = call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 0, i32 2373, i8* getelementptr inbounds ([75 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8]* @.str62, i64 0, i64 0), i8* %use_thorn.0, i8* %use_param.0) #10
  br label %34

; <label>:34                                      ; preds = %30, %32, %26
  %35 = load i8** %thorn, align 8, !tbaa !2
  call void @free(i8* %35) #9
  %36 = load i8** %param, align 8, !tbaa !2
  call void @free(i8* %36) #9
  br label %37

; <label>:37                                      ; preds = %34, %3
  call void @free(i8* %7) #9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %2
  br i1 %exitcond, label %._crit_edge, label %3

._crit_edge:                                      ; preds = %37, %0
  ret i32 0
}
