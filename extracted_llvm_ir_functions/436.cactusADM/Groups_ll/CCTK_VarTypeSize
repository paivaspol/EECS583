define i32 @CCTK_VarTypeSize(i32 %vtype) #2 {
  tail call void @llvm.dbg.value(metadata i32 %vtype, i64 0, metadata !296, metadata !483), !dbg !1125
  %switch.tableidx = add i32 %vtype, -1, !dbg !1126
  %1 = icmp ult i32 %switch.tableidx, 16, !dbg !1126
  br i1 %1, label %switch.hole_check, label %2, !dbg !1126

; <label>:2                                       ; preds = %switch.hole_check, %0
  %3 = tail call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 4, i32 1474, i8* getelementptr inbounds ([75 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8]* @.str46, i64 0, i64 0), i32 %vtype) #10, !dbg !1127
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !297, metadata !483), !dbg !1129
  ret i32 -1, !dbg !1130

switch.hole_check:                                ; preds = %0
  %switch.maskindex = trunc i32 %switch.tableidx to i16, !dbg !1126
  %switch.shifted = lshr i16 -8193, %switch.maskindex, !dbg !1126
  %4 = and i16 %switch.shifted, 1, !dbg !1126
  %switch.lobit = icmp eq i16 %4, 0, !dbg !1126
  br i1 %switch.lobit, label %2, label %switch.lookup, !dbg !1126

switch.lookup:                                    ; preds = %switch.hole_check
  %5 = sext i32 %switch.tableidx to i64, !dbg !1126
  %switch.gep = getelementptr inbounds [16 x i32]* @switch.table63, i64 0, i64 %5, !dbg !1126
  %switch.load = load i32* %switch.gep, align 4, !dbg !1126
  ret i32 %switch.load, !dbg !1126
}
