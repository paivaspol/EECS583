define i32 @CCTK_VarIndex(i8* %fullvarname) #2 {
  %impname = alloca i8*, align 8
  %varname = alloca i8*, align 8
  store i8* null, i8** %varname, align 8, !tbaa !2
  store i8* null, i8** %impname, align 8, !tbaa !2
  %1 = call i32 @CCTK_DecomposeName(i8* %fullvarname, i8** %impname, i8** %varname) #9
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %.preheader2, label %39

.preheader2:                                      ; preds = %0
  %3 = load i32* @n_groups, align 4, !tbaa !6
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %.lr.ph7, label %.critedge.thread

.lr.ph7:                                          ; preds = %.preheader2, %.loopexit
  %indvars.iv11 = phi i64 [ %indvars.iv.next12, %.loopexit ], [ 0, %.preheader2 ]
  %retval.05 = phi i32 [ %retval.1, %.loopexit ], [ -1, %.preheader2 ]
  %5 = load i8** %impname, align 8, !tbaa !2
  %6 = load %struct.cGroupDefinition** @groups, align 8, !tbaa !2
  %7 = getelementptr inbounds %struct.cGroupDefinition* %6, i64 %indvars.iv11, i32 1
  %8 = load i8** %7, align 8, !tbaa !8
  %9 = call i32 @CCTK_Equals(i8* %5, i8* %8) #10
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %.lr.ph7
  %11 = load %struct.cGroupDefinition** @groups, align 8, !tbaa !2
  %12 = getelementptr inbounds %struct.cGroupDefinition* %11, i64 %indvars.iv11, i32 11
  %13 = load i32* %12, align 4, !tbaa !11
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %.lr.ph, label %.loopexit

; <label>:15                                      ; preds = %.lr.ph
  %16 = getelementptr inbounds %struct.cGroupDefinition* %28, i64 %indvars.iv11, i32 11
  %17 = load i32* %16, align 4, !tbaa !11
  %18 = sext i32 %17 to i64
  %19 = icmp slt i64 %indvars.iv.next, %18
  br i1 %19, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %.preheader, %15
  %indvars.iv = phi i64 [ %indvars.iv.next, %15 ], [ 0, %.preheader ]
  %20 = phi %struct.cGroupDefinition* [ %28, %15 ], [ %11, %.preheader ]
  %21 = load i8** %varname, align 8, !tbaa !2
  %22 = getelementptr inbounds %struct.cGroupDefinition* %20, i64 %indvars.iv11, i32 14
  %23 = load %struct.cVariableDefinition** %22, align 8, !tbaa !12
  %24 = getelementptr inbounds %struct.cVariableDefinition* %23, i64 %indvars.iv, i32 0
  %25 = load i8** %24, align 8, !tbaa !13
  %26 = call i32 @CCTK_Equals(i8* %21, i8* %25) #10
  %27 = icmp eq i32 %26, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %28 = load %struct.cGroupDefinition** @groups, align 8, !tbaa !2
  br i1 %27, label %15, label %29

; <label>:29                                      ; preds = %.lr.ph
  %30 = getelementptr inbounds %struct.cGroupDefinition* %28, i64 %indvars.iv11, i32 14
  %31 = load %struct.cVariableDefinition** %30, align 8, !tbaa !12
  %32 = getelementptr inbounds %struct.cVariableDefinition* %31, i64 %indvars.iv, i32 1
  %33 = load i32* %32, align 4, !tbaa !15
  br label %.loopexit

.loopexit:                                        ; preds = %15, %.preheader, %.lr.ph7, %29
  %retval.1 = phi i32 [ %33, %29 ], [ %retval.05, %.lr.ph7 ], [ %retval.05, %.preheader ], [ %retval.05, %15 ]
  %indvars.iv.next12 = add nuw nsw i64 %indvars.iv11, 1
  %34 = load i32* @n_groups, align 4, !tbaa !6
  %35 = sext i32 %34 to i64
  %36 = icmp slt i64 %indvars.iv.next12, %35
  %37 = icmp slt i32 %retval.1, 0
  %or.cond = and i1 %37, %36
  br i1 %or.cond, label %.lr.ph7, label %.critedge

.critedge:                                        ; preds = %.loopexit
  br i1 %37, label %.critedge.thread, label %39

.critedge.thread:                                 ; preds = %.preheader2, %.critedge
  %retval.0.lcssa13 = phi i32 [ %retval.1, %.critedge ], [ -1, %.preheader2 ]
  %38 = call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 6, i32 327, i8* getelementptr inbounds ([75 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8]* @.str3, i64 0, i64 0), i8* %fullvarname) #10
  br label %39

; <label>:39                                      ; preds = %0, %.critedge, %.critedge.thread
  %retval.2 = phi i32 [ %1, %0 ], [ %retval.0.lcssa13, %.critedge.thread ], [ %retval.1, %.critedge ]
  %40 = load i8** %impname, align 8, !tbaa !2
  %41 = icmp eq i8* %40, null
  br i1 %41, label %43, label %42

; <label>:42                                      ; preds = %39
  call void @free(i8* %40) #9
  br label %43

; <label>:43                                      ; preds = %39, %42
  %44 = load i8** %varname, align 8, !tbaa !2
  %45 = icmp eq i8* %44, null
  br i1 %45, label %47, label %46

; <label>:46                                      ; preds = %43
  call void @free(i8* %44) #9
  br label %47

; <label>:47                                      ; preds = %43, %46
  ret i32 %retval.2
}
