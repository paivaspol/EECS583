define i32 @CCTK_GroupData(i32 %group, %struct.cGroup* %gp) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %group}, i64 0, metadata !194), !dbg !698
  tail call void @llvm.dbg.value(metadata !{%struct.cGroup* %gp}, i64 0, metadata !195), !dbg !698
  %cmp = icmp sgt i32 %group, -1, !dbg !699
  br i1 %cmp, label %land.end, label %if.end25, !dbg !699

land.end:                                         ; preds = %entry
  %0 = load i32* @n_groups, align 4, !dbg !699, !tbaa !488
  %phitmp = icmp sle i32 %0, %group
  %cond = sext i1 %phitmp to i32
  tail call void @llvm.dbg.value(metadata !{i32 %cond}, i64 0, metadata !196), !dbg !700
  br i1 %phitmp, label %if.end25, label %if.then, !dbg !701

if.then:                                          ; preds = %land.end
  %tobool3 = icmp eq %struct.cGroup* %gp, null, !dbg !702
  br i1 %tobool3, label %if.end25, label %if.then4, !dbg !702

if.then4:                                         ; preds = %if.then
  %idxprom = sext i32 %group to i64, !dbg !704
  %1 = load %struct.cGroupDefinition** @groups, align 8, !dbg !704, !tbaa !480
  %gtype = getelementptr inbounds %struct.cGroupDefinition* %1, i64 %idxprom, i32 4, !dbg !704
  %2 = load i32* %gtype, align 4, !dbg !704, !tbaa !488
  %grouptype = getelementptr inbounds %struct.cGroup* %gp, i64 0, i32 0, !dbg !704
  store i32 %2, i32* %grouptype, align 4, !dbg !704, !tbaa !488
  %vtype = getelementptr inbounds %struct.cGroupDefinition* %1, i64 %idxprom, i32 5, !dbg !706
  %3 = load i32* %vtype, align 4, !dbg !706, !tbaa !488
  %vartype = getelementptr inbounds %struct.cGroup* %gp, i64 0, i32 1, !dbg !706
  store i32 %3, i32* %vartype, align 4, !dbg !706, !tbaa !488
  %dtype = getelementptr inbounds %struct.cGroupDefinition* %1, i64 %idxprom, i32 6, !dbg !707
  %4 = load i32* %dtype, align 4, !dbg !707, !tbaa !488
  %disttype = getelementptr inbounds %struct.cGroup* %gp, i64 0, i32 2, !dbg !707
  store i32 %4, i32* %disttype, align 4, !dbg !707, !tbaa !488
  %dim = getelementptr inbounds %struct.cGroupDefinition* %1, i64 %idxprom, i32 9, !dbg !708
  %5 = load i32* %dim, align 4, !dbg !708, !tbaa !488
  %dim11 = getelementptr inbounds %struct.cGroup* %gp, i64 0, i32 4, !dbg !708
  store i32 %5, i32* %dim11, align 4, !dbg !708, !tbaa !488
  %n_variables = getelementptr inbounds %struct.cGroupDefinition* %1, i64 %idxprom, i32 11, !dbg !709
  %6 = load i32* %n_variables, align 4, !dbg !709, !tbaa !488
  %numvars = getelementptr inbounds %struct.cGroup* %gp, i64 0, i32 5, !dbg !709
  store i32 %6, i32* %numvars, align 4, !dbg !709, !tbaa !488
  %n_timelevels = getelementptr inbounds %struct.cGroupDefinition* %1, i64 %idxprom, i32 10, !dbg !710
  %7 = load i32* %n_timelevels, align 4, !dbg !710, !tbaa !488
  %numtimelevels = getelementptr inbounds %struct.cGroup* %gp, i64 0, i32 6, !dbg !710
  store i32 %7, i32* %numtimelevels, align 4, !dbg !710, !tbaa !488
  %staggertype = getelementptr inbounds %struct.cGroupDefinition* %1, i64 %idxprom, i32 7, !dbg !711
  %8 = load i32* %staggertype, align 4, !dbg !711, !tbaa !488
  %stagtype = getelementptr inbounds %struct.cGroup* %gp, i64 0, i32 3, !dbg !711
  store i32 %8, i32* %stagtype, align 4, !dbg !711, !tbaa !488
  %vararraysize = getelementptr inbounds %struct.cGroupDefinition* %1, i64 %idxprom, i32 15, !dbg !712
  %9 = load i8** %vararraysize, align 8, !dbg !712, !tbaa !480
  %tobool20 = icmp eq i8* %9, null, !dbg !712
  %vectorgroup = getelementptr inbounds %struct.cGroup* %gp, i64 0, i32 7, !dbg !713
  br i1 %tobool20, label %if.else, label %if.then21, !dbg !712

if.then21:                                        ; preds = %if.then4
  store i32 1, i32* %vectorgroup, align 4, !dbg !713, !tbaa !488
  br label %if.end25, !dbg !715

if.else:                                          ; preds = %if.then4
  store i32 0, i32* %vectorgroup, align 4, !dbg !716, !tbaa !488
  br label %if.end25

if.end25:                                         ; preds = %entry, %if.then, %if.else, %if.then21, %land.end
  %retval1.0 = phi i32 [ %cond, %land.end ], [ %cond, %if.then21 ], [ %cond, %if.else ], [ -2, %if.then ], [ -1, %entry ]
  ret i32 %retval1.0, !dbg !718
}
