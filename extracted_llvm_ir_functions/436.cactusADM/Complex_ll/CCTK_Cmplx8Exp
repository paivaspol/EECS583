define <2 x float> @CCTK_Cmplx8Exp(<2 x float> %complex_number.coerce) #0 {
  tail call void @llvm.dbg.value(metadata <2 x float> %complex_number.coerce, i64 0, metadata !74, metadata !243), !dbg !269
  tail call void @llvm.dbg.declare(metadata %struct.CCTK_COMPLEX8* undef, metadata !74, metadata !243), !dbg !269
  tail call void @llvm.dbg.declare(metadata %struct.CCTK_COMPLEX8* undef, metadata !77, metadata !243), !dbg !269
  %1 = extractelement <2 x float> %complex_number.coerce, i32 0, !dbg !269
  %2 = fpext float %1 to double, !dbg !269
  %3 = tail call double @exp(double %2) #6, !dbg !269
  %4 = fptrunc double %3 to float, !dbg !269
  tail call void @llvm.dbg.value(metadata float %4, i64 0, metadata !75, metadata !243), !dbg !269
  %5 = extractelement <2 x float> %complex_number.coerce, i32 1, !dbg !269
  tail call void @llvm.dbg.value(metadata float %5, i64 0, metadata !76, metadata !243), !dbg !269
  %6 = fpext float %4 to double, !dbg !269
  %7 = fpext float %5 to double, !dbg !269
  %8 = tail call double @cos(double %7) #6, !dbg !269
  tail call void @llvm.dbg.value(metadata float undef, i64 0, metadata !77, metadata !245), !dbg !269
  %9 = tail call double @sin(double %7) #6, !dbg !269
  %10 = insertelement <2 x double> undef, double %6, i32 0, !dbg !269
  %11 = insertelement <2 x double> %10, double %6, i32 1, !dbg !269
  %12 = insertelement <2 x double> undef, double %8, i32 0, !dbg !269
  %13 = insertelement <2 x double> %12, double %9, i32 1, !dbg !269
  %14 = fmul <2 x double> %11, %13, !dbg !269
  %15 = fptrunc <2 x double> %14 to <2 x float>, !dbg !269
  tail call void @llvm.dbg.value(metadata float undef, i64 0, metadata !77, metadata !246), !dbg !269
  ret <2 x float> %15, !dbg !269
}
