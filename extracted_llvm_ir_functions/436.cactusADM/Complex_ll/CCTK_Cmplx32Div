define void @CCTK_Cmplx32Div(%struct.CCTK_COMPLEX32* noalias nocapture sret %agg.result, %struct.CCTK_COMPLEX32* byval nocapture readonly align 16 %a, %struct.CCTK_COMPLEX32* byval nocapture readonly align 16 %b) #3 {
  %1 = getelementptr inbounds %struct.CCTK_COMPLEX32* %b, i64 0, i32 0
  %2 = load x86_fp80* %1, align 16, !tbaa !2
  %3 = fmul x86_fp80 %2, %2
  %4 = getelementptr inbounds %struct.CCTK_COMPLEX32* %b, i64 0, i32 1
  %5 = load x86_fp80* %4, align 16, !tbaa !7
  %6 = fmul x86_fp80 %5, %5
  %7 = fadd x86_fp80 %3, %6
  %8 = getelementptr inbounds %struct.CCTK_COMPLEX32* %a, i64 0, i32 0
  %9 = load x86_fp80* %8, align 16, !tbaa !2
  %10 = fmul x86_fp80 %2, %9
  %11 = getelementptr inbounds %struct.CCTK_COMPLEX32* %a, i64 0, i32 1
  %12 = load x86_fp80* %11, align 16, !tbaa !7
  %13 = fmul x86_fp80 %5, %12
  %14 = fadd x86_fp80 %10, %13
  %15 = fdiv x86_fp80 %14, %7
  %16 = fmul x86_fp80 %2, %12
  %17 = fmul x86_fp80 %5, %9
  %18 = fsub x86_fp80 %16, %17
  %19 = fdiv x86_fp80 %18, %7
  %20 = getelementptr inbounds %struct.CCTK_COMPLEX32* %agg.result, i64 0, i32 0
  store x86_fp80 %15, x86_fp80* %20, align 16
  %21 = getelementptr inbounds %struct.CCTK_COMPLEX32* %agg.result, i64 0, i32 1
  store x86_fp80 %19, x86_fp80* %21, align 16
  ret void
}
