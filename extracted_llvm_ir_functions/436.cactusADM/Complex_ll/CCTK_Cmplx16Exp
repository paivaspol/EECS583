define { double, double } @CCTK_Cmplx16Exp(double %complex_number.coerce0, double %complex_number.coerce1) #0 {
  tail call void @llvm.dbg.value(metadata double %complex_number.coerce0, i64 0, metadata !149, metadata !288), !dbg !312
  tail call void @llvm.dbg.value(metadata double %complex_number.coerce1, i64 0, metadata !149, metadata !289), !dbg !312
  tail call void @llvm.dbg.declare(metadata %struct.CCTK_COMPLEX16* undef, metadata !149, metadata !243), !dbg !312
  tail call void @llvm.dbg.declare(metadata %struct.CCTK_COMPLEX16* undef, metadata !152, metadata !243), !dbg !312
  %1 = tail call double @exp(double %complex_number.coerce0) #6, !dbg !312
  tail call void @llvm.dbg.value(metadata double %1, i64 0, metadata !150, metadata !243), !dbg !312
  tail call void @llvm.dbg.value(metadata double %complex_number.coerce1, i64 0, metadata !151, metadata !243), !dbg !312
  %2 = tail call double @cos(double %complex_number.coerce1) #6, !dbg !312
  %3 = fmul double %1, %2, !dbg !312
  tail call void @llvm.dbg.value(metadata double %3, i64 0, metadata !152, metadata !288), !dbg !312
  %4 = tail call double @sin(double %complex_number.coerce1) #6, !dbg !312
  %5 = fmul double %1, %4, !dbg !312
  tail call void @llvm.dbg.value(metadata double %5, i64 0, metadata !152, metadata !289), !dbg !312
  %6 = insertvalue { double, double } undef, double %3, 0, !dbg !312
  %7 = insertvalue { double, double } %6, double %5, 1, !dbg !312
  ret { double, double } %7, !dbg !312
}
