define { double, double } @CCTK_Cmplx16Exp(double %complex_number.coerce0, double %complex_number.coerce1) #0 {
  %1 = tail call double @exp(double %complex_number.coerce0) #5
  %2 = tail call double @cos(double %complex_number.coerce1) #5
  %3 = fmul double %1, %2
  %4 = tail call double @sin(double %complex_number.coerce1) #5
  %5 = fmul double %1, %4
  %6 = insertvalue { double, double } undef, double %3, 0
  %7 = insertvalue { double, double } %6, double %5, 1
  ret { double, double } %7
}
