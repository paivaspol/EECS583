define void @CCTK_Cmplx32Exp(%struct.CCTK_COMPLEX32* noalias nocapture sret %agg.result, %struct.CCTK_COMPLEX32* byval nocapture readonly align 16 %complex_number) #4 {
  tail call void @llvm.dbg.declare(metadata %struct.CCTK_COMPLEX32* %complex_number, metadata !224, metadata !243), !dbg !363
  tail call void @llvm.dbg.declare(metadata %struct.CCTK_COMPLEX32* undef, metadata !227, metadata !243), !dbg !363
  %1 = getelementptr inbounds %struct.CCTK_COMPLEX32* %complex_number, i64 0, i32 0, !dbg !363
  %2 = load x86_fp80* %1, align 16, !dbg !363, !tbaa !334
  %3 = fptrunc x86_fp80 %2 to double, !dbg !363
  %4 = tail call double @exp(double %3) #6, !dbg !363
  %5 = fpext double %4 to x86_fp80, !dbg !363
  tail call void @llvm.dbg.value(metadata x86_fp80 %5, i64 0, metadata !225, metadata !243), !dbg !363
  %6 = getelementptr inbounds %struct.CCTK_COMPLEX32* %complex_number, i64 0, i32 1, !dbg !363
  %7 = load x86_fp80* %6, align 16, !dbg !363, !tbaa !340
  tail call void @llvm.dbg.value(metadata x86_fp80 %7, i64 0, metadata !226, metadata !243), !dbg !363
  %8 = fptrunc x86_fp80 %7 to double, !dbg !363
  %9 = tail call double @cos(double %8) #6, !dbg !363
  %10 = fpext double %9 to x86_fp80, !dbg !363
  %11 = fmul x86_fp80 %5, %10, !dbg !363
  tail call void @llvm.dbg.value(metadata x86_fp80 %11, i64 0, metadata !227, metadata !331), !dbg !363
  %12 = tail call double @sin(double %8) #6, !dbg !363
  %13 = fpext double %12 to x86_fp80, !dbg !363
  %14 = fmul x86_fp80 %5, %13, !dbg !363
  tail call void @llvm.dbg.value(metadata x86_fp80 %14, i64 0, metadata !227, metadata !332), !dbg !363
  %15 = getelementptr inbounds %struct.CCTK_COMPLEX32* %agg.result, i64 0, i32 0, !dbg !363
  store x86_fp80 %11, x86_fp80* %15, align 16, !dbg !363
  %16 = getelementptr inbounds %struct.CCTK_COMPLEX32* %agg.result, i64 0, i32 1, !dbg !363
  store x86_fp80 %14, x86_fp80* %16, align 16, !dbg !363
  ret void, !dbg !363
}
