define <2 x float> @CCTK_Cmplx8Sqrt(<2 x float> %complex_number.coerce) #0 {
  %1 = extractelement <2 x float> %complex_number.coerce, i32 0
  %2 = fcmp oeq float %1, 0.000000e+00
  %3 = extractelement <2 x float> %complex_number.coerce, i32 1
  %4 = fcmp oeq float %3, 0.000000e+00
  %or.cond = and i1 %2, %4
  br i1 %or.cond, label %47, label %5

; <label>:5                                       ; preds = %0
  %fabsf = tail call float @fabsf(float %1) #2
  %6 = fpext float %3 to double
  %fabsf1 = tail call float @fabsf(float %3) #2
  %7 = fcmp ult float %fabsf, %fabsf1
  br i1 %7, label %19, label %8

; <label>:8                                       ; preds = %5
  %9 = fdiv float %fabsf1, %fabsf
  %10 = fpext float %fabsf to double
  %11 = tail call double @sqrt(double %10) #5
  %12 = fpext float %9 to double
  %13 = fmul double %12, %12
  %14 = tail call double @sqrt(double %13) #5
  %15 = fadd double %14, 1.000000e+00
  %16 = fmul double %15, 5.000000e-01
  %17 = tail call double @sqrt(double %16) #5
  %18 = fmul double %11, %17
  br label %30

; <label>:19                                      ; preds = %5
  %20 = fdiv float %fabsf, %fabsf1
  %21 = fpext float %fabsf1 to double
  %22 = tail call double @sqrt(double %21) #5
  %23 = fpext float %20 to double
  %24 = fmul double %23, %23
  %25 = tail call double @sqrt(double %24) #5
  %26 = fadd double %23, %25
  %27 = fmul double %26, 5.000000e-01
  %28 = tail call double @sqrt(double %27) #5
  %29 = fmul double %22, %28
  br label %30

; <label>:30                                      ; preds = %19, %8
  %w.0.in = phi double [ %18, %8 ], [ %29, %19 ]
  %w.0 = fptrunc double %w.0.in to float
  %31 = fcmp ult float %1, 0.000000e+00
  br i1 %31, label %37, label %32

; <label>:32                                      ; preds = %30
  %33 = fpext float %w.0 to double
  %34 = fmul double %33, 2.000000e+00
  %35 = fdiv double %6, %34
  %36 = fptrunc double %35 to float
  br label %47

; <label>:37                                      ; preds = %30
  %38 = fcmp ult float %3, 0.000000e+00
  br i1 %38, label %39, label %41

; <label>:39                                      ; preds = %37
  %40 = fsub float -0.000000e+00, %w.0
  br label %41

; <label>:41                                      ; preds = %37, %39
  %42 = phi float [ %40, %39 ], [ %w.0, %37 ]
  %43 = fpext float %42 to double
  %44 = fmul double %43, 2.000000e+00
  %45 = fdiv double %6, %44
  %46 = fptrunc double %45 to float
  br label %47

; <label>:47                                      ; preds = %0, %32, %41
  %result.sroa.4.0 = phi float [ %36, %32 ], [ %42, %41 ], [ 0.000000e+00, %0 ]
  %result.sroa.0.0 = phi float [ %w.0, %32 ], [ %46, %41 ], [ 0.000000e+00, %0 ]
  %48 = insertelement <2 x float> undef, float %result.sroa.0.0, i32 0
  %49 = insertelement <2 x float> %48, float %result.sroa.4.0, i32 1
  ret <2 x float> %49
}
