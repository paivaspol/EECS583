define { double, double } @CCTK_Cmplx16Sin(double %complex_number.coerce0, double %complex_number.coerce1) #0 {
  %1 = fcmp oeq double %complex_number.coerce1, 0.000000e+00
  %2 = tail call double @sin(double %complex_number.coerce0) #5
  br i1 %1, label %9, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call double @cosh(double %complex_number.coerce1) #5
  %5 = fmul double %2, %4
  %6 = tail call double @cos(double %complex_number.coerce0) #5
  %7 = tail call double @sinh(double %complex_number.coerce1) #5
  %8 = fmul double %6, %7
  br label %9

; <label>:9                                       ; preds = %0, %3
  %result.sroa.3.0 = phi double [ %8, %3 ], [ 0.000000e+00, %0 ]
  %result.sroa.0.0 = phi double [ %5, %3 ], [ %2, %0 ]
  %10 = insertvalue { double, double } undef, double %result.sroa.0.0, 0
  %11 = insertvalue { double, double } %10, double %result.sroa.3.0, 1
  ret { double, double } %11
}
