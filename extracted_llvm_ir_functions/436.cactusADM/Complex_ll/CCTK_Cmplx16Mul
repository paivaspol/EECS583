define { double, double } @CCTK_Cmplx16Mul(double %a.coerce0, double %a.coerce1, double %b.coerce0, double %b.coerce1) #0 {
  tail call void @llvm.dbg.value(metadata double %a.coerce0, i64 0, metadata !130, metadata !288), !dbg !296
  tail call void @llvm.dbg.value(metadata double %a.coerce1, i64 0, metadata !130, metadata !289), !dbg !296
  tail call void @llvm.dbg.value(metadata double %b.coerce0, i64 0, metadata !131, metadata !288), !dbg !296
  tail call void @llvm.dbg.value(metadata double %b.coerce1, i64 0, metadata !131, metadata !289), !dbg !296
  tail call void @llvm.dbg.declare(metadata %struct.CCTK_COMPLEX16* undef, metadata !130, metadata !243), !dbg !296
  tail call void @llvm.dbg.declare(metadata %struct.CCTK_COMPLEX16* undef, metadata !131, metadata !243), !dbg !296
  tail call void @llvm.dbg.declare(metadata %struct.CCTK_COMPLEX16* undef, metadata !132, metadata !243), !dbg !296
  %1 = fmul double %a.coerce0, %b.coerce0, !dbg !296
  %2 = fmul double %a.coerce1, %b.coerce1, !dbg !296
  %3 = fsub double %1, %2, !dbg !296
  tail call void @llvm.dbg.value(metadata double %3, i64 0, metadata !132, metadata !288), !dbg !296
  %4 = fmul double %a.coerce1, %b.coerce0, !dbg !296
  %5 = fmul double %a.coerce0, %b.coerce1, !dbg !296
  %6 = fadd double %4, %5, !dbg !296
  tail call void @llvm.dbg.value(metadata double %6, i64 0, metadata !132, metadata !289), !dbg !296
  %7 = insertvalue { double, double } undef, double %3, 0, !dbg !296
  %8 = insertvalue { double, double } %7, double %6, 1, !dbg !296
  ret { double, double } %8, !dbg !296
}
