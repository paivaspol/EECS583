define internal fastcc i32 @copy_real_to_outtype(i32 %num_elems, double* nocapture readonly %inarray, i32 %outtype, i8* nocapture %outarray) #1 {
  tail call void @llvm.dbg.value(metadata i32 %num_elems, i64 0, metadata !222, metadata !263), !dbg !351
  tail call void @llvm.dbg.value(metadata double* %inarray, i64 0, metadata !223, metadata !263), !dbg !352
  tail call void @llvm.dbg.value(metadata i32 %outtype, i64 0, metadata !224, metadata !263), !dbg !353
  tail call void @llvm.dbg.value(metadata i8* %outarray, i64 0, metadata !225, metadata !263), !dbg !354
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !227, metadata !263), !dbg !355
  switch i32 %outtype, label %82 [
    i32 1, label %.preheader
    i32 2, label %8
    i32 3, label %17
    i32 4, label %26
    i32 5, label %35
    i32 6, label %44
    i32 7, label %54
    i32 8, label %63
    i32 9, label %73
  ], !dbg !356

.preheader:                                       ; preds = %0
  %1 = icmp sgt i32 %num_elems, 0, !dbg !357
  br i1 %1, label %.lr.ph, label %.loopexit, !dbg !360

.lr.ph:                                           ; preds = %.preheader
  %2 = add i32 %num_elems, -1, !dbg !360
  br label %3, !dbg !360

; <label>:3                                       ; preds = %3, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %3 ]
  %4 = getelementptr inbounds double* %inarray, i64 %indvars.iv, !dbg !361
  %5 = load double* %4, align 8, !dbg !361, !tbaa !363
  %6 = fptoui double %5 to i8, !dbg !365
  %7 = getelementptr inbounds i8* %outarray, i64 %indvars.iv, !dbg !366
  store i8 %6, i8* %7, align 1, !dbg !367, !tbaa !368
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !360
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !360
  %exitcond = icmp eq i32 %lftr.wideiv, %2, !dbg !360
  br i1 %exitcond, label %.loopexit, label %3, !dbg !360

; <label>:8                                       ; preds = %0
  %9 = bitcast i8* %outarray to i32*, !dbg !369
  tail call void @llvm.dbg.value(metadata i32* %9, i64 0, metadata !232, metadata !263), !dbg !370
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !226, metadata !263), !dbg !371
  %10 = icmp sgt i32 %num_elems, 0, !dbg !372
  br i1 %10, label %.lr.ph19, label %.loopexit, !dbg !375

.lr.ph19:                                         ; preds = %8
  %11 = add i32 %num_elems, -1, !dbg !375
  br label %12, !dbg !375

; <label>:12                                      ; preds = %12, %.lr.ph19
  %indvars.iv34 = phi i64 [ 0, %.lr.ph19 ], [ %indvars.iv.next35, %12 ]
  %13 = getelementptr inbounds double* %inarray, i64 %indvars.iv34, !dbg !376
  %14 = load double* %13, align 8, !dbg !376, !tbaa !363
  %15 = fptosi double %14 to i32, !dbg !378
  %16 = getelementptr inbounds i32* %9, i64 %indvars.iv34, !dbg !379
  store i32 %15, i32* %16, align 4, !dbg !380, !tbaa !281
  %indvars.iv.next35 = add nuw nsw i64 %indvars.iv34, 1, !dbg !375
  %lftr.wideiv36 = trunc i64 %indvars.iv34 to i32, !dbg !375
  %exitcond37 = icmp eq i32 %lftr.wideiv36, %11, !dbg !375
  br i1 %exitcond37, label %.loopexit, label %12, !dbg !375

; <label>:17                                      ; preds = %0
  %18 = bitcast i8* %outarray to i16*, !dbg !381
  tail call void @llvm.dbg.value(metadata i16* %18, i64 0, metadata !235, metadata !263), !dbg !382
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !226, metadata !263), !dbg !371
  %19 = icmp sgt i32 %num_elems, 0, !dbg !383
  br i1 %19, label %.lr.ph21, label %.loopexit, !dbg !386

.lr.ph21:                                         ; preds = %17
  %20 = add i32 %num_elems, -1, !dbg !386
  br label %21, !dbg !386

; <label>:21                                      ; preds = %21, %.lr.ph21
  %indvars.iv38 = phi i64 [ 0, %.lr.ph21 ], [ %indvars.iv.next39, %21 ]
  %22 = getelementptr inbounds double* %inarray, i64 %indvars.iv38, !dbg !387
  %23 = load double* %22, align 8, !dbg !387, !tbaa !363
  %24 = fptosi double %23 to i16, !dbg !389
  %25 = getelementptr inbounds i16* %18, i64 %indvars.iv38, !dbg !390
  store i16 %24, i16* %25, align 2, !dbg !391, !tbaa !392
  %indvars.iv.next39 = add nuw nsw i64 %indvars.iv38, 1, !dbg !386
  %lftr.wideiv40 = trunc i64 %indvars.iv38 to i32, !dbg !386
  %exitcond41 = icmp eq i32 %lftr.wideiv40, %20, !dbg !386
  br i1 %exitcond41, label %.loopexit, label %21, !dbg !386

; <label>:26                                      ; preds = %0
  %27 = bitcast i8* %outarray to i32*, !dbg !394
  tail call void @llvm.dbg.value(metadata i32* %27, i64 0, metadata !238, metadata !263), !dbg !395
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !226, metadata !263), !dbg !371
  %28 = icmp sgt i32 %num_elems, 0, !dbg !396
  br i1 %28, label %.lr.ph23, label %.loopexit, !dbg !399

.lr.ph23:                                         ; preds = %26
  %29 = add i32 %num_elems, -1, !dbg !399
  br label %30, !dbg !399

; <label>:30                                      ; preds = %30, %.lr.ph23
  %indvars.iv42 = phi i64 [ 0, %.lr.ph23 ], [ %indvars.iv.next43, %30 ]
  %31 = getelementptr inbounds double* %inarray, i64 %indvars.iv42, !dbg !400
  %32 = load double* %31, align 8, !dbg !400, !tbaa !363
  %33 = fptosi double %32 to i32, !dbg !402
  %34 = getelementptr inbounds i32* %27, i64 %indvars.iv42, !dbg !403
  store i32 %33, i32* %34, align 4, !dbg !404, !tbaa !281
  %indvars.iv.next43 = add nuw nsw i64 %indvars.iv42, 1, !dbg !399
  %lftr.wideiv44 = trunc i64 %indvars.iv42 to i32, !dbg !399
  %exitcond45 = icmp eq i32 %lftr.wideiv44, %29, !dbg !399
  br i1 %exitcond45, label %.loopexit, label %30, !dbg !399

; <label>:35                                      ; preds = %0
  %36 = bitcast i8* %outarray to i64*, !dbg !405
  tail call void @llvm.dbg.value(metadata i64* %36, i64 0, metadata !241, metadata !263), !dbg !406
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !226, metadata !263), !dbg !371
  %37 = icmp sgt i32 %num_elems, 0, !dbg !407
  br i1 %37, label %.lr.ph25, label %.loopexit, !dbg !410

.lr.ph25:                                         ; preds = %35
  %38 = add i32 %num_elems, -1, !dbg !410
  br label %39, !dbg !410

; <label>:39                                      ; preds = %39, %.lr.ph25
  %indvars.iv46 = phi i64 [ 0, %.lr.ph25 ], [ %indvars.iv.next47, %39 ]
  %40 = getelementptr inbounds double* %inarray, i64 %indvars.iv46, !dbg !411
  %41 = load double* %40, align 8, !dbg !411, !tbaa !363
  %42 = fptosi double %41 to i64, !dbg !413
  %43 = getelementptr inbounds i64* %36, i64 %indvars.iv46, !dbg !414
  store i64 %42, i64* %43, align 8, !dbg !415, !tbaa !416
  %indvars.iv.next47 = add nuw nsw i64 %indvars.iv46, 1, !dbg !410
  %lftr.wideiv48 = trunc i64 %indvars.iv46 to i32, !dbg !410
  %exitcond49 = icmp eq i32 %lftr.wideiv48, %38, !dbg !410
  br i1 %exitcond49, label %.loopexit, label %39, !dbg !410

; <label>:44                                      ; preds = %0
  %45 = bitcast i8* %outarray to double*, !dbg !418
  tail call void @llvm.dbg.value(metadata double* %45, i64 0, metadata !244, metadata !263), !dbg !419
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !226, metadata !263), !dbg !371
  %46 = icmp sgt i32 %num_elems, 0, !dbg !420
  br i1 %46, label %.lr.ph27, label %.loopexit, !dbg !423

.lr.ph27:                                         ; preds = %44
  %47 = add i32 %num_elems, -1, !dbg !423
  br label %48, !dbg !423

; <label>:48                                      ; preds = %48, %.lr.ph27
  %indvars.iv50 = phi i64 [ 0, %.lr.ph27 ], [ %indvars.iv.next51, %48 ]
  %49 = getelementptr inbounds double* %inarray, i64 %indvars.iv50, !dbg !424
  %50 = bitcast double* %49 to i64*, !dbg !424
  %51 = load i64* %50, align 8, !dbg !424, !tbaa !363
  %52 = getelementptr inbounds double* %45, i64 %indvars.iv50, !dbg !426
  %53 = bitcast double* %52 to i64*, !dbg !427
  store i64 %51, i64* %53, align 8, !dbg !427, !tbaa !363
  %indvars.iv.next51 = add nuw nsw i64 %indvars.iv50, 1, !dbg !423
  %lftr.wideiv52 = trunc i64 %indvars.iv50 to i32, !dbg !423
  %exitcond53 = icmp eq i32 %lftr.wideiv52, %47, !dbg !423
  br i1 %exitcond53, label %.loopexit, label %48, !dbg !423

; <label>:54                                      ; preds = %0
  %55 = bitcast i8* %outarray to float*, !dbg !428
  tail call void @llvm.dbg.value(metadata float* %55, i64 0, metadata !247, metadata !263), !dbg !429
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !226, metadata !263), !dbg !371
  %56 = icmp sgt i32 %num_elems, 0, !dbg !430
  br i1 %56, label %.lr.ph29, label %.loopexit, !dbg !433

.lr.ph29:                                         ; preds = %54
  %57 = add i32 %num_elems, -1, !dbg !433
  br label %58, !dbg !433

; <label>:58                                      ; preds = %58, %.lr.ph29
  %indvars.iv54 = phi i64 [ 0, %.lr.ph29 ], [ %indvars.iv.next55, %58 ]
  %59 = getelementptr inbounds double* %inarray, i64 %indvars.iv54, !dbg !434
  %60 = load double* %59, align 8, !dbg !434, !tbaa !363
  %61 = fptrunc double %60 to float, !dbg !436
  %62 = getelementptr inbounds float* %55, i64 %indvars.iv54, !dbg !437
  store float %61, float* %62, align 4, !dbg !438, !tbaa !439
  %indvars.iv.next55 = add nuw nsw i64 %indvars.iv54, 1, !dbg !433
  %lftr.wideiv56 = trunc i64 %indvars.iv54 to i32, !dbg !433
  %exitcond57 = icmp eq i32 %lftr.wideiv56, %57, !dbg !433
  br i1 %exitcond57, label %.loopexit, label %58, !dbg !433

; <label>:63                                      ; preds = %0
  %64 = bitcast i8* %outarray to double*, !dbg !441
  tail call void @llvm.dbg.value(metadata double* %64, i64 0, metadata !250, metadata !263), !dbg !442
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !226, metadata !263), !dbg !371
  %65 = icmp sgt i32 %num_elems, 0, !dbg !443
  br i1 %65, label %.lr.ph31, label %.loopexit, !dbg !446

.lr.ph31:                                         ; preds = %63
  %66 = add i32 %num_elems, -1, !dbg !446
  br label %67, !dbg !446

; <label>:67                                      ; preds = %67, %.lr.ph31
  %indvars.iv58 = phi i64 [ 0, %.lr.ph31 ], [ %indvars.iv.next59, %67 ]
  %68 = getelementptr inbounds double* %inarray, i64 %indvars.iv58, !dbg !447
  %69 = bitcast double* %68 to i64*, !dbg !447
  %70 = load i64* %69, align 8, !dbg !447, !tbaa !363
  %71 = getelementptr inbounds double* %64, i64 %indvars.iv58, !dbg !449
  %72 = bitcast double* %71 to i64*, !dbg !450
  store i64 %70, i64* %72, align 8, !dbg !450, !tbaa !363
  %indvars.iv.next59 = add nuw nsw i64 %indvars.iv58, 1, !dbg !446
  %lftr.wideiv60 = trunc i64 %indvars.iv58 to i32, !dbg !446
  %exitcond61 = icmp eq i32 %lftr.wideiv60, %66, !dbg !446
  br i1 %exitcond61, label %.loopexit, label %67, !dbg !446

; <label>:73                                      ; preds = %0
  %74 = bitcast i8* %outarray to x86_fp80*, !dbg !451
  tail call void @llvm.dbg.value(metadata x86_fp80* %74, i64 0, metadata !253, metadata !263), !dbg !452
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !226, metadata !263), !dbg !371
  %75 = icmp sgt i32 %num_elems, 0, !dbg !453
  br i1 %75, label %.lr.ph33, label %.loopexit, !dbg !456

.lr.ph33:                                         ; preds = %73
  %76 = add i32 %num_elems, -1, !dbg !456
  br label %77, !dbg !456

; <label>:77                                      ; preds = %77, %.lr.ph33
  %indvars.iv62 = phi i64 [ 0, %.lr.ph33 ], [ %indvars.iv.next63, %77 ]
  %78 = getelementptr inbounds double* %inarray, i64 %indvars.iv62, !dbg !457
  %79 = load double* %78, align 8, !dbg !457, !tbaa !363
  %80 = fpext double %79 to x86_fp80, !dbg !459
  %81 = getelementptr inbounds x86_fp80* %74, i64 %indvars.iv62, !dbg !460
  store x86_fp80 %80, x86_fp80* %81, align 16, !dbg !461, !tbaa !462
  %indvars.iv.next63 = add nuw nsw i64 %indvars.iv62, 1, !dbg !456
  %lftr.wideiv64 = trunc i64 %indvars.iv62 to i32, !dbg !456
  %exitcond65 = icmp eq i32 %lftr.wideiv64, %76, !dbg !456
  br i1 %exitcond65, label %.loopexit, label %77, !dbg !456

; <label>:82                                      ; preds = %0
  %83 = tail call i32 @CCTK_Warn(i32 1, i32 655, i8* getelementptr inbounds ([82 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8]* @.str7, i64 0, i64 0)) #6, !dbg !464
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !227, metadata !263), !dbg !355
  br label %.loopexit

.loopexit:                                        ; preds = %77, %67, %58, %48, %39, %30, %21, %12, %3, %73, %63, %54, %44, %35, %26, %17, %8, %.preheader, %82
  %retval.0 = phi i32 [ -1, %82 ], [ 0, %.preheader ], [ 0, %8 ], [ 0, %17 ], [ 0, %26 ], [ 0, %35 ], [ 0, %44 ], [ 0, %54 ], [ 0, %63 ], [ 0, %73 ], [ 0, %3 ], [ 0, %12 ], [ 0, %21 ], [ 0, %30 ], [ 0, %39 ], [ 0, %48 ], [ 0, %58 ], [ 0, %67 ], [ 0, %77 ]
  ret i32 %retval.0, !dbg !466
}
