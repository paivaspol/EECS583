define i32 @PUGH_ReductionArrays(%struct.cGH* %GH, i32 %proc, i32 %num_dims, i32* nocapture readonly %dims, i32 %intype, i32 %num_inarrays, i8** %inarrays, i32 %outtype, i32 %num_outvals, i8* nocapture %outvals, i32 (%struct.cGH*, i32, i32, i32*, i32*, i32*, i32*, i32, i32, i32*, i8**, i32, double*)* nocapture %reduction_fn) #1 {
  %from = alloca [1 x i32], align 4
  %to = alloca [1 x i32], align 4
  %iterator = alloca [1 x i32], align 4
  %points_per_dim = alloca [1 x i32], align 4
  tail call void @llvm.dbg.value(metadata %struct.cGH* %GH, i64 0, metadata !143, metadata !263), !dbg !264
  tail call void @llvm.dbg.value(metadata i32 %proc, i64 0, metadata !144, metadata !263), !dbg !265
  tail call void @llvm.dbg.value(metadata i32 %num_dims, i64 0, metadata !145, metadata !263), !dbg !266
  tail call void @llvm.dbg.value(metadata i32* %dims, i64 0, metadata !146, metadata !263), !dbg !267
  tail call void @llvm.dbg.value(metadata i32 %intype, i64 0, metadata !147, metadata !263), !dbg !268
  tail call void @llvm.dbg.value(metadata i32 %num_inarrays, i64 0, metadata !148, metadata !263), !dbg !269
  tail call void @llvm.dbg.value(metadata i8** %inarrays, i64 0, metadata !149, metadata !263), !dbg !270
  tail call void @llvm.dbg.value(metadata i32 %outtype, i64 0, metadata !150, metadata !263), !dbg !271
  tail call void @llvm.dbg.value(metadata i32 %num_outvals, i64 0, metadata !151, metadata !263), !dbg !272
  tail call void @llvm.dbg.value(metadata i8* %outvals, i64 0, metadata !152, metadata !263), !dbg !273
  tail call void @llvm.dbg.value(metadata i32 (%struct.cGH*, i32, i32, i32*, i32*, i32*, i32*, i32, i32, i32*, i8**, i32, double*)* %reduction_fn, i64 0, metadata !153, metadata !263), !dbg !274
  tail call void @llvm.dbg.declare(metadata [1 x i32]* %from, metadata !157, metadata !263), !dbg !275
  tail call void @llvm.dbg.declare(metadata [1 x i32]* %to, metadata !161, metadata !263), !dbg !276
  tail call void @llvm.dbg.declare(metadata [1 x i32]* %iterator, metadata !162, metadata !263), !dbg !277
  tail call void @llvm.dbg.declare(metadata [1 x i32]* %points_per_dim, metadata !163, metadata !263), !dbg !278
  %1 = getelementptr inbounds [1 x i32]* %points_per_dim, i64 0, i64 0, !dbg !279
  store i32 1, i32* %1, align 4, !dbg !280, !tbaa !281
  %2 = getelementptr inbounds [1 x i32]* %from, i64 0, i64 0, !dbg !285
  store i32 0, i32* %2, align 4, !dbg !286, !tbaa !281
  %3 = load i32* %dims, align 4, !dbg !287, !tbaa !281
  %4 = getelementptr inbounds [1 x i32]* %to, i64 0, i64 0, !dbg !288
  store i32 %3, i32* %4, align 4, !dbg !289, !tbaa !281
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !154, metadata !263), !dbg !290
  %5 = icmp sgt i32 %num_dims, 1, !dbg !291
  br i1 %5, label %.lr.ph4, label %12, !dbg !294

.lr.ph4:                                          ; preds = %0
  %6 = add i32 %num_dims, -1, !dbg !294
  br label %7, !dbg !294

; <label>:7                                       ; preds = %7, %.lr.ph4
  %indvars.iv6 = phi i64 [ 1, %.lr.ph4 ], [ %indvars.iv.next7, %7 ]
  %8 = phi i32 [ %3, %.lr.ph4 ], [ %11, %7 ], !dbg !295
  %9 = getelementptr inbounds i32* %dims, i64 %indvars.iv6, !dbg !295
  %10 = load i32* %9, align 4, !dbg !295, !tbaa !281
  %11 = mul nsw i32 %8, %10, !dbg !297
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1, !dbg !294
  %lftr.wideiv8 = trunc i64 %indvars.iv6 to i32, !dbg !294
  %exitcond9 = icmp eq i32 %lftr.wideiv8, %6, !dbg !294
  br i1 %exitcond9, label %._crit_edge5, label %7, !dbg !294

._crit_edge5:                                     ; preds = %7
  store i32 %11, i32* %4, align 4, !dbg !297, !tbaa !281
  br label %12, !dbg !294

; <label>:12                                      ; preds = %._crit_edge5, %0
  %13 = phi i32 [ %11, %._crit_edge5 ], [ %3, %0 ]
  %14 = icmp eq i32 %num_outvals, 1, !dbg !298
  br i1 %14, label %20, label %15, !dbg !300

; <label>:15                                      ; preds = %12
  %16 = icmp eq i32 %13, %num_outvals, !dbg !301
  br i1 %16, label %19, label %17, !dbg !304

; <label>:17                                      ; preds = %15
  %18 = tail call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 150, i8* getelementptr inbounds ([82 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([121 x i8]* @.str2, i64 0, i64 0), i32 %num_dims, i32 %13, i32 %num_outvals) #6, !dbg !305
  br label %50, !dbg !307

; <label>:19                                      ; preds = %15
  store i32 1, i32* %4, align 4, !dbg !308, !tbaa !281
  br label %20, !dbg !309

; <label>:20                                      ; preds = %12, %19
  %21 = phi i32 [ %13, %12 ], [ 1, %19 ]
  %22 = load i32 (%struct.cGH*)** @CCTK_nProcs, align 8, !dbg !310, !tbaa !311
  %23 = tail call i32 %22(%struct.cGH* %GH) #6, !dbg !310
  %24 = mul nsw i32 %23, %21, !dbg !313
  tail call void @llvm.dbg.value(metadata i32 %24, i64 0, metadata !155, metadata !263), !dbg !314
  %25 = sext i32 %num_inarrays to i64, !dbg !315
  %26 = shl nsw i64 %25, 2, !dbg !316
  %27 = tail call i8* @malloc(i64 %26) #6, !dbg !317
  %28 = bitcast i8* %27 to i32*, !dbg !318
  tail call void @llvm.dbg.value(metadata i32* %28, i64 0, metadata !164, metadata !263), !dbg !319
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !154, metadata !263), !dbg !290
  %29 = icmp sgt i32 %num_inarrays, 0, !dbg !320
  br i1 %29, label %.lr.ph, label %._crit_edge, !dbg !323

.lr.ph:                                           ; preds = %20
  %30 = add i32 %num_inarrays, -1, !dbg !323
  br label %31, !dbg !323

; <label>:31                                      ; preds = %31, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %31 ]
  %32 = getelementptr inbounds i32* %28, i64 %indvars.iv, !dbg !324
  store i32 %intype, i32* %32, align 4, !dbg !326, !tbaa !281
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !323
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !323
  %exitcond = icmp eq i32 %lftr.wideiv, %30, !dbg !323
  br i1 %exitcond, label %._crit_edge, label %31, !dbg !323

._crit_edge:                                      ; preds = %31, %20
  %33 = sext i32 %num_outvals to i64, !dbg !327
  %34 = shl nsw i64 %33, 3, !dbg !328
  %35 = tail call i8* @malloc(i64 %34) #6, !dbg !329
  %36 = bitcast i8* %35 to double*, !dbg !330
  tail call void @llvm.dbg.value(metadata double* %36, i64 0, metadata !165, metadata !263), !dbg !331
  %37 = getelementptr inbounds [1 x i32]* %iterator, i64 0, i64 0, !dbg !332
  %38 = call i32 %reduction_fn(%struct.cGH* %GH, i32 %proc, i32 %num_dims, i32* %2, i32* %4, i32* %37, i32* %1, i32 %24, i32 %num_inarrays, i32* %28, i8** %inarrays, i32 %num_outvals, double* %36) #6, !dbg !333
  call void @llvm.dbg.value(metadata i32 %38, i64 0, metadata !156, metadata !263), !dbg !334
  %39 = icmp eq i32 %38, 0, !dbg !335
  br i1 %39, label %40, label %49, !dbg !337

; <label>:40                                      ; preds = %._crit_edge
  %41 = icmp slt i32 %proc, 0, !dbg !338
  br i1 %41, label %46, label %42, !dbg !339

; <label>:42                                      ; preds = %40
  %43 = load i32 (%struct.cGH*)** @CCTK_MyProc, align 8, !dbg !340, !tbaa !311
  %44 = call i32 %43(%struct.cGH* %GH) #6, !dbg !340
  %45 = icmp eq i32 %44, %proc, !dbg !341
  br i1 %45, label %46, label %49, !dbg !342

; <label>:46                                      ; preds = %42, %40
  %47 = mul nsw i32 %num_outvals, %num_inarrays, !dbg !343
  %48 = call fastcc i32 @copy_real_to_outtype(i32 %47, double* %36, i32 %outtype, i8* %outvals) #7, !dbg !345
  call void @llvm.dbg.value(metadata i32 %48, i64 0, metadata !156, metadata !263), !dbg !334
  br label %49, !dbg !346

; <label>:49                                      ; preds = %46, %42, %._crit_edge
  %retval.0 = phi i32 [ %48, %46 ], [ 0, %42 ], [ %38, %._crit_edge ]
  call void @free(i8* %27) #7, !dbg !347
  call void @free(i8* %35) #7, !dbg !348
  br label %50, !dbg !349

; <label>:50                                      ; preds = %49, %17
  %.0 = phi i32 [ -1, %17 ], [ %retval.0, %49 ]
  ret i32 %.0, !dbg !350
}
