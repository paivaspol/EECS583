define i32 @PUGH_ReductionArrays(%struct.cGH* %GH, i32 %proc, i32 %num_dims, i32* nocapture %dims, i32 %intype, i32 %num_inarrays, i8** %inarrays, i32 %outtype, i32 %num_outvals, i8* nocapture %outvals, i32 (%struct.cGH*, i32, i32, i32*, i32*, i32*, i32*, i32, i32, i32*, i8**, i32, double*)* nocapture %reduction_fn) #1 {
entry:
  %from = alloca [1 x i32], align 4
  %to = alloca [1 x i32], align 4
  %iterator = alloca [1 x i32], align 4
  %points_per_dim = alloca [1 x i32], align 4
  call void @llvm.dbg.value(metadata !{%struct.cGH* %GH}, i64 0, metadata !57), !dbg !245
  call void @llvm.dbg.value(metadata !{i32 %proc}, i64 0, metadata !58), !dbg !246
  call void @llvm.dbg.value(metadata !{i32 %num_dims}, i64 0, metadata !59), !dbg !247
  call void @llvm.dbg.value(metadata !{i32* %dims}, i64 0, metadata !60), !dbg !248
  call void @llvm.dbg.value(metadata !{i32 %intype}, i64 0, metadata !61), !dbg !249
  call void @llvm.dbg.value(metadata !{i32 %num_inarrays}, i64 0, metadata !62), !dbg !250
  call void @llvm.dbg.value(metadata !{i8** %inarrays}, i64 0, metadata !63), !dbg !251
  call void @llvm.dbg.value(metadata !{i32 %outtype}, i64 0, metadata !64), !dbg !252
  call void @llvm.dbg.value(metadata !{i32 %num_outvals}, i64 0, metadata !65), !dbg !253
  call void @llvm.dbg.value(metadata !{i8* %outvals}, i64 0, metadata !66), !dbg !254
  call void @llvm.dbg.value(metadata !{i32 (%struct.cGH*, i32, i32, i32*, i32*, i32*, i32*, i32, i32, i32*, i8**, i32, double*)* %reduction_fn}, i64 0, metadata !67), !dbg !255
  call void @llvm.dbg.declare(metadata !{[1 x i32]* %from}, metadata !71), !dbg !256
  call void @llvm.dbg.declare(metadata !{[1 x i32]* %to}, metadata !75), !dbg !256
  call void @llvm.dbg.declare(metadata !{[1 x i32]* %iterator}, metadata !76), !dbg !256
  call void @llvm.dbg.declare(metadata !{[1 x i32]* %points_per_dim}, metadata !77), !dbg !256
  %arrayidx = getelementptr inbounds [1 x i32]* %points_per_dim, i64 0, i64 0, !dbg !257
  store i32 1, i32* %arrayidx, align 4, !dbg !257, !tbaa !258
  %arrayidx2 = getelementptr inbounds [1 x i32]* %from, i64 0, i64 0, !dbg !261
  store i32 0, i32* %arrayidx2, align 4, !dbg !261, !tbaa !258
  %0 = load i32* %dims, align 4, !dbg !262, !tbaa !258
  %arrayidx4 = getelementptr inbounds [1 x i32]* %to, i64 0, i64 0, !dbg !262
  store i32 %0, i32* %arrayidx4, align 4, !dbg !262, !tbaa !258
  call void @llvm.dbg.value(metadata !263, i64 0, metadata !68), !dbg !264
  %cmp73 = icmp sgt i32 %num_dims, 1, !dbg !264
  br i1 %cmp73, label %for.body, label %for.end, !dbg !264

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv75 = phi i64 [ %indvars.iv.next76, %for.body ], [ 1, %entry ]
  %1 = phi i32 [ %mul, %for.body ], [ %0, %entry ], !dbg !266
  %arrayidx5 = getelementptr inbounds i32* %dims, i64 %indvars.iv75, !dbg !266
  %2 = load i32* %arrayidx5, align 4, !dbg !266, !tbaa !258
  %mul = mul nsw i32 %1, %2, !dbg !266
  %indvars.iv.next76 = add i64 %indvars.iv75, 1, !dbg !264
  %lftr.wideiv77 = trunc i64 %indvars.iv.next76 to i32, !dbg !264
  %exitcond78 = icmp eq i32 %lftr.wideiv77, %num_dims, !dbg !264
  br i1 %exitcond78, label %for.cond.for.end_crit_edge, label %for.body, !dbg !264

for.cond.for.end_crit_edge:                       ; preds = %for.body
  store i32 %mul, i32* %arrayidx4, align 4, !dbg !266, !tbaa !258
  br label %for.end, !dbg !264

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %entry
  %3 = phi i32 [ %mul, %for.cond.for.end_crit_edge ], [ %0, %entry ]
  %cmp7 = icmp eq i32 %num_outvals, 1, !dbg !268
  br i1 %cmp7, label %if.end13, label %if.then, !dbg !268

if.then:                                          ; preds = %for.end
  %cmp9 = icmp eq i32 %3, %num_outvals, !dbg !269
  br i1 %cmp9, label %if.end, label %if.then10, !dbg !269

if.then10:                                        ; preds = %if.then
  %call = call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 150, i8* getelementptr inbounds ([70 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([121 x i8]* @.str2, i64 0, i64 0), i32 %num_dims, i32 %3, i32 %num_outvals) #6, !dbg !271
  br label %return, !dbg !273

if.end:                                           ; preds = %if.then
  store i32 1, i32* %arrayidx4, align 4, !dbg !274, !tbaa !258
  br label %if.end13, !dbg !275

if.end13:                                         ; preds = %for.end, %if.end
  %4 = phi i32 [ %3, %for.end ], [ 1, %if.end ]
  %5 = load i32 (%struct.cGH*)** @CCTK_nProcs, align 8, !dbg !276, !tbaa !277
  %call15 = call i32 %5(%struct.cGH* %GH) #6, !dbg !276
  %mul16 = mul nsw i32 %call15, %4, !dbg !276
  call void @llvm.dbg.value(metadata !{i32 %mul16}, i64 0, metadata !69), !dbg !276
  %conv = sext i32 %num_inarrays to i64, !dbg !278
  %mul17 = shl nsw i64 %conv, 2, !dbg !278
  %call18 = call noalias i8* @malloc(i64 %mul17) #6, !dbg !278
  %6 = bitcast i8* %call18 to i32*, !dbg !278
  call void @llvm.dbg.value(metadata !{i32* %6}, i64 0, metadata !78), !dbg !278
  call void @llvm.dbg.value(metadata !2, i64 0, metadata !68), !dbg !279
  %cmp2071 = icmp sgt i32 %num_inarrays, 0, !dbg !279
  br i1 %cmp2071, label %for.body22, label %for.end27, !dbg !279

for.body22:                                       ; preds = %if.end13, %for.body22
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body22 ], [ 0, %if.end13 ]
  %arrayidx24 = getelementptr inbounds i32* %6, i64 %indvars.iv, !dbg !281
  store i32 %intype, i32* %arrayidx24, align 4, !dbg !281, !tbaa !258
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !279
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !279
  %exitcond = icmp eq i32 %lftr.wideiv, %num_inarrays, !dbg !279
  br i1 %exitcond, label %for.end27, label %for.body22, !dbg !279

for.end27:                                        ; preds = %for.body22, %if.end13
  %conv28 = sext i32 %num_outvals to i64, !dbg !283
  %mul29 = shl nsw i64 %conv28, 3, !dbg !283
  %call30 = call noalias i8* @malloc(i64 %mul29) #6, !dbg !283
  %7 = bitcast i8* %call30 to double*, !dbg !283
  call void @llvm.dbg.value(metadata !{double* %7}, i64 0, metadata !79), !dbg !283
  %arraydecay32 = getelementptr inbounds [1 x i32]* %iterator, i64 0, i64 0, !dbg !284
  %call34 = call i32 %reduction_fn(%struct.cGH* %GH, i32 %proc, i32 %num_dims, i32* %arrayidx2, i32* %arrayidx4, i32* %arraydecay32, i32* %arrayidx, i32 %mul16, i32 %num_inarrays, i32* %6, i8** %inarrays, i32 %num_outvals, double* %7) #6, !dbg !284
  call void @llvm.dbg.value(metadata !{i32 %call34}, i64 0, metadata !70), !dbg !284
  %cmp35 = icmp eq i32 %call34, 0, !dbg !285
  br i1 %cmp35, label %land.lhs.true, label %if.end45, !dbg !285

land.lhs.true:                                    ; preds = %for.end27
  %cmp37 = icmp slt i32 %proc, 0, !dbg !285
  br i1 %cmp37, label %if.then42, label %lor.lhs.false, !dbg !285

lor.lhs.false:                                    ; preds = %land.lhs.true
  %8 = load i32 (%struct.cGH*)** @CCTK_MyProc, align 8, !dbg !285, !tbaa !277
  %call39 = call i32 %8(%struct.cGH* %GH) #6, !dbg !285
  %cmp40 = icmp eq i32 %call39, %proc, !dbg !285
  br i1 %cmp40, label %if.then42, label %if.end45, !dbg !285

if.then42:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %mul43 = mul nsw i32 %num_outvals, %num_inarrays, !dbg !286
  %call44 = call fastcc i32 @copy_real_to_outtype(i32 %mul43, double* %7, i32 %outtype, i8* %outvals) #7, !dbg !286
  call void @llvm.dbg.value(metadata !{i32 %call44}, i64 0, metadata !70), !dbg !286
  br label %if.end45, !dbg !288

if.end45:                                         ; preds = %if.then42, %lor.lhs.false, %for.end27
  %retval1.0 = phi i32 [ %call44, %if.then42 ], [ 0, %lor.lhs.false ], [ %call34, %for.end27 ]
  call void @free(i8* %call18) #6, !dbg !289
  call void @free(i8* %call30) #6, !dbg !290
  br label %return, !dbg !291

return:                                           ; preds = %if.end45, %if.then10
  %retval.0 = phi i32 [ -1, %if.then10 ], [ %retval1.0, %if.end45 ]
  ret i32 %retval.0, !dbg !292
}
