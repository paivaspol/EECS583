define void @PhysToConf(i32 %nx, i32 %ny, i32 %nz, double* nocapture %psi, double* nocapture %gxx, double* nocapture %gxy, double* nocapture %gxz, double* nocapture %gyy, double* nocapture %gyz, double* nocapture %gzz) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %nx}, i64 0, metadata !47), !dbg !113
  tail call void @llvm.dbg.value(metadata !{i32 %ny}, i64 0, metadata !48), !dbg !114
  tail call void @llvm.dbg.value(metadata !{i32 %nz}, i64 0, metadata !49), !dbg !115
  tail call void @llvm.dbg.value(metadata !{double* %psi}, i64 0, metadata !50), !dbg !116
  tail call void @llvm.dbg.value(metadata !{double* %gxx}, i64 0, metadata !51), !dbg !117
  tail call void @llvm.dbg.value(metadata !{double* %gxy}, i64 0, metadata !52), !dbg !118
  tail call void @llvm.dbg.value(metadata !{double* %gxz}, i64 0, metadata !53), !dbg !119
  tail call void @llvm.dbg.value(metadata !{double* %gyy}, i64 0, metadata !54), !dbg !120
  tail call void @llvm.dbg.value(metadata !{double* %gyz}, i64 0, metadata !55), !dbg !121
  tail call void @llvm.dbg.value(metadata !{double* %gzz}, i64 0, metadata !56), !dbg !122
  %call = tail call i32 @CCTK_Warn(i32 4, i32 115, i8* getelementptr inbounds ([67 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8]* @.str3, i64 0, i64 0)) #4, !dbg !123
  %mul = mul nsw i32 %ny, %nx, !dbg !124
  %mul1 = mul nsw i32 %mul, %nz, !dbg !124
  tail call void @llvm.dbg.value(metadata !{i32 %mul1}, i64 0, metadata !57), !dbg !124
  %cmp42 = icmp sgt i32 %mul1, 0, !dbg !125
  br i1 %cmp42, label %while.body.lr.ph, label %while.end, !dbg !125

while.body.lr.ph:                                 ; preds = %entry
  %0 = mul i32 %nz, %ny, !dbg !125
  %1 = mul i32 %0, %nx, !dbg !125
  %2 = sext i32 %1 to i64
  br label %while.body, !dbg !125

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %indvars.iv = phi i64 [ %2, %while.body.lr.ph ], [ %indvars.iv.next, %while.body ]
  %indvars.iv.next = add i64 %indvars.iv, -1, !dbg !125
  %arrayidx = getelementptr inbounds double* %psi, i64 %indvars.iv.next, !dbg !126
  %3 = load double* %arrayidx, align 8, !dbg !126, !tbaa !89
  %mul4 = fmul double %3, %3, !dbg !126
  tail call void @llvm.dbg.value(metadata !{double %mul4}, i64 0, metadata !58), !dbg !126
  %mul5 = fmul double %mul4, %mul4, !dbg !128
  tail call void @llvm.dbg.value(metadata !{double %mul5}, i64 0, metadata !58), !dbg !128
  %div = fdiv double 1.000000e+00, %mul5, !dbg !129
  tail call void @llvm.dbg.value(metadata !{double %div}, i64 0, metadata !58), !dbg !129
  %arrayidx7 = getelementptr inbounds double* %gxx, i64 %indvars.iv.next, !dbg !130
  %4 = load double* %arrayidx7, align 8, !dbg !130, !tbaa !89
  %mul8 = fmul double %div, %4, !dbg !130
  store double %mul8, double* %arrayidx7, align 8, !dbg !130, !tbaa !89
  %arrayidx10 = getelementptr inbounds double* %gxy, i64 %indvars.iv.next, !dbg !131
  %5 = load double* %arrayidx10, align 8, !dbg !131, !tbaa !89
  %mul11 = fmul double %div, %5, !dbg !131
  store double %mul11, double* %arrayidx10, align 8, !dbg !131, !tbaa !89
  %arrayidx13 = getelementptr inbounds double* %gxz, i64 %indvars.iv.next, !dbg !132
  %6 = load double* %arrayidx13, align 8, !dbg !132, !tbaa !89
  %mul14 = fmul double %div, %6, !dbg !132
  store double %mul14, double* %arrayidx13, align 8, !dbg !132, !tbaa !89
  %arrayidx16 = getelementptr inbounds double* %gyy, i64 %indvars.iv.next, !dbg !133
  %7 = load double* %arrayidx16, align 8, !dbg !133, !tbaa !89
  %mul17 = fmul double %div, %7, !dbg !133
  store double %mul17, double* %arrayidx16, align 8, !dbg !133, !tbaa !89
  %arrayidx19 = getelementptr inbounds double* %gyz, i64 %indvars.iv.next, !dbg !134
  %8 = load double* %arrayidx19, align 8, !dbg !134, !tbaa !89
  %mul20 = fmul double %div, %8, !dbg !134
  store double %mul20, double* %arrayidx19, align 8, !dbg !134, !tbaa !89
  %arrayidx22 = getelementptr inbounds double* %gzz, i64 %indvars.iv.next, !dbg !135
  %9 = load double* %arrayidx22, align 8, !dbg !135, !tbaa !89
  %mul23 = fmul double %div, %9, !dbg !135
  store double %mul23, double* %arrayidx22, align 8, !dbg !135, !tbaa !89
  %10 = trunc i64 %indvars.iv.next to i32, !dbg !125
  %cmp = icmp sgt i32 %10, 0, !dbg !125
  br i1 %cmp, label %while.body, label %while.end, !dbg !125

while.end:                                        ; preds = %while.body, %entry
  ret void, !dbg !136
}
