define void @ConfToPhys(i32 %nx, i32 %ny, i32 %nz, double* nocapture readonly %psi, double* nocapture %gxx, double* nocapture %gxy, double* nocapture %gxz, double* nocapture %gyy, double* nocapture %gyz, double* nocapture %gzz) #1 {
  tail call void @llvm.dbg.value(metadata i32 %nx, i64 0, metadata !17, metadata !77), !dbg !78
  tail call void @llvm.dbg.value(metadata i32 %ny, i64 0, metadata !18, metadata !77), !dbg !79
  tail call void @llvm.dbg.value(metadata i32 %nz, i64 0, metadata !19, metadata !77), !dbg !80
  tail call void @llvm.dbg.value(metadata double* %psi, i64 0, metadata !20, metadata !77), !dbg !81
  tail call void @llvm.dbg.value(metadata double* %gxx, i64 0, metadata !21, metadata !77), !dbg !82
  tail call void @llvm.dbg.value(metadata double* %gxy, i64 0, metadata !22, metadata !77), !dbg !83
  tail call void @llvm.dbg.value(metadata double* %gxz, i64 0, metadata !23, metadata !77), !dbg !84
  tail call void @llvm.dbg.value(metadata double* %gyy, i64 0, metadata !24, metadata !77), !dbg !85
  tail call void @llvm.dbg.value(metadata double* %gyz, i64 0, metadata !25, metadata !77), !dbg !86
  tail call void @llvm.dbg.value(metadata double* %gzz, i64 0, metadata !26, metadata !77), !dbg !87
  %1 = tail call i32 @CCTK_Warn(i32 4, i32 66, i8* getelementptr inbounds ([79 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8]* @.str2, i64 0, i64 0)) #4, !dbg !88
  %2 = mul nsw i32 %ny, %nx, !dbg !89
  %3 = mul nsw i32 %2, %nz, !dbg !90
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !28, metadata !77), !dbg !91
  %4 = icmp sgt i32 %3, 0, !dbg !92
  br i1 %4, label %.lr.ph, label %._crit_edge, !dbg !93

.lr.ph:                                           ; preds = %0
  %5 = mul i32 %nz, %ny, !dbg !93
  %6 = mul i32 %5, %nx, !dbg !93
  %7 = sext i32 %6 to i64
  br label %8, !dbg !93

; <label>:8                                       ; preds = %.lr.ph, %8
  %indvars.iv = phi i64 [ %7, %.lr.ph ], [ %indvars.iv.next, %8 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !93
  %9 = getelementptr inbounds double* %psi, i64 %indvars.iv.next, !dbg !94
  %10 = load double* %9, align 8, !dbg !94, !tbaa !96
  %11 = fmul double %10, %10, !dbg !100
  tail call void @llvm.dbg.value(metadata double %11, i64 0, metadata !27, metadata !77), !dbg !101
  %12 = fmul double %11, %11, !dbg !102
  tail call void @llvm.dbg.value(metadata double %12, i64 0, metadata !27, metadata !77), !dbg !101
  %13 = getelementptr inbounds double* %gxx, i64 %indvars.iv.next, !dbg !103
  %14 = load double* %13, align 8, !dbg !104, !tbaa !96
  %15 = fmul double %14, %12, !dbg !104
  store double %15, double* %13, align 8, !dbg !104, !tbaa !96
  %16 = getelementptr inbounds double* %gxy, i64 %indvars.iv.next, !dbg !105
  %17 = load double* %16, align 8, !dbg !106, !tbaa !96
  %18 = fmul double %17, %12, !dbg !106
  store double %18, double* %16, align 8, !dbg !106, !tbaa !96
  %19 = getelementptr inbounds double* %gxz, i64 %indvars.iv.next, !dbg !107
  %20 = load double* %19, align 8, !dbg !108, !tbaa !96
  %21 = fmul double %12, %20, !dbg !108
  store double %21, double* %19, align 8, !dbg !108, !tbaa !96
  %22 = getelementptr inbounds double* %gyy, i64 %indvars.iv.next, !dbg !109
  %23 = load double* %22, align 8, !dbg !110, !tbaa !96
  %24 = fmul double %12, %23, !dbg !110
  store double %24, double* %22, align 8, !dbg !110, !tbaa !96
  %25 = getelementptr inbounds double* %gyz, i64 %indvars.iv.next, !dbg !111
  %26 = load double* %25, align 8, !dbg !112, !tbaa !96
  %27 = fmul double %12, %26, !dbg !112
  store double %27, double* %25, align 8, !dbg !112, !tbaa !96
  %28 = getelementptr inbounds double* %gzz, i64 %indvars.iv.next, !dbg !113
  %29 = load double* %28, align 8, !dbg !114, !tbaa !96
  %30 = fmul double %12, %29, !dbg !114
  store double %30, double* %28, align 8, !dbg !114, !tbaa !96
  %31 = icmp sgt i64 %indvars.iv, 1, !dbg !92
  br i1 %31, label %8, label %._crit_edge, !dbg !93

._crit_edge:                                      ; preds = %8, %0
  ret void, !dbg !115
}
