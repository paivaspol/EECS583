define i32 @PUGH_GetBounds(i32 %dim, i32** nocapture %bounds, i32* nocapture readonly %nprocs, i32* nocapture readonly %nsize) #1 {
  %1 = load i8** getelementptr inbounds (%struct.anon.0* @pughpriv_, i64 0, i32 2), align 8, !tbaa !6
  %2 = load i8** getelementptr inbounds (%struct.anon.0* @pughpriv_, i64 0, i32 3), align 8, !tbaa !9
  %3 = load i8** getelementptr inbounds (%struct.anon.0* @pughpriv_, i64 0, i32 4), align 8, !tbaa !10
  %4 = load i8** getelementptr inbounds (%struct.anon.0* @pughpriv_, i64 0, i32 5), align 8, !tbaa !11
  %5 = load i8** getelementptr inbounds (%struct.anon.0* @pughpriv_, i64 0, i32 6), align 8, !tbaa !12
  %6 = load i8** getelementptr inbounds (%struct.anon.0* @pughpriv_, i64 0, i32 7), align 8, !tbaa !13
  %7 = load i8** getelementptr inbounds (%struct.anon.0* @pughpriv_, i64 0, i32 8), align 8, !tbaa !14
  %8 = tail call i32 @CCTK_Equals(i8* %1, i8* getelementptr inbounds ([7 x i8]* @.str3, i64 0, i64 0)) #5
  switch i32 %dim, label %61 [
    i32 1, label %9
    i32 2, label %16
    i32 3, label %34
  ]

; <label>:9                                       ; preds = %0
  %10 = load i8** @partition_1D.0, align 8, !tbaa !2
  %11 = icmp ne i8* %10, null
  %12 = select i1 %11, i8* %10, i8* %2
  %13 = load i32* %nprocs, align 4, !tbaa !15
  %14 = load i32* %nsize, align 4, !tbaa !15
  %not. = icmp ne i32 %8, 0
  %. = or i1 %not., %11
  %15 = zext i1 %. to i32
  tail call fastcc void @PUGH_GetSliceSizes(i32 %13, i32 %14, i8* %12, i32** %bounds, i32 %15) #4
  br label %.loopexit

; <label>:16                                      ; preds = %0
  %17 = load i8** @partition_2D.0, align 16, !tbaa !2
  %18 = icmp ne i8* %17, null
  %19 = select i1 %18, i8* %17, i8* %3
  %20 = load i32* %nprocs, align 4, !tbaa !15
  %21 = load i32* %nsize, align 4, !tbaa !15
  %22 = icmp ne i32 %8, 0
  %.1 = or i1 %22, %18
  %23 = zext i1 %.1 to i32
  tail call fastcc void @PUGH_GetSliceSizes(i32 %20, i32 %21, i8* %19, i32** %bounds, i32 %23) #4
  %24 = load i8** @partition_2D.1, align 8, !tbaa !2
  %25 = icmp ne i8* %24, null
  %26 = select i1 %25, i8* %24, i8* %4
  %27 = getelementptr inbounds i32* %nprocs, i64 1
  %28 = load i32* %27, align 4, !tbaa !15
  %29 = getelementptr inbounds i32* %nsize, i64 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = getelementptr inbounds i32** %bounds, i64 1
  %32 = or i1 %22, %25
  %33 = zext i1 %32 to i32
  tail call fastcc void @PUGH_GetSliceSizes(i32 %28, i32 %30, i8* %26, i32** %31, i32 %33) #4
  br label %.loopexit

; <label>:34                                      ; preds = %0
  %35 = load i8** @partition_3D.0, align 16, !tbaa !2
  %36 = icmp ne i8* %35, null
  %37 = select i1 %36, i8* %35, i8* %5
  %38 = load i32* %nprocs, align 4, !tbaa !15
  %39 = load i32* %nsize, align 4, !tbaa !15
  %40 = icmp ne i32 %8, 0
  %.2 = or i1 %40, %36
  %41 = zext i1 %.2 to i32
  tail call fastcc void @PUGH_GetSliceSizes(i32 %38, i32 %39, i8* %37, i32** %bounds, i32 %41) #4
  %42 = load i8** @partition_3D.1, align 8, !tbaa !2
  %43 = icmp ne i8* %42, null
  %44 = select i1 %43, i8* %42, i8* %6
  %45 = getelementptr inbounds i32* %nprocs, i64 1
  %46 = load i32* %45, align 4, !tbaa !15
  %47 = getelementptr inbounds i32* %nsize, i64 1
  %48 = load i32* %47, align 4, !tbaa !15
  %49 = getelementptr inbounds i32** %bounds, i64 1
  %50 = or i1 %40, %43
  %51 = zext i1 %50 to i32
  tail call fastcc void @PUGH_GetSliceSizes(i32 %46, i32 %48, i8* %44, i32** %49, i32 %51) #4
  %52 = load i8** @partition_3D.2, align 16, !tbaa !2
  %53 = icmp ne i8* %52, null
  %54 = select i1 %53, i8* %52, i8* %7
  %55 = getelementptr inbounds i32* %nprocs, i64 2
  %56 = load i32* %55, align 4, !tbaa !15
  %57 = getelementptr inbounds i32* %nsize, i64 2
  %58 = load i32* %57, align 4, !tbaa !15
  %59 = getelementptr inbounds i32** %bounds, i64 2
  %.3 = or i1 %40, %53
  %60 = zext i1 %.3 to i32
  tail call fastcc void @PUGH_GetSliceSizes(i32 %56, i32 %58, i8* %54, i32** %59, i32 %60) #4
  br label %.loopexit

; <label>:61                                      ; preds = %0
  %62 = icmp eq i32 %8, 0
  br i1 %62, label %.preheader, label %65

.preheader:                                       ; preds = %61
  %63 = icmp sgt i32 %dim, 0
  br i1 %63, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %.preheader
  %64 = add i32 %dim, -1
  br label %67

; <label>:65                                      ; preds = %61
  %66 = tail call i32 @CCTK_Warn(i32 1, i32 222, i8* getelementptr inbounds ([76 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8]* @.str4, i64 0, i64 0)) #5
  br label %.loopexit

; <label>:67                                      ; preds = %67, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %67 ]
  %68 = getelementptr inbounds i32* %nprocs, i64 %indvars.iv
  %69 = load i32* %68, align 4, !tbaa !15
  %70 = getelementptr inbounds i32* %nsize, i64 %indvars.iv
  %71 = load i32* %70, align 4, !tbaa !15
  %72 = getelementptr inbounds i32** %bounds, i64 %indvars.iv
  tail call fastcc void @PUGH_GetSliceSizes(i32 %69, i32 %71, i8* null, i32** %72, i32 0) #4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %64
  br i1 %exitcond, label %.loopexit, label %67

.loopexit:                                        ; preds = %67, %.preheader, %16, %65, %34, %9
  %retval.0 = phi i32 [ 0, %9 ], [ 0, %16 ], [ 0, %34 ], [ -1, %65 ], [ 0, %.preheader ], [ 0, %67 ]
  ret i32 %retval.0
}
