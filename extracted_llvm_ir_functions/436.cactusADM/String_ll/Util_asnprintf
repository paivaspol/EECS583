define i32 @Util_asnprintf(i8** nocapture %buffer, i64 %size, i8* %fmt, ...) #1 {
  %args = alloca [1 x %struct.__va_list_tag], align 16
  %1 = getelementptr inbounds [1 x %struct.__va_list_tag]* %args, i64 0, i64 0
  %2 = bitcast [1 x %struct.__va_list_tag]* %args to i8*
  call void @llvm.va_start(i8* %2)
  %3 = call i32 @Util_vsnprintf(i8* null, i64 0, i8* %fmt, %struct.__va_list_tag* %1) #7
  %4 = sext i32 %3 to i64
  %5 = add nsw i64 %4, 1
  %6 = icmp ugt i64 %5, %size
  %7 = load i8** %buffer, align 8, !tbaa !2
  br i1 %6, label %8, label %thread-pre-split

; <label>:8                                       ; preds = %0
  call void @free(i8* %7) #8
  %9 = call i8* @malloc(i64 %5) #7
  store i8* %9, i8** %buffer, align 8, !tbaa !2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %0, %8
  %10 = phi i8* [ %9, %8 ], [ %7, %0 ]
  %11 = icmp eq i8* %10, null
  br i1 %11, label %15, label %12

; <label>:12                                      ; preds = %thread-pre-split
  call void @llvm.va_start(i8* %2)
  %13 = load i8** %buffer, align 8, !tbaa !2
  %14 = call i32 @Util_vsnprintf(i8* %13, i64 %5, i8* %fmt, %struct.__va_list_tag* %1) #7
  call void @llvm.va_end(i8* %2)
  br label %15

; <label>:15                                      ; preds = %thread-pre-split, %12
  %count.0 = phi i32 [ %3, %12 ], [ 0, %thread-pre-split ]
  ret i32 %count.0
}
