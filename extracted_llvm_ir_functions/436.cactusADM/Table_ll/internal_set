define internal fastcc i32 @internal_set(i32 %handle, i32 %type_code, i32 %N_elements, i8* %value, i8* %key) #1 {
  %1 = icmp sgt i32 %handle, -1
  %2 = load i32* @N_thp_array, align 4
  %3 = icmp sgt i32 %2, %handle
  %or.cond.i = and i1 %1, %3
  br i1 %or.cond.i, label %get_table_header_ptr.exit, label %get_table_header_ptr.exit.thread

get_table_header_ptr.exit:                        ; preds = %0
  %4 = sext i32 %handle to i64
  %5 = load i8*** @thp_array, align 8, !tbaa !6
  %6 = getelementptr inbounds i8** %5, i64 %4
  %7 = bitcast i8** %6 to %struct.table_header**
  %8 = load %struct.table_header** %7, align 8, !tbaa !6
  %9 = icmp eq %struct.table_header* %8, null
  br i1 %9, label %get_table_header_ptr.exit.thread, label %10

; <label>:10                                      ; preds = %get_table_header_ptr.exit
  %11 = tail call i8* @strchr(i8* %key, i32 47) #10
  %not..i = icmp eq i8* %11, null
  br i1 %not..i, label %12, label %get_table_header_ptr.exit.thread

; <label>:12                                      ; preds = %10
  %13 = icmp slt i32 %N_elements, 0
  br i1 %13, label %get_table_header_ptr.exit.thread, label %14

; <label>:14                                      ; preds = %12
  %15 = tail call fastcc i32 @delete_key(%struct.table_header* %8, i8* %key) #9
  switch i32 %15, label %17 [
    i32 0, label %18
    i32 -103, label %16
  ]

; <label>:16                                      ; preds = %14
  br label %18

; <label>:17                                      ; preds = %14
  tail call void @abort() #11
  unreachable

; <label>:18                                      ; preds = %14, %16
  %return_value.0 = phi i32 [ 0, %16 ], [ 1, %14 ]
  %19 = tail call i8* @malloc(i64 32) #10
  %20 = icmp eq i8* %19, null
  br i1 %20, label %get_table_header_ptr.exit.thread, label %21

; <label>:21                                      ; preds = %18
  %22 = tail call i8* @Util_Strdup(i8* %key) #10
  %23 = getelementptr inbounds i8* %19, i64 8
  %24 = bitcast i8* %23 to i8**
  store i8* %22, i8** %24, align 8, !tbaa !14
  %25 = icmp eq i8* %22, null
  br i1 %25, label %26, label %27

; <label>:26                                      ; preds = %21
  tail call void @free(i8* %19) #9
  br label %get_table_header_ptr.exit.thread

; <label>:27                                      ; preds = %21
  %28 = getelementptr inbounds i8* %19, i64 16
  %29 = bitcast i8* %28 to i32*
  store i32 %type_code, i32* %29, align 4, !tbaa !16
  %30 = getelementptr inbounds i8* %19, i64 20
  %31 = bitcast i8* %30 to i32*
  store i32 %N_elements, i32* %31, align 4, !tbaa !17
  %32 = tail call i32 @CCTK_VarTypeSize(i32 %type_code) #10
  %33 = mul nsw i32 %32, %N_elements
  %34 = sext i32 %33 to i64
  %35 = tail call i8* @malloc(i64 %34) #10
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %38

; <label>:37                                      ; preds = %27
  tail call void @free(i8* %22) #9
  tail call void @free(i8* %19) #9
  br label %get_table_header_ptr.exit.thread

; <label>:38                                      ; preds = %27
  %39 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %35, i1 false)
  %40 = tail call i8* @__memcpy_chk(i8* %35, i8* %value, i64 %34, i64 %39) #10
  %41 = getelementptr inbounds i8* %19, i64 24
  %42 = bitcast i8* %41 to i8**
  store i8* %35, i8** %42, align 8, !tbaa !15
  %43 = bitcast %struct.table_header* %8 to i64*
  %44 = load i64* %43, align 8, !tbaa !8
  %45 = bitcast i8* %19 to i64*
  store i64 %44, i64* %45, align 8, !tbaa !12
  %46 = bitcast %struct.table_header* %8 to i8**
  store i8* %19, i8** %46, align 8, !tbaa !8
  br label %get_table_header_ptr.exit.thread

get_table_header_ptr.exit.thread:                 ; preds = %10, %0, %18, %12, %get_table_header_ptr.exit, %38, %37, %26
  %.0 = phi i32 [ -1, %26 ], [ -1, %37 ], [ %return_value.0, %38 ], [ -2, %get_table_header_ptr.exit ], [ -101, %10 ], [ -3, %12 ], [ -1, %18 ], [ -2, %0 ]
  ret i32 %.0
}
