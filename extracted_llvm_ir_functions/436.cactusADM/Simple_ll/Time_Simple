define void @Time_Simple(%struct.cGH* nocapture %cctkGH) #1 {
  %1 = load double* getelementptr inbounds (%struct.anon.0* @timepriv_, i64 0, i32 1), align 8, !tbaa !2
  %2 = getelementptr inbounds %struct.cGH* %cctkGH, i64 0, i32 0
  %3 = load i32* %2, align 4, !tbaa !8
  %4 = getelementptr inbounds %struct.cGH* %cctkGH, i64 0, i32 9
  %5 = getelementptr inbounds %struct.cGH* %cctkGH, i64 0, i32 10
  %6 = load double** %5, align 8, !tbaa !11
  %7 = tail call i32 @CCTK_VarIndex(i8* getelementptr inbounds ([17 x i8]* @.str, i64 0, i64 0)) #3
  %8 = tail call i32 @CCTK_VarIndex(i8* getelementptr inbounds ([23 x i8]* @.str1, i64 0, i64 0)) #3
  %9 = tail call i32 @CCTK_VarIndex(i8* getelementptr inbounds ([25 x i8]* @.str2, i64 0, i64 0)) #3
  %10 = icmp sgt i32 %3, 0
  br i1 %10, label %11, label %.thread3

; <label>:11                                      ; preds = %0
  %12 = load double* %6, align 8, !tbaa !12
  %13 = icmp sgt i32 %3, 1
  br i1 %13, label %14, label %.thread3

; <label>:14                                      ; preds = %11
  %15 = getelementptr inbounds double* %6, i64 1
  %16 = load double* %15, align 8, !tbaa !12
  %17 = fcmp olt double %12, %16
  %min_spacing.0. = select i1 %17, double %12, double %16
  %18 = icmp sgt i32 %3, 2
  br i1 %18, label %19, label %.thread3

; <label>:19                                      ; preds = %14
  %20 = getelementptr inbounds double* %6, i64 2
  %21 = load double* %20, align 8, !tbaa !12
  %22 = fcmp olt double %min_spacing.0., %21
  %min_spacing.1. = select i1 %22, double %min_spacing.0., double %21
  %23 = icmp sgt i32 %3, 3
  br i1 %23, label %24, label %.thread3

; <label>:24                                      ; preds = %19
  %25 = tail call i32 @CCTK_Warn(i32 0, i32 52, i8* getelementptr inbounds ([73 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8]* @.str5, i64 0, i64 0)) #3
  br label %.thread3

.thread3:                                         ; preds = %0, %11, %14, %24, %19
  %min_spacing.24 = phi double [ %min_spacing.1., %24 ], [ %min_spacing.1., %19 ], [ %min_spacing.0., %14 ], [ %12, %11 ], [ 0.000000e+00, %0 ]
  %26 = fmul double %1, %min_spacing.24
  store double %26, double* %4, align 8, !tbaa !13
  ret void
}
