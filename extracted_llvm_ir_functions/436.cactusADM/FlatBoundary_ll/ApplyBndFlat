define internal fastcc i32 @ApplyBndFlat(%struct.cGH* %GH, i32 %stencil_dir, i32* %stencil_alldirs, i32 %dir, i32 %first_var, i32 %num_vars) #1 {
  %doBC = alloca [6 x i32], align 16
  %dstag = alloca [3 x i32], align 4
  %lsh = alloca [3 x i32], align 4
  %lsh88 = bitcast [3 x i32]* %lsh to i8*
  %lssh = alloca [3 x i32], align 4
  %stencil = alloca [3 x i32], align 4
  tail call void @llvm.dbg.value(metadata %struct.cGH* %GH, i64 0, metadata !199, metadata !325), !dbg !343
  tail call void @llvm.dbg.value(metadata i32 %stencil_dir, i64 0, metadata !200, metadata !325), !dbg !344
  tail call void @llvm.dbg.value(metadata i32* %stencil_alldirs, i64 0, metadata !201, metadata !325), !dbg !345
  tail call void @llvm.dbg.value(metadata i32 %dir, i64 0, metadata !202, metadata !325), !dbg !346
  tail call void @llvm.dbg.value(metadata i32 %first_var, i64 0, metadata !203, metadata !325), !dbg !347
  tail call void @llvm.dbg.value(metadata i32 %num_vars, i64 0, metadata !204, metadata !325), !dbg !348
  tail call void @llvm.dbg.declare(metadata [6 x i32]* %doBC, metadata !213, metadata !325), !dbg !349
  tail call void @llvm.dbg.declare(metadata [3 x i32]* %dstag, metadata !217, metadata !325), !dbg !350
  tail call void @llvm.dbg.declare(metadata [3 x i32]* %lsh, metadata !221, metadata !325), !dbg !351
  tail call void @llvm.dbg.declare(metadata [3 x i32]* %lssh, metadata !222, metadata !325), !dbg !352
  tail call void @llvm.dbg.declare(metadata [3 x i32]* %stencil, metadata !223, metadata !325), !dbg !353
  %1 = tail call i32 @CCTK_GroupIndexFromVarI(i32 %first_var) #6, !dbg !354
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !210, metadata !325), !dbg !355
  %2 = tail call i32 @CCTK_GroupDimI(i32 %1) #6, !dbg !356
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !211, metadata !325), !dbg !357
  %3 = tail call i32 @CCTK_VarTypeI(i32 %first_var) #6, !dbg !358
  %4 = tail call i32 @CCTK_VarTypeSize(i32 %3) #6, !dbg !359
  tail call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !209, metadata !325), !dbg !360
  %5 = icmp sgt i32 %2, 3, !dbg !361
  br i1 %5, label %6, label %8, !dbg !363

; <label>:6                                       ; preds = %0
  %7 = tail call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 801, i8* getelementptr inbounds ([83 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8]* @.str11, i64 0, i64 0), i32 %2) #6, !dbg !364
  br label %.loopexit37, !dbg !366

; <label>:8                                       ; preds = %0
  %ispos = icmp sgt i32 %dir, -1, !dbg !367
  %neg = sub i32 0, %dir, !dbg !367
  %9 = select i1 %ispos, i32 %dir, i32 %neg, !dbg !367
  %10 = icmp sgt i32 %9, %2, !dbg !369
  br i1 %10, label %11, label %13, !dbg !370

; <label>:11                                      ; preds = %8
  %12 = tail call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 809, i8* getelementptr inbounds ([83 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8]* @.str12, i64 0, i64 0), i32 %dir, i32 %2) #6, !dbg !371
  br label %.loopexit37, !dbg !373

; <label>:13                                      ; preds = %8
  %14 = icmp ne i32 %dir, 0, !dbg !374
  br i1 %14, label %15, label %25, !dbg !376

; <label>:15                                      ; preds = %13
  %16 = add nsw i32 %9, -1, !dbg !377
  %17 = sext i32 %16 to i64, !dbg !379
  %18 = getelementptr inbounds [3 x i32]* %stencil, i64 0, i64 %17, !dbg !379
  store i32 %stencil_dir, i32* %18, align 4, !dbg !380, !tbaa !381
  br label %.preheader38, !dbg !385

.preheader38:                                     ; preds = %27, %15
  %19 = icmp slt i32 %2, 3, !dbg !386
  br i1 %19, label %.lr.ph84, label %35, !dbg !389

.lr.ph84:                                         ; preds = %.preheader38
  %20 = sext i32 %2 to i64
  %scevgep = getelementptr [3 x i32]* %lsh, i64 0, i64 %20
  %scevgep136 = bitcast i32* %scevgep to i8*
  %21 = sub i32 2, %2, !dbg !389
  %22 = zext i32 %21 to i64
  %23 = shl nuw nsw i64 %22, 2, !dbg !389
  %24 = add nuw nsw i64 %23, 4, !dbg !389
  call void @llvm.memset.p0i8.i64(i8* %scevgep136, i8 0, i64 %24, i32 4, i1 false), !dbg !390
  %scevgep137 = getelementptr [3 x i32]* %lssh, i64 0, i64 %20
  %scevgep137138 = bitcast i32* %scevgep137 to i8*
  call void @memset_pattern16(i8* %scevgep137138, i8* bitcast ([4 x i32]* @.memset_pattern to i8*), i64 %24) #5, !dbg !392
  br label %35, !dbg !389

; <label>:25                                      ; preds = %13
  %26 = icmp eq i32* %stencil_alldirs, null, !dbg !393
  br i1 %26, label %33, label %27, !dbg !395

; <label>:27                                      ; preds = %25
  %28 = bitcast [3 x i32]* %stencil to i8*, !dbg !396
  %29 = bitcast i32* %stencil_alldirs to i8*, !dbg !396
  %30 = sext i32 %2 to i64, !dbg !396
  %31 = shl nsw i64 %30, 2, !dbg !396
  %32 = call i8* @__memcpy_chk(i8* %28, i8* %29, i64 %31, i64 12) #6, !dbg !396
  br label %.preheader38

; <label>:33                                      ; preds = %25
  %34 = tail call i32 @CCTK_Warn(i32 1, i32 826, i8* getelementptr inbounds ([83 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8]* @.str13, i64 0, i64 0)) #6, !dbg !398
  br label %.loopexit37, !dbg !400

; <label>:35                                      ; preds = %.lr.ph84, %.preheader38
  %36 = getelementptr inbounds [3 x i32]* %dstag, i64 0, i64 0, !dbg !401
  %37 = call i32 @CCTK_GroupStaggerDirArrayGI(i32* %36, i32 %2, i32 %1) #6, !dbg !402
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !212, metadata !325), !dbg !403
  %38 = call i8* @CCTK_GHExtension(%struct.cGH* %GH, i8* getelementptr inbounds ([9 x i8]* @.str14, i64 0, i64 0)) #6, !dbg !404
  call void @llvm.dbg.value(metadata i32 %first_var, i64 0, metadata !208, metadata !325), !dbg !405
  %39 = icmp sgt i32 %num_vars, 0, !dbg !406
  br i1 %39, label %.lr.ph82, label %.loopexit37, !dbg !407

.lr.ph82:                                         ; preds = %35
  %40 = add nsw i32 %num_vars, %first_var, !dbg !408
  %41 = bitcast [6 x i32]* %doBC to i8*, !dbg !409
  %42 = icmp eq i8* %38, null, !dbg !410
  %43 = icmp sgt i32 %2, 0, !dbg !412
  %44 = icmp sgt i32 %2, 1, !dbg !415
  %45 = getelementptr inbounds [6 x i32]* %doBC, i64 0, i64 2, !dbg !416
  %46 = icmp sgt i32 %2, 2, !dbg !417
  %47 = getelementptr inbounds [6 x i32]* %doBC, i64 0, i64 4, !dbg !418
  %48 = getelementptr inbounds [3 x i32]* %stencil, i64 0, i64 2, !dbg !419
  %49 = getelementptr inbounds [3 x i32]* %lssh, i64 0, i64 1, !dbg !420
  %50 = getelementptr inbounds [3 x i32]* %lssh, i64 0, i64 0, !dbg !421
  %51 = getelementptr inbounds [3 x i32]* %lsh, i64 0, i64 0, !dbg !422
  %52 = getelementptr inbounds [3 x i32]* %lsh, i64 0, i64 1, !dbg !422
  %53 = getelementptr inbounds [3 x i32]* %lssh, i64 0, i64 2, !dbg !422
  %54 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 17, !dbg !422
  %55 = sext i32 %4 to i64, !dbg !422
  %56 = getelementptr inbounds [3 x i32]* %stencil, i64 0, i64 1, !dbg !423
  %57 = getelementptr inbounds [3 x i32]* %stencil, i64 0, i64 0, !dbg !424
  %58 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 3, !dbg !425
  %59 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 6, !dbg !427
  %60 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 12, !dbg !428
  %61 = icmp slt i32 %dir, 0, !dbg !429
  %62 = shl nsw i32 %2, 1, !dbg !432
  %63 = bitcast i8* %38 to i32***, !dbg !436
  %64 = sext i32 %62 to i64, !dbg !407
  %65 = add i32 %2, -1, !dbg !407
  %66 = zext i32 %65 to i64
  %67 = shl nuw nsw i64 %66, 2, !dbg !407
  %68 = add nuw nsw i64 %67, 4, !dbg !407
  %69 = sext i32 %first_var to i64
  %70 = sext i32 %40 to i64, !dbg !407
  br label %71, !dbg !407

; <label>:71                                      ; preds = %.lr.ph82, %.thread11
  %indvars.iv130 = phi i64 [ %69, %.lr.ph82 ], [ %indvars.iv.next131, %.thread11 ]
  call void @llvm.memset.p0i8.i64(i8* %41, i8 1, i64 24, i32 16, i1 false), !dbg !409
  br i1 %42, label %.preheader35, label %.preheader36, !dbg !438

.preheader36:                                     ; preds = %71
  br i1 %43, label %.lr.ph, label %.thread11, !dbg !439

.lr.ph:                                           ; preds = %.preheader36
  %72 = load i32*** %63, align 8, !dbg !436, !tbaa !440
  %73 = getelementptr inbounds i32** %72, i64 %indvars.iv130, !dbg !443
  %74 = load i32** %73, align 8, !dbg !443, !tbaa !444
  br label %78, !dbg !439

.preheader35:                                     ; preds = %78, %71
  br i1 %43, label %.lr.ph41, label %.thread11, !dbg !445

.lr.ph41:                                         ; preds = %.preheader35
  %75 = load i32** %58, align 8, !dbg !425, !tbaa !446
  %76 = bitcast i32* %75 to i8*
  %77 = load i32** %59, align 8, !dbg !427, !tbaa !449
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %lsh88, i8* %76, i64 %68, i32 4, i1 false), !dbg !450
  br label %86, !dbg !445

; <label>:78                                      ; preds = %.lr.ph, %78
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %78 ]
  %79 = getelementptr inbounds i32* %74, i64 %indvars.iv, !dbg !443
  %80 = load i32* %79, align 4, !dbg !443, !tbaa !381
  %81 = and i32 %80, -2, !dbg !451
  %82 = icmp eq i32 %81, -42, !dbg !451
  %83 = zext i1 %82 to i32, !dbg !451
  %84 = getelementptr inbounds [6 x i32]* %doBC, i64 0, i64 %indvars.iv, !dbg !452
  store i32 %83, i32* %84, align 4, !dbg !453, !tbaa !381
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !439
  %85 = icmp slt i64 %indvars.iv.next, %64, !dbg !454
  br i1 %85, label %78, label %.preheader35, !dbg !439

; <label>:86                                      ; preds = %141, %.lr.ph41
  %indvars.iv86 = phi i64 [ 0, %.lr.ph41 ], [ %indvars.iv.next87, %141 ]
  %87 = getelementptr inbounds [3 x i32]* %dstag, i64 0, i64 %indvars.iv86, !dbg !455
  %88 = load i32* %87, align 4, !dbg !455, !tbaa !381
  %89 = mul nsw i64 %indvars.iv86, 3, !dbg !455
  %90 = trunc i64 %89 to i32, !dbg !455
  %91 = add nsw i32 %88, %90, !dbg !455
  %92 = sext i32 %91 to i64, !dbg !456
  %93 = getelementptr inbounds i32* %77, i64 %92, !dbg !456
  %94 = load i32* %93, align 4, !dbg !456, !tbaa !381
  %95 = getelementptr inbounds [3 x i32]* %lssh, i64 0, i64 %indvars.iv86, !dbg !457
  store i32 %94, i32* %95, align 4, !dbg !458, !tbaa !381
  %96 = getelementptr inbounds i32* %75, i64 %indvars.iv86, !dbg !459
  %97 = load i32* %96, align 4, !dbg !459, !tbaa !381
  %98 = icmp sgt i32 %97, 1, !dbg !460
  %99 = trunc i64 %indvars.iv86 to i32, !dbg !461
  %100 = shl nsw i32 %99, 1, !dbg !461
  %101 = sext i32 %100 to i64, !dbg !462
  br i1 %98, label %103, label %._crit_edge150, !dbg !463

._crit_edge150:                                   ; preds = %86
  %102 = getelementptr inbounds [6 x i32]* %doBC, i64 0, i64 %101, !dbg !464
  store i32 0, i32* %102, align 8, !dbg !465, !tbaa !381
  %.pre157 = or i32 %100, 1, !dbg !466
  %.pre159 = sext i32 %.pre157 to i64, !dbg !467
  br label %118, !dbg !468

; <label>:103                                     ; preds = %86
  %104 = load i32** %60, align 8, !dbg !428, !tbaa !469
  %105 = getelementptr inbounds i32* %104, i64 %101, !dbg !462
  %106 = load i32* %105, align 4, !dbg !462, !tbaa !381
  %107 = icmp ne i32 %106, 0, !dbg !463
  %108 = zext i1 %107 to i32, !dbg !463
  %109 = getelementptr inbounds [6 x i32]* %doBC, i64 0, i64 %101, !dbg !464
  %110 = load i32* %109, align 8, !dbg !465, !tbaa !381
  %111 = and i32 %110, %108, !dbg !465
  store i32 %111, i32* %109, align 8, !dbg !465, !tbaa !381
  %112 = or i32 %100, 1, !dbg !470
  %113 = sext i32 %112 to i64, !dbg !471
  %114 = load i32** %60, align 8, !dbg !472, !tbaa !469
  %115 = getelementptr inbounds i32* %114, i64 %113, !dbg !471
  %116 = load i32* %115, align 4, !dbg !471, !tbaa !381
  %117 = icmp ne i32 %116, 0, !dbg !468
  br label %118

; <label>:118                                     ; preds = %._crit_edge150, %103
  %119 = phi i32 [ 0, %._crit_edge150 ], [ %111, %103 ]
  %120 = phi i32* [ %102, %._crit_edge150 ], [ %109, %103 ]
  %.pre-phi160 = phi i64 [ %.pre159, %._crit_edge150 ], [ %113, %103 ], !dbg !467
  %121 = phi i1 [ false, %._crit_edge150 ], [ %117, %103 ]
  %122 = zext i1 %121 to i32, !dbg !468
  %123 = getelementptr inbounds [6 x i32]* %doBC, i64 0, i64 %.pre-phi160, !dbg !467
  %124 = load i32* %123, align 4, !dbg !473, !tbaa !381
  %125 = and i32 %124, %122, !dbg !473
  store i32 %125, i32* %123, align 4, !dbg !473, !tbaa !381
  br i1 %14, label %126, label %141, !dbg !474

; <label>:126                                     ; preds = %118
  br i1 %61, label %127, label %133, !dbg !475

; <label>:127                                     ; preds = %126
  %128 = add nuw nsw i64 %indvars.iv86, 1, !dbg !476
  %129 = trunc i64 %128 to i32, !dbg !477
  %130 = icmp eq i32 %129, %9, !dbg !477
  %131 = zext i1 %130 to i32, !dbg !475
  %132 = and i32 %119, %131, !dbg !478
  store i32 %132, i32* %120, align 8, !dbg !478, !tbaa !381
  br label %137

; <label>:133                                     ; preds = %126
  store i32 0, i32* %120, align 8, !dbg !478, !tbaa !381
  %134 = add nuw nsw i64 %indvars.iv86, 1, !dbg !479
  %135 = trunc i64 %134 to i32, !dbg !480
  %136 = icmp eq i32 %135, %9, !dbg !480
  br label %137

; <label>:137                                     ; preds = %127, %133
  %138 = phi i1 [ false, %127 ], [ %136, %133 ]
  %139 = zext i1 %138 to i32, !dbg !481
  %140 = and i32 %125, %139, !dbg !482
  store i32 %140, i32* %123, align 4, !dbg !482, !tbaa !381
  br label %141, !dbg !483

; <label>:141                                     ; preds = %118, %137
  %indvars.iv.next87 = add nuw nsw i64 %indvars.iv86, 1, !dbg !445
  %exitcond = icmp eq i32 %99, %65, !dbg !445
  br i1 %exitcond, label %._crit_edge, label %86, !dbg !445

._crit_edge:                                      ; preds = %141
  br i1 %43, label %142, label %.thread11, !dbg !484

; <label>:142                                     ; preds = %._crit_edge
  %143 = bitcast [6 x i32]* %doBC to i64*, !dbg !485
  %144 = load i64* %143, align 16, !dbg !485
  %145 = trunc i64 %144 to i32, !dbg !485
  %146 = icmp eq i32 %145, 0, !dbg !485
  br i1 %146, label %.loopexit34, label %.preheader33, !dbg !486

.preheader33:                                     ; preds = %142
  %147 = load i32* %53, align 4, !dbg !487, !tbaa !381
  %148 = icmp sgt i32 %147, 0, !dbg !487
  br i1 %148, label %.preheader24.lr.ph, label %.loopexit34, !dbg !488

.preheader24.lr.ph:                               ; preds = %.preheader33
  %149 = load i32* %49, align 4, !dbg !489, !tbaa !381
  %150 = icmp sgt i32 %149, 0, !dbg !489
  %151 = load i32* %51, align 4, !dbg !490, !tbaa !381
  %152 = load i32* %52, align 4, !dbg !490, !tbaa !381
  %153 = sext i32 %151 to i64, !dbg !488
  %154 = add i32 %149, -1, !dbg !488
  %155 = sext i32 %152 to i64, !dbg !488
  %156 = sext i32 %147 to i64, !dbg !488
  br label %.preheader24, !dbg !488

.preheader24:                                     ; preds = %.preheader24.lr.ph, %._crit_edge46
  %indvars.iv95 = phi i64 [ 0, %.preheader24.lr.ph ], [ %indvars.iv.next96, %._crit_edge46 ]
  br i1 %150, label %.preheader18.lr.ph, label %._crit_edge46, !dbg !491

.preheader18.lr.ph:                               ; preds = %.preheader24
  %157 = mul nsw i64 %155, %indvars.iv95, !dbg !490
  %.pre = load i32* %57, align 4, !dbg !492, !tbaa !381
  br label %.preheader18, !dbg !491

.preheader18:                                     ; preds = %._crit_edge44, %.preheader18.lr.ph
  %158 = phi i32 [ %.pre, %.preheader18.lr.ph ], [ %181, %._crit_edge44 ], !dbg !492
  %indvars.iv91 = phi i64 [ 0, %.preheader18.lr.ph ], [ %indvars.iv.next92, %._crit_edge44 ]
  %159 = icmp sgt i32 %158, 0, !dbg !492
  br i1 %159, label %.lr.ph43, label %._crit_edge44, !dbg !493

.lr.ph43:                                         ; preds = %.preheader18
  %160 = add nsw i64 %157, %indvars.iv91, !dbg !490
  %161 = mul nsw i64 %160, %153, !dbg !490
  br label %162, !dbg !493

; <label>:162                                     ; preds = %.lr.ph43, %162
  %indvars.iv89 = phi i64 [ 0, %.lr.ph43 ], [ %indvars.iv.next90, %162 ]
  %163 = phi i32 [ %158, %.lr.ph43 ], [ %178, %162 ]
  %164 = add nsw i64 %161, %indvars.iv89, !dbg !490
  %165 = mul nsw i64 %164, %55, !dbg !490
  %166 = trunc i64 %161 to i32, !dbg !490
  %167 = add nsw i32 %166, %163, !dbg !490
  %168 = mul nsw i32 %167, %4, !dbg !490
  call void @llvm.dbg.value(metadata i32 %168, i64 0, metadata !243, metadata !325), !dbg !490
  %169 = load i8**** %54, align 8, !dbg !490, !tbaa !494
  %170 = getelementptr inbounds i8*** %169, i64 %indvars.iv130, !dbg !490
  %171 = load i8*** %170, align 8, !dbg !490, !tbaa !444
  %172 = load i8** %171, align 8, !dbg !490, !tbaa !444
  %173 = getelementptr inbounds i8* %172, i64 %165, !dbg !490
  %174 = sext i32 %168 to i64, !dbg !490
  %175 = getelementptr inbounds i8* %172, i64 %174, !dbg !490
  %176 = call i64 @llvm.objectsize.i64.p0i8(i8* %173, i1 false), !dbg !490
  %177 = call i8* @__memcpy_chk(i8* %173, i8* %175, i64 %55, i64 %176) #6, !dbg !490
  %indvars.iv.next90 = add nuw nsw i64 %indvars.iv89, 1, !dbg !493
  %178 = load i32* %57, align 4, !dbg !492, !tbaa !381
  %179 = sext i32 %178 to i64, !dbg !492
  %180 = icmp slt i64 %indvars.iv.next90, %179, !dbg !492
  br i1 %180, label %162, label %._crit_edge44, !dbg !493

._crit_edge44:                                    ; preds = %162, %.preheader18
  %181 = phi i32 [ %158, %.preheader18 ], [ %178, %162 ]
  %indvars.iv.next92 = add nuw nsw i64 %indvars.iv91, 1, !dbg !491
  %lftr.wideiv93 = trunc i64 %indvars.iv91 to i32, !dbg !491
  %exitcond94 = icmp eq i32 %lftr.wideiv93, %154, !dbg !491
  br i1 %exitcond94, label %._crit_edge46, label %.preheader18, !dbg !491

._crit_edge46:                                    ; preds = %._crit_edge44, %.preheader24
  %indvars.iv.next96 = add nuw nsw i64 %indvars.iv95, 1, !dbg !488
  %182 = icmp slt i64 %indvars.iv.next96, %156, !dbg !487
  br i1 %182, label %.preheader24, label %.loopexit34, !dbg !488

.loopexit34:                                      ; preds = %._crit_edge46, %.preheader33, %142
  %183 = icmp ult i64 %144, 4294967296, !dbg !495
  br i1 %183, label %.loopexit32, label %.preheader31, !dbg !496

.preheader31:                                     ; preds = %.loopexit34
  %184 = load i32* %53, align 4, !dbg !497, !tbaa !381
  %185 = icmp sgt i32 %184, 0, !dbg !497
  br i1 %185, label %.preheader23.lr.ph, label %.loopexit32, !dbg !498

.preheader23.lr.ph:                               ; preds = %.preheader31
  %186 = load i32* %49, align 4, !dbg !499, !tbaa !381
  %187 = icmp sgt i32 %186, 0, !dbg !499
  %188 = load i32* %50, align 4, !dbg !500, !tbaa !381
  %189 = load i32* %51, align 4, !dbg !500, !tbaa !381
  %190 = load i32* %52, align 4, !dbg !500, !tbaa !381
  %191 = add i32 %186, -1, !dbg !498
  br label %.preheader23, !dbg !498

.preheader23:                                     ; preds = %.preheader23.lr.ph, %._crit_edge52
  %k.153 = phi i32 [ 0, %.preheader23.lr.ph ], [ %223, %._crit_edge52 ]
  br i1 %187, label %.preheader17.lr.ph, label %._crit_edge52, !dbg !501

.preheader17.lr.ph:                               ; preds = %.preheader23
  %192 = mul nsw i32 %190, %k.153, !dbg !500
  %.pre139 = load i32* %57, align 4, !dbg !424, !tbaa !381
  br label %.preheader17, !dbg !501

.preheader17:                                     ; preds = %._crit_edge50, %.preheader17.lr.ph
  %193 = phi i32 [ %.pre139, %.preheader17.lr.ph ], [ %221, %._crit_edge50 ], !dbg !424
  %j.151 = phi i32 [ 0, %.preheader17.lr.ph ], [ %222, %._crit_edge50 ]
  %194 = icmp sgt i32 %193, 0, !dbg !424
  br i1 %194, label %.lr.ph49, label %._crit_edge50, !dbg !502

.lr.ph49:                                         ; preds = %.preheader17
  %195 = add nsw i32 %192, %j.151, !dbg !500
  %196 = mul nsw i32 %195, %189, !dbg !500
  br label %197, !dbg !502

; <label>:197                                     ; preds = %.lr.ph49, %197
  %indvars.iv97 = phi i64 [ 0, %.lr.ph49 ], [ %indvars.iv.next98, %197 ]
  %198 = phi i32 [ %193, %.lr.ph49 ], [ %218, %197 ]
  %199 = trunc i64 %indvars.iv97 to i32, !dbg !500
  %200 = xor i32 %199, -1, !dbg !500
  %201 = add i32 %188, %200, !dbg !500
  %202 = add i32 %201, %196, !dbg !500
  %203 = mul nsw i32 %202, %4, !dbg !500
  call void @llvm.dbg.value(metadata i32 %203, i64 0, metadata !244, metadata !325), !dbg !500
  %204 = xor i32 %198, -1, !dbg !500
  %205 = add i32 %188, %204, !dbg !500
  %206 = add i32 %205, %196, !dbg !500
  %207 = mul nsw i32 %206, %4, !dbg !500
  call void @llvm.dbg.value(metadata i32 %207, i64 0, metadata !257, metadata !325), !dbg !500
  %208 = load i8**** %54, align 8, !dbg !500, !tbaa !494
  %209 = getelementptr inbounds i8*** %208, i64 %indvars.iv130, !dbg !500
  %210 = load i8*** %209, align 8, !dbg !500, !tbaa !444
  %211 = load i8** %210, align 8, !dbg !500, !tbaa !444
  %212 = sext i32 %203 to i64, !dbg !500
  %213 = getelementptr inbounds i8* %211, i64 %212, !dbg !500
  %214 = sext i32 %207 to i64, !dbg !500
  %215 = getelementptr inbounds i8* %211, i64 %214, !dbg !500
  %216 = call i64 @llvm.objectsize.i64.p0i8(i8* %213, i1 false), !dbg !500
  %217 = call i8* @__memcpy_chk(i8* %213, i8* %215, i64 %55, i64 %216) #6, !dbg !500
  %indvars.iv.next98 = add nuw nsw i64 %indvars.iv97, 1, !dbg !502
  %218 = load i32* %57, align 4, !dbg !424, !tbaa !381
  %219 = sext i32 %218 to i64, !dbg !424
  %220 = icmp slt i64 %indvars.iv.next98, %219, !dbg !424
  br i1 %220, label %197, label %._crit_edge50, !dbg !502

._crit_edge50:                                    ; preds = %197, %.preheader17
  %221 = phi i32 [ %193, %.preheader17 ], [ %218, %197 ]
  %222 = add nuw nsw i32 %j.151, 1, !dbg !499
  call void @llvm.dbg.value(metadata i32 %222, i64 0, metadata !206, metadata !325), !dbg !503
  %exitcond99 = icmp eq i32 %j.151, %191, !dbg !501
  br i1 %exitcond99, label %._crit_edge52, label %.preheader17, !dbg !501

._crit_edge52:                                    ; preds = %._crit_edge50, %.preheader23
  %223 = add nuw nsw i32 %k.153, 1, !dbg !497
  call void @llvm.dbg.value(metadata i32 %223, i64 0, metadata !207, metadata !325), !dbg !504
  %224 = icmp slt i32 %223, %184, !dbg !497
  br i1 %224, label %.preheader23, label %.loopexit32, !dbg !498

.loopexit32:                                      ; preds = %._crit_edge52, %.preheader31, %.loopexit34
  br i1 %44, label %225, label %.thread11, !dbg !505

; <label>:225                                     ; preds = %.loopexit32
  %226 = bitcast i32* %45 to i64*, !dbg !416
  %227 = load i64* %226, align 8, !dbg !416
  %228 = trunc i64 %227 to i32, !dbg !416
  %229 = icmp eq i32 %228, 0, !dbg !416
  br i1 %229, label %.loopexit30, label %.preheader29, !dbg !506

.preheader29:                                     ; preds = %225
  %230 = load i32* %53, align 4, !dbg !507, !tbaa !381
  %231 = icmp sgt i32 %230, 0, !dbg !507
  br i1 %231, label %.preheader22.lr.ph, label %.loopexit30, !dbg !508

.preheader22.lr.ph:                               ; preds = %.preheader29
  %232 = load i32* %50, align 4, !dbg !509, !tbaa !381
  %233 = icmp sgt i32 %232, 0, !dbg !509
  %234 = load i32* %51, align 4, !dbg !510, !tbaa !381
  %235 = load i32* %52, align 4, !dbg !510, !tbaa !381
  %236 = add i32 %232, -1, !dbg !508
  %237 = sext i32 %234 to i64, !dbg !508
  %238 = sext i32 %235 to i64, !dbg !508
  %239 = sext i32 %230 to i64, !dbg !508
  %.pre140 = load i32* %56, align 4, !dbg !511, !tbaa !381
  br label %.preheader22, !dbg !508

.preheader22:                                     ; preds = %.preheader22.lr.ph, %._crit_edge58
  %240 = phi i32 [ %.pre140, %.preheader22.lr.ph ], [ %269, %._crit_edge58 ], !dbg !511
  %indvars.iv106 = phi i64 [ 0, %.preheader22.lr.ph ], [ %indvars.iv.next107, %._crit_edge58 ]
  %241 = icmp sgt i32 %240, 0, !dbg !511
  br i1 %241, label %.preheader16.lr.ph, label %._crit_edge58, !dbg !512

.preheader16.lr.ph:                               ; preds = %.preheader22
  %242 = mul nsw i64 %238, %indvars.iv106, !dbg !510
  br label %.preheader16, !dbg !512

.preheader16:                                     ; preds = %.preheader16.lr.ph, %265
  %243 = phi i32 [ %240, %.preheader16.lr.ph ], [ %266, %265 ]
  %indvars.iv104 = phi i64 [ 0, %.preheader16.lr.ph ], [ %indvars.iv.next105, %265 ]
  br i1 %233, label %.lr.ph55, label %265, !dbg !513

.lr.ph55:                                         ; preds = %.preheader16
  %244 = add nsw i64 %242, %indvars.iv104, !dbg !510
  %245 = mul nsw i64 %244, %237, !dbg !510
  br label %246, !dbg !513

; <label>:246                                     ; preds = %._crit_edge141, %.lr.ph55
  %247 = phi i32 [ %243, %.lr.ph55 ], [ %.pre142, %._crit_edge141 ]
  %indvars.iv100 = phi i64 [ 0, %.lr.ph55 ], [ %indvars.iv.next101, %._crit_edge141 ]
  %248 = add nsw i64 %245, %indvars.iv100, !dbg !510
  %249 = mul nsw i64 %248, %55, !dbg !510
  %250 = trunc i64 %242 to i32, !dbg !510
  %251 = add nsw i32 %247, %250, !dbg !510
  %252 = mul nsw i32 %251, %234, !dbg !510
  %253 = trunc i64 %indvars.iv100 to i32, !dbg !510
  %254 = add nsw i32 %252, %253, !dbg !510
  %255 = mul nsw i32 %254, %4, !dbg !510
  call void @llvm.dbg.value(metadata i32 %255, i64 0, metadata !273, metadata !325), !dbg !510
  %256 = load i8**** %54, align 8, !dbg !510, !tbaa !494
  %257 = getelementptr inbounds i8*** %256, i64 %indvars.iv130, !dbg !510
  %258 = load i8*** %257, align 8, !dbg !510, !tbaa !444
  %259 = load i8** %258, align 8, !dbg !510, !tbaa !444
  %260 = getelementptr inbounds i8* %259, i64 %249, !dbg !510
  %261 = sext i32 %255 to i64, !dbg !510
  %262 = getelementptr inbounds i8* %259, i64 %261, !dbg !510
  %263 = call i64 @llvm.objectsize.i64.p0i8(i8* %260, i1 false), !dbg !510
  %264 = call i8* @__memcpy_chk(i8* %260, i8* %262, i64 %55, i64 %263) #6, !dbg !510
  %exitcond103 = icmp eq i32 %253, %236, !dbg !513
  br i1 %exitcond103, label %._crit_edge56, label %._crit_edge141, !dbg !513

._crit_edge141:                                   ; preds = %246
  %indvars.iv.next101 = add nuw nsw i64 %indvars.iv100, 1, !dbg !513
  %.pre142 = load i32* %56, align 4, !dbg !510, !tbaa !381
  br label %246, !dbg !513

._crit_edge56:                                    ; preds = %246
  %.pre143 = load i32* %56, align 4, !dbg !511, !tbaa !381
  br label %265, !dbg !513

; <label>:265                                     ; preds = %._crit_edge56, %.preheader16
  %266 = phi i32 [ %.pre143, %._crit_edge56 ], [ %243, %.preheader16 ], !dbg !512
  %indvars.iv.next105 = add nuw nsw i64 %indvars.iv104, 1, !dbg !512
  %267 = sext i32 %266 to i64, !dbg !511
  %268 = icmp slt i64 %indvars.iv.next105, %267, !dbg !511
  br i1 %268, label %.preheader16, label %._crit_edge58, !dbg !512

._crit_edge58:                                    ; preds = %265, %.preheader22
  %269 = phi i32 [ %240, %.preheader22 ], [ %266, %265 ]
  %indvars.iv.next107 = add nuw nsw i64 %indvars.iv106, 1, !dbg !508
  %270 = icmp slt i64 %indvars.iv.next107, %239, !dbg !507
  br i1 %270, label %.preheader22, label %.loopexit30, !dbg !508

.loopexit30:                                      ; preds = %._crit_edge58, %.preheader29, %225
  %271 = icmp ult i64 %227, 4294967296, !dbg !514
  br i1 %271, label %.loopexit28, label %.preheader27, !dbg !515

.preheader27:                                     ; preds = %.loopexit30
  %272 = load i32* %53, align 4, !dbg !516, !tbaa !381
  %273 = icmp sgt i32 %272, 0, !dbg !516
  br i1 %273, label %.preheader21.lr.ph, label %.loopexit28, !dbg !517

.preheader21.lr.ph:                               ; preds = %.preheader27
  %274 = load i32* %50, align 4, !dbg !518, !tbaa !381
  %275 = icmp sgt i32 %274, 0, !dbg !518
  %276 = load i32* %51, align 4, !dbg !519, !tbaa !381
  %277 = load i32* %49, align 4, !dbg !519, !tbaa !381
  %278 = load i32* %52, align 4, !dbg !519, !tbaa !381
  %279 = add i32 %277, -1, !dbg !519
  %280 = sext i32 %274 to i64, !dbg !517
  %.pre144 = load i32* %56, align 4, !dbg !423, !tbaa !381
  br label %.preheader21, !dbg !517

.preheader21:                                     ; preds = %.preheader21.lr.ph, %._crit_edge64
  %281 = phi i32 [ %.pre144, %.preheader21.lr.ph ], [ %313, %._crit_edge64 ], !dbg !423
  %k.365 = phi i32 [ 0, %.preheader21.lr.ph ], [ %314, %._crit_edge64 ]
  %282 = icmp sgt i32 %281, 0, !dbg !423
  br i1 %282, label %.preheader15.lr.ph, label %._crit_edge64, !dbg !520

.preheader15.lr.ph:                               ; preds = %.preheader21
  %283 = mul nsw i32 %278, %k.365, !dbg !519
  br label %.preheader15, !dbg !520

.preheader15:                                     ; preds = %.preheader15.lr.ph, %._crit_edge62
  %284 = phi i32 [ %281, %.preheader15.lr.ph ], [ %310, %._crit_edge62 ]
  %indvars.iv110 = phi i64 [ 0, %.preheader15.lr.ph ], [ %indvars.iv.next111, %._crit_edge62 ]
  br i1 %275, label %.lr.ph61, label %._crit_edge62, !dbg !521

.lr.ph61:                                         ; preds = %.preheader15
  %285 = trunc i64 %indvars.iv110 to i32, !dbg !519
  %286 = xor i32 %285, -1, !dbg !519
  %287 = add i32 %277, %286, !dbg !519
  %288 = add i32 %287, %283, !dbg !519
  %289 = mul nsw i32 %288, %276, !dbg !519
  %290 = sext i32 %289 to i64, !dbg !521
  br label %._crit_edge145, !dbg !521

._crit_edge145:                                   ; preds = %._crit_edge145, %.lr.ph61
  %291 = phi i32 [ %284, %.lr.ph61 ], [ %.pre146, %._crit_edge145 ]
  %indvars.iv108 = phi i64 [ 0, %.lr.ph61 ], [ %indvars.iv.next109, %._crit_edge145 ]
  %292 = add nsw i64 %290, %indvars.iv108, !dbg !519
  %293 = mul nsw i64 %292, %55, !dbg !519
  %294 = sub i32 %279, %291, !dbg !519
  %295 = add i32 %294, %283, !dbg !519
  %296 = mul nsw i32 %295, %276, !dbg !519
  %297 = trunc i64 %indvars.iv108 to i32, !dbg !519
  %298 = add nsw i32 %296, %297, !dbg !519
  %299 = mul nsw i32 %298, %4, !dbg !519
  call void @llvm.dbg.value(metadata i32 %299, i64 0, metadata !287, metadata !325), !dbg !519
  %300 = load i8**** %54, align 8, !dbg !519, !tbaa !494
  %301 = getelementptr inbounds i8*** %300, i64 %indvars.iv130, !dbg !519
  %302 = load i8*** %301, align 8, !dbg !519, !tbaa !444
  %303 = load i8** %302, align 8, !dbg !519, !tbaa !444
  %304 = getelementptr inbounds i8* %303, i64 %293, !dbg !519
  %305 = sext i32 %299 to i64, !dbg !519
  %306 = getelementptr inbounds i8* %303, i64 %305, !dbg !519
  %307 = call i64 @llvm.objectsize.i64.p0i8(i8* %304, i1 false), !dbg !519
  %308 = call i8* @__memcpy_chk(i8* %304, i8* %306, i64 %55, i64 %307) #6, !dbg !519
  %indvars.iv.next109 = add nuw nsw i64 %indvars.iv108, 1, !dbg !521
  %309 = icmp slt i64 %indvars.iv.next109, %280, !dbg !518
  %.pre146 = load i32* %56, align 4, !dbg !519, !tbaa !381
  br i1 %309, label %._crit_edge145, label %._crit_edge62, !dbg !521

._crit_edge62:                                    ; preds = %._crit_edge145, %.preheader15
  %310 = phi i32 [ %284, %.preheader15 ], [ %.pre146, %._crit_edge145 ], !dbg !520
  %indvars.iv.next111 = add nuw nsw i64 %indvars.iv110, 1, !dbg !520
  %311 = sext i32 %310 to i64, !dbg !423
  %312 = icmp slt i64 %indvars.iv.next111, %311, !dbg !423
  br i1 %312, label %.preheader15, label %._crit_edge64, !dbg !520

._crit_edge64:                                    ; preds = %._crit_edge62, %.preheader21
  %313 = phi i32 [ %281, %.preheader21 ], [ %310, %._crit_edge62 ]
  %314 = add nuw nsw i32 %k.365, 1, !dbg !516
  call void @llvm.dbg.value(metadata i32 %314, i64 0, metadata !207, metadata !325), !dbg !504
  %315 = icmp slt i32 %314, %272, !dbg !516
  br i1 %315, label %.preheader21, label %.loopexit28, !dbg !517

.loopexit28:                                      ; preds = %._crit_edge64, %.preheader27, %.loopexit30
  br i1 %46, label %316, label %.thread11, !dbg !522

; <label>:316                                     ; preds = %.loopexit28
  %317 = bitcast i32* %47 to i64*, !dbg !418
  %318 = load i64* %317, align 16, !dbg !418
  %319 = trunc i64 %318 to i32, !dbg !418
  %320 = icmp eq i32 %319, 0, !dbg !418
  br i1 %320, label %.loopexit, label %.preheader26, !dbg !523

.preheader26:                                     ; preds = %316
  %321 = load i32* %48, align 4, !dbg !524, !tbaa !381
  %322 = icmp sgt i32 %321, 0, !dbg !524
  br i1 %322, label %.preheader20.lr.ph, label %.loopexit, !dbg !525

.preheader20.lr.ph:                               ; preds = %.preheader26
  %323 = load i32* %49, align 4, !dbg !526, !tbaa !381
  %324 = icmp sgt i32 %323, 0, !dbg !526
  %325 = load i32* %50, align 4, !dbg !527, !tbaa !381
  %326 = icmp sgt i32 %325, 0, !dbg !527
  %327 = load i32* %51, align 4, !dbg !528, !tbaa !381
  %328 = load i32* %52, align 4, !dbg !528, !tbaa !381
  %329 = add i32 %325, -1, !dbg !525
  %330 = sext i32 %327 to i64, !dbg !525
  %331 = add i32 %323, -1, !dbg !525
  %332 = sext i32 %328 to i64, !dbg !525
  br label %.preheader20, !dbg !525

.preheader20:                                     ; preds = %.preheader20.lr.ph, %357
  %333 = phi i32 [ %321, %.preheader20.lr.ph ], [ %358, %357 ]
  %indvars.iv120 = phi i64 [ 0, %.preheader20.lr.ph ], [ %indvars.iv.next121, %357 ]
  br i1 %324, label %.preheader14.lr.ph, label %357, !dbg !529

.preheader14.lr.ph:                               ; preds = %.preheader20
  %334 = mul nsw i64 %332, %indvars.iv120, !dbg !528
  br label %.preheader14, !dbg !529

.preheader14:                                     ; preds = %._crit_edge68, %.preheader14.lr.ph
  %indvars.iv116 = phi i64 [ 0, %.preheader14.lr.ph ], [ %indvars.iv.next117, %._crit_edge68 ]
  br i1 %326, label %.lr.ph67, label %.preheader14._crit_edge, !dbg !530

.preheader14._crit_edge:                          ; preds = %.preheader14
  %.pre162 = trunc i64 %indvars.iv116 to i32, !dbg !529
  br label %._crit_edge68, !dbg !530

.lr.ph67:                                         ; preds = %.preheader14
  %335 = add nsw i64 %334, %indvars.iv116, !dbg !528
  %336 = mul nsw i64 %335, %330, !dbg !528
  br label %337, !dbg !530

; <label>:337                                     ; preds = %337, %.lr.ph67
  %indvars.iv112 = phi i64 [ 0, %.lr.ph67 ], [ %indvars.iv.next113, %337 ]
  %338 = add nsw i64 %336, %indvars.iv112, !dbg !528
  %339 = mul nsw i64 %338, %55, !dbg !528
  %340 = load i32* %48, align 4, !dbg !528, !tbaa !381
  %341 = mul nsw i32 %340, %328, !dbg !528
  %342 = trunc i64 %indvars.iv116 to i32, !dbg !528
  %343 = add nsw i32 %341, %342, !dbg !528
  %344 = mul nsw i32 %343, %327, !dbg !528
  %345 = trunc i64 %indvars.iv112 to i32, !dbg !528
  %346 = add nsw i32 %344, %345, !dbg !528
  %347 = mul nsw i32 %346, %4, !dbg !528
  call void @llvm.dbg.value(metadata i32 %347, i64 0, metadata !303, metadata !325), !dbg !528
  %348 = load i8**** %54, align 8, !dbg !528, !tbaa !494
  %349 = getelementptr inbounds i8*** %348, i64 %indvars.iv130, !dbg !528
  %350 = load i8*** %349, align 8, !dbg !528, !tbaa !444
  %351 = load i8** %350, align 8, !dbg !528, !tbaa !444
  %352 = getelementptr inbounds i8* %351, i64 %339, !dbg !528
  %353 = sext i32 %347 to i64, !dbg !528
  %354 = getelementptr inbounds i8* %351, i64 %353, !dbg !528
  %355 = call i64 @llvm.objectsize.i64.p0i8(i8* %352, i1 false), !dbg !528
  %356 = call i8* @__memcpy_chk(i8* %352, i8* %354, i64 %55, i64 %355) #6, !dbg !528
  %indvars.iv.next113 = add nuw nsw i64 %indvars.iv112, 1, !dbg !530
  %exitcond115 = icmp eq i32 %345, %329, !dbg !530
  br i1 %exitcond115, label %._crit_edge68, label %337, !dbg !530

._crit_edge68:                                    ; preds = %337, %.preheader14._crit_edge
  %lftr.wideiv118.pre-phi = phi i32 [ %.pre162, %.preheader14._crit_edge ], [ %342, %337 ], !dbg !529
  %indvars.iv.next117 = add nuw nsw i64 %indvars.iv116, 1, !dbg !529
  %exitcond119 = icmp eq i32 %lftr.wideiv118.pre-phi, %331, !dbg !529
  br i1 %exitcond119, label %._crit_edge71, label %.preheader14, !dbg !529

._crit_edge71:                                    ; preds = %._crit_edge68
  %.pre148 = load i32* %48, align 4, !dbg !524, !tbaa !381
  br label %357, !dbg !529

; <label>:357                                     ; preds = %._crit_edge71, %.preheader20
  %358 = phi i32 [ %.pre148, %._crit_edge71 ], [ %333, %.preheader20 ], !dbg !525
  %indvars.iv.next121 = add nuw nsw i64 %indvars.iv120, 1, !dbg !525
  %359 = sext i32 %358 to i64, !dbg !524
  %360 = icmp slt i64 %indvars.iv.next121, %359, !dbg !524
  br i1 %360, label %.preheader20, label %.loopexit, !dbg !525

.loopexit:                                        ; preds = %357, %.preheader26, %316
  %361 = icmp ult i64 %318, 4294967296, !dbg !531
  br i1 %361, label %.thread11, label %.preheader25, !dbg !532

.preheader25:                                     ; preds = %.loopexit
  %362 = load i32* %48, align 4, !dbg !419, !tbaa !381
  %363 = icmp sgt i32 %362, 0, !dbg !419
  br i1 %363, label %.preheader19.lr.ph, label %.thread11, !dbg !533

.preheader19.lr.ph:                               ; preds = %.preheader25
  %364 = load i32* %49, align 4, !dbg !420, !tbaa !381
  %365 = icmp sgt i32 %364, 0, !dbg !420
  %366 = load i32* %50, align 4, !dbg !421, !tbaa !381
  %367 = icmp sgt i32 %366, 0, !dbg !421
  %368 = load i32* %51, align 4, !dbg !422, !tbaa !381
  %369 = load i32* %52, align 4, !dbg !422, !tbaa !381
  %370 = load i32* %53, align 4, !dbg !422, !tbaa !381
  %371 = add i32 %370, -1, !dbg !422
  %372 = sext i32 %366 to i64, !dbg !533
  %373 = sext i32 %368 to i64, !dbg !533
  %374 = add i32 %364, -1, !dbg !533
  br label %.preheader19, !dbg !533

.preheader19:                                     ; preds = %.preheader19.lr.ph, %405
  %375 = phi i32 [ %362, %.preheader19.lr.ph ], [ %406, %405 ]
  %indvars.iv128 = phi i64 [ 0, %.preheader19.lr.ph ], [ %indvars.iv.next129, %405 ]
  br i1 %365, label %.preheader.lr.ph, label %405, !dbg !534

.preheader.lr.ph:                                 ; preds = %.preheader19
  %376 = trunc i64 %indvars.iv128 to i32, !dbg !422
  %377 = xor i32 %376, -1, !dbg !422
  %378 = add i32 %370, %377, !dbg !422
  %379 = mul nsw i32 %378, %369, !dbg !422
  %380 = sext i32 %379 to i64, !dbg !534
  br label %.preheader, !dbg !534

.preheader:                                       ; preds = %._crit_edge75, %.preheader.lr.ph
  %indvars.iv124 = phi i64 [ 0, %.preheader.lr.ph ], [ %indvars.iv.next125, %._crit_edge75 ]
  br i1 %367, label %.lr.ph74, label %.preheader._crit_edge, !dbg !535

.preheader._crit_edge:                            ; preds = %.preheader
  %.pre161 = trunc i64 %indvars.iv124 to i32, !dbg !534
  br label %._crit_edge75, !dbg !535

.lr.ph74:                                         ; preds = %.preheader
  %381 = add nsw i64 %380, %indvars.iv124, !dbg !422
  %382 = mul nsw i64 %381, %373, !dbg !422
  br label %383, !dbg !535

; <label>:383                                     ; preds = %.lr.ph74, %383
  %indvars.iv122 = phi i64 [ 0, %.lr.ph74 ], [ %indvars.iv.next123, %383 ]
  %384 = add nsw i64 %382, %indvars.iv122, !dbg !422
  %385 = mul nsw i64 %384, %55, !dbg !422
  %386 = load i32* %48, align 4, !dbg !422, !tbaa !381
  %387 = sub i32 %371, %386, !dbg !422
  %388 = mul nsw i32 %387, %369, !dbg !422
  %389 = trunc i64 %indvars.iv124 to i32, !dbg !422
  %390 = add nsw i32 %388, %389, !dbg !422
  %391 = mul nsw i32 %390, %368, !dbg !422
  %392 = trunc i64 %indvars.iv122 to i32, !dbg !422
  %393 = add nsw i32 %391, %392, !dbg !422
  %394 = mul nsw i32 %393, %4, !dbg !422
  call void @llvm.dbg.value(metadata i32 %394, i64 0, metadata !317, metadata !325), !dbg !422
  %395 = load i8**** %54, align 8, !dbg !422, !tbaa !494
  %396 = getelementptr inbounds i8*** %395, i64 %indvars.iv130, !dbg !422
  %397 = load i8*** %396, align 8, !dbg !422, !tbaa !444
  %398 = load i8** %397, align 8, !dbg !422, !tbaa !444
  %399 = getelementptr inbounds i8* %398, i64 %385, !dbg !422
  %400 = sext i32 %394 to i64, !dbg !422
  %401 = getelementptr inbounds i8* %398, i64 %400, !dbg !422
  %402 = call i64 @llvm.objectsize.i64.p0i8(i8* %399, i1 false), !dbg !422
  %403 = call i8* @__memcpy_chk(i8* %399, i8* %401, i64 %55, i64 %402) #6, !dbg !422
  %indvars.iv.next123 = add nuw nsw i64 %indvars.iv122, 1, !dbg !535
  %404 = icmp slt i64 %indvars.iv.next123, %372, !dbg !421
  br i1 %404, label %383, label %._crit_edge75, !dbg !535

._crit_edge75:                                    ; preds = %383, %.preheader._crit_edge
  %lftr.wideiv126.pre-phi = phi i32 [ %.pre161, %.preheader._crit_edge ], [ %389, %383 ], !dbg !534
  %indvars.iv.next125 = add nuw nsw i64 %indvars.iv124, 1, !dbg !534
  %exitcond127 = icmp eq i32 %lftr.wideiv126.pre-phi, %374, !dbg !534
  br i1 %exitcond127, label %._crit_edge78, label %.preheader, !dbg !534

._crit_edge78:                                    ; preds = %._crit_edge75
  %.pre149 = load i32* %48, align 4, !dbg !419, !tbaa !381
  br label %405, !dbg !534

; <label>:405                                     ; preds = %._crit_edge78, %.preheader19
  %406 = phi i32 [ %.pre149, %._crit_edge78 ], [ %375, %.preheader19 ], !dbg !533
  %indvars.iv.next129 = add nuw nsw i64 %indvars.iv128, 1, !dbg !533
  %407 = sext i32 %406 to i64, !dbg !419
  %408 = icmp slt i64 %indvars.iv.next129, %407, !dbg !419
  br i1 %408, label %.preheader19, label %.thread11, !dbg !533

.thread11:                                        ; preds = %405, %.preheader36, %.preheader35, %.preheader25, %._crit_edge, %.loopexit32, %.loopexit, %.loopexit28
  %indvars.iv.next131 = add nsw i64 %indvars.iv130, 1, !dbg !407
  %409 = icmp slt i64 %indvars.iv.next131, %70, !dbg !406
  br i1 %409, label %71, label %.loopexit37, !dbg !407

.loopexit37:                                      ; preds = %.thread11, %35, %33, %11, %6
  %.0 = phi i32 [ -1, %6 ], [ -2, %11 ], [ -3, %33 ], [ 0, %35 ], [ 0, %.thread11 ]
  ret i32 %.0, !dbg !536
}
