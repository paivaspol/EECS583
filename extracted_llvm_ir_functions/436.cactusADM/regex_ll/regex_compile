define internal fastcc i32 @regex_compile(i8* %pattern, i64 %size, i64 %syntax, %struct.re_pattern_buffer* %bufp) #0 {
  %p = alloca i8*, align 8
  %str = alloca [7 x i8], align 1
  store i8* %pattern, i8** %p, align 8, !tbaa !13
  %1 = getelementptr inbounds i8* %pattern, i64 %size
  %2 = getelementptr inbounds %struct.re_pattern_buffer* %bufp, i64 0, i32 5
  %3 = load i8** %2, align 8, !tbaa !16
  %4 = tail call i8* @malloc(i64 1280) #7
  %5 = bitcast i8* %4 to %struct.compile_stack_elt_t*
  %6 = icmp eq i8* %4, null
  br i1 %6, label %.loopexit, label %7

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct.re_pattern_buffer* %bufp, i64 0, i32 3
  store i64 %syntax, i64* %8, align 8, !tbaa !14
  %9 = getelementptr inbounds %struct.re_pattern_buffer* %bufp, i64 0, i32 7
  %10 = load i8* %9, align 8
  %11 = and i8 %10, -105
  store i8 %11, i8* %9, align 8
  %12 = getelementptr inbounds %struct.re_pattern_buffer* %bufp, i64 0, i32 2
  store i64 0, i64* %12, align 8, !tbaa !11
  %13 = getelementptr inbounds %struct.re_pattern_buffer* %bufp, i64 0, i32 6
  store i64 0, i64* %13, align 8, !tbaa !17
  %.b.i = load i1* @init_syntax_once.done, align 1
  br i1 %.b.i, label %init_syntax_once.exit, label %.preheader1.i

.preheader1.i:                                    ; preds = %7
  tail call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([256 x i8]* @re_syntax_table, i64 0, i64 0), i8 0, i64 256, i32 16, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([256 x i8]* @re_syntax_table, i64 0, i64 97), i8 1, i64 26, i32 1, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([256 x i8]* @re_syntax_table, i64 0, i64 65), i8 1, i64 26, i32 1, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([256 x i8]* @re_syntax_table, i64 0, i64 48), i8 1, i64 10, i32 16, i1 false) #6
  store i8 1, i8* getelementptr inbounds ([256 x i8]* @re_syntax_table, i64 0, i64 95), align 1, !tbaa !12
  store i1 true, i1* @init_syntax_once.done, align 1
  br label %init_syntax_once.exit

init_syntax_once.exit:                            ; preds = %7, %.preheader1.i
  %14 = getelementptr inbounds %struct.re_pattern_buffer* %bufp, i64 0, i32 1
  %15 = load i64* %14, align 8, !tbaa !22
  %16 = icmp eq i64 %15, 0
  %17 = getelementptr inbounds %struct.re_pattern_buffer* %bufp, i64 0, i32 0
  %18 = load i8** %17, align 8, !tbaa !10
  br i1 %16, label %19, label %init_syntax_once.exit._crit_edge

; <label>:19                                      ; preds = %init_syntax_once.exit
  %20 = icmp eq i8* %18, null
  br i1 %20, label %23, label %21

; <label>:21                                      ; preds = %19
  %22 = tail call i8* @realloc(i8* %18, i64 32) #7
  br label %25

; <label>:23                                      ; preds = %19
  %24 = tail call i8* @malloc(i64 32) #7
  br label %25

; <label>:25                                      ; preds = %23, %21
  %storemerge76 = phi i8* [ %24, %23 ], [ %22, %21 ]
  store i8* %storemerge76, i8** %17, align 8, !tbaa !10
  %26 = icmp eq i8* %storemerge76, null
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %25
  tail call void @free(i8* %4) #8
  br label %.loopexit

; <label>:28                                      ; preds = %25
  store i64 32, i64* %14, align 8, !tbaa !22
  br label %init_syntax_once.exit._crit_edge

init_syntax_once.exit._crit_edge:                 ; preds = %init_syntax_once.exit, %28
  %29 = phi i8* [ %storemerge76, %28 ], [ %18, %init_syntax_once.exit ]
  %30 = icmp eq i64 %size, 0
  br i1 %30, label %.thread1656, label %.lr.ph1153

.lr.ph1153:                                       ; preds = %init_syntax_once.exit._crit_edge
  %31 = icmp ne i8* %3, null
  %32 = and i64 %syntax, 2
  %33 = icmp eq i64 %32, 0
  %34 = and i64 %syntax, 512
  %35 = icmp eq i64 %34, 0
  %36 = and i64 %syntax, 4096
  %37 = icmp eq i64 %36, 0
  %38 = and i64 %syntax, 8
  %39 = icmp eq i64 %38, 0
  %40 = and i64 %syntax, 8192
  %41 = and i64 %syntax, 32768
  %42 = icmp eq i64 %40, 0
  %43 = icmp eq i64 %41, 0
  %44 = and i64 %syntax, 1026
  %45 = icmp eq i64 %44, 0
  %46 = and i64 %syntax, 32
  %47 = icmp eq i64 %46, 0
  %48 = and i64 %syntax, 16
  %49 = icmp eq i64 %48, 0
  %50 = getelementptr inbounds i8* %3, i64 46
  %51 = getelementptr inbounds i8* %3, i64 10
  %52 = and i64 %syntax, 64
  %53 = icmp eq i64 %52, 0
  %54 = and i64 %syntax, 256
  %55 = icmp eq i64 %54, 0
  %56 = and i64 %syntax, 1
  %57 = icmp ne i64 %56, 0
  %58 = and i64 %syntax, 4
  %59 = icmp ne i64 %58, 0
  %60 = getelementptr inbounds [7 x i8]* %str, i64 0, i64 0
  %61 = and i64 %syntax, 131072
  %62 = icmp eq i64 %61, 0
  %63 = and i64 %syntax, 2048
  %64 = icmp eq i64 %63, 0
  %65 = and i64 %syntax, 1024
  %66 = icmp eq i64 %65, 0
  %67 = and i64 %syntax, 4608
  %68 = icmp eq i64 %67, 4608
  %69 = icmp ne i64 %36, 0
  %70 = and i64 %syntax, 33792
  %71 = icmp eq i64 %70, 0
  %72 = icmp eq i64 %67, 512
  %73 = and i64 %syntax, 524288
  %74 = icmp eq i64 %73, 0
  %75 = and i64 %syntax, 16384
  %76 = icmp eq i64 %75, 0
  br label %77

; <label>:77                                      ; preds = %.lr.ph1153, %.backedge367
  %78 = phi i8* [ %pattern, %.lr.ph1153 ], [ %1078, %.backedge367 ]
  %b.01147 = phi i8* [ %29, %.lr.ph1153 ], [ %b.0.be, %.backedge367 ]
  %compile_stack.sroa.40.01143 = phi i64 [ 32, %.lr.ph1153 ], [ %compile_stack.sroa.40.0.be, %.backedge367 ]
  %compile_stack.sroa.0.01137 = phi %struct.compile_stack_elt_t* [ %5, %.lr.ph1153 ], [ %compile_stack.sroa.0.0.be, %.backedge367 ]
  %pending_exact.01132 = phi i8* [ null, %.lr.ph1153 ], [ %pending_exact.0.be, %.backedge367 ]
  %laststart.01128 = phi i8* [ null, %.lr.ph1153 ], [ %laststart.0.be, %.backedge367 ]
  %begalt.01123 = phi i8* [ %29, %.lr.ph1153 ], [ %begalt.0.be, %.backedge367 ]
  %fixup_alt_jump.01118 = phi i8* [ null, %.lr.ph1153 ], [ %fixup_alt_jump.0.be, %.backedge367 ]
  %regnum.01114 = phi i32 [ 0, %.lr.ph1153 ], [ %regnum.0.be, %.backedge367 ]
  %79 = getelementptr inbounds i8* %78, i64 1
  store i8* %79, i8** %p, align 8, !tbaa !13
  %80 = load i8* %78, align 1, !tbaa !12
  br i1 %31, label %81, label %85

; <label>:81                                      ; preds = %77
  %82 = zext i8 %80 to i64
  %83 = getelementptr inbounds i8* %3, i64 %82
  %84 = load i8* %83, align 1, !tbaa !12
  br label %85

; <label>:85                                      ; preds = %77, %81
  %c.0 = phi i8 [ %84, %81 ], [ %80, %77 ]
  %86 = zext i8 %c.0 to i32
  switch i32 %86, label %group_in_compile_stack.exit.thread216 [
    i32 94, label %87
    i32 36, label %140
    i32 43, label %197
    i32 63, label %197
    i32 42, label %198
    i32 46, label %.preheader280
    i32 91, label %481
    i32 40, label %975
    i32 41, label %976
    i32 10, label %977
    i32 124, label %978
    i32 123, label %979
    i32 92, label %980
  ]

.preheader280:                                    ; preds = %85
  %.pre1598.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer283

; <label>:87                                      ; preds = %85
  %88 = icmp ne i8* %78, %pattern
  %or.cond78 = and i1 %39, %88
  br i1 %or.cond78, label %89, label %.preheader255

; <label>:89                                      ; preds = %87
  %90 = getelementptr inbounds i8* %78, i64 -1
  %91 = icmp ugt i8* %90, %pattern
  br i1 %91, label %92, label %96

; <label>:92                                      ; preds = %89
  %93 = getelementptr inbounds i8* %78, i64 -2
  %94 = load i8* %93, align 1, !tbaa !12
  %95 = icmp eq i8 %94, 92
  br label %96

; <label>:96                                      ; preds = %92, %89
  %97 = phi i1 [ false, %89 ], [ %95, %92 ]
  %98 = load i8* %90, align 1, !tbaa !12
  switch i8 %98, label %group_in_compile_stack.exit.thread216 [
    i8 40, label %at_begline_loc_p.exit
    i8 124, label %99
  ]

; <label>:99                                      ; preds = %96
  br label %at_begline_loc_p.exit

at_begline_loc_p.exit:                            ; preds = %96, %99
  %.sink = phi i64 [ %41, %99 ], [ %40, %96 ]
  %.not.i = icmp ne i64 %.sink, 0
  %.1.i = or i1 %97, %.not.i
  br i1 %.1.i, label %.preheader255, label %group_in_compile_stack.exit.thread216

.preheader255:                                    ; preds = %87, %at_begline_loc_p.exit
  %.pre1603.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer258

.outer258:                                        ; preds = %132, %134, %.preheader255
  %.pre1603 = phi i8* [ %.pre1603.pre, %.preheader255 ], [ %112, %134 ], [ %112, %132 ]
  %fixup_alt_jump.1.ph = phi i8* [ %fixup_alt_jump.01118, %.preheader255 ], [ %fixup_alt_jump.2, %134 ], [ %fixup_alt_jump.2, %132 ]
  %begalt.1.ph = phi i8* [ %begalt.01123, %.preheader255 ], [ %120, %134 ], [ %120, %132 ]
  %laststart.1.ph = phi i8* [ %laststart.01128, %.preheader255 ], [ %laststart.2, %134 ], [ %laststart.2, %132 ]
  %pending_exact.1.ph = phi i8* [ %pending_exact.01132, %.preheader255 ], [ %137, %134 ], [ null, %132 ]
  %b.1.ph = phi i8* [ %b.01147, %.preheader255 ], [ %117, %134 ], [ %117, %132 ]
  %100 = ptrtoint i8* %b.1.ph to i64
  br label %101

; <label>:101                                     ; preds = %.outer258, %114
  %102 = ptrtoint i8* %.pre1603 to i64
  %103 = sub i64 %100, %102
  %104 = add nsw i64 %103, 1
  %105 = load i64* %14, align 8, !tbaa !22
  %106 = icmp ugt i64 %104, %105
  br i1 %106, label %107, label %138

; <label>:107                                     ; preds = %101
  %108 = icmp eq i64 %105, 65536
  br i1 %108, label %.loopexit, label %109

; <label>:109                                     ; preds = %107
  %110 = shl i64 %105, 1
  %111 = icmp ugt i64 %110, 65536
  %. = select i1 %111, i64 65536, i64 %110
  store i64 %., i64* %14, align 8, !tbaa !22
  %112 = tail call i8* @realloc(i8* %.pre1603, i64 %.) #7
  store i8* %112, i8** %17, align 8, !tbaa !10
  %113 = icmp eq i8* %112, null
  br i1 %113, label %.loopexit, label %114

; <label>:114                                     ; preds = %109
  %115 = icmp eq i8* %.pre1603, %112
  br i1 %115, label %101, label %116

; <label>:116                                     ; preds = %114
  %117 = getelementptr inbounds i8* %112, i64 %103
  %118 = ptrtoint i8* %begalt.1.ph to i64
  %119 = sub i64 %118, %102
  %120 = getelementptr inbounds i8* %112, i64 %119
  %121 = icmp eq i8* %fixup_alt_jump.1.ph, null
  br i1 %121, label %126, label %122

; <label>:122                                     ; preds = %116
  %123 = ptrtoint i8* %fixup_alt_jump.1.ph to i64
  %124 = sub i64 %123, %102
  %125 = getelementptr inbounds i8* %112, i64 %124
  br label %126

; <label>:126                                     ; preds = %116, %122
  %fixup_alt_jump.2 = phi i8* [ %125, %122 ], [ null, %116 ]
  %127 = icmp eq i8* %laststart.1.ph, null
  br i1 %127, label %132, label %128

; <label>:128                                     ; preds = %126
  %129 = ptrtoint i8* %laststart.1.ph to i64
  %130 = sub i64 %129, %102
  %131 = getelementptr inbounds i8* %112, i64 %130
  br label %132

; <label>:132                                     ; preds = %126, %128
  %laststart.2 = phi i8* [ %131, %128 ], [ null, %126 ]
  %133 = icmp eq i8* %pending_exact.1.ph, null
  br i1 %133, label %.outer258, label %134

; <label>:134                                     ; preds = %132
  %135 = ptrtoint i8* %pending_exact.1.ph to i64
  %136 = sub i64 %135, %102
  %137 = getelementptr inbounds i8* %112, i64 %136
  br label %.outer258

; <label>:138                                     ; preds = %101
  %139 = getelementptr inbounds i8* %b.1.ph, i64 1
  store i8 9, i8* %b.1.ph, align 1, !tbaa !12
  br label %.backedge367

; <label>:140                                     ; preds = %85
  %141 = icmp ne i8* %79, %1
  %or.cond80 = and i1 %39, %141
  br i1 %or.cond80, label %142, label %.critedge231.preheader

; <label>:142                                     ; preds = %140
  %143 = load i8* %79, align 1, !tbaa !12
  %144 = icmp eq i8 %143, 92
  %145 = getelementptr inbounds i8* %78, i64 2
  %146 = icmp ult i8* %145, %1
  %..i163 = select i1 %146, i8* %145, i8* null
  br i1 %42, label %149, label %147

; <label>:147                                     ; preds = %142
  %148 = icmp eq i8 %143, 41
  br i1 %148, label %.critedge231.preheader, label %153

; <label>:149                                     ; preds = %142
  %or.cond.i = and i1 %146, %144
  br i1 %or.cond.i, label %150, label %153

; <label>:150                                     ; preds = %149
  %151 = load i8* %..i163, align 1, !tbaa !12
  %152 = icmp eq i8 %151, 41
  br i1 %152, label %.critedge231.preheader, label %153

; <label>:153                                     ; preds = %150, %149, %147
  br i1 %43, label %154, label %at_endline_loc_p.exit

; <label>:154                                     ; preds = %153
  %or.cond3.i = and i1 %146, %144
  br i1 %or.cond3.i, label %155, label %group_in_compile_stack.exit.thread216

; <label>:155                                     ; preds = %154
  %156 = load i8* %..i163, align 1, !tbaa !12
  br label %at_endline_loc_p.exit

at_endline_loc_p.exit:                            ; preds = %153, %155
  %.sink234 = phi i8 [ %156, %155 ], [ %143, %153 ]
  %157 = icmp eq i8 %.sink234, 124
  br i1 %157, label %.critedge231.preheader, label %group_in_compile_stack.exit.thread216

.critedge231.preheader:                           ; preds = %140, %at_endline_loc_p.exit, %150, %147
  %.pre1602.pre = load i8** %17, align 8, !tbaa !10
  br label %.critedge231.outer

.critedge231.outer:                               ; preds = %189, %191, %.critedge231.preheader
  %.pre1602 = phi i8* [ %.pre1602.pre, %.critedge231.preheader ], [ %169, %191 ], [ %169, %189 ]
  %fixup_alt_jump.3.ph = phi i8* [ %fixup_alt_jump.01118, %.critedge231.preheader ], [ %fixup_alt_jump.4, %191 ], [ %fixup_alt_jump.4, %189 ]
  %begalt.2.ph = phi i8* [ %begalt.01123, %.critedge231.preheader ], [ %177, %191 ], [ %177, %189 ]
  %laststart.3.ph = phi i8* [ %laststart.01128, %.critedge231.preheader ], [ %laststart.4, %191 ], [ %laststart.4, %189 ]
  %pending_exact.2.ph = phi i8* [ %pending_exact.01132, %.critedge231.preheader ], [ %194, %191 ], [ null, %189 ]
  %b.2.ph = phi i8* [ %b.01147, %.critedge231.preheader ], [ %174, %191 ], [ %174, %189 ]
  %158 = ptrtoint i8* %b.2.ph to i64
  br label %.critedge231

.critedge231:                                     ; preds = %.critedge231.outer, %171
  %159 = ptrtoint i8* %.pre1602 to i64
  %160 = sub i64 %158, %159
  %161 = add nsw i64 %160, 1
  %162 = load i64* %14, align 8, !tbaa !22
  %163 = icmp ugt i64 %161, %162
  br i1 %163, label %164, label %195

; <label>:164                                     ; preds = %.critedge231
  %165 = icmp eq i64 %162, 65536
  br i1 %165, label %.loopexit, label %166

; <label>:166                                     ; preds = %164
  %167 = shl i64 %162, 1
  %168 = icmp ugt i64 %167, 65536
  %.81 = select i1 %168, i64 65536, i64 %167
  store i64 %.81, i64* %14, align 8, !tbaa !22
  %169 = tail call i8* @realloc(i8* %.pre1602, i64 %.81) #7
  store i8* %169, i8** %17, align 8, !tbaa !10
  %170 = icmp eq i8* %169, null
  br i1 %170, label %.loopexit, label %171

; <label>:171                                     ; preds = %166
  %172 = icmp eq i8* %.pre1602, %169
  br i1 %172, label %.critedge231, label %173

; <label>:173                                     ; preds = %171
  %174 = getelementptr inbounds i8* %169, i64 %160
  %175 = ptrtoint i8* %begalt.2.ph to i64
  %176 = sub i64 %175, %159
  %177 = getelementptr inbounds i8* %169, i64 %176
  %178 = icmp eq i8* %fixup_alt_jump.3.ph, null
  br i1 %178, label %183, label %179

; <label>:179                                     ; preds = %173
  %180 = ptrtoint i8* %fixup_alt_jump.3.ph to i64
  %181 = sub i64 %180, %159
  %182 = getelementptr inbounds i8* %169, i64 %181
  br label %183

; <label>:183                                     ; preds = %173, %179
  %fixup_alt_jump.4 = phi i8* [ %182, %179 ], [ null, %173 ]
  %184 = icmp eq i8* %laststart.3.ph, null
  br i1 %184, label %189, label %185

; <label>:185                                     ; preds = %183
  %186 = ptrtoint i8* %laststart.3.ph to i64
  %187 = sub i64 %186, %159
  %188 = getelementptr inbounds i8* %169, i64 %187
  br label %189

; <label>:189                                     ; preds = %183, %185
  %laststart.4 = phi i8* [ %188, %185 ], [ null, %183 ]
  %190 = icmp eq i8* %pending_exact.2.ph, null
  br i1 %190, label %.critedge231.outer, label %191

; <label>:191                                     ; preds = %189
  %192 = ptrtoint i8* %pending_exact.2.ph to i64
  %193 = sub i64 %192, %159
  %194 = getelementptr inbounds i8* %169, i64 %193
  br label %.critedge231.outer

; <label>:195                                     ; preds = %.critedge231
  %196 = getelementptr inbounds i8* %b.2.ph, i64 1
  store i8 10, i8* %b.2.ph, align 1, !tbaa !12
  br label %.backedge367

; <label>:197                                     ; preds = %85, %85
  br i1 %45, label %198, label %group_in_compile_stack.exit.thread216

; <label>:198                                     ; preds = %197, %1960, %85
  %199 = phi i8* [ %985, %1960 ], [ %79, %85 ], [ %79, %197 ]
  %c.1 = phi i8 [ %986, %1960 ], [ %c.0, %85 ], [ %c.0, %197 ]
  %200 = icmp ne i8* %laststart.01128, null
  br i1 %200, label %.preheader278, label %201

; <label>:201                                     ; preds = %198
  br i1 %47, label %204, label %202

; <label>:202                                     ; preds = %201
  %203 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %203) #8
  br label %.loopexit

; <label>:204                                     ; preds = %201
  br i1 %49, label %group_in_compile_stack.exit.thread216, label %.preheader278

.preheader278:                                    ; preds = %204, %198
  %205 = icmp ne i8 %c.1, 43
  %206 = zext i1 %205 to i32
  %207 = zext i1 %205 to i8
  %208 = icmp ne i8 %c.1, 63
  %209 = zext i1 %208 to i8
  %210 = icmp eq i8* %199, %1
  br i1 %210, label %.loopexit279, label %.lr.ph1110

.lr.ph1110:                                       ; preds = %.preheader278
  %211 = zext i1 %208 to i32
  br label %212

; <label>:212                                     ; preds = %.lr.ph1110, %.backedge
  %213 = phi i8* [ %199, %.lr.ph1110 ], [ %226, %.backedge ]
  %214 = phi i8 [ %209, %.lr.ph1110 ], [ %234, %.backedge ]
  %215 = phi i32 [ %211, %.lr.ph1110 ], [ %233, %.backedge ]
  %216 = phi i8 [ %207, %.lr.ph1110 ], [ %230, %.backedge ]
  %217 = phi i32 [ %206, %.lr.ph1110 ], [ %229, %.backedge ]
  %218 = getelementptr inbounds i8* %213, i64 1
  store i8* %218, i8** %p, align 8, !tbaa !13
  %219 = load i8* %213, align 1, !tbaa !12
  br i1 %31, label %220, label %224

; <label>:220                                     ; preds = %212
  %221 = zext i8 %219 to i64
  %222 = getelementptr inbounds i8* %3, i64 %221
  %223 = load i8* %222, align 1, !tbaa !12
  br label %224

; <label>:224                                     ; preds = %212, %220
  %c.3 = phi i8 [ %223, %220 ], [ %219, %212 ]
  %225 = icmp eq i8 %c.3, 42
  br i1 %225, label %.backedge, label %236

.backedge:                                        ; preds = %224, %237, %237, %249, %249
  %226 = phi i8* [ %218, %224 ], [ %218, %237 ], [ %218, %237 ], [ %243, %249 ], [ %243, %249 ]
  %c.2.be = phi i8 [ 42, %224 ], [ %c.3, %237 ], [ %c.3, %237 ], [ %c1.0, %249 ], [ %c1.0, %249 ]
  %227 = icmp ne i8 %c.2.be, 43
  %228 = zext i1 %227 to i32
  %229 = or i32 %228, %217
  %230 = trunc i32 %229 to i8
  %231 = icmp ne i8 %c.2.be, 63
  %232 = zext i1 %231 to i32
  %233 = or i32 %232, %215
  %234 = trunc i32 %233 to i8
  %235 = icmp eq i8* %226, %1
  br i1 %235, label %.loopexit279, label %212

; <label>:236                                     ; preds = %224
  br i1 %33, label %237, label %.critedge

; <label>:237                                     ; preds = %236
  switch i8 %c.3, label %.thread [
    i8 43, label %.backedge
    i8 63, label %.backedge
  ]

.critedge:                                        ; preds = %236
  %.old = icmp eq i8 %c.3, 92
  br i1 %.old, label %238, label %.thread

; <label>:238                                     ; preds = %.critedge
  %239 = icmp eq i8* %218, %1
  br i1 %239, label %240, label %242

; <label>:240                                     ; preds = %238
  %241 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %241) #8
  br label %.loopexit

; <label>:242                                     ; preds = %238
  %243 = getelementptr inbounds i8* %213, i64 2
  store i8* %243, i8** %p, align 8, !tbaa !13
  %244 = load i8* %218, align 1, !tbaa !12
  br i1 %31, label %245, label %249

; <label>:245                                     ; preds = %242
  %246 = zext i8 %244 to i64
  %247 = getelementptr inbounds i8* %3, i64 %246
  %248 = load i8* %247, align 1, !tbaa !12
  br label %249

; <label>:249                                     ; preds = %242, %245
  %c1.0 = phi i8 [ %248, %245 ], [ %244, %242 ]
  switch i8 %c1.0, label %250 [
    i8 43, label %.backedge
    i8 63, label %.backedge
  ]

; <label>:250                                     ; preds = %249
  store i8* %213, i8** %p, align 8, !tbaa !13
  br label %.loopexit279

.thread:                                          ; preds = %237, %.critedge
  store i8* %213, i8** %p, align 8, !tbaa !13
  br label %.loopexit279

.loopexit279:                                     ; preds = %.backedge, %.preheader278, %.thread, %250
  %251 = phi i8* [ %213, %.thread ], [ %213, %250 ], [ %1, %.preheader278 ], [ %1, %.backedge ]
  %252 = phi i8 [ %214, %.thread ], [ %214, %250 ], [ %209, %.preheader278 ], [ %234, %.backedge ]
  %253 = phi i8 [ %216, %.thread ], [ %216, %250 ], [ %207, %.preheader278 ], [ %230, %.backedge ]
  %254 = phi i32 [ %217, %.thread ], [ %217, %250 ], [ %206, %.preheader278 ], [ %229, %.backedge ]
  br i1 %200, label %255, label %.backedge367

; <label>:255                                     ; preds = %.loopexit279
  %256 = icmp eq i8 %252, 0
  br i1 %256, label %.preheader265, label %.preheader274

.preheader274:                                    ; preds = %255
  %.pre1599.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer277

.outer277:                                        ; preds = %289, %291, %.preheader274
  %.pre1599 = phi i8* [ %.pre1599.pre, %.preheader274 ], [ %269, %291 ], [ %269, %289 ]
  %fixup_alt_jump.5.ph = phi i8* [ %fixup_alt_jump.01118, %.preheader274 ], [ %fixup_alt_jump.6, %291 ], [ %fixup_alt_jump.6, %289 ]
  %begalt.3.ph = phi i8* [ %begalt.01123, %.preheader274 ], [ %277, %291 ], [ %277, %289 ]
  %laststart.5.ph = phi i8* [ %laststart.01128, %.preheader274 ], [ %laststart.6, %291 ], [ %laststart.6, %289 ]
  %pending_exact.3.ph = phi i8* [ %pending_exact.01132, %.preheader274 ], [ %294, %291 ], [ null, %289 ]
  %b.3.ph = phi i8* [ %b.01147, %.preheader274 ], [ %274, %291 ], [ %274, %289 ]
  %257 = ptrtoint i8* %b.3.ph to i64
  br label %258

; <label>:258                                     ; preds = %.outer277, %271
  %259 = ptrtoint i8* %.pre1599 to i64
  %260 = sub i64 %257, %259
  %261 = add nsw i64 %260, 3
  %262 = load i64* %14, align 8, !tbaa !22
  %263 = icmp ugt i64 %261, %262
  br i1 %263, label %264, label %295

; <label>:264                                     ; preds = %258
  %265 = icmp eq i64 %262, 65536
  br i1 %265, label %.loopexit, label %266

; <label>:266                                     ; preds = %264
  %267 = shl i64 %262, 1
  %268 = icmp ugt i64 %267, 65536
  %.85 = select i1 %268, i64 65536, i64 %267
  store i64 %.85, i64* %14, align 8, !tbaa !22
  %269 = tail call i8* @realloc(i8* %.pre1599, i64 %.85) #7
  store i8* %269, i8** %17, align 8, !tbaa !10
  %270 = icmp eq i8* %269, null
  br i1 %270, label %.loopexit, label %271

; <label>:271                                     ; preds = %266
  %272 = icmp eq i8* %.pre1599, %269
  br i1 %272, label %258, label %273

; <label>:273                                     ; preds = %271
  %274 = getelementptr inbounds i8* %269, i64 %260
  %275 = ptrtoint i8* %begalt.3.ph to i64
  %276 = sub i64 %275, %259
  %277 = getelementptr inbounds i8* %269, i64 %276
  %278 = icmp eq i8* %fixup_alt_jump.5.ph, null
  br i1 %278, label %283, label %279

; <label>:279                                     ; preds = %273
  %280 = ptrtoint i8* %fixup_alt_jump.5.ph to i64
  %281 = sub i64 %280, %259
  %282 = getelementptr inbounds i8* %269, i64 %281
  br label %283

; <label>:283                                     ; preds = %273, %279
  %fixup_alt_jump.6 = phi i8* [ %282, %279 ], [ null, %273 ]
  %284 = icmp eq i8* %laststart.5.ph, null
  br i1 %284, label %289, label %285

; <label>:285                                     ; preds = %283
  %286 = ptrtoint i8* %laststart.5.ph to i64
  %287 = sub i64 %286, %259
  %288 = getelementptr inbounds i8* %269, i64 %287
  br label %289

; <label>:289                                     ; preds = %283, %285
  %laststart.6 = phi i8* [ %288, %285 ], [ null, %283 ]
  %290 = icmp eq i8* %pending_exact.3.ph, null
  br i1 %290, label %.outer277, label %291

; <label>:291                                     ; preds = %289
  %292 = ptrtoint i8* %pending_exact.3.ph to i64
  %293 = sub i64 %292, %259
  %294 = getelementptr inbounds i8* %269, i64 %293
  br label %.outer277

; <label>:295                                     ; preds = %258
  %296 = getelementptr inbounds i8* %251, i64 -2
  %297 = load i8* %296, align 1, !tbaa !12
  br i1 %31, label %298, label %304

; <label>:298                                     ; preds = %295
  %299 = zext i8 %297 to i64
  %300 = getelementptr inbounds i8* %3, i64 %299
  %301 = load i8* %300, align 1, !tbaa !12
  %302 = load i8* %50, align 1, !tbaa !12
  %303 = sext i8 %302 to i32
  br label %304

; <label>:304                                     ; preds = %295, %298
  %.in = phi i8 [ %301, %298 ], [ %297, %295 ]
  %305 = phi i32 [ %303, %298 ], [ 46, %295 ]
  %306 = sext i8 %.in to i32
  %notlhs = icmp ne i32 %254, 0
  %notrhs = icmp eq i32 %306, %305
  %or.cond87.not = and i1 %notrhs, %notlhs
  %307 = icmp ult i8* %251, %1
  %or.cond1663 = and i1 %or.cond87.not, %307
  br i1 %or.cond1663, label %308, label %330

; <label>:308                                     ; preds = %304
  %309 = load i8* %251, align 1, !tbaa !12
  br i1 %31, label %310, label %316

; <label>:310                                     ; preds = %308
  %311 = zext i8 %309 to i64
  %312 = getelementptr inbounds i8* %3, i64 %311
  %313 = load i8* %312, align 1, !tbaa !12
  %314 = load i8* %51, align 1, !tbaa !12
  %315 = sext i8 %314 to i32
  br label %316

; <label>:316                                     ; preds = %308, %310
  %.in230 = phi i8 [ %313, %310 ], [ %309, %308 ]
  %317 = phi i32 [ %315, %310 ], [ 10, %308 ]
  %318 = sext i8 %.in230 to i32
  %319 = icmp eq i32 %318, %317
  %or.cond90 = and i1 %53, %319
  br i1 %or.cond90, label %320, label %330

; <label>:320                                     ; preds = %316
  %321 = ptrtoint i8* %laststart.5.ph to i64
  %322 = sub i64 %321, %257
  %323 = add i64 %322, 4294967293
  %324 = trunc i64 %323 to i32
  store i8 13, i8* %b.3.ph, align 1, !tbaa !12
  %325 = trunc i64 %323 to i8
  %326 = getelementptr inbounds i8* %b.3.ph, i64 1
  store i8 %325, i8* %326, align 1, !tbaa !12
  %327 = lshr i32 %324, 8
  %328 = trunc i32 %327 to i8
  %329 = getelementptr inbounds i8* %b.3.ph, i64 2
  store i8 %328, i8* %329, align 1, !tbaa !12
  br label %341

; <label>:330                                     ; preds = %304, %316
  %331 = getelementptr inbounds i8* %laststart.5.ph, i64 -3
  %332 = ptrtoint i8* %331 to i64
  %333 = sub i64 %332, %257
  %334 = add i64 %333, 4294967293
  %335 = trunc i64 %334 to i32
  store i8 18, i8* %b.3.ph, align 1, !tbaa !12
  %336 = trunc i64 %334 to i8
  %337 = getelementptr inbounds i8* %b.3.ph, i64 1
  store i8 %336, i8* %337, align 1, !tbaa !12
  %338 = lshr i32 %335, 8
  %339 = trunc i32 %338 to i8
  %340 = getelementptr inbounds i8* %b.3.ph, i64 2
  store i8 %339, i8* %340, align 1, !tbaa !12
  br label %341

; <label>:341                                     ; preds = %330, %320
  %keep_string_p.0 = phi i8 [ 0, %330 ], [ 1, %320 ]
  %342 = getelementptr inbounds i8* %b.3.ph, i64 3
  br label %.preheader265

.preheader265:                                    ; preds = %341, %255
  %keep_string_p.1.ph = phi i8 [ 0, %255 ], [ %keep_string_p.0, %341 ]
  %fixup_alt_jump.7.ph = phi i8* [ %fixup_alt_jump.01118, %255 ], [ %fixup_alt_jump.5.ph, %341 ]
  %begalt.4.ph = phi i8* [ %begalt.01123, %255 ], [ %begalt.3.ph, %341 ]
  %laststart.7.ph = phi i8* [ %laststart.01128, %255 ], [ %laststart.5.ph, %341 ]
  %pending_exact.4.ph = phi i8* [ %pending_exact.01132, %255 ], [ %pending_exact.3.ph, %341 ]
  %b.4.ph = phi i8* [ %b.01147, %255 ], [ %342, %341 ]
  %.pre1600.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer268

.outer268:                                        ; preds = %375, %377, %.preheader265
  %.pre1600 = phi i8* [ %.pre1600.pre, %.preheader265 ], [ %355, %377 ], [ %355, %375 ]
  %fixup_alt_jump.7.ph269 = phi i8* [ %fixup_alt_jump.7.ph, %.preheader265 ], [ %fixup_alt_jump.8, %377 ], [ %fixup_alt_jump.8, %375 ]
  %begalt.4.ph270 = phi i8* [ %begalt.4.ph, %.preheader265 ], [ %363, %377 ], [ %363, %375 ]
  %laststart.7.ph271 = phi i8* [ %laststart.7.ph, %.preheader265 ], [ %laststart.8, %377 ], [ %laststart.8, %375 ]
  %pending_exact.4.ph272 = phi i8* [ %pending_exact.4.ph, %.preheader265 ], [ %380, %377 ], [ null, %375 ]
  %b.4.ph273 = phi i8* [ %b.4.ph, %.preheader265 ], [ %360, %377 ], [ %360, %375 ]
  %343 = ptrtoint i8* %b.4.ph273 to i64
  br label %344

; <label>:344                                     ; preds = %.outer268, %357
  %345 = ptrtoint i8* %.pre1600 to i64
  %346 = sub i64 %343, %345
  %347 = add nsw i64 %346, 3
  %348 = load i64* %14, align 8, !tbaa !22
  %349 = icmp ugt i64 %347, %348
  br i1 %349, label %350, label %381

; <label>:350                                     ; preds = %344
  %351 = icmp eq i64 %348, 65536
  br i1 %351, label %.loopexit, label %352

; <label>:352                                     ; preds = %350
  %353 = shl i64 %348, 1
  %354 = icmp ugt i64 %353, 65536
  %.91 = select i1 %354, i64 65536, i64 %353
  store i64 %.91, i64* %14, align 8, !tbaa !22
  %355 = tail call i8* @realloc(i8* %.pre1600, i64 %.91) #7
  store i8* %355, i8** %17, align 8, !tbaa !10
  %356 = icmp eq i8* %355, null
  br i1 %356, label %.loopexit, label %357

; <label>:357                                     ; preds = %352
  %358 = icmp eq i8* %.pre1600, %355
  br i1 %358, label %344, label %359

; <label>:359                                     ; preds = %357
  %360 = getelementptr inbounds i8* %355, i64 %346
  %361 = ptrtoint i8* %begalt.4.ph270 to i64
  %362 = sub i64 %361, %345
  %363 = getelementptr inbounds i8* %355, i64 %362
  %364 = icmp eq i8* %fixup_alt_jump.7.ph269, null
  br i1 %364, label %369, label %365

; <label>:365                                     ; preds = %359
  %366 = ptrtoint i8* %fixup_alt_jump.7.ph269 to i64
  %367 = sub i64 %366, %345
  %368 = getelementptr inbounds i8* %355, i64 %367
  br label %369

; <label>:369                                     ; preds = %359, %365
  %fixup_alt_jump.8 = phi i8* [ %368, %365 ], [ null, %359 ]
  %370 = icmp eq i8* %laststart.7.ph271, null
  br i1 %370, label %375, label %371

; <label>:371                                     ; preds = %369
  %372 = ptrtoint i8* %laststart.7.ph271 to i64
  %373 = sub i64 %372, %345
  %374 = getelementptr inbounds i8* %355, i64 %373
  br label %375

; <label>:375                                     ; preds = %369, %371
  %laststart.8 = phi i8* [ %374, %371 ], [ null, %369 ]
  %376 = icmp eq i8* %pending_exact.4.ph272, null
  br i1 %376, label %.outer268, label %377

; <label>:377                                     ; preds = %375
  %378 = ptrtoint i8* %pending_exact.4.ph272 to i64
  %379 = sub i64 %378, %345
  %380 = getelementptr inbounds i8* %355, i64 %379
  br label %.outer268

; <label>:381                                     ; preds = %344
  %382 = icmp ne i8 %keep_string_p.1.ph, 0
  %383 = getelementptr inbounds i8* %b.4.ph273, i64 3
  %384 = ptrtoint i8* %383 to i64
  %385 = ptrtoint i8* %laststart.7.ph271 to i64
  %386 = sub i64 %384, %385
  %387 = add i64 %386, 4294967293
  %388 = trunc i64 %387 to i32
  %389 = icmp eq i8* %b.4.ph273, %laststart.7.ph271
  br i1 %389, label %insert_op1.exit177, label %.lr.ph.i174

.lr.ph.i174:                                      ; preds = %381, %.lr.ph.i174
  %pto.02.i175 = phi i8* [ %392, %.lr.ph.i174 ], [ %383, %381 ]
  %pfrom.01.i176 = phi i8* [ %390, %.lr.ph.i174 ], [ %b.4.ph273, %381 ]
  %390 = getelementptr inbounds i8* %pfrom.01.i176, i64 -1
  %391 = load i8* %390, align 1, !tbaa !12
  %392 = getelementptr inbounds i8* %pto.02.i175, i64 -1
  store i8 %391, i8* %392, align 1, !tbaa !12
  %393 = icmp eq i8* %390, %laststart.7.ph271
  br i1 %393, label %insert_op1.exit177, label %.lr.ph.i174

insert_op1.exit177:                               ; preds = %.lr.ph.i174, %381
  %394 = select i1 %382, i8 16, i8 15
  store i8 %394, i8* %laststart.7.ph271, align 1, !tbaa !12
  %395 = trunc i64 %387 to i8
  %396 = getelementptr inbounds i8* %laststart.7.ph271, i64 1
  store i8 %395, i8* %396, align 1, !tbaa !12
  %397 = lshr i32 %388, 8
  %398 = trunc i32 %397 to i8
  %399 = getelementptr inbounds i8* %laststart.7.ph271, i64 2
  store i8 %398, i8* %399, align 1, !tbaa !12
  %400 = icmp eq i8 %253, 0
  br i1 %400, label %.preheader261, label %.backedge367

.preheader261:                                    ; preds = %insert_op1.exit177
  %.pre1601.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer264

.outer264:                                        ; preds = %429, %427, %.preheader261
  %.pre1601 = phi i8* [ %.pre1601.pre, %.preheader261 ], [ %413, %427 ], [ %413, %429 ]
  %fixup_alt_jump.9.ph = phi i8* [ %fixup_alt_jump.7.ph269, %.preheader261 ], [ %fixup_alt_jump.10, %427 ], [ %fixup_alt_jump.10, %429 ]
  %begalt.5.ph = phi i8* [ %begalt.4.ph270, %.preheader261 ], [ %421, %427 ], [ %421, %429 ]
  %laststart.9.ph = phi i8* [ %laststart.7.ph271, %.preheader261 ], [ null, %427 ], [ %432, %429 ]
  %b.5.ph = phi i8* [ %383, %.preheader261 ], [ %418, %427 ], [ %418, %429 ]
  %401 = ptrtoint i8* %b.5.ph to i64
  br label %402

; <label>:402                                     ; preds = %.outer264, %415
  %403 = ptrtoint i8* %.pre1601 to i64
  %404 = sub i64 %401, %403
  %405 = add nsw i64 %404, 3
  %406 = load i64* %14, align 8, !tbaa !22
  %407 = icmp ugt i64 %405, %406
  br i1 %407, label %408, label %433

; <label>:408                                     ; preds = %402
  %409 = icmp eq i64 %406, 65536
  br i1 %409, label %.loopexit, label %410

; <label>:410                                     ; preds = %408
  %411 = shl i64 %406, 1
  %412 = icmp ugt i64 %411, 65536
  %.92 = select i1 %412, i64 65536, i64 %411
  store i64 %.92, i64* %14, align 8, !tbaa !22
  %413 = tail call i8* @realloc(i8* %.pre1601, i64 %.92) #7
  store i8* %413, i8** %17, align 8, !tbaa !10
  %414 = icmp eq i8* %413, null
  br i1 %414, label %.loopexit, label %415

; <label>:415                                     ; preds = %410
  %416 = icmp eq i8* %.pre1601, %413
  br i1 %416, label %402, label %417

; <label>:417                                     ; preds = %415
  %418 = getelementptr inbounds i8* %413, i64 %404
  %419 = ptrtoint i8* %begalt.5.ph to i64
  %420 = sub i64 %419, %403
  %421 = getelementptr inbounds i8* %413, i64 %420
  %422 = icmp eq i8* %fixup_alt_jump.9.ph, null
  br i1 %422, label %427, label %423

; <label>:423                                     ; preds = %417
  %424 = ptrtoint i8* %fixup_alt_jump.9.ph to i64
  %425 = sub i64 %424, %403
  %426 = getelementptr inbounds i8* %413, i64 %425
  br label %427

; <label>:427                                     ; preds = %417, %423
  %fixup_alt_jump.10 = phi i8* [ %426, %423 ], [ null, %417 ]
  %428 = icmp eq i8* %laststart.9.ph, null
  br i1 %428, label %.outer264, label %429

; <label>:429                                     ; preds = %427
  %430 = ptrtoint i8* %laststart.9.ph to i64
  %431 = sub i64 %430, %403
  %432 = getelementptr inbounds i8* %413, i64 %431
  br label %.outer264

; <label>:433                                     ; preds = %402
  %434 = icmp eq i8* %b.5.ph, %laststart.9.ph
  %.pre1635 = getelementptr inbounds i8* %b.5.ph, i64 3
  br i1 %434, label %insert_op1.exit184, label %.lr.ph.i181

.lr.ph.i181:                                      ; preds = %433, %.lr.ph.i181
  %pto.02.i182 = phi i8* [ %437, %.lr.ph.i181 ], [ %.pre1635, %433 ]
  %pfrom.01.i183 = phi i8* [ %435, %.lr.ph.i181 ], [ %b.5.ph, %433 ]
  %435 = getelementptr inbounds i8* %pfrom.01.i183, i64 -1
  %436 = load i8* %435, align 1, !tbaa !12
  %437 = getelementptr inbounds i8* %pto.02.i182, i64 -1
  store i8 %436, i8* %437, align 1, !tbaa !12
  %438 = icmp eq i8* %435, %laststart.9.ph
  br i1 %438, label %insert_op1.exit184, label %.lr.ph.i181

insert_op1.exit184:                               ; preds = %.lr.ph.i181, %433
  store i8 19, i8* %laststart.9.ph, align 1, !tbaa !12
  %439 = getelementptr inbounds i8* %laststart.9.ph, i64 1
  store i8 3, i8* %439, align 1, !tbaa !12
  %440 = getelementptr inbounds i8* %laststart.9.ph, i64 2
  store i8 0, i8* %440, align 1, !tbaa !12
  br label %.backedge367

; <label>:441                                     ; preds = %.outer283, %454
  %442 = ptrtoint i8* %.pre1598 to i64
  %443 = sub i64 %474, %442
  %444 = add nsw i64 %443, 1
  %445 = load i64* %14, align 8, !tbaa !22
  %446 = icmp ugt i64 %444, %445
  br i1 %446, label %447, label %479

; <label>:447                                     ; preds = %441
  %448 = icmp eq i64 %445, 65536
  br i1 %448, label %.loopexit, label %449

; <label>:449                                     ; preds = %447
  %450 = shl i64 %445, 1
  %451 = icmp ugt i64 %450, 65536
  %.93 = select i1 %451, i64 65536, i64 %450
  store i64 %.93, i64* %14, align 8, !tbaa !22
  %452 = tail call i8* @realloc(i8* %.pre1598, i64 %.93) #7
  store i8* %452, i8** %17, align 8, !tbaa !10
  %453 = icmp eq i8* %452, null
  br i1 %453, label %.loopexit, label %454

; <label>:454                                     ; preds = %449
  %455 = icmp eq i8* %.pre1598, %452
  br i1 %455, label %441, label %456

; <label>:456                                     ; preds = %454
  %457 = getelementptr inbounds i8* %452, i64 %443
  %458 = ptrtoint i8* %begalt.6.ph to i64
  %459 = sub i64 %458, %442
  %460 = getelementptr inbounds i8* %452, i64 %459
  %461 = icmp eq i8* %fixup_alt_jump.11.ph, null
  br i1 %461, label %466, label %462

; <label>:462                                     ; preds = %456
  %463 = ptrtoint i8* %fixup_alt_jump.11.ph to i64
  %464 = sub i64 %463, %442
  %465 = getelementptr inbounds i8* %452, i64 %464
  br label %466

; <label>:466                                     ; preds = %456, %462
  %fixup_alt_jump.12 = phi i8* [ %465, %462 ], [ null, %456 ]
  %467 = icmp eq i8* %laststart.11.ph, null
  br i1 %467, label %472, label %468

; <label>:468                                     ; preds = %466
  %469 = ptrtoint i8* %laststart.11.ph to i64
  %470 = sub i64 %469, %442
  %471 = getelementptr inbounds i8* %452, i64 %470
  br label %472

; <label>:472                                     ; preds = %466, %468
  %laststart.12 = phi i8* [ %471, %468 ], [ null, %466 ]
  %473 = icmp eq i8* %pending_exact.6.ph, null
  br i1 %473, label %.outer283, label %475

.outer283:                                        ; preds = %472, %475, %.preheader280
  %.pre1598 = phi i8* [ %.pre1598.pre, %.preheader280 ], [ %452, %475 ], [ %452, %472 ]
  %fixup_alt_jump.11.ph = phi i8* [ %fixup_alt_jump.01118, %.preheader280 ], [ %fixup_alt_jump.12, %475 ], [ %fixup_alt_jump.12, %472 ]
  %begalt.6.ph = phi i8* [ %begalt.01123, %.preheader280 ], [ %460, %475 ], [ %460, %472 ]
  %laststart.11.ph = phi i8* [ %b.01147, %.preheader280 ], [ %laststart.12, %475 ], [ %laststart.12, %472 ]
  %pending_exact.6.ph = phi i8* [ %pending_exact.01132, %.preheader280 ], [ %478, %475 ], [ null, %472 ]
  %b.6.ph = phi i8* [ %b.01147, %.preheader280 ], [ %457, %475 ], [ %457, %472 ]
  %474 = ptrtoint i8* %b.6.ph to i64
  br label %441

; <label>:475                                     ; preds = %472
  %476 = ptrtoint i8* %pending_exact.6.ph to i64
  %477 = sub i64 %476, %442
  %478 = getelementptr inbounds i8* %452, i64 %477
  br label %.outer283

; <label>:479                                     ; preds = %441
  %480 = getelementptr inbounds i8* %b.6.ph, i64 1
  store i8 3, i8* %b.6.ph, align 1, !tbaa !12
  br label %.backedge367

; <label>:481                                     ; preds = %85
  %482 = icmp eq i8* %79, %1
  br i1 %482, label %483, label %.preheader297

.preheader297:                                    ; preds = %481
  %.pre1596.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer300

; <label>:483                                     ; preds = %481
  %484 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %484) #8
  br label %.loopexit

; <label>:485                                     ; preds = %.outer300, %498
  %486 = ptrtoint i8* %.pre1596 to i64
  %487 = sub i64 %518, %486
  %488 = add nsw i64 %487, 34
  %489 = load i64* %14, align 8, !tbaa !22
  %490 = icmp ugt i64 %488, %489
  br i1 %490, label %491, label %.outer296

; <label>:491                                     ; preds = %485
  %492 = icmp eq i64 %489, 65536
  br i1 %492, label %.loopexit, label %493

; <label>:493                                     ; preds = %491
  %494 = shl i64 %489, 1
  %495 = icmp ugt i64 %494, 65536
  %.94 = select i1 %495, i64 65536, i64 %494
  store i64 %.94, i64* %14, align 8, !tbaa !22
  %496 = tail call i8* @realloc(i8* %.pre1596, i64 %.94) #7
  store i8* %496, i8** %17, align 8, !tbaa !10
  %497 = icmp eq i8* %496, null
  br i1 %497, label %.loopexit, label %498

; <label>:498                                     ; preds = %493
  %499 = icmp eq i8* %.pre1596, %496
  br i1 %499, label %485, label %500

; <label>:500                                     ; preds = %498
  %501 = getelementptr inbounds i8* %496, i64 %487
  %502 = ptrtoint i8* %begalt.7.ph to i64
  %503 = sub i64 %502, %486
  %504 = getelementptr inbounds i8* %496, i64 %503
  %505 = icmp eq i8* %fixup_alt_jump.13.ph, null
  br i1 %505, label %510, label %506

; <label>:506                                     ; preds = %500
  %507 = ptrtoint i8* %fixup_alt_jump.13.ph to i64
  %508 = sub i64 %507, %486
  %509 = getelementptr inbounds i8* %496, i64 %508
  br label %510

; <label>:510                                     ; preds = %500, %506
  %fixup_alt_jump.14 = phi i8* [ %509, %506 ], [ null, %500 ]
  %511 = icmp eq i8* %laststart.13.ph, null
  br i1 %511, label %516, label %512

; <label>:512                                     ; preds = %510
  %513 = ptrtoint i8* %laststart.13.ph to i64
  %514 = sub i64 %513, %486
  %515 = getelementptr inbounds i8* %496, i64 %514
  br label %516

; <label>:516                                     ; preds = %510, %512
  %laststart.14 = phi i8* [ %515, %512 ], [ null, %510 ]
  %517 = icmp eq i8* %pending_exact.7.ph, null
  br i1 %517, label %.outer300, label %519

.outer300:                                        ; preds = %516, %519, %.preheader297
  %.pre1596 = phi i8* [ %.pre1596.pre, %.preheader297 ], [ %496, %519 ], [ %496, %516 ]
  %fixup_alt_jump.13.ph = phi i8* [ %fixup_alt_jump.01118, %.preheader297 ], [ %fixup_alt_jump.14, %519 ], [ %fixup_alt_jump.14, %516 ]
  %begalt.7.ph = phi i8* [ %begalt.01123, %.preheader297 ], [ %504, %519 ], [ %504, %516 ]
  %laststart.13.ph = phi i8* [ %laststart.01128, %.preheader297 ], [ %laststart.14, %519 ], [ %laststart.14, %516 ]
  %pending_exact.7.ph = phi i8* [ %pending_exact.01132, %.preheader297 ], [ %522, %519 ], [ null, %516 ]
  %b.7.ph = phi i8* [ %b.01147, %.preheader297 ], [ %501, %519 ], [ %501, %516 ]
  %518 = ptrtoint i8* %b.7.ph to i64
  br label %485

; <label>:519                                     ; preds = %516
  %520 = ptrtoint i8* %pending_exact.7.ph to i64
  %521 = sub i64 %520, %486
  %522 = getelementptr inbounds i8* %496, i64 %521
  br label %.outer300

; <label>:523                                     ; preds = %.outer296, %536
  %524 = ptrtoint i8* %556 to i64
  %525 = sub i64 %557, %524
  %526 = add nsw i64 %525, 1
  %527 = load i64* %14, align 8, !tbaa !22
  %528 = icmp ugt i64 %526, %527
  br i1 %528, label %529, label %562

; <label>:529                                     ; preds = %523
  %530 = icmp eq i64 %527, 65536
  br i1 %530, label %.loopexit, label %531

; <label>:531                                     ; preds = %529
  %532 = shl i64 %527, 1
  %533 = icmp ugt i64 %532, 65536
  %.95 = select i1 %533, i64 65536, i64 %532
  store i64 %.95, i64* %14, align 8, !tbaa !22
  %534 = tail call i8* @realloc(i8* %556, i64 %.95) #7
  store i8* %534, i8** %17, align 8, !tbaa !10
  %535 = icmp eq i8* %534, null
  br i1 %535, label %.loopexit, label %536

; <label>:536                                     ; preds = %531
  %537 = icmp eq i8* %556, %534
  br i1 %537, label %523, label %538

; <label>:538                                     ; preds = %536
  %539 = getelementptr inbounds i8* %534, i64 %525
  %540 = ptrtoint i8* %begalt.8.ph to i64
  %541 = sub i64 %540, %524
  %542 = getelementptr inbounds i8* %534, i64 %541
  %543 = icmp eq i8* %fixup_alt_jump.15.ph, null
  br i1 %543, label %548, label %544

; <label>:544                                     ; preds = %538
  %545 = ptrtoint i8* %fixup_alt_jump.15.ph to i64
  %546 = sub i64 %545, %524
  %547 = getelementptr inbounds i8* %534, i64 %546
  br label %548

; <label>:548                                     ; preds = %538, %544
  %fixup_alt_jump.16 = phi i8* [ %547, %544 ], [ null, %538 ]
  %549 = icmp eq i8* %laststart.15.ph, null
  br i1 %549, label %554, label %550

; <label>:550                                     ; preds = %548
  %551 = ptrtoint i8* %laststart.15.ph to i64
  %552 = sub i64 %551, %524
  %553 = getelementptr inbounds i8* %534, i64 %552
  br label %554

; <label>:554                                     ; preds = %548, %550
  %laststart.16 = phi i8* [ %553, %550 ], [ null, %548 ]
  %555 = icmp eq i8* %pending_exact.8.ph, null
  br i1 %555, label %.outer296, label %558

.outer296:                                        ; preds = %554, %558, %485
  %556 = phi i8* [ %.pre1596, %485 ], [ %534, %558 ], [ %534, %554 ]
  %fixup_alt_jump.15.ph = phi i8* [ %fixup_alt_jump.13.ph, %485 ], [ %fixup_alt_jump.16, %558 ], [ %fixup_alt_jump.16, %554 ]
  %begalt.8.ph = phi i8* [ %begalt.7.ph, %485 ], [ %542, %558 ], [ %542, %554 ]
  %laststart.15.ph = phi i8* [ %b.7.ph, %485 ], [ %laststart.16, %558 ], [ %laststart.16, %554 ]
  %pending_exact.8.ph = phi i8* [ %pending_exact.7.ph, %485 ], [ %561, %558 ], [ null, %554 ]
  %b.8.ph = phi i8* [ %b.7.ph, %485 ], [ %539, %558 ], [ %539, %554 ]
  %557 = ptrtoint i8* %b.8.ph to i64
  br label %523

; <label>:558                                     ; preds = %554
  %559 = ptrtoint i8* %pending_exact.8.ph to i64
  %560 = sub i64 %559, %524
  %561 = getelementptr inbounds i8* %534, i64 %560
  br label %.outer296

; <label>:562                                     ; preds = %523
  %563 = load i8* %79, align 1, !tbaa !12
  %564 = icmp eq i8 %563, 94
  %565 = select i1 %564, i8 5, i8 4
  %566 = getelementptr inbounds i8* %b.8.ph, i64 1
  store i8 %565, i8* %b.8.ph, align 1, !tbaa !12
  %567 = load i8** %p, align 8, !tbaa !13
  %568 = load i8* %567, align 1, !tbaa !12
  %569 = icmp eq i8 %568, 94
  br i1 %569, label %570, label %572

; <label>:570                                     ; preds = %562
  %571 = getelementptr inbounds i8* %567, i64 1
  store i8* %571, i8** %p, align 8, !tbaa !13
  br label %572

; <label>:572                                     ; preds = %570, %562
  %573 = phi i8* [ %571, %570 ], [ %567, %562 ]
  %.pre1597.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer292

.outer292:                                        ; preds = %606, %608, %572
  %.pre1597 = phi i8* [ %.pre1597.pre, %572 ], [ %586, %608 ], [ %586, %606 ]
  %fixup_alt_jump.17.ph = phi i8* [ %fixup_alt_jump.15.ph, %572 ], [ %fixup_alt_jump.18, %608 ], [ %fixup_alt_jump.18, %606 ]
  %begalt.9.ph = phi i8* [ %begalt.8.ph, %572 ], [ %594, %608 ], [ %594, %606 ]
  %laststart.17.ph = phi i8* [ %laststart.15.ph, %572 ], [ %laststart.18, %608 ], [ %laststart.18, %606 ]
  %pending_exact.9.ph = phi i8* [ %pending_exact.8.ph, %572 ], [ %611, %608 ], [ null, %606 ]
  %b.9.ph = phi i8* [ %566, %572 ], [ %591, %608 ], [ %591, %606 ]
  %574 = ptrtoint i8* %b.9.ph to i64
  br label %575

; <label>:575                                     ; preds = %.outer292, %588
  %576 = ptrtoint i8* %.pre1597 to i64
  %577 = sub i64 %574, %576
  %578 = add nsw i64 %577, 1
  %579 = load i64* %14, align 8, !tbaa !22
  %580 = icmp ugt i64 %578, %579
  br i1 %580, label %581, label %612

; <label>:581                                     ; preds = %575
  %582 = icmp eq i64 %579, 65536
  br i1 %582, label %.loopexit, label %583

; <label>:583                                     ; preds = %581
  %584 = shl i64 %579, 1
  %585 = icmp ugt i64 %584, 65536
  %.96 = select i1 %585, i64 65536, i64 %584
  store i64 %.96, i64* %14, align 8, !tbaa !22
  %586 = tail call i8* @realloc(i8* %.pre1597, i64 %.96) #7
  store i8* %586, i8** %17, align 8, !tbaa !10
  %587 = icmp eq i8* %586, null
  br i1 %587, label %.loopexit, label %588

; <label>:588                                     ; preds = %583
  %589 = icmp eq i8* %.pre1597, %586
  br i1 %589, label %575, label %590

; <label>:590                                     ; preds = %588
  %591 = getelementptr inbounds i8* %586, i64 %577
  %592 = ptrtoint i8* %begalt.9.ph to i64
  %593 = sub i64 %592, %576
  %594 = getelementptr inbounds i8* %586, i64 %593
  %595 = icmp eq i8* %fixup_alt_jump.17.ph, null
  br i1 %595, label %600, label %596

; <label>:596                                     ; preds = %590
  %597 = ptrtoint i8* %fixup_alt_jump.17.ph to i64
  %598 = sub i64 %597, %576
  %599 = getelementptr inbounds i8* %586, i64 %598
  br label %600

; <label>:600                                     ; preds = %590, %596
  %fixup_alt_jump.18 = phi i8* [ %599, %596 ], [ null, %590 ]
  %601 = icmp eq i8* %laststart.17.ph, null
  br i1 %601, label %606, label %602

; <label>:602                                     ; preds = %600
  %603 = ptrtoint i8* %laststart.17.ph to i64
  %604 = sub i64 %603, %576
  %605 = getelementptr inbounds i8* %586, i64 %604
  br label %606

; <label>:606                                     ; preds = %600, %602
  %laststart.18 = phi i8* [ %605, %602 ], [ null, %600 ]
  %607 = icmp eq i8* %pending_exact.9.ph, null
  br i1 %607, label %.outer292, label %608

; <label>:608                                     ; preds = %606
  %609 = ptrtoint i8* %pending_exact.9.ph to i64
  %610 = sub i64 %609, %576
  %611 = getelementptr inbounds i8* %586, i64 %610
  br label %.outer292

; <label>:612                                     ; preds = %575
  %613 = getelementptr inbounds i8* %b.9.ph, i64 1
  store i8 32, i8* %b.9.ph, align 1, !tbaa !12
  %614 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %613, i1 false)
  %615 = tail call i8* @__memset_chk(i8* %613, i32 0, i64 32, i64 %614) #7
  %616 = getelementptr inbounds i8* %b.9.ph, i64 -1
  %617 = load i8* %616, align 1, !tbaa !12
  %618 = icmp ne i8 %617, 5
  %or.cond99 = or i1 %55, %618
  br i1 %or.cond99, label %.preheader285, label %619

; <label>:619                                     ; preds = %612
  %620 = getelementptr inbounds i8* %b.9.ph, i64 2
  %621 = load i8* %620, align 1, !tbaa !12
  %622 = or i8 %621, 4
  store i8 %622, i8* %620, align 1, !tbaa !12
  br label %.preheader285

.preheader285:                                    ; preds = %619, %612
  %623 = load i8** %p, align 8, !tbaa !13
  %624 = icmp eq i8* %623, %1
  br i1 %624, label %.outer287._crit_edge, label %.lr.ph1091.lr.ph

.lr.ph1091.lr.ph:                                 ; preds = %.preheader285
  %625 = getelementptr inbounds i8* %b.9.ph, i64 12
  %626 = getelementptr inbounds i8* %b.9.ph, i64 8
  br label %.lr.ph1091

.lr.ph1091:                                       ; preds = %.lr.ph1091.lr.ph, %.outer287.backedge
  %627 = phi i8* [ %623, %.lr.ph1091.lr.ph ], [ %951, %.outer287.backedge ]
  %had_char_class.0.ph1106 = phi i8 [ 0, %.lr.ph1091.lr.ph ], [ %had_char_class.0.ph.be, %.outer287.backedge ]
  %628 = icmp ne i8 %had_char_class.0.ph1106, 0
  br label %630

.outer287._crit_edge:                             ; preds = %.preheader285, %.outer287.backedge, %.backedge288
  %629 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %629) #8
  br label %.loopexit

; <label>:630                                     ; preds = %.lr.ph1091, %.backedge288
  %631 = phi i8* [ %627, %.lr.ph1091 ], [ %661, %.backedge288 ]
  %632 = getelementptr inbounds i8* %631, i64 1
  store i8* %632, i8** %p, align 8, !tbaa !13
  %633 = load i8* %631, align 1, !tbaa !12
  br i1 %31, label %634, label %638

; <label>:634                                     ; preds = %630
  %635 = zext i8 %633 to i64
  %636 = getelementptr inbounds i8* %3, i64 %635
  %637 = load i8* %636, align 1, !tbaa !12
  br label %638

; <label>:638                                     ; preds = %630, %634
  %c.4 = phi i8 [ %637, %634 ], [ %633, %630 ]
  %639 = icmp eq i8 %c.4, 92
  %or.cond101 = and i1 %57, %639
  br i1 %or.cond101, label %640, label %663

; <label>:640                                     ; preds = %638
  %641 = icmp eq i8* %632, %1
  br i1 %641, label %642, label %644

; <label>:642                                     ; preds = %640
  %643 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %643) #8
  br label %.loopexit

; <label>:644                                     ; preds = %640
  %645 = getelementptr inbounds i8* %631, i64 2
  store i8* %645, i8** %p, align 8, !tbaa !13
  %646 = load i8* %632, align 1, !tbaa !12
  br i1 %31, label %647, label %651

; <label>:647                                     ; preds = %644
  %648 = zext i8 %646 to i64
  %649 = getelementptr inbounds i8* %3, i64 %648
  %650 = load i8* %649, align 1, !tbaa !12
  br label %651

; <label>:651                                     ; preds = %644, %647
  %c1.1 = phi i8 [ %650, %647 ], [ %646, %644 ]
  %652 = and i8 %c1.1, 7
  %653 = zext i8 %652 to i32
  %654 = shl i32 1, %653
  %div68 = lshr i8 %c1.1, 3
  %655 = zext i8 %div68 to i64
  %.sum69 = add nuw nsw i64 %655, 1
  %656 = getelementptr inbounds i8* %b.9.ph, i64 %.sum69
  %657 = load i8* %656, align 1, !tbaa !12
  %658 = zext i8 %657 to i32
  %659 = or i32 %654, %658
  %660 = trunc i32 %659 to i8
  store i8 %660, i8* %656, align 1, !tbaa !12
  br label %.backedge288

.backedge288:                                     ; preds = %651, %705, %693
  %661 = load i8** %p, align 8, !tbaa !13
  %662 = icmp eq i8* %661, %1
  br i1 %662, label %.outer287._crit_edge, label %630

; <label>:663                                     ; preds = %638
  %664 = icmp eq i8 %c.4, 93
  br i1 %664, label %665, label %667

; <label>:665                                     ; preds = %663
  %666 = icmp eq i8* %631, %573
  br i1 %666, label %.thread209, label %thread-pre-split

; <label>:667                                     ; preds = %663
  %668 = icmp eq i8 %c.4, 45
  %or.cond103 = and i1 %628, %668
  br i1 %or.cond103, label %669, label %674

; <label>:669                                     ; preds = %667
  %670 = load i8* %632, align 1, !tbaa !12
  %671 = icmp eq i8 %670, 93
  br i1 %671, label %674, label %672

; <label>:672                                     ; preds = %669
  %673 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %673) #8
  br label %.loopexit

; <label>:674                                     ; preds = %667, %669
  br i1 %668, label %675, label %.thread209

; <label>:675                                     ; preds = %674
  %676 = getelementptr inbounds i8* %631, i64 -1
  %677 = icmp ult i8* %676, %pattern
  br i1 %677, label %681, label %678

; <label>:678                                     ; preds = %675
  %679 = load i8* %676, align 1, !tbaa !12
  %680 = icmp eq i8 %679, 91
  br i1 %680, label %.thread209, label %681

; <label>:681                                     ; preds = %675, %678
  %682 = getelementptr inbounds i8* %631, i64 -2
  %683 = icmp ult i8* %682, %pattern
  br i1 %683, label %690, label %684

; <label>:684                                     ; preds = %681
  %685 = load i8* %682, align 1, !tbaa !12
  %686 = icmp eq i8 %685, 91
  br i1 %686, label %687, label %690

; <label>:687                                     ; preds = %684
  %688 = load i8* %676, align 1, !tbaa !12
  %689 = icmp eq i8 %688, 94
  br i1 %689, label %.thread209, label %690

; <label>:690                                     ; preds = %681, %687, %684
  %691 = load i8* %632, align 1, !tbaa !12
  %692 = icmp eq i8 %691, 93
  br i1 %692, label %.thread209.thread, label %693

; <label>:693                                     ; preds = %690
  %694 = call fastcc i32 @compile_range(i8** %p, i8* %1, i8* %3, i64 %syntax, i8* %613) #8
  %695 = icmp eq i32 %694, 0
  br i1 %695, label %.backedge288, label %696

; <label>:696                                     ; preds = %693
  %697 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %697) #8
  br label %.loopexit

.thread209:                                       ; preds = %665, %687, %678, %674
  %.pr1649 = load i8* %632, align 1, !tbaa !12
  %698 = icmp eq i8 %.pr1649, 45
  br i1 %698, label %699, label %.thread209.thread

; <label>:699                                     ; preds = %.thread209
  %700 = getelementptr inbounds i8* %631, i64 2
  %701 = load i8* %700, align 1, !tbaa !12
  %702 = icmp eq i8 %701, 93
  br i1 %702, label %.thread209.thread, label %703

; <label>:703                                     ; preds = %699
  %704 = icmp eq i8* %632, %1
  br i1 %704, label %.loopexit, label %705

; <label>:705                                     ; preds = %703
  store i8* %700, i8** %p, align 8, !tbaa !13
  %706 = call fastcc i32 @compile_range(i8** %p, i8* %1, i8* %3, i64 %syntax, i8* %613) #8
  %707 = icmp eq i32 %706, 0
  br i1 %707, label %.backedge288, label %708

; <label>:708                                     ; preds = %705
  %709 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %709) #8
  br label %.loopexit

.thread209.thread:                                ; preds = %690, %699, %.thread209
  %710 = phi i8 [ 45, %699 ], [ %.pr1649, %.thread209 ], [ 93, %690 ]
  %711 = icmp eq i8 %c.4, 91
  %or.cond105 = and i1 %59, %711
  %712 = icmp eq i8 %710, 58
  %or.cond1665 = and i1 %or.cond105, %712
  br i1 %or.cond1665, label %713, label %953

; <label>:713                                     ; preds = %.thread209.thread
  %714 = icmp eq i8* %632, %1
  br i1 %714, label %.loopexit, label %715

; <label>:715                                     ; preds = %713
  %716 = getelementptr inbounds i8* %631, i64 2
  store i8* %716, i8** %p, align 8, !tbaa !13
  %717 = icmp eq i8* %716, %1
  br i1 %717, label %718, label %.lr.ph1095

; <label>:718                                     ; preds = %715
  %719 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %719) #8
  br label %.loopexit

; <label>:720                                     ; preds = %.lr.ph1095, %742
  %721 = phi i8* [ %740, %.lr.ph1095 ], [ %722, %742 ]
  %722 = getelementptr inbounds i8* %721, i64 1
  store i8* %722, i8** %p, align 8, !tbaa !13
  %723 = load i8* %721, align 1, !tbaa !12
  br i1 %31, label %724, label %728

; <label>:724                                     ; preds = %720
  %725 = zext i8 %723 to i64
  %726 = getelementptr inbounds i8* %3, i64 %725
  %727 = load i8* %726, align 1, !tbaa !12
  br label %728

; <label>:728                                     ; preds = %720, %724
  %c.5 = phi i8 [ %727, %724 ], [ %723, %720 ]
  %729 = icmp eq i8 %c.5, 58
  br i1 %729, label %730, label %734

; <label>:730                                     ; preds = %728
  %731 = load i8* %722, align 1, !tbaa !12
  %732 = icmp eq i8 %731, 93
  %733 = icmp eq i8* %722, %1
  %or.cond108 = or i1 %733, %732
  br i1 %or.cond108, label %747, label %735

; <label>:734                                     ; preds = %728
  %.old107 = icmp eq i8* %722, %1
  br i1 %.old107, label %744, label %735

; <label>:735                                     ; preds = %730, %734
  br i1 %741, label %.outer240, label %742

.outer240:                                        ; preds = %735
  %736 = add i8 %c1.2.ph1096, 1
  %737 = zext i8 %c1.2.ph1096 to i64
  %738 = getelementptr inbounds [7 x i8]* %str, i64 0, i64 %737
  store i8 %c.5, i8* %738, align 1, !tbaa !12
  %739 = icmp eq i8* %722, %1
  br i1 %739, label %.loopexit, label %.lr.ph1095

.lr.ph1095:                                       ; preds = %715, %.outer240
  %740 = phi i8* [ %722, %.outer240 ], [ %716, %715 ]
  %c1.2.ph1096 = phi i8 [ %736, %.outer240 ], [ 0, %715 ]
  %741 = icmp ult i8 %c1.2.ph1096, 6
  br label %720

; <label>:742                                     ; preds = %735
  store i8 0, i8* %60, align 1, !tbaa !12
  %743 = icmp eq i8* %722, %1
  br i1 %743, label %.loopexit, label %720

; <label>:744                                     ; preds = %734
  %745 = zext i8 %c1.2.ph1096 to i64
  %746 = getelementptr inbounds [7 x i8]* %str, i64 0, i64 %745
  store i8 0, i8* %746, align 1, !tbaa !12
  br label %942

; <label>:747                                     ; preds = %730
  %748 = zext i8 %c1.2.ph1096 to i64
  %749 = getelementptr inbounds [7 x i8]* %str, i64 0, i64 %748
  store i8 0, i8* %749, align 1, !tbaa !12
  %750 = load i8* %722, align 1, !tbaa !12
  %751 = icmp eq i8 %750, 93
  br i1 %751, label %752, label %942

; <label>:752                                     ; preds = %747
  %753 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([6 x i8]* @.str, i64 0, i64 0)) #7
  %754 = icmp eq i32 %753, 0
  %755 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([6 x i8]* @.str1, i64 0, i64 0)) #7
  %756 = icmp eq i32 %755, 0
  %757 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([6 x i8]* @.str2, i64 0, i64 0)) #7
  %758 = icmp eq i32 %757, 0
  %759 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([6 x i8]* @.str3, i64 0, i64 0)) #7
  %760 = icmp eq i32 %759, 0
  %761 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([6 x i8]* @.str4, i64 0, i64 0)) #7
  %762 = icmp eq i32 %761, 0
  %763 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([6 x i8]* @.str5, i64 0, i64 0)) #7
  %764 = icmp eq i32 %763, 0
  %765 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([6 x i8]* @.str6, i64 0, i64 0)) #7
  %766 = icmp eq i32 %765, 0
  %767 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([6 x i8]* @.str7, i64 0, i64 0)) #7
  %768 = icmp eq i32 %767, 0
  %769 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([6 x i8]* @.str8, i64 0, i64 0)) #7
  %770 = icmp eq i32 %769, 0
  %771 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([6 x i8]* @.str9, i64 0, i64 0)) #7
  %772 = icmp eq i32 %771, 0
  %773 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([6 x i8]* @.str10, i64 0, i64 0)) #7
  %774 = icmp eq i32 %773, 0
  %775 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([7 x i8]* @.str11, i64 0, i64 0)) #7
  %776 = icmp eq i32 %775, 0
  %brmerge217 = or i1 %756, %774
  %brmerge218 = or i1 %766, %brmerge217
  %brmerge219 = or i1 %762, %brmerge218
  %brmerge220 = or i1 %754, %brmerge219
  %brmerge221 = or i1 %776, %brmerge220
  %brmerge222 = or i1 %772, %brmerge221
  %brmerge223 = or i1 %768, %brmerge222
  %brmerge224 = or i1 %770, %brmerge223
  %brmerge225 = or i1 %764, %brmerge224
  %brmerge226 = or i1 %760, %brmerge225
  %brmerge227 = or i1 %758, %brmerge226
  br i1 %brmerge227, label %779, label %777

; <label>:777                                     ; preds = %752
  %778 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %778) #8
  br label %.loopexit

; <label>:779                                     ; preds = %752
  br i1 %733, label %.loopexit, label %780

; <label>:780                                     ; preds = %779
  %781 = getelementptr inbounds i8* %721, i64 2
  store i8* %781, i8** %p, align 8, !tbaa !13
  %782 = icmp eq i8* %781, %1
  br i1 %782, label %783, label %.preheader236

.preheader236:                                    ; preds = %780
  %brmerge = or i1 %766, %774
  %or.cond144 = and i1 %31, %brmerge
  br label %785

; <label>:783                                     ; preds = %780
  %784 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %784) #8
  br label %.loopexit

; <label>:785                                     ; preds = %941, %.preheader236
  %indvars.iv = phi i64 [ 0, %.preheader236 ], [ %indvars.iv.next, %941 ]
  br i1 %754, label %786, label %794

; <label>:786                                     ; preds = %785
  %787 = trunc i64 %indvars.iv to i32
  %isascii.i.i189 = icmp ult i32 %787, 128
  br i1 %isascii.i.i189, label %788, label %792

; <label>:788                                     ; preds = %786
  %789 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %indvars.iv
  %790 = load i32* %789, align 4, !tbaa !15
  %791 = and i32 %790, 1280
  br label %isalnum.exit

; <label>:792                                     ; preds = %786
  %793 = tail call i32 @__maskrune(i32 %787, i64 1280) #7
  br label %isalnum.exit

isalnum.exit:                                     ; preds = %788, %792
  %.sink.i.in.i190 = phi i32 [ %791, %788 ], [ %793, %792 ]
  %.sink.i.i191 = icmp eq i32 %.sink.i.in.i190, 0
  br i1 %.sink.i.i191, label %794, label %815

; <label>:794                                     ; preds = %isalnum.exit, %785
  br i1 %756, label %795, label %803

; <label>:795                                     ; preds = %794
  %796 = trunc i64 %indvars.iv to i32
  %isascii.i.i192 = icmp ult i32 %796, 128
  br i1 %isascii.i.i192, label %797, label %801

; <label>:797                                     ; preds = %795
  %798 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %indvars.iv
  %799 = load i32* %798, align 4, !tbaa !15
  %800 = and i32 %799, 256
  br label %isalpha.exit

; <label>:801                                     ; preds = %795
  %802 = tail call i32 @__maskrune(i32 %796, i64 256) #7
  br label %isalpha.exit

isalpha.exit:                                     ; preds = %797, %801
  %.sink.i.in.i193 = phi i32 [ %800, %797 ], [ %802, %801 ]
  %.sink.i.i194 = icmp eq i32 %.sink.i.in.i193, 0
  br i1 %.sink.i.i194, label %803, label %815

; <label>:803                                     ; preds = %isalpha.exit, %794
  br i1 %758, label %804, label %806

; <label>:804                                     ; preds = %803
  %805 = trunc i64 %indvars.iv to i32
  switch i32 %805, label %806 [
    i32 32, label %815
    i32 9, label %815
  ]

; <label>:806                                     ; preds = %804, %803
  br i1 %760, label %807, label %826

; <label>:807                                     ; preds = %806
  %808 = trunc i64 %indvars.iv to i32
  %isascii.i.i195 = icmp ult i32 %808, 128
  br i1 %isascii.i.i195, label %809, label %813

; <label>:809                                     ; preds = %807
  %810 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %indvars.iv
  %811 = load i32* %810, align 4, !tbaa !15
  %812 = and i32 %811, 512
  br label %iscntrl.exit

; <label>:813                                     ; preds = %807
  %814 = tail call i32 @__maskrune(i32 %808, i64 512) #7
  br label %iscntrl.exit

iscntrl.exit:                                     ; preds = %809, %813
  %.sink.i.in.i196 = phi i32 [ %812, %809 ], [ %814, %813 ]
  %.sink.i.i197 = icmp eq i32 %.sink.i.in.i196, 0
  br i1 %.sink.i.i197, label %826, label %815

; <label>:815                                     ; preds = %isalnum.exit, %isalpha.exit, %iscntrl.exit, %804, %804
  %.pre-phi1633 = phi i32 [ %787, %isalnum.exit ], [ %796, %isalpha.exit ], [ %808, %iscntrl.exit ], [ %805, %804 ], [ %805, %804 ]
  %816 = and i32 %.pre-phi1633, 7
  %817 = shl i32 1, %816
  %818 = lshr i32 %.pre-phi1633, 3
  %819 = and i32 %818, 31
  %820 = zext i32 %819 to i64
  %.sum65 = add nuw nsw i64 %820, 1
  %821 = getelementptr inbounds i8* %b.9.ph, i64 %.sum65
  %822 = load i8* %821, align 1, !tbaa !12
  %823 = zext i8 %822 to i32
  %824 = or i32 %823, %817
  %825 = trunc i32 %824 to i8
  store i8 %825, i8* %821, align 1, !tbaa !12
  br label %826

; <label>:826                                     ; preds = %iscntrl.exit, %815, %806
  %827 = add i64 %indvars.iv, 4294967248
  %828 = trunc i64 %827 to i32
  %isdigit64 = icmp ult i32 %828, 10
  %or.cond = and i1 %762, %isdigit64
  br i1 %or.cond, label %._crit_edge1634, label %829

._crit_edge1634:                                  ; preds = %826
  %.pre1637 = trunc i64 %indvars.iv to i32
  br label %863

; <label>:829                                     ; preds = %826
  br i1 %764, label %830, label %845

; <label>:830                                     ; preds = %829
  %831 = trunc i64 %indvars.iv to i32
  %isascii.i.i198 = icmp ult i32 %831, 128
  br i1 %isascii.i.i198, label %832, label %836

; <label>:832                                     ; preds = %830
  %833 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %indvars.iv
  %834 = load i32* %833, align 4, !tbaa !15
  %835 = and i32 %834, 262144
  br label %isprint.exit201

; <label>:836                                     ; preds = %830
  %837 = tail call i32 @__maskrune(i32 %831, i64 262144) #7
  br label %isprint.exit201

isprint.exit201:                                  ; preds = %832, %836
  %.sink.i.in.i199 = phi i32 [ %835, %832 ], [ %837, %836 ]
  %.sink.i.i200 = icmp eq i32 %.sink.i.in.i199, 0
  br i1 %.sink.i.i200, label %845, label %838

; <label>:838                                     ; preds = %isprint.exit201
  br i1 %isascii.i.i198, label %839, label %843

; <label>:839                                     ; preds = %838
  %840 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %indvars.iv
  %841 = load i32* %840, align 4, !tbaa !15
  %842 = and i32 %841, 16384
  br label %isspace.exit205

; <label>:843                                     ; preds = %838
  %844 = tail call i32 @__maskrune(i32 %831, i64 16384) #7
  br label %isspace.exit205

isspace.exit205:                                  ; preds = %839, %843
  %.sink.i.in.i203 = phi i32 [ %842, %839 ], [ %844, %843 ]
  %.sink.i.i204 = icmp eq i32 %.sink.i.in.i203, 0
  br i1 %.sink.i.i204, label %863, label %845

; <label>:845                                     ; preds = %isspace.exit205, %isprint.exit201, %829
  br i1 %766, label %846, label %854

; <label>:846                                     ; preds = %845
  %847 = trunc i64 %indvars.iv to i32
  %isascii.i.i185 = icmp ult i32 %847, 128
  br i1 %isascii.i.i185, label %848, label %852

; <label>:848                                     ; preds = %846
  %849 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %indvars.iv
  %850 = load i32* %849, align 4, !tbaa !15
  %851 = and i32 %850, 4096
  br label %islower.exit188

; <label>:852                                     ; preds = %846
  %853 = tail call i32 @__maskrune(i32 %847, i64 4096) #7
  br label %islower.exit188

islower.exit188:                                  ; preds = %848, %852
  %.sink.i.in.i186 = phi i32 [ %851, %848 ], [ %853, %852 ]
  %.sink.i.i187 = icmp eq i32 %.sink.i.in.i186, 0
  br i1 %.sink.i.i187, label %854, label %863

; <label>:854                                     ; preds = %islower.exit188, %845
  br i1 %768, label %855, label %874

; <label>:855                                     ; preds = %854
  %856 = trunc i64 %indvars.iv to i32
  %isascii.i.i178 = icmp ult i32 %856, 128
  br i1 %isascii.i.i178, label %857, label %861

; <label>:857                                     ; preds = %855
  %858 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %indvars.iv
  %859 = load i32* %858, align 4, !tbaa !15
  %860 = and i32 %859, 262144
  br label %isprint.exit

; <label>:861                                     ; preds = %855
  %862 = tail call i32 @__maskrune(i32 %856, i64 262144) #7
  br label %isprint.exit

isprint.exit:                                     ; preds = %857, %861
  %.sink.i.in.i179 = phi i32 [ %860, %857 ], [ %862, %861 ]
  %.sink.i.i180 = icmp eq i32 %.sink.i.in.i179, 0
  br i1 %.sink.i.i180, label %874, label %863

; <label>:863                                     ; preds = %._crit_edge1634, %isspace.exit205, %islower.exit188, %isprint.exit
  %.pre-phi1638 = phi i32 [ %.pre1637, %._crit_edge1634 ], [ %831, %isspace.exit205 ], [ %847, %islower.exit188 ], [ %856, %isprint.exit ]
  %864 = and i32 %.pre-phi1638, 7
  %865 = shl i32 1, %864
  %866 = lshr i32 %.pre-phi1638, 3
  %867 = and i32 %866, 31
  %868 = zext i32 %867 to i64
  %.sum62 = add nuw nsw i64 %868, 1
  %869 = getelementptr inbounds i8* %b.9.ph, i64 %.sum62
  %870 = load i8* %869, align 1, !tbaa !12
  %871 = zext i8 %870 to i32
  %872 = or i32 %871, %865
  %873 = trunc i32 %872 to i8
  store i8 %873, i8* %869, align 1, !tbaa !12
  br label %874

; <label>:874                                     ; preds = %isprint.exit, %863, %854
  br i1 %770, label %875, label %883

; <label>:875                                     ; preds = %874
  %876 = trunc i64 %indvars.iv to i32
  %isascii.i.i171 = icmp ult i32 %876, 128
  br i1 %isascii.i.i171, label %877, label %881

; <label>:877                                     ; preds = %875
  %878 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %indvars.iv
  %879 = load i32* %878, align 4, !tbaa !15
  %880 = and i32 %879, 8192
  br label %ispunct.exit

; <label>:881                                     ; preds = %875
  %882 = tail call i32 @__maskrune(i32 %876, i64 8192) #7
  br label %ispunct.exit

ispunct.exit:                                     ; preds = %877, %881
  %.sink.i.in.i172 = phi i32 [ %880, %877 ], [ %882, %881 ]
  %.sink.i.i173 = icmp eq i32 %.sink.i.in.i172, 0
  br i1 %.sink.i.i173, label %883, label %905

; <label>:883                                     ; preds = %ispunct.exit, %874
  br i1 %772, label %884, label %892

; <label>:884                                     ; preds = %883
  %885 = trunc i64 %indvars.iv to i32
  %isascii.i.i168 = icmp ult i32 %885, 128
  br i1 %isascii.i.i168, label %886, label %890

; <label>:886                                     ; preds = %884
  %887 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %indvars.iv
  %888 = load i32* %887, align 4, !tbaa !15
  %889 = and i32 %888, 16384
  br label %isspace.exit

; <label>:890                                     ; preds = %884
  %891 = tail call i32 @__maskrune(i32 %885, i64 16384) #7
  br label %isspace.exit

isspace.exit:                                     ; preds = %886, %890
  %.sink.i.in.i169 = phi i32 [ %889, %886 ], [ %891, %890 ]
  %.sink.i.i170 = icmp eq i32 %.sink.i.in.i169, 0
  br i1 %.sink.i.i170, label %892, label %905

; <label>:892                                     ; preds = %isspace.exit, %883
  br i1 %774, label %893, label %901

; <label>:893                                     ; preds = %892
  %894 = trunc i64 %indvars.iv to i32
  %isascii.i.i164 = icmp ult i32 %894, 128
  br i1 %isascii.i.i164, label %895, label %899

; <label>:895                                     ; preds = %893
  %896 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %indvars.iv
  %897 = load i32* %896, align 4, !tbaa !15
  %898 = and i32 %897, 32768
  br label %isupper.exit167

; <label>:899                                     ; preds = %893
  %900 = tail call i32 @__maskrune(i32 %894, i64 32768) #7
  br label %isupper.exit167

isupper.exit167:                                  ; preds = %895, %899
  %.sink.i.in.i165 = phi i32 [ %898, %895 ], [ %900, %899 ]
  %.sink.i.i166 = icmp eq i32 %.sink.i.in.i165, 0
  br i1 %.sink.i.i166, label %901, label %905

; <label>:901                                     ; preds = %isupper.exit167, %892
  br i1 %776, label %isxdigit.exit, label %isxdigit.exit.thread

isxdigit.exit:                                    ; preds = %901
  %902 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %indvars.iv
  %903 = load i32* %902, align 4, !tbaa !15
  %.lobit.i = and i32 %903, 65536
  %904 = icmp eq i32 %.lobit.i, 0
  br i1 %904, label %isxdigit.exit.thread, label %isxdigit.exit._crit_edge

isxdigit.exit._crit_edge:                         ; preds = %isxdigit.exit
  %.pre1639 = trunc i64 %indvars.iv to i32
  br label %905

; <label>:905                                     ; preds = %isxdigit.exit._crit_edge, %ispunct.exit, %isspace.exit, %isupper.exit167
  %.pre-phi1640 = phi i32 [ %.pre1639, %isxdigit.exit._crit_edge ], [ %876, %ispunct.exit ], [ %885, %isspace.exit ], [ %894, %isupper.exit167 ]
  %906 = and i32 %.pre-phi1640, 7
  %907 = shl i32 1, %906
  %908 = lshr i32 %.pre-phi1640, 3
  %909 = and i32 %908, 31
  %910 = zext i32 %909 to i64
  %.sum61 = add nuw nsw i64 %910, 1
  %911 = getelementptr inbounds i8* %b.9.ph, i64 %.sum61
  %912 = load i8* %911, align 1, !tbaa !12
  %913 = zext i8 %912 to i32
  %914 = or i32 %913, %907
  %915 = trunc i32 %914 to i8
  store i8 %915, i8* %911, align 1, !tbaa !12
  br label %isxdigit.exit.thread

isxdigit.exit.thread:                             ; preds = %901, %isxdigit.exit, %905
  br i1 %or.cond144, label %916, label %941

; <label>:916                                     ; preds = %isxdigit.exit.thread
  %917 = trunc i64 %indvars.iv to i32
  %isascii.i.i160 = icmp ult i32 %917, 128
  br i1 %isascii.i.i160, label %918, label %922

; <label>:918                                     ; preds = %916
  %919 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %indvars.iv
  %920 = load i32* %919, align 4, !tbaa !15
  %921 = and i32 %920, 32768
  br label %isupper.exit

; <label>:922                                     ; preds = %916
  %923 = tail call i32 @__maskrune(i32 %917, i64 32768) #7
  br label %isupper.exit

isupper.exit:                                     ; preds = %918, %922
  %.sink.i.in.i161 = phi i32 [ %921, %918 ], [ %923, %922 ]
  %.sink.i.i162 = icmp eq i32 %.sink.i.in.i161, 0
  br i1 %.sink.i.i162, label %924, label %931

; <label>:924                                     ; preds = %isupper.exit
  br i1 %isascii.i.i160, label %925, label %929

; <label>:925                                     ; preds = %924
  %926 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %indvars.iv
  %927 = load i32* %926, align 4, !tbaa !15
  %928 = and i32 %927, 4096
  br label %islower.exit

; <label>:929                                     ; preds = %924
  %930 = tail call i32 @__maskrune(i32 %917, i64 4096) #7
  br label %islower.exit

islower.exit:                                     ; preds = %925, %929
  %.sink.i.in.i = phi i32 [ %928, %925 ], [ %930, %929 ]
  %.sink.i.i = icmp eq i32 %.sink.i.in.i, 0
  br i1 %.sink.i.i, label %941, label %931

; <label>:931                                     ; preds = %islower.exit, %isupper.exit
  %932 = and i32 %917, 7
  %933 = shl i32 1, %932
  %934 = lshr i64 %indvars.iv, 3
  %935 = and i64 %934, 31
  %.sum60 = add nuw nsw i64 %935, 1
  %936 = getelementptr inbounds i8* %b.9.ph, i64 %.sum60
  %937 = load i8* %936, align 1, !tbaa !12
  %938 = zext i8 %937 to i32
  %939 = or i32 %938, %933
  %940 = trunc i32 %939 to i8
  store i8 %940, i8* %936, align 1, !tbaa !12
  br label %941

; <label>:941                                     ; preds = %islower.exit, %isxdigit.exit.thread, %931
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 256
  br i1 %exitcond, label %.outer287.backedge, label %785

; <label>:942                                     ; preds = %744, %747
  %943 = icmp eq i8 %c1.2.ph1096, -1
  br i1 %943, label %946, label %.lr.ph1099

.lr.ph1099:                                       ; preds = %942
  %944 = zext i8 %c1.2.ph1096 to i64
  %945 = sub nsw i64 0, %944
  %scevgep1579 = getelementptr i8* %721, i64 %945
  store i8* %scevgep1579, i8** %p, align 8, !tbaa !13
  br label %946

; <label>:946                                     ; preds = %.lr.ph1099, %942
  %947 = load i8* %625, align 1, !tbaa !12
  %948 = or i8 %947, 8
  store i8 %948, i8* %625, align 1, !tbaa !12
  %949 = load i8* %626, align 1, !tbaa !12
  %950 = or i8 %949, 4
  store i8 %950, i8* %626, align 1, !tbaa !12
  br label %.outer287.backedge

.outer287.backedge:                               ; preds = %941, %946, %953
  %had_char_class.0.ph.be = phi i8 [ 0, %953 ], [ 0, %946 ], [ 1, %941 ]
  %951 = load i8** %p, align 8, !tbaa !13
  %952 = icmp eq i8* %951, %1
  br i1 %952, label %.outer287._crit_edge, label %.lr.ph1091

; <label>:953                                     ; preds = %.thread209.thread
  %954 = and i8 %c.4, 7
  %955 = zext i8 %954 to i32
  %956 = shl i32 1, %955
  %div = lshr i8 %c.4, 3
  %957 = zext i8 %div to i64
  %.sum59 = add nuw nsw i64 %957, 1
  %958 = getelementptr inbounds i8* %b.9.ph, i64 %.sum59
  %959 = load i8* %958, align 1, !tbaa !12
  %960 = zext i8 %959 to i32
  %961 = or i32 %960, %956
  %962 = trunc i32 %961 to i8
  store i8 %962, i8* %958, align 1, !tbaa !12
  br label %.outer287.backedge

thread-pre-split:                                 ; preds = %665
  %.pr = load i8* %b.9.ph, align 1, !tbaa !12
  %963 = icmp eq i8 %.pr, 0
  br i1 %963, label %.thread212, label %.lr.ph1109

.lr.ph1109:                                       ; preds = %thread-pre-split, %969
  %964 = phi i8 [ %970, %969 ], [ %.pr, %thread-pre-split ]
  %965 = zext i8 %964 to i64
  %966 = getelementptr inbounds i8* %b.9.ph, i64 %965
  %967 = load i8* %966, align 1, !tbaa !12
  %968 = icmp eq i8 %967, 0
  br i1 %968, label %969, label %.thread212

; <label>:969                                     ; preds = %.lr.ph1109
  %970 = add i8 %964, -1
  store i8 %970, i8* %b.9.ph, align 1, !tbaa !12
  %971 = icmp eq i8 %970, 0
  br i1 %971, label %.thread212, label %.lr.ph1109

.thread212:                                       ; preds = %.lr.ph1109, %969, %thread-pre-split
  %972 = phi i8 [ 0, %thread-pre-split ], [ %964, %.lr.ph1109 ], [ 0, %969 ]
  %973 = zext i8 %972 to i64
  %.sum66 = add nuw nsw i64 %973, 1
  %974 = getelementptr inbounds i8* %b.9.ph, i64 %.sum66
  br label %.backedge367

; <label>:975                                     ; preds = %85
  br i1 %42, label %group_in_compile_stack.exit.thread216, label %989

; <label>:976                                     ; preds = %85
  br i1 %42, label %group_in_compile_stack.exit.thread216, label %1086

; <label>:977                                     ; preds = %85
  br i1 %64, label %group_in_compile_stack.exit.thread216, label %1210

; <label>:978                                     ; preds = %85
  br i1 %43, label %group_in_compile_stack.exit.thread216, label %1210

; <label>:979                                     ; preds = %85
  br i1 %68, label %1313, label %group_in_compile_stack.exit.thread216

; <label>:980                                     ; preds = %85
  %981 = icmp eq i8* %79, %1
  br i1 %981, label %982, label %984

; <label>:982                                     ; preds = %980
  %983 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %983) #8
  br label %.loopexit

; <label>:984                                     ; preds = %980
  %985 = getelementptr inbounds i8* %78, i64 2
  store i8* %985, i8** %p, align 8, !tbaa !13
  %986 = load i8* %79, align 1, !tbaa !12
  %987 = zext i8 %986 to i32
  switch i32 %987, label %1961 [
    i32 40, label %988
    i32 41, label %1080
    i32 124, label %1209
    i32 123, label %1309
    i32 119, label %1575
    i32 87, label %1616
    i32 60, label %1657
    i32 62, label %1698
    i32 98, label %1739
    i32 66, label %1780
    i32 96, label %1821
    i32 39, label %1862
    i32 49, label %1903
    i32 50, label %1903
    i32 51, label %1903
    i32 52, label %1903
    i32 53, label %1903
    i32 54, label %1903
    i32 55, label %1903
    i32 56, label %1903
    i32 57, label %1903
    i32 43, label %1960
    i32 63, label %1960
  ]

; <label>:988                                     ; preds = %984
  br i1 %42, label %989, label %1961

; <label>:989                                     ; preds = %975, %988
  %990 = load i64* %13, align 8, !tbaa !17
  %991 = add i64 %990, 1
  store i64 %991, i64* %13, align 8, !tbaa !17
  %992 = add i32 %regnum.01114, 1
  %993 = lshr i64 %compile_stack.sroa.40.01143, 32
  %994 = trunc i64 %993 to i32
  %995 = trunc i64 %compile_stack.sroa.40.01143 to i32
  %996 = icmp eq i32 %994, %995
  br i1 %996, label %997, label %1008

; <label>:997                                     ; preds = %989
  %998 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  %999 = shl i64 %compile_stack.sroa.40.01143, 1
  %1000 = and i64 %999, 4294967294
  %1001 = mul nuw nsw i64 %1000, 40
  %1002 = tail call i8* @realloc(i8* %998, i64 %1001) #7
  %1003 = icmp eq i8* %1002, null
  br i1 %1003, label %.loopexit, label %1004

; <label>:1004                                    ; preds = %997
  %1005 = bitcast i8* %1002 to %struct.compile_stack_elt_t*
  %1006 = and i64 %compile_stack.sroa.40.01143, -4294967296
  %1007 = or i64 %1000, %1006
  br label %1008

; <label>:1008                                    ; preds = %1004, %989
  %compile_stack.sroa.0.1 = phi %struct.compile_stack_elt_t* [ %1005, %1004 ], [ %compile_stack.sroa.0.01137, %989 ]
  %compile_stack.sroa.40.1 = phi i64 [ %1007, %1004 ], [ %compile_stack.sroa.40.01143, %989 ]
  %1009 = load i8** %17, align 8, !tbaa !10
  %1010 = ptrtoint i8* %begalt.01123 to i64
  %1011 = ptrtoint i8* %1009 to i64
  %1012 = sub i64 %1010, %1011
  %1013 = lshr i64 %compile_stack.sroa.40.1, 32
  %1014 = getelementptr inbounds %struct.compile_stack_elt_t* %compile_stack.sroa.0.1, i64 %1013, i32 0
  store i64 %1012, i64* %1014, align 8, !tbaa !23
  %1015 = icmp eq i8* %fixup_alt_jump.01118, null
  br i1 %1015, label %1020, label %1016

; <label>:1016                                    ; preds = %1008
  %1017 = ptrtoint i8* %fixup_alt_jump.01118 to i64
  %1018 = add i64 %1017, 1
  %1019 = sub i64 %1018, %1011
  br label %1020

; <label>:1020                                    ; preds = %1008, %1016
  %1021 = phi i64 [ %1019, %1016 ], [ 0, %1008 ]
  %1022 = getelementptr inbounds %struct.compile_stack_elt_t* %compile_stack.sroa.0.1, i64 %1013, i32 1
  store i64 %1021, i64* %1022, align 8, !tbaa !25
  %1023 = ptrtoint i8* %b.01147 to i64
  %1024 = sub i64 %1023, %1011
  %1025 = getelementptr inbounds %struct.compile_stack_elt_t* %compile_stack.sroa.0.1, i64 %1013, i32 3
  store i64 %1024, i64* %1025, align 8, !tbaa !26
  %1026 = getelementptr inbounds %struct.compile_stack_elt_t* %compile_stack.sroa.0.1, i64 %1013, i32 4
  store i32 %992, i32* %1026, align 4, !tbaa !27
  %1027 = icmp ult i32 %992, 256
  br i1 %1027, label %1028, label %1073

; <label>:1028                                    ; preds = %1020
  %1029 = add i64 %1023, 2
  %1030 = sub i64 %1029, %1011
  %1031 = getelementptr inbounds %struct.compile_stack_elt_t* %compile_stack.sroa.0.1, i64 %1013, i32 2
  store i64 %1030, i64* %1031, align 8, !tbaa !28
  br label %.outer303

.outer303:                                        ; preds = %1062, %1064, %1028
  %1032 = phi i8* [ %1009, %1028 ], [ %1045, %1064 ], [ %1045, %1062 ]
  %fixup_alt_jump.19.ph = phi i8* [ %fixup_alt_jump.01118, %1028 ], [ %fixup_alt_jump.20, %1064 ], [ %fixup_alt_jump.20, %1062 ]
  %laststart.19.ph = phi i8* [ %laststart.01128, %1028 ], [ %laststart.20, %1064 ], [ %laststart.20, %1062 ]
  %pending_exact.10.ph = phi i8* [ %pending_exact.01132, %1028 ], [ %1067, %1064 ], [ null, %1062 ]
  %b.10.ph = phi i8* [ %b.01147, %1028 ], [ %1050, %1064 ], [ %1050, %1062 ]
  %1033 = ptrtoint i8* %b.10.ph to i64
  br label %1034

; <label>:1034                                    ; preds = %.outer303, %1047
  %1035 = ptrtoint i8* %1032 to i64
  %1036 = sub i64 %1033, %1035
  %1037 = add nsw i64 %1036, 3
  %1038 = load i64* %14, align 8, !tbaa !22
  %1039 = icmp ugt i64 %1037, %1038
  br i1 %1039, label %1040, label %1068

; <label>:1040                                    ; preds = %1034
  %1041 = icmp eq i64 %1038, 65536
  br i1 %1041, label %.loopexit, label %1042

; <label>:1042                                    ; preds = %1040
  %1043 = shl i64 %1038, 1
  %1044 = icmp ugt i64 %1043, 65536
  %.113 = select i1 %1044, i64 65536, i64 %1043
  store i64 %.113, i64* %14, align 8, !tbaa !22
  %1045 = tail call i8* @realloc(i8* %1032, i64 %.113) #7
  store i8* %1045, i8** %17, align 8, !tbaa !10
  %1046 = icmp eq i8* %1045, null
  br i1 %1046, label %.loopexit, label %1047

; <label>:1047                                    ; preds = %1042
  %1048 = icmp eq i8* %1032, %1045
  br i1 %1048, label %1034, label %1049

; <label>:1049                                    ; preds = %1047
  %1050 = getelementptr inbounds i8* %1045, i64 %1036
  %1051 = icmp eq i8* %fixup_alt_jump.19.ph, null
  br i1 %1051, label %1056, label %1052

; <label>:1052                                    ; preds = %1049
  %1053 = ptrtoint i8* %fixup_alt_jump.19.ph to i64
  %1054 = sub i64 %1053, %1035
  %1055 = getelementptr inbounds i8* %1045, i64 %1054
  br label %1056

; <label>:1056                                    ; preds = %1049, %1052
  %fixup_alt_jump.20 = phi i8* [ %1055, %1052 ], [ null, %1049 ]
  %1057 = icmp eq i8* %laststart.19.ph, null
  br i1 %1057, label %1062, label %1058

; <label>:1058                                    ; preds = %1056
  %1059 = ptrtoint i8* %laststart.19.ph to i64
  %1060 = sub i64 %1059, %1035
  %1061 = getelementptr inbounds i8* %1045, i64 %1060
  br label %1062

; <label>:1062                                    ; preds = %1056, %1058
  %laststart.20 = phi i8* [ %1061, %1058 ], [ null, %1056 ]
  %1063 = icmp eq i8* %pending_exact.10.ph, null
  br i1 %1063, label %.outer303, label %1064

; <label>:1064                                    ; preds = %1062
  %1065 = ptrtoint i8* %pending_exact.10.ph to i64
  %1066 = sub i64 %1065, %1035
  %1067 = getelementptr inbounds i8* %1045, i64 %1066
  br label %.outer303

; <label>:1068                                    ; preds = %1034
  %1069 = getelementptr inbounds i8* %b.10.ph, i64 1
  store i8 6, i8* %b.10.ph, align 1, !tbaa !12
  %1070 = trunc i32 %992 to i8
  %1071 = getelementptr inbounds i8* %b.10.ph, i64 2
  store i8 %1070, i8* %1069, align 1, !tbaa !12
  %1072 = getelementptr inbounds i8* %b.10.ph, i64 3
  store i8 0, i8* %1071, align 1, !tbaa !12
  br label %1073

; <label>:1073                                    ; preds = %1068, %1020
  %b.11 = phi i8* [ %1072, %1068 ], [ %b.01147, %1020 ]
  %1074 = shl nuw i64 %1013, 32
  %1075 = add i64 %1074, 4294967296
  %1076 = and i64 %compile_stack.sroa.40.1, 4294967295
  %1077 = or i64 %1075, %1076
  br label %.backedge367

.backedge367:                                     ; preds = %1073, %1307, %1614, %1655, %1696, %1737, %1778, %1819, %1860, %1901, %1957, %1204, %1158, %insert_op1.exit184, %.loopexit279, %2072, %.thread212, %479, %195, %138, %insert_op1.exit177, %insert_op2.exit148, %insert_op2.exit, %insert_op1.exit
  %regnum.0.be = phi i32 [ %regnum.01114, %2072 ], [ %regnum.01114, %insert_op1.exit177 ], [ %regnum.01114, %insert_op1.exit184 ], [ %regnum.01114, %.loopexit279 ], [ %regnum.01114, %1957 ], [ %regnum.01114, %1901 ], [ %regnum.01114, %1860 ], [ %regnum.01114, %1819 ], [ %regnum.01114, %1778 ], [ %regnum.01114, %1737 ], [ %regnum.01114, %1696 ], [ %regnum.01114, %1655 ], [ %regnum.01114, %1614 ], [ %regnum.01114, %1307 ], [ %regnum.01114, %1204 ], [ %regnum.01114, %1158 ], [ %992, %1073 ], [ %regnum.01114, %.thread212 ], [ %regnum.01114, %479 ], [ %regnum.01114, %195 ], [ %regnum.01114, %138 ], [ %regnum.01114, %insert_op2.exit148 ], [ %regnum.01114, %insert_op2.exit ], [ %regnum.01114, %insert_op1.exit ]
  %fixup_alt_jump.0.be = phi i8* [ %fixup_alt_jump.56.ph245, %2072 ], [ %fixup_alt_jump.7.ph269, %insert_op1.exit177 ], [ %fixup_alt_jump.9.ph, %insert_op1.exit184 ], [ %fixup_alt_jump.01118, %.loopexit279 ], [ %fixup_alt_jump.51.ph, %1957 ], [ %fixup_alt_jump.49.ph, %1901 ], [ %fixup_alt_jump.47.ph, %1860 ], [ %fixup_alt_jump.45.ph, %1819 ], [ %fixup_alt_jump.43.ph, %1778 ], [ %fixup_alt_jump.41.ph, %1737 ], [ %fixup_alt_jump.39.ph, %1696 ], [ %fixup_alt_jump.37.ph, %1655 ], [ %fixup_alt_jump.35.ph, %1614 ], [ %fixup_alt_jump.28.ph, %1307 ], [ %fixup_alt_jump.24.ph, %1204 ], [ %1159, %1158 ], [ null, %1073 ], [ %fixup_alt_jump.17.ph, %.thread212 ], [ %fixup_alt_jump.11.ph, %479 ], [ %fixup_alt_jump.3.ph, %195 ], [ %fixup_alt_jump.1.ph, %138 ], [ %fixup_alt_jump.32.ph, %insert_op2.exit148 ], [ %fixup_alt_jump.32.ph, %insert_op2.exit ], [ %fixup_alt_jump.30.ph, %insert_op1.exit ]
  %begalt.0.be = phi i8* [ %begalt.30.ph246, %2072 ], [ %begalt.4.ph270, %insert_op1.exit177 ], [ %begalt.5.ph, %insert_op1.exit184 ], [ %begalt.01123, %.loopexit279 ], [ %begalt.27.ph, %1957 ], [ %begalt.26.ph, %1901 ], [ %begalt.25.ph, %1860 ], [ %begalt.24.ph, %1819 ], [ %begalt.23.ph, %1778 ], [ %begalt.22.ph, %1737 ], [ %begalt.21.ph, %1696 ], [ %begalt.20.ph, %1655 ], [ %begalt.19.ph, %1614 ], [ %1308, %1307 ], [ %begalt.13.ph, %1204 ], [ %1152, %1158 ], [ %b.11, %1073 ], [ %begalt.9.ph, %.thread212 ], [ %begalt.6.ph, %479 ], [ %begalt.2.ph, %195 ], [ %begalt.1.ph, %138 ], [ %begalt.17.ph, %insert_op2.exit148 ], [ %begalt.17.ph, %insert_op2.exit ], [ %begalt.16.ph, %insert_op1.exit ]
  %laststart.0.be = phi i8* [ %laststart.57.ph247, %2072 ], [ %laststart.7.ph271, %insert_op1.exit177 ], [ %laststart.9.ph, %insert_op1.exit184 ], [ null, %.loopexit279 ], [ %laststart.52.ph, %1957 ], [ %laststart.50.ph, %1901 ], [ %laststart.48.ph, %1860 ], [ %laststart.46.ph, %1819 ], [ %laststart.44.ph, %1778 ], [ %laststart.42.ph, %1737 ], [ %laststart.40.ph, %1696 ], [ %laststart.38.ph, %1655 ], [ %laststart.36.ph, %1614 ], [ null, %1307 ], [ %laststart.24.ph, %1204 ], [ %1162, %1158 ], [ null, %1073 ], [ %laststart.17.ph, %.thread212 ], [ %laststart.11.ph, %479 ], [ %laststart.3.ph, %195 ], [ %laststart.1.ph, %138 ], [ %laststart.33.ph, %insert_op2.exit148 ], [ %laststart.33.ph, %insert_op2.exit ], [ %laststart.31.ph, %insert_op1.exit ]
  %pending_exact.0.be = phi i8* [ %pending_exact.29.ph248, %2072 ], [ null, %insert_op1.exit177 ], [ null, %insert_op1.exit184 ], [ %pending_exact.01132, %.loopexit279 ], [ %pending_exact.26.ph, %1957 ], [ %pending_exact.25.ph, %1901 ], [ %pending_exact.24.ph, %1860 ], [ %pending_exact.23.ph, %1819 ], [ %pending_exact.22.ph, %1778 ], [ %pending_exact.21.ph, %1737 ], [ %pending_exact.20.ph, %1696 ], [ %pending_exact.19.ph, %1655 ], [ %pending_exact.18.ph, %1614 ], [ null, %1307 ], [ null, %1204 ], [ null, %1158 ], [ null, %1073 ], [ %pending_exact.9.ph, %.thread212 ], [ %pending_exact.6.ph, %479 ], [ %pending_exact.2.ph, %195 ], [ %pending_exact.1.ph, %138 ], [ null, %insert_op2.exit148 ], [ null, %insert_op2.exit ], [ null, %insert_op1.exit ]
  %compile_stack.sroa.0.0.be = phi %struct.compile_stack_elt_t* [ %compile_stack.sroa.0.01137, %2072 ], [ %compile_stack.sroa.0.01137, %insert_op1.exit177 ], [ %compile_stack.sroa.0.01137, %insert_op1.exit184 ], [ %compile_stack.sroa.0.01137, %.loopexit279 ], [ %compile_stack.sroa.0.01137, %1957 ], [ %compile_stack.sroa.0.01137, %1901 ], [ %compile_stack.sroa.0.01137, %1860 ], [ %compile_stack.sroa.0.01137, %1819 ], [ %compile_stack.sroa.0.01137, %1778 ], [ %compile_stack.sroa.0.01137, %1737 ], [ %compile_stack.sroa.0.01137, %1696 ], [ %compile_stack.sroa.0.01137, %1655 ], [ %compile_stack.sroa.0.01137, %1614 ], [ %compile_stack.sroa.0.01137, %1307 ], [ %compile_stack.sroa.0.01137, %1204 ], [ %compile_stack.sroa.0.01137, %1158 ], [ %compile_stack.sroa.0.1, %1073 ], [ %compile_stack.sroa.0.01137, %.thread212 ], [ %compile_stack.sroa.0.01137, %479 ], [ %compile_stack.sroa.0.01137, %195 ], [ %compile_stack.sroa.0.01137, %138 ], [ %compile_stack.sroa.0.01137, %insert_op2.exit148 ], [ %compile_stack.sroa.0.01137, %insert_op2.exit ], [ %compile_stack.sroa.0.01137, %insert_op1.exit ]
  %compile_stack.sroa.40.0.be = phi i64 [ %compile_stack.sroa.40.01143, %2072 ], [ %compile_stack.sroa.40.01143, %insert_op1.exit177 ], [ %compile_stack.sroa.40.01143, %insert_op1.exit184 ], [ %compile_stack.sroa.40.01143, %.loopexit279 ], [ %compile_stack.sroa.40.01143, %1957 ], [ %compile_stack.sroa.40.01143, %1901 ], [ %compile_stack.sroa.40.01143, %1860 ], [ %compile_stack.sroa.40.01143, %1819 ], [ %compile_stack.sroa.40.01143, %1778 ], [ %compile_stack.sroa.40.01143, %1737 ], [ %compile_stack.sroa.40.01143, %1696 ], [ %compile_stack.sroa.40.01143, %1655 ], [ %compile_stack.sroa.40.01143, %1614 ], [ %compile_stack.sroa.40.01143, %1307 ], [ %1147, %1204 ], [ %1147, %1158 ], [ %1077, %1073 ], [ %compile_stack.sroa.40.01143, %.thread212 ], [ %compile_stack.sroa.40.01143, %479 ], [ %compile_stack.sroa.40.01143, %195 ], [ %compile_stack.sroa.40.01143, %138 ], [ %compile_stack.sroa.40.01143, %insert_op2.exit148 ], [ %compile_stack.sroa.40.01143, %insert_op2.exit ], [ %compile_stack.sroa.40.01143, %insert_op1.exit ]
  %b.0.be = phi i8* [ %2073, %2072 ], [ %383, %insert_op1.exit177 ], [ %.pre1635, %insert_op1.exit184 ], [ %b.01147, %.loopexit279 ], [ %1959, %1957 ], [ %1902, %1901 ], [ %1861, %1860 ], [ %1820, %1819 ], [ %1779, %1778 ], [ %1738, %1737 ], [ %1697, %1696 ], [ %1656, %1655 ], [ %1615, %1614 ], [ %1308, %1307 ], [ %1208, %1204 ], [ %b.13, %1158 ], [ %b.11, %1073 ], [ %974, %.thread212 ], [ %480, %479 ], [ %196, %195 ], [ %139, %138 ], [ %.pre1643, %insert_op2.exit148 ], [ %.pre1645, %insert_op2.exit ], [ %1449, %insert_op1.exit ]
  %1078 = load i8** %p, align 8, !tbaa !13
  %1079 = icmp eq i8* %1078, %1
  br i1 %1079, label %._crit_edge1154, label %77

; <label>:1080                                    ; preds = %984
  br i1 %42, label %1081, label %1961

; <label>:1081                                    ; preds = %1080
  %1082 = icmp ult i64 %compile_stack.sroa.40.01143, 4294967296
  br i1 %1082, label %1083, label %1086

; <label>:1083                                    ; preds = %1081
  br i1 %62, label %1084, label %1961

; <label>:1084                                    ; preds = %1083
  %1085 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %1085) #8
  br label %.loopexit

; <label>:1086                                    ; preds = %976, %1081
  %c.6 = phi i8 [ %986, %1081 ], [ %c.0, %976 ]
  %1087 = icmp eq i8* %fixup_alt_jump.01118, null
  br i1 %1087, label %1137, label %.preheader307

.preheader307:                                    ; preds = %1086
  %.pre1594.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer310

.outer310:                                        ; preds = %1120, %1122, %.preheader307
  %.pre1594 = phi i8* [ %.pre1594.pre, %.preheader307 ], [ %1100, %1122 ], [ %1100, %1120 ]
  %fixup_alt_jump.21.ph = phi i8* [ %fixup_alt_jump.01118, %.preheader307 ], [ %fixup_alt_jump.22, %1122 ], [ %fixup_alt_jump.22, %1120 ]
  %begalt.11.ph = phi i8* [ %begalt.01123, %.preheader307 ], [ %1108, %1122 ], [ %1108, %1120 ]
  %laststart.21.ph = phi i8* [ %laststart.01128, %.preheader307 ], [ %laststart.22, %1122 ], [ %laststart.22, %1120 ]
  %pending_exact.11.ph = phi i8* [ %pending_exact.01132, %.preheader307 ], [ %1125, %1122 ], [ null, %1120 ]
  %b.12.ph = phi i8* [ %b.01147, %.preheader307 ], [ %1105, %1122 ], [ %1105, %1120 ]
  %1088 = ptrtoint i8* %b.12.ph to i64
  br label %1089

; <label>:1089                                    ; preds = %.outer310, %1102
  %1090 = ptrtoint i8* %.pre1594 to i64
  %1091 = sub i64 %1088, %1090
  %1092 = add nsw i64 %1091, 1
  %1093 = load i64* %14, align 8, !tbaa !22
  %1094 = icmp ugt i64 %1092, %1093
  br i1 %1094, label %1095, label %1126

; <label>:1095                                    ; preds = %1089
  %1096 = icmp eq i64 %1093, 65536
  br i1 %1096, label %.loopexit, label %1097

; <label>:1097                                    ; preds = %1095
  %1098 = shl i64 %1093, 1
  %1099 = icmp ugt i64 %1098, 65536
  %.114 = select i1 %1099, i64 65536, i64 %1098
  store i64 %.114, i64* %14, align 8, !tbaa !22
  %1100 = tail call i8* @realloc(i8* %.pre1594, i64 %.114) #7
  store i8* %1100, i8** %17, align 8, !tbaa !10
  %1101 = icmp eq i8* %1100, null
  br i1 %1101, label %.loopexit, label %1102

; <label>:1102                                    ; preds = %1097
  %1103 = icmp eq i8* %.pre1594, %1100
  br i1 %1103, label %1089, label %1104

; <label>:1104                                    ; preds = %1102
  %1105 = getelementptr inbounds i8* %1100, i64 %1091
  %1106 = ptrtoint i8* %begalt.11.ph to i64
  %1107 = sub i64 %1106, %1090
  %1108 = getelementptr inbounds i8* %1100, i64 %1107
  %1109 = icmp eq i8* %fixup_alt_jump.21.ph, null
  br i1 %1109, label %1114, label %1110

; <label>:1110                                    ; preds = %1104
  %1111 = ptrtoint i8* %fixup_alt_jump.21.ph to i64
  %1112 = sub i64 %1111, %1090
  %1113 = getelementptr inbounds i8* %1100, i64 %1112
  br label %1114

; <label>:1114                                    ; preds = %1104, %1110
  %fixup_alt_jump.22 = phi i8* [ %1113, %1110 ], [ null, %1104 ]
  %1115 = icmp eq i8* %laststart.21.ph, null
  br i1 %1115, label %1120, label %1116

; <label>:1116                                    ; preds = %1114
  %1117 = ptrtoint i8* %laststart.21.ph to i64
  %1118 = sub i64 %1117, %1090
  %1119 = getelementptr inbounds i8* %1100, i64 %1118
  br label %1120

; <label>:1120                                    ; preds = %1114, %1116
  %laststart.22 = phi i8* [ %1119, %1116 ], [ null, %1114 ]
  %1121 = icmp eq i8* %pending_exact.11.ph, null
  br i1 %1121, label %.outer310, label %1122

; <label>:1122                                    ; preds = %1120
  %1123 = ptrtoint i8* %pending_exact.11.ph to i64
  %1124 = sub i64 %1123, %1090
  %1125 = getelementptr inbounds i8* %1100, i64 %1124
  br label %.outer310

; <label>:1126                                    ; preds = %1089
  %1127 = getelementptr inbounds i8* %b.12.ph, i64 1
  store i8 20, i8* %b.12.ph, align 1, !tbaa !12
  %1128 = ptrtoint i8* %fixup_alt_jump.21.ph to i64
  %1129 = sub i64 %1088, %1128
  %1130 = add i64 %1129, 4294967293
  %1131 = trunc i64 %1130 to i32
  store i8 14, i8* %fixup_alt_jump.21.ph, align 1, !tbaa !12
  %1132 = trunc i64 %1130 to i8
  %1133 = getelementptr inbounds i8* %fixup_alt_jump.21.ph, i64 1
  store i8 %1132, i8* %1133, align 1, !tbaa !12
  %1134 = lshr i32 %1131, 8
  %1135 = trunc i32 %1134 to i8
  %1136 = getelementptr inbounds i8* %fixup_alt_jump.21.ph, i64 2
  store i8 %1135, i8* %1136, align 1, !tbaa !12
  br label %1137

; <label>:1137                                    ; preds = %1086, %1126
  %fixup_alt_jump.23 = phi i8* [ %fixup_alt_jump.21.ph, %1126 ], [ null, %1086 ]
  %begalt.12 = phi i8* [ %begalt.11.ph, %1126 ], [ %begalt.01123, %1086 ]
  %laststart.23 = phi i8* [ %laststart.21.ph, %1126 ], [ %laststart.01128, %1086 ]
  %pending_exact.12 = phi i8* [ %pending_exact.11.ph, %1126 ], [ %pending_exact.01132, %1086 ]
  %b.13 = phi i8* [ %1127, %1126 ], [ %b.01147, %1086 ]
  %1138 = lshr i64 %compile_stack.sroa.40.01143, 32
  %1139 = icmp eq i64 %1138, 0
  br i1 %1139, label %1140, label %1143

; <label>:1140                                    ; preds = %1137
  br i1 %62, label %1141, label %group_in_compile_stack.exit.thread216

; <label>:1141                                    ; preds = %1140
  %1142 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %1142) #8
  br label %.loopexit

; <label>:1143                                    ; preds = %1137
  %1144 = add nuw nsw i64 %1138, 4294967295
  %1145 = shl i64 %1144, 32
  %1146 = and i64 %compile_stack.sroa.40.01143, 4294967295
  %1147 = or i64 %1145, %1146
  %1148 = load i8** %17, align 8, !tbaa !10
  %1149 = and i64 %1144, 4294967295
  %1150 = getelementptr inbounds %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137, i64 %1149, i32 0
  %1151 = load i64* %1150, align 8, !tbaa !23
  %1152 = getelementptr inbounds i8* %1148, i64 %1151
  %1153 = getelementptr inbounds %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137, i64 %1149, i32 1
  %1154 = load i64* %1153, align 8, !tbaa !25
  %1155 = icmp eq i64 %1154, 0
  br i1 %1155, label %1158, label %1156

; <label>:1156                                    ; preds = %1143
  %.sum56 = add i64 %1154, -1
  %1157 = getelementptr inbounds i8* %1148, i64 %.sum56
  br label %1158

; <label>:1158                                    ; preds = %1143, %1156
  %1159 = phi i8* [ %1157, %1156 ], [ null, %1143 ]
  %1160 = getelementptr inbounds %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137, i64 %1149, i32 3
  %1161 = load i64* %1160, align 8, !tbaa !26
  %1162 = getelementptr inbounds i8* %1148, i64 %1161
  %1163 = getelementptr inbounds %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137, i64 %1149, i32 4
  %1164 = load i32* %1163, align 4, !tbaa !27
  %1165 = icmp ult i32 %1164, 256
  br i1 %1165, label %1166, label %.backedge367

; <label>:1166                                    ; preds = %1158
  %1167 = getelementptr inbounds %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137, i64 %1149, i32 2
  %1168 = load i64* %1167, align 8, !tbaa !28
  %1169 = getelementptr inbounds i8* %1148, i64 %1168
  %1170 = sub i32 %regnum.01114, %1164
  %1171 = trunc i32 %1170 to i8
  store i8 %1171, i8* %1169, align 1, !tbaa !12
  %.pre1595.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer306

.outer306:                                        ; preds = %1200, %1198, %1166
  %.pre1595 = phi i8* [ %.pre1595.pre, %1166 ], [ %1184, %1198 ], [ %1184, %1200 ]
  %fixup_alt_jump.24.ph = phi i8* [ %1159, %1166 ], [ %fixup_alt_jump.25, %1198 ], [ %fixup_alt_jump.25, %1200 ]
  %begalt.13.ph = phi i8* [ %1152, %1166 ], [ %1192, %1198 ], [ %1192, %1200 ]
  %laststart.24.ph = phi i8* [ %1162, %1166 ], [ null, %1198 ], [ %1203, %1200 ]
  %b.14.ph = phi i8* [ %b.13, %1166 ], [ %1189, %1198 ], [ %1189, %1200 ]
  %1172 = ptrtoint i8* %b.14.ph to i64
  br label %1173

; <label>:1173                                    ; preds = %.outer306, %1186
  %1174 = ptrtoint i8* %.pre1595 to i64
  %1175 = sub i64 %1172, %1174
  %1176 = add nsw i64 %1175, 3
  %1177 = load i64* %14, align 8, !tbaa !22
  %1178 = icmp ugt i64 %1176, %1177
  br i1 %1178, label %1179, label %1204

; <label>:1179                                    ; preds = %1173
  %1180 = icmp eq i64 %1177, 65536
  br i1 %1180, label %.loopexit, label %1181

; <label>:1181                                    ; preds = %1179
  %1182 = shl i64 %1177, 1
  %1183 = icmp ugt i64 %1182, 65536
  %.115 = select i1 %1183, i64 65536, i64 %1182
  store i64 %.115, i64* %14, align 8, !tbaa !22
  %1184 = tail call i8* @realloc(i8* %.pre1595, i64 %.115) #7
  store i8* %1184, i8** %17, align 8, !tbaa !10
  %1185 = icmp eq i8* %1184, null
  br i1 %1185, label %.loopexit, label %1186

; <label>:1186                                    ; preds = %1181
  %1187 = icmp eq i8* %.pre1595, %1184
  br i1 %1187, label %1173, label %1188

; <label>:1188                                    ; preds = %1186
  %1189 = getelementptr inbounds i8* %1184, i64 %1175
  %1190 = ptrtoint i8* %begalt.13.ph to i64
  %1191 = sub i64 %1190, %1174
  %1192 = getelementptr inbounds i8* %1184, i64 %1191
  %1193 = icmp eq i8* %fixup_alt_jump.24.ph, null
  br i1 %1193, label %1198, label %1194

; <label>:1194                                    ; preds = %1188
  %1195 = ptrtoint i8* %fixup_alt_jump.24.ph to i64
  %1196 = sub i64 %1195, %1174
  %1197 = getelementptr inbounds i8* %1184, i64 %1196
  br label %1198

; <label>:1198                                    ; preds = %1188, %1194
  %fixup_alt_jump.25 = phi i8* [ %1197, %1194 ], [ null, %1188 ]
  %1199 = icmp eq i8* %laststart.24.ph, null
  br i1 %1199, label %.outer306, label %1200

; <label>:1200                                    ; preds = %1198
  %1201 = ptrtoint i8* %laststart.24.ph to i64
  %1202 = sub i64 %1201, %1174
  %1203 = getelementptr inbounds i8* %1184, i64 %1202
  br label %.outer306

; <label>:1204                                    ; preds = %1173
  %1205 = getelementptr inbounds i8* %b.14.ph, i64 1
  store i8 7, i8* %b.14.ph, align 1, !tbaa !12
  %1206 = trunc i32 %1164 to i8
  %1207 = getelementptr inbounds i8* %b.14.ph, i64 2
  store i8 %1206, i8* %1205, align 1, !tbaa !12
  %1208 = getelementptr inbounds i8* %b.14.ph, i64 3
  store i8 %1171, i8* %1207, align 1, !tbaa !12
  br label %.backedge367

; <label>:1209                                    ; preds = %984
  br i1 %71, label %1210, label %1961

; <label>:1210                                    ; preds = %1209, %977, %978
  %c.7 = phi i8 [ %c.0, %978 ], [ %c.0, %977 ], [ %986, %1209 ]
  br i1 %66, label %.preheader315, label %group_in_compile_stack.exit.thread216

.preheader315:                                    ; preds = %1210
  %.pre1592.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer318

.outer318:                                        ; preds = %1243, %1245, %.preheader315
  %.pre1592 = phi i8* [ %.pre1592.pre, %.preheader315 ], [ %1223, %1245 ], [ %1223, %1243 ]
  %fixup_alt_jump.26.ph = phi i8* [ %fixup_alt_jump.01118, %.preheader315 ], [ %fixup_alt_jump.27, %1245 ], [ %fixup_alt_jump.27, %1243 ]
  %begalt.14.ph = phi i8* [ %begalt.01123, %.preheader315 ], [ %1231, %1245 ], [ %1231, %1243 ]
  %laststart.26.ph = phi i8* [ %laststart.01128, %.preheader315 ], [ %laststart.27, %1245 ], [ %laststart.27, %1243 ]
  %pending_exact.14.ph = phi i8* [ %pending_exact.01132, %.preheader315 ], [ %1248, %1245 ], [ null, %1243 ]
  %b.15.ph = phi i8* [ %b.01147, %.preheader315 ], [ %1228, %1245 ], [ %1228, %1243 ]
  %1211 = ptrtoint i8* %b.15.ph to i64
  br label %1212

; <label>:1212                                    ; preds = %.outer318, %1225
  %1213 = ptrtoint i8* %.pre1592 to i64
  %1214 = sub i64 %1211, %1213
  %1215 = add nsw i64 %1214, 3
  %1216 = load i64* %14, align 8, !tbaa !22
  %1217 = icmp ugt i64 %1215, %1216
  br i1 %1217, label %1218, label %1249

; <label>:1218                                    ; preds = %1212
  %1219 = icmp eq i64 %1216, 65536
  br i1 %1219, label %.loopexit, label %1220

; <label>:1220                                    ; preds = %1218
  %1221 = shl i64 %1216, 1
  %1222 = icmp ugt i64 %1221, 65536
  %.119 = select i1 %1222, i64 65536, i64 %1221
  store i64 %.119, i64* %14, align 8, !tbaa !22
  %1223 = tail call i8* @realloc(i8* %.pre1592, i64 %.119) #7
  store i8* %1223, i8** %17, align 8, !tbaa !10
  %1224 = icmp eq i8* %1223, null
  br i1 %1224, label %.loopexit, label %1225

; <label>:1225                                    ; preds = %1220
  %1226 = icmp eq i8* %.pre1592, %1223
  br i1 %1226, label %1212, label %1227

; <label>:1227                                    ; preds = %1225
  %1228 = getelementptr inbounds i8* %1223, i64 %1214
  %1229 = ptrtoint i8* %begalt.14.ph to i64
  %1230 = sub i64 %1229, %1213
  %1231 = getelementptr inbounds i8* %1223, i64 %1230
  %1232 = icmp eq i8* %fixup_alt_jump.26.ph, null
  br i1 %1232, label %1237, label %1233

; <label>:1233                                    ; preds = %1227
  %1234 = ptrtoint i8* %fixup_alt_jump.26.ph to i64
  %1235 = sub i64 %1234, %1213
  %1236 = getelementptr inbounds i8* %1223, i64 %1235
  br label %1237

; <label>:1237                                    ; preds = %1227, %1233
  %fixup_alt_jump.27 = phi i8* [ %1236, %1233 ], [ null, %1227 ]
  %1238 = icmp eq i8* %laststart.26.ph, null
  br i1 %1238, label %1243, label %1239

; <label>:1239                                    ; preds = %1237
  %1240 = ptrtoint i8* %laststart.26.ph to i64
  %1241 = sub i64 %1240, %1213
  %1242 = getelementptr inbounds i8* %1223, i64 %1241
  br label %1243

; <label>:1243                                    ; preds = %1237, %1239
  %laststart.27 = phi i8* [ %1242, %1239 ], [ null, %1237 ]
  %1244 = icmp eq i8* %pending_exact.14.ph, null
  br i1 %1244, label %.outer318, label %1245

; <label>:1245                                    ; preds = %1243
  %1246 = ptrtoint i8* %pending_exact.14.ph to i64
  %1247 = sub i64 %1246, %1213
  %1248 = getelementptr inbounds i8* %1223, i64 %1247
  br label %.outer318

; <label>:1249                                    ; preds = %1212
  %1250 = getelementptr inbounds i8* %b.15.ph, i64 6
  %1251 = ptrtoint i8* %1250 to i64
  %1252 = ptrtoint i8* %begalt.14.ph to i64
  %1253 = sub i64 %1251, %1252
  %1254 = add i64 %1253, 4294967293
  %1255 = trunc i64 %1254 to i32
  %1256 = icmp eq i8* %b.15.ph, %begalt.14.ph
  %.pre1641 = getelementptr inbounds i8* %b.15.ph, i64 3
  br i1 %1256, label %insert_op1.exit159, label %.lr.ph.i156

.lr.ph.i156:                                      ; preds = %1249, %.lr.ph.i156
  %pto.02.i157 = phi i8* [ %1259, %.lr.ph.i156 ], [ %.pre1641, %1249 ]
  %pfrom.01.i158 = phi i8* [ %1257, %.lr.ph.i156 ], [ %b.15.ph, %1249 ]
  %1257 = getelementptr inbounds i8* %pfrom.01.i158, i64 -1
  %1258 = load i8* %1257, align 1, !tbaa !12
  %1259 = getelementptr inbounds i8* %pto.02.i157, i64 -1
  store i8 %1258, i8* %1259, align 1, !tbaa !12
  %1260 = icmp eq i8* %1257, %begalt.14.ph
  br i1 %1260, label %insert_op1.exit159, label %.lr.ph.i156

insert_op1.exit159:                               ; preds = %.lr.ph.i156, %1249
  store i8 15, i8* %begalt.14.ph, align 1, !tbaa !12
  %1261 = trunc i64 %1254 to i8
  %1262 = getelementptr inbounds i8* %begalt.14.ph, i64 1
  store i8 %1261, i8* %1262, align 1, !tbaa !12
  %1263 = lshr i32 %1255, 8
  %1264 = trunc i32 %1263 to i8
  %1265 = getelementptr inbounds i8* %begalt.14.ph, i64 2
  store i8 %1264, i8* %1265, align 1, !tbaa !12
  %1266 = icmp eq i8* %fixup_alt_jump.26.ph, null
  br i1 %1266, label %.preheader311, label %1267

; <label>:1267                                    ; preds = %insert_op1.exit159
  %1268 = ptrtoint i8* %.pre1641 to i64
  %1269 = ptrtoint i8* %fixup_alt_jump.26.ph to i64
  %1270 = sub i64 %1268, %1269
  %1271 = add i64 %1270, 4294967293
  %1272 = trunc i64 %1271 to i32
  store i8 14, i8* %fixup_alt_jump.26.ph, align 1, !tbaa !12
  %1273 = trunc i64 %1271 to i8
  %1274 = getelementptr inbounds i8* %fixup_alt_jump.26.ph, i64 1
  store i8 %1273, i8* %1274, align 1, !tbaa !12
  %1275 = lshr i32 %1272, 8
  %1276 = trunc i32 %1275 to i8
  %1277 = getelementptr inbounds i8* %fixup_alt_jump.26.ph, i64 2
  store i8 %1276, i8* %1277, align 1, !tbaa !12
  br label %.preheader311

.preheader311:                                    ; preds = %insert_op1.exit159, %1267
  %.pre1593.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer314

.outer314:                                        ; preds = %1303, %1301, %.preheader311
  %.pre1593 = phi i8* [ %.pre1593.pre, %.preheader311 ], [ %1290, %1301 ], [ %1290, %1303 ]
  %fixup_alt_jump.28.ph = phi i8* [ %.pre1641, %.preheader311 ], [ %fixup_alt_jump.29, %1301 ], [ %fixup_alt_jump.29, %1303 ]
  %laststart.28.ph = phi i8* [ %laststart.26.ph, %.preheader311 ], [ null, %1301 ], [ %1306, %1303 ]
  %b.16.ph = phi i8* [ %.pre1641, %.preheader311 ], [ %1295, %1301 ], [ %1295, %1303 ]
  %1278 = ptrtoint i8* %b.16.ph to i64
  br label %1279

; <label>:1279                                    ; preds = %.outer314, %1292
  %1280 = ptrtoint i8* %.pre1593 to i64
  %1281 = sub i64 %1278, %1280
  %1282 = add nsw i64 %1281, 3
  %1283 = load i64* %14, align 8, !tbaa !22
  %1284 = icmp ugt i64 %1282, %1283
  br i1 %1284, label %1285, label %1307

; <label>:1285                                    ; preds = %1279
  %1286 = icmp eq i64 %1283, 65536
  br i1 %1286, label %.loopexit, label %1287

; <label>:1287                                    ; preds = %1285
  %1288 = shl i64 %1283, 1
  %1289 = icmp ugt i64 %1288, 65536
  %.120 = select i1 %1289, i64 65536, i64 %1288
  store i64 %.120, i64* %14, align 8, !tbaa !22
  %1290 = tail call i8* @realloc(i8* %.pre1593, i64 %.120) #7
  store i8* %1290, i8** %17, align 8, !tbaa !10
  %1291 = icmp eq i8* %1290, null
  br i1 %1291, label %.loopexit, label %1292

; <label>:1292                                    ; preds = %1287
  %1293 = icmp eq i8* %.pre1593, %1290
  br i1 %1293, label %1279, label %1294

; <label>:1294                                    ; preds = %1292
  %1295 = getelementptr inbounds i8* %1290, i64 %1281
  %1296 = icmp eq i8* %fixup_alt_jump.28.ph, null
  br i1 %1296, label %1301, label %1297

; <label>:1297                                    ; preds = %1294
  %1298 = ptrtoint i8* %fixup_alt_jump.28.ph to i64
  %1299 = sub i64 %1298, %1280
  %1300 = getelementptr inbounds i8* %1290, i64 %1299
  br label %1301

; <label>:1301                                    ; preds = %1294, %1297
  %fixup_alt_jump.29 = phi i8* [ %1300, %1297 ], [ null, %1294 ]
  %1302 = icmp eq i8* %laststart.28.ph, null
  br i1 %1302, label %.outer314, label %1303

; <label>:1303                                    ; preds = %1301
  %1304 = ptrtoint i8* %laststart.28.ph to i64
  %1305 = sub i64 %1304, %1280
  %1306 = getelementptr inbounds i8* %1290, i64 %1305
  br label %.outer314

; <label>:1307                                    ; preds = %1279
  %1308 = getelementptr inbounds i8* %b.16.ph, i64 3
  br label %.backedge367

; <label>:1309                                    ; preds = %984
  br i1 %72, label %1310, label %1961

; <label>:1310                                    ; preds = %1309
  %1311 = icmp eq i8* %78, %pattern
  %1312 = icmp eq i8* %985, %1
  %or.cond125 = and i1 %1311, %1312
  br i1 %or.cond125, label %1961, label %1313

; <label>:1313                                    ; preds = %979, %1310
  %1314 = phi i64 [ 0, %979 ], [ 1, %1310 ]
  %1315 = phi i64 [ 2, %979 ], [ 3, %1310 ]
  %1316 = phi i8* [ %79, %979 ], [ %985, %1310 ]
  %1317 = getelementptr inbounds i8* %78, i64 %1314
  %1318 = icmp eq i8* %1316, %1
  br i1 %1318, label %1319, label %1322

; <label>:1319                                    ; preds = %1313
  br i1 %37, label %1320, label %1564

; <label>:1320                                    ; preds = %1319
  %1321 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %1321) #8
  br label %.loopexit

; <label>:1322                                    ; preds = %1313
  %1323 = getelementptr inbounds i8* %78, i64 %1315
  store i8* %1323, i8** %p, align 8, !tbaa !13
  %1324 = load i8* %1316, align 1, !tbaa !12
  br i1 %31, label %1325, label %.preheader329

; <label>:1325                                    ; preds = %1322
  %1326 = zext i8 %1324 to i64
  %1327 = getelementptr inbounds i8* %3, i64 %1326
  %1328 = load i8* %1327, align 1, !tbaa !12
  br label %.preheader329

.preheader329:                                    ; preds = %1322, %1325
  %c.9.ph = phi i8 [ %1324, %1322 ], [ %1328, %1325 ]
  %1329 = zext i8 %c.9.ph to i32
  %isdigittmp511073 = add nsw i32 %1329, -48
  %isdigit521074 = icmp ult i32 %isdigittmp511073, 10
  br i1 %isdigit521074, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader329, %.backedge330
  %1330 = phi i8* [ %1338, %.backedge330 ], [ %1323, %.preheader329 ]
  %1331 = phi i32 [ %1340, %.backedge330 ], [ %1329, %.preheader329 ]
  %c.91076 = phi i8 [ %c.9.be, %.backedge330 ], [ %c.9.ph, %.preheader329 ]
  %lower_bound.01075 = phi i32 [ %1335, %.backedge330 ], [ -1, %.preheader329 ]
  %1332 = icmp slt i32 %lower_bound.01075, 0
  %lower_bound.0.op = mul i32 %lower_bound.01075, 10
  %1333 = select i1 %1332, i32 0, i32 %lower_bound.0.op
  %1334 = add nsw i32 %1331, -48
  %1335 = add i32 %1334, %1333
  %1336 = icmp eq i8* %1330, %1
  br i1 %1336, label %._crit_edge, label %1337

; <label>:1337                                    ; preds = %.lr.ph
  %1338 = getelementptr inbounds i8* %1330, i64 1
  store i8* %1338, i8** %p, align 8, !tbaa !13
  %1339 = load i8* %1330, align 1, !tbaa !12
  br i1 %31, label %1341, label %.backedge330

.backedge330:                                     ; preds = %1337, %1341
  %c.9.be = phi i8 [ %1344, %1341 ], [ %1339, %1337 ]
  %1340 = zext i8 %c.9.be to i32
  %isdigittmp51 = add nsw i32 %1340, -48
  %isdigit52 = icmp ult i32 %isdigittmp51, 10
  br i1 %isdigit52, label %.lr.ph, label %._crit_edge

; <label>:1341                                    ; preds = %1337
  %1342 = zext i8 %1339 to i64
  %1343 = getelementptr inbounds i8* %3, i64 %1342
  %1344 = load i8* %1343, align 1, !tbaa !12
  br label %.backedge330

._crit_edge:                                      ; preds = %.lr.ph, %.backedge330, %.preheader329
  %1345 = phi i8* [ %1323, %.preheader329 ], [ %1, %.lr.ph ], [ %1338, %.backedge330 ]
  %c.9.lcssa = phi i8 [ %c.9.ph, %.preheader329 ], [ %c.91076, %.lr.ph ], [ %c.9.be, %.backedge330 ]
  %lower_bound.2 = phi i32 [ -1, %.preheader329 ], [ %1335, %.lr.ph ], [ %1335, %.backedge330 ]
  %1346 = icmp eq i8 %c.9.lcssa, 44
  br i1 %1346, label %1347, label %1375

; <label>:1347                                    ; preds = %._crit_edge
  %1348 = icmp eq i8* %1345, %1
  br i1 %1348, label %.loopexit327, label %1349

; <label>:1349                                    ; preds = %1347
  %1350 = getelementptr inbounds i8* %1345, i64 1
  store i8* %1350, i8** %p, align 8, !tbaa !13
  %1351 = load i8* %1345, align 1, !tbaa !12
  br i1 %31, label %1352, label %.preheader326

; <label>:1352                                    ; preds = %1349
  %1353 = zext i8 %1351 to i64
  %1354 = getelementptr inbounds i8* %3, i64 %1353
  %1355 = load i8* %1354, align 1, !tbaa !12
  br label %.preheader326

.preheader326:                                    ; preds = %1349, %1352
  %c.11.ph = phi i8 [ %1351, %1349 ], [ %1355, %1352 ]
  %1356 = zext i8 %c.11.ph to i32
  %isdigittmp1081 = add nsw i32 %1356, -48
  %isdigit1082 = icmp ult i32 %isdigittmp1081, 10
  br i1 %isdigit1082, label %.lr.ph1085, label %.loopexit327

.lr.ph1085:                                       ; preds = %.preheader326, %.backedge328
  %1357 = phi i8* [ %1358, %.backedge328 ], [ %1345, %.preheader326 ]
  %1358 = phi i8* [ %1366, %.backedge328 ], [ %1350, %.preheader326 ]
  %1359 = phi i32 [ %1368, %.backedge328 ], [ %1356, %.preheader326 ]
  %c.111084 = phi i8 [ %c.11.be, %.backedge328 ], [ %c.11.ph, %.preheader326 ]
  %upper_bound.01083 = phi i32 [ %1363, %.backedge328 ], [ -1, %.preheader326 ]
  %1360 = icmp slt i32 %upper_bound.01083, 0
  %upper_bound.0.op = mul i32 %upper_bound.01083, 10
  %1361 = select i1 %1360, i32 0, i32 %upper_bound.0.op
  %1362 = add nsw i32 %1359, -48
  %1363 = add i32 %1362, %1361
  %1364 = icmp eq i8* %1358, %1
  br i1 %1364, label %.loopexit327, label %1365

; <label>:1365                                    ; preds = %.lr.ph1085
  %1366 = getelementptr inbounds i8* %1357, i64 2
  store i8* %1366, i8** %p, align 8, !tbaa !13
  %1367 = load i8* %1358, align 1, !tbaa !12
  br i1 %31, label %1369, label %.backedge328

.backedge328:                                     ; preds = %1365, %1369
  %c.11.be = phi i8 [ %1372, %1369 ], [ %1367, %1365 ]
  %1368 = zext i8 %c.11.be to i32
  %isdigittmp = add nsw i32 %1368, -48
  %isdigit = icmp ult i32 %isdigittmp, 10
  br i1 %isdigit, label %.lr.ph1085, label %.loopexit327

; <label>:1369                                    ; preds = %1365
  %1370 = zext i8 %1367 to i64
  %1371 = getelementptr inbounds i8* %3, i64 %1370
  %1372 = load i8* %1371, align 1, !tbaa !12
  br label %.backedge328

.loopexit327:                                     ; preds = %.lr.ph1085, %.backedge328, %.preheader326, %1347
  %1373 = phi i8* [ %1, %1347 ], [ %1350, %.preheader326 ], [ %1366, %.backedge328 ], [ %1, %.lr.ph1085 ]
  %upper_bound.2 = phi i32 [ -1, %1347 ], [ -1, %.preheader326 ], [ %1363, %.backedge328 ], [ %1363, %.lr.ph1085 ]
  %c.12 = phi i8 [ 44, %1347 ], [ %c.11.ph, %.preheader326 ], [ %c.11.be, %.backedge328 ], [ %c.111084, %.lr.ph1085 ]
  %1374 = icmp slt i32 %upper_bound.2, 0
  %.upper_bound.2 = select i1 %1374, i32 32767, i32 %upper_bound.2
  br label %1375

; <label>:1375                                    ; preds = %.loopexit327, %._crit_edge
  %1376 = phi i8* [ %1373, %.loopexit327 ], [ %1345, %._crit_edge ]
  %upper_bound.3 = phi i32 [ %.upper_bound.2, %.loopexit327 ], [ %lower_bound.2, %._crit_edge ]
  %c.13 = phi i8 [ %c.12, %.loopexit327 ], [ %c.9.lcssa, %._crit_edge ]
  %1377 = icmp slt i32 %lower_bound.2, 0
  %1378 = icmp sgt i32 %upper_bound.3, 32767
  %or.cond32 = or i1 %1377, %1378
  %1379 = icmp sgt i32 %lower_bound.2, %upper_bound.3
  %or.cond127 = or i1 %1379, %or.cond32
  br i1 %or.cond127, label %1380, label %1383

; <label>:1380                                    ; preds = %1375
  br i1 %37, label %1381, label %1564

; <label>:1381                                    ; preds = %1380
  %1382 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %1382) #8
  br label %.loopexit

; <label>:1383                                    ; preds = %1375
  br i1 %69, label %1397, label %1384

; <label>:1384                                    ; preds = %1383
  %1385 = icmp eq i8 %c.13, 92
  br i1 %1385, label %1388, label %1386

; <label>:1386                                    ; preds = %1384
  %1387 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %1387) #8
  br label %.loopexit

; <label>:1388                                    ; preds = %1384
  %1389 = icmp eq i8* %1376, %1
  br i1 %1389, label %.loopexit, label %1390

; <label>:1390                                    ; preds = %1388
  %1391 = getelementptr inbounds i8* %1376, i64 1
  store i8* %1391, i8** %p, align 8, !tbaa !13
  %1392 = load i8* %1376, align 1, !tbaa !12
  br i1 %31, label %1393, label %1397

; <label>:1393                                    ; preds = %1390
  %1394 = zext i8 %1392 to i64
  %1395 = getelementptr inbounds i8* %3, i64 %1394
  %1396 = load i8* %1395, align 1, !tbaa !12
  br label %1397

; <label>:1397                                    ; preds = %1393, %1390, %1383
  %c.14 = phi i8 [ %c.13, %1383 ], [ %1396, %1393 ], [ %1392, %1390 ]
  %1398 = icmp eq i8 %c.14, 125
  br i1 %1398, label %1402, label %1399

; <label>:1399                                    ; preds = %1397
  br i1 %69, label %1564, label %1400

; <label>:1400                                    ; preds = %1399
  %1401 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %1401) #8
  br label %.loopexit

; <label>:1402                                    ; preds = %1397
  %1403 = icmp eq i8* %laststart.01128, null
  br i1 %1403, label %1404, label %1408

; <label>:1404                                    ; preds = %1402
  br i1 %47, label %1407, label %1405

; <label>:1405                                    ; preds = %1404
  %1406 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %1406) #8
  br label %.loopexit

; <label>:1407                                    ; preds = %1404
  br i1 %49, label %1564, label %1408

; <label>:1408                                    ; preds = %1407, %1402
  %laststart.30 = phi i8* [ %laststart.01128, %1402 ], [ %b.01147, %1407 ]
  %1409 = icmp eq i32 %upper_bound.3, 0
  br i1 %1409, label %.preheader319, label %1465

.preheader319:                                    ; preds = %1408
  %.pre1591.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer322

.outer322:                                        ; preds = %1442, %1444, %.preheader319
  %.pre1591 = phi i8* [ %.pre1591.pre, %.preheader319 ], [ %1422, %1444 ], [ %1422, %1442 ]
  %fixup_alt_jump.30.ph = phi i8* [ %fixup_alt_jump.01118, %.preheader319 ], [ %fixup_alt_jump.31, %1444 ], [ %fixup_alt_jump.31, %1442 ]
  %begalt.16.ph = phi i8* [ %begalt.01123, %.preheader319 ], [ %1430, %1444 ], [ %1430, %1442 ]
  %laststart.31.ph = phi i8* [ %laststart.30, %.preheader319 ], [ %laststart.32, %1444 ], [ %laststart.32, %1442 ]
  %pending_exact.16.ph = phi i8* [ %pending_exact.01132, %.preheader319 ], [ %1447, %1444 ], [ null, %1442 ]
  %b.17.ph = phi i8* [ %b.01147, %.preheader319 ], [ %1427, %1444 ], [ %1427, %1442 ]
  %1410 = ptrtoint i8* %b.17.ph to i64
  br label %1411

; <label>:1411                                    ; preds = %.outer322, %1424
  %1412 = ptrtoint i8* %.pre1591 to i64
  %1413 = sub i64 %1410, %1412
  %1414 = add nsw i64 %1413, 3
  %1415 = load i64* %14, align 8, !tbaa !22
  %1416 = icmp ugt i64 %1414, %1415
  br i1 %1416, label %1417, label %1448

; <label>:1417                                    ; preds = %1411
  %1418 = icmp eq i64 %1415, 65536
  br i1 %1418, label %.loopexit, label %1419

; <label>:1419                                    ; preds = %1417
  %1420 = shl i64 %1415, 1
  %1421 = icmp ugt i64 %1420, 65536
  %.128 = select i1 %1421, i64 65536, i64 %1420
  store i64 %.128, i64* %14, align 8, !tbaa !22
  %1422 = tail call i8* @realloc(i8* %.pre1591, i64 %.128) #7
  store i8* %1422, i8** %17, align 8, !tbaa !10
  %1423 = icmp eq i8* %1422, null
  br i1 %1423, label %.loopexit, label %1424

; <label>:1424                                    ; preds = %1419
  %1425 = icmp eq i8* %.pre1591, %1422
  br i1 %1425, label %1411, label %1426

; <label>:1426                                    ; preds = %1424
  %1427 = getelementptr inbounds i8* %1422, i64 %1413
  %1428 = ptrtoint i8* %begalt.16.ph to i64
  %1429 = sub i64 %1428, %1412
  %1430 = getelementptr inbounds i8* %1422, i64 %1429
  %1431 = icmp eq i8* %fixup_alt_jump.30.ph, null
  br i1 %1431, label %1436, label %1432

; <label>:1432                                    ; preds = %1426
  %1433 = ptrtoint i8* %fixup_alt_jump.30.ph to i64
  %1434 = sub i64 %1433, %1412
  %1435 = getelementptr inbounds i8* %1422, i64 %1434
  br label %1436

; <label>:1436                                    ; preds = %1426, %1432
  %fixup_alt_jump.31 = phi i8* [ %1435, %1432 ], [ null, %1426 ]
  %1437 = icmp eq i8* %laststart.31.ph, null
  br i1 %1437, label %1442, label %1438

; <label>:1438                                    ; preds = %1436
  %1439 = ptrtoint i8* %laststart.31.ph to i64
  %1440 = sub i64 %1439, %1412
  %1441 = getelementptr inbounds i8* %1422, i64 %1440
  br label %1442

; <label>:1442                                    ; preds = %1436, %1438
  %laststart.32 = phi i8* [ %1441, %1438 ], [ null, %1436 ]
  %1443 = icmp eq i8* %pending_exact.16.ph, null
  br i1 %1443, label %.outer322, label %1444

; <label>:1444                                    ; preds = %1442
  %1445 = ptrtoint i8* %pending_exact.16.ph to i64
  %1446 = sub i64 %1445, %1412
  %1447 = getelementptr inbounds i8* %1422, i64 %1446
  br label %.outer322

; <label>:1448                                    ; preds = %1411
  %1449 = getelementptr inbounds i8* %b.17.ph, i64 3
  %1450 = ptrtoint i8* %1449 to i64
  %1451 = ptrtoint i8* %laststart.31.ph to i64
  %1452 = sub i64 %1450, %1451
  %1453 = add i64 %1452, 4294967293
  %1454 = trunc i64 %1453 to i32
  %1455 = icmp eq i8* %b.17.ph, %laststart.31.ph
  br i1 %1455, label %insert_op1.exit, label %.lr.ph.i153

.lr.ph.i153:                                      ; preds = %1448, %.lr.ph.i153
  %pto.02.i154 = phi i8* [ %1458, %.lr.ph.i153 ], [ %1449, %1448 ]
  %pfrom.01.i155 = phi i8* [ %1456, %.lr.ph.i153 ], [ %b.17.ph, %1448 ]
  %1456 = getelementptr inbounds i8* %pfrom.01.i155, i64 -1
  %1457 = load i8* %1456, align 1, !tbaa !12
  %1458 = getelementptr inbounds i8* %pto.02.i154, i64 -1
  store i8 %1457, i8* %1458, align 1, !tbaa !12
  %1459 = icmp eq i8* %1456, %laststart.31.ph
  br i1 %1459, label %insert_op1.exit, label %.lr.ph.i153

insert_op1.exit:                                  ; preds = %.lr.ph.i153, %1448
  store i8 13, i8* %laststart.31.ph, align 1, !tbaa !12
  %1460 = trunc i64 %1453 to i8
  %1461 = getelementptr inbounds i8* %laststart.31.ph, i64 1
  store i8 %1460, i8* %1461, align 1, !tbaa !12
  %1462 = lshr i32 %1454, 8
  %1463 = trunc i32 %1462 to i8
  %1464 = getelementptr inbounds i8* %laststart.31.ph, i64 2
  store i8 %1463, i8* %1464, align 1, !tbaa !12
  br label %.backedge367

; <label>:1465                                    ; preds = %1408
  %1466 = icmp sgt i32 %upper_bound.3, 1
  %1467 = select i1 %1466, i64 20, i64 10
  %.pre1590.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer325

.outer325:                                        ; preds = %1500, %1502, %1465
  %.pre1590 = phi i8* [ %.pre1590.pre, %1465 ], [ %1480, %1502 ], [ %1480, %1500 ]
  %fixup_alt_jump.32.ph = phi i8* [ %fixup_alt_jump.01118, %1465 ], [ %fixup_alt_jump.33, %1502 ], [ %fixup_alt_jump.33, %1500 ]
  %begalt.17.ph = phi i8* [ %begalt.01123, %1465 ], [ %1488, %1502 ], [ %1488, %1500 ]
  %laststart.33.ph = phi i8* [ %laststart.30, %1465 ], [ %laststart.34, %1502 ], [ %laststart.34, %1500 ]
  %pending_exact.17.ph = phi i8* [ %pending_exact.01132, %1465 ], [ %1505, %1502 ], [ null, %1500 ]
  %b.18.ph = phi i8* [ %b.01147, %1465 ], [ %1485, %1502 ], [ %1485, %1500 ]
  %1468 = ptrtoint i8* %b.18.ph to i64
  br label %1469

; <label>:1469                                    ; preds = %.outer325, %1482
  %1470 = ptrtoint i8* %.pre1590 to i64
  %1471 = sub i64 %1468, %1470
  %1472 = add nsw i64 %1471, %1467
  %1473 = load i64* %14, align 8, !tbaa !22
  %1474 = icmp ugt i64 %1472, %1473
  br i1 %1474, label %1475, label %1506

; <label>:1475                                    ; preds = %1469
  %1476 = icmp eq i64 %1473, 65536
  br i1 %1476, label %.loopexit, label %1477

; <label>:1477                                    ; preds = %1475
  %1478 = shl i64 %1473, 1
  %1479 = icmp ugt i64 %1478, 65536
  %.129 = select i1 %1479, i64 65536, i64 %1478
  store i64 %.129, i64* %14, align 8, !tbaa !22
  %1480 = tail call i8* @realloc(i8* %.pre1590, i64 %.129) #7
  store i8* %1480, i8** %17, align 8, !tbaa !10
  %1481 = icmp eq i8* %1480, null
  br i1 %1481, label %.loopexit, label %1482

; <label>:1482                                    ; preds = %1477
  %1483 = icmp eq i8* %.pre1590, %1480
  br i1 %1483, label %1469, label %1484

; <label>:1484                                    ; preds = %1482
  %1485 = getelementptr inbounds i8* %1480, i64 %1471
  %1486 = ptrtoint i8* %begalt.17.ph to i64
  %1487 = sub i64 %1486, %1470
  %1488 = getelementptr inbounds i8* %1480, i64 %1487
  %1489 = icmp eq i8* %fixup_alt_jump.32.ph, null
  br i1 %1489, label %1494, label %1490

; <label>:1490                                    ; preds = %1484
  %1491 = ptrtoint i8* %fixup_alt_jump.32.ph to i64
  %1492 = sub i64 %1491, %1470
  %1493 = getelementptr inbounds i8* %1480, i64 %1492
  br label %1494

; <label>:1494                                    ; preds = %1484, %1490
  %fixup_alt_jump.33 = phi i8* [ %1493, %1490 ], [ null, %1484 ]
  %1495 = icmp eq i8* %laststart.33.ph, null
  br i1 %1495, label %1500, label %1496

; <label>:1496                                    ; preds = %1494
  %1497 = ptrtoint i8* %laststart.33.ph to i64
  %1498 = sub i64 %1497, %1470
  %1499 = getelementptr inbounds i8* %1480, i64 %1498
  br label %1500

; <label>:1500                                    ; preds = %1494, %1496
  %laststart.34 = phi i8* [ %1499, %1496 ], [ null, %1494 ]
  %1501 = icmp eq i8* %pending_exact.17.ph, null
  br i1 %1501, label %.outer325, label %1502

; <label>:1502                                    ; preds = %1500
  %1503 = ptrtoint i8* %pending_exact.17.ph to i64
  %1504 = sub i64 %1503, %1470
  %1505 = getelementptr inbounds i8* %1480, i64 %1504
  br label %.outer325

; <label>:1506                                    ; preds = %1469
  %1507 = getelementptr inbounds i8* %b.18.ph, i64 5
  %.sum48 = select i1 %1466, i64 10, i64 5
  %1508 = getelementptr inbounds i8* %b.18.ph, i64 %.sum48
  %1509 = ptrtoint i8* %1508 to i64
  %1510 = ptrtoint i8* %laststart.33.ph to i64
  %1511 = sub i64 %1509, %1510
  %1512 = add i64 %1511, 4294967293
  %1513 = trunc i64 %1512 to i32
  %1514 = icmp eq i8* %b.18.ph, %laststart.33.ph
  br i1 %1514, label %insert_op2.exit152, label %.lr.ph.i149

.lr.ph.i149:                                      ; preds = %1506, %.lr.ph.i149
  %pto.02.i150 = phi i8* [ %1517, %.lr.ph.i149 ], [ %1507, %1506 ]
  %pfrom.01.i151 = phi i8* [ %1515, %.lr.ph.i149 ], [ %b.18.ph, %1506 ]
  %1515 = getelementptr inbounds i8* %pfrom.01.i151, i64 -1
  %1516 = load i8* %1515, align 1, !tbaa !12
  %1517 = getelementptr inbounds i8* %pto.02.i150, i64 -1
  store i8 %1516, i8* %1517, align 1, !tbaa !12
  %1518 = icmp eq i8* %1515, %laststart.33.ph
  br i1 %1518, label %insert_op2.exit152, label %.lr.ph.i149

insert_op2.exit152:                               ; preds = %.lr.ph.i149, %1506
  store i8 21, i8* %laststart.33.ph, align 1, !tbaa !12
  %1519 = trunc i64 %1512 to i8
  %1520 = getelementptr inbounds i8* %laststart.33.ph, i64 1
  store i8 %1519, i8* %1520, align 1, !tbaa !12
  %1521 = lshr i32 %1513, 8
  %1522 = trunc i32 %1521 to i8
  %1523 = getelementptr inbounds i8* %laststart.33.ph, i64 2
  store i8 %1522, i8* %1523, align 1, !tbaa !12
  %1524 = trunc i32 %lower_bound.2 to i8
  %1525 = getelementptr inbounds i8* %laststart.33.ph, i64 3
  store i8 %1524, i8* %1525, align 1, !tbaa !12
  %1526 = lshr i32 %lower_bound.2, 8
  %1527 = trunc i32 %1526 to i8
  %1528 = getelementptr inbounds i8* %laststart.33.ph, i64 4
  store i8 %1527, i8* %1528, align 1, !tbaa !12
  %1529 = icmp eq i8* %1507, %laststart.33.ph
  %.pre1643 = getelementptr inbounds i8* %b.18.ph, i64 10
  br i1 %1529, label %insert_op2.exit148, label %.lr.ph.i145

.lr.ph.i145:                                      ; preds = %insert_op2.exit152, %.lr.ph.i145
  %pto.02.i146 = phi i8* [ %1532, %.lr.ph.i145 ], [ %.pre1643, %insert_op2.exit152 ]
  %pfrom.01.i147 = phi i8* [ %1530, %.lr.ph.i145 ], [ %1507, %insert_op2.exit152 ]
  %1530 = getelementptr inbounds i8* %pfrom.01.i147, i64 -1
  %1531 = load i8* %1530, align 1, !tbaa !12
  %1532 = getelementptr inbounds i8* %pto.02.i146, i64 -1
  store i8 %1531, i8* %1532, align 1, !tbaa !12
  %1533 = icmp eq i8* %1530, %laststart.33.ph
  br i1 %1533, label %insert_op2.exit148, label %.lr.ph.i145

insert_op2.exit148:                               ; preds = %.lr.ph.i145, %insert_op2.exit152
  store i8 23, i8* %laststart.33.ph, align 1, !tbaa !12
  store i8 5, i8* %1520, align 1, !tbaa !12
  store i8 0, i8* %1523, align 1, !tbaa !12
  store i8 %1524, i8* %1525, align 1, !tbaa !12
  store i8 %1527, i8* %1528, align 1, !tbaa !12
  br i1 %1466, label %1534, label %.backedge367

; <label>:1534                                    ; preds = %insert_op2.exit148
  %1535 = getelementptr inbounds i8* %laststart.33.ph, i64 5
  %1536 = ptrtoint i8* %1535 to i64
  %1537 = ptrtoint i8* %.pre1643 to i64
  %1538 = sub i64 %1536, %1537
  %1539 = add i64 %1538, 4294967293
  %1540 = trunc i64 %1539 to i32
  %1541 = add nsw i32 %upper_bound.3, -1
  store i8 22, i8* %.pre1643, align 1, !tbaa !12
  %1542 = trunc i64 %1539 to i8
  %1543 = getelementptr inbounds i8* %b.18.ph, i64 11
  store i8 %1542, i8* %1543, align 1, !tbaa !12
  %1544 = lshr i32 %1540, 8
  %1545 = trunc i32 %1544 to i8
  %1546 = getelementptr inbounds i8* %b.18.ph, i64 12
  store i8 %1545, i8* %1546, align 1, !tbaa !12
  %1547 = trunc i32 %1541 to i8
  %1548 = getelementptr inbounds i8* %b.18.ph, i64 13
  store i8 %1547, i8* %1548, align 1, !tbaa !12
  %1549 = lshr i32 %1541, 8
  %1550 = trunc i32 %1549 to i8
  %1551 = getelementptr inbounds i8* %b.18.ph, i64 14
  store i8 %1550, i8* %1551, align 1, !tbaa !12
  %1552 = getelementptr inbounds i8* %b.18.ph, i64 15
  %1553 = ptrtoint i8* %1552 to i64
  %1554 = sub i64 %1553, %1510
  %1555 = trunc i64 %1554 to i32
  %1556 = icmp eq i8* %1552, %laststart.33.ph
  %.pre1645 = getelementptr inbounds i8* %b.18.ph, i64 20
  br i1 %1556, label %insert_op2.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %1534, %.lr.ph.i
  %pto.02.i = phi i8* [ %1559, %.lr.ph.i ], [ %.pre1645, %1534 ]
  %pfrom.01.i = phi i8* [ %1557, %.lr.ph.i ], [ %1552, %1534 ]
  %1557 = getelementptr inbounds i8* %pfrom.01.i, i64 -1
  %1558 = load i8* %1557, align 1, !tbaa !12
  %1559 = getelementptr inbounds i8* %pto.02.i, i64 -1
  store i8 %1558, i8* %1559, align 1, !tbaa !12
  %1560 = icmp eq i8* %1557, %laststart.33.ph
  br i1 %1560, label %insert_op2.exit, label %.lr.ph.i

insert_op2.exit:                                  ; preds = %.lr.ph.i, %1534
  store i8 23, i8* %laststart.33.ph, align 1, !tbaa !12
  %1561 = trunc i64 %1554 to i8
  store i8 %1561, i8* %1520, align 1, !tbaa !12
  %1562 = lshr i32 %1555, 8
  %1563 = trunc i32 %1562 to i8
  store i8 %1563, i8* %1523, align 1, !tbaa !12
  store i8 %1547, i8* %1525, align 1, !tbaa !12
  store i8 %1550, i8* %1528, align 1, !tbaa !12
  br label %.backedge367

; <label>:1564                                    ; preds = %1319, %1380, %1407, %1399
  store i8* %1317, i8** %p, align 8, !tbaa !13
  %1565 = icmp eq i8* %1317, %1
  br i1 %1565, label %.loopexit, label %1566

; <label>:1566                                    ; preds = %1564
  store i8* %1316, i8** %p, align 8, !tbaa !13
  %1567 = load i8* %1317, align 1, !tbaa !12
  br i1 %31, label %1568, label %1572

; <label>:1568                                    ; preds = %1566
  %1569 = zext i8 %1567 to i64
  %1570 = getelementptr inbounds i8* %3, i64 %1569
  %1571 = load i8* %1570, align 1, !tbaa !12
  br label %1572

; <label>:1572                                    ; preds = %1566, %1568
  %c.15 = phi i8 [ %1571, %1568 ], [ %1567, %1566 ]
  %1573 = icmp ugt i8* %1316, %pattern
  %or.cond1667 = and i1 %37, %1573
  %1574 = icmp eq i8 %1567, 92
  %or.cond1669 = and i1 %or.cond1667, %1574
  br i1 %or.cond1669, label %1961, label %group_in_compile_stack.exit.thread216

; <label>:1575                                    ; preds = %984
  br i1 %74, label %.preheader331, label %group_in_compile_stack.exit.thread216

.preheader331:                                    ; preds = %1575
  %.pre1589.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer334

.outer334:                                        ; preds = %1608, %1610, %.preheader331
  %.pre1589 = phi i8* [ %.pre1589.pre, %.preheader331 ], [ %1588, %1610 ], [ %1588, %1608 ]
  %fixup_alt_jump.35.ph = phi i8* [ %fixup_alt_jump.01118, %.preheader331 ], [ %fixup_alt_jump.36, %1610 ], [ %fixup_alt_jump.36, %1608 ]
  %begalt.19.ph = phi i8* [ %begalt.01123, %.preheader331 ], [ %1596, %1610 ], [ %1596, %1608 ]
  %laststart.36.ph = phi i8* [ %b.01147, %.preheader331 ], [ %laststart.37, %1610 ], [ %laststart.37, %1608 ]
  %pending_exact.18.ph = phi i8* [ %pending_exact.01132, %.preheader331 ], [ %1613, %1610 ], [ null, %1608 ]
  %b.20.ph = phi i8* [ %b.01147, %.preheader331 ], [ %1593, %1610 ], [ %1593, %1608 ]
  %1576 = ptrtoint i8* %b.20.ph to i64
  br label %1577

; <label>:1577                                    ; preds = %.outer334, %1590
  %1578 = ptrtoint i8* %.pre1589 to i64
  %1579 = sub i64 %1576, %1578
  %1580 = add nsw i64 %1579, 1
  %1581 = load i64* %14, align 8, !tbaa !22
  %1582 = icmp ugt i64 %1580, %1581
  br i1 %1582, label %1583, label %1614

; <label>:1583                                    ; preds = %1577
  %1584 = icmp eq i64 %1581, 65536
  br i1 %1584, label %.loopexit, label %1585

; <label>:1585                                    ; preds = %1583
  %1586 = shl i64 %1581, 1
  %1587 = icmp ugt i64 %1586, 65536
  %.130 = select i1 %1587, i64 65536, i64 %1586
  store i64 %.130, i64* %14, align 8, !tbaa !22
  %1588 = tail call i8* @realloc(i8* %.pre1589, i64 %.130) #7
  store i8* %1588, i8** %17, align 8, !tbaa !10
  %1589 = icmp eq i8* %1588, null
  br i1 %1589, label %.loopexit, label %1590

; <label>:1590                                    ; preds = %1585
  %1591 = icmp eq i8* %.pre1589, %1588
  br i1 %1591, label %1577, label %1592

; <label>:1592                                    ; preds = %1590
  %1593 = getelementptr inbounds i8* %1588, i64 %1579
  %1594 = ptrtoint i8* %begalt.19.ph to i64
  %1595 = sub i64 %1594, %1578
  %1596 = getelementptr inbounds i8* %1588, i64 %1595
  %1597 = icmp eq i8* %fixup_alt_jump.35.ph, null
  br i1 %1597, label %1602, label %1598

; <label>:1598                                    ; preds = %1592
  %1599 = ptrtoint i8* %fixup_alt_jump.35.ph to i64
  %1600 = sub i64 %1599, %1578
  %1601 = getelementptr inbounds i8* %1588, i64 %1600
  br label %1602

; <label>:1602                                    ; preds = %1592, %1598
  %fixup_alt_jump.36 = phi i8* [ %1601, %1598 ], [ null, %1592 ]
  %1603 = icmp eq i8* %laststart.36.ph, null
  br i1 %1603, label %1608, label %1604

; <label>:1604                                    ; preds = %1602
  %1605 = ptrtoint i8* %laststart.36.ph to i64
  %1606 = sub i64 %1605, %1578
  %1607 = getelementptr inbounds i8* %1588, i64 %1606
  br label %1608

; <label>:1608                                    ; preds = %1602, %1604
  %laststart.37 = phi i8* [ %1607, %1604 ], [ null, %1602 ]
  %1609 = icmp eq i8* %pending_exact.18.ph, null
  br i1 %1609, label %.outer334, label %1610

; <label>:1610                                    ; preds = %1608
  %1611 = ptrtoint i8* %pending_exact.18.ph to i64
  %1612 = sub i64 %1611, %1578
  %1613 = getelementptr inbounds i8* %1588, i64 %1612
  br label %.outer334

; <label>:1614                                    ; preds = %1577
  %1615 = getelementptr inbounds i8* %b.20.ph, i64 1
  store i8 24, i8* %b.20.ph, align 1, !tbaa !12
  br label %.backedge367

; <label>:1616                                    ; preds = %984
  br i1 %74, label %.preheader335, label %group_in_compile_stack.exit.thread216

.preheader335:                                    ; preds = %1616
  %.pre1588.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer338

.outer338:                                        ; preds = %1649, %1651, %.preheader335
  %.pre1588 = phi i8* [ %.pre1588.pre, %.preheader335 ], [ %1629, %1651 ], [ %1629, %1649 ]
  %fixup_alt_jump.37.ph = phi i8* [ %fixup_alt_jump.01118, %.preheader335 ], [ %fixup_alt_jump.38, %1651 ], [ %fixup_alt_jump.38, %1649 ]
  %begalt.20.ph = phi i8* [ %begalt.01123, %.preheader335 ], [ %1637, %1651 ], [ %1637, %1649 ]
  %laststart.38.ph = phi i8* [ %b.01147, %.preheader335 ], [ %laststart.39, %1651 ], [ %laststart.39, %1649 ]
  %pending_exact.19.ph = phi i8* [ %pending_exact.01132, %.preheader335 ], [ %1654, %1651 ], [ null, %1649 ]
  %b.21.ph = phi i8* [ %b.01147, %.preheader335 ], [ %1634, %1651 ], [ %1634, %1649 ]
  %1617 = ptrtoint i8* %b.21.ph to i64
  br label %1618

; <label>:1618                                    ; preds = %.outer338, %1631
  %1619 = ptrtoint i8* %.pre1588 to i64
  %1620 = sub i64 %1617, %1619
  %1621 = add nsw i64 %1620, 1
  %1622 = load i64* %14, align 8, !tbaa !22
  %1623 = icmp ugt i64 %1621, %1622
  br i1 %1623, label %1624, label %1655

; <label>:1624                                    ; preds = %1618
  %1625 = icmp eq i64 %1622, 65536
  br i1 %1625, label %.loopexit, label %1626

; <label>:1626                                    ; preds = %1624
  %1627 = shl i64 %1622, 1
  %1628 = icmp ugt i64 %1627, 65536
  %.131 = select i1 %1628, i64 65536, i64 %1627
  store i64 %.131, i64* %14, align 8, !tbaa !22
  %1629 = tail call i8* @realloc(i8* %.pre1588, i64 %.131) #7
  store i8* %1629, i8** %17, align 8, !tbaa !10
  %1630 = icmp eq i8* %1629, null
  br i1 %1630, label %.loopexit, label %1631

; <label>:1631                                    ; preds = %1626
  %1632 = icmp eq i8* %.pre1588, %1629
  br i1 %1632, label %1618, label %1633

; <label>:1633                                    ; preds = %1631
  %1634 = getelementptr inbounds i8* %1629, i64 %1620
  %1635 = ptrtoint i8* %begalt.20.ph to i64
  %1636 = sub i64 %1635, %1619
  %1637 = getelementptr inbounds i8* %1629, i64 %1636
  %1638 = icmp eq i8* %fixup_alt_jump.37.ph, null
  br i1 %1638, label %1643, label %1639

; <label>:1639                                    ; preds = %1633
  %1640 = ptrtoint i8* %fixup_alt_jump.37.ph to i64
  %1641 = sub i64 %1640, %1619
  %1642 = getelementptr inbounds i8* %1629, i64 %1641
  br label %1643

; <label>:1643                                    ; preds = %1633, %1639
  %fixup_alt_jump.38 = phi i8* [ %1642, %1639 ], [ null, %1633 ]
  %1644 = icmp eq i8* %laststart.38.ph, null
  br i1 %1644, label %1649, label %1645

; <label>:1645                                    ; preds = %1643
  %1646 = ptrtoint i8* %laststart.38.ph to i64
  %1647 = sub i64 %1646, %1619
  %1648 = getelementptr inbounds i8* %1629, i64 %1647
  br label %1649

; <label>:1649                                    ; preds = %1643, %1645
  %laststart.39 = phi i8* [ %1648, %1645 ], [ null, %1643 ]
  %1650 = icmp eq i8* %pending_exact.19.ph, null
  br i1 %1650, label %.outer338, label %1651

; <label>:1651                                    ; preds = %1649
  %1652 = ptrtoint i8* %pending_exact.19.ph to i64
  %1653 = sub i64 %1652, %1619
  %1654 = getelementptr inbounds i8* %1629, i64 %1653
  br label %.outer338

; <label>:1655                                    ; preds = %1618
  %1656 = getelementptr inbounds i8* %b.21.ph, i64 1
  store i8 25, i8* %b.21.ph, align 1, !tbaa !12
  br label %.backedge367

; <label>:1657                                    ; preds = %984
  br i1 %74, label %.preheader339, label %group_in_compile_stack.exit.thread216

.preheader339:                                    ; preds = %1657
  %.pre1587.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer342

.outer342:                                        ; preds = %1690, %1692, %.preheader339
  %.pre1587 = phi i8* [ %.pre1587.pre, %.preheader339 ], [ %1670, %1692 ], [ %1670, %1690 ]
  %fixup_alt_jump.39.ph = phi i8* [ %fixup_alt_jump.01118, %.preheader339 ], [ %fixup_alt_jump.40, %1692 ], [ %fixup_alt_jump.40, %1690 ]
  %begalt.21.ph = phi i8* [ %begalt.01123, %.preheader339 ], [ %1678, %1692 ], [ %1678, %1690 ]
  %laststart.40.ph = phi i8* [ %laststart.01128, %.preheader339 ], [ %laststart.41, %1692 ], [ %laststart.41, %1690 ]
  %pending_exact.20.ph = phi i8* [ %pending_exact.01132, %.preheader339 ], [ %1695, %1692 ], [ null, %1690 ]
  %b.22.ph = phi i8* [ %b.01147, %.preheader339 ], [ %1675, %1692 ], [ %1675, %1690 ]
  %1658 = ptrtoint i8* %b.22.ph to i64
  br label %1659

; <label>:1659                                    ; preds = %.outer342, %1672
  %1660 = ptrtoint i8* %.pre1587 to i64
  %1661 = sub i64 %1658, %1660
  %1662 = add nsw i64 %1661, 1
  %1663 = load i64* %14, align 8, !tbaa !22
  %1664 = icmp ugt i64 %1662, %1663
  br i1 %1664, label %1665, label %1696

; <label>:1665                                    ; preds = %1659
  %1666 = icmp eq i64 %1663, 65536
  br i1 %1666, label %.loopexit, label %1667

; <label>:1667                                    ; preds = %1665
  %1668 = shl i64 %1663, 1
  %1669 = icmp ugt i64 %1668, 65536
  %.132 = select i1 %1669, i64 65536, i64 %1668
  store i64 %.132, i64* %14, align 8, !tbaa !22
  %1670 = tail call i8* @realloc(i8* %.pre1587, i64 %.132) #7
  store i8* %1670, i8** %17, align 8, !tbaa !10
  %1671 = icmp eq i8* %1670, null
  br i1 %1671, label %.loopexit, label %1672

; <label>:1672                                    ; preds = %1667
  %1673 = icmp eq i8* %.pre1587, %1670
  br i1 %1673, label %1659, label %1674

; <label>:1674                                    ; preds = %1672
  %1675 = getelementptr inbounds i8* %1670, i64 %1661
  %1676 = ptrtoint i8* %begalt.21.ph to i64
  %1677 = sub i64 %1676, %1660
  %1678 = getelementptr inbounds i8* %1670, i64 %1677
  %1679 = icmp eq i8* %fixup_alt_jump.39.ph, null
  br i1 %1679, label %1684, label %1680

; <label>:1680                                    ; preds = %1674
  %1681 = ptrtoint i8* %fixup_alt_jump.39.ph to i64
  %1682 = sub i64 %1681, %1660
  %1683 = getelementptr inbounds i8* %1670, i64 %1682
  br label %1684

; <label>:1684                                    ; preds = %1674, %1680
  %fixup_alt_jump.40 = phi i8* [ %1683, %1680 ], [ null, %1674 ]
  %1685 = icmp eq i8* %laststart.40.ph, null
  br i1 %1685, label %1690, label %1686

; <label>:1686                                    ; preds = %1684
  %1687 = ptrtoint i8* %laststart.40.ph to i64
  %1688 = sub i64 %1687, %1660
  %1689 = getelementptr inbounds i8* %1670, i64 %1688
  br label %1690

; <label>:1690                                    ; preds = %1684, %1686
  %laststart.41 = phi i8* [ %1689, %1686 ], [ null, %1684 ]
  %1691 = icmp eq i8* %pending_exact.20.ph, null
  br i1 %1691, label %.outer342, label %1692

; <label>:1692                                    ; preds = %1690
  %1693 = ptrtoint i8* %pending_exact.20.ph to i64
  %1694 = sub i64 %1693, %1660
  %1695 = getelementptr inbounds i8* %1670, i64 %1694
  br label %.outer342

; <label>:1696                                    ; preds = %1659
  %1697 = getelementptr inbounds i8* %b.22.ph, i64 1
  store i8 26, i8* %b.22.ph, align 1, !tbaa !12
  br label %.backedge367

; <label>:1698                                    ; preds = %984
  br i1 %74, label %.preheader343, label %group_in_compile_stack.exit.thread216

.preheader343:                                    ; preds = %1698
  %.pre1586.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer346

.outer346:                                        ; preds = %1731, %1733, %.preheader343
  %.pre1586 = phi i8* [ %.pre1586.pre, %.preheader343 ], [ %1711, %1733 ], [ %1711, %1731 ]
  %fixup_alt_jump.41.ph = phi i8* [ %fixup_alt_jump.01118, %.preheader343 ], [ %fixup_alt_jump.42, %1733 ], [ %fixup_alt_jump.42, %1731 ]
  %begalt.22.ph = phi i8* [ %begalt.01123, %.preheader343 ], [ %1719, %1733 ], [ %1719, %1731 ]
  %laststart.42.ph = phi i8* [ %laststart.01128, %.preheader343 ], [ %laststart.43, %1733 ], [ %laststart.43, %1731 ]
  %pending_exact.21.ph = phi i8* [ %pending_exact.01132, %.preheader343 ], [ %1736, %1733 ], [ null, %1731 ]
  %b.23.ph = phi i8* [ %b.01147, %.preheader343 ], [ %1716, %1733 ], [ %1716, %1731 ]
  %1699 = ptrtoint i8* %b.23.ph to i64
  br label %1700

; <label>:1700                                    ; preds = %.outer346, %1713
  %1701 = ptrtoint i8* %.pre1586 to i64
  %1702 = sub i64 %1699, %1701
  %1703 = add nsw i64 %1702, 1
  %1704 = load i64* %14, align 8, !tbaa !22
  %1705 = icmp ugt i64 %1703, %1704
  br i1 %1705, label %1706, label %1737

; <label>:1706                                    ; preds = %1700
  %1707 = icmp eq i64 %1704, 65536
  br i1 %1707, label %.loopexit, label %1708

; <label>:1708                                    ; preds = %1706
  %1709 = shl i64 %1704, 1
  %1710 = icmp ugt i64 %1709, 65536
  %.133 = select i1 %1710, i64 65536, i64 %1709
  store i64 %.133, i64* %14, align 8, !tbaa !22
  %1711 = tail call i8* @realloc(i8* %.pre1586, i64 %.133) #7
  store i8* %1711, i8** %17, align 8, !tbaa !10
  %1712 = icmp eq i8* %1711, null
  br i1 %1712, label %.loopexit, label %1713

; <label>:1713                                    ; preds = %1708
  %1714 = icmp eq i8* %.pre1586, %1711
  br i1 %1714, label %1700, label %1715

; <label>:1715                                    ; preds = %1713
  %1716 = getelementptr inbounds i8* %1711, i64 %1702
  %1717 = ptrtoint i8* %begalt.22.ph to i64
  %1718 = sub i64 %1717, %1701
  %1719 = getelementptr inbounds i8* %1711, i64 %1718
  %1720 = icmp eq i8* %fixup_alt_jump.41.ph, null
  br i1 %1720, label %1725, label %1721

; <label>:1721                                    ; preds = %1715
  %1722 = ptrtoint i8* %fixup_alt_jump.41.ph to i64
  %1723 = sub i64 %1722, %1701
  %1724 = getelementptr inbounds i8* %1711, i64 %1723
  br label %1725

; <label>:1725                                    ; preds = %1715, %1721
  %fixup_alt_jump.42 = phi i8* [ %1724, %1721 ], [ null, %1715 ]
  %1726 = icmp eq i8* %laststart.42.ph, null
  br i1 %1726, label %1731, label %1727

; <label>:1727                                    ; preds = %1725
  %1728 = ptrtoint i8* %laststart.42.ph to i64
  %1729 = sub i64 %1728, %1701
  %1730 = getelementptr inbounds i8* %1711, i64 %1729
  br label %1731

; <label>:1731                                    ; preds = %1725, %1727
  %laststart.43 = phi i8* [ %1730, %1727 ], [ null, %1725 ]
  %1732 = icmp eq i8* %pending_exact.21.ph, null
  br i1 %1732, label %.outer346, label %1733

; <label>:1733                                    ; preds = %1731
  %1734 = ptrtoint i8* %pending_exact.21.ph to i64
  %1735 = sub i64 %1734, %1701
  %1736 = getelementptr inbounds i8* %1711, i64 %1735
  br label %.outer346

; <label>:1737                                    ; preds = %1700
  %1738 = getelementptr inbounds i8* %b.23.ph, i64 1
  store i8 27, i8* %b.23.ph, align 1, !tbaa !12
  br label %.backedge367

; <label>:1739                                    ; preds = %984
  br i1 %74, label %.preheader347, label %group_in_compile_stack.exit.thread216

.preheader347:                                    ; preds = %1739
  %.pre1585.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer350

.outer350:                                        ; preds = %1772, %1774, %.preheader347
  %.pre1585 = phi i8* [ %.pre1585.pre, %.preheader347 ], [ %1752, %1774 ], [ %1752, %1772 ]
  %fixup_alt_jump.43.ph = phi i8* [ %fixup_alt_jump.01118, %.preheader347 ], [ %fixup_alt_jump.44, %1774 ], [ %fixup_alt_jump.44, %1772 ]
  %begalt.23.ph = phi i8* [ %begalt.01123, %.preheader347 ], [ %1760, %1774 ], [ %1760, %1772 ]
  %laststart.44.ph = phi i8* [ %laststart.01128, %.preheader347 ], [ %laststart.45, %1774 ], [ %laststart.45, %1772 ]
  %pending_exact.22.ph = phi i8* [ %pending_exact.01132, %.preheader347 ], [ %1777, %1774 ], [ null, %1772 ]
  %b.24.ph = phi i8* [ %b.01147, %.preheader347 ], [ %1757, %1774 ], [ %1757, %1772 ]
  %1740 = ptrtoint i8* %b.24.ph to i64
  br label %1741

; <label>:1741                                    ; preds = %.outer350, %1754
  %1742 = ptrtoint i8* %.pre1585 to i64
  %1743 = sub i64 %1740, %1742
  %1744 = add nsw i64 %1743, 1
  %1745 = load i64* %14, align 8, !tbaa !22
  %1746 = icmp ugt i64 %1744, %1745
  br i1 %1746, label %1747, label %1778

; <label>:1747                                    ; preds = %1741
  %1748 = icmp eq i64 %1745, 65536
  br i1 %1748, label %.loopexit, label %1749

; <label>:1749                                    ; preds = %1747
  %1750 = shl i64 %1745, 1
  %1751 = icmp ugt i64 %1750, 65536
  %.134 = select i1 %1751, i64 65536, i64 %1750
  store i64 %.134, i64* %14, align 8, !tbaa !22
  %1752 = tail call i8* @realloc(i8* %.pre1585, i64 %.134) #7
  store i8* %1752, i8** %17, align 8, !tbaa !10
  %1753 = icmp eq i8* %1752, null
  br i1 %1753, label %.loopexit, label %1754

; <label>:1754                                    ; preds = %1749
  %1755 = icmp eq i8* %.pre1585, %1752
  br i1 %1755, label %1741, label %1756

; <label>:1756                                    ; preds = %1754
  %1757 = getelementptr inbounds i8* %1752, i64 %1743
  %1758 = ptrtoint i8* %begalt.23.ph to i64
  %1759 = sub i64 %1758, %1742
  %1760 = getelementptr inbounds i8* %1752, i64 %1759
  %1761 = icmp eq i8* %fixup_alt_jump.43.ph, null
  br i1 %1761, label %1766, label %1762

; <label>:1762                                    ; preds = %1756
  %1763 = ptrtoint i8* %fixup_alt_jump.43.ph to i64
  %1764 = sub i64 %1763, %1742
  %1765 = getelementptr inbounds i8* %1752, i64 %1764
  br label %1766

; <label>:1766                                    ; preds = %1756, %1762
  %fixup_alt_jump.44 = phi i8* [ %1765, %1762 ], [ null, %1756 ]
  %1767 = icmp eq i8* %laststart.44.ph, null
  br i1 %1767, label %1772, label %1768

; <label>:1768                                    ; preds = %1766
  %1769 = ptrtoint i8* %laststart.44.ph to i64
  %1770 = sub i64 %1769, %1742
  %1771 = getelementptr inbounds i8* %1752, i64 %1770
  br label %1772

; <label>:1772                                    ; preds = %1766, %1768
  %laststart.45 = phi i8* [ %1771, %1768 ], [ null, %1766 ]
  %1773 = icmp eq i8* %pending_exact.22.ph, null
  br i1 %1773, label %.outer350, label %1774

; <label>:1774                                    ; preds = %1772
  %1775 = ptrtoint i8* %pending_exact.22.ph to i64
  %1776 = sub i64 %1775, %1742
  %1777 = getelementptr inbounds i8* %1752, i64 %1776
  br label %.outer350

; <label>:1778                                    ; preds = %1741
  %1779 = getelementptr inbounds i8* %b.24.ph, i64 1
  store i8 28, i8* %b.24.ph, align 1, !tbaa !12
  br label %.backedge367

; <label>:1780                                    ; preds = %984
  br i1 %74, label %.preheader351, label %group_in_compile_stack.exit.thread216

.preheader351:                                    ; preds = %1780
  %.pre1584.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer354

.outer354:                                        ; preds = %1813, %1815, %.preheader351
  %.pre1584 = phi i8* [ %.pre1584.pre, %.preheader351 ], [ %1793, %1815 ], [ %1793, %1813 ]
  %fixup_alt_jump.45.ph = phi i8* [ %fixup_alt_jump.01118, %.preheader351 ], [ %fixup_alt_jump.46, %1815 ], [ %fixup_alt_jump.46, %1813 ]
  %begalt.24.ph = phi i8* [ %begalt.01123, %.preheader351 ], [ %1801, %1815 ], [ %1801, %1813 ]
  %laststart.46.ph = phi i8* [ %laststart.01128, %.preheader351 ], [ %laststart.47, %1815 ], [ %laststart.47, %1813 ]
  %pending_exact.23.ph = phi i8* [ %pending_exact.01132, %.preheader351 ], [ %1818, %1815 ], [ null, %1813 ]
  %b.25.ph = phi i8* [ %b.01147, %.preheader351 ], [ %1798, %1815 ], [ %1798, %1813 ]
  %1781 = ptrtoint i8* %b.25.ph to i64
  br label %1782

; <label>:1782                                    ; preds = %.outer354, %1795
  %1783 = ptrtoint i8* %.pre1584 to i64
  %1784 = sub i64 %1781, %1783
  %1785 = add nsw i64 %1784, 1
  %1786 = load i64* %14, align 8, !tbaa !22
  %1787 = icmp ugt i64 %1785, %1786
  br i1 %1787, label %1788, label %1819

; <label>:1788                                    ; preds = %1782
  %1789 = icmp eq i64 %1786, 65536
  br i1 %1789, label %.loopexit, label %1790

; <label>:1790                                    ; preds = %1788
  %1791 = shl i64 %1786, 1
  %1792 = icmp ugt i64 %1791, 65536
  %.135 = select i1 %1792, i64 65536, i64 %1791
  store i64 %.135, i64* %14, align 8, !tbaa !22
  %1793 = tail call i8* @realloc(i8* %.pre1584, i64 %.135) #7
  store i8* %1793, i8** %17, align 8, !tbaa !10
  %1794 = icmp eq i8* %1793, null
  br i1 %1794, label %.loopexit, label %1795

; <label>:1795                                    ; preds = %1790
  %1796 = icmp eq i8* %.pre1584, %1793
  br i1 %1796, label %1782, label %1797

; <label>:1797                                    ; preds = %1795
  %1798 = getelementptr inbounds i8* %1793, i64 %1784
  %1799 = ptrtoint i8* %begalt.24.ph to i64
  %1800 = sub i64 %1799, %1783
  %1801 = getelementptr inbounds i8* %1793, i64 %1800
  %1802 = icmp eq i8* %fixup_alt_jump.45.ph, null
  br i1 %1802, label %1807, label %1803

; <label>:1803                                    ; preds = %1797
  %1804 = ptrtoint i8* %fixup_alt_jump.45.ph to i64
  %1805 = sub i64 %1804, %1783
  %1806 = getelementptr inbounds i8* %1793, i64 %1805
  br label %1807

; <label>:1807                                    ; preds = %1797, %1803
  %fixup_alt_jump.46 = phi i8* [ %1806, %1803 ], [ null, %1797 ]
  %1808 = icmp eq i8* %laststart.46.ph, null
  br i1 %1808, label %1813, label %1809

; <label>:1809                                    ; preds = %1807
  %1810 = ptrtoint i8* %laststart.46.ph to i64
  %1811 = sub i64 %1810, %1783
  %1812 = getelementptr inbounds i8* %1793, i64 %1811
  br label %1813

; <label>:1813                                    ; preds = %1807, %1809
  %laststart.47 = phi i8* [ %1812, %1809 ], [ null, %1807 ]
  %1814 = icmp eq i8* %pending_exact.23.ph, null
  br i1 %1814, label %.outer354, label %1815

; <label>:1815                                    ; preds = %1813
  %1816 = ptrtoint i8* %pending_exact.23.ph to i64
  %1817 = sub i64 %1816, %1783
  %1818 = getelementptr inbounds i8* %1793, i64 %1817
  br label %.outer354

; <label>:1819                                    ; preds = %1782
  %1820 = getelementptr inbounds i8* %b.25.ph, i64 1
  store i8 29, i8* %b.25.ph, align 1, !tbaa !12
  br label %.backedge367

; <label>:1821                                    ; preds = %984
  br i1 %74, label %.preheader355, label %group_in_compile_stack.exit.thread216

.preheader355:                                    ; preds = %1821
  %.pre1583.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer358

.outer358:                                        ; preds = %1854, %1856, %.preheader355
  %.pre1583 = phi i8* [ %.pre1583.pre, %.preheader355 ], [ %1834, %1856 ], [ %1834, %1854 ]
  %fixup_alt_jump.47.ph = phi i8* [ %fixup_alt_jump.01118, %.preheader355 ], [ %fixup_alt_jump.48, %1856 ], [ %fixup_alt_jump.48, %1854 ]
  %begalt.25.ph = phi i8* [ %begalt.01123, %.preheader355 ], [ %1842, %1856 ], [ %1842, %1854 ]
  %laststart.48.ph = phi i8* [ %laststart.01128, %.preheader355 ], [ %laststart.49, %1856 ], [ %laststart.49, %1854 ]
  %pending_exact.24.ph = phi i8* [ %pending_exact.01132, %.preheader355 ], [ %1859, %1856 ], [ null, %1854 ]
  %b.26.ph = phi i8* [ %b.01147, %.preheader355 ], [ %1839, %1856 ], [ %1839, %1854 ]
  %1822 = ptrtoint i8* %b.26.ph to i64
  br label %1823

; <label>:1823                                    ; preds = %.outer358, %1836
  %1824 = ptrtoint i8* %.pre1583 to i64
  %1825 = sub i64 %1822, %1824
  %1826 = add nsw i64 %1825, 1
  %1827 = load i64* %14, align 8, !tbaa !22
  %1828 = icmp ugt i64 %1826, %1827
  br i1 %1828, label %1829, label %1860

; <label>:1829                                    ; preds = %1823
  %1830 = icmp eq i64 %1827, 65536
  br i1 %1830, label %.loopexit, label %1831

; <label>:1831                                    ; preds = %1829
  %1832 = shl i64 %1827, 1
  %1833 = icmp ugt i64 %1832, 65536
  %.136 = select i1 %1833, i64 65536, i64 %1832
  store i64 %.136, i64* %14, align 8, !tbaa !22
  %1834 = tail call i8* @realloc(i8* %.pre1583, i64 %.136) #7
  store i8* %1834, i8** %17, align 8, !tbaa !10
  %1835 = icmp eq i8* %1834, null
  br i1 %1835, label %.loopexit, label %1836

; <label>:1836                                    ; preds = %1831
  %1837 = icmp eq i8* %.pre1583, %1834
  br i1 %1837, label %1823, label %1838

; <label>:1838                                    ; preds = %1836
  %1839 = getelementptr inbounds i8* %1834, i64 %1825
  %1840 = ptrtoint i8* %begalt.25.ph to i64
  %1841 = sub i64 %1840, %1824
  %1842 = getelementptr inbounds i8* %1834, i64 %1841
  %1843 = icmp eq i8* %fixup_alt_jump.47.ph, null
  br i1 %1843, label %1848, label %1844

; <label>:1844                                    ; preds = %1838
  %1845 = ptrtoint i8* %fixup_alt_jump.47.ph to i64
  %1846 = sub i64 %1845, %1824
  %1847 = getelementptr inbounds i8* %1834, i64 %1846
  br label %1848

; <label>:1848                                    ; preds = %1838, %1844
  %fixup_alt_jump.48 = phi i8* [ %1847, %1844 ], [ null, %1838 ]
  %1849 = icmp eq i8* %laststart.48.ph, null
  br i1 %1849, label %1854, label %1850

; <label>:1850                                    ; preds = %1848
  %1851 = ptrtoint i8* %laststart.48.ph to i64
  %1852 = sub i64 %1851, %1824
  %1853 = getelementptr inbounds i8* %1834, i64 %1852
  br label %1854

; <label>:1854                                    ; preds = %1848, %1850
  %laststart.49 = phi i8* [ %1853, %1850 ], [ null, %1848 ]
  %1855 = icmp eq i8* %pending_exact.24.ph, null
  br i1 %1855, label %.outer358, label %1856

; <label>:1856                                    ; preds = %1854
  %1857 = ptrtoint i8* %pending_exact.24.ph to i64
  %1858 = sub i64 %1857, %1824
  %1859 = getelementptr inbounds i8* %1834, i64 %1858
  br label %.outer358

; <label>:1860                                    ; preds = %1823
  %1861 = getelementptr inbounds i8* %b.26.ph, i64 1
  store i8 11, i8* %b.26.ph, align 1, !tbaa !12
  br label %.backedge367

; <label>:1862                                    ; preds = %984
  br i1 %74, label %.preheader359, label %group_in_compile_stack.exit.thread216

.preheader359:                                    ; preds = %1862
  %.pre1582.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer362

.outer362:                                        ; preds = %1895, %1897, %.preheader359
  %.pre1582 = phi i8* [ %.pre1582.pre, %.preheader359 ], [ %1875, %1897 ], [ %1875, %1895 ]
  %fixup_alt_jump.49.ph = phi i8* [ %fixup_alt_jump.01118, %.preheader359 ], [ %fixup_alt_jump.50, %1897 ], [ %fixup_alt_jump.50, %1895 ]
  %begalt.26.ph = phi i8* [ %begalt.01123, %.preheader359 ], [ %1883, %1897 ], [ %1883, %1895 ]
  %laststart.50.ph = phi i8* [ %laststart.01128, %.preheader359 ], [ %laststart.51, %1897 ], [ %laststart.51, %1895 ]
  %pending_exact.25.ph = phi i8* [ %pending_exact.01132, %.preheader359 ], [ %1900, %1897 ], [ null, %1895 ]
  %b.27.ph = phi i8* [ %b.01147, %.preheader359 ], [ %1880, %1897 ], [ %1880, %1895 ]
  %1863 = ptrtoint i8* %b.27.ph to i64
  br label %1864

; <label>:1864                                    ; preds = %.outer362, %1877
  %1865 = ptrtoint i8* %.pre1582 to i64
  %1866 = sub i64 %1863, %1865
  %1867 = add nsw i64 %1866, 1
  %1868 = load i64* %14, align 8, !tbaa !22
  %1869 = icmp ugt i64 %1867, %1868
  br i1 %1869, label %1870, label %1901

; <label>:1870                                    ; preds = %1864
  %1871 = icmp eq i64 %1868, 65536
  br i1 %1871, label %.loopexit, label %1872

; <label>:1872                                    ; preds = %1870
  %1873 = shl i64 %1868, 1
  %1874 = icmp ugt i64 %1873, 65536
  %.137 = select i1 %1874, i64 65536, i64 %1873
  store i64 %.137, i64* %14, align 8, !tbaa !22
  %1875 = tail call i8* @realloc(i8* %.pre1582, i64 %.137) #7
  store i8* %1875, i8** %17, align 8, !tbaa !10
  %1876 = icmp eq i8* %1875, null
  br i1 %1876, label %.loopexit, label %1877

; <label>:1877                                    ; preds = %1872
  %1878 = icmp eq i8* %.pre1582, %1875
  br i1 %1878, label %1864, label %1879

; <label>:1879                                    ; preds = %1877
  %1880 = getelementptr inbounds i8* %1875, i64 %1866
  %1881 = ptrtoint i8* %begalt.26.ph to i64
  %1882 = sub i64 %1881, %1865
  %1883 = getelementptr inbounds i8* %1875, i64 %1882
  %1884 = icmp eq i8* %fixup_alt_jump.49.ph, null
  br i1 %1884, label %1889, label %1885

; <label>:1885                                    ; preds = %1879
  %1886 = ptrtoint i8* %fixup_alt_jump.49.ph to i64
  %1887 = sub i64 %1886, %1865
  %1888 = getelementptr inbounds i8* %1875, i64 %1887
  br label %1889

; <label>:1889                                    ; preds = %1879, %1885
  %fixup_alt_jump.50 = phi i8* [ %1888, %1885 ], [ null, %1879 ]
  %1890 = icmp eq i8* %laststart.50.ph, null
  br i1 %1890, label %1895, label %1891

; <label>:1891                                    ; preds = %1889
  %1892 = ptrtoint i8* %laststart.50.ph to i64
  %1893 = sub i64 %1892, %1865
  %1894 = getelementptr inbounds i8* %1875, i64 %1893
  br label %1895

; <label>:1895                                    ; preds = %1889, %1891
  %laststart.51 = phi i8* [ %1894, %1891 ], [ null, %1889 ]
  %1896 = icmp eq i8* %pending_exact.25.ph, null
  br i1 %1896, label %.outer362, label %1897

; <label>:1897                                    ; preds = %1895
  %1898 = ptrtoint i8* %pending_exact.25.ph to i64
  %1899 = sub i64 %1898, %1865
  %1900 = getelementptr inbounds i8* %1875, i64 %1899
  br label %.outer362

; <label>:1901                                    ; preds = %1864
  %1902 = getelementptr inbounds i8* %b.27.ph, i64 1
  store i8 12, i8* %b.27.ph, align 1, !tbaa !12
  br label %.backedge367

; <label>:1903                                    ; preds = %984, %984, %984, %984, %984, %984, %984, %984, %984
  br i1 %76, label %1904, label %group_in_compile_stack.exit.thread216

; <label>:1904                                    ; preds = %1903
  %1905 = add i8 %986, -48
  %1906 = zext i8 %1905 to i32
  %1907 = icmp ugt i32 %1906, %regnum.01114
  br i1 %1907, label %1908, label %1910

; <label>:1908                                    ; preds = %1904
  %1909 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137 to i8*
  tail call void @free(i8* %1909) #8
  br label %.loopexit

; <label>:1910                                    ; preds = %1904
  %1911 = lshr i64 %compile_stack.sroa.40.01143, 32
  %1912 = trunc i64 %1911 to i32
  br label %1913

; <label>:1913                                    ; preds = %1915, %1910
  %this_element.0.in.i = phi i32 [ %1912, %1910 ], [ %this_element.0.i, %1915 ]
  %this_element.0.i = add i32 %this_element.0.in.i, -1
  %1914 = icmp sgt i32 %this_element.0.i, -1
  br i1 %1914, label %1915, label %group_in_compile_stack.exit.thread.preheader

group_in_compile_stack.exit.thread.preheader:     ; preds = %1913
  %.pre1581.pre = load i8** %17, align 8, !tbaa !10
  br label %group_in_compile_stack.exit.thread.outer

; <label>:1915                                    ; preds = %1913
  %1916 = sext i32 %this_element.0.i to i64
  %1917 = getelementptr inbounds %struct.compile_stack_elt_t* %compile_stack.sroa.0.01137, i64 %1916, i32 4
  %1918 = load i32* %1917, align 4, !tbaa !27
  %1919 = icmp eq i32 %1918, %1906
  br i1 %1919, label %group_in_compile_stack.exit.thread216, label %1913

group_in_compile_stack.exit.thread:               ; preds = %group_in_compile_stack.exit.thread.outer, %1932
  %1920 = ptrtoint i8* %.pre1581 to i64
  %1921 = sub i64 %1952, %1920
  %1922 = add nsw i64 %1921, 2
  %1923 = load i64* %14, align 8, !tbaa !22
  %1924 = icmp ugt i64 %1922, %1923
  br i1 %1924, label %1925, label %1957

; <label>:1925                                    ; preds = %group_in_compile_stack.exit.thread
  %1926 = icmp eq i64 %1923, 65536
  br i1 %1926, label %.loopexit, label %1927

; <label>:1927                                    ; preds = %1925
  %1928 = shl i64 %1923, 1
  %1929 = icmp ugt i64 %1928, 65536
  %.138 = select i1 %1929, i64 65536, i64 %1928
  store i64 %.138, i64* %14, align 8, !tbaa !22
  %1930 = tail call i8* @realloc(i8* %.pre1581, i64 %.138) #7
  store i8* %1930, i8** %17, align 8, !tbaa !10
  %1931 = icmp eq i8* %1930, null
  br i1 %1931, label %.loopexit, label %1932

; <label>:1932                                    ; preds = %1927
  %1933 = icmp eq i8* %.pre1581, %1930
  br i1 %1933, label %group_in_compile_stack.exit.thread, label %1934

; <label>:1934                                    ; preds = %1932
  %1935 = getelementptr inbounds i8* %1930, i64 %1921
  %1936 = ptrtoint i8* %begalt.27.ph to i64
  %1937 = sub i64 %1936, %1920
  %1938 = getelementptr inbounds i8* %1930, i64 %1937
  %1939 = icmp eq i8* %fixup_alt_jump.51.ph, null
  br i1 %1939, label %1944, label %1940

; <label>:1940                                    ; preds = %1934
  %1941 = ptrtoint i8* %fixup_alt_jump.51.ph to i64
  %1942 = sub i64 %1941, %1920
  %1943 = getelementptr inbounds i8* %1930, i64 %1942
  br label %1944

; <label>:1944                                    ; preds = %1934, %1940
  %fixup_alt_jump.52 = phi i8* [ %1943, %1940 ], [ null, %1934 ]
  %1945 = icmp eq i8* %laststart.52.ph, null
  br i1 %1945, label %1950, label %1946

; <label>:1946                                    ; preds = %1944
  %1947 = ptrtoint i8* %laststart.52.ph to i64
  %1948 = sub i64 %1947, %1920
  %1949 = getelementptr inbounds i8* %1930, i64 %1948
  br label %1950

; <label>:1950                                    ; preds = %1944, %1946
  %laststart.53 = phi i8* [ %1949, %1946 ], [ null, %1944 ]
  %1951 = icmp eq i8* %pending_exact.26.ph, null
  br i1 %1951, label %group_in_compile_stack.exit.thread.outer, label %1953

group_in_compile_stack.exit.thread.outer:         ; preds = %1950, %1953, %group_in_compile_stack.exit.thread.preheader
  %.pre1581 = phi i8* [ %.pre1581.pre, %group_in_compile_stack.exit.thread.preheader ], [ %1930, %1953 ], [ %1930, %1950 ]
  %fixup_alt_jump.51.ph = phi i8* [ %fixup_alt_jump.01118, %group_in_compile_stack.exit.thread.preheader ], [ %fixup_alt_jump.52, %1953 ], [ %fixup_alt_jump.52, %1950 ]
  %begalt.27.ph = phi i8* [ %begalt.01123, %group_in_compile_stack.exit.thread.preheader ], [ %1938, %1953 ], [ %1938, %1950 ]
  %laststart.52.ph = phi i8* [ %b.01147, %group_in_compile_stack.exit.thread.preheader ], [ %laststart.53, %1953 ], [ %laststart.53, %1950 ]
  %pending_exact.26.ph = phi i8* [ %pending_exact.01132, %group_in_compile_stack.exit.thread.preheader ], [ %1956, %1953 ], [ null, %1950 ]
  %b.28.ph = phi i8* [ %b.01147, %group_in_compile_stack.exit.thread.preheader ], [ %1935, %1953 ], [ %1935, %1950 ]
  %1952 = ptrtoint i8* %b.28.ph to i64
  br label %group_in_compile_stack.exit.thread

; <label>:1953                                    ; preds = %1950
  %1954 = ptrtoint i8* %pending_exact.26.ph to i64
  %1955 = sub i64 %1954, %1920
  %1956 = getelementptr inbounds i8* %1930, i64 %1955
  br label %group_in_compile_stack.exit.thread.outer

; <label>:1957                                    ; preds = %group_in_compile_stack.exit.thread
  %1958 = getelementptr inbounds i8* %b.28.ph, i64 1
  store i8 8, i8* %b.28.ph, align 1, !tbaa !12
  %1959 = getelementptr inbounds i8* %b.28.ph, i64 2
  store i8 %1905, i8* %1958, align 1, !tbaa !12
  br label %.backedge367

; <label>:1960                                    ; preds = %984, %984
  br i1 %33, label %1961, label %198

; <label>:1961                                    ; preds = %1572, %1310, %988, %1083, %1080, %1209, %1960, %984, %1309
  %c.16 = phi i8 [ %986, %984 ], [ %986, %1960 ], [ %986, %1309 ], [ %986, %1209 ], [ %986, %1080 ], [ %986, %1083 ], [ %986, %988 ], [ %986, %1310 ], [ %c.15, %1572 ]
  br i1 %31, label %1962, label %group_in_compile_stack.exit.thread216

; <label>:1962                                    ; preds = %1961
  %1963 = zext i8 %c.16 to i64
  %1964 = getelementptr inbounds i8* %3, i64 %1963
  %1965 = load i8* %1964, align 1, !tbaa !12
  br label %group_in_compile_stack.exit.thread216

group_in_compile_stack.exit.thread216:            ; preds = %1915, %154, %96, %at_begline_loc_p.exit, %at_endline_loc_p.exit, %979, %1962, %1961, %197, %975, %976, %977, %978, %1140, %1210, %1572, %1575, %1616, %1657, %1698, %1739, %1780, %1821, %1862, %1903, %204, %85
  %fixup_alt_jump.53 = phi i8* [ %fixup_alt_jump.01118, %85 ], [ %fixup_alt_jump.01118, %204 ], [ %fixup_alt_jump.01118, %1903 ], [ %fixup_alt_jump.01118, %1862 ], [ %fixup_alt_jump.01118, %1821 ], [ %fixup_alt_jump.01118, %1780 ], [ %fixup_alt_jump.01118, %1739 ], [ %fixup_alt_jump.01118, %1698 ], [ %fixup_alt_jump.01118, %1657 ], [ %fixup_alt_jump.01118, %1616 ], [ %fixup_alt_jump.01118, %1575 ], [ %fixup_alt_jump.01118, %1572 ], [ %fixup_alt_jump.01118, %1210 ], [ %fixup_alt_jump.23, %1140 ], [ %fixup_alt_jump.01118, %979 ], [ %fixup_alt_jump.01118, %978 ], [ %fixup_alt_jump.01118, %977 ], [ %fixup_alt_jump.01118, %976 ], [ %fixup_alt_jump.01118, %975 ], [ %fixup_alt_jump.01118, %197 ], [ %fixup_alt_jump.01118, %at_endline_loc_p.exit ], [ %fixup_alt_jump.01118, %at_begline_loc_p.exit ], [ %fixup_alt_jump.01118, %1961 ], [ %fixup_alt_jump.01118, %1962 ], [ %fixup_alt_jump.01118, %96 ], [ %fixup_alt_jump.01118, %154 ], [ %fixup_alt_jump.01118, %1915 ]
  %begalt.28 = phi i8* [ %begalt.01123, %85 ], [ %begalt.01123, %204 ], [ %begalt.01123, %1903 ], [ %begalt.01123, %1862 ], [ %begalt.01123, %1821 ], [ %begalt.01123, %1780 ], [ %begalt.01123, %1739 ], [ %begalt.01123, %1698 ], [ %begalt.01123, %1657 ], [ %begalt.01123, %1616 ], [ %begalt.01123, %1575 ], [ %begalt.01123, %1572 ], [ %begalt.01123, %1210 ], [ %begalt.12, %1140 ], [ %begalt.01123, %979 ], [ %begalt.01123, %978 ], [ %begalt.01123, %977 ], [ %begalt.01123, %976 ], [ %begalt.01123, %975 ], [ %begalt.01123, %197 ], [ %begalt.01123, %at_endline_loc_p.exit ], [ %begalt.01123, %at_begline_loc_p.exit ], [ %begalt.01123, %1961 ], [ %begalt.01123, %1962 ], [ %begalt.01123, %96 ], [ %begalt.01123, %154 ], [ %begalt.01123, %1915 ]
  %laststart.54 = phi i8* [ %laststart.01128, %85 ], [ null, %204 ], [ %laststart.01128, %1903 ], [ %laststart.01128, %1862 ], [ %laststart.01128, %1821 ], [ %laststart.01128, %1780 ], [ %laststart.01128, %1739 ], [ %laststart.01128, %1698 ], [ %laststart.01128, %1657 ], [ %laststart.01128, %1616 ], [ %laststart.01128, %1575 ], [ %laststart.01128, %1572 ], [ %laststart.01128, %1210 ], [ %laststart.23, %1140 ], [ %laststart.01128, %979 ], [ %laststart.01128, %978 ], [ %laststart.01128, %977 ], [ %laststart.01128, %976 ], [ %laststart.01128, %975 ], [ %laststart.01128, %197 ], [ %laststart.01128, %at_endline_loc_p.exit ], [ %laststart.01128, %at_begline_loc_p.exit ], [ %laststart.01128, %1961 ], [ %laststart.01128, %1962 ], [ %laststart.01128, %96 ], [ %laststart.01128, %154 ], [ %laststart.01128, %1915 ]
  %pending_exact.27 = phi i8* [ %pending_exact.01132, %85 ], [ %pending_exact.01132, %204 ], [ %pending_exact.01132, %1903 ], [ %pending_exact.01132, %1862 ], [ %pending_exact.01132, %1821 ], [ %pending_exact.01132, %1780 ], [ %pending_exact.01132, %1739 ], [ %pending_exact.01132, %1698 ], [ %pending_exact.01132, %1657 ], [ %pending_exact.01132, %1616 ], [ %pending_exact.01132, %1575 ], [ %pending_exact.01132, %1572 ], [ %pending_exact.01132, %1210 ], [ %pending_exact.12, %1140 ], [ %pending_exact.01132, %979 ], [ %pending_exact.01132, %978 ], [ %pending_exact.01132, %977 ], [ %pending_exact.01132, %976 ], [ %pending_exact.01132, %975 ], [ %pending_exact.01132, %197 ], [ %pending_exact.01132, %at_endline_loc_p.exit ], [ %pending_exact.01132, %at_begline_loc_p.exit ], [ %pending_exact.01132, %1961 ], [ %pending_exact.01132, %1962 ], [ %pending_exact.01132, %96 ], [ %pending_exact.01132, %154 ], [ %pending_exact.01132, %1915 ]
  %b.29 = phi i8* [ %b.01147, %85 ], [ %b.01147, %204 ], [ %b.01147, %1903 ], [ %b.01147, %1862 ], [ %b.01147, %1821 ], [ %b.01147, %1780 ], [ %b.01147, %1739 ], [ %b.01147, %1698 ], [ %b.01147, %1657 ], [ %b.01147, %1616 ], [ %b.01147, %1575 ], [ %b.01147, %1572 ], [ %b.01147, %1210 ], [ %b.13, %1140 ], [ %b.01147, %979 ], [ %b.01147, %978 ], [ %b.01147, %977 ], [ %b.01147, %976 ], [ %b.01147, %975 ], [ %b.01147, %197 ], [ %b.01147, %at_endline_loc_p.exit ], [ %b.01147, %at_begline_loc_p.exit ], [ %b.01147, %1961 ], [ %b.01147, %1962 ], [ %b.01147, %96 ], [ %b.01147, %154 ], [ %b.01147, %1915 ]
  %c.17 = phi i8 [ %c.0, %85 ], [ %c.1, %204 ], [ %986, %1903 ], [ %986, %1862 ], [ %986, %1821 ], [ %986, %1780 ], [ %986, %1739 ], [ %986, %1698 ], [ %986, %1657 ], [ %986, %1616 ], [ %986, %1575 ], [ %c.15, %1572 ], [ %c.7, %1210 ], [ %c.6, %1140 ], [ %c.0, %979 ], [ %c.0, %978 ], [ %c.0, %977 ], [ %c.0, %976 ], [ %c.0, %975 ], [ %c.0, %197 ], [ %c.0, %at_endline_loc_p.exit ], [ %c.0, %at_begline_loc_p.exit ], [ %c.16, %1961 ], [ %1965, %1962 ], [ %c.0, %96 ], [ %c.0, %154 ], [ %986, %1915 ]
  %1966 = icmp eq i8* %pending_exact.27, null
  br i1 %1966, label %.preheader250, label %1967

; <label>:1967                                    ; preds = %group_in_compile_stack.exit.thread216
  %1968 = load i8* %pending_exact.27, align 1, !tbaa !12
  %1969 = zext i8 %1968 to i64
  %.sum = add nuw nsw i64 %1969, 1
  %1970 = getelementptr inbounds i8* %pending_exact.27, i64 %.sum
  %1971 = icmp ne i8* %1970, %b.29
  %1972 = icmp eq i8 %1968, -1
  %or.cond140 = or i1 %1972, %1971
  br i1 %or.cond140, label %.preheader250, label %1973

; <label>:1973                                    ; preds = %1967
  %1974 = load i8** %p, align 8, !tbaa !13
  %1975 = load i8* %1974, align 1, !tbaa !12
  switch i8 %1975, label %1976 [
    i8 42, label %.preheader250
    i8 94, label %.preheader250
  ]

; <label>:1976                                    ; preds = %1973
  br i1 %33, label %1982, label %1977

; <label>:1977                                    ; preds = %1976
  %1978 = icmp eq i8 %1975, 92
  br i1 %1978, label %1979, label %1983

; <label>:1979                                    ; preds = %1977
  %1980 = getelementptr inbounds i8* %1974, i64 1
  %1981 = load i8* %1980, align 1, !tbaa !12
  switch i8 %1981, label %1983 [
    i8 43, label %.preheader250
    i8 63, label %.preheader250
  ]

; <label>:1982                                    ; preds = %1976
  switch i8 %1975, label %1983 [
    i8 43, label %.preheader250
    i8 63, label %.preheader250
  ]

; <label>:1983                                    ; preds = %1982, %1979, %1977
  br i1 %35, label %.preheader241, label %1984

; <label>:1984                                    ; preds = %1983
  br i1 %37, label %1987, label %1985

; <label>:1985                                    ; preds = %1984
  %1986 = icmp eq i8 %1975, 123
  br i1 %1986, label %.preheader250, label %.preheader241

; <label>:1987                                    ; preds = %1984
  %1988 = icmp eq i8 %1975, 92
  br i1 %1988, label %1989, label %.preheader241

; <label>:1989                                    ; preds = %1987
  %1990 = getelementptr inbounds i8* %1974, i64 1
  %1991 = load i8* %1990, align 1, !tbaa !12
  %1992 = icmp eq i8 %1991, 123
  br i1 %1992, label %.preheader250, label %.preheader241

.preheader250:                                    ; preds = %1982, %1982, %1979, %1979, %1973, %1973, %1967, %group_in_compile_stack.exit.thread216, %1989, %1985
  %pending_exact.28.ph = phi i8* [ %pending_exact.27, %1985 ], [ %pending_exact.27, %1989 ], [ null, %group_in_compile_stack.exit.thread216 ], [ %pending_exact.27, %1967 ], [ %pending_exact.27, %1973 ], [ %pending_exact.27, %1973 ], [ %pending_exact.27, %1979 ], [ %pending_exact.27, %1979 ], [ %pending_exact.27, %1982 ], [ %pending_exact.27, %1982 ]
  %.pre1604.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer253

.outer253:                                        ; preds = %2025, %2027, %.preheader250
  %.pre1604 = phi i8* [ %.pre1604.pre, %.preheader250 ], [ %2005, %2027 ], [ %2005, %2025 ]
  %fixup_alt_jump.54.ph = phi i8* [ %fixup_alt_jump.53, %.preheader250 ], [ %fixup_alt_jump.55, %2027 ], [ %fixup_alt_jump.55, %2025 ]
  %begalt.29.ph = phi i8* [ %begalt.28, %.preheader250 ], [ %2013, %2027 ], [ %2013, %2025 ]
  %laststart.55.ph = phi i8* [ %b.29, %.preheader250 ], [ %laststart.56, %2027 ], [ %laststart.56, %2025 ]
  %pending_exact.28.ph254 = phi i8* [ %pending_exact.28.ph, %.preheader250 ], [ %2030, %2027 ], [ null, %2025 ]
  %b.30.ph = phi i8* [ %b.29, %.preheader250 ], [ %2010, %2027 ], [ %2010, %2025 ]
  %1993 = ptrtoint i8* %b.30.ph to i64
  br label %1994

; <label>:1994                                    ; preds = %.outer253, %2007
  %1995 = ptrtoint i8* %.pre1604 to i64
  %1996 = sub i64 %1993, %1995
  %1997 = add nsw i64 %1996, 2
  %1998 = load i64* %14, align 8, !tbaa !22
  %1999 = icmp ugt i64 %1997, %1998
  br i1 %1999, label %2000, label %2031

; <label>:2000                                    ; preds = %1994
  %2001 = icmp eq i64 %1998, 65536
  br i1 %2001, label %.loopexit, label %2002

; <label>:2002                                    ; preds = %2000
  %2003 = shl i64 %1998, 1
  %2004 = icmp ugt i64 %2003, 65536
  %.141 = select i1 %2004, i64 65536, i64 %2003
  store i64 %.141, i64* %14, align 8, !tbaa !22
  %2005 = tail call i8* @realloc(i8* %.pre1604, i64 %.141) #7
  store i8* %2005, i8** %17, align 8, !tbaa !10
  %2006 = icmp eq i8* %2005, null
  br i1 %2006, label %.loopexit, label %2007

; <label>:2007                                    ; preds = %2002
  %2008 = icmp eq i8* %.pre1604, %2005
  br i1 %2008, label %1994, label %2009

; <label>:2009                                    ; preds = %2007
  %2010 = getelementptr inbounds i8* %2005, i64 %1996
  %2011 = ptrtoint i8* %begalt.29.ph to i64
  %2012 = sub i64 %2011, %1995
  %2013 = getelementptr inbounds i8* %2005, i64 %2012
  %2014 = icmp eq i8* %fixup_alt_jump.54.ph, null
  br i1 %2014, label %2019, label %2015

; <label>:2015                                    ; preds = %2009
  %2016 = ptrtoint i8* %fixup_alt_jump.54.ph to i64
  %2017 = sub i64 %2016, %1995
  %2018 = getelementptr inbounds i8* %2005, i64 %2017
  br label %2019

; <label>:2019                                    ; preds = %2009, %2015
  %fixup_alt_jump.55 = phi i8* [ %2018, %2015 ], [ null, %2009 ]
  %2020 = icmp eq i8* %laststart.55.ph, null
  br i1 %2020, label %2025, label %2021

; <label>:2021                                    ; preds = %2019
  %2022 = ptrtoint i8* %laststart.55.ph to i64
  %2023 = sub i64 %2022, %1995
  %2024 = getelementptr inbounds i8* %2005, i64 %2023
  br label %2025

; <label>:2025                                    ; preds = %2019, %2021
  %laststart.56 = phi i8* [ %2024, %2021 ], [ null, %2019 ]
  %2026 = icmp eq i8* %pending_exact.28.ph254, null
  br i1 %2026, label %.outer253, label %2027

; <label>:2027                                    ; preds = %2025
  %2028 = ptrtoint i8* %pending_exact.28.ph254 to i64
  %2029 = sub i64 %2028, %1995
  %2030 = getelementptr inbounds i8* %2005, i64 %2029
  br label %.outer253

; <label>:2031                                    ; preds = %1994
  %2032 = getelementptr inbounds i8* %b.30.ph, i64 1
  store i8 2, i8* %b.30.ph, align 1, !tbaa !12
  %2033 = getelementptr inbounds i8* %b.30.ph, i64 2
  store i8 0, i8* %2032, align 1, !tbaa !12
  br label %.preheader241

.preheader241:                                    ; preds = %1985, %1987, %1989, %2031, %1983
  %fixup_alt_jump.56.ph = phi i8* [ %fixup_alt_jump.53, %1983 ], [ %fixup_alt_jump.53, %1987 ], [ %fixup_alt_jump.53, %1989 ], [ %fixup_alt_jump.53, %1985 ], [ %fixup_alt_jump.54.ph, %2031 ]
  %begalt.30.ph = phi i8* [ %begalt.28, %1983 ], [ %begalt.28, %1987 ], [ %begalt.28, %1989 ], [ %begalt.28, %1985 ], [ %begalt.29.ph, %2031 ]
  %laststart.57.ph = phi i8* [ %laststart.54, %1983 ], [ %laststart.54, %1987 ], [ %laststart.54, %1989 ], [ %laststart.54, %1985 ], [ %laststart.55.ph, %2031 ]
  %pending_exact.29.ph = phi i8* [ %pending_exact.27, %1983 ], [ %pending_exact.27, %1987 ], [ %pending_exact.27, %1989 ], [ %pending_exact.27, %1985 ], [ %2032, %2031 ]
  %b.31.ph = phi i8* [ %b.29, %1983 ], [ %b.29, %1987 ], [ %b.29, %1989 ], [ %b.29, %1985 ], [ %2033, %2031 ]
  %.pre1605.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer244

.outer244:                                        ; preds = %2066, %2068, %.preheader241
  %.pre1605 = phi i8* [ %.pre1605.pre, %.preheader241 ], [ %2046, %2068 ], [ %2046, %2066 ]
  %fixup_alt_jump.56.ph245 = phi i8* [ %fixup_alt_jump.56.ph, %.preheader241 ], [ %fixup_alt_jump.57, %2068 ], [ %fixup_alt_jump.57, %2066 ]
  %begalt.30.ph246 = phi i8* [ %begalt.30.ph, %.preheader241 ], [ %2054, %2068 ], [ %2054, %2066 ]
  %laststart.57.ph247 = phi i8* [ %laststart.57.ph, %.preheader241 ], [ %laststart.58, %2068 ], [ %laststart.58, %2066 ]
  %pending_exact.29.ph248 = phi i8* [ %pending_exact.29.ph, %.preheader241 ], [ %2071, %2068 ], [ null, %2066 ]
  %b.31.ph249 = phi i8* [ %b.31.ph, %.preheader241 ], [ %2051, %2068 ], [ %2051, %2066 ]
  %2034 = ptrtoint i8* %b.31.ph249 to i64
  br label %2035

; <label>:2035                                    ; preds = %.outer244, %2048
  %2036 = ptrtoint i8* %.pre1605 to i64
  %2037 = sub i64 %2034, %2036
  %2038 = add nsw i64 %2037, 1
  %2039 = load i64* %14, align 8, !tbaa !22
  %2040 = icmp ugt i64 %2038, %2039
  br i1 %2040, label %2041, label %2072

; <label>:2041                                    ; preds = %2035
  %2042 = icmp eq i64 %2039, 65536
  br i1 %2042, label %.loopexit, label %2043

; <label>:2043                                    ; preds = %2041
  %2044 = shl i64 %2039, 1
  %2045 = icmp ugt i64 %2044, 65536
  %.142 = select i1 %2045, i64 65536, i64 %2044
  store i64 %.142, i64* %14, align 8, !tbaa !22
  %2046 = tail call i8* @realloc(i8* %.pre1605, i64 %.142) #7
  store i8* %2046, i8** %17, align 8, !tbaa !10
  %2047 = icmp eq i8* %2046, null
  br i1 %2047, label %.loopexit, label %2048

; <label>:2048                                    ; preds = %2043
  %2049 = icmp eq i8* %.pre1605, %2046
  br i1 %2049, label %2035, label %2050

; <label>:2050                                    ; preds = %2048
  %2051 = getelementptr inbounds i8* %2046, i64 %2037
  %2052 = ptrtoint i8* %begalt.30.ph246 to i64
  %2053 = sub i64 %2052, %2036
  %2054 = getelementptr inbounds i8* %2046, i64 %2053
  %2055 = icmp eq i8* %fixup_alt_jump.56.ph245, null
  br i1 %2055, label %2060, label %2056

; <label>:2056                                    ; preds = %2050
  %2057 = ptrtoint i8* %fixup_alt_jump.56.ph245 to i64
  %2058 = sub i64 %2057, %2036
  %2059 = getelementptr inbounds i8* %2046, i64 %2058
  br label %2060

; <label>:2060                                    ; preds = %2050, %2056
  %fixup_alt_jump.57 = phi i8* [ %2059, %2056 ], [ null, %2050 ]
  %2061 = icmp eq i8* %laststart.57.ph247, null
  br i1 %2061, label %2066, label %2062

; <label>:2062                                    ; preds = %2060
  %2063 = ptrtoint i8* %laststart.57.ph247 to i64
  %2064 = sub i64 %2063, %2036
  %2065 = getelementptr inbounds i8* %2046, i64 %2064
  br label %2066

; <label>:2066                                    ; preds = %2060, %2062
  %laststart.58 = phi i8* [ %2065, %2062 ], [ null, %2060 ]
  %2067 = icmp eq i8* %pending_exact.29.ph248, null
  br i1 %2067, label %.outer244, label %2068

; <label>:2068                                    ; preds = %2066
  %2069 = ptrtoint i8* %pending_exact.29.ph248 to i64
  %2070 = sub i64 %2069, %2036
  %2071 = getelementptr inbounds i8* %2046, i64 %2070
  br label %.outer244

; <label>:2072                                    ; preds = %2035
  %2073 = getelementptr inbounds i8* %b.31.ph249, i64 1
  store i8 %c.17, i8* %b.31.ph249, align 1, !tbaa !12
  %2074 = load i8* %pending_exact.29.ph248, align 1, !tbaa !12
  %2075 = add i8 %2074, 1
  store i8 %2075, i8* %pending_exact.29.ph248, align 1, !tbaa !12
  br label %.backedge367

._crit_edge1154:                                  ; preds = %.backedge367
  %2076 = icmp eq i8* %fixup_alt_jump.0.be, null
  br i1 %2076, label %2088, label %2077

; <label>:2077                                    ; preds = %._crit_edge1154
  %2078 = ptrtoint i8* %b.0.be to i64
  %2079 = ptrtoint i8* %fixup_alt_jump.0.be to i64
  %2080 = sub i64 %2078, %2079
  %2081 = add i64 %2080, 4294967293
  %2082 = trunc i64 %2081 to i32
  store i8 14, i8* %fixup_alt_jump.0.be, align 1, !tbaa !12
  %2083 = trunc i64 %2081 to i8
  %2084 = getelementptr inbounds i8* %fixup_alt_jump.0.be, i64 1
  store i8 %2083, i8* %2084, align 1, !tbaa !12
  %2085 = lshr i32 %2082, 8
  %2086 = trunc i32 %2085 to i8
  %2087 = getelementptr inbounds i8* %fixup_alt_jump.0.be, i64 2
  store i8 %2086, i8* %2087, align 1, !tbaa !12
  br label %2088

; <label>:2088                                    ; preds = %._crit_edge1154, %2077
  %fixup_alt_jump.0.lcssa1655 = phi i8* [ null, %._crit_edge1154 ], [ %fixup_alt_jump.0.be, %2077 ]
  %2089 = icmp ult i64 %compile_stack.sroa.40.0.be, 4294967296
  br i1 %2089, label %.thread1656, label %2090

; <label>:2090                                    ; preds = %2088
  %2091 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.0.be to i8*
  tail call void @free(i8* %2091) #8
  br label %.loopexit

.thread1656:                                      ; preds = %init_syntax_once.exit._crit_edge, %2088
  %b.0.lcssa16501661 = phi i8* [ %b.0.be, %2088 ], [ %29, %init_syntax_once.exit._crit_edge ]
  %compile_stack.sroa.0.0.lcssa16521660 = phi %struct.compile_stack_elt_t* [ %compile_stack.sroa.0.0.be, %2088 ], [ %5, %init_syntax_once.exit._crit_edge ]
  %pending_exact.0.lcssa16531659 = phi i8* [ %pending_exact.0.be, %2088 ], [ null, %init_syntax_once.exit._crit_edge ]
  %laststart.0.lcssa16541658 = phi i8* [ %laststart.0.be, %2088 ], [ null, %init_syntax_once.exit._crit_edge ]
  %fixup_alt_jump.0.lcssa16551657 = phi i8* [ %fixup_alt_jump.0.lcssa1655, %2088 ], [ null, %init_syntax_once.exit._crit_edge ]
  %2092 = and i64 %syntax, 262144
  %2093 = icmp eq i64 %2092, 0
  br i1 %2093, label %2131, label %.preheader

.preheader:                                       ; preds = %.thread1656
  %.pre1606.pre = load i8** %17, align 8, !tbaa !10
  br label %.outer

.outer:                                           ; preds = %2123, %2125, %.preheader
  %.pre1606 = phi i8* [ %.pre1606.pre, %.preheader ], [ %2106, %2125 ], [ %2106, %2123 ]
  %fixup_alt_jump.58.ph = phi i8* [ %fixup_alt_jump.0.lcssa16551657, %.preheader ], [ %fixup_alt_jump.59, %2125 ], [ %fixup_alt_jump.59, %2123 ]
  %laststart.59.ph = phi i8* [ %laststart.0.lcssa16541658, %.preheader ], [ %laststart.60, %2125 ], [ %laststart.60, %2123 ]
  %pending_exact.30.ph = phi i8* [ %pending_exact.0.lcssa16531659, %.preheader ], [ %2128, %2125 ], [ null, %2123 ]
  %b.32.ph = phi i8* [ %b.0.lcssa16501661, %.preheader ], [ %2111, %2125 ], [ %2111, %2123 ]
  %2094 = ptrtoint i8* %b.32.ph to i64
  br label %2095

; <label>:2095                                    ; preds = %.outer, %2108
  %2096 = ptrtoint i8* %.pre1606 to i64
  %2097 = sub i64 %2094, %2096
  %2098 = add nsw i64 %2097, 1
  %2099 = load i64* %14, align 8, !tbaa !22
  %2100 = icmp ugt i64 %2098, %2099
  br i1 %2100, label %2101, label %2129

; <label>:2101                                    ; preds = %2095
  %2102 = icmp eq i64 %2099, 65536
  br i1 %2102, label %.loopexit, label %2103

; <label>:2103                                    ; preds = %2101
  %2104 = shl i64 %2099, 1
  %2105 = icmp ugt i64 %2104, 65536
  %.143 = select i1 %2105, i64 65536, i64 %2104
  store i64 %.143, i64* %14, align 8, !tbaa !22
  %2106 = tail call i8* @realloc(i8* %.pre1606, i64 %.143) #7
  store i8* %2106, i8** %17, align 8, !tbaa !10
  %2107 = icmp eq i8* %2106, null
  br i1 %2107, label %.loopexit, label %2108

; <label>:2108                                    ; preds = %2103
  %2109 = icmp eq i8* %.pre1606, %2106
  br i1 %2109, label %2095, label %2110

; <label>:2110                                    ; preds = %2108
  %2111 = getelementptr inbounds i8* %2106, i64 %2097
  %2112 = icmp eq i8* %fixup_alt_jump.58.ph, null
  br i1 %2112, label %2117, label %2113

; <label>:2113                                    ; preds = %2110
  %2114 = ptrtoint i8* %fixup_alt_jump.58.ph to i64
  %2115 = sub i64 %2114, %2096
  %2116 = getelementptr inbounds i8* %2106, i64 %2115
  br label %2117

; <label>:2117                                    ; preds = %2110, %2113
  %fixup_alt_jump.59 = phi i8* [ %2116, %2113 ], [ null, %2110 ]
  %2118 = icmp eq i8* %laststart.59.ph, null
  br i1 %2118, label %2123, label %2119

; <label>:2119                                    ; preds = %2117
  %2120 = ptrtoint i8* %laststart.59.ph to i64
  %2121 = sub i64 %2120, %2096
  %2122 = getelementptr inbounds i8* %2106, i64 %2121
  br label %2123

; <label>:2123                                    ; preds = %2117, %2119
  %laststart.60 = phi i8* [ %2122, %2119 ], [ null, %2117 ]
  %2124 = icmp eq i8* %pending_exact.30.ph, null
  br i1 %2124, label %.outer, label %2125

; <label>:2125                                    ; preds = %2123
  %2126 = ptrtoint i8* %pending_exact.30.ph to i64
  %2127 = sub i64 %2126, %2096
  %2128 = getelementptr inbounds i8* %2106, i64 %2127
  br label %.outer

; <label>:2129                                    ; preds = %2095
  %2130 = getelementptr inbounds i8* %b.32.ph, i64 1
  store i8 1, i8* %b.32.ph, align 1, !tbaa !12
  br label %2131

; <label>:2131                                    ; preds = %.thread1656, %2129
  %b.33 = phi i8* [ %2130, %2129 ], [ %b.0.lcssa16501661, %.thread1656 ]
  %2132 = bitcast %struct.compile_stack_elt_t* %compile_stack.sroa.0.0.lcssa16521660 to i8*
  tail call void @free(i8* %2132) #8
  %2133 = load i8** %17, align 8, !tbaa !10
  %2134 = ptrtoint i8* %b.33 to i64
  %2135 = ptrtoint i8* %2133 to i64
  %2136 = sub i64 %2134, %2135
  store i64 %2136, i64* %12, align 8, !tbaa !11
  br label %.loopexit

.loopexit:                                        ; preds = %1564, %1388, %997, %779, %713, %1927, %1925, %1872, %1870, %1831, %1829, %1790, %1788, %1749, %1747, %1708, %1706, %1667, %1665, %1626, %1624, %1585, %1583, %1477, %1475, %1419, %1417, %1220, %1218, %1287, %1285, %1097, %1095, %1181, %1179, %1042, %1040, %493, %491, %531, %529, %583, %581, %703, %.outer240, %449, %447, %266, %264, %352, %350, %410, %408, %166, %164, %109, %107, %2002, %2000, %2043, %2041, %742, %2103, %2101, %0, %2131, %2090, %1908, %1405, %1400, %1386, %1381, %1320, %1141, %1084, %982, %783, %777, %718, %708, %696, %672, %642, %.outer287._crit_edge, %483, %240, %202, %27
  %.0 = phi i32 [ 5, %982 ], [ 5, %240 ], [ 13, %202 ], [ 6, %1908 ], [ 9, %1320 ], [ 10, %1381 ], [ 10, %1400 ], [ 13, %1405 ], [ 9, %1386 ], [ 16, %1084 ], [ 16, %1141 ], [ 7, %483 ], [ 7, %.outer287._crit_edge ], [ 5, %642 ], [ 11, %672 ], [ %706, %708 ], [ 7, %718 ], [ 7, %783 ], [ 4, %777 ], [ %694, %696 ], [ 0, %2131 ], [ 8, %2090 ], [ 12, %27 ], [ 12, %0 ], [ 15, %2101 ], [ 12, %2103 ], [ 14, %742 ], [ 15, %2041 ], [ 12, %2043 ], [ 15, %2000 ], [ 12, %2002 ], [ 15, %107 ], [ 12, %109 ], [ 15, %164 ], [ 12, %166 ], [ 15, %408 ], [ 12, %410 ], [ 15, %350 ], [ 12, %352 ], [ 15, %264 ], [ 12, %266 ], [ 15, %447 ], [ 12, %449 ], [ 14, %.outer240 ], [ 14, %703 ], [ 15, %581 ], [ 12, %583 ], [ 15, %529 ], [ 12, %531 ], [ 15, %491 ], [ 12, %493 ], [ 15, %1040 ], [ 12, %1042 ], [ 15, %1179 ], [ 12, %1181 ], [ 15, %1095 ], [ 12, %1097 ], [ 15, %1285 ], [ 12, %1287 ], [ 15, %1218 ], [ 12, %1220 ], [ 15, %1417 ], [ 12, %1419 ], [ 15, %1475 ], [ 12, %1477 ], [ 15, %1583 ], [ 12, %1585 ], [ 15, %1624 ], [ 12, %1626 ], [ 15, %1665 ], [ 12, %1667 ], [ 15, %1706 ], [ 12, %1708 ], [ 15, %1747 ], [ 12, %1749 ], [ 15, %1788 ], [ 12, %1790 ], [ 15, %1829 ], [ 12, %1831 ], [ 15, %1870 ], [ 12, %1872 ], [ 15, %1925 ], [ 12, %1927 ], [ 14, %713 ], [ 14, %779 ], [ 12, %997 ], [ 14, %1388 ], [ 14, %1564 ]
  ret i32 %.0
}
