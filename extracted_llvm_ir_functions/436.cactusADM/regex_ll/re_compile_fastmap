define i32 @re_compile_fastmap(%struct.re_pattern_buffer* nocapture %bufp) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.re_pattern_buffer* %bufp}, i64 0, metadata !110), !dbg !718
  tail call void @llvm.dbg.declare(metadata !719, metadata !113), !dbg !720
  %fastmap1 = getelementptr inbounds %struct.re_pattern_buffer* %bufp, i64 0, i32 4, !dbg !721
  %0 = load i8** %fastmap1, align 8, !dbg !721, !tbaa !722
  tail call void @llvm.dbg.value(metadata !{i8* %0}, i64 0, metadata !126), !dbg !721
  %buffer = getelementptr inbounds %struct.re_pattern_buffer* %bufp, i64 0, i32 0, !dbg !723
  %1 = load i8** %buffer, align 8, !dbg !723, !tbaa !722
  tail call void @llvm.dbg.value(metadata !{i8* %1}, i64 0, metadata !127), !dbg !723
  tail call void @llvm.dbg.value(metadata !{i8* %1}, i64 0, metadata !128), !dbg !724
  %used = getelementptr inbounds %struct.re_pattern_buffer* %bufp, i64 0, i32 2, !dbg !725
  %2 = load i64* %used, align 8, !dbg !725, !tbaa !713
  %add.ptr = getelementptr inbounds i8* %1, i64 %2, !dbg !725
  tail call void @llvm.dbg.value(metadata !{i8* %add.ptr}, i64 0, metadata !129), !dbg !725
  tail call void @llvm.dbg.value(metadata !726, i64 0, metadata !130), !dbg !727
  tail call void @llvm.dbg.value(metadata !728, i64 0, metadata !132), !dbg !729
  %call = tail call noalias i8* @malloc(i64 40) #7, !dbg !730
  %cmp = icmp eq i8* %call, null, !dbg !730
  br i1 %cmp, label %return, label %if.end, !dbg !730

if.end:                                           ; preds = %entry
  %3 = bitcast i8* %call to %union.fail_stack_elt*, !dbg !730
  tail call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 256, i32 1, i1 false), !dbg !732
  %fastmap_accurate = getelementptr inbounds %struct.re_pattern_buffer* %bufp, i64 0, i32 7, !dbg !733
  %bf.load = load i8* %fastmap_accurate, align 8, !dbg !733
  %bf.set = and i8 %bf.load, -10, !dbg !734
  %bf.clear4 = or i8 %bf.set, 8, !dbg !734
  store i8 %bf.clear4, i8* %fastmap_accurate, align 8, !dbg !734
  %arrayidx114 = getelementptr inbounds i8* %0, i64 10, !dbg !735
  %syntax = getelementptr inbounds %struct.re_pattern_buffer* %bufp, i64 0, i32 3, !dbg !736
  br label %while.body, !dbg !737

while.body:                                       ; preds = %if.end253, %land.lhs.true181, %sw.bb28, %if.then127, %if.else130, %if.end155, %sw.bb268, %if.end163, %do.body142, %if.end22, %if.end22, %if.end22, %if.end22, %if.end22, %if.end22, %if.end22, %if.end22, %if.end22, %if.end22, %if.then12, %sw.bb286, %sw.bb288, %for.inc110, %for.inc93, %for.cond60.backedge, %for.end55, %for.cond.backedge, %sw.bb32, %if.end
  %fail_stack.sroa.1.0 = phi i32 [ 5, %if.end ], [ %fail_stack.sroa.1.0, %if.then12 ], [ %fail_stack.sroa.1.0, %sw.bb288 ], [ %fail_stack.sroa.1.0, %sw.bb286 ], [ %fail_stack.sroa.1.0, %sw.bb268 ], [ %fail_stack.sroa.1.0, %do.body142 ], [ %fail_stack.sroa.1.0, %if.end163 ], [ %fail_stack.sroa.1.0, %if.end22 ], [ %fail_stack.sroa.1.0, %if.end22 ], [ %fail_stack.sroa.1.0, %if.end22 ], [ %fail_stack.sroa.1.0, %if.end22 ], [ %fail_stack.sroa.1.0, %if.end22 ], [ %fail_stack.sroa.1.0, %if.end22 ], [ %fail_stack.sroa.1.0, %if.end22 ], [ %fail_stack.sroa.1.0, %if.end22 ], [ %fail_stack.sroa.1.0, %if.end22 ], [ %fail_stack.sroa.1.0, %if.end22 ], [ %fail_stack.sroa.1.0, %if.end155 ], [ %fail_stack.sroa.1.0, %land.lhs.true181 ], [ %fail_stack.sroa.1.3, %if.end253 ], [ %fail_stack.sroa.1.0, %if.else130 ], [ %fail_stack.sroa.1.0, %if.then127 ], [ %fail_stack.sroa.1.0, %sw.bb28 ], [ %fail_stack.sroa.1.0, %for.inc110 ], [ %fail_stack.sroa.1.0, %for.inc93 ], [ %fail_stack.sroa.1.0, %for.cond60.backedge ], [ %fail_stack.sroa.1.0, %for.end55 ], [ %fail_stack.sroa.1.0, %for.cond.backedge ], [ %fail_stack.sroa.1.0, %sw.bb32 ]
  %fail_stack.sroa.0.0 = phi %union.fail_stack_elt* [ %3, %if.end ], [ %fail_stack.sroa.0.0, %if.then12 ], [ %fail_stack.sroa.0.0, %sw.bb288 ], [ %fail_stack.sroa.0.0, %sw.bb286 ], [ %fail_stack.sroa.0.0, %sw.bb268 ], [ %fail_stack.sroa.0.0, %do.body142 ], [ %fail_stack.sroa.0.0, %if.end163 ], [ %fail_stack.sroa.0.0, %if.end22 ], [ %fail_stack.sroa.0.0, %if.end22 ], [ %fail_stack.sroa.0.0, %if.end22 ], [ %fail_stack.sroa.0.0, %if.end22 ], [ %fail_stack.sroa.0.0, %if.end22 ], [ %fail_stack.sroa.0.0, %if.end22 ], [ %fail_stack.sroa.0.0, %if.end22 ], [ %fail_stack.sroa.0.0, %if.end22 ], [ %fail_stack.sroa.0.0, %if.end22 ], [ %fail_stack.sroa.0.0, %if.end22 ], [ %fail_stack.sroa.0.0, %if.end155 ], [ %fail_stack.sroa.0.0, %land.lhs.true181 ], [ %fail_stack.sroa.0.3, %if.end253 ], [ %fail_stack.sroa.0.0, %if.else130 ], [ %fail_stack.sroa.0.0, %if.then127 ], [ %fail_stack.sroa.0.0, %sw.bb28 ], [ %fail_stack.sroa.0.0, %for.inc110 ], [ %fail_stack.sroa.0.0, %for.inc93 ], [ %fail_stack.sroa.0.0, %for.cond60.backedge ], [ %fail_stack.sroa.0.0, %for.end55 ], [ %fail_stack.sroa.0.0, %for.cond.backedge ], [ %fail_stack.sroa.0.0, %sw.bb32 ]
  %fail_stack.sroa.2.0 = phi i32 [ 0, %if.end ], [ %dec, %if.then12 ], [ %fail_stack.sroa.2.0, %sw.bb288 ], [ %fail_stack.sroa.2.0, %sw.bb286 ], [ %fail_stack.sroa.2.0, %sw.bb268 ], [ %fail_stack.sroa.2.0, %do.body142 ], [ 0, %if.end163 ], [ %fail_stack.sroa.2.0, %if.end22 ], [ %fail_stack.sroa.2.0, %if.end22 ], [ %fail_stack.sroa.2.0, %if.end22 ], [ %fail_stack.sroa.2.0, %if.end22 ], [ %fail_stack.sroa.2.0, %if.end22 ], [ %fail_stack.sroa.2.0, %if.end22 ], [ %fail_stack.sroa.2.0, %if.end22 ], [ %fail_stack.sroa.2.0, %if.end22 ], [ %fail_stack.sroa.2.0, %if.end22 ], [ %fail_stack.sroa.2.0, %if.end22 ], [ %fail_stack.sroa.2.0, %if.end155 ], [ %dec192.fail_stack.sroa.2.0, %land.lhs.true181 ], [ %fail_stack.sroa.2.1, %if.end253 ], [ %fail_stack.sroa.2.0, %if.else130 ], [ %fail_stack.sroa.2.0, %if.then127 ], [ %fail_stack.sroa.2.0, %sw.bb28 ], [ %fail_stack.sroa.2.0, %for.inc110 ], [ %fail_stack.sroa.2.0, %for.inc93 ], [ %fail_stack.sroa.2.0, %for.cond60.backedge ], [ %fail_stack.sroa.2.0, %for.end55 ], [ %fail_stack.sroa.2.0, %for.cond.backedge ], [ %fail_stack.sroa.2.0, %sw.bb32 ]
  %p.0 = phi i8* [ %1, %if.end ], [ %5, %if.then12 ], [ %add.ptr289, %sw.bb288 ], [ %add.ptr287, %sw.bb286 ], [ %add.ptr279, %sw.bb268 ], [ %add.ptr151, %do.body142 ], [ %add.ptr177, %if.end163 ], [ %incdec.ptr, %if.end22 ], [ %incdec.ptr, %if.end22 ], [ %incdec.ptr, %if.end22 ], [ %incdec.ptr, %if.end22 ], [ %incdec.ptr, %if.end22 ], [ %incdec.ptr, %if.end22 ], [ %incdec.ptr, %if.end22 ], [ %incdec.ptr, %if.end22 ], [ %incdec.ptr, %if.end22 ], [ %incdec.ptr, %if.end22 ], [ %add.ptr151, %if.end155 ], [ %add.ptr177, %land.lhs.true181 ], [ %add.ptr204.add.ptr265, %if.end253 ], [ %add.ptr, %if.else130 ], [ %add.ptr, %if.then127 ], [ %add.ptr, %sw.bb28 ], [ %add.ptr, %for.inc110 ], [ %add.ptr, %for.inc93 ], [ %add.ptr, %for.cond60.backedge ], [ %add.ptr, %for.end55 ], [ %add.ptr, %for.cond.backedge ], [ %add.ptr, %sw.bb32 ]
  %path_can_be_null.0 = phi i8 [ 1, %if.end ], [ 1, %if.then12 ], [ %path_can_be_null.0, %sw.bb288 ], [ %path_can_be_null.0, %sw.bb286 ], [ %path_can_be_null.0, %sw.bb268 ], [ %path_can_be_null.0, %do.body142 ], [ %path_can_be_null.0, %if.end163 ], [ %path_can_be_null.0, %if.end22 ], [ %path_can_be_null.0, %if.end22 ], [ %path_can_be_null.0, %if.end22 ], [ %path_can_be_null.0, %if.end22 ], [ %path_can_be_null.0, %if.end22 ], [ %path_can_be_null.0, %if.end22 ], [ %path_can_be_null.0, %if.end22 ], [ %path_can_be_null.0, %if.end22 ], [ %path_can_be_null.0, %if.end22 ], [ %path_can_be_null.0, %if.end22 ], [ %path_can_be_null.0, %if.end155 ], [ %path_can_be_null.0, %land.lhs.true181 ], [ %path_can_be_null.0, %if.end253 ], [ 0, %if.else130 ], [ 0, %if.then127 ], [ 0, %sw.bb28 ], [ 0, %for.inc110 ], [ 0, %for.inc93 ], [ 0, %for.cond60.backedge ], [ 0, %for.end55 ], [ 0, %for.cond.backedge ], [ 0, %sw.bb32 ]
  %cmp5 = icmp eq i8* %p.0, %add.ptr, !dbg !738
  br i1 %cmp5, label %if.then8, label %lor.lhs.false, !dbg !738

lor.lhs.false:                                    ; preds = %while.body
  %4 = load i8* %p.0, align 1, !dbg !738, !tbaa !714
  %cmp6 = icmp eq i8 %4, 1, !dbg !738
  br i1 %cmp6, label %if.then8, label %if.end22, !dbg !738

if.then8:                                         ; preds = %lor.lhs.false, %while.body
  %cmp10 = icmp eq i32 %fail_stack.sroa.2.0, 0, !dbg !739
  %bf.load292 = load i8* %fastmap_accurate, align 8, !dbg !741
  %bf.set299 = or i8 %bf.load292, %path_can_be_null.0, !dbg !741
  store i8 %bf.set299, i8* %fastmap_accurate, align 8, !dbg !741
  br i1 %cmp10, label %done, label %if.then12, !dbg !739

if.then12:                                        ; preds = %if.then8
  tail call void @llvm.dbg.value(metadata !726, i64 0, metadata !130), !dbg !742
  %dec = add i32 %fail_stack.sroa.2.0, -1, !dbg !744
  %idxprom = zext i32 %dec to i64, !dbg !744
  %pointer = getelementptr inbounds %union.fail_stack_elt* %fail_stack.sroa.0.0, i64 %idxprom, i32 0, !dbg !744
  %5 = load i8** %pointer, align 8, !dbg !744, !tbaa !722
  tail call void @llvm.dbg.value(metadata !{i8* %5}, i64 0, metadata !128), !dbg !744
  br label %while.body, !dbg !745

if.end22:                                         ; preds = %lor.lhs.false
  %conv = zext i8 %4 to i32, !dbg !738
  %incdec.ptr = getelementptr inbounds i8* %p.0, i64 1, !dbg !746
  tail call void @llvm.dbg.value(metadata !{i8* %incdec.ptr}, i64 0, metadata !128), !dbg !746
  switch i32 %conv, label %sw.default [
    i32 8, label %sw.bb
    i32 2, label %sw.bb28
    i32 4, label %sw.bb32
    i32 5, label %sw.bb45
    i32 24, label %for.body83
    i32 25, label %for.body100
    i32 3, label %sw.bb113
    i32 0, label %while.body
    i32 9, label %while.body
    i32 10, label %while.body
    i32 11, label %while.body
    i32 12, label %while.body
    i32 28, label %while.body
    i32 29, label %while.body
    i32 26, label %while.body
    i32 27, label %while.body
    i32 20, label %while.body
    i32 22, label %do.body142
    i32 17, label %do.body142
    i32 18, label %do.body142
    i32 13, label %do.body142
    i32 14, label %do.body142
    i32 19, label %do.body142
    i32 15, label %do.body196
    i32 16, label %do.body196
    i32 21, label %sw.bb268
    i32 23, label %sw.bb286
    i32 6, label %sw.bb288
    i32 7, label %sw.bb288
  ], !dbg !746

sw.bb:                                            ; preds = %if.end22
  %bf.load25 = load i8* %fastmap_accurate, align 8, !dbg !747
  %bf.set27 = or i8 %bf.load25, 1, !dbg !747
  store i8 %bf.set27, i8* %fastmap_accurate, align 8, !dbg !747
  br label %done, !dbg !748

sw.bb28:                                          ; preds = %if.end22
  %arrayidx29 = getelementptr inbounds i8* %p.0, i64 2, !dbg !749
  %6 = load i8* %arrayidx29, align 1, !dbg !749, !tbaa !714
  %idxprom30 = zext i8 %6 to i64, !dbg !749
  %arrayidx31 = getelementptr inbounds i8* %0, i64 %idxprom30, !dbg !749
  store i8 1, i8* %arrayidx31, align 1, !dbg !749, !tbaa !714
  br label %while.body, !dbg !750

sw.bb32:                                          ; preds = %if.end22
  %7 = load i8* %incdec.ptr, align 1, !dbg !751, !tbaa !714
  %cmp35427 = icmp eq i8 %7, 0, !dbg !751
  br i1 %cmp35427, label %while.body, label %for.body.lr.ph, !dbg !751

for.body.lr.ph:                                   ; preds = %sw.bb32
  %8 = zext i8 %7 to i64
  %9 = shl nuw nsw i64 %8, 3, !dbg !751
  br label %for.body, !dbg !751

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv442 = phi i64 [ %9, %for.body.lr.ph ], [ %indvars.iv.next443, %for.cond.backedge ]
  %indvars.iv.next443 = add i64 %indvars.iv442, -1, !dbg !751
  %10 = trunc i64 %indvars.iv.next443 to i32, !dbg !753
  %div = sdiv i32 %10, 8, !dbg !753
  %idxprom37 = sext i32 %div to i64, !dbg !753
  %incdec.ptr33.sum = add i64 %idxprom37, 2, !dbg !753
  %arrayidx38 = getelementptr inbounds i8* %p.0, i64 %incdec.ptr33.sum, !dbg !753
  %11 = load i8* %arrayidx38, align 1, !dbg !753, !tbaa !714
  %conv39 = zext i8 %11 to i32, !dbg !753
  %rem411 = and i32 %10, 7, !dbg !753
  %shl = shl i32 1, %rem411, !dbg !753
  %and = and i32 %conv39, %shl, !dbg !753
  %tobool = icmp eq i32 %and, 0, !dbg !753
  br i1 %tobool, label %for.cond.backedge, label %if.then40, !dbg !753

for.cond.backedge:                                ; preds = %for.body, %if.then40
  %cmp35 = icmp sgt i32 %10, 0, !dbg !751
  br i1 %cmp35, label %for.body, label %while.body, !dbg !751

if.then40:                                        ; preds = %for.body
  %arrayidx42 = getelementptr inbounds i8* %0, i64 %indvars.iv.next443, !dbg !754
  store i8 1, i8* %arrayidx42, align 1, !dbg !754, !tbaa !714
  br label %for.cond.backedge, !dbg !754

sw.bb45:                                          ; preds = %if.end22
  %12 = load i8* %incdec.ptr, align 1, !dbg !755, !tbaa !714
  %cmp49419 = icmp ult i8 %12, 32, !dbg !755
  br i1 %cmp49419, label %for.end55, label %for.body63.lr.ph, !dbg !755

for.end55:                                        ; preds = %sw.bb45
  %conv46 = zext i8 %12 to i32, !dbg !755
  %13 = shl nuw nsw i32 %conv46, 3, !dbg !755
  %14 = zext i32 %13 to i64
  %scevgep = getelementptr i8* %0, i64 %14
  %15 = or i32 %13, 1, !dbg !755
  %16 = icmp ugt i32 %15, 256
  %.op = add i32 %15, -1, !dbg !755
  %17 = select i1 %16, i32 %.op, i32 255, !dbg !755
  %18 = sub i32 %17, %13, !dbg !755
  %19 = zext i32 %18 to i64
  %20 = add i64 %19, 1, !dbg !755
  call void @llvm.memset.p0i8.i64(i8* %scevgep, i8 1, i64 %20, i32 1, i1 false), !dbg !757
  %.pre = load i8* %incdec.ptr, align 1, !dbg !758, !tbaa !714
  %cmp61423 = icmp eq i8 %.pre, 0, !dbg !758
  br i1 %cmp61423, label %while.body, label %for.body63.lr.ph, !dbg !758

for.body63.lr.ph:                                 ; preds = %sw.bb45, %for.end55
  %21 = phi i8 [ %.pre, %for.end55 ], [ %12, %sw.bb45 ]
  %22 = zext i8 %21 to i64
  %23 = shl nuw nsw i64 %22, 3, !dbg !758
  br label %for.body63, !dbg !758

for.body63:                                       ; preds = %for.body63.lr.ph, %for.cond60.backedge
  %indvars.iv440 = phi i64 [ %23, %for.body63.lr.ph ], [ %indvars.iv.next441, %for.cond60.backedge ]
  %indvars.iv.next441 = add i64 %indvars.iv440, -1, !dbg !758
  %24 = trunc i64 %indvars.iv.next441 to i32, !dbg !760
  %div64 = sdiv i32 %24, 8, !dbg !760
  %idxprom65 = sext i32 %div64 to i64, !dbg !760
  %incdec.ptr56.sum = add i64 %idxprom65, 2, !dbg !760
  %arrayidx66 = getelementptr inbounds i8* %p.0, i64 %incdec.ptr56.sum, !dbg !760
  %25 = load i8* %arrayidx66, align 1, !dbg !760, !tbaa !714
  %conv67 = zext i8 %25 to i32, !dbg !760
  %rem68410 = and i32 %24, 7, !dbg !760
  %shl69 = shl i32 1, %rem68410, !dbg !760
  %and70 = and i32 %conv67, %shl69, !dbg !760
  %tobool71 = icmp eq i32 %and70, 0, !dbg !760
  br i1 %tobool71, label %if.then72, label %for.cond60.backedge, !dbg !760

for.cond60.backedge:                              ; preds = %for.body63, %if.then72
  %cmp61 = icmp sgt i32 %24, 0, !dbg !758
  br i1 %cmp61, label %for.body63, label %while.body, !dbg !758

if.then72:                                        ; preds = %for.body63
  %arrayidx74 = getelementptr inbounds i8* %0, i64 %indvars.iv.next441, !dbg !761
  store i8 1, i8* %arrayidx74, align 1, !dbg !761, !tbaa !714
  br label %for.cond60.backedge, !dbg !761

for.body83:                                       ; preds = %if.end22, %for.inc93
  %indvars.iv433 = phi i64 [ %indvars.iv.next434, %for.inc93 ], [ 0, %if.end22 ]
  %arrayidx85 = getelementptr inbounds [256 x i8]* @re_syntax_table, i64 0, i64 %indvars.iv433, !dbg !762
  %26 = load i8* %arrayidx85, align 1, !dbg !762, !tbaa !714
  %cmp87 = icmp eq i8 %26, 1, !dbg !762
  br i1 %cmp87, label %if.then89, label %for.inc93, !dbg !762

if.then89:                                        ; preds = %for.body83
  %arrayidx91 = getelementptr inbounds i8* %0, i64 %indvars.iv433, !dbg !764
  store i8 1, i8* %arrayidx91, align 1, !dbg !764, !tbaa !714
  br label %for.inc93, !dbg !764

for.inc93:                                        ; preds = %for.body83, %if.then89
  %indvars.iv.next434 = add i64 %indvars.iv433, 1, !dbg !765
  %lftr.wideiv435 = trunc i64 %indvars.iv.next434 to i32, !dbg !765
  %exitcond436 = icmp eq i32 %lftr.wideiv435, 256, !dbg !765
  br i1 %exitcond436, label %while.body, label %for.body83, !dbg !765

for.body100:                                      ; preds = %if.end22, %for.inc110
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc110 ], [ 0, %if.end22 ]
  %arrayidx102 = getelementptr inbounds [256 x i8]* @re_syntax_table, i64 0, i64 %indvars.iv, !dbg !766
  %27 = load i8* %arrayidx102, align 1, !dbg !766, !tbaa !714
  %cmp104 = icmp eq i8 %27, 1, !dbg !766
  br i1 %cmp104, label %for.inc110, label %if.then106, !dbg !766

if.then106:                                       ; preds = %for.body100
  %arrayidx108 = getelementptr inbounds i8* %0, i64 %indvars.iv, !dbg !768
  store i8 1, i8* %arrayidx108, align 1, !dbg !768, !tbaa !714
  br label %for.inc110, !dbg !768

for.inc110:                                       ; preds = %for.body100, %if.then106
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !769
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !769
  %exitcond = icmp eq i32 %lftr.wideiv, 256, !dbg !769
  br i1 %exitcond, label %while.body, label %for.body100, !dbg !769

sw.bb113:                                         ; preds = %if.end22
  %28 = load i8* %arrayidx114, align 1, !dbg !735, !tbaa !714
  tail call void @llvm.dbg.value(metadata !71, i64 0, metadata !111), !dbg !770
  call void @llvm.memset.p0i8.i64(i8* %0, i8 1, i64 256, i32 1, i1 false), !dbg !772
  %29 = load i64* %syntax, align 8, !dbg !736, !tbaa !713
  %and125 = and i64 %29, 64, !dbg !736
  %tobool126 = icmp eq i64 %and125, 0, !dbg !736
  br i1 %tobool126, label %if.then127, label %if.else130, !dbg !736

if.then127:                                       ; preds = %sw.bb113
  store i8 %28, i8* %arrayidx114, align 1, !dbg !773, !tbaa !714
  br label %while.body, !dbg !773

if.else130:                                       ; preds = %sw.bb113
  %bf.load132 = load i8* %fastmap_accurate, align 8, !dbg !774
  %bf.clear133 = and i8 %bf.load132, 1, !dbg !774
  %tobool135 = icmp eq i8 %bf.clear133, 0, !dbg !774
  br i1 %tobool135, label %while.body, label %done, !dbg !774

do.body142:                                       ; preds = %if.end22, %if.end22, %if.end22, %if.end22, %if.end22, %if.end22
  %30 = load i8* %incdec.ptr, align 1, !dbg !775, !tbaa !714
  %conv143 = zext i8 %30 to i32, !dbg !775
  tail call void @llvm.dbg.value(metadata !{i32 %conv143}, i64 0, metadata !111), !dbg !775
  %add.ptr145 = getelementptr inbounds i8* %p.0, i64 2, !dbg !775
  %31 = load i8* %add.ptr145, align 1, !dbg !775, !tbaa !714
  %conv146 = sext i8 %31 to i32, !dbg !775
  %shl147 = shl nsw i32 %conv146, 8, !dbg !775
  %add = or i32 %shl147, %conv143, !dbg !775
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !111), !dbg !775
  %addconv408 = add nsw i32 %add, 3, !dbg !778
  %add.ptr149.sum = sext i32 %addconv408 to i64, !dbg !778
  %add.ptr151 = getelementptr inbounds i8* %p.0, i64 %add.ptr149.sum, !dbg !778
  tail call void @llvm.dbg.value(metadata !{i8* %add.ptr151}, i64 0, metadata !128), !dbg !778
  %cmp152 = icmp sgt i32 %add, 0, !dbg !779
  br i1 %cmp152, label %while.body, label %if.end155, !dbg !779

if.end155:                                        ; preds = %do.body142
  %32 = load i8* %add.ptr151, align 1, !dbg !780, !tbaa !714
  switch i8 %32, label %while.body [
    i8 15, label %if.end163
    i8 21, label %if.end163
  ], !dbg !780

if.end163:                                        ; preds = %if.end155, %if.end155
  %add.ptr151.sum = add i64 %add.ptr149.sum, 1, !dbg !781
  %incdec.ptr164 = getelementptr inbounds i8* %p.0, i64 %add.ptr151.sum, !dbg !781
  tail call void @llvm.dbg.value(metadata !{i8* %incdec.ptr164}, i64 0, metadata !128), !dbg !781
  %33 = load i8* %incdec.ptr164, align 1, !dbg !782, !tbaa !714
  %conv167 = zext i8 %33 to i32, !dbg !782
  tail call void @llvm.dbg.value(metadata !{i32 %conv167}, i64 0, metadata !111), !dbg !782
  %incdec.ptr164.sum = add i64 %add.ptr149.sum, 2, !dbg !782
  %add.ptr169 = getelementptr inbounds i8* %p.0, i64 %incdec.ptr164.sum, !dbg !782
  %34 = load i8* %add.ptr169, align 1, !dbg !782, !tbaa !714
  %conv170 = sext i8 %34 to i32, !dbg !782
  %shl171 = shl nsw i32 %conv170, 8, !dbg !782
  %add172 = or i32 %shl171, %conv167, !dbg !782
  tail call void @llvm.dbg.value(metadata !{i32 %add172}, i64 0, metadata !111), !dbg !782
  %incdec.ptr164.sum409 = add i64 %add.ptr149.sum, 3, !dbg !785
  %idx.ext176 = sext i32 %add172 to i64, !dbg !786
  %add.ptr174.sum = add i64 %incdec.ptr164.sum409, %idx.ext176, !dbg !786
  %add.ptr177 = getelementptr inbounds i8* %p.0, i64 %add.ptr174.sum, !dbg !786
  tail call void @llvm.dbg.value(metadata !{i8* %add.ptr177}, i64 0, metadata !128), !dbg !786
  %cmp179 = icmp eq i32 %fail_stack.sroa.2.0, 0, !dbg !787
  br i1 %cmp179, label %while.body, label %land.lhs.true181, !dbg !787

land.lhs.true181:                                 ; preds = %if.end163
  %sub183 = add i32 %fail_stack.sroa.2.0, -1, !dbg !787
  %idxprom184 = zext i32 %sub183 to i64, !dbg !787
  %pointer187 = getelementptr inbounds %union.fail_stack_elt* %fail_stack.sroa.0.0, i64 %idxprom184, i32 0, !dbg !787
  %35 = load i8** %pointer187, align 8, !dbg !787, !tbaa !722
  %cmp188 = icmp eq i8* %35, %add.ptr177, !dbg !787
  %dec192.fail_stack.sroa.2.0 = select i1 %cmp188, i32 %sub183, i32 %fail_stack.sroa.2.0, !dbg !787
  br label %while.body, !dbg !787

do.body196:                                       ; preds = %sw.bb268, %if.end22, %if.end22
  %succeed_n_p.1 = phi i8 [ 0, %if.end22 ], [ 0, %if.end22 ], [ 1, %sw.bb268 ]
  %36 = load i8* %incdec.ptr, align 1, !dbg !788, !tbaa !714
  %conv197 = zext i8 %36 to i32, !dbg !788
  tail call void @llvm.dbg.value(metadata !{i32 %conv197}, i64 0, metadata !111), !dbg !788
  %add.ptr199 = getelementptr inbounds i8* %p.0, i64 2, !dbg !788
  %37 = load i8* %add.ptr199, align 1, !dbg !788, !tbaa !714
  %conv200 = sext i8 %37 to i32, !dbg !788
  %shl201 = shl nsw i32 %conv200, 8, !dbg !788
  %add202 = or i32 %shl201, %conv197, !dbg !788
  tail call void @llvm.dbg.value(metadata !{i32 %add202}, i64 0, metadata !111), !dbg !788
  %add.ptr204 = getelementptr inbounds i8* %p.0, i64 3, !dbg !791
  tail call void @llvm.dbg.value(metadata !{i8* %add.ptr204}, i64 0, metadata !128), !dbg !791
  %addconv414 = add nsw i32 %add202, 3, !dbg !792
  %incdec.ptr.sum = sext i32 %addconv414 to i64, !dbg !792
  %add.ptr207 = getelementptr inbounds i8* %p.0, i64 %incdec.ptr.sum, !dbg !792
  %cmp208 = icmp ult i8* %add.ptr207, %add.ptr, !dbg !792
  br i1 %cmp208, label %if.then210, label %if.else248, !dbg !792

if.then210:                                       ; preds = %do.body196
  %cmp213 = icmp eq i32 %fail_stack.sroa.2.0, %fail_stack.sroa.1.0, !dbg !793
  br i1 %cmp213, label %land.lhs.true215, label %cond.false236, !dbg !793

land.lhs.true215:                                 ; preds = %if.then210
  %38 = load i32* @re_max_failures, align 4, !dbg !793, !tbaa !795
  %mul217 = mul nsw i32 %38, 19, !dbg !793
  %cmp218 = icmp ugt i32 %fail_stack.sroa.1.0, %mul217, !dbg !793
  br i1 %cmp218, label %if.then245, label %cond.false, !dbg !793

cond.false:                                       ; preds = %land.lhs.true215
  %39 = bitcast %union.fail_stack_elt* %fail_stack.sroa.0.0 to i8*, !dbg !793
  %shl222 = shl i32 %fail_stack.sroa.1.0, 1, !dbg !793
  %conv223 = zext i32 %shl222 to i64, !dbg !793
  %mul224 = shl nuw nsw i64 %conv223, 3, !dbg !793
  %call225 = tail call i8* @realloc(i8* %39, i64 %mul224) #7, !dbg !793
  %40 = bitcast i8* %call225 to %union.fail_stack_elt*, !dbg !793
  %cmp228 = icmp eq i8* %call225, null, !dbg !793
  %fail_stack.sroa.1.0.shl222 = select i1 %cmp228, i32 %fail_stack.sroa.1.0, i32 %shl222, !dbg !793
  br i1 %cmp228, label %if.then245, label %cond.false236, !dbg !793

cond.false236:                                    ; preds = %cond.false, %if.then210
  %fail_stack.sroa.1.2 = phi i32 [ %fail_stack.sroa.1.0.shl222, %cond.false ], [ %fail_stack.sroa.1.0, %if.then210 ]
  %fail_stack.sroa.0.1 = phi %union.fail_stack_elt* [ %40, %cond.false ], [ %fail_stack.sroa.0.0, %if.then210 ]
  %inc240 = add i32 %fail_stack.sroa.2.0, 1, !dbg !793
  %idxprom241 = zext i32 %fail_stack.sroa.2.0 to i64, !dbg !793
  %pointer244 = getelementptr inbounds %union.fail_stack_elt* %fail_stack.sroa.0.1, i64 %idxprom241, i32 0, !dbg !793
  store i8* %add.ptr207, i8** %pointer244, align 8, !dbg !793, !tbaa !722
  br label %if.end253, !dbg !796

if.then245:                                       ; preds = %cond.false, %land.lhs.true215
  %fail_stack.sroa.0.2 = phi %union.fail_stack_elt* [ %fail_stack.sroa.0.0, %land.lhs.true215 ], [ %40, %cond.false ]
  %41 = bitcast %union.fail_stack_elt* %fail_stack.sroa.0.2 to i8*, !dbg !797
  tail call void @free(i8* %41) #7, !dbg !797
  br label %return, !dbg !799

if.else248:                                       ; preds = %do.body196
  %bf.load250 = load i8* %fastmap_accurate, align 8, !dbg !800
  %bf.set252 = or i8 %bf.load250, 1, !dbg !800
  store i8 %bf.set252, i8* %fastmap_accurate, align 8, !dbg !800
  br label %if.end253

if.end253:                                        ; preds = %if.else248, %cond.false236
  %fail_stack.sroa.1.3 = phi i32 [ %fail_stack.sroa.1.2, %cond.false236 ], [ %fail_stack.sroa.1.0, %if.else248 ]
  %fail_stack.sroa.0.3 = phi %union.fail_stack_elt* [ %fail_stack.sroa.0.1, %cond.false236 ], [ %fail_stack.sroa.0.0, %if.else248 ]
  %fail_stack.sroa.2.1 = phi i32 [ %inc240, %cond.false236 ], [ %fail_stack.sroa.2.0, %if.else248 ]
  %tobool254 = icmp eq i8 %succeed_n_p.1, 0, !dbg !801
  %add.ptr265 = getelementptr inbounds i8* %p.0, i64 5, !dbg !802
  tail call void @llvm.dbg.value(metadata !{i8* %add.ptr265}, i64 0, metadata !128), !dbg !802
  tail call void @llvm.dbg.value(metadata !728, i64 0, metadata !132), !dbg !805
  %add.ptr204.add.ptr265 = select i1 %tobool254, i8* %add.ptr204, i8* %add.ptr265, !dbg !801
  br label %while.body, !dbg !801

sw.bb268:                                         ; preds = %if.end22
  %add.ptr269 = getelementptr inbounds i8* %p.0, i64 3, !dbg !806
  tail call void @llvm.dbg.value(metadata !{i8* %add.ptr269}, i64 0, metadata !128), !dbg !806
  %42 = load i8* %add.ptr269, align 1, !dbg !807, !tbaa !714
  %conv272 = zext i8 %42 to i32, !dbg !807
  tail call void @llvm.dbg.value(metadata !{i32 %conv272}, i64 0, metadata !112), !dbg !807
  %add.ptr274 = getelementptr inbounds i8* %p.0, i64 4, !dbg !807
  %43 = load i8* %add.ptr274, align 1, !dbg !807, !tbaa !714
  %conv275 = sext i8 %43 to i32, !dbg !807
  %shl276 = shl nsw i32 %conv275, 8, !dbg !807
  %add277 = or i32 %shl276, %conv272, !dbg !807
  tail call void @llvm.dbg.value(metadata !{i32 %add277}, i64 0, metadata !112), !dbg !807
  %add.ptr279 = getelementptr inbounds i8* %p.0, i64 5, !dbg !810
  tail call void @llvm.dbg.value(metadata !{i8* %add.ptr279}, i64 0, metadata !128), !dbg !810
  %cmp281 = icmp eq i32 %add277, 0, !dbg !811
  br i1 %cmp281, label %do.body196, label %while.body, !dbg !811

sw.bb286:                                         ; preds = %if.end22
  %add.ptr287 = getelementptr inbounds i8* %p.0, i64 5, !dbg !812
  tail call void @llvm.dbg.value(metadata !{i8* %add.ptr287}, i64 0, metadata !128), !dbg !812
  br label %while.body, !dbg !813

sw.bb288:                                         ; preds = %if.end22, %if.end22
  %add.ptr289 = getelementptr inbounds i8* %p.0, i64 3, !dbg !814
  tail call void @llvm.dbg.value(metadata !{i8* %add.ptr289}, i64 0, metadata !128), !dbg !814
  br label %while.body, !dbg !815

sw.default:                                       ; preds = %if.end22
  tail call void @abort() #8, !dbg !816
  unreachable, !dbg !816

done:                                             ; preds = %if.else130, %if.then8, %sw.bb
  %44 = bitcast %union.fail_stack_elt* %fail_stack.sroa.0.0 to i8*, !dbg !817
  tail call void @free(i8* %44) #7, !dbg !817
  br label %return, !dbg !818

return:                                           ; preds = %entry, %done, %if.then245
  %retval.0 = phi i32 [ 0, %done ], [ -2, %if.then245 ], [ -2, %entry ]
  ret i32 %retval.0, !dbg !818
}
