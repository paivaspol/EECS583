define internal fastcc i32 @fmtint(i8* nocapture %buffer, i64* nocapture %currlen, i64 %maxlen, i64 %value, i32 %base, i32 %min, i32 %max, i32 %flags) #0 {
  %convert = alloca [20 x i8], align 16
  tail call void @llvm.dbg.value(metadata i8* %buffer, i64 0, metadata !108, metadata !187), !dbg !792
  tail call void @llvm.dbg.value(metadata i64* %currlen, i64 0, metadata !109, metadata !187), !dbg !793
  tail call void @llvm.dbg.value(metadata i64 %maxlen, i64 0, metadata !110, metadata !187), !dbg !794
  tail call void @llvm.dbg.value(metadata i64 %value, i64 0, metadata !111, metadata !187), !dbg !795
  tail call void @llvm.dbg.value(metadata i32 %base, i64 0, metadata !112, metadata !187), !dbg !796
  tail call void @llvm.dbg.value(metadata i32 %min, i64 0, metadata !113, metadata !187), !dbg !797
  tail call void @llvm.dbg.value(metadata i32 %max, i64 0, metadata !114, metadata !187), !dbg !798
  tail call void @llvm.dbg.value(metadata i32 %flags, i64 0, metadata !115, metadata !187), !dbg !799
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !116, metadata !187), !dbg !800
  tail call void @llvm.dbg.declare(metadata [20 x i8]* %convert, metadata !118, metadata !187), !dbg !801
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !122, metadata !187), !dbg !802
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !123, metadata !187), !dbg !803
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !124, metadata !187), !dbg !804
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !125, metadata !187), !dbg !805
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !126, metadata !187), !dbg !806
  %1 = icmp slt i32 %max, 0, !dbg !807
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !114, metadata !187), !dbg !798
  %.max = select i1 %1, i32 0, i32 %max, !dbg !809
  tail call void @llvm.dbg.value(metadata i64 %value, i64 0, metadata !117, metadata !187), !dbg !810
  %2 = and i32 %flags, 64, !dbg !811
  %3 = icmp eq i32 %2, 0, !dbg !811
  br i1 %3, label %4, label %14, !dbg !813

; <label>:4                                       ; preds = %0
  %5 = icmp slt i64 %value, 0, !dbg !814
  br i1 %5, label %6, label %8, !dbg !817

; <label>:6                                       ; preds = %4
  tail call void @llvm.dbg.value(metadata i32 45, i64 0, metadata !116, metadata !187), !dbg !800
  %7 = sub nsw i64 0, %value, !dbg !818
  tail call void @llvm.dbg.value(metadata i64 %7, i64 0, metadata !117, metadata !187), !dbg !810
  br label %14, !dbg !820

; <label>:8                                       ; preds = %4
  %9 = and i32 %flags, 2, !dbg !821
  %10 = icmp eq i32 %9, 0, !dbg !821
  br i1 %10, label %11, label %14, !dbg !823

; <label>:11                                      ; preds = %8
  tail call void @llvm.dbg.value(metadata i32 32, i64 0, metadata !116, metadata !187), !dbg !800
  %12 = shl i32 %flags, 3, !dbg !824
  %13 = and i32 %12, 32, !dbg !824
  br label %14, !dbg !824

; <label>:14                                      ; preds = %11, %8, %0, %6
  %signvalue.0 = phi i32 [ 0, %0 ], [ 45, %6 ], [ 43, %8 ], [ %13, %11 ]
  %uvalue.0 = phi i64 [ %value, %0 ], [ %7, %6 ], [ %value, %8 ], [ %value, %11 ]
  %15 = and i32 %flags, 32, !dbg !825
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !125, metadata !187), !dbg !805
  %16 = zext i32 %base to i64, !dbg !827
  %17 = icmp ne i32 %15, 0, !dbg !829
  %18 = select i1 %17, i8* getelementptr inbounds ([17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1, i64 0, i64 0), !dbg !829
  br label %19, !dbg !830

; <label>:19                                      ; preds = %14, %19
  %indvars.iv35 = phi i64 [ 0, %14 ], [ %indvars.iv.next36, %19 ]
  %uvalue.1 = phi i64 [ %uvalue.0, %14 ], [ %24, %19 ]
  %20 = urem i64 %uvalue.1, %16, !dbg !831
  %21 = getelementptr inbounds i8* %18, i64 %20, !dbg !832
  %22 = load i8* %21, align 1, !dbg !832, !tbaa !200
  %indvars.iv.next36 = add nuw nsw i64 %indvars.iv35, 1, !dbg !833
  %23 = getelementptr inbounds [20 x i8]* %convert, i64 0, i64 %indvars.iv35, !dbg !834
  store i8 %22, i8* %23, align 1, !dbg !835, !tbaa !200
  %24 = udiv i64 %uvalue.1, %16, !dbg !836
  tail call void @llvm.dbg.value(metadata i64 %24, i64 0, metadata !117, metadata !187), !dbg !810
  %25 = icmp ne i64 %24, 0, !dbg !837
  %26 = icmp slt i64 %indvars.iv.next36, 20, !dbg !838
  %or.cond4 = and i1 %26, %25, !dbg !833
  br i1 %or.cond4, label %19, label %.critedge, !dbg !833

.critedge:                                        ; preds = %19
  %27 = trunc i64 %indvars.iv35 to i32, !dbg !839
  %28 = trunc i64 %indvars.iv.next36 to i32, !dbg !839
  %29 = icmp eq i32 %28, 20, !dbg !839
  tail call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !122, metadata !187), !dbg !802
  %place.0. = select i1 %29, i32 %27, i32 %28, !dbg !841
  %30 = sext i32 %place.0. to i64, !dbg !842
  %31 = getelementptr inbounds [20 x i8]* %convert, i64 0, i64 %30, !dbg !842
  store i8 0, i8* %31, align 1, !dbg !843, !tbaa !200
  %32 = sub nsw i32 %.max, %place.0., !dbg !844
  tail call void @llvm.dbg.value(metadata i32 %32, i64 0, metadata !124, metadata !187), !dbg !804
  %33 = icmp sge i32 %.max, %place.0., !dbg !845
  %34 = select i1 %33, i32 %.max, i32 %place.0., !dbg !845
  %35 = sub nsw i32 %min, %34, !dbg !846
  %36 = icmp ne i32 %signvalue.0, 0, !dbg !847
  %.neg = sext i1 %36 to i32
  %37 = add i32 %35, %.neg, !dbg !848
  tail call void @llvm.dbg.value(metadata i32 %37, i64 0, metadata !123, metadata !187), !dbg !803
  %38 = icmp slt i32 %32, 0, !dbg !849
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !124, metadata !187), !dbg !804
  %zpadlen.0 = select i1 %38, i32 0, i32 %32, !dbg !851
  %39 = icmp slt i32 %37, 0, !dbg !852
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !123, metadata !187), !dbg !803
  %.6 = select i1 %39, i32 0, i32 %37, !dbg !854
  %40 = and i32 %flags, 16, !dbg !855
  %41 = icmp eq i32 %40, 0, !dbg !855
  br i1 %41, label %45, label %42, !dbg !857

; <label>:42                                      ; preds = %.critedge
  %43 = icmp sge i32 %zpadlen.0, %.6, !dbg !858
  %44 = select i1 %43, i32 %zpadlen.0, i32 %.6, !dbg !858
  tail call void @llvm.dbg.value(metadata i32 %44, i64 0, metadata !124, metadata !187), !dbg !804
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !123, metadata !187), !dbg !803
  br label %45, !dbg !860

; <label>:45                                      ; preds = %.critedge, %42
  %spadlen.1 = phi i32 [ 0, %42 ], [ %.6, %.critedge ]
  %zpadlen.1 = phi i32 [ %44, %42 ], [ %zpadlen.0, %.critedge ]
  %46 = and i32 %flags, 1, !dbg !861
  %47 = icmp eq i32 %46, 0, !dbg !861
  %48 = sub nsw i32 0, %spadlen.1, !dbg !863
  tail call void @llvm.dbg.value(metadata i32 %48, i64 0, metadata !123, metadata !187), !dbg !803
  %spadlen.1. = select i1 %47, i32 %spadlen.1, i32 %48, !dbg !864
  %49 = icmp sgt i32 %spadlen.1., 0, !dbg !865
  br i1 %49, label %.lr.ph23, label %63, !dbg !866

.lr.ph23:                                         ; preds = %45
  %50 = xor i32 %spadlen.1., -1, !dbg !866
  %51 = icmp sgt i32 %50, -2
  %smax34 = select i1 %51, i32 %50, i32 -2
  %52 = add i32 %spadlen.1., %smax34, !dbg !866
  br label %53, !dbg !866

; <label>:53                                      ; preds = %.lr.ph23, %dopr_outch.exit
  %spadlen.220 = phi i32 [ %spadlen.1., %.lr.ph23 ], [ %59, %dopr_outch.exit ]
  %54 = load i64* %currlen, align 8, !dbg !867, !tbaa !214
  %55 = add i64 %54, 1, !dbg !870
  %56 = icmp ult i64 %55, %maxlen, !dbg !871
  br i1 %56, label %57, label %dopr_outch.exit, !dbg !872

; <label>:57                                      ; preds = %53
  store i64 %55, i64* %currlen, align 8, !dbg !873, !tbaa !214
  %58 = getelementptr inbounds i8* %buffer, i64 %54, !dbg !874
  store i8 32, i8* %58, align 1, !dbg !875, !tbaa !200
  br label %dopr_outch.exit, !dbg !874

dopr_outch.exit:                                  ; preds = %53, %57
  %59 = add nsw i32 %spadlen.220, -1, !dbg !876
  tail call void @llvm.dbg.value(metadata i32 %59, i64 0, metadata !123, metadata !187), !dbg !803
  %60 = icmp sgt i32 %spadlen.220, 1, !dbg !865
  br i1 %60, label %53, label %._crit_edge24, !dbg !866

._crit_edge24:                                    ; preds = %dopr_outch.exit
  %61 = sub i32 -2, %smax34, !dbg !866
  %62 = add i32 %52, 2, !dbg !866
  br label %63, !dbg !866

; <label>:63                                      ; preds = %._crit_edge24, %45
  %total.0.lcssa = phi i32 [ %62, %._crit_edge24 ], [ 0, %45 ]
  %spadlen.2.lcssa = phi i32 [ %61, %._crit_edge24 ], [ %spadlen.1., %45 ]
  br i1 %36, label %64, label %72, !dbg !877

; <label>:64                                      ; preds = %63
  %65 = load i64* %currlen, align 8, !dbg !878, !tbaa !214
  %66 = add i64 %65, 1, !dbg !881
  %67 = icmp ult i64 %66, %maxlen, !dbg !882
  br i1 %67, label %68, label %dopr_outch.exit10, !dbg !883

; <label>:68                                      ; preds = %64
  %69 = trunc i32 %signvalue.0 to i8, !dbg !884
  store i64 %66, i64* %currlen, align 8, !dbg !885, !tbaa !214
  %70 = getelementptr inbounds i8* %buffer, i64 %65, !dbg !886
  store i8 %69, i8* %70, align 1, !dbg !887, !tbaa !200
  br label %dopr_outch.exit10, !dbg !886

dopr_outch.exit10:                                ; preds = %64, %68
  %71 = add nsw i32 %total.0.lcssa, 1, !dbg !888
  tail call void @llvm.dbg.value(metadata i32 %71, i64 0, metadata !126, metadata !187), !dbg !806
  br label %72, !dbg !889

; <label>:72                                      ; preds = %dopr_outch.exit10, %63
  %total.1 = phi i32 [ %71, %dopr_outch.exit10 ], [ %total.0.lcssa, %63 ]
  %73 = icmp sgt i32 %zpadlen.1, 0, !dbg !890
  br i1 %73, label %.preheader12, label %.preheader11, !dbg !892

.preheader12:                                     ; preds = %72
  %74 = add i32 %zpadlen.1, %total.1, !dbg !893
  %75 = xor i32 %zpadlen.1, -1, !dbg !893
  %76 = icmp sgt i32 %75, -2
  %smax33 = select i1 %76, i32 %75, i32 -2
  %77 = add i32 %74, %smax33, !dbg !893
  br label %78, !dbg !893

; <label>:78                                      ; preds = %.preheader12, %dopr_outch.exit9
  %zpadlen.2 = phi i32 [ %84, %dopr_outch.exit9 ], [ %zpadlen.1, %.preheader12 ]
  %79 = load i64* %currlen, align 8, !dbg !893, !tbaa !214
  %80 = add i64 %79, 1, !dbg !897
  %81 = icmp ult i64 %80, %maxlen, !dbg !898
  br i1 %81, label %82, label %dopr_outch.exit9, !dbg !899

; <label>:82                                      ; preds = %78
  store i64 %80, i64* %currlen, align 8, !dbg !900, !tbaa !214
  %83 = getelementptr inbounds i8* %buffer, i64 %79, !dbg !901
  store i8 48, i8* %83, align 1, !dbg !902, !tbaa !200
  br label %dopr_outch.exit9, !dbg !901

dopr_outch.exit9:                                 ; preds = %78, %82
  %84 = add nsw i32 %zpadlen.2, -1, !dbg !903
  tail call void @llvm.dbg.value(metadata i32 %84, i64 0, metadata !124, metadata !187), !dbg !804
  %.old1 = icmp sgt i32 %zpadlen.2, 1, !dbg !904
  br i1 %.old1, label %78, label %.preheader11.loopexit, !dbg !905

.preheader11.loopexit:                            ; preds = %dopr_outch.exit9
  %85 = add i32 %77, 2, !dbg !893
  br label %.preheader11

.preheader11:                                     ; preds = %.preheader11.loopexit, %72
  %total.3.ph = phi i32 [ %total.1, %72 ], [ %85, %.preheader11.loopexit ]
  %86 = icmp sgt i32 %place.0., 0, !dbg !906
  br i1 %86, label %.lr.ph18, label %.preheader, !dbg !907

.lr.ph18:                                         ; preds = %.preheader11
  %87 = add i32 %place.0., %total.3.ph, !dbg !907
  %88 = xor i32 %place.0., -1, !dbg !907
  %89 = icmp sgt i32 %88, -2
  %smax32 = select i1 %89, i32 %88, i32 -2
  %90 = add i32 %87, %smax32, !dbg !907
  br label %93, !dbg !907

..preheader_crit_edge:                            ; preds = %dopr_outch.exit8
  %91 = add i32 %90, 2, !dbg !907
  br label %.preheader, !dbg !907

.preheader:                                       ; preds = %..preheader_crit_edge, %.preheader11
  %total.3.lcssa = phi i32 [ %91, %..preheader_crit_edge ], [ %total.3.ph, %.preheader11 ]
  %92 = icmp slt i32 %spadlen.2.lcssa, 0, !dbg !908
  br i1 %92, label %.lr.ph, label %110, !dbg !909

; <label>:93                                      ; preds = %.lr.ph18, %dopr_outch.exit8
  %indvars.iv = phi i64 [ %30, %.lr.ph18 ], [ %indvars.iv.next, %dopr_outch.exit8 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !907
  %94 = load i64* %currlen, align 8, !dbg !910, !tbaa !214
  %95 = add i64 %94, 1, !dbg !912
  %96 = icmp ult i64 %95, %maxlen, !dbg !913
  br i1 %96, label %97, label %dopr_outch.exit8, !dbg !914

; <label>:97                                      ; preds = %93
  %98 = getelementptr inbounds [20 x i8]* %convert, i64 0, i64 %indvars.iv.next, !dbg !915
  %99 = load i8* %98, align 1, !dbg !915, !tbaa !200
  store i64 %95, i64* %currlen, align 8, !dbg !916, !tbaa !214
  %100 = getelementptr inbounds i8* %buffer, i64 %94, !dbg !917
  store i8 %99, i8* %100, align 1, !dbg !918, !tbaa !200
  br label %dopr_outch.exit8, !dbg !917

dopr_outch.exit8:                                 ; preds = %93, %97
  %101 = icmp sgt i64 %indvars.iv, 1, !dbg !906
  br i1 %101, label %93, label %..preheader_crit_edge, !dbg !907

.lr.ph:                                           ; preds = %.preheader, %dopr_outch.exit7
  %spadlen.314 = phi i32 [ %107, %dopr_outch.exit7 ], [ %spadlen.2.lcssa, %.preheader ]
  %102 = load i64* %currlen, align 8, !dbg !919, !tbaa !214
  %103 = add i64 %102, 1, !dbg !922
  %104 = icmp ult i64 %103, %maxlen, !dbg !923
  br i1 %104, label %105, label %dopr_outch.exit7, !dbg !924

; <label>:105                                     ; preds = %.lr.ph
  store i64 %103, i64* %currlen, align 8, !dbg !925, !tbaa !214
  %106 = getelementptr inbounds i8* %buffer, i64 %102, !dbg !926
  store i8 32, i8* %106, align 1, !dbg !927, !tbaa !200
  br label %dopr_outch.exit7, !dbg !926

dopr_outch.exit7:                                 ; preds = %.lr.ph, %105
  %107 = add nsw i32 %spadlen.314, 1, !dbg !928
  tail call void @llvm.dbg.value(metadata i32 %107, i64 0, metadata !123, metadata !187), !dbg !803
  %108 = icmp slt i32 %spadlen.314, -1, !dbg !908
  br i1 %108, label %.lr.ph, label %._crit_edge, !dbg !909

._crit_edge:                                      ; preds = %dopr_outch.exit7
  %109 = sub i32 %total.3.lcssa, %spadlen.2.lcssa, !dbg !909
  br label %110, !dbg !909

; <label>:110                                     ; preds = %._crit_edge, %.preheader
  %total.4.lcssa = phi i32 [ %109, %._crit_edge ], [ %total.3.lcssa, %.preheader ]
  ret i32 %total.4.lcssa, !dbg !929
}
