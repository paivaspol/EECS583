define i8* @Util_CacheMalloc(i32 %index, i64 %size, i8** nocapture %realstart) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %index}, i64 0, metadata !19), !dbg !54
  tail call void @llvm.dbg.value(metadata !{i64 %size}, i64 0, metadata !20), !dbg !55
  tail call void @llvm.dbg.value(metadata !{i8** %realstart}, i64 0, metadata !21), !dbg !56
  %0 = load i32* @cache_set, align 4, !dbg !57, !tbaa !59
  %tobool.i = icmp eq i32 %0, 0, !dbg !57
  br i1 %tobool.i, label %if.end, label %Utili_CacheDataGet.exit.thread, !dbg !57

Utili_CacheDataGet.exit.thread:                   ; preds = %entry
  %1 = load i64* @cache_data.0, align 8, !dbg !62, !tbaa !64
  tail call void @llvm.dbg.value(metadata !{i64 %1}, i64 0, metadata !25), !dbg !62
  tail call void @llvm.dbg.value(metadata !{i64 %1}, i64 0, metadata !65), !dbg !66
  tail call void @llvm.dbg.value(metadata !{i64 %1}, i64 0, metadata !25), !dbg !67
  %2 = load i64* @cache_data.1, align 8, !dbg !70, !tbaa !64
  tail call void @llvm.dbg.value(metadata !{i64 %2}, i64 0, metadata !26), !dbg !70
  tail call void @llvm.dbg.value(metadata !{i64 %2}, i64 0, metadata !71), !dbg !72
  tail call void @llvm.dbg.value(metadata !{i64 %2}, i64 0, metadata !26), !dbg !73
  tail call void @llvm.dbg.value(metadata !{i64 %2}, i64 0, metadata !26), !dbg !74
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !75), !dbg !76
  br label %if.end, !dbg !58

if.end:                                           ; preds = %entry, %Utili_CacheDataGet.exit.thread
  %3 = phi i64 [ %1, %Utili_CacheDataGet.exit.thread ], [ 0, %entry ]
  %4 = phi i64 [ %2, %Utili_CacheDataGet.exit.thread ], [ 0, %entry ]
  %add = add i64 %4, %size, !dbg !73
  %call2 = tail call noalias i8* @malloc(i64 %add) #4, !dbg !73
  tail call void @llvm.dbg.value(metadata !{i8* %call2}, i64 0, metadata !24), !dbg !73
  %tobool3 = icmp eq i8* %call2, null, !dbg !77
  br i1 %tobool3, label %if.end14, label %if.then4, !dbg !77

if.then4:                                         ; preds = %if.end
  %tobool5 = icmp eq i64 %4, 0, !dbg !74
  br i1 %tobool5, label %if.end12, label %if.then6, !dbg !74

if.then6:                                         ; preds = %if.then4
  %5 = ptrtoint i8* %call2 to i64, !dbg !67
  %rem = urem i64 %5, %4, !dbg !67
  %rem7 = urem i64 %rem, %3, !dbg !67
  tail call void @llvm.dbg.value(metadata !{i64 %rem7}, i64 0, metadata !27), !dbg !67
  %div = udiv i64 %rem, %3, !dbg !78
  tail call void @llvm.dbg.value(metadata !{i64 %div}, i64 0, metadata !28), !dbg !78
  %conv = zext i32 %index to i64, !dbg !79
  %sub = sub i64 %conv, %div, !dbg !79
  %mul = mul i64 %sub, %3, !dbg !79
  %add9 = sub i64 %3, %rem7, !dbg !79
  %sub10 = add i64 %add9, %mul, !dbg !79
  %rem11 = urem i64 %sub10, %4, !dbg !79
  tail call void @llvm.dbg.value(metadata !{i64 %rem11}, i64 0, metadata !29), !dbg !79
  br label %if.end12, !dbg !80

if.end12:                                         ; preds = %if.then4, %if.then6
  %pad.0 = phi i64 [ %rem11, %if.then6 ], [ 0, %if.then4 ]
  %add.ptr = getelementptr inbounds i8* %call2, i64 %pad.0, !dbg !81
  tail call void @llvm.dbg.value(metadata !{i8* %add.ptr}, i64 0, metadata !22), !dbg !81
  br label %if.end14, !dbg !82

if.end14:                                         ; preds = %if.end, %if.end12
  %retval1.0 = phi i8* [ %add.ptr, %if.end12 ], [ null, %if.end ]
  store i8* %call2, i8** %realstart, align 8, !dbg !83, !tbaa !84
  ret i8* %retval1.0, !dbg !85
}
