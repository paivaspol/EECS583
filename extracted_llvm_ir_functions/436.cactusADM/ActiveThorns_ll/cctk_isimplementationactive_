define void @cctk_isimplementationactive_(i32* nocapture %retval, i8* %cctk_str1, i32 %cctk_strlen1) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32* %retval}, i64 0, metadata !150), !dbg !583
  tail call void @llvm.dbg.value(metadata !{i8* %cctk_str1}, i64 0, metadata !151), !dbg !583
  tail call void @llvm.dbg.value(metadata !{i32 %cctk_strlen1}, i64 0, metadata !152), !dbg !583
  %call = tail call i8* @Util_NullTerminateString(i8* %cctk_str1, i32 %cctk_strlen1) #9, !dbg !584
  tail call void @llvm.dbg.value(metadata !{i8* %call}, i64 0, metadata !153), !dbg !584
  tail call void @llvm.dbg.value(metadata !{i8* %call}, i64 0, metadata !585) #7, !dbg !587
  %0 = load %struct.T_SKTREE** @implist, align 8, !dbg !588, !tbaa !357
  %call.i = tail call %struct.T_SKTREE* @SKTreeFindNode(%struct.T_SKTREE* %0, i8* %call) #9, !dbg !588
  tail call void @llvm.dbg.value(metadata !{%struct.T_SKTREE* %call.i}, i64 0, metadata !589) #7, !dbg !588
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !590) #7, !dbg !591
  %tobool.i = icmp eq %struct.T_SKTREE* %call.i, null, !dbg !592
  br i1 %tobool.i, label %CCTK_IsImplementationActive.exit, label %if.then.i, !dbg !592

if.then.i:                                        ; preds = %entry
  %data.i = getelementptr inbounds %struct.T_SKTREE* %call.i, i64 0, i32 5, !dbg !593
  %1 = load i8** %data.i, align 8, !dbg !593, !tbaa !357
  %active.i = bitcast i8* %1 to i32*, !dbg !594
  %2 = load i32* %active.i, align 4, !dbg !594, !tbaa !387
  tail call void @llvm.dbg.value(metadata !496, i64 0, metadata !590) #7, !dbg !595
  %not.tobool2.i = icmp ne i32 %2, 0, !dbg !594
  %..i = zext i1 %not.tobool2.i to i32, !dbg !594
  br label %CCTK_IsImplementationActive.exit, !dbg !594

CCTK_IsImplementationActive.exit:                 ; preds = %entry, %if.then.i
  %call13 = phi i32 [ %..i, %if.then.i ], [ 0, %entry ]
  store i32 %call13, i32* %retval, align 4, !dbg !586, !tbaa !387
  tail call void @free(i8* %call) #9, !dbg !596
  ret void, !dbg !597
}
