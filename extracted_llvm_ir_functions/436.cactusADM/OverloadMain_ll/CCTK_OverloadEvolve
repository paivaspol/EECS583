define i32 @CCTK_OverloadEvolve(i32 (%struct.tFleshConfig*)* %func) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 (%struct.tFleshConfig*)* %func}, i64 0, metadata !74), !dbg !124
  %tobool = icmp eq i32 (%struct.tFleshConfig*)* %func, null, !dbg !124
  %0 = load i32* @CCTK_OverloadEvolve.overloaded, align 4, !dbg !125, !tbaa !116
  br i1 %tobool, label %if.end3, label %if.then, !dbg !124

if.then:                                          ; preds = %entry
  %cmp = icmp slt i32 %0, 2, !dbg !125
  br i1 %cmp, label %if.then1, label %if.else, !dbg !125

if.then1:                                         ; preds = %if.then
  store i32 (%struct.tFleshConfig*)* %func, i32 (%struct.tFleshConfig*)** @CCTK_Evolve, align 8, !dbg !127, !tbaa !121
  %inc = add nsw i32 %0, 1, !dbg !127
  store i32 %inc, i32* @CCTK_OverloadEvolve.overloaded, align 4, !dbg !127, !tbaa !116
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !75), !dbg !127
  br label %if.end3, !dbg !127

if.else:                                          ; preds = %if.then
  %call = tail call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 46, i8* getelementptr inbounds ([85 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str5, i64 0, i64 0)) #4, !dbg !129
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !75), !dbg !129
  br label %if.end3

if.end3:                                          ; preds = %entry, %if.then1, %if.else
  %return_code.0 = phi i32 [ %inc, %if.then1 ], [ 0, %if.else ], [ %0, %entry ]
  ret i32 %return_code.0, !dbg !124
}
