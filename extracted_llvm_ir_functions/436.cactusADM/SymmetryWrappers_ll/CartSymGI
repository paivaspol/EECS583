define i32 @CartSymGI(%struct.cGH* %GH, i32 %gi) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.cGH* %GH}, i64 0, metadata !53), !dbg !210
  tail call void @llvm.dbg.value(metadata !{i32 %gi}, i64 0, metadata !54), !dbg !210
  %0 = load i32* getelementptr inbounds (%struct.anon.0* @cartgrid3dpriv_, i64 0, i32 0), align 4, !dbg !211, !tbaa !212
  tail call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !79), !dbg !211
  %1 = load i32* getelementptr inbounds (%struct.anon.0* @cartgrid3dpriv_, i64 0, i32 1), align 4, !dbg !211, !tbaa !212
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !80), !dbg !211
  %2 = load i32* getelementptr inbounds (%struct.anon.0* @cartgrid3dpriv_, i64 0, i32 2), align 4, !dbg !211, !tbaa !212
  tail call void @llvm.dbg.value(metadata !{i32 %2}, i64 0, metadata !81), !dbg !211
  %3 = load i32* getelementptr inbounds (%struct.anon.0* @cartgrid3dpriv_, i64 0, i32 3), align 4, !dbg !211, !tbaa !212
  tail call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !82), !dbg !211
  %4 = load i32* getelementptr inbounds (%struct.anon.0* @cartgrid3dpriv_, i64 0, i32 4), align 4, !dbg !211, !tbaa !212
  tail call void @llvm.dbg.value(metadata !{i32 %4}, i64 0, metadata !83), !dbg !211
  %5 = load i32* getelementptr inbounds (%struct.anon.0* @cartgrid3dpriv_, i64 0, i32 5), align 4, !dbg !211, !tbaa !212
  tail call void @llvm.dbg.value(metadata !{i32 %5}, i64 0, metadata !84), !dbg !211
  %6 = load i32* getelementptr inbounds (%struct.anon.0* @cartgrid3dpriv_, i64 0, i32 6), align 4, !dbg !211, !tbaa !212
  tail call void @llvm.dbg.value(metadata !{i32 %6}, i64 0, metadata !85), !dbg !211
  %7 = load i32* getelementptr inbounds (%struct.anon.0* @cartgrid3dpriv_, i64 0, i32 7), align 4, !dbg !211, !tbaa !212
  tail call void @llvm.dbg.value(metadata !{i32 %7}, i64 0, metadata !86), !dbg !211
  tail call void @llvm.dbg.value(metadata !215, i64 0, metadata !99), !dbg !216
  tail call void @llvm.dbg.value(metadata !215, i64 0, metadata !100), !dbg !216
  %call = tail call i32 @CCTK_FirstVarIndexI(i32 %gi) #5, !dbg !217
  tail call void @llvm.dbg.value(metadata !{i32 %call}, i64 0, metadata !96), !dbg !217
  %cmp = icmp slt i32 %call, 0, !dbg !218
  br i1 %cmp, label %if.then, label %if.end, !dbg !218

if.then:                                          ; preds = %entry
  %call1 = tail call i8* @CCTK_GroupName(i32 %gi) #5, !dbg !219
  %call2 = tail call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 92, i8* getelementptr inbounds ([77 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8]* @.str2, i64 0, i64 0), i32 %gi, i8* %call1) #5, !dbg !219
  br label %return, !dbg !221

if.end:                                           ; preds = %entry
  %call3 = tail call i32 @CCTK_NumVarsInGroupI(i32 %gi) #5, !dbg !222
  tail call void @llvm.dbg.value(metadata !{i32 %call3}, i64 0, metadata !94), !dbg !222
  %call4 = tail call i32 @CCTK_GroupDimI(i32 %gi) #5, !dbg !223
  tail call void @llvm.dbg.value(metadata !{i32 %call4}, i64 0, metadata !98), !dbg !223
  %call5 = tail call i32 @CCTK_GHExtensionHandle(i8* getelementptr inbounds ([9 x i8]* @.str3, i64 0, i64 0)) #5, !dbg !224
  %idxprom = sext i32 %call5 to i64, !dbg !224
  %extensions = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 18, !dbg !224
  %8 = load i8*** %extensions, align 8, !dbg !224, !tbaa !225
  %arrayidx = getelementptr inbounds i8** %8, i64 %idxprom, !dbg !224
  %9 = load i8** %arrayidx, align 8, !dbg !224, !tbaa !225
  %mul = shl nsw i32 %call4, 1, !dbg !226
  %conv = sext i32 %mul to i64, !dbg !226
  %mul6 = shl nsw i64 %conv, 2, !dbg !226
  %call7 = tail call noalias i8* @malloc(i64 %mul6) #5, !dbg !226
  %10 = bitcast i8* %call7 to i32*, !dbg !226
  tail call void @llvm.dbg.value(metadata !{i32* %10}, i64 0, metadata !102), !dbg !226
  %conv8 = sext i32 %call4 to i64, !dbg !227
  %mul9 = shl nsw i64 %conv8, 2, !dbg !227
  %call10 = tail call noalias i8* @malloc(i64 %mul9) #5, !dbg !227
  %11 = bitcast i8* %call10 to i32*, !dbg !227
  tail call void @llvm.dbg.value(metadata !{i32* %11}, i64 0, metadata !103), !dbg !227
  %call13 = tail call noalias i8* @malloc(i64 %mul9) #5, !dbg !228
  %12 = bitcast i8* %call13 to i32*, !dbg !228
  tail call void @llvm.dbg.value(metadata !{i32* %12}, i64 0, metadata !104), !dbg !228
  %call16 = tail call noalias i8* @malloc(i64 %mul9) #5, !dbg !229
  %13 = bitcast i8* %call16 to i32*, !dbg !229
  tail call void @llvm.dbg.value(metadata !{i32* %13}, i64 0, metadata !105), !dbg !229
  %call17 = tail call i32 @CCTK_GroupStaggerDirArrayGI(i32* %11, i32 %call4, i32 %gi) #5, !dbg !230
  tail call void @llvm.dbg.value(metadata !{i32 %call17}, i64 0, metadata !100), !dbg !230
  %tobool.not = icmp eq i32 %4, 0, !dbg !231
  %tobool18 = icmp eq i32 %5, 0, !dbg !231
  %or.cond = or i1 %tobool.not, %tobool18, !dbg !231
  %tobool20 = icmp eq i32 %0, 0, !dbg !231
  %or.cond216 = or i1 %or.cond, %tobool20, !dbg !231
  %tobool21 = icmp ne i32 %1, 0, !dbg !231
  %not.or.cond216 = xor i1 %or.cond216, true, !dbg !231
  %.tobool21 = and i1 %tobool21, %not.or.cond216, !dbg !231
  %land.ext = zext i1 %.tobool21 to i32
  store i32 %land.ext, i32* %13, align 4, !tbaa !212
  %tobool25 = icmp eq i32 %6, 0, !dbg !232
  %or.cond218 = or i1 %tobool.not, %tobool25, !dbg !232
  %or.cond219 = or i1 %or.cond218, %tobool20, !dbg !232
  %tobool29 = icmp ne i32 %2, 0, !dbg !232
  %not.or.cond219 = xor i1 %or.cond219, true, !dbg !232
  %.tobool29 = and i1 %tobool29, %not.or.cond219, !dbg !232
  %land.ext31 = zext i1 %.tobool29 to i32
  %arrayidx32 = getelementptr inbounds i8* %call16, i64 4
  %14 = bitcast i8* %arrayidx32 to i32*
  store i32 %land.ext31, i32* %14, align 4, !tbaa !212
  %tobool35 = icmp eq i32 %7, 0, !dbg !233
  %or.cond221 = or i1 %tobool.not, %tobool35, !dbg !233
  %or.cond222 = or i1 %or.cond221, %tobool20, !dbg !233
  %tobool39 = icmp ne i32 %3, 0, !dbg !233
  %not.or.cond222 = xor i1 %or.cond222, true, !dbg !233
  %.tobool39 = and i1 %tobool39, %not.or.cond222, !dbg !233
  %land.ext41 = zext i1 %.tobool39 to i32
  %arrayidx42 = getelementptr inbounds i8* %call16, i64 8
  %15 = bitcast i8* %arrayidx42 to i32*
  store i32 %land.ext41, i32* %15, align 4, !tbaa !212
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !101), !dbg !234
  tail call void @llvm.dbg.value(metadata !{i32 %call}, i64 0, metadata !95), !dbg !235
  %add = add nsw i32 %call3, %call, !dbg !235
  %cmp43226 = icmp sgt i32 %call3, 0, !dbg !235
  br i1 %cmp43226, label %for.cond45.preheader.lr.ph, label %for.end140, !dbg !235

for.cond45.preheader.lr.ph:                       ; preds = %if.end
  %cmp46224 = icmp sgt i32 %call4, 0, !dbg !237
  %cctk_nghostzones = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 15, !dbg !240
  %GFSym106 = bitcast i8* %9 to i32***, !dbg !240
  %data = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 17, !dbg !240
  %cctk_lssh = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 6, !dbg !242
  %cctk_bbox = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 12, !dbg !244
  %16 = sext i32 %call to i64
  br label %for.cond45.preheader, !dbg !235

for.cond45.preheader:                             ; preds = %for.cond45.preheader.lr.ph, %sw.epilog
  %indvars.iv228 = phi i64 [ %16, %for.cond45.preheader.lr.ph ], [ %indvars.iv.next229, %sw.epilog ]
  br i1 %cmp46224, label %for.body48.lr.ph, label %for.end, !dbg !237

for.body48.lr.ph:                                 ; preds = %for.cond45.preheader
  %.pre = load i32*** %GFSym106, align 8, !dbg !245, !tbaa !225
  %arrayidx52.phi.trans.insert = getelementptr inbounds i32** %.pre, i64 %indvars.iv228
  %.pre230 = load i32** %arrayidx52.phi.trans.insert, align 8, !dbg !245, !tbaa !225
  br label %for.body48, !dbg !237

for.body48:                                       ; preds = %land.end96, %for.body48.lr.ph
  %17 = phi i32* [ %.pre230, %for.body48.lr.ph ], [ %21, %land.end96 ]
  %indvars.iv = phi i64 [ 0, %for.body48.lr.ph ], [ %indvars.iv.next, %land.end96 ]
  %18 = trunc i64 %indvars.iv to i32, !dbg !245
  %mul49 = shl nsw i32 %18, 1, !dbg !245
  %idxprom50 = sext i32 %mul49 to i64, !dbg !245
  %arrayidx53 = getelementptr inbounds i32* %17, i64 %idxprom50, !dbg !245
  %19 = load i32* %arrayidx53, align 4, !dbg !245, !tbaa !212
  %cmp54 = icmp eq i32 %19, -42, !dbg !245
  br i1 %cmp54, label %if.then56, label %if.end59, !dbg !245

if.then56:                                        ; preds = %for.body48
  %20 = trunc i64 %indvars.iv228 to i32, !dbg !246
  %call57 = tail call i8* @CCTK_FullName(i32 %20) #5, !dbg !246
  %call58 = tail call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 0, i32 140, i8* getelementptr inbounds ([77 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8]* @.str4, i64 0, i64 0), i8* %call57) #5, !dbg !246
  %.pre231 = load i32*** %GFSym106, align 8, !dbg !244, !tbaa !225
  %arrayidx72.phi.trans.insert = getelementptr inbounds i32** %.pre231, i64 %indvars.iv228
  %.pre232 = load i32** %arrayidx72.phi.trans.insert, align 8, !dbg !244, !tbaa !225
  br label %if.end59, !dbg !248

if.end59:                                         ; preds = %for.body48, %if.then56
  %21 = phi i32* [ %.pre232, %if.then56 ], [ %17, %for.body48 ], !dbg !242
  %arrayidx61 = getelementptr inbounds i32* %11, i64 %indvars.iv, !dbg !242
  %22 = load i32* %arrayidx61, align 4, !dbg !242, !tbaa !212
  %mul62 = mul nsw i32 %18, 3, !dbg !242
  %add63 = add nsw i32 %22, %mul62, !dbg !242
  %idxprom64 = sext i32 %add63 to i64, !dbg !242
  %23 = load i32** %cctk_lssh, align 8, !dbg !242, !tbaa !225
  %arrayidx65 = getelementptr inbounds i32* %23, i64 %idxprom64, !dbg !242
  %24 = load i32* %arrayidx65, align 4, !dbg !242, !tbaa !212
  %arrayidx67 = getelementptr inbounds i32* %12, i64 %indvars.iv, !dbg !242
  store i32 %24, i32* %arrayidx67, align 4, !dbg !242, !tbaa !212
  %arrayidx73 = getelementptr inbounds i32* %21, i64 %idxprom50, !dbg !244
  %25 = load i32* %arrayidx73, align 4, !dbg !244, !tbaa !212
  %.off = add i32 %25, 42, !dbg !244
  %switch = icmp ugt i32 %.off, 1, !dbg !244
  %cmp88 = icmp sgt i32 %24, 1, !dbg !244
  %or.cond223 = and i1 %switch, %cmp88, !dbg !244
  br i1 %or.cond223, label %land.rhs90, label %land.end96, !dbg !244

land.rhs90:                                       ; preds = %if.end59
  %26 = load i32** %cctk_bbox, align 8, !dbg !244, !tbaa !225
  %arrayidx93 = getelementptr inbounds i32* %26, i64 %idxprom50, !dbg !244
  %27 = load i32* %arrayidx93, align 4, !dbg !244, !tbaa !212
  %cmp94 = icmp eq i32 %27, 1, !dbg !244
  br label %land.end96

land.end96:                                       ; preds = %if.end59, %land.rhs90
  %28 = phi i1 [ %cmp94, %land.rhs90 ], [ false, %if.end59 ]
  %land.ext97 = zext i1 %28 to i32
  %arrayidx100 = getelementptr inbounds i32* %10, i64 %idxprom50
  store i32 %land.ext97, i32* %arrayidx100, align 4, !tbaa !212
  %add102215 = or i32 %mul49, 1, !dbg !249
  %idxprom103 = sext i32 %add102215 to i64, !dbg !249
  %arrayidx104 = getelementptr inbounds i32* %10, i64 %idxprom103, !dbg !249
  store i32 0, i32* %arrayidx104, align 4, !dbg !249, !tbaa !212
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !237
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !237
  %exitcond = icmp eq i32 %lftr.wideiv, %call4, !dbg !237
  br i1 %exitcond, label %for.end, label %for.body48, !dbg !237

for.end:                                          ; preds = %land.end96, %for.cond45.preheader
  switch i32 %call4, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb113
    i32 3, label %sw.bb124
  ], !dbg !250

sw.bb:                                            ; preds = %for.end
  %29 = load i32** %cctk_nghostzones, align 8, !dbg !240, !tbaa !225
  %30 = load i32*** %GFSym106, align 8, !dbg !240, !tbaa !225
  %arrayidx107 = getelementptr inbounds i32** %30, i64 %indvars.iv228, !dbg !240
  %31 = load i32** %arrayidx107, align 8, !dbg !240, !tbaa !225
  %32 = load i8**** %data, align 8, !dbg !240, !tbaa !225
  %arrayidx110 = getelementptr inbounds i8*** %32, i64 %indvars.iv228, !dbg !240
  %33 = load i8*** %arrayidx110, align 8, !dbg !240, !tbaa !225
  %34 = load i8** %33, align 8, !dbg !240, !tbaa !225
  %35 = bitcast i8* %34 to double*, !dbg !240
  %call112 = tail call i32 @CartApplySym1Di(%struct.cGH* %GH, i32* %10, i32* %13, i32* %12, i32* %29, i32* %31, double* %35) #5, !dbg !240
  tail call void @llvm.dbg.value(metadata !{i32 %call112}, i64 0, metadata !99), !dbg !240
  br label %sw.epilog, !dbg !251

sw.bb113:                                         ; preds = %for.end
  %36 = load i32** %cctk_nghostzones, align 8, !dbg !252, !tbaa !225
  %37 = load i32*** %GFSym106, align 8, !dbg !252, !tbaa !225
  %arrayidx117 = getelementptr inbounds i32** %37, i64 %indvars.iv228, !dbg !252
  %38 = load i32** %arrayidx117, align 8, !dbg !252, !tbaa !225
  %39 = load i8**** %data, align 8, !dbg !252, !tbaa !225
  %arrayidx121 = getelementptr inbounds i8*** %39, i64 %indvars.iv228, !dbg !252
  %40 = load i8*** %arrayidx121, align 8, !dbg !252, !tbaa !225
  %41 = load i8** %40, align 8, !dbg !252, !tbaa !225
  %42 = bitcast i8* %41 to double*, !dbg !252
  %call123 = tail call i32 @CartApplySym2Di(%struct.cGH* %GH, i32* %10, i32* %13, i32* %12, i32* %36, i32* %38, double* %42) #5, !dbg !252
  tail call void @llvm.dbg.value(metadata !{i32 %call123}, i64 0, metadata !99), !dbg !252
  br label %sw.epilog, !dbg !253

sw.bb124:                                         ; preds = %for.end
  %43 = load i32** %cctk_nghostzones, align 8, !dbg !254, !tbaa !225
  %44 = load i32*** %GFSym106, align 8, !dbg !254, !tbaa !225
  %arrayidx128 = getelementptr inbounds i32** %44, i64 %indvars.iv228, !dbg !254
  %45 = load i32** %arrayidx128, align 8, !dbg !254, !tbaa !225
  %46 = load i8**** %data, align 8, !dbg !254, !tbaa !225
  %arrayidx132 = getelementptr inbounds i8*** %46, i64 %indvars.iv228, !dbg !254
  %47 = load i8*** %arrayidx132, align 8, !dbg !254, !tbaa !225
  %48 = load i8** %47, align 8, !dbg !254, !tbaa !225
  %49 = bitcast i8* %48 to double*, !dbg !254
  %call134 = tail call i32 @CartApplySym3Di(%struct.cGH* %GH, i32* %10, i32* %13, i32* %12, i32* %43, i32* %45, double* %49) #5, !dbg !254
  tail call void @llvm.dbg.value(metadata !{i32 %call134}, i64 0, metadata !99), !dbg !254
  br label %sw.epilog, !dbg !255

sw.default:                                       ; preds = %for.end
  tail call void @llvm.dbg.value(metadata !215, i64 0, metadata !99), !dbg !256
  %call135 = tail call i32 @CCTK_Warn(i32 1, i32 187, i8* getelementptr inbounds ([77 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8]* @.str5, i64 0, i64 0)) #5, !dbg !256
  br label %sw.epilog, !dbg !257

sw.epilog:                                        ; preds = %sw.default, %sw.bb124, %sw.bb113, %sw.bb
  %indvars.iv.next229 = add i64 %indvars.iv228, 1, !dbg !235
  %50 = trunc i64 %indvars.iv.next229 to i32, !dbg !235
  %cmp43 = icmp slt i32 %50, %add, !dbg !235
  br i1 %cmp43, label %for.cond45.preheader, label %for.end140, !dbg !235

for.end140:                                       ; preds = %sw.epilog, %if.end
  tail call void @free(i8* %call10) #5, !dbg !258
  tail call void @free(i8* %call7) #5, !dbg !259
  tail call void @free(i8* %call13) #5, !dbg !260
  tail call void @free(i8* %call16) #5, !dbg !261
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  tail call void @llvm.dbg.value(metadata !262, i64 0, metadata !91), !dbg !263
  br label %return, !dbg !263

return:                                           ; preds = %for.end140, %if.then
  %retval.0 = phi i32 [ -1, %if.then ], [ %call17, %for.end140 ]
  ret i32 %retval.0, !dbg !264
}
