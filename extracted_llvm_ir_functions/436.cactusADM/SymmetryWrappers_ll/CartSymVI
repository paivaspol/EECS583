define i32 @CartSymVI(%struct.cGH* %GH, i32 %vi) #1 {
  %1 = load i8** getelementptr inbounds (%struct.anon* @gridrest_, i64 0, i32 13), align 8, !tbaa !26
  %2 = load i32* getelementptr inbounds (%struct.anon.0* @cartgrid3dpriv_, i64 0, i32 0), align 4, !tbaa !2
  %3 = load i32* getelementptr inbounds (%struct.anon.0* @cartgrid3dpriv_, i64 0, i32 1), align 4, !tbaa !7
  %4 = load i32* getelementptr inbounds (%struct.anon.0* @cartgrid3dpriv_, i64 0, i32 2), align 4, !tbaa !8
  %5 = load i32* getelementptr inbounds (%struct.anon.0* @cartgrid3dpriv_, i64 0, i32 3), align 4, !tbaa !9
  %6 = load i32* getelementptr inbounds (%struct.anon.0* @cartgrid3dpriv_, i64 0, i32 4), align 4, !tbaa !10
  %7 = load i32* getelementptr inbounds (%struct.anon.0* @cartgrid3dpriv_, i64 0, i32 5), align 4, !tbaa !11
  %8 = load i32* getelementptr inbounds (%struct.anon.0* @cartgrid3dpriv_, i64 0, i32 6), align 4, !tbaa !12
  %9 = load i32* getelementptr inbounds (%struct.anon.0* @cartgrid3dpriv_, i64 0, i32 7), align 4, !tbaa !13
  %10 = tail call i32 @CCTK_Equals(i8* %1, i8* getelementptr inbounds ([5 x i8]* @.str7, i64 0, i64 0)) #4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %149

; <label>:12                                      ; preds = %0
  %13 = tail call i32 @CCTK_GroupIndexFromVarI(i32 %vi) #4
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %15, label %18

; <label>:15                                      ; preds = %12
  %16 = tail call i8* @CCTK_FullName(i32 %vi) #4
  %17 = tail call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 284, i8* getelementptr inbounds ([89 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8]* @.str8, i64 0, i64 0), i32 %vi, i8* %16) #4
  br label %149

; <label>:18                                      ; preds = %12
  %19 = tail call i32 @CCTK_GroupDimI(i32 %13) #4
  %20 = tail call i32 @CCTK_GHExtensionHandle(i8* getelementptr inbounds ([9 x i8]* @.str3, i64 0, i64 0)) #4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 18
  %23 = load i8*** %22, align 8, !tbaa !14
  %24 = getelementptr inbounds i8** %23, i64 %21
  %25 = bitcast i8** %24 to %struct.Symmetry**
  %26 = load %struct.Symmetry** %25, align 8, !tbaa !18
  %27 = shl nsw i32 %19, 1
  %28 = sext i32 %27 to i64
  %29 = shl nsw i64 %28, 2
  %30 = tail call i8* @malloc(i64 %29) #4
  %31 = bitcast i8* %30 to i32*
  %32 = sext i32 %19 to i64
  %33 = shl nsw i64 %32, 2
  %34 = tail call i8* @malloc(i64 %33) #4
  %35 = bitcast i8* %34 to i32*
  %36 = tail call i8* @malloc(i64 %33) #4
  %37 = bitcast i8* %36 to i32*
  %38 = tail call i8* @malloc(i64 %33) #4
  %39 = bitcast i8* %38 to i32*
  %40 = tail call i32 @CCTK_GroupStaggerDirArrayGI(i32* %35, i32 %19, i32 %13) #4
  %41 = icmp ne i32 %6, 0
  %42 = icmp ne i32 %7, 0
  %or.cond = and i1 %41, %42
  %43 = icmp ne i32 %2, 0
  %or.cond3 = and i1 %43, %or.cond
  %44 = icmp ne i32 %3, 0
  %. = and i1 %44, %or.cond3
  %45 = zext i1 %. to i32
  store i32 %45, i32* %39, align 4, !tbaa !19
  %46 = icmp ne i32 %8, 0
  %or.cond5 = and i1 %41, %46
  %or.cond7 = and i1 %43, %or.cond5
  %47 = icmp ne i32 %4, 0
  %.13 = and i1 %47, %or.cond7
  %48 = zext i1 %.13 to i32
  %49 = getelementptr inbounds i8* %38, i64 4
  %50 = bitcast i8* %49 to i32*
  store i32 %48, i32* %50, align 4, !tbaa !19
  %51 = icmp ne i32 %9, 0
  %or.cond9 = and i1 %41, %51
  %or.cond11 = and i1 %43, %or.cond9
  %52 = icmp ne i32 %5, 0
  %.12 = and i1 %52, %or.cond11
  %53 = zext i1 %.12 to i32
  %54 = getelementptr inbounds i8* %38, i64 8
  %55 = bitcast i8* %54 to i32*
  store i32 %53, i32* %55, align 4, !tbaa !19
  %56 = icmp sgt i32 %19, 0
  br i1 %56, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %18
  %57 = sext i32 %vi to i64
  %58 = getelementptr inbounds %struct.Symmetry* %26, i64 0, i32 0
  %59 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 6
  %60 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 12
  %61 = add i32 %19, -1
  %.pre = load i32*** %58, align 8, !tbaa !20
  %.phi.trans.insert = getelementptr inbounds i32** %.pre, i64 %57
  %.pre16 = load i32** %.phi.trans.insert, align 8, !tbaa !18
  br label %62

; <label>:62                                      ; preds = %94, %.lr.ph
  %63 = phi i32* [ %.pre16, %.lr.ph ], [ %74, %94 ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %94 ]
  %64 = trunc i64 %indvars.iv to i32
  %65 = shl nsw i32 %64, 1
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i32* %63, i64 %66
  %68 = load i32* %67, align 4, !tbaa !19
  %69 = icmp eq i32 %68, -42
  br i1 %69, label %70, label %73

; <label>:70                                      ; preds = %62
  %71 = tail call i8* @CCTK_FullName(i32 %vi) #4
  %72 = tail call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 0, i32 328, i8* getelementptr inbounds ([89 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8]* @.str4, i64 0, i64 0), i8* %71) #4
  %.pre17 = load i32*** %58, align 8, !tbaa !20
  %.phi.trans.insert18 = getelementptr inbounds i32** %.pre17, i64 %57
  %.pre19 = load i32** %.phi.trans.insert18, align 8, !tbaa !18
  br label %73

; <label>:73                                      ; preds = %70, %62
  %74 = phi i32* [ %.pre19, %70 ], [ %63, %62 ]
  %75 = getelementptr inbounds i32* %35, i64 %indvars.iv
  %76 = load i32* %75, align 4, !tbaa !19
  %77 = mul nsw i64 %indvars.iv, 3
  %78 = trunc i64 %77 to i32
  %79 = add nsw i32 %76, %78
  %80 = sext i32 %79 to i64
  %81 = load i32** %59, align 8, !tbaa !22
  %82 = getelementptr inbounds i32* %81, i64 %80
  %83 = load i32* %82, align 4, !tbaa !19
  %84 = getelementptr inbounds i32* %37, i64 %indvars.iv
  store i32 %83, i32* %84, align 4, !tbaa !19
  %85 = getelementptr inbounds i32* %74, i64 %66
  %86 = load i32* %85, align 4, !tbaa !19
  %87 = and i32 %86, -2
  %switch = icmp ne i32 %87, -42
  %88 = icmp sgt i32 %83, 1
  %or.cond14 = and i1 %88, %switch
  br i1 %or.cond14, label %89, label %94

; <label>:89                                      ; preds = %73
  %90 = load i32** %60, align 8, !tbaa !23
  %91 = getelementptr inbounds i32* %90, i64 %66
  %92 = load i32* %91, align 4, !tbaa !19
  %93 = icmp ne i32 %92, 0
  br label %94

; <label>:94                                      ; preds = %73, %89
  %95 = phi i1 [ %93, %89 ], [ false, %73 ]
  %96 = zext i1 %95 to i32
  %97 = getelementptr inbounds i32* %31, i64 %66
  store i32 %96, i32* %97, align 4, !tbaa !19
  %98 = or i32 %65, 1
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i32* %31, i64 %99
  store i32 0, i32* %100, align 4, !tbaa !19
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i32 %64, %61
  br i1 %exitcond, label %._crit_edge, label %62

._crit_edge:                                      ; preds = %94, %18
  switch i32 %19, label %146 [
    i32 1, label %101
    i32 2, label %116
    i32 3, label %131
  ]

; <label>:101                                     ; preds = %._crit_edge
  %102 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 15
  %103 = load i32** %102, align 8, !tbaa !24
  %104 = sext i32 %vi to i64
  %105 = getelementptr inbounds %struct.Symmetry* %26, i64 0, i32 0
  %106 = load i32*** %105, align 8, !tbaa !20
  %107 = getelementptr inbounds i32** %106, i64 %104
  %108 = load i32** %107, align 8, !tbaa !18
  %109 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 17
  %110 = load i8**** %109, align 8, !tbaa !25
  %111 = getelementptr inbounds i8*** %110, i64 %104
  %112 = bitcast i8*** %111 to double***
  %113 = load double*** %112, align 8, !tbaa !18
  %114 = load double** %113, align 8, !tbaa !18
  %115 = tail call i32 @CartApplySym1Di(%struct.cGH* %GH, i32* %31, i32* %39, i32* %37, i32* %103, i32* %108, double* %114) #4
  br label %148

; <label>:116                                     ; preds = %._crit_edge
  %117 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 15
  %118 = load i32** %117, align 8, !tbaa !24
  %119 = sext i32 %vi to i64
  %120 = getelementptr inbounds %struct.Symmetry* %26, i64 0, i32 0
  %121 = load i32*** %120, align 8, !tbaa !20
  %122 = getelementptr inbounds i32** %121, i64 %119
  %123 = load i32** %122, align 8, !tbaa !18
  %124 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 17
  %125 = load i8**** %124, align 8, !tbaa !25
  %126 = getelementptr inbounds i8*** %125, i64 %119
  %127 = bitcast i8*** %126 to double***
  %128 = load double*** %127, align 8, !tbaa !18
  %129 = load double** %128, align 8, !tbaa !18
  %130 = tail call i32 @CartApplySym2Di(%struct.cGH* %GH, i32* %31, i32* %39, i32* %37, i32* %118, i32* %123, double* %129) #4
  br label %148

; <label>:131                                     ; preds = %._crit_edge
  %132 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 15
  %133 = load i32** %132, align 8, !tbaa !24
  %134 = sext i32 %vi to i64
  %135 = getelementptr inbounds %struct.Symmetry* %26, i64 0, i32 0
  %136 = load i32*** %135, align 8, !tbaa !20
  %137 = getelementptr inbounds i32** %136, i64 %134
  %138 = load i32** %137, align 8, !tbaa !18
  %139 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 17
  %140 = load i8**** %139, align 8, !tbaa !25
  %141 = getelementptr inbounds i8*** %140, i64 %134
  %142 = bitcast i8*** %141 to double***
  %143 = load double*** %142, align 8, !tbaa !18
  %144 = load double** %143, align 8, !tbaa !18
  %145 = tail call i32 @CartApplySym3Di(%struct.cGH* %GH, i32* %31, i32* %39, i32* %37, i32* %133, i32* %138, double* %144) #4
  br label %148

; <label>:146                                     ; preds = %._crit_edge
  %147 = tail call i32 @CCTK_Warn(i32 1, i32 376, i8* getelementptr inbounds ([89 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8]* @.str9, i64 0, i64 0)) #4
  br label %148

; <label>:148                                     ; preds = %146, %131, %116, %101
  %berr.0 = phi i32 [ -1, %146 ], [ %145, %131 ], [ %130, %116 ], [ %115, %101 ]
  tail call void @free(i8* %36) #5
  tail call void @free(i8* %34) #5
  tail call void @free(i8* %30) #5
  tail call void @free(i8* %38) #5
  br label %149

; <label>:149                                     ; preds = %0, %148, %15
  %.0 = phi i32 [ -1, %15 ], [ %berr.0, %148 ], [ 0, %0 ]
  ret i32 %.0
}
