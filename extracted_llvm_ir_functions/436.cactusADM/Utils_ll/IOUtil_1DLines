define i32 @IOUtil_1DLines(%struct.cGH* %GH, i32 %num_dims, i32** readonly %origin_index, double** nocapture readonly %origin_phys, i32** nocapture readonly %slice_center) #1 {
  %coord_system_name = alloca [20 x i8], align 16
  tail call void @llvm.dbg.value(metadata %struct.cGH* %GH, i64 0, metadata !68, metadata !151), !dbg !152
  tail call void @llvm.dbg.value(metadata i32 %num_dims, i64 0, metadata !69, metadata !151), !dbg !153
  tail call void @llvm.dbg.value(metadata i32** %origin_index, i64 0, metadata !70, metadata !151), !dbg !154
  tail call void @llvm.dbg.value(metadata double** %origin_phys, i64 0, metadata !71, metadata !151), !dbg !155
  tail call void @llvm.dbg.value(metadata i32** %slice_center, i64 0, metadata !72, metadata !151), !dbg !156
  tail call void @llvm.dbg.declare(metadata [20 x i8]* %coord_system_name, metadata !75, metadata !151), !dbg !157
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !81, metadata !151), !dbg !158
  %1 = shl nsw i32 %num_dims, 1, !dbg !159
  %2 = sext i32 %1 to i64, !dbg !160
  %3 = tail call i8* @calloc(i64 %2, i64 8) #7, !dbg !161
  %4 = bitcast i8* %3 to double*, !dbg !162
  tail call void @llvm.dbg.value(metadata double* %4, i64 0, metadata !79, metadata !151), !dbg !163
  %5 = sext i32 %num_dims to i64, !dbg !164
  %6 = getelementptr inbounds [20 x i8]* %coord_system_name, i64 0, i64 0, !dbg !165
  %7 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %6, i32 0, i64 20, i8* getelementptr inbounds ([8 x i8]* @.str, i64 0, i64 0), i32 %num_dims) #7, !dbg !165
  %8 = call i32 @CCTK_CoordSystemHandle(i8* %6) #7, !dbg !166
  %9 = icmp sgt i32 %8, -1, !dbg !168
  br i1 %9, label %.preheader6, label %25, !dbg !169

.preheader6:                                      ; preds = %0
  %10 = icmp sgt i32 %num_dims, 0, !dbg !170
  br i1 %10, label %.lr.ph13, label %.thread5, !dbg !174

.lr.ph13:                                         ; preds = %.preheader6
  %11 = add i32 %num_dims, -1, !dbg !174
  br label %15, !dbg !174

.thread.preheader:                                ; preds = %.backedge
  br i1 %10, label %.preheader.lr.ph, label %.thread5, !dbg !175

.preheader.lr.ph:                                 ; preds = %.thread.preheader
  %12 = icmp eq i32** %origin_index, null, !dbg !179
  %13 = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 10, !dbg !187
  %14 = add i32 %num_dims, -1, !dbg !175
  br label %.lr.ph, !dbg !175

; <label>:15                                      ; preds = %.backedge, %.lr.ph13
  %indvars.iv22 = phi i64 [ 0, %.lr.ph13 ], [ %indvars.iv.next23, %.backedge ]
  %16 = getelementptr inbounds double* %4, i64 %indvars.iv22, !dbg !190
  %.sum2 = add nsw i64 %indvars.iv22, %5, !dbg !193
  %17 = getelementptr inbounds double* %4, i64 %.sum2, !dbg !193
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1, !dbg !174
  %18 = trunc i64 %indvars.iv.next23 to i32, !dbg !194
  %19 = call i32 @CCTK_CoordRange(%struct.cGH* %GH, double* %16, double* %17, i32 %18, i8* null, i8* %6) #7, !dbg !194
  %20 = icmp slt i32 %19, 0, !dbg !195
  br i1 %20, label %21, label %.backedge, !dbg !196

.backedge:                                        ; preds = %15, %21
  %lftr.wideiv24 = trunc i64 %indvars.iv22 to i32, !dbg !174
  %exitcond25 = icmp eq i32 %lftr.wideiv24, %11, !dbg !174
  br i1 %exitcond25, label %.thread.preheader, label %15, !dbg !174

; <label>:21                                      ; preds = %15
  %22 = add nuw nsw i64 %indvars.iv22, 120, !dbg !197
  %23 = trunc i64 %22 to i32, !dbg !199
  %24 = call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 107, i8* getelementptr inbounds ([74 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8]* @.str3, i64 0, i64 0), i32 %23, i8* %6) #7, !dbg !199
  br label %.backedge, !dbg !200

; <label>:25                                      ; preds = %0
  %26 = call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 4, i32 116, i8* getelementptr inbounds ([74 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([126 x i8]* @.str4, i64 0, i64 0), i8* %6, i32 %num_dims) #7, !dbg !201
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !74, metadata !151), !dbg !203
  %27 = icmp sgt i32 %num_dims, 0, !dbg !204
  br i1 %27, label %.preheader7.lr.ph, label %.thread5, !dbg !207

.preheader7.lr.ph:                                ; preds = %25
  %28 = add i32 %num_dims, -1, !dbg !207
  %29 = zext i32 %28 to i64
  %30 = shl nuw nsw i64 %29, 2, !dbg !207
  %31 = add nuw nsw i64 %30, 4, !dbg !207
  br label %32, !dbg !207

; <label>:32                                      ; preds = %32, %.preheader7.lr.ph
  %indvars.iv30 = phi i64 [ 0, %.preheader7.lr.ph ], [ %indvars.iv.next31, %32 ]
  %33 = getelementptr inbounds i32** %slice_center, i64 %indvars.iv30, !dbg !208
  %34 = bitcast i32** %33 to i8**, !dbg !208
  %35 = load i8** %34, align 8, !dbg !208, !tbaa !213
  call void @llvm.memset.p0i8.i64(i8* %35, i8 0, i64 %31, i32 4, i1 false), !dbg !217
  %indvars.iv.next31 = add nuw nsw i64 %indvars.iv30, 1, !dbg !207
  %lftr.wideiv32 = trunc i64 %indvars.iv30 to i32, !dbg !207
  %exitcond33 = icmp eq i32 %lftr.wideiv32, %28, !dbg !207
  br i1 %exitcond33, label %.thread5, label %32, !dbg !207

.lr.ph:                                           ; preds = %.preheader.lr.ph, %.thread
  %indvars.iv18 = phi i64 [ 0, %.preheader.lr.ph ], [ %indvars.iv.next19, %.thread ]
  %36 = getelementptr inbounds i32** %slice_center, i64 %indvars.iv18, !dbg !218
  %37 = getelementptr inbounds double** %origin_phys, i64 %indvars.iv18, !dbg !220
  %38 = add nuw nsw i64 %indvars.iv18, 120, !dbg !221
  %39 = getelementptr inbounds i32** %origin_index, i64 %indvars.iv18, !dbg !223
  br label %40, !dbg !224

; <label>:40                                      ; preds = %85, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %85 ]
  %41 = trunc i64 %indvars.iv to i32, !dbg !225
  %42 = trunc i64 %indvars.iv18 to i32, !dbg !225
  %43 = icmp eq i32 %41, %42, !dbg !225
  br i1 %43, label %44, label %47, !dbg !226

; <label>:44                                      ; preds = %40
  %45 = load i32** %36, align 8, !dbg !218, !tbaa !213
  %46 = getelementptr inbounds i32* %45, i64 %indvars.iv, !dbg !218
  store i32 0, i32* %46, align 4, !dbg !227, !tbaa !228
  br label %85, !dbg !230

; <label>:47                                      ; preds = %40
  br i1 %12, label %56, label %48, !dbg !231

; <label>:48                                      ; preds = %47
  %49 = load i32** %39, align 8, !dbg !223, !tbaa !213
  %50 = getelementptr inbounds i32* %49, i64 %indvars.iv, !dbg !223
  %51 = load i32* %50, align 4, !dbg !223, !tbaa !228
  %52 = icmp sgt i32 %51, -1, !dbg !232
  br i1 %52, label %53, label %56, !dbg !233

; <label>:53                                      ; preds = %48
  %54 = load i32** %36, align 8, !dbg !234, !tbaa !213
  %55 = getelementptr inbounds i32* %54, i64 %indvars.iv, !dbg !234
  store i32 %51, i32* %55, align 4, !dbg !236, !tbaa !228
  br label %85, !dbg !237

; <label>:56                                      ; preds = %47, %48
  %57 = getelementptr inbounds double* %4, i64 %indvars.iv, !dbg !238
  %58 = load double* %57, align 8, !dbg !238, !tbaa !239
  %59 = load double** %37, align 8, !dbg !220, !tbaa !213
  %60 = getelementptr inbounds double* %59, i64 %indvars.iv, !dbg !220
  %61 = load double* %60, align 8, !dbg !220, !tbaa !239
  %62 = fcmp ogt double %58, %61, !dbg !241
  %.pre35 = add nsw i64 %indvars.iv, %5, !dbg !242
  %.pre36 = getelementptr inbounds double* %4, i64 %.pre35, !dbg !242
  br i1 %62, label %._crit_edge34, label %63, !dbg !243

; <label>:63                                      ; preds = %56
  %64 = load double* %.pre36, align 8, !dbg !244, !tbaa !239
  %65 = fcmp olt double %64, %61, !dbg !245
  br i1 %65, label %._crit_edge34, label %74, !dbg !246

._crit_edge34:                                    ; preds = %56, %63
  %66 = add nuw nsw i64 %indvars.iv, 120, !dbg !247
  %67 = load double* %.pre36, align 8, !dbg !242, !tbaa !239
  %68 = trunc i64 %66 to i32, !dbg !248
  %69 = trunc i64 %38 to i32, !dbg !248
  %70 = call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 153, i8* getelementptr inbounds ([74 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([122 x i8]* @.str5, i64 0, i64 0), i32 %68, i32 %69, double %61, double %58, double %67) #7, !dbg !248
  %71 = call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 159, i8* getelementptr inbounds ([74 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([102 x i8]* @.str6, i64 0, i64 0), i32 %69, i32 %num_dims) #7, !dbg !249
  %72 = load i32** %36, align 8, !dbg !250, !tbaa !213
  %73 = getelementptr inbounds i32* %72, i64 %indvars.iv, !dbg !250
  store i32 -1, i32* %73, align 4, !dbg !251, !tbaa !228
  br label %85, !dbg !252

; <label>:74                                      ; preds = %63
  %75 = fsub double %61, %58, !dbg !253
  %76 = load double** %13, align 8, !dbg !187, !tbaa !254
  %77 = getelementptr inbounds double* %76, i64 %indvars.iv, !dbg !256
  %78 = load double* %77, align 8, !dbg !256, !tbaa !239
  %79 = fdiv double %75, %78, !dbg !257
  %80 = fadd double %79, -1.000000e-06, !dbg !258
  %81 = call double @ceil(double %80) #8, !dbg !259
  %82 = fptosi double %81 to i32, !dbg !259
  %83 = load i32** %36, align 8, !dbg !260, !tbaa !213
  %84 = getelementptr inbounds i32* %83, i64 %indvars.iv, !dbg !260
  store i32 %82, i32* %84, align 4, !dbg !261, !tbaa !228
  br label %85

; <label>:85                                      ; preds = %44, %._crit_edge34, %74, %53
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !224
  %exitcond = icmp eq i32 %41, %14, !dbg !224
  br i1 %exitcond, label %.thread, label %40, !dbg !224

.thread:                                          ; preds = %85
  %indvars.iv.next19 = add nuw nsw i64 %indvars.iv18, 1, !dbg !175
  %exitcond21 = icmp eq i32 %42, %14, !dbg !175
  br i1 %exitcond21, label %.thread5, label %.lr.ph, !dbg !175

.thread5:                                         ; preds = %32, %.thread, %.preheader6, %25, %.thread.preheader
  %retval.03 = phi i32 [ 0, %.thread.preheader ], [ -1, %25 ], [ 0, %.preheader6 ], [ 0, %.thread ], [ -1, %32 ]
  call void @free(i8* %3) #9, !dbg !262
  ret i32 %retval.03, !dbg !263
}
