define i32 @IOUtil_2DPlanes(%struct.cGH* %GH, i32 %num_dims, i32* %origin_index, double* nocapture %origin_phys, i32* nocapture %slice_center) #1 {
entry:
  %coord_system_name = alloca [20 x i8], align 16
  call void @llvm.dbg.value(metadata !{%struct.cGH* %GH}, i64 0, metadata !90), !dbg !204
  call void @llvm.dbg.value(metadata !{i32 %num_dims}, i64 0, metadata !91), !dbg !205
  call void @llvm.dbg.value(metadata !{i32* %origin_index}, i64 0, metadata !92), !dbg !206
  call void @llvm.dbg.value(metadata !{double* %origin_phys}, i64 0, metadata !93), !dbg !207
  call void @llvm.dbg.value(metadata !{i32* %slice_center}, i64 0, metadata !94), !dbg !208
  call void @llvm.dbg.declare(metadata !{[20 x i8]* %coord_system_name}, metadata !96), !dbg !209
  %arraydecay = getelementptr inbounds [20 x i8]* %coord_system_name, i64 0, i64 0, !dbg !210
  %call = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([8 x i8]* @.str, i64 0, i64 0), i32 %num_dims) #7, !dbg !210
  %call2 = call i32 @CCTK_CoordSystemHandle(i8* %arraydecay) #7, !dbg !211
  %cmp = icmp slt i32 %call2, 0, !dbg !211
  br i1 %cmp, label %if.then, label %if.end, !dbg !211

if.then:                                          ; preds = %entry
  %call4 = call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 4, i32 248, i8* getelementptr inbounds ([62 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([128 x i8]* @.str7, i64 0, i64 0), i8* %arraydecay, i32 %num_dims) #7, !dbg !212
  br label %return, !dbg !214

if.end:                                           ; preds = %entry
  %mul = shl nsw i32 %num_dims, 1, !dbg !215
  %conv = sext i32 %mul to i64, !dbg !215
  %call5 = call noalias i8* @calloc(i64 %conv, i64 8) #7, !dbg !215
  %0 = bitcast i8* %call5 to double*, !dbg !215
  call void @llvm.dbg.value(metadata !{double* %0}, i64 0, metadata !97), !dbg !215
  %idx.ext = sext i32 %num_dims to i64, !dbg !216
  call void @llvm.dbg.value(metadata !10, i64 0, metadata !95), !dbg !217
  %cmp6137 = icmp sgt i32 %num_dims, 0, !dbg !217
  br i1 %cmp6137, label %for.body, label %for.end81, !dbg !217

for.cond20.preheader:                             ; preds = %for.inc
  br i1 %cmp6137, label %for.body23.lr.ph, label %for.end81, !dbg !219

for.body23.lr.ph:                                 ; preds = %for.cond20.preheader
  %tobool = icmp eq i32* %origin_index, null, !dbg !221
  %sub68 = add i32 %num_dims, -1, !dbg !223
  %cctk_delta_space = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 10, !dbg !223
  br label %for.body23, !dbg !219

for.body:                                         ; preds = %if.end, %for.inc
  %indvars.iv139 = phi i64 [ %indvars.iv.next140, %for.inc ], [ 0, %if.end ]
  %arrayidx = getelementptr inbounds double* %0, i64 %indvars.iv139, !dbg !225
  %add.ptr.sum133 = add i64 %indvars.iv139, %idx.ext, !dbg !225
  %arrayidx9 = getelementptr inbounds double* %0, i64 %add.ptr.sum133, !dbg !225
  %1 = trunc i64 %indvars.iv139 to i32, !dbg !225
  %sub = sub nsw i32 %num_dims, %1, !dbg !225
  %call11 = call i32 @CCTK_CoordRange(%struct.cGH* %GH, double* %arrayidx, double* %arrayidx9, i32 %sub, i8* null, i8* %arraydecay) #7, !dbg !225
  %cmp12 = icmp slt i32 %call11, 0, !dbg !225
  br i1 %cmp12, label %if.then14, label %for.inc, !dbg !225

if.then14:                                        ; preds = %for.body
  %add = add nsw i32 %sub, 119, !dbg !227
  %call18 = call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 265, i8* getelementptr inbounds ([62 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8]* @.str8, i64 0, i64 0), i32 %add, i8* %arraydecay) #7, !dbg !227
  br label %for.inc, !dbg !229

for.inc:                                          ; preds = %for.body, %if.then14
  %indvars.iv.next140 = add i64 %indvars.iv139, 1, !dbg !217
  %lftr.wideiv141 = trunc i64 %indvars.iv.next140 to i32, !dbg !217
  %exitcond142 = icmp eq i32 %lftr.wideiv141, %num_dims, !dbg !217
  br i1 %exitcond142, label %for.cond20.preheader, label %for.body, !dbg !217

for.body23:                                       ; preds = %for.inc79, %for.body23.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body23.lr.ph ], [ %indvars.iv.next, %for.inc79 ]
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !221

land.lhs.true:                                    ; preds = %for.body23
  %arrayidx25 = getelementptr inbounds i32* %origin_index, i64 %indvars.iv, !dbg !221
  %2 = load i32* %arrayidx25, align 4, !dbg !221, !tbaa !193
  %cmp26 = icmp sgt i32 %2, -1, !dbg !221
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !221

if.then28:                                        ; preds = %land.lhs.true
  %arrayidx32 = getelementptr inbounds i32* %slice_center, i64 %indvars.iv, !dbg !230
  store i32 %2, i32* %arrayidx32, align 4, !dbg !230, !tbaa !193
  br label %for.inc79, !dbg !232

if.else:                                          ; preds = %for.body23, %land.lhs.true
  %arrayidx34 = getelementptr inbounds double* %0, i64 %indvars.iv, !dbg !233
  %3 = load double* %arrayidx34, align 8, !dbg !233, !tbaa !198
  %arrayidx36 = getelementptr inbounds double* %origin_phys, i64 %indvars.iv, !dbg !233
  %4 = load double* %arrayidx36, align 8, !dbg !233, !tbaa !198
  %cmp37 = fcmp ogt double %3, %4, !dbg !233
  %add.ptr.sum132.pre = add i64 %indvars.iv, %idx.ext, !dbg !234
  %arrayidx54.pre = getelementptr inbounds double* %0, i64 %add.ptr.sum132.pre, !dbg !234
  br i1 %cmp37, label %if.then45, label %lor.lhs.false, !dbg !233

lor.lhs.false:                                    ; preds = %if.else
  %5 = load double* %arrayidx54.pre, align 8, !dbg !233, !tbaa !198
  %cmp43 = fcmp olt double %5, %4, !dbg !233
  br i1 %cmp43, label %if.then45, label %if.else62, !dbg !233

if.then45:                                        ; preds = %if.else, %lor.lhs.false
  %6 = trunc i64 %indvars.iv to i32, !dbg !234
  %sub46 = sub nsw i32 %num_dims, %6, !dbg !234
  %add48 = add nsw i32 %sub46, 119, !dbg !234
  %7 = load double* %arrayidx54.pre, align 8, !dbg !234, !tbaa !198
  %call55 = call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 283, i8* getelementptr inbounds ([62 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([108 x i8]* @.str9, i64 0, i64 0), i32 %add48, double %4, double %3, double %7) #7, !dbg !234
  %call59 = call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 288, i8* getelementptr inbounds ([62 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([111 x i8]* @.str10, i64 0, i64 0), i32 %add48, i32 %num_dims) #7, !dbg !236
  %arrayidx61 = getelementptr inbounds i32* %slice_center, i64 %indvars.iv, !dbg !237
  store i32 0, i32* %arrayidx61, align 4, !dbg !237, !tbaa !193
  br label %for.inc79, !dbg !238

if.else62:                                        ; preds = %lor.lhs.false
  %sub67 = fsub double %4, %3, !dbg !223
  %8 = trunc i64 %indvars.iv to i32, !dbg !223
  %sub69 = sub i32 %sub68, %8, !dbg !223
  %idxprom70 = sext i32 %sub69 to i64, !dbg !223
  %9 = load double** %cctk_delta_space, align 8, !dbg !223, !tbaa !183
  %arrayidx71 = getelementptr inbounds double* %9, i64 %idxprom70, !dbg !223
  %10 = load double* %arrayidx71, align 8, !dbg !223, !tbaa !198
  %div = fdiv double %sub67, %10, !dbg !223
  %sub72 = fadd double %div, -1.000000e-06, !dbg !223
  %call73 = call double @ceil(double %sub72) #8, !dbg !223
  %conv74 = fptosi double %call73 to i32, !dbg !223
  %arrayidx76 = getelementptr inbounds i32* %slice_center, i64 %indvars.iv, !dbg !223
  store i32 %conv74, i32* %arrayidx76, align 4, !dbg !223, !tbaa !193
  br label %for.inc79

for.inc79:                                        ; preds = %if.then28, %if.else62, %if.then45
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !219
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !219
  %exitcond = icmp eq i32 %lftr.wideiv, %num_dims, !dbg !219
  br i1 %exitcond, label %for.end81, label %for.body23, !dbg !219

for.end81:                                        ; preds = %if.end, %for.inc79, %for.cond20.preheader
  call void @free(i8* %call5) #7, !dbg !239
  br label %return, !dbg !240

return:                                           ; preds = %for.end81, %if.then
  %retval.0 = phi i32 [ -1, %if.then ], [ 0, %for.end81 ]
  ret i32 %retval.0, !dbg !240
}
