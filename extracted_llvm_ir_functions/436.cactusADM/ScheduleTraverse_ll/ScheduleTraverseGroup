define internal fastcc void @ScheduleTraverseGroup(%struct.cHandledData* %schedule_groups, %struct.t_sched_group* nocapture %group, i8* %attributes, i32 %n_whiles, i8** %whiles, i32 (i8*, i8*)* %item_entry, i32 (i8*, i8*)* %item_exit, i32 (i32, i8**, i8*, i8*, i32)* %while_check, i32 (i8*, i8*, i8*)* nocapture %function_process, i8* %data) #1 {
entry:
  %cmp.not = icmp slt i32 %n_whiles, 1, !dbg !152
  %tobool = icmp eq i32 (i32, i8**, i8*, i8*, i32)* %while_check, null, !dbg !152
  %or.cond = or i1 %cmp.not, %tobool, !dbg !152
  br i1 %or.cond, label %if.then2, label %if.end, !dbg !152

if.end:                                           ; preds = %entry
  %call = tail call i32 %while_check(i32 %n_whiles, i8** %whiles, i8* %attributes, i8* %data, i32 1) #5, !dbg !153
  tail call void @llvm.dbg.value(metadata !{i32 %call}, i64 0, metadata !114), !dbg !153
  %tobool1 = icmp eq i32 %call, 0, !dbg !155
  br i1 %tobool1, label %if.end93, label %if.then2, !dbg !155

if.then2:                                         ; preds = %entry, %if.end
  tail call void @llvm.dbg.value(metadata !156, i64 0, metadata !115), !dbg !157
  %tobool3 = icmp eq i32 (i8*, i8*)* %item_entry, null, !dbg !159
  br i1 %tobool3, label %for.cond.preheader.lr.ph, label %while.cond.preheader, !dbg !159

while.cond.preheader:                             ; preds = %if.then2
  %call5 = tail call i32 %item_entry(i8* %attributes, i8* %data) #5, !dbg !160
  tail call void @llvm.dbg.value(metadata !{i32 %call5}, i64 0, metadata !114), !dbg !160
  %tobool98 = icmp eq i32 %call5, 0, !dbg !162
  br i1 %tobool98, label %while.end, label %for.cond.preheader.lr.ph, !dbg !162

for.cond.preheader.lr.ph:                         ; preds = %if.then2, %while.cond.preheader
  %n_scheditems = getelementptr inbounds %struct.t_sched_group* %group, i64 0, i32 2, !dbg !163
  %order = getelementptr inbounds %struct.t_sched_group* %group, i64 0, i32 1, !dbg !166
  %scheditems = getelementptr inbounds %struct.t_sched_group* %group, i64 0, i32 3, !dbg !166
  %tobool3.i = icmp eq i32 (i8*, i8*)* %item_entry, null, !dbg !168
  %tobool20.i = icmp eq i32 (i8*, i8*)* %item_exit, null, !dbg !172
  br label %for.cond.preheader, !dbg !162

for.cond.preheader:                               ; preds = %while.cond.backedge, %for.cond.preheader.lr.ph
  %0 = load i32* %n_scheditems, align 4, !dbg !163, !tbaa !174
  %cmp106 = icmp sgt i32 %0, 0, !dbg !163
  br i1 %cmp106, label %for.body, label %for.end, !dbg !163

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.cond.preheader ]
  %1 = load i32** %order, align 8, !dbg !166, !tbaa !147
  %arrayidx = getelementptr inbounds i32* %1, i64 %indvars.iv, !dbg !166
  %2 = load i32* %arrayidx, align 4, !dbg !166, !tbaa !174
  %idxprom11 = sext i32 %2 to i64, !dbg !166
  %3 = load %struct.t_sched_item** %scheditems, align 8, !dbg !166, !tbaa !147
  %type = getelementptr inbounds %struct.t_sched_item* %3, i64 %idxprom11, i32 1, !dbg !166
  %4 = load i32* %type, align 4, !dbg !166, !tbaa !148
  switch i32 %4, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb41
  ], !dbg !166

sw.bb:                                            ; preds = %for.body
  %function = getelementptr inbounds %struct.t_sched_item* %3, i64 %idxprom11, i32 2, !dbg !170
  %5 = load i8** %function, align 8, !dbg !170, !tbaa !147
  %attributes25 = getelementptr inbounds %struct.t_sched_item* %3, i64 %idxprom11, i32 6, !dbg !170
  %6 = load i8** %attributes25, align 8, !dbg !170, !tbaa !147
  %n_whiles32 = getelementptr inbounds %struct.t_sched_item* %3, i64 %idxprom11, i32 4, !dbg !170
  %7 = load i32* %n_whiles32, align 4, !dbg !170, !tbaa !174
  %whiles39 = getelementptr inbounds %struct.t_sched_item* %3, i64 %idxprom11, i32 5, !dbg !170
  %8 = load i8*** %whiles39, align 8, !dbg !170, !tbaa !147
  %cmp.not.i = icmp slt i32 %7, 1, !dbg !175
  %or.cond.i = or i1 %cmp.not.i, %tobool, !dbg !175
  br i1 %or.cond.i, label %if.then2.i, label %if.end.i, !dbg !175

if.end.i:                                         ; preds = %sw.bb
  %call.i = tail call i32 %while_check(i32 %7, i8** %8, i8* %6, i8* %data, i32 1) #5, !dbg !176
  tail call void @llvm.dbg.value(metadata !{i32 %call.i}, i64 0, metadata !178) #7, !dbg !176
  %tobool1.i = icmp eq i32 %call.i, 0, !dbg !179
  br i1 %tobool1.i, label %for.inc, label %if.then2.i, !dbg !179

if.then2.i:                                       ; preds = %if.end.i, %sw.bb
  tail call void @llvm.dbg.value(metadata !156, i64 0, metadata !180) #7, !dbg !181
  br i1 %tobool3.i, label %while.body.i, label %while.cond.preheader.i, !dbg !168

while.cond.preheader.i:                           ; preds = %if.then2.i
  %call5.i = tail call i32 %item_entry(i8* %6, i8* %data) #5, !dbg !182
  tail call void @llvm.dbg.value(metadata !{i32 %call5.i}, i64 0, metadata !178) #7, !dbg !182
  %tobool96.i = icmp eq i32 %call5.i, 0, !dbg !184
  br i1 %tobool96.i, label %while.end.i, label %while.body.i, !dbg !184

while.body.i:                                     ; preds = %while.cond.preheader.i, %if.then2.i, %while.cond.backedge.i
  %call10.i = tail call i32 %function_process(i8* %5, i8* %6, i8* %data) #5, !dbg !185
  br i1 %or.cond.i, label %while.end.i, label %while.cond.backedge.i, !dbg !187

while.cond.backedge.i:                            ; preds = %while.body.i
  %call15.i = tail call i32 %while_check(i32 %7, i8** %8, i8* %6, i8* %data, i32 0) #5, !dbg !188
  tail call void @llvm.dbg.value(metadata !{i32 %call15.i}, i64 0, metadata !178) #7, !dbg !188
  %phitmp.i = icmp eq i32 %call15.i, 0, !dbg !190
  br i1 %phitmp.i, label %while.end.i, label %while.body.i, !dbg !184

while.end.i:                                      ; preds = %while.cond.backedge.i, %while.body.i, %while.cond.preheader.i
  br i1 %tobool20.i, label %for.inc, label %if.then21.i, !dbg !191

if.then21.i:                                      ; preds = %while.end.i
  %call22.i = tail call i32 %item_exit(i8* %6, i8* %data) #5, !dbg !192
  br label %for.inc, !dbg !194

sw.bb41:                                          ; preds = %for.body
  %group48 = getelementptr inbounds %struct.t_sched_item* %3, i64 %idxprom11, i32 3, !dbg !195
  %9 = load i32* %group48, align 4, !dbg !195, !tbaa !174
  %call49 = tail call i8* @Util_GetHandledData(%struct.cHandledData* %schedule_groups, i32 %9) #5, !dbg !195
  %10 = bitcast i8* %call49 to %struct.t_sched_group*, !dbg !195
  tail call void @llvm.dbg.value(metadata !{%struct.t_sched_group* %10}, i64 0, metadata !116), !dbg !195
  %11 = load i32** %order, align 8, !dbg !196, !tbaa !147
  %arrayidx52 = getelementptr inbounds i32* %11, i64 %indvars.iv, !dbg !196
  %12 = load i32* %arrayidx52, align 4, !dbg !196, !tbaa !174
  %idxprom53 = sext i32 %12 to i64, !dbg !196
  %13 = load %struct.t_sched_item** %scheditems, align 8, !dbg !196, !tbaa !147
  %attributes56 = getelementptr inbounds %struct.t_sched_item* %13, i64 %idxprom53, i32 6, !dbg !196
  %14 = load i8** %attributes56, align 8, !dbg !196, !tbaa !147
  %n_whiles63 = getelementptr inbounds %struct.t_sched_item* %13, i64 %idxprom53, i32 4, !dbg !196
  %15 = load i32* %n_whiles63, align 4, !dbg !196, !tbaa !174
  %whiles70 = getelementptr inbounds %struct.t_sched_item* %13, i64 %idxprom53, i32 5, !dbg !196
  %16 = load i8*** %whiles70, align 8, !dbg !196, !tbaa !147
  tail call fastcc void @ScheduleTraverseGroup(%struct.cHandledData* %schedule_groups, %struct.t_sched_group* %10, i8* %14, i32 %15, i8** %16, i32 (i8*, i8*)* %item_entry, i32 (i8*, i8*)* %item_exit, i32 (i32, i8**, i8*, i8*, i32)* %while_check, i32 (i8*, i8*, i8*)* %function_process, i8* %data) #6, !dbg !196
  br label %for.inc, !dbg !197

sw.default:                                       ; preds = %for.body
  %17 = load %struct._IO_FILE** @stderr, align 8, !dbg !198, !tbaa !147
  %call79 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([31 x i8]* @.str, i64 0, i64 0), i32 %4) #5, !dbg !198
  br label %for.inc, !dbg !199

for.inc:                                          ; preds = %if.then21.i, %while.end.i, %if.end.i, %sw.bb41, %sw.default
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !163
  %18 = load i32* %n_scheditems, align 4, !dbg !163, !tbaa !174
  %19 = trunc i64 %indvars.iv.next to i32, !dbg !163
  %cmp10 = icmp slt i32 %19, %18, !dbg !163
  br i1 %cmp10, label %for.body, label %for.end, !dbg !163

for.end:                                          ; preds = %for.inc, %for.cond.preheader
  br i1 %or.cond, label %while.end, label %while.cond.backedge, !dbg !200

while.cond.backedge:                              ; preds = %for.end
  %call84 = tail call i32 %while_check(i32 %n_whiles, i8** %whiles, i8* %attributes, i8* %data, i32 0) #5, !dbg !201
  tail call void @llvm.dbg.value(metadata !{i32 %call84}, i64 0, metadata !114), !dbg !201
  %phitmp = icmp eq i32 %call84, 0, !dbg !203
  br i1 %phitmp, label %while.end, label %for.cond.preheader, !dbg !162

while.end:                                        ; preds = %for.end, %while.cond.backedge, %while.cond.preheader
  %tobool89 = icmp eq i32 (i8*, i8*)* %item_exit, null, !dbg !204
  br i1 %tobool89, label %if.end93, label %if.then90, !dbg !206

if.then90:                                        ; preds = %while.end
  %call91 = tail call i32 %item_exit(i8* %attributes, i8* %data) #5, !dbg !207
  br label %if.end93, !dbg !209

if.end93:                                         ; preds = %if.end, %while.end, %if.then90
  ret void
}
