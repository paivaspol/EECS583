define internal fastcc void @ScheduleTraverseGroup(%struct.cHandledData* %schedule_groups, %struct.t_sched_group* nocapture readonly %group, i8* %attributes, i32 %n_whiles, i8** %whiles, i32 (i8*, i8*)* %item_entry, i32 (i8*, i8*)* %item_exit, i32 (i32, i8**, i8*, i8*, i32)* %while_check, i32 (i8*, i8*, i8*)* nocapture %function_process, i8* %data) #1 {
  %1 = icmp sgt i32 %n_whiles, 0, !dbg !165
  %2 = icmp ne i32 (i32, i8**, i8*, i8*, i32)* %while_check, null, !dbg !167
  %or.cond = and i1 %1, %2, !dbg !168
  br i1 %or.cond, label %3, label %.thread, !dbg !168

; <label>:3                                       ; preds = %0
  %4 = tail call i32 %while_check(i32 %n_whiles, i8** %whiles, i8* %attributes, i8* %data, i32 1) #5, !dbg !169
  tail call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !114, metadata !139), !dbg !171
  %5 = icmp eq i32 %4, 0, !dbg !172
  br i1 %5, label %._crit_edge4.thread, label %.thread, !dbg !174

.thread:                                          ; preds = %0, %3
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !115, metadata !139), !dbg !175
  %6 = icmp eq i32 (i8*, i8*)* %item_entry, null, !dbg !176
  br i1 %6, label %.preheader.lr.ph, label %.preheader2, !dbg !179

.preheader2:                                      ; preds = %.thread
  %7 = tail call i32 %item_entry(i8* %attributes, i8* %data) #5, !dbg !180
  tail call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !114, metadata !139), !dbg !171
  %8 = icmp eq i32 %7, 0, !dbg !182
  br i1 %8, label %._crit_edge4, label %.preheader.lr.ph, !dbg !182

.preheader.lr.ph:                                 ; preds = %.thread, %.preheader2
  %9 = getelementptr inbounds %struct.t_sched_group* %group, i64 0, i32 2, !dbg !183
  %10 = getelementptr inbounds %struct.t_sched_group* %group, i64 0, i32 1, !dbg !187
  %11 = getelementptr inbounds %struct.t_sched_group* %group, i64 0, i32 3, !dbg !189
  %12 = icmp eq i32 (i8*, i8*)* %item_entry, null, !dbg !190
  %13 = icmp eq i32 (i8*, i8*)* %item_exit, null, !dbg !196
  br label %.preheader, !dbg !182

.preheader:                                       ; preds = %.preheader.lr.ph, %.backedge
  %14 = load i32* %9, align 4, !dbg !183, !tbaa !200
  %15 = icmp sgt i32 %14, 0, !dbg !203
  br i1 %15, label %.lr.ph, label %._crit_edge, !dbg !204

.lr.ph:                                           ; preds = %.preheader, %ScheduleTraverseFunction.exit
  %indvars.iv = phi i64 [ %indvars.iv.next, %ScheduleTraverseFunction.exit ], [ 0, %.preheader ]
  %16 = load i32** %10, align 8, !dbg !187, !tbaa !205
  %17 = getelementptr inbounds i32* %16, i64 %indvars.iv, !dbg !206
  %18 = load i32* %17, align 4, !dbg !206, !tbaa !207
  %19 = sext i32 %18 to i64, !dbg !208
  %20 = load %struct.t_sched_item** %11, align 8, !dbg !189, !tbaa !209
  %21 = getelementptr inbounds %struct.t_sched_item* %20, i64 %19, i32 1, !dbg !210
  %22 = load i32* %21, align 4, !dbg !210, !tbaa !211
  switch i32 %22, label %59 [
    i32 2, label %23
    i32 1, label %43
  ], !dbg !213

; <label>:23                                      ; preds = %.lr.ph
  %24 = getelementptr inbounds %struct.t_sched_item* %20, i64 %19, i32 2, !dbg !214
  %25 = load i8** %24, align 8, !dbg !214, !tbaa !215
  %26 = getelementptr inbounds %struct.t_sched_item* %20, i64 %19, i32 6, !dbg !216
  %27 = load i8** %26, align 8, !dbg !216, !tbaa !217
  %28 = getelementptr inbounds %struct.t_sched_item* %20, i64 %19, i32 4, !dbg !218
  %29 = load i32* %28, align 4, !dbg !218, !tbaa !219
  %30 = getelementptr inbounds %struct.t_sched_item* %20, i64 %19, i32 5, !dbg !220
  %31 = load i8*** %30, align 8, !dbg !220, !tbaa !221
  %32 = icmp sgt i32 %29, 0, !dbg !222
  %or.cond.i = and i1 %2, %32, !dbg !224
  br i1 %or.cond.i, label %33, label %.thread.i, !dbg !224

; <label>:33                                      ; preds = %23
  %34 = tail call i32 %while_check(i32 %29, i8** %31, i8* %27, i8* %data, i32 1) #5, !dbg !225
  tail call void @llvm.dbg.value(metadata i32 %34, i64 0, metadata !130, metadata !139) #7, !dbg !227
  %35 = icmp eq i32 %34, 0, !dbg !228
  br i1 %35, label %ScheduleTraverseFunction.exit, label %.thread.i, !dbg !229

.thread.i:                                        ; preds = %33, %23
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !131, metadata !139) #7, !dbg !230
  br i1 %12, label %.lr.ph.i, label %.preheader.i, !dbg !231

.preheader.i:                                     ; preds = %.thread.i
  %36 = tail call i32 %item_entry(i8* %27, i8* %data) #5, !dbg !232
  tail call void @llvm.dbg.value(metadata i32 %36, i64 0, metadata !130, metadata !139) #7, !dbg !227
  %37 = icmp eq i32 %36, 0, !dbg !234
  br i1 %37, label %._crit_edge.i, label %.lr.ph.i, !dbg !234

.lr.ph.i:                                         ; preds = %.preheader.i, %.thread.i, %.backedge.i
  %38 = tail call i32 %function_process(i8* %25, i8* %27, i8* %data) #5, !dbg !235
  br i1 %or.cond.i, label %.backedge.i, label %._crit_edge.i, !dbg !237

.backedge.i:                                      ; preds = %.lr.ph.i
  %39 = tail call i32 %while_check(i32 %29, i8** %31, i8* %27, i8* %data, i32 0) #5, !dbg !239
  tail call void @llvm.dbg.value(metadata i32 %39, i64 0, metadata !130, metadata !139) #7, !dbg !227
  %40 = icmp eq i32 %39, 0, !dbg !234
  br i1 %40, label %._crit_edge.i, label %.lr.ph.i, !dbg !234

._crit_edge.i:                                    ; preds = %.backedge.i, %.lr.ph.i, %.preheader.i
  br i1 %13, label %ScheduleTraverseFunction.exit, label %41, !dbg !241

; <label>:41                                      ; preds = %._crit_edge.i
  %42 = tail call i32 %item_exit(i8* %27, i8* %data) #5, !dbg !242
  br label %ScheduleTraverseFunction.exit, !dbg !244

; <label>:43                                      ; preds = %.lr.ph
  %44 = getelementptr inbounds %struct.t_sched_item* %20, i64 %19, i32 3, !dbg !245
  %45 = load i32* %44, align 4, !dbg !245, !tbaa !246
  %46 = tail call i8* @Util_GetHandledData(%struct.cHandledData* %schedule_groups, i32 %45) #5, !dbg !247
  %47 = bitcast i8* %46 to %struct.t_sched_group*, !dbg !248
  tail call void @llvm.dbg.value(metadata %struct.t_sched_group* %47, i64 0, metadata !116, metadata !139), !dbg !249
  %48 = load i32** %10, align 8, !dbg !250, !tbaa !205
  %49 = getelementptr inbounds i32* %48, i64 %indvars.iv, !dbg !251
  %50 = load i32* %49, align 4, !dbg !251, !tbaa !207
  %51 = sext i32 %50 to i64, !dbg !252
  %52 = load %struct.t_sched_item** %11, align 8, !dbg !253, !tbaa !209
  %53 = getelementptr inbounds %struct.t_sched_item* %52, i64 %51, i32 6, !dbg !254
  %54 = load i8** %53, align 8, !dbg !254, !tbaa !217
  %55 = getelementptr inbounds %struct.t_sched_item* %52, i64 %51, i32 4, !dbg !255
  %56 = load i32* %55, align 4, !dbg !255, !tbaa !219
  %57 = getelementptr inbounds %struct.t_sched_item* %52, i64 %51, i32 5, !dbg !256
  %58 = load i8*** %57, align 8, !dbg !256, !tbaa !221
  tail call fastcc void @ScheduleTraverseGroup(%struct.cHandledData* %schedule_groups, %struct.t_sched_group* %47, i8* %54, i32 %56, i8** %58, i32 (i8*, i8*)* %item_entry, i32 (i8*, i8*)* %item_exit, i32 (i32, i8**, i8*, i8*, i32)* %while_check, i32 (i8*, i8*, i8*)* %function_process, i8* %data) #6, !dbg !257
  br label %ScheduleTraverseFunction.exit, !dbg !258

; <label>:59                                      ; preds = %.lr.ph
  %60 = load %struct.__sFILE** @__stderrp, align 8, !dbg !259, !tbaa !157
  %61 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %60, i8* getelementptr inbounds ([31 x i8]* @.str1, i64 0, i64 0), i32 %22) #5, !dbg !260
  br label %ScheduleTraverseFunction.exit, !dbg !261

ScheduleTraverseFunction.exit:                    ; preds = %41, %._crit_edge.i, %33, %43, %59
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !204
  %62 = load i32* %9, align 4, !dbg !183, !tbaa !200
  %63 = sext i32 %62 to i64, !dbg !203
  %64 = icmp slt i64 %indvars.iv.next, %63, !dbg !203
  br i1 %64, label %.lr.ph, label %._crit_edge, !dbg !204

._crit_edge:                                      ; preds = %ScheduleTraverseFunction.exit, %.preheader
  br i1 %or.cond, label %.backedge, label %._crit_edge4, !dbg !262

.backedge:                                        ; preds = %._crit_edge
  %65 = tail call i32 %while_check(i32 %n_whiles, i8** %whiles, i8* %attributes, i8* %data, i32 0) #5, !dbg !264
  tail call void @llvm.dbg.value(metadata i32 %65, i64 0, metadata !114, metadata !139), !dbg !171
  %66 = icmp eq i32 %65, 0, !dbg !182
  br i1 %66, label %._crit_edge4, label %.preheader, !dbg !182

._crit_edge4:                                     ; preds = %._crit_edge, %.backedge, %.preheader2
  %67 = icmp eq i32 (i8*, i8*)* %item_exit, null, !dbg !266
  br i1 %67, label %._crit_edge4.thread, label %68, !dbg !270

; <label>:68                                      ; preds = %._crit_edge4
  %69 = tail call i32 %item_exit(i8* %attributes, i8* %data) #5, !dbg !271
  br label %._crit_edge4.thread, !dbg !273

._crit_edge4.thread:                              ; preds = %._crit_edge4, %3, %68
  ret void
}
