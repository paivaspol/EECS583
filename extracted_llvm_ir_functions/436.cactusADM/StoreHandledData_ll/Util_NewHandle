define i32 @Util_NewHandle(%struct.cHandledData** nocapture %storage, i8* %name, i8* %data) #1 {
  %1 = load %struct.cHandledData** %storage, align 8, !tbaa !2
  %2 = icmp eq %struct.cHandledData* %1, null
  br i1 %2, label %3, label %.thread

; <label>:3                                       ; preds = %0
  %4 = tail call i8* @malloc(i64 16) #6
  %5 = bitcast %struct.cHandledData** %storage to i8**
  store i8* %4, i8** %5, align 8, !tbaa !2
  %6 = icmp eq i8* %4, null
  br i1 %6, label %13, label %.thread2

.thread2:                                         ; preds = %3
  %7 = bitcast i8* %4 to %struct.cHandledData*
  %8 = bitcast i8* %4 to %struct.cHandleStorage**
  store %struct.cHandleStorage* null, %struct.cHandleStorage** %8, align 8, !tbaa !6
  %9 = getelementptr inbounds i8* %4, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 4, !tbaa !9
  %11 = getelementptr inbounds i8* %4, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4, !tbaa !10
  br label %.thread

; <label>:13                                      ; preds = %3
  br label %95

.thread:                                          ; preds = %.thread2, %0
  %14 = phi %struct.cHandledData* [ %1, %0 ], [ %7, %.thread2 ]
  %15 = getelementptr inbounds %struct.cHandledData* %14, i64 0, i32 2
  %16 = load i32* %15, align 4, !tbaa !10
  %17 = getelementptr inbounds %struct.cHandledData* %14, i64 0, i32 1
  %18 = load i32* %17, align 4, !tbaa !9
  %19 = icmp ugt i32 %16, %18
  br i1 %19, label %67, label %20

; <label>:20                                      ; preds = %.thread
  %21 = bitcast %struct.cHandledData* %14 to i8**
  %22 = load i8** %21, align 8, !tbaa !6
  %23 = add i32 %18, 1
  %24 = zext i32 %23 to i64
  %25 = mul nuw nsw i64 %24, 24
  %26 = tail call i8* @realloc(i8* %22, i64 %25) #6
  %27 = icmp eq i8* %26, null
  br i1 %27, label %95, label %28

; <label>:28                                      ; preds = %20
  %29 = bitcast %struct.cHandledData** %storage to i8***
  %30 = load i8*** %29, align 8, !tbaa !2
  store i8* %26, i8** %30, align 8, !tbaa !6
  %31 = load %struct.cHandledData** %storage, align 8, !tbaa !2
  %32 = getelementptr inbounds %struct.cHandledData* %31, i64 0, i32 1
  %33 = load i32* %32, align 4, !tbaa !9
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %struct.cHandledData* %31, i64 0, i32 0
  %36 = load %struct.cHandleStorage** %35, align 8, !tbaa !6
  %37 = getelementptr inbounds %struct.cHandleStorage* %36, i64 %34, i32 0
  store i32 1, i32* %37, align 4, !tbaa !11
  %38 = getelementptr inbounds %struct.cHandleStorage* %36, i64 %34, i32 2
  store i8* %data, i8** %38, align 8, !tbaa !13
  %39 = tail call i64 @strlen(i8* %name) #6
  %40 = add i64 %39, 1
  %41 = tail call i8* @malloc(i64 %40) #6
  %42 = load %struct.cHandledData** %storage, align 8, !tbaa !2
  %43 = getelementptr inbounds %struct.cHandledData* %42, i64 0, i32 1
  %44 = load i32* %43, align 4, !tbaa !9
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %struct.cHandledData* %42, i64 0, i32 0
  %47 = load %struct.cHandleStorage** %46, align 8, !tbaa !6
  %48 = getelementptr inbounds %struct.cHandleStorage* %47, i64 %45, i32 1
  store i8* %41, i8** %48, align 8, !tbaa !14
  %49 = load %struct.cHandledData** %storage, align 8, !tbaa !2
  %50 = getelementptr inbounds %struct.cHandledData* %49, i64 0, i32 1
  %51 = load i32* %50, align 4, !tbaa !9
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %struct.cHandledData* %49, i64 0, i32 0
  %54 = load %struct.cHandleStorage** %53, align 8, !tbaa !6
  %55 = getelementptr inbounds %struct.cHandleStorage* %54, i64 %52, i32 1
  %56 = load i8** %55, align 8, !tbaa !14
  %57 = icmp eq i8* %56, null
  br i1 %57, label %61, label %58

; <label>:58                                      ; preds = %28
  %59 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %56, i1 false)
  %60 = tail call i8* @__strcpy_chk(i8* %56, i8* %name, i64 %59) #6
  %.pre = load %struct.cHandledData** %storage, align 8, !tbaa !2
  %.phi.trans.insert = getelementptr inbounds %struct.cHandledData* %.pre, i64 0, i32 1
  %.pre1 = load i32* %.phi.trans.insert, align 4, !tbaa !9
  br label %61

; <label>:61                                      ; preds = %28, %58
  %62 = phi i32 [ %51, %28 ], [ %.pre1, %58 ]
  %63 = phi %struct.cHandledData* [ %49, %28 ], [ %.pre, %58 ]
  %64 = getelementptr inbounds %struct.cHandledData* %63, i64 0, i32 1
  %65 = add i32 %62, 1
  store i32 %65, i32* %64, align 4, !tbaa !9
  %66 = getelementptr inbounds %struct.cHandledData* %63, i64 0, i32 2
  store i32 %65, i32* %66, align 4, !tbaa !10
  br label %95

; <label>:67                                      ; preds = %.thread
  %68 = zext i32 %16 to i64
  %69 = getelementptr inbounds %struct.cHandledData* %14, i64 0, i32 0
  %70 = load %struct.cHandleStorage** %69, align 8, !tbaa !6
  %71 = getelementptr inbounds %struct.cHandleStorage* %70, i64 %68, i32 0
  %72 = load i32* %71, align 4, !tbaa !11
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %95, label %74

; <label>:74                                      ; preds = %67
  store i32 1, i32* %71, align 4, !tbaa !11
  %75 = getelementptr inbounds %struct.cHandledData* %14, i64 0, i32 2
  %76 = load i32* %75, align 4, !tbaa !10
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %struct.cHandledData* %14, i64 0, i32 0
  %79 = load %struct.cHandleStorage** %78, align 8, !tbaa !6
  %80 = getelementptr inbounds %struct.cHandleStorage* %79, i64 %77, i32 2
  store i8* %data, i8** %80, align 8, !tbaa !13
  %81 = load %struct.cHandledData** %storage, align 8, !tbaa !2
  %82 = getelementptr inbounds %struct.cHandledData* %81, i64 0, i32 2
  %83 = load i32* %82, align 4, !tbaa !10
  %84 = getelementptr inbounds %struct.cHandledData* %81, i64 0, i32 1
  %85 = load i32* %84, align 4, !tbaa !9
  %86 = getelementptr inbounds %struct.cHandledData* %81, i64 0, i32 0
  br label %87

; <label>:87                                      ; preds = %89, %74
  %current.0.in.i = phi i32 [ %83, %74 ], [ %current.0.i, %89 ]
  %current.0.i = add i32 %current.0.in.i, 1
  %88 = icmp ult i32 %current.0.i, %85
  br i1 %88, label %89, label %FindNextUnused.exit

; <label>:89                                      ; preds = %87
  %90 = zext i32 %current.0.i to i64
  %91 = load %struct.cHandleStorage** %86, align 8, !tbaa !6
  %92 = getelementptr inbounds %struct.cHandleStorage* %91, i64 %90, i32 0
  %93 = load i32* %92, align 4, !tbaa !11
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %FindNextUnused.exit, label %87

FindNextUnused.exit:                              ; preds = %87, %89
  store i32 %current.0.i, i32* %82, align 4, !tbaa !10
  br label %95

; <label>:95                                      ; preds = %13, %67, %20, %61, %FindNextUnused.exit
  %return_code.0 = phi i32 [ %62, %61 ], [ %83, %FindNextUnused.exit ], [ -2, %20 ], [ -2, %67 ], [ -1, %13 ]
  ret i32 %return_code.0
}
