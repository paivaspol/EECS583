define internal i32 @CCTKi_SchedulePrintWhile(i32 %n_whiles, i8** nocapture %whiles, %struct.t_attribute* nocapture %attribute, %struct.t_sched_data* nocapture %data, i32 %first) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %n_whiles}, i64 0, metadata !345), !dbg !1209
  tail call void @llvm.dbg.value(metadata !{i8** %whiles}, i64 0, metadata !346), !dbg !1210
  tail call void @llvm.dbg.value(metadata !{%struct.t_attribute* %attribute}, i64 0, metadata !347), !dbg !1211
  tail call void @llvm.dbg.value(metadata !{%struct.t_sched_data* %data}, i64 0, metadata !348), !dbg !1212
  tail call void @llvm.dbg.value(metadata !{i32 %first}, i64 0, metadata !349), !dbg !1213
  tail call void @llvm.dbg.value(metadata !{%struct.t_attribute* %attribute}, i64 0, metadata !347), !dbg !1214
  tail call void @llvm.dbg.value(metadata !{%struct.t_sched_data* %data}, i64 0, metadata !348), !dbg !1215
  %tobool = icmp eq i32 %first, 0, !dbg !1216
  %0 = load i32* @indent_level, align 4, !dbg !1217, !tbaa !592
  %add7 = add nsw i32 %0, 9, !dbg !1219
  br i1 %tobool, label %if.else, label %if.then, !dbg !1216

if.then:                                          ; preds = %entry
  %call = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str63, i64 0, i64 0), i32 %add7, i8* getelementptr inbounds ([8 x i8]* @.str75, i64 0, i64 0)) #8, !dbg !1217
  tail call void @llvm.dbg.value(metadata !37, i64 0, metadata !350), !dbg !1221
  %cmp14 = icmp sgt i32 %n_whiles, 0, !dbg !1221
  br i1 %cmp14, label %for.body, label %for.end, !dbg !1221

for.body:                                         ; preds = %if.then, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end ], [ 0, %if.then ]
  %1 = trunc i64 %indvars.iv to i32, !dbg !1223
  %cmp2 = icmp sgt i32 %1, 0, !dbg !1223
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !1223

if.then3:                                         ; preds = %for.body
  %call4 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str76, i64 0, i64 0)) #8, !dbg !1225
  br label %if.end, !dbg !1227

if.end:                                           ; preds = %if.then3, %for.body
  %arrayidx = getelementptr inbounds i8** %whiles, i64 %indvars.iv, !dbg !1228
  %2 = load i8** %arrayidx, align 8, !dbg !1228, !tbaa !504
  %call5 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str77, i64 0, i64 0), i8* %2) #8, !dbg !1228
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1221
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !1221
  %exitcond = icmp eq i32 %lftr.wideiv, %n_whiles, !dbg !1221
  br i1 %exitcond, label %for.end, label %for.body, !dbg !1221

for.end:                                          ; preds = %if.end, %if.then
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([2 x i8]* @str110, i64 0, i64 0)), !dbg !1229
  br label %if.end9, !dbg !1230

if.else:                                          ; preds = %entry
  %call8 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str63, i64 0, i64 0), i32 %add7, i8* getelementptr inbounds ([11 x i8]* @.str79, i64 0, i64 0)) #8, !dbg !1219
  br label %if.end9

if.end9:                                          ; preds = %if.else, %for.end
  ret i32 %first, !dbg !1231
}
