define internal fastcc void @ScheduleTraverse(i8* %where, i8* %GH, i32 (i8*, %struct.cFunctionData*, i8*)* %CallFunction) #1 {
  %data = alloca %struct.t_sched_data, align 8
  %1 = bitcast %struct.t_sched_data* %data to i8*
  call void @llvm.lifetime.start(i64 48, i8* %1) #3
  %2 = bitcast %struct.t_sched_data* %data to i8**
  store i8* %GH, i8** %2, align 8, !tbaa !39
  %3 = icmp ne i32 (i8*, %struct.cFunctionData*, i8*)* %CallFunction, null
  %4 = select i1 %3, i32 (i8*, %struct.cFunctionData*, i8*)* %CallFunction, i32 (i8*, %struct.cFunctionData*, i8*)* @CCTK_CallFunction
  %5 = getelementptr inbounds %struct.t_sched_data* %data, i64 0, i32 6
  store i32 (i8*, %struct.cFunctionData*, i8*)* %4, i32 (i8*, %struct.cFunctionData*, i8*)** %5, align 8, !tbaa !41
  %6 = tail call i32 @CCTK_Equals(i8* %where, i8* getelementptr inbounds ([14 x i8]* @.str38, i64 0, i64 0)) #8
  %7 = icmp ne i32 %6, 0
  %8 = zext i1 %7 to i32
  %9 = getelementptr inbounds %struct.t_sched_data* %data, i64 0, i32 1
  store i32 %8, i32* %9, align 8, !tbaa !42
  %10 = call i32 @CCTKi_DoScheduleTraverse(i8* %where, i32 (i8*, i8*)* bitcast (i32 (%struct.t_attribute*, %struct.t_sched_data*)* @CCTKi_ScheduleCallEntry to i32 (i8*, i8*)*), i32 (i8*, i8*)* bitcast (i32 (%struct.t_attribute*, %struct.t_sched_data*)* @CCTKi_ScheduleCallExit to i32 (i8*, i8*)*), i32 (i32, i8**, i8*, i8*, i32)* bitcast (i32 (i32, i8**, %struct.t_attribute*, %struct.t_sched_data*, i32)* @CCTKi_ScheduleCallWhile to i32 (i32, i8**, i8*, i8*, i32)*), i32 (i8*, i8*, i8*)* bitcast (i32 (i8*, %struct.t_attribute*, %struct.t_sched_data*)* @CCTKi_ScheduleCallFunction to i32 (i8*, i8*, i8*)*), i8* %1) #8
  call void @llvm.lifetime.end(i64 48, i8* %1) #3
  ret void
}
