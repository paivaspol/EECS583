define internal i32 @CCTKi_SchedulePrintTimesFunction(i8* nocapture readnone %function, %struct.t_attribute* nocapture readonly %attribute, %struct.t_sched_data* nocapture %data) #1 {
  %1 = getelementptr inbounds %struct.t_attribute* %attribute, i64 0, i32 8
  %2 = load i32* %1, align 4, !tbaa !33
  %3 = icmp sgt i32 %2, -1
  br i1 %3, label %4, label %37

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.t_sched_data* %data, i64 0, i32 2
  %6 = load %struct.cTimerData** %5, align 8, !tbaa !44
  %7 = tail call i32 @CCTK_TimerI(i32 %2, %struct.cTimerData* %6) #8
  %8 = getelementptr inbounds %struct.t_sched_data* %data, i64 0, i32 4
  %9 = load i32* %8, align 4, !tbaa !43
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %29, label %11

; <label>:11                                      ; preds = %4
  %12 = load %struct.cTimerData** %5, align 8, !tbaa !44
  tail call fastcc void @PrintDelimiterLine(i8 signext 61, %struct.cTimerData* %12) #8
  %13 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str80, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str81, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8]* @.str82, i64 0, i64 0)) #8
  %14 = getelementptr inbounds %struct.cTimerData* %12, i64 0, i32 0
  %15 = load i32* %14, align 4, !tbaa !48
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %.lr.ph.i, label %CCTKi_SchedulePrintTimerHeaders.exit

.lr.ph.i:                                         ; preds = %11
  %17 = getelementptr inbounds %struct.cTimerData* %12, i64 0, i32 1
  br label %18

; <label>:18                                      ; preds = %18, %.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %.lr.ph.i ], [ %indvars.iv.next.i, %18 ]
  %19 = load %struct.cTimerVal** %17, align 8, !tbaa !46
  %20 = getelementptr inbounds %struct.cTimerVal* %19, i64 %indvars.iv.i, i32 1
  %21 = load i8** %20, align 8, !tbaa !51
  %22 = getelementptr inbounds %struct.cTimerVal* %19, i64 %indvars.iv.i, i32 2
  %23 = load i8** %22, align 8, !tbaa !52
  %24 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([11 x i8]* @.str83, i64 0, i64 0), i8* %21, i8* %23) #8
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %25 = load i32* %14, align 4, !tbaa !48
  %26 = sext i32 %25 to i64
  %27 = icmp slt i64 %indvars.iv.next.i, %26
  br i1 %27, label %18, label %CCTKi_SchedulePrintTimerHeaders.exit

CCTKi_SchedulePrintTimerHeaders.exit:             ; preds = %18, %11
  %28 = tail call i32 @putchar(i32 10) #8
  tail call fastcc void @PrintDelimiterLine(i8 signext 61, %struct.cTimerData* %12) #8
  store i32 0, i32* %8, align 4, !tbaa !43
  br label %29

; <label>:29                                      ; preds = %4, %CCTKi_SchedulePrintTimerHeaders.exit
  %30 = load %struct.cTimerData** %5, align 8, !tbaa !44
  %31 = getelementptr inbounds %struct.t_sched_data* %data, i64 0, i32 3
  %32 = load %struct.cTimerData** %31, align 8, !tbaa !45
  %33 = getelementptr inbounds %struct.t_attribute* %attribute, i64 0, i32 3, i32 10
  %34 = load i8** %33, align 8, !tbaa !17
  %35 = getelementptr inbounds %struct.t_attribute* %attribute, i64 0, i32 0
  %36 = load i8** %35, align 8, !tbaa !16
  tail call fastcc void @CCTKi_SchedulePrintTimerInfo(%struct.cTimerData* %30, %struct.cTimerData* %32, i8* %34, i8* %36) #9
  br label %37

; <label>:37                                      ; preds = %29, %0
  ret i32 1
}
