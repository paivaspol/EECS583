define internal fastcc %struct.t_attribute* @CreateAttribute(i8* nocapture %where, i8* nocapture %name, i8* %description, i8* %language, i8* %thorn, i8* nocapture %implementation, i32 %n_mem_groups, i32 %n_comm_groups, i32 %n_trigger_groups, i32 %n_sync_groups, i32 %n_options, [1 x %struct.__va_list_tag]* nocapture %ap) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %where}, i64 0, metadata !393), !dbg !545
  tail call void @llvm.dbg.value(metadata !{i8* %name}, i64 0, metadata !394), !dbg !546
  tail call void @llvm.dbg.value(metadata !{i8* %description}, i64 0, metadata !395), !dbg !547
  tail call void @llvm.dbg.value(metadata !{i8* %language}, i64 0, metadata !396), !dbg !548
  tail call void @llvm.dbg.value(metadata !{i8* %thorn}, i64 0, metadata !397), !dbg !549
  tail call void @llvm.dbg.value(metadata !{i8* %implementation}, i64 0, metadata !398), !dbg !550
  tail call void @llvm.dbg.value(metadata !{i32 %n_mem_groups}, i64 0, metadata !399), !dbg !551
  tail call void @llvm.dbg.value(metadata !{i32 %n_comm_groups}, i64 0, metadata !400), !dbg !552
  tail call void @llvm.dbg.value(metadata !{i32 %n_trigger_groups}, i64 0, metadata !401), !dbg !553
  tail call void @llvm.dbg.value(metadata !{i32 %n_sync_groups}, i64 0, metadata !402), !dbg !554
  tail call void @llvm.dbg.value(metadata !{i32 %n_options}, i64 0, metadata !403), !dbg !555
  tail call void @llvm.dbg.value(metadata !{[1 x %struct.__va_list_tag]* %ap}, i64 0, metadata !404), !dbg !556
  %call = tail call noalias i8* @malloc(i64 160) #8, !dbg !557
  %0 = bitcast i8* %call to %struct.t_attribute*, !dbg !557
  tail call void @llvm.dbg.value(metadata !{%struct.t_attribute* %0}, i64 0, metadata !406), !dbg !557
  %tobool = icmp eq i8* %call, null, !dbg !558
  br i1 %tobool, label %if.end147, label %if.then, !dbg !558

if.then:                                          ; preds = %entry
  %call1 = tail call i64 @strlen(i8* %where) #11, !dbg !559
  %add = add i64 %call1, 1, !dbg !559
  %call2 = tail call noalias i8* @malloc(i64 %add) #8, !dbg !559
  %FunctionData = getelementptr inbounds i8* %call, i64 24, !dbg !559
  %where3 = getelementptr inbounds i8* %call, i64 72, !dbg !559
  %1 = bitcast i8* %where3 to i8**, !dbg !559
  store i8* %call2, i8** %1, align 8, !dbg !559, !tbaa !504
  %call4 = tail call i64 @strlen(i8* %name) #11, !dbg !561
  %add5 = add i64 %call4, 1, !dbg !561
  %call7 = tail call noalias i8* @malloc(i64 %add5) #8, !dbg !561
  %routine = getelementptr inbounds i8* %call, i64 80, !dbg !561
  %2 = bitcast i8* %routine to i8**, !dbg !561
  store i8* %call7, i8** %2, align 8, !dbg !561, !tbaa !504
  %call9 = tail call i64 @strlen(i8* %description) #11, !dbg !562
  %add10 = add i64 %call9, 1, !dbg !562
  %call12 = tail call noalias i8* @malloc(i64 %add10) #8, !dbg !562
  %description13 = bitcast i8* %call to i8**, !dbg !562
  store i8* %call12, i8** %description13, align 8, !dbg !562, !tbaa !504
  %call14 = tail call i64 @strlen(i8* %thorn) #11, !dbg !563
  %add15 = add i64 %call14, 1, !dbg !563
  %call17 = tail call noalias i8* @malloc(i64 %add15) #8, !dbg !563
  %thorn19 = getelementptr inbounds i8* %call, i64 88, !dbg !563
  %3 = bitcast i8* %thorn19 to i8**, !dbg !563
  store i8* %call17, i8** %3, align 8, !dbg !563, !tbaa !504
  %call20 = tail call i64 @strlen(i8* %implementation) #11, !dbg !564
  %add21 = add i64 %call20, 1, !dbg !564
  %call23 = tail call noalias i8* @malloc(i64 %add21) #8, !dbg !564
  %implementation24 = getelementptr inbounds i8* %call, i64 8, !dbg !564
  %4 = bitcast i8* %implementation24 to i8**, !dbg !564
  store i8* %call23, i8** %4, align 8, !dbg !564, !tbaa !504
  %conv = sext i32 %n_mem_groups to i64, !dbg !565
  %mul25 = shl nsw i64 %conv, 2, !dbg !565
  %call26 = tail call noalias i8* @malloc(i64 %mul25) #8, !dbg !565
  %5 = bitcast i8* %call26 to i32*, !dbg !565
  %mem_groups = getelementptr inbounds i8* %call, i64 104, !dbg !565
  %6 = bitcast i8* %mem_groups to i32**, !dbg !565
  store i32* %5, i32** %6, align 8, !dbg !565, !tbaa !504
  %conv27 = sext i32 %n_comm_groups to i64, !dbg !566
  %mul28 = shl nsw i64 %conv27, 2, !dbg !566
  %call29 = tail call noalias i8* @malloc(i64 %mul28) #8, !dbg !566
  %7 = bitcast i8* %call29 to i32*, !dbg !566
  %comm_groups = getelementptr inbounds i8* %call, i64 120, !dbg !566
  %8 = bitcast i8* %comm_groups to i32**, !dbg !566
  store i32* %7, i32** %8, align 8, !dbg !566, !tbaa !504
  %conv30 = sext i32 %n_trigger_groups to i64, !dbg !567
  %mul31 = shl nsw i64 %conv30, 2, !dbg !567
  %call32 = tail call noalias i8* @malloc(i64 %mul31) #8, !dbg !567
  %9 = bitcast i8* %call32 to i32*, !dbg !567
  %TriggerGroups = getelementptr inbounds i8* %call, i64 64, !dbg !567
  %10 = bitcast i8* %TriggerGroups to i32**, !dbg !567
  store i32* %9, i32** %10, align 8, !dbg !567, !tbaa !504
  %conv34 = sext i32 %n_sync_groups to i64, !dbg !568
  %mul35 = shl nsw i64 %conv34, 2, !dbg !568
  %call36 = tail call noalias i8* @malloc(i64 %mul35) #8, !dbg !568
  %11 = bitcast i8* %call36 to i32*, !dbg !568
  %SyncGroups = getelementptr inbounds i8* %call, i64 48, !dbg !568
  %12 = bitcast i8* %SyncGroups to i32**, !dbg !568
  store i32* %11, i32** %12, align 8, !dbg !568, !tbaa !504
  %call40 = tail call noalias i8* @malloc(i64 %mul25) #8, !dbg !569
  %13 = bitcast i8* %call40 to i32*, !dbg !569
  %StorageOnEntry = getelementptr inbounds i8* %call, i64 144, !dbg !569
  %14 = bitcast i8* %StorageOnEntry to i32**, !dbg !569
  store i32* %13, i32** %14, align 8, !dbg !569, !tbaa !504
  %call43 = tail call noalias i8* @malloc(i64 %mul28) #8, !dbg !570
  %15 = bitcast i8* %call43 to i32*, !dbg !570
  %CommOnEntry = getelementptr inbounds i8* %call, i64 136, !dbg !570
  %16 = bitcast i8* %CommOnEntry to i32**, !dbg !570
  store i32* %15, i32** %16, align 8, !dbg !570, !tbaa !504
  %tobool46 = icmp eq i8* %call2, null, !dbg !571
  %tobool49 = icmp eq i8* %call7, null, !dbg !571
  %or.cond231 = or i1 %tobool46, %tobool49, !dbg !571
  %tobool52 = icmp eq i8* %call12, null, !dbg !571
  %or.cond232 = or i1 %or.cond231, %tobool52, !dbg !571
  %tobool56 = icmp eq i8* %call17, null, !dbg !571
  %or.cond233 = or i1 %or.cond232, %tobool56, !dbg !571
  %tobool59 = icmp eq i8* %call23, null, !dbg !571
  %or.cond234 = or i1 %or.cond233, %tobool59, !dbg !571
  br i1 %or.cond234, label %if.else135, label %land.lhs.true60, !dbg !571

land.lhs.true60:                                  ; preds = %if.then
  %tobool62 = icmp ne i8* %call26, null, !dbg !571
  %cmp = icmp eq i32 %n_mem_groups, 0, !dbg !571
  %or.cond = or i1 %tobool62, %cmp, !dbg !571
  br i1 %or.cond, label %land.lhs.true64, label %if.else135, !dbg !571

land.lhs.true64:                                  ; preds = %land.lhs.true60
  %tobool66 = icmp ne i8* %call29, null, !dbg !571
  %cmp68 = icmp eq i32 %n_comm_groups, 0, !dbg !571
  %or.cond228 = or i1 %tobool66, %cmp68, !dbg !571
  br i1 %or.cond228, label %land.lhs.true70, label %if.else135, !dbg !571

land.lhs.true70:                                  ; preds = %land.lhs.true64
  %tobool73 = icmp ne i8* %call32, null, !dbg !571
  %cmp75 = icmp eq i32 %n_trigger_groups, 0, !dbg !571
  %or.cond229 = or i1 %tobool73, %cmp75, !dbg !571
  br i1 %or.cond229, label %land.lhs.true77, label %if.else135, !dbg !571

land.lhs.true77:                                  ; preds = %land.lhs.true70
  %tobool80 = icmp ne i8* %call36, null, !dbg !571
  %cmp82 = icmp eq i32 %n_sync_groups, 0, !dbg !571
  %or.cond230 = or i1 %tobool80, %cmp82, !dbg !571
  br i1 %or.cond230, label %if.then84, label %if.else135, !dbg !571

if.then84:                                        ; preds = %land.lhs.true77
  %call87 = tail call i8* @strcpy(i8* %call2, i8* %where) #8, !dbg !572
  %17 = load i8** %2, align 8, !dbg !574, !tbaa !504
  %call90 = tail call i8* @strcpy(i8* %17, i8* %name) #8, !dbg !574
  %18 = load i8** %description13, align 8, !dbg !575, !tbaa !504
  %call92 = tail call i8* @strcpy(i8* %18, i8* %description) #8, !dbg !575
  %19 = load i8** %3, align 8, !dbg !576, !tbaa !504
  %call95 = tail call i8* @strcpy(i8* %19, i8* %thorn) #8, !dbg !576
  %20 = load i8** %4, align 8, !dbg !577, !tbaa !504
  %call97 = tail call i8* @strcpy(i8* %20, i8* %implementation) #8, !dbg !577
  %tobool98 = icmp eq i8* %language, null, !dbg !578
  %type = getelementptr inbounds i8* %call, i64 16, !dbg !579
  %21 = bitcast i8* %type to i32*, !dbg !579
  br i1 %tobool98, label %if.else, label %if.then99, !dbg !578

if.then99:                                        ; preds = %if.then84
  store i32 2, i32* %21, align 4, !dbg !579, !tbaa !489
  %call100 = tail call i32 @CCTK_TranslateLanguage(i8* %language) #9, !dbg !581
  %language102 = bitcast i8* %FunctionData to i32*, !dbg !581
  store i32 %call100, i32* %language102, align 4, !dbg !581, !tbaa !489
  %call103 = tail call i32 (i8*, i8*)* (i8*)* @CCTKi_FortranWrapper(i8* %thorn) #8, !dbg !582
  %22 = bitcast i32 (i8*, i8*)* %call103 to i32 (%struct.cGH*, i8*)*, !dbg !582
  %FortranCaller = getelementptr inbounds i8* %call, i64 32, !dbg !582
  %23 = bitcast i8* %FortranCaller to i32 (%struct.cGH*, i8*)**, !dbg !582
  store i32 (%struct.cGH*, i8*)* %22, i32 (%struct.cGH*, i8*)** %23, align 8, !dbg !582, !tbaa !504
  br label %if.end, !dbg !583

if.else:                                          ; preds = %if.then84
  store i32 1, i32* %21, align 4, !dbg !584, !tbaa !489
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then99
  %24 = load i32** %6, align 8, !dbg !586, !tbaa !504
  tail call fastcc void @CreateGroupIndexList(i32 %n_mem_groups, i32* %24, [1 x %struct.__va_list_tag]* %ap) #9, !dbg !586
  %25 = load i32** %8, align 8, !dbg !587, !tbaa !504
  tail call fastcc void @CreateGroupIndexList(i32 %n_comm_groups, i32* %25, [1 x %struct.__va_list_tag]* %ap) #9, !dbg !587
  %26 = load i32** %10, align 8, !dbg !588, !tbaa !504
  tail call fastcc void @CreateGroupIndexList(i32 %n_trigger_groups, i32* %26, [1 x %struct.__va_list_tag]* %ap) #9, !dbg !588
  %27 = load i32** %12, align 8, !dbg !589, !tbaa !504
  tail call fastcc void @CreateGroupIndexList(i32 %n_sync_groups, i32* %27, [1 x %struct.__va_list_tag]* %ap) #9, !dbg !589
  %global.i = getelementptr inbounds i8* %call, i64 56, !dbg !590
  %28 = bitcast i8* %global.i to i32*, !dbg !590
  store i32 0, i32* %28, align 4, !dbg !590, !tbaa !592
  tail call void @llvm.dbg.value(metadata !37, i64 0, metadata !593) #4, !dbg !595
  %cmp1.i = icmp sgt i32 %n_options, 0, !dbg !595
  br i1 %cmp1.i, label %for.body.lr.ph.i, label %ParseOptionList.exit, !dbg !595

for.body.lr.ph.i:                                 ; preds = %if.end
  %gp_offset_p.i = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !597
  %29 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !597
  %overflow_arg_area_p.i = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !597
  br label %for.body.i, !dbg !595

for.body.i:                                       ; preds = %ParseOption.exit.i, %for.body.lr.ph.i
  %i.02.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %ParseOption.exit.i ]
  %gp_offset.i = load i32* %gp_offset_p.i, align 4, !dbg !597
  %fits_in_gp.i = icmp ult i32 %gp_offset.i, 41, !dbg !597
  br i1 %fits_in_gp.i, label %vaarg.in_reg.i, label %vaarg.in_mem.i, !dbg !597

vaarg.in_reg.i:                                   ; preds = %for.body.i
  %reg_save_area.i = load i8** %29, align 8, !dbg !597
  %30 = sext i32 %gp_offset.i to i64, !dbg !597
  %31 = getelementptr i8* %reg_save_area.i, i64 %30, !dbg !597
  %32 = add i32 %gp_offset.i, 8, !dbg !597
  store i32 %32, i32* %gp_offset_p.i, align 4, !dbg !597
  br label %vaarg.end.i, !dbg !597

vaarg.in_mem.i:                                   ; preds = %for.body.i
  %overflow_arg_area.i = load i8** %overflow_arg_area_p.i, align 8, !dbg !597
  %overflow_arg_area.next.i = getelementptr i8* %overflow_arg_area.i, i64 8, !dbg !597
  store i8* %overflow_arg_area.next.i, i8** %overflow_arg_area_p.i, align 8, !dbg !597
  br label %vaarg.end.i, !dbg !597

vaarg.end.i:                                      ; preds = %vaarg.in_mem.i, %vaarg.in_reg.i
  %vaarg.addr.in.i = phi i8* [ %31, %vaarg.in_reg.i ], [ %overflow_arg_area.i, %vaarg.in_mem.i ]
  %vaarg.addr.i = bitcast i8* %vaarg.addr.in.i to i8**, !dbg !597
  %33 = load i8** %vaarg.addr.i, align 8, !dbg !597
  tail call void @llvm.dbg.value(metadata !{i8* %33}, i64 0, metadata !599) #4, !dbg !597
  %call.i.i = tail call i32 @CCTK_Equals(i8* %33, i8* getelementptr inbounds ([7 x i8]* @.str85, i64 0, i64 0)) #8, !dbg !600
  %tobool.i.i = icmp eq i32 %call.i.i, 0, !dbg !600
  br i1 %tobool.i.i, label %if.else.i.i, label %if.then.i.i, !dbg !600

if.then.i.i:                                      ; preds = %vaarg.end.i
  store i32 1, i32* %28, align 4, !dbg !602, !tbaa !592
  br label %ParseOption.exit.i, !dbg !604

if.else.i.i:                                      ; preds = %vaarg.end.i
  %call1.i.i = tail call i32 @CCTK_Warn(i32 1, i32 1511, i8* getelementptr inbounds ([74 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8]* @.str86, i64 0, i64 0)) #8, !dbg !605
  br label %ParseOption.exit.i

ParseOption.exit.i:                               ; preds = %if.else.i.i, %if.then.i.i
  %inc.i = add nsw i32 %i.02.i, 1, !dbg !595
  tail call void @llvm.dbg.value(metadata !{i32 %inc.i}, i64 0, metadata !593) #4, !dbg !595
  %exitcond.i = icmp eq i32 %inc.i, %n_options, !dbg !595
  br i1 %exitcond.i, label %ParseOptionList.exit, label %for.body.i, !dbg !595

ParseOptionList.exit:                             ; preds = %ParseOption.exit.i, %if.end
  %n_mem_groups118 = getelementptr inbounds i8* %call, i64 96, !dbg !607
  %34 = bitcast i8* %n_mem_groups118 to i32*, !dbg !607
  store i32 %n_mem_groups, i32* %34, align 4, !dbg !607, !tbaa !592
  %n_comm_groups119 = getelementptr inbounds i8* %call, i64 112, !dbg !608
  %35 = bitcast i8* %n_comm_groups119 to i32*, !dbg !608
  store i32 %n_comm_groups, i32* %35, align 4, !dbg !608, !tbaa !592
  %n_TriggerGroups = getelementptr inbounds i8* %call, i64 60, !dbg !609
  %36 = bitcast i8* %n_TriggerGroups to i32*, !dbg !609
  store i32 %n_trigger_groups, i32* %36, align 4, !dbg !609, !tbaa !592
  %n_SyncGroups = getelementptr inbounds i8* %call, i64 44, !dbg !610
  %37 = bitcast i8* %n_SyncGroups to i32*, !dbg !610
  store i32 %n_sync_groups, i32* %37, align 4, !dbg !610, !tbaa !592
  %call122 = tail call i64 @strlen(i8* %thorn) #11, !dbg !611
  %call123 = tail call i64 @strlen(i8* %description) #11, !dbg !611
  %add124 = add i64 %call122, 3, !dbg !611
  %add125 = add i64 %add124, %call123, !dbg !611
  %call126 = tail call noalias i8* @malloc(i64 %add125) #8, !dbg !611
  tail call void @llvm.dbg.value(metadata !{i8* %call126}, i64 0, metadata !405), !dbg !611
  %call127 = tail call i32 (i8*, i8*, ...)* @sprintf(i8* %call126, i8* getelementptr inbounds ([7 x i8]* @.str83, i64 0, i64 0), i8* %thorn, i8* %description) #8, !dbg !612
  %call128 = tail call i32 @CCTK_TimerCreate(i8* %call126) #8, !dbg !613
  %timer_handle = getelementptr inbounds i8* %call, i64 128, !dbg !613
  %38 = bitcast i8* %timer_handle to i32*, !dbg !613
  store i32 %call128, i32* %38, align 4, !dbg !613, !tbaa !592
  %cmp130 = icmp slt i32 %call128, 0, !dbg !614
  br i1 %cmp130, label %if.then132, label %if.end134, !dbg !614

if.then132:                                       ; preds = %ParseOptionList.exit
  %call133 = tail call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 5, i32 1238, i8* getelementptr inbounds ([74 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8]* @.str84, i64 0, i64 0), i8* %call126) #8, !dbg !615
  br label %if.end134, !dbg !617

if.end134:                                        ; preds = %if.then132, %ParseOptionList.exit
  tail call void @free(i8* %call126) #8, !dbg !618
  br label %if.end147, !dbg !619

if.else135:                                       ; preds = %land.lhs.true77, %land.lhs.true70, %land.lhs.true64, %land.lhs.true60, %if.then
  tail call void @free(i8* %call2) #8, !dbg !620
  %39 = load i8** %2, align 8, !dbg !622, !tbaa !504
  tail call void @free(i8* %39) #8, !dbg !622
  %40 = load i8** %description13, align 8, !dbg !623, !tbaa !504
  tail call void @free(i8* %40) #8, !dbg !623
  %41 = load i32** %8, align 8, !dbg !624, !tbaa !504
  %42 = bitcast i32* %41 to i8*, !dbg !624
  tail call void @free(i8* %42) #8, !dbg !624
  %43 = load i32** %10, align 8, !dbg !625, !tbaa !504
  %44 = bitcast i32* %43 to i8*, !dbg !625
  tail call void @free(i8* %44) #8, !dbg !625
  %45 = load i32** %12, align 8, !dbg !626, !tbaa !504
  %46 = bitcast i32* %45 to i8*, !dbg !626
  tail call void @free(i8* %46) #8, !dbg !626
  tail call void @free(i8* %call) #8, !dbg !627
  tail call void @llvm.dbg.value(metadata !628, i64 0, metadata !406), !dbg !629
  br label %if.end147

if.end147:                                        ; preds = %entry, %if.end134, %if.else135
  %this.0 = phi %struct.t_attribute* [ %0, %if.end134 ], [ null, %if.else135 ], [ %0, %entry ]
  ret %struct.t_attribute* %this.0, !dbg !630
}
