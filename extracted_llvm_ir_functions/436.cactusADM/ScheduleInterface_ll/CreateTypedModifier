define internal fastcc %struct.T_SCHED_MODIFIER* @CreateTypedModifier(%struct.T_SCHED_MODIFIER* %modifier, i8* %type, i32 %n_items, [1 x %struct.__va_list_tag]* nocapture %ap) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.T_SCHED_MODIFIER* %modifier}, i64 0, metadata !383), !dbg !1243
  tail call void @llvm.dbg.value(metadata !{i8* %type}, i64 0, metadata !384), !dbg !1244
  tail call void @llvm.dbg.value(metadata !{i32 %n_items}, i64 0, metadata !385), !dbg !1245
  tail call void @llvm.dbg.value(metadata !{[1 x %struct.__va_list_tag]* %ap}, i64 0, metadata !386), !dbg !1246
  tail call void @llvm.dbg.value(metadata !37, i64 0, metadata !387), !dbg !1247
  %cmp3 = icmp sgt i32 %n_items, 0, !dbg !1247
  br i1 %cmp3, label %for.body.lr.ph, label %for.end, !dbg !1247

for.body.lr.ph:                                   ; preds = %entry
  %gp_offset_p = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !1249
  %0 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !1249
  %overflow_arg_area_p = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !1249
  br label %for.body, !dbg !1247

for.body:                                         ; preds = %vaarg.end, %for.body.lr.ph
  %modifier.addr.05 = phi %struct.T_SCHED_MODIFIER* [ %modifier, %for.body.lr.ph ], [ %call, %vaarg.end ]
  %i.04 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %vaarg.end ]
  %gp_offset = load i32* %gp_offset_p, align 4, !dbg !1249
  %fits_in_gp = icmp ult i32 %gp_offset, 41, !dbg !1249
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !1249

vaarg.in_reg:                                     ; preds = %for.body
  %reg_save_area = load i8** %0, align 8, !dbg !1249
  %1 = sext i32 %gp_offset to i64, !dbg !1249
  %2 = getelementptr i8* %reg_save_area, i64 %1, !dbg !1249
  %3 = add i32 %gp_offset, 8, !dbg !1249
  store i32 %3, i32* %gp_offset_p, align 4, !dbg !1249
  br label %vaarg.end, !dbg !1249

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area = load i8** %overflow_arg_area_p, align 8, !dbg !1249
  %overflow_arg_area.next = getelementptr i8* %overflow_arg_area, i64 8, !dbg !1249
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !1249
  br label %vaarg.end, !dbg !1249

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr.in = phi i8* [ %2, %vaarg.in_reg ], [ %overflow_arg_area, %vaarg.in_mem ]
  %vaarg.addr = bitcast i8* %vaarg.addr.in to i8**, !dbg !1249
  %4 = load i8** %vaarg.addr, align 8, !dbg !1249
  tail call void @llvm.dbg.value(metadata !{i8* %4}, i64 0, metadata !388), !dbg !1249
  %call = tail call %struct.T_SCHED_MODIFIER* @CCTKi_ScheduleAddModifier(%struct.T_SCHED_MODIFIER* %modifier.addr.05, i8* %type, i8* %4) #8, !dbg !1251
  tail call void @llvm.dbg.value(metadata !{%struct.T_SCHED_MODIFIER* %call}, i64 0, metadata !383), !dbg !1251
  %inc = add nsw i32 %i.04, 1, !dbg !1247
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !387), !dbg !1247
  %exitcond = icmp eq i32 %inc, %n_items, !dbg !1247
  br i1 %exitcond, label %for.end, label %for.body, !dbg !1247

for.end:                                          ; preds = %vaarg.end, %entry
  %modifier.addr.0.lcssa = phi %struct.T_SCHED_MODIFIER* [ %modifier, %entry ], [ %call, %vaarg.end ]
  ret %struct.T_SCHED_MODIFIER* %modifier.addr.0.lcssa, !dbg !1252
}
