define i32 @CCTKi_ParameterAddRange(i8* %implementation, i8* %name, i8* %range_origin, i8* nocapture readonly %range, i8* nocapture readonly %range_description) #1 {
  %1 = tail call %struct.T_SKTREE* @CCTK_ImpThornList(i8* %implementation) #8
  %2 = icmp eq %struct.T_SKTREE* %1, null
  br i1 %2, label %.loopexit, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call %struct.T_SKTREE* @SKTreeFindFirst(%struct.T_SKTREE* %1) #8
  %5 = icmp eq %struct.T_SKTREE* %4, null
  br i1 %5, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %3, %12
  %node.01 = phi %struct.T_SKTREE* [ %14, %12 ], [ %4, %3 ]
  %6 = getelementptr inbounds %struct.T_SKTREE* %node.01, i64 0, i32 4
  %7 = load i8** %6, align 8, !tbaa !39
  %8 = tail call fastcc %struct.PARAM* @ParameterFind(i8* %name, i8* %7, i32 2) #7
  %9 = icmp eq %struct.PARAM* %8, null
  br i1 %9, label %12, label %10

; <label>:10                                      ; preds = %.lr.ph
  %11 = tail call fastcc i32 @ParameterExtend(%struct.PARAM* %8, i8* %range_origin, i8* %range, i8* %range_description) #7
  br label %12

; <label>:12                                      ; preds = %.lr.ph, %10
  %retval.1 = phi i32 [ %11, %10 ], [ -1, %.lr.ph ]
  %13 = getelementptr inbounds %struct.T_SKTREE* %node.01, i64 0, i32 2
  %14 = load %struct.T_SKTREE** %13, align 8, !tbaa !40
  %15 = icmp eq %struct.T_SKTREE* %14, null
  br i1 %15, label %.loopexit, label %.lr.ph

.loopexit:                                        ; preds = %12, %3, %0
  %retval.2 = phi i32 [ -1, %0 ], [ -1, %3 ], [ %retval.1, %12 ]
  ret i32 %retval.2
}
