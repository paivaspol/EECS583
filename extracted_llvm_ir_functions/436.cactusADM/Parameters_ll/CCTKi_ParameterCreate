define i32 @CCTKi_ParameterCreate(i8* %name, i8* %thorn, i8* %type, i8* %scope, i32 %steerable, i8* nocapture readonly %description, i8* %defval, i8* %data, i32 %n_ranges, ...) #1 {
  %ranges = alloca [1 x %struct.__va_list_tag], align 16
  %1 = tail call fastcc i32 @ParameterGetScope(i8* %scope) #7
  %2 = tail call fastcc %struct.PARAM* @ParameterFind(i8* %name, i8* %thorn, i32 %1) #7
  %3 = icmp eq %struct.PARAM* %2, null
  br i1 %3, label %4, label %134

; <label>:4                                       ; preds = %0
  %5 = tail call i8* @malloc(i64 16) #8
  %6 = bitcast i8* %5 to %struct.PARAM*
  %7 = icmp eq i8* %5, null
  br i1 %7, label %ParameterNew.exit, label %8

; <label>:8                                       ; preds = %4
  %9 = tail call i8* @malloc(i64 64) #8
  %10 = bitcast i8* %5 to %struct.PARAM_PROPS**
  %11 = bitcast i8* %5 to i8**
  store i8* %9, i8** %11, align 8, !tbaa !2
  %12 = icmp eq i8* %9, null
  br i1 %12, label %ParameterNew.exit, label %13

; <label>:13                                      ; preds = %8
  %14 = tail call i8* @strdup(i8* %thorn) #8
  %15 = getelementptr inbounds i8* %9, i64 8
  %16 = bitcast i8* %15 to i8**
  store i8* %14, i8** %16, align 8, !tbaa !7
  %17 = tail call i8* @strdup(i8* %name) #8
  %18 = bitcast i8* %9 to i8**
  store i8* %17, i8** %18, align 8, !tbaa !10
  %19 = tail call i8* @strdup(i8* %description) #8
  %20 = getelementptr inbounds i8* %9, i64 24
  %21 = bitcast i8* %20 to i8**
  store i8* %19, i8** %21, align 8, !tbaa !11
  %22 = tail call i8* @strdup(i8* %defval) #8
  %23 = getelementptr inbounds i8* %9, i64 32
  %24 = bitcast i8* %23 to i8**
  store i8* %22, i8** %24, align 8, !tbaa !12
  %25 = tail call fastcc i32 @ParameterGetScope(i8* %scope) #8
  %26 = getelementptr inbounds i8* %9, i64 16
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 4, !tbaa !13
  %28 = tail call i32 @STR_cmpi(i8* %type, i8* getelementptr inbounds ([8 x i8]* @.str13, i64 0, i64 0)) #8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %ParameterGetType.exit.i, label %30

; <label>:30                                      ; preds = %13
  %31 = tail call i32 @STR_cmpi(i8* %type, i8* getelementptr inbounds ([7 x i8]* @.str14, i64 0, i64 0)) #8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %ParameterGetType.exit.i, label %33

; <label>:33                                      ; preds = %30
  %34 = tail call i32 @STR_cmpi(i8* %type, i8* getelementptr inbounds ([9 x i8]* @.str15, i64 0, i64 0)) #8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %ParameterGetType.exit.i, label %36

; <label>:36                                      ; preds = %33
  %37 = tail call i32 @STR_cmpi(i8* %type, i8* getelementptr inbounds ([4 x i8]* @.str16, i64 0, i64 0)) #8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %ParameterGetType.exit.i, label %39

; <label>:39                                      ; preds = %36
  %40 = tail call i32 @STR_cmpi(i8* %type, i8* getelementptr inbounds ([5 x i8]* @.str17, i64 0, i64 0)) #8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %ParameterGetType.exit.i, label %42

; <label>:42                                      ; preds = %39
  %43 = tail call i32 @STR_cmpi(i8* %type, i8* getelementptr inbounds ([8 x i8]* @.str18, i64 0, i64 0)) #8
  %44 = icmp eq i32 %43, 0
  %..i.i = select i1 %44, i32 6, i32 -1
  br label %ParameterGetType.exit.i

ParameterGetType.exit.i:                          ; preds = %42, %39, %36, %33, %30, %13
  %retval.0.i.i = phi i32 [ 1, %13 ], [ 2, %30 ], [ 3, %33 ], [ 4, %36 ], [ 5, %39 ], [ %..i.i, %42 ]
  %45 = load %struct.PARAM_PROPS** %10, align 8, !tbaa !2
  %46 = getelementptr inbounds %struct.PARAM_PROPS* %45, i64 0, i32 5
  store i32 %retval.0.i.i, i32* %46, align 4, !tbaa !14
  %47 = getelementptr inbounds %struct.PARAM_PROPS* %45, i64 0, i32 8
  store i32 %steerable, i32* %47, align 4, !tbaa !15
  %48 = getelementptr inbounds %struct.PARAM_PROPS* %45, i64 0, i32 6
  store %struct.RANGE* null, %struct.RANGE** %48, align 8, !tbaa !16
  %49 = getelementptr inbounds %struct.PARAM_PROPS* %45, i64 0, i32 7
  store i32 0, i32* %49, align 4, !tbaa !17
  %50 = getelementptr inbounds i8* %5, i64 8
  %51 = bitcast i8* %50 to i8**
  store i8* %data, i8** %51, align 8, !tbaa !18
  %.off.i = add i32 %retval.0.i.i, -1
  %switch.i = icmp ult i32 %.off.i, 3
  br i1 %switch.i, label %52, label %54

; <label>:52                                      ; preds = %ParameterGetType.exit.i
  %53 = bitcast i8* %data to i8**
  store i8* null, i8** %53, align 8, !tbaa !19
  br label %54

; <label>:54                                      ; preds = %52, %ParameterGetType.exit.i
  %55 = load %struct.T_SKTREE** @paramtree, align 8, !tbaa !19
  %56 = getelementptr inbounds %struct.PARAM_PROPS* %45, i64 0, i32 0
  %57 = load i8** %56, align 8, !tbaa !10
  %58 = tail call %struct.T_SKTREE* @SKTreeFindNode(%struct.T_SKTREE* %55, i8* %57) #8
  %59 = icmp eq %struct.T_SKTREE* %58, null
  br i1 %59, label %78, label %60

; <label>:60                                      ; preds = %54
  %61 = getelementptr inbounds %struct.T_SKTREE* %58, i64 0, i32 5
  %62 = bitcast i8** %61 to %struct.PARAMTREENODE**
  %63 = load %struct.PARAMTREENODE** %62, align 8, !tbaa !20
  %64 = tail call i8* @malloc(i64 24) #8
  %65 = icmp eq i8* %64, null
  br i1 %65, label %ParameterNew.exit, label %66

; <label>:66                                      ; preds = %60
  %67 = bitcast i8* %64 to i8**
  store i8* %5, i8** %67, align 8, !tbaa !22
  %68 = bitcast %struct.PARAMTREENODE* %63 to i64*
  %69 = load i64* %68, align 8, !tbaa !19
  %70 = getelementptr inbounds i8* %64, i64 16
  %71 = bitcast i8* %70 to i64*
  store i64 %69, i64* %71, align 8, !tbaa !24
  %72 = getelementptr inbounds i8* %64, i64 8
  %73 = bitcast i8* %72 to %struct.PARAMLIST**
  store %struct.PARAMLIST* null, %struct.PARAMLIST** %73, align 8, !tbaa !25
  %74 = inttoptr i64 %69 to %struct.PARAMLIST*
  %75 = getelementptr inbounds %struct.PARAMLIST* %74, i64 0, i32 1
  %76 = bitcast %struct.PARAMLIST** %75 to i8**
  store i8* %64, i8** %76, align 8, !tbaa !25
  %77 = bitcast %struct.PARAMTREENODE* %63 to i8**
  store i8* %64, i8** %77, align 8, !tbaa !19
  br label %ParameterNew.exit

; <label>:78                                      ; preds = %54
  %79 = tail call i8* @malloc(i64 8) #8
  %80 = tail call i8* @malloc(i64 24) #8
  %81 = icmp ne i8* %79, null
  %82 = icmp ne i8* %80, null
  %or.cond.i.i = and i1 %81, %82
  br i1 %or.cond.i.i, label %83, label %93

; <label>:83                                      ; preds = %78
  %84 = bitcast i8* %79 to i8**
  store i8* %80, i8** %84, align 8, !tbaa !26
  %85 = bitcast i8* %80 to i8**
  store i8* %5, i8** %85, align 8, !tbaa !22
  %86 = getelementptr inbounds i8* %80, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* %86, i8 0, i64 16, i32 8, i1 false) #2
  %87 = load %struct.T_SKTREE** @paramtree, align 8, !tbaa !19
  %88 = load i8** %56, align 8, !tbaa !10
  %89 = tail call %struct.T_SKTREE* @SKTreeStoreData(%struct.T_SKTREE* %87, %struct.T_SKTREE* %87, i8* %88, i8* %79) #8
  %90 = load %struct.T_SKTREE** @paramtree, align 8, !tbaa !19
  %91 = icmp eq %struct.T_SKTREE* %90, null
  br i1 %91, label %92, label %ParameterNew.exit

; <label>:92                                      ; preds = %83
  store %struct.T_SKTREE* %89, %struct.T_SKTREE** @paramtree, align 8, !tbaa !19
  br label %ParameterNew.exit

; <label>:93                                      ; preds = %78
  tail call void @free(i8* %80) #8
  tail call void @free(i8* %79) #8
  br label %ParameterNew.exit

ParameterNew.exit:                                ; preds = %4, %8, %60, %66, %83, %92, %93
  %94 = icmp eq i32 %n_ranges, 0
  br i1 %94, label %132, label %95

; <label>:95                                      ; preds = %ParameterNew.exit
  %96 = bitcast [1 x %struct.__va_list_tag]* %ranges to i8*
  call void @llvm.va_start(i8* %96)
  %97 = icmp sgt i32 %n_ranges, 0
  br i1 %97, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %95
  %98 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ranges, i64 0, i64 0, i32 0
  %99 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ranges, i64 0, i64 0, i32 3
  %100 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ranges, i64 0, i64 0, i32 2
  %101 = add i32 %n_ranges, -1
  br label %102

; <label>:102                                     ; preds = %126, %.lr.ph
  %i.02 = phi i32 [ 0, %.lr.ph ], [ %131, %126 ]
  %103 = load i32* %98, align 16
  %104 = icmp ult i32 %103, 41
  br i1 %104, label %109, label %.thread

.thread:                                          ; preds = %102
  %105 = load i8** %100, align 8
  %106 = getelementptr i8* %105, i64 8
  store i8* %106, i8** %100, align 8
  %107 = bitcast i8* %105 to i8**
  %108 = load i8** %107, align 8
  br label %122

; <label>:109                                     ; preds = %102
  %110 = load i8** %99, align 16
  %111 = sext i32 %103 to i64
  %112 = getelementptr i8* %110, i64 %111
  %113 = add i32 %103, 8
  store i32 %113, i32* %98, align 16
  %114 = bitcast i8* %112 to i8**
  %115 = load i8** %114, align 8
  %116 = icmp ult i32 %113, 41
  br i1 %116, label %117, label %122

; <label>:117                                     ; preds = %109
  %118 = load i8** %99, align 16
  %119 = sext i32 %113 to i64
  %120 = getelementptr i8* %118, i64 %119
  %121 = add i32 %103, 16
  store i32 %121, i32* %98, align 16
  br label %126

; <label>:122                                     ; preds = %.thread, %109
  %123 = phi i8* [ %108, %.thread ], [ %115, %109 ]
  %124 = load i8** %100, align 8
  %125 = getelementptr i8* %124, i64 8
  store i8* %125, i8** %100, align 8
  br label %126

; <label>:126                                     ; preds = %122, %117
  %127 = phi i8* [ %115, %117 ], [ %123, %122 ]
  %.in1 = phi i8* [ %120, %117 ], [ %124, %122 ]
  %128 = bitcast i8* %.in1 to i8**
  %129 = load i8** %128, align 8
  %130 = call fastcc i32 @ParameterExtend(%struct.PARAM* %6, i8* %thorn, i8* %127, i8* %129) #7
  %131 = add nuw nsw i32 %i.02, 1
  %exitcond = icmp eq i32 %i.02, %101
  br i1 %exitcond, label %._crit_edge, label %102

._crit_edge:                                      ; preds = %126, %95
  call void @llvm.va_end(i8* %96)
  br label %132

; <label>:132                                     ; preds = %ParameterNew.exit, %._crit_edge
  %133 = call fastcc i32 @ParameterSetSimple(%struct.PARAM* %6, i8* %defval) #7
  br label %134

; <label>:134                                     ; preds = %0, %132
  %retval.0 = phi i32 [ %133, %132 ], [ -2, %0 ]
  ret i32 %retval.0
}
