define internal fastcc i32 @ParameterExtend(%struct.PARAM* nocapture readonly %param, i8* %range_origin, i8* nocapture readonly %range, i8* nocapture readonly %range_description) #1 {
  %1 = tail call i8* @malloc(i64 48) #8
  %2 = icmp eq i8* %1, null
  br i1 %2, label %.thread, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i8* @strdup(i8* %range) #8
  %5 = getelementptr inbounds i8* %1, i64 16
  %6 = bitcast i8* %5 to i8**
  store i8* %4, i8** %6, align 8, !tbaa !28
  %7 = tail call i8* @strdup(i8* %range_origin) #8
  %8 = getelementptr inbounds i8* %1, i64 24
  %9 = bitcast i8* %8 to i8**
  store i8* %7, i8** %9, align 8, !tbaa !30
  %10 = tail call i8* @strdup(i8* %range_description) #8
  %11 = getelementptr inbounds i8* %1, i64 40
  %12 = bitcast i8* %11 to i8**
  store i8* %10, i8** %12, align 8, !tbaa !31
  %13 = getelementptr inbounds i8* %1, i64 8
  %14 = bitcast i8* %13 to %struct.RANGE**
  %15 = bitcast i8* %1 to %struct.RANGE**
  %16 = getelementptr inbounds i8* %1, i64 32
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 4, !tbaa !32
  %18 = getelementptr inbounds %struct.PARAM* %param, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 16, i32 8, i1 false)
  %19 = load %struct.PARAM_PROPS** %18, align 8, !tbaa !2
  %20 = getelementptr inbounds %struct.PARAM_PROPS* %19, i64 0, i32 6
  %rangenode.03 = load %struct.RANGE** %20, align 8
  %21 = icmp eq %struct.RANGE* %rangenode.03, null
  br i1 %21, label %.thread12, label %.lr.ph

.thread12:                                        ; preds = %3
  %22 = bitcast i8* %1 to <2 x %struct.RANGE*>*
  store <2 x %struct.RANGE*> zeroinitializer, <2 x %struct.RANGE*>* %22, align 8, !tbaa !19
  %23 = getelementptr inbounds %struct.PARAM_PROPS* %19, i64 0, i32 6
  %24 = bitcast %struct.RANGE** %23 to i8**
  store i8* %1, i8** %24, align 8, !tbaa !16
  br label %.thread

.lr.ph:                                           ; preds = %3, %46
  %rangenode.04 = phi %struct.RANGE* [ %rangenode.0, %46 ], [ %rangenode.03, %3 ]
  %25 = getelementptr inbounds %struct.RANGE* %rangenode.04, i64 0, i32 3
  %26 = load i8** %25, align 8, !tbaa !30
  %27 = tail call i32 @STR_cmpi(i8* %range_origin, i8* %26) #8
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %29, label %46

; <label>:29                                      ; preds = %.lr.ph
  store %struct.RANGE* %rangenode.04, %struct.RANGE** %14, align 8, !tbaa !33
  %30 = bitcast %struct.RANGE* %rangenode.04 to i64*
  %31 = load i64* %30, align 8, !tbaa !34
  %32 = bitcast i8* %1 to i64*
  store i64 %31, i64* %32, align 8, !tbaa !34
  %33 = bitcast %struct.RANGE* %rangenode.04 to i8**
  store i8* %1, i8** %33, align 8, !tbaa !34
  %34 = load %struct.PARAM_PROPS** %18, align 8, !tbaa !2
  %35 = getelementptr inbounds %struct.PARAM_PROPS* %34, i64 0, i32 6
  %36 = load %struct.RANGE** %35, align 8, !tbaa !16
  %37 = icmp eq %struct.RANGE* %36, %rangenode.04
  br i1 %37, label %38, label %40

; <label>:38                                      ; preds = %29
  %39 = bitcast %struct.RANGE** %35 to i8**
  store i8* %1, i8** %39, align 8, !tbaa !16
  br label %40

; <label>:40                                      ; preds = %38, %29
  %41 = load %struct.RANGE** %15, align 8, !tbaa !34
  %42 = icmp eq %struct.RANGE* %41, null
  br i1 %42, label %.thread, label %43

; <label>:43                                      ; preds = %40
  %44 = getelementptr inbounds %struct.RANGE* %41, i64 0, i32 1
  %45 = bitcast %struct.RANGE** %44 to i8**
  store i8* %1, i8** %45, align 8, !tbaa !33
  br label %.thread

; <label>:46                                      ; preds = %.lr.ph
  %47 = getelementptr inbounds %struct.RANGE* %rangenode.04, i64 0, i32 1
  %rangenode.0 = load %struct.RANGE** %47, align 8
  %48 = icmp eq %struct.RANGE* %rangenode.0, null
  br i1 %48, label %49, label %.lr.ph

; <label>:49                                      ; preds = %46
  %.pre = load %struct.PARAM_PROPS** %18, align 8, !tbaa !2
  %.phi.trans.insert = getelementptr inbounds %struct.PARAM_PROPS* %.pre, i64 0, i32 6
  %.pre6 = load %struct.RANGE** %.phi.trans.insert, align 8, !tbaa !16
  %phitmp = icmp eq %struct.RANGE* %.pre6, null
  store %struct.RANGE* null, %struct.RANGE** %14, align 8, !tbaa !33
  store %struct.RANGE* %rangenode.04, %struct.RANGE** %15, align 8, !tbaa !34
  br i1 %phitmp, label %.thread13, label %.thread10

.thread13:                                        ; preds = %49
  %50 = getelementptr inbounds %struct.PARAM_PROPS* %.pre, i64 0, i32 6
  %51 = bitcast %struct.RANGE** %50 to i8**
  store i8* %1, i8** %51, align 8, !tbaa !16
  br label %.thread10

.thread10:                                        ; preds = %49, %.thread13
  %52 = getelementptr inbounds %struct.RANGE* %rangenode.04, i64 0, i32 1
  %53 = bitcast %struct.RANGE** %52 to i8**
  store i8* %1, i8** %53, align 8, !tbaa !33
  br label %.thread

.thread:                                          ; preds = %.thread12, %43, %40, %0, %.thread10
  %retcode.0 = phi i32 [ 0, %.thread10 ], [ -1, %0 ], [ 0, %40 ], [ 0, %43 ], [ 0, %.thread12 ]
  ret i32 %retcode.0
}
