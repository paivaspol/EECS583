define internal fastcc i32 @ScheduleCreateGroup(i8* %name) #1 {
entry:
  %this_group = alloca %struct.t_sched_group*, align 8
  call void @llvm.dbg.value(metadata !{i8* %name}, i64 0, metadata !181), !dbg !240
  call void @llvm.dbg.declare(metadata !{%struct.t_sched_group** %this_group}, metadata !184), !dbg !241
  %0 = load %struct.cHandledData** @schedule_groups, align 8, !dbg !242, !tbaa !197
  %1 = bitcast %struct.t_sched_group** %this_group to i8**, !dbg !242
  %call = call i32 @Util_GetHandle(%struct.cHandledData* %0, i8* %name, i8** %1) #8, !dbg !242
  call void @llvm.dbg.value(metadata !{i32 %call}, i64 0, metadata !183), !dbg !242
  %cmp = icmp sgt i32 %call, -1, !dbg !243
  br i1 %cmp, label %if.end15, label %if.else, !dbg !243

if.else:                                          ; preds = %entry
  %call1 = call noalias i8* @malloc(i64 32) #8, !dbg !244
  %2 = bitcast i8* %call1 to %struct.t_sched_group*, !dbg !244
  call void @llvm.dbg.value(metadata !{%struct.t_sched_group* %2}, i64 0, metadata !184), !dbg !244
  store %struct.t_sched_group* %2, %struct.t_sched_group** %this_group, align 8, !dbg !244, !tbaa !197
  %tobool = icmp eq i8* %call1, null, !dbg !246
  br i1 %tobool, label %if.end15, label %if.then2, !dbg !246

if.then2:                                         ; preds = %if.else
  %call3 = call i64 @strlen(i8* %name) #9, !dbg !247
  %add = add i64 %call3, 1, !dbg !247
  %call4 = call noalias i8* @malloc(i64 %add) #8, !dbg !247
  call void @llvm.dbg.value(metadata !{%struct.t_sched_group** %this_group}, i64 0, metadata !184), !dbg !247
  %name5 = bitcast i8* %call1 to i8**, !dbg !247
  store i8* %call4, i8** %name5, align 8, !dbg !247, !tbaa !197
  call void @llvm.dbg.value(metadata !{%struct.t_sched_group** %this_group}, i64 0, metadata !184), !dbg !249
  %tobool7 = icmp eq i8* %call4, null, !dbg !249
  br i1 %tobool7, label %if.else12, label %if.then8, !dbg !249

if.then8:                                         ; preds = %if.then2
  %call10 = call i8* @strcpy(i8* %call4, i8* %name) #8, !dbg !250
  call void @llvm.dbg.value(metadata !{%struct.t_sched_group** %this_group}, i64 0, metadata !184), !dbg !252
  %3 = load %struct.t_sched_group** %this_group, align 8, !dbg !252, !tbaa !197
  %order = getelementptr inbounds %struct.t_sched_group* %3, i64 0, i32 1, !dbg !252
  store i32* null, i32** %order, align 8, !dbg !252, !tbaa !197
  call void @llvm.dbg.value(metadata !{%struct.t_sched_group** %this_group}, i64 0, metadata !184), !dbg !253
  %4 = load %struct.t_sched_group** %this_group, align 8, !dbg !253, !tbaa !197
  %n_scheditems = getelementptr inbounds %struct.t_sched_group* %4, i64 0, i32 2, !dbg !253
  store i32 0, i32* %n_scheditems, align 4, !dbg !253, !tbaa !254
  call void @llvm.dbg.value(metadata !{%struct.t_sched_group** %this_group}, i64 0, metadata !184), !dbg !255
  %scheditems = getelementptr inbounds %struct.t_sched_group* %4, i64 0, i32 3, !dbg !255
  store %struct.t_sched_item* null, %struct.t_sched_item** %scheditems, align 8, !dbg !255, !tbaa !197
  call void @llvm.dbg.value(metadata !{%struct.t_sched_group** %this_group}, i64 0, metadata !184), !dbg !256
  %5 = load %struct.t_sched_group** %this_group, align 8, !dbg !256, !tbaa !197
  %6 = bitcast %struct.t_sched_group* %5 to i8*, !dbg !256
  %call11 = call i32 @Util_NewHandle(%struct.cHandledData** @schedule_groups, i8* %name, i8* %6) #8, !dbg !256
  call void @llvm.dbg.value(metadata !{i32 %call11}, i64 0, metadata !182), !dbg !256
  %7 = load i32* @n_schedule_groups, align 4, !dbg !257, !tbaa !254
  %inc = add nsw i32 %7, 1, !dbg !257
  store i32 %inc, i32* @n_schedule_groups, align 4, !dbg !257, !tbaa !254
  br label %if.end15, !dbg !258

if.else12:                                        ; preds = %if.then2
  call void @free(i8* %call1) #8, !dbg !259
  call void @llvm.dbg.value(metadata !261, i64 0, metadata !182), !dbg !262
  br label %if.end15

if.end15:                                         ; preds = %if.else, %entry, %if.else12, %if.then8
  %retcode.0 = phi i32 [ %call11, %if.then8 ], [ -2, %if.else12 ], [ -1, %entry ], [ -2, %if.else ]
  ret i32 %retcode.0, !dbg !263
}
