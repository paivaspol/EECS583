define i32 @RegisterKeyedFunction(void ()** nocapture %array, i32 %min, i32 %max, i32 %key, void ()* %func) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{void ()** %array}, i64 0, metadata !27), !dbg !43
  tail call void @llvm.dbg.value(metadata !{i32 %min}, i64 0, metadata !28), !dbg !44
  tail call void @llvm.dbg.value(metadata !{i32 %max}, i64 0, metadata !29), !dbg !44
  tail call void @llvm.dbg.value(metadata !{i32 %key}, i64 0, metadata !30), !dbg !45
  tail call void @llvm.dbg.value(metadata !{void ()* %func}, i64 0, metadata !31), !dbg !45
  %cmp = icmp slt i32 %key, %min, !dbg !46
  %cmp1 = icmp sgt i32 %key, %max, !dbg !46
  %or.cond = or i1 %cmp, %cmp1, !dbg !46
  br i1 %or.cond, label %if.end7, label %if.then, !dbg !46

if.then:                                          ; preds = %entry
  %idxprom = sext i32 %key to i64, !dbg !47
  %arrayidx = getelementptr inbounds void ()** %array, i64 %idxprom, !dbg !47
  %0 = load void ()** %arrayidx, align 8, !dbg !47, !tbaa !49
  %cmp2 = icmp eq void ()* %0, null, !dbg !47
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !47

if.then3:                                         ; preds = %if.then
  store void ()* %func, void ()** %arrayidx, align 8, !dbg !52, !tbaa !49
  tail call void @llvm.dbg.value(metadata !9, i64 0, metadata !32), !dbg !54
  br label %if.end7, !dbg !55

if.end7:                                          ; preds = %entry, %if.then, %if.then3
  %return_code.0 = phi i32 [ 0, %if.then3 ], [ 1, %if.then ], [ 2, %entry ]
  ret i32 %return_code.0, !dbg !56
}
