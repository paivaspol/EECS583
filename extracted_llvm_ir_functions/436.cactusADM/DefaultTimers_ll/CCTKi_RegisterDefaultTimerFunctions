define i32 @CCTKi_RegisterDefaultTimerFunctions() #1 {
  %functions.i1 = alloca %struct.cClockFuncs, align 8
  %functions.i = alloca %struct.cClockFuncs, align 8
  %1 = bitcast %struct.cClockFuncs* %functions.i to i8*
  call void @llvm.lifetime.start(i64 72, i8* %1) #2
  %2 = getelementptr inbounds %struct.cClockFuncs* %functions.i, i64 0, i32 1
  store i32 1, i32* %2, align 8, !tbaa !2
  %3 = getelementptr inbounds %struct.cClockFuncs* %functions.i, i64 0, i32 2
  store i8* (i32)* @CCTKi_TimerGetTimeOfDayCreate, i8* (i32)** %3, align 8, !tbaa !8
  %4 = getelementptr inbounds %struct.cClockFuncs* %functions.i, i64 0, i32 3
  store void (i32, i8*)* @CCTKi_TimerGetTimeOfDayDestroy, void (i32, i8*)** %4, align 8, !tbaa !9
  %5 = getelementptr inbounds %struct.cClockFuncs* %functions.i, i64 0, i32 4
  store void (i32, i8*)* @CCTKi_TimerGetTimeOfDayStart, void (i32, i8*)** %5, align 8, !tbaa !10
  %6 = getelementptr inbounds %struct.cClockFuncs* %functions.i, i64 0, i32 5
  store void (i32, i8*)* @CCTKi_TimerGetTimeOfDayStop, void (i32, i8*)** %6, align 8, !tbaa !11
  %7 = getelementptr inbounds %struct.cClockFuncs* %functions.i, i64 0, i32 6
  store void (i32, i8*)* @CCTKi_TimerGetTimeOfDayReset, void (i32, i8*)** %7, align 8, !tbaa !12
  %8 = getelementptr inbounds %struct.cClockFuncs* %functions.i, i64 0, i32 7
  store void (i32, i8*, %struct.cTimerVal*)* @CCTKi_TimerGetTimeOfDayGet, void (i32, i8*, %struct.cTimerVal*)** %8, align 8, !tbaa !13
  %9 = getelementptr inbounds %struct.cClockFuncs* %functions.i, i64 0, i32 8
  store void (i32, i8*, %struct.cTimerVal*)* @CCTKi_TimerGetTimeOfDaySet, void (i32, i8*, %struct.cTimerVal*)** %9, align 8, !tbaa !14
  %10 = call i32 @CCTK_ClockRegister(i8* getelementptr inbounds ([13 x i8]* @.str1, i64 0, i64 0), %struct.cClockFuncs* %functions.i) #5
  call void @llvm.lifetime.end(i64 72, i8* %1) #2
  %11 = bitcast %struct.cClockFuncs* %functions.i1 to i8*
  call void @llvm.lifetime.start(i64 72, i8* %11) #2
  %12 = getelementptr inbounds %struct.cClockFuncs* %functions.i1, i64 0, i32 1
  store i32 1, i32* %12, align 8, !tbaa !2
  %13 = getelementptr inbounds %struct.cClockFuncs* %functions.i1, i64 0, i32 2
  store i8* (i32)* @CCTKi_TimerGetrUsageCreate, i8* (i32)** %13, align 8, !tbaa !8
  %14 = getelementptr inbounds %struct.cClockFuncs* %functions.i1, i64 0, i32 3
  store void (i32, i8*)* @CCTKi_TimerGetrUsageDestroy, void (i32, i8*)** %14, align 8, !tbaa !9
  %15 = getelementptr inbounds %struct.cClockFuncs* %functions.i1, i64 0, i32 4
  store void (i32, i8*)* @CCTKi_TimerGetrUsageStart, void (i32, i8*)** %15, align 8, !tbaa !10
  %16 = getelementptr inbounds %struct.cClockFuncs* %functions.i1, i64 0, i32 5
  store void (i32, i8*)* @CCTKi_TimerGetrUsageStop, void (i32, i8*)** %16, align 8, !tbaa !11
  %17 = getelementptr inbounds %struct.cClockFuncs* %functions.i1, i64 0, i32 6
  store void (i32, i8*)* @CCTKi_TimerGetrUsageReset, void (i32, i8*)** %17, align 8, !tbaa !12
  %18 = getelementptr inbounds %struct.cClockFuncs* %functions.i1, i64 0, i32 7
  store void (i32, i8*, %struct.cTimerVal*)* @CCTKi_TimerGetrUsageGet, void (i32, i8*, %struct.cTimerVal*)** %18, align 8, !tbaa !13
  %19 = getelementptr inbounds %struct.cClockFuncs* %functions.i1, i64 0, i32 8
  store void (i32, i8*, %struct.cTimerVal*)* @CCTKi_TimerGetrUsageSet, void (i32, i8*, %struct.cTimerVal*)** %19, align 8, !tbaa !14
  %20 = call i32 @CCTK_ClockRegister(i8* getelementptr inbounds ([10 x i8]* @.str4, i64 0, i64 0), %struct.cClockFuncs* %functions.i1) #5
  call void @llvm.lifetime.end(i64 72, i8* %11) #2
  ret i32 0
}
