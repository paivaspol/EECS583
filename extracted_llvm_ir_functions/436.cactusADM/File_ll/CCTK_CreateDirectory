define i32 @CCTK_CreateDirectory(i32 %mode, i8* %pathname) #1 {
  %path = alloca i8*, align 8
  %statbuf = alloca %struct.stat, align 8
  tail call void @llvm.dbg.value(metadata i32 %mode, i64 0, metadata !22, metadata !111), !dbg !112
  tail call void @llvm.dbg.value(metadata i8* %pathname, i64 0, metadata !23, metadata !111), !dbg !113
  %1 = bitcast %struct.stat* %statbuf to i8*, !dbg !114
  call void @llvm.lifetime.start(i64 144, i8* %1) #2, !dbg !114
  %2 = tail call i64 @strlen(i8* %pathname) #7, !dbg !115
  %3 = add i64 %2, 1, !dbg !116
  %4 = tail call i8* @malloc(i64 %3) #7, !dbg !117
  tail call void @llvm.dbg.value(metadata i8* %4, i64 0, metadata !26, metadata !111), !dbg !118
  %5 = icmp eq i8* %4, null, !dbg !119
  br i1 %5, label %58, label %6, !dbg !121

; <label>:6                                       ; preds = %0
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !24, metadata !111), !dbg !122
  store i8 0, i8* %4, align 1, !dbg !123, !tbaa !125
  tail call void @llvm.dbg.value(metadata i8* %pathname, i64 0, metadata !25, metadata !111), !dbg !128
  store i8* %pathname, i8** %path, align 8, !dbg !129, !tbaa !130
  %7 = call i64 @llvm.objectsize.i64.p0i8(i8* %4, i1 false), !dbg !132
  %8 = trunc i32 %mode to i16, !dbg !136
  %9 = getelementptr inbounds %struct.stat* %statbuf, i64 0, i32 1, !dbg !140
  br label %.thread.outer, !dbg !142

.thread.outer:                                    ; preds = %32, %28, %6
  %retval.0.ph = phi i32 [ 0, %6 ], [ 1, %28 ], [ 1, %32 ]
  br label %.thread

.thread:                                          ; preds = %.thread.outer, %25
  call void @llvm.dbg.value(metadata i8** %path, i64 0, metadata !25, metadata !111), !dbg !128
  %10 = call i8* @Util_StrSep(i8** %path, i8* getelementptr inbounds ([2 x i8]* @.str, i64 0, i64 0)) #7, !dbg !143
  call void @llvm.dbg.value(metadata i8* %10, i64 0, metadata !27, metadata !111), !dbg !144
  %11 = icmp eq i8* %10, null, !dbg !142
  br i1 %11, label %36, label %12, !dbg !142

; <label>:12                                      ; preds = %.thread
  %13 = load i8* %4, align 1, !dbg !145, !tbaa !125
  %14 = icmp eq i8 %13, 0, !dbg !145
  br i1 %14, label %17, label %15, !dbg !146

; <label>:15                                      ; preds = %12
  %16 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %4, i32 0, i64 %7, i8* getelementptr inbounds ([6 x i8]* @.str1, i64 0, i64 0), i8* %4, i8* %10) #7, !dbg !147
  br label %22, !dbg !149

; <label>:17                                      ; preds = %12
  %18 = load i8* %10, align 1, !dbg !132, !tbaa !125
  %19 = icmp ne i8 %18, 0, !dbg !132
  %20 = select i1 %19, i8* %10, i8* getelementptr inbounds ([2 x i8]* @.str, i64 0, i64 0), !dbg !132
  %21 = call i8* @__strcpy_chk(i8* %4, i8* %20, i64 %7) #7, !dbg !132
  br label %22

; <label>:22                                      ; preds = %17, %15
  call void @llvm.dbg.value(metadata %struct.stat* %statbuf, i64 0, metadata !28, metadata !111), !dbg !150
  %23 = call i32 @"\01_stat$INODE64"(i8* %4, %struct.stat* %statbuf) #7, !dbg !151
  %24 = icmp eq i32 %23, 0, !dbg !151
  br i1 %24, label %32, label %25, !dbg !152

; <label>:25                                      ; preds = %22
  %26 = call i32 @mkdir(i8* %4, i16 zeroext %8) #7, !dbg !136
  %27 = icmp eq i32 %26, -1, !dbg !153
  br i1 %27, label %28, label %.thread, !dbg !154

; <label>:28                                      ; preds = %25
  %29 = call i32* @__error() #7, !dbg !155
  %30 = load i32* %29, align 4, !dbg !155, !tbaa !157
  %31 = icmp eq i32 %30, 17, !dbg !159
  br i1 %31, label %.thread.outer, label %.thread9

; <label>:32                                      ; preds = %22
  %33 = load i16* %9, align 4, !dbg !140, !tbaa !160
  %34 = and i16 %33, -4096, !dbg !140
  %35 = icmp eq i16 %34, 16384, !dbg !140
  br i1 %35, label %.thread.outer, label %.thread9

; <label>:36                                      ; preds = %.thread
  call void @llvm.dbg.value(metadata i8** %path, i64 0, metadata !25, metadata !111), !dbg !128
  %37 = load i8** %path, align 8, !dbg !166, !tbaa !130
  %38 = ptrtoint i8* %37 to i64, !dbg !170
  %39 = ptrtoint i8* %pathname to i64, !dbg !170
  %40 = sub i64 %38, %39, !dbg !170
  %41 = call i64 @strlen(i8* %pathname) #7, !dbg !171
  %42 = icmp ult i64 %40, %41, !dbg !172
  br i1 %42, label %43, label %.thread9, !dbg !173

; <label>:43                                      ; preds = %36
  call void @llvm.dbg.value(metadata %struct.stat* %statbuf, i64 0, metadata !28, metadata !111), !dbg !150
  %44 = call i32 @"\01_stat$INODE64"(i8* %pathname, %struct.stat* %statbuf) #7, !dbg !174
  %45 = icmp eq i32 %44, 0, !dbg !174
  br i1 %45, label %54, label %46, !dbg !177

; <label>:46                                      ; preds = %43
  %47 = call i32 @mkdir(i8* %pathname, i16 zeroext %8) #7, !dbg !178
  %48 = icmp eq i32 %47, -1, !dbg !181
  br i1 %48, label %49, label %.thread9, !dbg !182

; <label>:49                                      ; preds = %46
  %50 = call i32* @__error() #7, !dbg !183
  %51 = load i32* %50, align 4, !dbg !183, !tbaa !157
  %52 = icmp eq i32 %51, 17, !dbg !185
  %53 = select i1 %52, i32 1, i32 -2, !dbg !183
  call void @llvm.dbg.value(metadata i32 %53, i64 0, metadata !24, metadata !111), !dbg !122
  br label %.thread9, !dbg !186

; <label>:54                                      ; preds = %43
  %55 = load i16* %9, align 4, !dbg !187, !tbaa !160
  %56 = and i16 %55, -4096, !dbg !187
  %57 = icmp eq i16 %56, 16384, !dbg !187
  %.1 = select i1 %57, i32 1, i32 -3
  br label %.thread9

.thread9:                                         ; preds = %28, %32, %54, %36, %46, %49
  %retval.3 = phi i32 [ %53, %49 ], [ %retval.0.ph, %46 ], [ %retval.0.ph, %36 ], [ %.1, %54 ], [ -2, %28 ], [ -3, %32 ]
  call void @free(i8* %4) #8, !dbg !189
  br label %58, !dbg !190

; <label>:58                                      ; preds = %0, %.thread9
  %retval.4 = phi i32 [ %retval.3, %.thread9 ], [ -1, %0 ]
  call void @llvm.lifetime.end(i64 144, i8* %1) #2, !dbg !191
  ret i32 %retval.4, !dbg !191
}
