define i32 @Hyperslab_DefineGlobalMappingByIndex(%struct.cGH* %GH, i32 %vindex, i32 %dim, i32* readonly %direction, i32* readonly %origin, i32* readonly %extent, i32* readonly %downsample, i32 %table_handle, i32 %target_proc, void (i8*, i8*, i32, i32, i32)* %conversion_fn, i32* %hsize) #1 {
  %vinfo = alloca %struct.cGroup, align 4
  tail call void @llvm.dbg.value(metadata %struct.cGH* %GH, i64 0, metadata !205, metadata !261), !dbg !262
  tail call void @llvm.dbg.value(metadata i32 %vindex, i64 0, metadata !206, metadata !261), !dbg !263
  tail call void @llvm.dbg.value(metadata i32 %dim, i64 0, metadata !207, metadata !261), !dbg !264
  tail call void @llvm.dbg.value(metadata i32* %direction, i64 0, metadata !208, metadata !261), !dbg !265
  tail call void @llvm.dbg.value(metadata i32* %origin, i64 0, metadata !209, metadata !261), !dbg !266
  tail call void @llvm.dbg.value(metadata i32* %extent, i64 0, metadata !210, metadata !261), !dbg !267
  tail call void @llvm.dbg.value(metadata i32* %downsample, i64 0, metadata !211, metadata !261), !dbg !268
  tail call void @llvm.dbg.value(metadata i32 %table_handle, i64 0, metadata !212, metadata !261), !dbg !269
  tail call void @llvm.dbg.value(metadata i32 %target_proc, i64 0, metadata !213, metadata !261), !dbg !270
  tail call void @llvm.dbg.value(metadata void (i8*, i8*, i32, i32, i32)* %conversion_fn, i64 0, metadata !214, metadata !261), !dbg !271
  tail call void @llvm.dbg.value(metadata i32* %hsize, i64 0, metadata !215, metadata !261), !dbg !272
  %1 = icmp sgt i32 %table_handle, -1, !dbg !273
  br i1 %1, label %2, label %4, !dbg !275

; <label>:2                                       ; preds = %0
  %3 = tail call i32 @CCTK_Warn(i32 1, i32 95, i8* getelementptr inbounds ([78 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8]* @.str2, i64 0, i64 0)) #7, !dbg !276
  br label %4, !dbg !278

; <label>:4                                       ; preds = %2, %0
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !219, metadata !261), !dbg !279
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !224, metadata !261), !dbg !280
  %5 = tail call i32 @CCTK_GroupIndexFromVarI(i32 %vindex) #7, !dbg !281
  tail call void @llvm.dbg.value(metadata %struct.cGroup* %vinfo, i64 0, metadata !227, metadata !261), !dbg !283
  %6 = call i32 @CCTK_GroupData(i32 %5, %struct.cGroup* %vinfo) #7, !dbg !284
  %7 = icmp slt i32 %6, 0, !dbg !285
  br i1 %7, label %.thread13, label %8, !dbg !286

; <label>:8                                       ; preds = %4
  %9 = getelementptr inbounds %struct.cGroup* %vinfo, i64 0, i32 0, !dbg !287
  %10 = load i32* %9, align 4, !dbg !287, !tbaa !289
  %11 = and i32 %10, -2, !dbg !294
  %switch = icmp eq i32 %11, 2, !dbg !294
  br i1 %switch, label %12, label %.thread13, !dbg !294

; <label>:12                                      ; preds = %8
  %13 = icmp slt i32 %dim, 0, !dbg !295
  br i1 %13, label %.thread13, label %14, !dbg !297

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.cGroup* %vinfo, i64 0, i32 4, !dbg !298
  %16 = load i32* %15, align 4, !dbg !298, !tbaa !299
  %17 = icmp slt i32 %16, %dim, !dbg !300
  br i1 %17, label %.thread13, label %18, !dbg !301

; <label>:18                                      ; preds = %14
  %19 = icmp ne i32* %direction, null, !dbg !302
  %20 = icmp ne i32* %origin, null, !dbg !304
  %or.cond = and i1 %19, %20, !dbg !305
  %21 = icmp ne i32* %extent, null, !dbg !306
  %or.cond3 = and i1 %or.cond, %21, !dbg !305
  %22 = icmp ne i32* %hsize, null, !dbg !307
  %or.cond5 = and i1 %or.cond3, %22, !dbg !305
  br i1 %or.cond5, label %23, label %.thread13, !dbg !305

; <label>:23                                      ; preds = %18
  %24 = load i32 (%struct.cGH*)** @CCTK_nProcs, align 8, !dbg !308, !tbaa !310
  %25 = call i32 %24(%struct.cGH* %GH) #7, !dbg !308
  %26 = icmp sgt i32 %25, %target_proc, !dbg !312
  br i1 %26, label %27, label %.thread13, !dbg !313

; <label>:27                                      ; preds = %23
  %28 = call %struct.PGH* @PUGH_pGH(%struct.cGH* %GH) #7, !dbg !314
  call void @llvm.dbg.value(metadata %struct.PGH* %28, i64 0, metadata !225, metadata !261), !dbg !316
  %29 = icmp eq %struct.PGH* %28, null, !dbg !317
  br i1 %29, label %.thread13, label %.preheader25, !dbg !318

.preheader25:                                     ; preds = %27
  %30 = load i32* %15, align 4, !dbg !319, !tbaa !299
  %31 = icmp eq i32 %30, 0, !dbg !323
  br i1 %31, label %._crit_edge69.thread, label %.lr.ph68, !dbg !324

.lr.ph68:                                         ; preds = %.preheader25
  %32 = icmp eq i32* %downsample, null, !dbg !325
  %33 = zext i32 %30 to i64, !dbg !324
  %34 = zext i32 %dim to i64, !dbg !324
  br label %35, !dbg !324

; <label>:35                                      ; preds = %.lr.ph68, %52
  %indvars.iv80 = phi i64 [ 0, %.lr.ph68 ], [ %indvars.iv.next81, %52 ]
  %retval.066 = phi i32 [ 0, %.lr.ph68 ], [ %retval.1, %52 ]
  %36 = getelementptr inbounds i32* %origin, i64 %indvars.iv80, !dbg !330
  %37 = load i32* %36, align 4, !dbg !330, !tbaa !331
  %.lobit = lshr i32 %37, 31, !dbg !332
  %38 = or i32 %.lobit, %retval.066, !dbg !333
  call void @llvm.dbg.value(metadata i32 %38, i64 0, metadata !219, metadata !261), !dbg !279
  %39 = icmp ult i64 %indvars.iv80, %34, !dbg !334
  br i1 %39, label %40, label %52, !dbg !335

; <label>:40                                      ; preds = %35
  %41 = getelementptr inbounds i32* %extent, i64 %indvars.iv80, !dbg !336
  %42 = load i32* %41, align 4, !dbg !336, !tbaa !331
  %43 = icmp slt i32 %42, 1, !dbg !337
  %44 = zext i1 %43 to i32, !dbg !337
  %45 = or i32 %44, %38, !dbg !338
  call void @llvm.dbg.value(metadata i32 %45, i64 0, metadata !219, metadata !261), !dbg !279
  br i1 %32, label %52, label %46, !dbg !339

; <label>:46                                      ; preds = %40
  %47 = getelementptr inbounds i32* %downsample, i64 %indvars.iv80, !dbg !340
  %48 = load i32* %47, align 4, !dbg !340, !tbaa !331
  %49 = icmp slt i32 %48, 1, !dbg !342
  %50 = zext i1 %49 to i32, !dbg !342
  %51 = or i32 %50, %45, !dbg !343
  call void @llvm.dbg.value(metadata i32 %51, i64 0, metadata !219, metadata !261), !dbg !279
  br label %52, !dbg !344

; <label>:52                                      ; preds = %40, %35, %46
  %retval.1 = phi i32 [ %51, %46 ], [ %45, %40 ], [ %38, %35 ]
  %indvars.iv.next81 = add nuw nsw i64 %indvars.iv80, 1, !dbg !324
  %53 = icmp ult i64 %indvars.iv.next81, %33, !dbg !323
  br i1 %53, label %35, label %._crit_edge69, !dbg !324

._crit_edge69:                                    ; preds = %52
  %54 = icmp eq i32 %retval.1, 0, !dbg !345
  call void @llvm.dbg.value(metadata !2, i64 0, metadata !224, metadata !261), !dbg !280
  call void @llvm.dbg.value(metadata i32 -5, i64 0, metadata !219, metadata !261), !dbg !279
  %. = select i1 %54, i8* null, i8* getelementptr inbounds ([57 x i8]* @.str9, i64 0, i64 0), !dbg !347
  br i1 %54, label %._crit_edge69.thread, label %.thread13

._crit_edge69.thread:                             ; preds = %.preheader25, %._crit_edge69
  %55 = call i8* @malloc(i64 160) #7, !dbg !348
  %56 = icmp eq i8* %55, null, !dbg !351
  br i1 %56, label %.thread13, label %57, !dbg !353

; <label>:57                                      ; preds = %._crit_edge69.thread
  %58 = mul nsw i32 %30, 6, !dbg !354
  %59 = shl i32 %dim, 1, !dbg !356
  %60 = add nsw i32 %58, %59, !dbg !357
  %61 = sext i32 %60 to i64, !dbg !358
  %62 = shl nsw i64 %61, 2, !dbg !359
  %63 = call i8* @malloc(i64 %62) #7, !dbg !360
  %64 = getelementptr inbounds i8* %55, i64 16, !dbg !361
  %65 = bitcast i8* %64 to i8**, !dbg !362
  store i8* %63, i8** %65, align 8, !dbg !362, !tbaa !363
  %.not = icmp eq i8* %63, null, !dbg !365
  %66 = bitcast i8* %63 to i32*
  br i1 %.not, label %67, label %69, !dbg !365

; <label>:67                                      ; preds = %57
  call void @free(i8* %55) #8, !dbg !366
  br label %.thread13, !dbg !371

.thread13:                                        ; preds = %._crit_edge69.thread, %._crit_edge69, %27, %23, %18, %12, %14, %8, %4, %67
  %error_msg.115 = phi i8* [ getelementptr inbounds ([46 x i8]* @.str10, i64 0, i64 0), %._crit_edge69.thread ], [ getelementptr inbounds ([46 x i8]* @.str10, i64 0, i64 0), %67 ], [ %., %._crit_edge69 ], [ getelementptr inbounds ([55 x i8]* @.str8, i64 0, i64 0), %27 ], [ getelementptr inbounds ([33 x i8]* @.str7, i64 0, i64 0), %23 ], [ getelementptr inbounds ([68 x i8]* @.str6, i64 0, i64 0), %18 ], [ getelementptr inbounds ([34 x i8]* @.str5, i64 0, i64 0), %12 ], [ getelementptr inbounds ([34 x i8]* @.str5, i64 0, i64 0), %14 ], [ getelementptr inbounds ([69 x i8]* @.str4, i64 0, i64 0), %8 ], [ getelementptr inbounds ([29 x i8]* @.str3, i64 0, i64 0), %4 ]
  %retval.314 = phi i32 [ -6, %._crit_edge69.thread ], [ -6, %67 ], [ -5, %._crit_edge69 ], [ -4, %27 ], [ -4, %23 ], [ -3, %18 ], [ -2, %12 ], [ -2, %14 ], [ -2, %8 ], [ -1, %4 ]
  %68 = call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 174, i8* getelementptr inbounds ([78 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8]* @.str11, i64 0, i64 0), i8* %error_msg.115) #7, !dbg !372
  br label %.loopexit, !dbg !375

; <label>:69                                      ; preds = %57
  %70 = ptrtoint i8* %63 to i64
  %71 = getelementptr inbounds i8* %55, i64 8, !dbg !376
  %72 = bitcast i8* %71 to i32*, !dbg !376
  store i32 %dim, i32* %72, align 4, !dbg !377, !tbaa !378
  %73 = getelementptr inbounds i8* %55, i64 128, !dbg !379
  %74 = bitcast %struct.cGroup* %vinfo to i8*, !dbg !380
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 32, i32 4, i1 false), !dbg !380, !tbaa.struct !381
  %75 = getelementptr inbounds i8* %55, i64 4, !dbg !382
  %76 = bitcast i8* %75 to i32*, !dbg !382
  store i32 %target_proc, i32* %76, align 4, !dbg !383, !tbaa !384
  %77 = getelementptr inbounds i8* %55, i64 104, !dbg !385
  %78 = bitcast i8* %77 to void (i8*, i8*, i32, i32, i32)**, !dbg !385
  store void (i8*, i8*, i32, i32, i32)* %conversion_fn, void (i8*, i8*, i32, i32, i32)** %78, align 8, !dbg !386, !tbaa !387
  %79 = getelementptr inbounds i8* %55, i64 24, !dbg !388
  %80 = bitcast i8* %79 to i32**, !dbg !388
  %81 = bitcast i8* %79 to i64*, !dbg !389
  store i64 %70, i64* %81, align 8, !dbg !389, !tbaa !390
  %82 = sext i32 %30 to i64, !dbg !391
  %83 = getelementptr inbounds i32* %66, i64 %82, !dbg !391
  %84 = getelementptr inbounds i8* %55, i64 32, !dbg !392
  %85 = bitcast i8* %84 to i32**, !dbg !392
  store i32* %83, i32** %85, align 8, !dbg !393, !tbaa !394
  %86 = shl nsw i32 %30, 1, !dbg !395
  %87 = sext i32 %86 to i64, !dbg !396
  %88 = getelementptr inbounds i32* %66, i64 %87, !dbg !396
  %89 = getelementptr inbounds i8* %55, i64 40, !dbg !397
  %90 = bitcast i8* %89 to i32**, !dbg !397
  store i32* %88, i32** %90, align 8, !dbg !398, !tbaa !399
  %91 = mul nsw i32 %30, 3, !dbg !400
  %92 = sext i32 %91 to i64, !dbg !401
  %93 = getelementptr inbounds i32* %66, i64 %92, !dbg !401
  %94 = getelementptr inbounds i8* %55, i64 48, !dbg !402
  %95 = bitcast i8* %94 to i32**, !dbg !402
  store i32* %93, i32** %95, align 8, !dbg !403, !tbaa !404
  %96 = shl nsw i32 %30, 2, !dbg !405
  %97 = sext i32 %96 to i64, !dbg !406
  %98 = getelementptr inbounds i32* %66, i64 %97, !dbg !406
  %99 = getelementptr inbounds i8* %55, i64 56, !dbg !407
  %100 = bitcast i8* %99 to i32**, !dbg !407
  store i32* %98, i32** %100, align 8, !dbg !408, !tbaa !409
  %101 = mul nsw i32 %30, 5, !dbg !410
  %102 = sext i32 %101 to i64, !dbg !411
  %103 = getelementptr inbounds i32* %66, i64 %102, !dbg !411
  %104 = getelementptr inbounds i8* %55, i64 64, !dbg !412
  %105 = bitcast i8* %104 to i32**, !dbg !412
  store i32* %103, i32** %105, align 8, !dbg !413, !tbaa !414
  %106 = sext i32 %58 to i64, !dbg !415
  %107 = getelementptr inbounds i32* %66, i64 %106, !dbg !415
  %108 = getelementptr inbounds i8* %55, i64 80, !dbg !416
  %109 = bitcast i8* %108 to i32**, !dbg !416
  store i32* %107, i32** %109, align 8, !dbg !417, !tbaa !418
  %110 = sext i32 %dim to i64, !dbg !419
  %.sum = add nsw i64 %106, %110, !dbg !419
  %111 = getelementptr inbounds i32* %66, i64 %.sum, !dbg !419
  %112 = getelementptr inbounds i8* %55, i64 72, !dbg !420
  %113 = bitcast i8* %112 to i32**, !dbg !420
  store i32* %111, i32** %113, align 8, !dbg !421, !tbaa !422
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !217, metadata !261), !dbg !423
  %114 = icmp eq i32 %dim, 0, !dbg !424
  %.pre102 = getelementptr inbounds i8* %55, i64 96, !dbg !427
  %.pre104 = bitcast i8* %.pre102 to i32*, !dbg !427
  br i1 %114, label %._crit_edge65.thread, label %.preheader24.lr.ph, !dbg !429

.preheader24.lr.ph:                               ; preds = %69
  %115 = add i32 %30, -1, !dbg !429
  br label %.preheader24, !dbg !429

.preheader24:                                     ; preds = %.preheader24.lr.ph, %132
  %hdim.064 = phi i32 [ 0, %.preheader24.lr.ph ], [ %133, %132 ]
  br i1 %31, label %._crit_edge63.thread, label %.lr.ph62, !dbg !430

.lr.ph62:                                         ; preds = %.preheader24, %.lr.ph62
  %indvars.iv77 = phi i64 [ %indvars.iv.next78, %.lr.ph62 ], [ 0, %.preheader24 ]
  %num_dirs.060 = phi i32 [ %num_dirs.0., %.lr.ph62 ], [ 0, %.preheader24 ]
  %116 = mul i32 %30, %hdim.064, !dbg !433
  %117 = trunc i64 %indvars.iv77 to i32, !dbg !437
  %118 = add i32 %116, %117, !dbg !437
  %119 = zext i32 %118 to i64, !dbg !438
  %120 = getelementptr inbounds i32* %direction, i64 %119, !dbg !438
  %121 = load i32* %120, align 4, !dbg !438, !tbaa !331
  %not.16 = icmp ne i32 %121, 0, !dbg !439
  %122 = zext i1 %not.16 to i32, !dbg !439
  %num_dirs.0. = add i32 %122, %num_dirs.060, !dbg !439
  %indvars.iv.next78 = add nuw nsw i64 %indvars.iv77, 1, !dbg !430
  %exitcond79 = icmp eq i32 %117, %115, !dbg !430
  br i1 %exitcond79, label %._crit_edge63, label %.lr.ph62, !dbg !430

._crit_edge63:                                    ; preds = %.lr.ph62
  switch i32 %num_dirs.0., label %126 [
    i32 0, label %._crit_edge63.thread
    i32 3, label %124
  ], !dbg !440

._crit_edge63.thread:                             ; preds = %.preheader24, %._crit_edge63
  call void @free(i8* %63) #8, !dbg !441
  call void @free(i8* %55) #8, !dbg !444
  %123 = call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 208, i8* getelementptr inbounds ([78 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8]* @.str12, i64 0, i64 0), i32 %hdim.064) #7, !dbg !445
  br label %.loopexit, !dbg !446

; <label>:124                                     ; preds = %._crit_edge63
  %125 = icmp eq i32 %dim, 1, !dbg !447
  br label %126

; <label>:126                                     ; preds = %._crit_edge63, %124
  %127 = phi i1 [ %125, %124 ], [ false, %._crit_edge63 ]
  %128 = zext i1 %127 to i32, !dbg !448
  store i32 %128, i32* %.pre104, align 4, !dbg !449, !tbaa !450
  %129 = icmp eq i32 %num_dirs.0., 1, !dbg !451
  %brmerge = or i1 %129, %127, !dbg !453
  br i1 %brmerge, label %132, label %130, !dbg !453

; <label>:130                                     ; preds = %126
  call void @free(i8* %63) #8, !dbg !454
  call void @free(i8* %55) #8, !dbg !456
  %131 = call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 218, i8* getelementptr inbounds ([78 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8]* @.str13, i64 0, i64 0), i32 %hdim.064) #7, !dbg !457
  br label %.loopexit, !dbg !458

; <label>:132                                     ; preds = %126
  %133 = add nuw i32 %hdim.064, 1, !dbg !459
  call void @llvm.dbg.value(metadata i32 %133, i64 0, metadata !217, metadata !261), !dbg !423
  %134 = icmp ult i32 %133, %dim, !dbg !424
  br i1 %134, label %.preheader24, label %._crit_edge65, !dbg !429

._crit_edge65:                                    ; preds = %132
  br i1 %127, label %._crit_edge65.thread, label %.preheader23, !dbg !460

.preheader23:                                     ; preds = %._crit_edge65, %._crit_edge65.thread
  br i1 %31, label %._crit_edge59, label %.lr.ph58, !dbg !461

._crit_edge65.thread:                             ; preds = %._crit_edge65, %69
  %135 = getelementptr inbounds %struct.cGroup* %vinfo, i64 0, i32 3, !dbg !463
  %136 = load i32* %135, align 4, !dbg !463, !tbaa !464
  %137 = icmp eq i32 %136, 0, !dbg !465
  br i1 %137, label %.preheader23, label %138, !dbg !466

; <label>:138                                     ; preds = %._crit_edge65.thread
  call void @free(i8* %63) #8, !dbg !467
  call void @free(i8* %55) #8, !dbg !469
  %139 = call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 229, i8* getelementptr inbounds ([78 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([102 x i8]* @.str14, i64 0, i64 0)) #7, !dbg !470
  br label %.loopexit, !dbg !471

._crit_edge55.thread:                             ; preds = %.lr.ph58, %._crit_edge55
  %140 = add nuw i32 %vdim.256, 1, !dbg !472
  %141 = load i32* %15, align 4, !dbg !474, !tbaa !299
  %142 = icmp ult i32 %140, %141, !dbg !475
  br i1 %142, label %.lr.ph58, label %._crit_edge59, !dbg !461

.lr.ph58:                                         ; preds = %.preheader23, %._crit_edge55.thread
  %vdim.256 = phi i32 [ %140, %._crit_edge55.thread ], [ 0, %.preheader23 ]
  %143 = zext i32 %vdim.256 to i64, !dbg !476
  %.sum110 = add nsw i64 %97, %143, !dbg !476
  %144 = getelementptr inbounds i32* %66, i64 %.sum110, !dbg !476
  store i32 0, i32* %144, align 4, !dbg !478, !tbaa !331
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !217, metadata !261), !dbg !423
  %145 = load i32* %72, align 4, !dbg !479, !tbaa !378
  %146 = icmp eq i32 %145, 0, !dbg !482
  br i1 %146, label %._crit_edge55.thread, label %.lr.ph54, !dbg !483

.lr.ph54:                                         ; preds = %.lr.ph58, %158
  %147 = phi i32 [ %.pre82, %158 ], [ 0, %.lr.ph58 ]
  %148 = phi i32 [ %159, %158 ], [ %145, %.lr.ph58 ]
  %hdim.152 = phi i32 [ %160, %158 ], [ 0, %.lr.ph58 ]
  %149 = load i32* %15, align 4, !dbg !484, !tbaa !299
  %150 = mul i32 %149, %hdim.152, !dbg !487
  %151 = add i32 %150, %vdim.256, !dbg !488
  %152 = zext i32 %151 to i64, !dbg !489
  %153 = getelementptr inbounds i32* %direction, i64 %152, !dbg !489
  %154 = load i32* %153, align 4, !dbg !489, !tbaa !331
  %155 = icmp eq i32 %154, 0, !dbg !489
  br i1 %155, label %158, label %156, !dbg !490

; <label>:156                                     ; preds = %.lr.ph54
  %157 = add nsw i32 %147, 1, !dbg !491
  store i32 %157, i32* %144, align 4, !dbg !491, !tbaa !331
  %.pre = load i32* %72, align 4, !dbg !479, !tbaa !378
  br label %158, !dbg !493

; <label>:158                                     ; preds = %.lr.ph54, %156
  %.pre82 = phi i32 [ %147, %.lr.ph54 ], [ %157, %156 ]
  %159 = phi i32 [ %148, %.lr.ph54 ], [ %.pre, %156 ], !dbg !494
  %160 = add nuw i32 %hdim.152, 1, !dbg !494
  call void @llvm.dbg.value(metadata i32 %160, i64 0, metadata !217, metadata !261), !dbg !423
  %161 = icmp ult i32 %160, %159, !dbg !482
  br i1 %161, label %.lr.ph54, label %._crit_edge55, !dbg !483

._crit_edge55:                                    ; preds = %158
  %162 = icmp sgt i32 %.pre82, 1, !dbg !495
  br i1 %162, label %163, label %._crit_edge55.thread, !dbg !497

; <label>:163                                     ; preds = %._crit_edge55
  call void @free(i8* %63) #8, !dbg !498
  call void @free(i8* %55) #8, !dbg !500
  %164 = call i32 @CCTK_Warn(i32 1, i32 249, i8* getelementptr inbounds ([78 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8]* @.str15, i64 0, i64 0)) #7, !dbg !501
  br label %.loopexit, !dbg !502

._crit_edge59:                                    ; preds = %._crit_edge55.thread, %.preheader23
  %165 = sext i32 %vindex to i64, !dbg !503
  %166 = getelementptr inbounds %struct.PGH* %28, i64 0, i32 7, !dbg !504
  %167 = load i8**** %166, align 8, !dbg !504, !tbaa !505
  %168 = getelementptr inbounds i8*** %167, i64 %165, !dbg !503
  %169 = bitcast i8*** %168 to %struct.PGA***, !dbg !503
  %170 = load %struct.PGA*** %169, align 8, !dbg !503, !tbaa !310
  %171 = load %struct.PGA** %170, align 8, !dbg !503, !tbaa !310
  call void @llvm.dbg.value(metadata %struct.PGA* %171, i64 0, metadata !226, metadata !261), !dbg !508
  %172 = load i32 (%struct.cGH*)** @CCTK_MyProc, align 8, !dbg !509, !tbaa !310
  %173 = call i32 %172(%struct.cGH* %GH) #7, !dbg !509
  call void @llvm.dbg.value(metadata i32 %173, i64 0, metadata !221, metadata !261), !dbg !510
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !217, metadata !261), !dbg !423
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !216, metadata !261), !dbg !511
  %174 = load i32* %15, align 4, !dbg !512, !tbaa !299
  %175 = icmp eq i32 %174, 0, !dbg !515
  br i1 %175, label %.preheader22._crit_edge, label %.lr.ph51, !dbg !516

.lr.ph51:                                         ; preds = %._crit_edge59
  %176 = load i32** %100, align 8, !dbg !517, !tbaa !409
  %177 = getelementptr inbounds %struct.PGA* %171, i64 0, i32 10, !dbg !520
  %178 = zext i32 %174 to i64, !dbg !516
  br label %186, !dbg !516

.preheader22:                                     ; preds = %229
  br i1 %175, label %.preheader22._crit_edge, label %.lr.ph45, !dbg !522

.preheader22._crit_edge:                          ; preds = %._crit_edge59, %.preheader22
  %.pre106 = getelementptr inbounds %struct.PGA* %171, i64 0, i32 10, !dbg !524
  br label %._crit_edge46, !dbg !522

.lr.ph45:                                         ; preds = %.preheader22
  %179 = load i32** %105, align 8, !dbg !526, !tbaa !414
  %180 = load i32** %100, align 8, !dbg !529, !tbaa !409
  %181 = getelementptr inbounds i8* %55, i64 88, !dbg !531
  %182 = bitcast i8* %181 to i32*, !dbg !531
  %183 = getelementptr inbounds %struct.PGA* %171, i64 0, i32 11, !dbg !534
  %184 = getelementptr inbounds %struct.PGA* %171, i64 0, i32 10, !dbg !536
  %185 = icmp eq i32* %downsample, null, !dbg !538
  br label %231, !dbg !522

; <label>:186                                     ; preds = %.lr.ph51, %229
  %indvars.iv = phi i64 [ 0, %.lr.ph51 ], [ %indvars.iv.next, %229 ]
  %hdim.247 = phi i32 [ 0, %.lr.ph51 ], [ %hdim.3, %229 ]
  %187 = getelementptr inbounds i32* %176, i64 %indvars.iv, !dbg !541
  %188 = load i32* %187, align 4, !dbg !541, !tbaa !331
  %189 = icmp eq i32 %188, 0, !dbg !541
  br i1 %189, label %211, label %190, !dbg !542

; <label>:190                                     ; preds = %186
  %191 = load i32* %72, align 4, !dbg !543, !tbaa !378
  %192 = icmp ult i32 %hdim.247, %191, !dbg !544
  br i1 %192, label %193, label %211, !dbg !545

; <label>:193                                     ; preds = %190
  %194 = getelementptr inbounds i32* %origin, i64 %indvars.iv, !dbg !546
  %195 = load i32* %194, align 4, !dbg !546, !tbaa !331
  %196 = zext i32 %hdim.247 to i64, !dbg !549
  %197 = getelementptr inbounds i32* %extent, i64 %196, !dbg !549
  %198 = load i32* %197, align 4, !dbg !549, !tbaa !331
  %199 = add nsw i32 %198, %195, !dbg !550
  %200 = load %struct.PGExtras** %177, align 8, !dbg !551, !tbaa !552
  %201 = getelementptr inbounds %struct.PGExtras* %200, i64 0, i32 1, !dbg !554
  %202 = load i32** %201, align 8, !dbg !554, !tbaa !555
  %203 = getelementptr inbounds i32* %202, i64 %indvars.iv, !dbg !557
  %204 = load i32* %203, align 4, !dbg !557, !tbaa !331
  %205 = icmp sgt i32 %199, %204, !dbg !558
  br i1 %205, label %206, label %209, !dbg !559

; <label>:206                                     ; preds = %193
  %207 = load i8** %65, align 8, !dbg !560, !tbaa !363
  call void @free(i8* %207) #8, !dbg !562
  call void @free(i8* %55) #8, !dbg !563
  %208 = call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 266, i8* getelementptr inbounds ([78 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([79 x i8]* @.str16, i64 0, i64 0), i32 %hdim.247) #7, !dbg !564
  br label %.loopexit, !dbg !565

; <label>:209                                     ; preds = %193
  %210 = add i32 %hdim.247, 1, !dbg !566
  call void @llvm.dbg.value(metadata i32 %210, i64 0, metadata !217, metadata !261), !dbg !423
  br label %229, !dbg !567

; <label>:211                                     ; preds = %186, %190
  %212 = load i32* %.pre104, align 4, !dbg !568, !tbaa !450
  %213 = icmp eq i32 %212, 0, !dbg !569
  br i1 %213, label %229, label %214, !dbg !570

; <label>:214                                     ; preds = %211
  %215 = getelementptr inbounds i32* %origin, i64 %indvars.iv, !dbg !571
  %216 = load i32* %215, align 4, !dbg !571, !tbaa !331
  %217 = load i32* %extent, align 4, !dbg !572, !tbaa !331
  %218 = add nsw i32 %217, %216, !dbg !573
  %219 = load %struct.PGExtras** %177, align 8, !dbg !520, !tbaa !552
  %220 = getelementptr inbounds %struct.PGExtras* %219, i64 0, i32 1, !dbg !574
  %221 = load i32** %220, align 8, !dbg !574, !tbaa !555
  %222 = getelementptr inbounds i32* %221, i64 %indvars.iv, !dbg !575
  %223 = load i32* %222, align 4, !dbg !575, !tbaa !331
  %224 = icmp sgt i32 %218, %223, !dbg !576
  br i1 %224, label %225, label %229, !dbg !577

; <label>:225                                     ; preds = %214
  %226 = trunc i64 %indvars.iv to i32, !dbg !578
  %227 = load i8** %65, align 8, !dbg !578, !tbaa !363
  call void @free(i8* %227) #8, !dbg !580
  call void @free(i8* %55) #8, !dbg !581
  %228 = call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 277, i8* getelementptr inbounds ([78 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([79 x i8]* @.str16, i64 0, i64 0), i32 %226) #7, !dbg !582
  br label %.loopexit, !dbg !583

; <label>:229                                     ; preds = %211, %209, %214
  %hdim.3 = phi i32 [ %210, %209 ], [ %hdim.247, %214 ], [ %hdim.247, %211 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !516
  %230 = icmp ult i64 %indvars.iv.next, %178, !dbg !515
  br i1 %230, label %186, label %.preheader22, !dbg !516

; <label>:231                                     ; preds = %.lr.ph45, %308
  %vdim.444 = phi i32 [ 0, %.lr.ph45 ], [ %309, %308 ]
  %hdim.443 = phi i32 [ 0, %.lr.ph45 ], [ %hdim.5, %308 ]
  %232 = zext i32 %vdim.444 to i64, !dbg !584
  %233 = getelementptr inbounds i32* %179, i64 %232, !dbg !584
  store i32 1, i32* %233, align 4, !dbg !585, !tbaa !331
  %234 = getelementptr inbounds i32* %180, i64 %232, !dbg !586
  %235 = load i32* %234, align 4, !dbg !586, !tbaa !331
  %236 = icmp eq i32 %235, 0, !dbg !586
  br i1 %236, label %274, label %237, !dbg !587

; <label>:237                                     ; preds = %231
  %238 = load i32* %72, align 4, !dbg !588, !tbaa !378
  %239 = icmp ult i32 %hdim.443, %238, !dbg !589
  br i1 %239, label %240, label %274, !dbg !590

; <label>:240                                     ; preds = %237
  %.pre85 = zext i32 %hdim.443 to i64, !dbg !591
  br i1 %185, label %._crit_edge83, label %241, !dbg !592

; <label>:241                                     ; preds = %240
  %242 = getelementptr inbounds i32* %downsample, i64 %.pre85, !dbg !593
  %243 = load i32* %242, align 4, !dbg !593, !tbaa !331
  store i32 %243, i32* %233, align 4, !dbg !595, !tbaa !331
  br label %._crit_edge83, !dbg !596

._crit_edge83:                                    ; preds = %240, %241
  %244 = phi i32 [ %243, %241 ], [ 1, %240 ]
  %245 = getelementptr inbounds i32* %extent, i64 %.pre85, !dbg !591
  %246 = load i32* %245, align 4, !dbg !591, !tbaa !331
  %247 = sdiv i32 %246, %244, !dbg !597
  %248 = load i32** %113, align 8, !dbg !598, !tbaa !422
  %249 = getelementptr inbounds i32* %248, i64 %.pre85, !dbg !599
  store i32 %247, i32* %249, align 4, !dbg !600, !tbaa !331
  %250 = load i32* %245, align 4, !dbg !601, !tbaa !331
  %251 = load i32* %233, align 4, !dbg !603, !tbaa !331
  %252 = srem i32 %250, %251, !dbg !604
  %253 = icmp eq i32 %252, 0, !dbg !604
  br i1 %253, label %256, label %254, !dbg !605

; <label>:254                                     ; preds = %._crit_edge83
  %255 = add nsw i32 %247, 1, !dbg !606
  store i32 %255, i32* %249, align 4, !dbg !606, !tbaa !331
  br label %256, !dbg !608

; <label>:256                                     ; preds = %._crit_edge83, %254
  %257 = phi i32 [ %247, %._crit_edge83 ], [ %255, %254 ]
  %258 = load %struct.PConnectivity** %183, align 8, !dbg !609, !tbaa !611
  %259 = getelementptr inbounds %struct.PConnectivity* %258, i64 0, i32 3, !dbg !612
  %260 = load i32** %259, align 8, !dbg !612, !tbaa !613
  %261 = getelementptr inbounds i32* %260, i64 %232, !dbg !615
  %262 = load i32* %261, align 4, !dbg !615, !tbaa !331
  %263 = icmp eq i32 %262, 0, !dbg !615
  br i1 %263, label %272, label %264, !dbg !616

; <label>:264                                     ; preds = %256
  %265 = load %struct.PGExtras** %184, align 8, !dbg !617, !tbaa !552
  %266 = getelementptr inbounds %struct.PGExtras* %265, i64 0, i32 12, !dbg !619
  %267 = load i32** %266, align 8, !dbg !619, !tbaa !620
  %268 = getelementptr inbounds i32* %267, i64 %232, !dbg !621
  %269 = load i32* %268, align 4, !dbg !621, !tbaa !331
  %270 = shl nsw i32 %269, 1, !dbg !622
  %271 = sub nsw i32 %257, %270, !dbg !623
  store i32 %271, i32* %249, align 4, !dbg !623, !tbaa !331
  br label %272, !dbg !624

; <label>:272                                     ; preds = %256, %264
  %273 = add i32 %hdim.443, 1, !dbg !625
  call void @llvm.dbg.value(metadata i32 %273, i64 0, metadata !217, metadata !261), !dbg !423
  br label %308, !dbg !626

; <label>:274                                     ; preds = %231, %237
  %275 = load i32* %.pre104, align 4, !dbg !627, !tbaa !450
  %276 = icmp eq i32 %275, 0, !dbg !628
  br i1 %276, label %308, label %277, !dbg !629

; <label>:277                                     ; preds = %274
  %278 = load i32* %extent, align 4, !dbg !630, !tbaa !331
  %279 = load i32* %179, align 4, !dbg !631, !tbaa !331
  %280 = sdiv i32 %278, %279, !dbg !632
  store i32 %280, i32* %182, align 4, !dbg !633, !tbaa !634
  %281 = load i32* %179, align 4, !dbg !635, !tbaa !331
  %282 = srem i32 %278, %281, !dbg !637
  %283 = icmp eq i32 %282, 0, !dbg !637
  br i1 %283, label %286, label %284, !dbg !638

; <label>:284                                     ; preds = %277
  %285 = add i32 %280, 1, !dbg !639
  store i32 %285, i32* %182, align 4, !dbg !639, !tbaa !634
  br label %286, !dbg !641

; <label>:286                                     ; preds = %277, %284
  %287 = phi i32 [ %280, %277 ], [ %285, %284 ]
  %288 = load %struct.PConnectivity** %183, align 8, !dbg !534, !tbaa !611
  %289 = getelementptr inbounds %struct.PConnectivity* %288, i64 0, i32 3, !dbg !642
  %290 = load i32** %289, align 8, !dbg !642, !tbaa !613
  %291 = getelementptr inbounds i32* %290, i64 %232, !dbg !643
  %292 = load i32* %291, align 4, !dbg !643, !tbaa !331
  %293 = icmp eq i32 %292, 0, !dbg !643
  br i1 %293, label %302, label %294, !dbg !644

; <label>:294                                     ; preds = %286
  %295 = load %struct.PGExtras** %184, align 8, !dbg !536, !tbaa !552
  %296 = getelementptr inbounds %struct.PGExtras* %295, i64 0, i32 12, !dbg !645
  %297 = load i32** %296, align 8, !dbg !645, !tbaa !620
  %298 = getelementptr inbounds i32* %297, i64 %232, !dbg !646
  %299 = load i32* %298, align 4, !dbg !646, !tbaa !331
  %300 = shl nsw i32 %299, 1, !dbg !647
  %301 = sub i32 %287, %300, !dbg !648
  store i32 %301, i32* %182, align 4, !dbg !648, !tbaa !634
  br label %302, !dbg !649

; <label>:302                                     ; preds = %286, %294
  %303 = phi i32 [ %287, %286 ], [ %301, %294 ]
  %304 = load i32** %113, align 8, !dbg !650, !tbaa !422
  %305 = load i32* %304, align 4, !dbg !652, !tbaa !331
  %306 = icmp ugt i32 %305, %303, !dbg !653
  br i1 %306, label %307, label %308, !dbg !654

; <label>:307                                     ; preds = %302
  store i32 %303, i32* %304, align 4, !dbg !655, !tbaa !331
  br label %308, !dbg !657

; <label>:308                                     ; preds = %274, %272, %302, %307
  %hdim.5 = phi i32 [ %273, %272 ], [ %hdim.443, %307 ], [ %hdim.443, %302 ], [ %hdim.443, %274 ]
  %309 = add nuw i32 %vdim.444, 1, !dbg !658
  call void @llvm.dbg.value(metadata i32 %309, i64 0, metadata !216, metadata !261), !dbg !511
  %310 = load i32* %15, align 4, !dbg !659, !tbaa !299
  %311 = icmp ult i32 %309, %310, !dbg !660
  br i1 %311, label %231, label %._crit_edge46, !dbg !522

._crit_edge46:                                    ; preds = %308, %.preheader22._crit_edge
  %.pre-phi107 = phi %struct.PGExtras** [ %.pre106, %.preheader22._crit_edge ], [ %184, %308 ], !dbg !524
  %312 = phi i32 [ 0, %.preheader22._crit_edge ], [ %310, %308 ]
  tail call void @llvm.dbg.value(metadata %struct.PGA* %171, i64 0, metadata !246, metadata !261), !dbg !661
  tail call void @llvm.dbg.value(metadata i32* %origin, i64 0, metadata !247, metadata !261), !dbg !662
  tail call void @llvm.dbg.value(metadata i32* %extent, i64 0, metadata !248, metadata !261), !dbg !663
  %313 = load i32* %72, align 4, !dbg !664, !tbaa !378
  %314 = load %struct.PGExtras** %.pre-phi107, align 8, !dbg !524, !tbaa !552
  %315 = getelementptr inbounds %struct.PGExtras* %314, i64 0, i32 0, !dbg !665
  %316 = load i32* %315, align 4, !dbg !665, !tbaa !666
  %317 = icmp eq i32 %313, %316, !dbg !667
  %318 = zext i1 %317 to i32, !dbg !667
  tail call void @llvm.dbg.value(metadata i32 %318, i64 0, metadata !251, metadata !261), !dbg !668
  %319 = icmp sgt i32 %313, 0, !dbg !669
  %or.cond.i = and i1 %319, %317, !dbg !674
  br i1 %or.cond.i, label %.lr.ph.i, label %IsFullHyperslab.exit, !dbg !674

.lr.ph.i:                                         ; preds = %._crit_edge46
  %320 = load i32** %105, align 8, !dbg !675, !tbaa !414
  %321 = getelementptr inbounds %struct.PGA* %171, i64 0, i32 11, !dbg !677
  %322 = load %struct.PConnectivity** %321, align 8, !dbg !677, !tbaa !611
  %323 = getelementptr inbounds %struct.PConnectivity* %322, i64 0, i32 3, !dbg !678
  %324 = load i32** %323, align 8, !dbg !678, !tbaa !613
  %325 = sext i32 %313 to i64
  %326 = add nsw i64 %325, -1, !dbg !679
  br label %327, !dbg !679

; <label>:327                                     ; preds = %327, %.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %.lr.ph.i ], [ %indvars.iv.next.i, %327 ], !dbg !680
  %retval.02.i = phi i32 [ %318, %.lr.ph.i ], [ %347, %327 ], !dbg !680
  %328 = getelementptr inbounds i32* %origin, i64 %indvars.iv.i, !dbg !681
  %329 = load i32* %328, align 4, !dbg !681, !tbaa !331
  %330 = icmp eq i32 %329, 0, !dbg !682
  %331 = zext i1 %330 to i32, !dbg !682
  %332 = and i32 %331, %retval.02.i, !dbg !683
  tail call void @llvm.dbg.value(metadata i32 %332, i64 0, metadata !251, metadata !261), !dbg !668
  %333 = getelementptr inbounds i32* %extent, i64 %indvars.iv.i, !dbg !684
  %334 = load i32* %333, align 4, !dbg !684, !tbaa !331
  %335 = icmp slt i32 %334, 1, !dbg !685
  %336 = zext i1 %335 to i32, !dbg !685
  %337 = and i32 %332, %336, !dbg !686
  tail call void @llvm.dbg.value(metadata i32 %337, i64 0, metadata !251, metadata !261), !dbg !668
  %338 = getelementptr inbounds i32* %320, i64 %indvars.iv.i, !dbg !687
  %339 = load i32* %338, align 4, !dbg !687, !tbaa !331
  %340 = icmp slt i32 %339, 2, !dbg !688
  %341 = zext i1 %340 to i32, !dbg !688
  %342 = and i32 %337, %341, !dbg !689
  tail call void @llvm.dbg.value(metadata i32 %342, i64 0, metadata !251, metadata !261), !dbg !668
  %343 = getelementptr inbounds i32* %324, i64 %indvars.iv.i, !dbg !690
  %344 = load i32* %343, align 4, !dbg !690, !tbaa !331
  %345 = icmp eq i32 %344, 0, !dbg !691
  %346 = zext i1 %345 to i32, !dbg !691
  %347 = and i32 %342, %346, !dbg !692
  tail call void @llvm.dbg.value(metadata i32 %347, i64 0, metadata !251, metadata !261), !dbg !668
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !679
  %exitcond = icmp eq i64 %indvars.iv.i, %326, !dbg !679
  br i1 %exitcond, label %IsFullHyperslab.exit, label %327, !dbg !679

IsFullHyperslab.exit:                             ; preds = %327, %._crit_edge46
  %retval.1.i = phi i32 [ %318, %._crit_edge46 ], [ %347, %327 ], !dbg !680
  %348 = getelementptr inbounds i8* %55, i64 92, !dbg !693
  %349 = bitcast i8* %348 to i32*, !dbg !693
  store i32 %retval.1.i, i32* %349, align 4, !dbg !694, !tbaa !695
  %350 = icmp eq i32 %retval.1.i, 0, !dbg !696
  br i1 %350, label %374, label %351, !dbg !698

; <label>:351                                     ; preds = %IsFullHyperslab.exit
  %352 = bitcast i8* %79 to i8**, !dbg !699
  %353 = load i8** %352, align 8, !dbg !699, !tbaa !390
  %354 = sext i32 %312 to i64, !dbg !699
  %355 = shl nsw i64 %354, 2, !dbg !699
  %356 = call i64 @llvm.objectsize.i64.p0i8(i8* %353, i1 false), !dbg !699
  %357 = call i8* @__memset_chk(i8* %353, i32 0, i64 %355, i64 %356) #7, !dbg !699
  %358 = bitcast i8* %84 to i8**, !dbg !701
  %359 = load i8** %358, align 8, !dbg !701, !tbaa !394
  %360 = load %struct.PGExtras** %.pre-phi107, align 8, !dbg !701, !tbaa !552
  %361 = getelementptr inbounds %struct.PGExtras* %360, i64 0, i32 6, !dbg !701
  %362 = bitcast i32** %361 to i8**, !dbg !701
  %363 = load i8** %362, align 8, !dbg !701, !tbaa !702
  %364 = load i32* %15, align 4, !dbg !701, !tbaa !299
  %365 = sext i32 %364 to i64, !dbg !701
  %366 = shl nsw i64 %365, 2, !dbg !701
  %367 = call i64 @llvm.objectsize.i64.p0i8(i8* %359, i1 false), !dbg !701
  %368 = call i8* @__memcpy_chk(i8* %359, i8* %363, i64 %366, i64 %367) #7, !dbg !701
  %369 = load %struct.PGExtras** %.pre-phi107, align 8, !dbg !703, !tbaa !552
  %370 = getelementptr inbounds %struct.PGExtras* %369, i64 0, i32 7, !dbg !704
  %371 = load i32* %370, align 4, !dbg !704, !tbaa !705
  %372 = getelementptr inbounds i8* %55, i64 88, !dbg !706
  %373 = bitcast i8* %372 to i32*, !dbg !706
  store i32 %371, i32* %373, align 4, !dbg !707, !tbaa !634
  br label %.loopexit17, !dbg !708

; <label>:374                                     ; preds = %IsFullHyperslab.exit
  %375 = load i32* %.pre104, align 4, !dbg !709, !tbaa !450
  %376 = icmp eq i32 %375, 0, !dbg !711
  %377 = icmp eq i32 %312, 0, !dbg !712
  br i1 %376, label %.preheader19, label %.preheader20, !dbg !716

.preheader20:                                     ; preds = %374
  br i1 %377, label %.loopexit17, label %.lr.ph42, !dbg !717

.lr.ph42:                                         ; preds = %.preheader20
  %378 = load i32** %105, align 8, !dbg !720, !tbaa !414
  %379 = load i32** %90, align 8, !dbg !723, !tbaa !399
  br label %382, !dbg !717

.preheader19:                                     ; preds = %374
  br i1 %377, label %._crit_edge.thread, label %.lr.ph40, !dbg !724

.lr.ph40:                                         ; preds = %.preheader19
  %380 = load i32** %100, align 8, !dbg !725, !tbaa !409
  %381 = load i32** %95, align 8, !dbg !727, !tbaa !404
  br label %395, !dbg !724

; <label>:382                                     ; preds = %.lr.ph42, %382
  %vdim.541 = phi i32 [ 0, %.lr.ph42 ], [ %389, %382 ]
  %383 = load i32* %378, align 4, !dbg !728, !tbaa !331
  %384 = zext i32 %vdim.541 to i64, !dbg !729
  %385 = getelementptr inbounds i32* %378, i64 %384, !dbg !729
  store i32 %383, i32* %385, align 4, !dbg !730, !tbaa !331
  %386 = getelementptr inbounds i32* %origin, i64 %384, !dbg !731
  %387 = load i32* %386, align 4, !dbg !731, !tbaa !331
  %388 = getelementptr inbounds i32* %379, i64 %384, !dbg !732
  store i32 %387, i32* %388, align 4, !dbg !733, !tbaa !331
  %389 = add nuw i32 %vdim.541, 1, !dbg !734
  call void @llvm.dbg.value(metadata i32 %389, i64 0, metadata !216, metadata !261), !dbg !511
  %390 = load i32* %15, align 4, !dbg !735, !tbaa !299
  %391 = icmp ult i32 %389, %390, !dbg !736
  br i1 %391, label %382, label %.loopexit17, !dbg !717

.preheader18:                                     ; preds = %407
  %392 = icmp eq i32 %412, 0, !dbg !737
  br i1 %392, label %._crit_edge.thread, label %.lr.ph37, !dbg !740

.lr.ph37:                                         ; preds = %.preheader18
  %393 = getelementptr inbounds %struct.cGroup* %vinfo, i64 0, i32 3, !dbg !741
  %394 = sext i32 %173 to i64, !dbg !743
  br label %414, !dbg !740

; <label>:395                                     ; preds = %.lr.ph40, %407
  %vdim.639 = phi i32 [ 0, %.lr.ph40 ], [ %411, %407 ]
  %hdim.638 = phi i32 [ 0, %.lr.ph40 ], [ %hdim.7, %407 ]
  %396 = zext i32 %vdim.639 to i64, !dbg !745
  %397 = getelementptr inbounds i32* %origin, i64 %396, !dbg !745
  %398 = load i32* %397, align 4, !dbg !745, !tbaa !331
  %399 = getelementptr inbounds i32* %380, i64 %396, !dbg !746
  %400 = load i32* %399, align 4, !dbg !746, !tbaa !331
  %401 = icmp eq i32 %400, 0, !dbg !746
  br i1 %401, label %407, label %402, !dbg !746

; <label>:402                                     ; preds = %395
  %403 = add i32 %hdim.638, 1, !dbg !747
  call void @llvm.dbg.value(metadata i32 %403, i64 0, metadata !217, metadata !261), !dbg !423
  %404 = zext i32 %hdim.638 to i64, !dbg !748
  %405 = getelementptr inbounds i32* %extent, i64 %404, !dbg !748
  %406 = load i32* %405, align 4, !dbg !748, !tbaa !331
  br label %407, !dbg !746

; <label>:407                                     ; preds = %395, %402
  %hdim.7 = phi i32 [ %403, %402 ], [ %hdim.638, %395 ]
  %408 = phi i32 [ %406, %402 ], [ 1, %395 ], !dbg !746
  %409 = add nsw i32 %408, %398, !dbg !749
  %410 = getelementptr inbounds i32* %381, i64 %396, !dbg !750
  store i32 %409, i32* %410, align 4, !dbg !751, !tbaa !331
  %411 = add nuw i32 %vdim.639, 1, !dbg !752
  call void @llvm.dbg.value(metadata i32 %411, i64 0, metadata !216, metadata !261), !dbg !511
  %412 = load i32* %15, align 4, !dbg !753, !tbaa !299
  %413 = icmp ult i32 %411, %412, !dbg !712
  br i1 %413, label %395, label %.preheader18, !dbg !724

; <label>:414                                     ; preds = %.lr.ph37, %456
  %vdim.736 = phi i32 [ 0, %.lr.ph37 ], [ %457, %456 ]
  %415 = load i32* %393, align 4, !dbg !741, !tbaa !464
  %416 = call i32 @CCTK_StaggerDirIndex(i32 %vdim.736, i32 %415) #7, !dbg !754
  call void @llvm.dbg.value(metadata i32 %416, i64 0, metadata !220, metadata !261), !dbg !755
  %417 = zext i32 %vdim.736 to i64, !dbg !756
  %418 = getelementptr inbounds i32* %origin, i64 %417, !dbg !756
  %419 = load i32* %418, align 4, !dbg !756, !tbaa !331
  %420 = load %struct.PGExtras** %.pre-phi107, align 8, !dbg !743, !tbaa !552
  %421 = getelementptr inbounds %struct.PGExtras* %420, i64 0, i32 3, !dbg !743
  %422 = load i32*** %421, align 8, !dbg !743, !tbaa !757
  %423 = getelementptr inbounds i32** %422, i64 %394, !dbg !743
  %424 = load i32** %423, align 8, !dbg !743, !tbaa !310
  %425 = getelementptr inbounds i32* %424, i64 %417, !dbg !743
  %426 = load i32* %425, align 4, !dbg !743, !tbaa !331
  %427 = sext i32 %416 to i64, !dbg !743
  %428 = getelementptr inbounds %struct.PGExtras* %420, i64 0, i32 13, i64 %427, i64 1, !dbg !743
  %429 = load i32** %428, align 8, !dbg !743, !tbaa !310
  %430 = getelementptr inbounds i32* %429, i64 %417, !dbg !743
  %431 = load i32* %430, align 4, !dbg !743, !tbaa !331
  %432 = add nsw i32 %431, %426, !dbg !743
  %433 = icmp slt i32 %419, %432, !dbg !758
  %434 = load i32** %90, align 8, !dbg !759, !tbaa !399
  %435 = getelementptr inbounds i32* %434, i64 %417, !dbg !761
  br i1 %433, label %436, label %455, !dbg !762

; <label>:436                                     ; preds = %414
  store i32 %419, i32* %435, align 4, !dbg !763, !tbaa !331
  %437 = load i32* %418, align 4, !dbg !764, !tbaa !331
  %438 = load i32* %425, align 4, !dbg !766, !tbaa !331
  %439 = getelementptr inbounds %struct.PGExtras* %420, i64 0, i32 13, i64 %427, i64 0, !dbg !766
  %440 = load i32** %439, align 8, !dbg !766, !tbaa !310
  %441 = getelementptr inbounds i32* %440, i64 %417, !dbg !766
  %442 = load i32* %441, align 4, !dbg !766, !tbaa !331
  %443 = add nsw i32 %442, %438, !dbg !766
  %444 = icmp sgt i32 %443, %437, !dbg !767
  br i1 %444, label %445, label %456, !dbg !768

; <label>:445                                     ; preds = %436
  %446 = sub nsw i32 %443, %437, !dbg !769
  %447 = load i32** %105, align 8, !dbg !771, !tbaa !414
  %448 = getelementptr inbounds i32* %447, i64 %417, !dbg !772
  %449 = load i32* %448, align 4, !dbg !772, !tbaa !331
  %450 = sdiv i32 %446, %449, !dbg !773
  call void @llvm.dbg.value(metadata i32 %450, i64 0, metadata !222, metadata !261), !dbg !774
  %451 = srem i32 %446, %449, !dbg !775
  %not. = icmp ne i32 %451, 0, !dbg !777
  %452 = zext i1 %not. to i32, !dbg !777
  %.6 = add nsw i32 %452, %450, !dbg !777
  %453 = mul nsw i32 %.6, %449, !dbg !778
  %454 = add nsw i32 %453, %419, !dbg !779
  store i32 %454, i32* %435, align 4, !dbg !779, !tbaa !331
  br label %456, !dbg !780

; <label>:455                                     ; preds = %414
  store i32 -1, i32* %435, align 4, !dbg !781, !tbaa !331
  br label %456

; <label>:456                                     ; preds = %455, %445, %436
  %457 = add nuw i32 %vdim.736, 1, !dbg !783
  call void @llvm.dbg.value(metadata i32 %457, i64 0, metadata !216, metadata !261), !dbg !511
  %458 = load i32* %15, align 4, !dbg !784, !tbaa !299
  %459 = icmp ult i32 %457, %458, !dbg !737
  br i1 %459, label %414, label %._crit_edge, !dbg !740

._crit_edge.thread:                               ; preds = %.preheader18, %.preheader19
  %460 = getelementptr inbounds i8* %55, i64 88, !dbg !785
  %461 = bitcast i8* %460 to i32*, !dbg !785
  store i32 1, i32* %461, align 4, !dbg !786, !tbaa !634
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !217, metadata !261), !dbg !423
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !216, metadata !261), !dbg !511
  br label %.loopexit17, !dbg !787

._crit_edge:                                      ; preds = %456
  %462 = getelementptr inbounds i8* %55, i64 88, !dbg !785
  %463 = bitcast i8* %462 to i32*, !dbg !785
  store i32 1, i32* %463, align 4, !dbg !786, !tbaa !634
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !217, metadata !261), !dbg !423
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !216, metadata !261), !dbg !511
  %464 = icmp eq i32 %458, 0, !dbg !789
  br i1 %464, label %.loopexit17, label %.lr.ph35, !dbg !787

.lr.ph35:                                         ; preds = %._crit_edge
  %465 = getelementptr inbounds %struct.cGroup* %vinfo, i64 0, i32 3, !dbg !791
  %466 = sext i32 %173 to i64, !dbg !793
  br label %467, !dbg !787

; <label>:467                                     ; preds = %.lr.ph35, %563
  %vdim.834 = phi i32 [ 0, %.lr.ph35 ], [ %564, %563 ]
  %hdim.833 = phi i32 [ 0, %.lr.ph35 ], [ %hdim.9, %563 ]
  %468 = load i32* %465, align 4, !dbg !791, !tbaa !464
  %469 = call i32 @CCTK_StaggerDirIndex(i32 %vdim.834, i32 %468) #7, !dbg !795
  call void @llvm.dbg.value(metadata i32 %469, i64 0, metadata !220, metadata !261), !dbg !755
  %470 = zext i32 %vdim.834 to i64, !dbg !796
  %471 = load i32** %90, align 8, !dbg !797, !tbaa !399
  %472 = getelementptr inbounds i32* %471, i64 %470, !dbg !796
  %473 = load i32* %472, align 4, !dbg !796, !tbaa !331
  %474 = icmp sgt i32 %473, -1, !dbg !798
  %475 = load %struct.PGExtras** %.pre-phi107, align 8, !dbg !793, !tbaa !552
  %476 = getelementptr inbounds %struct.PGExtras* %475, i64 0, i32 3, !dbg !793
  %477 = load i32*** %476, align 8, !dbg !793, !tbaa !757
  %478 = getelementptr inbounds i32** %477, i64 %466, !dbg !793
  %479 = load i32** %478, align 8, !dbg !793, !tbaa !310
  br i1 %474, label %480, label %._crit_edge95, !dbg !799

._crit_edge95:                                    ; preds = %467
  %.pre99 = sext i32 %469 to i64, !dbg !800
  br label %494, !dbg !799

; <label>:480                                     ; preds = %467
  %481 = getelementptr inbounds i32* %479, i64 %470, !dbg !793
  %482 = load i32* %481, align 4, !dbg !793, !tbaa !331
  %483 = sext i32 %469 to i64, !dbg !793
  %484 = getelementptr inbounds %struct.PGExtras* %475, i64 0, i32 13, i64 %483, i64 1, !dbg !793
  %485 = load i32** %484, align 8, !dbg !793, !tbaa !310
  %486 = getelementptr inbounds i32* %485, i64 %470, !dbg !793
  %487 = load i32* %486, align 4, !dbg !793, !tbaa !331
  %488 = add nsw i32 %487, %482, !dbg !793
  %489 = icmp slt i32 %473, %488, !dbg !802
  br i1 %489, label %490, label %494, !dbg !803

; <label>:490                                     ; preds = %480
  %491 = sub nsw i32 %473, %482, !dbg !804
  %492 = load i32** %80, align 8, !dbg !806, !tbaa !390
  %493 = getelementptr inbounds i32* %492, i64 %470, !dbg !807
  store i32 %491, i32* %493, align 4, !dbg !808, !tbaa !331
  br label %497, !dbg !809

; <label>:494                                     ; preds = %._crit_edge95, %480
  %.pre91.pre-phi = phi i64 [ %.pre99, %._crit_edge95 ], [ %483, %480 ], !dbg !800
  %495 = load i32** %80, align 8, !dbg !810, !tbaa !390
  %496 = getelementptr inbounds i32* %495, i64 %470, !dbg !812
  store i32 -1, i32* %496, align 4, !dbg !813, !tbaa !331
  br label %497

; <label>:497                                     ; preds = %494, %490
  %498 = phi i32* [ %495, %494 ], [ %492, %490 ]
  %.pre-phi92 = phi i64 [ %.pre91.pre-phi, %494 ], [ %483, %490 ], !dbg !800
  %499 = load i32** %95, align 8, !dbg !814, !tbaa !404
  %500 = getelementptr inbounds i32* %499, i64 %470, !dbg !815
  %501 = load i32* %500, align 4, !dbg !815, !tbaa !331
  %502 = getelementptr inbounds i32* %479, i64 %470, !dbg !800
  %503 = load i32* %502, align 4, !dbg !800, !tbaa !331
  %504 = getelementptr inbounds %struct.PGExtras* %475, i64 0, i32 13, i64 %.pre-phi92, i64 0, !dbg !800
  %505 = load i32** %504, align 8, !dbg !800, !tbaa !310
  %506 = getelementptr inbounds i32* %505, i64 %470, !dbg !800
  %507 = load i32* %506, align 4, !dbg !800, !tbaa !331
  %508 = add nsw i32 %507, %503, !dbg !800
  %509 = icmp sgt i32 %501, %508, !dbg !816
  br i1 %509, label %513, label %.thread, !dbg !817

.thread:                                          ; preds = %497
  %510 = load i32** %85, align 8, !dbg !818, !tbaa !394
  %511 = getelementptr inbounds i32* %510, i64 %470, !dbg !820
  store i32 -1, i32* %511, align 4, !dbg !821, !tbaa !331
  %512 = getelementptr inbounds i32* %510, i64 %470, !dbg !822
  br label %._crit_edge100, !dbg !824

; <label>:513                                     ; preds = %497
  %514 = getelementptr inbounds %struct.PGExtras* %475, i64 0, i32 13, i64 %.pre-phi92, i64 1, !dbg !825
  %515 = load i32** %514, align 8, !dbg !825, !tbaa !310
  %516 = getelementptr inbounds i32* %515, i64 %470, !dbg !825
  %517 = load i32* %516, align 4, !dbg !825, !tbaa !331
  %518 = sub nsw i32 %501, %503, !dbg !825
  %519 = icmp slt i32 %517, %518, !dbg !825
  %.7 = select i1 %519, i32 %517, i32 %518, !dbg !825
  %520 = load i32** %85, align 8, !dbg !827, !tbaa !394
  %521 = getelementptr inbounds i32* %520, i64 %470, !dbg !828
  store i32 %.7, i32* %521, align 4, !dbg !829, !tbaa !331
  %522 = getelementptr inbounds i32* %520, i64 %470, !dbg !822
  %523 = icmp slt i32 %.7, 0, !dbg !830
  br i1 %523, label %._crit_edge100, label %525, !dbg !824

._crit_edge100:                                   ; preds = %.thread, %513
  %524 = phi i32* [ %512, %.thread ], [ %522, %513 ]
  %.pre108 = getelementptr inbounds i32* %498, i64 %470, !dbg !831
  br label %529, !dbg !824

; <label>:525                                     ; preds = %513
  %526 = getelementptr inbounds i32* %498, i64 %470, !dbg !833
  %527 = load i32* %526, align 4, !dbg !833, !tbaa !331
  %528 = icmp slt i32 %527, 0, !dbg !834
  br i1 %528, label %529, label %532, !dbg !835

; <label>:529                                     ; preds = %._crit_edge100, %525
  %530 = phi i32* [ %524, %._crit_edge100 ], [ %522, %525 ]
  %.pre-phi109 = phi i32* [ %.pre108, %._crit_edge100 ], [ %526, %525 ], !dbg !831
  store i32 0, i32* %463, align 4, !dbg !836, !tbaa !634
  %531 = load i32* %.pre-phi109, align 4, !dbg !831, !tbaa !331
  store i32 %531, i32* %530, align 4, !dbg !837, !tbaa !331
  br label %532, !dbg !838

; <label>:532                                     ; preds = %529, %525
  %533 = phi i32* [ %530, %529 ], [ %522, %525 ]
  %534 = phi i32 [ %531, %529 ], [ %.7, %525 ]
  %535 = load i32** %100, align 8, !dbg !839, !tbaa !409
  %536 = getelementptr inbounds i32* %535, i64 %470, !dbg !841
  %537 = load i32* %536, align 4, !dbg !841, !tbaa !331
  %538 = icmp eq i32 %537, 0, !dbg !841
  br i1 %538, label %563, label %539, !dbg !842

; <label>:539                                     ; preds = %532
  %540 = getelementptr inbounds i32* %498, i64 %470, !dbg !843
  %541 = load i32* %540, align 4, !dbg !843, !tbaa !331
  %542 = sub nsw i32 %534, %541, !dbg !845
  %543 = load i32** %105, align 8, !dbg !846, !tbaa !414
  %544 = getelementptr inbounds i32* %543, i64 %470, !dbg !847
  %545 = load i32* %544, align 4, !dbg !847, !tbaa !331
  %546 = sdiv i32 %542, %545, !dbg !848
  %547 = zext i32 %hdim.833 to i64, !dbg !849
  %548 = load i32** %109, align 8, !dbg !850, !tbaa !418
  %549 = getelementptr inbounds i32* %548, i64 %547, !dbg !849
  store i32 %546, i32* %549, align 4, !dbg !851, !tbaa !331
  %550 = load i32* %533, align 4, !dbg !852, !tbaa !331
  %551 = load i32* %540, align 4, !dbg !854, !tbaa !331
  %552 = sub nsw i32 %550, %551, !dbg !855
  %553 = load i32* %544, align 4, !dbg !856, !tbaa !331
  %554 = srem i32 %552, %553, !dbg !857
  %555 = icmp eq i32 %554, 0, !dbg !857
  br i1 %555, label %558, label %556, !dbg !858

; <label>:556                                     ; preds = %539
  %557 = add nsw i32 %546, 1, !dbg !859
  store i32 %557, i32* %549, align 4, !dbg !859, !tbaa !331
  br label %558, !dbg !861

; <label>:558                                     ; preds = %539, %556
  %559 = phi i32 [ %546, %539 ], [ %557, %556 ]
  %560 = load i32* %463, align 4, !dbg !862, !tbaa !634
  %561 = mul i32 %560, %559, !dbg !862
  store i32 %561, i32* %463, align 4, !dbg !862, !tbaa !634
  %562 = add i32 %hdim.833, 1, !dbg !863
  call void @llvm.dbg.value(metadata i32 %562, i64 0, metadata !217, metadata !261), !dbg !423
  br label %563, !dbg !864

; <label>:563                                     ; preds = %532, %558
  %hdim.9 = phi i32 [ %562, %558 ], [ %hdim.833, %532 ]
  %564 = add nuw i32 %vdim.834, 1, !dbg !865
  call void @llvm.dbg.value(metadata i32 %564, i64 0, metadata !216, metadata !261), !dbg !511
  %565 = load i32* %15, align 4, !dbg !866, !tbaa !299
  %566 = icmp ult i32 %564, %565, !dbg !789
  br i1 %566, label %467, label %.loopexit17, !dbg !787

.loopexit17:                                      ; preds = %382, %563, %.preheader20, %._crit_edge, %._crit_edge.thread, %351
  %567 = load %struct.hslab_mapping_t** @mapping_list, align 8, !dbg !867, !tbaa !310
  %568 = icmp eq %struct.hslab_mapping_t* %567, null, !dbg !867
  %569 = ptrtoint %struct.hslab_mapping_t* %567 to i64
  br i1 %568, label %.preheader, label %570, !dbg !869

; <label>:570                                     ; preds = %.loopexit17
  %571 = getelementptr inbounds %struct.hslab_mapping_t* %567, i64 0, i32 17, !dbg !870
  %572 = bitcast %struct.hslab_mapping_t** %571 to i8**, !dbg !872
  store i8* %55, i8** %572, align 8, !dbg !872, !tbaa !873
  %.pre93 = load i64* bitcast (%struct.hslab_mapping_t** @mapping_list to i64*), align 8, !dbg !874, !tbaa !310
  br label %.preheader, !dbg !875

.preheader:                                       ; preds = %570, %.loopexit17
  %573 = phi i64 [ %569, %.loopexit17 ], [ %.pre93, %570 ]
  %574 = getelementptr inbounds i8* %55, i64 112, !dbg !876
  %575 = bitcast i8* %574 to %struct.hslab_mapping_t**, !dbg !876
  store %struct.hslab_mapping_t* null, %struct.hslab_mapping_t** %575, align 8, !dbg !877, !tbaa !873
  %576 = getelementptr inbounds i8* %55, i64 120, !dbg !878
  %577 = bitcast i8* %576 to i64*, !dbg !879
  store i64 %573, i64* %577, align 8, !dbg !879, !tbaa !880
  store i8* %55, i8** bitcast (%struct.hslab_mapping_t** @mapping_list to i8**), align 8, !dbg !881, !tbaa !310
  %578 = load i32* @nmapping_list, align 4, !dbg !882, !tbaa !331
  %579 = add nsw i32 %578, 1, !dbg !882
  store i32 %579, i32* @nmapping_list, align 4, !dbg !882, !tbaa !331
  %580 = bitcast i8* %55 to i32*, !dbg !883
  store i32 %578, i32* %580, align 4, !dbg !884, !tbaa !885
  %581 = load i32* %72, align 4, !dbg !886, !tbaa !378
  %582 = icmp eq i32 %581, 0, !dbg !891
  br i1 %582, label %.loopexit, label %.lr.ph, !dbg !892

.lr.ph:                                           ; preds = %.preheader
  %583 = load i32** %113, align 8, !dbg !893, !tbaa !422
  br label %584, !dbg !892

; <label>:584                                     ; preds = %.lr.ph, %584
  %hdim.1032 = phi i32 [ 0, %.lr.ph ], [ %589, %584 ]
  %585 = zext i32 %hdim.1032 to i64, !dbg !895
  %586 = getelementptr inbounds i32* %583, i64 %585, !dbg !895
  %587 = load i32* %586, align 4, !dbg !895, !tbaa !331
  %588 = getelementptr inbounds i32* %hsize, i64 %585, !dbg !896
  store i32 %587, i32* %588, align 4, !dbg !897, !tbaa !331
  %589 = add nuw i32 %hdim.1032, 1, !dbg !898
  call void @llvm.dbg.value(metadata i32 %589, i64 0, metadata !217, metadata !261), !dbg !423
  %590 = icmp ult i32 %589, %581, !dbg !891
  br i1 %590, label %584, label %.loopexit, !dbg !892

.loopexit:                                        ; preds = %584, %.preheader, %225, %206, %163, %138, %130, %._crit_edge63.thread, %.thread13
  %.0 = phi i32 [ %retval.314, %.thread13 ], [ -7, %._crit_edge63.thread ], [ -7, %130 ], [ -7, %138 ], [ -8, %163 ], [ -8, %206 ], [ -8, %225 ], [ %578, %.preheader ], [ %578, %584 ]
  ret i32 %.0, !dbg !899
}
