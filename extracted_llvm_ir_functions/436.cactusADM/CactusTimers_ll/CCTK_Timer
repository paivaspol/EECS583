define i32 @CCTK_Timer(i8* %timername, %struct.cTimerData* nocapture %info) #1 {
entry:
  %timer = alloca %struct.t_Timer*, align 8
  call void @llvm.dbg.value(metadata !{i8* %timername}, i64 0, metadata !221), !dbg !601
  call void @llvm.dbg.value(metadata !{%struct.cTimerData* %info}, i64 0, metadata !222), !dbg !601
  call void @llvm.dbg.declare(metadata !{%struct.t_Timer** %timer}, metadata !223), !dbg !602
  %0 = load %struct.cHandledData** @timers, align 8, !dbg !603, !tbaa !355
  %1 = bitcast %struct.t_Timer** %timer to i8**, !dbg !603
  %call = call i32 @Util_GetHandle(%struct.cHandledData* %0, i8* %timername, i8** %1) #8, !dbg !603
  call void @llvm.dbg.value(metadata !{i32 %call}, i64 0, metadata !224), !dbg !603
  %cmp = icmp sgt i32 %call, -1, !dbg !604
  br i1 %cmp, label %if.then, label %if.end, !dbg !604

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata !{%struct.t_Timer** %timer}, i64 0, metadata !223), !dbg !605
  %2 = load %struct.t_Timer** %timer, align 8, !dbg !605, !tbaa !355
  call fastcc void @CCTKi_Timer(i32 %call, %struct.t_Timer* %2, %struct.cTimerData* %info) #10, !dbg !605
  br label %if.end, !dbg !607

if.end:                                           ; preds = %if.then, %entry
  %not.cmp = xor i1 %cmp, true, !dbg !608
  %cond = sext i1 %not.cmp to i32, !dbg !608
  ret i32 %cond, !dbg !608
}
