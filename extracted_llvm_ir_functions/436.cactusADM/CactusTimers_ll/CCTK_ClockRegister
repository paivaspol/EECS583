define i32 @CCTK_ClockRegister(i8* %clockname, %struct.cClockFuncs* nocapture readonly %functions) #1 {
  %1 = tail call i8* @malloc(i64 72) #7
  %2 = icmp eq i8* %1, null
  br i1 %2, label %.preheader, label %3

; <label>:3                                       ; preds = %0
  %4 = bitcast i8* %1 to i8**
  store i8* %clockname, i8** %4, align 8, !tbaa !2
  %5 = getelementptr inbounds %struct.cClockFuncs* %functions, i64 0, i32 1
  %6 = load i32* %5, align 4, !tbaa !8
  %7 = getelementptr inbounds i8* %1, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 %6, i32* %8, align 4, !tbaa !8
  %9 = getelementptr inbounds %struct.cClockFuncs* %functions, i64 0, i32 2
  %10 = getelementptr inbounds i8* %1, i64 16
  %11 = bitcast i8* (i32)** %9 to <2 x i64>*
  %12 = load <2 x i64>* %11, align 8, !tbaa !9
  %13 = bitcast i8* %10 to <2 x i64>*
  store <2 x i64> %12, <2 x i64>* %13, align 8, !tbaa !9
  %14 = getelementptr inbounds %struct.cClockFuncs* %functions, i64 0, i32 4
  %15 = getelementptr inbounds i8* %1, i64 32
  %16 = bitcast void (i32, i8*)** %14 to <2 x i64>*
  %17 = load <2 x i64>* %16, align 8, !tbaa !9
  %18 = bitcast i8* %15 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %18, align 8, !tbaa !9
  %19 = getelementptr inbounds %struct.cClockFuncs* %functions, i64 0, i32 6
  %20 = getelementptr inbounds i8* %1, i64 48
  %21 = bitcast void (i32, i8*)** %19 to <2 x i64>*
  %22 = load <2 x i64>* %21, align 8, !tbaa !9
  %23 = bitcast i8* %20 to <2 x i64>*
  store <2 x i64> %22, <2 x i64>* %23, align 8, !tbaa !9
  %24 = getelementptr inbounds %struct.cClockFuncs* %functions, i64 0, i32 8
  %25 = bitcast void (i32, i8*, %struct.cTimerVal*)** %24 to i64*
  %26 = load i64* %25, align 8, !tbaa !10
  %27 = getelementptr inbounds i8* %1, i64 64
  %28 = bitcast i8* %27 to i64*
  store i64 %26, i64* %28, align 8, !tbaa !10
  br label %.preheader

.preheader:                                       ; preds = %0, %3
  %29 = load i32* @n_timers, align 4, !tbaa !11
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader
  %31 = getelementptr inbounds %struct.cClockFuncs* %functions, i64 0, i32 2
  br label %32

; <label>:32                                      ; preds = %.lr.ph, %51
  %handle.01 = phi i32 [ 0, %.lr.ph ], [ %52, %51 ]
  %33 = load %struct.cHandledData** @timers, align 8, !tbaa !9
  %34 = tail call i8* @Util_GetHandledData(%struct.cHandledData* %33, i32 %handle.01) #7
  %35 = bitcast i8* %34 to i8**
  %36 = load i8** %35, align 8, !tbaa !12
  %37 = load i32* @n_clocks, align 4, !tbaa !11
  %38 = add nsw i32 %37, 1
  %39 = sext i32 %38 to i64
  %40 = shl nsw i64 %39, 3
  %41 = tail call i8* @realloc(i8* %36, i64 %40) #7
  %42 = icmp eq i8* %41, null
  br i1 %42, label %51, label %43

; <label>:43                                      ; preds = %32
  %44 = bitcast i8* %34 to i8***
  store i8* %41, i8** %35, align 8, !tbaa !12
  %45 = load i8* (i32)** %31, align 8, !tbaa !14
  %46 = tail call i8* %45(i32 %handle.01) #7
  %47 = load i32* @n_clocks, align 4, !tbaa !11
  %48 = sext i32 %47 to i64
  %49 = load i8*** %44, align 8, !tbaa !12
  %50 = getelementptr inbounds i8** %49, i64 %48
  store i8* %46, i8** %50, align 8, !tbaa !9
  br label %51

; <label>:51                                      ; preds = %32, %43
  %52 = add nuw nsw i32 %handle.01, 1
  %53 = load i32* @n_timers, align 4, !tbaa !11
  %54 = icmp slt i32 %52, %53
  br i1 %54, label %32, label %._crit_edge

._crit_edge:                                      ; preds = %51, %.preheader
  %55 = tail call i32 @Util_NewHandle(%struct.cHandledData** @clocks, i8* %clockname, i8* %1) #7
  %56 = load i32* @n_clocks, align 4, !tbaa !11
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* @n_clocks, align 4, !tbaa !11
  %58 = getelementptr inbounds %struct.cClockFuncs* %functions, i64 0, i32 1
  %59 = load i32* %58, align 4, !tbaa !8
  %60 = load i32* @n_clock_vals, align 4, !tbaa !11
  %61 = add nsw i32 %60, %59
  store i32 %61, i32* @n_clock_vals, align 4, !tbaa !11
  ret i32 %55
}
