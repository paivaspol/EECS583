define internal fastcc i32 @CCTKi_TimerCreate(i8* %timername) #1 {
  %timer = alloca %struct.t_Timer*, align 8
  %1 = load %struct.cHandledData** @timers, align 8, !tbaa !9
  %2 = bitcast %struct.t_Timer** %timer to i8**
  %3 = call i32 @Util_GetHandle(%struct.cHandledData* %1, i8* %timername, i8** %2) #7
  %4 = icmp sgt i32 %3, -1
  br i1 %4, label %.loopexit, label %5

; <label>:5                                       ; preds = %0
  %6 = call i8* @malloc(i64 8) #7
  store i8* %6, i8** %2, align 8, !tbaa !9
  %7 = icmp eq i8* %6, null
  br i1 %7, label %.loopexit, label %8

; <label>:8                                       ; preds = %5
  %9 = bitcast i8* %6 to i8**
  %10 = load i32* @n_clocks, align 4, !tbaa !11
  %11 = sext i32 %10 to i64
  %12 = shl nsw i64 %11, 3
  %13 = call i8* @malloc(i64 %12) #7
  store i8* %13, i8** %9, align 8, !tbaa !12
  %14 = load %struct.t_Timer** %timer, align 8, !tbaa !9
  %15 = getelementptr inbounds %struct.t_Timer* %14, i64 0, i32 0
  %16 = load i8*** %15, align 8, !tbaa !12
  %17 = icmp eq i8** %16, null
  %18 = bitcast %struct.t_Timer* %14 to i8*
  br i1 %17, label %39, label %19

; <label>:19                                      ; preds = %8
  %20 = call i32 @Util_NewHandle(%struct.cHandledData** @timers, i8* %timername, i8* %18) #7
  %21 = load i32* @n_timers, align 4, !tbaa !11
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* @n_timers, align 4, !tbaa !11
  %23 = load i32* @n_clocks, align 4, !tbaa !11
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %19, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %19 ]
  %25 = load %struct.cHandledData** @clocks, align 8, !tbaa !9
  %26 = trunc i64 %indvars.iv to i32
  %27 = call i8* @Util_GetHandledData(%struct.cHandledData* %25, i32 %26) #7
  %28 = getelementptr inbounds i8* %27, i64 16
  %29 = bitcast i8* %28 to i8* (i32)**
  %30 = load i8* (i32)** %29, align 8, !tbaa !14
  %31 = call i8* %30(i32 %20) #7
  %32 = load %struct.t_Timer** %timer, align 8, !tbaa !9
  %33 = getelementptr inbounds %struct.t_Timer* %32, i64 0, i32 0
  %34 = load i8*** %33, align 8, !tbaa !12
  %35 = getelementptr inbounds i8** %34, i64 %indvars.iv
  store i8* %31, i8** %35, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %36 = load i32* @n_clocks, align 4, !tbaa !11
  %37 = sext i32 %36 to i64
  %38 = icmp slt i64 %indvars.iv.next, %37
  br i1 %38, label %.lr.ph, label %.loopexit

; <label>:39                                      ; preds = %8
  call void @free(i8* %18) #8
  br label %.loopexit

.loopexit:                                        ; preds = %.lr.ph, %19, %5, %0, %39
  %retval.0 = phi i32 [ -2, %39 ], [ -1, %0 ], [ -2, %5 ], [ %20, %19 ], [ %20, %.lr.ph ]
  ret i32 %retval.0
}
