define void @IOUtil_RecoverVarsFromDatafiles(%struct.cGH* %GH, i8* nocapture readonly %in_files, i8* %in_vars) #1 {
  %1 = load i32* getelementptr inbounds (%struct.anon* @iorest_, i64 0, i32 50), align 4, !tbaa !21
  %2 = tail call i8* @CCTK_GHExtension(%struct.cGH* %GH, i8* getelementptr inbounds ([3 x i8]* @.str9, i64 0, i64 0)) #7
  %3 = tail call i32 @CCTK_NumVars() #7
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %12

; <label>:5                                       ; preds = %0
  %6 = tail call i32 @CCTK_NumVars() #7
  %7 = sext i32 %6 to i64
  %8 = tail call i8* @calloc(i64 %7, i64 1) #7
  %9 = getelementptr inbounds i8* %2, i64 32
  %10 = bitcast i8* %9 to i8**
  store i8* %8, i8** %10, align 8, !tbaa !22
  %11 = tail call i32 @CCTK_TraverseString(i8* %in_vars, void (i32, i8*, i8*)* @SetInputFlag, i8* %8, i32 3) #7
  br label %15

; <label>:12                                      ; preds = %0
  %13 = getelementptr inbounds i8* %2, i64 32
  %14 = bitcast i8* %13 to i8**
  store i8* null, i8** %14, align 8, !tbaa !22
  br label %15

; <label>:15                                      ; preds = %12, %5
  %16 = tail call i8* @strdup(i8* %in_files) #7
  %17 = icmp eq i8* %16, null
  br i1 %17, label %.thread, label %.preheader9.lr.ph

.preheader9.lr.ph:                                ; preds = %15
  %18 = icmp eq i32 %1, 0
  br label %.preheader9

.preheader9:                                      ; preds = %52, %isspace.exit, %.preheader9.lr.ph
  %basefilename.1 = phi i8* [ %16, %.preheader9.lr.ph ], [ %28, %isspace.exit ], [ %delim.0, %52 ]
  %19 = load i8* %basefilename.1, align 1, !tbaa !23
  %isascii.i.i7 = icmp sgt i8 %19, -1
  br i1 %isascii.i.i7, label %20, label %25

; <label>:20                                      ; preds = %.preheader9
  %21 = sext i8 %19 to i64
  %22 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %21
  %23 = load i32* %22, align 4, !tbaa !6
  %24 = and i32 %23, 16384
  br label %isspace.exit

; <label>:25                                      ; preds = %.preheader9
  %26 = sext i8 %19 to i32
  %27 = tail call i32 @__maskrune(i32 %26, i64 16384) #7
  br label %isspace.exit

isspace.exit:                                     ; preds = %20, %25
  %.sink.i.in.i = phi i32 [ %24, %20 ], [ %27, %25 ]
  %.sink.i.i = icmp eq i32 %.sink.i.in.i, 0
  %28 = getelementptr inbounds i8* %basefilename.1, i64 1
  br i1 %.sink.i.i, label %29, label %.preheader9

; <label>:29                                      ; preds = %isspace.exit
  %30 = load i8* %basefilename.1, align 1, !tbaa !23
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %53, label %.preheader

.preheader:                                       ; preds = %29, %42
  %basefilename.1.pn = phi i8* [ %delim.0, %42 ], [ %basefilename.1, %29 ]
  %delim.0 = getelementptr inbounds i8* %basefilename.1.pn, i64 1
  %32 = load i8* %delim.0, align 1, !tbaa !23
  %isascii.i.i18 = icmp sgt i8 %32, -1
  br i1 %isascii.i.i18, label %33, label %38

; <label>:33                                      ; preds = %.preheader
  %34 = sext i8 %32 to i64
  %35 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %34
  %36 = load i32* %35, align 4, !tbaa !6
  %37 = and i32 %36, 16384
  br label %isspace.exit4

; <label>:38                                      ; preds = %.preheader
  %39 = sext i8 %32 to i32
  %40 = tail call i32 @__maskrune(i32 %39, i64 16384) #7
  br label %isspace.exit4

isspace.exit4:                                    ; preds = %33, %38
  %.sink.i.in.i2 = phi i32 [ %37, %33 ], [ %40, %38 ]
  %.sink.i.i3 = icmp eq i32 %.sink.i.in.i2, 0
  %41 = load i8* %delim.0, align 1, !tbaa !23
  br i1 %.sink.i.i3, label %42, label %.critedge

; <label>:42                                      ; preds = %isspace.exit4
  %43 = icmp eq i8 %41, 0
  br i1 %43, label %.critedge, label %.preheader

.critedge:                                        ; preds = %isspace.exit4, %42
  %44 = phi i8 [ 0, %42 ], [ %41, %isspace.exit4 ]
  store i8 0, i8* %delim.0, align 1, !tbaa !23
  br i1 %18, label %47, label %45

; <label>:45                                      ; preds = %.critedge
  %46 = tail call i32 (i8*, i8*, ...)* @CCTK_VInfo(i8* getelementptr inbounds ([7 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8]* @.str11, i64 0, i64 0), i8* %basefilename.1) #7
  br label %47

; <label>:47                                      ; preds = %.critedge, %45
  %48 = tail call fastcc i32 @IOUtil_RecoverFromFile(%struct.cGH* %GH, i8* %basefilename.1, i32 4) #8
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %50, label %52

; <label>:50                                      ; preds = %47
  %51 = tail call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 432, i8* getelementptr inbounds ([87 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8]* @.str12, i64 0, i64 0), i8* %basefilename.1) #7
  br label %52

; <label>:52                                      ; preds = %50, %47
  store i8 %44, i8* %delim.0, align 1, !tbaa !23
  br label %.preheader9

; <label>:53                                      ; preds = %29
  %54 = tail call i64 @strlen(i8* %in_files) #7
  %55 = sub i64 0, %54
  %56 = getelementptr inbounds i8* %basefilename.1, i64 %55
  tail call void @free(i8* %56) #8
  br label %.thread

.thread:                                          ; preds = %15, %53
  %57 = getelementptr inbounds i8* %2, i64 32
  %58 = bitcast i8* %57 to i8**
  %59 = load i8** %58, align 8, !tbaa !22
  %60 = icmp eq i8* %59, null
  br i1 %60, label %62, label %61

; <label>:61                                      ; preds = %.thread
  tail call void @free(i8* %59) #8
  store i8* null, i8** %58, align 8, !tbaa !22
  br label %62

; <label>:62                                      ; preds = %.thread, %61
  ret void
}
