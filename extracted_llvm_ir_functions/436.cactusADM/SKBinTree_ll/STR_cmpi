define i32 @STR_cmpi(i8* nocapture readonly %string1, i8* nocapture readonly %string2) #1 {
  %1 = load i8* %string1, align 1, !tbaa !12
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %.critedge.thread, label %.lr.ph

; <label>:3                                       ; preds = %10
  %4 = getelementptr inbounds i8* %string1, i64 %indvars.iv.next
  %5 = load i8* %4, align 1, !tbaa !12
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %.critedge, label %.lr.ph

.lr.ph:                                           ; preds = %0, %3
  %indvars.iv = phi i64 [ %indvars.iv.next, %3 ], [ 0, %0 ]
  %.in = phi i8 [ %5, %3 ], [ %1, %0 ]
  %retval.01 = phi i32 [ %16, %3 ], [ 0, %0 ]
  %7 = getelementptr inbounds i8* %string2, i64 %indvars.iv
  %8 = load i8* %7, align 1, !tbaa !12
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %.critedge, label %10

; <label>:10                                      ; preds = %.lr.ph
  %11 = sext i8 %.in to i32
  %12 = tail call i32 @__tolower(i32 %11) #8
  %13 = load i8* %7, align 1, !tbaa !12
  %14 = sext i8 %13 to i32
  %15 = tail call i32 @__tolower(i32 %14) #8
  %16 = sub nsw i32 %12, %15
  %17 = icmp eq i32 %12, %15
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %17, label %3, label %.critedge

.critedge:                                        ; preds = %3, %.lr.ph, %10
  %retval.1 = phi i32 [ %16, %10 ], [ %retval.01, %.lr.ph ], [ %16, %3 ]
  %18 = icmp eq i32 %retval.1, 0
  br i1 %18, label %.critedge.thread, label %23

.critedge.thread:                                 ; preds = %0, %.critedge
  %19 = tail call i64 @strlen(i8* %string1) #8
  %20 = tail call i64 @strlen(i8* %string2) #8
  %21 = sub i64 %19, %20
  %22 = trunc i64 %21 to i32
  br label %23

; <label>:23                                      ; preds = %.critedge, %.critedge.thread
  %retval.2 = phi i32 [ %retval.1, %.critedge ], [ %22, %.critedge.thread ]
  ret i32 %retval.2
}
