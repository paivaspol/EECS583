define void @SKTreePrintNodes(%struct.T_SKTREE* readonly %root, i32 %depth, void (i8*, i8*, i32)* %print_node) #1 {
  %1 = icmp eq %struct.T_SKTREE* %root, null
  br i1 %1, label %tailrecurse._crit_edge, label %tailrecurse

tailrecurse:                                      ; preds = %0, %tailrecurse
  %depth.tr2 = phi i32 [ %4, %tailrecurse ], [ %depth, %0 ]
  %root.tr1 = phi %struct.T_SKTREE* [ %10, %tailrecurse ], [ %root, %0 ]
  %2 = getelementptr inbounds %struct.T_SKTREE* %root.tr1, i64 0, i32 0
  %3 = load %struct.T_SKTREE** %2, align 8, !tbaa !8
  %4 = add nsw i32 %depth.tr2, 1
  tail call void @SKTreePrintNodes(%struct.T_SKTREE* %3, i32 %4, void (i8*, i8*, i32)* %print_node) #9
  %5 = getelementptr inbounds %struct.T_SKTREE* %root.tr1, i64 0, i32 4
  %6 = load i8** %5, align 8, !tbaa !7
  %7 = getelementptr inbounds %struct.T_SKTREE* %root.tr1, i64 0, i32 5
  %8 = load i8** %7, align 8, !tbaa !2
  tail call void %print_node(i8* %6, i8* %8, i32 %depth.tr2) #8
  %9 = getelementptr inbounds %struct.T_SKTREE* %root.tr1, i64 0, i32 1
  %10 = load %struct.T_SKTREE** %9, align 8, !tbaa !11
  %11 = icmp eq %struct.T_SKTREE* %10, null
  br i1 %11, label %tailrecurse._crit_edge, label %tailrecurse

tailrecurse._crit_edge:                           ; preds = %tailrecurse, %0
  ret void
}
