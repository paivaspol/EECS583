define i32 @PUGH_PrintTimingInfo(%struct.cGH* %GH) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.cGH* %GH}, i64 0, metadata !549), !dbg !768
  %call = tail call %struct.PGH* @PUGH_pGH(%struct.cGH* %GH) #7, !dbg !769
  tail call void @llvm.dbg.value(metadata !{%struct.PGH* %call}, i64 0, metadata !573), !dbg !769
  %comm_time = getelementptr inbounds %struct.PGH* %call, i64 0, i32 20, !dbg !770
  %0 = load i32* %comm_time, align 4, !dbg !770, !tbaa !635
  %cmp = icmp slt i32 %0, 0, !dbg !770
  br i1 %cmp, label %return, label %if.end, !dbg !770

if.end:                                           ; preds = %entry
  %call1 = tail call %struct.cTimerData* @CCTK_TimerCreateData() #7, !dbg !771
  tail call void @llvm.dbg.value(metadata !{%struct.cTimerData* %call1}, i64 0, metadata !551), !dbg !771
  %tobool = icmp eq %struct.cTimerData* %call1, null, !dbg !772
  br i1 %tobool, label %if.else, label %if.then2, !dbg !772

if.then2:                                         ; preds = %if.end
  %call3 = tail call i32 @CCTK_Info(i8* getelementptr inbounds ([5 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8]* @.str4, i64 0, i64 0)) #7, !dbg !773
  %1 = load i32* %comm_time, align 4, !dbg !775, !tbaa !635
  %call5 = tail call i32 @CCTK_TimerI(i32 %1, %struct.cTimerData* %call1) #7, !dbg !775
  tail call void @llvm.dbg.value(metadata !21, i64 0, metadata !550), !dbg !776
  %n_vals = getelementptr inbounds %struct.cTimerData* %call1, i64 0, i32 0, !dbg !776
  %2 = load i32* %n_vals, align 4, !dbg !776, !tbaa !635
  %cmp675 = icmp sgt i32 %2, 0, !dbg !776
  br i1 %cmp675, label %for.body.lr.ph, label %for.end, !dbg !776

for.body.lr.ph:                                   ; preds = %if.then2
  %vals = getelementptr inbounds %struct.cTimerData* %call1, i64 0, i32 1, !dbg !778
  br label %for.body, !dbg !776

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %3 = load %struct.cTimerVal** %vals, align 8, !dbg !778, !tbaa !615
  %type = getelementptr inbounds %struct.cTimerVal* %3, i64 %indvars.iv, i32 0, !dbg !778
  %4 = load i32* %type, align 4, !dbg !778, !tbaa !616
  switch i32 %4, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb18
    i32 3, label %sw.bb32
  ], !dbg !778

sw.bb:                                            ; preds = %for.body
  %heading = getelementptr inbounds %struct.cTimerVal* %3, i64 %indvars.iv, i32 1, !dbg !780
  %5 = load i8** %heading, align 8, !dbg !780, !tbaa !615
  %val = getelementptr inbounds %struct.cTimerVal* %3, i64 %indvars.iv, i32 3, !dbg !780
  %i13 = bitcast %union.anon* %val to i32*, !dbg !780
  %6 = load i32* %i13, align 4, !dbg !780, !tbaa !635
  %units = getelementptr inbounds %struct.cTimerVal* %3, i64 %indvars.iv, i32 2, !dbg !780
  %7 = load i8** %units, align 8, !dbg !780, !tbaa !615
  %call17 = tail call i32 (i8*, i8*, ...)* @CCTK_VInfo(i8* getelementptr inbounds ([5 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8]* @.str5, i64 0, i64 0), i8* %5, i32 %6, i8* %7) #7, !dbg !780
  br label %for.inc, !dbg !782

sw.bb18:                                          ; preds = %for.body
  %heading22 = getelementptr inbounds %struct.cTimerVal* %3, i64 %indvars.iv, i32 1, !dbg !783
  %8 = load i8** %heading22, align 8, !dbg !783, !tbaa !615
  %l = getelementptr inbounds %struct.cTimerVal* %3, i64 %indvars.iv, i32 3, i32 0, !dbg !783
  %9 = load i64* %l, align 8, !dbg !783, !tbaa !784
  %conv = trunc i64 %9 to i32, !dbg !783
  %units30 = getelementptr inbounds %struct.cTimerVal* %3, i64 %indvars.iv, i32 2, !dbg !783
  %10 = load i8** %units30, align 8, !dbg !783, !tbaa !615
  %call31 = tail call i32 (i8*, i8*, ...)* @CCTK_VInfo(i8* getelementptr inbounds ([5 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8]* @.str5, i64 0, i64 0), i8* %8, i32 %conv, i8* %10) #7, !dbg !783
  br label %for.inc, !dbg !785

sw.bb32:                                          ; preds = %for.body
  %heading36 = getelementptr inbounds %struct.cTimerVal* %3, i64 %indvars.iv, i32 1, !dbg !786
  %11 = load i8** %heading36, align 8, !dbg !786, !tbaa !615
  %val40 = getelementptr inbounds %struct.cTimerVal* %3, i64 %indvars.iv, i32 3, !dbg !786
  %d = bitcast %union.anon* %val40 to double*, !dbg !786
  %12 = load double* %d, align 8, !dbg !786, !tbaa !787
  %units44 = getelementptr inbounds %struct.cTimerVal* %3, i64 %indvars.iv, i32 2, !dbg !786
  %13 = load i8** %units44, align 8, !dbg !786, !tbaa !615
  %call45 = tail call i32 (i8*, i8*, ...)* @CCTK_VInfo(i8* getelementptr inbounds ([5 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str6, i64 0, i64 0), i8* %11, double %12, i8* %13) #7, !dbg !786
  br label %for.inc, !dbg !788

sw.default:                                       ; preds = %for.body
  %call46 = tail call i32 @CCTK_Warn(i32 1, i32 561, i8* getelementptr inbounds ([66 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8]* @.str7, i64 0, i64 0)) #7, !dbg !789
  br label %for.inc, !dbg !790

for.inc:                                          ; preds = %sw.bb, %sw.bb18, %sw.bb32, %sw.default
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !776
  %14 = load i32* %n_vals, align 4, !dbg !776, !tbaa !635
  %15 = trunc i64 %indvars.iv.next to i32, !dbg !776
  %cmp6 = icmp slt i32 %15, %14, !dbg !776
  br i1 %cmp6, label %for.body, label %for.end, !dbg !776

for.end:                                          ; preds = %for.inc, %if.then2
  %call47 = tail call i32 @CCTK_TimerDestroyData(%struct.cTimerData* %call1) #7, !dbg !791
  br label %return, !dbg !792

if.else:                                          ; preds = %if.end
  %call48 = tail call i32 @CCTK_Warn(i32 1, i32 571, i8* getelementptr inbounds ([66 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8]* @.str8, i64 0, i64 0)) #7, !dbg !793
  br label %return

return:                                           ; preds = %for.end, %if.else, %entry
  ret i32 0, !dbg !795
}
