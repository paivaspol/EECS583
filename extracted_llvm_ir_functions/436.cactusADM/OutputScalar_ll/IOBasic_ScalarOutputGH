define i32 @IOBasic_ScalarOutputGH(%struct.cGH* %GH) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.cGH* %GH}, i64 0, metadata !54), !dbg !169
  %call = tail call i8* @CCTK_GHExtension(%struct.cGH* %GH, i8* getelementptr inbounds ([8 x i8]* @.str, i64 0, i64 0)) #6, !dbg !170
  %0 = bitcast i8* %call to %struct.IOBASIC_GH*, !dbg !170
  tail call void @llvm.dbg.value(metadata !{%struct.IOBASIC_GH* %0}, i64 0, metadata !59), !dbg !170
  tail call fastcc void @CheckSteerableParameters(%struct.IOBASIC_GH* %0) #7, !dbg !171
  %outScalar_every = bitcast i8* %call to i32*, !dbg !172
  %1 = load i32* %outScalar_every, align 4, !dbg !172, !tbaa !173
  %cmp = icmp slt i32 %1, 1, !dbg !172
  br i1 %cmp, label %return, label %for.cond.preheader, !dbg !172

for.cond.preheader:                               ; preds = %entry
  %call230 = tail call i32 @CCTK_NumVars() #6, !dbg !176
  %cmp331 = icmp sgt i32 %call230, 0, !dbg !176
  br i1 %cmp331, label %for.body.lr.ph, label %return, !dbg !176

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %cctk_iteration = getelementptr inbounds %struct.cGH* %GH, i64 0, i32 1, !dbg !178
  %outScalar_last = getelementptr inbounds i8* %call, i64 40, !dbg !178
  %2 = bitcast i8* %outScalar_last to i32**, !dbg !178
  br label %for.body, !dbg !176

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %retval1.033 = phi i32 [ 0, %for.body.lr.ph ], [ %retval1.1, %for.inc ]
  %3 = trunc i64 %indvars.iv to i32, !dbg !181
  %call4 = tail call i32 @IOBasic_TimeForScalarOutput(%struct.cGH* %GH, i32 %3) #7, !dbg !181
  %tobool = icmp eq i32 %call4, 0, !dbg !181
  br i1 %tobool, label %for.inc, label %if.end6, !dbg !181

if.end6:                                          ; preds = %for.body
  %call7 = tail call i8* @CCTK_VarName(i32 %3) #6, !dbg !182
  tail call void @llvm.dbg.value(metadata !{i8* %call7}, i64 0, metadata !58), !dbg !182
  %call8 = tail call i32 @CCTK_GroupTypeFromVarI(i32 %3) #6, !dbg !183
  %cmp9 = icmp eq i32 %call8, 1, !dbg !183
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !183

if.then10:                                        ; preds = %if.end6
  %call11 = tail call i32 @IOBasic_WriteScalarGS(%struct.cGH* %GH, i32 %3, i8* %call7) #6, !dbg !184
  tail call void @llvm.dbg.value(metadata !{i32 %call11}, i64 0, metadata !55), !dbg !184
  br label %if.end13, !dbg !186

if.else:                                          ; preds = %if.end6
  %call12 = tail call i32 @IOBasic_WriteScalarGA(%struct.cGH* %GH, i32 %3, i8* %call7) #6, !dbg !187
  tail call void @llvm.dbg.value(metadata !{i32 %call12}, i64 0, metadata !55), !dbg !187
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then10
  %i.0 = phi i32 [ %call11, %if.then10 ], [ %call12, %if.else ]
  %cmp14 = icmp eq i32 %i.0, 0, !dbg !189
  br i1 %cmp14, label %if.then15, label %for.inc, !dbg !189

if.then15:                                        ; preds = %if.end13
  %4 = load i32* %cctk_iteration, align 4, !dbg !178, !tbaa !173
  %5 = load i32** %2, align 8, !dbg !178, !tbaa !190
  %arrayidx = getelementptr inbounds i32* %5, i64 %indvars.iv, !dbg !178
  store i32 %4, i32* %arrayidx, align 4, !dbg !178, !tbaa !173
  %inc = add nsw i32 %retval1.033, 1, !dbg !191
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !57), !dbg !191
  br label %for.inc, !dbg !192

for.inc:                                          ; preds = %for.body, %if.end13, %if.then15
  %retval1.1 = phi i32 [ %inc, %if.then15 ], [ %retval1.033, %if.end13 ], [ %retval1.033, %for.body ]
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !176
  %call2 = tail call i32 @CCTK_NumVars() #6, !dbg !176
  %6 = trunc i64 %indvars.iv.next to i32, !dbg !176
  %cmp3 = icmp slt i32 %6, %call2, !dbg !176
  br i1 %cmp3, label %for.body, label %return, !dbg !176

return:                                           ; preds = %for.cond.preheader, %for.inc, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %for.cond.preheader ], [ %retval1.1, %for.inc ]
  ret i32 %retval.0, !dbg !193
}
