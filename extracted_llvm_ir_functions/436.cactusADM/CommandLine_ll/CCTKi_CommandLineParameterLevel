define void @CCTKi_CommandLineParameterLevel(i8* %argument) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %argument}, i64 0, metadata !79), !dbg !250
  %call = tail call i32 @CCTK_Equals(i8* %argument, i8* getelementptr inbounds ([7 x i8]* @.str7, i64 0, i64 0)) #6, !dbg !251
  %tobool = icmp eq i32 %call, 0, !dbg !251
  br i1 %tobool, label %if.else, label %if.end11, !dbg !251

if.else:                                          ; preds = %entry
  %call1 = tail call i32 @CCTK_Equals(i8* %argument, i8* getelementptr inbounds ([7 x i8]* @.str8, i64 0, i64 0)) #6, !dbg !252
  %tobool2 = icmp eq i32 %call1, 0, !dbg !252
  br i1 %tobool2, label %if.else4, label %if.end11, !dbg !252

if.else4:                                         ; preds = %if.else
  %call5 = tail call i32 @CCTK_Equals(i8* %argument, i8* getelementptr inbounds ([8 x i8]* @.str9, i64 0, i64 0)) #6, !dbg !253
  %tobool6 = icmp eq i32 %call5, 0, !dbg !253
  br i1 %tobool6, label %if.else8, label %if.end11, !dbg !253

if.else8:                                         ; preds = %if.else4
  %call9 = tail call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 374, i8* getelementptr inbounds ([68 x i8]* @.str10, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str11, i64 0, i64 0), i8* getelementptr inbounds ([100 x i8]* @.str12, i64 0, i64 0), i8* %argument) #6, !dbg !254
  tail call void @llvm.dbg.value(metadata !150, i64 0, metadata !80), !dbg !256
  br label %if.end11

if.end11:                                         ; preds = %if.else4, %if.else, %entry, %if.else8
  %parameterlevel.0 = phi i32 [ 1, %if.else8 ], [ 0, %entry ], [ 1, %if.else ], [ 2, %if.else4 ]
  %call12 = tail call i32 @CCTKi_SetParameterLevel(i32 %parameterlevel.0) #6, !dbg !257
  ret void, !dbg !258
}
