define void @CCTKi_CommandLineVersion() #1 {
entry:
  %argv = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata !{i8*** %argv}, metadata !87), !dbg !268
  %0 = load i32 (%struct.cGH*)** @CCTK_MyProc, align 8, !dbg !269, !tbaa !129
  %call = call i32 %0(%struct.cGH* null) #6, !dbg !269
  %cmp = icmp eq i32 %call, 0, !dbg !269
  br i1 %cmp, label %if.then, label %if.end, !dbg !269

if.then:                                          ; preds = %entry
  %call1 = call i32 @CCTK_CommandLine(i8*** %argv) #6, !dbg !270
  %call2 = call i8* @CCTK_FullVersion() #6, !dbg !272
  call void @llvm.dbg.value(metadata !{i8* %call2}, i64 0, metadata !89), !dbg !272
  call void @llvm.dbg.value(metadata !{i8*** %argv}, i64 0, metadata !87), !dbg !273
  %1 = load i8*** %argv, align 8, !dbg !273, !tbaa !129
  %2 = load i8** %1, align 8, !dbg !273, !tbaa !129
  %call3 = call i8* @CCTK_CompileDate() #6, !dbg !274
  %call4 = call i8* @CCTK_CompileTime() #6, !dbg !274
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str16, i64 0, i64 0), i8* %2, i8* %call2, i8* %call3, i8* %call4) #6, !dbg !274
  br label %if.end, !dbg !275

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32 (%struct.cGH*, i32)** @CCTK_Exit, align 8, !dbg !276, !tbaa !129
  %call6 = call i32 %3(%struct.cGH* null, i32 1) #6, !dbg !276
  ret void, !dbg !277
}
