define %struct.PComm* @PUGH_SetupGArrayGroupComm(%struct.PGH* nocapture readnone %pughGH, i32 %dim, i32 %first_var, i32 %n_vars, i32 %sync_timelevel, i32 %vartype, %struct.PGExtras* nocapture readonly %extras) #1 {
  %1 = tail call i8* @malloc(i64 56) #7
  %2 = bitcast i8* %1 to %struct.PComm*
  %3 = icmp eq i8* %1, null
  br i1 %3, label %.loopexit, label %4

; <label>:4                                       ; preds = %0
  %5 = shl nsw i32 %dim, 1
  %6 = sext i32 %5 to i64
  %7 = shl nsw i64 %6, 2
  %8 = tail call i8* @malloc(i64 %7) #7
  %9 = bitcast i8* %1 to i8**
  store i8* %8, i8** %9, align 8, !tbaa !28
  %10 = shl nsw i64 %6, 3
  %11 = tail call i8* @malloc(i64 %10) #7
  %12 = getelementptr inbounds i8* %1, i64 8
  %13 = bitcast i8* %12 to i8***
  %14 = bitcast i8* %12 to i8**
  store i8* %11, i8** %14, align 8, !tbaa !30
  %15 = tail call i8* @malloc(i64 %10) #7
  %16 = getelementptr inbounds i8* %1, i64 16
  %17 = bitcast i8* %16 to i8***
  %18 = bitcast i8* %16 to i8**
  store i8* %15, i8** %18, align 8, !tbaa !31
  %19 = tail call i8* @malloc(i64 %7) #7
  %20 = getelementptr inbounds i8* %1, i64 32
  %21 = bitcast i8* %20 to i32**
  %22 = bitcast i8* %20 to i8**
  store i8* %19, i8** %22, align 8, !tbaa !32
  %23 = icmp eq i8* %8, null
  %24 = bitcast i8* %11 to i8**
  %25 = bitcast i8* %15 to i8**
  %26 = bitcast i8* %8 to i32*
  %27 = bitcast i8* %19 to i32*
  br i1 %23, label %.thread, label %28

; <label>:28                                      ; preds = %4
  %29 = icmp eq i8* %11, null
  br i1 %29, label %48, label %30

; <label>:30                                      ; preds = %28
  %31 = icmp eq i8* %15, null
  %32 = icmp eq i8* %19, null
  %or.cond = or i1 %32, %31
  br i1 %or.cond, label %48, label %33

; <label>:33                                      ; preds = %30
  %34 = getelementptr inbounds i8* %1, i64 24
  %35 = bitcast i8* %34 to i32*
  store i32 0, i32* %35, align 4, !tbaa !33
  %36 = getelementptr inbounds i8* %1, i64 40
  %37 = bitcast i8* %36 to i32*
  store i32 %first_var, i32* %37, align 4, !tbaa !34
  %38 = getelementptr inbounds i8* %1, i64 44
  %39 = bitcast i8* %38 to i32*
  store i32 %n_vars, i32* %39, align 4, !tbaa !35
  %40 = getelementptr inbounds i8* %1, i64 48
  %41 = bitcast i8* %40 to i32*
  store i32 %sync_timelevel, i32* %41, align 4, !tbaa !36
  %42 = icmp sgt i32 %dim, 0
  br i1 %42, label %.lr.ph7, label %.thread3

.lr.ph7:                                          ; preds = %33, %.lr.ph7
  %indvars.iv8 = phi i64 [ %indvars.iv.next9, %.lr.ph7 ], [ 0, %33 ]
  %43 = getelementptr inbounds i32* %26, i64 %indvars.iv8
  store i32 0, i32* %43, align 4, !tbaa !20
  %44 = getelementptr inbounds i8** %24, i64 %indvars.iv8
  store i8* null, i8** %44, align 8, !tbaa !19
  %45 = getelementptr inbounds i8** %25, i64 %indvars.iv8
  store i8* null, i8** %45, align 8, !tbaa !19
  %46 = getelementptr inbounds i32* %27, i64 %indvars.iv8
  store i32 0, i32* %46, align 4, !tbaa !20
  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1
  %47 = icmp slt i64 %indvars.iv.next9, %6
  br i1 %47, label %.lr.ph7, label %.thread3

; <label>:48                                      ; preds = %28, %30
  tail call void @free(i8* %8) #8
  %.pre = load i8*** %13, align 8, !tbaa !30
  br label %.thread

.thread:                                          ; preds = %4, %48
  %49 = phi i8** [ %24, %4 ], [ %.pre, %48 ]
  %50 = icmp eq i8** %49, null
  br i1 %50, label %53, label %51

; <label>:51                                      ; preds = %.thread
  %52 = bitcast i8** %49 to i8*
  tail call void @free(i8* %52) #8
  br label %53

; <label>:53                                      ; preds = %.thread, %51
  %54 = load i8*** %17, align 8, !tbaa !31
  %55 = icmp eq i8** %54, null
  br i1 %55, label %58, label %56

; <label>:56                                      ; preds = %53
  %57 = bitcast i8** %54 to i8*
  tail call void @free(i8* %57) #8
  br label %58

; <label>:58                                      ; preds = %53, %56
  %59 = load i32** %21, align 8, !tbaa !32
  %60 = icmp eq i32* %59, null
  br i1 %60, label %.thread1, label %61

; <label>:61                                      ; preds = %58
  %62 = bitcast i32* %59 to i8*
  tail call void @free(i8* %62) #8
  br label %.thread1

.thread1:                                         ; preds = %61, %58
  tail call void @free(i8* %1) #8
  br label %.loopexit

.thread3:                                         ; preds = %.lr.ph7, %33
  %63 = getelementptr inbounds %struct.PGExtras* %extras, i64 0, i32 11
  %64 = load i32** %63, align 8, !tbaa !18
  store i32 1, i32* %64, align 4, !tbaa !20
  %65 = getelementptr inbounds %struct.PGExtras* %extras, i64 0, i32 0
  %66 = load i32* %65, align 4, !tbaa !2
  %67 = icmp sgt i32 %66, 1
  br i1 %67, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %.thread3
  %68 = getelementptr inbounds %struct.PGExtras* %extras, i64 0, i32 6
  %69 = load i32** %68, align 8, !tbaa !15
  br label %70

; <label>:70                                      ; preds = %.lr.ph, %70
  %71 = phi i32 [ 1, %.lr.ph ], [ %75, %70 ]
  %indvars.iv = phi i64 [ 1, %.lr.ph ], [ %indvars.iv.next, %70 ]
  %72 = add nsw i64 %indvars.iv, -1
  %73 = getelementptr inbounds i32* %69, i64 %72
  %74 = load i32* %73, align 4, !tbaa !20
  %75 = mul nsw i32 %74, %71
  %76 = getelementptr inbounds i32* %64, i64 %indvars.iv
  store i32 %75, i32* %76, align 4, !tbaa !20
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %77 = load i32* %65, align 4, !tbaa !2
  %78 = sext i32 %77 to i64
  %79 = icmp slt i64 %indvars.iv.next, %78
  br i1 %79, label %70, label %.loopexit

.loopexit:                                        ; preds = %70, %.thread3, %0, %.thread1
  %this.02 = phi %struct.PComm* [ null, %.thread1 ], [ null, %0 ], [ %2, %.thread3 ], [ %2, %70 ]
  ret %struct.PComm* %this.02
}
