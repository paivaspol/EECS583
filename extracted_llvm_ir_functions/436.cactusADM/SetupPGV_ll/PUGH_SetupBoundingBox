define i32 @PUGH_SetupBoundingBox(i32 %dim, i32* nocapture readnone %perme, i32 %stagger, i32* nocapture readnone %sh, i32* nocapture readonly %nghosts, i32 %total_procs, i32* %nprocs, %struct.PGExtras* nocapture readonly %this) #1 {
  %1 = sext i32 %dim to i64
  %2 = shl nsw i64 %1, 3
  %3 = tail call i8* @malloc(i64 %2) #7
  %4 = bitcast i8* %3 to i32**
  %5 = shl nsw i64 %1, 2
  %6 = tail call i8* @malloc(i64 %5) #7
  %7 = bitcast i8* %6 to i32*
  %8 = icmp ne i8* %3, null
  %9 = icmp ne i8* %6, null
  %or.cond = and i1 %8, %9
  br i1 %or.cond, label %12, label %.preheader

.preheader:                                       ; preds = %PUGH_DecomposeIJK.exit._crit_edge, %12, %0
  %10 = icmp sgt i32 %dim, 0
  br i1 %10, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader
  %11 = add i32 %dim, -1
  br label %85

; <label>:12                                      ; preds = %0
  %13 = getelementptr inbounds %struct.PGExtras* %this, i64 0, i32 1
  %14 = load i32** %13, align 8, !tbaa !14
  %15 = tail call i32 @PUGH_GetBounds(i32 %dim, i32** %4, i32* %nprocs, i32* %14) #7
  %16 = icmp sgt i32 %total_procs, 0
  br i1 %16, label %.lr.ph7, label %.preheader

.lr.ph7:                                          ; preds = %12
  %17 = icmp sgt i32 %dim, 0
  %18 = getelementptr inbounds %struct.PGExtras* %this, i64 0, i32 3
  %19 = getelementptr inbounds %struct.PGExtras* %this, i64 0, i32 4
  %20 = getelementptr inbounds %struct.PGExtras* %this, i64 0, i32 12
  %21 = icmp eq i32 %stagger, 1
  %22 = add i32 %dim, -1
  %23 = add i32 %total_procs, -1
  br label %24

; <label>:24                                      ; preds = %PUGH_DecomposeIJK.exit._crit_edge, %.lr.ph7
  %indvars.iv14 = phi i64 [ 0, %.lr.ph7 ], [ %indvars.iv.next15, %PUGH_DecomposeIJK.exit._crit_edge ]
  br i1 %17, label %.lr.ph.i, label %PUGH_DecomposeIJK.exit._crit_edge

.lr.ph.i:                                         ; preds = %24
  %25 = trunc i64 %indvars.iv14 to i32
  br label %26

; <label>:26                                      ; preds = %26, %.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %.lr.ph.i ], [ %indvars.iv.next.i, %26 ]
  %.01.i = phi i32 [ %25, %.lr.ph.i ], [ %31, %26 ]
  %27 = getelementptr inbounds i32* %nprocs, i64 %indvars.iv.i
  %28 = load i32* %27, align 4, !tbaa !20
  %29 = srem i32 %.01.i, %28
  %30 = getelementptr inbounds i32* %7, i64 %indvars.iv.i
  store i32 %29, i32* %30, align 4, !tbaa !20
  %31 = sdiv i32 %.01.i, %28
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %lftr.wideiv8 = trunc i64 %indvars.iv.i to i32
  %exitcond9 = icmp eq i32 %lftr.wideiv8, %22
  br i1 %exitcond9, label %PUGH_DecomposeIJK.exit.preheader, label %26

PUGH_DecomposeIJK.exit.preheader:                 ; preds = %26
  br i1 %17, label %.lr.ph4, label %PUGH_DecomposeIJK.exit._crit_edge

.lr.ph4:                                          ; preds = %PUGH_DecomposeIJK.exit.preheader, %PUGH_DecomposeIJK.exit
  %indvars.iv10 = phi i64 [ %indvars.iv.next11, %PUGH_DecomposeIJK.exit ], [ 0, %PUGH_DecomposeIJK.exit.preheader ]
  %32 = getelementptr inbounds i32* %7, i64 %indvars.iv10
  %33 = load i32* %32, align 4, !tbaa !20
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %40

; <label>:35                                      ; preds = %.lr.ph4
  %36 = load i32*** %18, align 8, !tbaa !9
  %37 = getelementptr inbounds i32** %36, i64 %indvars.iv14
  %38 = load i32** %37, align 8, !tbaa !19
  %39 = getelementptr inbounds i32* %38, i64 %indvars.iv10
  store i32 0, i32* %39, align 4, !tbaa !20
  br label %56

; <label>:40                                      ; preds = %.lr.ph4
  %41 = sext i32 %33 to i64
  %42 = getelementptr inbounds i32** %4, i64 %indvars.iv10
  %43 = load i32** %42, align 8, !tbaa !19
  %44 = getelementptr inbounds i32* %43, i64 %41
  %45 = load i32* %44, align 4, !tbaa !20
  %46 = add nsw i32 %45, 1
  %47 = getelementptr inbounds i32* %nghosts, i64 %indvars.iv10
  %48 = load i32* %47, align 4, !tbaa !20
  %49 = sub i32 %46, %48
  %50 = load i32*** %18, align 8, !tbaa !9
  %51 = getelementptr inbounds i32** %50, i64 %indvars.iv14
  %52 = load i32** %51, align 8, !tbaa !19
  %53 = getelementptr inbounds i32* %52, i64 %indvars.iv10
  store i32 %49, i32* %53, align 4, !tbaa !20
  br i1 %21, label %54, label %56

; <label>:54                                      ; preds = %40
  %55 = add nsw i32 %49, -1
  store i32 %55, i32* %53, align 4, !tbaa !20
  br label %56

; <label>:56                                      ; preds = %40, %54, %35
  %57 = getelementptr inbounds i32* %nprocs, i64 %indvars.iv10
  %58 = load i32* %57, align 4, !tbaa !20
  %59 = add nsw i32 %58, -1
  %60 = icmp eq i32 %33, %59
  br i1 %60, label %61, label %70

; <label>:61                                      ; preds = %56
  %62 = load i32** %13, align 8, !tbaa !14
  %63 = getelementptr inbounds i32* %62, i64 %indvars.iv10
  %64 = load i32* %63, align 4, !tbaa !20
  %65 = add nsw i32 %64, -1
  %66 = load i32*** %19, align 8, !tbaa !10
  %67 = getelementptr inbounds i32** %66, i64 %indvars.iv14
  %68 = load i32** %67, align 8, !tbaa !19
  %69 = getelementptr inbounds i32* %68, i64 %indvars.iv10
  store i32 %65, i32* %69, align 4, !tbaa !20
  br label %PUGH_DecomposeIJK.exit

; <label>:70                                      ; preds = %56
  %71 = add nsw i32 %33, 1
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32** %4, i64 %indvars.iv10
  %74 = load i32** %73, align 8, !tbaa !19
  %75 = getelementptr inbounds i32* %74, i64 %72
  %76 = load i32* %75, align 4, !tbaa !20
  %77 = load i32** %20, align 8, !tbaa !13
  %78 = getelementptr inbounds i32* %77, i64 %indvars.iv10
  %79 = load i32* %78, align 4, !tbaa !20
  %80 = add nsw i32 %79, %76
  %81 = load i32*** %19, align 8, !tbaa !10
  %82 = getelementptr inbounds i32** %81, i64 %indvars.iv14
  %83 = load i32** %82, align 8, !tbaa !19
  %84 = getelementptr inbounds i32* %83, i64 %indvars.iv10
  store i32 %80, i32* %84, align 4, !tbaa !20
  br label %PUGH_DecomposeIJK.exit

PUGH_DecomposeIJK.exit:                           ; preds = %61, %70
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1
  %lftr.wideiv12 = trunc i64 %indvars.iv10 to i32
  %exitcond13 = icmp eq i32 %lftr.wideiv12, %22
  br i1 %exitcond13, label %PUGH_DecomposeIJK.exit._crit_edge, label %.lr.ph4

PUGH_DecomposeIJK.exit._crit_edge:                ; preds = %PUGH_DecomposeIJK.exit, %24, %PUGH_DecomposeIJK.exit.preheader
  %indvars.iv.next15 = add nuw nsw i64 %indvars.iv14, 1
  %lftr.wideiv16 = trunc i64 %indvars.iv14 to i32
  %exitcond17 = icmp eq i32 %lftr.wideiv16, %23
  br i1 %exitcond17, label %.preheader, label %24

; <label>:85                                      ; preds = %85, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %85 ]
  %86 = getelementptr inbounds i32** %4, i64 %indvars.iv
  %87 = bitcast i32** %86 to i8**
  %88 = load i8** %87, align 8, !tbaa !19
  tail call void @free(i8* %88) #8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %11
  br i1 %exitcond, label %._crit_edge, label %85

._crit_edge:                                      ; preds = %85, %.preheader
  tail call void @free(i8* %3) #8
  tail call void @free(i8* %6) #8
  ret i32 0
}
