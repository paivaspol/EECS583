define i32 @PUGH_SetupPGExtrasStaggering(i32 %dim, i32* nocapture readnone %perme, i32 %stagger, i32* nocapture readnone %sh, i32* nocapture readnone %nghosts, i32 %total_procs, i32* nocapture readnone %nprocs, i32 %this_proc, %struct.PGExtras* nocapture readonly %this) #1 {
  %1 = sext i32 %dim to i64
  %2 = shl nsw i64 %1, 2
  %3 = tail call i8* @malloc(i64 %2) #7
  %4 = bitcast i8* %3 to i32*
  %5 = icmp sgt i32 %dim, 0
  br i1 %5, label %.lr.ph17, label %..preheader5_crit_edge38

..preheader5_crit_edge38:                         ; preds = %0
  %.pre = add i32 %dim, -1
  br label %.preheader5

.lr.ph17:                                         ; preds = %0
  %6 = sext i32 %this_proc to i64
  %7 = getelementptr inbounds %struct.PGExtras* %this, i64 0, i32 4
  %8 = load i32*** %7, align 8, !tbaa !10
  %9 = getelementptr inbounds i32** %8, i64 %6
  %10 = load i32** %9, align 8, !tbaa !19
  %11 = getelementptr inbounds %struct.PGExtras* %this, i64 0, i32 1
  %12 = load i32** %11, align 8, !tbaa !14
  %13 = add i32 %dim, -1
  br label %16

.preheader5:                                      ; preds = %16, %..preheader5_crit_edge38
  %.pre-phi = phi i32 [ %.pre, %..preheader5_crit_edge38 ], [ %13, %16 ]
  %14 = shl nsw i32 %dim, 1
  %15 = sext i32 %14 to i64
  br label %.preheader4

; <label>:16                                      ; preds = %16, %.lr.ph17
  %indvars.iv32 = phi i64 [ 0, %.lr.ph17 ], [ %indvars.iv.next33, %16 ]
  %17 = getelementptr inbounds i32* %10, i64 %indvars.iv32
  %18 = load i32* %17, align 4, !tbaa !20
  %19 = getelementptr inbounds i32* %12, i64 %indvars.iv32
  %20 = load i32* %19, align 4, !tbaa !20
  %21 = add nsw i32 %20, -1
  %22 = icmp eq i32 %18, %21
  %23 = zext i1 %22 to i32
  %24 = getelementptr inbounds i32* %4, i64 %indvars.iv32
  store i32 %23, i32* %24, align 4, !tbaa !20
  %indvars.iv.next33 = add nuw nsw i64 %indvars.iv32, 1
  %lftr.wideiv34 = trunc i64 %indvars.iv32 to i32
  %exitcond35 = icmp eq i32 %lftr.wideiv34, %13
  br i1 %exitcond35, label %.preheader5, label %16

.preheader4:                                      ; preds = %._crit_edge13, %.preheader5
  %indvars.iv29 = phi i64 [ 1, %.preheader5 ], [ %indvars.iv.next30, %._crit_edge13 ]
  br i1 %5, label %.preheader2.lr.ph, label %._crit_edge13

.preheader2.lr.ph:                                ; preds = %.preheader4
  %25 = getelementptr inbounds %struct.PGExtras* %this, i64 0, i32 13, i64 %indvars.iv29, i64 1
  br label %.preheader2

.preheader3:                                      ; preds = %68
  br i1 %5, label %.preheader.lr.ph, label %._crit_edge13

.preheader.lr.ph:                                 ; preds = %.preheader3
  %26 = getelementptr inbounds %struct.PGExtras* %this, i64 0, i32 15, i64 %indvars.iv29, i64 0
  %27 = getelementptr inbounds %struct.PGExtras* %this, i64 0, i32 15, i64 %indvars.iv29, i64 1
  br label %.lr.ph10

.preheader2:                                      ; preds = %68, %.preheader2.lr.ph
  %indvars.iv20 = phi i64 [ 0, %.preheader2.lr.ph ], [ %indvars.iv.next21, %68 ]
  br label %.lr.ph

.lr.ph:                                           ; preds = %.preheader2, %._crit_edge
  %indvars.iv18 = phi i64 [ 0, %.preheader2 ], [ %indvars.iv.next19, %._crit_edge ]
  %28 = getelementptr inbounds %struct.PGExtras* %this, i64 0, i32 13, i64 0, i64 %indvars.iv18
  %29 = load i32** %28, align 8, !tbaa !19
  %30 = getelementptr inbounds i32* %29, i64 %indvars.iv20
  %31 = load i32* %30, align 4, !tbaa !20
  %32 = getelementptr inbounds %struct.PGExtras* %this, i64 0, i32 13, i64 %indvars.iv29, i64 %indvars.iv18
  %33 = load i32** %32, align 8, !tbaa !19
  %34 = getelementptr inbounds i32* %33, i64 %indvars.iv20
  store i32 %31, i32* %34, align 4, !tbaa !20
  %35 = getelementptr inbounds %struct.PGExtras* %this, i64 0, i32 15, i64 0, i64 %indvars.iv18
  %36 = load i32*** %35, align 8, !tbaa !19
  %37 = getelementptr inbounds %struct.PGExtras* %this, i64 0, i32 15, i64 %indvars.iv29, i64 %indvars.iv18
  %38 = load i32*** %37, align 8, !tbaa !19
  %39 = getelementptr inbounds %struct.PGExtras* %this, i64 0, i32 14, i64 0, i64 %indvars.iv18
  %40 = load i32*** %39, align 8, !tbaa !19
  %41 = getelementptr inbounds %struct.PGExtras* %this, i64 0, i32 14, i64 %indvars.iv29, i64 %indvars.iv18
  %42 = load i32*** %41, align 8, !tbaa !19
  br label %43

; <label>:43                                      ; preds = %.lr.ph, %43
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %43 ]
  %44 = getelementptr inbounds i32** %36, i64 %indvars.iv
  %45 = load i32** %44, align 8, !tbaa !19
  %46 = getelementptr inbounds i32* %45, i64 %indvars.iv20
  %47 = load i32* %46, align 4, !tbaa !20
  %48 = getelementptr inbounds i32** %38, i64 %indvars.iv
  %49 = load i32** %48, align 8, !tbaa !19
  %50 = getelementptr inbounds i32* %49, i64 %indvars.iv20
  store i32 %47, i32* %50, align 4, !tbaa !20
  %51 = getelementptr inbounds i32** %40, i64 %indvars.iv
  %52 = load i32** %51, align 8, !tbaa !19
  %53 = getelementptr inbounds i32* %52, i64 %indvars.iv20
  %54 = load i32* %53, align 4, !tbaa !20
  %55 = getelementptr inbounds i32** %42, i64 %indvars.iv
  %56 = load i32** %55, align 8, !tbaa !19
  %57 = getelementptr inbounds i32* %56, i64 %indvars.iv20
  store i32 %54, i32* %57, align 4, !tbaa !20
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %58 = icmp slt i64 %indvars.iv.next, %15
  br i1 %58, label %43, label %._crit_edge

._crit_edge:                                      ; preds = %43
  %indvars.iv.next19 = add nuw nsw i64 %indvars.iv18, 1
  %exitcond = icmp eq i64 %indvars.iv.next19, 2
  br i1 %exitcond, label %59, label %.lr.ph

; <label>:59                                      ; preds = %._crit_edge
  %60 = getelementptr inbounds i32* %4, i64 %indvars.iv20
  %61 = load i32* %60, align 4, !tbaa !20
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %68, label %63

; <label>:63                                      ; preds = %59
  %64 = load i32** %25, align 8, !tbaa !19
  %65 = getelementptr inbounds i32* %64, i64 %indvars.iv20
  %66 = load i32* %65, align 4, !tbaa !20
  %67 = add nsw i32 %66, -1
  store i32 %67, i32* %65, align 4, !tbaa !20
  br label %68

; <label>:68                                      ; preds = %59, %63
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  %lftr.wideiv = trunc i64 %indvars.iv20 to i32
  %exitcond22 = icmp eq i32 %lftr.wideiv, %.pre-phi
  br i1 %exitcond22, label %.preheader3, label %.preheader2

.lr.ph10:                                         ; preds = %._crit_edge11, %.preheader.lr.ph
  %indvars.iv27 = phi i64 [ 0, %.preheader.lr.ph ], [ %indvars.iv.next28, %._crit_edge11 ]
  %69 = trunc i64 %indvars.iv27 to i32
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  br label %72

; <label>:72                                      ; preds = %._crit_edge37, %.lr.ph10
  %indvars.iv23 = phi i64 [ 0, %.lr.ph10 ], [ %indvars.iv.next24, %._crit_edge37 ]
  %73 = getelementptr inbounds i32* %4, i64 %indvars.iv23
  %74 = load i32* %73, align 4, !tbaa !20
  %75 = icmp eq i32 %74, 0
  %or.cond = or i1 %71, %75
  %.pre39 = trunc i64 %indvars.iv23 to i32
  br i1 %or.cond, label %._crit_edge37, label %76

; <label>:76                                      ; preds = %72
  %77 = shl nsw i32 %.pre39, 1
  %78 = or i32 %77, 1
  %79 = icmp eq i32 %69, %78
  br i1 %79, label %80, label %._crit_edge37

; <label>:80                                      ; preds = %76
  %81 = load i32*** %26, align 8, !tbaa !19
  %82 = getelementptr inbounds i32** %81, i64 %indvars.iv27
  %83 = load i32** %82, align 8, !tbaa !19
  %84 = getelementptr inbounds i32* %83, i64 %indvars.iv23
  %85 = load i32* %84, align 4, !tbaa !20
  %86 = add nsw i32 %85, -1
  store i32 %86, i32* %84, align 4, !tbaa !20
  %87 = load i32*** %27, align 8, !tbaa !19
  %88 = getelementptr inbounds i32** %87, i64 %indvars.iv27
  %89 = load i32** %88, align 8, !tbaa !19
  %90 = getelementptr inbounds i32* %89, i64 %indvars.iv23
  %91 = load i32* %90, align 4, !tbaa !20
  %92 = add nsw i32 %91, -1
  store i32 %92, i32* %90, align 4, !tbaa !20
  br label %._crit_edge37

._crit_edge37:                                    ; preds = %72, %76, %80
  %indvars.iv.next24 = add nuw nsw i64 %indvars.iv23, 1
  %exitcond26 = icmp eq i32 %.pre39, %.pre-phi
  br i1 %exitcond26, label %._crit_edge11, label %72

._crit_edge11:                                    ; preds = %._crit_edge37
  %indvars.iv.next28 = add nuw nsw i64 %indvars.iv27, 1
  %93 = icmp slt i64 %indvars.iv.next28, %15
  br i1 %93, label %.lr.ph10, label %._crit_edge13

._crit_edge13:                                    ; preds = %._crit_edge11, %.preheader4, %.preheader3
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %exitcond31 = icmp eq i64 %indvars.iv.next30, 4
  br i1 %exitcond31, label %94, label %.preheader4

; <label>:94                                      ; preds = %._crit_edge13
  tail call void @free(i8* %3) #8
  ret i32 0
}
