define i32 @CCTK_StaggerDirIndex(i32 %dir, i32 %si) #1 {
  tail call void @llvm.dbg.value(metadata i32 %dir, i64 0, metadata !73, metadata !169), !dbg !254
  tail call void @llvm.dbg.value(metadata i32 %si, i64 0, metadata !74, metadata !169), !dbg !255
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !77, metadata !169), !dbg !256
  %.b = load i1* @CCTK_StaggerDirIndex.hashed, align 1
  br i1 %.b, label %.preheader, label %1, !dbg !257

; <label>:1                                       ; preds = %0
  store i32 1, i32* getelementptr inbounds ([4 x i32]* @CCTK_StaggerDirIndex.hash, i64 0, i64 0), align 16, !dbg !258, !tbaa !184
  store i32 3, i32* getelementptr inbounds ([4 x i32]* @CCTK_StaggerDirIndex.hash, i64 0, i64 1), align 4, !dbg !261, !tbaa !184
  store i32 9, i32* getelementptr inbounds ([4 x i32]* @CCTK_StaggerDirIndex.hash, i64 0, i64 2), align 8, !dbg !262, !tbaa !184
  store i32 27, i32* getelementptr inbounds ([4 x i32]* @CCTK_StaggerDirIndex.hash, i64 0, i64 3), align 4, !dbg !263, !tbaa !184
  store i1 true, i1* @CCTK_StaggerDirIndex.hashed, align 1
  br label %.preheader, !dbg !264

.preheader:                                       ; preds = %1, %0, %8
  %indvars.iv = phi i64 [ %indvars.iv.next, %8 ], [ 3, %0 ], [ 3, %1 ]
  %.02 = phi i32 [ %9, %8 ], [ %si, %0 ], [ %si, %1 ]
  %2 = getelementptr inbounds [4 x i32]* @CCTK_StaggerDirIndex.hash, i64 0, i64 %indvars.iv, !dbg !265
  %3 = load i32* %2, align 4, !dbg !265, !tbaa !184
  tail call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !75, metadata !169), !dbg !269
  tail call void @llvm.dbg.value(metadata i32 %9, i64 0, metadata !74, metadata !169), !dbg !255
  %4 = trunc i64 %indvars.iv to i32, !dbg !270
  %5 = icmp eq i32 %4, %dir, !dbg !270
  br i1 %5, label %6, label %8, !dbg !272

; <label>:6                                       ; preds = %.preheader
  %7 = sdiv i32 %.02, %3, !dbg !273
  tail call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !77, metadata !169), !dbg !256
  br label %.loopexit, !dbg !274

; <label>:8                                       ; preds = %.preheader
  %9 = srem i32 %.02, %3, !dbg !276
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !277
  %10 = icmp sgt i64 %indvars.iv, 0, !dbg !278
  br i1 %10, label %.preheader, label %.loopexit, !dbg !277

.loopexit:                                        ; preds = %8, %6
  %dsi.0 = phi i32 [ %7, %6 ], [ 0, %8 ]
  ret i32 %dsi.0, !dbg !279
}
