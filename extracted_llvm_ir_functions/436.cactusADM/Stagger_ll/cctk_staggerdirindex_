define void @cctk_staggerdirindex_(i32* nocapture %dsi, i32* nocapture readonly %dir, i32* nocapture readonly %gsi) #1 {
  tail call void @llvm.dbg.value(metadata i32* %dsi, i64 0, metadata !82, metadata !169), !dbg !280
  tail call void @llvm.dbg.value(metadata i32* %dir, i64 0, metadata !83, metadata !169), !dbg !281
  tail call void @llvm.dbg.value(metadata i32* %gsi, i64 0, metadata !84, metadata !169), !dbg !282
  %1 = load i32* %dir, align 4, !dbg !283, !tbaa !184
  %2 = add nsw i32 %1, -1, !dbg !284
  %3 = load i32* %gsi, align 4, !dbg !285, !tbaa !184
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !73, metadata !169), !dbg !286
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !74, metadata !169), !dbg !288
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !77, metadata !169), !dbg !289
  %.b.i = load i1* @CCTK_StaggerDirIndex.hashed, align 1, !dbg !290
  br i1 %.b.i, label %.preheader.i, label %4, !dbg !291

; <label>:4                                       ; preds = %0
  store i32 1, i32* getelementptr inbounds ([4 x i32]* @CCTK_StaggerDirIndex.hash, i64 0, i64 0), align 16, !dbg !292, !tbaa !184
  store i32 3, i32* getelementptr inbounds ([4 x i32]* @CCTK_StaggerDirIndex.hash, i64 0, i64 1), align 4, !dbg !293, !tbaa !184
  store i32 9, i32* getelementptr inbounds ([4 x i32]* @CCTK_StaggerDirIndex.hash, i64 0, i64 2), align 8, !dbg !294, !tbaa !184
  store i32 27, i32* getelementptr inbounds ([4 x i32]* @CCTK_StaggerDirIndex.hash, i64 0, i64 3), align 4, !dbg !295, !tbaa !184
  store i1 true, i1* @CCTK_StaggerDirIndex.hashed, align 1, !dbg !290
  br label %.preheader.i, !dbg !296

.preheader.i:                                     ; preds = %4, %0, %11
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %11 ], [ 3, %0 ], [ 3, %4 ], !dbg !290
  %.02.i = phi i32 [ %12, %11 ], [ %3, %0 ], [ %3, %4 ], !dbg !290
  %5 = getelementptr inbounds [4 x i32]* @CCTK_StaggerDirIndex.hash, i64 0, i64 %indvars.iv.i, !dbg !297
  %6 = load i32* %5, align 4, !dbg !297, !tbaa !184
  %7 = trunc i64 %indvars.iv.i to i32, !dbg !298
  %8 = icmp eq i32 %7, %2, !dbg !298
  br i1 %8, label %9, label %11, !dbg !299

; <label>:9                                       ; preds = %.preheader.i
  %10 = sdiv i32 %.02.i, %6, !dbg !300
  br label %CCTK_StaggerDirIndex.exit, !dbg !301

; <label>:11                                      ; preds = %.preheader.i
  %12 = srem i32 %.02.i, %6, !dbg !302
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1, !dbg !303
  %13 = icmp sgt i64 %indvars.iv.i, 0, !dbg !304
  br i1 %13, label %.preheader.i, label %CCTK_StaggerDirIndex.exit, !dbg !303

CCTK_StaggerDirIndex.exit:                        ; preds = %11, %9
  %dsi.0.i = phi i32 [ %10, %9 ], [ 0, %11 ], !dbg !290
  store i32 %dsi.0.i, i32* %dsi, align 4, !dbg !305, !tbaa !184
  ret void, !dbg !306
}
