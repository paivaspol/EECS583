define i32 @CCTKi_ParseStaggerString(i32 %dim, i8* %imp, i8* %gname, i8* %stype) #1 {
  %hs = alloca [11 x i8], align 1
  tail call void @llvm.dbg.value(metadata i32 %dim, i64 0, metadata !139, metadata !169), !dbg !418
  tail call void @llvm.dbg.value(metadata i8* %imp, i64 0, metadata !140, metadata !169), !dbg !419
  tail call void @llvm.dbg.value(metadata i8* %gname, i64 0, metadata !141, metadata !169), !dbg !420
  tail call void @llvm.dbg.value(metadata i8* %stype, i64 0, metadata !142, metadata !169), !dbg !421
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !145, metadata !169), !dbg !422
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !146, metadata !169), !dbg !423
  tail call void @llvm.dbg.declare(metadata [11 x i8]* %hs, metadata !147, metadata !169), !dbg !424
  %1 = icmp sgt i32 %dim, 10, !dbg !425
  br i1 %1, label %2, label %4, !dbg !427

; <label>:2                                       ; preds = %0
  %3 = tail call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 0, i32 399, i8* getelementptr inbounds ([76 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8]* @.str7, i64 0, i64 0), i32 %dim) #7, !dbg !428
  br label %4, !dbg !430

; <label>:4                                       ; preds = %2, %0
  %5 = tail call i32 @CCTK_Equals(i8* %stype, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0)) #7, !dbg !431
  %6 = icmp eq i32 %5, 0, !dbg !431
  br i1 %6, label %10, label %7, !dbg !433

; <label>:7                                       ; preds = %4
  %8 = getelementptr inbounds [11 x i8]* %hs, i64 0, i64 0, !dbg !434
  %9 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %8, i32 0, i64 11, i8* getelementptr inbounds ([11 x i8]* @.str9, i64 0, i64 0)) #7, !dbg !434
  br label %.preheader, !dbg !436

; <label>:10                                      ; preds = %4
  %11 = tail call i32 @CCTK_Equals(i8* %stype, i8* getelementptr inbounds ([5 x i8]* @.str10, i64 0, i64 0)) #7, !dbg !437
  %12 = icmp eq i32 %11, 0, !dbg !437
  br i1 %12, label %16, label %13, !dbg !439

; <label>:13                                      ; preds = %10
  %14 = getelementptr inbounds [11 x i8]* %hs, i64 0, i64 0, !dbg !440
  %15 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %14, i32 0, i64 11, i8* getelementptr inbounds ([11 x i8]* @.str11, i64 0, i64 0)) #7, !dbg !440
  br label %.preheader, !dbg !442

; <label>:16                                      ; preds = %10
  %17 = tail call i64 @strlen(i8* %stype) #7, !dbg !443
  %18 = trunc i64 %17 to i32, !dbg !446
  %19 = icmp eq i32 %18, %dim, !dbg !447
  br i1 %19, label %22, label %20, !dbg !448

; <label>:20                                      ; preds = %16
  %21 = tail call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 417, i8* getelementptr inbounds ([76 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([77 x i8]* @.str12, i64 0, i64 0), i8* %stype, i8* %gname, i32 %dim) #7, !dbg !449
  br label %22, !dbg !451

; <label>:22                                      ; preds = %16, %20
  %23 = getelementptr inbounds [11 x i8]* %hs, i64 0, i64 0, !dbg !452
  %24 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %23, i32 0, i64 11, i8* getelementptr inbounds ([3 x i8]* @.str4, i64 0, i64 0), i8* %stype) #7, !dbg !452
  br label %.preheader

.preheader:                                       ; preds = %13, %22, %7
  %25 = icmp sgt i32 %dim, 0, !dbg !453
  br i1 %25, label %.lr.ph, label %.loopexit, !dbg !456

.lr.ph:                                           ; preds = %.preheader
  %26 = sext i32 %dim to i64, !dbg !456
  br label %27, !dbg !456

; <label>:27                                      ; preds = %.lr.ph, %36
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %36 ]
  %scode.04 = phi i32 [ 0, %.lr.ph ], [ %38, %36 ]
  %base.03 = phi i32 [ 1, %.lr.ph ], [ %39, %36 ]
  %28 = getelementptr inbounds [11 x i8]* %hs, i64 0, i64 %indvars.iv, !dbg !457
  %29 = load i8* %28, align 1, !dbg !457, !tbaa !232
  %30 = sext i8 %29 to i32, !dbg !457
  call void @llvm.dbg.value(metadata i32 %30, i64 0, metadata !154, metadata !169) #6, !dbg !459
  %31 = call i32 @__toupper(i32 %30) #7, !dbg !461
  switch i32 %31, label %34 [
    i32 77, label %36
    i32 67, label %32
    i32 80, label %33
  ], !dbg !462

; <label>:32                                      ; preds = %27
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !144, metadata !169), !dbg !463
  br label %36, !dbg !464

; <label>:33                                      ; preds = %27
  call void @llvm.dbg.value(metadata i32 2, i64 0, metadata !144, metadata !169), !dbg !463
  br label %36, !dbg !466

; <label>:34                                      ; preds = %27
  %35 = call i32 (i32, i32, i8*, i8*, i8*, ...)* @CCTK_VWarn(i32 1, i32 433, i8* getelementptr inbounds ([76 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8]* @.str13, i64 0, i64 0), i8* %stype, i8* %imp, i8* %gname) #7, !dbg !467
  br label %.loopexit, !dbg !468

; <label>:36                                      ; preds = %27, %33, %32
  %m.0 = phi i32 [ 2, %33 ], [ 1, %32 ], [ 0, %27 ]
  %37 = mul nsw i32 %m.0, %base.03, !dbg !469
  %38 = add nsw i32 %37, %scode.04, !dbg !470
  call void @llvm.dbg.value(metadata i32 %38, i64 0, metadata !146, metadata !169), !dbg !423
  %39 = mul nsw i32 %base.03, 3, !dbg !471
  call void @llvm.dbg.value(metadata i32 %39, i64 0, metadata !145, metadata !169), !dbg !422
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !456
  %40 = icmp slt i64 %indvars.iv.next, %26, !dbg !453
  br i1 %40, label %27, label %.loopexit, !dbg !456

.loopexit:                                        ; preds = %36, %.preheader, %34
  %.0 = phi i32 [ -1, %34 ], [ 0, %.preheader ], [ %38, %36 ]
  ret i32 %.0, !dbg !472
}
