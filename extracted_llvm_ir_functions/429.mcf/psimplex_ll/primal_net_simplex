define i64 @primal_net_simplex(%struct.network* %net) #0 {
while.body.lr.ph:
  %delta = alloca i64, align 8
  %xchange = alloca i64, align 8
  %w = alloca %struct.node*, align 8
  %red_cost_of_bea = alloca i64, align 8
  call void @llvm.dbg.value(metadata !{%struct.network* %net}, i64 0, metadata !83), !dbg !110
  call void @llvm.dbg.declare(metadata !{i64* %delta}, metadata !84), !dbg !111
  call void @llvm.dbg.value(metadata !112, i64 0, metadata !86), !dbg !113
  call void @llvm.dbg.declare(metadata !{i64* %xchange}, metadata !87), !dbg !114
  call void @llvm.dbg.declare(metadata !{%struct.node** %w}, metadata !95), !dbg !115
  %arcs1 = getelementptr inbounds %struct.network* %net, i64 0, i32 23, !dbg !116
  %0 = load %struct.arc** %arcs1, align 8, !dbg !116, !tbaa !117
  call void @llvm.dbg.value(metadata !{%struct.arc* %0}, i64 0, metadata !100), !dbg !116
  %stop_arcs2 = getelementptr inbounds %struct.network* %net, i64 0, i32 24, !dbg !120
  %1 = load %struct.arc** %stop_arcs2, align 8, !dbg !120, !tbaa !117
  call void @llvm.dbg.value(metadata !{%struct.arc* %1}, i64 0, metadata !101), !dbg !120
  %m3 = getelementptr inbounds %struct.network* %net, i64 0, i32 5, !dbg !121
  %2 = load i64* %m3, align 8, !dbg !121, !tbaa !122
  call void @llvm.dbg.value(metadata !{i64 %2}, i64 0, metadata !103), !dbg !121
  call void @llvm.dbg.declare(metadata !{i64* %red_cost_of_bea}, metadata !105), !dbg !123
  %iterations4 = getelementptr inbounds %struct.network* %net, i64 0, i32 27, !dbg !124
  call void @llvm.dbg.value(metadata !{i64* %iterations4}, i64 0, metadata !106), !dbg !124
  %bound_exchanges5 = getelementptr inbounds %struct.network* %net, i64 0, i32 28, !dbg !125
  call void @llvm.dbg.value(metadata !{i64* %bound_exchanges5}, i64 0, metadata !108), !dbg !125
  %checksum6 = getelementptr inbounds %struct.network* %net, i64 0, i32 29, !dbg !126
  call void @llvm.dbg.value(metadata !{i64* %checksum6}, i64 0, metadata !109), !dbg !126
  %feas_tol = getelementptr inbounds %struct.network* %net, i64 0, i32 16, !dbg !127
  br label %while.body, !dbg !131

while.body:                                       ; preds = %if.else24, %if.then13, %if.then52, %if.then22, %while.body.lr.ph
  %call = call %struct.arc* @primal_bea_mpp(i64 %2, %struct.arc* %0, %struct.arc* %1, i64* %red_cost_of_bea) #3, !dbg !132
  call void @llvm.dbg.value(metadata !{%struct.arc* %call}, i64 0, metadata !96), !dbg !132
  %tobool7 = icmp eq %struct.arc* %call, null, !dbg !132
  br i1 %tobool7, label %while.end, label %if.then, !dbg !132

if.then:                                          ; preds = %while.body
  %3 = load i64* %iterations4, align 8, !dbg !133, !tbaa !122
  %inc = add nsw i64 %3, 1, !dbg !133
  store i64 %inc, i64* %iterations4, align 8, !dbg !133, !tbaa !122
  call void @llvm.dbg.value(metadata !{i64* %red_cost_of_bea}, i64 0, metadata !105), !dbg !134
  %4 = load i64* %red_cost_of_bea, align 8, !dbg !134, !tbaa !122
  %cmp = icmp sgt i64 %4, 0, !dbg !134
  br i1 %cmp, label %if.then8, label %if.else, !dbg !134

if.then8:                                         ; preds = %if.then
  %head = getelementptr inbounds %struct.arc* %call, i64 0, i32 2, !dbg !135
  %tail = getelementptr inbounds %struct.arc* %call, i64 0, i32 1, !dbg !137
  br label %if.end, !dbg !138

if.else:                                          ; preds = %if.then
  %tail9 = getelementptr inbounds %struct.arc* %call, i64 0, i32 1, !dbg !139
  %head10 = getelementptr inbounds %struct.arc* %call, i64 0, i32 2, !dbg !141
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  %jplus.0.in = phi %struct.node** [ %tail, %if.then8 ], [ %head10, %if.else ]
  %iplus.0.in = phi %struct.node** [ %head, %if.then8 ], [ %tail9, %if.else ]
  %iplus.0 = load %struct.node** %iplus.0.in, align 8, !dbg !135
  %jplus.0 = load %struct.node** %jplus.0.in, align 8, !dbg !137
  call void @llvm.dbg.value(metadata !142, i64 0, metadata !84), !dbg !143
  store i64 1, i64* %delta, align 8, !dbg !143, !tbaa !122
  %call11 = call %struct.node* @primal_iminus(i64* %delta, i64* %xchange, %struct.node* %iplus.0, %struct.node* %jplus.0, %struct.node** %w) #3, !dbg !144
  call void @llvm.dbg.value(metadata !{%struct.node* %call11}, i64 0, metadata !93), !dbg !144
  %tobool12 = icmp eq %struct.node* %call11, null, !dbg !145
  br i1 %tobool12, label %if.then13, label %if.else24, !dbg !145

if.then13:                                        ; preds = %if.end
  %5 = load i64* %bound_exchanges5, align 8, !dbg !146, !tbaa !122
  %inc14 = add nsw i64 %5, 1, !dbg !146
  store i64 %inc14, i64* %bound_exchanges5, align 8, !dbg !146, !tbaa !122
  %ident = getelementptr inbounds %struct.arc* %call, i64 0, i32 3, !dbg !148
  %6 = load i32* %ident, align 4, !dbg !148, !tbaa !149
  %cmp15 = icmp eq i32 %6, 2, !dbg !148
  %. = select i1 %cmp15, i32 1, i32 2, !dbg !150
  store i32 %., i32* %ident, align 4, !dbg !150, !tbaa !149
  call void @llvm.dbg.value(metadata !{i64* %delta}, i64 0, metadata !84), !dbg !151
  %7 = load i64* %delta, align 8, !dbg !151, !tbaa !122
  %tobool21 = icmp eq i64 %7, 0, !dbg !151
  br i1 %tobool21, label %while.body, label %if.then22, !dbg !151

if.then22:                                        ; preds = %if.then13
  call void @llvm.dbg.value(metadata !{%struct.node** %w}, i64 0, metadata !95), !dbg !152
  %8 = load %struct.node** %w, align 8, !dbg !152, !tbaa !117
  call void @primal_update_flow(%struct.node* %iplus.0, %struct.node* %jplus.0, %struct.node* %8) #3, !dbg !152
  br label %while.body, !dbg !152

if.else24:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata !{i64* %xchange}, i64 0, metadata !87), !dbg !153
  %9 = load i64* %xchange, align 8, !dbg !153, !tbaa !122
  %tobool25 = icmp eq i64 %9, 0, !dbg !153
  call void @llvm.dbg.value(metadata !{%struct.node* %jplus.0}, i64 0, metadata !102), !dbg !154
  call void @llvm.dbg.value(metadata !{%struct.node* %iplus.0}, i64 0, metadata !92), !dbg !156
  call void @llvm.dbg.value(metadata !{%struct.node* %jplus.0}, i64 0, metadata !89), !dbg !157
  %jplus.0.iplus.0 = select i1 %tobool25, %struct.node* %jplus.0, %struct.node* %iplus.0, !dbg !153
  %iplus.0.jplus.0 = select i1 %tobool25, %struct.node* %iplus.0, %struct.node* %jplus.0, !dbg !153
  %pred = getelementptr inbounds %struct.node* %call11, i64 0, i32 3, !dbg !158
  %10 = load %struct.node** %pred, align 8, !dbg !158, !tbaa !117
  call void @llvm.dbg.value(metadata !{%struct.node* %10}, i64 0, metadata !94), !dbg !158
  %basic_arc = getelementptr inbounds %struct.node* %call11, i64 0, i32 6, !dbg !159
  %11 = load %struct.arc** %basic_arc, align 8, !dbg !159, !tbaa !117
  call void @llvm.dbg.value(metadata !{%struct.arc* %11}, i64 0, metadata !99), !dbg !159
  call void @llvm.dbg.value(metadata !{i64* %xchange}, i64 0, metadata !87), !dbg !160
  %orientation = getelementptr inbounds %struct.node* %call11, i64 0, i32 1, !dbg !160
  %12 = load i32* %orientation, align 4, !dbg !160, !tbaa !149
  %conv = sext i32 %12 to i64, !dbg !160
  %cmp28 = icmp eq i64 %9, %conv, !dbg !160
  call void @llvm.dbg.value(metadata !161, i64 0, metadata !104), !dbg !162
  %new_set.0 = select i1 %cmp28, i32 2, i32 1, !dbg !160
  call void @llvm.dbg.value(metadata !{i64* %red_cost_of_bea}, i64 0, metadata !105), !dbg !163
  %13 = load i64* %red_cost_of_bea, align 8, !dbg !163, !tbaa !122
  %cmp33 = icmp sgt i64 %13, 0, !dbg !163
  call void @llvm.dbg.value(metadata !{i64* %delta}, i64 0, metadata !84), !dbg !164
  %14 = load i64* %delta, align 8, !dbg !164, !tbaa !122
  %sub = sub nsw i64 1, %14, !dbg !164
  call void @llvm.dbg.value(metadata !{i64 %sub}, i64 0, metadata !85), !dbg !164
  %new_flow.0 = select i1 %cmp33, i64 %sub, i64 %14, !dbg !163
  %tail38 = getelementptr inbounds %struct.arc* %call, i64 0, i32 1, !dbg !165
  %15 = load %struct.node** %tail38, align 8, !dbg !165, !tbaa !117
  %cmp39 = icmp eq %struct.node* %15, %iplus.0.jplus.0, !dbg !165
  %.92 = zext i1 %cmp39 to i64, !dbg !166
  call void @llvm.dbg.value(metadata !{i64* %xchange}, i64 0, metadata !87), !dbg !127
  %conv46 = zext i1 %tobool25 to i64, !dbg !127
  call void @llvm.dbg.value(metadata !{i64* %delta}, i64 0, metadata !84), !dbg !127
  call void @llvm.dbg.value(metadata !{%struct.node** %w}, i64 0, metadata !95), !dbg !127
  %16 = load %struct.node** %w, align 8, !dbg !127, !tbaa !117
  call void @llvm.dbg.value(metadata !{i64* %red_cost_of_bea}, i64 0, metadata !105), !dbg !127
  %17 = load i64* %feas_tol, align 8, !dbg !127, !tbaa !122
  call void @update_tree(i64 %conv46, i64 %.92, i64 %14, i64 %new_flow.0, %struct.node* %iplus.0.jplus.0, %struct.node* %jplus.0.iplus.0, %struct.node* %call11, %struct.node* %10, %struct.node* %16, %struct.arc* %call, i64 %13, i64 %17) #3, !dbg !127
  %ident47 = getelementptr inbounds %struct.arc* %call, i64 0, i32 3, !dbg !167
  store i32 0, i32* %ident47, align 4, !dbg !167, !tbaa !149
  %ident49 = getelementptr inbounds %struct.arc* %11, i64 0, i32 3, !dbg !168
  store i32 %new_set.0, i32* %ident49, align 4, !dbg !168, !tbaa !149
  %18 = load i64* %iterations4, align 8, !dbg !169, !tbaa !122
  %sub50 = add nsw i64 %18, -1, !dbg !169
  %rem = srem i64 %sub50, 200, !dbg !169
  %tobool51 = icmp eq i64 %rem, 0, !dbg !169
  br i1 %tobool51, label %if.then52, label %while.body, !dbg !169

if.then52:                                        ; preds = %if.else24
  %call53 = call i64 @refresh_potential(%struct.network* %net) #3, !dbg !170
  %19 = load i64* %checksum6, align 8, !dbg !170, !tbaa !122
  %add = add nsw i64 %19, %call53, !dbg !170
  store i64 %add, i64* %checksum6, align 8, !dbg !170, !tbaa !122
  br label %while.body, !dbg !172

while.end:                                        ; preds = %while.body
  %call58 = call i64 @refresh_potential(%struct.network* %net) #3, !dbg !173
  %20 = load i64* %checksum6, align 8, !dbg !173, !tbaa !122
  %add59 = add nsw i64 %20, %call58, !dbg !173
  store i64 %add59, i64* %checksum6, align 8, !dbg !173, !tbaa !122
  %call60 = call i64 @primal_feasible(%struct.network* %net) #3, !dbg !174
  %call61 = call i64 @dual_feasible(%struct.network* %net) #3, !dbg !175
  ret i64 0, !dbg !176
}
