define void @sort_basket(i64 %min, i64 %max) #1 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.end22, %entry
  %min.tr = phi i64 [ %min, %entry ], [ %l.0.inc, %if.end22 ]
  tail call void @llvm.dbg.value(metadata !{i64 %min.tr}, i64 0, metadata !52), !dbg !96
  tail call void @llvm.dbg.value(metadata !{i64 %max}, i64 0, metadata !53), !dbg !96
  tail call void @llvm.dbg.value(metadata !{i64 %min.tr}, i64 0, metadata !54), !dbg !97
  tail call void @llvm.dbg.value(metadata !{i64 %max}, i64 0, metadata !55), !dbg !97
  %add = add nsw i64 %min.tr, %max, !dbg !98
  %div = sdiv i64 %add, 2, !dbg !98
  %arrayidx = getelementptr inbounds [351 x %struct.basket*]* @perm, i64 0, i64 %div, !dbg !98
  %0 = load %struct.basket** %arrayidx, align 8, !dbg !98, !tbaa !99
  %abs_cost = getelementptr inbounds %struct.basket* %0, i64 0, i32 2, !dbg !98
  %1 = load i64* %abs_cost, align 8, !dbg !98, !tbaa !100
  tail call void @llvm.dbg.value(metadata !{i64 %1}, i64 0, metadata !56), !dbg !98
  br label %while.cond.outer, !dbg !101

while.cond.outer:                                 ; preds = %if.end, %tailrecurse
  %r.0.ph = phi i64 [ %max, %tailrecurse ], [ %r.1.dec, %if.end ]
  %l.0.ph = phi i64 [ %min.tr, %tailrecurse ], [ %l.0.inc, %if.end ]
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %while.cond.outer
  %l.0 = phi i64 [ %inc, %while.cond ], [ %l.0.ph, %while.cond.outer ]
  %arrayidx1 = getelementptr inbounds [351 x %struct.basket*]* @perm, i64 0, i64 %l.0, !dbg !102
  %2 = load %struct.basket** %arrayidx1, align 8, !dbg !102, !tbaa !99
  %abs_cost2 = getelementptr inbounds %struct.basket* %2, i64 0, i32 2, !dbg !102
  %3 = load i64* %abs_cost2, align 8, !dbg !102, !tbaa !100
  %cmp = icmp sgt i64 %3, %1, !dbg !102
  %inc = add nsw i64 %l.0, 1, !dbg !104
  tail call void @llvm.dbg.value(metadata !{i64 %inc}, i64 0, metadata !54), !dbg !104
  br i1 %cmp, label %while.cond, label %while.cond3, !dbg !102

while.cond3:                                      ; preds = %while.cond, %while.cond3
  %r.1 = phi i64 [ %dec, %while.cond3 ], [ %r.0.ph, %while.cond ]
  %arrayidx4 = getelementptr inbounds [351 x %struct.basket*]* @perm, i64 0, i64 %r.1, !dbg !105
  %4 = load %struct.basket** %arrayidx4, align 8, !dbg !105, !tbaa !99
  %abs_cost5 = getelementptr inbounds %struct.basket* %4, i64 0, i32 2, !dbg !105
  %5 = load i64* %abs_cost5, align 8, !dbg !105, !tbaa !100
  %cmp6 = icmp sgt i64 %1, %5, !dbg !105
  %dec = add nsw i64 %r.1, -1, !dbg !106
  tail call void @llvm.dbg.value(metadata !{i64 %dec}, i64 0, metadata !55), !dbg !106
  br i1 %cmp6, label %while.cond3, label %while.end8, !dbg !105

while.end8:                                       ; preds = %while.cond3
  %cmp9 = icmp slt i64 %l.0, %r.1, !dbg !107
  br i1 %cmp9, label %if.then, label %if.end, !dbg !107

if.then:                                          ; preds = %while.end8
  tail call void @llvm.dbg.value(metadata !{%struct.basket* %2}, i64 0, metadata !57), !dbg !108
  store %struct.basket* %4, %struct.basket** %arrayidx1, align 8, !dbg !110, !tbaa !99
  store %struct.basket* %2, %struct.basket** %arrayidx4, align 8, !dbg !111, !tbaa !99
  br label %if.end, !dbg !112

if.end:                                           ; preds = %if.then, %while.end8
  %cmp14 = icmp sgt i64 %l.0, %r.1, !dbg !113
  tail call void @llvm.dbg.value(metadata !{i64 %inc}, i64 0, metadata !54), !dbg !114
  tail call void @llvm.dbg.value(metadata !{i64 %dec}, i64 0, metadata !55), !dbg !114
  %r.1.dec = select i1 %cmp14, i64 %r.1, i64 %dec, !dbg !113
  %l.0.inc = select i1 %cmp14, i64 %l.0, i64 %inc, !dbg !113
  %cmp19 = icmp sgt i64 %l.0.inc, %r.1.dec, !dbg !116
  br i1 %cmp19, label %do.end, label %while.cond.outer, !dbg !116

do.end:                                           ; preds = %if.end
  %cmp20 = icmp sgt i64 %r.1.dec, %min.tr, !dbg !117
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !117

if.then21:                                        ; preds = %do.end
  tail call void @sort_basket(i64 %min.tr, i64 %r.1.dec) #3, !dbg !118
  br label %if.end22, !dbg !118

if.end22:                                         ; preds = %if.then21, %do.end
  %cmp23 = icmp slt i64 %l.0.inc, %max, !dbg !119
  %cmp24 = icmp slt i64 %l.0.inc, 51, !dbg !119
  %or.cond = and i1 %cmp23, %cmp24, !dbg !119
  br i1 %or.cond, label %tailrecurse, label %if.end26, !dbg !119

if.end26:                                         ; preds = %if.end22
  ret void, !dbg !120
}
