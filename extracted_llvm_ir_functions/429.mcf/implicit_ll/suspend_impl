define i64 @suspend_impl(%struct.network* %net, i64 %threshold, i64 %all) #0 {
  tail call void @llvm.dbg.value(metadata %struct.network* %net, i64 0, metadata !147, metadata !159), !dbg !524
  tail call void @llvm.dbg.value(metadata i64 %threshold, i64 0, metadata !148, metadata !159), !dbg !525
  tail call void @llvm.dbg.value(metadata i64 %all, i64 0, metadata !149, metadata !159), !dbg !526
  %1 = icmp eq i64 %all, 0, !dbg !527
  br i1 %1, label %5, label %2, !dbg !529

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.network* %net, i64 0, i32 7, !dbg !530
  %4 = load i64* %3, align 8, !dbg !530, !tbaa !519
  tail call void @llvm.dbg.value(metadata i64 %4, i64 0, metadata !150, metadata !159), !dbg !531
  br label %.loopexit, !dbg !532

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.network* %net, i64 0, i32 24, !dbg !533
  %7 = load %struct.arc** %6, align 8, !dbg !533, !tbaa !203
  %8 = getelementptr inbounds %struct.network* %net, i64 0, i32 5, !dbg !535
  %9 = load i64* %8, align 8, !dbg !535, !tbaa !199
  %10 = getelementptr inbounds %struct.network* %net, i64 0, i32 7, !dbg !536
  %11 = load i64* %10, align 8, !dbg !536, !tbaa !519
  %12 = sub nsw i64 %9, %11, !dbg !537
  %13 = getelementptr inbounds %struct.network* %net, i64 0, i32 23, !dbg !538
  %14 = load %struct.arc** %13, align 8, !dbg !538, !tbaa !177
  %15 = getelementptr inbounds %struct.arc* %14, i64 %12, !dbg !539
  tail call void @llvm.dbg.value(metadata %struct.arc* %15, i64 0, metadata !152, metadata !159), !dbg !540
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !150, metadata !159), !dbg !531
  tail call void @llvm.dbg.value(metadata %struct.arc* %15, i64 0, metadata !153, metadata !159), !dbg !541
  %16 = icmp ult %struct.arc* %15, %7, !dbg !542
  br i1 %16, label %.lr.ph, label %.loopexit.thread, !dbg !545

.lr.ph:                                           ; preds = %5, %51
  %susp.03 = phi i64 [ %susp.1, %51 ], [ 0, %5 ]
  %arc.02 = phi %struct.arc* [ %52, %51 ], [ %15, %5 ]
  %new_arc.01 = phi %struct.arc* [ %new_arc.1, %51 ], [ %15, %5 ]
  %17 = getelementptr inbounds %struct.arc* %arc.02, i64 0, i32 3, !dbg !546
  %18 = load i32* %17, align 4, !dbg !546, !tbaa !389
  switch i32 %18, label %43 [
    i32 1, label %19
    i32 0, label %32
  ], !dbg !549

; <label>:19                                      ; preds = %.lr.ph
  %20 = getelementptr inbounds %struct.arc* %arc.02, i64 0, i32 0, !dbg !550
  %21 = load i64* %20, align 8, !dbg !550, !tbaa !249
  %22 = getelementptr inbounds %struct.arc* %arc.02, i64 0, i32 1, !dbg !551
  %23 = load %struct.node** %22, align 8, !dbg !551, !tbaa !239
  %24 = getelementptr inbounds %struct.node* %23, i64 0, i32 0, !dbg !552
  %25 = load i64* %24, align 8, !dbg !552, !tbaa !451
  %26 = sub i64 %21, %25, !dbg !553
  %27 = getelementptr inbounds %struct.arc* %arc.02, i64 0, i32 2, !dbg !554
  %28 = load %struct.node** %27, align 8, !dbg !554, !tbaa !243
  %29 = getelementptr inbounds %struct.node* %28, i64 0, i32 0, !dbg !555
  %30 = load i64* %29, align 8, !dbg !555, !tbaa !451
  %31 = add nsw i64 %26, %30, !dbg !556
  tail call void @llvm.dbg.value(metadata i64 %31, i64 0, metadata !151, metadata !159), !dbg !557
  br label %43, !dbg !558

; <label>:32                                      ; preds = %.lr.ph
  %33 = getelementptr inbounds %struct.arc* %arc.02, i64 0, i32 1, !dbg !559
  %34 = load %struct.node** %33, align 8, !dbg !559, !tbaa !239
  %35 = getelementptr inbounds %struct.node* %34, i64 0, i32 6, !dbg !564
  %36 = load %struct.arc** %35, align 8, !dbg !564, !tbaa !224
  %37 = icmp eq %struct.arc* %36, %arc.02, !dbg !565
  br i1 %37, label %38, label %39, !dbg !566

; <label>:38                                      ; preds = %32
  store %struct.arc* %new_arc.01, %struct.arc** %35, align 8, !dbg !567, !tbaa !224
  br label %43, !dbg !568

; <label>:39                                      ; preds = %32
  %40 = getelementptr inbounds %struct.arc* %arc.02, i64 0, i32 2, !dbg !569
  %41 = load %struct.node** %40, align 8, !dbg !569, !tbaa !243
  %42 = getelementptr inbounds %struct.node* %41, i64 0, i32 6, !dbg !570
  store %struct.arc* %new_arc.01, %struct.arc** %42, align 8, !dbg !571, !tbaa !224
  br label %43

; <label>:43                                      ; preds = %.lr.ph, %39, %38, %19
  %red_cost.0 = phi i64 [ %31, %19 ], [ -2, %38 ], [ -2, %39 ], [ -2, %.lr.ph ]
  %44 = icmp sgt i64 %red_cost.0, %threshold, !dbg !572
  br i1 %44, label %45, label %47, !dbg !574

; <label>:45                                      ; preds = %43
  %46 = add nsw i64 %susp.03, 1, !dbg !575
  tail call void @llvm.dbg.value(metadata i64 %46, i64 0, metadata !150, metadata !159), !dbg !531
  br label %51, !dbg !576

; <label>:47                                      ; preds = %43
  %48 = bitcast %struct.arc* %new_arc.01 to i8*, !dbg !577
  %49 = bitcast %struct.arc* %arc.02 to i8*, !dbg !577
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 64, i32 8, i1 false), !dbg !577, !tbaa.struct !579
  %50 = getelementptr inbounds %struct.arc* %new_arc.01, i64 1, !dbg !582
  tail call void @llvm.dbg.value(metadata %struct.arc* %50, i64 0, metadata !152, metadata !159), !dbg !540
  br label %51

; <label>:51                                      ; preds = %45, %47
  %new_arc.1 = phi %struct.arc* [ %new_arc.01, %45 ], [ %50, %47 ]
  %susp.1 = phi i64 [ %46, %45 ], [ %susp.03, %47 ]
  %52 = getelementptr inbounds %struct.arc* %arc.02, i64 1, !dbg !583
  tail call void @llvm.dbg.value(metadata %struct.arc* %52, i64 0, metadata !153, metadata !159), !dbg !541
  %53 = icmp ult %struct.arc* %52, %7, !dbg !542
  br i1 %53, label %.lr.ph, label %.loopexit, !dbg !545

.loopexit:                                        ; preds = %51, %2
  %susp.2 = phi i64 [ %4, %2 ], [ %susp.1, %51 ]
  %54 = icmp eq i64 %susp.2, 0, !dbg !584
  br i1 %54, label %.loopexit.thread, label %55, !dbg !586

; <label>:55                                      ; preds = %.loopexit
  %56 = getelementptr inbounds %struct.network* %net, i64 0, i32 5, !dbg !587
  %57 = load i64* %56, align 8, !dbg !589, !tbaa !199
  %58 = sub nsw i64 %57, %susp.2, !dbg !589
  store i64 %58, i64* %56, align 8, !dbg !589, !tbaa !199
  %59 = getelementptr inbounds %struct.network* %net, i64 0, i32 7, !dbg !590
  %60 = load i64* %59, align 8, !dbg !591, !tbaa !519
  %61 = sub nsw i64 %60, %susp.2, !dbg !591
  store i64 %61, i64* %59, align 8, !dbg !591, !tbaa !519
  %62 = getelementptr inbounds %struct.network* %net, i64 0, i32 24, !dbg !592
  %63 = load %struct.arc** %62, align 8, !dbg !593, !tbaa !203
  %64 = sub i64 0, %susp.2, !dbg !593
  %65 = getelementptr inbounds %struct.arc* %63, i64 %64, !dbg !593
  store %struct.arc* %65, %struct.arc** %62, align 8, !dbg !593, !tbaa !203
  %66 = getelementptr inbounds %struct.network* %net, i64 0, i32 8, !dbg !594
  %67 = load i64* %66, align 8, !dbg !595, !tbaa !175
  %68 = add nsw i64 %67, %susp.2, !dbg !595
  store i64 %68, i64* %66, align 8, !dbg !595, !tbaa !175
  tail call void @refresh_neighbour_lists(%struct.network* %net) #7, !dbg !596
  br label %.loopexit.thread, !dbg !597

.loopexit.thread:                                 ; preds = %5, %.loopexit, %55
  %susp.24 = phi i64 [ 0, %.loopexit ], [ %susp.2, %55 ], [ 0, %5 ]
  ret i64 %susp.24, !dbg !598
}
