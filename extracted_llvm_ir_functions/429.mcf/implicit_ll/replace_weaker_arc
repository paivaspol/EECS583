define void @replace_weaker_arc(%struct.network* nocapture %net, %struct.arc* nocapture %new, %struct.node* %tail, %struct.node* %head, i64 %cost, i64 %red_cost) #0 {
entry:
  %tail1 = getelementptr inbounds %struct.arc* %new, i64 0, i32 1
  store %struct.node* %tail, %struct.node** %tail1, align 8, !tbaa !3
  %head3 = getelementptr inbounds %struct.arc* %new, i64 0, i32 2
  store %struct.node* %head, %struct.node** %head3, align 8, !tbaa !3
  %org_cost = getelementptr inbounds %struct.arc* %new, i64 0, i32 7
  store i64 %cost, i64* %org_cost, align 8, !tbaa !0
  %cost6 = getelementptr inbounds %struct.arc* %new, i64 0, i32 0
  store i64 %cost, i64* %cost6, align 8, !tbaa !0
  %flow = getelementptr inbounds %struct.arc* %new, i64 0, i32 6
  store i64 %red_cost, i64* %flow, align 8, !tbaa !0
  %flow9 = getelementptr inbounds %struct.arc* %new, i64 1, i32 6
  %0 = load i64* %flow9, align 8, !tbaa !0
  %flow11 = getelementptr inbounds %struct.arc* %new, i64 2, i32 6
  %1 = load i64* %flow11, align 8, !tbaa !0
  %cmp12 = icmp sgt i64 %0, %1
  %conv = select i1 %cmp12, i64 2, i64 3
  %max_residual_new_m = getelementptr inbounds %struct.network* %net, i64 0, i32 8
  %2 = load i64* %max_residual_new_m, align 8, !tbaa !0
  %cmp13130 = icmp sgt i64 %conv, %2
  br i1 %cmp13130, label %while.end, label %land.rhs

land.rhs:                                         ; preds = %entry, %while.cond.backedge
  %cmp.0132 = phi i64 [ %cmp.0.be, %while.cond.backedge ], [ %conv, %entry ]
  %pos.0131 = phi i64 [ %cmp.0132, %while.cond.backedge ], [ 1, %entry ]
  %sub = add nsw i64 %cmp.0132, -1
  %flow16 = getelementptr inbounds %struct.arc* %new, i64 %sub, i32 6
  %3 = load i64* %flow16, align 8, !tbaa !0
  %cmp17 = icmp sgt i64 %3, %red_cost
  br i1 %cmp17, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %tail21 = getelementptr inbounds %struct.arc* %new, i64 %sub, i32 1
  %4 = load %struct.node** %tail21, align 8, !tbaa !3
  %sub22 = add nsw i64 %pos.0131, -1
  %tail24 = getelementptr inbounds %struct.arc* %new, i64 %sub22, i32 1
  store %struct.node* %4, %struct.node** %tail24, align 8, !tbaa !3
  %head27 = getelementptr inbounds %struct.arc* %new, i64 %sub, i32 2
  %5 = load %struct.node** %head27, align 8, !tbaa !3
  %head30 = getelementptr inbounds %struct.arc* %new, i64 %sub22, i32 2
  store %struct.node* %5, %struct.node** %head30, align 8, !tbaa !3
  %cost33 = getelementptr inbounds %struct.arc* %new, i64 %sub, i32 0
  %6 = load i64* %cost33, align 8, !tbaa !0
  %cost36 = getelementptr inbounds %struct.arc* %new, i64 %sub22, i32 0
  store i64 %6, i64* %cost36, align 8, !tbaa !0
  %7 = load i64* %cost33, align 8, !tbaa !0
  %org_cost42 = getelementptr inbounds %struct.arc* %new, i64 %sub22, i32 7
  store i64 %7, i64* %org_cost42, align 8, !tbaa !0
  %flow48 = getelementptr inbounds %struct.arc* %new, i64 %sub22, i32 6
  store i64 %3, i64* %flow48, align 8, !tbaa !0
  store %struct.node* %tail, %struct.node** %tail21, align 8, !tbaa !3
  store %struct.node* %head, %struct.node** %head27, align 8, !tbaa !3
  store i64 %cost, i64* %cost33, align 8, !tbaa !0
  %org_cost60 = getelementptr inbounds %struct.arc* %new, i64 %sub, i32 7
  store i64 %cost, i64* %org_cost60, align 8, !tbaa !0
  store i64 %red_cost, i64* %flow16, align 8, !tbaa !0
  %mul = shl nsw i64 %cmp.0132, 1
  %add129 = or i64 %mul, 1
  %8 = load i64* %max_residual_new_m, align 8, !tbaa !0
  %cmp65 = icmp sgt i64 %add129, %8
  br i1 %cmp65, label %while.cond.backedge, label %if.then

while.cond.backedge:                              ; preds = %while.body, %if.then
  %cmp.0.be = phi i64 [ %mul, %while.body ], [ %add129.mul, %if.then ]
  %cmp13 = icmp sgt i64 %cmp.0.be, %8
  br i1 %cmp13, label %while.end, label %land.rhs

if.then:                                          ; preds = %while.body
  %sub67 = add nsw i64 %mul, -1
  %flow69 = getelementptr inbounds %struct.arc* %new, i64 %sub67, i32 6
  %9 = load i64* %flow69, align 8, !tbaa !0
  %flow71 = getelementptr inbounds %struct.arc* %new, i64 %mul, i32 6
  %10 = load i64* %flow71, align 8, !tbaa !0
  %cmp72 = icmp slt i64 %9, %10
  %add129.mul = select i1 %cmp72, i64 %add129, i64 %mul
  br label %while.cond.backedge

while.end:                                        ; preds = %while.cond.backedge, %land.rhs, %entry
  ret void
}
