define i64 @write_circulations(i8* nocapture %outfile, %struct.network* %net) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %outfile}, i64 0, metadata !84), !dbg !147
  tail call void @llvm.dbg.value(metadata !{%struct.network* %net}, i64 0, metadata !85), !dbg !148
  tail call void @llvm.dbg.value(metadata !149, i64 0, metadata !86), !dbg !150
  %stop_arcs = getelementptr inbounds %struct.network* %net, i64 0, i32 24, !dbg !151
  %0 = load %struct.arc** %stop_arcs, align 8, !dbg !151, !tbaa !152
  %m_impl = getelementptr inbounds %struct.network* %net, i64 0, i32 7, !dbg !151
  %1 = load i64* %m_impl, align 8, !dbg !151, !tbaa !155
  %idx.neg = sub i64 0, %1, !dbg !151
  %add.ptr = getelementptr inbounds %struct.arc* %0, i64 %idx.neg, !dbg !151
  tail call void @llvm.dbg.value(metadata !{%struct.arc* %add.ptr}, i64 0, metadata !146), !dbg !151
  %call = tail call %struct._IO_FILE* @fopen(i8* %outfile, i8* getelementptr inbounds ([2 x i8]* @.str, i64 0, i64 0)) #5, !dbg !156
  tail call void @llvm.dbg.value(metadata !{%struct._IO_FILE* %call}, i64 0, metadata !86), !dbg !156
  %cmp = icmp eq %struct._IO_FILE* %call, null, !dbg !156
  br i1 %cmp, label %return, label %if.end, !dbg !156

if.end:                                           ; preds = %entry
  tail call void @refresh_neighbour_lists(%struct.network* %net) #5, !dbg !157
  %n = getelementptr inbounds %struct.network* %net, i64 0, i32 2, !dbg !158
  %2 = load i64* %n, align 8, !dbg !158, !tbaa !155
  %nodes = getelementptr inbounds %struct.network* %net, i64 0, i32 21, !dbg !158
  %3 = load %struct.node** %nodes, align 8, !dbg !158, !tbaa !152
  %firstout = getelementptr inbounds %struct.node* %3, i64 %2, i32 7, !dbg !158
  %block.060 = load %struct.arc** %firstout, align 8, !dbg !158
  %tobool61 = icmp eq %struct.arc* %block.060, null, !dbg !158
  br i1 %tobool61, label %for.end32, label %for.body.lr.ph, !dbg !158

for.body.lr.ph:                                   ; preds = %if.end
  %n_trips = getelementptr inbounds %struct.network* %net, i64 0, i32 3, !dbg !160
  br label %for.body, !dbg !158

for.body:                                         ; preds = %for.body.lr.ph, %for.inc30
  %block.062 = phi %struct.arc* [ %block.060, %for.body.lr.ph ], [ %block.0, %for.inc30 ]
  %flow = getelementptr inbounds %struct.arc* %block.062, i64 0, i32 6, !dbg !164
  %4 = load i64* %flow, align 8, !dbg !164, !tbaa !155
  %tobool1 = icmp eq i64 %4, 0, !dbg !164
  br i1 %tobool1, label %for.inc30, label %if.then2, !dbg !164

if.then2:                                         ; preds = %for.body
  %5 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str1, i64 0, i64 0), i64 3, i64 1, %struct._IO_FILE* %call), !dbg !165
  tail call void @llvm.dbg.value(metadata !{%struct.arc* %block.062}, i64 0, metadata !144), !dbg !166
  %tobool458 = icmp eq %struct.arc* %block.062, null, !dbg !167
  br i1 %tobool458, label %for.inc30, label %while.body, !dbg !167

while.body:                                       ; preds = %if.then2, %if.end23
  %arc.059 = phi %struct.arc* [ %.arc2.0, %if.end23 ], [ %block.062, %if.then2 ]
  %cmp5 = icmp ult %struct.arc* %arc.059, %add.ptr, !dbg !168
  br i1 %cmp5, label %if.end8, label %if.then6, !dbg !168

if.then6:                                         ; preds = %while.body
  %6 = tail call i64 @fwrite(i8* getelementptr inbounds ([5 x i8]* @.str2, i64 0, i64 0), i64 4, i64 1, %struct._IO_FILE* %call), !dbg !169
  br label %if.end8, !dbg !169

if.end8:                                          ; preds = %while.body, %if.then6
  %head = getelementptr inbounds %struct.arc* %arc.059, i64 0, i32 2, !dbg !170
  %7 = load %struct.node** %head, align 8, !dbg !170, !tbaa !152
  %number = getelementptr inbounds %struct.node* %7, i64 0, i32 12, !dbg !170
  %8 = load i32* %number, align 4, !dbg !170, !tbaa !171
  %sub = sub nsw i32 0, %8, !dbg !170
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([4 x i8]* @.str3, i64 0, i64 0), i32 %sub) #5, !dbg !170
  %9 = load i64* %n_trips, align 8, !dbg !160, !tbaa !155
  %10 = load %struct.node** %head, align 8, !dbg !160, !tbaa !152
  %firstout12 = getelementptr inbounds %struct.node* %10, i64 %9, i32 7, !dbg !160
  %arc2.055 = load %struct.arc** %firstout12, align 8, !dbg !160
  %tobool1456 = icmp eq %struct.arc* %arc2.055, null, !dbg !172
  br i1 %tobool1456, label %if.then21, label %for.body15, !dbg !172

for.cond13:                                       ; preds = %for.body15
  %nextout = getelementptr inbounds %struct.arc* %arc2.057, i64 0, i32 4, !dbg !172
  %arc2.0 = load %struct.arc** %nextout, align 8, !dbg !160
  %tobool14 = icmp eq %struct.arc* %arc2.0, null, !dbg !172
  br i1 %tobool14, label %if.then21, label %for.body15, !dbg !172

for.body15:                                       ; preds = %if.end8, %for.cond13
  %arc2.057 = phi %struct.arc* [ %arc2.0, %for.cond13 ], [ %arc2.055, %if.end8 ]
  %flow16 = getelementptr inbounds %struct.arc* %arc2.057, i64 0, i32 6, !dbg !174
  %11 = load i64* %flow16, align 8, !dbg !174, !tbaa !155
  %tobool17 = icmp eq i64 %11, 0, !dbg !174
  br i1 %tobool17, label %for.cond13, label %if.end23, !dbg !174

if.then21:                                        ; preds = %if.end8, %for.cond13
  %call22 = tail call i32 @fclose(%struct._IO_FILE* %call) #5, !dbg !175
  br label %return, !dbg !177

if.end23:                                         ; preds = %for.body15
  %head24 = getelementptr inbounds %struct.arc* %arc2.057, i64 0, i32 2, !dbg !178
  %12 = load %struct.node** %head24, align 8, !dbg !178, !tbaa !152
  %number25 = getelementptr inbounds %struct.node* %12, i64 0, i32 12, !dbg !178
  %13 = load i32* %number25, align 4, !dbg !178, !tbaa !171
  %tobool26 = icmp eq i32 %13, 0, !dbg !178
  %.arc2.0 = select i1 %tobool26, %struct.arc* null, %struct.arc* %arc2.057
  %tobool4 = icmp eq %struct.arc* %.arc2.0, null, !dbg !167
  br i1 %tobool4, label %for.inc30, label %while.body, !dbg !167

for.inc30:                                        ; preds = %if.then2, %if.end23, %for.body
  %nextout31 = getelementptr inbounds %struct.arc* %block.062, i64 0, i32 4, !dbg !158
  %block.0 = load %struct.arc** %nextout31, align 8, !dbg !158
  %tobool = icmp eq %struct.arc* %block.0, null, !dbg !158
  br i1 %tobool, label %for.end32, label %for.body, !dbg !158

for.end32:                                        ; preds = %for.inc30, %if.end
  %call33 = tail call i32 @fclose(%struct._IO_FILE* %call) #5, !dbg !179
  br label %return, !dbg !180

return:                                           ; preds = %entry, %for.end32, %if.then21
  %retval.0 = phi i64 [ -1, %if.then21 ], [ 0, %for.end32 ], [ -1, %entry ]
  ret i64 %retval.0, !dbg !180
}
