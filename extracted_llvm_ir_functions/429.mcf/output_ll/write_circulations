define i64 @write_circulations(i8* %outfile, %struct.network* %net) #0 {
  tail call void @llvm.dbg.value(metadata i8* %outfile, i64 0, metadata !85, metadata !158), !dbg !159
  tail call void @llvm.dbg.value(metadata %struct.network* %net, i64 0, metadata !86, metadata !158), !dbg !160
  tail call void @llvm.dbg.value(metadata %struct.__sFILE* null, i64 0, metadata !87, metadata !158), !dbg !161
  %1 = getelementptr inbounds %struct.network* %net, i64 0, i32 24, !dbg !162
  %2 = load %struct.arc** %1, align 8, !dbg !162, !tbaa !163
  %3 = getelementptr inbounds %struct.network* %net, i64 0, i32 7, !dbg !170
  %4 = load i64* %3, align 8, !dbg !170, !tbaa !171
  %5 = sub i64 0, %4, !dbg !172
  %6 = getelementptr inbounds %struct.arc* %2, i64 %5, !dbg !172
  tail call void @llvm.dbg.value(metadata %struct.arc* %6, i64 0, metadata !153, metadata !158), !dbg !173
  %7 = tail call %struct.__sFILE* @"\01_fopen"(i8* %outfile, i8* getelementptr inbounds ([2 x i8]* @.str, i64 0, i64 0)) #5, !dbg !174
  tail call void @llvm.dbg.value(metadata %struct.__sFILE* %7, i64 0, metadata !87, metadata !158), !dbg !161
  %8 = icmp eq %struct.__sFILE* %7, null, !dbg !176
  br i1 %8, label %53, label %9, !dbg !177

; <label>:9                                       ; preds = %0
  tail call void @refresh_neighbour_lists(%struct.network* %net) #5, !dbg !178
  %10 = getelementptr inbounds %struct.network* %net, i64 0, i32 2, !dbg !179
  %11 = load i64* %10, align 8, !dbg !179, !tbaa !181
  %12 = getelementptr inbounds %struct.network* %net, i64 0, i32 21, !dbg !182
  %13 = load %struct.node** %12, align 8, !dbg !182, !tbaa !183
  %14 = getelementptr inbounds %struct.node* %13, i64 %11, i32 7, !dbg !184
  %block.07 = load %struct.arc** %14, align 8, !dbg !184
  %15 = icmp eq %struct.arc* %block.07, null, !dbg !185
  br i1 %15, label %._crit_edge, label %.lr.ph9, !dbg !185

.lr.ph9:                                          ; preds = %9
  %16 = getelementptr inbounds %struct.network* %net, i64 0, i32 3, !dbg !186
  br label %17, !dbg !185

; <label>:17                                      ; preds = %.lr.ph9, %.loopexit
  %block.08 = phi %struct.arc* [ %block.07, %.lr.ph9 ], [ %block.0, %.loopexit ]
  %18 = getelementptr inbounds %struct.arc* %block.08, i64 0, i32 6, !dbg !192
  %19 = load i64* %18, align 8, !dbg !192, !tbaa !193
  %20 = icmp eq i64 %19, 0, !dbg !196
  br i1 %20, label %.loopexit, label %.lr.ph6, !dbg !197

.lr.ph6:                                          ; preds = %17
  %21 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str1, i64 0, i64 0), i64 3, i64 1, %struct.__sFILE* %7), !dbg !198
  tail call void @llvm.dbg.value(metadata %struct.arc* %block.0, i64 0, metadata !151, metadata !158), !dbg !199
  br label %22, !dbg !200

; <label>:22                                      ; preds = %.lr.ph6, %select.unfold
  %arc.05 = phi %struct.arc* [ %block.08, %.lr.ph6 ], [ %.arc2.0, %select.unfold ]
  %23 = icmp ult %struct.arc* %arc.05, %6, !dbg !201
  br i1 %23, label %26, label %24, !dbg !203

; <label>:24                                      ; preds = %22
  %25 = tail call i64 @fwrite(i8* getelementptr inbounds ([5 x i8]* @.str2, i64 0, i64 0), i64 4, i64 1, %struct.__sFILE* %7), !dbg !204
  br label %26, !dbg !204

; <label>:26                                      ; preds = %22, %24
  %27 = getelementptr inbounds %struct.arc* %arc.05, i64 0, i32 2, !dbg !205
  %28 = load %struct.node** %27, align 8, !dbg !205, !tbaa !206
  %29 = getelementptr inbounds %struct.node* %28, i64 0, i32 12, !dbg !207
  %30 = load i32* %29, align 4, !dbg !207, !tbaa !208
  %31 = sub nsw i32 0, %30, !dbg !210
  %32 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %7, i8* getelementptr inbounds ([4 x i8]* @.str3, i64 0, i64 0), i32 %31) #5, !dbg !211
  %33 = load i64* %16, align 8, !dbg !186, !tbaa !212
  %34 = load %struct.node** %27, align 8, !dbg !213, !tbaa !206
  %35 = getelementptr inbounds %struct.node* %34, i64 %33, i32 7, !dbg !214
  %arc2.02 = load %struct.arc** %35, align 8, !dbg !214
  %36 = icmp eq %struct.arc* %arc2.02, null, !dbg !215
  br i1 %36, label %.critedge, label %.lr.ph, !dbg !215

.lr.ph:                                           ; preds = %26, %40
  %arc2.03 = phi %struct.arc* [ %arc2.0, %40 ], [ %arc2.02, %26 ]
  %37 = getelementptr inbounds %struct.arc* %arc2.03, i64 0, i32 6, !dbg !217
  %38 = load i64* %37, align 8, !dbg !217, !tbaa !193
  %39 = icmp eq i64 %38, 0, !dbg !220
  br i1 %39, label %40, label %select.unfold, !dbg !221

; <label>:40                                      ; preds = %.lr.ph
  %41 = getelementptr inbounds %struct.arc* %arc2.03, i64 0, i32 4, !dbg !222
  %arc2.0 = load %struct.arc** %41, align 8, !dbg !214
  %42 = icmp eq %struct.arc* %arc2.0, null, !dbg !215
  br i1 %42, label %.critedge, label %.lr.ph, !dbg !215

.critedge:                                        ; preds = %26, %40
  %43 = tail call i32 @fclose(%struct.__sFILE* %7) #5, !dbg !223
  br label %53, !dbg !226

select.unfold:                                    ; preds = %.lr.ph
  %44 = getelementptr inbounds %struct.arc* %arc2.03, i64 0, i32 2, !dbg !227
  %45 = load %struct.node** %44, align 8, !dbg !227, !tbaa !206
  %46 = getelementptr inbounds %struct.node* %45, i64 0, i32 12, !dbg !229
  %47 = load i32* %46, align 4, !dbg !229, !tbaa !208
  %48 = icmp eq i32 %47, 0, !dbg !230
  %.arc2.0 = select i1 %48, %struct.arc* null, %struct.arc* %arc2.03
  %49 = icmp eq %struct.arc* %.arc2.0, null, !dbg !200
  br i1 %49, label %.loopexit, label %22, !dbg !200

.loopexit:                                        ; preds = %select.unfold, %17
  %50 = getelementptr inbounds %struct.arc* %block.08, i64 0, i32 4, !dbg !231
  %block.0 = load %struct.arc** %50, align 8, !dbg !184
  %51 = icmp eq %struct.arc* %block.0, null, !dbg !185
  br i1 %51, label %._crit_edge, label %17, !dbg !185

._crit_edge:                                      ; preds = %.loopexit, %9
  %52 = tail call i32 @fclose(%struct.__sFILE* %7) #5, !dbg !232
  br label %53, !dbg !233

; <label>:53                                      ; preds = %0, %._crit_edge, %.critedge
  %.0 = phi i64 [ -1, %.critedge ], [ 0, %._crit_edge ], [ -1, %0 ]
  ret i64 %.0, !dbg !234
}
