define i64 @global_opt() #0 {
entry:
  tail call void @llvm.dbg.value(metadata !94, i64 0, metadata !10), !dbg !95
  tail call void @llvm.dbg.value(metadata !96, i64 0, metadata !11), !dbg !97
  br label %while.body, !dbg !98

while.body:                                       ; preds = %if.end23, %entry
  %residual_nb_it.032 = phi i64 [ 5, %entry ], [ %dec, %if.end23 ]
  %0 = load i64* getelementptr inbounds (%struct.network* @net, i64 0, i32 5), align 8, !dbg !99, !tbaa !101
  %call = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([34 x i8]* @.str, i64 0, i64 0), i64 %0) #6, !dbg !99
  %call1 = tail call i64 @primal_net_simplex(%struct.network* @net) #6, !dbg !104
  %1 = load i64* getelementptr inbounds (%struct.network* @net, i64 0, i32 27), align 8, !dbg !105, !tbaa !101
  %call2 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([34 x i8]* @.str1, i64 0, i64 0), i64 %1) #6, !dbg !105
  %call3 = tail call double @flow_cost(%struct.network* @net) #6, !dbg !106
  %call4 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str2, i64 0, i64 0), double %call3) #6, !dbg !106
  %tobool5 = icmp eq i64 %residual_nb_it.032, 0, !dbg !107
  br i1 %tobool5, label %while.end, label %if.end, !dbg !107

if.end:                                           ; preds = %while.body
  %2 = load i64* getelementptr inbounds (%struct.network* @net, i64 0, i32 7), align 8, !dbg !108, !tbaa !101
  %tobool6 = icmp eq i64 %2, 0, !dbg !108
  br i1 %tobool6, label %if.end13, label %if.then7, !dbg !108

if.then7:                                         ; preds = %if.end
  %call8 = tail call i64 @suspend_impl(%struct.network* @net, i64 -1, i64 0) #6, !dbg !109
  tail call void @llvm.dbg.value(metadata !{i64 %call8}, i64 0, metadata !10), !dbg !109
  %tobool9 = icmp eq i64 %call8, 0, !dbg !111
  br i1 %tobool9, label %if.end13, label %if.then10, !dbg !111

if.then10:                                        ; preds = %if.then7
  %call11 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([34 x i8]* @.str3, i64 0, i64 0), i64 %call8) #6, !dbg !112
  br label %if.end13, !dbg !112

if.end13:                                         ; preds = %if.then7, %if.end, %if.then10
  %call14 = tail call i64 @price_out_impl(%struct.network* @net) #6, !dbg !113
  tail call void @llvm.dbg.value(metadata !{i64 %call14}, i64 0, metadata !10), !dbg !113
  %tobool15 = icmp eq i64 %call14, 0, !dbg !114
  br i1 %tobool15, label %while.end, label %if.end18, !dbg !114

if.end18:                                         ; preds = %if.end13
  %call17 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([34 x i8]* @.str4, i64 0, i64 0), i64 %call14) #6, !dbg !115
  %cmp19 = icmp slt i64 %call14, 0, !dbg !116
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !116

if.then21:                                        ; preds = %if.end18
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([28 x i8]* @str, i64 0, i64 0)), !dbg !117
  tail call void @exit(i32 -1) #7, !dbg !119
  unreachable, !dbg !119

if.end23:                                         ; preds = %if.end18
  %dec = add nsw i64 %residual_nb_it.032, -1, !dbg !120
  tail call void @llvm.dbg.value(metadata !{i64 %dec}, i64 0, metadata !11), !dbg !120
  br label %while.body

while.end:                                        ; preds = %if.end13, %while.body
  %3 = load i64* getelementptr inbounds (%struct.network* @net, i64 0, i32 29), align 8, !dbg !121, !tbaa !101
  %call24 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([34 x i8]* @.str6, i64 0, i64 0), i64 %3) #6, !dbg !121
  ret i64 0, !dbg !122
}
