define i64 @dual_feasible(%struct.network* nocapture readonly %net) #0 {
  tail call void @llvm.dbg.value(metadata %struct.network* %net, i64 0, metadata !130, metadata !141), !dbg !431
  %1 = getelementptr inbounds %struct.network* %net, i64 0, i32 24, !dbg !432
  %2 = load %struct.arc** %1, align 8, !dbg !432, !tbaa !167
  tail call void @llvm.dbg.value(metadata %struct.arc* %2, i64 0, metadata !132, metadata !141), !dbg !433
  %3 = getelementptr inbounds %struct.network* %net, i64 0, i32 23, !dbg !434
  %4 = load %struct.arc** %3, align 8, !dbg !434, !tbaa !163
  tail call void @llvm.dbg.value(metadata %struct.arc* %4, i64 0, metadata !131, metadata !141), !dbg !436
  %5 = icmp ult %struct.arc* %4, %2, !dbg !437
  br i1 %5, label %.lr.ph, label %.loopexit, !dbg !439

.lr.ph:                                           ; preds = %0
  %6 = getelementptr inbounds %struct.network* %net, i64 0, i32 16, !dbg !440
  br label %7, !dbg !439

; <label>:7                                       ; preds = %.lr.ph, %29
  %arc.01 = phi %struct.arc* [ %4, %.lr.ph ], [ %30, %29 ]
  %8 = getelementptr inbounds %struct.arc* %arc.01, i64 0, i32 0, !dbg !444
  %9 = load i64* %8, align 8, !dbg !444, !tbaa !288
  %10 = getelementptr inbounds %struct.arc* %arc.01, i64 0, i32 1, !dbg !445
  %11 = load %struct.node** %10, align 8, !dbg !445, !tbaa !173
  %12 = getelementptr inbounds %struct.node* %11, i64 0, i32 0, !dbg !446
  %13 = load i64* %12, align 8, !dbg !446, !tbaa !199
  %14 = sub nsw i64 %9, %13, !dbg !447
  %15 = getelementptr inbounds %struct.arc* %arc.01, i64 0, i32 2, !dbg !448
  %16 = load %struct.node** %15, align 8, !dbg !448, !tbaa !184
  %17 = getelementptr inbounds %struct.node* %16, i64 0, i32 0, !dbg !449
  %18 = load i64* %17, align 8, !dbg !449, !tbaa !199
  %19 = add nsw i64 %18, %14, !dbg !450
  tail call void @llvm.dbg.value(metadata i64 %19, i64 0, metadata !133, metadata !141), !dbg !451
  %20 = getelementptr inbounds %struct.arc* %arc.01, i64 0, i32 3, !dbg !452
  %21 = load i32* %20, align 4, !dbg !452, !tbaa !244
  switch i32 %21, label %29 [
    i32 0, label %22
    i32 1, label %22
    i32 2, label %26
  ], !dbg !453

; <label>:22                                      ; preds = %7, %7
  %23 = load i64* %6, align 8, !dbg !440, !tbaa !405
  %24 = sub nsw i64 0, %23, !dbg !454
  %25 = icmp slt i64 %19, %24, !dbg !455
  br i1 %25, label %32, label %29, !dbg !456

; <label>:26                                      ; preds = %7
  %27 = load i64* %6, align 8, !dbg !457, !tbaa !405
  %28 = icmp sgt i64 %19, %27, !dbg !459
  br i1 %28, label %32, label %29, !dbg !460

; <label>:29                                      ; preds = %22, %26, %7
  %30 = getelementptr inbounds %struct.arc* %arc.01, i64 1, !dbg !461
  tail call void @llvm.dbg.value(metadata %struct.arc* %30, i64 0, metadata !131, metadata !141), !dbg !436
  %31 = icmp ult %struct.arc* %30, %2, !dbg !437
  br i1 %31, label %7, label %.loopexit, !dbg !439

; <label>:32                                      ; preds = %26, %22
  %33 = load %struct.__sFILE** @__stderrp, align 8, !dbg !462, !tbaa !463
  %34 = tail call i64 @fwrite(i8* getelementptr inbounds ([23 x i8]* @.str3, i64 0, i64 0), i64 22, i64 1, %struct.__sFILE* %33), !dbg !464
  %35 = load %struct.__sFILE** @__stderrp, align 8, !dbg !465, !tbaa !463
  %36 = tail call i64 @fwrite(i8* getelementptr inbounds ([23 x i8]* @.str4, i64 0, i64 0), i64 22, i64 1, %struct.__sFILE* %35), !dbg !466
  br label %.loopexit, !dbg !467

.loopexit:                                        ; preds = %29, %0, %32
  %.0 = phi i64 [ 1, %32 ], [ 0, %0 ], [ 0, %29 ]
  ret i64 %.0, !dbg !468
}
