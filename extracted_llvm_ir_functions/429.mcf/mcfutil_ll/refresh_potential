define i64 @refresh_potential(%struct.network* nocapture %net) #0 {
entry:
  %nodes = getelementptr inbounds %struct.network* %net, i64 0, i32 21
  %0 = load %struct.node** %nodes, align 8, !tbaa !0
  %potential = getelementptr inbounds %struct.node* %0, i64 0, i32 0
  store i64 -100000000, i64* %potential, align 8, !tbaa !3
  %child = getelementptr inbounds %struct.node* %0, i64 0, i32 2
  %1 = load %struct.node** %child, align 8, !tbaa !0
  %cmp46 = icmp eq %struct.node* %1, %0
  br i1 %cmp46, label %while.end24, label %while.cond3.preheader

while.cond.loopexit:                              ; preds = %while.cond14, %while.body17
  %tmp.0.ph = phi %struct.node* [ %13, %while.body17 ], [ %tmp.2, %while.cond14 ]
  %node.0.ph = phi %struct.node* [ %13, %while.body17 ], [ %node.2, %while.cond14 ]
  %cmp = icmp eq %struct.node* %node.0.ph, %0
  br i1 %cmp, label %while.end24, label %while.cond3.preheader

while.cond3.preheader:                            ; preds = %entry, %while.cond.loopexit
  %checksum.049 = phi i64 [ %checksum.1.lcssa, %while.cond.loopexit ], [ 0, %entry ]
  %node.048 = phi %struct.node* [ %node.0.ph, %while.cond.loopexit ], [ %1, %entry ]
  %tmp.047 = phi %struct.node* [ %tmp.0.ph, %while.cond.loopexit ], [ %1, %entry ]
  %tobool42 = icmp eq %struct.node* %node.048, null
  br i1 %tobool42, label %while.cond14.loopexit, label %while.body4

while.body4:                                      ; preds = %while.cond3.preheader, %if.end
  %checksum.144 = phi i64 [ %checksum.2, %if.end ], [ %checksum.049, %while.cond3.preheader ]
  %node.143 = phi %struct.node* [ %11, %if.end ], [ %node.048, %while.cond3.preheader ]
  %orientation = getelementptr inbounds %struct.node* %node.143, i64 0, i32 1
  %2 = load i32* %orientation, align 4, !tbaa !4
  %cmp5 = icmp eq i32 %2, 1
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %while.body4
  %basic_arc = getelementptr inbounds %struct.node* %node.143, i64 0, i32 6
  %3 = load %struct.arc** %basic_arc, align 8, !tbaa !0
  %cost = getelementptr inbounds %struct.arc* %3, i64 0, i32 0
  %4 = load i64* %cost, align 8, !tbaa !3
  %pred = getelementptr inbounds %struct.node* %node.143, i64 0, i32 3
  %5 = load %struct.node** %pred, align 8, !tbaa !0
  %potential6 = getelementptr inbounds %struct.node* %5, i64 0, i32 0
  %6 = load i64* %potential6, align 8, !tbaa !3
  %add = add nsw i64 %6, %4
  %potential7 = getelementptr inbounds %struct.node* %node.143, i64 0, i32 0
  store i64 %add, i64* %potential7, align 8, !tbaa !3
  br label %if.end

if.else:                                          ; preds = %while.body4
  %pred8 = getelementptr inbounds %struct.node* %node.143, i64 0, i32 3
  %7 = load %struct.node** %pred8, align 8, !tbaa !0
  %potential9 = getelementptr inbounds %struct.node* %7, i64 0, i32 0
  %8 = load i64* %potential9, align 8, !tbaa !3
  %basic_arc10 = getelementptr inbounds %struct.node* %node.143, i64 0, i32 6
  %9 = load %struct.arc** %basic_arc10, align 8, !tbaa !0
  %cost11 = getelementptr inbounds %struct.arc* %9, i64 0, i32 0
  %10 = load i64* %cost11, align 8, !tbaa !3
  %sub = sub nsw i64 %8, %10
  %potential12 = getelementptr inbounds %struct.node* %node.143, i64 0, i32 0
  store i64 %sub, i64* %potential12, align 8, !tbaa !3
  %inc = add nsw i64 %checksum.144, 1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %checksum.2 = phi i64 [ %checksum.144, %if.then ], [ %inc, %if.else ]
  %child13 = getelementptr inbounds %struct.node* %node.143, i64 0, i32 2
  %11 = load %struct.node** %child13, align 8, !tbaa !0
  %tobool = icmp eq %struct.node* %11, null
  br i1 %tobool, label %while.cond14.loopexit, label %while.body4

while.cond14.loopexit:                            ; preds = %if.end, %while.cond3.preheader
  %checksum.1.lcssa = phi i64 [ %checksum.049, %while.cond3.preheader ], [ %checksum.2, %if.end ]
  %tmp.1.lcssa = phi %struct.node* [ %tmp.047, %while.cond3.preheader ], [ %node.143, %if.end ]
  br label %while.cond14

while.cond14:                                     ; preds = %while.cond14.loopexit, %while.body17
  %tmp.2 = phi %struct.node* [ null, %while.body17 ], [ %tmp.1.lcssa, %while.cond14.loopexit ]
  %node.2 = phi %struct.node* [ %12, %while.body17 ], [ %tmp.1.lcssa, %while.cond14.loopexit ]
  %pred15 = getelementptr inbounds %struct.node* %node.2, i64 0, i32 3
  %12 = load %struct.node** %pred15, align 8, !tbaa !0
  %tobool16 = icmp eq %struct.node* %12, null
  br i1 %tobool16, label %while.cond.loopexit, label %while.body17

while.body17:                                     ; preds = %while.cond14
  %sibling = getelementptr inbounds %struct.node* %node.2, i64 0, i32 4
  %13 = load %struct.node** %sibling, align 8, !tbaa !0
  %tobool18 = icmp eq %struct.node* %13, null
  br i1 %tobool18, label %while.cond14, label %while.cond.loopexit

while.end24:                                      ; preds = %while.cond.loopexit, %entry
  %checksum.0.lcssa = phi i64 [ 0, %entry ], [ %checksum.1.lcssa, %while.cond.loopexit ]
  ret i64 %checksum.0.lcssa
}
