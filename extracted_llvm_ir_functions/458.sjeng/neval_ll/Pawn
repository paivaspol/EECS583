define i32 @Pawn(i32 %sq, i32 %c) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %sq}, i64 0, metadata !56), !dbg !294
  tail call void @llvm.dbg.value(metadata !{i32 %c}, i64 0, metadata !57), !dbg !294
  tail call void @llvm.dbg.value(metadata !8, i64 0, metadata !58), !dbg !295
  %xor = xor i32 %c, 1, !dbg !296
  tail call void @llvm.dbg.value(metadata !{i32 %xor}, i64 0, metadata !59), !dbg !296
  tail call void @llvm.dbg.value(metadata !297, i64 0, metadata !58), !dbg !298
  %idxprom = sext i32 %xor to i64, !dbg !299
  %arrayidx = getelementptr inbounds [2 x i32]* @king_locs, i64 0, i64 %idxprom, !dbg !299
  %0 = load i32* %arrayidx, align 4, !dbg !299, !tbaa !177
  %idxprom1 = sext i32 %0 to i64, !dbg !299
  %idxprom2 = sext i32 %sq to i64, !dbg !299
  %arrayidx4 = getelementptr inbounds [144 x [144 x i32]]* @distance, i64 0, i64 %idxprom2, i64 %idxprom1, !dbg !299
  %1 = load i32* %arrayidx4, align 4, !dbg !299, !tbaa !177
  %idxprom5 = sext i32 %1 to i64, !dbg !299
  %arrayidx6 = getelementptr inbounds [8 x i32]* @std_p_tropism, i64 0, i64 %idxprom5, !dbg !299
  %2 = load i32* %arrayidx6, align 4, !dbg !299, !tbaa !177
  %add7 = add nsw i32 %2, 100, !dbg !299
  tail call void @llvm.dbg.value(metadata !{i32 %add7}, i64 0, metadata !58), !dbg !299
  %idxprom8 = sext i32 %c to i64, !dbg !300
  %arrayidx9 = getelementptr inbounds [2 x i32]* @king_locs, i64 0, i64 %idxprom8, !dbg !300
  %3 = load i32* %arrayidx9, align 4, !dbg !300, !tbaa !177
  %idxprom10 = sext i32 %3 to i64, !dbg !300
  %arrayidx13 = getelementptr inbounds [144 x [144 x i32]]* @distance, i64 0, i64 %idxprom2, i64 %idxprom10, !dbg !300
  %4 = load i32* %arrayidx13, align 4, !dbg !300, !tbaa !177
  %idxprom14 = sext i32 %4 to i64, !dbg !300
  %arrayidx15 = getelementptr inbounds [8 x i32]* @std_own_p_tropism, i64 0, i64 %idxprom14, !dbg !300
  %5 = load i32* %arrayidx15, align 4, !dbg !300, !tbaa !177
  %add16 = add nsw i32 %add7, %5, !dbg !300
  tail call void @llvm.dbg.value(metadata !{i32 %add16}, i64 0, metadata !58), !dbg !300
  %add17 = add nsw i32 %sq, 1, !dbg !301
  %idxprom18 = sext i32 %add17 to i64, !dbg !301
  %arrayidx19 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom18, !dbg !301
  %6 = load i32* %arrayidx19, align 4, !dbg !301, !tbaa !177
  %add20 = add nsw i32 %6, 1, !dbg !301
  %shr.mask = and i32 %add20, -2, !dbg !301
  %cmp = icmp eq i32 %shr.mask, 2, !dbg !301
  %and = and i32 %add20, 1, !dbg !301
  %cmp25 = icmp eq i32 %and, %c, !dbg !301
  %or.cond = and i1 %cmp, %cmp25, !dbg !301
  %add26 = add nsw i32 %add16, 5, !dbg !302
  tail call void @llvm.dbg.value(metadata !{i32 %add26}, i64 0, metadata !58), !dbg !302
  %s.0 = select i1 %or.cond, i32 %add26, i32 %add16, !dbg !301
  %add27 = add nsw i32 %sq, 11, !dbg !303
  %idxprom28 = sext i32 %add27 to i64, !dbg !303
  %arrayidx29 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom28, !dbg !303
  %7 = load i32* %arrayidx29, align 4, !dbg !303, !tbaa !177
  %add30 = add nsw i32 %7, 1, !dbg !303
  %shr31.mask = and i32 %add30, -2, !dbg !303
  %cmp32 = icmp eq i32 %shr31.mask, 2, !dbg !303
  %and38 = and i32 %add30, 1, !dbg !303
  %cmp39 = icmp eq i32 %and38, %c, !dbg !303
  %or.cond81 = and i1 %cmp32, %cmp39, !dbg !303
  br i1 %or.cond81, label %if.then40, label %if.else, !dbg !303

if.then40:                                        ; preds = %entry
  %add41 = add nsw i32 %s.0, 1, !dbg !304
  tail call void @llvm.dbg.value(metadata !{i32 %add41}, i64 0, metadata !58), !dbg !304
  br label %if.end58, !dbg !304

if.else:                                          ; preds = %entry
  %add42 = add nsw i32 %sq, 13, !dbg !305
  %idxprom43 = sext i32 %add42 to i64, !dbg !305
  %arrayidx44 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom43, !dbg !305
  %8 = load i32* %arrayidx44, align 4, !dbg !305, !tbaa !177
  %add45 = add nsw i32 %8, 1, !dbg !305
  %shr46.mask = and i32 %add45, -2, !dbg !305
  %cmp47 = icmp eq i32 %shr46.mask, 2, !dbg !305
  %and53 = and i32 %add45, 1, !dbg !305
  %cmp54 = icmp eq i32 %and53, %c, !dbg !305
  %or.cond82 = and i1 %cmp47, %cmp54, !dbg !305
  %add56 = zext i1 %or.cond82 to i32, !dbg !305
  %add56.s.0 = add nsw i32 %add56, %s.0, !dbg !305
  br label %if.end58, !dbg !305

if.end58:                                         ; preds = %if.else, %if.then40
  %s.1 = phi i32 [ %add41, %if.then40 ], [ %add56.s.0, %if.else ]
  %cmp59 = icmp eq i32 %c, 1, !dbg !306
  %sub = sub nsw i32 0, %s.1, !dbg !307
  tail call void @llvm.dbg.value(metadata !{i32 %sub}, i64 0, metadata !58), !dbg !307
  %sub.s.1 = select i1 %cmp59, i32 %sub, i32 %s.1, !dbg !306
  ret i32 %sub.s.1, !dbg !308
}
