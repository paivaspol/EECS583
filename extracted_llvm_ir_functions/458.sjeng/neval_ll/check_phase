define void @check_phase() #0 {
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !14, metadata !176), !dbg !177
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !16, metadata !176), !dbg !178
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !17, metadata !176), !dbg !179
  %1 = load i32* @piece_count, align 4, !dbg !180, !tbaa !183
  %2 = icmp slt i32 %1, 1, !dbg !187
  br i1 %2, label %.thread8, label %.lr.ph, !dbg !188

.lr.ph:                                           ; preds = %0, %13
  %indvars.iv = phi i64 [ %indvars.iv.next, %13 ], [ 1, %0 ]
  %xnum_pieces.06 = phi i32 [ %xnum_pieces.1, %13 ], [ 0, %0 ]
  %a.05 = phi i32 [ %a.1, %13 ], [ 1, %0 ]
  %3 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %indvars.iv, !dbg !189
  %4 = load i32* %3, align 4, !dbg !189, !tbaa !183
  tail call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !18, metadata !176), !dbg !191
  %5 = icmp eq i32 %4, 0, !dbg !192
  br i1 %5, label %13, label %6, !dbg !194

; <label>:6                                       ; preds = %.lr.ph
  %7 = add nsw i32 %a.05, 1, !dbg !195
  tail call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !17, metadata !176), !dbg !179
  %8 = sext i32 %4 to i64, !dbg !196
  %9 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %8, !dbg !196
  %10 = load i32* %9, align 4, !dbg !196, !tbaa !183
  switch i32 %10, label %11 [
    i32 1, label %13
    i32 2, label %13
    i32 13, label %13
    i32 0, label %13
  ], !dbg !198

; <label>:11                                      ; preds = %6
  %12 = add nsw i32 %xnum_pieces.06, 1, !dbg !199
  tail call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !14, metadata !176), !dbg !177
  br label %13, !dbg !201

; <label>:13                                      ; preds = %6, %6, %6, %6, %.lr.ph, %11
  %a.1 = phi i32 [ %7, %11 ], [ %7, %6 ], [ %a.05, %.lr.ph ], [ %7, %6 ], [ %7, %6 ], [ %7, %6 ]
  %xnum_pieces.1 = phi i32 [ %12, %11 ], [ %xnum_pieces.06, %6 ], [ %xnum_pieces.06, %.lr.ph ], [ %xnum_pieces.06, %6 ], [ %xnum_pieces.06, %6 ], [ %xnum_pieces.06, %6 ]
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !188
  %14 = icmp sgt i32 %a.1, %1, !dbg !187
  br i1 %14, label %._crit_edge, label %.lr.ph, !dbg !188

._crit_edge:                                      ; preds = %13
  %15 = icmp sgt i32 %xnum_pieces.1, 11, !dbg !202
  br i1 %15, label %16, label %27, !dbg !204

; <label>:16                                      ; preds = %._crit_edge
  %17 = load i32* @white_castled, align 4, !dbg !205, !tbaa !183
  %18 = icmp ne i32 %17, 0, !dbg !205
  %19 = load i32* @black_castled, align 4
  %20 = icmp ne i32 %19, 0, !dbg !206
  %or.cond = and i1 %18, %20, !dbg !207
  br i1 %or.cond, label %.thread, label %21, !dbg !207

; <label>:21                                      ; preds = %16
  %22 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 30), align 4, !dbg !208, !tbaa !183
  %23 = icmp eq i32 %22, 5, !dbg !209
  %24 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 114), align 4
  %25 = icmp eq i32 %24, 6, !dbg !210
  %or.cond3 = or i1 %23, %25, !dbg !211
  br i1 %or.cond3, label %26, label %.thread, !dbg !211

; <label>:26                                      ; preds = %21
  store i32 0, i32* @phase, align 4, !dbg !212, !tbaa !183
  br label %29, !dbg !214

; <label>:27                                      ; preds = %._crit_edge
  %28 = icmp slt i32 %xnum_pieces.1, 7, !dbg !215
  br i1 %28, label %.thread8, label %.thread, !dbg !217

.thread8:                                         ; preds = %0, %27
  store i32 2, i32* @phase, align 4, !dbg !218, !tbaa !183
  br label %29, !dbg !220

.thread:                                          ; preds = %16, %21, %27
  store i32 1, i32* @phase, align 4, !dbg !221, !tbaa !183
  br label %29

; <label>:29                                      ; preds = %.thread8, %.thread, %26
  ret void, !dbg !222
}
