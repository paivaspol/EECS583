define i32 @main(i32 %argc, i8** nocapture readonly %argv) #0 {
  %input = alloca [256 x i8], align 16
  %output = alloca [256 x i8], align 16
  %readbuff = alloca [256 x i8], align 16
  %move = alloca %struct.move_s, align 4
  %comp_move = alloca %struct.move_s, align 8
  %depth = alloca i32, align 4
  %show_board = alloca i32, align 4
  %game_history = alloca [600 x %struct.move_s], align 16
  %game_history_x = alloca [600 x %struct.move_x], align 16
  %pingnum = alloca i32, align 4
  %1 = alloca %struct.move_s, align 4
  %2 = alloca %struct.move_s, align 4
  %3 = alloca %struct.move_s, align 4
  tail call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !22, metadata !208), !dbg !209
  tail call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !23, metadata !208), !dbg !210
  %4 = getelementptr inbounds [256 x i8]* %input, i64 0, i64 0, !dbg !211
  call void @llvm.lifetime.start(i64 256, i8* %4) #2, !dbg !211
  tail call void @llvm.dbg.declare(metadata [256 x i8]* %input, metadata !24, metadata !208), !dbg !212
  %5 = getelementptr inbounds [256 x i8]* %output, i64 0, i64 0, !dbg !211
  call void @llvm.lifetime.start(i64 256, i8* %5) #2, !dbg !211
  tail call void @llvm.dbg.declare(metadata [256 x i8]* %output, metadata !29, metadata !208), !dbg !213
  %6 = getelementptr inbounds [256 x i8]* %readbuff, i64 0, i64 0, !dbg !214
  call void @llvm.lifetime.start(i64 256, i8* %6) #2, !dbg !214
  tail call void @llvm.dbg.declare(metadata [256 x i8]* %readbuff, metadata !30, metadata !208), !dbg !215
  tail call void @llvm.dbg.value(metadata i32 4, i64 0, metadata !42, metadata !208), !dbg !216
  store i32 4, i32* %depth, align 4, !dbg !216, !tbaa !217
  %7 = bitcast [600 x %struct.move_s]* %game_history to i8*, !dbg !221
  call void @llvm.lifetime.start(i64 14400, i8* %7) #2, !dbg !221
  tail call void @llvm.dbg.declare(metadata [600 x %struct.move_s]* %game_history, metadata !46, metadata !208), !dbg !222
  %8 = bitcast [600 x %struct.move_x]* %game_history_x to i8*, !dbg !223
  call void @llvm.lifetime.start(i64 9600, i8* %8) #2, !dbg !223
  tail call void @llvm.dbg.declare(metadata [600 x %struct.move_x]* %game_history_x, metadata !50, metadata !208), !dbg !224
  tail call void @read_rcfile() #8, !dbg !225
  tail call void @initialize_zobrist() #8, !dbg !226
  store i32 2, i32* @Variant, align 4, !dbg !227, !tbaa !217
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @std_material to i8*), i64 56, i32 16, i1 false), !dbg !228
  tail call void @init_game() #8, !dbg !229
  tail call void @initialize_hash() #8, !dbg !230
  tail call void @clear_tt() #8, !dbg !231
  tail call void @reset_ecache() #8, !dbg !232
  store i32 0, i32* @ECacheProbes, align 4, !dbg !233, !tbaa !217
  store i32 0, i32* @ECacheHits, align 4, !dbg !234, !tbaa !217
  store i32 0, i32* @TTProbes, align 4, !dbg !235, !tbaa !217
  store i32 0, i32* @TTStores, align 4, !dbg !236, !tbaa !217
  store i32 0, i32* @TTHits, align 4, !dbg !237, !tbaa !217
  store i32 0, i32* @bookidx, align 4, !dbg !238, !tbaa !217
  store i32 0, i32* @total_moves, align 4, !dbg !239, !tbaa !217
  store i32 0, i32* @ply, align 4, !dbg !240, !tbaa !217
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !62, metadata !208), !dbg !241
  store i32 40, i32* @moves_to_tc, align 4, !dbg !242, !tbaa !217
  store i32 5, i32* @min_per_game, align 4, !dbg !243, !tbaa !217
  store i32 30000, i32* @time_left, align 4, !dbg !244, !tbaa !217
  store i32 2000, i32* @opp_rating, align 4, !dbg !245, !tbaa !217
  store i32 2000, i32* @my_rating, align 4, !dbg !246, !tbaa !217
  store i32 40, i32* @maxdepth, align 4, !dbg !247, !tbaa !217
  store i32 200, i32* @maxposdiff, align 4, !dbg !248, !tbaa !217
  store i32 1, i32* @must_go, align 4, !dbg !249, !tbaa !217
  store i32 1, i32* @tradefreely, align 4, !dbg !250, !tbaa !217
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !63, metadata !208), !dbg !251
  store i32 0, i32* @xb_mode, align 4, !dbg !252, !tbaa !217
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !43, metadata !208), !dbg !253
  store i32 0, i32* @comp_color, align 4, !dbg !254, !tbaa !217
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !60, metadata !208), !dbg !255
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !45, metadata !208), !dbg !256
  store i32 1, i32* %show_board, align 4, !dbg !257, !tbaa !258
  store i32 0, i32* @is_pondering, align 4, !dbg !259, !tbaa !258
  store i32 1, i32* @allow_pondering, align 4, !dbg !260, !tbaa !258
  store i32 0, i32* @is_analyzing, align 4, !dbg !261, !tbaa !258
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !59, metadata !208), !dbg !262
  store i32 0, i32* @have_partner, align 4, !dbg !263, !tbaa !258
  store i32 0, i32* @must_sit, align 4, !dbg !264, !tbaa !258
  store i32 0, i32* @go_fast, align 4, !dbg !265, !tbaa !258
  store i32 0, i32* @fixed_time, align 4, !dbg !266, !tbaa !217
  store i32 0, i32* @phase, align 4, !dbg !267, !tbaa !217
  store i32 0, i32* @root_to_move, align 4, !dbg !268, !tbaa !217
  store i32 0, i32* @kibitzed, align 4, !dbg !269, !tbaa !258
  store i32 0, i32* @move_number, align 4, !dbg !270, !tbaa !217
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 14400, i32 16, i1 false), !dbg !271
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 9600, i32 16, i1 false), !dbg !272
  %9 = load i32* @hash, align 4, !dbg !273, !tbaa !217
  store i32 %9, i32* getelementptr inbounds ([600 x i32]* @hash_history, i64 0, i64 0), align 16, !dbg !274, !tbaa !217
  %10 = load %struct.__sFILE** @__stdoutp, align 8, !dbg !275, !tbaa !276
  tail call void @setbuf(%struct.__sFILE* %10, i8* null) #8, !dbg !278
  %11 = load %struct.__sFILE** @__stdinp, align 8, !dbg !279, !tbaa !276
  tail call void @setbuf(%struct.__sFILE* %11, i8* null) #8, !dbg !280
  tail call void @start_up() #8, !dbg !281
  %12 = icmp eq i32 %argc, 2, !dbg !282
  br i1 %12, label %13, label %.preheader125, !dbg !284

; <label>:13                                      ; preds = %0
  %puts110 = tail call i32 @puts(i8* getelementptr inbounds ([14 x i8]* @str159, i64 0, i64 0)), !dbg !285
  %14 = getelementptr inbounds i8** %argv, i64 1, !dbg !287
  %15 = load i8** %14, align 8, !dbg !287, !tbaa !276
  tail call void @run_autotest(i8* %15) #8, !dbg !288
  br label %.preheader125, !dbg !289

.preheader125:                                    ; preds = %0, %13
  %16 = getelementptr inbounds [256 x i8]* %input, i64 0, i64 6, !dbg !290
  %17 = getelementptr inbounds [256 x i8]* %input, i64 0, i64 5, !dbg !299
  %18 = getelementptr inbounds [256 x i8]* %input, i64 0, i64 7, !dbg !316
  %19 = getelementptr inbounds [256 x i8]* %input, i64 0, i64 1, !dbg !321
  %20 = getelementptr inbounds [256 x i8]* %input, i64 0, i64 2, !dbg !332
  %21 = getelementptr inbounds [256 x i8]* %input, i64 0, i64 8, !dbg !333
  %22 = getelementptr inbounds [256 x i8]* %input, i64 0, i64 3, !dbg !337
  %23 = getelementptr inbounds [256 x i8]* %input, i64 0, i64 9, !dbg !342
  %24 = bitcast %struct.move_s* %move to i8*, !dbg !350
  %25 = bitcast %struct.move_s* %comp_move to i8*, !dbg !354
  %26 = bitcast %struct.move_s* %1 to i8*, !dbg !354
  br label %.backedge, !dbg !357

.backedge:                                        ; preds = %617, %597, %520, %504, %381, %258, %637, %624, %608, %577, %370, %359, %351, %263, %267, %290, %302, %334, %354, %376, %393, %403, %433, %430, %465, %478, %473, %548, %561, %569, %593, %603, %634, %640, %630, %623, %607, %583, %573, %565, %557, %524, %517, %489, %492, %469, %437, %421, %398, %387, %380, %358, %339, %329, %330, %298, %365, %369, %613, %.preheader125
  %force_mode.0 = phi i32 [ 0, %.preheader125 ], [ %force_mode.0, %517 ], [ %force_mode.0, %548 ], [ %force_mode.0, %637 ], [ %force_mode.0, %640 ], [ %force_mode.0, %634 ], [ %force_mode.0, %630 ], [ %force_mode.0, %624 ], [ %force_mode.0, %623 ], [ %force_mode.0, %613 ], [ %force_mode.0, %608 ], [ %force_mode.0, %607 ], [ 0, %603 ], [ %force_mode.0, %593 ], [ %force_mode.0, %583 ], [ %force_mode.0, %577 ], [ %force_mode.0, %573 ], [ %force_mode.0, %569 ], [ %force_mode.0, %565 ], [ %force_mode.0, %561 ], [ %force_mode.0, %557 ], [ %force_mode.0, %524 ], [ %force_mode.0, %492 ], [ %force_mode.0, %489 ], [ %force_mode.0, %478 ], [ %force_mode.0, %473 ], [ %force_mode.0, %469 ], [ %force_mode.0, %465 ], [ %force_mode.0, %437 ], [ %force_mode.0, %433 ], [ %force_mode.0, %430 ], [ %force_mode.0, %421 ], [ %force_mode.0, %403 ], [ %force_mode.0, %398 ], [ 0, %393 ], [ %force_mode.0, %387 ], [ %force_mode.0, %380 ], [ %force_mode.0, %376 ], [ %force_mode.0, %370 ], [ %force_mode.0, %369 ], [ %force_mode.0, %365 ], [ %force_mode.0, %359 ], [ %force_mode.0, %358 ], [ %force_mode.0, %354 ], [ %force_mode.0, %351 ], [ %force_mode.0, %339 ], [ %force_mode.0, %334 ], [ %force_mode.0, %330 ], [ 0, %329 ], [ %force_mode.0, %302 ], [ %force_mode.0, %298 ], [ %force_mode.0, %290 ], [ %force_mode.0, %263 ], [ %force_mode.0, %258 ], [ %force_mode.0, %267 ], [ 1, %381 ], [ %force_mode.0, %504 ], [ %force_mode.0, %520 ], [ %force_mode.0, %597 ], [ %force_mode.0, %617 ]
  %is_edit_mode.0 = phi i32 [ 0, %.preheader125 ], [ 0, %517 ], [ %is_edit_mode.0, %548 ], [ %is_edit_mode.0, %637 ], [ %is_edit_mode.0, %640 ], [ %is_edit_mode.0, %634 ], [ %is_edit_mode.0, %630 ], [ %is_edit_mode.0, %624 ], [ %is_edit_mode.0, %623 ], [ %is_edit_mode.0, %613 ], [ %is_edit_mode.0, %608 ], [ %is_edit_mode.0, %607 ], [ %is_edit_mode.0, %603 ], [ %is_edit_mode.0, %593 ], [ %is_edit_mode.0, %583 ], [ %is_edit_mode.0, %577 ], [ %is_edit_mode.0, %573 ], [ %is_edit_mode.0, %569 ], [ %is_edit_mode.0, %565 ], [ %is_edit_mode.0, %561 ], [ %is_edit_mode.0, %557 ], [ %is_edit_mode.0, %524 ], [ %is_edit_mode.0, %492 ], [ %is_edit_mode.0, %489 ], [ %is_edit_mode.0, %478 ], [ %is_edit_mode.0, %473 ], [ %is_edit_mode.0, %469 ], [ %is_edit_mode.0, %465 ], [ %is_edit_mode.0, %437 ], [ %is_edit_mode.0, %433 ], [ %is_edit_mode.0, %430 ], [ %is_edit_mode.0, %421 ], [ %is_edit_mode.0, %403 ], [ %is_edit_mode.0, %398 ], [ %is_edit_mode.0, %393 ], [ %is_edit_mode.0, %387 ], [ %is_edit_mode.0, %380 ], [ %is_edit_mode.0, %376 ], [ %is_edit_mode.0, %370 ], [ %is_edit_mode.0, %369 ], [ %is_edit_mode.0, %365 ], [ %is_edit_mode.0, %359 ], [ %is_edit_mode.0, %358 ], [ %is_edit_mode.0, %354 ], [ %is_edit_mode.0, %351 ], [ %is_edit_mode.0, %339 ], [ %is_edit_mode.0, %334 ], [ %is_edit_mode.0, %330 ], [ %is_edit_mode.0, %329 ], [ %is_edit_mode.0, %302 ], [ %is_edit_mode.0, %298 ], [ %is_edit_mode.0, %290 ], [ 0, %263 ], [ 0, %258 ], [ 0, %267 ], [ %is_edit_mode.0, %381 ], [ 1, %504 ], [ %is_edit_mode.0, %520 ], [ %is_edit_mode.0, %597 ], [ %is_edit_mode.0, %617 ]
  %edit_color.0 = phi i32 [ 0, %.preheader125 ], [ %edit_color.0, %517 ], [ %edit_color.0, %548 ], [ %edit_color.0, %637 ], [ %edit_color.0, %640 ], [ %edit_color.0, %634 ], [ %edit_color.0, %630 ], [ %edit_color.0, %624 ], [ %edit_color.0, %623 ], [ %edit_color.0, %613 ], [ %edit_color.0, %608 ], [ %edit_color.0, %607 ], [ %edit_color.0, %603 ], [ %edit_color.0, %593 ], [ %edit_color.0, %583 ], [ %edit_color.0, %577 ], [ %edit_color.0, %573 ], [ %edit_color.0, %569 ], [ %edit_color.0, %565 ], [ %edit_color.0, %561 ], [ %edit_color.0, %557 ], [ %edit_color.0, %524 ], [ %edit_color.0, %492 ], [ %edit_color.0, %489 ], [ %edit_color.0, %478 ], [ %edit_color.0, %473 ], [ %edit_color.0, %469 ], [ %edit_color.0, %465 ], [ %edit_color.0, %437 ], [ %edit_color.0, %433 ], [ %edit_color.0, %430 ], [ %edit_color.0, %421 ], [ %edit_color.0, %403 ], [ %edit_color.0, %398 ], [ %edit_color.0, %393 ], [ %edit_color.0, %387 ], [ %edit_color.0, %380 ], [ %edit_color.0, %376 ], [ %edit_color.0, %370 ], [ %edit_color.0, %369 ], [ %edit_color.0, %365 ], [ %edit_color.0, %359 ], [ %edit_color.0, %358 ], [ %edit_color.0, %354 ], [ %edit_color.0, %351 ], [ %edit_color.0, %339 ], [ %edit_color.0, %334 ], [ %edit_color.0, %330 ], [ %edit_color.0, %329 ], [ %edit_color.0, %302 ], [ %edit_color.0, %298 ], [ %edit_color.0, %290 ], [ %edit_color.0, %263 ], [ %edit_color.0, %258 ], [ %edit_color.0, %267 ], [ %edit_color.0, %381 ], [ 0, %504 ], [ %521, %520 ], [ %edit_color.0, %597 ], [ %edit_color.0, %617 ]
  %braindeadinterface.0 = phi i32 [ 0, %.preheader125 ], [ %braindeadinterface.0, %517 ], [ %braindeadinterface.0, %548 ], [ %braindeadinterface.0, %637 ], [ %braindeadinterface.0, %640 ], [ %braindeadinterface.0, %634 ], [ %braindeadinterface.0, %630 ], [ %braindeadinterface.0, %624 ], [ %braindeadinterface.0, %623 ], [ %braindeadinterface.0, %613 ], [ %braindeadinterface.0, %608 ], [ %braindeadinterface.0, %607 ], [ %braindeadinterface.0, %603 ], [ %braindeadinterface.0, %593 ], [ %braindeadinterface.0, %583 ], [ %braindeadinterface.0, %577 ], [ %braindeadinterface.0, %573 ], [ %braindeadinterface.0, %569 ], [ %braindeadinterface.0, %565 ], [ %braindeadinterface.0, %561 ], [ %braindeadinterface.0, %557 ], [ %braindeadinterface.0, %524 ], [ %braindeadinterface.0, %492 ], [ %braindeadinterface.0, %489 ], [ %braindeadinterface.0, %478 ], [ %braindeadinterface.0, %473 ], [ %braindeadinterface.0, %469 ], [ %braindeadinterface.0, %465 ], [ %braindeadinterface.0, %437 ], [ %braindeadinterface.0, %433 ], [ %braindeadinterface.0, %430 ], [ %braindeadinterface.0, %421 ], [ %braindeadinterface.0, %403 ], [ %braindeadinterface.0, %398 ], [ %braindeadinterface.0, %393 ], [ %braindeadinterface.0, %387 ], [ %braindeadinterface.0, %380 ], [ %braindeadinterface.0, %376 ], [ %braindeadinterface.0, %370 ], [ %braindeadinterface.0, %369 ], [ %braindeadinterface.0, %365 ], [ %braindeadinterface.0, %359 ], [ %braindeadinterface.0, %358 ], [ %braindeadinterface.0, %354 ], [ %braindeadinterface.0, %351 ], [ %braindeadinterface.0, %339 ], [ %braindeadinterface.0, %334 ], [ %braindeadinterface.0, %330 ], [ %braindeadinterface.0, %329 ], [ %braindeadinterface.0, %302 ], [ %braindeadinterface.0, %298 ], [ %braindeadinterface.0, %290 ], [ %braindeadinterface.0, %263 ], [ %braindeadinterface.0, %258 ], [ %braindeadinterface.0, %267 ], [ %braindeadinterface.0, %381 ], [ %braindeadinterface.0, %504 ], [ %braindeadinterface.0, %520 ], [ 1, %597 ], [ %braindeadinterface.0, %617 ]
  %automode.0 = phi i32 [ 0, %.preheader125 ], [ %automode.1, %517 ], [ %automode.1, %548 ], [ %automode.1, %637 ], [ %automode.1, %640 ], [ %automode.1, %634 ], [ %automode.1, %630 ], [ %automode.1, %624 ], [ %automode.1, %623 ], [ %automode.1, %613 ], [ %automode.1, %608 ], [ %automode.1, %607 ], [ %automode.1, %603 ], [ %automode.1, %593 ], [ %automode.1, %583 ], [ %automode.1, %577 ], [ %automode.1, %573 ], [ %automode.1, %569 ], [ %automode.1, %565 ], [ %automode.1, %561 ], [ %automode.1, %557 ], [ %automode.1, %524 ], [ %automode.1, %492 ], [ %automode.1, %489 ], [ %automode.1, %478 ], [ %automode.1, %473 ], [ %automode.1, %469 ], [ %automode.1, %465 ], [ %automode.1, %437 ], [ %automode.1, %433 ], [ %automode.1, %430 ], [ %automode.1, %421 ], [ %automode.1, %403 ], [ %automode.1, %398 ], [ %automode.1, %393 ], [ %automode.1, %387 ], [ %automode.1, %380 ], [ %automode.1, %376 ], [ %automode.1, %370 ], [ %automode.1, %369 ], [ %automode.1, %365 ], [ %automode.1, %359 ], [ %automode.1, %358 ], [ %automode.1, %354 ], [ %automode.1, %351 ], [ %automode.1, %339 ], [ %automode.1, %334 ], [ %automode.1, %330 ], [ 0, %329 ], [ %automode.1, %302 ], [ %automode.1, %298 ], [ %automode.1, %290 ], [ %automode.1, %263 ], [ %automode.1, %258 ], [ %automode.1, %267 ], [ %automode.1, %381 ], [ %automode.1, %504 ], [ %automode.1, %520 ], [ %automode.1, %597 ], [ 1, %617 ]
  %27 = icmp ne i32 %is_edit_mode.0, 0, !dbg !357
  br i1 %27, label %192, label %28, !dbg !358

; <label>:28                                      ; preds = %.backedge
  %29 = load i32* @comp_color, align 4, !dbg !359, !tbaa !217
  %30 = load i32* @white_to_move, align 4, !dbg !360, !tbaa !217
  %notlhs = icmp ne i32 %29, %30, !dbg !361
  %notrhs = icmp eq i32 %automode.0, 0, !dbg !361
  %or.cond.not = and i1 %notrhs, %notlhs, !dbg !361
  %31 = load i32* @must_sit, align 4
  %32 = or i32 %31, %force_mode.0, !dbg !361
  %33 = load i32* @result, align 4
  %34 = or i32 %32, %33, !dbg !361
  %35 = icmp ne i32 %34, 0, !dbg !361
  %36 = or i1 %or.cond.not, %35, !dbg !361
  br i1 %36, label %192, label %37, !dbg !361

; <label>:37                                      ; preds = %28
  store i32 0, i32* @is_pondering, align 4, !dbg !362, !tbaa !258
  call void @think(%struct.move_s* sret %1) #8, !dbg !354
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 24, i32 4, i1 false), !dbg !354, !tbaa.struct !363
  store i32 0, i32* @ply, align 4, !dbg !364, !tbaa !217
  %38 = load i32* @must_sit, align 4, !dbg !365, !tbaa !258
  %39 = icmp eq i32 %38, 0, !dbg !365
  %40 = load i32* @must_go, align 4
  %41 = icmp ne i32 %40, 0, !dbg !367
  %or.cond9 = or i1 %39, %41, !dbg !368
  br i1 %or.cond9, label %42, label %192, !dbg !368

; <label>:42                                      ; preds = %37
  %43 = load i32* @Variant, align 4, !dbg !369, !tbaa !217
  %.off = add i32 %43, -3, !dbg !372
  %44 = icmp ult i32 %.off, 2, !dbg !372
  %45 = load i32* @result, align 4
  %46 = icmp ne i32 %45, 2, !dbg !373
  %47 = and i32 %45, -2, !dbg !372
  %.cmp = icmp ne i32 %47, 2, !dbg !372
  %48 = and i1 %44, %.cmp, !dbg !372
  br i1 %48, label %thread-pre-split, label %49, !dbg !372

; <label>:49                                      ; preds = %42
  %switch = icmp ult i32 %43, 3, !dbg !374
  br i1 %switch, label %50, label %186, !dbg !374

; <label>:50                                      ; preds = %49
  %51 = load i32* @comp_color, align 4, !dbg !375, !tbaa !217
  %52 = icmp eq i32 %51, 1, !dbg !376
  %or.cond21 = and i1 %46, %52, !dbg !377
  br i1 %or.cond21, label %thread-pre-split, label %53, !dbg !377

; <label>:53                                      ; preds = %50
  %54 = icmp eq i32 %51, 0, !dbg !378
  br i1 %54, label %switch.early.test, label %186

switch.early.test:                                ; preds = %53
  switch i32 %45, label %55 [
    i32 3, label %188
    i32 4, label %189
    i32 5, label %190
    i32 1, label %191
  ], !dbg !379

thread-pre-split:                                 ; preds = %50, %42
  switch i32 %45, label %55 [
    i32 4, label %189
    i32 5, label %190
    i32 1, label %191
  ], !dbg !380

; <label>:55                                      ; preds = %thread-pre-split, %switch.early.test
  call void @llvm.dbg.value(metadata %struct.move_s* %comp_move, i64 0, metadata !41, metadata !208), !dbg !381
  call void @comp_to_coord(%struct.move_s* byval align 8 %comp_move, i8* %5) #8, !dbg !382
  %56 = load i32* @hash, align 4, !dbg !384, !tbaa !217
  %57 = load i32* @move_number, align 4, !dbg !385, !tbaa !217
  %58 = sext i32 %57 to i64, !dbg !386
  %59 = getelementptr inbounds [600 x i32]* @hash_history, i64 0, i64 %58, !dbg !386
  store i32 %56, i32* %59, align 4, !dbg !387, !tbaa !217
  %60 = getelementptr inbounds [600 x %struct.move_s]* %game_history, i64 0, i64 %58, !dbg !388
  %61 = bitcast %struct.move_s* %60 to i8*, !dbg !389
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %25, i64 24, i32 8, i1 false), !dbg !389, !tbaa.struct !363
  call void @llvm.dbg.value(metadata %struct.move_s* %comp_move, i64 0, metadata !41, metadata !208), !dbg !381
  call void @make(%struct.move_s* %comp_move, i32 0) #8, !dbg !390
  %62 = load i32* @move_number, align 4, !dbg !391, !tbaa !217
  %63 = add nsw i32 %62, 1, !dbg !391
  store i32 %63, i32* @move_number, align 4, !dbg !391, !tbaa !217
  %64 = sext i32 %62 to i64, !dbg !392
  %65 = getelementptr inbounds [600 x %struct.move_x]* %game_history_x, i64 0, i64 %64, !dbg !392
  %66 = bitcast %struct.move_x* %65 to i8*, !dbg !393
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i64 16, i32 16, i1 false), !dbg !393, !tbaa.struct !394
  store i32 0, i32* @userealholdings, align 4, !dbg !395, !tbaa !217
  %67 = load i32* @must_go, align 4, !dbg !396, !tbaa !217
  %68 = add nsw i32 %67, -1, !dbg !396
  store i32 %68, i32* @must_go, align 4, !dbg !396, !tbaa !217
  %69 = call i32 @is_draw() #8, !dbg !397
  %70 = icmp eq i32 %69, 0, !dbg !397
  br i1 %70, label %72, label %71, !dbg !399

; <label>:71                                      ; preds = %55
  store i32 5, i32* @result, align 4, !dbg !400, !tbaa !217
  br label %76, !dbg !402

; <label>:72                                      ; preds = %55
  %73 = load i32* @fifty, align 4, !dbg !403, !tbaa !217
  %74 = icmp sgt i32 %73, 100, !dbg !405
  br i1 %74, label %75, label %76, !dbg !406

; <label>:75                                      ; preds = %72
  store i32 4, i32* @result, align 4, !dbg !407, !tbaa !217
  br label %76, !dbg !409

; <label>:76                                      ; preds = %72, %75, %71
  %77 = load i32* @root_to_move, align 4, !dbg !410, !tbaa !217
  %78 = xor i32 %77, 1, !dbg !410
  store i32 %78, i32* @root_to_move, align 4, !dbg !410, !tbaa !217
  call void @reset_piece_square() #8, !dbg !411
  %79 = load i32* @book_ply, align 4, !dbg !412, !tbaa !217
  %80 = icmp slt i32 %79, 40, !dbg !414
  br i1 %80, label %81, label %87, !dbg !415

; <label>:81                                      ; preds = %76
  %82 = icmp eq i32 %79, 0, !dbg !416
  br i1 %82, label %83, label %85, !dbg !419

; <label>:83                                      ; preds = %81
  %84 = call i8* @__strcpy_chk(i8* getelementptr inbounds ([256 x i8]* @opening_history, i64 0, i64 0), i8* %5, i64 256) #8, !dbg !420
  br label %87, !dbg !422

; <label>:85                                      ; preds = %81
  %86 = call i8* @__strcat_chk(i8* getelementptr inbounds ([256 x i8]* @opening_history, i64 0, i64 0), i8* %5, i64 256) #8, !dbg !423
  br label %87

; <label>:87                                      ; preds = %83, %85, %76
  %88 = load i32* @book_ply, align 4, !dbg !425, !tbaa !217
  %89 = add nsw i32 %88, 1, !dbg !425
  store i32 %89, i32* @book_ply, align 4, !dbg !425, !tbaa !217
  %90 = load i32* @nodes, align 4, !dbg !426, !tbaa !217
  %91 = load i32* @qnodes, align 4, !dbg !427, !tbaa !217
  %92 = sitofp i32 %91 to float, !dbg !428
  %93 = sitofp i32 %90 to float, !dbg !429
  %94 = fdiv float %92, %93, !dbg !430
  %95 = fmul float %94, 1.000000e+02, !dbg !431
  %96 = fpext float %95 to double, !dbg !431
  %97 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str1, i64 0, i64 0), i32 %90, double %96) #8, !dbg !432
  %98 = load i32* @ECacheProbes, align 4, !dbg !433, !tbaa !217
  %99 = load i32* @ECacheHits, align 4, !dbg !434, !tbaa !217
  %100 = uitofp i32 %99 to float, !dbg !435
  %101 = uitofp i32 %98 to float, !dbg !436
  %102 = fadd float %101, 1.000000e+00, !dbg !437
  %103 = fdiv float %100, %102, !dbg !438
  %104 = fmul float %103, 1.000000e+02, !dbg !439
  %105 = fpext float %104 to double, !dbg !440
  %106 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str2, i64 0, i64 0), i32 %98, i32 %99, double %105) #8, !dbg !441
  %107 = load i32* @TTStores, align 4, !dbg !442, !tbaa !217
  %108 = load i32* @TTProbes, align 4, !dbg !443, !tbaa !217
  %109 = load i32* @TTHits, align 4, !dbg !444, !tbaa !217
  %110 = uitofp i32 %109 to float, !dbg !445
  %111 = uitofp i32 %108 to float, !dbg !446
  %112 = fadd float %111, 1.000000e+00, !dbg !447
  %113 = fdiv float %110, %112, !dbg !448
  %114 = fmul float %113, 1.000000e+02, !dbg !449
  %115 = fpext float %114 to double, !dbg !450
  %116 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([60 x i8]* @.str3, i64 0, i64 0), i32 %107, i32 %108, i32 %109, double %115) #8, !dbg !451
  %117 = load i32* @NTries, align 4, !dbg !452, !tbaa !217
  %118 = load i32* @NCuts, align 4, !dbg !453, !tbaa !217
  %119 = uitofp i32 %118 to float, !dbg !454
  %120 = fmul float %119, 1.000000e+02, !dbg !455
  %121 = uitofp i32 %117 to float, !dbg !456
  %122 = fadd float %121, 1.000000e+00, !dbg !457
  %123 = fdiv float %120, %122, !dbg !458
  %124 = fpext float %123 to double, !dbg !459
  %125 = load i32* @TExt, align 4, !dbg !460, !tbaa !217
  %126 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([51 x i8]* @.str4, i64 0, i64 0), i32 %117, i32 %118, double %124, i32 %125) #8, !dbg !461
  %127 = load i32* @ext_check, align 4, !dbg !462, !tbaa !217
  %128 = load i32* @razor_drop, align 4, !dbg !463, !tbaa !217
  %129 = load i32* @razor_material, align 4, !dbg !464, !tbaa !217
  %130 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([61 x i8]* @.str5, i64 0, i64 0), i32 %127, i32 %128, i32 %129) #8, !dbg !465
  %131 = load i32* @FHF, align 4, !dbg !466, !tbaa !217
  %132 = uitofp i32 %131 to float, !dbg !467
  %133 = fmul float %132, 1.000000e+02, !dbg !468
  %134 = load i32* @FH, align 4, !dbg !469, !tbaa !217
  %135 = add i32 %134, 1, !dbg !470
  %136 = uitofp i32 %135 to float, !dbg !471
  %137 = fdiv float %133, %136, !dbg !472
  %138 = fpext float %137 to double, !dbg !473
  %139 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([22 x i8]* @.str6, i64 0, i64 0), double %138) #8, !dbg !474
  %140 = load i32* @Material, align 4, !dbg !475, !tbaa !217
  %141 = call i32 @eval(i32 -1000000, i32 1000000) #8, !dbg !476
  %142 = load i32* @maxposdiff, align 4, !dbg !477, !tbaa !217
  %143 = load i32* @white_hand_eval, align 4, !dbg !478, !tbaa !217
  %144 = load i32* @black_hand_eval, align 4, !dbg !479, !tbaa !217
  %145 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([81 x i8]* @.str7, i64 0, i64 0), i32 %140, i32 %141, i32 %142, i32 %143, i32 %144) #8, !dbg !480
  %146 = load i32* @hash, align 4, !dbg !481, !tbaa !217
  %147 = load i32* @hold_hash, align 4, !dbg !482, !tbaa !217
  %148 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str8, i64 0, i64 0), i32 %146, i32 %147) #8, !dbg !483
  %149 = load i32* @result, align 4, !dbg !484, !tbaa !217
  %150 = icmp eq i32 %149, 0, !dbg !484
  %151 = load i32* @xb_mode, align 4, !dbg !486, !tbaa !217
  %152 = icmp ne i32 %151, 0, !dbg !486
  %153 = bitcast %struct.move_s* %comp_move to i64*, !dbg !489
  %154 = load i64* %153, align 8, !dbg !489
  %155 = trunc i64 %154 to i32, !dbg !489
  %156 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i64 0, i32 0), align 4, !dbg !492, !tbaa !493
  %157 = lshr i64 %154, 32
  %158 = trunc i64 %157 to i32
  %.not = icmp eq i32 %155, %156, !dbg !495
  %159 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i64 0, i32 1), align 4
  %160 = icmp eq i32 %158, %159, !dbg !500
  %or.cond128 = and i1 %.not, %160, !dbg !495
  br i1 %150, label %161, label %172, !dbg !501

; <label>:161                                     ; preds = %87
  br i1 %152, label %162, label %169, !dbg !502

; <label>:162                                     ; preds = %161
  br i1 %or.cond128, label %165, label %163, !dbg !495

; <label>:163                                     ; preds = %162
  %164 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.str9, i64 0, i64 0), i8* %5) #8, !dbg !503
  br label %165, !dbg !503

; <label>:165                                     ; preds = %162, %163
  %166 = load i32* @Variant, align 4, !dbg !504, !tbaa !217
  %167 = icmp eq i32 %166, 1, !dbg !506
  br i1 %167, label %168, label %192, !dbg !507

; <label>:168                                     ; preds = %165
  call void @CheckBadFlow(i32 0) #8, !dbg !508
  br label %192, !dbg !510

; <label>:169                                     ; preds = %161
  br i1 %or.cond128, label %192, label %170, !dbg !511

; <label>:170                                     ; preds = %169
  %171 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str10, i64 0, i64 0), i8* %5) #8, !dbg !514
  br label %192, !dbg !514

; <label>:172                                     ; preds = %87
  br i1 %152, label %173, label %176, !dbg !515

; <label>:173                                     ; preds = %172
  br i1 %or.cond128, label %179, label %174, !dbg !516

; <label>:174                                     ; preds = %173
  %175 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.str9, i64 0, i64 0), i8* %5) #8, !dbg !517
  br label %179, !dbg !517

; <label>:176                                     ; preds = %172
  br i1 %or.cond128, label %179, label %177, !dbg !518

; <label>:177                                     ; preds = %176
  %178 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str10, i64 0, i64 0), i8* %5) #8, !dbg !521
  br label %179, !dbg !521

; <label>:179                                     ; preds = %176, %173, %177, %174
  %180 = load i32* @result, align 4, !dbg !522, !tbaa !217
  switch i32 %180, label %185 [
    i32 2, label %181
    i32 3, label %182
    i32 4, label %183
    i32 5, label %184
  ], !dbg !524

; <label>:181                                     ; preds = %179
  %puts109 = call i32 @puts(i8* getelementptr inbounds ([18 x i8]* @str158, i64 0, i64 0)), !dbg !525
  br label %192, !dbg !527

; <label>:182                                     ; preds = %179
  %puts108 = call i32 @puts(i8* getelementptr inbounds ([18 x i8]* @str157, i64 0, i64 0)), !dbg !528
  br label %192, !dbg !531

; <label>:183                                     ; preds = %179
  %puts107 = call i32 @puts(i8* getelementptr inbounds ([26 x i8]* @str156, i64 0, i64 0)), !dbg !532
  br label %192, !dbg !535

; <label>:184                                     ; preds = %179
  %puts106 = call i32 @puts(i8* getelementptr inbounds ([28 x i8]* @str155, i64 0, i64 0)), !dbg !536
  br label %192, !dbg !539

; <label>:185                                     ; preds = %179
  %puts105 = call i32 @puts(i8* getelementptr inbounds ([15 x i8]* @str154, i64 0, i64 0)), !dbg !540
  br label %192

; <label>:186                                     ; preds = %49, %53
  switch i32 %45, label %191 [
    i32 2, label %187
    i32 3, label %188
    i32 4, label %189
    i32 5, label %190
  ], !dbg !542

; <label>:187                                     ; preds = %186
  %puts102 = call i32 @puts(i8* getelementptr inbounds ([18 x i8]* @str158, i64 0, i64 0)), !dbg !544
  br label %192, !dbg !547

; <label>:188                                     ; preds = %switch.early.test, %186
  %puts101 = call i32 @puts(i8* getelementptr inbounds ([18 x i8]* @str157, i64 0, i64 0)), !dbg !548
  br label %192, !dbg !551

; <label>:189                                     ; preds = %thread-pre-split, %switch.early.test, %186
  %puts100 = call i32 @puts(i8* getelementptr inbounds ([26 x i8]* @str156, i64 0, i64 0)), !dbg !552
  br label %192, !dbg !555

; <label>:190                                     ; preds = %thread-pre-split, %switch.early.test, %186
  %puts99 = call i32 @puts(i8* getelementptr inbounds ([28 x i8]* @str155, i64 0, i64 0)), !dbg !556
  br label %192, !dbg !559

; <label>:191                                     ; preds = %thread-pre-split, %switch.early.test, %186
  %puts98 = call i32 @puts(i8* getelementptr inbounds ([15 x i8]* @str154, i64 0, i64 0)), !dbg !560
  br label %192

; <label>:192                                     ; preds = %169, %187, %189, %191, %190, %188, %181, %183, %185, %184, %182, %37, %170, %165, %168, %28, %.backedge
  %automode.1 = phi i32 [ %automode.0, %.backedge ], [ %automode.0, %28 ], [ %automode.0, %168 ], [ %automode.0, %165 ], [ %automode.0, %170 ], [ %automode.0, %37 ], [ 0, %182 ], [ 0, %184 ], [ 0, %185 ], [ 0, %183 ], [ 0, %181 ], [ 0, %188 ], [ 0, %190 ], [ 0, %191 ], [ 0, %189 ], [ 0, %187 ], [ %automode.0, %169 ]
  %193 = load i32* @xb_mode, align 4, !dbg !562, !tbaa !217
  %194 = icmp eq i32 %193, 0, !dbg !562
  br i1 %194, label %195, label %207, !dbg !564

; <label>:195                                     ; preds = %192
  call void @llvm.dbg.value(metadata i32* %show_board, i64 0, metadata !45, metadata !208), !dbg !256
  %196 = load i32* %show_board, align 4, !dbg !565, !tbaa !258
  %197 = icmp eq i32 %196, 0, !dbg !565
  br i1 %197, label %202, label %198, !dbg !568

; <label>:198                                     ; preds = %195
  %putchar94 = call i32 @putchar(i32 10) #2, !dbg !569
  %199 = load %struct.__sFILE** @__stdoutp, align 8, !dbg !571, !tbaa !276
  %200 = load i32* @comp_color, align 4, !dbg !572, !tbaa !217
  %201 = sub nsw i32 1, %200, !dbg !573
  call void @display_board(%struct.__sFILE* %199, i32 %201) #8, !dbg !574
  br label %202, !dbg !575

; <label>:202                                     ; preds = %195, %198
  %203 = icmp eq i32 %automode.1, 0, !dbg !576
  br i1 %203, label %204, label %229, !dbg !578

; <label>:204                                     ; preds = %202
  %205 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([8 x i8]* @.str17, i64 0, i64 0)) #8, !dbg !579
  %206 = load %struct.__sFILE** @__stdinp, align 8, !dbg !581, !tbaa !276
  call void @rinput(i8* %4, i32 256, %struct.__sFILE* %206) #8, !dbg !582
  br label %229, !dbg !583

; <label>:207                                     ; preds = %192
  %208 = load i32* @must_sit, align 4, !dbg !584, !tbaa !258
  %209 = icmp eq i32 %208, 0, !dbg !584
  br i1 %209, label %210, label %221, !dbg !587

; <label>:210                                     ; preds = %207
  %211 = load i32* @allow_pondering, align 4, !dbg !588, !tbaa !258
  %212 = or i32 %is_edit_mode.0, %force_mode.0, !dbg !589
  %notlhs95 = icmp eq i32 %212, 0, !dbg !589
  %notrhs96 = icmp ne i32 %211, 0, !dbg !589
  %or.cond41.not = and i1 %notlhs95, %notrhs96, !dbg !589
  %213 = load i32* @move_number, align 4
  %214 = icmp ne i32 %213, 0, !dbg !590
  %or.cond44 = and i1 %or.cond41.not, %214, !dbg !589
  %215 = load i32* @is_analyzing, align 4
  %216 = icmp ne i32 %215, 0, !dbg !591
  %or.cond47 = or i1 %or.cond44, %216, !dbg !589
  %or.cond47.not = xor i1 %or.cond47, true, !dbg !589
  %217 = load i32* @result, align 4
  %218 = or i32 %217, %automode.1, !dbg !589
  %219 = icmp ne i32 %218, 0, !dbg !589
  %220 = or i1 %219, %or.cond47.not, !dbg !589
  br i1 %220, label %225, label %224, !dbg !589

; <label>:221                                     ; preds = %207
  %.old48 = load i32* @result, align 4, !dbg !592, !tbaa !217
  %222 = or i32 %.old48, %automode.1, !dbg !593
  %223 = icmp eq i32 %222, 0, !dbg !593
  br i1 %223, label %224, label %225, !dbg !593

; <label>:224                                     ; preds = %221, %210
  store i32 1, i32* @is_pondering, align 4, !dbg !594, !tbaa !258
  call void @think(%struct.move_s* sret %2) #8, !dbg !596
  store i32 0, i32* @is_pondering, align 4, !dbg !597, !tbaa !258
  store i32 0, i32* @ply, align 4, !dbg !598, !tbaa !217
  br label %225, !dbg !599

; <label>:225                                     ; preds = %221, %210, %224
  %226 = icmp eq i32 %automode.1, 0, !dbg !600
  br i1 %226, label %227, label %229, !dbg !602

; <label>:227                                     ; preds = %225
  %228 = load %struct.__sFILE** @__stdinp, align 8, !dbg !603, !tbaa !276
  call void @rinput(i8* %4, i32 256, %struct.__sFILE* %228) #8, !dbg !605
  br label %229, !dbg !606

; <label>:229                                     ; preds = %225, %202, %227, %204
  br i1 %27, label %269, label %230, !dbg !607

; <label>:230                                     ; preds = %229
  %231 = call i32 @is_move(i8* %4) #8, !dbg !608
  %232 = icmp eq i32 %231, 0, !dbg !608
  br i1 %232, label %269, label %233, !dbg !609

; <label>:233                                     ; preds = %230
  call void @llvm.dbg.value(metadata %struct.move_s* %move, i64 0, metadata !31, metadata !208), !dbg !610
  %234 = call i32 @verify_coord(i8* %4, %struct.move_s* %move) #8, !dbg !611
  %235 = icmp eq i32 %234, 0, !dbg !611
  br i1 %235, label %267, label %236, !dbg !612

; <label>:236                                     ; preds = %233
  %237 = load i32* @move_number, align 4, !dbg !613, !tbaa !217
  %238 = sext i32 %237 to i64, !dbg !614
  %239 = getelementptr inbounds [600 x %struct.move_s]* %game_history, i64 0, i64 %238, !dbg !614
  %240 = bitcast %struct.move_s* %239 to i8*, !dbg !350
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %240, i8* %24, i64 24, i32 4, i1 false), !dbg !350, !tbaa.struct !363
  %241 = load i32* @hash, align 4, !dbg !615, !tbaa !217
  %242 = getelementptr inbounds [600 x i32]* @hash_history, i64 0, i64 %238, !dbg !616
  store i32 %241, i32* %242, align 4, !dbg !617, !tbaa !217
  call void @llvm.dbg.value(metadata %struct.move_s* %move, i64 0, metadata !31, metadata !208), !dbg !610
  call void @make(%struct.move_s* %move, i32 0) #8, !dbg !618
  %243 = load i32* @move_number, align 4, !dbg !619, !tbaa !217
  %244 = add nsw i32 %243, 1, !dbg !619
  store i32 %244, i32* @move_number, align 4, !dbg !619, !tbaa !217
  %245 = sext i32 %243 to i64, !dbg !620
  %246 = getelementptr inbounds [600 x %struct.move_x]* %game_history_x, i64 0, i64 %245, !dbg !620
  %247 = bitcast %struct.move_x* %246 to i8*, !dbg !621
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %247, i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i64 16, i32 16, i1 false), !dbg !621, !tbaa.struct !394
  call void @reset_piece_square() #8, !dbg !622
  %248 = load i32* @root_to_move, align 4, !dbg !623, !tbaa !217
  %249 = xor i32 %248, 1, !dbg !623
  store i32 %249, i32* @root_to_move, align 4, !dbg !623, !tbaa !217
  %250 = load i32* @book_ply, align 4, !dbg !624, !tbaa !217
  %251 = icmp slt i32 %250, 40, !dbg !626
  br i1 %251, label %252, label %258, !dbg !627

; <label>:252                                     ; preds = %236
  %253 = icmp eq i32 %250, 0, !dbg !628
  br i1 %253, label %254, label %256, !dbg !631

; <label>:254                                     ; preds = %252
  %255 = call i8* @__strcpy_chk(i8* getelementptr inbounds ([256 x i8]* @opening_history, i64 0, i64 0), i8* %4, i64 256) #8, !dbg !632
  br label %258, !dbg !634

; <label>:256                                     ; preds = %252
  %257 = call i8* @__strcat_chk(i8* getelementptr inbounds ([256 x i8]* @opening_history, i64 0, i64 0), i8* %4, i64 256) #8, !dbg !635
  br label %258

; <label>:258                                     ; preds = %254, %256, %236
  %259 = load i32* @book_ply, align 4, !dbg !637, !tbaa !217
  %260 = add nsw i32 %259, 1, !dbg !637
  store i32 %260, i32* @book_ply, align 4, !dbg !637, !tbaa !217
  call void @llvm.dbg.value(metadata i32* %show_board, i64 0, metadata !45, metadata !208), !dbg !256
  %261 = load i32* %show_board, align 4, !dbg !638, !tbaa !258
  %262 = icmp eq i32 %261, 0, !dbg !638
  br i1 %262, label %.backedge, label %263, !dbg !640

; <label>:263                                     ; preds = %258
  %putchar93 = call i32 @putchar(i32 10) #2, !dbg !641
  %264 = load %struct.__sFILE** @__stdoutp, align 8, !dbg !643, !tbaa !276
  %265 = load i32* @comp_color, align 4, !dbg !644, !tbaa !217
  %266 = sub nsw i32 1, %265, !dbg !645
  call void @display_board(%struct.__sFILE* %264, i32 %266) #8, !dbg !646
  br label %.backedge, !dbg !647

; <label>:267                                     ; preds = %233
  %268 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str18, i64 0, i64 0), i8* %4) #8, !dbg !648
  br label %.backedge

; <label>:269                                     ; preds = %230, %229
  %270 = call i8* @strstr(i8* %4, i8* getelementptr inbounds ([9 x i8]* @.str19, i64 0, i64 0)) #8, !dbg !650
  %271 = icmp eq i8* %270, null, !dbg !650
  br i1 %271, label %.preheader, label %.loopexit, !dbg !652

.preheader:                                       ; preds = %269
  %272 = load i8* %4, align 16, !dbg !653, !tbaa !258
  %273 = icmp eq i8 %272, 0, !dbg !656
  br i1 %273, label %.loopexit, label %.lr.ph, !dbg !656

.lr.ph:                                           ; preds = %.preheader, %.lr.ph
  %274 = phi i8 [ %279, %.lr.ph ], [ %272, %.preheader ]
  %p.0126 = phi i8* [ %278, %.lr.ph ], [ %4, %.preheader ]
  %275 = sext i8 %274 to i32, !dbg !657
  call void @llvm.dbg.value(metadata i32 %275, i64 0, metadata !76, metadata !208) #2, !dbg !658
  %276 = call i32 @__tolower(i32 %275) #8, !dbg !660
  %277 = trunc i32 %276 to i8, !dbg !661
  store i8 %277, i8* %p.0126, align 1, !dbg !662, !tbaa !258
  %278 = getelementptr inbounds i8* %p.0126, i64 1, !dbg !663
  call void @llvm.dbg.value(metadata i8* %278, i64 0, metadata !28, metadata !208), !dbg !664
  %279 = load i8* %278, align 1, !dbg !653, !tbaa !258
  %280 = icmp eq i8 %279, 0, !dbg !656
  br i1 %280, label %.loopexit, label %.lr.ph, !dbg !656

.loopexit:                                        ; preds = %.lr.ph, %.preheader, %269
  %281 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([5 x i8]* @.str20, i64 0, i64 0)) #8, !dbg !665
  %282 = icmp eq i32 %281, 0, !dbg !665
  br i1 %282, label %283, label %284, !dbg !666

; <label>:283                                     ; preds = %.loopexit
  call void @free_hash() #8, !dbg !667
  call void @free_ecache() #8, !dbg !669
  call void @exit(i32 0) #9, !dbg !670
  unreachable, !dbg !670

; <label>:284                                     ; preds = %.loopexit
  %285 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([5 x i8]* @.str21, i64 0, i64 0)) #8, !dbg !671
  %286 = icmp eq i32 %285, 0, !dbg !671
  br i1 %286, label %287, label %292, !dbg !672

; <label>:287                                     ; preds = %284
  %288 = load i32* @is_analyzing, align 4, !dbg !673, !tbaa !258
  %289 = icmp eq i32 %288, 0, !dbg !673
  br i1 %289, label %291, label %290, !dbg !676

; <label>:290                                     ; preds = %287
  store i32 0, i32* @is_analyzing, align 4, !dbg !677, !tbaa !258
  store i32 0, i32* @is_pondering, align 4, !dbg !679, !tbaa !258
  store i32 0, i32* @time_for_move, align 4, !dbg !680, !tbaa !217
  br label %.backedge, !dbg !681

; <label>:291                                     ; preds = %287
  call void @free_hash() #8, !dbg !682
  call void @free_ecache() #8, !dbg !684
  call void @exit(i32 0) #9, !dbg !685
  unreachable, !dbg !685

; <label>:292                                     ; preds = %284
  %293 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([8 x i8]* @.str22, i64 0, i64 0)) #8, !dbg !686
  %294 = icmp eq i32 %293, 0, !dbg !686
  br i1 %294, label %298, label %295, !dbg !687

; <label>:295                                     ; preds = %292
  %296 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([2 x i8]* @.str23, i64 0, i64 0)) #8, !dbg !688
  %297 = icmp eq i32 %296, 0, !dbg !688
  br i1 %297, label %298, label %299, !dbg !689

; <label>:298                                     ; preds = %295, %292
  call void @llvm.dbg.value(metadata i32* %show_board, i64 0, metadata !45, metadata !208), !dbg !256
  call void @toggle_bool(i32* %show_board) #8, !dbg !690
  br label %.backedge, !dbg !692

; <label>:299                                     ; preds = %295
  %300 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([6 x i8]* @.str24, i64 0, i64 0), i64 5) #8, !dbg !693
  %301 = icmp eq i32 %300, 0, !dbg !693
  br i1 %301, label %302, label %315, !dbg !694

; <label>:302                                     ; preds = %299
  call void @llvm.dbg.value(metadata i32* %depth, i64 0, metadata !42, metadata !208), !dbg !216
  %303 = call i32 (i8*, i8*, ...)* @sscanf(i8* %16, i8* getelementptr inbounds ([3 x i8]* @.str25, i64 0, i64 0), i32* %depth) #8, !dbg !695
  store i32 0, i32* @raw_nodes, align 4, !dbg !696, !tbaa !217
  %304 = call i64 @rtime() #8, !dbg !697
  call void @llvm.dbg.value(metadata i64 %304, i64 0, metadata !64, metadata !208), !dbg !698
  call void @llvm.dbg.value(metadata i32* %depth, i64 0, metadata !42, metadata !208), !dbg !216
  %305 = load i32* %depth, align 4, !dbg !699, !tbaa !217
  call void @perft(i32 %305) #8, !dbg !700
  call void @llvm.dbg.value(metadata i32* %depth, i64 0, metadata !42, metadata !208), !dbg !216
  %306 = load i32* %depth, align 4, !dbg !701, !tbaa !217
  %307 = load i32* @raw_nodes, align 4, !dbg !702, !tbaa !217
  %308 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([28 x i8]* @.str26, i64 0, i64 0), i32 %306, i32 %307) #8, !dbg !703
  %309 = call i64 @rtime() #8, !dbg !704
  %310 = call i32 @rdifftime(i64 %309, i64 %304) #8, !dbg !705
  %311 = sitofp i32 %310 to float, !dbg !706
  %312 = fpext float %311 to double, !dbg !706
  %313 = fdiv double %312, 1.000000e+02, !dbg !707
  %314 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str27, i64 0, i64 0), double %313) #8, !dbg !708
  br label %.backedge, !dbg !709

; <label>:315                                     ; preds = %299
  %316 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([4 x i8]* @.str28, i64 0, i64 0)) #8, !dbg !710
  %317 = icmp eq i32 %316, 0, !dbg !710
  br i1 %317, label %318, label %331, !dbg !711

; <label>:318                                     ; preds = %315
  %319 = load i32* @xb_mode, align 4, !dbg !712, !tbaa !217
  %320 = icmp eq i32 %319, 0, !dbg !712
  br i1 %320, label %323, label %321, !dbg !715

; <label>:321                                     ; preds = %318
  %322 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([40 x i8]* @.str29, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8]* @setcode, i64 0, i64 0)) #8, !dbg !716
  br label %323, !dbg !718

; <label>:323                                     ; preds = %318, %321
  %324 = load i32* @is_analyzing, align 4, !dbg !719, !tbaa !258
  %325 = icmp eq i32 %324, 0, !dbg !719
  br i1 %325, label %326, label %330, !dbg !721

; <label>:326                                     ; preds = %323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @std_material to i8*), i64 56, i32 16, i1 false), !dbg !722
  store i32 2, i32* @Variant, align 4, !dbg !724, !tbaa !217
  call void @init_game() #8, !dbg !725
  call void @initialize_hash() #8, !dbg !726
  %327 = icmp eq i32 %braindeadinterface.0, 0, !dbg !727
  br i1 %327, label %328, label %329, !dbg !729

; <label>:328                                     ; preds = %326
  call void @clear_tt() #8, !dbg !730
  call void @reset_ecache() #8, !dbg !732
  br label %329, !dbg !733

; <label>:329                                     ; preds = %326, %328
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !43, metadata !208), !dbg !253
  store i32 0, i32* @must_sit, align 4, !dbg !734, !tbaa !258
  store i32 0, i32* @go_fast, align 4, !dbg !735, !tbaa !258
  store i32 0, i32* @piecedead, align 4, !dbg !736, !tbaa !258
  store i32 0, i32* @partnerdead, align 4, !dbg !737, !tbaa !258
  store i32 0, i32* @kibitzed, align 4, !dbg !738, !tbaa !258
  store i32 0, i32* @fixed_time, align 4, !dbg !739, !tbaa !217
  store i32 0, i32* @root_to_move, align 4, !dbg !740, !tbaa !217
  store i32 0, i32* @comp_color, align 4, !dbg !741, !tbaa !217
  store i32 0, i32* @move_number, align 4, !dbg !742, !tbaa !217
  store i32 0, i32* getelementptr inbounds ([600 x i32]* @hash_history, i64 0, i64 0), align 16, !dbg !743, !tbaa !217
  store i32 0, i32* @bookidx, align 4, !dbg !744, !tbaa !217
  store i32 2000, i32* @opp_rating, align 4, !dbg !745, !tbaa !217
  store i32 2000, i32* @my_rating, align 4, !dbg !746, !tbaa !217
  store i32 0, i32* @must_go, align 4, !dbg !747, !tbaa !217
  store i32 1, i32* @tradefreely, align 4, !dbg !748, !tbaa !217
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !63, metadata !208), !dbg !251
  call void @CheckBadFlow(i32 1) #8, !dbg !749
  call void @ResetHandValue() #8, !dbg !750
  br label %.backedge, !dbg !751

; <label>:330                                     ; preds = %323
  call void @init_game() #8, !dbg !752
  store i32 0, i32* @move_number, align 4, !dbg !754, !tbaa !217
  br label %.backedge

; <label>:331                                     ; preds = %315
  %332 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([7 x i8]* @.str30, i64 0, i64 0)) #8, !dbg !755
  %333 = icmp eq i32 %332, 0, !dbg !755
  br i1 %333, label %334, label %336, !dbg !756

; <label>:334                                     ; preds = %331
  store i32 1, i32* @xb_mode, align 4, !dbg !757, !tbaa !217
  call void @llvm.dbg.value(metadata i32* %show_board, i64 0, metadata !45, metadata !208), !dbg !256
  call void @toggle_bool(i32* %show_board) #8, !dbg !759
  %335 = call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* inttoptr (i64 1 to void (i32)*)) #8, !dbg !760
  %putchar = call i32 @putchar(i32 10) #2, !dbg !761
  %puts = call i32 @puts(i8* getelementptr inbounds ([19 x i8]* @str, i64 0, i64 0)), !dbg !762
  call void @BegForPartner() #8, !dbg !763
  br label %.backedge, !dbg !764

; <label>:336                                     ; preds = %331
  %337 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([6 x i8]* @.str32, i64 0, i64 0)) #8, !dbg !765
  %338 = icmp eq i32 %337, 0, !dbg !765
  br i1 %338, label %339, label %348, !dbg !766

; <label>:339                                     ; preds = %336
  %340 = load i32* @nodes, align 4, !dbg !767, !tbaa !217
  %341 = load i32* @qnodes, align 4, !dbg !769, !tbaa !217
  %342 = sitofp i32 %341 to float, !dbg !770
  %343 = sitofp i32 %340 to float, !dbg !771
  %344 = fdiv float %342, %343, !dbg !772
  %345 = fmul float %344, 1.000000e+02, !dbg !773
  %346 = fpext float %345 to double, !dbg !773
  %347 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str33, i64 0, i64 0), i32 %340, double %346) #8, !dbg !774
  br label %.backedge, !dbg !775

; <label>:348                                     ; preds = %336
  %349 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([5 x i8]* @.str34, i64 0, i64 0)) #8, !dbg !776
  %350 = icmp eq i32 %349, 0, !dbg !776
  br i1 %350, label %351, label %355, !dbg !777

; <label>:351                                     ; preds = %348
  call void @toggle_bool(i32* @post) #8, !dbg !778
  %352 = load i32* @xb_mode, align 4, !dbg !780, !tbaa !217
  %353 = icmp eq i32 %352, 0, !dbg !780
  br i1 %353, label %.backedge, label %354, !dbg !782

; <label>:354                                     ; preds = %351
  store i32 1, i32* @post, align 4, !dbg !783, !tbaa !258
  br label %.backedge, !dbg !784

; <label>:355                                     ; preds = %348
  %356 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([7 x i8]* @.str35, i64 0, i64 0)) #8, !dbg !785
  %357 = icmp eq i32 %356, 0, !dbg !785
  br i1 %357, label %358, label %359, !dbg !786

; <label>:358                                     ; preds = %355
  store i32 0, i32* @post, align 4, !dbg !787, !tbaa !258
  br label %.backedge, !dbg !789

; <label>:359                                     ; preds = %355
  %360 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([7 x i8]* @.str36, i64 0, i64 0)) #8, !dbg !790
  %361 = icmp eq i32 %360, 0, !dbg !790
  br i1 %361, label %.backedge, label %362, !dbg !791

; <label>:362                                     ; preds = %359
  %363 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([5 x i8]* @.str37, i64 0, i64 0)) #8, !dbg !792
  %364 = icmp eq i32 %363, 0, !dbg !792
  br i1 %364, label %365, label %366, !dbg !793

; <label>:365                                     ; preds = %362
  store i32 1, i32* @allow_pondering, align 4, !dbg !794, !tbaa !258
  br label %.backedge, !dbg !796

; <label>:366                                     ; preds = %362
  %367 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([5 x i8]* @.str38, i64 0, i64 0)) #8, !dbg !797
  %368 = icmp eq i32 %367, 0, !dbg !797
  br i1 %368, label %369, label %370, !dbg !798

; <label>:369                                     ; preds = %366
  store i32 0, i32* @allow_pondering, align 4, !dbg !799, !tbaa !258
  br label %.backedge, !dbg !801

; <label>:370                                     ; preds = %366
  %371 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([2 x i8]* @.str39, i64 0, i64 0)) #8, !dbg !802
  %372 = icmp eq i32 %371, 0, !dbg !802
  br i1 %372, label %.backedge, label %373, !dbg !803

; <label>:373                                     ; preds = %370
  %374 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([6 x i8]* @.str40, i64 0, i64 0)) #8, !dbg !804
  %375 = icmp eq i32 %374, 0, !dbg !804
  br i1 %375, label %376, label %377, !dbg !805

; <label>:376                                     ; preds = %373
  store i32 1, i32* @white_to_move, align 4, !dbg !806, !tbaa !217
  store i32 0, i32* @root_to_move, align 4, !dbg !808, !tbaa !217
  store i32 0, i32* @comp_color, align 4, !dbg !809, !tbaa !217
  br label %.backedge, !dbg !810

; <label>:377                                     ; preds = %373
  %378 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([6 x i8]* @.str41, i64 0, i64 0)) #8, !dbg !811
  %379 = icmp eq i32 %378, 0, !dbg !811
  br i1 %379, label %380, label %381, !dbg !812

; <label>:380                                     ; preds = %377
  store i32 0, i32* @white_to_move, align 4, !dbg !813, !tbaa !217
  store i32 1, i32* @root_to_move, align 4, !dbg !815, !tbaa !217
  store i32 1, i32* @comp_color, align 4, !dbg !816, !tbaa !217
  br label %.backedge, !dbg !817

; <label>:381                                     ; preds = %377
  %382 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([6 x i8]* @.str42, i64 0, i64 0)) #8, !dbg !818
  %383 = icmp eq i32 %382, 0, !dbg !818
  br i1 %383, label %.backedge, label %384, !dbg !819

; <label>:384                                     ; preds = %381
  %385 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([5 x i8]* @.str43, i64 0, i64 0)) #8, !dbg !820
  %386 = icmp eq i32 %385, 0, !dbg !820
  br i1 %386, label %387, label %390, !dbg !821

; <label>:387                                     ; preds = %384
  call void @check_phase() #8, !dbg !822
  %388 = call i32 @eval(i32 -1000000, i32 1000000) #8, !dbg !824
  %389 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([10 x i8]* @.str44, i64 0, i64 0), i32 %388) #8, !dbg !825
  br label %.backedge, !dbg !826

; <label>:390                                     ; preds = %384
  %391 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([3 x i8]* @.str45, i64 0, i64 0)) #8, !dbg !827
  %392 = icmp eq i32 %391, 0, !dbg !827
  br i1 %392, label %393, label %395, !dbg !828

; <label>:393                                     ; preds = %390
  %394 = load i32* @white_to_move, align 4, !dbg !829, !tbaa !217
  store i32 %394, i32* @comp_color, align 4, !dbg !831, !tbaa !217
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !43, metadata !208), !dbg !253
  br label %.backedge, !dbg !832

; <label>:395                                     ; preds = %390
  %396 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([5 x i8]* @.str46, i64 0, i64 0), i64 4) #8, !dbg !833
  %397 = icmp eq i32 %396, 0, !dbg !833
  br i1 %397, label %398, label %400, !dbg !834

; <label>:398                                     ; preds = %395
  %399 = call i32 (i8*, i8*, ...)* @sscanf(i8* %17, i8* getelementptr inbounds ([3 x i8]* @.str47, i64 0, i64 0), i32* @time_left) #8, !dbg !835
  br label %.backedge, !dbg !836

; <label>:400                                     ; preds = %395
  %401 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([5 x i8]* @.str48, i64 0, i64 0), i64 4) #8, !dbg !837
  %402 = icmp eq i32 %401, 0, !dbg !837
  br i1 %402, label %403, label %405, !dbg !838

; <label>:403                                     ; preds = %400
  %404 = call i32 (i8*, i8*, ...)* @sscanf(i8* %17, i8* getelementptr inbounds ([3 x i8]* @.str47, i64 0, i64 0), i32* @opp_time) #8, !dbg !839
  br label %.backedge, !dbg !841

; <label>:405                                     ; preds = %400
  %406 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([6 x i8]* @.str49, i64 0, i64 0), i64 5) #8, !dbg !842
  %407 = icmp eq i32 %406, 0, !dbg !842
  br i1 %407, label %408, label %422, !dbg !843

; <label>:408                                     ; preds = %405
  %strchr = call i8* @strchr(i8* %16, i32 58), !dbg !844
  %409 = icmp eq i8* %strchr, null, !dbg !844
  br i1 %409, label %417, label %410, !dbg !847

; <label>:410                                     ; preds = %408
  %411 = call i32 (i8*, i8*, ...)* @sscanf(i8* %16, i8* getelementptr inbounds ([12 x i8]* @.str51, i64 0, i64 0), i32* @moves_to_tc, i32* @min_per_game, i32* @sec_per_game, i32* @inc) #8, !dbg !848
  %412 = load i32* @min_per_game, align 4, !dbg !850, !tbaa !217
  %413 = mul nsw i32 %412, 6000, !dbg !851
  %414 = load i32* @sec_per_game, align 4, !dbg !852, !tbaa !217
  %415 = mul nsw i32 %414, 100, !dbg !853
  %416 = add nsw i32 %415, %413, !dbg !854
  br label %421, !dbg !855

; <label>:417                                     ; preds = %408
  %418 = call i32 (i8*, i8*, ...)* @sscanf(i8* %16, i8* getelementptr inbounds ([9 x i8]* @.str52, i64 0, i64 0), i32* @moves_to_tc, i32* @min_per_game, i32* @inc) #8, !dbg !856
  %419 = load i32* @min_per_game, align 4, !dbg !858, !tbaa !217
  %420 = mul nsw i32 %419, 6000, !dbg !859
  br label %421

; <label>:421                                     ; preds = %417, %410
  %storemerge59 = phi i32 [ %416, %410 ], [ %420, %417 ]
  store i32 %storemerge59, i32* @time_left, align 4, !dbg !860, !tbaa !217
  store i32 %storemerge59, i32* @opp_time, align 4, !dbg !861, !tbaa !217
  store i32 0, i32* @fixed_time, align 4, !dbg !862, !tbaa !217
  store i32 0, i32* @time_cushion, align 4, !dbg !863, !tbaa !217
  br label %.backedge, !dbg !864

; <label>:422                                     ; preds = %405
  %423 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([7 x i8]* @.str53, i64 0, i64 0), i64 6) #8, !dbg !865
  %424 = icmp eq i32 %423, 0, !dbg !865
  br i1 %424, label %425, label %434, !dbg !866

; <label>:425                                     ; preds = %422
  %426 = call i32 (i8*, i8*, ...)* @sscanf(i8* %18, i8* getelementptr inbounds ([6 x i8]* @.str54, i64 0, i64 0), i32* @my_rating, i32* @opp_rating) #8, !dbg !867
  %427 = load i32* @my_rating, align 4, !dbg !868, !tbaa !217
  %428 = icmp eq i32 %427, 0, !dbg !870
  br i1 %428, label %429, label %430, !dbg !871

; <label>:429                                     ; preds = %425
  store i32 2000, i32* @my_rating, align 4, !dbg !872, !tbaa !217
  br label %430, !dbg !873

; <label>:430                                     ; preds = %429, %425
  %431 = load i32* @opp_rating, align 4, !dbg !874, !tbaa !217
  %432 = icmp eq i32 %431, 0, !dbg !876
  br i1 %432, label %433, label %.backedge, !dbg !877

; <label>:433                                     ; preds = %430
  store i32 2000, i32* @opp_rating, align 4, !dbg !878, !tbaa !217
  br label %.backedge, !dbg !879

; <label>:434                                     ; preds = %422
  %435 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([8 x i8]* @.str55, i64 0, i64 0), i64 7) #8, !dbg !880
  %436 = icmp eq i32 %435, 0, !dbg !880
  br i1 %436, label %437, label %438, !dbg !881

; <label>:437                                     ; preds = %434
  call void @ProcessHoldings(i8* %4) #8, !dbg !882
  br label %.backedge, !dbg !884

; <label>:438                                     ; preds = %434
  %439 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([8 x i8]* @.str56, i64 0, i64 0), i64 7) #8, !dbg !885
  %440 = icmp eq i32 %439, 0, !dbg !885
  br i1 %440, label %441, label %466, !dbg !886

; <label>:441                                     ; preds = %438
  %442 = call i8* @strstr(i8* %4, i8* getelementptr inbounds ([7 x i8]* @.str57, i64 0, i64 0)) #8, !dbg !887
  %443 = icmp eq i8* %442, null, !dbg !887
  br i1 %443, label %445, label %444, !dbg !890

; <label>:444                                     ; preds = %441
  store i32 2, i32* @Variant, align 4, !dbg !891, !tbaa !217
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @std_material to i8*), i64 56, i32 16, i1 false), !dbg !893
  br label %465, !dbg !894

; <label>:445                                     ; preds = %441
  %446 = call i8* @strstr(i8* %4, i8* getelementptr inbounds ([11 x i8]* @.str58, i64 0, i64 0)) #8, !dbg !895
  %447 = icmp eq i8* %446, null, !dbg !895
  br i1 %447, label %449, label %448, !dbg !897

; <label>:448                                     ; preds = %445
  store i32 0, i32* @Variant, align 4, !dbg !898, !tbaa !217
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @zh_material to i8*), i64 56, i32 16, i1 false), !dbg !900
  br label %465, !dbg !901

; <label>:449                                     ; preds = %445
  %450 = call i8* @strstr(i8* %4, i8* getelementptr inbounds ([9 x i8]* @.str59, i64 0, i64 0)) #8, !dbg !902
  %451 = icmp eq i8* %450, null, !dbg !902
  br i1 %451, label %453, label %452, !dbg !904

; <label>:452                                     ; preds = %449
  store i32 1, i32* @Variant, align 4, !dbg !905, !tbaa !217
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @zh_material to i8*), i64 56, i32 16, i1 false), !dbg !907
  br label %465, !dbg !908

; <label>:453                                     ; preds = %449
  %454 = call i8* @strstr(i8* %4, i8* getelementptr inbounds ([8 x i8]* @.str60, i64 0, i64 0)) #8, !dbg !909
  %455 = icmp eq i8* %454, null, !dbg !909
  br i1 %455, label %457, label %456, !dbg !911

; <label>:456                                     ; preds = %453
  store i32 3, i32* @Variant, align 4, !dbg !912, !tbaa !217
  store i32 0, i32* @Giveaway, align 4, !dbg !914, !tbaa !217
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @suicide_material to i8*), i64 56, i32 16, i1 false), !dbg !915
  br label %465, !dbg !916

; <label>:457                                     ; preds = %453
  %458 = call i8* @strstr(i8* %4, i8* getelementptr inbounds ([9 x i8]* @.str61, i64 0, i64 0)) #8, !dbg !917
  %459 = icmp eq i8* %458, null, !dbg !917
  br i1 %459, label %461, label %460, !dbg !919

; <label>:460                                     ; preds = %457
  store i32 3, i32* @Variant, align 4, !dbg !920, !tbaa !217
  store i32 1, i32* @Giveaway, align 4, !dbg !922, !tbaa !217
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @suicide_material to i8*), i64 56, i32 16, i1 false), !dbg !923
  br label %465, !dbg !924

; <label>:461                                     ; preds = %457
  %462 = call i8* @strstr(i8* %4, i8* getelementptr inbounds ([7 x i8]* @.str62, i64 0, i64 0)) #8, !dbg !925
  %463 = icmp eq i8* %462, null, !dbg !925
  br i1 %463, label %465, label %464, !dbg !927

; <label>:464                                     ; preds = %461
  store i32 4, i32* @Variant, align 4, !dbg !928, !tbaa !217
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @losers_material to i8*), i64 56, i32 16, i1 false), !dbg !930
  br label %465, !dbg !931

; <label>:465                                     ; preds = %461, %448, %456, %464, %460, %452, %444
  call void @initialize_hash() #8, !dbg !932
  call void @clear_tt() #8, !dbg !933
  call void @reset_ecache() #8, !dbg !934
  br label %.backedge, !dbg !935

; <label>:466                                     ; preds = %438
  %467 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([8 x i8]* @.str63, i64 0, i64 0), i64 7) #8, !dbg !936
  %468 = icmp eq i32 %467, 0, !dbg !936
  br i1 %468, label %469, label %470, !dbg !937

; <label>:469                                     ; preds = %466
  store i32 1, i32* @is_analyzing, align 4, !dbg !938, !tbaa !258
  store i32 1, i32* @is_pondering, align 4, !dbg !940, !tbaa !258
  call void @think(%struct.move_s* sret %3) #8, !dbg !941
  store i32 0, i32* @ply, align 4, !dbg !942, !tbaa !217
  br label %.backedge, !dbg !943

; <label>:470                                     ; preds = %466
  %471 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([5 x i8]* @.str64, i64 0, i64 0), i64 4) #8, !dbg !944
  %472 = icmp eq i32 %471, 0, !dbg !944
  br i1 %472, label %473, label %486, !dbg !945

; <label>:473                                     ; preds = %470
  %474 = load i32* @move_number, align 4, !dbg !946, !tbaa !217
  %475 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str65, i64 0, i64 0), i32 %474) #8, !dbg !948
  %476 = load i32* @move_number, align 4, !dbg !949, !tbaa !217
  %477 = icmp sgt i32 %476, 0, !dbg !951
  br i1 %477, label %478, label %.backedge, !dbg !952

; <label>:478                                     ; preds = %473
  %479 = add nsw i32 %476, -1, !dbg !953
  store i32 %479, i32* @move_number, align 4, !dbg !953, !tbaa !217
  %480 = sext i32 %479 to i64, !dbg !955
  %481 = getelementptr inbounds [600 x %struct.move_x]* %game_history_x, i64 0, i64 %480, !dbg !955
  %482 = bitcast %struct.move_x* %481 to i8*, !dbg !955
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i8* %482, i64 16, i32 16, i1 false), !dbg !955, !tbaa.struct !394
  %483 = getelementptr inbounds [600 x %struct.move_s]* %game_history, i64 0, i64 %480, !dbg !956
  call void @unmake(%struct.move_s* %483, i32 0) #8, !dbg !957
  call void @reset_piece_square() #8, !dbg !958
  %484 = load i32* @root_to_move, align 4, !dbg !959, !tbaa !217
  %485 = xor i32 %484, 1, !dbg !959
  store i32 %485, i32* @root_to_move, align 4, !dbg !959, !tbaa !217
  br label %.backedge, !dbg !960

; <label>:486                                     ; preds = %470
  %487 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([7 x i8]* @.str66, i64 0, i64 0), i64 5) #8, !dbg !961
  %488 = icmp eq i32 %487, 0, !dbg !961
  br i1 %488, label %489, label %504, !dbg !962

; <label>:489                                     ; preds = %486
  %490 = load i32* @move_number, align 4, !dbg !963, !tbaa !217
  %491 = icmp sgt i32 %490, 1, !dbg !966
  br i1 %491, label %492, label %.backedge, !dbg !967

; <label>:492                                     ; preds = %489
  %493 = add nsw i32 %490, -1, !dbg !968
  store i32 %493, i32* @move_number, align 4, !dbg !968, !tbaa !217
  %494 = sext i32 %493 to i64, !dbg !970
  %495 = getelementptr inbounds [600 x %struct.move_x]* %game_history_x, i64 0, i64 %494, !dbg !970
  %496 = bitcast %struct.move_x* %495 to i8*, !dbg !970
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i8* %496, i64 16, i32 16, i1 false), !dbg !970, !tbaa.struct !394
  %497 = getelementptr inbounds [600 x %struct.move_s]* %game_history, i64 0, i64 %494, !dbg !971
  call void @unmake(%struct.move_s* %497, i32 0) #8, !dbg !972
  call void @reset_piece_square() #8, !dbg !973
  %498 = load i32* @move_number, align 4, !dbg !974, !tbaa !217
  %499 = add nsw i32 %498, -1, !dbg !974
  store i32 %499, i32* @move_number, align 4, !dbg !974, !tbaa !217
  %500 = sext i32 %499 to i64, !dbg !975
  %501 = getelementptr inbounds [600 x %struct.move_x]* %game_history_x, i64 0, i64 %500, !dbg !975
  %502 = bitcast %struct.move_x* %501 to i8*, !dbg !975
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i8* %502, i64 16, i32 16, i1 false), !dbg !975, !tbaa.struct !394
  %503 = getelementptr inbounds [600 x %struct.move_s]* %game_history, i64 0, i64 %500, !dbg !976
  call void @unmake(%struct.move_s* %503, i32 0) #8, !dbg !977
  call void @reset_piece_square() #8, !dbg !978
  br label %.backedge, !dbg !979

; <label>:504                                     ; preds = %486
  %505 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([5 x i8]* @.str67, i64 0, i64 0), i64 4) #8, !dbg !980
  %506 = icmp eq i32 %505, 0, !dbg !980
  br i1 %506, label %.backedge, label %507, !dbg !981

; <label>:507                                     ; preds = %504
  %lhsc = load i8* %4, align 16, !dbg !982
  %508 = icmp eq i8 %lhsc, 46, !dbg !982
  %or.cond58 = and i1 %27, %508, !dbg !983
  br i1 %or.cond58, label %509, label %518, !dbg !983

; <label>:509                                     ; preds = %507
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !59, metadata !208), !dbg !262
  %510 = load i32* @wking_loc, align 4, !dbg !984, !tbaa !217
  %511 = icmp eq i32 %510, 30, !dbg !987
  br i1 %511, label %512, label %513, !dbg !988

; <label>:512                                     ; preds = %509
  store i32 0, i32* @white_castled, align 4, !dbg !989, !tbaa !217
  br label %513, !dbg !990

; <label>:513                                     ; preds = %512, %509
  %514 = load i32* @bking_loc, align 4, !dbg !991, !tbaa !217
  %515 = icmp eq i32 %514, 114, !dbg !993
  br i1 %515, label %516, label %517, !dbg !994

; <label>:516                                     ; preds = %513
  store i32 0, i32* @black_castled, align 4, !dbg !995, !tbaa !217
  br label %517, !dbg !996

; <label>:517                                     ; preds = %516, %513
  store i32 50, i32* @book_ply, align 4, !dbg !997, !tbaa !217
  store i32 0, i32* @ep_square, align 4, !dbg !998, !tbaa !217
  store i32 0, i32* @move_number, align 4, !dbg !999, !tbaa !217
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([256 x i8]* @opening_history, i64 0, i64 0), i8 0, i64 256, i32 16, i1 false), !dbg !1000
  call void @clear_tt() #8, !dbg !1001
  call void @initialize_hash() #8, !dbg !1002
  call void @reset_piece_square() #8, !dbg !1003
  br label %.backedge, !dbg !1004

; <label>:518                                     ; preds = %507
  %519 = icmp eq i8 %lhsc, 99, !dbg !1005
  %or.cond = and i1 %27, %519, !dbg !1006
  br i1 %or.cond, label %520, label %522, !dbg !1006

; <label>:520                                     ; preds = %518
  %521 = xor i32 %edit_color.0, 1, !dbg !1007
  br label %.backedge, !dbg !1007

; <label>:522                                     ; preds = %518
  %523 = icmp eq i8 %lhsc, 35, !dbg !1010
  %or.cond118 = and i1 %27, %523, !dbg !1011
  br i1 %or.cond118, label %524, label %525, !dbg !1011

; <label>:524                                     ; preds = %522
  call void @reset_board() #8, !dbg !1012
  store i32 0, i32* @move_number, align 4, !dbg !1014, !tbaa !217
  br label %.backedge, !dbg !1015

; <label>:525                                     ; preds = %522
  br i1 %27, label %526, label %554, !dbg !1016

; <label>:526                                     ; preds = %525
  call void @llvm.dbg.value(metadata i32 %533, i64 0, metadata !79, metadata !208) #2, !dbg !1017
  call void @llvm.dbg.value(metadata i32 %533, i64 0, metadata !86, metadata !208) #2, !dbg !1019
  call void @llvm.dbg.value(metadata i64 256, i64 0, metadata !87, metadata !208) #2, !dbg !1021
  %isascii.i.i123 = icmp sgt i8 %lhsc, -1, !dbg !1022
  br i1 %isascii.i.i123, label %527, label %532, !dbg !1022

; <label>:527                                     ; preds = %526
  %528 = sext i8 %lhsc to i64, !dbg !1023
  %529 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %528, !dbg !1023
  %530 = load i32* %529, align 4, !dbg !1023, !tbaa !217
  %531 = and i32 %530, 256, !dbg !1024
  br label %isalpha.exit, !dbg !1022

; <label>:532                                     ; preds = %526
  %533 = sext i8 %lhsc to i32, !dbg !1025
  %534 = call i32 @__maskrune(i32 %533, i64 256) #8, !dbg !1026
  br label %isalpha.exit, !dbg !1022

isalpha.exit:                                     ; preds = %527, %532
  %.sink.i.in.i = phi i32 [ %531, %527 ], [ %534, %532 ], !dbg !1027
  %.sink.i.i = icmp eq i32 %.sink.i.in.i, 0, !dbg !1028
  br i1 %.sink.i.i, label %554, label %535, !dbg !1029

; <label>:535                                     ; preds = %isalpha.exit
  %536 = load i8* %19, align 1, !dbg !321, !tbaa !258
  call void @llvm.dbg.value(metadata i32 %543, i64 0, metadata !79, metadata !208) #2, !dbg !1030
  call void @llvm.dbg.value(metadata i32 %543, i64 0, metadata !86, metadata !208) #2, !dbg !1032
  call void @llvm.dbg.value(metadata i64 256, i64 0, metadata !87, metadata !208) #2, !dbg !1034
  %isascii.i.i119124 = icmp sgt i8 %536, -1, !dbg !1035
  br i1 %isascii.i.i119124, label %537, label %542, !dbg !1035

; <label>:537                                     ; preds = %535
  %538 = sext i8 %536 to i64, !dbg !1036
  %539 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %538, !dbg !1036
  %540 = load i32* %539, align 4, !dbg !1036, !tbaa !217
  %541 = and i32 %540, 256, !dbg !1037
  br label %isalpha.exit122, !dbg !1035

; <label>:542                                     ; preds = %535
  %543 = sext i8 %536 to i32, !dbg !321
  %544 = call i32 @__maskrune(i32 %543, i64 256) #8, !dbg !1038
  br label %isalpha.exit122, !dbg !1035

isalpha.exit122:                                  ; preds = %537, %542
  %.sink.i.in.i120 = phi i32 [ %541, %537 ], [ %544, %542 ], !dbg !1039
  %.sink.i.i121 = icmp eq i32 %.sink.i.in.i120, 0, !dbg !1040
  br i1 %.sink.i.i121, label %554, label %545, !dbg !1041

; <label>:545                                     ; preds = %isalpha.exit122
  %546 = load i8* %20, align 2, !dbg !332, !tbaa !258
  %547 = sext i8 %546 to i32, !dbg !332
  %isdigittmp = add nsw i32 %547, -48, !dbg !1042
  %isdigit = icmp ult i32 %isdigittmp, 10, !dbg !1042
  br i1 %isdigit, label %548, label %554, !dbg !1043

; <label>:548                                     ; preds = %545
  %549 = bitcast [256 x i8]* %input to i16*, !dbg !1044
  %550 = load i16* %549, align 16, !dbg !1044
  %551 = trunc i16 %550 to i8, !dbg !1044
  %552 = lshr i16 %550, 8
  %553 = trunc i16 %552 to i8
  call void @PutPiece(i32 %edit_color.0, i8 signext %551, i8 signext %553, i32 %547) #8, !dbg !1046
  br label %.backedge, !dbg !1047

; <label>:554                                     ; preds = %isalpha.exit122, %isalpha.exit, %545, %525
  %555 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([8 x i8]* @.str71, i64 0, i64 0), i64 7) #8, !dbg !1048
  %556 = icmp eq i32 %555, 0, !dbg !1048
  br i1 %556, label %557, label %558, !dbg !1049

; <label>:557                                     ; preds = %554
  call void @HandlePartner(i8* %18) #8, !dbg !1050
  br label %.backedge, !dbg !1052

; <label>:558                                     ; preds = %554
  %559 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([9 x i8]* @.str72, i64 0, i64 0), i64 8) #8, !dbg !1053
  %560 = icmp eq i32 %559, 0, !dbg !1053
  br i1 %560, label %561, label %562, !dbg !1054

; <label>:561                                     ; preds = %558
  call void @HandlePartner(i8* %21) #8, !dbg !1055
  br label %.backedge, !dbg !1056

; <label>:562                                     ; preds = %558
  %563 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([6 x i8]* @.str73, i64 0, i64 0), i64 5) #8, !dbg !1057
  %564 = icmp eq i32 %563, 0, !dbg !1057
  br i1 %564, label %565, label %566, !dbg !1058

; <label>:565                                     ; preds = %562
  call void @HandlePtell(i8* %4) #8, !dbg !1059
  br label %.backedge, !dbg !1061

; <label>:566                                     ; preds = %562
  %567 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([5 x i8]* @.str74, i64 0, i64 0), i64 4) #8, !dbg !1062
  %568 = icmp eq i32 %567, 0, !dbg !1062
  br i1 %568, label %569, label %570, !dbg !1063

; <label>:569                                     ; preds = %566
  call void @run_epd_testsuite() #8, !dbg !1064
  br label %.backedge, !dbg !1066

; <label>:570                                     ; preds = %566
  %571 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([3 x i8]* @.str75, i64 0, i64 0), i64 2) #8, !dbg !1067
  %572 = icmp eq i32 %571, 0, !dbg !1067
  br i1 %572, label %573, label %577, !dbg !1068

; <label>:573                                     ; preds = %570
  %574 = call i32 (i8*, i8*, ...)* @sscanf(i8* %22, i8* getelementptr inbounds ([3 x i8]* @.str25, i64 0, i64 0), i32* @fixed_time) #8, !dbg !1069
  %575 = load i32* @fixed_time, align 4, !dbg !1070, !tbaa !217
  %576 = mul nsw i32 %575, 100, !dbg !1071
  store i32 %576, i32* @fixed_time, align 4, !dbg !1072, !tbaa !217
  br label %.backedge, !dbg !1073

; <label>:577                                     ; preds = %570
  %578 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([7 x i8]* @.str76, i64 0, i64 0), i64 6) #8, !dbg !1074
  %579 = icmp eq i32 %578, 0, !dbg !1074
  br i1 %579, label %.backedge, label %580, !dbg !1075

; <label>:580                                     ; preds = %577
  %581 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([6 x i8]* @.str77, i64 0, i64 0), i64 5) #8, !dbg !1076
  %582 = icmp eq i32 %581, 0, !dbg !1076
  br i1 %582, label %583, label %590, !dbg !1077

; <label>:583                                     ; preds = %580
  %584 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str78, i64 0, i64 0)) #8, !dbg !1078
  %585 = call i64 @rtime() #8, !dbg !1080
  store i64 %585, i64* @start_time, align 8, !dbg !1081, !tbaa !1082
  %586 = load %struct.__sFILE** @__stdinp, align 8, !dbg !1084, !tbaa !276
  call void @rinput(i8* %6, i32 256, %struct.__sFILE* %586) #8, !dbg !1085
  %587 = call i64 @atol(i8* %6) #8, !dbg !1086
  %588 = mul nsw i64 %587, 100, !dbg !1087
  %589 = trunc i64 %588 to i32, !dbg !1086
  store i32 %589, i32* @pn_time, align 4, !dbg !1088, !tbaa !217
  %putchar60 = call i32 @putchar(i32 10) #2, !dbg !1089
  call void @proofnumbersearch() #8, !dbg !1090
  br label %.backedge, !dbg !1091

; <label>:590                                     ; preds = %580
  %591 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([5 x i8]* @.str79, i64 0, i64 0), i64 4) #8, !dbg !1092
  %592 = icmp eq i32 %591, 0, !dbg !1092
  br i1 %592, label %593, label %597, !dbg !1093

; <label>:593                                     ; preds = %590
  call void @llvm.dbg.value(metadata i32* %pingnum, i64 0, metadata !61, metadata !208), !dbg !1094
  %594 = call i32 (i8*, i8*, ...)* @sscanf(i8* %17, i8* getelementptr inbounds ([3 x i8]* @.str25, i64 0, i64 0), i32* %pingnum) #8, !dbg !1095
  call void @llvm.dbg.value(metadata i32* %pingnum, i64 0, metadata !61, metadata !208), !dbg !1094
  %595 = load i32* %pingnum, align 4, !dbg !1097, !tbaa !217
  %596 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.str80, i64 0, i64 0), i32 %595) #8, !dbg !1098
  br label %.backedge, !dbg !1099

; <label>:597                                     ; preds = %590
  %598 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([6 x i8]* @.str81, i64 0, i64 0), i64 5) #8, !dbg !1100
  %599 = icmp eq i32 %598, 0, !dbg !1100
  br i1 %599, label %.backedge, label %600, !dbg !1101

; <label>:600                                     ; preds = %597
  %601 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([6 x i8]* @.str82, i64 0, i64 0), i64 5) #8, !dbg !1102
  %602 = icmp eq i32 %601, 0, !dbg !1102
  br i1 %602, label %603, label %604, !dbg !1103

; <label>:603                                     ; preds = %600
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @std_material to i8*), i64 56, i32 16, i1 false), !dbg !1104
  store i32 2, i32* @Variant, align 4, !dbg !1106, !tbaa !217
  call void @init_game() #8, !dbg !1107
  call void @initialize_hash() #8, !dbg !1108
  call void @clear_tt() #8, !dbg !1109
  call void @reset_ecache() #8, !dbg !1110
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !43, metadata !208), !dbg !253
  store i32 0, i32* @fixed_time, align 4, !dbg !1111, !tbaa !217
  store i32 0, i32* @root_to_move, align 4, !dbg !1112, !tbaa !217
  store i32 0, i32* @comp_color, align 4, !dbg !1113, !tbaa !217
  store i32 0, i32* @move_number, align 4, !dbg !1114, !tbaa !217
  store i32 0, i32* @bookidx, align 4, !dbg !1115, !tbaa !217
  store i32 2000, i32* @opp_rating, align 4, !dbg !1116, !tbaa !217
  store i32 2000, i32* @my_rating, align 4, !dbg !1117, !tbaa !217
  br label %.backedge, !dbg !1118

; <label>:604                                     ; preds = %600
  %605 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([9 x i8]* @.str19, i64 0, i64 0), i64 8) #8, !dbg !1119
  %606 = icmp eq i32 %605, 0, !dbg !1119
  br i1 %606, label %607, label %608, !dbg !1120

; <label>:607                                     ; preds = %604
  call void @setup_epd_line(i8* %23) #8, !dbg !1121
  br label %.backedge, !dbg !1122

; <label>:608                                     ; preds = %604
  %lhsc111 = load i8* %4, align 16, !dbg !1123
  %609 = icmp eq i8 %lhsc111, 46, !dbg !1123
  br i1 %609, label %.backedge, label %610, !dbg !1125

; <label>:610                                     ; preds = %608
  %611 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([3 x i8]* @.str83, i64 0, i64 0), i64 2) #8, !dbg !1126
  %612 = icmp eq i32 %611, 0, !dbg !1126
  br i1 %612, label %613, label %617, !dbg !1128

; <label>:613                                     ; preds = %610
  %614 = call i32 (i8*, i8*, ...)* @sscanf(i8* %22, i8* getelementptr inbounds ([3 x i8]* @.str25, i64 0, i64 0), i32* @maxdepth) #8, !dbg !1129
  %615 = load i32* @maxdepth, align 4, !dbg !1131, !tbaa !217
  %616 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str84, i64 0, i64 0), i32 %615) #8, !dbg !1132
  br label %.backedge, !dbg !1133

; <label>:617                                     ; preds = %610
  %618 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([5 x i8]* @.str85, i64 0, i64 0), i64 4) #8, !dbg !1134
  %619 = icmp eq i32 %618, 0, !dbg !1134
  br i1 %619, label %.backedge, label %620, !dbg !1136

; <label>:620                                     ; preds = %617
  %621 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([9 x i8]* @.str86, i64 0, i64 0), i64 8) #8, !dbg !1137
  %622 = icmp eq i32 %621, 0, !dbg !1137
  br i1 %622, label %623, label %624, !dbg !1139

; <label>:623                                     ; preds = %620
  %puts62 = call i32 @puts(i8* getelementptr inbounds ([62 x i8]* @str120, i64 0, i64 0)), !dbg !1140
  %puts63 = call i32 @puts(i8* getelementptr inbounds ([52 x i8]* @str121, i64 0, i64 0)), !dbg !1142
  %puts64 = call i32 @puts(i8* getelementptr inbounds ([32 x i8]* @str122, i64 0, i64 0)), !dbg !1143
  %puts65 = call i32 @puts(i8* getelementptr inbounds ([70 x i8]* @str123, i64 0, i64 0)), !dbg !1144
  %puts66 = call i32 @puts(i8* getelementptr inbounds ([45 x i8]* @str124, i64 0, i64 0)), !dbg !1145
  store i32 2, i32* @xb_mode, align 4, !dbg !1146, !tbaa !217
  br label %.backedge, !dbg !1147

; <label>:624                                     ; preds = %620
  %625 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([9 x i8]* @.str92, i64 0, i64 0), i64 8) #8, !dbg !1148
  %626 = icmp eq i32 %625, 0, !dbg !1148
  br i1 %626, label %.backedge, label %627, !dbg !1150

; <label>:627                                     ; preds = %624
  %628 = call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([9 x i8]* @.str93, i64 0, i64 0), i64 8) #8, !dbg !1151
  %629 = icmp eq i32 %628, 0, !dbg !1151
  br i1 %629, label %630, label %631, !dbg !1153

; <label>:630                                     ; preds = %627
  %puts67 = call i32 @puts(i8* getelementptr inbounds ([64 x i8]* @str125, i64 0, i64 0)), !dbg !1154
  br label %.backedge, !dbg !1156

; <label>:631                                     ; preds = %627
  %632 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([5 x i8]* @.str95, i64 0, i64 0)) #8, !dbg !1157
  %633 = icmp eq i32 %632, 0, !dbg !1157
  br i1 %633, label %634, label %637, !dbg !1159

; <label>:634                                     ; preds = %631
  %635 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([6 x i8]* @.str96, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8]* @divider, i64 0, i64 0)) #8, !dbg !1160
  %puts68 = call i32 @puts(i8* getelementptr inbounds ([40 x i8]* @str126, i64 0, i64 0)), !dbg !1162
  %puts69 = call i32 @puts(i8* getelementptr inbounds ([33 x i8]* @str127, i64 0, i64 0)), !dbg !1163
  %puts70 = call i32 @puts(i8* getelementptr inbounds ([50 x i8]* @str128, i64 0, i64 0)), !dbg !1164
  %puts71 = call i32 @puts(i8* getelementptr inbounds ([34 x i8]* @str129, i64 0, i64 0)), !dbg !1165
  %puts72 = call i32 @puts(i8* getelementptr inbounds ([54 x i8]* @str130, i64 0, i64 0)), !dbg !1166
  %puts73 = call i32 @puts(i8* getelementptr inbounds ([48 x i8]* @str131, i64 0, i64 0)), !dbg !1167
  %puts74 = call i32 @puts(i8* getelementptr inbounds ([48 x i8]* @str132, i64 0, i64 0)), !dbg !1168
  %puts75 = call i32 @puts(i8* getelementptr inbounds ([24 x i8]* @str133, i64 0, i64 0)), !dbg !1169
  %puts76 = call i32 @puts(i8* getelementptr inbounds ([28 x i8]* @str134, i64 0, i64 0)), !dbg !1170
  %puts77 = call i32 @puts(i8* getelementptr inbounds ([54 x i8]* @str135, i64 0, i64 0)), !dbg !1171
  %puts78 = call i32 @puts(i8* getelementptr inbounds ([46 x i8]* @str136, i64 0, i64 0)), !dbg !1172
  %puts79 = call i32 @puts(i8* getelementptr inbounds ([41 x i8]* @str137, i64 0, i64 0)), !dbg !1173
  %puts80 = call i32 @puts(i8* getelementptr inbounds ([44 x i8]* @str138, i64 0, i64 0)), !dbg !1174
  %puts81 = call i32 @puts(i8* getelementptr inbounds ([38 x i8]* @str139, i64 0, i64 0)), !dbg !1175
  %puts82 = call i32 @puts(i8* getelementptr inbounds ([51 x i8]* @str140, i64 0, i64 0)), !dbg !1176
  %puts83 = call i32 @puts(i8* getelementptr inbounds ([58 x i8]* @str141, i64 0, i64 0)), !dbg !1177
  %puts84 = call i32 @puts(i8* getelementptr inbounds ([43 x i8]* @str142, i64 0, i64 0)), !dbg !1178
  %puts85 = call i32 @puts(i8* getelementptr inbounds ([50 x i8]* @str143, i64 0, i64 0)), !dbg !1179
  %puts86 = call i32 @puts(i8* getelementptr inbounds ([53 x i8]* @str144, i64 0, i64 0)), !dbg !1180
  %puts87 = call i32 @puts(i8* getelementptr inbounds ([37 x i8]* @str145, i64 0, i64 0)), !dbg !1181
  %puts88 = call i32 @puts(i8* getelementptr inbounds ([37 x i8]* @str146, i64 0, i64 0)), !dbg !1182
  %puts89 = call i32 @puts(i8* getelementptr inbounds ([41 x i8]* @str147, i64 0, i64 0)), !dbg !1183
  %puts90 = call i32 @puts(i8* getelementptr inbounds ([43 x i8]* @str148, i64 0, i64 0)), !dbg !1184
  %636 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([6 x i8]* @.str96, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8]* @divider, i64 0, i64 0)) #8, !dbg !1185
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !45, metadata !208), !dbg !256
  store i32 0, i32* %show_board, align 4, !dbg !1186, !tbaa !258
  br label %.backedge, !dbg !1187

; <label>:637                                     ; preds = %631
  %638 = load i32* @xb_mode, align 4, !dbg !1188, !tbaa !217
  %639 = icmp eq i32 %638, 0, !dbg !1188
  br i1 %639, label %640, label %.backedge, !dbg !1190

; <label>:640                                     ; preds = %637
  %641 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str18, i64 0, i64 0), i8* %4) #8, !dbg !1191
  br label %.backedge, !dbg !1193
}
