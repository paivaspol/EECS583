define void @setup_epd_line(i8* nocapture readonly %inbuff) #0 {
  tail call void @llvm.dbg.value(metadata i8* %inbuff, i64 0, metadata !19, metadata !180), !dbg !181
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !20, metadata !180), !dbg !182
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !21, metadata !180), !dbg !183
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !22, metadata !180), !dbg !184
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !23, metadata !180), !dbg !185
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !25, metadata !180), !dbg !186
  tail call void @llvm.dbg.value(metadata i32 97, i64 0, metadata !26, metadata !180), !dbg !187
  tail call void @llvm.dbg.value(metadata i32 49, i64 0, metadata !27, metadata !180), !dbg !188
  tail call void @llvm.memset.p0i8.i64(i8* bitcast ([144 x i32]* @board to i8*), i8 0, i64 576, i32 16, i1 false), !dbg !189
  store i32 0, i32* @white_castled, align 4, !dbg !190, !tbaa !191
  store i32 0, i32* @black_castled, align 4, !dbg !195, !tbaa !191
  store i32 50, i32* @book_ply, align 4, !dbg !196, !tbaa !191
  tail call void @llvm.dbg.value(metadata i32 110, i64 0, metadata !22, metadata !180), !dbg !184
  br label %1, !dbg !197

; <label>:1                                       ; preds = %1, %0
  %indvars.iv30 = phi i64 [ %indvars.iv.next31, %1 ], [ 0, %0 ]
  %2 = getelementptr inbounds i8* %inbuff, i64 %indvars.iv30, !dbg !198
  %3 = load i8* %2, align 1, !dbg !198, !tbaa !199
  %4 = icmp eq i8 %3, 32, !dbg !200
  %indvars.iv.next31 = add nuw i64 %indvars.iv30, 1, !dbg !197
  br i1 %4, label %1, label %.preheader7, !dbg !197

.preheader7:                                      ; preds = %1
  %5 = trunc i64 %indvars.iv30 to i32, !dbg !201
  br label %6, !dbg !201

; <label>:6                                       ; preds = %.preheader7, %140
  %stage.0 = phi i32 [ %stage.1, %140 ], [ 0, %.preheader7 ]
  %fileoffset.0 = phi i32 [ %fileoffset.1, %140 ], [ 0, %.preheader7 ]
  %rankoffset.0 = phi i32 [ %rankoffset.1, %140 ], [ 110, %.preheader7 ]
  %rankp.0 = phi i32 [ %rankp.1, %140 ], [ 0, %.preheader7 ]
  %i.1 = phi i32 [ %141, %140 ], [ %5, %.preheader7 ]
  %7 = sext i32 %i.1 to i64, !dbg !201
  %8 = getelementptr inbounds i8* %inbuff, i64 %7, !dbg !201
  %9 = load i8* %8, align 1, !dbg !201, !tbaa !199
  %10 = sext i8 %9 to i32, !dbg !201
  switch i8 %9, label %11 [
    i8 10, label %.critedge
    i8 0, label %.critedge
  ], !dbg !202

; <label>:11                                      ; preds = %6
  %12 = icmp eq i32 %stage.0, 0, !dbg !203
  %isdigittmp = add nsw i32 %10, -48
  %isdigit = icmp ult i32 %isdigittmp, 10, !dbg !206
  %or.cond = and i1 %12, %isdigit, !dbg !207
  br i1 %or.cond, label %.preheader, label %25, !dbg !207

.preheader:                                       ; preds = %11
  %13 = tail call i32 @atoi(i8* %8) #8, !dbg !208
  %14 = icmp sgt i32 %13, 0, !dbg !212
  br i1 %14, label %.lr.ph14, label %._crit_edge15, !dbg !213

.lr.ph14:                                         ; preds = %.preheader
  %15 = add i32 %rankoffset.0, %fileoffset.0, !dbg !214
  br label %16, !dbg !213

; <label>:16                                      ; preds = %.lr.ph14, %16
  %indvars.iv28 = phi i64 [ 0, %.lr.ph14 ], [ %indvars.iv.next29, %16 ]
  %17 = trunc i64 %indvars.iv28 to i32, !dbg !215
  %18 = add i32 %15, %17, !dbg !215
  %19 = sext i32 %18 to i64, !dbg !216
  %20 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %19, !dbg !216
  store i32 13, i32* %20, align 4, !dbg !217, !tbaa !191
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !213
  %21 = tail call i32 @atoi(i8* %8) #8, !dbg !208
  %22 = sext i32 %21 to i64, !dbg !212
  %23 = icmp slt i64 %indvars.iv.next29, %22, !dbg !212
  br i1 %23, label %16, label %._crit_edge15, !dbg !213

._crit_edge15:                                    ; preds = %16, %.preheader
  %.lcssa11 = phi i32 [ %13, %.preheader ], [ %21, %16 ]
  %24 = add nsw i32 %.lcssa11, %fileoffset.0, !dbg !218
  tail call void @llvm.dbg.value(metadata i32 %24, i64 0, metadata !23, metadata !180), !dbg !185
  br label %140, !dbg !219

; <label>:25                                      ; preds = %11
  br i1 %12, label %26, label %.critedge2, !dbg !220

; <label>:26                                      ; preds = %25
  %27 = icmp eq i8 %9, 47, !dbg !222
  br i1 %27, label %28, label %33, !dbg !223

; <label>:28                                      ; preds = %26
  %29 = add nsw i32 %rankp.0, 1, !dbg !224
  tail call void @llvm.dbg.value(metadata i32 %29, i64 0, metadata !21, metadata !180), !dbg !183
  %30 = sext i32 %29 to i64, !dbg !226
  %31 = getelementptr inbounds [8 x i32]* @setup_epd_line.rankoffsets, i64 0, i64 %30, !dbg !226
  %32 = load i32* %31, align 4, !dbg !226, !tbaa !191
  tail call void @llvm.dbg.value(metadata i32 %32, i64 0, metadata !22, metadata !180), !dbg !184
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !23, metadata !180), !dbg !185
  br label %140, !dbg !227

; <label>:33                                      ; preds = %26
  tail call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !160, metadata !180) #2, !dbg !228
  tail call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !165, metadata !180) #2, !dbg !231
  tail call void @llvm.dbg.value(metadata i64 256, i64 0, metadata !166, metadata !180) #2, !dbg !233
  %isascii.i.i3 = icmp sgt i8 %9, -1, !dbg !234
  br i1 %isascii.i.i3, label %34, label %39, !dbg !234

; <label>:34                                      ; preds = %33
  %35 = sext i8 %9 to i64, !dbg !235
  %36 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %35, !dbg !235
  %37 = load i32* %36, align 4, !dbg !235, !tbaa !191
  %38 = and i32 %37, 256, !dbg !236
  br label %isalpha.exit, !dbg !234

; <label>:39                                      ; preds = %33
  %40 = tail call i32 @__maskrune(i32 %10, i64 256) #8, !dbg !237
  br label %isalpha.exit, !dbg !234

isalpha.exit:                                     ; preds = %34, %39
  %.sink.i.in.i = phi i32 [ %38, %34 ], [ %40, %39 ], !dbg !238
  %.sink.i.i = icmp eq i32 %.sink.i.in.i, 0, !dbg !239
  %.pre = load i8* %8, align 1, !dbg !240, !tbaa !199
  br i1 %.sink.i.i, label %.critedge2, label %41, !dbg !242

; <label>:41                                      ; preds = %isalpha.exit
  %42 = sext i8 %.pre to i32, !dbg !243
  switch i32 %42, label %91 [
    i32 112, label %43
    i32 80, label %47
    i32 110, label %51
    i32 78, label %55
    i32 98, label %59
    i32 66, label %63
    i32 114, label %67
    i32 82, label %71
    i32 113, label %75
    i32 81, label %79
    i32 107, label %83
    i32 75, label %87
  ], !dbg !245

; <label>:43                                      ; preds = %41
  %44 = add nsw i32 %rankoffset.0, %fileoffset.0, !dbg !246
  %45 = sext i32 %44 to i64, !dbg !248
  %46 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %45, !dbg !248
  store i32 2, i32* %46, align 4, !dbg !249, !tbaa !191
  br label %91, !dbg !250

; <label>:47                                      ; preds = %41
  %48 = add nsw i32 %rankoffset.0, %fileoffset.0, !dbg !251
  %49 = sext i32 %48 to i64, !dbg !252
  %50 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %49, !dbg !252
  store i32 1, i32* %50, align 4, !dbg !253, !tbaa !191
  br label %91, !dbg !254

; <label>:51                                      ; preds = %41
  %52 = add nsw i32 %rankoffset.0, %fileoffset.0, !dbg !255
  %53 = sext i32 %52 to i64, !dbg !256
  %54 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %53, !dbg !256
  store i32 4, i32* %54, align 4, !dbg !257, !tbaa !191
  br label %91, !dbg !258

; <label>:55                                      ; preds = %41
  %56 = add nsw i32 %rankoffset.0, %fileoffset.0, !dbg !259
  %57 = sext i32 %56 to i64, !dbg !260
  %58 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %57, !dbg !260
  store i32 3, i32* %58, align 4, !dbg !261, !tbaa !191
  br label %91, !dbg !262

; <label>:59                                      ; preds = %41
  %60 = add nsw i32 %rankoffset.0, %fileoffset.0, !dbg !263
  %61 = sext i32 %60 to i64, !dbg !264
  %62 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %61, !dbg !264
  store i32 12, i32* %62, align 4, !dbg !265, !tbaa !191
  br label %91, !dbg !266

; <label>:63                                      ; preds = %41
  %64 = add nsw i32 %rankoffset.0, %fileoffset.0, !dbg !267
  %65 = sext i32 %64 to i64, !dbg !268
  %66 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %65, !dbg !268
  store i32 11, i32* %66, align 4, !dbg !269, !tbaa !191
  br label %91, !dbg !270

; <label>:67                                      ; preds = %41
  %68 = add nsw i32 %rankoffset.0, %fileoffset.0, !dbg !271
  %69 = sext i32 %68 to i64, !dbg !272
  %70 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %69, !dbg !272
  store i32 8, i32* %70, align 4, !dbg !273, !tbaa !191
  br label %91, !dbg !274

; <label>:71                                      ; preds = %41
  %72 = add nsw i32 %rankoffset.0, %fileoffset.0, !dbg !275
  %73 = sext i32 %72 to i64, !dbg !276
  %74 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %73, !dbg !276
  store i32 7, i32* %74, align 4, !dbg !277, !tbaa !191
  br label %91, !dbg !278

; <label>:75                                      ; preds = %41
  %76 = add nsw i32 %rankoffset.0, %fileoffset.0, !dbg !279
  %77 = sext i32 %76 to i64, !dbg !280
  %78 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %77, !dbg !280
  store i32 10, i32* %78, align 4, !dbg !281, !tbaa !191
  br label %91, !dbg !282

; <label>:79                                      ; preds = %41
  %80 = add nsw i32 %rankoffset.0, %fileoffset.0, !dbg !283
  %81 = sext i32 %80 to i64, !dbg !284
  %82 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %81, !dbg !284
  store i32 9, i32* %82, align 4, !dbg !285, !tbaa !191
  br label %91, !dbg !286

; <label>:83                                      ; preds = %41
  %84 = add nsw i32 %rankoffset.0, %fileoffset.0, !dbg !287
  store i32 %84, i32* @bking_loc, align 4, !dbg !288, !tbaa !191
  %85 = sext i32 %84 to i64, !dbg !289
  %86 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %85, !dbg !289
  store i32 6, i32* %86, align 4, !dbg !290, !tbaa !191
  br label %91, !dbg !291

; <label>:87                                      ; preds = %41
  %88 = add nsw i32 %rankoffset.0, %fileoffset.0, !dbg !292
  store i32 %88, i32* @wking_loc, align 4, !dbg !293, !tbaa !191
  %89 = sext i32 %88 to i64, !dbg !294
  %90 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %89, !dbg !294
  store i32 5, i32* %90, align 4, !dbg !295, !tbaa !191
  br label %91, !dbg !296

; <label>:91                                      ; preds = %41, %87, %83, %79, %75, %71, %67, %63, %59, %55, %51, %47, %43
  %92 = add nsw i32 %fileoffset.0, 1, !dbg !297
  tail call void @llvm.dbg.value(metadata i32 %92, i64 0, metadata !23, metadata !180), !dbg !185
  br label %140, !dbg !298

.critedge2:                                       ; preds = %isalpha.exit, %25
  %93 = phi i8 [ %9, %25 ], [ %.pre, %isalpha.exit ]
  %94 = icmp eq i8 %93, 32, !dbg !299
  br i1 %94, label %95, label %140, !dbg !300

; <label>:95                                      ; preds = %.critedge2
  %96 = add nsw i32 %stage.0, 1, !dbg !301
  tail call void @llvm.dbg.value(metadata i32 %96, i64 0, metadata !25, metadata !180), !dbg !186
  br i1 %12, label %.preheader4, label %103, !dbg !303

.preheader4:                                      ; preds = %95, %98
  %97 = phi i8 [ %.pre34, %98 ], [ 32, %95 ]
  %indvars.iv26 = phi i64 [ %indvars.iv.next27, %98 ], [ %7, %95 ]
  switch i8 %97, label %101 [
    i8 32, label %98
    i8 119, label %99
  ], !dbg !304

; <label>:98                                      ; preds = %.preheader4
  %indvars.iv.next27 = add i64 %indvars.iv26, 1, !dbg !304
  %.phi.trans.insert33 = getelementptr inbounds i8* %inbuff, i64 %indvars.iv.next27
  %.pre34 = load i8* %.phi.trans.insert33, align 1, !dbg !307, !tbaa !199
  br label %.preheader4, !dbg !304

; <label>:99                                      ; preds = %.preheader4
  %100 = trunc i64 %indvars.iv26 to i32, !dbg !308
  store i32 1, i32* @white_to_move, align 4, !dbg !308, !tbaa !191
  br label %140, !dbg !310

; <label>:101                                     ; preds = %.preheader4
  %102 = trunc i64 %indvars.iv26 to i32, !dbg !311
  store i32 0, i32* @white_to_move, align 4, !dbg !311, !tbaa !191
  br label %140

; <label>:103                                     ; preds = %95
  switch i32 %stage.0, label %140 [
    i32 1, label %104
    i32 2, label %.preheader6
  ], !dbg !312

; <label>:104                                     ; preds = %103
  store i32 1, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 30), align 4, !dbg !313, !tbaa !191
  store i32 1, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 33), align 4, !dbg !316, !tbaa !191
  store i32 1, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 26), align 4, !dbg !317, !tbaa !191
  store i32 1, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 117), align 4, !dbg !318, !tbaa !191
  store i32 1, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 114), align 4, !dbg !319, !tbaa !191
  store i32 1, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 110), align 4, !dbg !320, !tbaa !191
  br label %105, !dbg !321

; <label>:105                                     ; preds = %105, %104
  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %105 ], [ %7, %104 ]
  %106 = getelementptr inbounds i8* %inbuff, i64 %indvars.iv22, !dbg !322
  %107 = load i8* %106, align 1, !dbg !322, !tbaa !199
  %108 = icmp eq i8 %107, 32, !dbg !323
  %indvars.iv.next23 = add i64 %indvars.iv22, 1, !dbg !321
  br i1 %108, label %105, label %.preheader5, !dbg !321

.preheader5:                                      ; preds = %105
  %sext35 = shl i64 %indvars.iv22, 32, !dbg !324
  %109 = ashr exact i64 %sext35, 32, !dbg !324
  %110 = getelementptr inbounds i8* %inbuff, i64 %109, !dbg !324
  %111 = load i8* %110, align 1, !dbg !324, !tbaa !199
  %112 = icmp eq i8 %111, 32, !dbg !325
  br i1 %112, label %._crit_edge, label %.lr.ph, !dbg !326

.lr.ph:                                           ; preds = %.preheader5, %119
  %indvars.iv24 = phi i64 [ %indvars.iv.next25, %119 ], [ %109, %.preheader5 ]
  %113 = phi i8 [ %121, %119 ], [ %111, %.preheader5 ]
  %114 = sext i8 %113 to i32, !dbg !324
  switch i32 %114, label %119 [
    i32 113, label %118
    i32 75, label %115
    i32 81, label %116
    i32 107, label %117
  ], !dbg !327

; <label>:115                                     ; preds = %.lr.ph
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 33), align 4, !dbg !329, !tbaa !191
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 30), align 4, !dbg !331, !tbaa !191
  br label %119, !dbg !332

; <label>:116                                     ; preds = %.lr.ph
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 26), align 4, !dbg !333, !tbaa !191
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 30), align 4, !dbg !334, !tbaa !191
  br label %119, !dbg !335

; <label>:117                                     ; preds = %.lr.ph
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 117), align 4, !dbg !336, !tbaa !191
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 114), align 4, !dbg !337, !tbaa !191
  br label %119, !dbg !338

; <label>:118                                     ; preds = %.lr.ph
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 110), align 4, !dbg !339, !tbaa !191
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 114), align 4, !dbg !340, !tbaa !191
  br label %119, !dbg !341

; <label>:119                                     ; preds = %.lr.ph, %118, %117, %116, %115
  %indvars.iv.next25 = add nsw i64 %indvars.iv24, 1, !dbg !326
  %120 = getelementptr inbounds i8* %inbuff, i64 %indvars.iv.next25, !dbg !324
  %121 = load i8* %120, align 1, !dbg !324, !tbaa !199
  %122 = icmp eq i8 %121, 32, !dbg !325
  br i1 %122, label %._crit_edge, label %.lr.ph, !dbg !326

._crit_edge:                                      ; preds = %119, %.preheader5
  %i.4.lcssa.in = phi i64 [ %indvars.iv22, %.preheader5 ], [ %indvars.iv.next25, %119 ]
  %i.4.lcssa = trunc i64 %i.4.lcssa.in to i32, !dbg !326
  %123 = add nsw i32 %i.4.lcssa, -1, !dbg !342
  tail call void @llvm.dbg.value(metadata i32 %123, i64 0, metadata !20, metadata !180), !dbg !182
  br label %140, !dbg !343

.preheader6:                                      ; preds = %103, %125
  %124 = phi i8 [ %.pre32, %125 ], [ 32, %103 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %125 ], [ %7, %103 ]
  switch i8 %124, label %128 [
    i8 32, label %125
    i8 45, label %126
  ], !dbg !344

; <label>:125                                     ; preds = %.preheader6
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !344
  %.phi.trans.insert = getelementptr inbounds i8* %inbuff, i64 %indvars.iv.next
  %.pre32 = load i8* %.phi.trans.insert, align 1, !dbg !347, !tbaa !199
  br label %.preheader6, !dbg !344

; <label>:126                                     ; preds = %.preheader6
  %127 = trunc i64 %indvars.iv to i32, !dbg !348
  store i32 0, i32* @ep_square, align 4, !dbg !348, !tbaa !191
  br label %140, !dbg !351

; <label>:128                                     ; preds = %.preheader6
  %129 = trunc i64 %indvars.iv to i32, !dbg !347
  %130 = sext i8 %124 to i32, !dbg !347
  tail call void @llvm.dbg.value(metadata i32 %130, i64 0, metadata !28, metadata !180), !dbg !352
  %131 = add nsw i32 %129, 2, !dbg !353
  tail call void @llvm.dbg.value(metadata i32 %131, i64 0, metadata !20, metadata !180), !dbg !182
  %132 = shl i64 %indvars.iv, 32, !dbg !355
  %sext = add i64 %132, 4294967296, !dbg !355
  %133 = ashr exact i64 %sext, 32, !dbg !355
  %134 = getelementptr inbounds i8* %inbuff, i64 %133, !dbg !355
  %135 = load i8* %134, align 1, !dbg !355, !tbaa !199
  %136 = sext i8 %135 to i32, !dbg !355
  tail call void @llvm.dbg.value(metadata i32 %136, i64 0, metadata !29, metadata !180), !dbg !356
  %137 = mul nsw i32 %136, 12, !dbg !357
  %138 = add nsw i32 %130, -659, !dbg !358
  %139 = add i32 %138, %137, !dbg !358
  store i32 %139, i32* @ep_square, align 4, !dbg !359, !tbaa !191
  br label %140

; <label>:140                                     ; preds = %103, %28, %.critedge2, %._crit_edge, %126, %128, %99, %101, %91, %._crit_edge15
  %stage.1 = phi i32 [ 0, %._crit_edge15 ], [ 0, %28 ], [ 0, %91 ], [ %96, %99 ], [ %96, %101 ], [ %96, %._crit_edge ], [ %96, %126 ], [ %96, %128 ], [ %stage.0, %.critedge2 ], [ %96, %103 ]
  %fileoffset.1 = phi i32 [ %24, %._crit_edge15 ], [ 0, %28 ], [ %92, %91 ], [ %fileoffset.0, %99 ], [ %fileoffset.0, %101 ], [ %fileoffset.0, %._crit_edge ], [ %fileoffset.0, %126 ], [ %fileoffset.0, %128 ], [ %fileoffset.0, %.critedge2 ], [ %fileoffset.0, %103 ]
  %rankoffset.1 = phi i32 [ %rankoffset.0, %._crit_edge15 ], [ %32, %28 ], [ %rankoffset.0, %91 ], [ %rankoffset.0, %99 ], [ %rankoffset.0, %101 ], [ %rankoffset.0, %._crit_edge ], [ %rankoffset.0, %126 ], [ %rankoffset.0, %128 ], [ %rankoffset.0, %.critedge2 ], [ %rankoffset.0, %103 ]
  %rankp.1 = phi i32 [ %rankp.0, %._crit_edge15 ], [ %29, %28 ], [ %rankp.0, %91 ], [ %rankp.0, %99 ], [ %rankp.0, %101 ], [ %rankp.0, %._crit_edge ], [ %rankp.0, %126 ], [ %rankp.0, %128 ], [ %rankp.0, %.critedge2 ], [ %rankp.0, %103 ]
  %i.6 = phi i32 [ %i.1, %._crit_edge15 ], [ %i.1, %28 ], [ %i.1, %91 ], [ %100, %99 ], [ %102, %101 ], [ %123, %._crit_edge ], [ %127, %126 ], [ %131, %128 ], [ %i.1, %.critedge2 ], [ %i.1, %103 ]
  %141 = add nsw i32 %i.6, 1, !dbg !360
  tail call void @llvm.dbg.value(metadata i32 %141, i64 0, metadata !20, metadata !180), !dbg !182
  br label %6, !dbg !361

.critedge:                                        ; preds = %6, %6
  tail call void @reset_piece_square() #8, !dbg !362
  tail call void @initialize_hash() #8, !dbg !363
  ret void, !dbg !364
}
