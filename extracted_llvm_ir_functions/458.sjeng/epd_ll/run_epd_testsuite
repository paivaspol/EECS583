define void @run_epd_testsuite() #0 {
entry:
  %readbuff = alloca [2000 x i8], align 16
  %testname = alloca [4096 x i8], align 16
  %tempbuff = alloca [2000 x i8], align 16
  %comp_move = alloca %struct.move_s, align 8
  %tmp = alloca %struct.move_s, align 4
  %0 = getelementptr inbounds [2000 x i8]* %readbuff, i64 0, i64 0, !dbg !273
  call void @llvm.lifetime.start(i64 2000, i8* %0) #2, !dbg !273
  call void @llvm.dbg.declare(metadata !{[2000 x i8]* %readbuff}, metadata !125), !dbg !273
  %1 = getelementptr inbounds [4096 x i8]* %testname, i64 0, i64 0, !dbg !274
  call void @llvm.lifetime.start(i64 4096, i8* %1) #2, !dbg !274
  call void @llvm.dbg.declare(metadata !{[4096 x i8]* %testname}, metadata !129), !dbg !274
  %2 = getelementptr inbounds [2000 x i8]* %tempbuff, i64 0, i64 0, !dbg !275
  call void @llvm.lifetime.start(i64 2000, i8* %2) #2, !dbg !275
  call void @llvm.dbg.declare(metadata !{[2000 x i8]* %tempbuff}, metadata !133), !dbg !275
  call void @llvm.dbg.declare(metadata !{%struct.move_s* %comp_move}, metadata !136), !dbg !276
  call void @llvm.dbg.value(metadata !23, i64 0, metadata !137), !dbg !277
  call void @llvm.dbg.value(metadata !23, i64 0, metadata !138), !dbg !278
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str3, i64 0, i64 0)) #11, !dbg !279
  %3 = load %struct._IO_FILE** @stdin, align 8, !dbg !280, !tbaa !181
  call void @rinput(i8* %1, i32 256, %struct._IO_FILE* %3) #11, !dbg !280
  %call1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str4, i64 0, i64 0)) #11, !dbg !281
  %4 = load %struct._IO_FILE** @stdin, align 8, !dbg !282, !tbaa !181
  call void @rinput(i8* %0, i32 256, %struct._IO_FILE* %4) #11, !dbg !282
  %call4 = call i64 @atol(i8* %0) #10, !dbg !283
  %conv = trunc i64 %call4 to i32, !dbg !283
  call void @llvm.dbg.value(metadata !{i32 %conv}, i64 0, metadata !135), !dbg !283
  %putchar = call i32 @putchar(i32 10) #2, !dbg !284
  %mul = mul nsw i32 %conv, 100, !dbg !285
  call void @llvm.dbg.value(metadata !{i32 %mul}, i64 0, metadata !135), !dbg !285
  %call7 = call %struct._IO_FILE* @fopen(i8* %1, i8* getelementptr inbounds ([2 x i8]* @.str6, i64 0, i64 0)) #11, !dbg !286
  call void @llvm.dbg.value(metadata !{%struct._IO_FILE* %call7}, i64 0, metadata !69), !dbg !286
  %call975 = call i8* @fgets(i8* %0, i32 2000, %struct._IO_FILE* %call7) #11, !dbg !287
  %cmp76 = icmp eq i8* %call975, null, !dbg !287
  br i1 %cmp76, label %while.end, label %while.body.lr.ph, !dbg !287

while.body.lr.ph:                                 ; preds = %entry
  %5 = bitcast %struct.move_s* %comp_move to i8*, !dbg !288
  %6 = bitcast %struct.move_s* %tmp to i8*, !dbg !288
  br label %while.body, !dbg !287

while.body:                                       ; preds = %while.body.lr.ph, %if.end65
  %found.078 = phi i32 [ 0, %while.body.lr.ph ], [ %found.1, %if.end65 ]
  %tested.077 = phi i32 [ 1, %while.body.lr.ph ], [ %phitmp, %if.end65 ]
  call void @llvm.dbg.value(metadata !{i32 %tested.077}, i64 0, metadata !137), !dbg !290
  call void @setup_epd_line(i8* %0) #12, !dbg !291
  %7 = load i32* @white_to_move, align 4, !dbg !292, !tbaa !168
  %not.tobool = icmp eq i32 %7, 0, !dbg !292
  %cond = zext i1 %not.tobool to i32, !dbg !292
  store i32 %cond, i32* @root_to_move, align 4, !dbg !292, !tbaa !168
  call void @clear_tt() #11, !dbg !293
  call void @initialize_hash() #11, !dbg !294
  %8 = load %struct._IO_FILE** @stdout, align 8, !dbg !295, !tbaa !181
  call void @display_board(%struct._IO_FILE* %8, i32 1) #11, !dbg !295
  store i32 0, i32* @forcedwin, align 4, !dbg !296, !tbaa !168
  %call12 = call i32 @interrupt() #11, !dbg !297
  %tobool13 = icmp eq i32 %call12, 0, !dbg !297
  br i1 %tobool13, label %if.end, label %if.then, !dbg !297

if.then:                                          ; preds = %while.body
  %9 = load %struct._IO_FILE** @stdin, align 8, !dbg !297, !tbaa !181
  call void @rinput(i8* %2, i32 256, %struct._IO_FILE* %9) #11, !dbg !297
  br label %if.end, !dbg !297

if.end:                                           ; preds = %while.body, %if.then
  store i32 %mul, i32* @fixed_time, align 4, !dbg !298, !tbaa !168
  call void @think(%struct.move_s* sret %tmp) #11, !dbg !288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 24, i32 4, i1 false), !dbg !288, !tbaa.struct !299
  %10 = load i32* @nodes, align 4, !dbg !300, !tbaa !168
  %11 = load i32* @qnodes, align 4, !dbg !300, !tbaa !168
  %conv15 = sitofp i32 %11 to float, !dbg !300
  %conv16 = sitofp i32 %10 to float, !dbg !300
  %div = fdiv float %conv15, %conv16, !dbg !300
  %conv19 = fmul float %div, 1.000000e+02, !dbg !300
  %conv20 = fpext float %conv19 to double, !dbg !300
  %call21 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str7, i64 0, i64 0), i32 %10, double %conv20) #11, !dbg !300
  %12 = load i32* @ECacheProbes, align 4, !dbg !301, !tbaa !168
  %13 = load i32* @ECacheHits, align 4, !dbg !301, !tbaa !168
  %conv22 = uitofp i32 %13 to float, !dbg !301
  %conv23 = uitofp i32 %12 to float, !dbg !301
  %add = fadd float %conv23, 1.000000e+00, !dbg !301
  %div24 = fdiv float %conv22, %add, !dbg !301
  %mul25 = fmul float %div24, 1.000000e+02, !dbg !301
  %conv26 = fpext float %mul25 to double, !dbg !301
  %call27 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str8, i64 0, i64 0), i32 %12, i32 %13, double %conv26) #11, !dbg !301
  %14 = load i32* @TTStores, align 4, !dbg !302, !tbaa !168
  %15 = load i32* @TTProbes, align 4, !dbg !302, !tbaa !168
  %16 = load i32* @TTHits, align 4, !dbg !302, !tbaa !168
  %conv28 = uitofp i32 %16 to float, !dbg !302
  %conv29 = uitofp i32 %15 to float, !dbg !302
  %add30 = fadd float %conv29, 1.000000e+00, !dbg !302
  %div31 = fdiv float %conv28, %add30, !dbg !302
  %mul32 = fmul float %div31, 1.000000e+02, !dbg !302
  %conv33 = fpext float %mul32 to double, !dbg !302
  %call34 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([60 x i8]* @.str9, i64 0, i64 0), i32 %14, i32 %15, i32 %16, double %conv33) #11, !dbg !302
  %17 = load i32* @NTries, align 4, !dbg !303, !tbaa !168
  %18 = load i32* @NCuts, align 4, !dbg !303, !tbaa !168
  %conv35 = uitofp i32 %18 to float, !dbg !303
  %mul36 = fmul float %conv35, 1.000000e+02, !dbg !303
  %conv37 = uitofp i32 %17 to float, !dbg !303
  %add38 = fadd float %conv37, 1.000000e+00, !dbg !303
  %div39 = fdiv float %mul36, %add38, !dbg !303
  %conv40 = fpext float %div39 to double, !dbg !303
  %19 = load i32* @TExt, align 4, !dbg !303, !tbaa !168
  %call41 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([51 x i8]* @.str10, i64 0, i64 0), i32 %17, i32 %18, double %conv40, i32 %19) #11, !dbg !303
  %20 = load i32* @ext_check, align 4, !dbg !304, !tbaa !168
  %21 = load i32* @razor_drop, align 4, !dbg !304, !tbaa !168
  %22 = load i32* @razor_material, align 4, !dbg !304, !tbaa !168
  %call42 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([61 x i8]* @.str11, i64 0, i64 0), i32 %20, i32 %21, i32 %22) #11, !dbg !304
  %23 = load i32* @FHF, align 4, !dbg !305, !tbaa !168
  %conv43 = uitofp i32 %23 to float, !dbg !305
  %mul44 = fmul float %conv43, 1.000000e+02, !dbg !305
  %24 = load i32* @FH, align 4, !dbg !305, !tbaa !168
  %conv45 = uitofp i32 %24 to float, !dbg !305
  %div46 = fdiv float %mul44, %conv45, !dbg !305
  %add47 = fadd float %div46, 1.000000e+00, !dbg !305
  %conv48 = fpext float %add47 to double, !dbg !305
  %call49 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([22 x i8]* @.str12, i64 0, i64 0), double %conv48) #11, !dbg !305
  %25 = load i32* @Material, align 4, !dbg !306, !tbaa !168
  %call50 = call i32 @eval(i32 -1000000, i32 1000000) #11, !dbg !306
  %26 = load i32* @maxposdiff, align 4, !dbg !306, !tbaa !168
  %call51 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([47 x i8]* @.str13, i64 0, i64 0), i32 %25, i32 %call50, i32 %26) #11, !dbg !306
  %putchar73 = call i32 @putchar(i32 10) #2, !dbg !307
  %27 = load i32* @forcedwin, align 4, !dbg !308, !tbaa !168
  %tobool53 = icmp eq i32 %27, 0, !dbg !308
  br i1 %tobool53, label %if.then54, label %if.else63, !dbg !308

if.then54:                                        ; preds = %if.end
  %call56 = call i32 @check_solution(i8* %0, %struct.move_s* byval align 8 %comp_move) #12, !dbg !309
  %tobool57 = icmp eq i32 %call56, 0, !dbg !309
  br i1 %tobool57, label %if.else, label %if.then58, !dbg !309

if.then58:                                        ; preds = %if.then54
  %inc59 = add nsw i32 %found.078, 1, !dbg !311
  call void @llvm.dbg.value(metadata !{i32 %inc59}, i64 0, metadata !138), !dbg !311
  %puts74 = call i32 @puts(i8* getelementptr inbounds ([16 x i8]* @str19, i64 0, i64 0)), !dbg !313
  br label %if.end65, !dbg !314

if.else:                                          ; preds = %if.then54
  %puts = call i32 @puts(i8* getelementptr inbounds ([20 x i8]* @str, i64 0, i64 0)), !dbg !315
  br label %if.end65

if.else63:                                        ; preds = %if.end
  %inc64 = add nsw i32 %found.078, 1, !dbg !317
  call void @llvm.dbg.value(metadata !{i32 %inc64}, i64 0, metadata !138), !dbg !317
  br label %if.end65

if.end65:                                         ; preds = %if.then58, %if.else, %if.else63
  %found.1 = phi i32 [ %inc64, %if.else63 ], [ %inc59, %if.then58 ], [ %found.078, %if.else ]
  %call66 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str16, i64 0, i64 0), i32 %found.1, i32 %tested.077) #11, !dbg !319
  %phitmp = add i32 %tested.077, 1, !dbg !320
  %call9 = call i8* @fgets(i8* %0, i32 2000, %struct._IO_FILE* %call7) #11, !dbg !287
  %cmp = icmp eq i8* %call9, null, !dbg !287
  br i1 %cmp, label %while.end, label %while.body, !dbg !287

while.end:                                        ; preds = %if.end65, %entry
  %putchar72 = call i32 @putchar(i32 10) #2, !dbg !321
  call void @llvm.lifetime.end(i64 2000, i8* %2) #2, !dbg !322
  call void @llvm.lifetime.end(i64 4096, i8* %1) #2, !dbg !322
  call void @llvm.lifetime.end(i64 2000, i8* %0) #2, !dbg !322
  ret void, !dbg !322
}
