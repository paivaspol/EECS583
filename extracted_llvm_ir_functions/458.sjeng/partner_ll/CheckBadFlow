define void @CheckBadFlow(i32 %reset) #0 {
entry:
  %hismoves = alloca [512 x %struct.move_s], align 16
  %ourmoves = alloca [512 x %struct.move_s], align 16
  %0 = bitcast [512 x %struct.move_s]* %hismoves to i8*
  call void @llvm.lifetime.start(i64 12288, i8* %0) #1
  %1 = bitcast [512 x %struct.move_s]* %ourmoves to i8*
  call void @llvm.lifetime.start(i64 12288, i8* %1) #1
  %tobool = icmp eq i32 %reset, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* @CheckBadFlow.pawnmated, align 4, !tbaa !2
  store i32 0, i32* @CheckBadFlow.knightmated, align 4, !tbaa !2
  store i32 0, i32* @CheckBadFlow.bishopmated, align 4, !tbaa !2
  store i32 0, i32* @CheckBadFlow.rookmated, align 4, !tbaa !2
  store i32 0, i32* @CheckBadFlow.queenmated, align 4, !tbaa !2
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = call i32 @in_check() #8
  %2 = load i32* @white_to_move, align 4, !tbaa !2
  %tobool1 = icmp ne i32 %2, 0
  %cond = select i1 %tobool1, i32 1, i32 2
  %idxprom488 = zext i32 %cond to i64
  %3 = zext i1 %tobool1 to i32
  %lnot.ext = xor i32 %3, 1
  %idxprom3489 = zext i32 %lnot.ext to i64
  %arrayidx4 = getelementptr inbounds [2 x [16 x i32]]* @holding, i64 0, i64 %idxprom3489, i64 %idxprom488
  %4 = load i32* %arrayidx4, align 4, !tbaa !2
  %tobool5 = icmp eq i32 %4, 0
  br i1 %tobool5, label %if.then6, label %if.end44

if.then6:                                         ; preds = %if.end
  call void @DropaddHolding(i32 %cond, i32 %lnot.ext) #8
  %arrayidx12 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i64 0, i64 0
  call void @gen(%struct.move_s* %arrayidx12) #8
  %5 = load i32* @numb_moves, align 4, !tbaa !2
  %cmp563 = icmp sgt i32 %5, 0
  br i1 %cmp563, label %for.body.lr.ph, label %for.end38

for.body.lr.ph:                                   ; preds = %if.then6
  %arrayidx20 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i64 0, i64 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end34
  %i.0564 = phi i32 [ 0, %for.body.lr.ph ], [ %inc37, %if.end34 ]
  call void @make(%struct.move_s* %arrayidx12, i32 %i.0564) #8
  %call16 = call i32 @check_legal(%struct.move_s* %arrayidx12, i32 %i.0564, i32 %call) #8
  %tobool17 = icmp eq i32 %call16, 0
  br i1 %tobool17, label %if.end34, label %if.then18

if.then18:                                        ; preds = %for.body
  %call19 = call i32 @in_check() #8
  call void @gen(%struct.move_s* %arrayidx20) #8
  %6 = load i32* @numb_moves, align 4, !tbaa !2
  %cmp22558 = icmp slt i32 %6, 1
  br i1 %cmp22558, label %if.end34, label %for.body26

for.body26:                                       ; preds = %if.then18, %for.body26
  %pawnmates.1561 = phi i32 [ %pawnmates.1., %for.body26 ], [ 3, %if.then18 ]
  %j.0560 = phi i32 [ %inc, %for.body26 ], [ 0, %if.then18 ]
  call void @make(%struct.move_s* %arrayidx20, i32 %j.0560) #8
  %call29 = call i32 @check_legal(%struct.move_s* %arrayidx20, i32 %j.0560, i32 %call19) #8
  %tobool30 = icmp eq i32 %call29, 0
  %pawnmates.1. = select i1 %tobool30, i32 %pawnmates.1561, i32 0
  call void @unmake(%struct.move_s* %arrayidx20, i32 %j.0560) #8
  %inc = add nsw i32 %j.0560, 1
  %cmp22 = icmp sge i32 %inc, %6
  %cmp24 = icmp eq i32 %pawnmates.1., 0
  %or.cond513 = or i1 %cmp22, %cmp24
  br i1 %or.cond513, label %if.end34, label %for.body26

if.end34:                                         ; preds = %if.then18, %for.body26, %for.body
  %pawnmates.3 = phi i32 [ 0, %for.body ], [ 3, %if.then18 ], [ %pawnmates.1., %for.body26 ]
  call void @unmake(%struct.move_s* %arrayidx12, i32 %i.0564) #8
  %inc37 = add nsw i32 %i.0564, 1
  %cmp = icmp slt i32 %inc37, %5
  %cmp13 = icmp eq i32 %pawnmates.3, 0
  %or.cond = and i1 %cmp, %cmp13
  br i1 %or.cond, label %for.body, label %for.end38

for.end38:                                        ; preds = %if.end34, %if.then6
  %pawnmates.0.lcssa = phi i32 [ 0, %if.then6 ], [ %pawnmates.3, %if.end34 ]
  %7 = load i32* @white_to_move, align 4, !tbaa !2
  %tobool39 = icmp ne i32 %7, 0
  %cond40 = select i1 %tobool39, i32 1, i32 2
  %8 = zext i1 %tobool39 to i32
  %lnot.ext43 = xor i32 %8, 1
  call void @DropremoveHolding(i32 %cond40, i32 %lnot.ext43) #8
  %.pre = load i32* @white_to_move, align 4, !tbaa !2
  br label %if.end44

if.end44:                                         ; preds = %if.end, %for.end38
  %9 = phi i32 [ %2, %if.end ], [ %.pre, %for.end38 ]
  %pawnmates.4 = phi i32 [ 0, %if.end ], [ %pawnmates.0.lcssa, %for.end38 ]
  %tobool45 = icmp ne i32 %9, 0
  %cond46 = select i1 %tobool45, i32 3, i32 4
  %idxprom47490 = zext i32 %cond46 to i64
  %10 = zext i1 %tobool45 to i32
  %lnot.ext50 = xor i32 %10, 1
  %idxprom51491 = zext i32 %lnot.ext50 to i64
  %arrayidx53 = getelementptr inbounds [2 x [16 x i32]]* @holding, i64 0, i64 %idxprom51491, i64 %idxprom47490
  %11 = load i32* %arrayidx53, align 4, !tbaa !2
  %tobool54 = icmp eq i32 %11, 0
  br i1 %tobool54, label %if.then55, label %if.end101

if.then55:                                        ; preds = %if.end44
  call void @DropaddHolding(i32 %cond46, i32 %lnot.ext50) #8
  %arrayidx61 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i64 0, i64 0
  call void @gen(%struct.move_s* %arrayidx61) #8
  %12 = load i32* @numb_moves, align 4, !tbaa !2
  %cmp63554 = icmp sgt i32 %12, 0
  br i1 %cmp63554, label %for.body67.lr.ph, label %for.end95

for.body67.lr.ph:                                 ; preds = %if.then55
  %arrayidx74 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i64 0, i64 0
  br label %for.body67

for.body67:                                       ; preds = %for.body67.lr.ph, %if.end91
  %i.1555 = phi i32 [ 0, %for.body67.lr.ph ], [ %inc94, %if.end91 ]
  call void @make(%struct.move_s* %arrayidx61, i32 %i.1555) #8
  %call70 = call i32 @check_legal(%struct.move_s* %arrayidx61, i32 %i.1555, i32 %call) #8
  %tobool71 = icmp eq i32 %call70, 0
  br i1 %tobool71, label %if.end91, label %if.then72

if.then72:                                        ; preds = %for.body67
  %call73 = call i32 @in_check() #8
  call void @gen(%struct.move_s* %arrayidx74) #8
  %13 = load i32* @numb_moves, align 4, !tbaa !2
  %cmp76549 = icmp slt i32 %13, 1
  br i1 %cmp76549, label %if.end91, label %for.body80

for.body80:                                       ; preds = %if.then72, %for.body80
  %knightmates.1552 = phi i32 [ %knightmates.1., %for.body80 ], [ 3, %if.then72 ]
  %j.1551 = phi i32 [ %inc89, %for.body80 ], [ 0, %if.then72 ]
  call void @make(%struct.move_s* %arrayidx74, i32 %j.1551) #8
  %call83 = call i32 @check_legal(%struct.move_s* %arrayidx74, i32 %j.1551, i32 %call73) #8
  %tobool84 = icmp eq i32 %call83, 0
  %knightmates.1. = select i1 %tobool84, i32 %knightmates.1552, i32 0
  call void @unmake(%struct.move_s* %arrayidx74, i32 %j.1551) #8
  %inc89 = add nsw i32 %j.1551, 1
  %cmp76 = icmp sge i32 %inc89, %13
  %cmp78 = icmp eq i32 %knightmates.1., 0
  %or.cond515 = or i1 %cmp76, %cmp78
  br i1 %or.cond515, label %if.end91, label %for.body80

if.end91:                                         ; preds = %if.then72, %for.body80, %for.body67
  %knightmates.3 = phi i32 [ 0, %for.body67 ], [ 3, %if.then72 ], [ %knightmates.1., %for.body80 ]
  call void @unmake(%struct.move_s* %arrayidx61, i32 %i.1555) #8
  %inc94 = add nsw i32 %i.1555, 1
  %cmp63 = icmp slt i32 %inc94, %12
  %cmp65 = icmp eq i32 %knightmates.3, 0
  %or.cond514 = and i1 %cmp63, %cmp65
  br i1 %or.cond514, label %for.body67, label %for.end95

for.end95:                                        ; preds = %if.end91, %if.then55
  %knightmates.0.lcssa = phi i32 [ 0, %if.then55 ], [ %knightmates.3, %if.end91 ]
  %14 = load i32* @white_to_move, align 4, !tbaa !2
  %tobool96 = icmp ne i32 %14, 0
  %cond97 = select i1 %tobool96, i32 3, i32 4
  %15 = zext i1 %tobool96 to i32
  %lnot.ext100 = xor i32 %15, 1
  call void @DropremoveHolding(i32 %cond97, i32 %lnot.ext100) #8
  %.pre567 = load i32* @white_to_move, align 4, !tbaa !2
  br label %if.end101

if.end101:                                        ; preds = %if.end44, %for.end95
  %16 = phi i32 [ %9, %if.end44 ], [ %.pre567, %for.end95 ]
  %knightmates.4 = phi i32 [ 0, %if.end44 ], [ %knightmates.0.lcssa, %for.end95 ]
  %tobool102 = icmp ne i32 %16, 0
  %cond103 = select i1 %tobool102, i32 11, i32 12
  %idxprom104492 = zext i32 %cond103 to i64
  %17 = zext i1 %tobool102 to i32
  %lnot.ext107 = xor i32 %17, 1
  %idxprom108493 = zext i32 %lnot.ext107 to i64
  %arrayidx110 = getelementptr inbounds [2 x [16 x i32]]* @holding, i64 0, i64 %idxprom108493, i64 %idxprom104492
  %18 = load i32* %arrayidx110, align 4, !tbaa !2
  %tobool111 = icmp eq i32 %18, 0
  br i1 %tobool111, label %if.then112, label %if.end158

if.then112:                                       ; preds = %if.end101
  call void @DropaddHolding(i32 %cond103, i32 %lnot.ext107) #8
  %arrayidx118 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i64 0, i64 0
  call void @gen(%struct.move_s* %arrayidx118) #8
  %19 = load i32* @numb_moves, align 4, !tbaa !2
  %cmp120545 = icmp sgt i32 %19, 0
  br i1 %cmp120545, label %for.body124.lr.ph, label %for.end152

for.body124.lr.ph:                                ; preds = %if.then112
  %arrayidx131 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i64 0, i64 0
  br label %for.body124

for.body124:                                      ; preds = %for.body124.lr.ph, %if.end148
  %i.2546 = phi i32 [ 0, %for.body124.lr.ph ], [ %inc151, %if.end148 ]
  call void @make(%struct.move_s* %arrayidx118, i32 %i.2546) #8
  %call127 = call i32 @check_legal(%struct.move_s* %arrayidx118, i32 %i.2546, i32 %call) #8
  %tobool128 = icmp eq i32 %call127, 0
  br i1 %tobool128, label %if.end148, label %if.then129

if.then129:                                       ; preds = %for.body124
  %call130 = call i32 @in_check() #8
  call void @gen(%struct.move_s* %arrayidx131) #8
  %20 = load i32* @numb_moves, align 4, !tbaa !2
  %cmp133540 = icmp slt i32 %20, 1
  br i1 %cmp133540, label %if.end148, label %for.body137

for.body137:                                      ; preds = %if.then129, %for.body137
  %bishopmates.1543 = phi i32 [ %bishopmates.1., %for.body137 ], [ 3, %if.then129 ]
  %j.2542 = phi i32 [ %inc146, %for.body137 ], [ 0, %if.then129 ]
  call void @make(%struct.move_s* %arrayidx131, i32 %j.2542) #8
  %call140 = call i32 @check_legal(%struct.move_s* %arrayidx131, i32 %j.2542, i32 %call130) #8
  %tobool141 = icmp eq i32 %call140, 0
  %bishopmates.1. = select i1 %tobool141, i32 %bishopmates.1543, i32 0
  call void @unmake(%struct.move_s* %arrayidx131, i32 %j.2542) #8
  %inc146 = add nsw i32 %j.2542, 1
  %cmp133 = icmp sge i32 %inc146, %20
  %cmp135 = icmp eq i32 %bishopmates.1., 0
  %or.cond517 = or i1 %cmp133, %cmp135
  br i1 %or.cond517, label %if.end148, label %for.body137

if.end148:                                        ; preds = %if.then129, %for.body137, %for.body124
  %bishopmates.3 = phi i32 [ 0, %for.body124 ], [ 3, %if.then129 ], [ %bishopmates.1., %for.body137 ]
  call void @unmake(%struct.move_s* %arrayidx118, i32 %i.2546) #8
  %inc151 = add nsw i32 %i.2546, 1
  %cmp120 = icmp slt i32 %inc151, %19
  %cmp122 = icmp eq i32 %bishopmates.3, 0
  %or.cond516 = and i1 %cmp120, %cmp122
  br i1 %or.cond516, label %for.body124, label %for.end152

for.end152:                                       ; preds = %if.end148, %if.then112
  %bishopmates.0.lcssa = phi i32 [ 0, %if.then112 ], [ %bishopmates.3, %if.end148 ]
  %21 = load i32* @white_to_move, align 4, !tbaa !2
  %tobool153 = icmp ne i32 %21, 0
  %cond154 = select i1 %tobool153, i32 11, i32 12
  %22 = zext i1 %tobool153 to i32
  %lnot.ext157 = xor i32 %22, 1
  call void @DropremoveHolding(i32 %cond154, i32 %lnot.ext157) #8
  %.pre568 = load i32* @white_to_move, align 4, !tbaa !2
  br label %if.end158

if.end158:                                        ; preds = %if.end101, %for.end152
  %23 = phi i32 [ %16, %if.end101 ], [ %.pre568, %for.end152 ]
  %bishopmates.4 = phi i32 [ 0, %if.end101 ], [ %bishopmates.0.lcssa, %for.end152 ]
  %tobool159 = icmp ne i32 %23, 0
  %cond160 = select i1 %tobool159, i32 7, i32 8
  %idxprom161494 = zext i32 %cond160 to i64
  %24 = zext i1 %tobool159 to i32
  %lnot.ext164 = xor i32 %24, 1
  %idxprom165495 = zext i32 %lnot.ext164 to i64
  %arrayidx167 = getelementptr inbounds [2 x [16 x i32]]* @holding, i64 0, i64 %idxprom165495, i64 %idxprom161494
  %25 = load i32* %arrayidx167, align 4, !tbaa !2
  %tobool168 = icmp eq i32 %25, 0
  br i1 %tobool168, label %if.then169, label %if.end215

if.then169:                                       ; preds = %if.end158
  call void @DropaddHolding(i32 %cond160, i32 %lnot.ext164) #8
  %arrayidx175 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i64 0, i64 0
  call void @gen(%struct.move_s* %arrayidx175) #8
  %26 = load i32* @numb_moves, align 4, !tbaa !2
  %cmp177536 = icmp sgt i32 %26, 0
  br i1 %cmp177536, label %for.body181.lr.ph, label %for.end209

for.body181.lr.ph:                                ; preds = %if.then169
  %arrayidx188 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i64 0, i64 0
  br label %for.body181

for.body181:                                      ; preds = %for.body181.lr.ph, %if.end205
  %i.3537 = phi i32 [ 0, %for.body181.lr.ph ], [ %inc208, %if.end205 ]
  call void @make(%struct.move_s* %arrayidx175, i32 %i.3537) #8
  %call184 = call i32 @check_legal(%struct.move_s* %arrayidx175, i32 %i.3537, i32 %call) #8
  %tobool185 = icmp eq i32 %call184, 0
  br i1 %tobool185, label %if.end205, label %if.then186

if.then186:                                       ; preds = %for.body181
  %call187 = call i32 @in_check() #8
  call void @gen(%struct.move_s* %arrayidx188) #8
  %27 = load i32* @numb_moves, align 4, !tbaa !2
  %cmp190531 = icmp slt i32 %27, 1
  br i1 %cmp190531, label %if.end205, label %for.body194

for.body194:                                      ; preds = %if.then186, %for.body194
  %rookmates.1534 = phi i32 [ %rookmates.1., %for.body194 ], [ 3, %if.then186 ]
  %j.3533 = phi i32 [ %inc203, %for.body194 ], [ 0, %if.then186 ]
  call void @make(%struct.move_s* %arrayidx188, i32 %j.3533) #8
  %call197 = call i32 @check_legal(%struct.move_s* %arrayidx188, i32 %j.3533, i32 %call187) #8
  %tobool198 = icmp eq i32 %call197, 0
  %rookmates.1. = select i1 %tobool198, i32 %rookmates.1534, i32 0
  call void @unmake(%struct.move_s* %arrayidx188, i32 %j.3533) #8
  %inc203 = add nsw i32 %j.3533, 1
  %cmp190 = icmp sge i32 %inc203, %27
  %cmp192 = icmp eq i32 %rookmates.1., 0
  %or.cond519 = or i1 %cmp190, %cmp192
  br i1 %or.cond519, label %if.end205, label %for.body194

if.end205:                                        ; preds = %if.then186, %for.body194, %for.body181
  %rookmates.3 = phi i32 [ 0, %for.body181 ], [ 3, %if.then186 ], [ %rookmates.1., %for.body194 ]
  call void @unmake(%struct.move_s* %arrayidx175, i32 %i.3537) #8
  %inc208 = add nsw i32 %i.3537, 1
  %cmp177 = icmp slt i32 %inc208, %26
  %cmp179 = icmp eq i32 %rookmates.3, 0
  %or.cond518 = and i1 %cmp177, %cmp179
  br i1 %or.cond518, label %for.body181, label %for.end209

for.end209:                                       ; preds = %if.end205, %if.then169
  %rookmates.0.lcssa = phi i32 [ 0, %if.then169 ], [ %rookmates.3, %if.end205 ]
  %28 = load i32* @white_to_move, align 4, !tbaa !2
  %tobool210 = icmp ne i32 %28, 0
  %cond211 = select i1 %tobool210, i32 7, i32 8
  %29 = zext i1 %tobool210 to i32
  %lnot.ext214 = xor i32 %29, 1
  call void @DropremoveHolding(i32 %cond211, i32 %lnot.ext214) #8
  %.pre569 = load i32* @white_to_move, align 4, !tbaa !2
  br label %if.end215

if.end215:                                        ; preds = %if.end158, %for.end209
  %30 = phi i32 [ %23, %if.end158 ], [ %.pre569, %for.end209 ]
  %rookmates.4 = phi i32 [ 0, %if.end158 ], [ %rookmates.0.lcssa, %for.end209 ]
  %tobool216 = icmp ne i32 %30, 0
  %cond217 = select i1 %tobool216, i32 9, i32 10
  %idxprom218496 = zext i32 %cond217 to i64
  %31 = zext i1 %tobool216 to i32
  %lnot.ext221 = xor i32 %31, 1
  %idxprom222497 = zext i32 %lnot.ext221 to i64
  %arrayidx224 = getelementptr inbounds [2 x [16 x i32]]* @holding, i64 0, i64 %idxprom222497, i64 %idxprom218496
  %32 = load i32* %arrayidx224, align 4, !tbaa !2
  %tobool225 = icmp eq i32 %32, 0
  br i1 %tobool225, label %if.then226, label %if.end272

if.then226:                                       ; preds = %if.end215
  call void @DropaddHolding(i32 %cond217, i32 %lnot.ext221) #8
  %arrayidx232 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i64 0, i64 0
  call void @gen(%struct.move_s* %arrayidx232) #8
  %33 = load i32* @numb_moves, align 4, !tbaa !2
  %cmp234527 = icmp sgt i32 %33, 0
  br i1 %cmp234527, label %for.body238.lr.ph, label %for.end266

for.body238.lr.ph:                                ; preds = %if.then226
  %arrayidx245 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i64 0, i64 0
  br label %for.body238

for.body238:                                      ; preds = %for.body238.lr.ph, %if.end262
  %i.4528 = phi i32 [ 0, %for.body238.lr.ph ], [ %inc265, %if.end262 ]
  call void @make(%struct.move_s* %arrayidx232, i32 %i.4528) #8
  %call241 = call i32 @check_legal(%struct.move_s* %arrayidx232, i32 %i.4528, i32 %call) #8
  %tobool242 = icmp eq i32 %call241, 0
  br i1 %tobool242, label %if.end262, label %if.then243

if.then243:                                       ; preds = %for.body238
  %call244 = call i32 @in_check() #8
  call void @gen(%struct.move_s* %arrayidx245) #8
  %34 = load i32* @numb_moves, align 4, !tbaa !2
  %cmp247523 = icmp slt i32 %34, 1
  br i1 %cmp247523, label %if.end262, label %for.body251

for.body251:                                      ; preds = %if.then243, %for.body251
  %queenmates.1526 = phi i32 [ %queenmates.1., %for.body251 ], [ 3, %if.then243 ]
  %j.4525 = phi i32 [ %inc260, %for.body251 ], [ 0, %if.then243 ]
  call void @make(%struct.move_s* %arrayidx245, i32 %j.4525) #8
  %call254 = call i32 @check_legal(%struct.move_s* %arrayidx245, i32 %j.4525, i32 %call244) #8
  %tobool255 = icmp eq i32 %call254, 0
  %queenmates.1. = select i1 %tobool255, i32 %queenmates.1526, i32 0
  call void @unmake(%struct.move_s* %arrayidx245, i32 %j.4525) #8
  %inc260 = add nsw i32 %j.4525, 1
  %cmp247 = icmp sge i32 %inc260, %34
  %cmp249 = icmp eq i32 %queenmates.1., 0
  %or.cond521 = or i1 %cmp247, %cmp249
  br i1 %or.cond521, label %if.end262, label %for.body251

if.end262:                                        ; preds = %if.then243, %for.body251, %for.body238
  %queenmates.3 = phi i32 [ 0, %for.body238 ], [ 3, %if.then243 ], [ %queenmates.1., %for.body251 ]
  call void @unmake(%struct.move_s* %arrayidx232, i32 %i.4528) #8
  %inc265 = add nsw i32 %i.4528, 1
  %cmp234 = icmp slt i32 %inc265, %33
  %cmp236 = icmp eq i32 %queenmates.3, 0
  %or.cond520 = and i1 %cmp234, %cmp236
  br i1 %or.cond520, label %for.body238, label %for.end266

for.end266:                                       ; preds = %if.end262, %if.then226
  %queenmates.0.lcssa = phi i32 [ 0, %if.then226 ], [ %queenmates.3, %if.end262 ]
  %35 = load i32* @white_to_move, align 4, !tbaa !2
  %tobool267 = icmp ne i32 %35, 0
  %cond268 = select i1 %tobool267, i32 9, i32 10
  %36 = zext i1 %tobool267 to i32
  %lnot.ext271 = xor i32 %36, 1
  call void @DropremoveHolding(i32 %cond268, i32 %lnot.ext271) #8
  br label %if.end272

if.end272:                                        ; preds = %if.end215, %for.end266
  %queenmates.4 = phi i32 [ 0, %if.end215 ], [ %queenmates.0.lcssa, %for.end266 ]
  %37 = load i32* @CheckBadFlow.pawnmated, align 4, !tbaa !2
  %cmp273 = icmp eq i32 %pawnmates.4, %37
  br i1 %cmp273, label %if.end283, label %if.then274

if.then274:                                       ; preds = %if.end272
  %cmp275 = icmp eq i32 %pawnmates.4, 3
  br i1 %cmp275, label %if.end283, label %if.else

if.else:                                          ; preds = %if.then274
  %38 = or i32 %37, %pawnmates.4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %if.then279, label %if.end283

if.then279:                                       ; preds = %if.else
  %puts512 = call i32 @puts(i8* getelementptr inbounds ([40 x i8]* @str116, i64 0, i64 0))
  br label %if.end283

if.end283:                                        ; preds = %if.then274, %if.end272, %if.then279, %if.else
  %othermove.0 = phi i32 [ 1, %if.then279 ], [ 0, %if.else ], [ 0, %if.end272 ], [ 0, %if.then274 ]
  %pawnwarn.0 = phi i32 [ 0, %if.then279 ], [ 0, %if.else ], [ 0, %if.end272 ], [ 1, %if.then274 ]
  %40 = load i32* @CheckBadFlow.knightmated, align 4, !tbaa !2
  %cmp284 = icmp eq i32 %knightmates.4, %40
  br i1 %cmp284, label %if.end296, label %if.then285

if.then285:                                       ; preds = %if.end283
  %cmp286 = icmp eq i32 %knightmates.4, 3
  br i1 %cmp286, label %if.end296, label %if.else288

if.else288:                                       ; preds = %if.then285
  %41 = or i32 %40, %knightmates.4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %if.then292, label %if.end296

if.then292:                                       ; preds = %if.else288
  %puts511 = call i32 @puts(i8* getelementptr inbounds ([40 x i8]* @str115, i64 0, i64 0))
  br label %if.end296

if.end296:                                        ; preds = %if.then285, %if.end283, %if.then292, %if.else288
  %othermove.1 = phi i32 [ 1, %if.then292 ], [ %othermove.0, %if.else288 ], [ %othermove.0, %if.end283 ], [ %othermove.0, %if.then285 ]
  %knightwarn.0 = phi i32 [ 0, %if.then292 ], [ 0, %if.else288 ], [ 0, %if.end283 ], [ 1, %if.then285 ]
  %43 = load i32* @CheckBadFlow.bishopmated, align 4, !tbaa !2
  %cmp297 = icmp eq i32 %bishopmates.4, %43
  br i1 %cmp297, label %if.end309, label %if.then298

if.then298:                                       ; preds = %if.end296
  %cmp299 = icmp eq i32 %bishopmates.4, 3
  br i1 %cmp299, label %if.end309, label %if.else301

if.else301:                                       ; preds = %if.then298
  %44 = or i32 %43, %bishopmates.4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %if.then305, label %if.end309

if.then305:                                       ; preds = %if.else301
  %puts510 = call i32 @puts(i8* getelementptr inbounds ([40 x i8]* @str114, i64 0, i64 0))
  br label %if.end309

if.end309:                                        ; preds = %if.then298, %if.end296, %if.then305, %if.else301
  %othermove.2 = phi i32 [ 1, %if.then305 ], [ %othermove.1, %if.else301 ], [ %othermove.1, %if.end296 ], [ %othermove.1, %if.then298 ]
  %bishopwarn.0 = phi i32 [ 0, %if.then305 ], [ 0, %if.else301 ], [ 0, %if.end296 ], [ 1, %if.then298 ]
  %46 = load i32* @CheckBadFlow.rookmated, align 4, !tbaa !2
  %cmp310 = icmp eq i32 %rookmates.4, %46
  br i1 %cmp310, label %if.end322, label %if.then311

if.then311:                                       ; preds = %if.end309
  %cmp312 = icmp eq i32 %rookmates.4, 3
  br i1 %cmp312, label %if.end322, label %if.else314

if.else314:                                       ; preds = %if.then311
  %47 = or i32 %46, %rookmates.4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %if.then318, label %if.end322

if.then318:                                       ; preds = %if.else314
  %puts509 = call i32 @puts(i8* getelementptr inbounds ([40 x i8]* @str113, i64 0, i64 0))
  br label %if.end322

if.end322:                                        ; preds = %if.then311, %if.end309, %if.then318, %if.else314
  %othermove.3 = phi i32 [ 1, %if.then318 ], [ %othermove.2, %if.else314 ], [ %othermove.2, %if.end309 ], [ %othermove.2, %if.then311 ]
  %rookwarn.0 = phi i32 [ 0, %if.then318 ], [ 0, %if.else314 ], [ 0, %if.end309 ], [ 1, %if.then311 ]
  %49 = load i32* @CheckBadFlow.queenmated, align 4, !tbaa !2
  %cmp323 = icmp eq i32 %queenmates.4, %49
  br i1 %cmp323, label %if.end335, label %if.then324

if.then324:                                       ; preds = %if.end322
  %cmp325 = icmp eq i32 %queenmates.4, 3
  br i1 %cmp325, label %if.end335, label %if.else327

if.else327:                                       ; preds = %if.then324
  %50 = or i32 %49, %queenmates.4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %if.then331, label %if.end335

if.then331:                                       ; preds = %if.else327
  %puts508 = call i32 @puts(i8* getelementptr inbounds ([40 x i8]* @str112, i64 0, i64 0))
  br label %if.end335

if.end335:                                        ; preds = %if.then324, %if.end322, %if.then331, %if.else327
  %othermove.4 = phi i32 [ 1, %if.then331 ], [ %othermove.3, %if.else327 ], [ %othermove.3, %if.end322 ], [ %othermove.3, %if.then324 ]
  %queenwarn.0 = phi i32 [ 0, %if.then331 ], [ 0, %if.else327 ], [ 0, %if.end322 ], [ 1, %if.then324 ]
  %tobool336 = icmp eq i32 %pawnwarn.0, 0
  br i1 %tobool336, label %if.end339, label %if.then337

if.then337:                                       ; preds = %if.end335
  %puts507 = call i32 @puts(i8* getelementptr inbounds ([19 x i8]* @str111, i64 0, i64 0))
  br label %if.end339

if.end339:                                        ; preds = %if.end335, %if.then337
  %tobool340 = icmp eq i32 %knightwarn.0, 0
  br i1 %tobool340, label %if.end343, label %if.then341

if.then341:                                       ; preds = %if.end339
  %puts506 = call i32 @puts(i8* getelementptr inbounds ([19 x i8]* @str110, i64 0, i64 0))
  br label %if.end343

if.end343:                                        ; preds = %if.end339, %if.then341
  %tobool344 = icmp eq i32 %bishopwarn.0, 0
  br i1 %tobool344, label %if.end347, label %if.then345

if.then345:                                       ; preds = %if.end343
  %puts505 = call i32 @puts(i8* getelementptr inbounds ([19 x i8]* @str109, i64 0, i64 0))
  br label %if.end347

if.end347:                                        ; preds = %if.end343, %if.then345
  %tobool348 = icmp eq i32 %rookwarn.0, 0
  br i1 %tobool348, label %if.end351, label %if.then349

if.then349:                                       ; preds = %if.end347
  %puts504 = call i32 @puts(i8* getelementptr inbounds ([19 x i8]* @str108, i64 0, i64 0))
  br label %if.end351

if.end351:                                        ; preds = %if.end347, %if.then349
  %tobool352 = icmp eq i32 %queenwarn.0, 0
  br i1 %tobool352, label %if.end355, label %if.then353

if.then353:                                       ; preds = %if.end351
  %puts503 = call i32 @puts(i8* getelementptr inbounds ([19 x i8]* @str107, i64 0, i64 0))
  br label %if.end355

if.end355:                                        ; preds = %if.end351, %if.then353
  %52 = load i32* @piecedead, align 4, !tbaa !0
  %tobool356 = icmp eq i32 %52, 0
  %tobool358 = icmp eq i32 %othermove.4, 0
  %or.cond522 = or i1 %tobool356, %tobool358
  br i1 %or.cond522, label %if.end362, label %if.then359

if.then359:                                       ; preds = %if.end355
  store i32 0, i32* @piecedead, align 4, !tbaa !0
  %puts = call i32 @puts(i8* getelementptr inbounds ([16 x i8]* @str105, i64 0, i64 0))
  %puts502 = call i32 @puts(i8* getelementptr inbounds ([17 x i8]* @str106, i64 0, i64 0))
  store i32 0, i32* @go_fast, align 4, !tbaa !0
  br label %if.end362

if.end362:                                        ; preds = %if.end355, %if.then359
  %tobool363 = icmp eq i32 %pawnmates.4, 0
  br i1 %tobool363, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.end362
  %53 = load i32* @CheckBadFlow.pawnmated, align 4, !tbaa !2
  %dec = add nsw i32 %53, -1
  br label %cond.end

cond.end:                                         ; preds = %if.end362, %cond.false
  %storemerge = phi i32 [ %dec, %cond.false ], [ %pawnmates.4, %if.end362 ]
  store i32 %storemerge, i32* @CheckBadFlow.pawnmated, align 4, !tbaa !2
  %tobool365 = icmp eq i32 %bishopmates.4, 0
  br i1 %tobool365, label %cond.false367, label %cond.end369

cond.false367:                                    ; preds = %cond.end
  %54 = load i32* @CheckBadFlow.bishopmated, align 4, !tbaa !2
  %dec368 = add nsw i32 %54, -1
  br label %cond.end369

cond.end369:                                      ; preds = %cond.end, %cond.false367
  %storemerge498 = phi i32 [ %dec368, %cond.false367 ], [ %bishopmates.4, %cond.end ]
  store i32 %storemerge498, i32* @CheckBadFlow.bishopmated, align 4, !tbaa !2
  %tobool371 = icmp eq i32 %rookmates.4, 0
  br i1 %tobool371, label %cond.false373, label %cond.end375

cond.false373:                                    ; preds = %cond.end369
  %55 = load i32* @CheckBadFlow.rookmated, align 4, !tbaa !2
  %dec374 = add nsw i32 %55, -1
  br label %cond.end375

cond.end375:                                      ; preds = %cond.end369, %cond.false373
  %storemerge499 = phi i32 [ %dec374, %cond.false373 ], [ %rookmates.4, %cond.end369 ]
  store i32 %storemerge499, i32* @CheckBadFlow.rookmated, align 4, !tbaa !2
  %tobool377 = icmp eq i32 %queenmates.4, 0
  br i1 %tobool377, label %cond.false379, label %cond.end381

cond.false379:                                    ; preds = %cond.end375
  %56 = load i32* @CheckBadFlow.queenmated, align 4, !tbaa !2
  %dec380 = add nsw i32 %56, -1
  br label %cond.end381

cond.end381:                                      ; preds = %cond.end375, %cond.false379
  %storemerge500 = phi i32 [ %dec380, %cond.false379 ], [ %queenmates.4, %cond.end375 ]
  store i32 %storemerge500, i32* @CheckBadFlow.queenmated, align 4, !tbaa !2
  %tobool383 = icmp eq i32 %knightmates.4, 0
  br i1 %tobool383, label %cond.false385, label %cond.end387

cond.false385:                                    ; preds = %cond.end381
  %57 = load i32* @CheckBadFlow.knightmated, align 4, !tbaa !2
  %dec386 = add nsw i32 %57, -1
  br label %cond.end387

cond.end387:                                      ; preds = %cond.end381, %cond.false385
  %storemerge501 = phi i32 [ %dec386, %cond.false385 ], [ %knightmates.4, %cond.end381 ]
  store i32 %storemerge501, i32* @CheckBadFlow.knightmated, align 4, !tbaa !2
  br label %cleanup

cleanup:                                          ; preds = %cond.end387, %if.then
  call void @llvm.lifetime.end(i64 12288, i8* %1) #1
  call void @llvm.lifetime.end(i64 12288, i8* %0) #1
  ret void
}
