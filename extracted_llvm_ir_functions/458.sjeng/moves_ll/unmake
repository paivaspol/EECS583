define void @unmake(%struct.move_s* nocapture %moves, i32 %i) #0 {
entry:
  %idxprom = sext i32 %i to i64
  %ep1 = getelementptr inbounds %struct.move_s* %moves, i64 %idxprom, i32 5
  %0 = load i32* %ep1, align 4, !tbaa !0
  %from4 = getelementptr inbounds %struct.move_s* %moves, i64 %idxprom, i32 0
  %1 = load i32* %from4, align 4, !tbaa !0
  %target7 = getelementptr inbounds %struct.move_s* %moves, i64 %idxprom, i32 1
  %2 = load i32* %target7, align 4, !tbaa !0
  %captured10 = getelementptr inbounds %struct.move_s* %moves, i64 %idxprom, i32 2
  %3 = load i32* %captured10, align 4, !tbaa !0
  %promoted13 = getelementptr inbounds %struct.move_s* %moves, i64 %idxprom, i32 3
  %4 = load i32* %promoted13, align 4, !tbaa !0
  %castled16 = getelementptr inbounds %struct.move_s* %moves, i64 %idxprom, i32 4
  %5 = load i32* %castled16, align 4, !tbaa !0
  %6 = load i32* @ply, align 4, !tbaa !0
  %dec = add nsw i32 %6, -1
  store i32 %dec, i32* @ply, align 4, !tbaa !0
  %idxprom17 = sext i32 %dec to i64
  %epsq = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom17, i32 2
  %7 = load i32* %epsq, align 4, !tbaa !0
  store i32 %7, i32* @ep_square, align 4, !tbaa !0
  %fifty = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom17, i32 3
  %8 = load i32* %fifty, align 4, !tbaa !0
  store i32 %8, i32* @fifty, align 4, !tbaa !0
  %cmp = icmp eq i32 %1, 0
  %idxprom21 = sext i32 %2 to i64
  %arrayidx22 = getelementptr inbounds [144 x i32]* @squares, i64 0, i64 %idxprom21
  %9 = load i32* %arrayidx22, align 4, !tbaa !0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %idxprom23 = sext i32 %9 to i64
  %arrayidx24 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom23
  store i32 0, i32* %arrayidx24, align 4, !tbaa !0
  %was_promoted = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom17, i32 1
  %10 = load i32* %was_promoted, align 4, !tbaa !0
  %arrayidx30 = getelementptr inbounds [62 x i32]* @is_promoted, i64 0, i64 %idxprom23
  store i32 %10, i32* %arrayidx30, align 4, !tbaa !0
  store i32 0, i32* %arrayidx22, align 4, !tbaa !0
  %11 = load i32* @piece_count, align 4, !tbaa !0
  %dec33 = add nsw i32 %11, -1
  store i32 %dec33, i32* @piece_count, align 4, !tbaa !0
  %12 = load i32* @white_to_move, align 4, !tbaa !0
  %tobool = icmp ne i32 %12, 0
  %cond = zext i1 %tobool to i32
  tail call void @DropaddHolding(i32 %4, i32 %cond) #2
  %idxprom34 = sext i32 %4 to i64
  %arrayidx35 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %idxprom34
  %13 = load i32* %arrayidx35, align 4, !tbaa !0
  %14 = load i32* @Material, align 4, !tbaa !0
  %sub = sub nsw i32 %14, %13
  store i32 %sub, i32* @Material, align 4, !tbaa !0
  %arrayidx37 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom21
  store i32 %3, i32* %arrayidx37, align 4, !tbaa !0
  %arrayidx41 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom34, i64 %idxprom21
  %15 = load i32* %arrayidx41, align 4, !tbaa !0
  %16 = load i32* @hash, align 4, !tbaa !0
  %xor = xor i32 %16, %15
  store i32 %xor, i32* @hash, align 4, !tbaa !0
  %17 = load i32* @white_to_move, align 4, !tbaa !0
  %xor42 = xor i32 %17, 1
  store i32 %xor42, i32* @white_to_move, align 4, !tbaa !0
  br label %return

if.else:                                          ; preds = %entry
  %idxprom45 = sext i32 %1 to i64
  %arrayidx46 = getelementptr inbounds [144 x i32]* @squares, i64 0, i64 %idxprom45
  store i32 %9, i32* %arrayidx46, align 4, !tbaa !0
  %cap_num = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom17, i32 0
  %18 = load i32* %cap_num, align 4, !tbaa !0
  store i32 %18, i32* %arrayidx22, align 4, !tbaa !0
  %idxprom53 = sext i32 %18 to i64
  %arrayidx54 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom53
  store i32 %2, i32* %arrayidx54, align 4, !tbaa !0
  %19 = load i32* %arrayidx46, align 4, !tbaa !0
  %idxprom57 = sext i32 %19 to i64
  %arrayidx58 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom57
  store i32 %1, i32* %arrayidx58, align 4, !tbaa !0
  %was_promoted61 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom17, i32 1
  %20 = load i32* %was_promoted61, align 4, !tbaa !0
  %arrayidx65 = getelementptr inbounds [62 x i32]* @is_promoted, i64 0, i64 %idxprom53
  store i32 %20, i32* %arrayidx65, align 4, !tbaa !0
  %tobool66 = icmp ne i32 %0, 0
  %cond400 = icmp eq i32 %3, 13
  %or.cond = or i1 %tobool66, %cond400
  br i1 %or.cond, label %if.end91, label %sw.default

sw.default:                                       ; preds = %if.else
  %21 = load i32* @Variant, align 4, !tbaa !0
  %22 = icmp ult i32 %21, 2
  br i1 %22, label %if.then70, label %if.end83

if.then70:                                        ; preds = %sw.default
  %tobool75 = icmp eq i32 %20, 0
  br i1 %tobool75, label %if.else79, label %if.then76

if.then76:                                        ; preds = %if.then70
  %call = tail call i32 @SwitchPromoted(i32 %3) #2
  %23 = load i32* @white_to_move, align 4, !tbaa !0
  %tobool77 = icmp ne i32 %23, 0
  %cond78 = zext i1 %tobool77 to i32
  tail call void @removeHolding(i32 %call, i32 %cond78) #2
  br label %if.end83

if.else79:                                        ; preds = %if.then70
  %call80 = tail call i32 @SwitchColor(i32 %3) #2
  %24 = load i32* @white_to_move, align 4, !tbaa !0
  %tobool81 = icmp ne i32 %24, 0
  %cond82 = zext i1 %tobool81 to i32
  tail call void @removeHolding(i32 %call80, i32 %cond82) #2
  br label %if.end83

if.end83:                                         ; preds = %if.then76, %if.else79, %sw.default
  %idxprom85 = sext i32 %3 to i64
  %arrayidx87 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom85, i64 %idxprom21
  %25 = load i32* %arrayidx87, align 4, !tbaa !0
  %26 = load i32* @hash, align 4, !tbaa !0
  %xor88 = xor i32 %26, %25
  store i32 %xor88, i32* @hash, align 4, !tbaa !0
  %arrayidx90 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %idxprom85
  %27 = load i32* %arrayidx90, align 4, !tbaa !0
  %28 = load i32* @Material, align 4, !tbaa !0
  %add = add nsw i32 %28, %27
  store i32 %add, i32* @Material, align 4, !tbaa !0
  %29 = load i32* @piece_count, align 4, !tbaa !0
  %inc = add nsw i32 %29, 1
  store i32 %inc, i32* @piece_count, align 4, !tbaa !0
  br label %if.end91

if.end91:                                         ; preds = %if.end83, %if.else
  %arrayidx93 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom21
  %30 = load i32* %arrayidx93, align 4, !tbaa !0
  switch i32 %30, label %land.lhs.true236 [
    i32 1, label %if.then95
    i32 2, label %if.then164
    i32 5, label %if.end266
    i32 6, label %if.end266
  ]

if.then95:                                        ; preds = %if.end91
  br i1 %tobool66, label %if.then97, label %if.end142

if.then97:                                        ; preds = %if.then95
  %arrayidx99 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %idxprom21
  %31 = load i32* %arrayidx99, align 4, !tbaa !0
  %32 = load i32* @hash, align 4, !tbaa !0
  %xor100 = xor i32 %32, %31
  %arrayidx102 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %idxprom45
  %33 = load i32* %arrayidx102, align 4, !tbaa !0
  %xor103 = xor i32 %xor100, %33
  %sub104 = add nsw i32 %2, -12
  %idxprom105 = sext i32 %sub104 to i64
  %arrayidx106 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %idxprom105
  %34 = load i32* %arrayidx106, align 4, !tbaa !0
  %xor107 = xor i32 %xor103, %34
  store i32 %xor107, i32* @hash, align 4, !tbaa !0
  store i32 13, i32* %arrayidx93, align 4, !tbaa !0
  %arrayidx111 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom45
  store i32 1, i32* %arrayidx111, align 4, !tbaa !0
  %35 = load i32* getelementptr inbounds ([14 x i32]* @material, i64 0, i64 2), align 4, !tbaa !0
  %36 = load i32* @Material, align 4, !tbaa !0
  %add112 = add nsw i32 %36, %35
  store i32 %add112, i32* @Material, align 4, !tbaa !0
  tail call void @removeHolding(i32 1, i32 0) #2
  %37 = load i32* @piece_count, align 4, !tbaa !0
  %inc113 = add nsw i32 %37, 1
  store i32 %inc113, i32* @piece_count, align 4, !tbaa !0
  %arrayidx116 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom105
  store i32 2, i32* %arrayidx116, align 4, !tbaa !0
  %arrayidx118 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21
  %38 = load i32* %arrayidx118, align 4, !tbaa !0
  %dec119 = add nsw i32 %38, -1
  store i32 %dec119, i32* %arrayidx118, align 4, !tbaa !0
  %arrayidx121 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom45
  %39 = load i32* %arrayidx121, align 4, !tbaa !0
  %dec122 = add nsw i32 %39, -1
  store i32 %dec122, i32* %arrayidx121, align 4, !tbaa !0
  %arrayidx125 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom105
  %40 = load i32* %arrayidx125, align 4, !tbaa !0
  %dec126 = add nsw i32 %40, -1
  store i32 %dec126, i32* %arrayidx125, align 4, !tbaa !0
  %41 = load i32* @white_to_move, align 4, !tbaa !0
  %xor127 = xor i32 %41, 1
  store i32 %xor127, i32* @white_to_move, align 4, !tbaa !0
  %42 = load i32* @ply, align 4, !tbaa !0
  %idxprom128 = sext i32 %42 to i64
  %cap_num130 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom128, i32 0
  %43 = load i32* %cap_num130, align 4, !tbaa !0
  %arrayidx133 = getelementptr inbounds [144 x i32]* @squares, i64 0, i64 %idxprom105
  store i32 %43, i32* %arrayidx133, align 4, !tbaa !0
  %idxprom138 = sext i32 %43 to i64
  %arrayidx139 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom138
  store i32 %sub104, i32* %arrayidx139, align 4, !tbaa !0
  store i32 0, i32* %arrayidx22, align 4, !tbaa !0
  br label %return

if.end142:                                        ; preds = %if.then95
  %arrayidx144 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %idxprom45
  %44 = load i32* %arrayidx144, align 4, !tbaa !0
  %45 = load i32* @hash, align 4, !tbaa !0
  %xor145 = xor i32 %45, %44
  %arrayidx147 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %idxprom21
  %46 = load i32* %arrayidx147, align 4, !tbaa !0
  %xor148 = xor i32 %xor145, %46
  store i32 %xor148, i32* @hash, align 4, !tbaa !0
  store i32 %3, i32* %arrayidx93, align 4, !tbaa !0
  %arrayidx152 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom45
  store i32 1, i32* %arrayidx152, align 4, !tbaa !0
  %arrayidx154 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21
  %47 = load i32* %arrayidx154, align 4, !tbaa !0
  %dec155 = add nsw i32 %47, -1
  store i32 %dec155, i32* %arrayidx154, align 4, !tbaa !0
  %arrayidx157 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom45
  %48 = load i32* %arrayidx157, align 4, !tbaa !0
  %dec158 = add nsw i32 %48, -1
  store i32 %dec158, i32* %arrayidx157, align 4, !tbaa !0
  %49 = load i32* @white_to_move, align 4, !tbaa !0
  %xor159 = xor i32 %49, 1
  store i32 %xor159, i32* @white_to_move, align 4, !tbaa !0
  br label %return

if.then164:                                       ; preds = %if.end91
  br i1 %tobool66, label %if.then166, label %if.end211

if.then166:                                       ; preds = %if.then164
  %arrayidx168 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %idxprom21
  %50 = load i32* %arrayidx168, align 4, !tbaa !0
  %51 = load i32* @hash, align 4, !tbaa !0
  %xor169 = xor i32 %51, %50
  %arrayidx171 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %idxprom45
  %52 = load i32* %arrayidx171, align 4, !tbaa !0
  %xor172 = xor i32 %xor169, %52
  %add173 = add nsw i32 %2, 12
  %idxprom174 = sext i32 %add173 to i64
  %arrayidx175 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %idxprom174
  %53 = load i32* %arrayidx175, align 4, !tbaa !0
  %xor176 = xor i32 %xor172, %53
  store i32 %xor176, i32* @hash, align 4, !tbaa !0
  store i32 13, i32* %arrayidx93, align 4, !tbaa !0
  %arrayidx180 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom45
  store i32 2, i32* %arrayidx180, align 4, !tbaa !0
  %54 = load i32* getelementptr inbounds ([14 x i32]* @material, i64 0, i64 1), align 4, !tbaa !0
  %55 = load i32* @Material, align 4, !tbaa !0
  %add181 = add nsw i32 %55, %54
  store i32 %add181, i32* @Material, align 4, !tbaa !0
  tail call void @removeHolding(i32 2, i32 1) #2
  %56 = load i32* @piece_count, align 4, !tbaa !0
  %inc182 = add nsw i32 %56, 1
  store i32 %inc182, i32* @piece_count, align 4, !tbaa !0
  %arrayidx185 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom174
  store i32 1, i32* %arrayidx185, align 4, !tbaa !0
  %arrayidx187 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21
  %57 = load i32* %arrayidx187, align 4, !tbaa !0
  %dec188 = add nsw i32 %57, -1
  store i32 %dec188, i32* %arrayidx187, align 4, !tbaa !0
  %arrayidx190 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom45
  %58 = load i32* %arrayidx190, align 4, !tbaa !0
  %dec191 = add nsw i32 %58, -1
  store i32 %dec191, i32* %arrayidx190, align 4, !tbaa !0
  %arrayidx194 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom174
  %59 = load i32* %arrayidx194, align 4, !tbaa !0
  %dec195 = add nsw i32 %59, -1
  store i32 %dec195, i32* %arrayidx194, align 4, !tbaa !0
  %60 = load i32* @white_to_move, align 4, !tbaa !0
  %xor196 = xor i32 %60, 1
  store i32 %xor196, i32* @white_to_move, align 4, !tbaa !0
  %61 = load i32* @ply, align 4, !tbaa !0
  %idxprom197 = sext i32 %61 to i64
  %cap_num199 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom197, i32 0
  %62 = load i32* %cap_num199, align 4, !tbaa !0
  %arrayidx202 = getelementptr inbounds [144 x i32]* @squares, i64 0, i64 %idxprom174
  store i32 %62, i32* %arrayidx202, align 4, !tbaa !0
  %idxprom207 = sext i32 %62 to i64
  %arrayidx208 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom207
  store i32 %add173, i32* %arrayidx208, align 4, !tbaa !0
  store i32 0, i32* %arrayidx22, align 4, !tbaa !0
  br label %return

if.end211:                                        ; preds = %if.then164
  %arrayidx213 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %idxprom45
  %63 = load i32* %arrayidx213, align 4, !tbaa !0
  %64 = load i32* @hash, align 4, !tbaa !0
  %xor214 = xor i32 %64, %63
  %arrayidx216 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %idxprom21
  %65 = load i32* %arrayidx216, align 4, !tbaa !0
  %xor217 = xor i32 %xor214, %65
  store i32 %xor217, i32* @hash, align 4, !tbaa !0
  store i32 %3, i32* %arrayidx93, align 4, !tbaa !0
  %arrayidx221 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom45
  store i32 2, i32* %arrayidx221, align 4, !tbaa !0
  %arrayidx223 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21
  %66 = load i32* %arrayidx223, align 4, !tbaa !0
  %dec224 = add nsw i32 %66, -1
  store i32 %dec224, i32* %arrayidx223, align 4, !tbaa !0
  %arrayidx226 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom45
  %67 = load i32* %arrayidx226, align 4, !tbaa !0
  %dec227 = add nsw i32 %67, -1
  store i32 %dec227, i32* %arrayidx226, align 4, !tbaa !0
  %68 = load i32* @white_to_move, align 4, !tbaa !0
  %xor228 = xor i32 %68, 1
  store i32 %xor228, i32* @white_to_move, align 4, !tbaa !0
  br label %return

land.lhs.true236:                                 ; preds = %if.end91
  %tobool237 = icmp eq i32 %4, 0
  br i1 %tobool237, label %if.then238, label %if.then268

if.then238:                                       ; preds = %land.lhs.true236
  %arrayidx242 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom45
  store i32 %30, i32* %arrayidx242, align 4, !tbaa !0
  store i32 %3, i32* %arrayidx93, align 4, !tbaa !0
  %arrayidx246 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21
  %69 = load i32* %arrayidx246, align 4, !tbaa !0
  %dec247 = add nsw i32 %69, -1
  store i32 %dec247, i32* %arrayidx246, align 4, !tbaa !0
  %arrayidx249 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom45
  %70 = load i32* %arrayidx249, align 4, !tbaa !0
  %dec250 = add nsw i32 %70, -1
  store i32 %dec250, i32* %arrayidx249, align 4, !tbaa !0
  %71 = load i32* @white_to_move, align 4, !tbaa !0
  %xor251 = xor i32 %71, 1
  store i32 %xor251, i32* @white_to_move, align 4, !tbaa !0
  %72 = load i32* %arrayidx242, align 4, !tbaa !0
  %idxprom255 = sext i32 %72 to i64
  %arrayidx257 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom255, i64 %idxprom21
  %73 = load i32* %arrayidx257, align 4, !tbaa !0
  %74 = load i32* @hash, align 4, !tbaa !0
  %xor258 = xor i32 %74, %73
  %arrayidx264 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom255, i64 %idxprom45
  %75 = load i32* %arrayidx264, align 4, !tbaa !0
  %xor265 = xor i32 %75, %xor258
  store i32 %xor265, i32* @hash, align 4, !tbaa !0
  br label %return

if.end266:                                        ; preds = %if.end91, %if.end91
  %tobool267 = icmp eq i32 %4, 0
  br i1 %tobool267, label %if.end320, label %if.then268

if.then268:                                       ; preds = %land.lhs.true236, %if.end266
  %rem520 = and i32 %30, 1
  %tobool271 = icmp eq i32 %rem520, 0
  store i32 %3, i32* %arrayidx93, align 4, !tbaa !0
  %arrayidx276 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom45
  br i1 %tobool271, label %if.end296, label %if.then272

if.then272:                                       ; preds = %if.then268
  store i32 1, i32* %arrayidx276, align 4, !tbaa !0
  %arrayidx278 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21
  %76 = load i32* %arrayidx278, align 4, !tbaa !0
  %dec279 = add nsw i32 %76, -1
  store i32 %dec279, i32* %arrayidx278, align 4, !tbaa !0
  %arrayidx281 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom45
  %77 = load i32* %arrayidx281, align 4, !tbaa !0
  %dec282 = add nsw i32 %77, -1
  store i32 %dec282, i32* %arrayidx281, align 4, !tbaa !0
  %78 = load i32* @white_to_move, align 4, !tbaa !0
  %xor283 = xor i32 %78, 1
  store i32 %xor283, i32* @white_to_move, align 4, !tbaa !0
  %arrayidx285 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %idxprom45
  %79 = load i32* %arrayidx285, align 4, !tbaa !0
  %80 = load i32* @hash, align 4, !tbaa !0
  %xor286 = xor i32 %80, %79
  %idxprom288 = sext i32 %4 to i64
  %arrayidx290 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom288, i64 %idxprom21
  %81 = load i32* %arrayidx290, align 4, !tbaa !0
  %xor291 = xor i32 %xor286, %81
  store i32 %xor291, i32* @hash, align 4, !tbaa !0
  %arrayidx293 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %idxprom288
  %82 = load i32* %arrayidx293, align 4, !tbaa !0
  %83 = load i32* @Material, align 4, !tbaa !0
  %sub294 = sub nsw i32 %83, %82
  %84 = load i32* getelementptr inbounds ([14 x i32]* @material, i64 0, i64 1), align 4, !tbaa !0
  %add295 = add nsw i32 %sub294, %84
  store i32 %add295, i32* @Material, align 4, !tbaa !0
  br label %return

if.end296:                                        ; preds = %if.then268
  store i32 2, i32* %arrayidx276, align 4, !tbaa !0
  %arrayidx302 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21
  %85 = load i32* %arrayidx302, align 4, !tbaa !0
  %dec303 = add nsw i32 %85, -1
  store i32 %dec303, i32* %arrayidx302, align 4, !tbaa !0
  %arrayidx305 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom45
  %86 = load i32* %arrayidx305, align 4, !tbaa !0
  %dec306 = add nsw i32 %86, -1
  store i32 %dec306, i32* %arrayidx305, align 4, !tbaa !0
  %87 = load i32* @white_to_move, align 4, !tbaa !0
  %xor307 = xor i32 %87, 1
  store i32 %xor307, i32* @white_to_move, align 4, !tbaa !0
  %arrayidx309 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %idxprom45
  %88 = load i32* %arrayidx309, align 4, !tbaa !0
  %89 = load i32* @hash, align 4, !tbaa !0
  %xor310 = xor i32 %89, %88
  %idxprom312 = sext i32 %4 to i64
  %arrayidx314 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom312, i64 %idxprom21
  %90 = load i32* %arrayidx314, align 4, !tbaa !0
  %xor315 = xor i32 %xor310, %90
  store i32 %xor315, i32* @hash, align 4, !tbaa !0
  %arrayidx317 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %idxprom312
  %91 = load i32* %arrayidx317, align 4, !tbaa !0
  %92 = load i32* @Material, align 4, !tbaa !0
  %sub318 = sub nsw i32 %92, %91
  %93 = load i32* getelementptr inbounds ([14 x i32]* @material, i64 0, i64 2), align 4, !tbaa !0
  %add319 = add nsw i32 %sub318, %93
  store i32 %add319, i32* @Material, align 4, !tbaa !0
  br label %return

if.end320:                                        ; preds = %if.end266
  %cmp323 = icmp eq i32 %30, 5
  br i1 %cmp323, label %if.then324, label %if.else361

if.then324:                                       ; preds = %if.end320
  store i32 %1, i32* @wking_loc, align 4, !tbaa !0
  store i32 %3, i32* %arrayidx93, align 4, !tbaa !0
  %arrayidx328 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom45
  store i32 5, i32* %arrayidx328, align 4, !tbaa !0
  %arrayidx330 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21
  %94 = load i32* %arrayidx330, align 4, !tbaa !0
  %dec331 = add nsw i32 %94, -1
  store i32 %dec331, i32* %arrayidx330, align 4, !tbaa !0
  %arrayidx333 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom45
  %95 = load i32* %arrayidx333, align 4, !tbaa !0
  %dec334 = add nsw i32 %95, -1
  store i32 %dec334, i32* %arrayidx333, align 4, !tbaa !0
  %96 = load i32* @white_to_move, align 4, !tbaa !0
  %xor335 = xor i32 %96, 1
  store i32 %xor335, i32* @white_to_move, align 4, !tbaa !0
  %arrayidx337 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 5, i64 %idxprom45
  %97 = load i32* %arrayidx337, align 4, !tbaa !0
  %98 = load i32* @hash, align 4, !tbaa !0
  %xor338 = xor i32 %98, %97
  %arrayidx340 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 5, i64 %idxprom21
  %99 = load i32* %arrayidx340, align 4, !tbaa !0
  %xor341 = xor i32 %xor338, %99
  store i32 %xor341, i32* @hash, align 4, !tbaa !0
  switch i32 %5, label %return [
    i32 1, label %if.then343
    i32 2, label %if.then352
  ]

if.then343:                                       ; preds = %if.then324
  store i32 7, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 33), align 4, !tbaa !0
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 31), align 4, !tbaa !0
  %100 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 33), align 4, !tbaa !0
  %dec344 = add nsw i32 %100, -1
  store i32 %dec344, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 33), align 4, !tbaa !0
  %101 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 31), align 4, !tbaa !0
  %dec345 = add nsw i32 %101, -1
  store i32 %dec345, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 31), align 4, !tbaa !0
  store i32 0, i32* @white_castled, align 4, !tbaa !0
  %102 = load i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 31), align 4, !tbaa !0
  store i32 %102, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 33), align 4, !tbaa !0
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 31), align 4, !tbaa !0
  %idxprom346 = sext i32 %102 to i64
  %arrayidx347 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom346
  store i32 33, i32* %arrayidx347, align 4, !tbaa !0
  %103 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 7, i64 33), align 4, !tbaa !0
  %xor348 = xor i32 %xor341, %103
  %104 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 7, i64 31), align 4, !tbaa !0
  %xor349 = xor i32 %xor348, %104
  store i32 %xor349, i32* @hash, align 4, !tbaa !0
  br label %return

if.then352:                                       ; preds = %if.then324
  store i32 7, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 26), align 4, !tbaa !0
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 29), align 4, !tbaa !0
  %105 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 26), align 4, !tbaa !0
  %dec353 = add nsw i32 %105, -1
  store i32 %dec353, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 26), align 4, !tbaa !0
  %106 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 29), align 4, !tbaa !0
  %dec354 = add nsw i32 %106, -1
  store i32 %dec354, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 29), align 4, !tbaa !0
  store i32 0, i32* @white_castled, align 4, !tbaa !0
  %107 = load i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 29), align 4, !tbaa !0
  store i32 %107, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 26), align 4, !tbaa !0
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 29), align 4, !tbaa !0
  %idxprom355 = sext i32 %107 to i64
  %arrayidx356 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom355
  store i32 26, i32* %arrayidx356, align 4, !tbaa !0
  %108 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 7, i64 29), align 4, !tbaa !0
  %xor357 = xor i32 %xor341, %108
  %109 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 7, i64 26), align 4, !tbaa !0
  %xor358 = xor i32 %xor357, %109
  store i32 %xor358, i32* @hash, align 4, !tbaa !0
  br label %return

if.else361:                                       ; preds = %if.end320
  store i32 %1, i32* @bking_loc, align 4, !tbaa !0
  store i32 %3, i32* %arrayidx93, align 4, !tbaa !0
  %arrayidx365 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom45
  store i32 6, i32* %arrayidx365, align 4, !tbaa !0
  %arrayidx367 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21
  %110 = load i32* %arrayidx367, align 4, !tbaa !0
  %dec368 = add nsw i32 %110, -1
  store i32 %dec368, i32* %arrayidx367, align 4, !tbaa !0
  %arrayidx370 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom45
  %111 = load i32* %arrayidx370, align 4, !tbaa !0
  %dec371 = add nsw i32 %111, -1
  store i32 %dec371, i32* %arrayidx370, align 4, !tbaa !0
  %112 = load i32* @white_to_move, align 4, !tbaa !0
  %xor372 = xor i32 %112, 1
  store i32 %xor372, i32* @white_to_move, align 4, !tbaa !0
  %arrayidx374 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 6, i64 %idxprom45
  %113 = load i32* %arrayidx374, align 4, !tbaa !0
  %114 = load i32* @hash, align 4, !tbaa !0
  %xor375 = xor i32 %114, %113
  %arrayidx377 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 6, i64 %idxprom21
  %115 = load i32* %arrayidx377, align 4, !tbaa !0
  %xor378 = xor i32 %xor375, %115
  store i32 %xor378, i32* @hash, align 4, !tbaa !0
  switch i32 %5, label %return [
    i32 3, label %if.then380
    i32 4, label %if.then389
  ]

if.then380:                                       ; preds = %if.else361
  store i32 8, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 117), align 4, !tbaa !0
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 115), align 4, !tbaa !0
  %116 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 117), align 4, !tbaa !0
  %dec381 = add nsw i32 %116, -1
  store i32 %dec381, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 117), align 4, !tbaa !0
  %117 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 115), align 4, !tbaa !0
  %dec382 = add nsw i32 %117, -1
  store i32 %dec382, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 115), align 4, !tbaa !0
  store i32 0, i32* @black_castled, align 4, !tbaa !0
  %118 = load i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 115), align 4, !tbaa !0
  store i32 %118, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 117), align 4, !tbaa !0
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 115), align 4, !tbaa !0
  %idxprom383 = sext i32 %118 to i64
  %arrayidx384 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom383
  store i32 117, i32* %arrayidx384, align 4, !tbaa !0
  %119 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 8, i64 117), align 4, !tbaa !0
  %xor385 = xor i32 %xor378, %119
  %120 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 8, i64 115), align 4, !tbaa !0
  %xor386 = xor i32 %xor385, %120
  store i32 %xor386, i32* @hash, align 4, !tbaa !0
  br label %return

if.then389:                                       ; preds = %if.else361
  store i32 8, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 110), align 4, !tbaa !0
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 113), align 4, !tbaa !0
  %121 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 110), align 4, !tbaa !0
  %dec390 = add nsw i32 %121, -1
  store i32 %dec390, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 110), align 4, !tbaa !0
  %122 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 113), align 4, !tbaa !0
  %dec391 = add nsw i32 %122, -1
  store i32 %dec391, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 113), align 4, !tbaa !0
  store i32 0, i32* @black_castled, align 4, !tbaa !0
  %123 = load i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 113), align 4, !tbaa !0
  store i32 %123, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 110), align 4, !tbaa !0
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 113), align 4, !tbaa !0
  %idxprom392 = sext i32 %123 to i64
  %arrayidx393 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom392
  store i32 110, i32* %arrayidx393, align 4, !tbaa !0
  %124 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 8, i64 110), align 4, !tbaa !0
  %xor394 = xor i32 %xor378, %124
  %125 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 8, i64 113), align 4, !tbaa !0
  %xor395 = xor i32 %xor394, %125
  store i32 %xor395, i32* @hash, align 4, !tbaa !0
  br label %return

return:                                           ; preds = %if.else361, %if.then324, %if.then389, %if.then380, %if.then352, %if.then343, %if.end296, %if.then272, %if.then238, %if.end211, %if.then166, %if.end142, %if.then97, %if.then
  ret void
}
