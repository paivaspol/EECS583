define void @push_king(i32 %target) #0 {
  tail call void @llvm.dbg.value(metadata i32 %target, i64 0, metadata !97, metadata !145), !dbg !1406
  %1 = sext i32 %target to i64, !dbg !1407
  %2 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %1, !dbg !1407
  %3 = load i32* %2, align 4, !dbg !1407, !tbaa !163
  %4 = icmp eq i32 %3, 0, !dbg !1409
  br i1 %4, label %20, label %5, !dbg !1410

; <label>:5                                       ; preds = %0
  %6 = icmp eq i32 %3, 13, !dbg !1411
  %7 = load i32* @captures, align 4
  %8 = icmp ne i32 %7, 0, !dbg !1413
  %or.cond = and i1 %6, %8, !dbg !1414
  br i1 %or.cond, label %20, label %9, !dbg !1414

; <label>:9                                       ; preds = %5
  br i1 %6, label %10, label %11, !dbg !1415

; <label>:10                                      ; preds = %9
  tail call void @add_move(i32 %target, i32 0) #5, !dbg !1416
  br label %20, !dbg !1419

; <label>:11                                      ; preds = %9
  %12 = load i32* @gfrom, align 4, !dbg !1420, !tbaa !163
  %13 = sext i32 %12 to i64, !dbg !1422
  %14 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %13, !dbg !1422
  %15 = load i32* %14, align 4, !dbg !1422, !tbaa !163
  %16 = xor i32 %15, %3, !dbg !1423
  %17 = and i32 %16, 1, !dbg !1423
  %18 = icmp eq i32 %17, 0, !dbg !1423
  br i1 %18, label %20, label %19, !dbg !1424

; <label>:19                                      ; preds = %11
  tail call void @add_capture(i32 %target, i32 %3, i32 0, i32 0) #5, !dbg !1425
  br label %20, !dbg !1427

; <label>:20                                      ; preds = %11, %5, %0, %19, %10
  ret void, !dbg !1428
}
