define void @push_king(i32 %target) #0 {
entry:
  %idxprom = sext i32 %target to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom
  %0 = load i32* %arrayidx, align 4, !tbaa !0
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %cmp3 = icmp eq i32 %0, 13
  %1 = load i32* @captures, align 4, !tbaa !1
  %tobool = icmp ne i32 %1, 0
  %or.cond = and i1 %cmp3, %tobool
  br i1 %or.cond, label %return, label %if.end5

if.end5:                                          ; preds = %if.end
  br i1 %cmp3, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.end5
  tail call void @add_move(i32 %target, i32 0) #3
  br label %return

if.else:                                          ; preds = %if.end5
  %2 = load i32* @gfrom, align 4, !tbaa !0
  %idxprom12 = sext i32 %2 to i64
  %arrayidx13 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom12
  %3 = load i32* %arrayidx13, align 4, !tbaa !0
  %4 = xor i32 %3, %0
  %5 = and i32 %4, 1
  %cmp15 = icmp eq i32 %5, 0
  br i1 %cmp15, label %return, label %if.then16

if.then16:                                        ; preds = %if.else
  tail call void @add_capture(i32 %target, i32 %0, i32 0, i32 0) #3
  br label %return

return:                                           ; preds = %if.else, %if.end, %entry, %if.then16, %if.then9
  ret void
}
