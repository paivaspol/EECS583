define void @gen(%struct.move_s* %moves) #0 {
entry:
  store i32 0, i32* @kingcap, align 4, !tbaa !0
  store i32 0, i32* @numb_moves, align 4, !tbaa !0
  store %struct.move_s* %moves, %struct.move_s** @genfor, align 8, !tbaa !3
  %0 = load i32* @Variant, align 4, !tbaa !0
  %cmp = icmp eq i32 %0, 3
  br i1 %cmp, label %if.then, label %restart

if.then:                                          ; preds = %entry
  store i32 0, i32* @captures, align 4, !tbaa !1
  store i32 0, i32* @fcaptures, align 4, !tbaa !1
  br label %restart

restart:                                          ; preds = %entry, %if.then, %if.then726
  %1 = phi i32 [ 3, %if.then726 ], [ 3, %if.then ], [ %0, %entry ]
  %2 = load i32* @white_to_move, align 4, !tbaa !0
  %tobool = icmp eq i32 %2, 0
  %3 = load i32* @piece_count, align 4, !tbaa !0
  %cmp299957 = icmp slt i32 %3, 1
  br i1 %tobool, label %for.cond298.preheader, label %for.cond.preheader

for.cond298.preheader:                            ; preds = %restart
  br i1 %cmp299957, label %if.end612, label %land.rhs300

for.cond.preheader:                               ; preds = %restart
  br i1 %cmp299957, label %if.end612, label %land.rhs

land.rhs:                                         ; preds = %for.cond.preheader, %for.inc.land.rhs_crit_edge
  %4 = phi i32 [ %.pre, %for.inc.land.rhs_crit_edge ], [ %1, %for.cond.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.land.rhs_crit_edge ], [ 1, %for.cond.preheader ]
  %a.0954 = phi i32 [ %a.1, %for.inc.land.rhs_crit_edge ], [ 1, %for.cond.preheader ]
  %cmp3 = icmp eq i32 %4, 3
  %5 = load i32* @kingcap, align 4, !tbaa !0
  %tobool4 = icmp ne i32 %5, 0
  %or.cond = or i1 %cmp3, %tobool4
  br i1 %or.cond, label %lor.rhs, label %for.body

lor.rhs:                                          ; preds = %land.rhs
  br i1 %cmp3, label %land.rhs6, label %if.end612

land.rhs6:                                        ; preds = %lor.rhs
  %6 = load i32* @fcaptures, align 4, !tbaa !1
  %7 = load i32* @captures, align 4, !tbaa !1
  %cmp7 = icmp eq i32 %6, %7
  br i1 %cmp7, label %for.body, label %if.end612

for.body:                                         ; preds = %land.rhs, %land.rhs6
  %arrayidx9 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %indvars.iv
  %8 = load i32* %arrayidx9, align 4, !tbaa !0
  %tobool10 = icmp eq i32 %8, 0
  br i1 %tobool10, label %for.inc, label %if.else

if.else:                                          ; preds = %for.body
  %inc = add nsw i32 %a.0954, 1
  store i32 %8, i32* @gfrom, align 4, !tbaa !0
  %idxprom13 = sext i32 %8 to i64
  %arrayidx14 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom13
  %9 = load i32* %arrayidx14, align 4, !tbaa !0
  switch i32 %9, label %for.inc [
    i32 1, label %sw.bb
    i32 3, label %sw.bb82
    i32 11, label %sw.bb138
    i32 7, label %sw.bb167
    i32 9, label %sw.bb196
    i32 5, label %sw.bb253
  ]

sw.bb:                                            ; preds = %if.else
  %add = add nsw i32 %8, 12
  %idxprom15 = sext i32 %add to i64
  %arrayidx16 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom15
  %10 = load i32* %arrayidx16, align 4, !tbaa !0
  %cmp17 = icmp eq i32 %10, 13
  br i1 %cmp17, label %if.then18, label %if.end45

if.then18:                                        ; preds = %sw.bb
  %arrayidx20 = getelementptr inbounds [144 x i32]* @Xrank, i64 0, i64 %idxprom13
  %11 = load i32* %arrayidx20, align 4, !tbaa !0
  %cmp21 = icmp eq i32 %11, 7
  br i1 %cmp21, label %switch.early.test, label %if.else28

switch.early.test:                                ; preds = %if.then18
  %.off = add i32 %4, -3
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.else28, label %if.then26

if.then26:                                        ; preds = %switch.early.test
  tail call void @push_pawn(i32 %add, i32 0) #3
  br label %if.end45

if.else28:                                        ; preds = %switch.early.test, %if.then18
  %12 = load i32* @captures, align 4, !tbaa !1
  %tobool29 = icmp eq i32 %12, 0
  br i1 %tobool29, label %if.then30, label %if.end45

if.then30:                                        ; preds = %if.else28
  tail call void @push_pawn(i32 %add, i32 0) #3
  %cmp34 = icmp eq i32 %11, 2
  br i1 %cmp34, label %land.lhs.true35, label %if.end45

land.lhs.true35:                                  ; preds = %if.then30
  %add36 = add nsw i32 %8, 24
  %idxprom37 = sext i32 %add36 to i64
  %arrayidx38 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom37
  %13 = load i32* %arrayidx38, align 4, !tbaa !0
  %cmp39 = icmp eq i32 %13, 13
  br i1 %cmp39, label %if.then40, label %if.end45

if.then40:                                        ; preds = %land.lhs.true35
  tail call void @add_move(i32 %add36, i32 0) #2
  br label %if.end45

if.end45:                                         ; preds = %if.else28, %if.then26, %if.then30, %land.lhs.true35, %if.then40, %sw.bb
  %add46 = add nsw i32 %8, 13
  %idxprom47 = sext i32 %add46 to i64
  %arrayidx48 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom47
  %14 = load i32* %arrayidx48, align 4, !tbaa !0
  %and = and i32 %14, 1
  %cmp49 = icmp ne i32 %and, 0
  %cmp54 = icmp eq i32 %14, 0
  %or.cond945 = or i1 %cmp49, %cmp54
  br i1 %or.cond945, label %if.end57, label %if.then55

if.then55:                                        ; preds = %if.end45
  tail call void @push_pawn(i32 %add46, i32 0) #3
  br label %if.end57

if.end57:                                         ; preds = %if.end45, %if.then55
  %add58 = add nsw i32 %8, 11
  %idxprom59 = sext i32 %add58 to i64
  %arrayidx60 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom59
  %15 = load i32* %arrayidx60, align 4, !tbaa !0
  %and61 = and i32 %15, 1
  %cmp62 = icmp ne i32 %and61, 0
  %cmp67 = icmp eq i32 %15, 0
  %or.cond946 = or i1 %cmp62, %cmp67
  br i1 %or.cond946, label %if.end70, label %if.then68

if.then68:                                        ; preds = %if.end57
  tail call void @push_pawn(i32 %add58, i32 0) #3
  br label %if.end70

if.end70:                                         ; preds = %if.end57, %if.then68
  %16 = load i32* @ep_square, align 4, !tbaa !0
  %cmp72 = icmp eq i32 %16, %add46
  br i1 %cmp72, label %if.then73, label %if.else75

if.then73:                                        ; preds = %if.end70
  tail call void @push_pawn(i32 %add46, i32 1) #3
  br label %for.inc

if.else75:                                        ; preds = %if.end70
  %cmp77 = icmp eq i32 %16, %add58
  br i1 %cmp77, label %if.then78, label %for.inc

if.then78:                                        ; preds = %if.else75
  tail call void @push_pawn(i32 %add58, i32 1) #3
  br label %for.inc

sw.bb82:                                          ; preds = %if.else
  %sub = add nsw i32 %8, -25
  %idxprom83 = sext i32 %sub to i64
  %arrayidx84 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom83
  %17 = load i32* %arrayidx84, align 4, !tbaa !0
  %cmp85 = icmp eq i32 %17, 0
  br i1 %cmp85, label %if.end88, label %if.then86

if.then86:                                        ; preds = %sw.bb82
  tail call void @push_knighT(i32 %sub) #3
  br label %if.end88

if.end88:                                         ; preds = %sw.bb82, %if.then86
  %sub89 = add nsw i32 %8, -23
  %idxprom90 = sext i32 %sub89 to i64
  %arrayidx91 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom90
  %18 = load i32* %arrayidx91, align 4, !tbaa !0
  %cmp92 = icmp eq i32 %18, 0
  br i1 %cmp92, label %if.end95, label %if.then93

if.then93:                                        ; preds = %if.end88
  tail call void @push_knighT(i32 %sub89) #3
  br label %if.end95

if.end95:                                         ; preds = %if.end88, %if.then93
  %sub96 = add nsw i32 %8, -14
  %idxprom97 = sext i32 %sub96 to i64
  %arrayidx98 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom97
  %19 = load i32* %arrayidx98, align 4, !tbaa !0
  %cmp99 = icmp eq i32 %19, 0
  br i1 %cmp99, label %if.end102, label %if.then100

if.then100:                                       ; preds = %if.end95
  tail call void @push_knighT(i32 %sub96) #3
  br label %if.end102

if.end102:                                        ; preds = %if.end95, %if.then100
  %sub103 = add nsw i32 %8, -10
  %idxprom104 = sext i32 %sub103 to i64
  %arrayidx105 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom104
  %20 = load i32* %arrayidx105, align 4, !tbaa !0
  %cmp106 = icmp eq i32 %20, 0
  br i1 %cmp106, label %if.end109, label %if.then107

if.then107:                                       ; preds = %if.end102
  tail call void @push_knighT(i32 %sub103) #3
  br label %if.end109

if.end109:                                        ; preds = %if.end102, %if.then107
  %add110 = add nsw i32 %8, 10
  %idxprom111 = sext i32 %add110 to i64
  %arrayidx112 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom111
  %21 = load i32* %arrayidx112, align 4, !tbaa !0
  %cmp113 = icmp eq i32 %21, 0
  br i1 %cmp113, label %if.end116, label %if.then114

if.then114:                                       ; preds = %if.end109
  tail call void @push_knighT(i32 %add110) #3
  br label %if.end116

if.end116:                                        ; preds = %if.end109, %if.then114
  %add117 = add nsw i32 %8, 14
  %idxprom118 = sext i32 %add117 to i64
  %arrayidx119 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom118
  %22 = load i32* %arrayidx119, align 4, !tbaa !0
  %cmp120 = icmp eq i32 %22, 0
  br i1 %cmp120, label %if.end123, label %if.then121

if.then121:                                       ; preds = %if.end116
  tail call void @push_knighT(i32 %add117) #3
  br label %if.end123

if.end123:                                        ; preds = %if.end116, %if.then121
  %add124 = add nsw i32 %8, 23
  %idxprom125 = sext i32 %add124 to i64
  %arrayidx126 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom125
  %23 = load i32* %arrayidx126, align 4, !tbaa !0
  %cmp127 = icmp eq i32 %23, 0
  br i1 %cmp127, label %if.end130, label %if.then128

if.then128:                                       ; preds = %if.end123
  tail call void @push_knighT(i32 %add124) #3
  br label %if.end130

if.end130:                                        ; preds = %if.end123, %if.then128
  %add131 = add nsw i32 %8, 25
  %idxprom132 = sext i32 %add131 to i64
  %arrayidx133 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom132
  %24 = load i32* %arrayidx133, align 4, !tbaa !0
  %cmp134 = icmp eq i32 %24, 0
  br i1 %cmp134, label %for.inc, label %if.then135

if.then135:                                       ; preds = %if.end130
  tail call void @push_knighT(i32 %add131) #3
  br label %for.inc

sw.bb138:                                         ; preds = %if.else
  %sub139 = add nsw i32 %8, -13
  %idxprom140 = sext i32 %sub139 to i64
  %arrayidx141 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom140
  %25 = load i32* %arrayidx141, align 4, !tbaa !0
  %cmp142 = icmp eq i32 %25, 0
  br i1 %cmp142, label %if.end145, label %if.then143

if.then143:                                       ; preds = %sw.bb138
  tail call void @push_slidE(i32 %sub139) #3
  br label %if.end145

if.end145:                                        ; preds = %sw.bb138, %if.then143
  %sub146 = add nsw i32 %8, -11
  %idxprom147 = sext i32 %sub146 to i64
  %arrayidx148 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom147
  %26 = load i32* %arrayidx148, align 4, !tbaa !0
  %cmp149 = icmp eq i32 %26, 0
  br i1 %cmp149, label %if.end152, label %if.then150

if.then150:                                       ; preds = %if.end145
  tail call void @push_slidE(i32 %sub146) #3
  br label %if.end152

if.end152:                                        ; preds = %if.end145, %if.then150
  %add153 = add nsw i32 %8, 11
  %idxprom154 = sext i32 %add153 to i64
  %arrayidx155 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom154
  %27 = load i32* %arrayidx155, align 4, !tbaa !0
  %cmp156 = icmp eq i32 %27, 0
  br i1 %cmp156, label %if.end159, label %if.then157

if.then157:                                       ; preds = %if.end152
  tail call void @push_slidE(i32 %add153) #3
  br label %if.end159

if.end159:                                        ; preds = %if.end152, %if.then157
  %add160 = add nsw i32 %8, 13
  %idxprom161 = sext i32 %add160 to i64
  %arrayidx162 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom161
  %28 = load i32* %arrayidx162, align 4, !tbaa !0
  %cmp163 = icmp eq i32 %28, 0
  br i1 %cmp163, label %for.inc, label %if.then164

if.then164:                                       ; preds = %if.end159
  tail call void @push_slidE(i32 %add160) #3
  br label %for.inc

sw.bb167:                                         ; preds = %if.else
  %sub168 = add nsw i32 %8, -12
  %idxprom169 = sext i32 %sub168 to i64
  %arrayidx170 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom169
  %29 = load i32* %arrayidx170, align 4, !tbaa !0
  %cmp171 = icmp eq i32 %29, 0
  br i1 %cmp171, label %if.end174, label %if.then172

if.then172:                                       ; preds = %sw.bb167
  tail call void @push_slidE(i32 %sub168) #3
  br label %if.end174

if.end174:                                        ; preds = %sw.bb167, %if.then172
  %sub175 = add nsw i32 %8, -1
  %idxprom176 = sext i32 %sub175 to i64
  %arrayidx177 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom176
  %30 = load i32* %arrayidx177, align 4, !tbaa !0
  %cmp178 = icmp eq i32 %30, 0
  br i1 %cmp178, label %if.end181, label %if.then179

if.then179:                                       ; preds = %if.end174
  tail call void @push_slidE(i32 %sub175) #3
  br label %if.end181

if.end181:                                        ; preds = %if.end174, %if.then179
  %add182 = add nsw i32 %8, 1
  %idxprom183 = sext i32 %add182 to i64
  %arrayidx184 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom183
  %31 = load i32* %arrayidx184, align 4, !tbaa !0
  %cmp185 = icmp eq i32 %31, 0
  br i1 %cmp185, label %if.end188, label %if.then186

if.then186:                                       ; preds = %if.end181
  tail call void @push_slidE(i32 %add182) #3
  br label %if.end188

if.end188:                                        ; preds = %if.end181, %if.then186
  %add189 = add nsw i32 %8, 12
  %idxprom190 = sext i32 %add189 to i64
  %arrayidx191 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom190
  %32 = load i32* %arrayidx191, align 4, !tbaa !0
  %cmp192 = icmp eq i32 %32, 0
  br i1 %cmp192, label %for.inc, label %if.then193

if.then193:                                       ; preds = %if.end188
  tail call void @push_slidE(i32 %add189) #3
  br label %for.inc

sw.bb196:                                         ; preds = %if.else
  %sub197 = add nsw i32 %8, -13
  %idxprom198 = sext i32 %sub197 to i64
  %arrayidx199 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom198
  %33 = load i32* %arrayidx199, align 4, !tbaa !0
  %cmp200 = icmp eq i32 %33, 0
  br i1 %cmp200, label %if.end203, label %if.then201

if.then201:                                       ; preds = %sw.bb196
  tail call void @push_slidE(i32 %sub197) #3
  br label %if.end203

if.end203:                                        ; preds = %sw.bb196, %if.then201
  %sub204 = add nsw i32 %8, -12
  %idxprom205 = sext i32 %sub204 to i64
  %arrayidx206 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom205
  %34 = load i32* %arrayidx206, align 4, !tbaa !0
  %cmp207 = icmp eq i32 %34, 0
  br i1 %cmp207, label %if.end210, label %if.then208

if.then208:                                       ; preds = %if.end203
  tail call void @push_slidE(i32 %sub204) #3
  br label %if.end210

if.end210:                                        ; preds = %if.end203, %if.then208
  %sub211 = add nsw i32 %8, -11
  %idxprom212 = sext i32 %sub211 to i64
  %arrayidx213 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom212
  %35 = load i32* %arrayidx213, align 4, !tbaa !0
  %cmp214 = icmp eq i32 %35, 0
  br i1 %cmp214, label %if.end217, label %if.then215

if.then215:                                       ; preds = %if.end210
  tail call void @push_slidE(i32 %sub211) #3
  br label %if.end217

if.end217:                                        ; preds = %if.end210, %if.then215
  %sub218 = add nsw i32 %8, -1
  %idxprom219 = sext i32 %sub218 to i64
  %arrayidx220 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom219
  %36 = load i32* %arrayidx220, align 4, !tbaa !0
  %cmp221 = icmp eq i32 %36, 0
  br i1 %cmp221, label %if.end224, label %if.then222

if.then222:                                       ; preds = %if.end217
  tail call void @push_slidE(i32 %sub218) #3
  br label %if.end224

if.end224:                                        ; preds = %if.end217, %if.then222
  %add225 = add nsw i32 %8, 1
  %idxprom226 = sext i32 %add225 to i64
  %arrayidx227 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom226
  %37 = load i32* %arrayidx227, align 4, !tbaa !0
  %cmp228 = icmp eq i32 %37, 0
  br i1 %cmp228, label %if.end231, label %if.then229

if.then229:                                       ; preds = %if.end224
  tail call void @push_slidE(i32 %add225) #3
  br label %if.end231

if.end231:                                        ; preds = %if.end224, %if.then229
  %add232 = add nsw i32 %8, 11
  %idxprom233 = sext i32 %add232 to i64
  %arrayidx234 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom233
  %38 = load i32* %arrayidx234, align 4, !tbaa !0
  %cmp235 = icmp eq i32 %38, 0
  br i1 %cmp235, label %if.end238, label %if.then236

if.then236:                                       ; preds = %if.end231
  tail call void @push_slidE(i32 %add232) #3
  br label %if.end238

if.end238:                                        ; preds = %if.end231, %if.then236
  %add239 = add nsw i32 %8, 12
  %idxprom240 = sext i32 %add239 to i64
  %arrayidx241 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom240
  %39 = load i32* %arrayidx241, align 4, !tbaa !0
  %cmp242 = icmp eq i32 %39, 0
  br i1 %cmp242, label %if.end245, label %if.then243

if.then243:                                       ; preds = %if.end238
  tail call void @push_slidE(i32 %add239) #3
  br label %if.end245

if.end245:                                        ; preds = %if.end238, %if.then243
  %add246 = add nsw i32 %8, 13
  %idxprom247 = sext i32 %add246 to i64
  %arrayidx248 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom247
  %40 = load i32* %arrayidx248, align 4, !tbaa !0
  %cmp249 = icmp eq i32 %40, 0
  br i1 %cmp249, label %for.inc, label %if.then250

if.then250:                                       ; preds = %if.end245
  tail call void @push_slidE(i32 %add246) #3
  br label %for.inc

sw.bb253:                                         ; preds = %if.else
  %sub254 = add nsw i32 %8, -13
  tail call void @push_king(i32 %sub254) #3
  %sub255 = add nsw i32 %8, -12
  tail call void @push_king(i32 %sub255) #3
  %sub256 = add nsw i32 %8, -11
  tail call void @push_king(i32 %sub256) #3
  %sub257 = add nsw i32 %8, -1
  tail call void @push_king(i32 %sub257) #3
  %add258 = add nsw i32 %8, 1
  tail call void @push_king(i32 %add258) #3
  %add259 = add nsw i32 %8, 11
  tail call void @push_king(i32 %add259) #3
  %add260 = add nsw i32 %8, 12
  tail call void @push_king(i32 %add260) #3
  %add261 = add nsw i32 %8, 13
  tail call void @push_king(i32 %add261) #3
  %cmp262 = icmp ne i32 %8, 30
  %41 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 30), align 4, !tbaa !0
  %tobool264 = icmp ne i32 %41, 0
  %or.cond734 = or i1 %cmp262, %tobool264
  %42 = load i32* @captures, align 4, !tbaa !1
  %tobool266 = icmp ne i32 %42, 0
  %or.cond735 = or i1 %or.cond734, %tobool266
  br i1 %or.cond735, label %for.inc, label %land.lhs.true267

land.lhs.true267:                                 ; preds = %sw.bb253
  %43 = load i32* @Variant, align 4, !tbaa !0
  %cmp268 = icmp ne i32 %43, 3
  %44 = load i32* @Giveaway, align 4, !tbaa !0
  %cmp269 = icmp eq i32 %44, 1
  %or.cond736 = or i1 %cmp268, %cmp269
  br i1 %or.cond736, label %if.then270, label %for.inc

if.then270:                                       ; preds = %land.lhs.true267
  %45 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 33), align 4, !tbaa !0
  %tobool271 = icmp eq i32 %45, 0
  %46 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 33), align 4, !tbaa !0
  %cmp273 = icmp eq i32 %46, 7
  %or.cond737 = and i1 %tobool271, %cmp273
  br i1 %or.cond737, label %if.then274, label %if.end281

if.then274:                                       ; preds = %if.then270
  %47 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 31), align 4, !tbaa !0
  %cmp275 = icmp eq i32 %47, 13
  %48 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 32), align 4, !tbaa !0
  %cmp277 = icmp eq i32 %48, 13
  %or.cond738 = and i1 %cmp275, %cmp277
  br i1 %or.cond738, label %if.then278, label %if.end281

if.then278:                                       ; preds = %if.then274
  tail call void @push_king_castle(i32 32, i32 1) #3
  br label %if.end281

if.end281:                                        ; preds = %if.then274, %if.then278, %if.then270
  %49 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 26), align 4, !tbaa !0
  %tobool282 = icmp eq i32 %49, 0
  %50 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 26), align 4, !tbaa !0
  %cmp284 = icmp eq i32 %50, 7
  %or.cond739 = and i1 %tobool282, %cmp284
  br i1 %or.cond739, label %if.then285, label %for.inc

if.then285:                                       ; preds = %if.end281
  %51 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 27), align 4, !tbaa !0
  %cmp286 = icmp eq i32 %51, 13
  %52 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 28), align 4, !tbaa !0
  %cmp288 = icmp eq i32 %52, 13
  %or.cond740 = and i1 %cmp286, %cmp288
  %53 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 29), align 4, !tbaa !0
  %cmp290 = icmp eq i32 %53, 13
  %or.cond741 = and i1 %or.cond740, %cmp290
  br i1 %or.cond741, label %if.then291, label %for.inc

if.then291:                                       ; preds = %if.then285
  tail call void @push_king_castle(i32 28, i32 2) #3
  br label %for.inc

for.inc:                                          ; preds = %if.then285, %if.end281, %land.lhs.true267, %sw.bb253, %if.end245, %if.end188, %if.end159, %if.end130, %if.else75, %for.body, %if.then78, %if.then73, %if.then135, %if.then164, %if.then193, %if.then250, %if.then291, %if.else
  %a.1 = phi i32 [ %inc, %if.else ], [ %inc, %if.then291 ], [ %inc, %if.then250 ], [ %inc, %if.then193 ], [ %inc, %if.then164 ], [ %inc, %if.then135 ], [ %inc, %if.then73 ], [ %inc, %if.then78 ], [ %a.0954, %for.body ], [ %inc, %if.else75 ], [ %inc, %if.end130 ], [ %inc, %if.end159 ], [ %inc, %if.end188 ], [ %inc, %if.end245 ], [ %inc, %sw.bb253 ], [ %inc, %land.lhs.true267 ], [ %inc, %if.end281 ], [ %inc, %if.then285 ]
  %54 = load i32* @piece_count, align 4, !tbaa !0
  %cmp2 = icmp sgt i32 %a.1, %54
  br i1 %cmp2, label %if.end612, label %for.inc.land.rhs_crit_edge

for.inc.land.rhs_crit_edge:                       ; preds = %for.inc
  %indvars.iv.next = add i64 %indvars.iv, 1
  %.pre = load i32* @Variant, align 4, !tbaa !0
  br label %land.rhs

land.rhs300:                                      ; preds = %for.cond298.preheader, %for.inc609.land.rhs300_crit_edge
  %55 = phi i32 [ %.pre965, %for.inc609.land.rhs300_crit_edge ], [ %1, %for.cond298.preheader ]
  %indvars.iv963 = phi i64 [ %indvars.iv.next964, %for.inc609.land.rhs300_crit_edge ], [ 1, %for.cond298.preheader ]
  %a.2958 = phi i32 [ %a.3, %for.inc609.land.rhs300_crit_edge ], [ 1, %for.cond298.preheader ]
  %cmp301 = icmp eq i32 %55, 3
  %56 = load i32* @kingcap, align 4, !tbaa !0
  %tobool303 = icmp ne i32 %56, 0
  %or.cond742 = or i1 %cmp301, %tobool303
  br i1 %or.cond742, label %lor.rhs304, label %for.body311

lor.rhs304:                                       ; preds = %land.rhs300
  br i1 %cmp301, label %land.rhs306, label %if.end612

land.rhs306:                                      ; preds = %lor.rhs304
  %57 = load i32* @fcaptures, align 4, !tbaa !1
  %58 = load i32* @captures, align 4, !tbaa !1
  %cmp307 = icmp eq i32 %57, %58
  br i1 %cmp307, label %for.body311, label %if.end612

for.body311:                                      ; preds = %land.rhs300, %land.rhs306
  %arrayidx313 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %indvars.iv963
  %59 = load i32* %arrayidx313, align 4, !tbaa !0
  %tobool314 = icmp eq i32 %59, 0
  br i1 %tobool314, label %for.inc609, label %if.else316

if.else316:                                       ; preds = %for.body311
  %inc317 = add nsw i32 %a.2958, 1
  store i32 %59, i32* @gfrom, align 4, !tbaa !0
  %idxprom319 = sext i32 %59 to i64
  %arrayidx320 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom319
  %60 = load i32* %arrayidx320, align 4, !tbaa !0
  switch i32 %60, label %for.inc609 [
    i32 2, label %sw.bb321
    i32 4, label %sw.bb391
    i32 12, label %sw.bb448
    i32 8, label %sw.bb477
    i32 10, label %sw.bb506
    i32 6, label %sw.bb563
  ]

sw.bb321:                                         ; preds = %if.else316
  %sub322 = add nsw i32 %59, -12
  %idxprom323 = sext i32 %sub322 to i64
  %arrayidx324 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom323
  %61 = load i32* %arrayidx324, align 4, !tbaa !0
  %cmp325 = icmp eq i32 %61, 13
  br i1 %cmp325, label %if.then326, label %if.end353

if.then326:                                       ; preds = %sw.bb321
  %arrayidx328 = getelementptr inbounds [144 x i32]* @Xrank, i64 0, i64 %idxprom319
  %62 = load i32* %arrayidx328, align 4, !tbaa !0
  %cmp329 = icmp eq i32 %62, 2
  br i1 %cmp329, label %switch.early.test947, label %if.else336

switch.early.test947:                             ; preds = %if.then326
  %.off950 = add i32 %55, -3
  %switch951 = icmp ult i32 %.off950, 2
  br i1 %switch951, label %if.else336, label %if.then334

if.then334:                                       ; preds = %switch.early.test947
  tail call void @push_pawn(i32 %sub322, i32 0) #3
  br label %if.end353

if.else336:                                       ; preds = %switch.early.test947, %if.then326
  %63 = load i32* @captures, align 4, !tbaa !1
  %tobool337 = icmp eq i32 %63, 0
  br i1 %tobool337, label %if.then338, label %if.end353

if.then338:                                       ; preds = %if.else336
  tail call void @push_pawn(i32 %sub322, i32 0) #3
  %cmp342 = icmp eq i32 %62, 7
  br i1 %cmp342, label %land.lhs.true343, label %if.end353

land.lhs.true343:                                 ; preds = %if.then338
  %sub344 = add nsw i32 %59, -24
  %idxprom345 = sext i32 %sub344 to i64
  %arrayidx346 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom345
  %64 = load i32* %arrayidx346, align 4, !tbaa !0
  %cmp347 = icmp eq i32 %64, 13
  br i1 %cmp347, label %if.then348, label %if.end353

if.then348:                                       ; preds = %land.lhs.true343
  tail call void @add_move(i32 %sub344, i32 0) #2
  br label %if.end353

if.end353:                                        ; preds = %if.else336, %if.then334, %if.then338, %land.lhs.true343, %if.then348, %sw.bb321
  %sub354 = add nsw i32 %59, -13
  %idxprom355 = sext i32 %sub354 to i64
  %arrayidx356 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom355
  %65 = load i32* %arrayidx356, align 4, !tbaa !0
  %and357 = and i32 %65, 1
  %cmp358 = icmp eq i32 %and357, 0
  %cmp363 = icmp eq i32 %65, 13
  %or.cond948 = or i1 %cmp358, %cmp363
  br i1 %or.cond948, label %if.end366, label %if.then364

if.then364:                                       ; preds = %if.end353
  tail call void @push_pawn(i32 %sub354, i32 0) #3
  br label %if.end366

if.end366:                                        ; preds = %if.end353, %if.then364
  %sub367 = add nsw i32 %59, -11
  %idxprom368 = sext i32 %sub367 to i64
  %arrayidx369 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom368
  %66 = load i32* %arrayidx369, align 4, !tbaa !0
  %and370 = and i32 %66, 1
  %cmp371 = icmp eq i32 %and370, 0
  %cmp376 = icmp eq i32 %66, 13
  %or.cond949 = or i1 %cmp371, %cmp376
  br i1 %or.cond949, label %if.end379, label %if.then377

if.then377:                                       ; preds = %if.end366
  tail call void @push_pawn(i32 %sub367, i32 0) #3
  br label %if.end379

if.end379:                                        ; preds = %if.end366, %if.then377
  %67 = load i32* @ep_square, align 4, !tbaa !0
  %cmp381 = icmp eq i32 %67, %sub354
  br i1 %cmp381, label %if.then382, label %if.else384

if.then382:                                       ; preds = %if.end379
  tail call void @push_pawn(i32 %sub354, i32 1) #3
  br label %for.inc609

if.else384:                                       ; preds = %if.end379
  %cmp386 = icmp eq i32 %67, %sub367
  br i1 %cmp386, label %if.then387, label %for.inc609

if.then387:                                       ; preds = %if.else384
  tail call void @push_pawn(i32 %sub367, i32 1) #3
  br label %for.inc609

sw.bb391:                                         ; preds = %if.else316
  %sub392 = add nsw i32 %59, -25
  %idxprom393 = sext i32 %sub392 to i64
  %arrayidx394 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom393
  %68 = load i32* %arrayidx394, align 4, !tbaa !0
  %cmp395 = icmp eq i32 %68, 0
  br i1 %cmp395, label %if.end398, label %if.then396

if.then396:                                       ; preds = %sw.bb391
  tail call void @push_knighT(i32 %sub392) #3
  br label %if.end398

if.end398:                                        ; preds = %sw.bb391, %if.then396
  %sub399 = add nsw i32 %59, -23
  %idxprom400 = sext i32 %sub399 to i64
  %arrayidx401 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom400
  %69 = load i32* %arrayidx401, align 4, !tbaa !0
  %cmp402 = icmp eq i32 %69, 0
  br i1 %cmp402, label %if.end405, label %if.then403

if.then403:                                       ; preds = %if.end398
  tail call void @push_knighT(i32 %sub399) #3
  br label %if.end405

if.end405:                                        ; preds = %if.end398, %if.then403
  %sub406 = add nsw i32 %59, -14
  %idxprom407 = sext i32 %sub406 to i64
  %arrayidx408 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom407
  %70 = load i32* %arrayidx408, align 4, !tbaa !0
  %cmp409 = icmp eq i32 %70, 0
  br i1 %cmp409, label %if.end412, label %if.then410

if.then410:                                       ; preds = %if.end405
  tail call void @push_knighT(i32 %sub406) #3
  br label %if.end412

if.end412:                                        ; preds = %if.end405, %if.then410
  %sub413 = add nsw i32 %59, -10
  %idxprom414 = sext i32 %sub413 to i64
  %arrayidx415 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom414
  %71 = load i32* %arrayidx415, align 4, !tbaa !0
  %cmp416 = icmp eq i32 %71, 0
  br i1 %cmp416, label %if.end419, label %if.then417

if.then417:                                       ; preds = %if.end412
  tail call void @push_knighT(i32 %sub413) #3
  br label %if.end419

if.end419:                                        ; preds = %if.end412, %if.then417
  %add420 = add nsw i32 %59, 10
  %idxprom421 = sext i32 %add420 to i64
  %arrayidx422 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom421
  %72 = load i32* %arrayidx422, align 4, !tbaa !0
  %cmp423 = icmp eq i32 %72, 0
  br i1 %cmp423, label %if.end426, label %if.then424

if.then424:                                       ; preds = %if.end419
  tail call void @push_knighT(i32 %add420) #3
  br label %if.end426

if.end426:                                        ; preds = %if.end419, %if.then424
  %add427 = add nsw i32 %59, 14
  %idxprom428 = sext i32 %add427 to i64
  %arrayidx429 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom428
  %73 = load i32* %arrayidx429, align 4, !tbaa !0
  %cmp430 = icmp eq i32 %73, 0
  br i1 %cmp430, label %if.end433, label %if.then431

if.then431:                                       ; preds = %if.end426
  tail call void @push_knighT(i32 %add427) #3
  br label %if.end433

if.end433:                                        ; preds = %if.end426, %if.then431
  %add434 = add nsw i32 %59, 23
  %idxprom435 = sext i32 %add434 to i64
  %arrayidx436 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom435
  %74 = load i32* %arrayidx436, align 4, !tbaa !0
  %cmp437 = icmp eq i32 %74, 0
  br i1 %cmp437, label %if.end440, label %if.then438

if.then438:                                       ; preds = %if.end433
  tail call void @push_knighT(i32 %add434) #3
  br label %if.end440

if.end440:                                        ; preds = %if.end433, %if.then438
  %add441 = add nsw i32 %59, 25
  %idxprom442 = sext i32 %add441 to i64
  %arrayidx443 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom442
  %75 = load i32* %arrayidx443, align 4, !tbaa !0
  %cmp444 = icmp eq i32 %75, 0
  br i1 %cmp444, label %for.inc609, label %if.then445

if.then445:                                       ; preds = %if.end440
  tail call void @push_knighT(i32 %add441) #3
  br label %for.inc609

sw.bb448:                                         ; preds = %if.else316
  %sub449 = add nsw i32 %59, -13
  %idxprom450 = sext i32 %sub449 to i64
  %arrayidx451 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom450
  %76 = load i32* %arrayidx451, align 4, !tbaa !0
  %cmp452 = icmp eq i32 %76, 0
  br i1 %cmp452, label %if.end455, label %if.then453

if.then453:                                       ; preds = %sw.bb448
  tail call void @push_slidE(i32 %sub449) #3
  br label %if.end455

if.end455:                                        ; preds = %sw.bb448, %if.then453
  %sub456 = add nsw i32 %59, -11
  %idxprom457 = sext i32 %sub456 to i64
  %arrayidx458 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom457
  %77 = load i32* %arrayidx458, align 4, !tbaa !0
  %cmp459 = icmp eq i32 %77, 0
  br i1 %cmp459, label %if.end462, label %if.then460

if.then460:                                       ; preds = %if.end455
  tail call void @push_slidE(i32 %sub456) #3
  br label %if.end462

if.end462:                                        ; preds = %if.end455, %if.then460
  %add463 = add nsw i32 %59, 11
  %idxprom464 = sext i32 %add463 to i64
  %arrayidx465 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom464
  %78 = load i32* %arrayidx465, align 4, !tbaa !0
  %cmp466 = icmp eq i32 %78, 0
  br i1 %cmp466, label %if.end469, label %if.then467

if.then467:                                       ; preds = %if.end462
  tail call void @push_slidE(i32 %add463) #3
  br label %if.end469

if.end469:                                        ; preds = %if.end462, %if.then467
  %add470 = add nsw i32 %59, 13
  %idxprom471 = sext i32 %add470 to i64
  %arrayidx472 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom471
  %79 = load i32* %arrayidx472, align 4, !tbaa !0
  %cmp473 = icmp eq i32 %79, 0
  br i1 %cmp473, label %for.inc609, label %if.then474

if.then474:                                       ; preds = %if.end469
  tail call void @push_slidE(i32 %add470) #3
  br label %for.inc609

sw.bb477:                                         ; preds = %if.else316
  %sub478 = add nsw i32 %59, -12
  %idxprom479 = sext i32 %sub478 to i64
  %arrayidx480 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom479
  %80 = load i32* %arrayidx480, align 4, !tbaa !0
  %cmp481 = icmp eq i32 %80, 0
  br i1 %cmp481, label %if.end484, label %if.then482

if.then482:                                       ; preds = %sw.bb477
  tail call void @push_slidE(i32 %sub478) #3
  br label %if.end484

if.end484:                                        ; preds = %sw.bb477, %if.then482
  %sub485 = add nsw i32 %59, -1
  %idxprom486 = sext i32 %sub485 to i64
  %arrayidx487 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom486
  %81 = load i32* %arrayidx487, align 4, !tbaa !0
  %cmp488 = icmp eq i32 %81, 0
  br i1 %cmp488, label %if.end491, label %if.then489

if.then489:                                       ; preds = %if.end484
  tail call void @push_slidE(i32 %sub485) #3
  br label %if.end491

if.end491:                                        ; preds = %if.end484, %if.then489
  %add492 = add nsw i32 %59, 1
  %idxprom493 = sext i32 %add492 to i64
  %arrayidx494 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom493
  %82 = load i32* %arrayidx494, align 4, !tbaa !0
  %cmp495 = icmp eq i32 %82, 0
  br i1 %cmp495, label %if.end498, label %if.then496

if.then496:                                       ; preds = %if.end491
  tail call void @push_slidE(i32 %add492) #3
  br label %if.end498

if.end498:                                        ; preds = %if.end491, %if.then496
  %add499 = add nsw i32 %59, 12
  %idxprom500 = sext i32 %add499 to i64
  %arrayidx501 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom500
  %83 = load i32* %arrayidx501, align 4, !tbaa !0
  %cmp502 = icmp eq i32 %83, 0
  br i1 %cmp502, label %for.inc609, label %if.then503

if.then503:                                       ; preds = %if.end498
  tail call void @push_slidE(i32 %add499) #3
  br label %for.inc609

sw.bb506:                                         ; preds = %if.else316
  %sub507 = add nsw i32 %59, -13
  %idxprom508 = sext i32 %sub507 to i64
  %arrayidx509 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom508
  %84 = load i32* %arrayidx509, align 4, !tbaa !0
  %cmp510 = icmp eq i32 %84, 0
  br i1 %cmp510, label %if.end513, label %if.then511

if.then511:                                       ; preds = %sw.bb506
  tail call void @push_slidE(i32 %sub507) #3
  br label %if.end513

if.end513:                                        ; preds = %sw.bb506, %if.then511
  %sub514 = add nsw i32 %59, -12
  %idxprom515 = sext i32 %sub514 to i64
  %arrayidx516 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom515
  %85 = load i32* %arrayidx516, align 4, !tbaa !0
  %cmp517 = icmp eq i32 %85, 0
  br i1 %cmp517, label %if.end520, label %if.then518

if.then518:                                       ; preds = %if.end513
  tail call void @push_slidE(i32 %sub514) #3
  br label %if.end520

if.end520:                                        ; preds = %if.end513, %if.then518
  %sub521 = add nsw i32 %59, -11
  %idxprom522 = sext i32 %sub521 to i64
  %arrayidx523 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom522
  %86 = load i32* %arrayidx523, align 4, !tbaa !0
  %cmp524 = icmp eq i32 %86, 0
  br i1 %cmp524, label %if.end527, label %if.then525

if.then525:                                       ; preds = %if.end520
  tail call void @push_slidE(i32 %sub521) #3
  br label %if.end527

if.end527:                                        ; preds = %if.end520, %if.then525
  %sub528 = add nsw i32 %59, -1
  %idxprom529 = sext i32 %sub528 to i64
  %arrayidx530 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom529
  %87 = load i32* %arrayidx530, align 4, !tbaa !0
  %cmp531 = icmp eq i32 %87, 0
  br i1 %cmp531, label %if.end534, label %if.then532

if.then532:                                       ; preds = %if.end527
  tail call void @push_slidE(i32 %sub528) #3
  br label %if.end534

if.end534:                                        ; preds = %if.end527, %if.then532
  %add535 = add nsw i32 %59, 1
  %idxprom536 = sext i32 %add535 to i64
  %arrayidx537 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom536
  %88 = load i32* %arrayidx537, align 4, !tbaa !0
  %cmp538 = icmp eq i32 %88, 0
  br i1 %cmp538, label %if.end541, label %if.then539

if.then539:                                       ; preds = %if.end534
  tail call void @push_slidE(i32 %add535) #3
  br label %if.end541

if.end541:                                        ; preds = %if.end534, %if.then539
  %add542 = add nsw i32 %59, 11
  %idxprom543 = sext i32 %add542 to i64
  %arrayidx544 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom543
  %89 = load i32* %arrayidx544, align 4, !tbaa !0
  %cmp545 = icmp eq i32 %89, 0
  br i1 %cmp545, label %if.end548, label %if.then546

if.then546:                                       ; preds = %if.end541
  tail call void @push_slidE(i32 %add542) #3
  br label %if.end548

if.end548:                                        ; preds = %if.end541, %if.then546
  %add549 = add nsw i32 %59, 12
  %idxprom550 = sext i32 %add549 to i64
  %arrayidx551 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom550
  %90 = load i32* %arrayidx551, align 4, !tbaa !0
  %cmp552 = icmp eq i32 %90, 0
  br i1 %cmp552, label %if.end555, label %if.then553

if.then553:                                       ; preds = %if.end548
  tail call void @push_slidE(i32 %add549) #3
  br label %if.end555

if.end555:                                        ; preds = %if.end548, %if.then553
  %add556 = add nsw i32 %59, 13
  %idxprom557 = sext i32 %add556 to i64
  %arrayidx558 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom557
  %91 = load i32* %arrayidx558, align 4, !tbaa !0
  %cmp559 = icmp eq i32 %91, 0
  br i1 %cmp559, label %for.inc609, label %if.then560

if.then560:                                       ; preds = %if.end555
  tail call void @push_slidE(i32 %add556) #3
  br label %for.inc609

sw.bb563:                                         ; preds = %if.else316
  %sub564 = add nsw i32 %59, -13
  tail call void @push_king(i32 %sub564) #3
  %sub565 = add nsw i32 %59, -12
  tail call void @push_king(i32 %sub565) #3
  %sub566 = add nsw i32 %59, -11
  tail call void @push_king(i32 %sub566) #3
  %sub567 = add nsw i32 %59, -1
  tail call void @push_king(i32 %sub567) #3
  %add568 = add nsw i32 %59, 1
  tail call void @push_king(i32 %add568) #3
  %add569 = add nsw i32 %59, 11
  tail call void @push_king(i32 %add569) #3
  %add570 = add nsw i32 %59, 12
  tail call void @push_king(i32 %add570) #3
  %add571 = add nsw i32 %59, 13
  tail call void @push_king(i32 %add571) #3
  %cmp572 = icmp ne i32 %59, 114
  %92 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 114), align 4, !tbaa !0
  %tobool574 = icmp ne i32 %92, 0
  %or.cond746 = or i1 %cmp572, %tobool574
  %93 = load i32* @captures, align 4, !tbaa !1
  %tobool576 = icmp ne i32 %93, 0
  %or.cond747 = or i1 %or.cond746, %tobool576
  br i1 %or.cond747, label %for.inc609, label %land.lhs.true577

land.lhs.true577:                                 ; preds = %sw.bb563
  %94 = load i32* @Variant, align 4, !tbaa !0
  %cmp578 = icmp ne i32 %94, 3
  %95 = load i32* @Giveaway, align 4, !tbaa !0
  %cmp580 = icmp eq i32 %95, 1
  %or.cond748 = or i1 %cmp578, %cmp580
  br i1 %or.cond748, label %if.then581, label %for.inc609

if.then581:                                       ; preds = %land.lhs.true577
  %96 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 117), align 4, !tbaa !0
  %tobool582 = icmp eq i32 %96, 0
  %97 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 117), align 4, !tbaa !0
  %cmp584 = icmp eq i32 %97, 8
  %or.cond749 = and i1 %tobool582, %cmp584
  br i1 %or.cond749, label %if.then585, label %if.end592

if.then585:                                       ; preds = %if.then581
  %98 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 115), align 4, !tbaa !0
  %cmp586 = icmp eq i32 %98, 13
  %99 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 116), align 4, !tbaa !0
  %cmp588 = icmp eq i32 %99, 13
  %or.cond750 = and i1 %cmp586, %cmp588
  br i1 %or.cond750, label %if.then589, label %if.end592

if.then589:                                       ; preds = %if.then585
  tail call void @push_king_castle(i32 116, i32 3) #3
  br label %if.end592

if.end592:                                        ; preds = %if.then585, %if.then589, %if.then581
  %100 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 110), align 4, !tbaa !0
  %tobool593 = icmp eq i32 %100, 0
  %101 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 110), align 4, !tbaa !0
  %cmp595 = icmp eq i32 %101, 8
  %or.cond751 = and i1 %tobool593, %cmp595
  br i1 %or.cond751, label %if.then596, label %for.inc609

if.then596:                                       ; preds = %if.end592
  %102 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 111), align 4, !tbaa !0
  %cmp597 = icmp eq i32 %102, 13
  %103 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 112), align 4, !tbaa !0
  %cmp599 = icmp eq i32 %103, 13
  %or.cond752 = and i1 %cmp597, %cmp599
  %104 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 113), align 4, !tbaa !0
  %cmp601 = icmp eq i32 %104, 13
  %or.cond753 = and i1 %or.cond752, %cmp601
  br i1 %or.cond753, label %if.then602, label %for.inc609

if.then602:                                       ; preds = %if.then596
  tail call void @push_king_castle(i32 112, i32 4) #3
  br label %for.inc609

for.inc609:                                       ; preds = %if.then596, %if.end592, %land.lhs.true577, %sw.bb563, %if.end555, %if.end498, %if.end469, %if.end440, %if.else384, %for.body311, %if.then387, %if.then382, %if.then445, %if.then474, %if.then503, %if.then560, %if.then602, %if.else316
  %a.3 = phi i32 [ %inc317, %if.else316 ], [ %inc317, %if.then602 ], [ %inc317, %if.then560 ], [ %inc317, %if.then503 ], [ %inc317, %if.then474 ], [ %inc317, %if.then445 ], [ %inc317, %if.then382 ], [ %inc317, %if.then387 ], [ %a.2958, %for.body311 ], [ %inc317, %if.else384 ], [ %inc317, %if.end440 ], [ %inc317, %if.end469 ], [ %inc317, %if.end498 ], [ %inc317, %if.end555 ], [ %inc317, %sw.bb563 ], [ %inc317, %land.lhs.true577 ], [ %inc317, %if.end592 ], [ %inc317, %if.then596 ]
  %105 = load i32* @piece_count, align 4, !tbaa !0
  %cmp299 = icmp sgt i32 %a.3, %105
  br i1 %cmp299, label %if.end612, label %for.inc609.land.rhs300_crit_edge

for.inc609.land.rhs300_crit_edge:                 ; preds = %for.inc609
  %indvars.iv.next964 = add i64 %indvars.iv963, 1
  %.pre965 = load i32* @Variant, align 4, !tbaa !0
  br label %land.rhs300

if.end612:                                        ; preds = %for.cond298.preheader, %land.rhs306, %lor.rhs304, %for.inc609, %for.cond.preheader, %land.rhs6, %lor.rhs, %for.inc
  %106 = load i32* @Variant, align 4, !tbaa !0
  %or.cond754.not = icmp ugt i32 %106, 1
  %107 = load i32* @captures, align 4, !tbaa !1
  %tobool617 = icmp ne i32 %107, 0
  %or.cond755 = or i1 %or.cond754.not, %tobool617
  %108 = load i32* @kingcap, align 4, !tbaa !0
  %tobool619 = icmp ne i32 %108, 0
  %or.cond756 = or i1 %or.cond755, %tobool619
  br i1 %or.cond756, label %if.end720, label %if.then620

if.then620:                                       ; preds = %if.end612
  %109 = load i32* @white_to_move, align 4, !tbaa !0
  %tobool621 = icmp eq i32 %109, 0
  br i1 %tobool621, label %land.lhs.true671, label %land.lhs.true622

land.lhs.true622:                                 ; preds = %if.then620
  %110 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 1), align 4, !tbaa !0
  %111 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 3), align 4, !tbaa !0
  %112 = or i32 %111, %110
  %113 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 11), align 4, !tbaa !0
  %114 = or i32 %112, %113
  %115 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 9), align 4, !tbaa !0
  %116 = or i32 %114, %115
  %117 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 7), align 4, !tbaa !0
  %118 = or i32 %116, %117
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %if.end720, label %for.body635

for.body635:                                      ; preds = %for.inc666, %land.lhs.true622
  %from.0960 = phi i32 [ 26, %land.lhs.true622 ], [ %inc667, %for.inc666 ]
  store i32 %from.0960, i32* @gfrom, align 4, !tbaa !0
  %idxprom636 = sext i32 %from.0960 to i64
  %arrayidx637 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom636
  %120 = load i32* %arrayidx637, align 4, !tbaa !0
  switch i32 %120, label %for.inc666 [
    i32 0, label %sw.bb638
    i32 13, label %sw.bb640
  ]

sw.bb638:                                         ; preds = %for.body635
  %add639 = add nsw i32 %from.0960, 3
  br label %for.inc666

sw.bb640:                                         ; preds = %for.body635
  %121 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 1), align 4, !tbaa !0
  %tobool641 = icmp eq i32 %121, 0
  br i1 %tobool641, label %if.end652, label %if.then642

if.then642:                                       ; preds = %sw.bb640
  %arrayidx644 = getelementptr inbounds [144 x i32]* @Xrank, i64 0, i64 %idxprom636
  %122 = load i32* %arrayidx644, align 4, !tbaa !0
  switch i32 %122, label %if.then650 [
    i32 8, label %if.end652
    i32 1, label %if.end652
  ]

if.then650:                                       ; preds = %if.then642
  tail call void @try_drop(i32 1) #3
  br label %if.end652

if.end652:                                        ; preds = %if.then642, %if.then642, %sw.bb640, %if.then650
  %123 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 3), align 4, !tbaa !0
  %tobool653 = icmp eq i32 %123, 0
  br i1 %tobool653, label %if.end655, label %if.then654

if.then654:                                       ; preds = %if.end652
  tail call void @try_drop(i32 3) #3
  br label %if.end655

if.end655:                                        ; preds = %if.end652, %if.then654
  %124 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 11), align 4, !tbaa !0
  %tobool656 = icmp eq i32 %124, 0
  br i1 %tobool656, label %if.end658, label %if.then657

if.then657:                                       ; preds = %if.end655
  tail call void @try_drop(i32 11) #3
  br label %if.end658

if.end658:                                        ; preds = %if.end655, %if.then657
  %125 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 7), align 4, !tbaa !0
  %tobool659 = icmp eq i32 %125, 0
  br i1 %tobool659, label %if.end661, label %if.then660

if.then660:                                       ; preds = %if.end658
  tail call void @try_drop(i32 7) #3
  br label %if.end661

if.end661:                                        ; preds = %if.end658, %if.then660
  %126 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 9), align 4, !tbaa !0
  %tobool662 = icmp eq i32 %126, 0
  br i1 %tobool662, label %for.inc666, label %if.then663

if.then663:                                       ; preds = %if.end661
  tail call void @try_drop(i32 9) #3
  br label %for.inc666

for.inc666:                                       ; preds = %if.end661, %for.body635, %if.then663, %sw.bb638
  %from.1 = phi i32 [ %from.0960, %for.body635 ], [ %from.0960, %if.then663 ], [ %from.0960, %if.end661 ], [ %add639, %sw.bb638 ]
  %inc667 = add nsw i32 %from.1, 1
  %cmp634 = icmp slt i32 %inc667, 118
  br i1 %cmp634, label %for.body635, label %if.end720

land.lhs.true671:                                 ; preds = %if.then620
  %127 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 2), align 4, !tbaa !0
  %128 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 4), align 4, !tbaa !0
  %129 = or i32 %128, %127
  %130 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 12), align 4, !tbaa !0
  %131 = or i32 %129, %130
  %132 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 10), align 4, !tbaa !0
  %133 = or i32 %131, %132
  %134 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 8), align 4, !tbaa !0
  %135 = or i32 %133, %134
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %if.end720, label %for.body684

for.body684:                                      ; preds = %for.inc715, %land.lhs.true671
  %from.2962 = phi i32 [ 26, %land.lhs.true671 ], [ %inc716, %for.inc715 ]
  store i32 %from.2962, i32* @gfrom, align 4, !tbaa !0
  %idxprom685 = sext i32 %from.2962 to i64
  %arrayidx686 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom685
  %137 = load i32* %arrayidx686, align 4, !tbaa !0
  switch i32 %137, label %for.inc715 [
    i32 0, label %sw.bb687
    i32 13, label %sw.bb689
  ]

sw.bb687:                                         ; preds = %for.body684
  %add688 = add nsw i32 %from.2962, 3
  br label %for.inc715

sw.bb689:                                         ; preds = %for.body684
  %138 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 2), align 4, !tbaa !0
  %tobool690 = icmp eq i32 %138, 0
  br i1 %tobool690, label %if.end701, label %if.then691

if.then691:                                       ; preds = %sw.bb689
  %arrayidx693 = getelementptr inbounds [144 x i32]* @Xrank, i64 0, i64 %idxprom685
  %139 = load i32* %arrayidx693, align 4, !tbaa !0
  switch i32 %139, label %if.then699 [
    i32 8, label %if.end701
    i32 1, label %if.end701
  ]

if.then699:                                       ; preds = %if.then691
  tail call void @try_drop(i32 2) #3
  br label %if.end701

if.end701:                                        ; preds = %if.then691, %if.then691, %sw.bb689, %if.then699
  %140 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 4), align 4, !tbaa !0
  %tobool702 = icmp eq i32 %140, 0
  br i1 %tobool702, label %if.end704, label %if.then703

if.then703:                                       ; preds = %if.end701
  tail call void @try_drop(i32 4) #3
  br label %if.end704

if.end704:                                        ; preds = %if.end701, %if.then703
  %141 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 12), align 4, !tbaa !0
  %tobool705 = icmp eq i32 %141, 0
  br i1 %tobool705, label %if.end707, label %if.then706

if.then706:                                       ; preds = %if.end704
  tail call void @try_drop(i32 12) #3
  br label %if.end707

if.end707:                                        ; preds = %if.end704, %if.then706
  %142 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 8), align 4, !tbaa !0
  %tobool708 = icmp eq i32 %142, 0
  br i1 %tobool708, label %if.end710, label %if.then709

if.then709:                                       ; preds = %if.end707
  tail call void @try_drop(i32 8) #3
  br label %if.end710

if.end710:                                        ; preds = %if.end707, %if.then709
  %143 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 10), align 4, !tbaa !0
  %tobool711 = icmp eq i32 %143, 0
  br i1 %tobool711, label %for.inc715, label %if.then712

if.then712:                                       ; preds = %if.end710
  tail call void @try_drop(i32 10) #3
  br label %for.inc715

for.inc715:                                       ; preds = %if.end710, %for.body684, %if.then712, %sw.bb687
  %from.3 = phi i32 [ %from.2962, %for.body684 ], [ %from.2962, %if.then712 ], [ %from.2962, %if.end710 ], [ %add688, %sw.bb687 ]
  %inc716 = add nsw i32 %from.3, 1
  %cmp683 = icmp slt i32 %inc716, 118
  br i1 %cmp683, label %for.body684, label %if.end720

if.end720:                                        ; preds = %for.inc715, %for.inc666, %land.lhs.true671, %land.lhs.true622, %if.end612
  %144 = load i32* @Variant, align 4, !tbaa !0
  %cmp721 = icmp eq i32 %144, 3
  %145 = load i32* @fcaptures, align 4, !tbaa !1
  %cmp723 = icmp eq i32 %145, 1
  %or.cond765 = and i1 %cmp721, %cmp723
  %146 = load i32* @captures, align 4, !tbaa !1
  %cmp725 = icmp eq i32 %146, 0
  %or.cond766 = and i1 %or.cond765, %cmp725
  br i1 %or.cond766, label %if.then726, label %if.end727

if.then726:                                       ; preds = %if.end720
  store i32 1, i32* @captures, align 4, !tbaa !1
  store i32 0, i32* @numb_moves, align 4, !tbaa !0
  br label %restart

if.end727:                                        ; preds = %if.end720
  br i1 %cmp721, label %if.then729, label %if.end730

if.then729:                                       ; preds = %if.end727
  store i32 0, i32* @kingcap, align 4, !tbaa !0
  br label %if.end730

if.end730:                                        ; preds = %if.then729, %if.end727
  ret void
}
