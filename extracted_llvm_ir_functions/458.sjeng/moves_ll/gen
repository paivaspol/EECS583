define void @gen(%struct.move_s* %moves) #0 {
  tail call void @llvm.dbg.value(metadata %struct.move_s* %moves, i64 0, metadata !37, metadata !145), !dbg !765
  store i32 0, i32* @kingcap, align 4, !dbg !766, !tbaa !163
  store i32 0, i32* @numb_moves, align 4, !dbg !767, !tbaa !163
  store %struct.move_s* %moves, %struct.move_s** @genfor, align 8, !dbg !768, !tbaa !769
  %1 = load i32* @Variant, align 4, !dbg !771, !tbaa !163
  %2 = icmp eq i32 %1, 3, !dbg !773
  br i1 %2, label %3, label %.preheader86, !dbg !774

; <label>:3                                       ; preds = %0
  store i32 0, i32* @captures, align 4, !dbg !775, !tbaa !777
  store i32 0, i32* @fcaptures, align 4, !dbg !778, !tbaa !777
  br label %.preheader86, !dbg !779

.preheader86:                                     ; preds = %0, %3, %669
  %4 = phi i32 [ 3, %669 ], [ %1, %0 ], [ 3, %3 ]
  %5 = load i32* @white_to_move, align 4, !dbg !780, !tbaa !163
  %6 = icmp eq i32 %5, 0, !dbg !780
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !39, metadata !145), !dbg !782
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !40, metadata !145), !dbg !783
  %7 = load i32* @piece_count, align 4, !dbg !784, !tbaa !163
  %8 = icmp slt i32 %7, 1, !dbg !788
  br i1 %6, label %.preheader83, label %.preheader84, !dbg !789

.preheader84:                                     ; preds = %.preheader86
  br i1 %8, label %.critedge, label %.lr.ph, !dbg !790

.preheader83:                                     ; preds = %.preheader86
  br i1 %8, label %.critedge, label %.lr.ph93, !dbg !794

.lr.ph:                                           ; preds = %.preheader84, %._crit_edge
  %9 = phi i32 [ %.pre, %._crit_edge ], [ %4, %.preheader84 ], !dbg !795
  %indvars.iv = phi i64 [ %indvars.iv.next, %._crit_edge ], [ 1, %.preheader84 ]
  %a.087 = phi i32 [ %a.1, %._crit_edge ], [ 1, %.preheader84 ]
  %10 = icmp eq i32 %9, 3, !dbg !796
  %11 = load i32* @kingcap, align 4
  %12 = icmp ne i32 %11, 0, !dbg !797
  %or.cond = or i1 %10, %12, !dbg !798
  br i1 %or.cond, label %13, label %.critedge2, !dbg !798

; <label>:13                                      ; preds = %.lr.ph
  br i1 %10, label %14, label %.critedge, !dbg !799

; <label>:14                                      ; preds = %13
  %15 = load i32* @fcaptures, align 4, !dbg !800, !tbaa !777
  %16 = load i32* @captures, align 4, !dbg !801, !tbaa !777
  %17 = icmp eq i32 %15, %16, !dbg !802
  br i1 %17, label %.critedge2, label %.critedge, !dbg !803

.critedge2:                                       ; preds = %.lr.ph, %14
  %18 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %indvars.iv, !dbg !804
  %19 = load i32* %18, align 4, !dbg !804, !tbaa !163
  tail call void @llvm.dbg.value(metadata i32 %19, i64 0, metadata !41, metadata !145), !dbg !806
  %20 = icmp eq i32 %19, 0, !dbg !807
  br i1 %20, label %287, label %21, !dbg !809

; <label>:21                                      ; preds = %.critedge2
  %22 = add nsw i32 %a.087, 1, !dbg !810
  tail call void @llvm.dbg.value(metadata i32 %22, i64 0, metadata !39, metadata !145), !dbg !782
  tail call void @llvm.dbg.value(metadata i32 %19, i64 0, metadata !38, metadata !145), !dbg !811
  store i32 %19, i32* @gfrom, align 4, !dbg !812, !tbaa !163
  %23 = sext i32 %19 to i64, !dbg !813
  %24 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %23, !dbg !813
  %25 = load i32* %24, align 4, !dbg !813, !tbaa !163
  switch i32 %25, label %287 [
    i32 1, label %26
    i32 3, label %75
    i32 11, label %131
    i32 7, label %159
    i32 9, label %187
    i32 5, label %243
  ], !dbg !814

; <label>:26                                      ; preds = %21
  %27 = add nsw i32 %19, 12, !dbg !815
  %28 = sext i32 %27 to i64, !dbg !818
  %29 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %28, !dbg !818
  %30 = load i32* %29, align 4, !dbg !818, !tbaa !163
  %31 = icmp eq i32 %30, 13, !dbg !819
  br i1 %31, label %32, label %50, !dbg !820

; <label>:32                                      ; preds = %26
  %33 = getelementptr inbounds [144 x i32]* @Xrank, i64 0, i64 %23, !dbg !821
  %34 = load i32* %33, align 4, !dbg !821, !tbaa !163
  %35 = icmp eq i32 %34, 7, !dbg !824
  %.off75 = add i32 %9, -3, !dbg !825
  %.cmp76 = icmp ugt i32 %.off75, 1, !dbg !825
  %36 = and i1 %35, %.cmp76, !dbg !825
  br i1 %36, label %37, label %38, !dbg !825

; <label>:37                                      ; preds = %32
  tail call void @push_pawn(i32 %27, i32 0) #5, !dbg !826
  br label %50, !dbg !828

; <label>:38                                      ; preds = %32
  %39 = load i32* @captures, align 4, !dbg !829, !tbaa !777
  %40 = icmp eq i32 %39, 0, !dbg !829
  br i1 %40, label %41, label %50, !dbg !831

; <label>:41                                      ; preds = %38
  tail call void @push_pawn(i32 %27, i32 0) #5, !dbg !832
  %42 = icmp eq i32 %34, 2, !dbg !834
  br i1 %42, label %43, label %50, !dbg !836

; <label>:43                                      ; preds = %41
  %44 = add nsw i32 %19, 24, !dbg !837
  %45 = sext i32 %44 to i64, !dbg !838
  %46 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %45, !dbg !838
  %47 = load i32* %46, align 4, !dbg !838, !tbaa !163
  %48 = icmp eq i32 %47, 13, !dbg !839
  br i1 %48, label %49, label %50, !dbg !840

; <label>:49                                      ; preds = %43
  tail call void @llvm.dbg.value(metadata i32 %44, i64 0, metadata !110, metadata !145) #6, !dbg !841
  tail call void @add_move(i32 %44, i32 0) #4, !dbg !843
  br label %50, !dbg !844

; <label>:50                                      ; preds = %38, %37, %41, %43, %49, %26
  %51 = add nsw i32 %19, 13, !dbg !845
  %52 = sext i32 %51 to i64, !dbg !847
  %53 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %52, !dbg !847
  %54 = load i32* %53, align 4, !dbg !847, !tbaa !163
  %55 = and i32 %54, 1, !dbg !848
  %56 = icmp ne i32 %55, 0, !dbg !849
  %57 = icmp eq i32 %54, 0, !dbg !850
  %or.cond77 = or i1 %57, %56, !dbg !851
  br i1 %or.cond77, label %59, label %58, !dbg !851

; <label>:58                                      ; preds = %50
  tail call void @push_pawn(i32 %51, i32 0) #5, !dbg !852
  br label %59, !dbg !852

; <label>:59                                      ; preds = %50, %58
  %60 = add nsw i32 %19, 11, !dbg !853
  %61 = sext i32 %60 to i64, !dbg !855
  %62 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %61, !dbg !855
  %63 = load i32* %62, align 4, !dbg !855, !tbaa !163
  %64 = and i32 %63, 1, !dbg !856
  %65 = icmp ne i32 %64, 0, !dbg !857
  %66 = icmp eq i32 %63, 0, !dbg !858
  %or.cond78 = or i1 %66, %65, !dbg !859
  br i1 %or.cond78, label %68, label %67, !dbg !859

; <label>:67                                      ; preds = %59
  tail call void @push_pawn(i32 %60, i32 0) #5, !dbg !860
  br label %68, !dbg !860

; <label>:68                                      ; preds = %59, %67
  %69 = load i32* @ep_square, align 4, !dbg !861, !tbaa !163
  %70 = icmp eq i32 %69, %51, !dbg !863
  br i1 %70, label %71, label %72, !dbg !864

; <label>:71                                      ; preds = %68
  tail call void @push_pawn(i32 %51, i32 1) #5, !dbg !865
  br label %287, !dbg !865

; <label>:72                                      ; preds = %68
  %73 = icmp eq i32 %69, %60, !dbg !866
  br i1 %73, label %74, label %287, !dbg !868

; <label>:74                                      ; preds = %72
  tail call void @push_pawn(i32 %60, i32 1) #5, !dbg !869
  br label %287, !dbg !869

; <label>:75                                      ; preds = %21
  %76 = add nsw i32 %19, -25, !dbg !870
  %77 = sext i32 %76 to i64, !dbg !870
  %78 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %77, !dbg !870
  %79 = load i32* %78, align 4, !dbg !870, !tbaa !163
  %80 = icmp eq i32 %79, 0, !dbg !870
  br i1 %80, label %82, label %81, !dbg !872

; <label>:81                                      ; preds = %75
  tail call void @push_knighT(i32 %76) #5, !dbg !870
  br label %82, !dbg !870

; <label>:82                                      ; preds = %75, %81
  %83 = add nsw i32 %19, -23, !dbg !873
  %84 = sext i32 %83 to i64, !dbg !873
  %85 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %84, !dbg !873
  %86 = load i32* %85, align 4, !dbg !873, !tbaa !163
  %87 = icmp eq i32 %86, 0, !dbg !873
  br i1 %87, label %89, label %88, !dbg !875

; <label>:88                                      ; preds = %82
  tail call void @push_knighT(i32 %83) #5, !dbg !873
  br label %89, !dbg !873

; <label>:89                                      ; preds = %82, %88
  %90 = add nsw i32 %19, -14, !dbg !876
  %91 = sext i32 %90 to i64, !dbg !876
  %92 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %91, !dbg !876
  %93 = load i32* %92, align 4, !dbg !876, !tbaa !163
  %94 = icmp eq i32 %93, 0, !dbg !876
  br i1 %94, label %96, label %95, !dbg !878

; <label>:95                                      ; preds = %89
  tail call void @push_knighT(i32 %90) #5, !dbg !876
  br label %96, !dbg !876

; <label>:96                                      ; preds = %89, %95
  %97 = add nsw i32 %19, -10, !dbg !879
  %98 = sext i32 %97 to i64, !dbg !879
  %99 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %98, !dbg !879
  %100 = load i32* %99, align 4, !dbg !879, !tbaa !163
  %101 = icmp eq i32 %100, 0, !dbg !879
  br i1 %101, label %103, label %102, !dbg !881

; <label>:102                                     ; preds = %96
  tail call void @push_knighT(i32 %97) #5, !dbg !879
  br label %103, !dbg !879

; <label>:103                                     ; preds = %96, %102
  %104 = add nsw i32 %19, 10, !dbg !882
  %105 = sext i32 %104 to i64, !dbg !882
  %106 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %105, !dbg !882
  %107 = load i32* %106, align 4, !dbg !882, !tbaa !163
  %108 = icmp eq i32 %107, 0, !dbg !882
  br i1 %108, label %110, label %109, !dbg !884

; <label>:109                                     ; preds = %103
  tail call void @push_knighT(i32 %104) #5, !dbg !882
  br label %110, !dbg !882

; <label>:110                                     ; preds = %103, %109
  %111 = add nsw i32 %19, 14, !dbg !885
  %112 = sext i32 %111 to i64, !dbg !885
  %113 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %112, !dbg !885
  %114 = load i32* %113, align 4, !dbg !885, !tbaa !163
  %115 = icmp eq i32 %114, 0, !dbg !885
  br i1 %115, label %117, label %116, !dbg !887

; <label>:116                                     ; preds = %110
  tail call void @push_knighT(i32 %111) #5, !dbg !885
  br label %117, !dbg !885

; <label>:117                                     ; preds = %110, %116
  %118 = add nsw i32 %19, 23, !dbg !888
  %119 = sext i32 %118 to i64, !dbg !888
  %120 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %119, !dbg !888
  %121 = load i32* %120, align 4, !dbg !888, !tbaa !163
  %122 = icmp eq i32 %121, 0, !dbg !888
  br i1 %122, label %124, label %123, !dbg !890

; <label>:123                                     ; preds = %117
  tail call void @push_knighT(i32 %118) #5, !dbg !888
  br label %124, !dbg !888

; <label>:124                                     ; preds = %117, %123
  %125 = add nsw i32 %19, 25, !dbg !891
  %126 = sext i32 %125 to i64, !dbg !891
  %127 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %126, !dbg !891
  %128 = load i32* %127, align 4, !dbg !891, !tbaa !163
  %129 = icmp eq i32 %128, 0, !dbg !891
  br i1 %129, label %287, label %130, !dbg !893

; <label>:130                                     ; preds = %124
  tail call void @push_knighT(i32 %125) #5, !dbg !891
  br label %287, !dbg !891

; <label>:131                                     ; preds = %21
  %132 = add nsw i32 %19, -13, !dbg !894
  %133 = sext i32 %132 to i64, !dbg !894
  %134 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %133, !dbg !894
  %135 = load i32* %134, align 4, !dbg !894, !tbaa !163
  %136 = icmp eq i32 %135, 0, !dbg !894
  br i1 %136, label %138, label %137, !dbg !896

; <label>:137                                     ; preds = %131
  tail call void @push_slidE(i32 %132) #5, !dbg !894
  br label %138, !dbg !894

; <label>:138                                     ; preds = %131, %137
  %139 = add nsw i32 %19, -11, !dbg !897
  %140 = sext i32 %139 to i64, !dbg !897
  %141 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %140, !dbg !897
  %142 = load i32* %141, align 4, !dbg !897, !tbaa !163
  %143 = icmp eq i32 %142, 0, !dbg !897
  br i1 %143, label %145, label %144, !dbg !899

; <label>:144                                     ; preds = %138
  tail call void @push_slidE(i32 %139) #5, !dbg !897
  br label %145, !dbg !897

; <label>:145                                     ; preds = %138, %144
  %146 = add nsw i32 %19, 11, !dbg !900
  %147 = sext i32 %146 to i64, !dbg !900
  %148 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %147, !dbg !900
  %149 = load i32* %148, align 4, !dbg !900, !tbaa !163
  %150 = icmp eq i32 %149, 0, !dbg !900
  br i1 %150, label %152, label %151, !dbg !902

; <label>:151                                     ; preds = %145
  tail call void @push_slidE(i32 %146) #5, !dbg !900
  br label %152, !dbg !900

; <label>:152                                     ; preds = %145, %151
  %153 = add nsw i32 %19, 13, !dbg !903
  %154 = sext i32 %153 to i64, !dbg !903
  %155 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %154, !dbg !903
  %156 = load i32* %155, align 4, !dbg !903, !tbaa !163
  %157 = icmp eq i32 %156, 0, !dbg !903
  br i1 %157, label %287, label %158, !dbg !905

; <label>:158                                     ; preds = %152
  tail call void @push_slidE(i32 %153) #5, !dbg !903
  br label %287, !dbg !903

; <label>:159                                     ; preds = %21
  %160 = add nsw i32 %19, -12, !dbg !906
  %161 = sext i32 %160 to i64, !dbg !906
  %162 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %161, !dbg !906
  %163 = load i32* %162, align 4, !dbg !906, !tbaa !163
  %164 = icmp eq i32 %163, 0, !dbg !906
  br i1 %164, label %166, label %165, !dbg !908

; <label>:165                                     ; preds = %159
  tail call void @push_slidE(i32 %160) #5, !dbg !906
  br label %166, !dbg !906

; <label>:166                                     ; preds = %159, %165
  %167 = add nsw i32 %19, -1, !dbg !909
  %168 = sext i32 %167 to i64, !dbg !909
  %169 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %168, !dbg !909
  %170 = load i32* %169, align 4, !dbg !909, !tbaa !163
  %171 = icmp eq i32 %170, 0, !dbg !909
  br i1 %171, label %173, label %172, !dbg !911

; <label>:172                                     ; preds = %166
  tail call void @push_slidE(i32 %167) #5, !dbg !909
  br label %173, !dbg !909

; <label>:173                                     ; preds = %166, %172
  %174 = add nsw i32 %19, 1, !dbg !912
  %175 = sext i32 %174 to i64, !dbg !912
  %176 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %175, !dbg !912
  %177 = load i32* %176, align 4, !dbg !912, !tbaa !163
  %178 = icmp eq i32 %177, 0, !dbg !912
  br i1 %178, label %180, label %179, !dbg !914

; <label>:179                                     ; preds = %173
  tail call void @push_slidE(i32 %174) #5, !dbg !912
  br label %180, !dbg !912

; <label>:180                                     ; preds = %173, %179
  %181 = add nsw i32 %19, 12, !dbg !915
  %182 = sext i32 %181 to i64, !dbg !915
  %183 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %182, !dbg !915
  %184 = load i32* %183, align 4, !dbg !915, !tbaa !163
  %185 = icmp eq i32 %184, 0, !dbg !915
  br i1 %185, label %287, label %186, !dbg !917

; <label>:186                                     ; preds = %180
  tail call void @push_slidE(i32 %181) #5, !dbg !915
  br label %287, !dbg !915

; <label>:187                                     ; preds = %21
  %188 = add nsw i32 %19, -13, !dbg !918
  %189 = sext i32 %188 to i64, !dbg !918
  %190 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %189, !dbg !918
  %191 = load i32* %190, align 4, !dbg !918, !tbaa !163
  %192 = icmp eq i32 %191, 0, !dbg !918
  br i1 %192, label %194, label %193, !dbg !920

; <label>:193                                     ; preds = %187
  tail call void @push_slidE(i32 %188) #5, !dbg !918
  br label %194, !dbg !918

; <label>:194                                     ; preds = %187, %193
  %195 = add nsw i32 %19, -12, !dbg !921
  %196 = sext i32 %195 to i64, !dbg !921
  %197 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %196, !dbg !921
  %198 = load i32* %197, align 4, !dbg !921, !tbaa !163
  %199 = icmp eq i32 %198, 0, !dbg !921
  br i1 %199, label %201, label %200, !dbg !923

; <label>:200                                     ; preds = %194
  tail call void @push_slidE(i32 %195) #5, !dbg !921
  br label %201, !dbg !921

; <label>:201                                     ; preds = %194, %200
  %202 = add nsw i32 %19, -11, !dbg !924
  %203 = sext i32 %202 to i64, !dbg !924
  %204 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %203, !dbg !924
  %205 = load i32* %204, align 4, !dbg !924, !tbaa !163
  %206 = icmp eq i32 %205, 0, !dbg !924
  br i1 %206, label %208, label %207, !dbg !926

; <label>:207                                     ; preds = %201
  tail call void @push_slidE(i32 %202) #5, !dbg !924
  br label %208, !dbg !924

; <label>:208                                     ; preds = %201, %207
  %209 = add nsw i32 %19, -1, !dbg !927
  %210 = sext i32 %209 to i64, !dbg !927
  %211 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %210, !dbg !927
  %212 = load i32* %211, align 4, !dbg !927, !tbaa !163
  %213 = icmp eq i32 %212, 0, !dbg !927
  br i1 %213, label %215, label %214, !dbg !929

; <label>:214                                     ; preds = %208
  tail call void @push_slidE(i32 %209) #5, !dbg !927
  br label %215, !dbg !927

; <label>:215                                     ; preds = %208, %214
  %216 = add nsw i32 %19, 1, !dbg !930
  %217 = sext i32 %216 to i64, !dbg !930
  %218 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %217, !dbg !930
  %219 = load i32* %218, align 4, !dbg !930, !tbaa !163
  %220 = icmp eq i32 %219, 0, !dbg !930
  br i1 %220, label %222, label %221, !dbg !932

; <label>:221                                     ; preds = %215
  tail call void @push_slidE(i32 %216) #5, !dbg !930
  br label %222, !dbg !930

; <label>:222                                     ; preds = %215, %221
  %223 = add nsw i32 %19, 11, !dbg !933
  %224 = sext i32 %223 to i64, !dbg !933
  %225 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %224, !dbg !933
  %226 = load i32* %225, align 4, !dbg !933, !tbaa !163
  %227 = icmp eq i32 %226, 0, !dbg !933
  br i1 %227, label %229, label %228, !dbg !935

; <label>:228                                     ; preds = %222
  tail call void @push_slidE(i32 %223) #5, !dbg !933
  br label %229, !dbg !933

; <label>:229                                     ; preds = %222, %228
  %230 = add nsw i32 %19, 12, !dbg !936
  %231 = sext i32 %230 to i64, !dbg !936
  %232 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %231, !dbg !936
  %233 = load i32* %232, align 4, !dbg !936, !tbaa !163
  %234 = icmp eq i32 %233, 0, !dbg !936
  br i1 %234, label %236, label %235, !dbg !938

; <label>:235                                     ; preds = %229
  tail call void @push_slidE(i32 %230) #5, !dbg !936
  br label %236, !dbg !936

; <label>:236                                     ; preds = %229, %235
  %237 = add nsw i32 %19, 13, !dbg !939
  %238 = sext i32 %237 to i64, !dbg !939
  %239 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %238, !dbg !939
  %240 = load i32* %239, align 4, !dbg !939, !tbaa !163
  %241 = icmp eq i32 %240, 0, !dbg !939
  br i1 %241, label %287, label %242, !dbg !941

; <label>:242                                     ; preds = %236
  tail call void @push_slidE(i32 %237) #5, !dbg !939
  br label %287, !dbg !939

; <label>:243                                     ; preds = %21
  %244 = add nsw i32 %19, -13, !dbg !942
  tail call void @push_king(i32 %244) #5, !dbg !943
  %245 = add nsw i32 %19, -12, !dbg !944
  tail call void @push_king(i32 %245) #5, !dbg !945
  %246 = add nsw i32 %19, -11, !dbg !946
  tail call void @push_king(i32 %246) #5, !dbg !947
  %247 = add nsw i32 %19, -1, !dbg !948
  tail call void @push_king(i32 %247) #5, !dbg !949
  %248 = add nsw i32 %19, 1, !dbg !950
  tail call void @push_king(i32 %248) #5, !dbg !951
  %249 = add nsw i32 %19, 11, !dbg !952
  tail call void @push_king(i32 %249) #5, !dbg !953
  %250 = add nsw i32 %19, 12, !dbg !954
  tail call void @push_king(i32 %250) #5, !dbg !955
  %251 = add nsw i32 %19, 13, !dbg !956
  tail call void @push_king(i32 %251) #5, !dbg !957
  %252 = icmp ne i32 %19, 30, !dbg !958
  %253 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 30), align 4
  %254 = load i32* @captures, align 4
  %255 = or i32 %254, %253, !dbg !960
  %256 = icmp ne i32 %255, 0, !dbg !960
  %257 = or i1 %252, %256, !dbg !960
  br i1 %257, label %287, label %258, !dbg !960

; <label>:258                                     ; preds = %243
  %259 = load i32* @Variant, align 4, !dbg !961, !tbaa !163
  %260 = icmp ne i32 %259, 3, !dbg !962
  %261 = load i32* @Giveaway, align 4
  %262 = icmp eq i32 %261, 1, !dbg !963
  %or.cond13 = or i1 %260, %262, !dbg !964
  br i1 %or.cond13, label %263, label %287, !dbg !964

; <label>:263                                     ; preds = %258
  %264 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 33), align 4, !dbg !965, !tbaa !163
  %265 = icmp eq i32 %264, 0, !dbg !965
  %266 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 33), align 4
  %267 = icmp eq i32 %266, 7, !dbg !968
  %or.cond15 = and i1 %265, %267, !dbg !969
  br i1 %or.cond15, label %268, label %274, !dbg !969

; <label>:268                                     ; preds = %263
  %269 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 31), align 4, !dbg !970, !tbaa !163
  %270 = icmp eq i32 %269, 13, !dbg !972
  %271 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 32), align 4
  %272 = icmp eq i32 %271, 13, !dbg !973
  %or.cond17 = and i1 %270, %272, !dbg !974
  br i1 %or.cond17, label %273, label %274, !dbg !974

; <label>:273                                     ; preds = %268
  tail call void @push_king_castle(i32 32, i32 1) #5, !dbg !975
  br label %274, !dbg !975

; <label>:274                                     ; preds = %268, %273, %263
  %275 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 26), align 4, !dbg !976, !tbaa !163
  %276 = icmp eq i32 %275, 0, !dbg !976
  %277 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 26), align 4
  %278 = icmp eq i32 %277, 7, !dbg !978
  %or.cond19 = and i1 %276, %278, !dbg !979
  br i1 %or.cond19, label %279, label %287, !dbg !979

; <label>:279                                     ; preds = %274
  %280 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 27), align 4, !dbg !980, !tbaa !163
  %281 = icmp eq i32 %280, 13, !dbg !982
  %282 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 28), align 4
  %283 = icmp eq i32 %282, 13, !dbg !983
  %or.cond21 = and i1 %281, %283, !dbg !984
  %284 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 29), align 4
  %285 = icmp eq i32 %284, 13, !dbg !985
  %or.cond23 = and i1 %or.cond21, %285, !dbg !984
  br i1 %or.cond23, label %286, label %287, !dbg !984

; <label>:286                                     ; preds = %279
  tail call void @push_king_castle(i32 28, i32 2) #5, !dbg !986
  br label %287, !dbg !986

; <label>:287                                     ; preds = %124, %152, %180, %236, %.critedge2, %72, %74, %71, %130, %158, %186, %242, %274, %286, %279, %258, %243, %21
  %a.1 = phi i32 [ %22, %21 ], [ %22, %243 ], [ %22, %286 ], [ %22, %279 ], [ %22, %274 ], [ %22, %258 ], [ %22, %242 ], [ %22, %236 ], [ %22, %186 ], [ %22, %180 ], [ %22, %158 ], [ %22, %152 ], [ %22, %130 ], [ %22, %124 ], [ %22, %71 ], [ %22, %74 ], [ %22, %72 ], [ %a.087, %.critedge2 ]
  %288 = load i32* @piece_count, align 4, !dbg !987, !tbaa !163
  %289 = icmp sgt i32 %a.1, %288, !dbg !988
  br i1 %289, label %.critedge, label %._crit_edge, !dbg !790

._crit_edge:                                      ; preds = %287
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !790
  %.pre = load i32* @Variant, align 4, !dbg !795, !tbaa !163
  br label %.lr.ph, !dbg !790

.lr.ph93:                                         ; preds = %.preheader83, %._crit_edge100
  %290 = phi i32 [ %.pre101, %._crit_edge100 ], [ %4, %.preheader83 ], !dbg !989
  %indvars.iv98 = phi i64 [ %indvars.iv.next99, %._crit_edge100 ], [ 1, %.preheader83 ]
  %a.291 = phi i32 [ %a.3, %._crit_edge100 ], [ 1, %.preheader83 ]
  %291 = icmp eq i32 %290, 3, !dbg !990
  %292 = load i32* @kingcap, align 4
  %293 = icmp ne i32 %292, 0, !dbg !991
  %or.cond25 = or i1 %291, %293, !dbg !992
  br i1 %or.cond25, label %294, label %.critedge27, !dbg !992

; <label>:294                                     ; preds = %.lr.ph93
  br i1 %291, label %295, label %.critedge, !dbg !993

; <label>:295                                     ; preds = %294
  %296 = load i32* @fcaptures, align 4, !dbg !994, !tbaa !777
  %297 = load i32* @captures, align 4, !dbg !995, !tbaa !777
  %298 = icmp eq i32 %296, %297, !dbg !996
  br i1 %298, label %.critedge27, label %.critedge, !dbg !997

.critedge27:                                      ; preds = %.lr.ph93, %295
  %299 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %indvars.iv98, !dbg !998
  %300 = load i32* %299, align 4, !dbg !998, !tbaa !163
  tail call void @llvm.dbg.value(metadata i32 %300, i64 0, metadata !41, metadata !145), !dbg !806
  %301 = icmp eq i32 %300, 0, !dbg !1000
  br i1 %301, label %568, label %302, !dbg !1002

; <label>:302                                     ; preds = %.critedge27
  %303 = add nsw i32 %a.291, 1, !dbg !1003
  tail call void @llvm.dbg.value(metadata i32 %303, i64 0, metadata !39, metadata !145), !dbg !782
  tail call void @llvm.dbg.value(metadata i32 %300, i64 0, metadata !38, metadata !145), !dbg !811
  store i32 %300, i32* @gfrom, align 4, !dbg !1004, !tbaa !163
  %304 = sext i32 %300 to i64, !dbg !1005
  %305 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %304, !dbg !1005
  %306 = load i32* %305, align 4, !dbg !1005, !tbaa !163
  switch i32 %306, label %568 [
    i32 2, label %307
    i32 4, label %356
    i32 12, label %412
    i32 8, label %440
    i32 10, label %468
    i32 6, label %524
  ], !dbg !1006

; <label>:307                                     ; preds = %302
  %308 = add nsw i32 %300, -12, !dbg !1007
  %309 = sext i32 %308 to i64, !dbg !1010
  %310 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %309, !dbg !1010
  %311 = load i32* %310, align 4, !dbg !1010, !tbaa !163
  %312 = icmp eq i32 %311, 13, !dbg !1011
  br i1 %312, label %313, label %331, !dbg !1012

; <label>:313                                     ; preds = %307
  %314 = getelementptr inbounds [144 x i32]* @Xrank, i64 0, i64 %304, !dbg !1013
  %315 = load i32* %314, align 4, !dbg !1013, !tbaa !163
  %316 = icmp eq i32 %315, 2, !dbg !1016
  %.off = add i32 %290, -3, !dbg !1017
  %.cmp = icmp ugt i32 %.off, 1, !dbg !1017
  %317 = and i1 %316, %.cmp, !dbg !1017
  br i1 %317, label %318, label %319, !dbg !1017

; <label>:318                                     ; preds = %313
  tail call void @push_pawn(i32 %308, i32 0) #5, !dbg !1018
  br label %331, !dbg !1020

; <label>:319                                     ; preds = %313
  %320 = load i32* @captures, align 4, !dbg !1021, !tbaa !777
  %321 = icmp eq i32 %320, 0, !dbg !1021
  br i1 %321, label %322, label %331, !dbg !1023

; <label>:322                                     ; preds = %319
  tail call void @push_pawn(i32 %308, i32 0) #5, !dbg !1024
  %323 = icmp eq i32 %315, 7, !dbg !1026
  br i1 %323, label %324, label %331, !dbg !1028

; <label>:324                                     ; preds = %322
  %325 = add nsw i32 %300, -24, !dbg !1029
  %326 = sext i32 %325 to i64, !dbg !1030
  %327 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %326, !dbg !1030
  %328 = load i32* %327, align 4, !dbg !1030, !tbaa !163
  %329 = icmp eq i32 %328, 13, !dbg !1031
  br i1 %329, label %330, label %331, !dbg !1032

; <label>:330                                     ; preds = %324
  tail call void @llvm.dbg.value(metadata i32 %325, i64 0, metadata !110, metadata !145) #6, !dbg !1033
  tail call void @add_move(i32 %325, i32 0) #4, !dbg !1035
  br label %331, !dbg !1036

; <label>:331                                     ; preds = %319, %318, %322, %324, %330, %307
  %332 = add nsw i32 %300, -13, !dbg !1037
  %333 = sext i32 %332 to i64, !dbg !1039
  %334 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %333, !dbg !1039
  %335 = load i32* %334, align 4, !dbg !1039, !tbaa !163
  %336 = and i32 %335, 1, !dbg !1040
  %337 = icmp eq i32 %336, 0, !dbg !1041
  %338 = icmp eq i32 %335, 13, !dbg !1042
  %or.cond79 = or i1 %338, %337, !dbg !1043
  br i1 %or.cond79, label %340, label %339, !dbg !1043

; <label>:339                                     ; preds = %331
  tail call void @push_pawn(i32 %332, i32 0) #5, !dbg !1044
  br label %340, !dbg !1044

; <label>:340                                     ; preds = %331, %339
  %341 = add nsw i32 %300, -11, !dbg !1045
  %342 = sext i32 %341 to i64, !dbg !1047
  %343 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %342, !dbg !1047
  %344 = load i32* %343, align 4, !dbg !1047, !tbaa !163
  %345 = and i32 %344, 1, !dbg !1048
  %346 = icmp eq i32 %345, 0, !dbg !1049
  %347 = icmp eq i32 %344, 13, !dbg !1050
  %or.cond80 = or i1 %347, %346, !dbg !1051
  br i1 %or.cond80, label %349, label %348, !dbg !1051

; <label>:348                                     ; preds = %340
  tail call void @push_pawn(i32 %341, i32 0) #5, !dbg !1052
  br label %349, !dbg !1052

; <label>:349                                     ; preds = %340, %348
  %350 = load i32* @ep_square, align 4, !dbg !1053, !tbaa !163
  %351 = icmp eq i32 %350, %332, !dbg !1055
  br i1 %351, label %352, label %353, !dbg !1056

; <label>:352                                     ; preds = %349
  tail call void @push_pawn(i32 %332, i32 1) #5, !dbg !1057
  br label %568, !dbg !1057

; <label>:353                                     ; preds = %349
  %354 = icmp eq i32 %350, %341, !dbg !1058
  br i1 %354, label %355, label %568, !dbg !1060

; <label>:355                                     ; preds = %353
  tail call void @push_pawn(i32 %341, i32 1) #5, !dbg !1061
  br label %568, !dbg !1061

; <label>:356                                     ; preds = %302
  %357 = add nsw i32 %300, -25, !dbg !1062
  %358 = sext i32 %357 to i64, !dbg !1062
  %359 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %358, !dbg !1062
  %360 = load i32* %359, align 4, !dbg !1062, !tbaa !163
  %361 = icmp eq i32 %360, 0, !dbg !1062
  br i1 %361, label %363, label %362, !dbg !1064

; <label>:362                                     ; preds = %356
  tail call void @push_knighT(i32 %357) #5, !dbg !1062
  br label %363, !dbg !1062

; <label>:363                                     ; preds = %356, %362
  %364 = add nsw i32 %300, -23, !dbg !1065
  %365 = sext i32 %364 to i64, !dbg !1065
  %366 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %365, !dbg !1065
  %367 = load i32* %366, align 4, !dbg !1065, !tbaa !163
  %368 = icmp eq i32 %367, 0, !dbg !1065
  br i1 %368, label %370, label %369, !dbg !1067

; <label>:369                                     ; preds = %363
  tail call void @push_knighT(i32 %364) #5, !dbg !1065
  br label %370, !dbg !1065

; <label>:370                                     ; preds = %363, %369
  %371 = add nsw i32 %300, -14, !dbg !1068
  %372 = sext i32 %371 to i64, !dbg !1068
  %373 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %372, !dbg !1068
  %374 = load i32* %373, align 4, !dbg !1068, !tbaa !163
  %375 = icmp eq i32 %374, 0, !dbg !1068
  br i1 %375, label %377, label %376, !dbg !1070

; <label>:376                                     ; preds = %370
  tail call void @push_knighT(i32 %371) #5, !dbg !1068
  br label %377, !dbg !1068

; <label>:377                                     ; preds = %370, %376
  %378 = add nsw i32 %300, -10, !dbg !1071
  %379 = sext i32 %378 to i64, !dbg !1071
  %380 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %379, !dbg !1071
  %381 = load i32* %380, align 4, !dbg !1071, !tbaa !163
  %382 = icmp eq i32 %381, 0, !dbg !1071
  br i1 %382, label %384, label %383, !dbg !1073

; <label>:383                                     ; preds = %377
  tail call void @push_knighT(i32 %378) #5, !dbg !1071
  br label %384, !dbg !1071

; <label>:384                                     ; preds = %377, %383
  %385 = add nsw i32 %300, 10, !dbg !1074
  %386 = sext i32 %385 to i64, !dbg !1074
  %387 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %386, !dbg !1074
  %388 = load i32* %387, align 4, !dbg !1074, !tbaa !163
  %389 = icmp eq i32 %388, 0, !dbg !1074
  br i1 %389, label %391, label %390, !dbg !1076

; <label>:390                                     ; preds = %384
  tail call void @push_knighT(i32 %385) #5, !dbg !1074
  br label %391, !dbg !1074

; <label>:391                                     ; preds = %384, %390
  %392 = add nsw i32 %300, 14, !dbg !1077
  %393 = sext i32 %392 to i64, !dbg !1077
  %394 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %393, !dbg !1077
  %395 = load i32* %394, align 4, !dbg !1077, !tbaa !163
  %396 = icmp eq i32 %395, 0, !dbg !1077
  br i1 %396, label %398, label %397, !dbg !1079

; <label>:397                                     ; preds = %391
  tail call void @push_knighT(i32 %392) #5, !dbg !1077
  br label %398, !dbg !1077

; <label>:398                                     ; preds = %391, %397
  %399 = add nsw i32 %300, 23, !dbg !1080
  %400 = sext i32 %399 to i64, !dbg !1080
  %401 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %400, !dbg !1080
  %402 = load i32* %401, align 4, !dbg !1080, !tbaa !163
  %403 = icmp eq i32 %402, 0, !dbg !1080
  br i1 %403, label %405, label %404, !dbg !1082

; <label>:404                                     ; preds = %398
  tail call void @push_knighT(i32 %399) #5, !dbg !1080
  br label %405, !dbg !1080

; <label>:405                                     ; preds = %398, %404
  %406 = add nsw i32 %300, 25, !dbg !1083
  %407 = sext i32 %406 to i64, !dbg !1083
  %408 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %407, !dbg !1083
  %409 = load i32* %408, align 4, !dbg !1083, !tbaa !163
  %410 = icmp eq i32 %409, 0, !dbg !1083
  br i1 %410, label %568, label %411, !dbg !1085

; <label>:411                                     ; preds = %405
  tail call void @push_knighT(i32 %406) #5, !dbg !1083
  br label %568, !dbg !1083

; <label>:412                                     ; preds = %302
  %413 = add nsw i32 %300, -13, !dbg !1086
  %414 = sext i32 %413 to i64, !dbg !1086
  %415 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %414, !dbg !1086
  %416 = load i32* %415, align 4, !dbg !1086, !tbaa !163
  %417 = icmp eq i32 %416, 0, !dbg !1086
  br i1 %417, label %419, label %418, !dbg !1088

; <label>:418                                     ; preds = %412
  tail call void @push_slidE(i32 %413) #5, !dbg !1086
  br label %419, !dbg !1086

; <label>:419                                     ; preds = %412, %418
  %420 = add nsw i32 %300, -11, !dbg !1089
  %421 = sext i32 %420 to i64, !dbg !1089
  %422 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %421, !dbg !1089
  %423 = load i32* %422, align 4, !dbg !1089, !tbaa !163
  %424 = icmp eq i32 %423, 0, !dbg !1089
  br i1 %424, label %426, label %425, !dbg !1091

; <label>:425                                     ; preds = %419
  tail call void @push_slidE(i32 %420) #5, !dbg !1089
  br label %426, !dbg !1089

; <label>:426                                     ; preds = %419, %425
  %427 = add nsw i32 %300, 11, !dbg !1092
  %428 = sext i32 %427 to i64, !dbg !1092
  %429 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %428, !dbg !1092
  %430 = load i32* %429, align 4, !dbg !1092, !tbaa !163
  %431 = icmp eq i32 %430, 0, !dbg !1092
  br i1 %431, label %433, label %432, !dbg !1094

; <label>:432                                     ; preds = %426
  tail call void @push_slidE(i32 %427) #5, !dbg !1092
  br label %433, !dbg !1092

; <label>:433                                     ; preds = %426, %432
  %434 = add nsw i32 %300, 13, !dbg !1095
  %435 = sext i32 %434 to i64, !dbg !1095
  %436 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %435, !dbg !1095
  %437 = load i32* %436, align 4, !dbg !1095, !tbaa !163
  %438 = icmp eq i32 %437, 0, !dbg !1095
  br i1 %438, label %568, label %439, !dbg !1097

; <label>:439                                     ; preds = %433
  tail call void @push_slidE(i32 %434) #5, !dbg !1095
  br label %568, !dbg !1095

; <label>:440                                     ; preds = %302
  %441 = add nsw i32 %300, -12, !dbg !1098
  %442 = sext i32 %441 to i64, !dbg !1098
  %443 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %442, !dbg !1098
  %444 = load i32* %443, align 4, !dbg !1098, !tbaa !163
  %445 = icmp eq i32 %444, 0, !dbg !1098
  br i1 %445, label %447, label %446, !dbg !1100

; <label>:446                                     ; preds = %440
  tail call void @push_slidE(i32 %441) #5, !dbg !1098
  br label %447, !dbg !1098

; <label>:447                                     ; preds = %440, %446
  %448 = add nsw i32 %300, -1, !dbg !1101
  %449 = sext i32 %448 to i64, !dbg !1101
  %450 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %449, !dbg !1101
  %451 = load i32* %450, align 4, !dbg !1101, !tbaa !163
  %452 = icmp eq i32 %451, 0, !dbg !1101
  br i1 %452, label %454, label %453, !dbg !1103

; <label>:453                                     ; preds = %447
  tail call void @push_slidE(i32 %448) #5, !dbg !1101
  br label %454, !dbg !1101

; <label>:454                                     ; preds = %447, %453
  %455 = add nsw i32 %300, 1, !dbg !1104
  %456 = sext i32 %455 to i64, !dbg !1104
  %457 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %456, !dbg !1104
  %458 = load i32* %457, align 4, !dbg !1104, !tbaa !163
  %459 = icmp eq i32 %458, 0, !dbg !1104
  br i1 %459, label %461, label %460, !dbg !1106

; <label>:460                                     ; preds = %454
  tail call void @push_slidE(i32 %455) #5, !dbg !1104
  br label %461, !dbg !1104

; <label>:461                                     ; preds = %454, %460
  %462 = add nsw i32 %300, 12, !dbg !1107
  %463 = sext i32 %462 to i64, !dbg !1107
  %464 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %463, !dbg !1107
  %465 = load i32* %464, align 4, !dbg !1107, !tbaa !163
  %466 = icmp eq i32 %465, 0, !dbg !1107
  br i1 %466, label %568, label %467, !dbg !1109

; <label>:467                                     ; preds = %461
  tail call void @push_slidE(i32 %462) #5, !dbg !1107
  br label %568, !dbg !1107

; <label>:468                                     ; preds = %302
  %469 = add nsw i32 %300, -13, !dbg !1110
  %470 = sext i32 %469 to i64, !dbg !1110
  %471 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %470, !dbg !1110
  %472 = load i32* %471, align 4, !dbg !1110, !tbaa !163
  %473 = icmp eq i32 %472, 0, !dbg !1110
  br i1 %473, label %475, label %474, !dbg !1112

; <label>:474                                     ; preds = %468
  tail call void @push_slidE(i32 %469) #5, !dbg !1110
  br label %475, !dbg !1110

; <label>:475                                     ; preds = %468, %474
  %476 = add nsw i32 %300, -12, !dbg !1113
  %477 = sext i32 %476 to i64, !dbg !1113
  %478 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %477, !dbg !1113
  %479 = load i32* %478, align 4, !dbg !1113, !tbaa !163
  %480 = icmp eq i32 %479, 0, !dbg !1113
  br i1 %480, label %482, label %481, !dbg !1115

; <label>:481                                     ; preds = %475
  tail call void @push_slidE(i32 %476) #5, !dbg !1113
  br label %482, !dbg !1113

; <label>:482                                     ; preds = %475, %481
  %483 = add nsw i32 %300, -11, !dbg !1116
  %484 = sext i32 %483 to i64, !dbg !1116
  %485 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %484, !dbg !1116
  %486 = load i32* %485, align 4, !dbg !1116, !tbaa !163
  %487 = icmp eq i32 %486, 0, !dbg !1116
  br i1 %487, label %489, label %488, !dbg !1118

; <label>:488                                     ; preds = %482
  tail call void @push_slidE(i32 %483) #5, !dbg !1116
  br label %489, !dbg !1116

; <label>:489                                     ; preds = %482, %488
  %490 = add nsw i32 %300, -1, !dbg !1119
  %491 = sext i32 %490 to i64, !dbg !1119
  %492 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %491, !dbg !1119
  %493 = load i32* %492, align 4, !dbg !1119, !tbaa !163
  %494 = icmp eq i32 %493, 0, !dbg !1119
  br i1 %494, label %496, label %495, !dbg !1121

; <label>:495                                     ; preds = %489
  tail call void @push_slidE(i32 %490) #5, !dbg !1119
  br label %496, !dbg !1119

; <label>:496                                     ; preds = %489, %495
  %497 = add nsw i32 %300, 1, !dbg !1122
  %498 = sext i32 %497 to i64, !dbg !1122
  %499 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %498, !dbg !1122
  %500 = load i32* %499, align 4, !dbg !1122, !tbaa !163
  %501 = icmp eq i32 %500, 0, !dbg !1122
  br i1 %501, label %503, label %502, !dbg !1124

; <label>:502                                     ; preds = %496
  tail call void @push_slidE(i32 %497) #5, !dbg !1122
  br label %503, !dbg !1122

; <label>:503                                     ; preds = %496, %502
  %504 = add nsw i32 %300, 11, !dbg !1125
  %505 = sext i32 %504 to i64, !dbg !1125
  %506 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %505, !dbg !1125
  %507 = load i32* %506, align 4, !dbg !1125, !tbaa !163
  %508 = icmp eq i32 %507, 0, !dbg !1125
  br i1 %508, label %510, label %509, !dbg !1127

; <label>:509                                     ; preds = %503
  tail call void @push_slidE(i32 %504) #5, !dbg !1125
  br label %510, !dbg !1125

; <label>:510                                     ; preds = %503, %509
  %511 = add nsw i32 %300, 12, !dbg !1128
  %512 = sext i32 %511 to i64, !dbg !1128
  %513 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %512, !dbg !1128
  %514 = load i32* %513, align 4, !dbg !1128, !tbaa !163
  %515 = icmp eq i32 %514, 0, !dbg !1128
  br i1 %515, label %517, label %516, !dbg !1130

; <label>:516                                     ; preds = %510
  tail call void @push_slidE(i32 %511) #5, !dbg !1128
  br label %517, !dbg !1128

; <label>:517                                     ; preds = %510, %516
  %518 = add nsw i32 %300, 13, !dbg !1131
  %519 = sext i32 %518 to i64, !dbg !1131
  %520 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %519, !dbg !1131
  %521 = load i32* %520, align 4, !dbg !1131, !tbaa !163
  %522 = icmp eq i32 %521, 0, !dbg !1131
  br i1 %522, label %568, label %523, !dbg !1133

; <label>:523                                     ; preds = %517
  tail call void @push_slidE(i32 %518) #5, !dbg !1131
  br label %568, !dbg !1131

; <label>:524                                     ; preds = %302
  %525 = add nsw i32 %300, -13, !dbg !1134
  tail call void @push_king(i32 %525) #5, !dbg !1135
  %526 = add nsw i32 %300, -12, !dbg !1136
  tail call void @push_king(i32 %526) #5, !dbg !1137
  %527 = add nsw i32 %300, -11, !dbg !1138
  tail call void @push_king(i32 %527) #5, !dbg !1139
  %528 = add nsw i32 %300, -1, !dbg !1140
  tail call void @push_king(i32 %528) #5, !dbg !1141
  %529 = add nsw i32 %300, 1, !dbg !1142
  tail call void @push_king(i32 %529) #5, !dbg !1143
  %530 = add nsw i32 %300, 11, !dbg !1144
  tail call void @push_king(i32 %530) #5, !dbg !1145
  %531 = add nsw i32 %300, 12, !dbg !1146
  tail call void @push_king(i32 %531) #5, !dbg !1147
  %532 = add nsw i32 %300, 13, !dbg !1148
  tail call void @push_king(i32 %532) #5, !dbg !1149
  %533 = icmp ne i32 %300, 114, !dbg !1150
  %534 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 114), align 4
  %535 = load i32* @captures, align 4
  %536 = or i32 %535, %534, !dbg !1152
  %537 = icmp ne i32 %536, 0, !dbg !1152
  %538 = or i1 %533, %537, !dbg !1152
  br i1 %538, label %568, label %539, !dbg !1152

; <label>:539                                     ; preds = %524
  %540 = load i32* @Variant, align 4, !dbg !1153, !tbaa !163
  %541 = icmp ne i32 %540, 3, !dbg !1154
  %542 = load i32* @Giveaway, align 4
  %543 = icmp eq i32 %542, 1, !dbg !1155
  %or.cond38 = or i1 %541, %543, !dbg !1156
  br i1 %or.cond38, label %544, label %568, !dbg !1156

; <label>:544                                     ; preds = %539
  %545 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 117), align 4, !dbg !1157, !tbaa !163
  %546 = icmp eq i32 %545, 0, !dbg !1157
  %547 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 117), align 4
  %548 = icmp eq i32 %547, 8, !dbg !1160
  %or.cond40 = and i1 %546, %548, !dbg !1161
  br i1 %or.cond40, label %549, label %555, !dbg !1161

; <label>:549                                     ; preds = %544
  %550 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 115), align 4, !dbg !1162, !tbaa !163
  %551 = icmp eq i32 %550, 13, !dbg !1164
  %552 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 116), align 4
  %553 = icmp eq i32 %552, 13, !dbg !1165
  %or.cond42 = and i1 %551, %553, !dbg !1166
  br i1 %or.cond42, label %554, label %555, !dbg !1166

; <label>:554                                     ; preds = %549
  tail call void @push_king_castle(i32 116, i32 3) #5, !dbg !1167
  br label %555, !dbg !1167

; <label>:555                                     ; preds = %549, %554, %544
  %556 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 110), align 4, !dbg !1168, !tbaa !163
  %557 = icmp eq i32 %556, 0, !dbg !1168
  %558 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 110), align 4
  %559 = icmp eq i32 %558, 8, !dbg !1170
  %or.cond44 = and i1 %557, %559, !dbg !1171
  br i1 %or.cond44, label %560, label %568, !dbg !1171

; <label>:560                                     ; preds = %555
  %561 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 111), align 4, !dbg !1172, !tbaa !163
  %562 = icmp eq i32 %561, 13, !dbg !1174
  %563 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 112), align 4
  %564 = icmp eq i32 %563, 13, !dbg !1175
  %or.cond46 = and i1 %562, %564, !dbg !1176
  %565 = load i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 113), align 4
  %566 = icmp eq i32 %565, 13, !dbg !1177
  %or.cond48 = and i1 %or.cond46, %566, !dbg !1176
  br i1 %or.cond48, label %567, label %568, !dbg !1176

; <label>:567                                     ; preds = %560
  tail call void @push_king_castle(i32 112, i32 4) #5, !dbg !1178
  br label %568, !dbg !1178

; <label>:568                                     ; preds = %405, %433, %461, %517, %.critedge27, %353, %355, %352, %411, %439, %467, %523, %555, %567, %560, %539, %524, %302
  %a.3 = phi i32 [ %303, %302 ], [ %303, %524 ], [ %303, %567 ], [ %303, %560 ], [ %303, %555 ], [ %303, %539 ], [ %303, %523 ], [ %303, %517 ], [ %303, %467 ], [ %303, %461 ], [ %303, %439 ], [ %303, %433 ], [ %303, %411 ], [ %303, %405 ], [ %303, %352 ], [ %303, %355 ], [ %303, %353 ], [ %a.291, %.critedge27 ]
  %569 = load i32* @piece_count, align 4, !dbg !784, !tbaa !163
  %570 = icmp sgt i32 %a.3, %569, !dbg !788
  br i1 %570, label %.critedge, label %._crit_edge100, !dbg !794

._crit_edge100:                                   ; preds = %568
  %indvars.iv.next99 = add nuw i64 %indvars.iv98, 1, !dbg !794
  %.pre101 = load i32* @Variant, align 4, !dbg !989, !tbaa !163
  br label %.lr.ph93, !dbg !794

.critedge:                                        ; preds = %13, %14, %287, %294, %295, %568, %.preheader84, %.preheader83
  %571 = load i32* @Variant, align 4, !dbg !1179, !tbaa !163
  %or.cond50.not = icmp ugt i32 %571, 1, !dbg !1181
  %572 = load i32* @captures, align 4
  %573 = load i32* @kingcap, align 4
  %574 = or i32 %573, %572, !dbg !1181
  %575 = icmp ne i32 %574, 0, !dbg !1181
  %576 = or i1 %or.cond50.not, %575, !dbg !1181
  br i1 %576, label %.loopexit, label %577, !dbg !1181

; <label>:577                                     ; preds = %.critedge
  %578 = load i32* @white_to_move, align 4, !dbg !1182, !tbaa !163
  %579 = icmp eq i32 %578, 0, !dbg !1182
  br i1 %579, label %.thread, label %580, !dbg !1185

; <label>:580                                     ; preds = %577
  %581 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 1), align 4, !dbg !1186, !tbaa !163
  %582 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 3), align 4
  %583 = or i32 %582, %581, !dbg !1187
  %584 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 11), align 4
  %585 = or i32 %583, %584, !dbg !1187
  %586 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 9), align 4
  %587 = or i32 %585, %586, !dbg !1187
  %588 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 7), align 4
  %589 = or i32 %587, %588, !dbg !1187
  %590 = icmp eq i32 %589, 0, !dbg !1187
  br i1 %590, label %.loopexit, label %.preheader81, !dbg !1187

.preheader81:                                     ; preds = %580, %619
  %from.096 = phi i32 [ %620, %619 ], [ 26, %580 ]
  store i32 %from.096, i32* @gfrom, align 4, !dbg !1188, !tbaa !163
  %591 = sext i32 %from.096 to i64, !dbg !1193
  %592 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %591, !dbg !1193
  %593 = load i32* %592, align 4, !dbg !1193, !tbaa !163
  switch i32 %593, label %619 [
    i32 0, label %594
    i32 13, label %596
  ], !dbg !1194

; <label>:594                                     ; preds = %.preheader81
  %595 = add nsw i32 %from.096, 3, !dbg !1195
  tail call void @llvm.dbg.value(metadata i32 %595, i64 0, metadata !38, metadata !145), !dbg !811
  br label %619, !dbg !1197

; <label>:596                                     ; preds = %.preheader81
  %597 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 1), align 4, !dbg !1198, !tbaa !163
  %598 = icmp eq i32 %597, 0, !dbg !1198
  br i1 %598, label %603, label %599, !dbg !1200

; <label>:599                                     ; preds = %596
  %600 = getelementptr inbounds [144 x i32]* @Xrank, i64 0, i64 %591, !dbg !1201
  %601 = load i32* %600, align 4, !dbg !1201, !tbaa !163
  switch i32 %601, label %602 [
    i32 8, label %603
    i32 1, label %603
  ], !dbg !1204

; <label>:602                                     ; preds = %599
  tail call void @try_drop(i32 1) #5, !dbg !1205
  br label %603, !dbg !1207

; <label>:603                                     ; preds = %599, %599, %596, %602
  %604 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 3), align 4, !dbg !1208, !tbaa !163
  %605 = icmp eq i32 %604, 0, !dbg !1208
  br i1 %605, label %607, label %606, !dbg !1210

; <label>:606                                     ; preds = %603
  tail call void @try_drop(i32 3) #5, !dbg !1211
  br label %607, !dbg !1213

; <label>:607                                     ; preds = %603, %606
  %608 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 11), align 4, !dbg !1214, !tbaa !163
  %609 = icmp eq i32 %608, 0, !dbg !1214
  br i1 %609, label %611, label %610, !dbg !1216

; <label>:610                                     ; preds = %607
  tail call void @try_drop(i32 11) #5, !dbg !1217
  br label %611, !dbg !1219

; <label>:611                                     ; preds = %607, %610
  %612 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 7), align 4, !dbg !1220, !tbaa !163
  %613 = icmp eq i32 %612, 0, !dbg !1220
  br i1 %613, label %615, label %614, !dbg !1222

; <label>:614                                     ; preds = %611
  tail call void @try_drop(i32 7) #5, !dbg !1223
  br label %615, !dbg !1225

; <label>:615                                     ; preds = %611, %614
  %616 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 9), align 4, !dbg !1226, !tbaa !163
  %617 = icmp eq i32 %616, 0, !dbg !1226
  br i1 %617, label %619, label %618, !dbg !1228

; <label>:618                                     ; preds = %615
  tail call void @try_drop(i32 9) #5, !dbg !1229
  br label %619, !dbg !1231

; <label>:619                                     ; preds = %615, %.preheader81, %618, %594
  %from.1 = phi i32 [ %from.096, %.preheader81 ], [ %from.096, %618 ], [ %from.096, %615 ], [ %595, %594 ]
  %620 = add nsw i32 %from.1, 1, !dbg !1232
  tail call void @llvm.dbg.value(metadata i32 %620, i64 0, metadata !38, metadata !145), !dbg !811
  %621 = icmp slt i32 %620, 118, !dbg !1233
  br i1 %621, label %.preheader81, label %.loopexit, !dbg !1234

.thread:                                          ; preds = %577
  %622 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 2), align 4, !dbg !1235, !tbaa !163
  %623 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 4), align 4
  %624 = or i32 %623, %622, !dbg !1237
  %625 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 12), align 4
  %626 = or i32 %624, %625, !dbg !1237
  %627 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 10), align 4
  %628 = or i32 %626, %627, !dbg !1237
  %629 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 8), align 4
  %630 = or i32 %628, %629, !dbg !1237
  %631 = icmp eq i32 %630, 0, !dbg !1237
  br i1 %631, label %.loopexit, label %.preheader, !dbg !1237

.preheader:                                       ; preds = %.thread, %660
  %from.297 = phi i32 [ %661, %660 ], [ 26, %.thread ]
  store i32 %from.297, i32* @gfrom, align 4, !dbg !1238, !tbaa !163
  %632 = sext i32 %from.297 to i64, !dbg !1243
  %633 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %632, !dbg !1243
  %634 = load i32* %633, align 4, !dbg !1243, !tbaa !163
  switch i32 %634, label %660 [
    i32 0, label %635
    i32 13, label %637
  ], !dbg !1244

; <label>:635                                     ; preds = %.preheader
  %636 = add nsw i32 %from.297, 3, !dbg !1245
  tail call void @llvm.dbg.value(metadata i32 %636, i64 0, metadata !38, metadata !145), !dbg !811
  br label %660, !dbg !1247

; <label>:637                                     ; preds = %.preheader
  %638 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 2), align 4, !dbg !1248, !tbaa !163
  %639 = icmp eq i32 %638, 0, !dbg !1248
  br i1 %639, label %644, label %640, !dbg !1250

; <label>:640                                     ; preds = %637
  %641 = getelementptr inbounds [144 x i32]* @Xrank, i64 0, i64 %632, !dbg !1251
  %642 = load i32* %641, align 4, !dbg !1251, !tbaa !163
  switch i32 %642, label %643 [
    i32 8, label %644
    i32 1, label %644
  ], !dbg !1254

; <label>:643                                     ; preds = %640
  tail call void @try_drop(i32 2) #5, !dbg !1255
  br label %644, !dbg !1257

; <label>:644                                     ; preds = %640, %640, %637, %643
  %645 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 4), align 4, !dbg !1258, !tbaa !163
  %646 = icmp eq i32 %645, 0, !dbg !1258
  br i1 %646, label %648, label %647, !dbg !1260

; <label>:647                                     ; preds = %644
  tail call void @try_drop(i32 4) #5, !dbg !1261
  br label %648, !dbg !1263

; <label>:648                                     ; preds = %644, %647
  %649 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 12), align 4, !dbg !1264, !tbaa !163
  %650 = icmp eq i32 %649, 0, !dbg !1264
  br i1 %650, label %652, label %651, !dbg !1266

; <label>:651                                     ; preds = %648
  tail call void @try_drop(i32 12) #5, !dbg !1267
  br label %652, !dbg !1269

; <label>:652                                     ; preds = %648, %651
  %653 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 8), align 4, !dbg !1270, !tbaa !163
  %654 = icmp eq i32 %653, 0, !dbg !1270
  br i1 %654, label %656, label %655, !dbg !1272

; <label>:655                                     ; preds = %652
  tail call void @try_drop(i32 8) #5, !dbg !1273
  br label %656, !dbg !1275

; <label>:656                                     ; preds = %652, %655
  %657 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 10), align 4, !dbg !1276, !tbaa !163
  %658 = icmp eq i32 %657, 0, !dbg !1276
  br i1 %658, label %660, label %659, !dbg !1278

; <label>:659                                     ; preds = %656
  tail call void @try_drop(i32 10) #5, !dbg !1279
  br label %660, !dbg !1281

; <label>:660                                     ; preds = %656, %.preheader, %659, %635
  %from.3 = phi i32 [ %from.297, %.preheader ], [ %from.297, %659 ], [ %from.297, %656 ], [ %636, %635 ]
  %661 = add nsw i32 %from.3, 1, !dbg !1282
  tail call void @llvm.dbg.value(metadata i32 %661, i64 0, metadata !38, metadata !145), !dbg !811
  %662 = icmp slt i32 %661, 118, !dbg !1283
  br i1 %662, label %.preheader, label %.loopexit, !dbg !1284

.loopexit:                                        ; preds = %619, %660, %580, %.thread, %.critedge
  %663 = load i32* @Variant, align 4, !dbg !1285, !tbaa !163
  %664 = icmp eq i32 %663, 3, !dbg !1287
  %665 = load i32* @fcaptures, align 4
  %666 = icmp eq i32 %665, 1, !dbg !1288
  %or.cond72 = and i1 %664, %666, !dbg !1289
  %667 = load i32* @captures, align 4
  %668 = icmp eq i32 %667, 0, !dbg !1290
  %or.cond74 = and i1 %or.cond72, %668, !dbg !1289
  br i1 %or.cond74, label %669, label %670, !dbg !1289

; <label>:669                                     ; preds = %.loopexit
  store i32 1, i32* @captures, align 4, !dbg !1291, !tbaa !777
  store i32 0, i32* @numb_moves, align 4, !dbg !1293, !tbaa !163
  br label %.preheader86, !dbg !1294

; <label>:670                                     ; preds = %.loopexit
  br i1 %664, label %671, label %672, !dbg !1295

; <label>:671                                     ; preds = %670
  store i32 0, i32* @kingcap, align 4, !dbg !1296, !tbaa !163
  br label %672, !dbg !1298

; <label>:672                                     ; preds = %671, %670
  ret void, !dbg !1299
}
