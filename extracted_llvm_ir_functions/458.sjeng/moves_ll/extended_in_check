define i32 @extended_in_check() #0 {
  %1 = load i32* @Variant, align 4, !dbg !2176, !tbaa !163
  %2 = icmp eq i32 %1, 3, !dbg !2178
  br i1 %2, label %.loopexit, label %3, !dbg !2179

; <label>:3                                       ; preds = %0
  %4 = load i32* @white_to_move, align 4, !dbg !2180, !tbaa !163
  %5 = icmp eq i32 %4, 1, !dbg !2182
  br i1 %5, label %6, label %70, !dbg !2183

; <label>:6                                       ; preds = %3
  %7 = load i32* @wking_loc, align 4, !dbg !2184, !tbaa !163
  %8 = add nsw i32 %7, -12, !dbg !2186
  %9 = sext i32 %8 to i64, !dbg !2187
  %10 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %9, !dbg !2187
  %11 = load i32* %10, align 4, !dbg !2187, !tbaa !163
  tail call void @llvm.dbg.value(metadata i32 %11, i64 0, metadata !58, metadata !145), !dbg !2188
  %12 = and i32 %11, -3, !dbg !2189
  %13 = icmp eq i32 %12, 8, !dbg !2189
  br i1 %13, label %.loopexit, label %14, !dbg !2189

; <label>:14                                      ; preds = %6
  %15 = add nsw i32 %7, -1, !dbg !2191
  %16 = sext i32 %15 to i64, !dbg !2192
  %17 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %16, !dbg !2192
  %18 = load i32* %17, align 4, !dbg !2192, !tbaa !163
  tail call void @llvm.dbg.value(metadata i32 %18, i64 0, metadata !58, metadata !145), !dbg !2188
  %19 = and i32 %18, -3, !dbg !2193
  %20 = icmp eq i32 %19, 8, !dbg !2193
  br i1 %20, label %.loopexit, label %21, !dbg !2193

; <label>:21                                      ; preds = %14
  %22 = add nsw i32 %7, 1, !dbg !2195
  %23 = sext i32 %22 to i64, !dbg !2196
  %24 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %23, !dbg !2196
  %25 = load i32* %24, align 4, !dbg !2196, !tbaa !163
  tail call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !58, metadata !145), !dbg !2188
  %26 = and i32 %25, -3, !dbg !2197
  %27 = icmp eq i32 %26, 8, !dbg !2197
  br i1 %27, label %.loopexit, label %28, !dbg !2197

; <label>:28                                      ; preds = %21
  %29 = add nsw i32 %7, 12, !dbg !2199
  %30 = sext i32 %29 to i64, !dbg !2200
  %31 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %30, !dbg !2200
  %32 = load i32* %31, align 4, !dbg !2200, !tbaa !163
  tail call void @llvm.dbg.value(metadata i32 %32, i64 0, metadata !58, metadata !145), !dbg !2188
  %33 = and i32 %32, -3, !dbg !2201
  %34 = icmp eq i32 %33, 8, !dbg !2201
  br i1 %34, label %.loopexit, label %35, !dbg !2201

; <label>:35                                      ; preds = %28
  %36 = add nsw i32 %7, 13, !dbg !2203
  %37 = sext i32 %36 to i64, !dbg !2204
  %38 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %37, !dbg !2204
  %39 = load i32* %38, align 4, !dbg !2204, !tbaa !163
  tail call void @llvm.dbg.value(metadata i32 %39, i64 0, metadata !58, metadata !145), !dbg !2188
  switch i32 %39, label %40 [
    i32 12, label %.loopexit
    i32 10, label %.loopexit
    i32 2, label %.loopexit
  ], !dbg !2205

; <label>:40                                      ; preds = %35
  %41 = add nsw i32 %7, 11, !dbg !2207
  %42 = sext i32 %41 to i64, !dbg !2208
  %43 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %42, !dbg !2208
  %44 = load i32* %43, align 4, !dbg !2208, !tbaa !163
  tail call void @llvm.dbg.value(metadata i32 %44, i64 0, metadata !58, metadata !145), !dbg !2188
  switch i32 %44, label %45 [
    i32 12, label %.loopexit
    i32 10, label %.loopexit
    i32 2, label %.loopexit
  ], !dbg !2209

; <label>:45                                      ; preds = %40
  %46 = add nsw i32 %7, -11, !dbg !2211
  %47 = sext i32 %46 to i64, !dbg !2212
  %48 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %47, !dbg !2212
  %49 = load i32* %48, align 4, !dbg !2212, !tbaa !163
  tail call void @llvm.dbg.value(metadata i32 %49, i64 0, metadata !58, metadata !145), !dbg !2188
  switch i32 %49, label %50 [
    i32 12, label %.loopexit
    i32 10, label %.loopexit
  ], !dbg !2213

; <label>:50                                      ; preds = %45
  %51 = add nsw i32 %7, -13, !dbg !2215
  %52 = sext i32 %51 to i64, !dbg !2216
  %53 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %52, !dbg !2216
  %54 = load i32* %53, align 4, !dbg !2216, !tbaa !163
  tail call void @llvm.dbg.value(metadata i32 %54, i64 0, metadata !58, metadata !145), !dbg !2188
  switch i32 %54, label %.preheader [
    i32 12, label %.loopexit
    i32 10, label %.loopexit
  ], !dbg !2217

; <label>:55                                      ; preds = %.preheader
  %56 = icmp slt i64 %indvars.iv.next, 8, !dbg !2219
  br i1 %56, label %.preheader, label %64, !dbg !2222

.preheader:                                       ; preds = %50, %55
  %indvars.iv = phi i64 [ %indvars.iv.next, %55 ], [ 0, %50 ]
  %57 = getelementptr inbounds [8 x i32]* @extended_in_check.knight_o, i64 0, i64 %indvars.iv, !dbg !2223
  %58 = load i32* %57, align 4, !dbg !2223, !tbaa !163
  %59 = add nsw i32 %58, %7, !dbg !2226
  %60 = sext i32 %59 to i64, !dbg !2227
  %61 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %60, !dbg !2227
  %62 = load i32* %61, align 4, !dbg !2227, !tbaa !163
  %63 = icmp eq i32 %62, 4, !dbg !2228
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2222
  br i1 %63, label %.loopexit, label %55, !dbg !2229

; <label>:64                                      ; preds = %55
  %65 = tail call i32 @is_attacked(i32 %7, i32 0) #4, !dbg !2230
  %66 = icmp eq i32 %65, 0, !dbg !2230
  br i1 %66, label %.loopexit, label %67, !dbg !2232

; <label>:67                                      ; preds = %64
  %68 = load i32* @Variant, align 4, !dbg !2233, !tbaa !163
  switch i32 %68, label %69 [
    i32 4, label %.loopexit
    i32 2, label %.loopexit
  ], !dbg !2236

; <label>:69                                      ; preds = %67
  br label %.loopexit, !dbg !2237

; <label>:70                                      ; preds = %3
  %71 = load i32* @bking_loc, align 4, !dbg !2238, !tbaa !163
  %72 = add nsw i32 %71, -12, !dbg !2240
  %73 = sext i32 %72 to i64, !dbg !2241
  %74 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %73, !dbg !2241
  %75 = load i32* %74, align 4, !dbg !2241, !tbaa !163
  tail call void @llvm.dbg.value(metadata i32 %75, i64 0, metadata !58, metadata !145), !dbg !2188
  switch i32 %75, label %76 [
    i32 9, label %.loopexit
    i32 7, label %.loopexit
  ], !dbg !2242

; <label>:76                                      ; preds = %70
  %77 = add nsw i32 %71, -1, !dbg !2244
  %78 = sext i32 %77 to i64, !dbg !2245
  %79 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %78, !dbg !2245
  %80 = load i32* %79, align 4, !dbg !2245, !tbaa !163
  tail call void @llvm.dbg.value(metadata i32 %80, i64 0, metadata !58, metadata !145), !dbg !2188
  switch i32 %80, label %81 [
    i32 9, label %.loopexit
    i32 7, label %.loopexit
  ], !dbg !2246

; <label>:81                                      ; preds = %76
  %82 = add nsw i32 %71, 1, !dbg !2248
  %83 = sext i32 %82 to i64, !dbg !2249
  %84 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %83, !dbg !2249
  %85 = load i32* %84, align 4, !dbg !2249, !tbaa !163
  tail call void @llvm.dbg.value(metadata i32 %85, i64 0, metadata !58, metadata !145), !dbg !2188
  switch i32 %85, label %86 [
    i32 9, label %.loopexit
    i32 7, label %.loopexit
  ], !dbg !2250

; <label>:86                                      ; preds = %81
  %87 = add nsw i32 %71, 12, !dbg !2252
  %88 = sext i32 %87 to i64, !dbg !2253
  %89 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %88, !dbg !2253
  %90 = load i32* %89, align 4, !dbg !2253, !tbaa !163
  tail call void @llvm.dbg.value(metadata i32 %90, i64 0, metadata !58, metadata !145), !dbg !2188
  switch i32 %90, label %91 [
    i32 9, label %.loopexit
    i32 7, label %.loopexit
  ], !dbg !2254

; <label>:91                                      ; preds = %86
  %92 = add nsw i32 %71, -13, !dbg !2256
  %93 = sext i32 %92 to i64, !dbg !2257
  %94 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %93, !dbg !2257
  %95 = load i32* %94, align 4, !dbg !2257, !tbaa !163
  tail call void @llvm.dbg.value(metadata i32 %95, i64 0, metadata !58, metadata !145), !dbg !2188
  switch i32 %95, label %96 [
    i32 11, label %.loopexit
    i32 9, label %.loopexit
    i32 1, label %.loopexit
  ], !dbg !2258

; <label>:96                                      ; preds = %91
  %97 = add nsw i32 %71, -11, !dbg !2260
  %98 = sext i32 %97 to i64, !dbg !2261
  %99 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %98, !dbg !2261
  %100 = load i32* %99, align 4, !dbg !2261, !tbaa !163
  tail call void @llvm.dbg.value(metadata i32 %100, i64 0, metadata !58, metadata !145), !dbg !2188
  switch i32 %100, label %101 [
    i32 11, label %.loopexit
    i32 9, label %.loopexit
    i32 1, label %.loopexit
  ], !dbg !2262

; <label>:101                                     ; preds = %96
  %102 = add nsw i32 %71, 11, !dbg !2264
  %103 = sext i32 %102 to i64, !dbg !2265
  %104 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %103, !dbg !2265
  %105 = load i32* %104, align 4, !dbg !2265, !tbaa !163
  tail call void @llvm.dbg.value(metadata i32 %105, i64 0, metadata !58, metadata !145), !dbg !2188
  %106 = and i32 %105, -3, !dbg !2266
  %107 = icmp eq i32 %106, 9, !dbg !2266
  br i1 %107, label %.loopexit, label %108, !dbg !2266

; <label>:108                                     ; preds = %101
  %109 = add nsw i32 %71, 13, !dbg !2268
  %110 = sext i32 %109 to i64, !dbg !2269
  %111 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %110, !dbg !2269
  %112 = load i32* %111, align 4, !dbg !2269, !tbaa !163
  tail call void @llvm.dbg.value(metadata i32 %112, i64 0, metadata !58, metadata !145), !dbg !2188
  %113 = and i32 %112, -3, !dbg !2270
  %114 = icmp eq i32 %113, 9, !dbg !2270
  br i1 %114, label %.loopexit, label %.preheader44, !dbg !2270

; <label>:115                                     ; preds = %.preheader44
  %116 = icmp slt i64 %indvars.iv.next52, 8, !dbg !2272
  br i1 %116, label %.preheader44, label %124, !dbg !2275

.preheader44:                                     ; preds = %108, %115
  %indvars.iv51 = phi i64 [ %indvars.iv.next52, %115 ], [ 0, %108 ]
  %117 = getelementptr inbounds [8 x i32]* @extended_in_check.knight_o, i64 0, i64 %indvars.iv51, !dbg !2276
  %118 = load i32* %117, align 4, !dbg !2276, !tbaa !163
  %119 = add nsw i32 %118, %71, !dbg !2279
  %120 = sext i32 %119 to i64, !dbg !2280
  %121 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %120, !dbg !2280
  %122 = load i32* %121, align 4, !dbg !2280, !tbaa !163
  %123 = icmp eq i32 %122, 3, !dbg !2281
  %indvars.iv.next52 = add nuw nsw i64 %indvars.iv51, 1, !dbg !2275
  br i1 %123, label %.loopexit, label %115, !dbg !2282

; <label>:124                                     ; preds = %115
  %125 = tail call i32 @is_attacked(i32 %71, i32 1) #4, !dbg !2283
  %126 = icmp eq i32 %125, 0, !dbg !2283
  br i1 %126, label %.loopexit, label %127, !dbg !2285

; <label>:127                                     ; preds = %124
  %128 = load i32* @Variant, align 4, !dbg !2286, !tbaa !163
  switch i32 %128, label %129 [
    i32 4, label %.loopexit
    i32 2, label %.loopexit
  ], !dbg !2289

; <label>:129                                     ; preds = %127
  br label %.loopexit, !dbg !2290

.loopexit:                                        ; preds = %.preheader44, %.preheader, %124, %64, %127, %127, %108, %101, %96, %96, %96, %91, %91, %91, %86, %86, %81, %81, %76, %76, %70, %70, %67, %67, %50, %50, %45, %45, %40, %40, %40, %35, %35, %35, %28, %21, %14, %6, %0, %129, %69
  %.0 = phi i32 [ 1, %69 ], [ 1, %129 ], [ 0, %0 ], [ 2, %6 ], [ 2, %14 ], [ 2, %21 ], [ 2, %28 ], [ 2, %35 ], [ 2, %35 ], [ 2, %35 ], [ 2, %40 ], [ 2, %40 ], [ 2, %40 ], [ 2, %45 ], [ 2, %45 ], [ 2, %50 ], [ 2, %50 ], [ 2, %67 ], [ 2, %67 ], [ 2, %70 ], [ 2, %70 ], [ 2, %76 ], [ 2, %76 ], [ 2, %81 ], [ 2, %81 ], [ 2, %86 ], [ 2, %86 ], [ 2, %91 ], [ 2, %91 ], [ 2, %91 ], [ 2, %96 ], [ 2, %96 ], [ 2, %96 ], [ 2, %101 ], [ 2, %108 ], [ 2, %127 ], [ 2, %127 ], [ 0, %64 ], [ 0, %124 ], [ 2, %.preheader ], [ 2, %.preheader44 ]
  ret i32 %.0, !dbg !2291
}
