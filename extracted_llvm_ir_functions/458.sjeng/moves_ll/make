define void @make(%struct.move_s* nocapture readonly %moves, i32 %i) #0 {
  tail call void @llvm.dbg.value(metadata %struct.move_s* %moves, i64 0, metadata !63, metadata !145), !dbg !2292
  tail call void @llvm.dbg.value(metadata i32 %i, i64 0, metadata !64, metadata !145), !dbg !2293
  %1 = sext i32 %i to i64, !dbg !2294
  %2 = getelementptr inbounds %struct.move_s* %moves, i64 %1, i32 5, !dbg !2295
  %3 = load i32* %2, align 4, !dbg !2295, !tbaa !1456
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !65, metadata !145), !dbg !2296
  %4 = getelementptr inbounds %struct.move_s* %moves, i64 %1, i32 0, !dbg !2297
  %5 = load i32* %4, align 4, !dbg !2297, !tbaa !152
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !66, metadata !145), !dbg !2298
  %6 = getelementptr inbounds %struct.move_s* %moves, i64 %1, i32 1, !dbg !2299
  %7 = load i32* %6, align 4, !dbg !2299, !tbaa !159
  tail call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !67, metadata !145), !dbg !2300
  %8 = getelementptr inbounds %struct.move_s* %moves, i64 %1, i32 3, !dbg !2301
  %9 = load i32* %8, align 4, !dbg !2301, !tbaa !228
  tail call void @llvm.dbg.value(metadata i32 %9, i64 0, metadata !69, metadata !145), !dbg !2302
  %10 = getelementptr inbounds %struct.move_s* %moves, i64 %1, i32 4, !dbg !2303
  %11 = load i32* %10, align 4, !dbg !2303, !tbaa !167
  tail call void @llvm.dbg.value(metadata i32 %11, i64 0, metadata !70, metadata !145), !dbg !2304
  %12 = load i32* @ep_square, align 4, !dbg !2305, !tbaa !163
  %13 = load i32* @ply, align 4, !dbg !2306, !tbaa !163
  %14 = sext i32 %13 to i64, !dbg !2307
  %15 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %14, i32 2, !dbg !2308
  store i32 %12, i32* %15, align 4, !dbg !2309, !tbaa !2310
  store i32 0, i32* @ep_square, align 4, !dbg !2312, !tbaa !163
  %16 = load i32* @fifty, align 4, !dbg !2313, !tbaa !163
  %17 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %14, i32 3, !dbg !2314
  store i32 %16, i32* %17, align 4, !dbg !2315, !tbaa !2316
  %18 = sext i32 %5 to i64, !dbg !2317
  %19 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %18, !dbg !2317
  %20 = load i32* %19, align 4, !dbg !2317, !tbaa !163
  %.off = add i32 %20, -1, !dbg !2319
  %switch = icmp ult i32 %.off, 2, !dbg !2319
  br i1 %switch, label %27, label %21, !dbg !2319

; <label>:21                                      ; preds = %0
  %22 = sext i32 %7 to i64, !dbg !2320
  %23 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %22, !dbg !2320
  %24 = load i32* %23, align 4, !dbg !2320, !tbaa !163
  %25 = icmp eq i32 %24, 13, !dbg !2321
  %26 = add nsw i32 %16, 1, !dbg !2322
  %. = select i1 %25, i32 %26, i32 0, !dbg !2324
  br label %27, !dbg !2324

; <label>:27                                      ; preds = %21, %0
  %storemerge = phi i32 [ 0, %0 ], [ %., %21 ]
  store i32 %storemerge, i32* @fifty, align 4, !dbg !2325, !tbaa !163
  %28 = icmp eq i32 %5, 0, !dbg !2327
  br i1 %28, label %29, label %66, !dbg !2329

; <label>:29                                      ; preds = %27
  %30 = load i32* @piece_count, align 4, !dbg !2330, !tbaa !163
  %31 = add nsw i32 %30, 1, !dbg !2330
  store i32 %31, i32* @piece_count, align 4, !dbg !2330, !tbaa !163
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !71, metadata !145), !dbg !2332
  %32 = load i32* getelementptr inbounds ([62 x i32]* @pieces, i64 0, i64 1), align 4, !dbg !2333, !tbaa !163
  %33 = icmp eq i32 %32, 0, !dbg !2336
  br i1 %33, label %41, label %.lr.ph, !dbg !2337

.lr.ph:                                           ; preds = %29, %36
  %indvars.iv = phi i64 [ %indvars.iv.next, %36 ], [ 1, %29 ]
  %34 = icmp sgt i64 %indvars.iv, 62, !dbg !2338
  br i1 %34, label %35, label %36, !dbg !2338, !prof !2339

; <label>:35                                      ; preds = %.lr.ph
  tail call void @__assert_rtn(i8* getelementptr inbounds ([5 x i8]* @__func__.make, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8]* @.str, i64 0, i64 0), i32 1326, i8* getelementptr inbounds ([15 x i8]* @.str1, i64 0, i64 0)) #7, !dbg !2338
  unreachable, !dbg !2338

; <label>:36                                      ; preds = %.lr.ph
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2337
  %37 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %indvars.iv.next, !dbg !2333
  %38 = load i32* %37, align 4, !dbg !2333, !tbaa !163
  %39 = icmp eq i32 %38, 0, !dbg !2336
  br i1 %39, label %._crit_edge, label %.lr.ph, !dbg !2337

._crit_edge:                                      ; preds = %36
  %40 = trunc i64 %indvars.iv.next to i32, !dbg !2337
  br label %41, !dbg !2337

; <label>:41                                      ; preds = %._crit_edge, %29
  %.lcssa8 = phi i32* [ %37, %._crit_edge ], [ getelementptr inbounds ([62 x i32]* @pieces, i64 0, i64 1), %29 ]
  %.lcssa = phi i64 [ %indvars.iv.next, %._crit_edge ], [ 1, %29 ]
  %find_slot.0.lcssa = phi i32 [ %40, %._crit_edge ], [ 1, %29 ]
  store i32 %7, i32* %.lcssa8, align 4, !dbg !2340, !tbaa !163
  %42 = getelementptr inbounds [62 x i32]* @is_promoted, i64 0, i64 %.lcssa, !dbg !2341
  %43 = load i32* %42, align 4, !dbg !2341, !tbaa !163
  %44 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %14, i32 1, !dbg !2342
  store i32 %43, i32* %44, align 4, !dbg !2343, !tbaa !2344
  store i32 0, i32* %42, align 4, !dbg !2345, !tbaa !163
  %45 = sext i32 %7 to i64, !dbg !2346
  %46 = getelementptr inbounds [144 x i32]* @squares, i64 0, i64 %45, !dbg !2346
  store i32 %find_slot.0.lcssa, i32* %46, align 4, !dbg !2347, !tbaa !163
  %.off5 = add i32 %9, -1, !dbg !2348
  %47 = icmp ugt i32 %.off5, 11, !dbg !2348
  br i1 %47, label %48, label %49, !dbg !2348, !prof !2339

; <label>:48                                      ; preds = %41
  tail call void @__assert_rtn(i8* getelementptr inbounds ([5 x i8]* @__func__.make, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8]* @.str, i64 0, i64 0), i32 1337, i8* getelementptr inbounds ([38 x i8]* @.str2, i64 0, i64 0)) #7, !dbg !2348
  unreachable, !dbg !2348

; <label>:49                                      ; preds = %41
  %50 = load i32* @white_to_move, align 4, !dbg !2349, !tbaa !163
  %not.3 = icmp eq i32 %50, 0, !dbg !2349
  %51 = zext i1 %not.3 to i32, !dbg !2349
  tail call void @DropremoveHolding(i32 %9, i32 %51) #4, !dbg !2350
  %52 = sext i32 %9 to i64, !dbg !2351
  %53 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %52, !dbg !2351
  %54 = load i32* %53, align 4, !dbg !2351, !tbaa !163
  %55 = load i32* @Material, align 4, !dbg !2351, !tbaa !163
  %56 = add nsw i32 %55, %54, !dbg !2351
  store i32 %56, i32* @Material, align 4, !dbg !2351, !tbaa !163
  %57 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %45, !dbg !2352
  store i32 %9, i32* %57, align 4, !dbg !2353, !tbaa !163
  %58 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %52, i64 %45, !dbg !2354
  %59 = load i32* %58, align 4, !dbg !2354, !tbaa !163
  %60 = load i32* @hash, align 4, !dbg !2354, !tbaa !163
  %61 = xor i32 %60, %59, !dbg !2354
  store i32 %61, i32* @hash, align 4, !dbg !2354, !tbaa !163
  %62 = load i32* @white_to_move, align 4, !dbg !2355, !tbaa !163
  %63 = xor i32 %62, 1, !dbg !2355
  store i32 %63, i32* @white_to_move, align 4, !dbg !2355, !tbaa !163
  %64 = load i32* @ply, align 4, !dbg !2356, !tbaa !163
  %65 = add nsw i32 %64, 1, !dbg !2356
  store i32 %65, i32* @ply, align 4, !dbg !2356, !tbaa !163
  br label %418, !dbg !2357

; <label>:66                                      ; preds = %27
  %67 = sext i32 %7 to i64, !dbg !2358
  %68 = getelementptr inbounds [144 x i32]* @squares, i64 0, i64 %67, !dbg !2358
  %69 = load i32* %68, align 4, !dbg !2358, !tbaa !163
  %70 = sext i32 %69 to i64, !dbg !2360
  %71 = getelementptr inbounds [62 x i32]* @is_promoted, i64 0, i64 %70, !dbg !2360
  %72 = load i32* %71, align 4, !dbg !2360, !tbaa !163
  %73 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %14, i32 1, !dbg !2361
  store i32 %72, i32* %73, align 4, !dbg !2362, !tbaa !2344
  %74 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %14, i32 0, !dbg !2363
  store i32 %69, i32* %74, align 4, !dbg !2364, !tbaa !2365
  %75 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %70, !dbg !2366
  store i32 0, i32* %75, align 4, !dbg !2367, !tbaa !163
  %76 = getelementptr inbounds [144 x i32]* @squares, i64 0, i64 %18, !dbg !2368
  %77 = load i32* %76, align 4, !dbg !2368, !tbaa !163
  %78 = sext i32 %77 to i64, !dbg !2369
  %79 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %78, !dbg !2369
  store i32 %7, i32* %79, align 4, !dbg !2370, !tbaa !163
  store i32 %77, i32* %68, align 4, !dbg !2371, !tbaa !163
  store i32 0, i32* %76, align 4, !dbg !2372, !tbaa !163
  %80 = icmp ne i32 %3, 0, !dbg !2373
  br i1 %80, label %110, label %81, !dbg !2375

; <label>:81                                      ; preds = %66
  %82 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %67, !dbg !2376
  %83 = load i32* %82, align 4, !dbg !2376, !tbaa !163
  %cond = icmp eq i32 %83, 13, !dbg !2378
  br i1 %cond, label %110, label %84, !dbg !2378

; <label>:84                                      ; preds = %81
  %85 = load i32* @Variant, align 4, !dbg !2379, !tbaa !163
  %86 = icmp ult i32 %85, 2, !dbg !2382
  br i1 %86, label %87, label %97, !dbg !2382

; <label>:87                                      ; preds = %84
  %88 = icmp eq i32 %72, 0, !dbg !2383
  br i1 %88, label %93, label %89, !dbg !2386

; <label>:89                                      ; preds = %87
  %90 = tail call i32 @SwitchPromoted(i32 %83) #4, !dbg !2387
  %91 = load i32* @white_to_move, align 4, !dbg !2389, !tbaa !163
  %not.2 = icmp eq i32 %91, 0, !dbg !2389
  %92 = zext i1 %not.2 to i32, !dbg !2389
  tail call void @addHolding(i32 %90, i32 %92) #4, !dbg !2390
  br label %97, !dbg !2391

; <label>:93                                      ; preds = %87
  %94 = tail call i32 @SwitchColor(i32 %83) #4, !dbg !2392
  %95 = load i32* @white_to_move, align 4, !dbg !2394, !tbaa !163
  %not. = icmp eq i32 %95, 0, !dbg !2394
  %96 = zext i1 %not. to i32, !dbg !2394
  tail call void @addHolding(i32 %94, i32 %96) #4, !dbg !2395
  br label %97

; <label>:97                                      ; preds = %89, %93, %84
  %98 = load i32* %82, align 4, !dbg !2396, !tbaa !163
  %99 = sext i32 %98 to i64, !dbg !2396
  %100 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %99, !dbg !2396
  %101 = load i32* %100, align 4, !dbg !2396, !tbaa !163
  %102 = load i32* @Material, align 4, !dbg !2396, !tbaa !163
  %103 = sub nsw i32 %102, %101, !dbg !2396
  store i32 %103, i32* @Material, align 4, !dbg !2396, !tbaa !163
  %104 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %99, i64 %67, !dbg !2397
  %105 = load i32* %104, align 4, !dbg !2397, !tbaa !163
  %106 = load i32* @hash, align 4, !dbg !2397, !tbaa !163
  %107 = xor i32 %106, %105, !dbg !2397
  store i32 %107, i32* @hash, align 4, !dbg !2397, !tbaa !163
  %108 = load i32* @piece_count, align 4, !dbg !2398, !tbaa !163
  %109 = add nsw i32 %108, -1, !dbg !2398
  store i32 %109, i32* @piece_count, align 4, !dbg !2398, !tbaa !163
  %.pre = load i32* %19, align 4, !dbg !2399, !tbaa !163
  br label %110, !dbg !2401

; <label>:110                                     ; preds = %97, %81, %66
  %111 = phi i32 [ %.pre, %97 ], [ %20, %81 ], [ %20, %66 ]
  switch i32 %111, label %302 [
    i32 1, label %112
    i32 2, label %207
    i32 5, label %322
    i32 6, label %370
  ], !dbg !2402

; <label>:112                                     ; preds = %110
  %113 = icmp eq i32 %9, 0, !dbg !2403
  br i1 %113, label %143, label %114, !dbg !2406

; <label>:114                                     ; preds = %112
  %115 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %67, !dbg !2407
  store i32 %9, i32* %115, align 4, !dbg !2409, !tbaa !163
  store i32 13, i32* %19, align 4, !dbg !2410, !tbaa !163
  %116 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %67, !dbg !2411
  %117 = load i32* %116, align 4, !dbg !2412, !tbaa !163
  %118 = add nsw i32 %117, 1, !dbg !2412
  store i32 %118, i32* %116, align 4, !dbg !2412, !tbaa !163
  %119 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %18, !dbg !2413
  %120 = load i32* %119, align 4, !dbg !2414, !tbaa !163
  %121 = add nsw i32 %120, 1, !dbg !2414
  store i32 %121, i32* %119, align 4, !dbg !2414, !tbaa !163
  %122 = load i32* @white_to_move, align 4, !dbg !2415, !tbaa !163
  %123 = xor i32 %122, 1, !dbg !2415
  store i32 %123, i32* @white_to_move, align 4, !dbg !2415, !tbaa !163
  %124 = load i32* %68, align 4, !dbg !2416, !tbaa !163
  %125 = sext i32 %124 to i64, !dbg !2417
  %126 = getelementptr inbounds [62 x i32]* @is_promoted, i64 0, i64 %125, !dbg !2417
  store i32 1, i32* %126, align 4, !dbg !2418, !tbaa !163
  %127 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %18, !dbg !2419
  %128 = load i32* %127, align 4, !dbg !2419, !tbaa !163
  %129 = load i32* @hash, align 4, !dbg !2419, !tbaa !163
  %130 = xor i32 %129, %128, !dbg !2419
  %131 = sext i32 %9 to i64, !dbg !2420
  %132 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %131, i64 %67, !dbg !2420
  %133 = load i32* %132, align 4, !dbg !2420, !tbaa !163
  %134 = xor i32 %130, %133, !dbg !2420
  store i32 %134, i32* @hash, align 4, !dbg !2420, !tbaa !163
  %135 = load i32* getelementptr inbounds ([14 x i32]* @material, i64 0, i64 1), align 4, !dbg !2421, !tbaa !163
  %136 = load i32* @Material, align 4, !dbg !2421, !tbaa !163
  %137 = sub nsw i32 %136, %135, !dbg !2421
  %138 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %131, !dbg !2422
  %139 = load i32* %138, align 4, !dbg !2422, !tbaa !163
  %140 = add nsw i32 %137, %139, !dbg !2422
  store i32 %140, i32* @Material, align 4, !dbg !2422, !tbaa !163
  %141 = load i32* @ply, align 4, !dbg !2423, !tbaa !163
  %142 = add nsw i32 %141, 1, !dbg !2423
  store i32 %142, i32* @ply, align 4, !dbg !2423, !tbaa !163
  br label %418, !dbg !2424

; <label>:143                                     ; preds = %112
  br i1 %80, label %144, label %183, !dbg !2425

; <label>:144                                     ; preds = %143
  %145 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %18, !dbg !2426
  %146 = load i32* %145, align 4, !dbg !2426, !tbaa !163
  %147 = load i32* @hash, align 4, !dbg !2426, !tbaa !163
  %148 = xor i32 %147, %146, !dbg !2426
  %149 = add nsw i32 %7, -12, !dbg !2429
  %150 = sext i32 %149 to i64, !dbg !2429
  %151 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %150, !dbg !2429
  %152 = load i32* %151, align 4, !dbg !2429, !tbaa !163
  %153 = xor i32 %148, %152, !dbg !2429
  %154 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %67, !dbg !2430
  %155 = load i32* %154, align 4, !dbg !2430, !tbaa !163
  %156 = xor i32 %153, %155, !dbg !2430
  store i32 %156, i32* @hash, align 4, !dbg !2430, !tbaa !163
  %157 = load i32* getelementptr inbounds ([14 x i32]* @material, i64 0, i64 2), align 4, !dbg !2431, !tbaa !163
  %158 = load i32* @Material, align 4, !dbg !2431, !tbaa !163
  %159 = sub nsw i32 %158, %157, !dbg !2431
  store i32 %159, i32* @Material, align 4, !dbg !2431, !tbaa !163
  %160 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %67, !dbg !2432
  store i32 1, i32* %160, align 4, !dbg !2433, !tbaa !163
  store i32 13, i32* %19, align 4, !dbg !2434, !tbaa !163
  tail call void @addHolding(i32 1, i32 0) #4, !dbg !2435
  %161 = load i32* @piece_count, align 4, !dbg !2436, !tbaa !163
  %162 = add nsw i32 %161, -1, !dbg !2436
  store i32 %162, i32* @piece_count, align 4, !dbg !2436, !tbaa !163
  %163 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %150, !dbg !2437
  store i32 13, i32* %163, align 4, !dbg !2438, !tbaa !163
  %164 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %67, !dbg !2439
  %165 = load i32* %164, align 4, !dbg !2440, !tbaa !163
  %166 = add nsw i32 %165, 1, !dbg !2440
  store i32 %166, i32* %164, align 4, !dbg !2440, !tbaa !163
  %167 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %18, !dbg !2441
  %168 = load i32* %167, align 4, !dbg !2442, !tbaa !163
  %169 = add nsw i32 %168, 1, !dbg !2442
  store i32 %169, i32* %167, align 4, !dbg !2442, !tbaa !163
  %170 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %150, !dbg !2443
  %171 = load i32* %170, align 4, !dbg !2444, !tbaa !163
  %172 = add nsw i32 %171, 1, !dbg !2444
  store i32 %172, i32* %170, align 4, !dbg !2444, !tbaa !163
  %173 = load i32* @white_to_move, align 4, !dbg !2445, !tbaa !163
  %174 = xor i32 %173, 1, !dbg !2445
  store i32 %174, i32* @white_to_move, align 4, !dbg !2445, !tbaa !163
  %175 = getelementptr inbounds [144 x i32]* @squares, i64 0, i64 %150, !dbg !2446
  %176 = load i32* %175, align 4, !dbg !2446, !tbaa !163
  %177 = load i32* @ply, align 4, !dbg !2447, !tbaa !163
  %178 = sext i32 %177 to i64, !dbg !2448
  %179 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %178, i32 0, !dbg !2449
  store i32 %176, i32* %179, align 4, !dbg !2450, !tbaa !2365
  %180 = sext i32 %176 to i64, !dbg !2451
  %181 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %180, !dbg !2451
  store i32 0, i32* %181, align 4, !dbg !2452, !tbaa !163
  store i32 0, i32* %175, align 4, !dbg !2453, !tbaa !163
  %182 = add nsw i32 %177, 1, !dbg !2454
  store i32 %182, i32* @ply, align 4, !dbg !2454, !tbaa !163
  br label %418, !dbg !2455

; <label>:183                                     ; preds = %143
  %184 = add nsw i32 %5, 24, !dbg !2456
  %185 = icmp eq i32 %7, %184, !dbg !2458
  br i1 %185, label %186, label %188, !dbg !2459

; <label>:186                                     ; preds = %183
  %187 = add nsw i32 %5, 12, !dbg !2460
  store i32 %187, i32* @ep_square, align 4, !dbg !2461, !tbaa !163
  br label %188, !dbg !2462

; <label>:188                                     ; preds = %186, %183
  %189 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %18, !dbg !2463
  %190 = load i32* %189, align 4, !dbg !2463, !tbaa !163
  %191 = load i32* @hash, align 4, !dbg !2463, !tbaa !163
  %192 = xor i32 %191, %190, !dbg !2463
  %193 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %67, !dbg !2464
  %194 = load i32* %193, align 4, !dbg !2464, !tbaa !163
  %195 = xor i32 %192, %194, !dbg !2464
  store i32 %195, i32* @hash, align 4, !dbg !2464, !tbaa !163
  %196 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %67, !dbg !2465
  store i32 1, i32* %196, align 4, !dbg !2466, !tbaa !163
  store i32 13, i32* %19, align 4, !dbg !2467, !tbaa !163
  %197 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %67, !dbg !2468
  %198 = load i32* %197, align 4, !dbg !2469, !tbaa !163
  %199 = add nsw i32 %198, 1, !dbg !2469
  store i32 %199, i32* %197, align 4, !dbg !2469, !tbaa !163
  %200 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %18, !dbg !2470
  %201 = load i32* %200, align 4, !dbg !2471, !tbaa !163
  %202 = add nsw i32 %201, 1, !dbg !2471
  store i32 %202, i32* %200, align 4, !dbg !2471, !tbaa !163
  %203 = load i32* @white_to_move, align 4, !dbg !2472, !tbaa !163
  %204 = xor i32 %203, 1, !dbg !2472
  store i32 %204, i32* @white_to_move, align 4, !dbg !2472, !tbaa !163
  %205 = load i32* @ply, align 4, !dbg !2473, !tbaa !163
  %206 = add nsw i32 %205, 1, !dbg !2473
  store i32 %206, i32* @ply, align 4, !dbg !2473, !tbaa !163
  br label %418, !dbg !2474

; <label>:207                                     ; preds = %110
  %208 = icmp eq i32 %9, 0, !dbg !2475
  br i1 %208, label %238, label %209, !dbg !2479

; <label>:209                                     ; preds = %207
  %210 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %67, !dbg !2480
  store i32 %9, i32* %210, align 4, !dbg !2482, !tbaa !163
  store i32 13, i32* %19, align 4, !dbg !2483, !tbaa !163
  %211 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %67, !dbg !2484
  %212 = load i32* %211, align 4, !dbg !2485, !tbaa !163
  %213 = add nsw i32 %212, 1, !dbg !2485
  store i32 %213, i32* %211, align 4, !dbg !2485, !tbaa !163
  %214 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %18, !dbg !2486
  %215 = load i32* %214, align 4, !dbg !2487, !tbaa !163
  %216 = add nsw i32 %215, 1, !dbg !2487
  store i32 %216, i32* %214, align 4, !dbg !2487, !tbaa !163
  %217 = load i32* @white_to_move, align 4, !dbg !2488, !tbaa !163
  %218 = xor i32 %217, 1, !dbg !2488
  store i32 %218, i32* @white_to_move, align 4, !dbg !2488, !tbaa !163
  %219 = load i32* %68, align 4, !dbg !2489, !tbaa !163
  %220 = sext i32 %219 to i64, !dbg !2490
  %221 = getelementptr inbounds [62 x i32]* @is_promoted, i64 0, i64 %220, !dbg !2490
  store i32 1, i32* %221, align 4, !dbg !2491, !tbaa !163
  %222 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %18, !dbg !2492
  %223 = load i32* %222, align 4, !dbg !2492, !tbaa !163
  %224 = load i32* @hash, align 4, !dbg !2492, !tbaa !163
  %225 = xor i32 %224, %223, !dbg !2492
  %226 = sext i32 %9 to i64, !dbg !2493
  %227 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %226, i64 %67, !dbg !2493
  %228 = load i32* %227, align 4, !dbg !2493, !tbaa !163
  %229 = xor i32 %225, %228, !dbg !2493
  store i32 %229, i32* @hash, align 4, !dbg !2493, !tbaa !163
  %230 = load i32* getelementptr inbounds ([14 x i32]* @material, i64 0, i64 2), align 4, !dbg !2494, !tbaa !163
  %231 = load i32* @Material, align 4, !dbg !2494, !tbaa !163
  %232 = sub nsw i32 %231, %230, !dbg !2494
  %233 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %226, !dbg !2495
  %234 = load i32* %233, align 4, !dbg !2495, !tbaa !163
  %235 = add nsw i32 %232, %234, !dbg !2495
  store i32 %235, i32* @Material, align 4, !dbg !2495, !tbaa !163
  %236 = load i32* @ply, align 4, !dbg !2496, !tbaa !163
  %237 = add nsw i32 %236, 1, !dbg !2496
  store i32 %237, i32* @ply, align 4, !dbg !2496, !tbaa !163
  br label %418, !dbg !2497

; <label>:238                                     ; preds = %207
  br i1 %80, label %239, label %278, !dbg !2498

; <label>:239                                     ; preds = %238
  %240 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %18, !dbg !2499
  %241 = load i32* %240, align 4, !dbg !2499, !tbaa !163
  %242 = load i32* @hash, align 4, !dbg !2499, !tbaa !163
  %243 = xor i32 %242, %241, !dbg !2499
  %244 = add nsw i32 %7, 12, !dbg !2502
  %245 = sext i32 %244 to i64, !dbg !2502
  %246 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %245, !dbg !2502
  %247 = load i32* %246, align 4, !dbg !2502, !tbaa !163
  %248 = xor i32 %243, %247, !dbg !2502
  %249 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %67, !dbg !2503
  %250 = load i32* %249, align 4, !dbg !2503, !tbaa !163
  %251 = xor i32 %248, %250, !dbg !2503
  store i32 %251, i32* @hash, align 4, !dbg !2503, !tbaa !163
  %252 = load i32* getelementptr inbounds ([14 x i32]* @material, i64 0, i64 1), align 4, !dbg !2504, !tbaa !163
  %253 = load i32* @Material, align 4, !dbg !2504, !tbaa !163
  %254 = sub nsw i32 %253, %252, !dbg !2504
  store i32 %254, i32* @Material, align 4, !dbg !2504, !tbaa !163
  %255 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %67, !dbg !2505
  store i32 2, i32* %255, align 4, !dbg !2506, !tbaa !163
  store i32 13, i32* %19, align 4, !dbg !2507, !tbaa !163
  tail call void @addHolding(i32 2, i32 1) #4, !dbg !2508
  %256 = load i32* @piece_count, align 4, !dbg !2509, !tbaa !163
  %257 = add nsw i32 %256, -1, !dbg !2509
  store i32 %257, i32* @piece_count, align 4, !dbg !2509, !tbaa !163
  %258 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %245, !dbg !2510
  store i32 13, i32* %258, align 4, !dbg !2511, !tbaa !163
  %259 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %67, !dbg !2512
  %260 = load i32* %259, align 4, !dbg !2513, !tbaa !163
  %261 = add nsw i32 %260, 1, !dbg !2513
  store i32 %261, i32* %259, align 4, !dbg !2513, !tbaa !163
  %262 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %18, !dbg !2514
  %263 = load i32* %262, align 4, !dbg !2515, !tbaa !163
  %264 = add nsw i32 %263, 1, !dbg !2515
  store i32 %264, i32* %262, align 4, !dbg !2515, !tbaa !163
  %265 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %245, !dbg !2516
  %266 = load i32* %265, align 4, !dbg !2517, !tbaa !163
  %267 = add nsw i32 %266, 1, !dbg !2517
  store i32 %267, i32* %265, align 4, !dbg !2517, !tbaa !163
  %268 = load i32* @white_to_move, align 4, !dbg !2518, !tbaa !163
  %269 = xor i32 %268, 1, !dbg !2518
  store i32 %269, i32* @white_to_move, align 4, !dbg !2518, !tbaa !163
  %270 = getelementptr inbounds [144 x i32]* @squares, i64 0, i64 %245, !dbg !2519
  %271 = load i32* %270, align 4, !dbg !2519, !tbaa !163
  %272 = load i32* @ply, align 4, !dbg !2520, !tbaa !163
  %273 = sext i32 %272 to i64, !dbg !2521
  %274 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %273, i32 0, !dbg !2522
  store i32 %271, i32* %274, align 4, !dbg !2523, !tbaa !2365
  %275 = sext i32 %271 to i64, !dbg !2524
  %276 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %275, !dbg !2524
  store i32 0, i32* %276, align 4, !dbg !2525, !tbaa !163
  store i32 0, i32* %270, align 4, !dbg !2526, !tbaa !163
  %277 = add nsw i32 %272, 1, !dbg !2527
  store i32 %277, i32* @ply, align 4, !dbg !2527, !tbaa !163
  br label %418, !dbg !2528

; <label>:278                                     ; preds = %238
  %279 = add nsw i32 %5, -24, !dbg !2529
  %280 = icmp eq i32 %7, %279, !dbg !2531
  br i1 %280, label %281, label %283, !dbg !2532

; <label>:281                                     ; preds = %278
  %282 = add nsw i32 %5, -12, !dbg !2533
  store i32 %282, i32* @ep_square, align 4, !dbg !2534, !tbaa !163
  br label %283, !dbg !2535

; <label>:283                                     ; preds = %281, %278
  %284 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %67, !dbg !2536
  store i32 2, i32* %284, align 4, !dbg !2537, !tbaa !163
  store i32 13, i32* %19, align 4, !dbg !2538, !tbaa !163
  %285 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %67, !dbg !2539
  %286 = load i32* %285, align 4, !dbg !2540, !tbaa !163
  %287 = add nsw i32 %286, 1, !dbg !2540
  store i32 %287, i32* %285, align 4, !dbg !2540, !tbaa !163
  %288 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %18, !dbg !2541
  %289 = load i32* %288, align 4, !dbg !2542, !tbaa !163
  %290 = add nsw i32 %289, 1, !dbg !2542
  store i32 %290, i32* %288, align 4, !dbg !2542, !tbaa !163
  %291 = load i32* @white_to_move, align 4, !dbg !2543, !tbaa !163
  %292 = xor i32 %291, 1, !dbg !2543
  store i32 %292, i32* @white_to_move, align 4, !dbg !2543, !tbaa !163
  %293 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %18, !dbg !2544
  %294 = load i32* %293, align 4, !dbg !2544, !tbaa !163
  %295 = load i32* @hash, align 4, !dbg !2544, !tbaa !163
  %296 = xor i32 %295, %294, !dbg !2544
  %297 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %67, !dbg !2545
  %298 = load i32* %297, align 4, !dbg !2545, !tbaa !163
  %299 = xor i32 %296, %298, !dbg !2545
  store i32 %299, i32* @hash, align 4, !dbg !2545, !tbaa !163
  %300 = load i32* @ply, align 4, !dbg !2546, !tbaa !163
  %301 = add nsw i32 %300, 1, !dbg !2546
  store i32 %301, i32* @ply, align 4, !dbg !2546, !tbaa !163
  br label %418, !dbg !2547

; <label>:302                                     ; preds = %110
  %303 = sext i32 %111 to i64, !dbg !2548
  %304 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %303, i64 %18, !dbg !2548
  %305 = load i32* %304, align 4, !dbg !2548, !tbaa !163
  %306 = load i32* @hash, align 4, !dbg !2548, !tbaa !163
  %307 = xor i32 %306, %305, !dbg !2548
  %308 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %303, i64 %67, !dbg !2551
  %309 = load i32* %308, align 4, !dbg !2551, !tbaa !163
  %310 = xor i32 %309, %307, !dbg !2551
  store i32 %310, i32* @hash, align 4, !dbg !2551, !tbaa !163
  %311 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %67, !dbg !2552
  store i32 %111, i32* %311, align 4, !dbg !2553, !tbaa !163
  store i32 13, i32* %19, align 4, !dbg !2554, !tbaa !163
  %312 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %67, !dbg !2555
  %313 = load i32* %312, align 4, !dbg !2556, !tbaa !163
  %314 = add nsw i32 %313, 1, !dbg !2556
  store i32 %314, i32* %312, align 4, !dbg !2556, !tbaa !163
  %315 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %18, !dbg !2557
  %316 = load i32* %315, align 4, !dbg !2558, !tbaa !163
  %317 = add nsw i32 %316, 1, !dbg !2558
  store i32 %317, i32* %315, align 4, !dbg !2558, !tbaa !163
  %318 = load i32* @white_to_move, align 4, !dbg !2559, !tbaa !163
  %319 = xor i32 %318, 1, !dbg !2559
  store i32 %319, i32* @white_to_move, align 4, !dbg !2559, !tbaa !163
  %320 = load i32* @ply, align 4, !dbg !2560, !tbaa !163
  %321 = add nsw i32 %320, 1, !dbg !2560
  store i32 %321, i32* @ply, align 4, !dbg !2560, !tbaa !163
  br label %418, !dbg !2561

; <label>:322                                     ; preds = %110
  store i32 %7, i32* @wking_loc, align 4, !dbg !2562, !tbaa !163
  %323 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %67, !dbg !2565
  store i32 5, i32* %323, align 4, !dbg !2566, !tbaa !163
  store i32 13, i32* %19, align 4, !dbg !2567, !tbaa !163
  %324 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %67, !dbg !2568
  %325 = load i32* %324, align 4, !dbg !2569, !tbaa !163
  %326 = add nsw i32 %325, 1, !dbg !2569
  store i32 %326, i32* %324, align 4, !dbg !2569, !tbaa !163
  %327 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %18, !dbg !2570
  %328 = load i32* %327, align 4, !dbg !2571, !tbaa !163
  %329 = add nsw i32 %328, 1, !dbg !2571
  store i32 %329, i32* %327, align 4, !dbg !2571, !tbaa !163
  %330 = load i32* @white_to_move, align 4, !dbg !2572, !tbaa !163
  %331 = xor i32 %330, 1, !dbg !2572
  store i32 %331, i32* @white_to_move, align 4, !dbg !2572, !tbaa !163
  %332 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 5, i64 %18, !dbg !2573
  %333 = load i32* %332, align 4, !dbg !2573, !tbaa !163
  %334 = load i32* @hash, align 4, !dbg !2573, !tbaa !163
  %335 = xor i32 %334, %333, !dbg !2573
  %336 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 5, i64 %67, !dbg !2574
  %337 = load i32* %336, align 4, !dbg !2574, !tbaa !163
  %338 = xor i32 %335, %337, !dbg !2574
  store i32 %338, i32* @hash, align 4, !dbg !2574, !tbaa !163
  switch i32 %11, label %367 [
    i32 1, label %339
    i32 2, label %353
  ], !dbg !2575

; <label>:339                                     ; preds = %322
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 33), align 4, !dbg !2576, !tbaa !163
  store i32 7, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 31), align 4, !dbg !2579, !tbaa !163
  %340 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 33), align 4, !dbg !2580, !tbaa !163
  %341 = add nsw i32 %340, 1, !dbg !2580
  store i32 %341, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 33), align 4, !dbg !2580, !tbaa !163
  %342 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 31), align 4, !dbg !2581, !tbaa !163
  %343 = add nsw i32 %342, 1, !dbg !2581
  store i32 %343, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 31), align 4, !dbg !2581, !tbaa !163
  store i32 1, i32* @white_castled, align 4, !dbg !2582, !tbaa !163
  %344 = load i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 33), align 4, !dbg !2583, !tbaa !163
  %345 = sext i32 %344 to i64, !dbg !2584
  %346 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %345, !dbg !2584
  store i32 31, i32* %346, align 4, !dbg !2585, !tbaa !163
  store i32 %344, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 31), align 4, !dbg !2586, !tbaa !163
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 33), align 4, !dbg !2587, !tbaa !163
  %347 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 7, i64 33), align 4, !dbg !2588, !tbaa !163
  %348 = xor i32 %338, %347, !dbg !2588
  %349 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 7, i64 31), align 4, !dbg !2589, !tbaa !163
  %350 = xor i32 %348, %349, !dbg !2589
  store i32 %350, i32* @hash, align 4, !dbg !2589, !tbaa !163
  %351 = load i32* @ply, align 4, !dbg !2590, !tbaa !163
  %352 = add nsw i32 %351, 1, !dbg !2590
  store i32 %352, i32* @ply, align 4, !dbg !2590, !tbaa !163
  br label %418, !dbg !2591

; <label>:353                                     ; preds = %322
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 26), align 4, !dbg !2592, !tbaa !163
  store i32 7, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 29), align 4, !dbg !2595, !tbaa !163
  %354 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 26), align 4, !dbg !2596, !tbaa !163
  %355 = add nsw i32 %354, 1, !dbg !2596
  store i32 %355, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 26), align 4, !dbg !2596, !tbaa !163
  %356 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 29), align 4, !dbg !2597, !tbaa !163
  %357 = add nsw i32 %356, 1, !dbg !2597
  store i32 %357, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 29), align 4, !dbg !2597, !tbaa !163
  store i32 2, i32* @white_castled, align 4, !dbg !2598, !tbaa !163
  %358 = load i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 26), align 4, !dbg !2599, !tbaa !163
  %359 = sext i32 %358 to i64, !dbg !2600
  %360 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %359, !dbg !2600
  store i32 29, i32* %360, align 4, !dbg !2601, !tbaa !163
  store i32 %358, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 29), align 4, !dbg !2602, !tbaa !163
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 26), align 4, !dbg !2603, !tbaa !163
  %361 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 7, i64 26), align 4, !dbg !2604, !tbaa !163
  %362 = xor i32 %338, %361, !dbg !2604
  %363 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 7, i64 29), align 4, !dbg !2605, !tbaa !163
  %364 = xor i32 %362, %363, !dbg !2605
  store i32 %364, i32* @hash, align 4, !dbg !2605, !tbaa !163
  %365 = load i32* @ply, align 4, !dbg !2606, !tbaa !163
  %366 = add nsw i32 %365, 1, !dbg !2606
  store i32 %366, i32* @ply, align 4, !dbg !2606, !tbaa !163
  br label %418, !dbg !2607

; <label>:367                                     ; preds = %322
  %368 = load i32* @ply, align 4, !dbg !2608, !tbaa !163
  %369 = add nsw i32 %368, 1, !dbg !2608
  store i32 %369, i32* @ply, align 4, !dbg !2608, !tbaa !163
  br label %418, !dbg !2609

; <label>:370                                     ; preds = %110
  store i32 %7, i32* @bking_loc, align 4, !dbg !2610, !tbaa !163
  %371 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %67, !dbg !2612
  store i32 6, i32* %371, align 4, !dbg !2613, !tbaa !163
  store i32 13, i32* %19, align 4, !dbg !2614, !tbaa !163
  %372 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %67, !dbg !2615
  %373 = load i32* %372, align 4, !dbg !2616, !tbaa !163
  %374 = add nsw i32 %373, 1, !dbg !2616
  store i32 %374, i32* %372, align 4, !dbg !2616, !tbaa !163
  %375 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %18, !dbg !2617
  %376 = load i32* %375, align 4, !dbg !2618, !tbaa !163
  %377 = add nsw i32 %376, 1, !dbg !2618
  store i32 %377, i32* %375, align 4, !dbg !2618, !tbaa !163
  %378 = load i32* @white_to_move, align 4, !dbg !2619, !tbaa !163
  %379 = xor i32 %378, 1, !dbg !2619
  store i32 %379, i32* @white_to_move, align 4, !dbg !2619, !tbaa !163
  %380 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 6, i64 %18, !dbg !2620
  %381 = load i32* %380, align 4, !dbg !2620, !tbaa !163
  %382 = load i32* @hash, align 4, !dbg !2620, !tbaa !163
  %383 = xor i32 %382, %381, !dbg !2620
  %384 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 6, i64 %67, !dbg !2621
  %385 = load i32* %384, align 4, !dbg !2621, !tbaa !163
  %386 = xor i32 %383, %385, !dbg !2621
  store i32 %386, i32* @hash, align 4, !dbg !2621, !tbaa !163
  switch i32 %11, label %415 [
    i32 3, label %387
    i32 4, label %401
  ], !dbg !2622

; <label>:387                                     ; preds = %370
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 117), align 4, !dbg !2623, !tbaa !163
  store i32 8, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 115), align 4, !dbg !2626, !tbaa !163
  %388 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 117), align 4, !dbg !2627, !tbaa !163
  %389 = add nsw i32 %388, 1, !dbg !2627
  store i32 %389, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 117), align 4, !dbg !2627, !tbaa !163
  %390 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 115), align 4, !dbg !2628, !tbaa !163
  %391 = add nsw i32 %390, 1, !dbg !2628
  store i32 %391, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 115), align 4, !dbg !2628, !tbaa !163
  store i32 3, i32* @black_castled, align 4, !dbg !2629, !tbaa !163
  %392 = load i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 117), align 4, !dbg !2630, !tbaa !163
  %393 = sext i32 %392 to i64, !dbg !2631
  %394 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %393, !dbg !2631
  store i32 115, i32* %394, align 4, !dbg !2632, !tbaa !163
  store i32 %392, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 115), align 4, !dbg !2633, !tbaa !163
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 117), align 4, !dbg !2634, !tbaa !163
  %395 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 8, i64 117), align 4, !dbg !2635, !tbaa !163
  %396 = xor i32 %386, %395, !dbg !2635
  %397 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 8, i64 115), align 4, !dbg !2636, !tbaa !163
  %398 = xor i32 %396, %397, !dbg !2636
  store i32 %398, i32* @hash, align 4, !dbg !2636, !tbaa !163
  %399 = load i32* @ply, align 4, !dbg !2637, !tbaa !163
  %400 = add nsw i32 %399, 1, !dbg !2637
  store i32 %400, i32* @ply, align 4, !dbg !2637, !tbaa !163
  br label %418, !dbg !2638

; <label>:401                                     ; preds = %370
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 110), align 4, !dbg !2639, !tbaa !163
  store i32 8, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 113), align 4, !dbg !2642, !tbaa !163
  %402 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 110), align 4, !dbg !2643, !tbaa !163
  %403 = add nsw i32 %402, 1, !dbg !2643
  store i32 %403, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 110), align 4, !dbg !2643, !tbaa !163
  %404 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 113), align 4, !dbg !2644, !tbaa !163
  %405 = add nsw i32 %404, 1, !dbg !2644
  store i32 %405, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 113), align 4, !dbg !2644, !tbaa !163
  store i32 4, i32* @black_castled, align 4, !dbg !2645, !tbaa !163
  %406 = load i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 110), align 4, !dbg !2646, !tbaa !163
  %407 = sext i32 %406 to i64, !dbg !2647
  %408 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %407, !dbg !2647
  store i32 113, i32* %408, align 4, !dbg !2648, !tbaa !163
  store i32 %406, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 113), align 4, !dbg !2649, !tbaa !163
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 110), align 4, !dbg !2650, !tbaa !163
  %409 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 8, i64 110), align 4, !dbg !2651, !tbaa !163
  %410 = xor i32 %386, %409, !dbg !2651
  %411 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 8, i64 113), align 4, !dbg !2652, !tbaa !163
  %412 = xor i32 %410, %411, !dbg !2652
  store i32 %412, i32* @hash, align 4, !dbg !2652, !tbaa !163
  %413 = load i32* @ply, align 4, !dbg !2653, !tbaa !163
  %414 = add nsw i32 %413, 1, !dbg !2653
  store i32 %414, i32* @ply, align 4, !dbg !2653, !tbaa !163
  br label %418, !dbg !2654

; <label>:415                                     ; preds = %370
  %416 = load i32* @ply, align 4, !dbg !2655, !tbaa !163
  %417 = add nsw i32 %416, 1, !dbg !2655
  store i32 %417, i32* @ply, align 4, !dbg !2655, !tbaa !163
  br label %418, !dbg !2656

; <label>:418                                     ; preds = %415, %401, %387, %367, %353, %339, %302, %283, %239, %209, %188, %144, %114, %49
  ret void, !dbg !2657
}
