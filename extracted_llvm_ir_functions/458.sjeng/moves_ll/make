define void @make(%struct.move_s* nocapture %moves, i32 %i) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.move_s* %moves}, i64 0, metadata !64), !dbg !992
  tail call void @llvm.dbg.value(metadata !{i32 %i}, i64 0, metadata !65), !dbg !992
  %idxprom = sext i32 %i to i64, !dbg !993
  %ep1 = getelementptr inbounds %struct.move_s* %moves, i64 %idxprom, i32 5, !dbg !993
  %0 = load i32* %ep1, align 4, !dbg !993, !tbaa !145
  tail call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !66), !dbg !993
  %from4 = getelementptr inbounds %struct.move_s* %moves, i64 %idxprom, i32 0, !dbg !994
  %1 = load i32* %from4, align 4, !dbg !994, !tbaa !145
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !67), !dbg !994
  %target7 = getelementptr inbounds %struct.move_s* %moves, i64 %idxprom, i32 1, !dbg !995
  %2 = load i32* %target7, align 4, !dbg !995, !tbaa !145
  tail call void @llvm.dbg.value(metadata !{i32 %2}, i64 0, metadata !68), !dbg !995
  %promoted13 = getelementptr inbounds %struct.move_s* %moves, i64 %idxprom, i32 3, !dbg !996
  %3 = load i32* %promoted13, align 4, !dbg !996, !tbaa !145
  tail call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !70), !dbg !996
  %castled16 = getelementptr inbounds %struct.move_s* %moves, i64 %idxprom, i32 4, !dbg !997
  %4 = load i32* %castled16, align 4, !dbg !997, !tbaa !145
  tail call void @llvm.dbg.value(metadata !{i32 %4}, i64 0, metadata !71), !dbg !997
  %5 = load i32* @ep_square, align 4, !dbg !998, !tbaa !145
  %6 = load i32* @ply, align 4, !dbg !998, !tbaa !145
  %idxprom17 = sext i32 %6 to i64, !dbg !998
  %epsq = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom17, i32 2, !dbg !998
  store i32 %5, i32* %epsq, align 4, !dbg !998, !tbaa !145
  store i32 0, i32* @ep_square, align 4, !dbg !999, !tbaa !145
  %7 = load i32* @fifty, align 4, !dbg !1000, !tbaa !145
  %fifty = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom17, i32 3, !dbg !1000
  store i32 %7, i32* %fifty, align 4, !dbg !1000, !tbaa !145
  %idxprom21 = sext i32 %1 to i64, !dbg !1001
  %arrayidx22 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom21, !dbg !1001
  %8 = load i32* %arrayidx22, align 4, !dbg !1001, !tbaa !145
  %.off599 = add i32 %8, -1, !dbg !1001
  %switch = icmp ult i32 %.off599, 2, !dbg !1001
  br i1 %switch, label %if.end, label %lor.lhs.false26, !dbg !1001

lor.lhs.false26:                                  ; preds = %entry
  %idxprom27 = sext i32 %2 to i64, !dbg !1001
  %arrayidx28 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom27, !dbg !1001
  %9 = load i32* %arrayidx28, align 4, !dbg !1001, !tbaa !145
  %cmp29 = icmp eq i32 %9, 13, !dbg !1001
  %inc = add nsw i32 %7, 1, !dbg !1002
  %inc. = select i1 %cmp29, i32 %inc, i32 0, !dbg !1001
  br label %if.end, !dbg !1001

if.end:                                           ; preds = %lor.lhs.false26, %entry
  %storemerge = phi i32 [ 0, %entry ], [ %inc., %lor.lhs.false26 ]
  store i32 %storemerge, i32* @fifty, align 4, !dbg !1004, !tbaa !145
  %cmp30 = icmp eq i32 %1, 0, !dbg !1006
  br i1 %cmp30, label %if.then31, label %if.else63, !dbg !1006

if.then31:                                        ; preds = %if.end
  %10 = load i32* @piece_count, align 4, !dbg !1007, !tbaa !145
  %inc32 = add nsw i32 %10, 1, !dbg !1007
  store i32 %inc32, i32* @piece_count, align 4, !dbg !1007, !tbaa !145
  tail call void @llvm.dbg.value(metadata !341, i64 0, metadata !72), !dbg !1009
  %11 = load i32* getelementptr inbounds ([62 x i32]* @pieces, i64 0, i64 1), align 4, !dbg !1009, !tbaa !145
  %cmp35603 = icmp eq i32 %11, 0, !dbg !1009
  br i1 %cmp35603, label %for.end, label %for.body, !dbg !1009

for.cond:                                         ; preds = %for.body
  %arrayidx34 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %indvars.iv.next, !dbg !1009
  %12 = load i32* %arrayidx34, align 4, !dbg !1009, !tbaa !145
  %cmp35 = icmp eq i32 %12, 0, !dbg !1009
  br i1 %cmp35, label %for.end, label %for.body, !dbg !1009

for.body:                                         ; preds = %if.then31, %for.cond
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond ], [ 1, %if.then31 ]
  %find_slot.0604 = phi i32 [ %inc37, %for.cond ], [ 1, %if.then31 ]
  %13 = trunc i64 %indvars.iv to i32, !dbg !1011
  %cmp36 = icmp slt i32 %13, 63, !dbg !1011
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1009
  %inc37 = add nsw i32 %find_slot.0604, 1, !dbg !1009
  tail call void @llvm.dbg.value(metadata !{i32 %inc37}, i64 0, metadata !72), !dbg !1009
  br i1 %cmp36, label %for.cond, label %cond.false, !dbg !1011

cond.false:                                       ; preds = %for.body
  tail call void @__assert_fail(i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8]* @.str1, i64 0, i64 0), i32 1326, i8* getelementptr inbounds ([25 x i8]* @__PRETTY_FUNCTION__.make, i64 0, i64 0)) #7, !dbg !1011
  unreachable, !dbg !1011

for.end:                                          ; preds = %for.cond, %if.then31
  %arrayidx34.lcssa = phi i32* [ getelementptr inbounds ([62 x i32]* @pieces, i64 0, i64 1), %if.then31 ], [ %arrayidx34, %for.cond ]
  %idxprom33.lcssa = phi i64 [ 1, %if.then31 ], [ %indvars.iv.next, %for.cond ]
  %find_slot.0.lcssa = phi i32 [ 1, %if.then31 ], [ %inc37, %for.cond ]
  store i32 %2, i32* %arrayidx34.lcssa, align 4, !dbg !1012, !tbaa !145
  %arrayidx41 = getelementptr inbounds [62 x i32]* @is_promoted, i64 0, i64 %idxprom33.lcssa, !dbg !1013
  %14 = load i32* %arrayidx41, align 4, !dbg !1013, !tbaa !145
  %15 = load i32* @ply, align 4, !dbg !1013, !tbaa !145
  %idxprom42 = sext i32 %15 to i64, !dbg !1013
  %was_promoted = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom42, i32 1, !dbg !1013
  store i32 %14, i32* %was_promoted, align 4, !dbg !1013, !tbaa !145
  store i32 0, i32* %arrayidx41, align 4, !dbg !1014, !tbaa !145
  %idxprom46 = sext i32 %2 to i64, !dbg !1015
  %arrayidx47 = getelementptr inbounds [144 x i32]* @squares, i64 0, i64 %idxprom46, !dbg !1015
  store i32 %find_slot.0.lcssa, i32* %arrayidx47, align 4, !dbg !1015, !tbaa !145
  %.off = add i32 %3, -1, !dbg !1016
  %16 = icmp ult i32 %.off, 12, !dbg !1016
  br i1 %16, label %cond.end52, label %cond.false51, !dbg !1016

cond.false51:                                     ; preds = %for.end
  tail call void @__assert_fail(i8* getelementptr inbounds ([30 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8]* @.str1, i64 0, i64 0), i32 1337, i8* getelementptr inbounds ([25 x i8]* @__PRETTY_FUNCTION__.make, i64 0, i64 0)) #7, !dbg !1016
  unreachable, !dbg !1016

cond.end52:                                       ; preds = %for.end
  %17 = load i32* @white_to_move, align 4, !dbg !1017, !tbaa !145
  %not.tobool = icmp eq i32 %17, 0, !dbg !1017
  %cond = zext i1 %not.tobool to i32, !dbg !1017
  tail call void @DropremoveHolding(i32 %3, i32 %cond) #4, !dbg !1017
  %idxprom53 = sext i32 %3 to i64, !dbg !1018
  %arrayidx54 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %idxprom53, !dbg !1018
  %18 = load i32* %arrayidx54, align 4, !dbg !1018, !tbaa !145
  %19 = load i32* @Material, align 4, !dbg !1018, !tbaa !145
  %add = add nsw i32 %19, %18, !dbg !1018
  store i32 %add, i32* @Material, align 4, !dbg !1018, !tbaa !145
  %arrayidx56 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom46, !dbg !1019
  store i32 %3, i32* %arrayidx56, align 4, !dbg !1019, !tbaa !145
  %arrayidx60 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom53, i64 %idxprom46, !dbg !1020
  %20 = load i32* %arrayidx60, align 4, !dbg !1020, !tbaa !145
  %21 = load i32* @hash, align 4, !dbg !1020, !tbaa !145
  %xor = xor i32 %21, %20, !dbg !1020
  store i32 %xor, i32* @hash, align 4, !dbg !1020, !tbaa !145
  %22 = load i32* @white_to_move, align 4, !dbg !1021, !tbaa !145
  %xor61 = xor i32 %22, 1, !dbg !1021
  store i32 %xor61, i32* @white_to_move, align 4, !dbg !1021, !tbaa !145
  %23 = load i32* @ply, align 4, !dbg !1022, !tbaa !145
  %inc62 = add nsw i32 %23, 1, !dbg !1022
  store i32 %inc62, i32* @ply, align 4, !dbg !1022, !tbaa !145
  br label %return, !dbg !1023

if.else63:                                        ; preds = %if.end
  %idxprom64 = sext i32 %2 to i64, !dbg !1024
  %arrayidx65 = getelementptr inbounds [144 x i32]* @squares, i64 0, i64 %idxprom64, !dbg !1024
  %24 = load i32* %arrayidx65, align 4, !dbg !1024, !tbaa !145
  %idxprom66 = sext i32 %24 to i64, !dbg !1024
  %arrayidx67 = getelementptr inbounds [62 x i32]* @is_promoted, i64 0, i64 %idxprom66, !dbg !1024
  %25 = load i32* %arrayidx67, align 4, !dbg !1024, !tbaa !145
  %was_promoted70 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom17, i32 1, !dbg !1024
  store i32 %25, i32* %was_promoted70, align 4, !dbg !1024, !tbaa !145
  %cap_num = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom17, i32 0, !dbg !1026
  store i32 %24, i32* %cap_num, align 4, !dbg !1026, !tbaa !145
  %arrayidx78 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom66, !dbg !1027
  store i32 0, i32* %arrayidx78, align 4, !dbg !1027, !tbaa !145
  %arrayidx80 = getelementptr inbounds [144 x i32]* @squares, i64 0, i64 %idxprom21, !dbg !1028
  %26 = load i32* %arrayidx80, align 4, !dbg !1028, !tbaa !145
  %idxprom81 = sext i32 %26 to i64, !dbg !1028
  %arrayidx82 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom81, !dbg !1028
  store i32 %2, i32* %arrayidx82, align 4, !dbg !1028, !tbaa !145
  store i32 %26, i32* %arrayidx65, align 4, !dbg !1029, !tbaa !145
  store i32 0, i32* %arrayidx80, align 4, !dbg !1030, !tbaa !145
  %tobool89 = icmp ne i32 %0, 0, !dbg !1031
  br i1 %tobool89, label %if.end125, label %if.then90, !dbg !1031

if.then90:                                        ; preds = %if.else63
  %arrayidx92 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom64, !dbg !1032
  %27 = load i32* %arrayidx92, align 4, !dbg !1032, !tbaa !145
  %cond461 = icmp eq i32 %27, 13, !dbg !1032
  br i1 %cond461, label %if.end125, label %sw.default, !dbg !1032

sw.default:                                       ; preds = %if.then90
  %28 = load i32* @Variant, align 4, !dbg !1034, !tbaa !145
  %29 = icmp ult i32 %28, 2, !dbg !1034
  br i1 %29, label %if.then96, label %if.end113, !dbg !1034

if.then96:                                        ; preds = %sw.default
  %tobool100 = icmp eq i32 %25, 0, !dbg !1036
  br i1 %tobool100, label %if.else106, label %if.then101, !dbg !1036

if.then101:                                       ; preds = %if.then96
  %call = tail call i32 @SwitchPromoted(i32 %27) #4, !dbg !1038
  %30 = load i32* @white_to_move, align 4, !dbg !1038, !tbaa !145
  %not.tobool104 = icmp eq i32 %30, 0, !dbg !1038
  %cond105 = zext i1 %not.tobool104 to i32, !dbg !1038
  tail call void @addHolding(i32 %call, i32 %cond105) #4, !dbg !1038
  br label %if.end113, !dbg !1040

if.else106:                                       ; preds = %if.then96
  %call109 = tail call i32 @SwitchColor(i32 %27) #4, !dbg !1041
  %31 = load i32* @white_to_move, align 4, !dbg !1041, !tbaa !145
  %not.tobool110 = icmp eq i32 %31, 0, !dbg !1041
  %cond111 = zext i1 %not.tobool110 to i32, !dbg !1041
  tail call void @addHolding(i32 %call109, i32 %cond111) #4, !dbg !1041
  br label %if.end113

if.end113:                                        ; preds = %if.then101, %if.else106, %sw.default
  %32 = load i32* %arrayidx92, align 4, !dbg !1043, !tbaa !145
  %idxprom116 = sext i32 %32 to i64, !dbg !1043
  %arrayidx117 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %idxprom116, !dbg !1043
  %33 = load i32* %arrayidx117, align 4, !dbg !1043, !tbaa !145
  %34 = load i32* @Material, align 4, !dbg !1043, !tbaa !145
  %sub = sub nsw i32 %34, %33, !dbg !1043
  store i32 %sub, i32* @Material, align 4, !dbg !1043, !tbaa !145
  %arrayidx123 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom116, i64 %idxprom64, !dbg !1044
  %35 = load i32* %arrayidx123, align 4, !dbg !1044, !tbaa !145
  %36 = load i32* @hash, align 4, !dbg !1044, !tbaa !145
  %xor124 = xor i32 %36, %35, !dbg !1044
  store i32 %xor124, i32* @hash, align 4, !dbg !1044, !tbaa !145
  %37 = load i32* @piece_count, align 4, !dbg !1045, !tbaa !145
  %dec = add nsw i32 %37, -1, !dbg !1045
  store i32 %dec, i32* @piece_count, align 4, !dbg !1045, !tbaa !145
  %.pre = load i32* %arrayidx22, align 4, !dbg !1046, !tbaa !145
  br label %if.end125, !dbg !1047

if.end125:                                        ; preds = %if.end113, %if.then90, %if.else63
  %38 = phi i32 [ %.pre, %if.end113 ], [ %8, %if.then90 ], [ %8, %if.else63 ]
  switch i32 %38, label %if.then347 [
    i32 1, label %if.then129
    i32 2, label %if.then236
    i32 5, label %if.then380
    i32 6, label %if.else420
  ], !dbg !1046

if.then129:                                       ; preds = %if.end125
  %tobool130 = icmp eq i32 %3, 0, !dbg !1048
  br i1 %tobool130, label %if.end160, label %if.then131, !dbg !1048

if.then131:                                       ; preds = %if.then129
  %arrayidx133 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom64, !dbg !1050
  store i32 %3, i32* %arrayidx133, align 4, !dbg !1050, !tbaa !145
  store i32 13, i32* %arrayidx22, align 4, !dbg !1052, !tbaa !145
  %arrayidx137 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom64, !dbg !1053
  %39 = load i32* %arrayidx137, align 4, !dbg !1053, !tbaa !145
  %inc138 = add nsw i32 %39, 1, !dbg !1053
  store i32 %inc138, i32* %arrayidx137, align 4, !dbg !1053, !tbaa !145
  %arrayidx140 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21, !dbg !1054
  %40 = load i32* %arrayidx140, align 4, !dbg !1054, !tbaa !145
  %inc141 = add nsw i32 %40, 1, !dbg !1054
  store i32 %inc141, i32* %arrayidx140, align 4, !dbg !1054, !tbaa !145
  %41 = load i32* @white_to_move, align 4, !dbg !1055, !tbaa !145
  %xor142 = xor i32 %41, 1, !dbg !1055
  store i32 %xor142, i32* @white_to_move, align 4, !dbg !1055, !tbaa !145
  %42 = load i32* %arrayidx65, align 4, !dbg !1056, !tbaa !145
  %idxprom145 = sext i32 %42 to i64, !dbg !1056
  %arrayidx146 = getelementptr inbounds [62 x i32]* @is_promoted, i64 0, i64 %idxprom145, !dbg !1056
  store i32 1, i32* %arrayidx146, align 4, !dbg !1056, !tbaa !145
  %arrayidx148 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %idxprom21, !dbg !1057
  %43 = load i32* %arrayidx148, align 4, !dbg !1057, !tbaa !145
  %44 = load i32* @hash, align 4, !dbg !1057, !tbaa !145
  %xor149 = xor i32 %44, %43, !dbg !1057
  %idxprom151 = sext i32 %3 to i64, !dbg !1058
  %arrayidx153 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom151, i64 %idxprom64, !dbg !1058
  %45 = load i32* %arrayidx153, align 4, !dbg !1058, !tbaa !145
  %xor154 = xor i32 %xor149, %45, !dbg !1058
  store i32 %xor154, i32* @hash, align 4, !dbg !1058, !tbaa !145
  %46 = load i32* getelementptr inbounds ([14 x i32]* @material, i64 0, i64 1), align 4, !dbg !1059, !tbaa !145
  %47 = load i32* @Material, align 4, !dbg !1059, !tbaa !145
  %sub155 = sub nsw i32 %47, %46, !dbg !1059
  %arrayidx157 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %idxprom151, !dbg !1060
  %48 = load i32* %arrayidx157, align 4, !dbg !1060, !tbaa !145
  %add158 = add nsw i32 %sub155, %48, !dbg !1060
  store i32 %add158, i32* @Material, align 4, !dbg !1060, !tbaa !145
  %49 = load i32* @ply, align 4, !dbg !1061, !tbaa !145
  %inc159 = add nsw i32 %49, 1, !dbg !1061
  store i32 %inc159, i32* @ply, align 4, !dbg !1061, !tbaa !145
  br label %return, !dbg !1062

if.end160:                                        ; preds = %if.then129
  br i1 %tobool89, label %if.then162, label %if.end208, !dbg !1063

if.then162:                                       ; preds = %if.end160
  %arrayidx164 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %idxprom21, !dbg !1064
  %50 = load i32* %arrayidx164, align 4, !dbg !1064, !tbaa !145
  %51 = load i32* @hash, align 4, !dbg !1064, !tbaa !145
  %xor165 = xor i32 %51, %50, !dbg !1064
  %sub166 = add nsw i32 %2, -12, !dbg !1066
  %idxprom167 = sext i32 %sub166 to i64, !dbg !1066
  %arrayidx168 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %idxprom167, !dbg !1066
  %52 = load i32* %arrayidx168, align 4, !dbg !1066, !tbaa !145
  %xor169 = xor i32 %xor165, %52, !dbg !1066
  %arrayidx171 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %idxprom64, !dbg !1067
  %53 = load i32* %arrayidx171, align 4, !dbg !1067, !tbaa !145
  %xor172 = xor i32 %xor169, %53, !dbg !1067
  store i32 %xor172, i32* @hash, align 4, !dbg !1067, !tbaa !145
  %54 = load i32* getelementptr inbounds ([14 x i32]* @material, i64 0, i64 2), align 4, !dbg !1068, !tbaa !145
  %55 = load i32* @Material, align 4, !dbg !1068, !tbaa !145
  %sub173 = sub nsw i32 %55, %54, !dbg !1068
  store i32 %sub173, i32* @Material, align 4, !dbg !1068, !tbaa !145
  %arrayidx175 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom64, !dbg !1069
  store i32 1, i32* %arrayidx175, align 4, !dbg !1069, !tbaa !145
  store i32 13, i32* %arrayidx22, align 4, !dbg !1070, !tbaa !145
  tail call void @addHolding(i32 1, i32 0) #4, !dbg !1071
  %56 = load i32* @piece_count, align 4, !dbg !1072, !tbaa !145
  %dec178 = add nsw i32 %56, -1, !dbg !1072
  store i32 %dec178, i32* @piece_count, align 4, !dbg !1072, !tbaa !145
  %arrayidx181 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom167, !dbg !1073
  store i32 13, i32* %arrayidx181, align 4, !dbg !1073, !tbaa !145
  %arrayidx183 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom64, !dbg !1074
  %57 = load i32* %arrayidx183, align 4, !dbg !1074, !tbaa !145
  %inc184 = add nsw i32 %57, 1, !dbg !1074
  store i32 %inc184, i32* %arrayidx183, align 4, !dbg !1074, !tbaa !145
  %arrayidx186 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21, !dbg !1075
  %58 = load i32* %arrayidx186, align 4, !dbg !1075, !tbaa !145
  %inc187 = add nsw i32 %58, 1, !dbg !1075
  store i32 %inc187, i32* %arrayidx186, align 4, !dbg !1075, !tbaa !145
  %arrayidx190 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom167, !dbg !1076
  %59 = load i32* %arrayidx190, align 4, !dbg !1076, !tbaa !145
  %inc191 = add nsw i32 %59, 1, !dbg !1076
  store i32 %inc191, i32* %arrayidx190, align 4, !dbg !1076, !tbaa !145
  %60 = load i32* @white_to_move, align 4, !dbg !1077, !tbaa !145
  %xor192 = xor i32 %60, 1, !dbg !1077
  store i32 %xor192, i32* @white_to_move, align 4, !dbg !1077, !tbaa !145
  %arrayidx195 = getelementptr inbounds [144 x i32]* @squares, i64 0, i64 %idxprom167, !dbg !1078
  %61 = load i32* %arrayidx195, align 4, !dbg !1078, !tbaa !145
  %62 = load i32* @ply, align 4, !dbg !1078, !tbaa !145
  %idxprom196 = sext i32 %62 to i64, !dbg !1078
  %cap_num198 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom196, i32 0, !dbg !1078
  store i32 %61, i32* %cap_num198, align 4, !dbg !1078, !tbaa !145
  %idxprom202 = sext i32 %61 to i64, !dbg !1079
  %arrayidx203 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom202, !dbg !1079
  store i32 0, i32* %arrayidx203, align 4, !dbg !1079, !tbaa !145
  store i32 0, i32* %arrayidx195, align 4, !dbg !1080, !tbaa !145
  %inc207 = add nsw i32 %62, 1, !dbg !1081
  store i32 %inc207, i32* @ply, align 4, !dbg !1081, !tbaa !145
  br label %return, !dbg !1082

if.end208:                                        ; preds = %if.end160
  %add209 = add nsw i32 %1, 24, !dbg !1083
  %cmp210 = icmp eq i32 %2, %add209, !dbg !1083
  br i1 %cmp210, label %if.then211, label %if.end213, !dbg !1083

if.then211:                                       ; preds = %if.end208
  %add212 = add nsw i32 %1, 12, !dbg !1084
  store i32 %add212, i32* @ep_square, align 4, !dbg !1084, !tbaa !145
  br label %if.end213, !dbg !1084

if.end213:                                        ; preds = %if.end208, %if.then211
  %arrayidx215 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %idxprom21, !dbg !1085
  %63 = load i32* %arrayidx215, align 4, !dbg !1085, !tbaa !145
  %64 = load i32* @hash, align 4, !dbg !1085, !tbaa !145
  %xor216 = xor i32 %64, %63, !dbg !1085
  %arrayidx218 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %idxprom64, !dbg !1086
  %65 = load i32* %arrayidx218, align 4, !dbg !1086, !tbaa !145
  %xor219 = xor i32 %xor216, %65, !dbg !1086
  store i32 %xor219, i32* @hash, align 4, !dbg !1086, !tbaa !145
  %arrayidx221 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom64, !dbg !1087
  store i32 1, i32* %arrayidx221, align 4, !dbg !1087, !tbaa !145
  store i32 13, i32* %arrayidx22, align 4, !dbg !1088, !tbaa !145
  %arrayidx225 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom64, !dbg !1089
  %66 = load i32* %arrayidx225, align 4, !dbg !1089, !tbaa !145
  %inc226 = add nsw i32 %66, 1, !dbg !1089
  store i32 %inc226, i32* %arrayidx225, align 4, !dbg !1089, !tbaa !145
  %arrayidx228 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21, !dbg !1090
  %67 = load i32* %arrayidx228, align 4, !dbg !1090, !tbaa !145
  %inc229 = add nsw i32 %67, 1, !dbg !1090
  store i32 %inc229, i32* %arrayidx228, align 4, !dbg !1090, !tbaa !145
  %68 = load i32* @white_to_move, align 4, !dbg !1091, !tbaa !145
  %xor230 = xor i32 %68, 1, !dbg !1091
  store i32 %xor230, i32* @white_to_move, align 4, !dbg !1091, !tbaa !145
  %69 = load i32* @ply, align 4, !dbg !1092, !tbaa !145
  %inc231 = add nsw i32 %69, 1, !dbg !1092
  store i32 %inc231, i32* @ply, align 4, !dbg !1092, !tbaa !145
  br label %return, !dbg !1093

if.then236:                                       ; preds = %if.end125
  %tobool237 = icmp eq i32 %3, 0, !dbg !1094
  br i1 %tobool237, label %if.end267, label %if.then238, !dbg !1094

if.then238:                                       ; preds = %if.then236
  %arrayidx240 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom64, !dbg !1096
  store i32 %3, i32* %arrayidx240, align 4, !dbg !1096, !tbaa !145
  store i32 13, i32* %arrayidx22, align 4, !dbg !1098, !tbaa !145
  %arrayidx244 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom64, !dbg !1099
  %70 = load i32* %arrayidx244, align 4, !dbg !1099, !tbaa !145
  %inc245 = add nsw i32 %70, 1, !dbg !1099
  store i32 %inc245, i32* %arrayidx244, align 4, !dbg !1099, !tbaa !145
  %arrayidx247 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21, !dbg !1100
  %71 = load i32* %arrayidx247, align 4, !dbg !1100, !tbaa !145
  %inc248 = add nsw i32 %71, 1, !dbg !1100
  store i32 %inc248, i32* %arrayidx247, align 4, !dbg !1100, !tbaa !145
  %72 = load i32* @white_to_move, align 4, !dbg !1101, !tbaa !145
  %xor249 = xor i32 %72, 1, !dbg !1101
  store i32 %xor249, i32* @white_to_move, align 4, !dbg !1101, !tbaa !145
  %73 = load i32* %arrayidx65, align 4, !dbg !1102, !tbaa !145
  %idxprom252 = sext i32 %73 to i64, !dbg !1102
  %arrayidx253 = getelementptr inbounds [62 x i32]* @is_promoted, i64 0, i64 %idxprom252, !dbg !1102
  store i32 1, i32* %arrayidx253, align 4, !dbg !1102, !tbaa !145
  %arrayidx255 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %idxprom21, !dbg !1103
  %74 = load i32* %arrayidx255, align 4, !dbg !1103, !tbaa !145
  %75 = load i32* @hash, align 4, !dbg !1103, !tbaa !145
  %xor256 = xor i32 %75, %74, !dbg !1103
  %idxprom258 = sext i32 %3 to i64, !dbg !1104
  %arrayidx260 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom258, i64 %idxprom64, !dbg !1104
  %76 = load i32* %arrayidx260, align 4, !dbg !1104, !tbaa !145
  %xor261 = xor i32 %xor256, %76, !dbg !1104
  store i32 %xor261, i32* @hash, align 4, !dbg !1104, !tbaa !145
  %77 = load i32* getelementptr inbounds ([14 x i32]* @material, i64 0, i64 2), align 4, !dbg !1105, !tbaa !145
  %78 = load i32* @Material, align 4, !dbg !1105, !tbaa !145
  %sub262 = sub nsw i32 %78, %77, !dbg !1105
  %arrayidx264 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %idxprom258, !dbg !1106
  %79 = load i32* %arrayidx264, align 4, !dbg !1106, !tbaa !145
  %add265 = add nsw i32 %sub262, %79, !dbg !1106
  store i32 %add265, i32* @Material, align 4, !dbg !1106, !tbaa !145
  %80 = load i32* @ply, align 4, !dbg !1107, !tbaa !145
  %inc266 = add nsw i32 %80, 1, !dbg !1107
  store i32 %inc266, i32* @ply, align 4, !dbg !1107, !tbaa !145
  br label %return, !dbg !1108

if.end267:                                        ; preds = %if.then236
  br i1 %tobool89, label %if.then269, label %if.end315, !dbg !1109

if.then269:                                       ; preds = %if.end267
  %arrayidx271 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %idxprom21, !dbg !1110
  %81 = load i32* %arrayidx271, align 4, !dbg !1110, !tbaa !145
  %82 = load i32* @hash, align 4, !dbg !1110, !tbaa !145
  %xor272 = xor i32 %82, %81, !dbg !1110
  %add273 = add nsw i32 %2, 12, !dbg !1112
  %idxprom274 = sext i32 %add273 to i64, !dbg !1112
  %arrayidx275 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %idxprom274, !dbg !1112
  %83 = load i32* %arrayidx275, align 4, !dbg !1112, !tbaa !145
  %xor276 = xor i32 %xor272, %83, !dbg !1112
  %arrayidx278 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %idxprom64, !dbg !1113
  %84 = load i32* %arrayidx278, align 4, !dbg !1113, !tbaa !145
  %xor279 = xor i32 %xor276, %84, !dbg !1113
  store i32 %xor279, i32* @hash, align 4, !dbg !1113, !tbaa !145
  %85 = load i32* getelementptr inbounds ([14 x i32]* @material, i64 0, i64 1), align 4, !dbg !1114, !tbaa !145
  %86 = load i32* @Material, align 4, !dbg !1114, !tbaa !145
  %sub280 = sub nsw i32 %86, %85, !dbg !1114
  store i32 %sub280, i32* @Material, align 4, !dbg !1114, !tbaa !145
  %arrayidx282 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom64, !dbg !1115
  store i32 2, i32* %arrayidx282, align 4, !dbg !1115, !tbaa !145
  store i32 13, i32* %arrayidx22, align 4, !dbg !1116, !tbaa !145
  tail call void @addHolding(i32 2, i32 1) #4, !dbg !1117
  %87 = load i32* @piece_count, align 4, !dbg !1118, !tbaa !145
  %dec285 = add nsw i32 %87, -1, !dbg !1118
  store i32 %dec285, i32* @piece_count, align 4, !dbg !1118, !tbaa !145
  %arrayidx288 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom274, !dbg !1119
  store i32 13, i32* %arrayidx288, align 4, !dbg !1119, !tbaa !145
  %arrayidx290 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom64, !dbg !1120
  %88 = load i32* %arrayidx290, align 4, !dbg !1120, !tbaa !145
  %inc291 = add nsw i32 %88, 1, !dbg !1120
  store i32 %inc291, i32* %arrayidx290, align 4, !dbg !1120, !tbaa !145
  %arrayidx293 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21, !dbg !1121
  %89 = load i32* %arrayidx293, align 4, !dbg !1121, !tbaa !145
  %inc294 = add nsw i32 %89, 1, !dbg !1121
  store i32 %inc294, i32* %arrayidx293, align 4, !dbg !1121, !tbaa !145
  %arrayidx297 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom274, !dbg !1122
  %90 = load i32* %arrayidx297, align 4, !dbg !1122, !tbaa !145
  %inc298 = add nsw i32 %90, 1, !dbg !1122
  store i32 %inc298, i32* %arrayidx297, align 4, !dbg !1122, !tbaa !145
  %91 = load i32* @white_to_move, align 4, !dbg !1123, !tbaa !145
  %xor299 = xor i32 %91, 1, !dbg !1123
  store i32 %xor299, i32* @white_to_move, align 4, !dbg !1123, !tbaa !145
  %arrayidx302 = getelementptr inbounds [144 x i32]* @squares, i64 0, i64 %idxprom274, !dbg !1124
  %92 = load i32* %arrayidx302, align 4, !dbg !1124, !tbaa !145
  %93 = load i32* @ply, align 4, !dbg !1124, !tbaa !145
  %idxprom303 = sext i32 %93 to i64, !dbg !1124
  %cap_num305 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom303, i32 0, !dbg !1124
  store i32 %92, i32* %cap_num305, align 4, !dbg !1124, !tbaa !145
  %idxprom309 = sext i32 %92 to i64, !dbg !1125
  %arrayidx310 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom309, !dbg !1125
  store i32 0, i32* %arrayidx310, align 4, !dbg !1125, !tbaa !145
  store i32 0, i32* %arrayidx302, align 4, !dbg !1126, !tbaa !145
  %inc314 = add nsw i32 %93, 1, !dbg !1127
  store i32 %inc314, i32* @ply, align 4, !dbg !1127, !tbaa !145
  br label %return, !dbg !1128

if.end315:                                        ; preds = %if.end267
  %sub316 = add nsw i32 %1, -24, !dbg !1129
  %cmp317 = icmp eq i32 %2, %sub316, !dbg !1129
  br i1 %cmp317, label %if.then318, label %if.end320, !dbg !1129

if.then318:                                       ; preds = %if.end315
  %sub319 = add nsw i32 %1, -12, !dbg !1130
  store i32 %sub319, i32* @ep_square, align 4, !dbg !1130, !tbaa !145
  br label %if.end320, !dbg !1130

if.end320:                                        ; preds = %if.end315, %if.then318
  %arrayidx322 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom64, !dbg !1131
  store i32 2, i32* %arrayidx322, align 4, !dbg !1131, !tbaa !145
  store i32 13, i32* %arrayidx22, align 4, !dbg !1132, !tbaa !145
  %arrayidx326 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom64, !dbg !1133
  %94 = load i32* %arrayidx326, align 4, !dbg !1133, !tbaa !145
  %inc327 = add nsw i32 %94, 1, !dbg !1133
  store i32 %inc327, i32* %arrayidx326, align 4, !dbg !1133, !tbaa !145
  %arrayidx329 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21, !dbg !1134
  %95 = load i32* %arrayidx329, align 4, !dbg !1134, !tbaa !145
  %inc330 = add nsw i32 %95, 1, !dbg !1134
  store i32 %inc330, i32* %arrayidx329, align 4, !dbg !1134, !tbaa !145
  %96 = load i32* @white_to_move, align 4, !dbg !1135, !tbaa !145
  %xor331 = xor i32 %96, 1, !dbg !1135
  store i32 %xor331, i32* @white_to_move, align 4, !dbg !1135, !tbaa !145
  %arrayidx333 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %idxprom21, !dbg !1136
  %97 = load i32* %arrayidx333, align 4, !dbg !1136, !tbaa !145
  %98 = load i32* @hash, align 4, !dbg !1136, !tbaa !145
  %xor334 = xor i32 %98, %97, !dbg !1136
  %arrayidx336 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %idxprom64, !dbg !1137
  %99 = load i32* %arrayidx336, align 4, !dbg !1137, !tbaa !145
  %xor337 = xor i32 %xor334, %99, !dbg !1137
  store i32 %xor337, i32* @hash, align 4, !dbg !1137, !tbaa !145
  %100 = load i32* @ply, align 4, !dbg !1138, !tbaa !145
  %inc338 = add nsw i32 %100, 1, !dbg !1138
  store i32 %inc338, i32* @ply, align 4, !dbg !1138, !tbaa !145
  br label %return, !dbg !1139

if.then347:                                       ; preds = %if.end125
  %idxprom351 = sext i32 %38 to i64, !dbg !1140
  %arrayidx353 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom351, i64 %idxprom21, !dbg !1140
  %101 = load i32* %arrayidx353, align 4, !dbg !1140, !tbaa !145
  %102 = load i32* @hash, align 4, !dbg !1140, !tbaa !145
  %xor354 = xor i32 %102, %101, !dbg !1140
  %arrayidx360 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom351, i64 %idxprom64, !dbg !1142
  %103 = load i32* %arrayidx360, align 4, !dbg !1142, !tbaa !145
  %xor361 = xor i32 %103, %xor354, !dbg !1142
  store i32 %xor361, i32* @hash, align 4, !dbg !1142, !tbaa !145
  %arrayidx365 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom64, !dbg !1143
  store i32 %38, i32* %arrayidx365, align 4, !dbg !1143, !tbaa !145
  store i32 13, i32* %arrayidx22, align 4, !dbg !1144, !tbaa !145
  %arrayidx369 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom64, !dbg !1145
  %104 = load i32* %arrayidx369, align 4, !dbg !1145, !tbaa !145
  %inc370 = add nsw i32 %104, 1, !dbg !1145
  store i32 %inc370, i32* %arrayidx369, align 4, !dbg !1145, !tbaa !145
  %arrayidx372 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21, !dbg !1146
  %105 = load i32* %arrayidx372, align 4, !dbg !1146, !tbaa !145
  %inc373 = add nsw i32 %105, 1, !dbg !1146
  store i32 %inc373, i32* %arrayidx372, align 4, !dbg !1146, !tbaa !145
  %106 = load i32* @white_to_move, align 4, !dbg !1147, !tbaa !145
  %xor374 = xor i32 %106, 1, !dbg !1147
  store i32 %xor374, i32* @white_to_move, align 4, !dbg !1147, !tbaa !145
  %107 = load i32* @ply, align 4, !dbg !1148, !tbaa !145
  %inc375 = add nsw i32 %107, 1, !dbg !1148
  store i32 %inc375, i32* @ply, align 4, !dbg !1148, !tbaa !145
  br label %return, !dbg !1149

if.then380:                                       ; preds = %if.end125
  store i32 %2, i32* @wking_loc, align 4, !dbg !1150, !tbaa !145
  %arrayidx382 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom64, !dbg !1152
  store i32 5, i32* %arrayidx382, align 4, !dbg !1152, !tbaa !145
  store i32 13, i32* %arrayidx22, align 4, !dbg !1153, !tbaa !145
  %arrayidx386 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom64, !dbg !1154
  %108 = load i32* %arrayidx386, align 4, !dbg !1154, !tbaa !145
  %inc387 = add nsw i32 %108, 1, !dbg !1154
  store i32 %inc387, i32* %arrayidx386, align 4, !dbg !1154, !tbaa !145
  %arrayidx389 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21, !dbg !1155
  %109 = load i32* %arrayidx389, align 4, !dbg !1155, !tbaa !145
  %inc390 = add nsw i32 %109, 1, !dbg !1155
  store i32 %inc390, i32* %arrayidx389, align 4, !dbg !1155, !tbaa !145
  %110 = load i32* @white_to_move, align 4, !dbg !1156, !tbaa !145
  %xor391 = xor i32 %110, 1, !dbg !1156
  store i32 %xor391, i32* @white_to_move, align 4, !dbg !1156, !tbaa !145
  %arrayidx393 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 5, i64 %idxprom21, !dbg !1157
  %111 = load i32* %arrayidx393, align 4, !dbg !1157, !tbaa !145
  %112 = load i32* @hash, align 4, !dbg !1157, !tbaa !145
  %xor394 = xor i32 %112, %111, !dbg !1157
  %arrayidx396 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 5, i64 %idxprom64, !dbg !1158
  %113 = load i32* %arrayidx396, align 4, !dbg !1158, !tbaa !145
  %xor397 = xor i32 %xor394, %113, !dbg !1158
  store i32 %xor397, i32* @hash, align 4, !dbg !1158, !tbaa !145
  switch i32 %4, label %if.end418 [
    i32 1, label %if.then399
    i32 2, label %if.then409
  ], !dbg !1159

if.then399:                                       ; preds = %if.then380
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 33), align 4, !dbg !1160, !tbaa !145
  store i32 7, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 31), align 4, !dbg !1162, !tbaa !145
  %114 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 33), align 4, !dbg !1163, !tbaa !145
  %inc400 = add nsw i32 %114, 1, !dbg !1163
  store i32 %inc400, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 33), align 4, !dbg !1163, !tbaa !145
  %115 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 31), align 4, !dbg !1164, !tbaa !145
  %inc401 = add nsw i32 %115, 1, !dbg !1164
  store i32 %inc401, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 31), align 4, !dbg !1164, !tbaa !145
  store i32 1, i32* @white_castled, align 4, !dbg !1165, !tbaa !145
  %116 = load i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 33), align 4, !dbg !1166, !tbaa !145
  %idxprom402 = sext i32 %116 to i64, !dbg !1166
  %arrayidx403 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom402, !dbg !1166
  store i32 31, i32* %arrayidx403, align 4, !dbg !1166, !tbaa !145
  store i32 %116, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 31), align 4, !dbg !1167, !tbaa !145
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 33), align 4, !dbg !1168, !tbaa !145
  %117 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 7, i64 33), align 4, !dbg !1169, !tbaa !145
  %xor404 = xor i32 %xor397, %117, !dbg !1169
  %118 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 7, i64 31), align 4, !dbg !1170, !tbaa !145
  %xor405 = xor i32 %xor404, %118, !dbg !1170
  store i32 %xor405, i32* @hash, align 4, !dbg !1170, !tbaa !145
  %119 = load i32* @ply, align 4, !dbg !1171, !tbaa !145
  %inc406 = add nsw i32 %119, 1, !dbg !1171
  store i32 %inc406, i32* @ply, align 4, !dbg !1171, !tbaa !145
  br label %return, !dbg !1172

if.then409:                                       ; preds = %if.then380
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 26), align 4, !dbg !1173, !tbaa !145
  store i32 7, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 29), align 4, !dbg !1175, !tbaa !145
  %120 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 26), align 4, !dbg !1176, !tbaa !145
  %inc410 = add nsw i32 %120, 1, !dbg !1176
  store i32 %inc410, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 26), align 4, !dbg !1176, !tbaa !145
  %121 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 29), align 4, !dbg !1177, !tbaa !145
  %inc411 = add nsw i32 %121, 1, !dbg !1177
  store i32 %inc411, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 29), align 4, !dbg !1177, !tbaa !145
  store i32 2, i32* @white_castled, align 4, !dbg !1178, !tbaa !145
  %122 = load i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 26), align 4, !dbg !1179, !tbaa !145
  %idxprom412 = sext i32 %122 to i64, !dbg !1179
  %arrayidx413 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom412, !dbg !1179
  store i32 29, i32* %arrayidx413, align 4, !dbg !1179, !tbaa !145
  store i32 %122, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 29), align 4, !dbg !1180, !tbaa !145
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 26), align 4, !dbg !1181, !tbaa !145
  %123 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 7, i64 26), align 4, !dbg !1182, !tbaa !145
  %xor414 = xor i32 %xor397, %123, !dbg !1182
  %124 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 7, i64 29), align 4, !dbg !1183, !tbaa !145
  %xor415 = xor i32 %xor414, %124, !dbg !1183
  store i32 %xor415, i32* @hash, align 4, !dbg !1183, !tbaa !145
  %125 = load i32* @ply, align 4, !dbg !1184, !tbaa !145
  %inc416 = add nsw i32 %125, 1, !dbg !1184
  store i32 %inc416, i32* @ply, align 4, !dbg !1184, !tbaa !145
  br label %return, !dbg !1185

if.end418:                                        ; preds = %if.then380
  %126 = load i32* @ply, align 4, !dbg !1186, !tbaa !145
  %inc419 = add nsw i32 %126, 1, !dbg !1186
  store i32 %inc419, i32* @ply, align 4, !dbg !1186, !tbaa !145
  br label %return, !dbg !1187

if.else420:                                       ; preds = %if.end125
  store i32 %2, i32* @bking_loc, align 4, !dbg !1188, !tbaa !145
  %arrayidx422 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom64, !dbg !1190
  store i32 6, i32* %arrayidx422, align 4, !dbg !1190, !tbaa !145
  store i32 13, i32* %arrayidx22, align 4, !dbg !1191, !tbaa !145
  %arrayidx426 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom64, !dbg !1192
  %127 = load i32* %arrayidx426, align 4, !dbg !1192, !tbaa !145
  %inc427 = add nsw i32 %127, 1, !dbg !1192
  store i32 %inc427, i32* %arrayidx426, align 4, !dbg !1192, !tbaa !145
  %arrayidx429 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21, !dbg !1193
  %128 = load i32* %arrayidx429, align 4, !dbg !1193, !tbaa !145
  %inc430 = add nsw i32 %128, 1, !dbg !1193
  store i32 %inc430, i32* %arrayidx429, align 4, !dbg !1193, !tbaa !145
  %129 = load i32* @white_to_move, align 4, !dbg !1194, !tbaa !145
  %xor431 = xor i32 %129, 1, !dbg !1194
  store i32 %xor431, i32* @white_to_move, align 4, !dbg !1194, !tbaa !145
  %arrayidx433 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 6, i64 %idxprom21, !dbg !1195
  %130 = load i32* %arrayidx433, align 4, !dbg !1195, !tbaa !145
  %131 = load i32* @hash, align 4, !dbg !1195, !tbaa !145
  %xor434 = xor i32 %131, %130, !dbg !1195
  %arrayidx436 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 6, i64 %idxprom64, !dbg !1196
  %132 = load i32* %arrayidx436, align 4, !dbg !1196, !tbaa !145
  %xor437 = xor i32 %xor434, %132, !dbg !1196
  store i32 %xor437, i32* @hash, align 4, !dbg !1196, !tbaa !145
  switch i32 %4, label %if.end459 [
    i32 3, label %if.then439
    i32 4, label %if.then449
  ], !dbg !1197

if.then439:                                       ; preds = %if.else420
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 117), align 4, !dbg !1198, !tbaa !145
  store i32 8, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 115), align 4, !dbg !1200, !tbaa !145
  %133 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 117), align 4, !dbg !1201, !tbaa !145
  %inc440 = add nsw i32 %133, 1, !dbg !1201
  store i32 %inc440, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 117), align 4, !dbg !1201, !tbaa !145
  %134 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 115), align 4, !dbg !1202, !tbaa !145
  %inc441 = add nsw i32 %134, 1, !dbg !1202
  store i32 %inc441, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 115), align 4, !dbg !1202, !tbaa !145
  store i32 3, i32* @black_castled, align 4, !dbg !1203, !tbaa !145
  %135 = load i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 117), align 4, !dbg !1204, !tbaa !145
  %idxprom442 = sext i32 %135 to i64, !dbg !1204
  %arrayidx443 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom442, !dbg !1204
  store i32 115, i32* %arrayidx443, align 4, !dbg !1204, !tbaa !145
  store i32 %135, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 115), align 4, !dbg !1205, !tbaa !145
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 117), align 4, !dbg !1206, !tbaa !145
  %136 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 8, i64 117), align 4, !dbg !1207, !tbaa !145
  %xor444 = xor i32 %xor437, %136, !dbg !1207
  %137 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 8, i64 115), align 4, !dbg !1208, !tbaa !145
  %xor445 = xor i32 %xor444, %137, !dbg !1208
  store i32 %xor445, i32* @hash, align 4, !dbg !1208, !tbaa !145
  %138 = load i32* @ply, align 4, !dbg !1209, !tbaa !145
  %inc446 = add nsw i32 %138, 1, !dbg !1209
  store i32 %inc446, i32* @ply, align 4, !dbg !1209, !tbaa !145
  br label %return, !dbg !1210

if.then449:                                       ; preds = %if.else420
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 110), align 4, !dbg !1211, !tbaa !145
  store i32 8, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 113), align 4, !dbg !1213, !tbaa !145
  %139 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 110), align 4, !dbg !1214, !tbaa !145
  %inc450 = add nsw i32 %139, 1, !dbg !1214
  store i32 %inc450, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 110), align 4, !dbg !1214, !tbaa !145
  %140 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 113), align 4, !dbg !1215, !tbaa !145
  %inc451 = add nsw i32 %140, 1, !dbg !1215
  store i32 %inc451, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 113), align 4, !dbg !1215, !tbaa !145
  store i32 4, i32* @black_castled, align 4, !dbg !1216, !tbaa !145
  %141 = load i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 110), align 4, !dbg !1217, !tbaa !145
  %idxprom452 = sext i32 %141 to i64, !dbg !1217
  %arrayidx453 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom452, !dbg !1217
  store i32 113, i32* %arrayidx453, align 4, !dbg !1217, !tbaa !145
  store i32 %141, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 113), align 4, !dbg !1218, !tbaa !145
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 110), align 4, !dbg !1219, !tbaa !145
  %142 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 8, i64 110), align 4, !dbg !1220, !tbaa !145
  %xor454 = xor i32 %xor437, %142, !dbg !1220
  %143 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 8, i64 113), align 4, !dbg !1221, !tbaa !145
  %xor455 = xor i32 %xor454, %143, !dbg !1221
  store i32 %xor455, i32* @hash, align 4, !dbg !1221, !tbaa !145
  %144 = load i32* @ply, align 4, !dbg !1222, !tbaa !145
  %inc456 = add nsw i32 %144, 1, !dbg !1222
  store i32 %inc456, i32* @ply, align 4, !dbg !1222, !tbaa !145
  br label %return, !dbg !1223

if.end459:                                        ; preds = %if.else420
  %145 = load i32* @ply, align 4, !dbg !1224, !tbaa !145
  %inc460 = add nsw i32 %145, 1, !dbg !1224
  store i32 %inc460, i32* @ply, align 4, !dbg !1224, !tbaa !145
  br label %return, !dbg !1225

return:                                           ; preds = %if.end459, %if.then449, %if.then439, %if.end418, %if.then409, %if.then399, %if.then347, %if.end320, %if.then269, %if.then238, %if.end213, %if.then162, %if.then131, %cond.end52
  ret void, !dbg !1226
}
