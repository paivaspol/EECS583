define void @make(%struct.move_s* nocapture %moves, i32 %i) #0 {
entry:
  %idxprom = sext i32 %i to i64
  %ep1 = getelementptr inbounds %struct.move_s* %moves, i64 %idxprom, i32 5
  %0 = load i32* %ep1, align 4, !tbaa !0
  %from4 = getelementptr inbounds %struct.move_s* %moves, i64 %idxprom, i32 0
  %1 = load i32* %from4, align 4, !tbaa !0
  %target7 = getelementptr inbounds %struct.move_s* %moves, i64 %idxprom, i32 1
  %2 = load i32* %target7, align 4, !tbaa !0
  %promoted13 = getelementptr inbounds %struct.move_s* %moves, i64 %idxprom, i32 3
  %3 = load i32* %promoted13, align 4, !tbaa !0
  %castled16 = getelementptr inbounds %struct.move_s* %moves, i64 %idxprom, i32 4
  %4 = load i32* %castled16, align 4, !tbaa !0
  %5 = load i32* @ep_square, align 4, !tbaa !0
  %6 = load i32* @ply, align 4, !tbaa !0
  %idxprom17 = sext i32 %6 to i64
  %epsq = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom17, i32 2
  store i32 %5, i32* %epsq, align 4, !tbaa !0
  store i32 0, i32* @ep_square, align 4, !tbaa !0
  %7 = load i32* @fifty, align 4, !tbaa !0
  %fifty = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom17, i32 3
  store i32 %7, i32* %fifty, align 4, !tbaa !0
  %idxprom21 = sext i32 %1 to i64
  %arrayidx22 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom21
  %8 = load i32* %arrayidx22, align 4, !tbaa !0
  %.off = add i32 %8, -1
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.end, label %lor.lhs.false26

lor.lhs.false26:                                  ; preds = %entry
  %idxprom27 = sext i32 %2 to i64
  %arrayidx28 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom27
  %9 = load i32* %arrayidx28, align 4, !tbaa !0
  %cmp29 = icmp eq i32 %9, 13
  %inc = add nsw i32 %7, 1
  %inc. = select i1 %cmp29, i32 %inc, i32 0
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false26, %entry
  %storemerge = phi i32 [ 0, %entry ], [ %inc., %lor.lhs.false26 ]
  store i32 %storemerge, i32* @fifty, align 4, !tbaa !0
  %cmp30 = icmp eq i32 %1, 0
  br i1 %cmp30, label %if.then31, label %if.else57

if.then31:                                        ; preds = %if.end
  %10 = load i32* @piece_count, align 4, !tbaa !0
  %inc32 = add nsw i32 %10, 1
  store i32 %inc32, i32* @piece_count, align 4, !tbaa !0
  br label %for.cond

for.cond:                                         ; preds = %for.cond, %if.then31
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond ], [ 1, %if.then31 ]
  %find_slot.0 = phi i32 [ %inc36, %for.cond ], [ 1, %if.then31 ]
  %arrayidx34 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %indvars.iv
  %11 = load i32* %arrayidx34, align 4, !tbaa !0
  %cmp35 = icmp eq i32 %11, 0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %inc36 = add nsw i32 %find_slot.0, 1
  br i1 %cmp35, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 %2, i32* %arrayidx34, align 4, !tbaa !0
  %arrayidx40 = getelementptr inbounds [62 x i32]* @is_promoted, i64 0, i64 %indvars.iv
  %12 = load i32* %arrayidx40, align 4, !tbaa !0
  %was_promoted = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom17, i32 1
  store i32 %12, i32* %was_promoted, align 4, !tbaa !0
  store i32 0, i32* %arrayidx40, align 4, !tbaa !0
  %idxprom45 = sext i32 %2 to i64
  %arrayidx46 = getelementptr inbounds [144 x i32]* @squares, i64 0, i64 %idxprom45
  store i32 %find_slot.0, i32* %arrayidx46, align 4, !tbaa !0
  %13 = load i32* @white_to_move, align 4, !tbaa !0
  %not.tobool = icmp eq i32 %13, 0
  %cond = zext i1 %not.tobool to i32
  tail call void @DropremoveHolding(i32 %3, i32 %cond) #2
  %idxprom47 = sext i32 %3 to i64
  %arrayidx48 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %idxprom47
  %14 = load i32* %arrayidx48, align 4, !tbaa !0
  %15 = load i32* @Material, align 4, !tbaa !0
  %add = add nsw i32 %15, %14
  store i32 %add, i32* @Material, align 4, !tbaa !0
  %arrayidx50 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom45
  store i32 %3, i32* %arrayidx50, align 4, !tbaa !0
  %arrayidx54 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom47, i64 %idxprom45
  %16 = load i32* %arrayidx54, align 4, !tbaa !0
  %17 = load i32* @hash, align 4, !tbaa !0
  %xor = xor i32 %17, %16
  store i32 %xor, i32* @hash, align 4, !tbaa !0
  %18 = load i32* @white_to_move, align 4, !tbaa !0
  %xor55 = xor i32 %18, 1
  store i32 %xor55, i32* @white_to_move, align 4, !tbaa !0
  %19 = load i32* @ply, align 4, !tbaa !0
  %inc56 = add nsw i32 %19, 1
  store i32 %inc56, i32* @ply, align 4, !tbaa !0
  br label %return

if.else57:                                        ; preds = %if.end
  %idxprom58 = sext i32 %2 to i64
  %arrayidx59 = getelementptr inbounds [144 x i32]* @squares, i64 0, i64 %idxprom58
  %20 = load i32* %arrayidx59, align 4, !tbaa !0
  %idxprom60 = sext i32 %20 to i64
  %arrayidx61 = getelementptr inbounds [62 x i32]* @is_promoted, i64 0, i64 %idxprom60
  %21 = load i32* %arrayidx61, align 4, !tbaa !0
  %was_promoted64 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom17, i32 1
  store i32 %21, i32* %was_promoted64, align 4, !tbaa !0
  %cap_num = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom17, i32 0
  store i32 %20, i32* %cap_num, align 4, !tbaa !0
  %arrayidx72 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom60
  store i32 0, i32* %arrayidx72, align 4, !tbaa !0
  %arrayidx74 = getelementptr inbounds [144 x i32]* @squares, i64 0, i64 %idxprom21
  %22 = load i32* %arrayidx74, align 4, !tbaa !0
  %idxprom75 = sext i32 %22 to i64
  %arrayidx76 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom75
  store i32 %2, i32* %arrayidx76, align 4, !tbaa !0
  store i32 %22, i32* %arrayidx59, align 4, !tbaa !0
  store i32 0, i32* %arrayidx74, align 4, !tbaa !0
  %tobool83 = icmp ne i32 %0, 0
  br i1 %tobool83, label %if.end119, label %if.then84

if.then84:                                        ; preds = %if.else57
  %arrayidx86 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom58
  %23 = load i32* %arrayidx86, align 4, !tbaa !0
  %cond454 = icmp eq i32 %23, 13
  br i1 %cond454, label %if.end119, label %sw.default

sw.default:                                       ; preds = %if.then84
  %24 = load i32* @Variant, align 4, !tbaa !0
  %25 = icmp ult i32 %24, 2
  br i1 %25, label %if.then90, label %if.end107

if.then90:                                        ; preds = %sw.default
  %tobool94 = icmp eq i32 %21, 0
  br i1 %tobool94, label %if.else100, label %if.then95

if.then95:                                        ; preds = %if.then90
  %call = tail call i32 @SwitchPromoted(i32 %23) #2
  %26 = load i32* @white_to_move, align 4, !tbaa !0
  %not.tobool98 = icmp eq i32 %26, 0
  %cond99 = zext i1 %not.tobool98 to i32
  tail call void @addHolding(i32 %call, i32 %cond99) #2
  br label %if.end107

if.else100:                                       ; preds = %if.then90
  %call103 = tail call i32 @SwitchColor(i32 %23) #2
  %27 = load i32* @white_to_move, align 4, !tbaa !0
  %not.tobool104 = icmp eq i32 %27, 0
  %cond105 = zext i1 %not.tobool104 to i32
  tail call void @addHolding(i32 %call103, i32 %cond105) #2
  br label %if.end107

if.end107:                                        ; preds = %if.then95, %if.else100, %sw.default
  %28 = load i32* %arrayidx86, align 4, !tbaa !0
  %idxprom110 = sext i32 %28 to i64
  %arrayidx111 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %idxprom110
  %29 = load i32* %arrayidx111, align 4, !tbaa !0
  %30 = load i32* @Material, align 4, !tbaa !0
  %sub = sub nsw i32 %30, %29
  store i32 %sub, i32* @Material, align 4, !tbaa !0
  %arrayidx117 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom110, i64 %idxprom58
  %31 = load i32* %arrayidx117, align 4, !tbaa !0
  %32 = load i32* @hash, align 4, !tbaa !0
  %xor118 = xor i32 %32, %31
  store i32 %xor118, i32* @hash, align 4, !tbaa !0
  %33 = load i32* @piece_count, align 4, !tbaa !0
  %dec = add nsw i32 %33, -1
  store i32 %dec, i32* @piece_count, align 4, !tbaa !0
  %.pre = load i32* %arrayidx22, align 4, !tbaa !0
  br label %if.end119

if.end119:                                        ; preds = %if.end107, %if.then84, %if.else57
  %34 = phi i32 [ %.pre, %if.end107 ], [ %8, %if.then84 ], [ %8, %if.else57 ]
  switch i32 %34, label %if.then340 [
    i32 1, label %if.then123
    i32 2, label %if.then230
    i32 5, label %if.then373
    i32 6, label %if.else413
  ]

if.then123:                                       ; preds = %if.end119
  %tobool124 = icmp eq i32 %3, 0
  br i1 %tobool124, label %if.end154, label %if.then125

if.then125:                                       ; preds = %if.then123
  %arrayidx127 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom58
  store i32 %3, i32* %arrayidx127, align 4, !tbaa !0
  store i32 13, i32* %arrayidx22, align 4, !tbaa !0
  %arrayidx131 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom58
  %35 = load i32* %arrayidx131, align 4, !tbaa !0
  %inc132 = add nsw i32 %35, 1
  store i32 %inc132, i32* %arrayidx131, align 4, !tbaa !0
  %arrayidx134 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21
  %36 = load i32* %arrayidx134, align 4, !tbaa !0
  %inc135 = add nsw i32 %36, 1
  store i32 %inc135, i32* %arrayidx134, align 4, !tbaa !0
  %37 = load i32* @white_to_move, align 4, !tbaa !0
  %xor136 = xor i32 %37, 1
  store i32 %xor136, i32* @white_to_move, align 4, !tbaa !0
  %38 = load i32* %arrayidx59, align 4, !tbaa !0
  %idxprom139 = sext i32 %38 to i64
  %arrayidx140 = getelementptr inbounds [62 x i32]* @is_promoted, i64 0, i64 %idxprom139
  store i32 1, i32* %arrayidx140, align 4, !tbaa !0
  %arrayidx142 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %idxprom21
  %39 = load i32* %arrayidx142, align 4, !tbaa !0
  %40 = load i32* @hash, align 4, !tbaa !0
  %xor143 = xor i32 %40, %39
  %idxprom145 = sext i32 %3 to i64
  %arrayidx147 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom145, i64 %idxprom58
  %41 = load i32* %arrayidx147, align 4, !tbaa !0
  %xor148 = xor i32 %xor143, %41
  store i32 %xor148, i32* @hash, align 4, !tbaa !0
  %42 = load i32* getelementptr inbounds ([14 x i32]* @material, i64 0, i64 1), align 4, !tbaa !0
  %43 = load i32* @Material, align 4, !tbaa !0
  %sub149 = sub nsw i32 %43, %42
  %arrayidx151 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %idxprom145
  %44 = load i32* %arrayidx151, align 4, !tbaa !0
  %add152 = add nsw i32 %sub149, %44
  store i32 %add152, i32* @Material, align 4, !tbaa !0
  %45 = load i32* @ply, align 4, !tbaa !0
  %inc153 = add nsw i32 %45, 1
  store i32 %inc153, i32* @ply, align 4, !tbaa !0
  br label %return

if.end154:                                        ; preds = %if.then123
  br i1 %tobool83, label %if.then156, label %if.end202

if.then156:                                       ; preds = %if.end154
  %arrayidx158 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %idxprom21
  %46 = load i32* %arrayidx158, align 4, !tbaa !0
  %47 = load i32* @hash, align 4, !tbaa !0
  %xor159 = xor i32 %47, %46
  %sub160 = add nsw i32 %2, -12
  %idxprom161 = sext i32 %sub160 to i64
  %arrayidx162 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %idxprom161
  %48 = load i32* %arrayidx162, align 4, !tbaa !0
  %xor163 = xor i32 %xor159, %48
  %arrayidx165 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %idxprom58
  %49 = load i32* %arrayidx165, align 4, !tbaa !0
  %xor166 = xor i32 %xor163, %49
  store i32 %xor166, i32* @hash, align 4, !tbaa !0
  %50 = load i32* getelementptr inbounds ([14 x i32]* @material, i64 0, i64 2), align 4, !tbaa !0
  %51 = load i32* @Material, align 4, !tbaa !0
  %sub167 = sub nsw i32 %51, %50
  store i32 %sub167, i32* @Material, align 4, !tbaa !0
  %arrayidx169 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom58
  store i32 1, i32* %arrayidx169, align 4, !tbaa !0
  store i32 13, i32* %arrayidx22, align 4, !tbaa !0
  tail call void @addHolding(i32 1, i32 0) #2
  %52 = load i32* @piece_count, align 4, !tbaa !0
  %dec172 = add nsw i32 %52, -1
  store i32 %dec172, i32* @piece_count, align 4, !tbaa !0
  %arrayidx175 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom161
  store i32 13, i32* %arrayidx175, align 4, !tbaa !0
  %arrayidx177 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom58
  %53 = load i32* %arrayidx177, align 4, !tbaa !0
  %inc178 = add nsw i32 %53, 1
  store i32 %inc178, i32* %arrayidx177, align 4, !tbaa !0
  %arrayidx180 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21
  %54 = load i32* %arrayidx180, align 4, !tbaa !0
  %inc181 = add nsw i32 %54, 1
  store i32 %inc181, i32* %arrayidx180, align 4, !tbaa !0
  %arrayidx184 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom161
  %55 = load i32* %arrayidx184, align 4, !tbaa !0
  %inc185 = add nsw i32 %55, 1
  store i32 %inc185, i32* %arrayidx184, align 4, !tbaa !0
  %56 = load i32* @white_to_move, align 4, !tbaa !0
  %xor186 = xor i32 %56, 1
  store i32 %xor186, i32* @white_to_move, align 4, !tbaa !0
  %arrayidx189 = getelementptr inbounds [144 x i32]* @squares, i64 0, i64 %idxprom161
  %57 = load i32* %arrayidx189, align 4, !tbaa !0
  %58 = load i32* @ply, align 4, !tbaa !0
  %idxprom190 = sext i32 %58 to i64
  %cap_num192 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom190, i32 0
  store i32 %57, i32* %cap_num192, align 4, !tbaa !0
  %idxprom196 = sext i32 %57 to i64
  %arrayidx197 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom196
  store i32 0, i32* %arrayidx197, align 4, !tbaa !0
  store i32 0, i32* %arrayidx189, align 4, !tbaa !0
  %inc201 = add nsw i32 %58, 1
  store i32 %inc201, i32* @ply, align 4, !tbaa !0
  br label %return

if.end202:                                        ; preds = %if.end154
  %add203 = add nsw i32 %1, 24
  %cmp204 = icmp eq i32 %2, %add203
  br i1 %cmp204, label %if.then205, label %if.end207

if.then205:                                       ; preds = %if.end202
  %add206 = add nsw i32 %1, 12
  store i32 %add206, i32* @ep_square, align 4, !tbaa !0
  br label %if.end207

if.end207:                                        ; preds = %if.end202, %if.then205
  %arrayidx209 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %idxprom21
  %59 = load i32* %arrayidx209, align 4, !tbaa !0
  %60 = load i32* @hash, align 4, !tbaa !0
  %xor210 = xor i32 %60, %59
  %arrayidx212 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %idxprom58
  %61 = load i32* %arrayidx212, align 4, !tbaa !0
  %xor213 = xor i32 %xor210, %61
  store i32 %xor213, i32* @hash, align 4, !tbaa !0
  %arrayidx215 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom58
  store i32 1, i32* %arrayidx215, align 4, !tbaa !0
  store i32 13, i32* %arrayidx22, align 4, !tbaa !0
  %arrayidx219 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom58
  %62 = load i32* %arrayidx219, align 4, !tbaa !0
  %inc220 = add nsw i32 %62, 1
  store i32 %inc220, i32* %arrayidx219, align 4, !tbaa !0
  %arrayidx222 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21
  %63 = load i32* %arrayidx222, align 4, !tbaa !0
  %inc223 = add nsw i32 %63, 1
  store i32 %inc223, i32* %arrayidx222, align 4, !tbaa !0
  %64 = load i32* @white_to_move, align 4, !tbaa !0
  %xor224 = xor i32 %64, 1
  store i32 %xor224, i32* @white_to_move, align 4, !tbaa !0
  %65 = load i32* @ply, align 4, !tbaa !0
  %inc225 = add nsw i32 %65, 1
  store i32 %inc225, i32* @ply, align 4, !tbaa !0
  br label %return

if.then230:                                       ; preds = %if.end119
  %tobool231 = icmp eq i32 %3, 0
  br i1 %tobool231, label %if.end261, label %if.then232

if.then232:                                       ; preds = %if.then230
  %arrayidx234 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom58
  store i32 %3, i32* %arrayidx234, align 4, !tbaa !0
  store i32 13, i32* %arrayidx22, align 4, !tbaa !0
  %arrayidx238 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom58
  %66 = load i32* %arrayidx238, align 4, !tbaa !0
  %inc239 = add nsw i32 %66, 1
  store i32 %inc239, i32* %arrayidx238, align 4, !tbaa !0
  %arrayidx241 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21
  %67 = load i32* %arrayidx241, align 4, !tbaa !0
  %inc242 = add nsw i32 %67, 1
  store i32 %inc242, i32* %arrayidx241, align 4, !tbaa !0
  %68 = load i32* @white_to_move, align 4, !tbaa !0
  %xor243 = xor i32 %68, 1
  store i32 %xor243, i32* @white_to_move, align 4, !tbaa !0
  %69 = load i32* %arrayidx59, align 4, !tbaa !0
  %idxprom246 = sext i32 %69 to i64
  %arrayidx247 = getelementptr inbounds [62 x i32]* @is_promoted, i64 0, i64 %idxprom246
  store i32 1, i32* %arrayidx247, align 4, !tbaa !0
  %arrayidx249 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %idxprom21
  %70 = load i32* %arrayidx249, align 4, !tbaa !0
  %71 = load i32* @hash, align 4, !tbaa !0
  %xor250 = xor i32 %71, %70
  %idxprom252 = sext i32 %3 to i64
  %arrayidx254 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom252, i64 %idxprom58
  %72 = load i32* %arrayidx254, align 4, !tbaa !0
  %xor255 = xor i32 %xor250, %72
  store i32 %xor255, i32* @hash, align 4, !tbaa !0
  %73 = load i32* getelementptr inbounds ([14 x i32]* @material, i64 0, i64 2), align 4, !tbaa !0
  %74 = load i32* @Material, align 4, !tbaa !0
  %sub256 = sub nsw i32 %74, %73
  %arrayidx258 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %idxprom252
  %75 = load i32* %arrayidx258, align 4, !tbaa !0
  %add259 = add nsw i32 %sub256, %75
  store i32 %add259, i32* @Material, align 4, !tbaa !0
  %76 = load i32* @ply, align 4, !tbaa !0
  %inc260 = add nsw i32 %76, 1
  store i32 %inc260, i32* @ply, align 4, !tbaa !0
  br label %return

if.end261:                                        ; preds = %if.then230
  br i1 %tobool83, label %if.then263, label %if.end309

if.then263:                                       ; preds = %if.end261
  %arrayidx265 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %idxprom21
  %77 = load i32* %arrayidx265, align 4, !tbaa !0
  %78 = load i32* @hash, align 4, !tbaa !0
  %xor266 = xor i32 %78, %77
  %add267 = add nsw i32 %2, 12
  %idxprom268 = sext i32 %add267 to i64
  %arrayidx269 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 1, i64 %idxprom268
  %79 = load i32* %arrayidx269, align 4, !tbaa !0
  %xor270 = xor i32 %xor266, %79
  %arrayidx272 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %idxprom58
  %80 = load i32* %arrayidx272, align 4, !tbaa !0
  %xor273 = xor i32 %xor270, %80
  store i32 %xor273, i32* @hash, align 4, !tbaa !0
  %81 = load i32* getelementptr inbounds ([14 x i32]* @material, i64 0, i64 1), align 4, !tbaa !0
  %82 = load i32* @Material, align 4, !tbaa !0
  %sub274 = sub nsw i32 %82, %81
  store i32 %sub274, i32* @Material, align 4, !tbaa !0
  %arrayidx276 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom58
  store i32 2, i32* %arrayidx276, align 4, !tbaa !0
  store i32 13, i32* %arrayidx22, align 4, !tbaa !0
  tail call void @addHolding(i32 2, i32 1) #2
  %83 = load i32* @piece_count, align 4, !tbaa !0
  %dec279 = add nsw i32 %83, -1
  store i32 %dec279, i32* @piece_count, align 4, !tbaa !0
  %arrayidx282 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom268
  store i32 13, i32* %arrayidx282, align 4, !tbaa !0
  %arrayidx284 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom58
  %84 = load i32* %arrayidx284, align 4, !tbaa !0
  %inc285 = add nsw i32 %84, 1
  store i32 %inc285, i32* %arrayidx284, align 4, !tbaa !0
  %arrayidx287 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21
  %85 = load i32* %arrayidx287, align 4, !tbaa !0
  %inc288 = add nsw i32 %85, 1
  store i32 %inc288, i32* %arrayidx287, align 4, !tbaa !0
  %arrayidx291 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom268
  %86 = load i32* %arrayidx291, align 4, !tbaa !0
  %inc292 = add nsw i32 %86, 1
  store i32 %inc292, i32* %arrayidx291, align 4, !tbaa !0
  %87 = load i32* @white_to_move, align 4, !tbaa !0
  %xor293 = xor i32 %87, 1
  store i32 %xor293, i32* @white_to_move, align 4, !tbaa !0
  %arrayidx296 = getelementptr inbounds [144 x i32]* @squares, i64 0, i64 %idxprom268
  %88 = load i32* %arrayidx296, align 4, !tbaa !0
  %89 = load i32* @ply, align 4, !tbaa !0
  %idxprom297 = sext i32 %89 to i64
  %cap_num299 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i64 0, i64 %idxprom297, i32 0
  store i32 %88, i32* %cap_num299, align 4, !tbaa !0
  %idxprom303 = sext i32 %88 to i64
  %arrayidx304 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom303
  store i32 0, i32* %arrayidx304, align 4, !tbaa !0
  store i32 0, i32* %arrayidx296, align 4, !tbaa !0
  %inc308 = add nsw i32 %89, 1
  store i32 %inc308, i32* @ply, align 4, !tbaa !0
  br label %return

if.end309:                                        ; preds = %if.end261
  %sub310 = add nsw i32 %1, -24
  %cmp311 = icmp eq i32 %2, %sub310
  br i1 %cmp311, label %if.then312, label %if.end314

if.then312:                                       ; preds = %if.end309
  %sub313 = add nsw i32 %1, -12
  store i32 %sub313, i32* @ep_square, align 4, !tbaa !0
  br label %if.end314

if.end314:                                        ; preds = %if.end309, %if.then312
  %arrayidx316 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom58
  store i32 2, i32* %arrayidx316, align 4, !tbaa !0
  store i32 13, i32* %arrayidx22, align 4, !tbaa !0
  %arrayidx320 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom58
  %90 = load i32* %arrayidx320, align 4, !tbaa !0
  %inc321 = add nsw i32 %90, 1
  store i32 %inc321, i32* %arrayidx320, align 4, !tbaa !0
  %arrayidx323 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21
  %91 = load i32* %arrayidx323, align 4, !tbaa !0
  %inc324 = add nsw i32 %91, 1
  store i32 %inc324, i32* %arrayidx323, align 4, !tbaa !0
  %92 = load i32* @white_to_move, align 4, !tbaa !0
  %xor325 = xor i32 %92, 1
  store i32 %xor325, i32* @white_to_move, align 4, !tbaa !0
  %arrayidx327 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %idxprom21
  %93 = load i32* %arrayidx327, align 4, !tbaa !0
  %94 = load i32* @hash, align 4, !tbaa !0
  %xor328 = xor i32 %94, %93
  %arrayidx330 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 %idxprom58
  %95 = load i32* %arrayidx330, align 4, !tbaa !0
  %xor331 = xor i32 %xor328, %95
  store i32 %xor331, i32* @hash, align 4, !tbaa !0
  %96 = load i32* @ply, align 4, !tbaa !0
  %inc332 = add nsw i32 %96, 1
  store i32 %inc332, i32* @ply, align 4, !tbaa !0
  br label %return

if.then340:                                       ; preds = %if.end119
  %idxprom344 = sext i32 %34 to i64
  %arrayidx346 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom344, i64 %idxprom21
  %97 = load i32* %arrayidx346, align 4, !tbaa !0
  %98 = load i32* @hash, align 4, !tbaa !0
  %xor347 = xor i32 %98, %97
  %arrayidx353 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom344, i64 %idxprom58
  %99 = load i32* %arrayidx353, align 4, !tbaa !0
  %xor354 = xor i32 %99, %xor347
  store i32 %xor354, i32* @hash, align 4, !tbaa !0
  %arrayidx358 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom58
  store i32 %34, i32* %arrayidx358, align 4, !tbaa !0
  store i32 13, i32* %arrayidx22, align 4, !tbaa !0
  %arrayidx362 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom58
  %100 = load i32* %arrayidx362, align 4, !tbaa !0
  %inc363 = add nsw i32 %100, 1
  store i32 %inc363, i32* %arrayidx362, align 4, !tbaa !0
  %arrayidx365 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21
  %101 = load i32* %arrayidx365, align 4, !tbaa !0
  %inc366 = add nsw i32 %101, 1
  store i32 %inc366, i32* %arrayidx365, align 4, !tbaa !0
  %102 = load i32* @white_to_move, align 4, !tbaa !0
  %xor367 = xor i32 %102, 1
  store i32 %xor367, i32* @white_to_move, align 4, !tbaa !0
  %103 = load i32* @ply, align 4, !tbaa !0
  %inc368 = add nsw i32 %103, 1
  store i32 %inc368, i32* @ply, align 4, !tbaa !0
  br label %return

if.then373:                                       ; preds = %if.end119
  store i32 %2, i32* @wking_loc, align 4, !tbaa !0
  %arrayidx375 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom58
  store i32 5, i32* %arrayidx375, align 4, !tbaa !0
  store i32 13, i32* %arrayidx22, align 4, !tbaa !0
  %arrayidx379 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom58
  %104 = load i32* %arrayidx379, align 4, !tbaa !0
  %inc380 = add nsw i32 %104, 1
  store i32 %inc380, i32* %arrayidx379, align 4, !tbaa !0
  %arrayidx382 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21
  %105 = load i32* %arrayidx382, align 4, !tbaa !0
  %inc383 = add nsw i32 %105, 1
  store i32 %inc383, i32* %arrayidx382, align 4, !tbaa !0
  %106 = load i32* @white_to_move, align 4, !tbaa !0
  %xor384 = xor i32 %106, 1
  store i32 %xor384, i32* @white_to_move, align 4, !tbaa !0
  %arrayidx386 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 5, i64 %idxprom21
  %107 = load i32* %arrayidx386, align 4, !tbaa !0
  %108 = load i32* @hash, align 4, !tbaa !0
  %xor387 = xor i32 %108, %107
  %arrayidx389 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 5, i64 %idxprom58
  %109 = load i32* %arrayidx389, align 4, !tbaa !0
  %xor390 = xor i32 %xor387, %109
  store i32 %xor390, i32* @hash, align 4, !tbaa !0
  switch i32 %4, label %if.end411 [
    i32 1, label %if.then392
    i32 2, label %if.then402
  ]

if.then392:                                       ; preds = %if.then373
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 33), align 4, !tbaa !0
  store i32 7, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 31), align 4, !tbaa !0
  %110 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 33), align 4, !tbaa !0
  %inc393 = add nsw i32 %110, 1
  store i32 %inc393, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 33), align 4, !tbaa !0
  %111 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 31), align 4, !tbaa !0
  %inc394 = add nsw i32 %111, 1
  store i32 %inc394, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 31), align 4, !tbaa !0
  store i32 1, i32* @white_castled, align 4, !tbaa !0
  %112 = load i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 33), align 4, !tbaa !0
  %idxprom395 = sext i32 %112 to i64
  %arrayidx396 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom395
  store i32 31, i32* %arrayidx396, align 4, !tbaa !0
  store i32 %112, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 31), align 4, !tbaa !0
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 33), align 4, !tbaa !0
  %113 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 7, i64 33), align 4, !tbaa !0
  %xor397 = xor i32 %xor390, %113
  %114 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 7, i64 31), align 4, !tbaa !0
  %xor398 = xor i32 %xor397, %114
  store i32 %xor398, i32* @hash, align 4, !tbaa !0
  %115 = load i32* @ply, align 4, !tbaa !0
  %inc399 = add nsw i32 %115, 1
  store i32 %inc399, i32* @ply, align 4, !tbaa !0
  br label %return

if.then402:                                       ; preds = %if.then373
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 26), align 4, !tbaa !0
  store i32 7, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 29), align 4, !tbaa !0
  %116 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 26), align 4, !tbaa !0
  %inc403 = add nsw i32 %116, 1
  store i32 %inc403, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 26), align 4, !tbaa !0
  %117 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 29), align 4, !tbaa !0
  %inc404 = add nsw i32 %117, 1
  store i32 %inc404, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 29), align 4, !tbaa !0
  store i32 2, i32* @white_castled, align 4, !tbaa !0
  %118 = load i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 26), align 4, !tbaa !0
  %idxprom405 = sext i32 %118 to i64
  %arrayidx406 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom405
  store i32 29, i32* %arrayidx406, align 4, !tbaa !0
  store i32 %118, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 29), align 4, !tbaa !0
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 26), align 4, !tbaa !0
  %119 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 7, i64 26), align 4, !tbaa !0
  %xor407 = xor i32 %xor390, %119
  %120 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 7, i64 29), align 4, !tbaa !0
  %xor408 = xor i32 %xor407, %120
  store i32 %xor408, i32* @hash, align 4, !tbaa !0
  %121 = load i32* @ply, align 4, !tbaa !0
  %inc409 = add nsw i32 %121, 1
  store i32 %inc409, i32* @ply, align 4, !tbaa !0
  br label %return

if.end411:                                        ; preds = %if.then373
  %122 = load i32* @ply, align 4, !tbaa !0
  %inc412 = add nsw i32 %122, 1
  store i32 %inc412, i32* @ply, align 4, !tbaa !0
  br label %return

if.else413:                                       ; preds = %if.end119
  store i32 %2, i32* @bking_loc, align 4, !tbaa !0
  %arrayidx415 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom58
  store i32 6, i32* %arrayidx415, align 4, !tbaa !0
  store i32 13, i32* %arrayidx22, align 4, !tbaa !0
  %arrayidx419 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom58
  %123 = load i32* %arrayidx419, align 4, !tbaa !0
  %inc420 = add nsw i32 %123, 1
  store i32 %inc420, i32* %arrayidx419, align 4, !tbaa !0
  %arrayidx422 = getelementptr inbounds [144 x i32]* @moved, i64 0, i64 %idxprom21
  %124 = load i32* %arrayidx422, align 4, !tbaa !0
  %inc423 = add nsw i32 %124, 1
  store i32 %inc423, i32* %arrayidx422, align 4, !tbaa !0
  %125 = load i32* @white_to_move, align 4, !tbaa !0
  %xor424 = xor i32 %125, 1
  store i32 %xor424, i32* @white_to_move, align 4, !tbaa !0
  %arrayidx426 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 6, i64 %idxprom21
  %126 = load i32* %arrayidx426, align 4, !tbaa !0
  %127 = load i32* @hash, align 4, !tbaa !0
  %xor427 = xor i32 %127, %126
  %arrayidx429 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 6, i64 %idxprom58
  %128 = load i32* %arrayidx429, align 4, !tbaa !0
  %xor430 = xor i32 %xor427, %128
  store i32 %xor430, i32* @hash, align 4, !tbaa !0
  switch i32 %4, label %if.end452 [
    i32 3, label %if.then432
    i32 4, label %if.then442
  ]

if.then432:                                       ; preds = %if.else413
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 117), align 4, !tbaa !0
  store i32 8, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 115), align 4, !tbaa !0
  %129 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 117), align 4, !tbaa !0
  %inc433 = add nsw i32 %129, 1
  store i32 %inc433, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 117), align 4, !tbaa !0
  %130 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 115), align 4, !tbaa !0
  %inc434 = add nsw i32 %130, 1
  store i32 %inc434, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 115), align 4, !tbaa !0
  store i32 3, i32* @black_castled, align 4, !tbaa !0
  %131 = load i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 117), align 4, !tbaa !0
  %idxprom435 = sext i32 %131 to i64
  %arrayidx436 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom435
  store i32 115, i32* %arrayidx436, align 4, !tbaa !0
  store i32 %131, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 115), align 4, !tbaa !0
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 117), align 4, !tbaa !0
  %132 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 8, i64 117), align 4, !tbaa !0
  %xor437 = xor i32 %xor430, %132
  %133 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 8, i64 115), align 4, !tbaa !0
  %xor438 = xor i32 %xor437, %133
  store i32 %xor438, i32* @hash, align 4, !tbaa !0
  %134 = load i32* @ply, align 4, !tbaa !0
  %inc439 = add nsw i32 %134, 1
  store i32 %inc439, i32* @ply, align 4, !tbaa !0
  br label %return

if.then442:                                       ; preds = %if.else413
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 110), align 4, !tbaa !0
  store i32 8, i32* getelementptr inbounds ([144 x i32]* @board, i64 0, i64 113), align 4, !tbaa !0
  %135 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 110), align 4, !tbaa !0
  %inc443 = add nsw i32 %135, 1
  store i32 %inc443, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 110), align 4, !tbaa !0
  %136 = load i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 113), align 4, !tbaa !0
  %inc444 = add nsw i32 %136, 1
  store i32 %inc444, i32* getelementptr inbounds ([144 x i32]* @moved, i64 0, i64 113), align 4, !tbaa !0
  store i32 4, i32* @black_castled, align 4, !tbaa !0
  %137 = load i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 110), align 4, !tbaa !0
  %idxprom445 = sext i32 %137 to i64
  %arrayidx446 = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %idxprom445
  store i32 113, i32* %arrayidx446, align 4, !tbaa !0
  store i32 %137, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 113), align 4, !tbaa !0
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i64 0, i64 110), align 4, !tbaa !0
  %138 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 8, i64 110), align 4, !tbaa !0
  %xor447 = xor i32 %xor430, %138
  %139 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 8, i64 113), align 4, !tbaa !0
  %xor448 = xor i32 %xor447, %139
  store i32 %xor448, i32* @hash, align 4, !tbaa !0
  %140 = load i32* @ply, align 4, !tbaa !0
  %inc449 = add nsw i32 %140, 1
  store i32 %inc449, i32* @ply, align 4, !tbaa !0
  br label %return

if.end452:                                        ; preds = %if.else413
  %141 = load i32* @ply, align 4, !tbaa !0
  %inc453 = add nsw i32 %141, 1
  store i32 %inc453, i32* @ply, align 4, !tbaa !0
  br label %return

return:                                           ; preds = %if.end452, %if.then442, %if.then432, %if.end411, %if.then402, %if.then392, %if.then340, %if.end314, %if.then263, %if.then232, %if.end207, %if.then156, %if.then125, %for.end
  ret void
}
