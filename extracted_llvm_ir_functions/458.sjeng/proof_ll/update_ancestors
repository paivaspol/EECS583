define void @update_ancestors(%struct.node* %node) #0 {
entry:
  %cmp16 = icmp eq %struct.node* %node, null
  br i1 %cmp16, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %if.end
  %tnode.017 = phi %struct.node* [ %1, %if.end ], [ %node, %entry ]
  tail call void @set_proof_and_disproof_numbers(%struct.node* %tnode.017) #5
  %target = getelementptr inbounds %struct.node* %tnode.017, i64 0, i32 8, i32 1
  %0 = load i32* %target, align 4, !tbaa !0
  %cmp1 = icmp eq i32 %0, 0
  br i1 %cmp1, label %if.end, label %if.then

if.then:                                          ; preds = %while.body
  %move = getelementptr inbounds %struct.node* %tnode.017, i64 0, i32 8
  tail call void @unmake(%struct.move_s* %move, i32 0) #6
  br label %if.end

if.end:                                           ; preds = %while.body, %if.then
  %parent = getelementptr inbounds %struct.node* %tnode.017, i64 0, i32 7
  %1 = load %struct.node** %parent, align 8, !tbaa !3
  %cmp = icmp eq %struct.node* %1, null
  br i1 %cmp, label %while.end, label %while.body

while.end:                                        ; preds = %if.end, %entry
  %prevnode.0.lcssa = phi %struct.node* [ null, %entry ], [ %tnode.017, %if.end ]
  %target4 = getelementptr inbounds %struct.node* %prevnode.0.lcssa, i64 0, i32 8, i32 1
  %2 = load i32* %target4, align 4, !tbaa !0
  %cmp5 = icmp eq i32 %2, 0
  br i1 %cmp5, label %if.end8, label %if.then6

if.then6:                                         ; preds = %while.end
  %move3 = getelementptr inbounds %struct.node* %prevnode.0.lcssa, i64 0, i32 8
  tail call void @make(%struct.move_s* %move3, i32 0) #6
  br label %if.end8

if.end8:                                          ; preds = %while.end, %if.then6
  ret void
}
