define void @develop_node(%struct.node* %node) #0 {
entry:
  %moves = alloca [512 x %struct.move_s], align 16
  call void @llvm.dbg.value(metadata !{%struct.node* %node}, i64 0, metadata !104), !dbg !555
  %0 = bitcast [512 x %struct.move_s]* %moves to i8*, !dbg !556
  call void @llvm.lifetime.start(i64 12288, i8* %0) #3, !dbg !556
  call void @llvm.dbg.declare(metadata !{[512 x %struct.move_s]* %moves}, metadata !106), !dbg !556
  %call = call i32 @in_check() #7, !dbg !557
  call void @llvm.dbg.value(metadata !{i32 %call}, i64 0, metadata !111), !dbg !557
  %1 = load i32* @Variant, align 4, !dbg !558, !tbaa !205
  %cmp = icmp eq i32 %1, 4, !dbg !558
  br i1 %cmp, label %if.else, label %if.then, !dbg !558

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata !8, i64 0, metadata !105), !dbg !559
  %arrayidx = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 0, !dbg !561
  call void @gen(%struct.move_s* %arrayidx) #7, !dbg !561
  %2 = load i32* @numb_moves, align 4, !dbg !562, !tbaa !205
  call void @llvm.dbg.value(metadata !{i32 %2}, i64 0, metadata !105), !dbg !562
  br label %if.end13, !dbg !563

if.else:                                          ; preds = %entry
  store i32 1, i32* @captures, align 4, !dbg !564, !tbaa !206
  call void @llvm.dbg.value(metadata !8, i64 0, metadata !110), !dbg !566
  call void @llvm.dbg.value(metadata !8, i64 0, metadata !105), !dbg !567
  %arrayidx1 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 0, !dbg !568
  call void @gen(%struct.move_s* %arrayidx1) #7, !dbg !568
  %3 = load i32* @numb_moves, align 4, !dbg !569, !tbaa !205
  call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !105), !dbg !569
  store i32 0, i32* @captures, align 4, !dbg !570, !tbaa !206
  call void @llvm.dbg.value(metadata !8, i64 0, metadata !107), !dbg !571
  %cmp2119 = icmp sgt i32 %3, 0, !dbg !571
  br i1 %cmp2119, label %for.body, label %if.then10.critedge, !dbg !571

for.cond:                                         ; preds = %for.body
  %cmp2 = icmp slt i32 %inc, %3, !dbg !571
  br i1 %cmp2, label %for.body, label %if.then10.critedge, !dbg !571

for.body:                                         ; preds = %if.else, %for.cond
  %i.0120 = phi i32 [ %inc, %for.cond ], [ 0, %if.else ]
  call void @make(%struct.move_s* %arrayidx1, i32 %i.0120) #7, !dbg !573
  %call5 = call i32 @check_legal(%struct.move_s* %arrayidx1, i32 %i.0120, i32 %call) #7, !dbg !575
  %tobool = icmp eq i32 %call5, 0, !dbg !575
  call void @unmake(%struct.move_s* %arrayidx1, i32 %i.0120) #7, !dbg !576
  %inc = add nsw i32 %i.0120, 1, !dbg !571
  call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !107), !dbg !571
  br i1 %tobool, label %for.cond, label %if.end13, !dbg !575

if.then10.critedge:                               ; preds = %for.cond, %if.else
  store i32 0, i32* @captures, align 4, !dbg !577, !tbaa !206
  call void @llvm.dbg.value(metadata !8, i64 0, metadata !105), !dbg !579
  call void @gen(%struct.move_s* %arrayidx1) #7, !dbg !580
  %4 = load i32* @numb_moves, align 4, !dbg !581, !tbaa !205
  call void @llvm.dbg.value(metadata !{i32 %4}, i64 0, metadata !105), !dbg !581
  br label %if.end13, !dbg !582

if.end13:                                         ; preds = %for.body, %if.then10.critedge, %if.then
  %num_moves.0 = phi i32 [ %2, %if.then ], [ %4, %if.then10.critedge ], [ %3, %for.body ]
  %mul = shl i32 %num_moves.0, 3, !dbg !583
  tail call void @llvm.dbg.value(metadata !{i32 %mul}, i64 0, metadata !584), !dbg !585
  %5 = load i32* @bufftop, align 4, !dbg !586, !tbaa !205
  tail call void @llvm.dbg.value(metadata !{i32 %5}, i64 0, metadata !587), !dbg !586
  %add.i = add nsw i32 %5, %mul, !dbg !588
  store i32 %add.i, i32* @bufftop, align 4, !dbg !588, !tbaa !205
  %idxprom.i = sext i32 %5 to i64, !dbg !589
  %6 = load i8** @membuff, align 8, !dbg !589, !tbaa !210
  %arrayidx.i = getelementptr inbounds i8* %6, i64 %idxprom.i, !dbg !589
  %7 = bitcast i8* %arrayidx.i to %struct.node**, !dbg !583
  %children = getelementptr inbounds %struct.node* %node, i64 0, i32 6, !dbg !583
  store %struct.node** %7, %struct.node*** %children, align 8, !dbg !583, !tbaa !210
  call void @llvm.dbg.value(metadata !8, i64 0, metadata !108), !dbg !590
  call void @llvm.dbg.value(metadata !8, i64 0, metadata !107), !dbg !591
  %cmp17116 = icmp sgt i32 %num_moves.0, 0, !dbg !591
  br i1 %cmp17116, label %for.body19.lr.ph, label %for.end39, !dbg !591

for.body19.lr.ph:                                 ; preds = %if.end13
  %arrayidx21 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 0, !dbg !593
  br label %for.body19, !dbg !591

for.body19:                                       ; preds = %for.inc37, %for.body19.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body19.lr.ph ], [ %indvars.iv.next, %for.inc37 ]
  %l.0117 = phi i32 [ 0, %for.body19.lr.ph ], [ %l.1, %for.inc37 ]
  %8 = load i32* @hash, align 4, !dbg !595, !tbaa !205
  %9 = load i32* @move_number, align 4, !dbg !595, !tbaa !205
  %10 = load i32* @ply, align 4, !dbg !595, !tbaa !205
  %add = add i32 %9, -1, !dbg !595
  %sub = add i32 %add, %10, !dbg !595
  %idxprom = sext i32 %sub to i64, !dbg !595
  %arrayidx20 = getelementptr inbounds [600 x i32]* @hash_history, i64 0, i64 %idxprom, !dbg !595
  store i32 %8, i32* %arrayidx20, align 4, !dbg !595, !tbaa !205
  %11 = trunc i64 %indvars.iv to i32, !dbg !593
  call void @make(%struct.move_s* %arrayidx21, i32 %11) #7, !dbg !593
  %call23 = call i32 @check_legal(%struct.move_s* %arrayidx21, i32 %11, i32 %call) #7, !dbg !596
  %tobool24 = icmp eq i32 %call23, 0, !dbg !596
  br i1 %tobool24, label %if.else34, label %if.then25, !dbg !596

if.then25:                                        ; preds = %for.body19
  tail call void @llvm.dbg.value(metadata !597, i64 0, metadata !598), !dbg !601
  %12 = load i32* @bufftop, align 4, !dbg !602, !tbaa !205
  tail call void @llvm.dbg.value(metadata !{i32 %12}, i64 0, metadata !603), !dbg !602
  %add.i107 = add nsw i32 %12, 56, !dbg !604
  store i32 %add.i107, i32* @bufftop, align 4, !dbg !604, !tbaa !205
  %idxprom.i108 = sext i32 %12 to i64, !dbg !605
  %13 = load i8** @membuff, align 8, !dbg !605, !tbaa !210
  %arrayidx.i109 = getelementptr inbounds i8* %13, i64 %idxprom.i108, !dbg !605
  %14 = bitcast i8* %arrayidx.i109 to %struct.node*, !dbg !599
  call void @llvm.dbg.value(metadata !{%struct.node* %14}, i64 0, metadata !109), !dbg !599
  store i8 0, i8* %arrayidx.i109, align 1, !dbg !606, !tbaa !206
  %arrayidx.i109.sum = add i64 %idxprom.i108, 8, !dbg !607
  %disproof = getelementptr inbounds i8* %13, i64 %arrayidx.i109.sum, !dbg !607
  %15 = bitcast i8* %disproof to i32*, !dbg !607
  store i32 1, i32* %15, align 4, !dbg !607, !tbaa !205
  %arrayidx.i109.sum110 = add i64 %idxprom.i108, 4, !dbg !607
  %proof = getelementptr inbounds i8* %13, i64 %arrayidx.i109.sum110, !dbg !607
  %16 = bitcast i8* %proof to i32*, !dbg !607
  store i32 1, i32* %16, align 4, !dbg !607, !tbaa !205
  %arrayidx.i109.sum111 = add i64 %idxprom.i108, 1, !dbg !608
  %17 = getelementptr inbounds i8* %13, i64 %arrayidx.i109.sum111, !dbg !608
  store i8 0, i8* %17, align 1, !dbg !608, !tbaa !206
  %arrayidx.i109.sum112 = add i64 %idxprom.i108, 24, !dbg !609
  %parent = getelementptr inbounds i8* %13, i64 %arrayidx.i109.sum112, !dbg !609
  %18 = bitcast i8* %parent to %struct.node**, !dbg !609
  store %struct.node* %node, %struct.node** %18, align 8, !dbg !609, !tbaa !210
  %arrayidx.i109.sum113 = add i64 %idxprom.i108, 3, !dbg !610
  %19 = getelementptr inbounds i8* %13, i64 %arrayidx.i109.sum113, !dbg !610
  store i8 0, i8* %19, align 1, !dbg !610, !tbaa !206
  %arrayidx.i109.sum114 = add i64 %idxprom.i108, 2, !dbg !611
  %20 = getelementptr inbounds i8* %13, i64 %arrayidx.i109.sum114, !dbg !611
  store i8 0, i8* %20, align 1, !dbg !611, !tbaa !206
  %arrayidx.i109.sum115 = add i64 %idxprom.i108, 32, !dbg !612
  %move = getelementptr inbounds i8* %13, i64 %arrayidx.i109.sum115, !dbg !612
  %arrayidx28 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %indvars.iv, !dbg !612
  %21 = bitcast %struct.move_s* %arrayidx28 to i8*, !dbg !612
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %move, i8* %21, i64 24, i32 4, i1 false), !dbg !612, !tbaa.struct !613
  %idxprom29 = sext i32 %l.0117 to i64, !dbg !614
  %22 = load %struct.node*** %children, align 8, !dbg !614, !tbaa !210
  %arrayidx31 = getelementptr inbounds %struct.node** %22, i64 %idxprom29, !dbg !614
  store %struct.node* %14, %struct.node** %arrayidx31, align 8, !dbg !614, !tbaa !210
  %inc32 = add nsw i32 %l.0117, 1, !dbg !615
  call void @llvm.dbg.value(metadata !{i32 %inc32}, i64 0, metadata !108), !dbg !615
  call void @pn_eval(%struct.node* %14) #6, !dbg !616
  call void @set_proof_and_disproof_numbers(%struct.node* %14) #6, !dbg !617
  call void @unmake(%struct.move_s* %arrayidx21, i32 %11) #7, !dbg !618
  br label %for.inc37, !dbg !619

if.else34:                                        ; preds = %for.body19
  call void @unmake(%struct.move_s* %arrayidx21, i32 %11) #7, !dbg !620
  br label %for.inc37

for.inc37:                                        ; preds = %if.then25, %if.else34
  %l.1 = phi i32 [ %inc32, %if.then25 ], [ %l.0117, %if.else34 ]
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !591
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !591
  %exitcond = icmp eq i32 %lftr.wideiv, %num_moves.0, !dbg !591
  br i1 %exitcond, label %for.end39, label %for.body19, !dbg !591

for.end39:                                        ; preds = %for.inc37, %if.end13
  %l.0.lcssa = phi i32 [ 0, %if.end13 ], [ %l.1, %for.inc37 ]
  %expanded40 = getelementptr inbounds %struct.node* %node, i64 0, i32 2, !dbg !621
  store i8 1, i8* %expanded40, align 1, !dbg !621, !tbaa !206
  %conv41 = trunc i32 %l.0.lcssa to i8, !dbg !622
  %num_children42 = getelementptr inbounds %struct.node* %node, i64 0, i32 1, !dbg !622
  store i8 %conv41, i8* %num_children42, align 1, !dbg !622, !tbaa !206
  %conv44 = and i32 %l.0.lcssa, 255, !dbg !623
  %cmp45 = icmp eq i32 %conv44, 0, !dbg !623
  br i1 %cmp45, label %if.then47, label %if.end66, !dbg !623

if.then47:                                        ; preds = %for.end39
  store i8 0, i8* %expanded40, align 1, !dbg !624, !tbaa !206
  %evaluated49 = getelementptr inbounds %struct.node* %node, i64 0, i32 3, !dbg !626
  store i8 1, i8* %evaluated49, align 1, !dbg !626, !tbaa !206
  %23 = load i32* @Variant, align 4, !dbg !627, !tbaa !205
  %.off = add i32 %23, -3, !dbg !627
  %24 = icmp ugt i32 %.off, 1, !dbg !627
  br i1 %24, label %if.then54, label %if.else56, !dbg !627

if.then54:                                        ; preds = %if.then47
  %value55 = getelementptr inbounds %struct.node* %node, i64 0, i32 0, !dbg !628
  store i8 3, i8* %value55, align 1, !dbg !628, !tbaa !206
  br label %if.end66, !dbg !630

if.else56:                                        ; preds = %if.then47
  %25 = load i32* @white_to_move, align 4, !dbg !631, !tbaa !205
  %not.tobool57 = icmp eq i32 %25, 0, !dbg !631
  %cond = zext i1 %not.tobool57 to i32, !dbg !631
  %26 = load i32* @root_to_move, align 4, !dbg !631, !tbaa !205
  %cmp58 = icmp eq i32 %cond, %26, !dbg !631
  %value61 = getelementptr inbounds %struct.node* %node, i64 0, i32 0, !dbg !633
  br i1 %cmp58, label %if.then60, label %if.else62, !dbg !631

if.then60:                                        ; preds = %if.else56
  store i8 1, i8* %value61, align 1, !dbg !633, !tbaa !206
  br label %if.end66, !dbg !635

if.else62:                                        ; preds = %if.else56
  store i8 0, i8* %value61, align 1, !dbg !636, !tbaa !206
  br label %if.end66

if.end66:                                         ; preds = %if.then54, %if.else62, %if.then60, %for.end39
  %27 = load i32* @nodecount, align 4, !dbg !638, !tbaa !205
  %add67 = add nsw i32 %27, %num_moves.0, !dbg !638
  store i32 %add67, i32* @nodecount, align 4, !dbg !638, !tbaa !205
  %28 = load i32* @frees, align 4, !dbg !639, !tbaa !205
  %add68 = add nsw i32 %28, %num_moves.0, !dbg !639
  store i32 %add68, i32* @frees, align 4, !dbg !639, !tbaa !205
  call void @llvm.lifetime.end(i64 12288, i8* %0) #3, !dbg !640
  ret void, !dbg !640
}
