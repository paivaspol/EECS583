define void @develop_node(%struct.node* %node) #0 {
  %moves = alloca [512 x %struct.move_s], align 16
  tail call void @llvm.dbg.value(metadata %struct.node* %node, i64 0, metadata !108, metadata !211), !dbg !905
  %1 = bitcast [512 x %struct.move_s]* %moves to i8*, !dbg !906
  call void @llvm.lifetime.start(i64 12288, i8* %1) #3, !dbg !906
  tail call void @llvm.dbg.declare(metadata [512 x %struct.move_s]* %moves, metadata !110, metadata !211), !dbg !907
  %2 = tail call i32 @in_check() #6, !dbg !908
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !115, metadata !211), !dbg !909
  %3 = load i32* @Variant, align 4, !dbg !910, !tbaa !214
  %4 = icmp eq i32 %3, 4, !dbg !912
  br i1 %4, label %8, label %5, !dbg !913

; <label>:5                                       ; preds = %0
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !109, metadata !211), !dbg !914
  %6 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 0, !dbg !915
  call void @gen(%struct.move_s* %6) #6, !dbg !917
  %7 = load i32* @numb_moves, align 4, !dbg !918, !tbaa !214
  call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !109, metadata !211), !dbg !914
  br label %.loopexit, !dbg !919

; <label>:8                                       ; preds = %0
  store i32 1, i32* @captures, align 4, !dbg !920, !tbaa !407
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !114, metadata !211), !dbg !922
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !109, metadata !211), !dbg !914
  %9 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 0, !dbg !923
  call void @gen(%struct.move_s* %9) #6, !dbg !924
  %10 = load i32* @numb_moves, align 4, !dbg !925, !tbaa !214
  call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !109, metadata !211), !dbg !914
  store i32 0, i32* @captures, align 4, !dbg !926, !tbaa !407
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !111, metadata !211), !dbg !927
  %11 = icmp sgt i32 %10, 0, !dbg !928
  br i1 %11, label %.lr.ph12, label %.critedge, !dbg !931

; <label>:12                                      ; preds = %.lr.ph12
  %13 = icmp slt i32 %16, %10, !dbg !928
  br i1 %13, label %.lr.ph12, label %.critedge, !dbg !931

.lr.ph12:                                         ; preds = %8, %12
  %i.010 = phi i32 [ %16, %12 ], [ 0, %8 ]
  call void @make(%struct.move_s* %9, i32 %i.010) #6, !dbg !932
  %14 = call i32 @check_legal(%struct.move_s* %9, i32 %i.010, i32 %2) #6, !dbg !934
  %15 = icmp eq i32 %14, 0, !dbg !934
  call void @unmake(%struct.move_s* %9, i32 %i.010) #6, !dbg !936
  %16 = add nuw nsw i32 %i.010, 1, !dbg !937
  call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !111, metadata !211), !dbg !927
  br i1 %15, label %12, label %.loopexit, !dbg !938

.critedge:                                        ; preds = %12, %8
  store i32 0, i32* @captures, align 4, !dbg !939, !tbaa !407
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !109, metadata !211), !dbg !914
  call void @gen(%struct.move_s* %9) #6, !dbg !942
  %17 = load i32* @numb_moves, align 4, !dbg !943, !tbaa !214
  call void @llvm.dbg.value(metadata i32 %17, i64 0, metadata !109, metadata !211), !dbg !914
  br label %.loopexit, !dbg !944

.loopexit:                                        ; preds = %.lr.ph12, %.critedge, %5
  %num_moves.0 = phi i32 [ %7, %5 ], [ %17, %.critedge ], [ %10, %.lr.ph12 ]
  %18 = shl i32 %num_moves.0, 3, !dbg !945
  tail call void @llvm.dbg.value(metadata i32 %18, i64 0, metadata !45, metadata !211), !dbg !946
  %19 = load i32* @bufftop, align 4, !dbg !948, !tbaa !214
  tail call void @llvm.dbg.value(metadata i32 %19, i64 0, metadata !46, metadata !211), !dbg !949
  %20 = add nsw i32 %19, %18, !dbg !950
  store i32 %20, i32* @bufftop, align 4, !dbg !950, !tbaa !214
  %21 = sext i32 %19 to i64, !dbg !951
  %22 = load i8** @membuff, align 8, !dbg !951, !tbaa !221
  %23 = getelementptr inbounds i8* %22, i64 %21, !dbg !951
  %24 = getelementptr inbounds %struct.node* %node, i64 0, i32 6, !dbg !952
  %25 = bitcast %struct.node*** %24 to i8**, !dbg !953
  store i8* %23, i8** %25, align 8, !dbg !953, !tbaa !232
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !112, metadata !211), !dbg !954
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !111, metadata !211), !dbg !927
  %26 = icmp sgt i32 %num_moves.0, 0, !dbg !955
  br i1 %26, label %.lr.ph, label %._crit_edge, !dbg !958

.lr.ph:                                           ; preds = %.loopexit
  %27 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 0, !dbg !959
  %28 = add i32 %num_moves.0, -1, !dbg !958
  br label %29, !dbg !958

; <label>:29                                      ; preds = %65, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %65 ]
  %l.08 = phi i32 [ 0, %.lr.ph ], [ %l.1, %65 ]
  %30 = load i32* @hash, align 4, !dbg !961, !tbaa !214
  %31 = load i32* @move_number, align 4, !dbg !962, !tbaa !214
  %32 = load i32* @ply, align 4, !dbg !963, !tbaa !214
  %33 = add i32 %31, -1, !dbg !964
  %34 = add i32 %33, %32, !dbg !965
  %35 = sext i32 %34 to i64, !dbg !966
  %36 = getelementptr inbounds [600 x i32]* @hash_history, i64 0, i64 %35, !dbg !966
  store i32 %30, i32* %36, align 4, !dbg !967, !tbaa !214
  %37 = trunc i64 %indvars.iv to i32, !dbg !968
  call void @make(%struct.move_s* %27, i32 %37) #6, !dbg !968
  %38 = call i32 @check_legal(%struct.move_s* %27, i32 %37, i32 %2) #6, !dbg !969
  %39 = icmp eq i32 %38, 0, !dbg !969
  br i1 %39, label %64, label %40, !dbg !971

; <label>:40                                      ; preds = %29
  tail call void @llvm.dbg.value(metadata i32 56, i64 0, metadata !45, metadata !211), !dbg !972
  %41 = load i32* @bufftop, align 4, !dbg !975, !tbaa !214
  tail call void @llvm.dbg.value(metadata i32 %41, i64 0, metadata !46, metadata !211), !dbg !976
  %42 = add nsw i32 %41, 56, !dbg !977
  store i32 %42, i32* @bufftop, align 4, !dbg !977, !tbaa !214
  %43 = sext i32 %41 to i64, !dbg !978
  %44 = load i8** @membuff, align 8, !dbg !978, !tbaa !221
  %45 = getelementptr inbounds i8* %44, i64 %43, !dbg !978
  %46 = bitcast i8* %45 to %struct.node*, !dbg !979
  call void @llvm.dbg.value(metadata %struct.node* %46, i64 0, metadata !113, metadata !211), !dbg !980
  store i8 0, i8* %45, align 1, !dbg !981, !tbaa !320
  %.sum = add nsw i64 %43, 8, !dbg !982
  %47 = getelementptr inbounds i8* %44, i64 %.sum, !dbg !982
  %48 = bitcast i8* %47 to i32*, !dbg !982
  store i32 1, i32* %48, align 4, !dbg !983, !tbaa !531
  %.sum2 = add nsw i64 %43, 4, !dbg !984
  %49 = getelementptr inbounds i8* %44, i64 %.sum2, !dbg !984
  %50 = bitcast i8* %49 to i32*, !dbg !984
  store i32 1, i32* %50, align 4, !dbg !985, !tbaa !534
  %.sum3 = add nsw i64 %43, 1, !dbg !986
  %51 = getelementptr inbounds i8* %44, i64 %.sum3, !dbg !986
  store i8 0, i8* %51, align 1, !dbg !987, !tbaa !240
  %.sum4 = add nsw i64 %43, 24, !dbg !988
  %52 = getelementptr inbounds i8* %44, i64 %.sum4, !dbg !988
  %53 = bitcast i8* %52 to %struct.node**, !dbg !988
  store %struct.node* %node, %struct.node** %53, align 8, !dbg !989, !tbaa !990
  %.sum5 = add nsw i64 %43, 3, !dbg !991
  %54 = getelementptr inbounds i8* %44, i64 %.sum5, !dbg !991
  store i8 0, i8* %54, align 1, !dbg !992, !tbaa !283
  %.sum6 = add nsw i64 %43, 2, !dbg !993
  %55 = getelementptr inbounds i8* %44, i64 %.sum6, !dbg !993
  store i8 0, i8* %55, align 1, !dbg !994, !tbaa !518
  %.sum7 = add nsw i64 %43, 32, !dbg !995
  %56 = getelementptr inbounds i8* %44, i64 %.sum7, !dbg !995
  %57 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %indvars.iv, !dbg !996
  %58 = bitcast %struct.move_s* %57 to i8*, !dbg !996
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %58, i64 24, i32 4, i1 false), !dbg !996, !tbaa.struct !997
  %59 = sext i32 %l.08 to i64, !dbg !998
  %60 = load %struct.node*** %24, align 8, !dbg !999, !tbaa !232
  %61 = getelementptr inbounds %struct.node** %60, i64 %59, !dbg !998
  %62 = bitcast %struct.node** %61 to i8**, !dbg !1000
  store i8* %45, i8** %62, align 8, !dbg !1000, !tbaa !221
  %63 = add nsw i32 %l.08, 1, !dbg !1001
  call void @llvm.dbg.value(metadata i32 %63, i64 0, metadata !112, metadata !211), !dbg !954
  call void @pn_eval(%struct.node* %46) #5, !dbg !1002
  call void @set_proof_and_disproof_numbers(%struct.node* %46) #5, !dbg !1003
  call void @unmake(%struct.move_s* %27, i32 %37) #6, !dbg !1004
  br label %65, !dbg !1005

; <label>:64                                      ; preds = %29
  call void @unmake(%struct.move_s* %27, i32 %37) #6, !dbg !1006
  br label %65

; <label>:65                                      ; preds = %40, %64
  %l.1 = phi i32 [ %63, %40 ], [ %l.08, %64 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !958
  %exitcond = icmp eq i32 %37, %28, !dbg !958
  br i1 %exitcond, label %._crit_edge, label %29, !dbg !958

._crit_edge:                                      ; preds = %65, %.loopexit
  %l.0.lcssa = phi i32 [ 0, %.loopexit ], [ %l.1, %65 ]
  %66 = getelementptr inbounds %struct.node* %node, i64 0, i32 2, !dbg !1007
  store i8 1, i8* %66, align 1, !dbg !1008, !tbaa !518
  %67 = trunc i32 %l.0.lcssa to i8, !dbg !1009
  %68 = getelementptr inbounds %struct.node* %node, i64 0, i32 1, !dbg !1010
  store i8 %67, i8* %68, align 1, !dbg !1011, !tbaa !240
  %69 = and i32 %l.0.lcssa, 255, !dbg !1012
  %70 = icmp eq i32 %69, 0, !dbg !1014
  br i1 %70, label %71, label %84, !dbg !1015

; <label>:71                                      ; preds = %._crit_edge
  store i8 0, i8* %66, align 1, !dbg !1016, !tbaa !518
  %72 = getelementptr inbounds %struct.node* %node, i64 0, i32 3, !dbg !1018
  store i8 1, i8* %72, align 1, !dbg !1019, !tbaa !283
  %73 = load i32* @Variant, align 4, !dbg !1020, !tbaa !214
  %.off = add i32 %73, -3, !dbg !1022
  %.cmp = icmp ugt i32 %.off, 1, !dbg !1022
  br i1 %.cmp, label %74, label %76, !dbg !1022

; <label>:74                                      ; preds = %71
  %75 = getelementptr inbounds %struct.node* %node, i64 0, i32 0, !dbg !1023
  store i8 3, i8* %75, align 1, !dbg !1025, !tbaa !320
  br label %84, !dbg !1026

; <label>:76                                      ; preds = %71
  %77 = load i32* @white_to_move, align 4, !dbg !1027, !tbaa !214
  %not. = icmp eq i32 %77, 0, !dbg !1027
  %78 = zext i1 %not. to i32, !dbg !1027
  %79 = load i32* @root_to_move, align 4, !dbg !1030, !tbaa !214
  %80 = icmp eq i32 %78, %79, !dbg !1031
  %81 = getelementptr inbounds %struct.node* %node, i64 0, i32 0, !dbg !1032
  br i1 %80, label %82, label %83, !dbg !1034

; <label>:82                                      ; preds = %76
  store i8 1, i8* %81, align 1, !dbg !1035, !tbaa !320
  br label %84, !dbg !1036

; <label>:83                                      ; preds = %76
  store i8 0, i8* %81, align 1, !dbg !1037, !tbaa !320
  br label %84

; <label>:84                                      ; preds = %74, %83, %82, %._crit_edge
  %85 = load i32* @nodecount, align 4, !dbg !1039, !tbaa !214
  %86 = add nsw i32 %85, %num_moves.0, !dbg !1039
  store i32 %86, i32* @nodecount, align 4, !dbg !1039, !tbaa !214
  %87 = load i32* @frees, align 4, !dbg !1040, !tbaa !214
  %88 = add nsw i32 %87, %num_moves.0, !dbg !1040
  store i32 %88, i32* @frees, align 4, !dbg !1040, !tbaa !214
  call void @llvm.lifetime.end(i64 12288, i8* %1) #3, !dbg !1041
  ret void, !dbg !1041
}
