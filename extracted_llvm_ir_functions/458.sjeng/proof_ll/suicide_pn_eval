define void @suicide_pn_eval(%struct.node* nocapture %this) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.node* %this}, i64 0, metadata !68), !dbg !240
  tail call void @llvm.dbg.value(metadata !8, i64 0, metadata !72), !dbg !241
  tail call void @llvm.dbg.value(metadata !8, i64 0, metadata !73), !dbg !241
  %evaluated = getelementptr inbounds %struct.node* %this, i64 0, i32 3, !dbg !242
  store i8 1, i8* %evaluated, align 1, !dbg !242, !tbaa !206
  tail call void @llvm.dbg.value(metadata !243, i64 0, metadata !69), !dbg !244
  tail call void @llvm.dbg.value(metadata !243, i64 0, metadata !70), !dbg !244
  %0 = load i32* @piece_count, align 4, !dbg !244, !tbaa !205
  %cmp41 = icmp slt i32 %0, 1, !dbg !244
  br i1 %cmp41, label %if.then12, label %for.body, !dbg !244

for.body:                                         ; preds = %entry, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 1, %entry ]
  %bp.045 = phi i32 [ %bp.2, %for.inc ], [ 0, %entry ]
  %wp.044 = phi i32 [ %wp.2, %for.inc ], [ 0, %entry ]
  %a.042 = phi i32 [ %a.1, %for.inc ], [ 1, %entry ]
  %arrayidx = getelementptr inbounds [62 x i32]* @pieces, i64 0, i64 %indvars.iv, !dbg !246
  %1 = load i32* %arrayidx, align 4, !dbg !246, !tbaa !205
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !71), !dbg !246
  %tobool = icmp eq i32 %1, 0, !dbg !248
  br i1 %tobool, label %for.inc, label %if.else, !dbg !248

if.else:                                          ; preds = %for.body
  %inc = add nsw i32 %a.042, 1, !dbg !249
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !70), !dbg !249
  %idxprom1 = sext i32 %1 to i64, !dbg !250
  %arrayidx2 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom1, !dbg !250
  %2 = load i32* %arrayidx2, align 4, !dbg !250, !tbaa !205
  switch i32 %2, label %sw.epilog [
    i32 1, label %sw.bb
    i32 11, label %sw.bb
    i32 7, label %sw.bb
    i32 5, label %sw.bb
    i32 9, label %sw.bb
    i32 3, label %sw.bb
    i32 2, label %sw.bb4
    i32 12, label %sw.bb4
    i32 8, label %sw.bb4
    i32 6, label %sw.bb4
    i32 10, label %sw.bb4
    i32 4, label %sw.bb4
  ], !dbg !250

sw.bb:                                            ; preds = %if.else, %if.else, %if.else, %if.else, %if.else, %if.else
  %inc3 = add nsw i32 %wp.044, 1, !dbg !251
  tail call void @llvm.dbg.value(metadata !{i32 %inc3}, i64 0, metadata !72), !dbg !251
  br label %sw.epilog, !dbg !251

sw.bb4:                                           ; preds = %if.else, %if.else, %if.else, %if.else, %if.else, %if.else
  %inc5 = add nsw i32 %bp.045, 1, !dbg !253
  tail call void @llvm.dbg.value(metadata !{i32 %inc5}, i64 0, metadata !73), !dbg !253
  br label %sw.epilog, !dbg !253

sw.epilog:                                        ; preds = %if.else, %sw.bb4, %sw.bb
  %wp.1 = phi i32 [ %wp.044, %if.else ], [ %wp.044, %sw.bb4 ], [ %inc3, %sw.bb ]
  %bp.1 = phi i32 [ %bp.045, %if.else ], [ %inc5, %sw.bb4 ], [ %bp.045, %sw.bb ]
  %tobool6 = icmp eq i32 %wp.1, 0, !dbg !254
  %tobool7 = icmp eq i32 %bp.1, 0, !dbg !254
  %or.cond = or i1 %tobool6, %tobool7, !dbg !254
  br i1 %or.cond, label %for.inc, label %for.end, !dbg !254

for.inc:                                          ; preds = %sw.epilog, %for.body
  %a.1 = phi i32 [ %inc, %sw.epilog ], [ %a.042, %for.body ]
  %wp.2 = phi i32 [ %wp.1, %sw.epilog ], [ %wp.044, %for.body ]
  %bp.2 = phi i32 [ %bp.1, %sw.epilog ], [ %bp.045, %for.body ]
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !244
  %cmp = icmp sgt i32 %a.1, %0, !dbg !244
  br i1 %cmp, label %for.end, label %for.body, !dbg !244

for.end:                                          ; preds = %for.inc, %sw.epilog
  %wp.3 = phi i32 [ %wp.1, %sw.epilog ], [ %wp.2, %for.inc ]
  %bp.3 = phi i32 [ %bp.1, %sw.epilog ], [ %bp.2, %for.inc ]
  %tobool11 = icmp eq i32 %wp.3, 0, !dbg !255
  br i1 %tobool11, label %if.then12, label %if.else18, !dbg !255

if.then12:                                        ; preds = %entry, %for.end
  %3 = load i32* @root_to_move, align 4, !dbg !256, !tbaa !205
  %tobool13 = icmp eq i32 %3, 0, !dbg !256
  %value16 = getelementptr inbounds %struct.node* %this, i64 0, i32 0, !dbg !258
  br i1 %tobool13, label %if.then14, label %if.else15, !dbg !256

if.then14:                                        ; preds = %if.then12
  store i8 1, i8* %value16, align 1, !dbg !260, !tbaa !206
  br label %if.end30, !dbg !262

if.else15:                                        ; preds = %if.then12
  store i8 0, i8* %value16, align 1, !dbg !258, !tbaa !206
  br label %if.end30

if.else18:                                        ; preds = %for.end
  %tobool19 = icmp eq i32 %bp.3, 0, !dbg !263
  br i1 %tobool19, label %if.then20, label %if.else27, !dbg !263

if.then20:                                        ; preds = %if.else18
  %4 = load i32* @root_to_move, align 4, !dbg !264, !tbaa !205
  %tobool21 = icmp eq i32 %4, 0, !dbg !264
  %value25 = getelementptr inbounds %struct.node* %this, i64 0, i32 0, !dbg !266
  br i1 %tobool21, label %if.then22, label %if.else24, !dbg !264

if.then22:                                        ; preds = %if.then20
  store i8 0, i8* %value25, align 1, !dbg !268, !tbaa !206
  br label %if.end30, !dbg !270

if.else24:                                        ; preds = %if.then20
  store i8 1, i8* %value25, align 1, !dbg !266, !tbaa !206
  br label %if.end30

if.else27:                                        ; preds = %if.else18
  %value28 = getelementptr inbounds %struct.node* %this, i64 0, i32 0, !dbg !271
  store i8 2, i8* %value28, align 1, !dbg !271, !tbaa !206
  br label %if.end30

if.end30:                                         ; preds = %if.else27, %if.else24, %if.then22, %if.then14, %if.else15
  ret void, !dbg !273
}
