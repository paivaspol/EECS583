define i32 @calc_attackers(i32 %square, i32 %color) #0 {
entry:
  %idxprom = sext i32 %square to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom
  %0 = load i32* %arrayidx, align 4, !tbaa !0
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %rem273 = and i32 %color, 1
  %tobool = icmp eq i32 %rem273, 0
  br i1 %tobool, label %for.body100, label %for.body

for.body:                                         ; preds = %if.end, %for.inc
  %indvars.iv312 = phi i64 [ %indvars.iv.next313, %for.inc ], [ 0, %if.end ]
  %attackers.0295 = phi i32 [ %attackers.1, %for.inc ], [ 0, %if.end ]
  %arrayidx4 = getelementptr inbounds [4 x i32]* @nk_attacked.rook_o, i64 0, i64 %indvars.iv312
  %1 = load i32* %arrayidx4, align 4, !tbaa !0
  %add = add nsw i32 %1, %square
  %idxprom5 = sext i32 %add to i64
  %arrayidx6 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom5
  %2 = load i32* %arrayidx6, align 4, !tbaa !0
  %cmp7 = icmp eq i32 %2, 5
  br i1 %cmp7, label %if.then8, label %while.cond

if.then8:                                         ; preds = %for.body
  %inc = add nsw i32 %attackers.0295, 1
  br label %for.body34

while.cond:                                       ; preds = %for.body, %if.end26
  %3 = phi i32 [ %.pre315, %if.end26 ], [ %2, %for.body ]
  %a_sq.0 = phi i32 [ %add29, %if.end26 ], [ %add, %for.body ]
  switch i32 %3, label %for.inc [
    i32 13, label %if.end26
    i32 7, label %if.then18
    i32 9, label %if.then18
  ]

if.then18:                                        ; preds = %while.cond, %while.cond
  %inc19 = add nsw i32 %attackers.0295, 1
  br label %for.inc

if.end26:                                         ; preds = %while.cond
  %add29 = add nsw i32 %1, %a_sq.0
  %idxprom9.phi.trans.insert = sext i32 %add29 to i64
  %arrayidx10.phi.trans.insert = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom9.phi.trans.insert
  %.pre315 = load i32* %arrayidx10.phi.trans.insert, align 4, !tbaa !0
  br label %while.cond

for.inc:                                          ; preds = %while.cond, %if.then18
  %attackers.1 = phi i32 [ %inc19, %if.then18 ], [ %attackers.0295, %while.cond ]
  %indvars.iv.next313 = add i64 %indvars.iv312, 1
  %4 = trunc i64 %indvars.iv.next313 to i32
  %cmp2 = icmp slt i32 %4, 4
  br i1 %cmp2, label %for.body, label %for.body34

for.body34:                                       ; preds = %if.then8, %for.inc, %for.inc79
  %indvars.iv309 = phi i64 [ %indvars.iv.next310, %for.inc79 ], [ 0, %for.inc ], [ 0, %if.then8 ]
  %attackers.3292 = phi i32 [ %attackers.4, %for.inc79 ], [ %attackers.1, %for.inc ], [ %inc, %if.then8 ]
  %arrayidx36 = getelementptr inbounds [4 x i32]* @nk_attacked.bishop_o, i64 0, i64 %indvars.iv309
  %5 = load i32* %arrayidx36, align 4, !tbaa !0
  %add37 = add nsw i32 %5, %square
  %idxprom38 = sext i32 %add37 to i64
  %arrayidx39 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom38
  %6 = load i32* %arrayidx39, align 4, !tbaa !0
  switch i32 %6, label %while.cond52 [
    i32 1, label %land.lhs.true
    i32 5, label %if.then49
  ]

land.lhs.true:                                    ; preds = %for.body34
  %rem41275 = and i64 %indvars.iv309, 1
  %tobool42 = icmp eq i64 %rem41275, 0
  br i1 %tobool42, label %while.cond52, label %if.then43

if.then43:                                        ; preds = %land.lhs.true
  %inc44 = add nsw i32 %attackers.3292, 1
  br label %for.body84

if.then49:                                        ; preds = %for.body34
  %inc50 = add nsw i32 %attackers.3292, 1
  br label %for.body84

while.cond52:                                     ; preds = %for.body34, %land.lhs.true, %if.end72
  %7 = phi i32 [ %.pre316, %if.end72 ], [ 1, %land.lhs.true ], [ %6, %for.body34 ]
  %a_sq.1 = phi i32 [ %add75, %if.end72 ], [ %add37, %land.lhs.true ], [ %add37, %for.body34 ]
  switch i32 %7, label %for.inc79 [
    i32 13, label %if.end72
    i32 11, label %if.then64
    i32 9, label %if.then64
  ]

if.then64:                                        ; preds = %while.cond52, %while.cond52
  %inc65 = add nsw i32 %attackers.3292, 1
  br label %for.inc79

if.end72:                                         ; preds = %while.cond52
  %add75 = add nsw i32 %5, %a_sq.1
  %idxprom53.phi.trans.insert = sext i32 %add75 to i64
  %arrayidx54.phi.trans.insert = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom53.phi.trans.insert
  %.pre316 = load i32* %arrayidx54.phi.trans.insert, align 4, !tbaa !0
  br label %while.cond52

for.inc79:                                        ; preds = %while.cond52, %if.then64
  %attackers.4 = phi i32 [ %inc65, %if.then64 ], [ %attackers.3292, %while.cond52 ]
  %indvars.iv.next310 = add i64 %indvars.iv309, 1
  %8 = trunc i64 %indvars.iv.next310 to i32
  %cmp33 = icmp slt i32 %8, 4
  br i1 %cmp33, label %for.body34, label %for.body84

for.body84:                                       ; preds = %if.then43, %if.then49, %for.inc79, %for.body84
  %indvars.iv303 = phi i64 [ %indvars.iv.next304, %for.body84 ], [ 0, %for.inc79 ], [ 0, %if.then49 ], [ 0, %if.then43 ]
  %attackers.6288 = phi i32 [ %inc92.attackers.6, %for.body84 ], [ %attackers.4, %for.inc79 ], [ %inc50, %if.then49 ], [ %inc44, %if.then43 ]
  %arrayidx86 = getelementptr inbounds [8 x i32]* @nk_attacked.knight_o, i64 0, i64 %indvars.iv303
  %9 = load i32* %arrayidx86, align 4, !tbaa !0
  %add87 = add nsw i32 %9, %square
  %idxprom88 = sext i32 %add87 to i64
  %arrayidx89 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom88
  %10 = load i32* %arrayidx89, align 4, !tbaa !0
  %cmp90 = icmp eq i32 %10, 3
  %inc92 = zext i1 %cmp90 to i32
  %inc92.attackers.6 = add nsw i32 %inc92, %attackers.6288
  %indvars.iv.next304 = add i64 %indvars.iv303, 1
  %lftr.wideiv305 = trunc i64 %indvars.iv.next304 to i32
  %exitcond306 = icmp eq i32 %lftr.wideiv305, 8
  br i1 %exitcond306, label %return, label %for.body84

for.body100:                                      ; preds = %if.end, %for.inc135
  %indvars.iv301 = phi i64 [ %indvars.iv.next302, %for.inc135 ], [ 0, %if.end ]
  %attackers.8285 = phi i32 [ %attackers.9, %for.inc135 ], [ 0, %if.end ]
  %arrayidx102 = getelementptr inbounds [4 x i32]* @nk_attacked.rook_o, i64 0, i64 %indvars.iv301
  %11 = load i32* %arrayidx102, align 4, !tbaa !0
  %add103 = add nsw i32 %11, %square
  %idxprom104 = sext i32 %add103 to i64
  %arrayidx105 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom104
  %12 = load i32* %arrayidx105, align 4, !tbaa !0
  %cmp106 = icmp eq i32 %12, 6
  br i1 %cmp106, label %if.then107, label %while.cond110

if.then107:                                       ; preds = %for.body100
  %inc108 = add nsw i32 %attackers.8285, 1
  br label %for.body140

while.cond110:                                    ; preds = %for.body100, %if.end129
  %13 = phi i32 [ %.pre, %if.end129 ], [ %12, %for.body100 ]
  %a_sq.2 = phi i32 [ %add132, %if.end129 ], [ %add103, %for.body100 ]
  switch i32 %13, label %for.inc135 [
    i32 13, label %if.end129
    i32 8, label %if.then122
    i32 10, label %if.then122
  ]

if.then122:                                       ; preds = %while.cond110, %while.cond110
  %inc123 = add nsw i32 %attackers.8285, 1
  br label %for.inc135

if.end129:                                        ; preds = %while.cond110
  %add132 = add nsw i32 %11, %a_sq.2
  %idxprom111.phi.trans.insert = sext i32 %add132 to i64
  %arrayidx112.phi.trans.insert = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom111.phi.trans.insert
  %.pre = load i32* %arrayidx112.phi.trans.insert, align 4, !tbaa !0
  br label %while.cond110

for.inc135:                                       ; preds = %while.cond110, %if.then122
  %attackers.9 = phi i32 [ %inc123, %if.then122 ], [ %attackers.8285, %while.cond110 ]
  %indvars.iv.next302 = add i64 %indvars.iv301, 1
  %14 = trunc i64 %indvars.iv.next302 to i32
  %cmp99 = icmp slt i32 %14, 4
  br i1 %cmp99, label %for.body100, label %for.body140

for.body140:                                      ; preds = %if.then107, %for.inc135, %for.inc186
  %indvars.iv298 = phi i64 [ %indvars.iv.next299, %for.inc186 ], [ 0, %for.inc135 ], [ 0, %if.then107 ]
  %attackers.11282 = phi i32 [ %attackers.12, %for.inc186 ], [ %attackers.9, %for.inc135 ], [ %inc108, %if.then107 ]
  %arrayidx142 = getelementptr inbounds [4 x i32]* @nk_attacked.bishop_o, i64 0, i64 %indvars.iv298
  %15 = load i32* %arrayidx142, align 4, !tbaa !0
  %add143 = add nsw i32 %15, %square
  %idxprom144 = sext i32 %add143 to i64
  %arrayidx145 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom144
  %16 = load i32* %arrayidx145, align 4, !tbaa !0
  switch i32 %16, label %while.cond159 [
    i32 2, label %land.lhs.true147
    i32 6, label %if.then156
  ]

land.lhs.true147:                                 ; preds = %for.body140
  %rem148274 = and i64 %indvars.iv298, 1
  %tobool149 = icmp eq i64 %rem148274, 0
  br i1 %tobool149, label %if.then150, label %while.cond159

if.then150:                                       ; preds = %land.lhs.true147
  %inc151 = add nsw i32 %attackers.11282, 1
  br label %for.body191

if.then156:                                       ; preds = %for.body140
  %inc157 = add nsw i32 %attackers.11282, 1
  br label %for.body191

while.cond159:                                    ; preds = %for.body140, %land.lhs.true147, %if.end179
  %17 = phi i32 [ %.pre314, %if.end179 ], [ 2, %land.lhs.true147 ], [ %16, %for.body140 ]
  %a_sq.3 = phi i32 [ %add182, %if.end179 ], [ %add143, %land.lhs.true147 ], [ %add143, %for.body140 ]
  switch i32 %17, label %for.inc186 [
    i32 13, label %if.end179
    i32 12, label %if.then171
    i32 10, label %if.then171
  ]

if.then171:                                       ; preds = %while.cond159, %while.cond159
  %inc172 = add nsw i32 %attackers.11282, 1
  br label %for.inc186

if.end179:                                        ; preds = %while.cond159
  %add182 = add nsw i32 %15, %a_sq.3
  %idxprom160.phi.trans.insert = sext i32 %add182 to i64
  %arrayidx161.phi.trans.insert = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom160.phi.trans.insert
  %.pre314 = load i32* %arrayidx161.phi.trans.insert, align 4, !tbaa !0
  br label %while.cond159

for.inc186:                                       ; preds = %while.cond159, %if.then171
  %attackers.12 = phi i32 [ %inc172, %if.then171 ], [ %attackers.11282, %while.cond159 ]
  %indvars.iv.next299 = add i64 %indvars.iv298, 1
  %18 = trunc i64 %indvars.iv.next299 to i32
  %cmp139 = icmp slt i32 %18, 4
  br i1 %cmp139, label %for.body140, label %for.body191

for.body191:                                      ; preds = %if.then150, %if.then156, %for.inc186, %for.body191
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body191 ], [ 0, %for.inc186 ], [ 0, %if.then156 ], [ 0, %if.then150 ]
  %attackers.14278 = phi i32 [ %inc199.attackers.14, %for.body191 ], [ %attackers.12, %for.inc186 ], [ %inc157, %if.then156 ], [ %inc151, %if.then150 ]
  %arrayidx193 = getelementptr inbounds [8 x i32]* @nk_attacked.knight_o, i64 0, i64 %indvars.iv
  %19 = load i32* %arrayidx193, align 4, !tbaa !0
  %add194 = add nsw i32 %19, %square
  %idxprom195 = sext i32 %add194 to i64
  %arrayidx196 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %idxprom195
  %20 = load i32* %arrayidx196, align 4, !tbaa !0
  %cmp197 = icmp eq i32 %20, 4
  %inc199 = zext i1 %cmp197 to i32
  %inc199.attackers.14 = add nsw i32 %inc199, %attackers.14278
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 8
  br i1 %exitcond, label %return, label %for.body191

return:                                           ; preds = %for.body84, %for.body191, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %inc199.attackers.14, %for.body191 ], [ %inc92.attackers.6, %for.body84 ]
  ret i32 %retval.0
}
