define i32 @calc_attackers(i32 %square, i32 %color) #0 {
  tail call void @llvm.dbg.value(metadata i32 %square, i64 0, metadata !15, metadata !60), !dbg !61
  tail call void @llvm.dbg.value(metadata i32 %color, i64 0, metadata !16, metadata !60), !dbg !62
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !19, metadata !60), !dbg !63
  %1 = sext i32 %square to i64, !dbg !64
  %2 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %1, !dbg !64
  %3 = load i32* %2, align 4, !dbg !64, !tbaa !66
  %4 = icmp eq i32 %3, 0, !dbg !70
  br i1 %4, label %.loopexit, label %5, !dbg !71

; <label>:5                                       ; preds = %0
  %6 = and i32 %color, 1, !dbg !72
  %7 = icmp eq i32 %6, 0, !dbg !72
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !18, metadata !60), !dbg !74
  br i1 %7, label %.preheader9, label %.preheader17, !dbg !75

.preheader17:                                     ; preds = %5, %.loopexit16
  %indvars.iv51 = phi i64 [ %indvars.iv.next52, %.loopexit16 ], [ 0, %5 ]
  %attackers.035 = phi i32 [ %attackers.1, %.loopexit16 ], [ 0, %5 ]
  %8 = getelementptr inbounds [4 x i32]* @nk_attacked.rook_o, i64 0, i64 %indvars.iv51, !dbg !76
  %9 = load i32* %8, align 4, !dbg !76, !tbaa !66
  %10 = add nsw i32 %9, %square, !dbg !81
  tail call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !17, metadata !60), !dbg !82
  %11 = sext i32 %10 to i64, !dbg !83
  %12 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %11, !dbg !83
  %13 = load i32* %12, align 4, !dbg !83, !tbaa !66
  %14 = icmp eq i32 %13, 5, !dbg !85
  br i1 %14, label %15, label %.preheader15, !dbg !86

; <label>:15                                      ; preds = %.preheader17
  %16 = add nsw i32 %attackers.035, 1, !dbg !87
  tail call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !19, metadata !60), !dbg !63
  br label %.preheader14, !dbg !89

.preheader15:                                     ; preds = %.preheader17, %20
  %17 = phi i32 [ %.pre, %20 ], [ %13, %.preheader17 ]
  %a_sq.0 = phi i32 [ %21, %20 ], [ %10, %.preheader17 ]
  switch i32 %17, label %.loopexit16 [
    i32 13, label %20
    i32 7, label %18
    i32 9, label %18
  ], !dbg !90

; <label>:18                                      ; preds = %.preheader15, %.preheader15
  %19 = add nsw i32 %attackers.035, 1, !dbg !92
  tail call void @llvm.dbg.value(metadata i32 %19, i64 0, metadata !19, metadata !60), !dbg !63
  br label %.loopexit16, !dbg !96

; <label>:20                                      ; preds = %.preheader15
  %21 = add nsw i32 %9, %a_sq.0, !dbg !97
  tail call void @llvm.dbg.value(metadata i32 %21, i64 0, metadata !17, metadata !60), !dbg !82
  %.phi.trans.insert = sext i32 %21 to i64
  %.phi.trans.insert53 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %.phi.trans.insert
  %.pre = load i32* %.phi.trans.insert53, align 4, !dbg !98, !tbaa !66
  br label %.preheader15, !dbg !90

.loopexit16:                                      ; preds = %.preheader15, %18
  %attackers.1 = phi i32 [ %19, %18 ], [ %attackers.035, %.preheader15 ]
  %indvars.iv.next52 = add nuw nsw i64 %indvars.iv51, 1, !dbg !99
  %22 = icmp slt i64 %indvars.iv.next52, 4, !dbg !100
  br i1 %22, label %.preheader17, label %.preheader14, !dbg !99

.preheader14:                                     ; preds = %15, %.loopexit16, %.loopexit13
  %indvars.iv49 = phi i64 [ %indvars.iv.next50, %.loopexit13 ], [ 0, %.loopexit16 ], [ 0, %15 ]
  %attackers.333 = phi i32 [ %attackers.4, %.loopexit13 ], [ %attackers.1, %.loopexit16 ], [ %16, %15 ]
  %23 = getelementptr inbounds [4 x i32]* @nk_attacked.bishop_o, i64 0, i64 %indvars.iv49, !dbg !101
  %24 = load i32* %23, align 4, !dbg !101, !tbaa !66
  %25 = add nsw i32 %24, %square, !dbg !105
  tail call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !17, metadata !60), !dbg !82
  %26 = sext i32 %25 to i64, !dbg !106
  %27 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %26, !dbg !106
  %28 = load i32* %27, align 4, !dbg !106, !tbaa !66
  %29 = icmp ne i32 %28, 1, !dbg !108
  %30 = and i64 %indvars.iv49, 1, !dbg !109
  %31 = icmp eq i64 %30, 0, !dbg !109
  %or.cond = or i1 %31, %29, !dbg !110
  br i1 %or.cond, label %34, label %32, !dbg !110

; <label>:32                                      ; preds = %.preheader14
  %33 = add nsw i32 %attackers.333, 1, !dbg !111
  tail call void @llvm.dbg.value(metadata i32 %33, i64 0, metadata !19, metadata !60), !dbg !63
  br label %.preheader10, !dbg !113

; <label>:34                                      ; preds = %.preheader14
  %35 = icmp eq i32 %28, 5, !dbg !114
  br i1 %35, label %36, label %.preheader12, !dbg !116

; <label>:36                                      ; preds = %34
  %37 = add nsw i32 %attackers.333, 1, !dbg !117
  tail call void @llvm.dbg.value(metadata i32 %37, i64 0, metadata !19, metadata !60), !dbg !63
  br label %.preheader10, !dbg !119

.preheader12:                                     ; preds = %34, %41
  %38 = phi i32 [ %.pre56, %41 ], [ %28, %34 ]
  %a_sq.1 = phi i32 [ %42, %41 ], [ %25, %34 ]
  switch i32 %38, label %.loopexit13 [
    i32 13, label %41
    i32 11, label %39
    i32 9, label %39
  ], !dbg !120

; <label>:39                                      ; preds = %.preheader12, %.preheader12
  %40 = add nsw i32 %attackers.333, 1, !dbg !122
  tail call void @llvm.dbg.value(metadata i32 %40, i64 0, metadata !19, metadata !60), !dbg !63
  br label %.loopexit13, !dbg !126

; <label>:41                                      ; preds = %.preheader12
  %42 = add nsw i32 %24, %a_sq.1, !dbg !127
  tail call void @llvm.dbg.value(metadata i32 %42, i64 0, metadata !17, metadata !60), !dbg !82
  %.phi.trans.insert54 = sext i32 %42 to i64
  %.phi.trans.insert55 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %.phi.trans.insert54
  %.pre56 = load i32* %.phi.trans.insert55, align 4, !dbg !128, !tbaa !66
  br label %.preheader12, !dbg !120

.loopexit13:                                      ; preds = %.preheader12, %39
  %attackers.4 = phi i32 [ %40, %39 ], [ %attackers.333, %.preheader12 ]
  %indvars.iv.next50 = add nuw nsw i64 %indvars.iv49, 1, !dbg !129
  %43 = icmp slt i64 %indvars.iv.next50, 4, !dbg !130
  br i1 %43, label %.preheader14, label %.preheader10, !dbg !129

.preheader10:                                     ; preds = %32, %36, %.loopexit13, %.preheader10
  %indvars.iv46 = phi i64 [ %indvars.iv.next47, %.preheader10 ], [ 0, %.loopexit13 ], [ 0, %36 ], [ 0, %32 ]
  %attackers.631 = phi i32 [ %.attackers.6, %.preheader10 ], [ %attackers.4, %.loopexit13 ], [ %37, %36 ], [ %33, %32 ]
  %44 = getelementptr inbounds [8 x i32]* @nk_attacked.knight_o, i64 0, i64 %indvars.iv46, !dbg !131
  %45 = load i32* %44, align 4, !dbg !131, !tbaa !66
  %46 = add nsw i32 %45, %square, !dbg !135
  tail call void @llvm.dbg.value(metadata i32 %46, i64 0, metadata !17, metadata !60), !dbg !82
  %47 = sext i32 %46 to i64, !dbg !136
  %48 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %47, !dbg !136
  %49 = load i32* %48, align 4, !dbg !136, !tbaa !66
  %50 = icmp eq i32 %49, 3, !dbg !138
  %51 = zext i1 %50 to i32, !dbg !139
  %.attackers.6 = add nsw i32 %51, %attackers.631, !dbg !139
  %indvars.iv.next47 = add nuw nsw i64 %indvars.iv46, 1, !dbg !140
  %exitcond48 = icmp eq i64 %indvars.iv.next47, 8, !dbg !140
  br i1 %exitcond48, label %.loopexit, label %.preheader10, !dbg !140

.preheader9:                                      ; preds = %5, %.loopexit8
  %indvars.iv44 = phi i64 [ %indvars.iv.next45, %.loopexit8 ], [ 0, %5 ]
  %attackers.829 = phi i32 [ %attackers.9, %.loopexit8 ], [ 0, %5 ]
  %52 = getelementptr inbounds [4 x i32]* @nk_attacked.rook_o, i64 0, i64 %indvars.iv44, !dbg !141
  %53 = load i32* %52, align 4, !dbg !141, !tbaa !66
  %54 = add nsw i32 %53, %square, !dbg !146
  tail call void @llvm.dbg.value(metadata i32 %54, i64 0, metadata !17, metadata !60), !dbg !82
  %55 = sext i32 %54 to i64, !dbg !147
  %56 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %55, !dbg !147
  %57 = load i32* %56, align 4, !dbg !147, !tbaa !66
  %58 = icmp eq i32 %57, 6, !dbg !149
  br i1 %58, label %59, label %.preheader7, !dbg !150

; <label>:59                                      ; preds = %.preheader9
  %60 = add nsw i32 %attackers.829, 1, !dbg !151
  tail call void @llvm.dbg.value(metadata i32 %60, i64 0, metadata !19, metadata !60), !dbg !63
  br label %.preheader6, !dbg !153

.preheader7:                                      ; preds = %.preheader9, %64
  %61 = phi i32 [ %.pre59, %64 ], [ %57, %.preheader9 ]
  %a_sq.2 = phi i32 [ %65, %64 ], [ %54, %.preheader9 ]
  switch i32 %61, label %.loopexit8 [
    i32 13, label %64
    i32 8, label %62
    i32 10, label %62
  ], !dbg !154

; <label>:62                                      ; preds = %.preheader7, %.preheader7
  %63 = add nsw i32 %attackers.829, 1, !dbg !156
  tail call void @llvm.dbg.value(metadata i32 %63, i64 0, metadata !19, metadata !60), !dbg !63
  br label %.loopexit8, !dbg !160

; <label>:64                                      ; preds = %.preheader7
  %65 = add nsw i32 %53, %a_sq.2, !dbg !161
  tail call void @llvm.dbg.value(metadata i32 %65, i64 0, metadata !17, metadata !60), !dbg !82
  %.phi.trans.insert57 = sext i32 %65 to i64
  %.phi.trans.insert58 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %.phi.trans.insert57
  %.pre59 = load i32* %.phi.trans.insert58, align 4, !dbg !162, !tbaa !66
  br label %.preheader7, !dbg !154

.loopexit8:                                       ; preds = %.preheader7, %62
  %attackers.9 = phi i32 [ %63, %62 ], [ %attackers.829, %.preheader7 ]
  %indvars.iv.next45 = add nuw nsw i64 %indvars.iv44, 1, !dbg !163
  %66 = icmp slt i64 %indvars.iv.next45, 4, !dbg !164
  br i1 %66, label %.preheader9, label %.preheader6, !dbg !163

.preheader6:                                      ; preds = %59, %.loopexit8, %.loopexit5
  %indvars.iv42 = phi i64 [ %indvars.iv.next43, %.loopexit5 ], [ 0, %.loopexit8 ], [ 0, %59 ]
  %attackers.1127 = phi i32 [ %attackers.12, %.loopexit5 ], [ %attackers.9, %.loopexit8 ], [ %60, %59 ]
  %67 = getelementptr inbounds [4 x i32]* @nk_attacked.bishop_o, i64 0, i64 %indvars.iv42, !dbg !165
  %68 = load i32* %67, align 4, !dbg !165, !tbaa !66
  %69 = add nsw i32 %68, %square, !dbg !169
  tail call void @llvm.dbg.value(metadata i32 %69, i64 0, metadata !17, metadata !60), !dbg !82
  %70 = sext i32 %69 to i64, !dbg !170
  %71 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %70, !dbg !170
  %72 = load i32* %71, align 4, !dbg !170, !tbaa !66
  %73 = icmp eq i32 %72, 2, !dbg !172
  %74 = and i64 %indvars.iv42, 1, !dbg !173
  %75 = icmp eq i64 %74, 0, !dbg !173
  %or.cond3 = and i1 %75, %73, !dbg !174
  br i1 %or.cond3, label %76, label %78, !dbg !174

; <label>:76                                      ; preds = %.preheader6
  %77 = add nsw i32 %attackers.1127, 1, !dbg !175
  tail call void @llvm.dbg.value(metadata i32 %77, i64 0, metadata !19, metadata !60), !dbg !63
  br label %.preheader, !dbg !177

; <label>:78                                      ; preds = %.preheader6
  %79 = icmp eq i32 %72, 6, !dbg !178
  br i1 %79, label %80, label %.preheader4, !dbg !180

; <label>:80                                      ; preds = %78
  %81 = add nsw i32 %attackers.1127, 1, !dbg !181
  tail call void @llvm.dbg.value(metadata i32 %81, i64 0, metadata !19, metadata !60), !dbg !63
  br label %.preheader, !dbg !183

.preheader4:                                      ; preds = %78, %85
  %82 = phi i32 [ %.pre62, %85 ], [ %72, %78 ]
  %a_sq.3 = phi i32 [ %86, %85 ], [ %69, %78 ]
  switch i32 %82, label %.loopexit5 [
    i32 13, label %85
    i32 12, label %83
    i32 10, label %83
  ], !dbg !184

; <label>:83                                      ; preds = %.preheader4, %.preheader4
  %84 = add nsw i32 %attackers.1127, 1, !dbg !186
  tail call void @llvm.dbg.value(metadata i32 %84, i64 0, metadata !19, metadata !60), !dbg !63
  br label %.loopexit5, !dbg !190

; <label>:85                                      ; preds = %.preheader4
  %86 = add nsw i32 %68, %a_sq.3, !dbg !191
  tail call void @llvm.dbg.value(metadata i32 %86, i64 0, metadata !17, metadata !60), !dbg !82
  %.phi.trans.insert60 = sext i32 %86 to i64
  %.phi.trans.insert61 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %.phi.trans.insert60
  %.pre62 = load i32* %.phi.trans.insert61, align 4, !dbg !192, !tbaa !66
  br label %.preheader4, !dbg !184

.loopexit5:                                       ; preds = %.preheader4, %83
  %attackers.12 = phi i32 [ %84, %83 ], [ %attackers.1127, %.preheader4 ]
  %indvars.iv.next43 = add nuw nsw i64 %indvars.iv42, 1, !dbg !193
  %87 = icmp slt i64 %indvars.iv.next43, 4, !dbg !194
  br i1 %87, label %.preheader6, label %.preheader, !dbg !193

.preheader:                                       ; preds = %76, %80, %.loopexit5, %.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %.preheader ], [ 0, %.loopexit5 ], [ 0, %80 ], [ 0, %76 ]
  %attackers.1425 = phi i32 [ %.attackers.14, %.preheader ], [ %attackers.12, %.loopexit5 ], [ %81, %80 ], [ %77, %76 ]
  %88 = getelementptr inbounds [8 x i32]* @nk_attacked.knight_o, i64 0, i64 %indvars.iv, !dbg !195
  %89 = load i32* %88, align 4, !dbg !195, !tbaa !66
  %90 = add nsw i32 %89, %square, !dbg !199
  tail call void @llvm.dbg.value(metadata i32 %90, i64 0, metadata !17, metadata !60), !dbg !82
  %91 = sext i32 %90 to i64, !dbg !200
  %92 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %91, !dbg !200
  %93 = load i32* %92, align 4, !dbg !200, !tbaa !66
  %94 = icmp eq i32 %93, 4, !dbg !202
  %95 = zext i1 %94 to i32, !dbg !203
  %.attackers.14 = add nsw i32 %95, %attackers.1425, !dbg !203
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !204
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !204
  br i1 %exitcond, label %.loopexit, label %.preheader, !dbg !204

.loopexit:                                        ; preds = %.preheader10, %.preheader, %0
  %.0 = phi i32 [ 0, %0 ], [ %.attackers.14, %.preheader ], [ %.attackers.6, %.preheader10 ]
  ret i32 %.0, !dbg !205
}
