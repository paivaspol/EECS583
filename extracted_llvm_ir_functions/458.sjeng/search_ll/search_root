define void @search_root(%struct.move_s* noalias nocapture sret %agg.result, i32 %originalalpha, i32 %originalbeta, i32 %depth) #0 {
entry:
  %moves = alloca [512 x %struct.move_s], align 16
  %best_move = alloca %struct.move_s, align 4
  %i = alloca i32, align 4
  %move_ordering = alloca [512 x i32], align 16
  %see_values = alloca [512 x i32], align 16
  %kswap = alloca %struct.move_s, align 4
  %0 = bitcast [512 x %struct.move_s]* %moves to i8*
  call void @llvm.lifetime.start(i64 12288, i8* %0) #2
  %1 = bitcast %struct.move_s* %best_move to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false), !tbaa.struct !4
  %2 = bitcast [512 x i32]* %move_ordering to i8*
  call void @llvm.lifetime.start(i64 2048, i8* %2) #2
  %3 = bitcast [512 x i32]* %see_values to i8*
  call void @llvm.lifetime.start(i64 2048, i8* %3) #2
  store i32 1, i32* @ply, align 4, !tbaa !2
  store i32 1, i32* @searching_pv, align 4, !tbaa !0
  store i32 0, i32* @time_exit, align 4, !tbaa !0
  store i32 0, i32* @time_failure, align 4, !tbaa !0
  store i32 -1000000, i32* @cur_score, align 4, !tbaa !2
  %4 = load i32* @nodes, align 4, !tbaa !2
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* @nodes, align 4, !tbaa !2
  %call = call i32 @is_draw() #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 5, i32* @result, align 4, !tbaa !2
  store i32 0, i32* @cur_score, align 4, !tbaa !2
  %5 = load i32* @ply, align 4, !tbaa !2
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds [300 x i32]* @pv_length, i64 0, i64 %idxprom
  store i32 0, i32* %arrayidx, align 4, !tbaa !2
  %6 = bitcast %struct.move_s* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false), !tbaa.struct !4
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = load i32* @ply, align 4, !tbaa !2
  %idxprom1 = sext i32 %7 to i64
  %arrayidx2 = getelementptr inbounds [300 x i32]* @pv_length, i64 0, i64 %idxprom1
  store i32 %7, i32* %arrayidx2, align 4, !tbaa !2
  %8 = load i32* @hash, align 4, !tbaa !2
  %9 = load i32* @move_number, align 4, !tbaa !2
  %add = add i32 %9, -1
  %sub = add i32 %add, %7
  %idxprom3 = sext i32 %sub to i64
  %arrayidx4 = getelementptr inbounds [600 x i32]* @hash_history, i64 0, i64 %idxprom3
  store i32 %8, i32* %arrayidx4, align 4, !tbaa !2
  %call5 = call i32 @in_check() #5
  %tobool6 = icmp eq i32 %call5, 0
  br i1 %tobool6, label %if.end10, label %if.then7

if.then7:                                         ; preds = %if.end
  %10 = load i32* @ext_check, align 4, !tbaa !2
  %inc8 = add i32 %10, 1
  store i32 %inc8, i32* @ext_check, align 4, !tbaa !2
  %inc9 = add nsw i32 %depth, 1
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then7
  %depth.addr.0 = phi i32 [ %inc9, %if.then7 ], [ %depth, %if.end ]
  %11 = load i32* @ply, align 4, !tbaa !2
  %idxprom11 = sext i32 %11 to i64
  %arrayidx12 = getelementptr inbounds [300 x i32]* @checks, i64 0, i64 %idxprom11
  store i32 %call5, i32* %arrayidx12, align 4, !tbaa !0
  %arrayidx14 = getelementptr inbounds [300 x i32]* @recaps, i64 0, i64 %idxprom11
  store i32 0, i32* %arrayidx14, align 4, !tbaa !0
  %arrayidx16 = getelementptr inbounds [300 x i32]* @singular, i64 0, i64 %idxprom11
  store i32 0, i32* %arrayidx16, align 4, !tbaa !0
  %12 = load i32* @Variant, align 4, !tbaa !2
  %cmp = icmp eq i32 %12, 4
  br i1 %cmp, label %if.then17, label %if.else

if.then17:                                        ; preds = %if.end10
  store i32 0, i32* @legals, align 4, !tbaa !2
  store i32 1, i32* @captures, align 4, !tbaa !0
  %arrayidx18 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 0
  call void @gen(%struct.move_s* %arrayidx18) #5
  %13 = load i32* @numb_moves, align 4, !tbaa !2
  store i32 0, i32* @captures, align 4, !tbaa !0
  %tobool19 = icmp eq i32 %13, 0
  br i1 %tobool19, label %if.end31, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then17
  store i32 0, i32* %i, align 4, !tbaa !2
  %cmp21592 = icmp sgt i32 %13, 0
  br i1 %cmp21592, label %for.body, label %if.end31

for.body:                                         ; preds = %for.cond.preheader, %if.end28
  %storemerge559593 = phi i32 [ %inc30, %if.end28 ], [ 0, %for.cond.preheader ]
  call void @make(%struct.move_s* %arrayidx18, i32 %storemerge559593) #5
  %14 = load i32* %i, align 4, !tbaa !2
  %call24 = call i32 @check_legal(%struct.move_s* %arrayidx18, i32 %14, i32 %call5) #5
  %tobool25 = icmp eq i32 %call24, 0
  br i1 %tobool25, label %if.end28, label %if.then26

if.then26:                                        ; preds = %for.body
  %15 = load i32* @legals, align 4, !tbaa !2
  %inc27 = add nsw i32 %15, 1
  store i32 %inc27, i32* @legals, align 4, !tbaa !2
  br label %if.end28

if.end28:                                         ; preds = %for.body, %if.then26
  %16 = load i32* %i, align 4, !tbaa !2
  call void @unmake(%struct.move_s* %arrayidx18, i32 %16) #5
  %17 = load i32* %i, align 4, !tbaa !2
  %inc30 = add nsw i32 %17, 1
  store i32 %inc30, i32* %i, align 4, !tbaa !2
  %cmp21 = icmp slt i32 %inc30, %13
  br i1 %cmp21, label %for.body, label %if.end31

if.end31:                                         ; preds = %for.cond.preheader, %if.end28, %if.then17
  %18 = load i32* @legals, align 4, !tbaa !2
  %tobool32 = icmp eq i32 %18, 0
  br i1 %tobool32, label %if.then33, label %if.end51

if.then33:                                        ; preds = %if.end31
  store i32 0, i32* @captures, align 4, !tbaa !0
  call void @gen(%struct.move_s* %arrayidx18) #5
  %19 = load i32* @numb_moves, align 4, !tbaa !2
  store i32 0, i32* %i, align 4, !tbaa !2
  %cmp36590 = icmp sgt i32 %19, 0
  br i1 %cmp36590, label %for.body37, label %if.end51

for.body37:                                       ; preds = %if.then33, %if.end44
  %storemerge591 = phi i32 [ %inc47, %if.end44 ], [ 0, %if.then33 ]
  call void @make(%struct.move_s* %arrayidx18, i32 %storemerge591) #5
  %20 = load i32* %i, align 4, !tbaa !2
  %call40 = call i32 @check_legal(%struct.move_s* %arrayidx18, i32 %20, i32 %call5) #5
  %tobool41 = icmp eq i32 %call40, 0
  br i1 %tobool41, label %if.end44, label %if.then42

if.then42:                                        ; preds = %for.body37
  %21 = load i32* @legals, align 4, !tbaa !2
  %inc43 = add nsw i32 %21, 1
  store i32 %inc43, i32* @legals, align 4, !tbaa !2
  br label %if.end44

if.end44:                                         ; preds = %for.body37, %if.then42
  %22 = load i32* %i, align 4, !tbaa !2
  call void @unmake(%struct.move_s* %arrayidx18, i32 %22) #5
  %23 = load i32* %i, align 4, !tbaa !2
  %inc47 = add nsw i32 %23, 1
  store i32 %inc47, i32* %i, align 4, !tbaa !2
  %cmp36 = icmp slt i32 %inc47, %19
  br i1 %cmp36, label %for.body37, label %if.end51

if.else:                                          ; preds = %if.end10
  %arrayidx50 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 0
  call void @gen(%struct.move_s* %arrayidx50) #5
  %24 = load i32* @numb_moves, align 4, !tbaa !2
  br label %if.end51

if.end51:                                         ; preds = %if.then33, %if.end44, %if.end31, %if.else
  %num_moves.0 = phi i32 [ %13, %if.end31 ], [ %24, %if.else ], [ %19, %if.end44 ], [ %19, %if.then33 ]
  %25 = load i32* @legals, align 4, !tbaa !2
  store i32 %25, i32* @movetotal, align 4, !tbaa !2
  %arrayidx52 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 0
  %arrayidx53 = getelementptr inbounds [512 x i32]* %move_ordering, i64 0, i64 0
  %arrayidx54 = getelementptr inbounds [512 x i32]* %see_values, i64 0, i64 0
  call void @order_moves(%struct.move_s* %arrayidx52, i32* %arrayidx53, i32* %arrayidx54, i32 %num_moves.0, i32 -1) #6
  %26 = bitcast %struct.move_s* %kswap to i8*
  %sub99 = sub nsw i32 0, %originalbeta
  %sub101 = add nsw i32 %depth.addr.0, -1
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.end444, %if.end51
  %root_score.0.ph = phi i32 [ -1000000, %if.end51 ], [ %85, %if.end444 ]
  %no_moves.0.ph = phi i32 [ 1, %if.end51 ], [ %no_moves.1, %if.end444 ]
  %first.0.ph = phi i32 [ 1, %if.end51 ], [ %first.0., %if.end444 ]
  %alpha.0.ph = phi i32 [ %originalalpha, %if.end51 ], [ %alpha.1, %if.end444 ]
  %mc.0.ph = phi i32 [ 0, %if.end51 ], [ %mc.1, %if.end444 ]
  br label %while.cond

while.cond:                                       ; preds = %while.cond.outer, %land.lhs.true62
  %call56 = call i32 @remove_one(i32* %i, i32* %arrayidx53, i32 %num_moves.0) #6
  %tobool57 = icmp eq i32 %call56, 0
  br i1 %tobool57, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond
  %27 = load i32* @alllosers, align 4, !tbaa !2
  %tobool58 = icmp eq i32 %27, 0
  %28 = load i32* %i, align 4, !tbaa !2
  br i1 %tobool58, label %land.lhs.true, label %if.end66

land.lhs.true:                                    ; preds = %while.body
  %idxprom59 = sext i32 %28 to i64
  %arrayidx60 = getelementptr inbounds [300 x i32]* @rootlosers, i64 0, i64 %idxprom59
  %29 = load i32* %arrayidx60, align 4, !tbaa !2
  %tobool61 = icmp eq i32 %29, 0
  br i1 %tobool61, label %if.end66, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %land.lhs.true
  %30 = load i32* @Variant, align 4, !tbaa !2
  %.off558 = add i32 %30, -3
  %31 = icmp ult i32 %.off558, 2
  br i1 %31, label %while.cond, label %if.end66

if.end66:                                         ; preds = %while.body, %land.lhs.true, %land.lhs.true62
  call void @make(%struct.move_s* %arrayidx52, i32 %28) #5
  %32 = load i32* @hash, align 4, !tbaa !2
  %33 = load i32* @move_number, align 4, !tbaa !2
  %34 = load i32* @ply, align 4, !tbaa !2
  %add68 = add i32 %33, -1
  %sub69 = add i32 %add68, %34
  %idxprom70 = sext i32 %sub69 to i64
  %arrayidx71 = getelementptr inbounds [600 x i32]* @hash_history, i64 0, i64 %idxprom70
  store i32 %32, i32* %arrayidx71, align 4, !tbaa !2
  %sub72 = add nsw i32 %34, -1
  %idxprom73 = sext i32 %sub72 to i64
  %arrayidx74 = getelementptr inbounds [300 x %struct.move_s]* @path, i64 0, i64 %idxprom73
  %35 = load i32* %i, align 4, !tbaa !2
  %idxprom75 = sext i32 %35 to i64
  %arrayidx76 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom75
  %36 = bitcast %struct.move_s* %arrayidx74 to i8*
  %37 = bitcast %struct.move_s* %arrayidx76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 24, i32 4, i1 false), !tbaa.struct !4
  %38 = load i32* @nodes, align 4, !tbaa !2
  %call78 = call i32 @check_legal(%struct.move_s* %arrayidx52, i32 %35, i32 %call5) #5
  %tobool79 = icmp eq i32 %call78, 0
  br i1 %tobool79, label %if.end248, label %if.then80

if.then80:                                        ; preds = %if.end66
  %39 = load i32* %i, align 4, !tbaa !2
  call void @unmake(%struct.move_s* %arrayidx52, i32 %39) #5
  %inc82 = add nsw i32 %mc.0.ph, 1
  %40 = load i32* @movetotal, align 4, !tbaa !2
  %sub83 = sub nsw i32 %40, %inc82
  store i32 %sub83, i32* @moveleft, align 4, !tbaa !2
  %41 = load i32* %i, align 4, !tbaa !2
  %idxprom84 = sext i32 %41 to i64
  %arrayidx85 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom84
  call void @comp_to_san(%struct.move_s* byval align 8 %arrayidx85, i8* getelementptr inbounds ([20 x i8]* @searching_move, i64 0, i64 0)) #5
  %42 = load i32* %i, align 4, !tbaa !2
  call void @make(%struct.move_s* %arrayidx52, i32 %42) #5
  %43 = load i32* %i, align 4, !tbaa !2
  %call88 = call i32 @f_in_check(%struct.move_s* %arrayidx52, i32 %43) #5
  %44 = load i32* @ply, align 4, !tbaa !2
  %idxprom89 = sext i32 %44 to i64
  %arrayidx90 = getelementptr inbounds [300 x i32]* @checks, i64 0, i64 %idxprom89
  store i32 %call88, i32* %arrayidx90, align 4, !tbaa !0
  %arrayidx92 = getelementptr inbounds [300 x i32]* @recaps, i64 0, i64 %idxprom89
  store i32 0, i32* %arrayidx92, align 4, !tbaa !0
  %arrayidx94 = getelementptr inbounds [300 x i32]* @singular, i64 0, i64 %idxprom89
  store i32 0, i32* %arrayidx94, align 4, !tbaa !0
  %cmp95 = icmp eq i32 %first.0.ph, 1
  %45 = load i32* @i_depth, align 4, !tbaa !2
  %cmp97 = icmp slt i32 %45, 2
  %or.cond486 = or i1 %cmp95, %cmp97
  %sub100 = sub nsw i32 0, %alpha.0.ph
  br i1 %or.cond486, label %if.then98, label %if.else162

if.then98:                                        ; preds = %if.then80
  %call102 = call i32 @search(i32 %sub99, i32 %sub100, i32 %sub101, i32 0) #6
  %sub103 = sub nsw i32 0, %call102
  %46 = load i32* @time_exit, align 4, !tbaa !0
  %tobool104 = icmp eq i32 %46, 0
  br i1 %tobool104, label %land.lhs.true105, label %if.end232.thread

if.end232.thread:                                 ; preds = %if.then98
  %47 = load i32* @cur_score, align 4, !tbaa !2
  br label %if.end239

land.lhs.true105:                                 ; preds = %if.then98
  %48 = load i32* @post, align 4, !tbaa !0
  %49 = load i32* @xb_mode, align 4, !tbaa !2
  %notlhs = icmp ne i32 %48, 0
  %notrhs = icmp eq i32 %49, 0
  %or.cond487.not = or i1 %notrhs, %notlhs
  %50 = load i32* @i_depth, align 4, !tbaa !2
  %cmp110 = icmp sgt i32 %50, 1
  %or.cond488 = and i1 %or.cond487.not, %cmp110
  br i1 %or.cond488, label %if.then111, label %if.end232

if.then111:                                       ; preds = %land.lhs.true105
  %cmp112 = icmp slt i32 %sub103, %originalbeta
  br i1 %cmp112, label %if.else116, label %if.then113

if.then113:                                       ; preds = %if.then111
  %51 = load i32* %i, align 4, !tbaa !2
  %idxprom114 = sext i32 %51 to i64
  %arrayidx115 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom114
  call void @post_fh_thinking(i32 %sub103, %struct.move_s* %arrayidx115) #5
  br label %if.end153

if.else116:                                       ; preds = %if.then111
  %cmp117 = icmp slt i32 %alpha.0.ph, %sub103
  br i1 %cmp117, label %if.else121, label %if.then118

if.then118:                                       ; preds = %if.else116
  store i32 1, i32* @failed, align 4, !tbaa !2
  %52 = load i32* %i, align 4, !tbaa !2
  %idxprom119 = sext i32 %52 to i64
  %arrayidx120 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom119
  call void @post_fl_thinking(i32 %sub103, %struct.move_s* %arrayidx120) #5
  br label %if.end153

if.else121:                                       ; preds = %if.else116
  %53 = load i32* @ply, align 4, !tbaa !2
  %sub122 = add nsw i32 %53, -1
  %idxprom123 = sext i32 %sub122 to i64
  %arrayidx127 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i64 0, i64 %idxprom123, i64 %idxprom123
  %54 = load i32* %i, align 4, !tbaa !2
  %idxprom128 = sext i32 %54 to i64
  %arrayidx129 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom128
  %55 = bitcast %struct.move_s* %arrayidx127 to i8*
  %56 = bitcast %struct.move_s* %arrayidx129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 24, i32 4, i1 false), !tbaa.struct !4
  %idxprom131572 = sext i32 %53 to i64
  %arrayidx132573 = getelementptr inbounds [300 x i32]* @pv_length, i64 0, i64 %idxprom131572
  %57 = load i32* %arrayidx132573, align 4, !tbaa !2
  %cmp133574 = icmp slt i32 %53, %57
  br i1 %cmp133574, label %for.body134, label %for.end146

for.body134:                                      ; preds = %if.else121, %for.body134
  %indvars.iv596 = phi i64 [ %indvars.iv.next597, %for.body134 ], [ %idxprom131572, %if.else121 ]
  %arrayidx139 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i64 0, i64 %idxprom123, i64 %indvars.iv596
  %arrayidx143 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i64 0, i64 %idxprom131572, i64 %indvars.iv596
  %58 = bitcast %struct.move_s* %arrayidx139 to i8*
  %59 = bitcast %struct.move_s* %arrayidx143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 24, i32 4, i1 false), !tbaa.struct !4
  %indvars.iv.next597 = add i64 %indvars.iv596, 1
  %60 = trunc i64 %indvars.iv.next597 to i32
  %cmp133 = icmp slt i32 %60, %57
  br i1 %cmp133, label %for.body134, label %for.end146

for.end146:                                       ; preds = %for.body134, %if.else121
  %arrayidx151 = getelementptr inbounds [300 x i32]* @pv_length, i64 0, i64 %idxprom123
  store i32 %57, i32* %arrayidx151, align 4, !tbaa !2
  call void @post_thinking(i32 %sub103) #5
  br label %if.end153

if.end153:                                        ; preds = %if.then118, %for.end146, %if.then113
  %61 = load i32* @cur_score, align 4, !tbaa !2
  %cmp154 = icmp sge i32 %61, %sub103
  %62 = load i32* @time_exit, align 4, !tbaa !0
  %tobool156 = icmp ne i32 %62, 0
  %or.cond489 = or i1 %cmp154, %tobool156
  br i1 %or.cond489, label %if.end232, label %if.then157

if.then157:                                       ; preds = %if.end153
  store i32 %sub103, i32* @cur_score, align 4, !tbaa !2
  %63 = load i32* %i, align 4, !tbaa !2
  store i32 %63, i32* @bestmovenum, align 4, !tbaa !2
  %idxprom158 = sext i32 %63 to i64
  %arrayidx159 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom158
  %64 = bitcast %struct.move_s* %arrayidx159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %64, i64 24, i32 4, i1 false), !tbaa.struct !4
  br label %if.end232

if.else162:                                       ; preds = %if.then80
  %sub164 = xor i32 %alpha.0.ph, -1
  %call167 = call i32 @search(i32 %sub164, i32 %sub100, i32 %sub101, i32 0) #6
  %sub168 = sub nsw i32 0, %call167
  %cmp169 = icmp slt i32 %alpha.0.ph, %sub168
  br i1 %cmp169, label %land.lhs.true170, label %if.else162.if.end224_crit_edge

if.else162.if.end224_crit_edge:                   ; preds = %if.else162
  %.pre607 = load i32* @time_exit, align 4, !tbaa !0
  br label %if.end224

land.lhs.true170:                                 ; preds = %if.else162
  %cmp171 = icmp sge i32 %sub168, %originalbeta
  %65 = load i32* @time_exit, align 4, !tbaa !0
  %tobool173 = icmp ne i32 %65, 0
  %or.cond490 = or i1 %cmp171, %tobool173
  br i1 %or.cond490, label %if.end224, label %if.then174

if.then174:                                       ; preds = %land.lhs.true170
  %66 = load i32* %i, align 4, !tbaa !2
  %idxprom175 = sext i32 %66 to i64
  %arrayidx176 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom175
  call void @post_fail_thinking(i32 %sub168, %struct.move_s* %arrayidx176) #5
  %call180 = call i32 @search(i32 %sub99, i32 %sub100, i32 %sub101, i32 0) #6
  %sub181 = sub nsw i32 0, %call180
  %cmp182 = icmp sge i32 %alpha.0.ph, %sub181
  %67 = load i32* @time_exit, align 4, !tbaa !0
  %tobool184 = icmp ne i32 %67, 0
  %or.cond491 = or i1 %cmp182, %tobool184
  br i1 %or.cond491, label %if.end224, label %if.then185

if.then185:                                       ; preds = %if.then174
  store i32 0, i32* @failed, align 4, !tbaa !2
  store i32 %sub181, i32* @cur_score, align 4, !tbaa !2
  %68 = load i32* %i, align 4, !tbaa !2
  store i32 %68, i32* @bestmovenum, align 4, !tbaa !2
  %idxprom186 = sext i32 %68 to i64
  %arrayidx187 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom186
  %69 = bitcast %struct.move_s* %arrayidx187 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %69, i64 24, i32 4, i1 false), !tbaa.struct !4
  %cmp188 = icmp slt i32 %sub181, %originalbeta
  %70 = load i32* @i_depth, align 4, !tbaa !2
  %cmp190 = icmp sgt i32 %70, 1
  %or.cond492 = and i1 %cmp188, %cmp190
  br i1 %or.cond492, label %if.then191, label %if.end224

if.then191:                                       ; preds = %if.then185
  %71 = load i32* @ply, align 4, !tbaa !2
  %sub192 = add nsw i32 %71, -1
  %idxprom193 = sext i32 %sub192 to i64
  %arrayidx197 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i64 0, i64 %idxprom193, i64 %idxprom193
  %72 = bitcast %struct.move_s* %arrayidx197 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %69, i64 24, i32 4, i1 false), !tbaa.struct !4
  %idxprom201564 = sext i32 %71 to i64
  %arrayidx202565 = getelementptr inbounds [300 x i32]* @pv_length, i64 0, i64 %idxprom201564
  %73 = load i32* %arrayidx202565, align 4, !tbaa !2
  %cmp203566 = icmp slt i32 %71, %73
  br i1 %cmp203566, label %for.body204, label %for.end216

for.body204:                                      ; preds = %if.then191, %for.body204
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body204 ], [ %idxprom201564, %if.then191 ]
  %arrayidx209 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i64 0, i64 %idxprom193, i64 %indvars.iv
  %arrayidx213 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i64 0, i64 %idxprom201564, i64 %indvars.iv
  %74 = bitcast %struct.move_s* %arrayidx209 to i8*
  %75 = bitcast %struct.move_s* %arrayidx213 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 24, i32 4, i1 false), !tbaa.struct !4
  %indvars.iv.next = add i64 %indvars.iv, 1
  %76 = trunc i64 %indvars.iv.next to i32
  %cmp203 = icmp slt i32 %76, %73
  br i1 %cmp203, label %for.body204, label %for.end216

for.end216:                                       ; preds = %for.body204, %if.then191
  %arrayidx221 = getelementptr inbounds [300 x i32]* @pv_length, i64 0, i64 %idxprom193
  store i32 %73, i32* %arrayidx221, align 4, !tbaa !2
  br label %if.end224

if.end224:                                        ; preds = %if.else162.if.end224_crit_edge, %if.then174, %for.end216, %if.then185, %land.lhs.true170
  %77 = phi i32 [ %65, %land.lhs.true170 ], [ %67, %if.then174 ], [ 0, %for.end216 ], [ 0, %if.then185 ], [ %.pre607, %if.else162.if.end224_crit_edge ]
  %root_score.1 = phi i32 [ %sub168, %land.lhs.true170 ], [ %sub181, %if.then174 ], [ %sub181, %for.end216 ], [ %sub181, %if.then185 ], [ %sub168, %if.else162.if.end224_crit_edge ]
  %cmp225 = icmp slt i32 %root_score.1, %originalbeta
  %tobool227 = icmp ne i32 %77, 0
  %or.cond493 = or i1 %cmp225, %tobool227
  br i1 %or.cond493, label %if.end232, label %if.then228

if.then228:                                       ; preds = %if.end224
  %78 = load i32* %i, align 4, !tbaa !2
  %idxprom229 = sext i32 %78 to i64
  %arrayidx230 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom229
  call void @post_fh_thinking(i32 %root_score.1, %struct.move_s* %arrayidx230) #5
  %.pre604 = load i32* @time_exit, align 4, !tbaa !0
  br label %if.end232

if.end232:                                        ; preds = %if.end224, %land.lhs.true105, %if.then228, %if.end153, %if.then157
  %79 = phi i32 [ %62, %if.end153 ], [ 0, %if.then157 ], [ %.pre604, %if.then228 ], [ 0, %land.lhs.true105 ], [ %77, %if.end224 ]
  %root_score.2 = phi i32 [ %sub103, %if.end153 ], [ %sub103, %if.then157 ], [ %root_score.1, %if.then228 ], [ %sub103, %land.lhs.true105 ], [ %root_score.1, %if.end224 ]
  %80 = load i32* @cur_score, align 4, !tbaa !2
  %cmp233 = icmp sle i32 %root_score.2, %80
  %tobool235 = icmp ne i32 %79, 0
  %or.cond494 = or i1 %cmp233, %tobool235
  br i1 %or.cond494, label %if.end239, label %if.then236

if.then236:                                       ; preds = %if.end232
  store i32 %root_score.2, i32* @cur_score, align 4, !tbaa !2
  %81 = load i32* %i, align 4, !tbaa !2
  store i32 %81, i32* @bestmovenum, align 4, !tbaa !2
  %idxprom237 = sext i32 %81 to i64
  %arrayidx238 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom237
  %82 = bitcast %struct.move_s* %arrayidx238 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %82, i64 24, i32 4, i1 false), !tbaa.struct !4
  br label %if.end239

if.end239:                                        ; preds = %if.end232.thread, %if.end232, %if.then236
  %root_score.2611 = phi i32 [ %root_score.2, %if.end232 ], [ %root_score.2, %if.then236 ], [ %sub103, %if.end232.thread ]
  %83 = phi i32 [ %79, %if.end232 ], [ %79, %if.then236 ], [ %46, %if.end232.thread ]
  %84 = phi i32 [ %80, %if.end232 ], [ %root_score.2, %if.then236 ], [ %47, %if.end232.thread ]
  %notlhs561 = icmp eq i32 %83, 0
  %notrhs562 = icmp ne i32 %84, -1000000
  %or.cond495.not = or i1 %notrhs562, %notlhs561
  %tobool244 = icmp eq i32 %no_moves.0.ph, 0
  %or.cond = or i1 %or.cond495.not, %tobool244
  br i1 %or.cond, label %if.end248, label %if.then245

if.then245:                                       ; preds = %if.end239
  store i32 1, i32* @time_failure, align 4, !tbaa !0
  br label %if.end248

if.end248:                                        ; preds = %if.end239, %if.end66, %if.then245
  %85 = phi i32 [ %root_score.2611, %if.then245 ], [ %root_score.0.ph, %if.end66 ], [ %root_score.2611, %if.end239 ]
  %no_moves.1 = phi i32 [ 0, %if.then245 ], [ %no_moves.0.ph, %if.end66 ], [ 0, %if.end239 ]
  %legal_move.0 = phi i32 [ 1, %if.then245 ], [ 0, %if.end66 ], [ 1, %if.end239 ]
  %mc.1 = phi i32 [ %inc82, %if.then245 ], [ %mc.0.ph, %if.end66 ], [ %inc82, %if.end239 ]
  %86 = load i32* %i, align 4, !tbaa !2
  call void @unmake(%struct.move_s* %arrayidx52, i32 %86) #5
  %87 = load i32* @time_exit, align 4, !tbaa !0
  %tobool250 = icmp eq i32 %87, 0
  br i1 %tobool250, label %if.end252, label %if.then251

if.then251:                                       ; preds = %if.end248
  %88 = bitcast %struct.move_s* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %1, i64 24, i32 4, i1 false), !tbaa.struct !4
  br label %cleanup

if.end252:                                        ; preds = %if.end248
  %cmp253 = icmp sle i32 %85, %alpha.0.ph
  %tobool255 = icmp eq i32 %legal_move.0, 0
  %or.cond560 = or i1 %cmp253, %tobool255
  br i1 %or.cond560, label %if.end444, label %if.then256

if.then256:                                       ; preds = %if.end252
  %89 = load i32* %i, align 4, !tbaa !2
  %idxprom257 = sext i32 %89 to i64
  %from = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom257, i32 0
  %90 = load i32* %from, align 8, !tbaa !2
  %91 = load i32* @ply, align 4, !tbaa !2
  %idxprom259 = sext i32 %91 to i64
  %from261 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i64 0, i64 %idxprom259, i32 0
  %92 = load i32* %from261, align 4, !tbaa !2
  %cmp262 = icmp eq i32 %90, %92
  br i1 %cmp262, label %land.lhs.true263, label %if.else281

land.lhs.true263:                                 ; preds = %if.then256
  %target = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom257, i32 1
  %93 = load i32* %target, align 4, !tbaa !2
  %target268 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i64 0, i64 %idxprom259, i32 1
  %94 = load i32* %target268, align 4, !tbaa !2
  %cmp269 = icmp eq i32 %93, %94
  br i1 %cmp269, label %land.lhs.true270, label %if.else281

land.lhs.true270:                                 ; preds = %land.lhs.true263
  %promoted = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom257, i32 3
  %95 = load i32* %promoted, align 4, !tbaa !2
  %promoted275 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i64 0, i64 %idxprom259, i32 3
  %96 = load i32* %promoted275, align 4, !tbaa !2
  %cmp276 = icmp eq i32 %95, %96
  br i1 %cmp276, label %if.then277, label %if.else281

if.then277:                                       ; preds = %land.lhs.true270
  %arrayidx279 = getelementptr inbounds [300 x i32]* @killer_scores, i64 0, i64 %idxprom259
  %97 = load i32* %arrayidx279, align 4, !tbaa !2
  %inc280 = add nsw i32 %97, 1
  store i32 %inc280, i32* %arrayidx279, align 4, !tbaa !2
  br label %if.end392

if.else281:                                       ; preds = %land.lhs.true270, %land.lhs.true263, %if.then256
  %from287 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i64 0, i64 %idxprom259, i32 0
  %98 = load i32* %from287, align 4, !tbaa !2
  %cmp288 = icmp eq i32 %90, %98
  br i1 %cmp288, label %land.lhs.true289, label %if.else332

land.lhs.true289:                                 ; preds = %if.else281
  %target292 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom257, i32 1
  %99 = load i32* %target292, align 4, !tbaa !2
  %target295 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i64 0, i64 %idxprom259, i32 1
  %100 = load i32* %target295, align 4, !tbaa !2
  %cmp296 = icmp eq i32 %99, %100
  br i1 %cmp296, label %land.lhs.true297, label %if.else332

land.lhs.true297:                                 ; preds = %land.lhs.true289
  %promoted300 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom257, i32 3
  %101 = load i32* %promoted300, align 4, !tbaa !2
  %promoted303 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i64 0, i64 %idxprom259, i32 3
  %102 = load i32* %promoted303, align 4, !tbaa !2
  %cmp304 = icmp eq i32 %101, %102
  br i1 %cmp304, label %if.then305, label %if.else332

if.then305:                                       ; preds = %land.lhs.true297
  %arrayidx307 = getelementptr inbounds [300 x i32]* @killer_scores2, i64 0, i64 %idxprom259
  %103 = load i32* %arrayidx307, align 4, !tbaa !2
  %inc308 = add nsw i32 %103, 1
  store i32 %inc308, i32* %arrayidx307, align 4, !tbaa !2
  %arrayidx312 = getelementptr inbounds [300 x i32]* @killer_scores, i64 0, i64 %idxprom259
  %104 = load i32* %arrayidx312, align 4, !tbaa !2
  %cmp313 = icmp slt i32 %103, %104
  br i1 %cmp313, label %if.end392, label %if.then314

if.then314:                                       ; preds = %if.then305
  %arrayidx316 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i64 0, i64 %idxprom259
  %105 = bitcast %struct.move_s* %arrayidx316 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %105, i64 24, i32 4, i1 false), !tbaa.struct !4
  %arrayidx320 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i64 0, i64 %idxprom259
  %106 = bitcast %struct.move_s* %arrayidx320 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %105, i8* %106, i64 24, i32 4, i1 false), !tbaa.struct !4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %106, i8* %26, i64 24, i32 4, i1 false), !tbaa.struct !4
  store i32 %inc308, i32* %arrayidx312, align 4, !tbaa !2
  store i32 %104, i32* %arrayidx307, align 4, !tbaa !2
  br label %if.end392

if.else332:                                       ; preds = %land.lhs.true297, %land.lhs.true289, %if.else281
  %from338 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i64 0, i64 %idxprom259, i32 0
  %107 = load i32* %from338, align 4, !tbaa !2
  %cmp339 = icmp eq i32 %90, %107
  %target343 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom257, i32 1
  %108 = load i32* %target343, align 4, !tbaa !2
  br i1 %cmp339, label %land.lhs.true340, label %if.else383

land.lhs.true340:                                 ; preds = %if.else332
  %target346 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i64 0, i64 %idxprom259, i32 1
  %109 = load i32* %target346, align 4, !tbaa !2
  %cmp347 = icmp eq i32 %108, %109
  br i1 %cmp347, label %land.lhs.true348, label %if.else383

land.lhs.true348:                                 ; preds = %land.lhs.true340
  %promoted351 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom257, i32 3
  %110 = load i32* %promoted351, align 4, !tbaa !2
  %promoted354 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i64 0, i64 %idxprom259, i32 3
  %111 = load i32* %promoted354, align 4, !tbaa !2
  %cmp355 = icmp eq i32 %110, %111
  br i1 %cmp355, label %if.then356, label %if.else383

if.then356:                                       ; preds = %land.lhs.true348
  %arrayidx358 = getelementptr inbounds [300 x i32]* @killer_scores3, i64 0, i64 %idxprom259
  %112 = load i32* %arrayidx358, align 4, !tbaa !2
  %inc359 = add nsw i32 %112, 1
  store i32 %inc359, i32* %arrayidx358, align 4, !tbaa !2
  %arrayidx363 = getelementptr inbounds [300 x i32]* @killer_scores2, i64 0, i64 %idxprom259
  %113 = load i32* %arrayidx363, align 4, !tbaa !2
  %cmp364 = icmp slt i32 %112, %113
  br i1 %cmp364, label %if.end392, label %if.then365

if.then365:                                       ; preds = %if.then356
  %arrayidx367 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i64 0, i64 %idxprom259
  %114 = bitcast %struct.move_s* %arrayidx367 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %114, i64 24, i32 4, i1 false), !tbaa.struct !4
  %arrayidx371 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i64 0, i64 %idxprom259
  %115 = bitcast %struct.move_s* %arrayidx371 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 24, i32 4, i1 false), !tbaa.struct !4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %115, i8* %26, i64 24, i32 4, i1 false), !tbaa.struct !4
  store i32 %inc359, i32* %arrayidx363, align 4, !tbaa !2
  store i32 %113, i32* %arrayidx358, align 4, !tbaa !2
  br label %if.end392

if.else383:                                       ; preds = %if.else332, %land.lhs.true348, %land.lhs.true340
  %arrayidx385 = getelementptr inbounds [300 x i32]* @killer_scores3, i64 0, i64 %idxprom259
  store i32 1, i32* %arrayidx385, align 4, !tbaa !2
  %arrayidx387 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i64 0, i64 %idxprom259
  %arrayidx389 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom257
  %116 = bitcast %struct.move_s* %arrayidx387 to i8*
  %117 = bitcast %struct.move_s* %arrayidx389 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %116, i8* %117, i64 24, i32 4, i1 false), !tbaa.struct !4
  br label %if.end392

if.end392:                                        ; preds = %if.then305, %if.then356, %if.then314, %if.then365, %if.else383, %if.then277
  %118 = phi i32 [ %99, %if.then314 ], [ %99, %if.then305 ], [ %108, %if.then356 ], [ %108, %if.then365 ], [ %108, %if.else383 ], [ %93, %if.then277 ]
  %idxprom396 = sext i32 %118 to i64
  %idxprom400 = sext i32 %90 to i64
  %arrayidx402 = getelementptr inbounds [144 x [144 x i32]]* @history_h, i64 0, i64 %idxprom400, i64 %idxprom396
  %119 = load i32* %arrayidx402, align 4, !tbaa !2
  %inc403 = add i32 %119, 1
  store i32 %inc403, i32* %arrayidx402, align 4, !tbaa !2
  %arrayidx405 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom257
  %120 = bitcast %struct.move_s* %arrayidx405 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %120, i64 24, i32 4, i1 false), !tbaa.struct !4
  store i32 %89, i32* @bestmovenum, align 4, !tbaa !2
  store i32 %85, i32* @cur_score, align 4, !tbaa !2
  %arrayidx409 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i64 0, i64 %idxprom259, i64 %idxprom259
  %121 = bitcast %struct.move_s* %arrayidx409 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %121, i8* %120, i64 24, i32 4, i1 false), !tbaa.struct !4
  %j.2581 = add i32 %91, 1
  %idxprom415583 = sext i32 %j.2581 to i64
  %arrayidx416584 = getelementptr inbounds [300 x i32]* @pv_length, i64 0, i64 %idxprom415583
  %122 = load i32* %arrayidx416584, align 4, !tbaa !2
  %cmp417585 = icmp slt i32 %j.2581, %122
  br i1 %cmp417585, label %for.body418, label %for.end430

for.body418:                                      ; preds = %if.end392, %for.body418
  %indvars.iv598 = phi i64 [ %indvars.iv.next599, %for.body418 ], [ %idxprom415583, %if.end392 ]
  %j.2586 = phi i32 [ %j.2, %for.body418 ], [ %j.2581, %if.end392 ]
  %arrayidx422 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i64 0, i64 %idxprom259, i64 %indvars.iv598
  %arrayidx427 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i64 0, i64 %idxprom415583, i64 %indvars.iv598
  %123 = bitcast %struct.move_s* %arrayidx422 to i8*
  %124 = bitcast %struct.move_s* %arrayidx427 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %123, i8* %124, i64 24, i32 4, i1 false), !tbaa.struct !4
  %j.2 = add nsw i32 %j.2586, 1
  %cmp417 = icmp slt i32 %j.2, %122
  %indvars.iv.next599 = add i64 %indvars.iv598, 1
  br i1 %cmp417, label %for.body418, label %for.end430

for.end430:                                       ; preds = %for.body418, %if.end392
  %arrayidx435 = getelementptr inbounds [300 x i32]* @pv_length, i64 0, i64 %idxprom259
  store i32 %122, i32* %arrayidx435, align 4, !tbaa !2
  %cmp436 = icmp slt i32 %85, %originalbeta
  br i1 %cmp436, label %if.end438, label %if.then437

if.then437:                                       ; preds = %for.end430
  %125 = bitcast %struct.move_s* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %125, i8* %1, i64 24, i32 4, i1 false), !tbaa.struct !4
  br label %cleanup

if.end438:                                        ; preds = %for.end430
  %126 = load i32* @post, align 4, !tbaa !0
  %tobool439 = icmp ne i32 %126, 0
  %127 = load i32* @i_depth, align 4, !tbaa !2
  %cmp441 = icmp sgt i32 %127, 1
  %or.cond496 = and i1 %tobool439, %cmp441
  br i1 %or.cond496, label %if.then442, label %if.end444

if.then442:                                       ; preds = %if.end438
  call void @post_thinking(i32 %85) #5
  br label %if.end444

if.end444:                                        ; preds = %if.end252, %if.end438, %if.then442
  %alpha.1 = phi i32 [ %85, %if.then442 ], [ %85, %if.end438 ], [ %alpha.0.ph, %if.end252 ]
  %first.0. = select i1 %tobool255, i32 %first.0.ph, i32 0
  %128 = load i32* @nodes, align 4, !tbaa !2
  %sub448 = sub nsw i32 %128, %38
  %129 = load i32* %i, align 4, !tbaa !2
  %idxprom449 = sext i32 %129 to i64
  %arrayidx450 = getelementptr inbounds [512 x i32]* @rootnodecount, i64 0, i64 %idxprom449
  store i32 %sub448, i32* %arrayidx450, align 4, !tbaa !2
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %tobool451 = icmp eq i32 %no_moves.0.ph, 0
  %130 = load i32* @is_pondering, align 4, !tbaa !0
  %tobool453 = icmp ne i32 %130, 0
  %or.cond497 = or i1 %tobool451, %tobool453
  br i1 %or.cond497, label %if.else474, label %if.then454

if.then454:                                       ; preds = %while.end
  %131 = load i32* @Variant, align 4, !tbaa !2
  %.off = add i32 %131, -3
  %132 = icmp ugt i32 %.off, 1
  br i1 %132, label %if.then458, label %if.else468

if.then458:                                       ; preds = %if.then454
  %call459 = call i32 @in_check() #5
  %tobool460 = icmp eq i32 %call459, 0
  br i1 %tobool460, label %if.else466, label %if.then461

if.then461:                                       ; preds = %if.then458
  %133 = load i32* @white_to_move, align 4, !tbaa !2
  %cmp462 = icmp eq i32 %133, 1
  br i1 %cmp462, label %if.then463, label %if.else464

if.then463:                                       ; preds = %if.then461
  store i32 2, i32* @result, align 4, !tbaa !2
  br label %if.end483

if.else464:                                       ; preds = %if.then461
  store i32 3, i32* @result, align 4, !tbaa !2
  br label %if.end483

if.else466:                                       ; preds = %if.then458
  store i32 1, i32* @result, align 4, !tbaa !2
  br label %if.end483

if.else468:                                       ; preds = %if.then454
  %134 = load i32* @white_to_move, align 4, !tbaa !2
  %cmp469 = icmp eq i32 %134, 1
  br i1 %cmp469, label %if.then470, label %if.else471

if.then470:                                       ; preds = %if.else468
  store i32 3, i32* @result, align 4, !tbaa !2
  br label %if.end483

if.else471:                                       ; preds = %if.else468
  store i32 2, i32* @result, align 4, !tbaa !2
  br label %if.end483

if.else474:                                       ; preds = %while.end
  %tobool475 = icmp eq i32 %130, 0
  %135 = load i32* @fifty, align 4, !tbaa !2
  %cmp477 = icmp sgt i32 %135, 100
  %or.cond499 = and i1 %tobool475, %cmp477
  br i1 %or.cond499, label %if.then478, label %if.end483

if.then478:                                       ; preds = %if.else474
  store i32 4, i32* @result, align 4, !tbaa !2
  store i32 0, i32* @cur_score, align 4, !tbaa !2
  %136 = load i32* @ply, align 4, !tbaa !2
  %idxprom479 = sext i32 %136 to i64
  %arrayidx480 = getelementptr inbounds [300 x i32]* @pv_length, i64 0, i64 %idxprom479
  store i32 0, i32* %arrayidx480, align 4, !tbaa !2
  %137 = bitcast %struct.move_s* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %137, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false), !tbaa.struct !4
  br label %cleanup

if.end483:                                        ; preds = %if.else474, %if.then463, %if.else464, %if.else466, %if.else471, %if.then470
  %138 = bitcast %struct.move_s* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %138, i8* %1, i64 24, i32 4, i1 false), !tbaa.struct !4
  br label %cleanup

cleanup:                                          ; preds = %if.end483, %if.then478, %if.then437, %if.then251, %if.then
  call void @llvm.lifetime.end(i64 2048, i8* %3) #2
  call void @llvm.lifetime.end(i64 2048, i8* %2) #2
  call void @llvm.lifetime.end(i64 12288, i8* %0) #2
  ret void
}
