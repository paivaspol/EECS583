define void @think(%struct.move_s* noalias nocapture sret %agg.result) #0 {
entry:
  %comp_move = alloca %struct.move_s, align 8
  %temp_move = alloca %struct.move_s, align 4
  %moves = alloca [512 x %struct.move_s], align 16
  %output = alloca [8 x i8], align 1
  %tmp287 = alloca %struct.move_s, align 4
  %0 = bitcast [512 x %struct.move_s]* %moves to i8*
  call void @llvm.lifetime.start(i64 12288, i8* %0) #2
  store i32 0, i32* @userealholdings, align 4, !tbaa !2
  %arrayidx = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 0
  %old_move.sroa.0.0.idx = getelementptr inbounds %struct.move_s* %comp_move, i64 0, i32 0
  %old_move.sroa.1.4.idx628 = getelementptr inbounds %struct.move_s* %comp_move, i64 0, i32 1
  %old_move.sroa.2.8.idx631 = getelementptr inbounds %struct.move_s* %comp_move, i64 0, i32 2
  %old_move.sroa.3.12.idx634 = getelementptr inbounds %struct.move_s* %comp_move, i64 0, i32 3
  %old_move.sroa.4.16.idx = getelementptr inbounds %struct.move_s* %comp_move, i64 0, i32 4
  %1 = bitcast i32* %old_move.sroa.4.16.idx to i64*
  %2 = bitcast %struct.move_s* %comp_move to i8*
  %3 = bitcast %struct.move_s* %tmp287 to i8*
  %arraydecay = getelementptr inbounds [8 x i8]* %output, i64 0, i64 0
  %4 = bitcast %struct.move_s* %temp_move to i8*
  br label %restart.outer

restart.outer:                                    ; preds = %for.end334, %if.then337, %entry
  %old_move.sroa.4.0.load663.ph = phi i64 [ undef, %entry ], [ %92, %if.then337 ], [ %92, %for.end334 ]
  %k.0.ph = phi i32 [ 0, %entry ], [ %k.1.lcssa, %if.then337 ], [ %k.1.lcssa, %for.end334 ]
  %temp_score.0.ph = phi i32 [ 0, %entry ], [ %temp_score.5, %if.then337 ], [ %temp_score.5, %for.end334 ]
  %old_move.sroa.0.0.ph = phi i32 [ undef, %entry ], [ %85, %if.then337 ], [ %85, %for.end334 ]
  %old_move.sroa.1.0.ph = phi i32 [ undef, %entry ], [ %87, %if.then337 ], [ %87, %for.end334 ]
  %old_move.sroa.2.0.ph = phi i32 [ undef, %entry ], [ %89, %if.then337 ], [ %89, %for.end334 ]
  %lastlegal.0.ph = phi i32 [ 0, %entry ], [ %lastlegal.5, %if.then337 ], [ %lastlegal.5, %for.end334 ]
  %old_move.sroa.3.0.ph = phi i32 [ undef, %entry ], [ %91, %if.then337 ], [ %91, %for.end334 ]
  %pn_restart.0.ph = phi i32 [ 0, %entry ], [ %inc293, %if.then337 ], [ %inc293, %for.end334 ]
  %tobool68 = icmp ne i32 %pn_restart.0.ph, 0
  %conv72 = sitofp i32 %pn_restart.0.ph to float
  %conv73 = fpext float %conv72 to double
  %add74 = fadd double %conv73, 1.000000e+00
  %cmp288 = icmp slt i32 %pn_restart.0.ph, 10
  br label %restart

restart:                                          ; preds = %restart.outer, %if.else483
  %old_move.sroa.4.0.load663 = phi i64 [ %old_move.sroa.4.0.load664, %if.else483 ], [ %old_move.sroa.4.0.load663.ph, %restart.outer ]
  %temp_score.0 = phi i32 [ %temp_score.5, %if.else483 ], [ %temp_score.0.ph, %restart.outer ]
  %old_move.sroa.0.0 = phi i32 [ %old_move.sroa.0.1, %if.else483 ], [ %old_move.sroa.0.0.ph, %restart.outer ]
  %old_move.sroa.1.0 = phi i32 [ %old_move.sroa.1.1, %if.else483 ], [ %old_move.sroa.1.0.ph, %restart.outer ]
  %old_move.sroa.2.0 = phi i32 [ %old_move.sroa.2.1, %if.else483 ], [ %old_move.sroa.2.0.ph, %restart.outer ]
  %lastlegal.0 = phi i32 [ %lastlegal.5, %if.else483 ], [ %lastlegal.0.ph, %restart.outer ]
  %old_move.sroa.3.0 = phi i32 [ %old_move.sroa.3.1, %if.else483 ], [ %old_move.sroa.3.0.ph, %restart.outer ]
  store i32 0, i32* @nodes, align 4, !tbaa !2
  store i32 0, i32* @qnodes, align 4, !tbaa !2
  store i32 1, i32* @ply, align 4, !tbaa !2
  store i32 0, i32* @ECacheProbes, align 4, !tbaa !2
  store i32 0, i32* @ECacheHits, align 4, !tbaa !2
  store i32 0, i32* @TTProbes, align 4, !tbaa !2
  store i32 0, i32* @TTHits, align 4, !tbaa !2
  store i32 0, i32* @TTStores, align 4, !tbaa !2
  store i32 0, i32* @NCuts, align 4, !tbaa !2
  store i32 0, i32* @NTries, align 4, !tbaa !2
  store i32 0, i32* @TExt, align 4, !tbaa !2
  store i32 0, i32* @FH, align 4, !tbaa !2
  store i32 0, i32* @FHF, align 4, !tbaa !2
  store i32 0, i32* @PVS, align 4, !tbaa !2
  store i32 0, i32* @FULL, align 4, !tbaa !2
  store i32 0, i32* @PVSF, align 4, !tbaa !2
  store i32 0, i32* @ext_check, align 4, !tbaa !2
  store i32 0, i32* @ext_recap, align 4, !tbaa !2
  store i32 0, i32* @ext_onerep, align 4, !tbaa !2
  store i32 0, i32* @razor_drop, align 4, !tbaa !2
  store i32 0, i32* @razor_material, align 4, !tbaa !2
  store i32 0, i32* @drop_cuts, align 4, !tbaa !2
  store i32 0, i32* @extendedtime, align 4, !tbaa !2
  store i32 0, i32* @forcedwin, align 4, !tbaa !2
  store i32 200, i32* @maxposdiff, align 4, !tbaa !2
  store i8 0, i8* @true_i_depth, align 1, !tbaa !0
  store i32 -1, i32* @bestmovenum, align 4, !tbaa !2
  %call = call i32 @interrupt() #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %restart
  %5 = load i32* @is_analyzing, align 4, !tbaa !0
  %6 = load i32* @is_pondering, align 4, !tbaa !0
  %7 = or i32 %6, %5
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %9 = bitcast %struct.move_s* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false), !tbaa.struct !4
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true, %restart
  %call3 = call i64 @rtime() #5
  store i64 %call3, i64* @start_time, align 8, !tbaa !3
  store i32 0, i32* @legals, align 4, !tbaa !2
  %10 = load i32* @Variant, align 4, !tbaa !2
  %cmp = icmp eq i32 %10, 4
  %. = zext i1 %cmp to i32
  store i32 %., i32* @captures, align 4, !tbaa !0
  call void @gen(%struct.move_s* %arrayidx) #5
  %11 = load i32* @numb_moves, align 4, !tbaa !2
  %call6 = call i32 @in_check() #5
  %12 = load i32* @numb_moves, align 4, !tbaa !2
  %cmp7665 = icmp sgt i32 %12, 0
  br i1 %cmp7665, label %for.body, label %for.end

for.body:                                         ; preds = %if.end, %if.end13
  %lastlegal.1667 = phi i32 [ %lastlegal.2, %if.end13 ], [ %lastlegal.0, %if.end ]
  %l.0666 = phi i32 [ %inc15, %if.end13 ], [ 0, %if.end ]
  call void @make(%struct.move_s* %arrayidx, i32 %l.0666) #5
  %call10 = call i32 @check_legal(%struct.move_s* %arrayidx, i32 %l.0666, i32 %call6) #5
  %tobool11 = icmp eq i32 %call10, 0
  br i1 %tobool11, label %if.end13, label %if.then12

if.then12:                                        ; preds = %for.body
  %13 = load i32* @legals, align 4, !tbaa !2
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* @legals, align 4, !tbaa !2
  br label %if.end13

if.end13:                                         ; preds = %for.body, %if.then12
  %lastlegal.2 = phi i32 [ %l.0666, %if.then12 ], [ %lastlegal.1667, %for.body ]
  call void @unmake(%struct.move_s* %arrayidx, i32 %l.0666) #5
  %inc15 = add nsw i32 %l.0666, 1
  %14 = load i32* @numb_moves, align 4, !tbaa !2
  %cmp7 = icmp slt i32 %inc15, %14
  br i1 %cmp7, label %for.body, label %for.end

for.end:                                          ; preds = %if.end13, %if.end
  %lastlegal.1.lcssa = phi i32 [ %lastlegal.0, %if.end ], [ %lastlegal.2, %if.end13 ]
  %15 = load i32* @Variant, align 4, !tbaa !2
  %cmp16 = icmp eq i32 %15, 4
  %16 = load i32* @legals, align 4, !tbaa !2
  %cmp18 = icmp eq i32 %16, 0
  %or.cond516 = and i1 %cmp16, %cmp18
  br i1 %or.cond516, label %if.then19, label %if.end35

if.then19:                                        ; preds = %for.end
  store i32 0, i32* @captures, align 4, !tbaa !0
  call void @gen(%struct.move_s* %arrayidx) #5
  %17 = load i32* @numb_moves, align 4, !tbaa !2
  %cmp22668 = icmp sgt i32 %17, 0
  br i1 %cmp22668, label %for.body23, label %if.end35.loopexit

for.body23:                                       ; preds = %if.then19, %if.end30
  %lastlegal.3670 = phi i32 [ %lastlegal.4, %if.end30 ], [ %lastlegal.1.lcssa, %if.then19 ]
  %l.1669 = phi i32 [ %inc33, %if.end30 ], [ 0, %if.then19 ]
  call void @make(%struct.move_s* %arrayidx, i32 %l.1669) #5
  %call26 = call i32 @check_legal(%struct.move_s* %arrayidx, i32 %l.1669, i32 %call6) #5
  %tobool27 = icmp eq i32 %call26, 0
  br i1 %tobool27, label %if.end30, label %if.then28

if.then28:                                        ; preds = %for.body23
  %18 = load i32* @legals, align 4, !tbaa !2
  %inc29 = add nsw i32 %18, 1
  store i32 %inc29, i32* @legals, align 4, !tbaa !2
  br label %if.end30

if.end30:                                         ; preds = %for.body23, %if.then28
  %lastlegal.4 = phi i32 [ %l.1669, %if.then28 ], [ %lastlegal.3670, %for.body23 ]
  call void @unmake(%struct.move_s* %arrayidx, i32 %l.1669) #5
  %inc33 = add nsw i32 %l.1669, 1
  %19 = load i32* @numb_moves, align 4, !tbaa !2
  %cmp22 = icmp slt i32 %inc33, %19
  br i1 %cmp22, label %for.body23, label %if.end35.loopexit

if.end35.loopexit:                                ; preds = %if.end30, %if.then19
  %lastlegal.3.lcssa = phi i32 [ %lastlegal.1.lcssa, %if.then19 ], [ %lastlegal.4, %if.end30 ]
  %.pre = load i32* @Variant, align 4, !tbaa !2
  %.pre751 = load i32* @legals, align 4, !tbaa !2
  br label %if.end35

if.end35:                                         ; preds = %if.end35.loopexit, %for.end
  %20 = phi i32 [ %16, %for.end ], [ %.pre751, %if.end35.loopexit ]
  %21 = phi i32 [ %15, %for.end ], [ %.pre, %if.end35.loopexit ]
  %lastlegal.5 = phi i32 [ %lastlegal.1.lcssa, %for.end ], [ %lastlegal.3.lcssa, %if.end35.loopexit ]
  %num_moves.0 = phi i32 [ %11, %for.end ], [ %17, %if.end35.loopexit ]
  %22 = load i32* @is_pondering, align 4, !tbaa !0
  %notlhs = icmp ne i32 %21, 1
  %notrhs = icmp eq i32 %22, 0
  %or.cond517.not = and i1 %notrhs, %notlhs
  %cmp40 = icmp eq i32 %20, 1
  %or.cond556 = and i1 %or.cond517.not, %cmp40
  br i1 %or.cond556, label %if.then41, label %if.end44

if.then41:                                        ; preds = %if.end35
  %23 = load i32* @inc, align 4, !tbaa !2
  %mul = mul nsw i32 %23, 100
  %24 = load i32* @time_cushion, align 4, !tbaa !2
  %add = add nsw i32 %24, %mul
  store i32 %add, i32* @time_cushion, align 4, !tbaa !2
  %idxprom = sext i32 %lastlegal.5 to i64
  %arrayidx42 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %idxprom
  %25 = bitcast %struct.move_s* %agg.result to i8*
  %26 = bitcast %struct.move_s* %arrayidx42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 24, i32 4, i1 false), !tbaa.struct !4
  br label %cleanup

if.end44:                                         ; preds = %if.end35
  call void @check_phase() #5
  %27 = load i32* @phase, align 4, !tbaa !2
  switch i32 %27, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb46
    i32 2, label %sw.bb48
  ]

sw.bb:                                            ; preds = %if.end44
  %puts658 = call i32 @puts(i8* getelementptr inbounds ([15 x i8]* @str22, i64 0, i64 0))
  br label %sw.epilog

sw.bb46:                                          ; preds = %if.end44
  %puts657 = call i32 @puts(i8* getelementptr inbounds ([18 x i8]* @str21, i64 0, i64 0))
  br label %sw.epilog

sw.bb48:                                          ; preds = %if.end44
  %puts = call i32 @puts(i8* getelementptr inbounds ([15 x i8]* @str, i64 0, i64 0))
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end44, %sw.bb48, %sw.bb46, %sw.bb
  %28 = load i32* @is_pondering, align 4, !tbaa !0
  %tobool50 = icmp eq i32 %28, 0
  br i1 %tobool50, label %if.then51, label %if.else66

if.then51:                                        ; preds = %sw.epilog
  %29 = load i32* @fixed_time, align 4, !tbaa !2
  %tobool52 = icmp eq i32 %29, 0
  br i1 %tobool52, label %if.then53, label %if.else64

if.then53:                                        ; preds = %if.then51
  %30 = load i32* @go_fast, align 4, !tbaa !0
  %tobool54 = icmp eq i32 %30, 0
  %call56 = call i32 @allocate_time() #5
  br i1 %tobool54, label %if.else61, label %if.then55

if.then55:                                        ; preds = %if.then53
  %cmp57 = icmp sgt i32 %call56, 40
  br i1 %cmp57, label %if.then58, label %if.else59

if.then58:                                        ; preds = %if.then55
  store i32 40, i32* @time_for_move, align 4, !tbaa !2
  br label %if.end67

if.else59:                                        ; preds = %if.then55
  store i32 %call56, i32* @time_for_move, align 4, !tbaa !2
  br label %if.end67

if.else61:                                        ; preds = %if.then53
  store i32 %call56, i32* @time_for_move, align 4, !tbaa !2
  br label %if.end67

if.else64:                                        ; preds = %if.then51
  store i32 %29, i32* @time_for_move, align 4, !tbaa !2
  br label %if.end67

if.else66:                                        ; preds = %sw.epilog
  store i32 999999, i32* @time_for_move, align 4, !tbaa !2
  br label %if.end67

if.end67:                                         ; preds = %if.else64, %if.then58, %if.else59, %if.else61, %if.else66
  %31 = phi i32 [ %29, %if.else64 ], [ 40, %if.then58 ], [ %call56, %if.else59 ], [ %call56, %if.else61 ], [ 999999, %if.else66 ]
  br i1 %tobool68, label %if.then69, label %if.then79.critedge

if.then69:                                        ; preds = %if.end67
  %conv = sitofp i32 %31 to float
  %mul70 = fmul float %conv, 2.000000e+00
  %conv71 = fpext float %mul70 to double
  %div = fdiv double %conv71, %add74
  %conv75 = fptosi double %div to i32
  store i32 %conv75, i32* @time_for_move, align 4, !tbaa !2
  %call77 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str4, i64 0, i64 0), i32 %conv75) #5
  br label %if.end80

if.then79.critedge:                               ; preds = %if.end67
  %call77.c = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str4, i64 0, i64 0), i32 %31) #5
  call void @clear_tt() #5
  call void @reset_ecache() #5
  call void @llvm.memset.p0i8.i64(i8* bitcast ([300 x i32]* @rootlosers to i8*), i8 0, i64 1200, i32 16, i1 false)
  br label %if.end80

if.end80:                                         ; preds = %if.then69, %if.then79.critedge
  %32 = load i32* @is_pondering, align 4, !tbaa !0
  %33 = or i32 %32, %pn_restart.0.ph
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %land.lhs.true84, label %if.else102

land.lhs.true84:                                  ; preds = %if.end80
  %35 = load i32* @Variant, align 4, !tbaa !2
  %.off = add i32 %35, -3
  %36 = icmp ult i32 %.off, 2
  br i1 %36, label %land.lhs.true90, label %if.else102

land.lhs.true90:                                  ; preds = %land.lhs.true84
  %37 = load i32* @piece_count, align 4, !tbaa !2
  %cmp91 = icmp sgt i32 %37, 3
  %cmp94 = icmp ne i32 %35, 3
  %or.cond520 = or i1 %cmp91, %cmp94
  br i1 %or.cond520, label %if.then96, label %if.else102

if.then96:                                        ; preds = %land.lhs.true90
  %38 = load i32* @time_for_move, align 4, !tbaa !2
  %conv97 = sitofp i32 %38 to float
  %conv98 = fpext float %conv97 to double
  %div100 = fdiv double %conv98, 3.000000e+00
  %conv101 = fptosi double %div100 to i32
  store i32 %conv101, i32* @pn_time, align 4, !tbaa !2
  call void @proofnumberscan() #5
  br label %if.end106

if.else102:                                       ; preds = %if.end80, %land.lhs.true90, %land.lhs.true84
  br i1 %tobool68, label %if.end106, label %if.then104

if.then104:                                       ; preds = %if.else102
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false), !tbaa.struct !4
  br label %if.end106

if.end106:                                        ; preds = %if.else102, %if.then104, %if.then96
  %39 = load i32* @result, align 4, !tbaa !2
  %tobool107 = icmp eq i32 %39, 0
  br i1 %tobool107, label %if.end112, label %land.lhs.true108

land.lhs.true108:                                 ; preds = %if.end106
  %40 = load i32* getelementptr inbounds (%struct.move_s* @pn_move, i64 0, i32 1), align 4, !tbaa !2
  %41 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i64 0, i32 1), align 4, !tbaa !2
  %cmp109 = icmp eq i32 %40, %41
  br i1 %cmp109, label %if.then111, label %if.end112

if.then111:                                       ; preds = %land.lhs.true108
  %42 = bitcast %struct.move_s* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* bitcast (%struct.move_s* @pn_move to i8*), i64 24, i32 4, i1 false), !tbaa.struct !4
  br label %cleanup

if.end112:                                        ; preds = %if.end106, %land.lhs.true108
  %43 = load i32* @forcedwin, align 4, !tbaa !2
  %44 = or i32 %39, %43
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %for.cond127.preheader, label %land.lhs.true116

land.lhs.true116:                                 ; preds = %if.end112
  %46 = load i32* getelementptr inbounds (%struct.move_s* @pn_move, i64 0, i32 1), align 4, !tbaa !2
  %47 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i64 0, i32 1), align 4, !tbaa !2
  %cmp117 = icmp eq i32 %46, %47
  %48 = load i32* @is_analyzing, align 4, !tbaa !0
  %tobool120 = icmp ne i32 %48, 0
  %or.cond522 = or i1 %cmp117, %tobool120
  br i1 %or.cond522, label %for.cond127.preheader, label %if.then121

if.then121:                                       ; preds = %land.lhs.true116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* bitcast (%struct.move_s* @pn_move to i8*), i64 24, i32 4, i1 false), !tbaa.struct !4
  br label %if.end272

for.cond127.preheader:                            ; preds = %land.lhs.true116, %if.end112, %for.inc138
  %indvars.iv706 = phi i64 [ %indvars.iv.next707, %for.inc138 ], [ 0, %if.end112 ], [ 0, %land.lhs.true116 ]
  br label %for.body130

for.body130:                                      ; preds = %for.body130, %for.cond127.preheader
  %indvars.iv = phi i64 [ 0, %for.cond127.preheader ], [ %indvars.iv.next, %for.body130 ]
  %arrayidx134 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i64 0, i64 %indvars.iv706, i64 %indvars.iv
  %49 = bitcast %struct.move_s* %arrayidx134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false), !tbaa.struct !4
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 300
  br i1 %exitcond, label %for.inc138, label %for.body130

for.inc138:                                       ; preds = %for.body130
  %indvars.iv.next707 = add i64 %indvars.iv706, 1
  %lftr.wideiv708 = trunc i64 %indvars.iv.next707 to i32
  %exitcond709 = icmp eq i32 %lftr.wideiv708, 300
  br i1 %exitcond709, label %for.end140, label %for.cond127.preheader

for.end140:                                       ; preds = %for.inc138
  call void @llvm.memset.p0i8.i64(i8* bitcast ([144 x [144 x i32]]* @history_h to i8*), i8 0, i64 82944, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* bitcast ([300 x i32]* @killer_scores to i8*), i8 0, i64 1200, i32 4, i1 false)
  call void @llvm.memset.p0i8.i64(i8* bitcast ([300 x i32]* @killer_scores2 to i8*), i8 0, i64 1200, i32 4, i1 false)
  call void @llvm.memset.p0i8.i64(i8* bitcast ([300 x i32]* @killer_scores3 to i8*), i8 0, i64 1200, i32 4, i1 false)
  br label %for.body144

for.body144:                                      ; preds = %for.body144, %for.end140
  %indvars.iv710 = phi i64 [ 0, %for.end140 ], [ %indvars.iv.next711, %for.body144 ]
  %arrayidx152 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i64 0, i64 %indvars.iv710
  %50 = bitcast %struct.move_s* %arrayidx152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false), !tbaa.struct !4
  %arrayidx154 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i64 0, i64 %indvars.iv710
  %51 = bitcast %struct.move_s* %arrayidx154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false), !tbaa.struct !4
  %arrayidx156 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i64 0, i64 %indvars.iv710
  %52 = bitcast %struct.move_s* %arrayidx156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false), !tbaa.struct !4
  %indvars.iv.next711 = add i64 %indvars.iv710, 1
  %lftr.wideiv712 = trunc i64 %indvars.iv.next711 to i32
  %exitcond713 = icmp eq i32 %lftr.wideiv712, 300
  br i1 %exitcond713, label %for.end159, label %for.body144

for.end159:                                       ; preds = %for.body144
  call void @llvm.memset.p0i8.i64(i8* bitcast ([512 x i32]* @rootnodecount to i8*), i8 0, i64 2048, i32 16, i1 false)
  store i32 0, i32* @cur_score, align 4, !tbaa !2
  store i32 1, i32* @i_depth, align 4, !tbaa !2
  %53 = load i32* @maxdepth, align 4, !tbaa !2
  %cmp161676 = icmp slt i32 %53, 1
  br i1 %cmp161676, label %if.end272.loopexit, label %for.body163

for.body163:                                      ; preds = %for.end159, %if.end255
  %temp_score.1677 = phi i32 [ %temp_score.4, %if.end255 ], [ 0, %for.end159 ]
  %call164 = call i64 @rtime() #5
  %54 = load i64* @start_time, align 8, !tbaa !3
  %call165 = call i32 @rdifftime(i64 %call164, i64 %54) #5
  %conv166 = sitofp i32 %call165 to double
  %55 = load i32* @time_for_move, align 4, !tbaa !2
  %conv167 = sitofp i32 %55 to double
  %mul168 = fmul double %conv167, 2.100000e+00
  %div169 = fdiv double %mul168, 3.000000e+00
  %cmp170 = fcmp ogt double %conv166, %div169
  %56 = load i32* @i_depth, align 4, !tbaa !2
  %cmp173 = icmp sgt i32 %56, 2
  %or.cond523 = and i1 %cmp170, %cmp173
  br i1 %or.cond523, label %if.end272.loopexit, label %if.end176

if.end176:                                        ; preds = %for.body163
  store i32 0, i32* @failed, align 4, !tbaa !2
  %57 = load i32* @Variant, align 4, !tbaa !2
  %cmp177 = icmp eq i32 %57, 2
  %cond = select i1 %cmp177, i32 35, i32 100
  %sub = sub nsw i32 %temp_score.1677, %cond
  %add182 = add nsw i32 %cond, %temp_score.1677
  call void @search_root(%struct.move_s* sret %temp_move, i32 %sub, i32 %add182, i32 %56) #6
  %58 = load i32* @result, align 4, !tbaa !2
  %tobool183 = icmp eq i32 %58, 0
  br i1 %tobool183, label %if.end185, label %if.end272.loopexit

if.end185:                                        ; preds = %if.end176
  %59 = load i32* @cur_score, align 4, !tbaa !2
  %not.cmp186 = icmp sle i32 %59, %sub
  %.659 = zext i1 %not.cmp186 to i32
  store i32 %.659, i32* @failed, align 4, !tbaa !2
  %cmp191 = icmp sgt i32 %59, %sub
  %60 = load i32* @time_exit, align 4, !tbaa !0
  %tobool194 = icmp ne i32 %60, 0
  %or.cond524 = or i1 %cmp191, %tobool194
  br i1 %or.cond524, label %if.else201, label %if.then195

if.then195:                                       ; preds = %if.end185
  %61 = load i32* @i_depth, align 4, !tbaa !2
  call void @search_root(%struct.move_s* sret %temp_move, i32 -1000000, i32 1000000, i32 %61) #6
  %62 = load i32* @time_exit, align 4, !tbaa !0
  %tobool198 = icmp eq i32 %62, 0
  br i1 %tobool198, label %if.then199, label %if.end213

if.then199:                                       ; preds = %if.then195
  store i32 0, i32* @failed, align 4, !tbaa !2
  br label %if.end213

if.else201:                                       ; preds = %if.end185
  %cmp202 = icmp slt i32 %59, %add182
  %or.cond525 = or i1 %cmp202, %tobool194
  br i1 %or.cond525, label %if.end213, label %if.then206

if.then206:                                       ; preds = %if.else201
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %4, i64 24, i32 4, i1 false), !tbaa.struct !4
  %63 = load i32* @i_depth, align 4, !tbaa !2
  call void @search_root(%struct.move_s* sret %temp_move, i32 -1000000, i32 1000000, i32 %63) #6
  %64 = load i32* @time_exit, align 4, !tbaa !0
  %tobool209 = icmp eq i32 %64, 0
  br i1 %tobool209, label %if.then210, label %if.end213

if.then210:                                       ; preds = %if.then206
  store i32 0, i32* @failed, align 4, !tbaa !2
  br label %if.end213

if.end213:                                        ; preds = %if.then206, %if.then195, %if.else201, %if.then210, %if.then199
  %temp_score.2 = phi i32 [ %temp_score.1677, %if.else201 ], [ %59, %if.then206 ], [ %59, %if.then210 ], [ %temp_score.1677, %if.then195 ], [ %temp_score.1677, %if.then199 ]
  %call214 = call i32 @interrupt() #5
  %tobool215 = icmp ne i32 %call214, 0
  %65 = load i32* @i_depth, align 4, !tbaa !2
  %cmp217 = icmp sgt i32 %65, 1
  %or.cond526 = and i1 %tobool215, %cmp217
  br i1 %or.cond526, label %if.then219, label %if.end227

if.then219:                                       ; preds = %if.end213
  %66 = load i32* @is_pondering, align 4, !tbaa !0
  %tobool220 = icmp eq i32 %66, 0
  br i1 %tobool220, label %if.else222, label %if.then221

if.then221:                                       ; preds = %if.then219
  %67 = bitcast %struct.move_s* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false), !tbaa.struct !4
  br label %cleanup

if.else222:                                       ; preds = %if.then219
  %68 = load i32* @go_fast, align 4, !tbaa !0
  %tobool223 = icmp eq i32 %68, 0
  br i1 %tobool223, label %if.end272.loopexit, label %if.end227

if.end227:                                        ; preds = %if.else222, %if.end213
  %69 = load i32* @time_failure, align 4, !tbaa !0
  %70 = load i32* @failed, align 4, !tbaa !2
  %71 = or i32 %70, %69
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %if.then231, label %if.end252

if.then231:                                       ; preds = %if.end227
  %73 = load i32* @cur_score, align 4, !tbaa !2
  %cmp232 = icmp eq i32 %73, -1000000
  br i1 %cmp232, label %if.then234, label %if.end235

if.then234:                                       ; preds = %if.then231
  %74 = bitcast %struct.move_s* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false), !tbaa.struct !4
  br label %cleanup

if.end235:                                        ; preds = %if.then231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %4, i64 24, i32 4, i1 false), !tbaa.struct !4
  call void @stringize_pv(i8* getelementptr inbounds ([256 x i8]* @postpv, i64 0, i64 0)) #5
  %75 = load i32* @time_exit, align 4, !tbaa !0
  %tobool236 = icmp eq i32 %75, 0
  %76 = load i32* @i_depth, align 4, !tbaa !2
  br i1 %tobool236, label %if.then237, label %if.end239

if.then237:                                       ; preds = %if.end235
  %conv238 = trunc i32 %76 to i8
  store i8 %conv238, i8* @true_i_depth, align 1, !tbaa !0
  br label %if.end239

if.end239:                                        ; preds = %if.end235, %if.then237
  %cmp240 = icmp sgt i32 %76, 1
  br i1 %cmp240, label %if.then242, label %if.end243

if.then242:                                       ; preds = %if.end239
  %77 = load i32* @cur_score, align 4, !tbaa !2
  call void @post_thinking(i32 %77) #5
  br label %if.end243

if.end243:                                        ; preds = %if.then242, %if.end239
  %cmp244 = icmp sgt i32 %73, 900000
  br i1 %cmp244, label %land.lhs.true246, label %if.end252

land.lhs.true246:                                 ; preds = %if.end243
  %78 = load i32* @cur_score, align 4, !tbaa !2
  %sub247 = sub nsw i32 1000000, %78
  %79 = load i32* @i_depth, align 4, !tbaa !2
  %cmp248 = icmp slt i32 %sub247, %79
  %80 = load i32* @time_exit, align 4, !tbaa !0
  %tobool253 = icmp ne i32 %80, 0
  %or.cond557 = or i1 %cmp248, %tobool253
  br i1 %or.cond557, label %if.end272.loopexit, label %if.end255

if.end252:                                        ; preds = %if.end243, %if.end227
  %temp_score.3 = phi i32 [ %temp_score.2, %if.end227 ], [ %73, %if.end243 ]
  %.old = load i32* @time_exit, align 4, !tbaa !0
  %tobool253.old = icmp eq i32 %.old, 0
  br i1 %tobool253.old, label %if.end252.if.end255_crit_edge, label %if.end272.loopexit

if.end252.if.end255_crit_edge:                    ; preds = %if.end252
  %.pre755 = load i32* @i_depth, align 4, !tbaa !2
  br label %if.end255

if.end255:                                        ; preds = %if.end252.if.end255_crit_edge, %land.lhs.true246
  %81 = phi i32 [ %.pre755, %if.end252.if.end255_crit_edge ], [ %79, %land.lhs.true246 ]
  %temp_score.4 = phi i32 [ %temp_score.3, %if.end252.if.end255_crit_edge ], [ %73, %land.lhs.true246 ]
  call void @llvm.memset.p0i8.i64(i8* bitcast ([300 x i32]* @killer_scores to i8*), i8 0, i64 1200, i32 4, i1 false)
  call void @llvm.memset.p0i8.i64(i8* bitcast ([300 x i32]* @killer_scores2 to i8*), i8 0, i64 1200, i32 4, i1 false)
  call void @llvm.memset.p0i8.i64(i8* bitcast ([300 x i32]* @killer_scores3 to i8*), i8 0, i64 1200, i32 4, i1 false)
  %inc270 = add nsw i32 %81, 1
  store i32 %inc270, i32* @i_depth, align 4, !tbaa !2
  %82 = load i32* @maxdepth, align 4, !tbaa !2
  %cmp161 = icmp slt i32 %81, %82
  br i1 %cmp161, label %for.body163, label %if.end272.loopexit

if.end272.loopexit:                               ; preds = %if.end255, %land.lhs.true246, %for.body163, %if.end176, %if.end252, %if.else222, %for.end159
  %temp_score.5.ph = phi i32 [ 0, %for.end159 ], [ %73, %land.lhs.true246 ], [ %temp_score.1677, %for.body163 ], [ %temp_score.1677, %if.end176 ], [ %temp_score.3, %if.end252 ], [ %temp_score.2, %if.else222 ], [ %temp_score.4, %if.end255 ]
  %.pre752 = load i32* @forcedwin, align 4, !tbaa !2
  br label %if.end272

if.end272:                                        ; preds = %if.end272.loopexit, %if.then121
  %83 = phi i32 [ %43, %if.then121 ], [ %.pre752, %if.end272.loopexit ]
  %temp_score.5 = phi i32 [ %temp_score.0, %if.then121 ], [ %temp_score.5.ph, %if.end272.loopexit ]
  %tobool273 = icmp eq i32 %83, 0
  br i1 %tobool273, label %if.then274, label %if.end341

if.then274:                                       ; preds = %if.end272
  %84 = bitcast %struct.move_s* %comp_move to i64*
  %old_move.sroa.0.0.copyload = load i64* %84, align 8
  %85 = trunc i64 %old_move.sroa.0.0.copyload to i32
  %86 = lshr i64 %old_move.sroa.0.0.copyload, 32
  %87 = trunc i64 %86 to i32
  %88 = bitcast i32* %old_move.sroa.2.8.idx631 to i64*
  %old_move.sroa.2.8.copyload = load i64* %88, align 8
  %89 = trunc i64 %old_move.sroa.2.8.copyload to i32
  %90 = lshr i64 %old_move.sroa.2.8.copyload, 32
  %91 = trunc i64 %90 to i32
  %92 = load i64* %1, align 8
  %93 = load i32* @Variant, align 4, !tbaa !2
  %.off642 = add i32 %93, -3
  %or.cond528.not = icmp ugt i32 %.off642, 1
  %94 = load i32* @result, align 4, !tbaa !2
  %tobool281 = icmp ne i32 %94, 0
  %or.cond529 = or i1 %or.cond528.not, %tobool281
  %95 = load i32* @alllosers, align 4, !tbaa !2
  %tobool283 = icmp ne i32 %95, 0
  %or.cond530 = or i1 %or.cond529, %tobool283
  %96 = load i32* @is_pondering, align 4, !tbaa !0
  %tobool285 = icmp ne i32 %96, 0
  %or.cond531 = or i1 %or.cond530, %tobool285
  br i1 %or.cond531, label %if.end341, label %if.then286

if.then286:                                       ; preds = %if.then274
  store i32 0, i32* @s_threat, align 4, !tbaa !2
  call void @proofnumbercheck(%struct.move_s* sret %tmp287, %struct.move_s* byval align 8 %comp_move) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 24, i32 4, i1 false), !tbaa.struct !4
  %97 = load i32* @s_threat, align 4, !tbaa !2
  %tobool291 = icmp ne i32 %97, 0
  %or.cond532 = and i1 %cmp288, %tobool291
  br i1 %or.cond532, label %if.then292, label %if.end341

if.then292:                                       ; preds = %if.then286
  %inc293 = add nsw i32 %pn_restart.0.ph, 1
  %cmp295680 = icmp sgt i32 %num_moves.0, 0
  br i1 %cmp295680, label %for.body297, label %for.end334

for.body297:                                      ; preds = %if.then292, %for.inc319
  %indvars.iv745 = phi i64 [ %indvars.iv.next746, %for.inc319 ], [ 0, %if.then292 ]
  %from = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %indvars.iv745, i32 0
  %98 = load i32* %from, align 8, !tbaa !2
  %cmp301 = icmp eq i32 %98, %85
  br i1 %cmp301, label %land.lhs.true303, label %for.inc319

land.lhs.true303:                                 ; preds = %for.body297
  %target = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %indvars.iv745, i32 1
  %99 = load i32* %target, align 4, !tbaa !2
  %cmp307 = icmp eq i32 %99, %87
  br i1 %cmp307, label %land.lhs.true309, label %for.inc319

land.lhs.true309:                                 ; preds = %land.lhs.true303
  %promoted = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %indvars.iv745, i32 3
  %100 = load i32* %promoted, align 4, !tbaa !2
  %cmp313 = icmp eq i32 %100, %91
  br i1 %cmp313, label %if.then315, label %for.inc319

if.then315:                                       ; preds = %land.lhs.true309
  %arrayidx317 = getelementptr inbounds [300 x i32]* @rootlosers, i64 0, i64 %indvars.iv745
  store i32 1, i32* %arrayidx317, align 4, !tbaa !2
  br label %for.cond322.preheader

for.inc319:                                       ; preds = %for.body297, %land.lhs.true303, %land.lhs.true309
  %indvars.iv.next746 = add i64 %indvars.iv745, 1
  %101 = trunc i64 %indvars.iv.next746 to i32
  %cmp295 = icmp slt i32 %101, %num_moves.0
  br i1 %cmp295, label %for.body297, label %for.cond322.preheader

for.cond322.preheader:                            ; preds = %for.inc319, %if.then315
  br i1 %cmp295680, label %for.body325, label %for.end334

for.body325:                                      ; preds = %for.cond322.preheader, %for.body325
  %indvars.iv747 = phi i64 [ %indvars.iv.next748, %for.body325 ], [ 0, %for.cond322.preheader ]
  %k.1684 = phi i32 [ %k.1.inc330, %for.body325 ], [ %k.0.ph, %for.cond322.preheader ]
  %arrayidx327 = getelementptr inbounds [300 x i32]* @rootlosers, i64 0, i64 %indvars.iv747
  %102 = load i32* %arrayidx327, align 4, !tbaa !2
  %not.tobool328 = icmp ne i32 %102, 0
  %inc330 = zext i1 %not.tobool328 to i32
  %k.1.inc330 = add nsw i32 %inc330, %k.1684
  %indvars.iv.next748 = add i64 %indvars.iv747, 1
  %lftr.wideiv749 = trunc i64 %indvars.iv.next748 to i32
  %exitcond750 = icmp eq i32 %lftr.wideiv749, %num_moves.0
  br i1 %exitcond750, label %for.end334, label %for.body325

for.end334:                                       ; preds = %if.then292, %for.body325, %for.cond322.preheader
  %k.1.lcssa = phi i32 [ %k.0.ph, %for.cond322.preheader ], [ %k.1.inc330, %for.body325 ], [ %k.0.ph, %if.then292 ]
  %103 = load i32* @legals, align 4, !tbaa !2
  %cmp335 = icmp eq i32 %k.1.lcssa, %103
  br i1 %cmp335, label %if.then337, label %restart.outer

if.then337:                                       ; preds = %for.end334
  store i32 1, i32* @alllosers, align 4, !tbaa !2
  br label %restart.outer

if.end341:                                        ; preds = %if.then286, %if.end272, %if.then274
  %old_move.sroa.4.0.load664 = phi i64 [ %92, %if.then274 ], [ %old_move.sroa.4.0.load663, %if.end272 ], [ %92, %if.then286 ]
  %old_move.sroa.0.1 = phi i32 [ %85, %if.then274 ], [ %old_move.sroa.0.0, %if.end272 ], [ %85, %if.then286 ]
  %old_move.sroa.1.1 = phi i32 [ %87, %if.then274 ], [ %old_move.sroa.1.0, %if.end272 ], [ %87, %if.then286 ]
  %old_move.sroa.2.1 = phi i32 [ %89, %if.then274 ], [ %old_move.sroa.2.0, %if.end272 ], [ %89, %if.then286 ]
  %old_move.sroa.3.1 = phi i32 [ %91, %if.then274 ], [ %old_move.sroa.3.0, %if.end272 ], [ %91, %if.then286 ]
  %104 = load i32* @alllosers, align 4, !tbaa !2
  %tobool342 = icmp eq i32 %104, 0
  br i1 %tobool342, label %if.end344, label %if.then343

if.then343:                                       ; preds = %if.end341
  store i32 %old_move.sroa.0.1, i32* %old_move.sroa.0.0.idx, align 8
  store i32 %old_move.sroa.1.1, i32* %old_move.sroa.1.4.idx628, align 4
  store i32 %old_move.sroa.2.1, i32* %old_move.sroa.2.8.idx631, align 8
  store i32 %old_move.sroa.3.1, i32* %old_move.sroa.3.12.idx634, align 4
  store i64 %old_move.sroa.4.0.load664, i64* %1, align 8
  br label %if.end344

if.end344:                                        ; preds = %if.end341, %if.then343
  %105 = load i32* @xb_mode, align 4, !tbaa !2
  %tobool348 = icmp ne i32 %105, 0
  %or.cond533 = and i1 %tobool68, %tobool348
  br i1 %or.cond533, label %if.then349, label %if.end352

if.then349:                                       ; preds = %if.end344
  call void @comp_to_san(%struct.move_s* byval align 8 %comp_move, i8* %arraydecay) #5
  %call351 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([49 x i8]* @.str5, i64 0, i64 0), i32 %pn_restart.0.ph, i8* %arraydecay) #5
  store i32 0, i32* @result, align 4, !tbaa !2
  br label %if.end352

if.end352:                                        ; preds = %if.then349, %if.end344
  %call353 = call i64 @rtime() #5
  %106 = load i64* @start_time, align 8, !tbaa !3
  %call354 = call i32 @rdifftime(i64 %call353, i64 %106) #5
  %107 = load i32* @time_left, align 4, !tbaa !2
  %sub355 = sub nsw i32 %107, %call354
  store i32 %sub355, i32* @time_left, align 4, !tbaa !2
  %108 = load i32* @moves_to_tc, align 4, !tbaa !2
  %tobool356 = icmp eq i32 %108, 0
  %109 = load i32* @is_pondering, align 4, !tbaa !0
  %tobool358 = icmp ne i32 %109, 0
  %or.cond534 = or i1 %tobool356, %tobool358
  br i1 %or.cond534, label %if.end363, label %if.then359

if.then359:                                       ; preds = %if.end352
  %110 = load i32* @time_for_move, align 4, !tbaa !2
  %sub360 = sub i32 %110, %call354
  %111 = load i32* @inc, align 4, !tbaa !2
  %add361 = add nsw i32 %sub360, %111
  %112 = load i32* @time_cushion, align 4, !tbaa !2
  %add362 = add nsw i32 %add361, %112
  store i32 %add362, i32* @time_cushion, align 4, !tbaa !2
  br label %if.end363

if.end363:                                        ; preds = %if.end352, %if.then359
  %cmp364 = icmp ne i32 %temp_score.5, 999998
  %or.cond535 = or i1 %cmp364, %tobool358
  br i1 %or.cond535, label %if.else374, label %if.then368

if.then368:                                       ; preds = %if.end363
  %113 = load i32* @white_to_move, align 4, !tbaa !2
  %cmp369 = icmp eq i32 %113, 1
  br i1 %cmp369, label %if.then371, label %if.else372

if.then371:                                       ; preds = %if.then368
  store i32 3, i32* @result, align 4, !tbaa !2
  br label %if.end386

if.else372:                                       ; preds = %if.then368
  store i32 2, i32* @result, align 4, !tbaa !2
  br label %if.end386

if.else374:                                       ; preds = %if.end363
  %cmp375 = icmp ne i32 %temp_score.5, -999998
  %or.cond536 = or i1 %cmp375, %tobool358
  br i1 %or.cond536, label %if.else374.if.end386_crit_edge, label %if.then379

if.else374.if.end386_crit_edge:                   ; preds = %if.else374
  %.pre753 = load i32* @result, align 4, !tbaa !2
  br label %if.end386

if.then379:                                       ; preds = %if.else374
  %114 = load i32* @white_to_move, align 4, !tbaa !2
  %cmp380 = icmp eq i32 %114, 1
  br i1 %cmp380, label %if.then382, label %if.else383

if.then382:                                       ; preds = %if.then379
  store i32 2, i32* @result, align 4, !tbaa !2
  br label %if.end386

if.else383:                                       ; preds = %if.then379
  store i32 3, i32* @result, align 4, !tbaa !2
  br label %if.end386

if.end386:                                        ; preds = %if.else374.if.end386_crit_edge, %if.else383, %if.then382, %if.then371, %if.else372
  %115 = phi i32 [ %.pre753, %if.else374.if.end386_crit_edge ], [ 3, %if.else383 ], [ 2, %if.then382 ], [ 3, %if.then371 ], [ 2, %if.else372 ]
  %116 = load i32* @post, align 4, !tbaa !0
  %117 = load i32* @xb_mode, align 4, !tbaa !2
  %notlhs643 = icmp eq i32 %116, 0
  %notrhs644 = icmp eq i32 %117, 0
  %or.cond537.not = or i1 %notrhs644, %notlhs643
  %or.cond538 = or i1 %or.cond537.not, %tobool358
  %or.cond538.not = xor i1 %or.cond538, true
  %cmp393 = icmp ne i32 %115, 3
  %or.cond539 = and i1 %cmp393, %or.cond538.not
  %cmp396 = icmp ne i32 %115, 2
  %or.cond540 = and i1 %or.cond539, %cmp396
  %cmp399 = icmp ne i32 %115, 4
  %or.cond541 = and i1 %or.cond540, %cmp399
  %cmp402 = icmp ne i32 %115, 5
  %or.cond542 = and i1 %or.cond541, %cmp402
  %cmp405 = icmp ne i32 %115, 1
  %or.cond543 = and i1 %or.cond542, %cmp405
  %118 = load i32* @forcedwin, align 4, !tbaa !2
  %tobool408.not = icmp eq i32 %118, 0
  %or.cond544.not = and i1 %or.cond543, %tobool408.not
  %cmp410 = icmp sgt i32 %temp_score.5, 999600
  %or.cond = and i1 %or.cond544.not, %cmp410
  br i1 %or.cond, label %if.then412, label %if.end425

if.then412:                                       ; preds = %if.end386
  %119 = load i32* @Variant, align 4, !tbaa !2
  %cmp413 = icmp eq i32 %119, 1
  %sub416 = sub nsw i32 1000000, %temp_score.5
  %div417 = sdiv i32 %sub416, 2
  br i1 %cmp413, label %if.else419, label %if.then415

if.then415:                                       ; preds = %if.then412
  %call418 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str6, i64 0, i64 0), i32 %div417) #5
  br label %if.end425

if.else419:                                       ; preds = %if.then412
  %call422 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([52 x i8]* @.str7, i64 0, i64 0), i32 %div417) #5
  br label %if.end425

if.end425:                                        ; preds = %if.end386, %if.else419, %if.then415
  %120 = load i32* @result, align 4, !tbaa !2
  %.off645 = add i32 %120, -2
  %121 = icmp ugt i32 %.off645, 1
  %cmp432 = icmp ne i32 %120, 1
  %or.cond546 = and i1 %121, %cmp432
  %cmp435 = icmp ne i32 %120, 4
  %or.cond547 = and i1 %or.cond546, %cmp435
  %cmp438 = icmp ne i32 %120, 5
  %or.cond548 = and i1 %or.cond547, %cmp438
  %122 = load i8* @true_i_depth, align 1, !tbaa !0
  %cmp442 = icmp sgt i8 %122, 2
  %or.cond661 = and i1 %or.cond548, %cmp442
  br i1 %or.cond661, label %land.lhs.true444, label %if.end425.if.end457_crit_edge

if.end425.if.end457_crit_edge:                    ; preds = %if.end425
  %.pre754 = load i32* @Variant, align 4, !tbaa !2
  br label %if.end457

land.lhs.true444:                                 ; preds = %if.end425
  %123 = load i32* getelementptr inbounds (%struct.move_s* @pn_move, i64 0, i32 1), align 4, !tbaa !2
  %124 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i64 0, i32 1), align 4, !tbaa !2
  %125 = load i32* @is_pondering, align 4, !tbaa !0
  %notlhs654 = icmp eq i32 %123, %124
  %notrhs655 = icmp eq i32 %125, 0
  %or.cond549.not = and i1 %notrhs655, %notlhs654
  %126 = load i32* @Variant, align 4, !tbaa !2
  %cmp450 = icmp ne i32 %126, 1
  %or.cond550 = and i1 %or.cond549.not, %cmp450
  %127 = load i32* @bestmovenum, align 4, !tbaa !2
  %cmp453 = icmp eq i32 %127, -1
  %or.cond559 = and i1 %or.cond550, %cmp453
  br i1 %or.cond559, label %if.then455, label %if.end457

if.then455:                                       ; preds = %land.lhs.true444
  call void @llvm.trap()
  unreachable

if.end457:                                        ; preds = %if.end425.if.end457_crit_edge, %land.lhs.true444
  %128 = phi i32 [ %.pre754, %if.end425.if.end457_crit_edge ], [ %126, %land.lhs.true444 ]
  %cmp458 = icmp eq i32 %128, 1
  %cmp461 = icmp sgt i32 %temp_score.5, -999900
  %or.cond662 = and i1 %cmp458, %cmp461
  br i1 %or.cond662, label %if.then463, label %if.else471

if.then463:                                       ; preds = %if.end457
  %129 = load i32* @tradefreely, align 4, !tbaa !2
  %130 = load i32* @userealholdings, align 4, !tbaa !2
  %131 = or i32 %130, %129
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %if.then468, label %if.end515

if.then468:                                       ; preds = %if.then463
  store i32 1, i32* @tradefreely, align 4, !tbaa !2
  %puts653 = call i32 @puts(i8* getelementptr inbounds ([36 x i8]* @str20, i64 0, i64 0))
  br label %if.end515

if.else471:                                       ; preds = %if.end457
  %cmp472 = icmp slt i32 %temp_score.5, -999900
  %or.cond552 = and i1 %cmp472, %cmp458
  br i1 %or.cond552, label %land.lhs.true477, label %if.else497

land.lhs.true477:                                 ; preds = %if.else471
  %133 = load i32* getelementptr inbounds (%struct.move_s* @pn_move, i64 0, i32 1), align 4, !tbaa !2
  %134 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i64 0, i32 1), align 4, !tbaa !2
  %cmp478 = icmp eq i32 %133, %134
  br i1 %cmp478, label %if.then480, label %if.else497

if.then480:                                       ; preds = %land.lhs.true477
  %135 = load i32* @userealholdings, align 4, !tbaa !2
  %tobool481 = icmp eq i32 %135, 0
  br i1 %tobool481, label %if.else483, label %if.then482

if.then482:                                       ; preds = %if.then480
  store i32 1, i32* @must_sit, align 4, !tbaa !0
  %cmp486 = icmp sgt i32 %temp_score.5, -1000000
  br i1 %cmp486, label %if.then488, label %if.end515

if.else483:                                       ; preds = %if.then480
  store i32 1, i32* @userealholdings, align 4, !tbaa !2
  call void @ProcessHoldings(i8* getelementptr inbounds ([255 x i8]* @realholdings, i64 0, i64 0)) #5
  store i32 0, i32* @tradefreely, align 4, !tbaa !2
  %puts649 = call i32 @puts(i8* getelementptr inbounds ([24 x i8]* @str16, i64 0, i64 0))
  br label %restart

if.then488:                                       ; preds = %if.then482
  %136 = load i32* @partnerdead, align 4, !tbaa !0
  %tobool489 = icmp eq i32 %136, 0
  br i1 %tobool489, label %if.else493, label %if.then490

if.then490:                                       ; preds = %if.then488
  %puts651 = call i32 @puts(i8* getelementptr inbounds ([48 x i8]* @str18, i64 0, i64 0))
  %puts652 = call i32 @puts(i8* getelementptr inbounds ([15 x i8]* @str19, i64 0, i64 0))
  br label %if.end515

if.else493:                                       ; preds = %if.then488
  %puts650 = call i32 @puts(i8* getelementptr inbounds ([80 x i8]* @str17, i64 0, i64 0))
  br label %if.end515

if.else497:                                       ; preds = %land.lhs.true477, %if.else471
  %temp_score.5.off = add i32 %temp_score.5, 59999
  %notlhs646 = icmp ugt i32 %temp_score.5.off, 19998
  %notrhs647 = icmp ne i32 %128, 1
  %or.cond554.not = or i1 %notrhs647, %notlhs646
  %137 = load i32* @partnerdead, align 4, !tbaa !0
  %tobool507 = icmp ne i32 %137, 0
  %or.cond555 = or i1 %or.cond554.not, %tobool507
  br i1 %or.cond555, label %if.end515, label %land.lhs.true508

land.lhs.true508:                                 ; preds = %if.else497
  %138 = load i32* getelementptr inbounds (%struct.move_s* @pn_move, i64 0, i32 1), align 4, !tbaa !2
  %139 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i64 0, i32 1), align 4, !tbaa !2
  %cmp509 = icmp eq i32 %138, %139
  br i1 %cmp509, label %if.then511, label %if.end515

if.then511:                                       ; preds = %land.lhs.true508
  store i32 1, i32* @must_sit, align 4, !tbaa !0
  %puts648 = call i32 @puts(i8* getelementptr inbounds ([61 x i8]* @str15, i64 0, i64 0))
  br label %if.end515

if.end515:                                        ; preds = %if.then463, %if.then490, %if.else493, %if.then482, %if.else497, %if.then511, %land.lhs.true508, %if.then468
  %140 = bitcast %struct.move_s* %agg.result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %140, i8* %2, i64 24, i32 4, i1 false), !tbaa.struct !4
  br label %cleanup

cleanup:                                          ; preds = %if.end515, %if.then234, %if.then221, %if.then111, %if.then41, %if.then
  call void @llvm.lifetime.end(i64 12288, i8* %0) #2
  ret void
}
