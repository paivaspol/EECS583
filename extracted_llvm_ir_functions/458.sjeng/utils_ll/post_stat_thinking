define void @post_stat_thinking() #0 {
entry:
  %0 = load i64* @start_time, align 8, !tbaa !6
  %call.i = tail call double @difftime(i64 0, i64 %0) #14
  %conv.i = fptosi double %call.i to i32
  %mul.i = mul nsw i32 %conv.i, 100
  %1 = load i32* @xb_mode, align 4, !tbaa !0
  switch i32 %1, label %if.end6 [
    i32 1, label %if.then
    i32 2, label %if.then4
  ]

if.then:                                          ; preds = %entry
  %2 = load i32* @nodes, align 4, !tbaa !0
  %3 = load i32* @i_depth, align 4, !tbaa !0
  %4 = load i32* @moveleft, align 4, !tbaa !0
  %5 = load i32* @movetotal, align 4, !tbaa !0
  %call2 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str58, i64 0, i64 0), i32 %mul.i, i32 %2, i32 %3, i32 %4, i32 %5) #12
  br label %if.end6

if.then4:                                         ; preds = %entry
  %6 = load i32* @nodes, align 4, !tbaa !0
  %7 = load i32* @i_depth, align 4, !tbaa !0
  %8 = load i32* @moveleft, align 4, !tbaa !0
  %9 = load i32* @movetotal, align 4, !tbaa !0
  %call5 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str59, i64 0, i64 0), i32 %mul.i, i32 %6, i32 %7, i32 %8, i32 %9, i8* getelementptr inbounds ([20 x i8]* @searching_move, i64 0, i64 0)) #12
  br label %if.end6

if.end6:                                          ; preds = %entry, %if.then4, %if.then
  ret void
}
