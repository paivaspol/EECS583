define void @comp_to_san(%struct.move_s* byval align 8 %move, i8* %str) #0 {
  %moves = alloca [512 x %struct.move_s], align 16
  %evade_moves = alloca [512 x %struct.move_s], align 16
  tail call void @llvm.dbg.declare(metadata %struct.move_s* %move, metadata !36, metadata !388), !dbg !524
  tail call void @llvm.dbg.value(metadata i8* %str, i64 0, metadata !37, metadata !388), !dbg !525
  %1 = bitcast [512 x %struct.move_s]* %moves to i8*, !dbg !526
  call void @llvm.lifetime.start(i64 12288, i8* %1) #2, !dbg !526
  tail call void @llvm.dbg.declare(metadata [512 x %struct.move_s]* %moves, metadata !38, metadata !388), !dbg !527
  %2 = bitcast [512 x %struct.move_s]* %evade_moves to i8*, !dbg !528
  call void @llvm.lifetime.start(i64 12288, i8* %2) #2, !dbg !528
  tail call void @llvm.dbg.declare(metadata [512 x %struct.move_s]* %evade_moves, metadata !42, metadata !388), !dbg !529
  %3 = getelementptr inbounds %struct.move_s* %move, i64 0, i32 0, !dbg !530
  %4 = bitcast %struct.move_s* %move to i64*, !dbg !530
  %5 = load i64* %4, align 8, !dbg !530
  %6 = trunc i64 %5 to i32, !dbg !530
  %sext18 = shl i64 %5, 32, !dbg !530
  %7 = ashr exact i64 %sext18, 32, !dbg !530
  %8 = getelementptr inbounds [144 x i32]* @Xrank, i64 0, i64 %7, !dbg !530
  %9 = load i32* %8, align 4, !dbg !530, !tbaa !393
  tail call void @llvm.dbg.value(metadata i32 %9, i64 0, metadata !48, metadata !388), !dbg !531
  %10 = getelementptr inbounds %struct.move_s* %move, i64 0, i32 1, !dbg !532
  %11 = ashr i64 %5, 32, !dbg !532
  %12 = getelementptr inbounds [144 x i32]* @Xrank, i64 0, i64 %11, !dbg !532
  %13 = load i32* %12, align 4, !dbg !532, !tbaa !393
  tail call void @llvm.dbg.value(metadata i32 %13, i64 0, metadata !49, metadata !388), !dbg !533
  tail call void @llvm.dbg.value(metadata i32 97, i64 0, metadata !50, metadata !388), !dbg !534
  %14 = getelementptr inbounds [144 x i32]* @Xfile, i64 0, i64 %7, !dbg !535
  %15 = load i32* %14, align 4, !dbg !535, !tbaa !393
  %16 = add nsw i32 %15, 96, !dbg !536
  %17 = getelementptr inbounds [144 x i32]* @Xfile, i64 0, i64 %11, !dbg !537
  %18 = load i32* %17, align 4, !dbg !537, !tbaa !393
  %19 = add nsw i32 %18, 96, !dbg !538
  %20 = icmp eq i32 %6, 0, !dbg !539
  br i1 %20, label %21, label %30, !dbg !541

; <label>:21                                      ; preds = %0
  %22 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %str, i1 false), !dbg !542
  %23 = getelementptr inbounds %struct.move_s* %move, i64 0, i32 3, !dbg !542
  %24 = load i32* %23, align 4, !dbg !542, !tbaa !544
  %25 = sext i32 %24 to i64, !dbg !542
  %26 = getelementptr inbounds [14 x i32]* @comp_to_san.type_to_char, i64 0, i64 %25, !dbg !542
  %27 = load i32* %26, align 4, !dbg !542, !tbaa !393
  %sext10 = shl i32 %19, 24, !dbg !542
  %28 = ashr exact i32 %sext10, 24, !dbg !542
  %29 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %str, i32 0, i64 %22, i8* getelementptr inbounds ([8 x i8]* @.str, i64 0, i64 0), i32 %27, i32 %28, i32 %13) #10, !dbg !542
  br label %167, !dbg !546

; <label>:30                                      ; preds = %0
  %31 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %7, !dbg !547
  %32 = load i32* %31, align 4, !dbg !547, !tbaa !393
  %.off = add i32 %32, -1, !dbg !549
  %switch = icmp ult i32 %.off, 2, !dbg !549
  br i1 %switch, label %33, label %68, !dbg !549

; <label>:33                                      ; preds = %30
  %34 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %11, !dbg !550
  %35 = load i32* %34, align 4, !dbg !550, !tbaa !393
  %36 = icmp eq i32 %35, 13, !dbg !553
  br i1 %36, label %37, label %54, !dbg !554

; <label>:37                                      ; preds = %33
  %38 = getelementptr inbounds %struct.move_s* %move, i64 0, i32 5, !dbg !555
  %39 = load i32* %38, align 4, !dbg !555, !tbaa !556
  %40 = icmp eq i32 %39, 0, !dbg !557
  br i1 %40, label %41, label %54, !dbg !558

; <label>:41                                      ; preds = %37
  %42 = getelementptr inbounds %struct.move_s* %move, i64 0, i32 3, !dbg !559
  %43 = load i32* %42, align 4, !dbg !559, !tbaa !544
  %44 = icmp eq i32 %43, 0, !dbg !562
  %45 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %str, i1 false), !dbg !563
  %sext9 = shl i32 %19, 24, !dbg !563
  %46 = ashr exact i32 %sext9, 24, !dbg !563
  br i1 %44, label %47, label %49, !dbg !565

; <label>:47                                      ; preds = %41
  %48 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %str, i32 0, i64 %45, i8* getelementptr inbounds ([5 x i8]* @.str1, i64 0, i64 0), i32 %46, i32 %13) #10, !dbg !566
  br label %167, !dbg !568

; <label>:49                                      ; preds = %41
  %50 = sext i32 %43 to i64, !dbg !563
  %51 = getelementptr inbounds [14 x i32]* @comp_to_san.type_to_char, i64 0, i64 %50, !dbg !563
  %52 = load i32* %51, align 4, !dbg !563, !tbaa !393
  %53 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %str, i32 0, i64 %45, i8* getelementptr inbounds ([8 x i8]* @.str2, i64 0, i64 0), i32 %46, i32 %13, i32 %52) #10, !dbg !563
  br label %167

; <label>:54                                      ; preds = %37, %33
  %55 = getelementptr inbounds %struct.move_s* %move, i64 0, i32 3, !dbg !569
  %56 = load i32* %55, align 4, !dbg !569, !tbaa !544
  %57 = icmp eq i32 %56, 0, !dbg !572
  %58 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %str, i1 false), !dbg !573
  %sext7 = shl i32 %16, 24, !dbg !573
  %59 = ashr exact i32 %sext7, 24, !dbg !573
  %sext8 = shl i32 %19, 24, !dbg !573
  %60 = ashr exact i32 %sext8, 24, !dbg !573
  br i1 %57, label %61, label %63, !dbg !575

; <label>:61                                      ; preds = %54
  %62 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %str, i32 0, i64 %58, i8* getelementptr inbounds ([8 x i8]* @.str3, i64 0, i64 0), i32 %59, i32 %60, i32 %13) #10, !dbg !576
  br label %167, !dbg !578

; <label>:63                                      ; preds = %54
  %64 = sext i32 %56 to i64, !dbg !573
  %65 = getelementptr inbounds [14 x i32]* @comp_to_san.type_to_char, i64 0, i64 %64, !dbg !573
  %66 = load i32* %65, align 4, !dbg !573, !tbaa !393
  %67 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %str, i32 0, i64 %58, i8* getelementptr inbounds ([11 x i8]* @.str4, i64 0, i64 0), i32 %59, i32 %60, i32 %13, i32 %66) #10, !dbg !573
  br label %167

; <label>:68                                      ; preds = %30
  %69 = getelementptr inbounds %struct.move_s* %move, i64 0, i32 4, !dbg !579
  %70 = load i32* %69, align 8, !dbg !579, !tbaa !581
  switch i32 %70, label %74 [
    i32 0, label %77
    i32 1, label %71
    i32 3, label %71
  ], !dbg !582

; <label>:71                                      ; preds = %68, %68
  %72 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %str, i1 false), !dbg !583
  %73 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %str, i32 0, i64 %72, i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0)) #10, !dbg !583
  br label %167, !dbg !587

; <label>:74                                      ; preds = %68
  %75 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %str, i1 false), !dbg !588
  %76 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %str, i32 0, i64 %75, i8* getelementptr inbounds ([6 x i8]* @.str6, i64 0, i64 0)) #10, !dbg !588
  br label %167

; <label>:77                                      ; preds = %68
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !46, metadata !388), !dbg !590
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !44, metadata !388), !dbg !591
  %78 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 0, !dbg !592
  call void @gen(%struct.move_s* %78) #10, !dbg !594
  %79 = load i32* @numb_moves, align 4, !dbg !595, !tbaa !393
  call void @llvm.dbg.value(metadata i32 %79, i64 0, metadata !44, metadata !388), !dbg !591
  %80 = call i32 @in_check() #10, !dbg !596
  call void @llvm.dbg.value(metadata i32 %80, i64 0, metadata !53, metadata !388), !dbg !597
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !43, metadata !388), !dbg !598
  %81 = icmp sgt i32 %79, 0, !dbg !599
  br i1 %81, label %.lr.ph16, label %.thread, !dbg !602

.lr.ph16:                                         ; preds = %77
  %82 = sext i32 %79 to i64, !dbg !602
  br label %88, !dbg !602

.thread:                                          ; preds = %109, %77
  %83 = load i32* %10, align 4, !dbg !603, !tbaa !607
  %84 = sext i32 %83 to i64, !dbg !608
  %85 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %84, !dbg !608
  %86 = load i32* %85, align 4, !dbg !608, !tbaa !393
  %87 = icmp eq i32 %86, 13, !dbg !609
  br label %152, !dbg !610

; <label>:88                                      ; preds = %.lr.ph16, %109
  %indvars.iv = phi i64 [ 0, %.lr.ph16 ], [ %indvars.iv.next, %109 ]
  %89 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %indvars.iv, i32 1, !dbg !611
  %90 = load i32* %89, align 4, !dbg !611, !tbaa !607
  %91 = load i32* %10, align 4, !dbg !614, !tbaa !607
  %92 = icmp eq i32 %90, %91, !dbg !615
  br i1 %92, label %93, label %109, !dbg !616

; <label>:93                                      ; preds = %88
  %94 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %indvars.iv, i32 0, !dbg !617
  %95 = load i32* %94, align 8, !dbg !617, !tbaa !618
  %96 = sext i32 %95 to i64, !dbg !619
  %97 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %96, !dbg !619
  %98 = load i32* %97, align 4, !dbg !619, !tbaa !393
  %99 = load i32* %3, align 8, !dbg !620, !tbaa !618
  %100 = sext i32 %99 to i64, !dbg !621
  %101 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %100, !dbg !621
  %102 = load i32* %101, align 4, !dbg !621, !tbaa !393
  %103 = icmp ne i32 %98, %102, !dbg !622
  %104 = icmp eq i32 %95, %99, !dbg !623
  %or.cond = or i1 %104, %103, !dbg !624
  br i1 %or.cond, label %109, label %105, !dbg !624

; <label>:105                                     ; preds = %93
  %106 = trunc i64 %indvars.iv to i32, !dbg !625
  call void @make(%struct.move_s* %78, i32 %106) #10, !dbg !625
  %107 = call i32 @check_legal(%struct.move_s* %78, i32 %106, i32 %80) #10, !dbg !627
  %108 = icmp eq i32 %107, 0, !dbg !627
  call void @unmake(%struct.move_s* %78, i32 %106) #10, !dbg !629
  br i1 %108, label %109, label %111, !dbg !631

; <label>:109                                     ; preds = %93, %105, %88
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !602
  %110 = icmp slt i64 %indvars.iv.next, %82, !dbg !599
  br i1 %110, label %88, label %.thread, !dbg !602

; <label>:111                                     ; preds = %105
  %112 = icmp eq i32 %106, -1, !dbg !632
  %113 = load i32* %10, align 4, !dbg !603, !tbaa !607
  %114 = sext i32 %113 to i64, !dbg !608
  %115 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %114, !dbg !608
  %116 = load i32* %115, align 4, !dbg !608, !tbaa !393
  %117 = icmp eq i32 %116, 13, !dbg !609
  br i1 %112, label %152, label %118, !dbg !610

; <label>:118                                     ; preds = %111
  %sext20 = shl i64 %indvars.iv, 32, !dbg !633
  %119 = ashr exact i64 %sext20, 32, !dbg !633
  %120 = getelementptr inbounds [512 x %struct.move_s]* %moves, i64 0, i64 %119, i32 0, !dbg !633
  %121 = load i32* %120, align 8, !dbg !633, !tbaa !618
  %122 = sext i32 %121 to i64, !dbg !633
  %123 = getelementptr inbounds [144 x i32]* @Xfile, i64 0, i64 %122, !dbg !633
  %124 = load i32* %123, align 4, !dbg !633, !tbaa !393
  %125 = load i32* %3, align 8, !dbg !636, !tbaa !618
  %126 = sext i32 %125 to i64, !dbg !636
  %127 = getelementptr inbounds [144 x i32]* @Xfile, i64 0, i64 %126, !dbg !636
  %128 = load i32* %127, align 4, !dbg !636, !tbaa !393
  %129 = icmp ne i32 %124, %128, !dbg !637
  %130 = call i64 @llvm.objectsize.i64.p0i8(i8* %str, i1 false), !dbg !638
  %131 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %126, !dbg !638
  %132 = load i32* %131, align 4, !dbg !638, !tbaa !393
  %133 = sext i32 %132 to i64, !dbg !638
  %134 = getelementptr inbounds [14 x i32]* @comp_to_san.type_to_char, i64 0, i64 %133, !dbg !638
  %135 = load i32* %134, align 4, !dbg !638, !tbaa !393
  br i1 %117, label %136, label %144, !dbg !639

; <label>:136                                     ; preds = %118
  br i1 %129, label %137, label %141, !dbg !640

; <label>:137                                     ; preds = %136
  %sext5 = shl i32 %16, 24, !dbg !638
  %138 = ashr exact i32 %sext5, 24, !dbg !638
  %sext6 = shl i32 %19, 24, !dbg !638
  %139 = ashr exact i32 %sext6, 24, !dbg !638
  %140 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %str, i32 0, i64 %130, i8* getelementptr inbounds ([9 x i8]* @.str7, i64 0, i64 0), i32 %135, i32 %138, i32 %139, i32 %13) #10, !dbg !638
  br label %167, !dbg !638

; <label>:141                                     ; preds = %136
  %sext4 = shl i32 %19, 24, !dbg !641
  %142 = ashr exact i32 %sext4, 24, !dbg !641
  %143 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %str, i32 0, i64 %130, i8* getelementptr inbounds ([9 x i8]* @.str8, i64 0, i64 0), i32 %135, i32 %9, i32 %142, i32 %13) #10, !dbg !641
  br label %167

; <label>:144                                     ; preds = %118
  br i1 %129, label %145, label %149, !dbg !642

; <label>:145                                     ; preds = %144
  %sext2 = shl i32 %16, 24, !dbg !644
  %146 = ashr exact i32 %sext2, 24, !dbg !644
  %sext3 = shl i32 %19, 24, !dbg !644
  %147 = ashr exact i32 %sext3, 24, !dbg !644
  %148 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %str, i32 0, i64 %130, i8* getelementptr inbounds ([10 x i8]* @.str9, i64 0, i64 0), i32 %135, i32 %146, i32 %147, i32 %13) #10, !dbg !644
  br label %167, !dbg !644

; <label>:149                                     ; preds = %144
  %sext1 = shl i32 %19, 24, !dbg !646
  %150 = ashr exact i32 %sext1, 24, !dbg !646
  %151 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %str, i32 0, i64 %130, i8* getelementptr inbounds ([10 x i8]* @.str10, i64 0, i64 0), i32 %135, i32 %9, i32 %150, i32 %13) #10, !dbg !646
  br label %167

; <label>:152                                     ; preds = %.thread, %111
  %153 = phi i1 [ %87, %.thread ], [ %117, %111 ]
  %154 = call i64 @llvm.objectsize.i64.p0i8(i8* %str, i1 false), !dbg !647
  %155 = load i32* %3, align 8, !dbg !647, !tbaa !618
  %156 = sext i32 %155 to i64, !dbg !647
  %157 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %156, !dbg !647
  %158 = load i32* %157, align 4, !dbg !647, !tbaa !393
  %159 = sext i32 %158 to i64, !dbg !647
  %160 = getelementptr inbounds [14 x i32]* @comp_to_san.type_to_char, i64 0, i64 %159, !dbg !647
  %161 = load i32* %160, align 4, !dbg !647, !tbaa !393
  %sext = shl i32 %19, 24, !dbg !647
  %162 = ashr exact i32 %sext, 24, !dbg !647
  br i1 %153, label %163, label %165, !dbg !651

; <label>:163                                     ; preds = %152
  %164 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %str, i32 0, i64 %154, i8* getelementptr inbounds ([7 x i8]* @.str11, i64 0, i64 0), i32 %161, i32 %162, i32 %13) #10, !dbg !647
  br label %167, !dbg !652

; <label>:165                                     ; preds = %152
  %166 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %str, i32 0, i64 %154, i8* getelementptr inbounds ([8 x i8]* @.str3, i64 0, i64 0), i32 %161, i32 %162, i32 %13) #10, !dbg !653
  br label %167

; <label>:167                                     ; preds = %61, %63, %47, %49, %145, %149, %137, %141, %165, %163, %71, %74, %21
  call void @make(%struct.move_s* %move, i32 0) #10, !dbg !655
  %168 = call i32 @check_legal(%struct.move_s* %move, i32 0, i32 1) #10, !dbg !656
  %169 = icmp eq i32 %168, 0, !dbg !656
  br i1 %169, label %170, label %173, !dbg !658

; <label>:170                                     ; preds = %167
  %171 = call i64 @llvm.objectsize.i64.p0i8(i8* %str, i1 false), !dbg !659
  %172 = call i8* @__memcpy_chk(i8* %str, i8* getelementptr inbounds ([5 x i8]* @.str12, i64 0, i64 0), i64 5, i64 %171), !dbg !659
  call void @unmake(%struct.move_s* %move, i32 0) #10, !dbg !661
  br label %191, !dbg !662

; <label>:173                                     ; preds = %167
  %174 = call i32 @in_check() #10, !dbg !663
  %175 = icmp eq i32 %174, 0, !dbg !663
  br i1 %175, label %190, label %176, !dbg !665

; <label>:176                                     ; preds = %173
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !47, metadata !388), !dbg !666
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !45, metadata !388), !dbg !667
  %177 = getelementptr inbounds [512 x %struct.move_s]* %evade_moves, i64 0, i64 0, !dbg !668
  call void @gen(%struct.move_s* %177) #10, !dbg !670
  %178 = load i32* @numb_moves, align 4, !dbg !671, !tbaa !393
  call void @llvm.dbg.value(metadata i32 %178, i64 0, metadata !45, metadata !388), !dbg !667
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !43, metadata !388), !dbg !598
  %179 = icmp sgt i32 %178, 0, !dbg !672
  br i1 %179, label %.lr.ph, label %._crit_edge, !dbg !675

; <label>:180                                     ; preds = %.lr.ph
  %181 = icmp slt i32 %184, %178, !dbg !672
  br i1 %181, label %.lr.ph, label %._crit_edge, !dbg !675

.lr.ph:                                           ; preds = %176, %180
  %i.113 = phi i32 [ %184, %180 ], [ 0, %176 ]
  call void @make(%struct.move_s* %177, i32 %i.113) #10, !dbg !676
  %182 = call i32 @check_legal(%struct.move_s* %177, i32 %i.113, i32 1) #10, !dbg !678
  %183 = icmp eq i32 %182, 0, !dbg !678
  call void @unmake(%struct.move_s* %177, i32 %i.113) #10, !dbg !680
  %184 = add nuw nsw i32 %i.113, 1, !dbg !681
  call void @llvm.dbg.value(metadata i32 %184, i64 0, metadata !43, metadata !388), !dbg !598
  br i1 %183, label %180, label %187, !dbg !682

._crit_edge:                                      ; preds = %180, %176
  %185 = call i64 @llvm.objectsize.i64.p0i8(i8* %str, i1 false), !dbg !683
  %186 = call i8* @__strcat_chk(i8* %str, i8* getelementptr inbounds ([2 x i8]* @.str13, i64 0, i64 0), i64 %185) #10, !dbg !683
  br label %190, !dbg !683

; <label>:187                                     ; preds = %.lr.ph
  %188 = call i64 @llvm.objectsize.i64.p0i8(i8* %str, i1 false), !dbg !683
  %189 = call i8* @__strcat_chk(i8* %str, i8* getelementptr inbounds ([2 x i8]* @.str14, i64 0, i64 0), i64 %188) #10, !dbg !685
  br label %190

; <label>:190                                     ; preds = %173, %._crit_edge, %187
  call void @unmake(%struct.move_s* %move, i32 0) #10, !dbg !686
  br label %191, !dbg !687

; <label>:191                                     ; preds = %190, %170
  call void @llvm.lifetime.end(i64 12288, i8* %2) #2, !dbg !687
  call void @llvm.lifetime.end(i64 12288, i8* %1) #2, !dbg !687
  ret void, !dbg !687
}
