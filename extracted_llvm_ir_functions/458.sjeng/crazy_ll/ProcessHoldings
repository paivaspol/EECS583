define void @ProcessHoldings(i8* nocapture readonly %str) #0 {
  tail call void @llvm.dbg.value(metadata i8* %str, i64 0, metadata !10, metadata !77), !dbg !78
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !13, metadata !77), !dbg !79
  tail call void @llvm.memset.p0i8.i64(i8* bitcast ([2 x [16 x i32]]* @holding to i8*), i8 0, i64 128, i32 16, i1 false), !dbg !80
  store i32 -1056969216, i32* @hold_hash, align 4, !dbg !81, !tbaa !82
  store i32 0, i32* @white_hand_eval, align 4, !dbg !86, !tbaa !82
  store i32 0, i32* @black_hand_eval, align 4, !dbg !87, !tbaa !82
  tail call void @reset_ecache() #7, !dbg !88
  store i32 0, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !89, !tbaa !82
  store i32 0, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !90, !tbaa !82
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !11, metadata !77), !dbg !91
  br label %.preheader2, !dbg !92

.preheader2:                                      ; preds = %0, %._crit_edge
  %indvars.iv14 = phi i64 [ 0, %0 ], [ %indvars.iv.next15, %._crit_edge ]
  %i.08 = phi i32 [ 0, %0 ], [ %i.2.lcssa, %._crit_edge ]
  %1 = sext i32 %i.08 to i64
  br label %2, !dbg !94

; <label>:2                                       ; preds = %.preheader2, %24
  %indvars.iv = phi i64 [ %1, %.preheader2 ], [ %indvars.iv.next, %24 ]
  %i.1 = phi i32 [ %i.08, %.preheader2 ], [ %3, %24 ]
  %3 = add nsw i32 %i.1, 1, !dbg !94
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !13, metadata !77), !dbg !79
  %4 = getelementptr inbounds i8* %str, i64 %indvars.iv, !dbg !97
  %5 = load i8* %4, align 1, !dbg !97, !tbaa !98
  %6 = icmp eq i8 %5, 91, !dbg !99
  %7 = sext i32 %3 to i64, !dbg !100
  %8 = getelementptr inbounds i8* %str, i64 %7, !dbg !100
  %9 = load i8* %8, align 1, !dbg !100, !tbaa !98
  br i1 %6, label %.preheader, label %24, !dbg !101

.preheader:                                       ; preds = %2
  %10 = icmp eq i8 %9, 93, !dbg !102
  br i1 %10, label %._crit_edge, label %.lr.ph, !dbg !103

.lr.ph:                                           ; preds = %.preheader
  %11 = trunc i64 %indvars.iv14 to i32, !dbg !104
  %12 = icmp eq i32 %11, 0, !dbg !104
  %13 = select i1 %12, i64 1, i64 2, !dbg !107
  %14 = getelementptr inbounds [2 x [16 x i32]]* @holding, i64 0, i64 %indvars.iv14, i64 %13, !dbg !107
  %15 = getelementptr inbounds [2 x i32]* @num_holding, i64 0, i64 %indvars.iv14, !dbg !108
  %16 = select i1 %12, i64 9, i64 10, !dbg !109
  %17 = getelementptr inbounds [2 x [16 x i32]]* @holding, i64 0, i64 %indvars.iv14, i64 %16, !dbg !109
  %18 = select i1 %12, i64 7, i64 8, !dbg !110
  %19 = getelementptr inbounds [2 x [16 x i32]]* @holding, i64 0, i64 %indvars.iv14, i64 %18, !dbg !110
  %20 = select i1 %12, i64 11, i64 12, !dbg !111
  %21 = getelementptr inbounds [2 x [16 x i32]]* @holding, i64 0, i64 %indvars.iv14, i64 %20, !dbg !111
  %22 = select i1 %12, i64 3, i64 4, !dbg !112
  %23 = getelementptr inbounds [2 x [16 x i32]]* @holding, i64 0, i64 %indvars.iv14, i64 %22, !dbg !112
  br label %26, !dbg !103

; <label>:24                                      ; preds = %2
  %25 = icmp eq i8 %9, 0, !dbg !113
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !115
  br i1 %25, label %.loopexit, label %2, !dbg !115

; <label>:26                                      ; preds = %.lr.ph, %.backedge
  %27 = phi i8 [ %9, %.lr.ph ], [ %82, %.backedge ]
  %i.26 = phi i32 [ %3, %.lr.ph ], [ %29, %.backedge ]
  %28 = sext i8 %27 to i32, !dbg !100
  %29 = add nsw i32 %i.26, 1, !dbg !116
  tail call void @llvm.dbg.value(metadata i32 %29, i64 0, metadata !13, metadata !77), !dbg !79
  switch i32 %28, label %.loopexit [
    i32 112, label %30
    i32 80, label %30
    i32 113, label %40
    i32 81, label %40
    i32 114, label %50
    i32 82, label %50
    i32 98, label %60
    i32 66, label %60
    i32 110, label %70
    i32 78, label %70
  ], !dbg !117

; <label>:30                                      ; preds = %26, %26
  %31 = load i32* %14, align 4, !dbg !118, !tbaa !82
  %32 = add nsw i32 %31, 1, !dbg !118
  store i32 %32, i32* %14, align 4, !dbg !118, !tbaa !82
  %33 = load i32* %15, align 4, !dbg !119, !tbaa !82
  %34 = add nsw i32 %33, 1, !dbg !119
  store i32 %34, i32* %15, align 4, !dbg !119, !tbaa !82
  %35 = sext i32 %32 to i64, !dbg !120
  %36 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %13, i64 %35, !dbg !120
  %37 = load i32* %36, align 4, !dbg !120, !tbaa !82
  %38 = load i32* @hold_hash, align 4, !dbg !120, !tbaa !82
  %39 = xor i32 %38, %37, !dbg !120
  store i32 %39, i32* @hold_hash, align 4, !dbg !120, !tbaa !82
  br label %.backedge, !dbg !121

; <label>:40                                      ; preds = %26, %26
  %41 = load i32* %17, align 4, !dbg !122, !tbaa !82
  %42 = add nsw i32 %41, 1, !dbg !122
  store i32 %42, i32* %17, align 4, !dbg !122, !tbaa !82
  %43 = load i32* %15, align 4, !dbg !123, !tbaa !82
  %44 = add nsw i32 %43, 1, !dbg !123
  store i32 %44, i32* %15, align 4, !dbg !123, !tbaa !82
  %45 = sext i32 %42 to i64, !dbg !124
  %46 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %16, i64 %45, !dbg !124
  %47 = load i32* %46, align 4, !dbg !124, !tbaa !82
  %48 = load i32* @hold_hash, align 4, !dbg !124, !tbaa !82
  %49 = xor i32 %48, %47, !dbg !124
  store i32 %49, i32* @hold_hash, align 4, !dbg !124, !tbaa !82
  br label %.backedge, !dbg !125

; <label>:50                                      ; preds = %26, %26
  %51 = load i32* %19, align 4, !dbg !126, !tbaa !82
  %52 = add nsw i32 %51, 1, !dbg !126
  store i32 %52, i32* %19, align 4, !dbg !126, !tbaa !82
  %53 = load i32* %15, align 4, !dbg !127, !tbaa !82
  %54 = add nsw i32 %53, 1, !dbg !127
  store i32 %54, i32* %15, align 4, !dbg !127, !tbaa !82
  %55 = sext i32 %52 to i64, !dbg !128
  %56 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %18, i64 %55, !dbg !128
  %57 = load i32* %56, align 4, !dbg !128, !tbaa !82
  %58 = load i32* @hold_hash, align 4, !dbg !128, !tbaa !82
  %59 = xor i32 %58, %57, !dbg !128
  store i32 %59, i32* @hold_hash, align 4, !dbg !128, !tbaa !82
  br label %.backedge, !dbg !129

; <label>:60                                      ; preds = %26, %26
  %61 = load i32* %21, align 4, !dbg !130, !tbaa !82
  %62 = add nsw i32 %61, 1, !dbg !130
  store i32 %62, i32* %21, align 4, !dbg !130, !tbaa !82
  %63 = load i32* %15, align 4, !dbg !131, !tbaa !82
  %64 = add nsw i32 %63, 1, !dbg !131
  store i32 %64, i32* %15, align 4, !dbg !131, !tbaa !82
  %65 = sext i32 %62 to i64, !dbg !132
  %66 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %20, i64 %65, !dbg !132
  %67 = load i32* %66, align 4, !dbg !132, !tbaa !82
  %68 = load i32* @hold_hash, align 4, !dbg !132, !tbaa !82
  %69 = xor i32 %68, %67, !dbg !132
  store i32 %69, i32* @hold_hash, align 4, !dbg !132, !tbaa !82
  br label %.backedge, !dbg !133

; <label>:70                                      ; preds = %26, %26
  %71 = load i32* %23, align 4, !dbg !134, !tbaa !82
  %72 = add nsw i32 %71, 1, !dbg !134
  store i32 %72, i32* %23, align 4, !dbg !134, !tbaa !82
  %73 = load i32* %15, align 4, !dbg !135, !tbaa !82
  %74 = add nsw i32 %73, 1, !dbg !135
  store i32 %74, i32* %15, align 4, !dbg !135, !tbaa !82
  %75 = sext i32 %72 to i64, !dbg !136
  %76 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %22, i64 %75, !dbg !136
  %77 = load i32* %76, align 4, !dbg !136, !tbaa !82
  %78 = load i32* @hold_hash, align 4, !dbg !136, !tbaa !82
  %79 = xor i32 %78, %77, !dbg !136
  store i32 %79, i32* @hold_hash, align 4, !dbg !136, !tbaa !82
  br label %.backedge, !dbg !137

.backedge:                                        ; preds = %70, %60, %50, %40, %30
  %80 = sext i32 %29 to i64, !dbg !100
  %81 = getelementptr inbounds i8* %str, i64 %80, !dbg !100
  %82 = load i8* %81, align 1, !dbg !100, !tbaa !98
  %83 = icmp eq i8 %82, 93, !dbg !102
  br i1 %83, label %._crit_edge, label %26, !dbg !103

._crit_edge:                                      ; preds = %.backedge, %.preheader
  %i.2.lcssa = phi i32 [ %3, %.preheader ], [ %29, %.backedge ]
  %indvars.iv.next15 = add nuw nsw i64 %indvars.iv14, 1, !dbg !92
  %84 = icmp slt i64 %indvars.iv.next15, 2, !dbg !138
  br i1 %84, label %.preheader2, label %85, !dbg !92

; <label>:85                                      ; preds = %._crit_edge
  %86 = load i32* @Variant, align 4, !dbg !139, !tbaa !82
  %87 = icmp ne i32 %86, 1, !dbg !141
  %88 = load i32* @userealholdings, align 4
  %89 = icmp ne i32 %88, 0, !dbg !142
  %or.cond = or i1 %87, %89, !dbg !143
  br i1 %or.cond, label %.loopexit, label %90, !dbg !143

; <label>:90                                      ; preds = %85
  %strncpy = tail call i8* @strncpy(i8* getelementptr inbounds ([255 x i8]* @realholdings, i64 0, i64 0), i8* %str, i64 200), !dbg !144
  %91 = load i32* @comp_color, align 4, !dbg !146, !tbaa !82
  %92 = icmp eq i32 %91, 1, !dbg !148
  br i1 %92, label %93, label %138, !dbg !149

; <label>:93                                      ; preds = %90
  %94 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 2), align 8, !dbg !150, !tbaa !82
  %95 = icmp eq i32 %94, 0, !dbg !153
  br i1 %95, label %96, label %102, !dbg !154

; <label>:96                                      ; preds = %93
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 2), align 8, !dbg !155, !tbaa !82
  %97 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !157, !tbaa !82
  %98 = add nsw i32 %97, 1, !dbg !157
  store i32 %98, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !157, !tbaa !82
  %99 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 1), align 4, !dbg !158, !tbaa !82
  %100 = load i32* @hold_hash, align 4, !dbg !158, !tbaa !82
  %101 = xor i32 %100, %99, !dbg !158
  store i32 %101, i32* @hold_hash, align 4, !dbg !158, !tbaa !82
  br label %102, !dbg !159

; <label>:102                                     ; preds = %96, %93
  %103 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 12), align 16, !dbg !160, !tbaa !82
  %104 = icmp eq i32 %103, 0, !dbg !162
  br i1 %104, label %105, label %111, !dbg !163

; <label>:105                                     ; preds = %102
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 12), align 16, !dbg !164, !tbaa !82
  %106 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !166, !tbaa !82
  %107 = add nsw i32 %106, 1, !dbg !166
  store i32 %107, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !166, !tbaa !82
  %108 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 1), align 4, !dbg !167, !tbaa !82
  %109 = load i32* @hold_hash, align 4, !dbg !167, !tbaa !82
  %110 = xor i32 %109, %108, !dbg !167
  store i32 %110, i32* @hold_hash, align 4, !dbg !167, !tbaa !82
  br label %111, !dbg !168

; <label>:111                                     ; preds = %105, %102
  %112 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 4), align 16, !dbg !169, !tbaa !82
  %113 = icmp eq i32 %112, 0, !dbg !171
  br i1 %113, label %114, label %120, !dbg !172

; <label>:114                                     ; preds = %111
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 4), align 16, !dbg !173, !tbaa !82
  %115 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !175, !tbaa !82
  %116 = add nsw i32 %115, 1, !dbg !175
  store i32 %116, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !175, !tbaa !82
  %117 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 4, i64 1), align 4, !dbg !176, !tbaa !82
  %118 = load i32* @hold_hash, align 4, !dbg !176, !tbaa !82
  %119 = xor i32 %118, %117, !dbg !176
  store i32 %119, i32* @hold_hash, align 4, !dbg !176, !tbaa !82
  br label %120, !dbg !177

; <label>:120                                     ; preds = %114, %111
  %121 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 8), align 16, !dbg !178, !tbaa !82
  %122 = icmp eq i32 %121, 0, !dbg !180
  br i1 %122, label %123, label %129, !dbg !181

; <label>:123                                     ; preds = %120
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 8), align 16, !dbg !182, !tbaa !82
  %124 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !184, !tbaa !82
  %125 = add nsw i32 %124, 1, !dbg !184
  store i32 %125, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !184, !tbaa !82
  %126 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 4, i64 1), align 4, !dbg !185, !tbaa !82
  %127 = load i32* @hold_hash, align 4, !dbg !185, !tbaa !82
  %128 = xor i32 %127, %126, !dbg !185
  store i32 %128, i32* @hold_hash, align 4, !dbg !185, !tbaa !82
  br label %129, !dbg !186

; <label>:129                                     ; preds = %123, %120
  %130 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 10), align 8, !dbg !187, !tbaa !82
  %131 = icmp eq i32 %130, 0, !dbg !189
  br i1 %131, label %132, label %.loopexit, !dbg !190

; <label>:132                                     ; preds = %129
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 10), align 8, !dbg !191, !tbaa !82
  %133 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !193, !tbaa !82
  %134 = add nsw i32 %133, 1, !dbg !193
  store i32 %134, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !193, !tbaa !82
  %135 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 4, i64 1), align 4, !dbg !194, !tbaa !82
  %136 = load i32* @hold_hash, align 4, !dbg !194, !tbaa !82
  %137 = xor i32 %136, %135, !dbg !194
  store i32 %137, i32* @hold_hash, align 4, !dbg !194, !tbaa !82
  br label %.loopexit, !dbg !195

; <label>:138                                     ; preds = %90
  %139 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 9), align 4, !dbg !196, !tbaa !82
  %140 = icmp eq i32 %139, 0, !dbg !199
  br i1 %140, label %141, label %147, !dbg !200

; <label>:141                                     ; preds = %138
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 9), align 4, !dbg !201, !tbaa !82
  %142 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !203, !tbaa !82
  %143 = add nsw i32 %142, 1, !dbg !203
  store i32 %143, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !203, !tbaa !82
  %144 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 9, i64 1), align 4, !dbg !204, !tbaa !82
  %145 = load i32* @hold_hash, align 4, !dbg !204, !tbaa !82
  %146 = xor i32 %145, %144, !dbg !204
  store i32 %146, i32* @hold_hash, align 4, !dbg !204, !tbaa !82
  br label %147, !dbg !205

; <label>:147                                     ; preds = %141, %138
  %148 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 7), align 4, !dbg !206, !tbaa !82
  %149 = icmp eq i32 %148, 0, !dbg !208
  br i1 %149, label %150, label %156, !dbg !209

; <label>:150                                     ; preds = %147
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 7), align 4, !dbg !210, !tbaa !82
  %151 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !212, !tbaa !82
  %152 = add nsw i32 %151, 1, !dbg !212
  store i32 %152, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !212, !tbaa !82
  %153 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 9, i64 1), align 4, !dbg !213, !tbaa !82
  %154 = load i32* @hold_hash, align 4, !dbg !213, !tbaa !82
  %155 = xor i32 %154, %153, !dbg !213
  store i32 %155, i32* @hold_hash, align 4, !dbg !213, !tbaa !82
  br label %156, !dbg !214

; <label>:156                                     ; preds = %150, %147
  %157 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 11), align 4, !dbg !215, !tbaa !82
  %158 = icmp eq i32 %157, 0, !dbg !217
  br i1 %158, label %159, label %165, !dbg !218

; <label>:159                                     ; preds = %156
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 11), align 4, !dbg !219, !tbaa !82
  %160 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !221, !tbaa !82
  %161 = add nsw i32 %160, 1, !dbg !221
  store i32 %161, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !221, !tbaa !82
  %162 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 9, i64 1), align 4, !dbg !222, !tbaa !82
  %163 = load i32* @hold_hash, align 4, !dbg !222, !tbaa !82
  %164 = xor i32 %163, %162, !dbg !222
  store i32 %164, i32* @hold_hash, align 4, !dbg !222, !tbaa !82
  br label %165, !dbg !223

; <label>:165                                     ; preds = %159, %156
  %166 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 3), align 4, !dbg !224, !tbaa !82
  %167 = icmp eq i32 %166, 0, !dbg !226
  br i1 %167, label %168, label %174, !dbg !227

; <label>:168                                     ; preds = %165
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 3), align 4, !dbg !228, !tbaa !82
  %169 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !230, !tbaa !82
  %170 = add nsw i32 %169, 1, !dbg !230
  store i32 %170, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !230, !tbaa !82
  %171 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 9, i64 1), align 4, !dbg !231, !tbaa !82
  %172 = load i32* @hold_hash, align 4, !dbg !231, !tbaa !82
  %173 = xor i32 %172, %171, !dbg !231
  store i32 %173, i32* @hold_hash, align 4, !dbg !231, !tbaa !82
  br label %174, !dbg !232

; <label>:174                                     ; preds = %168, %165
  %175 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 1), align 4, !dbg !233, !tbaa !82
  %176 = icmp eq i32 %175, 0, !dbg !235
  br i1 %176, label %177, label %.loopexit, !dbg !236

; <label>:177                                     ; preds = %174
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 1), align 4, !dbg !237, !tbaa !82
  %178 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !239, !tbaa !82
  %179 = add nsw i32 %178, 1, !dbg !239
  store i32 %179, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !239, !tbaa !82
  %180 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 9, i64 1), align 4, !dbg !240, !tbaa !82
  %181 = load i32* @hold_hash, align 4, !dbg !240, !tbaa !82
  %182 = xor i32 %181, %180, !dbg !240
  store i32 %182, i32* @hold_hash, align 4, !dbg !240, !tbaa !82
  br label %.loopexit, !dbg !241

.loopexit:                                        ; preds = %24, %26, %132, %129, %177, %174, %85
  ret void, !dbg !242
}
