define void @ProcessHoldings(i8* nocapture %str) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %str}, i64 0, metadata !11), !dbg !74
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !14), !dbg !75
  tail call void @llvm.memset.p0i8.i64(i8* bitcast ([2 x [16 x i32]]* @holding to i8*), i8 0, i64 128, i32 16, i1 false), !dbg !76
  store i32 -1056969216, i32* @hold_hash, align 4, !dbg !77, !tbaa !78
  store i32 0, i32* @white_hand_eval, align 4, !dbg !81, !tbaa !78
  store i32 0, i32* @black_hand_eval, align 4, !dbg !82, !tbaa !78
  tail call void @reset_ecache() #7, !dbg !83
  store i32 0, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !84, !tbaa !78
  store i32 0, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !85, !tbaa !78
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !12), !dbg !86
  br label %while.cond.preheader, !dbg !86

while.cond.preheader:                             ; preds = %entry, %for.inc
  %indvars.iv302 = phi i64 [ 0, %entry ], [ %indvars.iv.next303, %for.inc ]
  %i.0297 = phi i32 [ 0, %entry ], [ %i.2.lcssa, %for.inc ]
  %0 = sext i32 %i.0297 to i64
  %arrayidx.phi.trans.insert = getelementptr inbounds i8* %str, i64 %0
  %.pre = load i8* %arrayidx.phi.trans.insert, align 1, !dbg !88, !tbaa !79
  br label %while.cond, !dbg !88

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %1 = phi i8 [ %.pre, %while.cond.preheader ], [ %2, %while.body ]
  %indvars.iv = phi i64 [ %0, %while.cond.preheader ], [ %indvars.iv.next, %while.body ]
  %i.1 = phi i32 [ %i.0297, %while.cond.preheader ], [ %inc, %while.body ]
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !90
  %inc = add nsw i32 %i.1, 1, !dbg !88
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !14), !dbg !88
  %cmp1 = icmp eq i8 %1, 91, !dbg !88
  br i1 %cmp1, label %while.cond8.loopexit, label %while.body, !dbg !88

while.body:                                       ; preds = %while.cond
  %arrayidx4 = getelementptr inbounds i8* %str, i64 %indvars.iv.next, !dbg !90
  %2 = load i8* %arrayidx4, align 1, !dbg !90, !tbaa !79
  %cmp6 = icmp eq i8 %2, 0, !dbg !90
  br i1 %cmp6, label %if.end250, label %while.cond, !dbg !90

while.cond8.loopexit:                             ; preds = %while.cond
  %idxprom9292 = sext i32 %inc to i64, !dbg !91
  %arrayidx10293 = getelementptr inbounds i8* %str, i64 %idxprom9292, !dbg !91
  %3 = load i8* %arrayidx10293, align 1, !dbg !91, !tbaa !79
  %cmp12294 = icmp eq i8 %3, 93, !dbg !91
  br i1 %cmp12294, label %for.inc, label %while.body14.lr.ph, !dbg !91

while.body14.lr.ph:                               ; preds = %while.cond8.loopexit
  %4 = trunc i64 %indvars.iv302 to i32, !dbg !92
  %cmp19 = icmp eq i32 %4, 0, !dbg !92
  %idxprom21 = select i1 %cmp19, i64 1, i64 2, !dbg !92
  %arrayidx24 = getelementptr inbounds [2 x [16 x i32]]* @holding, i64 0, i64 %indvars.iv302, i64 %idxprom21, !dbg !92
  %arrayidx27 = getelementptr inbounds [2 x i32]* @num_holding, i64 0, i64 %indvars.iv302, !dbg !95
  %idxprom47 = select i1 %cmp19, i64 9, i64 10, !dbg !96
  %arrayidx50 = getelementptr inbounds [2 x [16 x i32]]* @holding, i64 0, i64 %indvars.iv302, i64 %idxprom47, !dbg !96
  %idxprom74 = select i1 %cmp19, i64 7, i64 8, !dbg !97
  %arrayidx77 = getelementptr inbounds [2 x [16 x i32]]* @holding, i64 0, i64 %indvars.iv302, i64 %idxprom74, !dbg !97
  %idxprom101 = select i1 %cmp19, i64 11, i64 12, !dbg !98
  %arrayidx104 = getelementptr inbounds [2 x [16 x i32]]* @holding, i64 0, i64 %indvars.iv302, i64 %idxprom101, !dbg !98
  %idxprom128 = select i1 %cmp19, i64 3, i64 4, !dbg !99
  %arrayidx131 = getelementptr inbounds [2 x [16 x i32]]* @holding, i64 0, i64 %indvars.iv302, i64 %idxprom128, !dbg !99
  br label %while.body14, !dbg !91

while.body14:                                     ; preds = %while.body14.lr.ph, %while.cond8.backedge
  %indvars.iv300 = phi i64 [ %idxprom9292, %while.body14.lr.ph ], [ %indvars.iv.next301, %while.cond8.backedge ]
  %5 = phi i8 [ %3, %while.body14.lr.ph ], [ %26, %while.cond8.backedge ]
  %i.2295 = phi i32 [ %inc, %while.body14.lr.ph ], [ %inc15, %while.cond8.backedge ]
  %conv11 = sext i8 %5 to i32, !dbg !91
  %indvars.iv.next301 = add i64 %indvars.iv300, 1, !dbg !91
  %inc15 = add nsw i32 %i.2295, 1, !dbg !100
  tail call void @llvm.dbg.value(metadata !{i32 %inc15}, i64 0, metadata !14), !dbg !100
  switch i32 %conv11, label %if.end250 [
    i32 112, label %sw.bb
    i32 80, label %sw.bb
    i32 113, label %sw.bb43
    i32 81, label %sw.bb43
    i32 114, label %sw.bb70
    i32 82, label %sw.bb70
    i32 98, label %sw.bb97
    i32 66, label %sw.bb97
    i32 110, label %sw.bb124
    i32 78, label %sw.bb124
  ], !dbg !100

sw.bb:                                            ; preds = %while.body14, %while.body14
  %6 = load i32* %arrayidx24, align 4, !dbg !92, !tbaa !78
  %inc25 = add nsw i32 %6, 1, !dbg !92
  store i32 %inc25, i32* %arrayidx24, align 4, !dbg !92, !tbaa !78
  %7 = load i32* %arrayidx27, align 4, !dbg !95, !tbaa !78
  %inc28 = add nsw i32 %7, 1, !dbg !95
  store i32 %inc28, i32* %arrayidx27, align 4, !dbg !95, !tbaa !78
  %idxprom36 = sext i32 %inc25 to i64, !dbg !101
  %arrayidx42 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom21, i64 %idxprom36, !dbg !101
  %8 = load i32* %arrayidx42, align 4, !dbg !101, !tbaa !78
  %9 = load i32* @hold_hash, align 4, !dbg !101, !tbaa !78
  %xor = xor i32 %9, %8, !dbg !101
  store i32 %xor, i32* @hold_hash, align 4, !dbg !101, !tbaa !78
  br label %while.cond8.backedge, !dbg !102

sw.bb43:                                          ; preds = %while.body14, %while.body14
  %10 = load i32* %arrayidx50, align 4, !dbg !96, !tbaa !78
  %inc51 = add nsw i32 %10, 1, !dbg !96
  store i32 %inc51, i32* %arrayidx50, align 4, !dbg !96, !tbaa !78
  %11 = load i32* %arrayidx27, align 4, !dbg !103, !tbaa !78
  %inc54 = add nsw i32 %11, 1, !dbg !103
  store i32 %inc54, i32* %arrayidx27, align 4, !dbg !103, !tbaa !78
  %idxprom62 = sext i32 %inc51 to i64, !dbg !104
  %arrayidx68 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom47, i64 %idxprom62, !dbg !104
  %12 = load i32* %arrayidx68, align 4, !dbg !104, !tbaa !78
  %13 = load i32* @hold_hash, align 4, !dbg !104, !tbaa !78
  %xor69 = xor i32 %13, %12, !dbg !104
  store i32 %xor69, i32* @hold_hash, align 4, !dbg !104, !tbaa !78
  br label %while.cond8.backedge, !dbg !105

sw.bb70:                                          ; preds = %while.body14, %while.body14
  %14 = load i32* %arrayidx77, align 4, !dbg !97, !tbaa !78
  %inc78 = add nsw i32 %14, 1, !dbg !97
  store i32 %inc78, i32* %arrayidx77, align 4, !dbg !97, !tbaa !78
  %15 = load i32* %arrayidx27, align 4, !dbg !106, !tbaa !78
  %inc81 = add nsw i32 %15, 1, !dbg !106
  store i32 %inc81, i32* %arrayidx27, align 4, !dbg !106, !tbaa !78
  %idxprom89 = sext i32 %inc78 to i64, !dbg !107
  %arrayidx95 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom74, i64 %idxprom89, !dbg !107
  %16 = load i32* %arrayidx95, align 4, !dbg !107, !tbaa !78
  %17 = load i32* @hold_hash, align 4, !dbg !107, !tbaa !78
  %xor96 = xor i32 %17, %16, !dbg !107
  store i32 %xor96, i32* @hold_hash, align 4, !dbg !107, !tbaa !78
  br label %while.cond8.backedge, !dbg !108

sw.bb97:                                          ; preds = %while.body14, %while.body14
  %18 = load i32* %arrayidx104, align 4, !dbg !98, !tbaa !78
  %inc105 = add nsw i32 %18, 1, !dbg !98
  store i32 %inc105, i32* %arrayidx104, align 4, !dbg !98, !tbaa !78
  %19 = load i32* %arrayidx27, align 4, !dbg !109, !tbaa !78
  %inc108 = add nsw i32 %19, 1, !dbg !109
  store i32 %inc108, i32* %arrayidx27, align 4, !dbg !109, !tbaa !78
  %idxprom116 = sext i32 %inc105 to i64, !dbg !110
  %arrayidx122 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom101, i64 %idxprom116, !dbg !110
  %20 = load i32* %arrayidx122, align 4, !dbg !110, !tbaa !78
  %21 = load i32* @hold_hash, align 4, !dbg !110, !tbaa !78
  %xor123 = xor i32 %21, %20, !dbg !110
  store i32 %xor123, i32* @hold_hash, align 4, !dbg !110, !tbaa !78
  br label %while.cond8.backedge, !dbg !111

sw.bb124:                                         ; preds = %while.body14, %while.body14
  %22 = load i32* %arrayidx131, align 4, !dbg !99, !tbaa !78
  %inc132 = add nsw i32 %22, 1, !dbg !99
  store i32 %inc132, i32* %arrayidx131, align 4, !dbg !99, !tbaa !78
  %23 = load i32* %arrayidx27, align 4, !dbg !112, !tbaa !78
  %inc135 = add nsw i32 %23, 1, !dbg !112
  store i32 %inc135, i32* %arrayidx27, align 4, !dbg !112, !tbaa !78
  %idxprom143 = sext i32 %inc132 to i64, !dbg !113
  %arrayidx149 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom128, i64 %idxprom143, !dbg !113
  %24 = load i32* %arrayidx149, align 4, !dbg !113, !tbaa !78
  %25 = load i32* @hold_hash, align 4, !dbg !113, !tbaa !78
  %xor150 = xor i32 %25, %24, !dbg !113
  store i32 %xor150, i32* @hold_hash, align 4, !dbg !113, !tbaa !78
  br label %while.cond8.backedge, !dbg !114

while.cond8.backedge:                             ; preds = %sw.bb124, %sw.bb97, %sw.bb70, %sw.bb43, %sw.bb
  %arrayidx10 = getelementptr inbounds i8* %str, i64 %indvars.iv.next301, !dbg !91
  %26 = load i8* %arrayidx10, align 1, !dbg !91, !tbaa !79
  %cmp12 = icmp eq i8 %26, 93, !dbg !91
  br i1 %cmp12, label %for.inc, label %while.body14, !dbg !91

for.inc:                                          ; preds = %while.cond8.backedge, %while.cond8.loopexit
  %i.2.lcssa = phi i32 [ %inc, %while.cond8.loopexit ], [ %inc15, %while.cond8.backedge ]
  %indvars.iv.next303 = add i64 %indvars.iv302, 1, !dbg !86
  %27 = trunc i64 %indvars.iv.next303 to i32, !dbg !86
  %cmp = icmp slt i32 %27, 2, !dbg !86
  br i1 %cmp, label %while.cond.preheader, label %for.end, !dbg !86

for.end:                                          ; preds = %for.inc
  %28 = load i32* @Variant, align 4, !dbg !115, !tbaa !78
  %cmp153 = icmp ne i32 %28, 1, !dbg !115
  %29 = load i32* @userealholdings, align 4, !dbg !115, !tbaa !78
  %tobool = icmp ne i32 %29, 0, !dbg !115
  %or.cond = or i1 %cmp153, %tobool, !dbg !115
  br i1 %or.cond, label %if.end250, label %if.then155, !dbg !115

if.then155:                                       ; preds = %for.end
  %call = tail call i8* @strncpy(i8* getelementptr inbounds ([255 x i8]* @realholdings, i64 0, i64 0), i8* %str, i64 200) #7, !dbg !116
  %30 = load i32* @comp_color, align 4, !dbg !118, !tbaa !78
  %cmp156 = icmp eq i32 %30, 1, !dbg !118
  br i1 %cmp156, label %if.then158, label %if.else, !dbg !118

if.then158:                                       ; preds = %if.then155
  %31 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 2), align 8, !dbg !119, !tbaa !78
  %cmp159 = icmp eq i32 %31, 0, !dbg !119
  br i1 %cmp159, label %if.then161, label %if.end167, !dbg !119

if.then161:                                       ; preds = %if.then158
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 2), align 8, !dbg !121, !tbaa !78
  %32 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !123, !tbaa !78
  %inc163 = add nsw i32 %32, 1, !dbg !123
  store i32 %inc163, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !123, !tbaa !78
  %33 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 1), align 4, !dbg !124, !tbaa !78
  %34 = load i32* @hold_hash, align 4, !dbg !124, !tbaa !78
  %xor166 = xor i32 %34, %33, !dbg !124
  store i32 %xor166, i32* @hold_hash, align 4, !dbg !124, !tbaa !78
  br label %if.end167, !dbg !125

if.end167:                                        ; preds = %if.then161, %if.then158
  %35 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 12), align 16, !dbg !126, !tbaa !78
  %cmp168 = icmp eq i32 %35, 0, !dbg !126
  br i1 %cmp168, label %if.then170, label %if.end176, !dbg !126

if.then170:                                       ; preds = %if.end167
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 12), align 16, !dbg !127, !tbaa !78
  %36 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !129, !tbaa !78
  %inc172 = add nsw i32 %36, 1, !dbg !129
  store i32 %inc172, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !129, !tbaa !78
  %37 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 2, i64 1), align 4, !dbg !130, !tbaa !78
  %38 = load i32* @hold_hash, align 4, !dbg !130, !tbaa !78
  %xor175 = xor i32 %38, %37, !dbg !130
  store i32 %xor175, i32* @hold_hash, align 4, !dbg !130, !tbaa !78
  br label %if.end176, !dbg !131

if.end176:                                        ; preds = %if.then170, %if.end167
  %39 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 4), align 16, !dbg !132, !tbaa !78
  %cmp177 = icmp eq i32 %39, 0, !dbg !132
  br i1 %cmp177, label %if.then179, label %if.end185, !dbg !132

if.then179:                                       ; preds = %if.end176
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 4), align 16, !dbg !133, !tbaa !78
  %40 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !135, !tbaa !78
  %inc181 = add nsw i32 %40, 1, !dbg !135
  store i32 %inc181, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !135, !tbaa !78
  %41 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 4, i64 1), align 4, !dbg !136, !tbaa !78
  %42 = load i32* @hold_hash, align 4, !dbg !136, !tbaa !78
  %xor184 = xor i32 %42, %41, !dbg !136
  store i32 %xor184, i32* @hold_hash, align 4, !dbg !136, !tbaa !78
  br label %if.end185, !dbg !137

if.end185:                                        ; preds = %if.then179, %if.end176
  %43 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 8), align 16, !dbg !138, !tbaa !78
  %cmp186 = icmp eq i32 %43, 0, !dbg !138
  br i1 %cmp186, label %if.then188, label %if.end194, !dbg !138

if.then188:                                       ; preds = %if.end185
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 8), align 16, !dbg !139, !tbaa !78
  %44 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !141, !tbaa !78
  %inc190 = add nsw i32 %44, 1, !dbg !141
  store i32 %inc190, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !141, !tbaa !78
  %45 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 4, i64 1), align 4, !dbg !142, !tbaa !78
  %46 = load i32* @hold_hash, align 4, !dbg !142, !tbaa !78
  %xor193 = xor i32 %46, %45, !dbg !142
  store i32 %xor193, i32* @hold_hash, align 4, !dbg !142, !tbaa !78
  br label %if.end194, !dbg !143

if.end194:                                        ; preds = %if.then188, %if.end185
  %47 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 10), align 8, !dbg !144, !tbaa !78
  %cmp195 = icmp eq i32 %47, 0, !dbg !144
  br i1 %cmp195, label %if.then197, label %if.end250, !dbg !144

if.then197:                                       ; preds = %if.end194
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 1, i64 10), align 8, !dbg !145, !tbaa !78
  %48 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !147, !tbaa !78
  %inc199 = add nsw i32 %48, 1, !dbg !147
  store i32 %inc199, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 1), align 4, !dbg !147, !tbaa !78
  %49 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 4, i64 1), align 4, !dbg !148, !tbaa !78
  %50 = load i32* @hold_hash, align 4, !dbg !148, !tbaa !78
  %xor202 = xor i32 %50, %49, !dbg !148
  store i32 %xor202, i32* @hold_hash, align 4, !dbg !148, !tbaa !78
  br label %if.end250, !dbg !149

if.else:                                          ; preds = %if.then155
  %51 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 9), align 4, !dbg !150, !tbaa !78
  %cmp204 = icmp eq i32 %51, 0, !dbg !150
  br i1 %cmp204, label %if.then206, label %if.end212, !dbg !150

if.then206:                                       ; preds = %if.else
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 9), align 4, !dbg !152, !tbaa !78
  %52 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !154, !tbaa !78
  %inc208 = add nsw i32 %52, 1, !dbg !154
  store i32 %inc208, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !154, !tbaa !78
  %53 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 9, i64 1), align 4, !dbg !155, !tbaa !78
  %54 = load i32* @hold_hash, align 4, !dbg !155, !tbaa !78
  %xor211 = xor i32 %54, %53, !dbg !155
  store i32 %xor211, i32* @hold_hash, align 4, !dbg !155, !tbaa !78
  br label %if.end212, !dbg !156

if.end212:                                        ; preds = %if.then206, %if.else
  %55 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 7), align 4, !dbg !157, !tbaa !78
  %cmp213 = icmp eq i32 %55, 0, !dbg !157
  br i1 %cmp213, label %if.then215, label %if.end221, !dbg !157

if.then215:                                       ; preds = %if.end212
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 7), align 4, !dbg !158, !tbaa !78
  %56 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !160, !tbaa !78
  %inc217 = add nsw i32 %56, 1, !dbg !160
  store i32 %inc217, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !160, !tbaa !78
  %57 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 9, i64 1), align 4, !dbg !161, !tbaa !78
  %58 = load i32* @hold_hash, align 4, !dbg !161, !tbaa !78
  %xor220 = xor i32 %58, %57, !dbg !161
  store i32 %xor220, i32* @hold_hash, align 4, !dbg !161, !tbaa !78
  br label %if.end221, !dbg !162

if.end221:                                        ; preds = %if.then215, %if.end212
  %59 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 11), align 4, !dbg !163, !tbaa !78
  %cmp222 = icmp eq i32 %59, 0, !dbg !163
  br i1 %cmp222, label %if.then224, label %if.end230, !dbg !163

if.then224:                                       ; preds = %if.end221
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 11), align 4, !dbg !164, !tbaa !78
  %60 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !166, !tbaa !78
  %inc226 = add nsw i32 %60, 1, !dbg !166
  store i32 %inc226, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !166, !tbaa !78
  %61 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 9, i64 1), align 4, !dbg !167, !tbaa !78
  %62 = load i32* @hold_hash, align 4, !dbg !167, !tbaa !78
  %xor229 = xor i32 %62, %61, !dbg !167
  store i32 %xor229, i32* @hold_hash, align 4, !dbg !167, !tbaa !78
  br label %if.end230, !dbg !168

if.end230:                                        ; preds = %if.then224, %if.end221
  %63 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 3), align 4, !dbg !169, !tbaa !78
  %cmp231 = icmp eq i32 %63, 0, !dbg !169
  br i1 %cmp231, label %if.then233, label %if.end239, !dbg !169

if.then233:                                       ; preds = %if.end230
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 3), align 4, !dbg !170, !tbaa !78
  %64 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !172, !tbaa !78
  %inc235 = add nsw i32 %64, 1, !dbg !172
  store i32 %inc235, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !172, !tbaa !78
  %65 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 9, i64 1), align 4, !dbg !173, !tbaa !78
  %66 = load i32* @hold_hash, align 4, !dbg !173, !tbaa !78
  %xor238 = xor i32 %66, %65, !dbg !173
  store i32 %xor238, i32* @hold_hash, align 4, !dbg !173, !tbaa !78
  br label %if.end239, !dbg !174

if.end239:                                        ; preds = %if.then233, %if.end230
  %67 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 1), align 4, !dbg !175, !tbaa !78
  %cmp240 = icmp eq i32 %67, 0, !dbg !175
  br i1 %cmp240, label %if.then242, label %if.end250, !dbg !175

if.then242:                                       ; preds = %if.end239
  store i32 1, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i64 0, i64 0, i64 1), align 4, !dbg !176, !tbaa !78
  %68 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !178, !tbaa !78
  %inc244 = add nsw i32 %68, 1, !dbg !178
  store i32 %inc244, i32* getelementptr inbounds ([2 x i32]* @num_holding, i64 0, i64 0), align 4, !dbg !178, !tbaa !78
  %69 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i64 0, i64 9, i64 1), align 4, !dbg !179, !tbaa !78
  %70 = load i32* @hold_hash, align 4, !dbg !179, !tbaa !78
  %xor247 = xor i32 %70, %69, !dbg !179
  store i32 %xor247, i32* @hold_hash, align 4, !dbg !179, !tbaa !78
  br label %if.end250, !dbg !180

if.end250:                                        ; preds = %while.body14, %while.body, %if.then197, %if.end194, %if.then242, %if.end239, %for.end
  ret void, !dbg !181
}
