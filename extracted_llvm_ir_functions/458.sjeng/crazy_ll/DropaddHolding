define void @DropaddHolding(i32 %what, i32 %who) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %what}, i64 0, metadata !46), !dbg !229
  tail call void @llvm.dbg.value(metadata !{i32 %who}, i64 0, metadata !47), !dbg !229
  %idxprom = sext i32 %what to i64, !dbg !230
  %idxprom1 = sext i32 %who to i64, !dbg !230
  %arrayidx2 = getelementptr inbounds [2 x [16 x i32]]* @holding, i64 0, i64 %idxprom1, i64 %idxprom, !dbg !230
  %0 = load i32* %arrayidx2, align 4, !dbg !230, !tbaa !78
  %inc = add nsw i32 %0, 1, !dbg !230
  store i32 %inc, i32* %arrayidx2, align 4, !dbg !230, !tbaa !78
  %arrayidx4 = getelementptr inbounds [2 x i32]* @num_holding, i64 0, i64 %idxprom1, !dbg !231
  %1 = load i32* %arrayidx4, align 4, !dbg !231, !tbaa !78
  %inc5 = add nsw i32 %1, 1, !dbg !231
  store i32 %inc5, i32* %arrayidx4, align 4, !dbg !231, !tbaa !78
  %idxprom10 = sext i32 %inc to i64, !dbg !232
  %arrayidx13 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom, i64 %idxprom10, !dbg !232
  %2 = load i32* %arrayidx13, align 4, !dbg !232, !tbaa !78
  %3 = load i32* @hold_hash, align 4, !dbg !232, !tbaa !78
  %xor = xor i32 %3, %2, !dbg !232
  store i32 %xor, i32* @hold_hash, align 4, !dbg !232, !tbaa !78
  %cmp = icmp eq i32 %who, 0, !dbg !233
  %arrayidx15 = getelementptr inbounds [0 x i32]* @hand_value, i64 0, i64 %idxprom, !dbg !234
  %4 = load i32* %arrayidx15, align 4, !dbg !234, !tbaa !78
  br i1 %cmp, label %if.then, label %if.else, !dbg !233

if.then:                                          ; preds = %entry
  %5 = load i32* @white_hand_eval, align 4, !dbg !234, !tbaa !78
  %add = add nsw i32 %5, %4, !dbg !234
  store i32 %add, i32* @white_hand_eval, align 4, !dbg !234, !tbaa !78
  br label %if.end, !dbg !234

if.else:                                          ; preds = %entry
  %6 = load i32* @black_hand_eval, align 4, !dbg !235, !tbaa !78
  %add18 = add nsw i32 %6, %4, !dbg !235
  store i32 %add18, i32* @black_hand_eval, align 4, !dbg !235, !tbaa !78
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arrayidx20 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %idxprom, !dbg !236
  %7 = load i32* %arrayidx20, align 4, !dbg !236, !tbaa !78
  %8 = load i32* @Material, align 4, !dbg !236, !tbaa !78
  %add21 = add nsw i32 %8, %7, !dbg !236
  store i32 %add21, i32* @Material, align 4, !dbg !236, !tbaa !78
  ret void, !dbg !237
}
