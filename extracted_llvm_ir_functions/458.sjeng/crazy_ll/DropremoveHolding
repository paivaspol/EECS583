define void @DropremoveHolding(i32 %what, i32 %who) #0 {
  tail call void @llvm.dbg.value(metadata i32 %what, i64 0, metadata !49, metadata !77), !dbg !339
  tail call void @llvm.dbg.value(metadata i32 %who, i64 0, metadata !50, metadata !77), !dbg !340
  %1 = sext i32 %what to i64, !dbg !341
  %2 = sext i32 %who to i64, !dbg !341
  %3 = getelementptr inbounds [2 x [16 x i32]]* @holding, i64 0, i64 %2, i64 %1, !dbg !341
  %4 = load i32* %3, align 4, !dbg !341, !tbaa !82
  %5 = icmp slt i32 %4, 1, !dbg !341
  br i1 %5, label %6, label %7, !dbg !341, !prof !267

; <label>:6                                       ; preds = %0
  tail call void @__assert_rtn(i8* getelementptr inbounds ([18 x i8]* @__func__.DropremoveHolding, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8]* @.str, i64 0, i64 0), i32 287, i8* getelementptr inbounds ([23 x i8]* @.str2, i64 0, i64 0)) #8, !dbg !341
  unreachable, !dbg !341

; <label>:7                                       ; preds = %0
  %8 = icmp sgt i32 %4, 19, !dbg !342
  br i1 %8, label %9, label %10, !dbg !342, !prof !267

; <label>:9                                       ; preds = %7
  tail call void @__assert_rtn(i8* getelementptr inbounds ([18 x i8]* @__func__.DropremoveHolding, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8]* @.str, i64 0, i64 0), i32 289, i8* getelementptr inbounds ([24 x i8]* @.str3, i64 0, i64 0)) #8, !dbg !342
  unreachable, !dbg !342

; <label>:10                                      ; preds = %7
  %11 = sext i32 %4 to i64, !dbg !343
  %12 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %1, i64 %11, !dbg !343
  %13 = load i32* %12, align 4, !dbg !343, !tbaa !82
  %14 = load i32* @hold_hash, align 4, !dbg !343, !tbaa !82
  %15 = xor i32 %14, %13, !dbg !343
  store i32 %15, i32* @hold_hash, align 4, !dbg !343, !tbaa !82
  %16 = add nsw i32 %4, -1, !dbg !344
  store i32 %16, i32* %3, align 4, !dbg !344, !tbaa !82
  %17 = getelementptr inbounds [2 x i32]* @num_holding, i64 0, i64 %2, !dbg !345
  %18 = load i32* %17, align 4, !dbg !346, !tbaa !82
  %19 = add nsw i32 %18, -1, !dbg !346
  store i32 %19, i32* %17, align 4, !dbg !346, !tbaa !82
  %20 = icmp eq i32 %who, 0, !dbg !347
  %21 = getelementptr inbounds [0 x i32]* @hand_value, i64 0, i64 %1, !dbg !349
  %22 = load i32* %21, align 4, !dbg !349, !tbaa !82
  br i1 %20, label %23, label %26, !dbg !350

; <label>:23                                      ; preds = %10
  %24 = load i32* @white_hand_eval, align 4, !dbg !351, !tbaa !82
  %25 = sub nsw i32 %24, %22, !dbg !351
  store i32 %25, i32* @white_hand_eval, align 4, !dbg !351, !tbaa !82
  br label %29, !dbg !352

; <label>:26                                      ; preds = %10
  %27 = load i32* @black_hand_eval, align 4, !dbg !353, !tbaa !82
  %28 = sub nsw i32 %27, %22, !dbg !353
  store i32 %28, i32* @black_hand_eval, align 4, !dbg !353, !tbaa !82
  br label %29

; <label>:29                                      ; preds = %26, %23
  %30 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %1, !dbg !354
  %31 = load i32* %30, align 4, !dbg !354, !tbaa !82
  %32 = load i32* @Material, align 4, !dbg !355, !tbaa !82
  %33 = sub nsw i32 %32, %31, !dbg !355
  store i32 %33, i32* @Material, align 4, !dbg !355, !tbaa !82
  ret void, !dbg !356
}
