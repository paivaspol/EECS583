define void @removeHolding(i32 %what, i32 %who) #0 {
entry:
  %0 = load i32* @Variant, align 4, !tbaa !0
  %cmp = icmp eq i32 %0, 0
  %idxprom = sext i32 %what to i64
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %idxprom1 = sext i32 %who to i64
  %arrayidx2 = getelementptr inbounds [2 x [16 x i32]]* @holding, i64 0, i64 %idxprom1, i64 %idxprom
  %1 = load i32* %arrayidx2, align 4, !tbaa !0
  %idxprom3 = sext i32 %1 to i64
  %arrayidx6 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i64 0, i64 %idxprom, i64 %idxprom3
  %2 = load i32* %arrayidx6, align 4, !tbaa !0
  %3 = load i32* @hold_hash, align 4, !tbaa !0
  %xor = xor i32 %3, %2
  store i32 %xor, i32* @hold_hash, align 4, !tbaa !0
  %dec = add nsw i32 %1, -1
  store i32 %dec, i32* %arrayidx2, align 4, !tbaa !0
  %arrayidx12 = getelementptr inbounds [2 x i32]* @num_holding, i64 0, i64 %idxprom1
  %4 = load i32* %arrayidx12, align 4, !tbaa !0
  %dec13 = add nsw i32 %4, -1
  store i32 %dec13, i32* %arrayidx12, align 4, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %cmp14 = icmp eq i32 %who, 0
  %arrayidx17 = getelementptr inbounds [0 x i32]* @hand_value, i64 0, i64 %idxprom
  %5 = load i32* %arrayidx17, align 4, !tbaa !0
  br i1 %cmp14, label %if.then15, label %if.else

if.then15:                                        ; preds = %if.end
  %6 = load i32* @white_hand_eval, align 4, !tbaa !0
  %sub = sub nsw i32 %6, %5
  store i32 %sub, i32* @white_hand_eval, align 4, !tbaa !0
  br label %if.end21

if.else:                                          ; preds = %if.end
  %7 = load i32* @black_hand_eval, align 4, !tbaa !0
  %sub20 = sub nsw i32 %7, %5
  store i32 %sub20, i32* @black_hand_eval, align 4, !tbaa !0
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then15
  %arrayidx23 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %idxprom
  %8 = load i32* %arrayidx23, align 4, !tbaa !0
  %9 = load i32* @Material, align 4, !tbaa !0
  %sub24 = sub nsw i32 %9, %8
  store i32 %sub24, i32* @Material, align 4, !tbaa !0
  ret void
}
