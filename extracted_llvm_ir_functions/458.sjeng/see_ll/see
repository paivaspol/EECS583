define i32 @see(i32 %color, i32 %square, i32 %from) #0 {
  %caps = alloca [2 x i32], align 4
  tail call void @llvm.dbg.value(metadata i32 %color, i64 0, metadata !34, metadata !66), !dbg !266
  tail call void @llvm.dbg.value(metadata i32 %square, i64 0, metadata !35, metadata !66), !dbg !267
  tail call void @llvm.dbg.value(metadata i32 %from, i64 0, metadata !36, metadata !66), !dbg !268
  tail call void @llvm.dbg.declare(metadata [2 x i32]* %caps, metadata !38, metadata !66), !dbg !269
  store i32 0, i32* getelementptr inbounds ([2 x i32]* @see_num_attackers, i64 0, i64 0), align 4, !dbg !270, !tbaa !69
  store i32 0, i32* getelementptr inbounds ([2 x i32]* @see_num_attackers, i64 0, i64 1), align 4, !dbg !271, !tbaa !69
  %1 = sext i32 %from to i64, !dbg !272
  %2 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %1, !dbg !272
  %3 = load i32* %2, align 4, !dbg !272, !tbaa !69
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !43, metadata !66), !dbg !273
  store i32 13, i32* %2, align 4, !dbg !274, !tbaa !69
  %4 = sext i32 %color to i64, !dbg !275
  %5 = getelementptr inbounds [2 x i32]* @see_num_attackers, i64 0, i64 %4, !dbg !275
  %6 = load i32* %5, align 4, !dbg !276, !tbaa !69
  %7 = add nsw i32 %6, 1, !dbg !276
  store i32 %7, i32* %5, align 4, !dbg !276, !tbaa !69
  %8 = getelementptr inbounds [2 x [16 x %struct.see_data]]* @see_attackers, i64 0, i64 %4, i64 0, i32 0, !dbg !277
  store i32 %3, i32* %8, align 16, !dbg !278, !tbaa !92
  %9 = getelementptr inbounds [2 x [16 x %struct.see_data]]* @see_attackers, i64 0, i64 %4, i64 0, i32 1, !dbg !279
  store i32 %from, i32* %9, align 4, !dbg !280, !tbaa !96
  tail call void @setup_attackers(i32 %square) #2, !dbg !281
  %10 = sext i32 %square to i64, !dbg !282
  %11 = getelementptr inbounds [144 x i32]* @board, i64 0, i64 %10, !dbg !282
  %12 = load i32* %11, align 4, !dbg !282, !tbaa !69
  %13 = sext i32 %12 to i64, !dbg !283
  %14 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %13, !dbg !283
  %15 = load i32* %14, align 4, !dbg !283, !tbaa !69
  %ispos = icmp sgt i32 %15, -1, !dbg !284
  %neg = sub i32 0, %15, !dbg !284
  %16 = select i1 %ispos, i32 %15, i32 %neg, !dbg !284
  tail call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !42, metadata !66), !dbg !285
  %17 = icmp eq i32 %color, 0, !dbg !286
  %18 = zext i1 %17 to i64, !dbg !288
  %19 = getelementptr inbounds [2 x i32]* @see_num_attackers, i64 0, i64 %18, !dbg !288
  %20 = load i32* %19, align 4, !dbg !288, !tbaa !69
  %21 = icmp eq i32 %20, 0, !dbg !288
  br i1 %21, label %22, label %23, !dbg !289

; <label>:22                                      ; preds = %0
  store i32 %3, i32* %2, align 4, !dbg !290, !tbaa !69
  br label %68, !dbg !292

; <label>:23                                      ; preds = %0
  tail call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !45, metadata !66), !dbg !293
  tail call void @llvm.dbg.value(metadata i32 -1000000, i64 0, metadata !44, metadata !66), !dbg !294
  %24 = getelementptr inbounds [2 x i32]* %caps, i64 0, i64 %4, !dbg !295
  store i32 1, i32* %24, align 4, !dbg !296, !tbaa !69
  %25 = getelementptr inbounds [2 x i32]* %caps, i64 0, i64 %18, !dbg !297
  store i32 0, i32* %25, align 4, !dbg !298, !tbaa !69
  tail call void @llvm.dbg.value(metadata i32 %27, i64 0, metadata !37, metadata !66), !dbg !299
  %26 = icmp sgt i32 %20, 0, !dbg !300
  br i1 %26, label %.lr.ph, label %._crit_edge, !dbg !301

.lr.ph:                                           ; preds = %23
  %27 = zext i1 %17 to i32, !dbg !286
  br label %28, !dbg !301

; <label>:28                                      ; preds = %.lr.ph, %56
  %29 = phi i32 [ 0, %.lr.ph ], [ %62, %56 ]
  %30 = phi i32* [ %25, %.lr.ph ], [ %61, %56 ]
  %hisbestvalue.08 = phi i32 [ %16, %.lr.ph ], [ %hisbestvalue.1, %56 ]
  %ourbestvalue.07 = phi i32 [ -1000000, %.lr.ph ], [ %ourbestvalue.3, %56 ]
  %value.06 = phi i32 [ %16, %.lr.ph ], [ %value.1, %56 ]
  %sside.05 = phi i32 [ %27, %.lr.ph ], [ %59, %56 ]
  tail call void @findlowest(i32 %sside.05, i32 %29) #2, !dbg !302
  %31 = icmp eq i32 %sside.05, %color, !dbg !304
  %32 = icmp eq i32 %sside.05, 0, !dbg !306
  %33 = zext i1 %32 to i64, !dbg !308
  %34 = getelementptr inbounds [2 x i32]* %caps, i64 0, i64 %33, !dbg !308
  %35 = load i32* %34, align 4, !dbg !308, !tbaa !69
  %36 = add nsw i32 %35, -1, !dbg !309
  %37 = sext i32 %36 to i64, !dbg !310
  %38 = getelementptr inbounds [2 x [16 x %struct.see_data]]* @see_attackers, i64 0, i64 %33, i64 %37, i32 0, !dbg !311
  %39 = load i32* %38, align 8, !dbg !311, !tbaa !92
  %40 = sext i32 %39 to i64, !dbg !312
  %41 = getelementptr inbounds [14 x i32]* @material, i64 0, i64 %40, !dbg !312
  %42 = load i32* %41, align 4, !dbg !312, !tbaa !69
  %ispos1 = icmp sgt i32 %42, -1, !dbg !313
  %neg2 = sub i32 0, %42, !dbg !313
  %43 = select i1 %ispos1, i32 %42, i32 %neg2, !dbg !313
  %44 = getelementptr inbounds [2 x i32]* @see_num_attackers, i64 0, i64 %33
  %45 = load i32* %44, align 4
  br i1 %31, label %46, label %51, !dbg !314

; <label>:46                                      ; preds = %28
  %47 = add nsw i32 %43, %value.06, !dbg !315
  tail call void @llvm.dbg.value(metadata i32 %47, i64 0, metadata !42, metadata !66), !dbg !285
  %48 = icmp sle i32 %45, %35, !dbg !316
  %49 = icmp sgt i32 %47, %ourbestvalue.07, !dbg !318
  %or.cond = and i1 %49, %48, !dbg !319
  tail call void @llvm.dbg.value(metadata i32 %47, i64 0, metadata !44, metadata !66), !dbg !294
  %ourbestvalue.1 = select i1 %or.cond, i32 %47, i32 %ourbestvalue.07, !dbg !319
  %50 = icmp slt i32 %47, %hisbestvalue.08, !dbg !320
  tail call void @llvm.dbg.value(metadata i32 %47, i64 0, metadata !45, metadata !66), !dbg !293
  %.hisbestvalue.0 = select i1 %50, i32 %47, i32 %hisbestvalue.08, !dbg !322
  br label %56, !dbg !322

; <label>:51                                      ; preds = %28
  %52 = sub nsw i32 %value.06, %43, !dbg !323
  tail call void @llvm.dbg.value(metadata i32 %52, i64 0, metadata !42, metadata !66), !dbg !285
  %53 = icmp sgt i32 %52, %ourbestvalue.07, !dbg !325
  tail call void @llvm.dbg.value(metadata i32 %52, i64 0, metadata !44, metadata !66), !dbg !294
  %.ourbestvalue.0 = select i1 %53, i32 %52, i32 %ourbestvalue.07, !dbg !327
  %54 = icmp sle i32 %45, %35, !dbg !328
  %55 = icmp slt i32 %52, %hisbestvalue.08, !dbg !330
  %or.cond3 = and i1 %55, %54, !dbg !331
  tail call void @llvm.dbg.value(metadata i32 %52, i64 0, metadata !45, metadata !66), !dbg !293
  %.hisbestvalue.04 = select i1 %or.cond3, i32 %52, i32 %hisbestvalue.08, !dbg !331
  br label %56, !dbg !331

; <label>:56                                      ; preds = %51, %46
  %value.1 = phi i32 [ %47, %46 ], [ %52, %51 ]
  %ourbestvalue.3 = phi i32 [ %ourbestvalue.1, %46 ], [ %.ourbestvalue.0, %51 ]
  %hisbestvalue.1 = phi i32 [ %.hisbestvalue.0, %46 ], [ %.hisbestvalue.04, %51 ]
  %57 = load i32* %30, align 4, !dbg !332, !tbaa !69
  %58 = add nsw i32 %57, 1, !dbg !332
  store i32 %58, i32* %30, align 4, !dbg !332, !tbaa !69
  %59 = xor i32 %sside.05, 1, !dbg !333
  tail call void @llvm.dbg.value(metadata i32 %59, i64 0, metadata !37, metadata !66), !dbg !299
  %60 = sext i32 %59 to i64, !dbg !334
  %61 = getelementptr inbounds [2 x i32]* %caps, i64 0, i64 %60, !dbg !334
  %62 = load i32* %61, align 4, !dbg !334, !tbaa !69
  %63 = getelementptr inbounds [2 x i32]* @see_num_attackers, i64 0, i64 %60, !dbg !335
  %64 = load i32* %63, align 4, !dbg !335, !tbaa !69
  %65 = icmp slt i32 %62, %64, !dbg !300
  br i1 %65, label %28, label %._crit_edge, !dbg !301

._crit_edge:                                      ; preds = %56, %23
  %hisbestvalue.0.lcssa = phi i32 [ %16, %23 ], [ %hisbestvalue.1, %56 ]
  %ourbestvalue.0.lcssa = phi i32 [ -1000000, %23 ], [ %ourbestvalue.3, %56 ]
  store i32 %3, i32* %2, align 4, !dbg !336, !tbaa !69
  %66 = icmp sgt i32 %ourbestvalue.0.lcssa, %hisbestvalue.0.lcssa, !dbg !337
  %67 = select i1 %66, i32 %hisbestvalue.0.lcssa, i32 %ourbestvalue.0.lcssa, !dbg !338
  br label %68, !dbg !339

; <label>:68                                      ; preds = %._crit_edge, %22
  %.0 = phi i32 [ %67, %._crit_edge ], [ %16, %22 ]
  ret i32 %.0, !dbg !340
}
