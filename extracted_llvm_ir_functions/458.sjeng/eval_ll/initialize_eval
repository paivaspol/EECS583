define void @initialize_eval() #0 {
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !8, metadata !88), !dbg !89
  br label %.preheader40, !dbg !90

.preheader40:                                     ; preds = %23, %0
  %indvars.iv51 = phi i64 [ 0, %0 ], [ %indvars.iv.next52, %23 ]
  %1 = trunc i64 %indvars.iv51 to i32, !dbg !92
  %2 = and i32 %1, 7, !dbg !92
  %3 = ashr i32 %1, 3, !dbg !98
  %4 = getelementptr inbounds [64 x i32]* @upscale, i64 0, i64 %indvars.iv51, !dbg !99
  %5 = load i32* %4, align 4, !dbg !99, !tbaa !100
  %6 = sext i32 %5 to i64, !dbg !104
  br label %7, !dbg !105

; <label>:7                                       ; preds = %7, %.preheader40
  %indvars.iv48 = phi i64 [ 0, %.preheader40 ], [ %indvars.iv.next49, %7 ]
  %8 = trunc i64 %indvars.iv48 to i32, !dbg !106
  %9 = and i32 %8, 7, !dbg !106
  %10 = sub nsw i32 %2, %9, !dbg !107
  %ispos33 = icmp sgt i32 %10, -1, !dbg !108
  %neg34 = sub nsw i32 0, %10, !dbg !108
  %11 = select i1 %ispos33, i32 %10, i32 %neg34, !dbg !108
  tail call void @llvm.dbg.value(metadata i32 %11, i64 0, metadata !11, metadata !88), !dbg !109
  %12 = ashr i32 %8, 3, !dbg !110
  %13 = sub nsw i32 %3, %12, !dbg !111
  %ispos35 = icmp sgt i32 %13, -1, !dbg !112
  %neg36 = sub nsw i32 0, %13, !dbg !112
  %14 = select i1 %ispos35, i32 %13, i32 %neg36, !dbg !112
  tail call void @llvm.dbg.value(metadata i32 %14, i64 0, metadata !12, metadata !88), !dbg !113
  %15 = add nsw i32 %11, %14, !dbg !114
  %16 = getelementptr inbounds [64 x i32]* @upscale, i64 0, i64 %indvars.iv48, !dbg !115
  %17 = load i32* %16, align 4, !dbg !115, !tbaa !100
  %18 = sext i32 %17 to i64, !dbg !104
  %19 = getelementptr inbounds [144 x [144 x i32]]* @rookdistance, i64 0, i64 %6, i64 %18, !dbg !104
  store i32 %15, i32* %19, align 4, !dbg !116, !tbaa !100
  %20 = icmp sgt i32 %11, %14, !dbg !117
  %21 = select i1 %20, i32 %11, i32 %14, !dbg !118
  %22 = getelementptr inbounds [144 x [144 x i32]]* @distance, i64 0, i64 %6, i64 %18, !dbg !119
  store i32 %21, i32* %22, align 4, !dbg !120, !tbaa !100
  %indvars.iv.next49 = add nuw nsw i64 %indvars.iv48, 1, !dbg !105
  %exitcond50 = icmp eq i64 %indvars.iv.next49, 64, !dbg !105
  br i1 %exitcond50, label %23, label %7, !dbg !105

; <label>:23                                      ; preds = %7
  %indvars.iv.next52 = add nuw nsw i64 %indvars.iv51, 1, !dbg !90
  %exitcond53 = icmp eq i64 %indvars.iv.next52, 64, !dbg !90
  br i1 %exitcond53, label %.preheader, label %.preheader40, !dbg !90

.preheader:                                       ; preds = %23, %60
  %indvars.iv45 = phi i64 [ %indvars.iv.next46, %60 ], [ 0, %23 ]
  %24 = getelementptr inbounds [144 x i32]* @Xrank, i64 0, i64 %indvars.iv45, !dbg !121
  %25 = load i32* %24, align 4, !dbg !121, !tbaa !100
  %26 = getelementptr inbounds [144 x i32]* @Xfile, i64 0, i64 %indvars.iv45, !dbg !121
  %27 = load i32* %26, align 4, !dbg !121, !tbaa !100
  br label %28, !dbg !128

; <label>:28                                      ; preds = %28, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %28 ]
  %29 = getelementptr inbounds [144 x i32]* @Xrank, i64 0, i64 %indvars.iv, !dbg !121
  %30 = load i32* %29, align 4, !dbg !121, !tbaa !100
  %31 = sub nsw i32 %25, %30, !dbg !121
  %ispos = icmp sgt i32 %31, -1, !dbg !121
  %neg = sub i32 0, %31, !dbg !121
  %32 = select i1 %ispos, i32 %31, i32 %neg, !dbg !121
  %33 = getelementptr inbounds [144 x i32]* @Xfile, i64 0, i64 %indvars.iv, !dbg !121
  %34 = load i32* %33, align 4, !dbg !121, !tbaa !100
  %35 = sub nsw i32 %27, %34, !dbg !121
  %ispos5 = icmp sgt i32 %35, -1, !dbg !121
  %neg6 = sub i32 0, %35, !dbg !121
  %36 = select i1 %ispos5, i32 %35, i32 %neg6, !dbg !121
  %37 = icmp sgt i32 %32, %36, !dbg !121
  %. = select i1 %37, i32 %31, i32 %35, !dbg !121
  %ispos7 = icmp sgt i32 %., -1, !dbg !121
  %neg8 = sub i32 0, %., !dbg !121
  %38 = select i1 %ispos7, i32 %., i32 %neg8, !dbg !121
  %39 = sext i32 %38 to i64, !dbg !129
  %40 = getelementptr inbounds [9 x i32]* @pre_p_tropism, i64 0, i64 %39, !dbg !129
  %41 = load i32* %40, align 4, !dbg !129, !tbaa !100
  %42 = trunc i32 %41 to i8, !dbg !129
  %43 = getelementptr inbounds [144 x [144 x i8]]* @p_tropism, i64 0, i64 %indvars.iv45, i64 %indvars.iv, !dbg !130
  store i8 %42, i8* %43, align 1, !dbg !131, !tbaa !132
  %44 = getelementptr inbounds [9 x i32]* @pre_b_tropism, i64 0, i64 %39, !dbg !133
  %45 = load i32* %44, align 4, !dbg !133, !tbaa !100
  %46 = trunc i32 %45 to i8, !dbg !133
  %47 = getelementptr inbounds [144 x [144 x i8]]* @b_tropism, i64 0, i64 %indvars.iv45, i64 %indvars.iv, !dbg !134
  store i8 %46, i8* %47, align 1, !dbg !135, !tbaa !132
  %48 = getelementptr inbounds [9 x i32]* @pre_n_tropism, i64 0, i64 %39, !dbg !136
  %49 = load i32* %48, align 4, !dbg !136, !tbaa !100
  %50 = trunc i32 %49 to i8, !dbg !136
  %51 = getelementptr inbounds [144 x [144 x i8]]* @n_tropism, i64 0, i64 %indvars.iv45, i64 %indvars.iv, !dbg !137
  store i8 %50, i8* %51, align 1, !dbg !138, !tbaa !132
  %52 = getelementptr inbounds [9 x i32]* @pre_r_tropism, i64 0, i64 %39, !dbg !139
  %53 = load i32* %52, align 4, !dbg !139, !tbaa !100
  %54 = trunc i32 %53 to i8, !dbg !139
  %55 = getelementptr inbounds [144 x [144 x i8]]* @r_tropism, i64 0, i64 %indvars.iv45, i64 %indvars.iv, !dbg !140
  store i8 %54, i8* %55, align 1, !dbg !141, !tbaa !132
  %56 = getelementptr inbounds [9 x i32]* @pre_q_tropism, i64 0, i64 %39, !dbg !142
  %57 = load i32* %56, align 4, !dbg !142, !tbaa !100
  %58 = trunc i32 %57 to i8, !dbg !142
  %59 = getelementptr inbounds [144 x [144 x i8]]* @q_tropism, i64 0, i64 %indvars.iv45, i64 %indvars.iv, !dbg !143
  store i8 %58, i8* %59, align 1, !dbg !144, !tbaa !132
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !128
  %exitcond = icmp eq i64 %indvars.iv.next, 144, !dbg !128
  br i1 %exitcond, label %60, label %28, !dbg !128

; <label>:60                                      ; preds = %28
  %indvars.iv.next46 = add nuw nsw i64 %indvars.iv45, 1, !dbg !145
  %exitcond47 = icmp eq i64 %indvars.iv.next46, 144, !dbg !145
  br i1 %exitcond47, label %61, label %.preheader, !dbg !145

; <label>:61                                      ; preds = %60
  ret void, !dbg !146
}
