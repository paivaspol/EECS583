define void @check_grid(%struct.__sFILE* nocapture readnone %log, %struct.t_grid* nocapture readonly %grid) #4 {
  tail call void @llvm.dbg.value(metadata %struct.__sFILE* %log, i64 0, metadata !358, metadata !442), !dbg !1106
  tail call void @llvm.dbg.value(metadata %struct.t_grid* %grid, i64 0, metadata !359, metadata !442), !dbg !1107
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !363, metadata !442), !dbg !1108
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !364, metadata !442), !dbg !1109
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !360, metadata !442), !dbg !1110
  %1 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 1, !dbg !1111
  %2 = load i32* %1, align 4, !dbg !1111, !tbaa !631
  %3 = icmp sgt i32 %2, 0, !dbg !1114
  br i1 %3, label %.preheader2.lr.ph, label %._crit_edge18, !dbg !1115

.preheader2.lr.ph:                                ; preds = %0
  %4 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 2, !dbg !1116
  %5 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 3, !dbg !1119
  %6 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 9, !dbg !1122
  %7 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 10, !dbg !1126
  %8 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 4, !dbg !1128
  %.pre = load i32* %4, align 4, !dbg !1116, !tbaa !635
  br label %.preheader2, !dbg !1115

.preheader2:                                      ; preds = %.preheader2.lr.ph, %._crit_edge11
  %9 = phi i32 [ %.pre, %.preheader2.lr.ph ], [ %54, %._crit_edge11 ], !dbg !1116
  %ix.016 = phi i32 [ 0, %.preheader2.lr.ph ], [ %55, %._crit_edge11 ]
  %cci.015 = phi i32 [ 0, %.preheader2.lr.ph ], [ %cci.1.lcssa, %._crit_edge11 ]
  %ci.014 = phi i32 [ 0, %.preheader2.lr.ph ], [ %ci.1.lcssa, %._crit_edge11 ]
  %10 = icmp sgt i32 %9, 0, !dbg !1129
  br i1 %10, label %.preheader.lr.ph, label %._crit_edge11, !dbg !1130

.preheader.lr.ph:                                 ; preds = %.preheader2
  %.pre20 = load i32* %5, align 4, !dbg !1119, !tbaa !639
  br label %.preheader, !dbg !1130

.preheader:                                       ; preds = %.preheader.lr.ph, %49
  %11 = phi i32 [ %9, %.preheader.lr.ph ], [ %50, %49 ]
  %12 = phi i32 [ %.pre20, %.preheader.lr.ph ], [ %51, %49 ], !dbg !1119
  %cci.110 = phi i32 [ %cci.015, %.preheader.lr.ph ], [ %cci.2.lcssa, %49 ]
  %ci.19 = phi i32 [ %ci.014, %.preheader.lr.ph ], [ %ci.2.lcssa, %49 ]
  %iy.07 = phi i32 [ 0, %.preheader.lr.ph ], [ %52, %49 ]
  %13 = icmp sgt i32 %12, 0, !dbg !1131
  br i1 %13, label %.lr.ph, label %49, !dbg !1132

.lr.ph:                                           ; preds = %.preheader
  %14 = sext i32 %ci.19 to i64
  br label %15, !dbg !1132

; <label>:15                                      ; preds = %.lr.ph, %44
  %16 = phi i32 [ %12, %.lr.ph ], [ %46, %44 ]
  %indvars.iv = phi i64 [ %14, %.lr.ph ], [ %indvars.iv.next, %44 ]
  %cci.25 = phi i32 [ %cci.110, %.lr.ph ], [ %35, %44 ]
  %iz.03 = phi i32 [ 0, %.lr.ph ], [ %45, %44 ]
  %17 = icmp sgt i64 %indvars.iv, 0, !dbg !1133
  br i1 %17, label %18, label %31, !dbg !1134

; <label>:18                                      ; preds = %15
  %19 = load i32** %6, align 8, !dbg !1122, !tbaa !660
  %20 = getelementptr inbounds i32* %19, i64 %indvars.iv, !dbg !1135
  %21 = load i32* %20, align 4, !dbg !1135, !tbaa !623
  %22 = sext i32 %cci.25 to i64, !dbg !1136
  %23 = getelementptr inbounds i32* %19, i64 %22, !dbg !1136
  %24 = load i32* %23, align 4, !dbg !1136, !tbaa !623
  %25 = sub nsw i32 %21, %24, !dbg !1137
  tail call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !365, metadata !442), !dbg !1138
  %26 = load i32** %7, align 8, !dbg !1126, !tbaa !662
  %27 = getelementptr inbounds i32* %26, i64 %22, !dbg !1139
  %28 = load i32* %27, align 4, !dbg !1139, !tbaa !623
  %29 = icmp eq i32 %25, %28, !dbg !1140
  br i1 %29, label %31, label %30, !dbg !1141

; <label>:30                                      ; preds = %18
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([29 x i8]* @.str14, i64 0, i64 0), i32 %25, i32 %28, i32 %cci.25) #8, !dbg !1142
  %.pre21 = load i32* %5, align 4, !dbg !1143, !tbaa !639
  br label %31, !dbg !1142

; <label>:31                                      ; preds = %18, %30, %15
  %32 = phi i32 [ %16, %18 ], [ %.pre21, %30 ], [ %16, %15 ]
  %33 = load i32* %4, align 4, !dbg !1143, !tbaa !635
  %34 = mul i32 %33, %ix.016, !dbg !1143
  %tmp = add i32 %34, %iy.07
  %tmp1 = mul i32 %tmp, %32
  %35 = add i32 %tmp1, %iz.03, !dbg !1143
  tail call void @llvm.dbg.value(metadata i32 %35, i64 0, metadata !364, metadata !442), !dbg !1109
  %36 = load i32* %8, align 4, !dbg !1128, !tbaa !644
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !413, metadata !442) #7, !dbg !1144
  %37 = icmp sgt i32 %35, -1, !dbg !1146
  %38 = icmp slt i32 %35, %36, !dbg !1147
  %or.cond.i = and i1 %37, %38, !dbg !1148
  br i1 %or.cond.i, label %_range_check.exit, label %39, !dbg !1148

; <label>:39                                      ; preds = %31
  %40 = add nsw i32 %36, -1, !dbg !1149
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([48 x i8]* @.str30, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str15, i64 0, i64 0), i32 %35, i32 %40, i8* getelementptr inbounds ([66 x i8]* @.str1, i64 0, i64 0), i32 340) #8, !dbg !1150
  br label %_range_check.exit, !dbg !1150

_range_check.exit:                                ; preds = %31, %39
  %41 = trunc i64 %indvars.iv to i32, !dbg !1151
  %42 = icmp eq i32 %35, %41, !dbg !1151
  br i1 %42, label %44, label %43, !dbg !1153

; <label>:43                                      ; preds = %_range_check.exit
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([18 x i8]* @.str16, i64 0, i64 0), i32 %41, i32 %35) #8, !dbg !1154
  br label %44, !dbg !1154

; <label>:44                                      ; preds = %_range_check.exit, %43
  %45 = add nuw nsw i32 %iz.03, 1, !dbg !1155
  tail call void @llvm.dbg.value(metadata i32 %45, i64 0, metadata !362, metadata !442), !dbg !1156
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1132
  %46 = load i32* %5, align 4, !dbg !1119, !tbaa !639
  %47 = icmp slt i32 %45, %46, !dbg !1131
  br i1 %47, label %15, label %._crit_edge, !dbg !1132

._crit_edge:                                      ; preds = %44
  %48 = trunc i64 %indvars.iv.next to i32, !dbg !1132
  %.pre22 = load i32* %4, align 4, !dbg !1116, !tbaa !635
  br label %49, !dbg !1132

; <label>:49                                      ; preds = %._crit_edge, %.preheader
  %50 = phi i32 [ %.pre22, %._crit_edge ], [ %11, %.preheader ], !dbg !1157
  %51 = phi i32 [ %46, %._crit_edge ], [ %12, %.preheader ]
  %cci.2.lcssa = phi i32 [ %35, %._crit_edge ], [ %cci.110, %.preheader ]
  %ci.2.lcssa = phi i32 [ %48, %._crit_edge ], [ %ci.19, %.preheader ]
  %52 = add nuw nsw i32 %iy.07, 1, !dbg !1157
  tail call void @llvm.dbg.value(metadata i32 %52, i64 0, metadata !361, metadata !442), !dbg !1158
  %53 = icmp slt i32 %52, %50, !dbg !1129
  br i1 %53, label %.preheader, label %._crit_edge11, !dbg !1130

._crit_edge11:                                    ; preds = %49, %.preheader2
  %54 = phi i32 [ %9, %.preheader2 ], [ %50, %49 ]
  %cci.1.lcssa = phi i32 [ %cci.015, %.preheader2 ], [ %cci.2.lcssa, %49 ]
  %ci.1.lcssa = phi i32 [ %ci.014, %.preheader2 ], [ %ci.2.lcssa, %49 ]
  %55 = add nuw nsw i32 %ix.016, 1, !dbg !1159
  tail call void @llvm.dbg.value(metadata i32 %55, i64 0, metadata !360, metadata !442), !dbg !1110
  %56 = load i32* %1, align 4, !dbg !1111, !tbaa !631
  %57 = icmp slt i32 %55, %56, !dbg !1114
  br i1 %57, label %.preheader2, label %._crit_edge18, !dbg !1115

._crit_edge18:                                    ; preds = %._crit_edge11, %0
  ret void, !dbg !1160
}
