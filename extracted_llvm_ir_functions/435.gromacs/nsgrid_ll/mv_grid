define void @mv_grid(%struct.t_commrec* nocapture %cr, i32 %bDD, i32* nocapture %cg_index, %struct.t_grid* nocapture %grid, i32* nocapture %cgload) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.t_commrec* %cr}, i64 0, metadata !263), !dbg !585
  tail call void @llvm.dbg.value(metadata !{i32 %bDD}, i64 0, metadata !264), !dbg !585
  tail call void @llvm.dbg.value(metadata !{i32* %cg_index}, i64 0, metadata !265), !dbg !585
  tail call void @llvm.dbg.value(metadata !{%struct.t_grid* %grid}, i64 0, metadata !266), !dbg !586
  tail call void @llvm.dbg.value(metadata !{i32* %cgload}, i64 0, metadata !267), !dbg !586
  tail call void @llvm.dbg.value(metadata !{i32 %2}, i64 0, metadata !271), !dbg !587
  %cell_index = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 8, !dbg !588
  %0 = load i32** %cell_index, align 8, !dbg !588, !tbaa !325
  tail call void @llvm.dbg.value(metadata !{i32* %0}, i64 0, metadata !272), !dbg !588
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !268), !dbg !589
  %nnodes = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 1, !dbg !589
  %1 = load i32* %nnodes, align 4, !dbg !589, !tbaa !315
  %sub62 = add nsw i32 %1, -1, !dbg !589
  %cmp63 = icmp sgt i32 %sub62, 0, !dbg !589
  br i1 %cmp63, label %for.body.lr.ph, label %for.end, !dbg !589

for.body.lr.ph:                                   ; preds = %entry
  %nodeid = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 0, !dbg !587
  %2 = load i32* %nodeid, align 4, !dbg !587, !tbaa !315
  %left = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 2, !dbg !591
  %right = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 3, !dbg !593
  br label %for.body, !dbg !589

for.body:                                         ; preds = %for.body.lr.ph, %cond.end20
  %i.065 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %cond.end20 ]
  %cur.064 = phi i32 [ %2, %for.body.lr.ph ], [ %rem37, %cond.end20 ]
  %cmp1 = icmp eq i32 %cur.064, 0, !dbg !594
  br i1 %cmp1, label %cond.end, label %cond.false, !dbg !594

cond.false:                                       ; preds = %for.body
  %sub2 = add nsw i32 %cur.064, -1, !dbg !594
  %idxprom = sext i32 %sub2 to i64, !dbg !594
  %arrayidx = getelementptr inbounds i32* %cgload, i64 %idxprom, !dbg !594
  %3 = load i32* %arrayidx, align 4, !dbg !594, !tbaa !315
  br label %cond.end, !dbg !594

cond.end:                                         ; preds = %for.body, %cond.false
  %cond = phi i32 [ %3, %cond.false ], [ 0, %for.body ], !dbg !594
  tail call void @llvm.dbg.value(metadata !{i32 %cond}, i64 0, metadata !269), !dbg !594
  %idxprom3 = sext i32 %cur.064 to i64, !dbg !595
  %arrayidx4 = getelementptr inbounds i32* %cgload, i64 %idxprom3, !dbg !595
  %4 = load i32* %arrayidx4, align 4, !dbg !595, !tbaa !315
  %sub5 = sub nsw i32 %4, %cond, !dbg !595
  tail call void @llvm.dbg.value(metadata !{i32 %sub5}, i64 0, metadata !270), !dbg !595
  %5 = load i32* %left, align 4, !dbg !591, !tbaa !315
  %idxprom6 = sext i32 %cond to i64, !dbg !591
  %arrayidx7 = getelementptr inbounds i32* %0, i64 %idxprom6, !dbg !591
  %6 = bitcast i32* %arrayidx7 to i8*, !dbg !591
  %mul = shl i32 %sub5, 2, !dbg !591
  tail call void @gmx_tx(i32 %5, i8* %6, i32 %mul) #6, !dbg !591
  %add = add nsw i32 %cur.064, 1, !dbg !596
  %7 = load i32* %nnodes, align 4, !dbg !596, !tbaa !315
  %rem = srem i32 %add, %7, !dbg !596
  %cmp10 = icmp eq i32 %rem, 0, !dbg !596
  br i1 %cmp10, label %cond.end20, label %cond.false13, !dbg !596

cond.false13:                                     ; preds = %cond.end
  %sub17 = add nsw i32 %rem, -1, !dbg !596
  %idxprom18 = sext i32 %sub17 to i64, !dbg !596
  %arrayidx19 = getelementptr inbounds i32* %cgload, i64 %idxprom18, !dbg !596
  %8 = load i32* %arrayidx19, align 4, !dbg !596, !tbaa !315
  br label %cond.end20, !dbg !596

cond.end20:                                       ; preds = %cond.end, %cond.false13
  %cond21 = phi i32 [ %8, %cond.false13 ], [ 0, %cond.end ], !dbg !596
  tail call void @llvm.dbg.value(metadata !{i32 %cond21}, i64 0, metadata !269), !dbg !596
  %idxprom25 = sext i32 %rem to i64, !dbg !597
  %arrayidx26 = getelementptr inbounds i32* %cgload, i64 %idxprom25, !dbg !597
  %9 = load i32* %arrayidx26, align 4, !dbg !597, !tbaa !315
  %sub27 = sub nsw i32 %9, %cond21, !dbg !597
  tail call void @llvm.dbg.value(metadata !{i32 %sub27}, i64 0, metadata !270), !dbg !597
  %10 = load i32* %right, align 4, !dbg !593, !tbaa !315
  %idxprom28 = sext i32 %cond21 to i64, !dbg !593
  %arrayidx29 = getelementptr inbounds i32* %0, i64 %idxprom28, !dbg !593
  %11 = bitcast i32* %arrayidx29 to i8*, !dbg !593
  %mul31 = shl i32 %sub27, 2, !dbg !593
  tail call void @gmx_rx(i32 %10, i8* %11, i32 %mul31) #6, !dbg !593
  %12 = load i32* %left, align 4, !dbg !598, !tbaa !315
  tail call void @gmx_tx_wait(i32 %12) #6, !dbg !598
  %13 = load i32* %right, align 4, !dbg !599, !tbaa !315
  tail call void @gmx_rx_wait(i32 %13) #6, !dbg !599
  %14 = load i32* %nnodes, align 4, !dbg !600, !tbaa !315
  %rem37 = srem i32 %add, %14, !dbg !600
  tail call void @llvm.dbg.value(metadata !{i32 %rem37}, i64 0, metadata !271), !dbg !600
  %inc = add nsw i32 %i.065, 1, !dbg !589
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !268), !dbg !589
  %sub = add nsw i32 %14, -1, !dbg !589
  %cmp = icmp slt i32 %inc, %sub, !dbg !589
  br i1 %cmp, label %for.body, label %for.end, !dbg !589

for.end:                                          ; preds = %cond.end20, %entry
  ret void, !dbg !601
}
