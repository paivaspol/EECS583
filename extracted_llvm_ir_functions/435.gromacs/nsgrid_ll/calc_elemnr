define void @calc_elemnr(%struct.__sFILE* %log, i32 %bDD, i32* nocapture readnone %cg_index, %struct.t_grid* nocapture readonly %grid, i32 %cg0, i32 %cg1, i32 %ncg) #4 {
  %CG0 = alloca [2 x i32], align 4
  %CG1 = alloca [2 x i32], align 4
  %1 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 8
  %2 = load i32** %1, align 8, !tbaa !28
  %3 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 10
  %4 = load i32** %3, align 8, !tbaa !31
  %5 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 4
  %6 = load i32* %5, align 4, !tbaa !24
  %7 = getelementptr inbounds [2 x i32]* %CG0, i64 0, i64 0
  %8 = getelementptr inbounds [2 x i32]* %CG1, i64 0, i64 0
  call fastcc void @calc_bor(%struct.__sFILE* %log, i32 %bDD, i32 %cg0, i32 %cg1, i32 %ncg, i32* %7, i32* %8) #10
  %9 = add nsw i32 %6, -1
  br label %10

; <label>:10                                      ; preds = %._crit_edge, %0
  %indvars.iv3 = phi i64 [ 0, %0 ], [ %indvars.iv.next4, %._crit_edge ]
  %11 = getelementptr inbounds [2 x i32]* %CG0, i64 0, i64 %indvars.iv3
  %12 = load i32* %11, align 4, !tbaa !18
  %13 = getelementptr inbounds [2 x i32]* %CG1, i64 0, i64 %indvars.iv3
  %14 = load i32* %13, align 4, !tbaa !18
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %10
  %16 = sext i32 %12 to i64
  %17 = sext i32 %14 to i64
  br label %18

; <label>:18                                      ; preds = %.lr.ph, %_range_check.exit
  %indvars.iv = phi i64 [ %16, %.lr.ph ], [ %indvars.iv.next, %_range_check.exit ]
  %19 = getelementptr inbounds i32* %2, i64 %indvars.iv
  %20 = load i32* %19, align 4, !tbaa !18
  %21 = icmp sgt i32 %20, -1
  %22 = icmp slt i32 %20, %6
  %or.cond.i = and i1 %21, %22
  br i1 %or.cond.i, label %_range_check.exit, label %23

; <label>:23                                      ; preds = %18
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([48 x i8]* @.str30, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str11, i64 0, i64 0), i32 %20, i32 %9, i8* getelementptr inbounds ([66 x i8]* @.str1, i64 0, i64 0), i32 217) #8
  br label %_range_check.exit

_range_check.exit:                                ; preds = %18, %23
  %24 = sext i32 %20 to i64
  %25 = getelementptr inbounds i32* %4, i64 %24
  %26 = load i32* %25, align 4, !tbaa !18
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %25, align 4, !tbaa !18
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %28 = icmp slt i64 %indvars.iv.next, %17
  br i1 %28, label %18, label %._crit_edge

._crit_edge:                                      ; preds = %_range_check.exit, %10
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1
  %exitcond = icmp eq i64 %indvars.iv.next4, 2
  br i1 %exitcond, label %29, label %10

; <label>:29                                      ; preds = %._crit_edge
  ret void
}
