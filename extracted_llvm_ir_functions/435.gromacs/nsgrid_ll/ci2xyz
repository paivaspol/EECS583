define void @ci2xyz(%struct.t_grid* nocapture readonly %grid, i32 %i, i32* nocapture %x, i32* nocapture %y, i32* nocapture %z) #4 {
  %1 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !19
  %3 = icmp sgt i32 %i, -1
  %4 = icmp sgt i32 %2, %i
  %or.cond.i = and i1 %3, %4
  br i1 %or.cond.i, label %_range_check.exit, label %5

; <label>:5                                       ; preds = %0
  %6 = add nsw i32 %2, -1
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([48 x i8]* @.str30, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str8, i64 0, i64 0), i32 %i, i32 %6, i8* getelementptr inbounds ([66 x i8]* @.str1, i64 0, i64 0), i32 117) #8
  br label %_range_check.exit

_range_check.exit:                                ; preds = %0, %5
  %7 = sext i32 %i to i64
  %8 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 8
  %9 = load i32** %8, align 8, !tbaa !28
  %10 = getelementptr inbounds i32* %9, i64 %7
  %11 = load i32* %10, align 4, !tbaa !18
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %_range_check.exit
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([30 x i8]* @.str9, i64 0, i64 0), i32 %i) #8
  br label %14

; <label>:14                                      ; preds = %13, %_range_check.exit
  %15 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 2
  %16 = load i32* %15, align 4, !tbaa !22
  %17 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 3
  %18 = load i32* %17, align 4, !tbaa !23
  %19 = mul nsw i32 %18, %16
  %20 = sdiv i32 %11, %19
  store i32 %20, i32* %x, align 4, !tbaa !18
  %21 = load i32* %15, align 4, !tbaa !22
  %22 = mul nsw i32 %21, %20
  %23 = load i32* %17, align 4, !tbaa !23
  %24 = mul nsw i32 %22, %23
  %25 = sub nsw i32 %11, %24
  %26 = sdiv i32 %25, %23
  store i32 %26, i32* %y, align 4, !tbaa !18
  %27 = load i32* %17, align 4, !tbaa !23
  %28 = mul nsw i32 %27, %26
  %29 = sub nsw i32 %25, %28
  store i32 %29, i32* %z, align 4, !tbaa !18
  ret void
}
