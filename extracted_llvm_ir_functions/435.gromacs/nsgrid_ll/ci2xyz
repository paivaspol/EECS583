define void @ci2xyz(%struct.t_grid* nocapture %grid, i32 %i, i32* nocapture %x, i32* nocapture %y, i32* nocapture %z) #0 {
entry:
  %nr = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 0
  %0 = load i32* %nr, align 4, !tbaa !3
  tail call fastcc void @_range_check(i8* getelementptr inbounds ([2 x i8]* @.str8, i64 0, i64 0), i32 %i, i32 %0, i32 117) #6
  %idxprom = sext i32 %i to i64
  %cell_index = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 8
  %1 = load i32** %cell_index, align 8, !tbaa !4
  %arrayidx = getelementptr inbounds i32* %1, i64 %idxprom
  %2 = load i32* %arrayidx, align 4, !tbaa !3
  %cmp = icmp eq i32 %2, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([30 x i8]* @.str9, i64 0, i64 0), i32 %i) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %nry = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 2
  %3 = load i32* %nry, align 4, !tbaa !3
  %nrz = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 3
  %4 = load i32* %nrz, align 4, !tbaa !3
  %mul = mul nsw i32 %4, %3
  %div = sdiv i32 %2, %mul
  store i32 %div, i32* %x, align 4, !tbaa !3
  %5 = load i32* %nry, align 4, !tbaa !3
  %mul2 = mul nsw i32 %5, %div
  %6 = load i32* %nrz, align 4, !tbaa !3
  %mul4 = mul nsw i32 %mul2, %6
  %sub = sub nsw i32 %2, %mul4
  %div6 = sdiv i32 %sub, %6
  store i32 %div6, i32* %y, align 4, !tbaa !3
  %7 = load i32* %nrz, align 4, !tbaa !3
  %mul8 = mul nsw i32 %7, %div6
  %sub9 = sub nsw i32 %sub, %mul8
  store i32 %sub9, i32* %z, align 4, !tbaa !3
  ret void
}
