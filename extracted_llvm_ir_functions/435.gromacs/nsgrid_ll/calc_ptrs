define void @calc_ptrs(%struct.t_grid* nocapture %grid) #0 {
entry:
  %index1 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 9
  %0 = load i32** %index1, align 8, !tbaa !4
  %nra2 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 10
  %1 = load i32** %nra2, align 8, !tbaa !4
  %ncells3 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 4
  %2 = load i32* %ncells3, align 4, !tbaa !3
  %nrx = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 1
  %3 = load i32* %nrx, align 4, !tbaa !3
  %cmp57 = icmp sgt i32 %3, 0
  br i1 %cmp57, label %for.cond4.preheader.lr.ph, label %for.end21

for.cond4.preheader.lr.ph:                        ; preds = %entry
  %nry = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 2
  %nrz = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 3
  %.pre = load i32* %nry, align 4, !tbaa !3
  br label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %for.cond4.preheader.lr.ph, %for.inc19
  %4 = phi i32 [ %3, %for.cond4.preheader.lr.ph ], [ %14, %for.inc19 ]
  %5 = phi i32 [ %.pre, %for.cond4.preheader.lr.ph ], [ %15, %for.inc19 ]
  %gmax.061 = phi i32 [ 0, %for.cond4.preheader.lr.ph ], [ %gmax.1.lcssa, %for.inc19 ]
  %ix.060 = phi i32 [ 0, %for.cond4.preheader.lr.ph ], [ %inc20, %for.inc19 ]
  %nr.059 = phi i32 [ 0, %for.cond4.preheader.lr.ph ], [ %nr.1.lcssa, %for.inc19 ]
  %ci.058 = phi i32 [ 0, %for.cond4.preheader.lr.ph ], [ %ci.1.lcssa, %for.inc19 ]
  %cmp549 = icmp sgt i32 %5, 0
  br i1 %cmp549, label %for.cond7.preheader.lr.ph, label %for.inc19

for.cond7.preheader.lr.ph:                        ; preds = %for.cond4.preheader
  %.pre64 = load i32* %nrz, align 4, !tbaa !3
  br label %for.cond7.preheader

for.cond7.preheader:                              ; preds = %for.cond7.preheader.lr.ph, %for.inc16
  %6 = phi i32 [ %5, %for.cond7.preheader.lr.ph ], [ %12, %for.inc16 ]
  %7 = phi i32 [ %.pre64, %for.cond7.preheader.lr.ph ], [ %13, %for.inc16 ]
  %gmax.153 = phi i32 [ %gmax.061, %for.cond7.preheader.lr.ph ], [ %gmax.2.lcssa, %for.inc16 ]
  %iy.052 = phi i32 [ 0, %for.cond7.preheader.lr.ph ], [ %inc17, %for.inc16 ]
  %nr.151 = phi i32 [ %nr.059, %for.cond7.preheader.lr.ph ], [ %nr.2.lcssa, %for.inc16 ]
  %ci.150 = phi i32 [ %ci.058, %for.cond7.preheader.lr.ph ], [ %ci.2.lcssa, %for.inc16 ]
  %cmp842 = icmp sgt i32 %7, 0
  br i1 %cmp842, label %for.body9.lr.ph, label %for.inc16

for.body9.lr.ph:                                  ; preds = %for.cond7.preheader
  %8 = sext i32 %ci.150 to i64
  br label %for.body9

for.body9:                                        ; preds = %for.body9.lr.ph, %for.body9
  %indvars.iv = phi i64 [ %8, %for.body9.lr.ph ], [ %indvars.iv.next, %for.body9 ]
  %gmax.246 = phi i32 [ %gmax.153, %for.body9.lr.ph ], [ %cond, %for.body9 ]
  %nr.245 = phi i32 [ %nr.151, %for.body9.lr.ph ], [ %add, %for.body9 ]
  %ci.244 = phi i32 [ %ci.150, %for.body9.lr.ph ], [ %inc15, %for.body9 ]
  %iz.043 = phi i32 [ 0, %for.body9.lr.ph ], [ %inc, %for.body9 ]
  %9 = trunc i64 %indvars.iv to i32
  tail call fastcc void @_range_check(i8* getelementptr inbounds ([3 x i8]* @.str11, i64 0, i64 0), i32 %9, i32 %2, i32 235) #6
  %arrayidx = getelementptr inbounds i32* %0, i64 %indvars.iv
  store i32 %nr.245, i32* %arrayidx, align 4, !tbaa !3
  %arrayidx11 = getelementptr inbounds i32* %1, i64 %indvars.iv
  %10 = load i32* %arrayidx11, align 4, !tbaa !3
  %add = add nsw i32 %10, %nr.245
  %cmp12 = icmp sgt i32 %gmax.246, %10
  %cond = select i1 %cmp12, i32 %gmax.246, i32 %10
  store i32 0, i32* %arrayidx11, align 4, !tbaa !3
  %inc = add nsw i32 %iz.043, 1
  %indvars.iv.next = add i64 %indvars.iv, 1
  %inc15 = add nsw i32 %ci.244, 1
  %11 = load i32* %nrz, align 4, !tbaa !3
  %cmp8 = icmp slt i32 %inc, %11
  br i1 %cmp8, label %for.body9, label %for.cond7.for.inc16_crit_edge

for.cond7.for.inc16_crit_edge:                    ; preds = %for.body9
  %.pre65 = load i32* %nry, align 4, !tbaa !3
  br label %for.inc16

for.inc16:                                        ; preds = %for.cond7.for.inc16_crit_edge, %for.cond7.preheader
  %12 = phi i32 [ %.pre65, %for.cond7.for.inc16_crit_edge ], [ %6, %for.cond7.preheader ]
  %13 = phi i32 [ %11, %for.cond7.for.inc16_crit_edge ], [ %7, %for.cond7.preheader ]
  %gmax.2.lcssa = phi i32 [ %cond, %for.cond7.for.inc16_crit_edge ], [ %gmax.153, %for.cond7.preheader ]
  %nr.2.lcssa = phi i32 [ %add, %for.cond7.for.inc16_crit_edge ], [ %nr.151, %for.cond7.preheader ]
  %ci.2.lcssa = phi i32 [ %inc15, %for.cond7.for.inc16_crit_edge ], [ %ci.150, %for.cond7.preheader ]
  %inc17 = add nsw i32 %iy.052, 1
  %cmp5 = icmp slt i32 %inc17, %12
  br i1 %cmp5, label %for.cond7.preheader, label %for.cond4.for.inc19_crit_edge

for.cond4.for.inc19_crit_edge:                    ; preds = %for.inc16
  %.pre63 = load i32* %nrx, align 4, !tbaa !3
  br label %for.inc19

for.inc19:                                        ; preds = %for.cond4.for.inc19_crit_edge, %for.cond4.preheader
  %14 = phi i32 [ %.pre63, %for.cond4.for.inc19_crit_edge ], [ %4, %for.cond4.preheader ]
  %15 = phi i32 [ %12, %for.cond4.for.inc19_crit_edge ], [ %5, %for.cond4.preheader ]
  %gmax.1.lcssa = phi i32 [ %gmax.2.lcssa, %for.cond4.for.inc19_crit_edge ], [ %gmax.061, %for.cond4.preheader ]
  %nr.1.lcssa = phi i32 [ %nr.2.lcssa, %for.cond4.for.inc19_crit_edge ], [ %nr.059, %for.cond4.preheader ]
  %ci.1.lcssa = phi i32 [ %ci.2.lcssa, %for.cond4.for.inc19_crit_edge ], [ %ci.058, %for.cond4.preheader ]
  %inc20 = add nsw i32 %ix.060, 1
  %cmp = icmp slt i32 %inc20, %14
  br i1 %cmp, label %for.cond4.preheader, label %for.end21

for.end21:                                        ; preds = %for.inc19, %entry
  %gmax.0.lcssa = phi i32 [ 0, %entry ], [ %gmax.1.lcssa, %for.inc19 ]
  %gmax22 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 7
  store i32 %gmax.0.lcssa, i32* %gmax22, align 4, !tbaa !3
  ret void
}
