define void @calc_ptrs(%struct.t_grid* nocapture %grid) #4 {
  %1 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 9
  %2 = load i32** %1, align 8, !tbaa !30
  %3 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 10
  %4 = load i32** %3, align 8, !tbaa !31
  %5 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 4
  %6 = load i32* %5, align 4, !tbaa !24
  %7 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 1
  %8 = load i32* %7, align 4, !tbaa !21
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %.preheader1.lr.ph, label %._crit_edge20

.preheader1.lr.ph:                                ; preds = %0
  %10 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 2
  %11 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 3
  %12 = add nsw i32 %6, -1
  %13 = sext i32 %6 to i64
  %.pre = load i32* %10, align 4, !tbaa !22
  br label %.preheader1

.preheader1:                                      ; preds = %.preheader1.lr.ph, %41
  %14 = phi i32 [ %8, %.preheader1.lr.ph ], [ %42, %41 ]
  %15 = phi i32 [ %.pre, %.preheader1.lr.ph ], [ %43, %41 ]
  %gmax.019 = phi i32 [ 0, %.preheader1.lr.ph ], [ %gmax.1.lcssa, %41 ]
  %ix.018 = phi i32 [ 0, %.preheader1.lr.ph ], [ %44, %41 ]
  %nr.017 = phi i32 [ 0, %.preheader1.lr.ph ], [ %nr.1.lcssa, %41 ]
  %ci.016 = phi i32 [ 0, %.preheader1.lr.ph ], [ %ci.1.lcssa, %41 ]
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %.preheader.lr.ph, label %41

.preheader.lr.ph:                                 ; preds = %.preheader1
  %.pre24 = load i32* %11, align 4, !tbaa !23
  br label %.preheader

.preheader:                                       ; preds = %.preheader.lr.ph, %36
  %17 = phi i32 [ %15, %.preheader.lr.ph ], [ %37, %36 ]
  %18 = phi i32 [ %.pre24, %.preheader.lr.ph ], [ %38, %36 ]
  %gmax.111 = phi i32 [ %gmax.019, %.preheader.lr.ph ], [ %gmax.2.lcssa, %36 ]
  %iy.010 = phi i32 [ 0, %.preheader.lr.ph ], [ %39, %36 ]
  %nr.19 = phi i32 [ %nr.017, %.preheader.lr.ph ], [ %nr.2.lcssa, %36 ]
  %ci.18 = phi i32 [ %ci.016, %.preheader.lr.ph ], [ %ci.2.lcssa, %36 ]
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %.lr.ph, label %36

.lr.ph:                                           ; preds = %.preheader
  %20 = sext i32 %ci.18 to i64
  br label %21

; <label>:21                                      ; preds = %.lr.ph, %_range_check.exit
  %indvars.iv = phi i64 [ %20, %.lr.ph ], [ %indvars.iv.next, %_range_check.exit ]
  %gmax.25 = phi i32 [ %gmax.111, %.lr.ph ], [ %31, %_range_check.exit ]
  %nr.24 = phi i32 [ %nr.19, %.lr.ph ], [ %29, %_range_check.exit ]
  %iz.02 = phi i32 [ 0, %.lr.ph ], [ %32, %_range_check.exit ]
  %22 = icmp sgt i64 %indvars.iv, -1
  %23 = icmp slt i64 %indvars.iv, %13
  %or.cond.i = and i1 %22, %23
  br i1 %or.cond.i, label %_range_check.exit, label %24

; <label>:24                                      ; preds = %21
  %25 = trunc i64 %indvars.iv to i32
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([48 x i8]* @.str30, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str11, i64 0, i64 0), i32 %25, i32 %12, i8* getelementptr inbounds ([66 x i8]* @.str1, i64 0, i64 0), i32 235) #8
  br label %_range_check.exit

_range_check.exit:                                ; preds = %21, %24
  %26 = getelementptr inbounds i32* %2, i64 %indvars.iv
  store i32 %nr.24, i32* %26, align 4, !tbaa !18
  %27 = getelementptr inbounds i32* %4, i64 %indvars.iv
  %28 = load i32* %27, align 4, !tbaa !18
  %29 = add nsw i32 %28, %nr.24
  %30 = icmp sgt i32 %gmax.25, %28
  %31 = select i1 %30, i32 %gmax.25, i32 %28
  store i32 0, i32* %27, align 4, !tbaa !18
  %32 = add nuw nsw i32 %iz.02, 1
  %indvars.iv.next = add i64 %indvars.iv, 1
  %33 = load i32* %11, align 4, !tbaa !23
  %34 = icmp slt i32 %32, %33
  br i1 %34, label %21, label %._crit_edge

._crit_edge:                                      ; preds = %_range_check.exit
  %35 = trunc i64 %indvars.iv.next to i32
  %.pre25 = load i32* %10, align 4, !tbaa !22
  br label %36

; <label>:36                                      ; preds = %._crit_edge, %.preheader
  %37 = phi i32 [ %.pre25, %._crit_edge ], [ %17, %.preheader ]
  %38 = phi i32 [ %33, %._crit_edge ], [ %18, %.preheader ]
  %gmax.2.lcssa = phi i32 [ %31, %._crit_edge ], [ %gmax.111, %.preheader ]
  %nr.2.lcssa = phi i32 [ %29, %._crit_edge ], [ %nr.19, %.preheader ]
  %ci.2.lcssa = phi i32 [ %35, %._crit_edge ], [ %ci.18, %.preheader ]
  %39 = add nuw nsw i32 %iy.010, 1
  %40 = icmp slt i32 %39, %37
  br i1 %40, label %.preheader, label %._crit_edge12

._crit_edge12:                                    ; preds = %36
  %.pre26 = load i32* %7, align 4, !tbaa !21
  br label %41

; <label>:41                                      ; preds = %._crit_edge12, %.preheader1
  %42 = phi i32 [ %.pre26, %._crit_edge12 ], [ %14, %.preheader1 ]
  %43 = phi i32 [ %37, %._crit_edge12 ], [ %15, %.preheader1 ]
  %gmax.1.lcssa = phi i32 [ %gmax.2.lcssa, %._crit_edge12 ], [ %gmax.019, %.preheader1 ]
  %nr.1.lcssa = phi i32 [ %nr.2.lcssa, %._crit_edge12 ], [ %nr.017, %.preheader1 ]
  %ci.1.lcssa = phi i32 [ %ci.2.lcssa, %._crit_edge12 ], [ %ci.016, %.preheader1 ]
  %44 = add nuw nsw i32 %ix.018, 1
  %45 = icmp slt i32 %44, %42
  br i1 %45, label %.preheader1, label %._crit_edge20

._crit_edge20:                                    ; preds = %41, %0
  %gmax.0.lcssa = phi i32 [ 0, %0 ], [ %gmax.1.lcssa, %41 ]
  %46 = getelementptr inbounds %struct.t_grid* %grid, i64 0, i32 7
  store i32 %gmax.0.lcssa, i32* %46, align 4, !tbaa !27
  ret void
}
