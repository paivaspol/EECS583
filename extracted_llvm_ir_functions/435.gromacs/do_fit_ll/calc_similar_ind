define float @calc_similar_ind(i32 %bRho, i32 %nind, i32* readonly %index, float* nocapture readonly %mass, [3 x float]* nocapture readonly %x, [3 x float]* nocapture readonly %xp) #4 {
  %1 = icmp sgt i32 %nind, 0
  br i1 %1, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %0
  %2 = icmp eq i32* %index, null
  %3 = icmp eq i32 %bRho, 0
  %4 = add i32 %nind, -1
  br label %5

; <label>:5                                       ; preds = %29, %.lr.ph
  %indvars.iv11 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next12, %29 ]
  %rd.07 = phi float [ 0.000000e+00, %.lr.ph ], [ %22, %29 ]
  %rs.06 = phi float [ 0.000000e+00, %.lr.ph ], [ %rs.2, %29 ]
  %tm.05 = phi float [ 0.000000e+00, %.lr.ph ], [ %30, %29 ]
  %6 = trunc i64 %indvars.iv11 to i32
  br i1 %2, label %10, label %7

; <label>:7                                       ; preds = %5
  %8 = getelementptr inbounds i32* %index, i64 %indvars.iv11
  %9 = load i32* %8, align 4, !tbaa !18
  br label %10

; <label>:10                                      ; preds = %5, %7
  %i.0 = phi i32 [ %9, %7 ], [ %6, %5 ]
  %11 = sext i32 %i.0 to i64
  %12 = getelementptr inbounds float* %mass, i64 %11
  %13 = load float* %12, align 4, !tbaa !2
  br label %14

; <label>:14                                      ; preds = %28, %10
  %indvars.iv = phi i64 [ 0, %10 ], [ %indvars.iv.next, %28 ]
  %rd.13 = phi float [ %rd.07, %10 ], [ %22, %28 ]
  %rs.12 = phi float [ %rs.06, %10 ], [ %rs.2, %28 ]
  %15 = getelementptr inbounds [3 x float]* %x, i64 %11, i64 %indvars.iv
  %16 = load float* %15, align 4, !tbaa !2
  %17 = getelementptr inbounds [3 x float]* %xp, i64 %11, i64 %indvars.iv
  %18 = load float* %17, align 4, !tbaa !2
  %19 = fsub float %16, %18
  %20 = fmul float %19, %19
  %21 = fmul float %13, %20
  %22 = fadd float %rd.13, %21
  br i1 %3, label %28, label %23

; <label>:23                                      ; preds = %14
  %24 = fadd float %16, %18
  %25 = fmul float %24, %24
  %26 = fmul float %13, %25
  %27 = fadd float %rs.12, %26
  br label %28

; <label>:28                                      ; preds = %14, %23
  %rs.2 = phi float [ %27, %23 ], [ %rs.12, %14 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %29, label %14

; <label>:29                                      ; preds = %28
  %30 = fadd float %tm.05, %13
  %indvars.iv.next12 = add nuw nsw i64 %indvars.iv11, 1
  %exitcond13 = icmp eq i32 %6, %4
  br i1 %exitcond13, label %._crit_edge, label %5

._crit_edge:                                      ; preds = %29, %0
  %rd.0.lcssa = phi float [ 0.000000e+00, %0 ], [ %22, %29 ]
  %rs.0.lcssa = phi float [ 0.000000e+00, %0 ], [ %rs.2, %29 ]
  %tm.0.lcssa = phi float [ 0.000000e+00, %0 ], [ %30, %29 ]
  %31 = icmp eq i32 %bRho, 0
  br i1 %31, label %38, label %32

; <label>:32                                      ; preds = %._crit_edge
  %33 = fdiv float %rd.0.lcssa, %rs.0.lcssa
  %34 = fpext float %33 to double
  %35 = tail call double @sqrt(double %34) #10
  %36 = fmul double %35, 2.000000e+00
  %37 = fptrunc double %36 to float
  br label %40

; <label>:38                                      ; preds = %._crit_edge
  %39 = fdiv float %rd.0.lcssa, %tm.0.lcssa
  %sqrtf = tail call float @sqrtf(float %39) #5
  br label %40

; <label>:40                                      ; preds = %38, %32
  %.0 = phi float [ %37, %32 ], [ %sqrtf, %38 ]
  ret float %.0
}
