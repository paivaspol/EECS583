define float @calc_similar_ind(i32 %bRho, i32 %nind, i32* %index, float* nocapture %mass, [3 x float]* nocapture %x, [3 x float]* nocapture %xp) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %bRho}, i64 0, metadata !20), !dbg !171
  tail call void @llvm.dbg.value(metadata !{i32 %nind}, i64 0, metadata !21), !dbg !171
  tail call void @llvm.dbg.value(metadata !{i32* %index}, i64 0, metadata !22), !dbg !171
  tail call void @llvm.dbg.value(metadata !{float* %mass}, i64 0, metadata !23), !dbg !171
  tail call void @llvm.dbg.value(metadata !{[3 x float]* %x}, i64 0, metadata !24), !dbg !172
  tail call void @llvm.dbg.value(metadata !{[3 x float]* %xp}, i64 0, metadata !25), !dbg !172
  tail call void @llvm.dbg.value(metadata !173, i64 0, metadata !30), !dbg !174
  tail call void @llvm.dbg.value(metadata !173, i64 0, metadata !33), !dbg !175
  tail call void @llvm.dbg.value(metadata !173, i64 0, metadata !34), !dbg !176
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !27), !dbg !177
  %cmp67 = icmp sgt i32 %nind, 0, !dbg !177
  br i1 %cmp67, label %for.body.lr.ph, label %for.end32, !dbg !177

for.body.lr.ph:                                   ; preds = %entry
  %tobool = icmp eq i32* %index, null, !dbg !179
  %tobool15 = icmp eq i32 %bRho, 0, !dbg !181
  br label %for.body, !dbg !177

for.body:                                         ; preds = %for.inc30, %for.body.lr.ph
  %indvars.iv74 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next75, %for.inc30 ]
  %rd.071 = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %add14, %for.inc30 ]
  %rs.070 = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %rs.2, %for.inc30 ]
  %tm.069 = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %add, %for.inc30 ]
  %0 = trunc i64 %indvars.iv74 to i32, !dbg !179
  br i1 %tobool, label %if.end, label %if.then, !dbg !179

if.then:                                          ; preds = %for.body
  %arrayidx = getelementptr inbounds i32* %index, i64 %indvars.iv74, !dbg !184
  %1 = load i32* %arrayidx, align 4, !dbg !184, !tbaa !185
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !26), !dbg !184
  br label %if.end, !dbg !184

if.end:                                           ; preds = %for.body, %if.then
  %i.0 = phi i32 [ %1, %if.then ], [ %0, %for.body ]
  %idxprom1 = sext i32 %i.0 to i64, !dbg !188
  %arrayidx2 = getelementptr inbounds float* %mass, i64 %idxprom1, !dbg !188
  %2 = load float* %arrayidx2, align 4, !dbg !188, !tbaa !189
  tail call void @llvm.dbg.value(metadata !{float %2}, i64 0, metadata !29), !dbg !188
  tail call void @llvm.dbg.value(metadata !{float %add}, i64 0, metadata !30), !dbg !190
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !28), !dbg !191
  br label %for.body5, !dbg !191

for.body5:                                        ; preds = %for.inc, %if.end
  %indvars.iv = phi i64 [ 0, %if.end ], [ %indvars.iv.next, %for.inc ]
  %rd.166 = phi float [ %rd.071, %if.end ], [ %add14, %for.inc ]
  %rs.165 = phi float [ %rs.070, %if.end ], [ %rs.2, %for.inc ]
  %arrayidx9 = getelementptr inbounds [3 x float]* %x, i64 %idxprom1, i64 %indvars.iv, !dbg !192
  %3 = load float* %arrayidx9, align 4, !dbg !192, !tbaa !189
  %arrayidx13 = getelementptr inbounds [3 x float]* %xp, i64 %idxprom1, i64 %indvars.iv, !dbg !192
  %4 = load float* %arrayidx13, align 4, !dbg !192, !tbaa !189
  %sub = fsub float %3, %4, !dbg !192
  tail call void @llvm.dbg.value(metadata !{float %sub}, i64 0, metadata !32), !dbg !192
  tail call void @llvm.dbg.value(metadata !{float %sub}, i64 0, metadata !193), !dbg !195
  %mul.i = fmul float %sub, %sub, !dbg !196
  %mul = fmul float %2, %mul.i, !dbg !194
  %add14 = fadd float %rd.166, %mul, !dbg !194
  tail call void @llvm.dbg.value(metadata !{float %add14}, i64 0, metadata !34), !dbg !194
  br i1 %tobool15, label %for.inc, label %if.then16, !dbg !181

if.then16:                                        ; preds = %for.body5
  %add25 = fadd float %3, %4, !dbg !197
  tail call void @llvm.dbg.value(metadata !{float %add25}, i64 0, metadata !31), !dbg !197
  tail call void @llvm.dbg.value(metadata !{float %add25}, i64 0, metadata !199), !dbg !201
  %mul.i63 = fmul float %add25, %add25, !dbg !202
  %mul27 = fmul float %2, %mul.i63, !dbg !200
  %add28 = fadd float %rs.165, %mul27, !dbg !200
  tail call void @llvm.dbg.value(metadata !{float %add28}, i64 0, metadata !33), !dbg !200
  br label %for.inc, !dbg !203

for.inc:                                          ; preds = %for.body5, %if.then16
  %rs.2 = phi float [ %add28, %if.then16 ], [ %rs.165, %for.body5 ]
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !191
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !191
  %exitcond = icmp eq i32 %lftr.wideiv, 3, !dbg !191
  br i1 %exitcond, label %for.inc30, label %for.body5, !dbg !191

for.inc30:                                        ; preds = %for.inc
  %add = fadd float %tm.069, %2, !dbg !190
  %indvars.iv.next75 = add i64 %indvars.iv74, 1, !dbg !177
  %lftr.wideiv76 = trunc i64 %indvars.iv.next75 to i32, !dbg !177
  %exitcond77 = icmp eq i32 %lftr.wideiv76, %nind, !dbg !177
  br i1 %exitcond77, label %for.end32, label %for.body, !dbg !177

for.end32:                                        ; preds = %for.inc30, %entry
  %rd.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %add14, %for.inc30 ]
  %rs.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %rs.2, %for.inc30 ]
  %tm.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %add, %for.inc30 ]
  %tobool33 = icmp eq i32 %bRho, 0, !dbg !204
  br i1 %tobool33, label %if.else38, label %if.then34, !dbg !204

if.then34:                                        ; preds = %for.end32
  %div = fdiv float %rd.0.lcssa, %rs.0.lcssa, !dbg !205
  %conv = fpext float %div to double, !dbg !205
  %call35 = tail call double @sqrt(double %conv) #5, !dbg !205
  %mul36 = fmul double %call35, 2.000000e+00, !dbg !205
  %conv37 = fptrunc double %mul36 to float, !dbg !205
  br label %return, !dbg !205

if.else38:                                        ; preds = %for.end32
  %div39 = fdiv float %rd.0.lcssa, %tm.0.lcssa, !dbg !206
  %conv42 = tail call float @sqrtf(float %div39) #2, !dbg !206
  br label %return, !dbg !206

return:                                           ; preds = %if.else38, %if.then34
  %retval.0 = phi float [ %conv37, %if.then34 ], [ %conv42, %if.else38 ]
  ret float %retval.0, !dbg !207
}
