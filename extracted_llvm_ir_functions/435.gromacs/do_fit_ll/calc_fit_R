define void @calc_fit_R(i32 %natoms, float* nocapture readonly %w_rls, [3 x float]* nocapture readonly %xp, [3 x float]* nocapture readonly %x, [3 x float]* nocapture %R) #6 {
  %irot = alloca i32, align 4
  %d = alloca [6 x double], align 16
  %1 = bitcast [6 x double]* %d to i8*
  %vh = alloca [3 x [3 x float]], align 16
  %vk = alloca [3 x [3 x float]], align 16
  %u = alloca [3 x [3 x float]], align 16
  tail call void @llvm.dbg.value(metadata i32 %natoms, i64 0, metadata !260, metadata !360), !dbg !613
  tail call void @llvm.dbg.value(metadata float* %w_rls, i64 0, metadata !261, metadata !360), !dbg !614
  tail call void @llvm.dbg.value(metadata [3 x float]* %xp, i64 0, metadata !262, metadata !360), !dbg !615
  tail call void @llvm.dbg.value(metadata [3 x float]* %x, i64 0, metadata !263, metadata !360), !dbg !616
  tail call void @llvm.dbg.value(metadata [3 x float]* %R, i64 0, metadata !264, metadata !360), !dbg !617
  call void @llvm.lifetime.start(i64 48, i8* %1) #7, !dbg !618
  tail call void @llvm.dbg.declare(metadata [6 x double]* %d, metadata !272, metadata !360), !dbg !619
  %2 = bitcast [3 x [3 x float]]* %vh to i8*, !dbg !620
  call void @llvm.lifetime.start(i64 36, i8* %2) #7, !dbg !620
  tail call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %vh, metadata !278, metadata !360), !dbg !621
  %3 = bitcast [3 x [3 x float]]* %vk to i8*, !dbg !620
  call void @llvm.lifetime.start(i64 36, i8* %3) #7, !dbg !620
  tail call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %vk, metadata !282, metadata !360), !dbg !622
  %4 = bitcast [3 x [3 x float]]* %u to i8*, !dbg !620
  call void @llvm.lifetime.start(i64 36, i8* %4) #7, !dbg !620
  tail call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %u, metadata !283, metadata !360), !dbg !623
  %5 = load double*** @calc_fit_R.omega, align 8, !dbg !624, !tbaa !626
  %6 = icmp eq double** %5, null, !dbg !627
  br i1 %6, label %9, label %.preheader9, !dbg !628

.preheader9.loopexit:                             ; preds = %12
  %.pre = load double*** @calc_fit_R.omega, align 8, !dbg !629, !tbaa !626
  br label %.preheader9

.preheader9:                                      ; preds = %.preheader9.loopexit, %0
  %7 = phi double** [ %.pre, %.preheader9.loopexit ], [ %5, %0 ]
  %8 = load double*** @calc_fit_R.om, align 8, !dbg !636, !tbaa !626
  br label %21, !dbg !637

; <label>:9                                       ; preds = %0
  %10 = tail call i8* @save_calloc(i8* getelementptr inbounds ([6 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8]* @.str1, i64 0, i64 0), i32 105, i32 6, i32 8) #9, !dbg !638
  store i8* %10, i8** bitcast (double*** @calc_fit_R.omega to i8**), align 8, !dbg !638, !tbaa !626
  %11 = tail call i8* @save_calloc(i8* getelementptr inbounds ([3 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8]* @.str1, i64 0, i64 0), i32 106, i32 6, i32 8) #9, !dbg !640
  store i8* %11, i8** bitcast (double*** @calc_fit_R.om to i8**), align 8, !dbg !640, !tbaa !626
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !270, metadata !360), !dbg !641
  br label %12, !dbg !642

; <label>:12                                      ; preds = %12, %9
  %indvars.iv64 = phi i64 [ 0, %9 ], [ %indvars.iv.next65, %12 ]
  %13 = tail call i8* @save_calloc(i8* getelementptr inbounds ([9 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8]* @.str1, i64 0, i64 0), i32 108, i32 6, i32 8) #9, !dbg !644
  %14 = load double*** @calc_fit_R.omega, align 8, !dbg !644, !tbaa !626
  %15 = getelementptr inbounds double** %14, i64 %indvars.iv64, !dbg !644
  %16 = bitcast double** %15 to i8**, !dbg !644
  store i8* %13, i8** %16, align 8, !dbg !644, !tbaa !626
  %17 = tail call i8* @save_calloc(i8* getelementptr inbounds ([6 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8]* @.str1, i64 0, i64 0), i32 109, i32 6, i32 8) #9, !dbg !647
  %18 = load double*** @calc_fit_R.om, align 8, !dbg !647, !tbaa !626
  %19 = getelementptr inbounds double** %18, i64 %indvars.iv64, !dbg !647
  %20 = bitcast double** %19 to i8**, !dbg !647
  store i8* %17, i8** %20, align 8, !dbg !647, !tbaa !626
  %indvars.iv.next65 = add nuw nsw i64 %indvars.iv64, 1, !dbg !642
  %exitcond66 = icmp eq i64 %indvars.iv.next65, 6, !dbg !642
  br i1 %exitcond66, label %.preheader9.loopexit, label %12, !dbg !642

; <label>:21                                      ; preds = %30, %.preheader9
  %indvars.iv61 = phi i64 [ 0, %.preheader9 ], [ %indvars.iv.next62, %30 ]
  %22 = getelementptr inbounds [6 x double]* %d, i64 0, i64 %indvars.iv61, !dbg !648
  store double 0.000000e+00, double* %22, align 8, !dbg !649, !tbaa !465
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !268, metadata !360), !dbg !650
  %23 = getelementptr inbounds double** %7, i64 %indvars.iv61, !dbg !629
  %24 = load double** %23, align 8, !dbg !629, !tbaa !626
  %25 = getelementptr inbounds double** %8, i64 %indvars.iv61, !dbg !636
  %26 = load double** %25, align 8, !dbg !636, !tbaa !626
  br label %27, !dbg !651

; <label>:27                                      ; preds = %27, %21
  %indvars.iv58 = phi i64 [ 0, %21 ], [ %indvars.iv.next59, %27 ]
  %28 = getelementptr inbounds double* %24, i64 %indvars.iv58, !dbg !629
  store double 0.000000e+00, double* %28, align 8, !dbg !652, !tbaa !465
  %29 = getelementptr inbounds double* %26, i64 %indvars.iv58, !dbg !636
  store double 0.000000e+00, double* %29, align 8, !dbg !653, !tbaa !465
  %indvars.iv.next59 = add nuw nsw i64 %indvars.iv58, 1, !dbg !651
  %exitcond60 = icmp eq i64 %indvars.iv.next59, 6, !dbg !651
  br i1 %exitcond60, label %30, label %27, !dbg !651

; <label>:30                                      ; preds = %27
  %indvars.iv.next62 = add nuw nsw i64 %indvars.iv61, 1, !dbg !637
  %exitcond63 = icmp eq i64 %indvars.iv.next62, 6, !dbg !637
  br i1 %exitcond63, label %31, label %21, !dbg !637

; <label>:31                                      ; preds = %30
  tail call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !329, metadata !360) #7, !dbg !654
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 36, i32 16, i1 false) #7, !dbg !656
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !267, metadata !360), !dbg !657
  %32 = icmp sgt i32 %natoms, 0, !dbg !658
  br i1 %32, label %.lr.ph24, label %.lr.ph, !dbg !661

.lr.ph24:                                         ; preds = %31
  %33 = add i32 %natoms, -1, !dbg !661
  br label %34, !dbg !661

; <label>:34                                      ; preds = %.loopexit, %.lr.ph24
  %indvars.iv54 = phi i64 [ 0, %.lr.ph24 ], [ %indvars.iv.next55, %.loopexit ]
  %35 = getelementptr inbounds float* %w_rls, i64 %indvars.iv54, !dbg !662
  %36 = load float* %35, align 4, !dbg !662, !tbaa !450
  tail call void @llvm.dbg.value(metadata float %36, i64 0, metadata !284, metadata !360), !dbg !664
  %37 = fpext float %36 to double, !dbg !665
  %fabsf = tail call float @fabsf(float %36) #5, !dbg !666
  %38 = fpext float %fabsf to double, !dbg !666
  %39 = fcmp ogt double %38, 1.200000e-38, !dbg !667
  br i1 %39, label %.preheader8, label %.loopexit, !dbg !668

.preheader8:                                      ; preds = %34, %54
  %indvars.iv51 = phi i64 [ %indvars.iv.next52, %54 ], [ 0, %34 ]
  %40 = getelementptr inbounds [3 x float]* %xp, i64 %indvars.iv54, i64 %indvars.iv51, !dbg !669
  %41 = load float* %40, align 4, !dbg !669, !tbaa !450
  %42 = fpext float %41 to double, !dbg !669
  tail call void @llvm.dbg.value(metadata double %42, i64 0, metadata !277, metadata !360), !dbg !673
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !266, metadata !360), !dbg !674
  br label %43, !dbg !675

; <label>:43                                      ; preds = %43, %.preheader8
  %indvars.iv48 = phi i64 [ 0, %.preheader8 ], [ %indvars.iv.next49, %43 ]
  %44 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv54, i64 %indvars.iv48, !dbg !677
  %45 = load float* %44, align 4, !dbg !677, !tbaa !450
  %46 = fpext float %45 to double, !dbg !677
  tail call void @llvm.dbg.value(metadata double %46, i64 0, metadata !276, metadata !360), !dbg !680
  %47 = fmul double %37, %46, !dbg !681
  %48 = fmul double %42, %47, !dbg !682
  %49 = getelementptr inbounds [3 x [3 x float]]* %u, i64 0, i64 %indvars.iv51, i64 %indvars.iv48, !dbg !683
  %50 = load float* %49, align 4, !dbg !684, !tbaa !450
  %51 = fpext float %50 to double, !dbg !684
  %52 = fadd double %51, %48, !dbg !684
  %53 = fptrunc double %52 to float, !dbg !684
  store float %53, float* %49, align 4, !dbg !684, !tbaa !450
  %indvars.iv.next49 = add nuw nsw i64 %indvars.iv48, 1, !dbg !675
  %exitcond50 = icmp eq i64 %indvars.iv.next49, 3, !dbg !675
  br i1 %exitcond50, label %54, label %43, !dbg !675

; <label>:54                                      ; preds = %43
  %indvars.iv.next52 = add nuw nsw i64 %indvars.iv51, 1, !dbg !685
  %exitcond53 = icmp eq i64 %indvars.iv.next52, 3, !dbg !685
  br i1 %exitcond53, label %.loopexit, label %.preheader8, !dbg !685

.loopexit:                                        ; preds = %54, %34
  %indvars.iv.next55 = add nuw nsw i64 %indvars.iv54, 1, !dbg !661
  %lftr.wideiv56 = trunc i64 %indvars.iv54 to i32, !dbg !661
  %exitcond57 = icmp eq i32 %lftr.wideiv56, %33, !dbg !661
  br i1 %exitcond57, label %.lr.ph, label %34, !dbg !661

.lr.ph:                                           ; preds = %31, %.loopexit, %._crit_edge
  %indvars.iv45 = phi i64 [ %indvars.iv.next46, %._crit_edge ], [ 0, %.loopexit ], [ 0, %31 ]
  %indvars.iv42 = phi i32 [ %indvars.iv.next43, %._crit_edge ], [ 1, %.loopexit ], [ 1, %31 ]
  %55 = icmp sgt i64 %indvars.iv45, 2, !dbg !686
  %56 = add nsw i64 %indvars.iv45, -3, !dbg !692
  %57 = getelementptr inbounds double** %7, i64 %indvars.iv45, !dbg !694
  br label %58, !dbg !695

; <label>:58                                      ; preds = %75, %.lr.ph
  %indvars.iv40 = phi i64 [ %indvars.iv.next41, %75 ], [ 0, %.lr.ph ]
  %59 = icmp slt i64 %indvars.iv40, 3, !dbg !696
  %or.cond = and i1 %55, %59, !dbg !697
  br i1 %or.cond, label %60, label %69, !dbg !697

; <label>:60                                      ; preds = %58
  %61 = getelementptr inbounds [3 x [3 x float]]* %u, i64 0, i64 %56, i64 %indvars.iv40, !dbg !698
  %62 = load float* %61, align 4, !dbg !698, !tbaa !450
  %63 = fpext float %62 to double, !dbg !698
  %64 = load double** %57, align 8, !dbg !694, !tbaa !626
  %65 = getelementptr inbounds double* %64, i64 %indvars.iv40, !dbg !694
  store double %63, double* %65, align 8, !dbg !699, !tbaa !465
  %66 = getelementptr inbounds double** %7, i64 %indvars.iv40, !dbg !700
  %67 = load double** %66, align 8, !dbg !700, !tbaa !626
  %68 = getelementptr inbounds double* %67, i64 %indvars.iv45, !dbg !700
  store double %63, double* %68, align 8, !dbg !701, !tbaa !465
  br label %75, !dbg !702

; <label>:69                                      ; preds = %58
  %70 = load double** %57, align 8, !dbg !703, !tbaa !626
  %71 = getelementptr inbounds double* %70, i64 %indvars.iv40, !dbg !703
  store double 0.000000e+00, double* %71, align 8, !dbg !705, !tbaa !465
  %72 = getelementptr inbounds double** %7, i64 %indvars.iv40, !dbg !706
  %73 = load double** %72, align 8, !dbg !706, !tbaa !626
  %74 = getelementptr inbounds double* %73, i64 %indvars.iv45, !dbg !706
  store double 0.000000e+00, double* %74, align 8, !dbg !707, !tbaa !465
  br label %75

; <label>:75                                      ; preds = %60, %69
  %indvars.iv.next41 = add nuw nsw i64 %indvars.iv40, 1, !dbg !695
  %lftr.wideiv = trunc i64 %indvars.iv.next41 to i32, !dbg !695
  %exitcond44 = icmp eq i32 %lftr.wideiv, %indvars.iv42, !dbg !695
  br i1 %exitcond44, label %._crit_edge, label %58, !dbg !695

._crit_edge:                                      ; preds = %75
  %indvars.iv.next46 = add nuw nsw i64 %indvars.iv45, 1, !dbg !708
  %indvars.iv.next43 = add nuw nsw i32 %indvars.iv42, 1, !dbg !708
  %exitcond47 = icmp eq i64 %indvars.iv.next46, 6, !dbg !708
  br i1 %exitcond47, label %76, label %.lr.ph, !dbg !708

; <label>:76                                      ; preds = %._crit_edge
  %77 = getelementptr inbounds [6 x double]* %d, i64 0, i64 0, !dbg !709
  tail call void @llvm.dbg.value(metadata i32* %irot, i64 0, metadata !271, metadata !360), !dbg !710
  call void @jacobi(double** %7, i32 6, double* %77, double** %8, i32* %irot) #9, !dbg !711
  %78 = load %struct.__sFILE** @debug, align 8, !dbg !712, !tbaa !626
  %79 = icmp ne %struct.__sFILE* %78, null, !dbg !712
  call void @llvm.dbg.value(metadata i32* %irot, i64 0, metadata !271, metadata !360), !dbg !710
  %80 = load i32* %irot, align 4
  %81 = icmp eq i32 %80, 0, !dbg !714
  %or.cond3 = and i1 %79, %81, !dbg !715
  br i1 %or.cond3, label %82, label %.preheader5, !dbg !715

; <label>:82                                      ; preds = %76
  %83 = call i64 @fwrite(i8* getelementptr inbounds ([8 x i8]* @.str5, i64 0, i64 0), i64 7, i64 1, %struct.__sFILE* %78), !dbg !716
  br label %.preheader5, !dbg !716

.preheader5:                                      ; preds = %82, %76
  %84 = load double*** @calc_fit_R.om, align 8, !dbg !717, !tbaa !626
  br label %.preheader4, !dbg !724

.preheader4:                                      ; preds = %113, %.preheader5
  %indvars.iv37 = phi i64 [ 0, %.preheader5 ], [ %indvars.iv.next38, %113 ]
  %index.017 = phi i32 [ 0, %.preheader5 ], [ %index.2, %113 ]
  br label %85, !dbg !725

; <label>:85                                      ; preds = %93, %.preheader4
  %indvars.iv31 = phi i64 [ 0, %.preheader4 ], [ %indvars.iv.next32, %93 ]
  %max_d.014 = phi float [ -1.000000e+03, %.preheader4 ], [ %max_d.1, %93 ]
  %index.113 = phi i32 [ %index.017, %.preheader4 ], [ %index.2, %93 ]
  %86 = getelementptr inbounds [6 x double]* %d, i64 0, i64 %indvars.iv31, !dbg !727
  %87 = load double* %86, align 8, !dbg !727, !tbaa !465
  %88 = fpext float %max_d.014 to double, !dbg !730
  %89 = fcmp ogt double %87, %88, !dbg !731
  br i1 %89, label %90, label %93, !dbg !732

; <label>:90                                      ; preds = %85
  %91 = fptrunc double %87 to float, !dbg !733
  call void @llvm.dbg.value(metadata float %91, i64 0, metadata !286, metadata !360), !dbg !735
  %92 = trunc i64 %indvars.iv31 to i32, !dbg !736
  br label %93, !dbg !736

; <label>:93                                      ; preds = %85, %90
  %index.2 = phi i32 [ %92, %90 ], [ %index.113, %85 ]
  %max_d.1 = phi float [ %91, %90 ], [ %max_d.014, %85 ]
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1, !dbg !725
  %exitcond33 = icmp eq i64 %indvars.iv.next32, 6, !dbg !725
  br i1 %exitcond33, label %94, label %85, !dbg !725

; <label>:94                                      ; preds = %93
  %95 = sext i32 %index.2 to i64, !dbg !737
  %96 = getelementptr inbounds [6 x double]* %d, i64 0, i64 %95, !dbg !737
  store double -1.000000e+04, double* %96, align 8, !dbg !738, !tbaa !465
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !270, metadata !360), !dbg !641
  br label %97, !dbg !739

; <label>:97                                      ; preds = %97, %94
  %indvars.iv34 = phi i64 [ 0, %94 ], [ %indvars.iv.next35, %97 ]
  %98 = getelementptr inbounds double** %84, i64 %indvars.iv34, !dbg !717
  %99 = load double** %98, align 8, !dbg !717, !tbaa !626
  %100 = getelementptr inbounds double* %99, i64 %95, !dbg !717
  %101 = load double* %100, align 8, !dbg !717, !tbaa !465
  %102 = fmul double %101, 0x3FF6A09E667F3BCD, !dbg !740
  %103 = fptrunc double %102 to float, !dbg !741
  %104 = getelementptr inbounds [3 x [3 x float]]* %vh, i64 0, i64 %indvars.iv37, i64 %indvars.iv34, !dbg !742
  store float %103, float* %104, align 4, !dbg !743, !tbaa !450
  %105 = add nuw nsw i64 %indvars.iv34, 3, !dbg !744
  %106 = getelementptr inbounds double** %84, i64 %105, !dbg !745
  %107 = load double** %106, align 8, !dbg !745, !tbaa !626
  %108 = getelementptr inbounds double* %107, i64 %95, !dbg !745
  %109 = load double* %108, align 8, !dbg !745, !tbaa !465
  %110 = fmul double %109, 0x3FF6A09E667F3BCD, !dbg !746
  %111 = fptrunc double %110 to float, !dbg !747
  %112 = getelementptr inbounds [3 x [3 x float]]* %vk, i64 0, i64 %indvars.iv37, i64 %indvars.iv34, !dbg !748
  store float %111, float* %112, align 4, !dbg !749, !tbaa !450
  %indvars.iv.next35 = add nuw nsw i64 %indvars.iv34, 1, !dbg !739
  %exitcond36 = icmp eq i64 %indvars.iv.next35, 3, !dbg !739
  br i1 %exitcond36, label %113, label %97, !dbg !739

; <label>:113                                     ; preds = %97
  %indvars.iv.next38 = add nuw nsw i64 %indvars.iv37, 1, !dbg !724
  %exitcond39 = icmp eq i64 %indvars.iv.next38, 2, !dbg !724
  br i1 %exitcond39, label %114, label %.preheader4, !dbg !724

; <label>:114                                     ; preds = %113
  %115 = getelementptr inbounds [3 x [3 x float]]* %vh, i64 0, i64 0, i64 0, !dbg !750
  %116 = getelementptr inbounds [3 x [3 x float]]* %vh, i64 0, i64 1, i64 0, !dbg !751
  %117 = getelementptr inbounds [3 x [3 x float]]* %vh, i64 0, i64 2, i64 0, !dbg !752
  tail call void @llvm.dbg.value(metadata float* %115, i64 0, metadata !335, metadata !360), !dbg !753
  tail call void @llvm.dbg.value(metadata float* %116, i64 0, metadata !336, metadata !360), !dbg !755
  tail call void @llvm.dbg.value(metadata float* %117, i64 0, metadata !337, metadata !360), !dbg !756
  %118 = getelementptr inbounds [3 x [3 x float]]* %vh, i64 0, i64 0, i64 1, !dbg !757
  %119 = load float* %118, align 4, !dbg !757, !tbaa !450
  %120 = getelementptr inbounds [3 x [3 x float]]* %vh, i64 0, i64 1, i64 2, !dbg !758
  %121 = load float* %120, align 4, !dbg !758, !tbaa !450
  %122 = fmul float %119, %121, !dbg !759
  %123 = getelementptr inbounds [3 x [3 x float]]* %vh, i64 0, i64 0, i64 2, !dbg !760
  %124 = load float* %123, align 8, !dbg !760, !tbaa !450
  %125 = getelementptr inbounds [3 x [3 x float]]* %vh, i64 0, i64 1, i64 1, !dbg !761
  %126 = load float* %125, align 4, !dbg !761, !tbaa !450
  %127 = fmul float %124, %126, !dbg !762
  %128 = fsub float %122, %127, !dbg !763
  store float %128, float* %117, align 8, !dbg !764, !tbaa !450
  %129 = load float* %116, align 4, !dbg !765, !tbaa !450
  %130 = fmul float %124, %129, !dbg !766
  %131 = load float* %115, align 16, !dbg !767, !tbaa !450
  %132 = fmul float %131, %121, !dbg !768
  %133 = fsub float %130, %132, !dbg !769
  %134 = getelementptr inbounds [3 x [3 x float]]* %vh, i64 0, i64 2, i64 1, !dbg !770
  store float %133, float* %134, align 4, !dbg !771, !tbaa !450
  %135 = fmul float %131, %126, !dbg !772
  %136 = fmul float %119, %129, !dbg !773
  %137 = fsub float %135, %136, !dbg !774
  %138 = getelementptr inbounds [3 x [3 x float]]* %vh, i64 0, i64 2, i64 2, !dbg !775
  store float %137, float* %138, align 8, !dbg !776, !tbaa !450
  %139 = getelementptr inbounds [3 x [3 x float]]* %vk, i64 0, i64 0, i64 0, !dbg !777
  %140 = getelementptr inbounds [3 x [3 x float]]* %vk, i64 0, i64 1, i64 0, !dbg !778
  %141 = getelementptr inbounds [3 x [3 x float]]* %vk, i64 0, i64 2, i64 0, !dbg !779
  tail call void @llvm.dbg.value(metadata float* %139, i64 0, metadata !335, metadata !360), !dbg !780
  tail call void @llvm.dbg.value(metadata float* %140, i64 0, metadata !336, metadata !360), !dbg !782
  tail call void @llvm.dbg.value(metadata float* %141, i64 0, metadata !337, metadata !360), !dbg !783
  %142 = getelementptr inbounds [3 x [3 x float]]* %vk, i64 0, i64 0, i64 1, !dbg !784
  %143 = load float* %142, align 4, !dbg !784, !tbaa !450
  %144 = getelementptr inbounds [3 x [3 x float]]* %vk, i64 0, i64 1, i64 2, !dbg !785
  %145 = load float* %144, align 4, !dbg !785, !tbaa !450
  %146 = fmul float %143, %145, !dbg !786
  %147 = getelementptr inbounds [3 x [3 x float]]* %vk, i64 0, i64 0, i64 2, !dbg !787
  %148 = load float* %147, align 8, !dbg !787, !tbaa !450
  %149 = getelementptr inbounds [3 x [3 x float]]* %vk, i64 0, i64 1, i64 1, !dbg !788
  %150 = load float* %149, align 4, !dbg !788, !tbaa !450
  %151 = fmul float %148, %150, !dbg !789
  %152 = fsub float %146, %151, !dbg !790
  store float %152, float* %141, align 8, !dbg !791, !tbaa !450
  %153 = load float* %140, align 4, !dbg !792, !tbaa !450
  %154 = fmul float %148, %153, !dbg !793
  %155 = load float* %139, align 16, !dbg !794, !tbaa !450
  %156 = fmul float %155, %145, !dbg !795
  %157 = fsub float %154, %156, !dbg !796
  %158 = getelementptr inbounds [3 x [3 x float]]* %vk, i64 0, i64 2, i64 1, !dbg !797
  store float %157, float* %158, align 4, !dbg !798, !tbaa !450
  %159 = fmul float %155, %150, !dbg !799
  %160 = fmul float %143, %153, !dbg !800
  %161 = fsub float %159, %160, !dbg !801
  %162 = getelementptr inbounds [3 x [3 x float]]* %vk, i64 0, i64 2, i64 2, !dbg !802
  store float %161, float* %162, align 8, !dbg !803, !tbaa !450
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !266, metadata !360), !dbg !674
  br label %.preheader, !dbg !804

.preheader:                                       ; preds = %..preheader_crit_edge, %114
  %163 = phi float [ %152, %114 ], [ %.pre71, %..preheader_crit_edge ]
  %164 = phi float [ %153, %114 ], [ %.pre69, %..preheader_crit_edge ]
  %165 = phi float [ %155, %114 ], [ %.pre67, %..preheader_crit_edge ]
  %indvars.iv28 = phi i64 [ 0, %114 ], [ %indvars.iv.next29, %..preheader_crit_edge ]
  br label %166, !dbg !806

; <label>:166                                     ; preds = %166, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %166 ]
  %167 = getelementptr inbounds [3 x [3 x float]]* %vh, i64 0, i64 0, i64 %indvars.iv, !dbg !809
  %168 = load float* %167, align 4, !dbg !809, !tbaa !450
  %169 = fmul float %165, %168, !dbg !811
  %170 = getelementptr inbounds [3 x [3 x float]]* %vh, i64 0, i64 1, i64 %indvars.iv, !dbg !812
  %171 = load float* %170, align 4, !dbg !812, !tbaa !450
  %172 = fmul float %164, %171, !dbg !813
  %173 = fadd float %169, %172, !dbg !814
  %174 = getelementptr inbounds [3 x [3 x float]]* %vh, i64 0, i64 2, i64 %indvars.iv, !dbg !815
  %175 = load float* %174, align 4, !dbg !815, !tbaa !450
  %176 = fmul float %163, %175, !dbg !816
  %177 = fadd float %173, %176, !dbg !817
  %178 = getelementptr inbounds [3 x float]* %R, i64 %indvars.iv28, i64 %indvars.iv, !dbg !818
  store float %177, float* %178, align 4, !dbg !819, !tbaa !450
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !806
  %exitcond = icmp eq i64 %indvars.iv.next, 3, !dbg !806
  br i1 %exitcond, label %179, label %166, !dbg !806

; <label>:179                                     ; preds = %166
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !804
  %exitcond30 = icmp eq i64 %indvars.iv.next29, 3, !dbg !804
  br i1 %exitcond30, label %180, label %..preheader_crit_edge, !dbg !804

..preheader_crit_edge:                            ; preds = %179
  %.phi.trans.insert = getelementptr inbounds [3 x [3 x float]]* %vk, i64 0, i64 0, i64 %indvars.iv.next29
  %.pre67 = load float* %.phi.trans.insert, align 4, !dbg !820, !tbaa !450
  %.phi.trans.insert68 = getelementptr inbounds [3 x [3 x float]]* %vk, i64 0, i64 1, i64 %indvars.iv.next29
  %.pre69 = load float* %.phi.trans.insert68, align 4, !dbg !821, !tbaa !450
  %.phi.trans.insert70 = getelementptr inbounds [3 x [3 x float]]* %vk, i64 0, i64 2, i64 %indvars.iv.next29
  %.pre71 = load float* %.phi.trans.insert70, align 4, !dbg !822, !tbaa !450
  br label %.preheader, !dbg !804

; <label>:180                                     ; preds = %179
  call void @llvm.lifetime.end(i64 36, i8* %4) #7, !dbg !823
  call void @llvm.lifetime.end(i64 36, i8* %3) #7, !dbg !823
  call void @llvm.lifetime.end(i64 36, i8* %2) #7, !dbg !823
  call void @llvm.lifetime.end(i64 48, i8* %1) #7, !dbg !823
  ret void, !dbg !823
}
