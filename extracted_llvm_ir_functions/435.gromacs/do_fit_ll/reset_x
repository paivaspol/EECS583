define void @reset_x(i32 %ncm, i32* nocapture readonly %ind_cm, i32 %nreset, i32* readonly %ind_reset, [3 x float]* nocapture %x, float* nocapture readonly %mass) #6 {
  %xcm = alloca [3 x float], align 4
  %1 = getelementptr inbounds [3 x float]* %xcm, i64 0, i64 0
  store float 0.000000e+00, float* %1, align 4, !tbaa !2
  %2 = getelementptr inbounds [3 x float]* %xcm, i64 0, i64 1
  store float 0.000000e+00, float* %2, align 4, !tbaa !2
  %3 = getelementptr inbounds [3 x float]* %xcm, i64 0, i64 2
  store float 0.000000e+00, float* %3, align 4, !tbaa !2
  %4 = icmp sgt i32 %ncm, 0
  br i1 %4, label %.lr.ph11, label %.preheader3

.lr.ph11:                                         ; preds = %0
  %5 = add i32 %ncm, -1
  br label %6

.preheader3:                                      ; preds = %19, %0
  %tm.0.lcssa = phi float [ 0.000000e+00, %0 ], [ %20, %19 ]
  br label %21

; <label>:6                                       ; preds = %19, %.lr.ph11
  %indvars.iv22 = phi i64 [ 0, %.lr.ph11 ], [ %indvars.iv.next23, %19 ]
  %tm.09 = phi float [ 0.000000e+00, %.lr.ph11 ], [ %20, %19 ]
  %7 = getelementptr inbounds i32* %ind_cm, i64 %indvars.iv22
  %8 = load i32* %7, align 4, !tbaa !18
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds float* %mass, i64 %9
  %11 = load float* %10, align 4, !tbaa !2
  br label %12

; <label>:12                                      ; preds = %12, %6
  %indvars.iv19 = phi i64 [ 0, %6 ], [ %indvars.iv.next20, %12 ]
  %13 = getelementptr inbounds [3 x float]* %x, i64 %9, i64 %indvars.iv19
  %14 = load float* %13, align 4, !tbaa !2
  %15 = fmul float %11, %14
  %16 = getelementptr inbounds [3 x float]* %xcm, i64 0, i64 %indvars.iv19
  %17 = load float* %16, align 4, !tbaa !2
  %18 = fadd float %17, %15
  store float %18, float* %16, align 4, !tbaa !2
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1
  %exitcond21 = icmp eq i64 %indvars.iv.next20, 3
  br i1 %exitcond21, label %19, label %12

; <label>:19                                      ; preds = %12
  %20 = fadd float %tm.09, %11
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1
  %lftr.wideiv24 = trunc i64 %indvars.iv22 to i32
  %exitcond25 = icmp eq i32 %lftr.wideiv24, %5
  br i1 %exitcond25, label %.preheader3, label %6

; <label>:21                                      ; preds = %21, %.preheader3
  %indvars.iv16 = phi i64 [ 0, %.preheader3 ], [ %indvars.iv.next17, %21 ]
  %22 = getelementptr inbounds [3 x float]* %xcm, i64 0, i64 %indvars.iv16
  %23 = load float* %22, align 4, !tbaa !2
  %24 = fdiv float %23, %tm.0.lcssa
  store float %24, float* %22, align 4, !tbaa !2
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1
  %exitcond18 = icmp eq i64 %indvars.iv.next17, 3
  br i1 %exitcond18, label %25, label %21

; <label>:25                                      ; preds = %21
  %26 = icmp eq i32* %ind_reset, null
  %27 = icmp sgt i32 %nreset, 0
  br i1 %26, label %.preheader, label %.preheader1

.preheader1:                                      ; preds = %25
  br i1 %27, label %.lr.ph6, label %.loopexit

.lr.ph6:                                          ; preds = %.preheader1
  %28 = load float* %1, align 4, !tbaa !2
  %29 = load float* %2, align 4, !tbaa !2
  %30 = load float* %3, align 4, !tbaa !2
  %31 = add i32 %nreset, -1
  br label %36

.preheader:                                       ; preds = %25
  br i1 %27, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %.preheader
  %32 = load float* %1, align 4, !tbaa !2
  %33 = load float* %2, align 4, !tbaa !2
  %34 = load float* %3, align 4, !tbaa !2
  %35 = add i32 %nreset, -1
  br label %49

; <label>:36                                      ; preds = %36, %.lr.ph6
  %indvars.iv12 = phi i64 [ 0, %.lr.ph6 ], [ %indvars.iv.next13, %36 ]
  %37 = getelementptr inbounds i32* %ind_reset, i64 %indvars.iv12
  %38 = load i32* %37, align 4, !tbaa !18
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [3 x float]* %x, i64 %39, i64 0
  %41 = load float* %40, align 4, !tbaa !2
  %42 = fsub float %41, %28
  %43 = getelementptr inbounds [3 x float]* %x, i64 %39, i64 1
  %44 = load float* %43, align 4, !tbaa !2
  %45 = fsub float %44, %29
  %46 = getelementptr inbounds [3 x float]* %x, i64 %39, i64 2
  %47 = load float* %46, align 4, !tbaa !2
  %48 = fsub float %47, %30
  store float %42, float* %40, align 4, !tbaa !2
  store float %45, float* %43, align 4, !tbaa !2
  store float %48, float* %46, align 4, !tbaa !2
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1
  %lftr.wideiv14 = trunc i64 %indvars.iv12 to i32
  %exitcond15 = icmp eq i32 %lftr.wideiv14, %31
  br i1 %exitcond15, label %.loopexit, label %36

; <label>:49                                      ; preds = %49, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %49 ]
  %50 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv, i64 0
  %51 = load float* %50, align 4, !tbaa !2
  %52 = fsub float %51, %32
  %53 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv, i64 1
  %54 = load float* %53, align 4, !tbaa !2
  %55 = fsub float %54, %33
  %56 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv, i64 2
  %57 = load float* %56, align 4, !tbaa !2
  %58 = fsub float %57, %34
  store float %52, float* %50, align 4, !tbaa !2
  store float %55, float* %53, align 4, !tbaa !2
  store float %58, float* %56, align 4, !tbaa !2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %35
  br i1 %exitcond, label %.loopexit, label %49

.loopexit:                                        ; preds = %36, %49, %.preheader1, %.preheader
  ret void
}
