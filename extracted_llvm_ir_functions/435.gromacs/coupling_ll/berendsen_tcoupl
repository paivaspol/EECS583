define void @berendsen_tcoupl(%struct.t_grpopts* nocapture readonly %opts, %struct.t_groups* nocapture readonly %grps, float %dt, float %SAfactor) #4 {
  %1 = getelementptr inbounds %struct.t_grpopts* %opts, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !26
  %3 = icmp sgt i32 %2, 0
  br i1 %3, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %0
  %4 = getelementptr inbounds %struct.t_groups* %grps, i64 0, i32 1
  %5 = getelementptr inbounds %struct.t_grpopts* %opts, i64 0, i32 6
  %6 = getelementptr inbounds %struct.t_grpopts* %opts, i64 0, i32 5
  br label %7

; <label>:7                                       ; preds = %.lr.ph, %54
  %8 = phi i32 [ %2, %.lr.ph ], [ %55, %54 ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %54 ]
  %9 = load %struct.t_grp_tcstat** %4, align 8, !tbaa !27
  %10 = getelementptr inbounds %struct.t_grp_tcstat* %9, i64 %indvars.iv, i32 0
  %11 = load float* %10, align 4, !tbaa !31
  %12 = load float** %5, align 8, !tbaa !33
  %13 = getelementptr inbounds float* %12, i64 %indvars.iv
  %14 = load float* %13, align 4, !tbaa !14
  %15 = fcmp ogt float %14, 0.000000e+00
  %16 = fcmp ogt float %11, 0.000000e+00
  %or.cond = and i1 %16, %15
  br i1 %or.cond, label %17, label %43

; <label>:17                                      ; preds = %7
  %18 = load float** %6, align 8, !tbaa !34
  %19 = getelementptr inbounds float* %18, i64 %indvars.iv
  %20 = load float* %19, align 4, !tbaa !14
  %21 = fmul float %20, %SAfactor
  %22 = fcmp olt float %21, 0.000000e+00
  br i1 %22, label %25, label %23

; <label>:23                                      ; preds = %17
  %24 = fpext float %21 to double
  br label %25

; <label>:25                                      ; preds = %17, %23
  %26 = phi double [ %24, %23 ], [ 0.000000e+00, %17 ]
  %27 = fptrunc double %26 to float
  %28 = fdiv float %dt, %14
  %29 = fpext float %28 to double
  %30 = fdiv float %27, %11
  %31 = fpext float %30 to double
  %32 = fadd double %31, -1.000000e+00
  %33 = fmul double %29, %32
  %34 = fadd double %33, 1.000000e+00
  %35 = tail call double @sqrt(double %34) #12
  %36 = fptrunc double %35 to float
  %37 = fpext float %36 to double
  %38 = fcmp olt float %36, 1.250000e+00
  %39 = select i1 %38, double %37, double 1.250000e+00
  %.not = fcmp ule double %39, 8.000000e-01
  %.not1 = xor i1 %38, true
  %brmerge = or i1 %.not, %.not1
  %.mux = select i1 %.not, double 8.000000e-01, double 1.250000e+00
  %40 = select i1 %brmerge, double %.mux, double %37
  %41 = fptrunc double %40 to float
  %42 = getelementptr inbounds %struct.t_grp_tcstat* %9, i64 %indvars.iv, i32 1
  store float %41, float* %42, align 4, !tbaa !35
  br label %45

; <label>:43                                      ; preds = %7
  %44 = getelementptr inbounds %struct.t_grp_tcstat* %9, i64 %indvars.iv, i32 1
  store float 1.000000e+00, float* %44, align 4, !tbaa !35
  br label %45

; <label>:45                                      ; preds = %43, %25
  %46 = phi float [ 1.000000e+00, %43 ], [ %41, %25 ]
  %47 = load %struct.__sFILE** @debug, align 8, !tbaa !18
  %48 = icmp eq %struct.__sFILE* %47, null
  br i1 %48, label %54, label %49

; <label>:49                                      ; preds = %45
  %50 = fpext float %11 to double
  %51 = fpext float %46 to double
  %52 = trunc i64 %indvars.iv to i32
  %53 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %47, i8* getelementptr inbounds ([33 x i8]* @.str12, i64 0, i64 0), i32 %52, double %50, double %51) #9
  %.pre = load i32* %1, align 4, !tbaa !26
  br label %54

; <label>:54                                      ; preds = %45, %49
  %55 = phi i32 [ %8, %45 ], [ %.pre, %49 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %56 = sext i32 %55 to i64
  %57 = icmp slt i64 %indvars.iv.next, %56
  br i1 %57, label %7, label %._crit_edge

._crit_edge:                                      ; preds = %54, %0
  ret void
}
