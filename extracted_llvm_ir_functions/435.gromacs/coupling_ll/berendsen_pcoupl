define void @berendsen_pcoupl(%struct.t_inputrec* %ir, i32 %step, [3 x float]* %pres, [3 x float]* nocapture %box, i32 %start, i32 %nr_atoms, [3 x float]* nocapture %x, i16* nocapture readonly %cFREEZE, %struct.t_nrnb* nocapture %nrnb, [3 x i32]* nocapture readonly %nFreeze) #4 {
  %mu = alloca [3 x [3 x float]], align 16
  %buf = alloca [4096 x i8], align 16
  tail call void @llvm.dbg.value(metadata %struct.t_inputrec* %ir, i64 0, metadata !526, metadata !671), !dbg !1410
  tail call void @llvm.dbg.value(metadata i32 %step, i64 0, metadata !527, metadata !671), !dbg !1411
  tail call void @llvm.dbg.value(metadata [3 x float]* %pres, i64 0, metadata !528, metadata !671), !dbg !1412
  tail call void @llvm.dbg.value(metadata [3 x float]* %box, i64 0, metadata !529, metadata !671), !dbg !1413
  tail call void @llvm.dbg.value(metadata i32 %start, i64 0, metadata !530, metadata !671), !dbg !1414
  tail call void @llvm.dbg.value(metadata i32 %nr_atoms, i64 0, metadata !531, metadata !671), !dbg !1415
  tail call void @llvm.dbg.value(metadata [3 x float]* %x, i64 0, metadata !532, metadata !671), !dbg !1416
  tail call void @llvm.dbg.value(metadata i16* %cFREEZE, i64 0, metadata !533, metadata !671), !dbg !1417
  tail call void @llvm.dbg.value(metadata %struct.t_nrnb* %nrnb, i64 0, metadata !534, metadata !671), !dbg !1418
  tail call void @llvm.dbg.value(metadata [3 x i32]* %nFreeze, i64 0, metadata !535, metadata !671), !dbg !1419
  %1 = bitcast [3 x [3 x float]]* %mu to i8*, !dbg !1420
  call void @llvm.lifetime.start(i64 36, i8* %1) #6, !dbg !1420
  tail call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mu, metadata !542, metadata !671), !dbg !1421
  %2 = getelementptr inbounds [4096 x i8]* %buf, i64 0, i64 0, !dbg !1422
  call void @llvm.lifetime.start(i64 4096, i8* %2) #6, !dbg !1422
  tail call void @llvm.dbg.declare(metadata [4096 x i8]* %buf, metadata !545, metadata !671), !dbg !1423
  tail call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !539, metadata !671), !dbg !1424
  tail call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !540, metadata !671), !dbg !1425
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !537, metadata !671), !dbg !1426
  br label %3, !dbg !1427

; <label>:3                                       ; preds = %13, %0
  %indvars.iv40 = phi i64 [ 0, %0 ], [ %indvars.iv.next41, %13 ]
  %xy_pressure.022 = phi float [ 0.000000e+00, %0 ], [ %xy_pressure.1, %13 ]
  %scalar_pressure.021 = phi float [ 0.000000e+00, %0 ], [ %7, %13 ]
  %4 = getelementptr inbounds [3 x float]* %pres, i64 %indvars.iv40, i64 %indvars.iv40, !dbg !1429
  %5 = load float* %4, align 4, !dbg !1429, !tbaa !799
  %6 = fdiv float %5, 3.000000e+00, !dbg !1432
  %7 = fadd float %scalar_pressure.021, %6, !dbg !1433
  tail call void @llvm.dbg.value(metadata float %7, i64 0, metadata !539, metadata !671), !dbg !1424
  %8 = trunc i64 %indvars.iv40 to i32, !dbg !1434
  %9 = icmp eq i32 %8, 2, !dbg !1434
  br i1 %9, label %13, label %10, !dbg !1436

; <label>:10                                      ; preds = %3
  %11 = fmul float %5, 5.000000e-01, !dbg !1437
  %12 = fadd float %xy_pressure.022, %11, !dbg !1438
  tail call void @llvm.dbg.value(metadata float %12, i64 0, metadata !540, metadata !671), !dbg !1425
  br label %13, !dbg !1439

; <label>:13                                      ; preds = %3, %10
  %xy_pressure.1 = phi float [ %12, %10 ], [ %xy_pressure.022, %3 ]
  %indvars.iv.next41 = add nuw nsw i64 %indvars.iv40, 1, !dbg !1427
  %exitcond42 = icmp eq i64 %indvars.iv.next41, 3, !dbg !1427
  br i1 %exitcond42, label %14, label %3, !dbg !1427

; <label>:14                                      ; preds = %13
  %fabsf = tail call float @fabsf(float %7) #8, !dbg !1440
  %15 = fpext float %fabsf to double, !dbg !1440
  %16 = fcmp ogt double %15, 1.200000e-38, !dbg !1442
  br i1 %16, label %17, label %256, !dbg !1443

; <label>:17                                      ; preds = %14
  %18 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 0, !dbg !1444
  tail call void @llvm.dbg.value(metadata [3 x float]* %18, i64 0, metadata !621, metadata !671) #6, !dbg !1446
  tail call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !622, metadata !671) #6, !dbg !1448
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 36, i32 16, i1 false) #6, !dbg !1449
  %19 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 29, !dbg !1450
  %20 = load i32* %19, align 4, !dbg !1450, !tbaa !1087
  switch i32 %20, label %133 [
    i32 0, label %.preheader7
    i32 1, label %.preheader8
    i32 2, label %.preheader10
    i32 3, label %92
  ], !dbg !1451

.preheader10:                                     ; preds = %17
  %21 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 15, !dbg !1452
  %22 = load float* %21, align 4, !dbg !1452, !tbaa !1222
  %23 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 30, !dbg !1452
  %24 = load float* %23, align 4, !dbg !1452, !tbaa !955
  br label %.preheader9, !dbg !1458

.preheader8:                                      ; preds = %17
  %25 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 15, !dbg !1459
  %26 = load float* %25, align 4, !dbg !1459, !tbaa !1222
  %27 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 30, !dbg !1459
  %28 = load float* %27, align 4, !dbg !1459, !tbaa !955
  br label %45, !dbg !1462

.preheader7:                                      ; preds = %17
  %29 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 15, !dbg !1463
  %30 = load float* %29, align 4, !dbg !1463, !tbaa !1222
  %31 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 30, !dbg !1463
  %32 = load float* %31, align 4, !dbg !1463, !tbaa !955
  br label %33, !dbg !1466

; <label>:33                                      ; preds = %33, %.preheader7
  %indvars.iv25 = phi i64 [ 0, %.preheader7 ], [ %indvars.iv.next26, %33 ]
  %34 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 32, i64 %indvars.iv25, i64 %indvars.iv25, !dbg !1463
  %35 = load float* %34, align 4, !dbg !1463, !tbaa !799
  %36 = fmul float %35, %30, !dbg !1463
  %37 = fdiv float %36, %32, !dbg !1463
  %38 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 31, i64 %indvars.iv25, i64 %indvars.iv25, !dbg !1467
  %39 = load float* %38, align 4, !dbg !1467, !tbaa !799
  %40 = fsub float %39, %7, !dbg !1468
  %41 = fmul float %37, %40, !dbg !1469
  %42 = fdiv float %41, 3.000000e+00, !dbg !1470
  %43 = fsub float 1.000000e+00, %42, !dbg !1471
  %44 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 %indvars.iv25, i64 %indvars.iv25, !dbg !1472
  store float %43, float* %44, align 4, !dbg !1473, !tbaa !799
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !1466
  %exitcond27 = icmp eq i64 %indvars.iv.next26, 3, !dbg !1466
  br i1 %exitcond27, label %.loopexit, label %33, !dbg !1466

; <label>:45                                      ; preds = %45, %.preheader8
  %indvars.iv28 = phi i64 [ 0, %.preheader8 ], [ %indvars.iv.next29, %45 ]
  %46 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 32, i64 %indvars.iv28, i64 %indvars.iv28, !dbg !1459
  %47 = load float* %46, align 4, !dbg !1459, !tbaa !799
  %48 = fmul float %47, %26, !dbg !1459
  %49 = fdiv float %48, %28, !dbg !1459
  %50 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 31, i64 %indvars.iv28, i64 %indvars.iv28, !dbg !1474
  %51 = load float* %50, align 4, !dbg !1474, !tbaa !799
  %52 = fsub float %51, %xy_pressure.1, !dbg !1475
  %53 = fmul float %49, %52, !dbg !1476
  %54 = fdiv float %53, 3.000000e+00, !dbg !1477
  %55 = fsub float 1.000000e+00, %54, !dbg !1478
  %56 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 %indvars.iv28, i64 %indvars.iv28, !dbg !1479
  store float %55, float* %56, align 4, !dbg !1480, !tbaa !799
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !1462
  %exitcond30 = icmp eq i64 %indvars.iv.next29, 2, !dbg !1462
  br i1 %exitcond30, label %57, label %45, !dbg !1462

; <label>:57                                      ; preds = %45
  %58 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 32, i64 2, i64 2, !dbg !1481
  %59 = load float* %58, align 4, !dbg !1481, !tbaa !799
  %60 = fmul float %59, %26, !dbg !1481
  %61 = fdiv float %60, %28, !dbg !1481
  %62 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 31, i64 2, i64 2, !dbg !1482
  %63 = load float* %62, align 4, !dbg !1482, !tbaa !799
  %64 = getelementptr inbounds [3 x float]* %pres, i64 2, i64 2, !dbg !1483
  %65 = load float* %64, align 4, !dbg !1483, !tbaa !799
  %66 = fsub float %63, %65, !dbg !1484
  %67 = fmul float %61, %66, !dbg !1485
  %68 = fdiv float %67, 3.000000e+00, !dbg !1486
  %69 = fsub float 1.000000e+00, %68, !dbg !1487
  %70 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 2, i64 2, !dbg !1488
  store float %69, float* %70, align 8, !dbg !1489, !tbaa !799
  br label %.loopexit, !dbg !1490

.preheader9:                                      ; preds = %91, %.preheader10
  %indvars.iv34 = phi i64 [ 0, %.preheader10 ], [ %indvars.iv.next35, %91 ]
  br label %71, !dbg !1491

; <label>:71                                      ; preds = %71, %.preheader9
  %indvars.iv31 = phi i64 [ 0, %.preheader9 ], [ %indvars.iv.next32, %71 ]
  %72 = trunc i64 %indvars.iv31 to i32, !dbg !1492
  %73 = trunc i64 %indvars.iv34 to i32, !dbg !1492
  %74 = icmp eq i32 %73, %72, !dbg !1492
  %75 = select i1 %74, double 1.000000e+00, double 0.000000e+00, !dbg !1493
  %76 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 32, i64 %indvars.iv34, i64 %indvars.iv31, !dbg !1452
  %77 = load float* %76, align 4, !dbg !1452, !tbaa !799
  %78 = fmul float %77, %22, !dbg !1452
  %79 = fdiv float %78, %24, !dbg !1452
  %80 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 31, i64 %indvars.iv34, i64 %indvars.iv31, !dbg !1494
  %81 = load float* %80, align 4, !dbg !1494, !tbaa !799
  %82 = getelementptr inbounds [3 x float]* %pres, i64 %indvars.iv34, i64 %indvars.iv31, !dbg !1495
  %83 = load float* %82, align 4, !dbg !1495, !tbaa !799
  %84 = fsub float %81, %83, !dbg !1496
  %85 = fmul float %79, %84, !dbg !1497
  %86 = fdiv float %85, 3.000000e+00, !dbg !1498
  %87 = fpext float %86 to double, !dbg !1452
  %88 = fsub double %75, %87, !dbg !1499
  %89 = fptrunc double %88 to float, !dbg !1500
  %90 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 %indvars.iv34, i64 %indvars.iv31, !dbg !1501
  store float %89, float* %90, align 4, !dbg !1502, !tbaa !799
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1, !dbg !1491
  %exitcond33 = icmp eq i64 %indvars.iv.next32, 3, !dbg !1491
  br i1 %exitcond33, label %91, label %71, !dbg !1491

; <label>:91                                      ; preds = %71
  %indvars.iv.next35 = add nuw nsw i64 %indvars.iv34, 1, !dbg !1458
  %exitcond36 = icmp eq i64 %indvars.iv.next35, 3, !dbg !1458
  br i1 %exitcond36, label %.loopexit11, label %.preheader9, !dbg !1458

; <label>:92                                      ; preds = %17
  %93 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 32, i64 2, i64 2, !dbg !1503
  %94 = load float* %93, align 4, !dbg !1503, !tbaa !799
  %fabsf1 = tail call float @fabsf(float %94) #8, !dbg !1505
  %95 = fpext float %fabsf1 to double, !dbg !1505
  %96 = fcmp ogt double %95, 1.200000e-38, !dbg !1506
  %97 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 15, !dbg !1507
  %98 = load float* %97, align 4, !dbg !1507, !tbaa !1222
  %99 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 30, !dbg !1508
  %100 = load float* %99, align 4, !dbg !1508, !tbaa !955
  br i1 %96, label %101, label %._crit_edge, !dbg !1509

._crit_edge:                                      ; preds = %92
  %.phi.trans.insert45 = getelementptr inbounds [3 x float]* %pres, i64 2, i64 2
  %.pre46 = load float* %.phi.trans.insert45, align 4, !dbg !1510, !tbaa !799
  br label %109, !dbg !1509

; <label>:101                                     ; preds = %92
  %102 = fdiv float %98, %100, !dbg !1513
  %103 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 31, i64 2, i64 2, !dbg !1514
  %104 = load float* %103, align 4, !dbg !1514, !tbaa !799
  %105 = getelementptr inbounds [3 x float]* %pres, i64 2, i64 2, !dbg !1515
  %106 = load float* %105, align 4, !dbg !1515, !tbaa !799
  %107 = fsub float %104, %106, !dbg !1516
  %108 = fmul float %102, %107, !dbg !1517
  tail call void @llvm.dbg.value(metadata float %108, i64 0, metadata !541, metadata !671), !dbg !1518
  br label %109, !dbg !1519

; <label>:109                                     ; preds = %._crit_edge, %101
  %110 = phi float [ %106, %101 ], [ %.pre46, %._crit_edge ]
  %p_corr_z.0 = phi float [ %108, %101 ], [ 0.000000e+00, %._crit_edge ]
  %111 = fmul float %p_corr_z.0, %94, !dbg !1520
  %112 = fsub float 1.000000e+00, %111, !dbg !1521
  %113 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 2, i64 2, !dbg !1522
  store float %112, float* %113, align 8, !dbg !1523, !tbaa !799
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !537, metadata !671), !dbg !1426
  %114 = getelementptr inbounds [3 x float]* %box, i64 2, i64 2, !dbg !1524
  %115 = load float* %114, align 4, !dbg !1524, !tbaa !799
  %116 = fadd float %p_corr_z.0, %110, !dbg !1525
  %117 = fsub float %116, %xy_pressure.1, !dbg !1526
  br label %118, !dbg !1527

; <label>:118                                     ; preds = %._crit_edge47, %109
  %119 = phi float [ %112, %109 ], [ %.pre48, %._crit_edge47 ]
  %indvars.iv37 = phi i64 [ 0, %109 ], [ %indvars.iv.next38, %._crit_edge47 ]
  %120 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 32, i64 %indvars.iv37, i64 %indvars.iv37, !dbg !1528
  %121 = load float* %120, align 4, !dbg !1528, !tbaa !799
  %122 = fmul float %121, %98, !dbg !1528
  %123 = fdiv float %122, %100, !dbg !1528
  %124 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 31, i64 %indvars.iv37, i64 %indvars.iv37, !dbg !1529
  %125 = load float* %124, align 4, !dbg !1529, !tbaa !799
  %126 = fmul float %119, %115, !dbg !1530
  %127 = fdiv float %125, %126, !dbg !1531
  %128 = fsub float %127, %117, !dbg !1532
  %129 = fmul float %123, %128, !dbg !1533
  %130 = fmul float %129, 5.000000e-01, !dbg !1534
  %131 = fadd float %130, 1.000000e+00, !dbg !1535
  %132 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 %indvars.iv37, i64 %indvars.iv37, !dbg !1536
  store float %131, float* %132, align 4, !dbg !1537, !tbaa !799
  %indvars.iv.next38 = add nuw nsw i64 %indvars.iv37, 1, !dbg !1527
  %exitcond39 = icmp eq i64 %indvars.iv.next38, 2, !dbg !1527
  br i1 %exitcond39, label %.loopexit, label %._crit_edge47, !dbg !1527

._crit_edge47:                                    ; preds = %118
  %.pre48 = load float* %113, align 8, !dbg !1538, !tbaa !799
  br label %118, !dbg !1527

; <label>:133                                     ; preds = %17
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([55 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str5, i64 0, i64 0)) #9, !dbg !1539
  br label %.loopexit, !dbg !1540

.loopexit11:                                      ; preds = %91
  %.phi.trans.insert49 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 1, i64 0
  %.pre50 = load float* %.phi.trans.insert49, align 4, !dbg !1541, !tbaa !799
  %.phi.trans.insert51 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 0, i64 1
  %.pre52 = load float* %.phi.trans.insert51, align 4, !dbg !1542, !tbaa !799
  %.phi.trans.insert53 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 2, i64 0
  %.pre54 = load float* %.phi.trans.insert53, align 8, !dbg !1543, !tbaa !799
  %.phi.trans.insert55 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 0, i64 2
  %.pre56 = load float* %.phi.trans.insert55, align 8, !dbg !1544, !tbaa !799
  %.phi.trans.insert57 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 2, i64 1
  %.pre58 = load float* %.phi.trans.insert57, align 4, !dbg !1545, !tbaa !799
  %.phi.trans.insert59 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 1, i64 2
  %.pre60 = load float* %.phi.trans.insert59, align 4, !dbg !1546, !tbaa !799
  br label %.loopexit

.loopexit:                                        ; preds = %118, %33, %.loopexit11, %133, %57
  %134 = phi float [ %.pre60, %.loopexit11 ], [ 0.000000e+00, %133 ], [ 0.000000e+00, %57 ], [ 0.000000e+00, %33 ], [ 0.000000e+00, %118 ]
  %135 = phi float [ %.pre58, %.loopexit11 ], [ 0.000000e+00, %133 ], [ 0.000000e+00, %57 ], [ 0.000000e+00, %33 ], [ 0.000000e+00, %118 ]
  %136 = phi float [ %.pre56, %.loopexit11 ], [ 0.000000e+00, %133 ], [ 0.000000e+00, %57 ], [ 0.000000e+00, %33 ], [ 0.000000e+00, %118 ]
  %137 = phi float [ %.pre54, %.loopexit11 ], [ 0.000000e+00, %133 ], [ 0.000000e+00, %57 ], [ 0.000000e+00, %33 ], [ 0.000000e+00, %118 ]
  %138 = phi float [ %.pre52, %.loopexit11 ], [ 0.000000e+00, %133 ], [ 0.000000e+00, %57 ], [ 0.000000e+00, %33 ], [ 0.000000e+00, %118 ]
  %139 = phi float [ %.pre50, %.loopexit11 ], [ 0.000000e+00, %133 ], [ 0.000000e+00, %57 ], [ 0.000000e+00, %33 ], [ 0.000000e+00, %118 ]
  %140 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 0, i64 1, !dbg !1547
  %141 = fadd float %139, %138, !dbg !1542
  store float %141, float* %140, align 4, !dbg !1542, !tbaa !799
  %142 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 0, i64 2, !dbg !1548
  %143 = fadd float %137, %136, !dbg !1544
  store float %143, float* %142, align 8, !dbg !1544, !tbaa !799
  %144 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 1, i64 2, !dbg !1549
  %145 = fadd float %135, %134, !dbg !1546
  store float %145, float* %144, align 4, !dbg !1546, !tbaa !799
  %146 = load %struct.__sFILE** @debug, align 8, !dbg !1550, !tbaa !897
  %147 = icmp eq %struct.__sFILE* %146, null, !dbg !1550
  br i1 %147, label %150, label %148, !dbg !1552

; <label>:148                                     ; preds = %.loopexit
  tail call void @pr_rvecs(%struct.__sFILE* %146, i32 0, i8* getelementptr inbounds ([10 x i8]* @.str8, i64 0, i64 0), [3 x float]* %pres, i32 3) #9, !dbg !1553
  %149 = load %struct.__sFILE** @debug, align 8, !dbg !1555, !tbaa !897
  call void @pr_rvecs(%struct.__sFILE* %149, i32 0, i8* getelementptr inbounds ([10 x i8]* @.str9, i64 0, i64 0), [3 x float]* %18, i32 3) #9, !dbg !1556
  br label %150, !dbg !1557

; <label>:150                                     ; preds = %.loopexit, %148
  %151 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 0, i64 0, !dbg !1558
  %152 = load float* %151, align 16, !dbg !1558, !tbaa !799
  %153 = fpext float %152 to double, !dbg !1558
  %154 = fcmp olt double %153, 9.900000e-01, !dbg !1560
  %155 = fcmp ogt double %153, 1.010000e+00, !dbg !1561
  %or.cond3 = or i1 %154, %155, !dbg !1562
  %.phi.trans.insert62 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 1, i64 1
  %.pre63 = load float* %.phi.trans.insert62, align 4, !dbg !1563, !tbaa !799
  br i1 %or.cond3, label %._crit_edge61, label %156, !dbg !1562

; <label>:156                                     ; preds = %150
  %157 = fpext float %.pre63 to double, !dbg !1565
  %158 = fcmp olt double %157, 9.900000e-01, !dbg !1566
  %159 = fcmp ogt double %157, 1.010000e+00, !dbg !1567
  %or.cond4 = or i1 %158, %159, !dbg !1568
  br i1 %or.cond4, label %._crit_edge61, label %160, !dbg !1568

; <label>:160                                     ; preds = %156
  %161 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 2, i64 2, !dbg !1569
  %162 = load float* %161, align 8, !dbg !1569, !tbaa !799
  %163 = fpext float %162 to double, !dbg !1569
  %164 = fcmp olt double %163, 9.900000e-01, !dbg !1570
  %165 = fcmp ogt double %163, 1.010000e+00, !dbg !1571
  %or.cond5 = or i1 %164, %165, !dbg !1572
  br i1 %or.cond5, label %._crit_edge61, label %.preheader6, !dbg !1572

._crit_edge61:                                    ; preds = %150, %160, %156
  %166 = fpext float %.pre63 to double, !dbg !1563
  %167 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 2, i64 2, !dbg !1563
  %168 = load float* %167, align 8, !dbg !1563, !tbaa !799
  %169 = fpext float %168 to double, !dbg !1563
  %170 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %2, i32 0, i64 4096, i8* getelementptr inbounds ([65 x i8]* @.str10, i64 0, i64 0), i32 %step, double %153, double %166, double %169) #9, !dbg !1563
  %171 = load %struct.__sFILE** @stdlog, align 8, !dbg !1573, !tbaa !897
  %172 = icmp eq %struct.__sFILE* %171, null, !dbg !1573
  br i1 %172, label %174, label %173, !dbg !1575

; <label>:173                                     ; preds = %._crit_edge61
  %fputs2 = call i32 @fputs(i8* %2, %struct.__sFILE* %171), !dbg !1576
  br label %174, !dbg !1576

; <label>:174                                     ; preds = %._crit_edge61, %173
  %175 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1577, !tbaa !897
  %fputs = call i32 @fputs(i8* %2, %struct.__sFILE* %175), !dbg !1578
  br label %.preheader6, !dbg !1579

.preheader6:                                      ; preds = %160, %174
  %176 = icmp sgt i32 %nr_atoms, 0, !dbg !1580
  br i1 %176, label %.lr.ph, label %.preheader6..preheader_crit_edge, !dbg !1583

.preheader6..preheader_crit_edge:                 ; preds = %.preheader6
  %.pre64 = load float* %151, align 16, !dbg !1584, !tbaa !799
  %.pre65 = load float* %140, align 4, !dbg !1588, !tbaa !799
  %.pre66 = load float* %142, align 8, !dbg !1589, !tbaa !799
  %.phi.trans.insert67 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 1, i64 1
  %.pre68 = load float* %.phi.trans.insert67, align 4, !dbg !1590, !tbaa !799
  %.pre69 = load float* %144, align 4, !dbg !1591, !tbaa !799
  %.phi.trans.insert70 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 2, i64 2
  %.pre71 = load float* %.phi.trans.insert70, align 8, !dbg !1592, !tbaa !799
  br label %.preheader, !dbg !1583

.lr.ph:                                           ; preds = %.preheader6
  %177 = add nsw i32 %nr_atoms, %start, !dbg !1593
  %178 = load float* %151, align 16, !dbg !1594, !tbaa !799
  %179 = load float* %140, align 4, !dbg !1597, !tbaa !799
  %180 = load float* %142, align 8, !dbg !1598, !tbaa !799
  %181 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 1, i64 1, !dbg !1599
  %182 = load float* %181, align 4, !dbg !1599, !tbaa !799
  %183 = load float* %144, align 4, !dbg !1601, !tbaa !799
  %184 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 2, i64 2, !dbg !1602
  %185 = load float* %184, align 8, !dbg !1602, !tbaa !799
  %186 = sext i32 %start to i64
  %187 = sext i32 %177 to i64, !dbg !1583
  br label %194, !dbg !1583

.preheader:                                       ; preds = %233, %.preheader6..preheader_crit_edge
  %188 = phi float [ %.pre71, %.preheader6..preheader_crit_edge ], [ %185, %233 ]
  %189 = phi float [ %.pre69, %.preheader6..preheader_crit_edge ], [ %183, %233 ]
  %190 = phi float [ %.pre68, %.preheader6..preheader_crit_edge ], [ %182, %233 ]
  %191 = phi float [ %.pre66, %.preheader6..preheader_crit_edge ], [ %180, %233 ]
  %192 = phi float [ %.pre65, %.preheader6..preheader_crit_edge ], [ %179, %233 ]
  %193 = phi float [ %.pre64, %.preheader6..preheader_crit_edge ], [ %178, %233 ]
  br label %235, !dbg !1604

; <label>:194                                     ; preds = %.lr.ph, %233
  %indvars.iv23 = phi i64 [ %186, %.lr.ph ], [ %indvars.iv.next24, %233 ]
  %195 = getelementptr inbounds i16* %cFREEZE, i64 %indvars.iv23, !dbg !1605
  %196 = load i16* %195, align 2, !dbg !1605, !tbaa !1606
  %197 = zext i16 %196 to i64, !dbg !1607
  %198 = getelementptr inbounds [3 x i32]* %nFreeze, i64 %197, i64 0, !dbg !1607
  %199 = load i32* %198, align 4, !dbg !1607, !tbaa !1608
  %200 = icmp eq i32 %199, 0, !dbg !1607
  br i1 %200, label %201, label %213, !dbg !1609

; <label>:201                                     ; preds = %194
  %202 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv23, i64 0, !dbg !1610
  %203 = load float* %202, align 4, !dbg !1610, !tbaa !799
  %204 = fmul float %178, %203, !dbg !1611
  %205 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv23, i64 1, !dbg !1612
  %206 = load float* %205, align 4, !dbg !1612, !tbaa !799
  %207 = fmul float %179, %206, !dbg !1613
  %208 = fadd float %204, %207, !dbg !1614
  %209 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv23, i64 2, !dbg !1615
  %210 = load float* %209, align 4, !dbg !1615, !tbaa !799
  %211 = fmul float %180, %210, !dbg !1616
  %212 = fadd float %208, %211, !dbg !1617
  store float %212, float* %202, align 4, !dbg !1618, !tbaa !799
  br label %213, !dbg !1619

; <label>:213                                     ; preds = %194, %201
  %214 = getelementptr inbounds [3 x i32]* %nFreeze, i64 %197, i64 1, !dbg !1620
  %215 = load i32* %214, align 4, !dbg !1620, !tbaa !1608
  %216 = icmp eq i32 %215, 0, !dbg !1620
  br i1 %216, label %217, label %225, !dbg !1621

; <label>:217                                     ; preds = %213
  %218 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv23, i64 1, !dbg !1622
  %219 = load float* %218, align 4, !dbg !1622, !tbaa !799
  %220 = fmul float %182, %219, !dbg !1623
  %221 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv23, i64 2, !dbg !1624
  %222 = load float* %221, align 4, !dbg !1624, !tbaa !799
  %223 = fmul float %183, %222, !dbg !1625
  %224 = fadd float %220, %223, !dbg !1626
  store float %224, float* %218, align 4, !dbg !1627, !tbaa !799
  br label %225, !dbg !1628

; <label>:225                                     ; preds = %213, %217
  %226 = getelementptr inbounds [3 x i32]* %nFreeze, i64 %197, i64 2, !dbg !1629
  %227 = load i32* %226, align 4, !dbg !1629, !tbaa !1608
  %228 = icmp eq i32 %227, 0, !dbg !1629
  br i1 %228, label %229, label %233, !dbg !1630

; <label>:229                                     ; preds = %225
  %230 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv23, i64 2, !dbg !1631
  %231 = load float* %230, align 4, !dbg !1631, !tbaa !799
  %232 = fmul float %185, %231, !dbg !1632
  store float %232, float* %230, align 4, !dbg !1633, !tbaa !799
  br label %233, !dbg !1634

; <label>:233                                     ; preds = %225, %229
  %indvars.iv.next24 = add nsw i64 %indvars.iv23, 1, !dbg !1583
  %234 = icmp slt i64 %indvars.iv.next24, %187, !dbg !1580
  br i1 %234, label %194, label %.preheader, !dbg !1583

; <label>:235                                     ; preds = %235, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %235 ]
  %236 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv, i64 0, !dbg !1635
  %237 = load float* %236, align 4, !dbg !1635, !tbaa !799
  %238 = fmul float %193, %237, !dbg !1636
  %239 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv, i64 1, !dbg !1637
  %240 = load float* %239, align 4, !dbg !1637, !tbaa !799
  %241 = fmul float %192, %240, !dbg !1638
  %242 = fadd float %238, %241, !dbg !1639
  %243 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv, i64 2, !dbg !1640
  %244 = load float* %243, align 4, !dbg !1640, !tbaa !799
  %245 = fmul float %191, %244, !dbg !1641
  %246 = fadd float %242, %245, !dbg !1642
  store float %246, float* %236, align 4, !dbg !1643, !tbaa !799
  %247 = fmul float %190, %240, !dbg !1644
  %248 = fmul float %189, %244, !dbg !1645
  %249 = fadd float %247, %248, !dbg !1646
  store float %249, float* %239, align 4, !dbg !1647, !tbaa !799
  %250 = fmul float %188, %244, !dbg !1648
  store float %250, float* %243, align 4, !dbg !1649, !tbaa !799
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1604
  %exitcond = icmp eq i64 %indvars.iv.next, 3, !dbg !1604
  br i1 %exitcond, label %251, label %235, !dbg !1604

; <label>:251                                     ; preds = %235
  %252 = sitofp i32 %nr_atoms to double, !dbg !1650
  %253 = getelementptr inbounds %struct.t_nrnb* %nrnb, i64 0, i32 0, i64 111, !dbg !1650
  %254 = load double* %253, align 8, !dbg !1650, !tbaa !812
  %255 = fadd double %252, %254, !dbg !1650
  store double %255, double* %253, align 8, !dbg !1650, !tbaa !812
  br label %256, !dbg !1651

; <label>:256                                     ; preds = %251, %14
  call void @llvm.lifetime.end(i64 4096, i8* %2) #6, !dbg !1652
  call void @llvm.lifetime.end(i64 36, i8* %1) #6, !dbg !1652
  ret void, !dbg !1652
}
