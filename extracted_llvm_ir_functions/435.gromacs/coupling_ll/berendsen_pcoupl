define void @berendsen_pcoupl(%struct.t_inputrec* %ir, i32 %step, [3 x float]* %pres, [3 x float]* nocapture %box, i32 %start, i32 %nr_atoms, [3 x float]* nocapture %x, i16* nocapture readonly %cFREEZE, %struct.t_nrnb* nocapture %nrnb, [3 x i32]* nocapture readonly %nFreeze) #4 {
  %mu = alloca [3 x [3 x float]], align 16
  %buf = alloca [4096 x i8], align 16
  %1 = bitcast [3 x [3 x float]]* %mu to i8*
  call void @llvm.lifetime.start(i64 36, i8* %1) #6
  %2 = getelementptr inbounds [4096 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 4096, i8* %2) #6
  br label %3

; <label>:3                                       ; preds = %13, %0
  %indvars.iv40 = phi i64 [ 0, %0 ], [ %indvars.iv.next41, %13 ]
  %xy_pressure.022 = phi float [ 0.000000e+00, %0 ], [ %xy_pressure.1, %13 ]
  %scalar_pressure.021 = phi float [ 0.000000e+00, %0 ], [ %7, %13 ]
  %4 = getelementptr inbounds [3 x float]* %pres, i64 %indvars.iv40, i64 %indvars.iv40
  %5 = load float* %4, align 4, !tbaa !14
  %6 = fdiv float %5, 3.000000e+00
  %7 = fadd float %scalar_pressure.021, %6
  %8 = trunc i64 %indvars.iv40 to i32
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %13, label %10

; <label>:10                                      ; preds = %3
  %11 = fmul float %5, 5.000000e-01
  %12 = fadd float %xy_pressure.022, %11
  br label %13

; <label>:13                                      ; preds = %3, %10
  %xy_pressure.1 = phi float [ %12, %10 ], [ %xy_pressure.022, %3 ]
  %indvars.iv.next41 = add nuw nsw i64 %indvars.iv40, 1
  %exitcond42 = icmp eq i64 %indvars.iv.next41, 3
  br i1 %exitcond42, label %14, label %3

; <label>:14                                      ; preds = %13
  %fabsf = tail call float @fabsf(float %7) #8
  %15 = fpext float %fabsf to double
  %16 = fcmp ogt double %15, 1.200000e-38
  br i1 %16, label %17, label %256

; <label>:17                                      ; preds = %14
  %18 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 36, i32 16, i1 false) #6
  %19 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 29
  %20 = load i32* %19, align 4, !tbaa !22
  switch i32 %20, label %133 [
    i32 0, label %.preheader7
    i32 1, label %.preheader8
    i32 2, label %.preheader10
    i32 3, label %92
  ]

.preheader10:                                     ; preds = %17
  %21 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 15
  %22 = load float* %21, align 4, !tbaa !23
  %23 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 30
  %24 = load float* %23, align 4, !tbaa !19
  br label %.preheader9

.preheader8:                                      ; preds = %17
  %25 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 15
  %26 = load float* %25, align 4, !tbaa !23
  %27 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 30
  %28 = load float* %27, align 4, !tbaa !19
  br label %45

.preheader7:                                      ; preds = %17
  %29 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 15
  %30 = load float* %29, align 4, !tbaa !23
  %31 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 30
  %32 = load float* %31, align 4, !tbaa !19
  br label %33

; <label>:33                                      ; preds = %33, %.preheader7
  %indvars.iv25 = phi i64 [ 0, %.preheader7 ], [ %indvars.iv.next26, %33 ]
  %34 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 32, i64 %indvars.iv25, i64 %indvars.iv25
  %35 = load float* %34, align 4, !tbaa !14
  %36 = fmul float %35, %30
  %37 = fdiv float %36, %32
  %38 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 31, i64 %indvars.iv25, i64 %indvars.iv25
  %39 = load float* %38, align 4, !tbaa !14
  %40 = fsub float %39, %7
  %41 = fmul float %37, %40
  %42 = fdiv float %41, 3.000000e+00
  %43 = fsub float 1.000000e+00, %42
  %44 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 %indvars.iv25, i64 %indvars.iv25
  store float %43, float* %44, align 4, !tbaa !14
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1
  %exitcond27 = icmp eq i64 %indvars.iv.next26, 3
  br i1 %exitcond27, label %.loopexit, label %33

; <label>:45                                      ; preds = %45, %.preheader8
  %indvars.iv28 = phi i64 [ 0, %.preheader8 ], [ %indvars.iv.next29, %45 ]
  %46 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 32, i64 %indvars.iv28, i64 %indvars.iv28
  %47 = load float* %46, align 4, !tbaa !14
  %48 = fmul float %47, %26
  %49 = fdiv float %48, %28
  %50 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 31, i64 %indvars.iv28, i64 %indvars.iv28
  %51 = load float* %50, align 4, !tbaa !14
  %52 = fsub float %51, %xy_pressure.1
  %53 = fmul float %49, %52
  %54 = fdiv float %53, 3.000000e+00
  %55 = fsub float 1.000000e+00, %54
  %56 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 %indvars.iv28, i64 %indvars.iv28
  store float %55, float* %56, align 4, !tbaa !14
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1
  %exitcond30 = icmp eq i64 %indvars.iv.next29, 2
  br i1 %exitcond30, label %57, label %45

; <label>:57                                      ; preds = %45
  %58 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 32, i64 2, i64 2
  %59 = load float* %58, align 4, !tbaa !14
  %60 = fmul float %59, %26
  %61 = fdiv float %60, %28
  %62 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 31, i64 2, i64 2
  %63 = load float* %62, align 4, !tbaa !14
  %64 = getelementptr inbounds [3 x float]* %pres, i64 2, i64 2
  %65 = load float* %64, align 4, !tbaa !14
  %66 = fsub float %63, %65
  %67 = fmul float %61, %66
  %68 = fdiv float %67, 3.000000e+00
  %69 = fsub float 1.000000e+00, %68
  %70 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 2, i64 2
  store float %69, float* %70, align 8, !tbaa !14
  br label %.loopexit

.preheader9:                                      ; preds = %91, %.preheader10
  %indvars.iv34 = phi i64 [ 0, %.preheader10 ], [ %indvars.iv.next35, %91 ]
  br label %71

; <label>:71                                      ; preds = %71, %.preheader9
  %indvars.iv31 = phi i64 [ 0, %.preheader9 ], [ %indvars.iv.next32, %71 ]
  %72 = trunc i64 %indvars.iv31 to i32
  %73 = trunc i64 %indvars.iv34 to i32
  %74 = icmp eq i32 %73, %72
  %75 = select i1 %74, double 1.000000e+00, double 0.000000e+00
  %76 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 32, i64 %indvars.iv34, i64 %indvars.iv31
  %77 = load float* %76, align 4, !tbaa !14
  %78 = fmul float %77, %22
  %79 = fdiv float %78, %24
  %80 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 31, i64 %indvars.iv34, i64 %indvars.iv31
  %81 = load float* %80, align 4, !tbaa !14
  %82 = getelementptr inbounds [3 x float]* %pres, i64 %indvars.iv34, i64 %indvars.iv31
  %83 = load float* %82, align 4, !tbaa !14
  %84 = fsub float %81, %83
  %85 = fmul float %79, %84
  %86 = fdiv float %85, 3.000000e+00
  %87 = fpext float %86 to double
  %88 = fsub double %75, %87
  %89 = fptrunc double %88 to float
  %90 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 %indvars.iv34, i64 %indvars.iv31
  store float %89, float* %90, align 4, !tbaa !14
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1
  %exitcond33 = icmp eq i64 %indvars.iv.next32, 3
  br i1 %exitcond33, label %91, label %71

; <label>:91                                      ; preds = %71
  %indvars.iv.next35 = add nuw nsw i64 %indvars.iv34, 1
  %exitcond36 = icmp eq i64 %indvars.iv.next35, 3
  br i1 %exitcond36, label %.loopexit11, label %.preheader9

; <label>:92                                      ; preds = %17
  %93 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 32, i64 2, i64 2
  %94 = load float* %93, align 4, !tbaa !14
  %fabsf1 = tail call float @fabsf(float %94) #8
  %95 = fpext float %fabsf1 to double
  %96 = fcmp ogt double %95, 1.200000e-38
  %97 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 15
  %98 = load float* %97, align 4, !tbaa !23
  %99 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 30
  %100 = load float* %99, align 4, !tbaa !19
  br i1 %96, label %101, label %._crit_edge

._crit_edge:                                      ; preds = %92
  %.phi.trans.insert45 = getelementptr inbounds [3 x float]* %pres, i64 2, i64 2
  %.pre46 = load float* %.phi.trans.insert45, align 4, !tbaa !14
  br label %109

; <label>:101                                     ; preds = %92
  %102 = fdiv float %98, %100
  %103 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 31, i64 2, i64 2
  %104 = load float* %103, align 4, !tbaa !14
  %105 = getelementptr inbounds [3 x float]* %pres, i64 2, i64 2
  %106 = load float* %105, align 4, !tbaa !14
  %107 = fsub float %104, %106
  %108 = fmul float %102, %107
  br label %109

; <label>:109                                     ; preds = %._crit_edge, %101
  %110 = phi float [ %106, %101 ], [ %.pre46, %._crit_edge ]
  %p_corr_z.0 = phi float [ %108, %101 ], [ 0.000000e+00, %._crit_edge ]
  %111 = fmul float %p_corr_z.0, %94
  %112 = fsub float 1.000000e+00, %111
  %113 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 2, i64 2
  store float %112, float* %113, align 8, !tbaa !14
  %114 = getelementptr inbounds [3 x float]* %box, i64 2, i64 2
  %115 = load float* %114, align 4, !tbaa !14
  %116 = fadd float %p_corr_z.0, %110
  %117 = fsub float %116, %xy_pressure.1
  br label %118

; <label>:118                                     ; preds = %._crit_edge47, %109
  %119 = phi float [ %112, %109 ], [ %.pre48, %._crit_edge47 ]
  %indvars.iv37 = phi i64 [ 0, %109 ], [ %indvars.iv.next38, %._crit_edge47 ]
  %120 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 32, i64 %indvars.iv37, i64 %indvars.iv37
  %121 = load float* %120, align 4, !tbaa !14
  %122 = fmul float %121, %98
  %123 = fdiv float %122, %100
  %124 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 31, i64 %indvars.iv37, i64 %indvars.iv37
  %125 = load float* %124, align 4, !tbaa !14
  %126 = fmul float %119, %115
  %127 = fdiv float %125, %126
  %128 = fsub float %127, %117
  %129 = fmul float %123, %128
  %130 = fmul float %129, 5.000000e-01
  %131 = fadd float %130, 1.000000e+00
  %132 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 %indvars.iv37, i64 %indvars.iv37
  store float %131, float* %132, align 4, !tbaa !14
  %indvars.iv.next38 = add nuw nsw i64 %indvars.iv37, 1
  %exitcond39 = icmp eq i64 %indvars.iv.next38, 2
  br i1 %exitcond39, label %.loopexit, label %._crit_edge47

._crit_edge47:                                    ; preds = %118
  %.pre48 = load float* %113, align 8, !tbaa !14
  br label %118

; <label>:133                                     ; preds = %17
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([55 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str5, i64 0, i64 0)) #9
  br label %.loopexit

.loopexit11:                                      ; preds = %91
  %.phi.trans.insert49 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 1, i64 0
  %.pre50 = load float* %.phi.trans.insert49, align 4, !tbaa !14
  %.phi.trans.insert51 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 0, i64 1
  %.pre52 = load float* %.phi.trans.insert51, align 4, !tbaa !14
  %.phi.trans.insert53 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 2, i64 0
  %.pre54 = load float* %.phi.trans.insert53, align 8, !tbaa !14
  %.phi.trans.insert55 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 0, i64 2
  %.pre56 = load float* %.phi.trans.insert55, align 8, !tbaa !14
  %.phi.trans.insert57 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 2, i64 1
  %.pre58 = load float* %.phi.trans.insert57, align 4, !tbaa !14
  %.phi.trans.insert59 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 1, i64 2
  %.pre60 = load float* %.phi.trans.insert59, align 4, !tbaa !14
  br label %.loopexit

.loopexit:                                        ; preds = %118, %33, %.loopexit11, %133, %57
  %134 = phi float [ %.pre60, %.loopexit11 ], [ 0.000000e+00, %133 ], [ 0.000000e+00, %57 ], [ 0.000000e+00, %33 ], [ 0.000000e+00, %118 ]
  %135 = phi float [ %.pre58, %.loopexit11 ], [ 0.000000e+00, %133 ], [ 0.000000e+00, %57 ], [ 0.000000e+00, %33 ], [ 0.000000e+00, %118 ]
  %136 = phi float [ %.pre56, %.loopexit11 ], [ 0.000000e+00, %133 ], [ 0.000000e+00, %57 ], [ 0.000000e+00, %33 ], [ 0.000000e+00, %118 ]
  %137 = phi float [ %.pre54, %.loopexit11 ], [ 0.000000e+00, %133 ], [ 0.000000e+00, %57 ], [ 0.000000e+00, %33 ], [ 0.000000e+00, %118 ]
  %138 = phi float [ %.pre52, %.loopexit11 ], [ 0.000000e+00, %133 ], [ 0.000000e+00, %57 ], [ 0.000000e+00, %33 ], [ 0.000000e+00, %118 ]
  %139 = phi float [ %.pre50, %.loopexit11 ], [ 0.000000e+00, %133 ], [ 0.000000e+00, %57 ], [ 0.000000e+00, %33 ], [ 0.000000e+00, %118 ]
  %140 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 0, i64 1
  %141 = fadd float %139, %138
  store float %141, float* %140, align 4, !tbaa !14
  %142 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 0, i64 2
  %143 = fadd float %137, %136
  store float %143, float* %142, align 8, !tbaa !14
  %144 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 1, i64 2
  %145 = fadd float %135, %134
  store float %145, float* %144, align 4, !tbaa !14
  %146 = load %struct.__sFILE** @debug, align 8, !tbaa !18
  %147 = icmp eq %struct.__sFILE* %146, null
  br i1 %147, label %150, label %148

; <label>:148                                     ; preds = %.loopexit
  tail call void @pr_rvecs(%struct.__sFILE* %146, i32 0, i8* getelementptr inbounds ([10 x i8]* @.str8, i64 0, i64 0), [3 x float]* %pres, i32 3) #9
  %149 = load %struct.__sFILE** @debug, align 8, !tbaa !18
  call void @pr_rvecs(%struct.__sFILE* %149, i32 0, i8* getelementptr inbounds ([10 x i8]* @.str9, i64 0, i64 0), [3 x float]* %18, i32 3) #9
  br label %150

; <label>:150                                     ; preds = %.loopexit, %148
  %151 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 0, i64 0
  %152 = load float* %151, align 16, !tbaa !14
  %153 = fpext float %152 to double
  %154 = fcmp olt double %153, 9.900000e-01
  %155 = fcmp ogt double %153, 1.010000e+00
  %or.cond3 = or i1 %154, %155
  %.phi.trans.insert62 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 1, i64 1
  %.pre63 = load float* %.phi.trans.insert62, align 4, !tbaa !14
  br i1 %or.cond3, label %._crit_edge61, label %156

; <label>:156                                     ; preds = %150
  %157 = fpext float %.pre63 to double
  %158 = fcmp olt double %157, 9.900000e-01
  %159 = fcmp ogt double %157, 1.010000e+00
  %or.cond4 = or i1 %158, %159
  br i1 %or.cond4, label %._crit_edge61, label %160

; <label>:160                                     ; preds = %156
  %161 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 2, i64 2
  %162 = load float* %161, align 8, !tbaa !14
  %163 = fpext float %162 to double
  %164 = fcmp olt double %163, 9.900000e-01
  %165 = fcmp ogt double %163, 1.010000e+00
  %or.cond5 = or i1 %164, %165
  br i1 %or.cond5, label %._crit_edge61, label %.preheader6

._crit_edge61:                                    ; preds = %150, %160, %156
  %166 = fpext float %.pre63 to double
  %167 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 2, i64 2
  %168 = load float* %167, align 8, !tbaa !14
  %169 = fpext float %168 to double
  %170 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %2, i32 0, i64 4096, i8* getelementptr inbounds ([65 x i8]* @.str10, i64 0, i64 0), i32 %step, double %153, double %166, double %169) #9
  %171 = load %struct.__sFILE** @stdlog, align 8, !tbaa !18
  %172 = icmp eq %struct.__sFILE* %171, null
  br i1 %172, label %174, label %173

; <label>:173                                     ; preds = %._crit_edge61
  %fputs2 = call i32 @fputs(i8* %2, %struct.__sFILE* %171)
  br label %174

; <label>:174                                     ; preds = %._crit_edge61, %173
  %175 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !18
  %fputs = call i32 @fputs(i8* %2, %struct.__sFILE* %175)
  br label %.preheader6

.preheader6:                                      ; preds = %160, %174
  %176 = icmp sgt i32 %nr_atoms, 0
  br i1 %176, label %.lr.ph, label %.preheader6..preheader_crit_edge

.preheader6..preheader_crit_edge:                 ; preds = %.preheader6
  %.pre64 = load float* %151, align 16, !tbaa !14
  %.pre65 = load float* %140, align 4, !tbaa !14
  %.pre66 = load float* %142, align 8, !tbaa !14
  %.phi.trans.insert67 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 1, i64 1
  %.pre68 = load float* %.phi.trans.insert67, align 4, !tbaa !14
  %.pre69 = load float* %144, align 4, !tbaa !14
  %.phi.trans.insert70 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 2, i64 2
  %.pre71 = load float* %.phi.trans.insert70, align 8, !tbaa !14
  br label %.preheader

.lr.ph:                                           ; preds = %.preheader6
  %177 = add nsw i32 %nr_atoms, %start
  %178 = load float* %151, align 16, !tbaa !14
  %179 = load float* %140, align 4, !tbaa !14
  %180 = load float* %142, align 8, !tbaa !14
  %181 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 1, i64 1
  %182 = load float* %181, align 4, !tbaa !14
  %183 = load float* %144, align 4, !tbaa !14
  %184 = getelementptr inbounds [3 x [3 x float]]* %mu, i64 0, i64 2, i64 2
  %185 = load float* %184, align 8, !tbaa !14
  %186 = sext i32 %start to i64
  %187 = sext i32 %177 to i64
  br label %194

.preheader:                                       ; preds = %233, %.preheader6..preheader_crit_edge
  %188 = phi float [ %.pre71, %.preheader6..preheader_crit_edge ], [ %185, %233 ]
  %189 = phi float [ %.pre69, %.preheader6..preheader_crit_edge ], [ %183, %233 ]
  %190 = phi float [ %.pre68, %.preheader6..preheader_crit_edge ], [ %182, %233 ]
  %191 = phi float [ %.pre66, %.preheader6..preheader_crit_edge ], [ %180, %233 ]
  %192 = phi float [ %.pre65, %.preheader6..preheader_crit_edge ], [ %179, %233 ]
  %193 = phi float [ %.pre64, %.preheader6..preheader_crit_edge ], [ %178, %233 ]
  br label %235

; <label>:194                                     ; preds = %.lr.ph, %233
  %indvars.iv23 = phi i64 [ %186, %.lr.ph ], [ %indvars.iv.next24, %233 ]
  %195 = getelementptr inbounds i16* %cFREEZE, i64 %indvars.iv23
  %196 = load i16* %195, align 2, !tbaa !24
  %197 = zext i16 %196 to i64
  %198 = getelementptr inbounds [3 x i32]* %nFreeze, i64 %197, i64 0
  %199 = load i32* %198, align 4, !tbaa !25
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %213

; <label>:201                                     ; preds = %194
  %202 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv23, i64 0
  %203 = load float* %202, align 4, !tbaa !14
  %204 = fmul float %178, %203
  %205 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv23, i64 1
  %206 = load float* %205, align 4, !tbaa !14
  %207 = fmul float %179, %206
  %208 = fadd float %204, %207
  %209 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv23, i64 2
  %210 = load float* %209, align 4, !tbaa !14
  %211 = fmul float %180, %210
  %212 = fadd float %208, %211
  store float %212, float* %202, align 4, !tbaa !14
  br label %213

; <label>:213                                     ; preds = %194, %201
  %214 = getelementptr inbounds [3 x i32]* %nFreeze, i64 %197, i64 1
  %215 = load i32* %214, align 4, !tbaa !25
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %225

; <label>:217                                     ; preds = %213
  %218 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv23, i64 1
  %219 = load float* %218, align 4, !tbaa !14
  %220 = fmul float %182, %219
  %221 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv23, i64 2
  %222 = load float* %221, align 4, !tbaa !14
  %223 = fmul float %183, %222
  %224 = fadd float %220, %223
  store float %224, float* %218, align 4, !tbaa !14
  br label %225

; <label>:225                                     ; preds = %213, %217
  %226 = getelementptr inbounds [3 x i32]* %nFreeze, i64 %197, i64 2
  %227 = load i32* %226, align 4, !tbaa !25
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %233

; <label>:229                                     ; preds = %225
  %230 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv23, i64 2
  %231 = load float* %230, align 4, !tbaa !14
  %232 = fmul float %185, %231
  store float %232, float* %230, align 4, !tbaa !14
  br label %233

; <label>:233                                     ; preds = %225, %229
  %indvars.iv.next24 = add nsw i64 %indvars.iv23, 1
  %234 = icmp slt i64 %indvars.iv.next24, %187
  br i1 %234, label %194, label %.preheader

; <label>:235                                     ; preds = %235, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %235 ]
  %236 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv, i64 0
  %237 = load float* %236, align 4, !tbaa !14
  %238 = fmul float %193, %237
  %239 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv, i64 1
  %240 = load float* %239, align 4, !tbaa !14
  %241 = fmul float %192, %240
  %242 = fadd float %238, %241
  %243 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv, i64 2
  %244 = load float* %243, align 4, !tbaa !14
  %245 = fmul float %191, %244
  %246 = fadd float %242, %245
  store float %246, float* %236, align 4, !tbaa !14
  %247 = fmul float %190, %240
  %248 = fmul float %189, %244
  %249 = fadd float %247, %248
  store float %249, float* %239, align 4, !tbaa !14
  %250 = fmul float %188, %244
  store float %250, float* %243, align 4, !tbaa !14
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %251, label %235

; <label>:251                                     ; preds = %235
  %252 = sitofp i32 %nr_atoms to double
  %253 = getelementptr inbounds %struct.t_nrnb* %nrnb, i64 0, i32 0, i64 111
  %254 = load double* %253, align 8, !tbaa !16
  %255 = fadd double %252, %254
  store double %255, double* %253, align 8, !tbaa !16
  br label %256

; <label>:256                                     ; preds = %251, %14
  call void @llvm.lifetime.end(i64 4096, i8* %2) #6
  call void @llvm.lifetime.end(i64 36, i8* %1) #6
  ret void
}
