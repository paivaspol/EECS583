define internal fastcc void @mtmul([3 x float]* nocapture readonly %a, [3 x float]* nocapture readonly %b, [3 x float]* nocapture %dest) #4 {
  %1 = getelementptr inbounds [3 x float]* %a, i64 0, i64 0
  %2 = load float* %1, align 4, !tbaa !14
  %3 = getelementptr inbounds [3 x float]* %b, i64 0, i64 0
  %4 = load float* %3, align 4, !tbaa !14
  %5 = fmul float %2, %4
  %6 = getelementptr inbounds [3 x float]* %a, i64 0, i64 1
  %7 = load float* %6, align 4, !tbaa !14
  %8 = getelementptr inbounds [3 x float]* %b, i64 0, i64 1
  %9 = load float* %8, align 4, !tbaa !14
  %10 = fmul float %7, %9
  %11 = fadd float %5, %10
  %12 = getelementptr inbounds [3 x float]* %a, i64 0, i64 2
  %13 = load float* %12, align 4, !tbaa !14
  %14 = getelementptr inbounds [3 x float]* %b, i64 0, i64 2
  %15 = load float* %14, align 4, !tbaa !14
  %16 = fmul float %13, %15
  %17 = fadd float %11, %16
  %18 = getelementptr inbounds [3 x float]* %dest, i64 0, i64 0
  store float %17, float* %18, align 4, !tbaa !14
  %19 = load float* %1, align 4, !tbaa !14
  %20 = getelementptr inbounds [3 x float]* %b, i64 1, i64 0
  %21 = load float* %20, align 4, !tbaa !14
  %22 = fmul float %19, %21
  %23 = load float* %6, align 4, !tbaa !14
  %24 = getelementptr inbounds [3 x float]* %b, i64 1, i64 1
  %25 = load float* %24, align 4, !tbaa !14
  %26 = fmul float %23, %25
  %27 = fadd float %22, %26
  %28 = load float* %12, align 4, !tbaa !14
  %29 = getelementptr inbounds [3 x float]* %b, i64 1, i64 2
  %30 = load float* %29, align 4, !tbaa !14
  %31 = fmul float %28, %30
  %32 = fadd float %27, %31
  %33 = getelementptr inbounds [3 x float]* %dest, i64 0, i64 1
  store float %32, float* %33, align 4, !tbaa !14
  %34 = load float* %1, align 4, !tbaa !14
  %35 = getelementptr inbounds [3 x float]* %b, i64 2, i64 0
  %36 = load float* %35, align 4, !tbaa !14
  %37 = fmul float %34, %36
  %38 = load float* %6, align 4, !tbaa !14
  %39 = getelementptr inbounds [3 x float]* %b, i64 2, i64 1
  %40 = load float* %39, align 4, !tbaa !14
  %41 = fmul float %38, %40
  %42 = fadd float %37, %41
  %43 = load float* %12, align 4, !tbaa !14
  %44 = getelementptr inbounds [3 x float]* %b, i64 2, i64 2
  %45 = load float* %44, align 4, !tbaa !14
  %46 = fmul float %43, %45
  %47 = fadd float %42, %46
  %48 = getelementptr inbounds [3 x float]* %dest, i64 0, i64 2
  store float %47, float* %48, align 4, !tbaa !14
  %49 = getelementptr inbounds [3 x float]* %a, i64 1, i64 0
  %50 = load float* %49, align 4, !tbaa !14
  %51 = load float* %3, align 4, !tbaa !14
  %52 = fmul float %50, %51
  %53 = getelementptr inbounds [3 x float]* %a, i64 1, i64 1
  %54 = load float* %53, align 4, !tbaa !14
  %55 = load float* %8, align 4, !tbaa !14
  %56 = fmul float %54, %55
  %57 = fadd float %52, %56
  %58 = getelementptr inbounds [3 x float]* %a, i64 1, i64 2
  %59 = load float* %58, align 4, !tbaa !14
  %60 = load float* %14, align 4, !tbaa !14
  %61 = fmul float %59, %60
  %62 = fadd float %57, %61
  %63 = getelementptr inbounds [3 x float]* %dest, i64 1, i64 0
  store float %62, float* %63, align 4, !tbaa !14
  %64 = load float* %49, align 4, !tbaa !14
  %65 = load float* %20, align 4, !tbaa !14
  %66 = fmul float %64, %65
  %67 = load float* %53, align 4, !tbaa !14
  %68 = load float* %24, align 4, !tbaa !14
  %69 = fmul float %67, %68
  %70 = fadd float %66, %69
  %71 = load float* %58, align 4, !tbaa !14
  %72 = load float* %29, align 4, !tbaa !14
  %73 = fmul float %71, %72
  %74 = fadd float %70, %73
  %75 = getelementptr inbounds [3 x float]* %dest, i64 1, i64 1
  store float %74, float* %75, align 4, !tbaa !14
  %76 = load float* %49, align 4, !tbaa !14
  %77 = load float* %35, align 4, !tbaa !14
  %78 = fmul float %76, %77
  %79 = load float* %53, align 4, !tbaa !14
  %80 = load float* %39, align 4, !tbaa !14
  %81 = fmul float %79, %80
  %82 = fadd float %78, %81
  %83 = load float* %58, align 4, !tbaa !14
  %84 = load float* %44, align 4, !tbaa !14
  %85 = fmul float %83, %84
  %86 = fadd float %82, %85
  %87 = getelementptr inbounds [3 x float]* %dest, i64 1, i64 2
  store float %86, float* %87, align 4, !tbaa !14
  %88 = getelementptr inbounds [3 x float]* %a, i64 2, i64 0
  %89 = load float* %88, align 4, !tbaa !14
  %90 = load float* %3, align 4, !tbaa !14
  %91 = fmul float %89, %90
  %92 = getelementptr inbounds [3 x float]* %a, i64 2, i64 1
  %93 = load float* %92, align 4, !tbaa !14
  %94 = load float* %8, align 4, !tbaa !14
  %95 = fmul float %93, %94
  %96 = fadd float %91, %95
  %97 = getelementptr inbounds [3 x float]* %a, i64 2, i64 2
  %98 = load float* %97, align 4, !tbaa !14
  %99 = load float* %14, align 4, !tbaa !14
  %100 = fmul float %98, %99
  %101 = fadd float %96, %100
  %102 = getelementptr inbounds [3 x float]* %dest, i64 2, i64 0
  store float %101, float* %102, align 4, !tbaa !14
  %103 = load float* %88, align 4, !tbaa !14
  %104 = load float* %20, align 4, !tbaa !14
  %105 = fmul float %103, %104
  %106 = load float* %92, align 4, !tbaa !14
  %107 = load float* %24, align 4, !tbaa !14
  %108 = fmul float %106, %107
  %109 = fadd float %105, %108
  %110 = load float* %97, align 4, !tbaa !14
  %111 = load float* %29, align 4, !tbaa !14
  %112 = fmul float %110, %111
  %113 = fadd float %109, %112
  %114 = getelementptr inbounds [3 x float]* %dest, i64 2, i64 1
  store float %113, float* %114, align 4, !tbaa !14
  %115 = load float* %88, align 4, !tbaa !14
  %116 = load float* %35, align 4, !tbaa !14
  %117 = fmul float %115, %116
  %118 = load float* %92, align 4, !tbaa !14
  %119 = load float* %39, align 4, !tbaa !14
  %120 = fmul float %118, %119
  %121 = fadd float %117, %120
  %122 = load float* %97, align 4, !tbaa !14
  %123 = load float* %44, align 4, !tbaa !14
  %124 = fmul float %122, %123
  %125 = fadd float %121, %124
  %126 = getelementptr inbounds [3 x float]* %dest, i64 2, i64 2
  store float %125, float* %126, align 4, !tbaa !14
  ret void
}
