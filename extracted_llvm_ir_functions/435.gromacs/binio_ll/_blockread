define void @_blockread(%struct._IO_FILE* nocapture %fp, i32 %nelem, i32 %size, i8* nocapture %data, i8* %what, i8* %file, i32 %line) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._IO_FILE* %fp}, i64 0, metadata !77), !dbg !94
  tail call void @llvm.dbg.value(metadata !{i32 %nelem}, i64 0, metadata !78), !dbg !94
  tail call void @llvm.dbg.value(metadata !{i32 %size}, i64 0, metadata !79), !dbg !94
  tail call void @llvm.dbg.value(metadata !{i8* %data}, i64 0, metadata !80), !dbg !94
  tail call void @llvm.dbg.value(metadata !{i8* %what}, i64 0, metadata !81), !dbg !94
  tail call void @llvm.dbg.value(metadata !{i8* %file}, i64 0, metadata !82), !dbg !94
  tail call void @llvm.dbg.value(metadata !{i32 %line}, i64 0, metadata !83), !dbg !95
  %conv = sext i32 %size to i64, !dbg !96
  %conv1 = sext i32 %nelem to i64, !dbg !96
  %call = tail call i64 @fread(i8* %data, i64 %conv, i64 %conv1, %struct._IO_FILE* %fp) #5, !dbg !96
  %conv2 = trunc i64 %call to i32, !dbg !96
  tail call void @llvm.dbg.value(metadata !{i32 %conv2}, i64 0, metadata !84), !dbg !96
  %cmp = icmp eq i32 %conv2, %nelem, !dbg !96
  br i1 %cmp, label %if.end, label %if.then, !dbg !96

if.then:                                          ; preds = %entry
  %call4 = tail call i32* @__errno_location() #6, !dbg !97
  %0 = load i32* %call4, align 4, !dbg !97, !tbaa !89
  %call5 = tail call i64 @ftell(%struct._IO_FILE* %fp) #5, !dbg !98
  tail call void (i32, i8*, ...)* @fatal_error(i32 %0, i8* getelementptr inbounds ([57 x i8]* @.str1, i64 0, i64 0), i8* %what, i32 %nelem, i32 %size, i32 %conv2, i64 %call5, i8* %file, i32 %line) #5, !dbg !98
  br label %if.end, !dbg !98

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !99
}
