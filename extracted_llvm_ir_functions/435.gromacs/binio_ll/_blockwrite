define void @_blockwrite(%struct._IO_FILE* nocapture %fp, i32 %nelem, i32 %size, i8* nocapture %data, i8* %what, i8* %file, i32 %line) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._IO_FILE* %fp}, i64 0, metadata !67), !dbg !85
  tail call void @llvm.dbg.value(metadata !{i32 %nelem}, i64 0, metadata !68), !dbg !85
  tail call void @llvm.dbg.value(metadata !{i32 %size}, i64 0, metadata !69), !dbg !85
  tail call void @llvm.dbg.value(metadata !{i8* %data}, i64 0, metadata !70), !dbg !85
  tail call void @llvm.dbg.value(metadata !{i8* %what}, i64 0, metadata !71), !dbg !85
  tail call void @llvm.dbg.value(metadata !{i8* %file}, i64 0, metadata !72), !dbg !85
  tail call void @llvm.dbg.value(metadata !{i32 %line}, i64 0, metadata !73), !dbg !86
  %conv = sext i32 %size to i64, !dbg !87
  %conv1 = sext i32 %nelem to i64, !dbg !87
  %call = tail call i64 @fwrite(i8* %data, i64 %conv, i64 %conv1, %struct._IO_FILE* %fp) #5, !dbg !87
  %conv2 = trunc i64 %call to i32, !dbg !87
  tail call void @llvm.dbg.value(metadata !{i32 %conv2}, i64 0, metadata !74), !dbg !87
  %cmp = icmp eq i32 %conv2, %nelem, !dbg !87
  br i1 %cmp, label %if.end, label %if.then, !dbg !87

if.then:                                          ; preds = %entry
  %call4 = tail call i32* @__errno_location() #6, !dbg !88
  %0 = load i32* %call4, align 4, !dbg !88, !tbaa !89
  %call5 = tail call i64 @ftell(%struct._IO_FILE* %fp) #5, !dbg !92
  tail call void (i32, i8*, ...)* @fatal_error(i32 %0, i8* getelementptr inbounds ([57 x i8]* @.str, i64 0, i64 0), i8* %what, i32 %nelem, i32 %size, i32 %conv2, i64 %call5, i8* %file, i32 %line) #5, !dbg !92
  br label %if.end, !dbg !92

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !93
}
