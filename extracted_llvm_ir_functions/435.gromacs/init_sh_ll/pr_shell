define internal fastcc void @pr_shell(%struct.__sFILE* %log, i32 %ns, %struct.t_shell* nocapture readonly %s) #4 {
  %1 = icmp eq %struct.__sFILE* %log, null
  br i1 %1, label %.loopexit, label %2

; <label>:2                                       ; preds = %0
  %3 = tail call i64 @fwrite(i8* getelementptr inbounds ([12 x i8]* @.str10, i64 0, i64 0), i64 11, i64 1, %struct.__sFILE* %log)
  %4 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %log, i8* getelementptr inbounds ([25 x i8]* @.str11, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str12, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str13, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str14, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str15, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str16, i64 0, i64 0)) #7
  %5 = icmp sgt i32 %ns, 0
  br i1 %5, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %2
  %6 = add i32 %ns, -1
  br label %7

; <label>:7                                       ; preds = %30, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %30 ]
  %8 = getelementptr inbounds %struct.t_shell* %s, i64 %indvars.iv, i32 1
  %9 = load i32* %8, align 4, !tbaa !35
  %10 = getelementptr inbounds %struct.t_shell* %s, i64 %indvars.iv, i32 6
  %11 = load float* %10, align 4, !tbaa !25
  %12 = fpext float %11 to double
  %13 = fdiv double 1.000000e+00, %12
  %14 = getelementptr inbounds %struct.t_shell* %s, i64 %indvars.iv, i32 2
  %15 = load i32* %14, align 4, !tbaa !36
  %16 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %log, i8* getelementptr inbounds ([16 x i8]* @.str17, i64 0, i64 0), i32 %9, double %13, i32 %15) #7
  %17 = getelementptr inbounds %struct.t_shell* %s, i64 %indvars.iv, i32 0
  %18 = load i32* %17, align 4, !tbaa !23
  switch i32 %18, label %29 [
    i32 2, label %19
    i32 3, label %23
  ]

; <label>:19                                      ; preds = %7
  %20 = getelementptr inbounds %struct.t_shell* %s, i64 %indvars.iv, i32 3
  %21 = load i32* %20, align 4, !tbaa !37
  %22 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %log, i8* getelementptr inbounds ([7 x i8]* @.str18, i64 0, i64 0), i32 %21) #7
  br label %30

; <label>:23                                      ; preds = %7
  %24 = getelementptr inbounds %struct.t_shell* %s, i64 %indvars.iv, i32 3
  %25 = load i32* %24, align 4, !tbaa !37
  %26 = getelementptr inbounds %struct.t_shell* %s, i64 %indvars.iv, i32 4
  %27 = load i32* %26, align 4, !tbaa !38
  %28 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %log, i8* getelementptr inbounds ([12 x i8]* @.str19, i64 0, i64 0), i32 %25, i32 %27) #7
  br label %30

; <label>:29                                      ; preds = %7
  %fputc = tail call i32 @fputc(i32 10, %struct.__sFILE* %log)
  br label %30

; <label>:30                                      ; preds = %19, %29, %23
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %6
  br i1 %exitcond, label %.loopexit, label %7

.loopexit:                                        ; preds = %30, %2, %0
  ret void
}
