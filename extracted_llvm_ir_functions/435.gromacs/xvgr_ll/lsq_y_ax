define void @lsq_y_ax(i32 %n, float* nocapture %x, float* nocapture %y, float* nocapture %a) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %n}, i64 0, metadata !147), !dbg !315
  tail call void @llvm.dbg.value(metadata !{float* %x}, i64 0, metadata !148), !dbg !315
  tail call void @llvm.dbg.value(metadata !{float* %y}, i64 0, metadata !149), !dbg !315
  tail call void @llvm.dbg.value(metadata !{float* %a}, i64 0, metadata !150), !dbg !315
  tail call void @llvm.dbg.value(metadata !316, i64 0, metadata !152), !dbg !317
  tail call void @llvm.dbg.value(metadata !316, i64 0, metadata !154), !dbg !317
  tail call void @llvm.dbg.value(metadata !18, i64 0, metadata !151), !dbg !318
  %cmp20 = icmp sgt i32 %n, 0, !dbg !318
  br i1 %cmp20, label %for.body, label %for.end, !dbg !318

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %yx.023 = phi double [ %add, %for.body ], [ 0.000000e+00, %entry ]
  %xx.022 = phi double [ %add9, %for.body ], [ 0.000000e+00, %entry ]
  %arrayidx = getelementptr inbounds float* %y, i64 %indvars.iv, !dbg !320
  %0 = load float* %arrayidx, align 4, !dbg !320, !tbaa !322
  %arrayidx2 = getelementptr inbounds float* %x, i64 %indvars.iv, !dbg !320
  %1 = load float* %arrayidx2, align 4, !dbg !320, !tbaa !322
  %mul = fmul float %0, %1, !dbg !320
  %conv = fpext float %mul to double, !dbg !320
  %add = fadd double %yx.023, %conv, !dbg !320
  tail call void @llvm.dbg.value(metadata !{double %add}, i64 0, metadata !154), !dbg !320
  %mul7 = fmul float %1, %1, !dbg !323
  %conv8 = fpext float %mul7 to double, !dbg !323
  %add9 = fadd double %xx.022, %conv8, !dbg !323
  tail call void @llvm.dbg.value(metadata !{double %add9}, i64 0, metadata !152), !dbg !323
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !318
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !318
  %exitcond = icmp eq i32 %lftr.wideiv, %n, !dbg !318
  br i1 %exitcond, label %for.end, label %for.body, !dbg !318

for.end:                                          ; preds = %for.body, %entry
  %yx.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add, %for.body ]
  %xx.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add9, %for.body ]
  %div = fdiv double %yx.0.lcssa, %xx.0.lcssa, !dbg !324
  %conv10 = fptrunc double %div to float, !dbg !324
  store float %conv10, float* %a, align 4, !dbg !324, !tbaa !322
  ret void, !dbg !325
}
