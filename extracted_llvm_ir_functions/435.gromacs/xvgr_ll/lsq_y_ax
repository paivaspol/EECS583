define void @lsq_y_ax(i32 %n, float* nocapture %x, float* nocapture %y, float* nocapture %a) #0 {
entry:
  %cmp20 = icmp sgt i32 %n, 0
  br i1 %cmp20, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %yx.023 = phi double [ %add, %for.body ], [ 0.000000e+00, %entry ]
  %xx.022 = phi double [ %add9, %for.body ], [ 0.000000e+00, %entry ]
  %arrayidx = getelementptr inbounds float* %y, i64 %indvars.iv
  %0 = load float* %arrayidx, align 4, !tbaa !3
  %arrayidx2 = getelementptr inbounds float* %x, i64 %indvars.iv
  %1 = load float* %arrayidx2, align 4, !tbaa !3
  %mul = fmul float %0, %1
  %conv = fpext float %mul to double
  %add = fadd double %yx.023, %conv
  %mul7 = fmul float %1, %1
  %conv8 = fpext float %mul7 to double
  %add9 = fadd double %xx.022, %conv8
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %n
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %yx.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add, %for.body ]
  %xx.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add9, %for.body ]
  %div = fdiv double %yx.0.lcssa, %xx.0.lcssa
  %conv10 = fptrunc double %div to float
  store float %conv10, float* %a, align 4, !tbaa !3
  ret void
}
