define %struct._IO_FILE* @xvgropen(i8* %fn, i8* %title, i8* %xaxis, i8* %yaxis) #0 {
entry:
  %t = alloca i64, align 8
  %call = call %struct._IO_FILE* @ffopen(i8* %fn, i8* getelementptr inbounds ([2 x i8]* @.str, i64 0, i64 0)) #6
  %call1 = call i8* @Program() #6
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([31 x i8]* @.str1, i64 0, i64 0), i8* %call1) #6
  %0 = call i64 @fwrite(i8* getelementptr inbounds ([35 x i8]* @.str2, i64 0, i64 0), i64 34, i64 1, %struct._IO_FILE* %call)
  %call4 = call i8* @bromacs() #6
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([6 x i8]* @.str3, i64 0, i64 0), i8* %call4) #6
  %call6 = call i64 @time(i64* %t) #6
  %call7 = call i8* @ctime(i64* %t) #6
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0), i8* %call7) #6
  %1 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str5, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %call)
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([17 x i8]* @.str6, i64 0, i64 0), i8* %title) #6
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([24 x i8]* @.str7, i64 0, i64 0), i8* %xaxis) #6
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([24 x i8]* @.str8, i64 0, i64 0), i8* %yaxis) #6
  %2 = call i64 @fwrite(i8* getelementptr inbounds ([10 x i8]* @.str10, i64 0, i64 0), i64 9, i64 1, %struct._IO_FILE* %call)
  ret %struct._IO_FILE* %call
}
