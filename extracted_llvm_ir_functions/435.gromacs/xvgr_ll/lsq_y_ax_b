define float @lsq_y_ax_b(i32 %n, float* nocapture readonly %x, float* nocapture readonly %y, float* nocapture %a, float* nocapture %b) #4 {
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !279, metadata !382), !dbg !675
  tail call void @llvm.dbg.value(metadata float* %x, i64 0, metadata !280, metadata !382), !dbg !676
  tail call void @llvm.dbg.value(metadata float* %y, i64 0, metadata !281, metadata !382), !dbg !677
  tail call void @llvm.dbg.value(metadata float* %a, i64 0, metadata !282, metadata !382), !dbg !678
  tail call void @llvm.dbg.value(metadata float* %b, i64 0, metadata !283, metadata !382), !dbg !679
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !288, metadata !382), !dbg !680
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !287, metadata !382), !dbg !681
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !286, metadata !382), !dbg !682
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !285, metadata !382), !dbg !683
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !284, metadata !382), !dbg !684
  %1 = icmp sgt i32 %n, 0, !dbg !685
  br i1 %1, label %.lr.ph9, label %._crit_edge10, !dbg !688

.lr.ph9:                                          ; preds = %0
  %2 = add i32 %n, -1, !dbg !688
  br label %3, !dbg !688

; <label>:3                                       ; preds = %3, %.lr.ph9
  %indvars.iv19 = phi i64 [ 0, %.lr.ph9 ], [ %indvars.iv.next20, %3 ]
  %4 = phi <2 x double> [ zeroinitializer, %.lr.ph9 ], [ %19, %3 ]
  %5 = phi <2 x double> [ zeroinitializer, %.lr.ph9 ], [ %15, %3 ]
  %6 = getelementptr inbounds float* %y, i64 %indvars.iv19, !dbg !689
  %7 = load float* %6, align 4, !dbg !689, !tbaa !510
  %8 = getelementptr inbounds float* %x, i64 %indvars.iv19, !dbg !691
  %9 = load float* %8, align 4, !dbg !691, !tbaa !510
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !285, metadata !382), !dbg !683
  %10 = insertelement <2 x float> undef, float %9, i32 0, !dbg !692
  %11 = insertelement <2 x float> %10, float %9, i32 1, !dbg !692
  %12 = insertelement <2 x float> %10, float %7, i32 1, !dbg !692
  %13 = fmul <2 x float> %11, %12, !dbg !692
  %14 = fpext <2 x float> %13 to <2 x double>, !dbg !693
  %15 = fadd <2 x double> %5, %14, !dbg !694
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !286, metadata !382), !dbg !682
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !287, metadata !382), !dbg !681
  %16 = insertelement <2 x float> undef, float %7, i32 0, !dbg !695
  %17 = insertelement <2 x float> %16, float %9, i32 1, !dbg !695
  %18 = fpext <2 x float> %17 to <2 x double>, !dbg !695
  %19 = fadd <2 x double> %4, %18, !dbg !696
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !288, metadata !382), !dbg !680
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !688
  %lftr.wideiv21 = trunc i64 %indvars.iv19 to i32, !dbg !688
  %exitcond22 = icmp eq i32 %lftr.wideiv21, %2, !dbg !688
  br i1 %exitcond22, label %._crit_edge10, label %3, !dbg !688

._crit_edge10:                                    ; preds = %3, %0
  %20 = phi <2 x double> [ zeroinitializer, %0 ], [ %19, %3 ]
  %21 = phi <2 x double> [ zeroinitializer, %0 ], [ %15, %3 ]
  %22 = sitofp i32 %n to double, !dbg !697
  %23 = extractelement <2 x double> %21, i32 1, !dbg !698
  %24 = fmul double %22, %23, !dbg !698
  %25 = extractelement <2 x double> %20, i32 0, !dbg !699
  %26 = extractelement <2 x double> %20, i32 1, !dbg !699
  %27 = fmul double %26, %25, !dbg !699
  %28 = fsub double %24, %27, !dbg !700
  %29 = extractelement <2 x double> %21, i32 0, !dbg !701
  %30 = fmul double %22, %29, !dbg !701
  %31 = fmul double %26, %26, !dbg !702
  %32 = fsub double %30, %31, !dbg !703
  %33 = fdiv double %28, %32, !dbg !704
  %34 = fptrunc double %33 to float, !dbg !705
  store float %34, float* %a, align 4, !dbg !706, !tbaa !510
  %35 = fpext float %34 to double, !dbg !707
  %36 = fmul double %26, %35, !dbg !708
  %37 = fsub double %25, %36, !dbg !709
  %38 = fdiv double %37, %22, !dbg !710
  %39 = fptrunc double %38 to float, !dbg !711
  store float %39, float* %b, align 4, !dbg !712, !tbaa !510
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !289, metadata !382), !dbg !713
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !284, metadata !382), !dbg !684
  br i1 %1, label %.lr.ph, label %._crit_edge.thread, !dbg !714

.lr.ph:                                           ; preds = %._crit_edge10
  %40 = load float* %a, align 4, !dbg !716, !tbaa !510
  %41 = add i32 %n, -1, !dbg !714
  br label %42, !dbg !714

; <label>:42                                      ; preds = %42, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %42 ]
  %chi2.02 = phi double [ 0.000000e+00, %.lr.ph ], [ %52, %42 ]
  %43 = getelementptr inbounds float* %y, i64 %indvars.iv, !dbg !718
  %44 = load float* %43, align 4, !dbg !718, !tbaa !510
  %45 = getelementptr inbounds float* %x, i64 %indvars.iv, !dbg !719
  %46 = load float* %45, align 4, !dbg !719, !tbaa !510
  %47 = fmul float %40, %46, !dbg !720
  %48 = fadd float %47, %39, !dbg !721
  %49 = fsub float %44, %48, !dbg !722
  tail call void @llvm.dbg.value(metadata float %49, i64 0, metadata !336, metadata !382), !dbg !723
  %50 = fmul float %49, %49, !dbg !725
  %51 = fpext float %50 to double, !dbg !726
  %52 = fadd double %chi2.02, %51, !dbg !727
  tail call void @llvm.dbg.value(metadata double %52, i64 0, metadata !289, metadata !382), !dbg !713
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !714
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !714
  %exitcond = icmp eq i32 %lftr.wideiv, %41, !dbg !714
  br i1 %exitcond, label %._crit_edge, label %42, !dbg !714

._crit_edge:                                      ; preds = %42
  %53 = icmp sgt i32 %n, 2, !dbg !728
  br i1 %53, label %54, label %._crit_edge.thread, !dbg !730

; <label>:54                                      ; preds = %._crit_edge
  %55 = add nsw i32 %n, -2, !dbg !731
  %56 = sitofp i32 %55 to double, !dbg !732
  %57 = fdiv double %52, %56, !dbg !733
  %58 = tail call double @sqrt(double %57) #11, !dbg !734
  %59 = fptrunc double %58 to float, !dbg !734
  br label %._crit_edge.thread, !dbg !735

._crit_edge.thread:                               ; preds = %._crit_edge10, %._crit_edge, %54
  %.0 = phi float [ %59, %54 ], [ 0.000000e+00, %._crit_edge ], [ 0.000000e+00, %._crit_edge10 ]
  ret float %.0, !dbg !736
}
