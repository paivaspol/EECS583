define void @vecrecip(float* nocapture %in, float* nocapture %out, i32 %n) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{float* %in}, i64 0, metadata !19), !dbg !31
  tail call void @llvm.dbg.value(metadata !{float* %out}, i64 0, metadata !20), !dbg !31
  tail call void @llvm.dbg.value(metadata !{i32 %n}, i64 0, metadata !21), !dbg !31
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !22), !dbg !32
  %cmp6 = icmp sgt i32 %n, 0, !dbg !32
  br i1 %cmp6, label %for.body, label %for.end, !dbg !32

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds float* %in, i64 %indvars.iv, !dbg !34
  %0 = load float* %arrayidx, align 4, !dbg !34, !tbaa !27
  %div = fdiv float 1.000000e+00, %0, !dbg !34
  %arrayidx2 = getelementptr inbounds float* %out, i64 %indvars.iv, !dbg !34
  store float %div, float* %arrayidx2, align 4, !dbg !34, !tbaa !27
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !32
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !32
  %exitcond = icmp eq i32 %lftr.wideiv, %n, !dbg !32
  br i1 %exitcond, label %for.end, label %for.body, !dbg !32

for.end:                                          ; preds = %for.body, %entry
  ret void, !dbg !35
}
