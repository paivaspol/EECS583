define internal fastcc void @do_update_sd(i32 %start, i32 %homenr, [3 x float]* nocapture %accel, [3 x i32]* nocapture %nFreeze, float* nocapture %invmass, i16* nocapture %ptype, i16* nocapture %cFREEZE, i16* nocapture %cACC, i16* nocapture %cTC, float %SAfactor, [3 x float]* nocapture %x, [3 x float]* nocapture %xprime, [3 x float]* nocapture %v, [3 x float]* nocapture %vold, [3 x float]* nocapture %f, i32 %ngtc, float* nocapture %tau_t, float* nocapture %ref_t, i32* %seed, i32 %bFirstHalf) #0 {
entry:
  %0 = load %struct.t_sd_sigmas** @do_update_sd.sig, align 8, !tbaa !0
  %cmp = icmp eq %struct.t_sd_sigmas* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i8* @save_calloc(i8* getelementptr inbounds ([4 x i8]* @.str17, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str1, i64 0, i64 0), i32 309, i32 %ngtc, i32 16) #4
  %1 = bitcast i8* %call to %struct.t_sd_sigmas*
  store %struct.t_sd_sigmas* %1, %struct.t_sd_sigmas** @do_update_sd.sig, align 8, !tbaa !0
  %call1 = tail call i8* @save_calloc(i8* getelementptr inbounds ([2 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str1, i64 0, i64 0), i32 310, i32 %homenr, i32 12) #4
  %2 = bitcast i8* %call1 to [3 x float]*
  store [3 x float]* %2, [3 x float]** @do_update_sd.X, align 8, !tbaa !0
  %call2 = tail call i8* @save_calloc(i8* getelementptr inbounds ([2 x i8]* @.str19, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str1, i64 0, i64 0), i32 311, i32 %homenr, i32 12) #4
  %3 = bitcast i8* %call2 to [3 x float]*
  store [3 x float]* %3, [3 x float]** @do_update_sd.V, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %tobool = icmp ne i32 %bFirstHalf, 0
  %cmp4549 = icmp sgt i32 %ngtc, 0
  %or.cond = and i1 %tobool, %cmp4549
  br i1 %or.cond, label %for.body.lr.ph, label %if.end57

for.body.lr.ph:                                   ; preds = %if.end
  %conv = fpext float %SAfactor to double
  %mul = fmul double %conv, 0x3F810732CDE67DC4
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv553 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next554, %for.body ]
  %arrayidx = getelementptr inbounds float* %ref_t, i64 %indvars.iv553
  %4 = load float* %arrayidx, align 4, !tbaa !3
  %conv5 = fpext float %4 to double
  %mul6 = fmul double %mul, %conv5
  %conv7 = fptrunc double %mul6 to float
  %5 = load %struct.t_sdconst** @sdc, align 8, !tbaa !0
  %em = getelementptr inbounds %struct.t_sdconst* %5, i64 %indvars.iv553, i32 3
  %6 = load float* %em, align 4, !tbaa !3
  %sub = fsub float 1.000000e+00, %6
  %mul10 = fmul float %conv7, %sub
  %conv13 = tail call float @sqrtf(float %mul10) #2
  %7 = load %struct.t_sd_sigmas** @do_update_sd.sig, align 8, !tbaa !0
  %V = getelementptr inbounds %struct.t_sd_sigmas* %7, i64 %indvars.iv553, i32 0
  store float %conv13, float* %V, align 4, !tbaa !3
  %arrayidx17 = getelementptr inbounds float* %tau_t, i64 %indvars.iv553
  %8 = load float* %arrayidx17, align 4, !tbaa !3
  %mul.i = fmul float %8, %8
  %mul19 = fmul float %conv7, %mul.i
  %9 = load %struct.t_sdconst** @sdc, align 8, !tbaa !0
  %c = getelementptr inbounds %struct.t_sdconst* %9, i64 %indvars.iv553, i32 5
  %10 = load float* %c, align 4, !tbaa !3
  %mul22 = fmul float %mul19, %10
  %conv25 = tail call float @sqrtf(float %mul22) #2
  %11 = load %struct.t_sd_sigmas** @do_update_sd.sig, align 8, !tbaa !0
  %X = getelementptr inbounds %struct.t_sd_sigmas* %11, i64 %indvars.iv553, i32 1
  store float %conv25, float* %X, align 4, !tbaa !3
  %12 = load %struct.t_sdconst** @sdc, align 8, !tbaa !0
  %b = getelementptr inbounds %struct.t_sdconst* %12, i64 %indvars.iv553, i32 4
  %13 = load float* %b, align 4, !tbaa !3
  %mul30 = fmul float %conv7, %13
  %c33 = getelementptr inbounds %struct.t_sdconst* %12, i64 %indvars.iv553, i32 5
  %14 = load float* %c33, align 4, !tbaa !3
  %div = fdiv float %mul30, %14
  %conv36 = tail call float @sqrtf(float %div) #2
  %15 = load %struct.t_sd_sigmas** @do_update_sd.sig, align 8, !tbaa !0
  %Yv = getelementptr inbounds %struct.t_sd_sigmas* %15, i64 %indvars.iv553, i32 2
  store float %conv36, float* %Yv, align 4, !tbaa !3
  %16 = load float* %arrayidx17, align 4, !tbaa !3
  %mul.i533 = fmul float %16, %16
  %mul42 = fmul float %conv7, %mul.i533
  %17 = load %struct.t_sdconst** @sdc, align 8, !tbaa !0
  %b45 = getelementptr inbounds %struct.t_sdconst* %17, i64 %indvars.iv553, i32 4
  %18 = load float* %b45, align 4, !tbaa !3
  %mul46 = fmul float %mul42, %18
  %em49 = getelementptr inbounds %struct.t_sdconst* %17, i64 %indvars.iv553, i32 3
  %19 = load float* %em49, align 4, !tbaa !3
  %sub50 = fsub float 1.000000e+00, %19
  %div51 = fdiv float %mul46, %sub50
  %conv54 = tail call float @sqrtf(float %div51) #2
  %20 = load %struct.t_sd_sigmas** @do_update_sd.sig, align 8, !tbaa !0
  %Yx = getelementptr inbounds %struct.t_sd_sigmas* %20, i64 %indvars.iv553, i32 3
  store float %conv54, float* %Yx, align 4, !tbaa !3
  %indvars.iv.next554 = add i64 %indvars.iv553, 1
  %lftr.wideiv555 = trunc i64 %indvars.iv.next554 to i32
  %exitcond556 = icmp eq i32 %lftr.wideiv555, %ngtc
  br i1 %exitcond556, label %if.end57, label %for.body

if.end57:                                         ; preds = %for.body, %if.end
  %call58 = tail call float @rando(i32* %seed) #4
  %add = add nsw i32 %homenr, %start
  %cmp62545 = icmp sgt i32 %homenr, 0
  br i1 %cmp62545, label %for.body64.lr.ph, label %for.end316

for.body64.lr.ph:                                 ; preds = %if.end57
  %mul59 = fmul float %call58, 6.553500e+04
  %conv60 = fptoui float %mul59 to i64
  %21 = sext i32 %start to i64
  br label %for.body64

for.body64:                                       ; preds = %for.body64.lr.ph, %for.inc314
  %indvars.iv551 = phi i64 [ %21, %for.body64.lr.ph ], [ %indvars.iv.next552, %for.inc314 ]
  %vn.0547 = phi float [ 0.000000e+00, %for.body64.lr.ph ], [ %vn.2, %for.inc314 ]
  %and13.i527538546 = phi i64 [ %conv60, %for.body64.lr.ph ], [ %and13.i527540, %for.inc314 ]
  %arrayidx66 = getelementptr inbounds float* %invmass, i64 %indvars.iv551
  %22 = load float* %arrayidx66, align 4, !tbaa !3
  %conv69 = tail call float @sqrtf(float %22) #2
  %arrayidx71 = getelementptr inbounds i16* %cFREEZE, i64 %indvars.iv551
  %23 = load i16* %arrayidx71, align 2, !tbaa !5
  %arrayidx74 = getelementptr inbounds i16* %cACC, i64 %indvars.iv551
  %24 = load i16* %arrayidx74, align 2, !tbaa !5
  %arrayidx77 = getelementptr inbounds i16* %cTC, i64 %indvars.iv551
  %25 = load i16* %arrayidx77, align 2, !tbaa !5
  %arrayidx95 = getelementptr inbounds i16* %ptype, i64 %indvars.iv551
  %26 = load i16* %arrayidx95, align 2, !tbaa !5
  %idxprom106 = zext i16 %23 to i64
  %.b = load i1* @do_update_sd.bFirst, align 1
  %27 = trunc i64 %indvars.iv551 to i32
  %sub128 = sub nsw i32 %27, %start
  %idxprom129 = sext i32 %sub128 to i64
  %28 = load [3 x float]** @do_update_sd.X, align 8, !tbaa !0
  %idxprom132 = zext i16 %25 to i64
  %29 = load %struct.t_sdconst** @sdc, align 8, !tbaa !0
  %d134 = getelementptr inbounds %struct.t_sdconst* %29, i64 %idxprom132, i32 6
  %arrayidx137 = getelementptr inbounds float* %tau_t, i64 %idxprom132
  %c140 = getelementptr inbounds %struct.t_sdconst* %29, i64 %idxprom132, i32 5
  %30 = load %struct.t_sd_sigmas** @do_update_sd.sig, align 8, !tbaa !0
  %Yv145 = getelementptr inbounds %struct.t_sd_sigmas* %30, i64 %idxprom132, i32 2
  %V152 = getelementptr inbounds %struct.t_sd_sigmas* %30, i64 %idxprom132, i32 0
  %31 = load [3 x float]** @do_update_sd.V, align 8, !tbaa !0
  %em163 = getelementptr inbounds %struct.t_sdconst* %29, i64 %idxprom132, i32 3
  %idxprom173 = zext i16 %24 to i64
  %eph = getelementptr inbounds %struct.t_sdconst* %29, i64 %idxprom132, i32 1
  %emh = getelementptr inbounds %struct.t_sdconst* %29, i64 %idxprom132, i32 2
  %X117 = getelementptr inbounds %struct.t_sd_sigmas* %30, i64 %idxprom132, i32 1
  %Yx266 = getelementptr inbounds %struct.t_sd_sigmas* %30, i64 %idxprom132, i32 3
  br label %for.body82

for.body82:                                       ; preds = %for.inc311, %for.body64
  %indvars.iv = phi i64 [ 0, %for.body64 ], [ %indvars.iv.next, %for.inc311 ]
  %vn.1543 = phi float [ %vn.0547, %for.body64 ], [ %vn.2, %for.inc311 ]
  %and13.i527539542 = phi i64 [ %and13.i527538546, %for.body64 ], [ %and13.i527540, %for.inc311 ]
  br i1 %tobool, label %if.then84, label %if.end93

if.then84:                                        ; preds = %for.body82
  %arrayidx88 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv551, i64 %indvars.iv
  %32 = load float* %arrayidx88, align 4, !tbaa !3
  %arrayidx92 = getelementptr inbounds [3 x float]* %vold, i64 %indvars.iv551, i64 %indvars.iv
  store float %32, float* %arrayidx92, align 4, !tbaa !3
  br label %if.end93

if.end93:                                         ; preds = %if.then84, %for.body82
  %vn.2 = phi float [ %32, %if.then84 ], [ %vn.1543, %for.body82 ]
  switch i16 %26, label %land.lhs.true104 [
    i16 4, label %if.else294
    i16 2, label %if.else294
  ]

land.lhs.true104:                                 ; preds = %if.end93
  %arrayidx108 = getelementptr inbounds [3 x i32]* %nFreeze, i64 %idxprom106, i64 %indvars.iv
  %33 = load i32* %arrayidx108, align 4, !tbaa !4
  %tobool109 = icmp eq i32 %33, 0
  br i1 %tobool109, label %if.then110, label %if.else294

if.then110:                                       ; preds = %land.lhs.true104
  br i1 %tobool, label %if.then112, label %if.else

if.then112:                                       ; preds = %if.then110
  br i1 %.b, label %if.then112.if.end126_crit_edge, label %if.then114

if.then112.if.end126_crit_edge:                   ; preds = %if.then112
  %arrayidx131.phi.trans.insert = getelementptr inbounds [3 x float]* %28, i64 %idxprom129, i64 %indvars.iv
  %.pre = load float* %arrayidx131.phi.trans.insert, align 4, !tbaa !3
  br label %if.end126

if.then114:                                       ; preds = %if.then112
  %34 = load float* %X117, align 4, !tbaa !3
  %mul118 = fmul float %conv69, %34
  %mul.i511 = mul i64 %and13.i527539542, 1093
  %add.i512 = add i64 %mul.i511, 18257
  %and.i513 = and i64 %add.i512, 65535
  %conv.i514 = uitofp i64 %and.i513 to float
  %mul1.i515 = mul i64 %and.i513, 1093
  %add2.i516 = add i64 %mul1.i515, 18257
  %and3.i517 = and i64 %add2.i516, 65535
  %conv4.i518 = uitofp i64 %and3.i517 to float
  %add5.i519 = fadd float %conv.i514, %conv4.i518
  %mul6.i520 = mul i64 %and3.i517, 1093
  %add7.i521 = add i64 %mul6.i520, 18257
  %and8.i522 = and i64 %add7.i521, 65535
  %conv9.i523 = uitofp i64 %and8.i522 to float
  %add10.i524 = fadd float %add5.i519, %conv9.i523
  %mul11.i525 = mul i64 %and8.i522, 1093
  %add12.i526 = add i64 %mul11.i525, 18257
  %and13.i527 = and i64 %add12.i526, 65535
  %conv14.i528 = uitofp i64 %and13.i527 to float
  %add15.i529 = fadd float %add10.i524, %conv14.i528
  %mul16.i530 = fmul float %add15.i529, 0x3EF0001000000000
  %sub.i531 = fadd float %mul16.i530, -2.000000e+00
  %mul17.i532 = fmul float %sub.i531, 0x3FFBB67AE0000000
  %mul120 = fmul float %mul17.i532, %mul118
  %arrayidx125 = getelementptr inbounds [3 x float]* %28, i64 %idxprom129, i64 %indvars.iv
  store float %mul120, float* %arrayidx125, align 4, !tbaa !3
  br label %if.end126

if.end126:                                        ; preds = %if.then112.if.end126_crit_edge, %if.then114
  %35 = phi float [ %.pre, %if.then112.if.end126_crit_edge ], [ %mul120, %if.then114 ]
  %and13.i527541 = phi i64 [ %and13.i527539542, %if.then112.if.end126_crit_edge ], [ %and13.i527, %if.then114 ]
  %36 = load float* %d134, align 4, !tbaa !3
  %mul135 = fmul float %35, %36
  %37 = load float* %arrayidx137, align 4, !tbaa !3
  %38 = load float* %c140, align 4, !tbaa !3
  %mul141 = fmul float %37, %38
  %div142 = fdiv float %mul135, %mul141
  %39 = load float* %Yv145, align 4, !tbaa !3
  %mul146 = fmul float %conv69, %39
  %mul.i489 = mul i64 %and13.i527541, 1093
  %add.i490 = add i64 %mul.i489, 18257
  %and.i491 = and i64 %add.i490, 65535
  %conv.i492 = uitofp i64 %and.i491 to float
  %mul1.i493 = mul i64 %and.i491, 1093
  %add2.i494 = add i64 %mul1.i493, 18257
  %and3.i495 = and i64 %add2.i494, 65535
  %conv4.i496 = uitofp i64 %and3.i495 to float
  %add5.i497 = fadd float %conv.i492, %conv4.i496
  %mul6.i498 = mul i64 %and3.i495, 1093
  %add7.i499 = add i64 %mul6.i498, 18257
  %and8.i500 = and i64 %add7.i499, 65535
  %conv9.i501 = uitofp i64 %and8.i500 to float
  %add10.i502 = fadd float %add5.i497, %conv9.i501
  %mul11.i503 = mul i64 %and8.i500, 1093
  %add12.i504 = add i64 %mul11.i503, 18257
  %and13.i505 = and i64 %add12.i504, 65535
  %conv14.i506 = uitofp i64 %and13.i505 to float
  %add15.i507 = fadd float %add10.i502, %conv14.i506
  %mul16.i508 = fmul float %add15.i507, 0x3EF0001000000000
  %sub.i509 = fadd float %mul16.i508, -2.000000e+00
  %mul17.i510 = fmul float %sub.i509, 0x3FFBB67AE0000000
  %mul148 = fmul float %mul146, %mul17.i510
  %add149 = fadd float %div142, %mul148
  %40 = load float* %V152, align 4, !tbaa !3
  %mul153 = fmul float %conv69, %40
  %mul.i467 = mul i64 %and13.i505, 1093
  %add.i468 = add i64 %mul.i467, 18257
  %and.i469 = and i64 %add.i468, 65535
  %conv.i470 = uitofp i64 %and.i469 to float
  %mul1.i471 = mul i64 %and.i469, 1093
  %add2.i472 = add i64 %mul1.i471, 18257
  %and3.i473 = and i64 %add2.i472, 65535
  %conv4.i474 = uitofp i64 %and3.i473 to float
  %add5.i475 = fadd float %conv.i470, %conv4.i474
  %mul6.i476 = mul i64 %and3.i473, 1093
  %add7.i477 = add i64 %mul6.i476, 18257
  %and8.i478 = and i64 %add7.i477, 65535
  %conv9.i479 = uitofp i64 %and8.i478 to float
  %add10.i480 = fadd float %add5.i475, %conv9.i479
  %mul11.i481 = mul i64 %and8.i478, 1093
  %add12.i482 = add i64 %mul11.i481, 18257
  %and13.i483 = and i64 %add12.i482, 65535
  %conv14.i484 = uitofp i64 %and13.i483 to float
  %add15.i485 = fadd float %add10.i480, %conv14.i484
  %mul16.i486 = fmul float %add15.i485, 0x3EF0001000000000
  %sub.i487 = fadd float %mul16.i486, -2.000000e+00
  %mul17.i488 = fmul float %sub.i487, 0x3FFBB67AE0000000
  %mul155 = fmul float %mul153, %mul17.i488
  %arrayidx160 = getelementptr inbounds [3 x float]* %31, i64 %idxprom129, i64 %indvars.iv
  store float %mul155, float* %arrayidx160, align 4, !tbaa !3
  %41 = load float* %em163, align 4, !tbaa !3
  %mul164 = fmul float %vn.2, %41
  %42 = load float* %arrayidx66, align 4, !tbaa !3
  %arrayidx170 = getelementptr inbounds [3 x float]* %f, i64 %indvars.iv551, i64 %indvars.iv
  %43 = load float* %arrayidx170, align 4, !tbaa !3
  %mul171 = fmul float %42, %43
  %arrayidx175 = getelementptr inbounds [3 x float]* %accel, i64 %idxprom173, i64 %indvars.iv
  %44 = load float* %arrayidx175, align 4, !tbaa !3
  %add176 = fadd float %mul171, %44
  %45 = load float* %arrayidx137, align 4, !tbaa !3
  %mul179 = fmul float %add176, %45
  %sub183 = fsub float 1.000000e+00, %41
  %mul184 = fmul float %sub183, %mul179
  %add185 = fadd float %mul164, %mul184
  %add191 = fadd float %mul155, %add185
  %mul195 = fmul float %41, %add149
  %sub196 = fsub float %add191, %mul195
  %arrayidx200 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv551, i64 %indvars.iv
  store float %sub196, float* %arrayidx200, align 4, !tbaa !3
  %arrayidx204 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv551, i64 %indvars.iv
  %46 = load float* %arrayidx204, align 4, !tbaa !3
  %47 = load float* %arrayidx137, align 4, !tbaa !3
  %mul211 = fmul float %47, %sub196
  %48 = load float* %eph, align 4, !tbaa !3
  %49 = load float* %emh, align 4, !tbaa !3
  %sub216 = fsub float %48, %49
  %mul217 = fmul float %mul211, %sub216
  %add218 = fadd float %46, %mul217
  %arrayidx222 = getelementptr inbounds [3 x float]* %xprime, i64 %indvars.iv551, i64 %indvars.iv
  store float %add218, float* %arrayidx222, align 4, !tbaa !3
  br label %for.inc311

if.else:                                          ; preds = %if.then110
  %arrayidx226 = getelementptr inbounds [3 x float]* %xprime, i64 %indvars.iv551, i64 %indvars.iv
  %50 = load float* %arrayidx226, align 4, !tbaa !3
  %arrayidx230 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv551, i64 %indvars.iv
  %51 = load float* %arrayidx230, align 4, !tbaa !3
  %sub231 = fsub float %50, %51
  %52 = load float* %arrayidx137, align 4, !tbaa !3
  %53 = load float* %eph, align 4, !tbaa !3
  %54 = load float* %emh, align 4, !tbaa !3
  %sub240 = fsub float %53, %54
  %mul241 = fmul float %52, %sub240
  %div242 = fdiv float %sub231, %mul241
  %arrayidx246 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv551, i64 %indvars.iv
  store float %div242, float* %arrayidx246, align 4, !tbaa !3
  %arrayidx251 = getelementptr inbounds [3 x float]* %31, i64 %idxprom129, i64 %indvars.iv
  %55 = load float* %arrayidx251, align 4, !tbaa !3
  %56 = load float* %arrayidx137, align 4, !tbaa !3
  %mul254 = fmul float %55, %56
  %57 = load float* %d134, align 4, !tbaa !3
  %mul258 = fmul float %mul254, %57
  %58 = load float* %em163, align 4, !tbaa !3
  %sub262 = fadd float %58, -1.000000e+00
  %div263 = fdiv float %mul258, %sub262
  %59 = load float* %Yx266, align 4, !tbaa !3
  %mul267 = fmul float %conv69, %59
  %mul.i445 = mul i64 %and13.i527539542, 1093
  %add.i446 = add i64 %mul.i445, 18257
  %and.i447 = and i64 %add.i446, 65535
  %conv.i448 = uitofp i64 %and.i447 to float
  %mul1.i449 = mul i64 %and.i447, 1093
  %add2.i450 = add i64 %mul1.i449, 18257
  %and3.i451 = and i64 %add2.i450, 65535
  %conv4.i452 = uitofp i64 %and3.i451 to float
  %add5.i453 = fadd float %conv.i448, %conv4.i452
  %mul6.i454 = mul i64 %and3.i451, 1093
  %add7.i455 = add i64 %mul6.i454, 18257
  %and8.i456 = and i64 %add7.i455, 65535
  %conv9.i457 = uitofp i64 %and8.i456 to float
  %add10.i458 = fadd float %add5.i453, %conv9.i457
  %mul11.i459 = mul i64 %and8.i456, 1093
  %add12.i460 = add i64 %mul11.i459, 18257
  %and13.i461 = and i64 %add12.i460, 65535
  %conv14.i462 = uitofp i64 %and13.i461 to float
  %add15.i463 = fadd float %add10.i458, %conv14.i462
  %mul16.i464 = fmul float %add15.i463, 0x3EF0001000000000
  %sub.i465 = fadd float %mul16.i464, -2.000000e+00
  %mul17.i466 = fmul float %sub.i465, 0x3FFBB67AE0000000
  %mul269 = fmul float %mul17.i466, %mul267
  %add270 = fadd float %div263, %mul269
  %60 = load float* %X117, align 4, !tbaa !3
  %mul274 = fmul float %conv69, %60
  %mul.i444 = mul i64 %and13.i461, 1093
  %add.i = add i64 %mul.i444, 18257
  %and.i = and i64 %add.i, 65535
  %conv.i = uitofp i64 %and.i to float
  %mul1.i = mul i64 %and.i, 1093
  %add2.i = add i64 %mul1.i, 18257
  %and3.i = and i64 %add2.i, 65535
  %conv4.i = uitofp i64 %and3.i to float
  %add5.i = fadd float %conv.i, %conv4.i
  %mul6.i = mul i64 %and3.i, 1093
  %add7.i = add i64 %mul6.i, 18257
  %and8.i = and i64 %add7.i, 65535
  %conv9.i = uitofp i64 %and8.i to float
  %add10.i = fadd float %add5.i, %conv9.i
  %mul11.i = mul i64 %and8.i, 1093
  %add12.i = add i64 %mul11.i, 18257
  %and13.i = and i64 %add12.i, 65535
  %conv14.i = uitofp i64 %and13.i to float
  %add15.i = fadd float %add10.i, %conv14.i
  %mul16.i = fmul float %add15.i, 0x3EF0001000000000
  %sub.i = fadd float %mul16.i, -2.000000e+00
  %mul17.i = fmul float %sub.i, 0x3FFBB67AE0000000
  %mul276 = fmul float %mul17.i, %mul274
  %arrayidx281 = getelementptr inbounds [3 x float]* %28, i64 %idxprom129, i64 %indvars.iv
  store float %mul276, float* %arrayidx281, align 4, !tbaa !3
  %sub287 = fsub float %mul276, %add270
  %61 = load float* %arrayidx226, align 4, !tbaa !3
  %add292 = fadd float %61, %sub287
  store float %add292, float* %arrayidx226, align 4, !tbaa !3
  br label %for.inc311

if.else294:                                       ; preds = %if.end93, %if.end93, %land.lhs.true104
  br i1 %tobool, label %if.then296, label %for.inc311

if.then296:                                       ; preds = %if.else294
  %arrayidx300 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv551, i64 %indvars.iv
  store float 0.000000e+00, float* %arrayidx300, align 4, !tbaa !3
  %arrayidx304 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv551, i64 %indvars.iv
  %62 = load float* %arrayidx304, align 4, !tbaa !3
  %arrayidx308 = getelementptr inbounds [3 x float]* %xprime, i64 %indvars.iv551, i64 %indvars.iv
  store float %62, float* %arrayidx308, align 4, !tbaa !3
  br label %for.inc311

for.inc311:                                       ; preds = %if.else, %if.end126, %if.then296, %if.else294
  %and13.i527540 = phi i64 [ %and13.i, %if.else ], [ %and13.i483, %if.end126 ], [ %and13.i527539542, %if.then296 ], [ %and13.i527539542, %if.else294 ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 3
  br i1 %exitcond, label %for.inc314, label %for.body82

for.inc314:                                       ; preds = %for.inc311
  %indvars.iv.next552 = add i64 %indvars.iv551, 1
  %63 = trunc i64 %indvars.iv.next552 to i32
  %cmp62 = icmp slt i32 %63, %add
  br i1 %cmp62, label %for.body64, label %for.end316

for.end316:                                       ; preds = %for.inc314, %if.end57
  store i1 true, i1* @do_update_sd.bFirst, align 1
  ret void
}
