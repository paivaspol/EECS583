define void @calc_ke_part_visc(i32 %bFirstStep, i32 %start, i32 %homenr, [3 x float]* nocapture readonly %box, [3 x float]* nocapture readonly %x, [3 x float]* nocapture %vold, [3 x float]* nocapture readonly %v, [3 x float]* nocapture %vt, %struct.t_grpopts* nocapture readonly %opts, %struct.t_mdatoms* nocapture readonly %md, %struct.t_groups* nocapture %grps, %struct.t_nrnb* nocapture %nrnb, float %lambda, float* %dvdlambda) #1 {
  %v_corrt = alloca [3 x float], align 4
  %1 = getelementptr inbounds %struct.t_groups* %grps, i64 0, i32 1
  %2 = load %struct.t_grp_tcstat** %1, align 8, !tbaa !16
  %3 = getelementptr inbounds %struct.t_grpopts* %opts, i64 0, i32 0
  %4 = load i32* %3, align 4, !tbaa !22
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %.lr.ph11.preheader, label %._crit_edge12

.lr.ph11.preheader:                               ; preds = %0
  %6 = getelementptr inbounds %struct.t_grp_tcstat* %2, i64 0, i32 2, i64 0
  %7 = bitcast [3 x float]* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 36, i32 4, i1 false) #5
  %8 = load i32* %3, align 4, !tbaa !22
  %9 = icmp sgt i32 %8, 1
  br i1 %9, label %._crit_edge22, label %._crit_edge12

._crit_edge22:                                    ; preds = %.lr.ph11.preheader, %._crit_edge22
  %indvars.iv.next2127 = phi i64 [ %indvars.iv.next21, %._crit_edge22 ], [ 1, %.lr.ph11.preheader ]
  %.pre = load %struct.t_grp_tcstat** %1, align 8, !tbaa !16
  %10 = getelementptr inbounds %struct.t_grp_tcstat* %.pre, i64 %indvars.iv.next2127, i32 2, i64 0
  %11 = bitcast [3 x float]* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 36, i32 4, i1 false) #5
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv.next2127, 1
  %12 = load i32* %3, align 4, !tbaa !22
  %13 = sext i32 %12 to i64
  %14 = icmp slt i64 %indvars.iv.next21, %13
  br i1 %14, label %._crit_edge22, label %._crit_edge12

._crit_edge12:                                    ; preds = %.lr.ph11.preheader, %._crit_edge22, %0
  %15 = icmp eq i32 %bFirstStep, 0
  %.pre26 = add nsw i32 %homenr, %start
  br i1 %15, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %._crit_edge12
  %16 = icmp sgt i32 %homenr, 0
  br i1 %16, label %.lr.ph8, label %.loopexit.thread

.lr.ph8:                                          ; preds = %.preheader
  %17 = sext i32 %start to i64
  %18 = sext i32 %.pre26 to i64
  br label %19

; <label>:19                                      ; preds = %.lr.ph8, %19
  %indvars.iv18 = phi i64 [ %17, %.lr.ph8 ], [ %indvars.iv.next19, %19 ]
  %20 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv18, i64 0
  %21 = getelementptr inbounds [3 x float]* %vold, i64 %indvars.iv18, i64 0
  %22 = bitcast float* %20 to i32*
  %23 = load i32* %22, align 4, !tbaa !6
  %24 = bitcast float* %21 to i32*
  store i32 %23, i32* %24, align 4, !tbaa !6
  %25 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv18, i64 1
  %26 = bitcast float* %25 to i32*
  %27 = load i32* %26, align 4, !tbaa !6
  %28 = getelementptr inbounds [3 x float]* %vold, i64 %indvars.iv18, i64 1
  %29 = bitcast float* %28 to i32*
  store i32 %27, i32* %29, align 4, !tbaa !6
  %30 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv18, i64 2
  %31 = bitcast float* %30 to i32*
  %32 = load i32* %31, align 4, !tbaa !6
  %33 = getelementptr inbounds [3 x float]* %vold, i64 %indvars.iv18, i64 2
  %34 = bitcast float* %33 to i32*
  store i32 %32, i32* %34, align 4, !tbaa !6
  %indvars.iv.next19 = add nsw i64 %indvars.iv18, 1
  %35 = icmp slt i64 %indvars.iv.next19, %18
  br i1 %35, label %19, label %.loopexit

.loopexit:                                        ; preds = %19, %._crit_edge12
  %36 = getelementptr inbounds [3 x float]* %box, i64 2, i64 2
  %37 = load float* %36, align 4, !tbaa !6
  %38 = fpext float %37 to double
  %39 = fdiv double 0x401921FB54442D18, %38
  %40 = fptrunc double %39 to float
  %41 = icmp sgt i32 %homenr, 0
  br i1 %41, label %.lr.ph, label %.loopexit.thread

.lr.ph:                                           ; preds = %.loopexit
  %42 = getelementptr inbounds %struct.t_mdatoms* %md, i64 0, i32 14
  %43 = load i16** %42, align 8, !tbaa !27
  %44 = getelementptr inbounds %struct.t_mdatoms* %md, i64 0, i32 4
  %45 = load float** %44, align 8, !tbaa !28
  %46 = getelementptr inbounds %struct.t_groups* %grps, i64 0, i32 3, i32 2
  %47 = getelementptr inbounds [3 x float]* %v_corrt, i64 0, i64 0
  %48 = getelementptr inbounds [3 x float]* %v_corrt, i64 0, i64 1
  %49 = getelementptr inbounds [3 x float]* %v_corrt, i64 0, i64 2
  %50 = icmp eq float* %dvdlambda, null
  %51 = getelementptr inbounds %struct.t_mdatoms* %md, i64 0, i32 9
  %52 = getelementptr inbounds %struct.t_mdatoms* %md, i64 0, i32 3
  %53 = getelementptr inbounds %struct.t_mdatoms* %md, i64 0, i32 2
  %54 = sext i32 %start to i64
  %55 = sext i32 %.pre26 to i64
  br label %56

; <label>:56                                      ; preds = %.lr.ph, %136
  %indvars.iv16 = phi i64 [ %54, %.lr.ph ], [ %indvars.iv.next17, %136 ]
  %mvcos.05 = phi double [ 0.000000e+00, %.lr.ph ], [ %110, %136 ]
  %dvdl.04 = phi float [ 0.000000e+00, %.lr.ph ], [ %dvdl.1, %136 ]
  %57 = getelementptr inbounds i16* %43, i64 %indvars.iv16
  %58 = load i16* %57, align 2, !tbaa !29
  %59 = getelementptr inbounds float* %45, i64 %indvars.iv16
  %60 = load float* %59, align 4, !tbaa !6
  br label %61

; <label>:61                                      ; preds = %61, %56
  %indvars.iv = phi i64 [ 0, %56 ], [ %indvars.iv.next, %61 ]
  %62 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv16, i64 %indvars.iv
  %63 = load float* %62, align 4, !tbaa !6
  %64 = getelementptr inbounds [3 x float]* %vold, i64 %indvars.iv16, i64 %indvars.iv
  %65 = load float* %64, align 4, !tbaa !6
  %66 = fadd float %63, %65
  %67 = fmul float %66, 5.000000e-01
  %68 = getelementptr inbounds [3 x float]* %vt, i64 %indvars.iv16, i64 %indvars.iv
  store float %67, float* %68, align 4, !tbaa !6
  %69 = getelementptr inbounds [3 x float]* %v_corrt, i64 0, i64 %indvars.iv
  store float %67, float* %69, align 4, !tbaa !6
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %70, label %61

; <label>:70                                      ; preds = %61
  %71 = fmul float %60, 5.000000e-01
  %72 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv16, i64 2
  %73 = load float* %72, align 4, !tbaa !6
  %74 = fmul float %40, %73
  %75 = fpext float %74 to double
  %76 = tail call double @cos(double %75) #7
  %77 = fptrunc double %76 to float
  %78 = load float* %46, align 4, !tbaa !37
  %79 = fmul float %77, %78
  %80 = load float* %47, align 4, !tbaa !6
  %81 = fsub float %80, %79
  store float %81, float* %47, align 4, !tbaa !6
  %82 = fmul float %77, 2.000000e+00
  %83 = load float* %59, align 4, !tbaa !6
  %84 = fmul float %82, %83
  %85 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv16, i64 0
  %86 = load float* %85, align 4, !tbaa !6
  %87 = fmul float %84, %86
  %88 = fpext float %87 to double
  %89 = fmul float %71, %81
  %90 = zext i16 %58 to i64
  %91 = load float* %48, align 4, !tbaa !6
  %92 = fmul float %71, %91
  %93 = load float* %49, align 4, !tbaa !6
  %94 = fmul float %71, %93
  br label %95

; <label>:95                                      ; preds = %._crit_edge23, %70
  %96 = phi float [ %81, %70 ], [ %.pre24, %._crit_edge23 ]
  %indvars.iv13 = phi i64 [ 0, %70 ], [ %indvars.iv.next14, %._crit_edge23 ]
  %97 = fmul float %89, %96
  %98 = getelementptr inbounds %struct.t_grp_tcstat* %2, i64 %90, i32 2, i64 0, i64 %indvars.iv13
  %99 = load float* %98, align 4, !tbaa !6
  %100 = fadd float %99, %97
  store float %100, float* %98, align 4, !tbaa !6
  %101 = fmul float %92, %96
  %102 = getelementptr inbounds %struct.t_grp_tcstat* %2, i64 %90, i32 2, i64 1, i64 %indvars.iv13
  %103 = load float* %102, align 4, !tbaa !6
  %104 = fadd float %103, %101
  store float %104, float* %102, align 4, !tbaa !6
  %105 = fmul float %94, %96
  %106 = getelementptr inbounds %struct.t_grp_tcstat* %2, i64 %90, i32 2, i64 2, i64 %indvars.iv13
  %107 = load float* %106, align 4, !tbaa !6
  %108 = fadd float %107, %105
  store float %108, float* %106, align 4, !tbaa !6
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1
  %exitcond15 = icmp eq i64 %indvars.iv.next14, 3
  br i1 %exitcond15, label %109, label %._crit_edge23

._crit_edge23:                                    ; preds = %95
  %.phi.trans.insert = getelementptr inbounds [3 x float]* %v_corrt, i64 0, i64 %indvars.iv.next14
  %.pre24 = load float* %.phi.trans.insert, align 4, !tbaa !6
  br label %95

; <label>:109                                     ; preds = %95
  %110 = fadd double %mvcos.05, %88
  br i1 %50, label %136, label %111

; <label>:111                                     ; preds = %109
  %112 = load i32** %51, align 8, !tbaa !31
  %113 = getelementptr inbounds i32* %112, i64 %indvars.iv16
  %114 = load i32* %113, align 4, !tbaa !32
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %136, label %116

; <label>:116                                     ; preds = %111
  %117 = load float** %52, align 8, !tbaa !33
  %118 = getelementptr inbounds float* %117, i64 %indvars.iv16
  %119 = load float* %118, align 4, !tbaa !6
  %120 = load float** %53, align 8, !tbaa !34
  %121 = getelementptr inbounds float* %120, i64 %indvars.iv16
  %122 = load float* %121, align 4, !tbaa !6
  %123 = fsub float %119, %122
  %124 = fpext float %123 to double
  %125 = fmul double %124, 5.000000e-01
  %126 = fmul float %81, %81
  %127 = fmul float %91, %91
  %128 = fadd float %126, %127
  %129 = fmul float %93, %93
  %130 = fadd float %128, %129
  %131 = fpext float %130 to double
  %132 = fmul double %125, %131
  %133 = fpext float %dvdl.04 to double
  %134 = fsub double %133, %132
  %135 = fptrunc double %134 to float
  br label %136

; <label>:136                                     ; preds = %111, %109, %116
  %dvdl.1 = phi float [ %135, %116 ], [ %dvdl.04, %111 ], [ %dvdl.04, %109 ]
  %indvars.iv.next17 = add nsw i64 %indvars.iv16, 1
  %137 = icmp slt i64 %indvars.iv.next17, %55
  br i1 %137, label %56, label %._crit_edge

._crit_edge:                                      ; preds = %136
  %phitmp = fptrunc double %110 to float
  br label %.loopexit.thread

.loopexit.thread:                                 ; preds = %.preheader, %._crit_edge, %.loopexit
  %mvcos.0.lcssa = phi float [ %phitmp, %._crit_edge ], [ 0.000000e+00, %.loopexit ], [ 0.000000e+00, %.preheader ]
  %dvdl.0.lcssa = phi float [ %dvdl.1, %._crit_edge ], [ 0.000000e+00, %.loopexit ], [ 0.000000e+00, %.preheader ]
  %138 = icmp eq float* %dvdlambda, null
  br i1 %138, label %142, label %139

; <label>:139                                     ; preds = %.loopexit.thread
  %140 = load float* %dvdlambda, align 4, !tbaa !6
  %141 = fadd float %dvdl.0.lcssa, %140
  store float %141, float* %dvdlambda, align 4, !tbaa !6
  br label %142

; <label>:142                                     ; preds = %.loopexit.thread, %139
  %143 = getelementptr inbounds %struct.t_groups* %grps, i64 0, i32 3, i32 1
  store float %mvcos.0.lcssa, float* %143, align 4, !tbaa !38
  %144 = sitofp i32 %homenr to double
  %145 = getelementptr inbounds %struct.t_nrnb* %nrnb, i64 0, i32 0, i64 112
  %146 = load double* %145, align 8, !tbaa !35
  %147 = fadd double %144, %146
  store double %147, double* %145, align 8, !tbaa !35
  ret void
}
