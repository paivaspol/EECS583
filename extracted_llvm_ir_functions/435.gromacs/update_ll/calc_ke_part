define void @calc_ke_part(i32 %bFirstStep, i32 %bSD, i32 %start, i32 %homenr, [3 x float]* nocapture %vold, [3 x float]* nocapture readonly %v, [3 x float]* nocapture %vt, %struct.t_grpopts* nocapture readonly %opts, %struct.t_mdatoms* nocapture readonly %md, %struct.t_groups* nocapture readonly %grps, %struct.t_nrnb* nocapture %nrnb, float %lambda, float* %dvdlambda) #1 {
  %v_corrt = alloca [3 x float], align 4
  %1 = getelementptr inbounds %struct.t_groups* %grps, i64 0, i32 1
  %2 = load %struct.t_grp_tcstat** %1, align 8, !tbaa !16
  %3 = getelementptr inbounds %struct.t_groups* %grps, i64 0, i32 2
  %4 = load %struct.t_grp_acc** %3, align 8, !tbaa !21
  %5 = getelementptr inbounds %struct.t_grpopts* %opts, i64 0, i32 0
  %6 = load i32* %5, align 4, !tbaa !22
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %.lr.ph20.preheader, label %._crit_edge21

.lr.ph20.preheader:                               ; preds = %0
  %8 = getelementptr inbounds %struct.t_grp_tcstat* %2, i64 0, i32 2, i64 0
  %9 = bitcast [3 x float]* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 36, i32 4, i1 false) #5
  %10 = load i32* %5, align 4, !tbaa !22
  %11 = icmp sgt i32 %10, 1
  br i1 %11, label %._crit_edge42, label %._crit_edge21

._crit_edge42:                                    ; preds = %.lr.ph20.preheader, %._crit_edge42
  %indvars.iv.next4147 = phi i64 [ %indvars.iv.next41, %._crit_edge42 ], [ 1, %.lr.ph20.preheader ]
  %.pre = load %struct.t_grp_tcstat** %1, align 8, !tbaa !16
  %12 = getelementptr inbounds %struct.t_grp_tcstat* %.pre, i64 %indvars.iv.next4147, i32 2, i64 0
  %13 = bitcast [3 x float]* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %13, i8 0, i64 36, i32 4, i1 false) #5
  %indvars.iv.next41 = add nuw nsw i64 %indvars.iv.next4147, 1
  %14 = load i32* %5, align 4, !tbaa !22
  %15 = sext i32 %14 to i64
  %16 = icmp slt i64 %indvars.iv.next41, %15
  br i1 %16, label %._crit_edge42, label %._crit_edge21

._crit_edge21:                                    ; preds = %.lr.ph20.preheader, %._crit_edge42, %0
  %17 = icmp eq i32 %bFirstStep, 0
  br i1 %17, label %.preheader3, label %.preheader7

.preheader7:                                      ; preds = %._crit_edge21
  %18 = add nsw i32 %homenr, %start
  %19 = icmp sgt i32 %homenr, 0
  br i1 %19, label %.lr.ph17, label %.preheader5

.lr.ph17:                                         ; preds = %.preheader7
  %20 = sext i32 %start to i64
  %21 = sext i32 %18 to i64
  br label %32

.preheader3:                                      ; preds = %._crit_edge21
  %22 = getelementptr inbounds %struct.t_grpopts* %opts, i64 0, i32 1
  %23 = load i32* %22, align 4, !tbaa !24
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %.preheader2.lr.ph, label %.preheader1.loopexit

.preheader2.lr.ph:                                ; preds = %.preheader3
  %25 = load %struct.t_grp_acc** %3, align 8, !tbaa !21
  %26 = sext i32 %23 to i64
  br label %.preheader2

.preheader5:                                      ; preds = %32, %.preheader7
  %27 = getelementptr inbounds %struct.t_grpopts* %opts, i64 0, i32 1
  %28 = load i32* %27, align 4, !tbaa !24
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %.preheader4.lr.ph, label %.preheader1

.preheader4.lr.ph:                                ; preds = %.preheader5
  %30 = load %struct.t_grp_acc** %3, align 8, !tbaa !21
  %31 = sext i32 %28 to i64
  br label %.preheader4

; <label>:32                                      ; preds = %.lr.ph17, %32
  %indvars.iv38 = phi i64 [ %20, %.lr.ph17 ], [ %indvars.iv.next39, %32 ]
  %33 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv38, i64 0
  %34 = getelementptr inbounds [3 x float]* %vold, i64 %indvars.iv38, i64 0
  %35 = bitcast float* %33 to i32*
  %36 = load i32* %35, align 4, !tbaa !6
  %37 = bitcast float* %34 to i32*
  store i32 %36, i32* %37, align 4, !tbaa !6
  %38 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv38, i64 1
  %39 = bitcast float* %38 to i32*
  %40 = load i32* %39, align 4, !tbaa !6
  %41 = getelementptr inbounds [3 x float]* %vold, i64 %indvars.iv38, i64 1
  %42 = bitcast float* %41 to i32*
  store i32 %40, i32* %42, align 4, !tbaa !6
  %43 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv38, i64 2
  %44 = bitcast float* %43 to i32*
  %45 = load i32* %44, align 4, !tbaa !6
  %46 = getelementptr inbounds [3 x float]* %vold, i64 %indvars.iv38, i64 2
  %47 = bitcast float* %46 to i32*
  store i32 %45, i32* %47, align 4, !tbaa !6
  %indvars.iv.next39 = add nsw i64 %indvars.iv38, 1
  %48 = icmp slt i64 %indvars.iv.next39, %21
  br i1 %48, label %32, label %.preheader5

.preheader4:                                      ; preds = %.preheader4.lr.ph, %73
  %indvars.iv36 = phi i64 [ 0, %.preheader4.lr.ph ], [ %indvars.iv.next37, %73 ]
  br label %67

.preheader1.loopexit:                             ; preds = %83, %.preheader3
  %.pre45 = add nsw i32 %homenr, %start
  br label %.preheader1

.preheader1:                                      ; preds = %73, %.preheader5, %.preheader1.loopexit
  %.pre-phi = phi i32 [ %.pre45, %.preheader1.loopexit ], [ %18, %.preheader5 ], [ %18, %73 ]
  %49 = icmp sgt i32 %homenr, 0
  br i1 %49, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader1
  %50 = getelementptr inbounds %struct.t_mdatoms* %md, i64 0, i32 16
  %51 = load i16** %50, align 8, !tbaa !25
  %52 = getelementptr inbounds %struct.t_mdatoms* %md, i64 0, i32 14
  %53 = load i16** %52, align 8, !tbaa !27
  %54 = getelementptr inbounds %struct.t_mdatoms* %md, i64 0, i32 4
  %55 = load float** %54, align 8, !tbaa !28
  %56 = icmp eq i32 %bSD, 0
  %57 = getelementptr inbounds [3 x float]* %v_corrt, i64 0, i64 0
  %58 = getelementptr inbounds [3 x float]* %v_corrt, i64 0, i64 1
  %59 = getelementptr inbounds [3 x float]* %v_corrt, i64 0, i64 2
  %60 = icmp eq float* %dvdlambda, null
  %61 = getelementptr inbounds %struct.t_mdatoms* %md, i64 0, i32 9
  %62 = getelementptr inbounds %struct.t_mdatoms* %md, i64 0, i32 3
  %63 = getelementptr inbounds %struct.t_mdatoms* %md, i64 0, i32 2
  %64 = load %struct.t_sdconst** @sdc, align 8, !tbaa !2
  %65 = sext i32 %start to i64
  %66 = sext i32 %.pre-phi to i64
  br label %85

; <label>:67                                      ; preds = %67, %.preheader4
  %indvars.iv32 = phi i64 [ 0, %.preheader4 ], [ %indvars.iv.next33, %67 ]
  %68 = getelementptr inbounds %struct.t_grp_acc* %30, i64 %indvars.iv36, i32 3, i64 %indvars.iv32
  %69 = bitcast float* %68 to i32*
  %70 = load i32* %69, align 4, !tbaa !6
  %71 = getelementptr inbounds %struct.t_grp_acc* %30, i64 %indvars.iv36, i32 5, i64 %indvars.iv32
  %72 = bitcast float* %71 to i32*
  store i32 %70, i32* %72, align 4, !tbaa !6
  %indvars.iv.next33 = add nuw nsw i64 %indvars.iv32, 1
  %exitcond34 = icmp eq i64 %indvars.iv.next33, 3
  br i1 %exitcond34, label %73, label %67

; <label>:73                                      ; preds = %67
  %indvars.iv.next37 = add nuw nsw i64 %indvars.iv36, 1
  %74 = icmp slt i64 %indvars.iv.next37, %31
  br i1 %74, label %.preheader4, label %.preheader1

.preheader2:                                      ; preds = %.preheader2.lr.ph, %83
  %indvars.iv30 = phi i64 [ 0, %.preheader2.lr.ph ], [ %indvars.iv.next31, %83 ]
  br label %75

; <label>:75                                      ; preds = %75, %.preheader2
  %indvars.iv27 = phi i64 [ 0, %.preheader2 ], [ %indvars.iv.next28, %75 ]
  %76 = getelementptr inbounds %struct.t_grp_acc* %25, i64 %indvars.iv30, i32 3, i64 %indvars.iv27
  %77 = load float* %76, align 4, !tbaa !6
  %78 = getelementptr inbounds %struct.t_grp_acc* %25, i64 %indvars.iv30, i32 4, i64 %indvars.iv27
  %79 = load float* %78, align 4, !tbaa !6
  %80 = fadd float %77, %79
  %81 = fmul float %80, 5.000000e-01
  %82 = getelementptr inbounds %struct.t_grp_acc* %25, i64 %indvars.iv30, i32 5, i64 %indvars.iv27
  store float %81, float* %82, align 4, !tbaa !6
  %indvars.iv.next28 = add nuw nsw i64 %indvars.iv27, 1
  %exitcond29 = icmp eq i64 %indvars.iv.next28, 3
  br i1 %exitcond29, label %83, label %75

; <label>:83                                      ; preds = %75
  %indvars.iv.next31 = add nuw nsw i64 %indvars.iv30, 1
  %84 = icmp slt i64 %indvars.iv.next31, %26
  br i1 %84, label %.preheader2, label %.preheader1.loopexit

; <label>:85                                      ; preds = %.lr.ph, %162
  %indvars.iv25 = phi i64 [ %65, %.lr.ph ], [ %indvars.iv.next26, %162 ]
  %dvdl.011 = phi float [ 0.000000e+00, %.lr.ph ], [ %dvdl.1, %162 ]
  %86 = getelementptr inbounds i16* %51, i64 %indvars.iv25
  %87 = load i16* %86, align 2, !tbaa !29
  %88 = getelementptr inbounds i16* %53, i64 %indvars.iv25
  %89 = load i16* %88, align 2, !tbaa !29
  %90 = getelementptr inbounds float* %55, i64 %indvars.iv25
  %91 = load float* %90, align 4, !tbaa !6
  %92 = fmul float %91, 5.000000e-01
  br i1 %56, label %101, label %93

; <label>:93                                      ; preds = %85
  %94 = zext i16 %89 to i64
  %95 = getelementptr inbounds %struct.t_sdconst* %64, i64 %94, i32 3
  %96 = load float* %95, align 4, !tbaa !12
  %97 = fpext float %96 to double
  %98 = fmul double %97, 0x3FCA827980000000
  %99 = fsub double 0x3FE6A09E60000000, %98
  %100 = fptrunc double %99 to float
  br label %101

; <label>:101                                     ; preds = %85, %93
  %fac.0 = phi float [ %100, %93 ], [ 5.000000e-01, %85 ]
  %102 = zext i16 %87 to i64
  br label %110

.preheader:                                       ; preds = %110
  %103 = load float* %57, align 4, !tbaa !6
  %104 = fmul float %92, %103
  %105 = zext i16 %89 to i64
  %106 = load float* %58, align 4, !tbaa !6
  %107 = fmul float %92, %106
  %108 = load float* %59, align 4, !tbaa !6
  %109 = fmul float %92, %108
  br label %122

; <label>:110                                     ; preds = %110, %101
  %indvars.iv = phi i64 [ 0, %101 ], [ %indvars.iv.next, %110 ]
  %111 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv25, i64 %indvars.iv
  %112 = load float* %111, align 4, !tbaa !6
  %113 = getelementptr inbounds [3 x float]* %vold, i64 %indvars.iv25, i64 %indvars.iv
  %114 = load float* %113, align 4, !tbaa !6
  %115 = fadd float %112, %114
  %116 = fmul float %fac.0, %115
  %117 = getelementptr inbounds [3 x float]* %vt, i64 %indvars.iv25, i64 %indvars.iv
  store float %116, float* %117, align 4, !tbaa !6
  %118 = getelementptr inbounds %struct.t_grp_acc* %4, i64 %102, i32 5, i64 %indvars.iv
  %119 = load float* %118, align 4, !tbaa !6
  %120 = fsub float %116, %119
  %121 = getelementptr inbounds [3 x float]* %v_corrt, i64 0, i64 %indvars.iv
  store float %120, float* %121, align 4, !tbaa !6
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %.preheader, label %110

; <label>:122                                     ; preds = %._crit_edge43, %.preheader
  %123 = phi float [ %103, %.preheader ], [ %.pre44, %._crit_edge43 ]
  %indvars.iv22 = phi i64 [ 0, %.preheader ], [ %indvars.iv.next23, %._crit_edge43 ]
  %124 = fmul float %104, %123
  %125 = getelementptr inbounds %struct.t_grp_tcstat* %2, i64 %105, i32 2, i64 0, i64 %indvars.iv22
  %126 = load float* %125, align 4, !tbaa !6
  %127 = fadd float %126, %124
  store float %127, float* %125, align 4, !tbaa !6
  %128 = fmul float %107, %123
  %129 = getelementptr inbounds %struct.t_grp_tcstat* %2, i64 %105, i32 2, i64 1, i64 %indvars.iv22
  %130 = load float* %129, align 4, !tbaa !6
  %131 = fadd float %130, %128
  store float %131, float* %129, align 4, !tbaa !6
  %132 = fmul float %109, %123
  %133 = getelementptr inbounds %struct.t_grp_tcstat* %2, i64 %105, i32 2, i64 2, i64 %indvars.iv22
  %134 = load float* %133, align 4, !tbaa !6
  %135 = fadd float %134, %132
  store float %135, float* %133, align 4, !tbaa !6
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1
  %exitcond24 = icmp eq i64 %indvars.iv.next23, 3
  br i1 %exitcond24, label %136, label %._crit_edge43

._crit_edge43:                                    ; preds = %122
  %.phi.trans.insert = getelementptr inbounds [3 x float]* %v_corrt, i64 0, i64 %indvars.iv.next23
  %.pre44 = load float* %.phi.trans.insert, align 4, !tbaa !6
  br label %122

; <label>:136                                     ; preds = %122
  br i1 %60, label %162, label %137

; <label>:137                                     ; preds = %136
  %138 = load i32** %61, align 8, !tbaa !31
  %139 = getelementptr inbounds i32* %138, i64 %indvars.iv25
  %140 = load i32* %139, align 4, !tbaa !32
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %162, label %142

; <label>:142                                     ; preds = %137
  %143 = load float** %62, align 8, !tbaa !33
  %144 = getelementptr inbounds float* %143, i64 %indvars.iv25
  %145 = load float* %144, align 4, !tbaa !6
  %146 = load float** %63, align 8, !tbaa !34
  %147 = getelementptr inbounds float* %146, i64 %indvars.iv25
  %148 = load float* %147, align 4, !tbaa !6
  %149 = fsub float %145, %148
  %150 = fpext float %149 to double
  %151 = fmul double %150, 5.000000e-01
  %152 = fmul float %103, %103
  %153 = fmul float %106, %106
  %154 = fadd float %152, %153
  %155 = fmul float %108, %108
  %156 = fadd float %154, %155
  %157 = fpext float %156 to double
  %158 = fmul double %151, %157
  %159 = fpext float %dvdl.011 to double
  %160 = fsub double %159, %158
  %161 = fptrunc double %160 to float
  br label %162

; <label>:162                                     ; preds = %137, %136, %142
  %dvdl.1 = phi float [ %161, %142 ], [ %dvdl.011, %137 ], [ %dvdl.011, %136 ]
  %indvars.iv.next26 = add nsw i64 %indvars.iv25, 1
  %163 = icmp slt i64 %indvars.iv.next26, %66
  br i1 %163, label %85, label %._crit_edge

._crit_edge:                                      ; preds = %162, %.preheader1
  %dvdl.0.lcssa = phi float [ 0.000000e+00, %.preheader1 ], [ %dvdl.1, %162 ]
  %164 = icmp eq float* %dvdlambda, null
  br i1 %164, label %168, label %165

; <label>:165                                     ; preds = %._crit_edge
  %166 = load float* %dvdlambda, align 4, !tbaa !6
  %167 = fadd float %dvdl.0.lcssa, %166
  store float %167, float* %dvdlambda, align 4, !tbaa !6
  br label %168

; <label>:168                                     ; preds = %._crit_edge, %165
  %169 = sitofp i32 %homenr to double
  %170 = getelementptr inbounds %struct.t_nrnb* %nrnb, i64 0, i32 0, i64 112
  %171 = load double* %170, align 8, !tbaa !35
  %172 = fadd double %169, %171
  store double %172, double* %170, align 8, !tbaa !35
  ret void
}
