define internal fastcc i32 @Name2eo(i8* %s) #0 {
entry:
  br label %for.body

for.cond:                                         ; preds = %for.body
  %inc = add nsw i32 %i.010, 1
  %0 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %0, 17
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.cond
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.cond ]
  %i.010 = phi i32 [ 0, %entry ], [ %inc, %for.cond ]
  %arrayidx = getelementptr inbounds [17 x i8*]* @eoNames, i64 0, i64 %indvars.iv
  %1 = load i8** %arrayidx, align 8, !tbaa !3
  %call = tail call i32 @gmx_strcasecmp(i8* %s, i8* %1) #6
  %cmp1 = icmp eq i32 %call, 0
  %indvars.iv.next = add i64 %indvars.iv, 1
  br i1 %cmp1, label %if.then, label %for.cond

if.then:                                          ; preds = %for.body
  %2 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %3 = load i8** %arrayidx, align 8, !tbaa !3
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([32 x i8]* @.str68, i64 0, i64 0), i32 %i.010, i8* %3) #6
  br label %for.end

for.end:                                          ; preds = %for.cond, %if.then
  %res.0 = phi i32 [ %i.010, %if.then ], [ -1, %for.cond ]
  ret i32 %res.0
}
