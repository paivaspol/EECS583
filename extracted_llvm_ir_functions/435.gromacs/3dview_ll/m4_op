define void @m4_op([4 x float]* nocapture readonly %m, float* nocapture readonly %x, float* nocapture %v) #3 {
  %1 = getelementptr inbounds float* %x, i64 1
  %2 = getelementptr inbounds float* %x, i64 2
  br label %3

; <label>:3                                       ; preds = %3, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %3 ]
  %4 = getelementptr inbounds [4 x float]* %m, i64 0, i64 %indvars.iv
  %5 = load float* %4, align 4, !tbaa !14
  %6 = load float* %x, align 4, !tbaa !14
  %7 = fmul float %5, %6
  %8 = getelementptr inbounds [4 x float]* %m, i64 1, i64 %indvars.iv
  %9 = load float* %8, align 4, !tbaa !14
  %10 = load float* %1, align 4, !tbaa !14
  %11 = fmul float %9, %10
  %12 = fadd float %7, %11
  %13 = getelementptr inbounds [4 x float]* %m, i64 2, i64 %indvars.iv
  %14 = load float* %13, align 4, !tbaa !14
  %15 = load float* %2, align 4, !tbaa !14
  %16 = fmul float %14, %15
  %17 = fadd float %12, %16
  %18 = getelementptr inbounds [4 x float]* %m, i64 3, i64 %indvars.iv
  %19 = load float* %18, align 4, !tbaa !14
  %20 = fadd float %19, %17
  %21 = getelementptr inbounds float* %v, i64 %indvars.iv
  store float %20, float* %21, align 4, !tbaa !14
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond, label %22, label %3

; <label>:22                                      ; preds = %3
  ret void
}
