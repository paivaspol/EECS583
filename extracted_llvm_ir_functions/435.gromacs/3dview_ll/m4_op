define void @m4_op([4 x float]* nocapture %m, float* nocapture %x, float* nocapture %v) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{[4 x float]* %m}, i64 0, metadata !16), !dbg !238
  tail call void @llvm.dbg.value(metadata !{float* %x}, i64 0, metadata !17), !dbg !238
  tail call void @llvm.dbg.value(metadata !{float* %v}, i64 0, metadata !18), !dbg !238
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !19), !dbg !239
  %arrayidx6 = getelementptr inbounds float* %x, i64 1, !dbg !241
  %arrayidx11 = getelementptr inbounds float* %x, i64 2, !dbg !241
  br label %for.body, !dbg !239

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %arrayidx1 = getelementptr inbounds [4 x float]* %m, i64 0, i64 %indvars.iv, !dbg !241
  %0 = load float* %arrayidx1, align 4, !dbg !241, !tbaa !242
  %1 = load float* %x, align 4, !dbg !241, !tbaa !242
  %mul = fmul float %0, %1, !dbg !241
  %arrayidx5 = getelementptr inbounds [4 x float]* %m, i64 1, i64 %indvars.iv, !dbg !241
  %2 = load float* %arrayidx5, align 4, !dbg !241, !tbaa !242
  %3 = load float* %arrayidx6, align 4, !dbg !241, !tbaa !242
  %mul7 = fmul float %2, %3, !dbg !241
  %add = fadd float %mul, %mul7, !dbg !241
  %arrayidx10 = getelementptr inbounds [4 x float]* %m, i64 2, i64 %indvars.iv, !dbg !241
  %4 = load float* %arrayidx10, align 4, !dbg !241, !tbaa !242
  %5 = load float* %arrayidx11, align 4, !dbg !241, !tbaa !242
  %mul12 = fmul float %4, %5, !dbg !241
  %add13 = fadd float %add, %mul12, !dbg !241
  %arrayidx16 = getelementptr inbounds [4 x float]* %m, i64 3, i64 %indvars.iv, !dbg !241
  %6 = load float* %arrayidx16, align 4, !dbg !241, !tbaa !242
  %add17 = fadd float %6, %add13, !dbg !241
  %arrayidx19 = getelementptr inbounds float* %v, i64 %indvars.iv, !dbg !241
  store float %add17, float* %arrayidx19, align 4, !dbg !241, !tbaa !242
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !239
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !239
  %exitcond = icmp eq i32 %lftr.wideiv, 4, !dbg !239
  br i1 %exitcond, label %for.end, label %for.body, !dbg !239

for.end:                                          ; preds = %for.body
  ret void, !dbg !245
}
