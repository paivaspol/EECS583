define void @rotate_3d(%struct.t_3dview* nocapture %view, i32 %axis, i32 %bPositive) #4 {
  %m4 = alloca [4 x [4 x float]], align 16
  tail call void @llvm.dbg.value(metadata %struct.t_3dview* %view, i64 0, metadata !204, metadata !259), !dbg !738
  tail call void @llvm.dbg.value(metadata i32 %axis, i64 0, metadata !205, metadata !259), !dbg !739
  tail call void @llvm.dbg.value(metadata i32 %bPositive, i64 0, metadata !206, metadata !259), !dbg !740
  %1 = bitcast [4 x [4 x float]]* %m4 to i8*, !dbg !741
  call void @llvm.lifetime.start(i64 64, i8* %1) #7, !dbg !741
  tail call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %m4, metadata !209, metadata !259), !dbg !742
  tail call void @llvm.dbg.value(metadata float 0x3FD0C15240000000, i64 0, metadata !210, metadata !259), !dbg !743
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !207, metadata !259), !dbg !744
  br label %2, !dbg !745

; <label>:2                                       ; preds = %2, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %2 ]
  %3 = getelementptr inbounds [3 x [4 x [4 x float]]]* @rotate_3d.RotP, i64 0, i64 %indvars.iv, i64 0, !dbg !747
  %4 = trunc i64 %indvars.iv to i32, !dbg !750
  tail call void @rotate(i32 %4, float 0x3FD0C15240000000, [4 x float]* %3) #10, !dbg !750
  %5 = getelementptr inbounds [3 x [4 x [4 x float]]]* @rotate_3d.RotM, i64 0, i64 %indvars.iv, i64 0, !dbg !751
  tail call void @rotate(i32 %4, float 0xBFD0C15240000000, [4 x float]* %5) #10, !dbg !752
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !745
  %exitcond8 = icmp eq i64 %indvars.iv.next, 3, !dbg !745
  br i1 %exitcond8, label %6, label %2, !dbg !745

; <label>:6                                       ; preds = %2
  %7 = icmp eq i32 %bPositive, 0, !dbg !753
  %8 = getelementptr inbounds [4 x [4 x float]]* %m4, i64 0, i64 0, !dbg !755
  %9 = getelementptr inbounds %struct.t_3dview* %view, i64 0, i32 4, i64 0, !dbg !756
  %10 = sext i32 %axis to i64, !dbg !757
  br i1 %7, label %13, label %11, !dbg !758

; <label>:11                                      ; preds = %6
  %12 = getelementptr inbounds [3 x [4 x [4 x float]]]* @rotate_3d.RotP, i64 0, i64 %10, i64 0, !dbg !757
  call void @mult_matrix([4 x float]* %8, [4 x float]* %9, [4 x float]* %12) #10, !dbg !759
  br label %.preheader, !dbg !759

; <label>:13                                      ; preds = %6
  %14 = getelementptr inbounds [3 x [4 x [4 x float]]]* @rotate_3d.RotM, i64 0, i64 %10, i64 0, !dbg !760
  call void @mult_matrix([4 x float]* %8, [4 x float]* %9, [4 x float]* %14) #10, !dbg !761
  br label %.preheader

.preheader:                                       ; preds = %11, %13, %.preheader
  %indvar = phi i64 [ %indvar.next, %.preheader ], [ 0, %13 ], [ 0, %11 ]
  %scevgep = getelementptr %struct.t_3dview* %view, i64 0, i32 4, i64 %indvar, i64 0
  %scevgep5 = bitcast float* %scevgep to i8*
  %scevgep6 = getelementptr [4 x [4 x float]]* %m4, i64 0, i64 %indvar, i64 0
  %scevgep67 = bitcast float* %scevgep6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %scevgep5, i8* %scevgep67, i64 16, i32 4, i1 false), !dbg !762
  %indvar.next = add nuw nsw i64 %indvar, 1, !dbg !767
  %exitcond = icmp eq i64 %indvar.next, 4, !dbg !767
  br i1 %exitcond, label %15, label %.preheader, !dbg !767

; <label>:15                                      ; preds = %.preheader
  tail call void @calculate_view(%struct.t_3dview* %view) #10, !dbg !768
  call void @llvm.lifetime.end(i64 64, i8* %1) #7, !dbg !769
  ret void, !dbg !769
}
