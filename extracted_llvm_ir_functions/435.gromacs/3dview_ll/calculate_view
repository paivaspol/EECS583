define void @calculate_view(%struct.t_3dview* nocapture %view) #3 {
  %To = alloca [4 x [4 x float]], align 16
  %Te = alloca [4 x [4 x float]], align 16
  %T1 = alloca [4 x [4 x float]], align 16
  %T2 = alloca [4 x [4 x float]], align 16
  %T3 = alloca [4 x [4 x float]], align 16
  %T4 = alloca [4 x [4 x float]], align 16
  %T5 = alloca [4 x [4 x float]], align 16
  %N1 = alloca [4 x [4 x float]], align 16
  %D1 = alloca [4 x [4 x float]], align 16
  %D2 = alloca [4 x [4 x float]], align 16
  %D3 = alloca [4 x [4 x float]], align 16
  %D4 = alloca [4 x [4 x float]], align 16
  %D5 = alloca [4 x [4 x float]], align 16
  %1 = bitcast [4 x [4 x float]]* %To to i8*
  call void @llvm.lifetime.start(i64 64, i8* %1) #6
  %2 = bitcast [4 x [4 x float]]* %Te to i8*
  call void @llvm.lifetime.start(i64 64, i8* %2) #6
  %3 = bitcast [4 x [4 x float]]* %T1 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %3) #6
  %4 = bitcast [4 x [4 x float]]* %T2 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %4) #6
  %5 = bitcast [4 x [4 x float]]* %T3 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %5) #6
  %6 = bitcast [4 x [4 x float]]* %T4 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %6) #6
  %7 = bitcast [4 x [4 x float]]* %T5 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %7) #6
  %8 = bitcast [4 x [4 x float]]* %N1 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %8) #6
  %9 = bitcast [4 x [4 x float]]* %D1 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %9) #6
  %10 = bitcast [4 x [4 x float]]* %D2 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %10) #6
  %11 = bitcast [4 x [4 x float]]* %D3 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %11) #6
  %12 = bitcast [4 x [4 x float]]* %D4 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %12) #6
  %13 = bitcast [4 x [4 x float]]* %D5 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %13) #6
  %14 = getelementptr inbounds %struct.t_3dview* %view, i64 0, i32 1, i64 0
  %15 = load float* %14, align 4, !tbaa !14
  %16 = getelementptr inbounds %struct.t_3dview* %view, i64 0, i32 1, i64 1
  %17 = load float* %16, align 4, !tbaa !14
  %18 = getelementptr inbounds %struct.t_3dview* %view, i64 0, i32 1, i64 2
  %19 = load float* %18, align 4, !tbaa !14
  %20 = fmul float %15, %15
  %21 = fmul float %17, %17
  %22 = fadd float %20, %21
  %23 = fmul float %19, %19
  %24 = fadd float %22, %23
  %sqrtf = tail call float @sqrtf(float %24) #5
  %sqrtf1 = tail call float @sqrtf(float %22) #5
  %25 = fpext float %sqrtf to double
  %26 = fcmp olt double %25, 1.000000e-06
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %0
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([46 x i8]* @.str5, i64 0, i64 0)) #7
  br label %28

; <label>:28                                      ; preds = %27, %0
  %29 = getelementptr inbounds %struct.t_3dview* %view, i64 0, i32 2, i64 0
  %30 = load float* %29, align 4, !tbaa !14
  %31 = getelementptr inbounds %struct.t_3dview* %view, i64 0, i32 2, i64 1
  %32 = load float* %31, align 4, !tbaa !14
  %33 = getelementptr inbounds %struct.t_3dview* %view, i64 0, i32 2, i64 2
  %34 = load float* %33, align 4, !tbaa !14
  %35 = fsub float -0.000000e+00, %34
  br label %.preheader.i.i

.preheader.i.i:                                   ; preds = %41, %28
  %indvars.iv3.i.i = phi i64 [ 0, %28 ], [ %indvars.iv.next4.i.i, %41 ]
  %36 = trunc i64 %indvars.iv3.i.i to i32
  br label %37

; <label>:37                                      ; preds = %37, %.preheader.i.i
  %indvars.iv.i.i = phi i64 [ 0, %.preheader.i.i ], [ %indvars.iv.next.i.i, %37 ]
  %38 = trunc i64 %indvars.iv.i.i to i32
  %39 = icmp eq i32 %36, %38
  %40 = getelementptr inbounds [4 x [4 x float]]* %To, i64 0, i64 %indvars.iv3.i.i, i64 %indvars.iv.i.i
  %..i.i = select i1 %39, float 1.000000e+00, float 0.000000e+00
  store float %..i.i, float* %40, align 4, !tbaa !14
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.i.i = icmp eq i64 %indvars.iv.next.i.i, 4
  br i1 %exitcond.i.i, label %41, label %37

; <label>:41                                      ; preds = %37
  %indvars.iv.next4.i.i = add nuw nsw i64 %indvars.iv3.i.i, 1
  %exitcond5.i.i = icmp eq i64 %indvars.iv.next4.i.i, 4
  br i1 %exitcond5.i.i, label %translate.exit, label %.preheader.i.i

translate.exit:                                   ; preds = %41
  %42 = fsub float -0.000000e+00, %30
  %43 = fsub float -0.000000e+00, %32
  %44 = getelementptr inbounds [4 x [4 x float]]* %To, i64 0, i64 0
  %45 = getelementptr inbounds [4 x [4 x float]]* %To, i64 0, i64 3, i64 0
  store float %42, float* %45, align 16, !tbaa !14
  %46 = getelementptr inbounds [4 x [4 x float]]* %To, i64 0, i64 3, i64 1
  store float %43, float* %46, align 4, !tbaa !14
  %47 = getelementptr inbounds [4 x [4 x float]]* %To, i64 0, i64 3, i64 2
  store float %35, float* %47, align 8, !tbaa !14
  %48 = load float* %14, align 4, !tbaa !14
  %49 = load float* %16, align 4, !tbaa !14
  %50 = load float* %18, align 4, !tbaa !14
  %51 = fsub float -0.000000e+00, %50
  br label %.preheader.i.i3

.preheader.i.i3:                                  ; preds = %57, %translate.exit
  %indvars.iv3.i.i2 = phi i64 [ 0, %translate.exit ], [ %indvars.iv.next4.i.i8, %57 ]
  %52 = trunc i64 %indvars.iv3.i.i2 to i32
  br label %53

; <label>:53                                      ; preds = %53, %.preheader.i.i3
  %indvars.iv.i.i4 = phi i64 [ 0, %.preheader.i.i3 ], [ %indvars.iv.next.i.i6, %53 ]
  %54 = trunc i64 %indvars.iv.i.i4 to i32
  %55 = icmp eq i32 %52, %54
  %56 = getelementptr inbounds [4 x [4 x float]]* %Te, i64 0, i64 %indvars.iv3.i.i2, i64 %indvars.iv.i.i4
  %..i.i5 = select i1 %55, float 1.000000e+00, float 0.000000e+00
  store float %..i.i5, float* %56, align 4, !tbaa !14
  %indvars.iv.next.i.i6 = add nuw nsw i64 %indvars.iv.i.i4, 1
  %exitcond.i.i7 = icmp eq i64 %indvars.iv.next.i.i6, 4
  br i1 %exitcond.i.i7, label %57, label %53

; <label>:57                                      ; preds = %53
  %indvars.iv.next4.i.i8 = add nuw nsw i64 %indvars.iv3.i.i2, 1
  %exitcond5.i.i9 = icmp eq i64 %indvars.iv.next4.i.i8, 4
  br i1 %exitcond5.i.i9, label %translate.exit10, label %.preheader.i.i3

translate.exit10:                                 ; preds = %57
  %58 = fsub float -0.000000e+00, %48
  %59 = fsub float -0.000000e+00, %49
  %60 = getelementptr inbounds [4 x [4 x float]]* %Te, i64 0, i64 0
  %61 = getelementptr inbounds [4 x [4 x float]]* %Te, i64 0, i64 3, i64 0
  store float %58, float* %61, align 16, !tbaa !14
  %62 = getelementptr inbounds [4 x [4 x float]]* %Te, i64 0, i64 3, i64 1
  store float %59, float* %62, align 4, !tbaa !14
  %63 = getelementptr inbounds [4 x [4 x float]]* %Te, i64 0, i64 3, i64 2
  store float %51, float* %63, align 8, !tbaa !14
  br label %.preheader.i

.preheader.i:                                     ; preds = %69, %translate.exit10
  %indvars.iv3.i = phi i64 [ 0, %translate.exit10 ], [ %indvars.iv.next4.i, %69 ]
  %64 = trunc i64 %indvars.iv3.i to i32
  br label %65

; <label>:65                                      ; preds = %65, %.preheader.i
  %indvars.iv.i = phi i64 [ 0, %.preheader.i ], [ %indvars.iv.next.i, %65 ]
  %66 = trunc i64 %indvars.iv.i to i32
  %67 = icmp eq i32 %64, %66
  %68 = getelementptr inbounds [4 x [4 x float]]* %T2, i64 0, i64 %indvars.iv3.i, i64 %indvars.iv.i
  %..i = select i1 %67, float 1.000000e+00, float 0.000000e+00
  store float %..i, float* %68, align 4, !tbaa !14
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 4
  br i1 %exitcond.i, label %69, label %65

; <label>:69                                      ; preds = %65
  %indvars.iv.next4.i = add nuw nsw i64 %indvars.iv3.i, 1
  %exitcond5.i = icmp eq i64 %indvars.iv.next4.i, 4
  br i1 %exitcond5.i, label %unity_m4.exit, label %.preheader.i

unity_m4.exit:                                    ; preds = %69
  %70 = getelementptr inbounds [4 x [4 x float]]* %T2, i64 0, i64 0
  %71 = getelementptr inbounds [4 x [4 x float]]* %T2, i64 0, i64 1, i64 1
  store float 0.000000e+00, float* %71, align 4, !tbaa !14
  %72 = getelementptr inbounds [4 x [4 x float]]* %T2, i64 0, i64 1, i64 2
  store float -1.000000e+00, float* %72, align 8, !tbaa !14
  %73 = getelementptr inbounds [4 x [4 x float]]* %T2, i64 0, i64 2, i64 1
  store float 1.000000e+00, float* %73, align 4, !tbaa !14
  %74 = getelementptr inbounds [4 x [4 x float]]* %T2, i64 0, i64 2, i64 2
  store float 0.000000e+00, float* %74, align 8, !tbaa !14
  br label %.preheader.i12

.preheader.i12:                                   ; preds = %80, %unity_m4.exit
  %indvars.iv3.i11 = phi i64 [ 0, %unity_m4.exit ], [ %indvars.iv.next4.i17, %80 ]
  %75 = trunc i64 %indvars.iv3.i11 to i32
  br label %76

; <label>:76                                      ; preds = %76, %.preheader.i12
  %indvars.iv.i13 = phi i64 [ 0, %.preheader.i12 ], [ %indvars.iv.next.i15, %76 ]
  %77 = trunc i64 %indvars.iv.i13 to i32
  %78 = icmp eq i32 %75, %77
  %79 = getelementptr inbounds [4 x [4 x float]]* %T3, i64 0, i64 %indvars.iv3.i11, i64 %indvars.iv.i13
  %..i14 = select i1 %78, float 1.000000e+00, float 0.000000e+00
  store float %..i14, float* %79, align 4, !tbaa !14
  %indvars.iv.next.i15 = add nuw nsw i64 %indvars.iv.i13, 1
  %exitcond.i16 = icmp eq i64 %indvars.iv.next.i15, 4
  br i1 %exitcond.i16, label %80, label %76

; <label>:80                                      ; preds = %76
  %indvars.iv.next4.i17 = add nuw nsw i64 %indvars.iv3.i11, 1
  %exitcond5.i18 = icmp eq i64 %indvars.iv.next4.i17, 4
  br i1 %exitcond5.i18, label %unity_m4.exit19, label %.preheader.i12

unity_m4.exit19:                                  ; preds = %80
  %81 = getelementptr inbounds [4 x [4 x float]]* %T3, i64 0, i64 0
  %82 = fcmp ogt float %sqrtf1, 0.000000e+00
  br i1 %82, label %83, label %.preheader.i21

; <label>:83                                      ; preds = %unity_m4.exit19
  %84 = fsub float -0.000000e+00, %17
  %85 = fdiv float %84, %sqrtf1
  %86 = getelementptr inbounds [4 x [4 x float]]* %T3, i64 0, i64 0, i64 0
  store float %85, float* %86, align 16, !tbaa !14
  %87 = fdiv float %15, %sqrtf1
  %88 = getelementptr inbounds [4 x [4 x float]]* %T3, i64 0, i64 0, i64 2
  store float %87, float* %88, align 8, !tbaa !14
  %89 = fsub float -0.000000e+00, %15
  %90 = fdiv float %89, %sqrtf1
  %91 = getelementptr inbounds [4 x [4 x float]]* %T3, i64 0, i64 2, i64 0
  store float %90, float* %91, align 16, !tbaa !14
  %92 = getelementptr inbounds [4 x [4 x float]]* %T3, i64 0, i64 2, i64 2
  store float %85, float* %92, align 8, !tbaa !14
  br label %.preheader.i21

.preheader.i21:                                   ; preds = %unity_m4.exit19, %83, %98
  %indvars.iv3.i20 = phi i64 [ %indvars.iv.next4.i26, %98 ], [ 0, %83 ], [ 0, %unity_m4.exit19 ]
  %93 = trunc i64 %indvars.iv3.i20 to i32
  br label %94

; <label>:94                                      ; preds = %94, %.preheader.i21
  %indvars.iv.i22 = phi i64 [ 0, %.preheader.i21 ], [ %indvars.iv.next.i24, %94 ]
  %95 = trunc i64 %indvars.iv.i22 to i32
  %96 = icmp eq i32 %93, %95
  %97 = getelementptr inbounds [4 x [4 x float]]* %T4, i64 0, i64 %indvars.iv3.i20, i64 %indvars.iv.i22
  %..i23 = select i1 %96, float 1.000000e+00, float 0.000000e+00
  store float %..i23, float* %97, align 4, !tbaa !14
  %indvars.iv.next.i24 = add nuw nsw i64 %indvars.iv.i22, 1
  %exitcond.i25 = icmp eq i64 %indvars.iv.next.i24, 4
  br i1 %exitcond.i25, label %98, label %94

; <label>:98                                      ; preds = %94
  %indvars.iv.next4.i26 = add nuw nsw i64 %indvars.iv3.i20, 1
  %exitcond5.i27 = icmp eq i64 %indvars.iv.next4.i26, 4
  br i1 %exitcond5.i27, label %unity_m4.exit28, label %.preheader.i21

unity_m4.exit28:                                  ; preds = %98
  %99 = getelementptr inbounds [4 x [4 x float]]* %T4, i64 0, i64 0
  %100 = fdiv float %sqrtf1, %sqrtf
  %101 = getelementptr inbounds [4 x [4 x float]]* %T4, i64 0, i64 1, i64 1
  store float %100, float* %101, align 4, !tbaa !14
  %102 = fdiv float %19, %sqrtf
  %103 = getelementptr inbounds [4 x [4 x float]]* %T4, i64 0, i64 1, i64 2
  store float %102, float* %103, align 8, !tbaa !14
  %104 = fsub float -0.000000e+00, %19
  %105 = fdiv float %104, %sqrtf
  %106 = getelementptr inbounds [4 x [4 x float]]* %T4, i64 0, i64 2, i64 1
  store float %105, float* %106, align 4, !tbaa !14
  %107 = getelementptr inbounds [4 x [4 x float]]* %T4, i64 0, i64 2, i64 2
  store float %100, float* %107, align 8, !tbaa !14
  br label %.preheader.i30

.preheader.i30:                                   ; preds = %113, %unity_m4.exit28
  %indvars.iv3.i29 = phi i64 [ 0, %unity_m4.exit28 ], [ %indvars.iv.next4.i35, %113 ]
  %108 = trunc i64 %indvars.iv3.i29 to i32
  br label %109

; <label>:109                                     ; preds = %109, %.preheader.i30
  %indvars.iv.i31 = phi i64 [ 0, %.preheader.i30 ], [ %indvars.iv.next.i33, %109 ]
  %110 = trunc i64 %indvars.iv.i31 to i32
  %111 = icmp eq i32 %108, %110
  %112 = getelementptr inbounds [4 x [4 x float]]* %T5, i64 0, i64 %indvars.iv3.i29, i64 %indvars.iv.i31
  %..i32 = select i1 %111, float 1.000000e+00, float 0.000000e+00
  store float %..i32, float* %112, align 4, !tbaa !14
  %indvars.iv.next.i33 = add nuw nsw i64 %indvars.iv.i31, 1
  %exitcond.i34 = icmp eq i64 %indvars.iv.next.i33, 4
  br i1 %exitcond.i34, label %113, label %109

; <label>:113                                     ; preds = %109
  %indvars.iv.next4.i35 = add nuw nsw i64 %indvars.iv3.i29, 1
  %exitcond5.i36 = icmp eq i64 %indvars.iv.next4.i35, 4
  br i1 %exitcond5.i36, label %unity_m4.exit37, label %.preheader.i30

unity_m4.exit37:                                  ; preds = %113
  %114 = getelementptr inbounds [4 x [4 x float]]* %T5, i64 0, i64 0
  %115 = getelementptr inbounds [4 x [4 x float]]* %T5, i64 0, i64 2, i64 2
  store float -1.000000e+00, float* %115, align 8, !tbaa !14
  br label %.preheader.i39

.preheader.i39:                                   ; preds = %121, %unity_m4.exit37
  %indvars.iv3.i38 = phi i64 [ 0, %unity_m4.exit37 ], [ %indvars.iv.next4.i44, %121 ]
  %116 = trunc i64 %indvars.iv3.i38 to i32
  br label %117

; <label>:117                                     ; preds = %117, %.preheader.i39
  %indvars.iv.i40 = phi i64 [ 0, %.preheader.i39 ], [ %indvars.iv.next.i42, %117 ]
  %118 = trunc i64 %indvars.iv.i40 to i32
  %119 = icmp eq i32 %116, %118
  %120 = getelementptr inbounds [4 x [4 x float]]* %N1, i64 0, i64 %indvars.iv3.i38, i64 %indvars.iv.i40
  %..i41 = select i1 %119, float 1.000000e+00, float 0.000000e+00
  store float %..i41, float* %120, align 4, !tbaa !14
  %indvars.iv.next.i42 = add nuw nsw i64 %indvars.iv.i40, 1
  %exitcond.i43 = icmp eq i64 %indvars.iv.next.i42, 4
  br i1 %exitcond.i43, label %121, label %117

; <label>:121                                     ; preds = %117
  %indvars.iv.next4.i44 = add nuw nsw i64 %indvars.iv3.i38, 1
  %exitcond5.i45 = icmp eq i64 %indvars.iv.next4.i44, 4
  br i1 %exitcond5.i45, label %unity_m4.exit46, label %.preheader.i39

unity_m4.exit46:                                  ; preds = %121
  %122 = getelementptr inbounds [4 x [4 x float]]* %N1, i64 0, i64 0
  %123 = getelementptr inbounds [4 x [4 x float]]* %T1, i64 0, i64 0
  %124 = getelementptr inbounds %struct.t_3dview* %view, i64 0, i32 4, i64 0
  call void @mult_matrix([4 x float]* %123, [4 x float]* %44, [4 x float]* %124) #9
  %125 = getelementptr inbounds [4 x [4 x float]]* %D1, i64 0, i64 0
  call void @mult_matrix([4 x float]* %125, [4 x float]* %60, [4 x float]* %70) #9
  %126 = getelementptr inbounds [4 x [4 x float]]* %D2, i64 0, i64 0
  call void @mult_matrix([4 x float]* %126, [4 x float]* %81, [4 x float]* %99) #9
  %127 = getelementptr inbounds [4 x [4 x float]]* %D3, i64 0, i64 0
  call void @mult_matrix([4 x float]* %127, [4 x float]* %114, [4 x float]* %122) #9
  %128 = getelementptr inbounds [4 x [4 x float]]* %D4, i64 0, i64 0
  call void @mult_matrix([4 x float]* %128, [4 x float]* %123, [4 x float]* %125) #9
  %129 = getelementptr inbounds [4 x [4 x float]]* %D5, i64 0, i64 0
  call void @mult_matrix([4 x float]* %129, [4 x float]* %126, [4 x float]* %127) #9
  %130 = getelementptr inbounds %struct.t_3dview* %view, i64 0, i32 3, i64 0
  call void @mult_matrix([4 x float]* %130, [4 x float]* %128, [4 x float]* %129) #9
  call void @llvm.lifetime.end(i64 64, i8* %13) #6
  call void @llvm.lifetime.end(i64 64, i8* %12) #6
  call void @llvm.lifetime.end(i64 64, i8* %11) #6
  call void @llvm.lifetime.end(i64 64, i8* %10) #6
  call void @llvm.lifetime.end(i64 64, i8* %9) #6
  call void @llvm.lifetime.end(i64 64, i8* %8) #6
  call void @llvm.lifetime.end(i64 64, i8* %7) #6
  call void @llvm.lifetime.end(i64 64, i8* %6) #6
  call void @llvm.lifetime.end(i64 64, i8* %5) #6
  call void @llvm.lifetime.end(i64 64, i8* %4) #6
  call void @llvm.lifetime.end(i64 64, i8* %3) #6
  call void @llvm.lifetime.end(i64 64, i8* %2) #6
  call void @llvm.lifetime.end(i64 64, i8* %1) #6
  ret void
}
