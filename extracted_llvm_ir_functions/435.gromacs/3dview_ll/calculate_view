define void @calculate_view(%struct.t_3dview* nocapture %view) #0 {
entry:
  %To = alloca [4 x [4 x float]], align 16
  %Te = alloca [4 x [4 x float]], align 16
  %T1 = alloca [4 x [4 x float]], align 16
  %T2 = alloca [4 x [4 x float]], align 16
  %T3 = alloca [4 x [4 x float]], align 16
  %T4 = alloca [4 x [4 x float]], align 16
  %T5 = alloca [4 x [4 x float]], align 16
  %N1 = alloca [4 x [4 x float]], align 16
  %D1 = alloca [4 x [4 x float]], align 16
  %D2 = alloca [4 x [4 x float]], align 16
  %D3 = alloca [4 x [4 x float]], align 16
  %D4 = alloca [4 x [4 x float]], align 16
  %D5 = alloca [4 x [4 x float]], align 16
  %0 = bitcast [4 x [4 x float]]* %To to i8*
  call void @llvm.lifetime.start(i64 64, i8* %0) #3
  %1 = bitcast [4 x [4 x float]]* %Te to i8*
  call void @llvm.lifetime.start(i64 64, i8* %1) #3
  %2 = bitcast [4 x [4 x float]]* %T1 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %2) #3
  %3 = bitcast [4 x [4 x float]]* %T2 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %3) #3
  %4 = bitcast [4 x [4 x float]]* %T3 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %4) #3
  %5 = bitcast [4 x [4 x float]]* %T4 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %5) #3
  %6 = bitcast [4 x [4 x float]]* %T5 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %6) #3
  %7 = bitcast [4 x [4 x float]]* %N1 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %7) #3
  %8 = bitcast [4 x [4 x float]]* %D1 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %8) #3
  %9 = bitcast [4 x [4 x float]]* %D2 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %9) #3
  %10 = bitcast [4 x [4 x float]]* %D3 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %10) #3
  %11 = bitcast [4 x [4 x float]]* %D4 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %11) #3
  %12 = bitcast [4 x [4 x float]]* %D5 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %12) #3
  %arrayidx = getelementptr inbounds %struct.t_3dview* %view, i64 0, i32 1, i64 0
  %13 = load float* %arrayidx, align 4, !tbaa !0
  %arrayidx2 = getelementptr inbounds %struct.t_3dview* %view, i64 0, i32 1, i64 1
  %14 = load float* %arrayidx2, align 4, !tbaa !0
  %arrayidx4 = getelementptr inbounds %struct.t_3dview* %view, i64 0, i32 1, i64 2
  %15 = load float* %arrayidx4, align 4, !tbaa !0
  %mul = fmul float %13, %13
  %mul5 = fmul float %14, %14
  %add = fadd float %mul, %mul5
  %mul6 = fmul float %15, %15
  %add7 = fadd float %add, %mul6
  %conv8 = call float @sqrtf(float %add7) #1
  %conv14 = call float @sqrtf(float %add) #1
  %conv15 = fpext float %conv8 to double
  %cmp = fcmp olt double %conv15, 1.000000e-06
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([46 x i8]* @.str5, i64 0, i64 0)) #4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %arrayidx17 = getelementptr inbounds %struct.t_3dview* %view, i64 0, i32 2, i64 0
  %16 = load float* %arrayidx17, align 4, !tbaa !0
  %arrayidx19 = getelementptr inbounds %struct.t_3dview* %view, i64 0, i32 2, i64 1
  %17 = load float* %arrayidx19, align 4, !tbaa !0
  %arrayidx22 = getelementptr inbounds %struct.t_3dview* %view, i64 0, i32 2, i64 2
  %18 = load float* %arrayidx22, align 4, !tbaa !0
  %sub23 = fsub float -0.000000e+00, %18
  br label %for.cond1.preheader.i.i

for.cond1.preheader.i.i:                          ; preds = %for.inc11.i.i, %if.end
  %indvars.iv21.i.i = phi i64 [ 0, %if.end ], [ %indvars.iv.next22.i.i, %for.inc11.i.i ]
  %19 = trunc i64 %indvars.iv21.i.i to i32
  br label %for.body3.i.i

for.body3.i.i:                                    ; preds = %for.body3.i.i, %for.cond1.preheader.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.cond1.preheader.i.i ], [ %indvars.iv.next.i.i, %for.body3.i.i ]
  %20 = trunc i64 %indvars.iv.i.i to i32
  %cmp4.i.i = icmp eq i32 %19, %20
  %arrayidx6.i.i = getelementptr inbounds [4 x [4 x float]]* %To, i64 0, i64 %indvars.iv21.i.i, i64 %indvars.iv.i.i
  %..i.i = select i1 %cmp4.i.i, float 1.000000e+00, float 0.000000e+00
  store float %..i.i, float* %arrayidx6.i.i, align 4, !tbaa !0
  %indvars.iv.next.i.i = add i64 %indvars.iv.i.i, 1
  %lftr.wideiv236 = trunc i64 %indvars.iv.next.i.i to i32
  %exitcond237 = icmp eq i32 %lftr.wideiv236, 4
  br i1 %exitcond237, label %for.inc11.i.i, label %for.body3.i.i

for.inc11.i.i:                                    ; preds = %for.body3.i.i
  %indvars.iv.next22.i.i = add i64 %indvars.iv21.i.i, 1
  %lftr.wideiv238 = trunc i64 %indvars.iv.next22.i.i to i32
  %exitcond239 = icmp eq i32 %lftr.wideiv238, 4
  br i1 %exitcond239, label %translate.exit, label %for.cond1.preheader.i.i

translate.exit:                                   ; preds = %for.inc11.i.i
  %sub = fsub float -0.000000e+00, %16
  %sub20 = fsub float -0.000000e+00, %17
  %arraydecay = getelementptr inbounds [4 x [4 x float]]* %To, i64 0, i64 0
  %arrayidx1.i = getelementptr inbounds [4 x [4 x float]]* %To, i64 0, i64 3, i64 0
  store float %sub, float* %arrayidx1.i, align 16, !tbaa !0
  %arrayidx3.i = getelementptr inbounds [4 x [4 x float]]* %To, i64 0, i64 3, i64 1
  store float %sub20, float* %arrayidx3.i, align 4, !tbaa !0
  %arrayidx5.i = getelementptr inbounds [4 x [4 x float]]* %To, i64 0, i64 3, i64 2
  store float %sub23, float* %arrayidx5.i, align 8, !tbaa !0
  %21 = load float* %arrayidx, align 4, !tbaa !0
  %22 = load float* %arrayidx2, align 4, !tbaa !0
  %23 = load float* %arrayidx4, align 4, !tbaa !0
  %sub32 = fsub float -0.000000e+00, %23
  br label %for.cond1.preheader.i.i135

for.cond1.preheader.i.i135:                       ; preds = %for.inc11.i.i147, %translate.exit
  %indvars.iv21.i.i134 = phi i64 [ 0, %translate.exit ], [ %indvars.iv.next22.i.i144, %for.inc11.i.i147 ]
  %24 = trunc i64 %indvars.iv21.i.i134 to i32
  br label %for.body3.i.i143

for.body3.i.i143:                                 ; preds = %for.body3.i.i143, %for.cond1.preheader.i.i135
  %indvars.iv.i.i136 = phi i64 [ 0, %for.cond1.preheader.i.i135 ], [ %indvars.iv.next.i.i140, %for.body3.i.i143 ]
  %25 = trunc i64 %indvars.iv.i.i136 to i32
  %cmp4.i.i137 = icmp eq i32 %24, %25
  %arrayidx6.i.i138 = getelementptr inbounds [4 x [4 x float]]* %Te, i64 0, i64 %indvars.iv21.i.i134, i64 %indvars.iv.i.i136
  %..i.i139 = select i1 %cmp4.i.i137, float 1.000000e+00, float 0.000000e+00
  store float %..i.i139, float* %arrayidx6.i.i138, align 4, !tbaa !0
  %indvars.iv.next.i.i140 = add i64 %indvars.iv.i.i136, 1
  %lftr.wideiv232 = trunc i64 %indvars.iv.next.i.i140 to i32
  %exitcond233 = icmp eq i32 %lftr.wideiv232, 4
  br i1 %exitcond233, label %for.inc11.i.i147, label %for.body3.i.i143

for.inc11.i.i147:                                 ; preds = %for.body3.i.i143
  %indvars.iv.next22.i.i144 = add i64 %indvars.iv21.i.i134, 1
  %lftr.wideiv234 = trunc i64 %indvars.iv.next22.i.i144 to i32
  %exitcond235 = icmp eq i32 %lftr.wideiv234, 4
  br i1 %exitcond235, label %translate.exit151, label %for.cond1.preheader.i.i135

translate.exit151:                                ; preds = %for.inc11.i.i147
  %sub26 = fsub float -0.000000e+00, %21
  %sub29 = fsub float -0.000000e+00, %22
  %arraydecay33 = getelementptr inbounds [4 x [4 x float]]* %Te, i64 0, i64 0
  %arrayidx1.i148 = getelementptr inbounds [4 x [4 x float]]* %Te, i64 0, i64 3, i64 0
  store float %sub26, float* %arrayidx1.i148, align 16, !tbaa !0
  %arrayidx3.i149 = getelementptr inbounds [4 x [4 x float]]* %Te, i64 0, i64 3, i64 1
  store float %sub29, float* %arrayidx3.i149, align 4, !tbaa !0
  %arrayidx5.i150 = getelementptr inbounds [4 x [4 x float]]* %Te, i64 0, i64 3, i64 2
  store float %sub32, float* %arrayidx5.i150, align 8, !tbaa !0
  br label %for.cond1.preheader.i

for.cond1.preheader.i:                            ; preds = %for.inc11.i, %translate.exit151
  %indvars.iv21.i = phi i64 [ 0, %translate.exit151 ], [ %indvars.iv.next22.i, %for.inc11.i ]
  %26 = trunc i64 %indvars.iv21.i to i32
  br label %for.body3.i

for.body3.i:                                      ; preds = %for.body3.i, %for.cond1.preheader.i
  %indvars.iv.i = phi i64 [ 0, %for.cond1.preheader.i ], [ %indvars.iv.next.i, %for.body3.i ]
  %27 = trunc i64 %indvars.iv.i to i32
  %cmp4.i = icmp eq i32 %26, %27
  %arrayidx6.i = getelementptr inbounds [4 x [4 x float]]* %T2, i64 0, i64 %indvars.iv21.i, i64 %indvars.iv.i
  %..i = select i1 %cmp4.i, float 1.000000e+00, float 0.000000e+00
  store float %..i, float* %arrayidx6.i, align 4, !tbaa !0
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  %lftr.wideiv228 = trunc i64 %indvars.iv.next.i to i32
  %exitcond229 = icmp eq i32 %lftr.wideiv228, 4
  br i1 %exitcond229, label %for.inc11.i, label %for.body3.i

for.inc11.i:                                      ; preds = %for.body3.i
  %indvars.iv.next22.i = add i64 %indvars.iv21.i, 1
  %lftr.wideiv230 = trunc i64 %indvars.iv.next22.i to i32
  %exitcond231 = icmp eq i32 %lftr.wideiv230, 4
  br i1 %exitcond231, label %unity_m4.exit, label %for.cond1.preheader.i

unity_m4.exit:                                    ; preds = %for.inc11.i
  %arraydecay34 = getelementptr inbounds [4 x [4 x float]]* %T2, i64 0, i64 0
  %arrayidx36 = getelementptr inbounds [4 x [4 x float]]* %T2, i64 0, i64 1, i64 1
  store float 0.000000e+00, float* %arrayidx36, align 4, !tbaa !0
  %arrayidx38 = getelementptr inbounds [4 x [4 x float]]* %T2, i64 0, i64 1, i64 2
  store float -1.000000e+00, float* %arrayidx38, align 8, !tbaa !0
  %arrayidx40 = getelementptr inbounds [4 x [4 x float]]* %T2, i64 0, i64 2, i64 1
  store float 1.000000e+00, float* %arrayidx40, align 4, !tbaa !0
  %arrayidx42 = getelementptr inbounds [4 x [4 x float]]* %T2, i64 0, i64 2, i64 2
  store float 0.000000e+00, float* %arrayidx42, align 8, !tbaa !0
  br label %for.cond1.preheader.i155

for.cond1.preheader.i155:                         ; preds = %for.inc11.i167, %unity_m4.exit
  %indvars.iv21.i154 = phi i64 [ 0, %unity_m4.exit ], [ %indvars.iv.next22.i164, %for.inc11.i167 ]
  %28 = trunc i64 %indvars.iv21.i154 to i32
  br label %for.body3.i163

for.body3.i163:                                   ; preds = %for.body3.i163, %for.cond1.preheader.i155
  %indvars.iv.i156 = phi i64 [ 0, %for.cond1.preheader.i155 ], [ %indvars.iv.next.i160, %for.body3.i163 ]
  %29 = trunc i64 %indvars.iv.i156 to i32
  %cmp4.i157 = icmp eq i32 %28, %29
  %arrayidx6.i158 = getelementptr inbounds [4 x [4 x float]]* %T3, i64 0, i64 %indvars.iv21.i154, i64 %indvars.iv.i156
  %..i159 = select i1 %cmp4.i157, float 1.000000e+00, float 0.000000e+00
  store float %..i159, float* %arrayidx6.i158, align 4, !tbaa !0
  %indvars.iv.next.i160 = add i64 %indvars.iv.i156, 1
  %lftr.wideiv224 = trunc i64 %indvars.iv.next.i160 to i32
  %exitcond225 = icmp eq i32 %lftr.wideiv224, 4
  br i1 %exitcond225, label %for.inc11.i167, label %for.body3.i163

for.inc11.i167:                                   ; preds = %for.body3.i163
  %indvars.iv.next22.i164 = add i64 %indvars.iv21.i154, 1
  %lftr.wideiv226 = trunc i64 %indvars.iv.next22.i164 to i32
  %exitcond227 = icmp eq i32 %lftr.wideiv226, 4
  br i1 %exitcond227, label %unity_m4.exit168, label %for.cond1.preheader.i155

unity_m4.exit168:                                 ; preds = %for.inc11.i167
  %arraydecay43 = getelementptr inbounds [4 x [4 x float]]* %T3, i64 0, i64 0
  %cmp44 = fcmp ogt float %conv14, 0.000000e+00
  br i1 %cmp44, label %if.then46, label %for.cond1.preheader.i170

if.then46:                                        ; preds = %unity_m4.exit168
  %sub47 = fsub float -0.000000e+00, %14
  %div = fdiv float %sub47, %conv14
  %arrayidx49 = getelementptr inbounds [4 x [4 x float]]* %T3, i64 0, i64 0, i64 0
  store float %div, float* %arrayidx49, align 16, !tbaa !0
  %div50 = fdiv float %13, %conv14
  %arrayidx52 = getelementptr inbounds [4 x [4 x float]]* %T3, i64 0, i64 0, i64 2
  store float %div50, float* %arrayidx52, align 8, !tbaa !0
  %sub53 = fsub float -0.000000e+00, %13
  %div54 = fdiv float %sub53, %conv14
  %arrayidx56 = getelementptr inbounds [4 x [4 x float]]* %T3, i64 0, i64 2, i64 0
  store float %div54, float* %arrayidx56, align 16, !tbaa !0
  %arrayidx60 = getelementptr inbounds [4 x [4 x float]]* %T3, i64 0, i64 2, i64 2
  store float %div, float* %arrayidx60, align 8, !tbaa !0
  br label %for.cond1.preheader.i170

for.cond1.preheader.i170:                         ; preds = %unity_m4.exit168, %if.then46, %for.inc11.i182
  %indvars.iv21.i169 = phi i64 [ %indvars.iv.next22.i179, %for.inc11.i182 ], [ 0, %if.then46 ], [ 0, %unity_m4.exit168 ]
  %30 = trunc i64 %indvars.iv21.i169 to i32
  br label %for.body3.i178

for.body3.i178:                                   ; preds = %for.body3.i178, %for.cond1.preheader.i170
  %indvars.iv.i171 = phi i64 [ 0, %for.cond1.preheader.i170 ], [ %indvars.iv.next.i175, %for.body3.i178 ]
  %31 = trunc i64 %indvars.iv.i171 to i32
  %cmp4.i172 = icmp eq i32 %30, %31
  %arrayidx6.i173 = getelementptr inbounds [4 x [4 x float]]* %T4, i64 0, i64 %indvars.iv21.i169, i64 %indvars.iv.i171
  %..i174 = select i1 %cmp4.i172, float 1.000000e+00, float 0.000000e+00
  store float %..i174, float* %arrayidx6.i173, align 4, !tbaa !0
  %indvars.iv.next.i175 = add i64 %indvars.iv.i171, 1
  %lftr.wideiv220 = trunc i64 %indvars.iv.next.i175 to i32
  %exitcond221 = icmp eq i32 %lftr.wideiv220, 4
  br i1 %exitcond221, label %for.inc11.i182, label %for.body3.i178

for.inc11.i182:                                   ; preds = %for.body3.i178
  %indvars.iv.next22.i179 = add i64 %indvars.iv21.i169, 1
  %lftr.wideiv222 = trunc i64 %indvars.iv.next22.i179 to i32
  %exitcond223 = icmp eq i32 %lftr.wideiv222, 4
  br i1 %exitcond223, label %unity_m4.exit183, label %for.cond1.preheader.i170

unity_m4.exit183:                                 ; preds = %for.inc11.i182
  %arraydecay62 = getelementptr inbounds [4 x [4 x float]]* %T4, i64 0, i64 0
  %div63 = fdiv float %conv14, %conv8
  %arrayidx65 = getelementptr inbounds [4 x [4 x float]]* %T4, i64 0, i64 1, i64 1
  store float %div63, float* %arrayidx65, align 4, !tbaa !0
  %div66 = fdiv float %15, %conv8
  %arrayidx68 = getelementptr inbounds [4 x [4 x float]]* %T4, i64 0, i64 1, i64 2
  store float %div66, float* %arrayidx68, align 8, !tbaa !0
  %sub69 = fsub float -0.000000e+00, %15
  %div70 = fdiv float %sub69, %conv8
  %arrayidx72 = getelementptr inbounds [4 x [4 x float]]* %T4, i64 0, i64 2, i64 1
  store float %div70, float* %arrayidx72, align 4, !tbaa !0
  %arrayidx75 = getelementptr inbounds [4 x [4 x float]]* %T4, i64 0, i64 2, i64 2
  store float %div63, float* %arrayidx75, align 8, !tbaa !0
  br label %for.cond1.preheader.i185

for.cond1.preheader.i185:                         ; preds = %for.inc11.i197, %unity_m4.exit183
  %indvars.iv21.i184 = phi i64 [ 0, %unity_m4.exit183 ], [ %indvars.iv.next22.i194, %for.inc11.i197 ]
  %32 = trunc i64 %indvars.iv21.i184 to i32
  br label %for.body3.i193

for.body3.i193:                                   ; preds = %for.body3.i193, %for.cond1.preheader.i185
  %indvars.iv.i186 = phi i64 [ 0, %for.cond1.preheader.i185 ], [ %indvars.iv.next.i190, %for.body3.i193 ]
  %33 = trunc i64 %indvars.iv.i186 to i32
  %cmp4.i187 = icmp eq i32 %32, %33
  %arrayidx6.i188 = getelementptr inbounds [4 x [4 x float]]* %T5, i64 0, i64 %indvars.iv21.i184, i64 %indvars.iv.i186
  %..i189 = select i1 %cmp4.i187, float 1.000000e+00, float 0.000000e+00
  store float %..i189, float* %arrayidx6.i188, align 4, !tbaa !0
  %indvars.iv.next.i190 = add i64 %indvars.iv.i186, 1
  %lftr.wideiv216 = trunc i64 %indvars.iv.next.i190 to i32
  %exitcond217 = icmp eq i32 %lftr.wideiv216, 4
  br i1 %exitcond217, label %for.inc11.i197, label %for.body3.i193

for.inc11.i197:                                   ; preds = %for.body3.i193
  %indvars.iv.next22.i194 = add i64 %indvars.iv21.i184, 1
  %lftr.wideiv218 = trunc i64 %indvars.iv.next22.i194 to i32
  %exitcond219 = icmp eq i32 %lftr.wideiv218, 4
  br i1 %exitcond219, label %unity_m4.exit198, label %for.cond1.preheader.i185

unity_m4.exit198:                                 ; preds = %for.inc11.i197
  %arraydecay76 = getelementptr inbounds [4 x [4 x float]]* %T5, i64 0, i64 0
  %arrayidx78 = getelementptr inbounds [4 x [4 x float]]* %T5, i64 0, i64 2, i64 2
  store float -1.000000e+00, float* %arrayidx78, align 8, !tbaa !0
  br label %for.cond1.preheader.i200

for.cond1.preheader.i200:                         ; preds = %for.inc11.i212, %unity_m4.exit198
  %indvars.iv21.i199 = phi i64 [ 0, %unity_m4.exit198 ], [ %indvars.iv.next22.i209, %for.inc11.i212 ]
  %34 = trunc i64 %indvars.iv21.i199 to i32
  br label %for.body3.i208

for.body3.i208:                                   ; preds = %for.body3.i208, %for.cond1.preheader.i200
  %indvars.iv.i201 = phi i64 [ 0, %for.cond1.preheader.i200 ], [ %indvars.iv.next.i205, %for.body3.i208 ]
  %35 = trunc i64 %indvars.iv.i201 to i32
  %cmp4.i202 = icmp eq i32 %34, %35
  %arrayidx6.i203 = getelementptr inbounds [4 x [4 x float]]* %N1, i64 0, i64 %indvars.iv21.i199, i64 %indvars.iv.i201
  %..i204 = select i1 %cmp4.i202, float 1.000000e+00, float 0.000000e+00
  store float %..i204, float* %arrayidx6.i203, align 4, !tbaa !0
  %indvars.iv.next.i205 = add i64 %indvars.iv.i201, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i205 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 4
  br i1 %exitcond, label %for.inc11.i212, label %for.body3.i208

for.inc11.i212:                                   ; preds = %for.body3.i208
  %indvars.iv.next22.i209 = add i64 %indvars.iv21.i199, 1
  %lftr.wideiv214 = trunc i64 %indvars.iv.next22.i209 to i32
  %exitcond215 = icmp eq i32 %lftr.wideiv214, 4
  br i1 %exitcond215, label %unity_m4.exit213, label %for.cond1.preheader.i200

unity_m4.exit213:                                 ; preds = %for.inc11.i212
  %arraydecay79 = getelementptr inbounds [4 x [4 x float]]* %N1, i64 0, i64 0
  %arraydecay80 = getelementptr inbounds [4 x [4 x float]]* %T1, i64 0, i64 0
  %arraydecay82 = getelementptr inbounds %struct.t_3dview* %view, i64 0, i32 4, i64 0
  call void @mult_matrix([4 x float]* %arraydecay80, [4 x float]* %arraydecay, [4 x float]* %arraydecay82) #5
  %arraydecay83 = getelementptr inbounds [4 x [4 x float]]* %D1, i64 0, i64 0
  call void @mult_matrix([4 x float]* %arraydecay83, [4 x float]* %arraydecay33, [4 x float]* %arraydecay34) #5
  %arraydecay86 = getelementptr inbounds [4 x [4 x float]]* %D2, i64 0, i64 0
  call void @mult_matrix([4 x float]* %arraydecay86, [4 x float]* %arraydecay43, [4 x float]* %arraydecay62) #5
  %arraydecay89 = getelementptr inbounds [4 x [4 x float]]* %D3, i64 0, i64 0
  call void @mult_matrix([4 x float]* %arraydecay89, [4 x float]* %arraydecay76, [4 x float]* %arraydecay79) #5
  %arraydecay92 = getelementptr inbounds [4 x [4 x float]]* %D4, i64 0, i64 0
  call void @mult_matrix([4 x float]* %arraydecay92, [4 x float]* %arraydecay80, [4 x float]* %arraydecay83) #5
  %arraydecay95 = getelementptr inbounds [4 x [4 x float]]* %D5, i64 0, i64 0
  call void @mult_matrix([4 x float]* %arraydecay95, [4 x float]* %arraydecay86, [4 x float]* %arraydecay89) #5
  %arraydecay98 = getelementptr inbounds %struct.t_3dview* %view, i64 0, i32 3, i64 0
  call void @mult_matrix([4 x float]* %arraydecay98, [4 x float]* %arraydecay92, [4 x float]* %arraydecay95) #5
  call void @llvm.lifetime.end(i64 64, i8* %12) #3
  call void @llvm.lifetime.end(i64 64, i8* %11) #3
  call void @llvm.lifetime.end(i64 64, i8* %10) #3
  call void @llvm.lifetime.end(i64 64, i8* %9) #3
  call void @llvm.lifetime.end(i64 64, i8* %8) #3
  call void @llvm.lifetime.end(i64 64, i8* %7) #3
  call void @llvm.lifetime.end(i64 64, i8* %6) #3
  call void @llvm.lifetime.end(i64 64, i8* %5) #3
  call void @llvm.lifetime.end(i64 64, i8* %4) #3
  call void @llvm.lifetime.end(i64 64, i8* %3) #3
  call void @llvm.lifetime.end(i64 64, i8* %2) #3
  call void @llvm.lifetime.end(i64 64, i8* %1) #3
  call void @llvm.lifetime.end(i64 64, i8* %0) #3
  ret void
}
