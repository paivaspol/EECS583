define void @rotate(i32 %axis, float %angle, [4 x float]* nocapture %A) #4 {
  tail call void @llvm.dbg.value(metadata i32 %axis, i64 0, metadata !136, metadata !259), !dbg !399
  tail call void @llvm.dbg.value(metadata float %angle, i64 0, metadata !137, metadata !259), !dbg !400
  tail call void @llvm.dbg.value(metadata [4 x float]* %A, i64 0, metadata !138, metadata !259), !dbg !401
  tail call void @llvm.dbg.value(metadata [4 x float]* %A, i64 0, metadata !101, metadata !259), !dbg !402
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !102, metadata !259), !dbg !404
  br label %.preheader.i, !dbg !405

.preheader.i:                                     ; preds = %6, %0
  %indvars.iv3.i = phi i64 [ 0, %0 ], [ %indvars.iv.next4.i, %6 ], !dbg !406
  %1 = trunc i64 %indvars.iv3.i to i32, !dbg !407
  br label %2, !dbg !408

; <label>:2                                       ; preds = %2, %.preheader.i
  %indvars.iv.i = phi i64 [ 0, %.preheader.i ], [ %indvars.iv.next.i, %2 ], !dbg !406
  %3 = trunc i64 %indvars.iv.i to i32, !dbg !407
  %4 = icmp eq i32 %1, %3, !dbg !407
  %5 = getelementptr inbounds [4 x float]* %A, i64 %indvars.iv3.i, i64 %indvars.iv.i, !dbg !409
  %..i = select i1 %4, float 1.000000e+00, float 0.000000e+00, !dbg !409
  store float %..i, float* %5, align 4, !dbg !410, !tbaa !308
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !408
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 4, !dbg !408
  br i1 %exitcond.i, label %6, label %2, !dbg !408

; <label>:6                                       ; preds = %2
  %indvars.iv.next4.i = add nuw nsw i64 %indvars.iv3.i, 1, !dbg !405
  %exitcond5.i = icmp eq i64 %indvars.iv.next4.i, 4, !dbg !405
  br i1 %exitcond5.i, label %unity_m4.exit, label %.preheader.i, !dbg !405

unity_m4.exit:                                    ; preds = %6
  switch i32 %axis, label %40 [
    i32 0, label %7
    i32 1, label %18
    i32 2, label %29
  ], !dbg !411

; <label>:7                                       ; preds = %unity_m4.exit
  %8 = fpext float %angle to double, !dbg !412
  %9 = tail call double @cos(double %8) #9, !dbg !414
  %10 = fptrunc double %9 to float, !dbg !414
  %11 = getelementptr inbounds [4 x float]* %A, i64 1, i64 1, !dbg !415
  store float %10, float* %11, align 4, !dbg !416, !tbaa !308
  %12 = tail call double @sin(double %8) #9, !dbg !417
  %13 = fptrunc double %12 to float, !dbg !418
  %14 = fsub float -0.000000e+00, %13, !dbg !418
  %15 = getelementptr inbounds [4 x float]* %A, i64 1, i64 2, !dbg !419
  store float %14, float* %15, align 4, !dbg !420, !tbaa !308
  %16 = getelementptr inbounds [4 x float]* %A, i64 2, i64 1, !dbg !421
  store float %13, float* %16, align 4, !dbg !422, !tbaa !308
  %17 = getelementptr inbounds [4 x float]* %A, i64 2, i64 2, !dbg !423
  store float %10, float* %17, align 4, !dbg !424, !tbaa !308
  br label %41, !dbg !425

; <label>:18                                      ; preds = %unity_m4.exit
  %19 = fpext float %angle to double, !dbg !426
  %20 = tail call double @cos(double %19) #9, !dbg !427
  %21 = fptrunc double %20 to float, !dbg !427
  %22 = getelementptr inbounds [4 x float]* %A, i64 0, i64 0, !dbg !428
  store float %21, float* %22, align 4, !dbg !429, !tbaa !308
  %23 = tail call double @sin(double %19) #9, !dbg !430
  %24 = fptrunc double %23 to float, !dbg !430
  %25 = getelementptr inbounds [4 x float]* %A, i64 0, i64 2, !dbg !431
  store float %24, float* %25, align 4, !dbg !432, !tbaa !308
  %26 = fsub float -0.000000e+00, %24, !dbg !433
  %27 = getelementptr inbounds [4 x float]* %A, i64 2, i64 0, !dbg !434
  store float %26, float* %27, align 4, !dbg !435, !tbaa !308
  %28 = getelementptr inbounds [4 x float]* %A, i64 2, i64 2, !dbg !436
  store float %21, float* %28, align 4, !dbg !437, !tbaa !308
  br label %41, !dbg !438

; <label>:29                                      ; preds = %unity_m4.exit
  %30 = fpext float %angle to double, !dbg !439
  %31 = tail call double @cos(double %30) #9, !dbg !440
  %32 = fptrunc double %31 to float, !dbg !440
  %33 = getelementptr inbounds [4 x float]* %A, i64 0, i64 0, !dbg !441
  store float %32, float* %33, align 4, !dbg !442, !tbaa !308
  %34 = tail call double @sin(double %30) #9, !dbg !443
  %35 = fptrunc double %34 to float, !dbg !444
  %36 = fsub float -0.000000e+00, %35, !dbg !444
  %37 = getelementptr inbounds [4 x float]* %A, i64 0, i64 1, !dbg !445
  store float %36, float* %37, align 4, !dbg !446, !tbaa !308
  %38 = getelementptr inbounds [4 x float]* %A, i64 1, i64 0, !dbg !447
  store float %35, float* %38, align 4, !dbg !448, !tbaa !308
  %39 = getelementptr inbounds [4 x float]* %A, i64 1, i64 1, !dbg !449
  store float %32, float* %39, align 4, !dbg !450, !tbaa !308
  br label %41, !dbg !451

; <label>:40                                      ; preds = %unity_m4.exit
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([24 x i8]* @.str4, i64 0, i64 0), i32 %axis) #8, !dbg !452
  br label %41, !dbg !453

; <label>:41                                      ; preds = %40, %29, %18, %7
  ret void, !dbg !454
}
