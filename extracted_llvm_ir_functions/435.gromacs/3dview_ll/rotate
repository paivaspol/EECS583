define void @rotate(i32 %axis, float %angle, [4 x float]* nocapture %A) #3 {
  br label %.preheader.i

.preheader.i:                                     ; preds = %6, %0
  %indvars.iv3.i = phi i64 [ 0, %0 ], [ %indvars.iv.next4.i, %6 ]
  %1 = trunc i64 %indvars.iv3.i to i32
  br label %2

; <label>:2                                       ; preds = %2, %.preheader.i
  %indvars.iv.i = phi i64 [ 0, %.preheader.i ], [ %indvars.iv.next.i, %2 ]
  %3 = trunc i64 %indvars.iv.i to i32
  %4 = icmp eq i32 %1, %3
  %5 = getelementptr inbounds [4 x float]* %A, i64 %indvars.iv3.i, i64 %indvars.iv.i
  %..i = select i1 %4, float 1.000000e+00, float 0.000000e+00
  store float %..i, float* %5, align 4, !tbaa !14
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 4
  br i1 %exitcond.i, label %6, label %2

; <label>:6                                       ; preds = %2
  %indvars.iv.next4.i = add nuw nsw i64 %indvars.iv3.i, 1
  %exitcond5.i = icmp eq i64 %indvars.iv.next4.i, 4
  br i1 %exitcond5.i, label %unity_m4.exit, label %.preheader.i

unity_m4.exit:                                    ; preds = %6
  switch i32 %axis, label %40 [
    i32 0, label %7
    i32 1, label %18
    i32 2, label %29
  ]

; <label>:7                                       ; preds = %unity_m4.exit
  %8 = fpext float %angle to double
  %9 = tail call double @cos(double %8) #8
  %10 = fptrunc double %9 to float
  %11 = getelementptr inbounds [4 x float]* %A, i64 1, i64 1
  store float %10, float* %11, align 4, !tbaa !14
  %12 = tail call double @sin(double %8) #8
  %13 = fptrunc double %12 to float
  %14 = fsub float -0.000000e+00, %13
  %15 = getelementptr inbounds [4 x float]* %A, i64 1, i64 2
  store float %14, float* %15, align 4, !tbaa !14
  %16 = getelementptr inbounds [4 x float]* %A, i64 2, i64 1
  store float %13, float* %16, align 4, !tbaa !14
  %17 = getelementptr inbounds [4 x float]* %A, i64 2, i64 2
  store float %10, float* %17, align 4, !tbaa !14
  br label %41

; <label>:18                                      ; preds = %unity_m4.exit
  %19 = fpext float %angle to double
  %20 = tail call double @cos(double %19) #8
  %21 = fptrunc double %20 to float
  %22 = getelementptr inbounds [4 x float]* %A, i64 0, i64 0
  store float %21, float* %22, align 4, !tbaa !14
  %23 = tail call double @sin(double %19) #8
  %24 = fptrunc double %23 to float
  %25 = getelementptr inbounds [4 x float]* %A, i64 0, i64 2
  store float %24, float* %25, align 4, !tbaa !14
  %26 = fsub float -0.000000e+00, %24
  %27 = getelementptr inbounds [4 x float]* %A, i64 2, i64 0
  store float %26, float* %27, align 4, !tbaa !14
  %28 = getelementptr inbounds [4 x float]* %A, i64 2, i64 2
  store float %21, float* %28, align 4, !tbaa !14
  br label %41

; <label>:29                                      ; preds = %unity_m4.exit
  %30 = fpext float %angle to double
  %31 = tail call double @cos(double %30) #8
  %32 = fptrunc double %31 to float
  %33 = getelementptr inbounds [4 x float]* %A, i64 0, i64 0
  store float %32, float* %33, align 4, !tbaa !14
  %34 = tail call double @sin(double %30) #8
  %35 = fptrunc double %34 to float
  %36 = fsub float -0.000000e+00, %35
  %37 = getelementptr inbounds [4 x float]* %A, i64 0, i64 1
  store float %36, float* %37, align 4, !tbaa !14
  %38 = getelementptr inbounds [4 x float]* %A, i64 1, i64 0
  store float %35, float* %38, align 4, !tbaa !14
  %39 = getelementptr inbounds [4 x float]* %A, i64 1, i64 1
  store float %32, float* %39, align 4, !tbaa !14
  br label %41

; <label>:40                                      ; preds = %unity_m4.exit
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([24 x i8]* @.str4, i64 0, i64 0), i32 %axis) #7
  br label %41

; <label>:41                                      ; preds = %40, %29, %18, %7
  ret void
}
