define void @ltrim(i8* %str) #3 {
  tail call void @llvm.dbg.value(metadata i8* %str, i64 0, metadata !198, metadata !281), !dbg !505
  %1 = icmp eq i8* %str, null, !dbg !506
  br i1 %1, label %10, label %2, !dbg !508

; <label>:2                                       ; preds = %0
  %3 = tail call i8* @strdup(i8* %str) #10, !dbg !509
  tail call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !199, metadata !281), !dbg !510
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !200, metadata !281), !dbg !511
  br label %4, !dbg !512

; <label>:4                                       ; preds = %.critedge, %2
  %indvars.iv = phi i64 [ %indvars.iv.next, %.critedge ], [ 0, %2 ]
  %5 = getelementptr inbounds i8* %3, i64 %indvars.iv, !dbg !513
  %6 = load i8* %5, align 1, !dbg !513, !tbaa !309
  switch i8 %6, label %7 [
    i8 32, label %.critedge
    i8 9, label %.critedge
  ], !dbg !514

.critedge:                                        ; preds = %4, %4
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !512
  br label %4, !dbg !512

; <label>:7                                       ; preds = %4
  %8 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %str, i1 false), !dbg !515
  %9 = tail call i8* @__strcpy_chk(i8* %str, i8* %5, i64 %8) #10, !dbg !515
  tail call void @free(i8* %3) #11, !dbg !516
  br label %10, !dbg !517

; <label>:10                                      ; preds = %0, %7
  ret void, !dbg !517
}
