define void @ltrim(i8* %str) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %str}, i64 0, metadata !92), !dbg !216
  %tobool = icmp eq i8* %str, null, !dbg !217
  br i1 %tobool, label %return, label %if.end, !dbg !217

if.end:                                           ; preds = %entry
  %call = tail call noalias i8* @strdup(i8* %str) #10, !dbg !218
  tail call void @llvm.dbg.value(metadata !{i8* %call}, i64 0, metadata !93), !dbg !218
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !94), !dbg !219
  br label %while.cond, !dbg !220

while.cond:                                       ; preds = %while.body, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %while.body ], [ 0, %if.end ]
  %arrayidx = getelementptr inbounds i8* %call, i64 %indvars.iv, !dbg !220
  %0 = load i8* %arrayidx, align 1, !dbg !220, !tbaa !189
  switch i8 %0, label %while.end [
    i8 32, label %while.body
    i8 9, label %while.body
  ], !dbg !220

while.body:                                       ; preds = %while.cond, %while.cond
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !221
  br label %while.cond, !dbg !221

while.end:                                        ; preds = %while.cond
  %call7 = tail call i8* @strcpy(i8* %str, i8* %arrayidx) #10, !dbg !222
  tail call void @free(i8* %call) #10, !dbg !223
  br label %return, !dbg !223

return:                                           ; preds = %entry, %while.end
  ret void, !dbg !223
}
