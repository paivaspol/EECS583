define void @rtrim(i8* %str) #3 {
  tail call void @llvm.dbg.value(metadata i8* %str, i64 0, metadata !203, metadata !281), !dbg !449
  %1 = icmp eq i8* %str, null, !dbg !450
  br i1 %1, label %.critedge, label %2, !dbg !452

; <label>:2                                       ; preds = %0
  %3 = tail call i64 @strlen(i8* %str) #10, !dbg !453
  %4 = add i64 %3, 4294967295, !dbg !454
  %5 = trunc i64 %4 to i32, !dbg !453
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !204, metadata !281), !dbg !455
  %6 = icmp sgt i32 %5, 0, !dbg !456
  br i1 %6, label %.lr.ph, label %.critedge, !dbg !457

.lr.ph:                                           ; preds = %2
  %sext = shl i64 %4, 32
  %7 = ashr exact i64 %sext, 32
  br label %8, !dbg !457

; <label>:8                                       ; preds = %.lr.ph, %.critedge1
  %indvars.iv = phi i64 [ %7, %.lr.ph ], [ %indvars.iv.next, %.critedge1 ]
  %9 = getelementptr inbounds i8* %str, i64 %indvars.iv, !dbg !458
  %10 = load i8* %9, align 1, !dbg !458, !tbaa !309
  switch i8 %10, label %.critedge [
    i8 32, label %.critedge1
    i8 9, label %.critedge1
  ], !dbg !459

.critedge1:                                       ; preds = %8, %8
  store i8 0, i8* %9, align 1, !dbg !460, !tbaa !309
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !457
  %11 = icmp sgt i64 %indvars.iv, 1, !dbg !456
  br i1 %11, label %8, label %.critedge, !dbg !457

.critedge:                                        ; preds = %.critedge1, %8, %2, %0
  ret void, !dbg !462
}
