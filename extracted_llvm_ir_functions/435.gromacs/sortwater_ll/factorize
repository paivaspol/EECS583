define internal fastcc void @factorize(i32 %nn, i32* nocapture %fac) #0 {
entry:
  %cmp52 = icmp slt i32 %nn, 0
  br i1 %cmp52, label %for.end.thread, label %for.end

for.end.thread:                                   ; preds = %entry
  %arrayidx165 = getelementptr inbounds i32* %fac, i64 1
  store i32 1, i32* %arrayidx165, align 4, !tbaa !0
  br label %for.end10

for.end:                                          ; preds = %entry
  %fac64 = bitcast i32* %fac to i8*
  %0 = zext i32 %nn to i64
  %1 = shl nuw nsw i64 %0, 2
  %2 = add i64 %1, 4
  call void @llvm.memset.p0i8.i64(i8* %fac64, i8 0, i64 %2, i32 4, i1 false)
  %arrayidx1 = getelementptr inbounds i32* %fac, i64 1
  store i32 1, i32* %arrayidx1, align 4, !tbaa !0
  %cmp35054 = icmp slt i32 %nn, 2
  br i1 %cmp35054, label %for.end10, label %for.body4.lr.ph

for.body4.lr.ph:                                  ; preds = %for.end, %if.else
  %indvars.iv58 = phi i64 [ %indvars.iv.next59, %if.else ], [ 2, %for.end ]
  %n.0.ph56 = phi i32 [ %n.051, %if.else ], [ %nn, %for.end ]
  %arrayidx7 = getelementptr inbounds i32* %fac, i64 %indvars.iv58
  br label %for.body4

for.body4:                                        ; preds = %for.body4.lr.ph, %if.then
  %n.051 = phi i32 [ %n.0.ph56, %for.body4.lr.ph ], [ %div, %if.then ]
  %3 = trunc i64 %indvars.iv58 to i32
  %rem = srem i32 %n.051, %3
  %cmp5 = icmp eq i32 %rem, 0
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %for.body4
  %4 = load i32* %arrayidx7, align 4, !tbaa !0
  %inc8 = add nsw i32 %4, 1
  store i32 %inc8, i32* %arrayidx7, align 4, !tbaa !0
  %div = sdiv i32 %n.051, %3
  %cmp3 = icmp sgt i32 %3, %div
  br i1 %cmp3, label %for.end10, label %for.body4

if.else:                                          ; preds = %for.body4
  %indvars.iv.next59 = add i64 %indvars.iv58, 1
  %cmp350 = icmp slt i32 %3, %n.051
  br i1 %cmp350, label %for.body4.lr.ph, label %for.end10

for.end10:                                        ; preds = %for.end, %for.end.thread, %if.else, %if.then
  %cmp3505467 = phi i1 [ %cmp35054, %if.then ], [ true, %for.end.thread ], [ true, %for.end ], [ %cmp35054, %if.else ]
  %5 = load %struct._IO_FILE** @debug, align 8, !tbaa !4
  %tobool = icmp eq %struct._IO_FILE* %5, null
  br i1 %tobool, label %if.end26, label %if.then11

if.then11:                                        ; preds = %for.end10
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([29 x i8]* @.str6, i64 0, i64 0), i32 %nn) #5
  br i1 %cmp3505467, label %if.end26, label %for.body14.lr.ph

for.body14.lr.ph:                                 ; preds = %if.then11
  %6 = add i32 %nn, 1
  br label %for.body14

for.body14:                                       ; preds = %for.inc23, %for.body14.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc23 ], [ 2, %for.body14.lr.ph ]
  %arrayidx16 = getelementptr inbounds i32* %fac, i64 %indvars.iv
  %7 = load i32* %arrayidx16, align 4, !tbaa !0
  %tobool17 = icmp eq i32 %7, 0
  br i1 %tobool17, label %for.inc23, label %if.then18

if.then18:                                        ; preds = %for.body14
  %8 = load %struct._IO_FILE** @debug, align 8, !tbaa !4
  %9 = trunc i64 %indvars.iv to i32
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([9 x i8]* @.str7, i64 0, i64 0), i32 %9, i32 %7) #5
  br label %for.inc23

for.inc23:                                        ; preds = %for.body14, %if.then18
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %6
  br i1 %exitcond, label %if.end26, label %for.body14

if.end26:                                         ; preds = %if.then11, %for.inc23, %for.end10
  ret void
}
