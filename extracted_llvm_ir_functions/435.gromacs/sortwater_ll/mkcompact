define void @mkcompact(i32 %astart, i32 %nwater, i32 %nwatom, [3 x float]* %x, [3 x float]* nocapture %v, i32 %nnode, [3 x float]* nocapture readonly %box) #4 {
  %1 = icmp slt i32 %nnode, 2
  br i1 %1, label %159, label %.preheader

.preheader:                                       ; preds = %0, %.preheader
  %ip.02.i.i = phi i32 [ %2, %.preheader ], [ 1, %0 ]
  %i.01.i.i = phi i32 [ %3, %.preheader ], [ 0, %0 ]
  %2 = mul nsw i32 %ip.02.i.i, %nnode
  %3 = add nuw nsw i32 %i.01.i.i, 1
  %exitcond.i.i = icmp eq i32 %i.01.i.i, 2
  br i1 %exitcond.i.i, label %ipow.exit.i, label %.preheader

ipow.exit.i:                                      ; preds = %.preheader
  %4 = mul nsw i32 %2, 6
  %5 = tail call i8* @save_calloc(i8* getelementptr inbounds ([3 x i8]* @.str5, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8]* @.str1, i64 0, i64 0), i32 270, i32 %4, i32 12) #8
  %6 = bitcast i8* %5 to [3 x i32]*
  %7 = add nsw i32 %nnode, 1
  %8 = tail call i8* @save_calloc(i8* getelementptr inbounds ([3 x i8]* @.str6, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8]* @.str1, i64 0, i64 0), i32 272, i32 %7, i32 4) #8
  %9 = bitcast i8* %8 to i32*
  %10 = tail call i8* @save_calloc(i8* getelementptr inbounds ([3 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8]* @.str1, i64 0, i64 0), i32 273, i32 %7, i32 4) #8
  %11 = bitcast i8* %10 to i32*
  tail call fastcc void @factorize(i32 %nnode, i32* %9) #8
  %12 = icmp slt i32 %nnode, 0
  br i1 %12, label %._crit_edge41.thread.i, label %.preheader14.i

._crit_edge41.thread.i:                           ; preds = %ipow.exit.i
  tail call void @qsort(i8* %5, i64 0, i64 12, i32 (i8*, i8*)* @iv_comp) #8
  br label %._crit_edge22.i

.preheader14.i:                                   ; preds = %ipow.exit.i, %._crit_edge36.i
  %indvars.iv51.i = phi i64 [ %indvars.iv.next52.i, %._crit_edge36.i ], [ 0, %ipow.exit.i ]
  %nbb.040.i = phi i32 [ %nbb.1.lcssa.i, %._crit_edge36.i ], [ 0, %ipow.exit.i ]
  %13 = getelementptr inbounds i32* %9, i64 %indvars.iv51.i
  %14 = load i32* %13, align 4, !tbaa !18
  %15 = icmp slt i32 %14, 1
  %.pre = trunc i64 %indvars.iv51.i to i32
  br i1 %15, label %._crit_edge36.i, label %.lr.ph35.i

.lr.ph35.i:                                       ; preds = %.preheader14.i, %._crit_edge31.i
  %nbb.134.i = phi i32 [ %nbb.2.lcssa.i, %._crit_edge31.i ], [ %nbb.040.i, %.preheader14.i ]
  %m.033.i = phi i32 [ %69, %._crit_edge31.i ], [ 1, %.preheader14.i ]
  %16 = icmp sgt i32 %m.033.i, 0
  br i1 %16, label %.lr.ph.i.i, label %ipow.exit4.i

.lr.ph.i.i:                                       ; preds = %.lr.ph35.i
  %17 = add nsw i32 %m.033.i, -1
  br label %18

; <label>:18                                      ; preds = %18, %.lr.ph.i.i
  %ip.02.i1.i = phi i32 [ 1, %.lr.ph.i.i ], [ %19, %18 ]
  %i.01.i2.i = phi i32 [ 0, %.lr.ph.i.i ], [ %20, %18 ]
  %19 = mul nsw i32 %ip.02.i1.i, %.pre
  %20 = add nuw nsw i32 %i.01.i2.i, 1
  %exitcond.i3.i = icmp eq i32 %i.01.i2.i, %17
  br i1 %exitcond.i3.i, label %ipow.exit4.i, label %18

ipow.exit4.i:                                     ; preds = %18, %.lr.ph35.i
  %ip.0.lcssa.i.i = phi i32 [ 1, %.lr.ph35.i ], [ %19, %18 ]
  %21 = sdiv i32 %nnode, %ip.0.lcssa.i.i
  tail call fastcc void @factorize(i32 %21, i32* %11) #8
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %._crit_edge31.i, label %.preheader.i

.preheader.i:                                     ; preds = %ipow.exit4.i, %._crit_edge26.i
  %indvars.iv47.i = phi i64 [ %indvars.iv.next48.i, %._crit_edge26.i ], [ 0, %ipow.exit4.i ]
  %nbb.230.i = phi i32 [ %nbb.3.lcssa.i, %._crit_edge26.i ], [ %nbb.134.i, %ipow.exit4.i ]
  %23 = getelementptr inbounds i32* %11, i64 %indvars.iv47.i
  %24 = load i32* %23, align 4, !tbaa !18
  %25 = icmp slt i32 %24, 1
  %.pre11 = trunc i64 %indvars.iv47.i to i32
  br i1 %25, label %._crit_edge26.i, label %.lr.ph25.i

.lr.ph25.i:                                       ; preds = %.preheader.i, %65
  %26 = phi i32 [ %66, %65 ], [ %24, %.preheader.i ]
  %nbb.324.i = phi i32 [ %nbb.4.i, %65 ], [ %nbb.230.i, %.preheader.i ]
  %n.023.i = phi i32 [ %67, %65 ], [ 1, %.preheader.i ]
  %27 = icmp sgt i32 %n.023.i, 0
  br i1 %27, label %.lr.ph.i5.i, label %ipow.exit10.i

.lr.ph.i5.i:                                      ; preds = %.lr.ph25.i
  %28 = add nsw i32 %n.023.i, -1
  br label %29

; <label>:29                                      ; preds = %29, %.lr.ph.i5.i
  %ip.02.i6.i = phi i32 [ 1, %.lr.ph.i5.i ], [ %30, %29 ]
  %i.01.i7.i = phi i32 [ 0, %.lr.ph.i5.i ], [ %31, %29 ]
  %30 = mul nsw i32 %ip.02.i6.i, %.pre11
  %31 = add nuw nsw i32 %i.01.i7.i, 1
  %exitcond.i8.i = icmp eq i32 %i.01.i7.i, %28
  br i1 %exitcond.i8.i, label %ipow.exit10.i, label %29

ipow.exit10.i:                                    ; preds = %29, %.lr.ph25.i
  %ip.0.lcssa.i9.i = phi i32 [ 1, %.lr.ph25.i ], [ %30, %29 ]
  %32 = sdiv i32 %21, %ip.0.lcssa.i9.i
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %34, label %65

; <label>:34                                      ; preds = %ipow.exit10.i
  %35 = add nsw i32 %nbb.324.i, 1
  %36 = sext i32 %nbb.324.i to i64
  %37 = getelementptr inbounds [3 x i32]* %6, i64 %36, i64 0
  store i32 %ip.0.lcssa.i.i, i32* %37, align 4, !tbaa !18
  %38 = getelementptr inbounds [3 x i32]* %6, i64 %36, i64 1
  store i32 %ip.0.lcssa.i9.i, i32* %38, align 4, !tbaa !18
  %39 = getelementptr inbounds [3 x i32]* %6, i64 %36, i64 2
  store i32 %32, i32* %39, align 4, !tbaa !18
  %40 = add nsw i32 %nbb.324.i, 2
  %41 = sext i32 %35 to i64
  %42 = getelementptr inbounds [3 x i32]* %6, i64 %41, i64 0
  store i32 %ip.0.lcssa.i9.i, i32* %42, align 4, !tbaa !18
  %43 = getelementptr inbounds [3 x i32]* %6, i64 %41, i64 1
  store i32 %ip.0.lcssa.i.i, i32* %43, align 4, !tbaa !18
  %44 = getelementptr inbounds [3 x i32]* %6, i64 %41, i64 2
  store i32 %32, i32* %44, align 4, !tbaa !18
  %45 = add nsw i32 %nbb.324.i, 3
  %46 = sext i32 %40 to i64
  %47 = getelementptr inbounds [3 x i32]* %6, i64 %46, i64 0
  store i32 %32, i32* %47, align 4, !tbaa !18
  %48 = getelementptr inbounds [3 x i32]* %6, i64 %46, i64 1
  store i32 %ip.0.lcssa.i.i, i32* %48, align 4, !tbaa !18
  %49 = getelementptr inbounds [3 x i32]* %6, i64 %46, i64 2
  store i32 %ip.0.lcssa.i9.i, i32* %49, align 4, !tbaa !18
  %50 = add nsw i32 %nbb.324.i, 4
  %51 = sext i32 %45 to i64
  %52 = getelementptr inbounds [3 x i32]* %6, i64 %51, i64 0
  store i32 %ip.0.lcssa.i.i, i32* %52, align 4, !tbaa !18
  %53 = getelementptr inbounds [3 x i32]* %6, i64 %51, i64 1
  store i32 %32, i32* %53, align 4, !tbaa !18
  %54 = getelementptr inbounds [3 x i32]* %6, i64 %51, i64 2
  store i32 %ip.0.lcssa.i9.i, i32* %54, align 4, !tbaa !18
  %55 = add nsw i32 %nbb.324.i, 5
  %56 = sext i32 %50 to i64
  %57 = getelementptr inbounds [3 x i32]* %6, i64 %56, i64 0
  store i32 %ip.0.lcssa.i9.i, i32* %57, align 4, !tbaa !18
  %58 = getelementptr inbounds [3 x i32]* %6, i64 %56, i64 1
  store i32 %32, i32* %58, align 4, !tbaa !18
  %59 = getelementptr inbounds [3 x i32]* %6, i64 %56, i64 2
  store i32 %ip.0.lcssa.i.i, i32* %59, align 4, !tbaa !18
  %60 = add nsw i32 %nbb.324.i, 6
  %61 = sext i32 %55 to i64
  %62 = getelementptr inbounds [3 x i32]* %6, i64 %61, i64 0
  store i32 %32, i32* %62, align 4, !tbaa !18
  %63 = getelementptr inbounds [3 x i32]* %6, i64 %61, i64 1
  store i32 %ip.0.lcssa.i9.i, i32* %63, align 4, !tbaa !18
  %64 = getelementptr inbounds [3 x i32]* %6, i64 %61, i64 2
  store i32 %ip.0.lcssa.i.i, i32* %64, align 4, !tbaa !18
  %.pre.i = load i32* %23, align 4, !tbaa !18
  br label %65

; <label>:65                                      ; preds = %34, %ipow.exit10.i
  %66 = phi i32 [ %.pre.i, %34 ], [ %26, %ipow.exit10.i ]
  %nbb.4.i = phi i32 [ %60, %34 ], [ %nbb.324.i, %ipow.exit10.i ]
  %67 = add nuw nsw i32 %n.023.i, 1
  %68 = icmp slt i32 %n.023.i, %66
  br i1 %68, label %.lr.ph25.i, label %._crit_edge26.i

._crit_edge26.i:                                  ; preds = %65, %.preheader.i
  %nbb.3.lcssa.i = phi i32 [ %nbb.230.i, %.preheader.i ], [ %nbb.4.i, %65 ]
  %indvars.iv.next48.i = add nuw nsw i64 %indvars.iv47.i, 1
  %exitcond8 = icmp eq i32 %.pre11, %21
  br i1 %exitcond8, label %._crit_edge31.i, label %.preheader.i

._crit_edge31.i:                                  ; preds = %._crit_edge26.i, %ipow.exit4.i
  %nbb.2.lcssa.i = phi i32 [ %nbb.134.i, %ipow.exit4.i ], [ %nbb.3.lcssa.i, %._crit_edge26.i ]
  %69 = add nuw nsw i32 %m.033.i, 1
  %70 = load i32* %13, align 4, !tbaa !18
  %71 = icmp slt i32 %m.033.i, %70
  br i1 %71, label %.lr.ph35.i, label %._crit_edge36.i

._crit_edge36.i:                                  ; preds = %._crit_edge31.i, %.preheader14.i
  %nbb.1.lcssa.i = phi i32 [ %nbb.040.i, %.preheader14.i ], [ %nbb.2.lcssa.i, %._crit_edge31.i ]
  %indvars.iv.next52.i = add nuw nsw i64 %indvars.iv51.i, 1
  %exitcond10 = icmp eq i32 %.pre, %nnode
  br i1 %exitcond10, label %._crit_edge41.i, label %.preheader14.i

._crit_edge41.i:                                  ; preds = %._crit_edge36.i
  %72 = sext i32 %nbb.1.lcssa.i to i64
  tail call void @qsort(i8* %5, i64 %72, i64 12, i32 (i8*, i8*)* @iv_comp) #8
  %73 = icmp sgt i32 %nbb.1.lcssa.i, 1
  br i1 %73, label %.lr.ph21.i, label %._crit_edge22.i

.lr.ph21.i:                                       ; preds = %._crit_edge41.i
  %74 = add i32 %nbb.1.lcssa.i, -1
  br label %75

; <label>:75                                      ; preds = %102, %.lr.ph21.i
  %indvars.iv45.i = phi i64 [ 1, %.lr.ph21.i ], [ %indvars.iv.next46.i, %102 ]
  %j.118.i = phi i32 [ 0, %.lr.ph21.i ], [ %j.2.i, %102 ]
  %76 = getelementptr inbounds [3 x i32]* %6, i64 %indvars.iv45.i, i64 0
  %77 = load i32* %76, align 4, !tbaa !18
  %78 = sext i32 %j.118.i to i64
  %79 = getelementptr inbounds [3 x i32]* %6, i64 %78, i64 0
  %80 = load i32* %79, align 4, !tbaa !18
  %81 = icmp eq i32 %77, %80
  %82 = getelementptr inbounds [3 x i32]* %6, i64 %indvars.iv45.i, i64 1
  br i1 %81, label %83, label %._crit_edge55.i

; <label>:83                                      ; preds = %75
  %84 = load i32* %82, align 4, !tbaa !18
  %85 = getelementptr inbounds [3 x i32]* %6, i64 %78, i64 1
  %86 = load i32* %85, align 4, !tbaa !18
  %87 = icmp eq i32 %84, %86
  br i1 %87, label %88, label %._crit_edge55.i

; <label>:88                                      ; preds = %83
  %89 = getelementptr inbounds [3 x i32]* %6, i64 %indvars.iv45.i, i64 2
  %90 = load i32* %89, align 4, !tbaa !18
  %91 = getelementptr inbounds [3 x i32]* %6, i64 %78, i64 2
  %92 = load i32* %91, align 4, !tbaa !18
  %93 = icmp eq i32 %90, %92
  br i1 %93, label %102, label %._crit_edge55.i

._crit_edge55.i:                                  ; preds = %88, %83, %75
  %94 = add nsw i32 %j.118.i, 1
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [3 x i32]* %6, i64 %95, i64 0
  store i32 %77, i32* %96, align 4, !tbaa !18
  %97 = load i32* %82, align 4, !tbaa !18
  %98 = getelementptr inbounds [3 x i32]* %6, i64 %95, i64 1
  store i32 %97, i32* %98, align 4, !tbaa !18
  %99 = getelementptr inbounds [3 x i32]* %6, i64 %indvars.iv45.i, i64 2
  %100 = load i32* %99, align 4, !tbaa !18
  %101 = getelementptr inbounds [3 x i32]* %6, i64 %95, i64 2
  store i32 %100, i32* %101, align 4, !tbaa !18
  br label %102

; <label>:102                                     ; preds = %._crit_edge55.i, %88
  %j.2.i = phi i32 [ %94, %._crit_edge55.i ], [ %j.118.i, %88 ]
  %indvars.iv.next46.i = add nuw nsw i64 %indvars.iv45.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv45.i to i32
  %exitcond6 = icmp eq i32 %lftr.wideiv, %74
  br i1 %exitcond6, label %._crit_edge22.i, label %75

._crit_edge22.i:                                  ; preds = %102, %._crit_edge41.i, %._crit_edge41.thread.i
  %j.1.lcssa.i = phi i32 [ 0, %._crit_edge41.i ], [ 0, %._crit_edge41.thread.i ], [ %j.2.i, %102 ]
  %103 = add nsw i32 %j.1.lcssa.i, 1
  %104 = bitcast [3 x float]* %box to i32*
  %105 = load i32* %104, align 4, !tbaa !14
  store i32 %105, i32* bitcast ([3 x [3 x float]]* @BOX to i32*), align 16, !tbaa !14
  %106 = getelementptr inbounds [3 x float]* %box, i64 0, i64 1
  %107 = bitcast float* %106 to i32*
  %108 = load i32* %107, align 4, !tbaa !14
  store i32 %108, i32* bitcast (float* getelementptr inbounds ([3 x [3 x float]]* @BOX, i64 0, i64 0, i64 1) to i32*), align 4, !tbaa !14
  %109 = getelementptr inbounds [3 x float]* %box, i64 0, i64 2
  %110 = bitcast float* %109 to i32*
  %111 = load i32* %110, align 4, !tbaa !14
  store i32 %111, i32* bitcast (float* getelementptr inbounds ([3 x [3 x float]]* @BOX, i64 0, i64 0, i64 2) to i32*), align 8, !tbaa !14
  %112 = getelementptr inbounds [3 x float]* %box, i64 1, i64 0
  %113 = bitcast float* %112 to i32*
  %114 = load i32* %113, align 4, !tbaa !14
  store i32 %114, i32* bitcast (float* getelementptr inbounds ([3 x [3 x float]]* @BOX, i64 0, i64 1, i64 0) to i32*), align 4, !tbaa !14
  %115 = getelementptr inbounds [3 x float]* %box, i64 1, i64 1
  %116 = bitcast float* %115 to i32*
  %117 = load i32* %116, align 4, !tbaa !14
  store i32 %117, i32* bitcast (float* getelementptr inbounds ([3 x [3 x float]]* @BOX, i64 0, i64 1, i64 1) to i32*), align 4, !tbaa !14
  %118 = getelementptr inbounds [3 x float]* %box, i64 1, i64 2
  %119 = bitcast float* %118 to i32*
  %120 = load i32* %119, align 4, !tbaa !14
  store i32 %120, i32* bitcast (float* getelementptr inbounds ([3 x [3 x float]]* @BOX, i64 0, i64 1, i64 2) to i32*), align 4, !tbaa !14
  %121 = getelementptr inbounds [3 x float]* %box, i64 2, i64 0
  %122 = bitcast float* %121 to i32*
  %123 = load i32* %122, align 4, !tbaa !14
  store i32 %123, i32* bitcast (float* getelementptr inbounds ([3 x [3 x float]]* @BOX, i64 0, i64 2, i64 0) to i32*), align 8, !tbaa !14
  %124 = getelementptr inbounds [3 x float]* %box, i64 2, i64 1
  %125 = bitcast float* %124 to i32*
  %126 = load i32* %125, align 4, !tbaa !14
  store i32 %126, i32* bitcast (float* getelementptr inbounds ([3 x [3 x float]]* @BOX, i64 0, i64 2, i64 1) to i32*), align 4, !tbaa !14
  %127 = getelementptr inbounds [3 x float]* %box, i64 2, i64 2
  %128 = bitcast float* %127 to i32*
  %129 = load i32* %128, align 4, !tbaa !14
  store i32 %129, i32* bitcast (float* getelementptr inbounds ([3 x [3 x float]]* @BOX, i64 0, i64 2, i64 2) to i32*), align 8, !tbaa !14
  %130 = sext i32 %103 to i64
  tail call void @qsort(i8* %5, i64 %130, i64 12, i32 (i8*, i8*)* @w_comp) #8
  %131 = icmp sgt i32 %j.1.lcssa.i, -1
  br i1 %131, label %.lr.ph.i, label %buildbox.exit

.lr.ph.i:                                         ; preds = %._crit_edge22.i, %.lr.ph.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %.lr.ph.i ], [ 0, %._crit_edge22.i ]
  %132 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !19
  %133 = getelementptr inbounds [3 x i32]* %6, i64 %indvars.iv.i, i64 0
  %134 = load i32* %133, align 4, !tbaa !18
  %135 = getelementptr inbounds [3 x i32]* %6, i64 %indvars.iv.i, i64 1
  %136 = load i32* %135, align 4, !tbaa !18
  %137 = getelementptr inbounds [3 x i32]* %6, i64 %indvars.iv.i, i64 2
  %138 = load i32* %137, align 4, !tbaa !18
  %139 = mul nsw i32 %136, %134
  %140 = mul nsw i32 %139, %138
  %141 = tail call fastcc float @box_weight(i32* %133, [3 x float]* %box) #8
  %142 = fpext float %141 to double
  %143 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %132, i8* getelementptr inbounds ([54 x i8]* @.str8, i64 0, i64 0), i32 %134, i32 %136, i32 %138, i32 %140, double %142) #8
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %144 = icmp slt i64 %indvars.iv.next.i, %130
  br i1 %144, label %.lr.ph.i, label %buildbox.exit

buildbox.exit:                                    ; preds = %.lr.ph.i, %._crit_edge22.i
  %145 = bitcast i8* %5 to i32*
  %146 = load i32* %145, align 4, !tbaa !18
  store i32 %146, i32* getelementptr inbounds ([3 x i32]* @NBOX, i64 0, i64 0), align 4, !tbaa !18
  %147 = getelementptr inbounds i8* %5, i64 4
  %148 = bitcast i8* %147 to i32*
  %149 = load i32* %148, align 4, !tbaa !18
  store i32 %149, i32* getelementptr inbounds ([3 x i32]* @NBOX, i64 0, i64 1), align 4, !tbaa !18
  %150 = getelementptr inbounds i8* %5, i64 8
  %151 = bitcast i8* %150 to i32*
  %152 = load i32* %151, align 4, !tbaa !18
  store i32 %152, i32* getelementptr inbounds ([3 x i32]* @NBOX, i64 0, i64 2), align 4, !tbaa !18
  tail call void @save_free(i8* getelementptr inbounds ([3 x i8]* @.str5, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8]* @.str1, i64 0, i64 0), i32 313, i8* %5) #8
  tail call void @save_free(i8* getelementptr inbounds ([3 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8]* @.str1, i64 0, i64 0), i32 314, i8* %10) #8
  tail call void @save_free(i8* getelementptr inbounds ([3 x i8]* @.str6, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8]* @.str1, i64 0, i64 0), i32 315, i8* %8) #8
  br label %153

; <label>:153                                     ; preds = %153, %buildbox.exit
  %indvars.iv = phi i64 [ 0, %buildbox.exit ], [ %indvars.iv.next, %153 ]
  %154 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv, i64 %indvars.iv
  %155 = load float* %154, align 4, !tbaa !14
  %156 = fdiv float 1.000000e+00, %155
  %157 = getelementptr inbounds [3 x float]* @box_1, i64 0, i64 %indvars.iv
  store float %156, float* %157, align 4, !tbaa !14
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %158, label %153

; <label>:158                                     ; preds = %153
  tail call fastcc void @lo_sortwater(i32 %astart, i32 %nwater, i32 %nwatom, [3 x float]* %x, [3 x float]* %v, i32 1) #10
  br label %159

; <label>:159                                     ; preds = %0, %158
  ret void
}
