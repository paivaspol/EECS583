define internal fastcc i32 @block_index(float* nocapture readonly %x) #5 {
  %ixyz = alloca [3 x i32], align 4
  br label %1

; <label>:1                                       ; preds = %1, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %1 ]
  %2 = getelementptr inbounds float* %x, i64 %indvars.iv
  %3 = load float* %2, align 4, !tbaa !14
  %4 = getelementptr inbounds [3 x float]* @box_1, i64 0, i64 %indvars.iv
  %5 = load float* %4, align 4, !tbaa !14
  %6 = fmul float %3, %5
  %7 = fadd float %6, 1.000000e+00
  %8 = getelementptr inbounds [3 x i32]* @NBOX, i64 0, i64 %indvars.iv
  %9 = load i32* %8, align 4, !tbaa !18
  %10 = sitofp i32 %9 to float
  %11 = fmul float %7, %10
  %12 = fptosi float %11 to i32
  %13 = srem i32 %12, %9
  %14 = getelementptr inbounds [3 x i32]* %ixyz, i64 0, i64 %indvars.iv
  store i32 %13, i32* %14, align 4, !tbaa !18
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %15, label %1

; <label>:15                                      ; preds = %1
  %16 = getelementptr inbounds [3 x i32]* %ixyz, i64 0, i64 0
  %17 = load i32* %16, align 4, !tbaa !18
  %18 = load i32* getelementptr inbounds ([3 x i32]* @NBOX, i64 0, i64 1), align 4, !tbaa !18
  %19 = mul nsw i32 %18, %17
  %20 = load i32* getelementptr inbounds ([3 x i32]* @NBOX, i64 0, i64 2), align 4, !tbaa !18
  %21 = getelementptr inbounds [3 x i32]* %ixyz, i64 0, i64 1
  %22 = load i32* %21, align 4, !tbaa !18
  %23 = add i32 %22, %19
  %24 = mul nsw i32 %23, %20
  %25 = getelementptr inbounds [3 x i32]* %ixyz, i64 0, i64 2
  %26 = load i32* %25, align 4, !tbaa !18
  %27 = add nsw i32 %24, %26
  ret i32 %27
}
