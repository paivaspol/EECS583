define internal fastcc i32 @block_index(float* nocapture %x) #2 {
entry:
  %ixyz = alloca [3 x i32], align 4
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds float* %x, i64 %indvars.iv
  %0 = load float* %arrayidx, align 4, !tbaa !3
  %arrayidx2 = getelementptr inbounds [3 x float]* @box_1, i64 0, i64 %indvars.iv
  %1 = load float* %arrayidx2, align 4, !tbaa !3
  %mul = fmul float %0, %1
  %add = fadd float %mul, 1.000000e+00
  %arrayidx4 = getelementptr inbounds [3 x i32]* @NBOX, i64 0, i64 %indvars.iv
  %2 = load i32* %arrayidx4, align 4, !tbaa !0
  %conv = sitofp i32 %2 to float
  %mul5 = fmul float %add, %conv
  %conv6 = fptosi float %mul5 to i32
  %rem = srem i32 %conv6, %2
  %arrayidx10 = getelementptr inbounds [3 x i32]* %ixyz, i64 0, i64 %indvars.iv
  store i32 %rem, i32* %arrayidx10, align 4, !tbaa !0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 3
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %arrayidx11 = getelementptr inbounds [3 x i32]* %ixyz, i64 0, i64 0
  %3 = load i32* %arrayidx11, align 4, !tbaa !0
  %4 = load i32* getelementptr inbounds ([3 x i32]* @NBOX, i64 0, i64 1), align 4, !tbaa !0
  %mul13 = mul nsw i32 %4, %3
  %5 = load i32* getelementptr inbounds ([3 x i32]* @NBOX, i64 0, i64 2), align 4, !tbaa !0
  %arrayidx16 = getelementptr inbounds [3 x i32]* %ixyz, i64 0, i64 1
  %6 = load i32* %arrayidx16, align 4, !tbaa !0
  %mul151 = add i32 %6, %mul13
  %add19 = mul i32 %mul151, %5
  %arrayidx20 = getelementptr inbounds [3 x i32]* %ixyz, i64 0, i64 2
  %7 = load i32* %arrayidx20, align 4, !tbaa !0
  %add21 = add nsw i32 %add19, %7
  ret i32 %add21
}
