define internal i32 @iv_comp(i8* nocapture %a, i8* nocapture %b) #3 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %a}, i64 0, metadata !117), !dbg !564
  tail call void @llvm.dbg.value(metadata !{i8* %b}, i64 0, metadata !118), !dbg !564
  %0 = bitcast i8* %a to i32*, !dbg !565
  tail call void @llvm.dbg.value(metadata !{i32* %0}, i64 0, metadata !119), !dbg !565
  %1 = bitcast i8* %b to i32*, !dbg !566
  tail call void @llvm.dbg.value(metadata !{i32* %1}, i64 0, metadata !121), !dbg !566
  %2 = load i32* %0, align 4, !dbg !567, !tbaa !228
  %3 = load i32* %1, align 4, !dbg !567, !tbaa !228
  %cmp = icmp eq i32 %2, %3, !dbg !567
  br i1 %cmp, label %if.else, label %if.then, !dbg !567

if.then:                                          ; preds = %entry
  %sub = sub nsw i32 %2, %3, !dbg !568
  br label %return, !dbg !568

if.else:                                          ; preds = %entry
  %arrayidx4 = getelementptr inbounds i8* %a, i64 4, !dbg !569
  %4 = bitcast i8* %arrayidx4 to i32*, !dbg !569
  %5 = load i32* %4, align 4, !dbg !569, !tbaa !228
  %arrayidx5 = getelementptr inbounds i8* %b, i64 4, !dbg !569
  %6 = bitcast i8* %arrayidx5 to i32*, !dbg !569
  %7 = load i32* %6, align 4, !dbg !569, !tbaa !228
  %cmp6 = icmp eq i32 %5, %7, !dbg !569
  br i1 %cmp6, label %if.else11, label %if.then7, !dbg !569

if.then7:                                         ; preds = %if.else
  %sub10 = sub nsw i32 %5, %7, !dbg !570
  br label %return, !dbg !570

if.else11:                                        ; preds = %if.else
  %arrayidx12 = getelementptr inbounds i8* %a, i64 8, !dbg !571
  %8 = bitcast i8* %arrayidx12 to i32*, !dbg !571
  %9 = load i32* %8, align 4, !dbg !571, !tbaa !228
  %arrayidx13 = getelementptr inbounds i8* %b, i64 8, !dbg !571
  %10 = bitcast i8* %arrayidx13 to i32*, !dbg !571
  %11 = load i32* %10, align 4, !dbg !571, !tbaa !228
  %sub14 = sub nsw i32 %9, %11, !dbg !571
  br label %return, !dbg !571

return:                                           ; preds = %if.else11, %if.then7, %if.then
  %retval.0 = phi i32 [ %sub, %if.then ], [ %sub10, %if.then7 ], [ %sub14, %if.else11 ]
  ret i32 %retval.0, !dbg !572
}
