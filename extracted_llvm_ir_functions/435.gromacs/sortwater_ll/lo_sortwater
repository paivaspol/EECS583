define internal fastcc void @lo_sortwater(i32 %astart, i32 %nwater, i32 %nwatom, [3 x float]* %x, [3 x float]* nocapture %v, i32 %bBlock) #0 {
entry:
  %call = tail call i8* @save_calloc(i8* getelementptr inbounds ([8 x i8]* @.str8, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8]* @.str1, i64 0, i64 0), i32 128, i32 %nwater, i32 4) #5
  %0 = bitcast i8* %call to i32*
  %cmp211 = icmp sgt i32 %nwater, 0
  br i1 %cmp211, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv243 = phi i64 [ %indvars.iv.next244, %for.body ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds i32* %0, i64 %indvars.iv243
  %1 = trunc i64 %indvars.iv243 to i32
  store i32 %1, i32* %arrayidx, align 4, !tbaa !0
  %indvars.iv.next244 = add i64 %indvars.iv243, 1
  %lftr.wideiv245 = trunc i64 %indvars.iv.next244 to i32
  %exitcond246 = icmp eq i32 %lftr.wideiv245, %nwater
  br i1 %exitcond246, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %idx.ext = sext i32 %astart to i64
  %add.ptr = getelementptr inbounds [3 x float]* %x, i64 %idx.ext
  store [3 x float]* %add.ptr, [3 x float]** @xptr, align 8, !tbaa !4
  store i32 %nwatom, i32* @nwat, align 4, !tbaa !0
  %conv = sext i32 %nwater to i64
  %tobool = icmp ne i32 %bBlock, 0
  %cond = select i1 %tobool, i32 (i8*, i8*)* @blockcomp, i32 (i8*, i8*)* @rvcomp
  tail call void @qsort(i8* %call, i64 %conv, i64 4, i32 (i8*, i8*)* %cond) #5
  %2 = load %struct._IO_FILE** @debug, align 8, !tbaa !4
  %tobool1 = icmp eq %struct._IO_FILE* %2, null
  br i1 %tobool1, label %if.end, label %for.cond2.preheader

for.cond2.preheader:                              ; preds = %for.end
  br i1 %cmp211, label %for.body5, label %if.end.thread

if.end.thread:                                    ; preds = %for.cond2.preheader
  %mul26247 = mul i32 %nwatom, %nwater
  %call27248 = tail call i8* @save_calloc(i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8]* @.str1, i64 0, i64 0), i32 141, i32 %mul26247, i32 12) #5
  %3 = bitcast i8* %call27248 to [3 x float]*
  br label %for.cond54.preheader

for.body5:                                        ; preds = %for.cond2.preheader, %for.body5.for.body5_crit_edge
  %4 = phi %struct._IO_FILE* [ %.pre, %for.body5.for.body5_crit_edge ], [ %2, %for.cond2.preheader ]
  %indvars.iv239 = phi i64 [ %indvars.iv.next240, %for.body5.for.body5_crit_edge ], [ 0, %for.cond2.preheader ]
  %arrayidx7 = getelementptr inbounds i32* %0, i64 %indvars.iv239
  %5 = load i32* %arrayidx7, align 4, !tbaa !0
  %mul = mul nsw i32 %5, %nwatom
  %add = add nsw i32 %mul, %astart
  %idxprom8 = sext i32 %add to i64
  %arrayidx10 = getelementptr inbounds [3 x float]* %x, i64 %idxprom8, i64 0
  %6 = load float* %arrayidx10, align 4, !tbaa !3
  %conv11 = fpext float %6 to double
  %arrayidx15 = getelementptr inbounds [3 x float]* %x, i64 %idxprom8, i64 1
  %7 = load float* %arrayidx15, align 4, !tbaa !3
  %conv16 = fpext float %7 to double
  %arrayidx20 = getelementptr inbounds [3 x float]* %x, i64 %idxprom8, i64 2
  %8 = load float* %arrayidx20, align 4, !tbaa !3
  %conv21 = fpext float %8 to double
  %9 = trunc i64 %indvars.iv239 to i32
  %call22 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([46 x i8]* @.str9, i64 0, i64 0), i32 %9, i32 %mul, double %conv11, double %conv16, double %conv21) #5
  %indvars.iv.next240 = add i64 %indvars.iv239, 1
  %lftr.wideiv241 = trunc i64 %indvars.iv.next240 to i32
  %exitcond242 = icmp eq i32 %lftr.wideiv241, %nwater
  br i1 %exitcond242, label %if.end, label %for.body5.for.body5_crit_edge

for.body5.for.body5_crit_edge:                    ; preds = %for.body5
  %.pre = load %struct._IO_FILE** @debug, align 8, !tbaa !4
  br label %for.body5

if.end:                                           ; preds = %for.body5, %for.end
  %mul26 = mul i32 %nwatom, %nwater
  %call27 = tail call i8* @save_calloc(i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8]* @.str1, i64 0, i64 0), i32 141, i32 %mul26, i32 12) #5
  %10 = bitcast i8* %call27 to [3 x float]*
  br i1 %cmp211, label %for.body31.lr.ph, label %for.cond54.preheader

for.body31.lr.ph:                                 ; preds = %if.end
  %cmp37205 = icmp sgt i32 %nwatom, 0
  br label %for.body31

for.cond54.preheader:                             ; preds = %for.inc51, %if.end.thread, %if.end
  %11 = phi [3 x float]* [ %3, %if.end.thread ], [ %10, %if.end ], [ %10, %for.inc51 ]
  %call27250 = phi i8* [ %call27248, %if.end.thread ], [ %call27, %if.end ], [ %call27, %for.inc51 ]
  %mul26249 = phi i32 [ %mul26247, %if.end.thread ], [ %mul26, %if.end ], [ %mul26, %for.inc51 ]
  %cmp56203 = icmp sgt i32 %mul26249, 0
  br i1 %cmp56203, label %for.body58, label %for.cond69.preheader

for.body31:                                       ; preds = %for.inc51, %for.body31.lr.ph
  %indvars.iv235 = phi i64 [ 0, %for.body31.lr.ph ], [ %indvars.iv.next236, %for.inc51 ]
  br i1 %cmp37205, label %for.body39.lr.ph, label %for.inc51

for.body39.lr.ph:                                 ; preds = %for.body31
  %arrayidx33 = getelementptr inbounds i32* %0, i64 %indvars.iv235
  %12 = load i32* %arrayidx33, align 4, !tbaa !0
  %mul34 = mul nsw i32 %12, %nwatom
  %add35 = add nsw i32 %mul34, %astart
  %13 = trunc i64 %indvars.iv235 to i32
  %mul43 = mul nsw i32 %13, %nwatom
  %14 = sext i32 %mul43 to i64
  %15 = sext i32 %add35 to i64
  br label %for.body39

for.body39:                                       ; preds = %for.body39, %for.body39.lr.ph
  %indvars.iv229 = phi i64 [ 0, %for.body39.lr.ph ], [ %indvars.iv.next230, %for.body39 ]
  %16 = add nsw i64 %15, %indvars.iv229
  %arraydecay = getelementptr inbounds [3 x float]* %x, i64 %16, i64 0
  %17 = add nsw i64 %indvars.iv229, %14
  %arraydecay47 = getelementptr inbounds [3 x float]* %10, i64 %17, i64 0
  %18 = load float* %arraydecay, align 4, !tbaa !3
  store float %18, float* %arraydecay47, align 4, !tbaa !3
  %arrayidx2.i = getelementptr inbounds [3 x float]* %x, i64 %16, i64 1
  %19 = load float* %arrayidx2.i, align 4, !tbaa !3
  %arrayidx3.i = getelementptr inbounds [3 x float]* %10, i64 %17, i64 1
  store float %19, float* %arrayidx3.i, align 4, !tbaa !3
  %arrayidx4.i = getelementptr inbounds [3 x float]* %x, i64 %16, i64 2
  %20 = load float* %arrayidx4.i, align 4, !tbaa !3
  %arrayidx5.i = getelementptr inbounds [3 x float]* %10, i64 %17, i64 2
  store float %20, float* %arrayidx5.i, align 4, !tbaa !3
  %indvars.iv.next230 = add i64 %indvars.iv229, 1
  %lftr.wideiv233 = trunc i64 %indvars.iv.next230 to i32
  %exitcond234 = icmp eq i32 %lftr.wideiv233, %nwatom
  br i1 %exitcond234, label %for.inc51, label %for.body39

for.inc51:                                        ; preds = %for.body39, %for.body31
  %indvars.iv.next236 = add i64 %indvars.iv235, 1
  %lftr.wideiv237 = trunc i64 %indvars.iv.next236 to i32
  %exitcond238 = icmp eq i32 %lftr.wideiv237, %nwater
  br i1 %exitcond238, label %for.cond54.preheader, label %for.body31

for.cond69.preheader:                             ; preds = %for.body58, %for.cond54.preheader
  br i1 %cmp211, label %for.body72.lr.ph, label %for.cond96.preheader

for.body72.lr.ph:                                 ; preds = %for.cond69.preheader
  %cmp78199 = icmp sgt i32 %nwatom, 0
  br label %for.body72

for.body58:                                       ; preds = %for.cond54.preheader, %for.body58
  %indvars.iv224 = phi i64 [ %indvars.iv.next225, %for.body58 ], [ 0, %for.cond54.preheader ]
  %arraydecay61 = getelementptr inbounds [3 x float]* %11, i64 %indvars.iv224, i64 0
  %21 = add nsw i64 %indvars.iv224, %idx.ext
  %arraydecay65 = getelementptr inbounds [3 x float]* %x, i64 %21, i64 0
  %22 = load float* %arraydecay61, align 4, !tbaa !3
  store float %22, float* %arraydecay65, align 4, !tbaa !3
  %arrayidx2.i193 = getelementptr inbounds [3 x float]* %11, i64 %indvars.iv224, i64 1
  %23 = load float* %arrayidx2.i193, align 4, !tbaa !3
  %arrayidx3.i194 = getelementptr inbounds [3 x float]* %x, i64 %21, i64 1
  store float %23, float* %arrayidx3.i194, align 4, !tbaa !3
  %arrayidx4.i195 = getelementptr inbounds [3 x float]* %11, i64 %indvars.iv224, i64 2
  %24 = load float* %arrayidx4.i195, align 4, !tbaa !3
  %arrayidx5.i196 = getelementptr inbounds [3 x float]* %x, i64 %21, i64 2
  store float %24, float* %arrayidx5.i196, align 4, !tbaa !3
  %indvars.iv.next225 = add i64 %indvars.iv224, 1
  %lftr.wideiv227 = trunc i64 %indvars.iv.next225 to i32
  %exitcond228 = icmp eq i32 %lftr.wideiv227, %mul26249
  br i1 %exitcond228, label %for.cond69.preheader, label %for.body58

for.cond96.preheader:                             ; preds = %for.inc93, %for.cond69.preheader
  br i1 %cmp56203, label %for.body100, label %for.end110

for.body72:                                       ; preds = %for.inc93, %for.body72.lr.ph
  %indvars.iv220 = phi i64 [ 0, %for.body72.lr.ph ], [ %indvars.iv.next221, %for.inc93 ]
  br i1 %cmp78199, label %for.body80.lr.ph, label %for.inc93

for.body80.lr.ph:                                 ; preds = %for.body72
  %arrayidx74 = getelementptr inbounds i32* %0, i64 %indvars.iv220
  %25 = load i32* %arrayidx74, align 4, !tbaa !0
  %mul75 = mul nsw i32 %25, %nwatom
  %add76 = add nsw i32 %mul75, %astart
  %26 = trunc i64 %indvars.iv220 to i32
  %mul85 = mul nsw i32 %26, %nwatom
  %27 = sext i32 %mul85 to i64
  %28 = sext i32 %add76 to i64
  br label %for.body80

for.body80:                                       ; preds = %for.body80, %for.body80.lr.ph
  %indvars.iv214 = phi i64 [ 0, %for.body80.lr.ph ], [ %indvars.iv.next215, %for.body80 ]
  %29 = add nsw i64 %28, %indvars.iv214
  %arraydecay84 = getelementptr inbounds [3 x float]* %v, i64 %29, i64 0
  %30 = add nsw i64 %indvars.iv214, %27
  %arraydecay89 = getelementptr inbounds [3 x float]* %11, i64 %30, i64 0
  %31 = load float* %arraydecay84, align 4, !tbaa !3
  store float %31, float* %arraydecay89, align 4, !tbaa !3
  %arrayidx2.i189 = getelementptr inbounds [3 x float]* %v, i64 %29, i64 1
  %32 = load float* %arrayidx2.i189, align 4, !tbaa !3
  %arrayidx3.i190 = getelementptr inbounds [3 x float]* %11, i64 %30, i64 1
  store float %32, float* %arrayidx3.i190, align 4, !tbaa !3
  %arrayidx4.i191 = getelementptr inbounds [3 x float]* %v, i64 %29, i64 2
  %33 = load float* %arrayidx4.i191, align 4, !tbaa !3
  %arrayidx5.i192 = getelementptr inbounds [3 x float]* %11, i64 %30, i64 2
  store float %33, float* %arrayidx5.i192, align 4, !tbaa !3
  %indvars.iv.next215 = add i64 %indvars.iv214, 1
  %lftr.wideiv218 = trunc i64 %indvars.iv.next215 to i32
  %exitcond219 = icmp eq i32 %lftr.wideiv218, %nwatom
  br i1 %exitcond219, label %for.inc93, label %for.body80

for.inc93:                                        ; preds = %for.body80, %for.body72
  %indvars.iv.next221 = add i64 %indvars.iv220, 1
  %lftr.wideiv222 = trunc i64 %indvars.iv.next221 to i32
  %exitcond223 = icmp eq i32 %lftr.wideiv222, %nwater
  br i1 %exitcond223, label %for.cond96.preheader, label %for.body72

for.body100:                                      ; preds = %for.cond96.preheader, %for.body100
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body100 ], [ 0, %for.cond96.preheader ]
  %arraydecay103 = getelementptr inbounds [3 x float]* %11, i64 %indvars.iv, i64 0
  %34 = add nsw i64 %indvars.iv, %idx.ext
  %arraydecay107 = getelementptr inbounds [3 x float]* %v, i64 %34, i64 0
  %35 = load float* %arraydecay103, align 4, !tbaa !3
  store float %35, float* %arraydecay107, align 4, !tbaa !3
  %arrayidx2.i185 = getelementptr inbounds [3 x float]* %11, i64 %indvars.iv, i64 1
  %36 = load float* %arrayidx2.i185, align 4, !tbaa !3
  %arrayidx3.i186 = getelementptr inbounds [3 x float]* %v, i64 %34, i64 1
  store float %36, float* %arrayidx3.i186, align 4, !tbaa !3
  %arrayidx4.i187 = getelementptr inbounds [3 x float]* %11, i64 %indvars.iv, i64 2
  %37 = load float* %arrayidx4.i187, align 4, !tbaa !3
  %arrayidx5.i188 = getelementptr inbounds [3 x float]* %v, i64 %34, i64 2
  store float %37, float* %arrayidx5.i188, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %mul26249
  br i1 %exitcond, label %for.end110, label %for.body100

for.end110:                                       ; preds = %for.body100, %for.cond96.preheader
  tail call void @save_free(i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8]* @.str1, i64 0, i64 0), i32 159, i8* %call27250) #5
  tail call void @save_free(i8* getelementptr inbounds ([8 x i8]* @.str8, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8]* @.str1, i64 0, i64 0), i32 160, i8* %call) #5
  ret void
}
