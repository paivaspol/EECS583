define internal i32 @blockcomp(i8* nocapture readonly %a, i8* nocapture readonly %b) #5 {
  %1 = load i32* @nwat, align 4, !tbaa !18
  %2 = bitcast i8* %a to i32*
  %3 = load i32* %2, align 4, !tbaa !18
  %4 = mul nsw i32 %3, %1
  %5 = bitcast i8* %b to i32*
  %6 = load i32* %5, align 4, !tbaa !18
  %7 = mul nsw i32 %6, %1
  %8 = sext i32 %4 to i64
  %9 = load [3 x float]** @xptr, align 8, !tbaa !19
  %10 = getelementptr inbounds [3 x float]* %9, i64 %8, i64 0
  %11 = tail call fastcc i32 @block_index(float* %10) #10
  %12 = sext i32 %7 to i64
  %13 = getelementptr inbounds [3 x float]* %9, i64 %12, i64 0
  %14 = tail call fastcc i32 @block_index(float* %13) #10
  %15 = icmp eq i32 %11, %14
  br i1 %15, label %16, label %22

; <label>:16                                      ; preds = %0
  %17 = load float* %10, align 4, !tbaa !14
  %18 = load float* %13, align 4, !tbaa !14
  %19 = fcmp olt float %17, %18
  br i1 %19, label %24, label %20

; <label>:20                                      ; preds = %16
  %21 = fcmp ogt float %17, %18
  %. = zext i1 %21 to i32
  br label %24

; <label>:22                                      ; preds = %0
  %23 = sub nsw i32 %11, %14
  br label %24

; <label>:24                                      ; preds = %20, %16, %22
  %.0 = phi i32 [ %23, %22 ], [ -1, %16 ], [ %., %20 ]
  ret i32 %.0
}
