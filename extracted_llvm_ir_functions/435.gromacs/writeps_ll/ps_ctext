define void @ps_ctext(%struct._IO_FILE* nocapture %ps, float %x1, float %y1, i8* %str, i32 %expos) #0 {
entry:
  %cmp = icmp eq i32 %expos, 1
  %conv.i.i = fpext float %x1 to double
  %conv1.i.i = fpext float %y1 to double
  %call.i.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %ps, i8* getelementptr inbounds ([9 x i8]* @.str21, i64 0, i64 0), double %conv.i.i, double %conv1.i.i) #4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call.i = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %ps, i8* getelementptr inbounds ([11 x i8]* @.str44, i64 0, i64 0), i8* %str) #4
  br label %return

if.end:                                           ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %ps, i8* getelementptr inbounds ([18 x i8]* @.str47, i64 0, i64 0), i8* %str) #4
  switch i32 %expos, label %sw.default [
    i32 2, label %sw.bb4
    i32 0, label %sw.bb2
  ]

sw.bb2:                                           ; preds = %if.end
  %0 = tail call i64 @fwrite(i8* getelementptr inbounds ([21 x i8]* @.str49, i64 0, i64 0), i64 20, i64 1, %struct._IO_FILE* %ps)
  br label %sw.epilog

sw.bb4:                                           ; preds = %if.end
  %1 = tail call i64 @fwrite(i8* getelementptr inbounds ([15 x i8]* @.str50, i64 0, i64 0), i64 14, i64 1, %struct._IO_FILE* %ps)
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([34 x i8]* @.str51, i64 0, i64 0), i32 %expos) #4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb2
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %ps, i8* getelementptr inbounds ([19 x i8]* @.str52, i64 0, i64 0), i8* %str) #4
  br label %return

return:                                           ; preds = %sw.epilog, %if.then
  ret void
}
