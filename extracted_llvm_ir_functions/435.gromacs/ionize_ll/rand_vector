define void @rand_vector(float* nocapture %v, i32* %seed) #4 {
  tail call void @llvm.dbg.value(metadata float* %v, i64 0, metadata !338, metadata !677), !dbg !1276
  tail call void @llvm.dbg.value(metadata i32* %seed, i64 0, metadata !339, metadata !677), !dbg !1277
  %1 = tail call float @rando(i32* %seed) #12, !dbg !1278
  %2 = fmul float %1, 1.800000e+02, !dbg !1279
  tail call void @llvm.dbg.value(metadata float %2, i64 0, metadata !340, metadata !677), !dbg !1280
  %3 = tail call float @rando(i32* %seed) #12, !dbg !1281
  %4 = fmul float %3, 3.600000e+02, !dbg !1282
  tail call void @llvm.dbg.value(metadata float %4, i64 0, metadata !341, metadata !677), !dbg !1283
  tail call void @llvm.dbg.value(metadata float %4, i64 0, metadata !572, metadata !677) #6, !dbg !1284
  tail call void @llvm.dbg.value(metadata float %2, i64 0, metadata !573, metadata !677) #6, !dbg !1286
  tail call void @llvm.dbg.value(metadata float* %v, i64 0, metadata !574, metadata !677) #6, !dbg !1287
  %5 = fpext float %4 to double, !dbg !1288
  %6 = tail call double @cos(double %5) #14, !dbg !1289
  %7 = fpext float %2 to double, !dbg !1290
  %8 = tail call double @sin(double %7) #14, !dbg !1291
  %9 = fmul double %6, %8, !dbg !1292
  %10 = fptrunc double %9 to float, !dbg !1289
  store float %10, float* %v, align 4, !dbg !1293, !tbaa !805
  %11 = tail call double @sin(double %5) #14, !dbg !1294
  %12 = fmul double %8, %11, !dbg !1295
  %13 = fptrunc double %12 to float, !dbg !1294
  %14 = getelementptr inbounds float* %v, i64 1, !dbg !1296
  store float %13, float* %14, align 4, !dbg !1297, !tbaa !805
  %15 = tail call double @cos(double %7) #14, !dbg !1298
  %16 = fptrunc double %15 to float, !dbg !1298
  %17 = getelementptr inbounds float* %v, i64 2, !dbg !1299
  store float %16, float* %17, align 4, !dbg !1300, !tbaa !805
  ret void, !dbg !1301
}
