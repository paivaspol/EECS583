define float @rand_theta_incoh(i32 %Eindex, i32* %seed) #4 {
  %y = alloca [2 x float], align 4
  tail call void @llvm.dbg.value(metadata i32 %Eindex, i64 0, metadata !326, metadata !677), !dbg !1189
  tail call void @llvm.dbg.value(metadata i32* %seed, i64 0, metadata !327, metadata !677), !dbg !1190
  tail call void @llvm.dbg.declare(metadata [2 x float]* %y, metadata !330, metadata !677), !dbg !1191
  tail call void @llvm.dbg.value(metadata float 0x3FC99999A0000000, i64 0, metadata !329, metadata !677), !dbg !1192
  %.b = load i1* @rand_theta_incoh.bFirst, align 1
  br i1 %.b, label %71, label %1, !dbg !1193

; <label>:1                                       ; preds = %0
  %2 = tail call i8* @save_calloc(i8* getelementptr inbounds ([5 x i8]* @.str11, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8]* @.str4, i64 0, i64 0), i32 361, i32 6, i32 8) #12, !dbg !1194
  store i8* %2, i8** bitcast (float*** @rand_theta_incoh.intp to i8**), align 8, !dbg !1194, !tbaa !882
  store i32 0, i32* @rand_theta_incoh.i, align 4, !dbg !1197, !tbaa !909
  br label %3, !dbg !1200

; <label>:3                                       ; preds = %1, %36
  %4 = tail call i8* @save_calloc(i8* getelementptr inbounds ([8 x i8]* @.str12, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8]* @.str4, i64 0, i64 0), i32 363, i32 451, i32 4) #12, !dbg !1201
  %5 = load i32* @rand_theta_incoh.i, align 4, !dbg !1201, !tbaa !909
  %6 = sext i32 %5 to i64, !dbg !1201
  %7 = load float*** @rand_theta_incoh.intp, align 8, !dbg !1201, !tbaa !882
  %8 = getelementptr inbounds float** %7, i64 %6, !dbg !1201
  %9 = bitcast float** %8 to i8**, !dbg !1201
  store i8* %4, i8** %9, align 8, !dbg !1201, !tbaa !882
  %10 = tail call float @ptheta_incoh(i32 %5, float 0.000000e+00) #15, !dbg !1203
  %11 = load i32* @rand_theta_incoh.cur, align 4, !dbg !1204, !tbaa !909
  %12 = sub nsw i32 1, %11, !dbg !1204
  %13 = sext i32 %12 to i64, !dbg !1205
  %14 = getelementptr inbounds [2 x float]* %y, i64 0, i64 %13, !dbg !1205
  store float %10, float* %14, align 4, !dbg !1206, !tbaa !805
  store i32 1, i32* @rand_theta_incoh.j, align 4, !dbg !1207, !tbaa !909
  %15 = load float*** @rand_theta_incoh.intp, align 8, !dbg !1210, !tbaa !882
  %16 = getelementptr inbounds float** %15, i64 %6, !dbg !1210
  %17 = load float** %16, align 8, !dbg !1210, !tbaa !882
  %.pre = load float* %17, align 4, !dbg !1210, !tbaa !805
  br label %18, !dbg !1212

; <label>:18                                      ; preds = %3, %18
  %19 = phi float [ %.pre, %3 ], [ %32, %18 ], !dbg !1213
  %indvars.iv14 = phi i64 [ 1, %3 ], [ %indvars.iv.next15, %18 ]
  %20 = phi i32 [ %11, %3 ], [ %26, %18 ], !dbg !1213
  %storemerge49 = phi i32 [ 1, %3 ], [ %35, %18 ]
  %21 = sitofp i32 %storemerge49 to float, !dbg !1213
  %22 = fmul float %21, 0x3FC99999A0000000, !dbg !1214
  %23 = tail call float @ptheta_incoh(i32 %5, float %22) #15, !dbg !1215
  %24 = sext i32 %20 to i64, !dbg !1216
  %25 = getelementptr inbounds [2 x float]* %y, i64 0, i64 %24, !dbg !1216
  store float %23, float* %25, align 4, !dbg !1217, !tbaa !805
  %26 = sub nsw i32 1, %20, !dbg !1218
  %27 = sext i32 %26 to i64, !dbg !1219
  %28 = getelementptr inbounds [2 x float]* %y, i64 0, i64 %27, !dbg !1219
  %29 = load float* %28, align 4, !dbg !1219, !tbaa !805
  %30 = fadd float %23, %29, !dbg !1220
  %31 = fmul float %30, 0x3FC99999A0000000, !dbg !1221
  %32 = fadd float %19, %31, !dbg !1222
  %33 = getelementptr inbounds float* %17, i64 %indvars.iv14, !dbg !1223
  store float %32, float* %33, align 4, !dbg !1224, !tbaa !805
  %indvars.iv.next15 = add nsw i64 %indvars.iv14, 1, !dbg !1212
  %34 = icmp slt i64 %indvars.iv.next15, 451, !dbg !1225
  %35 = trunc i64 %indvars.iv.next15 to i32, !dbg !1212
  br i1 %34, label %18, label %36, !dbg !1212

; <label>:36                                      ; preds = %18
  store i32 %26, i32* @rand_theta_incoh.cur, align 4, !dbg !1226, !tbaa !909
  store i32 451, i32* @rand_theta_incoh.j, align 4, !dbg !1207, !tbaa !909
  %37 = add nsw i32 %5, 1, !dbg !1197
  store i32 %37, i32* @rand_theta_incoh.i, align 4, !dbg !1197, !tbaa !909
  %38 = icmp ult i32 %37, 6, !dbg !1227
  br i1 %38, label %3, label %39, !dbg !1200

; <label>:39                                      ; preds = %36
  %40 = load %struct.__sFILE** @debug, align 8, !dbg !1228, !tbaa !882
  %41 = icmp eq %struct.__sFILE* %40, null, !dbg !1228
  br i1 %41, label %.loopexit, label %42, !dbg !1230

; <label>:42                                      ; preds = %39
  %43 = tail call i64 @fwrite(i8* getelementptr inbounds ([55 x i8]* @.str13, i64 0, i64 0), i64 54, i64 1, %struct.__sFILE* %40), !dbg !1231
  store i32 0, i32* @rand_theta_incoh.j, align 4, !dbg !1233, !tbaa !909
  br label %44, !dbg !1236

; <label>:44                                      ; preds = %42, %67
  %storemerge28 = phi i32 [ 0, %42 ], [ %69, %67 ]
  %45 = load %struct.__sFILE** @debug, align 8, !dbg !1237, !tbaa !882
  %46 = sitofp i32 %storemerge28 to float, !dbg !1239
  %47 = fmul float %46, 0x3FC99999A0000000, !dbg !1240
  %48 = fpext float %47 to double, !dbg !1241
  %49 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %45, i8* getelementptr inbounds ([5 x i8]* @.str14, i64 0, i64 0), double %48) #12, !dbg !1242
  store i32 0, i32* @rand_theta_incoh.i, align 4, !dbg !1243, !tbaa !909
  %50 = load %struct.__sFILE** @debug, align 8, !dbg !1246, !tbaa !882
  br label %51, !dbg !1247

; <label>:51                                      ; preds = %44, %51
  %52 = phi %struct.__sFILE* [ %50, %44 ], [ %66, %51 ]
  %storemerge37 = phi i32 [ 0, %44 ], [ %64, %51 ]
  %53 = sext i32 %storemerge37 to i64, !dbg !1248
  %54 = load i32* @rand_theta_incoh.j, align 4, !dbg !1249, !tbaa !909
  %55 = sext i32 %54 to i64, !dbg !1250
  %56 = load float*** @rand_theta_incoh.intp, align 8, !dbg !1250, !tbaa !882
  %57 = getelementptr inbounds float** %56, i64 %53, !dbg !1250
  %58 = load float** %57, align 8, !dbg !1250, !tbaa !882
  %59 = getelementptr inbounds float* %58, i64 %55, !dbg !1250
  %60 = load float* %59, align 4, !dbg !1250, !tbaa !805
  %61 = fpext float %60 to double, !dbg !1250
  %62 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %52, i8* getelementptr inbounds ([7 x i8]* @.str15, i64 0, i64 0), double %61) #12, !dbg !1251
  %63 = load i32* @rand_theta_incoh.i, align 4, !dbg !1243, !tbaa !909
  %64 = add nsw i32 %63, 1, !dbg !1243
  store i32 %64, i32* @rand_theta_incoh.i, align 4, !dbg !1243, !tbaa !909
  %65 = icmp ult i32 %64, 6, !dbg !1252
  %66 = load %struct.__sFILE** @debug, align 8, !dbg !1246, !tbaa !882
  br i1 %65, label %51, label %67, !dbg !1247

; <label>:67                                      ; preds = %51
  %fputc = tail call i32 @fputc(i32 10, %struct.__sFILE* %66), !dbg !1253
  %68 = load i32* @rand_theta_incoh.j, align 4, !dbg !1233, !tbaa !909
  %69 = add nsw i32 %68, 1, !dbg !1233
  store i32 %69, i32* @rand_theta_incoh.j, align 4, !dbg !1233, !tbaa !909
  %70 = icmp slt i32 %69, 450, !dbg !1254
  br i1 %70, label %44, label %.loopexit, !dbg !1236

.loopexit:                                        ; preds = %67, %39
  store i1 true, i1* @rand_theta_incoh.bFirst, align 1
  br label %71, !dbg !1255

; <label>:71                                      ; preds = %0, %.loopexit
  %72 = tail call float @rando(i32* %seed) #12, !dbg !1256
  tail call void @llvm.dbg.value(metadata float %72, i64 0, metadata !328, metadata !677), !dbg !1257
  store i32 0, i32* @rand_theta_incoh.j, align 4, !dbg !1258, !tbaa !909
  %73 = sext i32 %Eindex to i64, !dbg !1261
  %74 = load float*** @rand_theta_incoh.intp, align 8, !dbg !1261, !tbaa !882
  %75 = getelementptr inbounds float** %74, i64 %73, !dbg !1261
  %76 = load float** %75, align 8, !dbg !1261, !tbaa !882
  br label %80, !dbg !1262

; <label>:77                                      ; preds = %80
  %78 = trunc i64 %indvars.iv.next to i32, !dbg !1258
  store i32 %78, i32* @rand_theta_incoh.j, align 4, !dbg !1258, !tbaa !909
  %79 = icmp slt i64 %indvars.iv.next, 450, !dbg !1263
  br i1 %79, label %80, label %.critedge, !dbg !1262

; <label>:80                                      ; preds = %71, %77
  %81 = phi i32 [ 0, %71 ], [ %78, %77 ]
  %indvars.iv = phi i64 [ 0, %71 ], [ %indvars.iv.next, %77 ]
  %82 = getelementptr inbounds float* %76, i64 %indvars.iv, !dbg !1261
  %83 = load float* %82, align 4, !dbg !1261, !tbaa !805
  %84 = fcmp ogt float %72, %83, !dbg !1264
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1262
  br i1 %84, label %77, label %.critedge, !dbg !1265

.critedge:                                        ; preds = %77, %80
  %85 = phi i32 [ %78, %77 ], [ %81, %80 ]
  %86 = add nsw i32 %85, -1, !dbg !1266
  %87 = sitofp i32 %86 to float, !dbg !1267
  %88 = sext i32 %86 to i64, !dbg !1268
  %89 = getelementptr inbounds float* %76, i64 %88, !dbg !1268
  %90 = load float* %89, align 4, !dbg !1268, !tbaa !805
  %91 = fsub float %72, %90, !dbg !1269
  %92 = sext i32 %85 to i64, !dbg !1270
  %93 = getelementptr inbounds float* %76, i64 %92, !dbg !1270
  %94 = load float* %93, align 4, !dbg !1270, !tbaa !805
  %95 = fsub float %94, %90, !dbg !1271
  %96 = fdiv float %91, %95, !dbg !1272
  %97 = fadd float %87, %96, !dbg !1273
  %98 = fmul float %97, 0x3FC99999A0000000, !dbg !1274
  ret float %98, !dbg !1275
}
