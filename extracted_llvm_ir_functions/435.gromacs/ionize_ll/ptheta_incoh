define float @ptheta_incoh(i32 %Eindex, float %theta) #9 {
  %1 = fpext float %theta to double
  %2 = sext i32 %Eindex to i64
  %3 = getelementptr inbounds [6 x [8 x double]]* @ptheta_incoh.ppp, i64 0, i64 %2, i64 7
  %4 = load double* %3, align 8, !tbaa !16
  %5 = fsub double %1, %4
  %6 = getelementptr inbounds [6 x [8 x double]]* @ptheta_incoh.ppp, i64 0, i64 %2, i64 1
  %7 = load double* %6, align 8, !tbaa !16
  %8 = fdiv double %5, %7
  %9 = fptrunc double %8 to float
  %10 = fmul float %9, %9
  %11 = fpext float %10 to double
  %12 = fmul double %11, -5.000000e-01
  %13 = fcmp olt double %12, -7.000000e+01
  br i1 %13, label %myexp.exit2, label %14

; <label>:14                                      ; preds = %0
  %15 = tail call double @exp(double %12) #14
  br label %myexp.exit2

myexp.exit2:                                      ; preds = %0, %14
  %.0.i1 = phi double [ %15, %14 ], [ 0.000000e+00, %0 ]
  %16 = fadd float %theta, -1.800000e+02
  %17 = fpext float %16 to double
  %18 = fadd double %17, %4
  %19 = fdiv double %18, %7
  %20 = fptrunc double %19 to float
  %21 = fmul float %20, %20
  %22 = fpext float %21 to double
  %23 = fmul double %22, -5.000000e-01
  %24 = fcmp olt double %23, -7.000000e+01
  br i1 %24, label %myexp.exit6, label %25

; <label>:25                                      ; preds = %myexp.exit2
  %26 = tail call double @exp(double %23) #14
  br label %myexp.exit6

myexp.exit6:                                      ; preds = %myexp.exit2, %25
  %.0.i5 = phi double [ %26, %25 ], [ 0.000000e+00, %myexp.exit2 ]
  %27 = fadd float %theta, -9.000000e+01
  %28 = fpext float %27 to double
  %29 = getelementptr inbounds [6 x [8 x double]]* @ptheta_incoh.ppp, i64 0, i64 %2, i64 3
  %30 = load double* %29, align 8, !tbaa !16
  %31 = fdiv double %28, %30
  %32 = fptrunc double %31 to float
  %33 = fmul float %32, %32
  %34 = fpext float %33 to double
  %35 = fmul double %34, -5.000000e-01
  %36 = fcmp olt double %35, -7.000000e+01
  br i1 %36, label %myexp.exit8, label %37

; <label>:37                                      ; preds = %myexp.exit6
  %38 = tail call double @exp(double %35) #14
  br label %myexp.exit8

myexp.exit8:                                      ; preds = %myexp.exit6, %37
  %.0.i7 = phi double [ %38, %37 ], [ 0.000000e+00, %myexp.exit6 ]
  %39 = getelementptr inbounds [6 x [8 x double]]* @ptheta_incoh.ppp, i64 0, i64 %2, i64 6
  %40 = load double* %39, align 16, !tbaa !16
  %41 = fsub double %1, %40
  %42 = getelementptr inbounds [6 x [8 x double]]* @ptheta_incoh.ppp, i64 0, i64 %2, i64 5
  %43 = load double* %42, align 8, !tbaa !16
  %44 = fdiv double %41, %43
  %45 = fptrunc double %44 to float
  %46 = fmul float %45, %45
  %47 = fpext float %46 to double
  %48 = fmul double %47, -5.000000e-01
  %49 = fcmp olt double %48, -7.000000e+01
  br i1 %49, label %myexp.exit4, label %50

; <label>:50                                      ; preds = %myexp.exit8
  %51 = tail call double @exp(double %48) #14
  br label %myexp.exit4

myexp.exit4:                                      ; preds = %myexp.exit8, %50
  %.0.i3 = phi double [ %51, %50 ], [ 0.000000e+00, %myexp.exit8 ]
  %52 = fadd double %17, %40
  %53 = fdiv double %52, %43
  %54 = fptrunc double %53 to float
  %55 = fmul float %54, %54
  %56 = fpext float %55 to double
  %57 = fmul double %56, -5.000000e-01
  %58 = fcmp olt double %57, -7.000000e+01
  br i1 %58, label %myexp.exit, label %59

; <label>:59                                      ; preds = %myexp.exit4
  %60 = tail call double @exp(double %57) #14
  br label %myexp.exit

myexp.exit:                                       ; preds = %myexp.exit4, %59
  %.0.i = phi double [ %60, %59 ], [ 0.000000e+00, %myexp.exit4 ]
  %61 = getelementptr inbounds [6 x [8 x double]]* @ptheta_incoh.ppp, i64 0, i64 %2, i64 0
  %62 = load double* %61, align 16, !tbaa !16
  %63 = fadd double %.0.i1, %.0.i5
  %64 = fmul double %63, %62
  %65 = getelementptr inbounds [6 x [8 x double]]* @ptheta_incoh.ppp, i64 0, i64 %2, i64 2
  %66 = load double* %65, align 16, !tbaa !16
  %67 = fmul double %.0.i7, %66
  %68 = fadd double %64, %67
  %69 = getelementptr inbounds [6 x [8 x double]]* @ptheta_incoh.ppp, i64 0, i64 %2, i64 4
  %70 = load double* %69, align 16, !tbaa !16
  %71 = fadd double %.0.i3, %.0.i
  %72 = fmul double %71, %70
  %73 = fadd double %68, %72
  %74 = fptrunc double %73 to float
  ret float %74
}
