define i32 @khole_decay(%struct.__sFILE* nocapture readnone %fp, %struct.t_cross_atom* nocapture %ca, [3 x float]* nocapture readnone %x, [3 x float]* nocapture %v, i32 %ion, i32* %seed, float %dt) #4 {
  %dv = alloca [3 x float], align 4
  %1 = getelementptr inbounds %struct.t_cross_atom* %ca, i64 0, i32 6
  %2 = load float* %1, align 4, !tbaa !36
  %3 = fcmp olt float %2, 0.000000e+00
  %.phi.trans.insert5 = getelementptr inbounds %struct.t_cross_atom* %ca, i64 0, i32 0
  %.pre6 = load i32* %.phi.trans.insert5, align 4, !tbaa !18
  br i1 %3, label %._crit_edge4, label %4

; <label>:4                                       ; preds = %0
  %5 = sext i32 %.pre6 to i64
  %6 = getelementptr inbounds [27 x %struct.t_recoil]* @recoil, i64 0, i64 %5, i32 3
  %7 = load float* %6, align 4, !tbaa !37
  %fabsf = tail call float @fabsf(float %7) #10
  %8 = fpext float %fabsf to double
  %9 = fcmp olt double %8, 1.200000e-38
  br i1 %9, label %._crit_edge4, label %16

._crit_edge4:                                     ; preds = %0, %4
  %10 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !24
  %11 = getelementptr inbounds %struct.t_cross_atom* %ca, i64 0, i32 1
  %12 = load i32* %11, align 4, !tbaa !20
  %13 = getelementptr inbounds %struct.t_cross_atom* %ca, i64 0, i32 2
  %14 = load i32* %13, align 4, !tbaa !21
  %15 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %10, i8* getelementptr inbounds ([51 x i8]* @.str, i64 0, i64 0), i32 451, i32 %ion, i32 %.pre6, i32 %12, i32 %14) #12
  tail call void @exit(i32 1) #16
  unreachable

; <label>:16                                      ; preds = %4
  %17 = tail call float @rando(i32* %seed) #12
  %18 = load i32* %.phi.trans.insert5, align 4, !tbaa !18
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [27 x %struct.t_recoil]* @recoil, i64 0, i64 %19, i32 3
  %21 = load float* %20, align 4, !tbaa !37
  %22 = fdiv float %dt, %21
  %23 = fcmp olt float %17, %22
  br i1 %23, label %24, label %68

; <label>:24                                      ; preds = %16
  %25 = load %struct.__sFILE** @debug, align 8, !tbaa !24
  %26 = icmp eq %struct.__sFILE* %25, null
  br i1 %26, label %29, label %27

; <label>:27                                      ; preds = %24
  %28 = tail call i64 @fwrite(i8* getelementptr inbounds ([32 x i8]* @.str17, i64 0, i64 0), i64 31, i64 1, %struct.__sFILE* %25)
  br label %29

; <label>:29                                      ; preds = %24, %27
  %30 = getelementptr inbounds %struct.t_cross_atom* %ca, i64 0, i32 1
  %31 = load i32* %30, align 4, !tbaa !20
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %30, align 4, !tbaa !20
  %33 = getelementptr inbounds %struct.t_cross_atom* %ca, i64 0, i32 2
  %34 = load i32* %33, align 4, !tbaa !21
  %35 = add nsw i32 %34, -1
  store i32 %35, i32* %33, align 4, !tbaa !21
  %36 = getelementptr inbounds [3 x float]* %dv, i64 0, i64 0
  call void @rand_vector(float* %36, i32* %seed) #15
  %37 = load float* %1, align 4, !tbaa !36
  %38 = load %struct.__sFILE** @debug, align 8, !tbaa !24
  %39 = icmp eq %struct.__sFILE* %38, null
  br i1 %39, label %._crit_edge, label %40

._crit_edge:                                      ; preds = %29
  %.pre = load float* %36, align 4, !tbaa !14
  %.phi.trans.insert = getelementptr inbounds [3 x float]* %dv, i64 0, i64 1
  %.pre1 = load float* %.phi.trans.insert, align 4, !tbaa !14
  %.phi.trans.insert2 = getelementptr inbounds [3 x float]* %dv, i64 0, i64 2
  %.pre3 = load float* %.phi.trans.insert2, align 4, !tbaa !14
  br label %51

; <label>:40                                      ; preds = %29
  %41 = fpext float %37 to double
  %42 = load float* %36, align 4, !tbaa !14
  %43 = fpext float %42 to double
  %44 = getelementptr inbounds [3 x float]* %dv, i64 0, i64 1
  %45 = load float* %44, align 4, !tbaa !14
  %46 = fpext float %45 to double
  %47 = getelementptr inbounds [3 x float]* %dv, i64 0, i64 2
  %48 = load float* %47, align 4, !tbaa !14
  %49 = fpext float %48 to double
  %50 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %38, i8* getelementptr inbounds ([48 x i8]* @.str18, i64 0, i64 0), double %41, double %43, double %46, double %49) #12
  br label %51

; <label>:51                                      ; preds = %._crit_edge, %40
  %.pre-phi8 = phi float* [ %.phi.trans.insert2, %._crit_edge ], [ %47, %40 ]
  %.pre-phi7 = phi float* [ %.phi.trans.insert, %._crit_edge ], [ %44, %40 ]
  %52 = phi float [ %.pre3, %._crit_edge ], [ %48, %40 ]
  %53 = phi float [ %.pre1, %._crit_edge ], [ %45, %40 ]
  %54 = phi float [ %.pre, %._crit_edge ], [ %42, %40 ]
  %55 = fmul float %37, %54
  store float %55, float* %36, align 4, !tbaa !14
  %56 = fmul float %37, %53
  store float %56, float* %.pre-phi7, align 4, !tbaa !14
  %57 = fmul float %37, %52
  store float %57, float* %.pre-phi8, align 4, !tbaa !14
  %58 = sext i32 %ion to i64
  %59 = getelementptr inbounds [3 x float]* %v, i64 %58, i64 0
  %60 = load float* %59, align 4, !tbaa !14
  %61 = fadd float %60, %55
  %62 = getelementptr inbounds [3 x float]* %v, i64 %58, i64 1
  %63 = load float* %62, align 4, !tbaa !14
  %64 = fadd float %63, %56
  %65 = getelementptr inbounds [3 x float]* %v, i64 %58, i64 2
  %66 = load float* %65, align 4, !tbaa !14
  %67 = fadd float %57, %66
  store float %61, float* %59, align 4, !tbaa !14
  store float %64, float* %62, align 4, !tbaa !14
  store float %67, float* %65, align 4, !tbaa !14
  br label %68

; <label>:68                                      ; preds = %16, %51
  %.0 = phi i32 [ 1, %51 ], [ 0, %16 ]
  ret i32 %.0
}
