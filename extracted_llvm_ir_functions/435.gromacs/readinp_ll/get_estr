define i8* @get_estr(i32* nocapture %ninp, %struct.t_inpfile** %inp, i8* %name, i8* %def) #0 {
entry:
  %buf = alloca [32 x i8], align 16
  %call = call fastcc i32 @get_einp(i32* %ninp, %struct.t_inpfile** %inp, i8* %name) #9
  %cmp = icmp eq i32 %call, -1
  br i1 %cmp, label %if.then, label %if.else9

if.then:                                          ; preds = %entry
  %tobool = icmp eq i8* %def, null
  br i1 %tobool, label %if.else, label %if.then1

if.then1:                                         ; preds = %if.then
  %arraydecay = getelementptr inbounds [32 x i8]* %buf, i64 0, i64 0
  %strlen = call i64 @strlen(i8* %def)
  %leninc = add i64 %strlen, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %def, i64 %leninc, i32 1, i1 false)
  %call4 = call i8* @gmx_strdup(i8* %arraydecay) #7
  %0 = load i32* %ninp, align 4, !tbaa !3
  %sub = add nsw i32 %0, -1
  %idxprom = sext i32 %sub to i64
  %1 = load %struct.t_inpfile** %inp, align 8, !tbaa !0
  %value = getelementptr inbounds %struct.t_inpfile* %1, i64 %idxprom, i32 3
  store i8* %call4, i8** %value, align 8, !tbaa !0
  br label %return

if.else:                                          ; preds = %if.then
  %2 = load i32* %ninp, align 4, !tbaa !3
  %sub5 = add nsw i32 %2, -1
  %idxprom6 = sext i32 %sub5 to i64
  %3 = load %struct.t_inpfile** %inp, align 8, !tbaa !0
  %value8 = getelementptr inbounds %struct.t_inpfile* %3, i64 %idxprom6, i32 3
  store i8* null, i8** %value8, align 8, !tbaa !0
  br label %return

if.else9:                                         ; preds = %entry
  %idxprom10 = sext i32 %call to i64
  %4 = load %struct.t_inpfile** %inp, align 8, !tbaa !0
  %value12 = getelementptr inbounds %struct.t_inpfile* %4, i64 %idxprom10, i32 3
  %5 = load i8** %value12, align 8, !tbaa !0
  br label %return

return:                                           ; preds = %if.then1, %if.else, %if.else9
  %retval.0 = phi i8* [ %5, %if.else9 ], [ null, %if.else ], [ %def, %if.then1 ]
  ret i8* %retval.0
}
