define internal fastcc i32 @get_einp(i32* nocapture %ninp, %struct.t_inpfile** %inp, i8* %name) #1 {
  %1 = icmp eq %struct.t_inpfile** %inp, null
  br i1 %1, label %46, label %.preheader

.preheader:                                       ; preds = %0
  %2 = load i32* %ninp, align 4, !tbaa !6
  %3 = icmp sgt i32 %2, 0
  br i1 %3, label %.lr.ph, label %15

.lr.ph:                                           ; preds = %.preheader, %9
  %indvars.iv = phi i64 [ %indvars.iv.next, %9 ], [ 0, %.preheader ]
  %4 = load %struct.t_inpfile** %inp, align 8, !tbaa !2
  %5 = getelementptr inbounds %struct.t_inpfile* %4, i64 %indvars.iv, i32 2
  %6 = load i8** %5, align 8, !tbaa !12
  %7 = tail call i32 @strcasecmp_min(i8* %name, i8* %6) #7
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %._crit_edge, label %9

; <label>:9                                       ; preds = %.lr.ph
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %10 = load i32* %ninp, align 4, !tbaa !6
  %11 = sext i32 %10 to i64
  %12 = icmp slt i64 %indvars.iv.next, %11
  br i1 %12, label %.lr.ph, label %._crit_edge2

._crit_edge:                                      ; preds = %.lr.ph
  %13 = trunc i64 %indvars.iv to i32
  %.pre = load i32* %ninp, align 4, !tbaa !6
  br label %15

._crit_edge2:                                     ; preds = %9
  %14 = trunc i64 %indvars.iv.next to i32
  br label %15

; <label>:15                                      ; preds = %._crit_edge2, %._crit_edge, %.preheader
  %16 = phi i32 [ %.pre, %._crit_edge ], [ %10, %._crit_edge2 ], [ %2, %.preheader ]
  %i.0.lcssa = phi i32 [ %13, %._crit_edge ], [ %14, %._crit_edge2 ], [ 0, %.preheader ]
  %17 = icmp eq i32 %i.0.lcssa, %16
  br i1 %17, label %18, label %._crit_edge5

._crit_edge5:                                     ; preds = %15
  %.pre6 = load %struct.t_inpfile** %inp, align 8, !tbaa !2
  %.pre7 = sext i32 %i.0.lcssa to i64
  br label %30

; <label>:18                                      ; preds = %15
  %19 = add nsw i32 %16, 1
  store i32 %19, i32* %ninp, align 4, !tbaa !6
  %20 = bitcast %struct.t_inpfile** %inp to i8**
  %21 = load i8** %20, align 8, !tbaa !2
  %22 = mul i32 %19, 24
  %23 = tail call i8* @save_realloc(i8* getelementptr inbounds ([5 x i8]* @.str21, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8]* @.str6, i64 0, i64 0), i32 165, i8* %21, i32 %22) #7
  store i8* %23, i8** %20, align 8, !tbaa !2
  %24 = tail call i8* @strdup(i8* %name) #7
  %25 = sext i32 %16 to i64
  %26 = load %struct.t_inpfile** %inp, align 8, !tbaa !2
  %27 = getelementptr inbounds %struct.t_inpfile* %26, i64 %25, i32 2
  store i8* %24, i8** %27, align 8, !tbaa !12
  %28 = load %struct.t_inpfile** %inp, align 8, !tbaa !2
  %29 = getelementptr inbounds %struct.t_inpfile* %28, i64 %25, i32 1
  store i32 1, i32* %29, align 4, !tbaa !11
  br label %30

; <label>:30                                      ; preds = %._crit_edge5, %18
  %.pre-phi = phi i64 [ %.pre7, %._crit_edge5 ], [ %25, %18 ]
  %31 = phi %struct.t_inpfile* [ %.pre6, %._crit_edge5 ], [ %28, %18 ]
  %32 = load i32* @inp_count, align 4, !tbaa !6
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* @inp_count, align 4, !tbaa !6
  %34 = getelementptr inbounds %struct.t_inpfile* %31, i64 %.pre-phi, i32 0
  store i32 %32, i32* %34, align 4, !tbaa !9
  %35 = getelementptr inbounds %struct.t_inpfile* %31, i64 %.pre-phi, i32 1
  store i32 1, i32* %35, align 4, !tbaa !11
  %36 = load %struct.__sFILE** @debug, align 8, !tbaa !2
  %37 = icmp eq %struct.__sFILE* %36, null
  br i1 %37, label %42, label %38

; <label>:38                                      ; preds = %30
  %39 = getelementptr inbounds %struct.t_inpfile* %31, i64 %.pre-phi, i32 2
  %40 = load i8** %39, align 8, !tbaa !12
  %41 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %36, i8* getelementptr inbounds ([13 x i8]* @.str22, i64 0, i64 0), i32 %32, i8* %40) #7
  br label %42

; <label>:42                                      ; preds = %30, %38
  %43 = load i32* %ninp, align 4, !tbaa !6
  %44 = add nsw i32 %43, -1
  %45 = icmp eq i32 %i.0.lcssa, %44
  %.i.0 = select i1 %45, i32 -1, i32 %i.0.lcssa
  br label %46

; <label>:46                                      ; preds = %42, %0
  %.0 = phi i32 [ -1, %0 ], [ %.i.0, %42 ]
  ret i32 %.0
}
