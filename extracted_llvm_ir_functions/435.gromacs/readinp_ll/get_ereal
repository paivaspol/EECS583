define float @get_ereal(i32* nocapture %ninp, %struct.t_inpfile** %inp, i8* %name, float %def) #0 {
entry:
  %buf = alloca [32 x i8], align 16
  %call = call fastcc i32 @get_einp(i32* %ninp, %struct.t_inpfile** %inp, i8* %name) #9
  %cmp = icmp eq i32 %call, -1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [32 x i8]* %buf, i64 0, i64 0
  %conv = fpext float %def to double
  %call1 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([3 x i8]* @.str13, i64 0, i64 0), double %conv) #7
  %call3 = call i8* @gmx_strdup(i8* %arraydecay) #7
  %0 = load i32* %ninp, align 4, !tbaa !3
  %sub = add nsw i32 %0, -1
  %idxprom = sext i32 %sub to i64
  %1 = load %struct.t_inpfile** %inp, align 8, !tbaa !0
  %value = getelementptr inbounds %struct.t_inpfile* %1, i64 %idxprom, i32 3
  store i8* %call3, i8** %value, align 8, !tbaa !0
  br label %return

if.else:                                          ; preds = %entry
  %idxprom4 = sext i32 %call to i64
  %2 = load %struct.t_inpfile** %inp, align 8, !tbaa !0
  %value6 = getelementptr inbounds %struct.t_inpfile* %2, i64 %idxprom4, i32 3
  %3 = load i8** %value6, align 8, !tbaa !0
  %call7 = call double @atof(i8* %3) #8
  %conv8 = fptrunc double %call7 to float
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi float [ %def, %if.then ], [ %conv8, %if.else ]
  ret float %retval.0
}
