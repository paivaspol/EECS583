define void @write_inpfile(i8* %fn, i32 %ninp, %struct.t_inpfile* %inp) #1 {
  %1 = icmp sgt i32 %ninp, 0
  br i1 %1, label %.lr.ph6.i, label %sort_inp.exit

.lr.ph6.i:                                        ; preds = %0
  %2 = add i32 %ninp, -1
  br label %3

; <label>:3                                       ; preds = %3, %.lr.ph6.i
  %indvars.iv7.i = phi i64 [ 0, %.lr.ph6.i ], [ %indvars.iv.next8.i, %3 ]
  %mm.04.i = phi i32 [ -1, %.lr.ph6.i ], [ %mm.0..i, %3 ]
  %4 = getelementptr inbounds %struct.t_inpfile* %inp, i64 %indvars.iv7.i, i32 0
  %5 = load i32* %4, align 4, !tbaa !9
  %6 = icmp sgt i32 %mm.04.i, %5
  %mm.0..i = select i1 %6, i32 %mm.04.i, i32 %5
  %indvars.iv.next8.i = add nuw nsw i64 %indvars.iv7.i, 1
  %lftr.wideiv4 = trunc i64 %indvars.iv7.i to i32
  %exitcond5 = icmp eq i32 %lftr.wideiv4, %2
  br i1 %exitcond5, label %.lr.ph.i, label %3

.lr.ph.i:                                         ; preds = %3, %12
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %12 ], [ 0, %3 ]
  %mm.12.i = phi i32 [ %mm.2.i, %12 ], [ %mm.0..i, %3 ]
  %7 = getelementptr inbounds %struct.t_inpfile* %inp, i64 %indvars.iv.i, i32 0
  %8 = load i32* %7, align 4, !tbaa !9
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

; <label>:10                                      ; preds = %.lr.ph.i
  %11 = add nsw i32 %mm.12.i, 1
  store i32 %mm.12.i, i32* %7, align 4, !tbaa !9
  br label %12

; <label>:12                                      ; preds = %10, %.lr.ph.i
  %mm.2.i = phi i32 [ %11, %10 ], [ %mm.12.i, %.lr.ph.i ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %lftr.wideiv2 = trunc i64 %indvars.iv.i to i32
  %exitcond3 = icmp eq i32 %lftr.wideiv2, %2
  br i1 %exitcond3, label %sort_inp.exit, label %.lr.ph.i

sort_inp.exit:                                    ; preds = %12, %0
  %13 = bitcast %struct.t_inpfile* %inp to i8*
  %14 = sext i32 %ninp to i64
  tail call void @qsort(i8* %13, i64 %14, i64 24, i32 (i8*, i8*)* @inp_comp) #7
  %15 = tail call %struct.__sFILE* @ffopen(i8* %fn, i8* getelementptr inbounds ([2 x i8]* @.str8, i64 0, i64 0)) #7
  tail call void @nice_header(%struct.__sFILE* %15, i8* %fn) #7
  br i1 %1, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %sort_inp.exit
  %16 = add i32 %ninp, -1
  br label %17

; <label>:17                                      ; preds = %30, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %30 ]
  %18 = getelementptr inbounds %struct.t_inpfile* %inp, i64 %indvars.iv, i32 1
  %19 = load i32* %18, align 4, !tbaa !11
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %struct.t_inpfile* %inp, i64 %indvars.iv, i32 2
  %22 = load i8** %21, align 8, !tbaa !12
  br i1 %20, label %28, label %23

; <label>:23                                      ; preds = %17
  %24 = getelementptr inbounds %struct.t_inpfile* %inp, i64 %indvars.iv, i32 3
  %25 = load i8** %24, align 8, !tbaa !13
  %26 = icmp eq i8* %25, null
  %. = select i1 %26, i8* getelementptr inbounds ([1 x i8]* @.str10, i64 0, i64 0), i8* %25
  %27 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %15, i8* getelementptr inbounds ([12 x i8]* @.str9, i64 0, i64 0), i8* %22, i8* %.) #7
  br label %30

; <label>:28                                      ; preds = %17
  %29 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([1024 x i8]* @warn_buf, i64 0, i64 0), i32 0, i64 1024, i8* getelementptr inbounds ([40 x i8]* @.str11, i64 0, i64 0), i8* %22) #7
  tail call void @warning(i8* null) #7
  br label %30

; <label>:30                                      ; preds = %23, %28
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %16
  br i1 %exitcond, label %._crit_edge, label %17

._crit_edge:                                      ; preds = %30, %sort_inp.exit
  tail call void @ffclose(%struct.__sFILE* %15) #7
  ret void
}
