define void @write_inpfile(i8* %fn, i32 %ninp, %struct.t_inpfile* %inp) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %fn}, i64 0, metadata !98), !dbg !248
  tail call void @llvm.dbg.value(metadata !{i32 %ninp}, i64 0, metadata !99), !dbg !248
  tail call void @llvm.dbg.value(metadata !{%struct.t_inpfile* %inp}, i64 0, metadata !100), !dbg !248
  tail call void @llvm.dbg.value(metadata !{i32 %ninp}, i64 0, metadata !249) #2, !dbg !251
  tail call void @llvm.dbg.value(metadata !{%struct.t_inpfile* %inp}, i64 0, metadata !252) #2, !dbg !251
  tail call void @llvm.dbg.value(metadata !253, i64 0, metadata !254) #2, !dbg !255
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !256) #2, !dbg !257
  %cmp37.i = icmp sgt i32 %ninp, 0, !dbg !257
  br i1 %cmp37.i, label %for.body.i, label %sort_inp.exit, !dbg !257

for.body.i:                                       ; preds = %entry, %for.body.i
  %indvars.iv40.i = phi i64 [ %indvars.iv.next41.i, %for.body.i ], [ 0, %entry ]
  %mm.039.i = phi i32 [ %mm.0..i, %for.body.i ], [ -1, %entry ]
  %count.i = getelementptr inbounds %struct.t_inpfile* %inp, i64 %indvars.iv40.i, i32 0, !dbg !259
  %0 = load i32* %count.i, align 4, !dbg !259, !tbaa !198
  %cmp1.i = icmp sgt i32 %mm.039.i, %0, !dbg !259
  %mm.0..i = select i1 %cmp1.i, i32 %mm.039.i, i32 %0, !dbg !259
  tail call void @llvm.dbg.value(metadata !{i32 %mm.0..i}, i64 0, metadata !254) #2, !dbg !259
  %indvars.iv.next41.i = add i64 %indvars.iv40.i, 1, !dbg !257
  %lftr.wideiv33 = trunc i64 %indvars.iv.next41.i to i32, !dbg !257
  %exitcond34 = icmp eq i32 %lftr.wideiv33, %ninp, !dbg !257
  br i1 %exitcond34, label %for.body7.i, label %for.body.i, !dbg !257

for.body7.i:                                      ; preds = %for.body.i, %for.inc16.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.inc16.i ], [ 0, %for.body.i ]
  %mm.136.i = phi i32 [ %mm.2.i, %for.inc16.i ], [ %mm.0..i, %for.body.i ]
  %count10.i = getelementptr inbounds %struct.t_inpfile* %inp, i64 %indvars.iv.i, i32 0, !dbg !260
  %1 = load i32* %count10.i, align 4, !dbg !260, !tbaa !198
  %cmp11.i = icmp eq i32 %1, 0, !dbg !260
  br i1 %cmp11.i, label %if.then.i, label %for.inc16.i, !dbg !260

if.then.i:                                        ; preds = %for.body7.i
  %inc12.i = add nsw i32 %mm.136.i, 1, !dbg !263
  tail call void @llvm.dbg.value(metadata !{i32 %inc12.i}, i64 0, metadata !254) #2, !dbg !263
  store i32 %mm.136.i, i32* %count10.i, align 4, !dbg !263, !tbaa !198
  br label %for.inc16.i, !dbg !263

for.inc16.i:                                      ; preds = %if.then.i, %for.body7.i
  %mm.2.i = phi i32 [ %inc12.i, %if.then.i ], [ %mm.136.i, %for.body7.i ]
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1, !dbg !264
  %lftr.wideiv31 = trunc i64 %indvars.iv.next.i to i32, !dbg !264
  %exitcond32 = icmp eq i32 %lftr.wideiv31, %ninp, !dbg !264
  br i1 %exitcond32, label %sort_inp.exit, label %for.body7.i, !dbg !264

sort_inp.exit:                                    ; preds = %for.inc16.i, %entry
  %2 = bitcast %struct.t_inpfile* %inp to i8*, !dbg !265
  %conv.i = sext i32 %ninp to i64, !dbg !265
  tail call void @qsort(i8* %2, i64 %conv.i, i64 24, i32 (i8*, i8*)* @inp_comp) #8, !dbg !265
  %call = tail call %struct._IO_FILE* @ffopen(i8* %fn, i8* getelementptr inbounds ([2 x i8]* @.str8, i64 0, i64 0)) #8, !dbg !266
  tail call void @llvm.dbg.value(metadata !{%struct._IO_FILE* %call}, i64 0, metadata !101), !dbg !266
  tail call void @nice_header(%struct._IO_FILE* %call, i8* %fn) #8, !dbg !267
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !102), !dbg !268
  br i1 %cmp37.i, label %for.body, label %for.end, !dbg !268

for.body:                                         ; preds = %sort_inp.exit, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %sort_inp.exit ]
  %bSet = getelementptr inbounds %struct.t_inpfile* %inp, i64 %indvars.iv, i32 1, !dbg !270
  %3 = load i32* %bSet, align 4, !dbg !270, !tbaa !198
  %tobool = icmp eq i32 %3, 0, !dbg !270
  %name12 = getelementptr inbounds %struct.t_inpfile* %inp, i64 %indvars.iv, i32 2, !dbg !272
  %4 = load i8** %name12, align 8, !dbg !272, !tbaa !193
  br i1 %tobool, label %if.else, label %if.then, !dbg !270

if.then:                                          ; preds = %for.body
  %value = getelementptr inbounds %struct.t_inpfile* %inp, i64 %indvars.iv, i32 3, !dbg !274
  %5 = load i8** %value, align 8, !dbg !274, !tbaa !193
  %tobool5 = icmp eq i8* %5, null, !dbg !274
  %. = select i1 %tobool5, i8* getelementptr inbounds ([1 x i8]* @.str10, i64 0, i64 0), i8* %5, !dbg !274
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([12 x i8]* @.str9, i64 0, i64 0), i8* %4, i8* %.) #8, !dbg !274
  br label %for.inc, !dbg !274

if.else:                                          ; preds = %for.body
  %call13 = tail call i32 (i8*, i8*, ...)* @sprintf(i8* getelementptr inbounds ([1024 x i8]* @warn_buf, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8]* @.str11, i64 0, i64 0), i8* %4) #8, !dbg !272
  tail call void @warning(i8* null) #8, !dbg !275
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !268
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !268
  %exitcond = icmp eq i32 %lftr.wideiv, %ninp, !dbg !268
  br i1 %exitcond, label %for.end, label %for.body, !dbg !268

for.end:                                          ; preds = %for.inc, %sort_inp.exit
  tail call void @ffclose(%struct._IO_FILE* %call) #8, !dbg !276
  ret void, !dbg !277
}
