define internal fastcc void @init_adir(%struct._IO_FILE* %log, %struct.t_topology* %top, %struct.t_inputrec* %ir, i32 %step, %struct.t_mdatoms* %md, i32 %start, i32 %end, [3 x float]* %x_old, [3 x float]* nocapture %x_init, [3 x float]* %x, [3 x float]* nocapture %f, [3 x float]* %acc_dir, [3 x float]* %box, float %lambda, float* %dvdlambda, %struct.t_nrnb* %nrnb) #0 {
entry:
  %0 = load [3 x float]** @init_adir.xnew, align 8, !tbaa !4
  %cmp = icmp eq [3 x float]* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %sub = sub nsw i32 %end, %start
  %call = tail call i8* @save_calloc(i8* getelementptr inbounds ([6 x i8]* @.str21, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8]* @.str1, i64 0, i64 0), i32 247, i32 %sub, i32 12) #5
  %1 = bitcast i8* %call to [3 x float]*
  store [3 x float]* %1, [3 x float]** @init_adir.xnold, align 8, !tbaa !4
  %call2 = tail call i8* @save_calloc(i8* getelementptr inbounds ([5 x i8]* @.str17, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8]* @.str1, i64 0, i64 0), i32 248, i32 %sub, i32 12) #5
  %2 = bitcast i8* %call2 to [3 x float]*
  store [3 x float]* %2, [3 x float]** @init_adir.xnew, align 8, !tbaa !4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = phi [3 x float]* [ %2, %if.then ], [ %0, %entry ]
  %ptype3 = getelementptr inbounds %struct.t_mdatoms* %md, i64 0, i32 13
  %4 = load i16** %ptype3, align 8, !tbaa !4
  %delta_t = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 15
  %5 = load float* %delta_t, align 4, !tbaa !0
  %cmp4242 = icmp slt i32 %start, %end
  br i1 %cmp4242, label %for.body.lr.ph, label %if.end.for.end85_crit_edge

if.end.for.end85_crit_edge:                       ; preds = %if.end
  %.pre = load [3 x float]** @init_adir.xnold, align 8, !tbaa !4
  %idx.ext.pre = sext i32 %start to i64
  br label %for.end85

for.body.lr.ph:                                   ; preds = %if.end
  %invmass = getelementptr inbounds %struct.t_mdatoms* %md, i64 0, i32 5
  %6 = load float** %invmass, align 8, !tbaa !4
  %7 = load [3 x float]** @init_adir.xnold, align 8, !tbaa !4
  %conv55 = fpext float %5 to double
  %8 = sext i32 %start to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc83
  %indvars.iv250 = phi i64 [ %8, %for.body.lr.ph ], [ %indvars.iv.next251, %for.inc83 ]
  %arrayidx = getelementptr inbounds float* %6, i64 %indvars.iv250
  %9 = load float* %arrayidx, align 4, !tbaa !0
  %mul = fmul float %5, %9
  %conv = fpext float %mul to double
  %arrayidx10 = getelementptr inbounds i16* %4, i64 %indvars.iv250
  %10 = load i16* %arrayidx10, align 2, !tbaa !5
  %11 = add nsw i64 %indvars.iv250, %8
  br label %for.body8

for.body8:                                        ; preds = %for.inc, %for.body
  %indvars.iv246 = phi i64 [ 0, %for.body ], [ %indvars.iv.next247, %for.inc ]
  switch i16 %10, label %if.then19 [
    i16 4, label %if.else
    i16 2, label %if.else
  ]

if.then19:                                        ; preds = %for.body8
  %arrayidx23 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv250, i64 %indvars.iv246
  %12 = load float* %arrayidx23, align 4, !tbaa !0
  %arrayidx27 = getelementptr inbounds [3 x float]* %x_init, i64 %indvars.iv250, i64 %indvars.iv246
  %13 = load float* %arrayidx27, align 4, !tbaa !0
  %arrayidx31 = getelementptr inbounds [3 x float]* %x_old, i64 %indvars.iv250, i64 %indvars.iv246
  %14 = load float* %arrayidx31, align 4, !tbaa !0
  %sub32 = fsub float %13, %14
  %sub33 = fsub float %12, %sub32
  %arrayidx37 = getelementptr inbounds [3 x float]* %7, i64 %11, i64 %indvars.iv246
  store float %sub33, float* %arrayidx37, align 4, !tbaa !0
  %15 = load float* %arrayidx23, align 4, !tbaa !0
  %mul42 = fmul float %15, 2.000000e+00
  %16 = load float* %arrayidx31, align 4, !tbaa !0
  %sub47 = fsub float %mul42, %16
  %conv48 = fpext float %sub47 to double
  %arrayidx52 = getelementptr inbounds [3 x float]* %f, i64 %indvars.iv250, i64 %indvars.iv246
  %17 = load float* %arrayidx52, align 4, !tbaa !0
  %conv53 = fpext float %17 to double
  %mul54 = fmul double %conv, %conv53
  %mul56 = fmul double %conv55, %mul54
  %add57 = fadd double %conv48, %mul56
  %conv58 = fptrunc double %add57 to float
  %arrayidx63 = getelementptr inbounds [3 x float]* %3, i64 %11, i64 %indvars.iv246
  store float %conv58, float* %arrayidx63, align 4, !tbaa !0
  br label %for.inc

if.else:                                          ; preds = %for.body8, %for.body8
  %arrayidx67 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv250, i64 %indvars.iv246
  %18 = load float* %arrayidx67, align 4, !tbaa !0
  %arrayidx72 = getelementptr inbounds [3 x float]* %7, i64 %11, i64 %indvars.iv246
  store float %18, float* %arrayidx72, align 4, !tbaa !0
  %19 = load float* %arrayidx67, align 4, !tbaa !0
  %arrayidx81 = getelementptr inbounds [3 x float]* %3, i64 %11, i64 %indvars.iv246
  store float %19, float* %arrayidx81, align 4, !tbaa !0
  br label %for.inc

for.inc:                                          ; preds = %if.then19, %if.else
  %indvars.iv.next247 = add i64 %indvars.iv246, 1
  %lftr.wideiv248 = trunc i64 %indvars.iv.next247 to i32
  %exitcond249 = icmp eq i32 %lftr.wideiv248, 3
  br i1 %exitcond249, label %for.inc83, label %for.body8

for.inc83:                                        ; preds = %for.inc
  %indvars.iv.next251 = add i64 %indvars.iv250, 1
  %20 = trunc i64 %indvars.iv.next251 to i32
  %cmp4 = icmp slt i32 %20, %end
  br i1 %cmp4, label %for.body, label %for.end85

for.end85:                                        ; preds = %for.inc83, %if.end.for.end85_crit_edge
  %idx.ext.pre-phi = phi i64 [ %idx.ext.pre, %if.end.for.end85_crit_edge ], [ %8, %for.inc83 ]
  %21 = phi [3 x float]* [ %.pre, %if.end.for.end85_crit_edge ], [ %7, %for.inc83 ]
  %idx.neg = sub i64 0, %idx.ext.pre-phi
  %add.ptr = getelementptr inbounds [3 x float]* %21, i64 %idx.neg
  %call86 = tail call i32 @constrain(%struct._IO_FILE* %log, %struct.t_topology* %top, %struct.t_inputrec* %ir, i32 %step, %struct.t_mdatoms* %md, i32 %start, i32 %end, [3 x float]* %x, [3 x float]* %add.ptr, [3 x float]* null, [3 x float]* %box, float %lambda, float* %dvdlambda, %struct.t_nrnb* %nrnb, i32 1) #5
  %22 = load [3 x float]** @init_adir.xnew, align 8, !tbaa !4
  %add.ptr89 = getelementptr inbounds [3 x float]* %22, i64 %idx.neg
  %call90 = tail call i32 @constrain(%struct._IO_FILE* %log, %struct.t_topology* %top, %struct.t_inputrec* %ir, i32 %step, %struct.t_mdatoms* %md, i32 %start, i32 %end, [3 x float]* %x, [3 x float]* %add.ptr89, [3 x float]* null, [3 x float]* %box, float %lambda, float* %dvdlambda, %struct.t_nrnb* %nrnb, i32 1) #5
  br i1 %cmp4242, label %for.cond95.preheader.lr.ph, label %for.end85.for.end137_crit_edge

for.end85.for.end137_crit_edge:                   ; preds = %for.end85
  %.pre254 = load [3 x float]** @init_adir.xnew, align 8, !tbaa !4
  br label %for.end137

for.cond95.preheader.lr.ph:                       ; preds = %for.end85
  %23 = load [3 x float]** @init_adir.xnold, align 8, !tbaa !4
  %24 = load [3 x float]** @init_adir.xnew, align 8, !tbaa !4
  %mul.i = fmul float %5, %5
  %invmass121 = getelementptr inbounds %struct.t_mdatoms* %md, i64 0, i32 5
  %25 = load float** %invmass121, align 8, !tbaa !4
  br label %for.cond95.preheader

for.cond95.preheader:                             ; preds = %for.cond95.preheader.lr.ph, %for.end132
  %indvars.iv244 = phi i64 [ %idx.ext.pre-phi, %for.cond95.preheader.lr.ph ], [ %indvars.iv.next245, %for.end132 ]
  %arrayidx122 = getelementptr inbounds float* %25, i64 %indvars.iv244
  %26 = trunc i64 %indvars.iv244 to i32
  %sub126 = sub nsw i32 %26, %start
  %idxprom127 = sext i32 %sub126 to i64
  br label %for.body98

for.body98:                                       ; preds = %for.body98, %for.cond95.preheader
  %indvars.iv = phi i64 [ 0, %for.cond95.preheader ], [ %indvars.iv.next, %for.body98 ]
  %arrayidx102 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv244, i64 %indvars.iv
  %27 = load float* %arrayidx102, align 4, !tbaa !0
  %mul103 = fmul float %27, 2.000000e+00
  %arrayidx107 = getelementptr inbounds [3 x float]* %23, i64 %indvars.iv244, i64 %indvars.iv
  %28 = load float* %arrayidx107, align 4, !tbaa !0
  %sub108 = fsub float %mul103, %28
  %arrayidx112 = getelementptr inbounds [3 x float]* %24, i64 %indvars.iv244, i64 %indvars.iv
  %29 = load float* %arrayidx112, align 4, !tbaa !0
  %sub113 = fsub float %sub108, %29
  %sub114 = fsub float -0.000000e+00, %sub113
  %div = fdiv float %sub114, %mul.i
  %arrayidx119 = getelementptr inbounds [3 x float]* %f, i64 %indvars.iv244, i64 %indvars.iv
  %30 = load float* %arrayidx119, align 4, !tbaa !0
  %31 = load float* %arrayidx122, align 4, !tbaa !0
  %mul123 = fmul float %30, %31
  %sub124 = fsub float %div, %mul123
  %arrayidx129 = getelementptr inbounds [3 x float]* %24, i64 %idxprom127, i64 %indvars.iv
  store float %sub124, float* %arrayidx129, align 4, !tbaa !0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 3
  br i1 %exitcond, label %for.end132, label %for.body98

for.end132:                                       ; preds = %for.body98
  %arraydecay = getelementptr inbounds [3 x float]* %acc_dir, i64 %indvars.iv244, i64 0
  store float 0.000000e+00, float* %arraydecay, align 4, !tbaa !0
  %arrayidx1.i = getelementptr inbounds [3 x float]* %acc_dir, i64 %indvars.iv244, i64 1
  store float 0.000000e+00, float* %arrayidx1.i, align 4, !tbaa !0
  %arrayidx2.i = getelementptr inbounds [3 x float]* %acc_dir, i64 %indvars.iv244, i64 2
  store float 0.000000e+00, float* %arrayidx2.i, align 4, !tbaa !0
  %indvars.iv.next245 = add i64 %indvars.iv244, 1
  %32 = trunc i64 %indvars.iv.next245 to i32
  %cmp92 = icmp slt i32 %32, %end
  br i1 %cmp92, label %for.cond95.preheader, label %for.end137

for.end137:                                       ; preds = %for.end132, %for.end85.for.end137_crit_edge
  %33 = phi [3 x float]* [ %.pre254, %for.end85.for.end137_crit_edge ], [ %24, %for.end132 ]
  %call138 = tail call i32 @constrain(%struct._IO_FILE* %log, %struct.t_topology* %top, %struct.t_inputrec* %ir, i32 %step, %struct.t_mdatoms* %md, i32 %start, i32 %end, [3 x float]* %x_old, [3 x float]* %33, [3 x float]* %acc_dir, [3 x float]* %box, float %lambda, float* %dvdlambda, %struct.t_nrnb* %nrnb, i32 0) #5
  ret void
}
