define void @print_orires_log(%struct._IO_FILE* nocapture %log, %struct.t_fcdata* nocapture %fcd) #0 {
entry:
  %nrot = alloca i32, align 4
  %S = alloca [3 x [3 x float]], align 16
  %TMP = alloca [3 x [3 x float]], align 16
  %0 = bitcast [3 x [3 x float]]* %S to i8*
  call void @llvm.lifetime.start(i64 36, i8* %0) #4
  %1 = bitcast [3 x [3 x float]]* %TMP to i8*
  call void @llvm.lifetime.start(i64 36, i8* %1) #4
  %2 = load double*** @print_orires_log.M, align 8, !tbaa !4
  %cmp = icmp eq double** %2, null
  br i1 %cmp, label %if.then, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body7, %entry
  %nex = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 5
  %3 = load i32* %nex, align 4, !tbaa !3
  %cmp15140 = icmp sgt i32 %3, 0
  br i1 %cmp15140, label %for.body16.lr.ph, label %for.end98

for.body16.lr.ph:                                 ; preds = %for.cond14.preheader
  %arraydecay = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 0
  %S18 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 12
  %arraydecay21 = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 0
  %arrayidx1.i = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 0, i64 0
  %arrayidx3.i = getelementptr inbounds [3 x float]* %arraydecay, i64 0, i64 0
  %arrayidx5.i = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 0, i64 1
  %arrayidx7.i = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 0, i64 1
  %arrayidx10.i = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 0, i64 2
  %arrayidx12.i = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 0, i64 2
  %arrayidx16.i = getelementptr inbounds [3 x [3 x float]]* %S, i64 0, i64 0, i64 0
  %arrayidx20.i = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 1, i64 0
  %arrayidx25.i = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 1, i64 1
  %arrayidx31.i = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 1, i64 2
  %arrayidx35.i = getelementptr inbounds [3 x [3 x float]]* %S, i64 0, i64 0, i64 1
  %arrayidx39.i = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 2, i64 0
  %arrayidx44.i = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 2, i64 1
  %arrayidx50.i = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 2, i64 2
  %arrayidx54.i = getelementptr inbounds [3 x [3 x float]]* %S, i64 0, i64 0, i64 2
  %arrayidx56.i = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 1, i64 0
  %arrayidx61.i = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 1, i64 1
  %arrayidx67.i = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 1, i64 2
  %arrayidx73.i = getelementptr inbounds [3 x [3 x float]]* %S, i64 0, i64 1, i64 0
  %arrayidx92.i = getelementptr inbounds [3 x [3 x float]]* %S, i64 0, i64 1, i64 1
  %arrayidx111.i = getelementptr inbounds [3 x [3 x float]]* %S, i64 0, i64 1, i64 2
  %arrayidx113.i = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 2, i64 0
  %arrayidx118.i = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 2, i64 1
  %arrayidx124.i = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 2, i64 2
  %arrayidx130.i = getelementptr inbounds [3 x [3 x float]]* %S, i64 0, i64 2, i64 0
  %arrayidx149.i = getelementptr inbounds [3 x [3 x float]]* %S, i64 0, i64 2, i64 1
  %arrayidx168.i = getelementptr inbounds [3 x [3 x float]]* %S, i64 0, i64 2, i64 2
  br label %for.body16

if.then:                                          ; preds = %entry
  %call = call i8* @save_calloc(i8* getelementptr inbounds ([2 x i8]* @.str22, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str1, i64 0, i64 0), i32 174, i32 3, i32 8) #6
  %4 = bitcast i8* %call to double**
  store double** %4, double*** @print_orires_log.M, align 8, !tbaa !4
  br label %for.body

for.body:                                         ; preds = %for.body, %if.then
  %indvars.iv162 = phi i64 [ 0, %if.then ], [ %indvars.iv.next163, %for.body ]
  %call2 = call i8* @save_calloc(i8* getelementptr inbounds ([5 x i8]* @.str23, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str1, i64 0, i64 0), i32 176, i32 3, i32 8) #6
  %5 = bitcast i8* %call2 to double*
  %6 = load double*** @print_orires_log.M, align 8, !tbaa !4
  %arrayidx = getelementptr inbounds double** %6, i64 %indvars.iv162
  store double* %5, double** %arrayidx, align 8, !tbaa !4
  %indvars.iv.next163 = add i64 %indvars.iv162, 1
  %lftr.wideiv164 = trunc i64 %indvars.iv.next163 to i32
  %exitcond165 = icmp eq i32 %lftr.wideiv164, 3
  br i1 %exitcond165, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %call3 = call i8* @save_calloc(i8* getelementptr inbounds ([4 x i8]* @.str24, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str1, i64 0, i64 0), i32 177, i32 3, i32 8) #6
  %7 = bitcast i8* %call3 to double*
  store double* %7, double** @print_orires_log.eig, align 8, !tbaa !4
  %call4 = call i8* @save_calloc(i8* getelementptr inbounds ([2 x i8]* @.str25, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str1, i64 0, i64 0), i32 178, i32 3, i32 8) #6
  %8 = bitcast i8* %call4 to double**
  store double** %8, double*** @print_orires_log.v, align 8, !tbaa !4
  br label %for.body7

for.body7:                                        ; preds = %for.body7, %for.end
  %indvars.iv158 = phi i64 [ 0, %for.end ], [ %indvars.iv.next159, %for.body7 ]
  %call8 = call i8* @save_calloc(i8* getelementptr inbounds ([5 x i8]* @.str26, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str1, i64 0, i64 0), i32 180, i32 3, i32 8) #6
  %9 = bitcast i8* %call8 to double*
  %10 = load double*** @print_orires_log.v, align 8, !tbaa !4
  %arrayidx10 = getelementptr inbounds double** %10, i64 %indvars.iv158
  store double* %9, double** %arrayidx10, align 8, !tbaa !4
  %indvars.iv.next159 = add i64 %indvars.iv158, 1
  %lftr.wideiv160 = trunc i64 %indvars.iv.next159 to i32
  %exitcond161 = icmp eq i32 %lftr.wideiv160, 3
  br i1 %exitcond161, label %for.cond14.preheader, label %for.body7

for.body16:                                       ; preds = %for.body16.lr.ph, %for.end94
  %indvars.iv156 = phi i64 [ 0, %for.body16.lr.ph ], [ %indvars.iv.next157, %for.end94 ]
  %11 = load [3 x [3 x float]]** %S18, align 8, !tbaa !4
  %arraydecay20 = getelementptr inbounds [3 x [3 x float]]* %11, i64 %indvars.iv156, i64 0
  call fastcc void @mmul([3 x float]* %arraydecay, [3 x float]* %arraydecay20, [3 x float]* %arraydecay21) #7
  %12 = load float* %arrayidx1.i, align 16, !tbaa !0
  %13 = load float* %arrayidx3.i, align 4, !tbaa !0
  %mul.i = fmul float %12, %13
  %14 = load float* %arrayidx5.i, align 4, !tbaa !0
  %15 = load float* %arrayidx7.i, align 4, !tbaa !0
  %mul8.i = fmul float %14, %15
  %add.i = fadd float %mul.i, %mul8.i
  %16 = load float* %arrayidx10.i, align 8, !tbaa !0
  %17 = load float* %arrayidx12.i, align 4, !tbaa !0
  %mul13.i = fmul float %16, %17
  %add14.i = fadd float %add.i, %mul13.i
  store float %add14.i, float* %arrayidx16.i, align 16, !tbaa !0
  %18 = load float* %arrayidx20.i, align 4, !tbaa !0
  %mul21.i = fmul float %12, %18
  %19 = load float* %arrayidx25.i, align 4, !tbaa !0
  %mul26.i = fmul float %14, %19
  %add27.i = fadd float %mul21.i, %mul26.i
  %20 = load float* %arrayidx31.i, align 4, !tbaa !0
  %mul32.i = fmul float %16, %20
  %add33.i = fadd float %add27.i, %mul32.i
  store float %add33.i, float* %arrayidx35.i, align 4, !tbaa !0
  %21 = load float* %arrayidx39.i, align 4, !tbaa !0
  %mul40.i = fmul float %12, %21
  %22 = load float* %arrayidx44.i, align 4, !tbaa !0
  %mul45.i = fmul float %14, %22
  %add46.i = fadd float %mul40.i, %mul45.i
  %23 = load float* %arrayidx50.i, align 4, !tbaa !0
  %mul51.i = fmul float %16, %23
  %add52.i = fadd float %add46.i, %mul51.i
  store float %add52.i, float* %arrayidx54.i, align 8, !tbaa !0
  %24 = load float* %arrayidx56.i, align 4, !tbaa !0
  %mul59.i = fmul float %24, %13
  %25 = load float* %arrayidx61.i, align 4, !tbaa !0
  %mul64.i = fmul float %25, %15
  %add65.i = fadd float %mul59.i, %mul64.i
  %26 = load float* %arrayidx67.i, align 4, !tbaa !0
  %mul70.i = fmul float %26, %17
  %add71.i = fadd float %add65.i, %mul70.i
  store float %add71.i, float* %arrayidx73.i, align 4, !tbaa !0
  %mul78.i = fmul float %24, %18
  %mul83.i = fmul float %25, %19
  %add84.i = fadd float %mul78.i, %mul83.i
  %mul89.i = fmul float %26, %20
  %add90.i = fadd float %add84.i, %mul89.i
  store float %add90.i, float* %arrayidx92.i, align 4, !tbaa !0
  %mul97.i = fmul float %24, %21
  %mul102.i = fmul float %25, %22
  %add103.i = fadd float %mul97.i, %mul102.i
  %mul108.i = fmul float %26, %23
  %add109.i = fadd float %add103.i, %mul108.i
  store float %add109.i, float* %arrayidx111.i, align 4, !tbaa !0
  %27 = load float* %arrayidx113.i, align 8, !tbaa !0
  %mul116.i = fmul float %27, %13
  %28 = load float* %arrayidx118.i, align 4, !tbaa !0
  %mul121.i = fmul float %28, %15
  %add122.i = fadd float %mul116.i, %mul121.i
  %29 = load float* %arrayidx124.i, align 8, !tbaa !0
  %mul127.i = fmul float %29, %17
  %add128.i = fadd float %add122.i, %mul127.i
  store float %add128.i, float* %arrayidx130.i, align 8, !tbaa !0
  %mul135.i = fmul float %27, %18
  %mul140.i = fmul float %28, %19
  %add141.i = fadd float %mul135.i, %mul140.i
  %mul146.i = fmul float %29, %20
  %add147.i = fadd float %add141.i, %mul146.i
  store float %add147.i, float* %arrayidx149.i, align 4, !tbaa !0
  %mul154.i = fmul float %27, %21
  %mul159.i = fmul float %28, %22
  %add160.i = fadd float %mul154.i, %mul159.i
  %mul165.i = fmul float %29, %23
  %add166.i = fadd float %add160.i, %mul165.i
  store float %add166.i, float* %arrayidx168.i, align 8, !tbaa !0
  %30 = load double*** @print_orires_log.M, align 8, !tbaa !4
  br label %for.cond29.preheader

for.cond29.preheader:                             ; preds = %for.inc43, %for.body16
  %indvars.iv144 = phi i64 [ 0, %for.body16 ], [ %indvars.iv.next145, %for.inc43 ]
  %arrayidx38 = getelementptr inbounds double** %30, i64 %indvars.iv144
  %31 = load double** %arrayidx38, align 8, !tbaa !4
  br label %for.body31

for.body31:                                       ; preds = %for.body31, %for.cond29.preheader
  %indvars.iv = phi i64 [ 0, %for.cond29.preheader ], [ %indvars.iv.next, %for.body31 ]
  %arrayidx35 = getelementptr inbounds [3 x [3 x float]]* %S, i64 0, i64 %indvars.iv144, i64 %indvars.iv
  %32 = load float* %arrayidx35, align 4, !tbaa !0
  %conv = fpext float %32 to double
  %arrayidx39 = getelementptr inbounds double* %31, i64 %indvars.iv
  store double %conv, double* %arrayidx39, align 8, !tbaa !6
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 3
  br i1 %exitcond, label %for.inc43, label %for.body31

for.inc43:                                        ; preds = %for.body31
  %indvars.iv.next145 = add i64 %indvars.iv144, 1
  %lftr.wideiv146 = trunc i64 %indvars.iv.next145 to i32
  %exitcond147 = icmp eq i32 %lftr.wideiv146, 3
  br i1 %exitcond147, label %for.end45, label %for.cond29.preheader

for.end45:                                        ; preds = %for.inc43
  %33 = load double** @print_orires_log.eig, align 8, !tbaa !4
  %34 = load double*** @print_orires_log.v, align 8, !tbaa !4
  call void @jacobi(double** %30, i32 3, double* %33, double** %34, i32* %nrot) #6
  %35 = load double** @print_orires_log.eig, align 8, !tbaa !4
  br label %for.body49

for.body49:                                       ; preds = %for.body49, %for.end45
  %indvars.iv148 = phi i64 [ 1, %for.end45 ], [ %indvars.iv.next149, %for.body49 ]
  %j.1138 = phi i32 [ 0, %for.end45 ], [ %j.2, %for.body49 ]
  %arrayidx51 = getelementptr inbounds double* %35, i64 %indvars.iv148
  %36 = load double* %arrayidx51, align 8, !tbaa !6
  %conv52 = fptrunc double %36 to float
  %mul.i134 = fmul float %conv52, %conv52
  %idxprom54 = sext i32 %j.1138 to i64
  %arrayidx55 = getelementptr inbounds double* %35, i64 %idxprom54
  %37 = load double* %arrayidx55, align 8, !tbaa !6
  %conv56 = fptrunc double %37 to float
  %mul.i133 = fmul float %conv56, %conv56
  %cmp58 = fcmp ogt float %mul.i134, %mul.i133
  %38 = trunc i64 %indvars.iv148 to i32
  %j.2 = select i1 %cmp58, i32 %38, i32 %j.1138
  %indvars.iv.next149 = add i64 %indvars.iv148, 1
  %lftr.wideiv150 = trunc i64 %indvars.iv.next149 to i32
  %exitcond151 = icmp eq i32 %lftr.wideiv150, 3
  br i1 %exitcond151, label %for.end64, label %for.body49

for.end64:                                        ; preds = %for.body49
  %indvars.iv.next157 = add i64 %indvars.iv156, 1
  %39 = trunc i64 %indvars.iv.next157 to i32
  %call65 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %log, i8* getelementptr inbounds ([30 x i8]* @.str27, i64 0, i64 0), i32 %39) #6
  %idxprom66 = sext i32 %j.2 to i64
  %40 = load double** @print_orires_log.eig, align 8, !tbaa !4
  %arrayidx67 = getelementptr inbounds double* %40, i64 %idxprom66
  %41 = load double* %arrayidx67, align 8, !tbaa !6
  %call68 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %log, i8* getelementptr inbounds ([25 x i8]* @.str28, i64 0, i64 0), double %41) #6
  br label %for.body72

for.body72:                                       ; preds = %cond.end, %for.end64
  %indvars.iv152 = phi i64 [ 0, %for.end64 ], [ %indvars.iv.next153, %cond.end ]
  %42 = load double** @print_orires_log.eig, align 8, !tbaa !4
  %arrayidx74 = getelementptr inbounds double* %42, i64 %idxprom66
  %43 = load double* %arrayidx74, align 8, !tbaa !6
  %call75 = call double @fabs(double %43) #8
  %cmp76 = fcmp ogt double %call75, 1.200000e-38
  br i1 %cmp76, label %cond.true, label %cond.end

cond.true:                                        ; preds = %for.body72
  %arrayidx79 = getelementptr inbounds double* %42, i64 %indvars.iv152
  %44 = load double* %arrayidx79, align 8, !tbaa !6
  %div = fdiv double %44, %43
  br label %cond.end

cond.end:                                         ; preds = %for.body72, %cond.true
  %cond = phi double [ %div, %cond.true ], [ 0.000000e+00, %for.body72 ]
  %45 = load double*** @print_orires_log.v, align 8, !tbaa !4
  %46 = load double** %45, align 8, !tbaa !4
  %arrayidx84 = getelementptr inbounds double* %46, i64 %indvars.iv152
  %47 = load double* %arrayidx84, align 8, !tbaa !6
  %arrayidx86 = getelementptr inbounds double** %45, i64 1
  %48 = load double** %arrayidx86, align 8, !tbaa !4
  %arrayidx87 = getelementptr inbounds double* %48, i64 %indvars.iv152
  %49 = load double* %arrayidx87, align 8, !tbaa !6
  %arrayidx89 = getelementptr inbounds double** %45, i64 2
  %50 = load double** %arrayidx89, align 8, !tbaa !4
  %arrayidx90 = getelementptr inbounds double* %50, i64 %indvars.iv152
  %51 = load double* %arrayidx90, align 8, !tbaa !6
  %call91 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %log, i8* getelementptr inbounds ([36 x i8]* @.str29, i64 0, i64 0), double %cond, double %47, double %49, double %51) #6
  %indvars.iv.next153 = add i64 %indvars.iv152, 1
  %lftr.wideiv154 = trunc i64 %indvars.iv.next153 to i32
  %exitcond155 = icmp eq i32 %lftr.wideiv154, 3
  br i1 %exitcond155, label %for.end94, label %for.body72

for.end94:                                        ; preds = %cond.end
  %fputc = call i32 @fputc(i32 10, %struct._IO_FILE* %log)
  %52 = load i32* %nex, align 4, !tbaa !3
  %cmp15 = icmp slt i32 %39, %52
  br i1 %cmp15, label %for.body16, label %for.end98

for.end98:                                        ; preds = %for.end94, %for.cond14.preheader
  call void @llvm.lifetime.end(i64 36, i8* %1) #4
  call void @llvm.lifetime.end(i64 36, i8* %0) #4
  ret void
}
