define void @print_orires_log(%struct.__sFILE* nocapture %log, %struct.t_fcdata* nocapture readonly %fcd) #4 {
  %nrot = alloca i32, align 4
  %S = alloca [3 x [3 x float]], align 16
  %TMP = alloca [3 x [3 x float]], align 16
  tail call void @llvm.dbg.value(metadata %struct.__sFILE* %log, i64 0, metadata !560, metadata !877), !dbg !1342
  tail call void @llvm.dbg.value(metadata %struct.t_fcdata* %fcd, i64 0, metadata !561, metadata !877), !dbg !1343
  %1 = bitcast [3 x [3 x float]]* %S to i8*, !dbg !1344
  call void @llvm.lifetime.start(i64 36, i8* %1) #7, !dbg !1344
  tail call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %S, metadata !567, metadata !877), !dbg !1345
  %2 = bitcast [3 x [3 x float]]* %TMP to i8*, !dbg !1344
  call void @llvm.lifetime.start(i64 36, i8* %2) #7, !dbg !1344
  tail call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %TMP, metadata !568, metadata !877), !dbg !1346
  %3 = load double*** @print_orires_log.M, align 8, !dbg !1347, !tbaa !1170
  %4 = icmp eq double** %3, null, !dbg !1349
  br i1 %4, label %31, label %.preheader1, !dbg !1350

.preheader1:                                      ; preds = %41, %0
  %5 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 5, !dbg !1351
  %6 = load i32* %5, align 4, !dbg !1351, !tbaa !1061
  %7 = icmp sgt i32 %6, 0, !dbg !1354
  br i1 %7, label %.lr.ph, label %._crit_edge, !dbg !1355

.lr.ph:                                           ; preds = %.preheader1
  %8 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 0, !dbg !1356
  %9 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 12, !dbg !1358
  %10 = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 0, !dbg !1359
  %11 = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 0, i64 0, !dbg !1360
  %12 = getelementptr inbounds [3 x float]* %8, i64 0, i64 0, !dbg !1362
  %13 = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 0, i64 1, !dbg !1363
  %14 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 0, i64 1, !dbg !1364
  %15 = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 0, i64 2, !dbg !1365
  %16 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 0, i64 2, !dbg !1366
  %17 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 1, i64 0, !dbg !1367
  %18 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 1, i64 1, !dbg !1368
  %19 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 1, i64 2, !dbg !1369
  %20 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 2, i64 0, !dbg !1370
  %21 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 2, i64 1, !dbg !1371
  %22 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 2, i64 2, !dbg !1372
  %23 = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 1, i64 0, !dbg !1373
  %24 = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 1, i64 1, !dbg !1374
  %25 = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 1, i64 2, !dbg !1375
  %26 = getelementptr inbounds [3 x [3 x float]]* %S, i64 0, i64 1, i64 1, !dbg !1376
  %27 = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 2, i64 0, !dbg !1377
  %28 = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 2, i64 1, !dbg !1378
  %29 = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 2, i64 2, !dbg !1379
  %30 = getelementptr inbounds [3 x [3 x float]]* %S, i64 0, i64 2, i64 2, !dbg !1380
  br label %46, !dbg !1355

; <label>:31                                      ; preds = %0
  %32 = tail call i8* @save_calloc(i8* getelementptr inbounds ([2 x i8]* @.str22, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8]* @.str1, i64 0, i64 0), i32 174, i32 3, i32 8) #8, !dbg !1381
  store i8* %32, i8** bitcast (double*** @print_orires_log.M to i8**), align 8, !dbg !1381, !tbaa !1170
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !563, metadata !877), !dbg !1383
  br label %33, !dbg !1384

; <label>:33                                      ; preds = %33, %31
  %indvars.iv24 = phi i64 [ 0, %31 ], [ %indvars.iv.next25, %33 ]
  %34 = tail call i8* @save_calloc(i8* getelementptr inbounds ([5 x i8]* @.str23, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8]* @.str1, i64 0, i64 0), i32 176, i32 3, i32 8) #8, !dbg !1386
  %35 = load double*** @print_orires_log.M, align 8, !dbg !1386, !tbaa !1170
  %36 = getelementptr inbounds double** %35, i64 %indvars.iv24, !dbg !1386
  %37 = bitcast double** %36 to i8**, !dbg !1386
  store i8* %34, i8** %37, align 8, !dbg !1386, !tbaa !1170
  %indvars.iv.next25 = add nuw nsw i64 %indvars.iv24, 1, !dbg !1384
  %exitcond26 = icmp eq i64 %indvars.iv.next25, 3, !dbg !1384
  br i1 %exitcond26, label %38, label %33, !dbg !1384

; <label>:38                                      ; preds = %33
  %39 = tail call i8* @save_calloc(i8* getelementptr inbounds ([4 x i8]* @.str24, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8]* @.str1, i64 0, i64 0), i32 177, i32 3, i32 8) #8, !dbg !1388
  store i8* %39, i8** bitcast (double** @print_orires_log.eig to i8**), align 8, !dbg !1388, !tbaa !1170
  %40 = tail call i8* @save_calloc(i8* getelementptr inbounds ([2 x i8]* @.str25, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8]* @.str1, i64 0, i64 0), i32 178, i32 3, i32 8) #8, !dbg !1389
  store i8* %40, i8** bitcast (double*** @print_orires_log.v to i8**), align 8, !dbg !1389, !tbaa !1170
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !563, metadata !877), !dbg !1383
  br label %41, !dbg !1390

; <label>:41                                      ; preds = %41, %38
  %indvars.iv21 = phi i64 [ 0, %38 ], [ %indvars.iv.next22, %41 ]
  %42 = tail call i8* @save_calloc(i8* getelementptr inbounds ([5 x i8]* @.str26, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8]* @.str1, i64 0, i64 0), i32 180, i32 3, i32 8) #8, !dbg !1392
  %43 = load double*** @print_orires_log.v, align 8, !dbg !1392, !tbaa !1170
  %44 = getelementptr inbounds double** %43, i64 %indvars.iv21, !dbg !1392
  %45 = bitcast double** %44 to i8**, !dbg !1392
  store i8* %42, i8** %45, align 8, !dbg !1392, !tbaa !1170
  %indvars.iv.next22 = add nuw nsw i64 %indvars.iv21, 1, !dbg !1390
  %exitcond23 = icmp eq i64 %indvars.iv.next22, 3, !dbg !1390
  br i1 %exitcond23, label %.preheader1, label %41, !dbg !1390

; <label>:46                                      ; preds = %.lr.ph, %192
  %indvars.iv19 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next20, %192 ]
  %47 = load [3 x [3 x float]]** %9, align 8, !dbg !1358, !tbaa !1064
  %48 = getelementptr inbounds [3 x [3 x float]]* %47, i64 %indvars.iv19, i64 0, !dbg !1394
  call fastcc void @mmul([3 x float]* %8, [3 x float]* %48, [3 x float]* %10) #11, !dbg !1395
  tail call void @llvm.dbg.value(metadata [3 x float]* %10, i64 0, metadata !808, metadata !877), !dbg !1396
  tail call void @llvm.dbg.value(metadata [3 x float]* %8, i64 0, metadata !809, metadata !877), !dbg !1397
  %49 = load float* %11, align 16, !dbg !1360, !tbaa !1005
  %50 = load float* %12, align 4, !dbg !1362, !tbaa !1005
  %51 = load float* %13, align 4, !dbg !1363, !tbaa !1005
  %52 = load float* %14, align 4, !dbg !1364, !tbaa !1005
  %53 = load float* %15, align 8, !dbg !1365, !tbaa !1005
  %54 = load float* %16, align 4, !dbg !1366, !tbaa !1005
  %55 = load float* %17, align 4, !dbg !1367, !tbaa !1005
  %56 = load float* %18, align 4, !dbg !1368, !tbaa !1005
  %57 = load float* %19, align 4, !dbg !1369, !tbaa !1005
  %58 = load float* %20, align 4, !dbg !1370, !tbaa !1005
  %59 = load float* %21, align 4, !dbg !1371, !tbaa !1005
  %60 = load float* %22, align 4, !dbg !1372, !tbaa !1005
  %61 = load float* %23, align 4, !dbg !1373, !tbaa !1005
  %62 = insertelement <4 x float> undef, float %49, i32 0, !dbg !1398
  %63 = insertelement <4 x float> %62, float %49, i32 1, !dbg !1398
  %64 = insertelement <4 x float> %63, float %49, i32 2, !dbg !1398
  %65 = insertelement <4 x float> %64, float %61, i32 3, !dbg !1398
  %66 = insertelement <4 x float> undef, float %50, i32 0, !dbg !1398
  %67 = insertelement <4 x float> %66, float %55, i32 1, !dbg !1398
  %68 = insertelement <4 x float> %67, float %58, i32 2, !dbg !1398
  %69 = insertelement <4 x float> %68, float %50, i32 3, !dbg !1398
  %70 = fmul <4 x float> %65, %69, !dbg !1398
  %71 = load float* %24, align 4, !dbg !1374, !tbaa !1005
  %72 = insertelement <4 x float> undef, float %51, i32 0, !dbg !1399
  %73 = insertelement <4 x float> %72, float %51, i32 1, !dbg !1399
  %74 = insertelement <4 x float> %73, float %51, i32 2, !dbg !1399
  %75 = insertelement <4 x float> %74, float %71, i32 3, !dbg !1399
  %76 = insertelement <4 x float> undef, float %52, i32 0, !dbg !1399
  %77 = insertelement <4 x float> %76, float %56, i32 1, !dbg !1399
  %78 = insertelement <4 x float> %77, float %59, i32 2, !dbg !1399
  %79 = insertelement <4 x float> %78, float %52, i32 3, !dbg !1399
  %80 = fmul <4 x float> %75, %79, !dbg !1399
  %81 = fadd <4 x float> %70, %80, !dbg !1400
  %82 = load float* %25, align 4, !dbg !1375, !tbaa !1005
  %83 = insertelement <4 x float> undef, float %53, i32 0, !dbg !1401
  %84 = insertelement <4 x float> %83, float %53, i32 1, !dbg !1401
  %85 = insertelement <4 x float> %84, float %53, i32 2, !dbg !1401
  %86 = insertelement <4 x float> %85, float %82, i32 3, !dbg !1401
  %87 = insertelement <4 x float> undef, float %54, i32 0, !dbg !1401
  %88 = insertelement <4 x float> %87, float %57, i32 1, !dbg !1401
  %89 = insertelement <4 x float> %88, float %60, i32 2, !dbg !1401
  %90 = insertelement <4 x float> %89, float %54, i32 3, !dbg !1401
  %91 = fmul <4 x float> %86, %90, !dbg !1401
  %92 = fadd <4 x float> %81, %91, !dbg !1402
  %93 = bitcast [3 x [3 x float]]* %S to <4 x float>*, !dbg !1403
  store <4 x float> %92, <4 x float>* %93, align 16, !dbg !1403, !tbaa !1005
  %94 = load float* %27, align 8, !dbg !1377, !tbaa !1005
  %95 = load float* %28, align 4, !dbg !1378, !tbaa !1005
  %96 = load float* %29, align 8, !dbg !1379, !tbaa !1005
  %97 = insertelement <4 x float> undef, float %61, i32 0, !dbg !1404
  %98 = insertelement <4 x float> %97, float %61, i32 1, !dbg !1404
  %99 = insertelement <4 x float> %98, float %94, i32 2, !dbg !1404
  %100 = insertelement <4 x float> %99, float %94, i32 3, !dbg !1404
  %101 = insertelement <4 x float> undef, float %55, i32 0, !dbg !1404
  %102 = insertelement <4 x float> %101, float %58, i32 1, !dbg !1404
  %103 = insertelement <4 x float> %102, float %50, i32 2, !dbg !1404
  %104 = insertelement <4 x float> %103, float %55, i32 3, !dbg !1404
  %105 = fmul <4 x float> %100, %104, !dbg !1404
  %106 = insertelement <4 x float> undef, float %71, i32 0, !dbg !1405
  %107 = insertelement <4 x float> %106, float %71, i32 1, !dbg !1405
  %108 = insertelement <4 x float> %107, float %95, i32 2, !dbg !1405
  %109 = insertelement <4 x float> %108, float %95, i32 3, !dbg !1405
  %110 = insertelement <4 x float> undef, float %56, i32 0, !dbg !1405
  %111 = insertelement <4 x float> %110, float %59, i32 1, !dbg !1405
  %112 = insertelement <4 x float> %111, float %52, i32 2, !dbg !1405
  %113 = insertelement <4 x float> %112, float %56, i32 3, !dbg !1405
  %114 = fmul <4 x float> %109, %113, !dbg !1405
  %115 = fadd <4 x float> %105, %114, !dbg !1406
  %116 = insertelement <4 x float> undef, float %82, i32 0, !dbg !1407
  %117 = insertelement <4 x float> %116, float %82, i32 1, !dbg !1407
  %118 = insertelement <4 x float> %117, float %96, i32 2, !dbg !1407
  %119 = insertelement <4 x float> %118, float %96, i32 3, !dbg !1407
  %120 = insertelement <4 x float> undef, float %57, i32 0, !dbg !1407
  %121 = insertelement <4 x float> %120, float %60, i32 1, !dbg !1407
  %122 = insertelement <4 x float> %121, float %54, i32 2, !dbg !1407
  %123 = insertelement <4 x float> %122, float %57, i32 3, !dbg !1407
  %124 = fmul <4 x float> %119, %123, !dbg !1407
  %125 = fadd <4 x float> %115, %124, !dbg !1408
  %126 = bitcast float* %26 to <4 x float>*, !dbg !1409
  store <4 x float> %125, <4 x float>* %126, align 4, !dbg !1409, !tbaa !1005
  %127 = fmul float %94, %58, !dbg !1410
  %128 = fmul float %95, %59, !dbg !1411
  %129 = fadd float %127, %128, !dbg !1412
  %130 = fmul float %96, %60, !dbg !1413
  %131 = fadd float %129, %130, !dbg !1414
  store float %131, float* %30, align 8, !dbg !1415, !tbaa !1005
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !563, metadata !877), !dbg !1383
  %132 = load double*** @print_orires_log.M, align 8, !dbg !1416, !tbaa !1170
  br label %.preheader, !dbg !1421

.preheader:                                       ; preds = %140, %46
  %indvars.iv10 = phi i64 [ 0, %46 ], [ %indvars.iv.next11, %140 ]
  %133 = getelementptr inbounds double** %132, i64 %indvars.iv10, !dbg !1416
  %134 = load double** %133, align 8, !dbg !1416, !tbaa !1170
  br label %135, !dbg !1422

; <label>:135                                     ; preds = %135, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %135 ]
  %136 = getelementptr inbounds [3 x [3 x float]]* %S, i64 0, i64 %indvars.iv10, i64 %indvars.iv, !dbg !1423
  %137 = load float* %136, align 4, !dbg !1423, !tbaa !1005
  %138 = fpext float %137 to double, !dbg !1423
  %139 = getelementptr inbounds double* %134, i64 %indvars.iv, !dbg !1416
  store double %138, double* %139, align 8, !dbg !1424, !tbaa !1018
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1422
  %exitcond = icmp eq i64 %indvars.iv.next, 3, !dbg !1422
  br i1 %exitcond, label %140, label %135, !dbg !1422

; <label>:140                                     ; preds = %135
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1, !dbg !1421
  %exitcond12 = icmp eq i64 %indvars.iv.next11, 3, !dbg !1421
  br i1 %exitcond12, label %141, label %.preheader, !dbg !1421

; <label>:141                                     ; preds = %140
  %142 = load double** @print_orires_log.eig, align 8, !dbg !1425, !tbaa !1170
  %143 = load double*** @print_orires_log.v, align 8, !dbg !1426, !tbaa !1170
  call void @llvm.dbg.value(metadata i32* %nrot, i64 0, metadata !565, metadata !877), !dbg !1427
  call void @jacobi(double** %132, i32 3, double* %142, double** %143, i32* %nrot) #8, !dbg !1428
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !564, metadata !877), !dbg !1429
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !563, metadata !877), !dbg !1383
  %144 = load double** @print_orires_log.eig, align 8, !dbg !1430, !tbaa !1170
  br label %145, !dbg !1434

; <label>:145                                     ; preds = %145, %141
  %indvars.iv13 = phi i64 [ 1, %141 ], [ %indvars.iv.next14, %145 ]
  %j.15 = phi i32 [ 0, %141 ], [ %j.2, %145 ]
  %146 = getelementptr inbounds double* %144, i64 %indvars.iv13, !dbg !1430
  %147 = load double* %146, align 8, !dbg !1430, !tbaa !1018
  tail call void @llvm.dbg.value(metadata float undef, i64 0, metadata !815, metadata !877), !dbg !1435
  %148 = sext i32 %j.15 to i64, !dbg !1437
  %149 = getelementptr inbounds double* %144, i64 %148, !dbg !1437
  %150 = load double* %149, align 8, !dbg !1437, !tbaa !1018
  %151 = insertelement <2 x double> undef, double %147, i32 0, !dbg !1430
  %152 = insertelement <2 x double> %151, double %150, i32 1, !dbg !1430
  %153 = fptrunc <2 x double> %152 to <2 x float>, !dbg !1430
  tail call void @llvm.dbg.value(metadata float undef, i64 0, metadata !815, metadata !877), !dbg !1438
  %154 = fmul <2 x float> %153, %153, !dbg !1440
  %155 = extractelement <2 x float> %154, i32 0, !dbg !1441
  %156 = extractelement <2 x float> %154, i32 1, !dbg !1441
  %157 = fcmp ogt float %155, %156, !dbg !1441
  %158 = trunc i64 %indvars.iv13 to i32, !dbg !1442
  %j.2 = select i1 %157, i32 %158, i32 %j.15, !dbg !1442
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1, !dbg !1434
  %exitcond15 = icmp eq i64 %indvars.iv.next14, 3, !dbg !1434
  br i1 %exitcond15, label %159, label %145, !dbg !1434

; <label>:159                                     ; preds = %145
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1, !dbg !1355
  %160 = trunc i64 %indvars.iv.next20 to i32, !dbg !1443
  %161 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %log, i8* getelementptr inbounds ([30 x i8]* @.str27, i64 0, i64 0), i32 %160) #8, !dbg !1443
  %162 = sext i32 %j.2 to i64, !dbg !1444
  %163 = load double** @print_orires_log.eig, align 8, !dbg !1444, !tbaa !1170
  %164 = getelementptr inbounds double* %163, i64 %162, !dbg !1444
  %165 = load double* %164, align 8, !dbg !1444, !tbaa !1018
  %166 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %log, i8* getelementptr inbounds ([25 x i8]* @.str28, i64 0, i64 0), double %165) #8, !dbg !1445
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !563, metadata !877), !dbg !1383
  br label %167, !dbg !1446

; <label>:167                                     ; preds = %177, %159
  %indvars.iv16 = phi i64 [ 0, %159 ], [ %indvars.iv.next17, %177 ]
  %168 = load double** @print_orires_log.eig, align 8, !dbg !1448, !tbaa !1170
  %169 = getelementptr inbounds double* %168, i64 %162, !dbg !1448
  %170 = load double* %169, align 8, !dbg !1448, !tbaa !1018
  %171 = call double @fabs(double %170) #10, !dbg !1450
  %172 = fcmp ogt double %171, 1.200000e-38, !dbg !1451
  br i1 %172, label %173, label %177, !dbg !1452

; <label>:173                                     ; preds = %167
  %174 = getelementptr inbounds double* %168, i64 %indvars.iv16, !dbg !1453
  %175 = load double* %174, align 8, !dbg !1453, !tbaa !1018
  %176 = fdiv double %175, %170, !dbg !1454
  br label %177, !dbg !1452

; <label>:177                                     ; preds = %167, %173
  %178 = phi double [ %176, %173 ], [ 0.000000e+00, %167 ], !dbg !1452
  %179 = load double*** @print_orires_log.v, align 8, !dbg !1455, !tbaa !1170
  %180 = load double** %179, align 8, !dbg !1455, !tbaa !1170
  %181 = getelementptr inbounds double* %180, i64 %indvars.iv16, !dbg !1455
  %182 = load double* %181, align 8, !dbg !1455, !tbaa !1018
  %183 = getelementptr inbounds double** %179, i64 1, !dbg !1456
  %184 = load double** %183, align 8, !dbg !1456, !tbaa !1170
  %185 = getelementptr inbounds double* %184, i64 %indvars.iv16, !dbg !1456
  %186 = load double* %185, align 8, !dbg !1456, !tbaa !1018
  %187 = getelementptr inbounds double** %179, i64 2, !dbg !1457
  %188 = load double** %187, align 8, !dbg !1457, !tbaa !1170
  %189 = getelementptr inbounds double* %188, i64 %indvars.iv16, !dbg !1457
  %190 = load double* %189, align 8, !dbg !1457, !tbaa !1018
  %191 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %log, i8* getelementptr inbounds ([36 x i8]* @.str29, i64 0, i64 0), double %178, double %182, double %186, double %190) #8, !dbg !1458
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !1446
  %exitcond18 = icmp eq i64 %indvars.iv.next17, 3, !dbg !1446
  br i1 %exitcond18, label %192, label %167, !dbg !1446

; <label>:192                                     ; preds = %177
  %fputc = call i32 @fputc(i32 10, %struct.__sFILE* %log), !dbg !1459
  %193 = load i32* %5, align 4, !dbg !1351, !tbaa !1061
  %194 = sext i32 %193 to i64, !dbg !1354
  %195 = icmp slt i64 %indvars.iv.next20, %194, !dbg !1354
  br i1 %195, label %46, label %._crit_edge, !dbg !1355

._crit_edge:                                      ; preds = %192, %.preheader1
  call void @llvm.lifetime.end(i64 36, i8* %2) #7, !dbg !1460
  call void @llvm.lifetime.end(i64 36, i8* %1) #7, !dbg !1460
  ret void, !dbg !1460
}
