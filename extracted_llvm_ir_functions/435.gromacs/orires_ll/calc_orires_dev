define float @calc_orires_dev(%struct.t_commrec* %mcr, i32 %nfa, i32* nocapture readonly %forceatoms, %union.t_iparams* nocapture readonly %ip, %struct.t_mdatoms* nocapture readonly %md, [3 x float]* nocapture readonly %x, %struct.t_fcdata* %fcd) #4 {
  %R = alloca [3 x [3 x float]], align 16
  %TMP = alloca [3 x [3 x float]], align 16
  %com = alloca [3 x float], align 4
  %1 = bitcast [3 x [3 x float]]* %R to i8*
  call void @llvm.lifetime.start(i64 36, i8* %1) #7
  %2 = bitcast [3 x [3 x float]]* %TMP to i8*
  call void @llvm.lifetime.start(i64 36, i8* %2) #7
  %3 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 1
  %4 = load float* %3, align 4, !tbaa !61
  %fabsf = tail call float @fabsf(float %4) #5
  %5 = fpext float %fabsf to double
  %6 = fcmp ogt double %5, 1.200000e-38
  %7 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 2
  %8 = load float* %7, align 4, !tbaa !27
  %9 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 12
  %10 = load [3 x [3 x float]]** %9, align 8, !tbaa !24
  %11 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 13
  %12 = load [5 x float]** %11, align 8, !tbaa !33
  %13 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 14
  %14 = load [5 x float]** %13, align 8, !tbaa !34
  %15 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 15
  %16 = load [5 x float]** %15, align 8, !tbaa !35
  %17 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 21
  %18 = load float**** %17, align 8, !tbaa !40
  %19 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 20
  %20 = load [5 x float]** %19, align 8, !tbaa !39
  %21 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 6
  %22 = load i32* %21, align 4, !tbaa !42
  %23 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 8
  %24 = load float** %23, align 8, !tbaa !47
  %25 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 9
  %26 = load [3 x float]** %25, align 8, !tbaa !48
  %27 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 10
  %28 = load [3 x float]** %27, align 8, !tbaa !49
  %29 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 3
  %30 = load float* %29, align 4, !tbaa !28
  %31 = fmul float %4, %30
  store float %31, float* %29, align 4, !tbaa !28
  %32 = icmp ne %struct.t_commrec* %mcr, null
  br i1 %32, label %33, label %39

; <label>:33                                      ; preds = %0
  %34 = getelementptr inbounds %struct.t_commrec* %mcr, i64 0, i32 1
  %35 = load i32* %34, align 4, !tbaa !55
  %36 = sitofp i32 %35 to double
  %37 = fdiv double 1.000000e+00, %36
  %38 = fptrunc double %37 to float
  br label %39

; <label>:39                                      ; preds = %0, %33
  %invn.0 = phi float [ %38, %33 ], [ 1.000000e+00, %0 ]
  %40 = getelementptr inbounds %struct.t_mdatoms* %md, i64 0, i32 1
  %41 = load i32* %40, align 4, !tbaa !43
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %.lr.ph59, label %._crit_edge143

._crit_edge143:                                   ; preds = %39
  %.pre144 = getelementptr inbounds [3 x float]* %com, i64 0, i64 0
  %.pre145 = getelementptr inbounds [3 x float]* %com, i64 0, i64 1
  %.pre147 = getelementptr inbounds [3 x float]* %com, i64 0, i64 2
  br label %80

.lr.ph59:                                         ; preds = %39
  %43 = getelementptr inbounds %struct.t_mdatoms* %md, i64 0, i32 22
  %44 = load i16** %43, align 8, !tbaa !45
  %45 = sext i32 %41 to i64
  br label %46

; <label>:46                                      ; preds = %.lr.ph59, %78
  %indvars.iv121 = phi i64 [ 0, %.lr.ph59 ], [ %indvars.iv.next122, %78 ]
  %j.056 = phi i32 [ 0, %.lr.ph59 ], [ %j.1, %78 ]
  %47 = getelementptr inbounds i16* %44, i64 %indvars.iv121
  %48 = load i16* %47, align 2, !tbaa !46
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %50, label %78

; <label>:50                                      ; preds = %46
  %51 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv121, i64 0
  %52 = sext i32 %j.056 to i64
  %53 = getelementptr inbounds [3 x float]* %28, i64 %52, i64 0
  %54 = bitcast float* %51 to i32*
  %55 = load i32* %54, align 4, !tbaa !14
  %56 = bitcast float* %53 to i32*
  store i32 %55, i32* %56, align 4, !tbaa !14
  %57 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv121, i64 1
  %58 = bitcast float* %57 to i32*
  %59 = load i32* %58, align 4, !tbaa !14
  %60 = getelementptr inbounds [3 x float]* %28, i64 %52, i64 1
  %61 = bitcast float* %60 to i32*
  store i32 %59, i32* %61, align 4, !tbaa !14
  %62 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv121, i64 2
  %63 = bitcast float* %62 to i32*
  %64 = load i32* %63, align 4, !tbaa !14
  %65 = getelementptr inbounds [3 x float]* %28, i64 %52, i64 2
  %66 = bitcast float* %65 to i32*
  store i32 %64, i32* %66, align 4, !tbaa !14
  %67 = getelementptr inbounds float* %24, i64 %52
  %68 = load float* %67, align 4, !tbaa !14
  br label %69

; <label>:69                                      ; preds = %69, %50
  %indvars.iv118 = phi i64 [ 0, %50 ], [ %indvars.iv.next119, %69 ]
  %70 = getelementptr inbounds [3 x float]* %26, i64 %52, i64 %indvars.iv118
  %71 = load float* %70, align 4, !tbaa !14
  %72 = fmul float %68, %71
  %73 = getelementptr inbounds [3 x float]* %com, i64 0, i64 %indvars.iv118
  %74 = load float* %73, align 4, !tbaa !14
  %75 = fadd float %74, %72
  store float %75, float* %73, align 4, !tbaa !14
  %indvars.iv.next119 = add nuw nsw i64 %indvars.iv118, 1
  %exitcond120 = icmp eq i64 %indvars.iv.next119, 3
  br i1 %exitcond120, label %76, label %69

; <label>:76                                      ; preds = %69
  %77 = add nsw i32 %j.056, 1
  br label %78

; <label>:78                                      ; preds = %46, %76
  %j.1 = phi i32 [ %77, %76 ], [ %j.056, %46 ]
  %indvars.iv.next122 = add nuw nsw i64 %indvars.iv121, 1
  %79 = icmp slt i64 %indvars.iv.next122, %45
  br i1 %79, label %46, label %._crit_edge60

._crit_edge60:                                    ; preds = %78
  %.phi.trans.insert = getelementptr inbounds [3 x float]* %com, i64 0, i64 0
  %.pre = load float* %.phi.trans.insert, align 4, !tbaa !14
  %.phi.trans.insert123 = getelementptr inbounds [3 x float]* %com, i64 0, i64 1
  %.pre124 = load float* %.phi.trans.insert123, align 4, !tbaa !14
  %.phi.trans.insert125 = getelementptr inbounds [3 x float]* %com, i64 0, i64 2
  %.pre126 = load float* %.phi.trans.insert125, align 4, !tbaa !14
  br label %80

; <label>:80                                      ; preds = %._crit_edge143, %._crit_edge60
  %.pre-phi148 = phi float* [ %.pre147, %._crit_edge143 ], [ %.phi.trans.insert125, %._crit_edge60 ]
  %.pre-phi146 = phi float* [ %.pre145, %._crit_edge143 ], [ %.phi.trans.insert123, %._crit_edge60 ]
  %.pre-phi = phi float* [ %.pre144, %._crit_edge143 ], [ %.phi.trans.insert, %._crit_edge60 ]
  %81 = phi float [ undef, %._crit_edge143 ], [ %.pre126, %._crit_edge60 ]
  %82 = phi float [ undef, %._crit_edge143 ], [ %.pre124, %._crit_edge60 ]
  %83 = phi float [ undef, %._crit_edge143 ], [ %.pre, %._crit_edge60 ]
  %84 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 7
  %85 = load float* %84, align 4, !tbaa !54
  %86 = fmul float %85, %83
  store float %86, float* %.pre-phi, align 4, !tbaa !14
  %87 = fmul float %85, %82
  store float %87, float* %.pre-phi146, align 4, !tbaa !14
  %88 = fmul float %85, %81
  store float %88, float* %.pre-phi148, align 4, !tbaa !14
  %89 = icmp sgt i32 %22, 0
  br i1 %89, label %.lr.ph53, label %._crit_edge54

.lr.ph53:                                         ; preds = %80
  %90 = add i32 %22, -1
  br label %91

; <label>:91                                      ; preds = %91, %.lr.ph53
  %indvars.iv114 = phi i64 [ 0, %.lr.ph53 ], [ %indvars.iv.next115, %91 ]
  %92 = getelementptr inbounds [3 x float]* %28, i64 %indvars.iv114, i64 0
  %93 = load float* %92, align 4, !tbaa !14
  %94 = fsub float %93, %86
  %95 = getelementptr inbounds [3 x float]* %28, i64 %indvars.iv114, i64 1
  %96 = load float* %95, align 4, !tbaa !14
  %97 = fsub float %96, %87
  %98 = getelementptr inbounds [3 x float]* %28, i64 %indvars.iv114, i64 2
  %99 = load float* %98, align 4, !tbaa !14
  %100 = fsub float %99, %88
  store float %94, float* %92, align 4, !tbaa !14
  store float %97, float* %95, align 4, !tbaa !14
  store float %100, float* %98, align 4, !tbaa !14
  %indvars.iv.next115 = add nuw nsw i64 %indvars.iv114, 1
  %lftr.wideiv116 = trunc i64 %indvars.iv114 to i32
  %exitcond117 = icmp eq i32 %lftr.wideiv116, %90
  br i1 %exitcond117, label %._crit_edge54, label %91

._crit_edge54:                                    ; preds = %91, %80
  %101 = getelementptr inbounds [3 x [3 x float]]* %R, i64 0, i64 0
  call void @calc_fit_R(i32 %22, float* %24, [3 x float]* %26, [3 x float]* %28, [3 x float]* %101) #8
  %102 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 0
  %103 = bitcast [3 x [3 x float]]* %R to i64*
  %104 = load i64* %103, align 16
  %105 = trunc i64 %104 to i32
  %106 = bitcast [3 x float]* %102 to i32*
  store i32 %105, i32* %106, align 4, !tbaa !14
  %107 = getelementptr inbounds [3 x [3 x float]]* %R, i64 0, i64 0, i64 1
  %108 = lshr i64 %104, 32
  %109 = trunc i64 %108 to i32
  %110 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 0, i64 1
  %111 = bitcast float* %110 to i32*
  store i32 %109, i32* %111, align 4, !tbaa !14
  %112 = getelementptr inbounds [3 x [3 x float]]* %R, i64 0, i64 0, i64 2
  %113 = bitcast float* %112 to i64*
  %114 = load i64* %113, align 8
  %115 = trunc i64 %114 to i32
  %116 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 0, i64 2
  %117 = bitcast float* %116 to i32*
  store i32 %115, i32* %117, align 4, !tbaa !14
  %118 = getelementptr inbounds [3 x [3 x float]]* %R, i64 0, i64 1, i64 0
  %119 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 1, i64 0
  %120 = lshr i64 %114, 32
  %121 = trunc i64 %120 to i32
  %122 = bitcast float* %119 to i32*
  store i32 %121, i32* %122, align 4, !tbaa !14
  %123 = getelementptr inbounds [3 x [3 x float]]* %R, i64 0, i64 1, i64 1
  %124 = bitcast float* %123 to i32*
  %125 = load i32* %124, align 4, !tbaa !14
  %126 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 1, i64 1
  %127 = bitcast float* %126 to i32*
  store i32 %125, i32* %127, align 4, !tbaa !14
  %128 = getelementptr inbounds [3 x [3 x float]]* %R, i64 0, i64 1, i64 2
  %129 = bitcast float* %128 to i32*
  %130 = load i32* %129, align 4, !tbaa !14
  %131 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 1, i64 2
  %132 = bitcast float* %131 to i32*
  store i32 %130, i32* %132, align 4, !tbaa !14
  %133 = getelementptr inbounds [3 x [3 x float]]* %R, i64 0, i64 2, i64 0
  %134 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 2, i64 0
  %135 = bitcast float* %133 to i64*
  %136 = load i64* %135, align 8
  %137 = trunc i64 %136 to i32
  %138 = bitcast float* %134 to i32*
  store i32 %137, i32* %138, align 4, !tbaa !14
  %139 = getelementptr inbounds [3 x [3 x float]]* %R, i64 0, i64 2, i64 1
  %140 = lshr i64 %136, 32
  %141 = trunc i64 %140 to i32
  %142 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 2, i64 1
  %143 = bitcast float* %142 to i32*
  store i32 %141, i32* %143, align 4, !tbaa !14
  %144 = getelementptr inbounds [3 x [3 x float]]* %R, i64 0, i64 2, i64 2
  %145 = bitcast float* %144 to i32*
  %146 = load i32* %145, align 8, !tbaa !14
  %147 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 11, i64 2, i64 2
  %148 = bitcast float* %147 to i32*
  store i32 %146, i32* %148, align 4, !tbaa !14
  %149 = icmp sgt i32 %nfa, 0
  br i1 %149, label %.lr.ph49, label %._crit_edge50

.lr.ph49:                                         ; preds = %._crit_edge54
  %150 = bitcast i32 %146 to float
  %151 = bitcast i32 %141 to float
  %152 = bitcast i32 %137 to float
  %153 = bitcast i32 %130 to float
  %154 = bitcast i32 %125 to float
  %155 = bitcast i32 %121 to float
  %156 = bitcast i32 %115 to float
  %157 = bitcast i32 %109 to float
  %158 = bitcast i32 %105 to float
  %159 = getelementptr inbounds [3 x [3 x float]]* %R, i64 0, i64 0, i64 0
  %160 = sext i32 %nfa to i64
  br label %161

; <label>:161                                     ; preds = %._crit_edge127, %.lr.ph49
  %162 = phi float [ %150, %.lr.ph49 ], [ %.pre136, %._crit_edge127 ]
  %163 = phi float [ %151, %.lr.ph49 ], [ %.pre135, %._crit_edge127 ]
  %164 = phi float [ %152, %.lr.ph49 ], [ %.pre134, %._crit_edge127 ]
  %165 = phi float [ %153, %.lr.ph49 ], [ %.pre133, %._crit_edge127 ]
  %166 = phi float [ %154, %.lr.ph49 ], [ %.pre132, %._crit_edge127 ]
  %167 = phi float [ %155, %.lr.ph49 ], [ %.pre131, %._crit_edge127 ]
  %168 = phi float [ %156, %.lr.ph49 ], [ %.pre130, %._crit_edge127 ]
  %169 = phi float [ %157, %.lr.ph49 ], [ %.pre129, %._crit_edge127 ]
  %170 = phi float [ %158, %.lr.ph49 ], [ %.pre128, %._crit_edge127 ]
  %indvars.iv112 = phi i64 [ 0, %.lr.ph49 ], [ %indvars.iv.next113, %._crit_edge127 ]
  %indvars.iv110 = phi i64 [ 0, %.lr.ph49 ], [ %indvars.iv.next111, %._crit_edge127 ]
  %171 = getelementptr inbounds i32* %forceatoms, i64 %indvars.iv110
  %172 = load i32* %171, align 4, !tbaa !30
  %173 = add nuw nsw i64 %indvars.iv110, 1
  %174 = getelementptr inbounds i32* %forceatoms, i64 %173
  %175 = load i32* %174, align 4, !tbaa !30
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds [3 x float]* %x, i64 %176, i64 0
  %178 = add nuw nsw i64 %indvars.iv110, 2
  %179 = getelementptr inbounds i32* %forceatoms, i64 %178
  %180 = load i32* %179, align 4, !tbaa !30
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds [3 x float]* %x, i64 %181, i64 0
  %183 = load float* %177, align 4, !tbaa !14
  %184 = load float* %182, align 4, !tbaa !14
  %185 = fsub float %183, %184
  %186 = getelementptr inbounds [3 x float]* %x, i64 %176, i64 1
  %187 = load float* %186, align 4, !tbaa !14
  %188 = getelementptr inbounds [3 x float]* %x, i64 %181, i64 1
  %189 = load float* %188, align 4, !tbaa !14
  %190 = fsub float %187, %189
  %191 = getelementptr inbounds [3 x float]* %x, i64 %176, i64 2
  %192 = load float* %191, align 4, !tbaa !14
  %193 = getelementptr inbounds [3 x float]* %x, i64 %181, i64 2
  %194 = load float* %193, align 4, !tbaa !14
  %195 = fsub float %192, %194
  %196 = fmul float %185, %170
  %197 = fmul float %190, %169
  %198 = fadd float %196, %197
  %199 = fmul float %195, %168
  %200 = fadd float %198, %199
  %201 = fmul float %185, %167
  %202 = fmul float %190, %166
  %203 = fadd float %201, %202
  %204 = fmul float %195, %165
  %205 = fadd float %203, %204
  %206 = fmul float %185, %164
  %207 = fmul float %190, %163
  %208 = fadd float %206, %207
  %209 = fmul float %195, %162
  %210 = fadd float %208, %209
  %211 = fmul float %200, %200
  %212 = fmul float %205, %205
  %213 = fadd float %211, %212
  %214 = fmul float %210, %210
  %215 = fadd float %213, %214
  %216 = fpext float %215 to double
  %217 = call double @sqrt(double %216) #10
  %218 = fdiv double 1.000000e+00, %217
  %219 = fptrunc double %218 to float
  %220 = sext i32 %172 to i64
  %221 = getelementptr inbounds %union.t_iparams* %ip, i64 %220, i32 0, i32 3
  %222 = load float* %221, align 4, !tbaa !62
  %223 = fmul float %222, %219
  %224 = fmul float %219, %223
  %225 = fmul float %224, 3.000000e+00
  %226 = getelementptr inbounds %union.t_iparams* %ip, i64 %220, i32 0, i32 1
  %227 = bitcast float* %226 to i32*
  %228 = load i32* %227, align 4, !tbaa !63
  %229 = icmp sgt i32 %228, 0
  br i1 %229, label %.lr.ph42, label %._crit_edge43

.lr.ph42:                                         ; preds = %161, %.lr.ph42
  %i.140 = phi i32 [ %231, %.lr.ph42 ], [ 0, %161 ]
  %pfac.039 = phi float [ %230, %.lr.ph42 ], [ %225, %161 ]
  %230 = fmul float %219, %pfac.039
  %231 = add nuw nsw i32 %i.140, 1
  %232 = icmp slt i32 %231, %228
  br i1 %232, label %.lr.ph42, label %._crit_edge43

._crit_edge43:                                    ; preds = %.lr.ph42, %161
  %pfac.0.lcssa = phi float [ %225, %161 ], [ %230, %.lr.ph42 ]
  %233 = fmul float %200, 2.000000e+00
  %234 = fmul float %200, %233
  %235 = fadd float %234, %212
  %236 = fsub float %235, %215
  %237 = getelementptr inbounds [5 x float]* %12, i64 %indvars.iv112, i64 0
  %238 = fmul float %233, %205
  %239 = fmul float %233, %210
  %240 = fmul float %205, 2.000000e+00
  %241 = fmul float %205, %240
  %242 = fadd float %211, %241
  %243 = fsub float %242, %215
  %244 = insertelement <4 x float> undef, float %236, i32 0
  %245 = insertelement <4 x float> %244, float %238, i32 1
  %246 = insertelement <4 x float> %245, float %239, i32 2
  %247 = insertelement <4 x float> %246, float %243, i32 3
  %248 = insertelement <4 x float> undef, float %pfac.0.lcssa, i32 0
  %249 = insertelement <4 x float> %248, float %pfac.0.lcssa, i32 1
  %250 = insertelement <4 x float> %249, float %pfac.0.lcssa, i32 2
  %251 = insertelement <4 x float> %250, float %pfac.0.lcssa, i32 3
  %252 = fmul <4 x float> %247, %251
  %253 = bitcast float* %237 to <4 x float>*
  store <4 x float> %252, <4 x float>* %253, align 4, !tbaa !14
  %254 = fmul float %240, %210
  %255 = fmul float %254, %pfac.0.lcssa
  %256 = getelementptr inbounds [5 x float]* %12, i64 %indvars.iv112, i64 4
  store float %255, float* %256, align 4, !tbaa !14
  br i1 %32, label %.preheader6.preheader, label %.loopexit7

.preheader6.preheader:                            ; preds = %._crit_edge43
  %257 = extractelement <4 x float> %252, i32 0
  %258 = fmul float %invn.0, %257
  %259 = getelementptr inbounds [5 x float]* %14, i64 %indvars.iv112, i64 0
  store float %258, float* %259, align 4, !tbaa !14
  br label %._crit_edge137

._crit_edge137:                                   ; preds = %.preheader6.preheader, %._crit_edge137
  %indvars.iv.next108157 = phi i64 [ 1, %.preheader6.preheader ], [ %indvars.iv.next108, %._crit_edge137 ]
  %.phi.trans.insert138 = getelementptr inbounds [5 x float]* %12, i64 %indvars.iv112, i64 %indvars.iv.next108157
  %.pre139 = load float* %.phi.trans.insert138, align 4, !tbaa !14
  %260 = fmul float %invn.0, %.pre139
  %261 = getelementptr inbounds [5 x float]* %14, i64 %indvars.iv112, i64 %indvars.iv.next108157
  store float %260, float* %261, align 4, !tbaa !14
  %indvars.iv.next108 = add nuw nsw i64 %indvars.iv.next108157, 1
  %exitcond109 = icmp eq i64 %indvars.iv.next108, 5
  br i1 %exitcond109, label %.loopexit7, label %._crit_edge137

.loopexit7:                                       ; preds = %._crit_edge137, %._crit_edge43
  %indvars.iv.next111 = add nuw nsw i64 %indvars.iv110, 3
  %262 = icmp slt i64 %indvars.iv.next111, %160
  br i1 %262, label %._crit_edge127, label %._crit_edge50

._crit_edge127:                                   ; preds = %.loopexit7
  %indvars.iv.next113 = add nuw nsw i64 %indvars.iv112, 1
  %.pre128 = load float* %159, align 16, !tbaa !14
  %.pre129 = load float* %107, align 4, !tbaa !14
  %.pre130 = load float* %112, align 8, !tbaa !14
  %.pre131 = load float* %118, align 4, !tbaa !14
  %.pre132 = load float* %123, align 4, !tbaa !14
  %.pre133 = load float* %128, align 4, !tbaa !14
  %.pre134 = load float* %133, align 8, !tbaa !14
  %.pre135 = load float* %139, align 4, !tbaa !14
  %.pre136 = load float* %144, align 8, !tbaa !14
  br label %161

._crit_edge50:                                    ; preds = %.loopexit7, %._crit_edge54
  br i1 %32, label %263, label %268

; <label>:263                                     ; preds = %._crit_edge50
  %264 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 4
  %265 = load i32* %264, align 4, !tbaa !29
  %266 = mul nsw i32 %265, 5
  %267 = getelementptr inbounds [5 x float]* %14, i64 0, i64 0
  call void @gmx_sumf(i32 %266, float* %267, %struct.t_commrec* %mcr) #8
  br label %268

; <label>:268                                     ; preds = %263, %._crit_edge50
  %269 = load float* %29, align 4, !tbaa !28
  %270 = fpext float %269 to double
  %271 = fsub double 1.000000e+00, %270
  %272 = fdiv double 1.000000e+00, %271
  %273 = fptrunc double %272 to float
  %274 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 5
  %275 = load i32* %274, align 4, !tbaa !23
  %276 = icmp sgt i32 %275, 0
  br i1 %276, label %.preheader5.lr.ph, label %.preheader4

.preheader5.lr.ph:                                ; preds = %268
  %277 = sext i32 %275 to i64
  br label %.preheader5

.preheader5:                                      ; preds = %.preheader5.lr.ph, %288
  %indvars.iv105 = phi i64 [ 0, %.preheader5.lr.ph ], [ %indvars.iv.next106, %288 ]
  %278 = getelementptr inbounds float*** %18, i64 %indvars.iv105
  br label %280

.preheader4:                                      ; preds = %288, %268
  br i1 %149, label %.lr.ph31, label %.preheader2

.lr.ph31:                                         ; preds = %.preheader4
  %279 = sext i32 %nfa to i64
  br label %293

; <label>:280                                     ; preds = %280, %.preheader5
  %indvars.iv101 = phi i64 [ 0, %.preheader5 ], [ %indvars.iv.next102, %280 ]
  %281 = getelementptr inbounds [5 x float]* %20, i64 %indvars.iv105, i64 %indvars.iv101
  store float 0.000000e+00, float* %281, align 4, !tbaa !14
  %282 = shl i64 %indvars.iv101, 2
  %283 = add nuw nsw i64 %282, 4
  %284 = load float*** %278, align 8, !tbaa !41
  %285 = getelementptr inbounds float** %284, i64 %indvars.iv101
  %286 = bitcast float** %285 to i8**
  %287 = load i8** %286, align 8, !tbaa !41
  call void @llvm.memset.p0i8.i64(i8* %287, i8 0, i64 %283, i32 4, i1 false)
  %indvars.iv.next102 = add nuw nsw i64 %indvars.iv101, 1
  %exitcond103 = icmp eq i64 %indvars.iv.next102, 5
  br i1 %exitcond103, label %288, label %280

; <label>:288                                     ; preds = %280
  %indvars.iv.next106 = add nuw nsw i64 %indvars.iv105, 1
  %289 = icmp slt i64 %indvars.iv.next106, %277
  br i1 %289, label %.preheader5, label %.preheader4

.preheader2:                                      ; preds = %332, %.preheader4
  %290 = load i32* %274, align 4, !tbaa !23
  %291 = icmp sgt i32 %290, 0
  br i1 %291, label %.preheader1.lr.ph, label %.preheader

.preheader1.lr.ph:                                ; preds = %.preheader2
  %292 = fmul float %273, %273
  br label %.preheader1

; <label>:293                                     ; preds = %.lr.ph31, %332
  %indvars.iv93 = phi i64 [ 0, %.lr.ph31 ], [ %indvars.iv.next94, %332 ]
  %indvars.iv91 = phi i64 [ 0, %.lr.ph31 ], [ %indvars.iv.next92, %332 ]
  br i1 %6, label %.preheader3, label %.loopexit

.preheader3:                                      ; preds = %293, %.preheader3
  %indvars.iv79 = phi i64 [ %indvars.iv.next80, %.preheader3 ], [ 0, %293 ]
  %294 = getelementptr inbounds [5 x float]* %16, i64 %indvars.iv93, i64 %indvars.iv79
  %295 = load float* %294, align 4, !tbaa !14
  %296 = fmul float %4, %295
  %297 = getelementptr inbounds [5 x float]* %14, i64 %indvars.iv93, i64 %indvars.iv79
  %298 = load float* %297, align 4, !tbaa !14
  %299 = fmul float %8, %298
  %300 = fadd float %296, %299
  store float %300, float* %294, align 4, !tbaa !14
  %indvars.iv.next80 = add nuw nsw i64 %indvars.iv79, 1
  %exitcond81 = icmp eq i64 %indvars.iv.next80, 5
  br i1 %exitcond81, label %.loopexit, label %.preheader3

.loopexit:                                        ; preds = %.preheader3, %293
  %301 = getelementptr inbounds i32* %forceatoms, i64 %indvars.iv91
  %302 = load i32* %301, align 4, !tbaa !30
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds %union.t_iparams* %ip, i64 %303
  %305 = bitcast %union.t_iparams* %304 to i32*
  %306 = load i32* %305, align 4, !tbaa !31
  %307 = getelementptr inbounds %union.t_iparams* %ip, i64 %303, i32 0, i32 5
  %308 = load float* %307, align 4, !tbaa !64
  %309 = getelementptr inbounds %union.t_iparams* %ip, i64 %303, i32 0, i32 4
  %310 = sext i32 %306 to i64
  %311 = getelementptr inbounds float*** %18, i64 %310
  br label %.lr.ph26

.lr.ph26:                                         ; preds = %.loopexit, %._crit_edge27
  %indvars.iv88 = phi i64 [ 0, %.loopexit ], [ %indvars.iv.next89, %._crit_edge27 ]
  %indvars.iv84 = phi i32 [ 1, %.loopexit ], [ %indvars.iv.next85, %._crit_edge27 ]
  %312 = getelementptr inbounds [5 x float]* %16, i64 %indvars.iv93, i64 %indvars.iv88
  %313 = load float* %312, align 4, !tbaa !14
  %314 = load float* %309, align 4, !tbaa !65
  %315 = fmul float %313, %314
  %316 = fmul float %308, %315
  %317 = getelementptr inbounds [5 x float]* %20, i64 %310, i64 %indvars.iv88
  %318 = load float* %317, align 4, !tbaa !14
  %319 = fadd float %318, %316
  store float %319, float* %317, align 4, !tbaa !14
  %320 = load float*** %311, align 8, !tbaa !41
  %321 = getelementptr inbounds float** %320, i64 %indvars.iv88
  %322 = load float** %321, align 8, !tbaa !41
  br label %323

; <label>:323                                     ; preds = %323, %.lr.ph26
  %indvars.iv82 = phi i64 [ %indvars.iv.next83, %323 ], [ 0, %.lr.ph26 ]
  %324 = load float* %312, align 4, !tbaa !14
  %325 = getelementptr inbounds [5 x float]* %16, i64 %indvars.iv93, i64 %indvars.iv82
  %326 = load float* %325, align 4, !tbaa !14
  %327 = fmul float %324, %326
  %328 = fmul float %308, %327
  %329 = getelementptr inbounds float* %322, i64 %indvars.iv82
  %330 = load float* %329, align 4, !tbaa !14
  %331 = fadd float %328, %330
  store float %331, float* %329, align 4, !tbaa !14
  %indvars.iv.next83 = add nuw nsw i64 %indvars.iv82, 1
  %lftr.wideiv86 = trunc i64 %indvars.iv.next83 to i32
  %exitcond87 = icmp eq i32 %lftr.wideiv86, %indvars.iv84
  br i1 %exitcond87, label %._crit_edge27, label %323

._crit_edge27:                                    ; preds = %323
  %indvars.iv.next89 = add nuw nsw i64 %indvars.iv88, 1
  %indvars.iv.next85 = add nuw nsw i32 %indvars.iv84, 1
  %exitcond90 = icmp eq i64 %indvars.iv.next89, 5
  br i1 %exitcond90, label %332, label %.lr.ph26

; <label>:332                                     ; preds = %._crit_edge27
  %indvars.iv.next94 = add nuw nsw i64 %indvars.iv93, 1
  %indvars.iv.next92 = add nuw nsw i64 %indvars.iv91, 3
  %333 = icmp slt i64 %indvars.iv.next92, %279
  br i1 %333, label %293, label %.preheader2

.preheader1:                                      ; preds = %.preheader1.lr.ph, %433
  %indvars.iv77 = phi i64 [ 0, %.preheader1.lr.ph ], [ %indvars.iv.next78, %433 ]
  %334 = getelementptr inbounds float*** %18, i64 %indvars.iv77
  %335 = load float*** %334, align 8, !tbaa !41
  br label %343

.preheader:                                       ; preds = %433, %.preheader2
  %336 = phi i32 [ %290, %.preheader2 ], [ %440, %433 ]
  br i1 %149, label %.lr.ph13, label %._crit_edge14

.lr.ph13:                                         ; preds = %.preheader
  %337 = fmul float %273, 0x3FE5555560000000
  %338 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 18
  %339 = load float** %338, align 8, !tbaa !38
  %340 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 17
  %341 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 16
  %342 = sext i32 %nfa to i64
  br label %443

; <label>:343                                     ; preds = %._crit_edge19, %.preheader1
  %indvars.iv71 = phi i64 [ 0, %.preheader1 ], [ %indvars.iv.next72, %._crit_edge19 ]
  %indvars.iv69 = phi i32 [ -1, %.preheader1 ], [ %indvars.iv.next70, %._crit_edge19 ]
  %344 = getelementptr inbounds [5 x float]* %20, i64 %indvars.iv77, i64 %indvars.iv71
  %345 = load float* %344, align 4, !tbaa !14
  %346 = fmul float %273, %345
  store float %346, float* %344, align 4, !tbaa !14
  %347 = getelementptr inbounds float** %335, i64 %indvars.iv71
  %348 = load float** %347, align 8, !tbaa !41
  %349 = getelementptr inbounds float* %348, i64 %indvars.iv71
  %350 = load float* %349, align 4, !tbaa !14
  %351 = fmul float %292, %350
  store float %351, float* %349, align 4, !tbaa !14
  %352 = icmp sgt i64 %indvars.iv71, 0
  br i1 %352, label %.lr.ph18, label %._crit_edge19

.lr.ph18:                                         ; preds = %343, %.lr.ph18
  %indvars.iv67 = phi i64 [ %indvars.iv.next68, %.lr.ph18 ], [ 0, %343 ]
  %353 = getelementptr inbounds float* %348, i64 %indvars.iv67
  %354 = load float* %353, align 4, !tbaa !14
  %355 = fmul float %292, %354
  store float %355, float* %353, align 4, !tbaa !14
  %356 = getelementptr inbounds float** %335, i64 %indvars.iv67
  %357 = load float** %356, align 8, !tbaa !41
  %358 = getelementptr inbounds float* %357, i64 %indvars.iv71
  store float %355, float* %358, align 4, !tbaa !14
  %indvars.iv.next68 = add nuw nsw i64 %indvars.iv67, 1
  %lftr.wideiv = trunc i64 %indvars.iv67 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %indvars.iv69
  br i1 %exitcond, label %._crit_edge19, label %.lr.ph18

._crit_edge19:                                    ; preds = %.lr.ph18, %343
  %indvars.iv.next72 = add nuw nsw i64 %indvars.iv71, 1
  %indvars.iv.next70 = add nsw i32 %indvars.iv69, 1
  %exitcond73 = icmp eq i64 %indvars.iv.next72, 5
  br i1 %exitcond73, label %359, label %343

; <label>:359                                     ; preds = %._crit_edge19
  %360 = call i32 @m_inv_gen(float** %335, i32 5, float** %335) #8
  %361 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %indvars.iv77, i64 0, i64 0
  store float 0.000000e+00, float* %361, align 4, !tbaa !14
  %362 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %indvars.iv77, i64 0, i64 1
  store float 0.000000e+00, float* %362, align 4, !tbaa !14
  %363 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %indvars.iv77, i64 0, i64 2
  store float 0.000000e+00, float* %363, align 4, !tbaa !14
  %364 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %indvars.iv77, i64 1, i64 1
  store float 0.000000e+00, float* %364, align 4, !tbaa !14
  %365 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %indvars.iv77, i64 1, i64 2
  store float 0.000000e+00, float* %365, align 4, !tbaa !14
  %366 = load float*** %334, align 8, !tbaa !41
  %367 = load float** %366, align 8, !tbaa !41
  %368 = getelementptr inbounds float** %366, i64 1
  %369 = load float** %368, align 8, !tbaa !41
  %370 = getelementptr inbounds float** %366, i64 2
  %371 = load float** %370, align 8, !tbaa !41
  %372 = getelementptr inbounds float** %366, i64 3
  %373 = load float** %372, align 8, !tbaa !41
  %374 = getelementptr inbounds float** %366, i64 4
  %375 = load float** %374, align 8, !tbaa !41
  br label %376

; <label>:376                                     ; preds = %376, %359
  %377 = phi float [ 0.000000e+00, %359 ], [ %432, %376 ]
  %378 = phi float [ 0.000000e+00, %359 ], [ %422, %376 ]
  %379 = phi float [ 0.000000e+00, %359 ], [ %412, %376 ]
  %380 = phi float [ 0.000000e+00, %359 ], [ %402, %376 ]
  %381 = phi float [ 0.000000e+00, %359 ], [ %392, %376 ]
  %indvars.iv74 = phi i64 [ 0, %359 ], [ %indvars.iv.next75, %376 ]
  %382 = getelementptr inbounds float* %367, i64 %indvars.iv74
  %383 = load float* %382, align 4, !tbaa !14
  %384 = fpext float %383 to double
  %385 = fmul double %384, 1.500000e+00
  %386 = getelementptr inbounds [5 x float]* %20, i64 %indvars.iv77, i64 %indvars.iv74
  %387 = load float* %386, align 4, !tbaa !14
  %388 = fpext float %387 to double
  %389 = fmul double %385, %388
  %390 = fpext float %381 to double
  %391 = fadd double %390, %389
  %392 = fptrunc double %391 to float
  store float %392, float* %361, align 4, !tbaa !14
  %393 = getelementptr inbounds float* %369, i64 %indvars.iv74
  %394 = load float* %393, align 4, !tbaa !14
  %395 = fpext float %394 to double
  %396 = fmul double %395, 1.500000e+00
  %397 = load float* %386, align 4, !tbaa !14
  %398 = fpext float %397 to double
  %399 = fmul double %396, %398
  %400 = fpext float %380 to double
  %401 = fadd double %400, %399
  %402 = fptrunc double %401 to float
  store float %402, float* %362, align 4, !tbaa !14
  %403 = getelementptr inbounds float* %371, i64 %indvars.iv74
  %404 = load float* %403, align 4, !tbaa !14
  %405 = fpext float %404 to double
  %406 = fmul double %405, 1.500000e+00
  %407 = load float* %386, align 4, !tbaa !14
  %408 = fpext float %407 to double
  %409 = fmul double %406, %408
  %410 = fpext float %379 to double
  %411 = fadd double %410, %409
  %412 = fptrunc double %411 to float
  store float %412, float* %363, align 4, !tbaa !14
  %413 = getelementptr inbounds float* %373, i64 %indvars.iv74
  %414 = load float* %413, align 4, !tbaa !14
  %415 = fpext float %414 to double
  %416 = fmul double %415, 1.500000e+00
  %417 = load float* %386, align 4, !tbaa !14
  %418 = fpext float %417 to double
  %419 = fmul double %416, %418
  %420 = fpext float %378 to double
  %421 = fadd double %420, %419
  %422 = fptrunc double %421 to float
  store float %422, float* %364, align 4, !tbaa !14
  %423 = getelementptr inbounds float* %375, i64 %indvars.iv74
  %424 = load float* %423, align 4, !tbaa !14
  %425 = fpext float %424 to double
  %426 = fmul double %425, 1.500000e+00
  %427 = load float* %386, align 4, !tbaa !14
  %428 = fpext float %427 to double
  %429 = fmul double %426, %428
  %430 = fpext float %377 to double
  %431 = fadd double %430, %429
  %432 = fptrunc double %431 to float
  store float %432, float* %365, align 4, !tbaa !14
  %indvars.iv.next75 = add nuw nsw i64 %indvars.iv74, 1
  %exitcond76 = icmp eq i64 %indvars.iv.next75, 5
  br i1 %exitcond76, label %433, label %376

; <label>:433                                     ; preds = %376
  %434 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %indvars.iv77, i64 1, i64 0
  store float %402, float* %434, align 4, !tbaa !14
  %435 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %indvars.iv77, i64 2, i64 0
  store float %412, float* %435, align 4, !tbaa !14
  %436 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %indvars.iv77, i64 2, i64 1
  store float %432, float* %436, align 4, !tbaa !14
  %437 = fsub float -0.000000e+00, %392
  %438 = fsub float %437, %422
  %439 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %indvars.iv77, i64 2, i64 2
  store float %438, float* %439, align 4, !tbaa !14
  %indvars.iv.next78 = add nuw nsw i64 %indvars.iv77, 1
  %440 = load i32* %274, align 4, !tbaa !23
  %441 = sext i32 %440 to i64
  %442 = icmp slt i64 %indvars.iv.next78, %441
  br i1 %442, label %.preheader1, label %.preheader

; <label>:443                                     ; preds = %.lr.ph13, %539
  %indvars.iv65 = phi i64 [ 0, %.lr.ph13 ], [ %indvars.iv.next66, %539 ]
  %indvars.iv63 = phi i64 [ 0, %.lr.ph13 ], [ %indvars.iv.next64, %539 ]
  %wsv2.010 = phi float [ 0.000000e+00, %.lr.ph13 ], [ %548, %539 ]
  %sw.09 = phi float [ 0.000000e+00, %.lr.ph13 ], [ %549, %539 ]
  %444 = getelementptr inbounds i32* %forceatoms, i64 %indvars.iv63
  %445 = load i32* %444, align 4, !tbaa !30
  %446 = sext i32 %445 to i64
  %447 = getelementptr inbounds %union.t_iparams* %ip, i64 %446
  %448 = bitcast %union.t_iparams* %447 to i32*
  %449 = load i32* %448, align 4, !tbaa !31
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %450, i64 0, i64 0
  %452 = load float* %451, align 4, !tbaa !14
  %453 = getelementptr inbounds [5 x float]* %16, i64 %indvars.iv65, i64 0
  %454 = load float* %453, align 4, !tbaa !14
  %455 = fmul float %452, %454
  %456 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %450, i64 0, i64 1
  %457 = load float* %456, align 4, !tbaa !14
  %458 = getelementptr inbounds [5 x float]* %16, i64 %indvars.iv65, i64 1
  %459 = load float* %458, align 4, !tbaa !14
  %460 = fmul float %457, %459
  %461 = fadd float %455, %460
  %462 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %450, i64 0, i64 2
  %463 = load float* %462, align 4, !tbaa !14
  %464 = getelementptr inbounds [5 x float]* %16, i64 %indvars.iv65, i64 2
  %465 = load float* %464, align 4, !tbaa !14
  %466 = fmul float %463, %465
  %467 = fadd float %461, %466
  %468 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %450, i64 1, i64 1
  %469 = load float* %468, align 4, !tbaa !14
  %470 = getelementptr inbounds [5 x float]* %16, i64 %indvars.iv65, i64 3
  %471 = load float* %470, align 4, !tbaa !14
  %472 = fmul float %469, %471
  %473 = fadd float %467, %472
  %474 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %450, i64 1, i64 2
  %475 = load float* %474, align 4, !tbaa !14
  %476 = getelementptr inbounds [5 x float]* %16, i64 %indvars.iv65, i64 4
  %477 = load float* %476, align 4, !tbaa !14
  %478 = fmul float %475, %477
  %479 = fadd float %473, %478
  %480 = fmul float %337, %479
  %481 = getelementptr inbounds float* %339, i64 %indvars.iv65
  store float %480, float* %481, align 4, !tbaa !14
  br i1 %6, label %482, label %510

; <label>:482                                     ; preds = %443
  %483 = load float* %451, align 4, !tbaa !14
  %484 = getelementptr inbounds [5 x float]* %14, i64 %indvars.iv65, i64 0
  %485 = load float* %484, align 4, !tbaa !14
  %486 = fmul float %483, %485
  %487 = load float* %456, align 4, !tbaa !14
  %488 = getelementptr inbounds [5 x float]* %14, i64 %indvars.iv65, i64 1
  %489 = load float* %488, align 4, !tbaa !14
  %490 = fmul float %487, %489
  %491 = fadd float %486, %490
  %492 = load float* %462, align 4, !tbaa !14
  %493 = getelementptr inbounds [5 x float]* %14, i64 %indvars.iv65, i64 2
  %494 = load float* %493, align 4, !tbaa !14
  %495 = fmul float %492, %494
  %496 = fadd float %491, %495
  %497 = load float* %468, align 4, !tbaa !14
  %498 = getelementptr inbounds [5 x float]* %14, i64 %indvars.iv65, i64 3
  %499 = load float* %498, align 4, !tbaa !14
  %500 = fmul float %497, %499
  %501 = fadd float %496, %500
  %502 = load float* %474, align 4, !tbaa !14
  %503 = getelementptr inbounds [5 x float]* %14, i64 %indvars.iv65, i64 4
  %504 = load float* %503, align 4, !tbaa !14
  %505 = fmul float %502, %504
  %506 = fadd float %501, %505
  %507 = fmul float %506, 0x3FE5555560000000
  %508 = load float** %340, align 8, !tbaa !37
  %509 = getelementptr inbounds float* %508, i64 %indvars.iv65
  store float %507, float* %509, align 4, !tbaa !14
  br label %510

; <label>:510                                     ; preds = %482, %443
  br i1 %32, label %511, label %539

; <label>:511                                     ; preds = %510
  %512 = load float* %451, align 4, !tbaa !14
  %513 = getelementptr inbounds [5 x float]* %12, i64 %indvars.iv65, i64 0
  %514 = load float* %513, align 4, !tbaa !14
  %515 = fmul float %512, %514
  %516 = load float* %456, align 4, !tbaa !14
  %517 = getelementptr inbounds [5 x float]* %12, i64 %indvars.iv65, i64 1
  %518 = load float* %517, align 4, !tbaa !14
  %519 = fmul float %516, %518
  %520 = fadd float %515, %519
  %521 = load float* %462, align 4, !tbaa !14
  %522 = getelementptr inbounds [5 x float]* %12, i64 %indvars.iv65, i64 2
  %523 = load float* %522, align 4, !tbaa !14
  %524 = fmul float %521, %523
  %525 = fadd float %520, %524
  %526 = load float* %468, align 4, !tbaa !14
  %527 = getelementptr inbounds [5 x float]* %12, i64 %indvars.iv65, i64 3
  %528 = load float* %527, align 4, !tbaa !14
  %529 = fmul float %526, %528
  %530 = fadd float %525, %529
  %531 = load float* %474, align 4, !tbaa !14
  %532 = getelementptr inbounds [5 x float]* %12, i64 %indvars.iv65, i64 4
  %533 = load float* %532, align 4, !tbaa !14
  %534 = fmul float %531, %533
  %535 = fadd float %530, %534
  %536 = fmul float %535, 0x3FE5555560000000
  %537 = load float** %341, align 8, !tbaa !36
  %538 = getelementptr inbounds float* %537, i64 %indvars.iv65
  store float %536, float* %538, align 4, !tbaa !14
  br label %539

; <label>:539                                     ; preds = %511, %510
  %540 = load float* %481, align 4, !tbaa !14
  %541 = getelementptr inbounds %union.t_iparams* %ip, i64 %446, i32 0, i32 4
  %542 = load float* %541, align 4, !tbaa !65
  %543 = fsub float %540, %542
  %544 = getelementptr inbounds %union.t_iparams* %ip, i64 %446, i32 0, i32 5
  %545 = load float* %544, align 4, !tbaa !64
  %546 = fmul float %543, %543
  %547 = fmul float %545, %546
  %548 = fadd float %wsv2.010, %547
  %549 = fadd float %sw.09, %545
  %indvars.iv.next66 = add nuw nsw i64 %indvars.iv65, 1
  %indvars.iv.next64 = add nuw nsw i64 %indvars.iv63, 3
  %550 = icmp slt i64 %indvars.iv.next64, %342
  br i1 %550, label %443, label %._crit_edge14

._crit_edge14:                                    ; preds = %539, %.preheader
  %wsv2.0.lcssa = phi float [ 0.000000e+00, %.preheader ], [ %548, %539 ]
  %sw.0.lcssa = phi float [ 0.000000e+00, %.preheader ], [ %549, %539 ]
  %551 = fdiv float %wsv2.0.lcssa, %sw.0.lcssa
  %sqrtf = call float @sqrtf(float %551) #5
  %552 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 1, i32 19
  store float %sqrtf, float* %552, align 4, !tbaa !66
  %553 = icmp sgt i32 %336, 0
  br i1 %553, label %.lr.ph, label %655

.lr.ph:                                           ; preds = %._crit_edge14
  %554 = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 0
  %555 = getelementptr inbounds [3 x [3 x float]]* %R, i64 0, i64 0, i64 0
  %556 = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 1, i64 1
  %557 = getelementptr inbounds [3 x [3 x float]]* %TMP, i64 0, i64 2, i64 2
  br label %558

; <label>:558                                     ; preds = %.lr.ph, %558
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %558 ]
  %559 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %indvars.iv, i64 0
  %560 = load float* %555, align 16, !tbaa !14
  %561 = getelementptr inbounds [3 x float]* %559, i64 0, i64 0
  %562 = load float* %561, align 4, !tbaa !14
  %563 = load float* %118, align 4, !tbaa !14
  %564 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %indvars.iv, i64 1, i64 0
  %565 = load float* %564, align 4, !tbaa !14
  %566 = load float* %133, align 8, !tbaa !14
  %567 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %indvars.iv, i64 2, i64 0
  %568 = load float* %567, align 4, !tbaa !14
  %569 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %indvars.iv, i64 0, i64 1
  %570 = load float* %569, align 4, !tbaa !14
  %571 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %indvars.iv, i64 1, i64 1
  %572 = load float* %571, align 4, !tbaa !14
  %573 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %indvars.iv, i64 2, i64 1
  %574 = load float* %573, align 4, !tbaa !14
  %575 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %indvars.iv, i64 0, i64 2
  %576 = load float* %575, align 4, !tbaa !14
  %577 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %indvars.iv, i64 1, i64 2
  %578 = load float* %577, align 4, !tbaa !14
  %579 = getelementptr inbounds [3 x [3 x float]]* %10, i64 %indvars.iv, i64 2, i64 2
  %580 = load float* %579, align 4, !tbaa !14
  %581 = load float* %107, align 4, !tbaa !14
  %582 = insertelement <4 x float> undef, float %560, i32 0
  %583 = insertelement <4 x float> %582, float %560, i32 1
  %584 = insertelement <4 x float> %583, float %560, i32 2
  %585 = insertelement <4 x float> %584, float %581, i32 3
  %586 = insertelement <4 x float> undef, float %562, i32 0
  %587 = insertelement <4 x float> %586, float %570, i32 1
  %588 = insertelement <4 x float> %587, float %576, i32 2
  %589 = insertelement <4 x float> %588, float %562, i32 3
  %590 = fmul <4 x float> %585, %589
  %591 = load float* %123, align 4, !tbaa !14
  %592 = insertelement <4 x float> undef, float %563, i32 0
  %593 = insertelement <4 x float> %592, float %563, i32 1
  %594 = insertelement <4 x float> %593, float %563, i32 2
  %595 = insertelement <4 x float> %594, float %591, i32 3
  %596 = insertelement <4 x float> undef, float %565, i32 0
  %597 = insertelement <4 x float> %596, float %572, i32 1
  %598 = insertelement <4 x float> %597, float %578, i32 2
  %599 = insertelement <4 x float> %598, float %565, i32 3
  %600 = fmul <4 x float> %595, %599
  %601 = fadd <4 x float> %590, %600
  %602 = load float* %139, align 4, !tbaa !14
  %603 = insertelement <4 x float> undef, float %566, i32 0
  %604 = insertelement <4 x float> %603, float %566, i32 1
  %605 = insertelement <4 x float> %604, float %566, i32 2
  %606 = insertelement <4 x float> %605, float %602, i32 3
  %607 = insertelement <4 x float> undef, float %568, i32 0
  %608 = insertelement <4 x float> %607, float %574, i32 1
  %609 = insertelement <4 x float> %608, float %580, i32 2
  %610 = insertelement <4 x float> %609, float %568, i32 3
  %611 = fmul <4 x float> %606, %610
  %612 = fadd <4 x float> %601, %611
  %613 = bitcast [3 x [3 x float]]* %TMP to <4 x float>*
  store <4 x float> %612, <4 x float>* %613, align 16, !tbaa !14
  %614 = load float* %112, align 8, !tbaa !14
  %615 = load float* %128, align 4, !tbaa !14
  %616 = load float* %144, align 8, !tbaa !14
  %617 = insertelement <4 x float> undef, float %581, i32 0
  %618 = insertelement <4 x float> %617, float %581, i32 1
  %619 = insertelement <4 x float> %618, float %614, i32 2
  %620 = insertelement <4 x float> %619, float %614, i32 3
  %621 = insertelement <4 x float> undef, float %570, i32 0
  %622 = insertelement <4 x float> %621, float %576, i32 1
  %623 = insertelement <4 x float> %622, float %562, i32 2
  %624 = insertelement <4 x float> %623, float %570, i32 3
  %625 = fmul <4 x float> %620, %624
  %626 = insertelement <4 x float> undef, float %591, i32 0
  %627 = insertelement <4 x float> %626, float %591, i32 1
  %628 = insertelement <4 x float> %627, float %615, i32 2
  %629 = insertelement <4 x float> %628, float %615, i32 3
  %630 = insertelement <4 x float> undef, float %572, i32 0
  %631 = insertelement <4 x float> %630, float %578, i32 1
  %632 = insertelement <4 x float> %631, float %565, i32 2
  %633 = insertelement <4 x float> %632, float %572, i32 3
  %634 = fmul <4 x float> %629, %633
  %635 = fadd <4 x float> %625, %634
  %636 = insertelement <4 x float> undef, float %602, i32 0
  %637 = insertelement <4 x float> %636, float %602, i32 1
  %638 = insertelement <4 x float> %637, float %616, i32 2
  %639 = insertelement <4 x float> %638, float %616, i32 3
  %640 = insertelement <4 x float> undef, float %574, i32 0
  %641 = insertelement <4 x float> %640, float %580, i32 1
  %642 = insertelement <4 x float> %641, float %568, i32 2
  %643 = insertelement <4 x float> %642, float %574, i32 3
  %644 = fmul <4 x float> %639, %643
  %645 = fadd <4 x float> %635, %644
  %646 = bitcast float* %556 to <4 x float>*
  store <4 x float> %645, <4 x float>* %646, align 4, !tbaa !14
  %647 = fmul float %614, %576
  %648 = fmul float %615, %578
  %649 = fadd float %647, %648
  %650 = fmul float %616, %580
  %651 = fadd float %649, %650
  store float %651, float* %557, align 8, !tbaa !14
  call fastcc void @mmul([3 x float]* %554, [3 x float]* %101, [3 x float]* %559) #11
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %652 = load i32* %274, align 4, !tbaa !23
  %653 = sext i32 %652 to i64
  %654 = icmp slt i64 %indvars.iv.next, %653
  br i1 %654, label %558, label %._crit_edge

._crit_edge:                                      ; preds = %558
  %.pre142 = load float* %552, align 4, !tbaa !66
  br label %655

; <label>:655                                     ; preds = %._crit_edge, %._crit_edge14
  %656 = phi float [ %.pre142, %._crit_edge ], [ %sqrtf, %._crit_edge14 ]
  call void @llvm.lifetime.end(i64 36, i8* %2) #7
  call void @llvm.lifetime.end(i64 36, i8* %1) #7
  ret float %656
}
