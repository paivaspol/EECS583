define internal fastcc void @make_list(i32 %start_fac) #4 {
  tail call void @llvm.dbg.value(metadata i32 %start_fac, i64 0, metadata !110, metadata !135), !dbg !336
  %1 = load i32* @ng, align 4, !dbg !337, !tbaa !198
  %2 = load i32* @ng_max, align 4, !dbg !339, !tbaa !198
  %3 = icmp slt i32 %1, %2, !dbg !340
  br i1 %3, label %4, label %.loopexit, !dbg !341

; <label>:4                                       ; preds = %0
  %5 = load i32* @n_list, align 4, !dbg !342, !tbaa !198
  %6 = load i32* @n_list_alloc, align 4, !dbg !345, !tbaa !198
  %7 = icmp slt i32 %5, %6, !dbg !346
  br i1 %7, label %._crit_edge, label %8, !dbg !347

._crit_edge:                                      ; preds = %4
  %.pre3 = load i32** @list, align 8, !dbg !348, !tbaa !229
  br label %14, !dbg !347

; <label>:8                                       ; preds = %4
  %9 = add nsw i32 %6, 100, !dbg !349
  store i32 %9, i32* @n_list_alloc, align 4, !dbg !349, !tbaa !198
  %10 = load i8** bitcast (i32** @list to i8**), align 8, !dbg !351, !tbaa !229
  %11 = shl i32 %9, 2, !dbg !351
  %12 = tail call i8* @save_realloc(i8* getelementptr inbounds ([5 x i8]* @.str10, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str11, i64 0, i64 0), i32 50, i8* %10, i32 %11) #8, !dbg !351
  store i8* %12, i8** bitcast (i32** @list to i8**), align 8, !dbg !351, !tbaa !229
  %.pre = load i32* @ng, align 4, !dbg !352, !tbaa !198
  %.pre2 = load i32* @n_list, align 4, !dbg !353, !tbaa !198
  %13 = bitcast i8* %12 to i32*
  br label %14, !dbg !354

; <label>:14                                      ; preds = %._crit_edge, %8
  %15 = phi i32* [ %.pre3, %._crit_edge ], [ %13, %8 ]
  %16 = phi i32 [ %5, %._crit_edge ], [ %.pre2, %8 ]
  %17 = phi i32 [ %1, %._crit_edge ], [ %.pre, %8 ]
  %18 = sext i32 %16 to i64, !dbg !348
  %19 = getelementptr inbounds i32* %15, i64 %18, !dbg !348
  store i32 %17, i32* %19, align 4, !dbg !355, !tbaa !198
  %20 = load i32* @n_list, align 4, !dbg !356, !tbaa !198
  %21 = add nsw i32 %20, 1, !dbg !356
  store i32 %21, i32* @n_list, align 4, !dbg !356, !tbaa !198
  tail call void @llvm.dbg.value(metadata i32 %start_fac, i64 0, metadata !111, metadata !135), !dbg !357
  %22 = icmp slt i32 %start_fac, 6, !dbg !358
  br i1 %22, label %.lr.ph, label %.loopexit, !dbg !361

.lr.ph:                                           ; preds = %14
  %23 = sext i32 %start_fac to i64
  br label %24, !dbg !361

; <label>:24                                      ; preds = %47, %.lr.ph
  %indvars.iv = phi i64 [ %23, %.lr.ph ], [ %indvars.iv.next, %47 ]
  %25 = icmp slt i64 %indvars.iv, 4, !dbg !362
  br i1 %25, label %33, label %26, !dbg !365

; <label>:26                                      ; preds = %24
  %27 = load i64* bitcast (i32* getelementptr inbounds ([6 x i32]* @decomp, i64 0, i64 4) to i64*), align 16, !dbg !366
  %28 = trunc i64 %27 to i32, !dbg !366
  %29 = lshr i64 %27, 32
  %30 = trunc i64 %29 to i32
  %31 = sub i32 0, %30, !dbg !367
  %32 = icmp eq i32 %28, %31, !dbg !367
  br i1 %32, label %33, label %._crit_edge4, !dbg !368

._crit_edge4:                                     ; preds = %26
  %.pre5 = trunc i64 %indvars.iv to i32, !dbg !361
  br label %47, !dbg !368

; <label>:33                                      ; preds = %26, %24
  %34 = getelementptr inbounds [6 x i32]* @factor, i64 0, i64 %indvars.iv, !dbg !369
  %35 = load i32* %34, align 4, !dbg !369, !tbaa !198
  %36 = load i32* @ng, align 4, !dbg !371, !tbaa !198
  %37 = mul nsw i32 %36, %35, !dbg !371
  store i32 %37, i32* @ng, align 4, !dbg !371, !tbaa !198
  %38 = getelementptr inbounds [6 x i32]* @decomp, i64 0, i64 %indvars.iv, !dbg !372
  %39 = load i32* %38, align 4, !dbg !373, !tbaa !198
  %40 = add nsw i32 %39, 1, !dbg !373
  store i32 %40, i32* %38, align 4, !dbg !373, !tbaa !198
  %41 = trunc i64 %indvars.iv to i32, !dbg !374
  tail call fastcc void @make_list(i32 %41) #9, !dbg !374
  %42 = load i32* %34, align 4, !dbg !375, !tbaa !198
  %43 = load i32* @ng, align 4, !dbg !376, !tbaa !198
  %44 = sdiv i32 %43, %42, !dbg !376
  store i32 %44, i32* @ng, align 4, !dbg !376, !tbaa !198
  %45 = load i32* %38, align 4, !dbg !377, !tbaa !198
  %46 = add nsw i32 %45, -1, !dbg !377
  store i32 %46, i32* %38, align 4, !dbg !377, !tbaa !198
  br label %47, !dbg !378

; <label>:47                                      ; preds = %._crit_edge4, %33
  %lftr.wideiv.pre-phi = phi i32 [ %.pre5, %._crit_edge4 ], [ %41, %33 ], !dbg !361
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !361
  %exitcond = icmp eq i32 %lftr.wideiv.pre-phi, 5, !dbg !361
  br i1 %exitcond, label %.loopexit, label %24, !dbg !361

.loopexit:                                        ; preds = %47, %14, %0
  ret void, !dbg !379
}
