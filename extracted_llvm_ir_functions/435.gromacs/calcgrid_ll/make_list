define internal fastcc void @make_list(i32 %start_fac) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %start_fac}, i64 0, metadata !44), !dbg !118
  %0 = load i32* @ng, align 4, !dbg !119, !tbaa !70
  %1 = load i32* @ng_max, align 4, !dbg !119, !tbaa !70
  %cmp = icmp slt i32 %0, %1, !dbg !119
  br i1 %cmp, label %if.then, label %if.end24, !dbg !119

if.then:                                          ; preds = %entry
  %2 = load i32* @n_list, align 4, !dbg !120, !tbaa !70
  %3 = load i32* @n_list_alloc, align 4, !dbg !120, !tbaa !70
  %cmp1 = icmp slt i32 %2, %3, !dbg !120
  br i1 %cmp1, label %if.then.if.end_crit_edge, label %if.then2, !dbg !120

if.then.if.end_crit_edge:                         ; preds = %if.then
  %.pre35 = load i32** @list, align 8, !dbg !122, !tbaa !84
  br label %if.end, !dbg !120

if.then2:                                         ; preds = %if.then
  %add = add nsw i32 %3, 100, !dbg !123
  store i32 %add, i32* @n_list_alloc, align 4, !dbg !123, !tbaa !70
  %4 = load i32** @list, align 8, !dbg !125, !tbaa !84
  %5 = bitcast i32* %4 to i8*, !dbg !125
  %mul = shl i32 %add, 2, !dbg !125
  %call = tail call i8* @save_realloc(i8* getelementptr inbounds ([5 x i8]* @.str10, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8]* @.str11, i64 0, i64 0), i32 50, i8* %5, i32 %mul) #6, !dbg !125
  %6 = bitcast i8* %call to i32*, !dbg !125
  store i32* %6, i32** @list, align 8, !dbg !125, !tbaa !84
  %.pre = load i32* @ng, align 4, !dbg !122, !tbaa !70
  %.pre34 = load i32* @n_list, align 4, !dbg !122, !tbaa !70
  br label %if.end, !dbg !126

if.end:                                           ; preds = %if.then.if.end_crit_edge, %if.then2
  %7 = phi i32* [ %.pre35, %if.then.if.end_crit_edge ], [ %6, %if.then2 ]
  %8 = phi i32 [ %2, %if.then.if.end_crit_edge ], [ %.pre34, %if.then2 ]
  %9 = phi i32 [ %0, %if.then.if.end_crit_edge ], [ %.pre, %if.then2 ]
  %idxprom = sext i32 %8 to i64, !dbg !122
  %arrayidx = getelementptr inbounds i32* %7, i64 %idxprom, !dbg !122
  store i32 %9, i32* %arrayidx, align 4, !dbg !122, !tbaa !70
  %10 = load i32* @n_list, align 4, !dbg !127, !tbaa !70
  %inc = add nsw i32 %10, 1, !dbg !127
  store i32 %inc, i32* @n_list, align 4, !dbg !127, !tbaa !70
  tail call void @llvm.dbg.value(metadata !{i32 %start_fac}, i64 0, metadata !45), !dbg !128
  %cmp432 = icmp slt i32 %start_fac, 6, !dbg !128
  br i1 %cmp432, label %for.body.lr.ph, label %if.end24, !dbg !128

for.body.lr.ph:                                   ; preds = %if.end
  %11 = sext i32 %start_fac to i64
  br label %for.body, !dbg !128

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ %11, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %12 = trunc i64 %indvars.iv to i32, !dbg !130
  %cmp6 = icmp slt i32 %12, 4, !dbg !130
  br i1 %cmp6, label %if.then11, label %lor.lhs.false, !dbg !130

lor.lhs.false:                                    ; preds = %for.body
  %13 = load i64* bitcast (i32* getelementptr inbounds ([6 x i32]* @decomp, i64 0, i64 4) to i64*), align 16, !dbg !130
  %14 = trunc i64 %13 to i32, !dbg !130
  %15 = lshr i64 %13, 32
  %16 = trunc i64 %15 to i32
  %add8 = sub i32 0, %16, !dbg !130
  %cmp9 = icmp eq i32 %14, %add8, !dbg !130
  br i1 %cmp9, label %if.then11, label %for.inc, !dbg !130

if.then11:                                        ; preds = %lor.lhs.false, %for.body
  %arrayidx13 = getelementptr inbounds [6 x i32]* @factor, i64 0, i64 %indvars.iv, !dbg !132
  %17 = load i32* %arrayidx13, align 4, !dbg !132, !tbaa !70
  %18 = load i32* @ng, align 4, !dbg !132, !tbaa !70
  %mul14 = mul nsw i32 %18, %17, !dbg !132
  store i32 %mul14, i32* @ng, align 4, !dbg !132, !tbaa !70
  %arrayidx16 = getelementptr inbounds [6 x i32]* @decomp, i64 0, i64 %indvars.iv, !dbg !134
  %19 = load i32* %arrayidx16, align 4, !dbg !134, !tbaa !70
  %inc17 = add nsw i32 %19, 1, !dbg !134
  store i32 %inc17, i32* %arrayidx16, align 4, !dbg !134, !tbaa !70
  tail call fastcc void @make_list(i32 %12) #7, !dbg !135
  %20 = load i32* %arrayidx13, align 4, !dbg !136, !tbaa !70
  %21 = load i32* @ng, align 4, !dbg !136, !tbaa !70
  %div = sdiv i32 %21, %20, !dbg !136
  store i32 %div, i32* @ng, align 4, !dbg !136, !tbaa !70
  %22 = load i32* %arrayidx16, align 4, !dbg !137, !tbaa !70
  %dec = add nsw i32 %22, -1, !dbg !137
  store i32 %dec, i32* %arrayidx16, align 4, !dbg !137, !tbaa !70
  br label %for.inc, !dbg !138

for.inc:                                          ; preds = %lor.lhs.false, %if.then11
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !128
  %23 = trunc i64 %indvars.iv.next to i32, !dbg !128
  %cmp4 = icmp slt i32 %23, 6, !dbg !128
  br i1 %cmp4, label %for.body, label %if.end24, !dbg !128

if.end24:                                         ; preds = %if.end, %for.inc, %entry
  ret void, !dbg !139
}
