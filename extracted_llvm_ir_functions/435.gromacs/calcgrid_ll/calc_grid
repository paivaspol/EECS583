define float @calc_grid([3 x float]* nocapture readonly %box, float %gr_sp, i32* nocapture %nx, i32* nocapture %ny, i32* nocapture %nz, i32 %nnodes) #3 {
  %n = alloca [3 x i32], align 4
  %nmin = alloca [3 x i32], align 4
  %box_size = alloca [3 x float], align 4
  %spacing = alloca [3 x float], align 4
  %1 = fcmp ugt float %gr_sp, 0.000000e+00
  br i1 %1, label %.preheader4, label %2

; <label>:2                                       ; preds = %0
  %3 = fpext float %gr_sp to double
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([33 x i8]* @.str, i64 0, i64 0), double %3) #7
  br label %.preheader4

.preheader4:                                      ; preds = %2, %0, %.preheader4
  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %.preheader4 ], [ 0, %0 ], [ 0, %2 ]
  %4 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv28, i64 %indvars.iv28
  %5 = bitcast float* %4 to i32*
  %6 = load i32* %5, align 4, !tbaa !14
  %7 = getelementptr inbounds [3 x float]* %box_size, i64 0, i64 %indvars.iv28
  %8 = bitcast float* %7 to i32*
  store i32 %6, i32* %8, align 4, !tbaa !14
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1
  %exitcond30 = icmp eq i64 %indvars.iv.next29, 3
  br i1 %exitcond30, label %9, label %.preheader4

; <label>:9                                       ; preds = %.preheader4
  %10 = load i32* %nx, align 4, !tbaa !16
  %11 = getelementptr inbounds [3 x i32]* %n, i64 0, i64 0
  store i32 %10, i32* %11, align 4, !tbaa !16
  %12 = load i32* %ny, align 4, !tbaa !16
  %13 = getelementptr inbounds [3 x i32]* %n, i64 0, i64 1
  store i32 %12, i32* %13, align 4, !tbaa !16
  %14 = load i32* %nz, align 4, !tbaa !16
  %15 = getelementptr inbounds [3 x i32]* %n, i64 0, i64 2
  store i32 %14, i32* %15, align 4, !tbaa !16
  store i32 1, i32* @ng, align 4, !tbaa !16
  store i32 1, i32* @ng_max, align 4, !tbaa !16
  br label %16

; <label>:16                                      ; preds = %28, %9
  %17 = phi i32 [ 1, %9 ], [ %29, %28 ]
  %indvars.iv25 = phi i64 [ 0, %9 ], [ %indvars.iv.next26, %28 ]
  %18 = getelementptr inbounds [3 x float]* %box_size, i64 0, i64 %indvars.iv25
  %19 = load float* %18, align 4, !tbaa !14
  %20 = fdiv float %19, %gr_sp
  %21 = fpext float %20 to double
  %22 = fadd double %21, 9.990000e-01
  %23 = fptosi double %22 to i32
  %24 = getelementptr inbounds [3 x i32]* %nmin, i64 0, i64 %indvars.iv25
  store i32 %23, i32* %24, align 4, !tbaa !16
  %25 = shl nsw i32 %23, 1
  %26 = icmp sgt i32 %25, %17
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %16
  store i32 %25, i32* @ng_max, align 4, !tbaa !16
  br label %28

; <label>:28                                      ; preds = %16, %27
  %29 = phi i32 [ %17, %16 ], [ %25, %27 ]
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1
  %exitcond27 = icmp eq i64 %indvars.iv.next26, 3
  br i1 %exitcond27, label %30, label %16

; <label>:30                                      ; preds = %28
  store i32 0, i32* @n_list, align 4, !tbaa !16
  store i32 0, i32* @n_list_alloc, align 4, !tbaa !16
  store i32* null, i32** @list, align 8, !tbaa !17
  call void @llvm.memset.p0i8.i64(i8* bitcast ([6 x i32]* @decomp to i8*), i8 0, i64 24, i32 16, i1 false)
  tail call fastcc void @make_list(i32 0) #8
  %31 = load i32* %nx, align 4, !tbaa !16
  %32 = icmp slt i32 %31, 1
  %.pre = load i32* %ny, align 4, !tbaa !16
  %33 = icmp slt i32 %.pre, 1
  %or.cond = or i1 %32, %33
  br i1 %or.cond, label %._crit_edge, label %34

; <label>:34                                      ; preds = %30
  %35 = load i32* %nz, align 4, !tbaa !16
  %36 = icmp slt i32 %35, 1
  br i1 %36, label %._crit_edge, label %46

._crit_edge:                                      ; preds = %30, %34
  %37 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !17
  %38 = icmp sgt i32 %31, 0
  %39 = select i1 %38, i8* getelementptr inbounds ([1 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0)
  %40 = icmp sgt i32 %.pre, 0
  %41 = select i1 %40, i8* getelementptr inbounds ([1 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str4, i64 0, i64 0)
  %42 = load i32* %nz, align 4, !tbaa !16
  %43 = icmp sgt i32 %42, 0
  %44 = select i1 %43, i8* getelementptr inbounds ([1 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str5, i64 0, i64 0)
  %45 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %37, i8* getelementptr inbounds ([47 x i8]* @.str1, i64 0, i64 0), i8* %39, i8* %41, i8* %44) #7
  br label %46

; <label>:46                                      ; preds = %._crit_edge, %34
  %47 = load i8** bitcast (i32** @list to i8**), align 8, !tbaa !17
  %48 = load i32* @n_list, align 4, !tbaa !16
  %49 = sext i32 %48 to i64
  tail call void @qsort(i8* %47, i64 %49, i64 4, i32 (i8*, i8*)* @list_comp) #7
  %50 = load %struct.__sFILE** @debug, align 8, !tbaa !17
  %51 = icmp ne %struct.__sFILE* %50, null
  %52 = load i32* @n_list, align 4
  %53 = icmp sgt i32 %52, 0
  %or.cond38 = and i1 %51, %53
  br i1 %or.cond38, label %.lr.ph11.preheader, label %.loopexit

.lr.ph11.preheader:                               ; preds = %46
  %54 = load i32** @list, align 8, !tbaa !17
  %55 = load i32* %54, align 4, !tbaa !16
  %56 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %50, i8* getelementptr inbounds ([10 x i8]* @.str6, i64 0, i64 0), i32 %55) #7
  %57 = load i32* @n_list, align 4, !tbaa !16
  %58 = icmp sgt i32 %57, 1
  br i1 %58, label %._crit_edge31, label %.loopexit

._crit_edge31:                                    ; preds = %.lr.ph11.preheader, %._crit_edge31
  %indvars.iv.next2139 = phi i64 [ %indvars.iv.next21, %._crit_edge31 ], [ 1, %.lr.ph11.preheader ]
  %.pre32 = load %struct.__sFILE** @debug, align 8, !tbaa !17
  %59 = load i32** @list, align 8, !tbaa !17
  %60 = getelementptr inbounds i32* %59, i64 %indvars.iv.next2139
  %61 = load i32* %60, align 4, !tbaa !16
  %62 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %.pre32, i8* getelementptr inbounds ([10 x i8]* @.str6, i64 0, i64 0), i32 %61) #7
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv.next2139, 1
  %63 = load i32* @n_list, align 4, !tbaa !16
  %64 = sext i32 %63 to i64
  %65 = icmp slt i64 %indvars.iv.next21, %64
  br i1 %65, label %._crit_edge31, label %.loopexit

.loopexit:                                        ; preds = %.lr.ph11.preheader, %._crit_edge31, %46
  %66 = load i32* %nx, align 4, !tbaa !16
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %68, label %71

; <label>:68                                      ; preds = %.loopexit
  %69 = srem i32 %66, %nnodes
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %._crit_edge33

._crit_edge33:                                    ; preds = %68
  %.pre34 = load i32* %ny, align 4, !tbaa !16
  br label %77

; <label>:71                                      ; preds = %68, %.loopexit
  %72 = load i32* %ny, align 4, !tbaa !16
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %74, label %.preheader1

; <label>:74                                      ; preds = %71
  %75 = srem i32 %72, %nnodes
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %.preheader1, label %77

; <label>:77                                      ; preds = %._crit_edge33, %74
  %78 = phi i32 [ %.pre34, %._crit_edge33 ], [ %72, %74 ]
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([84 x i8]* @.str7, i64 0, i64 0), i32 %66, i32 %78, i32 %nnodes) #7
  br label %.preheader1

.preheader1:                                      ; preds = %71, %77, %74, %.critedge.thread
  %indvars.iv17 = phi i64 [ %indvars.iv.next18, %.critedge.thread ], [ 0, %74 ], [ 0, %77 ], [ 0, %71 ]
  %79 = getelementptr inbounds [3 x i32]* %n, i64 0, i64 %indvars.iv17
  %80 = load i32* @n_list, align 4, !tbaa !16
  %81 = icmp sgt i32 %80, 0
  br i1 %81, label %.lr.ph, label %.preheader1..critedge_crit_edge

.preheader1..critedge_crit_edge:                  ; preds = %.preheader1
  %.pre36 = load i32* %79, align 4, !tbaa !16
  br label %.critedge

.lr.ph:                                           ; preds = %.preheader1
  %82 = load i32** @list, align 8, !tbaa !17
  %83 = getelementptr inbounds [3 x i32]* %nmin, i64 0, i64 %indvars.iv17
  %84 = trunc i64 %indvars.iv17 to i32
  %85 = icmp eq i32 %84, 2
  %86 = sext i32 %80 to i64
  %.pre35 = load i32* %79, align 4, !tbaa !16
  br label %87

; <label>:87                                      ; preds = %.lr.ph, %100
  %88 = phi i32 [ %.pre35, %.lr.ph ], [ %101, %100 ]
  %indvars.iv15 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next16, %100 ]
  %89 = icmp slt i32 %88, 1
  br i1 %89, label %90, label %.critedge.thread

; <label>:90                                      ; preds = %87
  %91 = getelementptr inbounds i32* %82, i64 %indvars.iv15
  %92 = load i32* %91, align 4, !tbaa !16
  %93 = load i32* %83, align 4, !tbaa !16
  %94 = icmp slt i32 %92, %93
  br i1 %94, label %100, label %95

; <label>:95                                      ; preds = %90
  br i1 %85, label %99, label %96

; <label>:96                                      ; preds = %95
  %97 = srem i32 %92, %nnodes
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

; <label>:99                                      ; preds = %96, %95
  store i32 %92, i32* %79, align 4, !tbaa !16
  br label %100

; <label>:100                                     ; preds = %90, %96, %99
  %101 = phi i32 [ %88, %90 ], [ %88, %96 ], [ %92, %99 ]
  %indvars.iv.next16 = add nuw nsw i64 %indvars.iv15, 1
  %102 = icmp slt i64 %indvars.iv.next16, %86
  br i1 %102, label %87, label %.critedge

.critedge:                                        ; preds = %100, %.preheader1..critedge_crit_edge
  %103 = phi i32 [ %.pre36, %.preheader1..critedge_crit_edge ], [ %101, %100 ]
  %104 = icmp slt i32 %103, 1
  br i1 %104, label %105, label %.critedge.thread

; <label>:105                                     ; preds = %.critedge
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([83 x i8]* @.str8, i64 0, i64 0), i32 %nnodes) #7
  br label %.critedge.thread

.critedge.thread:                                 ; preds = %87, %.critedge, %105
  %indvars.iv.next18 = add nuw nsw i64 %indvars.iv17, 1
  %exitcond19 = icmp eq i64 %indvars.iv.next18, 3
  br i1 %exitcond19, label %.preheader, label %.preheader1

.preheader:                                       ; preds = %.critedge.thread, %.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %.preheader ], [ 0, %.critedge.thread ]
  %max_spacing.06 = phi float [ %max_spacing.1, %.preheader ], [ 0.000000e+00, %.critedge.thread ]
  %106 = getelementptr inbounds [3 x float]* %box_size, i64 0, i64 %indvars.iv
  %107 = load float* %106, align 4, !tbaa !14
  %108 = getelementptr inbounds [3 x i32]* %n, i64 0, i64 %indvars.iv
  %109 = load i32* %108, align 4, !tbaa !16
  %110 = sitofp i32 %109 to float
  %111 = fdiv float %107, %110
  %112 = getelementptr inbounds [3 x float]* %spacing, i64 0, i64 %indvars.iv
  store float %111, float* %112, align 4, !tbaa !14
  %113 = fcmp ogt float %111, %max_spacing.06
  %max_spacing.1 = select i1 %113, float %111, float %max_spacing.06
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %114, label %.preheader

; <label>:114                                     ; preds = %.preheader
  %115 = load i32* %11, align 4, !tbaa !16
  store i32 %115, i32* %nx, align 4, !tbaa !16
  %116 = load i32* %13, align 4, !tbaa !16
  store i32 %116, i32* %ny, align 4, !tbaa !16
  %117 = load i32* %15, align 4, !tbaa !16
  store i32 %117, i32* %nz, align 4, !tbaa !16
  %118 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !17
  %119 = load i32* %nx, align 4, !tbaa !16
  %120 = load i32* %ny, align 4, !tbaa !16
  %121 = getelementptr inbounds [3 x float]* %spacing, i64 0, i64 0
  %122 = load float* %121, align 4, !tbaa !14
  %123 = fpext float %122 to double
  %124 = getelementptr inbounds [3 x float]* %spacing, i64 0, i64 1
  %125 = load float* %124, align 4, !tbaa !14
  %126 = fpext float %125 to double
  %127 = getelementptr inbounds [3 x float]* %spacing, i64 0, i64 2
  %128 = load float* %127, align 4, !tbaa !14
  %129 = fpext float %128 to double
  %130 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %118, i8* getelementptr inbounds ([58 x i8]* @.str9, i64 0, i64 0), i32 %119, i32 %120, i32 %117, double %123, double %126, double %129) #7
  ret float %max_spacing.1
}
