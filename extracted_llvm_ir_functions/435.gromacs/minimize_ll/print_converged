define internal fastcc void @print_converged(%struct._IO_FILE* nocapture %fp, i8* %alg, float %ftol, i32 %count, i32 %bDone, i32 %nsteps, float %epot, float %fmax) #0 {
entry:
  %tobool = icmp eq i32 %bDone, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %conv = fpext float %ftol to double
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([33 x i8]* @.str36, i64 0, i64 0), i8* %alg, double %conv, i32 %count) #5
  br label %if.end

if.else:                                          ; preds = %entry
  %cmp = icmp slt i32 %count, %nsteps
  %cond = select i1 %cmp, i32 %count, i32 %nsteps
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([34 x i8]* @.str37, i64 0, i64 0), i8* %alg, i32 %cond) #5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %conv3 = fpext float %epot to double
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([30 x i8]* @.str38, i64 0, i64 0), double %conv3) #5
  %conv5 = fpext float %fmax to double
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([23 x i8]* @.str39, i64 0, i64 0), double %conv5) #5
  ret void
}
