define internal fastcc void @init_em(%struct._IO_FILE* %log, i8* %title, %struct.t_parm* %parm, float* nocapture %lambda, %struct.t_nrnb* %mynrnb, float* nocapture %mu_tot, float* %box_size, %struct.t_forcerec* nocapture %fr, %struct.t_mdatoms* %mdatoms, %struct.t_topology* %top, %struct.t_nsborder* nocapture %nsb, %struct.t_commrec* %cr, %struct.t_vcm** nocapture %vcm, i32* nocapture %start, i32* nocapture %end) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._IO_FILE* %log}, i64 0, metadata !1212), !dbg !1476
  tail call void @llvm.dbg.value(metadata !{i8* %title}, i64 0, metadata !1213), !dbg !1476
  tail call void @llvm.dbg.value(metadata !{%struct.t_parm* %parm}, i64 0, metadata !1214), !dbg !1477
  tail call void @llvm.dbg.value(metadata !{float* %lambda}, i64 0, metadata !1215), !dbg !1477
  tail call void @llvm.dbg.value(metadata !{%struct.t_nrnb* %mynrnb}, i64 0, metadata !1216), !dbg !1477
  tail call void @llvm.dbg.value(metadata !{float* %mu_tot}, i64 0, metadata !1217), !dbg !1477
  tail call void @llvm.dbg.value(metadata !{float* %box_size}, i64 0, metadata !1218), !dbg !1477
  tail call void @llvm.dbg.value(metadata !{%struct.t_forcerec* %fr}, i64 0, metadata !1219), !dbg !1478
  tail call void @llvm.dbg.value(metadata !{%struct.t_mdatoms* %mdatoms}, i64 0, metadata !1220), !dbg !1478
  tail call void @llvm.dbg.value(metadata !{%struct.t_topology* %top}, i64 0, metadata !1221), !dbg !1478
  tail call void @llvm.dbg.value(metadata !{%struct.t_nsborder* %nsb}, i64 0, metadata !1222), !dbg !1478
  tail call void @llvm.dbg.value(metadata !{%struct.t_commrec* %cr}, i64 0, metadata !1223), !dbg !1479
  tail call void @llvm.dbg.value(metadata !{%struct.t_vcm** %vcm}, i64 0, metadata !1224), !dbg !1479
  tail call void @llvm.dbg.value(metadata !{i32* %start}, i64 0, metadata !1225), !dbg !1479
  tail call void @llvm.dbg.value(metadata !{i32* %end}, i64 0, metadata !1226), !dbg !1479
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %log, i8* getelementptr inbounds ([15 x i8]* @.str43, i64 0, i64 0), i8* %title) #6, !dbg !1480
  %efep = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 46, !dbg !1482
  %0 = load i32* %efep, align 4, !dbg !1482, !tbaa !1255
  %cmp = icmp eq i32 %0, 0, !dbg !1482
  br i1 %cmp, label %if.end, label %if.then, !dbg !1482

if.then:                                          ; preds = %entry
  %init_lambda = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 47, !dbg !1483
  %1 = load float* %init_lambda, align 4, !dbg !1483, !tbaa !1261
  br label %if.end, !dbg !1483

if.end:                                           ; preds = %entry, %if.then
  %storemerge = phi float [ %1, %if.then ], [ 0.000000e+00, %entry ]
  store float %storemerge, float* %lambda, align 4, !dbg !1483, !tbaa !1261
  tail call void @init_nrnb(%struct.t_nrnb* %mynrnb) #6, !dbg !1484
  tail call void @llvm.dbg.value(metadata !{float* %mu_tot}, i64 0, metadata !1485), !dbg !1487
  store float 0.000000e+00, float* %mu_tot, align 4, !dbg !1488, !tbaa !1261
  %arrayidx1.i = getelementptr inbounds float* %mu_tot, i64 1, !dbg !1490
  store float 0.000000e+00, float* %arrayidx1.i, align 4, !dbg !1490, !tbaa !1261
  %arrayidx2.i = getelementptr inbounds float* %mu_tot, i64 2, !dbg !1491
  store float 0.000000e+00, float* %arrayidx2.i, align 4, !dbg !1491, !tbaa !1261
  %arraydecay = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 1, i64 0, !dbg !1492
  %shift_vec = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 48, !dbg !1492
  %2 = load [3 x float]** %shift_vec, align 8, !dbg !1492, !tbaa !1289
  tail call void @calc_shifts([3 x float]* %arraydecay, float* %box_size, [3 x float]* %2) #6, !dbg !1492
  %nodeid = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 0, !dbg !1493
  %3 = load i32* %nodeid, align 4, !dbg !1493, !tbaa !1255
  %idxprom = sext i32 %3 to i64, !dbg !1493
  %arrayidx = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %idxprom, !dbg !1493
  %4 = load i32* %arrayidx, align 4, !dbg !1493, !tbaa !1255
  store i32 %4, i32* %start, align 4, !dbg !1493, !tbaa !1255
  %5 = load i32* %nodeid, align 4, !dbg !1494, !tbaa !1255
  %idxprom3 = sext i32 %5 to i64, !dbg !1494
  %arrayidx4 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %idxprom3, !dbg !1494
  %6 = load i32* %arrayidx4, align 4, !dbg !1494, !tbaa !1255
  %add = add nsw i32 %6, %4, !dbg !1494
  store i32 %add, i32* %end, align 4, !dbg !1494, !tbaa !1255
  %7 = load float* %lambda, align 4, !dbg !1495, !tbaa !1261
  tail call void @init_mdatoms(%struct.t_mdatoms* %mdatoms, float %7, i32 1) #6, !dbg !1495
  %8 = load i32* %start, align 4, !dbg !1496, !tbaa !1255
  %nodeid5 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 0, !dbg !1496
  %9 = load i32* %nodeid5, align 4, !dbg !1496, !tbaa !1255
  %idxprom6 = sext i32 %9 to i64, !dbg !1496
  %arrayidx8 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %idxprom6, !dbg !1496
  %10 = load i32* %arrayidx8, align 4, !dbg !1496, !tbaa !1255
  %nstcomm = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 7, !dbg !1496
  %11 = load i32* %nstcomm, align 4, !dbg !1496, !tbaa !1255
  %call10 = tail call %struct.t_vcm* @init_vcm(%struct._IO_FILE* %log, %struct.t_topology* %top, %struct.t_commrec* %cr, %struct.t_mdatoms* %mdatoms, i32 %8, i32 %10, i32 %11) #6, !dbg !1496
  store %struct.t_vcm* %call10, %struct.t_vcm** %vcm, align 8, !dbg !1496, !tbaa !1289
  ret void, !dbg !1497
}
