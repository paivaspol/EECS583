define void @calc_disres_R_6(%struct.t_commrec* %mcr, i32 %nfa, i32* nocapture %forceatoms, %union.t_iparams* nocapture %ip, [3 x float]* nocapture %x, %struct.t_fcdata* nocapture %fcd) #0 {
entry:
  %ETerm3 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 0, i32 4
  %0 = load float* %ETerm3, align 4, !tbaa !3
  %ETerm14 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 0, i32 5
  %1 = load float* %ETerm14, align 4, !tbaa !3
  %rt5 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 0, i32 10
  %2 = load float** %rt5, align 8, !tbaa !4
  %rav6 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 0, i32 11
  %3 = load float** %rav6, align 8, !tbaa !4
  %Rtl_67 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 0, i32 12
  %4 = load float** %Rtl_67, align 8, !tbaa !4
  %Rt_68 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 0, i32 13
  %5 = load float** %Rt_68, align 8, !tbaa !4
  %Rav_69 = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 0, i32 14
  %6 = load float** %Rav_69, align 8, !tbaa !4
  %exp_min_t_tau = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 0, i32 6
  %7 = load float* %exp_min_t_tau, align 4, !tbaa !3
  %mul = fmul float %0, %7
  store float %mul, float* %exp_min_t_tau, align 4, !tbaa !3
  %conv = fpext float %mul to double
  %sub = fsub double 1.000000e+00, %conv
  %div = fdiv double 1.000000e+00, %sub
  %conv12 = fptrunc double %div to float
  %tobool = icmp ne %struct.t_commrec* %mcr, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %nnodes = getelementptr inbounds %struct.t_commrec* %mcr, i64 0, i32 1
  %8 = load i32* %nnodes, align 4, !tbaa !0
  %conv13 = sitofp i32 %8 to double
  %div14 = fdiv double 1.000000e+00, %conv13
  %conv15 = fptrunc double %div14 to float
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %invn.0 = phi float [ %conv15, %if.then ], [ 0.000000e+00, %entry ]
  %cmp169 = icmp sgt i32 %nfa, 0
  br i1 %cmp169, label %while.body.lr.ph, label %while.end93

while.body.lr.ph:                                 ; preds = %if.end
  %sub62 = fsub float %0, %mul
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %if.end92
  %indvars.iv175 = phi i64 [ 0, %while.body.lr.ph ], [ %indvars.iv.next176, %if.end92 ]
  %fa.0171 = phi i32 [ 0, %while.body.lr.ph ], [ %fa.1.lcssa, %if.end92 ]
  %idxprom = sext i32 %fa.0171 to i64
  %arrayidx = getelementptr inbounds i32* %forceatoms, i64 %idxprom
  %9 = load i32* %arrayidx, align 4, !tbaa !0
  %idxprom17 = sext i32 %9 to i64
  %label20 = getelementptr inbounds %union.t_iparams* %ip, i64 %idxprom17, i32 0, i32 5
  %10 = bitcast float* %label20 to i32*
  %11 = load i32* %10, align 4, !tbaa !0
  %arrayidx22 = getelementptr inbounds float* %6, i64 %indvars.iv175
  store float 0.000000e+00, float* %arrayidx22, align 4, !tbaa !3
  %arrayidx24 = getelementptr inbounds float* %5, i64 %indvars.iv175
  store float 0.000000e+00, float* %arrayidx24, align 4, !tbaa !3
  %cmp26167 = icmp slt i32 %fa.0171, %nfa
  br i1 %cmp26167, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %while.body, %while.body36.land.rhs_crit_edge
  %12 = phi i32 [ %.pre177, %while.body36.land.rhs_crit_edge ], [ %11, %while.body ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %while.body36.land.rhs_crit_edge ], [ %idxprom, %while.body ]
  %fa.1168 = phi i32 [ %add79, %while.body36.land.rhs_crit_edge ], [ %fa.0171, %while.body ]
  %cmp34 = icmp eq i32 %12, %11
  br i1 %cmp34, label %while.body36, label %while.end

while.body36:                                     ; preds = %land.rhs
  %13 = trunc i64 %indvars.iv to i32
  %div37 = sdiv i32 %13, 3
  %14 = add nsw i64 %indvars.iv, 1
  %arrayidx39 = getelementptr inbounds i32* %forceatoms, i64 %14
  %15 = load i32* %arrayidx39, align 4, !tbaa !0
  %16 = add nsw i64 %indvars.iv, 2
  %arrayidx42 = getelementptr inbounds i32* %forceatoms, i64 %16
  %17 = load i32* %arrayidx42, align 4, !tbaa !0
  %idxprom43 = sext i32 %15 to i64
  %arraydecay = getelementptr inbounds [3 x float]* %x, i64 %idxprom43, i64 0
  %idxprom45 = sext i32 %17 to i64
  %arraydecay47 = getelementptr inbounds [3 x float]* %x, i64 %idxprom45, i64 0
  %18 = load float* %arraydecay, align 4, !tbaa !3
  %19 = load float* %arraydecay47, align 4, !tbaa !3
  %sub.i = fsub float %18, %19
  %arrayidx2.i = getelementptr inbounds [3 x float]* %x, i64 %idxprom43, i64 1
  %20 = load float* %arrayidx2.i, align 4, !tbaa !3
  %arrayidx3.i = getelementptr inbounds [3 x float]* %x, i64 %idxprom45, i64 1
  %21 = load float* %arrayidx3.i, align 4, !tbaa !3
  %sub4.i = fsub float %20, %21
  %arrayidx5.i = getelementptr inbounds [3 x float]* %x, i64 %idxprom43, i64 2
  %22 = load float* %arrayidx5.i, align 4, !tbaa !3
  %arrayidx6.i = getelementptr inbounds [3 x float]* %x, i64 %idxprom45, i64 2
  %23 = load float* %arrayidx6.i, align 4, !tbaa !3
  %sub7.i = fsub float %22, %23
  %mul.i = fmul float %sub.i, %sub.i
  %mul4.i = fmul float %sub4.i, %sub4.i
  %add.i = fadd float %mul.i, %mul4.i
  %mul7.i = fmul float %sub7.i, %sub7.i
  %add8.i = fadd float %add.i, %mul7.i
  %conv51 = fpext float %add8.i to double
  %call52 = tail call double @sqrt(double %conv51) #4
  %div53 = fdiv double 1.000000e+00, %call52
  %conv54 = fptrunc double %div53 to float
  %mul55 = fmul float %conv54, %conv54
  %mul56 = fmul float %conv54, %mul55
  %conv59 = tail call float @sqrtf(float %add8.i) #1
  %idxprom60 = sext i32 %div37 to i64
  %arrayidx61 = getelementptr inbounds float* %2, i64 %idxprom60
  store float %conv59, float* %arrayidx61, align 4, !tbaa !3
  %arrayidx64 = getelementptr inbounds float* %3, i64 %idxprom60
  %24 = load float* %arrayidx64, align 4, !tbaa !3
  %mul65 = fmul float %sub62, %24
  %mul66 = fmul float %1, %mul56
  %add67 = fadd float %mul65, %mul66
  %mul68 = fmul float %conv12, %add67
  store float %mul68, float* %arrayidx64, align 4, !tbaa !3
  %mul71 = fmul float %mul56, %mul56
  %25 = load float* %arrayidx24, align 4, !tbaa !3
  %add74 = fadd float %25, %mul71
  store float %add74, float* %arrayidx24, align 4, !tbaa !3
  %mul75 = fmul float %mul68, %mul68
  %26 = load float* %arrayidx22, align 4, !tbaa !3
  %add78 = fadd float %26, %mul75
  store float %add78, float* %arrayidx22, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 3
  %add79 = add nsw i32 %fa.1168, 3
  %27 = trunc i64 %indvars.iv.next to i32
  %cmp26 = icmp slt i32 %27, %nfa
  br i1 %cmp26, label %while.body36.land.rhs_crit_edge, label %while.end

while.body36.land.rhs_crit_edge:                  ; preds = %while.body36
  %arrayidx29.phi.trans.insert = getelementptr inbounds i32* %forceatoms, i64 %indvars.iv.next
  %.pre = load i32* %arrayidx29.phi.trans.insert, align 4, !tbaa !0
  %idxprom30.phi.trans.insert = sext i32 %.pre to i64
  %label33.phi.trans.insert = getelementptr inbounds %union.t_iparams* %ip, i64 %idxprom30.phi.trans.insert, i32 0, i32 5
  %.phi.trans.insert = bitcast float* %label33.phi.trans.insert to i32*
  %.pre177 = load i32* %.phi.trans.insert, align 4, !tbaa !0
  br label %land.rhs

while.end:                                        ; preds = %while.body36, %land.rhs, %while.body
  %fa.1.lcssa = phi i32 [ %fa.0171, %while.body ], [ %fa.1168, %land.rhs ], [ %add79, %while.body36 ]
  br i1 %tobool, label %if.then81, label %if.end92

if.then81:                                        ; preds = %while.end
  %28 = load float* %arrayidx24, align 4, !tbaa !3
  %arrayidx85 = getelementptr inbounds float* %4, i64 %indvars.iv175
  store float %28, float* %arrayidx85, align 4, !tbaa !3
  %29 = load float* %arrayidx24, align 4, !tbaa !3
  %mul88 = fmul float %invn.0, %29
  store float %mul88, float* %arrayidx24, align 4, !tbaa !3
  %30 = load float* %arrayidx22, align 4, !tbaa !3
  %mul91 = fmul float %invn.0, %30
  store float %mul91, float* %arrayidx22, align 4, !tbaa !3
  br label %if.end92

if.end92:                                         ; preds = %if.then81, %while.end
  %indvars.iv.next176 = add i64 %indvars.iv175, 1
  %cmp = icmp slt i32 %fa.1.lcssa, %nfa
  br i1 %cmp, label %while.body, label %while.end93

while.end93:                                      ; preds = %if.end92, %if.end
  br i1 %tobool, label %land.lhs.true, label %if.end102

land.lhs.true:                                    ; preds = %while.end93
  %nnodes95 = getelementptr inbounds %struct.t_commrec* %mcr, i64 0, i32 1
  %31 = load i32* %nnodes95, align 4, !tbaa !0
  %cmp96 = icmp sgt i32 %31, 1
  br i1 %cmp96, label %if.then100, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %nthreads = getelementptr inbounds %struct.t_commrec* %mcr, i64 0, i32 5
  %32 = load i32* %nthreads, align 4, !tbaa !0
  %cmp98 = icmp sgt i32 %32, 1
  br i1 %cmp98, label %if.then100, label %if.end102

if.then100:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %nr = getelementptr inbounds %struct.t_fcdata* %fcd, i64 0, i32 0, i32 7
  %33 = load i32* %nr, align 4, !tbaa !0
  %mul101 = shl nsw i32 %33, 1
  tail call void @gmx_sumf(i32 %mul101, float* %5, %struct.t_commrec* %mcr) #4
  br label %if.end102

if.end102:                                        ; preds = %if.then100, %lor.lhs.false, %while.end93
  ret void
}
