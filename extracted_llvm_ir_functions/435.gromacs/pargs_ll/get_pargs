define void @get_pargs(i32* nocapture %argc, i8** %argv, i32 %nparg, %struct.t_pargs* nocapture %pa, i32 %bKeepArgs) #6 {
  %i = alloca i32, align 4
  %buf = alloca [32 x i8], align 16
  %1 = load i32* %argc, align 4, !tbaa !12
  %2 = add nsw i32 %1, 1
  %3 = tail call i8* @save_calloc(i8* getelementptr inbounds ([6 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str3, i64 0, i64 0), i32 58, i32 %2, i32 4) #10
  %4 = bitcast i8* %3 to i32*
  store i32 1, i32* %4, align 4, !tbaa !12
  %5 = load i32* %argc, align 4, !tbaa !12
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i32* %4, i64 %6
  store i32 1, i32* %7, align 4, !tbaa !12
  store i32 1, i32* %i, align 4, !tbaa !12
  %8 = load i32* %argc, align 4, !tbaa !12
  %9 = icmp sgt i32 %8, 1
  br i1 %9, label %.lr.ph19, label %._crit_edge20

.lr.ph19:                                         ; preds = %0
  %10 = icmp sgt i32 %nparg, 0
  %11 = getelementptr inbounds [32 x i8]* %buf, i64 0, i64 0
  %12 = add i32 %nparg, -1
  br label %13

; <label>:13                                      ; preds = %.lr.ph19, %._crit_edge16
  %storemerge17 = phi i32 [ 1, %.lr.ph19 ], [ %190, %._crit_edge16 ]
  %14 = sext i32 %storemerge17 to i64
  %15 = getelementptr inbounds i32* %4, i64 %14
  store i32 1, i32* %15, align 4, !tbaa !12
  br i1 %10, label %.lr.ph15, label %._crit_edge16

.lr.ph15:                                         ; preds = %13, %188
  %indvars.iv21 = phi i64 [ %indvars.iv.next22, %188 ], [ 0, %13 ]
  %16 = getelementptr inbounds %struct.t_pargs* %pa, i64 %indvars.iv21, i32 2
  %17 = load i32* %16, align 4, !tbaa !13
  %18 = icmp eq i32 %17, 4
  %19 = getelementptr inbounds %struct.t_pargs* %pa, i64 %indvars.iv21, i32 0
  %20 = load i8** %19, align 8, !tbaa !14
  br i1 %18, label %21, label %50

; <label>:21                                      ; preds = %.lr.ph15
  %22 = getelementptr inbounds i8* %20, i64 1
  %23 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %11, i32 0, i64 32, i8* getelementptr inbounds ([6 x i8]* @.str4, i64 0, i64 0), i8* %22) #10
  %24 = load i8** %19, align 8, !tbaa !14
  %25 = load i32* %i, align 4, !tbaa !12
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8** %argv, i64 %26
  %28 = load i8** %27, align 8, !tbaa !15
  %29 = call i32 @strcmp(i8* %24, i8* %28) #10
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %39

; <label>:31                                      ; preds = %21
  %32 = getelementptr inbounds %struct.t_pargs* %pa, i64 %indvars.iv21, i32 3
  %33 = bitcast %union.anon.2* %32 to i32**
  %34 = load i32** %33, align 8, !tbaa !15
  store i32 1, i32* %34, align 4, !tbaa !12
  %35 = getelementptr inbounds %struct.t_pargs* %pa, i64 %indvars.iv21, i32 1
  store i32 1, i32* %35, align 4, !tbaa !16
  %36 = load i32* %i, align 4, !tbaa !12
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32* %4, i64 %37
  store i32 0, i32* %38, align 4, !tbaa !12
  br label %188

; <label>:39                                      ; preds = %21
  %40 = call i32 @strcmp(i8* %11, i8* %28) #10
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %188

; <label>:42                                      ; preds = %39
  %43 = getelementptr inbounds %struct.t_pargs* %pa, i64 %indvars.iv21, i32 3
  %44 = bitcast %union.anon.2* %43 to i32**
  %45 = load i32** %44, align 8, !tbaa !15
  store i32 0, i32* %45, align 4, !tbaa !12
  %46 = getelementptr inbounds %struct.t_pargs* %pa, i64 %indvars.iv21, i32 1
  store i32 1, i32* %46, align 4, !tbaa !16
  %47 = load i32* %i, align 4, !tbaa !12
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32* %4, i64 %48
  store i32 0, i32* %49, align 4, !tbaa !12
  br label %188

; <label>:50                                      ; preds = %.lr.ph15
  %51 = load i32* %i, align 4, !tbaa !12
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8** %argv, i64 %52
  %54 = load i8** %53, align 8, !tbaa !15
  %55 = call i32 @strcmp(i8* %20, i8* %54) #10
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %188

; <label>:57                                      ; preds = %50
  %58 = getelementptr inbounds %struct.t_pargs* %pa, i64 %indvars.iv21, i32 1
  %59 = load i32* %58, align 4, !tbaa !16
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

; <label>:61                                      ; preds = %57
  %62 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !15
  %63 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %62, i8* getelementptr inbounds ([35 x i8]* @.str5, i64 0, i64 0), i8* %20) #10
  %.pre = load i32* %i, align 4, !tbaa !12
  br label %64

; <label>:64                                      ; preds = %57, %61
  %65 = phi i32 [ %51, %57 ], [ %.pre, %61 ]
  store i32 1, i32* %58, align 4, !tbaa !16
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i32* %4, i64 %66
  store i32 0, i32* %67, align 4, !tbaa !12
  %68 = load i32* %16, align 4, !tbaa !13
  switch i32 %68, label %183 [
    i32 0, label %69
    i32 2, label %75
    i32 1, label %75
    i32 3, label %82
    i32 6, label %88
    i32 5, label %125
  ]

; <label>:69                                      ; preds = %64
  %70 = load i32* %argc, align 4, !tbaa !12
  %71 = call i32 @iscan(i32 %70, i8** %argv, i32* %i) #10
  %72 = getelementptr inbounds %struct.t_pargs* %pa, i64 %indvars.iv21, i32 3
  %73 = bitcast %union.anon.2* %72 to i32**
  %74 = load i32** %73, align 8, !tbaa !15
  store i32 %71, i32* %74, align 4, !tbaa !12
  br label %184

; <label>:75                                      ; preds = %64, %64
  %76 = load i32* %argc, align 4, !tbaa !12
  %77 = call double @dscan(i32 %76, i8** %argv, i32* %i) #10
  %78 = fptrunc double %77 to float
  %79 = getelementptr inbounds %struct.t_pargs* %pa, i64 %indvars.iv21, i32 3
  %80 = bitcast %union.anon.2* %79 to float**
  %81 = load float** %80, align 8, !tbaa !15
  store float %78, float* %81, align 4, !tbaa !2
  br label %184

; <label>:82                                      ; preds = %64
  %83 = load i32* %argc, align 4, !tbaa !12
  %84 = call i8* @sscan(i32 %83, i8** %argv, i32* %i) #10
  %85 = getelementptr inbounds %struct.t_pargs* %pa, i64 %indvars.iv21, i32 3
  %86 = bitcast %union.anon.2* %85 to i8***
  %87 = load i8*** %86, align 8, !tbaa !15
  store i8* %84, i8** %87, align 8, !tbaa !15
  br label %184

; <label>:88                                      ; preds = %64
  %89 = load i32* %argc, align 4, !tbaa !12
  %90 = call i8* @sscan(i32 %89, i8** %argv, i32* %i) #10
  %91 = getelementptr inbounds %struct.t_pargs* %pa, i64 %indvars.iv21, i32 3
  %92 = bitcast %union.anon.2* %91 to i8***
  %93 = load i8*** %92, align 8, !tbaa !15
  %94 = getelementptr inbounds i8** %93, i64 1
  %95 = load i8** %94, align 8, !tbaa !15
  %96 = icmp eq i8* %95, null
  br i1 %96, label %._crit_edge10.thread, label %.lr.ph9

.lr.ph9:                                          ; preds = %88
  %97 = call i64 @strlen(i8* %90) #10
  br label %98

; <label>:98                                      ; preds = %.lr.ph9, %113
  %indvars.iv = phi i64 [ 1, %.lr.ph9 ], [ %indvars.iv.next, %113 ]
  %99 = phi i8* [ %95, %.lr.ph9 ], [ %115, %113 ]
  %match.06 = phi i32 [ -12345, %.lr.ph9 ], [ %match.1, %113 ]
  %100 = call i32 @strncasecmp(i8* %90, i8* %99, i64 %97) #10
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %113

; <label>:102                                     ; preds = %98
  %103 = icmp eq i32 %match.06, -12345
  br i1 %103, label %111, label %104

; <label>:104                                     ; preds = %102
  %105 = call i64 @strlen(i8* %99) #10
  %106 = sext i32 %match.06 to i64
  %107 = getelementptr inbounds i8** %93, i64 %106
  %108 = load i8** %107, align 8, !tbaa !15
  %109 = call i64 @strlen(i8* %108) #10
  %110 = icmp ult i64 %105, %109
  br i1 %110, label %111, label %113

; <label>:111                                     ; preds = %104, %102
  %112 = trunc i64 %indvars.iv to i32
  br label %113

; <label>:113                                     ; preds = %98, %111, %104
  %match.1 = phi i32 [ %112, %111 ], [ %match.06, %104 ], [ %match.06, %98 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %114 = getelementptr inbounds i8** %93, i64 %indvars.iv.next
  %115 = load i8** %114, align 8, !tbaa !15
  %116 = icmp eq i8* %115, null
  br i1 %116, label %._crit_edge10, label %98

._crit_edge10:                                    ; preds = %113
  %117 = icmp eq i32 %match.1, -12345
  br i1 %117, label %._crit_edge10.thread, label %118

; <label>:118                                     ; preds = %._crit_edge10
  %119 = sext i32 %match.1 to i64
  %120 = getelementptr inbounds i8** %93, i64 %119
  %121 = bitcast i8** %120 to i64*
  %122 = load i64* %121, align 8, !tbaa !15
  %123 = bitcast i8** %93 to i64*
  store i64 %122, i64* %123, align 8, !tbaa !15
  br label %184

._crit_edge10.thread:                             ; preds = %88, %._crit_edge10
  %124 = load i8** %19, align 8, !tbaa !14
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([34 x i8]* @.str6, i64 0, i64 0), i8* %90, i8* %124) #10
  br label %184

; <label>:125                                     ; preds = %64
  %126 = load i32* %argc, align 4, !tbaa !12
  %127 = call double @dscan(i32 %126, i8** %argv, i32* %i) #10
  %128 = fptrunc double %127 to float
  %129 = getelementptr inbounds %struct.t_pargs* %pa, i64 %indvars.iv21, i32 3
  %130 = bitcast %union.anon.2* %129 to [3 x float]**
  %131 = load [3 x float]** %130, align 8, !tbaa !15
  %132 = getelementptr inbounds [3 x float]* %131, i64 0, i64 0
  store float %128, float* %132, align 4, !tbaa !2
  %133 = load i32* %i, align 4, !tbaa !12
  %134 = add nsw i32 %133, 1
  %135 = load i32* %argc, align 4, !tbaa !12
  %136 = icmp eq i32 %134, %135
  br i1 %136, label %147, label %137

; <label>:137                                     ; preds = %125
  %138 = sext i32 %134 to i64
  %139 = getelementptr inbounds i8** %argv, i64 %138
  %140 = load i8** %139, align 8, !tbaa !15
  %141 = load i8* %140, align 1, !tbaa !17
  %142 = icmp eq i8 %141, 45
  br i1 %142, label %143, label %150

; <label>:143                                     ; preds = %137
  %144 = getelementptr inbounds i8* %140, i64 1
  %145 = load i8* %144, align 1, !tbaa !17
  %146 = sext i8 %145 to i32
  %isdigittmp2 = add nsw i32 %146, -48
  %isdigit3 = icmp ult i32 %isdigittmp2, 10
  br i1 %isdigit3, label %150, label %147

; <label>:147                                     ; preds = %143, %125
  %148 = getelementptr inbounds [3 x float]* %131, i64 0, i64 2
  store float %128, float* %148, align 4, !tbaa !2
  %149 = getelementptr inbounds [3 x float]* %131, i64 0, i64 1
  store float %128, float* %149, align 4, !tbaa !2
  br label %184

; <label>:150                                     ; preds = %143, %137
  %151 = sext i32 %133 to i64
  %152 = getelementptr inbounds i32* %4, i64 %151
  store i32 0, i32* %152, align 4, !tbaa !12
  %153 = load i32* %argc, align 4, !tbaa !12
  %154 = call double @dscan(i32 %153, i8** %argv, i32* %i) #10
  %155 = fptrunc double %154 to float
  %156 = load [3 x float]** %130, align 8, !tbaa !15
  %157 = getelementptr inbounds [3 x float]* %156, i64 0, i64 1
  store float %155, float* %157, align 4, !tbaa !2
  %158 = load i32* %i, align 4, !tbaa !12
  %159 = add nsw i32 %158, 1
  %160 = load i32* %argc, align 4, !tbaa !12
  %161 = icmp eq i32 %159, %160
  br i1 %161, label %172, label %162

; <label>:162                                     ; preds = %150
  %163 = sext i32 %159 to i64
  %164 = getelementptr inbounds i8** %argv, i64 %163
  %165 = load i8** %164, align 8, !tbaa !15
  %166 = load i8* %165, align 1, !tbaa !17
  %167 = icmp eq i8 %166, 45
  br i1 %167, label %168, label %174

; <label>:168                                     ; preds = %162
  %169 = getelementptr inbounds i8* %165, i64 1
  %170 = load i8* %169, align 1, !tbaa !17
  %171 = sext i8 %170 to i32
  %isdigittmp = add nsw i32 %171, -48
  %isdigit = icmp ult i32 %isdigittmp, 10
  br i1 %isdigit, label %174, label %172

; <label>:172                                     ; preds = %168, %150
  %173 = load i8** %19, align 8, !tbaa !14
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([44 x i8]* @.str7, i64 0, i64 0), i8* %173) #10
  %.pre23 = load i32* %i, align 4, !tbaa !12
  br label %174

; <label>:174                                     ; preds = %172, %168, %162
  %175 = phi i32 [ %.pre23, %172 ], [ %158, %168 ], [ %158, %162 ]
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds i32* %4, i64 %176
  store i32 0, i32* %177, align 4, !tbaa !12
  %178 = load i32* %argc, align 4, !tbaa !12
  %179 = call double @dscan(i32 %178, i8** %argv, i32* %i) #10
  %180 = fptrunc double %179 to float
  %181 = load [3 x float]** %130, align 8, !tbaa !15
  %182 = getelementptr inbounds [3 x float]* %181, i64 0, i64 2
  store float %180, float* %182, align 4, !tbaa !2
  br label %184

; <label>:183                                     ; preds = %64
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([25 x i8]* @.str8, i64 0, i64 0), i32 %68) #10
  br label %184

; <label>:184                                     ; preds = %147, %174, %118, %._crit_edge10.thread, %183, %82, %75, %69
  %185 = load i32* %i, align 4, !tbaa !12
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds i32* %4, i64 %186
  store i32 0, i32* %187, align 4, !tbaa !12
  br label %188

; <label>:188                                     ; preds = %39, %42, %31, %184, %50
  %indvars.iv.next22 = add nuw nsw i64 %indvars.iv21, 1
  %lftr.wideiv = trunc i64 %indvars.iv21 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %12
  br i1 %exitcond, label %._crit_edge16, label %.lr.ph15

._crit_edge16:                                    ; preds = %188, %13
  %189 = load i32* %i, align 4, !tbaa !12
  %190 = add nsw i32 %189, 1
  store i32 %190, i32* %i, align 4, !tbaa !12
  %191 = load i32* %argc, align 4, !tbaa !12
  %192 = icmp slt i32 %190, %191
  br i1 %192, label %13, label %._crit_edge20

._crit_edge20:                                    ; preds = %._crit_edge16, %0
  %193 = phi i32 [ %8, %0 ], [ %191, %._crit_edge16 ]
  %194 = icmp eq i32 %bKeepArgs, 0
  br i1 %194, label %.preheader, label %213

.preheader:                                       ; preds = %._crit_edge20
  store i32 0, i32* %i, align 4, !tbaa !12
  %195 = icmp slt i32 %193, 0
  br i1 %195, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.preheader, %209
  %j.15 = phi i32 [ %j.2, %209 ], [ 0, %.preheader ]
  %196 = phi i32 [ %210, %209 ], [ 0, %.preheader ]
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds i32* %4, i64 %197
  %199 = load i32* %198, align 4, !tbaa !12
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %209, label %201

; <label>:201                                     ; preds = %.lr.ph
  %202 = getelementptr inbounds i8** %argv, i64 %197
  %203 = bitcast i8** %202 to i64*
  %204 = load i64* %203, align 8, !tbaa !15
  %205 = add nsw i32 %j.15, 1
  %206 = sext i32 %j.15 to i64
  %207 = getelementptr inbounds i8** %argv, i64 %206
  %208 = bitcast i8** %207 to i64*
  store i64 %204, i64* %208, align 8, !tbaa !15
  br label %209

; <label>:209                                     ; preds = %.lr.ph, %201
  %j.2 = phi i32 [ %205, %201 ], [ %j.15, %.lr.ph ]
  %210 = add nsw i32 %196, 1
  store i32 %210, i32* %i, align 4, !tbaa !12
  %211 = icmp slt i32 %196, %193
  br i1 %211, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %209, %.preheader
  %j.1.lcssa = phi i32 [ 0, %.preheader ], [ %j.2, %209 ]
  %212 = add nsw i32 %j.1.lcssa, -1
  store i32 %212, i32* %argc, align 4, !tbaa !12
  br label %213

; <label>:213                                     ; preds = %._crit_edge20, %._crit_edge
  call void @save_free(i8* getelementptr inbounds ([6 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str3, i64 0, i64 0), i32 140, i8* %3) #10
  ret void
}
