define i8* @opt2parg_str(i8* %option, i32 %nparg, %struct.t_pargs* nocapture %pa) #2 {
entry:
  %cmp9 = icmp sgt i32 %nparg, 0
  br i1 %cmp9, label %for.body, label %for.end

for.cond:                                         ; preds = %for.body
  %0 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %0, %nparg
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.cond
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond ], [ 0, %entry ]
  %option1 = getelementptr inbounds %struct.t_pargs* %pa, i64 %indvars.iv, i32 0
  %1 = load i8** %option1, align 8, !tbaa !0
  %call = tail call i32 @strcmp(i8* %1, i8* %option) #7
  %cmp2 = icmp eq i32 %call, 0
  %indvars.iv.next = add i64 %indvars.iv, 1
  br i1 %cmp2, label %if.then, label %for.cond

if.then:                                          ; preds = %for.body
  %u = getelementptr inbounds %struct.t_pargs* %pa, i64 %indvars.iv, i32 3
  %c = bitcast %union.anon* %u to i8***
  %2 = load i8*** %c, align 8, !tbaa !0
  %3 = load i8** %2, align 8, !tbaa !0
  br label %return

for.end:                                          ; preds = %for.cond, %entry
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([29 x i8]* @.str12, i64 0, i64 0), i8* %option) #8
  br label %return

return:                                           ; preds = %for.end, %if.then
  %retval.0 = phi i8* [ %3, %if.then ], [ null, %for.end ]
  ret i8* %retval.0
}
