define i32 @opt2parg_bSet(i8* %option, i32 %nparg, %struct.t_pargs* nocapture %pa) #3 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %option}, i64 0, metadata !119), !dbg !344
  tail call void @llvm.dbg.value(metadata !{i32 %nparg}, i64 0, metadata !120), !dbg !344
  tail call void @llvm.dbg.value(metadata !{%struct.t_pargs* %pa}, i64 0, metadata !121), !dbg !344
  tail call void @llvm.dbg.value(metadata !29, i64 0, metadata !122), !dbg !345
  %cmp9 = icmp sgt i32 %nparg, 0, !dbg !345
  br i1 %cmp9, label %for.body, label %for.end, !dbg !345

for.cond:                                         ; preds = %for.body
  %0 = trunc i64 %indvars.iv.next to i32, !dbg !345
  %cmp = icmp slt i32 %0, %nparg, !dbg !345
  br i1 %cmp, label %for.body, label %for.end, !dbg !345

for.body:                                         ; preds = %entry, %for.cond
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond ], [ 0, %entry ]
  %option1 = getelementptr inbounds %struct.t_pargs* %pa, i64 %indvars.iv, i32 0, !dbg !347
  %1 = load i8** %option1, align 8, !dbg !347, !tbaa !222
  %call = tail call i32 @strcmp(i8* %1, i8* %option) #8, !dbg !347
  %cmp2 = icmp eq i32 %call, 0, !dbg !347
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !345
  br i1 %cmp2, label %if.then, label %for.cond, !dbg !347

if.then:                                          ; preds = %for.body
  %bSet = getelementptr inbounds %struct.t_pargs* %pa, i64 %indvars.iv, i32 1, !dbg !348
  %2 = load i32* %bSet, align 4, !dbg !348, !tbaa !230
  br label %return, !dbg !348

for.end:                                          ; preds = %for.cond, %entry
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([27 x i8]* @.str13, i64 0, i64 0), i8* %option) #9, !dbg !349
  br label %return, !dbg !350

return:                                           ; preds = %for.end, %if.then
  %retval.0 = phi i32 [ %2, %if.then ], [ 0, %for.end ]
  ret i32 %retval.0, !dbg !351
}
