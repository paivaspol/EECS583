define void @upd_mdebin(%struct.t_mdebin* %md, %struct.__sFILE* %fp_dgdl, float %tmass, i32 %step, float %time, float* nocapture readonly %ener, [3 x float]* nocapture readonly %box, [3 x float]* %svir, [3 x float]* %fvir, [3 x float]* %vir, [3 x float]* %pres, %struct.t_groups* %grps, float* %mu_tot, i32 %bNoseHoover) #4 {
  %bs = alloca [6 x float], align 16
  %tricl_bs = alloca [9 x float], align 16
  %eee = alloca [7 x float], align 16
  %ecopy = alloca [44 x float], align 16
  %tmp = alloca float, align 4
  %1 = bitcast [9 x float]* %tricl_bs to i8*
  call void @llvm.lifetime.start(i64 36, i8* %1) #5
  %2 = bitcast [44 x float]* %ecopy to i8*
  call void @llvm.lifetime.start(i64 176, i8* %2) #5
  br label %3

; <label>:3                                       ; preds = %15, %0
  %indvars.iv.i = phi i64 [ 0, %0 ], [ %indvars.iv.next.i, %15 ]
  %j.02.i = phi i32 [ 0, %0 ], [ %j.1.i, %15 ]
  %4 = getelementptr inbounds [44 x i32]* @bEner, i64 0, i64 %indvars.iv.i
  %5 = load i32* %4, align 4, !tbaa !18
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %15, label %7

; <label>:7                                       ; preds = %3
  %8 = getelementptr inbounds float* %ener, i64 %indvars.iv.i
  %9 = bitcast float* %8 to i32*
  %10 = load i32* %9, align 4, !tbaa !14
  %11 = add nsw i32 %j.02.i, 1
  %12 = sext i32 %j.02.i to i64
  %13 = getelementptr inbounds [44 x float]* %ecopy, i64 0, i64 %12
  %14 = bitcast float* %13 to i32*
  store i32 %10, i32* %14, align 4, !tbaa !14
  br label %15

; <label>:15                                      ; preds = %7, %3
  %j.1.i = phi i32 [ %11, %7 ], [ %j.02.i, %3 ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 44
  br i1 %exitcond.i, label %copy_energy.exit, label %3

copy_energy.exit:                                 ; preds = %15
  %16 = getelementptr inbounds [44 x float]* %ecopy, i64 0, i64 0
  %17 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 0
  %18 = load %struct.t_ebin** %17, align 8, !tbaa !29
  %19 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 1
  %20 = load i32* %19, align 4, !tbaa !31
  %21 = load i32* @f_nre, align 4, !tbaa !18
  call void @add_ebin(%struct.t_ebin* %18, i32 %20, i32 %21, float* %16, i32 %step) #8
  %22 = load i32* @bPC, align 4, !tbaa !18
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %29

; <label>:24                                      ; preds = %copy_energy.exit
  %25 = getelementptr inbounds %struct.t_groups* %grps, i64 0, i32 3, i32 0
  %26 = load float* %25, align 4, !tbaa !39
  %fabsf = call float @fabsf(float %26) #10
  %27 = fpext float %fabsf to double
  %28 = fcmp ogt double %27, 1.200000e-38
  br i1 %28, label %29, label %.thread

; <label>:29                                      ; preds = %copy_energy.exit, %24
  %30 = load i32* @bTricl, align 4, !tbaa !18
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %.preheader5, label %32

; <label>:32                                      ; preds = %29
  %33 = bitcast [3 x float]* %box to i32*
  %34 = load i32* %33, align 4, !tbaa !14
  %35 = bitcast [9 x float]* %tricl_bs to i32*
  store i32 %34, i32* %35, align 16, !tbaa !14
  %36 = getelementptr inbounds [3 x float]* %box, i64 1
  %37 = bitcast [3 x float]* %36 to i32*
  %38 = load i32* %37, align 4, !tbaa !14
  %39 = getelementptr inbounds [9 x float]* %tricl_bs, i64 0, i64 1
  %40 = bitcast float* %39 to i32*
  store i32 %38, i32* %40, align 4, !tbaa !14
  %41 = getelementptr inbounds [3 x float]* %box, i64 1, i64 1
  %42 = bitcast float* %41 to i32*
  %43 = load i32* %42, align 4, !tbaa !14
  %44 = getelementptr inbounds [9 x float]* %tricl_bs, i64 0, i64 2
  %45 = bitcast float* %44 to i32*
  store i32 %43, i32* %45, align 8, !tbaa !14
  %46 = getelementptr inbounds [3 x float]* %box, i64 2
  %47 = bitcast [3 x float]* %46 to i32*
  %48 = load i32* %47, align 4, !tbaa !14
  %49 = getelementptr inbounds [9 x float]* %tricl_bs, i64 0, i64 3
  %50 = bitcast float* %49 to i32*
  store i32 %48, i32* %50, align 4, !tbaa !14
  %51 = getelementptr inbounds [3 x float]* %box, i64 2, i64 1
  %52 = bitcast float* %51 to i32*
  %53 = load i32* %52, align 4, !tbaa !14
  %54 = getelementptr inbounds [9 x float]* %tricl_bs, i64 0, i64 4
  %55 = bitcast float* %54 to i32*
  store i32 %53, i32* %55, align 16, !tbaa !14
  %56 = getelementptr inbounds [3 x float]* %box, i64 2, i64 2
  %57 = load float* %56, align 4, !tbaa !14
  %58 = getelementptr inbounds [9 x float]* %tricl_bs, i64 0, i64 5
  store float %57, float* %58, align 4, !tbaa !14
  %59 = bitcast i32 %34 to float
  %60 = bitcast i32 %43 to float
  %61 = fmul float %59, %60
  %62 = fmul float %57, %61
  %63 = getelementptr inbounds [9 x float]* %tricl_bs, i64 0, i64 6
  store float %62, float* %63, align 8, !tbaa !14
  %64 = fpext float %tmass to double
  %65 = fmul double %64, 0x3A6071F8353EEBCB
  %66 = fpext float %62 to double
  %67 = fmul double %66, 1.000000e-09
  %68 = fmul double %67, 1.000000e-09
  %69 = fmul double %68, 1.000000e-09
  %70 = fdiv double %65, %69
  %71 = fptrunc double %70 to float
  %72 = getelementptr inbounds [9 x float]* %tricl_bs, i64 0, i64 7
  store float %71, float* %72, align 4, !tbaa !14
  br label %97

.preheader5:                                      ; preds = %29, %.preheader5
  %indvars.iv30 = phi i64 [ %indvars.iv.next31, %.preheader5 ], [ 0, %29 ]
  %73 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv30, i64 %indvars.iv30
  %74 = bitcast float* %73 to i32*
  %75 = load i32* %74, align 4, !tbaa !14
  %76 = getelementptr inbounds [6 x float]* %bs, i64 0, i64 %indvars.iv30
  %77 = bitcast float* %76 to i32*
  store i32 %75, i32* %77, align 4, !tbaa !14
  %indvars.iv.next31 = add nuw nsw i64 %indvars.iv30, 1
  %exitcond32 = icmp eq i64 %indvars.iv.next31, 3
  br i1 %exitcond32, label %78, label %.preheader5

; <label>:78                                      ; preds = %.preheader5
  %79 = getelementptr inbounds [6 x float]* %bs, i64 0, i64 0
  %80 = load float* %79, align 16, !tbaa !14
  %81 = getelementptr inbounds [6 x float]* %bs, i64 0, i64 1
  %82 = load float* %81, align 4, !tbaa !14
  %83 = fmul float %80, %82
  %84 = getelementptr inbounds [6 x float]* %bs, i64 0, i64 2
  %85 = load float* %84, align 8, !tbaa !14
  %86 = fmul float %83, %85
  %87 = getelementptr inbounds [6 x float]* %bs, i64 0, i64 3
  store float %86, float* %87, align 4, !tbaa !14
  %88 = fpext float %tmass to double
  %89 = fmul double %88, 0x3A6071F8353EEBCB
  %90 = fpext float %86 to double
  %91 = fmul double %90, 1.000000e-09
  %92 = fmul double %91, 1.000000e-09
  %93 = fmul double %92, 1.000000e-09
  %94 = fdiv double %89, %93
  %95 = fptrunc double %94 to float
  %96 = getelementptr inbounds [6 x float]* %bs, i64 0, i64 4
  store float %95, float* %96, align 16, !tbaa !14
  br label %97

; <label>:97                                      ; preds = %32, %78
  br i1 %23, label %.thread, label %98

; <label>:98                                      ; preds = %97
  %99 = load i32* @bTricl, align 4, !tbaa !18
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds float* %ener, i64 41
  %102 = load float* %101, align 4
  br i1 %100, label %115, label %103

; <label>:103                                     ; preds = %98
  %104 = getelementptr inbounds [9 x float]* %tricl_bs, i64 0, i64 6
  %105 = load float* %104, align 8, !tbaa !14
  %106 = fmul float %105, %102
  %107 = fpext float %106 to double
  %108 = fdiv double %107, 1.660540e+01
  %109 = fptrunc double %108 to float
  %110 = getelementptr inbounds [9 x float]* %tricl_bs, i64 0, i64 8
  store float %109, float* %110, align 16, !tbaa !14
  %111 = load %struct.t_ebin** %17, align 8, !tbaa !29
  %112 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 2
  %113 = load i32* %112, align 4, !tbaa !32
  %114 = getelementptr inbounds [9 x float]* %tricl_bs, i64 0, i64 0
  call void @add_ebin(%struct.t_ebin* %111, i32 %113, i32 9, float* %114, i32 %step) #8
  br label %.thread

; <label>:115                                     ; preds = %98
  %116 = getelementptr inbounds [6 x float]* %bs, i64 0, i64 3
  %117 = load float* %116, align 4, !tbaa !14
  %118 = fmul float %117, %102
  %119 = fpext float %118 to double
  %120 = fdiv double %119, 1.660540e+01
  %121 = fptrunc double %120 to float
  %122 = getelementptr inbounds [6 x float]* %bs, i64 0, i64 5
  store float %121, float* %122, align 4, !tbaa !14
  %123 = load %struct.t_ebin** %17, align 8, !tbaa !29
  %124 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 2
  %125 = load i32* %124, align 4, !tbaa !32
  %126 = getelementptr inbounds [6 x float]* %bs, i64 0, i64 0
  call void @add_ebin(%struct.t_ebin* %123, i32 %125, i32 6, float* %126, i32 %step) #8
  br label %.thread

.thread:                                          ; preds = %24, %97, %103, %115
  %127 = load i32* @bShake, align 4, !tbaa !18
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %138, label %129

; <label>:129                                     ; preds = %.thread
  %130 = load %struct.t_ebin** %17, align 8, !tbaa !29
  %131 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 3
  %132 = load i32* %131, align 4, !tbaa !33
  %133 = getelementptr inbounds [3 x float]* %svir, i64 0, i64 0
  call void @add_ebin(%struct.t_ebin* %130, i32 %132, i32 9, float* %133, i32 %step) #8
  %134 = load %struct.t_ebin** %17, align 8, !tbaa !29
  %135 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 4
  %136 = load i32* %135, align 4, !tbaa !34
  %137 = getelementptr inbounds [3 x float]* %fvir, i64 0, i64 0
  call void @add_ebin(%struct.t_ebin* %134, i32 %136, i32 9, float* %137, i32 %step) #8
  br label %138

; <label>:138                                     ; preds = %.thread, %129
  %139 = load %struct.t_ebin** %17, align 8, !tbaa !29
  %140 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 6
  %141 = load i32* %140, align 4, !tbaa !35
  %142 = getelementptr inbounds [3 x float]* %vir, i64 0, i64 0
  call void @add_ebin(%struct.t_ebin* %139, i32 %141, i32 9, float* %142, i32 %step) #8
  %143 = load %struct.t_ebin** %17, align 8, !tbaa !29
  %144 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 5
  %145 = load i32* %144, align 4, !tbaa !36
  %146 = getelementptr inbounds [3 x float]* %pres, i64 0, i64 0
  call void @add_ebin(%struct.t_ebin* %143, i32 %145, i32 9, float* %146, i32 %step) #8
  %147 = getelementptr inbounds [3 x float]* %pres, i64 2, i64 2
  %148 = load float* %147, align 4, !tbaa !14
  %149 = fpext float %148 to double
  %150 = load float* %146, align 4, !tbaa !14
  %151 = getelementptr inbounds [3 x float]* %pres, i64 1, i64 1
  %152 = load float* %151, align 4, !tbaa !14
  %153 = fadd float %150, %152
  %154 = fpext float %153 to double
  %155 = fmul double %154, 5.000000e-01
  %156 = fsub double %149, %155
  %157 = getelementptr inbounds [3 x float]* %box, i64 2, i64 2
  %158 = load float* %157, align 4, !tbaa !14
  %159 = fpext float %158 to double
  %160 = fmul double %159, %156
  %161 = fptrunc double %160 to float
  store float %161, float* %tmp, align 4, !tbaa !14
  %162 = load %struct.t_ebin** %17, align 8, !tbaa !29
  %163 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 7
  %164 = load i32* %163, align 4, !tbaa !37
  call void @add_ebin(%struct.t_ebin* %162, i32 %164, i32 1, float* %tmp, i32 %step) #8
  %165 = load %struct.t_ebin** %17, align 8, !tbaa !29
  %166 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 10
  %167 = load i32* %166, align 4, !tbaa !38
  call void @add_ebin(%struct.t_ebin* %165, i32 %167, i32 3, float* %mu_tot, i32 %step) #8
  %168 = getelementptr inbounds %struct.t_groups* %grps, i64 0, i32 3, i32 0
  %169 = load float* %168, align 4, !tbaa !39
  %fabsf1 = call float @fabsf(float %169) #10
  %170 = fpext float %fabsf1 to double
  %171 = fcmp ogt double %170, 1.200000e-38
  br i1 %171, label %172, label %215

; <label>:172                                     ; preds = %138
  %173 = load %struct.t_ebin** %17, align 8, !tbaa !29
  %174 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 11
  %175 = load i32* %174, align 4, !tbaa !43
  %176 = getelementptr inbounds %struct.t_groups* %grps, i64 0, i32 3, i32 2
  call void @add_ebin(%struct.t_ebin* %173, i32 %175, i32 1, float* %176, i32 %step) #8
  %177 = load i32* @bTricl, align 4, !tbaa !18
  %178 = icmp eq i32 %177, 0
  %179 = load float* %168, align 4, !tbaa !39
  %180 = fpext float %179 to double
  %181 = load float* %176, align 4, !tbaa !59
  %182 = fpext float %181 to double
  %183 = fmul double %182, 1.000000e-12
  %184 = fdiv double %180, %183
  br i1 %178, label %198, label %185

; <label>:185                                     ; preds = %172
  %186 = getelementptr inbounds [9 x float]* %tricl_bs, i64 0, i64 7
  %187 = load float* %186, align 4, !tbaa !14
  %188 = fpext float %187 to double
  %189 = fmul double %184, %188
  %190 = load float* %157, align 4, !tbaa !14
  %191 = fpext float %190 to double
  %192 = fmul double %191, 1.000000e-09
  %193 = fdiv double %192, 0x401921FB54442D18
  %194 = fptrunc double %193 to float
  %195 = fmul float %194, %194
  %196 = fpext float %195 to double
  %197 = fmul double %189, %196
  br label %211

; <label>:198                                     ; preds = %172
  %199 = getelementptr inbounds [6 x float]* %bs, i64 0, i64 4
  %200 = load float* %199, align 16, !tbaa !14
  %201 = fpext float %200 to double
  %202 = fmul double %184, %201
  %203 = load float* %157, align 4, !tbaa !14
  %204 = fpext float %203 to double
  %205 = fmul double %204, 1.000000e-09
  %206 = fdiv double %205, 0x401921FB54442D18
  %207 = fptrunc double %206 to float
  %208 = fmul float %207, %207
  %209 = fpext float %208 to double
  %210 = fmul double %202, %209
  br label %211

; <label>:211                                     ; preds = %198, %185
  %.pn = phi double [ %210, %198 ], [ %197, %185 ]
  %storemerge.in = fdiv double 1.000000e+00, %.pn
  %storemerge = fptrunc double %storemerge.in to float
  store float %storemerge, float* %tmp, align 4, !tbaa !14
  %212 = load %struct.t_ebin** %17, align 8, !tbaa !29
  %213 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 12
  %214 = load i32* %213, align 4, !tbaa !44
  call void @add_ebin(%struct.t_ebin* %212, i32 %214, i32 1, float* %tmp, i32 %step) #8
  br label %215

; <label>:215                                     ; preds = %211, %138
  %216 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 13
  %217 = load i32* %216, align 4, !tbaa !49
  %218 = icmp sgt i32 %217, 1
  br i1 %218, label %.preheader4, label %.loopexit

.preheader4:                                      ; preds = %215
  %219 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 14
  %220 = load i32* %219, align 4, !tbaa !48
  %221 = icmp sgt i32 %220, 0
  br i1 %221, label %.preheader3.lr.ph, label %.loopexit

.preheader3.lr.ph:                                ; preds = %.preheader4
  %222 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 18
  %223 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 15
  %224 = getelementptr inbounds [7 x float]* %eee, i64 0, i64 0
  br label %.preheader3

.preheader3:                                      ; preds = %.preheader3.lr.ph, %265
  %225 = phi i32 [ %220, %.preheader3.lr.ph ], [ %266, %265 ]
  %i.020 = phi i32 [ 0, %.preheader3.lr.ph ], [ %267, %265 ]
  %n.019 = phi i32 [ 0, %.preheader3.lr.ph ], [ %n.1.lcssa, %265 ]
  %226 = icmp slt i32 %i.020, %225
  br i1 %226, label %.lr.ph16, label %265

.lr.ph16:                                         ; preds = %.preheader3
  %227 = sext i32 %n.019 to i64
  br label %228

; <label>:228                                     ; preds = %.lr.ph16, %255
  %indvars.iv28 = phi i64 [ %227, %.lr.ph16 ], [ %indvars.iv.next29, %255 ]
  %229 = phi i32 [ %225, %.lr.ph16 ], [ %262, %255 ]
  %j.014 = phi i32 [ %i.020, %.lr.ph16 ], [ %261, %255 ]
  %230 = icmp slt i32 %i.020, %j.014
  br i1 %230, label %231, label %234

; <label>:231                                     ; preds = %228
  %232 = mul nsw i32 %229, %i.020
  %233 = add nsw i32 %232, %j.014
  br label %237

; <label>:234                                     ; preds = %228
  %235 = mul nsw i32 %229, %j.014
  %236 = add nsw i32 %235, %i.020
  br label %237

; <label>:237                                     ; preds = %234, %231
  %238 = phi i32 [ %233, %231 ], [ %236, %234 ]
  %239 = sext i32 %238 to i64
  br label %240

; <label>:240                                     ; preds = %254, %237
  %indvars.iv26 = phi i64 [ 0, %237 ], [ %indvars.iv.next27, %254 ]
  %kk.013 = phi i32 [ 0, %237 ], [ %kk.1, %254 ]
  %241 = getelementptr inbounds [7 x i32]* @bEInd, i64 0, i64 %indvars.iv26
  %242 = load i32* %241, align 4, !tbaa !18
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %254, label %244

; <label>:244                                     ; preds = %240
  %245 = getelementptr inbounds %struct.t_groups* %grps, i64 0, i32 0, i32 1, i64 %indvars.iv26
  %246 = load float** %245, align 8, !tbaa !28
  %247 = getelementptr inbounds float* %246, i64 %239
  %248 = bitcast float* %247 to i32*
  %249 = load i32* %248, align 4, !tbaa !14
  %250 = add nsw i32 %kk.013, 1
  %251 = sext i32 %kk.013 to i64
  %252 = getelementptr inbounds [7 x float]* %eee, i64 0, i64 %251
  %253 = bitcast float* %252 to i32*
  store i32 %249, i32* %253, align 4, !tbaa !14
  br label %254

; <label>:254                                     ; preds = %240, %244
  %kk.1 = phi i32 [ %250, %244 ], [ %kk.013, %240 ]
  %indvars.iv.next27 = add nuw nsw i64 %indvars.iv26, 1
  %exitcond = icmp eq i64 %indvars.iv.next27, 7
  br i1 %exitcond, label %255, label %240

; <label>:255                                     ; preds = %254
  %256 = load %struct.t_ebin** %17, align 8, !tbaa !29
  %257 = load i32** %222, align 8, !tbaa !50
  %258 = getelementptr inbounds i32* %257, i64 %indvars.iv28
  %259 = load i32* %258, align 4, !tbaa !18
  %260 = load i32* %223, align 4, !tbaa !45
  call void @add_ebin(%struct.t_ebin* %256, i32 %259, i32 %260, float* %224, i32 %step) #8
  %indvars.iv.next29 = add i64 %indvars.iv28, 1
  %261 = add nuw nsw i32 %j.014, 1
  %262 = load i32* %219, align 4, !tbaa !48
  %263 = icmp slt i32 %261, %262
  br i1 %263, label %228, label %._crit_edge17

._crit_edge17:                                    ; preds = %255
  %264 = trunc i64 %indvars.iv.next29 to i32
  br label %265

; <label>:265                                     ; preds = %._crit_edge17, %.preheader3
  %266 = phi i32 [ %262, %._crit_edge17 ], [ %225, %.preheader3 ]
  %n.1.lcssa = phi i32 [ %264, %._crit_edge17 ], [ %n.019, %.preheader3 ]
  %267 = add nuw nsw i32 %i.020, 1
  %268 = icmp slt i32 %267, %266
  br i1 %268, label %.preheader3, label %.loopexit

.loopexit:                                        ; preds = %265, %.preheader4, %215
  %269 = load float** @upd_mdebin.ttt, align 8, !tbaa !28
  %270 = icmp eq float* %269, null
  %271 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 16
  br i1 %270, label %272, label %.preheader2

; <label>:272                                     ; preds = %.loopexit
  %273 = load i32* %271, align 4, !tbaa !55
  %274 = shl nsw i32 %273, 1
  %275 = call i8* @save_calloc(i8* getelementptr inbounds ([4 x i8]* @.str56, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8]* @.str44, i64 0, i64 0), i32 370, i32 %274, i32 4) #8
  store i8* %275, i8** bitcast (float** @upd_mdebin.ttt to i8**), align 8, !tbaa !28
  %276 = bitcast i8* %275 to float*
  br label %.preheader2

.preheader2:                                      ; preds = %.loopexit, %272
  %277 = phi float* [ %276, %272 ], [ %269, %.loopexit ]
  %278 = load i32* %271, align 4, !tbaa !55
  %279 = icmp sgt i32 %278, 0
  br i1 %279, label %.lr.ph9, label %._crit_edge10

.lr.ph9:                                          ; preds = %.preheader2
  %280 = getelementptr inbounds %struct.t_groups* %grps, i64 0, i32 1
  %281 = load %struct.t_grp_tcstat** %280, align 8, !tbaa !60
  %282 = icmp eq i32 %bNoseHoover, 0
  %283 = sext i32 %278 to i64
  br label %284

; <label>:284                                     ; preds = %.lr.ph9, %309
  %indvars.iv24 = phi i64 [ 0, %.lr.ph9 ], [ %indvars.iv.next25, %309 ]
  %285 = getelementptr inbounds %struct.t_grp_tcstat* %281, i64 %indvars.iv24, i32 0
  %286 = bitcast float* %285 to i32*
  %287 = load i32* %286, align 4, !tbaa !61
  %288 = trunc i64 %indvars.iv24 to i32
  %289 = shl nsw i32 %288, 1
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds float* %277, i64 %290
  %292 = bitcast float* %291 to i32*
  store i32 %287, i32* %292, align 4, !tbaa !14
  br i1 %282, label %301, label %293

; <label>:293                                     ; preds = %284
  %294 = getelementptr inbounds %struct.t_grp_tcstat* %281, i64 %indvars.iv24, i32 3
  %295 = bitcast float* %294 to i32*
  %296 = load i32* %295, align 4, !tbaa !63
  %297 = or i32 %289, 1
  %298 = sext i32 %297 to i64
  %299 = getelementptr inbounds float* %277, i64 %298
  %300 = bitcast float* %299 to i32*
  store i32 %296, i32* %300, align 4, !tbaa !14
  br label %309

; <label>:301                                     ; preds = %284
  %302 = getelementptr inbounds %struct.t_grp_tcstat* %281, i64 %indvars.iv24, i32 1
  %303 = bitcast float* %302 to i32*
  %304 = load i32* %303, align 4, !tbaa !64
  %305 = or i32 %289, 1
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds float* %277, i64 %306
  %308 = bitcast float* %307 to i32*
  store i32 %304, i32* %308, align 4, !tbaa !14
  br label %309

; <label>:309                                     ; preds = %293, %301
  %indvars.iv.next25 = add nuw nsw i64 %indvars.iv24, 1
  %310 = icmp slt i64 %indvars.iv.next25, %283
  br i1 %310, label %284, label %._crit_edge10

._crit_edge10:                                    ; preds = %309, %.preheader2
  %311 = load %struct.t_ebin** %17, align 8, !tbaa !29
  %312 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 8
  %313 = load i32* %312, align 4, !tbaa !56
  %314 = shl nsw i32 %278, 1
  call void @add_ebin(%struct.t_ebin* %311, i32 %313, i32 %314, float* %277, i32 %step) #8
  %315 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 17
  %316 = load i32* %315, align 4, !tbaa !57
  %317 = icmp sgt i32 %316, 1
  br i1 %317, label %318, label %353

; <label>:318                                     ; preds = %._crit_edge10
  %319 = load [3 x float]** @upd_mdebin.uuu, align 8, !tbaa !28
  %320 = icmp eq [3 x float]* %319, null
  br i1 %320, label %.preheader, label %.lr.ph

.preheader:                                       ; preds = %318
  %321 = call i8* @save_calloc(i8* getelementptr inbounds ([4 x i8]* @.str57, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8]* @.str44, i64 0, i64 0), i32 382, i32 %316, i32 12) #8
  store i8* %321, i8** bitcast ([3 x float]** @upd_mdebin.uuu to i8**), align 8, !tbaa !28
  %.pre = load i32* %315, align 4, !tbaa !57
  %322 = bitcast i8* %321 to [3 x float]*
  %323 = icmp sgt i32 %.pre, 0
  br i1 %323, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %318, %.preheader
  %324 = phi i32 [ %.pre, %.preheader ], [ %316, %318 ]
  %325 = phi [3 x float]* [ %322, %.preheader ], [ %319, %318 ]
  %326 = getelementptr inbounds %struct.t_groups* %grps, i64 0, i32 2
  %327 = load %struct.t_grp_acc** %326, align 8, !tbaa !65
  %328 = sext i32 %324 to i64
  br label %329

; <label>:329                                     ; preds = %.lr.ph, %329
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %329 ]
  %330 = getelementptr inbounds %struct.t_grp_acc* %327, i64 %indvars.iv, i32 3, i64 0
  %331 = getelementptr inbounds [3 x float]* %325, i64 %indvars.iv, i64 0
  %332 = bitcast float* %330 to i32*
  %333 = load i32* %332, align 4, !tbaa !14
  %334 = bitcast float* %331 to i32*
  store i32 %333, i32* %334, align 4, !tbaa !14
  %335 = getelementptr inbounds %struct.t_grp_acc* %327, i64 %indvars.iv, i32 3, i64 1
  %336 = bitcast float* %335 to i32*
  %337 = load i32* %336, align 4, !tbaa !14
  %338 = getelementptr inbounds [3 x float]* %325, i64 %indvars.iv, i64 1
  %339 = bitcast float* %338 to i32*
  store i32 %337, i32* %339, align 4, !tbaa !14
  %340 = getelementptr inbounds %struct.t_grp_acc* %327, i64 %indvars.iv, i32 3, i64 2
  %341 = bitcast float* %340 to i32*
  %342 = load i32* %341, align 4, !tbaa !14
  %343 = getelementptr inbounds [3 x float]* %325, i64 %indvars.iv, i64 2
  %344 = bitcast float* %343 to i32*
  store i32 %342, i32* %344, align 4, !tbaa !14
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %345 = icmp slt i64 %indvars.iv.next, %328
  br i1 %345, label %329, label %._crit_edge

._crit_edge:                                      ; preds = %329, %.preheader
  %346 = phi i32 [ %.pre, %.preheader ], [ %324, %329 ]
  %347 = phi [3 x float]* [ %322, %.preheader ], [ %325, %329 ]
  %348 = load %struct.t_ebin** %17, align 8, !tbaa !29
  %349 = getelementptr inbounds %struct.t_mdebin* %md, i64 0, i32 9
  %350 = load i32* %349, align 4, !tbaa !58
  %351 = mul nsw i32 %346, 3
  %352 = getelementptr inbounds [3 x float]* %347, i64 0, i64 0
  call void @add_ebin(%struct.t_ebin* %348, i32 %350, i32 %351, float* %352, i32 %step) #8
  br label %353

; <label>:353                                     ; preds = %._crit_edge, %._crit_edge10
  %354 = icmp eq %struct.__sFILE* %fp_dgdl, null
  br i1 %354, label %364, label %355

; <label>:355                                     ; preds = %353
  %356 = fpext float %time to double
  %357 = getelementptr inbounds float* %ener, i64 42
  %358 = load float* %357, align 4, !tbaa !14
  %359 = getelementptr inbounds float* %ener, i64 43
  %360 = load float* %359, align 4, !tbaa !14
  %361 = fadd float %358, %360
  %362 = fpext float %361 to double
  %363 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %fp_dgdl, i8* getelementptr inbounds ([7 x i8]* @.str58, i64 0, i64 0), double %356, double %362) #8
  br label %364

; <label>:364                                     ; preds = %353, %355
  call void @llvm.lifetime.end(i64 176, i8* %2) #5
  call void @llvm.lifetime.end(i64 36, i8* %1) #5
  ret void
}
