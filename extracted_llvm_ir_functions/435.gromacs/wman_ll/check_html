define i8* @check_html(i8* %s, i8* readonly %program) #3 {
  %buf.i = alloca [256 x i8], align 16
  %1 = tail call fastcc i8* @repall(i8* %s, i32 10, %struct.t_sandr* getelementptr inbounds ([10 x %struct.t_sandr]* @sandrHTML, i64 0, i64 0)) #9
  %2 = getelementptr inbounds [256 x i8]* %buf.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 256, i8* %2) #7
  %3 = load %struct.t_sandr** @html_xref.sr, align 8, !tbaa !17
  %4 = icmp eq %struct.t_sandr* %3, null
  br i1 %4, label %5, label %thread-pre-split.i

; <label>:5                                       ; preds = %0
  %6 = tail call i32 @get_file(i8* getelementptr inbounds ([10 x i8]* @.str76, i64 0, i64 0), i8*** @html_xref.str) #8
  store i32 %6, i32* @html_xref.nstr, align 4, !tbaa !18
  %7 = tail call i8* @save_calloc(i8* getelementptr inbounds ([3 x i8]* @.str77, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8]* @.str63, i64 0, i64 0), i32 187, i32 %6, i32 16) #8
  store i8* %7, i8** bitcast (%struct.t_sandr** @html_xref.sr to i8**), align 8, !tbaa !17
  %8 = load i32* @html_xref.nstr, align 4, !tbaa !18
  %9 = icmp sgt i32 %8, 0
  %10 = bitcast i8* %7 to %struct.t_sandr*
  br i1 %9, label %.lr.ph.i, label %36

.lr.ph.i:                                         ; preds = %5
  %11 = icmp eq i8* %program, null
  br label %12

; <label>:12                                      ; preds = %32, %.lr.ph.i
  %13 = phi i32 [ %8, %.lr.ph.i ], [ %33, %32 ]
  %indvars.iv.i = phi i64 [ 0, %.lr.ph.i ], [ %indvars.iv.next.i, %32 ]
  %j.01.i = phi i32 [ 0, %.lr.ph.i ], [ %j.1.i, %32 ]
  %.pre.i = load i8*** @html_xref.str, align 8, !tbaa !17
  %.phi.trans.insert = getelementptr inbounds i8** %.pre.i, i64 %indvars.iv.i
  br i1 %11, label %.._crit_edge3.i_crit_edge, label %14

.._crit_edge3.i_crit_edge:                        ; preds = %12
  %.phi.trans.insert1 = bitcast i8** %.phi.trans.insert to i64*
  %.pre = load i64* %.phi.trans.insert1, align 8, !tbaa !17
  br label %._crit_edge3.i

; <label>:14                                      ; preds = %12
  %15 = load i8** %.phi.trans.insert, align 8, !tbaa !17
  %16 = call i32 @strcasecmp(i8* %program, i8* %15) #8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %.._crit_edge3.i_crit_edge2

.._crit_edge3.i_crit_edge2:                       ; preds = %14
  %18 = ptrtoint i8* %15 to i64
  br label %._crit_edge3.i

._crit_edge3.i:                                   ; preds = %.._crit_edge3.i_crit_edge2, %.._crit_edge3.i_crit_edge
  %19 = phi i64 [ %.pre, %.._crit_edge3.i_crit_edge ], [ %18, %.._crit_edge3.i_crit_edge2 ]
  %20 = sext i32 %j.01.i to i64
  %21 = load %struct.t_sandr** @html_xref.sr, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.t_sandr* %21, i64 %20
  %23 = bitcast %struct.t_sandr* %22 to i64*
  store i64 %19, i64* %23, align 8, !tbaa !14
  %24 = load i8*** @html_xref.str, align 8, !tbaa !17
  %25 = getelementptr inbounds i8** %24, i64 %indvars.iv.i
  %26 = load i8** %25, align 8, !tbaa !17
  %27 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %2, i32 0, i64 256, i8* getelementptr inbounds ([25 x i8]* @.str78, i64 0, i64 0), i8* %26, i8* %26) #8
  %28 = call i8* @strdup(i8* %2) #8
  %29 = load %struct.t_sandr** @html_xref.sr, align 8, !tbaa !17
  %30 = getelementptr inbounds %struct.t_sandr* %29, i64 %20, i32 1
  store i8* %28, i8** %30, align 8, !tbaa !16
  %31 = add nsw i32 %j.01.i, 1
  %.pre4.i = load i32* @html_xref.nstr, align 4, !tbaa !18
  br label %32

; <label>:32                                      ; preds = %._crit_edge3.i, %14
  %33 = phi i32 [ %.pre4.i, %._crit_edge3.i ], [ %13, %14 ]
  %j.1.i = phi i32 [ %31, %._crit_edge3.i ], [ %j.01.i, %14 ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %34 = sext i32 %33 to i64
  %35 = icmp slt i64 %indvars.iv.next.i, %34
  br i1 %35, label %12, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %32
  %.pre5.pre.i = load %struct.t_sandr** @html_xref.sr, align 8, !tbaa !17
  br label %36

; <label>:36                                      ; preds = %._crit_edge.i, %5
  %.pre5.i = phi %struct.t_sandr* [ %.pre5.pre.i, %._crit_edge.i ], [ %10, %5 ]
  %j.0.lcssa.i = phi i32 [ %j.1.i, %._crit_edge.i ], [ 0, %5 ]
  store i32 %j.0.lcssa.i, i32* @html_xref.nstr, align 4, !tbaa !18
  br label %37

thread-pre-split.i:                               ; preds = %0
  %.pr.i = load i32* @html_xref.nstr, align 4, !tbaa !18
  br label %37

; <label>:37                                      ; preds = %thread-pre-split.i, %36
  %38 = phi %struct.t_sandr* [ %3, %thread-pre-split.i ], [ %.pre5.i, %36 ]
  %39 = phi i32 [ %.pr.i, %thread-pre-split.i ], [ %j.0.lcssa.i, %36 ]
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %.lr.ph.i.i, label %html_xref.exit

.lr.ph.i.i:                                       ; preds = %37
  %41 = add i32 %39, -1
  br label %42

; <label>:42                                      ; preds = %52, %.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %.lr.ph.i.i ], [ %indvars.iv.next.i.i, %52 ]
  %buf.02.i.i = phi i8* [ %1, %.lr.ph.i.i ], [ %47, %52 ]
  %43 = getelementptr inbounds %struct.t_sandr* %38, i64 %indvars.iv.i.i, i32 0
  %44 = load i8** %43, align 8, !tbaa !14
  %45 = getelementptr inbounds %struct.t_sandr* %38, i64 %indvars.iv.i.i, i32 1
  %46 = load i8** %45, align 8, !tbaa !16
  %47 = call i8* @replaceww(i8* %buf.02.i.i, i8* %44, i8* %46) #8
  %48 = trunc i64 %indvars.iv.i.i to i32
  %49 = icmp ne i32 %48, 0
  %50 = icmp ne i8* %buf.02.i.i, null
  %or.cond.i.i = and i1 %50, %49
  br i1 %or.cond.i.i, label %51, label %52

; <label>:51                                      ; preds = %42
  call void @save_free(i8* getelementptr inbounds ([4 x i8]* @.str62, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8]* @.str63, i64 0, i64 0), i32 160, i8* %buf.02.i.i) #8
  br label %52

; <label>:52                                      ; preds = %51, %42
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond = icmp eq i32 %48, %41
  br i1 %exitcond, label %html_xref.exit, label %42

html_xref.exit:                                   ; preds = %52, %37
  %buf.0.lcssa.i.i = phi i8* [ %1, %37 ], [ %47, %52 ]
  call void @llvm.lifetime.end(i64 256, i8* %2) #7
  ret i8* %buf.0.lcssa.i.i
}
