define internal fastcc i8* @repall(i8* %s, i32 %nsr, %struct.t_sandr* nocapture readonly %sa) #3 {
  %1 = icmp sgt i32 %nsr, 0
  br i1 %1, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %0
  %2 = add i32 %nsr, -1
  br label %3

; <label>:3                                       ; preds = %13, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %13 ]
  %buf.02 = phi i8* [ %s, %.lr.ph ], [ %8, %13 ]
  %4 = getelementptr inbounds %struct.t_sandr* %sa, i64 %indvars.iv, i32 0
  %5 = load i8** %4, align 8, !tbaa !14
  %6 = getelementptr inbounds %struct.t_sandr* %sa, i64 %indvars.iv, i32 1
  %7 = load i8** %6, align 8, !tbaa !16
  %8 = tail call i8* @replace(i8* %buf.02, i8* %5, i8* %7) #8
  %9 = trunc i64 %indvars.iv to i32
  %10 = icmp ne i32 %9, 0
  %11 = icmp ne i8* %buf.02, null
  %or.cond = and i1 %11, %10
  br i1 %or.cond, label %12, label %13

; <label>:12                                      ; preds = %3
  tail call void @save_free(i8* getelementptr inbounds ([4 x i8]* @.str62, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8]* @.str63, i64 0, i64 0), i32 144, i8* %buf.02) #8
  br label %13

; <label>:13                                      ; preds = %12, %3
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i32 %9, %2
  br i1 %exitcond, label %._crit_edge, label %3

._crit_edge:                                      ; preds = %13, %0
  %buf.0.lcssa = phi i8* [ %s, %0 ], [ %8, %13 ]
  ret i8* %buf.0.lcssa
}
