define internal fastcc i8* @repall(i8* %s, i32 %nsr, %struct.t_sandr* nocapture %sa) #0 {
entry:
  %cmp11 = icmp sgt i32 %nsr, 0
  br i1 %cmp11, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end ], [ 0, %entry ]
  %buf.012 = phi i8* [ %call, %if.end ], [ %s, %entry ]
  %search = getelementptr inbounds %struct.t_sandr* %sa, i64 %indvars.iv, i32 0
  %0 = load i8** %search, align 8, !tbaa !0
  %replace = getelementptr inbounds %struct.t_sandr* %sa, i64 %indvars.iv, i32 1
  %1 = load i8** %replace, align 8, !tbaa !0
  %call = tail call i8* @replace(i8* %buf.012, i8* %0, i8* %1) #6
  %2 = trunc i64 %indvars.iv to i32
  %tobool = icmp eq i32 %2, 0
  %tobool3 = icmp eq i8* %buf.012, null
  %or.cond = or i1 %tobool, %tobool3
  br i1 %or.cond, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  tail call void @save_free(i8* getelementptr inbounds ([4 x i8]* @.str62, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8]* @.str63, i64 0, i64 0), i32 144, i8* %buf.012) #6
  br label %if.end

if.end:                                           ; preds = %for.body, %if.then
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nsr
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %if.end, %entry
  %buf.0.lcssa = phi i8* [ %s, %entry ], [ %call, %if.end ]
  ret i8* %buf.0.lcssa
}
