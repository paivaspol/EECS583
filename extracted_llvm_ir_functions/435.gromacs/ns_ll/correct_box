define void @correct_box([3 x float]* %box, %struct.t_forcerec* nocapture %fr, %struct.t_graph* nocapture %g) #0 {
entry:
  %call = tail call fastcc i32 @correct_box_elem([3 x float]* %box, i32 2, i32 1) #7
  %call1 = tail call fastcc i32 @correct_box_elem([3 x float]* %box, i32 2, i32 0) #7
  %call2 = tail call fastcc i32 @correct_box_elem([3 x float]* %box, i32 1, i32 0) #7
  %0 = or i32 %call1, %call
  %1 = or i32 %0, %call2
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %if.end78, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %nnodes = getelementptr inbounds %struct.t_graph* %g, i64 0, i32 1
  %3 = load i32* %nnodes, align 4, !tbaa !0
  %cmp126 = icmp sgt i32 %3, 0
  br i1 %cmp126, label %for.body.lr.ph, label %for.cond34.preheader

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %ishift = getelementptr inbounds %struct.t_graph* %g, i64 0, i32 7
  %4 = load [3 x i32]** %ishift, align 8, !tbaa !3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv130 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next131, %for.body ]
  %arrayidx6 = getelementptr inbounds [3 x i32]* %4, i64 %indvars.iv130, i64 2
  %5 = load i32* %arrayidx6, align 4, !tbaa !0
  %mul = mul nsw i32 %5, %call
  %arrayidx10 = getelementptr inbounds [3 x i32]* %4, i64 %indvars.iv130, i64 1
  %6 = load i32* %arrayidx10, align 4, !tbaa !0
  %sub = sub nsw i32 %6, %mul
  store i32 %sub, i32* %arrayidx10, align 4, !tbaa !0
  %mul15 = mul nsw i32 %5, %call1
  %arrayidx19 = getelementptr inbounds [3 x i32]* %4, i64 %indvars.iv130, i64 0
  %7 = load i32* %arrayidx19, align 4, !tbaa !0
  %sub20 = sub nsw i32 %7, %mul15
  %mul25 = mul nsw i32 %sub, %call2
  %sub30 = sub nsw i32 %sub20, %mul25
  store i32 %sub30, i32* %arrayidx19, align 4, !tbaa !0
  %indvars.iv.next131 = add i64 %indvars.iv130, 1
  %8 = load i32* %nnodes, align 4, !tbaa !0
  %9 = trunc i64 %indvars.iv.next131 to i32
  %cmp = icmp slt i32 %9, %8
  br i1 %cmp, label %for.body, label %for.cond34.preheader

for.cond34.preheader:                             ; preds = %for.cond.preheader, %for.body, %for.inc75
  %indvars.iv128 = phi i64 [ %indvars.iv.next129, %for.inc75 ], [ 0, %for.body ], [ 0, %for.cond.preheader ]
  %nri = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 49, i64 %indvars.iv128, i32 1
  %10 = load i32* %nri, align 4, !tbaa !0
  %cmp37123 = icmp sgt i32 %10, 0
  br i1 %cmp37123, label %for.body38.lr.ph, label %for.inc75

for.body38.lr.ph:                                 ; preds = %for.cond34.preheader
  %shift43 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 49, i64 %indvars.iv128, i32 9
  %.pre = load i32** %shift43, align 8, !tbaa !3
  br label %for.body38

for.body38:                                       ; preds = %for.body38.lr.ph, %if.end
  %11 = phi i32* [ %.pre, %for.body38.lr.ph ], [ %14, %if.end ]
  %indvars.iv = phi i64 [ 0, %for.body38.lr.ph ], [ %indvars.iv.next, %if.end ]
  %arrayidx44 = getelementptr inbounds i32* %11, i64 %indvars.iv
  %12 = load i32* %arrayidx44, align 4, !tbaa !0
  %rem = srem i32 %12, 3
  %div = sdiv i32 %12, 3
  %rem46 = srem i32 %div, 3
  %sub47 = add nsw i32 %rem46, -1
  %div48 = sdiv i32 %12, 9
  %sub49 = add nsw i32 %div48, -1
  %mul50 = mul nsw i32 %sub49, %call
  %sub51 = sub i32 %sub47, %mul50
  %mul52 = mul nsw i32 %sub49, %call1
  %mul54 = mul nsw i32 %sub51, %call2
  %mul56 = mul nsw i32 %div48, 3
  %add57 = add nsw i32 %sub51, %mul56
  %13 = mul i32 %add57, 3
  %sub53 = add i32 %rem, 2
  %sub55 = sub i32 %sub53, %mul52
  %mul59 = sub i32 %sub55, %mul54
  %add60 = add i32 %mul59, %13
  %add61 = add nsw i32 %add60, 1
  %cmp62 = icmp slt i32 %add61, 0
  %cmp64 = icmp sgt i32 %add60, 25
  %or.cond = or i1 %cmp62, %cmp64
  br i1 %or.cond, label %if.then65, label %if.end

if.then65:                                        ; preds = %for.body38
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([33 x i8]* @.str, i64 0, i64 0)) #8
  %.pre132 = load i32** %shift43, align 8, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %for.body38, %if.then65
  %14 = phi i32* [ %11, %for.body38 ], [ %.pre132, %if.then65 ]
  %arrayidx71 = getelementptr inbounds i32* %14, i64 %indvars.iv
  store i32 %add61, i32* %arrayidx71, align 4, !tbaa !0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %15 = load i32* %nri, align 4, !tbaa !0
  %16 = trunc i64 %indvars.iv.next to i32
  %cmp37 = icmp slt i32 %16, %15
  br i1 %cmp37, label %for.body38, label %for.inc75

for.inc75:                                        ; preds = %if.end, %for.cond34.preheader
  %indvars.iv.next129 = add i64 %indvars.iv128, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next129 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 13
  br i1 %exitcond, label %if.end78, label %for.cond34.preheader

if.end78:                                         ; preds = %for.inc75, %entry
  ret void
}
