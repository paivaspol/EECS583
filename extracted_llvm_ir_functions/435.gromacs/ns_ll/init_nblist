define internal fastcc void @init_nblist(%struct.t_nblist* nocapture %nl_sr, %struct.t_nblist* nocapture %nl_lr, i32 %maxsr, i32 %maxlr, i32 %solvent, i32 %il_code) #0 {
entry:
  %0 = load %struct._IO_FILE** @debug, align 8, !tbaa !3
  %tobool = icmp eq %struct._IO_FILE* %0, null
  br i1 %tobool, label %for.body, label %if.then

if.then:                                          ; preds = %entry
  %1 = icmp ugt i32 %solvent, 3
  br i1 %1, label %cond.end, label %cond.false

cond.false:                                       ; preds = %if.then
  %idxprom = sext i32 %solvent to i64
  %arrayidx = getelementptr inbounds [5 x i8*]* @esolv_names, i64 0, i64 %idxprom
  %2 = load i8** %arrayidx, align 8, !tbaa !3
  br label %cond.end

cond.end:                                         ; preds = %if.then, %cond.false
  %cond = phi i8* [ %2, %cond.false ], [ getelementptr inbounds ([10 x i8]* @.str45, i64 0, i64 0), %if.then ]
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([65 x i8]* @.str44, i64 0, i64 0), i32 %il_code, i8* %cond, i32 %maxsr, i32 %maxlr) #8
  br label %for.body

for.body:                                         ; preds = %cond.end, %entry, %for.body
  %i.045 = phi i32 [ %inc, %for.body ], [ 0, %entry ], [ 0, %cond.end ]
  %cmp3 = icmp eq i32 %i.045, 0
  %cond7 = select i1 %cmp3, %struct.t_nblist* %nl_sr, %struct.t_nblist* %nl_lr
  %cond12 = select i1 %cmp3, i32 %maxsr, i32 %maxlr
  %il_code13 = getelementptr inbounds %struct.t_nblist* %cond7, i64 0, i32 0
  store i32 %il_code, i32* %il_code13, align 4, !tbaa !0
  %mul = shl nsw i32 %cond12, 2
  %maxnri = getelementptr inbounds %struct.t_nblist* %cond7, i64 0, i32 2
  store i32 %mul, i32* %maxnri, align 4, !tbaa !0
  %maxnrj = getelementptr inbounds %struct.t_nblist* %cond7, i64 0, i32 4
  store i32 0, i32* %maxnrj, align 4, !tbaa !0
  %maxlen = getelementptr inbounds %struct.t_nblist* %cond7, i64 0, i32 5
  store i32 0, i32* %maxlen, align 4, !tbaa !0
  %nri = getelementptr inbounds %struct.t_nblist* %cond7, i64 0, i32 1
  store i32 0, i32* %nri, align 4, !tbaa !0
  %nrj = getelementptr inbounds %struct.t_nblist* %cond7, i64 0, i32 3
  store i32 0, i32* %nrj, align 4, !tbaa !0
  %iinr = getelementptr inbounds %struct.t_nblist* %cond7, i64 0, i32 7
  %gid = getelementptr inbounds %struct.t_nblist* %cond7, i64 0, i32 8
  %jindex = getelementptr inbounds %struct.t_nblist* %cond7, i64 0, i32 10
  %nsatoms = getelementptr inbounds %struct.t_nblist* %cond7, i64 0, i32 12
  store i32* null, i32** %nsatoms, align 8, !tbaa !3
  %solvent14 = getelementptr inbounds %struct.t_nblist* %cond7, i64 0, i32 6
  %3 = bitcast i32** %iinr to i8*
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 32, i32 8, i1 false)
  store i32 %solvent, i32* %solvent14, align 4, !tbaa !0
  tail call fastcc void @reallocate_nblist(%struct.t_nblist* %cond7) #7
  %4 = load i32** %jindex, align 8, !tbaa !3
  store i32 0, i32* %4, align 4, !tbaa !0
  %arrayidx18 = getelementptr inbounds i32* %4, i64 1
  store i32 0, i32* %arrayidx18, align 4, !tbaa !0
  %5 = load i32** %gid, align 8, !tbaa !3
  store i32 -1, i32* %5, align 4, !tbaa !0
  %inc = add nsw i32 %i.045, 1
  %exitcond = icmp eq i32 %inc, 2
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  ret void
}
