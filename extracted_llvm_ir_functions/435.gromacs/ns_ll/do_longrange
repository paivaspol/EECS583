define internal fastcc void @do_longrange(%struct._IO_FILE* %log, %struct.t_commrec* %cr, %struct.t_topology* nocapture %top, %struct.t_forcerec* %fr, i32 %ngid, %struct.t_mdatoms* %md, i32 %icg, i32 %jgid, i32 %nlr, i32* nocapture %lr, i64* nocapture %bexcl, i32 %shift, [3 x float]* %x, float* %box_size, %struct.t_nrnb* %nrnb, float %lambda, float* %dvdlambda, %struct.t_groups* nocapture %grps, i32 %bVDWOnly, i32 %bCoulOnly, i32 %bDoForces, i32* nocapture %bHaveLJ) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._IO_FILE* %log}, i64 0, metadata !1233), !dbg !2870
  tail call void @llvm.dbg.value(metadata !{%struct.t_commrec* %cr}, i64 0, metadata !1234), !dbg !2870
  tail call void @llvm.dbg.value(metadata !{%struct.t_topology* %top}, i64 0, metadata !1235), !dbg !2870
  tail call void @llvm.dbg.value(metadata !{%struct.t_forcerec* %fr}, i64 0, metadata !1236), !dbg !2870
  tail call void @llvm.dbg.value(metadata !{i32 %ngid}, i64 0, metadata !1237), !dbg !2871
  tail call void @llvm.dbg.value(metadata !{%struct.t_mdatoms* %md}, i64 0, metadata !1238), !dbg !2871
  tail call void @llvm.dbg.value(metadata !{i32 %icg}, i64 0, metadata !1239), !dbg !2871
  tail call void @llvm.dbg.value(metadata !{i32 %jgid}, i64 0, metadata !1240), !dbg !2872
  tail call void @llvm.dbg.value(metadata !{i32 %nlr}, i64 0, metadata !1241), !dbg !2872
  tail call void @llvm.dbg.value(metadata !{i32* %lr}, i64 0, metadata !1242), !dbg !2873
  tail call void @llvm.dbg.value(metadata !{i64* %bexcl}, i64 0, metadata !1243), !dbg !2873
  tail call void @llvm.dbg.value(metadata !{i32 %shift}, i64 0, metadata !1244), !dbg !2873
  tail call void @llvm.dbg.value(metadata !{[3 x float]* %x}, i64 0, metadata !1245), !dbg !2874
  tail call void @llvm.dbg.value(metadata !{float* %box_size}, i64 0, metadata !1246), !dbg !2874
  tail call void @llvm.dbg.value(metadata !{%struct.t_nrnb* %nrnb}, i64 0, metadata !1247), !dbg !2874
  tail call void @llvm.dbg.value(metadata !{float %lambda}, i64 0, metadata !1248), !dbg !2875
  tail call void @llvm.dbg.value(metadata !{float* %dvdlambda}, i64 0, metadata !1249), !dbg !2875
  tail call void @llvm.dbg.value(metadata !{%struct.t_groups* %grps}, i64 0, metadata !1250), !dbg !2876
  tail call void @llvm.dbg.value(metadata !{i32 %bVDWOnly}, i64 0, metadata !1251), !dbg !2876
  tail call void @llvm.dbg.value(metadata !{i32 %bCoulOnly}, i64 0, metadata !1252), !dbg !2876
  tail call void @llvm.dbg.value(metadata !{i32 %bDoForces}, i64 0, metadata !1253), !dbg !2877
  tail call void @llvm.dbg.value(metadata !{i32* %bHaveLJ}, i64 0, metadata !1254), !dbg !2877
  tail call void @llvm.dbg.value(metadata !250, i64 0, metadata !1255), !dbg !2878
  %tobool = icmp eq i32 %bDoForces, 0, !dbg !2880
  %f_twin = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 53, !dbg !2882
  %arrayidx5 = getelementptr inbounds %struct.t_groups* %grps, i64 0, i32 0, i32 1, i64 4, !dbg !2882
  %arrayidx8 = getelementptr inbounds %struct.t_groups* %grps, i64 0, i32 0, i32 1, i64 3, !dbg !2882
  br label %for.body, !dbg !2878

for.body:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.inc ]
  %nri = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 50, i64 %indvars.iv, i32 1, !dbg !2880
  %0 = load i32* %nri, align 4, !dbg !2880, !tbaa !1398
  %maxnri = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 50, i64 %indvars.iv, i32 2, !dbg !2880
  %1 = load i32* %maxnri, align 4, !dbg !2880, !tbaa !1398
  %sub = add nsw i32 %1, -32, !dbg !2880
  %cmp4 = icmp sle i32 %0, %sub, !dbg !2880
  %or.cond = and i1 %cmp4, %tobool, !dbg !2880
  br i1 %or.cond, label %for.inc, label %if.then, !dbg !2880

if.then:                                          ; preds = %for.body
  tail call void @llvm.dbg.value(metadata !{%struct.t_forcerec* %fr}, i64 0, metadata !2884) #6, !dbg !2886
  tail call void @llvm.dbg.value(metadata !1494, i64 0, metadata !2887) #6, !dbg !2886
  tail call void @llvm.dbg.value(metadata !2094, i64 0, metadata !2888) #6, !dbg !2886
  %arrayidx.i = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 50, i64 %indvars.iv, !dbg !2889
  tail call fastcc void @close_nblist(%struct.t_nblist* %arrayidx.i) #8, !dbg !2889
  %2 = load [3 x float]** %f_twin, align 8, !dbg !2882, !tbaa !1403
  %3 = load float** %arrayidx5, align 8, !dbg !2882, !tbaa !1403
  %4 = load float** %arrayidx8, align 8, !dbg !2882, !tbaa !1403
  %5 = trunc i64 %indvars.iv to i32, !dbg !2882
  tail call void @do_fnbf(%struct._IO_FILE* %log, %struct.t_commrec* %cr, %struct.t_forcerec* %fr, [3 x float]* %x, [3 x float]* %2, %struct.t_mdatoms* %md, float* %3, float* %4, float* %box_size, %struct.t_nrnb* %nrnb, float %lambda, float* %dvdlambda, i32 1, i32 %5) #8, !dbg !2882
  tail call void @llvm.dbg.value(metadata !{%struct.t_forcerec* %fr}, i64 0, metadata !2890) #6, !dbg !2892
  tail call void @llvm.dbg.value(metadata !1494, i64 0, metadata !2893) #6, !dbg !2892
  tail call void @llvm.dbg.value(metadata !2094, i64 0, metadata !2894) #6, !dbg !2892
  tail call void @llvm.dbg.value(metadata !{%struct.t_nblist* %arrayidx.i}, i64 0, metadata !2895), !dbg !2897
  store i32 0, i32* %nri, align 4, !dbg !2898, !tbaa !1398
  %nrj.i = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 50, i64 %indvars.iv, i32 3, !dbg !2899
  store i32 0, i32* %nrj.i, align 4, !dbg !2899, !tbaa !1398
  %maxlen.i = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 50, i64 %indvars.iv, i32 5, !dbg !2900
  store i32 0, i32* %maxlen.i, align 4, !dbg !2900, !tbaa !1398
  %6 = load i32* %maxnri, align 4, !dbg !2901, !tbaa !1398
  %cmp.i = icmp sgt i32 %6, 0, !dbg !2901
  br i1 %cmp.i, label %if.then.i, label %for.inc, !dbg !2901

if.then.i:                                        ; preds = %if.then
  %gid.i = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 50, i64 %indvars.iv, i32 8, !dbg !2902
  %7 = load i32** %gid.i, align 8, !dbg !2902, !tbaa !1403
  store i32 -1, i32* %7, align 4, !dbg !2902, !tbaa !1398
  %maxnrj.i = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 50, i64 %indvars.iv, i32 4, !dbg !2903
  %8 = load i32* %maxnrj.i, align 4, !dbg !2903, !tbaa !1398
  %cmp1.i = icmp sgt i32 %8, 1, !dbg !2903
  br i1 %cmp1.i, label %if.then2.i, label %for.inc, !dbg !2903

if.then2.i:                                       ; preds = %if.then.i
  %jindex.i = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 50, i64 %indvars.iv, i32 10, !dbg !2904
  %9 = load i32** %jindex.i, align 8, !dbg !2904, !tbaa !1403
  store i32 0, i32* %9, align 4, !dbg !2904, !tbaa !1398
  %arrayidx5.i = getelementptr inbounds i32* %9, i64 1, !dbg !2905
  store i32 0, i32* %arrayidx5.i, align 4, !dbg !2905, !tbaa !1398
  br label %for.inc, !dbg !2906

for.inc:                                          ; preds = %if.then2.i, %if.then.i, %if.then, %for.body
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !2878
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !2878
  %exitcond = icmp eq i32 %lftr.wideiv, 13, !dbg !2878
  br i1 %exitcond, label %for.end, label %for.body, !dbg !2878

for.end:                                          ; preds = %for.inc
  br i1 %tobool, label %if.then10, label %if.end12, !dbg !2907

if.then10:                                        ; preds = %for.end
  %index = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 3, i64 0, i32 2, !dbg !2908
  %10 = load i32** %index, align 8, !dbg !2908, !tbaa !1403
  tail call fastcc void @put_in_list(i32* %bHaveLJ, i32 %ngid, %struct.t_mdatoms* %md, i32 %icg, i32 %jgid, i32 %nlr, i32* %lr, i32* %10, i64* %bexcl, i32 %shift, %struct.t_forcerec* %fr, i32 1, i32 %bVDWOnly, i32 %bCoulOnly) #7, !dbg !2908
  br label %if.end12, !dbg !2910

if.end12:                                         ; preds = %for.end, %if.then10
  ret void, !dbg !2911
}
