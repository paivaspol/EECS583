define internal fastcc void @new_i_nblist(%struct.t_nblist* nocapture %nlist, i32 %ftype, i32 %i_atom, i32 %shift, i32 %gid, i32* readonly %mno) #3 {
  %1 = getelementptr inbounds %struct.t_nblist* %nlist, i64 0, i32 4
  %2 = load i32* %1, align 4, !tbaa !36
  %3 = getelementptr inbounds %struct.t_nblist* %nlist, i64 0, i32 3
  %4 = load i32* %3, align 4, !tbaa !38
  %5 = add nsw i32 %4, 16383
  %6 = icmp sgt i32 %2, %5
  br i1 %6, label %23, label %7

; <label>:7                                       ; preds = %0
  %8 = load %struct.__sFILE** @debug, align 8, !tbaa !23
  %9 = icmp eq %struct.__sFILE* %8, null
  br i1 %9, label %15, label %10

; <label>:10                                      ; preds = %7
  %11 = sext i32 %ftype to i64
  %12 = getelementptr inbounds [44 x %struct.t_interaction_function]* @interaction_function, i64 0, i64 %11, i32 1
  %13 = load i8** %12, align 8, !tbaa !96
  %14 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %8, i8* getelementptr inbounds ([38 x i8]* @.str45, i64 0, i64 0), i32 16384, i8* %13) #8
  %.pre = load i32* %1, align 4, !tbaa !36
  br label %15

; <label>:15                                      ; preds = %7, %10
  %16 = phi i32 [ %2, %7 ], [ %.pre, %10 ]
  %17 = add nsw i32 %16, 16384
  store i32 %17, i32* %1, align 4, !tbaa !36
  %18 = getelementptr inbounds %struct.t_nblist* %nlist, i64 0, i32 11
  %19 = bitcast i32** %18 to i8**
  %20 = load i8** %19, align 8, !tbaa !93
  %21 = shl i32 %17, 2
  %22 = tail call i8* @save_realloc(i8* getelementptr inbounds ([12 x i8]* @.str46, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8]* @.str2, i64 0, i64 0), i32 366, i8* %20, i32 %21) #8
  store i8* %22, i8** %19, align 8, !tbaa !93
  br label %23

; <label>:23                                      ; preds = %0, %15
  %24 = getelementptr inbounds %struct.t_nblist* %nlist, i64 0, i32 1
  %25 = load i32* %24, align 4, !tbaa !18
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %struct.t_nblist* %nlist, i64 0, i32 7
  %28 = load i32** %27, align 8, !tbaa !83
  %29 = getelementptr inbounds i32* %28, i64 %26
  %30 = load i32* %29, align 4, !tbaa !17
  %31 = icmp eq i32 %30, %i_atom
  br i1 %31, label %32, label %44

; <label>:32                                      ; preds = %23
  %33 = getelementptr inbounds %struct.t_nblist* %nlist, i64 0, i32 9
  %34 = load i32** %33, align 8, !tbaa !20
  %35 = getelementptr inbounds i32* %34, i64 %26
  %36 = load i32* %35, align 4, !tbaa !17
  %37 = icmp eq i32 %36, %shift
  br i1 %37, label %38, label %44

; <label>:38                                      ; preds = %32
  %39 = getelementptr inbounds %struct.t_nblist* %nlist, i64 0, i32 8
  %40 = load i32** %39, align 8, !tbaa !42
  %41 = getelementptr inbounds i32* %40, i64 %26
  %42 = load i32* %41, align 4, !tbaa !17
  %43 = icmp eq i32 %42, %gid
  br i1 %43, label %.loopexit, label %44

; <label>:44                                      ; preds = %38, %32, %23
  %45 = add nsw i32 %25, 1
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %struct.t_nblist* %nlist, i64 0, i32 10
  %48 = load i32** %47, align 8, !tbaa !41
  %49 = getelementptr inbounds i32* %48, i64 %46
  %50 = load i32* %49, align 4, !tbaa !17
  %51 = getelementptr inbounds i32* %48, i64 %26
  %52 = load i32* %51, align 4, !tbaa !17
  %53 = icmp sgt i32 %50, %52
  %54 = getelementptr inbounds %struct.t_nblist* %nlist, i64 0, i32 8
  br i1 %53, label %55, label %._crit_edge

; <label>:55                                      ; preds = %44
  %56 = load i32** %54, align 8, !tbaa !42
  %57 = getelementptr inbounds i32* %56, i64 %26
  %58 = load i32* %57, align 4, !tbaa !17
  %59 = icmp eq i32 %58, -1
  br i1 %59, label %._crit_edge, label %60

; <label>:60                                      ; preds = %55
  store i32 %45, i32* %24, align 4, !tbaa !18
  %61 = getelementptr inbounds %struct.t_nblist* %nlist, i64 0, i32 2
  %62 = load i32* %61, align 4, !tbaa !35
  %63 = icmp slt i32 %45, %62
  br i1 %63, label %._crit_edge, label %64

; <label>:64                                      ; preds = %60
  %65 = add nsw i32 %62, 1000
  store i32 %65, i32* %61, align 4, !tbaa !35
  tail call fastcc void @reallocate_nblist(%struct.t_nblist* %nlist) #9
  %.pre3 = load i32** %47, align 8, !tbaa !41
  %.pre4 = load i32** %27, align 8, !tbaa !83
  br label %._crit_edge

._crit_edge:                                      ; preds = %44, %60, %55, %64
  %66 = phi i32* [ %28, %60 ], [ %28, %55 ], [ %.pre4, %64 ], [ %28, %44 ]
  %67 = phi i32* [ %48, %60 ], [ %48, %55 ], [ %.pre3, %64 ], [ %48, %44 ]
  %nri.0 = phi i32 [ %45, %60 ], [ %25, %55 ], [ %45, %64 ], [ %25, %44 ]
  %68 = sext i32 %nri.0 to i64
  %69 = getelementptr inbounds i32* %67, i64 %68
  %70 = load i32* %69, align 4, !tbaa !17
  %71 = add nsw i32 %nri.0, 1
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32* %67, i64 %72
  store i32 %70, i32* %73, align 4, !tbaa !17
  %74 = getelementptr inbounds i32* %66, i64 %68
  store i32 %i_atom, i32* %74, align 4, !tbaa !17
  %75 = load i32** %54, align 8, !tbaa !42
  %76 = getelementptr inbounds i32* %75, i64 %68
  store i32 %gid, i32* %76, align 4, !tbaa !17
  %77 = getelementptr inbounds %struct.t_nblist* %nlist, i64 0, i32 9
  %78 = load i32** %77, align 8, !tbaa !20
  %79 = getelementptr inbounds i32* %78, i64 %68
  store i32 %shift, i32* %79, align 4, !tbaa !17
  %80 = icmp eq i32* %mno, null
  br i1 %80, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %._crit_edge
  %81 = mul nsw i32 %nri.0, 3
  %82 = getelementptr inbounds %struct.t_nblist* %nlist, i64 0, i32 12
  %83 = load i32** %82, align 8, !tbaa !39
  %84 = sext i32 %81 to i64
  br label %85

; <label>:85                                      ; preds = %85, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %85 ]
  %86 = getelementptr inbounds i32* %mno, i64 %indvars.iv
  %87 = load i32* %86, align 4, !tbaa !17
  %88 = add nsw i64 %indvars.iv, %84
  %89 = getelementptr inbounds i32* %83, i64 %88
  store i32 %87, i32* %89, align 4, !tbaa !17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %.loopexit, label %85

.loopexit:                                        ; preds = %85, %._crit_edge, %38
  ret void
}
