define internal fastcc i32 @nbf_index(%struct.t_forcerec* nocapture %fr, i32 %bvdw, i32 %bcoul, i32 %bFree, i32 %solopt) #2 {
entry:
  %tobool = icmp eq i32 %bcoul, 0
  br i1 %tobool, label %if.end9, label %if.then

if.then:                                          ; preds = %entry
  %bcoultab = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 13
  %0 = load i32* %bcoultab, align 4, !tbaa !0
  %1 = or i32 %0, %bFree
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %if.else, label %if.end9

if.else:                                          ; preds = %if.then
  %bRF = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 7
  %3 = load i32* %bRF, align 4, !tbaa !0
  %tobool4 = icmp eq i32 %3, 0
  %. = select i1 %tobool4, i32 1, i32 2
  br label %if.end9

if.end9:                                          ; preds = %entry, %if.else, %if.then
  %icoul.0 = phi i32 [ 3, %if.then ], [ %., %if.else ], [ 0, %entry ]
  %tobool10 = icmp eq i32 %bvdw, 0
  br i1 %tobool10, label %if.end32, label %if.then11

if.then11:                                        ; preds = %if.end9
  %bvdwtab = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 14
  %4 = load i32* %bvdwtab, align 4, !tbaa !0
  %5 = or i32 %4, %bFree
  %6 = icmp eq i32 %5, 0
  %bBHAM24 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 64
  %7 = load i32* %bBHAM24, align 4, !tbaa !0
  %tobool25 = icmp eq i32 %7, 0
  br i1 %6, label %if.else23, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then11
  %.81 = select i1 %tobool25, i32 3, i32 4
  br label %if.end32

if.else23:                                        ; preds = %if.then11
  %.78 = select i1 %tobool25, i32 1, i32 2
  br label %if.end32

if.end32:                                         ; preds = %land.lhs.true, %if.end9, %if.else23
  %ivdw.0 = phi i32 [ %.78, %if.else23 ], [ 0, %if.end9 ], [ %.81, %land.lhs.true ]
  %mul = mul i32 %icoul.0, 5
  %add = add i32 %ivdw.0, %mul
  %idxprom = zext i32 %add to i64
  %arrayidx = getelementptr inbounds [20 x i32]* @nbf_index.inloop, i64 0, i64 %idxprom
  %8 = load i32* %arrayidx, align 4, !tbaa !0
  %tobool33 = icmp eq i32 %bFree, 0
  br i1 %tobool33, label %if.else37, label %if.then34

if.then34:                                        ; preds = %if.end32
  %sc_alpha = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 30
  %9 = load float* %sc_alpha, align 4, !tbaa !4
  %fabsf = tail call float @fabsf(float %9) #9
  %10 = fpext float %fabsf to double
  %cmp = fcmp olt double %10, 1.200000e-38
  %cond = select i1 %cmp, i32 1, i32 2
  %add36 = add i32 %cond, %8
  br label %if.end56

if.else37:                                        ; preds = %if.end32
  %add38 = add i32 %8, %solopt
  %cmp39 = icmp sgt i32 %solopt, 0
  %cmp42 = icmp eq i32 %icoul.0, 3
  %or.cond79 = and i1 %cmp39, %cmp42
  br i1 %or.cond79, label %land.lhs.true44, label %if.end56

land.lhs.true44:                                  ; preds = %if.else37
  switch i32 %ivdw.0, label %if.end56 [
    i32 4, label %if.then53
    i32 3, label %if.then53
    i32 0, label %if.then53
  ]

if.then53:                                        ; preds = %land.lhs.true44, %land.lhs.true44, %land.lhs.true44
  %add54 = add i32 %add38, 2
  br label %if.end56

if.end56:                                         ; preds = %land.lhs.true44, %if.else37, %if.then53, %if.then34
  %nn.0 = phi i32 [ %add36, %if.then34 ], [ %add54, %if.then53 ], [ %add38, %land.lhs.true44 ], [ %add38, %if.else37 ]
  ret i32 %nn.0
}
