define internal fastcc i32 @read_props(i8* %propdata, %struct.t_prop** nocapture %props, i32* nocapture %maxprop) #0 {
entry:
  %line = alloca [4096 x i8], align 16
  %resname = alloca [10 x i8], align 1
  %atomname = alloca [10 x i8], align 1
  %pp = alloca double, align 8
  %i = alloca i32, align 4
  %0 = getelementptr inbounds [4096 x i8]* %line, i64 0, i64 0
  call void @llvm.lifetime.start(i64 4096, i8* %0) #6
  %call = call %struct._IO_FILE* @libopen(i8* %propdata) #8
  store %struct.t_prop* null, %struct.t_prop** %props, align 8, !tbaa !0
  store i32 0, i32* %maxprop, align 4, !tbaa !3
  store i32 0, i32* %i, align 4, !tbaa !3
  %call116 = call i32 @get_a_line(%struct._IO_FILE* %call, i8* %0, i32 4096) #8
  %tobool17 = icmp eq i32 %call116, 0
  br i1 %tobool17, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %arraydecay3 = getelementptr inbounds [10 x i8]* %resname, i64 0, i64 0
  %arraydecay4 = getelementptr inbounds [10 x i8]* %atomname, i64 0, i64 0
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.cond.backedge
  %call5 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %0, i8* getelementptr inbounds ([10 x i8]* @.str17, i64 0, i64 0), i8* %arraydecay3, i8* %arraydecay4, double* %pp) #8
  %cmp = icmp eq i32 %call5, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %1 = load double* %pp, align 8, !tbaa !5
  %conv = fptrunc double %1 to float
  call fastcc void @add_prop(float %conv, i8* %arraydecay3, i8* %arraydecay4, i32* %i, %struct.t_prop** %props, i32* %maxprop) #7
  br label %while.cond.backedge

if.else:                                          ; preds = %while.body
  %2 = load %struct._IO_FILE** @debug, align 8, !tbaa !0
  %tobool8 = icmp eq %struct._IO_FILE* %2, null
  br i1 %tobool8, label %while.cond.backedge, label %if.then9

if.then9:                                         ; preds = %if.else
  %3 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %4 = load i32* %i, align 4, !tbaa !3
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([29 x i8]* @.str18, i64 0, i64 0), i8* %propdata, i32 %4) #8
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.then9, %if.then, %if.else
  %call1 = call i32 @get_a_line(%struct._IO_FILE* %call, i8* %0, i32 4096) #8
  %tobool = icmp eq i32 %call1, 0
  br i1 %tobool, label %while.cond.while.end_crit_edge, label %while.body

while.cond.while.end_crit_edge:                   ; preds = %while.cond.backedge
  %.pre = load i32* %i, align 4, !tbaa !3
  br label %while.end

while.end:                                        ; preds = %while.cond.while.end_crit_edge, %entry
  %5 = phi i32 [ %.pre, %while.cond.while.end_crit_edge ], [ 0, %entry ]
  call void @ffclose(%struct._IO_FILE* %call) #8
  call void @llvm.lifetime.end(i64 4096, i8* %0) #6
  ret i32 %5
}
