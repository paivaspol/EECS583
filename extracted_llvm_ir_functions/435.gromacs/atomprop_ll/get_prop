define internal fastcc i32 @get_prop(float* nocapture %p, i8* %resname, i8* %atomnm, i32 %nprop, %struct.t_prop* %props) #0 {
entry:
  %0 = load i8* %atomnm, align 1, !tbaa !1
  %idxprom = sext i8 %0 to i64
  %call = tail call i16** @__ctype_b_loc() #9
  %1 = load i16** %call, align 8, !tbaa !0
  %arrayidx1 = getelementptr inbounds i16* %1, i64 %idxprom
  %2 = load i16* %arrayidx1, align 2, !tbaa !6
  %and = and i16 %2, 2048
  %tobool = icmp eq i16 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call3 = tail call i64 @strlen(i8* %atomnm) #10
  %add = add i64 %call3, 1
  %conv4 = trunc i64 %add to i32
  %call5 = tail call i8* @save_calloc(i8* getelementptr inbounds ([9 x i8]* @.str11, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8]* @.str10, i64 0, i64 0), i32 128, i32 %conv4, i32 1) #8
  %call7134 = tail call i64 @strlen(i8* %atomnm) #10
  %cmp135 = icmp ugt i64 %call7134, 1
  br i1 %cmp135, label %for.body, label %for.end

for.body:                                         ; preds = %if.then, %for.body
  %indvars.iv142 = phi i64 [ %indvars.iv.next143, %for.body ], [ 1, %if.then ]
  %i.0136 = phi i32 [ %inc, %for.body ], [ 1, %if.then ]
  %arrayidx10 = getelementptr inbounds i8* %atomnm, i64 %indvars.iv142
  %3 = load i8* %arrayidx10, align 1, !tbaa !1
  %4 = add nsw i64 %indvars.iv142, -1
  %arrayidx12 = getelementptr inbounds i8* %call5, i64 %4
  store i8 %3, i8* %arrayidx12, align 1, !tbaa !1
  %indvars.iv.next143 = add i64 %indvars.iv142, 1
  %inc = add nsw i32 %i.0136, 1
  %call7 = tail call i64 @strlen(i8* %atomnm) #10
  %cmp = icmp ult i64 %indvars.iv.next143, %call7
  br i1 %cmp, label %for.body, label %for.cond.for.end_crit_edge

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %phitmp = add i32 %i.0136, 2
  %phitmp140 = sext i32 %phitmp to i64
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %if.then
  %conv6.lcssa = phi i64 [ %indvars.iv.next143, %for.cond.for.end_crit_edge ], [ 1, %if.then ]
  %i.0.lcssa = phi i64 [ %phitmp140, %for.cond.for.end_crit_edge ], [ 2, %if.then ]
  %5 = load i8* %atomnm, align 1, !tbaa !1
  %arrayidx16 = getelementptr inbounds i8* %call5, i64 %conv6.lcssa
  store i8 %5, i8* %arrayidx16, align 1, !tbaa !1
  %arrayidx18 = getelementptr inbounds i8* %call5, i64 %i.0.lcssa
  store i8 0, i8* %arrayidx18, align 1, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %entry, %for.end
  %atomname.0 = phi i8* [ %call5, %for.end ], [ %atomnm, %entry ]
  %cmp20127 = icmp sgt i32 %nprop, 0
  br i1 %cmp20127, label %for.body22, label %for.end72

for.body22:                                       ; preds = %if.end, %for.inc70
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc70 ], [ 0, %if.end ]
  %mrlen.0131 = phi i32 [ %mrlen.1, %for.inc70 ], [ -3, %if.end ]
  %malen.0130 = phi i32 [ %malen.1, %for.inc70 ], [ -3, %if.end ]
  %j.0128 = phi i32 [ %j.1, %for.inc70 ], [ 0, %if.end ]
  %arraydecay = getelementptr inbounds %struct.t_prop* %props, i64 %indvars.iv, i32 1, i64 0
  %call26 = tail call i32 @strcmp(i8* %arraydecay, i8* getelementptr inbounds ([2 x i8]* @.str12, i64 0, i64 0)) #10
  %cmp27 = icmp eq i32 %call26, 0
  br i1 %cmp27, label %if.end55, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body22
  %call33 = tail call i32 @strcmp(i8* %arraydecay, i8* getelementptr inbounds ([4 x i8]* @.str13, i64 0, i64 0)) #10
  %cmp34 = icmp eq i32 %call33, 0
  br i1 %cmp34, label %if.end55, label %if.else37

if.else37:                                        ; preds = %lor.lhs.false
  %call38 = tail call i32 @is_protein(i8* %resname) #8
  %tobool39 = icmp eq i32 %call38, 0
  br i1 %tobool39, label %if.else48, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else37
  %call44 = tail call i32 @strcmp(i8* %arraydecay, i8* getelementptr inbounds ([4 x i8]* @.str14, i64 0, i64 0)) #10
  %cmp45 = icmp eq i32 %call44, 0
  br i1 %cmp45, label %if.end55, label %if.else48

if.else48:                                        ; preds = %if.else37, %land.lhs.true
  %call53 = tail call fastcc i32 @dbcmp_len(i8* %resname, i8* %arraydecay) #7
  br label %if.end55

if.end55:                                         ; preds = %land.lhs.true, %for.body22, %lor.lhs.false, %if.else48
  %rlen.0 = phi i32 [ %call53, %if.else48 ], [ -2, %lor.lhs.false ], [ -2, %for.body22 ], [ -1, %land.lhs.true ]
  %arraydecay59 = getelementptr inbounds %struct.t_prop* %props, i64 %indvars.iv, i32 0, i64 0
  %call60 = tail call fastcc i32 @dbcmp_len(i8* %atomname.0, i8* %arraydecay59) #7
  %cmp61 = icmp slt i32 %call60, %malen.0130
  %cmp64 = icmp slt i32 %rlen.0, %mrlen.0131
  %or.cond = or i1 %cmp61, %cmp64
  br i1 %or.cond, label %for.inc70, label %if.then66

if.then66:                                        ; preds = %if.end55
  %prop = getelementptr inbounds %struct.t_prop* %props, i64 %indvars.iv, i32 2
  %6 = load float* %prop, align 4, !tbaa !4
  store float %6, float* %p, align 4, !tbaa !4
  %7 = trunc i64 %indvars.iv to i32
  br label %for.inc70

for.inc70:                                        ; preds = %if.end55, %if.then66
  %j.1 = phi i32 [ %7, %if.then66 ], [ %j.0128, %if.end55 ]
  %malen.1 = phi i32 [ %call60, %if.then66 ], [ %malen.0130, %if.end55 ]
  %mrlen.1 = phi i32 [ %rlen.0, %if.then66 ], [ %mrlen.0131, %if.end55 ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nprop
  br i1 %exitcond, label %for.end72, label %for.body22

for.end72:                                        ; preds = %for.inc70, %if.end
  %mrlen.0.lcssa = phi i32 [ -3, %if.end ], [ %mrlen.1, %for.inc70 ]
  %malen.0.lcssa = phi i32 [ -3, %if.end ], [ %malen.1, %for.inc70 ]
  %j.0.lcssa = phi i32 [ 0, %if.end ], [ %j.1, %for.inc70 ]
  %8 = load %struct._IO_FILE** @debug, align 8, !tbaa !0
  %tobool73 = icmp eq %struct._IO_FILE* %8, null
  br i1 %tobool73, label %if.end85, label %if.then74

if.then74:                                        ; preds = %for.end72
  %idxprom75 = sext i32 %j.0.lcssa to i64
  %arraydecay78 = getelementptr inbounds %struct.t_prop* %props, i64 %idxprom75, i32 1, i64 0
  %arraydecay82 = getelementptr inbounds %struct.t_prop* %props, i64 %idxprom75, i32 0, i64 0
  %9 = load float* %p, align 4, !tbaa !4
  %conv83 = fpext float %9 to double
  %call84 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([36 x i8]* @.str15, i64 0, i64 0), i8* %resname, i8* %atomname.0, i8* %arraydecay78, i8* %arraydecay82, double %conv83) #8
  br label %if.end85

if.end85:                                         ; preds = %for.end72, %if.then74
  %cmp88 = icmp ne i32 %mrlen.0.lcssa, -3
  %not.cmp86 = icmp ne i32 %malen.0.lcssa, -3
  %.cmp88 = and i1 %cmp88, %not.cmp86
  %land.ext = zext i1 %.cmp88 to i32
  ret i32 %land.ext
}
