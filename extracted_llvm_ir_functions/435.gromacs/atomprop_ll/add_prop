define internal fastcc void @add_prop(float %p, i8* %resnm, i8* %atomnm, i32* nocapture %nprop, %struct.t_prop** nocapture %props, i32* nocapture %maxprop) #4 {
  tail call void @llvm.dbg.value(metadata float %p, i64 0, metadata !183, metadata !203), !dbg !403
  tail call void @llvm.dbg.value(metadata i8* %resnm, i64 0, metadata !184, metadata !203), !dbg !404
  tail call void @llvm.dbg.value(metadata i8* %atomnm, i64 0, metadata !185, metadata !203), !dbg !405
  tail call void @llvm.dbg.value(metadata i32* %nprop, i64 0, metadata !186, metadata !203), !dbg !406
  tail call void @llvm.dbg.value(metadata %struct.t_prop** %props, i64 0, metadata !187, metadata !203), !dbg !407
  tail call void @llvm.dbg.value(metadata i32* %maxprop, i64 0, metadata !188, metadata !203), !dbg !408
  %1 = load i32* %nprop, align 4, !dbg !409, !tbaa !253
  %2 = load i32* %maxprop, align 4, !dbg !411, !tbaa !253
  %3 = icmp slt i32 %1, %2, !dbg !412
  br i1 %3, label %._crit_edge, label %4, !dbg !413

._crit_edge:                                      ; preds = %0
  %.pre1 = load %struct.t_prop** %props, align 8, !dbg !414, !tbaa !246
  br label %11, !dbg !413

; <label>:4                                       ; preds = %0
  %5 = add nsw i32 %2, 10, !dbg !415
  store i32 %5, i32* %maxprop, align 4, !dbg !415, !tbaa !253
  %6 = bitcast %struct.t_prop** %props to i8**, !dbg !417
  %7 = load i8** %6, align 8, !dbg !417, !tbaa !246
  %8 = mul i32 %5, 24, !dbg !417
  %9 = tail call i8* @save_realloc(i8* getelementptr inbounds ([7 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str13, i64 0, i64 0), i32 56, i8* %7, i32 %8) #9, !dbg !417
  store i8* %9, i8** %6, align 8, !dbg !417, !tbaa !246
  %.pre = load i32* %nprop, align 4, !dbg !414, !tbaa !253
  %10 = bitcast i8* %9 to %struct.t_prop*
  br label %11, !dbg !418

; <label>:11                                      ; preds = %._crit_edge, %4
  %12 = phi %struct.t_prop* [ %.pre1, %._crit_edge ], [ %10, %4 ]
  %13 = phi i32 [ %1, %._crit_edge ], [ %.pre, %4 ]
  %14 = sext i32 %13 to i64, !dbg !414
  %15 = getelementptr inbounds %struct.t_prop* %12, i64 %14, i32 0, i64 0, !dbg !414
  %16 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %15, i1 false), !dbg !414
  %17 = tail call i8* @__strcpy_chk(i8* %15, i8* %atomnm, i64 %16) #9, !dbg !414
  %18 = load i32* %nprop, align 4, !dbg !419, !tbaa !253
  %19 = sext i32 %18 to i64, !dbg !419
  %20 = load %struct.t_prop** %props, align 8, !dbg !419, !tbaa !246
  %21 = getelementptr inbounds %struct.t_prop* %20, i64 %19, i32 1, i64 0, !dbg !419
  %22 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %21, i1 false), !dbg !419
  %23 = tail call i8* @__strcpy_chk(i8* %21, i8* %resnm, i64 %22) #9, !dbg !419
  %24 = load i32* %nprop, align 4, !dbg !420, !tbaa !253
  %25 = sext i32 %24 to i64, !dbg !421
  %26 = load %struct.t_prop** %props, align 8, !dbg !422, !tbaa !246
  %27 = getelementptr inbounds %struct.t_prop* %26, i64 %25, i32 2, !dbg !423
  store float %p, float* %27, align 4, !dbg !424, !tbaa !324
  %28 = add nsw i32 %24, 1, !dbg !425
  store i32 %28, i32* %nprop, align 4, !dbg !425, !tbaa !253
  ret void, !dbg !426
}
