define void @inl2300(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, float %krf, float %crf, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb, float %tabscale, float* nocapture %VFtab) #0 {
entry:
  %cmp370 = icmp sgt i32 %nri, 0
  br i1 %cmp370, label %for.body.lr.ph, label %for.end213

for.body.lr.ph:                                   ; preds = %entry
  %mul30 = shl i32 %ntype, 1
  br label %for.body

for.body:                                         ; preds = %for.end, %for.body.lr.ph
  %indvars.iv372 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next373, %for.end ]
  %arrayidx = getelementptr inbounds i32* %shift, i64 %indvars.iv372
  %0 = load i32* %arrayidx, align 4, !tbaa !0
  %mul = mul nsw i32 %0, 3
  %idxprom1 = sext i32 %mul to i64
  %arrayidx2 = getelementptr inbounds float* %shiftvec, i64 %idxprom1
  %1 = load float* %arrayidx2, align 4, !tbaa !3
  %add = add nsw i32 %mul, 1
  %idxprom3 = sext i32 %add to i64
  %arrayidx4 = getelementptr inbounds float* %shiftvec, i64 %idxprom3
  %2 = load float* %arrayidx4, align 4, !tbaa !3
  %add5 = add nsw i32 %mul, 2
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds float* %shiftvec, i64 %idxprom6
  %3 = load float* %arrayidx7, align 4, !tbaa !3
  %arrayidx9 = getelementptr inbounds i32* %iinr, i64 %indvars.iv372
  %4 = load i32* %arrayidx9, align 4, !tbaa !0
  %mul10 = mul nsw i32 %4, 3
  %arrayidx12 = getelementptr inbounds i32* %jindex, i64 %indvars.iv372
  %5 = load i32* %arrayidx12, align 4, !tbaa !0
  %indvars.iv.next373 = add i64 %indvars.iv372, 1
  %arrayidx15 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next373
  %6 = load i32* %arrayidx15, align 4, !tbaa !0
  %idxprom16 = sext i32 %mul10 to i64
  %arrayidx17 = getelementptr inbounds float* %pos, i64 %idxprom16
  %7 = load float* %arrayidx17, align 4, !tbaa !3
  %add18 = fadd float %1, %7
  %add19 = add nsw i32 %mul10, 1
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds float* %pos, i64 %idxprom20
  %8 = load float* %arrayidx21, align 4, !tbaa !3
  %add22 = fadd float %2, %8
  %add23 = add nsw i32 %mul10, 2
  %idxprom24 = sext i32 %add23 to i64
  %arrayidx25 = getelementptr inbounds float* %pos, i64 %idxprom24
  %9 = load float* %arrayidx25, align 4, !tbaa !3
  %add26 = fadd float %3, %9
  %idxprom27 = sext i32 %4 to i64
  %arrayidx28 = getelementptr inbounds float* %charge, i64 %idxprom27
  %10 = load float* %arrayidx28, align 4, !tbaa !3
  %mul29 = fmul float %10, %facel
  %arrayidx32 = getelementptr inbounds i32* %type, i64 %idxprom27
  %11 = load i32* %arrayidx32, align 4, !tbaa !0
  %mul33 = mul nsw i32 %mul30, %11
  %cmp35359 = icmp slt i32 %5, %6
  br i1 %cmp35359, label %for.body36.lr.ph, label %for.end

for.body36.lr.ph:                                 ; preds = %for.body
  %12 = sext i32 %5 to i64
  br label %for.body36

for.body36:                                       ; preds = %for.body36.lr.ph, %for.body36
  %indvars.iv = phi i64 [ %12, %for.body36.lr.ph ], [ %indvars.iv.next, %for.body36 ]
  %vctot.0364 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add135, %for.body36 ]
  %vnbtot.0363 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add119, %for.body36 ]
  %fix1.0362 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add139, %for.body36 ]
  %fiy1.0361 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add140, %for.body36 ]
  %fiz1.0360 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add141, %for.body36 ]
  %arrayidx38 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %13 = load i32* %arrayidx38, align 4, !tbaa !0
  %mul39 = mul nsw i32 %13, 3
  %idxprom40 = sext i32 %mul39 to i64
  %arrayidx41 = getelementptr inbounds float* %pos, i64 %idxprom40
  %14 = load float* %arrayidx41, align 4, !tbaa !3
  %add42 = add nsw i32 %mul39, 1
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds float* %pos, i64 %idxprom43
  %15 = load float* %arrayidx44, align 4, !tbaa !3
  %add45 = add nsw i32 %mul39, 2
  %idxprom46 = sext i32 %add45 to i64
  %arrayidx47 = getelementptr inbounds float* %pos, i64 %idxprom46
  %16 = load float* %arrayidx47, align 4, !tbaa !3
  %sub = fsub float %add18, %14
  %sub48 = fsub float %add22, %15
  %sub49 = fsub float %add26, %16
  %mul50 = fmul float %sub, %sub
  %mul51 = fmul float %sub48, %sub48
  %add52 = fadd float %mul50, %mul51
  %mul53 = fmul float %sub49, %sub49
  %add54 = fadd float %add52, %mul53
  %conv = fpext float %add54 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv55 = fptrunc double %div to float
  %mul56 = fmul float %add54, %conv55
  %mul58 = fmul float %mul56, %tabscale
  %conv59 = fptosi float %mul58 to i32
  %conv60 = sitofp i32 %conv59 to float
  %sub61 = fsub float %mul58, %conv60
  %mul62 = fmul float %sub61, %sub61
  %mul63 = shl nsw i32 %conv59, 3
  %idxprom64 = sext i32 %13 to i64
  %arrayidx65 = getelementptr inbounds i32* %type, i64 %idxprom64
  %17 = load i32* %arrayidx65, align 4, !tbaa !0
  %mul66 = shl nsw i32 %17, 1
  %add67 = add nsw i32 %mul66, %mul33
  %idxprom68 = sext i32 %add67 to i64
  %arrayidx69 = getelementptr inbounds float* %nbfp, i64 %idxprom68
  %18 = load float* %arrayidx69, align 4, !tbaa !3
  %add70351 = or i32 %add67, 1
  %idxprom71 = sext i32 %add70351 to i64
  %arrayidx72 = getelementptr inbounds float* %nbfp, i64 %idxprom71
  %19 = load float* %arrayidx72, align 4, !tbaa !3
  %idxprom73 = sext i32 %mul63 to i64
  %arrayidx74 = getelementptr inbounds float* %VFtab, i64 %idxprom73
  %20 = load float* %arrayidx74, align 4, !tbaa !3
  %add75352 = or i32 %mul63, 1
  %idxprom76 = sext i32 %add75352 to i64
  %arrayidx77 = getelementptr inbounds float* %VFtab, i64 %idxprom76
  %21 = load float* %arrayidx77, align 4, !tbaa !3
  %add78353 = or i32 %mul63, 2
  %idxprom79 = sext i32 %add78353 to i64
  %arrayidx80 = getelementptr inbounds float* %VFtab, i64 %idxprom79
  %22 = load float* %arrayidx80, align 4, !tbaa !3
  %mul81 = fmul float %sub61, %22
  %add82354 = or i32 %mul63, 3
  %idxprom83 = sext i32 %add82354 to i64
  %arrayidx84 = getelementptr inbounds float* %VFtab, i64 %idxprom83
  %23 = load float* %arrayidx84, align 4, !tbaa !3
  %mul85 = fmul float %mul62, %23
  %add86 = fadd float %21, %mul81
  %add87 = fadd float %add86, %mul85
  %mul88 = fmul float %sub61, %add87
  %add89 = fadd float %20, %mul88
  %add90 = fadd float %mul81, %add87
  %mul91 = fmul float %mul85, 2.000000e+00
  %add92 = fadd float %mul91, %add90
  %mul93 = fmul float %18, %add89
  %mul94 = fmul float %18, %add92
  %add95355 = or i32 %mul63, 4
  %idxprom96 = sext i32 %add95355 to i64
  %arrayidx97 = getelementptr inbounds float* %VFtab, i64 %idxprom96
  %24 = load float* %arrayidx97, align 4, !tbaa !3
  %add98356 = or i32 %mul63, 5
  %idxprom99 = sext i32 %add98356 to i64
  %arrayidx100 = getelementptr inbounds float* %VFtab, i64 %idxprom99
  %25 = load float* %arrayidx100, align 4, !tbaa !3
  %add101357 = or i32 %mul63, 6
  %idxprom102 = sext i32 %add101357 to i64
  %arrayidx103 = getelementptr inbounds float* %VFtab, i64 %idxprom102
  %26 = load float* %arrayidx103, align 4, !tbaa !3
  %mul104 = fmul float %sub61, %26
  %add105358 = or i32 %mul63, 7
  %idxprom106 = sext i32 %add105358 to i64
  %arrayidx107 = getelementptr inbounds float* %VFtab, i64 %idxprom106
  %27 = load float* %arrayidx107, align 4, !tbaa !3
  %mul108 = fmul float %mul62, %27
  %add109 = fadd float %25, %mul104
  %add110 = fadd float %add109, %mul108
  %mul111 = fmul float %sub61, %add110
  %add112 = fadd float %24, %mul111
  %add113 = fadd float %mul104, %add110
  %mul114 = fmul float %mul108, 2.000000e+00
  %add115 = fadd float %mul114, %add113
  %mul116 = fmul float %19, %add112
  %mul117 = fmul float %19, %add115
  %add118 = fadd float %vnbtot.0363, %mul93
  %add119 = fadd float %add118, %mul116
  %arrayidx121 = getelementptr inbounds float* %charge, i64 %idxprom64
  %28 = load float* %arrayidx121, align 4, !tbaa !3
  %mul122 = fmul float %mul29, %28
  %mul123 = fmul float %add54, %krf
  %add124 = fadd float %conv55, %mul123
  %sub125 = fsub float %add124, %crf
  %mul126 = fmul float %sub125, %mul122
  %mul127 = fmul float %mul123, 2.000000e+00
  %sub128 = fsub float %conv55, %mul127
  %mul129 = fmul float %sub128, %mul122
  %mul130 = fmul float %conv55, %mul129
  %add131 = fadd float %mul94, %mul117
  %mul132 = fmul float %add131, %tabscale
  %sub133 = fsub float %mul130, %mul132
  %mul134 = fmul float %conv55, %sub133
  %add135 = fadd float %vctot.0364, %mul126
  %mul136 = fmul float %sub, %mul134
  %mul137 = fmul float %sub48, %mul134
  %mul138 = fmul float %sub49, %mul134
  %add139 = fadd float %fix1.0362, %mul136
  %add140 = fadd float %fiy1.0361, %mul137
  %add141 = fadd float %fiz1.0360, %mul138
  %arrayidx143 = getelementptr inbounds float* %faction, i64 %idxprom40
  %29 = load float* %arrayidx143, align 4, !tbaa !3
  %sub144 = fsub float %29, %mul136
  store float %sub144, float* %arrayidx143, align 4, !tbaa !3
  %arrayidx149 = getelementptr inbounds float* %faction, i64 %idxprom43
  %30 = load float* %arrayidx149, align 4, !tbaa !3
  %sub150 = fsub float %30, %mul137
  store float %sub150, float* %arrayidx149, align 4, !tbaa !3
  %arrayidx156 = getelementptr inbounds float* %faction, i64 %idxprom46
  %31 = load float* %arrayidx156, align 4, !tbaa !3
  %sub157 = fsub float %31, %mul138
  store float %sub157, float* %arrayidx156, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %32 = trunc i64 %indvars.iv.next to i32
  %cmp35 = icmp slt i32 %32, %6
  br i1 %cmp35, label %for.body36, label %for.end

for.end:                                          ; preds = %for.body36, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add135, %for.body36 ]
  %vnbtot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add119, %for.body36 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add139, %for.body36 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add140, %for.body36 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add141, %for.body36 ]
  %arrayidx162 = getelementptr inbounds float* %faction, i64 %idxprom16
  %33 = load float* %arrayidx162, align 4, !tbaa !3
  %add163 = fadd float %fix1.0.lcssa, %33
  store float %add163, float* %arrayidx162, align 4, !tbaa !3
  %arrayidx168 = getelementptr inbounds float* %faction, i64 %idxprom20
  %34 = load float* %arrayidx168, align 4, !tbaa !3
  %add169 = fadd float %fiy1.0.lcssa, %34
  store float %add169, float* %arrayidx168, align 4, !tbaa !3
  %arrayidx175 = getelementptr inbounds float* %faction, i64 %idxprom24
  %35 = load float* %arrayidx175, align 4, !tbaa !3
  %add176 = fadd float %fiz1.0.lcssa, %35
  store float %add176, float* %arrayidx175, align 4, !tbaa !3
  %arrayidx181 = getelementptr inbounds float* %fshift, i64 %idxprom1
  %36 = load float* %arrayidx181, align 4, !tbaa !3
  %add182 = fadd float %fix1.0.lcssa, %36
  store float %add182, float* %arrayidx181, align 4, !tbaa !3
  %arrayidx187 = getelementptr inbounds float* %fshift, i64 %idxprom3
  %37 = load float* %arrayidx187, align 4, !tbaa !3
  %add188 = fadd float %fiy1.0.lcssa, %37
  store float %add188, float* %arrayidx187, align 4, !tbaa !3
  %arrayidx194 = getelementptr inbounds float* %fshift, i64 %idxprom6
  %38 = load float* %arrayidx194, align 4, !tbaa !3
  %add195 = fadd float %fiz1.0.lcssa, %38
  store float %add195, float* %arrayidx194, align 4, !tbaa !3
  %arrayidx200 = getelementptr inbounds i32* %gid, i64 %indvars.iv372
  %39 = load i32* %arrayidx200, align 4, !tbaa !0
  %idxprom201 = sext i32 %39 to i64
  %arrayidx202 = getelementptr inbounds float* %Vc, i64 %idxprom201
  %40 = load float* %arrayidx202, align 4, !tbaa !3
  %add203 = fadd float %vctot.0.lcssa, %40
  store float %add203, float* %arrayidx202, align 4, !tbaa !3
  %arrayidx207 = getelementptr inbounds float* %Vnb, i64 %idxprom201
  %41 = load float* %arrayidx207, align 4, !tbaa !3
  %add208 = fadd float %vnbtot.0.lcssa, %41
  store float %add208, float* %arrayidx207, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next373 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end213, label %for.body

for.end213:                                       ; preds = %for.end, %entry
  ret void
}
