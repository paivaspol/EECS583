define void @inl1320(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb, float %tabscale, float* nocapture %VFtab) #0 {
entry:
  %0 = load i32* %iinr, align 4, !tbaa !0
  %idxprom = sext i32 %0 to i64
  %arrayidx1 = getelementptr inbounds float* %charge, i64 %idxprom
  %1 = load float* %arrayidx1, align 4, !tbaa !3
  %add = add nsw i32 %0, 1
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds float* %charge, i64 %idxprom2
  %2 = load float* %arrayidx3, align 4, !tbaa !3
  %mul = fmul float %1, %facel
  %mul4 = fmul float %2, %facel
  %mul5 = shl i32 %ntype, 1
  %arrayidx7 = getelementptr inbounds i32* %type, i64 %idxprom
  %3 = load i32* %arrayidx7, align 4, !tbaa !0
  %mul8 = mul nsw i32 %mul5, %3
  %cmp614 = icmp sgt i32 %nri, 0
  br i1 %cmp614, label %for.body, label %for.end340

for.body:                                         ; preds = %entry, %for.end.for.body_crit_edge
  %4 = phi i32 [ %.pre, %for.end.for.body_crit_edge ], [ %0, %entry ]
  %indvars.iv616 = phi i64 [ %indvars.iv.next617, %for.end.for.body_crit_edge ], [ 0, %entry ]
  %arrayidx10 = getelementptr inbounds i32* %shift, i64 %indvars.iv616
  %5 = load i32* %arrayidx10, align 4, !tbaa !0
  %mul11 = mul nsw i32 %5, 3
  %idxprom12 = sext i32 %mul11 to i64
  %arrayidx13 = getelementptr inbounds float* %shiftvec, i64 %idxprom12
  %6 = load float* %arrayidx13, align 4, !tbaa !3
  %add14 = add nsw i32 %mul11, 1
  %idxprom15 = sext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds float* %shiftvec, i64 %idxprom15
  %7 = load float* %arrayidx16, align 4, !tbaa !3
  %add17 = add nsw i32 %mul11, 2
  %idxprom18 = sext i32 %add17 to i64
  %arrayidx19 = getelementptr inbounds float* %shiftvec, i64 %idxprom18
  %8 = load float* %arrayidx19, align 4, !tbaa !3
  %mul22 = mul nsw i32 %4, 3
  %arrayidx24 = getelementptr inbounds i32* %jindex, i64 %indvars.iv616
  %9 = load i32* %arrayidx24, align 4, !tbaa !0
  %indvars.iv.next617 = add i64 %indvars.iv616, 1
  %arrayidx27 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next617
  %10 = load i32* %arrayidx27, align 4, !tbaa !0
  %idxprom28 = sext i32 %mul22 to i64
  %arrayidx29 = getelementptr inbounds float* %pos, i64 %idxprom28
  %11 = load float* %arrayidx29, align 4, !tbaa !3
  %add30 = fadd float %6, %11
  %add31 = add nsw i32 %mul22, 1
  %idxprom32 = sext i32 %add31 to i64
  %arrayidx33 = getelementptr inbounds float* %pos, i64 %idxprom32
  %12 = load float* %arrayidx33, align 4, !tbaa !3
  %add34 = fadd float %7, %12
  %add35 = add nsw i32 %mul22, 2
  %idxprom36 = sext i32 %add35 to i64
  %arrayidx37 = getelementptr inbounds float* %pos, i64 %idxprom36
  %13 = load float* %arrayidx37, align 4, !tbaa !3
  %add38 = fadd float %8, %13
  %add39 = add nsw i32 %mul22, 3
  %idxprom40 = sext i32 %add39 to i64
  %arrayidx41 = getelementptr inbounds float* %pos, i64 %idxprom40
  %14 = load float* %arrayidx41, align 4, !tbaa !3
  %add42 = fadd float %6, %14
  %add43 = add nsw i32 %mul22, 4
  %idxprom44 = sext i32 %add43 to i64
  %arrayidx45 = getelementptr inbounds float* %pos, i64 %idxprom44
  %15 = load float* %arrayidx45, align 4, !tbaa !3
  %add46 = fadd float %7, %15
  %add47 = add nsw i32 %mul22, 5
  %idxprom48 = sext i32 %add47 to i64
  %arrayidx49 = getelementptr inbounds float* %pos, i64 %idxprom48
  %16 = load float* %arrayidx49, align 4, !tbaa !3
  %add50 = fadd float %8, %16
  %add51 = add nsw i32 %mul22, 6
  %idxprom52 = sext i32 %add51 to i64
  %arrayidx53 = getelementptr inbounds float* %pos, i64 %idxprom52
  %17 = load float* %arrayidx53, align 4, !tbaa !3
  %add54 = fadd float %6, %17
  %add55 = add nsw i32 %mul22, 7
  %idxprom56 = sext i32 %add55 to i64
  %arrayidx57 = getelementptr inbounds float* %pos, i64 %idxprom56
  %18 = load float* %arrayidx57, align 4, !tbaa !3
  %add58 = fadd float %7, %18
  %add59 = add nsw i32 %mul22, 8
  %idxprom60 = sext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds float* %pos, i64 %idxprom60
  %19 = load float* %arrayidx61, align 4, !tbaa !3
  %add62 = fadd float %8, %19
  %cmp64591 = icmp slt i32 %9, %10
  br i1 %cmp64591, label %for.body65.lr.ph, label %for.end

for.body65.lr.ph:                                 ; preds = %for.body
  %20 = sext i32 %9 to i64
  br label %for.body65

for.body65:                                       ; preds = %for.body65.lr.ph, %for.body65
  %indvars.iv = phi i64 [ %20, %for.body65.lr.ph ], [ %indvars.iv.next, %for.body65 ]
  %vctot.0602 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add222, %for.body65 ]
  %vnbtot.0601 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add172, %for.body65 ]
  %fix1.0600 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add186, %for.body65 ]
  %fiy1.0599 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add187, %for.body65 ]
  %fiz1.0598 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add188, %for.body65 ]
  %fix2.0597 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add210, %for.body65 ]
  %fiy2.0596 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add211, %for.body65 ]
  %fiz2.0595 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add212, %for.body65 ]
  %fix3.0594 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add226, %for.body65 ]
  %fiy3.0593 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add227, %for.body65 ]
  %fiz3.0592 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add228, %for.body65 ]
  %arrayidx67 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %21 = load i32* %arrayidx67, align 4, !tbaa !0
  %mul68 = mul nsw i32 %21, 3
  %idxprom69 = sext i32 %mul68 to i64
  %arrayidx70 = getelementptr inbounds float* %pos, i64 %idxprom69
  %22 = load float* %arrayidx70, align 4, !tbaa !3
  %add71 = add nsw i32 %mul68, 1
  %idxprom72 = sext i32 %add71 to i64
  %arrayidx73 = getelementptr inbounds float* %pos, i64 %idxprom72
  %23 = load float* %arrayidx73, align 4, !tbaa !3
  %add74 = add nsw i32 %mul68, 2
  %idxprom75 = sext i32 %add74 to i64
  %arrayidx76 = getelementptr inbounds float* %pos, i64 %idxprom75
  %24 = load float* %arrayidx76, align 4, !tbaa !3
  %sub = fsub float %add30, %22
  %sub77 = fsub float %add34, %23
  %sub78 = fsub float %add38, %24
  %mul79 = fmul float %sub, %sub
  %mul80 = fmul float %sub77, %sub77
  %add81 = fadd float %mul79, %mul80
  %mul82 = fmul float %sub78, %sub78
  %add83 = fadd float %add81, %mul82
  %sub84 = fsub float %add42, %22
  %sub85 = fsub float %add46, %23
  %sub86 = fsub float %add50, %24
  %mul87 = fmul float %sub84, %sub84
  %mul88 = fmul float %sub85, %sub85
  %add89 = fadd float %mul87, %mul88
  %mul90 = fmul float %sub86, %sub86
  %add91 = fadd float %add89, %mul90
  %sub92 = fsub float %add54, %22
  %sub93 = fsub float %add58, %23
  %sub94 = fsub float %add62, %24
  %mul95 = fmul float %sub92, %sub92
  %mul96 = fmul float %sub93, %sub93
  %add97 = fadd float %mul95, %mul96
  %mul98 = fmul float %sub94, %sub94
  %add99 = fadd float %add97, %mul98
  %conv = fpext float %add83 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv100 = fptrunc double %div to float
  %conv101 = fpext float %add91 to double
  %call102 = tail call double @sqrt(double %conv101) #2
  %div103 = fdiv double 1.000000e+00, %call102
  %conv104 = fptrunc double %div103 to float
  %conv105 = fpext float %add99 to double
  %call106 = tail call double @sqrt(double %conv105) #2
  %div107 = fdiv double 1.000000e+00, %call106
  %conv108 = fptrunc double %div107 to float
  %mul109 = fmul float %add83, %conv100
  %mul111 = fmul float %mul109, %tabscale
  %conv112 = fptosi float %mul111 to i32
  %conv113 = sitofp i32 %conv112 to float
  %sub114 = fsub float %mul111, %conv113
  %mul115 = fmul float %sub114, %sub114
  %mul116 = shl nsw i32 %conv112, 3
  %idxprom117 = sext i32 %21 to i64
  %arrayidx118 = getelementptr inbounds i32* %type, i64 %idxprom117
  %25 = load i32* %arrayidx118, align 4, !tbaa !0
  %mul119 = shl nsw i32 %25, 1
  %add120 = add nsw i32 %mul119, %mul8
  %idxprom121 = sext i32 %add120 to i64
  %arrayidx122 = getelementptr inbounds float* %nbfp, i64 %idxprom121
  %26 = load float* %arrayidx122, align 4, !tbaa !3
  %add123583 = or i32 %add120, 1
  %idxprom124 = sext i32 %add123583 to i64
  %arrayidx125 = getelementptr inbounds float* %nbfp, i64 %idxprom124
  %27 = load float* %arrayidx125, align 4, !tbaa !3
  %idxprom126 = sext i32 %mul116 to i64
  %arrayidx127 = getelementptr inbounds float* %VFtab, i64 %idxprom126
  %28 = load float* %arrayidx127, align 4, !tbaa !3
  %add128584 = or i32 %mul116, 1
  %idxprom129 = sext i32 %add128584 to i64
  %arrayidx130 = getelementptr inbounds float* %VFtab, i64 %idxprom129
  %29 = load float* %arrayidx130, align 4, !tbaa !3
  %add131585 = or i32 %mul116, 2
  %idxprom132 = sext i32 %add131585 to i64
  %arrayidx133 = getelementptr inbounds float* %VFtab, i64 %idxprom132
  %30 = load float* %arrayidx133, align 4, !tbaa !3
  %mul134 = fmul float %sub114, %30
  %add135586 = or i32 %mul116, 3
  %idxprom136 = sext i32 %add135586 to i64
  %arrayidx137 = getelementptr inbounds float* %VFtab, i64 %idxprom136
  %31 = load float* %arrayidx137, align 4, !tbaa !3
  %mul138 = fmul float %mul115, %31
  %add139 = fadd float %29, %mul134
  %add140 = fadd float %add139, %mul138
  %mul141 = fmul float %sub114, %add140
  %add142 = fadd float %28, %mul141
  %add143 = fadd float %mul134, %add140
  %mul144 = fmul float %mul138, 2.000000e+00
  %add145 = fadd float %mul144, %add143
  %mul146 = fmul float %26, %add142
  %mul147 = fmul float %26, %add145
  %add148587 = or i32 %mul116, 4
  %idxprom149 = sext i32 %add148587 to i64
  %arrayidx150 = getelementptr inbounds float* %VFtab, i64 %idxprom149
  %32 = load float* %arrayidx150, align 4, !tbaa !3
  %add151588 = or i32 %mul116, 5
  %idxprom152 = sext i32 %add151588 to i64
  %arrayidx153 = getelementptr inbounds float* %VFtab, i64 %idxprom152
  %33 = load float* %arrayidx153, align 4, !tbaa !3
  %add154589 = or i32 %mul116, 6
  %idxprom155 = sext i32 %add154589 to i64
  %arrayidx156 = getelementptr inbounds float* %VFtab, i64 %idxprom155
  %34 = load float* %arrayidx156, align 4, !tbaa !3
  %mul157 = fmul float %sub114, %34
  %add158590 = or i32 %mul116, 7
  %idxprom159 = sext i32 %add158590 to i64
  %arrayidx160 = getelementptr inbounds float* %VFtab, i64 %idxprom159
  %35 = load float* %arrayidx160, align 4, !tbaa !3
  %mul161 = fmul float %mul115, %35
  %add162 = fadd float %33, %mul157
  %add163 = fadd float %add162, %mul161
  %mul164 = fmul float %sub114, %add163
  %add165 = fadd float %32, %mul164
  %add166 = fadd float %mul157, %add163
  %mul167 = fmul float %mul161, 2.000000e+00
  %add168 = fadd float %mul167, %add166
  %mul169 = fmul float %27, %add165
  %mul170 = fmul float %27, %add168
  %add171 = fadd float %vnbtot.0601, %mul146
  %add172 = fadd float %add171, %mul169
  %arrayidx174 = getelementptr inbounds float* %charge, i64 %idxprom117
  %36 = load float* %arrayidx174, align 4, !tbaa !3
  %mul175 = fmul float %mul, %36
  %mul176 = fmul float %conv100, %mul175
  %mul177 = fmul float %conv100, %mul176
  %add178 = fadd float %mul147, %mul170
  %mul179 = fmul float %add178, %tabscale
  %sub180 = fsub float %mul177, %mul179
  %mul181 = fmul float %conv100, %sub180
  %add182 = fadd float %vctot.0602, %mul176
  %mul183 = fmul float %sub, %mul181
  %mul184 = fmul float %sub77, %mul181
  %mul185 = fmul float %sub78, %mul181
  %add186 = fadd float %fix1.0600, %mul183
  %add187 = fadd float %fiy1.0599, %mul184
  %add188 = fadd float %fiz1.0598, %mul185
  %arrayidx190 = getelementptr inbounds float* %faction, i64 %idxprom69
  %37 = load float* %arrayidx190, align 4, !tbaa !3
  %sub191 = fsub float %37, %mul183
  %arrayidx194 = getelementptr inbounds float* %faction, i64 %idxprom72
  %38 = load float* %arrayidx194, align 4, !tbaa !3
  %sub195 = fsub float %38, %mul184
  %arrayidx198 = getelementptr inbounds float* %faction, i64 %idxprom75
  %39 = load float* %arrayidx198, align 4, !tbaa !3
  %sub199 = fsub float %39, %mul185
  %mul200 = fmul float %conv104, %conv104
  %mul203 = fmul float %mul4, %36
  %mul204 = fmul float %conv104, %mul203
  %mul205 = fmul float %mul200, %mul204
  %add206 = fadd float %mul204, %add182
  %mul207 = fmul float %sub84, %mul205
  %mul208 = fmul float %sub85, %mul205
  %mul209 = fmul float %sub86, %mul205
  %add210 = fadd float %fix2.0597, %mul207
  %add211 = fadd float %fiy2.0596, %mul208
  %add212 = fadd float %fiz2.0595, %mul209
  %sub213 = fsub float %sub191, %mul207
  %sub214 = fsub float %sub195, %mul208
  %sub215 = fsub float %sub199, %mul209
  %mul216 = fmul float %conv108, %conv108
  %mul220 = fmul float %conv108, %mul203
  %mul221 = fmul float %mul216, %mul220
  %add222 = fadd float %mul220, %add206
  %mul223 = fmul float %sub92, %mul221
  %mul224 = fmul float %sub93, %mul221
  %mul225 = fmul float %sub94, %mul221
  %add226 = fadd float %fix3.0594, %mul223
  %add227 = fadd float %fiy3.0593, %mul224
  %add228 = fadd float %fiz3.0592, %mul225
  %sub229 = fsub float %sub213, %mul223
  store float %sub229, float* %arrayidx190, align 4, !tbaa !3
  %sub232 = fsub float %sub214, %mul224
  store float %sub232, float* %arrayidx194, align 4, !tbaa !3
  %sub236 = fsub float %sub215, %mul225
  store float %sub236, float* %arrayidx198, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %40 = trunc i64 %indvars.iv.next to i32
  %cmp64 = icmp slt i32 %40, %10
  br i1 %cmp64, label %for.body65, label %for.end

for.end:                                          ; preds = %for.body65, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add222, %for.body65 ]
  %vnbtot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add172, %for.body65 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add186, %for.body65 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add187, %for.body65 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add188, %for.body65 ]
  %fix2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add210, %for.body65 ]
  %fiy2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add211, %for.body65 ]
  %fiz2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add212, %for.body65 ]
  %fix3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add226, %for.body65 ]
  %fiy3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add227, %for.body65 ]
  %fiz3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add228, %for.body65 ]
  %arrayidx241 = getelementptr inbounds float* %faction, i64 %idxprom28
  %41 = load float* %arrayidx241, align 4, !tbaa !3
  %add242 = fadd float %fix1.0.lcssa, %41
  store float %add242, float* %arrayidx241, align 4, !tbaa !3
  %arrayidx247 = getelementptr inbounds float* %faction, i64 %idxprom32
  %42 = load float* %arrayidx247, align 4, !tbaa !3
  %add248 = fadd float %fiy1.0.lcssa, %42
  store float %add248, float* %arrayidx247, align 4, !tbaa !3
  %arrayidx254 = getelementptr inbounds float* %faction, i64 %idxprom36
  %43 = load float* %arrayidx254, align 4, !tbaa !3
  %add255 = fadd float %fiz1.0.lcssa, %43
  store float %add255, float* %arrayidx254, align 4, !tbaa !3
  %arrayidx261 = getelementptr inbounds float* %faction, i64 %idxprom40
  %44 = load float* %arrayidx261, align 4, !tbaa !3
  %add262 = fadd float %fix2.0.lcssa, %44
  store float %add262, float* %arrayidx261, align 4, !tbaa !3
  %arrayidx268 = getelementptr inbounds float* %faction, i64 %idxprom44
  %45 = load float* %arrayidx268, align 4, !tbaa !3
  %add269 = fadd float %fiy2.0.lcssa, %45
  store float %add269, float* %arrayidx268, align 4, !tbaa !3
  %arrayidx275 = getelementptr inbounds float* %faction, i64 %idxprom48
  %46 = load float* %arrayidx275, align 4, !tbaa !3
  %add276 = fadd float %fiz2.0.lcssa, %46
  store float %add276, float* %arrayidx275, align 4, !tbaa !3
  %arrayidx282 = getelementptr inbounds float* %faction, i64 %idxprom52
  %47 = load float* %arrayidx282, align 4, !tbaa !3
  %add283 = fadd float %fix3.0.lcssa, %47
  store float %add283, float* %arrayidx282, align 4, !tbaa !3
  %arrayidx289 = getelementptr inbounds float* %faction, i64 %idxprom56
  %48 = load float* %arrayidx289, align 4, !tbaa !3
  %add290 = fadd float %fiy3.0.lcssa, %48
  store float %add290, float* %arrayidx289, align 4, !tbaa !3
  %arrayidx296 = getelementptr inbounds float* %faction, i64 %idxprom60
  %49 = load float* %arrayidx296, align 4, !tbaa !3
  %add297 = fadd float %fiz3.0.lcssa, %49
  store float %add297, float* %arrayidx296, align 4, !tbaa !3
  %arrayidx302 = getelementptr inbounds float* %fshift, i64 %idxprom12
  %50 = load float* %arrayidx302, align 4, !tbaa !3
  %add303 = fadd float %fix1.0.lcssa, %50
  %add304 = fadd float %fix2.0.lcssa, %add303
  %add305 = fadd float %fix3.0.lcssa, %add304
  store float %add305, float* %arrayidx302, align 4, !tbaa !3
  %arrayidx310 = getelementptr inbounds float* %fshift, i64 %idxprom15
  %51 = load float* %arrayidx310, align 4, !tbaa !3
  %add311 = fadd float %fiy1.0.lcssa, %51
  %add312 = fadd float %fiy2.0.lcssa, %add311
  %add313 = fadd float %fiy3.0.lcssa, %add312
  store float %add313, float* %arrayidx310, align 4, !tbaa !3
  %arrayidx319 = getelementptr inbounds float* %fshift, i64 %idxprom18
  %52 = load float* %arrayidx319, align 4, !tbaa !3
  %add320 = fadd float %fiz1.0.lcssa, %52
  %add321 = fadd float %fiz2.0.lcssa, %add320
  %add322 = fadd float %fiz3.0.lcssa, %add321
  store float %add322, float* %arrayidx319, align 4, !tbaa !3
  %arrayidx327 = getelementptr inbounds i32* %gid, i64 %indvars.iv616
  %53 = load i32* %arrayidx327, align 4, !tbaa !0
  %idxprom328 = sext i32 %53 to i64
  %arrayidx329 = getelementptr inbounds float* %Vc, i64 %idxprom328
  %54 = load float* %arrayidx329, align 4, !tbaa !3
  %add330 = fadd float %vctot.0.lcssa, %54
  store float %add330, float* %arrayidx329, align 4, !tbaa !3
  %arrayidx334 = getelementptr inbounds float* %Vnb, i64 %idxprom328
  %55 = load float* %arrayidx334, align 4, !tbaa !3
  %add335 = fadd float %vnbtot.0.lcssa, %55
  store float %add335, float* %arrayidx334, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next617 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end340, label %for.end.for.body_crit_edge

for.end.for.body_crit_edge:                       ; preds = %for.end
  %arrayidx21.phi.trans.insert = getelementptr inbounds i32* %iinr, i64 %indvars.iv.next617
  %.pre = load i32* %arrayidx21.phi.trans.insert, align 4, !tbaa !0
  br label %for.body

for.end340:                                       ; preds = %for.end, %entry
  ret void
}
