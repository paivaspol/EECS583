define void @inl0300(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb, float %tabscale, float* nocapture %VFtab) #0 {
entry:
  %cmp332 = icmp sgt i32 %nri, 0
  br i1 %cmp332, label %for.body.lr.ph, label %for.end192

for.body.lr.ph:                                   ; preds = %entry
  %mul27 = shl i32 %ntype, 1
  br label %for.body

for.body:                                         ; preds = %for.end, %for.body.lr.ph
  %indvars.iv334 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next335, %for.end ]
  %arrayidx = getelementptr inbounds i32* %shift, i64 %indvars.iv334
  %0 = load i32* %arrayidx, align 4, !tbaa !0
  %mul = mul nsw i32 %0, 3
  %idxprom1 = sext i32 %mul to i64
  %arrayidx2 = getelementptr inbounds float* %shiftvec, i64 %idxprom1
  %1 = load float* %arrayidx2, align 4, !tbaa !3
  %add = add nsw i32 %mul, 1
  %idxprom3 = sext i32 %add to i64
  %arrayidx4 = getelementptr inbounds float* %shiftvec, i64 %idxprom3
  %2 = load float* %arrayidx4, align 4, !tbaa !3
  %add5 = add nsw i32 %mul, 2
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds float* %shiftvec, i64 %idxprom6
  %3 = load float* %arrayidx7, align 4, !tbaa !3
  %arrayidx9 = getelementptr inbounds i32* %iinr, i64 %indvars.iv334
  %4 = load i32* %arrayidx9, align 4, !tbaa !0
  %mul10 = mul nsw i32 %4, 3
  %arrayidx12 = getelementptr inbounds i32* %jindex, i64 %indvars.iv334
  %5 = load i32* %arrayidx12, align 4, !tbaa !0
  %indvars.iv.next335 = add i64 %indvars.iv334, 1
  %arrayidx15 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next335
  %6 = load i32* %arrayidx15, align 4, !tbaa !0
  %idxprom16 = sext i32 %mul10 to i64
  %arrayidx17 = getelementptr inbounds float* %pos, i64 %idxprom16
  %7 = load float* %arrayidx17, align 4, !tbaa !3
  %add18 = fadd float %1, %7
  %add19 = add nsw i32 %mul10, 1
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds float* %pos, i64 %idxprom20
  %8 = load float* %arrayidx21, align 4, !tbaa !3
  %add22 = fadd float %2, %8
  %add23 = add nsw i32 %mul10, 2
  %idxprom24 = sext i32 %add23 to i64
  %arrayidx25 = getelementptr inbounds float* %pos, i64 %idxprom24
  %9 = load float* %arrayidx25, align 4, !tbaa !3
  %add26 = fadd float %3, %9
  %idxprom28 = sext i32 %4 to i64
  %arrayidx29 = getelementptr inbounds i32* %type, i64 %idxprom28
  %10 = load i32* %arrayidx29, align 4, !tbaa !0
  %mul30 = mul nsw i32 %mul27, %10
  %cmp32323 = icmp slt i32 %5, %6
  br i1 %cmp32323, label %for.body33.lr.ph, label %for.end

for.body33.lr.ph:                                 ; preds = %for.body
  %11 = sext i32 %5 to i64
  br label %for.body33

for.body33:                                       ; preds = %for.body33.lr.ph, %for.body33
  %indvars.iv = phi i64 [ %11, %for.body33.lr.ph ], [ %indvars.iv.next, %for.body33 ]
  %vnbtot.0327 = phi float [ 0.000000e+00, %for.body33.lr.ph ], [ %add115, %for.body33 ]
  %fix1.0326 = phi float [ 0.000000e+00, %for.body33.lr.ph ], [ %add123, %for.body33 ]
  %fiy1.0325 = phi float [ 0.000000e+00, %for.body33.lr.ph ], [ %add124, %for.body33 ]
  %fiz1.0324 = phi float [ 0.000000e+00, %for.body33.lr.ph ], [ %add125, %for.body33 ]
  %arrayidx35 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %12 = load i32* %arrayidx35, align 4, !tbaa !0
  %mul36 = mul nsw i32 %12, 3
  %idxprom37 = sext i32 %mul36 to i64
  %arrayidx38 = getelementptr inbounds float* %pos, i64 %idxprom37
  %13 = load float* %arrayidx38, align 4, !tbaa !3
  %add39 = add nsw i32 %mul36, 1
  %idxprom40 = sext i32 %add39 to i64
  %arrayidx41 = getelementptr inbounds float* %pos, i64 %idxprom40
  %14 = load float* %arrayidx41, align 4, !tbaa !3
  %add42 = add nsw i32 %mul36, 2
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds float* %pos, i64 %idxprom43
  %15 = load float* %arrayidx44, align 4, !tbaa !3
  %sub = fsub float %add18, %13
  %sub45 = fsub float %add22, %14
  %sub46 = fsub float %add26, %15
  %mul47 = fmul float %sub, %sub
  %mul48 = fmul float %sub45, %sub45
  %add49 = fadd float %mul47, %mul48
  %mul50 = fmul float %sub46, %sub46
  %add51 = fadd float %add49, %mul50
  %conv = fpext float %add51 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv52 = fptrunc double %div to float
  %mul53 = fmul float %add51, %conv52
  %mul54 = fmul float %mul53, %tabscale
  %conv55 = fptosi float %mul54 to i32
  %conv56 = sitofp i32 %conv55 to float
  %sub57 = fsub float %mul54, %conv56
  %mul58 = fmul float %sub57, %sub57
  %mul59 = shl nsw i32 %conv55, 3
  %idxprom60 = sext i32 %12 to i64
  %arrayidx61 = getelementptr inbounds i32* %type, i64 %idxprom60
  %16 = load i32* %arrayidx61, align 4, !tbaa !0
  %mul62 = shl nsw i32 %16, 1
  %add63 = add nsw i32 %mul62, %mul30
  %idxprom64 = sext i32 %add63 to i64
  %arrayidx65 = getelementptr inbounds float* %nbfp, i64 %idxprom64
  %17 = load float* %arrayidx65, align 4, !tbaa !3
  %add66315 = or i32 %add63, 1
  %idxprom67 = sext i32 %add66315 to i64
  %arrayidx68 = getelementptr inbounds float* %nbfp, i64 %idxprom67
  %18 = load float* %arrayidx68, align 4, !tbaa !3
  %idxprom69 = sext i32 %mul59 to i64
  %arrayidx70 = getelementptr inbounds float* %VFtab, i64 %idxprom69
  %19 = load float* %arrayidx70, align 4, !tbaa !3
  %add71316 = or i32 %mul59, 1
  %idxprom72 = sext i32 %add71316 to i64
  %arrayidx73 = getelementptr inbounds float* %VFtab, i64 %idxprom72
  %20 = load float* %arrayidx73, align 4, !tbaa !3
  %add74317 = or i32 %mul59, 2
  %idxprom75 = sext i32 %add74317 to i64
  %arrayidx76 = getelementptr inbounds float* %VFtab, i64 %idxprom75
  %21 = load float* %arrayidx76, align 4, !tbaa !3
  %mul77 = fmul float %sub57, %21
  %add78318 = or i32 %mul59, 3
  %idxprom79 = sext i32 %add78318 to i64
  %arrayidx80 = getelementptr inbounds float* %VFtab, i64 %idxprom79
  %22 = load float* %arrayidx80, align 4, !tbaa !3
  %mul81 = fmul float %mul58, %22
  %add82 = fadd float %20, %mul77
  %add83 = fadd float %add82, %mul81
  %mul84 = fmul float %sub57, %add83
  %add85 = fadd float %19, %mul84
  %add86 = fadd float %mul77, %add83
  %mul87 = fmul float %mul81, 2.000000e+00
  %add88 = fadd float %mul87, %add86
  %mul89 = fmul float %17, %add85
  %mul90 = fmul float %17, %add88
  %add91319 = or i32 %mul59, 4
  %idxprom92 = sext i32 %add91319 to i64
  %arrayidx93 = getelementptr inbounds float* %VFtab, i64 %idxprom92
  %23 = load float* %arrayidx93, align 4, !tbaa !3
  %add94320 = or i32 %mul59, 5
  %idxprom95 = sext i32 %add94320 to i64
  %arrayidx96 = getelementptr inbounds float* %VFtab, i64 %idxprom95
  %24 = load float* %arrayidx96, align 4, !tbaa !3
  %add97321 = or i32 %mul59, 6
  %idxprom98 = sext i32 %add97321 to i64
  %arrayidx99 = getelementptr inbounds float* %VFtab, i64 %idxprom98
  %25 = load float* %arrayidx99, align 4, !tbaa !3
  %mul100 = fmul float %sub57, %25
  %add101322 = or i32 %mul59, 7
  %idxprom102 = sext i32 %add101322 to i64
  %arrayidx103 = getelementptr inbounds float* %VFtab, i64 %idxprom102
  %26 = load float* %arrayidx103, align 4, !tbaa !3
  %mul104 = fmul float %mul58, %26
  %add105 = fadd float %24, %mul100
  %add106 = fadd float %add105, %mul104
  %mul107 = fmul float %sub57, %add106
  %add108 = fadd float %23, %mul107
  %add109 = fadd float %mul100, %add106
  %mul110 = fmul float %mul104, 2.000000e+00
  %add111 = fadd float %mul110, %add109
  %mul112 = fmul float %18, %add108
  %mul113 = fmul float %18, %add111
  %add114 = fadd float %vnbtot.0327, %mul89
  %add115 = fadd float %add114, %mul112
  %add116 = fadd float %mul90, %mul113
  %mul117 = fmul float %add116, %tabscale
  %27 = fmul float %conv52, %mul117
  %mul119 = fsub float -0.000000e+00, %27
  %mul120 = fmul float %sub, %mul119
  %mul121 = fmul float %sub45, %mul119
  %mul122 = fmul float %sub46, %mul119
  %add123 = fadd float %fix1.0326, %mul120
  %add124 = fadd float %fiy1.0325, %mul121
  %add125 = fadd float %fiz1.0324, %mul122
  %arrayidx127 = getelementptr inbounds float* %faction, i64 %idxprom37
  %28 = load float* %arrayidx127, align 4, !tbaa !3
  %sub128 = fsub float %28, %mul120
  store float %sub128, float* %arrayidx127, align 4, !tbaa !3
  %arrayidx133 = getelementptr inbounds float* %faction, i64 %idxprom40
  %29 = load float* %arrayidx133, align 4, !tbaa !3
  %sub134 = fsub float %29, %mul121
  store float %sub134, float* %arrayidx133, align 4, !tbaa !3
  %arrayidx140 = getelementptr inbounds float* %faction, i64 %idxprom43
  %30 = load float* %arrayidx140, align 4, !tbaa !3
  %sub141 = fsub float %30, %mul122
  store float %sub141, float* %arrayidx140, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %31 = trunc i64 %indvars.iv.next to i32
  %cmp32 = icmp slt i32 %31, %6
  br i1 %cmp32, label %for.body33, label %for.end

for.end:                                          ; preds = %for.body33, %for.body
  %vnbtot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add115, %for.body33 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add123, %for.body33 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add124, %for.body33 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add125, %for.body33 ]
  %arrayidx146 = getelementptr inbounds float* %faction, i64 %idxprom16
  %32 = load float* %arrayidx146, align 4, !tbaa !3
  %add147 = fadd float %fix1.0.lcssa, %32
  store float %add147, float* %arrayidx146, align 4, !tbaa !3
  %arrayidx152 = getelementptr inbounds float* %faction, i64 %idxprom20
  %33 = load float* %arrayidx152, align 4, !tbaa !3
  %add153 = fadd float %fiy1.0.lcssa, %33
  store float %add153, float* %arrayidx152, align 4, !tbaa !3
  %arrayidx159 = getelementptr inbounds float* %faction, i64 %idxprom24
  %34 = load float* %arrayidx159, align 4, !tbaa !3
  %add160 = fadd float %fiz1.0.lcssa, %34
  store float %add160, float* %arrayidx159, align 4, !tbaa !3
  %arrayidx165 = getelementptr inbounds float* %fshift, i64 %idxprom1
  %35 = load float* %arrayidx165, align 4, !tbaa !3
  %add166 = fadd float %fix1.0.lcssa, %35
  store float %add166, float* %arrayidx165, align 4, !tbaa !3
  %arrayidx171 = getelementptr inbounds float* %fshift, i64 %idxprom3
  %36 = load float* %arrayidx171, align 4, !tbaa !3
  %add172 = fadd float %fiy1.0.lcssa, %36
  store float %add172, float* %arrayidx171, align 4, !tbaa !3
  %arrayidx178 = getelementptr inbounds float* %fshift, i64 %idxprom6
  %37 = load float* %arrayidx178, align 4, !tbaa !3
  %add179 = fadd float %fiz1.0.lcssa, %37
  store float %add179, float* %arrayidx178, align 4, !tbaa !3
  %arrayidx184 = getelementptr inbounds i32* %gid, i64 %indvars.iv334
  %38 = load i32* %arrayidx184, align 4, !tbaa !0
  %idxprom185 = sext i32 %38 to i64
  %arrayidx186 = getelementptr inbounds float* %Vnb, i64 %idxprom185
  %39 = load float* %arrayidx186, align 4, !tbaa !3
  %add187 = fadd float %vnbtot.0.lcssa, %39
  store float %add187, float* %arrayidx186, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next335 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end192, label %for.body

for.end192:                                       ; preds = %for.end, %entry
  ret void
}
