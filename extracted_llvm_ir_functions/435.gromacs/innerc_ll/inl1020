define void @inl1020(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc) #0 {
entry:
  %0 = load i32* %iinr, align 4, !tbaa !0
  %idxprom = sext i32 %0 to i64
  %arrayidx1 = getelementptr inbounds float* %charge, i64 %idxprom
  %1 = load float* %arrayidx1, align 4, !tbaa !3
  %add = add nsw i32 %0, 1
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds float* %charge, i64 %idxprom2
  %2 = load float* %arrayidx3, align 4, !tbaa !3
  %mul = fmul float %1, %facel
  %mul4 = fmul float %2, %facel
  %cmp476 = icmp sgt i32 %nri, 0
  br i1 %cmp476, label %for.body, label %for.end264

for.body:                                         ; preds = %entry, %for.end.for.body_crit_edge
  %3 = phi i32 [ %.pre, %for.end.for.body_crit_edge ], [ %0, %entry ]
  %indvars.iv478 = phi i64 [ %indvars.iv.next479, %for.end.for.body_crit_edge ], [ 0, %entry ]
  %arrayidx6 = getelementptr inbounds i32* %shift, i64 %indvars.iv478
  %4 = load i32* %arrayidx6, align 4, !tbaa !0
  %mul7 = mul nsw i32 %4, 3
  %idxprom8 = sext i32 %mul7 to i64
  %arrayidx9 = getelementptr inbounds float* %shiftvec, i64 %idxprom8
  %5 = load float* %arrayidx9, align 4, !tbaa !3
  %add10 = add nsw i32 %mul7, 1
  %idxprom11 = sext i32 %add10 to i64
  %arrayidx12 = getelementptr inbounds float* %shiftvec, i64 %idxprom11
  %6 = load float* %arrayidx12, align 4, !tbaa !3
  %add13 = add nsw i32 %mul7, 2
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds float* %shiftvec, i64 %idxprom14
  %7 = load float* %arrayidx15, align 4, !tbaa !3
  %mul18 = mul nsw i32 %3, 3
  %arrayidx20 = getelementptr inbounds i32* %jindex, i64 %indvars.iv478
  %8 = load i32* %arrayidx20, align 4, !tbaa !0
  %indvars.iv.next479 = add i64 %indvars.iv478, 1
  %arrayidx23 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next479
  %9 = load i32* %arrayidx23, align 4, !tbaa !0
  %idxprom24 = sext i32 %mul18 to i64
  %arrayidx25 = getelementptr inbounds float* %pos, i64 %idxprom24
  %10 = load float* %arrayidx25, align 4, !tbaa !3
  %add26 = fadd float %5, %10
  %add27 = add nsw i32 %mul18, 1
  %idxprom28 = sext i32 %add27 to i64
  %arrayidx29 = getelementptr inbounds float* %pos, i64 %idxprom28
  %11 = load float* %arrayidx29, align 4, !tbaa !3
  %add30 = fadd float %6, %11
  %add31 = add nsw i32 %mul18, 2
  %idxprom32 = sext i32 %add31 to i64
  %arrayidx33 = getelementptr inbounds float* %pos, i64 %idxprom32
  %12 = load float* %arrayidx33, align 4, !tbaa !3
  %add34 = fadd float %7, %12
  %add35 = add nsw i32 %mul18, 3
  %idxprom36 = sext i32 %add35 to i64
  %arrayidx37 = getelementptr inbounds float* %pos, i64 %idxprom36
  %13 = load float* %arrayidx37, align 4, !tbaa !3
  %add38 = fadd float %5, %13
  %add39 = add nsw i32 %mul18, 4
  %idxprom40 = sext i32 %add39 to i64
  %arrayidx41 = getelementptr inbounds float* %pos, i64 %idxprom40
  %14 = load float* %arrayidx41, align 4, !tbaa !3
  %add42 = fadd float %6, %14
  %add43 = add nsw i32 %mul18, 5
  %idxprom44 = sext i32 %add43 to i64
  %arrayidx45 = getelementptr inbounds float* %pos, i64 %idxprom44
  %15 = load float* %arrayidx45, align 4, !tbaa !3
  %add46 = fadd float %7, %15
  %add47 = add nsw i32 %mul18, 6
  %idxprom48 = sext i32 %add47 to i64
  %arrayidx49 = getelementptr inbounds float* %pos, i64 %idxprom48
  %16 = load float* %arrayidx49, align 4, !tbaa !3
  %add50 = fadd float %5, %16
  %add51 = add nsw i32 %mul18, 7
  %idxprom52 = sext i32 %add51 to i64
  %arrayidx53 = getelementptr inbounds float* %pos, i64 %idxprom52
  %17 = load float* %arrayidx53, align 4, !tbaa !3
  %add54 = fadd float %6, %17
  %add55 = add nsw i32 %mul18, 8
  %idxprom56 = sext i32 %add55 to i64
  %arrayidx57 = getelementptr inbounds float* %pos, i64 %idxprom56
  %18 = load float* %arrayidx57, align 4, !tbaa !3
  %add58 = fadd float %7, %18
  %cmp60455 = icmp slt i32 %8, %9
  br i1 %cmp60455, label %for.body61.lr.ph, label %for.end

for.body61.lr.ph:                                 ; preds = %for.body
  %19 = sext i32 %8 to i64
  br label %for.body61

for.body61:                                       ; preds = %for.body61.lr.ph, %for.body61
  %indvars.iv = phi i64 [ %19, %for.body61.lr.ph ], [ %indvars.iv.next, %for.body61 ]
  %vctot.0465 = phi float [ 0.000000e+00, %for.body61.lr.ph ], [ %add151, %for.body61 ]
  %fix1.0464 = phi float [ 0.000000e+00, %for.body61.lr.ph ], [ %add115, %for.body61 ]
  %fiy1.0463 = phi float [ 0.000000e+00, %for.body61.lr.ph ], [ %add116, %for.body61 ]
  %fiz1.0462 = phi float [ 0.000000e+00, %for.body61.lr.ph ], [ %add117, %for.body61 ]
  %fix2.0461 = phi float [ 0.000000e+00, %for.body61.lr.ph ], [ %add139, %for.body61 ]
  %fiy2.0460 = phi float [ 0.000000e+00, %for.body61.lr.ph ], [ %add140, %for.body61 ]
  %fiz2.0459 = phi float [ 0.000000e+00, %for.body61.lr.ph ], [ %add141, %for.body61 ]
  %fix3.0458 = phi float [ 0.000000e+00, %for.body61.lr.ph ], [ %add155, %for.body61 ]
  %fiy3.0457 = phi float [ 0.000000e+00, %for.body61.lr.ph ], [ %add156, %for.body61 ]
  %fiz3.0456 = phi float [ 0.000000e+00, %for.body61.lr.ph ], [ %add157, %for.body61 ]
  %arrayidx63 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %20 = load i32* %arrayidx63, align 4, !tbaa !0
  %mul64 = mul nsw i32 %20, 3
  %idxprom65 = sext i32 %mul64 to i64
  %arrayidx66 = getelementptr inbounds float* %pos, i64 %idxprom65
  %21 = load float* %arrayidx66, align 4, !tbaa !3
  %add67 = add nsw i32 %mul64, 1
  %idxprom68 = sext i32 %add67 to i64
  %arrayidx69 = getelementptr inbounds float* %pos, i64 %idxprom68
  %22 = load float* %arrayidx69, align 4, !tbaa !3
  %add70 = add nsw i32 %mul64, 2
  %idxprom71 = sext i32 %add70 to i64
  %arrayidx72 = getelementptr inbounds float* %pos, i64 %idxprom71
  %23 = load float* %arrayidx72, align 4, !tbaa !3
  %sub = fsub float %add26, %21
  %sub73 = fsub float %add30, %22
  %sub74 = fsub float %add34, %23
  %mul75 = fmul float %sub, %sub
  %mul76 = fmul float %sub73, %sub73
  %add77 = fadd float %mul75, %mul76
  %mul78 = fmul float %sub74, %sub74
  %add79 = fadd float %add77, %mul78
  %sub80 = fsub float %add38, %21
  %sub81 = fsub float %add42, %22
  %sub82 = fsub float %add46, %23
  %mul83 = fmul float %sub80, %sub80
  %mul84 = fmul float %sub81, %sub81
  %add85 = fadd float %mul83, %mul84
  %mul86 = fmul float %sub82, %sub82
  %add87 = fadd float %add85, %mul86
  %sub88 = fsub float %add50, %21
  %sub89 = fsub float %add54, %22
  %sub90 = fsub float %add58, %23
  %mul91 = fmul float %sub88, %sub88
  %mul92 = fmul float %sub89, %sub89
  %add93 = fadd float %mul91, %mul92
  %mul94 = fmul float %sub90, %sub90
  %add95 = fadd float %add93, %mul94
  %conv = fpext float %add79 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv96 = fptrunc double %div to float
  %conv97 = fpext float %add87 to double
  %call98 = tail call double @sqrt(double %conv97) #2
  %div99 = fdiv double 1.000000e+00, %call98
  %conv100 = fptrunc double %div99 to float
  %conv101 = fpext float %add95 to double
  %call102 = tail call double @sqrt(double %conv101) #2
  %div103 = fdiv double 1.000000e+00, %call102
  %conv104 = fptrunc double %div103 to float
  %mul105 = fmul float %conv96, %conv96
  %idxprom106 = sext i32 %20 to i64
  %arrayidx107 = getelementptr inbounds float* %charge, i64 %idxprom106
  %24 = load float* %arrayidx107, align 4, !tbaa !3
  %mul108 = fmul float %mul, %24
  %mul109 = fmul float %conv96, %mul108
  %mul110 = fmul float %mul105, %mul109
  %add111 = fadd float %vctot.0465, %mul109
  %mul112 = fmul float %sub, %mul110
  %mul113 = fmul float %sub73, %mul110
  %mul114 = fmul float %sub74, %mul110
  %add115 = fadd float %fix1.0464, %mul112
  %add116 = fadd float %fiy1.0463, %mul113
  %add117 = fadd float %fiz1.0462, %mul114
  %arrayidx119 = getelementptr inbounds float* %faction, i64 %idxprom65
  %25 = load float* %arrayidx119, align 4, !tbaa !3
  %sub120 = fsub float %25, %mul112
  %arrayidx123 = getelementptr inbounds float* %faction, i64 %idxprom68
  %26 = load float* %arrayidx123, align 4, !tbaa !3
  %sub124 = fsub float %26, %mul113
  %arrayidx127 = getelementptr inbounds float* %faction, i64 %idxprom71
  %27 = load float* %arrayidx127, align 4, !tbaa !3
  %sub128 = fsub float %27, %mul114
  %mul129 = fmul float %conv100, %conv100
  %mul132 = fmul float %mul4, %24
  %mul133 = fmul float %conv100, %mul132
  %mul134 = fmul float %mul129, %mul133
  %add135 = fadd float %mul133, %add111
  %mul136 = fmul float %sub80, %mul134
  %mul137 = fmul float %sub81, %mul134
  %mul138 = fmul float %sub82, %mul134
  %add139 = fadd float %fix2.0461, %mul136
  %add140 = fadd float %fiy2.0460, %mul137
  %add141 = fadd float %fiz2.0459, %mul138
  %sub142 = fsub float %sub120, %mul136
  %sub143 = fsub float %sub124, %mul137
  %sub144 = fsub float %sub128, %mul138
  %mul145 = fmul float %conv104, %conv104
  %mul149 = fmul float %conv104, %mul132
  %mul150 = fmul float %mul145, %mul149
  %add151 = fadd float %mul149, %add135
  %mul152 = fmul float %sub88, %mul150
  %mul153 = fmul float %sub89, %mul150
  %mul154 = fmul float %sub90, %mul150
  %add155 = fadd float %fix3.0458, %mul152
  %add156 = fadd float %fiy3.0457, %mul153
  %add157 = fadd float %fiz3.0456, %mul154
  %sub158 = fsub float %sub142, %mul152
  store float %sub158, float* %arrayidx119, align 4, !tbaa !3
  %sub161 = fsub float %sub143, %mul153
  store float %sub161, float* %arrayidx123, align 4, !tbaa !3
  %sub165 = fsub float %sub144, %mul154
  store float %sub165, float* %arrayidx127, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %28 = trunc i64 %indvars.iv.next to i32
  %cmp60 = icmp slt i32 %28, %9
  br i1 %cmp60, label %for.body61, label %for.end

for.end:                                          ; preds = %for.body61, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add151, %for.body61 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add115, %for.body61 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add116, %for.body61 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add117, %for.body61 ]
  %fix2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add139, %for.body61 ]
  %fiy2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add140, %for.body61 ]
  %fiz2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add141, %for.body61 ]
  %fix3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add155, %for.body61 ]
  %fiy3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add156, %for.body61 ]
  %fiz3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add157, %for.body61 ]
  %arrayidx170 = getelementptr inbounds float* %faction, i64 %idxprom24
  %29 = load float* %arrayidx170, align 4, !tbaa !3
  %add171 = fadd float %fix1.0.lcssa, %29
  store float %add171, float* %arrayidx170, align 4, !tbaa !3
  %arrayidx176 = getelementptr inbounds float* %faction, i64 %idxprom28
  %30 = load float* %arrayidx176, align 4, !tbaa !3
  %add177 = fadd float %fiy1.0.lcssa, %30
  store float %add177, float* %arrayidx176, align 4, !tbaa !3
  %arrayidx183 = getelementptr inbounds float* %faction, i64 %idxprom32
  %31 = load float* %arrayidx183, align 4, !tbaa !3
  %add184 = fadd float %fiz1.0.lcssa, %31
  store float %add184, float* %arrayidx183, align 4, !tbaa !3
  %arrayidx190 = getelementptr inbounds float* %faction, i64 %idxprom36
  %32 = load float* %arrayidx190, align 4, !tbaa !3
  %add191 = fadd float %fix2.0.lcssa, %32
  store float %add191, float* %arrayidx190, align 4, !tbaa !3
  %arrayidx197 = getelementptr inbounds float* %faction, i64 %idxprom40
  %33 = load float* %arrayidx197, align 4, !tbaa !3
  %add198 = fadd float %fiy2.0.lcssa, %33
  store float %add198, float* %arrayidx197, align 4, !tbaa !3
  %arrayidx204 = getelementptr inbounds float* %faction, i64 %idxprom44
  %34 = load float* %arrayidx204, align 4, !tbaa !3
  %add205 = fadd float %fiz2.0.lcssa, %34
  store float %add205, float* %arrayidx204, align 4, !tbaa !3
  %arrayidx211 = getelementptr inbounds float* %faction, i64 %idxprom48
  %35 = load float* %arrayidx211, align 4, !tbaa !3
  %add212 = fadd float %fix3.0.lcssa, %35
  store float %add212, float* %arrayidx211, align 4, !tbaa !3
  %arrayidx218 = getelementptr inbounds float* %faction, i64 %idxprom52
  %36 = load float* %arrayidx218, align 4, !tbaa !3
  %add219 = fadd float %fiy3.0.lcssa, %36
  store float %add219, float* %arrayidx218, align 4, !tbaa !3
  %arrayidx225 = getelementptr inbounds float* %faction, i64 %idxprom56
  %37 = load float* %arrayidx225, align 4, !tbaa !3
  %add226 = fadd float %fiz3.0.lcssa, %37
  store float %add226, float* %arrayidx225, align 4, !tbaa !3
  %arrayidx231 = getelementptr inbounds float* %fshift, i64 %idxprom8
  %38 = load float* %arrayidx231, align 4, !tbaa !3
  %add232 = fadd float %fix1.0.lcssa, %38
  %add233 = fadd float %fix2.0.lcssa, %add232
  %add234 = fadd float %fix3.0.lcssa, %add233
  store float %add234, float* %arrayidx231, align 4, !tbaa !3
  %arrayidx239 = getelementptr inbounds float* %fshift, i64 %idxprom11
  %39 = load float* %arrayidx239, align 4, !tbaa !3
  %add240 = fadd float %fiy1.0.lcssa, %39
  %add241 = fadd float %fiy2.0.lcssa, %add240
  %add242 = fadd float %fiy3.0.lcssa, %add241
  store float %add242, float* %arrayidx239, align 4, !tbaa !3
  %arrayidx248 = getelementptr inbounds float* %fshift, i64 %idxprom14
  %40 = load float* %arrayidx248, align 4, !tbaa !3
  %add249 = fadd float %fiz1.0.lcssa, %40
  %add250 = fadd float %fiz2.0.lcssa, %add249
  %add251 = fadd float %fiz3.0.lcssa, %add250
  store float %add251, float* %arrayidx248, align 4, !tbaa !3
  %arrayidx256 = getelementptr inbounds i32* %gid, i64 %indvars.iv478
  %41 = load i32* %arrayidx256, align 4, !tbaa !0
  %idxprom257 = sext i32 %41 to i64
  %arrayidx258 = getelementptr inbounds float* %Vc, i64 %idxprom257
  %42 = load float* %arrayidx258, align 4, !tbaa !3
  %add259 = fadd float %vctot.0.lcssa, %42
  store float %add259, float* %arrayidx258, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next479 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end264, label %for.end.for.body_crit_edge

for.end.for.body_crit_edge:                       ; preds = %for.end
  %arrayidx17.phi.trans.insert = getelementptr inbounds i32* %iinr, i64 %indvars.iv.next479
  %.pre = load i32* %arrayidx17.phi.trans.insert, align 4, !tbaa !0
  br label %for.body

for.end264:                                       ; preds = %for.end, %entry
  ret void
}
