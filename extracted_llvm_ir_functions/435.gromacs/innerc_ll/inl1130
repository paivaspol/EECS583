define void @inl1130(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb) #0 {
entry:
  %0 = load i32* %iinr, align 4, !tbaa !0
  %idxprom = sext i32 %0 to i64
  %arrayidx1 = getelementptr inbounds float* %charge, i64 %idxprom
  %1 = load float* %arrayidx1, align 4, !tbaa !3
  %add = add nsw i32 %0, 1
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds float* %charge, i64 %idxprom2
  %2 = load float* %arrayidx3, align 4, !tbaa !3
  %mul = fmul float %1, %facel
  %mul4 = fmul float %1, %mul
  %mul6 = fmul float %mul, %2
  %mul7 = fmul float %2, %facel
  %mul8 = fmul float %2, %mul7
  %mul9 = shl i32 %ntype, 1
  %arrayidx11 = getelementptr inbounds i32* %type, i64 %idxprom
  %3 = load i32* %arrayidx11, align 4, !tbaa !0
  %mul12 = mul nsw i32 %mul9, %3
  %mul15 = shl nsw i32 %3, 1
  %add16 = add nsw i32 %mul12, %mul15
  %idxprom17 = sext i32 %add16 to i64
  %arrayidx18 = getelementptr inbounds float* %nbfp, i64 %idxprom17
  %4 = load float* %arrayidx18, align 4, !tbaa !3
  %add19885 = or i32 %add16, 1
  %idxprom20 = sext i32 %add19885 to i64
  %arrayidx21 = getelementptr inbounds float* %nbfp, i64 %idxprom20
  %5 = load float* %arrayidx21, align 4, !tbaa !3
  %cmp909 = icmp sgt i32 %nri, 0
  br i1 %cmp909, label %for.body, label %for.end492

for.body:                                         ; preds = %entry, %for.end.for.body_crit_edge
  %6 = phi i32 [ %.pre, %for.end.for.body_crit_edge ], [ %0, %entry ]
  %indvars.iv911 = phi i64 [ %indvars.iv.next912, %for.end.for.body_crit_edge ], [ 0, %entry ]
  %arrayidx23 = getelementptr inbounds i32* %shift, i64 %indvars.iv911
  %7 = load i32* %arrayidx23, align 4, !tbaa !0
  %mul24 = mul nsw i32 %7, 3
  %idxprom25 = sext i32 %mul24 to i64
  %arrayidx26 = getelementptr inbounds float* %shiftvec, i64 %idxprom25
  %8 = load float* %arrayidx26, align 4, !tbaa !3
  %add27 = add nsw i32 %mul24, 1
  %idxprom28 = sext i32 %add27 to i64
  %arrayidx29 = getelementptr inbounds float* %shiftvec, i64 %idxprom28
  %9 = load float* %arrayidx29, align 4, !tbaa !3
  %add30 = add nsw i32 %mul24, 2
  %idxprom31 = sext i32 %add30 to i64
  %arrayidx32 = getelementptr inbounds float* %shiftvec, i64 %idxprom31
  %10 = load float* %arrayidx32, align 4, !tbaa !3
  %mul35 = mul nsw i32 %6, 3
  %arrayidx37 = getelementptr inbounds i32* %jindex, i64 %indvars.iv911
  %11 = load i32* %arrayidx37, align 4, !tbaa !0
  %indvars.iv.next912 = add i64 %indvars.iv911, 1
  %arrayidx40 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next912
  %12 = load i32* %arrayidx40, align 4, !tbaa !0
  %idxprom41 = sext i32 %mul35 to i64
  %arrayidx42 = getelementptr inbounds float* %pos, i64 %idxprom41
  %13 = load float* %arrayidx42, align 4, !tbaa !3
  %add43 = fadd float %8, %13
  %add44 = add nsw i32 %mul35, 1
  %idxprom45 = sext i32 %add44 to i64
  %arrayidx46 = getelementptr inbounds float* %pos, i64 %idxprom45
  %14 = load float* %arrayidx46, align 4, !tbaa !3
  %add47 = fadd float %9, %14
  %add48 = add nsw i32 %mul35, 2
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds float* %pos, i64 %idxprom49
  %15 = load float* %arrayidx50, align 4, !tbaa !3
  %add51 = fadd float %10, %15
  %add52 = add nsw i32 %mul35, 3
  %idxprom53 = sext i32 %add52 to i64
  %arrayidx54 = getelementptr inbounds float* %pos, i64 %idxprom53
  %16 = load float* %arrayidx54, align 4, !tbaa !3
  %add55 = fadd float %8, %16
  %add56 = add nsw i32 %mul35, 4
  %idxprom57 = sext i32 %add56 to i64
  %arrayidx58 = getelementptr inbounds float* %pos, i64 %idxprom57
  %17 = load float* %arrayidx58, align 4, !tbaa !3
  %add59 = fadd float %9, %17
  %add60 = add nsw i32 %mul35, 5
  %idxprom61 = sext i32 %add60 to i64
  %arrayidx62 = getelementptr inbounds float* %pos, i64 %idxprom61
  %18 = load float* %arrayidx62, align 4, !tbaa !3
  %add63 = fadd float %10, %18
  %add64 = add nsw i32 %mul35, 6
  %idxprom65 = sext i32 %add64 to i64
  %arrayidx66 = getelementptr inbounds float* %pos, i64 %idxprom65
  %19 = load float* %arrayidx66, align 4, !tbaa !3
  %add67 = fadd float %8, %19
  %add68 = add nsw i32 %mul35, 7
  %idxprom69 = sext i32 %add68 to i64
  %arrayidx70 = getelementptr inbounds float* %pos, i64 %idxprom69
  %20 = load float* %arrayidx70, align 4, !tbaa !3
  %add71 = fadd float %9, %20
  %add72 = add nsw i32 %mul35, 8
  %idxprom73 = sext i32 %add72 to i64
  %arrayidx74 = getelementptr inbounds float* %pos, i64 %idxprom73
  %21 = load float* %arrayidx74, align 4, !tbaa !3
  %add75 = fadd float %10, %21
  %cmp77886 = icmp slt i32 %11, %12
  br i1 %cmp77886, label %for.body78.lr.ph, label %for.end

for.body78.lr.ph:                                 ; preds = %for.body
  %22 = sext i32 %11 to i64
  br label %for.body78

for.body78:                                       ; preds = %for.body78.lr.ph, %for.body78
  %indvars.iv = phi i64 [ %22, %for.body78.lr.ph ], [ %indvars.iv.next, %for.body78 ]
  %vctot.0897 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add373, %for.body78 ]
  %vnbtot.0896 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %sub219, %for.body78 ]
  %fix1.0895 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add273, %for.body78 ]
  %fiy1.0894 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add274, %for.body78 ]
  %fiz1.0893 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add275, %for.body78 ]
  %fix2.0892 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add321, %for.body78 ]
  %fiy2.0891 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add322, %for.body78 ]
  %fiz2.0890 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add323, %for.body78 ]
  %fix3.0889 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add377, %for.body78 ]
  %fiy3.0888 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add378, %for.body78 ]
  %fiz3.0887 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add379, %for.body78 ]
  %arrayidx80 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %23 = load i32* %arrayidx80, align 4, !tbaa !0
  %mul81 = mul nsw i32 %23, 3
  %idxprom82 = sext i32 %mul81 to i64
  %arrayidx83 = getelementptr inbounds float* %pos, i64 %idxprom82
  %24 = load float* %arrayidx83, align 4, !tbaa !3
  %add84 = add nsw i32 %mul81, 1
  %idxprom85 = sext i32 %add84 to i64
  %arrayidx86 = getelementptr inbounds float* %pos, i64 %idxprom85
  %25 = load float* %arrayidx86, align 4, !tbaa !3
  %add87 = add nsw i32 %mul81, 2
  %idxprom88 = sext i32 %add87 to i64
  %arrayidx89 = getelementptr inbounds float* %pos, i64 %idxprom88
  %26 = load float* %arrayidx89, align 4, !tbaa !3
  %add90 = add nsw i32 %mul81, 3
  %idxprom91 = sext i32 %add90 to i64
  %arrayidx92 = getelementptr inbounds float* %pos, i64 %idxprom91
  %27 = load float* %arrayidx92, align 4, !tbaa !3
  %add93 = add nsw i32 %mul81, 4
  %idxprom94 = sext i32 %add93 to i64
  %arrayidx95 = getelementptr inbounds float* %pos, i64 %idxprom94
  %28 = load float* %arrayidx95, align 4, !tbaa !3
  %add96 = add nsw i32 %mul81, 5
  %idxprom97 = sext i32 %add96 to i64
  %arrayidx98 = getelementptr inbounds float* %pos, i64 %idxprom97
  %29 = load float* %arrayidx98, align 4, !tbaa !3
  %add99 = add nsw i32 %mul81, 6
  %idxprom100 = sext i32 %add99 to i64
  %arrayidx101 = getelementptr inbounds float* %pos, i64 %idxprom100
  %30 = load float* %arrayidx101, align 4, !tbaa !3
  %add102 = add nsw i32 %mul81, 7
  %idxprom103 = sext i32 %add102 to i64
  %arrayidx104 = getelementptr inbounds float* %pos, i64 %idxprom103
  %31 = load float* %arrayidx104, align 4, !tbaa !3
  %add105 = add nsw i32 %mul81, 8
  %idxprom106 = sext i32 %add105 to i64
  %arrayidx107 = getelementptr inbounds float* %pos, i64 %idxprom106
  %32 = load float* %arrayidx107, align 4, !tbaa !3
  %sub = fsub float %add43, %24
  %sub108 = fsub float %add47, %25
  %sub109 = fsub float %add51, %26
  %mul110 = fmul float %sub, %sub
  %mul111 = fmul float %sub108, %sub108
  %add112 = fadd float %mul110, %mul111
  %mul113 = fmul float %sub109, %sub109
  %add114 = fadd float %add112, %mul113
  %sub115 = fsub float %add43, %27
  %sub116 = fsub float %add47, %28
  %sub117 = fsub float %add51, %29
  %mul118 = fmul float %sub115, %sub115
  %mul119 = fmul float %sub116, %sub116
  %add120 = fadd float %mul118, %mul119
  %mul121 = fmul float %sub117, %sub117
  %add122 = fadd float %add120, %mul121
  %sub123 = fsub float %add43, %30
  %sub124 = fsub float %add47, %31
  %sub125 = fsub float %add51, %32
  %mul126 = fmul float %sub123, %sub123
  %mul127 = fmul float %sub124, %sub124
  %add128 = fadd float %mul126, %mul127
  %mul129 = fmul float %sub125, %sub125
  %add130 = fadd float %add128, %mul129
  %sub131 = fsub float %add55, %24
  %sub132 = fsub float %add59, %25
  %sub133 = fsub float %add63, %26
  %mul134 = fmul float %sub131, %sub131
  %mul135 = fmul float %sub132, %sub132
  %add136 = fadd float %mul134, %mul135
  %mul137 = fmul float %sub133, %sub133
  %add138 = fadd float %add136, %mul137
  %sub139 = fsub float %add55, %27
  %sub140 = fsub float %add59, %28
  %sub141 = fsub float %add63, %29
  %mul142 = fmul float %sub139, %sub139
  %mul143 = fmul float %sub140, %sub140
  %add144 = fadd float %mul142, %mul143
  %mul145 = fmul float %sub141, %sub141
  %add146 = fadd float %add144, %mul145
  %sub147 = fsub float %add55, %30
  %sub148 = fsub float %add59, %31
  %sub149 = fsub float %add63, %32
  %mul150 = fmul float %sub147, %sub147
  %mul151 = fmul float %sub148, %sub148
  %add152 = fadd float %mul150, %mul151
  %mul153 = fmul float %sub149, %sub149
  %add154 = fadd float %add152, %mul153
  %sub155 = fsub float %add67, %24
  %sub156 = fsub float %add71, %25
  %sub157 = fsub float %add75, %26
  %mul158 = fmul float %sub155, %sub155
  %mul159 = fmul float %sub156, %sub156
  %add160 = fadd float %mul158, %mul159
  %mul161 = fmul float %sub157, %sub157
  %add162 = fadd float %add160, %mul161
  %sub163 = fsub float %add67, %27
  %sub164 = fsub float %add71, %28
  %sub165 = fsub float %add75, %29
  %mul166 = fmul float %sub163, %sub163
  %mul167 = fmul float %sub164, %sub164
  %add168 = fadd float %mul166, %mul167
  %mul169 = fmul float %sub165, %sub165
  %add170 = fadd float %add168, %mul169
  %sub171 = fsub float %add67, %30
  %sub172 = fsub float %add71, %31
  %sub173 = fsub float %add75, %32
  %mul174 = fmul float %sub171, %sub171
  %mul175 = fmul float %sub172, %sub172
  %add176 = fadd float %mul174, %mul175
  %mul177 = fmul float %sub173, %sub173
  %add178 = fadd float %add176, %mul177
  %conv = fpext float %add114 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv179 = fptrunc double %div to float
  %conv180 = fpext float %add138 to double
  %call181 = tail call double @sqrt(double %conv180) #2
  %div182 = fdiv double 1.000000e+00, %call181
  %conv183 = fptrunc double %div182 to float
  %conv184 = fpext float %add162 to double
  %call185 = tail call double @sqrt(double %conv184) #2
  %div186 = fdiv double 1.000000e+00, %call185
  %conv187 = fptrunc double %div186 to float
  %conv188 = fpext float %add122 to double
  %call189 = tail call double @sqrt(double %conv188) #2
  %div190 = fdiv double 1.000000e+00, %call189
  %conv191 = fptrunc double %div190 to float
  %conv192 = fpext float %add146 to double
  %call193 = tail call double @sqrt(double %conv192) #2
  %div194 = fdiv double 1.000000e+00, %call193
  %conv195 = fptrunc double %div194 to float
  %conv196 = fpext float %add170 to double
  %call197 = tail call double @sqrt(double %conv196) #2
  %div198 = fdiv double 1.000000e+00, %call197
  %conv199 = fptrunc double %div198 to float
  %conv200 = fpext float %add130 to double
  %call201 = tail call double @sqrt(double %conv200) #2
  %div202 = fdiv double 1.000000e+00, %call201
  %conv203 = fptrunc double %div202 to float
  %conv204 = fpext float %add154 to double
  %call205 = tail call double @sqrt(double %conv204) #2
  %div206 = fdiv double 1.000000e+00, %call205
  %conv207 = fptrunc double %div206 to float
  %conv208 = fpext float %add178 to double
  %call209 = tail call double @sqrt(double %conv208) #2
  %div210 = fdiv double 1.000000e+00, %call209
  %conv211 = fptrunc double %div210 to float
  %mul212 = fmul float %conv179, %conv179
  %mul213 = fmul float %mul212, %mul212
  %mul214 = fmul float %mul212, %mul213
  %mul215 = fmul float %4, %mul214
  %mul216 = fmul float %5, %mul214
  %mul217 = fmul float %mul214, %mul216
  %add218 = fadd float %vnbtot.0896, %mul217
  %sub219 = fsub float %add218, %mul215
  %mul220 = fmul float %mul4, %conv179
  %mul221 = fmul float %mul217, 1.200000e+01
  %mul222 = fmul float %mul215, 6.000000e+00
  %sub223 = fsub float %mul221, %mul222
  %add224 = fadd float %mul220, %sub223
  %mul225 = fmul float %mul212, %add224
  %add226 = fadd float %vctot.0897, %mul220
  %mul227 = fmul float %sub, %mul225
  %mul228 = fmul float %sub108, %mul225
  %mul229 = fmul float %sub109, %mul225
  %add230 = fadd float %fix1.0895, %mul227
  %add231 = fadd float %fiy1.0894, %mul228
  %add232 = fadd float %fiz1.0893, %mul229
  %arrayidx234 = getelementptr inbounds float* %faction, i64 %idxprom82
  %33 = load float* %arrayidx234, align 4, !tbaa !3
  %sub235 = fsub float %33, %mul227
  %arrayidx238 = getelementptr inbounds float* %faction, i64 %idxprom85
  %34 = load float* %arrayidx238, align 4, !tbaa !3
  %sub239 = fsub float %34, %mul228
  %arrayidx242 = getelementptr inbounds float* %faction, i64 %idxprom88
  %35 = load float* %arrayidx242, align 4, !tbaa !3
  %sub243 = fsub float %35, %mul229
  %mul244 = fmul float %conv191, %conv191
  %mul245 = fmul float %mul6, %conv191
  %mul246 = fmul float %mul245, %mul244
  %add247 = fadd float %add226, %mul245
  %mul248 = fmul float %sub115, %mul246
  %mul249 = fmul float %sub116, %mul246
  %mul250 = fmul float %sub117, %mul246
  %add251 = fadd float %mul248, %add230
  %add252 = fadd float %mul249, %add231
  %add253 = fadd float %mul250, %add232
  %arrayidx256 = getelementptr inbounds float* %faction, i64 %idxprom91
  %36 = load float* %arrayidx256, align 4, !tbaa !3
  %sub257 = fsub float %36, %mul248
  %arrayidx260 = getelementptr inbounds float* %faction, i64 %idxprom94
  %37 = load float* %arrayidx260, align 4, !tbaa !3
  %sub261 = fsub float %37, %mul249
  %arrayidx264 = getelementptr inbounds float* %faction, i64 %idxprom97
  %38 = load float* %arrayidx264, align 4, !tbaa !3
  %sub265 = fsub float %38, %mul250
  %mul266 = fmul float %conv203, %conv203
  %mul267 = fmul float %mul6, %conv203
  %mul268 = fmul float %mul267, %mul266
  %add269 = fadd float %add247, %mul267
  %mul270 = fmul float %sub123, %mul268
  %mul271 = fmul float %sub124, %mul268
  %mul272 = fmul float %sub125, %mul268
  %add273 = fadd float %add251, %mul270
  %add274 = fadd float %add252, %mul271
  %add275 = fadd float %add253, %mul272
  %arrayidx278 = getelementptr inbounds float* %faction, i64 %idxprom100
  %39 = load float* %arrayidx278, align 4, !tbaa !3
  %sub279 = fsub float %39, %mul270
  %arrayidx282 = getelementptr inbounds float* %faction, i64 %idxprom103
  %40 = load float* %arrayidx282, align 4, !tbaa !3
  %sub283 = fsub float %40, %mul271
  %arrayidx286 = getelementptr inbounds float* %faction, i64 %idxprom106
  %41 = load float* %arrayidx286, align 4, !tbaa !3
  %sub287 = fsub float %41, %mul272
  %mul288 = fmul float %conv183, %conv183
  %mul289 = fmul float %mul6, %conv183
  %mul290 = fmul float %mul289, %mul288
  %add291 = fadd float %mul289, %add269
  %mul292 = fmul float %sub131, %mul290
  %mul293 = fmul float %sub132, %mul290
  %mul294 = fmul float %sub133, %mul290
  %add295 = fadd float %fix2.0892, %mul292
  %add296 = fadd float %fiy2.0891, %mul293
  %add297 = fadd float %fiz2.0890, %mul294
  %sub298 = fsub float %sub235, %mul292
  %sub299 = fsub float %sub239, %mul293
  %sub300 = fsub float %sub243, %mul294
  %mul301 = fmul float %conv195, %conv195
  %mul302 = fmul float %mul8, %conv195
  %mul303 = fmul float %mul302, %mul301
  %add304 = fadd float %mul302, %add291
  %mul305 = fmul float %sub139, %mul303
  %mul306 = fmul float %sub140, %mul303
  %mul307 = fmul float %sub141, %mul303
  %add308 = fadd float %add295, %mul305
  %add309 = fadd float %add296, %mul306
  %add310 = fadd float %add297, %mul307
  %sub311 = fsub float %sub257, %mul305
  %sub312 = fsub float %sub261, %mul306
  %sub313 = fsub float %sub265, %mul307
  %mul314 = fmul float %conv207, %conv207
  %mul315 = fmul float %mul8, %conv207
  %mul316 = fmul float %mul315, %mul314
  %add317 = fadd float %mul315, %add304
  %mul318 = fmul float %sub147, %mul316
  %mul319 = fmul float %sub148, %mul316
  %mul320 = fmul float %sub149, %mul316
  %add321 = fadd float %add308, %mul318
  %add322 = fadd float %add309, %mul319
  %add323 = fadd float %add310, %mul320
  %sub324 = fsub float %sub279, %mul318
  %sub325 = fsub float %sub283, %mul319
  %sub326 = fsub float %sub287, %mul320
  %mul327 = fmul float %conv187, %conv187
  %mul328 = fmul float %mul6, %conv187
  %mul329 = fmul float %mul328, %mul327
  %add330 = fadd float %mul328, %add317
  %mul331 = fmul float %sub155, %mul329
  %mul332 = fmul float %sub156, %mul329
  %mul333 = fmul float %sub157, %mul329
  %add334 = fadd float %fix3.0889, %mul331
  %add335 = fadd float %fiy3.0888, %mul332
  %add336 = fadd float %fiz3.0887, %mul333
  %sub337 = fsub float %sub298, %mul331
  store float %sub337, float* %arrayidx234, align 4, !tbaa !3
  %sub340 = fsub float %sub299, %mul332
  store float %sub340, float* %arrayidx238, align 4, !tbaa !3
  %sub344 = fsub float %sub300, %mul333
  store float %sub344, float* %arrayidx242, align 4, !tbaa !3
  %mul348 = fmul float %conv199, %conv199
  %mul349 = fmul float %mul8, %conv199
  %mul350 = fmul float %mul349, %mul348
  %add351 = fadd float %mul349, %add330
  %mul352 = fmul float %sub163, %mul350
  %mul353 = fmul float %sub164, %mul350
  %mul354 = fmul float %sub165, %mul350
  %add355 = fadd float %add334, %mul352
  %add356 = fadd float %add335, %mul353
  %add357 = fadd float %add336, %mul354
  %sub358 = fsub float %sub311, %mul352
  store float %sub358, float* %arrayidx256, align 4, !tbaa !3
  %sub362 = fsub float %sub312, %mul353
  store float %sub362, float* %arrayidx260, align 4, !tbaa !3
  %sub366 = fsub float %sub313, %mul354
  store float %sub366, float* %arrayidx264, align 4, !tbaa !3
  %mul370 = fmul float %conv211, %conv211
  %mul371 = fmul float %mul8, %conv211
  %mul372 = fmul float %mul371, %mul370
  %add373 = fadd float %mul371, %add351
  %mul374 = fmul float %sub171, %mul372
  %mul375 = fmul float %sub172, %mul372
  %mul376 = fmul float %sub173, %mul372
  %add377 = fadd float %add355, %mul374
  %add378 = fadd float %add356, %mul375
  %add379 = fadd float %add357, %mul376
  %sub380 = fsub float %sub324, %mul374
  store float %sub380, float* %arrayidx278, align 4, !tbaa !3
  %sub384 = fsub float %sub325, %mul375
  store float %sub384, float* %arrayidx282, align 4, !tbaa !3
  %sub388 = fsub float %sub326, %mul376
  store float %sub388, float* %arrayidx286, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %42 = trunc i64 %indvars.iv.next to i32
  %cmp77 = icmp slt i32 %42, %12
  br i1 %cmp77, label %for.body78, label %for.end

for.end:                                          ; preds = %for.body78, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add373, %for.body78 ]
  %vnbtot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %sub219, %for.body78 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add273, %for.body78 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add274, %for.body78 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add275, %for.body78 ]
  %fix2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add321, %for.body78 ]
  %fiy2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add322, %for.body78 ]
  %fiz2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add323, %for.body78 ]
  %fix3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add377, %for.body78 ]
  %fiy3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add378, %for.body78 ]
  %fiz3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add379, %for.body78 ]
  %arrayidx393 = getelementptr inbounds float* %faction, i64 %idxprom41
  %43 = load float* %arrayidx393, align 4, !tbaa !3
  %add394 = fadd float %fix1.0.lcssa, %43
  store float %add394, float* %arrayidx393, align 4, !tbaa !3
  %arrayidx399 = getelementptr inbounds float* %faction, i64 %idxprom45
  %44 = load float* %arrayidx399, align 4, !tbaa !3
  %add400 = fadd float %fiy1.0.lcssa, %44
  store float %add400, float* %arrayidx399, align 4, !tbaa !3
  %arrayidx406 = getelementptr inbounds float* %faction, i64 %idxprom49
  %45 = load float* %arrayidx406, align 4, !tbaa !3
  %add407 = fadd float %fiz1.0.lcssa, %45
  store float %add407, float* %arrayidx406, align 4, !tbaa !3
  %arrayidx413 = getelementptr inbounds float* %faction, i64 %idxprom53
  %46 = load float* %arrayidx413, align 4, !tbaa !3
  %add414 = fadd float %fix2.0.lcssa, %46
  store float %add414, float* %arrayidx413, align 4, !tbaa !3
  %arrayidx420 = getelementptr inbounds float* %faction, i64 %idxprom57
  %47 = load float* %arrayidx420, align 4, !tbaa !3
  %add421 = fadd float %fiy2.0.lcssa, %47
  store float %add421, float* %arrayidx420, align 4, !tbaa !3
  %arrayidx427 = getelementptr inbounds float* %faction, i64 %idxprom61
  %48 = load float* %arrayidx427, align 4, !tbaa !3
  %add428 = fadd float %fiz2.0.lcssa, %48
  store float %add428, float* %arrayidx427, align 4, !tbaa !3
  %arrayidx434 = getelementptr inbounds float* %faction, i64 %idxprom65
  %49 = load float* %arrayidx434, align 4, !tbaa !3
  %add435 = fadd float %fix3.0.lcssa, %49
  store float %add435, float* %arrayidx434, align 4, !tbaa !3
  %arrayidx441 = getelementptr inbounds float* %faction, i64 %idxprom69
  %50 = load float* %arrayidx441, align 4, !tbaa !3
  %add442 = fadd float %fiy3.0.lcssa, %50
  store float %add442, float* %arrayidx441, align 4, !tbaa !3
  %arrayidx448 = getelementptr inbounds float* %faction, i64 %idxprom73
  %51 = load float* %arrayidx448, align 4, !tbaa !3
  %add449 = fadd float %fiz3.0.lcssa, %51
  store float %add449, float* %arrayidx448, align 4, !tbaa !3
  %arrayidx454 = getelementptr inbounds float* %fshift, i64 %idxprom25
  %52 = load float* %arrayidx454, align 4, !tbaa !3
  %add455 = fadd float %fix1.0.lcssa, %52
  %add456 = fadd float %fix2.0.lcssa, %add455
  %add457 = fadd float %fix3.0.lcssa, %add456
  store float %add457, float* %arrayidx454, align 4, !tbaa !3
  %arrayidx462 = getelementptr inbounds float* %fshift, i64 %idxprom28
  %53 = load float* %arrayidx462, align 4, !tbaa !3
  %add463 = fadd float %fiy1.0.lcssa, %53
  %add464 = fadd float %fiy2.0.lcssa, %add463
  %add465 = fadd float %fiy3.0.lcssa, %add464
  store float %add465, float* %arrayidx462, align 4, !tbaa !3
  %arrayidx471 = getelementptr inbounds float* %fshift, i64 %idxprom31
  %54 = load float* %arrayidx471, align 4, !tbaa !3
  %add472 = fadd float %fiz1.0.lcssa, %54
  %add473 = fadd float %fiz2.0.lcssa, %add472
  %add474 = fadd float %fiz3.0.lcssa, %add473
  store float %add474, float* %arrayidx471, align 4, !tbaa !3
  %arrayidx479 = getelementptr inbounds i32* %gid, i64 %indvars.iv911
  %55 = load i32* %arrayidx479, align 4, !tbaa !0
  %idxprom480 = sext i32 %55 to i64
  %arrayidx481 = getelementptr inbounds float* %Vc, i64 %idxprom480
  %56 = load float* %arrayidx481, align 4, !tbaa !3
  %add482 = fadd float %vctot.0.lcssa, %56
  store float %add482, float* %arrayidx481, align 4, !tbaa !3
  %arrayidx486 = getelementptr inbounds float* %Vnb, i64 %idxprom480
  %57 = load float* %arrayidx486, align 4, !tbaa !3
  %add487 = fadd float %vnbtot.0.lcssa, %57
  store float %add487, float* %arrayidx486, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next912 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end492, label %for.end.for.body_crit_edge

for.end.for.body_crit_edge:                       ; preds = %for.end
  %arrayidx34.phi.trans.insert = getelementptr inbounds i32* %iinr, i64 %indvars.iv.next912
  %.pre = load i32* %arrayidx34.phi.trans.insert, align 4, !tbaa !0
  br label %for.body

for.end492:                                       ; preds = %for.end, %entry
  ret void
}
