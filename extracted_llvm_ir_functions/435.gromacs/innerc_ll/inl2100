define void @inl2100(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, float %krf, float %crf, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb) #0 {
entry:
  %cmp280 = icmp sgt i32 %nri, 0
  br i1 %cmp280, label %for.body.lr.ph, label %for.end166

for.body.lr.ph:                                   ; preds = %entry
  %mul30 = shl i32 %ntype, 1
  br label %for.body

for.body:                                         ; preds = %for.end, %for.body.lr.ph
  %indvars.iv282 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next283, %for.end ]
  %arrayidx = getelementptr inbounds i32* %shift, i64 %indvars.iv282
  %0 = load i32* %arrayidx, align 4, !tbaa !0
  %mul = mul nsw i32 %0, 3
  %idxprom1 = sext i32 %mul to i64
  %arrayidx2 = getelementptr inbounds float* %shiftvec, i64 %idxprom1
  %1 = load float* %arrayidx2, align 4, !tbaa !3
  %add = add nsw i32 %mul, 1
  %idxprom3 = sext i32 %add to i64
  %arrayidx4 = getelementptr inbounds float* %shiftvec, i64 %idxprom3
  %2 = load float* %arrayidx4, align 4, !tbaa !3
  %add5 = add nsw i32 %mul, 2
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds float* %shiftvec, i64 %idxprom6
  %3 = load float* %arrayidx7, align 4, !tbaa !3
  %arrayidx9 = getelementptr inbounds i32* %iinr, i64 %indvars.iv282
  %4 = load i32* %arrayidx9, align 4, !tbaa !0
  %mul10 = mul nsw i32 %4, 3
  %arrayidx12 = getelementptr inbounds i32* %jindex, i64 %indvars.iv282
  %5 = load i32* %arrayidx12, align 4, !tbaa !0
  %indvars.iv.next283 = add i64 %indvars.iv282, 1
  %arrayidx15 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next283
  %6 = load i32* %arrayidx15, align 4, !tbaa !0
  %idxprom16 = sext i32 %mul10 to i64
  %arrayidx17 = getelementptr inbounds float* %pos, i64 %idxprom16
  %7 = load float* %arrayidx17, align 4, !tbaa !3
  %add18 = fadd float %1, %7
  %add19 = add nsw i32 %mul10, 1
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds float* %pos, i64 %idxprom20
  %8 = load float* %arrayidx21, align 4, !tbaa !3
  %add22 = fadd float %2, %8
  %add23 = add nsw i32 %mul10, 2
  %idxprom24 = sext i32 %add23 to i64
  %arrayidx25 = getelementptr inbounds float* %pos, i64 %idxprom24
  %9 = load float* %arrayidx25, align 4, !tbaa !3
  %add26 = fadd float %3, %9
  %idxprom27 = sext i32 %4 to i64
  %arrayidx28 = getelementptr inbounds float* %charge, i64 %idxprom27
  %10 = load float* %arrayidx28, align 4, !tbaa !3
  %mul29 = fmul float %10, %facel
  %arrayidx32 = getelementptr inbounds i32* %type, i64 %idxprom27
  %11 = load i32* %arrayidx32, align 4, !tbaa !0
  %mul33 = mul nsw i32 %mul30, %11
  %cmp35269 = icmp slt i32 %5, %6
  br i1 %cmp35269, label %for.body36.lr.ph, label %for.end

for.body36.lr.ph:                                 ; preds = %for.body
  %12 = sext i32 %5 to i64
  br label %for.body36

for.body36:                                       ; preds = %for.body36.lr.ph, %for.body36
  %indvars.iv = phi i64 [ %12, %for.body36.lr.ph ], [ %indvars.iv.next, %for.body36 ]
  %vctot.0274 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add88, %for.body36 ]
  %vnbtot.0273 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %sub72, %for.body36 ]
  %fix1.0272 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add92, %for.body36 ]
  %fiy1.0271 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add93, %for.body36 ]
  %fiz1.0270 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add94, %for.body36 ]
  %arrayidx38 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %13 = load i32* %arrayidx38, align 4, !tbaa !0
  %mul39 = mul nsw i32 %13, 3
  %idxprom40 = sext i32 %mul39 to i64
  %arrayidx41 = getelementptr inbounds float* %pos, i64 %idxprom40
  %14 = load float* %arrayidx41, align 4, !tbaa !3
  %add42 = add nsw i32 %mul39, 1
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds float* %pos, i64 %idxprom43
  %15 = load float* %arrayidx44, align 4, !tbaa !3
  %add45 = add nsw i32 %mul39, 2
  %idxprom46 = sext i32 %add45 to i64
  %arrayidx47 = getelementptr inbounds float* %pos, i64 %idxprom46
  %16 = load float* %arrayidx47, align 4, !tbaa !3
  %sub = fsub float %add18, %14
  %sub48 = fsub float %add22, %15
  %sub49 = fsub float %add26, %16
  %mul50 = fmul float %sub, %sub
  %mul51 = fmul float %sub48, %sub48
  %add52 = fadd float %mul50, %mul51
  %mul53 = fmul float %sub49, %sub49
  %add54 = fadd float %add52, %mul53
  %conv = fpext float %add54 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv55 = fptrunc double %div to float
  %mul56 = fmul float %conv55, %conv55
  %mul57 = fmul float %mul56, %mul56
  %mul58 = fmul float %mul56, %mul57
  %idxprom59 = sext i32 %13 to i64
  %arrayidx60 = getelementptr inbounds i32* %type, i64 %idxprom59
  %17 = load i32* %arrayidx60, align 4, !tbaa !0
  %mul61 = shl nsw i32 %17, 1
  %add62 = add nsw i32 %mul61, %mul33
  %idxprom63 = sext i32 %add62 to i64
  %arrayidx64 = getelementptr inbounds float* %nbfp, i64 %idxprom63
  %18 = load float* %arrayidx64, align 4, !tbaa !3
  %mul65 = fmul float %18, %mul58
  %mul66 = fmul float %mul58, %mul58
  %add67268 = or i32 %add62, 1
  %idxprom68 = sext i32 %add67268 to i64
  %arrayidx69 = getelementptr inbounds float* %nbfp, i64 %idxprom68
  %19 = load float* %arrayidx69, align 4, !tbaa !3
  %mul70 = fmul float %19, %mul66
  %add71 = fadd float %vnbtot.0273, %mul70
  %sub72 = fsub float %add71, %mul65
  %arrayidx74 = getelementptr inbounds float* %charge, i64 %idxprom59
  %20 = load float* %arrayidx74, align 4, !tbaa !3
  %mul75 = fmul float %mul29, %20
  %mul76 = fmul float %add54, %krf
  %add77 = fadd float %conv55, %mul76
  %sub78 = fsub float %add77, %crf
  %mul79 = fmul float %sub78, %mul75
  %mul80 = fmul float %mul70, 1.200000e+01
  %mul81 = fmul float %mul65, 6.000000e+00
  %sub82 = fsub float %mul80, %mul81
  %mul83 = fmul float %mul76, 2.000000e+00
  %sub84 = fsub float %conv55, %mul83
  %mul85 = fmul float %sub84, %mul75
  %add86 = fadd float %mul85, %sub82
  %mul87 = fmul float %mul56, %add86
  %add88 = fadd float %vctot.0274, %mul79
  %mul89 = fmul float %sub, %mul87
  %mul90 = fmul float %sub48, %mul87
  %mul91 = fmul float %sub49, %mul87
  %add92 = fadd float %fix1.0272, %mul89
  %add93 = fadd float %fiy1.0271, %mul90
  %add94 = fadd float %fiz1.0270, %mul91
  %arrayidx96 = getelementptr inbounds float* %faction, i64 %idxprom40
  %21 = load float* %arrayidx96, align 4, !tbaa !3
  %sub97 = fsub float %21, %mul89
  store float %sub97, float* %arrayidx96, align 4, !tbaa !3
  %arrayidx102 = getelementptr inbounds float* %faction, i64 %idxprom43
  %22 = load float* %arrayidx102, align 4, !tbaa !3
  %sub103 = fsub float %22, %mul90
  store float %sub103, float* %arrayidx102, align 4, !tbaa !3
  %arrayidx109 = getelementptr inbounds float* %faction, i64 %idxprom46
  %23 = load float* %arrayidx109, align 4, !tbaa !3
  %sub110 = fsub float %23, %mul91
  store float %sub110, float* %arrayidx109, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %24 = trunc i64 %indvars.iv.next to i32
  %cmp35 = icmp slt i32 %24, %6
  br i1 %cmp35, label %for.body36, label %for.end

for.end:                                          ; preds = %for.body36, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add88, %for.body36 ]
  %vnbtot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %sub72, %for.body36 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add92, %for.body36 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add93, %for.body36 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add94, %for.body36 ]
  %arrayidx115 = getelementptr inbounds float* %faction, i64 %idxprom16
  %25 = load float* %arrayidx115, align 4, !tbaa !3
  %add116 = fadd float %fix1.0.lcssa, %25
  store float %add116, float* %arrayidx115, align 4, !tbaa !3
  %arrayidx121 = getelementptr inbounds float* %faction, i64 %idxprom20
  %26 = load float* %arrayidx121, align 4, !tbaa !3
  %add122 = fadd float %fiy1.0.lcssa, %26
  store float %add122, float* %arrayidx121, align 4, !tbaa !3
  %arrayidx128 = getelementptr inbounds float* %faction, i64 %idxprom24
  %27 = load float* %arrayidx128, align 4, !tbaa !3
  %add129 = fadd float %fiz1.0.lcssa, %27
  store float %add129, float* %arrayidx128, align 4, !tbaa !3
  %arrayidx134 = getelementptr inbounds float* %fshift, i64 %idxprom1
  %28 = load float* %arrayidx134, align 4, !tbaa !3
  %add135 = fadd float %fix1.0.lcssa, %28
  store float %add135, float* %arrayidx134, align 4, !tbaa !3
  %arrayidx140 = getelementptr inbounds float* %fshift, i64 %idxprom3
  %29 = load float* %arrayidx140, align 4, !tbaa !3
  %add141 = fadd float %fiy1.0.lcssa, %29
  store float %add141, float* %arrayidx140, align 4, !tbaa !3
  %arrayidx147 = getelementptr inbounds float* %fshift, i64 %idxprom6
  %30 = load float* %arrayidx147, align 4, !tbaa !3
  %add148 = fadd float %fiz1.0.lcssa, %30
  store float %add148, float* %arrayidx147, align 4, !tbaa !3
  %arrayidx153 = getelementptr inbounds i32* %gid, i64 %indvars.iv282
  %31 = load i32* %arrayidx153, align 4, !tbaa !0
  %idxprom154 = sext i32 %31 to i64
  %arrayidx155 = getelementptr inbounds float* %Vc, i64 %idxprom154
  %32 = load float* %arrayidx155, align 4, !tbaa !3
  %add156 = fadd float %vctot.0.lcssa, %32
  store float %add156, float* %arrayidx155, align 4, !tbaa !3
  %arrayidx160 = getelementptr inbounds float* %Vnb, i64 %idxprom154
  %33 = load float* %arrayidx160, align 4, !tbaa !3
  %add161 = fadd float %vnbtot.0.lcssa, %33
  store float %add161, float* %arrayidx160, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next283 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end166, label %for.body

for.end166:                                       ; preds = %for.end, %entry
  ret void
}
