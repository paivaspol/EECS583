define void @inl3120(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb, float %tabscale, float* nocapture %VFtab) #0 {
entry:
  %0 = load i32* %iinr, align 4, !tbaa !0
  %idxprom = sext i32 %0 to i64
  %arrayidx1 = getelementptr inbounds float* %charge, i64 %idxprom
  %1 = load float* %arrayidx1, align 4, !tbaa !3
  %add = add nsw i32 %0, 1
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds float* %charge, i64 %idxprom2
  %2 = load float* %arrayidx3, align 4, !tbaa !3
  %mul = fmul float %1, %facel
  %mul4 = fmul float %2, %facel
  %mul5 = shl i32 %ntype, 1
  %arrayidx7 = getelementptr inbounds i32* %type, i64 %idxprom
  %3 = load i32* %arrayidx7, align 4, !tbaa !0
  %mul8 = mul nsw i32 %mul5, %3
  %cmp700 = icmp sgt i32 %nri, 0
  br i1 %cmp700, label %for.body, label %for.end381

for.body:                                         ; preds = %entry, %for.end.for.body_crit_edge
  %4 = phi i32 [ %.pre, %for.end.for.body_crit_edge ], [ %0, %entry ]
  %indvars.iv702 = phi i64 [ %indvars.iv.next703, %for.end.for.body_crit_edge ], [ 0, %entry ]
  %arrayidx10 = getelementptr inbounds i32* %shift, i64 %indvars.iv702
  %5 = load i32* %arrayidx10, align 4, !tbaa !0
  %mul11 = mul nsw i32 %5, 3
  %idxprom12 = sext i32 %mul11 to i64
  %arrayidx13 = getelementptr inbounds float* %shiftvec, i64 %idxprom12
  %6 = load float* %arrayidx13, align 4, !tbaa !3
  %add14 = add nsw i32 %mul11, 1
  %idxprom15 = sext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds float* %shiftvec, i64 %idxprom15
  %7 = load float* %arrayidx16, align 4, !tbaa !3
  %add17 = add nsw i32 %mul11, 2
  %idxprom18 = sext i32 %add17 to i64
  %arrayidx19 = getelementptr inbounds float* %shiftvec, i64 %idxprom18
  %8 = load float* %arrayidx19, align 4, !tbaa !3
  %mul22 = mul nsw i32 %4, 3
  %arrayidx24 = getelementptr inbounds i32* %jindex, i64 %indvars.iv702
  %9 = load i32* %arrayidx24, align 4, !tbaa !0
  %indvars.iv.next703 = add i64 %indvars.iv702, 1
  %arrayidx27 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next703
  %10 = load i32* %arrayidx27, align 4, !tbaa !0
  %idxprom28 = sext i32 %mul22 to i64
  %arrayidx29 = getelementptr inbounds float* %pos, i64 %idxprom28
  %11 = load float* %arrayidx29, align 4, !tbaa !3
  %add30 = fadd float %6, %11
  %add31 = add nsw i32 %mul22, 1
  %idxprom32 = sext i32 %add31 to i64
  %arrayidx33 = getelementptr inbounds float* %pos, i64 %idxprom32
  %12 = load float* %arrayidx33, align 4, !tbaa !3
  %add34 = fadd float %7, %12
  %add35 = add nsw i32 %mul22, 2
  %idxprom36 = sext i32 %add35 to i64
  %arrayidx37 = getelementptr inbounds float* %pos, i64 %idxprom36
  %13 = load float* %arrayidx37, align 4, !tbaa !3
  %add38 = fadd float %8, %13
  %add39 = add nsw i32 %mul22, 3
  %idxprom40 = sext i32 %add39 to i64
  %arrayidx41 = getelementptr inbounds float* %pos, i64 %idxprom40
  %14 = load float* %arrayidx41, align 4, !tbaa !3
  %add42 = fadd float %6, %14
  %add43 = add nsw i32 %mul22, 4
  %idxprom44 = sext i32 %add43 to i64
  %arrayidx45 = getelementptr inbounds float* %pos, i64 %idxprom44
  %15 = load float* %arrayidx45, align 4, !tbaa !3
  %add46 = fadd float %7, %15
  %add47 = add nsw i32 %mul22, 5
  %idxprom48 = sext i32 %add47 to i64
  %arrayidx49 = getelementptr inbounds float* %pos, i64 %idxprom48
  %16 = load float* %arrayidx49, align 4, !tbaa !3
  %add50 = fadd float %8, %16
  %add51 = add nsw i32 %mul22, 6
  %idxprom52 = sext i32 %add51 to i64
  %arrayidx53 = getelementptr inbounds float* %pos, i64 %idxprom52
  %17 = load float* %arrayidx53, align 4, !tbaa !3
  %add54 = fadd float %6, %17
  %add55 = add nsw i32 %mul22, 7
  %idxprom56 = sext i32 %add55 to i64
  %arrayidx57 = getelementptr inbounds float* %pos, i64 %idxprom56
  %18 = load float* %arrayidx57, align 4, !tbaa !3
  %add58 = fadd float %7, %18
  %add59 = add nsw i32 %mul22, 8
  %idxprom60 = sext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds float* %pos, i64 %idxprom60
  %19 = load float* %arrayidx61, align 4, !tbaa !3
  %add62 = fadd float %8, %19
  %cmp64677 = icmp slt i32 %9, %10
  br i1 %cmp64677, label %for.body65.lr.ph, label %for.end

for.body65.lr.ph:                                 ; preds = %for.body
  %20 = sext i32 %9 to i64
  br label %for.body65

for.body65:                                       ; preds = %for.body65.lr.ph, %for.body65
  %indvars.iv = phi i64 [ %20, %for.body65.lr.ph ], [ %indvars.iv.next, %for.body65 ]
  %vctot.0688 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add263, %for.body65 ]
  %vnbtot.0687 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %sub126, %for.body65 ]
  %fix1.0686 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add169, %for.body65 ]
  %fiy1.0685 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add170, %for.body65 ]
  %fiz1.0684 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add171, %for.body65 ]
  %fix2.0683 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add222, %for.body65 ]
  %fiy2.0682 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add223, %for.body65 ]
  %fiz2.0681 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add224, %for.body65 ]
  %fix3.0680 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add267, %for.body65 ]
  %fiy3.0679 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add268, %for.body65 ]
  %fiz3.0678 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add269, %for.body65 ]
  %arrayidx67 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %21 = load i32* %arrayidx67, align 4, !tbaa !0
  %mul68 = mul nsw i32 %21, 3
  %idxprom69 = sext i32 %mul68 to i64
  %arrayidx70 = getelementptr inbounds float* %pos, i64 %idxprom69
  %22 = load float* %arrayidx70, align 4, !tbaa !3
  %add71 = add nsw i32 %mul68, 1
  %idxprom72 = sext i32 %add71 to i64
  %arrayidx73 = getelementptr inbounds float* %pos, i64 %idxprom72
  %23 = load float* %arrayidx73, align 4, !tbaa !3
  %add74 = add nsw i32 %mul68, 2
  %idxprom75 = sext i32 %add74 to i64
  %arrayidx76 = getelementptr inbounds float* %pos, i64 %idxprom75
  %24 = load float* %arrayidx76, align 4, !tbaa !3
  %sub = fsub float %add30, %22
  %sub77 = fsub float %add34, %23
  %sub78 = fsub float %add38, %24
  %mul79 = fmul float %sub, %sub
  %mul80 = fmul float %sub77, %sub77
  %add81 = fadd float %mul79, %mul80
  %mul82 = fmul float %sub78, %sub78
  %add83 = fadd float %add81, %mul82
  %sub84 = fsub float %add42, %22
  %sub85 = fsub float %add46, %23
  %sub86 = fsub float %add50, %24
  %mul87 = fmul float %sub84, %sub84
  %mul88 = fmul float %sub85, %sub85
  %add89 = fadd float %mul87, %mul88
  %mul90 = fmul float %sub86, %sub86
  %add91 = fadd float %add89, %mul90
  %sub92 = fsub float %add54, %22
  %sub93 = fsub float %add58, %23
  %sub94 = fsub float %add62, %24
  %mul95 = fmul float %sub92, %sub92
  %mul96 = fmul float %sub93, %sub93
  %add97 = fadd float %mul95, %mul96
  %mul98 = fmul float %sub94, %sub94
  %add99 = fadd float %add97, %mul98
  %conv = fpext float %add83 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv100 = fptrunc double %div to float
  %conv101 = fpext float %add91 to double
  %call102 = tail call double @sqrt(double %conv101) #2
  %div103 = fdiv double 1.000000e+00, %call102
  %conv104 = fptrunc double %div103 to float
  %conv105 = fpext float %add99 to double
  %call106 = tail call double @sqrt(double %conv105) #2
  %div107 = fdiv double 1.000000e+00, %call106
  %conv108 = fptrunc double %div107 to float
  %mul109 = fmul float %add83, %conv100
  %mul110 = fmul float %conv100, %conv100
  %mul111 = fmul float %mul110, %mul110
  %mul112 = fmul float %mul110, %mul111
  %idxprom113 = sext i32 %21 to i64
  %arrayidx114 = getelementptr inbounds i32* %type, i64 %idxprom113
  %25 = load i32* %arrayidx114, align 4, !tbaa !0
  %mul115 = shl nsw i32 %25, 1
  %add116 = add nsw i32 %mul115, %mul8
  %idxprom117 = sext i32 %add116 to i64
  %arrayidx118 = getelementptr inbounds float* %nbfp, i64 %idxprom117
  %26 = load float* %arrayidx118, align 4, !tbaa !3
  %mul119 = fmul float %mul112, %26
  %mul120 = fmul float %mul112, %mul112
  %add121667 = or i32 %add116, 1
  %idxprom122 = sext i32 %add121667 to i64
  %arrayidx123 = getelementptr inbounds float* %nbfp, i64 %idxprom122
  %27 = load float* %arrayidx123, align 4, !tbaa !3
  %mul124 = fmul float %mul120, %27
  %add125 = fadd float %vnbtot.0687, %mul124
  %sub126 = fsub float %add125, %mul119
  %mul127 = fmul float %mul109, %tabscale
  %conv128 = fptosi float %mul127 to i32
  %conv129 = sitofp i32 %conv128 to float
  %sub130 = fsub float %mul127, %conv129
  %mul131 = fmul float %sub130, %sub130
  %mul132 = shl nsw i32 %conv128, 2
  %arrayidx134 = getelementptr inbounds float* %charge, i64 %idxprom113
  %28 = load float* %arrayidx134, align 4, !tbaa !3
  %mul135 = fmul float %mul, %28
  %idxprom136 = sext i32 %mul132 to i64
  %arrayidx137 = getelementptr inbounds float* %VFtab, i64 %idxprom136
  %29 = load float* %arrayidx137, align 4, !tbaa !3
  %add138668 = or i32 %mul132, 1
  %idxprom139 = sext i32 %add138668 to i64
  %arrayidx140 = getelementptr inbounds float* %VFtab, i64 %idxprom139
  %30 = load float* %arrayidx140, align 4, !tbaa !3
  %add141669 = or i32 %mul132, 2
  %idxprom142 = sext i32 %add141669 to i64
  %arrayidx143 = getelementptr inbounds float* %VFtab, i64 %idxprom142
  %31 = load float* %arrayidx143, align 4, !tbaa !3
  %mul144 = fmul float %sub130, %31
  %add145670 = or i32 %mul132, 3
  %idxprom146 = sext i32 %add145670 to i64
  %arrayidx147 = getelementptr inbounds float* %VFtab, i64 %idxprom146
  %32 = load float* %arrayidx147, align 4, !tbaa !3
  %mul148 = fmul float %mul131, %32
  %add149 = fadd float %30, %mul144
  %add150 = fadd float %add149, %mul148
  %mul151 = fmul float %sub130, %add150
  %add152 = fadd float %29, %mul151
  %add153 = fadd float %mul144, %add150
  %mul154 = fmul float %mul148, 2.000000e+00
  %add155 = fadd float %mul154, %add153
  %mul156 = fmul float %mul135, %add152
  %mul157 = fmul float %mul135, %add155
  %mul158 = fmul float %mul124, 1.200000e+01
  %mul159 = fmul float %mul119, 6.000000e+00
  %sub160 = fsub float %mul158, %mul159
  %mul161 = fmul float %conv100, %sub160
  %mul162 = fmul float %mul157, %tabscale
  %sub163 = fsub float %mul161, %mul162
  %mul164 = fmul float %conv100, %sub163
  %add165 = fadd float %vctot.0688, %mul156
  %mul166 = fmul float %sub, %mul164
  %mul167 = fmul float %sub77, %mul164
  %mul168 = fmul float %sub78, %mul164
  %add169 = fadd float %fix1.0686, %mul166
  %add170 = fadd float %fiy1.0685, %mul167
  %add171 = fadd float %fiz1.0684, %mul168
  %arrayidx173 = getelementptr inbounds float* %faction, i64 %idxprom69
  %33 = load float* %arrayidx173, align 4, !tbaa !3
  %sub174 = fsub float %33, %mul166
  %arrayidx177 = getelementptr inbounds float* %faction, i64 %idxprom72
  %34 = load float* %arrayidx177, align 4, !tbaa !3
  %sub178 = fsub float %34, %mul167
  %arrayidx181 = getelementptr inbounds float* %faction, i64 %idxprom75
  %35 = load float* %arrayidx181, align 4, !tbaa !3
  %sub182 = fsub float %35, %mul168
  %mul183 = fmul float %add91, %conv104
  %mul184 = fmul float %mul183, %tabscale
  %conv185 = fptosi float %mul184 to i32
  %conv186 = sitofp i32 %conv185 to float
  %sub187 = fsub float %mul184, %conv186
  %mul188 = fmul float %sub187, %sub187
  %mul189 = shl nsw i32 %conv185, 2
  %mul192 = fmul float %mul4, %28
  %idxprom193 = sext i32 %mul189 to i64
  %arrayidx194 = getelementptr inbounds float* %VFtab, i64 %idxprom193
  %36 = load float* %arrayidx194, align 4, !tbaa !3
  %add195671 = or i32 %mul189, 1
  %idxprom196 = sext i32 %add195671 to i64
  %arrayidx197 = getelementptr inbounds float* %VFtab, i64 %idxprom196
  %37 = load float* %arrayidx197, align 4, !tbaa !3
  %add198672 = or i32 %mul189, 2
  %idxprom199 = sext i32 %add198672 to i64
  %arrayidx200 = getelementptr inbounds float* %VFtab, i64 %idxprom199
  %38 = load float* %arrayidx200, align 4, !tbaa !3
  %mul201 = fmul float %sub187, %38
  %add202673 = or i32 %mul189, 3
  %idxprom203 = sext i32 %add202673 to i64
  %arrayidx204 = getelementptr inbounds float* %VFtab, i64 %idxprom203
  %39 = load float* %arrayidx204, align 4, !tbaa !3
  %mul205 = fmul float %mul188, %39
  %add206 = fadd float %37, %mul201
  %add207 = fadd float %add206, %mul205
  %mul208 = fmul float %sub187, %add207
  %add209 = fadd float %36, %mul208
  %add210 = fadd float %mul201, %add207
  %mul211 = fmul float %mul205, 2.000000e+00
  %add212 = fadd float %mul211, %add210
  %mul213 = fmul float %mul192, %add209
  %mul214 = fmul float %mul192, %add212
  %mul215 = fmul float %mul214, %tabscale
  %40 = fmul float %conv104, %mul215
  %mul217 = fsub float -0.000000e+00, %40
  %add218 = fadd float %add165, %mul213
  %mul219 = fmul float %sub84, %mul217
  %mul220 = fmul float %sub85, %mul217
  %mul221 = fmul float %sub86, %mul217
  %add222 = fadd float %fix2.0683, %mul219
  %add223 = fadd float %fiy2.0682, %mul220
  %add224 = fadd float %fiz2.0681, %mul221
  %sub225 = fsub float %sub174, %mul219
  %sub226 = fsub float %sub178, %mul220
  %sub227 = fsub float %sub182, %mul221
  %mul228 = fmul float %add99, %conv108
  %mul229 = fmul float %mul228, %tabscale
  %conv230 = fptosi float %mul229 to i32
  %conv231 = sitofp i32 %conv230 to float
  %sub232 = fsub float %mul229, %conv231
  %mul233 = fmul float %sub232, %sub232
  %mul234 = shl nsw i32 %conv230, 2
  %idxprom238 = sext i32 %mul234 to i64
  %arrayidx239 = getelementptr inbounds float* %VFtab, i64 %idxprom238
  %41 = load float* %arrayidx239, align 4, !tbaa !3
  %add240674 = or i32 %mul234, 1
  %idxprom241 = sext i32 %add240674 to i64
  %arrayidx242 = getelementptr inbounds float* %VFtab, i64 %idxprom241
  %42 = load float* %arrayidx242, align 4, !tbaa !3
  %add243675 = or i32 %mul234, 2
  %idxprom244 = sext i32 %add243675 to i64
  %arrayidx245 = getelementptr inbounds float* %VFtab, i64 %idxprom244
  %43 = load float* %arrayidx245, align 4, !tbaa !3
  %mul246 = fmul float %sub232, %43
  %add247676 = or i32 %mul234, 3
  %idxprom248 = sext i32 %add247676 to i64
  %arrayidx249 = getelementptr inbounds float* %VFtab, i64 %idxprom248
  %44 = load float* %arrayidx249, align 4, !tbaa !3
  %mul250 = fmul float %mul233, %44
  %add251 = fadd float %42, %mul246
  %add252 = fadd float %add251, %mul250
  %mul253 = fmul float %sub232, %add252
  %add254 = fadd float %41, %mul253
  %add255 = fadd float %mul246, %add252
  %mul256 = fmul float %mul250, 2.000000e+00
  %add257 = fadd float %mul256, %add255
  %mul258 = fmul float %mul192, %add254
  %mul259 = fmul float %mul192, %add257
  %mul260 = fmul float %mul259, %tabscale
  %45 = fmul float %conv108, %mul260
  %mul262 = fsub float -0.000000e+00, %45
  %add263 = fadd float %add218, %mul258
  %mul264 = fmul float %sub92, %mul262
  %mul265 = fmul float %sub93, %mul262
  %mul266 = fmul float %sub94, %mul262
  %add267 = fadd float %fix3.0680, %mul264
  %add268 = fadd float %fiy3.0679, %mul265
  %add269 = fadd float %fiz3.0678, %mul266
  %sub270 = fsub float %sub225, %mul264
  store float %sub270, float* %arrayidx173, align 4, !tbaa !3
  %sub273 = fsub float %sub226, %mul265
  store float %sub273, float* %arrayidx177, align 4, !tbaa !3
  %sub277 = fsub float %sub227, %mul266
  store float %sub277, float* %arrayidx181, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %46 = trunc i64 %indvars.iv.next to i32
  %cmp64 = icmp slt i32 %46, %10
  br i1 %cmp64, label %for.body65, label %for.end

for.end:                                          ; preds = %for.body65, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add263, %for.body65 ]
  %vnbtot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %sub126, %for.body65 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add169, %for.body65 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add170, %for.body65 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add171, %for.body65 ]
  %fix2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add222, %for.body65 ]
  %fiy2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add223, %for.body65 ]
  %fiz2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add224, %for.body65 ]
  %fix3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add267, %for.body65 ]
  %fiy3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add268, %for.body65 ]
  %fiz3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add269, %for.body65 ]
  %arrayidx282 = getelementptr inbounds float* %faction, i64 %idxprom28
  %47 = load float* %arrayidx282, align 4, !tbaa !3
  %add283 = fadd float %fix1.0.lcssa, %47
  store float %add283, float* %arrayidx282, align 4, !tbaa !3
  %arrayidx288 = getelementptr inbounds float* %faction, i64 %idxprom32
  %48 = load float* %arrayidx288, align 4, !tbaa !3
  %add289 = fadd float %fiy1.0.lcssa, %48
  store float %add289, float* %arrayidx288, align 4, !tbaa !3
  %arrayidx295 = getelementptr inbounds float* %faction, i64 %idxprom36
  %49 = load float* %arrayidx295, align 4, !tbaa !3
  %add296 = fadd float %fiz1.0.lcssa, %49
  store float %add296, float* %arrayidx295, align 4, !tbaa !3
  %arrayidx302 = getelementptr inbounds float* %faction, i64 %idxprom40
  %50 = load float* %arrayidx302, align 4, !tbaa !3
  %add303 = fadd float %fix2.0.lcssa, %50
  store float %add303, float* %arrayidx302, align 4, !tbaa !3
  %arrayidx309 = getelementptr inbounds float* %faction, i64 %idxprom44
  %51 = load float* %arrayidx309, align 4, !tbaa !3
  %add310 = fadd float %fiy2.0.lcssa, %51
  store float %add310, float* %arrayidx309, align 4, !tbaa !3
  %arrayidx316 = getelementptr inbounds float* %faction, i64 %idxprom48
  %52 = load float* %arrayidx316, align 4, !tbaa !3
  %add317 = fadd float %fiz2.0.lcssa, %52
  store float %add317, float* %arrayidx316, align 4, !tbaa !3
  %arrayidx323 = getelementptr inbounds float* %faction, i64 %idxprom52
  %53 = load float* %arrayidx323, align 4, !tbaa !3
  %add324 = fadd float %fix3.0.lcssa, %53
  store float %add324, float* %arrayidx323, align 4, !tbaa !3
  %arrayidx330 = getelementptr inbounds float* %faction, i64 %idxprom56
  %54 = load float* %arrayidx330, align 4, !tbaa !3
  %add331 = fadd float %fiy3.0.lcssa, %54
  store float %add331, float* %arrayidx330, align 4, !tbaa !3
  %arrayidx337 = getelementptr inbounds float* %faction, i64 %idxprom60
  %55 = load float* %arrayidx337, align 4, !tbaa !3
  %add338 = fadd float %fiz3.0.lcssa, %55
  store float %add338, float* %arrayidx337, align 4, !tbaa !3
  %arrayidx343 = getelementptr inbounds float* %fshift, i64 %idxprom12
  %56 = load float* %arrayidx343, align 4, !tbaa !3
  %add344 = fadd float %fix1.0.lcssa, %56
  %add345 = fadd float %fix2.0.lcssa, %add344
  %add346 = fadd float %fix3.0.lcssa, %add345
  store float %add346, float* %arrayidx343, align 4, !tbaa !3
  %arrayidx351 = getelementptr inbounds float* %fshift, i64 %idxprom15
  %57 = load float* %arrayidx351, align 4, !tbaa !3
  %add352 = fadd float %fiy1.0.lcssa, %57
  %add353 = fadd float %fiy2.0.lcssa, %add352
  %add354 = fadd float %fiy3.0.lcssa, %add353
  store float %add354, float* %arrayidx351, align 4, !tbaa !3
  %arrayidx360 = getelementptr inbounds float* %fshift, i64 %idxprom18
  %58 = load float* %arrayidx360, align 4, !tbaa !3
  %add361 = fadd float %fiz1.0.lcssa, %58
  %add362 = fadd float %fiz2.0.lcssa, %add361
  %add363 = fadd float %fiz3.0.lcssa, %add362
  store float %add363, float* %arrayidx360, align 4, !tbaa !3
  %arrayidx368 = getelementptr inbounds i32* %gid, i64 %indvars.iv702
  %59 = load i32* %arrayidx368, align 4, !tbaa !0
  %idxprom369 = sext i32 %59 to i64
  %arrayidx370 = getelementptr inbounds float* %Vc, i64 %idxprom369
  %60 = load float* %arrayidx370, align 4, !tbaa !3
  %add371 = fadd float %vctot.0.lcssa, %60
  store float %add371, float* %arrayidx370, align 4, !tbaa !3
  %arrayidx375 = getelementptr inbounds float* %Vnb, i64 %idxprom369
  %61 = load float* %arrayidx375, align 4, !tbaa !3
  %add376 = fadd float %vnbtot.0.lcssa, %61
  store float %add376, float* %arrayidx375, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next703 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end381, label %for.end.for.body_crit_edge

for.end.for.body_crit_edge:                       ; preds = %for.end
  %arrayidx21.phi.trans.insert = getelementptr inbounds i32* %iinr, i64 %indvars.iv.next703
  %.pre = load i32* %arrayidx21.phi.trans.insert, align 4, !tbaa !0
  br label %for.body

for.end381:                                       ; preds = %for.end, %entry
  ret void
}
