define void @inl3320(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb, float %tabscale, float* nocapture %VFtab) #0 {
entry:
  %0 = load i32* %iinr, align 4, !tbaa !0
  %idxprom = sext i32 %0 to i64
  %arrayidx1 = getelementptr inbounds float* %charge, i64 %idxprom
  %1 = load float* %arrayidx1, align 4, !tbaa !3
  %add = add nsw i32 %0, 1
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds float* %charge, i64 %idxprom2
  %2 = load float* %arrayidx3, align 4, !tbaa !3
  %mul = fmul float %1, %facel
  %mul4 = fmul float %2, %facel
  %mul5 = shl i32 %ntype, 1
  %arrayidx7 = getelementptr inbounds i32* %type, i64 %idxprom
  %3 = load i32* %arrayidx7, align 4, !tbaa !0
  %mul8 = mul nsw i32 %mul5, %3
  %cmp775 = icmp sgt i32 %nri, 0
  br i1 %cmp775, label %for.body, label %for.end419

for.body:                                         ; preds = %entry, %for.end.for.body_crit_edge
  %4 = phi i32 [ %.pre, %for.end.for.body_crit_edge ], [ %0, %entry ]
  %indvars.iv777 = phi i64 [ %indvars.iv.next778, %for.end.for.body_crit_edge ], [ 0, %entry ]
  %arrayidx10 = getelementptr inbounds i32* %shift, i64 %indvars.iv777
  %5 = load i32* %arrayidx10, align 4, !tbaa !0
  %mul11 = mul nsw i32 %5, 3
  %idxprom12 = sext i32 %mul11 to i64
  %arrayidx13 = getelementptr inbounds float* %shiftvec, i64 %idxprom12
  %6 = load float* %arrayidx13, align 4, !tbaa !3
  %add14 = add nsw i32 %mul11, 1
  %idxprom15 = sext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds float* %shiftvec, i64 %idxprom15
  %7 = load float* %arrayidx16, align 4, !tbaa !3
  %add17 = add nsw i32 %mul11, 2
  %idxprom18 = sext i32 %add17 to i64
  %arrayidx19 = getelementptr inbounds float* %shiftvec, i64 %idxprom18
  %8 = load float* %arrayidx19, align 4, !tbaa !3
  %mul22 = mul nsw i32 %4, 3
  %arrayidx24 = getelementptr inbounds i32* %jindex, i64 %indvars.iv777
  %9 = load i32* %arrayidx24, align 4, !tbaa !0
  %indvars.iv.next778 = add i64 %indvars.iv777, 1
  %arrayidx27 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next778
  %10 = load i32* %arrayidx27, align 4, !tbaa !0
  %idxprom28 = sext i32 %mul22 to i64
  %arrayidx29 = getelementptr inbounds float* %pos, i64 %idxprom28
  %11 = load float* %arrayidx29, align 4, !tbaa !3
  %add30 = fadd float %6, %11
  %add31 = add nsw i32 %mul22, 1
  %idxprom32 = sext i32 %add31 to i64
  %arrayidx33 = getelementptr inbounds float* %pos, i64 %idxprom32
  %12 = load float* %arrayidx33, align 4, !tbaa !3
  %add34 = fadd float %7, %12
  %add35 = add nsw i32 %mul22, 2
  %idxprom36 = sext i32 %add35 to i64
  %arrayidx37 = getelementptr inbounds float* %pos, i64 %idxprom36
  %13 = load float* %arrayidx37, align 4, !tbaa !3
  %add38 = fadd float %8, %13
  %add39 = add nsw i32 %mul22, 3
  %idxprom40 = sext i32 %add39 to i64
  %arrayidx41 = getelementptr inbounds float* %pos, i64 %idxprom40
  %14 = load float* %arrayidx41, align 4, !tbaa !3
  %add42 = fadd float %6, %14
  %add43 = add nsw i32 %mul22, 4
  %idxprom44 = sext i32 %add43 to i64
  %arrayidx45 = getelementptr inbounds float* %pos, i64 %idxprom44
  %15 = load float* %arrayidx45, align 4, !tbaa !3
  %add46 = fadd float %7, %15
  %add47 = add nsw i32 %mul22, 5
  %idxprom48 = sext i32 %add47 to i64
  %arrayidx49 = getelementptr inbounds float* %pos, i64 %idxprom48
  %16 = load float* %arrayidx49, align 4, !tbaa !3
  %add50 = fadd float %8, %16
  %add51 = add nsw i32 %mul22, 6
  %idxprom52 = sext i32 %add51 to i64
  %arrayidx53 = getelementptr inbounds float* %pos, i64 %idxprom52
  %17 = load float* %arrayidx53, align 4, !tbaa !3
  %add54 = fadd float %6, %17
  %add55 = add nsw i32 %mul22, 7
  %idxprom56 = sext i32 %add55 to i64
  %arrayidx57 = getelementptr inbounds float* %pos, i64 %idxprom56
  %18 = load float* %arrayidx57, align 4, !tbaa !3
  %add58 = fadd float %7, %18
  %add59 = add nsw i32 %mul22, 8
  %idxprom60 = sext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds float* %pos, i64 %idxprom60
  %19 = load float* %arrayidx61, align 4, !tbaa !3
  %add62 = fadd float %8, %19
  %cmp64752 = icmp slt i32 %9, %10
  br i1 %cmp64752, label %for.body65.lr.ph, label %for.end

for.body65.lr.ph:                                 ; preds = %for.body
  %20 = sext i32 %9 to i64
  br label %for.body65

for.body65:                                       ; preds = %for.body65.lr.ph, %for.body65
  %indvars.iv = phi i64 [ %20, %for.body65.lr.ph ], [ %indvars.iv.next, %for.body65 ]
  %vctot.0763 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add301, %for.body65 ]
  %vnbtot.0762 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add197, %for.body65 ]
  %fix1.0761 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add207, %for.body65 ]
  %fiy1.0760 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add208, %for.body65 ]
  %fiz1.0759 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add209, %for.body65 ]
  %fix2.0758 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add260, %for.body65 ]
  %fiy2.0757 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add261, %for.body65 ]
  %fiz2.0756 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add262, %for.body65 ]
  %fix3.0755 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add305, %for.body65 ]
  %fiy3.0754 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add306, %for.body65 ]
  %fiz3.0753 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add307, %for.body65 ]
  %arrayidx67 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %21 = load i32* %arrayidx67, align 4, !tbaa !0
  %mul68 = mul nsw i32 %21, 3
  %idxprom69 = sext i32 %mul68 to i64
  %arrayidx70 = getelementptr inbounds float* %pos, i64 %idxprom69
  %22 = load float* %arrayidx70, align 4, !tbaa !3
  %add71 = add nsw i32 %mul68, 1
  %idxprom72 = sext i32 %add71 to i64
  %arrayidx73 = getelementptr inbounds float* %pos, i64 %idxprom72
  %23 = load float* %arrayidx73, align 4, !tbaa !3
  %add74 = add nsw i32 %mul68, 2
  %idxprom75 = sext i32 %add74 to i64
  %arrayidx76 = getelementptr inbounds float* %pos, i64 %idxprom75
  %24 = load float* %arrayidx76, align 4, !tbaa !3
  %sub = fsub float %add30, %22
  %sub77 = fsub float %add34, %23
  %sub78 = fsub float %add38, %24
  %mul79 = fmul float %sub, %sub
  %mul80 = fmul float %sub77, %sub77
  %add81 = fadd float %mul79, %mul80
  %mul82 = fmul float %sub78, %sub78
  %add83 = fadd float %add81, %mul82
  %sub84 = fsub float %add42, %22
  %sub85 = fsub float %add46, %23
  %sub86 = fsub float %add50, %24
  %mul87 = fmul float %sub84, %sub84
  %mul88 = fmul float %sub85, %sub85
  %add89 = fadd float %mul87, %mul88
  %mul90 = fmul float %sub86, %sub86
  %add91 = fadd float %add89, %mul90
  %sub92 = fsub float %add54, %22
  %sub93 = fsub float %add58, %23
  %sub94 = fsub float %add62, %24
  %mul95 = fmul float %sub92, %sub92
  %mul96 = fmul float %sub93, %sub93
  %add97 = fadd float %mul95, %mul96
  %mul98 = fmul float %sub94, %sub94
  %add99 = fadd float %add97, %mul98
  %conv = fpext float %add83 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv100 = fptrunc double %div to float
  %conv101 = fpext float %add91 to double
  %call102 = tail call double @sqrt(double %conv101) #2
  %div103 = fdiv double 1.000000e+00, %call102
  %conv104 = fptrunc double %div103 to float
  %conv105 = fpext float %add99 to double
  %call106 = tail call double @sqrt(double %conv105) #2
  %div107 = fdiv double 1.000000e+00, %call106
  %conv108 = fptrunc double %div107 to float
  %mul109 = fmul float %add83, %conv100
  %mul110 = fmul float %mul109, %tabscale
  %conv111 = fptosi float %mul110 to i32
  %conv112 = sitofp i32 %conv111 to float
  %sub113 = fsub float %mul110, %conv112
  %mul114 = fmul float %sub113, %sub113
  %mul115 = mul nsw i32 %conv111, 12
  %idxprom116 = sext i32 %21 to i64
  %arrayidx117 = getelementptr inbounds float* %charge, i64 %idxprom116
  %25 = load float* %arrayidx117, align 4, !tbaa !3
  %mul118 = fmul float %mul, %25
  %idxprom119 = sext i32 %mul115 to i64
  %arrayidx120 = getelementptr inbounds float* %VFtab, i64 %idxprom119
  %26 = load float* %arrayidx120, align 4, !tbaa !3
  %add121742 = or i32 %mul115, 1
  %idxprom122 = sext i32 %add121742 to i64
  %arrayidx123 = getelementptr inbounds float* %VFtab, i64 %idxprom122
  %27 = load float* %arrayidx123, align 4, !tbaa !3
  %add124743 = or i32 %mul115, 2
  %idxprom125 = sext i32 %add124743 to i64
  %arrayidx126 = getelementptr inbounds float* %VFtab, i64 %idxprom125
  %28 = load float* %arrayidx126, align 4, !tbaa !3
  %mul127 = fmul float %sub113, %28
  %add128744 = or i32 %mul115, 3
  %idxprom129 = sext i32 %add128744 to i64
  %arrayidx130 = getelementptr inbounds float* %VFtab, i64 %idxprom129
  %29 = load float* %arrayidx130, align 4, !tbaa !3
  %mul131 = fmul float %mul114, %29
  %add132 = fadd float %27, %mul127
  %add133 = fadd float %add132, %mul131
  %mul134 = fmul float %sub113, %add133
  %add135 = fadd float %26, %mul134
  %add136 = fadd float %mul127, %add133
  %mul137 = fmul float %mul131, 2.000000e+00
  %add138 = fadd float %mul137, %add136
  %mul139 = fmul float %mul118, %add135
  %mul140 = fmul float %mul118, %add138
  %arrayidx142 = getelementptr inbounds i32* %type, i64 %idxprom116
  %30 = load i32* %arrayidx142, align 4, !tbaa !0
  %mul143 = shl nsw i32 %30, 1
  %add144 = add nsw i32 %mul143, %mul8
  %idxprom145 = sext i32 %add144 to i64
  %arrayidx146 = getelementptr inbounds float* %nbfp, i64 %idxprom145
  %31 = load float* %arrayidx146, align 4, !tbaa !3
  %add147745 = or i32 %add144, 1
  %idxprom148 = sext i32 %add147745 to i64
  %arrayidx149 = getelementptr inbounds float* %nbfp, i64 %idxprom148
  %32 = load float* %arrayidx149, align 4, !tbaa !3
  %add150 = add nsw i32 %mul115, 4
  %idxprom151 = sext i32 %add150 to i64
  %arrayidx152 = getelementptr inbounds float* %VFtab, i64 %idxprom151
  %33 = load float* %arrayidx152, align 4, !tbaa !3
  %add153 = add nsw i32 %mul115, 5
  %idxprom154 = sext i32 %add153 to i64
  %arrayidx155 = getelementptr inbounds float* %VFtab, i64 %idxprom154
  %34 = load float* %arrayidx155, align 4, !tbaa !3
  %add156 = add nsw i32 %mul115, 6
  %idxprom157 = sext i32 %add156 to i64
  %arrayidx158 = getelementptr inbounds float* %VFtab, i64 %idxprom157
  %35 = load float* %arrayidx158, align 4, !tbaa !3
  %mul159 = fmul float %sub113, %35
  %add160 = add nsw i32 %mul115, 7
  %idxprom161 = sext i32 %add160 to i64
  %arrayidx162 = getelementptr inbounds float* %VFtab, i64 %idxprom161
  %36 = load float* %arrayidx162, align 4, !tbaa !3
  %mul163 = fmul float %mul114, %36
  %add164 = fadd float %34, %mul159
  %add165 = fadd float %add164, %mul163
  %mul166 = fmul float %sub113, %add165
  %add167 = fadd float %33, %mul166
  %add168 = fadd float %mul159, %add165
  %mul169 = fmul float %mul163, 2.000000e+00
  %add170 = fadd float %mul169, %add168
  %mul171 = fmul float %31, %add167
  %mul172 = fmul float %31, %add170
  %add173 = add nsw i32 %mul115, 8
  %idxprom174 = sext i32 %add173 to i64
  %arrayidx175 = getelementptr inbounds float* %VFtab, i64 %idxprom174
  %37 = load float* %arrayidx175, align 4, !tbaa !3
  %add176 = add nsw i32 %mul115, 9
  %idxprom177 = sext i32 %add176 to i64
  %arrayidx178 = getelementptr inbounds float* %VFtab, i64 %idxprom177
  %38 = load float* %arrayidx178, align 4, !tbaa !3
  %add179 = add nsw i32 %mul115, 10
  %idxprom180 = sext i32 %add179 to i64
  %arrayidx181 = getelementptr inbounds float* %VFtab, i64 %idxprom180
  %39 = load float* %arrayidx181, align 4, !tbaa !3
  %mul182 = fmul float %sub113, %39
  %add183 = add nsw i32 %mul115, 11
  %idxprom184 = sext i32 %add183 to i64
  %arrayidx185 = getelementptr inbounds float* %VFtab, i64 %idxprom184
  %40 = load float* %arrayidx185, align 4, !tbaa !3
  %mul186 = fmul float %mul114, %40
  %add187 = fadd float %38, %mul182
  %add188 = fadd float %add187, %mul186
  %mul189 = fmul float %sub113, %add188
  %add190 = fadd float %37, %mul189
  %add191 = fadd float %mul182, %add188
  %mul192 = fmul float %mul186, 2.000000e+00
  %add193 = fadd float %mul192, %add191
  %mul194 = fmul float %32, %add190
  %mul195 = fmul float %32, %add193
  %add196 = fadd float %vnbtot.0762, %mul171
  %add197 = fadd float %add196, %mul194
  %add198 = fadd float %mul140, %mul172
  %add199 = fadd float %add198, %mul195
  %mul200 = fmul float %add199, %tabscale
  %41 = fmul float %conv100, %mul200
  %mul202 = fsub float -0.000000e+00, %41
  %add203 = fadd float %vctot.0763, %mul139
  %mul204 = fmul float %sub, %mul202
  %mul205 = fmul float %sub77, %mul202
  %mul206 = fmul float %sub78, %mul202
  %add207 = fadd float %fix1.0761, %mul204
  %add208 = fadd float %fiy1.0760, %mul205
  %add209 = fadd float %fiz1.0759, %mul206
  %arrayidx211 = getelementptr inbounds float* %faction, i64 %idxprom69
  %42 = load float* %arrayidx211, align 4, !tbaa !3
  %sub212 = fsub float %42, %mul204
  %arrayidx215 = getelementptr inbounds float* %faction, i64 %idxprom72
  %43 = load float* %arrayidx215, align 4, !tbaa !3
  %sub216 = fsub float %43, %mul205
  %arrayidx219 = getelementptr inbounds float* %faction, i64 %idxprom75
  %44 = load float* %arrayidx219, align 4, !tbaa !3
  %sub220 = fsub float %44, %mul206
  %mul221 = fmul float %add91, %conv104
  %mul222 = fmul float %mul221, %tabscale
  %conv223 = fptosi float %mul222 to i32
  %conv224 = sitofp i32 %conv223 to float
  %sub225 = fsub float %mul222, %conv224
  %mul226 = fmul float %sub225, %sub225
  %mul227 = mul nsw i32 %conv223, 12
  %mul230 = fmul float %mul4, %25
  %idxprom231 = sext i32 %mul227 to i64
  %arrayidx232 = getelementptr inbounds float* %VFtab, i64 %idxprom231
  %45 = load float* %arrayidx232, align 4, !tbaa !3
  %add233746 = or i32 %mul227, 1
  %idxprom234 = sext i32 %add233746 to i64
  %arrayidx235 = getelementptr inbounds float* %VFtab, i64 %idxprom234
  %46 = load float* %arrayidx235, align 4, !tbaa !3
  %add236747 = or i32 %mul227, 2
  %idxprom237 = sext i32 %add236747 to i64
  %arrayidx238 = getelementptr inbounds float* %VFtab, i64 %idxprom237
  %47 = load float* %arrayidx238, align 4, !tbaa !3
  %mul239 = fmul float %sub225, %47
  %add240748 = or i32 %mul227, 3
  %idxprom241 = sext i32 %add240748 to i64
  %arrayidx242 = getelementptr inbounds float* %VFtab, i64 %idxprom241
  %48 = load float* %arrayidx242, align 4, !tbaa !3
  %mul243 = fmul float %mul226, %48
  %add244 = fadd float %46, %mul239
  %add245 = fadd float %add244, %mul243
  %mul246 = fmul float %sub225, %add245
  %add247 = fadd float %45, %mul246
  %add248 = fadd float %mul239, %add245
  %mul249 = fmul float %mul243, 2.000000e+00
  %add250 = fadd float %mul249, %add248
  %mul251 = fmul float %mul230, %add247
  %mul252 = fmul float %mul230, %add250
  %mul253 = fmul float %mul252, %tabscale
  %49 = fmul float %conv104, %mul253
  %mul255 = fsub float -0.000000e+00, %49
  %add256 = fadd float %add203, %mul251
  %mul257 = fmul float %sub84, %mul255
  %mul258 = fmul float %sub85, %mul255
  %mul259 = fmul float %sub86, %mul255
  %add260 = fadd float %fix2.0758, %mul257
  %add261 = fadd float %fiy2.0757, %mul258
  %add262 = fadd float %fiz2.0756, %mul259
  %sub263 = fsub float %sub212, %mul257
  %sub264 = fsub float %sub216, %mul258
  %sub265 = fsub float %sub220, %mul259
  %mul266 = fmul float %add99, %conv108
  %mul267 = fmul float %mul266, %tabscale
  %conv268 = fptosi float %mul267 to i32
  %conv269 = sitofp i32 %conv268 to float
  %sub270 = fsub float %mul267, %conv269
  %mul271 = fmul float %sub270, %sub270
  %mul272 = mul nsw i32 %conv268, 12
  %idxprom276 = sext i32 %mul272 to i64
  %arrayidx277 = getelementptr inbounds float* %VFtab, i64 %idxprom276
  %50 = load float* %arrayidx277, align 4, !tbaa !3
  %add278749 = or i32 %mul272, 1
  %idxprom279 = sext i32 %add278749 to i64
  %arrayidx280 = getelementptr inbounds float* %VFtab, i64 %idxprom279
  %51 = load float* %arrayidx280, align 4, !tbaa !3
  %add281750 = or i32 %mul272, 2
  %idxprom282 = sext i32 %add281750 to i64
  %arrayidx283 = getelementptr inbounds float* %VFtab, i64 %idxprom282
  %52 = load float* %arrayidx283, align 4, !tbaa !3
  %mul284 = fmul float %sub270, %52
  %add285751 = or i32 %mul272, 3
  %idxprom286 = sext i32 %add285751 to i64
  %arrayidx287 = getelementptr inbounds float* %VFtab, i64 %idxprom286
  %53 = load float* %arrayidx287, align 4, !tbaa !3
  %mul288 = fmul float %mul271, %53
  %add289 = fadd float %51, %mul284
  %add290 = fadd float %add289, %mul288
  %mul291 = fmul float %sub270, %add290
  %add292 = fadd float %50, %mul291
  %add293 = fadd float %mul284, %add290
  %mul294 = fmul float %mul288, 2.000000e+00
  %add295 = fadd float %mul294, %add293
  %mul296 = fmul float %mul230, %add292
  %mul297 = fmul float %mul230, %add295
  %mul298 = fmul float %mul297, %tabscale
  %54 = fmul float %conv108, %mul298
  %mul300 = fsub float -0.000000e+00, %54
  %add301 = fadd float %add256, %mul296
  %mul302 = fmul float %sub92, %mul300
  %mul303 = fmul float %sub93, %mul300
  %mul304 = fmul float %sub94, %mul300
  %add305 = fadd float %fix3.0755, %mul302
  %add306 = fadd float %fiy3.0754, %mul303
  %add307 = fadd float %fiz3.0753, %mul304
  %sub308 = fsub float %sub263, %mul302
  store float %sub308, float* %arrayidx211, align 4, !tbaa !3
  %sub311 = fsub float %sub264, %mul303
  store float %sub311, float* %arrayidx215, align 4, !tbaa !3
  %sub315 = fsub float %sub265, %mul304
  store float %sub315, float* %arrayidx219, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %55 = trunc i64 %indvars.iv.next to i32
  %cmp64 = icmp slt i32 %55, %10
  br i1 %cmp64, label %for.body65, label %for.end

for.end:                                          ; preds = %for.body65, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add301, %for.body65 ]
  %vnbtot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add197, %for.body65 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add207, %for.body65 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add208, %for.body65 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add209, %for.body65 ]
  %fix2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add260, %for.body65 ]
  %fiy2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add261, %for.body65 ]
  %fiz2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add262, %for.body65 ]
  %fix3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add305, %for.body65 ]
  %fiy3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add306, %for.body65 ]
  %fiz3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add307, %for.body65 ]
  %arrayidx320 = getelementptr inbounds float* %faction, i64 %idxprom28
  %56 = load float* %arrayidx320, align 4, !tbaa !3
  %add321 = fadd float %fix1.0.lcssa, %56
  store float %add321, float* %arrayidx320, align 4, !tbaa !3
  %arrayidx326 = getelementptr inbounds float* %faction, i64 %idxprom32
  %57 = load float* %arrayidx326, align 4, !tbaa !3
  %add327 = fadd float %fiy1.0.lcssa, %57
  store float %add327, float* %arrayidx326, align 4, !tbaa !3
  %arrayidx333 = getelementptr inbounds float* %faction, i64 %idxprom36
  %58 = load float* %arrayidx333, align 4, !tbaa !3
  %add334 = fadd float %fiz1.0.lcssa, %58
  store float %add334, float* %arrayidx333, align 4, !tbaa !3
  %arrayidx340 = getelementptr inbounds float* %faction, i64 %idxprom40
  %59 = load float* %arrayidx340, align 4, !tbaa !3
  %add341 = fadd float %fix2.0.lcssa, %59
  store float %add341, float* %arrayidx340, align 4, !tbaa !3
  %arrayidx347 = getelementptr inbounds float* %faction, i64 %idxprom44
  %60 = load float* %arrayidx347, align 4, !tbaa !3
  %add348 = fadd float %fiy2.0.lcssa, %60
  store float %add348, float* %arrayidx347, align 4, !tbaa !3
  %arrayidx354 = getelementptr inbounds float* %faction, i64 %idxprom48
  %61 = load float* %arrayidx354, align 4, !tbaa !3
  %add355 = fadd float %fiz2.0.lcssa, %61
  store float %add355, float* %arrayidx354, align 4, !tbaa !3
  %arrayidx361 = getelementptr inbounds float* %faction, i64 %idxprom52
  %62 = load float* %arrayidx361, align 4, !tbaa !3
  %add362 = fadd float %fix3.0.lcssa, %62
  store float %add362, float* %arrayidx361, align 4, !tbaa !3
  %arrayidx368 = getelementptr inbounds float* %faction, i64 %idxprom56
  %63 = load float* %arrayidx368, align 4, !tbaa !3
  %add369 = fadd float %fiy3.0.lcssa, %63
  store float %add369, float* %arrayidx368, align 4, !tbaa !3
  %arrayidx375 = getelementptr inbounds float* %faction, i64 %idxprom60
  %64 = load float* %arrayidx375, align 4, !tbaa !3
  %add376 = fadd float %fiz3.0.lcssa, %64
  store float %add376, float* %arrayidx375, align 4, !tbaa !3
  %arrayidx381 = getelementptr inbounds float* %fshift, i64 %idxprom12
  %65 = load float* %arrayidx381, align 4, !tbaa !3
  %add382 = fadd float %fix1.0.lcssa, %65
  %add383 = fadd float %fix2.0.lcssa, %add382
  %add384 = fadd float %fix3.0.lcssa, %add383
  store float %add384, float* %arrayidx381, align 4, !tbaa !3
  %arrayidx389 = getelementptr inbounds float* %fshift, i64 %idxprom15
  %66 = load float* %arrayidx389, align 4, !tbaa !3
  %add390 = fadd float %fiy1.0.lcssa, %66
  %add391 = fadd float %fiy2.0.lcssa, %add390
  %add392 = fadd float %fiy3.0.lcssa, %add391
  store float %add392, float* %arrayidx389, align 4, !tbaa !3
  %arrayidx398 = getelementptr inbounds float* %fshift, i64 %idxprom18
  %67 = load float* %arrayidx398, align 4, !tbaa !3
  %add399 = fadd float %fiz1.0.lcssa, %67
  %add400 = fadd float %fiz2.0.lcssa, %add399
  %add401 = fadd float %fiz3.0.lcssa, %add400
  store float %add401, float* %arrayidx398, align 4, !tbaa !3
  %arrayidx406 = getelementptr inbounds i32* %gid, i64 %indvars.iv777
  %68 = load i32* %arrayidx406, align 4, !tbaa !0
  %idxprom407 = sext i32 %68 to i64
  %arrayidx408 = getelementptr inbounds float* %Vc, i64 %idxprom407
  %69 = load float* %arrayidx408, align 4, !tbaa !3
  %add409 = fadd float %vctot.0.lcssa, %69
  store float %add409, float* %arrayidx408, align 4, !tbaa !3
  %arrayidx413 = getelementptr inbounds float* %Vnb, i64 %idxprom407
  %70 = load float* %arrayidx413, align 4, !tbaa !3
  %add414 = fadd float %vnbtot.0.lcssa, %70
  store float %add414, float* %arrayidx413, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next778 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end419, label %for.end.for.body_crit_edge

for.end.for.body_crit_edge:                       ; preds = %for.end
  %arrayidx21.phi.trans.insert = getelementptr inbounds i32* %iinr, i64 %indvars.iv.next778
  %.pre = load i32* %arrayidx21.phi.trans.insert, align 4, !tbaa !0
  br label %for.body

for.end419:                                       ; preds = %for.end, %entry
  ret void
}
