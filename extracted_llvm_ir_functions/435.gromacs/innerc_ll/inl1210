define void @inl1210(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb, i32* nocapture %nsatoms) #0 {
entry:
  %cmp863 = icmp sgt i32 %nri, 0
  br i1 %cmp863, label %for.body, label %for.end458

for.body:                                         ; preds = %for.end443, %entry
  %indvars.iv889 = phi i64 [ 0, %entry ], [ %indvars.iv.next890, %for.end443 ]
  %0 = trunc i64 %indvars.iv889 to i32
  %mul = mul nsw i32 %0, 3
  %idxprom = sext i32 %mul to i64
  %arrayidx = getelementptr inbounds i32* %nsatoms, i64 %idxprom
  %1 = load i32* %arrayidx, align 4, !tbaa !0
  %add = add nsw i32 %mul, 1
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds i32* %nsatoms, i64 %idxprom2
  %2 = load i32* %arrayidx3, align 4, !tbaa !0
  %add5 = add nsw i32 %mul, 2
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds i32* %nsatoms, i64 %idxprom6
  %3 = load i32* %arrayidx7, align 4, !tbaa !0
  %arrayidx9 = getelementptr inbounds i32* %shift, i64 %indvars.iv889
  %4 = load i32* %arrayidx9, align 4, !tbaa !0
  %mul10 = mul nsw i32 %4, 3
  %idxprom11 = sext i32 %mul10 to i64
  %arrayidx12 = getelementptr inbounds float* %shiftvec, i64 %idxprom11
  %5 = load float* %arrayidx12, align 4, !tbaa !3
  %add13 = add nsw i32 %mul10, 1
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds float* %shiftvec, i64 %idxprom14
  %6 = load float* %arrayidx15, align 4, !tbaa !3
  %add16 = add nsw i32 %mul10, 2
  %idxprom17 = sext i32 %add16 to i64
  %arrayidx18 = getelementptr inbounds float* %shiftvec, i64 %idxprom17
  %7 = load float* %arrayidx18, align 4, !tbaa !3
  %arrayidx20 = getelementptr inbounds i32* %iinr, i64 %indvars.iv889
  %8 = load i32* %arrayidx20, align 4, !tbaa !0
  %mul21 = mul i32 %8, 3
  %arrayidx23 = getelementptr inbounds i32* %jindex, i64 %indvars.iv889
  %9 = load i32* %arrayidx23, align 4, !tbaa !0
  %indvars.iv.next890 = add i64 %indvars.iv889, 1
  %arrayidx26 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next890
  %10 = load i32* %arrayidx26, align 4, !tbaa !0
  %cmp28819 = icmp sgt i32 %2, 0
  br i1 %cmp28819, label %for.body29.lr.ph, label %for.cond174.loopexit

for.body29.lr.ph:                                 ; preds = %for.body
  %cmp49808 = icmp slt i32 %9, %10
  %arrayidx151 = getelementptr inbounds float* %fshift, i64 %idxprom11
  %arrayidx157 = getelementptr inbounds float* %fshift, i64 %idxprom14
  %arrayidx164 = getelementptr inbounds float* %fshift, i64 %idxprom17
  %11 = sext i32 %9 to i64
  %12 = sext i32 %8 to i64
  %13 = sext i32 %mul21 to i64
  %14 = add i32 %2, %8
  %15 = mul i32 %14, 3
  br label %for.body29

for.body29:                                       ; preds = %for.end, %for.body29.lr.ph
  %indvars.iv867 = phi i64 [ %13, %for.body29.lr.ph ], [ %indvars.iv.next868, %for.end ]
  %indvars.iv865 = phi i64 [ %12, %for.body29.lr.ph ], [ %indvars.iv.next866, %for.end ]
  %s.0822 = phi i32 [ 0, %for.body29.lr.ph ], [ %inc172, %for.end ]
  %vctot.0821 = phi float [ 0.000000e+00, %for.body29.lr.ph ], [ %vctot.1.lcssa, %for.end ]
  %vnbtot.0820 = phi float [ 0.000000e+00, %for.body29.lr.ph ], [ %vnbtot.1.lcssa, %for.end ]
  %arrayidx31 = getelementptr inbounds float* %pos, i64 %indvars.iv867
  %16 = load float* %arrayidx31, align 4, !tbaa !3
  %add32 = fadd float %5, %16
  %17 = add nsw i64 %indvars.iv867, 1
  %arrayidx35 = getelementptr inbounds float* %pos, i64 %17
  %18 = load float* %arrayidx35, align 4, !tbaa !3
  %add36 = fadd float %6, %18
  %19 = add nsw i64 %indvars.iv867, 2
  %arrayidx39 = getelementptr inbounds float* %pos, i64 %19
  %20 = load float* %arrayidx39, align 4, !tbaa !3
  %add40 = fadd float %7, %20
  %arrayidx42 = getelementptr inbounds float* %charge, i64 %indvars.iv865
  %21 = load float* %arrayidx42, align 4, !tbaa !3
  %mul43 = fmul float %21, %facel
  %arrayidx46 = getelementptr inbounds i32* %type, i64 %indvars.iv865
  %22 = load i32* %arrayidx46, align 4, !tbaa !0
  %mul47 = mul i32 %22, %ntype
  br i1 %cmp49808, label %for.body50, label %for.end

for.body50:                                       ; preds = %for.body29, %for.body50
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body50 ], [ %11, %for.body29 ]
  %fiz1.0813 = phi float [ %add111, %for.body50 ], [ 0.000000e+00, %for.body29 ]
  %fiy1.0812 = phi float [ %add110, %for.body50 ], [ 0.000000e+00, %for.body29 ]
  %fix1.0811 = phi float [ %add109, %for.body50 ], [ 0.000000e+00, %for.body29 ]
  %vctot.1810 = phi float [ %add105, %for.body50 ], [ %vctot.0821, %for.body29 ]
  %vnbtot.1809 = phi float [ %sub95, %for.body50 ], [ %vnbtot.0820, %for.body29 ]
  %arrayidx52 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %23 = load i32* %arrayidx52, align 4, !tbaa !0
  %mul53 = mul nsw i32 %23, 3
  %idxprom54 = sext i32 %mul53 to i64
  %arrayidx55 = getelementptr inbounds float* %pos, i64 %idxprom54
  %24 = load float* %arrayidx55, align 4, !tbaa !3
  %add56 = add nsw i32 %mul53, 1
  %idxprom57 = sext i32 %add56 to i64
  %arrayidx58 = getelementptr inbounds float* %pos, i64 %idxprom57
  %25 = load float* %arrayidx58, align 4, !tbaa !3
  %add59 = add nsw i32 %mul53, 2
  %idxprom60 = sext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds float* %pos, i64 %idxprom60
  %26 = load float* %arrayidx61, align 4, !tbaa !3
  %sub = fsub float %add32, %24
  %sub62 = fsub float %add36, %25
  %sub63 = fsub float %add40, %26
  %mul64 = fmul float %sub, %sub
  %mul65 = fmul float %sub62, %sub62
  %add66 = fadd float %mul64, %mul65
  %mul67 = fmul float %sub63, %sub63
  %add68 = fadd float %add66, %mul67
  %conv = fpext float %add68 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv69 = fptrunc double %div to float
  %mul70 = fmul float %add68, %conv69
  %mul71 = fmul float %conv69, %conv69
  %mul72 = fmul float %mul71, %mul71
  %mul73 = fmul float %mul71, %mul72
  %idxprom74 = sext i32 %23 to i64
  %arrayidx75 = getelementptr inbounds i32* %type, i64 %idxprom74
  %27 = load i32* %arrayidx75, align 4, !tbaa !0
  %tmp = add i32 %27, %mul47
  %tmp805 = mul i32 %tmp, 3
  %idxprom78 = sext i32 %tmp805 to i64
  %arrayidx79 = getelementptr inbounds float* %nbfp, i64 %idxprom78
  %28 = load float* %arrayidx79, align 4, !tbaa !3
  %mul80 = fmul float %28, %mul73
  %add81 = add nsw i32 %tmp805, 2
  %idxprom82 = sext i32 %add81 to i64
  %arrayidx83 = getelementptr inbounds float* %nbfp, i64 %idxprom82
  %29 = load float* %arrayidx83, align 4, !tbaa !3
  %mul84 = fmul float %mul70, %29
  %sub85 = fsub float -0.000000e+00, %mul84
  %conv86 = fpext float %sub85 to double
  %call87 = tail call double @exp(double %conv86) #2
  %add88 = add nsw i32 %tmp805, 1
  %idxprom89 = sext i32 %add88 to i64
  %arrayidx90 = getelementptr inbounds float* %nbfp, i64 %idxprom89
  %30 = load float* %arrayidx90, align 4, !tbaa !3
  %conv91 = fpext float %30 to double
  %mul92 = fmul double %call87, %conv91
  %conv93 = fptrunc double %mul92 to float
  %add94 = fadd float %vnbtot.1809, %conv93
  %sub95 = fsub float %add94, %mul80
  %arrayidx97 = getelementptr inbounds float* %charge, i64 %idxprom74
  %31 = load float* %arrayidx97, align 4, !tbaa !3
  %mul98 = fmul float %mul43, %31
  %mul99 = fmul float %conv69, %mul98
  %mul100 = fmul float %mul84, %conv93
  %mul101 = fmul float %mul80, 6.000000e+00
  %sub102 = fsub float %mul100, %mul101
  %add103 = fadd float %mul99, %sub102
  %mul104 = fmul float %mul71, %add103
  %add105 = fadd float %vctot.1810, %mul99
  %mul106 = fmul float %sub, %mul104
  %mul107 = fmul float %sub62, %mul104
  %mul108 = fmul float %sub63, %mul104
  %add109 = fadd float %fix1.0811, %mul106
  %add110 = fadd float %fiy1.0812, %mul107
  %add111 = fadd float %fiz1.0813, %mul108
  %arrayidx113 = getelementptr inbounds float* %faction, i64 %idxprom54
  %32 = load float* %arrayidx113, align 4, !tbaa !3
  %sub114 = fsub float %32, %mul106
  store float %sub114, float* %arrayidx113, align 4, !tbaa !3
  %arrayidx119 = getelementptr inbounds float* %faction, i64 %idxprom57
  %33 = load float* %arrayidx119, align 4, !tbaa !3
  %sub120 = fsub float %33, %mul107
  store float %sub120, float* %arrayidx119, align 4, !tbaa !3
  %arrayidx126 = getelementptr inbounds float* %faction, i64 %idxprom60
  %34 = load float* %arrayidx126, align 4, !tbaa !3
  %sub127 = fsub float %34, %mul108
  store float %sub127, float* %arrayidx126, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %35 = trunc i64 %indvars.iv.next to i32
  %cmp49 = icmp slt i32 %35, %10
  br i1 %cmp49, label %for.body50, label %for.end

for.end:                                          ; preds = %for.body50, %for.body29
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add111, %for.body50 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add110, %for.body50 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add109, %for.body50 ]
  %vctot.1.lcssa = phi float [ %vctot.0821, %for.body29 ], [ %add105, %for.body50 ]
  %vnbtot.1.lcssa = phi float [ %vnbtot.0820, %for.body29 ], [ %sub95, %for.body50 ]
  %arrayidx132 = getelementptr inbounds float* %faction, i64 %indvars.iv867
  %36 = load float* %arrayidx132, align 4, !tbaa !3
  %add133 = fadd float %fix1.0.lcssa, %36
  store float %add133, float* %arrayidx132, align 4, !tbaa !3
  %arrayidx138 = getelementptr inbounds float* %faction, i64 %17
  %37 = load float* %arrayidx138, align 4, !tbaa !3
  %add139 = fadd float %fiy1.0.lcssa, %37
  store float %add139, float* %arrayidx138, align 4, !tbaa !3
  %arrayidx145 = getelementptr inbounds float* %faction, i64 %19
  %38 = load float* %arrayidx145, align 4, !tbaa !3
  %add146 = fadd float %fiz1.0.lcssa, %38
  store float %add146, float* %arrayidx145, align 4, !tbaa !3
  %39 = load float* %arrayidx151, align 4, !tbaa !3
  %add152 = fadd float %fix1.0.lcssa, %39
  store float %add152, float* %arrayidx151, align 4, !tbaa !3
  %40 = load float* %arrayidx157, align 4, !tbaa !3
  %add158 = fadd float %fiy1.0.lcssa, %40
  store float %add158, float* %arrayidx157, align 4, !tbaa !3
  %41 = load float* %arrayidx164, align 4, !tbaa !3
  %add165 = fadd float %fiz1.0.lcssa, %41
  store float %add165, float* %arrayidx164, align 4, !tbaa !3
  %indvars.iv.next866 = add i64 %indvars.iv865, 1
  %indvars.iv.next868 = add i64 %indvars.iv867, 3
  %inc172 = add nsw i32 %s.0822, 1
  %exitcond = icmp eq i32 %inc172, %2
  br i1 %exitcond, label %for.cond27.for.cond174.loopexit_crit_edge, label %for.body29

for.cond27.for.cond174.loopexit_crit_edge:        ; preds = %for.end
  %42 = add i32 %2, %8
  br label %for.cond174.loopexit

for.cond174.loopexit:                             ; preds = %for.cond27.for.cond174.loopexit_crit_edge, %for.body
  %ii.0.lcssa = phi i32 [ %42, %for.cond27.for.cond174.loopexit_crit_edge ], [ %8, %for.body ]
  %ii3.0.lcssa = phi i32 [ %15, %for.cond27.for.cond174.loopexit_crit_edge ], [ %mul21, %for.body ]
  %vctot.0.lcssa = phi float [ %vctot.1.lcssa, %for.cond27.for.cond174.loopexit_crit_edge ], [ 0.000000e+00, %for.body ]
  %vnbtot.0.lcssa = phi float [ %vnbtot.1.lcssa, %for.cond27.for.cond174.loopexit_crit_edge ], [ 0.000000e+00, %for.body ]
  %cmp175839 = icmp slt i32 %2, %3
  br i1 %cmp175839, label %for.body177.lr.ph, label %for.cond297.loopexit

for.body177.lr.ph:                                ; preds = %for.cond174.loopexit
  %cmp193829 = icmp slt i32 %9, %10
  %arrayidx274 = getelementptr inbounds float* %fshift, i64 %idxprom11
  %arrayidx280 = getelementptr inbounds float* %fshift, i64 %idxprom14
  %arrayidx287 = getelementptr inbounds float* %fshift, i64 %idxprom17
  %43 = sext i32 %9 to i64
  %44 = sext i32 %ii.0.lcssa to i64
  %45 = sext i32 %ii3.0.lcssa to i64
  %46 = mul i32 %3, 3
  %47 = add i32 %ii.0.lcssa, %3
  br label %for.body177

for.body177:                                      ; preds = %for.end253, %for.body177.lr.ph
  %indvars.iv875 = phi i64 [ %45, %for.body177.lr.ph ], [ %indvars.iv.next876, %for.end253 ]
  %indvars.iv873 = phi i64 [ %44, %for.body177.lr.ph ], [ %indvars.iv.next874, %for.end253 ]
  %s.1841 = phi i32 [ %2, %for.body177.lr.ph ], [ %inc295, %for.end253 ]
  %vctot.2840 = phi float [ %vctot.0.lcssa, %for.body177.lr.ph ], [ %vctot.3.lcssa, %for.end253 ]
  %arrayidx179 = getelementptr inbounds float* %pos, i64 %indvars.iv875
  %48 = load float* %arrayidx179, align 4, !tbaa !3
  %add180 = fadd float %5, %48
  %49 = add nsw i64 %indvars.iv875, 1
  %arrayidx183 = getelementptr inbounds float* %pos, i64 %49
  %50 = load float* %arrayidx183, align 4, !tbaa !3
  %add184 = fadd float %6, %50
  %51 = add nsw i64 %indvars.iv875, 2
  %arrayidx187 = getelementptr inbounds float* %pos, i64 %51
  %52 = load float* %arrayidx187, align 4, !tbaa !3
  %add188 = fadd float %7, %52
  %arrayidx190 = getelementptr inbounds float* %charge, i64 %indvars.iv873
  %53 = load float* %arrayidx190, align 4, !tbaa !3
  %mul191 = fmul float %53, %facel
  br i1 %cmp193829, label %for.body195, label %for.end253

for.body195:                                      ; preds = %for.body177, %for.body195
  %indvars.iv871 = phi i64 [ %indvars.iv.next872, %for.body195 ], [ %43, %for.body177 ]
  %fiz1.1833 = phi float [ %add231, %for.body195 ], [ 0.000000e+00, %for.body177 ]
  %fiy1.1832 = phi float [ %add230, %for.body195 ], [ 0.000000e+00, %for.body177 ]
  %fix1.1831 = phi float [ %add229, %for.body195 ], [ 0.000000e+00, %for.body177 ]
  %vctot.3830 = phi float [ %add225, %for.body195 ], [ %vctot.2840, %for.body177 ]
  %arrayidx197 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv871
  %54 = load i32* %arrayidx197, align 4, !tbaa !0
  %mul198 = mul nsw i32 %54, 3
  %idxprom199 = sext i32 %mul198 to i64
  %arrayidx200 = getelementptr inbounds float* %pos, i64 %idxprom199
  %55 = load float* %arrayidx200, align 4, !tbaa !3
  %add201 = add nsw i32 %mul198, 1
  %idxprom202 = sext i32 %add201 to i64
  %arrayidx203 = getelementptr inbounds float* %pos, i64 %idxprom202
  %56 = load float* %arrayidx203, align 4, !tbaa !3
  %add204 = add nsw i32 %mul198, 2
  %idxprom205 = sext i32 %add204 to i64
  %arrayidx206 = getelementptr inbounds float* %pos, i64 %idxprom205
  %57 = load float* %arrayidx206, align 4, !tbaa !3
  %sub207 = fsub float %add180, %55
  %sub208 = fsub float %add184, %56
  %sub209 = fsub float %add188, %57
  %mul210 = fmul float %sub207, %sub207
  %mul211 = fmul float %sub208, %sub208
  %add212 = fadd float %mul210, %mul211
  %mul213 = fmul float %sub209, %sub209
  %add214 = fadd float %add212, %mul213
  %conv215 = fpext float %add214 to double
  %call216 = tail call double @sqrt(double %conv215) #2
  %div217 = fdiv double 1.000000e+00, %call216
  %conv218 = fptrunc double %div217 to float
  %mul219 = fmul float %conv218, %conv218
  %idxprom220 = sext i32 %54 to i64
  %arrayidx221 = getelementptr inbounds float* %charge, i64 %idxprom220
  %58 = load float* %arrayidx221, align 4, !tbaa !3
  %mul222 = fmul float %mul191, %58
  %mul223 = fmul float %conv218, %mul222
  %mul224 = fmul float %mul219, %mul223
  %add225 = fadd float %vctot.3830, %mul223
  %mul226 = fmul float %sub207, %mul224
  %mul227 = fmul float %sub208, %mul224
  %mul228 = fmul float %sub209, %mul224
  %add229 = fadd float %fix1.1831, %mul226
  %add230 = fadd float %fiy1.1832, %mul227
  %add231 = fadd float %fiz1.1833, %mul228
  %arrayidx233 = getelementptr inbounds float* %faction, i64 %idxprom199
  %59 = load float* %arrayidx233, align 4, !tbaa !3
  %sub234 = fsub float %59, %mul226
  store float %sub234, float* %arrayidx233, align 4, !tbaa !3
  %arrayidx239 = getelementptr inbounds float* %faction, i64 %idxprom202
  %60 = load float* %arrayidx239, align 4, !tbaa !3
  %sub240 = fsub float %60, %mul227
  store float %sub240, float* %arrayidx239, align 4, !tbaa !3
  %arrayidx246 = getelementptr inbounds float* %faction, i64 %idxprom205
  %61 = load float* %arrayidx246, align 4, !tbaa !3
  %sub247 = fsub float %61, %mul228
  store float %sub247, float* %arrayidx246, align 4, !tbaa !3
  %indvars.iv.next872 = add i64 %indvars.iv871, 1
  %62 = trunc i64 %indvars.iv.next872 to i32
  %cmp193 = icmp slt i32 %62, %10
  br i1 %cmp193, label %for.body195, label %for.end253

for.end253:                                       ; preds = %for.body195, %for.body177
  %fiz1.1.lcssa = phi float [ 0.000000e+00, %for.body177 ], [ %add231, %for.body195 ]
  %fiy1.1.lcssa = phi float [ 0.000000e+00, %for.body177 ], [ %add230, %for.body195 ]
  %fix1.1.lcssa = phi float [ 0.000000e+00, %for.body177 ], [ %add229, %for.body195 ]
  %vctot.3.lcssa = phi float [ %vctot.2840, %for.body177 ], [ %add225, %for.body195 ]
  %arrayidx255 = getelementptr inbounds float* %faction, i64 %indvars.iv875
  %63 = load float* %arrayidx255, align 4, !tbaa !3
  %add256 = fadd float %fix1.1.lcssa, %63
  store float %add256, float* %arrayidx255, align 4, !tbaa !3
  %arrayidx261 = getelementptr inbounds float* %faction, i64 %49
  %64 = load float* %arrayidx261, align 4, !tbaa !3
  %add262 = fadd float %fiy1.1.lcssa, %64
  store float %add262, float* %arrayidx261, align 4, !tbaa !3
  %arrayidx268 = getelementptr inbounds float* %faction, i64 %51
  %65 = load float* %arrayidx268, align 4, !tbaa !3
  %add269 = fadd float %fiz1.1.lcssa, %65
  store float %add269, float* %arrayidx268, align 4, !tbaa !3
  %66 = load float* %arrayidx274, align 4, !tbaa !3
  %add275 = fadd float %fix1.1.lcssa, %66
  store float %add275, float* %arrayidx274, align 4, !tbaa !3
  %67 = load float* %arrayidx280, align 4, !tbaa !3
  %add281 = fadd float %fiy1.1.lcssa, %67
  store float %add281, float* %arrayidx280, align 4, !tbaa !3
  %68 = load float* %arrayidx287, align 4, !tbaa !3
  %add288 = fadd float %fiz1.1.lcssa, %68
  store float %add288, float* %arrayidx287, align 4, !tbaa !3
  %indvars.iv.next874 = add i64 %indvars.iv873, 1
  %indvars.iv.next876 = add i64 %indvars.iv875, 3
  %inc295 = add nsw i32 %s.1841, 1
  %exitcond879 = icmp eq i32 %inc295, %3
  br i1 %exitcond879, label %for.cond174.for.cond297.loopexit_crit_edge, label %for.body177

for.cond174.for.cond297.loopexit_crit_edge:       ; preds = %for.end253
  %69 = add i32 %ii3.0.lcssa, %46
  %70 = mul i32 %2, -3
  %71 = add i32 %69, %70
  %72 = sub i32 %47, %2
  br label %for.cond297.loopexit

for.cond297.loopexit:                             ; preds = %for.cond174.for.cond297.loopexit_crit_edge, %for.cond174.loopexit
  %ii.1.lcssa = phi i32 [ %72, %for.cond174.for.cond297.loopexit_crit_edge ], [ %ii.0.lcssa, %for.cond174.loopexit ]
  %ii3.1.lcssa = phi i32 [ %71, %for.cond174.for.cond297.loopexit_crit_edge ], [ %ii3.0.lcssa, %for.cond174.loopexit ]
  %vctot.2.lcssa = phi float [ %vctot.3.lcssa, %for.cond174.for.cond297.loopexit_crit_edge ], [ %vctot.0.lcssa, %for.cond174.loopexit ]
  %cmp298857 = icmp slt i32 %3, %1
  br i1 %cmp298857, label %for.body300.lr.ph, label %for.end443

for.body300.lr.ph:                                ; preds = %for.cond297.loopexit
  %cmp317847 = icmp slt i32 %9, %10
  %arrayidx421 = getelementptr inbounds float* %fshift, i64 %idxprom11
  %arrayidx427 = getelementptr inbounds float* %fshift, i64 %idxprom14
  %arrayidx434 = getelementptr inbounds float* %fshift, i64 %idxprom17
  %73 = sext i32 %9 to i64
  %74 = sext i32 %ii.1.lcssa to i64
  %75 = sext i32 %ii3.1.lcssa to i64
  br label %for.body300

for.body300:                                      ; preds = %for.end400, %for.body300.lr.ph
  %indvars.iv884 = phi i64 [ %75, %for.body300.lr.ph ], [ %indvars.iv.next885, %for.end400 ]
  %indvars.iv882 = phi i64 [ %74, %for.body300.lr.ph ], [ %indvars.iv.next883, %for.end400 ]
  %s.2859 = phi i32 [ %3, %for.body300.lr.ph ], [ %inc442, %for.end400 ]
  %vnbtot.2858 = phi float [ %vnbtot.0.lcssa, %for.body300.lr.ph ], [ %vnbtot.3.lcssa, %for.end400 ]
  %arrayidx302 = getelementptr inbounds float* %pos, i64 %indvars.iv884
  %76 = load float* %arrayidx302, align 4, !tbaa !3
  %add303 = fadd float %5, %76
  %77 = add nsw i64 %indvars.iv884, 1
  %arrayidx306 = getelementptr inbounds float* %pos, i64 %77
  %78 = load float* %arrayidx306, align 4, !tbaa !3
  %add307 = fadd float %6, %78
  %79 = add nsw i64 %indvars.iv884, 2
  %arrayidx310 = getelementptr inbounds float* %pos, i64 %79
  %80 = load float* %arrayidx310, align 4, !tbaa !3
  %add311 = fadd float %7, %80
  %arrayidx314 = getelementptr inbounds i32* %type, i64 %indvars.iv882
  %81 = load i32* %arrayidx314, align 4, !tbaa !0
  %mul315 = mul i32 %81, %ntype
  br i1 %cmp317847, label %for.body319, label %for.end400

for.body319:                                      ; preds = %for.body300, %for.body319
  %indvars.iv880 = phi i64 [ %indvars.iv.next881, %for.body319 ], [ %73, %for.body300 ]
  %fiz1.2851 = phi float [ %add378, %for.body319 ], [ 0.000000e+00, %for.body300 ]
  %fiy1.2850 = phi float [ %add377, %for.body319 ], [ 0.000000e+00, %for.body300 ]
  %fix1.2849 = phi float [ %add376, %for.body319 ], [ 0.000000e+00, %for.body300 ]
  %vnbtot.3848 = phi float [ %sub368, %for.body319 ], [ %vnbtot.2858, %for.body300 ]
  %arrayidx321 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv880
  %82 = load i32* %arrayidx321, align 4, !tbaa !0
  %mul322 = mul nsw i32 %82, 3
  %idxprom323 = sext i32 %mul322 to i64
  %arrayidx324 = getelementptr inbounds float* %pos, i64 %idxprom323
  %83 = load float* %arrayidx324, align 4, !tbaa !3
  %add325 = add nsw i32 %mul322, 1
  %idxprom326 = sext i32 %add325 to i64
  %arrayidx327 = getelementptr inbounds float* %pos, i64 %idxprom326
  %84 = load float* %arrayidx327, align 4, !tbaa !3
  %add328 = add nsw i32 %mul322, 2
  %idxprom329 = sext i32 %add328 to i64
  %arrayidx330 = getelementptr inbounds float* %pos, i64 %idxprom329
  %85 = load float* %arrayidx330, align 4, !tbaa !3
  %sub331 = fsub float %add303, %83
  %sub332 = fsub float %add307, %84
  %sub333 = fsub float %add311, %85
  %mul334 = fmul float %sub331, %sub331
  %mul335 = fmul float %sub332, %sub332
  %add336 = fadd float %mul334, %mul335
  %mul337 = fmul float %sub333, %sub333
  %add338 = fadd float %add336, %mul337
  %conv339 = fpext float %add338 to double
  %call340 = tail call double @sqrt(double %conv339) #2
  %div341 = fdiv double 1.000000e+00, %call340
  %conv342 = fptrunc double %div341 to float
  %mul343 = fmul float %add338, %conv342
  %mul344 = fmul float %conv342, %conv342
  %mul345 = fmul float %mul344, %mul344
  %mul346 = fmul float %mul344, %mul345
  %idxprom347 = sext i32 %82 to i64
  %arrayidx348 = getelementptr inbounds i32* %type, i64 %idxprom347
  %86 = load i32* %arrayidx348, align 4, !tbaa !0
  %tmp806 = add i32 %86, %mul315
  %tmp807 = mul i32 %tmp806, 3
  %idxprom351 = sext i32 %tmp807 to i64
  %arrayidx352 = getelementptr inbounds float* %nbfp, i64 %idxprom351
  %87 = load float* %arrayidx352, align 4, !tbaa !3
  %mul353 = fmul float %87, %mul346
  %add354 = add nsw i32 %tmp807, 2
  %idxprom355 = sext i32 %add354 to i64
  %arrayidx356 = getelementptr inbounds float* %nbfp, i64 %idxprom355
  %88 = load float* %arrayidx356, align 4, !tbaa !3
  %mul357 = fmul float %mul343, %88
  %sub358 = fsub float -0.000000e+00, %mul357
  %conv359 = fpext float %sub358 to double
  %call360 = tail call double @exp(double %conv359) #2
  %add361 = add nsw i32 %tmp807, 1
  %idxprom362 = sext i32 %add361 to i64
  %arrayidx363 = getelementptr inbounds float* %nbfp, i64 %idxprom362
  %89 = load float* %arrayidx363, align 4, !tbaa !3
  %conv364 = fpext float %89 to double
  %mul365 = fmul double %call360, %conv364
  %conv366 = fptrunc double %mul365 to float
  %add367 = fadd float %vnbtot.3848, %conv366
  %sub368 = fsub float %add367, %mul353
  %mul369 = fmul float %mul357, %conv366
  %mul370 = fmul float %mul353, 6.000000e+00
  %sub371 = fsub float %mul369, %mul370
  %mul372 = fmul float %mul344, %sub371
  %mul373 = fmul float %sub331, %mul372
  %mul374 = fmul float %sub332, %mul372
  %mul375 = fmul float %sub333, %mul372
  %add376 = fadd float %fix1.2849, %mul373
  %add377 = fadd float %fiy1.2850, %mul374
  %add378 = fadd float %fiz1.2851, %mul375
  %arrayidx380 = getelementptr inbounds float* %faction, i64 %idxprom323
  %90 = load float* %arrayidx380, align 4, !tbaa !3
  %sub381 = fsub float %90, %mul373
  store float %sub381, float* %arrayidx380, align 4, !tbaa !3
  %arrayidx386 = getelementptr inbounds float* %faction, i64 %idxprom326
  %91 = load float* %arrayidx386, align 4, !tbaa !3
  %sub387 = fsub float %91, %mul374
  store float %sub387, float* %arrayidx386, align 4, !tbaa !3
  %arrayidx393 = getelementptr inbounds float* %faction, i64 %idxprom329
  %92 = load float* %arrayidx393, align 4, !tbaa !3
  %sub394 = fsub float %92, %mul375
  store float %sub394, float* %arrayidx393, align 4, !tbaa !3
  %indvars.iv.next881 = add i64 %indvars.iv880, 1
  %93 = trunc i64 %indvars.iv.next881 to i32
  %cmp317 = icmp slt i32 %93, %10
  br i1 %cmp317, label %for.body319, label %for.end400

for.end400:                                       ; preds = %for.body319, %for.body300
  %fiz1.2.lcssa = phi float [ 0.000000e+00, %for.body300 ], [ %add378, %for.body319 ]
  %fiy1.2.lcssa = phi float [ 0.000000e+00, %for.body300 ], [ %add377, %for.body319 ]
  %fix1.2.lcssa = phi float [ 0.000000e+00, %for.body300 ], [ %add376, %for.body319 ]
  %vnbtot.3.lcssa = phi float [ %vnbtot.2858, %for.body300 ], [ %sub368, %for.body319 ]
  %arrayidx402 = getelementptr inbounds float* %faction, i64 %indvars.iv884
  %94 = load float* %arrayidx402, align 4, !tbaa !3
  %add403 = fadd float %fix1.2.lcssa, %94
  store float %add403, float* %arrayidx402, align 4, !tbaa !3
  %arrayidx408 = getelementptr inbounds float* %faction, i64 %77
  %95 = load float* %arrayidx408, align 4, !tbaa !3
  %add409 = fadd float %fiy1.2.lcssa, %95
  store float %add409, float* %arrayidx408, align 4, !tbaa !3
  %arrayidx415 = getelementptr inbounds float* %faction, i64 %79
  %96 = load float* %arrayidx415, align 4, !tbaa !3
  %add416 = fadd float %fiz1.2.lcssa, %96
  store float %add416, float* %arrayidx415, align 4, !tbaa !3
  %97 = load float* %arrayidx421, align 4, !tbaa !3
  %add422 = fadd float %fix1.2.lcssa, %97
  store float %add422, float* %arrayidx421, align 4, !tbaa !3
  %98 = load float* %arrayidx427, align 4, !tbaa !3
  %add428 = fadd float %fiy1.2.lcssa, %98
  store float %add428, float* %arrayidx427, align 4, !tbaa !3
  %99 = load float* %arrayidx434, align 4, !tbaa !3
  %add435 = fadd float %fiz1.2.lcssa, %99
  store float %add435, float* %arrayidx434, align 4, !tbaa !3
  %indvars.iv.next883 = add i64 %indvars.iv882, 1
  %indvars.iv.next885 = add i64 %indvars.iv884, 3
  %inc442 = add nsw i32 %s.2859, 1
  %exitcond888 = icmp eq i32 %inc442, %1
  br i1 %exitcond888, label %for.end443, label %for.body300

for.end443:                                       ; preds = %for.end400, %for.cond297.loopexit
  %vnbtot.2.lcssa = phi float [ %vnbtot.0.lcssa, %for.cond297.loopexit ], [ %vnbtot.3.lcssa, %for.end400 ]
  %arrayidx445 = getelementptr inbounds i32* %gid, i64 %indvars.iv889
  %100 = load i32* %arrayidx445, align 4, !tbaa !0
  %idxprom446 = sext i32 %100 to i64
  %arrayidx447 = getelementptr inbounds float* %Vc, i64 %idxprom446
  %101 = load float* %arrayidx447, align 4, !tbaa !3
  %add448 = fadd float %vctot.2.lcssa, %101
  store float %add448, float* %arrayidx447, align 4, !tbaa !3
  %arrayidx452 = getelementptr inbounds float* %Vnb, i64 %idxprom446
  %102 = load float* %arrayidx452, align 4, !tbaa !3
  %add453 = fadd float %vnbtot.2.lcssa, %102
  store float %add453, float* %arrayidx452, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next890 to i32
  %exitcond891 = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond891, label %for.end458, label %for.body

for.end458:                                       ; preds = %for.end443, %entry
  ret void
}
