define void @inl0310(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb, float %tabscale, float* nocapture %VFtab, i32* nocapture %nsatoms) #0 {
entry:
  %cmp752 = icmp sgt i32 %nri, 0
  br i1 %cmp752, label %for.body.lr.ph, label %for.end398

for.body.lr.ph:                                   ; preds = %entry
  %mul220 = shl i32 %ntype, 1
  br label %for.body

for.body:                                         ; preds = %for.end388, %for.body.lr.ph
  %indvars.iv769 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next770, %for.end388 ]
  %0 = trunc i64 %indvars.iv769 to i32
  %mul = mul nsw i32 %0, 3
  %idxprom = sext i32 %mul to i64
  %arrayidx = getelementptr inbounds i32* %nsatoms, i64 %idxprom
  %1 = load i32* %arrayidx, align 4, !tbaa !0
  %add = add nsw i32 %mul, 1
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds i32* %nsatoms, i64 %idxprom2
  %2 = load i32* %arrayidx3, align 4, !tbaa !0
  %add5 = add nsw i32 %mul, 2
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds i32* %nsatoms, i64 %idxprom6
  %3 = load i32* %arrayidx7, align 4, !tbaa !0
  %arrayidx9 = getelementptr inbounds i32* %shift, i64 %indvars.iv769
  %4 = load i32* %arrayidx9, align 4, !tbaa !0
  %mul10 = mul nsw i32 %4, 3
  %idxprom11 = sext i32 %mul10 to i64
  %arrayidx12 = getelementptr inbounds float* %shiftvec, i64 %idxprom11
  %5 = load float* %arrayidx12, align 4, !tbaa !3
  %add13 = add nsw i32 %mul10, 1
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds float* %shiftvec, i64 %idxprom14
  %6 = load float* %arrayidx15, align 4, !tbaa !3
  %add16 = add nsw i32 %mul10, 2
  %idxprom17 = sext i32 %add16 to i64
  %arrayidx18 = getelementptr inbounds float* %shiftvec, i64 %idxprom17
  %7 = load float* %arrayidx18, align 4, !tbaa !3
  %arrayidx20 = getelementptr inbounds i32* %iinr, i64 %indvars.iv769
  %8 = load i32* %arrayidx20, align 4, !tbaa !0
  %arrayidx23 = getelementptr inbounds i32* %jindex, i64 %indvars.iv769
  %9 = load i32* %arrayidx23, align 4, !tbaa !0
  %indvars.iv.next770 = add i64 %indvars.iv769, 1
  %arrayidx26 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next770
  %10 = load i32* %arrayidx26, align 4, !tbaa !0
  %cmp28729 = icmp sgt i32 %2, 0
  br i1 %cmp28729, label %for.body29.lr.ph, label %for.end201

for.body29.lr.ph:                                 ; preds = %for.body
  %cmp46720 = icmp slt i32 %9, %10
  %arrayidx179 = getelementptr inbounds float* %fshift, i64 %idxprom11
  %arrayidx185 = getelementptr inbounds float* %fshift, i64 %idxprom14
  %arrayidx192 = getelementptr inbounds float* %fshift, i64 %idxprom17
  %11 = sext i32 %9 to i64
  %12 = sext i32 %8 to i64
  %13 = mul i32 %8, 3
  %14 = sext i32 %13 to i64
  br label %for.body29

for.body29:                                       ; preds = %for.end, %for.body29.lr.ph
  %indvars.iv756 = phi i64 [ %14, %for.body29.lr.ph ], [ %indvars.iv.next757, %for.end ]
  %indvars.iv754 = phi i64 [ %12, %for.body29.lr.ph ], [ %indvars.iv.next755, %for.end ]
  %s.0731 = phi i32 [ 0, %for.body29.lr.ph ], [ %inc200, %for.end ]
  %vnbtot.0730 = phi float [ 0.000000e+00, %for.body29.lr.ph ], [ %vnbtot.1.lcssa, %for.end ]
  %arrayidx31 = getelementptr inbounds float* %pos, i64 %indvars.iv756
  %15 = load float* %arrayidx31, align 4, !tbaa !3
  %add32 = fadd float %5, %15
  %16 = add nsw i64 %indvars.iv756, 1
  %arrayidx35 = getelementptr inbounds float* %pos, i64 %16
  %17 = load float* %arrayidx35, align 4, !tbaa !3
  %add36 = fadd float %6, %17
  %18 = add nsw i64 %indvars.iv756, 2
  %arrayidx39 = getelementptr inbounds float* %pos, i64 %18
  %19 = load float* %arrayidx39, align 4, !tbaa !3
  %add40 = fadd float %7, %19
  %arrayidx43 = getelementptr inbounds i32* %type, i64 %indvars.iv754
  %20 = load i32* %arrayidx43, align 4, !tbaa !0
  %mul44 = mul nsw i32 %mul220, %20
  br i1 %cmp46720, label %for.body47, label %for.end

for.body47:                                       ; preds = %for.body29, %for.body47
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body47 ], [ %11, %for.body29 ]
  %fiz1.0724 = phi float [ %add139, %for.body47 ], [ 0.000000e+00, %for.body29 ]
  %fiy1.0723 = phi float [ %add138, %for.body47 ], [ 0.000000e+00, %for.body29 ]
  %fix1.0722 = phi float [ %add137, %for.body47 ], [ 0.000000e+00, %for.body29 ]
  %vnbtot.1721 = phi float [ %add129, %for.body47 ], [ %vnbtot.0730, %for.body29 ]
  %arrayidx49 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %21 = load i32* %arrayidx49, align 4, !tbaa !0
  %mul50 = mul nsw i32 %21, 3
  %idxprom51 = sext i32 %mul50 to i64
  %arrayidx52 = getelementptr inbounds float* %pos, i64 %idxprom51
  %22 = load float* %arrayidx52, align 4, !tbaa !3
  %add53 = add nsw i32 %mul50, 1
  %idxprom54 = sext i32 %add53 to i64
  %arrayidx55 = getelementptr inbounds float* %pos, i64 %idxprom54
  %23 = load float* %arrayidx55, align 4, !tbaa !3
  %add56 = add nsw i32 %mul50, 2
  %idxprom57 = sext i32 %add56 to i64
  %arrayidx58 = getelementptr inbounds float* %pos, i64 %idxprom57
  %24 = load float* %arrayidx58, align 4, !tbaa !3
  %sub = fsub float %add32, %22
  %sub59 = fsub float %add36, %23
  %sub60 = fsub float %add40, %24
  %mul61 = fmul float %sub, %sub
  %mul62 = fmul float %sub59, %sub59
  %add63 = fadd float %mul61, %mul62
  %mul64 = fmul float %sub60, %sub60
  %add65 = fadd float %add63, %mul64
  %conv = fpext float %add65 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv66 = fptrunc double %div to float
  %mul67 = fmul float %add65, %conv66
  %mul68 = fmul float %mul67, %tabscale
  %conv69 = fptosi float %mul68 to i32
  %conv70 = sitofp i32 %conv69 to float
  %sub71 = fsub float %mul68, %conv70
  %mul72 = fmul float %sub71, %sub71
  %mul73 = shl nsw i32 %conv69, 3
  %idxprom74 = sext i32 %21 to i64
  %arrayidx75 = getelementptr inbounds i32* %type, i64 %idxprom74
  %25 = load i32* %arrayidx75, align 4, !tbaa !0
  %mul76 = shl nsw i32 %25, 1
  %add77 = add nsw i32 %mul76, %mul44
  %idxprom78 = sext i32 %add77 to i64
  %arrayidx79 = getelementptr inbounds float* %nbfp, i64 %idxprom78
  %26 = load float* %arrayidx79, align 4, !tbaa !3
  %add80712 = or i32 %add77, 1
  %idxprom81 = sext i32 %add80712 to i64
  %arrayidx82 = getelementptr inbounds float* %nbfp, i64 %idxprom81
  %27 = load float* %arrayidx82, align 4, !tbaa !3
  %idxprom83 = sext i32 %mul73 to i64
  %arrayidx84 = getelementptr inbounds float* %VFtab, i64 %idxprom83
  %28 = load float* %arrayidx84, align 4, !tbaa !3
  %add85713 = or i32 %mul73, 1
  %idxprom86 = sext i32 %add85713 to i64
  %arrayidx87 = getelementptr inbounds float* %VFtab, i64 %idxprom86
  %29 = load float* %arrayidx87, align 4, !tbaa !3
  %add88714 = or i32 %mul73, 2
  %idxprom89 = sext i32 %add88714 to i64
  %arrayidx90 = getelementptr inbounds float* %VFtab, i64 %idxprom89
  %30 = load float* %arrayidx90, align 4, !tbaa !3
  %mul91 = fmul float %sub71, %30
  %add92715 = or i32 %mul73, 3
  %idxprom93 = sext i32 %add92715 to i64
  %arrayidx94 = getelementptr inbounds float* %VFtab, i64 %idxprom93
  %31 = load float* %arrayidx94, align 4, !tbaa !3
  %mul95 = fmul float %mul72, %31
  %add96 = fadd float %29, %mul91
  %add97 = fadd float %add96, %mul95
  %mul98 = fmul float %sub71, %add97
  %add99 = fadd float %28, %mul98
  %add100 = fadd float %mul91, %add97
  %mul101 = fmul float %mul95, 2.000000e+00
  %add102 = fadd float %mul101, %add100
  %mul103 = fmul float %26, %add99
  %mul104 = fmul float %26, %add102
  %add105716 = or i32 %mul73, 4
  %idxprom106 = sext i32 %add105716 to i64
  %arrayidx107 = getelementptr inbounds float* %VFtab, i64 %idxprom106
  %32 = load float* %arrayidx107, align 4, !tbaa !3
  %add108717 = or i32 %mul73, 5
  %idxprom109 = sext i32 %add108717 to i64
  %arrayidx110 = getelementptr inbounds float* %VFtab, i64 %idxprom109
  %33 = load float* %arrayidx110, align 4, !tbaa !3
  %add111718 = or i32 %mul73, 6
  %idxprom112 = sext i32 %add111718 to i64
  %arrayidx113 = getelementptr inbounds float* %VFtab, i64 %idxprom112
  %34 = load float* %arrayidx113, align 4, !tbaa !3
  %mul114 = fmul float %sub71, %34
  %add115719 = or i32 %mul73, 7
  %idxprom116 = sext i32 %add115719 to i64
  %arrayidx117 = getelementptr inbounds float* %VFtab, i64 %idxprom116
  %35 = load float* %arrayidx117, align 4, !tbaa !3
  %mul118 = fmul float %mul72, %35
  %add119 = fadd float %33, %mul114
  %add120 = fadd float %add119, %mul118
  %mul121 = fmul float %sub71, %add120
  %add122 = fadd float %32, %mul121
  %add123 = fadd float %mul114, %add120
  %mul124 = fmul float %mul118, 2.000000e+00
  %add125 = fadd float %mul124, %add123
  %mul126 = fmul float %27, %add122
  %mul127 = fmul float %27, %add125
  %add128 = fadd float %vnbtot.1721, %mul103
  %add129 = fadd float %add128, %mul126
  %add130 = fadd float %mul104, %mul127
  %mul131 = fmul float %add130, %tabscale
  %36 = fmul float %conv66, %mul131
  %mul133 = fsub float -0.000000e+00, %36
  %mul134 = fmul float %sub, %mul133
  %mul135 = fmul float %sub59, %mul133
  %mul136 = fmul float %sub60, %mul133
  %add137 = fadd float %fix1.0722, %mul134
  %add138 = fadd float %fiy1.0723, %mul135
  %add139 = fadd float %fiz1.0724, %mul136
  %arrayidx141 = getelementptr inbounds float* %faction, i64 %idxprom51
  %37 = load float* %arrayidx141, align 4, !tbaa !3
  %sub142 = fsub float %37, %mul134
  store float %sub142, float* %arrayidx141, align 4, !tbaa !3
  %arrayidx147 = getelementptr inbounds float* %faction, i64 %idxprom54
  %38 = load float* %arrayidx147, align 4, !tbaa !3
  %sub148 = fsub float %38, %mul135
  store float %sub148, float* %arrayidx147, align 4, !tbaa !3
  %arrayidx154 = getelementptr inbounds float* %faction, i64 %idxprom57
  %39 = load float* %arrayidx154, align 4, !tbaa !3
  %sub155 = fsub float %39, %mul136
  store float %sub155, float* %arrayidx154, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %40 = trunc i64 %indvars.iv.next to i32
  %cmp46 = icmp slt i32 %40, %10
  br i1 %cmp46, label %for.body47, label %for.end

for.end:                                          ; preds = %for.body47, %for.body29
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add139, %for.body47 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add138, %for.body47 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add137, %for.body47 ]
  %vnbtot.1.lcssa = phi float [ %vnbtot.0730, %for.body29 ], [ %add129, %for.body47 ]
  %arrayidx160 = getelementptr inbounds float* %faction, i64 %indvars.iv756
  %41 = load float* %arrayidx160, align 4, !tbaa !3
  %add161 = fadd float %fix1.0.lcssa, %41
  store float %add161, float* %arrayidx160, align 4, !tbaa !3
  %arrayidx166 = getelementptr inbounds float* %faction, i64 %16
  %42 = load float* %arrayidx166, align 4, !tbaa !3
  %add167 = fadd float %fiy1.0.lcssa, %42
  store float %add167, float* %arrayidx166, align 4, !tbaa !3
  %arrayidx173 = getelementptr inbounds float* %faction, i64 %18
  %43 = load float* %arrayidx173, align 4, !tbaa !3
  %add174 = fadd float %fiz1.0.lcssa, %43
  store float %add174, float* %arrayidx173, align 4, !tbaa !3
  %44 = load float* %arrayidx179, align 4, !tbaa !3
  %add180 = fadd float %fix1.0.lcssa, %44
  store float %add180, float* %arrayidx179, align 4, !tbaa !3
  %45 = load float* %arrayidx185, align 4, !tbaa !3
  %add186 = fadd float %fiy1.0.lcssa, %45
  store float %add186, float* %arrayidx185, align 4, !tbaa !3
  %46 = load float* %arrayidx192, align 4, !tbaa !3
  %add193 = fadd float %fiz1.0.lcssa, %46
  store float %add193, float* %arrayidx192, align 4, !tbaa !3
  %indvars.iv.next755 = add i64 %indvars.iv754, 1
  %indvars.iv.next757 = add i64 %indvars.iv756, 3
  %inc200 = add nsw i32 %s.0731, 1
  %exitcond = icmp eq i32 %inc200, %2
  br i1 %exitcond, label %for.cond27.for.end201_crit_edge, label %for.body29

for.cond27.for.end201_crit_edge:                  ; preds = %for.end
  %47 = add i32 %2, %8
  br label %for.end201

for.end201:                                       ; preds = %for.cond27.for.end201_crit_edge, %for.body
  %ii.0.lcssa = phi i32 [ %47, %for.cond27.for.end201_crit_edge ], [ %8, %for.body ]
  %vnbtot.0.lcssa = phi float [ %vnbtot.1.lcssa, %for.cond27.for.end201_crit_edge ], [ 0.000000e+00, %for.body ]
  %cmp206746 = icmp slt i32 %3, %1
  br i1 %cmp206746, label %for.body208.lr.ph, label %for.end388

for.body208.lr.ph:                                ; preds = %for.end201
  %cmp225736 = icmp slt i32 %9, %10
  %arrayidx366 = getelementptr inbounds float* %fshift, i64 %idxprom11
  %arrayidx372 = getelementptr inbounds float* %fshift, i64 %idxprom14
  %arrayidx379 = getelementptr inbounds float* %fshift, i64 %idxprom17
  %48 = sext i32 %9 to i64
  %49 = add i32 %ii.0.lcssa, %3
  %50 = sub i32 %49, %2
  %51 = sext i32 %50 to i64
  %52 = mul i32 %50, 3
  %53 = sext i32 %52 to i64
  br label %for.body208

for.body208:                                      ; preds = %for.end345, %for.body208.lr.ph
  %indvars.iv764 = phi i64 [ %53, %for.body208.lr.ph ], [ %indvars.iv.next765, %for.end345 ]
  %indvars.iv762 = phi i64 [ %51, %for.body208.lr.ph ], [ %indvars.iv.next763, %for.end345 ]
  %s.1748 = phi i32 [ %3, %for.body208.lr.ph ], [ %inc387, %for.end345 ]
  %vnbtot.2747 = phi float [ %vnbtot.0.lcssa, %for.body208.lr.ph ], [ %vnbtot.3.lcssa, %for.end345 ]
  %arrayidx210 = getelementptr inbounds float* %pos, i64 %indvars.iv764
  %54 = load float* %arrayidx210, align 4, !tbaa !3
  %add211 = fadd float %5, %54
  %55 = add nsw i64 %indvars.iv764, 1
  %arrayidx214 = getelementptr inbounds float* %pos, i64 %55
  %56 = load float* %arrayidx214, align 4, !tbaa !3
  %add215 = fadd float %6, %56
  %57 = add nsw i64 %indvars.iv764, 2
  %arrayidx218 = getelementptr inbounds float* %pos, i64 %57
  %58 = load float* %arrayidx218, align 4, !tbaa !3
  %add219 = fadd float %7, %58
  %arrayidx222 = getelementptr inbounds i32* %type, i64 %indvars.iv762
  %59 = load i32* %arrayidx222, align 4, !tbaa !0
  %mul223 = mul nsw i32 %mul220, %59
  br i1 %cmp225736, label %for.body227, label %for.end345

for.body227:                                      ; preds = %for.body208, %for.body227
  %indvars.iv760 = phi i64 [ %indvars.iv.next761, %for.body227 ], [ %48, %for.body208 ]
  %fiz1.1740 = phi float [ %add323, %for.body227 ], [ 0.000000e+00, %for.body208 ]
  %fiy1.1739 = phi float [ %add322, %for.body227 ], [ 0.000000e+00, %for.body208 ]
  %fix1.1738 = phi float [ %add321, %for.body227 ], [ 0.000000e+00, %for.body208 ]
  %vnbtot.3737 = phi float [ %add313, %for.body227 ], [ %vnbtot.2747, %for.body208 ]
  %arrayidx229 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv760
  %60 = load i32* %arrayidx229, align 4, !tbaa !0
  %mul230 = mul nsw i32 %60, 3
  %idxprom231 = sext i32 %mul230 to i64
  %arrayidx232 = getelementptr inbounds float* %pos, i64 %idxprom231
  %61 = load float* %arrayidx232, align 4, !tbaa !3
  %add233 = add nsw i32 %mul230, 1
  %idxprom234 = sext i32 %add233 to i64
  %arrayidx235 = getelementptr inbounds float* %pos, i64 %idxprom234
  %62 = load float* %arrayidx235, align 4, !tbaa !3
  %add236 = add nsw i32 %mul230, 2
  %idxprom237 = sext i32 %add236 to i64
  %arrayidx238 = getelementptr inbounds float* %pos, i64 %idxprom237
  %63 = load float* %arrayidx238, align 4, !tbaa !3
  %sub239 = fsub float %add211, %61
  %sub240 = fsub float %add215, %62
  %sub241 = fsub float %add219, %63
  %mul242 = fmul float %sub239, %sub239
  %mul243 = fmul float %sub240, %sub240
  %add244 = fadd float %mul242, %mul243
  %mul245 = fmul float %sub241, %sub241
  %add246 = fadd float %add244, %mul245
  %conv247 = fpext float %add246 to double
  %call248 = tail call double @sqrt(double %conv247) #2
  %div249 = fdiv double 1.000000e+00, %call248
  %conv250 = fptrunc double %div249 to float
  %mul251 = fmul float %add246, %conv250
  %mul252 = fmul float %mul251, %tabscale
  %conv253 = fptosi float %mul252 to i32
  %conv254 = sitofp i32 %conv253 to float
  %sub255 = fsub float %mul252, %conv254
  %mul256 = fmul float %sub255, %sub255
  %mul257 = shl nsw i32 %conv253, 3
  %idxprom258 = sext i32 %60 to i64
  %arrayidx259 = getelementptr inbounds i32* %type, i64 %idxprom258
  %64 = load i32* %arrayidx259, align 4, !tbaa !0
  %mul260 = shl nsw i32 %64, 1
  %add261 = add nsw i32 %mul260, %mul223
  %idxprom262 = sext i32 %add261 to i64
  %arrayidx263 = getelementptr inbounds float* %nbfp, i64 %idxprom262
  %65 = load float* %arrayidx263, align 4, !tbaa !3
  %add264704 = or i32 %add261, 1
  %idxprom265 = sext i32 %add264704 to i64
  %arrayidx266 = getelementptr inbounds float* %nbfp, i64 %idxprom265
  %66 = load float* %arrayidx266, align 4, !tbaa !3
  %idxprom267 = sext i32 %mul257 to i64
  %arrayidx268 = getelementptr inbounds float* %VFtab, i64 %idxprom267
  %67 = load float* %arrayidx268, align 4, !tbaa !3
  %add269705 = or i32 %mul257, 1
  %idxprom270 = sext i32 %add269705 to i64
  %arrayidx271 = getelementptr inbounds float* %VFtab, i64 %idxprom270
  %68 = load float* %arrayidx271, align 4, !tbaa !3
  %add272706 = or i32 %mul257, 2
  %idxprom273 = sext i32 %add272706 to i64
  %arrayidx274 = getelementptr inbounds float* %VFtab, i64 %idxprom273
  %69 = load float* %arrayidx274, align 4, !tbaa !3
  %mul275 = fmul float %sub255, %69
  %add276707 = or i32 %mul257, 3
  %idxprom277 = sext i32 %add276707 to i64
  %arrayidx278 = getelementptr inbounds float* %VFtab, i64 %idxprom277
  %70 = load float* %arrayidx278, align 4, !tbaa !3
  %mul279 = fmul float %mul256, %70
  %add280 = fadd float %68, %mul275
  %add281 = fadd float %add280, %mul279
  %mul282 = fmul float %sub255, %add281
  %add283 = fadd float %67, %mul282
  %add284 = fadd float %mul275, %add281
  %mul285 = fmul float %mul279, 2.000000e+00
  %add286 = fadd float %mul285, %add284
  %mul287 = fmul float %65, %add283
  %mul288 = fmul float %65, %add286
  %add289708 = or i32 %mul257, 4
  %idxprom290 = sext i32 %add289708 to i64
  %arrayidx291 = getelementptr inbounds float* %VFtab, i64 %idxprom290
  %71 = load float* %arrayidx291, align 4, !tbaa !3
  %add292709 = or i32 %mul257, 5
  %idxprom293 = sext i32 %add292709 to i64
  %arrayidx294 = getelementptr inbounds float* %VFtab, i64 %idxprom293
  %72 = load float* %arrayidx294, align 4, !tbaa !3
  %add295710 = or i32 %mul257, 6
  %idxprom296 = sext i32 %add295710 to i64
  %arrayidx297 = getelementptr inbounds float* %VFtab, i64 %idxprom296
  %73 = load float* %arrayidx297, align 4, !tbaa !3
  %mul298 = fmul float %sub255, %73
  %add299711 = or i32 %mul257, 7
  %idxprom300 = sext i32 %add299711 to i64
  %arrayidx301 = getelementptr inbounds float* %VFtab, i64 %idxprom300
  %74 = load float* %arrayidx301, align 4, !tbaa !3
  %mul302 = fmul float %mul256, %74
  %add303 = fadd float %72, %mul298
  %add304 = fadd float %add303, %mul302
  %mul305 = fmul float %sub255, %add304
  %add306 = fadd float %71, %mul305
  %add307 = fadd float %mul298, %add304
  %mul308 = fmul float %mul302, 2.000000e+00
  %add309 = fadd float %mul308, %add307
  %mul310 = fmul float %66, %add306
  %mul311 = fmul float %66, %add309
  %add312 = fadd float %vnbtot.3737, %mul287
  %add313 = fadd float %add312, %mul310
  %add314 = fadd float %mul288, %mul311
  %mul315 = fmul float %add314, %tabscale
  %75 = fmul float %conv250, %mul315
  %mul317 = fsub float -0.000000e+00, %75
  %mul318 = fmul float %sub239, %mul317
  %mul319 = fmul float %sub240, %mul317
  %mul320 = fmul float %sub241, %mul317
  %add321 = fadd float %fix1.1738, %mul318
  %add322 = fadd float %fiy1.1739, %mul319
  %add323 = fadd float %fiz1.1740, %mul320
  %arrayidx325 = getelementptr inbounds float* %faction, i64 %idxprom231
  %76 = load float* %arrayidx325, align 4, !tbaa !3
  %sub326 = fsub float %76, %mul318
  store float %sub326, float* %arrayidx325, align 4, !tbaa !3
  %arrayidx331 = getelementptr inbounds float* %faction, i64 %idxprom234
  %77 = load float* %arrayidx331, align 4, !tbaa !3
  %sub332 = fsub float %77, %mul319
  store float %sub332, float* %arrayidx331, align 4, !tbaa !3
  %arrayidx338 = getelementptr inbounds float* %faction, i64 %idxprom237
  %78 = load float* %arrayidx338, align 4, !tbaa !3
  %sub339 = fsub float %78, %mul320
  store float %sub339, float* %arrayidx338, align 4, !tbaa !3
  %indvars.iv.next761 = add i64 %indvars.iv760, 1
  %79 = trunc i64 %indvars.iv.next761 to i32
  %cmp225 = icmp slt i32 %79, %10
  br i1 %cmp225, label %for.body227, label %for.end345

for.end345:                                       ; preds = %for.body227, %for.body208
  %fiz1.1.lcssa = phi float [ 0.000000e+00, %for.body208 ], [ %add323, %for.body227 ]
  %fiy1.1.lcssa = phi float [ 0.000000e+00, %for.body208 ], [ %add322, %for.body227 ]
  %fix1.1.lcssa = phi float [ 0.000000e+00, %for.body208 ], [ %add321, %for.body227 ]
  %vnbtot.3.lcssa = phi float [ %vnbtot.2747, %for.body208 ], [ %add313, %for.body227 ]
  %arrayidx347 = getelementptr inbounds float* %faction, i64 %indvars.iv764
  %80 = load float* %arrayidx347, align 4, !tbaa !3
  %add348 = fadd float %fix1.1.lcssa, %80
  store float %add348, float* %arrayidx347, align 4, !tbaa !3
  %arrayidx353 = getelementptr inbounds float* %faction, i64 %55
  %81 = load float* %arrayidx353, align 4, !tbaa !3
  %add354 = fadd float %fiy1.1.lcssa, %81
  store float %add354, float* %arrayidx353, align 4, !tbaa !3
  %arrayidx360 = getelementptr inbounds float* %faction, i64 %57
  %82 = load float* %arrayidx360, align 4, !tbaa !3
  %add361 = fadd float %fiz1.1.lcssa, %82
  store float %add361, float* %arrayidx360, align 4, !tbaa !3
  %83 = load float* %arrayidx366, align 4, !tbaa !3
  %add367 = fadd float %fix1.1.lcssa, %83
  store float %add367, float* %arrayidx366, align 4, !tbaa !3
  %84 = load float* %arrayidx372, align 4, !tbaa !3
  %add373 = fadd float %fiy1.1.lcssa, %84
  store float %add373, float* %arrayidx372, align 4, !tbaa !3
  %85 = load float* %arrayidx379, align 4, !tbaa !3
  %add380 = fadd float %fiz1.1.lcssa, %85
  store float %add380, float* %arrayidx379, align 4, !tbaa !3
  %indvars.iv.next763 = add i64 %indvars.iv762, 1
  %indvars.iv.next765 = add i64 %indvars.iv764, 3
  %inc387 = add nsw i32 %s.1748, 1
  %exitcond768 = icmp eq i32 %inc387, %1
  br i1 %exitcond768, label %for.end388, label %for.body208

for.end388:                                       ; preds = %for.end345, %for.end201
  %vnbtot.2.lcssa = phi float [ %vnbtot.0.lcssa, %for.end201 ], [ %vnbtot.3.lcssa, %for.end345 ]
  %arrayidx390 = getelementptr inbounds i32* %gid, i64 %indvars.iv769
  %86 = load i32* %arrayidx390, align 4, !tbaa !0
  %idxprom391 = sext i32 %86 to i64
  %arrayidx392 = getelementptr inbounds float* %Vnb, i64 %idxprom391
  %87 = load float* %arrayidx392, align 4, !tbaa !3
  %add393 = fadd float %vnbtot.2.lcssa, %87
  store float %add393, float* %arrayidx392, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next770 to i32
  %exitcond771 = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond771, label %for.end398, label %for.body

for.end398:                                       ; preds = %for.end388, %entry
  ret void
}
