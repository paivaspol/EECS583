define void @inl1120(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb) #0 {
entry:
  %0 = load i32* %iinr, align 4, !tbaa !0
  %idxprom = sext i32 %0 to i64
  %arrayidx1 = getelementptr inbounds float* %charge, i64 %idxprom
  %1 = load float* %arrayidx1, align 4, !tbaa !3
  %add = add nsw i32 %0, 1
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds float* %charge, i64 %idxprom2
  %2 = load float* %arrayidx3, align 4, !tbaa !3
  %mul = fmul float %1, %facel
  %mul4 = fmul float %2, %facel
  %mul5 = shl i32 %ntype, 1
  %arrayidx7 = getelementptr inbounds i32* %type, i64 %idxprom
  %3 = load i32* %arrayidx7, align 4, !tbaa !0
  %mul8 = mul nsw i32 %mul5, %3
  %cmp524 = icmp sgt i32 %nri, 0
  br i1 %cmp524, label %for.body, label %for.end293

for.body:                                         ; preds = %entry, %for.end.for.body_crit_edge
  %4 = phi i32 [ %.pre, %for.end.for.body_crit_edge ], [ %0, %entry ]
  %indvars.iv526 = phi i64 [ %indvars.iv.next527, %for.end.for.body_crit_edge ], [ 0, %entry ]
  %arrayidx10 = getelementptr inbounds i32* %shift, i64 %indvars.iv526
  %5 = load i32* %arrayidx10, align 4, !tbaa !0
  %mul11 = mul nsw i32 %5, 3
  %idxprom12 = sext i32 %mul11 to i64
  %arrayidx13 = getelementptr inbounds float* %shiftvec, i64 %idxprom12
  %6 = load float* %arrayidx13, align 4, !tbaa !3
  %add14 = add nsw i32 %mul11, 1
  %idxprom15 = sext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds float* %shiftvec, i64 %idxprom15
  %7 = load float* %arrayidx16, align 4, !tbaa !3
  %add17 = add nsw i32 %mul11, 2
  %idxprom18 = sext i32 %add17 to i64
  %arrayidx19 = getelementptr inbounds float* %shiftvec, i64 %idxprom18
  %8 = load float* %arrayidx19, align 4, !tbaa !3
  %mul22 = mul nsw i32 %4, 3
  %arrayidx24 = getelementptr inbounds i32* %jindex, i64 %indvars.iv526
  %9 = load i32* %arrayidx24, align 4, !tbaa !0
  %indvars.iv.next527 = add i64 %indvars.iv526, 1
  %arrayidx27 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next527
  %10 = load i32* %arrayidx27, align 4, !tbaa !0
  %idxprom28 = sext i32 %mul22 to i64
  %arrayidx29 = getelementptr inbounds float* %pos, i64 %idxprom28
  %11 = load float* %arrayidx29, align 4, !tbaa !3
  %add30 = fadd float %6, %11
  %add31 = add nsw i32 %mul22, 1
  %idxprom32 = sext i32 %add31 to i64
  %arrayidx33 = getelementptr inbounds float* %pos, i64 %idxprom32
  %12 = load float* %arrayidx33, align 4, !tbaa !3
  %add34 = fadd float %7, %12
  %add35 = add nsw i32 %mul22, 2
  %idxprom36 = sext i32 %add35 to i64
  %arrayidx37 = getelementptr inbounds float* %pos, i64 %idxprom36
  %13 = load float* %arrayidx37, align 4, !tbaa !3
  %add38 = fadd float %8, %13
  %add39 = add nsw i32 %mul22, 3
  %idxprom40 = sext i32 %add39 to i64
  %arrayidx41 = getelementptr inbounds float* %pos, i64 %idxprom40
  %14 = load float* %arrayidx41, align 4, !tbaa !3
  %add42 = fadd float %6, %14
  %add43 = add nsw i32 %mul22, 4
  %idxprom44 = sext i32 %add43 to i64
  %arrayidx45 = getelementptr inbounds float* %pos, i64 %idxprom44
  %15 = load float* %arrayidx45, align 4, !tbaa !3
  %add46 = fadd float %7, %15
  %add47 = add nsw i32 %mul22, 5
  %idxprom48 = sext i32 %add47 to i64
  %arrayidx49 = getelementptr inbounds float* %pos, i64 %idxprom48
  %16 = load float* %arrayidx49, align 4, !tbaa !3
  %add50 = fadd float %8, %16
  %add51 = add nsw i32 %mul22, 6
  %idxprom52 = sext i32 %add51 to i64
  %arrayidx53 = getelementptr inbounds float* %pos, i64 %idxprom52
  %17 = load float* %arrayidx53, align 4, !tbaa !3
  %add54 = fadd float %6, %17
  %add55 = add nsw i32 %mul22, 7
  %idxprom56 = sext i32 %add55 to i64
  %arrayidx57 = getelementptr inbounds float* %pos, i64 %idxprom56
  %18 = load float* %arrayidx57, align 4, !tbaa !3
  %add58 = fadd float %7, %18
  %add59 = add nsw i32 %mul22, 8
  %idxprom60 = sext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds float* %pos, i64 %idxprom60
  %19 = load float* %arrayidx61, align 4, !tbaa !3
  %add62 = fadd float %8, %19
  %cmp64501 = icmp slt i32 %9, %10
  br i1 %cmp64501, label %for.body65.lr.ph, label %for.end

for.body65.lr.ph:                                 ; preds = %for.body
  %20 = sext i32 %9 to i64
  br label %for.body65

for.body65:                                       ; preds = %for.body65.lr.ph, %for.body65
  %indvars.iv = phi i64 [ %20, %for.body65.lr.ph ], [ %indvars.iv.next, %for.body65 ]
  %vctot.0512 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add175, %for.body65 ]
  %vnbtot.0511 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %sub125, %for.body65 ]
  %fix1.0510 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add139, %for.body65 ]
  %fiy1.0509 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add140, %for.body65 ]
  %fiz1.0508 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add141, %for.body65 ]
  %fix2.0507 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add163, %for.body65 ]
  %fiy2.0506 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add164, %for.body65 ]
  %fiz2.0505 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add165, %for.body65 ]
  %fix3.0504 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add179, %for.body65 ]
  %fiy3.0503 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add180, %for.body65 ]
  %fiz3.0502 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add181, %for.body65 ]
  %arrayidx67 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %21 = load i32* %arrayidx67, align 4, !tbaa !0
  %mul68 = mul nsw i32 %21, 3
  %idxprom69 = sext i32 %mul68 to i64
  %arrayidx70 = getelementptr inbounds float* %pos, i64 %idxprom69
  %22 = load float* %arrayidx70, align 4, !tbaa !3
  %add71 = add nsw i32 %mul68, 1
  %idxprom72 = sext i32 %add71 to i64
  %arrayidx73 = getelementptr inbounds float* %pos, i64 %idxprom72
  %23 = load float* %arrayidx73, align 4, !tbaa !3
  %add74 = add nsw i32 %mul68, 2
  %idxprom75 = sext i32 %add74 to i64
  %arrayidx76 = getelementptr inbounds float* %pos, i64 %idxprom75
  %24 = load float* %arrayidx76, align 4, !tbaa !3
  %sub = fsub float %add30, %22
  %sub77 = fsub float %add34, %23
  %sub78 = fsub float %add38, %24
  %mul79 = fmul float %sub, %sub
  %mul80 = fmul float %sub77, %sub77
  %add81 = fadd float %mul79, %mul80
  %mul82 = fmul float %sub78, %sub78
  %add83 = fadd float %add81, %mul82
  %sub84 = fsub float %add42, %22
  %sub85 = fsub float %add46, %23
  %sub86 = fsub float %add50, %24
  %mul87 = fmul float %sub84, %sub84
  %mul88 = fmul float %sub85, %sub85
  %add89 = fadd float %mul87, %mul88
  %mul90 = fmul float %sub86, %sub86
  %add91 = fadd float %add89, %mul90
  %sub92 = fsub float %add54, %22
  %sub93 = fsub float %add58, %23
  %sub94 = fsub float %add62, %24
  %mul95 = fmul float %sub92, %sub92
  %mul96 = fmul float %sub93, %sub93
  %add97 = fadd float %mul95, %mul96
  %mul98 = fmul float %sub94, %sub94
  %add99 = fadd float %add97, %mul98
  %conv = fpext float %add83 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv100 = fptrunc double %div to float
  %conv101 = fpext float %add91 to double
  %call102 = tail call double @sqrt(double %conv101) #2
  %div103 = fdiv double 1.000000e+00, %call102
  %conv104 = fptrunc double %div103 to float
  %conv105 = fpext float %add99 to double
  %call106 = tail call double @sqrt(double %conv105) #2
  %div107 = fdiv double 1.000000e+00, %call106
  %conv108 = fptrunc double %div107 to float
  %mul109 = fmul float %conv100, %conv100
  %mul110 = fmul float %mul109, %mul109
  %mul111 = fmul float %mul109, %mul110
  %idxprom112 = sext i32 %21 to i64
  %arrayidx113 = getelementptr inbounds i32* %type, i64 %idxprom112
  %25 = load i32* %arrayidx113, align 4, !tbaa !0
  %mul114 = shl nsw i32 %25, 1
  %add115 = add nsw i32 %mul114, %mul8
  %idxprom116 = sext i32 %add115 to i64
  %arrayidx117 = getelementptr inbounds float* %nbfp, i64 %idxprom116
  %26 = load float* %arrayidx117, align 4, !tbaa !3
  %mul118 = fmul float %mul111, %26
  %mul119 = fmul float %mul111, %mul111
  %add120500 = or i32 %add115, 1
  %idxprom121 = sext i32 %add120500 to i64
  %arrayidx122 = getelementptr inbounds float* %nbfp, i64 %idxprom121
  %27 = load float* %arrayidx122, align 4, !tbaa !3
  %mul123 = fmul float %mul119, %27
  %add124 = fadd float %vnbtot.0511, %mul123
  %sub125 = fsub float %add124, %mul118
  %arrayidx127 = getelementptr inbounds float* %charge, i64 %idxprom112
  %28 = load float* %arrayidx127, align 4, !tbaa !3
  %mul128 = fmul float %mul, %28
  %mul129 = fmul float %conv100, %mul128
  %mul130 = fmul float %mul123, 1.200000e+01
  %mul131 = fmul float %mul118, 6.000000e+00
  %sub132 = fsub float %mul130, %mul131
  %add133 = fadd float %sub132, %mul129
  %mul134 = fmul float %mul109, %add133
  %add135 = fadd float %vctot.0512, %mul129
  %mul136 = fmul float %sub, %mul134
  %mul137 = fmul float %sub77, %mul134
  %mul138 = fmul float %sub78, %mul134
  %add139 = fadd float %fix1.0510, %mul136
  %add140 = fadd float %fiy1.0509, %mul137
  %add141 = fadd float %fiz1.0508, %mul138
  %arrayidx143 = getelementptr inbounds float* %faction, i64 %idxprom69
  %29 = load float* %arrayidx143, align 4, !tbaa !3
  %sub144 = fsub float %29, %mul136
  %arrayidx147 = getelementptr inbounds float* %faction, i64 %idxprom72
  %30 = load float* %arrayidx147, align 4, !tbaa !3
  %sub148 = fsub float %30, %mul137
  %arrayidx151 = getelementptr inbounds float* %faction, i64 %idxprom75
  %31 = load float* %arrayidx151, align 4, !tbaa !3
  %sub152 = fsub float %31, %mul138
  %mul153 = fmul float %conv104, %conv104
  %mul156 = fmul float %mul4, %28
  %mul157 = fmul float %conv104, %mul156
  %mul158 = fmul float %mul153, %mul157
  %add159 = fadd float %mul157, %add135
  %mul160 = fmul float %sub84, %mul158
  %mul161 = fmul float %sub85, %mul158
  %mul162 = fmul float %sub86, %mul158
  %add163 = fadd float %fix2.0507, %mul160
  %add164 = fadd float %fiy2.0506, %mul161
  %add165 = fadd float %fiz2.0505, %mul162
  %sub166 = fsub float %sub144, %mul160
  %sub167 = fsub float %sub148, %mul161
  %sub168 = fsub float %sub152, %mul162
  %mul169 = fmul float %conv108, %conv108
  %mul173 = fmul float %conv108, %mul156
  %mul174 = fmul float %mul169, %mul173
  %add175 = fadd float %mul173, %add159
  %mul176 = fmul float %sub92, %mul174
  %mul177 = fmul float %sub93, %mul174
  %mul178 = fmul float %sub94, %mul174
  %add179 = fadd float %fix3.0504, %mul176
  %add180 = fadd float %fiy3.0503, %mul177
  %add181 = fadd float %fiz3.0502, %mul178
  %sub182 = fsub float %sub166, %mul176
  store float %sub182, float* %arrayidx143, align 4, !tbaa !3
  %sub185 = fsub float %sub167, %mul177
  store float %sub185, float* %arrayidx147, align 4, !tbaa !3
  %sub189 = fsub float %sub168, %mul178
  store float %sub189, float* %arrayidx151, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %32 = trunc i64 %indvars.iv.next to i32
  %cmp64 = icmp slt i32 %32, %10
  br i1 %cmp64, label %for.body65, label %for.end

for.end:                                          ; preds = %for.body65, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add175, %for.body65 ]
  %vnbtot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %sub125, %for.body65 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add139, %for.body65 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add140, %for.body65 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add141, %for.body65 ]
  %fix2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add163, %for.body65 ]
  %fiy2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add164, %for.body65 ]
  %fiz2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add165, %for.body65 ]
  %fix3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add179, %for.body65 ]
  %fiy3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add180, %for.body65 ]
  %fiz3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add181, %for.body65 ]
  %arrayidx194 = getelementptr inbounds float* %faction, i64 %idxprom28
  %33 = load float* %arrayidx194, align 4, !tbaa !3
  %add195 = fadd float %fix1.0.lcssa, %33
  store float %add195, float* %arrayidx194, align 4, !tbaa !3
  %arrayidx200 = getelementptr inbounds float* %faction, i64 %idxprom32
  %34 = load float* %arrayidx200, align 4, !tbaa !3
  %add201 = fadd float %fiy1.0.lcssa, %34
  store float %add201, float* %arrayidx200, align 4, !tbaa !3
  %arrayidx207 = getelementptr inbounds float* %faction, i64 %idxprom36
  %35 = load float* %arrayidx207, align 4, !tbaa !3
  %add208 = fadd float %fiz1.0.lcssa, %35
  store float %add208, float* %arrayidx207, align 4, !tbaa !3
  %arrayidx214 = getelementptr inbounds float* %faction, i64 %idxprom40
  %36 = load float* %arrayidx214, align 4, !tbaa !3
  %add215 = fadd float %fix2.0.lcssa, %36
  store float %add215, float* %arrayidx214, align 4, !tbaa !3
  %arrayidx221 = getelementptr inbounds float* %faction, i64 %idxprom44
  %37 = load float* %arrayidx221, align 4, !tbaa !3
  %add222 = fadd float %fiy2.0.lcssa, %37
  store float %add222, float* %arrayidx221, align 4, !tbaa !3
  %arrayidx228 = getelementptr inbounds float* %faction, i64 %idxprom48
  %38 = load float* %arrayidx228, align 4, !tbaa !3
  %add229 = fadd float %fiz2.0.lcssa, %38
  store float %add229, float* %arrayidx228, align 4, !tbaa !3
  %arrayidx235 = getelementptr inbounds float* %faction, i64 %idxprom52
  %39 = load float* %arrayidx235, align 4, !tbaa !3
  %add236 = fadd float %fix3.0.lcssa, %39
  store float %add236, float* %arrayidx235, align 4, !tbaa !3
  %arrayidx242 = getelementptr inbounds float* %faction, i64 %idxprom56
  %40 = load float* %arrayidx242, align 4, !tbaa !3
  %add243 = fadd float %fiy3.0.lcssa, %40
  store float %add243, float* %arrayidx242, align 4, !tbaa !3
  %arrayidx249 = getelementptr inbounds float* %faction, i64 %idxprom60
  %41 = load float* %arrayidx249, align 4, !tbaa !3
  %add250 = fadd float %fiz3.0.lcssa, %41
  store float %add250, float* %arrayidx249, align 4, !tbaa !3
  %arrayidx255 = getelementptr inbounds float* %fshift, i64 %idxprom12
  %42 = load float* %arrayidx255, align 4, !tbaa !3
  %add256 = fadd float %fix1.0.lcssa, %42
  %add257 = fadd float %fix2.0.lcssa, %add256
  %add258 = fadd float %fix3.0.lcssa, %add257
  store float %add258, float* %arrayidx255, align 4, !tbaa !3
  %arrayidx263 = getelementptr inbounds float* %fshift, i64 %idxprom15
  %43 = load float* %arrayidx263, align 4, !tbaa !3
  %add264 = fadd float %fiy1.0.lcssa, %43
  %add265 = fadd float %fiy2.0.lcssa, %add264
  %add266 = fadd float %fiy3.0.lcssa, %add265
  store float %add266, float* %arrayidx263, align 4, !tbaa !3
  %arrayidx272 = getelementptr inbounds float* %fshift, i64 %idxprom18
  %44 = load float* %arrayidx272, align 4, !tbaa !3
  %add273 = fadd float %fiz1.0.lcssa, %44
  %add274 = fadd float %fiz2.0.lcssa, %add273
  %add275 = fadd float %fiz3.0.lcssa, %add274
  store float %add275, float* %arrayidx272, align 4, !tbaa !3
  %arrayidx280 = getelementptr inbounds i32* %gid, i64 %indvars.iv526
  %45 = load i32* %arrayidx280, align 4, !tbaa !0
  %idxprom281 = sext i32 %45 to i64
  %arrayidx282 = getelementptr inbounds float* %Vc, i64 %idxprom281
  %46 = load float* %arrayidx282, align 4, !tbaa !3
  %add283 = fadd float %vctot.0.lcssa, %46
  store float %add283, float* %arrayidx282, align 4, !tbaa !3
  %arrayidx287 = getelementptr inbounds float* %Vnb, i64 %idxprom281
  %47 = load float* %arrayidx287, align 4, !tbaa !3
  %add288 = fadd float %vnbtot.0.lcssa, %47
  store float %add288, float* %arrayidx287, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next527 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end293, label %for.end.for.body_crit_edge

for.end.for.body_crit_edge:                       ; preds = %for.end
  %arrayidx21.phi.trans.insert = getelementptr inbounds i32* %iinr, i64 %indvars.iv.next527
  %.pre = load i32* %arrayidx21.phi.trans.insert, align 4, !tbaa !0
  br label %for.body

for.end293:                                       ; preds = %for.end, %entry
  ret void
}
