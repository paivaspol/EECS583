define void @inl3000(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, float %tabscale, float* nocapture %VFtab) #0 {
entry:
  %cmp270 = icmp sgt i32 %nri, 0
  br i1 %cmp270, label %for.body, label %for.end160

for.body:                                         ; preds = %for.end, %entry
  %indvars.iv272 = phi i64 [ 0, %entry ], [ %indvars.iv.next273, %for.end ]
  %arrayidx = getelementptr inbounds i32* %shift, i64 %indvars.iv272
  %0 = load i32* %arrayidx, align 4, !tbaa !0
  %mul = mul nsw i32 %0, 3
  %idxprom1 = sext i32 %mul to i64
  %arrayidx2 = getelementptr inbounds float* %shiftvec, i64 %idxprom1
  %1 = load float* %arrayidx2, align 4, !tbaa !3
  %add = add nsw i32 %mul, 1
  %idxprom3 = sext i32 %add to i64
  %arrayidx4 = getelementptr inbounds float* %shiftvec, i64 %idxprom3
  %2 = load float* %arrayidx4, align 4, !tbaa !3
  %add5 = add nsw i32 %mul, 2
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds float* %shiftvec, i64 %idxprom6
  %3 = load float* %arrayidx7, align 4, !tbaa !3
  %arrayidx9 = getelementptr inbounds i32* %iinr, i64 %indvars.iv272
  %4 = load i32* %arrayidx9, align 4, !tbaa !0
  %mul10 = mul nsw i32 %4, 3
  %arrayidx12 = getelementptr inbounds i32* %jindex, i64 %indvars.iv272
  %5 = load i32* %arrayidx12, align 4, !tbaa !0
  %indvars.iv.next273 = add i64 %indvars.iv272, 1
  %arrayidx15 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next273
  %6 = load i32* %arrayidx15, align 4, !tbaa !0
  %idxprom16 = sext i32 %mul10 to i64
  %arrayidx17 = getelementptr inbounds float* %pos, i64 %idxprom16
  %7 = load float* %arrayidx17, align 4, !tbaa !3
  %add18 = fadd float %1, %7
  %add19 = add nsw i32 %mul10, 1
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds float* %pos, i64 %idxprom20
  %8 = load float* %arrayidx21, align 4, !tbaa !3
  %add22 = fadd float %2, %8
  %add23 = add nsw i32 %mul10, 2
  %idxprom24 = sext i32 %add23 to i64
  %arrayidx25 = getelementptr inbounds float* %pos, i64 %idxprom24
  %9 = load float* %arrayidx25, align 4, !tbaa !3
  %add26 = fadd float %3, %9
  %idxprom27 = sext i32 %4 to i64
  %arrayidx28 = getelementptr inbounds float* %charge, i64 %idxprom27
  %10 = load float* %arrayidx28, align 4, !tbaa !3
  %mul29 = fmul float %10, %facel
  %cmp31261 = icmp slt i32 %5, %6
  br i1 %cmp31261, label %for.body32.lr.ph, label %for.end

for.body32.lr.ph:                                 ; preds = %for.body
  %11 = sext i32 %5 to i64
  br label %for.body32

for.body32:                                       ; preds = %for.body32.lr.ph, %for.body32
  %indvars.iv = phi i64 [ %11, %for.body32.lr.ph ], [ %indvars.iv.next, %for.body32 ]
  %vctot.0265 = phi float [ 0.000000e+00, %for.body32.lr.ph ], [ %add87, %for.body32 ]
  %fix1.0264 = phi float [ 0.000000e+00, %for.body32.lr.ph ], [ %add91, %for.body32 ]
  %fiy1.0263 = phi float [ 0.000000e+00, %for.body32.lr.ph ], [ %add92, %for.body32 ]
  %fiz1.0262 = phi float [ 0.000000e+00, %for.body32.lr.ph ], [ %add93, %for.body32 ]
  %arrayidx34 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %12 = load i32* %arrayidx34, align 4, !tbaa !0
  %mul35 = mul nsw i32 %12, 3
  %idxprom36 = sext i32 %mul35 to i64
  %arrayidx37 = getelementptr inbounds float* %pos, i64 %idxprom36
  %13 = load float* %arrayidx37, align 4, !tbaa !3
  %add38 = add nsw i32 %mul35, 1
  %idxprom39 = sext i32 %add38 to i64
  %arrayidx40 = getelementptr inbounds float* %pos, i64 %idxprom39
  %14 = load float* %arrayidx40, align 4, !tbaa !3
  %add41 = add nsw i32 %mul35, 2
  %idxprom42 = sext i32 %add41 to i64
  %arrayidx43 = getelementptr inbounds float* %pos, i64 %idxprom42
  %15 = load float* %arrayidx43, align 4, !tbaa !3
  %sub = fsub float %add18, %13
  %sub44 = fsub float %add22, %14
  %sub45 = fsub float %add26, %15
  %mul46 = fmul float %sub, %sub
  %mul47 = fmul float %sub44, %sub44
  %add48 = fadd float %mul46, %mul47
  %mul49 = fmul float %sub45, %sub45
  %add50 = fadd float %add48, %mul49
  %conv = fpext float %add50 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv51 = fptrunc double %div to float
  %mul52 = fmul float %add50, %conv51
  %mul53 = fmul float %mul52, %tabscale
  %conv54 = fptosi float %mul53 to i32
  %conv55 = sitofp i32 %conv54 to float
  %sub56 = fsub float %mul53, %conv55
  %mul57 = fmul float %sub56, %sub56
  %mul58 = shl nsw i32 %conv54, 2
  %idxprom59 = sext i32 %12 to i64
  %arrayidx60 = getelementptr inbounds float* %charge, i64 %idxprom59
  %16 = load float* %arrayidx60, align 4, !tbaa !3
  %mul61 = fmul float %mul29, %16
  %idxprom62 = sext i32 %mul58 to i64
  %arrayidx63 = getelementptr inbounds float* %VFtab, i64 %idxprom62
  %17 = load float* %arrayidx63, align 4, !tbaa !3
  %add64258 = or i32 %mul58, 1
  %idxprom65 = sext i32 %add64258 to i64
  %arrayidx66 = getelementptr inbounds float* %VFtab, i64 %idxprom65
  %18 = load float* %arrayidx66, align 4, !tbaa !3
  %add67259 = or i32 %mul58, 2
  %idxprom68 = sext i32 %add67259 to i64
  %arrayidx69 = getelementptr inbounds float* %VFtab, i64 %idxprom68
  %19 = load float* %arrayidx69, align 4, !tbaa !3
  %mul70 = fmul float %19, %sub56
  %add71260 = or i32 %mul58, 3
  %idxprom72 = sext i32 %add71260 to i64
  %arrayidx73 = getelementptr inbounds float* %VFtab, i64 %idxprom72
  %20 = load float* %arrayidx73, align 4, !tbaa !3
  %mul74 = fmul float %20, %mul57
  %add75 = fadd float %18, %mul70
  %add76 = fadd float %add75, %mul74
  %mul77 = fmul float %sub56, %add76
  %add78 = fadd float %17, %mul77
  %add79 = fadd float %mul70, %add76
  %mul80 = fmul float %mul74, 2.000000e+00
  %add81 = fadd float %mul80, %add79
  %mul82 = fmul float %mul61, %add78
  %mul83 = fmul float %mul61, %add81
  %mul84 = fmul float %mul83, %tabscale
  %21 = fmul float %conv51, %mul84
  %mul86 = fsub float -0.000000e+00, %21
  %add87 = fadd float %vctot.0265, %mul82
  %mul88 = fmul float %sub, %mul86
  %mul89 = fmul float %sub44, %mul86
  %mul90 = fmul float %sub45, %mul86
  %add91 = fadd float %fix1.0264, %mul88
  %add92 = fadd float %fiy1.0263, %mul89
  %add93 = fadd float %fiz1.0262, %mul90
  %arrayidx95 = getelementptr inbounds float* %faction, i64 %idxprom36
  %22 = load float* %arrayidx95, align 4, !tbaa !3
  %sub96 = fsub float %22, %mul88
  store float %sub96, float* %arrayidx95, align 4, !tbaa !3
  %arrayidx101 = getelementptr inbounds float* %faction, i64 %idxprom39
  %23 = load float* %arrayidx101, align 4, !tbaa !3
  %sub102 = fsub float %23, %mul89
  store float %sub102, float* %arrayidx101, align 4, !tbaa !3
  %arrayidx108 = getelementptr inbounds float* %faction, i64 %idxprom42
  %24 = load float* %arrayidx108, align 4, !tbaa !3
  %sub109 = fsub float %24, %mul90
  store float %sub109, float* %arrayidx108, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %25 = trunc i64 %indvars.iv.next to i32
  %cmp31 = icmp slt i32 %25, %6
  br i1 %cmp31, label %for.body32, label %for.end

for.end:                                          ; preds = %for.body32, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add87, %for.body32 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add91, %for.body32 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add92, %for.body32 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add93, %for.body32 ]
  %arrayidx114 = getelementptr inbounds float* %faction, i64 %idxprom16
  %26 = load float* %arrayidx114, align 4, !tbaa !3
  %add115 = fadd float %fix1.0.lcssa, %26
  store float %add115, float* %arrayidx114, align 4, !tbaa !3
  %arrayidx120 = getelementptr inbounds float* %faction, i64 %idxprom20
  %27 = load float* %arrayidx120, align 4, !tbaa !3
  %add121 = fadd float %fiy1.0.lcssa, %27
  store float %add121, float* %arrayidx120, align 4, !tbaa !3
  %arrayidx127 = getelementptr inbounds float* %faction, i64 %idxprom24
  %28 = load float* %arrayidx127, align 4, !tbaa !3
  %add128 = fadd float %fiz1.0.lcssa, %28
  store float %add128, float* %arrayidx127, align 4, !tbaa !3
  %arrayidx133 = getelementptr inbounds float* %fshift, i64 %idxprom1
  %29 = load float* %arrayidx133, align 4, !tbaa !3
  %add134 = fadd float %fix1.0.lcssa, %29
  store float %add134, float* %arrayidx133, align 4, !tbaa !3
  %arrayidx139 = getelementptr inbounds float* %fshift, i64 %idxprom3
  %30 = load float* %arrayidx139, align 4, !tbaa !3
  %add140 = fadd float %fiy1.0.lcssa, %30
  store float %add140, float* %arrayidx139, align 4, !tbaa !3
  %arrayidx146 = getelementptr inbounds float* %fshift, i64 %idxprom6
  %31 = load float* %arrayidx146, align 4, !tbaa !3
  %add147 = fadd float %fiz1.0.lcssa, %31
  store float %add147, float* %arrayidx146, align 4, !tbaa !3
  %arrayidx152 = getelementptr inbounds i32* %gid, i64 %indvars.iv272
  %32 = load i32* %arrayidx152, align 4, !tbaa !0
  %idxprom153 = sext i32 %32 to i64
  %arrayidx154 = getelementptr inbounds float* %Vc, i64 %idxprom153
  %33 = load float* %arrayidx154, align 4, !tbaa !3
  %add155 = fadd float %vctot.0.lcssa, %33
  store float %add155, float* %arrayidx154, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next273 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end160, label %for.body

for.end160:                                       ; preds = %for.end, %entry
  ret void
}
