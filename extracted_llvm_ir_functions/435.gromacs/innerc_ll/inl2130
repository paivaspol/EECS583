define void @inl2130(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, float %krf, float %crf, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb) #0 {
entry:
  %0 = load i32* %iinr, align 4, !tbaa !0
  %idxprom = sext i32 %0 to i64
  %arrayidx1 = getelementptr inbounds float* %charge, i64 %idxprom
  %1 = load float* %arrayidx1, align 4, !tbaa !3
  %add = add nsw i32 %0, 1
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds float* %charge, i64 %idxprom2
  %2 = load float* %arrayidx3, align 4, !tbaa !3
  %mul = fmul float %1, %facel
  %mul4 = fmul float %1, %mul
  %mul6 = fmul float %mul, %2
  %mul7 = fmul float %2, %facel
  %mul8 = fmul float %2, %mul7
  %mul9 = shl i32 %ntype, 1
  %arrayidx11 = getelementptr inbounds i32* %type, i64 %idxprom
  %3 = load i32* %arrayidx11, align 4, !tbaa !0
  %mul12 = mul nsw i32 %mul9, %3
  %mul15 = shl nsw i32 %3, 1
  %add16 = add nsw i32 %mul12, %mul15
  %idxprom17 = sext i32 %add16 to i64
  %arrayidx18 = getelementptr inbounds float* %nbfp, i64 %idxprom17
  %4 = load float* %arrayidx18, align 4, !tbaa !3
  %add19990 = or i32 %add16, 1
  %idxprom20 = sext i32 %add19990 to i64
  %arrayidx21 = getelementptr inbounds float* %nbfp, i64 %idxprom20
  %5 = load float* %arrayidx21, align 4, !tbaa !3
  %cmp1014 = icmp sgt i32 %nri, 0
  br i1 %cmp1014, label %for.body, label %for.end546

for.body:                                         ; preds = %entry, %for.end.for.body_crit_edge
  %6 = phi i32 [ %.pre, %for.end.for.body_crit_edge ], [ %0, %entry ]
  %indvars.iv1016 = phi i64 [ %indvars.iv.next1017, %for.end.for.body_crit_edge ], [ 0, %entry ]
  %arrayidx23 = getelementptr inbounds i32* %shift, i64 %indvars.iv1016
  %7 = load i32* %arrayidx23, align 4, !tbaa !0
  %mul24 = mul nsw i32 %7, 3
  %idxprom25 = sext i32 %mul24 to i64
  %arrayidx26 = getelementptr inbounds float* %shiftvec, i64 %idxprom25
  %8 = load float* %arrayidx26, align 4, !tbaa !3
  %add27 = add nsw i32 %mul24, 1
  %idxprom28 = sext i32 %add27 to i64
  %arrayidx29 = getelementptr inbounds float* %shiftvec, i64 %idxprom28
  %9 = load float* %arrayidx29, align 4, !tbaa !3
  %add30 = add nsw i32 %mul24, 2
  %idxprom31 = sext i32 %add30 to i64
  %arrayidx32 = getelementptr inbounds float* %shiftvec, i64 %idxprom31
  %10 = load float* %arrayidx32, align 4, !tbaa !3
  %mul35 = mul nsw i32 %6, 3
  %arrayidx37 = getelementptr inbounds i32* %jindex, i64 %indvars.iv1016
  %11 = load i32* %arrayidx37, align 4, !tbaa !0
  %indvars.iv.next1017 = add i64 %indvars.iv1016, 1
  %arrayidx40 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next1017
  %12 = load i32* %arrayidx40, align 4, !tbaa !0
  %idxprom41 = sext i32 %mul35 to i64
  %arrayidx42 = getelementptr inbounds float* %pos, i64 %idxprom41
  %13 = load float* %arrayidx42, align 4, !tbaa !3
  %add43 = fadd float %8, %13
  %add44 = add nsw i32 %mul35, 1
  %idxprom45 = sext i32 %add44 to i64
  %arrayidx46 = getelementptr inbounds float* %pos, i64 %idxprom45
  %14 = load float* %arrayidx46, align 4, !tbaa !3
  %add47 = fadd float %9, %14
  %add48 = add nsw i32 %mul35, 2
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds float* %pos, i64 %idxprom49
  %15 = load float* %arrayidx50, align 4, !tbaa !3
  %add51 = fadd float %10, %15
  %add52 = add nsw i32 %mul35, 3
  %idxprom53 = sext i32 %add52 to i64
  %arrayidx54 = getelementptr inbounds float* %pos, i64 %idxprom53
  %16 = load float* %arrayidx54, align 4, !tbaa !3
  %add55 = fadd float %8, %16
  %add56 = add nsw i32 %mul35, 4
  %idxprom57 = sext i32 %add56 to i64
  %arrayidx58 = getelementptr inbounds float* %pos, i64 %idxprom57
  %17 = load float* %arrayidx58, align 4, !tbaa !3
  %add59 = fadd float %9, %17
  %add60 = add nsw i32 %mul35, 5
  %idxprom61 = sext i32 %add60 to i64
  %arrayidx62 = getelementptr inbounds float* %pos, i64 %idxprom61
  %18 = load float* %arrayidx62, align 4, !tbaa !3
  %add63 = fadd float %10, %18
  %add64 = add nsw i32 %mul35, 6
  %idxprom65 = sext i32 %add64 to i64
  %arrayidx66 = getelementptr inbounds float* %pos, i64 %idxprom65
  %19 = load float* %arrayidx66, align 4, !tbaa !3
  %add67 = fadd float %8, %19
  %add68 = add nsw i32 %mul35, 7
  %idxprom69 = sext i32 %add68 to i64
  %arrayidx70 = getelementptr inbounds float* %pos, i64 %idxprom69
  %20 = load float* %arrayidx70, align 4, !tbaa !3
  %add71 = fadd float %9, %20
  %add72 = add nsw i32 %mul35, 8
  %idxprom73 = sext i32 %add72 to i64
  %arrayidx74 = getelementptr inbounds float* %pos, i64 %idxprom73
  %21 = load float* %arrayidx74, align 4, !tbaa !3
  %add75 = fadd float %10, %21
  %cmp77991 = icmp slt i32 %11, %12
  br i1 %cmp77991, label %for.body78.lr.ph, label %for.end

for.body78.lr.ph:                                 ; preds = %for.body
  %22 = sext i32 %11 to i64
  br label %for.body78

for.body78:                                       ; preds = %for.body78.lr.ph, %for.body78
  %indvars.iv = phi i64 [ %22, %for.body78.lr.ph ], [ %indvars.iv.next, %for.body78 ]
  %vctot.01002 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add427, %for.body78 ]
  %vnbtot.01001 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %sub219, %for.body78 ]
  %fix1.01000 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add291, %for.body78 ]
  %fiy1.0999 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add292, %for.body78 ]
  %fiz1.0998 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add293, %for.body78 ]
  %fix2.0997 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add357, %for.body78 ]
  %fiy2.0996 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add358, %for.body78 ]
  %fiz2.0995 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add359, %for.body78 ]
  %fix3.0994 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add431, %for.body78 ]
  %fiy3.0993 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add432, %for.body78 ]
  %fiz3.0992 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add433, %for.body78 ]
  %arrayidx80 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %23 = load i32* %arrayidx80, align 4, !tbaa !0
  %mul81 = mul nsw i32 %23, 3
  %idxprom82 = sext i32 %mul81 to i64
  %arrayidx83 = getelementptr inbounds float* %pos, i64 %idxprom82
  %24 = load float* %arrayidx83, align 4, !tbaa !3
  %add84 = add nsw i32 %mul81, 1
  %idxprom85 = sext i32 %add84 to i64
  %arrayidx86 = getelementptr inbounds float* %pos, i64 %idxprom85
  %25 = load float* %arrayidx86, align 4, !tbaa !3
  %add87 = add nsw i32 %mul81, 2
  %idxprom88 = sext i32 %add87 to i64
  %arrayidx89 = getelementptr inbounds float* %pos, i64 %idxprom88
  %26 = load float* %arrayidx89, align 4, !tbaa !3
  %add90 = add nsw i32 %mul81, 3
  %idxprom91 = sext i32 %add90 to i64
  %arrayidx92 = getelementptr inbounds float* %pos, i64 %idxprom91
  %27 = load float* %arrayidx92, align 4, !tbaa !3
  %add93 = add nsw i32 %mul81, 4
  %idxprom94 = sext i32 %add93 to i64
  %arrayidx95 = getelementptr inbounds float* %pos, i64 %idxprom94
  %28 = load float* %arrayidx95, align 4, !tbaa !3
  %add96 = add nsw i32 %mul81, 5
  %idxprom97 = sext i32 %add96 to i64
  %arrayidx98 = getelementptr inbounds float* %pos, i64 %idxprom97
  %29 = load float* %arrayidx98, align 4, !tbaa !3
  %add99 = add nsw i32 %mul81, 6
  %idxprom100 = sext i32 %add99 to i64
  %arrayidx101 = getelementptr inbounds float* %pos, i64 %idxprom100
  %30 = load float* %arrayidx101, align 4, !tbaa !3
  %add102 = add nsw i32 %mul81, 7
  %idxprom103 = sext i32 %add102 to i64
  %arrayidx104 = getelementptr inbounds float* %pos, i64 %idxprom103
  %31 = load float* %arrayidx104, align 4, !tbaa !3
  %add105 = add nsw i32 %mul81, 8
  %idxprom106 = sext i32 %add105 to i64
  %arrayidx107 = getelementptr inbounds float* %pos, i64 %idxprom106
  %32 = load float* %arrayidx107, align 4, !tbaa !3
  %sub = fsub float %add43, %24
  %sub108 = fsub float %add47, %25
  %sub109 = fsub float %add51, %26
  %mul110 = fmul float %sub, %sub
  %mul111 = fmul float %sub108, %sub108
  %add112 = fadd float %mul110, %mul111
  %mul113 = fmul float %sub109, %sub109
  %add114 = fadd float %add112, %mul113
  %sub115 = fsub float %add43, %27
  %sub116 = fsub float %add47, %28
  %sub117 = fsub float %add51, %29
  %mul118 = fmul float %sub115, %sub115
  %mul119 = fmul float %sub116, %sub116
  %add120 = fadd float %mul118, %mul119
  %mul121 = fmul float %sub117, %sub117
  %add122 = fadd float %add120, %mul121
  %sub123 = fsub float %add43, %30
  %sub124 = fsub float %add47, %31
  %sub125 = fsub float %add51, %32
  %mul126 = fmul float %sub123, %sub123
  %mul127 = fmul float %sub124, %sub124
  %add128 = fadd float %mul126, %mul127
  %mul129 = fmul float %sub125, %sub125
  %add130 = fadd float %add128, %mul129
  %sub131 = fsub float %add55, %24
  %sub132 = fsub float %add59, %25
  %sub133 = fsub float %add63, %26
  %mul134 = fmul float %sub131, %sub131
  %mul135 = fmul float %sub132, %sub132
  %add136 = fadd float %mul134, %mul135
  %mul137 = fmul float %sub133, %sub133
  %add138 = fadd float %add136, %mul137
  %sub139 = fsub float %add55, %27
  %sub140 = fsub float %add59, %28
  %sub141 = fsub float %add63, %29
  %mul142 = fmul float %sub139, %sub139
  %mul143 = fmul float %sub140, %sub140
  %add144 = fadd float %mul142, %mul143
  %mul145 = fmul float %sub141, %sub141
  %add146 = fadd float %add144, %mul145
  %sub147 = fsub float %add55, %30
  %sub148 = fsub float %add59, %31
  %sub149 = fsub float %add63, %32
  %mul150 = fmul float %sub147, %sub147
  %mul151 = fmul float %sub148, %sub148
  %add152 = fadd float %mul150, %mul151
  %mul153 = fmul float %sub149, %sub149
  %add154 = fadd float %add152, %mul153
  %sub155 = fsub float %add67, %24
  %sub156 = fsub float %add71, %25
  %sub157 = fsub float %add75, %26
  %mul158 = fmul float %sub155, %sub155
  %mul159 = fmul float %sub156, %sub156
  %add160 = fadd float %mul158, %mul159
  %mul161 = fmul float %sub157, %sub157
  %add162 = fadd float %add160, %mul161
  %sub163 = fsub float %add67, %27
  %sub164 = fsub float %add71, %28
  %sub165 = fsub float %add75, %29
  %mul166 = fmul float %sub163, %sub163
  %mul167 = fmul float %sub164, %sub164
  %add168 = fadd float %mul166, %mul167
  %mul169 = fmul float %sub165, %sub165
  %add170 = fadd float %add168, %mul169
  %sub171 = fsub float %add67, %30
  %sub172 = fsub float %add71, %31
  %sub173 = fsub float %add75, %32
  %mul174 = fmul float %sub171, %sub171
  %mul175 = fmul float %sub172, %sub172
  %add176 = fadd float %mul174, %mul175
  %mul177 = fmul float %sub173, %sub173
  %add178 = fadd float %add176, %mul177
  %conv = fpext float %add114 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv179 = fptrunc double %div to float
  %conv180 = fpext float %add138 to double
  %call181 = tail call double @sqrt(double %conv180) #2
  %div182 = fdiv double 1.000000e+00, %call181
  %conv183 = fptrunc double %div182 to float
  %conv184 = fpext float %add162 to double
  %call185 = tail call double @sqrt(double %conv184) #2
  %div186 = fdiv double 1.000000e+00, %call185
  %conv187 = fptrunc double %div186 to float
  %conv188 = fpext float %add122 to double
  %call189 = tail call double @sqrt(double %conv188) #2
  %div190 = fdiv double 1.000000e+00, %call189
  %conv191 = fptrunc double %div190 to float
  %conv192 = fpext float %add146 to double
  %call193 = tail call double @sqrt(double %conv192) #2
  %div194 = fdiv double 1.000000e+00, %call193
  %conv195 = fptrunc double %div194 to float
  %conv196 = fpext float %add170 to double
  %call197 = tail call double @sqrt(double %conv196) #2
  %div198 = fdiv double 1.000000e+00, %call197
  %conv199 = fptrunc double %div198 to float
  %conv200 = fpext float %add130 to double
  %call201 = tail call double @sqrt(double %conv200) #2
  %div202 = fdiv double 1.000000e+00, %call201
  %conv203 = fptrunc double %div202 to float
  %conv204 = fpext float %add154 to double
  %call205 = tail call double @sqrt(double %conv204) #2
  %div206 = fdiv double 1.000000e+00, %call205
  %conv207 = fptrunc double %div206 to float
  %conv208 = fpext float %add178 to double
  %call209 = tail call double @sqrt(double %conv208) #2
  %div210 = fdiv double 1.000000e+00, %call209
  %conv211 = fptrunc double %div210 to float
  %mul212 = fmul float %conv179, %conv179
  %mul213 = fmul float %mul212, %mul212
  %mul214 = fmul float %mul212, %mul213
  %mul215 = fmul float %4, %mul214
  %mul216 = fmul float %5, %mul214
  %mul217 = fmul float %mul214, %mul216
  %add218 = fadd float %vnbtot.01001, %mul217
  %sub219 = fsub float %add218, %mul215
  %mul220 = fmul float %add114, %krf
  %add221 = fadd float %mul220, %conv179
  %sub222 = fsub float %add221, %crf
  %mul223 = fmul float %mul4, %sub222
  %mul224 = fmul float %mul217, 1.200000e+01
  %mul225 = fmul float %mul215, 6.000000e+00
  %sub226 = fsub float %mul224, %mul225
  %mul227 = fmul float %mul220, 2.000000e+00
  %sub228 = fsub float %conv179, %mul227
  %mul229 = fmul float %mul4, %sub228
  %add230 = fadd float %mul229, %sub226
  %mul231 = fmul float %mul212, %add230
  %add232 = fadd float %vctot.01002, %mul223
  %mul233 = fmul float %sub, %mul231
  %mul234 = fmul float %sub108, %mul231
  %mul235 = fmul float %sub109, %mul231
  %add236 = fadd float %fix1.01000, %mul233
  %add237 = fadd float %fiy1.0999, %mul234
  %add238 = fadd float %fiz1.0998, %mul235
  %arrayidx240 = getelementptr inbounds float* %faction, i64 %idxprom82
  %33 = load float* %arrayidx240, align 4, !tbaa !3
  %sub241 = fsub float %33, %mul233
  %arrayidx244 = getelementptr inbounds float* %faction, i64 %idxprom85
  %34 = load float* %arrayidx244, align 4, !tbaa !3
  %sub245 = fsub float %34, %mul234
  %arrayidx248 = getelementptr inbounds float* %faction, i64 %idxprom88
  %35 = load float* %arrayidx248, align 4, !tbaa !3
  %sub249 = fsub float %35, %mul235
  %mul250 = fmul float %conv191, %conv191
  %mul251 = fmul float %add122, %krf
  %add252 = fadd float %mul251, %conv191
  %sub253 = fsub float %add252, %crf
  %mul254 = fmul float %mul6, %sub253
  %mul255 = fmul float %mul251, 2.000000e+00
  %sub256 = fsub float %conv191, %mul255
  %mul257 = fmul float %mul6, %sub256
  %mul258 = fmul float %mul250, %mul257
  %add259 = fadd float %add232, %mul254
  %mul260 = fmul float %sub115, %mul258
  %mul261 = fmul float %sub116, %mul258
  %mul262 = fmul float %sub117, %mul258
  %add263 = fadd float %mul260, %add236
  %add264 = fadd float %mul261, %add237
  %add265 = fadd float %mul262, %add238
  %arrayidx268 = getelementptr inbounds float* %faction, i64 %idxprom91
  %36 = load float* %arrayidx268, align 4, !tbaa !3
  %sub269 = fsub float %36, %mul260
  %arrayidx272 = getelementptr inbounds float* %faction, i64 %idxprom94
  %37 = load float* %arrayidx272, align 4, !tbaa !3
  %sub273 = fsub float %37, %mul261
  %arrayidx276 = getelementptr inbounds float* %faction, i64 %idxprom97
  %38 = load float* %arrayidx276, align 4, !tbaa !3
  %sub277 = fsub float %38, %mul262
  %mul278 = fmul float %conv203, %conv203
  %mul279 = fmul float %add130, %krf
  %add280 = fadd float %mul279, %conv203
  %sub281 = fsub float %add280, %crf
  %mul282 = fmul float %mul6, %sub281
  %mul283 = fmul float %mul279, 2.000000e+00
  %sub284 = fsub float %conv203, %mul283
  %mul285 = fmul float %mul6, %sub284
  %mul286 = fmul float %mul278, %mul285
  %add287 = fadd float %add259, %mul282
  %mul288 = fmul float %sub123, %mul286
  %mul289 = fmul float %sub124, %mul286
  %mul290 = fmul float %sub125, %mul286
  %add291 = fadd float %add263, %mul288
  %add292 = fadd float %add264, %mul289
  %add293 = fadd float %add265, %mul290
  %arrayidx296 = getelementptr inbounds float* %faction, i64 %idxprom100
  %39 = load float* %arrayidx296, align 4, !tbaa !3
  %sub297 = fsub float %39, %mul288
  %arrayidx300 = getelementptr inbounds float* %faction, i64 %idxprom103
  %40 = load float* %arrayidx300, align 4, !tbaa !3
  %sub301 = fsub float %40, %mul289
  %arrayidx304 = getelementptr inbounds float* %faction, i64 %idxprom106
  %41 = load float* %arrayidx304, align 4, !tbaa !3
  %sub305 = fsub float %41, %mul290
  %mul306 = fmul float %conv183, %conv183
  %mul307 = fmul float %add138, %krf
  %add308 = fadd float %mul307, %conv183
  %sub309 = fsub float %add308, %crf
  %mul310 = fmul float %mul6, %sub309
  %mul311 = fmul float %mul307, 2.000000e+00
  %sub312 = fsub float %conv183, %mul311
  %mul313 = fmul float %mul6, %sub312
  %mul314 = fmul float %mul306, %mul313
  %add315 = fadd float %mul310, %add287
  %mul316 = fmul float %sub131, %mul314
  %mul317 = fmul float %sub132, %mul314
  %mul318 = fmul float %sub133, %mul314
  %add319 = fadd float %fix2.0997, %mul316
  %add320 = fadd float %fiy2.0996, %mul317
  %add321 = fadd float %fiz2.0995, %mul318
  %sub322 = fsub float %sub241, %mul316
  %sub323 = fsub float %sub245, %mul317
  %sub324 = fsub float %sub249, %mul318
  %mul325 = fmul float %conv195, %conv195
  %mul326 = fmul float %add146, %krf
  %add327 = fadd float %mul326, %conv195
  %sub328 = fsub float %add327, %crf
  %mul329 = fmul float %mul8, %sub328
  %mul330 = fmul float %mul326, 2.000000e+00
  %sub331 = fsub float %conv195, %mul330
  %mul332 = fmul float %mul8, %sub331
  %mul333 = fmul float %mul325, %mul332
  %add334 = fadd float %mul329, %add315
  %mul335 = fmul float %sub139, %mul333
  %mul336 = fmul float %sub140, %mul333
  %mul337 = fmul float %sub141, %mul333
  %add338 = fadd float %add319, %mul335
  %add339 = fadd float %add320, %mul336
  %add340 = fadd float %add321, %mul337
  %sub341 = fsub float %sub269, %mul335
  %sub342 = fsub float %sub273, %mul336
  %sub343 = fsub float %sub277, %mul337
  %mul344 = fmul float %conv207, %conv207
  %mul345 = fmul float %add154, %krf
  %add346 = fadd float %mul345, %conv207
  %sub347 = fsub float %add346, %crf
  %mul348 = fmul float %mul8, %sub347
  %mul349 = fmul float %mul345, 2.000000e+00
  %sub350 = fsub float %conv207, %mul349
  %mul351 = fmul float %mul8, %sub350
  %mul352 = fmul float %mul344, %mul351
  %add353 = fadd float %mul348, %add334
  %mul354 = fmul float %sub147, %mul352
  %mul355 = fmul float %sub148, %mul352
  %mul356 = fmul float %sub149, %mul352
  %add357 = fadd float %add338, %mul354
  %add358 = fadd float %add339, %mul355
  %add359 = fadd float %add340, %mul356
  %sub360 = fsub float %sub297, %mul354
  %sub361 = fsub float %sub301, %mul355
  %sub362 = fsub float %sub305, %mul356
  %mul363 = fmul float %conv187, %conv187
  %mul364 = fmul float %add162, %krf
  %add365 = fadd float %mul364, %conv187
  %sub366 = fsub float %add365, %crf
  %mul367 = fmul float %mul6, %sub366
  %mul368 = fmul float %mul364, 2.000000e+00
  %sub369 = fsub float %conv187, %mul368
  %mul370 = fmul float %mul6, %sub369
  %mul371 = fmul float %mul363, %mul370
  %add372 = fadd float %mul367, %add353
  %mul373 = fmul float %sub155, %mul371
  %mul374 = fmul float %sub156, %mul371
  %mul375 = fmul float %sub157, %mul371
  %add376 = fadd float %fix3.0994, %mul373
  %add377 = fadd float %fiy3.0993, %mul374
  %add378 = fadd float %fiz3.0992, %mul375
  %sub379 = fsub float %sub322, %mul373
  store float %sub379, float* %arrayidx240, align 4, !tbaa !3
  %sub382 = fsub float %sub323, %mul374
  store float %sub382, float* %arrayidx244, align 4, !tbaa !3
  %sub386 = fsub float %sub324, %mul375
  store float %sub386, float* %arrayidx248, align 4, !tbaa !3
  %mul390 = fmul float %conv199, %conv199
  %mul391 = fmul float %add170, %krf
  %add392 = fadd float %mul391, %conv199
  %sub393 = fsub float %add392, %crf
  %mul394 = fmul float %mul8, %sub393
  %mul395 = fmul float %mul391, 2.000000e+00
  %sub396 = fsub float %conv199, %mul395
  %mul397 = fmul float %mul8, %sub396
  %mul398 = fmul float %mul390, %mul397
  %add399 = fadd float %mul394, %add372
  %mul400 = fmul float %sub163, %mul398
  %mul401 = fmul float %sub164, %mul398
  %mul402 = fmul float %sub165, %mul398
  %add403 = fadd float %add376, %mul400
  %add404 = fadd float %add377, %mul401
  %add405 = fadd float %add378, %mul402
  %sub406 = fsub float %sub341, %mul400
  store float %sub406, float* %arrayidx268, align 4, !tbaa !3
  %sub410 = fsub float %sub342, %mul401
  store float %sub410, float* %arrayidx272, align 4, !tbaa !3
  %sub414 = fsub float %sub343, %mul402
  store float %sub414, float* %arrayidx276, align 4, !tbaa !3
  %mul418 = fmul float %conv211, %conv211
  %mul419 = fmul float %add178, %krf
  %add420 = fadd float %mul419, %conv211
  %sub421 = fsub float %add420, %crf
  %mul422 = fmul float %mul8, %sub421
  %mul423 = fmul float %mul419, 2.000000e+00
  %sub424 = fsub float %conv211, %mul423
  %mul425 = fmul float %mul8, %sub424
  %mul426 = fmul float %mul418, %mul425
  %add427 = fadd float %mul422, %add399
  %mul428 = fmul float %sub171, %mul426
  %mul429 = fmul float %sub172, %mul426
  %mul430 = fmul float %sub173, %mul426
  %add431 = fadd float %add403, %mul428
  %add432 = fadd float %add404, %mul429
  %add433 = fadd float %add405, %mul430
  %sub434 = fsub float %sub360, %mul428
  store float %sub434, float* %arrayidx296, align 4, !tbaa !3
  %sub438 = fsub float %sub361, %mul429
  store float %sub438, float* %arrayidx300, align 4, !tbaa !3
  %sub442 = fsub float %sub362, %mul430
  store float %sub442, float* %arrayidx304, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %42 = trunc i64 %indvars.iv.next to i32
  %cmp77 = icmp slt i32 %42, %12
  br i1 %cmp77, label %for.body78, label %for.end

for.end:                                          ; preds = %for.body78, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add427, %for.body78 ]
  %vnbtot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %sub219, %for.body78 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add291, %for.body78 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add292, %for.body78 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add293, %for.body78 ]
  %fix2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add357, %for.body78 ]
  %fiy2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add358, %for.body78 ]
  %fiz2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add359, %for.body78 ]
  %fix3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add431, %for.body78 ]
  %fiy3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add432, %for.body78 ]
  %fiz3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add433, %for.body78 ]
  %arrayidx447 = getelementptr inbounds float* %faction, i64 %idxprom41
  %43 = load float* %arrayidx447, align 4, !tbaa !3
  %add448 = fadd float %fix1.0.lcssa, %43
  store float %add448, float* %arrayidx447, align 4, !tbaa !3
  %arrayidx453 = getelementptr inbounds float* %faction, i64 %idxprom45
  %44 = load float* %arrayidx453, align 4, !tbaa !3
  %add454 = fadd float %fiy1.0.lcssa, %44
  store float %add454, float* %arrayidx453, align 4, !tbaa !3
  %arrayidx460 = getelementptr inbounds float* %faction, i64 %idxprom49
  %45 = load float* %arrayidx460, align 4, !tbaa !3
  %add461 = fadd float %fiz1.0.lcssa, %45
  store float %add461, float* %arrayidx460, align 4, !tbaa !3
  %arrayidx467 = getelementptr inbounds float* %faction, i64 %idxprom53
  %46 = load float* %arrayidx467, align 4, !tbaa !3
  %add468 = fadd float %fix2.0.lcssa, %46
  store float %add468, float* %arrayidx467, align 4, !tbaa !3
  %arrayidx474 = getelementptr inbounds float* %faction, i64 %idxprom57
  %47 = load float* %arrayidx474, align 4, !tbaa !3
  %add475 = fadd float %fiy2.0.lcssa, %47
  store float %add475, float* %arrayidx474, align 4, !tbaa !3
  %arrayidx481 = getelementptr inbounds float* %faction, i64 %idxprom61
  %48 = load float* %arrayidx481, align 4, !tbaa !3
  %add482 = fadd float %fiz2.0.lcssa, %48
  store float %add482, float* %arrayidx481, align 4, !tbaa !3
  %arrayidx488 = getelementptr inbounds float* %faction, i64 %idxprom65
  %49 = load float* %arrayidx488, align 4, !tbaa !3
  %add489 = fadd float %fix3.0.lcssa, %49
  store float %add489, float* %arrayidx488, align 4, !tbaa !3
  %arrayidx495 = getelementptr inbounds float* %faction, i64 %idxprom69
  %50 = load float* %arrayidx495, align 4, !tbaa !3
  %add496 = fadd float %fiy3.0.lcssa, %50
  store float %add496, float* %arrayidx495, align 4, !tbaa !3
  %arrayidx502 = getelementptr inbounds float* %faction, i64 %idxprom73
  %51 = load float* %arrayidx502, align 4, !tbaa !3
  %add503 = fadd float %fiz3.0.lcssa, %51
  store float %add503, float* %arrayidx502, align 4, !tbaa !3
  %arrayidx508 = getelementptr inbounds float* %fshift, i64 %idxprom25
  %52 = load float* %arrayidx508, align 4, !tbaa !3
  %add509 = fadd float %fix1.0.lcssa, %52
  %add510 = fadd float %fix2.0.lcssa, %add509
  %add511 = fadd float %fix3.0.lcssa, %add510
  store float %add511, float* %arrayidx508, align 4, !tbaa !3
  %arrayidx516 = getelementptr inbounds float* %fshift, i64 %idxprom28
  %53 = load float* %arrayidx516, align 4, !tbaa !3
  %add517 = fadd float %fiy1.0.lcssa, %53
  %add518 = fadd float %fiy2.0.lcssa, %add517
  %add519 = fadd float %fiy3.0.lcssa, %add518
  store float %add519, float* %arrayidx516, align 4, !tbaa !3
  %arrayidx525 = getelementptr inbounds float* %fshift, i64 %idxprom31
  %54 = load float* %arrayidx525, align 4, !tbaa !3
  %add526 = fadd float %fiz1.0.lcssa, %54
  %add527 = fadd float %fiz2.0.lcssa, %add526
  %add528 = fadd float %fiz3.0.lcssa, %add527
  store float %add528, float* %arrayidx525, align 4, !tbaa !3
  %arrayidx533 = getelementptr inbounds i32* %gid, i64 %indvars.iv1016
  %55 = load i32* %arrayidx533, align 4, !tbaa !0
  %idxprom534 = sext i32 %55 to i64
  %arrayidx535 = getelementptr inbounds float* %Vc, i64 %idxprom534
  %56 = load float* %arrayidx535, align 4, !tbaa !3
  %add536 = fadd float %vctot.0.lcssa, %56
  store float %add536, float* %arrayidx535, align 4, !tbaa !3
  %arrayidx540 = getelementptr inbounds float* %Vnb, i64 %idxprom534
  %57 = load float* %arrayidx540, align 4, !tbaa !3
  %add541 = fadd float %vnbtot.0.lcssa, %57
  store float %add541, float* %arrayidx540, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next1017 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end546, label %for.end.for.body_crit_edge

for.end.for.body_crit_edge:                       ; preds = %for.end
  %arrayidx34.phi.trans.insert = getelementptr inbounds i32* %iinr, i64 %indvars.iv.next1017
  %.pre = load i32* %arrayidx34.phi.trans.insert, align 4, !tbaa !0
  br label %for.body

for.end546:                                       ; preds = %for.end, %entry
  ret void
}
