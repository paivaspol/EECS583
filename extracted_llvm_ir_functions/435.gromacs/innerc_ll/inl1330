define void @inl1330(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb, float %tabscale, float* nocapture %VFtab) #0 {
entry:
  %0 = load i32* %iinr, align 4, !tbaa !0
  %idxprom = sext i32 %0 to i64
  %arrayidx1 = getelementptr inbounds float* %charge, i64 %idxprom
  %1 = load float* %arrayidx1, align 4, !tbaa !3
  %add = add nsw i32 %0, 1
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds float* %charge, i64 %idxprom2
  %2 = load float* %arrayidx3, align 4, !tbaa !3
  %mul = fmul float %1, %facel
  %mul4 = fmul float %1, %mul
  %mul6 = fmul float %mul, %2
  %mul7 = fmul float %2, %facel
  %mul8 = fmul float %2, %mul7
  %mul9 = shl i32 %ntype, 1
  %arrayidx11 = getelementptr inbounds i32* %type, i64 %idxprom
  %3 = load i32* %arrayidx11, align 4, !tbaa !0
  %mul12 = mul nsw i32 %mul9, %3
  %mul15 = shl nsw i32 %3, 1
  %add16 = add nsw i32 %mul12, %mul15
  %idxprom17 = sext i32 %add16 to i64
  %arrayidx18 = getelementptr inbounds float* %nbfp, i64 %idxprom17
  %4 = load float* %arrayidx18, align 4, !tbaa !3
  %add19968 = or i32 %add16, 1
  %idxprom20 = sext i32 %add19968 to i64
  %arrayidx21 = getelementptr inbounds float* %nbfp, i64 %idxprom20
  %5 = load float* %arrayidx21, align 4, !tbaa !3
  %cmp999 = icmp sgt i32 %nri, 0
  br i1 %cmp999, label %for.body, label %for.end539

for.body:                                         ; preds = %entry, %for.end.for.body_crit_edge
  %6 = phi i32 [ %.pre, %for.end.for.body_crit_edge ], [ %0, %entry ]
  %indvars.iv1001 = phi i64 [ %indvars.iv.next1002, %for.end.for.body_crit_edge ], [ 0, %entry ]
  %arrayidx23 = getelementptr inbounds i32* %shift, i64 %indvars.iv1001
  %7 = load i32* %arrayidx23, align 4, !tbaa !0
  %mul24 = mul nsw i32 %7, 3
  %idxprom25 = sext i32 %mul24 to i64
  %arrayidx26 = getelementptr inbounds float* %shiftvec, i64 %idxprom25
  %8 = load float* %arrayidx26, align 4, !tbaa !3
  %add27 = add nsw i32 %mul24, 1
  %idxprom28 = sext i32 %add27 to i64
  %arrayidx29 = getelementptr inbounds float* %shiftvec, i64 %idxprom28
  %9 = load float* %arrayidx29, align 4, !tbaa !3
  %add30 = add nsw i32 %mul24, 2
  %idxprom31 = sext i32 %add30 to i64
  %arrayidx32 = getelementptr inbounds float* %shiftvec, i64 %idxprom31
  %10 = load float* %arrayidx32, align 4, !tbaa !3
  %mul35 = mul nsw i32 %6, 3
  %arrayidx37 = getelementptr inbounds i32* %jindex, i64 %indvars.iv1001
  %11 = load i32* %arrayidx37, align 4, !tbaa !0
  %indvars.iv.next1002 = add i64 %indvars.iv1001, 1
  %arrayidx40 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next1002
  %12 = load i32* %arrayidx40, align 4, !tbaa !0
  %idxprom41 = sext i32 %mul35 to i64
  %arrayidx42 = getelementptr inbounds float* %pos, i64 %idxprom41
  %13 = load float* %arrayidx42, align 4, !tbaa !3
  %add43 = fadd float %8, %13
  %add44 = add nsw i32 %mul35, 1
  %idxprom45 = sext i32 %add44 to i64
  %arrayidx46 = getelementptr inbounds float* %pos, i64 %idxprom45
  %14 = load float* %arrayidx46, align 4, !tbaa !3
  %add47 = fadd float %9, %14
  %add48 = add nsw i32 %mul35, 2
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds float* %pos, i64 %idxprom49
  %15 = load float* %arrayidx50, align 4, !tbaa !3
  %add51 = fadd float %10, %15
  %add52 = add nsw i32 %mul35, 3
  %idxprom53 = sext i32 %add52 to i64
  %arrayidx54 = getelementptr inbounds float* %pos, i64 %idxprom53
  %16 = load float* %arrayidx54, align 4, !tbaa !3
  %add55 = fadd float %8, %16
  %add56 = add nsw i32 %mul35, 4
  %idxprom57 = sext i32 %add56 to i64
  %arrayidx58 = getelementptr inbounds float* %pos, i64 %idxprom57
  %17 = load float* %arrayidx58, align 4, !tbaa !3
  %add59 = fadd float %9, %17
  %add60 = add nsw i32 %mul35, 5
  %idxprom61 = sext i32 %add60 to i64
  %arrayidx62 = getelementptr inbounds float* %pos, i64 %idxprom61
  %18 = load float* %arrayidx62, align 4, !tbaa !3
  %add63 = fadd float %10, %18
  %add64 = add nsw i32 %mul35, 6
  %idxprom65 = sext i32 %add64 to i64
  %arrayidx66 = getelementptr inbounds float* %pos, i64 %idxprom65
  %19 = load float* %arrayidx66, align 4, !tbaa !3
  %add67 = fadd float %8, %19
  %add68 = add nsw i32 %mul35, 7
  %idxprom69 = sext i32 %add68 to i64
  %arrayidx70 = getelementptr inbounds float* %pos, i64 %idxprom69
  %20 = load float* %arrayidx70, align 4, !tbaa !3
  %add71 = fadd float %9, %20
  %add72 = add nsw i32 %mul35, 8
  %idxprom73 = sext i32 %add72 to i64
  %arrayidx74 = getelementptr inbounds float* %pos, i64 %idxprom73
  %21 = load float* %arrayidx74, align 4, !tbaa !3
  %add75 = fadd float %10, %21
  %cmp77976 = icmp slt i32 %11, %12
  br i1 %cmp77976, label %for.body78.lr.ph, label %for.end

for.body78.lr.ph:                                 ; preds = %for.body
  %22 = sext i32 %11 to i64
  br label %for.body78

for.body78:                                       ; preds = %for.body78.lr.ph, %for.body78
  %indvars.iv = phi i64 [ %22, %for.body78.lr.ph ], [ %indvars.iv.next, %for.body78 ]
  %vctot.0987 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add420, %for.body78 ]
  %vnbtot.0986 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add266, %for.body78 ]
  %fix1.0985 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add320, %for.body78 ]
  %fiy1.0984 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add321, %for.body78 ]
  %fiz1.0983 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add322, %for.body78 ]
  %fix2.0982 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add368, %for.body78 ]
  %fiy2.0981 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add369, %for.body78 ]
  %fiz2.0980 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add370, %for.body78 ]
  %fix3.0979 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add424, %for.body78 ]
  %fiy3.0978 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add425, %for.body78 ]
  %fiz3.0977 = phi float [ 0.000000e+00, %for.body78.lr.ph ], [ %add426, %for.body78 ]
  %arrayidx80 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %23 = load i32* %arrayidx80, align 4, !tbaa !0
  %mul81 = mul nsw i32 %23, 3
  %idxprom82 = sext i32 %mul81 to i64
  %arrayidx83 = getelementptr inbounds float* %pos, i64 %idxprom82
  %24 = load float* %arrayidx83, align 4, !tbaa !3
  %add84 = add nsw i32 %mul81, 1
  %idxprom85 = sext i32 %add84 to i64
  %arrayidx86 = getelementptr inbounds float* %pos, i64 %idxprom85
  %25 = load float* %arrayidx86, align 4, !tbaa !3
  %add87 = add nsw i32 %mul81, 2
  %idxprom88 = sext i32 %add87 to i64
  %arrayidx89 = getelementptr inbounds float* %pos, i64 %idxprom88
  %26 = load float* %arrayidx89, align 4, !tbaa !3
  %add90 = add nsw i32 %mul81, 3
  %idxprom91 = sext i32 %add90 to i64
  %arrayidx92 = getelementptr inbounds float* %pos, i64 %idxprom91
  %27 = load float* %arrayidx92, align 4, !tbaa !3
  %add93 = add nsw i32 %mul81, 4
  %idxprom94 = sext i32 %add93 to i64
  %arrayidx95 = getelementptr inbounds float* %pos, i64 %idxprom94
  %28 = load float* %arrayidx95, align 4, !tbaa !3
  %add96 = add nsw i32 %mul81, 5
  %idxprom97 = sext i32 %add96 to i64
  %arrayidx98 = getelementptr inbounds float* %pos, i64 %idxprom97
  %29 = load float* %arrayidx98, align 4, !tbaa !3
  %add99 = add nsw i32 %mul81, 6
  %idxprom100 = sext i32 %add99 to i64
  %arrayidx101 = getelementptr inbounds float* %pos, i64 %idxprom100
  %30 = load float* %arrayidx101, align 4, !tbaa !3
  %add102 = add nsw i32 %mul81, 7
  %idxprom103 = sext i32 %add102 to i64
  %arrayidx104 = getelementptr inbounds float* %pos, i64 %idxprom103
  %31 = load float* %arrayidx104, align 4, !tbaa !3
  %add105 = add nsw i32 %mul81, 8
  %idxprom106 = sext i32 %add105 to i64
  %arrayidx107 = getelementptr inbounds float* %pos, i64 %idxprom106
  %32 = load float* %arrayidx107, align 4, !tbaa !3
  %sub = fsub float %add43, %24
  %sub108 = fsub float %add47, %25
  %sub109 = fsub float %add51, %26
  %mul110 = fmul float %sub, %sub
  %mul111 = fmul float %sub108, %sub108
  %add112 = fadd float %mul110, %mul111
  %mul113 = fmul float %sub109, %sub109
  %add114 = fadd float %add112, %mul113
  %sub115 = fsub float %add43, %27
  %sub116 = fsub float %add47, %28
  %sub117 = fsub float %add51, %29
  %mul118 = fmul float %sub115, %sub115
  %mul119 = fmul float %sub116, %sub116
  %add120 = fadd float %mul118, %mul119
  %mul121 = fmul float %sub117, %sub117
  %add122 = fadd float %add120, %mul121
  %sub123 = fsub float %add43, %30
  %sub124 = fsub float %add47, %31
  %sub125 = fsub float %add51, %32
  %mul126 = fmul float %sub123, %sub123
  %mul127 = fmul float %sub124, %sub124
  %add128 = fadd float %mul126, %mul127
  %mul129 = fmul float %sub125, %sub125
  %add130 = fadd float %add128, %mul129
  %sub131 = fsub float %add55, %24
  %sub132 = fsub float %add59, %25
  %sub133 = fsub float %add63, %26
  %mul134 = fmul float %sub131, %sub131
  %mul135 = fmul float %sub132, %sub132
  %add136 = fadd float %mul134, %mul135
  %mul137 = fmul float %sub133, %sub133
  %add138 = fadd float %add136, %mul137
  %sub139 = fsub float %add55, %27
  %sub140 = fsub float %add59, %28
  %sub141 = fsub float %add63, %29
  %mul142 = fmul float %sub139, %sub139
  %mul143 = fmul float %sub140, %sub140
  %add144 = fadd float %mul142, %mul143
  %mul145 = fmul float %sub141, %sub141
  %add146 = fadd float %add144, %mul145
  %sub147 = fsub float %add55, %30
  %sub148 = fsub float %add59, %31
  %sub149 = fsub float %add63, %32
  %mul150 = fmul float %sub147, %sub147
  %mul151 = fmul float %sub148, %sub148
  %add152 = fadd float %mul150, %mul151
  %mul153 = fmul float %sub149, %sub149
  %add154 = fadd float %add152, %mul153
  %sub155 = fsub float %add67, %24
  %sub156 = fsub float %add71, %25
  %sub157 = fsub float %add75, %26
  %mul158 = fmul float %sub155, %sub155
  %mul159 = fmul float %sub156, %sub156
  %add160 = fadd float %mul158, %mul159
  %mul161 = fmul float %sub157, %sub157
  %add162 = fadd float %add160, %mul161
  %sub163 = fsub float %add67, %27
  %sub164 = fsub float %add71, %28
  %sub165 = fsub float %add75, %29
  %mul166 = fmul float %sub163, %sub163
  %mul167 = fmul float %sub164, %sub164
  %add168 = fadd float %mul166, %mul167
  %mul169 = fmul float %sub165, %sub165
  %add170 = fadd float %add168, %mul169
  %sub171 = fsub float %add67, %30
  %sub172 = fsub float %add71, %31
  %sub173 = fsub float %add75, %32
  %mul174 = fmul float %sub171, %sub171
  %mul175 = fmul float %sub172, %sub172
  %add176 = fadd float %mul174, %mul175
  %mul177 = fmul float %sub173, %sub173
  %add178 = fadd float %add176, %mul177
  %conv = fpext float %add114 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv179 = fptrunc double %div to float
  %conv180 = fpext float %add138 to double
  %call181 = tail call double @sqrt(double %conv180) #2
  %div182 = fdiv double 1.000000e+00, %call181
  %conv183 = fptrunc double %div182 to float
  %conv184 = fpext float %add162 to double
  %call185 = tail call double @sqrt(double %conv184) #2
  %div186 = fdiv double 1.000000e+00, %call185
  %conv187 = fptrunc double %div186 to float
  %conv188 = fpext float %add122 to double
  %call189 = tail call double @sqrt(double %conv188) #2
  %div190 = fdiv double 1.000000e+00, %call189
  %conv191 = fptrunc double %div190 to float
  %conv192 = fpext float %add146 to double
  %call193 = tail call double @sqrt(double %conv192) #2
  %div194 = fdiv double 1.000000e+00, %call193
  %conv195 = fptrunc double %div194 to float
  %conv196 = fpext float %add170 to double
  %call197 = tail call double @sqrt(double %conv196) #2
  %div198 = fdiv double 1.000000e+00, %call197
  %conv199 = fptrunc double %div198 to float
  %conv200 = fpext float %add130 to double
  %call201 = tail call double @sqrt(double %conv200) #2
  %div202 = fdiv double 1.000000e+00, %call201
  %conv203 = fptrunc double %div202 to float
  %conv204 = fpext float %add154 to double
  %call205 = tail call double @sqrt(double %conv204) #2
  %div206 = fdiv double 1.000000e+00, %call205
  %conv207 = fptrunc double %div206 to float
  %conv208 = fpext float %add178 to double
  %call209 = tail call double @sqrt(double %conv208) #2
  %div210 = fdiv double 1.000000e+00, %call209
  %conv211 = fptrunc double %div210 to float
  %mul212 = fmul float %add114, %conv179
  %mul214 = fmul float %mul212, %tabscale
  %conv215 = fptosi float %mul214 to i32
  %conv216 = sitofp i32 %conv215 to float
  %sub217 = fsub float %mul214, %conv216
  %mul218 = fmul float %sub217, %sub217
  %mul219 = shl nsw i32 %conv215, 3
  %idxprom220 = sext i32 %mul219 to i64
  %arrayidx221 = getelementptr inbounds float* %VFtab, i64 %idxprom220
  %33 = load float* %arrayidx221, align 4, !tbaa !3
  %add222969 = or i32 %mul219, 1
  %idxprom223 = sext i32 %add222969 to i64
  %arrayidx224 = getelementptr inbounds float* %VFtab, i64 %idxprom223
  %34 = load float* %arrayidx224, align 4, !tbaa !3
  %add225970 = or i32 %mul219, 2
  %idxprom226 = sext i32 %add225970 to i64
  %arrayidx227 = getelementptr inbounds float* %VFtab, i64 %idxprom226
  %35 = load float* %arrayidx227, align 4, !tbaa !3
  %mul228 = fmul float %sub217, %35
  %add229971 = or i32 %mul219, 3
  %idxprom230 = sext i32 %add229971 to i64
  %arrayidx231 = getelementptr inbounds float* %VFtab, i64 %idxprom230
  %36 = load float* %arrayidx231, align 4, !tbaa !3
  %mul232 = fmul float %mul218, %36
  %add233 = fadd float %34, %mul228
  %add234 = fadd float %add233, %mul232
  %mul235 = fmul float %sub217, %add234
  %add236 = fadd float %33, %mul235
  %add237 = fadd float %mul228, %add234
  %mul238 = fmul float %mul232, 2.000000e+00
  %add239 = fadd float %mul238, %add237
  %mul240 = fmul float %4, %add236
  %mul241 = fmul float %4, %add239
  %add242972 = or i32 %mul219, 4
  %idxprom243 = sext i32 %add242972 to i64
  %arrayidx244 = getelementptr inbounds float* %VFtab, i64 %idxprom243
  %37 = load float* %arrayidx244, align 4, !tbaa !3
  %add245973 = or i32 %mul219, 5
  %idxprom246 = sext i32 %add245973 to i64
  %arrayidx247 = getelementptr inbounds float* %VFtab, i64 %idxprom246
  %38 = load float* %arrayidx247, align 4, !tbaa !3
  %add248974 = or i32 %mul219, 6
  %idxprom249 = sext i32 %add248974 to i64
  %arrayidx250 = getelementptr inbounds float* %VFtab, i64 %idxprom249
  %39 = load float* %arrayidx250, align 4, !tbaa !3
  %mul251 = fmul float %sub217, %39
  %add252975 = or i32 %mul219, 7
  %idxprom253 = sext i32 %add252975 to i64
  %arrayidx254 = getelementptr inbounds float* %VFtab, i64 %idxprom253
  %40 = load float* %arrayidx254, align 4, !tbaa !3
  %mul255 = fmul float %mul218, %40
  %add256 = fadd float %38, %mul251
  %add257 = fadd float %add256, %mul255
  %mul258 = fmul float %sub217, %add257
  %add259 = fadd float %37, %mul258
  %add260 = fadd float %mul251, %add257
  %mul261 = fmul float %mul255, 2.000000e+00
  %add262 = fadd float %mul261, %add260
  %mul263 = fmul float %5, %add259
  %mul264 = fmul float %5, %add262
  %add265 = fadd float %vnbtot.0986, %mul240
  %add266 = fadd float %add265, %mul263
  %mul267 = fmul float %mul4, %conv179
  %mul268 = fmul float %conv179, %mul267
  %add269 = fadd float %mul241, %mul264
  %mul270 = fmul float %add269, %tabscale
  %sub271 = fsub float %mul268, %mul270
  %mul272 = fmul float %conv179, %sub271
  %add273 = fadd float %vctot.0987, %mul267
  %mul274 = fmul float %sub, %mul272
  %mul275 = fmul float %sub108, %mul272
  %mul276 = fmul float %sub109, %mul272
  %add277 = fadd float %fix1.0985, %mul274
  %add278 = fadd float %fiy1.0984, %mul275
  %add279 = fadd float %fiz1.0983, %mul276
  %arrayidx281 = getelementptr inbounds float* %faction, i64 %idxprom82
  %41 = load float* %arrayidx281, align 4, !tbaa !3
  %sub282 = fsub float %41, %mul274
  %arrayidx285 = getelementptr inbounds float* %faction, i64 %idxprom85
  %42 = load float* %arrayidx285, align 4, !tbaa !3
  %sub286 = fsub float %42, %mul275
  %arrayidx289 = getelementptr inbounds float* %faction, i64 %idxprom88
  %43 = load float* %arrayidx289, align 4, !tbaa !3
  %sub290 = fsub float %43, %mul276
  %mul291 = fmul float %conv191, %conv191
  %mul292 = fmul float %mul6, %conv191
  %mul293 = fmul float %mul292, %mul291
  %add294 = fadd float %add273, %mul292
  %mul295 = fmul float %sub115, %mul293
  %mul296 = fmul float %sub116, %mul293
  %mul297 = fmul float %sub117, %mul293
  %add298 = fadd float %mul295, %add277
  %add299 = fadd float %mul296, %add278
  %add300 = fadd float %mul297, %add279
  %arrayidx303 = getelementptr inbounds float* %faction, i64 %idxprom91
  %44 = load float* %arrayidx303, align 4, !tbaa !3
  %sub304 = fsub float %44, %mul295
  %arrayidx307 = getelementptr inbounds float* %faction, i64 %idxprom94
  %45 = load float* %arrayidx307, align 4, !tbaa !3
  %sub308 = fsub float %45, %mul296
  %arrayidx311 = getelementptr inbounds float* %faction, i64 %idxprom97
  %46 = load float* %arrayidx311, align 4, !tbaa !3
  %sub312 = fsub float %46, %mul297
  %mul313 = fmul float %conv203, %conv203
  %mul314 = fmul float %mul6, %conv203
  %mul315 = fmul float %mul314, %mul313
  %add316 = fadd float %add294, %mul314
  %mul317 = fmul float %sub123, %mul315
  %mul318 = fmul float %sub124, %mul315
  %mul319 = fmul float %sub125, %mul315
  %add320 = fadd float %mul317, %add298
  %add321 = fadd float %mul318, %add299
  %add322 = fadd float %mul319, %add300
  %arrayidx325 = getelementptr inbounds float* %faction, i64 %idxprom100
  %47 = load float* %arrayidx325, align 4, !tbaa !3
  %sub326 = fsub float %47, %mul317
  %arrayidx329 = getelementptr inbounds float* %faction, i64 %idxprom103
  %48 = load float* %arrayidx329, align 4, !tbaa !3
  %sub330 = fsub float %48, %mul318
  %arrayidx333 = getelementptr inbounds float* %faction, i64 %idxprom106
  %49 = load float* %arrayidx333, align 4, !tbaa !3
  %sub334 = fsub float %49, %mul319
  %mul335 = fmul float %conv183, %conv183
  %mul336 = fmul float %mul6, %conv183
  %mul337 = fmul float %mul336, %mul335
  %add338 = fadd float %mul336, %add316
  %mul339 = fmul float %sub131, %mul337
  %mul340 = fmul float %sub132, %mul337
  %mul341 = fmul float %sub133, %mul337
  %add342 = fadd float %fix2.0982, %mul339
  %add343 = fadd float %fiy2.0981, %mul340
  %add344 = fadd float %fiz2.0980, %mul341
  %sub345 = fsub float %sub282, %mul339
  %sub346 = fsub float %sub286, %mul340
  %sub347 = fsub float %sub290, %mul341
  %mul348 = fmul float %conv195, %conv195
  %mul349 = fmul float %mul8, %conv195
  %mul350 = fmul float %mul349, %mul348
  %add351 = fadd float %mul349, %add338
  %mul352 = fmul float %sub139, %mul350
  %mul353 = fmul float %sub140, %mul350
  %mul354 = fmul float %sub141, %mul350
  %add355 = fadd float %add342, %mul352
  %add356 = fadd float %add343, %mul353
  %add357 = fadd float %add344, %mul354
  %sub358 = fsub float %sub304, %mul352
  %sub359 = fsub float %sub308, %mul353
  %sub360 = fsub float %sub312, %mul354
  %mul361 = fmul float %conv207, %conv207
  %mul362 = fmul float %mul8, %conv207
  %mul363 = fmul float %mul362, %mul361
  %add364 = fadd float %mul362, %add351
  %mul365 = fmul float %sub147, %mul363
  %mul366 = fmul float %sub148, %mul363
  %mul367 = fmul float %sub149, %mul363
  %add368 = fadd float %add355, %mul365
  %add369 = fadd float %add356, %mul366
  %add370 = fadd float %add357, %mul367
  %sub371 = fsub float %sub326, %mul365
  %sub372 = fsub float %sub330, %mul366
  %sub373 = fsub float %sub334, %mul367
  %mul374 = fmul float %conv187, %conv187
  %mul375 = fmul float %mul6, %conv187
  %mul376 = fmul float %mul375, %mul374
  %add377 = fadd float %mul375, %add364
  %mul378 = fmul float %sub155, %mul376
  %mul379 = fmul float %sub156, %mul376
  %mul380 = fmul float %sub157, %mul376
  %add381 = fadd float %fix3.0979, %mul378
  %add382 = fadd float %fiy3.0978, %mul379
  %add383 = fadd float %fiz3.0977, %mul380
  %sub384 = fsub float %sub345, %mul378
  store float %sub384, float* %arrayidx281, align 4, !tbaa !3
  %sub387 = fsub float %sub346, %mul379
  store float %sub387, float* %arrayidx285, align 4, !tbaa !3
  %sub391 = fsub float %sub347, %mul380
  store float %sub391, float* %arrayidx289, align 4, !tbaa !3
  %mul395 = fmul float %conv199, %conv199
  %mul396 = fmul float %mul8, %conv199
  %mul397 = fmul float %mul396, %mul395
  %add398 = fadd float %mul396, %add377
  %mul399 = fmul float %sub163, %mul397
  %mul400 = fmul float %sub164, %mul397
  %mul401 = fmul float %sub165, %mul397
  %add402 = fadd float %add381, %mul399
  %add403 = fadd float %add382, %mul400
  %add404 = fadd float %add383, %mul401
  %sub405 = fsub float %sub358, %mul399
  store float %sub405, float* %arrayidx303, align 4, !tbaa !3
  %sub409 = fsub float %sub359, %mul400
  store float %sub409, float* %arrayidx307, align 4, !tbaa !3
  %sub413 = fsub float %sub360, %mul401
  store float %sub413, float* %arrayidx311, align 4, !tbaa !3
  %mul417 = fmul float %conv211, %conv211
  %mul418 = fmul float %mul8, %conv211
  %mul419 = fmul float %mul418, %mul417
  %add420 = fadd float %mul418, %add398
  %mul421 = fmul float %sub171, %mul419
  %mul422 = fmul float %sub172, %mul419
  %mul423 = fmul float %sub173, %mul419
  %add424 = fadd float %add402, %mul421
  %add425 = fadd float %add403, %mul422
  %add426 = fadd float %add404, %mul423
  %sub427 = fsub float %sub371, %mul421
  store float %sub427, float* %arrayidx325, align 4, !tbaa !3
  %sub431 = fsub float %sub372, %mul422
  store float %sub431, float* %arrayidx329, align 4, !tbaa !3
  %sub435 = fsub float %sub373, %mul423
  store float %sub435, float* %arrayidx333, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %50 = trunc i64 %indvars.iv.next to i32
  %cmp77 = icmp slt i32 %50, %12
  br i1 %cmp77, label %for.body78, label %for.end

for.end:                                          ; preds = %for.body78, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add420, %for.body78 ]
  %vnbtot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add266, %for.body78 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add320, %for.body78 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add321, %for.body78 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add322, %for.body78 ]
  %fix2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add368, %for.body78 ]
  %fiy2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add369, %for.body78 ]
  %fiz2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add370, %for.body78 ]
  %fix3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add424, %for.body78 ]
  %fiy3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add425, %for.body78 ]
  %fiz3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add426, %for.body78 ]
  %arrayidx440 = getelementptr inbounds float* %faction, i64 %idxprom41
  %51 = load float* %arrayidx440, align 4, !tbaa !3
  %add441 = fadd float %fix1.0.lcssa, %51
  store float %add441, float* %arrayidx440, align 4, !tbaa !3
  %arrayidx446 = getelementptr inbounds float* %faction, i64 %idxprom45
  %52 = load float* %arrayidx446, align 4, !tbaa !3
  %add447 = fadd float %fiy1.0.lcssa, %52
  store float %add447, float* %arrayidx446, align 4, !tbaa !3
  %arrayidx453 = getelementptr inbounds float* %faction, i64 %idxprom49
  %53 = load float* %arrayidx453, align 4, !tbaa !3
  %add454 = fadd float %fiz1.0.lcssa, %53
  store float %add454, float* %arrayidx453, align 4, !tbaa !3
  %arrayidx460 = getelementptr inbounds float* %faction, i64 %idxprom53
  %54 = load float* %arrayidx460, align 4, !tbaa !3
  %add461 = fadd float %fix2.0.lcssa, %54
  store float %add461, float* %arrayidx460, align 4, !tbaa !3
  %arrayidx467 = getelementptr inbounds float* %faction, i64 %idxprom57
  %55 = load float* %arrayidx467, align 4, !tbaa !3
  %add468 = fadd float %fiy2.0.lcssa, %55
  store float %add468, float* %arrayidx467, align 4, !tbaa !3
  %arrayidx474 = getelementptr inbounds float* %faction, i64 %idxprom61
  %56 = load float* %arrayidx474, align 4, !tbaa !3
  %add475 = fadd float %fiz2.0.lcssa, %56
  store float %add475, float* %arrayidx474, align 4, !tbaa !3
  %arrayidx481 = getelementptr inbounds float* %faction, i64 %idxprom65
  %57 = load float* %arrayidx481, align 4, !tbaa !3
  %add482 = fadd float %fix3.0.lcssa, %57
  store float %add482, float* %arrayidx481, align 4, !tbaa !3
  %arrayidx488 = getelementptr inbounds float* %faction, i64 %idxprom69
  %58 = load float* %arrayidx488, align 4, !tbaa !3
  %add489 = fadd float %fiy3.0.lcssa, %58
  store float %add489, float* %arrayidx488, align 4, !tbaa !3
  %arrayidx495 = getelementptr inbounds float* %faction, i64 %idxprom73
  %59 = load float* %arrayidx495, align 4, !tbaa !3
  %add496 = fadd float %fiz3.0.lcssa, %59
  store float %add496, float* %arrayidx495, align 4, !tbaa !3
  %arrayidx501 = getelementptr inbounds float* %fshift, i64 %idxprom25
  %60 = load float* %arrayidx501, align 4, !tbaa !3
  %add502 = fadd float %fix1.0.lcssa, %60
  %add503 = fadd float %fix2.0.lcssa, %add502
  %add504 = fadd float %fix3.0.lcssa, %add503
  store float %add504, float* %arrayidx501, align 4, !tbaa !3
  %arrayidx509 = getelementptr inbounds float* %fshift, i64 %idxprom28
  %61 = load float* %arrayidx509, align 4, !tbaa !3
  %add510 = fadd float %fiy1.0.lcssa, %61
  %add511 = fadd float %fiy2.0.lcssa, %add510
  %add512 = fadd float %fiy3.0.lcssa, %add511
  store float %add512, float* %arrayidx509, align 4, !tbaa !3
  %arrayidx518 = getelementptr inbounds float* %fshift, i64 %idxprom31
  %62 = load float* %arrayidx518, align 4, !tbaa !3
  %add519 = fadd float %fiz1.0.lcssa, %62
  %add520 = fadd float %fiz2.0.lcssa, %add519
  %add521 = fadd float %fiz3.0.lcssa, %add520
  store float %add521, float* %arrayidx518, align 4, !tbaa !3
  %arrayidx526 = getelementptr inbounds i32* %gid, i64 %indvars.iv1001
  %63 = load i32* %arrayidx526, align 4, !tbaa !0
  %idxprom527 = sext i32 %63 to i64
  %arrayidx528 = getelementptr inbounds float* %Vc, i64 %idxprom527
  %64 = load float* %arrayidx528, align 4, !tbaa !3
  %add529 = fadd float %vctot.0.lcssa, %64
  store float %add529, float* %arrayidx528, align 4, !tbaa !3
  %arrayidx533 = getelementptr inbounds float* %Vnb, i64 %idxprom527
  %65 = load float* %arrayidx533, align 4, !tbaa !3
  %add534 = fadd float %vnbtot.0.lcssa, %65
  store float %add534, float* %arrayidx533, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next1002 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end539, label %for.end.for.body_crit_edge

for.end.for.body_crit_edge:                       ; preds = %for.end
  %arrayidx34.phi.trans.insert = getelementptr inbounds i32* %iinr, i64 %indvars.iv.next1002
  %.pre = load i32* %arrayidx34.phi.trans.insert, align 4, !tbaa !0
  br label %for.body

for.end539:                                       ; preds = %for.end, %entry
  ret void
}
