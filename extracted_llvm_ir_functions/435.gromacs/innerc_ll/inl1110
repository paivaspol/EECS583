define void @inl1110(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb, i32* nocapture %nsatoms) #0 {
entry:
  %cmp832 = icmp sgt i32 %nri, 0
  br i1 %cmp832, label %for.body.lr.ph, label %for.end438

for.body.lr.ph:                                   ; preds = %entry
  %mul303 = shl i32 %ntype, 1
  br label %for.body

for.body:                                         ; preds = %for.end423, %for.body.lr.ph
  %indvars.iv858 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next859, %for.end423 ]
  %0 = trunc i64 %indvars.iv858 to i32
  %mul = mul nsw i32 %0, 3
  %idxprom = sext i32 %mul to i64
  %arrayidx = getelementptr inbounds i32* %nsatoms, i64 %idxprom
  %1 = load i32* %arrayidx, align 4, !tbaa !0
  %add = add nsw i32 %mul, 1
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds i32* %nsatoms, i64 %idxprom2
  %2 = load i32* %arrayidx3, align 4, !tbaa !0
  %add5 = add nsw i32 %mul, 2
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds i32* %nsatoms, i64 %idxprom6
  %3 = load i32* %arrayidx7, align 4, !tbaa !0
  %arrayidx9 = getelementptr inbounds i32* %shift, i64 %indvars.iv858
  %4 = load i32* %arrayidx9, align 4, !tbaa !0
  %mul10 = mul nsw i32 %4, 3
  %idxprom11 = sext i32 %mul10 to i64
  %arrayidx12 = getelementptr inbounds float* %shiftvec, i64 %idxprom11
  %5 = load float* %arrayidx12, align 4, !tbaa !3
  %add13 = add nsw i32 %mul10, 1
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds float* %shiftvec, i64 %idxprom14
  %6 = load float* %arrayidx15, align 4, !tbaa !3
  %add16 = add nsw i32 %mul10, 2
  %idxprom17 = sext i32 %add16 to i64
  %arrayidx18 = getelementptr inbounds float* %shiftvec, i64 %idxprom17
  %7 = load float* %arrayidx18, align 4, !tbaa !3
  %arrayidx20 = getelementptr inbounds i32* %iinr, i64 %indvars.iv858
  %8 = load i32* %arrayidx20, align 4, !tbaa !0
  %mul21 = mul i32 %8, 3
  %arrayidx23 = getelementptr inbounds i32* %jindex, i64 %indvars.iv858
  %9 = load i32* %arrayidx23, align 4, !tbaa !0
  %indvars.iv.next859 = add i64 %indvars.iv858, 1
  %arrayidx26 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next859
  %10 = load i32* %arrayidx26, align 4, !tbaa !0
  %cmp28788 = icmp sgt i32 %2, 0
  br i1 %cmp28788, label %for.body29.lr.ph, label %for.cond165.loopexit

for.body29.lr.ph:                                 ; preds = %for.body
  %cmp49777 = icmp slt i32 %9, %10
  %arrayidx142 = getelementptr inbounds float* %fshift, i64 %idxprom11
  %arrayidx148 = getelementptr inbounds float* %fshift, i64 %idxprom14
  %arrayidx155 = getelementptr inbounds float* %fshift, i64 %idxprom17
  %11 = sext i32 %9 to i64
  %12 = sext i32 %8 to i64
  %13 = sext i32 %mul21 to i64
  %14 = add i32 %2, %8
  %15 = mul i32 %14, 3
  br label %for.body29

for.body29:                                       ; preds = %for.end, %for.body29.lr.ph
  %indvars.iv836 = phi i64 [ %13, %for.body29.lr.ph ], [ %indvars.iv.next837, %for.end ]
  %indvars.iv834 = phi i64 [ %12, %for.body29.lr.ph ], [ %indvars.iv.next835, %for.end ]
  %s.0791 = phi i32 [ 0, %for.body29.lr.ph ], [ %inc163, %for.end ]
  %vctot.0790 = phi float [ 0.000000e+00, %for.body29.lr.ph ], [ %vctot.1.lcssa, %for.end ]
  %vnbtot.0789 = phi float [ 0.000000e+00, %for.body29.lr.ph ], [ %vnbtot.1.lcssa, %for.end ]
  %arrayidx31 = getelementptr inbounds float* %pos, i64 %indvars.iv836
  %16 = load float* %arrayidx31, align 4, !tbaa !3
  %add32 = fadd float %5, %16
  %17 = add nsw i64 %indvars.iv836, 1
  %arrayidx35 = getelementptr inbounds float* %pos, i64 %17
  %18 = load float* %arrayidx35, align 4, !tbaa !3
  %add36 = fadd float %6, %18
  %19 = add nsw i64 %indvars.iv836, 2
  %arrayidx39 = getelementptr inbounds float* %pos, i64 %19
  %20 = load float* %arrayidx39, align 4, !tbaa !3
  %add40 = fadd float %7, %20
  %arrayidx42 = getelementptr inbounds float* %charge, i64 %indvars.iv834
  %21 = load float* %arrayidx42, align 4, !tbaa !3
  %mul43 = fmul float %21, %facel
  %arrayidx46 = getelementptr inbounds i32* %type, i64 %indvars.iv834
  %22 = load i32* %arrayidx46, align 4, !tbaa !0
  %mul47 = mul nsw i32 %mul303, %22
  br i1 %cmp49777, label %for.body50, label %for.end

for.body50:                                       ; preds = %for.body29, %for.body50
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body50 ], [ %11, %for.body29 ]
  %fiz1.0782 = phi float [ %add102, %for.body50 ], [ 0.000000e+00, %for.body29 ]
  %fiy1.0781 = phi float [ %add101, %for.body50 ], [ 0.000000e+00, %for.body29 ]
  %fix1.0780 = phi float [ %add100, %for.body50 ], [ 0.000000e+00, %for.body29 ]
  %vctot.1779 = phi float [ %add96, %for.body50 ], [ %vctot.0790, %for.body29 ]
  %vnbtot.1778 = phi float [ %sub86, %for.body50 ], [ %vnbtot.0789, %for.body29 ]
  %arrayidx52 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %23 = load i32* %arrayidx52, align 4, !tbaa !0
  %mul53 = mul nsw i32 %23, 3
  %idxprom54 = sext i32 %mul53 to i64
  %arrayidx55 = getelementptr inbounds float* %pos, i64 %idxprom54
  %24 = load float* %arrayidx55, align 4, !tbaa !3
  %add56 = add nsw i32 %mul53, 1
  %idxprom57 = sext i32 %add56 to i64
  %arrayidx58 = getelementptr inbounds float* %pos, i64 %idxprom57
  %25 = load float* %arrayidx58, align 4, !tbaa !3
  %add59 = add nsw i32 %mul53, 2
  %idxprom60 = sext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds float* %pos, i64 %idxprom60
  %26 = load float* %arrayidx61, align 4, !tbaa !3
  %sub = fsub float %add32, %24
  %sub62 = fsub float %add36, %25
  %sub63 = fsub float %add40, %26
  %mul64 = fmul float %sub, %sub
  %mul65 = fmul float %sub62, %sub62
  %add66 = fadd float %mul64, %mul65
  %mul67 = fmul float %sub63, %sub63
  %add68 = fadd float %add66, %mul67
  %conv = fpext float %add68 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv69 = fptrunc double %div to float
  %mul70 = fmul float %conv69, %conv69
  %mul71 = fmul float %mul70, %mul70
  %mul72 = fmul float %mul70, %mul71
  %idxprom73 = sext i32 %23 to i64
  %arrayidx74 = getelementptr inbounds i32* %type, i64 %idxprom73
  %27 = load i32* %arrayidx74, align 4, !tbaa !0
  %mul75 = shl nsw i32 %27, 1
  %add76 = add nsw i32 %mul75, %mul47
  %idxprom77 = sext i32 %add76 to i64
  %arrayidx78 = getelementptr inbounds float* %nbfp, i64 %idxprom77
  %28 = load float* %arrayidx78, align 4, !tbaa !3
  %mul79 = fmul float %28, %mul72
  %mul80 = fmul float %mul72, %mul72
  %add81776 = or i32 %add76, 1
  %idxprom82 = sext i32 %add81776 to i64
  %arrayidx83 = getelementptr inbounds float* %nbfp, i64 %idxprom82
  %29 = load float* %arrayidx83, align 4, !tbaa !3
  %mul84 = fmul float %29, %mul80
  %add85 = fadd float %vnbtot.1778, %mul84
  %sub86 = fsub float %add85, %mul79
  %arrayidx88 = getelementptr inbounds float* %charge, i64 %idxprom73
  %30 = load float* %arrayidx88, align 4, !tbaa !3
  %mul89 = fmul float %mul43, %30
  %mul90 = fmul float %conv69, %mul89
  %mul91 = fmul float %mul84, 1.200000e+01
  %mul92 = fmul float %mul79, 6.000000e+00
  %sub93 = fsub float %mul91, %mul92
  %add94 = fadd float %mul90, %sub93
  %mul95 = fmul float %mul70, %add94
  %add96 = fadd float %vctot.1779, %mul90
  %mul97 = fmul float %sub, %mul95
  %mul98 = fmul float %sub62, %mul95
  %mul99 = fmul float %sub63, %mul95
  %add100 = fadd float %fix1.0780, %mul97
  %add101 = fadd float %fiy1.0781, %mul98
  %add102 = fadd float %fiz1.0782, %mul99
  %arrayidx104 = getelementptr inbounds float* %faction, i64 %idxprom54
  %31 = load float* %arrayidx104, align 4, !tbaa !3
  %sub105 = fsub float %31, %mul97
  store float %sub105, float* %arrayidx104, align 4, !tbaa !3
  %arrayidx110 = getelementptr inbounds float* %faction, i64 %idxprom57
  %32 = load float* %arrayidx110, align 4, !tbaa !3
  %sub111 = fsub float %32, %mul98
  store float %sub111, float* %arrayidx110, align 4, !tbaa !3
  %arrayidx117 = getelementptr inbounds float* %faction, i64 %idxprom60
  %33 = load float* %arrayidx117, align 4, !tbaa !3
  %sub118 = fsub float %33, %mul99
  store float %sub118, float* %arrayidx117, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %34 = trunc i64 %indvars.iv.next to i32
  %cmp49 = icmp slt i32 %34, %10
  br i1 %cmp49, label %for.body50, label %for.end

for.end:                                          ; preds = %for.body50, %for.body29
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add102, %for.body50 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add101, %for.body50 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add100, %for.body50 ]
  %vctot.1.lcssa = phi float [ %vctot.0790, %for.body29 ], [ %add96, %for.body50 ]
  %vnbtot.1.lcssa = phi float [ %vnbtot.0789, %for.body29 ], [ %sub86, %for.body50 ]
  %arrayidx123 = getelementptr inbounds float* %faction, i64 %indvars.iv836
  %35 = load float* %arrayidx123, align 4, !tbaa !3
  %add124 = fadd float %fix1.0.lcssa, %35
  store float %add124, float* %arrayidx123, align 4, !tbaa !3
  %arrayidx129 = getelementptr inbounds float* %faction, i64 %17
  %36 = load float* %arrayidx129, align 4, !tbaa !3
  %add130 = fadd float %fiy1.0.lcssa, %36
  store float %add130, float* %arrayidx129, align 4, !tbaa !3
  %arrayidx136 = getelementptr inbounds float* %faction, i64 %19
  %37 = load float* %arrayidx136, align 4, !tbaa !3
  %add137 = fadd float %fiz1.0.lcssa, %37
  store float %add137, float* %arrayidx136, align 4, !tbaa !3
  %38 = load float* %arrayidx142, align 4, !tbaa !3
  %add143 = fadd float %fix1.0.lcssa, %38
  store float %add143, float* %arrayidx142, align 4, !tbaa !3
  %39 = load float* %arrayidx148, align 4, !tbaa !3
  %add149 = fadd float %fiy1.0.lcssa, %39
  store float %add149, float* %arrayidx148, align 4, !tbaa !3
  %40 = load float* %arrayidx155, align 4, !tbaa !3
  %add156 = fadd float %fiz1.0.lcssa, %40
  store float %add156, float* %arrayidx155, align 4, !tbaa !3
  %indvars.iv.next835 = add i64 %indvars.iv834, 1
  %indvars.iv.next837 = add i64 %indvars.iv836, 3
  %inc163 = add nsw i32 %s.0791, 1
  %exitcond = icmp eq i32 %inc163, %2
  br i1 %exitcond, label %for.cond27.for.cond165.loopexit_crit_edge, label %for.body29

for.cond27.for.cond165.loopexit_crit_edge:        ; preds = %for.end
  %41 = add i32 %2, %8
  br label %for.cond165.loopexit

for.cond165.loopexit:                             ; preds = %for.cond27.for.cond165.loopexit_crit_edge, %for.body
  %ii.0.lcssa = phi i32 [ %41, %for.cond27.for.cond165.loopexit_crit_edge ], [ %8, %for.body ]
  %ii3.0.lcssa = phi i32 [ %15, %for.cond27.for.cond165.loopexit_crit_edge ], [ %mul21, %for.body ]
  %vctot.0.lcssa = phi float [ %vctot.1.lcssa, %for.cond27.for.cond165.loopexit_crit_edge ], [ 0.000000e+00, %for.body ]
  %vnbtot.0.lcssa = phi float [ %vnbtot.1.lcssa, %for.cond27.for.cond165.loopexit_crit_edge ], [ 0.000000e+00, %for.body ]
  %cmp166808 = icmp slt i32 %2, %3
  br i1 %cmp166808, label %for.body168.lr.ph, label %for.cond288.loopexit

for.body168.lr.ph:                                ; preds = %for.cond165.loopexit
  %cmp184798 = icmp slt i32 %9, %10
  %arrayidx265 = getelementptr inbounds float* %fshift, i64 %idxprom11
  %arrayidx271 = getelementptr inbounds float* %fshift, i64 %idxprom14
  %arrayidx278 = getelementptr inbounds float* %fshift, i64 %idxprom17
  %42 = sext i32 %9 to i64
  %43 = sext i32 %ii.0.lcssa to i64
  %44 = sext i32 %ii3.0.lcssa to i64
  %45 = mul i32 %3, 3
  %46 = add i32 %ii.0.lcssa, %3
  br label %for.body168

for.body168:                                      ; preds = %for.end244, %for.body168.lr.ph
  %indvars.iv844 = phi i64 [ %44, %for.body168.lr.ph ], [ %indvars.iv.next845, %for.end244 ]
  %indvars.iv842 = phi i64 [ %43, %for.body168.lr.ph ], [ %indvars.iv.next843, %for.end244 ]
  %s.1810 = phi i32 [ %2, %for.body168.lr.ph ], [ %inc286, %for.end244 ]
  %vctot.2809 = phi float [ %vctot.0.lcssa, %for.body168.lr.ph ], [ %vctot.3.lcssa, %for.end244 ]
  %arrayidx170 = getelementptr inbounds float* %pos, i64 %indvars.iv844
  %47 = load float* %arrayidx170, align 4, !tbaa !3
  %add171 = fadd float %5, %47
  %48 = add nsw i64 %indvars.iv844, 1
  %arrayidx174 = getelementptr inbounds float* %pos, i64 %48
  %49 = load float* %arrayidx174, align 4, !tbaa !3
  %add175 = fadd float %6, %49
  %50 = add nsw i64 %indvars.iv844, 2
  %arrayidx178 = getelementptr inbounds float* %pos, i64 %50
  %51 = load float* %arrayidx178, align 4, !tbaa !3
  %add179 = fadd float %7, %51
  %arrayidx181 = getelementptr inbounds float* %charge, i64 %indvars.iv842
  %52 = load float* %arrayidx181, align 4, !tbaa !3
  %mul182 = fmul float %52, %facel
  br i1 %cmp184798, label %for.body186, label %for.end244

for.body186:                                      ; preds = %for.body168, %for.body186
  %indvars.iv840 = phi i64 [ %indvars.iv.next841, %for.body186 ], [ %42, %for.body168 ]
  %fiz1.1802 = phi float [ %add222, %for.body186 ], [ 0.000000e+00, %for.body168 ]
  %fiy1.1801 = phi float [ %add221, %for.body186 ], [ 0.000000e+00, %for.body168 ]
  %fix1.1800 = phi float [ %add220, %for.body186 ], [ 0.000000e+00, %for.body168 ]
  %vctot.3799 = phi float [ %add216, %for.body186 ], [ %vctot.2809, %for.body168 ]
  %arrayidx188 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv840
  %53 = load i32* %arrayidx188, align 4, !tbaa !0
  %mul189 = mul nsw i32 %53, 3
  %idxprom190 = sext i32 %mul189 to i64
  %arrayidx191 = getelementptr inbounds float* %pos, i64 %idxprom190
  %54 = load float* %arrayidx191, align 4, !tbaa !3
  %add192 = add nsw i32 %mul189, 1
  %idxprom193 = sext i32 %add192 to i64
  %arrayidx194 = getelementptr inbounds float* %pos, i64 %idxprom193
  %55 = load float* %arrayidx194, align 4, !tbaa !3
  %add195 = add nsw i32 %mul189, 2
  %idxprom196 = sext i32 %add195 to i64
  %arrayidx197 = getelementptr inbounds float* %pos, i64 %idxprom196
  %56 = load float* %arrayidx197, align 4, !tbaa !3
  %sub198 = fsub float %add171, %54
  %sub199 = fsub float %add175, %55
  %sub200 = fsub float %add179, %56
  %mul201 = fmul float %sub198, %sub198
  %mul202 = fmul float %sub199, %sub199
  %add203 = fadd float %mul201, %mul202
  %mul204 = fmul float %sub200, %sub200
  %add205 = fadd float %add203, %mul204
  %conv206 = fpext float %add205 to double
  %call207 = tail call double @sqrt(double %conv206) #2
  %div208 = fdiv double 1.000000e+00, %call207
  %conv209 = fptrunc double %div208 to float
  %mul210 = fmul float %conv209, %conv209
  %idxprom211 = sext i32 %53 to i64
  %arrayidx212 = getelementptr inbounds float* %charge, i64 %idxprom211
  %57 = load float* %arrayidx212, align 4, !tbaa !3
  %mul213 = fmul float %mul182, %57
  %mul214 = fmul float %conv209, %mul213
  %mul215 = fmul float %mul210, %mul214
  %add216 = fadd float %vctot.3799, %mul214
  %mul217 = fmul float %sub198, %mul215
  %mul218 = fmul float %sub199, %mul215
  %mul219 = fmul float %sub200, %mul215
  %add220 = fadd float %fix1.1800, %mul217
  %add221 = fadd float %fiy1.1801, %mul218
  %add222 = fadd float %fiz1.1802, %mul219
  %arrayidx224 = getelementptr inbounds float* %faction, i64 %idxprom190
  %58 = load float* %arrayidx224, align 4, !tbaa !3
  %sub225 = fsub float %58, %mul217
  store float %sub225, float* %arrayidx224, align 4, !tbaa !3
  %arrayidx230 = getelementptr inbounds float* %faction, i64 %idxprom193
  %59 = load float* %arrayidx230, align 4, !tbaa !3
  %sub231 = fsub float %59, %mul218
  store float %sub231, float* %arrayidx230, align 4, !tbaa !3
  %arrayidx237 = getelementptr inbounds float* %faction, i64 %idxprom196
  %60 = load float* %arrayidx237, align 4, !tbaa !3
  %sub238 = fsub float %60, %mul219
  store float %sub238, float* %arrayidx237, align 4, !tbaa !3
  %indvars.iv.next841 = add i64 %indvars.iv840, 1
  %61 = trunc i64 %indvars.iv.next841 to i32
  %cmp184 = icmp slt i32 %61, %10
  br i1 %cmp184, label %for.body186, label %for.end244

for.end244:                                       ; preds = %for.body186, %for.body168
  %fiz1.1.lcssa = phi float [ 0.000000e+00, %for.body168 ], [ %add222, %for.body186 ]
  %fiy1.1.lcssa = phi float [ 0.000000e+00, %for.body168 ], [ %add221, %for.body186 ]
  %fix1.1.lcssa = phi float [ 0.000000e+00, %for.body168 ], [ %add220, %for.body186 ]
  %vctot.3.lcssa = phi float [ %vctot.2809, %for.body168 ], [ %add216, %for.body186 ]
  %arrayidx246 = getelementptr inbounds float* %faction, i64 %indvars.iv844
  %62 = load float* %arrayidx246, align 4, !tbaa !3
  %add247 = fadd float %fix1.1.lcssa, %62
  store float %add247, float* %arrayidx246, align 4, !tbaa !3
  %arrayidx252 = getelementptr inbounds float* %faction, i64 %48
  %63 = load float* %arrayidx252, align 4, !tbaa !3
  %add253 = fadd float %fiy1.1.lcssa, %63
  store float %add253, float* %arrayidx252, align 4, !tbaa !3
  %arrayidx259 = getelementptr inbounds float* %faction, i64 %50
  %64 = load float* %arrayidx259, align 4, !tbaa !3
  %add260 = fadd float %fiz1.1.lcssa, %64
  store float %add260, float* %arrayidx259, align 4, !tbaa !3
  %65 = load float* %arrayidx265, align 4, !tbaa !3
  %add266 = fadd float %fix1.1.lcssa, %65
  store float %add266, float* %arrayidx265, align 4, !tbaa !3
  %66 = load float* %arrayidx271, align 4, !tbaa !3
  %add272 = fadd float %fiy1.1.lcssa, %66
  store float %add272, float* %arrayidx271, align 4, !tbaa !3
  %67 = load float* %arrayidx278, align 4, !tbaa !3
  %add279 = fadd float %fiz1.1.lcssa, %67
  store float %add279, float* %arrayidx278, align 4, !tbaa !3
  %indvars.iv.next843 = add i64 %indvars.iv842, 1
  %indvars.iv.next845 = add i64 %indvars.iv844, 3
  %inc286 = add nsw i32 %s.1810, 1
  %exitcond848 = icmp eq i32 %inc286, %3
  br i1 %exitcond848, label %for.cond165.for.cond288.loopexit_crit_edge, label %for.body168

for.cond165.for.cond288.loopexit_crit_edge:       ; preds = %for.end244
  %68 = add i32 %ii3.0.lcssa, %45
  %69 = mul i32 %2, -3
  %70 = add i32 %68, %69
  %71 = sub i32 %46, %2
  br label %for.cond288.loopexit

for.cond288.loopexit:                             ; preds = %for.cond165.for.cond288.loopexit_crit_edge, %for.cond165.loopexit
  %ii.1.lcssa = phi i32 [ %71, %for.cond165.for.cond288.loopexit_crit_edge ], [ %ii.0.lcssa, %for.cond165.loopexit ]
  %ii3.1.lcssa = phi i32 [ %70, %for.cond165.for.cond288.loopexit_crit_edge ], [ %ii3.0.lcssa, %for.cond165.loopexit ]
  %vctot.2.lcssa = phi float [ %vctot.3.lcssa, %for.cond165.for.cond288.loopexit_crit_edge ], [ %vctot.0.lcssa, %for.cond165.loopexit ]
  %cmp289826 = icmp slt i32 %3, %1
  br i1 %cmp289826, label %for.body291.lr.ph, label %for.end423

for.body291.lr.ph:                                ; preds = %for.cond288.loopexit
  %cmp308816 = icmp slt i32 %9, %10
  %arrayidx401 = getelementptr inbounds float* %fshift, i64 %idxprom11
  %arrayidx407 = getelementptr inbounds float* %fshift, i64 %idxprom14
  %arrayidx414 = getelementptr inbounds float* %fshift, i64 %idxprom17
  %72 = sext i32 %9 to i64
  %73 = sext i32 %ii.1.lcssa to i64
  %74 = sext i32 %ii3.1.lcssa to i64
  br label %for.body291

for.body291:                                      ; preds = %for.end380, %for.body291.lr.ph
  %indvars.iv853 = phi i64 [ %74, %for.body291.lr.ph ], [ %indvars.iv.next854, %for.end380 ]
  %indvars.iv851 = phi i64 [ %73, %for.body291.lr.ph ], [ %indvars.iv.next852, %for.end380 ]
  %s.2828 = phi i32 [ %3, %for.body291.lr.ph ], [ %inc422, %for.end380 ]
  %vnbtot.2827 = phi float [ %vnbtot.0.lcssa, %for.body291.lr.ph ], [ %vnbtot.3.lcssa, %for.end380 ]
  %arrayidx293 = getelementptr inbounds float* %pos, i64 %indvars.iv853
  %75 = load float* %arrayidx293, align 4, !tbaa !3
  %add294 = fadd float %5, %75
  %76 = add nsw i64 %indvars.iv853, 1
  %arrayidx297 = getelementptr inbounds float* %pos, i64 %76
  %77 = load float* %arrayidx297, align 4, !tbaa !3
  %add298 = fadd float %6, %77
  %78 = add nsw i64 %indvars.iv853, 2
  %arrayidx301 = getelementptr inbounds float* %pos, i64 %78
  %79 = load float* %arrayidx301, align 4, !tbaa !3
  %add302 = fadd float %7, %79
  %arrayidx305 = getelementptr inbounds i32* %type, i64 %indvars.iv851
  %80 = load i32* %arrayidx305, align 4, !tbaa !0
  %mul306 = mul nsw i32 %mul303, %80
  br i1 %cmp308816, label %for.body310, label %for.end380

for.body310:                                      ; preds = %for.body291, %for.body310
  %indvars.iv849 = phi i64 [ %indvars.iv.next850, %for.body310 ], [ %72, %for.body291 ]
  %fiz1.2820 = phi float [ %add358, %for.body310 ], [ 0.000000e+00, %for.body291 ]
  %fiy1.2819 = phi float [ %add357, %for.body310 ], [ 0.000000e+00, %for.body291 ]
  %fix1.2818 = phi float [ %add356, %for.body310 ], [ 0.000000e+00, %for.body291 ]
  %vnbtot.3817 = phi float [ %sub348, %for.body310 ], [ %vnbtot.2827, %for.body291 ]
  %arrayidx312 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv849
  %81 = load i32* %arrayidx312, align 4, !tbaa !0
  %mul313 = mul nsw i32 %81, 3
  %idxprom314 = sext i32 %mul313 to i64
  %arrayidx315 = getelementptr inbounds float* %pos, i64 %idxprom314
  %82 = load float* %arrayidx315, align 4, !tbaa !3
  %add316 = add nsw i32 %mul313, 1
  %idxprom317 = sext i32 %add316 to i64
  %arrayidx318 = getelementptr inbounds float* %pos, i64 %idxprom317
  %83 = load float* %arrayidx318, align 4, !tbaa !3
  %add319 = add nsw i32 %mul313, 2
  %idxprom320 = sext i32 %add319 to i64
  %arrayidx321 = getelementptr inbounds float* %pos, i64 %idxprom320
  %84 = load float* %arrayidx321, align 4, !tbaa !3
  %sub322 = fsub float %add294, %82
  %sub323 = fsub float %add298, %83
  %sub324 = fsub float %add302, %84
  %mul325 = fmul float %sub322, %sub322
  %mul326 = fmul float %sub323, %sub323
  %add327 = fadd float %mul325, %mul326
  %mul328 = fmul float %sub324, %sub324
  %add329 = fadd float %add327, %mul328
  %conv332 = fdiv float 1.000000e+00, %add329
  %mul333 = fmul float %conv332, %conv332
  %mul334 = fmul float %conv332, %mul333
  %idxprom335 = sext i32 %81 to i64
  %arrayidx336 = getelementptr inbounds i32* %type, i64 %idxprom335
  %85 = load i32* %arrayidx336, align 4, !tbaa !0
  %mul337 = shl nsw i32 %85, 1
  %add338 = add nsw i32 %mul337, %mul306
  %idxprom339 = sext i32 %add338 to i64
  %arrayidx340 = getelementptr inbounds float* %nbfp, i64 %idxprom339
  %86 = load float* %arrayidx340, align 4, !tbaa !3
  %mul341 = fmul float %mul334, %86
  %mul342 = fmul float %mul334, %mul334
  %add343775 = or i32 %add338, 1
  %idxprom344 = sext i32 %add343775 to i64
  %arrayidx345 = getelementptr inbounds float* %nbfp, i64 %idxprom344
  %87 = load float* %arrayidx345, align 4, !tbaa !3
  %mul346 = fmul float %mul342, %87
  %add347 = fadd float %vnbtot.3817, %mul346
  %sub348 = fsub float %add347, %mul341
  %mul349 = fmul float %mul346, 1.200000e+01
  %mul350 = fmul float %mul341, 6.000000e+00
  %sub351 = fsub float %mul349, %mul350
  %mul352 = fmul float %conv332, %sub351
  %mul353 = fmul float %sub322, %mul352
  %mul354 = fmul float %sub323, %mul352
  %mul355 = fmul float %sub324, %mul352
  %add356 = fadd float %fix1.2818, %mul353
  %add357 = fadd float %fiy1.2819, %mul354
  %add358 = fadd float %fiz1.2820, %mul355
  %arrayidx360 = getelementptr inbounds float* %faction, i64 %idxprom314
  %88 = load float* %arrayidx360, align 4, !tbaa !3
  %sub361 = fsub float %88, %mul353
  store float %sub361, float* %arrayidx360, align 4, !tbaa !3
  %arrayidx366 = getelementptr inbounds float* %faction, i64 %idxprom317
  %89 = load float* %arrayidx366, align 4, !tbaa !3
  %sub367 = fsub float %89, %mul354
  store float %sub367, float* %arrayidx366, align 4, !tbaa !3
  %arrayidx373 = getelementptr inbounds float* %faction, i64 %idxprom320
  %90 = load float* %arrayidx373, align 4, !tbaa !3
  %sub374 = fsub float %90, %mul355
  store float %sub374, float* %arrayidx373, align 4, !tbaa !3
  %indvars.iv.next850 = add i64 %indvars.iv849, 1
  %91 = trunc i64 %indvars.iv.next850 to i32
  %cmp308 = icmp slt i32 %91, %10
  br i1 %cmp308, label %for.body310, label %for.end380

for.end380:                                       ; preds = %for.body310, %for.body291
  %fiz1.2.lcssa = phi float [ 0.000000e+00, %for.body291 ], [ %add358, %for.body310 ]
  %fiy1.2.lcssa = phi float [ 0.000000e+00, %for.body291 ], [ %add357, %for.body310 ]
  %fix1.2.lcssa = phi float [ 0.000000e+00, %for.body291 ], [ %add356, %for.body310 ]
  %vnbtot.3.lcssa = phi float [ %vnbtot.2827, %for.body291 ], [ %sub348, %for.body310 ]
  %arrayidx382 = getelementptr inbounds float* %faction, i64 %indvars.iv853
  %92 = load float* %arrayidx382, align 4, !tbaa !3
  %add383 = fadd float %fix1.2.lcssa, %92
  store float %add383, float* %arrayidx382, align 4, !tbaa !3
  %arrayidx388 = getelementptr inbounds float* %faction, i64 %76
  %93 = load float* %arrayidx388, align 4, !tbaa !3
  %add389 = fadd float %fiy1.2.lcssa, %93
  store float %add389, float* %arrayidx388, align 4, !tbaa !3
  %arrayidx395 = getelementptr inbounds float* %faction, i64 %78
  %94 = load float* %arrayidx395, align 4, !tbaa !3
  %add396 = fadd float %fiz1.2.lcssa, %94
  store float %add396, float* %arrayidx395, align 4, !tbaa !3
  %95 = load float* %arrayidx401, align 4, !tbaa !3
  %add402 = fadd float %fix1.2.lcssa, %95
  store float %add402, float* %arrayidx401, align 4, !tbaa !3
  %96 = load float* %arrayidx407, align 4, !tbaa !3
  %add408 = fadd float %fiy1.2.lcssa, %96
  store float %add408, float* %arrayidx407, align 4, !tbaa !3
  %97 = load float* %arrayidx414, align 4, !tbaa !3
  %add415 = fadd float %fiz1.2.lcssa, %97
  store float %add415, float* %arrayidx414, align 4, !tbaa !3
  %indvars.iv.next852 = add i64 %indvars.iv851, 1
  %indvars.iv.next854 = add i64 %indvars.iv853, 3
  %inc422 = add nsw i32 %s.2828, 1
  %exitcond857 = icmp eq i32 %inc422, %1
  br i1 %exitcond857, label %for.end423, label %for.body291

for.end423:                                       ; preds = %for.end380, %for.cond288.loopexit
  %vnbtot.2.lcssa = phi float [ %vnbtot.0.lcssa, %for.cond288.loopexit ], [ %vnbtot.3.lcssa, %for.end380 ]
  %arrayidx425 = getelementptr inbounds i32* %gid, i64 %indvars.iv858
  %98 = load i32* %arrayidx425, align 4, !tbaa !0
  %idxprom426 = sext i32 %98 to i64
  %arrayidx427 = getelementptr inbounds float* %Vc, i64 %idxprom426
  %99 = load float* %arrayidx427, align 4, !tbaa !3
  %add428 = fadd float %vctot.2.lcssa, %99
  store float %add428, float* %arrayidx427, align 4, !tbaa !3
  %arrayidx432 = getelementptr inbounds float* %Vnb, i64 %idxprom426
  %100 = load float* %arrayidx432, align 4, !tbaa !3
  %add433 = fadd float %vnbtot.2.lcssa, %100
  store float %add433, float* %arrayidx432, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next859 to i32
  %exitcond860 = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond860, label %for.end438, label %for.body

for.end438:                                       ; preds = %for.end423, %entry
  ret void
}
