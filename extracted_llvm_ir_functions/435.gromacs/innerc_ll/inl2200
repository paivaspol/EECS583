define void @inl2200(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, float %krf, float %crf, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb) #0 {
entry:
  %cmp292 = icmp sgt i32 %nri, 0
  br i1 %cmp292, label %for.body, label %for.end175

for.body:                                         ; preds = %for.end, %entry
  %indvars.iv294 = phi i64 [ 0, %entry ], [ %indvars.iv.next295, %for.end ]
  %arrayidx = getelementptr inbounds i32* %shift, i64 %indvars.iv294
  %0 = load i32* %arrayidx, align 4, !tbaa !0
  %mul = mul nsw i32 %0, 3
  %idxprom1 = sext i32 %mul to i64
  %arrayidx2 = getelementptr inbounds float* %shiftvec, i64 %idxprom1
  %1 = load float* %arrayidx2, align 4, !tbaa !3
  %add = add nsw i32 %mul, 1
  %idxprom3 = sext i32 %add to i64
  %arrayidx4 = getelementptr inbounds float* %shiftvec, i64 %idxprom3
  %2 = load float* %arrayidx4, align 4, !tbaa !3
  %add5 = add nsw i32 %mul, 2
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds float* %shiftvec, i64 %idxprom6
  %3 = load float* %arrayidx7, align 4, !tbaa !3
  %arrayidx9 = getelementptr inbounds i32* %iinr, i64 %indvars.iv294
  %4 = load i32* %arrayidx9, align 4, !tbaa !0
  %mul10 = mul nsw i32 %4, 3
  %arrayidx12 = getelementptr inbounds i32* %jindex, i64 %indvars.iv294
  %5 = load i32* %arrayidx12, align 4, !tbaa !0
  %indvars.iv.next295 = add i64 %indvars.iv294, 1
  %arrayidx15 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next295
  %6 = load i32* %arrayidx15, align 4, !tbaa !0
  %idxprom16 = sext i32 %mul10 to i64
  %arrayidx17 = getelementptr inbounds float* %pos, i64 %idxprom16
  %7 = load float* %arrayidx17, align 4, !tbaa !3
  %add18 = fadd float %1, %7
  %add19 = add nsw i32 %mul10, 1
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds float* %pos, i64 %idxprom20
  %8 = load float* %arrayidx21, align 4, !tbaa !3
  %add22 = fadd float %2, %8
  %add23 = add nsw i32 %mul10, 2
  %idxprom24 = sext i32 %add23 to i64
  %arrayidx25 = getelementptr inbounds float* %pos, i64 %idxprom24
  %9 = load float* %arrayidx25, align 4, !tbaa !3
  %add26 = fadd float %3, %9
  %idxprom27 = sext i32 %4 to i64
  %arrayidx28 = getelementptr inbounds float* %charge, i64 %idxprom27
  %10 = load float* %arrayidx28, align 4, !tbaa !3
  %mul29 = fmul float %10, %facel
  %arrayidx32 = getelementptr inbounds i32* %type, i64 %idxprom27
  %11 = load i32* %arrayidx32, align 4, !tbaa !0
  %mul33 = mul i32 %11, %ntype
  %cmp35281 = icmp slt i32 %5, %6
  br i1 %cmp35281, label %for.body36.lr.ph, label %for.end

for.body36.lr.ph:                                 ; preds = %for.body
  %12 = sext i32 %5 to i64
  br label %for.body36

for.body36:                                       ; preds = %for.body36.lr.ph, %for.body36
  %indvars.iv = phi i64 [ %12, %for.body36.lr.ph ], [ %indvars.iv.next, %for.body36 ]
  %vctot.0286 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add97, %for.body36 ]
  %vnbtot.0285 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %sub81, %for.body36 ]
  %fix1.0284 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add101, %for.body36 ]
  %fiy1.0283 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add102, %for.body36 ]
  %fiz1.0282 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add103, %for.body36 ]
  %arrayidx38 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %13 = load i32* %arrayidx38, align 4, !tbaa !0
  %mul39 = mul nsw i32 %13, 3
  %idxprom40 = sext i32 %mul39 to i64
  %arrayidx41 = getelementptr inbounds float* %pos, i64 %idxprom40
  %14 = load float* %arrayidx41, align 4, !tbaa !3
  %add42 = add nsw i32 %mul39, 1
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds float* %pos, i64 %idxprom43
  %15 = load float* %arrayidx44, align 4, !tbaa !3
  %add45 = add nsw i32 %mul39, 2
  %idxprom46 = sext i32 %add45 to i64
  %arrayidx47 = getelementptr inbounds float* %pos, i64 %idxprom46
  %16 = load float* %arrayidx47, align 4, !tbaa !3
  %sub = fsub float %add18, %14
  %sub48 = fsub float %add22, %15
  %sub49 = fsub float %add26, %16
  %mul50 = fmul float %sub, %sub
  %mul51 = fmul float %sub48, %sub48
  %add52 = fadd float %mul50, %mul51
  %mul53 = fmul float %sub49, %sub49
  %add54 = fadd float %add52, %mul53
  %conv = fpext float %add54 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv55 = fptrunc double %div to float
  %mul56 = fmul float %add54, %conv55
  %mul57 = fmul float %conv55, %conv55
  %mul58 = fmul float %mul57, %mul57
  %mul59 = fmul float %mul57, %mul58
  %idxprom60 = sext i32 %13 to i64
  %arrayidx61 = getelementptr inbounds i32* %type, i64 %idxprom60
  %17 = load i32* %arrayidx61, align 4, !tbaa !0
  %tmp = add i32 %17, %mul33
  %tmp280 = mul i32 %tmp, 3
  %idxprom64 = sext i32 %tmp280 to i64
  %arrayidx65 = getelementptr inbounds float* %nbfp, i64 %idxprom64
  %18 = load float* %arrayidx65, align 4, !tbaa !3
  %mul66 = fmul float %18, %mul59
  %add67 = add nsw i32 %tmp280, 2
  %idxprom68 = sext i32 %add67 to i64
  %arrayidx69 = getelementptr inbounds float* %nbfp, i64 %idxprom68
  %19 = load float* %arrayidx69, align 4, !tbaa !3
  %mul70 = fmul float %mul56, %19
  %sub71 = fsub float -0.000000e+00, %mul70
  %conv72 = fpext float %sub71 to double
  %call73 = tail call double @exp(double %conv72) #2
  %add74 = add nsw i32 %tmp280, 1
  %idxprom75 = sext i32 %add74 to i64
  %arrayidx76 = getelementptr inbounds float* %nbfp, i64 %idxprom75
  %20 = load float* %arrayidx76, align 4, !tbaa !3
  %conv77 = fpext float %20 to double
  %mul78 = fmul double %call73, %conv77
  %conv79 = fptrunc double %mul78 to float
  %add80 = fadd float %vnbtot.0285, %conv79
  %sub81 = fsub float %add80, %mul66
  %arrayidx83 = getelementptr inbounds float* %charge, i64 %idxprom60
  %21 = load float* %arrayidx83, align 4, !tbaa !3
  %mul84 = fmul float %mul29, %21
  %mul85 = fmul float %add54, %krf
  %add86 = fadd float %conv55, %mul85
  %sub87 = fsub float %add86, %crf
  %mul88 = fmul float %sub87, %mul84
  %mul89 = fmul float %mul70, %conv79
  %mul90 = fmul float %mul66, 6.000000e+00
  %sub91 = fsub float %mul89, %mul90
  %mul92 = fmul float %mul85, 2.000000e+00
  %sub93 = fsub float %conv55, %mul92
  %mul94 = fmul float %sub93, %mul84
  %add95 = fadd float %mul94, %sub91
  %mul96 = fmul float %mul57, %add95
  %add97 = fadd float %vctot.0286, %mul88
  %mul98 = fmul float %sub, %mul96
  %mul99 = fmul float %sub48, %mul96
  %mul100 = fmul float %sub49, %mul96
  %add101 = fadd float %fix1.0284, %mul98
  %add102 = fadd float %fiy1.0283, %mul99
  %add103 = fadd float %fiz1.0282, %mul100
  %arrayidx105 = getelementptr inbounds float* %faction, i64 %idxprom40
  %22 = load float* %arrayidx105, align 4, !tbaa !3
  %sub106 = fsub float %22, %mul98
  store float %sub106, float* %arrayidx105, align 4, !tbaa !3
  %arrayidx111 = getelementptr inbounds float* %faction, i64 %idxprom43
  %23 = load float* %arrayidx111, align 4, !tbaa !3
  %sub112 = fsub float %23, %mul99
  store float %sub112, float* %arrayidx111, align 4, !tbaa !3
  %arrayidx118 = getelementptr inbounds float* %faction, i64 %idxprom46
  %24 = load float* %arrayidx118, align 4, !tbaa !3
  %sub119 = fsub float %24, %mul100
  store float %sub119, float* %arrayidx118, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %25 = trunc i64 %indvars.iv.next to i32
  %cmp35 = icmp slt i32 %25, %6
  br i1 %cmp35, label %for.body36, label %for.end

for.end:                                          ; preds = %for.body36, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add97, %for.body36 ]
  %vnbtot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %sub81, %for.body36 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add101, %for.body36 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add102, %for.body36 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add103, %for.body36 ]
  %arrayidx124 = getelementptr inbounds float* %faction, i64 %idxprom16
  %26 = load float* %arrayidx124, align 4, !tbaa !3
  %add125 = fadd float %fix1.0.lcssa, %26
  store float %add125, float* %arrayidx124, align 4, !tbaa !3
  %arrayidx130 = getelementptr inbounds float* %faction, i64 %idxprom20
  %27 = load float* %arrayidx130, align 4, !tbaa !3
  %add131 = fadd float %fiy1.0.lcssa, %27
  store float %add131, float* %arrayidx130, align 4, !tbaa !3
  %arrayidx137 = getelementptr inbounds float* %faction, i64 %idxprom24
  %28 = load float* %arrayidx137, align 4, !tbaa !3
  %add138 = fadd float %fiz1.0.lcssa, %28
  store float %add138, float* %arrayidx137, align 4, !tbaa !3
  %arrayidx143 = getelementptr inbounds float* %fshift, i64 %idxprom1
  %29 = load float* %arrayidx143, align 4, !tbaa !3
  %add144 = fadd float %fix1.0.lcssa, %29
  store float %add144, float* %arrayidx143, align 4, !tbaa !3
  %arrayidx149 = getelementptr inbounds float* %fshift, i64 %idxprom3
  %30 = load float* %arrayidx149, align 4, !tbaa !3
  %add150 = fadd float %fiy1.0.lcssa, %30
  store float %add150, float* %arrayidx149, align 4, !tbaa !3
  %arrayidx156 = getelementptr inbounds float* %fshift, i64 %idxprom6
  %31 = load float* %arrayidx156, align 4, !tbaa !3
  %add157 = fadd float %fiz1.0.lcssa, %31
  store float %add157, float* %arrayidx156, align 4, !tbaa !3
  %arrayidx162 = getelementptr inbounds i32* %gid, i64 %indvars.iv294
  %32 = load i32* %arrayidx162, align 4, !tbaa !0
  %idxprom163 = sext i32 %32 to i64
  %arrayidx164 = getelementptr inbounds float* %Vc, i64 %idxprom163
  %33 = load float* %arrayidx164, align 4, !tbaa !3
  %add165 = fadd float %vctot.0.lcssa, %33
  store float %add165, float* %arrayidx164, align 4, !tbaa !3
  %arrayidx169 = getelementptr inbounds float* %Vnb, i64 %idxprom163
  %34 = load float* %arrayidx169, align 4, !tbaa !3
  %add170 = fadd float %vnbtot.0.lcssa, %34
  store float %add170, float* %arrayidx169, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next295 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end175, label %for.body

for.end175:                                       ; preds = %for.end, %entry
  ret void
}
