define void @inl0401(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb, float %tabscale, float* nocapture %VFtab, float %exptabscale, float %lambda, float* nocapture %dvdlambda, i32* nocapture %typeB) #0 {
entry:
  %sub = fsub float 1.000000e+00, %lambda
  %cmp477 = icmp sgt i32 %nri, 0
  br i1 %cmp477, label %for.body.lr.ph, label %for.end266

for.body.lr.ph:                                   ; preds = %entry
  %mul27 = mul nsw i32 %ntype, 3
  br label %for.body

for.body:                                         ; preds = %for.end, %for.body.lr.ph
  %indvars.iv481 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next482, %for.end ]
  %dvdl.0478 = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %dvdl.1.lcssa, %for.end ]
  %arrayidx = getelementptr inbounds i32* %shift, i64 %indvars.iv481
  %0 = load i32* %arrayidx, align 4, !tbaa !0
  %mul = mul nsw i32 %0, 3
  %idxprom1 = sext i32 %mul to i64
  %arrayidx2 = getelementptr inbounds float* %shiftvec, i64 %idxprom1
  %1 = load float* %arrayidx2, align 4, !tbaa !3
  %add = add nsw i32 %mul, 1
  %idxprom3 = sext i32 %add to i64
  %arrayidx4 = getelementptr inbounds float* %shiftvec, i64 %idxprom3
  %2 = load float* %arrayidx4, align 4, !tbaa !3
  %add5 = add nsw i32 %mul, 2
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds float* %shiftvec, i64 %idxprom6
  %3 = load float* %arrayidx7, align 4, !tbaa !3
  %arrayidx9 = getelementptr inbounds i32* %iinr, i64 %indvars.iv481
  %4 = load i32* %arrayidx9, align 4, !tbaa !0
  %mul10 = mul nsw i32 %4, 3
  %arrayidx12 = getelementptr inbounds i32* %jindex, i64 %indvars.iv481
  %5 = load i32* %arrayidx12, align 4, !tbaa !0
  %indvars.iv.next482 = add i64 %indvars.iv481, 1
  %arrayidx15 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next482
  %6 = load i32* %arrayidx15, align 4, !tbaa !0
  %idxprom16 = sext i32 %mul10 to i64
  %arrayidx17 = getelementptr inbounds float* %pos, i64 %idxprom16
  %7 = load float* %arrayidx17, align 4, !tbaa !3
  %add18 = fadd float %1, %7
  %add19 = add nsw i32 %mul10, 1
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds float* %pos, i64 %idxprom20
  %8 = load float* %arrayidx21, align 4, !tbaa !3
  %add22 = fadd float %2, %8
  %add23 = add nsw i32 %mul10, 2
  %idxprom24 = sext i32 %add23 to i64
  %arrayidx25 = getelementptr inbounds float* %pos, i64 %idxprom24
  %9 = load float* %arrayidx25, align 4, !tbaa !3
  %add26 = fadd float %3, %9
  %idxprom28 = sext i32 %4 to i64
  %arrayidx29 = getelementptr inbounds i32* %type, i64 %idxprom28
  %10 = load i32* %arrayidx29, align 4, !tbaa !0
  %mul30 = mul nsw i32 %10, %mul27
  %arrayidx33 = getelementptr inbounds i32* %typeB, i64 %idxprom28
  %11 = load i32* %arrayidx33, align 4, !tbaa !0
  %mul34 = mul nsw i32 %11, %mul27
  %cmp36466 = icmp slt i32 %5, %6
  br i1 %cmp36466, label %for.body37.lr.ph, label %for.end

for.body37.lr.ph:                                 ; preds = %for.body
  %12 = sext i32 %5 to i64
  br label %for.body37

for.body37:                                       ; preds = %for.body37.lr.ph, %for.body37
  %indvars.iv = phi i64 [ %12, %for.body37.lr.ph ], [ %indvars.iv.next, %for.body37 ]
  %dvdl.1471 = phi float [ %dvdl.0478, %for.body37.lr.ph ], [ %sub188, %for.body37 ]
  %vnbtot.0470 = phi float [ 0.000000e+00, %for.body37.lr.ph ], [ %add186, %for.body37 ]
  %fix1.0469 = phi float [ 0.000000e+00, %for.body37.lr.ph ], [ %add197, %for.body37 ]
  %fiy1.0468 = phi float [ 0.000000e+00, %for.body37.lr.ph ], [ %add198, %for.body37 ]
  %fiz1.0467 = phi float [ 0.000000e+00, %for.body37.lr.ph ], [ %add199, %for.body37 ]
  %arrayidx39 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %13 = load i32* %arrayidx39, align 4, !tbaa !0
  %mul40 = mul nsw i32 %13, 3
  %idxprom41 = sext i32 %mul40 to i64
  %arrayidx42 = getelementptr inbounds float* %pos, i64 %idxprom41
  %14 = load float* %arrayidx42, align 4, !tbaa !3
  %add43 = add nsw i32 %mul40, 1
  %idxprom44 = sext i32 %add43 to i64
  %arrayidx45 = getelementptr inbounds float* %pos, i64 %idxprom44
  %15 = load float* %arrayidx45, align 4, !tbaa !3
  %add46 = add nsw i32 %mul40, 2
  %idxprom47 = sext i32 %add46 to i64
  %arrayidx48 = getelementptr inbounds float* %pos, i64 %idxprom47
  %16 = load float* %arrayidx48, align 4, !tbaa !3
  %sub49 = fsub float %add18, %14
  %sub50 = fsub float %add22, %15
  %sub51 = fsub float %add26, %16
  %mul52 = fmul float %sub49, %sub49
  %mul53 = fmul float %sub50, %sub50
  %add54 = fadd float %mul52, %mul53
  %mul55 = fmul float %sub51, %sub51
  %add56 = fadd float %add54, %mul55
  %conv = fpext float %add56 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv57 = fptrunc double %div to float
  %mul58 = fmul float %add56, %conv57
  %mul59 = fmul float %mul58, %tabscale
  %conv60 = fptosi float %mul59 to i32
  %conv61 = sitofp i32 %conv60 to float
  %sub62 = fsub float %mul59, %conv61
  %mul63 = fmul float %sub62, %sub62
  %mul64 = shl nsw i32 %conv60, 3
  %idxprom65 = sext i32 %13 to i64
  %arrayidx66 = getelementptr inbounds i32* %type, i64 %idxprom65
  %17 = load i32* %arrayidx66, align 4, !tbaa !0
  %mul67 = mul nsw i32 %17, 3
  %add68 = add nsw i32 %mul67, %mul30
  %arrayidx70 = getelementptr inbounds i32* %typeB, i64 %idxprom65
  %18 = load i32* %arrayidx70, align 4, !tbaa !0
  %mul71 = mul nsw i32 %18, 3
  %add72 = add nsw i32 %mul71, %mul34
  %idxprom73 = sext i32 %add68 to i64
  %arrayidx74 = getelementptr inbounds float* %nbfp, i64 %idxprom73
  %19 = load float* %arrayidx74, align 4, !tbaa !3
  %idxprom75 = sext i32 %add72 to i64
  %arrayidx76 = getelementptr inbounds float* %nbfp, i64 %idxprom75
  %20 = load float* %arrayidx76, align 4, !tbaa !3
  %mul77 = fmul float %sub, %19
  %mul78 = fmul float %20, %lambda
  %add79 = fadd float %mul77, %mul78
  %add80 = add nsw i32 %add68, 1
  %idxprom81 = sext i32 %add80 to i64
  %arrayidx82 = getelementptr inbounds float* %nbfp, i64 %idxprom81
  %21 = load float* %arrayidx82, align 4, !tbaa !3
  %add83 = add nsw i32 %add72, 1
  %idxprom84 = sext i32 %add83 to i64
  %arrayidx85 = getelementptr inbounds float* %nbfp, i64 %idxprom84
  %22 = load float* %arrayidx85, align 4, !tbaa !3
  %add86 = add nsw i32 %add68, 2
  %idxprom87 = sext i32 %add86 to i64
  %arrayidx88 = getelementptr inbounds float* %nbfp, i64 %idxprom87
  %23 = load float* %arrayidx88, align 4, !tbaa !3
  %add89 = add nsw i32 %add72, 2
  %idxprom90 = sext i32 %add89 to i64
  %arrayidx91 = getelementptr inbounds float* %nbfp, i64 %idxprom90
  %24 = load float* %arrayidx91, align 4, !tbaa !3
  %idxprom92 = sext i32 %mul64 to i64
  %arrayidx93 = getelementptr inbounds float* %VFtab, i64 %idxprom92
  %25 = load float* %arrayidx93, align 4, !tbaa !3
  %add94455 = or i32 %mul64, 1
  %idxprom95 = sext i32 %add94455 to i64
  %arrayidx96 = getelementptr inbounds float* %VFtab, i64 %idxprom95
  %26 = load float* %arrayidx96, align 4, !tbaa !3
  %add97456 = or i32 %mul64, 2
  %idxprom98 = sext i32 %add97456 to i64
  %arrayidx99 = getelementptr inbounds float* %VFtab, i64 %idxprom98
  %27 = load float* %arrayidx99, align 4, !tbaa !3
  %mul100 = fmul float %sub62, %27
  %add101457 = or i32 %mul64, 3
  %idxprom102 = sext i32 %add101457 to i64
  %arrayidx103 = getelementptr inbounds float* %VFtab, i64 %idxprom102
  %28 = load float* %arrayidx103, align 4, !tbaa !3
  %mul104 = fmul float %mul63, %28
  %add105 = fadd float %26, %mul100
  %add106 = fadd float %add105, %mul104
  %mul107 = fmul float %sub62, %add106
  %add108 = fadd float %25, %mul107
  %add109 = fadd float %mul100, %add106
  %mul110 = fmul float %mul104, 2.000000e+00
  %add111 = fadd float %mul110, %add109
  %mul112 = fmul float %add79, %add108
  %mul113 = fmul float %add79, %add111
  %sub114 = fsub float %20, %19
  %mul115 = fmul float %sub114, %add108
  %add116 = fadd float %dvdl.1471, %mul115
  %mul117 = fmul float %mul58, %23
  %mul118 = fmul float %mul117, %exptabscale
  %conv119 = fptosi float %mul118 to i32
  %conv120 = sitofp i32 %conv119 to float
  %sub121 = fsub float %mul118, %conv120
  %mul122 = fmul float %sub121, %sub121
  %mul123 = shl nsw i32 %conv119, 3
  %add124458 = or i32 %mul123, 4
  %idxprom125 = sext i32 %add124458 to i64
  %arrayidx126 = getelementptr inbounds float* %VFtab, i64 %idxprom125
  %29 = load float* %arrayidx126, align 4, !tbaa !3
  %add127459 = or i32 %mul123, 5
  %idxprom128 = sext i32 %add127459 to i64
  %arrayidx129 = getelementptr inbounds float* %VFtab, i64 %idxprom128
  %30 = load float* %arrayidx129, align 4, !tbaa !3
  %add130460 = or i32 %mul123, 6
  %idxprom131 = sext i32 %add130460 to i64
  %arrayidx132 = getelementptr inbounds float* %VFtab, i64 %idxprom131
  %31 = load float* %arrayidx132, align 4, !tbaa !3
  %mul133 = fmul float %sub121, %31
  %add134461 = or i32 %mul123, 7
  %idxprom135 = sext i32 %add134461 to i64
  %arrayidx136 = getelementptr inbounds float* %VFtab, i64 %idxprom135
  %32 = load float* %arrayidx136, align 4, !tbaa !3
  %mul137 = fmul float %mul122, %32
  %add138 = fadd float %30, %mul133
  %add139 = fadd float %add138, %mul137
  %mul140 = fmul float %sub121, %add139
  %add141 = fadd float %29, %mul140
  %add142 = fadd float %mul133, %add139
  %mul143 = fmul float %mul137, 2.000000e+00
  %add144 = fadd float %mul143, %add142
  %mul145 = fmul float %21, %add141
  %mul146 = fmul float %21, %23
  %mul147 = fmul float %mul146, %add144
  %mul148 = fmul float %mul58, %24
  %mul149 = fmul float %mul148, %exptabscale
  %conv150 = fptosi float %mul149 to i32
  %conv151 = sitofp i32 %conv150 to float
  %sub152 = fsub float %mul149, %conv151
  %mul153 = fmul float %sub152, %sub152
  %mul154 = shl nsw i32 %conv150, 3
  %add155462 = or i32 %mul154, 4
  %idxprom156 = sext i32 %add155462 to i64
  %arrayidx157 = getelementptr inbounds float* %VFtab, i64 %idxprom156
  %33 = load float* %arrayidx157, align 4, !tbaa !3
  %add158463 = or i32 %mul154, 5
  %idxprom159 = sext i32 %add158463 to i64
  %arrayidx160 = getelementptr inbounds float* %VFtab, i64 %idxprom159
  %34 = load float* %arrayidx160, align 4, !tbaa !3
  %add161464 = or i32 %mul154, 6
  %idxprom162 = sext i32 %add161464 to i64
  %arrayidx163 = getelementptr inbounds float* %VFtab, i64 %idxprom162
  %35 = load float* %arrayidx163, align 4, !tbaa !3
  %mul164 = fmul float %sub152, %35
  %add165465 = or i32 %mul154, 7
  %idxprom166 = sext i32 %add165465 to i64
  %arrayidx167 = getelementptr inbounds float* %VFtab, i64 %idxprom166
  %36 = load float* %arrayidx167, align 4, !tbaa !3
  %mul168 = fmul float %mul153, %36
  %add169 = fadd float %34, %mul164
  %add170 = fadd float %add169, %mul168
  %mul171 = fmul float %sub152, %add170
  %add172 = fadd float %33, %mul171
  %add173 = fadd float %mul164, %add170
  %mul174 = fmul float %mul168, 2.000000e+00
  %add175 = fadd float %mul174, %add173
  %mul176 = fmul float %22, %add172
  %mul177 = fmul float %22, %24
  %mul178 = fmul float %mul177, %add175
  %mul179 = fmul float %sub, %mul147
  %mul180 = fmul float %mul178, %lambda
  %add181 = fadd float %mul179, %mul180
  %add182 = fadd float %vnbtot.0470, %mul112
  %mul183 = fmul float %sub, %mul145
  %add184 = fadd float %add182, %mul183
  %mul185 = fmul float %mul176, %lambda
  %add186 = fadd float %add184, %mul185
  %add187 = fadd float %add116, %mul176
  %sub188 = fsub float %add187, %mul145
  %mul189 = fmul float %mul113, %tabscale
  %mul190 = fmul float %add181, %exptabscale
  %add191 = fadd float %mul189, %mul190
  %37 = fmul float %conv57, %add191
  %mul193 = fsub float -0.000000e+00, %37
  %mul194 = fmul float %sub49, %mul193
  %mul195 = fmul float %sub50, %mul193
  %mul196 = fmul float %sub51, %mul193
  %add197 = fadd float %fix1.0469, %mul194
  %add198 = fadd float %fiy1.0468, %mul195
  %add199 = fadd float %fiz1.0467, %mul196
  %arrayidx201 = getelementptr inbounds float* %faction, i64 %idxprom41
  %38 = load float* %arrayidx201, align 4, !tbaa !3
  %sub202 = fsub float %38, %mul194
  store float %sub202, float* %arrayidx201, align 4, !tbaa !3
  %arrayidx207 = getelementptr inbounds float* %faction, i64 %idxprom44
  %39 = load float* %arrayidx207, align 4, !tbaa !3
  %sub208 = fsub float %39, %mul195
  store float %sub208, float* %arrayidx207, align 4, !tbaa !3
  %arrayidx214 = getelementptr inbounds float* %faction, i64 %idxprom47
  %40 = load float* %arrayidx214, align 4, !tbaa !3
  %sub215 = fsub float %40, %mul196
  store float %sub215, float* %arrayidx214, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %41 = trunc i64 %indvars.iv.next to i32
  %cmp36 = icmp slt i32 %41, %6
  br i1 %cmp36, label %for.body37, label %for.end

for.end:                                          ; preds = %for.body37, %for.body
  %dvdl.1.lcssa = phi float [ %dvdl.0478, %for.body ], [ %sub188, %for.body37 ]
  %vnbtot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add186, %for.body37 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add197, %for.body37 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add198, %for.body37 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add199, %for.body37 ]
  %arrayidx220 = getelementptr inbounds float* %faction, i64 %idxprom16
  %42 = load float* %arrayidx220, align 4, !tbaa !3
  %add221 = fadd float %fix1.0.lcssa, %42
  store float %add221, float* %arrayidx220, align 4, !tbaa !3
  %arrayidx226 = getelementptr inbounds float* %faction, i64 %idxprom20
  %43 = load float* %arrayidx226, align 4, !tbaa !3
  %add227 = fadd float %fiy1.0.lcssa, %43
  store float %add227, float* %arrayidx226, align 4, !tbaa !3
  %arrayidx233 = getelementptr inbounds float* %faction, i64 %idxprom24
  %44 = load float* %arrayidx233, align 4, !tbaa !3
  %add234 = fadd float %fiz1.0.lcssa, %44
  store float %add234, float* %arrayidx233, align 4, !tbaa !3
  %arrayidx239 = getelementptr inbounds float* %fshift, i64 %idxprom1
  %45 = load float* %arrayidx239, align 4, !tbaa !3
  %add240 = fadd float %fix1.0.lcssa, %45
  store float %add240, float* %arrayidx239, align 4, !tbaa !3
  %arrayidx245 = getelementptr inbounds float* %fshift, i64 %idxprom3
  %46 = load float* %arrayidx245, align 4, !tbaa !3
  %add246 = fadd float %fiy1.0.lcssa, %46
  store float %add246, float* %arrayidx245, align 4, !tbaa !3
  %arrayidx252 = getelementptr inbounds float* %fshift, i64 %idxprom6
  %47 = load float* %arrayidx252, align 4, !tbaa !3
  %add253 = fadd float %fiz1.0.lcssa, %47
  store float %add253, float* %arrayidx252, align 4, !tbaa !3
  %arrayidx258 = getelementptr inbounds i32* %gid, i64 %indvars.iv481
  %48 = load i32* %arrayidx258, align 4, !tbaa !0
  %idxprom259 = sext i32 %48 to i64
  %arrayidx260 = getelementptr inbounds float* %Vnb, i64 %idxprom259
  %49 = load float* %arrayidx260, align 4, !tbaa !3
  %add261 = fadd float %vnbtot.0.lcssa, %49
  store float %add261, float* %arrayidx260, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next482 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end266, label %for.body

for.end266:                                       ; preds = %for.end, %entry
  %dvdl.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %dvdl.1.lcssa, %for.end ]
  %50 = load float* %dvdlambda, align 4, !tbaa !3
  %add267 = fadd float %dvdl.0.lcssa, %50
  store float %add267, float* %dvdlambda, align 4, !tbaa !3
  ret void
}
