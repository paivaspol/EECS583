define void @inl1010(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, i32* nocapture %nsatoms) #0 {
entry:
  %cmp256 = icmp sgt i32 %nri, 0
  br i1 %cmp256, label %for.body, label %for.end150

for.body:                                         ; preds = %for.end140, %entry
  %indvars.iv264 = phi i64 [ 0, %entry ], [ %indvars.iv.next265, %for.end140 ]
  %add5 = mul i64 %indvars.iv264, 12884901888
  %sext = add i64 %add5, 8589934592
  %idxprom6 = ashr exact i64 %sext, 32
  %arrayidx7 = getelementptr inbounds i32* %nsatoms, i64 %idxprom6
  %0 = load i32* %arrayidx7, align 4, !tbaa !0
  %arrayidx9 = getelementptr inbounds i32* %shift, i64 %indvars.iv264
  %1 = load i32* %arrayidx9, align 4, !tbaa !0
  %mul10 = mul nsw i32 %1, 3
  %idxprom11 = sext i32 %mul10 to i64
  %arrayidx12 = getelementptr inbounds float* %shiftvec, i64 %idxprom11
  %2 = load float* %arrayidx12, align 4, !tbaa !3
  %add13 = add nsw i32 %mul10, 1
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds float* %shiftvec, i64 %idxprom14
  %3 = load float* %arrayidx15, align 4, !tbaa !3
  %add16 = add nsw i32 %mul10, 2
  %idxprom17 = sext i32 %add16 to i64
  %arrayidx18 = getelementptr inbounds float* %shiftvec, i64 %idxprom17
  %4 = load float* %arrayidx18, align 4, !tbaa !3
  %arrayidx20 = getelementptr inbounds i32* %iinr, i64 %indvars.iv264
  %5 = load i32* %arrayidx20, align 4, !tbaa !0
  %arrayidx23 = getelementptr inbounds i32* %jindex, i64 %indvars.iv264
  %6 = load i32* %arrayidx23, align 4, !tbaa !0
  %indvars.iv.next265 = add i64 %indvars.iv264, 1
  %arrayidx26 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next265
  %7 = load i32* %arrayidx26, align 4, !tbaa !0
  %cmp28250 = icmp sgt i32 %0, 0
  br i1 %cmp28250, label %for.body29.lr.ph, label %for.end140

for.body29.lr.ph:                                 ; preds = %for.body
  %cmp45241 = icmp slt i32 %6, %7
  %arrayidx118 = getelementptr inbounds float* %fshift, i64 %idxprom11
  %arrayidx124 = getelementptr inbounds float* %fshift, i64 %idxprom14
  %arrayidx131 = getelementptr inbounds float* %fshift, i64 %idxprom17
  %8 = sext i32 %6 to i64
  %9 = sext i32 %5 to i64
  %10 = mul i32 %5, 3
  %11 = sext i32 %10 to i64
  br label %for.body29

for.body29:                                       ; preds = %for.end, %for.body29.lr.ph
  %indvars.iv260 = phi i64 [ %11, %for.body29.lr.ph ], [ %indvars.iv.next261, %for.end ]
  %indvars.iv258 = phi i64 [ %9, %for.body29.lr.ph ], [ %indvars.iv.next259, %for.end ]
  %s.0252 = phi i32 [ 0, %for.body29.lr.ph ], [ %inc139, %for.end ]
  %vctot.0251 = phi float [ 0.000000e+00, %for.body29.lr.ph ], [ %vctot.1.lcssa, %for.end ]
  %arrayidx31 = getelementptr inbounds float* %pos, i64 %indvars.iv260
  %12 = load float* %arrayidx31, align 4, !tbaa !3
  %add32 = fadd float %2, %12
  %13 = add nsw i64 %indvars.iv260, 1
  %arrayidx35 = getelementptr inbounds float* %pos, i64 %13
  %14 = load float* %arrayidx35, align 4, !tbaa !3
  %add36 = fadd float %3, %14
  %15 = add nsw i64 %indvars.iv260, 2
  %arrayidx39 = getelementptr inbounds float* %pos, i64 %15
  %16 = load float* %arrayidx39, align 4, !tbaa !3
  %add40 = fadd float %4, %16
  %arrayidx42 = getelementptr inbounds float* %charge, i64 %indvars.iv258
  %17 = load float* %arrayidx42, align 4, !tbaa !3
  %mul43 = fmul float %17, %facel
  br i1 %cmp45241, label %for.body46, label %for.end

for.body46:                                       ; preds = %for.body29, %for.body46
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body46 ], [ %8, %for.body29 ]
  %vctot.1245 = phi float [ %add72, %for.body46 ], [ %vctot.0251, %for.body29 ]
  %fix1.0244 = phi float [ %add76, %for.body46 ], [ 0.000000e+00, %for.body29 ]
  %fiy1.0243 = phi float [ %add77, %for.body46 ], [ 0.000000e+00, %for.body29 ]
  %fiz1.0242 = phi float [ %add78, %for.body46 ], [ 0.000000e+00, %for.body29 ]
  %arrayidx48 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %18 = load i32* %arrayidx48, align 4, !tbaa !0
  %mul49 = mul nsw i32 %18, 3
  %idxprom50 = sext i32 %mul49 to i64
  %arrayidx51 = getelementptr inbounds float* %pos, i64 %idxprom50
  %19 = load float* %arrayidx51, align 4, !tbaa !3
  %add52 = add nsw i32 %mul49, 1
  %idxprom53 = sext i32 %add52 to i64
  %arrayidx54 = getelementptr inbounds float* %pos, i64 %idxprom53
  %20 = load float* %arrayidx54, align 4, !tbaa !3
  %add55 = add nsw i32 %mul49, 2
  %idxprom56 = sext i32 %add55 to i64
  %arrayidx57 = getelementptr inbounds float* %pos, i64 %idxprom56
  %21 = load float* %arrayidx57, align 4, !tbaa !3
  %sub = fsub float %add32, %19
  %sub58 = fsub float %add36, %20
  %sub59 = fsub float %add40, %21
  %mul60 = fmul float %sub, %sub
  %mul61 = fmul float %sub58, %sub58
  %add62 = fadd float %mul60, %mul61
  %mul63 = fmul float %sub59, %sub59
  %add64 = fadd float %add62, %mul63
  %conv = fpext float %add64 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv65 = fptrunc double %div to float
  %mul66 = fmul float %conv65, %conv65
  %idxprom67 = sext i32 %18 to i64
  %arrayidx68 = getelementptr inbounds float* %charge, i64 %idxprom67
  %22 = load float* %arrayidx68, align 4, !tbaa !3
  %mul69 = fmul float %mul43, %22
  %mul70 = fmul float %conv65, %mul69
  %mul71 = fmul float %mul66, %mul70
  %add72 = fadd float %vctot.1245, %mul70
  %mul73 = fmul float %sub, %mul71
  %mul74 = fmul float %sub58, %mul71
  %mul75 = fmul float %sub59, %mul71
  %add76 = fadd float %fix1.0244, %mul73
  %add77 = fadd float %fiy1.0243, %mul74
  %add78 = fadd float %fiz1.0242, %mul75
  %arrayidx80 = getelementptr inbounds float* %faction, i64 %idxprom50
  %23 = load float* %arrayidx80, align 4, !tbaa !3
  %sub81 = fsub float %23, %mul73
  store float %sub81, float* %arrayidx80, align 4, !tbaa !3
  %arrayidx86 = getelementptr inbounds float* %faction, i64 %idxprom53
  %24 = load float* %arrayidx86, align 4, !tbaa !3
  %sub87 = fsub float %24, %mul74
  store float %sub87, float* %arrayidx86, align 4, !tbaa !3
  %arrayidx93 = getelementptr inbounds float* %faction, i64 %idxprom56
  %25 = load float* %arrayidx93, align 4, !tbaa !3
  %sub94 = fsub float %25, %mul75
  store float %sub94, float* %arrayidx93, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %26 = trunc i64 %indvars.iv.next to i32
  %cmp45 = icmp slt i32 %26, %7
  br i1 %cmp45, label %for.body46, label %for.end

for.end:                                          ; preds = %for.body46, %for.body29
  %vctot.1.lcssa = phi float [ %vctot.0251, %for.body29 ], [ %add72, %for.body46 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add76, %for.body46 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add77, %for.body46 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add78, %for.body46 ]
  %arrayidx99 = getelementptr inbounds float* %faction, i64 %indvars.iv260
  %27 = load float* %arrayidx99, align 4, !tbaa !3
  %add100 = fadd float %fix1.0.lcssa, %27
  store float %add100, float* %arrayidx99, align 4, !tbaa !3
  %arrayidx105 = getelementptr inbounds float* %faction, i64 %13
  %28 = load float* %arrayidx105, align 4, !tbaa !3
  %add106 = fadd float %fiy1.0.lcssa, %28
  store float %add106, float* %arrayidx105, align 4, !tbaa !3
  %arrayidx112 = getelementptr inbounds float* %faction, i64 %15
  %29 = load float* %arrayidx112, align 4, !tbaa !3
  %add113 = fadd float %fiz1.0.lcssa, %29
  store float %add113, float* %arrayidx112, align 4, !tbaa !3
  %30 = load float* %arrayidx118, align 4, !tbaa !3
  %add119 = fadd float %fix1.0.lcssa, %30
  store float %add119, float* %arrayidx118, align 4, !tbaa !3
  %31 = load float* %arrayidx124, align 4, !tbaa !3
  %add125 = fadd float %fiy1.0.lcssa, %31
  store float %add125, float* %arrayidx124, align 4, !tbaa !3
  %32 = load float* %arrayidx131, align 4, !tbaa !3
  %add132 = fadd float %fiz1.0.lcssa, %32
  store float %add132, float* %arrayidx131, align 4, !tbaa !3
  %indvars.iv.next259 = add i64 %indvars.iv258, 1
  %indvars.iv.next261 = add i64 %indvars.iv260, 3
  %inc139 = add nsw i32 %s.0252, 1
  %exitcond = icmp eq i32 %inc139, %0
  br i1 %exitcond, label %for.end140, label %for.body29

for.end140:                                       ; preds = %for.end, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %vctot.1.lcssa, %for.end ]
  %arrayidx142 = getelementptr inbounds i32* %gid, i64 %indvars.iv264
  %33 = load i32* %arrayidx142, align 4, !tbaa !0
  %idxprom143 = sext i32 %33 to i64
  %arrayidx144 = getelementptr inbounds float* %Vc, i64 %idxprom143
  %34 = load float* %arrayidx144, align 4, !tbaa !3
  %add145 = fadd float %vctot.0.lcssa, %34
  store float %add145, float* %arrayidx144, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next265 to i32
  %exitcond266 = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond266, label %for.end150, label %for.body

for.end150:                                       ; preds = %for.end140, %entry
  ret void
}
