define void @inl2310(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, float %krf, float %crf, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb, float %tabscale, float* nocapture %VFtab, i32* nocapture %nsatoms) #0 {
entry:
  %cmp1053 = icmp sgt i32 %nri, 0
  br i1 %cmp1053, label %for.body.lr.ph, label %for.end546

for.body.lr.ph:                                   ; preds = %entry
  %mul362 = shl i32 %ntype, 1
  br label %for.body

for.body:                                         ; preds = %for.end531, %for.body.lr.ph
  %indvars.iv1079 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next1080, %for.end531 ]
  %0 = trunc i64 %indvars.iv1079 to i32
  %mul = mul nsw i32 %0, 3
  %idxprom = sext i32 %mul to i64
  %arrayidx = getelementptr inbounds i32* %nsatoms, i64 %idxprom
  %1 = load i32* %arrayidx, align 4, !tbaa !0
  %add = add nsw i32 %mul, 1
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds i32* %nsatoms, i64 %idxprom2
  %2 = load i32* %arrayidx3, align 4, !tbaa !0
  %add5 = add nsw i32 %mul, 2
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds i32* %nsatoms, i64 %idxprom6
  %3 = load i32* %arrayidx7, align 4, !tbaa !0
  %arrayidx9 = getelementptr inbounds i32* %shift, i64 %indvars.iv1079
  %4 = load i32* %arrayidx9, align 4, !tbaa !0
  %mul10 = mul nsw i32 %4, 3
  %idxprom11 = sext i32 %mul10 to i64
  %arrayidx12 = getelementptr inbounds float* %shiftvec, i64 %idxprom11
  %5 = load float* %arrayidx12, align 4, !tbaa !3
  %add13 = add nsw i32 %mul10, 1
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds float* %shiftvec, i64 %idxprom14
  %6 = load float* %arrayidx15, align 4, !tbaa !3
  %add16 = add nsw i32 %mul10, 2
  %idxprom17 = sext i32 %add16 to i64
  %arrayidx18 = getelementptr inbounds float* %shiftvec, i64 %idxprom17
  %7 = load float* %arrayidx18, align 4, !tbaa !3
  %arrayidx20 = getelementptr inbounds i32* %iinr, i64 %indvars.iv1079
  %8 = load i32* %arrayidx20, align 4, !tbaa !0
  %mul21 = mul i32 %8, 3
  %arrayidx23 = getelementptr inbounds i32* %jindex, i64 %indvars.iv1079
  %9 = load i32* %arrayidx23, align 4, !tbaa !0
  %indvars.iv.next1080 = add i64 %indvars.iv1079, 1
  %arrayidx26 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next1080
  %10 = load i32* %arrayidx26, align 4, !tbaa !0
  %cmp281009 = icmp sgt i32 %2, 0
  br i1 %cmp281009, label %for.body29.lr.ph, label %for.cond218.loopexit

for.body29.lr.ph:                                 ; preds = %for.body
  %cmp49998 = icmp slt i32 %9, %10
  %arrayidx195 = getelementptr inbounds float* %fshift, i64 %idxprom11
  %arrayidx201 = getelementptr inbounds float* %fshift, i64 %idxprom14
  %arrayidx208 = getelementptr inbounds float* %fshift, i64 %idxprom17
  %11 = sext i32 %9 to i64
  %12 = sext i32 %8 to i64
  %13 = sext i32 %mul21 to i64
  %14 = add i32 %2, %8
  %15 = mul i32 %14, 3
  br label %for.body29

for.body29:                                       ; preds = %for.end, %for.body29.lr.ph
  %indvars.iv1057 = phi i64 [ %13, %for.body29.lr.ph ], [ %indvars.iv.next1058, %for.end ]
  %indvars.iv1055 = phi i64 [ %12, %for.body29.lr.ph ], [ %indvars.iv.next1056, %for.end ]
  %s.01012 = phi i32 [ 0, %for.body29.lr.ph ], [ %inc216, %for.end ]
  %vnbtot.01011 = phi float [ 0.000000e+00, %for.body29.lr.ph ], [ %vnbtot.1.lcssa, %for.end ]
  %vctot.01010 = phi float [ 0.000000e+00, %for.body29.lr.ph ], [ %vctot.1.lcssa, %for.end ]
  %arrayidx31 = getelementptr inbounds float* %pos, i64 %indvars.iv1057
  %16 = load float* %arrayidx31, align 4, !tbaa !3
  %add32 = fadd float %5, %16
  %17 = add nsw i64 %indvars.iv1057, 1
  %arrayidx35 = getelementptr inbounds float* %pos, i64 %17
  %18 = load float* %arrayidx35, align 4, !tbaa !3
  %add36 = fadd float %6, %18
  %19 = add nsw i64 %indvars.iv1057, 2
  %arrayidx39 = getelementptr inbounds float* %pos, i64 %19
  %20 = load float* %arrayidx39, align 4, !tbaa !3
  %add40 = fadd float %7, %20
  %arrayidx42 = getelementptr inbounds float* %charge, i64 %indvars.iv1055
  %21 = load float* %arrayidx42, align 4, !tbaa !3
  %mul43 = fmul float %21, %facel
  %arrayidx46 = getelementptr inbounds i32* %type, i64 %indvars.iv1055
  %22 = load i32* %arrayidx46, align 4, !tbaa !0
  %mul47 = mul nsw i32 %mul362, %22
  br i1 %cmp49998, label %for.body50, label %for.end

for.body50:                                       ; preds = %for.body29, %for.body50
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body50 ], [ %11, %for.body29 ]
  %fiz1.01003 = phi float [ %add155, %for.body50 ], [ 0.000000e+00, %for.body29 ]
  %fiy1.01002 = phi float [ %add154, %for.body50 ], [ 0.000000e+00, %for.body29 ]
  %fix1.01001 = phi float [ %add153, %for.body50 ], [ 0.000000e+00, %for.body29 ]
  %vnbtot.11000 = phi float [ %add133, %for.body50 ], [ %vnbtot.01011, %for.body29 ]
  %vctot.1999 = phi float [ %add149, %for.body50 ], [ %vctot.01010, %for.body29 ]
  %arrayidx52 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %23 = load i32* %arrayidx52, align 4, !tbaa !0
  %mul53 = mul nsw i32 %23, 3
  %idxprom54 = sext i32 %mul53 to i64
  %arrayidx55 = getelementptr inbounds float* %pos, i64 %idxprom54
  %24 = load float* %arrayidx55, align 4, !tbaa !3
  %add56 = add nsw i32 %mul53, 1
  %idxprom57 = sext i32 %add56 to i64
  %arrayidx58 = getelementptr inbounds float* %pos, i64 %idxprom57
  %25 = load float* %arrayidx58, align 4, !tbaa !3
  %add59 = add nsw i32 %mul53, 2
  %idxprom60 = sext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds float* %pos, i64 %idxprom60
  %26 = load float* %arrayidx61, align 4, !tbaa !3
  %sub = fsub float %add32, %24
  %sub62 = fsub float %add36, %25
  %sub63 = fsub float %add40, %26
  %mul64 = fmul float %sub, %sub
  %mul65 = fmul float %sub62, %sub62
  %add66 = fadd float %mul64, %mul65
  %mul67 = fmul float %sub63, %sub63
  %add68 = fadd float %add66, %mul67
  %conv = fpext float %add68 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv69 = fptrunc double %div to float
  %mul70 = fmul float %add68, %conv69
  %mul72 = fmul float %mul70, %tabscale
  %conv73 = fptosi float %mul72 to i32
  %conv74 = sitofp i32 %conv73 to float
  %sub75 = fsub float %mul72, %conv74
  %mul76 = fmul float %sub75, %sub75
  %mul77 = shl nsw i32 %conv73, 3
  %idxprom78 = sext i32 %23 to i64
  %arrayidx79 = getelementptr inbounds i32* %type, i64 %idxprom78
  %27 = load i32* %arrayidx79, align 4, !tbaa !0
  %mul80 = shl nsw i32 %27, 1
  %add81 = add nsw i32 %mul80, %mul47
  %idxprom82 = sext i32 %add81 to i64
  %arrayidx83 = getelementptr inbounds float* %nbfp, i64 %idxprom82
  %28 = load float* %arrayidx83, align 4, !tbaa !3
  %add84990 = or i32 %add81, 1
  %idxprom85 = sext i32 %add84990 to i64
  %arrayidx86 = getelementptr inbounds float* %nbfp, i64 %idxprom85
  %29 = load float* %arrayidx86, align 4, !tbaa !3
  %idxprom87 = sext i32 %mul77 to i64
  %arrayidx88 = getelementptr inbounds float* %VFtab, i64 %idxprom87
  %30 = load float* %arrayidx88, align 4, !tbaa !3
  %add89991 = or i32 %mul77, 1
  %idxprom90 = sext i32 %add89991 to i64
  %arrayidx91 = getelementptr inbounds float* %VFtab, i64 %idxprom90
  %31 = load float* %arrayidx91, align 4, !tbaa !3
  %add92992 = or i32 %mul77, 2
  %idxprom93 = sext i32 %add92992 to i64
  %arrayidx94 = getelementptr inbounds float* %VFtab, i64 %idxprom93
  %32 = load float* %arrayidx94, align 4, !tbaa !3
  %mul95 = fmul float %sub75, %32
  %add96993 = or i32 %mul77, 3
  %idxprom97 = sext i32 %add96993 to i64
  %arrayidx98 = getelementptr inbounds float* %VFtab, i64 %idxprom97
  %33 = load float* %arrayidx98, align 4, !tbaa !3
  %mul99 = fmul float %mul76, %33
  %add100 = fadd float %31, %mul95
  %add101 = fadd float %add100, %mul99
  %mul102 = fmul float %sub75, %add101
  %add103 = fadd float %30, %mul102
  %add104 = fadd float %mul95, %add101
  %mul105 = fmul float %mul99, 2.000000e+00
  %add106 = fadd float %mul105, %add104
  %mul107 = fmul float %28, %add103
  %mul108 = fmul float %28, %add106
  %add109994 = or i32 %mul77, 4
  %idxprom110 = sext i32 %add109994 to i64
  %arrayidx111 = getelementptr inbounds float* %VFtab, i64 %idxprom110
  %34 = load float* %arrayidx111, align 4, !tbaa !3
  %add112995 = or i32 %mul77, 5
  %idxprom113 = sext i32 %add112995 to i64
  %arrayidx114 = getelementptr inbounds float* %VFtab, i64 %idxprom113
  %35 = load float* %arrayidx114, align 4, !tbaa !3
  %add115996 = or i32 %mul77, 6
  %idxprom116 = sext i32 %add115996 to i64
  %arrayidx117 = getelementptr inbounds float* %VFtab, i64 %idxprom116
  %36 = load float* %arrayidx117, align 4, !tbaa !3
  %mul118 = fmul float %sub75, %36
  %add119997 = or i32 %mul77, 7
  %idxprom120 = sext i32 %add119997 to i64
  %arrayidx121 = getelementptr inbounds float* %VFtab, i64 %idxprom120
  %37 = load float* %arrayidx121, align 4, !tbaa !3
  %mul122 = fmul float %mul76, %37
  %add123 = fadd float %35, %mul118
  %add124 = fadd float %add123, %mul122
  %mul125 = fmul float %sub75, %add124
  %add126 = fadd float %34, %mul125
  %add127 = fadd float %mul118, %add124
  %mul128 = fmul float %mul122, 2.000000e+00
  %add129 = fadd float %mul128, %add127
  %mul130 = fmul float %29, %add126
  %mul131 = fmul float %29, %add129
  %add132 = fadd float %vnbtot.11000, %mul107
  %add133 = fadd float %add132, %mul130
  %arrayidx135 = getelementptr inbounds float* %charge, i64 %idxprom78
  %38 = load float* %arrayidx135, align 4, !tbaa !3
  %mul136 = fmul float %mul43, %38
  %mul137 = fmul float %add68, %krf
  %add138 = fadd float %conv69, %mul137
  %sub139 = fsub float %add138, %crf
  %mul140 = fmul float %sub139, %mul136
  %mul141 = fmul float %mul137, 2.000000e+00
  %sub142 = fsub float %conv69, %mul141
  %mul143 = fmul float %sub142, %mul136
  %mul144 = fmul float %conv69, %mul143
  %add145 = fadd float %mul108, %mul131
  %mul146 = fmul float %add145, %tabscale
  %sub147 = fsub float %mul144, %mul146
  %mul148 = fmul float %conv69, %sub147
  %add149 = fadd float %vctot.1999, %mul140
  %mul150 = fmul float %sub, %mul148
  %mul151 = fmul float %sub62, %mul148
  %mul152 = fmul float %sub63, %mul148
  %add153 = fadd float %fix1.01001, %mul150
  %add154 = fadd float %fiy1.01002, %mul151
  %add155 = fadd float %fiz1.01003, %mul152
  %arrayidx157 = getelementptr inbounds float* %faction, i64 %idxprom54
  %39 = load float* %arrayidx157, align 4, !tbaa !3
  %sub158 = fsub float %39, %mul150
  store float %sub158, float* %arrayidx157, align 4, !tbaa !3
  %arrayidx163 = getelementptr inbounds float* %faction, i64 %idxprom57
  %40 = load float* %arrayidx163, align 4, !tbaa !3
  %sub164 = fsub float %40, %mul151
  store float %sub164, float* %arrayidx163, align 4, !tbaa !3
  %arrayidx170 = getelementptr inbounds float* %faction, i64 %idxprom60
  %41 = load float* %arrayidx170, align 4, !tbaa !3
  %sub171 = fsub float %41, %mul152
  store float %sub171, float* %arrayidx170, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %42 = trunc i64 %indvars.iv.next to i32
  %cmp49 = icmp slt i32 %42, %10
  br i1 %cmp49, label %for.body50, label %for.end

for.end:                                          ; preds = %for.body50, %for.body29
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add155, %for.body50 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add154, %for.body50 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add153, %for.body50 ]
  %vnbtot.1.lcssa = phi float [ %vnbtot.01011, %for.body29 ], [ %add133, %for.body50 ]
  %vctot.1.lcssa = phi float [ %vctot.01010, %for.body29 ], [ %add149, %for.body50 ]
  %arrayidx176 = getelementptr inbounds float* %faction, i64 %indvars.iv1057
  %43 = load float* %arrayidx176, align 4, !tbaa !3
  %add177 = fadd float %fix1.0.lcssa, %43
  store float %add177, float* %arrayidx176, align 4, !tbaa !3
  %arrayidx182 = getelementptr inbounds float* %faction, i64 %17
  %44 = load float* %arrayidx182, align 4, !tbaa !3
  %add183 = fadd float %fiy1.0.lcssa, %44
  store float %add183, float* %arrayidx182, align 4, !tbaa !3
  %arrayidx189 = getelementptr inbounds float* %faction, i64 %19
  %45 = load float* %arrayidx189, align 4, !tbaa !3
  %add190 = fadd float %fiz1.0.lcssa, %45
  store float %add190, float* %arrayidx189, align 4, !tbaa !3
  %46 = load float* %arrayidx195, align 4, !tbaa !3
  %add196 = fadd float %fix1.0.lcssa, %46
  store float %add196, float* %arrayidx195, align 4, !tbaa !3
  %47 = load float* %arrayidx201, align 4, !tbaa !3
  %add202 = fadd float %fiy1.0.lcssa, %47
  store float %add202, float* %arrayidx201, align 4, !tbaa !3
  %48 = load float* %arrayidx208, align 4, !tbaa !3
  %add209 = fadd float %fiz1.0.lcssa, %48
  store float %add209, float* %arrayidx208, align 4, !tbaa !3
  %indvars.iv.next1056 = add i64 %indvars.iv1055, 1
  %indvars.iv.next1058 = add i64 %indvars.iv1057, 3
  %inc216 = add nsw i32 %s.01012, 1
  %exitcond = icmp eq i32 %inc216, %2
  br i1 %exitcond, label %for.cond27.for.cond218.loopexit_crit_edge, label %for.body29

for.cond27.for.cond218.loopexit_crit_edge:        ; preds = %for.end
  %49 = add i32 %2, %8
  br label %for.cond218.loopexit

for.cond218.loopexit:                             ; preds = %for.cond27.for.cond218.loopexit_crit_edge, %for.body
  %ii.0.lcssa = phi i32 [ %49, %for.cond27.for.cond218.loopexit_crit_edge ], [ %8, %for.body ]
  %ii3.0.lcssa = phi i32 [ %15, %for.cond27.for.cond218.loopexit_crit_edge ], [ %mul21, %for.body ]
  %vnbtot.0.lcssa = phi float [ %vnbtot.1.lcssa, %for.cond27.for.cond218.loopexit_crit_edge ], [ 0.000000e+00, %for.body ]
  %vctot.0.lcssa = phi float [ %vctot.1.lcssa, %for.cond27.for.cond218.loopexit_crit_edge ], [ 0.000000e+00, %for.body ]
  %cmp2191029 = icmp slt i32 %2, %3
  br i1 %cmp2191029, label %for.body221.lr.ph, label %for.cond347.loopexit

for.body221.lr.ph:                                ; preds = %for.cond218.loopexit
  %cmp2371019 = icmp slt i32 %9, %10
  %arrayidx324 = getelementptr inbounds float* %fshift, i64 %idxprom11
  %arrayidx330 = getelementptr inbounds float* %fshift, i64 %idxprom14
  %arrayidx337 = getelementptr inbounds float* %fshift, i64 %idxprom17
  %50 = sext i32 %9 to i64
  %51 = sext i32 %ii.0.lcssa to i64
  %52 = sext i32 %ii3.0.lcssa to i64
  %53 = mul i32 %3, 3
  %54 = add i32 %ii.0.lcssa, %3
  br label %for.body221

for.body221:                                      ; preds = %for.end303, %for.body221.lr.ph
  %indvars.iv1065 = phi i64 [ %52, %for.body221.lr.ph ], [ %indvars.iv.next1066, %for.end303 ]
  %indvars.iv1063 = phi i64 [ %51, %for.body221.lr.ph ], [ %indvars.iv.next1064, %for.end303 ]
  %s.11031 = phi i32 [ %2, %for.body221.lr.ph ], [ %inc345, %for.end303 ]
  %vctot.21030 = phi float [ %vctot.0.lcssa, %for.body221.lr.ph ], [ %vctot.3.lcssa, %for.end303 ]
  %arrayidx223 = getelementptr inbounds float* %pos, i64 %indvars.iv1065
  %55 = load float* %arrayidx223, align 4, !tbaa !3
  %add224 = fadd float %5, %55
  %56 = add nsw i64 %indvars.iv1065, 1
  %arrayidx227 = getelementptr inbounds float* %pos, i64 %56
  %57 = load float* %arrayidx227, align 4, !tbaa !3
  %add228 = fadd float %6, %57
  %58 = add nsw i64 %indvars.iv1065, 2
  %arrayidx231 = getelementptr inbounds float* %pos, i64 %58
  %59 = load float* %arrayidx231, align 4, !tbaa !3
  %add232 = fadd float %7, %59
  %arrayidx234 = getelementptr inbounds float* %charge, i64 %indvars.iv1063
  %60 = load float* %arrayidx234, align 4, !tbaa !3
  %mul235 = fmul float %60, %facel
  br i1 %cmp2371019, label %for.body239, label %for.end303

for.body239:                                      ; preds = %for.body221, %for.body239
  %indvars.iv1061 = phi i64 [ %indvars.iv.next1062, %for.body239 ], [ %50, %for.body221 ]
  %fiz1.11023 = phi float [ %add281, %for.body239 ], [ 0.000000e+00, %for.body221 ]
  %fiy1.11022 = phi float [ %add280, %for.body239 ], [ 0.000000e+00, %for.body221 ]
  %fix1.11021 = phi float [ %add279, %for.body239 ], [ 0.000000e+00, %for.body221 ]
  %vctot.31020 = phi float [ %add275, %for.body239 ], [ %vctot.21030, %for.body221 ]
  %arrayidx241 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv1061
  %61 = load i32* %arrayidx241, align 4, !tbaa !0
  %mul242 = mul nsw i32 %61, 3
  %idxprom243 = sext i32 %mul242 to i64
  %arrayidx244 = getelementptr inbounds float* %pos, i64 %idxprom243
  %62 = load float* %arrayidx244, align 4, !tbaa !3
  %add245 = add nsw i32 %mul242, 1
  %idxprom246 = sext i32 %add245 to i64
  %arrayidx247 = getelementptr inbounds float* %pos, i64 %idxprom246
  %63 = load float* %arrayidx247, align 4, !tbaa !3
  %add248 = add nsw i32 %mul242, 2
  %idxprom249 = sext i32 %add248 to i64
  %arrayidx250 = getelementptr inbounds float* %pos, i64 %idxprom249
  %64 = load float* %arrayidx250, align 4, !tbaa !3
  %sub251 = fsub float %add224, %62
  %sub252 = fsub float %add228, %63
  %sub253 = fsub float %add232, %64
  %mul254 = fmul float %sub251, %sub251
  %mul255 = fmul float %sub252, %sub252
  %add256 = fadd float %mul254, %mul255
  %mul257 = fmul float %sub253, %sub253
  %add258 = fadd float %add256, %mul257
  %conv259 = fpext float %add258 to double
  %call260 = tail call double @sqrt(double %conv259) #2
  %div261 = fdiv double 1.000000e+00, %call260
  %conv262 = fptrunc double %div261 to float
  %mul263 = fmul float %conv262, %conv262
  %idxprom264 = sext i32 %61 to i64
  %arrayidx265 = getelementptr inbounds float* %charge, i64 %idxprom264
  %65 = load float* %arrayidx265, align 4, !tbaa !3
  %mul266 = fmul float %mul235, %65
  %mul267 = fmul float %add258, %krf
  %add268 = fadd float %conv262, %mul267
  %sub269 = fsub float %add268, %crf
  %mul270 = fmul float %mul266, %sub269
  %mul271 = fmul float %mul267, 2.000000e+00
  %sub272 = fsub float %conv262, %mul271
  %mul273 = fmul float %mul266, %sub272
  %mul274 = fmul float %mul263, %mul273
  %add275 = fadd float %vctot.31020, %mul270
  %mul276 = fmul float %sub251, %mul274
  %mul277 = fmul float %sub252, %mul274
  %mul278 = fmul float %sub253, %mul274
  %add279 = fadd float %fix1.11021, %mul276
  %add280 = fadd float %fiy1.11022, %mul277
  %add281 = fadd float %fiz1.11023, %mul278
  %arrayidx283 = getelementptr inbounds float* %faction, i64 %idxprom243
  %66 = load float* %arrayidx283, align 4, !tbaa !3
  %sub284 = fsub float %66, %mul276
  store float %sub284, float* %arrayidx283, align 4, !tbaa !3
  %arrayidx289 = getelementptr inbounds float* %faction, i64 %idxprom246
  %67 = load float* %arrayidx289, align 4, !tbaa !3
  %sub290 = fsub float %67, %mul277
  store float %sub290, float* %arrayidx289, align 4, !tbaa !3
  %arrayidx296 = getelementptr inbounds float* %faction, i64 %idxprom249
  %68 = load float* %arrayidx296, align 4, !tbaa !3
  %sub297 = fsub float %68, %mul278
  store float %sub297, float* %arrayidx296, align 4, !tbaa !3
  %indvars.iv.next1062 = add i64 %indvars.iv1061, 1
  %69 = trunc i64 %indvars.iv.next1062 to i32
  %cmp237 = icmp slt i32 %69, %10
  br i1 %cmp237, label %for.body239, label %for.end303

for.end303:                                       ; preds = %for.body239, %for.body221
  %fiz1.1.lcssa = phi float [ 0.000000e+00, %for.body221 ], [ %add281, %for.body239 ]
  %fiy1.1.lcssa = phi float [ 0.000000e+00, %for.body221 ], [ %add280, %for.body239 ]
  %fix1.1.lcssa = phi float [ 0.000000e+00, %for.body221 ], [ %add279, %for.body239 ]
  %vctot.3.lcssa = phi float [ %vctot.21030, %for.body221 ], [ %add275, %for.body239 ]
  %arrayidx305 = getelementptr inbounds float* %faction, i64 %indvars.iv1065
  %70 = load float* %arrayidx305, align 4, !tbaa !3
  %add306 = fadd float %fix1.1.lcssa, %70
  store float %add306, float* %arrayidx305, align 4, !tbaa !3
  %arrayidx311 = getelementptr inbounds float* %faction, i64 %56
  %71 = load float* %arrayidx311, align 4, !tbaa !3
  %add312 = fadd float %fiy1.1.lcssa, %71
  store float %add312, float* %arrayidx311, align 4, !tbaa !3
  %arrayidx318 = getelementptr inbounds float* %faction, i64 %58
  %72 = load float* %arrayidx318, align 4, !tbaa !3
  %add319 = fadd float %fiz1.1.lcssa, %72
  store float %add319, float* %arrayidx318, align 4, !tbaa !3
  %73 = load float* %arrayidx324, align 4, !tbaa !3
  %add325 = fadd float %fix1.1.lcssa, %73
  store float %add325, float* %arrayidx324, align 4, !tbaa !3
  %74 = load float* %arrayidx330, align 4, !tbaa !3
  %add331 = fadd float %fiy1.1.lcssa, %74
  store float %add331, float* %arrayidx330, align 4, !tbaa !3
  %75 = load float* %arrayidx337, align 4, !tbaa !3
  %add338 = fadd float %fiz1.1.lcssa, %75
  store float %add338, float* %arrayidx337, align 4, !tbaa !3
  %indvars.iv.next1064 = add i64 %indvars.iv1063, 1
  %indvars.iv.next1066 = add i64 %indvars.iv1065, 3
  %inc345 = add nsw i32 %s.11031, 1
  %exitcond1069 = icmp eq i32 %inc345, %3
  br i1 %exitcond1069, label %for.cond218.for.cond347.loopexit_crit_edge, label %for.body221

for.cond218.for.cond347.loopexit_crit_edge:       ; preds = %for.end303
  %76 = add i32 %ii3.0.lcssa, %53
  %77 = mul i32 %2, -3
  %78 = add i32 %76, %77
  %79 = sub i32 %54, %2
  br label %for.cond347.loopexit

for.cond347.loopexit:                             ; preds = %for.cond218.for.cond347.loopexit_crit_edge, %for.cond218.loopexit
  %ii.1.lcssa = phi i32 [ %79, %for.cond218.for.cond347.loopexit_crit_edge ], [ %ii.0.lcssa, %for.cond218.loopexit ]
  %ii3.1.lcssa = phi i32 [ %78, %for.cond218.for.cond347.loopexit_crit_edge ], [ %ii3.0.lcssa, %for.cond218.loopexit ]
  %vctot.2.lcssa = phi float [ %vctot.3.lcssa, %for.cond218.for.cond347.loopexit_crit_edge ], [ %vctot.0.lcssa, %for.cond218.loopexit ]
  %cmp3481047 = icmp slt i32 %3, %1
  br i1 %cmp3481047, label %for.body350.lr.ph, label %for.end531

for.body350.lr.ph:                                ; preds = %for.cond347.loopexit
  %cmp3671037 = icmp slt i32 %9, %10
  %arrayidx509 = getelementptr inbounds float* %fshift, i64 %idxprom11
  %arrayidx515 = getelementptr inbounds float* %fshift, i64 %idxprom14
  %arrayidx522 = getelementptr inbounds float* %fshift, i64 %idxprom17
  %80 = sext i32 %9 to i64
  %81 = sext i32 %ii.1.lcssa to i64
  %82 = sext i32 %ii3.1.lcssa to i64
  br label %for.body350

for.body350:                                      ; preds = %for.end488, %for.body350.lr.ph
  %indvars.iv1074 = phi i64 [ %82, %for.body350.lr.ph ], [ %indvars.iv.next1075, %for.end488 ]
  %indvars.iv1072 = phi i64 [ %81, %for.body350.lr.ph ], [ %indvars.iv.next1073, %for.end488 ]
  %s.21049 = phi i32 [ %3, %for.body350.lr.ph ], [ %inc530, %for.end488 ]
  %vnbtot.21048 = phi float [ %vnbtot.0.lcssa, %for.body350.lr.ph ], [ %vnbtot.3.lcssa, %for.end488 ]
  %arrayidx352 = getelementptr inbounds float* %pos, i64 %indvars.iv1074
  %83 = load float* %arrayidx352, align 4, !tbaa !3
  %add353 = fadd float %5, %83
  %84 = add nsw i64 %indvars.iv1074, 1
  %arrayidx356 = getelementptr inbounds float* %pos, i64 %84
  %85 = load float* %arrayidx356, align 4, !tbaa !3
  %add357 = fadd float %6, %85
  %86 = add nsw i64 %indvars.iv1074, 2
  %arrayidx360 = getelementptr inbounds float* %pos, i64 %86
  %87 = load float* %arrayidx360, align 4, !tbaa !3
  %add361 = fadd float %7, %87
  %arrayidx364 = getelementptr inbounds i32* %type, i64 %indvars.iv1072
  %88 = load i32* %arrayidx364, align 4, !tbaa !0
  %mul365 = mul nsw i32 %mul362, %88
  br i1 %cmp3671037, label %for.body369, label %for.end488

for.body369:                                      ; preds = %for.body350, %for.body369
  %indvars.iv1070 = phi i64 [ %indvars.iv.next1071, %for.body369 ], [ %80, %for.body350 ]
  %fiz1.21041 = phi float [ %add466, %for.body369 ], [ 0.000000e+00, %for.body350 ]
  %fiy1.21040 = phi float [ %add465, %for.body369 ], [ 0.000000e+00, %for.body350 ]
  %fix1.21039 = phi float [ %add464, %for.body369 ], [ 0.000000e+00, %for.body350 ]
  %vnbtot.31038 = phi float [ %add456, %for.body369 ], [ %vnbtot.21048, %for.body350 ]
  %arrayidx371 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv1070
  %89 = load i32* %arrayidx371, align 4, !tbaa !0
  %mul372 = mul nsw i32 %89, 3
  %idxprom373 = sext i32 %mul372 to i64
  %arrayidx374 = getelementptr inbounds float* %pos, i64 %idxprom373
  %90 = load float* %arrayidx374, align 4, !tbaa !3
  %add375 = add nsw i32 %mul372, 1
  %idxprom376 = sext i32 %add375 to i64
  %arrayidx377 = getelementptr inbounds float* %pos, i64 %idxprom376
  %91 = load float* %arrayidx377, align 4, !tbaa !3
  %add378 = add nsw i32 %mul372, 2
  %idxprom379 = sext i32 %add378 to i64
  %arrayidx380 = getelementptr inbounds float* %pos, i64 %idxprom379
  %92 = load float* %arrayidx380, align 4, !tbaa !3
  %sub381 = fsub float %add353, %90
  %sub382 = fsub float %add357, %91
  %sub383 = fsub float %add361, %92
  %mul384 = fmul float %sub381, %sub381
  %mul385 = fmul float %sub382, %sub382
  %add386 = fadd float %mul384, %mul385
  %mul387 = fmul float %sub383, %sub383
  %add388 = fadd float %add386, %mul387
  %conv389 = fpext float %add388 to double
  %call390 = tail call double @sqrt(double %conv389) #2
  %div391 = fdiv double 1.000000e+00, %call390
  %conv392 = fptrunc double %div391 to float
  %mul393 = fmul float %add388, %conv392
  %mul395 = fmul float %mul393, %tabscale
  %conv396 = fptosi float %mul395 to i32
  %conv397 = sitofp i32 %conv396 to float
  %sub398 = fsub float %mul395, %conv397
  %mul399 = fmul float %sub398, %sub398
  %mul400 = shl nsw i32 %conv396, 3
  %idxprom401 = sext i32 %89 to i64
  %arrayidx402 = getelementptr inbounds i32* %type, i64 %idxprom401
  %93 = load i32* %arrayidx402, align 4, !tbaa !0
  %mul403 = shl nsw i32 %93, 1
  %add404 = add nsw i32 %mul403, %mul365
  %idxprom405 = sext i32 %add404 to i64
  %arrayidx406 = getelementptr inbounds float* %nbfp, i64 %idxprom405
  %94 = load float* %arrayidx406, align 4, !tbaa !3
  %add407982 = or i32 %add404, 1
  %idxprom408 = sext i32 %add407982 to i64
  %arrayidx409 = getelementptr inbounds float* %nbfp, i64 %idxprom408
  %95 = load float* %arrayidx409, align 4, !tbaa !3
  %idxprom410 = sext i32 %mul400 to i64
  %arrayidx411 = getelementptr inbounds float* %VFtab, i64 %idxprom410
  %96 = load float* %arrayidx411, align 4, !tbaa !3
  %add412983 = or i32 %mul400, 1
  %idxprom413 = sext i32 %add412983 to i64
  %arrayidx414 = getelementptr inbounds float* %VFtab, i64 %idxprom413
  %97 = load float* %arrayidx414, align 4, !tbaa !3
  %add415984 = or i32 %mul400, 2
  %idxprom416 = sext i32 %add415984 to i64
  %arrayidx417 = getelementptr inbounds float* %VFtab, i64 %idxprom416
  %98 = load float* %arrayidx417, align 4, !tbaa !3
  %mul418 = fmul float %sub398, %98
  %add419985 = or i32 %mul400, 3
  %idxprom420 = sext i32 %add419985 to i64
  %arrayidx421 = getelementptr inbounds float* %VFtab, i64 %idxprom420
  %99 = load float* %arrayidx421, align 4, !tbaa !3
  %mul422 = fmul float %mul399, %99
  %add423 = fadd float %97, %mul418
  %add424 = fadd float %add423, %mul422
  %mul425 = fmul float %sub398, %add424
  %add426 = fadd float %96, %mul425
  %add427 = fadd float %mul418, %add424
  %mul428 = fmul float %mul422, 2.000000e+00
  %add429 = fadd float %mul428, %add427
  %mul430 = fmul float %94, %add426
  %mul431 = fmul float %94, %add429
  %add432986 = or i32 %mul400, 4
  %idxprom433 = sext i32 %add432986 to i64
  %arrayidx434 = getelementptr inbounds float* %VFtab, i64 %idxprom433
  %100 = load float* %arrayidx434, align 4, !tbaa !3
  %add435987 = or i32 %mul400, 5
  %idxprom436 = sext i32 %add435987 to i64
  %arrayidx437 = getelementptr inbounds float* %VFtab, i64 %idxprom436
  %101 = load float* %arrayidx437, align 4, !tbaa !3
  %add438988 = or i32 %mul400, 6
  %idxprom439 = sext i32 %add438988 to i64
  %arrayidx440 = getelementptr inbounds float* %VFtab, i64 %idxprom439
  %102 = load float* %arrayidx440, align 4, !tbaa !3
  %mul441 = fmul float %sub398, %102
  %add442989 = or i32 %mul400, 7
  %idxprom443 = sext i32 %add442989 to i64
  %arrayidx444 = getelementptr inbounds float* %VFtab, i64 %idxprom443
  %103 = load float* %arrayidx444, align 4, !tbaa !3
  %mul445 = fmul float %mul399, %103
  %add446 = fadd float %101, %mul441
  %add447 = fadd float %add446, %mul445
  %mul448 = fmul float %sub398, %add447
  %add449 = fadd float %100, %mul448
  %add450 = fadd float %mul441, %add447
  %mul451 = fmul float %mul445, 2.000000e+00
  %add452 = fadd float %mul451, %add450
  %mul453 = fmul float %95, %add449
  %mul454 = fmul float %95, %add452
  %add455 = fadd float %vnbtot.31038, %mul430
  %add456 = fadd float %add455, %mul453
  %add457 = fadd float %mul431, %mul454
  %mul458 = fmul float %add457, %tabscale
  %104 = fmul float %conv392, %mul458
  %mul460 = fsub float -0.000000e+00, %104
  %mul461 = fmul float %sub381, %mul460
  %mul462 = fmul float %sub382, %mul460
  %mul463 = fmul float %sub383, %mul460
  %add464 = fadd float %fix1.21039, %mul461
  %add465 = fadd float %fiy1.21040, %mul462
  %add466 = fadd float %fiz1.21041, %mul463
  %arrayidx468 = getelementptr inbounds float* %faction, i64 %idxprom373
  %105 = load float* %arrayidx468, align 4, !tbaa !3
  %sub469 = fsub float %105, %mul461
  store float %sub469, float* %arrayidx468, align 4, !tbaa !3
  %arrayidx474 = getelementptr inbounds float* %faction, i64 %idxprom376
  %106 = load float* %arrayidx474, align 4, !tbaa !3
  %sub475 = fsub float %106, %mul462
  store float %sub475, float* %arrayidx474, align 4, !tbaa !3
  %arrayidx481 = getelementptr inbounds float* %faction, i64 %idxprom379
  %107 = load float* %arrayidx481, align 4, !tbaa !3
  %sub482 = fsub float %107, %mul463
  store float %sub482, float* %arrayidx481, align 4, !tbaa !3
  %indvars.iv.next1071 = add i64 %indvars.iv1070, 1
  %108 = trunc i64 %indvars.iv.next1071 to i32
  %cmp367 = icmp slt i32 %108, %10
  br i1 %cmp367, label %for.body369, label %for.end488

for.end488:                                       ; preds = %for.body369, %for.body350
  %fiz1.2.lcssa = phi float [ 0.000000e+00, %for.body350 ], [ %add466, %for.body369 ]
  %fiy1.2.lcssa = phi float [ 0.000000e+00, %for.body350 ], [ %add465, %for.body369 ]
  %fix1.2.lcssa = phi float [ 0.000000e+00, %for.body350 ], [ %add464, %for.body369 ]
  %vnbtot.3.lcssa = phi float [ %vnbtot.21048, %for.body350 ], [ %add456, %for.body369 ]
  %arrayidx490 = getelementptr inbounds float* %faction, i64 %indvars.iv1074
  %109 = load float* %arrayidx490, align 4, !tbaa !3
  %add491 = fadd float %fix1.2.lcssa, %109
  store float %add491, float* %arrayidx490, align 4, !tbaa !3
  %arrayidx496 = getelementptr inbounds float* %faction, i64 %84
  %110 = load float* %arrayidx496, align 4, !tbaa !3
  %add497 = fadd float %fiy1.2.lcssa, %110
  store float %add497, float* %arrayidx496, align 4, !tbaa !3
  %arrayidx503 = getelementptr inbounds float* %faction, i64 %86
  %111 = load float* %arrayidx503, align 4, !tbaa !3
  %add504 = fadd float %fiz1.2.lcssa, %111
  store float %add504, float* %arrayidx503, align 4, !tbaa !3
  %112 = load float* %arrayidx509, align 4, !tbaa !3
  %add510 = fadd float %fix1.2.lcssa, %112
  store float %add510, float* %arrayidx509, align 4, !tbaa !3
  %113 = load float* %arrayidx515, align 4, !tbaa !3
  %add516 = fadd float %fiy1.2.lcssa, %113
  store float %add516, float* %arrayidx515, align 4, !tbaa !3
  %114 = load float* %arrayidx522, align 4, !tbaa !3
  %add523 = fadd float %fiz1.2.lcssa, %114
  store float %add523, float* %arrayidx522, align 4, !tbaa !3
  %indvars.iv.next1073 = add i64 %indvars.iv1072, 1
  %indvars.iv.next1075 = add i64 %indvars.iv1074, 3
  %inc530 = add nsw i32 %s.21049, 1
  %exitcond1078 = icmp eq i32 %inc530, %1
  br i1 %exitcond1078, label %for.end531, label %for.body350

for.end531:                                       ; preds = %for.end488, %for.cond347.loopexit
  %vnbtot.2.lcssa = phi float [ %vnbtot.0.lcssa, %for.cond347.loopexit ], [ %vnbtot.3.lcssa, %for.end488 ]
  %arrayidx533 = getelementptr inbounds i32* %gid, i64 %indvars.iv1079
  %115 = load i32* %arrayidx533, align 4, !tbaa !0
  %idxprom534 = sext i32 %115 to i64
  %arrayidx535 = getelementptr inbounds float* %Vc, i64 %idxprom534
  %116 = load float* %arrayidx535, align 4, !tbaa !3
  %add536 = fadd float %vctot.2.lcssa, %116
  store float %add536, float* %arrayidx535, align 4, !tbaa !3
  %arrayidx540 = getelementptr inbounds float* %Vnb, i64 %idxprom534
  %117 = load float* %arrayidx540, align 4, !tbaa !3
  %add541 = fadd float %vnbtot.2.lcssa, %117
  store float %add541, float* %arrayidx540, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next1080 to i32
  %exitcond1081 = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond1081, label %for.end546, label %for.body

for.end546:                                       ; preds = %for.end531, %entry
  ret void
}
