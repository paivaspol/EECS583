define void @inl3200(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb, float %tabscale, float* nocapture %VFtab) #0 {
entry:
  %cmp331 = icmp sgt i32 %nri, 0
  br i1 %cmp331, label %for.body, label %for.end198

for.body:                                         ; preds = %for.end, %entry
  %indvars.iv333 = phi i64 [ 0, %entry ], [ %indvars.iv.next334, %for.end ]
  %arrayidx = getelementptr inbounds i32* %shift, i64 %indvars.iv333
  %0 = load i32* %arrayidx, align 4, !tbaa !0
  %mul = mul nsw i32 %0, 3
  %idxprom1 = sext i32 %mul to i64
  %arrayidx2 = getelementptr inbounds float* %shiftvec, i64 %idxprom1
  %1 = load float* %arrayidx2, align 4, !tbaa !3
  %add = add nsw i32 %mul, 1
  %idxprom3 = sext i32 %add to i64
  %arrayidx4 = getelementptr inbounds float* %shiftvec, i64 %idxprom3
  %2 = load float* %arrayidx4, align 4, !tbaa !3
  %add5 = add nsw i32 %mul, 2
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds float* %shiftvec, i64 %idxprom6
  %3 = load float* %arrayidx7, align 4, !tbaa !3
  %arrayidx9 = getelementptr inbounds i32* %iinr, i64 %indvars.iv333
  %4 = load i32* %arrayidx9, align 4, !tbaa !0
  %mul10 = mul nsw i32 %4, 3
  %arrayidx12 = getelementptr inbounds i32* %jindex, i64 %indvars.iv333
  %5 = load i32* %arrayidx12, align 4, !tbaa !0
  %indvars.iv.next334 = add i64 %indvars.iv333, 1
  %arrayidx15 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next334
  %6 = load i32* %arrayidx15, align 4, !tbaa !0
  %idxprom16 = sext i32 %mul10 to i64
  %arrayidx17 = getelementptr inbounds float* %pos, i64 %idxprom16
  %7 = load float* %arrayidx17, align 4, !tbaa !3
  %add18 = fadd float %1, %7
  %add19 = add nsw i32 %mul10, 1
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds float* %pos, i64 %idxprom20
  %8 = load float* %arrayidx21, align 4, !tbaa !3
  %add22 = fadd float %2, %8
  %add23 = add nsw i32 %mul10, 2
  %idxprom24 = sext i32 %add23 to i64
  %arrayidx25 = getelementptr inbounds float* %pos, i64 %idxprom24
  %9 = load float* %arrayidx25, align 4, !tbaa !3
  %add26 = fadd float %3, %9
  %idxprom27 = sext i32 %4 to i64
  %arrayidx28 = getelementptr inbounds float* %charge, i64 %idxprom27
  %10 = load float* %arrayidx28, align 4, !tbaa !3
  %mul29 = fmul float %10, %facel
  %arrayidx32 = getelementptr inbounds i32* %type, i64 %idxprom27
  %11 = load i32* %arrayidx32, align 4, !tbaa !0
  %mul33 = mul i32 %11, %ntype
  %cmp35320 = icmp slt i32 %5, %6
  br i1 %cmp35320, label %for.body36.lr.ph, label %for.end

for.body36.lr.ph:                                 ; preds = %for.body
  %12 = sext i32 %5 to i64
  br label %for.body36

for.body36:                                       ; preds = %for.body36.lr.ph, %for.body36
  %indvars.iv = phi i64 [ %12, %for.body36.lr.ph ], [ %indvars.iv.next, %for.body36 ]
  %vctot.0325 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add120, %for.body36 ]
  %vnbtot.0324 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %sub81, %for.body36 ]
  %fix1.0323 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add124, %for.body36 ]
  %fiy1.0322 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add125, %for.body36 ]
  %fiz1.0321 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add126, %for.body36 ]
  %arrayidx38 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %13 = load i32* %arrayidx38, align 4, !tbaa !0
  %mul39 = mul nsw i32 %13, 3
  %idxprom40 = sext i32 %mul39 to i64
  %arrayidx41 = getelementptr inbounds float* %pos, i64 %idxprom40
  %14 = load float* %arrayidx41, align 4, !tbaa !3
  %add42 = add nsw i32 %mul39, 1
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds float* %pos, i64 %idxprom43
  %15 = load float* %arrayidx44, align 4, !tbaa !3
  %add45 = add nsw i32 %mul39, 2
  %idxprom46 = sext i32 %add45 to i64
  %arrayidx47 = getelementptr inbounds float* %pos, i64 %idxprom46
  %16 = load float* %arrayidx47, align 4, !tbaa !3
  %sub = fsub float %add18, %14
  %sub48 = fsub float %add22, %15
  %sub49 = fsub float %add26, %16
  %mul50 = fmul float %sub, %sub
  %mul51 = fmul float %sub48, %sub48
  %add52 = fadd float %mul50, %mul51
  %mul53 = fmul float %sub49, %sub49
  %add54 = fadd float %add52, %mul53
  %conv = fpext float %add54 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv55 = fptrunc double %div to float
  %mul56 = fmul float %add54, %conv55
  %mul57 = fmul float %conv55, %conv55
  %mul58 = fmul float %mul57, %mul57
  %mul59 = fmul float %mul57, %mul58
  %idxprom60 = sext i32 %13 to i64
  %arrayidx61 = getelementptr inbounds i32* %type, i64 %idxprom60
  %17 = load i32* %arrayidx61, align 4, !tbaa !0
  %tmp = add i32 %17, %mul33
  %tmp319 = mul i32 %tmp, 3
  %idxprom64 = sext i32 %tmp319 to i64
  %arrayidx65 = getelementptr inbounds float* %nbfp, i64 %idxprom64
  %18 = load float* %arrayidx65, align 4, !tbaa !3
  %mul66 = fmul float %18, %mul59
  %add67 = add nsw i32 %tmp319, 2
  %idxprom68 = sext i32 %add67 to i64
  %arrayidx69 = getelementptr inbounds float* %nbfp, i64 %idxprom68
  %19 = load float* %arrayidx69, align 4, !tbaa !3
  %mul70 = fmul float %mul56, %19
  %sub71 = fsub float -0.000000e+00, %mul70
  %conv72 = fpext float %sub71 to double
  %call73 = tail call double @exp(double %conv72) #2
  %add74 = add nsw i32 %tmp319, 1
  %idxprom75 = sext i32 %add74 to i64
  %arrayidx76 = getelementptr inbounds float* %nbfp, i64 %idxprom75
  %20 = load float* %arrayidx76, align 4, !tbaa !3
  %conv77 = fpext float %20 to double
  %mul78 = fmul double %call73, %conv77
  %conv79 = fptrunc double %mul78 to float
  %add80 = fadd float %vnbtot.0324, %conv79
  %sub81 = fsub float %add80, %mul66
  %mul82 = fmul float %mul56, %tabscale
  %conv83 = fptosi float %mul82 to i32
  %conv84 = sitofp i32 %conv83 to float
  %sub85 = fsub float %mul82, %conv84
  %mul86 = fmul float %sub85, %sub85
  %mul87 = shl nsw i32 %conv83, 2
  %arrayidx89 = getelementptr inbounds float* %charge, i64 %idxprom60
  %21 = load float* %arrayidx89, align 4, !tbaa !3
  %mul90 = fmul float %mul29, %21
  %idxprom91 = sext i32 %mul87 to i64
  %arrayidx92 = getelementptr inbounds float* %VFtab, i64 %idxprom91
  %22 = load float* %arrayidx92, align 4, !tbaa !3
  %add93316 = or i32 %mul87, 1
  %idxprom94 = sext i32 %add93316 to i64
  %arrayidx95 = getelementptr inbounds float* %VFtab, i64 %idxprom94
  %23 = load float* %arrayidx95, align 4, !tbaa !3
  %add96317 = or i32 %mul87, 2
  %idxprom97 = sext i32 %add96317 to i64
  %arrayidx98 = getelementptr inbounds float* %VFtab, i64 %idxprom97
  %24 = load float* %arrayidx98, align 4, !tbaa !3
  %mul99 = fmul float %sub85, %24
  %add100318 = or i32 %mul87, 3
  %idxprom101 = sext i32 %add100318 to i64
  %arrayidx102 = getelementptr inbounds float* %VFtab, i64 %idxprom101
  %25 = load float* %arrayidx102, align 4, !tbaa !3
  %mul103 = fmul float %mul86, %25
  %add104 = fadd float %23, %mul99
  %add105 = fadd float %add104, %mul103
  %mul106 = fmul float %sub85, %add105
  %add107 = fadd float %22, %mul106
  %add108 = fadd float %mul99, %add105
  %mul109 = fmul float %mul103, 2.000000e+00
  %add110 = fadd float %mul109, %add108
  %mul111 = fmul float %mul90, %add107
  %mul112 = fmul float %mul90, %add110
  %mul113 = fmul float %mul70, %conv79
  %mul114 = fmul float %mul66, 6.000000e+00
  %sub115 = fsub float %mul113, %mul114
  %mul116 = fmul float %conv55, %sub115
  %mul117 = fmul float %mul112, %tabscale
  %sub118 = fsub float %mul116, %mul117
  %mul119 = fmul float %conv55, %sub118
  %add120 = fadd float %vctot.0325, %mul111
  %mul121 = fmul float %sub, %mul119
  %mul122 = fmul float %sub48, %mul119
  %mul123 = fmul float %sub49, %mul119
  %add124 = fadd float %fix1.0323, %mul121
  %add125 = fadd float %fiy1.0322, %mul122
  %add126 = fadd float %fiz1.0321, %mul123
  %arrayidx128 = getelementptr inbounds float* %faction, i64 %idxprom40
  %26 = load float* %arrayidx128, align 4, !tbaa !3
  %sub129 = fsub float %26, %mul121
  store float %sub129, float* %arrayidx128, align 4, !tbaa !3
  %arrayidx134 = getelementptr inbounds float* %faction, i64 %idxprom43
  %27 = load float* %arrayidx134, align 4, !tbaa !3
  %sub135 = fsub float %27, %mul122
  store float %sub135, float* %arrayidx134, align 4, !tbaa !3
  %arrayidx141 = getelementptr inbounds float* %faction, i64 %idxprom46
  %28 = load float* %arrayidx141, align 4, !tbaa !3
  %sub142 = fsub float %28, %mul123
  store float %sub142, float* %arrayidx141, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %29 = trunc i64 %indvars.iv.next to i32
  %cmp35 = icmp slt i32 %29, %6
  br i1 %cmp35, label %for.body36, label %for.end

for.end:                                          ; preds = %for.body36, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add120, %for.body36 ]
  %vnbtot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %sub81, %for.body36 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add124, %for.body36 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add125, %for.body36 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add126, %for.body36 ]
  %arrayidx147 = getelementptr inbounds float* %faction, i64 %idxprom16
  %30 = load float* %arrayidx147, align 4, !tbaa !3
  %add148 = fadd float %fix1.0.lcssa, %30
  store float %add148, float* %arrayidx147, align 4, !tbaa !3
  %arrayidx153 = getelementptr inbounds float* %faction, i64 %idxprom20
  %31 = load float* %arrayidx153, align 4, !tbaa !3
  %add154 = fadd float %fiy1.0.lcssa, %31
  store float %add154, float* %arrayidx153, align 4, !tbaa !3
  %arrayidx160 = getelementptr inbounds float* %faction, i64 %idxprom24
  %32 = load float* %arrayidx160, align 4, !tbaa !3
  %add161 = fadd float %fiz1.0.lcssa, %32
  store float %add161, float* %arrayidx160, align 4, !tbaa !3
  %arrayidx166 = getelementptr inbounds float* %fshift, i64 %idxprom1
  %33 = load float* %arrayidx166, align 4, !tbaa !3
  %add167 = fadd float %fix1.0.lcssa, %33
  store float %add167, float* %arrayidx166, align 4, !tbaa !3
  %arrayidx172 = getelementptr inbounds float* %fshift, i64 %idxprom3
  %34 = load float* %arrayidx172, align 4, !tbaa !3
  %add173 = fadd float %fiy1.0.lcssa, %34
  store float %add173, float* %arrayidx172, align 4, !tbaa !3
  %arrayidx179 = getelementptr inbounds float* %fshift, i64 %idxprom6
  %35 = load float* %arrayidx179, align 4, !tbaa !3
  %add180 = fadd float %fiz1.0.lcssa, %35
  store float %add180, float* %arrayidx179, align 4, !tbaa !3
  %arrayidx185 = getelementptr inbounds i32* %gid, i64 %indvars.iv333
  %36 = load i32* %arrayidx185, align 4, !tbaa !0
  %idxprom186 = sext i32 %36 to i64
  %arrayidx187 = getelementptr inbounds float* %Vc, i64 %idxprom186
  %37 = load float* %arrayidx187, align 4, !tbaa !3
  %add188 = fadd float %vctot.0.lcssa, %37
  store float %add188, float* %arrayidx187, align 4, !tbaa !3
  %arrayidx192 = getelementptr inbounds float* %Vnb, i64 %idxprom186
  %38 = load float* %arrayidx192, align 4, !tbaa !3
  %add193 = fadd float %vnbtot.0.lcssa, %38
  store float %add193, float* %arrayidx192, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next334 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end198, label %for.body

for.end198:                                       ; preds = %for.end, %entry
  ret void
}
