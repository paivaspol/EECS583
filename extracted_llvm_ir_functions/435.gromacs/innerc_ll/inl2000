define void @inl2000(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, float %krf, float %crf) #0 {
entry:
  %cmp232 = icmp sgt i32 %nri, 0
  br i1 %cmp232, label %for.body, label %for.end137

for.body:                                         ; preds = %for.end, %entry
  %indvars.iv234 = phi i64 [ 0, %entry ], [ %indvars.iv.next235, %for.end ]
  %arrayidx = getelementptr inbounds i32* %shift, i64 %indvars.iv234
  %0 = load i32* %arrayidx, align 4, !tbaa !0
  %mul = mul nsw i32 %0, 3
  %idxprom1 = sext i32 %mul to i64
  %arrayidx2 = getelementptr inbounds float* %shiftvec, i64 %idxprom1
  %1 = load float* %arrayidx2, align 4, !tbaa !3
  %add = add nsw i32 %mul, 1
  %idxprom3 = sext i32 %add to i64
  %arrayidx4 = getelementptr inbounds float* %shiftvec, i64 %idxprom3
  %2 = load float* %arrayidx4, align 4, !tbaa !3
  %add5 = add nsw i32 %mul, 2
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds float* %shiftvec, i64 %idxprom6
  %3 = load float* %arrayidx7, align 4, !tbaa !3
  %arrayidx9 = getelementptr inbounds i32* %iinr, i64 %indvars.iv234
  %4 = load i32* %arrayidx9, align 4, !tbaa !0
  %mul10 = mul nsw i32 %4, 3
  %arrayidx12 = getelementptr inbounds i32* %jindex, i64 %indvars.iv234
  %5 = load i32* %arrayidx12, align 4, !tbaa !0
  %indvars.iv.next235 = add i64 %indvars.iv234, 1
  %arrayidx15 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next235
  %6 = load i32* %arrayidx15, align 4, !tbaa !0
  %idxprom16 = sext i32 %mul10 to i64
  %arrayidx17 = getelementptr inbounds float* %pos, i64 %idxprom16
  %7 = load float* %arrayidx17, align 4, !tbaa !3
  %add18 = fadd float %1, %7
  %add19 = add nsw i32 %mul10, 1
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds float* %pos, i64 %idxprom20
  %8 = load float* %arrayidx21, align 4, !tbaa !3
  %add22 = fadd float %2, %8
  %add23 = add nsw i32 %mul10, 2
  %idxprom24 = sext i32 %add23 to i64
  %arrayidx25 = getelementptr inbounds float* %pos, i64 %idxprom24
  %9 = load float* %arrayidx25, align 4, !tbaa !3
  %add26 = fadd float %3, %9
  %idxprom27 = sext i32 %4 to i64
  %arrayidx28 = getelementptr inbounds float* %charge, i64 %idxprom27
  %10 = load float* %arrayidx28, align 4, !tbaa !3
  %mul29 = fmul float %10, %facel
  %cmp31223 = icmp slt i32 %5, %6
  br i1 %cmp31223, label %for.body32.lr.ph, label %for.end

for.body32.lr.ph:                                 ; preds = %for.body
  %11 = sext i32 %5 to i64
  br label %for.body32

for.body32:                                       ; preds = %for.body32.lr.ph, %for.body32
  %indvars.iv = phi i64 [ %11, %for.body32.lr.ph ], [ %indvars.iv.next, %for.body32 ]
  %vctot.0227 = phi float [ 0.000000e+00, %for.body32.lr.ph ], [ %add64, %for.body32 ]
  %fix1.0226 = phi float [ 0.000000e+00, %for.body32.lr.ph ], [ %add68, %for.body32 ]
  %fiy1.0225 = phi float [ 0.000000e+00, %for.body32.lr.ph ], [ %add69, %for.body32 ]
  %fiz1.0224 = phi float [ 0.000000e+00, %for.body32.lr.ph ], [ %add70, %for.body32 ]
  %arrayidx34 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %12 = load i32* %arrayidx34, align 4, !tbaa !0
  %mul35 = mul nsw i32 %12, 3
  %idxprom36 = sext i32 %mul35 to i64
  %arrayidx37 = getelementptr inbounds float* %pos, i64 %idxprom36
  %13 = load float* %arrayidx37, align 4, !tbaa !3
  %add38 = add nsw i32 %mul35, 1
  %idxprom39 = sext i32 %add38 to i64
  %arrayidx40 = getelementptr inbounds float* %pos, i64 %idxprom39
  %14 = load float* %arrayidx40, align 4, !tbaa !3
  %add41 = add nsw i32 %mul35, 2
  %idxprom42 = sext i32 %add41 to i64
  %arrayidx43 = getelementptr inbounds float* %pos, i64 %idxprom42
  %15 = load float* %arrayidx43, align 4, !tbaa !3
  %sub = fsub float %add18, %13
  %sub44 = fsub float %add22, %14
  %sub45 = fsub float %add26, %15
  %mul46 = fmul float %sub, %sub
  %mul47 = fmul float %sub44, %sub44
  %add48 = fadd float %mul46, %mul47
  %mul49 = fmul float %sub45, %sub45
  %add50 = fadd float %add48, %mul49
  %conv = fpext float %add50 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv51 = fptrunc double %div to float
  %mul52 = fmul float %conv51, %conv51
  %idxprom53 = sext i32 %12 to i64
  %arrayidx54 = getelementptr inbounds float* %charge, i64 %idxprom53
  %16 = load float* %arrayidx54, align 4, !tbaa !3
  %mul55 = fmul float %mul29, %16
  %mul56 = fmul float %add50, %krf
  %add57 = fadd float %conv51, %mul56
  %sub58 = fsub float %add57, %crf
  %mul59 = fmul float %mul55, %sub58
  %mul60 = fmul float %mul56, 2.000000e+00
  %sub61 = fsub float %conv51, %mul60
  %mul62 = fmul float %mul55, %sub61
  %mul63 = fmul float %mul52, %mul62
  %add64 = fadd float %vctot.0227, %mul59
  %mul65 = fmul float %sub, %mul63
  %mul66 = fmul float %sub44, %mul63
  %mul67 = fmul float %sub45, %mul63
  %add68 = fadd float %fix1.0226, %mul65
  %add69 = fadd float %fiy1.0225, %mul66
  %add70 = fadd float %fiz1.0224, %mul67
  %arrayidx72 = getelementptr inbounds float* %faction, i64 %idxprom36
  %17 = load float* %arrayidx72, align 4, !tbaa !3
  %sub73 = fsub float %17, %mul65
  store float %sub73, float* %arrayidx72, align 4, !tbaa !3
  %arrayidx78 = getelementptr inbounds float* %faction, i64 %idxprom39
  %18 = load float* %arrayidx78, align 4, !tbaa !3
  %sub79 = fsub float %18, %mul66
  store float %sub79, float* %arrayidx78, align 4, !tbaa !3
  %arrayidx85 = getelementptr inbounds float* %faction, i64 %idxprom42
  %19 = load float* %arrayidx85, align 4, !tbaa !3
  %sub86 = fsub float %19, %mul67
  store float %sub86, float* %arrayidx85, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %20 = trunc i64 %indvars.iv.next to i32
  %cmp31 = icmp slt i32 %20, %6
  br i1 %cmp31, label %for.body32, label %for.end

for.end:                                          ; preds = %for.body32, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add64, %for.body32 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add68, %for.body32 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add69, %for.body32 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add70, %for.body32 ]
  %arrayidx91 = getelementptr inbounds float* %faction, i64 %idxprom16
  %21 = load float* %arrayidx91, align 4, !tbaa !3
  %add92 = fadd float %fix1.0.lcssa, %21
  store float %add92, float* %arrayidx91, align 4, !tbaa !3
  %arrayidx97 = getelementptr inbounds float* %faction, i64 %idxprom20
  %22 = load float* %arrayidx97, align 4, !tbaa !3
  %add98 = fadd float %fiy1.0.lcssa, %22
  store float %add98, float* %arrayidx97, align 4, !tbaa !3
  %arrayidx104 = getelementptr inbounds float* %faction, i64 %idxprom24
  %23 = load float* %arrayidx104, align 4, !tbaa !3
  %add105 = fadd float %fiz1.0.lcssa, %23
  store float %add105, float* %arrayidx104, align 4, !tbaa !3
  %arrayidx110 = getelementptr inbounds float* %fshift, i64 %idxprom1
  %24 = load float* %arrayidx110, align 4, !tbaa !3
  %add111 = fadd float %fix1.0.lcssa, %24
  store float %add111, float* %arrayidx110, align 4, !tbaa !3
  %arrayidx116 = getelementptr inbounds float* %fshift, i64 %idxprom3
  %25 = load float* %arrayidx116, align 4, !tbaa !3
  %add117 = fadd float %fiy1.0.lcssa, %25
  store float %add117, float* %arrayidx116, align 4, !tbaa !3
  %arrayidx123 = getelementptr inbounds float* %fshift, i64 %idxprom6
  %26 = load float* %arrayidx123, align 4, !tbaa !3
  %add124 = fadd float %fiz1.0.lcssa, %26
  store float %add124, float* %arrayidx123, align 4, !tbaa !3
  %arrayidx129 = getelementptr inbounds i32* %gid, i64 %indvars.iv234
  %27 = load i32* %arrayidx129, align 4, !tbaa !0
  %idxprom130 = sext i32 %27 to i64
  %arrayidx131 = getelementptr inbounds float* %Vc, i64 %idxprom130
  %28 = load float* %arrayidx131, align 4, !tbaa !3
  %add132 = fadd float %vctot.0.lcssa, %28
  store float %add132, float* %arrayidx131, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next235 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end137, label %for.body

for.end137:                                       ; preds = %for.end, %entry
  ret void
}
