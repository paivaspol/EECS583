define void @inl2400(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, float %krf, float %crf, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb, float %tabscale, float* nocapture %VFtab, float %exptabscale) #0 {
entry:
  %cmp393 = icmp sgt i32 %nri, 0
  br i1 %cmp393, label %for.body, label %for.end225

for.body:                                         ; preds = %for.end, %entry
  %indvars.iv395 = phi i64 [ 0, %entry ], [ %indvars.iv.next396, %for.end ]
  %arrayidx = getelementptr inbounds i32* %shift, i64 %indvars.iv395
  %0 = load i32* %arrayidx, align 4, !tbaa !0
  %mul = mul nsw i32 %0, 3
  %idxprom1 = sext i32 %mul to i64
  %arrayidx2 = getelementptr inbounds float* %shiftvec, i64 %idxprom1
  %1 = load float* %arrayidx2, align 4, !tbaa !3
  %add = add nsw i32 %mul, 1
  %idxprom3 = sext i32 %add to i64
  %arrayidx4 = getelementptr inbounds float* %shiftvec, i64 %idxprom3
  %2 = load float* %arrayidx4, align 4, !tbaa !3
  %add5 = add nsw i32 %mul, 2
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds float* %shiftvec, i64 %idxprom6
  %3 = load float* %arrayidx7, align 4, !tbaa !3
  %arrayidx9 = getelementptr inbounds i32* %iinr, i64 %indvars.iv395
  %4 = load i32* %arrayidx9, align 4, !tbaa !0
  %mul10 = mul nsw i32 %4, 3
  %arrayidx12 = getelementptr inbounds i32* %jindex, i64 %indvars.iv395
  %5 = load i32* %arrayidx12, align 4, !tbaa !0
  %indvars.iv.next396 = add i64 %indvars.iv395, 1
  %arrayidx15 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next396
  %6 = load i32* %arrayidx15, align 4, !tbaa !0
  %idxprom16 = sext i32 %mul10 to i64
  %arrayidx17 = getelementptr inbounds float* %pos, i64 %idxprom16
  %7 = load float* %arrayidx17, align 4, !tbaa !3
  %add18 = fadd float %1, %7
  %add19 = add nsw i32 %mul10, 1
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds float* %pos, i64 %idxprom20
  %8 = load float* %arrayidx21, align 4, !tbaa !3
  %add22 = fadd float %2, %8
  %add23 = add nsw i32 %mul10, 2
  %idxprom24 = sext i32 %add23 to i64
  %arrayidx25 = getelementptr inbounds float* %pos, i64 %idxprom24
  %9 = load float* %arrayidx25, align 4, !tbaa !3
  %add26 = fadd float %3, %9
  %idxprom27 = sext i32 %4 to i64
  %arrayidx28 = getelementptr inbounds float* %charge, i64 %idxprom27
  %10 = load float* %arrayidx28, align 4, !tbaa !3
  %mul29 = fmul float %10, %facel
  %arrayidx32 = getelementptr inbounds i32* %type, i64 %idxprom27
  %11 = load i32* %arrayidx32, align 4, !tbaa !0
  %mul33 = mul i32 %11, %ntype
  %cmp35382 = icmp slt i32 %5, %6
  br i1 %cmp35382, label %for.body36.lr.ph, label %for.end

for.body36.lr.ph:                                 ; preds = %for.body
  %12 = sext i32 %5 to i64
  br label %for.body36

for.body36:                                       ; preds = %for.body36.lr.ph, %for.body36
  %indvars.iv = phi i64 [ %12, %for.body36.lr.ph ], [ %indvars.iv.next, %for.body36 ]
  %vctot.0387 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add147, %for.body36 ]
  %vnbtot.0386 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add130, %for.body36 ]
  %fix1.0385 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add151, %for.body36 ]
  %fiy1.0384 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add152, %for.body36 ]
  %fiz1.0383 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add153, %for.body36 ]
  %arrayidx38 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %13 = load i32* %arrayidx38, align 4, !tbaa !0
  %mul39 = mul nsw i32 %13, 3
  %idxprom40 = sext i32 %mul39 to i64
  %arrayidx41 = getelementptr inbounds float* %pos, i64 %idxprom40
  %14 = load float* %arrayidx41, align 4, !tbaa !3
  %add42 = add nsw i32 %mul39, 1
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds float* %pos, i64 %idxprom43
  %15 = load float* %arrayidx44, align 4, !tbaa !3
  %add45 = add nsw i32 %mul39, 2
  %idxprom46 = sext i32 %add45 to i64
  %arrayidx47 = getelementptr inbounds float* %pos, i64 %idxprom46
  %16 = load float* %arrayidx47, align 4, !tbaa !3
  %sub = fsub float %add18, %14
  %sub48 = fsub float %add22, %15
  %sub49 = fsub float %add26, %16
  %mul50 = fmul float %sub, %sub
  %mul51 = fmul float %sub48, %sub48
  %add52 = fadd float %mul50, %mul51
  %mul53 = fmul float %sub49, %sub49
  %add54 = fadd float %add52, %mul53
  %conv = fpext float %add54 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv55 = fptrunc double %div to float
  %mul56 = fmul float %add54, %conv55
  %mul58 = fmul float %mul56, %tabscale
  %conv59 = fptosi float %mul58 to i32
  %conv60 = sitofp i32 %conv59 to float
  %sub61 = fsub float %mul58, %conv60
  %mul62 = fmul float %sub61, %sub61
  %mul63 = shl nsw i32 %conv59, 3
  %idxprom64 = sext i32 %13 to i64
  %arrayidx65 = getelementptr inbounds i32* %type, i64 %idxprom64
  %17 = load i32* %arrayidx65, align 4, !tbaa !0
  %tmp = add i32 %17, %mul33
  %tmp381 = mul i32 %tmp, 3
  %idxprom68 = sext i32 %tmp381 to i64
  %arrayidx69 = getelementptr inbounds float* %nbfp, i64 %idxprom68
  %18 = load float* %arrayidx69, align 4, !tbaa !3
  %add70 = add nsw i32 %tmp381, 1
  %idxprom71 = sext i32 %add70 to i64
  %arrayidx72 = getelementptr inbounds float* %nbfp, i64 %idxprom71
  %19 = load float* %arrayidx72, align 4, !tbaa !3
  %add73 = add nsw i32 %tmp381, 2
  %idxprom74 = sext i32 %add73 to i64
  %arrayidx75 = getelementptr inbounds float* %nbfp, i64 %idxprom74
  %20 = load float* %arrayidx75, align 4, !tbaa !3
  %idxprom76 = sext i32 %mul63 to i64
  %arrayidx77 = getelementptr inbounds float* %VFtab, i64 %idxprom76
  %21 = load float* %arrayidx77, align 4, !tbaa !3
  %add78374 = or i32 %mul63, 1
  %idxprom79 = sext i32 %add78374 to i64
  %arrayidx80 = getelementptr inbounds float* %VFtab, i64 %idxprom79
  %22 = load float* %arrayidx80, align 4, !tbaa !3
  %add81375 = or i32 %mul63, 2
  %idxprom82 = sext i32 %add81375 to i64
  %arrayidx83 = getelementptr inbounds float* %VFtab, i64 %idxprom82
  %23 = load float* %arrayidx83, align 4, !tbaa !3
  %mul84 = fmul float %sub61, %23
  %add85376 = or i32 %mul63, 3
  %idxprom86 = sext i32 %add85376 to i64
  %arrayidx87 = getelementptr inbounds float* %VFtab, i64 %idxprom86
  %24 = load float* %arrayidx87, align 4, !tbaa !3
  %mul88 = fmul float %mul62, %24
  %add89 = fadd float %22, %mul84
  %add90 = fadd float %add89, %mul88
  %mul91 = fmul float %sub61, %add90
  %add92 = fadd float %21, %mul91
  %add93 = fadd float %mul84, %add90
  %mul94 = fmul float %mul88, 2.000000e+00
  %add95 = fadd float %mul94, %add93
  %mul96 = fmul float %18, %add92
  %mul97 = fmul float %18, %add95
  %mul98 = fmul float %mul56, %20
  %mul99 = fmul float %mul98, %exptabscale
  %conv100 = fptosi float %mul99 to i32
  %conv101 = sitofp i32 %conv100 to float
  %sub102 = fsub float %mul99, %conv101
  %mul103 = fmul float %sub102, %sub102
  %mul104 = shl nsw i32 %conv100, 3
  %add105377 = or i32 %mul104, 4
  %idxprom106 = sext i32 %add105377 to i64
  %arrayidx107 = getelementptr inbounds float* %VFtab, i64 %idxprom106
  %25 = load float* %arrayidx107, align 4, !tbaa !3
  %add108378 = or i32 %mul104, 5
  %idxprom109 = sext i32 %add108378 to i64
  %arrayidx110 = getelementptr inbounds float* %VFtab, i64 %idxprom109
  %26 = load float* %arrayidx110, align 4, !tbaa !3
  %add111379 = or i32 %mul104, 6
  %idxprom112 = sext i32 %add111379 to i64
  %arrayidx113 = getelementptr inbounds float* %VFtab, i64 %idxprom112
  %27 = load float* %arrayidx113, align 4, !tbaa !3
  %mul114 = fmul float %sub102, %27
  %add115380 = or i32 %mul104, 7
  %idxprom116 = sext i32 %add115380 to i64
  %arrayidx117 = getelementptr inbounds float* %VFtab, i64 %idxprom116
  %28 = load float* %arrayidx117, align 4, !tbaa !3
  %mul118 = fmul float %mul103, %28
  %add119 = fadd float %26, %mul114
  %add120 = fadd float %add119, %mul118
  %mul121 = fmul float %sub102, %add120
  %add122 = fadd float %25, %mul121
  %add123 = fadd float %mul114, %add120
  %mul124 = fmul float %mul118, 2.000000e+00
  %add125 = fadd float %mul124, %add123
  %mul126 = fmul float %19, %add122
  %mul127 = fmul float %19, %20
  %mul128 = fmul float %mul127, %add125
  %add129 = fadd float %vnbtot.0386, %mul96
  %add130 = fadd float %add129, %mul126
  %arrayidx132 = getelementptr inbounds float* %charge, i64 %idxprom64
  %29 = load float* %arrayidx132, align 4, !tbaa !3
  %mul133 = fmul float %mul29, %29
  %mul134 = fmul float %add54, %krf
  %add135 = fadd float %conv55, %mul134
  %sub136 = fsub float %add135, %crf
  %mul137 = fmul float %sub136, %mul133
  %mul138 = fmul float %mul134, 2.000000e+00
  %sub139 = fsub float %conv55, %mul138
  %mul140 = fmul float %sub139, %mul133
  %mul141 = fmul float %conv55, %mul140
  %mul142 = fmul float %mul97, %tabscale
  %mul143 = fmul float %mul128, %exptabscale
  %add144 = fadd float %mul142, %mul143
  %sub145 = fsub float %mul141, %add144
  %mul146 = fmul float %conv55, %sub145
  %add147 = fadd float %vctot.0387, %mul137
  %mul148 = fmul float %sub, %mul146
  %mul149 = fmul float %sub48, %mul146
  %mul150 = fmul float %sub49, %mul146
  %add151 = fadd float %fix1.0385, %mul148
  %add152 = fadd float %fiy1.0384, %mul149
  %add153 = fadd float %fiz1.0383, %mul150
  %arrayidx155 = getelementptr inbounds float* %faction, i64 %idxprom40
  %30 = load float* %arrayidx155, align 4, !tbaa !3
  %sub156 = fsub float %30, %mul148
  store float %sub156, float* %arrayidx155, align 4, !tbaa !3
  %arrayidx161 = getelementptr inbounds float* %faction, i64 %idxprom43
  %31 = load float* %arrayidx161, align 4, !tbaa !3
  %sub162 = fsub float %31, %mul149
  store float %sub162, float* %arrayidx161, align 4, !tbaa !3
  %arrayidx168 = getelementptr inbounds float* %faction, i64 %idxprom46
  %32 = load float* %arrayidx168, align 4, !tbaa !3
  %sub169 = fsub float %32, %mul150
  store float %sub169, float* %arrayidx168, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %33 = trunc i64 %indvars.iv.next to i32
  %cmp35 = icmp slt i32 %33, %6
  br i1 %cmp35, label %for.body36, label %for.end

for.end:                                          ; preds = %for.body36, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add147, %for.body36 ]
  %vnbtot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add130, %for.body36 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add151, %for.body36 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add152, %for.body36 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add153, %for.body36 ]
  %arrayidx174 = getelementptr inbounds float* %faction, i64 %idxprom16
  %34 = load float* %arrayidx174, align 4, !tbaa !3
  %add175 = fadd float %fix1.0.lcssa, %34
  store float %add175, float* %arrayidx174, align 4, !tbaa !3
  %arrayidx180 = getelementptr inbounds float* %faction, i64 %idxprom20
  %35 = load float* %arrayidx180, align 4, !tbaa !3
  %add181 = fadd float %fiy1.0.lcssa, %35
  store float %add181, float* %arrayidx180, align 4, !tbaa !3
  %arrayidx187 = getelementptr inbounds float* %faction, i64 %idxprom24
  %36 = load float* %arrayidx187, align 4, !tbaa !3
  %add188 = fadd float %fiz1.0.lcssa, %36
  store float %add188, float* %arrayidx187, align 4, !tbaa !3
  %arrayidx193 = getelementptr inbounds float* %fshift, i64 %idxprom1
  %37 = load float* %arrayidx193, align 4, !tbaa !3
  %add194 = fadd float %fix1.0.lcssa, %37
  store float %add194, float* %arrayidx193, align 4, !tbaa !3
  %arrayidx199 = getelementptr inbounds float* %fshift, i64 %idxprom3
  %38 = load float* %arrayidx199, align 4, !tbaa !3
  %add200 = fadd float %fiy1.0.lcssa, %38
  store float %add200, float* %arrayidx199, align 4, !tbaa !3
  %arrayidx206 = getelementptr inbounds float* %fshift, i64 %idxprom6
  %39 = load float* %arrayidx206, align 4, !tbaa !3
  %add207 = fadd float %fiz1.0.lcssa, %39
  store float %add207, float* %arrayidx206, align 4, !tbaa !3
  %arrayidx212 = getelementptr inbounds i32* %gid, i64 %indvars.iv395
  %40 = load i32* %arrayidx212, align 4, !tbaa !0
  %idxprom213 = sext i32 %40 to i64
  %arrayidx214 = getelementptr inbounds float* %Vc, i64 %idxprom213
  %41 = load float* %arrayidx214, align 4, !tbaa !3
  %add215 = fadd float %vctot.0.lcssa, %41
  store float %add215, float* %arrayidx214, align 4, !tbaa !3
  %arrayidx219 = getelementptr inbounds float* %Vnb, i64 %idxprom213
  %42 = load float* %arrayidx219, align 4, !tbaa !3
  %add220 = fadd float %vnbtot.0.lcssa, %42
  store float %add220, float* %arrayidx219, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next396 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end225, label %for.body

for.end225:                                       ; preds = %for.end, %entry
  ret void
}
