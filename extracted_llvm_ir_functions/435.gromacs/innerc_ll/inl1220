define void @inl1220(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb) #0 {
entry:
  %0 = load i32* %iinr, align 4, !tbaa !0
  %idxprom = sext i32 %0 to i64
  %arrayidx1 = getelementptr inbounds float* %charge, i64 %idxprom
  %1 = load float* %arrayidx1, align 4, !tbaa !3
  %add = add nsw i32 %0, 1
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds float* %charge, i64 %idxprom2
  %2 = load float* %arrayidx3, align 4, !tbaa !3
  %mul = fmul float %1, %facel
  %mul4 = fmul float %2, %facel
  %arrayidx7 = getelementptr inbounds i32* %type, i64 %idxprom
  %3 = load i32* %arrayidx7, align 4, !tbaa !0
  %mul8 = mul i32 %3, %ntype
  %cmp536 = icmp sgt i32 %nri, 0
  br i1 %cmp536, label %for.body, label %for.end302

for.body:                                         ; preds = %entry, %for.end.for.body_crit_edge
  %4 = phi i32 [ %.pre, %for.end.for.body_crit_edge ], [ %0, %entry ]
  %indvars.iv538 = phi i64 [ %indvars.iv.next539, %for.end.for.body_crit_edge ], [ 0, %entry ]
  %arrayidx10 = getelementptr inbounds i32* %shift, i64 %indvars.iv538
  %5 = load i32* %arrayidx10, align 4, !tbaa !0
  %mul11 = mul nsw i32 %5, 3
  %idxprom12 = sext i32 %mul11 to i64
  %arrayidx13 = getelementptr inbounds float* %shiftvec, i64 %idxprom12
  %6 = load float* %arrayidx13, align 4, !tbaa !3
  %add14 = add nsw i32 %mul11, 1
  %idxprom15 = sext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds float* %shiftvec, i64 %idxprom15
  %7 = load float* %arrayidx16, align 4, !tbaa !3
  %add17 = add nsw i32 %mul11, 2
  %idxprom18 = sext i32 %add17 to i64
  %arrayidx19 = getelementptr inbounds float* %shiftvec, i64 %idxprom18
  %8 = load float* %arrayidx19, align 4, !tbaa !3
  %mul22 = mul nsw i32 %4, 3
  %arrayidx24 = getelementptr inbounds i32* %jindex, i64 %indvars.iv538
  %9 = load i32* %arrayidx24, align 4, !tbaa !0
  %indvars.iv.next539 = add i64 %indvars.iv538, 1
  %arrayidx27 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next539
  %10 = load i32* %arrayidx27, align 4, !tbaa !0
  %idxprom28 = sext i32 %mul22 to i64
  %arrayidx29 = getelementptr inbounds float* %pos, i64 %idxprom28
  %11 = load float* %arrayidx29, align 4, !tbaa !3
  %add30 = fadd float %6, %11
  %add31 = add nsw i32 %mul22, 1
  %idxprom32 = sext i32 %add31 to i64
  %arrayidx33 = getelementptr inbounds float* %pos, i64 %idxprom32
  %12 = load float* %arrayidx33, align 4, !tbaa !3
  %add34 = fadd float %7, %12
  %add35 = add nsw i32 %mul22, 2
  %idxprom36 = sext i32 %add35 to i64
  %arrayidx37 = getelementptr inbounds float* %pos, i64 %idxprom36
  %13 = load float* %arrayidx37, align 4, !tbaa !3
  %add38 = fadd float %8, %13
  %add39 = add nsw i32 %mul22, 3
  %idxprom40 = sext i32 %add39 to i64
  %arrayidx41 = getelementptr inbounds float* %pos, i64 %idxprom40
  %14 = load float* %arrayidx41, align 4, !tbaa !3
  %add42 = fadd float %6, %14
  %add43 = add nsw i32 %mul22, 4
  %idxprom44 = sext i32 %add43 to i64
  %arrayidx45 = getelementptr inbounds float* %pos, i64 %idxprom44
  %15 = load float* %arrayidx45, align 4, !tbaa !3
  %add46 = fadd float %7, %15
  %add47 = add nsw i32 %mul22, 5
  %idxprom48 = sext i32 %add47 to i64
  %arrayidx49 = getelementptr inbounds float* %pos, i64 %idxprom48
  %16 = load float* %arrayidx49, align 4, !tbaa !3
  %add50 = fadd float %8, %16
  %add51 = add nsw i32 %mul22, 6
  %idxprom52 = sext i32 %add51 to i64
  %arrayidx53 = getelementptr inbounds float* %pos, i64 %idxprom52
  %17 = load float* %arrayidx53, align 4, !tbaa !3
  %add54 = fadd float %6, %17
  %add55 = add nsw i32 %mul22, 7
  %idxprom56 = sext i32 %add55 to i64
  %arrayidx57 = getelementptr inbounds float* %pos, i64 %idxprom56
  %18 = load float* %arrayidx57, align 4, !tbaa !3
  %add58 = fadd float %7, %18
  %add59 = add nsw i32 %mul22, 8
  %idxprom60 = sext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds float* %pos, i64 %idxprom60
  %19 = load float* %arrayidx61, align 4, !tbaa !3
  %add62 = fadd float %8, %19
  %cmp64513 = icmp slt i32 %9, %10
  br i1 %cmp64513, label %for.body65.lr.ph, label %for.end

for.body65.lr.ph:                                 ; preds = %for.body
  %20 = sext i32 %9 to i64
  br label %for.body65

for.body65:                                       ; preds = %for.body65.lr.ph, %for.body65
  %indvars.iv = phi i64 [ %20, %for.body65.lr.ph ], [ %indvars.iv.next, %for.body65 ]
  %vctot.0524 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add184, %for.body65 ]
  %vnbtot.0523 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %sub134, %for.body65 ]
  %fix1.0522 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add148, %for.body65 ]
  %fiy1.0521 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add149, %for.body65 ]
  %fiz1.0520 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add150, %for.body65 ]
  %fix2.0519 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add172, %for.body65 ]
  %fiy2.0518 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add173, %for.body65 ]
  %fiz2.0517 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add174, %for.body65 ]
  %fix3.0516 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add188, %for.body65 ]
  %fiy3.0515 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add189, %for.body65 ]
  %fiz3.0514 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add190, %for.body65 ]
  %arrayidx67 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %21 = load i32* %arrayidx67, align 4, !tbaa !0
  %mul68 = mul nsw i32 %21, 3
  %idxprom69 = sext i32 %mul68 to i64
  %arrayidx70 = getelementptr inbounds float* %pos, i64 %idxprom69
  %22 = load float* %arrayidx70, align 4, !tbaa !3
  %add71 = add nsw i32 %mul68, 1
  %idxprom72 = sext i32 %add71 to i64
  %arrayidx73 = getelementptr inbounds float* %pos, i64 %idxprom72
  %23 = load float* %arrayidx73, align 4, !tbaa !3
  %add74 = add nsw i32 %mul68, 2
  %idxprom75 = sext i32 %add74 to i64
  %arrayidx76 = getelementptr inbounds float* %pos, i64 %idxprom75
  %24 = load float* %arrayidx76, align 4, !tbaa !3
  %sub = fsub float %add30, %22
  %sub77 = fsub float %add34, %23
  %sub78 = fsub float %add38, %24
  %mul79 = fmul float %sub, %sub
  %mul80 = fmul float %sub77, %sub77
  %add81 = fadd float %mul79, %mul80
  %mul82 = fmul float %sub78, %sub78
  %add83 = fadd float %add81, %mul82
  %sub84 = fsub float %add42, %22
  %sub85 = fsub float %add46, %23
  %sub86 = fsub float %add50, %24
  %mul87 = fmul float %sub84, %sub84
  %mul88 = fmul float %sub85, %sub85
  %add89 = fadd float %mul87, %mul88
  %mul90 = fmul float %sub86, %sub86
  %add91 = fadd float %add89, %mul90
  %sub92 = fsub float %add54, %22
  %sub93 = fsub float %add58, %23
  %sub94 = fsub float %add62, %24
  %mul95 = fmul float %sub92, %sub92
  %mul96 = fmul float %sub93, %sub93
  %add97 = fadd float %mul95, %mul96
  %mul98 = fmul float %sub94, %sub94
  %add99 = fadd float %add97, %mul98
  %conv = fpext float %add83 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv100 = fptrunc double %div to float
  %conv101 = fpext float %add91 to double
  %call102 = tail call double @sqrt(double %conv101) #2
  %div103 = fdiv double 1.000000e+00, %call102
  %conv104 = fptrunc double %div103 to float
  %conv105 = fpext float %add99 to double
  %call106 = tail call double @sqrt(double %conv105) #2
  %div107 = fdiv double 1.000000e+00, %call106
  %conv108 = fptrunc double %div107 to float
  %mul109 = fmul float %add83, %conv100
  %mul110 = fmul float %conv100, %conv100
  %mul111 = fmul float %mul110, %mul110
  %mul112 = fmul float %mul110, %mul111
  %idxprom113 = sext i32 %21 to i64
  %arrayidx114 = getelementptr inbounds i32* %type, i64 %idxprom113
  %25 = load i32* %arrayidx114, align 4, !tbaa !0
  %tmp = add i32 %25, %mul8
  %tmp512 = mul i32 %tmp, 3
  %idxprom117 = sext i32 %tmp512 to i64
  %arrayidx118 = getelementptr inbounds float* %nbfp, i64 %idxprom117
  %26 = load float* %arrayidx118, align 4, !tbaa !3
  %mul119 = fmul float %mul112, %26
  %add120 = add nsw i32 %tmp512, 2
  %idxprom121 = sext i32 %add120 to i64
  %arrayidx122 = getelementptr inbounds float* %nbfp, i64 %idxprom121
  %27 = load float* %arrayidx122, align 4, !tbaa !3
  %mul123 = fmul float %mul109, %27
  %sub124 = fsub float -0.000000e+00, %mul123
  %conv125 = fpext float %sub124 to double
  %call126 = tail call double @exp(double %conv125) #2
  %add127 = add nsw i32 %tmp512, 1
  %idxprom128 = sext i32 %add127 to i64
  %arrayidx129 = getelementptr inbounds float* %nbfp, i64 %idxprom128
  %28 = load float* %arrayidx129, align 4, !tbaa !3
  %conv130 = fpext float %28 to double
  %mul131 = fmul double %call126, %conv130
  %conv132 = fptrunc double %mul131 to float
  %add133 = fadd float %vnbtot.0523, %conv132
  %sub134 = fsub float %add133, %mul119
  %arrayidx136 = getelementptr inbounds float* %charge, i64 %idxprom113
  %29 = load float* %arrayidx136, align 4, !tbaa !3
  %mul137 = fmul float %mul, %29
  %mul138 = fmul float %conv100, %mul137
  %mul139 = fmul float %mul123, %conv132
  %mul140 = fmul float %mul119, 6.000000e+00
  %sub141 = fsub float %mul139, %mul140
  %add142 = fadd float %mul138, %sub141
  %mul143 = fmul float %mul110, %add142
  %add144 = fadd float %vctot.0524, %mul138
  %mul145 = fmul float %sub, %mul143
  %mul146 = fmul float %sub77, %mul143
  %mul147 = fmul float %sub78, %mul143
  %add148 = fadd float %fix1.0522, %mul145
  %add149 = fadd float %fiy1.0521, %mul146
  %add150 = fadd float %fiz1.0520, %mul147
  %arrayidx152 = getelementptr inbounds float* %faction, i64 %idxprom69
  %30 = load float* %arrayidx152, align 4, !tbaa !3
  %sub153 = fsub float %30, %mul145
  %arrayidx156 = getelementptr inbounds float* %faction, i64 %idxprom72
  %31 = load float* %arrayidx156, align 4, !tbaa !3
  %sub157 = fsub float %31, %mul146
  %arrayidx160 = getelementptr inbounds float* %faction, i64 %idxprom75
  %32 = load float* %arrayidx160, align 4, !tbaa !3
  %sub161 = fsub float %32, %mul147
  %mul162 = fmul float %conv104, %conv104
  %mul165 = fmul float %mul4, %29
  %mul166 = fmul float %conv104, %mul165
  %mul167 = fmul float %mul162, %mul166
  %add168 = fadd float %mul166, %add144
  %mul169 = fmul float %sub84, %mul167
  %mul170 = fmul float %sub85, %mul167
  %mul171 = fmul float %sub86, %mul167
  %add172 = fadd float %fix2.0519, %mul169
  %add173 = fadd float %fiy2.0518, %mul170
  %add174 = fadd float %fiz2.0517, %mul171
  %sub175 = fsub float %sub153, %mul169
  %sub176 = fsub float %sub157, %mul170
  %sub177 = fsub float %sub161, %mul171
  %mul178 = fmul float %conv108, %conv108
  %mul182 = fmul float %conv108, %mul165
  %mul183 = fmul float %mul178, %mul182
  %add184 = fadd float %mul182, %add168
  %mul185 = fmul float %sub92, %mul183
  %mul186 = fmul float %sub93, %mul183
  %mul187 = fmul float %sub94, %mul183
  %add188 = fadd float %fix3.0516, %mul185
  %add189 = fadd float %fiy3.0515, %mul186
  %add190 = fadd float %fiz3.0514, %mul187
  %sub191 = fsub float %sub175, %mul185
  store float %sub191, float* %arrayidx152, align 4, !tbaa !3
  %sub194 = fsub float %sub176, %mul186
  store float %sub194, float* %arrayidx156, align 4, !tbaa !3
  %sub198 = fsub float %sub177, %mul187
  store float %sub198, float* %arrayidx160, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %33 = trunc i64 %indvars.iv.next to i32
  %cmp64 = icmp slt i32 %33, %10
  br i1 %cmp64, label %for.body65, label %for.end

for.end:                                          ; preds = %for.body65, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add184, %for.body65 ]
  %vnbtot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %sub134, %for.body65 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add148, %for.body65 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add149, %for.body65 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add150, %for.body65 ]
  %fix2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add172, %for.body65 ]
  %fiy2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add173, %for.body65 ]
  %fiz2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add174, %for.body65 ]
  %fix3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add188, %for.body65 ]
  %fiy3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add189, %for.body65 ]
  %fiz3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add190, %for.body65 ]
  %arrayidx203 = getelementptr inbounds float* %faction, i64 %idxprom28
  %34 = load float* %arrayidx203, align 4, !tbaa !3
  %add204 = fadd float %fix1.0.lcssa, %34
  store float %add204, float* %arrayidx203, align 4, !tbaa !3
  %arrayidx209 = getelementptr inbounds float* %faction, i64 %idxprom32
  %35 = load float* %arrayidx209, align 4, !tbaa !3
  %add210 = fadd float %fiy1.0.lcssa, %35
  store float %add210, float* %arrayidx209, align 4, !tbaa !3
  %arrayidx216 = getelementptr inbounds float* %faction, i64 %idxprom36
  %36 = load float* %arrayidx216, align 4, !tbaa !3
  %add217 = fadd float %fiz1.0.lcssa, %36
  store float %add217, float* %arrayidx216, align 4, !tbaa !3
  %arrayidx223 = getelementptr inbounds float* %faction, i64 %idxprom40
  %37 = load float* %arrayidx223, align 4, !tbaa !3
  %add224 = fadd float %fix2.0.lcssa, %37
  store float %add224, float* %arrayidx223, align 4, !tbaa !3
  %arrayidx230 = getelementptr inbounds float* %faction, i64 %idxprom44
  %38 = load float* %arrayidx230, align 4, !tbaa !3
  %add231 = fadd float %fiy2.0.lcssa, %38
  store float %add231, float* %arrayidx230, align 4, !tbaa !3
  %arrayidx237 = getelementptr inbounds float* %faction, i64 %idxprom48
  %39 = load float* %arrayidx237, align 4, !tbaa !3
  %add238 = fadd float %fiz2.0.lcssa, %39
  store float %add238, float* %arrayidx237, align 4, !tbaa !3
  %arrayidx244 = getelementptr inbounds float* %faction, i64 %idxprom52
  %40 = load float* %arrayidx244, align 4, !tbaa !3
  %add245 = fadd float %fix3.0.lcssa, %40
  store float %add245, float* %arrayidx244, align 4, !tbaa !3
  %arrayidx251 = getelementptr inbounds float* %faction, i64 %idxprom56
  %41 = load float* %arrayidx251, align 4, !tbaa !3
  %add252 = fadd float %fiy3.0.lcssa, %41
  store float %add252, float* %arrayidx251, align 4, !tbaa !3
  %arrayidx258 = getelementptr inbounds float* %faction, i64 %idxprom60
  %42 = load float* %arrayidx258, align 4, !tbaa !3
  %add259 = fadd float %fiz3.0.lcssa, %42
  store float %add259, float* %arrayidx258, align 4, !tbaa !3
  %arrayidx264 = getelementptr inbounds float* %fshift, i64 %idxprom12
  %43 = load float* %arrayidx264, align 4, !tbaa !3
  %add265 = fadd float %fix1.0.lcssa, %43
  %add266 = fadd float %fix2.0.lcssa, %add265
  %add267 = fadd float %fix3.0.lcssa, %add266
  store float %add267, float* %arrayidx264, align 4, !tbaa !3
  %arrayidx272 = getelementptr inbounds float* %fshift, i64 %idxprom15
  %44 = load float* %arrayidx272, align 4, !tbaa !3
  %add273 = fadd float %fiy1.0.lcssa, %44
  %add274 = fadd float %fiy2.0.lcssa, %add273
  %add275 = fadd float %fiy3.0.lcssa, %add274
  store float %add275, float* %arrayidx272, align 4, !tbaa !3
  %arrayidx281 = getelementptr inbounds float* %fshift, i64 %idxprom18
  %45 = load float* %arrayidx281, align 4, !tbaa !3
  %add282 = fadd float %fiz1.0.lcssa, %45
  %add283 = fadd float %fiz2.0.lcssa, %add282
  %add284 = fadd float %fiz3.0.lcssa, %add283
  store float %add284, float* %arrayidx281, align 4, !tbaa !3
  %arrayidx289 = getelementptr inbounds i32* %gid, i64 %indvars.iv538
  %46 = load i32* %arrayidx289, align 4, !tbaa !0
  %idxprom290 = sext i32 %46 to i64
  %arrayidx291 = getelementptr inbounds float* %Vc, i64 %idxprom290
  %47 = load float* %arrayidx291, align 4, !tbaa !3
  %add292 = fadd float %vctot.0.lcssa, %47
  store float %add292, float* %arrayidx291, align 4, !tbaa !3
  %arrayidx296 = getelementptr inbounds float* %Vnb, i64 %idxprom290
  %48 = load float* %arrayidx296, align 4, !tbaa !3
  %add297 = fadd float %vnbtot.0.lcssa, %48
  store float %add297, float* %arrayidx296, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next539 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end302, label %for.end.for.body_crit_edge

for.end.for.body_crit_edge:                       ; preds = %for.end
  %arrayidx21.phi.trans.insert = getelementptr inbounds i32* %iinr, i64 %indvars.iv.next539
  %.pre = load i32* %arrayidx21.phi.trans.insert, align 4, !tbaa !0
  br label %for.body

for.end302:                                       ; preds = %for.end, %entry
  ret void
}
