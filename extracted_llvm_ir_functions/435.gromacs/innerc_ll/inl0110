define void @inl0110(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb, i32* nocapture %nsatoms) #0 {
entry:
  %cmp556 = icmp sgt i32 %nri, 0
  br i1 %cmp556, label %for.body.lr.ph, label %for.end303

for.body.lr.ph:                                   ; preds = %entry
  %mul173 = shl i32 %ntype, 1
  %.pre = load i32* %jindex, align 4, !tbaa !0
  br label %for.body

for.body:                                         ; preds = %for.end293, %for.body.lr.ph
  %0 = phi i32 [ %.pre, %for.body.lr.ph ], [ %10, %for.end293 ]
  %indvars.iv573 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next574, %for.end293 ]
  %1 = trunc i64 %indvars.iv573 to i32
  %mul = mul nsw i32 %1, 3
  %idxprom = sext i32 %mul to i64
  %arrayidx = getelementptr inbounds i32* %nsatoms, i64 %idxprom
  %2 = load i32* %arrayidx, align 4, !tbaa !0
  %add = add nsw i32 %mul, 1
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds i32* %nsatoms, i64 %idxprom2
  %3 = load i32* %arrayidx3, align 4, !tbaa !0
  %add5 = add nsw i32 %mul, 2
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds i32* %nsatoms, i64 %idxprom6
  %4 = load i32* %arrayidx7, align 4, !tbaa !0
  %arrayidx9 = getelementptr inbounds i32* %shift, i64 %indvars.iv573
  %5 = load i32* %arrayidx9, align 4, !tbaa !0
  %mul10 = mul nsw i32 %5, 3
  %idxprom11 = sext i32 %mul10 to i64
  %arrayidx12 = getelementptr inbounds float* %shiftvec, i64 %idxprom11
  %6 = load float* %arrayidx12, align 4, !tbaa !3
  %add13 = add nsw i32 %mul10, 1
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds float* %shiftvec, i64 %idxprom14
  %7 = load float* %arrayidx15, align 4, !tbaa !3
  %add16 = add nsw i32 %mul10, 2
  %idxprom17 = sext i32 %add16 to i64
  %arrayidx18 = getelementptr inbounds float* %shiftvec, i64 %idxprom17
  %8 = load float* %arrayidx18, align 4, !tbaa !3
  %arrayidx20 = getelementptr inbounds i32* %iinr, i64 %indvars.iv573
  %9 = load i32* %arrayidx20, align 4, !tbaa !0
  %indvars.iv.next574 = add i64 %indvars.iv573, 1
  %arrayidx26 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next574
  %10 = load i32* %arrayidx26, align 4, !tbaa !0
  %cmp28533 = icmp sgt i32 %3, 0
  br i1 %cmp28533, label %for.body29.lr.ph, label %for.end154

for.body29.lr.ph:                                 ; preds = %for.body
  %cmp46524 = icmp slt i32 %0, %10
  %arrayidx132 = getelementptr inbounds float* %fshift, i64 %idxprom11
  %arrayidx138 = getelementptr inbounds float* %fshift, i64 %idxprom14
  %arrayidx145 = getelementptr inbounds float* %fshift, i64 %idxprom17
  %11 = sext i32 %0 to i64
  %12 = sext i32 %9 to i64
  %13 = mul i32 %9, 3
  %14 = sext i32 %13 to i64
  br label %for.body29

for.body29:                                       ; preds = %for.end, %for.body29.lr.ph
  %indvars.iv560 = phi i64 [ %14, %for.body29.lr.ph ], [ %indvars.iv.next561, %for.end ]
  %indvars.iv558 = phi i64 [ %12, %for.body29.lr.ph ], [ %indvars.iv.next559, %for.end ]
  %s.0535 = phi i32 [ 0, %for.body29.lr.ph ], [ %inc153, %for.end ]
  %vnbtot.0534 = phi float [ 0.000000e+00, %for.body29.lr.ph ], [ %vnbtot.1.lcssa, %for.end ]
  %arrayidx31 = getelementptr inbounds float* %pos, i64 %indvars.iv560
  %15 = load float* %arrayidx31, align 4, !tbaa !3
  %add32 = fadd float %6, %15
  %16 = add nsw i64 %indvars.iv560, 1
  %arrayidx35 = getelementptr inbounds float* %pos, i64 %16
  %17 = load float* %arrayidx35, align 4, !tbaa !3
  %add36 = fadd float %7, %17
  %18 = add nsw i64 %indvars.iv560, 2
  %arrayidx39 = getelementptr inbounds float* %pos, i64 %18
  %19 = load float* %arrayidx39, align 4, !tbaa !3
  %add40 = fadd float %8, %19
  %arrayidx43 = getelementptr inbounds i32* %type, i64 %indvars.iv558
  %20 = load i32* %arrayidx43, align 4, !tbaa !0
  %mul44 = mul nsw i32 %mul173, %20
  br i1 %cmp46524, label %for.body47, label %for.end

for.body47:                                       ; preds = %for.body29, %for.body47
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body47 ], [ %11, %for.body29 ]
  %fiz1.0528 = phi float [ %add92, %for.body47 ], [ 0.000000e+00, %for.body29 ]
  %fiy1.0527 = phi float [ %add91, %for.body47 ], [ 0.000000e+00, %for.body29 ]
  %fix1.0526 = phi float [ %add90, %for.body47 ], [ 0.000000e+00, %for.body29 ]
  %vnbtot.1525 = phi float [ %sub82, %for.body47 ], [ %vnbtot.0534, %for.body29 ]
  %arrayidx49 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %21 = load i32* %arrayidx49, align 4, !tbaa !0
  %mul50 = mul nsw i32 %21, 3
  %idxprom51 = sext i32 %mul50 to i64
  %arrayidx52 = getelementptr inbounds float* %pos, i64 %idxprom51
  %22 = load float* %arrayidx52, align 4, !tbaa !3
  %add53 = add nsw i32 %mul50, 1
  %idxprom54 = sext i32 %add53 to i64
  %arrayidx55 = getelementptr inbounds float* %pos, i64 %idxprom54
  %23 = load float* %arrayidx55, align 4, !tbaa !3
  %add56 = add nsw i32 %mul50, 2
  %idxprom57 = sext i32 %add56 to i64
  %arrayidx58 = getelementptr inbounds float* %pos, i64 %idxprom57
  %24 = load float* %arrayidx58, align 4, !tbaa !3
  %sub = fsub float %add32, %22
  %sub59 = fsub float %add36, %23
  %sub60 = fsub float %add40, %24
  %mul61 = fmul float %sub, %sub
  %mul62 = fmul float %sub59, %sub59
  %add63 = fadd float %mul61, %mul62
  %mul64 = fmul float %sub60, %sub60
  %add65 = fadd float %add63, %mul64
  %conv66 = fdiv float 1.000000e+00, %add65
  %mul67 = fmul float %conv66, %conv66
  %mul68 = fmul float %conv66, %mul67
  %idxprom69 = sext i32 %21 to i64
  %arrayidx70 = getelementptr inbounds i32* %type, i64 %idxprom69
  %25 = load i32* %arrayidx70, align 4, !tbaa !0
  %mul71 = shl nsw i32 %25, 1
  %add72 = add nsw i32 %mul71, %mul44
  %idxprom73 = sext i32 %add72 to i64
  %arrayidx74 = getelementptr inbounds float* %nbfp, i64 %idxprom73
  %26 = load float* %arrayidx74, align 4, !tbaa !3
  %mul75 = fmul float %mul68, %26
  %mul76 = fmul float %mul68, %mul68
  %add77523 = or i32 %add72, 1
  %idxprom78 = sext i32 %add77523 to i64
  %arrayidx79 = getelementptr inbounds float* %nbfp, i64 %idxprom78
  %27 = load float* %arrayidx79, align 4, !tbaa !3
  %mul80 = fmul float %mul76, %27
  %add81 = fadd float %vnbtot.1525, %mul80
  %sub82 = fsub float %add81, %mul75
  %mul83 = fmul float %mul80, 1.200000e+01
  %mul84 = fmul float %mul75, 6.000000e+00
  %sub85 = fsub float %mul83, %mul84
  %mul86 = fmul float %conv66, %sub85
  %mul87 = fmul float %sub, %mul86
  %mul88 = fmul float %sub59, %mul86
  %mul89 = fmul float %sub60, %mul86
  %add90 = fadd float %fix1.0526, %mul87
  %add91 = fadd float %fiy1.0527, %mul88
  %add92 = fadd float %fiz1.0528, %mul89
  %arrayidx94 = getelementptr inbounds float* %faction, i64 %idxprom51
  %28 = load float* %arrayidx94, align 4, !tbaa !3
  %sub95 = fsub float %28, %mul87
  store float %sub95, float* %arrayidx94, align 4, !tbaa !3
  %arrayidx100 = getelementptr inbounds float* %faction, i64 %idxprom54
  %29 = load float* %arrayidx100, align 4, !tbaa !3
  %sub101 = fsub float %29, %mul88
  store float %sub101, float* %arrayidx100, align 4, !tbaa !3
  %arrayidx107 = getelementptr inbounds float* %faction, i64 %idxprom57
  %30 = load float* %arrayidx107, align 4, !tbaa !3
  %sub108 = fsub float %30, %mul89
  store float %sub108, float* %arrayidx107, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %31 = trunc i64 %indvars.iv.next to i32
  %cmp46 = icmp slt i32 %31, %10
  br i1 %cmp46, label %for.body47, label %for.end

for.end:                                          ; preds = %for.body47, %for.body29
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add92, %for.body47 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add91, %for.body47 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add90, %for.body47 ]
  %vnbtot.1.lcssa = phi float [ %vnbtot.0534, %for.body29 ], [ %sub82, %for.body47 ]
  %arrayidx113 = getelementptr inbounds float* %faction, i64 %indvars.iv560
  %32 = load float* %arrayidx113, align 4, !tbaa !3
  %add114 = fadd float %fix1.0.lcssa, %32
  store float %add114, float* %arrayidx113, align 4, !tbaa !3
  %arrayidx119 = getelementptr inbounds float* %faction, i64 %16
  %33 = load float* %arrayidx119, align 4, !tbaa !3
  %add120 = fadd float %fiy1.0.lcssa, %33
  store float %add120, float* %arrayidx119, align 4, !tbaa !3
  %arrayidx126 = getelementptr inbounds float* %faction, i64 %18
  %34 = load float* %arrayidx126, align 4, !tbaa !3
  %add127 = fadd float %fiz1.0.lcssa, %34
  store float %add127, float* %arrayidx126, align 4, !tbaa !3
  %35 = load float* %arrayidx132, align 4, !tbaa !3
  %add133 = fadd float %fix1.0.lcssa, %35
  store float %add133, float* %arrayidx132, align 4, !tbaa !3
  %36 = load float* %arrayidx138, align 4, !tbaa !3
  %add139 = fadd float %fiy1.0.lcssa, %36
  store float %add139, float* %arrayidx138, align 4, !tbaa !3
  %37 = load float* %arrayidx145, align 4, !tbaa !3
  %add146 = fadd float %fiz1.0.lcssa, %37
  store float %add146, float* %arrayidx145, align 4, !tbaa !3
  %indvars.iv.next559 = add i64 %indvars.iv558, 1
  %indvars.iv.next561 = add i64 %indvars.iv560, 3
  %inc153 = add nsw i32 %s.0535, 1
  %exitcond = icmp eq i32 %inc153, %3
  br i1 %exitcond, label %for.cond27.for.end154_crit_edge, label %for.body29

for.cond27.for.end154_crit_edge:                  ; preds = %for.end
  %38 = add i32 %3, %9
  br label %for.end154

for.end154:                                       ; preds = %for.cond27.for.end154_crit_edge, %for.body
  %ii.0.lcssa = phi i32 [ %38, %for.cond27.for.end154_crit_edge ], [ %9, %for.body ]
  %vnbtot.0.lcssa = phi float [ %vnbtot.1.lcssa, %for.cond27.for.end154_crit_edge ], [ 0.000000e+00, %for.body ]
  %cmp159550 = icmp slt i32 %4, %2
  br i1 %cmp159550, label %for.body161.lr.ph, label %for.end293

for.body161.lr.ph:                                ; preds = %for.end154
  %cmp178540 = icmp slt i32 %0, %10
  %arrayidx271 = getelementptr inbounds float* %fshift, i64 %idxprom11
  %arrayidx277 = getelementptr inbounds float* %fshift, i64 %idxprom14
  %arrayidx284 = getelementptr inbounds float* %fshift, i64 %idxprom17
  %39 = sext i32 %0 to i64
  %40 = add i32 %ii.0.lcssa, %4
  %41 = sub i32 %40, %3
  %42 = sext i32 %41 to i64
  %43 = mul i32 %41, 3
  %44 = sext i32 %43 to i64
  br label %for.body161

for.body161:                                      ; preds = %for.end250, %for.body161.lr.ph
  %indvars.iv568 = phi i64 [ %44, %for.body161.lr.ph ], [ %indvars.iv.next569, %for.end250 ]
  %indvars.iv566 = phi i64 [ %42, %for.body161.lr.ph ], [ %indvars.iv.next567, %for.end250 ]
  %s.1552 = phi i32 [ %4, %for.body161.lr.ph ], [ %inc292, %for.end250 ]
  %vnbtot.2551 = phi float [ %vnbtot.0.lcssa, %for.body161.lr.ph ], [ %vnbtot.3.lcssa, %for.end250 ]
  %arrayidx163 = getelementptr inbounds float* %pos, i64 %indvars.iv568
  %45 = load float* %arrayidx163, align 4, !tbaa !3
  %add164 = fadd float %6, %45
  %46 = add nsw i64 %indvars.iv568, 1
  %arrayidx167 = getelementptr inbounds float* %pos, i64 %46
  %47 = load float* %arrayidx167, align 4, !tbaa !3
  %add168 = fadd float %7, %47
  %48 = add nsw i64 %indvars.iv568, 2
  %arrayidx171 = getelementptr inbounds float* %pos, i64 %48
  %49 = load float* %arrayidx171, align 4, !tbaa !3
  %add172 = fadd float %8, %49
  %arrayidx175 = getelementptr inbounds i32* %type, i64 %indvars.iv566
  %50 = load i32* %arrayidx175, align 4, !tbaa !0
  %mul176 = mul nsw i32 %mul173, %50
  br i1 %cmp178540, label %for.body180, label %for.end250

for.body180:                                      ; preds = %for.body161, %for.body180
  %indvars.iv564 = phi i64 [ %indvars.iv.next565, %for.body180 ], [ %39, %for.body161 ]
  %fiz1.1544 = phi float [ %add228, %for.body180 ], [ 0.000000e+00, %for.body161 ]
  %fiy1.1543 = phi float [ %add227, %for.body180 ], [ 0.000000e+00, %for.body161 ]
  %fix1.1542 = phi float [ %add226, %for.body180 ], [ 0.000000e+00, %for.body161 ]
  %vnbtot.3541 = phi float [ %sub218, %for.body180 ], [ %vnbtot.2551, %for.body161 ]
  %arrayidx182 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv564
  %51 = load i32* %arrayidx182, align 4, !tbaa !0
  %mul183 = mul nsw i32 %51, 3
  %idxprom184 = sext i32 %mul183 to i64
  %arrayidx185 = getelementptr inbounds float* %pos, i64 %idxprom184
  %52 = load float* %arrayidx185, align 4, !tbaa !3
  %add186 = add nsw i32 %mul183, 1
  %idxprom187 = sext i32 %add186 to i64
  %arrayidx188 = getelementptr inbounds float* %pos, i64 %idxprom187
  %53 = load float* %arrayidx188, align 4, !tbaa !3
  %add189 = add nsw i32 %mul183, 2
  %idxprom190 = sext i32 %add189 to i64
  %arrayidx191 = getelementptr inbounds float* %pos, i64 %idxprom190
  %54 = load float* %arrayidx191, align 4, !tbaa !3
  %sub192 = fsub float %add164, %52
  %sub193 = fsub float %add168, %53
  %sub194 = fsub float %add172, %54
  %mul195 = fmul float %sub192, %sub192
  %mul196 = fmul float %sub193, %sub193
  %add197 = fadd float %mul195, %mul196
  %mul198 = fmul float %sub194, %sub194
  %add199 = fadd float %add197, %mul198
  %conv202 = fdiv float 1.000000e+00, %add199
  %mul203 = fmul float %conv202, %conv202
  %mul204 = fmul float %conv202, %mul203
  %idxprom205 = sext i32 %51 to i64
  %arrayidx206 = getelementptr inbounds i32* %type, i64 %idxprom205
  %55 = load i32* %arrayidx206, align 4, !tbaa !0
  %mul207 = shl nsw i32 %55, 1
  %add208 = add nsw i32 %mul207, %mul176
  %idxprom209 = sext i32 %add208 to i64
  %arrayidx210 = getelementptr inbounds float* %nbfp, i64 %idxprom209
  %56 = load float* %arrayidx210, align 4, !tbaa !3
  %mul211 = fmul float %mul204, %56
  %mul212 = fmul float %mul204, %mul204
  %add213522 = or i32 %add208, 1
  %idxprom214 = sext i32 %add213522 to i64
  %arrayidx215 = getelementptr inbounds float* %nbfp, i64 %idxprom214
  %57 = load float* %arrayidx215, align 4, !tbaa !3
  %mul216 = fmul float %mul212, %57
  %add217 = fadd float %vnbtot.3541, %mul216
  %sub218 = fsub float %add217, %mul211
  %mul219 = fmul float %mul216, 1.200000e+01
  %mul220 = fmul float %mul211, 6.000000e+00
  %sub221 = fsub float %mul219, %mul220
  %mul222 = fmul float %conv202, %sub221
  %mul223 = fmul float %sub192, %mul222
  %mul224 = fmul float %sub193, %mul222
  %mul225 = fmul float %sub194, %mul222
  %add226 = fadd float %fix1.1542, %mul223
  %add227 = fadd float %fiy1.1543, %mul224
  %add228 = fadd float %fiz1.1544, %mul225
  %arrayidx230 = getelementptr inbounds float* %faction, i64 %idxprom184
  %58 = load float* %arrayidx230, align 4, !tbaa !3
  %sub231 = fsub float %58, %mul223
  store float %sub231, float* %arrayidx230, align 4, !tbaa !3
  %arrayidx236 = getelementptr inbounds float* %faction, i64 %idxprom187
  %59 = load float* %arrayidx236, align 4, !tbaa !3
  %sub237 = fsub float %59, %mul224
  store float %sub237, float* %arrayidx236, align 4, !tbaa !3
  %arrayidx243 = getelementptr inbounds float* %faction, i64 %idxprom190
  %60 = load float* %arrayidx243, align 4, !tbaa !3
  %sub244 = fsub float %60, %mul225
  store float %sub244, float* %arrayidx243, align 4, !tbaa !3
  %indvars.iv.next565 = add i64 %indvars.iv564, 1
  %61 = trunc i64 %indvars.iv.next565 to i32
  %cmp178 = icmp slt i32 %61, %10
  br i1 %cmp178, label %for.body180, label %for.end250

for.end250:                                       ; preds = %for.body180, %for.body161
  %fiz1.1.lcssa = phi float [ 0.000000e+00, %for.body161 ], [ %add228, %for.body180 ]
  %fiy1.1.lcssa = phi float [ 0.000000e+00, %for.body161 ], [ %add227, %for.body180 ]
  %fix1.1.lcssa = phi float [ 0.000000e+00, %for.body161 ], [ %add226, %for.body180 ]
  %vnbtot.3.lcssa = phi float [ %vnbtot.2551, %for.body161 ], [ %sub218, %for.body180 ]
  %arrayidx252 = getelementptr inbounds float* %faction, i64 %indvars.iv568
  %62 = load float* %arrayidx252, align 4, !tbaa !3
  %add253 = fadd float %fix1.1.lcssa, %62
  store float %add253, float* %arrayidx252, align 4, !tbaa !3
  %arrayidx258 = getelementptr inbounds float* %faction, i64 %46
  %63 = load float* %arrayidx258, align 4, !tbaa !3
  %add259 = fadd float %fiy1.1.lcssa, %63
  store float %add259, float* %arrayidx258, align 4, !tbaa !3
  %arrayidx265 = getelementptr inbounds float* %faction, i64 %48
  %64 = load float* %arrayidx265, align 4, !tbaa !3
  %add266 = fadd float %fiz1.1.lcssa, %64
  store float %add266, float* %arrayidx265, align 4, !tbaa !3
  %65 = load float* %arrayidx271, align 4, !tbaa !3
  %add272 = fadd float %fix1.1.lcssa, %65
  store float %add272, float* %arrayidx271, align 4, !tbaa !3
  %66 = load float* %arrayidx277, align 4, !tbaa !3
  %add278 = fadd float %fiy1.1.lcssa, %66
  store float %add278, float* %arrayidx277, align 4, !tbaa !3
  %67 = load float* %arrayidx284, align 4, !tbaa !3
  %add285 = fadd float %fiz1.1.lcssa, %67
  store float %add285, float* %arrayidx284, align 4, !tbaa !3
  %indvars.iv.next567 = add i64 %indvars.iv566, 1
  %indvars.iv.next569 = add i64 %indvars.iv568, 3
  %inc292 = add nsw i32 %s.1552, 1
  %exitcond572 = icmp eq i32 %inc292, %2
  br i1 %exitcond572, label %for.end293, label %for.body161

for.end293:                                       ; preds = %for.end250, %for.end154
  %vnbtot.2.lcssa = phi float [ %vnbtot.0.lcssa, %for.end154 ], [ %vnbtot.3.lcssa, %for.end250 ]
  %arrayidx295 = getelementptr inbounds i32* %gid, i64 %indvars.iv573
  %68 = load i32* %arrayidx295, align 4, !tbaa !0
  %idxprom296 = sext i32 %68 to i64
  %arrayidx297 = getelementptr inbounds float* %Vnb, i64 %idxprom296
  %69 = load float* %arrayidx297, align 4, !tbaa !3
  %add298 = fadd float %vnbtot.2.lcssa, %69
  store float %add298, float* %arrayidx297, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next574 to i32
  %exitcond575 = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond575, label %for.end303, label %for.body

for.end303:                                       ; preds = %for.end293, %entry
  ret void
}
