define void @inl3001(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, float %tabscale, float* nocapture %VFtab, float %lambda, float* nocapture %dvdlambda, float* nocapture %chargeB) #0 {
entry:
  %sub = fsub float 1.000000e+00, %lambda
  %cmp296 = icmp sgt i32 %nri, 0
  br i1 %cmp296, label %for.body, label %for.end173

for.body:                                         ; preds = %for.end, %entry
  %indvars.iv300 = phi i64 [ 0, %entry ], [ %indvars.iv.next301, %for.end ]
  %dvdl.0297 = phi float [ 0.000000e+00, %entry ], [ %dvdl.1.lcssa, %for.end ]
  %arrayidx = getelementptr inbounds i32* %shift, i64 %indvars.iv300
  %0 = load i32* %arrayidx, align 4, !tbaa !0
  %mul = mul nsw i32 %0, 3
  %idxprom1 = sext i32 %mul to i64
  %arrayidx2 = getelementptr inbounds float* %shiftvec, i64 %idxprom1
  %1 = load float* %arrayidx2, align 4, !tbaa !3
  %add = add nsw i32 %mul, 1
  %idxprom3 = sext i32 %add to i64
  %arrayidx4 = getelementptr inbounds float* %shiftvec, i64 %idxprom3
  %2 = load float* %arrayidx4, align 4, !tbaa !3
  %add5 = add nsw i32 %mul, 2
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds float* %shiftvec, i64 %idxprom6
  %3 = load float* %arrayidx7, align 4, !tbaa !3
  %arrayidx9 = getelementptr inbounds i32* %iinr, i64 %indvars.iv300
  %4 = load i32* %arrayidx9, align 4, !tbaa !0
  %mul10 = mul nsw i32 %4, 3
  %arrayidx12 = getelementptr inbounds i32* %jindex, i64 %indvars.iv300
  %5 = load i32* %arrayidx12, align 4, !tbaa !0
  %indvars.iv.next301 = add i64 %indvars.iv300, 1
  %arrayidx15 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next301
  %6 = load i32* %arrayidx15, align 4, !tbaa !0
  %idxprom16 = sext i32 %mul10 to i64
  %arrayidx17 = getelementptr inbounds float* %pos, i64 %idxprom16
  %7 = load float* %arrayidx17, align 4, !tbaa !3
  %add18 = fadd float %1, %7
  %add19 = add nsw i32 %mul10, 1
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds float* %pos, i64 %idxprom20
  %8 = load float* %arrayidx21, align 4, !tbaa !3
  %add22 = fadd float %2, %8
  %add23 = add nsw i32 %mul10, 2
  %idxprom24 = sext i32 %add23 to i64
  %arrayidx25 = getelementptr inbounds float* %pos, i64 %idxprom24
  %9 = load float* %arrayidx25, align 4, !tbaa !3
  %add26 = fadd float %3, %9
  %idxprom27 = sext i32 %4 to i64
  %arrayidx28 = getelementptr inbounds float* %charge, i64 %idxprom27
  %10 = load float* %arrayidx28, align 4, !tbaa !3
  %mul29 = fmul float %10, %facel
  %arrayidx31 = getelementptr inbounds float* %chargeB, i64 %idxprom27
  %11 = load float* %arrayidx31, align 4, !tbaa !3
  %mul32 = fmul float %11, %facel
  %cmp34285 = icmp slt i32 %5, %6
  br i1 %cmp34285, label %for.body35.lr.ph, label %for.end

for.body35.lr.ph:                                 ; preds = %for.body
  %12 = sext i32 %5 to i64
  br label %for.body35

for.body35:                                       ; preds = %for.body35.lr.ph, %for.body35
  %indvars.iv = phi i64 [ %12, %for.body35.lr.ph ], [ %indvars.iv.next, %for.body35 ]
  %vctot.0290 = phi float [ 0.000000e+00, %for.body35.lr.ph ], [ %add100, %for.body35 ]
  %dvdl.1289 = phi float [ %dvdl.0297, %for.body35.lr.ph ], [ %add96, %for.body35 ]
  %fix1.0288 = phi float [ 0.000000e+00, %for.body35.lr.ph ], [ %add104, %for.body35 ]
  %fiy1.0287 = phi float [ 0.000000e+00, %for.body35.lr.ph ], [ %add105, %for.body35 ]
  %fiz1.0286 = phi float [ 0.000000e+00, %for.body35.lr.ph ], [ %add106, %for.body35 ]
  %arrayidx37 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %13 = load i32* %arrayidx37, align 4, !tbaa !0
  %mul38 = mul nsw i32 %13, 3
  %idxprom39 = sext i32 %mul38 to i64
  %arrayidx40 = getelementptr inbounds float* %pos, i64 %idxprom39
  %14 = load float* %arrayidx40, align 4, !tbaa !3
  %add41 = add nsw i32 %mul38, 1
  %idxprom42 = sext i32 %add41 to i64
  %arrayidx43 = getelementptr inbounds float* %pos, i64 %idxprom42
  %15 = load float* %arrayidx43, align 4, !tbaa !3
  %add44 = add nsw i32 %mul38, 2
  %idxprom45 = sext i32 %add44 to i64
  %arrayidx46 = getelementptr inbounds float* %pos, i64 %idxprom45
  %16 = load float* %arrayidx46, align 4, !tbaa !3
  %sub47 = fsub float %add18, %14
  %sub48 = fsub float %add22, %15
  %sub49 = fsub float %add26, %16
  %mul50 = fmul float %sub47, %sub47
  %mul51 = fmul float %sub48, %sub48
  %add52 = fadd float %mul50, %mul51
  %mul53 = fmul float %sub49, %sub49
  %add54 = fadd float %add52, %mul53
  %conv = fpext float %add54 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv55 = fptrunc double %div to float
  %mul56 = fmul float %add54, %conv55
  %mul57 = fmul float %mul56, %tabscale
  %conv58 = fptosi float %mul57 to i32
  %conv59 = sitofp i32 %conv58 to float
  %sub60 = fsub float %mul57, %conv59
  %mul61 = fmul float %sub60, %sub60
  %mul62 = shl nsw i32 %conv58, 2
  %idxprom63 = sext i32 %13 to i64
  %arrayidx64 = getelementptr inbounds float* %charge, i64 %idxprom63
  %17 = load float* %arrayidx64, align 4, !tbaa !3
  %mul65 = fmul float %mul29, %17
  %arrayidx67 = getelementptr inbounds float* %chargeB, i64 %idxprom63
  %18 = load float* %arrayidx67, align 4, !tbaa !3
  %mul68 = fmul float %mul32, %18
  %mul69 = fmul float %sub, %mul65
  %mul70 = fmul float %mul68, %lambda
  %add71 = fadd float %mul69, %mul70
  %idxprom72 = sext i32 %mul62 to i64
  %arrayidx73 = getelementptr inbounds float* %VFtab, i64 %idxprom72
  %19 = load float* %arrayidx73, align 4, !tbaa !3
  %add74282 = or i32 %mul62, 1
  %idxprom75 = sext i32 %add74282 to i64
  %arrayidx76 = getelementptr inbounds float* %VFtab, i64 %idxprom75
  %20 = load float* %arrayidx76, align 4, !tbaa !3
  %add77283 = or i32 %mul62, 2
  %idxprom78 = sext i32 %add77283 to i64
  %arrayidx79 = getelementptr inbounds float* %VFtab, i64 %idxprom78
  %21 = load float* %arrayidx79, align 4, !tbaa !3
  %mul80 = fmul float %21, %sub60
  %add81284 = or i32 %mul62, 3
  %idxprom82 = sext i32 %add81284 to i64
  %arrayidx83 = getelementptr inbounds float* %VFtab, i64 %idxprom82
  %22 = load float* %arrayidx83, align 4, !tbaa !3
  %mul84 = fmul float %22, %mul61
  %add85 = fadd float %20, %mul80
  %add86 = fadd float %add85, %mul84
  %mul87 = fmul float %sub60, %add86
  %add88 = fadd float %19, %mul87
  %add89 = fadd float %mul80, %add86
  %mul90 = fmul float %mul84, 2.000000e+00
  %add91 = fadd float %mul90, %add89
  %mul92 = fmul float %add71, %add88
  %mul93 = fmul float %add71, %add91
  %sub94 = fsub float %mul68, %mul65
  %mul95 = fmul float %sub94, %add88
  %add96 = fadd float %dvdl.1289, %mul95
  %mul97 = fmul float %mul93, %tabscale
  %23 = fmul float %conv55, %mul97
  %mul99 = fsub float -0.000000e+00, %23
  %add100 = fadd float %vctot.0290, %mul92
  %mul101 = fmul float %sub47, %mul99
  %mul102 = fmul float %sub48, %mul99
  %mul103 = fmul float %sub49, %mul99
  %add104 = fadd float %fix1.0288, %mul101
  %add105 = fadd float %fiy1.0287, %mul102
  %add106 = fadd float %fiz1.0286, %mul103
  %arrayidx108 = getelementptr inbounds float* %faction, i64 %idxprom39
  %24 = load float* %arrayidx108, align 4, !tbaa !3
  %sub109 = fsub float %24, %mul101
  store float %sub109, float* %arrayidx108, align 4, !tbaa !3
  %arrayidx114 = getelementptr inbounds float* %faction, i64 %idxprom42
  %25 = load float* %arrayidx114, align 4, !tbaa !3
  %sub115 = fsub float %25, %mul102
  store float %sub115, float* %arrayidx114, align 4, !tbaa !3
  %arrayidx121 = getelementptr inbounds float* %faction, i64 %idxprom45
  %26 = load float* %arrayidx121, align 4, !tbaa !3
  %sub122 = fsub float %26, %mul103
  store float %sub122, float* %arrayidx121, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %27 = trunc i64 %indvars.iv.next to i32
  %cmp34 = icmp slt i32 %27, %6
  br i1 %cmp34, label %for.body35, label %for.end

for.end:                                          ; preds = %for.body35, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add100, %for.body35 ]
  %dvdl.1.lcssa = phi float [ %dvdl.0297, %for.body ], [ %add96, %for.body35 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add104, %for.body35 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add105, %for.body35 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add106, %for.body35 ]
  %arrayidx127 = getelementptr inbounds float* %faction, i64 %idxprom16
  %28 = load float* %arrayidx127, align 4, !tbaa !3
  %add128 = fadd float %fix1.0.lcssa, %28
  store float %add128, float* %arrayidx127, align 4, !tbaa !3
  %arrayidx133 = getelementptr inbounds float* %faction, i64 %idxprom20
  %29 = load float* %arrayidx133, align 4, !tbaa !3
  %add134 = fadd float %fiy1.0.lcssa, %29
  store float %add134, float* %arrayidx133, align 4, !tbaa !3
  %arrayidx140 = getelementptr inbounds float* %faction, i64 %idxprom24
  %30 = load float* %arrayidx140, align 4, !tbaa !3
  %add141 = fadd float %fiz1.0.lcssa, %30
  store float %add141, float* %arrayidx140, align 4, !tbaa !3
  %arrayidx146 = getelementptr inbounds float* %fshift, i64 %idxprom1
  %31 = load float* %arrayidx146, align 4, !tbaa !3
  %add147 = fadd float %fix1.0.lcssa, %31
  store float %add147, float* %arrayidx146, align 4, !tbaa !3
  %arrayidx152 = getelementptr inbounds float* %fshift, i64 %idxprom3
  %32 = load float* %arrayidx152, align 4, !tbaa !3
  %add153 = fadd float %fiy1.0.lcssa, %32
  store float %add153, float* %arrayidx152, align 4, !tbaa !3
  %arrayidx159 = getelementptr inbounds float* %fshift, i64 %idxprom6
  %33 = load float* %arrayidx159, align 4, !tbaa !3
  %add160 = fadd float %fiz1.0.lcssa, %33
  store float %add160, float* %arrayidx159, align 4, !tbaa !3
  %arrayidx165 = getelementptr inbounds i32* %gid, i64 %indvars.iv300
  %34 = load i32* %arrayidx165, align 4, !tbaa !0
  %idxprom166 = sext i32 %34 to i64
  %arrayidx167 = getelementptr inbounds float* %Vc, i64 %idxprom166
  %35 = load float* %arrayidx167, align 4, !tbaa !3
  %add168 = fadd float %vctot.0.lcssa, %35
  store float %add168, float* %arrayidx167, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next301 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end173, label %for.body

for.end173:                                       ; preds = %for.end, %entry
  %dvdl.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %dvdl.1.lcssa, %for.end ]
  %36 = load float* %dvdlambda, align 4, !tbaa !3
  %add174 = fadd float %dvdl.0.lcssa, %36
  store float %add174, float* %dvdlambda, align 4, !tbaa !3
  ret void
}
