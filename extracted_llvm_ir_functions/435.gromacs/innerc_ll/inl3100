define void @inl3100(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb, float %tabscale, float* nocapture %VFtab) #0 {
entry:
  %cmp321 = icmp sgt i32 %nri, 0
  br i1 %cmp321, label %for.body.lr.ph, label %for.end190

for.body.lr.ph:                                   ; preds = %entry
  %mul30 = shl i32 %ntype, 1
  br label %for.body

for.body:                                         ; preds = %for.end, %for.body.lr.ph
  %indvars.iv323 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next324, %for.end ]
  %arrayidx = getelementptr inbounds i32* %shift, i64 %indvars.iv323
  %0 = load i32* %arrayidx, align 4, !tbaa !0
  %mul = mul nsw i32 %0, 3
  %idxprom1 = sext i32 %mul to i64
  %arrayidx2 = getelementptr inbounds float* %shiftvec, i64 %idxprom1
  %1 = load float* %arrayidx2, align 4, !tbaa !3
  %add = add nsw i32 %mul, 1
  %idxprom3 = sext i32 %add to i64
  %arrayidx4 = getelementptr inbounds float* %shiftvec, i64 %idxprom3
  %2 = load float* %arrayidx4, align 4, !tbaa !3
  %add5 = add nsw i32 %mul, 2
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds float* %shiftvec, i64 %idxprom6
  %3 = load float* %arrayidx7, align 4, !tbaa !3
  %arrayidx9 = getelementptr inbounds i32* %iinr, i64 %indvars.iv323
  %4 = load i32* %arrayidx9, align 4, !tbaa !0
  %mul10 = mul nsw i32 %4, 3
  %arrayidx12 = getelementptr inbounds i32* %jindex, i64 %indvars.iv323
  %5 = load i32* %arrayidx12, align 4, !tbaa !0
  %indvars.iv.next324 = add i64 %indvars.iv323, 1
  %arrayidx15 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next324
  %6 = load i32* %arrayidx15, align 4, !tbaa !0
  %idxprom16 = sext i32 %mul10 to i64
  %arrayidx17 = getelementptr inbounds float* %pos, i64 %idxprom16
  %7 = load float* %arrayidx17, align 4, !tbaa !3
  %add18 = fadd float %1, %7
  %add19 = add nsw i32 %mul10, 1
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds float* %pos, i64 %idxprom20
  %8 = load float* %arrayidx21, align 4, !tbaa !3
  %add22 = fadd float %2, %8
  %add23 = add nsw i32 %mul10, 2
  %idxprom24 = sext i32 %add23 to i64
  %arrayidx25 = getelementptr inbounds float* %pos, i64 %idxprom24
  %9 = load float* %arrayidx25, align 4, !tbaa !3
  %add26 = fadd float %3, %9
  %idxprom27 = sext i32 %4 to i64
  %arrayidx28 = getelementptr inbounds float* %charge, i64 %idxprom27
  %10 = load float* %arrayidx28, align 4, !tbaa !3
  %mul29 = fmul float %10, %facel
  %arrayidx32 = getelementptr inbounds i32* %type, i64 %idxprom27
  %11 = load i32* %arrayidx32, align 4, !tbaa !0
  %mul33 = mul nsw i32 %mul30, %11
  %cmp35310 = icmp slt i32 %5, %6
  br i1 %cmp35310, label %for.body36.lr.ph, label %for.end

for.body36.lr.ph:                                 ; preds = %for.body
  %12 = sext i32 %5 to i64
  br label %for.body36

for.body36:                                       ; preds = %for.body36.lr.ph, %for.body36
  %indvars.iv = phi i64 [ %12, %for.body36.lr.ph ], [ %indvars.iv.next, %for.body36 ]
  %vctot.0315 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add112, %for.body36 ]
  %vnbtot.0314 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %sub73, %for.body36 ]
  %fix1.0313 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add116, %for.body36 ]
  %fiy1.0312 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add117, %for.body36 ]
  %fiz1.0311 = phi float [ 0.000000e+00, %for.body36.lr.ph ], [ %add118, %for.body36 ]
  %arrayidx38 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %13 = load i32* %arrayidx38, align 4, !tbaa !0
  %mul39 = mul nsw i32 %13, 3
  %idxprom40 = sext i32 %mul39 to i64
  %arrayidx41 = getelementptr inbounds float* %pos, i64 %idxprom40
  %14 = load float* %arrayidx41, align 4, !tbaa !3
  %add42 = add nsw i32 %mul39, 1
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds float* %pos, i64 %idxprom43
  %15 = load float* %arrayidx44, align 4, !tbaa !3
  %add45 = add nsw i32 %mul39, 2
  %idxprom46 = sext i32 %add45 to i64
  %arrayidx47 = getelementptr inbounds float* %pos, i64 %idxprom46
  %16 = load float* %arrayidx47, align 4, !tbaa !3
  %sub = fsub float %add18, %14
  %sub48 = fsub float %add22, %15
  %sub49 = fsub float %add26, %16
  %mul50 = fmul float %sub, %sub
  %mul51 = fmul float %sub48, %sub48
  %add52 = fadd float %mul50, %mul51
  %mul53 = fmul float %sub49, %sub49
  %add54 = fadd float %add52, %mul53
  %conv = fpext float %add54 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv55 = fptrunc double %div to float
  %mul56 = fmul float %add54, %conv55
  %mul57 = fmul float %conv55, %conv55
  %mul58 = fmul float %mul57, %mul57
  %mul59 = fmul float %mul57, %mul58
  %idxprom60 = sext i32 %13 to i64
  %arrayidx61 = getelementptr inbounds i32* %type, i64 %idxprom60
  %17 = load i32* %arrayidx61, align 4, !tbaa !0
  %mul62 = shl nsw i32 %17, 1
  %add63 = add nsw i32 %mul62, %mul33
  %idxprom64 = sext i32 %add63 to i64
  %arrayidx65 = getelementptr inbounds float* %nbfp, i64 %idxprom64
  %18 = load float* %arrayidx65, align 4, !tbaa !3
  %mul66 = fmul float %18, %mul59
  %mul67 = fmul float %mul59, %mul59
  %add68306 = or i32 %add63, 1
  %idxprom69 = sext i32 %add68306 to i64
  %arrayidx70 = getelementptr inbounds float* %nbfp, i64 %idxprom69
  %19 = load float* %arrayidx70, align 4, !tbaa !3
  %mul71 = fmul float %19, %mul67
  %add72 = fadd float %vnbtot.0314, %mul71
  %sub73 = fsub float %add72, %mul66
  %mul74 = fmul float %mul56, %tabscale
  %conv75 = fptosi float %mul74 to i32
  %conv76 = sitofp i32 %conv75 to float
  %sub77 = fsub float %mul74, %conv76
  %mul78 = fmul float %sub77, %sub77
  %mul79 = shl nsw i32 %conv75, 2
  %arrayidx81 = getelementptr inbounds float* %charge, i64 %idxprom60
  %20 = load float* %arrayidx81, align 4, !tbaa !3
  %mul82 = fmul float %mul29, %20
  %idxprom83 = sext i32 %mul79 to i64
  %arrayidx84 = getelementptr inbounds float* %VFtab, i64 %idxprom83
  %21 = load float* %arrayidx84, align 4, !tbaa !3
  %add85307 = or i32 %mul79, 1
  %idxprom86 = sext i32 %add85307 to i64
  %arrayidx87 = getelementptr inbounds float* %VFtab, i64 %idxprom86
  %22 = load float* %arrayidx87, align 4, !tbaa !3
  %add88308 = or i32 %mul79, 2
  %idxprom89 = sext i32 %add88308 to i64
  %arrayidx90 = getelementptr inbounds float* %VFtab, i64 %idxprom89
  %23 = load float* %arrayidx90, align 4, !tbaa !3
  %mul91 = fmul float %sub77, %23
  %add92309 = or i32 %mul79, 3
  %idxprom93 = sext i32 %add92309 to i64
  %arrayidx94 = getelementptr inbounds float* %VFtab, i64 %idxprom93
  %24 = load float* %arrayidx94, align 4, !tbaa !3
  %mul95 = fmul float %mul78, %24
  %add96 = fadd float %22, %mul91
  %add97 = fadd float %add96, %mul95
  %mul98 = fmul float %sub77, %add97
  %add99 = fadd float %21, %mul98
  %add100 = fadd float %mul91, %add97
  %mul101 = fmul float %mul95, 2.000000e+00
  %add102 = fadd float %mul101, %add100
  %mul103 = fmul float %mul82, %add99
  %mul104 = fmul float %mul82, %add102
  %mul105 = fmul float %mul71, 1.200000e+01
  %mul106 = fmul float %mul66, 6.000000e+00
  %sub107 = fsub float %mul105, %mul106
  %mul108 = fmul float %conv55, %sub107
  %mul109 = fmul float %mul104, %tabscale
  %sub110 = fsub float %mul108, %mul109
  %mul111 = fmul float %conv55, %sub110
  %add112 = fadd float %vctot.0315, %mul103
  %mul113 = fmul float %sub, %mul111
  %mul114 = fmul float %sub48, %mul111
  %mul115 = fmul float %sub49, %mul111
  %add116 = fadd float %fix1.0313, %mul113
  %add117 = fadd float %fiy1.0312, %mul114
  %add118 = fadd float %fiz1.0311, %mul115
  %arrayidx120 = getelementptr inbounds float* %faction, i64 %idxprom40
  %25 = load float* %arrayidx120, align 4, !tbaa !3
  %sub121 = fsub float %25, %mul113
  store float %sub121, float* %arrayidx120, align 4, !tbaa !3
  %arrayidx126 = getelementptr inbounds float* %faction, i64 %idxprom43
  %26 = load float* %arrayidx126, align 4, !tbaa !3
  %sub127 = fsub float %26, %mul114
  store float %sub127, float* %arrayidx126, align 4, !tbaa !3
  %arrayidx133 = getelementptr inbounds float* %faction, i64 %idxprom46
  %27 = load float* %arrayidx133, align 4, !tbaa !3
  %sub134 = fsub float %27, %mul115
  store float %sub134, float* %arrayidx133, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %28 = trunc i64 %indvars.iv.next to i32
  %cmp35 = icmp slt i32 %28, %6
  br i1 %cmp35, label %for.body36, label %for.end

for.end:                                          ; preds = %for.body36, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add112, %for.body36 ]
  %vnbtot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %sub73, %for.body36 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add116, %for.body36 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add117, %for.body36 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add118, %for.body36 ]
  %arrayidx139 = getelementptr inbounds float* %faction, i64 %idxprom16
  %29 = load float* %arrayidx139, align 4, !tbaa !3
  %add140 = fadd float %fix1.0.lcssa, %29
  store float %add140, float* %arrayidx139, align 4, !tbaa !3
  %arrayidx145 = getelementptr inbounds float* %faction, i64 %idxprom20
  %30 = load float* %arrayidx145, align 4, !tbaa !3
  %add146 = fadd float %fiy1.0.lcssa, %30
  store float %add146, float* %arrayidx145, align 4, !tbaa !3
  %arrayidx152 = getelementptr inbounds float* %faction, i64 %idxprom24
  %31 = load float* %arrayidx152, align 4, !tbaa !3
  %add153 = fadd float %fiz1.0.lcssa, %31
  store float %add153, float* %arrayidx152, align 4, !tbaa !3
  %arrayidx158 = getelementptr inbounds float* %fshift, i64 %idxprom1
  %32 = load float* %arrayidx158, align 4, !tbaa !3
  %add159 = fadd float %fix1.0.lcssa, %32
  store float %add159, float* %arrayidx158, align 4, !tbaa !3
  %arrayidx164 = getelementptr inbounds float* %fshift, i64 %idxprom3
  %33 = load float* %arrayidx164, align 4, !tbaa !3
  %add165 = fadd float %fiy1.0.lcssa, %33
  store float %add165, float* %arrayidx164, align 4, !tbaa !3
  %arrayidx171 = getelementptr inbounds float* %fshift, i64 %idxprom6
  %34 = load float* %arrayidx171, align 4, !tbaa !3
  %add172 = fadd float %fiz1.0.lcssa, %34
  store float %add172, float* %arrayidx171, align 4, !tbaa !3
  %arrayidx177 = getelementptr inbounds i32* %gid, i64 %indvars.iv323
  %35 = load i32* %arrayidx177, align 4, !tbaa !0
  %idxprom178 = sext i32 %35 to i64
  %arrayidx179 = getelementptr inbounds float* %Vc, i64 %idxprom178
  %36 = load float* %arrayidx179, align 4, !tbaa !3
  %add180 = fadd float %vctot.0.lcssa, %36
  store float %add180, float* %arrayidx179, align 4, !tbaa !3
  %arrayidx184 = getelementptr inbounds float* %Vnb, i64 %idxprom178
  %37 = load float* %arrayidx184, align 4, !tbaa !3
  %add185 = fadd float %vnbtot.0.lcssa, %37
  store float %add185, float* %arrayidx184, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next324 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end190, label %for.body

for.end190:                                       ; preds = %for.end, %entry
  ret void
}
