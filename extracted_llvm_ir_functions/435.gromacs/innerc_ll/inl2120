define void @inl2120(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, float %krf, float %crf, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb) #0 {
entry:
  %0 = load i32* %iinr, align 4, !tbaa !0
  %idxprom = sext i32 %0 to i64
  %arrayidx1 = getelementptr inbounds float* %charge, i64 %idxprom
  %1 = load float* %arrayidx1, align 4, !tbaa !3
  %add = add nsw i32 %0, 1
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds float* %charge, i64 %idxprom2
  %2 = load float* %arrayidx3, align 4, !tbaa !3
  %mul = fmul float %1, %facel
  %mul4 = fmul float %2, %facel
  %mul5 = shl i32 %ntype, 1
  %arrayidx7 = getelementptr inbounds i32* %type, i64 %idxprom
  %3 = load i32* %arrayidx7, align 4, !tbaa !0
  %mul8 = mul nsw i32 %mul5, %3
  %cmp557 = icmp sgt i32 %nri, 0
  br i1 %cmp557, label %for.body, label %for.end311

for.body:                                         ; preds = %entry, %for.end.for.body_crit_edge
  %4 = phi i32 [ %.pre, %for.end.for.body_crit_edge ], [ %0, %entry ]
  %indvars.iv559 = phi i64 [ %indvars.iv.next560, %for.end.for.body_crit_edge ], [ 0, %entry ]
  %arrayidx10 = getelementptr inbounds i32* %shift, i64 %indvars.iv559
  %5 = load i32* %arrayidx10, align 4, !tbaa !0
  %mul11 = mul nsw i32 %5, 3
  %idxprom12 = sext i32 %mul11 to i64
  %arrayidx13 = getelementptr inbounds float* %shiftvec, i64 %idxprom12
  %6 = load float* %arrayidx13, align 4, !tbaa !3
  %add14 = add nsw i32 %mul11, 1
  %idxprom15 = sext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds float* %shiftvec, i64 %idxprom15
  %7 = load float* %arrayidx16, align 4, !tbaa !3
  %add17 = add nsw i32 %mul11, 2
  %idxprom18 = sext i32 %add17 to i64
  %arrayidx19 = getelementptr inbounds float* %shiftvec, i64 %idxprom18
  %8 = load float* %arrayidx19, align 4, !tbaa !3
  %mul22 = mul nsw i32 %4, 3
  %arrayidx24 = getelementptr inbounds i32* %jindex, i64 %indvars.iv559
  %9 = load i32* %arrayidx24, align 4, !tbaa !0
  %indvars.iv.next560 = add i64 %indvars.iv559, 1
  %arrayidx27 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next560
  %10 = load i32* %arrayidx27, align 4, !tbaa !0
  %idxprom28 = sext i32 %mul22 to i64
  %arrayidx29 = getelementptr inbounds float* %pos, i64 %idxprom28
  %11 = load float* %arrayidx29, align 4, !tbaa !3
  %add30 = fadd float %6, %11
  %add31 = add nsw i32 %mul22, 1
  %idxprom32 = sext i32 %add31 to i64
  %arrayidx33 = getelementptr inbounds float* %pos, i64 %idxprom32
  %12 = load float* %arrayidx33, align 4, !tbaa !3
  %add34 = fadd float %7, %12
  %add35 = add nsw i32 %mul22, 2
  %idxprom36 = sext i32 %add35 to i64
  %arrayidx37 = getelementptr inbounds float* %pos, i64 %idxprom36
  %13 = load float* %arrayidx37, align 4, !tbaa !3
  %add38 = fadd float %8, %13
  %add39 = add nsw i32 %mul22, 3
  %idxprom40 = sext i32 %add39 to i64
  %arrayidx41 = getelementptr inbounds float* %pos, i64 %idxprom40
  %14 = load float* %arrayidx41, align 4, !tbaa !3
  %add42 = fadd float %6, %14
  %add43 = add nsw i32 %mul22, 4
  %idxprom44 = sext i32 %add43 to i64
  %arrayidx45 = getelementptr inbounds float* %pos, i64 %idxprom44
  %15 = load float* %arrayidx45, align 4, !tbaa !3
  %add46 = fadd float %7, %15
  %add47 = add nsw i32 %mul22, 5
  %idxprom48 = sext i32 %add47 to i64
  %arrayidx49 = getelementptr inbounds float* %pos, i64 %idxprom48
  %16 = load float* %arrayidx49, align 4, !tbaa !3
  %add50 = fadd float %8, %16
  %add51 = add nsw i32 %mul22, 6
  %idxprom52 = sext i32 %add51 to i64
  %arrayidx53 = getelementptr inbounds float* %pos, i64 %idxprom52
  %17 = load float* %arrayidx53, align 4, !tbaa !3
  %add54 = fadd float %6, %17
  %add55 = add nsw i32 %mul22, 7
  %idxprom56 = sext i32 %add55 to i64
  %arrayidx57 = getelementptr inbounds float* %pos, i64 %idxprom56
  %18 = load float* %arrayidx57, align 4, !tbaa !3
  %add58 = fadd float %7, %18
  %add59 = add nsw i32 %mul22, 8
  %idxprom60 = sext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds float* %pos, i64 %idxprom60
  %19 = load float* %arrayidx61, align 4, !tbaa !3
  %add62 = fadd float %8, %19
  %cmp64534 = icmp slt i32 %9, %10
  br i1 %cmp64534, label %for.body65.lr.ph, label %for.end

for.body65.lr.ph:                                 ; preds = %for.body
  %20 = sext i32 %9 to i64
  br label %for.body65

for.body65:                                       ; preds = %for.body65.lr.ph, %for.body65
  %indvars.iv = phi i64 [ %20, %for.body65.lr.ph ], [ %indvars.iv.next, %for.body65 ]
  %vctot.0545 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add193, %for.body65 ]
  %vnbtot.0544 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %sub125, %for.body65 ]
  %fix1.0543 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add145, %for.body65 ]
  %fiy1.0542 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add146, %for.body65 ]
  %fiz1.0541 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add147, %for.body65 ]
  %fix2.0540 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add175, %for.body65 ]
  %fiy2.0539 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add176, %for.body65 ]
  %fiz2.0538 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add177, %for.body65 ]
  %fix3.0537 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add197, %for.body65 ]
  %fiy3.0536 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add198, %for.body65 ]
  %fiz3.0535 = phi float [ 0.000000e+00, %for.body65.lr.ph ], [ %add199, %for.body65 ]
  %arrayidx67 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %21 = load i32* %arrayidx67, align 4, !tbaa !0
  %mul68 = mul nsw i32 %21, 3
  %idxprom69 = sext i32 %mul68 to i64
  %arrayidx70 = getelementptr inbounds float* %pos, i64 %idxprom69
  %22 = load float* %arrayidx70, align 4, !tbaa !3
  %add71 = add nsw i32 %mul68, 1
  %idxprom72 = sext i32 %add71 to i64
  %arrayidx73 = getelementptr inbounds float* %pos, i64 %idxprom72
  %23 = load float* %arrayidx73, align 4, !tbaa !3
  %add74 = add nsw i32 %mul68, 2
  %idxprom75 = sext i32 %add74 to i64
  %arrayidx76 = getelementptr inbounds float* %pos, i64 %idxprom75
  %24 = load float* %arrayidx76, align 4, !tbaa !3
  %sub = fsub float %add30, %22
  %sub77 = fsub float %add34, %23
  %sub78 = fsub float %add38, %24
  %mul79 = fmul float %sub, %sub
  %mul80 = fmul float %sub77, %sub77
  %add81 = fadd float %mul79, %mul80
  %mul82 = fmul float %sub78, %sub78
  %add83 = fadd float %add81, %mul82
  %sub84 = fsub float %add42, %22
  %sub85 = fsub float %add46, %23
  %sub86 = fsub float %add50, %24
  %mul87 = fmul float %sub84, %sub84
  %mul88 = fmul float %sub85, %sub85
  %add89 = fadd float %mul87, %mul88
  %mul90 = fmul float %sub86, %sub86
  %add91 = fadd float %add89, %mul90
  %sub92 = fsub float %add54, %22
  %sub93 = fsub float %add58, %23
  %sub94 = fsub float %add62, %24
  %mul95 = fmul float %sub92, %sub92
  %mul96 = fmul float %sub93, %sub93
  %add97 = fadd float %mul95, %mul96
  %mul98 = fmul float %sub94, %sub94
  %add99 = fadd float %add97, %mul98
  %conv = fpext float %add83 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv100 = fptrunc double %div to float
  %conv101 = fpext float %add91 to double
  %call102 = tail call double @sqrt(double %conv101) #2
  %div103 = fdiv double 1.000000e+00, %call102
  %conv104 = fptrunc double %div103 to float
  %conv105 = fpext float %add99 to double
  %call106 = tail call double @sqrt(double %conv105) #2
  %div107 = fdiv double 1.000000e+00, %call106
  %conv108 = fptrunc double %div107 to float
  %mul109 = fmul float %conv100, %conv100
  %mul110 = fmul float %mul109, %mul109
  %mul111 = fmul float %mul109, %mul110
  %idxprom112 = sext i32 %21 to i64
  %arrayidx113 = getelementptr inbounds i32* %type, i64 %idxprom112
  %25 = load i32* %arrayidx113, align 4, !tbaa !0
  %mul114 = shl nsw i32 %25, 1
  %add115 = add nsw i32 %mul114, %mul8
  %idxprom116 = sext i32 %add115 to i64
  %arrayidx117 = getelementptr inbounds float* %nbfp, i64 %idxprom116
  %26 = load float* %arrayidx117, align 4, !tbaa !3
  %mul118 = fmul float %mul111, %26
  %mul119 = fmul float %mul111, %mul111
  %add120533 = or i32 %add115, 1
  %idxprom121 = sext i32 %add120533 to i64
  %arrayidx122 = getelementptr inbounds float* %nbfp, i64 %idxprom121
  %27 = load float* %arrayidx122, align 4, !tbaa !3
  %mul123 = fmul float %mul119, %27
  %add124 = fadd float %vnbtot.0544, %mul123
  %sub125 = fsub float %add124, %mul118
  %arrayidx127 = getelementptr inbounds float* %charge, i64 %idxprom112
  %28 = load float* %arrayidx127, align 4, !tbaa !3
  %mul128 = fmul float %mul, %28
  %mul129 = fmul float %add83, %krf
  %add130 = fadd float %conv100, %mul129
  %sub131 = fsub float %add130, %crf
  %mul132 = fmul float %sub131, %mul128
  %mul133 = fmul float %mul123, 1.200000e+01
  %mul134 = fmul float %mul118, 6.000000e+00
  %sub135 = fsub float %mul133, %mul134
  %mul136 = fmul float %mul129, 2.000000e+00
  %sub137 = fsub float %conv100, %mul136
  %mul138 = fmul float %sub137, %mul128
  %add139 = fadd float %sub135, %mul138
  %mul140 = fmul float %mul109, %add139
  %add141 = fadd float %vctot.0545, %mul132
  %mul142 = fmul float %sub, %mul140
  %mul143 = fmul float %sub77, %mul140
  %mul144 = fmul float %sub78, %mul140
  %add145 = fadd float %fix1.0543, %mul142
  %add146 = fadd float %fiy1.0542, %mul143
  %add147 = fadd float %fiz1.0541, %mul144
  %arrayidx149 = getelementptr inbounds float* %faction, i64 %idxprom69
  %29 = load float* %arrayidx149, align 4, !tbaa !3
  %sub150 = fsub float %29, %mul142
  %arrayidx153 = getelementptr inbounds float* %faction, i64 %idxprom72
  %30 = load float* %arrayidx153, align 4, !tbaa !3
  %sub154 = fsub float %30, %mul143
  %arrayidx157 = getelementptr inbounds float* %faction, i64 %idxprom75
  %31 = load float* %arrayidx157, align 4, !tbaa !3
  %sub158 = fsub float %31, %mul144
  %mul159 = fmul float %conv104, %conv104
  %mul162 = fmul float %mul4, %28
  %mul163 = fmul float %add91, %krf
  %add164 = fadd float %mul163, %conv104
  %sub165 = fsub float %add164, %crf
  %mul166 = fmul float %sub165, %mul162
  %mul167 = fmul float %mul163, 2.000000e+00
  %sub168 = fsub float %conv104, %mul167
  %mul169 = fmul float %sub168, %mul162
  %mul170 = fmul float %mul159, %mul169
  %add171 = fadd float %mul166, %add141
  %mul172 = fmul float %sub84, %mul170
  %mul173 = fmul float %sub85, %mul170
  %mul174 = fmul float %sub86, %mul170
  %add175 = fadd float %fix2.0540, %mul172
  %add176 = fadd float %fiy2.0539, %mul173
  %add177 = fadd float %fiz2.0538, %mul174
  %sub178 = fsub float %sub150, %mul172
  %sub179 = fsub float %sub154, %mul173
  %sub180 = fsub float %sub158, %mul174
  %mul181 = fmul float %conv108, %conv108
  %mul185 = fmul float %add99, %krf
  %add186 = fadd float %mul185, %conv108
  %sub187 = fsub float %add186, %crf
  %mul188 = fmul float %sub187, %mul162
  %mul189 = fmul float %mul185, 2.000000e+00
  %sub190 = fsub float %conv108, %mul189
  %mul191 = fmul float %sub190, %mul162
  %mul192 = fmul float %mul181, %mul191
  %add193 = fadd float %mul188, %add171
  %mul194 = fmul float %sub92, %mul192
  %mul195 = fmul float %sub93, %mul192
  %mul196 = fmul float %sub94, %mul192
  %add197 = fadd float %fix3.0537, %mul194
  %add198 = fadd float %fiy3.0536, %mul195
  %add199 = fadd float %fiz3.0535, %mul196
  %sub200 = fsub float %sub178, %mul194
  store float %sub200, float* %arrayidx149, align 4, !tbaa !3
  %sub203 = fsub float %sub179, %mul195
  store float %sub203, float* %arrayidx153, align 4, !tbaa !3
  %sub207 = fsub float %sub180, %mul196
  store float %sub207, float* %arrayidx157, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %32 = trunc i64 %indvars.iv.next to i32
  %cmp64 = icmp slt i32 %32, %10
  br i1 %cmp64, label %for.body65, label %for.end

for.end:                                          ; preds = %for.body65, %for.body
  %vctot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add193, %for.body65 ]
  %vnbtot.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %sub125, %for.body65 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add145, %for.body65 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add146, %for.body65 ]
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add147, %for.body65 ]
  %fix2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add175, %for.body65 ]
  %fiy2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add176, %for.body65 ]
  %fiz2.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add177, %for.body65 ]
  %fix3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add197, %for.body65 ]
  %fiy3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add198, %for.body65 ]
  %fiz3.0.lcssa = phi float [ 0.000000e+00, %for.body ], [ %add199, %for.body65 ]
  %arrayidx212 = getelementptr inbounds float* %faction, i64 %idxprom28
  %33 = load float* %arrayidx212, align 4, !tbaa !3
  %add213 = fadd float %fix1.0.lcssa, %33
  store float %add213, float* %arrayidx212, align 4, !tbaa !3
  %arrayidx218 = getelementptr inbounds float* %faction, i64 %idxprom32
  %34 = load float* %arrayidx218, align 4, !tbaa !3
  %add219 = fadd float %fiy1.0.lcssa, %34
  store float %add219, float* %arrayidx218, align 4, !tbaa !3
  %arrayidx225 = getelementptr inbounds float* %faction, i64 %idxprom36
  %35 = load float* %arrayidx225, align 4, !tbaa !3
  %add226 = fadd float %fiz1.0.lcssa, %35
  store float %add226, float* %arrayidx225, align 4, !tbaa !3
  %arrayidx232 = getelementptr inbounds float* %faction, i64 %idxprom40
  %36 = load float* %arrayidx232, align 4, !tbaa !3
  %add233 = fadd float %fix2.0.lcssa, %36
  store float %add233, float* %arrayidx232, align 4, !tbaa !3
  %arrayidx239 = getelementptr inbounds float* %faction, i64 %idxprom44
  %37 = load float* %arrayidx239, align 4, !tbaa !3
  %add240 = fadd float %fiy2.0.lcssa, %37
  store float %add240, float* %arrayidx239, align 4, !tbaa !3
  %arrayidx246 = getelementptr inbounds float* %faction, i64 %idxprom48
  %38 = load float* %arrayidx246, align 4, !tbaa !3
  %add247 = fadd float %fiz2.0.lcssa, %38
  store float %add247, float* %arrayidx246, align 4, !tbaa !3
  %arrayidx253 = getelementptr inbounds float* %faction, i64 %idxprom52
  %39 = load float* %arrayidx253, align 4, !tbaa !3
  %add254 = fadd float %fix3.0.lcssa, %39
  store float %add254, float* %arrayidx253, align 4, !tbaa !3
  %arrayidx260 = getelementptr inbounds float* %faction, i64 %idxprom56
  %40 = load float* %arrayidx260, align 4, !tbaa !3
  %add261 = fadd float %fiy3.0.lcssa, %40
  store float %add261, float* %arrayidx260, align 4, !tbaa !3
  %arrayidx267 = getelementptr inbounds float* %faction, i64 %idxprom60
  %41 = load float* %arrayidx267, align 4, !tbaa !3
  %add268 = fadd float %fiz3.0.lcssa, %41
  store float %add268, float* %arrayidx267, align 4, !tbaa !3
  %arrayidx273 = getelementptr inbounds float* %fshift, i64 %idxprom12
  %42 = load float* %arrayidx273, align 4, !tbaa !3
  %add274 = fadd float %fix1.0.lcssa, %42
  %add275 = fadd float %fix2.0.lcssa, %add274
  %add276 = fadd float %fix3.0.lcssa, %add275
  store float %add276, float* %arrayidx273, align 4, !tbaa !3
  %arrayidx281 = getelementptr inbounds float* %fshift, i64 %idxprom15
  %43 = load float* %arrayidx281, align 4, !tbaa !3
  %add282 = fadd float %fiy1.0.lcssa, %43
  %add283 = fadd float %fiy2.0.lcssa, %add282
  %add284 = fadd float %fiy3.0.lcssa, %add283
  store float %add284, float* %arrayidx281, align 4, !tbaa !3
  %arrayidx290 = getelementptr inbounds float* %fshift, i64 %idxprom18
  %44 = load float* %arrayidx290, align 4, !tbaa !3
  %add291 = fadd float %fiz1.0.lcssa, %44
  %add292 = fadd float %fiz2.0.lcssa, %add291
  %add293 = fadd float %fiz3.0.lcssa, %add292
  store float %add293, float* %arrayidx290, align 4, !tbaa !3
  %arrayidx298 = getelementptr inbounds i32* %gid, i64 %indvars.iv559
  %45 = load i32* %arrayidx298, align 4, !tbaa !0
  %idxprom299 = sext i32 %45 to i64
  %arrayidx300 = getelementptr inbounds float* %Vc, i64 %idxprom299
  %46 = load float* %arrayidx300, align 4, !tbaa !3
  %add301 = fadd float %vctot.0.lcssa, %46
  store float %add301, float* %arrayidx300, align 4, !tbaa !3
  %arrayidx305 = getelementptr inbounds float* %Vnb, i64 %idxprom299
  %47 = load float* %arrayidx305, align 4, !tbaa !3
  %add306 = fadd float %vnbtot.0.lcssa, %47
  store float %add306, float* %arrayidx305, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next560 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond, label %for.end311, label %for.end.for.body_crit_edge

for.end.for.body_crit_edge:                       ; preds = %for.end
  %arrayidx21.phi.trans.insert = getelementptr inbounds i32* %iinr, i64 %indvars.iv.next560
  %.pre = load i32* %arrayidx21.phi.trans.insert, align 4, !tbaa !0
  br label %for.body

for.end311:                                       ; preds = %for.end, %entry
  ret void
}
