define void @inl2210(i32 %nri, i32* nocapture %iinr, i32* nocapture %jindex, i32* nocapture %jjnr, i32* nocapture %shift, float* nocapture %shiftvec, float* nocapture %fshift, i32* nocapture %gid, float* nocapture %pos, float* nocapture %faction, float* nocapture %charge, float %facel, float* nocapture %Vc, float %krf, float %crf, i32* nocapture %type, i32 %ntype, float* nocapture %nbfp, float* nocapture %Vnb, i32* nocapture %nsatoms) #0 {
entry:
  %cmp884 = icmp sgt i32 %nri, 0
  br i1 %cmp884, label %for.body, label %for.end470

for.body:                                         ; preds = %for.end455, %entry
  %indvars.iv910 = phi i64 [ 0, %entry ], [ %indvars.iv.next911, %for.end455 ]
  %0 = trunc i64 %indvars.iv910 to i32
  %mul = mul nsw i32 %0, 3
  %idxprom = sext i32 %mul to i64
  %arrayidx = getelementptr inbounds i32* %nsatoms, i64 %idxprom
  %1 = load i32* %arrayidx, align 4, !tbaa !0
  %add = add nsw i32 %mul, 1
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds i32* %nsatoms, i64 %idxprom2
  %2 = load i32* %arrayidx3, align 4, !tbaa !0
  %add5 = add nsw i32 %mul, 2
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds i32* %nsatoms, i64 %idxprom6
  %3 = load i32* %arrayidx7, align 4, !tbaa !0
  %arrayidx9 = getelementptr inbounds i32* %shift, i64 %indvars.iv910
  %4 = load i32* %arrayidx9, align 4, !tbaa !0
  %mul10 = mul nsw i32 %4, 3
  %idxprom11 = sext i32 %mul10 to i64
  %arrayidx12 = getelementptr inbounds float* %shiftvec, i64 %idxprom11
  %5 = load float* %arrayidx12, align 4, !tbaa !3
  %add13 = add nsw i32 %mul10, 1
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds float* %shiftvec, i64 %idxprom14
  %6 = load float* %arrayidx15, align 4, !tbaa !3
  %add16 = add nsw i32 %mul10, 2
  %idxprom17 = sext i32 %add16 to i64
  %arrayidx18 = getelementptr inbounds float* %shiftvec, i64 %idxprom17
  %7 = load float* %arrayidx18, align 4, !tbaa !3
  %arrayidx20 = getelementptr inbounds i32* %iinr, i64 %indvars.iv910
  %8 = load i32* %arrayidx20, align 4, !tbaa !0
  %mul21 = mul i32 %8, 3
  %arrayidx23 = getelementptr inbounds i32* %jindex, i64 %indvars.iv910
  %9 = load i32* %arrayidx23, align 4, !tbaa !0
  %indvars.iv.next911 = add i64 %indvars.iv910, 1
  %arrayidx26 = getelementptr inbounds i32* %jindex, i64 %indvars.iv.next911
  %10 = load i32* %arrayidx26, align 4, !tbaa !0
  %cmp28840 = icmp sgt i32 %2, 0
  br i1 %cmp28840, label %for.body29.lr.ph, label %for.cond180.loopexit

for.body29.lr.ph:                                 ; preds = %for.body
  %cmp49829 = icmp slt i32 %9, %10
  %arrayidx157 = getelementptr inbounds float* %fshift, i64 %idxprom11
  %arrayidx163 = getelementptr inbounds float* %fshift, i64 %idxprom14
  %arrayidx170 = getelementptr inbounds float* %fshift, i64 %idxprom17
  %11 = sext i32 %9 to i64
  %12 = sext i32 %8 to i64
  %13 = sext i32 %mul21 to i64
  %14 = add i32 %2, %8
  %15 = mul i32 %14, 3
  br label %for.body29

for.body29:                                       ; preds = %for.end, %for.body29.lr.ph
  %indvars.iv888 = phi i64 [ %13, %for.body29.lr.ph ], [ %indvars.iv.next889, %for.end ]
  %indvars.iv886 = phi i64 [ %12, %for.body29.lr.ph ], [ %indvars.iv.next887, %for.end ]
  %s.0843 = phi i32 [ 0, %for.body29.lr.ph ], [ %inc178, %for.end ]
  %vctot.0842 = phi float [ 0.000000e+00, %for.body29.lr.ph ], [ %vctot.1.lcssa, %for.end ]
  %vnbtot.0841 = phi float [ 0.000000e+00, %for.body29.lr.ph ], [ %vnbtot.1.lcssa, %for.end ]
  %arrayidx31 = getelementptr inbounds float* %pos, i64 %indvars.iv888
  %16 = load float* %arrayidx31, align 4, !tbaa !3
  %add32 = fadd float %5, %16
  %17 = add nsw i64 %indvars.iv888, 1
  %arrayidx35 = getelementptr inbounds float* %pos, i64 %17
  %18 = load float* %arrayidx35, align 4, !tbaa !3
  %add36 = fadd float %6, %18
  %19 = add nsw i64 %indvars.iv888, 2
  %arrayidx39 = getelementptr inbounds float* %pos, i64 %19
  %20 = load float* %arrayidx39, align 4, !tbaa !3
  %add40 = fadd float %7, %20
  %arrayidx42 = getelementptr inbounds float* %charge, i64 %indvars.iv886
  %21 = load float* %arrayidx42, align 4, !tbaa !3
  %mul43 = fmul float %21, %facel
  %arrayidx46 = getelementptr inbounds i32* %type, i64 %indvars.iv886
  %22 = load i32* %arrayidx46, align 4, !tbaa !0
  %mul47 = mul i32 %22, %ntype
  br i1 %cmp49829, label %for.body50, label %for.end

for.body50:                                       ; preds = %for.body29, %for.body50
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body50 ], [ %11, %for.body29 ]
  %fiz1.0834 = phi float [ %add117, %for.body50 ], [ 0.000000e+00, %for.body29 ]
  %fiy1.0833 = phi float [ %add116, %for.body50 ], [ 0.000000e+00, %for.body29 ]
  %fix1.0832 = phi float [ %add115, %for.body50 ], [ 0.000000e+00, %for.body29 ]
  %vctot.1831 = phi float [ %add111, %for.body50 ], [ %vctot.0842, %for.body29 ]
  %vnbtot.1830 = phi float [ %sub95, %for.body50 ], [ %vnbtot.0841, %for.body29 ]
  %arrayidx52 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv
  %23 = load i32* %arrayidx52, align 4, !tbaa !0
  %mul53 = mul nsw i32 %23, 3
  %idxprom54 = sext i32 %mul53 to i64
  %arrayidx55 = getelementptr inbounds float* %pos, i64 %idxprom54
  %24 = load float* %arrayidx55, align 4, !tbaa !3
  %add56 = add nsw i32 %mul53, 1
  %idxprom57 = sext i32 %add56 to i64
  %arrayidx58 = getelementptr inbounds float* %pos, i64 %idxprom57
  %25 = load float* %arrayidx58, align 4, !tbaa !3
  %add59 = add nsw i32 %mul53, 2
  %idxprom60 = sext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds float* %pos, i64 %idxprom60
  %26 = load float* %arrayidx61, align 4, !tbaa !3
  %sub = fsub float %add32, %24
  %sub62 = fsub float %add36, %25
  %sub63 = fsub float %add40, %26
  %mul64 = fmul float %sub, %sub
  %mul65 = fmul float %sub62, %sub62
  %add66 = fadd float %mul64, %mul65
  %mul67 = fmul float %sub63, %sub63
  %add68 = fadd float %add66, %mul67
  %conv = fpext float %add68 to double
  %call = tail call double @sqrt(double %conv) #2
  %div = fdiv double 1.000000e+00, %call
  %conv69 = fptrunc double %div to float
  %mul70 = fmul float %add68, %conv69
  %mul71 = fmul float %conv69, %conv69
  %mul72 = fmul float %mul71, %mul71
  %mul73 = fmul float %mul71, %mul72
  %idxprom74 = sext i32 %23 to i64
  %arrayidx75 = getelementptr inbounds i32* %type, i64 %idxprom74
  %27 = load i32* %arrayidx75, align 4, !tbaa !0
  %tmp = add i32 %27, %mul47
  %tmp826 = mul i32 %tmp, 3
  %idxprom78 = sext i32 %tmp826 to i64
  %arrayidx79 = getelementptr inbounds float* %nbfp, i64 %idxprom78
  %28 = load float* %arrayidx79, align 4, !tbaa !3
  %mul80 = fmul float %28, %mul73
  %add81 = add nsw i32 %tmp826, 2
  %idxprom82 = sext i32 %add81 to i64
  %arrayidx83 = getelementptr inbounds float* %nbfp, i64 %idxprom82
  %29 = load float* %arrayidx83, align 4, !tbaa !3
  %mul84 = fmul float %mul70, %29
  %sub85 = fsub float -0.000000e+00, %mul84
  %conv86 = fpext float %sub85 to double
  %call87 = tail call double @exp(double %conv86) #2
  %add88 = add nsw i32 %tmp826, 1
  %idxprom89 = sext i32 %add88 to i64
  %arrayidx90 = getelementptr inbounds float* %nbfp, i64 %idxprom89
  %30 = load float* %arrayidx90, align 4, !tbaa !3
  %conv91 = fpext float %30 to double
  %mul92 = fmul double %call87, %conv91
  %conv93 = fptrunc double %mul92 to float
  %add94 = fadd float %vnbtot.1830, %conv93
  %sub95 = fsub float %add94, %mul80
  %arrayidx97 = getelementptr inbounds float* %charge, i64 %idxprom74
  %31 = load float* %arrayidx97, align 4, !tbaa !3
  %mul98 = fmul float %mul43, %31
  %mul99 = fmul float %add68, %krf
  %add100 = fadd float %conv69, %mul99
  %sub101 = fsub float %add100, %crf
  %mul102 = fmul float %sub101, %mul98
  %mul103 = fmul float %mul84, %conv93
  %mul104 = fmul float %mul80, 6.000000e+00
  %sub105 = fsub float %mul103, %mul104
  %mul106 = fmul float %mul99, 2.000000e+00
  %sub107 = fsub float %conv69, %mul106
  %mul108 = fmul float %sub107, %mul98
  %add109 = fadd float %mul108, %sub105
  %mul110 = fmul float %mul71, %add109
  %add111 = fadd float %vctot.1831, %mul102
  %mul112 = fmul float %sub, %mul110
  %mul113 = fmul float %sub62, %mul110
  %mul114 = fmul float %sub63, %mul110
  %add115 = fadd float %fix1.0832, %mul112
  %add116 = fadd float %fiy1.0833, %mul113
  %add117 = fadd float %fiz1.0834, %mul114
  %arrayidx119 = getelementptr inbounds float* %faction, i64 %idxprom54
  %32 = load float* %arrayidx119, align 4, !tbaa !3
  %sub120 = fsub float %32, %mul112
  store float %sub120, float* %arrayidx119, align 4, !tbaa !3
  %arrayidx125 = getelementptr inbounds float* %faction, i64 %idxprom57
  %33 = load float* %arrayidx125, align 4, !tbaa !3
  %sub126 = fsub float %33, %mul113
  store float %sub126, float* %arrayidx125, align 4, !tbaa !3
  %arrayidx132 = getelementptr inbounds float* %faction, i64 %idxprom60
  %34 = load float* %arrayidx132, align 4, !tbaa !3
  %sub133 = fsub float %34, %mul114
  store float %sub133, float* %arrayidx132, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %35 = trunc i64 %indvars.iv.next to i32
  %cmp49 = icmp slt i32 %35, %10
  br i1 %cmp49, label %for.body50, label %for.end

for.end:                                          ; preds = %for.body50, %for.body29
  %fiz1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add117, %for.body50 ]
  %fiy1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add116, %for.body50 ]
  %fix1.0.lcssa = phi float [ 0.000000e+00, %for.body29 ], [ %add115, %for.body50 ]
  %vctot.1.lcssa = phi float [ %vctot.0842, %for.body29 ], [ %add111, %for.body50 ]
  %vnbtot.1.lcssa = phi float [ %vnbtot.0841, %for.body29 ], [ %sub95, %for.body50 ]
  %arrayidx138 = getelementptr inbounds float* %faction, i64 %indvars.iv888
  %36 = load float* %arrayidx138, align 4, !tbaa !3
  %add139 = fadd float %fix1.0.lcssa, %36
  store float %add139, float* %arrayidx138, align 4, !tbaa !3
  %arrayidx144 = getelementptr inbounds float* %faction, i64 %17
  %37 = load float* %arrayidx144, align 4, !tbaa !3
  %add145 = fadd float %fiy1.0.lcssa, %37
  store float %add145, float* %arrayidx144, align 4, !tbaa !3
  %arrayidx151 = getelementptr inbounds float* %faction, i64 %19
  %38 = load float* %arrayidx151, align 4, !tbaa !3
  %add152 = fadd float %fiz1.0.lcssa, %38
  store float %add152, float* %arrayidx151, align 4, !tbaa !3
  %39 = load float* %arrayidx157, align 4, !tbaa !3
  %add158 = fadd float %fix1.0.lcssa, %39
  store float %add158, float* %arrayidx157, align 4, !tbaa !3
  %40 = load float* %arrayidx163, align 4, !tbaa !3
  %add164 = fadd float %fiy1.0.lcssa, %40
  store float %add164, float* %arrayidx163, align 4, !tbaa !3
  %41 = load float* %arrayidx170, align 4, !tbaa !3
  %add171 = fadd float %fiz1.0.lcssa, %41
  store float %add171, float* %arrayidx170, align 4, !tbaa !3
  %indvars.iv.next887 = add i64 %indvars.iv886, 1
  %indvars.iv.next889 = add i64 %indvars.iv888, 3
  %inc178 = add nsw i32 %s.0843, 1
  %exitcond = icmp eq i32 %inc178, %2
  br i1 %exitcond, label %for.cond27.for.cond180.loopexit_crit_edge, label %for.body29

for.cond27.for.cond180.loopexit_crit_edge:        ; preds = %for.end
  %42 = add i32 %2, %8
  br label %for.cond180.loopexit

for.cond180.loopexit:                             ; preds = %for.cond27.for.cond180.loopexit_crit_edge, %for.body
  %ii.0.lcssa = phi i32 [ %42, %for.cond27.for.cond180.loopexit_crit_edge ], [ %8, %for.body ]
  %ii3.0.lcssa = phi i32 [ %15, %for.cond27.for.cond180.loopexit_crit_edge ], [ %mul21, %for.body ]
  %vctot.0.lcssa = phi float [ %vctot.1.lcssa, %for.cond27.for.cond180.loopexit_crit_edge ], [ 0.000000e+00, %for.body ]
  %vnbtot.0.lcssa = phi float [ %vnbtot.1.lcssa, %for.cond27.for.cond180.loopexit_crit_edge ], [ 0.000000e+00, %for.body ]
  %cmp181860 = icmp slt i32 %2, %3
  br i1 %cmp181860, label %for.body183.lr.ph, label %for.cond309.loopexit

for.body183.lr.ph:                                ; preds = %for.cond180.loopexit
  %cmp199850 = icmp slt i32 %9, %10
  %arrayidx286 = getelementptr inbounds float* %fshift, i64 %idxprom11
  %arrayidx292 = getelementptr inbounds float* %fshift, i64 %idxprom14
  %arrayidx299 = getelementptr inbounds float* %fshift, i64 %idxprom17
  %43 = sext i32 %9 to i64
  %44 = sext i32 %ii.0.lcssa to i64
  %45 = sext i32 %ii3.0.lcssa to i64
  %46 = mul i32 %3, 3
  %47 = add i32 %ii.0.lcssa, %3
  br label %for.body183

for.body183:                                      ; preds = %for.end265, %for.body183.lr.ph
  %indvars.iv896 = phi i64 [ %45, %for.body183.lr.ph ], [ %indvars.iv.next897, %for.end265 ]
  %indvars.iv894 = phi i64 [ %44, %for.body183.lr.ph ], [ %indvars.iv.next895, %for.end265 ]
  %s.1862 = phi i32 [ %2, %for.body183.lr.ph ], [ %inc307, %for.end265 ]
  %vctot.2861 = phi float [ %vctot.0.lcssa, %for.body183.lr.ph ], [ %vctot.3.lcssa, %for.end265 ]
  %arrayidx185 = getelementptr inbounds float* %pos, i64 %indvars.iv896
  %48 = load float* %arrayidx185, align 4, !tbaa !3
  %add186 = fadd float %5, %48
  %49 = add nsw i64 %indvars.iv896, 1
  %arrayidx189 = getelementptr inbounds float* %pos, i64 %49
  %50 = load float* %arrayidx189, align 4, !tbaa !3
  %add190 = fadd float %6, %50
  %51 = add nsw i64 %indvars.iv896, 2
  %arrayidx193 = getelementptr inbounds float* %pos, i64 %51
  %52 = load float* %arrayidx193, align 4, !tbaa !3
  %add194 = fadd float %7, %52
  %arrayidx196 = getelementptr inbounds float* %charge, i64 %indvars.iv894
  %53 = load float* %arrayidx196, align 4, !tbaa !3
  %mul197 = fmul float %53, %facel
  br i1 %cmp199850, label %for.body201, label %for.end265

for.body201:                                      ; preds = %for.body183, %for.body201
  %indvars.iv892 = phi i64 [ %indvars.iv.next893, %for.body201 ], [ %43, %for.body183 ]
  %fiz1.1854 = phi float [ %add243, %for.body201 ], [ 0.000000e+00, %for.body183 ]
  %fiy1.1853 = phi float [ %add242, %for.body201 ], [ 0.000000e+00, %for.body183 ]
  %fix1.1852 = phi float [ %add241, %for.body201 ], [ 0.000000e+00, %for.body183 ]
  %vctot.3851 = phi float [ %add237, %for.body201 ], [ %vctot.2861, %for.body183 ]
  %arrayidx203 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv892
  %54 = load i32* %arrayidx203, align 4, !tbaa !0
  %mul204 = mul nsw i32 %54, 3
  %idxprom205 = sext i32 %mul204 to i64
  %arrayidx206 = getelementptr inbounds float* %pos, i64 %idxprom205
  %55 = load float* %arrayidx206, align 4, !tbaa !3
  %add207 = add nsw i32 %mul204, 1
  %idxprom208 = sext i32 %add207 to i64
  %arrayidx209 = getelementptr inbounds float* %pos, i64 %idxprom208
  %56 = load float* %arrayidx209, align 4, !tbaa !3
  %add210 = add nsw i32 %mul204, 2
  %idxprom211 = sext i32 %add210 to i64
  %arrayidx212 = getelementptr inbounds float* %pos, i64 %idxprom211
  %57 = load float* %arrayidx212, align 4, !tbaa !3
  %sub213 = fsub float %add186, %55
  %sub214 = fsub float %add190, %56
  %sub215 = fsub float %add194, %57
  %mul216 = fmul float %sub213, %sub213
  %mul217 = fmul float %sub214, %sub214
  %add218 = fadd float %mul216, %mul217
  %mul219 = fmul float %sub215, %sub215
  %add220 = fadd float %add218, %mul219
  %conv221 = fpext float %add220 to double
  %call222 = tail call double @sqrt(double %conv221) #2
  %div223 = fdiv double 1.000000e+00, %call222
  %conv224 = fptrunc double %div223 to float
  %mul225 = fmul float %conv224, %conv224
  %idxprom226 = sext i32 %54 to i64
  %arrayidx227 = getelementptr inbounds float* %charge, i64 %idxprom226
  %58 = load float* %arrayidx227, align 4, !tbaa !3
  %mul228 = fmul float %mul197, %58
  %mul229 = fmul float %add220, %krf
  %add230 = fadd float %conv224, %mul229
  %sub231 = fsub float %add230, %crf
  %mul232 = fmul float %mul228, %sub231
  %mul233 = fmul float %mul229, 2.000000e+00
  %sub234 = fsub float %conv224, %mul233
  %mul235 = fmul float %mul228, %sub234
  %mul236 = fmul float %mul225, %mul235
  %add237 = fadd float %vctot.3851, %mul232
  %mul238 = fmul float %sub213, %mul236
  %mul239 = fmul float %sub214, %mul236
  %mul240 = fmul float %sub215, %mul236
  %add241 = fadd float %fix1.1852, %mul238
  %add242 = fadd float %fiy1.1853, %mul239
  %add243 = fadd float %fiz1.1854, %mul240
  %arrayidx245 = getelementptr inbounds float* %faction, i64 %idxprom205
  %59 = load float* %arrayidx245, align 4, !tbaa !3
  %sub246 = fsub float %59, %mul238
  store float %sub246, float* %arrayidx245, align 4, !tbaa !3
  %arrayidx251 = getelementptr inbounds float* %faction, i64 %idxprom208
  %60 = load float* %arrayidx251, align 4, !tbaa !3
  %sub252 = fsub float %60, %mul239
  store float %sub252, float* %arrayidx251, align 4, !tbaa !3
  %arrayidx258 = getelementptr inbounds float* %faction, i64 %idxprom211
  %61 = load float* %arrayidx258, align 4, !tbaa !3
  %sub259 = fsub float %61, %mul240
  store float %sub259, float* %arrayidx258, align 4, !tbaa !3
  %indvars.iv.next893 = add i64 %indvars.iv892, 1
  %62 = trunc i64 %indvars.iv.next893 to i32
  %cmp199 = icmp slt i32 %62, %10
  br i1 %cmp199, label %for.body201, label %for.end265

for.end265:                                       ; preds = %for.body201, %for.body183
  %fiz1.1.lcssa = phi float [ 0.000000e+00, %for.body183 ], [ %add243, %for.body201 ]
  %fiy1.1.lcssa = phi float [ 0.000000e+00, %for.body183 ], [ %add242, %for.body201 ]
  %fix1.1.lcssa = phi float [ 0.000000e+00, %for.body183 ], [ %add241, %for.body201 ]
  %vctot.3.lcssa = phi float [ %vctot.2861, %for.body183 ], [ %add237, %for.body201 ]
  %arrayidx267 = getelementptr inbounds float* %faction, i64 %indvars.iv896
  %63 = load float* %arrayidx267, align 4, !tbaa !3
  %add268 = fadd float %fix1.1.lcssa, %63
  store float %add268, float* %arrayidx267, align 4, !tbaa !3
  %arrayidx273 = getelementptr inbounds float* %faction, i64 %49
  %64 = load float* %arrayidx273, align 4, !tbaa !3
  %add274 = fadd float %fiy1.1.lcssa, %64
  store float %add274, float* %arrayidx273, align 4, !tbaa !3
  %arrayidx280 = getelementptr inbounds float* %faction, i64 %51
  %65 = load float* %arrayidx280, align 4, !tbaa !3
  %add281 = fadd float %fiz1.1.lcssa, %65
  store float %add281, float* %arrayidx280, align 4, !tbaa !3
  %66 = load float* %arrayidx286, align 4, !tbaa !3
  %add287 = fadd float %fix1.1.lcssa, %66
  store float %add287, float* %arrayidx286, align 4, !tbaa !3
  %67 = load float* %arrayidx292, align 4, !tbaa !3
  %add293 = fadd float %fiy1.1.lcssa, %67
  store float %add293, float* %arrayidx292, align 4, !tbaa !3
  %68 = load float* %arrayidx299, align 4, !tbaa !3
  %add300 = fadd float %fiz1.1.lcssa, %68
  store float %add300, float* %arrayidx299, align 4, !tbaa !3
  %indvars.iv.next895 = add i64 %indvars.iv894, 1
  %indvars.iv.next897 = add i64 %indvars.iv896, 3
  %inc307 = add nsw i32 %s.1862, 1
  %exitcond900 = icmp eq i32 %inc307, %3
  br i1 %exitcond900, label %for.cond180.for.cond309.loopexit_crit_edge, label %for.body183

for.cond180.for.cond309.loopexit_crit_edge:       ; preds = %for.end265
  %69 = add i32 %ii3.0.lcssa, %46
  %70 = mul i32 %2, -3
  %71 = add i32 %69, %70
  %72 = sub i32 %47, %2
  br label %for.cond309.loopexit

for.cond309.loopexit:                             ; preds = %for.cond180.for.cond309.loopexit_crit_edge, %for.cond180.loopexit
  %ii.1.lcssa = phi i32 [ %72, %for.cond180.for.cond309.loopexit_crit_edge ], [ %ii.0.lcssa, %for.cond180.loopexit ]
  %ii3.1.lcssa = phi i32 [ %71, %for.cond180.for.cond309.loopexit_crit_edge ], [ %ii3.0.lcssa, %for.cond180.loopexit ]
  %vctot.2.lcssa = phi float [ %vctot.3.lcssa, %for.cond180.for.cond309.loopexit_crit_edge ], [ %vctot.0.lcssa, %for.cond180.loopexit ]
  %cmp310878 = icmp slt i32 %3, %1
  br i1 %cmp310878, label %for.body312.lr.ph, label %for.end455

for.body312.lr.ph:                                ; preds = %for.cond309.loopexit
  %cmp329868 = icmp slt i32 %9, %10
  %arrayidx433 = getelementptr inbounds float* %fshift, i64 %idxprom11
  %arrayidx439 = getelementptr inbounds float* %fshift, i64 %idxprom14
  %arrayidx446 = getelementptr inbounds float* %fshift, i64 %idxprom17
  %73 = sext i32 %9 to i64
  %74 = sext i32 %ii.1.lcssa to i64
  %75 = sext i32 %ii3.1.lcssa to i64
  br label %for.body312

for.body312:                                      ; preds = %for.end412, %for.body312.lr.ph
  %indvars.iv905 = phi i64 [ %75, %for.body312.lr.ph ], [ %indvars.iv.next906, %for.end412 ]
  %indvars.iv903 = phi i64 [ %74, %for.body312.lr.ph ], [ %indvars.iv.next904, %for.end412 ]
  %s.2880 = phi i32 [ %3, %for.body312.lr.ph ], [ %inc454, %for.end412 ]
  %vnbtot.2879 = phi float [ %vnbtot.0.lcssa, %for.body312.lr.ph ], [ %vnbtot.3.lcssa, %for.end412 ]
  %arrayidx314 = getelementptr inbounds float* %pos, i64 %indvars.iv905
  %76 = load float* %arrayidx314, align 4, !tbaa !3
  %add315 = fadd float %5, %76
  %77 = add nsw i64 %indvars.iv905, 1
  %arrayidx318 = getelementptr inbounds float* %pos, i64 %77
  %78 = load float* %arrayidx318, align 4, !tbaa !3
  %add319 = fadd float %6, %78
  %79 = add nsw i64 %indvars.iv905, 2
  %arrayidx322 = getelementptr inbounds float* %pos, i64 %79
  %80 = load float* %arrayidx322, align 4, !tbaa !3
  %add323 = fadd float %7, %80
  %arrayidx326 = getelementptr inbounds i32* %type, i64 %indvars.iv903
  %81 = load i32* %arrayidx326, align 4, !tbaa !0
  %mul327 = mul i32 %81, %ntype
  br i1 %cmp329868, label %for.body331, label %for.end412

for.body331:                                      ; preds = %for.body312, %for.body331
  %indvars.iv901 = phi i64 [ %indvars.iv.next902, %for.body331 ], [ %73, %for.body312 ]
  %fiz1.2872 = phi float [ %add390, %for.body331 ], [ 0.000000e+00, %for.body312 ]
  %fiy1.2871 = phi float [ %add389, %for.body331 ], [ 0.000000e+00, %for.body312 ]
  %fix1.2870 = phi float [ %add388, %for.body331 ], [ 0.000000e+00, %for.body312 ]
  %vnbtot.3869 = phi float [ %sub380, %for.body331 ], [ %vnbtot.2879, %for.body312 ]
  %arrayidx333 = getelementptr inbounds i32* %jjnr, i64 %indvars.iv901
  %82 = load i32* %arrayidx333, align 4, !tbaa !0
  %mul334 = mul nsw i32 %82, 3
  %idxprom335 = sext i32 %mul334 to i64
  %arrayidx336 = getelementptr inbounds float* %pos, i64 %idxprom335
  %83 = load float* %arrayidx336, align 4, !tbaa !3
  %add337 = add nsw i32 %mul334, 1
  %idxprom338 = sext i32 %add337 to i64
  %arrayidx339 = getelementptr inbounds float* %pos, i64 %idxprom338
  %84 = load float* %arrayidx339, align 4, !tbaa !3
  %add340 = add nsw i32 %mul334, 2
  %idxprom341 = sext i32 %add340 to i64
  %arrayidx342 = getelementptr inbounds float* %pos, i64 %idxprom341
  %85 = load float* %arrayidx342, align 4, !tbaa !3
  %sub343 = fsub float %add315, %83
  %sub344 = fsub float %add319, %84
  %sub345 = fsub float %add323, %85
  %mul346 = fmul float %sub343, %sub343
  %mul347 = fmul float %sub344, %sub344
  %add348 = fadd float %mul346, %mul347
  %mul349 = fmul float %sub345, %sub345
  %add350 = fadd float %add348, %mul349
  %conv351 = fpext float %add350 to double
  %call352 = tail call double @sqrt(double %conv351) #2
  %div353 = fdiv double 1.000000e+00, %call352
  %conv354 = fptrunc double %div353 to float
  %mul355 = fmul float %add350, %conv354
  %mul356 = fmul float %conv354, %conv354
  %mul357 = fmul float %mul356, %mul356
  %mul358 = fmul float %mul356, %mul357
  %idxprom359 = sext i32 %82 to i64
  %arrayidx360 = getelementptr inbounds i32* %type, i64 %idxprom359
  %86 = load i32* %arrayidx360, align 4, !tbaa !0
  %tmp827 = add i32 %86, %mul327
  %tmp828 = mul i32 %tmp827, 3
  %idxprom363 = sext i32 %tmp828 to i64
  %arrayidx364 = getelementptr inbounds float* %nbfp, i64 %idxprom363
  %87 = load float* %arrayidx364, align 4, !tbaa !3
  %mul365 = fmul float %87, %mul358
  %add366 = add nsw i32 %tmp828, 2
  %idxprom367 = sext i32 %add366 to i64
  %arrayidx368 = getelementptr inbounds float* %nbfp, i64 %idxprom367
  %88 = load float* %arrayidx368, align 4, !tbaa !3
  %mul369 = fmul float %mul355, %88
  %sub370 = fsub float -0.000000e+00, %mul369
  %conv371 = fpext float %sub370 to double
  %call372 = tail call double @exp(double %conv371) #2
  %add373 = add nsw i32 %tmp828, 1
  %idxprom374 = sext i32 %add373 to i64
  %arrayidx375 = getelementptr inbounds float* %nbfp, i64 %idxprom374
  %89 = load float* %arrayidx375, align 4, !tbaa !3
  %conv376 = fpext float %89 to double
  %mul377 = fmul double %call372, %conv376
  %conv378 = fptrunc double %mul377 to float
  %add379 = fadd float %vnbtot.3869, %conv378
  %sub380 = fsub float %add379, %mul365
  %mul381 = fmul float %mul369, %conv378
  %mul382 = fmul float %mul365, 6.000000e+00
  %sub383 = fsub float %mul381, %mul382
  %mul384 = fmul float %mul356, %sub383
  %mul385 = fmul float %sub343, %mul384
  %mul386 = fmul float %sub344, %mul384
  %mul387 = fmul float %sub345, %mul384
  %add388 = fadd float %fix1.2870, %mul385
  %add389 = fadd float %fiy1.2871, %mul386
  %add390 = fadd float %fiz1.2872, %mul387
  %arrayidx392 = getelementptr inbounds float* %faction, i64 %idxprom335
  %90 = load float* %arrayidx392, align 4, !tbaa !3
  %sub393 = fsub float %90, %mul385
  store float %sub393, float* %arrayidx392, align 4, !tbaa !3
  %arrayidx398 = getelementptr inbounds float* %faction, i64 %idxprom338
  %91 = load float* %arrayidx398, align 4, !tbaa !3
  %sub399 = fsub float %91, %mul386
  store float %sub399, float* %arrayidx398, align 4, !tbaa !3
  %arrayidx405 = getelementptr inbounds float* %faction, i64 %idxprom341
  %92 = load float* %arrayidx405, align 4, !tbaa !3
  %sub406 = fsub float %92, %mul387
  store float %sub406, float* %arrayidx405, align 4, !tbaa !3
  %indvars.iv.next902 = add i64 %indvars.iv901, 1
  %93 = trunc i64 %indvars.iv.next902 to i32
  %cmp329 = icmp slt i32 %93, %10
  br i1 %cmp329, label %for.body331, label %for.end412

for.end412:                                       ; preds = %for.body331, %for.body312
  %fiz1.2.lcssa = phi float [ 0.000000e+00, %for.body312 ], [ %add390, %for.body331 ]
  %fiy1.2.lcssa = phi float [ 0.000000e+00, %for.body312 ], [ %add389, %for.body331 ]
  %fix1.2.lcssa = phi float [ 0.000000e+00, %for.body312 ], [ %add388, %for.body331 ]
  %vnbtot.3.lcssa = phi float [ %vnbtot.2879, %for.body312 ], [ %sub380, %for.body331 ]
  %arrayidx414 = getelementptr inbounds float* %faction, i64 %indvars.iv905
  %94 = load float* %arrayidx414, align 4, !tbaa !3
  %add415 = fadd float %fix1.2.lcssa, %94
  store float %add415, float* %arrayidx414, align 4, !tbaa !3
  %arrayidx420 = getelementptr inbounds float* %faction, i64 %77
  %95 = load float* %arrayidx420, align 4, !tbaa !3
  %add421 = fadd float %fiy1.2.lcssa, %95
  store float %add421, float* %arrayidx420, align 4, !tbaa !3
  %arrayidx427 = getelementptr inbounds float* %faction, i64 %79
  %96 = load float* %arrayidx427, align 4, !tbaa !3
  %add428 = fadd float %fiz1.2.lcssa, %96
  store float %add428, float* %arrayidx427, align 4, !tbaa !3
  %97 = load float* %arrayidx433, align 4, !tbaa !3
  %add434 = fadd float %fix1.2.lcssa, %97
  store float %add434, float* %arrayidx433, align 4, !tbaa !3
  %98 = load float* %arrayidx439, align 4, !tbaa !3
  %add440 = fadd float %fiy1.2.lcssa, %98
  store float %add440, float* %arrayidx439, align 4, !tbaa !3
  %99 = load float* %arrayidx446, align 4, !tbaa !3
  %add447 = fadd float %fiz1.2.lcssa, %99
  store float %add447, float* %arrayidx446, align 4, !tbaa !3
  %indvars.iv.next904 = add i64 %indvars.iv903, 1
  %indvars.iv.next906 = add i64 %indvars.iv905, 3
  %inc454 = add nsw i32 %s.2880, 1
  %exitcond909 = icmp eq i32 %inc454, %1
  br i1 %exitcond909, label %for.end455, label %for.body312

for.end455:                                       ; preds = %for.end412, %for.cond309.loopexit
  %vnbtot.2.lcssa = phi float [ %vnbtot.0.lcssa, %for.cond309.loopexit ], [ %vnbtot.3.lcssa, %for.end412 ]
  %arrayidx457 = getelementptr inbounds i32* %gid, i64 %indvars.iv910
  %100 = load i32* %arrayidx457, align 4, !tbaa !0
  %idxprom458 = sext i32 %100 to i64
  %arrayidx459 = getelementptr inbounds float* %Vc, i64 %idxprom458
  %101 = load float* %arrayidx459, align 4, !tbaa !3
  %add460 = fadd float %vctot.2.lcssa, %101
  store float %add460, float* %arrayidx459, align 4, !tbaa !3
  %arrayidx464 = getelementptr inbounds float* %Vnb, i64 %idxprom458
  %102 = load float* %arrayidx464, align 4, !tbaa !3
  %add465 = fadd float %vnbtot.2.lcssa, %102
  store float %add465, float* %arrayidx464, align 4, !tbaa !3
  %lftr.wideiv = trunc i64 %indvars.iv.next911 to i32
  %exitcond912 = icmp eq i32 %lftr.wideiv, %nri
  br i1 %exitcond912, label %for.end470, label %for.body

for.end470:                                       ; preds = %for.end455, %entry
  ret void
}
