define void @calc_vir(%struct._IO_FILE* nocapture %log, i32 %nxf, [3 x float]* nocapture %x, [3 x float]* nocapture %f, [3 x float]* nocapture %vir) #0 {
entry:
  %cmp154 = icmp sgt i32 %nxf, 0
  br i1 %cmp154, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %dvzz.0164 = phi float [ %add68, %for.body ], [ 0.000000e+00, %entry ]
  %dvzy.0163 = phi float [ %add60, %for.body ], [ 0.000000e+00, %entry ]
  %dvzx.0162 = phi float [ %add52, %for.body ], [ 0.000000e+00, %entry ]
  %dvyz.0161 = phi float [ %add44, %for.body ], [ 0.000000e+00, %entry ]
  %dvyy.0160 = phi float [ %add36, %for.body ], [ 0.000000e+00, %entry ]
  %dvyx.0159 = phi float [ %add28, %for.body ], [ 0.000000e+00, %entry ]
  %dvxz.0158 = phi float [ %add20, %for.body ], [ 0.000000e+00, %entry ]
  %dvxy.0157 = phi float [ %add12, %for.body ], [ 0.000000e+00, %entry ]
  %dvxx.0156 = phi float [ %add, %for.body ], [ 0.000000e+00, %entry ]
  %arrayidx1 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv, i64 0
  %0 = load float* %arrayidx1, align 4, !tbaa !0
  %arrayidx4 = getelementptr inbounds [3 x float]* %f, i64 %indvars.iv, i64 0
  %1 = load float* %arrayidx4, align 4, !tbaa !0
  %mul = fmul float %0, %1
  %add = fadd float %dvxx.0156, %mul
  %arrayidx10 = getelementptr inbounds [3 x float]* %f, i64 %indvars.iv, i64 1
  %2 = load float* %arrayidx10, align 4, !tbaa !0
  %mul11 = fmul float %0, %2
  %add12 = fadd float %dvxy.0157, %mul11
  %arrayidx18 = getelementptr inbounds [3 x float]* %f, i64 %indvars.iv, i64 2
  %3 = load float* %arrayidx18, align 4, !tbaa !0
  %mul19 = fmul float %0, %3
  %add20 = fadd float %dvxz.0158, %mul19
  %arrayidx23 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv, i64 1
  %4 = load float* %arrayidx23, align 4, !tbaa !0
  %mul27 = fmul float %1, %4
  %add28 = fadd float %dvyx.0159, %mul27
  %mul35 = fmul float %2, %4
  %add36 = fadd float %dvyy.0160, %mul35
  %mul43 = fmul float %3, %4
  %add44 = fadd float %dvyz.0161, %mul43
  %arrayidx47 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv, i64 2
  %5 = load float* %arrayidx47, align 4, !tbaa !0
  %mul51 = fmul float %1, %5
  %add52 = fadd float %dvzx.0162, %mul51
  %mul59 = fmul float %2, %5
  %add60 = fadd float %dvzy.0163, %mul59
  %mul67 = fmul float %3, %5
  %add68 = fadd float %dvzz.0164, %mul67
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nxf
  br i1 %exitcond, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %phitmp = fpext float %add to double
  %phitmp173 = fmul double %phitmp, 5.000000e-01
  %phitmp174 = fpext float %add12 to double
  %phitmp175 = fmul double %phitmp174, 5.000000e-01
  %phitmp176 = fpext float %add20 to double
  %phitmp177 = fmul double %phitmp176, 5.000000e-01
  %phitmp178 = fpext float %add28 to double
  %phitmp179 = fmul double %phitmp178, 5.000000e-01
  %phitmp180 = fpext float %add36 to double
  %phitmp181 = fmul double %phitmp180, 5.000000e-01
  %phitmp182 = fpext float %add44 to double
  %phitmp183 = fmul double %phitmp182, 5.000000e-01
  %phitmp184 = fpext float %add52 to double
  %phitmp185 = fmul double %phitmp184, 5.000000e-01
  %phitmp186 = fpext float %add60 to double
  %phitmp187 = fmul double %phitmp186, 5.000000e-01
  %phitmp188 = fpext float %add68 to double
  %phitmp189 = fmul double %phitmp188, 5.000000e-01
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %entry
  %dvzz.0.lcssa = phi double [ %phitmp189, %for.cond.for.end_crit_edge ], [ 0.000000e+00, %entry ]
  %dvzy.0.lcssa = phi double [ %phitmp187, %for.cond.for.end_crit_edge ], [ 0.000000e+00, %entry ]
  %dvzx.0.lcssa = phi double [ %phitmp185, %for.cond.for.end_crit_edge ], [ 0.000000e+00, %entry ]
  %dvyz.0.lcssa = phi double [ %phitmp183, %for.cond.for.end_crit_edge ], [ 0.000000e+00, %entry ]
  %dvyy.0.lcssa = phi double [ %phitmp181, %for.cond.for.end_crit_edge ], [ 0.000000e+00, %entry ]
  %dvyx.0.lcssa = phi double [ %phitmp179, %for.cond.for.end_crit_edge ], [ 0.000000e+00, %entry ]
  %dvxz.0.lcssa = phi double [ %phitmp177, %for.cond.for.end_crit_edge ], [ 0.000000e+00, %entry ]
  %dvxy.0.lcssa = phi double [ %phitmp175, %for.cond.for.end_crit_edge ], [ 0.000000e+00, %entry ]
  %dvxx.0.lcssa = phi double [ %phitmp173, %for.cond.for.end_crit_edge ], [ 0.000000e+00, %entry ]
  %arraydecay = getelementptr inbounds [3 x float]* %vir, i64 0, i64 0
  %6 = load float* %arraydecay, align 4, !tbaa !0
  %conv1.i = fpext float %6 to double
  %sub.i = fsub double %conv1.i, %dvxx.0.lcssa
  %conv2.i = fptrunc double %sub.i to float
  store float %conv2.i, float* %arraydecay, align 4, !tbaa !0
  %arrayidx5.i = getelementptr inbounds [3 x float]* %vir, i64 0, i64 1
  %7 = load float* %arrayidx5.i, align 4, !tbaa !0
  %conv6.i = fpext float %7 to double
  %sub7.i = fsub double %conv6.i, %dvxy.0.lcssa
  %conv8.i = fptrunc double %sub7.i to float
  store float %conv8.i, float* %arrayidx5.i, align 4, !tbaa !0
  %arrayidx11.i = getelementptr inbounds [3 x float]* %vir, i64 0, i64 2
  %8 = load float* %arrayidx11.i, align 4, !tbaa !0
  %conv12.i = fpext float %8 to double
  %sub13.i = fsub double %conv12.i, %dvxz.0.lcssa
  %conv14.i = fptrunc double %sub13.i to float
  store float %conv14.i, float* %arrayidx11.i, align 4, !tbaa !0
  %arraydecay71 = getelementptr inbounds [3 x float]* %vir, i64 1, i64 0
  %9 = load float* %arraydecay71, align 4, !tbaa !0
  %conv1.i139 = fpext float %9 to double
  %sub.i140 = fsub double %conv1.i139, %dvyx.0.lcssa
  %conv2.i141 = fptrunc double %sub.i140 to float
  store float %conv2.i141, float* %arraydecay71, align 4, !tbaa !0
  %arrayidx5.i144 = getelementptr inbounds [3 x float]* %vir, i64 1, i64 1
  %10 = load float* %arrayidx5.i144, align 4, !tbaa !0
  %conv6.i145 = fpext float %10 to double
  %sub7.i146 = fsub double %conv6.i145, %dvyy.0.lcssa
  %conv8.i147 = fptrunc double %sub7.i146 to float
  store float %conv8.i147, float* %arrayidx5.i144, align 4, !tbaa !0
  %arrayidx11.i150 = getelementptr inbounds [3 x float]* %vir, i64 1, i64 2
  %11 = load float* %arrayidx11.i150, align 4, !tbaa !0
  %conv12.i151 = fpext float %11 to double
  %sub13.i152 = fsub double %conv12.i151, %dvyz.0.lcssa
  %conv14.i153 = fptrunc double %sub13.i152 to float
  store float %conv14.i153, float* %arrayidx11.i150, align 4, !tbaa !0
  %arraydecay73 = getelementptr inbounds [3 x float]* %vir, i64 2, i64 0
  %12 = load float* %arraydecay73, align 4, !tbaa !0
  %conv1.i122 = fpext float %12 to double
  %sub.i123 = fsub double %conv1.i122, %dvzx.0.lcssa
  %conv2.i124 = fptrunc double %sub.i123 to float
  store float %conv2.i124, float* %arraydecay73, align 4, !tbaa !0
  %arrayidx5.i127 = getelementptr inbounds [3 x float]* %vir, i64 2, i64 1
  %13 = load float* %arrayidx5.i127, align 4, !tbaa !0
  %conv6.i128 = fpext float %13 to double
  %sub7.i129 = fsub double %conv6.i128, %dvzy.0.lcssa
  %conv8.i130 = fptrunc double %sub7.i129 to float
  store float %conv8.i130, float* %arrayidx5.i127, align 4, !tbaa !0
  %arrayidx11.i133 = getelementptr inbounds [3 x float]* %vir, i64 2, i64 2
  %14 = load float* %arrayidx11.i133, align 4, !tbaa !0
  %conv12.i134 = fpext float %14 to double
  %sub13.i135 = fsub double %conv12.i134, %dvzz.0.lcssa
  %conv14.i136 = fptrunc double %sub13.i135 to float
  store float %conv14.i136, float* %arrayidx11.i133, align 4, !tbaa !0
  ret void
}
