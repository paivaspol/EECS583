define void @move_cgcm(%struct._IO_FILE* nocapture %log, %struct.t_commrec* nocapture %cr, [3 x float]* %cg_cm, i32* nocapture %nload) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._IO_FILE* %log}, i64 0, metadata !290), !dbg !403
  tail call void @llvm.dbg.value(metadata !{%struct.t_commrec* %cr}, i64 0, metadata !291), !dbg !403
  tail call void @llvm.dbg.value(metadata !{[3 x float]* %cg_cm}, i64 0, metadata !292), !dbg !403
  tail call void @llvm.dbg.value(metadata !{i32* %nload}, i64 0, metadata !293), !dbg !403
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !297), !dbg !404
  tail call void @llvm.dbg.value(metadata !137, i64 0, metadata !294), !dbg !405
  %nnodes = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 1, !dbg !405
  %0 = load i32* %nnodes, align 4, !dbg !405, !tbaa !324
  %sub63 = add nsw i32 %0, -1, !dbg !405
  %cmp64 = icmp sgt i32 %sub63, 0, !dbg !405
  br i1 %cmp64, label %for.body.lr.ph, label %for.end, !dbg !405

for.body.lr.ph:                                   ; preds = %entry
  %nodeid = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 0, !dbg !404
  %1 = load i32* %nodeid, align 4, !dbg !404, !tbaa !324
  %left = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 2, !dbg !407
  %right = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 3, !dbg !409
  br label %for.body, !dbg !405

for.body:                                         ; preds = %for.body.lr.ph, %cond.end20
  %cur.066 = phi i32 [ %1, %for.body.lr.ph ], [ %rem38, %cond.end20 ]
  %i.065 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %cond.end20 ]
  %cmp1 = icmp eq i32 %cur.066, 0, !dbg !410
  br i1 %cmp1, label %cond.end, label %cond.false, !dbg !410

cond.false:                                       ; preds = %for.body
  %sub2 = add nsw i32 %cur.066, -1, !dbg !410
  %idxprom = sext i32 %sub2 to i64, !dbg !410
  %arrayidx = getelementptr inbounds i32* %nload, i64 %idxprom, !dbg !410
  %2 = load i32* %arrayidx, align 4, !dbg !410, !tbaa !324
  br label %cond.end, !dbg !410

cond.end:                                         ; preds = %for.body, %cond.false
  %cond = phi i32 [ %2, %cond.false ], [ 0, %for.body ], !dbg !410
  tail call void @llvm.dbg.value(metadata !{i32 %cond}, i64 0, metadata !295), !dbg !410
  %idxprom3 = sext i32 %cur.066 to i64, !dbg !411
  %arrayidx4 = getelementptr inbounds i32* %nload, i64 %idxprom3, !dbg !411
  %3 = load i32* %arrayidx4, align 4, !dbg !411, !tbaa !324
  %sub5 = sub nsw i32 %3, %cond, !dbg !411
  tail call void @llvm.dbg.value(metadata !{i32 %sub5}, i64 0, metadata !296), !dbg !411
  %4 = load i32* %left, align 4, !dbg !407, !tbaa !324
  %idxprom6 = sext i32 %cond to i64, !dbg !407
  %arraydecay = getelementptr inbounds [3 x float]* %cg_cm, i64 %idxprom6, i64 0, !dbg !407
  %5 = bitcast float* %arraydecay to i8*, !dbg !407
  %mul = mul i32 %sub5, 12, !dbg !407
  tail call void @gmx_tx(i32 %4, i8* %5, i32 %mul) #3, !dbg !407
  %add = add nsw i32 %cur.066, 1, !dbg !412
  %6 = load i32* %nnodes, align 4, !dbg !412, !tbaa !324
  %rem = srem i32 %add, %6, !dbg !412
  %cmp10 = icmp eq i32 %rem, 0, !dbg !412
  br i1 %cmp10, label %cond.end20, label %cond.false13, !dbg !412

cond.false13:                                     ; preds = %cond.end
  %sub17 = add nsw i32 %rem, -1, !dbg !412
  %idxprom18 = sext i32 %sub17 to i64, !dbg !412
  %arrayidx19 = getelementptr inbounds i32* %nload, i64 %idxprom18, !dbg !412
  %7 = load i32* %arrayidx19, align 4, !dbg !412, !tbaa !324
  br label %cond.end20, !dbg !412

cond.end20:                                       ; preds = %cond.end, %cond.false13
  %cond21 = phi i32 [ %7, %cond.false13 ], [ 0, %cond.end ], !dbg !412
  tail call void @llvm.dbg.value(metadata !{i32 %cond21}, i64 0, metadata !295), !dbg !412
  %idxprom25 = sext i32 %rem to i64, !dbg !413
  %arrayidx26 = getelementptr inbounds i32* %nload, i64 %idxprom25, !dbg !413
  %8 = load i32* %arrayidx26, align 4, !dbg !413, !tbaa !324
  %sub27 = sub nsw i32 %8, %cond21, !dbg !413
  tail call void @llvm.dbg.value(metadata !{i32 %sub27}, i64 0, metadata !296), !dbg !413
  %9 = load i32* %right, align 4, !dbg !409, !tbaa !324
  %idxprom28 = sext i32 %cond21 to i64, !dbg !409
  %arraydecay30 = getelementptr inbounds [3 x float]* %cg_cm, i64 %idxprom28, i64 0, !dbg !409
  %10 = bitcast float* %arraydecay30 to i8*, !dbg !409
  %mul32 = mul i32 %sub27, 12, !dbg !409
  tail call void @gmx_rx(i32 %9, i8* %10, i32 %mul32) #3, !dbg !409
  %11 = load i32* %left, align 4, !dbg !414, !tbaa !324
  tail call void @gmx_tx_wait(i32 %11) #3, !dbg !414
  %12 = load i32* %right, align 4, !dbg !415, !tbaa !324
  tail call void @gmx_rx_wait(i32 %12) #3, !dbg !415
  %13 = load i32* %nnodes, align 4, !dbg !416, !tbaa !324
  %rem38 = srem i32 %add, %13, !dbg !416
  tail call void @llvm.dbg.value(metadata !{i32 %rem38}, i64 0, metadata !297), !dbg !416
  %inc = add nsw i32 %i.065, 1, !dbg !405
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !294), !dbg !405
  %sub = add nsw i32 %13, -1, !dbg !405
  %cmp = icmp slt i32 %inc, %sub, !dbg !405
  br i1 %cmp, label %for.body, label %for.end, !dbg !405

for.end:                                          ; preds = %cond.end20, %entry
  ret void, !dbg !417
}
