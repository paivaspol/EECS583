define void @move_cgcm(%struct._IO_FILE* nocapture %log, %struct.t_commrec* nocapture %cr, [3 x float]* %cg_cm, i32* nocapture %nload) #0 {
entry:
  %nnodes = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 1
  %0 = load i32* %nnodes, align 4, !tbaa !0
  %sub63 = add nsw i32 %0, -1
  %cmp64 = icmp sgt i32 %sub63, 0
  br i1 %cmp64, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %nodeid = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 0
  %1 = load i32* %nodeid, align 4, !tbaa !0
  %left = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 2
  %right = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %cond.end20
  %cur.066 = phi i32 [ %1, %for.body.lr.ph ], [ %rem38, %cond.end20 ]
  %i.065 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %cond.end20 ]
  %cmp1 = icmp eq i32 %cur.066, 0
  br i1 %cmp1, label %cond.end, label %cond.false

cond.false:                                       ; preds = %for.body
  %sub2 = add nsw i32 %cur.066, -1
  %idxprom = sext i32 %sub2 to i64
  %arrayidx = getelementptr inbounds i32* %nload, i64 %idxprom
  %2 = load i32* %arrayidx, align 4, !tbaa !0
  br label %cond.end

cond.end:                                         ; preds = %for.body, %cond.false
  %cond = phi i32 [ %2, %cond.false ], [ 0, %for.body ]
  %idxprom3 = sext i32 %cur.066 to i64
  %arrayidx4 = getelementptr inbounds i32* %nload, i64 %idxprom3
  %3 = load i32* %arrayidx4, align 4, !tbaa !0
  %sub5 = sub nsw i32 %3, %cond
  %4 = load i32* %left, align 4, !tbaa !0
  %idxprom6 = sext i32 %cond to i64
  %arraydecay = getelementptr inbounds [3 x float]* %cg_cm, i64 %idxprom6, i64 0
  %5 = bitcast float* %arraydecay to i8*
  %mul = mul i32 %sub5, 12
  tail call void @gmx_tx(i32 %4, i8* %5, i32 %mul) #2
  %add = add nsw i32 %cur.066, 1
  %6 = load i32* %nnodes, align 4, !tbaa !0
  %rem = srem i32 %add, %6
  %cmp10 = icmp eq i32 %rem, 0
  br i1 %cmp10, label %cond.end20, label %cond.false13

cond.false13:                                     ; preds = %cond.end
  %sub17 = add nsw i32 %rem, -1
  %idxprom18 = sext i32 %sub17 to i64
  %arrayidx19 = getelementptr inbounds i32* %nload, i64 %idxprom18
  %7 = load i32* %arrayidx19, align 4, !tbaa !0
  br label %cond.end20

cond.end20:                                       ; preds = %cond.end, %cond.false13
  %cond21 = phi i32 [ %7, %cond.false13 ], [ 0, %cond.end ]
  %idxprom25 = sext i32 %rem to i64
  %arrayidx26 = getelementptr inbounds i32* %nload, i64 %idxprom25
  %8 = load i32* %arrayidx26, align 4, !tbaa !0
  %sub27 = sub nsw i32 %8, %cond21
  %9 = load i32* %right, align 4, !tbaa !0
  %idxprom28 = sext i32 %cond21 to i64
  %arraydecay30 = getelementptr inbounds [3 x float]* %cg_cm, i64 %idxprom28, i64 0
  %10 = bitcast float* %arraydecay30 to i8*
  %mul32 = mul i32 %sub27, 12
  tail call void @gmx_rx(i32 %9, i8* %10, i32 %mul32) #2
  %11 = load i32* %left, align 4, !tbaa !0
  tail call void @gmx_tx_wait(i32 %11) #2
  %12 = load i32* %right, align 4, !tbaa !0
  tail call void @gmx_rx_wait(i32 %12) #2
  %13 = load i32* %nnodes, align 4, !tbaa !0
  %rem38 = srem i32 %add, %13
  %inc = add nsw i32 %i.065, 1
  %sub = add nsw i32 %13, -1
  %cmp = icmp slt i32 %inc, %sub
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %cond.end20, %entry
  ret void
}
