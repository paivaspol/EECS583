define void @move_rvecs(%struct.__sFILE* nocapture readnone %log, i32 %bForward, i32 %bSum, i32 %left, i32 %right, [3 x float]* %vecs, [3 x float]* %buf, i32 %shift, %struct.t_nsborder* %nsb, %struct.t_nrnb* nocapture %nrnb) #4 {
  tail call void @llvm.dbg.value(metadata %struct.__sFILE* %log, i64 0, metadata !368, metadata !450), !dbg !613
  tail call void @llvm.dbg.value(metadata i32 %bForward, i64 0, metadata !369, metadata !450), !dbg !614
  tail call void @llvm.dbg.value(metadata i32 %bSum, i64 0, metadata !370, metadata !450), !dbg !615
  tail call void @llvm.dbg.value(metadata i32 %left, i64 0, metadata !371, metadata !450), !dbg !616
  tail call void @llvm.dbg.value(metadata i32 %right, i64 0, metadata !372, metadata !450), !dbg !617
  tail call void @llvm.dbg.value(metadata [3 x float]* %vecs, i64 0, metadata !373, metadata !450), !dbg !618
  tail call void @llvm.dbg.value(metadata [3 x float]* %buf, i64 0, metadata !374, metadata !450), !dbg !619
  tail call void @llvm.dbg.value(metadata i32 %shift, i64 0, metadata !375, metadata !450), !dbg !620
  tail call void @llvm.dbg.value(metadata %struct.t_nsborder* %nsb, i64 0, metadata !376, metadata !450), !dbg !621
  tail call void @llvm.dbg.value(metadata %struct.t_nrnb* %nrnb, i64 0, metadata !377, metadata !450), !dbg !622
  tail call void @llvm.dbg.value(metadata i32 137, i64 0, metadata !380, metadata !450), !dbg !623
  tail call void @llvm.dbg.value(metadata i32 391, i64 0, metadata !381, metadata !450), !dbg !624
  %1 = icmp ne i32 %bSum, 0, !dbg !625
  %2 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 0, !dbg !627
  %3 = load i32* %2, align 4, !dbg !627, !tbaa !628
  br i1 %1, label %4, label %.preheader1, !dbg !630

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 5, !dbg !631
  %6 = load i32* %5, align 4, !dbg !631, !tbaa !632
  %7 = add nsw i32 %6, %3, !dbg !633
  %8 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 1, !dbg !634
  %9 = load i32* %8, align 4, !dbg !634, !tbaa !635
  %10 = srem i32 %7, %9, !dbg !636
  tail call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !382, metadata !450), !dbg !637
  br label %.preheader1, !dbg !638

.preheader1:                                      ; preds = %0, %4
  %cur.1.ph = phi i32 [ %10, %4 ], [ %3, %0 ]
  %11 = icmp sgt i32 %shift, 0, !dbg !639
  br i1 %11, label %.lr.ph10, label %._crit_edge11.thread, !dbg !642

.lr.ph10:                                         ; preds = %.preheader1
  %12 = icmp eq i32 %bForward, 0, !dbg !643
  %13 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 1, !dbg !648
  %14 = icmp ne i32 %bForward, 0, !dbg !650
  %15 = add i32 %shift, -1, !dbg !642
  br label %16, !dbg !642

; <label>:16                                      ; preds = %122, %.lr.ph10
  %nsum.09 = phi i32 [ 0, %.lr.ph10 ], [ %nsum.1, %122 ]
  %cur.18 = phi i32 [ %cur.1.ph, %.lr.ph10 ], [ %cur.2, %122 ]
  %j1.07 = phi i32 [ 391, %.lr.ph10 ], [ %j1.2, %122 ]
  %j0.06 = phi i32 [ 137, %.lr.ph10 ], [ %j0.2, %122 ]
  %i.05 = phi i32 [ 0, %.lr.ph10 ], [ %123, %122 ]
  br i1 %1, label %17, label %.loopexit, !dbg !652

; <label>:17                                      ; preds = %16
  br i1 %12, label %29, label %18, !dbg !653

; <label>:18                                      ; preds = %17
  %19 = add nsw i32 %cur.18, -1, !dbg !654
  %20 = load i32* %13, align 4, !dbg !654, !tbaa !635
  %21 = add nsw i32 %19, %20, !dbg !654
  %22 = srem i32 %21, %20, !dbg !654
  %23 = sext i32 %22 to i64, !dbg !656
  %24 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %23, !dbg !656
  %25 = load i32* %24, align 4, !dbg !656, !tbaa !657
  tail call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !380, metadata !450), !dbg !623
  %26 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %23, !dbg !658
  %27 = load i32* %26, align 4, !dbg !658, !tbaa !657
  %28 = add nsw i32 %27, %25, !dbg !659
  tail call void @llvm.dbg.value(metadata i32 %28, i64 0, metadata !381, metadata !450), !dbg !624
  br label %39, !dbg !660

; <label>:29                                      ; preds = %17
  %30 = add nsw i32 %cur.18, 1, !dbg !648
  %31 = load i32* %13, align 4, !dbg !648, !tbaa !635
  %32 = srem i32 %30, %31, !dbg !648
  %33 = sext i32 %32 to i64, !dbg !661
  %34 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %33, !dbg !661
  %35 = load i32* %34, align 4, !dbg !661, !tbaa !657
  tail call void @llvm.dbg.value(metadata i32 %35, i64 0, metadata !380, metadata !450), !dbg !623
  %36 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %33, !dbg !662
  %37 = load i32* %36, align 4, !dbg !662, !tbaa !657
  %38 = add nsw i32 %37, %35, !dbg !663
  tail call void @llvm.dbg.value(metadata i32 %38, i64 0, metadata !381, metadata !450), !dbg !624
  br label %39

; <label>:39                                      ; preds = %29, %18
  %j0.1 = phi i32 [ %25, %18 ], [ %35, %29 ]
  %j1.1 = phi i32 [ %28, %18 ], [ %38, %29 ]
  tail call void @llvm.dbg.value(metadata i32 %j0.1, i64 0, metadata !379, metadata !450), !dbg !664
  %40 = icmp slt i32 %j0.1, %j1.1, !dbg !665
  br i1 %40, label %.lr.ph, label %.loopexit, !dbg !668

.lr.ph:                                           ; preds = %39
  %41 = sext i32 %j0.1 to i64
  %42 = add i32 %j1.1, -1, !dbg !668
  br label %43, !dbg !668

; <label>:43                                      ; preds = %43, %.lr.ph
  %indvars.iv = phi i64 [ %41, %.lr.ph ], [ %indvars.iv.next, %43 ]
  %44 = getelementptr inbounds [3 x float]* %buf, i64 %indvars.iv, i64 0, !dbg !669
  tail call void @llvm.dbg.value(metadata float* %44, i64 0, metadata !435, metadata !450), !dbg !671
  store float 0.000000e+00, float* %44, align 4, !dbg !673, !tbaa !578
  %45 = getelementptr inbounds [3 x float]* %buf, i64 %indvars.iv, i64 1, !dbg !674
  store float 0.000000e+00, float* %45, align 4, !dbg !675, !tbaa !578
  %46 = getelementptr inbounds [3 x float]* %buf, i64 %indvars.iv, i64 2, !dbg !676
  store float 0.000000e+00, float* %46, align 4, !dbg !677, !tbaa !578
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !668
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !668
  %exitcond = icmp eq i32 %lftr.wideiv, %42, !dbg !668
  br i1 %exitcond, label %.loopexit, label %43, !dbg !668

.loopexit:                                        ; preds = %43, %39, %16
  %j0.2 = phi i32 [ %j0.06, %16 ], [ %j0.1, %39 ], [ %j0.1, %43 ]
  %j1.2 = phi i32 [ %j1.07, %16 ], [ %j1.1, %39 ], [ %j1.1, %43 ]
  %47 = sext i32 %cur.18 to i64, !dbg !678
  %48 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %47, !dbg !678
  %49 = load i32* %48, align 4, !dbg !678, !tbaa !657
  %50 = sext i32 %49 to i64, !dbg !681
  %51 = getelementptr inbounds [3 x float]* %vecs, i64 %50, i64 0, !dbg !681
  %52 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %47, !dbg !682
  %53 = load i32* %52, align 4, !dbg !682, !tbaa !657
  %54 = mul nsw i32 %53, 3, !dbg !683
  br i1 %14, label %55, label %73, !dbg !684

; <label>:55                                      ; preds = %.loopexit
  %56 = add nsw i32 %cur.18, -1, !dbg !685
  %57 = load i32* %13, align 4, !dbg !685, !tbaa !635
  %58 = add nsw i32 %56, %57, !dbg !685
  %59 = srem i32 %58, %57, !dbg !685
  %60 = sext i32 %59 to i64, !dbg !686
  %61 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %60, !dbg !686
  %62 = load i32* %61, align 4, !dbg !686, !tbaa !657
  %63 = sext i32 %62 to i64, !dbg !687
  %64 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %60
  %65 = load i32* %64, align 4
  br i1 %1, label %66, label %69, !dbg !688

; <label>:66                                      ; preds = %55
  %67 = getelementptr inbounds [3 x float]* %buf, i64 %63, i64 0, !dbg !687
  %68 = mul nsw i32 %65, 3, !dbg !689
  tail call void @gmx_tx_rx_real(i32 %right, float* %51, i32 %54, i32 %left, float* %67, i32 %68) #5, !dbg !690
  br label %72, !dbg !690

; <label>:69                                      ; preds = %55
  %70 = getelementptr inbounds [3 x float]* %vecs, i64 %63, i64 0, !dbg !691
  %71 = mul nsw i32 %65, 3, !dbg !692
  tail call void @gmx_tx_rx_real(i32 %right, float* %51, i32 %54, i32 %left, float* %70, i32 %71) #5, !dbg !693
  br label %72

; <label>:72                                      ; preds = %69, %66
  tail call void @gmx_wait(i32 %right, i32 %left) #5, !dbg !694
  br label %90, !dbg !695

; <label>:73                                      ; preds = %.loopexit
  %74 = add nsw i32 %cur.18, 1, !dbg !696
  %75 = load i32* %13, align 4, !dbg !696, !tbaa !635
  %76 = srem i32 %74, %75, !dbg !696
  %77 = sext i32 %76 to i64, !dbg !699
  %78 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %77, !dbg !699
  %79 = load i32* %78, align 4, !dbg !699, !tbaa !657
  %80 = sext i32 %79 to i64, !dbg !700
  %81 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %77
  %82 = load i32* %81, align 4
  br i1 %1, label %83, label %86, !dbg !701

; <label>:83                                      ; preds = %73
  %84 = getelementptr inbounds [3 x float]* %buf, i64 %80, i64 0, !dbg !700
  %85 = mul nsw i32 %82, 3, !dbg !702
  tail call void @gmx_tx_rx_real(i32 %left, float* %51, i32 %54, i32 %right, float* %84, i32 %85) #5, !dbg !703
  br label %89, !dbg !703

; <label>:86                                      ; preds = %73
  %87 = getelementptr inbounds [3 x float]* %vecs, i64 %80, i64 0, !dbg !704
  %88 = mul nsw i32 %82, 3, !dbg !705
  tail call void @gmx_tx_rx_real(i32 %left, float* %51, i32 %54, i32 %right, float* %87, i32 %88) #5, !dbg !706
  br label %89

; <label>:89                                      ; preds = %86, %83
  tail call void @gmx_wait(i32 %left, i32 %right) #5, !dbg !707
  br label %90

; <label>:90                                      ; preds = %89, %72
  br i1 %1, label %.preheader, label %112, !dbg !708

.preheader:                                       ; preds = %90
  %91 = icmp slt i32 %j0.2, %j1.2, !dbg !709
  br i1 %91, label %.lr.ph4, label %._crit_edge, !dbg !714

.lr.ph4:                                          ; preds = %.preheader
  %92 = sext i32 %j0.2 to i64
  %93 = add i32 %j1.2, -1, !dbg !714
  br label %94, !dbg !714

; <label>:94                                      ; preds = %94, %.lr.ph4
  %indvars.iv12 = phi i64 [ %92, %.lr.ph4 ], [ %indvars.iv.next13, %94 ]
  %95 = getelementptr inbounds [3 x float]* %vecs, i64 %indvars.iv12, i64 0, !dbg !715
  %96 = getelementptr inbounds [3 x float]* %buf, i64 %indvars.iv12, i64 0, !dbg !717
  tail call void @llvm.dbg.value(metadata float* %95, i64 0, metadata !440, metadata !450), !dbg !718
  tail call void @llvm.dbg.value(metadata float* %96, i64 0, metadata !441, metadata !450), !dbg !720
  %97 = load float* %95, align 4, !dbg !721, !tbaa !578
  %98 = load float* %96, align 4, !dbg !722, !tbaa !578
  %99 = fadd float %97, %98, !dbg !723
  tail call void @llvm.dbg.value(metadata float %99, i64 0, metadata !442, metadata !450), !dbg !724
  %100 = getelementptr inbounds [3 x float]* %vecs, i64 %indvars.iv12, i64 1, !dbg !725
  %101 = load float* %100, align 4, !dbg !725, !tbaa !578
  %102 = getelementptr inbounds [3 x float]* %buf, i64 %indvars.iv12, i64 1, !dbg !726
  %103 = load float* %102, align 4, !dbg !726, !tbaa !578
  %104 = fadd float %101, %103, !dbg !727
  tail call void @llvm.dbg.value(metadata float %104, i64 0, metadata !443, metadata !450), !dbg !728
  %105 = getelementptr inbounds [3 x float]* %vecs, i64 %indvars.iv12, i64 2, !dbg !729
  %106 = load float* %105, align 4, !dbg !729, !tbaa !578
  %107 = getelementptr inbounds [3 x float]* %buf, i64 %indvars.iv12, i64 2, !dbg !730
  %108 = load float* %107, align 4, !dbg !730, !tbaa !578
  %109 = fadd float %106, %108, !dbg !731
  tail call void @llvm.dbg.value(metadata float %109, i64 0, metadata !444, metadata !450), !dbg !732
  store float %99, float* %95, align 4, !dbg !733, !tbaa !578
  store float %104, float* %100, align 4, !dbg !734, !tbaa !578
  store float %109, float* %105, align 4, !dbg !735, !tbaa !578
  %indvars.iv.next13 = add nsw i64 %indvars.iv12, 1, !dbg !714
  %lftr.wideiv14 = trunc i64 %indvars.iv12 to i32, !dbg !714
  %exitcond15 = icmp eq i32 %lftr.wideiv14, %93, !dbg !714
  br i1 %exitcond15, label %._crit_edge, label %94, !dbg !714

._crit_edge:                                      ; preds = %94, %.preheader
  %110 = sub i32 %nsum.09, %j0.2, !dbg !736
  %111 = add i32 %110, %j1.2, !dbg !737
  tail call void @llvm.dbg.value(metadata i32 %111, i64 0, metadata !383, metadata !450), !dbg !738
  br label %112, !dbg !739

; <label>:112                                     ; preds = %._crit_edge, %90
  %nsum.1 = phi i32 [ %111, %._crit_edge ], [ %nsum.09, %90 ]
  br i1 %14, label %113, label %118, !dbg !740

; <label>:113                                     ; preds = %112
  %114 = add nsw i32 %cur.18, -1, !dbg !741
  %115 = load i32* %13, align 4, !dbg !741, !tbaa !635
  %116 = add nsw i32 %114, %115, !dbg !741
  %117 = srem i32 %116, %115, !dbg !741
  tail call void @llvm.dbg.value(metadata i32 %117, i64 0, metadata !382, metadata !450), !dbg !637
  br label %122, !dbg !743

; <label>:118                                     ; preds = %112
  %119 = add nsw i32 %cur.18, 1, !dbg !744
  %120 = load i32* %13, align 4, !dbg !744, !tbaa !635
  %121 = srem i32 %119, %120, !dbg !744
  tail call void @llvm.dbg.value(metadata i32 %121, i64 0, metadata !382, metadata !450), !dbg !637
  br label %122

; <label>:122                                     ; preds = %113, %118
  %cur.2 = phi i32 [ %117, %113 ], [ %121, %118 ]
  %123 = add nuw nsw i32 %i.05, 1, !dbg !745
  tail call void @llvm.dbg.value(metadata i32 %123, i64 0, metadata !378, metadata !450), !dbg !746
  %exitcond16 = icmp eq i32 %i.05, %15, !dbg !642
  br i1 %exitcond16, label %._crit_edge11, label %16, !dbg !642

._crit_edge11:                                    ; preds = %122
  %124 = icmp sgt i32 %nsum.1, 0, !dbg !747
  br i1 %124, label %125, label %._crit_edge11.thread, !dbg !749

; <label>:125                                     ; preds = %._crit_edge11
  %126 = sitofp i32 %nsum.1 to double, !dbg !750
  %127 = getelementptr inbounds %struct.t_nrnb* %nrnb, i64 0, i32 0, i64 91, !dbg !750
  %128 = load double* %127, align 8, !dbg !750, !tbaa !591
  %129 = fadd double %126, %128, !dbg !750
  store double %129, double* %127, align 8, !dbg !750, !tbaa !591
  br label %._crit_edge11.thread, !dbg !750

._crit_edge11.thread:                             ; preds = %.preheader1, %125, %._crit_edge11
  ret void, !dbg !751
}
