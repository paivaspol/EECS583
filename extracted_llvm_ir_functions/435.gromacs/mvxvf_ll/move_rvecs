define void @move_rvecs(%struct.__sFILE* nocapture readnone %log, i32 %bForward, i32 %bSum, i32 %left, i32 %right, [3 x float]* %vecs, [3 x float]* %buf, i32 %shift, %struct.t_nsborder* %nsb, %struct.t_nrnb* nocapture %nrnb) #4 {
  %1 = icmp ne i32 %bSum, 0
  %2 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 0
  %3 = load i32* %2, align 4, !tbaa !18
  br i1 %1, label %4, label %.preheader1

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 5
  %6 = load i32* %5, align 4, !tbaa !20
  %7 = add nsw i32 %6, %3
  %8 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 1
  %9 = load i32* %8, align 4, !tbaa !21
  %10 = srem i32 %7, %9
  br label %.preheader1

.preheader1:                                      ; preds = %0, %4
  %cur.1.ph = phi i32 [ %10, %4 ], [ %3, %0 ]
  %11 = icmp sgt i32 %shift, 0
  br i1 %11, label %.lr.ph10, label %._crit_edge11.thread

.lr.ph10:                                         ; preds = %.preheader1
  %12 = icmp eq i32 %bForward, 0
  %13 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 1
  %14 = icmp ne i32 %bForward, 0
  %15 = add i32 %shift, -1
  br label %16

; <label>:16                                      ; preds = %122, %.lr.ph10
  %nsum.09 = phi i32 [ 0, %.lr.ph10 ], [ %nsum.1, %122 ]
  %cur.18 = phi i32 [ %cur.1.ph, %.lr.ph10 ], [ %cur.2, %122 ]
  %j1.07 = phi i32 [ 391, %.lr.ph10 ], [ %j1.2, %122 ]
  %j0.06 = phi i32 [ 137, %.lr.ph10 ], [ %j0.2, %122 ]
  %i.05 = phi i32 [ 0, %.lr.ph10 ], [ %123, %122 ]
  br i1 %1, label %17, label %.loopexit

; <label>:17                                      ; preds = %16
  br i1 %12, label %29, label %18

; <label>:18                                      ; preds = %17
  %19 = add nsw i32 %cur.18, -1
  %20 = load i32* %13, align 4, !tbaa !21
  %21 = add nsw i32 %19, %20
  %22 = srem i32 %21, %20
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %23
  %25 = load i32* %24, align 4, !tbaa !22
  %26 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %23
  %27 = load i32* %26, align 4, !tbaa !22
  %28 = add nsw i32 %27, %25
  br label %39

; <label>:29                                      ; preds = %17
  %30 = add nsw i32 %cur.18, 1
  %31 = load i32* %13, align 4, !tbaa !21
  %32 = srem i32 %30, %31
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %33
  %35 = load i32* %34, align 4, !tbaa !22
  %36 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %33
  %37 = load i32* %36, align 4, !tbaa !22
  %38 = add nsw i32 %37, %35
  br label %39

; <label>:39                                      ; preds = %29, %18
  %j0.1 = phi i32 [ %25, %18 ], [ %35, %29 ]
  %j1.1 = phi i32 [ %28, %18 ], [ %38, %29 ]
  %40 = icmp slt i32 %j0.1, %j1.1
  br i1 %40, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %39
  %41 = sext i32 %j0.1 to i64
  %42 = add i32 %j1.1, -1
  br label %43

; <label>:43                                      ; preds = %43, %.lr.ph
  %indvars.iv = phi i64 [ %41, %.lr.ph ], [ %indvars.iv.next, %43 ]
  %44 = getelementptr inbounds [3 x float]* %buf, i64 %indvars.iv, i64 0
  store float 0.000000e+00, float* %44, align 4, !tbaa !14
  %45 = getelementptr inbounds [3 x float]* %buf, i64 %indvars.iv, i64 1
  store float 0.000000e+00, float* %45, align 4, !tbaa !14
  %46 = getelementptr inbounds [3 x float]* %buf, i64 %indvars.iv, i64 2
  store float 0.000000e+00, float* %46, align 4, !tbaa !14
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %42
  br i1 %exitcond, label %.loopexit, label %43

.loopexit:                                        ; preds = %43, %39, %16
  %j0.2 = phi i32 [ %j0.06, %16 ], [ %j0.1, %39 ], [ %j0.1, %43 ]
  %j1.2 = phi i32 [ %j1.07, %16 ], [ %j1.1, %39 ], [ %j1.1, %43 ]
  %47 = sext i32 %cur.18 to i64
  %48 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %47
  %49 = load i32* %48, align 4, !tbaa !22
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [3 x float]* %vecs, i64 %50, i64 0
  %52 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %47
  %53 = load i32* %52, align 4, !tbaa !22
  %54 = mul nsw i32 %53, 3
  br i1 %14, label %55, label %73

; <label>:55                                      ; preds = %.loopexit
  %56 = add nsw i32 %cur.18, -1
  %57 = load i32* %13, align 4, !tbaa !21
  %58 = add nsw i32 %56, %57
  %59 = srem i32 %58, %57
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %60
  %62 = load i32* %61, align 4, !tbaa !22
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %60
  %65 = load i32* %64, align 4
  br i1 %1, label %66, label %69

; <label>:66                                      ; preds = %55
  %67 = getelementptr inbounds [3 x float]* %buf, i64 %63, i64 0
  %68 = mul nsw i32 %65, 3
  tail call void @gmx_tx_rx_real(i32 %right, float* %51, i32 %54, i32 %left, float* %67, i32 %68) #5
  br label %72

; <label>:69                                      ; preds = %55
  %70 = getelementptr inbounds [3 x float]* %vecs, i64 %63, i64 0
  %71 = mul nsw i32 %65, 3
  tail call void @gmx_tx_rx_real(i32 %right, float* %51, i32 %54, i32 %left, float* %70, i32 %71) #5
  br label %72

; <label>:72                                      ; preds = %69, %66
  tail call void @gmx_wait(i32 %right, i32 %left) #5
  br label %90

; <label>:73                                      ; preds = %.loopexit
  %74 = add nsw i32 %cur.18, 1
  %75 = load i32* %13, align 4, !tbaa !21
  %76 = srem i32 %74, %75
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %77
  %79 = load i32* %78, align 4, !tbaa !22
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %77
  %82 = load i32* %81, align 4
  br i1 %1, label %83, label %86

; <label>:83                                      ; preds = %73
  %84 = getelementptr inbounds [3 x float]* %buf, i64 %80, i64 0
  %85 = mul nsw i32 %82, 3
  tail call void @gmx_tx_rx_real(i32 %left, float* %51, i32 %54, i32 %right, float* %84, i32 %85) #5
  br label %89

; <label>:86                                      ; preds = %73
  %87 = getelementptr inbounds [3 x float]* %vecs, i64 %80, i64 0
  %88 = mul nsw i32 %82, 3
  tail call void @gmx_tx_rx_real(i32 %left, float* %51, i32 %54, i32 %right, float* %87, i32 %88) #5
  br label %89

; <label>:89                                      ; preds = %86, %83
  tail call void @gmx_wait(i32 %left, i32 %right) #5
  br label %90

; <label>:90                                      ; preds = %89, %72
  br i1 %1, label %.preheader, label %112

.preheader:                                       ; preds = %90
  %91 = icmp slt i32 %j0.2, %j1.2
  br i1 %91, label %.lr.ph4, label %._crit_edge

.lr.ph4:                                          ; preds = %.preheader
  %92 = sext i32 %j0.2 to i64
  %93 = add i32 %j1.2, -1
  br label %94

; <label>:94                                      ; preds = %94, %.lr.ph4
  %indvars.iv12 = phi i64 [ %92, %.lr.ph4 ], [ %indvars.iv.next13, %94 ]
  %95 = getelementptr inbounds [3 x float]* %vecs, i64 %indvars.iv12, i64 0
  %96 = getelementptr inbounds [3 x float]* %buf, i64 %indvars.iv12, i64 0
  %97 = load float* %95, align 4, !tbaa !14
  %98 = load float* %96, align 4, !tbaa !14
  %99 = fadd float %97, %98
  %100 = getelementptr inbounds [3 x float]* %vecs, i64 %indvars.iv12, i64 1
  %101 = load float* %100, align 4, !tbaa !14
  %102 = getelementptr inbounds [3 x float]* %buf, i64 %indvars.iv12, i64 1
  %103 = load float* %102, align 4, !tbaa !14
  %104 = fadd float %101, %103
  %105 = getelementptr inbounds [3 x float]* %vecs, i64 %indvars.iv12, i64 2
  %106 = load float* %105, align 4, !tbaa !14
  %107 = getelementptr inbounds [3 x float]* %buf, i64 %indvars.iv12, i64 2
  %108 = load float* %107, align 4, !tbaa !14
  %109 = fadd float %106, %108
  store float %99, float* %95, align 4, !tbaa !14
  store float %104, float* %100, align 4, !tbaa !14
  store float %109, float* %105, align 4, !tbaa !14
  %indvars.iv.next13 = add nsw i64 %indvars.iv12, 1
  %lftr.wideiv14 = trunc i64 %indvars.iv12 to i32
  %exitcond15 = icmp eq i32 %lftr.wideiv14, %93
  br i1 %exitcond15, label %._crit_edge, label %94

._crit_edge:                                      ; preds = %94, %.preheader
  %110 = sub i32 %nsum.09, %j0.2
  %111 = add i32 %110, %j1.2
  br label %112

; <label>:112                                     ; preds = %._crit_edge, %90
  %nsum.1 = phi i32 [ %111, %._crit_edge ], [ %nsum.09, %90 ]
  br i1 %14, label %113, label %118

; <label>:113                                     ; preds = %112
  %114 = add nsw i32 %cur.18, -1
  %115 = load i32* %13, align 4, !tbaa !21
  %116 = add nsw i32 %114, %115
  %117 = srem i32 %116, %115
  br label %122

; <label>:118                                     ; preds = %112
  %119 = add nsw i32 %cur.18, 1
  %120 = load i32* %13, align 4, !tbaa !21
  %121 = srem i32 %119, %120
  br label %122

; <label>:122                                     ; preds = %113, %118
  %cur.2 = phi i32 [ %117, %113 ], [ %121, %118 ]
  %123 = add nuw nsw i32 %i.05, 1
  %exitcond16 = icmp eq i32 %i.05, %15
  br i1 %exitcond16, label %._crit_edge11, label %16

._crit_edge11:                                    ; preds = %122
  %124 = icmp sgt i32 %nsum.1, 0
  br i1 %124, label %125, label %._crit_edge11.thread

; <label>:125                                     ; preds = %._crit_edge11
  %126 = sitofp i32 %nsum.1 to double
  %127 = getelementptr inbounds %struct.t_nrnb* %nrnb, i64 0, i32 0, i64 91
  %128 = load double* %127, align 8, !tbaa !16
  %129 = fadd double %126, %128
  store double %129, double* %127, align 8, !tbaa !16
  br label %._crit_edge11.thread

._crit_edge11.thread:                             ; preds = %.preheader1, %125, %._crit_edge11
  ret void
}
