define void @do_shakefirst(%struct.__sFILE* %log, i32 %bTYZ, float %lambda, float* %ener, %struct.t_parm* %parm, %struct.t_nsborder* nocapture readonly %nsb, %struct.t_mdatoms* %md, [3 x float]* %x, [3 x float]* %vold, [3 x float]* %buf, [3 x float]* %f, [3 x float]* nocapture %v, %struct.t_graph* %graph, %struct.t_commrec* %cr, %struct.t_nrnb* %nrnb, %struct.t_groups* %grps, %struct.t_forcerec* nocapture readnone %fr, %struct.t_topology* %top, %struct.t_edsamyn* %edyn, %struct.t_pull* %pulldata) #4 {
  %shake_vir = alloca [3 x [3 x float]], align 16
  %vcm = alloca [4 x double], align 16
  %vcm25 = bitcast [4 x double]* %vcm to i8*
  %1 = bitcast [3 x [3 x float]]* %shake_vir to i8*
  call void @llvm.lifetime.start(i64 36, i8* %1) #5
  %2 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 15
  %3 = load float* %2, align 4, !tbaa !52
  %4 = tail call i32 @count_constraints(%struct.t_topology* %top, %struct.t_commrec* %cr) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %.loopexit, label %6

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 0
  %8 = load i32* %7, align 4, !tbaa !17
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %9
  %11 = load i32* %10, align 4, !tbaa !19
  %12 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %9
  %13 = load i32* %12, align 4, !tbaa !19
  %14 = add nsw i32 %13, %11
  %15 = load %struct.__sFILE** @debug, align 8, !tbaa !32
  %16 = icmp eq %struct.__sFILE* %15, null
  br i1 %16, label %19, label %17

; <label>:17                                      ; preds = %6
  %18 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %15, i8* getelementptr inbounds ([34 x i8]* @.str10, i64 0, i64 0), i32 %11, i32 %13, i32 %14) #10
  br label %19

; <label>:19                                      ; preds = %6, %17
  %20 = icmp ne %struct.__sFILE* %log, null
  br i1 %20, label %21, label %23

; <label>:21                                      ; preds = %19
  %22 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %log, i8* getelementptr inbounds ([50 x i8]* @.str11, i64 0, i64 0), i32 -2) #10
  br label %23

; <label>:23                                      ; preds = %21, %19
  %24 = getelementptr inbounds [3 x [3 x float]]* %shake_vir, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 36, i32 16, i1 false) #5
  %25 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 3
  %26 = load i32* %25, align 4, !tbaa !41
  %27 = getelementptr inbounds float* %ener, i64 42
  call void @update(i32 %26, i32 %11, i32 %13, i32 -2, float %lambda, float* %27, %struct.t_parm* %parm, float 1.000000e+00, %struct.t_mdatoms* %md, [3 x float]* %x, %struct.t_graph* %graph, [3 x float]* null, [3 x float]* null, [3 x float]* %vold, [3 x float]* null, [3 x float]* %x, %struct.t_topology* %top, %struct.t_groups* %grps, [3 x float]* %24, %struct.t_commrec* %cr, %struct.t_nrnb* %nrnb, i32 %bTYZ, i32 0, %struct.t_edsamyn* %edyn, %struct.t_pull* %pulldata, i32 0) #10
  %28 = icmp sgt i32 %13, 0
  br i1 %28, label %.preheader2.lr.ph, label %._crit_edge11

.preheader2.lr.ph:                                ; preds = %23
  %29 = sext i32 %11 to i64
  %30 = sext i32 %14 to i64
  br label %.preheader2

.preheader2:                                      ; preds = %.preheader2.lr.ph, %43
  %indvars.iv30 = phi i64 [ %29, %.preheader2.lr.ph ], [ %indvars.iv.next31, %43 ]
  br label %31

; <label>:31                                      ; preds = %31, %.preheader2
  %indvars.iv26 = phi i64 [ 0, %.preheader2 ], [ %indvars.iv.next27, %31 ]
  %32 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv30, i64 %indvars.iv26
  %33 = bitcast float* %32 to i32*
  %34 = load i32* %33, align 4, !tbaa !2
  %35 = getelementptr inbounds [3 x float]* %f, i64 %indvars.iv30, i64 %indvars.iv26
  %36 = bitcast float* %35 to i32*
  store i32 %34, i32* %36, align 4, !tbaa !2
  %37 = load float* %32, align 4, !tbaa !2
  %38 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv30, i64 %indvars.iv26
  %39 = load float* %38, align 4, !tbaa !2
  %40 = fmul float %3, %39
  %41 = fsub float %37, %40
  %42 = getelementptr inbounds [3 x float]* %buf, i64 %indvars.iv30, i64 %indvars.iv26
  store float %41, float* %42, align 4, !tbaa !2
  %indvars.iv.next27 = add nuw nsw i64 %indvars.iv26, 1
  %exitcond28 = icmp eq i64 %indvars.iv.next27, 3
  br i1 %exitcond28, label %43, label %31

; <label>:43                                      ; preds = %31
  %indvars.iv.next31 = add nsw i64 %indvars.iv30, 1
  %44 = icmp slt i64 %indvars.iv.next31, %30
  br i1 %44, label %.preheader2, label %._crit_edge11

._crit_edge11:                                    ; preds = %43, %23
  br i1 %20, label %45, label %47

; <label>:45                                      ; preds = %._crit_edge11
  %46 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %log, i8* getelementptr inbounds ([50 x i8]* @.str12, i64 0, i64 0), i32 -1) #10
  br label %47

; <label>:47                                      ; preds = %45, %._crit_edge11
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 36, i32 16, i1 false) #5
  %48 = load i32* %25, align 4, !tbaa !41
  call void @update(i32 %48, i32 %11, i32 %13, i32 -1, float %lambda, float* %27, %struct.t_parm* %parm, float 1.000000e+00, %struct.t_mdatoms* %md, [3 x float]* %f, %struct.t_graph* %graph, [3 x float]* null, [3 x float]* null, [3 x float]* %vold, [3 x float]* null, [3 x float]* %buf, %struct.t_topology* %top, %struct.t_groups* %grps, [3 x float]* %24, %struct.t_commrec* %cr, %struct.t_nrnb* %nrnb, i32 %bTYZ, i32 0, %struct.t_edsamyn* %edyn, %struct.t_pull* %pulldata, i32 0) #10
  call void @llvm.memset.p0i8.i64(i8* %vcm25, i8 0, i64 32, i32 16, i1 false)
  %49 = fdiv float 1.000000e+00, %3
  br i1 %28, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %47
  %50 = getelementptr inbounds %struct.t_mdatoms* %md, i64 0, i32 2
  %51 = load float** %50, align 8, !tbaa !53
  %52 = getelementptr inbounds [4 x double]* %vcm, i64 0, i64 3
  %53 = sext i32 %11 to i64
  %54 = sext i32 %14 to i64
  br label %55

; <label>:55                                      ; preds = %.lr.ph, %72
  %indvars.iv20 = phi i64 [ %53, %.lr.ph ], [ %indvars.iv.next21, %72 ]
  %56 = getelementptr inbounds float* %51, i64 %indvars.iv20
  %57 = load float* %56, align 4, !tbaa !2
  %58 = fpext float %57 to double
  br label %59

; <label>:59                                      ; preds = %59, %55
  %indvars.iv17 = phi i64 [ 0, %55 ], [ %indvars.iv.next18, %59 ]
  %60 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv20, i64 %indvars.iv17
  %61 = load float* %60, align 4, !tbaa !2
  %62 = getelementptr inbounds [3 x float]* %f, i64 %indvars.iv20, i64 %indvars.iv17
  %63 = load float* %62, align 4, !tbaa !2
  %64 = fsub float %61, %63
  %65 = fmul float %49, %64
  %66 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv20, i64 %indvars.iv17
  store float %65, float* %66, align 4, !tbaa !2
  %67 = fpext float %65 to double
  %68 = fmul double %58, %67
  %69 = getelementptr inbounds [4 x double]* %vcm, i64 0, i64 %indvars.iv17
  %70 = load double* %69, align 8, !tbaa !6
  %71 = fadd double %70, %68
  store double %71, double* %69, align 8, !tbaa !6
  %indvars.iv.next18 = add nuw nsw i64 %indvars.iv17, 1
  %exitcond19 = icmp eq i64 %indvars.iv.next18, 3
  br i1 %exitcond19, label %72, label %59

; <label>:72                                      ; preds = %59
  %73 = load double* %52, align 8, !tbaa !6
  %74 = fadd double %58, %73
  store double %74, double* %52, align 8, !tbaa !6
  %indvars.iv.next21 = add nsw i64 %indvars.iv20, 1
  %75 = icmp slt i64 %indvars.iv.next21, %54
  br i1 %75, label %55, label %._crit_edge

._crit_edge:                                      ; preds = %72, %47
  %76 = phi double [ 0.000000e+00, %47 ], [ %74, %72 ]
  %77 = load %struct.__sFILE** @debug, align 8, !tbaa !32
  %78 = icmp eq %struct.__sFILE* %77, null
  br i1 %78, label %87, label %79

; <label>:79                                      ; preds = %._crit_edge
  %80 = getelementptr inbounds [4 x double]* %vcm, i64 0, i64 0
  %81 = load double* %80, align 16, !tbaa !6
  %82 = getelementptr inbounds [4 x double]* %vcm, i64 0, i64 1
  %83 = load double* %82, align 8, !tbaa !6
  %84 = getelementptr inbounds [4 x double]* %vcm, i64 0, i64 2
  %85 = load double* %84, align 16, !tbaa !6
  %86 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %77, i8* getelementptr inbounds ([47 x i8]* @.str13, i64 0, i64 0), double %81, double %83, double %85, double %76) #10
  br label %87

; <label>:87                                      ; preds = %._crit_edge, %79
  %88 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 1
  %89 = load i32* %88, align 4, !tbaa !29
  %90 = icmp sgt i32 %89, 1
  br i1 %90, label %95, label %91

; <label>:91                                      ; preds = %87
  %92 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 5
  %93 = load i32* %92, align 4, !tbaa !31
  %94 = icmp sgt i32 %93, 1
  br i1 %94, label %95, label %97

; <label>:95                                      ; preds = %91, %87
  %96 = getelementptr inbounds [4 x double]* %vcm, i64 0, i64 0
  call void @gmx_sumd(i32 4, double* %96, %struct.t_commrec* %cr) #10
  br label %97

; <label>:97                                      ; preds = %95, %91
  %98 = getelementptr inbounds [4 x double]* %vcm, i64 0, i64 3
  %99 = load double* %98, align 8, !tbaa !6
  br label %100

; <label>:100                                     ; preds = %100, %97
  %indvars.iv14 = phi i64 [ 0, %97 ], [ %indvars.iv.next15, %100 ]
  %101 = getelementptr inbounds [4 x double]* %vcm, i64 0, i64 %indvars.iv14
  %102 = load double* %101, align 8, !tbaa !6
  %103 = fdiv double %102, %99
  store double %103, double* %101, align 8, !tbaa !6
  %indvars.iv.next15 = add nuw nsw i64 %indvars.iv14, 1
  %exitcond16 = icmp eq i64 %indvars.iv.next15, 3
  br i1 %exitcond16, label %104, label %100

; <label>:104                                     ; preds = %100
  %105 = load %struct.__sFILE** @debug, align 8, !tbaa !32
  %106 = icmp eq %struct.__sFILE* %105, null
  br i1 %106, label %.preheader1, label %107

; <label>:107                                     ; preds = %104
  %108 = getelementptr inbounds [4 x double]* %vcm, i64 0, i64 0
  %109 = load double* %108, align 16, !tbaa !6
  %110 = getelementptr inbounds [4 x double]* %vcm, i64 0, i64 1
  %111 = load double* %110, align 8, !tbaa !6
  %112 = getelementptr inbounds [4 x double]* %vcm, i64 0, i64 2
  %113 = load double* %112, align 16, !tbaa !6
  %114 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %105, i8* getelementptr inbounds ([47 x i8]* @.str13, i64 0, i64 0), double %109, double %111, double %113, double %99) #10
  br label %.preheader1

.preheader1:                                      ; preds = %104, %107
  br i1 %28, label %.preheader.lr.ph, label %.loopexit

.preheader.lr.ph:                                 ; preds = %.preheader1
  %115 = sext i32 %11 to i64
  %116 = sext i32 %14 to i64
  br label %.preheader

.preheader:                                       ; preds = %.preheader.lr.ph, %125
  %indvars.iv12 = phi i64 [ %115, %.preheader.lr.ph ], [ %indvars.iv.next13, %125 ]
  br label %117

; <label>:117                                     ; preds = %117, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %117 ]
  %118 = getelementptr inbounds [4 x double]* %vcm, i64 0, i64 %indvars.iv
  %119 = load double* %118, align 8, !tbaa !6
  %120 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv12, i64 %indvars.iv
  %121 = load float* %120, align 4, !tbaa !2
  %122 = fpext float %121 to double
  %123 = fsub double %122, %119
  %124 = fptrunc double %123 to float
  store float %124, float* %120, align 4, !tbaa !2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %125, label %117

; <label>:125                                     ; preds = %117
  %indvars.iv.next13 = add nsw i64 %indvars.iv12, 1
  %126 = icmp slt i64 %indvars.iv.next13, %116
  br i1 %126, label %.preheader, label %.loopexit

.loopexit:                                        ; preds = %125, %.preheader1, %0
  call void @llvm.lifetime.end(i64 36, i8* %1) #5
  ret void
}
