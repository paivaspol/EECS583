define void @print_time(%struct._IO_FILE* %out, i64 %start, i32 %step, %struct.t_inputrec* nocapture %ir) #0 {
entry:
  %finish = alloca i64, align 8
  %buf = alloca [48 x i8], align 16
  %0 = getelementptr inbounds [48 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 48, i8* %0) #1
  %tobool = icmp ne %struct._IO_FILE* %out, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), i32 %step) #6
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %nstlist = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 3
  %1 = load i32* %nstlist, align 4, !tbaa !0
  %cmp = icmp sgt i32 %1, %step
  br i1 %cmp, label %if.end36, label %if.then1

if.then1:                                         ; preds = %if.end
  %cmp3 = icmp eq i32 %1, 0
  br i1 %cmp3, label %if.then6, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then1
  %rem = srem i32 %step, %1
  %cmp5 = icmp eq i32 %rem, 0
  br i1 %cmp5, label %if.then6, label %lor.lhs.false.if.end11_crit_edge

lor.lhs.false.if.end11_crit_edge:                 ; preds = %lor.lhs.false
  %.pre = load float* @print_time.time_per_step, align 4, !tbaa !3
  br label %if.end11

if.then6:                                         ; preds = %lor.lhs.false, %if.then1
  %call7 = call i64 @time(i64* null) #6
  store i64 %call7, i64* @print_time.end, align 8, !tbaa !4
  %conv = sitofp i64 %call7 to double
  %conv8 = sitofp i64 %start to double
  %sub = fsub double %conv, %conv8
  %add = add nsw i32 %step, 1
  %conv9 = sitofp i32 %add to double
  %div = fdiv double %sub, %conv9
  %conv10 = fptrunc double %div to float
  store float %conv10, float* @print_time.time_per_step, align 4, !tbaa !3
  br label %if.end11

if.end11:                                         ; preds = %lor.lhs.false.if.end11_crit_edge, %if.then6
  %2 = phi float [ %.pre, %lor.lhs.false.if.end11_crit_edge ], [ %conv10, %if.then6 ]
  %nsteps = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 1
  %3 = load i32* %nsteps, align 4, !tbaa !0
  %sub12 = sub nsw i32 %3, %step
  %conv13 = sitofp i32 %sub12 to float
  %mul = fmul float %2, %conv13
  %cmp15 = fcmp ult float %mul, 3.000000e+02
  br i1 %cmp15, label %if.else, label %if.then17

if.then17:                                        ; preds = %if.end11
  %4 = load i64* @print_time.end, align 8, !tbaa !4
  %conv18 = fptosi float %mul to i64
  %add19 = add nsw i64 %4, %conv18
  store i64 %add19, i64* %finish, align 8, !tbaa !4
  %call20 = call i8* @ctime(i64* %finish) #6
  %strlen = call i64 @strlen(i8* %call20)
  %leninc = add i64 %strlen, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %call20, i64 %leninc, i32 1, i1 false)
  %call23 = call i64 @strlen(i8* %0) #7
  %sub24 = add i64 %call23, -1
  %arrayidx = getelementptr inbounds [48 x i8]* %buf, i64 0, i64 %sub24
  store i8 0, i8* %arrayidx, align 1, !tbaa !1
  br i1 %tobool, label %if.then26, label %if.end36

if.then26:                                        ; preds = %if.then17
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([20 x i8]* @.str2, i64 0, i64 0), i8* %0) #6
  br label %if.end36

if.else:                                          ; preds = %if.end11
  br i1 %tobool, label %if.then31, label %if.end36

if.then31:                                        ; preds = %if.else
  %conv32 = fptosi float %mul to i32
  %call33 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([42 x i8]* @.str3, i64 0, i64 0), i32 %conv32) #6
  br label %if.end36

if.end36:                                         ; preds = %if.end, %if.then26, %if.then17, %if.then31, %if.else
  %call37 = call i32 @fflush(%struct._IO_FILE* %out) #6
  call void @llvm.lifetime.end(i64 48, i8* %0) #1
  ret void
}
