define i64 @print_date_and_time(%struct.__sFILE* %log, i32 %nodeid, i8* %title) #4 {
  %time_string = alloca [4096 x i8], align 16
  %now = alloca i64, align 8
  %1 = getelementptr inbounds [4096 x i8]* %time_string, i64 0, i64 0
  call void @llvm.lifetime.start(i64 4096, i8* %1) #5
  %2 = tail call i64 @time(i64* null) #10
  store i64 %2, i64* %now, align 8, !tbaa !13
  %3 = call i8* @ctime(i64* %now) #10
  %4 = load i8* %3, align 1, !tbaa !16
  %5 = icmp sgt i8 %4, 31
  br i1 %5, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %0, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %0 ]
  %6 = phi i8* [ %11, %.lr.ph ], [ %1, %0 ]
  %7 = phi i8 [ %9, %.lr.ph ], [ %4, %0 ]
  store i8 %7, i8* %6, align 1, !tbaa !16
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %8 = getelementptr inbounds i8* %3, i64 %indvars.iv.next
  %9 = load i8* %8, align 1, !tbaa !16
  %10 = icmp sgt i8 %9, 31
  %11 = getelementptr inbounds [4096 x i8]* %time_string, i64 0, i64 %indvars.iv.next
  br i1 %10, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph, %0
  %.lcssa = phi i8* [ %1, %0 ], [ %11, %.lr.ph ]
  store i8 0, i8* %.lcssa, align 1, !tbaa !16
  %12 = icmp eq %struct.__sFILE* %log, null
  br i1 %12, label %15, label %13

; <label>:13                                      ; preds = %._crit_edge
  %14 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %log, i8* getelementptr inbounds ([18 x i8]* @.str4, i64 0, i64 0), i8* %title, i32 %nodeid, i8* %1) #10
  br label %15

; <label>:15                                      ; preds = %._crit_edge, %13
  %16 = load i64* %now, align 8, !tbaa !13
  call void @llvm.lifetime.end(i64 4096, i8* %1) #5
  ret i64 %16
}
