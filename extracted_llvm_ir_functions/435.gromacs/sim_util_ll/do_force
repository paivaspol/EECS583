define void @do_force(%struct.__sFILE* %log, %struct.t_commrec* %cr, %struct.t_commrec* %mcr, %struct.t_parm* %parm, %struct.t_nsborder* %nsb, [3 x float]* %vir_part, [3 x float]* %pme_vir, i32 %step, %struct.t_nrnb* %nrnb, %struct.t_topology* %top, %struct.t_groups* %grps, [3 x float]* %x, [3 x float]* nocapture readnone %v, [3 x float]* %f, [3 x float]* %buf, %struct.t_mdatoms* %mdatoms, float* %ener, %struct.t_fcdata* %fcd, i32 %bVerbose, float %lambda, %struct.t_graph* %graph, i32 %bNS, i32 %bNBFonly, %struct.t_forcerec* %fr, float* %mu_tot, i32 %bGatherOnly) #4 {
  %1 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !17
  %3 = sext i32 %2 to i64
  %4 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %3
  %5 = load i32* %4, align 4, !tbaa !19
  %6 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %3
  %7 = load i32* %6, align 4, !tbaa !19
  %8 = icmp eq i32 %2, 0
  br i1 %8, label %14, label %9

; <label>:9                                       ; preds = %0
  %10 = add nsw i32 %2, -1
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 9, i64 %11
  %13 = load i32* %12, align 4, !tbaa !19
  br label %14

; <label>:14                                      ; preds = %0, %9
  %15 = phi i32 [ %13, %9 ], [ 0, %0 ]
  %16 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 9, i64 %3
  %17 = load i32* %16, align 4, !tbaa !19
  %18 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 1, i64 0
  tail call void @update_forcerec(%struct.__sFILE* %log, %struct.t_forcerec* %fr, [3 x float]* %18) #10
  %19 = getelementptr inbounds %struct.t_mdatoms* %mdatoms, i64 0, i32 8
  %20 = load float** %19, align 8, !tbaa !20
  tail call void @calc_mu_and_q(%struct.t_nsborder* %nsb, [3 x float]* %x, float* %20, float* getelementptr inbounds ([4 x float]* @do_force.mu_and_q, i64 0, i64 0), float* getelementptr inbounds ([4 x float]* @do_force.mu_and_q, i64 0, i64 3)) #10
  %21 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 0
  %22 = load i32* %21, align 4, !tbaa !22
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %45, label %24

; <label>:24                                      ; preds = %14
  %25 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 28
  %26 = load i32* %25, align 4, !tbaa !24
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

; <label>:28                                      ; preds = %24
  %29 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 48
  %30 = load [3 x float]** %29, align 8, !tbaa !26
  tail call void @calc_shifts([3 x float]* %18, float* getelementptr inbounds ([3 x float]* @do_force.box_size, i64 0, i64 0), [3 x float]* %30) #10
  br label %31

; <label>:31                                      ; preds = %24, %28
  %32 = icmp eq i32 %bNS, 0
  br i1 %32, label %41, label %33

; <label>:33                                      ; preds = %31
  %34 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 3, i64 0
  %35 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 47
  %36 = load [3 x float]** %35, align 8, !tbaa !27
  tail call void @put_charge_groups_in_box(%struct.__sFILE* %log, i32 %15, i32 %17, [3 x float]* %18, float* getelementptr inbounds ([3 x float]* @do_force.box_size, i64 0, i64 0), %struct.t_block* %34, [3 x float]* %x, [3 x float]* %36) #10
  %37 = sitofp i32 %7 to double
  %38 = getelementptr inbounds %struct.t_nrnb* %nrnb, i64 0, i32 0, i64 88
  %39 = load double* %38, align 8, !tbaa !6
  %40 = fadd double %37, %39
  store double %40, double* %38, align 8, !tbaa !6
  br label %51

; <label>:41                                      ; preds = %31
  %42 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 0
  %43 = load i32* %42, align 4, !tbaa !28
  %.off = add i32 %43, -1
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %44, label %.thread

; <label>:44                                      ; preds = %41
  tail call void @unshift_self(%struct.t_graph* %graph, [3 x float]* %18, [3 x float]* %x) #10
  br label %.thread

; <label>:45                                      ; preds = %14
  %46 = icmp eq i32 %bNS, 0
  br i1 %46, label %.thread, label %47

; <label>:47                                      ; preds = %45
  %48 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 3, i64 0
  %49 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 47
  %50 = load [3 x float]** %49, align 8, !tbaa !27
  tail call void @calc_cgcm(%struct.__sFILE* %log, i32 %15, i32 %17, %struct.t_block* %48, [3 x float]* %x, [3 x float]* %50) #10
  br label %51

; <label>:51                                      ; preds = %33, %47
  %52 = sub nsw i32 %17, %15
  %53 = sitofp i32 %52 to double
  %54 = getelementptr inbounds %struct.t_nrnb* %nrnb, i64 0, i32 0, i64 90
  %55 = load double* %54, align 8, !tbaa !6
  %56 = fadd double %53, %55
  store double %56, double* %54, align 8, !tbaa !6
  %57 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 1
  %58 = load i32* %57, align 4, !tbaa !29
  %59 = icmp sgt i32 %58, 1
  br i1 %59, label %64, label %60

; <label>:60                                      ; preds = %51
  %61 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 5
  %62 = load i32* %61, align 4, !tbaa !31
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %68

; <label>:64                                      ; preds = %60, %51
  %65 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 47
  %66 = load [3 x float]** %65, align 8, !tbaa !27
  %67 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 10, i64 0
  tail call void @move_cgcm(%struct.__sFILE* %log, %struct.t_commrec* %cr, [3 x float]* %66, i32* %67) #10
  br label %68

; <label>:68                                      ; preds = %64, %60
  %69 = load %struct.__sFILE** @debug, align 8, !tbaa !32
  %70 = icmp eq %struct.__sFILE* %69, null
  br i1 %70, label %.thread, label %71

; <label>:71                                      ; preds = %68
  %72 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 47
  %73 = load [3 x float]** %72, align 8, !tbaa !27
  %74 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 2
  %75 = load i32* %74, align 4, !tbaa !33
  tail call void @pr_rvecs(%struct.__sFILE* %69, i32 0, i8* getelementptr inbounds ([5 x i8]* @.str5, i64 0, i64 0), [3 x float]* %73, i32 %75) #10
  br label %.thread

.thread:                                          ; preds = %44, %45, %41, %68, %71
  %76 = phi i1 [ true, %68 ], [ true, %71 ], [ false, %41 ], [ false, %45 ], [ false, %44 ]
  %77 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 1
  %78 = load i32* %77, align 4, !tbaa !29
  %79 = icmp sgt i32 %78, 1
  br i1 %79, label %84, label %80

; <label>:80                                      ; preds = %.thread
  %81 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 5
  %82 = load i32* %81, align 4, !tbaa !31
  %83 = icmp sgt i32 %82, 1
  br i1 %83, label %84, label %.preheader40

; <label>:84                                      ; preds = %80, %.thread
  %85 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 2
  %86 = load i32* %85, align 4, !tbaa !34
  %87 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 3
  %88 = load i32* %87, align 4, !tbaa !35
  tail call void @move_x(%struct.__sFILE* %log, i32 %86, i32 %88, [3 x float]* %x, %struct.t_nsborder* %nsb, %struct.t_nrnb* %nrnb) #10
  tail call void @gmx_sumf(i32 4, float* getelementptr inbounds ([4 x float]* @do_force.mu_and_q, i64 0, i64 0), %struct.t_commrec* %cr) #10
  br label %.preheader40

.preheader40:                                     ; preds = %80, %84, %.preheader40
  %indvars.iv53 = phi i64 [ %indvars.iv.next54, %.preheader40 ], [ 0, %84 ], [ 0, %80 ]
  %89 = getelementptr inbounds [4 x float]* @do_force.mu_and_q, i64 0, i64 %indvars.iv53
  %90 = bitcast float* %89 to i32*
  %91 = load i32* %90, align 4, !tbaa !2
  %92 = getelementptr inbounds float* %mu_tot, i64 %indvars.iv53
  %93 = bitcast float* %92 to i32*
  store i32 %91, i32* %93, align 4, !tbaa !2
  %indvars.iv.next54 = add nuw nsw i64 %indvars.iv53, 1
  %exitcond55 = icmp eq i64 %indvars.iv.next54, 3
  br i1 %exitcond55, label %94, label %.preheader40

; <label>:94                                      ; preds = %.preheader40
  %95 = load float* getelementptr inbounds ([4 x float]* @do_force.mu_and_q, i64 0, i64 3), align 4, !tbaa !2
  %96 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0
  %97 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 51
  %98 = getelementptr inbounds %struct.t_groups* %grps, i64 0, i32 0, i32 0
  br label %99

; <label>:99                                      ; preds = %.loopexit.i, %94
  %indvars.iv.i = phi i64 [ 0, %94 ], [ %indvars.iv.next.i, %.loopexit.i ]
  %100 = add nuw nsw i64 %indvars.iv.i, 4294967293
  %101 = trunc i64 %100 to i32
  %i.0.cmp.i = icmp ugt i32 %101, 1
  br i1 %i.0.cmp.i, label %.preheader1.i, label %102

; <label>:102                                     ; preds = %99
  %103 = load i32* %97, align 4, !tbaa !36
  %104 = icmp eq i32 %103, 0
  %brmerge.i = or i1 %76, %104
  br i1 %brmerge.i, label %.preheader1.i, label %.loopexit.i

.preheader1.i:                                    ; preds = %102, %99
  %105 = load i32* %98, align 4, !tbaa !37
  %106 = icmp sgt i32 %105, 0
  br i1 %106, label %.lr.ph.i, label %.loopexit.i

.lr.ph.i:                                         ; preds = %.preheader1.i
  %107 = getelementptr inbounds %struct.t_groups* %grps, i64 0, i32 0, i32 1, i64 %indvars.iv.i
  %108 = bitcast float** %107 to i8**
  %109 = load i8** %108, align 8, !tbaa !32
  %110 = icmp sgt i32 %105, 1
  %.op.i = add i32 %105, -1
  %111 = zext i32 %.op.i to i64
  %.op7.i = shl nuw nsw i64 %111, 2
  %.op7.op.i = add nuw nsw i64 %.op7.i, 4
  %112 = select i1 %110, i64 %.op7.op.i, i64 4
  tail call void @llvm.memset.p0i8.i64(i8* %109, i8 0, i64 %112, i32 4, i1 false) #5
  br label %.loopexit.i

.loopexit.i:                                      ; preds = %.lr.ph.i, %.preheader1.i, %102
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 7
  br i1 %exitcond.i, label %reset_energies.exit, label %99

reset_energies.exit:                              ; preds = %.loopexit.i
  %113 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80
  %epot5.i = bitcast float* %ener to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %epot5.i, i8 0, i64 152, i32 4, i1 false) #5
  %114 = getelementptr inbounds float* %ener, i64 42
  store float 0.000000e+00, float* %114, align 4, !tbaa !2
  %115 = getelementptr inbounds float* %ener, i64 43
  store float 0.000000e+00, float* %115, align 4, !tbaa !2
  br i1 %76, label %116, label %140

; <label>:116                                     ; preds = %reset_energies.exit
  %117 = load i32* %21, align 4, !tbaa !22
  %118 = icmp eq i32 %117, 1
  br i1 %118, label %120, label %119

; <label>:119                                     ; preds = %116
  tail call void @mk_mshift(%struct.__sFILE* %log, %struct.t_graph* %graph, [3 x float]* %18, [3 x float]* %x) #10
  br label %120

; <label>:120                                     ; preds = %116, %119
  %121 = load i32* %97, align 4, !tbaa !36
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %clear_rvecs.exit29, label %123

; <label>:123                                     ; preds = %120
  %124 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 3
  %125 = load i32* %124, align 4, !tbaa !41
  %126 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 53
  %127 = load [3 x float]** %126, align 8, !tbaa !42
  %128 = icmp sgt i32 %125, 0
  br i1 %128, label %.lr.ph.i30, label %clear_rvecs.exit35

.lr.ph.i30:                                       ; preds = %123
  %129 = add i32 %125, -1
  br label %130

; <label>:130                                     ; preds = %130, %.lr.ph.i30
  %indvars.iv.i31 = phi i64 [ 0, %.lr.ph.i30 ], [ %indvars.iv.next.i32, %130 ]
  %131 = getelementptr inbounds [3 x float]* %127, i64 %indvars.iv.i31, i64 0
  store float 0.000000e+00, float* %131, align 4, !tbaa !2
  %132 = getelementptr inbounds [3 x float]* %127, i64 %indvars.iv.i31, i64 1
  store float 0.000000e+00, float* %132, align 4, !tbaa !2
  %133 = getelementptr inbounds [3 x float]* %127, i64 %indvars.iv.i31, i64 2
  store float 0.000000e+00, float* %133, align 4, !tbaa !2
  %indvars.iv.next.i32 = add nuw nsw i64 %indvars.iv.i31, 1
  %lftr.wideiv51 = trunc i64 %indvars.iv.i31 to i32
  %exitcond52 = icmp eq i32 %lftr.wideiv51, %129
  br i1 %exitcond52, label %clear_rvecs.exit35, label %130

clear_rvecs.exit35:                               ; preds = %130, %123
  %134 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 54
  %135 = load [3 x float]** %134, align 8, !tbaa !43
  br label %136

; <label>:136                                     ; preds = %136, %clear_rvecs.exit35
  %indvars.iv.i25 = phi i64 [ 0, %clear_rvecs.exit35 ], [ %indvars.iv.next.i26, %136 ]
  %137 = getelementptr inbounds [3 x float]* %135, i64 %indvars.iv.i25, i64 0
  store float 0.000000e+00, float* %137, align 4, !tbaa !2
  %138 = getelementptr inbounds [3 x float]* %135, i64 %indvars.iv.i25, i64 1
  store float 0.000000e+00, float* %138, align 4, !tbaa !2
  %139 = getelementptr inbounds [3 x float]* %135, i64 %indvars.iv.i25, i64 2
  store float 0.000000e+00, float* %139, align 4, !tbaa !2
  %indvars.iv.next.i26 = add nuw nsw i64 %indvars.iv.i25, 1
  %exitcond50 = icmp eq i64 %indvars.iv.next.i26, 27
  br i1 %exitcond50, label %clear_rvecs.exit29, label %136

clear_rvecs.exit29:                               ; preds = %136, %120
  store float 0.000000e+00, float* @do_force.dvdl_lr, align 4, !tbaa !2
  tail call void @ns(%struct.__sFILE* %log, %struct.t_forcerec* %fr, [3 x float]* %x, [3 x float]* %f, [3 x float]* %18, %struct.t_groups* %grps, %struct.t_grpopts* %113, %struct.t_topology* %top, %struct.t_mdatoms* %mdatoms, %struct.t_commrec* %cr, %struct.t_nrnb* %nrnb, %struct.t_nsborder* %nsb, i32 %step, float %lambda, float* @do_force.dvdl_lr) #10
  br label %140

; <label>:140                                     ; preds = %clear_rvecs.exit29, %reset_energies.exit
  %141 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 33
  %142 = load i32* %141, align 4, !tbaa !44
  %.off1 = add i32 %142, -3
  %switch2 = icmp ult i32 %.off1, 4
  br i1 %switch2, label %143, label %clear_rvecs.exit23

; <label>:143                                     ; preds = %140
  %144 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 55
  %145 = load [3 x float]** %144, align 8, !tbaa !45
  %146 = sext i32 %5 to i64
  %147 = icmp sgt i32 %7, 0
  br i1 %147, label %.lr.ph.i18, label %clear_rvecs.exit23

.lr.ph.i18:                                       ; preds = %143
  %148 = add i32 %7, -1
  br label %149

; <label>:149                                     ; preds = %149, %.lr.ph.i18
  %indvars.iv.i19 = phi i64 [ 0, %.lr.ph.i18 ], [ %indvars.iv.next.i20, %149 ]
  %.sum = add i64 %indvars.iv.i19, %146
  %150 = getelementptr inbounds [3 x float]* %145, i64 %.sum, i64 0
  store float 0.000000e+00, float* %150, align 4, !tbaa !2
  %151 = getelementptr inbounds [3 x float]* %145, i64 %.sum, i64 1
  store float 0.000000e+00, float* %151, align 4, !tbaa !2
  %152 = getelementptr inbounds [3 x float]* %145, i64 %.sum, i64 2
  store float 0.000000e+00, float* %152, align 4, !tbaa !2
  %indvars.iv.next.i20 = add nuw nsw i64 %indvars.iv.i19, 1
  %lftr.wideiv48 = trunc i64 %indvars.iv.i19 to i32
  %exitcond49 = icmp eq i32 %lftr.wideiv48, %148
  br i1 %exitcond49, label %clear_rvecs.exit23, label %149

clear_rvecs.exit23:                               ; preds = %149, %143, %140
  %153 = load i32* %97, align 4, !tbaa !36
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 3
  %156 = load i32* %155, align 4, !tbaa !41
  %157 = icmp sgt i32 %156, 0
  br i1 %154, label %198, label %.preheader39

.preheader39:                                     ; preds = %clear_rvecs.exit23
  br i1 %157, label %.lr.ph, label %.preheader

.lr.ph:                                           ; preds = %.preheader39
  %158 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 53
  %159 = load [3 x float]** %158, align 8, !tbaa !42
  %160 = sext i32 %156 to i64
  br label %165

.preheader:                                       ; preds = %165, %.preheader39
  %161 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 54
  %162 = load [3 x float]** %161, align 8, !tbaa !43
  %163 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 58
  %164 = load [3 x float]** %163, align 8, !tbaa !46
  br label %182

; <label>:165                                     ; preds = %.lr.ph, %165
  %indvars.iv46 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next47, %165 ]
  %166 = getelementptr inbounds [3 x float]* %159, i64 %indvars.iv46, i64 0
  %167 = getelementptr inbounds [3 x float]* %f, i64 %indvars.iv46, i64 0
  %168 = bitcast float* %166 to i32*
  %169 = load i32* %168, align 4, !tbaa !2
  %170 = bitcast float* %167 to i32*
  store i32 %169, i32* %170, align 4, !tbaa !2
  %171 = getelementptr inbounds [3 x float]* %159, i64 %indvars.iv46, i64 1
  %172 = bitcast float* %171 to i32*
  %173 = load i32* %172, align 4, !tbaa !2
  %174 = getelementptr inbounds [3 x float]* %f, i64 %indvars.iv46, i64 1
  %175 = bitcast float* %174 to i32*
  store i32 %173, i32* %175, align 4, !tbaa !2
  %176 = getelementptr inbounds [3 x float]* %159, i64 %indvars.iv46, i64 2
  %177 = bitcast float* %176 to i32*
  %178 = load i32* %177, align 4, !tbaa !2
  %179 = getelementptr inbounds [3 x float]* %f, i64 %indvars.iv46, i64 2
  %180 = bitcast float* %179 to i32*
  store i32 %178, i32* %180, align 4, !tbaa !2
  %indvars.iv.next47 = add nuw nsw i64 %indvars.iv46, 1
  %181 = icmp slt i64 %indvars.iv.next47, %160
  br i1 %181, label %165, label %.preheader

; <label>:182                                     ; preds = %182, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %182 ]
  %183 = getelementptr inbounds [3 x float]* %162, i64 %indvars.iv, i64 0
  %184 = getelementptr inbounds [3 x float]* %164, i64 %indvars.iv, i64 0
  %185 = bitcast float* %183 to i32*
  %186 = load i32* %185, align 4, !tbaa !2
  %187 = bitcast float* %184 to i32*
  store i32 %186, i32* %187, align 4, !tbaa !2
  %188 = getelementptr inbounds [3 x float]* %162, i64 %indvars.iv, i64 1
  %189 = bitcast float* %188 to i32*
  %190 = load i32* %189, align 4, !tbaa !2
  %191 = getelementptr inbounds [3 x float]* %164, i64 %indvars.iv, i64 1
  %192 = bitcast float* %191 to i32*
  store i32 %190, i32* %192, align 4, !tbaa !2
  %193 = getelementptr inbounds [3 x float]* %162, i64 %indvars.iv, i64 2
  %194 = bitcast float* %193 to i32*
  %195 = load i32* %194, align 4, !tbaa !2
  %196 = getelementptr inbounds [3 x float]* %164, i64 %indvars.iv, i64 2
  %197 = bitcast float* %196 to i32*
  store i32 %195, i32* %197, align 4, !tbaa !2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond45 = icmp eq i64 %indvars.iv.next, 27
  br i1 %exitcond45, label %clear_rvecs.exit, label %182

; <label>:198                                     ; preds = %clear_rvecs.exit23
  br i1 %157, label %.lr.ph.i12, label %clear_rvecs.exit17

.lr.ph.i12:                                       ; preds = %198
  %199 = add i32 %156, -1
  br label %200

; <label>:200                                     ; preds = %200, %.lr.ph.i12
  %indvars.iv.i13 = phi i64 [ 0, %.lr.ph.i12 ], [ %indvars.iv.next.i14, %200 ]
  %201 = getelementptr inbounds [3 x float]* %f, i64 %indvars.iv.i13, i64 0
  store float 0.000000e+00, float* %201, align 4, !tbaa !2
  %202 = getelementptr inbounds [3 x float]* %f, i64 %indvars.iv.i13, i64 1
  store float 0.000000e+00, float* %202, align 4, !tbaa !2
  %203 = getelementptr inbounds [3 x float]* %f, i64 %indvars.iv.i13, i64 2
  store float 0.000000e+00, float* %203, align 4, !tbaa !2
  %indvars.iv.next.i14 = add nuw nsw i64 %indvars.iv.i13, 1
  %lftr.wideiv = trunc i64 %indvars.iv.i13 to i32
  %exitcond44 = icmp eq i32 %lftr.wideiv, %199
  br i1 %exitcond44, label %clear_rvecs.exit17, label %200

clear_rvecs.exit17:                               ; preds = %200, %198
  %204 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 58
  %205 = load [3 x float]** %204, align 8, !tbaa !46
  br label %206

; <label>:206                                     ; preds = %206, %clear_rvecs.exit17
  %indvars.iv.i9 = phi i64 [ 0, %clear_rvecs.exit17 ], [ %indvars.iv.next.i10, %206 ]
  %207 = getelementptr inbounds [3 x float]* %205, i64 %indvars.iv.i9, i64 0
  store float 0.000000e+00, float* %207, align 4, !tbaa !2
  %208 = getelementptr inbounds [3 x float]* %205, i64 %indvars.iv.i9, i64 1
  store float 0.000000e+00, float* %208, align 4, !tbaa !2
  %209 = getelementptr inbounds [3 x float]* %205, i64 %indvars.iv.i9, i64 2
  store float 0.000000e+00, float* %209, align 4, !tbaa !2
  %indvars.iv.next.i10 = add nuw nsw i64 %indvars.iv.i9, 1
  %exitcond = icmp eq i64 %indvars.iv.next.i10, 27
  br i1 %exitcond, label %clear_rvecs.exit, label %206

clear_rvecs.exit:                                 ; preds = %182, %206
  %.pre-phi = phi [3 x float]** [ %204, %206 ], [ %163, %182 ]
  %210 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 1
  %211 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 10, i64 1, i32 0
  %212 = load i32* %211, align 4, !tbaa !47
  %213 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 9
  tail call void @force(%struct.__sFILE* %log, i32 %step, %struct.t_forcerec* %fr, %struct.t_inputrec* %96, %struct.t_idef* %210, %struct.t_nsborder* %nsb, %struct.t_commrec* %cr, %struct.t_commrec* %mcr, %struct.t_nrnb* %nrnb, %struct.t_groups* %grps, %struct.t_mdatoms* %mdatoms, i32 %212, %struct.t_grpopts* %113, [3 x float]* %x, [3 x float]* %f, float* %ener, %struct.t_fcdata* %fcd, i32 %bVerbose, [3 x float]* %18, float %lambda, %struct.t_graph* %graph, %struct.t_block* %213, i32 %bNBFonly, [3 x float]* %pme_vir, float* %mu_tot, float %95, i32 %bGatherOnly) #10
  %214 = load float* @do_force.dvdl_lr, align 4, !tbaa !2
  %215 = load float* %114, align 4, !tbaa !2
  %216 = fadd float %214, %215
  store float %216, float* %114, align 4, !tbaa !2
  %217 = bitcast [3 x float]* %vir_part to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %217, i8 0, i64 36, i32 4, i1 false) #5
  %218 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 48
  %219 = load [3 x float]** %218, align 8, !tbaa !26
  %220 = load [3 x float]** %.pre-phi, align 8, !tbaa !46
  tail call void @calc_vir(%struct.__sFILE* %log, i32 27, [3 x float]* %219, [3 x float]* %220, [3 x float]* %vir_part) #10
  %221 = getelementptr inbounds %struct.t_nrnb* %nrnb, i64 0, i32 0, i64 107
  %222 = load double* %221, align 8, !tbaa !6
  %223 = fadd double %222, 2.700000e+01
  store double %223, double* %221, align 8, !tbaa !6
  %224 = load %struct.__sFILE** @debug, align 8, !tbaa !32
  %225 = icmp eq %struct.__sFILE* %224, null
  br i1 %225, label %227, label %226

; <label>:226                                     ; preds = %clear_rvecs.exit
  tail call void @pr_rvecs(%struct.__sFILE* %224, i32 0, i8* getelementptr inbounds ([11 x i8]* @.str6, i64 0, i64 0), [3 x float]* %vir_part, i32 3) #10
  br label %227

; <label>:227                                     ; preds = %clear_rvecs.exit, %226
  %228 = load float** %19, align 8, !tbaa !20
  %229 = add nsw i32 %7, %5
  %230 = icmp sgt i32 %7, 0
  %231 = sext i32 %5 to i64
  %232 = sext i32 %229 to i64
  br label %233

; <label>:233                                     ; preds = %.loopexit.i7, %227
  %indvars.iv3.i = phi i64 [ 0, %227 ], [ %indvars.iv.next4.i, %.loopexit.i7 ]
  %234 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 81, i64 %indvars.iv3.i, i32 0
  %235 = load i32* %234, align 4, !tbaa !49
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %.loopexit.i7, label %237

; <label>:237                                     ; preds = %233
  %238 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 81, i64 %indvars.iv3.i, i32 1
  %239 = load float** %238, align 8, !tbaa !51
  %240 = load float* %239, align 4, !tbaa !2
  %241 = fpext float %240 to double
  %242 = fmul double %241, 0x40581F0F4D6F1034
  %243 = fptrunc double %242 to float
  br i1 %230, label %.lr.ph.i5, label %.loopexit.i7

.lr.ph.i5:                                        ; preds = %237, %.lr.ph.i5
  %indvars.iv.i3 = phi i64 [ %indvars.iv.next.i4, %.lr.ph.i5 ], [ %231, %237 ]
  %244 = getelementptr inbounds float* %228, i64 %indvars.iv.i3
  %245 = load float* %244, align 4, !tbaa !2
  %246 = fmul float %243, %245
  %247 = getelementptr inbounds [3 x float]* %f, i64 %indvars.iv.i3, i64 %indvars.iv3.i
  %248 = load float* %247, align 4, !tbaa !2
  %249 = fadd float %248, %246
  store float %249, float* %247, align 4, !tbaa !2
  %indvars.iv.next.i4 = add nsw i64 %indvars.iv.i3, 1
  %250 = icmp slt i64 %indvars.iv.next.i4, %232
  br i1 %250, label %.lr.ph.i5, label %.loopexit.i7

.loopexit.i7:                                     ; preds = %.lr.ph.i5, %237, %233
  %indvars.iv.next4.i = add nuw nsw i64 %indvars.iv3.i, 1
  %exitcond.i6 = icmp eq i64 %indvars.iv.next4.i, 3
  br i1 %exitcond.i6, label %calc_f_el.exit, label %233

calc_f_el.exit:                                   ; preds = %.loopexit.i7
  %251 = load i32* %77, align 4, !tbaa !29
  %252 = icmp sgt i32 %251, 1
  br i1 %252, label %257, label %253

; <label>:253                                     ; preds = %calc_f_el.exit
  %254 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 5
  %255 = load i32* %254, align 4, !tbaa !31
  %256 = icmp sgt i32 %255, 1
  br i1 %256, label %257, label %262

; <label>:257                                     ; preds = %253, %calc_f_el.exit
  %258 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 2
  %259 = load i32* %258, align 4, !tbaa !34
  %260 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 3
  %261 = load i32* %260, align 4, !tbaa !35
  tail call void @move_f(%struct.__sFILE* %log, i32 %259, i32 %261, [3 x float]* %f, [3 x float]* %buf, %struct.t_nsborder* %nsb, %struct.t_nrnb* %nrnb) #10
  br label %262

; <label>:262                                     ; preds = %257, %253
  ret void
}
