define void @calc_virial(%struct.__sFILE* %log, i32 %start, i32 %homenr, [3 x float]* %x, [3 x float]* %f, [3 x float]* %vir_part, [3 x float]* %pme_vir, %struct.t_graph* %graph, [3 x float]* %box, %struct.t_nrnb* nocapture %nrnb, %struct.t_forcerec* nocapture readonly %fr, i32 %bTweak) #4 {
  %virtest = alloca [3 x [3 x float]], align 16
  %1 = bitcast [3 x [3 x float]]* %virtest to i8*
  call void @llvm.lifetime.start(i64 36, i8* %1) #5
  %2 = add nsw i32 %homenr, %start
  tail call void @f_calc_vir(%struct.__sFILE* %log, i32 %start, i32 %2, [3 x float]* %x, [3 x float]* %f, [3 x float]* %vir_part, %struct.t_graph* %graph, [3 x float]* %box) #10
  %3 = sitofp i32 %homenr to double
  %4 = getelementptr inbounds %struct.t_nrnb* %nrnb, i64 0, i32 0, i64 107
  %5 = load double* %4, align 8, !tbaa !6
  %6 = fadd double %3, %5
  store double %6, double* %4, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 33
  %8 = load i32* %7, align 4, !tbaa !44
  %.off = add i32 %8, -3
  %switch = icmp ugt i32 %.off, 3
  %9 = icmp eq i32 %8, 5
  %or.cond2 = or i1 %9, %switch
  br i1 %or.cond2, label %.loopexit, label %10

; <label>:10                                      ; preds = %0
  %11 = load %struct.__sFILE** @debug, align 8, !tbaa !32
  %12 = icmp ne %struct.__sFILE* %11, null
  %13 = icmp ne i32 %bTweak, 0
  %or.cond = and i1 %13, %12
  br i1 %or.cond, label %14, label %20

; <label>:14                                      ; preds = %10
  %15 = getelementptr inbounds [3 x [3 x float]]* %virtest, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 36, i32 16, i1 false) #5
  %16 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 55
  %17 = load [3 x float]** %16, align 8, !tbaa !45
  call void @f_calc_vir(%struct.__sFILE* %log, i32 %start, i32 %2, [3 x float]* %x, [3 x float]* %17, [3 x float]* %15, %struct.t_graph* %graph, [3 x float]* %box) #10
  %18 = load %struct.__sFILE** @debug, align 8, !tbaa !32
  call void @pr_rvecs(%struct.__sFILE* %18, i32 0, i8* getelementptr inbounds ([8 x i8]* @.str7, i64 0, i64 0), [3 x float]* %15, i32 3) #10
  %19 = load %struct.__sFILE** @debug, align 8, !tbaa !32
  call void @pr_rvecs(%struct.__sFILE* %19, i32 0, i8* getelementptr inbounds ([8 x i8]* @.str8, i64 0, i64 0), [3 x float]* %pme_vir, i32 3) #10
  br label %20

; <label>:20                                      ; preds = %14, %10
  br i1 %13, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %20, %27
  %indvars.iv6 = phi i64 [ %indvars.iv.next7, %27 ], [ 0, %20 ]
  br label %21

; <label>:21                                      ; preds = %21, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %21 ]
  %22 = getelementptr inbounds [3 x float]* %pme_vir, i64 %indvars.iv6, i64 %indvars.iv
  %23 = load float* %22, align 4, !tbaa !2
  %24 = getelementptr inbounds [3 x float]* %vir_part, i64 %indvars.iv6, i64 %indvars.iv
  %25 = load float* %24, align 4, !tbaa !2
  %26 = fadd float %23, %25
  store float %26, float* %24, align 4, !tbaa !2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %27, label %21

; <label>:27                                      ; preds = %21
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1
  %exitcond8 = icmp eq i64 %indvars.iv.next7, 3
  br i1 %exitcond8, label %.loopexit, label %.preheader

.loopexit:                                        ; preds = %27, %0, %20
  %28 = load %struct.__sFILE** @debug, align 8, !tbaa !32
  %29 = icmp eq %struct.__sFILE* %28, null
  br i1 %29, label %31, label %30

; <label>:30                                      ; preds = %.loopexit
  call void @pr_rvecs(%struct.__sFILE* %28, i32 0, i8* getelementptr inbounds ([9 x i8]* @.str9, i64 0, i64 0), [3 x float]* %vir_part, i32 3) #10
  br label %31

; <label>:31                                      ; preds = %.loopexit, %30
  call void @llvm.lifetime.end(i64 36, i8* %1) #5
  ret void
}
