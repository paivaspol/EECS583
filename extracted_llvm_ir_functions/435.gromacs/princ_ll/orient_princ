define void @orient_princ(%struct.t_atoms* nocapture %atoms, i32 %isize, i32* nocapture %index, i32 %natoms, [3 x float]* nocapture %x, [3 x float]* %v, float* %d) #0 {
entry:
  %xcm = alloca [3 x float], align 4
  %prcomp = alloca [3 x float], align 4
  %trans = alloca [3 x [3 x float]], align 16
  call void @llvm.dbg.value(metadata !{%struct.t_atoms* %atoms}, i64 0, metadata !175), !dbg !405
  call void @llvm.dbg.value(metadata !{i32 %isize}, i64 0, metadata !176), !dbg !405
  call void @llvm.dbg.value(metadata !{i32* %index}, i64 0, metadata !177), !dbg !405
  call void @llvm.dbg.value(metadata !{i32 %natoms}, i64 0, metadata !178), !dbg !406
  call void @llvm.dbg.value(metadata !{[3 x float]* %x}, i64 0, metadata !179), !dbg !406
  call void @llvm.dbg.value(metadata !{[3 x float]* %v}, i64 0, metadata !180), !dbg !406
  call void @llvm.dbg.value(metadata !{float* %d}, i64 0, metadata !181), !dbg !406
  call void @llvm.dbg.declare(metadata !{[3 x float]* %xcm}, metadata !183), !dbg !407
  call void @llvm.dbg.declare(metadata !{[3 x float]* %prcomp}, metadata !184), !dbg !407
  %0 = bitcast [3 x [3 x float]]* %trans to i8*, !dbg !408
  call void @llvm.lifetime.start(i64 36, i8* %0) #4, !dbg !408
  call void @llvm.dbg.declare(metadata !{[3 x [3 x float]]* %trans}, metadata !185), !dbg !408
  %atom = getelementptr inbounds %struct.t_atoms* %atoms, i64 0, i32 1, !dbg !409
  %1 = load %struct.t_atom** %atom, align 8, !dbg !409, !tbaa !240
  %arraydecay = getelementptr inbounds [3 x [3 x float]]* %trans, i64 0, i64 0, !dbg !409
  %arraydecay1 = getelementptr inbounds [3 x float]* %prcomp, i64 0, i64 0, !dbg !409
  call void @principal_comp(i32 %isize, i32* %index, %struct.t_atom* %1, [3 x float]* %x, [3 x float]* %arraydecay, float* %arraydecay1) #7, !dbg !409
  %tobool = icmp eq float* %d, null, !dbg !410
  br i1 %tobool, label %if.end, label %if.then, !dbg !410

if.then:                                          ; preds = %entry
  tail call void @llvm.dbg.value(metadata !{float* %arraydecay1}, i64 0, metadata !411), !dbg !413
  tail call void @llvm.dbg.value(metadata !{float* %d}, i64 0, metadata !414), !dbg !413
  %2 = load float* %arraydecay1, align 4, !dbg !415, !tbaa !262
  store float %2, float* %d, align 4, !dbg !415, !tbaa !262
  %arrayidx2.i = getelementptr inbounds [3 x float]* %prcomp, i64 0, i64 1, !dbg !416
  %3 = load float* %arrayidx2.i, align 4, !dbg !416, !tbaa !262
  %arrayidx3.i = getelementptr inbounds float* %d, i64 1, !dbg !416
  store float %3, float* %arrayidx3.i, align 4, !dbg !416, !tbaa !262
  %arrayidx4.i = getelementptr inbounds [3 x float]* %prcomp, i64 0, i64 2, !dbg !417
  %4 = load float* %arrayidx4.i, align 4, !dbg !417, !tbaa !262
  %arrayidx5.i = getelementptr inbounds float* %d, i64 2, !dbg !417
  store float %4, float* %arrayidx5.i, align 4, !dbg !417, !tbaa !262
  br label %if.end, !dbg !412

if.end:                                           ; preds = %entry, %if.then
  tail call void @llvm.dbg.value(metadata !{[3 x float]* %arraydecay}, i64 0, metadata !418), !dbg !420
  %arrayidx1.i = getelementptr inbounds [3 x [3 x float]]* %trans, i64 0, i64 0, i64 0, !dbg !421
  %5 = load float* %arrayidx1.i, align 16, !dbg !421, !tbaa !262
  %arrayidx3.i26 = getelementptr inbounds [3 x [3 x float]]* %trans, i64 0, i64 1, i64 1, !dbg !421
  %6 = load float* %arrayidx3.i26, align 4, !dbg !421, !tbaa !262
  %arrayidx5.i27 = getelementptr inbounds [3 x [3 x float]]* %trans, i64 0, i64 2, i64 2, !dbg !421
  %7 = load float* %arrayidx5.i27, align 8, !dbg !421, !tbaa !262
  %mul.i = fmul float %6, %7, !dbg !421
  %arrayidx7.i = getelementptr inbounds [3 x [3 x float]]* %trans, i64 0, i64 2, i64 1, !dbg !421
  %8 = load float* %arrayidx7.i, align 4, !dbg !421, !tbaa !262
  %arrayidx9.i = getelementptr inbounds [3 x [3 x float]]* %trans, i64 0, i64 1, i64 2, !dbg !421
  %9 = load float* %arrayidx9.i, align 4, !dbg !421, !tbaa !262
  %mul10.i = fmul float %8, %9, !dbg !421
  %sub.i = fsub float %mul.i, %mul10.i, !dbg !421
  %mul11.i = fmul float %5, %sub.i, !dbg !421
  %arrayidx13.i = getelementptr inbounds [3 x [3 x float]]* %trans, i64 0, i64 1, i64 0, !dbg !421
  %10 = load float* %arrayidx13.i, align 4, !dbg !421, !tbaa !262
  %arrayidx15.i = getelementptr inbounds [3 x [3 x float]]* %trans, i64 0, i64 0, i64 1, !dbg !421
  %11 = load float* %arrayidx15.i, align 4, !dbg !421, !tbaa !262
  %mul18.i = fmul float %7, %11, !dbg !421
  %arrayidx22.i = getelementptr inbounds [3 x [3 x float]]* %trans, i64 0, i64 0, i64 2, !dbg !421
  %12 = load float* %arrayidx22.i, align 8, !dbg !421, !tbaa !262
  %mul23.i = fmul float %8, %12, !dbg !421
  %sub24.i = fsub float %mul18.i, %mul23.i, !dbg !421
  %mul25.i = fmul float %10, %sub24.i, !dbg !421
  %sub26.i = fsub float %mul11.i, %mul25.i, !dbg !421
  %arrayidx28.i = getelementptr inbounds [3 x [3 x float]]* %trans, i64 0, i64 2, i64 0, !dbg !421
  %13 = load float* %arrayidx28.i, align 8, !dbg !421, !tbaa !262
  %mul33.i = fmul float %9, %11, !dbg !421
  %mul38.i = fmul float %6, %12, !dbg !421
  %sub39.i = fsub float %mul33.i, %mul38.i, !dbg !421
  %mul40.i = fmul float %13, %sub39.i, !dbg !421
  %add.i = fadd float %mul40.i, %sub26.i, !dbg !421
  %cmp = fcmp olt float %add.i, 0.000000e+00, !dbg !419
  br i1 %cmp, label %for.body, label %if.end10, !dbg !419

for.body:                                         ; preds = %if.end, %for.body.for.body_crit_edge
  %14 = phi float [ %.pre, %for.body.for.body_crit_edge ], [ %13, %if.end ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body.for.body_crit_edge ], [ 0, %if.end ]
  %arrayidx6 = getelementptr inbounds [3 x [3 x float]]* %trans, i64 0, i64 2, i64 %indvars.iv, !dbg !423
  %sub = fsub float -0.000000e+00, %14, !dbg !423
  store float %sub, float* %arrayidx6, align 4, !dbg !423, !tbaa !262
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !426
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !426
  %exitcond = icmp eq i32 %lftr.wideiv, 3, !dbg !426
  br i1 %exitcond, label %if.end10, label %for.body.for.body_crit_edge, !dbg !426

for.body.for.body_crit_edge:                      ; preds = %for.body
  %arrayidx6.phi.trans.insert = getelementptr inbounds [3 x [3 x float]]* %trans, i64 0, i64 2, i64 %indvars.iv.next
  %.pre = load float* %arrayidx6.phi.trans.insert, align 4, !dbg !423, !tbaa !262
  br label %for.body, !dbg !426

if.end10:                                         ; preds = %for.body, %if.end
  call void @rotate_atoms(i32 %natoms, i32* null, [3 x float]* %x, [3 x float]* %arraydecay) #7, !dbg !427
  %tobool12 = icmp eq [3 x float]* %v, null, !dbg !428
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !428

if.then13:                                        ; preds = %if.end10
  call void @rotate_atoms(i32 %natoms, i32* null, [3 x float]* %v, [3 x float]* %arraydecay) #7, !dbg !428
  br label %if.end15, !dbg !428

if.end15:                                         ; preds = %if.end10, %if.then13
  %arraydecay16 = getelementptr inbounds [3 x float]* %xcm, i64 0, i64 0, !dbg !429
  call void @add_xcm([3 x float]* %x, i32 %natoms, i32* null, float* %arraydecay16) #7, !dbg !429
  call void @llvm.lifetime.end(i64 36, i8* %0) #4, !dbg !430
  ret void, !dbg !430
}
