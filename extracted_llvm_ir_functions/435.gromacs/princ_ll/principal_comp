define void @principal_comp(i32 %n, i32* nocapture readonly %index, %struct.t_atom* nocapture readonly %atom, [3 x float]* nocapture readonly %x, [3 x float]* nocapture %trans, float* nocapture %d) #4 {
  %nrot = alloca i32, align 4
  %dd = alloca [4 x double], align 16
  %tvec = alloca [4 x double], align 16
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !229, metadata !417), !dbg !580
  tail call void @llvm.dbg.value(metadata i32* %index, i64 0, metadata !230, metadata !417), !dbg !581
  tail call void @llvm.dbg.value(metadata %struct.t_atom* %atom, i64 0, metadata !231, metadata !417), !dbg !582
  tail call void @llvm.dbg.value(metadata [3 x float]* %x, i64 0, metadata !232, metadata !417), !dbg !583
  tail call void @llvm.dbg.value(metadata [3 x float]* %trans, i64 0, metadata !233, metadata !417), !dbg !584
  tail call void @llvm.dbg.value(metadata float* %d, i64 0, metadata !234, metadata !417), !dbg !585
  tail call void @llvm.dbg.declare(metadata [4 x double]* %dd, metadata !246, metadata !417), !dbg !586
  tail call void @llvm.dbg.declare(metadata [4 x double]* %tvec, metadata !250, metadata !417), !dbg !587
  %1 = tail call i8* @save_calloc(i8* getelementptr inbounds ([6 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 96, i32 4, i32 8) #7, !dbg !588
  %2 = bitcast i8* %1 to double**, !dbg !588
  tail call void @llvm.dbg.value(metadata double** %2, i64 0, metadata !244, metadata !417), !dbg !589
  %3 = tail call i8* @save_calloc(i8* getelementptr inbounds ([3 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 97, i32 4, i32 8) #7, !dbg !590
  %4 = bitcast i8* %3 to double**, !dbg !590
  tail call void @llvm.dbg.value(metadata double** %4, i64 0, metadata !251, metadata !417), !dbg !591
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !235, metadata !417), !dbg !592
  br label %5, !dbg !593

; <label>:5                                       ; preds = %5, %0
  %indvars.iv73 = phi i64 [ 0, %0 ], [ %indvars.iv.next74, %5 ]
  %6 = tail call i8* @save_calloc(i8* getelementptr inbounds ([9 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 99, i32 4, i32 8) #7, !dbg !595
  %7 = getelementptr inbounds double** %2, i64 %indvars.iv73, !dbg !595
  %8 = bitcast double** %7 to i8**, !dbg !595
  store i8* %6, i8** %8, align 8, !dbg !595, !tbaa !598
  %9 = tail call i8* @save_calloc(i8* getelementptr inbounds ([6 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 100, i32 4, i32 8) #7, !dbg !599
  %10 = getelementptr inbounds double** %4, i64 %indvars.iv73, !dbg !599
  %11 = bitcast double** %10 to i8**, !dbg !599
  store i8* %9, i8** %11, align 8, !dbg !599, !tbaa !598
  %12 = getelementptr inbounds [4 x double]* %dd, i64 0, i64 %indvars.iv73, !dbg !600
  store double 0.000000e+00, double* %12, align 8, !dbg !601, !tbaa !558
  %indvars.iv.next74 = add nuw nsw i64 %indvars.iv73, 1, !dbg !593
  %exitcond75 = icmp eq i64 %indvars.iv.next74, 4, !dbg !593
  br i1 %exitcond75, label %.preheader5, label %5, !dbg !593

.preheader5:                                      ; preds = %5, %.preheader5
  %indvars.iv70 = phi i64 [ %indvars.iv.next71, %.preheader5 ], [ 0, %5 ]
  %13 = getelementptr inbounds double** %2, i64 %indvars.iv70, !dbg !602
  %14 = bitcast double** %13 to i8**, !dbg !602
  %15 = load i8** %14, align 8, !dbg !602, !tbaa !598
  call void @llvm.memset.p0i8.i64(i8* %15, i8 0, i64 32, i32 8, i1 false), !dbg !607
  %indvars.iv.next71 = add nuw nsw i64 %indvars.iv70, 1, !dbg !608
  %exitcond72 = icmp eq i64 %indvars.iv.next71, 4, !dbg !608
  br i1 %exitcond72, label %.preheader4, label %.preheader5, !dbg !608

.preheader4:                                      ; preds = %.preheader5
  %16 = icmp sgt i32 %n, 0, !dbg !609
  br i1 %16, label %.lr.ph, label %.preheader4._crit_edge, !dbg !612

.preheader4._crit_edge:                           ; preds = %.preheader4
  %.phi.trans.insert = getelementptr inbounds i8* %1, i64 8
  %.phi.trans.insert77 = bitcast i8* %.phi.trans.insert to i64**
  %.pre = load i64** %.phi.trans.insert77, align 8, !dbg !613, !tbaa !598
  %.pre78 = load double** %2, align 8, !dbg !614, !tbaa !598
  %.phi.trans.insert79 = getelementptr inbounds i8* %1, i64 16
  %.phi.trans.insert80 = bitcast i8* %.phi.trans.insert79 to i64**
  %.pre81 = load i64** %.phi.trans.insert80, align 8, !dbg !615, !tbaa !598
  %17 = bitcast i64* %.pre81 to double*
  %18 = bitcast i64* %.pre to double*
  br label %._crit_edge, !dbg !612

.lr.ph:                                           ; preds = %.preheader4
  %19 = load double** %2, align 8, !dbg !616, !tbaa !598
  %20 = getelementptr inbounds i8* %1, i64 8, !dbg !618
  %21 = bitcast i8* %20 to double**, !dbg !618
  %22 = load double** %21, align 8, !dbg !618, !tbaa !598
  %23 = getelementptr inbounds double* %22, i64 1, !dbg !618
  %24 = getelementptr inbounds i8* %1, i64 16, !dbg !619
  %25 = bitcast i8* %24 to double**, !dbg !619
  %26 = load double** %25, align 8, !dbg !619, !tbaa !598
  %27 = getelementptr inbounds double* %26, i64 2, !dbg !619
  %28 = add i32 %n, -1, !dbg !612
  %29 = bitcast double* %22 to i64*
  %30 = bitcast double* %26 to i64*
  br label %31, !dbg !612

; <label>:31                                      ; preds = %31, %.lr.ph
  %indvars.iv64 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next65, %31 ]
  %32 = getelementptr inbounds i32* %index, i64 %indvars.iv64, !dbg !620
  %33 = load i32* %32, align 4, !dbg !620, !tbaa !621
  tail call void @llvm.dbg.value(metadata i32 %33, i64 0, metadata !237, metadata !417), !dbg !622
  %34 = sext i32 %33 to i64, !dbg !623
  %35 = getelementptr inbounds %struct.t_atom* %atom, i64 %34, i32 0, !dbg !624
  %36 = load float* %35, align 4, !dbg !624, !tbaa !625
  tail call void @llvm.dbg.value(metadata float %36, i64 0, metadata !240, metadata !417), !dbg !627
  %37 = getelementptr inbounds [3 x float]* %x, i64 %34, i64 0, !dbg !628
  tail call void @llvm.dbg.value(metadata float undef, i64 0, metadata !241, metadata !417), !dbg !629
  %38 = bitcast float* %37 to <2 x float>*, !dbg !628
  %39 = load <2 x float>* %38, align 4, !dbg !628, !tbaa !545
  tail call void @llvm.dbg.value(metadata float undef, i64 0, metadata !242, metadata !417), !dbg !630
  %40 = getelementptr inbounds [3 x float]* %x, i64 %34, i64 2, !dbg !631
  %41 = load float* %40, align 4, !dbg !631, !tbaa !545
  tail call void @llvm.dbg.value(metadata float %41, i64 0, metadata !243, metadata !417), !dbg !632
  tail call void @llvm.dbg.value(metadata float undef, i64 0, metadata !378, metadata !417), !dbg !633
  %42 = extractelement <2 x float> %39, i32 1, !dbg !635
  %43 = fmul float %42, %42, !dbg !635
  tail call void @llvm.dbg.value(metadata float %41, i64 0, metadata !378, metadata !417), !dbg !636
  %44 = fmul float %41, %41, !dbg !638
  %45 = fadd float %43, %44, !dbg !639
  %46 = fmul float %36, %45, !dbg !640
  %47 = fpext float %46 to double, !dbg !641
  %48 = load double* %19, align 8, !dbg !642, !tbaa !558
  %49 = fadd double %48, %47, !dbg !642
  store double %49, double* %19, align 8, !dbg !642, !tbaa !558
  tail call void @llvm.dbg.value(metadata float undef, i64 0, metadata !378, metadata !417), !dbg !643
  %50 = extractelement <2 x float> %39, i32 0, !dbg !645
  %51 = fmul float %50, %50, !dbg !645
  tail call void @llvm.dbg.value(metadata float %41, i64 0, metadata !378, metadata !417), !dbg !646
  %52 = fadd float %51, %44, !dbg !648
  %53 = fmul float %36, %52, !dbg !649
  %54 = fpext float %53 to double, !dbg !650
  %55 = load double* %23, align 8, !dbg !651, !tbaa !558
  %56 = fadd double %55, %54, !dbg !651
  store double %56, double* %23, align 8, !dbg !651, !tbaa !558
  tail call void @llvm.dbg.value(metadata float undef, i64 0, metadata !378, metadata !417), !dbg !652
  tail call void @llvm.dbg.value(metadata float undef, i64 0, metadata !378, metadata !417), !dbg !654
  %57 = fadd float %51, %43, !dbg !656
  %58 = fmul float %36, %57, !dbg !657
  %59 = fpext float %58 to double, !dbg !658
  %60 = load double* %27, align 8, !dbg !659, !tbaa !558
  %61 = fadd double %59, %60, !dbg !659
  store double %61, double* %27, align 8, !dbg !659, !tbaa !558
  %62 = fmul float %50, %42, !dbg !660
  %63 = fmul float %36, %62, !dbg !661
  %64 = fpext float %63 to double, !dbg !662
  %65 = load double* %22, align 8, !dbg !663, !tbaa !558
  %66 = fsub double %65, %64, !dbg !663
  store double %66, double* %22, align 8, !dbg !663, !tbaa !558
  %67 = insertelement <2 x float> undef, float %41, i32 0, !dbg !664
  %68 = insertelement <2 x float> %67, float %41, i32 1, !dbg !664
  %69 = fmul <2 x float> %39, %68, !dbg !664
  %70 = insertelement <2 x float> undef, float %36, i32 0, !dbg !665
  %71 = insertelement <2 x float> %70, float %36, i32 1, !dbg !665
  %72 = fmul <2 x float> %69, %71, !dbg !665
  %73 = fpext <2 x float> %72 to <2 x double>, !dbg !666
  %74 = bitcast double* %26 to <2 x double>*, !dbg !667
  %75 = load <2 x double>* %74, align 8, !dbg !667, !tbaa !558
  %76 = fsub <2 x double> %75, %73, !dbg !667
  %77 = bitcast double* %26 to <2 x double>*, !dbg !667
  store <2 x double> %76, <2 x double>* %77, align 8, !dbg !667, !tbaa !558
  %indvars.iv.next65 = add nuw nsw i64 %indvars.iv64, 1, !dbg !612
  %lftr.wideiv = trunc i64 %indvars.iv64 to i32, !dbg !612
  %exitcond66 = icmp eq i32 %lftr.wideiv, %28, !dbg !612
  br i1 %exitcond66, label %._crit_edge, label %31, !dbg !612

._crit_edge:                                      ; preds = %31, %.preheader4._crit_edge
  %78 = phi double* [ %18, %.preheader4._crit_edge ], [ %22, %31 ]
  %79 = phi double* [ %17, %.preheader4._crit_edge ], [ %26, %31 ]
  %80 = phi i64* [ %.pre81, %.preheader4._crit_edge ], [ %30, %31 ]
  %81 = phi double* [ %.pre78, %.preheader4._crit_edge ], [ %19, %31 ]
  %82 = phi i64* [ %.pre, %.preheader4._crit_edge ], [ %29, %31 ]
  %83 = load i64* %82, align 8, !dbg !613, !tbaa !558
  %84 = getelementptr inbounds double* %81, i64 1, !dbg !614
  %85 = bitcast double* %84 to i64*, !dbg !668
  store i64 %83, i64* %85, align 8, !dbg !668, !tbaa !558
  %86 = load i64* %80, align 8, !dbg !615, !tbaa !558
  %87 = getelementptr inbounds double* %81, i64 2, !dbg !669
  %88 = bitcast double* %87 to i64*, !dbg !670
  store i64 %86, i64* %88, align 8, !dbg !670, !tbaa !558
  %89 = getelementptr inbounds double* %79, i64 1, !dbg !671
  %90 = bitcast double* %89 to i64*, !dbg !671
  %91 = load i64* %90, align 8, !dbg !671, !tbaa !558
  %92 = getelementptr inbounds double* %78, i64 2, !dbg !672
  %93 = bitcast double* %92 to i64*, !dbg !673
  store i64 %91, i64* %93, align 8, !dbg !673, !tbaa !558
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !235, metadata !417), !dbg !592
  br label %.preheader3, !dbg !674

.preheader3:                                      ; preds = %..preheader3_crit_edge, %._crit_edge
  %94 = phi double* [ %81, %._crit_edge ], [ %.pre83, %..preheader3_crit_edge ]
  %indvars.iv61 = phi i64 [ 0, %._crit_edge ], [ %indvars.iv.next62, %..preheader3_crit_edge ]
  br label %95, !dbg !676

; <label>:95                                      ; preds = %95, %.preheader3
  %indvars.iv58 = phi i64 [ 0, %.preheader3 ], [ %indvars.iv.next59, %95 ]
  %96 = getelementptr inbounds double* %94, i64 %indvars.iv58, !dbg !680
  %97 = load double* %96, align 8, !dbg !680, !tbaa !558
  %98 = fptrunc double %97 to float, !dbg !680
  %99 = getelementptr inbounds [3 x float]* %trans, i64 %indvars.iv61, i64 %indvars.iv58, !dbg !682
  store float %98, float* %99, align 4, !dbg !683, !tbaa !545
  %indvars.iv.next59 = add nuw nsw i64 %indvars.iv58, 1, !dbg !676
  %exitcond60 = icmp eq i64 %indvars.iv.next59, 3, !dbg !676
  br i1 %exitcond60, label %100, label %95, !dbg !676

; <label>:100                                     ; preds = %95
  %indvars.iv.next62 = add nuw nsw i64 %indvars.iv61, 1, !dbg !674
  %exitcond63 = icmp eq i64 %indvars.iv.next62, 3, !dbg !674
  br i1 %exitcond63, label %101, label %..preheader3_crit_edge, !dbg !674

..preheader3_crit_edge:                           ; preds = %100
  %.phi.trans.insert82 = getelementptr inbounds double** %2, i64 %indvars.iv.next62
  %.pre83 = load double** %.phi.trans.insert82, align 8, !dbg !680, !tbaa !598
  br label %.preheader3, !dbg !674

; <label>:101                                     ; preds = %100
  %102 = getelementptr inbounds [4 x double]* %dd, i64 0, i64 0, !dbg !684
  tail call void @llvm.dbg.value(metadata i32* %nrot, i64 0, metadata !239, metadata !417), !dbg !685
  call void @jacobi(double** %2, i32 3, double* %102, double** %4, i32* %nrot) #7, !dbg !686
  %103 = getelementptr inbounds [4 x double]* %dd, i64 0, i64 1, !dbg !687
  %104 = bitcast [4 x double]* %dd to <2 x double>*, !dbg !687
  %105 = load <2 x double>* %104, align 16, !dbg !687, !tbaa !558
  %106 = call <2 x double> @llvm.fabs.v2f64(<2 x double> %105), !dbg !687
  %107 = extractelement <2 x double> %106, i32 0, !dbg !687
  %108 = extractelement <2 x double> %106, i32 1, !dbg !687
  %109 = fcmp ogt double %108, %107, !dbg !687
  %110 = extractelement <2 x double> %105, i32 1, !dbg !689
  br i1 %109, label %.preheader98, label %138, !dbg !689

.preheader98:                                     ; preds = %101, %.preheader98
  %indvars.iv55 = phi i64 [ %indvars.iv.next56, %.preheader98 ], [ 0, %101 ]
  %111 = getelementptr inbounds double** %4, i64 %indvars.iv55, !dbg !690
  %112 = bitcast double** %111 to i64**, !dbg !690
  %113 = load i64** %112, align 8, !dbg !690, !tbaa !598
  %114 = load i64* %113, align 8, !dbg !690, !tbaa !558
  %115 = getelementptr inbounds [4 x double]* %tvec, i64 0, i64 %indvars.iv55, !dbg !690
  %116 = bitcast double* %115 to i64*, !dbg !690
  store i64 %114, i64* %116, align 8, !dbg !690, !tbaa !558
  %indvars.iv.next56 = add nuw nsw i64 %indvars.iv55, 1, !dbg !694
  %exitcond57 = icmp eq i64 %indvars.iv.next56, 4, !dbg !694
  br i1 %exitcond57, label %117, label %.preheader98, !dbg !694

; <label>:117                                     ; preds = %.preheader98
  %118 = extractelement <2 x double> %105, i32 0, !dbg !695
  %119 = fptrunc double %118 to float, !dbg !695
  %120 = getelementptr inbounds [4 x double]* %dd, i64 0, i64 0, !dbg !695
  store double %110, double* %120, align 16, !dbg !695, !tbaa !558
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !236, metadata !417), !dbg !696
  br label %121, !dbg !697

; <label>:121                                     ; preds = %121, %117
  %indvars.iv52 = phi i64 [ 0, %117 ], [ %indvars.iv.next53, %121 ]
  %122 = getelementptr inbounds double** %4, i64 %indvars.iv52, !dbg !699
  %123 = load double** %122, align 8, !dbg !699, !tbaa !598
  %124 = getelementptr inbounds double* %123, i64 1, !dbg !699
  %125 = bitcast double* %124 to i64*, !dbg !699
  %126 = load i64* %125, align 8, !dbg !699, !tbaa !558
  %127 = bitcast double* %123 to i64*, !dbg !699
  store i64 %126, i64* %127, align 8, !dbg !699, !tbaa !558
  %indvars.iv.next53 = add nuw nsw i64 %indvars.iv52, 1, !dbg !697
  %exitcond54 = icmp eq i64 %indvars.iv.next53, 4, !dbg !697
  br i1 %exitcond54, label %128, label %121, !dbg !697

; <label>:128                                     ; preds = %121
  %129 = fpext float %119 to double, !dbg !695
  store double %129, double* %103, align 8, !dbg !695, !tbaa !558
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !236, metadata !417), !dbg !696
  br label %130, !dbg !701

; <label>:130                                     ; preds = %130, %128
  %indvars.iv49 = phi i64 [ 0, %128 ], [ %indvars.iv.next50, %130 ]
  %131 = getelementptr inbounds [4 x double]* %tvec, i64 0, i64 %indvars.iv49, !dbg !703
  %132 = bitcast double* %131 to i64*, !dbg !703
  %133 = load i64* %132, align 8, !dbg !703, !tbaa !558
  %134 = getelementptr inbounds double** %4, i64 %indvars.iv49, !dbg !703
  %135 = load double** %134, align 8, !dbg !703, !tbaa !598
  %136 = getelementptr inbounds double* %135, i64 1, !dbg !703
  %137 = bitcast double* %136 to i64*, !dbg !703
  store i64 %133, i64* %137, align 8, !dbg !703, !tbaa !558
  %indvars.iv.next50 = add nuw nsw i64 %indvars.iv49, 1, !dbg !701
  %exitcond51 = icmp eq i64 %indvars.iv.next50, 4, !dbg !701
  br i1 %exitcond51, label %.loopexit2, label %130, !dbg !701

.loopexit2:                                       ; preds = %130
  %.pre84 = load double* %103, align 8, !dbg !705, !tbaa !558
  br label %138

; <label>:138                                     ; preds = %.loopexit2, %101
  %.in = phi double [ %.pre84, %.loopexit2 ], [ %110, %101 ]
  %139 = getelementptr inbounds [4 x double]* %dd, i64 0, i64 2, !dbg !705
  %140 = load double* %139, align 16, !dbg !705, !tbaa !558
  %141 = call double @fabs(double %140) #9, !dbg !705
  %142 = call double @fabs(double %.in) #9, !dbg !705
  %143 = fcmp ogt double %141, %142, !dbg !705
  br i1 %143, label %.preheader97, label %171, !dbg !707

.preheader97:                                     ; preds = %138, %.preheader97
  %indvars.iv46 = phi i64 [ %indvars.iv.next47, %.preheader97 ], [ 0, %138 ]
  %144 = getelementptr inbounds double** %4, i64 %indvars.iv46, !dbg !708
  %145 = load double** %144, align 8, !dbg !708, !tbaa !598
  %146 = getelementptr inbounds double* %145, i64 1, !dbg !708
  %147 = bitcast double* %146 to i64*, !dbg !708
  %148 = load i64* %147, align 8, !dbg !708, !tbaa !558
  %149 = getelementptr inbounds [4 x double]* %tvec, i64 0, i64 %indvars.iv46, !dbg !708
  %150 = bitcast double* %149 to i64*, !dbg !708
  store i64 %148, i64* %150, align 8, !dbg !708, !tbaa !558
  %indvars.iv.next47 = add nuw nsw i64 %indvars.iv46, 1, !dbg !712
  %exitcond48 = icmp eq i64 %indvars.iv.next47, 4, !dbg !712
  br i1 %exitcond48, label %151, label %.preheader97, !dbg !712

; <label>:151                                     ; preds = %.preheader97
  %152 = fptrunc double %.in to float, !dbg !713
  store double %140, double* %103, align 8, !dbg !713, !tbaa !558
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !236, metadata !417), !dbg !696
  br label %153, !dbg !714

; <label>:153                                     ; preds = %153, %151
  %indvars.iv43 = phi i64 [ 0, %151 ], [ %indvars.iv.next44, %153 ]
  %154 = getelementptr inbounds double** %4, i64 %indvars.iv43, !dbg !716
  %155 = load double** %154, align 8, !dbg !716, !tbaa !598
  %156 = getelementptr inbounds double* %155, i64 2, !dbg !716
  %157 = bitcast double* %156 to i64*, !dbg !716
  %158 = load i64* %157, align 8, !dbg !716, !tbaa !558
  %159 = getelementptr inbounds double* %155, i64 1, !dbg !716
  %160 = bitcast double* %159 to i64*, !dbg !716
  store i64 %158, i64* %160, align 8, !dbg !716, !tbaa !558
  %indvars.iv.next44 = add nuw nsw i64 %indvars.iv43, 1, !dbg !714
  %exitcond45 = icmp eq i64 %indvars.iv.next44, 4, !dbg !714
  br i1 %exitcond45, label %161, label %153, !dbg !714

; <label>:161                                     ; preds = %153
  %162 = fpext float %152 to double, !dbg !713
  store double %162, double* %139, align 16, !dbg !713, !tbaa !558
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !236, metadata !417), !dbg !696
  br label %163, !dbg !718

; <label>:163                                     ; preds = %163, %161
  %indvars.iv40 = phi i64 [ 0, %161 ], [ %indvars.iv.next41, %163 ]
  %164 = getelementptr inbounds [4 x double]* %tvec, i64 0, i64 %indvars.iv40, !dbg !720
  %165 = bitcast double* %164 to i64*, !dbg !720
  %166 = load i64* %165, align 8, !dbg !720, !tbaa !558
  %167 = getelementptr inbounds double** %4, i64 %indvars.iv40, !dbg !720
  %168 = load double** %167, align 8, !dbg !720, !tbaa !598
  %169 = getelementptr inbounds double* %168, i64 2, !dbg !720
  %170 = bitcast double* %169 to i64*, !dbg !720
  store i64 %166, i64* %170, align 8, !dbg !720, !tbaa !558
  %indvars.iv.next41 = add nuw nsw i64 %indvars.iv40, 1, !dbg !718
  %exitcond42 = icmp eq i64 %indvars.iv.next41, 4, !dbg !718
  br i1 %exitcond42, label %.loopexit, label %163, !dbg !718

.loopexit:                                        ; preds = %163
  %.pre85 = load double* %103, align 8, !dbg !722, !tbaa !558
  br label %171

; <label>:171                                     ; preds = %.loopexit, %138
  %.in95 = phi double [ %.pre85, %.loopexit ], [ %.in, %138 ]
  %172 = call double @fabs(double %.in95) #9, !dbg !722
  %173 = load double* %102, align 16, !dbg !722, !tbaa !558
  %174 = call double @fabs(double %173) #9, !dbg !722
  %175 = fcmp ogt double %172, %174, !dbg !722
  br i1 %175, label %.preheader96, label %.preheader1, !dbg !724

.preheader96:                                     ; preds = %171, %.preheader96
  %indvars.iv37 = phi i64 [ %indvars.iv.next38, %.preheader96 ], [ 0, %171 ]
  %176 = getelementptr inbounds double** %4, i64 %indvars.iv37, !dbg !725
  %177 = bitcast double** %176 to i64**, !dbg !725
  %178 = load i64** %177, align 8, !dbg !725, !tbaa !598
  %179 = load i64* %178, align 8, !dbg !725, !tbaa !558
  %180 = getelementptr inbounds [4 x double]* %tvec, i64 0, i64 %indvars.iv37, !dbg !725
  %181 = bitcast double* %180 to i64*, !dbg !725
  store i64 %179, i64* %181, align 8, !dbg !725, !tbaa !558
  %indvars.iv.next38 = add nuw nsw i64 %indvars.iv37, 1, !dbg !729
  %exitcond39 = icmp eq i64 %indvars.iv.next38, 4, !dbg !729
  br i1 %exitcond39, label %182, label %.preheader96, !dbg !729

; <label>:182                                     ; preds = %.preheader96
  %183 = fptrunc double %173 to float, !dbg !730
  %184 = getelementptr inbounds [4 x double]* %dd, i64 0, i64 0, !dbg !730
  store double %.in95, double* %184, align 16, !dbg !730, !tbaa !558
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !236, metadata !417), !dbg !696
  br label %185, !dbg !731

; <label>:185                                     ; preds = %185, %182
  %indvars.iv34 = phi i64 [ 0, %182 ], [ %indvars.iv.next35, %185 ]
  %186 = getelementptr inbounds double** %4, i64 %indvars.iv34, !dbg !733
  %187 = load double** %186, align 8, !dbg !733, !tbaa !598
  %188 = getelementptr inbounds double* %187, i64 1, !dbg !733
  %189 = bitcast double* %188 to i64*, !dbg !733
  %190 = load i64* %189, align 8, !dbg !733, !tbaa !558
  %191 = bitcast double* %187 to i64*, !dbg !733
  store i64 %190, i64* %191, align 8, !dbg !733, !tbaa !558
  %indvars.iv.next35 = add nuw nsw i64 %indvars.iv34, 1, !dbg !731
  %exitcond36 = icmp eq i64 %indvars.iv.next35, 4, !dbg !731
  br i1 %exitcond36, label %192, label %185, !dbg !731

; <label>:192                                     ; preds = %185
  %193 = fpext float %183 to double, !dbg !730
  store double %193, double* %103, align 8, !dbg !730, !tbaa !558
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !236, metadata !417), !dbg !696
  br label %194, !dbg !735

; <label>:194                                     ; preds = %194, %192
  %indvars.iv31 = phi i64 [ 0, %192 ], [ %indvars.iv.next32, %194 ]
  %195 = getelementptr inbounds [4 x double]* %tvec, i64 0, i64 %indvars.iv31, !dbg !737
  %196 = bitcast double* %195 to i64*, !dbg !737
  %197 = load i64* %196, align 8, !dbg !737, !tbaa !558
  %198 = getelementptr inbounds double** %4, i64 %indvars.iv31, !dbg !737
  %199 = load double** %198, align 8, !dbg !737, !tbaa !598
  %200 = getelementptr inbounds double* %199, i64 1, !dbg !737
  %201 = bitcast double* %200 to i64*, !dbg !737
  store i64 %197, i64* %201, align 8, !dbg !737, !tbaa !558
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1, !dbg !735
  %exitcond33 = icmp eq i64 %indvars.iv.next32, 4, !dbg !735
  br i1 %exitcond33, label %.preheader1, label %194, !dbg !735

.preheader1:                                      ; preds = %171, %194, %213
  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %213 ], [ 0, %194 ], [ 0, %171 ]
  %202 = getelementptr inbounds [4 x double]* %dd, i64 0, i64 %indvars.iv28, !dbg !739
  %203 = load double* %202, align 8, !dbg !739, !tbaa !558
  %204 = fptrunc double %203 to float, !dbg !739
  %205 = getelementptr inbounds float* %d, i64 %indvars.iv28, !dbg !743
  store float %204, float* %205, align 4, !dbg !744, !tbaa !545
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !238, metadata !417), !dbg !745
  br label %206, !dbg !746

; <label>:206                                     ; preds = %206, %.preheader1
  %indvars.iv25 = phi i64 [ 0, %.preheader1 ], [ %indvars.iv.next26, %206 ]
  %207 = getelementptr inbounds double** %4, i64 %indvars.iv25, !dbg !748
  %208 = load double** %207, align 8, !dbg !748, !tbaa !598
  %209 = getelementptr inbounds double* %208, i64 %indvars.iv28, !dbg !748
  %210 = load double* %209, align 8, !dbg !748, !tbaa !558
  %211 = fptrunc double %210 to float, !dbg !748
  %212 = getelementptr inbounds [3 x float]* %trans, i64 %indvars.iv28, i64 %indvars.iv25, !dbg !750
  store float %211, float* %212, align 4, !dbg !751, !tbaa !545
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1, !dbg !746
  %exitcond27 = icmp eq i64 %indvars.iv.next26, 3, !dbg !746
  br i1 %exitcond27, label %213, label %206, !dbg !746

; <label>:213                                     ; preds = %206
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !752
  %exitcond30 = icmp eq i64 %indvars.iv.next29, 3, !dbg !752
  br i1 %exitcond30, label %.preheader, label %.preheader1, !dbg !752

.preheader:                                       ; preds = %213, %.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %.preheader ], [ 0, %213 ]
  %214 = getelementptr inbounds double** %2, i64 %indvars.iv, !dbg !753
  %215 = bitcast double** %214 to i8**, !dbg !753
  %216 = load i8** %215, align 8, !dbg !753, !tbaa !598
  call void @save_free(i8* getelementptr inbounds ([9 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 166, i8* %216) #7, !dbg !753
  %217 = getelementptr inbounds double** %4, i64 %indvars.iv, !dbg !757
  %218 = bitcast double** %217 to i8**, !dbg !757
  %219 = load i8** %218, align 8, !dbg !757, !tbaa !598
  call void @save_free(i8* getelementptr inbounds ([6 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 167, i8* %219) #7, !dbg !757
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !758
  %exitcond = icmp eq i64 %indvars.iv.next, 4, !dbg !758
  br i1 %exitcond, label %220, label %.preheader, !dbg !758

; <label>:220                                     ; preds = %.preheader
  call void @save_free(i8* getelementptr inbounds ([6 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 169, i8* %1) #7, !dbg !759
  call void @save_free(i8* getelementptr inbounds ([3 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 170, i8* %3) #7, !dbg !760
  ret void, !dbg !761
}
