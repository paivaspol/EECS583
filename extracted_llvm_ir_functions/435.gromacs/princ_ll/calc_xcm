define float @calc_xcm([3 x float]* nocapture %x, i32 %gnx, i32* %index, %struct.t_atom* %atom, float* nocapture %xcm, i32 %bQ) #0 {
entry:
  store float 0.000000e+00, float* %xcm, align 4, !tbaa !5
  %arrayidx1.i = getelementptr inbounds float* %xcm, i64 1
  store float 0.000000e+00, float* %arrayidx1.i, align 4, !tbaa !5
  %arrayidx2.i = getelementptr inbounds float* %xcm, i64 2
  store float 0.000000e+00, float* %arrayidx2.i, align 4, !tbaa !5
  %cmp52 = icmp sgt i32 %gnx, 0
  br i1 %cmp52, label %for.body.lr.ph, label %for.cond26.preheader

for.body.lr.ph:                                   ; preds = %entry
  %tobool = icmp eq i32* %index, null
  %tobool1 = icmp eq %struct.t_atom* %atom, null
  %tobool2 = icmp eq i32 %bQ, 0
  br label %for.body

for.cond26.preheader:                             ; preds = %for.inc23, %entry
  %tm.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %add, %for.inc23 ]
  br label %for.body29

for.body:                                         ; preds = %for.inc23, %for.body.lr.ph
  %indvars.iv59 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next60, %for.inc23 ]
  %tm.054 = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %add, %for.inc23 ]
  %0 = trunc i64 %indvars.iv59 to i32
  br i1 %tobool, label %cond.end, label %cond.true

cond.true:                                        ; preds = %for.body
  %arrayidx = getelementptr inbounds i32* %index, i64 %indvars.iv59
  %1 = load i32* %arrayidx, align 4, !tbaa !4
  br label %cond.end

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi i32 [ %1, %cond.true ], [ %0, %for.body ]
  %idxprom17.pre = sext i32 %cond to i64
  br i1 %tobool1, label %if.end11, label %if.then

if.then:                                          ; preds = %cond.end
  br i1 %tobool2, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.then
  %q = getelementptr inbounds %struct.t_atom* %atom, i64 %idxprom17.pre, i32 1
  %2 = load float* %q, align 4, !tbaa !5
  %fabsf = tail call float @fabsf(float %2) #2
  br label %if.end11

if.else:                                          ; preds = %if.then
  %m9 = getelementptr inbounds %struct.t_atom* %atom, i64 %idxprom17.pre, i32 0
  %3 = load float* %m9, align 4, !tbaa !5
  br label %if.end11

if.end11:                                         ; preds = %cond.end, %if.then3, %if.else
  %m0.0 = phi float [ %fabsf, %if.then3 ], [ %3, %if.else ], [ 1.000000e+00, %cond.end ]
  br label %for.body15

for.body15:                                       ; preds = %for.body15, %if.end11
  %indvars.iv55 = phi i64 [ 0, %if.end11 ], [ %indvars.iv.next56, %for.body15 ]
  %arrayidx19 = getelementptr inbounds [3 x float]* %x, i64 %idxprom17.pre, i64 %indvars.iv55
  %4 = load float* %arrayidx19, align 4, !tbaa !5
  %mul = fmul float %m0.0, %4
  %arrayidx21 = getelementptr inbounds float* %xcm, i64 %indvars.iv55
  %5 = load float* %arrayidx21, align 4, !tbaa !5
  %add22 = fadd float %5, %mul
  store float %add22, float* %arrayidx21, align 4, !tbaa !5
  %indvars.iv.next56 = add i64 %indvars.iv55, 1
  %lftr.wideiv57 = trunc i64 %indvars.iv.next56 to i32
  %exitcond58 = icmp eq i32 %lftr.wideiv57, 3
  br i1 %exitcond58, label %for.inc23, label %for.body15

for.inc23:                                        ; preds = %for.body15
  %add = fadd float %tm.054, %m0.0
  %indvars.iv.next60 = add i64 %indvars.iv59, 1
  %lftr.wideiv61 = trunc i64 %indvars.iv.next60 to i32
  %exitcond62 = icmp eq i32 %lftr.wideiv61, %gnx
  br i1 %exitcond62, label %for.cond26.preheader, label %for.body

for.body29:                                       ; preds = %for.body29, %for.cond26.preheader
  %indvars.iv = phi i64 [ 0, %for.cond26.preheader ], [ %indvars.iv.next, %for.body29 ]
  %arrayidx31 = getelementptr inbounds float* %xcm, i64 %indvars.iv
  %6 = load float* %arrayidx31, align 4, !tbaa !5
  %div = fdiv float %6, %tm.0.lcssa
  store float %div, float* %arrayidx31, align 4, !tbaa !5
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 3
  br i1 %exitcond, label %for.end34, label %for.body29

for.end34:                                        ; preds = %for.body29
  ret float %tm.0.lcssa
}
