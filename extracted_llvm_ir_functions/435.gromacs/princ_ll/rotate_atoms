define void @rotate_atoms(i32 %gnx, i32* %index, [3 x float]* nocapture %x, [3 x float]* nocapture %trans) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %gnx}, i64 0, metadata !71), !dbg !326
  tail call void @llvm.dbg.value(metadata !{i32* %index}, i64 0, metadata !72), !dbg !326
  tail call void @llvm.dbg.value(metadata !{[3 x float]* %x}, i64 0, metadata !73), !dbg !326
  tail call void @llvm.dbg.value(metadata !{[3 x float]* %trans}, i64 0, metadata !74), !dbg !326
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !78), !dbg !327
  %cmp77 = icmp sgt i32 %gnx, 0, !dbg !327
  br i1 %cmp77, label %for.body.lr.ph, label %for.end, !dbg !327

for.body.lr.ph:                                   ; preds = %entry
  %tobool = icmp eq i32* %index, null, !dbg !329
  %arrayidx11 = getelementptr inbounds [3 x float]* %trans, i64 0, i64 0, !dbg !331
  %arrayidx13 = getelementptr inbounds [3 x float]* %trans, i64 0, i64 1, !dbg !331
  %arrayidx16 = getelementptr inbounds [3 x float]* %trans, i64 0, i64 2, !dbg !331
  %arrayidx23 = getelementptr inbounds [3 x float]* %trans, i64 1, i64 0, !dbg !332
  %arrayidx26 = getelementptr inbounds [3 x float]* %trans, i64 1, i64 1, !dbg !332
  %arrayidx30 = getelementptr inbounds [3 x float]* %trans, i64 1, i64 2, !dbg !332
  %arrayidx37 = getelementptr inbounds [3 x float]* %trans, i64 2, i64 0, !dbg !333
  %arrayidx40 = getelementptr inbounds [3 x float]* %trans, i64 2, i64 1, !dbg !333
  %arrayidx44 = getelementptr inbounds [3 x float]* %trans, i64 2, i64 2, !dbg !333
  br label %for.body, !dbg !327

for.body:                                         ; preds = %cond.end, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %cond.end ]
  %0 = trunc i64 %indvars.iv to i32, !dbg !329
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !329

cond.true:                                        ; preds = %for.body
  %arrayidx = getelementptr inbounds i32* %index, i64 %indvars.iv, !dbg !329
  %1 = load i32* %arrayidx, align 4, !dbg !329, !tbaa !260
  br label %cond.end, !dbg !329

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi i32 [ %1, %cond.true ], [ %0, %for.body ], !dbg !329
  tail call void @llvm.dbg.value(metadata !{i32 %cond}, i64 0, metadata !79), !dbg !329
  %idxprom1 = sext i32 %cond to i64, !dbg !334
  %arrayidx3 = getelementptr inbounds [3 x float]* %x, i64 %idxprom1, i64 0, !dbg !334
  %2 = load float* %arrayidx3, align 4, !dbg !334, !tbaa !262
  tail call void @llvm.dbg.value(metadata !{float %2}, i64 0, metadata !75), !dbg !334
  %arrayidx6 = getelementptr inbounds [3 x float]* %x, i64 %idxprom1, i64 1, !dbg !335
  %3 = load float* %arrayidx6, align 4, !dbg !335, !tbaa !262
  tail call void @llvm.dbg.value(metadata !{float %3}, i64 0, metadata !76), !dbg !335
  %arrayidx9 = getelementptr inbounds [3 x float]* %x, i64 %idxprom1, i64 2, !dbg !336
  %4 = load float* %arrayidx9, align 4, !dbg !336, !tbaa !262
  tail call void @llvm.dbg.value(metadata !{float %4}, i64 0, metadata !77), !dbg !336
  %5 = load float* %arrayidx11, align 4, !dbg !331, !tbaa !262
  %mul = fmul float %2, %5, !dbg !331
  %6 = load float* %arrayidx13, align 4, !dbg !331, !tbaa !262
  %mul14 = fmul float %3, %6, !dbg !331
  %add = fadd float %mul, %mul14, !dbg !331
  %7 = load float* %arrayidx16, align 4, !dbg !331, !tbaa !262
  %mul17 = fmul float %4, %7, !dbg !331
  %add18 = fadd float %add, %mul17, !dbg !331
  store float %add18, float* %arrayidx3, align 4, !dbg !331, !tbaa !262
  %8 = load float* %arrayidx23, align 4, !dbg !332, !tbaa !262
  %mul24 = fmul float %2, %8, !dbg !332
  %9 = load float* %arrayidx26, align 4, !dbg !332, !tbaa !262
  %mul27 = fmul float %3, %9, !dbg !332
  %add28 = fadd float %mul24, %mul27, !dbg !332
  %10 = load float* %arrayidx30, align 4, !dbg !332, !tbaa !262
  %mul31 = fmul float %4, %10, !dbg !332
  %add32 = fadd float %add28, %mul31, !dbg !332
  store float %add32, float* %arrayidx6, align 4, !dbg !332, !tbaa !262
  %11 = load float* %arrayidx37, align 4, !dbg !333, !tbaa !262
  %mul38 = fmul float %2, %11, !dbg !333
  %12 = load float* %arrayidx40, align 4, !dbg !333, !tbaa !262
  %mul41 = fmul float %3, %12, !dbg !333
  %add42 = fadd float %mul38, %mul41, !dbg !333
  %13 = load float* %arrayidx44, align 4, !dbg !333, !tbaa !262
  %mul45 = fmul float %4, %13, !dbg !333
  %add46 = fadd float %add42, %mul45, !dbg !333
  store float %add46, float* %arrayidx9, align 4, !dbg !333, !tbaa !262
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !327
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !327
  %exitcond = icmp eq i32 %lftr.wideiv, %gnx, !dbg !327
  br i1 %exitcond, label %for.end, label %for.body, !dbg !327

for.end:                                          ; preds = %cond.end, %entry
  ret void, !dbg !337
}
