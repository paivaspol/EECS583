define void @rotate_atoms(i32 %gnx, i32* readonly %index, [3 x float]* nocapture %x, [3 x float]* nocapture readonly %trans) #4 {
  %1 = icmp sgt i32 %gnx, 0
  br i1 %1, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %0
  %2 = icmp eq i32* %index, null
  %3 = getelementptr inbounds [3 x float]* %trans, i64 0, i64 0
  %4 = getelementptr inbounds [3 x float]* %trans, i64 0, i64 1
  %5 = getelementptr inbounds [3 x float]* %trans, i64 0, i64 2
  %6 = getelementptr inbounds [3 x float]* %trans, i64 1, i64 0
  %7 = getelementptr inbounds [3 x float]* %trans, i64 1, i64 1
  %8 = getelementptr inbounds [3 x float]* %trans, i64 1, i64 2
  %9 = getelementptr inbounds [3 x float]* %trans, i64 2, i64 0
  %10 = getelementptr inbounds [3 x float]* %trans, i64 2, i64 1
  %11 = getelementptr inbounds [3 x float]* %trans, i64 2, i64 2
  %12 = add i32 %gnx, -1
  br label %13

; <label>:13                                      ; preds = %18, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %18 ]
  %14 = trunc i64 %indvars.iv to i32
  br i1 %2, label %18, label %15

; <label>:15                                      ; preds = %13
  %16 = getelementptr inbounds i32* %index, i64 %indvars.iv
  %17 = load i32* %16, align 4, !tbaa !19
  br label %18

; <label>:18                                      ; preds = %13, %15
  %19 = phi i32 [ %17, %15 ], [ %14, %13 ]
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [3 x float]* %x, i64 %20, i64 0
  %22 = load float* %21, align 4, !tbaa !14
  %23 = getelementptr inbounds [3 x float]* %x, i64 %20, i64 1
  %24 = load float* %23, align 4, !tbaa !14
  %25 = getelementptr inbounds [3 x float]* %x, i64 %20, i64 2
  %26 = load float* %25, align 4, !tbaa !14
  %27 = load float* %3, align 4, !tbaa !14
  %28 = fmul float %22, %27
  %29 = load float* %4, align 4, !tbaa !14
  %30 = fmul float %24, %29
  %31 = fadd float %28, %30
  %32 = load float* %5, align 4, !tbaa !14
  %33 = fmul float %26, %32
  %34 = fadd float %31, %33
  store float %34, float* %21, align 4, !tbaa !14
  %35 = load float* %6, align 4, !tbaa !14
  %36 = fmul float %22, %35
  %37 = load float* %7, align 4, !tbaa !14
  %38 = fmul float %24, %37
  %39 = fadd float %36, %38
  %40 = load float* %8, align 4, !tbaa !14
  %41 = fmul float %26, %40
  %42 = fadd float %39, %41
  store float %42, float* %23, align 4, !tbaa !14
  %43 = load float* %9, align 4, !tbaa !14
  %44 = fmul float %22, %43
  %45 = load float* %10, align 4, !tbaa !14
  %46 = fmul float %24, %45
  %47 = fadd float %44, %46
  %48 = load float* %11, align 4, !tbaa !14
  %49 = fmul float %26, %48
  %50 = fadd float %47, %49
  store float %50, float* %25, align 4, !tbaa !14
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i32 %14, %12
  br i1 %exitcond, label %._crit_edge, label %13

._crit_edge:                                      ; preds = %18, %0
  ret void
}
