define void @update_forcerec(%struct.__sFILE* %log, %struct.t_forcerec* nocapture %fr, [3 x float]* nocapture readonly %box) #3 {
  %1 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 33
  %2 = load i32* %1, align 4, !tbaa !14
  %3 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 5
  %4 = load float* %3, align 4, !tbaa !17
  %5 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 23
  %6 = load float* %5, align 4, !tbaa !18
  %7 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 4
  %8 = load float* %7, align 4, !tbaa !19
  %9 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 8
  %10 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 6
  %11 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 9
  %12 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 10
  %13 = icmp eq i32 %2, 2
  %eel.off.i = add i32 %2, -1
  %14 = icmp ult i32 %eel.off.i, 2
  br i1 %14, label %15, label %123

; <label>:15                                      ; preds = %0
  %16 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 3
  %17 = load float* %16, align 4, !tbaa !20
  %18 = getelementptr inbounds [3 x float]* %box, i64 0, i64 0
  %19 = load float* %18, align 4, !tbaa !21
  %20 = getelementptr inbounds [3 x float]* %box, i64 1, i64 1
  %21 = load float* %20, align 4, !tbaa !21
  %22 = getelementptr inbounds [3 x float]* %box, i64 2, i64 2
  %23 = load float* %22, align 4, !tbaa !21
  %24 = fmul float %21, %23
  %25 = getelementptr inbounds [3 x float]* %box, i64 2, i64 1
  %26 = load float* %25, align 4, !tbaa !21
  %27 = getelementptr inbounds [3 x float]* %box, i64 1, i64 2
  %28 = load float* %27, align 4, !tbaa !21
  %29 = fmul float %26, %28
  %30 = fsub float %24, %29
  %31 = fmul float %19, %30
  %32 = getelementptr inbounds [3 x float]* %box, i64 1, i64 0
  %33 = load float* %32, align 4, !tbaa !21
  %34 = getelementptr inbounds [3 x float]* %box, i64 0, i64 1
  %35 = load float* %34, align 4, !tbaa !21
  %36 = fmul float %23, %35
  %37 = getelementptr inbounds [3 x float]* %box, i64 0, i64 2
  %38 = load float* %37, align 4, !tbaa !21
  %39 = fmul float %26, %38
  %40 = fsub float %36, %39
  %41 = fmul float %33, %40
  %42 = fsub float %31, %41
  %43 = getelementptr inbounds [3 x float]* %box, i64 2, i64 0
  %44 = load float* %43, align 4, !tbaa !21
  %45 = fmul float %28, %35
  %46 = fmul float %21, %38
  %47 = fsub float %45, %46
  %48 = fmul float %44, %47
  %49 = fadd float %48, %42
  %50 = fdiv float %17, %49
  br i1 %13, label %51, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %15
  %.pre.i = fpext float %4 to double
  br label %65

; <label>:51                                      ; preds = %15
  %52 = fpext float %8 to double
  %53 = fcmp ugt float %8, 0.000000e+00
  br i1 %53, label %55, label %54

; <label>:54                                      ; preds = %51
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([58 x i8]* @.str54, i64 0, i64 0), double %52) #8
  br label %55

; <label>:55                                      ; preds = %54, %51
  %56 = fmul float %50, 2.000000e+00
  %57 = fpext float %56 to double
  %58 = fpext float %4 to double
  %59 = fmul double %58, 5.727650e-04
  %60 = fmul double %59, 0x3F810732CDE67DC4
  %61 = fmul double %60, %52
  %62 = fdiv double %57, %61
  %63 = tail call double @sqrt(double %62) #9
  %64 = fptrunc double %63 to float
  br label %65

; <label>:65                                      ; preds = %55, %._crit_edge.i
  %.pre-phi.i = phi double [ %.pre.i, %._crit_edge.i ], [ %58, %55 ]
  %storemerge.i = phi float [ 0.000000e+00, %._crit_edge.i ], [ %64, %55 ]
  store float %storemerge.i, float* %9, align 4, !tbaa !21
  %fabsf2.i = tail call float @fabsf(float %4) #6
  %66 = fpext float %fabsf2.i to double
  %67 = fcmp olt double %66, 1.200000e-38
  br i1 %67, label %68, label %73

; <label>:68                                      ; preds = %65
  %69 = fmul float %6, 2.000000e+00
  %70 = fmul float %6, %69
  %71 = fmul float %6, %70
  %72 = fdiv float 1.000000e+00, %71
  store float %72, float* %11, align 4, !tbaa !21
  br label %94

; <label>:73                                      ; preds = %65
  %74 = fmul float %6, %storemerge.i
  %75 = fadd float %74, 1.000000e+00
  %76 = fmul float %74, %74
  %77 = fmul float %4, %76
  %78 = fadd float %4, -1.000000e+00
  %79 = fmul float %78, %75
  %80 = fadd float %79, %77
  %81 = fmul float %4, 2.000000e+00
  %82 = fadd float %81, 1.000000e+00
  %83 = fmul float %82, %75
  %84 = fmul float %77, 2.000000e+00
  %85 = fadd float %83, %84
  %86 = fdiv float %80, %85
  %87 = fmul float %6, %6
  %88 = fmul float %6, %87
  %89 = fdiv float %86, %88
  store float %89, float* %11, align 4, !tbaa !21
  %90 = fdiv float 1.000000e+00, %6
  %91 = fmul float %6, %89
  %92 = fmul float %6, %91
  %93 = fadd float %90, %92
  br label %94

; <label>:94                                      ; preds = %73, %68
  %95 = phi float [ %89, %73 ], [ %72, %68 ]
  %storemerge3.i = phi float [ %93, %73 ], [ 0.000000e+00, %68 ]
  store float %storemerge3.i, float* %12, align 4, !tbaa !21
  store float 0x40615DEEE0000000, float* %10, align 4, !tbaa !21
  %96 = fpext float %95 to double
  %97 = fmul double %96, 2.000000e+00
  %98 = tail call double @llvm.pow.f64(double %97, double 0xBFD5555555555555) #7
  %99 = fptrunc double %98 to float
  %.b.i = load i1* @calc_rffac.bFirst, align 1
  br i1 %.b.i, label %calc_rffac.exit, label %100

; <label>:100                                     ; preds = %94
  br i1 %13, label %101, label %102

; <label>:101                                     ; preds = %100
  tail call void @please_cite(%struct.__sFILE* %log, i8* getelementptr inbounds ([10 x i8]* @.str55, i64 0, i64 0)) #8
  br label %102

; <label>:102                                     ; preds = %101, %100
  %103 = icmp eq %struct.__sFILE* %log, null
  br i1 %103, label %122, label %104

; <label>:104                                     ; preds = %102
  %105 = sext i32 %2 to i64
  %106 = getelementptr inbounds [11 x i8*]* @eel_names, i64 0, i64 %105
  %107 = load i8** %106, align 8, !tbaa !22
  %108 = fpext float %50 to double
  %109 = fpext float %49 to double
  %110 = load float* %9, align 4, !tbaa !21
  %111 = fpext float %110 to double
  %112 = fpext float %6 to double
  %113 = load float* %11, align 4, !tbaa !21
  %114 = fpext float %113 to double
  %115 = load float* %12, align 4, !tbaa !21
  %116 = fpext float %115 to double
  %117 = load float* %10, align 4, !tbaa !21
  %118 = fpext float %117 to double
  %119 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %log, i8* getelementptr inbounds ([115 x i8]* @.str56, i64 0, i64 0), i8* %107, double %.pre-phi.i, double %108, double %109, double %111, double %112, double %114, double %116, double %118) #8
  %120 = fpext float %99 to double
  %121 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %log, i8* getelementptr inbounds ([57 x i8]* @.str57, i64 0, i64 0), double %120) #8
  br label %122

; <label>:122                                     ; preds = %104, %102
  store i1 true, i1* @calc_rffac.bFirst, align 1
  br label %calc_rffac.exit

; <label>:123                                     ; preds = %0
  store float 0.000000e+00, float* %9, align 4, !tbaa !21
  store float 0.000000e+00, float* %11, align 4, !tbaa !21
  store float 0.000000e+00, float* %12, align 4, !tbaa !21
  %fabsf.i = tail call float @fabsf(float %4) #6
  %124 = fpext float %fabsf.i to double
  %125 = fcmp olt double %124, 1.200000e-38
  %126 = fpext float %4 to double
  %.op.i = fdiv double 0x40615DEEE174A498, %126
  %127 = fptrunc double %.op.i to float
  %128 = select i1 %125, float 0x40615DEEE0000000, float %127
  store float %128, float* %10, align 4, !tbaa !21
  br label %calc_rffac.exit

calc_rffac.exit:                                  ; preds = %94, %122, %123
  ret void
}
