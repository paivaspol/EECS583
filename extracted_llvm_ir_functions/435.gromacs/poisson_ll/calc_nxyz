define void @calc_nxyz(i32 %nx, i32 %ny, i32 %nz, i32** nocapture %nnx, i32** nocapture %nny, i32** nocapture %nnz) #0 {
entry:
  %mul = mul nsw i32 %nx, 3
  %call = tail call i8* @save_calloc(i8* getelementptr inbounds ([5 x i8]* @.str6, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8]* @.str1, i64 0, i64 0), i32 148, i32 %mul, i32 4) #4
  %0 = bitcast i8* %call to i32*
  store i32* %0, i32** %nnx, align 8, !tbaa !3
  %mul1 = mul nsw i32 %ny, 3
  %call2 = tail call i8* @save_calloc(i8* getelementptr inbounds ([5 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8]* @.str1, i64 0, i64 0), i32 149, i32 %mul1, i32 4) #4
  %1 = bitcast i8* %call2 to i32*
  store i32* %1, i32** %nny, align 8, !tbaa !3
  %mul3 = mul nsw i32 %nz, 3
  %call4 = tail call i8* @save_calloc(i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8]* @.str1, i64 0, i64 0), i32 150, i32 %mul3, i32 4) #4
  %2 = bitcast i8* %call4 to i32*
  store i32* %2, i32** %nnz, align 8, !tbaa !3
  %cmp50 = icmp sgt i32 %nx, 0
  br i1 %cmp50, label %for.body.lr.ph, label %for.cond6.preheader

for.body.lr.ph:                                   ; preds = %entry
  %3 = load i32** %nnx, align 8, !tbaa !3
  br label %for.body

for.cond6.preheader:                              ; preds = %for.body, %entry
  %cmp848 = icmp sgt i32 %ny, 0
  br i1 %cmp848, label %for.body9.lr.ph, label %for.cond16.preheader

for.body9.lr.ph:                                  ; preds = %for.cond6.preheader
  %4 = load i32** %nny, align 8, !tbaa !3
  br label %for.body9

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv54 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next55, %for.body ]
  %5 = trunc i64 %indvars.iv54 to i32
  %rem = srem i32 %5, %nx
  %arrayidx = getelementptr inbounds i32* %3, i64 %indvars.iv54
  store i32 %rem, i32* %arrayidx, align 4, !tbaa !0
  %indvars.iv.next55 = add i64 %indvars.iv54, 1
  %6 = trunc i64 %indvars.iv.next55 to i32
  %cmp = icmp slt i32 %6, %mul
  br i1 %cmp, label %for.body, label %for.cond6.preheader

for.cond16.preheader:                             ; preds = %for.body9, %for.cond6.preheader
  %cmp1846 = icmp sgt i32 %nz, 0
  br i1 %cmp1846, label %for.body19, label %for.end25

for.body9:                                        ; preds = %for.body9.lr.ph, %for.body9
  %indvars.iv52 = phi i64 [ 0, %for.body9.lr.ph ], [ %indvars.iv.next53, %for.body9 ]
  %7 = trunc i64 %indvars.iv52 to i32
  %rem10 = srem i32 %7, %ny
  %arrayidx12 = getelementptr inbounds i32* %4, i64 %indvars.iv52
  store i32 %rem10, i32* %arrayidx12, align 4, !tbaa !0
  %indvars.iv.next53 = add i64 %indvars.iv52, 1
  %8 = trunc i64 %indvars.iv.next53 to i32
  %cmp8 = icmp slt i32 %8, %mul1
  br i1 %cmp8, label %for.body9, label %for.cond16.preheader

for.body19:                                       ; preds = %for.cond16.preheader, %for.body19
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body19 ], [ 0, %for.cond16.preheader ]
  %9 = trunc i64 %indvars.iv to i32
  %rem20 = srem i32 %9, %nz
  %arrayidx22 = getelementptr inbounds i32* %2, i64 %indvars.iv
  store i32 %rem20, i32* %arrayidx22, align 4, !tbaa !0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %10 = trunc i64 %indvars.iv.next to i32
  %cmp18 = icmp slt i32 %10, %mul3
  br i1 %cmp18, label %for.body19, label %for.end25

for.end25:                                        ; preds = %for.body19, %for.cond16.preheader
  ret void
}
