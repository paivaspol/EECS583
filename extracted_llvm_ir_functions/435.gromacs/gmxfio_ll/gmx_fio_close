define void @gmx_fio_close(i32 %fio) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %fio}, i64 0, metadata !248), !dbg !592
  tail call fastcc void @_gmx_fio_check(i32 %fio, i32 737) #10, !dbg !593
  %idxprom = sext i32 %fio to i64, !dbg !594
  %0 = load %struct.t_fileio** @FIO, align 8, !dbg !594, !tbaa !514
  %iFTP = getelementptr inbounds %struct.t_fileio* %0, i64 %idxprom, i32 0, !dbg !594
  %1 = load i32* %iFTP, align 4, !dbg !594, !tbaa !501
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !595), !dbg !596
  tail call void @llvm.dbg.value(metadata !562, i64 0, metadata !597), !dbg !596
  tail call void @llvm.dbg.value(metadata !564, i64 0, metadata !598), !dbg !596
  tail call void @llvm.dbg.value(metadata !86, i64 0, metadata !599), !dbg !600
  tail call void @llvm.dbg.value(metadata !86, i64 0, metadata !601), !dbg !602
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %entry
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ 0, %entry ]
  %bResult.06.i = phi i32 [ %.bResult.0.i, %for.body.i ], [ 0, %entry ]
  %arrayidx.i = getelementptr inbounds [4 x i32]* @ftpXDR, i64 0, i64 %indvars.iv.i, !dbg !603
  %2 = load i32* %arrayidx.i, align 4, !dbg !603, !tbaa !501
  %cmp1.i = icmp eq i32 %2, %1, !dbg !603
  tail call void @llvm.dbg.value(metadata !504, i64 0, metadata !599), !dbg !604
  %.bResult.0.i = select i1 %cmp1.i, i32 1, i32 %bResult.06.i, !dbg !603
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1, !dbg !602
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32, !dbg !602
  %exitcond = icmp eq i32 %lftr.wideiv, 4, !dbg !602
  br i1 %exitcond, label %in_ftpset.exit, label %for.body.i, !dbg !602

in_ftpset.exit:                                   ; preds = %for.body.i
  %tobool = icmp eq i32 %.bResult.0.i, 0, !dbg !594
  br i1 %tobool, label %if.else, label %if.then, !dbg !594

if.then:                                          ; preds = %in_ftpset.exit
  %xdr = getelementptr inbounds %struct.t_fileio* %0, i64 %idxprom, i32 8, !dbg !605
  %3 = load %struct.XDR** %xdr, align 8, !dbg !605, !tbaa !514
  %call3 = tail call i32 @xdrclose(%struct.XDR* %3) #8, !dbg !605
  %4 = load %struct.t_fileio** @FIO, align 8, !dbg !607, !tbaa !514
  %xdr6 = getelementptr inbounds %struct.t_fileio* %4, i64 %idxprom, i32 8, !dbg !607
  %5 = load %struct.XDR** %xdr6, align 8, !dbg !607, !tbaa !514
  %6 = bitcast %struct.XDR* %5 to i8*, !dbg !607
  tail call void @save_free(i8* getelementptr inbounds ([13 x i8]* @.str27, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str15, i64 0, i64 0), i32 741, i8* %6) #8, !dbg !607
  br label %if.end13, !dbg !608

if.else:                                          ; preds = %in_ftpset.exit
  %bStdio = getelementptr inbounds %struct.t_fileio* %0, i64 %idxprom, i32 5, !dbg !609
  %7 = load i32* %bStdio, align 4, !dbg !609, !tbaa !501
  %tobool9 = icmp eq i32 %7, 0, !dbg !609
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !609

if.then10:                                        ; preds = %if.else
  %fp = getelementptr inbounds %struct.t_fileio* %0, i64 %idxprom, i32 7, !dbg !611
  %8 = load %struct._IO_FILE** %fp, align 8, !dbg !611, !tbaa !514
  tail call void @ffclose(%struct._IO_FILE* %8) #8, !dbg !611
  br label %if.end13, !dbg !611

if.end13:                                         ; preds = %if.else, %if.then10, %if.then
  %9 = load %struct.t_fileio** @FIO, align 8, !dbg !612, !tbaa !514
  %fn = getelementptr inbounds %struct.t_fileio* %9, i64 %idxprom, i32 6, !dbg !612
  %10 = load i8** %fn, align 8, !dbg !612, !tbaa !514
  tail call void @save_free(i8* getelementptr inbounds ([12 x i8]* @.str28, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str15, i64 0, i64 0), i32 749, i8* %10) #8, !dbg !612
  %11 = load %struct.t_fileio** @FIO, align 8, !dbg !613, !tbaa !514
  %bOpen = getelementptr inbounds %struct.t_fileio* %11, i64 %idxprom, i32 1, !dbg !613
  store i32 0, i32* %bOpen, align 4, !dbg !613, !tbaa !501
  store i32 (i8*, i32, i32, i8*, i8*, i32)* @do_dummy, i32 (i8*, i32, i32, i8*, i8*, i32)** @do_read, align 8, !dbg !614, !tbaa !514
  store i32 (i8*, i32, i32, i8*, i8*, i32)* @do_dummy, i32 (i8*, i32, i32, i8*, i8*, i32)** @do_write, align 8, !dbg !615, !tbaa !514
  ret void, !dbg !616
}
