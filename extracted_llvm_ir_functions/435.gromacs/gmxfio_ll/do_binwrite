define internal i32 @do_binwrite(i8* nocapture %item, i32 %nitem, i32 %eio, i8* %desc, i8* %srcfile, i32 %line) #1 {
entry:
  %ssize = alloca i32, align 4
  call fastcc void @_check_nitem(i32 %eio, i32 %nitem, i32 403) #9
  switch i32 %eio, label %sw.default [
    i32 0, label %sw.epilog
    i32 1, label %sw.epilog
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb4
    i32 5, label %sw.bb5
    i32 6, label %sw.bb6
    i32 7, label %sw.bb7
  ]

sw.bb2:                                           ; preds = %entry
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry
  br label %sw.epilog

sw.bb7:                                           ; preds = %entry
  %call = call i64 @strlen(i8* %item) #8
  %add = add i64 %call, 1
  %conv = trunc i64 %add to i32
  store i32 %conv, i32* %ssize, align 4, !tbaa !0
  %sext = shl i64 %add, 32
  %conv8 = ashr exact i64 %sext, 32
  %0 = bitcast i32* %ssize to i8*
  %call9 = call i32 @do_binwrite(i8* %0, i32 1, i32 1, i8* %desc, i8* %srcfile, i32 %line) #9
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call fastcc void @fe(i32 %eio, i8* %desc, i32 431) #9
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %entry, %sw.default, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2
  %size.0 = phi i64 [ 0, %sw.default ], [ %conv8, %sw.bb7 ], [ 12, %sw.bb6 ], [ 12, %sw.bb5 ], [ 12, %sw.bb4 ], [ 2, %sw.bb3 ], [ 1, %sw.bb2 ], [ 4, %entry ], [ 4, %entry ]
  %conv10 = sext i32 %nitem to i64
  %1 = load %struct.t_fileio** @curfio, align 8, !tbaa !3
  %fp = getelementptr inbounds %struct.t_fileio* %1, i64 0, i32 7
  %2 = load %struct._IO_FILE** %fp, align 8, !tbaa !3
  %call11 = call i64 @fwrite(i8* %item, i64 %size.0, i64 %conv10, %struct._IO_FILE* %2) #7
  %cmp = icmp eq i64 %call11, %conv10
  br i1 %cmp, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %sw.epilog
  %3 = load %struct.t_fileio** @curfio, align 8, !tbaa !3
  %bDebug = getelementptr inbounds %struct.t_fileio* %3, i64 0, i32 4
  %4 = load i32* %bDebug, align 4, !tbaa !0
  %tobool = icmp eq i32 %4, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %idxprom = sext i32 %eio to i64
  %arrayidx = getelementptr inbounds [8 x i8*]* @eioNames, i64 0, i64 %idxprom
  %6 = load i8** %arrayidx, align 8, !tbaa !3
  %fn = getelementptr inbounds %struct.t_fileio* %3, i64 0, i32 6
  %7 = load i8** %fn, align 8, !tbaa !3
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([53 x i8]* @.str31, i64 0, i64 0), i8* %6, i8* %desc, i8* %7, i8* %srcfile, i32 %line) #7
  %8 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %conv15 = trunc i64 %call11 to i32
  %conv16 = trunc i64 %size.0 to i32
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([45 x i8]* @.str32, i64 0, i64 0), i32 %conv15, i32 %conv16) #7
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %sw.epilog, %if.then
  %conv20 = zext i1 %cmp to i32
  ret i32 %conv20
}
