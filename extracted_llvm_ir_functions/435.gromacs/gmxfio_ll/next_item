define internal fastcc i8* @next_item(%struct._IO_FILE* %fp) #1 {
entry:
  %0 = load i32* @nbuf, align 4, !tbaa !0
  %tobool96 = icmp eq i32 %0, 0
  br i1 %tobool96, label %if.else, label %if.then

tailrecurse.loopexit:                             ; preds = %do.cond, %do.cond
  %1 = load i32* @nbuf, align 4, !tbaa !0
  %tobool = icmp eq i32 %1, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %tailrecurse.loopexit, %entry
  %2 = phi i32 [ %0, %entry ], [ %1, %tailrecurse.loopexit ]
  %3 = load i32* getelementptr inbounds ([20 x i32]* @next_item.bufindex, i64 0, i64 0), align 16, !tbaa !0
  %cmp88 = icmp sgt i32 %2, 1
  br i1 %cmp88, label %for.body, label %for.end

for.body:                                         ; preds = %if.then, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 1, %if.then ]
  %arrayidx = getelementptr inbounds [20 x i32]* @next_item.bufindex, i64 0, i64 %indvars.iv
  %4 = load i32* %arrayidx, align 4, !tbaa !0
  %5 = add nsw i64 %indvars.iv, -1
  %arrayidx2 = getelementptr inbounds [20 x i32]* @next_item.bufindex, i64 0, i64 %5
  store i32 %4, i32* %arrayidx2, align 4, !tbaa !0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %6 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %6, %2
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %if.then
  %dec = add nsw i32 %2, -1
  store i32 %dec, i32* @nbuf, align 4, !tbaa !0
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds [4096 x i8]* @next_item.buf, i64 0, i64 %idx.ext
  ret i8* %add.ptr

if.else:                                          ; preds = %entry, %tailrecurse.loopexit
  %call = tail call i8* @fgets2(i8* getelementptr inbounds ([4096 x i8]* @next_item.buf, i64 0, i64 0), i32 4095, %struct._IO_FILE* %fp) #7
  %cmp3 = icmp eq i8* %call, null
  br i1 %cmp3, label %if.then4, label %while.cond

if.then4:                                         ; preds = %if.else
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([12 x i8]* @.str61, i64 0, i64 0)) #7
  br label %while.cond

while.cond:                                       ; preds = %do.cond, %while.body, %if.else, %if.then4
  %i.1 = phi i32 [ 0, %if.then4 ], [ 0, %if.else ], [ %inc22, %while.body ], [ %i.3, %do.cond ]
  %idxprom5 = sext i32 %i.1 to i64
  %arrayidx6 = getelementptr inbounds [4096 x i8]* @next_item.buf, i64 0, i64 %idxprom5
  %7 = load i8* %arrayidx6, align 1, !tbaa !1
  switch i8 %7, label %land.rhs [
    i8 0, label %while.cond23
    i8 59, label %while.cond23
  ]

land.rhs:                                         ; preds = %while.cond
  %idxprom17 = sext i8 %7 to i64
  %call18 = tail call i16** @__ctype_b_loc() #10
  %8 = load i16** %call18, align 8, !tbaa !3
  %arrayidx19 = getelementptr inbounds i16* %8, i64 %idxprom17
  %9 = load i16* %arrayidx19, align 2, !tbaa !6
  %and = and i16 %9, 8192
  %tobool21 = icmp eq i16 %and, 0
  br i1 %tobool21, label %while.cond23, label %while.body

while.body:                                       ; preds = %land.rhs
  %inc22 = add nsw i32 %i.1, 1
  br label %while.cond

while.cond23:                                     ; preds = %land.rhs, %while.cond, %while.cond, %land.rhs35.while.cond23_crit_edge
  %10 = phi i8 [ %.pre, %land.rhs35.while.cond23_crit_edge ], [ %7, %while.cond ], [ %7, %while.cond ], [ %7, %land.rhs ]
  %indvars.iv104 = phi i64 [ %indvars.iv.next105, %land.rhs35.while.cond23_crit_edge ], [ %idxprom5, %while.cond ], [ %idxprom5, %while.cond ], [ %idxprom5, %land.rhs ]
  %i.2 = phi i32 [ %inc47, %land.rhs35.while.cond23_crit_edge ], [ %i.1, %while.cond ], [ %i.1, %while.cond ], [ %i.1, %land.rhs ]
  %arrayidx25 = getelementptr inbounds [4096 x i8]* @next_item.buf, i64 0, i64 %indvars.iv104
  switch i8 %10, label %land.rhs35 [
    i8 0, label %while.end48
    i8 59, label %while.end48
  ]

land.rhs35:                                       ; preds = %while.cond23
  %idxprom39 = sext i8 %10 to i64
  %call40 = tail call i16** @__ctype_b_loc() #10
  %11 = load i16** %call40, align 8, !tbaa !3
  %arrayidx41 = getelementptr inbounds i16* %11, i64 %idxprom39
  %12 = load i16* %arrayidx41, align 2, !tbaa !6
  %and43 = and i16 %12, 8192
  %lnot = icmp eq i16 %and43, 0
  %indvars.iv.next105 = add i64 %indvars.iv104, 1
  br i1 %lnot, label %land.rhs35.while.cond23_crit_edge, label %while.end48

land.rhs35.while.cond23_crit_edge:                ; preds = %land.rhs35
  %inc47 = add nsw i32 %i.2, 1
  %arrayidx25.phi.trans.insert = getelementptr inbounds [4096 x i8]* @next_item.buf, i64 0, i64 %indvars.iv.next105
  %.pre = load i8* %arrayidx25.phi.trans.insert, align 1, !tbaa !1
  br label %while.cond23

while.end48:                                      ; preds = %while.cond23, %while.cond23, %land.rhs35
  %cmp51 = icmp sgt i32 %i.2, %i.1
  br i1 %cmp51, label %if.then53, label %do.cond

if.then53:                                        ; preds = %while.end48
  store i8 0, i8* %arrayidx25, align 1, !tbaa !1
  %13 = load i32* @nbuf, align 4, !tbaa !0
  %inc56 = add nsw i32 %13, 1
  store i32 %inc56, i32* @nbuf, align 4, !tbaa !0
  %idxprom57 = sext i32 %13 to i64
  %arrayidx58 = getelementptr inbounds [20 x i32]* @next_item.bufindex, i64 0, i64 %idxprom57
  store i32 %i.1, i32* %arrayidx58, align 4, !tbaa !0
  %inc59 = add nsw i32 %i.2, 1
  br label %do.cond

do.cond:                                          ; preds = %while.end48, %if.then53
  %i.3 = phi i32 [ %inc59, %if.then53 ], [ %i.2, %while.end48 ]
  switch i8 %10, label %while.cond [
    i8 0, label %tailrecurse.loopexit
    i8 59, label %tailrecurse.loopexit
  ]
}
