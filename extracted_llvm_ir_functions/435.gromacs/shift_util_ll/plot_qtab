define void @plot_qtab(i8* %fn, i32 %nx, i32 %ny, i32 %nz, float*** nocapture readonly %qtab) #2 {
  %box = alloca [3 x float], align 4
  tail call void @llvm.dbg.value(metadata i8* %fn, i64 0, metadata !454, metadata !655), !dbg !1774
  tail call void @llvm.dbg.value(metadata i32 %nx, i64 0, metadata !455, metadata !655), !dbg !1775
  tail call void @llvm.dbg.value(metadata i32 %ny, i64 0, metadata !456, metadata !655), !dbg !1776
  tail call void @llvm.dbg.value(metadata i32 %nz, i64 0, metadata !457, metadata !655), !dbg !1777
  tail call void @llvm.dbg.value(metadata float*** %qtab, i64 0, metadata !458, metadata !655), !dbg !1778
  tail call void @llvm.dbg.declare(metadata [3 x float]* %box, metadata !459, metadata !655), !dbg !1779
  %1 = sitofp i32 %nx to float, !dbg !1780
  %2 = getelementptr inbounds [3 x float]* %box, i64 0, i64 0, !dbg !1781
  store float %1, float* %2, align 4, !dbg !1782, !tbaa !679
  %3 = sitofp i32 %ny to float, !dbg !1783
  %4 = getelementptr inbounds [3 x float]* %box, i64 0, i64 1, !dbg !1784
  store float %3, float* %4, align 4, !dbg !1785, !tbaa !679
  %5 = sitofp i32 %nz to float, !dbg !1786
  %6 = getelementptr inbounds [3 x float]* %box, i64 0, i64 2, !dbg !1787
  store float %5, float* %6, align 4, !dbg !1788, !tbaa !679
  %7 = fmul float %1, %3, !dbg !1789
  %8 = fmul float %5, %7, !dbg !1790
  %9 = fptosi float %8 to i32, !dbg !1791
  tail call void @llvm.dbg.value(metadata i32 %9, i64 0, metadata !463, metadata !655), !dbg !1792
  %10 = tail call i8* @save_calloc(i8* getelementptr inbounds ([3 x i8]* @.str21, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8]* @.str1, i64 0, i64 0), i32 523, i32 %9, i32 12) #9, !dbg !1793
  %11 = bitcast i8* %10 to [3 x float]*, !dbg !1793
  tail call void @llvm.dbg.value(metadata [3 x float]* %11, i64 0, metadata !460, metadata !655), !dbg !1794
  %12 = tail call i8* @save_calloc(i8* getelementptr inbounds ([4 x i8]* @.str22, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8]* @.str1, i64 0, i64 0), i32 524, i32 %9, i32 4) #9, !dbg !1795
  %13 = bitcast i8* %12 to float*, !dbg !1795
  tail call void @llvm.dbg.value(metadata float* %13, i64 0, metadata !461, metadata !655), !dbg !1796
  %14 = sdiv i32 %nx, 2, !dbg !1797
  tail call void @llvm.dbg.value(metadata i32 %14, i64 0, metadata !455, metadata !655), !dbg !1775
  %15 = sdiv i32 %ny, 2, !dbg !1798
  tail call void @llvm.dbg.value(metadata i32 %15, i64 0, metadata !456, metadata !655), !dbg !1776
  %16 = sdiv i32 %nz, 2, !dbg !1799
  tail call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !457, metadata !655), !dbg !1777
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !462, metadata !655), !dbg !1800
  %17 = sub nsw i32 0, %14, !dbg !1801
  tail call void @llvm.dbg.value(metadata i32 %17, i64 0, metadata !464, metadata !655), !dbg !1803
  %18 = icmp sgt i32 %14, %17, !dbg !1804
  br i1 %18, label %.lr.ph12, label %._crit_edge13, !dbg !1806

.lr.ph12:                                         ; preds = %0
  %19 = sub nsw i32 0, %15, !dbg !1807
  %20 = icmp sgt i32 %15, %19, !dbg !1809
  %21 = sub nsw i32 0, %16, !dbg !1811
  %22 = icmp sgt i32 %16, %21, !dbg !1813
  %23 = sext i32 %21 to i64
  %24 = sext i32 %16 to i64, !dbg !1806
  %25 = shl nsw i32 %16, 1, !dbg !1806
  %26 = add nsw i32 %16, -1, !dbg !1806
  %27 = sext i32 %19 to i64
  %28 = sext i32 %15 to i64, !dbg !1806
  %29 = add nsw i32 %15, -1, !dbg !1806
  %30 = sext i32 %17 to i64
  %31 = sext i32 %14 to i64, !dbg !1806
  %32 = add nsw i32 %14, -1, !dbg !1806
  br label %33, !dbg !1806

; <label>:33                                      ; preds = %._crit_edge7, %.lr.ph12
  %indvars.iv20 = phi i64 [ %30, %.lr.ph12 ], [ %indvars.iv.next21, %._crit_edge7 ]
  %i.09 = phi i32 [ 0, %.lr.ph12 ], [ %i.1.lcssa, %._crit_edge7 ]
  tail call void @llvm.dbg.value(metadata i32 %19, i64 0, metadata !465, metadata !655), !dbg !1815
  br i1 %20, label %.lr.ph6, label %._crit_edge7, !dbg !1816

.lr.ph6:                                          ; preds = %33
  %34 = add nsw i64 %indvars.iv20, %31, !dbg !1817
  %35 = trunc i64 %34 to i32, !dbg !1819
  %36 = sitofp i32 %35 to double, !dbg !1819
  %37 = fadd double %36, 5.000000e-01, !dbg !1820
  %38 = fptrunc double %37 to float, !dbg !1819
  %39 = getelementptr inbounds float*** %qtab, i64 %34, !dbg !1821
  br label %40, !dbg !1816

; <label>:40                                      ; preds = %65, %.lr.ph6
  %indvars.iv16 = phi i64 [ %27, %.lr.ph6 ], [ %indvars.iv.next17, %65 ]
  %i.13 = phi i32 [ %i.09, %.lr.ph6 ], [ %i.2.lcssa, %65 ]
  tail call void @llvm.dbg.value(metadata i32 %21, i64 0, metadata !466, metadata !655), !dbg !1822
  br i1 %22, label %.lr.ph, label %65, !dbg !1823

.lr.ph:                                           ; preds = %40
  %41 = add nsw i64 %indvars.iv16, %28, !dbg !1824
  %42 = trunc i64 %41 to i32, !dbg !1825
  %43 = sitofp i32 %42 to double, !dbg !1825
  %44 = fadd double %43, 5.000000e-01, !dbg !1826
  %45 = fptrunc double %44 to float, !dbg !1825
  %46 = load float*** %39, align 8, !dbg !1821, !tbaa !723
  %47 = getelementptr inbounds float** %46, i64 %41, !dbg !1821
  %48 = load float** %47, align 8, !dbg !1821, !tbaa !723
  %49 = sext i32 %i.13 to i64
  br label %50, !dbg !1823

; <label>:50                                      ; preds = %50, %.lr.ph
  %indvars.iv14 = phi i64 [ %49, %.lr.ph ], [ %indvars.iv.next15, %50 ]
  %indvars.iv = phi i64 [ %23, %.lr.ph ], [ %indvars.iv.next, %50 ]
  %51 = getelementptr inbounds [3 x float]* %11, i64 %indvars.iv14, i64 0, !dbg !1827
  store float %38, float* %51, align 4, !dbg !1828, !tbaa !679
  %52 = getelementptr inbounds [3 x float]* %11, i64 %indvars.iv14, i64 1, !dbg !1829
  store float %45, float* %52, align 4, !dbg !1830, !tbaa !679
  %53 = add nsw i64 %indvars.iv, %24, !dbg !1831
  %54 = trunc i64 %53 to i32, !dbg !1832
  %55 = sitofp i32 %54 to double, !dbg !1832
  %56 = fadd double %55, 5.000000e-01, !dbg !1833
  %57 = fptrunc double %56 to float, !dbg !1832
  %58 = getelementptr inbounds [3 x float]* %11, i64 %indvars.iv14, i64 2, !dbg !1834
  store float %57, float* %58, align 4, !dbg !1835, !tbaa !679
  %59 = getelementptr inbounds float* %48, i64 %53, !dbg !1821
  %60 = bitcast float* %59 to i32*, !dbg !1821
  %61 = load i32* %60, align 4, !dbg !1821, !tbaa !679
  %62 = getelementptr inbounds float* %13, i64 %indvars.iv14, !dbg !1836
  %63 = bitcast float* %62 to i32*, !dbg !1837
  store i32 %61, i32* %63, align 4, !dbg !1837, !tbaa !679
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !1823
  %indvars.iv.next15 = add nsw i64 %indvars.iv14, 1, !dbg !1823
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !1823
  %exitcond = icmp eq i32 %lftr.wideiv, %26, !dbg !1823
  br i1 %exitcond, label %._crit_edge, label %50, !dbg !1823

._crit_edge:                                      ; preds = %50
  %64 = add i32 %25, %i.13, !dbg !1823
  br label %65, !dbg !1823

; <label>:65                                      ; preds = %._crit_edge, %40
  %i.2.lcssa = phi i32 [ %64, %._crit_edge ], [ %i.13, %40 ]
  %indvars.iv.next17 = add nsw i64 %indvars.iv16, 1, !dbg !1816
  %lftr.wideiv18 = trunc i64 %indvars.iv16 to i32, !dbg !1816
  %exitcond19 = icmp eq i32 %lftr.wideiv18, %29, !dbg !1816
  br i1 %exitcond19, label %._crit_edge7, label %40, !dbg !1816

._crit_edge7:                                     ; preds = %65, %33
  %i.1.lcssa = phi i32 [ %i.09, %33 ], [ %i.2.lcssa, %65 ]
  %indvars.iv.next21 = add nsw i64 %indvars.iv20, 1, !dbg !1806
  %lftr.wideiv22 = trunc i64 %indvars.iv20 to i32, !dbg !1806
  %exitcond23 = icmp eq i32 %lftr.wideiv22, %32, !dbg !1806
  br i1 %exitcond23, label %._crit_edge13, label %33, !dbg !1806

._crit_edge13:                                    ; preds = %._crit_edge7, %0
  call void @plot_phi(i8* %fn, float* %2, i32 %9, [3 x float]* %11, float* %13) #11, !dbg !1838
  tail call void @save_free(i8* getelementptr inbounds ([3 x i8]* @.str21, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8]* @.str1, i64 0, i64 0), i32 540, i8* %10) #9, !dbg !1839
  tail call void @save_free(i8* getelementptr inbounds ([4 x i8]* @.str22, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8]* @.str1, i64 0, i64 0), i32 541, i8* %12) #9, !dbg !1840
  ret void, !dbg !1841
}
