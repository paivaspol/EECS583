define void @plot_qtab(i8* %fn, i32 %nx, i32 %ny, i32 %nz, float*** nocapture readonly %qtab) #1 {
  %box = alloca [3 x float], align 4
  %1 = sitofp i32 %nx to float
  %2 = getelementptr inbounds [3 x float]* %box, i64 0, i64 0
  store float %1, float* %2, align 4, !tbaa !2
  %3 = sitofp i32 %ny to float
  %4 = getelementptr inbounds [3 x float]* %box, i64 0, i64 1
  store float %3, float* %4, align 4, !tbaa !2
  %5 = sitofp i32 %nz to float
  %6 = getelementptr inbounds [3 x float]* %box, i64 0, i64 2
  store float %5, float* %6, align 4, !tbaa !2
  %7 = fmul float %1, %3
  %8 = fmul float %5, %7
  %9 = fptosi float %8 to i32
  %10 = tail call i8* @save_calloc(i8* getelementptr inbounds ([3 x i8]* @.str21, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8]* @.str1, i64 0, i64 0), i32 523, i32 %9, i32 12) #8
  %11 = bitcast i8* %10 to [3 x float]*
  %12 = tail call i8* @save_calloc(i8* getelementptr inbounds ([4 x i8]* @.str22, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8]* @.str1, i64 0, i64 0), i32 524, i32 %9, i32 4) #8
  %13 = bitcast i8* %12 to float*
  %14 = sdiv i32 %nx, 2
  %15 = sdiv i32 %ny, 2
  %16 = sdiv i32 %nz, 2
  %17 = sub nsw i32 0, %14
  %18 = icmp sgt i32 %14, %17
  br i1 %18, label %.lr.ph12, label %._crit_edge13

.lr.ph12:                                         ; preds = %0
  %19 = sub nsw i32 0, %15
  %20 = icmp sgt i32 %15, %19
  %21 = sub nsw i32 0, %16
  %22 = icmp sgt i32 %16, %21
  %23 = sext i32 %21 to i64
  %24 = sext i32 %16 to i64
  %25 = shl nsw i32 %16, 1
  %26 = add nsw i32 %16, -1
  %27 = sext i32 %19 to i64
  %28 = sext i32 %15 to i64
  %29 = add nsw i32 %15, -1
  %30 = sext i32 %17 to i64
  %31 = sext i32 %14 to i64
  %32 = add nsw i32 %14, -1
  br label %33

; <label>:33                                      ; preds = %._crit_edge7, %.lr.ph12
  %indvars.iv20 = phi i64 [ %30, %.lr.ph12 ], [ %indvars.iv.next21, %._crit_edge7 ]
  %i.09 = phi i32 [ 0, %.lr.ph12 ], [ %i.1.lcssa, %._crit_edge7 ]
  br i1 %20, label %.lr.ph6, label %._crit_edge7

.lr.ph6:                                          ; preds = %33
  %34 = add nsw i64 %indvars.iv20, %31
  %35 = trunc i64 %34 to i32
  %36 = sitofp i32 %35 to double
  %37 = fadd double %36, 5.000000e-01
  %38 = fptrunc double %37 to float
  %39 = getelementptr inbounds float*** %qtab, i64 %34
  br label %40

; <label>:40                                      ; preds = %65, %.lr.ph6
  %indvars.iv16 = phi i64 [ %27, %.lr.ph6 ], [ %indvars.iv.next17, %65 ]
  %i.13 = phi i32 [ %i.09, %.lr.ph6 ], [ %i.2.lcssa, %65 ]
  br i1 %22, label %.lr.ph, label %65

.lr.ph:                                           ; preds = %40
  %41 = add nsw i64 %indvars.iv16, %28
  %42 = trunc i64 %41 to i32
  %43 = sitofp i32 %42 to double
  %44 = fadd double %43, 5.000000e-01
  %45 = fptrunc double %44 to float
  %46 = load float*** %39, align 8, !tbaa !6
  %47 = getelementptr inbounds float** %46, i64 %41
  %48 = load float** %47, align 8, !tbaa !6
  %49 = sext i32 %i.13 to i64
  br label %50

; <label>:50                                      ; preds = %50, %.lr.ph
  %indvars.iv14 = phi i64 [ %49, %.lr.ph ], [ %indvars.iv.next15, %50 ]
  %indvars.iv = phi i64 [ %23, %.lr.ph ], [ %indvars.iv.next, %50 ]
  %51 = getelementptr inbounds [3 x float]* %11, i64 %indvars.iv14, i64 0
  store float %38, float* %51, align 4, !tbaa !2
  %52 = getelementptr inbounds [3 x float]* %11, i64 %indvars.iv14, i64 1
  store float %45, float* %52, align 4, !tbaa !2
  %53 = add nsw i64 %indvars.iv, %24
  %54 = trunc i64 %53 to i32
  %55 = sitofp i32 %54 to double
  %56 = fadd double %55, 5.000000e-01
  %57 = fptrunc double %56 to float
  %58 = getelementptr inbounds [3 x float]* %11, i64 %indvars.iv14, i64 2
  store float %57, float* %58, align 4, !tbaa !2
  %59 = getelementptr inbounds float* %48, i64 %53
  %60 = bitcast float* %59 to i32*
  %61 = load i32* %60, align 4, !tbaa !2
  %62 = getelementptr inbounds float* %13, i64 %indvars.iv14
  %63 = bitcast float* %62 to i32*
  store i32 %61, i32* %63, align 4, !tbaa !2
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %indvars.iv.next15 = add nsw i64 %indvars.iv14, 1
  %lftr.wideiv = trunc i64 %indvars.iv to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %26
  br i1 %exitcond, label %._crit_edge, label %50

._crit_edge:                                      ; preds = %50
  %64 = add i32 %25, %i.13
  br label %65

; <label>:65                                      ; preds = %._crit_edge, %40
  %i.2.lcssa = phi i32 [ %64, %._crit_edge ], [ %i.13, %40 ]
  %indvars.iv.next17 = add nsw i64 %indvars.iv16, 1
  %lftr.wideiv18 = trunc i64 %indvars.iv16 to i32
  %exitcond19 = icmp eq i32 %lftr.wideiv18, %29
  br i1 %exitcond19, label %._crit_edge7, label %40

._crit_edge7:                                     ; preds = %65, %33
  %i.1.lcssa = phi i32 [ %i.09, %33 ], [ %i.2.lcssa, %65 ]
  %indvars.iv.next21 = add nsw i64 %indvars.iv20, 1
  %lftr.wideiv22 = trunc i64 %indvars.iv20 to i32
  %exitcond23 = icmp eq i32 %lftr.wideiv22, %32
  br i1 %exitcond23, label %._crit_edge13, label %33

._crit_edge13:                                    ; preds = %._crit_edge7, %0
  call void @plot_phi(i8* %fn, float* %2, i32 %9, [3 x float]* %11, float* %13) #10
  tail call void @save_free(i8* getelementptr inbounds ([3 x i8]* @.str21, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8]* @.str1, i64 0, i64 0), i32 540, i8* %10) #8
  tail call void @save_free(i8* getelementptr inbounds ([4 x i8]* @.str22, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8]* @.str1, i64 0, i64 0), i32 541, i8* %12) #8
  ret void
}
