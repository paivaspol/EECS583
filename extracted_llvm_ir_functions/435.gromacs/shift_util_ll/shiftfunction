define float @shiftfunction(float %r1, float %rc, float %R) #4 {
entry:
  tail call void @llvm.dbg.value(metadata !{float %r1}, i64 0, metadata !215), !dbg !697
  tail call void @llvm.dbg.value(metadata !{float %rc}, i64 0, metadata !216), !dbg !697
  tail call void @llvm.dbg.value(metadata !{float %R}, i64 0, metadata !217), !dbg !697
  %cmp = fcmp ugt float %R, %r1, !dbg !698
  br i1 %cmp, label %if.else, label %return, !dbg !698

if.else:                                          ; preds = %entry
  %cmp1 = fcmp ult float %R, %rc, !dbg !699
  br i1 %cmp1, label %if.end4, label %if.then2, !dbg !699

if.then2:                                         ; preds = %if.else
  %mul = fmul float %R, %R, !dbg !700
  %conv3 = fdiv float -1.000000e+00, %mul, !dbg !700
  br label %return, !dbg !700

if.end4:                                          ; preds = %if.else
  %sub = fsub float %R, %r1, !dbg !701
  tail call void @llvm.dbg.value(metadata !{float %sub}, i64 0, metadata !218), !dbg !701
  %0 = load float* @A, align 4, !dbg !702, !tbaa !645
  %mul5 = fmul float %sub, %0, !dbg !702
  %mul6 = fmul float %sub, %mul5, !dbg !702
  %1 = load float* @B, align 4, !dbg !702, !tbaa !645
  %mul7 = fmul float %sub, %1, !dbg !702
  %mul8 = fmul float %sub, %mul7, !dbg !702
  %mul9 = fmul float %sub, %mul8, !dbg !702
  %add = fadd float %mul6, %mul9, !dbg !702
  br label %return, !dbg !702

return:                                           ; preds = %entry, %if.end4, %if.then2
  %retval.0 = phi float [ %conv3, %if.then2 ], [ %add, %if.end4 ], [ 0.000000e+00, %entry ]
  ret float %retval.0, !dbg !703
}
