define float @potential(float %r1, float %rc, float %R) #4 {
entry:
  tail call void @llvm.dbg.value(metadata !{float %r1}, i64 0, metadata !301), !dbg !804
  tail call void @llvm.dbg.value(metadata !{float %rc}, i64 0, metadata !302), !dbg !804
  tail call void @llvm.dbg.value(metadata !{float %R}, i64 0, metadata !303), !dbg !804
  %cmp = fcmp olt float %R, %r1, !dbg !805
  br i1 %cmp, label %if.then, label %if.else, !dbg !805

if.then:                                          ; preds = %entry
  %conv = fpext float %R to double, !dbg !806
  %div = fdiv double 1.000000e+00, %conv, !dbg !806
  %0 = load float* @C, align 4, !dbg !806, !tbaa !645
  %conv1 = fpext float %0 to double, !dbg !806
  %sub = fsub double %div, %conv1, !dbg !806
  %conv2 = fptrunc double %sub to float, !dbg !806
  br label %return, !dbg !806

if.else:                                          ; preds = %entry
  %cmp3 = fcmp ugt float %R, %rc, !dbg !807
  br i1 %cmp3, label %return, label %if.then5, !dbg !807

if.then5:                                         ; preds = %if.else
  %conv6 = fpext float %R to double, !dbg !808
  %div7 = fdiv double 1.000000e+00, %conv6, !dbg !808
  %1 = load float* @A_3, align 4, !dbg !808, !tbaa !645
  %sub8 = fsub float %R, %r1, !dbg !808
  %mul = fmul float %sub8, %sub8, !dbg !808
  %mul11 = fmul float %sub8, %mul, !dbg !808
  %mul12 = fmul float %mul11, %1, !dbg !808
  %conv13 = fpext float %mul12 to double, !dbg !808
  %sub14 = fsub double %div7, %conv13, !dbg !808
  %2 = load float* @B_4, align 4, !dbg !808, !tbaa !645
  %mul21 = fmul float %sub8, %mul11, !dbg !808
  %mul22 = fmul float %mul21, %2, !dbg !808
  %conv23 = fpext float %mul22 to double, !dbg !808
  %sub24 = fsub double %sub14, %conv23, !dbg !808
  %3 = load float* @C, align 4, !dbg !808, !tbaa !645
  %conv25 = fpext float %3 to double, !dbg !808
  %sub26 = fsub double %sub24, %conv25, !dbg !808
  %conv27 = fptrunc double %sub26 to float, !dbg !808
  br label %return, !dbg !808

return:                                           ; preds = %if.else, %if.then5, %if.then
  %retval.0 = phi float [ %conv2, %if.then ], [ %conv27, %if.then5 ], [ 0.000000e+00, %if.else ]
  ret float %retval.0, !dbg !809
}
