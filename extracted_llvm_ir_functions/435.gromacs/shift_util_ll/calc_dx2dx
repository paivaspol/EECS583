define float @calc_dx2dx(float* nocapture readonly %xi, float* nocapture readonly %xj, float* nocapture readonly %box, float* nocapture %dx) #1 {
  br label %1

; <label>:1                                       ; preds = %20, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %20 ]
  %dx2.02 = phi float [ 0.000000e+00, %0 ], [ %23, %20 ]
  %2 = getelementptr inbounds float* %xj, i64 %indvars.iv
  %3 = load float* %2, align 4, !tbaa !2
  %4 = getelementptr inbounds float* %xi, i64 %indvars.iv
  %5 = load float* %4, align 4, !tbaa !2
  %6 = fsub float %3, %5
  %7 = fpext float %6 to double
  %8 = getelementptr inbounds float* %box, i64 %indvars.iv
  %9 = load float* %8, align 4, !tbaa !2
  %10 = fpext float %9 to double
  %11 = fmul double %10, -5.000000e-01
  %12 = fcmp olt double %7, %11
  br i1 %12, label %13, label %15

; <label>:13                                      ; preds = %1
  %14 = fadd float %6, %9
  br label %20

; <label>:15                                      ; preds = %1
  %16 = fmul double %10, 5.000000e-01
  %17 = fcmp ult double %7, %16
  br i1 %17, label %20, label %18

; <label>:18                                      ; preds = %15
  %19 = fsub float %6, %9
  br label %20

; <label>:20                                      ; preds = %15, %18, %13
  %ddx.0 = phi float [ %14, %13 ], [ %19, %18 ], [ %6, %15 ]
  %21 = getelementptr inbounds float* %dx, i64 %indvars.iv
  store float %ddx.0, float* %21, align 4, !tbaa !2
  %22 = fmul float %ddx.0, %ddx.0
  %23 = fadd float %dx2.02, %22
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %24, label %1

; <label>:24                                      ; preds = %20
  ret float %23
}
