define float @calc_dx2dx(float* nocapture %xi, float* nocapture %xj, float* nocapture %box, float* nocapture %dx) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{float* %xi}, i64 0, metadata !198), !dbg !680
  tail call void @llvm.dbg.value(metadata !{float* %xj}, i64 0, metadata !199), !dbg !680
  tail call void @llvm.dbg.value(metadata !{float* %box}, i64 0, metadata !200), !dbg !680
  tail call void @llvm.dbg.value(metadata !{float* %dx}, i64 0, metadata !201), !dbg !680
  tail call void @llvm.dbg.value(metadata !681, i64 0, metadata !204), !dbg !682
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !202), !dbg !683
  br label %for.body, !dbg !683

for.body:                                         ; preds = %if.end21, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %if.end21 ]
  %dx2.045 = phi float [ 0.000000e+00, %entry ], [ %add25, %if.end21 ]
  %arrayidx = getelementptr inbounds float* %xj, i64 %indvars.iv, !dbg !685
  %0 = load float* %arrayidx, align 4, !dbg !685, !tbaa !645
  %arrayidx2 = getelementptr inbounds float* %xi, i64 %indvars.iv, !dbg !685
  %1 = load float* %arrayidx2, align 4, !dbg !685, !tbaa !645
  %sub = fsub float %0, %1, !dbg !685
  tail call void @llvm.dbg.value(metadata !{float %sub}, i64 0, metadata !203), !dbg !685
  %conv = fpext float %sub to double, !dbg !687
  %arrayidx4 = getelementptr inbounds float* %box, i64 %indvars.iv, !dbg !687
  %2 = load float* %arrayidx4, align 4, !dbg !687, !tbaa !645
  %conv5 = fpext float %2 to double, !dbg !687
  %mul = fmul double %conv5, -5.000000e-01, !dbg !687
  %cmp6 = fcmp olt double %conv, %mul, !dbg !687
  br i1 %cmp6, label %if.then, label %if.else, !dbg !687

if.then:                                          ; preds = %for.body
  %add = fadd float %sub, %2, !dbg !688
  tail call void @llvm.dbg.value(metadata !{float %add}, i64 0, metadata !203), !dbg !688
  br label %if.end21, !dbg !688

if.else:                                          ; preds = %for.body
  %mul14 = fmul double %conv5, 5.000000e-01, !dbg !689
  %cmp15 = fcmp ult double %conv, %mul14, !dbg !689
  br i1 %cmp15, label %if.end21, label %if.then17, !dbg !689

if.then17:                                        ; preds = %if.else
  %sub20 = fsub float %sub, %2, !dbg !690
  tail call void @llvm.dbg.value(metadata !{float %sub20}, i64 0, metadata !203), !dbg !690
  br label %if.end21, !dbg !690

if.end21:                                         ; preds = %if.else, %if.then17, %if.then
  %ddx.0 = phi float [ %add, %if.then ], [ %sub20, %if.then17 ], [ %sub, %if.else ]
  %arrayidx23 = getelementptr inbounds float* %dx, i64 %indvars.iv, !dbg !691
  store float %ddx.0, float* %arrayidx23, align 4, !dbg !691, !tbaa !645
  %mul24 = fmul float %ddx.0, %ddx.0, !dbg !692
  %add25 = fadd float %dx2.045, %mul24, !dbg !692
  tail call void @llvm.dbg.value(metadata !{float %add25}, i64 0, metadata !204), !dbg !692
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !683
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !683
  %exitcond = icmp eq i32 %lftr.wideiv, 3, !dbg !683
  br i1 %exitcond, label %for.end, label %for.body, !dbg !683

for.end:                                          ; preds = %if.end21
  ret float %add25, !dbg !693
}
