define float @shift_LRcorrection(%struct._IO_FILE* %fp, %struct.t_nsborder* nocapture %nsb, %struct.t_commrec* nocapture %cr, %struct.t_forcerec* nocapture %fr, float* nocapture %charge, %struct.t_block* nocapture %excl, [3 x float]* nocapture %x, i32 %bOld, [3 x float]* nocapture %box, [3 x float]* nocapture %lr_vir) #0 {
entry:
  %df = alloca [3 x float], align 4
  %dx = alloca [3 x float], align 4
  %rcoulomb_switch = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 22
  %0 = load float* %rcoulomb_switch, align 4, !tbaa !0
  %rcoulomb = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 23
  %1 = load float* %rcoulomb, align 4, !tbaa !0
  %nodeid = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 0
  %2 = load i32* %nodeid, align 4, !tbaa !4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %idxprom
  %3 = load i32* %arrayidx, align 4, !tbaa !4
  %arrayidx3 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %idxprom
  %4 = load i32* %arrayidx3, align 4, !tbaa !4
  %.b287 = load i1* @shift_LRcorrection.bFirst, align 1
  %add27.pre = add nsw i32 %4, %3
  br i1 %.b287, label %if.end25, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %cmp333 = icmp sgt i32 %4, 0
  br i1 %cmp333, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %5 = sext i32 %3 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv347 = phi i64 [ %5, %for.body.lr.ph ], [ %indvars.iv.next348, %for.body ]
  %qq.0334 = phi double [ 0.000000e+00, %for.body.lr.ph ], [ %add8, %for.body ]
  %arrayidx5 = getelementptr inbounds float* %charge, i64 %indvars.iv347
  %6 = load float* %arrayidx5, align 4, !tbaa !0
  %mul = fmul float %6, %6
  %conv = fpext float %mul to double
  %add8 = fadd double %qq.0334, %conv
  %indvars.iv.next348 = add i64 %indvars.iv347, 1
  %7 = trunc i64 %indvars.iv.next348 to i32
  %cmp = icmp slt i32 %7, %add27.pre
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.cond.preheader
  %qq.0.lcssa = phi double [ 0.000000e+00, %for.cond.preheader ], [ %add8, %for.body ]
  %8 = load float* @C, align 4, !tbaa !0
  %conv9 = fpext float %8 to double
  %mul10 = fmul double %conv9, 5.000000e-01
  %mul11 = fmul double %mul10, 3.320636e+02
  %mul12 = fmul double %mul11, 4.184000e+00
  %mul13 = fmul double %mul12, 1.000000e-01
  %mul14 = fmul double %qq.0.lcssa, %mul13
  %conv15 = fptrunc double %mul14 to float
  store float %conv15, float* @shift_LRcorrection.Vself, align 4, !tbaa !0
  %9 = load %struct._IO_FILE** @debug, align 8, !tbaa !3
  %tobool16 = icmp eq %struct._IO_FILE* %9, null
  %tobool17 = icmp eq %struct._IO_FILE* %fp, null
  %or.cond289 = or i1 %tobool16, %tobool17
  br i1 %or.cond289, label %if.end25, label %if.then18

if.then18:                                        ; preds = %for.end
  %10 = call i64 @fwrite(i8* getelementptr inbounds ([50 x i8]* @.str5, i64 0, i64 0), i64 49, i64 1, %struct._IO_FILE* %fp)
  %conv19 = fpext float %0 to double
  %conv20 = fpext float %1 to double
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([16 x i8]* @.str6, i64 0, i64 0), double %conv19, double %conv20) #6
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([20 x i8]* @.str7, i64 0, i64 0), i32 %3, i32 %4) #6
  %11 = load float* @shift_LRcorrection.Vself, align 4, !tbaa !0
  %conv23 = fpext float %11 to double
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([19 x i8]* @.str8, i64 0, i64 0), double %qq.0.lcssa, double %conv23) #6
  br label %if.end25

if.end25:                                         ; preds = %entry, %for.end, %if.then18
  %a = getelementptr inbounds %struct.t_block* %excl, i64 0, i32 4
  %12 = load i32** %a, align 8, !tbaa !3
  %cmp28329 = icmp sgt i32 %4, 0
  br i1 %cmp28329, label %for.body30.lr.ph, label %for.end193

for.body30.lr.ph:                                 ; preds = %if.end25
  %index32 = getelementptr inbounds %struct.t_block* %excl, i64 0, i32 2
  %arraydecay67 = getelementptr inbounds [3 x float]* %dx, i64 0, i64 0
  %arrayidx9.i = getelementptr inbounds [3 x float]* %dx, i64 0, i64 1
  %arrayidx10.i = getelementptr inbounds [3 x float]* %dx, i64 0, i64 2
  %arraydecay147 = getelementptr inbounds [3 x float]* %df, i64 0, i64 0
  %arrayidx4.i = getelementptr inbounds [3 x float]* %df, i64 0, i64 1
  %arrayidx7.i = getelementptr inbounds [3 x float]* %df, i64 0, i64 2
  %f_pme = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 55
  %13 = sext i32 %3 to i64
  br label %for.body30

for.cond26.loopexit:                              ; preds = %for.inc188, %for.body30
  %Vexcl.1.lcssa = phi float [ %Vexcl.0330, %for.body30 ], [ %Vexcl.2, %for.inc188 ]
  %14 = trunc i64 %indvars.iv.next346 to i32
  %cmp28 = icmp slt i32 %14, %add27.pre
  br i1 %cmp28, label %for.body30, label %for.end193

for.body30:                                       ; preds = %for.cond26.loopexit, %for.body30.lr.ph
  %indvars.iv345 = phi i64 [ %13, %for.body30.lr.ph ], [ %indvars.iv.next346, %for.cond26.loopexit ]
  %Vexcl.0330 = phi float [ 0.000000e+00, %for.body30.lr.ph ], [ %Vexcl.1.lcssa, %for.cond26.loopexit ]
  %15 = load i32** %index32, align 8, !tbaa !3
  %arrayidx33 = getelementptr inbounds i32* %15, i64 %indvars.iv345
  %16 = load i32* %arrayidx33, align 4, !tbaa !4
  %indvars.iv.next346 = add i64 %indvars.iv345, 1
  %arrayidx37 = getelementptr inbounds i32* %15, i64 %indvars.iv.next346
  %17 = load i32* %arrayidx37, align 4, !tbaa !4
  %arrayidx39 = getelementptr inbounds float* %charge, i64 %indvars.iv345
  %18 = load float* %arrayidx39, align 4, !tbaa !0
  %conv40 = fpext float %18 to double
  %mul41 = fmul double %conv40, 3.320636e+02
  %mul42 = fmul double %mul41, 4.184000e+00
  %mul43 = fmul double %mul42, 1.000000e-01
  %conv44 = fptrunc double %mul43 to float
  %cmp46326 = icmp slt i32 %16, %17
  br i1 %cmp46326, label %for.body48.lr.ph, label %for.cond26.loopexit

for.body48.lr.ph:                                 ; preds = %for.body30
  %arraydecay = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv345, i64 0
  %arrayidx2.i = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv345, i64 1
  %arrayidx5.i = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv345, i64 2
  %19 = sext i32 %16 to i64
  br label %for.body48

for.body48:                                       ; preds = %for.body48.lr.ph, %for.inc188
  %indvars.iv343 = phi i64 [ %19, %for.body48.lr.ph ], [ %indvars.iv.next344, %for.inc188 ]
  %Vexcl.1327 = phi float [ %Vexcl.0330, %for.body48.lr.ph ], [ %Vexcl.2, %for.inc188 ]
  %arrayidx50 = getelementptr inbounds i32* %12, i64 %indvars.iv343
  %20 = load i32* %arrayidx50, align 4, !tbaa !4
  %21 = trunc i64 %indvars.iv345 to i32
  %cmp51 = icmp sgt i32 %20, %21
  br i1 %cmp51, label %if.then53, label %for.inc188

if.then53:                                        ; preds = %for.body48
  %idxprom54 = sext i32 %20 to i64
  %arrayidx55 = getelementptr inbounds float* %charge, i64 %idxprom54
  %22 = load float* %arrayidx55, align 4, !tbaa !0
  %mul56 = fmul float %conv44, %22
  %conv57 = fpext float %mul56 to double
  %fabsf = call float @fabsf(float %mul56) #8
  %23 = fpext float %fabsf to double
  %cmp59 = fcmp ogt double %23, 1.200000e-38
  br i1 %cmp59, label %if.then61, label %for.inc188

if.then61:                                        ; preds = %if.then53
  %arraydecay66 = getelementptr inbounds [3 x float]* %x, i64 %idxprom54, i64 0
  %24 = load float* %arraydecay, align 4, !tbaa !0
  %25 = load float* %arraydecay66, align 4, !tbaa !0
  %sub.i = fsub float %24, %25
  %26 = load float* %arrayidx2.i, align 4, !tbaa !0
  %arrayidx3.i = getelementptr inbounds [3 x float]* %x, i64 %idxprom54, i64 1
  %27 = load float* %arrayidx3.i, align 4, !tbaa !0
  %sub4.i = fsub float %26, %27
  %28 = load float* %arrayidx5.i, align 4, !tbaa !0
  %arrayidx6.i = getelementptr inbounds [3 x float]* %x, i64 %idxprom54, i64 2
  %29 = load float* %arrayidx6.i, align 4, !tbaa !0
  %sub7.i = fsub float %28, %29
  store float %sub.i, float* %arraydecay67, align 4, !tbaa !0
  store float %sub4.i, float* %arrayidx9.i, align 4, !tbaa !0
  store float %sub7.i, float* %arrayidx10.i, align 4, !tbaa !0
  br label %for.body71

for.body71:                                       ; preds = %if.end105.for.body71_crit_edge, %if.then61
  %30 = phi float [ %sub7.i, %if.then61 ], [ %.pre, %if.end105.for.body71_crit_edge ]
  %31 = phi float [ %sub7.i, %if.then61 ], [ %41, %if.end105.for.body71_crit_edge ]
  %32 = phi float [ %sub4.i, %if.then61 ], [ %42, %if.end105.for.body71_crit_edge ]
  %33 = phi float [ %sub.i, %if.then61 ], [ %43, %if.end105.for.body71_crit_edge ]
  %indvars.iv = phi i64 [ 2, %if.then61 ], [ %indvars.iv.next, %if.end105.for.body71_crit_edge ]
  %dr2.0322 = phi float [ 0.000000e+00, %if.then61 ], [ %add111, %if.end105.for.body71_crit_edge ]
  %arrayidx73 = getelementptr inbounds [3 x float]* %dx, i64 0, i64 %indvars.iv
  %conv74 = fpext float %30 to double
  %arrayidx77 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv
  %arrayidx78 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv, i64 %indvars.iv
  %34 = load float* %arrayidx78, align 4, !tbaa !0
  %conv79 = fpext float %34 to double
  %mul80 = fmul double %conv79, 5.000000e-01
  %cmp81 = fcmp ogt double %conv74, %mul80
  br i1 %cmp81, label %if.then83, label %if.else

if.then83:                                        ; preds = %for.body71
  %arraydecay87 = getelementptr inbounds [3 x float]* %arrayidx77, i64 0, i64 0
  %35 = load float* %arraydecay87, align 4, !tbaa !0
  %sub.i308 = fsub float %33, %35
  %arrayidx3.i310 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv, i64 1
  %36 = load float* %arrayidx3.i310, align 4, !tbaa !0
  %sub4.i311 = fsub float %32, %36
  %arrayidx6.i313 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv, i64 2
  %37 = load float* %arrayidx6.i313, align 4, !tbaa !0
  %sub7.i314 = fsub float %31, %37
  store float %sub.i308, float* %arraydecay67, align 4, !tbaa !0
  store float %sub4.i311, float* %arrayidx9.i, align 4, !tbaa !0
  store float %sub7.i314, float* %arrayidx10.i, align 4, !tbaa !0
  br label %if.end105

if.else:                                          ; preds = %for.body71
  %mul96 = fmul double %conv79, -5.000000e-01
  %cmp97 = fcmp olt double %conv74, %mul96
  br i1 %cmp97, label %if.then99, label %if.end105

if.then99:                                        ; preds = %if.else
  %arraydecay103 = getelementptr inbounds [3 x float]* %arrayidx77, i64 0, i64 0
  %38 = load float* %arraydecay103, align 4, !tbaa !0
  %add.i315 = fadd float %33, %38
  %arrayidx3.i317 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv, i64 1
  %39 = load float* %arrayidx3.i317, align 4, !tbaa !0
  %add4.i318 = fadd float %32, %39
  %arrayidx6.i320 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv, i64 2
  %40 = load float* %arrayidx6.i320, align 4, !tbaa !0
  %add7.i321 = fadd float %31, %40
  store float %add.i315, float* %arraydecay67, align 4, !tbaa !0
  store float %add4.i318, float* %arrayidx9.i, align 4, !tbaa !0
  store float %add7.i321, float* %arrayidx10.i, align 4, !tbaa !0
  br label %if.end105

if.end105:                                        ; preds = %if.else, %if.then99, %if.then83
  %41 = phi float [ %31, %if.else ], [ %add7.i321, %if.then99 ], [ %sub7.i314, %if.then83 ]
  %42 = phi float [ %32, %if.else ], [ %add4.i318, %if.then99 ], [ %sub4.i311, %if.then83 ]
  %43 = phi float [ %33, %if.else ], [ %add.i315, %if.then99 ], [ %sub.i308, %if.then83 ]
  %44 = load float* %arrayidx73, align 4, !tbaa !0
  %mul110 = fmul float %44, %44
  %add111 = fadd float %dr2.0322, %mul110
  %indvars.iv.next = add i64 %indvars.iv, -1
  %45 = trunc i64 %indvars.iv to i32
  %cmp69 = icmp sgt i32 %45, 0
  br i1 %cmp69, label %if.end105.for.body71_crit_edge, label %for.end113

if.end105.for.body71_crit_edge:                   ; preds = %if.end105
  %arrayidx73.phi.trans.insert = getelementptr inbounds [3 x float]* %dx, i64 0, i64 %indvars.iv.next
  %.pre = load float* %arrayidx73.phi.trans.insert, align 4, !tbaa !0
  br label %for.body71

for.end113:                                       ; preds = %if.end105
  %conv114 = fpext float %add111 to double
  %call115 = call double @sqrt(double %conv114) #6
  %div = fdiv double 1.000000e+00, %call115
  %conv116 = fptrunc double %div to float
  %conv119 = fdiv float 1.000000e+00, %conv116
  %mul120 = fmul float %conv116, %conv116
  %mul121 = fmul float %conv116, %mul120
  %call122 = call float @potential(float %0, float %1, float %conv119) #7
  %sub = fsub float %conv116, %call122
  %conv123 = fpext float %sub to double
  %mul124 = fmul double %conv57, %conv123
  %conv125 = fpext float %Vexcl.1327 to double
  %add126 = fadd double %conv125, %mul124
  %conv127 = fptrunc double %add126 to float
  %cmp.i = fcmp ugt float %conv119, %0
  br i1 %cmp.i, label %if.else.i, label %shiftfunction.exit

if.else.i:                                        ; preds = %for.end113
  %cmp1.i = fcmp ult float %conv119, %1
  br i1 %cmp1.i, label %if.end4.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.else.i
  %mul.i304 = fmul float %conv119, %conv119
  %conv3.i = fdiv float -1.000000e+00, %mul.i304
  br label %shiftfunction.exit

if.end4.i:                                        ; preds = %if.else.i
  %sub.i305 = fsub float %conv119, %0
  %46 = load float* @A, align 4, !tbaa !0
  %mul5.i = fmul float %sub.i305, %46
  %mul6.i306 = fmul float %sub.i305, %mul5.i
  %47 = load float* @B, align 4, !tbaa !0
  %mul7.i = fmul float %sub.i305, %47
  %mul8.i = fmul float %sub.i305, %mul7.i
  %mul9.i = fmul float %sub.i305, %mul8.i
  %add.i307 = fadd float %mul6.i306, %mul9.i
  br label %shiftfunction.exit

shiftfunction.exit:                               ; preds = %for.end113, %if.then2.i, %if.end4.i
  %retval.0.i = phi float [ %conv3.i, %if.then2.i ], [ %add.i307, %if.end4.i ], [ 0.000000e+00, %for.end113 ]
  %sub129 = fsub float -0.000000e+00, %retval.0.i
  %conv130 = fpext float %sub129 to double
  %mul131 = fmul double %conv57, %conv130
  %conv132 = fpext float %mul121 to double
  %mul133 = fmul double %conv132, %mul131
  %conv134 = fptrunc double %mul133 to float
  %fabsf288 = call float @fabsf(float %conv134) #8
  %48 = fpext float %fabsf288 to double
  %cmp137 = fcmp ogt double %48, 1.200000e-38
  %49 = load %struct._IO_FILE** @debug, align 8, !tbaa !3
  %tobool140 = icmp ne %struct._IO_FILE* %49, null
  %or.cond = and i1 %cmp137, %tobool140
  br i1 %or.cond, label %if.then141, label %if.end145

if.then141:                                       ; preds = %shiftfunction.exit
  %conv135 = fpext float %conv134 to double
  %conv142 = fpext float %conv119 to double
  %call144 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([36 x i8]* @.str9, i64 0, i64 0), i32 %21, i32 %20, double %conv142, double %conv135) #6
  br label %if.end145

if.end145:                                        ; preds = %if.then141, %shiftfunction.exit
  %mul.i = fmul float %conv134, %43
  store float %mul.i, float* %arraydecay147, align 4, !tbaa !0
  %mul3.i = fmul float %conv134, %42
  store float %mul3.i, float* %arrayidx4.i, align 4, !tbaa !0
  %mul6.i = fmul float %conv134, %41
  store float %mul6.i, float* %arrayidx7.i, align 4, !tbaa !0
  %50 = load [3 x float]** %f_pme, align 8, !tbaa !3
  %arraydecay150 = getelementptr inbounds [3 x float]* %50, i64 %idxprom54, i64 0
  %51 = load float* %arraydecay150, align 4, !tbaa !0
  %add.i = fadd float %51, %mul.i
  %arrayidx2.i298 = getelementptr inbounds [3 x float]* %50, i64 %idxprom54, i64 1
  %52 = load float* %arrayidx2.i298, align 4, !tbaa !0
  %add4.i = fadd float %52, %mul3.i
  %arrayidx5.i300 = getelementptr inbounds [3 x float]* %50, i64 %idxprom54, i64 2
  %53 = load float* %arrayidx5.i300, align 4, !tbaa !0
  %add7.i = fadd float %mul6.i, %53
  store float %add.i, float* %arraydecay150, align 4, !tbaa !0
  store float %add4.i, float* %arrayidx2.i298, align 4, !tbaa !0
  store float %add7.i, float* %arrayidx5.i300, align 4, !tbaa !0
  %arraydecay155 = getelementptr inbounds [3 x float]* %50, i64 %indvars.iv345, i64 0
  %54 = load float* %arraydecay155, align 4, !tbaa !0
  %sub.i291 = fsub float %54, %mul.i
  %arrayidx2.i292 = getelementptr inbounds [3 x float]* %50, i64 %indvars.iv345, i64 1
  %55 = load float* %arrayidx2.i292, align 4, !tbaa !0
  %sub4.i294 = fsub float %55, %mul3.i
  %arrayidx5.i295 = getelementptr inbounds [3 x float]* %50, i64 %indvars.iv345, i64 2
  %56 = load float* %arrayidx5.i295, align 4, !tbaa !0
  %sub7.i297 = fsub float %56, %mul6.i
  store float %sub.i291, float* %arraydecay155, align 4, !tbaa !0
  store float %sub4.i294, float* %arrayidx2.i292, align 4, !tbaa !0
  store float %sub7.i297, float* %arrayidx5.i295, align 4, !tbaa !0
  br label %for.cond161.preheader

for.cond161.preheader:                            ; preds = %for.inc183.for.cond161.preheader_crit_edge, %if.end145
  %57 = phi float [ %43, %if.end145 ], [ %.pre349, %for.inc183.for.cond161.preheader_crit_edge ]
  %indvars.iv339 = phi i64 [ 0, %if.end145 ], [ %indvars.iv.next340, %for.inc183.for.cond161.preheader_crit_edge ]
  %conv167 = fpext float %57 to double
  %mul168 = fmul double %conv167, 5.000000e-01
  br label %for.body164

for.body164:                                      ; preds = %for.body164, %for.cond161.preheader
  %indvars.iv337 = phi i64 [ 0, %for.cond161.preheader ], [ %indvars.iv.next338, %for.body164 ]
  %arrayidx170 = getelementptr inbounds [3 x float]* %df, i64 0, i64 %indvars.iv337
  %58 = load float* %arrayidx170, align 4, !tbaa !0
  %conv171 = fpext float %58 to double
  %mul172 = fmul double %mul168, %conv171
  %arrayidx176 = getelementptr inbounds [3 x float]* %lr_vir, i64 %indvars.iv339, i64 %indvars.iv337
  %59 = load float* %arrayidx176, align 4, !tbaa !0
  %conv177 = fpext float %59 to double
  %add178 = fadd double %conv177, %mul172
  %conv179 = fptrunc double %add178 to float
  store float %conv179, float* %arrayidx176, align 4, !tbaa !0
  %indvars.iv.next338 = add i64 %indvars.iv337, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next338 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 3
  br i1 %exitcond, label %for.inc183, label %for.body164

for.inc183:                                       ; preds = %for.body164
  %indvars.iv.next340 = add i64 %indvars.iv339, 1
  %lftr.wideiv341 = trunc i64 %indvars.iv.next340 to i32
  %exitcond342 = icmp eq i32 %lftr.wideiv341, 3
  br i1 %exitcond342, label %for.inc188, label %for.inc183.for.cond161.preheader_crit_edge

for.inc183.for.cond161.preheader_crit_edge:       ; preds = %for.inc183
  %arrayidx166.phi.trans.insert = getelementptr inbounds [3 x float]* %dx, i64 0, i64 %indvars.iv.next340
  %.pre349 = load float* %arrayidx166.phi.trans.insert, align 4, !tbaa !0
  br label %for.cond161.preheader

for.inc188:                                       ; preds = %for.inc183, %for.body48, %if.then53
  %Vexcl.2 = phi float [ %Vexcl.1327, %if.then53 ], [ %Vexcl.1327, %for.body48 ], [ %conv127, %for.inc183 ]
  %indvars.iv.next344 = add i64 %indvars.iv343, 1
  %60 = trunc i64 %indvars.iv.next344 to i32
  %cmp46 = icmp slt i32 %60, %17
  br i1 %cmp46, label %for.body48, label %for.cond26.loopexit

for.end193:                                       ; preds = %for.cond26.loopexit, %if.end25
  %Vexcl.0.lcssa = phi float [ 0.000000e+00, %if.end25 ], [ %Vexcl.1.lcssa, %for.cond26.loopexit ]
  %.b = load i1* @shift_LRcorrection.bFirst, align 1
  %61 = load %struct._IO_FILE** @debug, align 8, !tbaa !3
  %tobool196.not = icmp eq %struct._IO_FILE* %61, null
  %or.cond205.not = or i1 %.b, %tobool196.not
  %tobool198 = icmp eq %struct._IO_FILE* %fp, null
  %or.cond290 = or i1 %or.cond205.not, %tobool198
  br i1 %or.cond290, label %if.end202, label %if.then199

if.then199:                                       ; preds = %for.end193
  %conv200 = fpext float %Vexcl.0.lcssa to double
  %call201 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([33 x i8]* @.str10, i64 0, i64 0), double %conv200) #6
  br label %if.end202

if.end202:                                        ; preds = %for.end193, %if.then199
  store i1 true, i1* @shift_LRcorrection.bFirst, align 1
  %62 = load float* @shift_LRcorrection.Vself, align 4, !tbaa !0
  %add203 = fadd float %Vexcl.0.lcssa, %62
  %sub204 = fsub float -0.000000e+00, %add203
  ret float %sub204
}
