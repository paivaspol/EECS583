define float @calc_mu_aver(%struct.t_commrec* nocapture %cr, %struct.t_nsborder* nocapture %nsb, [3 x float]* nocapture %x, float* nocapture %q, float* nocapture %mu, %struct.t_topology* nocapture %top, %struct.t_mdatoms* nocapture %md, i32 %gnx, i32* nocapture %grpindex) #0 {
entry:
  %cmp = icmp sgt i32 %gnx, 0
  br i1 %cmp, label %for.body.lr.ph, label %return

for.body.lr.ph:                                   ; preds = %entry
  %index10 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 3, i64 1, i32 2
  %a = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 3, i64 1, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %mu_ave.030 = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %add16, %for.body ]
  %arrayidx8 = getelementptr inbounds i32* %grpindex, i64 %indvars.iv
  %0 = load i32* %arrayidx8, align 4, !tbaa !3
  %idxprom9 = sext i32 %0 to i64
  %1 = load i32** %index10, align 8, !tbaa !4
  %arrayidx11 = getelementptr inbounds i32* %1, i64 %idxprom9
  %2 = load i32* %arrayidx11, align 4, !tbaa !3
  %add12 = add nsw i32 %0, 1
  %idxprom13 = sext i32 %add12 to i64
  %arrayidx15 = getelementptr inbounds i32* %1, i64 %idxprom13
  %3 = load i32* %arrayidx15, align 4, !tbaa !3
  %4 = load i32** %a, align 8, !tbaa !4
  %call = tail call float @mol_dipole(i32 %2, i32 %3, i32* %4, [3 x float]* %x, float* %q) #6
  %add16 = fadd float %mu_ave.030, %call
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %gnx
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %conv = sitofp i32 %gnx to float
  %div = fdiv float %add16, %conv
  br label %return

return:                                           ; preds = %entry, %for.end
  %retval.0 = phi float [ %div, %for.end ], [ 0.000000e+00, %entry ]
  ret float %retval.0
}
