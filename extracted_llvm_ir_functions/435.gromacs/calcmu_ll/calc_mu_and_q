define void @calc_mu_and_q(%struct.t_nsborder* nocapture readonly %nsb, [3 x float]* nocapture readonly %x, float* nocapture readonly %q, float* nocapture %mu, float* nocapture %qsum) #4 {
.preheader2:
  %tmpmu = alloca [3 x double], align 16
  %tmpmu16 = bitcast [3 x double]* %tmpmu to i8*
  tail call void @llvm.dbg.value(metadata %struct.t_nsborder* %nsb, i64 0, metadata !165, metadata !261), !dbg !394
  tail call void @llvm.dbg.value(metadata [3 x float]* %x, i64 0, metadata !166, metadata !261), !dbg !395
  tail call void @llvm.dbg.value(metadata float* %q, i64 0, metadata !167, metadata !261), !dbg !396
  tail call void @llvm.dbg.value(metadata float* %mu, i64 0, metadata !168, metadata !261), !dbg !397
  tail call void @llvm.dbg.value(metadata float* %qsum, i64 0, metadata !169, metadata !261), !dbg !398
  tail call void @llvm.dbg.declare(metadata [3 x double]* %tmpmu, metadata !174, metadata !261), !dbg !399
  %0 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 0, !dbg !400
  %1 = load i32* %0, align 4, !dbg !400, !tbaa !401
  %2 = sext i32 %1 to i64, !dbg !400
  %3 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %2, !dbg !400
  %4 = load i32* %3, align 4, !dbg !400, !tbaa !404
  tail call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !171, metadata !261), !dbg !405
  %5 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %2, !dbg !406
  %6 = load i32* %5, align 4, !dbg !406, !tbaa !404
  tail call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !172, metadata !261), !dbg !407
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !176, metadata !261), !dbg !408
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !173, metadata !261), !dbg !409
  call void @llvm.memset.p0i8.i64(i8* %tmpmu16, i8 0, i64 24, i32 16, i1 false), !dbg !410
  %7 = icmp sgt i32 %6, 0, !dbg !413
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !173, metadata !261), !dbg !409
  br i1 %7, label %.preheader1.lr.ph, label %.preheader, !dbg !416

.preheader1.lr.ph:                                ; preds = %.preheader2
  %8 = add nsw i32 %6, %4, !dbg !417
  %9 = sext i32 %4 to i64
  %10 = sext i32 %8 to i64, !dbg !416
  br label %.preheader1, !dbg !416

.preheader1:                                      ; preds = %.preheader1.lr.ph, %21
  %indvars.iv11 = phi i64 [ %9, %.preheader1.lr.ph ], [ %indvars.iv.next12, %21 ]
  %tmpq.06 = phi double [ 0.000000e+00, %.preheader1.lr.ph ], [ %23, %21 ]
  %11 = getelementptr inbounds float* %q, i64 %indvars.iv11, !dbg !418
  %12 = load float* %11, align 4, !dbg !418, !tbaa !357
  br label %13, !dbg !423

..preheader_crit_edge:                            ; preds = %21
  %phitmp = fptrunc double %23 to float, !dbg !416
  br label %.preheader, !dbg !416

.preheader:                                       ; preds = %..preheader_crit_edge, %.preheader2
  %tmpq.0.lcssa = phi float [ %phitmp, %..preheader_crit_edge ], [ 0.000000e+00, %.preheader2 ]
  br label %25, !dbg !424

; <label>:13                                      ; preds = %13, %.preheader1
  %indvars.iv8 = phi i64 [ 0, %.preheader1 ], [ %indvars.iv.next9, %13 ]
  %14 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv11, i64 %indvars.iv8, !dbg !426
  %15 = load float* %14, align 4, !dbg !426, !tbaa !357
  %16 = fmul float %12, %15, !dbg !427
  %17 = fpext float %16 to double, !dbg !418
  %18 = getelementptr inbounds [3 x double]* %tmpmu, i64 0, i64 %indvars.iv8, !dbg !428
  %19 = load double* %18, align 8, !dbg !429, !tbaa !372
  %20 = fadd double %19, %17, !dbg !429
  store double %20, double* %18, align 8, !dbg !429, !tbaa !372
  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1, !dbg !423
  %exitcond10 = icmp eq i64 %indvars.iv.next9, 3, !dbg !423
  br i1 %exitcond10, label %21, label %13, !dbg !423

; <label>:21                                      ; preds = %13
  %22 = fpext float %12 to double, !dbg !430
  %23 = fadd double %tmpq.06, %22, !dbg !431
  tail call void @llvm.dbg.value(metadata double %23, i64 0, metadata !176, metadata !261), !dbg !408
  %indvars.iv.next12 = add nsw i64 %indvars.iv11, 1, !dbg !416
  %24 = icmp slt i64 %indvars.iv.next12, %10, !dbg !413
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !173, metadata !261), !dbg !409
  br i1 %24, label %.preheader1, label %..preheader_crit_edge, !dbg !416

; <label>:25                                      ; preds = %25, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %25 ]
  %26 = getelementptr inbounds [3 x double]* %tmpmu, i64 0, i64 %indvars.iv, !dbg !432
  %27 = load double* %26, align 8, !dbg !432, !tbaa !372
  %28 = fmul double %27, 4.803210e+01, !dbg !434
  %29 = fptrunc double %28 to float, !dbg !432
  %30 = getelementptr inbounds float* %mu, i64 %indvars.iv, !dbg !435
  store float %29, float* %30, align 4, !dbg !436, !tbaa !357
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !424
  %exitcond = icmp eq i64 %indvars.iv.next, 3, !dbg !424
  br i1 %exitcond, label %31, label %25, !dbg !424

; <label>:31                                      ; preds = %25
  store float %tmpq.0.lcssa, float* %qsum, align 4, !dbg !437, !tbaa !357
  ret void, !dbg !438
}
