define void @calc_mu_and_q(%struct.t_nsborder* nocapture %nsb, [3 x float]* nocapture %x, float* nocapture %q, float* nocapture %mu, float* nocapture %qsum) #0 {
entry:
  %tmpmu = alloca [3 x double], align 16
  %tmpmu79 = bitcast [3 x double]* %tmpmu to i8*
  call void @llvm.dbg.value(metadata !{%struct.t_nsborder* %nsb}, i64 0, metadata !37), !dbg !128
  call void @llvm.dbg.value(metadata !{[3 x float]* %x}, i64 0, metadata !38), !dbg !128
  call void @llvm.dbg.value(metadata !{float* %q}, i64 0, metadata !39), !dbg !128
  call void @llvm.dbg.value(metadata !{float* %mu}, i64 0, metadata !40), !dbg !128
  call void @llvm.dbg.value(metadata !{float* %qsum}, i64 0, metadata !41), !dbg !128
  call void @llvm.dbg.declare(metadata !{[3 x double]* %tmpmu}, metadata !46), !dbg !129
  %nodeid = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 0, !dbg !130
  %0 = load i32* %nodeid, align 4, !dbg !130, !tbaa !131
  %idxprom = sext i32 %0 to i64, !dbg !130
  %arrayidx = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %idxprom, !dbg !130
  %1 = load i32* %arrayidx, align 4, !dbg !130, !tbaa !131
  call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !43), !dbg !130
  %arrayidx3 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %idxprom, !dbg !134
  %2 = load i32* %arrayidx3, align 4, !dbg !134, !tbaa !131
  call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !44), !dbg !134
  call void @llvm.dbg.value(metadata !135, i64 0, metadata !49), !dbg !136
  call void @llvm.dbg.value(metadata !2, i64 0, metadata !45), !dbg !137
  call void @llvm.memset.p0i8.i64(i8* %tmpmu79, i8 0, i64 24, i32 16, i1 false), !dbg !139
  %add = add nsw i32 %2, %1, !dbg !134
  %cmp765 = icmp sgt i32 %2, 0, !dbg !140
  call void @llvm.dbg.value(metadata !2, i64 0, metadata !45), !dbg !142
  br i1 %cmp765, label %for.cond9.preheader.lr.ph, label %for.cond31.preheader, !dbg !140

for.cond9.preheader.lr.ph:                        ; preds = %entry
  %3 = sext i32 %1 to i64
  br label %for.cond9.preheader, !dbg !140

for.cond9.preheader:                              ; preds = %for.cond9.preheader.lr.ph, %for.end23
  %indvars.iv73 = phi i64 [ %3, %for.cond9.preheader.lr.ph ], [ %indvars.iv.next74, %for.end23 ]
  %tmpq.067 = phi double [ 0.000000e+00, %for.cond9.preheader.lr.ph ], [ %add27, %for.end23 ]
  %arrayidx13 = getelementptr inbounds float* %q, i64 %indvars.iv73, !dbg !145
  %4 = load float* %arrayidx13, align 4, !dbg !145, !tbaa !147
  br label %for.body11, !dbg !142

for.cond6.for.cond31.preheader_crit_edge:         ; preds = %for.end23
  %phitmp = fptrunc double %add27 to float, !dbg !140
  br label %for.cond31.preheader, !dbg !140

for.cond31.preheader:                             ; preds = %for.cond6.for.cond31.preheader_crit_edge, %entry
  %tmpq.0.lcssa = phi float [ %phitmp, %for.cond6.for.cond31.preheader_crit_edge ], [ 0.000000e+00, %entry ]
  br label %for.body34, !dbg !148

for.body11:                                       ; preds = %for.body11, %for.cond9.preheader
  %indvars.iv69 = phi i64 [ 0, %for.cond9.preheader ], [ %indvars.iv.next70, %for.body11 ]
  %arrayidx17 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv73, i64 %indvars.iv69, !dbg !145
  %5 = load float* %arrayidx17, align 4, !dbg !145, !tbaa !147
  %mul = fmul float %4, %5, !dbg !145
  %conv = fpext float %mul to double, !dbg !145
  %arrayidx19 = getelementptr inbounds [3 x double]* %tmpmu, i64 0, i64 %indvars.iv69, !dbg !145
  %6 = load double* %arrayidx19, align 8, !dbg !145, !tbaa !150
  %add20 = fadd double %6, %conv, !dbg !145
  store double %add20, double* %arrayidx19, align 8, !dbg !145, !tbaa !150
  %indvars.iv.next70 = add i64 %indvars.iv69, 1, !dbg !142
  %lftr.wideiv71 = trunc i64 %indvars.iv.next70 to i32, !dbg !142
  %exitcond72 = icmp eq i32 %lftr.wideiv71, 3, !dbg !142
  br i1 %exitcond72, label %for.end23, label %for.body11, !dbg !142

for.end23:                                        ; preds = %for.body11
  %conv26 = fpext float %4 to double, !dbg !151
  %add27 = fadd double %tmpq.067, %conv26, !dbg !151
  call void @llvm.dbg.value(metadata !{double %add27}, i64 0, metadata !49), !dbg !151
  %indvars.iv.next74 = add i64 %indvars.iv73, 1, !dbg !140
  %7 = trunc i64 %indvars.iv.next74 to i32, !dbg !140
  %cmp7 = icmp slt i32 %7, %add, !dbg !140
  call void @llvm.dbg.value(metadata !2, i64 0, metadata !45), !dbg !142
  br i1 %cmp7, label %for.cond9.preheader, label %for.cond6.for.cond31.preheader_crit_edge, !dbg !140

for.body34:                                       ; preds = %for.body34, %for.cond31.preheader
  %indvars.iv = phi i64 [ 0, %for.cond31.preheader ], [ %indvars.iv.next, %for.body34 ]
  %arrayidx36 = getelementptr inbounds [3 x double]* %tmpmu, i64 0, i64 %indvars.iv, !dbg !152
  %8 = load double* %arrayidx36, align 8, !dbg !152, !tbaa !150
  %mul37 = fmul double %8, 4.803210e+01, !dbg !152
  %conv38 = fptrunc double %mul37 to float, !dbg !152
  %arrayidx40 = getelementptr inbounds float* %mu, i64 %indvars.iv, !dbg !152
  store float %conv38, float* %arrayidx40, align 4, !dbg !152, !tbaa !147
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !148
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !148
  %exitcond = icmp eq i32 %lftr.wideiv, 3, !dbg !148
  br i1 %exitcond, label %for.end43, label %for.body34, !dbg !148

for.end43:                                        ; preds = %for.body34
  store float %tmpq.0.lcssa, float* %qsum, align 4, !dbg !153, !tbaa !147
  ret void, !dbg !154
}
