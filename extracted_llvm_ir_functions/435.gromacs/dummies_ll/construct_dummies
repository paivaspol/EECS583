define void @construct_dummies(%struct.__sFILE* nocapture readnone %log, [3 x float]* %x, %struct.t_nrnb* nocapture readnone %nrnb, float %dt, [3 x float]* %v, %struct.t_idef* nocapture readonly %idef, %struct.t_graph* %graph, %struct.t_commrec* nocapture readonly %cr, [3 x float]* %box, %struct.t_comm_dummies* readonly %dummycomm) #4 {
  %1 = icmp ne %struct.t_comm_dummies* %dummycomm, null
  br i1 %1, label %2, label %160

; <label>:2                                       ; preds = %0
  tail call void @unshift_self(%struct.t_graph* %graph, [3 x float]* %box, [3 x float]* %x) #8
  %.b.i = load i1* @move_construct_x.bFirst, align 1
  br i1 %.b.i, label %..preheader3_crit_edge.i, label %3

..preheader3_crit_edge.i:                         ; preds = %2
  %.pre24.i = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 4
  br label %.preheader3.i

; <label>:3                                       ; preds = %2
  %4 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 1
  %5 = load i32* %4, align 4, !tbaa !8
  %6 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 5
  %7 = load i32* %6, align 4, !tbaa !12
  %8 = add nsw i32 %7, %5
  %9 = shl i32 %8, 1
  %10 = add nsw i32 %9, 100
  %11 = tail call i8* @save_calloc(i8* getelementptr inbounds ([8 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8]* @.str1, i64 0, i64 0), i32 71, i32 %10, i32 12) #8
  store i8* %11, i8** bitcast ([3 x float]** @nextbuf to i8**), align 8, !tbaa !13
  %12 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 0
  %13 = load i32* %12, align 4, !tbaa !14
  %14 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 4
  %15 = load i32* %14, align 4, !tbaa !15
  %16 = add nsw i32 %15, %13
  %17 = shl i32 %16, 1
  %18 = add nsw i32 %17, 100
  %19 = tail call i8* @save_calloc(i8* getelementptr inbounds ([8 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8]* @.str1, i64 0, i64 0), i32 72, i32 %18, i32 12) #8
  store i8* %19, i8** bitcast ([3 x float]** @prevbuf to i8**), align 8, !tbaa !13
  store i1 true, i1* @move_construct_x.bFirst, align 1
  br label %.preheader3.i

.preheader3.i:                                    ; preds = %3, %..preheader3_crit_edge.i
  %.pre-phi25.i = phi i32* [ %.pre24.i, %..preheader3_crit_edge.i ], [ %14, %3 ]
  %20 = load i32* %.pre-phi25.i, align 4, !tbaa !15
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %.lr.ph14.i, label %.preheader2.i

.lr.ph14.i:                                       ; preds = %.preheader3.i
  %22 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 6
  %23 = load i32** %22, align 8, !tbaa !16
  %24 = load [3 x float]** @prevbuf, align 8, !tbaa !13
  %25 = sext i32 %20 to i64
  %26 = add nsw i64 %25, -1
  br label %36

.preheader2.i:                                    ; preds = %36, %.preheader3.i
  %27 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 0
  %28 = load i32* %27, align 4, !tbaa !14
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %.lr.ph10.i, label %._crit_edge11.i

.lr.ph10.i:                                       ; preds = %.preheader2.i
  %30 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 2
  %31 = load i32** %30, align 8, !tbaa !17
  %32 = load [3 x float]** @prevbuf, align 8, !tbaa !13
  %33 = sext i32 %20 to i64
  %34 = sext i32 %28 to i64
  %35 = add nsw i64 %34, -1
  br label %55

; <label>:36                                      ; preds = %36, %.lr.ph14.i
  %indvars.iv20.i = phi i64 [ 0, %.lr.ph14.i ], [ %indvars.iv.next21.i, %36 ]
  %37 = getelementptr inbounds i32* %23, i64 %indvars.iv20.i
  %38 = load i32* %37, align 4, !tbaa !18
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [3 x float]* %x, i64 %39, i64 0
  %41 = getelementptr inbounds [3 x float]* %24, i64 %indvars.iv20.i, i64 0
  %42 = bitcast float* %40 to i32*
  %43 = load i32* %42, align 4, !tbaa !2
  %44 = bitcast float* %41 to i32*
  store i32 %43, i32* %44, align 4, !tbaa !2
  %45 = getelementptr inbounds [3 x float]* %x, i64 %39, i64 1
  %46 = bitcast float* %45 to i32*
  %47 = load i32* %46, align 4, !tbaa !2
  %48 = getelementptr inbounds [3 x float]* %24, i64 %indvars.iv20.i, i64 1
  %49 = bitcast float* %48 to i32*
  store i32 %47, i32* %49, align 4, !tbaa !2
  %50 = getelementptr inbounds [3 x float]* %x, i64 %39, i64 2
  %51 = bitcast float* %50 to i32*
  %52 = load i32* %51, align 4, !tbaa !2
  %53 = getelementptr inbounds [3 x float]* %24, i64 %indvars.iv20.i, i64 2
  %54 = bitcast float* %53 to i32*
  store i32 %52, i32* %54, align 4, !tbaa !2
  %indvars.iv.next21.i = add nuw nsw i64 %indvars.iv20.i, 1
  %exitcond14 = icmp eq i64 %indvars.iv20.i, %26
  br i1 %exitcond14, label %.preheader2.i, label %36

; <label>:55                                      ; preds = %55, %.lr.ph10.i
  %indvars.iv18.i = phi i64 [ 0, %.lr.ph10.i ], [ %indvars.iv.next19.i, %55 ]
  %56 = getelementptr inbounds i32* %31, i64 %indvars.iv18.i
  %57 = load i32* %56, align 4, !tbaa !18
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [3 x float]* %x, i64 %58, i64 0
  %60 = add nsw i64 %indvars.iv18.i, %33
  %61 = getelementptr inbounds [3 x float]* %32, i64 %60, i64 0
  %62 = bitcast float* %59 to i32*
  %63 = load i32* %62, align 4, !tbaa !2
  %64 = bitcast float* %61 to i32*
  store i32 %63, i32* %64, align 4, !tbaa !2
  %65 = getelementptr inbounds [3 x float]* %x, i64 %58, i64 1
  %66 = bitcast float* %65 to i32*
  %67 = load i32* %66, align 4, !tbaa !2
  %68 = getelementptr inbounds [3 x float]* %32, i64 %60, i64 1
  %69 = bitcast float* %68 to i32*
  store i32 %67, i32* %69, align 4, !tbaa !2
  %70 = getelementptr inbounds [3 x float]* %x, i64 %58, i64 2
  %71 = bitcast float* %70 to i32*
  %72 = load i32* %71, align 4, !tbaa !2
  %73 = getelementptr inbounds [3 x float]* %32, i64 %60, i64 2
  %74 = bitcast float* %73 to i32*
  store i32 %72, i32* %74, align 4, !tbaa !2
  %indvars.iv.next19.i = add nuw nsw i64 %indvars.iv18.i, 1
  %exitcond13 = icmp eq i64 %indvars.iv18.i, %35
  br i1 %exitcond13, label %._crit_edge11.i, label %55

._crit_edge11.i:                                  ; preds = %55, %.preheader2.i
  %or.cond.i = or i1 %21, %29
  br i1 %or.cond.i, label %75, label %81

; <label>:75                                      ; preds = %._crit_edge11.i
  %76 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 2
  %77 = load i32* %76, align 4, !tbaa !19
  %78 = load i8** bitcast ([3 x float]** @prevbuf to i8**), align 8, !tbaa !13
  %79 = add nsw i32 %28, %20
  %80 = mul i32 %79, 12
  tail call void @gmx_tx(i32 %77, i8* %78, i32 %80) #8
  br label %81

; <label>:81                                      ; preds = %75, %._crit_edge11.i
  %82 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 5
  %83 = load i32* %82, align 4, !tbaa !12
  %84 = icmp sgt i32 %83, 0
  %.phi.trans.insert.i = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 1
  %.pre.i = load i32* %.phi.trans.insert.i, align 4, !tbaa !8
  %85 = icmp sgt i32 %.pre.i, 0
  %or.cond26.i = or i1 %84, %85
  br i1 %or.cond26.i, label %._crit_edge22.i, label %91

._crit_edge22.i:                                  ; preds = %81
  %86 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 3
  %87 = load i32* %86, align 4, !tbaa !21
  %88 = load i8** bitcast ([3 x float]** @nextbuf to i8**), align 8, !tbaa !13
  %89 = add nsw i32 %.pre.i, %83
  %90 = mul i32 %89, 12
  tail call void @gmx_rx(i32 %87, i8* %88, i32 %90) #8
  br label %91

; <label>:91                                      ; preds = %._crit_edge22.i, %81
  %92 = load i32* %.pre-phi25.i, align 4, !tbaa !15
  %93 = icmp sgt i32 %92, 0
  br i1 %93, label %97, label %94

; <label>:94                                      ; preds = %91
  %95 = load i32* %27, align 4, !tbaa !14
  %96 = icmp sgt i32 %95, 0
  br i1 %96, label %97, label %100

; <label>:97                                      ; preds = %94, %91
  %98 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 2
  %99 = load i32* %98, align 4, !tbaa !19
  tail call void @gmx_tx_wait(i32 %99) #8
  br label %100

; <label>:100                                     ; preds = %97, %94
  %101 = load i32* %82, align 4, !tbaa !12
  %102 = icmp sgt i32 %101, 0
  br i1 %102, label %.preheader1.i, label %103

; <label>:103                                     ; preds = %100
  %104 = load i32* %.phi.trans.insert.i, align 4, !tbaa !8
  %105 = icmp sgt i32 %104, 0
  br i1 %105, label %.preheader1.i, label %move_construct_x.exit

.preheader1.i:                                    ; preds = %103, %100
  %106 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 3
  %107 = load i32* %106, align 4, !tbaa !21
  tail call void @gmx_rx_wait(i32 %107) #8
  %.pre23.i = load i32* %82, align 4, !tbaa !12
  %108 = icmp sgt i32 %.pre23.i, 0
  br i1 %108, label %.lr.ph8.i, label %.preheader.i

.lr.ph8.i:                                        ; preds = %.preheader1.i
  %109 = load [3 x float]** @nextbuf, align 8, !tbaa !13
  %110 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 7
  %111 = load i32** %110, align 8, !tbaa !22
  %112 = sext i32 %.pre23.i to i64
  %113 = add nsw i64 %112, -1
  br label %121

.preheader.i:                                     ; preds = %121, %.preheader1.i
  %.pr = load i32* %.phi.trans.insert.i, align 4, !tbaa !8
  %114 = icmp sgt i32 %.pr, 0
  br i1 %114, label %.lr.ph.i, label %move_construct_x.exit

.lr.ph.i:                                         ; preds = %.preheader.i
  %115 = load [3 x float]** @nextbuf, align 8, !tbaa !13
  %116 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 3
  %117 = load i32** %116, align 8, !tbaa !23
  %118 = sext i32 %.pre23.i to i64
  %119 = sext i32 %.pr to i64
  %120 = add nsw i64 %119, -1
  br label %140

; <label>:121                                     ; preds = %121, %.lr.ph8.i
  %indvars.iv16.i = phi i64 [ 0, %.lr.ph8.i ], [ %indvars.iv.next17.i, %121 ]
  %122 = getelementptr inbounds [3 x float]* %109, i64 %indvars.iv16.i, i64 0
  %123 = getelementptr inbounds i32* %111, i64 %indvars.iv16.i
  %124 = load i32* %123, align 4, !tbaa !18
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds [3 x float]* %x, i64 %125, i64 0
  %127 = bitcast float* %122 to i32*
  %128 = load i32* %127, align 4, !tbaa !2
  %129 = bitcast float* %126 to i32*
  store i32 %128, i32* %129, align 4, !tbaa !2
  %130 = getelementptr inbounds [3 x float]* %109, i64 %indvars.iv16.i, i64 1
  %131 = bitcast float* %130 to i32*
  %132 = load i32* %131, align 4, !tbaa !2
  %133 = getelementptr inbounds [3 x float]* %x, i64 %125, i64 1
  %134 = bitcast float* %133 to i32*
  store i32 %132, i32* %134, align 4, !tbaa !2
  %135 = getelementptr inbounds [3 x float]* %109, i64 %indvars.iv16.i, i64 2
  %136 = bitcast float* %135 to i32*
  %137 = load i32* %136, align 4, !tbaa !2
  %138 = getelementptr inbounds [3 x float]* %x, i64 %125, i64 2
  %139 = bitcast float* %138 to i32*
  store i32 %137, i32* %139, align 4, !tbaa !2
  %indvars.iv.next17.i = add nuw nsw i64 %indvars.iv16.i, 1
  %exitcond12 = icmp eq i64 %indvars.iv16.i, %113
  br i1 %exitcond12, label %.preheader.i, label %121

; <label>:140                                     ; preds = %140, %.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %.lr.ph.i ], [ %indvars.iv.next.i, %140 ]
  %141 = add nsw i64 %indvars.iv.i, %118
  %142 = getelementptr inbounds [3 x float]* %115, i64 %141, i64 0
  %143 = getelementptr inbounds i32* %117, i64 %indvars.iv.i
  %144 = load i32* %143, align 4, !tbaa !18
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds [3 x float]* %x, i64 %145, i64 0
  %147 = bitcast float* %142 to i32*
  %148 = load i32* %147, align 4, !tbaa !2
  %149 = bitcast float* %146 to i32*
  store i32 %148, i32* %149, align 4, !tbaa !2
  %150 = getelementptr inbounds [3 x float]* %115, i64 %141, i64 1
  %151 = bitcast float* %150 to i32*
  %152 = load i32* %151, align 4, !tbaa !2
  %153 = getelementptr inbounds [3 x float]* %x, i64 %145, i64 1
  %154 = bitcast float* %153 to i32*
  store i32 %152, i32* %154, align 4, !tbaa !2
  %155 = getelementptr inbounds [3 x float]* %115, i64 %141, i64 2
  %156 = bitcast float* %155 to i32*
  %157 = load i32* %156, align 4, !tbaa !2
  %158 = getelementptr inbounds [3 x float]* %x, i64 %145, i64 2
  %159 = bitcast float* %158 to i32*
  store i32 %157, i32* %159, align 4, !tbaa !2
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond11 = icmp eq i64 %indvars.iv.i, %120
  br i1 %exitcond11, label %move_construct_x.exit, label %140

move_construct_x.exit:                            ; preds = %140, %103, %.preheader.i
  tail call void @shift_self(%struct.t_graph* %graph, [3 x float]* %box, [3 x float]* %x) #8
  br label %160

; <label>:160                                     ; preds = %move_construct_x.exit, %0
  %161 = getelementptr inbounds %struct.t_idef* %idef, i64 0, i32 4
  %162 = load %union.t_iparams** %161, align 8, !tbaa !24
  %163 = icmp ne [3 x float]* %v, null
  br i1 %163, label %164, label %166

; <label>:164                                     ; preds = %160
  %165 = fdiv float 1.000000e+00, %dt
  br label %166

; <label>:166                                     ; preds = %160, %164
  %inv_dt.0 = phi float [ %165, %164 ], [ 1.000000e+00, %160 ]
  br label %167

; <label>:167                                     ; preds = %.loopexit, %166
  %indvars.iv = phi i64 [ 0, %166 ], [ %indvars.iv.next, %.loopexit ]
  %168 = getelementptr inbounds [44 x %struct.t_interaction_function]* @interaction_function, i64 0, i64 %indvars.iv, i32 5
  %169 = load i64* %168, align 8, !tbaa !26
  %170 = and i64 %169, 2
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %.loopexit, label %172

; <label>:172                                     ; preds = %167
  %173 = getelementptr inbounds %struct.t_idef* %idef, i64 0, i32 5, i64 %indvars.iv, i32 0
  %174 = load i32* %173, align 4, !tbaa !29
  %175 = icmp sgt i32 %174, 0
  br i1 %175, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %172
  %176 = getelementptr inbounds %struct.t_idef* %idef, i64 0, i32 5, i64 %indvars.iv, i32 2
  %177 = load i32** %176, align 8, !tbaa !31
  %178 = getelementptr inbounds [44 x %struct.t_interaction_function]* @interaction_function, i64 0, i64 %indvars.iv, i32 2
  %179 = load i32* %178, align 8, !tbaa !32
  %180 = add nsw i32 %179, 1
  %181 = sext i32 %180 to i64
  br label %182

; <label>:182                                     ; preds = %.lr.ph, %564
  %ia.07 = phi i32* [ %177, %.lr.ph ], [ %566, %564 ]
  %i.06 = phi i32 [ 0, %.lr.ph ], [ %565, %564 ]
  %183 = load i32* %ia.07, align 4, !tbaa !18
  %184 = getelementptr inbounds i32* %ia.07, i64 1
  %185 = load i32* %184, align 4, !tbaa !18
  %186 = getelementptr inbounds i32* %ia.07, i64 2
  %187 = load i32* %186, align 4, !tbaa !18
  %188 = getelementptr inbounds i32* %ia.07, i64 3
  %189 = load i32* %188, align 4, !tbaa !18
  %190 = sext i32 %183 to i64
  %191 = getelementptr inbounds %union.t_iparams* %162, i64 %190, i32 0, i32 0
  %192 = load float* %191, align 4, !tbaa !33
  %193 = sext i32 %185 to i64
  %194 = getelementptr inbounds [3 x float]* %x, i64 %193, i64 0
  %195 = load float* %194, align 4, !tbaa !2
  %196 = getelementptr inbounds [3 x float]* %x, i64 %193, i64 1
  %197 = load float* %196, align 4, !tbaa !2
  %198 = getelementptr inbounds [3 x float]* %x, i64 %193, i64 2
  %199 = load float* %198, align 4, !tbaa !2
  %200 = trunc i64 %indvars.iv to i32
  switch i32 %200, label %549 [
    i32 30, label %201
    i32 31, label %226
    i32 32, label %272
    i32 33, label %329
    i32 34, label %409
    i32 35, label %472
  ]

; <label>:201                                     ; preds = %182
  %202 = sext i32 %187 to i64
  %203 = getelementptr inbounds [3 x float]* %x, i64 %202, i64 0
  %204 = sext i32 %189 to i64
  %205 = getelementptr inbounds [3 x float]* %x, i64 %204, i64 0
  %206 = fsub float 1.000000e+00, %192
  %207 = load float* %203, align 4, !tbaa !2
  %208 = fmul float %206, %207
  %209 = load float* %205, align 4, !tbaa !2
  %210 = fmul float %192, %209
  %211 = fadd float %208, %210
  store float %211, float* %194, align 4, !tbaa !2
  %212 = getelementptr inbounds [3 x float]* %x, i64 %202, i64 1
  %213 = load float* %212, align 4, !tbaa !2
  %214 = fmul float %206, %213
  %215 = getelementptr inbounds [3 x float]* %x, i64 %204, i64 1
  %216 = load float* %215, align 4, !tbaa !2
  %217 = fmul float %192, %216
  %218 = fadd float %214, %217
  store float %218, float* %196, align 4, !tbaa !2
  %219 = getelementptr inbounds [3 x float]* %x, i64 %202, i64 2
  %220 = load float* %219, align 4, !tbaa !2
  %221 = fmul float %206, %220
  %222 = getelementptr inbounds [3 x float]* %x, i64 %204, i64 2
  %223 = load float* %222, align 4, !tbaa !2
  %224 = fmul float %192, %223
  %225 = fadd float %221, %224
  store float %225, float* %198, align 4, !tbaa !2
  br label %550

; <label>:226                                     ; preds = %182
  %227 = getelementptr inbounds i32* %ia.07, i64 4
  %228 = load i32* %227, align 4, !tbaa !18
  %229 = getelementptr inbounds %union.t_iparams* %162, i64 %190, i32 0, i32 1
  %230 = load float* %229, align 4, !tbaa !35
  %231 = sext i32 %187 to i64
  %232 = getelementptr inbounds [3 x float]* %x, i64 %231, i64 0
  %233 = sext i32 %189 to i64
  %234 = getelementptr inbounds [3 x float]* %x, i64 %233, i64 0
  %235 = sext i32 %228 to i64
  %236 = getelementptr inbounds [3 x float]* %x, i64 %235, i64 0
  %237 = fpext float %192 to double
  %238 = fsub double 1.000000e+00, %237
  %239 = fpext float %230 to double
  %240 = fsub double %238, %239
  %241 = fptrunc double %240 to float
  %242 = load float* %232, align 4, !tbaa !2
  %243 = fmul float %242, %241
  %244 = load float* %234, align 4, !tbaa !2
  %245 = fmul float %192, %244
  %246 = fadd float %245, %243
  %247 = load float* %236, align 4, !tbaa !2
  %248 = fmul float %230, %247
  %249 = fadd float %248, %246
  store float %249, float* %194, align 4, !tbaa !2
  %250 = getelementptr inbounds [3 x float]* %x, i64 %231, i64 1
  %251 = load float* %250, align 4, !tbaa !2
  %252 = fmul float %241, %251
  %253 = getelementptr inbounds [3 x float]* %x, i64 %233, i64 1
  %254 = load float* %253, align 4, !tbaa !2
  %255 = fmul float %192, %254
  %256 = fadd float %252, %255
  %257 = getelementptr inbounds [3 x float]* %x, i64 %235, i64 1
  %258 = load float* %257, align 4, !tbaa !2
  %259 = fmul float %230, %258
  %260 = fadd float %256, %259
  store float %260, float* %196, align 4, !tbaa !2
  %261 = getelementptr inbounds [3 x float]* %x, i64 %231, i64 2
  %262 = load float* %261, align 4, !tbaa !2
  %263 = fmul float %241, %262
  %264 = getelementptr inbounds [3 x float]* %x, i64 %233, i64 2
  %265 = load float* %264, align 4, !tbaa !2
  %266 = fmul float %192, %265
  %267 = fadd float %263, %266
  %268 = getelementptr inbounds [3 x float]* %x, i64 %235, i64 2
  %269 = load float* %268, align 4, !tbaa !2
  %270 = fmul float %230, %269
  %271 = fadd float %267, %270
  store float %271, float* %198, align 4, !tbaa !2
  br label %550

; <label>:272                                     ; preds = %182
  %273 = getelementptr inbounds i32* %ia.07, i64 4
  %274 = load i32* %273, align 4, !tbaa !18
  %275 = getelementptr inbounds %union.t_iparams* %162, i64 %190, i32 0, i32 1
  %276 = load float* %275, align 4, !tbaa !35
  %277 = sext i32 %187 to i64
  %278 = getelementptr inbounds [3 x float]* %x, i64 %277, i64 0
  %279 = sext i32 %189 to i64
  %280 = getelementptr inbounds [3 x float]* %x, i64 %279, i64 0
  %281 = sext i32 %274 to i64
  %282 = getelementptr inbounds [3 x float]* %x, i64 %281, i64 0
  %283 = load float* %280, align 4, !tbaa !2
  %284 = load float* %278, align 4, !tbaa !2
  %285 = fsub float %283, %284
  %286 = getelementptr inbounds [3 x float]* %x, i64 %279, i64 1
  %287 = load float* %286, align 4, !tbaa !2
  %288 = getelementptr inbounds [3 x float]* %x, i64 %277, i64 1
  %289 = load float* %288, align 4, !tbaa !2
  %290 = fsub float %287, %289
  %291 = getelementptr inbounds [3 x float]* %x, i64 %279, i64 2
  %292 = load float* %291, align 4, !tbaa !2
  %293 = getelementptr inbounds [3 x float]* %x, i64 %277, i64 2
  %294 = load float* %293, align 4, !tbaa !2
  %295 = fsub float %292, %294
  %296 = load float* %282, align 4, !tbaa !2
  %297 = fsub float %296, %283
  %298 = getelementptr inbounds [3 x float]* %x, i64 %281, i64 1
  %299 = load float* %298, align 4, !tbaa !2
  %300 = fsub float %299, %287
  %301 = getelementptr inbounds [3 x float]* %x, i64 %281, i64 2
  %302 = load float* %301, align 4, !tbaa !2
  %303 = fsub float %302, %292
  %304 = fmul float %192, %297
  %305 = fadd float %285, %304
  %306 = fmul float %192, %300
  %307 = fadd float %290, %306
  %308 = fmul float %192, %303
  %309 = fadd float %295, %308
  %310 = fpext float %276 to double
  %311 = fmul float %305, %305
  %312 = fmul float %307, %307
  %313 = fadd float %311, %312
  %314 = fmul float %309, %309
  %315 = fadd float %313, %314
  %316 = fpext float %315 to double
  %317 = tail call double @sqrt(double %316) #9
  %318 = fdiv double 1.000000e+00, %317
  %319 = fmul double %310, %318
  %320 = fptrunc double %319 to float
  %321 = fmul float %305, %320
  %322 = fadd float %284, %321
  store float %322, float* %194, align 4, !tbaa !2
  %323 = load float* %288, align 4, !tbaa !2
  %324 = fmul float %307, %320
  %325 = fadd float %323, %324
  store float %325, float* %196, align 4, !tbaa !2
  %326 = load float* %293, align 4, !tbaa !2
  %327 = fmul float %309, %320
  %328 = fadd float %326, %327
  store float %328, float* %198, align 4, !tbaa !2
  br label %550

; <label>:329                                     ; preds = %182
  %330 = getelementptr inbounds i32* %ia.07, i64 4
  %331 = load i32* %330, align 4, !tbaa !18
  %332 = getelementptr inbounds %union.t_iparams* %162, i64 %190, i32 0, i32 1
  %333 = load float* %332, align 4, !tbaa !35
  %334 = sext i32 %187 to i64
  %335 = getelementptr inbounds [3 x float]* %x, i64 %334, i64 0
  %336 = sext i32 %189 to i64
  %337 = getelementptr inbounds [3 x float]* %x, i64 %336, i64 0
  %338 = sext i32 %331 to i64
  %339 = getelementptr inbounds [3 x float]* %x, i64 %338, i64 0
  %340 = load float* %337, align 4, !tbaa !2
  %341 = load float* %335, align 4, !tbaa !2
  %342 = fsub float %340, %341
  %343 = getelementptr inbounds [3 x float]* %x, i64 %336, i64 1
  %344 = load float* %343, align 4, !tbaa !2
  %345 = getelementptr inbounds [3 x float]* %x, i64 %334, i64 1
  %346 = load float* %345, align 4, !tbaa !2
  %347 = fsub float %344, %346
  %348 = getelementptr inbounds [3 x float]* %x, i64 %336, i64 2
  %349 = load float* %348, align 4, !tbaa !2
  %350 = getelementptr inbounds [3 x float]* %x, i64 %334, i64 2
  %351 = load float* %350, align 4, !tbaa !2
  %352 = fsub float %349, %351
  %353 = load float* %339, align 4, !tbaa !2
  %354 = fsub float %353, %340
  %355 = getelementptr inbounds [3 x float]* %x, i64 %338, i64 1
  %356 = load float* %355, align 4, !tbaa !2
  %357 = fsub float %356, %344
  %358 = getelementptr inbounds [3 x float]* %x, i64 %338, i64 2
  %359 = load float* %358, align 4, !tbaa !2
  %360 = fsub float %359, %349
  %361 = fmul float %342, %342
  %362 = fmul float %347, %347
  %363 = fadd float %361, %362
  %364 = fmul float %352, %352
  %365 = fadd float %363, %364
  %366 = fpext float %365 to double
  %367 = tail call double @sqrt(double %366) #9
  %368 = fdiv double 1.000000e+00, %367
  %369 = fptrunc double %368 to float
  %370 = fmul float %369, %369
  %371 = fmul float %342, %354
  %372 = fmul float %347, %357
  %373 = fadd float %371, %372
  %374 = fmul float %352, %360
  %375 = fadd float %373, %374
  %376 = fmul float %375, %370
  %377 = fmul float %342, %376
  %378 = fsub float %354, %377
  %379 = fmul float %347, %376
  %380 = fsub float %357, %379
  %381 = fmul float %352, %376
  %382 = fsub float %360, %381
  %383 = fmul float %192, %369
  %384 = fpext float %333 to double
  %385 = fmul float %378, %378
  %386 = fmul float %380, %380
  %387 = fadd float %385, %386
  %388 = fmul float %382, %382
  %389 = fadd float %388, %387
  %390 = fpext float %389 to double
  %391 = tail call double @sqrt(double %390) #9
  %392 = fdiv double 1.000000e+00, %391
  %393 = fmul double %384, %392
  %394 = fptrunc double %393 to float
  %395 = fmul float %342, %383
  %396 = fadd float %341, %395
  %397 = fmul float %394, %378
  %398 = fadd float %396, %397
  store float %398, float* %194, align 4, !tbaa !2
  %399 = load float* %345, align 4, !tbaa !2
  %400 = fmul float %347, %383
  %401 = fadd float %399, %400
  %402 = fmul float %394, %380
  %403 = fadd float %401, %402
  store float %403, float* %196, align 4, !tbaa !2
  %404 = load float* %350, align 4, !tbaa !2
  %405 = fmul float %352, %383
  %406 = fadd float %405, %404
  %407 = fmul float %394, %382
  %408 = fadd float %406, %407
  store float %408, float* %198, align 4, !tbaa !2
  br label %550

; <label>:409                                     ; preds = %182
  %410 = getelementptr inbounds i32* %ia.07, i64 4
  %411 = load i32* %410, align 4, !tbaa !18
  %412 = getelementptr inbounds %union.t_iparams* %162, i64 %190, i32 0, i32 1
  %413 = load float* %412, align 4, !tbaa !35
  %414 = getelementptr inbounds %union.t_iparams* %162, i64 %190, i32 0, i32 2
  %415 = load float* %414, align 4, !tbaa !36
  %416 = sext i32 %187 to i64
  %417 = getelementptr inbounds [3 x float]* %x, i64 %416, i64 0
  %418 = sext i32 %189 to i64
  %419 = getelementptr inbounds [3 x float]* %x, i64 %418, i64 0
  %420 = sext i32 %411 to i64
  %421 = getelementptr inbounds [3 x float]* %x, i64 %420, i64 0
  %422 = load float* %419, align 4, !tbaa !2
  %423 = load float* %417, align 4, !tbaa !2
  %424 = fsub float %422, %423
  %425 = getelementptr inbounds [3 x float]* %x, i64 %418, i64 1
  %426 = load float* %425, align 4, !tbaa !2
  %427 = getelementptr inbounds [3 x float]* %x, i64 %416, i64 1
  %428 = load float* %427, align 4, !tbaa !2
  %429 = fsub float %426, %428
  %430 = getelementptr inbounds [3 x float]* %x, i64 %418, i64 2
  %431 = load float* %430, align 4, !tbaa !2
  %432 = getelementptr inbounds [3 x float]* %x, i64 %416, i64 2
  %433 = load float* %432, align 4, !tbaa !2
  %434 = fsub float %431, %433
  %435 = load float* %421, align 4, !tbaa !2
  %436 = fsub float %435, %423
  %437 = getelementptr inbounds [3 x float]* %x, i64 %420, i64 1
  %438 = load float* %437, align 4, !tbaa !2
  %439 = fsub float %438, %428
  %440 = getelementptr inbounds [3 x float]* %x, i64 %420, i64 2
  %441 = load float* %440, align 4, !tbaa !2
  %442 = fsub float %441, %433
  %443 = fmul float %429, %442
  %444 = fmul float %434, %439
  %445 = fsub float %443, %444
  %446 = fmul float %434, %436
  %447 = fmul float %424, %442
  %448 = fsub float %446, %447
  %449 = fmul float %424, %439
  %450 = fmul float %429, %436
  %451 = fsub float %449, %450
  %452 = fmul float %192, %424
  %453 = fadd float %423, %452
  %454 = fmul float %413, %436
  %455 = fadd float %453, %454
  %456 = fmul float %415, %445
  %457 = fadd float %455, %456
  store float %457, float* %194, align 4, !tbaa !2
  %458 = load float* %427, align 4, !tbaa !2
  %459 = fmul float %192, %429
  %460 = fadd float %459, %458
  %461 = fmul float %413, %439
  %462 = fadd float %461, %460
  %463 = fmul float %415, %448
  %464 = fadd float %462, %463
  store float %464, float* %196, align 4, !tbaa !2
  %465 = load float* %432, align 4, !tbaa !2
  %466 = fmul float %192, %434
  %467 = fadd float %466, %465
  %468 = fmul float %413, %442
  %469 = fadd float %468, %467
  %470 = fmul float %415, %451
  %471 = fadd float %470, %469
  store float %471, float* %198, align 4, !tbaa !2
  br label %550

; <label>:472                                     ; preds = %182
  %473 = getelementptr inbounds i32* %ia.07, i64 4
  %474 = load i32* %473, align 4, !tbaa !18
  %475 = getelementptr inbounds i32* %ia.07, i64 5
  %476 = load i32* %475, align 4, !tbaa !18
  %477 = getelementptr inbounds %union.t_iparams* %162, i64 %190, i32 0, i32 1
  %478 = load float* %477, align 4, !tbaa !35
  %479 = getelementptr inbounds %union.t_iparams* %162, i64 %190, i32 0, i32 2
  %480 = load float* %479, align 4, !tbaa !36
  %481 = sext i32 %187 to i64
  %482 = getelementptr inbounds [3 x float]* %x, i64 %481, i64 0
  %483 = sext i32 %189 to i64
  %484 = getelementptr inbounds [3 x float]* %x, i64 %483, i64 0
  %485 = sext i32 %474 to i64
  %486 = getelementptr inbounds [3 x float]* %x, i64 %485, i64 0
  %487 = sext i32 %476 to i64
  %488 = getelementptr inbounds [3 x float]* %x, i64 %487, i64 0
  %489 = load float* %484, align 4, !tbaa !2
  %490 = load float* %482, align 4, !tbaa !2
  %491 = fsub float %489, %490
  %492 = getelementptr inbounds [3 x float]* %x, i64 %483, i64 1
  %493 = load float* %492, align 4, !tbaa !2
  %494 = getelementptr inbounds [3 x float]* %x, i64 %481, i64 1
  %495 = load float* %494, align 4, !tbaa !2
  %496 = fsub float %493, %495
  %497 = getelementptr inbounds [3 x float]* %x, i64 %483, i64 2
  %498 = load float* %497, align 4, !tbaa !2
  %499 = getelementptr inbounds [3 x float]* %x, i64 %481, i64 2
  %500 = load float* %499, align 4, !tbaa !2
  %501 = fsub float %498, %500
  %502 = load float* %486, align 4, !tbaa !2
  %503 = fsub float %502, %489
  %504 = getelementptr inbounds [3 x float]* %x, i64 %485, i64 1
  %505 = load float* %504, align 4, !tbaa !2
  %506 = fsub float %505, %493
  %507 = getelementptr inbounds [3 x float]* %x, i64 %485, i64 2
  %508 = load float* %507, align 4, !tbaa !2
  %509 = fsub float %508, %498
  %510 = load float* %488, align 4, !tbaa !2
  %511 = fsub float %510, %489
  %512 = getelementptr inbounds [3 x float]* %x, i64 %487, i64 1
  %513 = load float* %512, align 4, !tbaa !2
  %514 = fsub float %513, %493
  %515 = getelementptr inbounds [3 x float]* %x, i64 %487, i64 2
  %516 = load float* %515, align 4, !tbaa !2
  %517 = fsub float %516, %498
  %518 = fmul float %192, %503
  %519 = fadd float %491, %518
  %520 = fmul float %478, %511
  %521 = fadd float %519, %520
  %522 = fmul float %192, %506
  %523 = fadd float %496, %522
  %524 = fmul float %478, %514
  %525 = fadd float %523, %524
  %526 = fmul float %192, %509
  %527 = fadd float %501, %526
  %528 = fmul float %478, %517
  %529 = fadd float %527, %528
  %530 = fpext float %480 to double
  %531 = fmul float %521, %521
  %532 = fmul float %525, %525
  %533 = fadd float %531, %532
  %534 = fmul float %529, %529
  %535 = fadd float %533, %534
  %536 = fpext float %535 to double
  %537 = tail call double @sqrt(double %536) #9
  %538 = fdiv double 1.000000e+00, %537
  %539 = fmul double %530, %538
  %540 = fptrunc double %539 to float
  %541 = fmul float %521, %540
  %542 = fadd float %490, %541
  store float %542, float* %194, align 4, !tbaa !2
  %543 = load float* %494, align 4, !tbaa !2
  %544 = fmul float %525, %540
  %545 = fadd float %543, %544
  store float %545, float* %196, align 4, !tbaa !2
  %546 = load float* %499, align 4, !tbaa !2
  %547 = fmul float %529, %540
  %548 = fadd float %546, %547
  store float %548, float* %198, align 4, !tbaa !2
  br label %550

; <label>:549                                     ; preds = %182
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([37 x i8]* @.str, i64 0, i64 0), i32 %200, i8* getelementptr inbounds ([67 x i8]* @.str1, i64 0, i64 0), i32 440) #8
  br label %550

; <label>:550                                     ; preds = %549, %472, %409, %329, %272, %226, %201
  br i1 %163, label %551, label %564

; <label>:551                                     ; preds = %550
  %552 = load float* %194, align 4, !tbaa !2
  %553 = fsub float %552, %195
  %554 = load float* %196, align 4, !tbaa !2
  %555 = fsub float %554, %197
  %556 = load float* %198, align 4, !tbaa !2
  %557 = fsub float %556, %199
  %558 = getelementptr inbounds [3 x float]* %v, i64 %193, i64 0
  %559 = fmul float %inv_dt.0, %553
  store float %559, float* %558, align 4, !tbaa !2
  %560 = fmul float %inv_dt.0, %555
  %561 = getelementptr inbounds [3 x float]* %v, i64 %193, i64 1
  store float %560, float* %561, align 4, !tbaa !2
  %562 = fmul float %inv_dt.0, %557
  %563 = getelementptr inbounds [3 x float]* %v, i64 %193, i64 2
  store float %562, float* %563, align 4, !tbaa !2
  br label %564

; <label>:564                                     ; preds = %551, %550
  %565 = add nsw i32 %i.06, %180
  %566 = getelementptr inbounds i32* %ia.07, i64 %181
  %567 = icmp slt i32 %565, %174
  br i1 %567, label %182, label %.loopexit

.loopexit:                                        ; preds = %564, %172, %167
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond10 = icmp eq i64 %indvars.iv.next, 44
  br i1 %exitcond10, label %568, label %167

; <label>:568                                     ; preds = %.loopexit
  br i1 %1, label %569, label %646

; <label>:569                                     ; preds = %568
  tail call void @unshift_self(%struct.t_graph* %graph, [3 x float]* %box, [3 x float]* %x) #8
  %570 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 1
  %571 = load i32* %570, align 4, !tbaa !8
  %572 = mul i32 %571, 12
  %573 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 0
  %574 = load i32* %573, align 4, !tbaa !14
  %575 = mul i32 %574, 12
  %576 = icmp sgt i32 %571, 0
  br i1 %576, label %.lr.ph4.i, label %._crit_edge5.thread.i

.lr.ph4.i:                                        ; preds = %569
  %577 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 3
  %578 = load i32** %577, align 8, !tbaa !23
  %579 = load [3 x float]** @nextbuf, align 8, !tbaa !13
  %580 = sext i32 %571 to i64
  %581 = add nsw i64 %580, -1
  %582 = bitcast [3 x float]* %579 to i8*
  br label %583

; <label>:583                                     ; preds = %583, %.lr.ph4.i
  %indvars.iv6.i = phi i64 [ 0, %.lr.ph4.i ], [ %indvars.iv.next7.i, %583 ]
  %584 = getelementptr inbounds i32* %578, i64 %indvars.iv6.i
  %585 = load i32* %584, align 4, !tbaa !18
  %586 = sext i32 %585 to i64
  %587 = getelementptr inbounds [3 x float]* %x, i64 %586, i64 0
  %588 = getelementptr inbounds [3 x float]* %579, i64 %indvars.iv6.i, i64 0
  %589 = bitcast float* %587 to i32*
  %590 = load i32* %589, align 4, !tbaa !2
  %591 = bitcast float* %588 to i32*
  store i32 %590, i32* %591, align 4, !tbaa !2
  %592 = getelementptr inbounds [3 x float]* %x, i64 %586, i64 1
  %593 = bitcast float* %592 to i32*
  %594 = load i32* %593, align 4, !tbaa !2
  %595 = getelementptr inbounds [3 x float]* %579, i64 %indvars.iv6.i, i64 1
  %596 = bitcast float* %595 to i32*
  store i32 %594, i32* %596, align 4, !tbaa !2
  %597 = getelementptr inbounds [3 x float]* %x, i64 %586, i64 2
  %598 = bitcast float* %597 to i32*
  %599 = load i32* %598, align 4, !tbaa !2
  %600 = getelementptr inbounds [3 x float]* %579, i64 %indvars.iv6.i, i64 2
  %601 = bitcast float* %600 to i32*
  store i32 %599, i32* %601, align 4, !tbaa !2
  %indvars.iv.next7.i = add nuw nsw i64 %indvars.iv6.i, 1
  %exitcond9 = icmp eq i64 %indvars.iv6.i, %581
  br i1 %exitcond9, label %._crit_edge5.i, label %583

._crit_edge5.i:                                   ; preds = %583
  %602 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 3
  %603 = load i32* %602, align 4, !tbaa !21
  tail call void @gmx_tx(i32 %603, i8* %582, i32 %572) #8
  %.pre.i1 = load i32* %573, align 4, !tbaa !14
  br label %._crit_edge5.thread.i

._crit_edge5.thread.i:                            ; preds = %._crit_edge5.i, %569
  %604 = phi i32 [ %.pre.i1, %._crit_edge5.i ], [ %574, %569 ]
  %605 = icmp sgt i32 %604, 0
  br i1 %605, label %606, label %610

; <label>:606                                     ; preds = %._crit_edge5.thread.i
  %607 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 2
  %608 = load i32* %607, align 4, !tbaa !19
  %609 = load i8** bitcast ([3 x float]** @prevbuf to i8**), align 8, !tbaa !13
  tail call void @gmx_rx(i32 %608, i8* %609, i32 %575) #8
  br label %610

; <label>:610                                     ; preds = %606, %._crit_edge5.thread.i
  %611 = load i32* %570, align 4, !tbaa !8
  %612 = icmp sgt i32 %611, 0
  br i1 %612, label %613, label %616

; <label>:613                                     ; preds = %610
  %614 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 3
  %615 = load i32* %614, align 4, !tbaa !21
  tail call void @gmx_tx_wait(i32 %615) #8
  br label %616

; <label>:616                                     ; preds = %613, %610
  %617 = load i32* %573, align 4, !tbaa !14
  %618 = icmp sgt i32 %617, 0
  br i1 %618, label %.preheader.i2, label %move_dummy_xv.exit

.preheader.i2:                                    ; preds = %616
  %619 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 2
  %620 = load i32* %619, align 4, !tbaa !19
  tail call void @gmx_rx_wait(i32 %620) #8
  %.pre8.i = load i32* %573, align 4, !tbaa !14
  %621 = icmp sgt i32 %.pre8.i, 0
  br i1 %621, label %.lr.ph.i3, label %move_dummy_xv.exit

.lr.ph.i3:                                        ; preds = %.preheader.i2
  %622 = load [3 x float]** @prevbuf, align 8, !tbaa !13
  %623 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 2
  %624 = load i32** %623, align 8, !tbaa !17
  %625 = sext i32 %.pre8.i to i64
  %626 = add nsw i64 %625, -1
  br label %627

; <label>:627                                     ; preds = %627, %.lr.ph.i3
  %indvars.iv.i4 = phi i64 [ 0, %.lr.ph.i3 ], [ %indvars.iv.next.i5, %627 ]
  %628 = getelementptr inbounds [3 x float]* %622, i64 %indvars.iv.i4, i64 0
  %629 = getelementptr inbounds i32* %624, i64 %indvars.iv.i4
  %630 = load i32* %629, align 4, !tbaa !18
  %631 = sext i32 %630 to i64
  %632 = getelementptr inbounds [3 x float]* %x, i64 %631, i64 0
  %633 = bitcast float* %628 to i32*
  %634 = load i32* %633, align 4, !tbaa !2
  %635 = bitcast float* %632 to i32*
  store i32 %634, i32* %635, align 4, !tbaa !2
  %636 = getelementptr inbounds [3 x float]* %622, i64 %indvars.iv.i4, i64 1
  %637 = bitcast float* %636 to i32*
  %638 = load i32* %637, align 4, !tbaa !2
  %639 = getelementptr inbounds [3 x float]* %x, i64 %631, i64 1
  %640 = bitcast float* %639 to i32*
  store i32 %638, i32* %640, align 4, !tbaa !2
  %641 = getelementptr inbounds [3 x float]* %622, i64 %indvars.iv.i4, i64 2
  %642 = bitcast float* %641 to i32*
  %643 = load i32* %642, align 4, !tbaa !2
  %644 = getelementptr inbounds [3 x float]* %x, i64 %631, i64 2
  %645 = bitcast float* %644 to i32*
  store i32 %643, i32* %645, align 4, !tbaa !2
  %indvars.iv.next.i5 = add nuw nsw i64 %indvars.iv.i4, 1
  %exitcond = icmp eq i64 %indvars.iv.i4, %626
  br i1 %exitcond, label %move_dummy_xv.exit, label %627

move_dummy_xv.exit:                               ; preds = %627, %616, %.preheader.i2
  tail call void @shift_self(%struct.t_graph* %graph, [3 x float]* %box, [3 x float]* %x) #8
  br label %646

; <label>:646                                     ; preds = %move_dummy_xv.exit, %568
  ret void
}
