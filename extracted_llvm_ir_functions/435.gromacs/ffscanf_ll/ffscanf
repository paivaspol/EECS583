define void @ffscanf(%struct._IO_FILE* nocapture %in, i8* %fmt, ...) #0 {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  %buf = alloca [4096 x i8], align 16
  %dval = alloca double, align 8
  call void @llvm.dbg.value(metadata !{%struct._IO_FILE* %in}, i64 0, metadata !83), !dbg !114
  call void @llvm.dbg.value(metadata !{i8* %fmt}, i64 0, metadata !84), !dbg !114
  call void @llvm.dbg.declare(metadata !{[1 x %struct.__va_list_tag]* %ap}, metadata !85), !dbg !115
  %0 = getelementptr inbounds [4096 x i8]* %buf, i64 0, i64 0, !dbg !116
  call void @llvm.lifetime.start(i64 4096, i8* %0) #2, !dbg !116
  call void @llvm.dbg.declare(metadata !{[4096 x i8]* %buf}, metadata !99), !dbg !116
  call void @llvm.dbg.declare(metadata !{double* %dval}, metadata !105), !dbg !117
  %arraydecay1 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !118
  call void @llvm.va_start(i8* %arraydecay1), !dbg !118
  call void @llvm.dbg.value(metadata !{i8* %fmt}, i64 0, metadata !98), !dbg !119
  %gp_offset_p = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !121
  %1 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !121
  %overflow_arg_area_p = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !121
  br label %for.cond, !dbg !119

for.cond:                                         ; preds = %for.inc, %entry
  %storemerge = phi i8* [ %fmt, %entry ], [ %incdec.ptr69, %for.inc ]
  call void @llvm.dbg.value(metadata !{i8* %storemerge}, i64 0, metadata !98), !dbg !119
  call void @llvm.dbg.value(metadata !{i8* %storemerge}, i64 0, metadata !125), !dbg !127
  call void @llvm.dbg.value(metadata !{i8* %storemerge}, i64 0, metadata !98), !dbg !119
  call void @llvm.dbg.value(metadata !{i8* %storemerge}, i64 0, metadata !98), !dbg !128
  call void @llvm.dbg.value(metadata !{i8* %storemerge}, i64 0, metadata !98), !dbg !119
  %2 = load i8* %storemerge, align 1, !dbg !119, !tbaa !129
  switch i8 %2, label %if.else [
    i8 0, label %for.end70
    i8 37, label %if.then
  ], !dbg !119

if.then:                                          ; preds = %for.cond
  %incdec.ptr = getelementptr inbounds i8* %storemerge, i64 1, !dbg !131
  call void @llvm.dbg.value(metadata !{i8* %incdec.ptr}, i64 0, metadata !98), !dbg !131
  call void @llvm.dbg.value(metadata !{i8* %incdec.ptr}, i64 0, metadata !125), !dbg !127
  call void @llvm.dbg.value(metadata !{i8* %incdec.ptr}, i64 0, metadata !98), !dbg !119
  call void @llvm.dbg.value(metadata !{i8* %incdec.ptr}, i64 0, metadata !98), !dbg !128
  call void @llvm.dbg.value(metadata !{i8* %incdec.ptr}, i64 0, metadata !98), !dbg !119
  call void @llvm.dbg.value(metadata !18, i64 0, metadata !132) #2, !dbg !133
  %3 = load i8* %incdec.ptr, align 1, !dbg !134, !tbaa !129
  %idxprom4.i = sext i8 %3 to i64, !dbg !134
  %call.i = call i16** @__ctype_b_loc() #6, !dbg !134
  %4 = load i16** %call.i, align 8, !dbg !134, !tbaa !135
  %arrayidx5.i = getelementptr inbounds i16* %4, i64 %idxprom4.i, !dbg !134
  %5 = load i16* %arrayidx5.i, align 2, !dbg !134, !tbaa !136
  %and6.i = and i16 %5, 2048, !dbg !134
  %tobool7.i = icmp eq i16 %and6.i, 0, !dbg !134
  br i1 %tobool7.i, label %for.end, label %while.body.i, !dbg !134

while.body.i:                                     ; preds = %if.then, %while.body.i
  %6 = phi i8 [ %8, %while.body.i ], [ %3, %if.then ], !dbg !134
  %7 = phi i8* [ %incdec.ptr.i, %while.body.i ], [ %incdec.ptr, %if.then ]
  %fld.08.i = phi i32 [ %add.i, %while.body.i ], [ 0, %if.then ]
  %mul.i = mul nsw i32 %fld.08.i, 10, !dbg !134
  %incdec.ptr.i = getelementptr inbounds i8* %7, i64 1, !dbg !134
  call void @llvm.dbg.value(metadata !{i8* %incdec.ptr.i}, i64 0, metadata !98), !dbg !134
  call void @llvm.dbg.value(metadata !{i8* %incdec.ptr.i}, i64 0, metadata !125), !dbg !127
  call void @llvm.dbg.value(metadata !{i8* %incdec.ptr.i}, i64 0, metadata !98), !dbg !119
  call void @llvm.dbg.value(metadata !{i8* %incdec.ptr.i}, i64 0, metadata !98), !dbg !128
  call void @llvm.dbg.value(metadata !{i8* %incdec.ptr.i}, i64 0, metadata !98), !dbg !119
  %conv2.i = sext i8 %6 to i32, !dbg !134
  %sub.i = add i32 %mul.i, -48, !dbg !134
  %add.i = add i32 %sub.i, %conv2.i, !dbg !134
  call void @llvm.dbg.value(metadata !{i32 %add.i}, i64 0, metadata !132) #2, !dbg !134
  %8 = load i8* %incdec.ptr.i, align 1, !dbg !134, !tbaa !129
  %idxprom.i = sext i8 %8 to i64, !dbg !134
  %arrayidx.i = getelementptr inbounds i16* %4, i64 %idxprom.i, !dbg !134
  %9 = load i16* %arrayidx.i, align 2, !dbg !134, !tbaa !136
  %and.i = and i16 %9, 2048, !dbg !134
  %tobool.i = icmp eq i16 %and.i, 0, !dbg !134
  br i1 %tobool.i, label %getfld.exit, label %while.body.i, !dbg !134

getfld.exit:                                      ; preds = %while.body.i
  call void @llvm.dbg.value(metadata !{i32 %fld.0.lcssa.i85}, i64 0, metadata !104), !dbg !126
  call void @llvm.dbg.value(metadata !18, i64 0, metadata !103), !dbg !137
  %cmp481 = icmp sgt i32 %add.i, 0, !dbg !137
  br i1 %cmp481, label %for.body6, label %for.end, !dbg !137

for.body6:                                        ; preds = %getfld.exit, %for.body6
  %i.082 = phi i32 [ %i.0.inc, %for.body6 ], [ 0, %getfld.exit ]
  %call7 = call i32 @fgetc(%struct._IO_FILE* %in) #7, !dbg !139
  %conv8 = trunc i32 %call7 to i8, !dbg !139
  %idxprom = sext i32 %i.082 to i64, !dbg !139
  %arrayidx = getelementptr inbounds [4096 x i8]* %buf, i64 0, i64 %idxprom, !dbg !139
  store i8 %conv8, i8* %arrayidx, align 1, !dbg !139, !tbaa !129
  %sext.mask = and i32 %call7, 255, !dbg !141
  %not.cmp12 = icmp ne i32 %sext.mask, 10, !dbg !141
  %inc = zext i1 %not.cmp12 to i32, !dbg !141
  %i.0.inc = add nsw i32 %inc, %i.082, !dbg !141
  %cmp4 = icmp slt i32 %i.0.inc, %add.i, !dbg !137
  br i1 %cmp4, label %for.body6, label %for.end, !dbg !137

for.end:                                          ; preds = %if.then, %for.body6, %getfld.exit
  %fld.0.lcssa.i85 = phi i32 [ %add.i, %getfld.exit ], [ %add.i, %for.body6 ], [ 0, %if.then ]
  %incdec.ptr.i8084 = phi i8* [ %incdec.ptr.i, %getfld.exit ], [ %incdec.ptr.i, %for.body6 ], [ %incdec.ptr, %if.then ]
  %idxprom15 = sext i32 %fld.0.lcssa.i85 to i64, !dbg !142
  %arrayidx16 = getelementptr inbounds [4096 x i8]* %buf, i64 0, i64 %idxprom15, !dbg !142
  store i8 0, i8* %arrayidx16, align 1, !dbg !142, !tbaa !129
  %10 = load i8* %incdec.ptr.i8084, align 1, !dbg !128, !tbaa !129
  %conv17 = sext i8 %10 to i32, !dbg !128
  switch i32 %conv17, label %for.inc [
    i32 100, label %sw.bb
    i32 102, label %sw.bb21
    i32 70, label %sw.bb36
    i32 114, label %sw.bb51
  ], !dbg !128

sw.bb:                                            ; preds = %for.end
  %gp_offset = load i32* %gp_offset_p, align 16, !dbg !121
  %fits_in_gp = icmp ult i32 %gp_offset, 41, !dbg !121
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !121

vaarg.in_reg:                                     ; preds = %sw.bb
  %reg_save_area = load i8** %1, align 16, !dbg !121
  %11 = sext i32 %gp_offset to i64, !dbg !121
  %12 = getelementptr i8* %reg_save_area, i64 %11, !dbg !121
  %13 = add i32 %gp_offset, 8, !dbg !121
  store i32 %13, i32* %gp_offset_p, align 16, !dbg !121
  br label %vaarg.end, !dbg !121

vaarg.in_mem:                                     ; preds = %sw.bb
  %overflow_arg_area = load i8** %overflow_arg_area_p, align 8, !dbg !121
  %overflow_arg_area.next = getelementptr i8* %overflow_arg_area, i64 8, !dbg !121
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !121
  br label %vaarg.end, !dbg !121

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr.in = phi i8* [ %12, %vaarg.in_reg ], [ %overflow_arg_area, %vaarg.in_mem ]
  %vaarg.addr = bitcast i8* %vaarg.addr.in to i32**, !dbg !121
  %14 = load i32** %vaarg.addr, align 8, !dbg !121
  %call20 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %0, i8* getelementptr inbounds ([3 x i8]* @.str, i64 0, i64 0), i32* %14) #7, !dbg !121
  br label %for.inc, !dbg !143

sw.bb21:                                          ; preds = %for.end
  %gp_offset25 = load i32* %gp_offset_p, align 16, !dbg !144
  %fits_in_gp26 = icmp ult i32 %gp_offset25, 41, !dbg !144
  br i1 %fits_in_gp26, label %vaarg.in_reg27, label %vaarg.in_mem29, !dbg !144

vaarg.in_reg27:                                   ; preds = %sw.bb21
  %reg_save_area28 = load i8** %1, align 16, !dbg !144
  %15 = sext i32 %gp_offset25 to i64, !dbg !144
  %16 = getelementptr i8* %reg_save_area28, i64 %15, !dbg !144
  %17 = add i32 %gp_offset25, 8, !dbg !144
  store i32 %17, i32* %gp_offset_p, align 16, !dbg !144
  br label %vaarg.end33, !dbg !144

vaarg.in_mem29:                                   ; preds = %sw.bb21
  %overflow_arg_area31 = load i8** %overflow_arg_area_p, align 8, !dbg !144
  %overflow_arg_area.next32 = getelementptr i8* %overflow_arg_area31, i64 8, !dbg !144
  store i8* %overflow_arg_area.next32, i8** %overflow_arg_area_p, align 8, !dbg !144
  br label %vaarg.end33, !dbg !144

vaarg.end33:                                      ; preds = %vaarg.in_mem29, %vaarg.in_reg27
  %vaarg.addr34.in = phi i8* [ %16, %vaarg.in_reg27 ], [ %overflow_arg_area31, %vaarg.in_mem29 ]
  %vaarg.addr34 = bitcast i8* %vaarg.addr34.in to float**, !dbg !144
  %18 = load float** %vaarg.addr34, align 8, !dbg !144
  %call35 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %0, i8* getelementptr inbounds ([3 x i8]* @.str1, i64 0, i64 0), float* %18) #7, !dbg !144
  br label %for.inc, !dbg !145

sw.bb36:                                          ; preds = %for.end
  %gp_offset40 = load i32* %gp_offset_p, align 16, !dbg !146
  %fits_in_gp41 = icmp ult i32 %gp_offset40, 41, !dbg !146
  br i1 %fits_in_gp41, label %vaarg.in_reg42, label %vaarg.in_mem44, !dbg !146

vaarg.in_reg42:                                   ; preds = %sw.bb36
  %reg_save_area43 = load i8** %1, align 16, !dbg !146
  %19 = sext i32 %gp_offset40 to i64, !dbg !146
  %20 = getelementptr i8* %reg_save_area43, i64 %19, !dbg !146
  %21 = add i32 %gp_offset40, 8, !dbg !146
  store i32 %21, i32* %gp_offset_p, align 16, !dbg !146
  br label %vaarg.end48, !dbg !146

vaarg.in_mem44:                                   ; preds = %sw.bb36
  %overflow_arg_area46 = load i8** %overflow_arg_area_p, align 8, !dbg !146
  %overflow_arg_area.next47 = getelementptr i8* %overflow_arg_area46, i64 8, !dbg !146
  store i8* %overflow_arg_area.next47, i8** %overflow_arg_area_p, align 8, !dbg !146
  br label %vaarg.end48, !dbg !146

vaarg.end48:                                      ; preds = %vaarg.in_mem44, %vaarg.in_reg42
  %vaarg.addr49.in = phi i8* [ %20, %vaarg.in_reg42 ], [ %overflow_arg_area46, %vaarg.in_mem44 ]
  %vaarg.addr49 = bitcast i8* %vaarg.addr49.in to double**, !dbg !146
  %22 = load double** %vaarg.addr49, align 8, !dbg !146
  %call50 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %0, i8* getelementptr inbounds ([4 x i8]* @.str2, i64 0, i64 0), double* %22) #7, !dbg !146
  br label %for.inc, !dbg !147

sw.bb51:                                          ; preds = %for.end
  %call53 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %0, i8* getelementptr inbounds ([4 x i8]* @.str2, i64 0, i64 0), double* %dval) #7, !dbg !148
  call void @llvm.dbg.value(metadata !{double* %dval}, i64 0, metadata !105), !dbg !149
  %23 = load double* %dval, align 8, !dbg !149, !tbaa !150
  %conv54 = fptrunc double %23 to float, !dbg !149
  %gp_offset57 = load i32* %gp_offset_p, align 16, !dbg !149
  %fits_in_gp58 = icmp ult i32 %gp_offset57, 41, !dbg !149
  br i1 %fits_in_gp58, label %vaarg.in_reg59, label %vaarg.in_mem61, !dbg !149

vaarg.in_reg59:                                   ; preds = %sw.bb51
  %reg_save_area60 = load i8** %1, align 16, !dbg !149
  %24 = sext i32 %gp_offset57 to i64, !dbg !149
  %25 = getelementptr i8* %reg_save_area60, i64 %24, !dbg !149
  %26 = add i32 %gp_offset57, 8, !dbg !149
  store i32 %26, i32* %gp_offset_p, align 16, !dbg !149
  br label %vaarg.end65, !dbg !149

vaarg.in_mem61:                                   ; preds = %sw.bb51
  %overflow_arg_area63 = load i8** %overflow_arg_area_p, align 8, !dbg !149
  %overflow_arg_area.next64 = getelementptr i8* %overflow_arg_area63, i64 8, !dbg !149
  store i8* %overflow_arg_area.next64, i8** %overflow_arg_area_p, align 8, !dbg !149
  br label %vaarg.end65, !dbg !149

vaarg.end65:                                      ; preds = %vaarg.in_mem61, %vaarg.in_reg59
  %vaarg.addr66.in = phi i8* [ %25, %vaarg.in_reg59 ], [ %overflow_arg_area63, %vaarg.in_mem61 ]
  %vaarg.addr66 = bitcast i8* %vaarg.addr66.in to float**, !dbg !149
  %27 = load float** %vaarg.addr66, align 8, !dbg !149
  store float %conv54, float* %27, align 4, !dbg !149, !tbaa !151
  br label %for.inc, !dbg !152

if.else:                                          ; preds = %for.cond
  %conv = sext i8 %2 to i32, !dbg !153
  %add = add nsw i32 %conv, 1, !dbg !154
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([28 x i8]* @.str3, i64 0, i64 0), i32 %add) #7, !dbg !154
  br label %for.inc

for.inc:                                          ; preds = %if.else, %for.end, %vaarg.end65, %vaarg.end48, %vaarg.end33, %vaarg.end
  %incdec.ptr.i79 = phi i8* [ %storemerge, %if.else ], [ %incdec.ptr.i8084, %for.end ], [ %incdec.ptr.i8084, %vaarg.end65 ], [ %incdec.ptr.i8084, %vaarg.end48 ], [ %incdec.ptr.i8084, %vaarg.end33 ], [ %incdec.ptr.i8084, %vaarg.end ]
  %incdec.ptr69 = getelementptr inbounds i8* %incdec.ptr.i79, i64 1, !dbg !119
  call void @llvm.dbg.value(metadata !{i8* %incdec.ptr69}, i64 0, metadata !98), !dbg !119
  br label %for.cond, !dbg !119

for.end70:                                        ; preds = %for.cond
  call void @llvm.va_end(i8* %arraydecay1), !dbg !155
  call void @llvm.lifetime.end(i64 4096, i8* %0) #2, !dbg !156
  ret void, !dbg !156
}
