define internal fastcc i32 @receivebits(i32* nocapture %buf, i32 %num_of_bits) #4 {
  tail call void @llvm.dbg.value(metadata i32* %buf, i64 0, metadata !389, metadata !435), !dbg !1792
  tail call void @llvm.dbg.value(metadata i32 %num_of_bits, i64 0, metadata !390, metadata !435), !dbg !1793
  %1 = shl i32 1, %num_of_bits, !dbg !1794
  %2 = add nsw i32 %1, -1, !dbg !1795
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !396, metadata !435), !dbg !1796
  %3 = getelementptr inbounds i32* %buf, i64 3, !dbg !1797
  %4 = bitcast i32* %3 to i8*, !dbg !1797
  tail call void @llvm.dbg.value(metadata i8* %4, i64 0, metadata !395, metadata !435), !dbg !1798
  %5 = load i32* %buf, align 4, !dbg !1799, !tbaa !727
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !391, metadata !435), !dbg !1800
  %6 = getelementptr inbounds i32* %buf, i64 1, !dbg !1801
  %7 = load i32* %6, align 4, !dbg !1801, !tbaa !727
  tail call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !393, metadata !435), !dbg !1802
  %8 = getelementptr inbounds i32* %buf, i64 2, !dbg !1803
  %9 = load i32* %8, align 4, !dbg !1803, !tbaa !727
  tail call void @llvm.dbg.value(metadata i32 %9, i64 0, metadata !394, metadata !435), !dbg !1804
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !392, metadata !435), !dbg !1805
  %10 = icmp sgt i32 %num_of_bits, 7, !dbg !1806
  br i1 %10, label %.lr.ph, label %29, !dbg !1807

.lr.ph:                                           ; preds = %0
  %11 = sext i32 %5 to i64
  %12 = add i32 %num_of_bits, -8, !dbg !1807
  %13 = lshr i32 %12, 3, !dbg !1807
  %14 = shl nuw i32 %13, 3, !dbg !1807
  %15 = add i32 %5, %13, !dbg !1807
  br label %16, !dbg !1807

; <label>:16                                      ; preds = %.lr.ph, %16
  %indvars.iv = phi i64 [ %11, %.lr.ph ], [ %indvars.iv.next, %16 ]
  %.04 = phi i32 [ %num_of_bits, %.lr.ph ], [ %23, %16 ]
  %lastbyte.02 = phi i32 [ %9, %.lr.ph ], [ %21, %16 ]
  %num.01 = phi i32 [ 0, %.lr.ph ], [ %25, %16 ]
  %17 = shl i32 %lastbyte.02, 8, !dbg !1808
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !1807
  %18 = getelementptr inbounds i8* %4, i64 %indvars.iv, !dbg !1810
  %19 = load i8* %18, align 1, !dbg !1810, !tbaa !587
  %20 = zext i8 %19 to i32, !dbg !1810
  %21 = or i32 %20, %17, !dbg !1811
  tail call void @llvm.dbg.value(metadata i32 %21, i64 0, metadata !394, metadata !435), !dbg !1804
  %22 = lshr i32 %21, %7, !dbg !1812
  %23 = add nsw i32 %.04, -8, !dbg !1813
  %24 = shl i32 %22, %23, !dbg !1814
  %25 = or i32 %24, %num.01, !dbg !1815
  tail call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !392, metadata !435), !dbg !1805
  tail call void @llvm.dbg.value(metadata i32 %23, i64 0, metadata !390, metadata !435), !dbg !1793
  %26 = icmp sgt i32 %23, 7, !dbg !1806
  br i1 %26, label %16, label %._crit_edge, !dbg !1807

._crit_edge:                                      ; preds = %16
  %27 = sub i32 %12, %14, !dbg !1807
  %28 = add i32 %15, 1, !dbg !1807
  br label %29, !dbg !1807

; <label>:29                                      ; preds = %._crit_edge, %0
  %.0.lcssa = phi i32 [ %27, %._crit_edge ], [ %num_of_bits, %0 ]
  %cnt.0.lcssa = phi i32 [ %28, %._crit_edge ], [ %5, %0 ]
  %lastbyte.0.lcssa = phi i32 [ %21, %._crit_edge ], [ %9, %0 ]
  %num.0.lcssa = phi i32 [ %25, %._crit_edge ], [ 0, %0 ]
  %30 = icmp sgt i32 %.0.lcssa, 0, !dbg !1816
  br i1 %30, label %31, label %49, !dbg !1818

; <label>:31                                      ; preds = %29
  %32 = icmp ult i32 %7, %.0.lcssa, !dbg !1819
  br i1 %32, label %33, label %42, !dbg !1822

; <label>:33                                      ; preds = %31
  %34 = add i32 %7, 8, !dbg !1823
  tail call void @llvm.dbg.value(metadata i32 %34, i64 0, metadata !393, metadata !435), !dbg !1802
  %35 = shl i32 %lastbyte.0.lcssa, 8, !dbg !1825
  %36 = add nsw i32 %cnt.0.lcssa, 1, !dbg !1826
  tail call void @llvm.dbg.value(metadata i32 %36, i64 0, metadata !391, metadata !435), !dbg !1800
  %37 = sext i32 %cnt.0.lcssa to i64, !dbg !1827
  %38 = getelementptr inbounds i8* %4, i64 %37, !dbg !1827
  %39 = load i8* %38, align 1, !dbg !1827, !tbaa !587
  %40 = zext i8 %39 to i32, !dbg !1827
  %41 = or i32 %40, %35, !dbg !1828
  tail call void @llvm.dbg.value(metadata i32 %41, i64 0, metadata !394, metadata !435), !dbg !1804
  br label %42, !dbg !1829

; <label>:42                                      ; preds = %33, %31
  %lastbits.0 = phi i32 [ %34, %33 ], [ %7, %31 ]
  %lastbyte.1 = phi i32 [ %41, %33 ], [ %lastbyte.0.lcssa, %31 ]
  %cnt.1 = phi i32 [ %36, %33 ], [ %cnt.0.lcssa, %31 ]
  %43 = sub i32 %lastbits.0, %.0.lcssa, !dbg !1830
  tail call void @llvm.dbg.value(metadata i32 %43, i64 0, metadata !393, metadata !435), !dbg !1802
  %44 = lshr i32 %lastbyte.1, %43, !dbg !1831
  %45 = shl i32 1, %.0.lcssa, !dbg !1832
  %46 = add nsw i32 %45, -1, !dbg !1833
  %47 = and i32 %44, %46, !dbg !1834
  %48 = or i32 %47, %num.0.lcssa, !dbg !1835
  tail call void @llvm.dbg.value(metadata i32 %48, i64 0, metadata !392, metadata !435), !dbg !1805
  br label %49, !dbg !1836

; <label>:49                                      ; preds = %42, %29
  %num.1 = phi i32 [ %48, %42 ], [ %num.0.lcssa, %29 ]
  %lastbits.1 = phi i32 [ %43, %42 ], [ %7, %29 ]
  %lastbyte.2 = phi i32 [ %lastbyte.1, %42 ], [ %lastbyte.0.lcssa, %29 ]
  %cnt.2 = phi i32 [ %cnt.1, %42 ], [ %cnt.0.lcssa, %29 ]
  %50 = and i32 %num.1, %2, !dbg !1837
  tail call void @llvm.dbg.value(metadata i32 %50, i64 0, metadata !392, metadata !435), !dbg !1805
  store i32 %cnt.2, i32* %buf, align 4, !dbg !1838, !tbaa !727
  store i32 %lastbits.1, i32* %6, align 4, !dbg !1839, !tbaa !727
  store i32 %lastbyte.2, i32* %8, align 4, !dbg !1840, !tbaa !727
  ret i32 %50, !dbg !1841
}
