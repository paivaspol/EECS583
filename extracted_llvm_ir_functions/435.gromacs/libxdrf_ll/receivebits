define internal fastcc i32 @receivebits(i32* nocapture %buf, i32 %num_of_bits) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32* %buf}, i64 0, metadata !171), !dbg !873
  tail call void @llvm.dbg.value(metadata !{i32 %num_of_bits}, i64 0, metadata !172), !dbg !873
  %shl = shl i32 1, %num_of_bits, !dbg !874
  %sub = add nsw i32 %shl, -1, !dbg !874
  tail call void @llvm.dbg.value(metadata !{i32 %sub}, i64 0, metadata !180), !dbg !874
  %add.ptr58 = getelementptr inbounds i32* %buf, i64 3, !dbg !875
  %add.ptr = bitcast i32* %add.ptr58 to i8*, !dbg !875
  tail call void @llvm.dbg.value(metadata !{i8* %add.ptr}, i64 0, metadata !177), !dbg !875
  %0 = load i32* %buf, align 4, !dbg !876, !tbaa !372
  tail call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !173), !dbg !876
  %arrayidx1 = getelementptr inbounds i32* %buf, i64 1, !dbg !877
  %1 = load i32* %arrayidx1, align 4, !dbg !877, !tbaa !372
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !175), !dbg !877
  %arrayidx2 = getelementptr inbounds i32* %buf, i64 2, !dbg !878
  %2 = load i32* %arrayidx2, align 4, !dbg !878, !tbaa !372
  tail call void @llvm.dbg.value(metadata !{i32 %2}, i64 0, metadata !176), !dbg !878
  tail call void @llvm.dbg.value(metadata !9, i64 0, metadata !174), !dbg !879
  %cmp59 = icmp sgt i32 %num_of_bits, 7, !dbg !880
  br i1 %cmp59, label %while.body.lr.ph, label %while.end, !dbg !880

while.body.lr.ph:                                 ; preds = %entry
  %3 = sext i32 %0 to i64
  %4 = add i32 %num_of_bits, -8, !dbg !880
  %5 = lshr i32 %4, 3, !dbg !880
  %6 = shl nuw i32 %5, 3, !dbg !880
  %7 = add i32 %0, %5, !dbg !880
  br label %while.body, !dbg !880

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %indvars.iv = phi i64 [ %3, %while.body.lr.ph ], [ %indvars.iv.next, %while.body ]
  %num_of_bits.addr.063 = phi i32 [ %num_of_bits, %while.body.lr.ph ], [ %sub5, %while.body ]
  %lastbyte.061 = phi i32 [ %2, %while.body.lr.ph ], [ %or, %while.body ]
  %num.060 = phi i32 [ 0, %while.body.lr.ph ], [ %or7, %while.body ]
  %shl3 = shl i32 %lastbyte.061, 8, !dbg !881
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !880
  tail call void @llvm.dbg.value(metadata !{i32 %10}, i64 0, metadata !173), !dbg !881
  %arrayidx4 = getelementptr inbounds i8* %add.ptr, i64 %indvars.iv, !dbg !881
  %8 = load i8* %arrayidx4, align 1, !dbg !881, !tbaa !305
  %conv = zext i8 %8 to i32, !dbg !881
  %or = or i32 %conv, %shl3, !dbg !881
  tail call void @llvm.dbg.value(metadata !{i32 %or}, i64 0, metadata !176), !dbg !881
  %shr = lshr i32 %or, %1, !dbg !883
  %sub5 = add nsw i32 %num_of_bits.addr.063, -8, !dbg !883
  %shl6 = shl i32 %shr, %sub5, !dbg !883
  %or7 = or i32 %shl6, %num.060, !dbg !883
  tail call void @llvm.dbg.value(metadata !{i32 %or7}, i64 0, metadata !174), !dbg !883
  tail call void @llvm.dbg.value(metadata !{i32 %9}, i64 0, metadata !172), !dbg !884
  %cmp = icmp sgt i32 %sub5, 7, !dbg !880
  br i1 %cmp, label %while.body, label %while.cond.while.end_crit_edge, !dbg !880

while.cond.while.end_crit_edge:                   ; preds = %while.body
  %9 = sub i32 %4, %6, !dbg !880
  %10 = add i32 %7, 1, !dbg !880
  br label %while.end, !dbg !880

while.end:                                        ; preds = %while.cond.while.end_crit_edge, %entry
  %num_of_bits.addr.0.lcssa = phi i32 [ %9, %while.cond.while.end_crit_edge ], [ %num_of_bits, %entry ]
  %cnt.0.lcssa = phi i32 [ %10, %while.cond.while.end_crit_edge ], [ %0, %entry ]
  %lastbyte.0.lcssa = phi i32 [ %or, %while.cond.while.end_crit_edge ], [ %2, %entry ]
  %num.0.lcssa = phi i32 [ %or7, %while.cond.while.end_crit_edge ], [ 0, %entry ]
  %cmp9 = icmp sgt i32 %num_of_bits.addr.0.lcssa, 0, !dbg !885
  br i1 %cmp9, label %if.then, label %if.end25, !dbg !885

if.then:                                          ; preds = %while.end
  %cmp11 = icmp ult i32 %1, %num_of_bits.addr.0.lcssa, !dbg !886
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !886

if.then13:                                        ; preds = %if.then
  %add = add i32 %1, 8, !dbg !888
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !175), !dbg !888
  %shl14 = shl i32 %lastbyte.0.lcssa, 8, !dbg !890
  %inc15 = add nsw i32 %cnt.0.lcssa, 1, !dbg !890
  tail call void @llvm.dbg.value(metadata !{i32 %inc15}, i64 0, metadata !173), !dbg !890
  %idxprom16 = sext i32 %cnt.0.lcssa to i64, !dbg !890
  %arrayidx17 = getelementptr inbounds i8* %add.ptr, i64 %idxprom16, !dbg !890
  %11 = load i8* %arrayidx17, align 1, !dbg !890, !tbaa !305
  %conv18 = zext i8 %11 to i32, !dbg !890
  %or19 = or i32 %conv18, %shl14, !dbg !890
  tail call void @llvm.dbg.value(metadata !{i32 %or19}, i64 0, metadata !176), !dbg !890
  br label %if.end, !dbg !891

if.end:                                           ; preds = %if.then13, %if.then
  %lastbits.0 = phi i32 [ %add, %if.then13 ], [ %1, %if.then ]
  %lastbyte.1 = phi i32 [ %or19, %if.then13 ], [ %lastbyte.0.lcssa, %if.then ]
  %cnt.1 = phi i32 [ %inc15, %if.then13 ], [ %cnt.0.lcssa, %if.then ]
  %sub20 = sub i32 %lastbits.0, %num_of_bits.addr.0.lcssa, !dbg !892
  tail call void @llvm.dbg.value(metadata !{i32 %sub20}, i64 0, metadata !175), !dbg !892
  %shr21 = lshr i32 %lastbyte.1, %sub20, !dbg !893
  %shl22 = shl i32 1, %num_of_bits.addr.0.lcssa, !dbg !893
  %sub23 = add nsw i32 %shl22, -1, !dbg !893
  %and = and i32 %shr21, %sub23, !dbg !893
  %or24 = or i32 %and, %num.0.lcssa, !dbg !893
  tail call void @llvm.dbg.value(metadata !{i32 %or24}, i64 0, metadata !174), !dbg !893
  br label %if.end25, !dbg !894

if.end25:                                         ; preds = %if.end, %while.end
  %num.1 = phi i32 [ %or24, %if.end ], [ %num.0.lcssa, %while.end ]
  %lastbits.1 = phi i32 [ %sub20, %if.end ], [ %1, %while.end ]
  %lastbyte.2 = phi i32 [ %lastbyte.1, %if.end ], [ %lastbyte.0.lcssa, %while.end ]
  %cnt.2 = phi i32 [ %cnt.1, %if.end ], [ %cnt.0.lcssa, %while.end ]
  %and26 = and i32 %num.1, %sub, !dbg !895
  tail call void @llvm.dbg.value(metadata !{i32 %and26}, i64 0, metadata !174), !dbg !895
  store i32 %cnt.2, i32* %buf, align 4, !dbg !896, !tbaa !372
  store i32 %lastbits.1, i32* %arrayidx1, align 4, !dbg !897, !tbaa !372
  store i32 %lastbyte.2, i32* %arrayidx2, align 4, !dbg !898, !tbaa !372
  ret i32 %and26, !dbg !899
}
