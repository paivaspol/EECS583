define internal fastcc void @sendbits(i32* nocapture %buf, i32 %num_of_bits, i32 %num) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32* %buf}, i64 0, metadata !200), !dbg !804
  tail call void @llvm.dbg.value(metadata !{i32 %num_of_bits}, i64 0, metadata !201), !dbg !804
  tail call void @llvm.dbg.value(metadata !{i32 %num}, i64 0, metadata !202), !dbg !804
  %add.ptr61 = getelementptr inbounds i32* %buf, i64 3, !dbg !805
  %add.ptr = bitcast i32* %add.ptr61 to i8*, !dbg !805
  tail call void @llvm.dbg.value(metadata !{i8* %add.ptr}, i64 0, metadata !206), !dbg !805
  %0 = load i32* %buf, align 4, !dbg !806, !tbaa !372
  tail call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !203), !dbg !806
  %arrayidx1 = getelementptr inbounds i32* %buf, i64 1, !dbg !807
  %1 = load i32* %arrayidx1, align 4, !dbg !807, !tbaa !372
  tail call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !205), !dbg !807
  %arrayidx2 = getelementptr inbounds i32* %buf, i64 2, !dbg !808
  %2 = load i32* %arrayidx2, align 4, !dbg !808, !tbaa !372
  tail call void @llvm.dbg.value(metadata !{i32 %2}, i64 0, metadata !204), !dbg !808
  %cmp62 = icmp sgt i32 %num_of_bits, 7, !dbg !809
  br i1 %cmp62, label %while.body.lr.ph, label %while.end, !dbg !809

while.body.lr.ph:                                 ; preds = %entry
  %3 = add i32 %num_of_bits, -8, !dbg !809
  %4 = lshr i32 %3, 3, !dbg !809
  %5 = add i32 %0, %4, !dbg !809
  %6 = shl nuw i32 %4, 3, !dbg !809
  br label %while.body, !dbg !809

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %num_of_bits.addr.065 = phi i32 [ %num_of_bits, %while.body.lr.ph ], [ %sub, %while.body ]
  %lastbyte.064 = phi i32 [ %2, %while.body.lr.ph ], [ %or, %while.body ]
  %cnt.063 = phi i32 [ %0, %while.body.lr.ph ], [ %inc, %while.body ]
  %shl = shl i32 %lastbyte.064, 8, !dbg !810
  %sub = add nsw i32 %num_of_bits.addr.065, -8, !dbg !810
  %shr = ashr i32 %num, %sub, !dbg !810
  %or = or i32 %shr, %shl, !dbg !810
  tail call void @llvm.dbg.value(metadata !{i32 %or}, i64 0, metadata !204), !dbg !810
  %shr3 = lshr i32 %or, %1, !dbg !812
  %conv = trunc i32 %shr3 to i8, !dbg !812
  %inc = add i32 %cnt.063, 1, !dbg !812
  tail call void @llvm.dbg.value(metadata !{i32 %7}, i64 0, metadata !203), !dbg !812
  %idxprom = zext i32 %cnt.063 to i64, !dbg !812
  %arrayidx4 = getelementptr inbounds i8* %add.ptr, i64 %idxprom, !dbg !812
  store i8 %conv, i8* %arrayidx4, align 1, !dbg !812, !tbaa !305
  tail call void @llvm.dbg.value(metadata !{i32 %8}, i64 0, metadata !201), !dbg !813
  %cmp = icmp sgt i32 %sub, 7, !dbg !809
  br i1 %cmp, label %while.body, label %while.cond.while.end_crit_edge, !dbg !809

while.cond.while.end_crit_edge:                   ; preds = %while.body
  %7 = add i32 %5, 1, !dbg !809
  %8 = sub i32 %3, %6, !dbg !809
  br label %while.end, !dbg !809

while.end:                                        ; preds = %while.cond.while.end_crit_edge, %entry
  %num_of_bits.addr.0.lcssa = phi i32 [ %8, %while.cond.while.end_crit_edge ], [ %num_of_bits, %entry ]
  %lastbyte.0.lcssa = phi i32 [ %or, %while.cond.while.end_crit_edge ], [ %2, %entry ]
  %cnt.0.lcssa = phi i32 [ %7, %while.cond.while.end_crit_edge ], [ %0, %entry ]
  %cmp6 = icmp sgt i32 %num_of_bits.addr.0.lcssa, 0, !dbg !814
  br i1 %cmp6, label %if.then, label %if.end19, !dbg !814

if.then:                                          ; preds = %while.end
  %shl8 = shl i32 %lastbyte.0.lcssa, %num_of_bits.addr.0.lcssa, !dbg !815
  %or9 = or i32 %shl8, %num, !dbg !815
  tail call void @llvm.dbg.value(metadata !{i32 %or9}, i64 0, metadata !204), !dbg !815
  %add = add nsw i32 %num_of_bits.addr.0.lcssa, %1, !dbg !817
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !205), !dbg !817
  %cmp10 = icmp sgt i32 %add, 7, !dbg !818
  br i1 %cmp10, label %if.then12, label %if.end19, !dbg !818

if.then12:                                        ; preds = %if.then
  %sub13 = add nsw i32 %add, -8, !dbg !819
  tail call void @llvm.dbg.value(metadata !{i32 %sub13}, i64 0, metadata !205), !dbg !819
  %shr14 = lshr i32 %or9, %sub13, !dbg !821
  %conv15 = trunc i32 %shr14 to i8, !dbg !821
  %inc16 = add i32 %cnt.0.lcssa, 1, !dbg !821
  tail call void @llvm.dbg.value(metadata !{i32 %inc16}, i64 0, metadata !203), !dbg !821
  %idxprom17 = zext i32 %cnt.0.lcssa to i64, !dbg !821
  %arrayidx18 = getelementptr inbounds i8* %add.ptr, i64 %idxprom17, !dbg !821
  store i8 %conv15, i8* %arrayidx18, align 1, !dbg !821, !tbaa !305
  br label %if.end19, !dbg !822

if.end19:                                         ; preds = %if.then, %if.then12, %while.end
  %cnt.1 = phi i32 [ %inc16, %if.then12 ], [ %cnt.0.lcssa, %if.then ], [ %cnt.0.lcssa, %while.end ]
  %lastbyte.1 = phi i32 [ %or9, %if.then12 ], [ %or9, %if.then ], [ %lastbyte.0.lcssa, %while.end ]
  %lastbits.0 = phi i32 [ %sub13, %if.then12 ], [ %add, %if.then ], [ %1, %while.end ]
  store i32 %cnt.1, i32* %buf, align 4, !dbg !823, !tbaa !372
  store i32 %lastbits.0, i32* %arrayidx1, align 4, !dbg !824, !tbaa !372
  store i32 %lastbyte.1, i32* %arrayidx2, align 4, !dbg !825, !tbaa !372
  %cmp23 = icmp sgt i32 %lastbits.0, 0, !dbg !826
  br i1 %cmp23, label %if.then25, label %if.end31, !dbg !826

if.then25:                                        ; preds = %if.end19
  %sub26 = sub nsw i32 8, %lastbits.0, !dbg !827
  %shl27 = shl i32 %lastbyte.1, %sub26, !dbg !827
  %conv28 = trunc i32 %shl27 to i8, !dbg !827
  %idxprom29 = zext i32 %cnt.1 to i64, !dbg !827
  %arrayidx30 = getelementptr inbounds i8* %add.ptr, i64 %idxprom29, !dbg !827
  store i8 %conv28, i8* %arrayidx30, align 1, !dbg !827, !tbaa !305
  br label %if.end31, !dbg !829

if.end31:                                         ; preds = %if.then25, %if.end19
  ret void, !dbg !830
}
