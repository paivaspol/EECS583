define internal fastcc void @sendints(i32* nocapture %buf, i32 %num_of_bits, i32* nocapture %sizes, i32* nocapture %nums) #0 {
entry:
  %bytes = alloca [32 x i32], align 16
  %0 = bitcast [32 x i32]* %bytes to i8*
  call void @llvm.lifetime.start(i64 128, i8* %0) #3
  %1 = load i32* %nums, align 4, !tbaa !3
  br label %do.body

do.body:                                          ; preds = %do.body, %entry
  %num_of_bytes.0 = phi i32 [ 0, %entry ], [ %inc, %do.body ]
  %tmp.0 = phi i32 [ %1, %entry ], [ %shr, %do.body ]
  %and = and i32 %tmp.0, 255
  %inc = add i32 %num_of_bytes.0, 1
  %idxprom = zext i32 %num_of_bytes.0 to i64
  %arrayidx1 = getelementptr inbounds [32 x i32]* %bytes, i64 0, i64 %idxprom
  store i32 %and, i32* %arrayidx1, align 4, !tbaa !3
  %shr = lshr i32 %tmp.0, 8
  %cmp = icmp eq i32 %shr, 0
  br i1 %cmp, label %for.body, label %do.body

for.body:                                         ; preds = %do.body, %while.end
  %indvars.iv30 = phi i64 [ %indvars.iv.next31, %while.end ], [ 1, %do.body ]
  %num_of_bytes.118 = phi i32 [ %bytecnt.1.lcssa, %while.end ], [ %inc, %do.body ]
  %arrayidx4 = getelementptr inbounds i32* %nums, i64 %indvars.iv30
  %2 = load i32* %arrayidx4, align 4, !tbaa !3
  %arrayidx6 = getelementptr inbounds i32* %sizes, i64 %indvars.iv30
  %3 = load i32* %arrayidx6, align 4, !tbaa !3
  %cmp7 = icmp ult i32 %2, %3
  br i1 %cmp7, label %for.cond14.preheader, label %if.then

for.cond14.preheader:                             ; preds = %for.body
  %cmp156 = icmp eq i32 %num_of_bytes.118, 0
  br i1 %cmp156, label %while.cond.loopexit, label %for.body16

if.then:                                          ; preds = %for.body
  %4 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([58 x i8]* @.str9, i64 0, i64 0), i32 %2, i32 %3) #5
  call void @exit(i32 1) #6
  unreachable

for.body16:                                       ; preds = %for.cond14.preheader, %for.body16
  %indvars.iv23 = phi i64 [ %indvars.iv.next24, %for.body16 ], [ 0, %for.cond14.preheader ]
  %tmp.18 = phi i32 [ %shr24, %for.body16 ], [ %2, %for.cond14.preheader ]
  %arrayidx18 = getelementptr inbounds [32 x i32]* %bytes, i64 0, i64 %indvars.iv23
  %5 = load i32* %arrayidx18, align 4, !tbaa !3
  %mul = mul i32 %3, %5
  %add = add i32 %mul, %tmp.18
  %and21 = and i32 %add, 255
  store i32 %and21, i32* %arrayidx18, align 4, !tbaa !3
  %shr24 = lshr i32 %add, 8
  %indvars.iv.next24 = add i64 %indvars.iv23, 1
  %lftr.wideiv25 = trunc i64 %indvars.iv.next24 to i32
  %exitcond26 = icmp eq i32 %lftr.wideiv25, %num_of_bytes.118
  br i1 %exitcond26, label %while.cond.loopexit, label %for.body16

while.cond.loopexit:                              ; preds = %for.body16, %for.cond14.preheader
  %tmp.1.lcssa = phi i32 [ %2, %for.cond14.preheader ], [ %shr24, %for.body16 ]
  %bytecnt.0.lcssa = phi i32 [ 0, %for.cond14.preheader ], [ %num_of_bytes.118, %for.body16 ]
  %cmp2611 = icmp eq i32 %tmp.1.lcssa, 0
  br i1 %cmp2611, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond.loopexit, %while.body
  %tmp.213 = phi i32 [ %shr31, %while.body ], [ %tmp.1.lcssa, %while.cond.loopexit ]
  %bytecnt.112 = phi i32 [ %inc28, %while.body ], [ %bytecnt.0.lcssa, %while.cond.loopexit ]
  %and27 = and i32 %tmp.213, 255
  %inc28 = add i32 %bytecnt.112, 1
  %idxprom29 = zext i32 %bytecnt.112 to i64
  %arrayidx30 = getelementptr inbounds [32 x i32]* %bytes, i64 0, i64 %idxprom29
  store i32 %and27, i32* %arrayidx30, align 4, !tbaa !3
  %shr31 = lshr i32 %tmp.213, 8
  %cmp26 = icmp eq i32 %shr31, 0
  br i1 %cmp26, label %while.end, label %while.body

while.end:                                        ; preds = %while.body, %while.cond.loopexit
  %bytecnt.1.lcssa = phi i32 [ %bytecnt.0.lcssa, %while.cond.loopexit ], [ %inc28, %while.body ]
  %indvars.iv.next31 = add i64 %indvars.iv30, 1
  %6 = trunc i64 %indvars.iv.next31 to i32
  %cmp2 = icmp slt i32 %6, 3
  br i1 %cmp2, label %for.body, label %for.end34

for.end34:                                        ; preds = %while.end
  %mul35 = shl i32 %bytecnt.1.lcssa, 3
  %cmp36 = icmp ugt i32 %mul35, %num_of_bits
  br i1 %cmp36, label %for.cond47.preheader, label %for.cond38.preheader

for.cond38.preheader:                             ; preds = %for.end34
  %cmp394 = icmp eq i32 %bytecnt.1.lcssa, 0
  br i1 %cmp394, label %for.end45, label %for.body40

for.cond47.preheader:                             ; preds = %for.end34
  %sub48 = add i32 %bytecnt.1.lcssa, -1
  %cmp491 = icmp eq i32 %sub48, 0
  br i1 %cmp491, label %for.end55, label %for.body50

for.body40:                                       ; preds = %for.cond38.preheader, %for.body40
  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.body40 ], [ 0, %for.cond38.preheader ]
  %arrayidx42 = getelementptr inbounds [32 x i32]* %bytes, i64 0, i64 %indvars.iv19
  %7 = load i32* %arrayidx42, align 4, !tbaa !3
  call fastcc void @sendbits(i32* %buf, i32 8, i32 %7) #8
  %indvars.iv.next20 = add i64 %indvars.iv19, 1
  %lftr.wideiv21 = trunc i64 %indvars.iv.next20 to i32
  %exitcond22 = icmp eq i32 %lftr.wideiv21, %bytecnt.1.lcssa
  br i1 %exitcond22, label %for.end45, label %for.body40

for.end45:                                        ; preds = %for.body40, %for.cond38.preheader
  %sub = sub i32 %num_of_bits, %mul35
  call fastcc void @sendbits(i32* %buf, i32 %sub, i32 0) #8
  br label %if.end61

for.body50:                                       ; preds = %for.cond47.preheader, %for.body50
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body50 ], [ 0, %for.cond47.preheader ]
  %arrayidx52 = getelementptr inbounds [32 x i32]* %bytes, i64 0, i64 %indvars.iv
  %8 = load i32* %arrayidx52, align 4, !tbaa !3
  call fastcc void @sendbits(i32* %buf, i32 8, i32 %8) #8
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %sub48
  br i1 %exitcond, label %for.cond47.for.end55_crit_edge, label %for.body50

for.cond47.for.end55_crit_edge:                   ; preds = %for.body50
  %phitmp = sext i32 %sub48 to i64
  br label %for.end55

for.end55:                                        ; preds = %for.cond47.preheader, %for.cond47.for.end55_crit_edge
  %i.2.lcssa = phi i64 [ %phitmp, %for.cond47.for.end55_crit_edge ], [ 0, %for.cond47.preheader ]
  %mul57 = shl i32 %sub48, 3
  %sub58 = sub i32 %num_of_bits, %mul57
  %arrayidx60 = getelementptr inbounds [32 x i32]* %bytes, i64 0, i64 %i.2.lcssa
  %9 = load i32* %arrayidx60, align 4, !tbaa !3
  call fastcc void @sendbits(i32* %buf, i32 %sub58, i32 %9) #8
  br label %if.end61

if.end61:                                         ; preds = %for.end55, %for.end45
  call void @llvm.lifetime.end(i64 128, i8* %0) #3
  ret void
}
