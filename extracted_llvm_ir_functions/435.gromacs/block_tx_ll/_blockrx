define void @_blockrx(i32 %src, i32 %nelem, i32 %size, i8* %data) #0 {
entry:
  %len = alloca i32, align 4
  call void @llvm.dbg.value(metadata !{i32 %src}, i64 0, metadata !21), !dbg !68
  call void @llvm.dbg.value(metadata !{i32 %nelem}, i64 0, metadata !22), !dbg !68
  call void @llvm.dbg.value(metadata !{i32 %size}, i64 0, metadata !23), !dbg !68
  call void @llvm.dbg.value(metadata !{i8* %data}, i64 0, metadata !24), !dbg !68
  call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !26), !dbg !69
  call void @llvm.dbg.value(metadata !{i8* %data}, i64 0, metadata !27), !dbg !70
  %cmp = icmp eq i8* %data, null, !dbg !71
  %cmp1 = icmp sgt i32 %size, 0, !dbg !71
  %or.cond = and i1 %cmp, %cmp1, !dbg !71
  br i1 %or.cond, label %if.then, label %for.cond.preheader, !dbg !71

if.then:                                          ; preds = %entry
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([29 x i8]* @.str1, i64 0, i64 0), i32 %size) #3, !dbg !72
  br label %for.cond.preheader, !dbg !72

for.cond.preheader:                               ; preds = %if.then, %entry
  %cmp216 = icmp sgt i32 %nelem, 0, !dbg !73
  br i1 %cmp216, label %for.body.lr.ph, label %for.end, !dbg !73

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %0 = bitcast i32* %len to i8*, !dbg !75
  br label %for.body, !dbg !73

for.body:                                         ; preds = %if.end8, %for.body.lr.ph
  %buf.018 = phi i8* [ %data, %for.body.lr.ph ], [ %add.ptr, %if.end8 ]
  %i.017 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end8 ]
  call void @gmx_rxs(i32 %src, i8* %0, i32 4) #3, !dbg !75
  call void @llvm.dbg.value(metadata !{i32* %len}, i64 0, metadata !26), !dbg !77
  %1 = load i32* %len, align 4, !dbg !77, !tbaa !54
  %cmp3 = icmp eq i32 %1, %size, !dbg !77
  br i1 %cmp3, label %if.end5, label %if.then4, !dbg !77

if.then4:                                         ; preds = %for.body
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([34 x i8]* @.str2, i64 0, i64 0), i32 0, i32 %size, i32 %1, i32 0) #3, !dbg !78
  call void @llvm.dbg.value(metadata !{i32* %len}, i64 0, metadata !26), !dbg !79
  %.pr = load i32* %len, align 4, !dbg !79, !tbaa !54
  br label %if.end5, !dbg !78

if.end5:                                          ; preds = %for.body, %if.then4
  %2 = phi i32 [ %size, %for.body ], [ %.pr, %if.then4 ]
  call void @llvm.dbg.value(metadata !{i32* %len}, i64 0, metadata !26), !dbg !79
  %cmp6 = icmp sgt i32 %2, 0, !dbg !79
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !79

if.then7:                                         ; preds = %if.end5
  call void @gmx_rxs(i32 %src, i8* %buf.018, i32 %2) #3, !dbg !80
  call void @llvm.dbg.value(metadata !{i32* %len}, i64 0, metadata !26), !dbg !81
  %.pre = load i32* %len, align 4, !dbg !81, !tbaa !54
  br label %if.end8, !dbg !80

if.end8:                                          ; preds = %if.then7, %if.end5
  %3 = phi i32 [ %.pre, %if.then7 ], [ %2, %if.end5 ]
  call void @llvm.dbg.value(metadata !{i32* %len}, i64 0, metadata !26), !dbg !81
  %idx.ext = sext i32 %3 to i64, !dbg !81
  %add.ptr = getelementptr inbounds i8* %buf.018, i64 %idx.ext, !dbg !81
  call void @llvm.dbg.value(metadata !{i8* %add.ptr}, i64 0, metadata !27), !dbg !81
  %inc = add nsw i32 %i.017, 1, !dbg !73
  call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !25), !dbg !73
  %exitcond = icmp eq i32 %inc, %nelem, !dbg !73
  br i1 %exitcond, label %for.end, label %for.body, !dbg !73

for.end:                                          ; preds = %if.end8, %for.cond.preheader
  ret void, !dbg !82
}
