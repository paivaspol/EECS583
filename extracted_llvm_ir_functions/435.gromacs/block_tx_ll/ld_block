define void @ld_block(i32 %src, %struct.t_block* %block) #0 {
entry:
  %0 = bitcast %struct.t_block* %block to i8*
  tail call void @_blockrx(i32 %src, i32 1, i32 1024, i8* %0) #3
  %nr = getelementptr inbounds %struct.t_block* %block, i64 0, i32 1
  %1 = bitcast i32* %nr to i8*
  tail call void @_blockrx(i32 %src, i32 1, i32 4, i8* %1) #3
  %2 = load i32* %nr, align 4, !tbaa !0
  %add = add nsw i32 %2, 1
  %call = tail call i8* @save_calloc(i8* getelementptr inbounds ([13 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8]* @.str4, i64 0, i64 0), i32 108, i32 %add, i32 4) #2
  %3 = bitcast i8* %call to i32*
  %index = getelementptr inbounds %struct.t_block* %block, i64 0, i32 2
  store i32* %3, i32** %index, align 8, !tbaa !3
  %4 = load i32* %nr, align 4, !tbaa !0
  %add3 = shl i32 %4, 2
  %mul = add i32 %add3, 4
  tail call void @_blockrx(i32 %src, i32 1, i32 %mul, i8* %call) #3
  %nra = getelementptr inbounds %struct.t_block* %block, i64 0, i32 3
  %5 = bitcast i32* %nra to i8*
  tail call void @_blockrx(i32 %src, i32 1, i32 4, i8* %5) #3
  %6 = load i32* %nra, align 4, !tbaa !0
  %call7 = tail call i8* @save_calloc(i8* getelementptr inbounds ([9 x i8]* @.str5, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8]* @.str4, i64 0, i64 0), i32 120, i32 %6, i32 4) #2
  %7 = bitcast i8* %call7 to i32*
  %a = getelementptr inbounds %struct.t_block* %block, i64 0, i32 4
  store i32* %7, i32** %a, align 8, !tbaa !3
  %8 = load i32* %nra, align 4, !tbaa !0
  %mul10 = shl i32 %8, 2
  tail call void @_blockrx(i32 %src, i32 1, i32 %mul10, i8* %call7) #3
  ret void
}
