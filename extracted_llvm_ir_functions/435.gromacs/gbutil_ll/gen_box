define void @gen_box(i32 %NTB, i32 %natoms, [3 x float]* nocapture %x, [3 x float]* nocapture %box, float* nocapture readonly %box_space, i32 %bCenter) #4 {
.preheader6:
  %x39 = bitcast [3 x float]* %x to i8*
  %xmin = alloca [3 x float], align 4
  %xmin40 = bitcast [3 x float]* %xmin to i8*
  %xmax = alloca [3 x float], align 4
  %xmax38 = bitcast [3 x float]* %xmax to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %xmax38, i8* %x39, i64 12, i32 4, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %xmin40, i8* %x39, i64 12, i32 4, i1 false)
  %0 = icmp sgt i32 %natoms, 1
  br i1 %0, label %.preheader5.lr.ph, label %.preheader4

.preheader5.lr.ph:                                ; preds = %.preheader6
  %1 = add i32 %natoms, -1
  br label %.preheader5

.preheader5:                                      ; preds = %12, %.preheader5.lr.ph
  %indvars.iv31 = phi i64 [ 1, %.preheader5.lr.ph ], [ %indvars.iv.next32, %12 ]
  br label %2

; <label>:2                                       ; preds = %2, %.preheader5
  %indvars.iv28 = phi i64 [ 0, %.preheader5 ], [ %indvars.iv.next29, %2 ]
  %3 = getelementptr inbounds [3 x float]* %xmin, i64 0, i64 %indvars.iv28
  %4 = load float* %3, align 4, !tbaa !14
  %5 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv31, i64 %indvars.iv28
  %6 = load float* %5, align 4, !tbaa !14
  %7 = fcmp olt float %4, %6
  %. = select i1 %7, float %4, float %6
  store float %., float* %3, align 4, !tbaa !14
  %8 = getelementptr inbounds [3 x float]* %xmax, i64 0, i64 %indvars.iv28
  %9 = load float* %8, align 4, !tbaa !14
  %10 = fcmp ogt float %9, %6
  %11 = select i1 %10, float %9, float %6
  store float %11, float* %8, align 4, !tbaa !14
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1
  %exitcond30 = icmp eq i64 %indvars.iv.next29, 3
  br i1 %exitcond30, label %12, label %2

; <label>:12                                      ; preds = %2
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1
  %lftr.wideiv33 = trunc i64 %indvars.iv31 to i32
  %exitcond34 = icmp eq i32 %lftr.wideiv33, %1
  br i1 %exitcond34, label %.preheader4, label %.preheader5

.preheader4:                                      ; preds = %.preheader6, %12, %.preheader4
  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %.preheader4 ], [ 0, %12 ], [ 0, %.preheader6 ]
  %13 = getelementptr inbounds [3 x float]* %xmax, i64 0, i64 %indvars.iv25
  %14 = load float* %13, align 4, !tbaa !14
  %15 = getelementptr inbounds [3 x float]* %xmin, i64 0, i64 %indvars.iv25
  %16 = load float* %15, align 4, !tbaa !14
  %17 = fsub float %14, %16
  %18 = getelementptr inbounds float* %box_space, i64 %indvars.iv25
  %19 = load float* %18, align 4, !tbaa !14
  %20 = fmul float %19, 2.000000e+00
  %21 = fadd float %17, %20
  %22 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv25, i64 %indvars.iv25
  store float %21, float* %22, align 4, !tbaa !14
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1
  %exitcond27 = icmp eq i64 %indvars.iv.next26, 3
  br i1 %exitcond27, label %23, label %.preheader4

; <label>:23                                      ; preds = %.preheader4
  %24 = icmp eq i32 %NTB, 1
  br i1 %24, label %25, label %.loopexit3

; <label>:25                                      ; preds = %23
  %26 = getelementptr inbounds [3 x float]* %box, i64 0, i64 0
  %27 = load float* %26, align 4, !tbaa !14
  br label %._crit_edge

._crit_edge:                                      ; preds = %25, %._crit_edge
  %indvars.iv.next2342 = phi i64 [ 1, %25 ], [ %indvars.iv.next23, %._crit_edge ]
  %max_box.0.41 = phi float [ %27, %25 ], [ %max_box.0., %._crit_edge ]
  %.phi.trans.insert = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv.next2342, i64 %indvars.iv.next2342
  %.pre = load float* %.phi.trans.insert, align 4, !tbaa !14
  %28 = fcmp ogt float %max_box.0.41, %.pre
  %max_box.0. = select i1 %28, float %max_box.0.41, float %.pre
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv.next2342, 1
  %exitcond24 = icmp eq i64 %indvars.iv.next23, 3
  br i1 %exitcond24, label %.preheader2, label %._crit_edge

.preheader2:                                      ; preds = %._crit_edge, %.preheader2
  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %.preheader2 ], [ 0, %._crit_edge ]
  %29 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv19, i64 %indvars.iv19
  store float %max_box.0., float* %29, align 4, !tbaa !14
  %indvars.iv.next20 = add nuw nsw i64 %indvars.iv19, 1
  %exitcond21 = icmp eq i64 %indvars.iv.next20, 3
  br i1 %exitcond21, label %.loopexit3, label %.preheader2

.loopexit3:                                       ; preds = %.preheader2, %23
  %30 = icmp ne i32 %bCenter, 0
  %31 = icmp sgt i32 %natoms, 0
  %or.cond = and i1 %30, %31
  br i1 %or.cond, label %.preheader.lr.ph, label %.loopexit

.preheader.lr.ph:                                 ; preds = %.loopexit3
  %32 = add i32 %natoms, -1
  br label %.preheader

.preheader:                                       ; preds = %49, %.preheader.lr.ph
  %indvars.iv16 = phi i64 [ 0, %.preheader.lr.ph ], [ %indvars.iv.next17, %49 ]
  br label %33

; <label>:33                                      ; preds = %33, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %33 ]
  %34 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv, i64 %indvars.iv
  %35 = load float* %34, align 4, !tbaa !14
  %36 = getelementptr inbounds [3 x float]* %xmin, i64 0, i64 %indvars.iv
  %37 = load float* %36, align 4, !tbaa !14
  %38 = fsub float %35, %37
  %39 = getelementptr inbounds [3 x float]* %xmax, i64 0, i64 %indvars.iv
  %40 = load float* %39, align 4, !tbaa !14
  %41 = fsub float %38, %40
  %42 = fpext float %41 to double
  %43 = fmul double %42, 5.000000e-01
  %44 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv16, i64 %indvars.iv
  %45 = load float* %44, align 4, !tbaa !14
  %46 = fpext float %45 to double
  %47 = fadd double %46, %43
  %48 = fptrunc double %47 to float
  store float %48, float* %44, align 4, !tbaa !14
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %49, label %33

; <label>:49                                      ; preds = %33
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1
  %lftr.wideiv = trunc i64 %indvars.iv16 to i32
  %exitcond18 = icmp eq i32 %lftr.wideiv, %32
  br i1 %exitcond18, label %.loopexit, label %.preheader

.loopexit:                                        ; preds = %49, %.loopexit3
  ret void
}
