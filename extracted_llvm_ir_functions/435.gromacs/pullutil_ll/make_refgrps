define void @make_refgrps(%struct.t_pull* nocapture %pull, [3 x float]* nocapture %box, %struct.t_mdatoms* nocapture %md) #0 {
entry:
  %n = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 1, i32 0
  %0 = load i32* %n, align 4, !tbaa !4
  %.b = load i1* @make_refgrps.bFirst, align 1
  br i1 %.b, label %for.cond19.preheader, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i8* @save_calloc(i8* getelementptr inbounds ([15 x i8]* @.str5, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8]* @.str6, i64 0, i64 0), i32 267, i32 %0, i32 4) #5
  %1 = bitcast i8* %call to i32*
  %ngx = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 0, i32 3
  store i32* %1, i32** %ngx, align 8, !tbaa !3
  %call2 = tail call i8* @save_calloc(i8* getelementptr inbounds ([15 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8]* @.str6, i64 0, i64 0), i32 268, i32 %0, i32 8) #5
  %2 = bitcast i8* %call2 to i32**
  %idx = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 0, i32 1
  store i32** %2, i32*** %idx, align 8, !tbaa !3
  %call4 = tail call i8* @save_calloc(i8* getelementptr inbounds ([19 x i8]* @.str8, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8]* @.str6, i64 0, i64 0), i32 269, i32 %0, i32 8) #5
  %3 = bitcast i8* %call4 to float**
  %weights = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 0, i32 2
  store float** %3, float*** %weights, align 8, !tbaa !3
  %cmp246 = icmp sgt i32 %0, 0
  br i1 %cmp246, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.then
  %ngx6 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 2, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv254 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next255, %for.body ]
  %4 = load i32** %ngx6, align 8, !tbaa !3
  %5 = load i32* %4, align 4, !tbaa !4
  %call7 = tail call i8* @save_calloc(i8* getelementptr inbounds ([18 x i8]* @.str9, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8]* @.str6, i64 0, i64 0), i32 271, i32 %5, i32 4) #5
  %6 = bitcast i8* %call7 to i32*
  %7 = load i32*** %idx, align 8, !tbaa !3
  %arrayidx10 = getelementptr inbounds i32** %7, i64 %indvars.iv254
  store i32* %6, i32** %arrayidx10, align 8, !tbaa !3
  %8 = load i32** %ngx6, align 8, !tbaa !3
  %9 = load i32* %8, align 4, !tbaa !4
  %call14 = tail call i8* @save_calloc(i8* getelementptr inbounds ([22 x i8]* @.str10, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8]* @.str6, i64 0, i64 0), i32 272, i32 %9, i32 4) #5
  %10 = bitcast i8* %call14 to float*
  %11 = load float*** %weights, align 8, !tbaa !3
  %arrayidx18 = getelementptr inbounds float** %11, i64 %indvars.iv254
  store float* %10, float** %arrayidx18, align 8, !tbaa !3
  %indvars.iv.next255 = add i64 %indvars.iv254, 1
  %lftr.wideiv256 = trunc i64 %indvars.iv.next255 to i32
  %exitcond257 = icmp eq i32 %lftr.wideiv256, %0
  br i1 %exitcond257, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.then
  store i1 true, i1* @make_refgrps.bFirst, align 1
  br label %for.cond19.preheader

for.cond19.preheader:                             ; preds = %entry, %for.end
  %cmp20244 = icmp sgt i32 %0, 0
  br i1 %cmp20244, label %for.body21.lr.ph, label %for.end159

for.body21.lr.ph:                                 ; preds = %for.cond19.preheader
  %tmass = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 0, i32 5
  %ngx27 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 0, i32 3
  %ngx31 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 2, i32 3
  %x_unc122 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 0, i32 9
  %bVerbose = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 25
  %idx37 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 2, i32 1
  %x0 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 2, i32 6
  %x_unc = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 1, i32 9
  %arrayidx1.i = getelementptr inbounds [3 x float]* %box, i64 0, i64 0
  %arrayidx3.i = getelementptr inbounds [3 x float]* %box, i64 1, i64 1
  %rc = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 8
  %massT = getelementptr inbounds %struct.t_mdatoms* %md, i64 0, i32 4
  %r = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 7
  %weights63 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 0, i32 2
  %idx69 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 0, i32 1
  br label %for.body21

for.body21:                                       ; preds = %for.inc157, %for.body21.lr.ph
  %indvars.iv250 = phi i64 [ 0, %for.body21.lr.ph ], [ %indvars.iv.next251, %for.inc157 ]
  %12 = load float** %tmass, align 8, !tbaa !3
  %arrayidx24 = getelementptr inbounds float* %12, i64 %indvars.iv250
  store float 0.000000e+00, float* %arrayidx24, align 4, !tbaa !0
  %13 = load i32** %ngx27, align 8, !tbaa !3
  %arrayidx28 = getelementptr inbounds i32* %13, i64 %indvars.iv250
  store i32 0, i32* %arrayidx28, align 4, !tbaa !4
  %14 = load i32** %ngx31, align 8, !tbaa !3
  %15 = load i32* %14, align 4, !tbaa !4
  %cmp33240 = icmp sgt i32 %15, 0
  br i1 %cmp33240, label %for.body34, label %for.end115

for.body34:                                       ; preds = %for.inc113, %for.body21
  %indvars.iv248 = phi i64 [ 0, %for.body21 ], [ %indvars.iv.next249, %for.inc113 ]
  %truemass.0243 = phi float [ 0.000000e+00, %for.body21 ], [ %truemass.1, %for.inc113 ]
  %k.0241 = phi i32 [ 0, %for.body21 ], [ %k.1, %for.inc113 ]
  %16 = load i32*** %idx37, align 8, !tbaa !3
  %17 = load i32** %16, align 8, !tbaa !3
  %arrayidx39 = getelementptr inbounds i32* %17, i64 %indvars.iv248
  %18 = load i32* %arrayidx39, align 4, !tbaa !4
  %19 = load [3 x float]*** %x0, align 8, !tbaa !3
  %20 = load [3 x float]** %19, align 8, !tbaa !3
  %arraydecay = getelementptr inbounds [3 x float]* %20, i64 %indvars.iv248, i64 0
  %21 = load [3 x float]** %x_unc, align 8, !tbaa !3
  %arraydecay47 = getelementptr inbounds [3 x float]* %21, i64 %indvars.iv250, i64 0
  %22 = load float* %arrayidx1.i, align 4, !tbaa !0
  %23 = load float* %arrayidx3.i, align 4, !tbaa !0
  %24 = load float* %arraydecay, align 4, !tbaa !0
  %25 = load float* %arraydecay47, align 4, !tbaa !0
  %sub.i = fsub float %24, %25
  %fabsf.i = tail call float @fabsf(float %sub.i) #4
  %conv746.i = fpext float %fabsf.i to double
  %conv8.i = fpext float %22 to double
  %mul.i = fmul double %conv8.i, 5.000000e-01
  %cmp47.i = fcmp ogt double %conv746.i, %mul.i
  br i1 %cmp47.i, label %while.body.i, label %while.end.i

while.body.i:                                     ; preds = %for.body34, %while.body.i
  %dx.048.i = phi float [ %sub10.i, %while.body.i ], [ %fabsf.i, %for.body34 ]
  %sub10.i = fsub float %dx.048.i, %22
  %conv7.i = fpext float %sub10.i to double
  %cmp.i = fcmp ogt double %conv7.i, %mul.i
  br i1 %cmp.i, label %while.body.i, label %while.end.i

while.end.i:                                      ; preds = %while.body.i, %for.body34
  %dx.0.lcssa.i = phi float [ %fabsf.i, %for.body34 ], [ %sub10.i, %while.body.i ]
  %arrayidx11.i = getelementptr inbounds [3 x float]* %20, i64 %indvars.iv248, i64 1
  %26 = load float* %arrayidx11.i, align 4, !tbaa !0
  %arrayidx12.i = getelementptr inbounds [3 x float]* %21, i64 %indvars.iv250, i64 1
  %27 = load float* %arrayidx12.i, align 4, !tbaa !0
  %sub13.i = fsub float %26, %27
  %fabsf42.i = tail call float @fabsf(float %sub13.i) #4
  %conv1843.i = fpext float %fabsf42.i to double
  %conv19.i = fpext float %23 to double
  %mul20.i = fmul double %conv19.i, 5.000000e-01
  %cmp2144.i = fcmp ogt double %conv1843.i, %mul20.i
  br i1 %cmp2144.i, label %while.body23.i, label %get_cylinder_distance.exit

while.body23.i:                                   ; preds = %while.end.i, %while.body23.i
  %dy.045.i = phi float [ %sub24.i, %while.body23.i ], [ %fabsf42.i, %while.end.i ]
  %sub24.i = fsub float %dy.045.i, %23
  %conv18.i = fpext float %sub24.i to double
  %cmp21.i = fcmp ogt double %conv18.i, %mul20.i
  br i1 %cmp21.i, label %while.body23.i, label %get_cylinder_distance.exit

get_cylinder_distance.exit:                       ; preds = %while.body23.i, %while.end.i
  %dy.0.lcssa.i = phi float [ %fabsf42.i, %while.end.i ], [ %sub24.i, %while.body23.i ]
  %mul26.i = fmul float %dx.0.lcssa.i, %dx.0.lcssa.i
  %mul27.i = fmul float %dy.0.lcssa.i, %dy.0.lcssa.i
  %add.i = fadd float %mul26.i, %mul27.i
  %conv30.i = tail call float @sqrtf(float %add.i) #1
  %28 = load float* %rc, align 4, !tbaa !0
  %cmp49 = fcmp olt float %conv30.i, %28
  br i1 %cmp49, label %if.then50, label %for.inc113

if.then50:                                        ; preds = %get_cylinder_distance.exit
  %idxprom51 = sext i32 %18 to i64
  %29 = load float** %massT, align 8, !tbaa !3
  %arrayidx52 = getelementptr inbounds float* %29, i64 %idxprom51
  %30 = load float* %arrayidx52, align 4, !tbaa !0
  %add = fadd float %truemass.0243, %30
  %31 = load i32** %ngx27, align 8, !tbaa !3
  %arrayidx56 = getelementptr inbounds i32* %31, i64 %indvars.iv250
  %32 = load i32* %arrayidx56, align 4, !tbaa !4
  %inc57 = add nsw i32 %32, 1
  store i32 %inc57, i32* %arrayidx56, align 4, !tbaa !4
  %33 = load float* %r, align 4, !tbaa !0
  %cmp.i231 = fcmp olt float %conv30.i, %33
  br i1 %cmp.i231, label %get_weight.exit, label %if.else.i

if.else.i:                                        ; preds = %if.then50
  %cmp1.i = fcmp ogt float %conv30.i, %28
  br i1 %cmp1.i, label %get_weight.exit, label %if.else3.i

if.else3.i:                                       ; preds = %if.else.i
  %sub.i232 = fsub float -0.000000e+00, %28
  %sub4.i = fsub float %33, %28
  %div.i = fdiv float %sub.i232, %sub4.i
  %div6.i = fdiv float %conv30.i, %sub4.i
  %add.i233 = fadd float %div.i, %div6.i
  br label %get_weight.exit

get_weight.exit:                                  ; preds = %if.then50, %if.else.i, %if.else3.i
  %weight.0.i = phi float [ %add.i233, %if.else3.i ], [ 1.000000e+00, %if.then50 ], [ 0.000000e+00, %if.else.i ]
  %idxprom60 = sext i32 %k.0241 to i64
  %34 = load float*** %weights63, align 8, !tbaa !3
  %arrayidx64 = getelementptr inbounds float** %34, i64 %indvars.iv250
  %35 = load float** %arrayidx64, align 8, !tbaa !3
  %arrayidx65 = getelementptr inbounds float* %35, i64 %idxprom60
  store float %weight.0.i, float* %arrayidx65, align 4, !tbaa !0
  %36 = load i32*** %idx69, align 8, !tbaa !3
  %arrayidx70 = getelementptr inbounds i32** %36, i64 %indvars.iv250
  %37 = load i32** %arrayidx70, align 8, !tbaa !3
  %arrayidx71 = getelementptr inbounds i32* %37, i64 %idxprom60
  store i32 %18, i32* %arrayidx71, align 4, !tbaa !4
  %mul237 = fmul float %30, %weight.0.i
  %38 = load [3 x float]*** %x0, align 8, !tbaa !3
  %39 = load [3 x float]** %38, align 8, !tbaa !3
  %40 = load [3 x float]** %x_unc122, align 8, !tbaa !3
  br label %for.body74

for.body74:                                       ; preds = %for.body74, %get_weight.exit
  %indvars.iv = phi i64 [ 0, %get_weight.exit ], [ %indvars.iv.next, %for.body74 ]
  %mul239 = phi float [ %mul237, %get_weight.exit ], [ %mul, %for.body74 ]
  %arrayidx87 = getelementptr inbounds [3 x float]* %39, i64 %indvars.iv248, i64 %indvars.iv
  %41 = load float* %arrayidx87, align 4, !tbaa !0
  %mul88 = fmul float %mul239, %41
  %arrayidx94 = getelementptr inbounds [3 x float]* %40, i64 %indvars.iv250, i64 %indvars.iv
  %42 = load float* %arrayidx94, align 4, !tbaa !0
  %add95 = fadd float %mul88, %42
  store float %add95, float* %arrayidx94, align 4, !tbaa !0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %43 = load float* %arrayidx65, align 4, !tbaa !0
  %mul = fmul float %30, %43
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 3
  br i1 %exitcond, label %for.end98, label %for.body74

for.end98:                                        ; preds = %for.body74
  %44 = load float** %tmass, align 8, !tbaa !3
  %arrayidx109 = getelementptr inbounds float* %44, i64 %indvars.iv250
  %45 = load float* %arrayidx109, align 4, !tbaa !0
  %add110 = fadd float %mul, %45
  store float %add110, float* %arrayidx109, align 4, !tbaa !0
  %inc111 = add nsw i32 %k.0241, 1
  br label %for.inc113

for.inc113:                                       ; preds = %get_cylinder_distance.exit, %for.end98
  %k.1 = phi i32 [ %inc111, %for.end98 ], [ %k.0241, %get_cylinder_distance.exit ]
  %truemass.1 = phi float [ %add, %for.end98 ], [ %truemass.0243, %get_cylinder_distance.exit ]
  %indvars.iv.next249 = add i64 %indvars.iv248, 1
  %46 = load i32** %ngx31, align 8, !tbaa !3
  %47 = load i32* %46, align 4, !tbaa !4
  %48 = trunc i64 %indvars.iv.next249 to i32
  %cmp33 = icmp slt i32 %48, %47
  br i1 %cmp33, label %for.body34, label %for.cond29.for.end115_crit_edge

for.cond29.for.end115_crit_edge:                  ; preds = %for.inc113
  %.pre = load float** %tmass, align 8, !tbaa !3
  %arrayidx119.phi.trans.insert = getelementptr inbounds float* %.pre, i64 %indvars.iv250
  %.pre258 = load float* %arrayidx119.phi.trans.insert, align 4, !tbaa !0
  br label %for.end115

for.end115:                                       ; preds = %for.body21, %for.cond29.for.end115_crit_edge
  %49 = phi float [ %.pre258, %for.cond29.for.end115_crit_edge ], [ 0.000000e+00, %for.body21 ]
  %50 = phi float* [ %.pre, %for.cond29.for.end115_crit_edge ], [ %12, %for.body21 ]
  %truemass.0.lcssa = phi float [ %truemass.1, %for.cond29.for.end115_crit_edge ], [ 0.000000e+00, %for.body21 ]
  %div = fdiv float 1.000000e+00, %49
  %51 = load [3 x float]** %x_unc122, align 8, !tbaa !3
  %arraydecay124 = getelementptr inbounds [3 x float]* %51, i64 %indvars.iv250, i64 0
  %52 = load float* %arraydecay124, align 4, !tbaa !0
  %mul.i234 = fmul float %div, %52
  store float %mul.i234, float* %arraydecay124, align 4, !tbaa !0
  %arrayidx2.i = getelementptr inbounds [3 x float]* %51, i64 %indvars.iv250, i64 1
  %53 = load float* %arrayidx2.i, align 4, !tbaa !0
  %mul3.i = fmul float %div, %53
  store float %mul3.i, float* %arrayidx2.i, align 4, !tbaa !0
  %arrayidx5.i = getelementptr inbounds [3 x float]* %51, i64 %indvars.iv250, i64 2
  %54 = load float* %arrayidx5.i, align 4, !tbaa !0
  %mul6.i = fmul float %div, %54
  store float %mul6.i, float* %arrayidx5.i, align 4, !tbaa !0
  %55 = load i32* %bVerbose, align 4, !tbaa !4
  %tobool130 = icmp eq i32 %55, 0
  br i1 %tobool130, label %for.inc157, label %if.then131

if.then131:                                       ; preds = %for.end115
  %arrayidx119 = getelementptr inbounds float* %50, i64 %indvars.iv250
  %56 = load %struct._IO_FILE** @stderr, align 8, !tbaa !3
  %conv = fpext float %mul.i234 to double
  %conv142 = fpext float %mul3.i to double
  %conv148 = fpext float %mul6.i to double
  %57 = load float* %arrayidx119, align 4, !tbaa !0
  %conv153 = fpext float %57 to double
  %conv154 = fpext float %truemass.0.lcssa to double
  %58 = trunc i64 %indvars.iv250 to i32
  %call155 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %56, i8* getelementptr inbounds ([48 x i8]* @.str11, i64 0, i64 0), i32 %58, double %conv, double %conv142, double %conv148, double %conv153, double %conv154) #5
  br label %for.inc157

for.inc157:                                       ; preds = %for.end115, %if.then131
  %indvars.iv.next251 = add i64 %indvars.iv250, 1
  %lftr.wideiv252 = trunc i64 %indvars.iv.next251 to i32
  %exitcond253 = icmp eq i32 %lftr.wideiv252, %0
  br i1 %exitcond253, label %for.end159, label %for.body21

for.end159:                                       ; preds = %for.inc157, %for.cond19.preheader
  ret void
}
