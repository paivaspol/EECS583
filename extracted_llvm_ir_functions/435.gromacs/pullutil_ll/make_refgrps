define void @make_refgrps(%struct.t_pull* nocapture %pull, [3 x float]* nocapture readonly %box, %struct.t_mdatoms* nocapture readonly %md) #4 {
  %1 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 1, i32 0
  %2 = load i32* %1, align 4, !tbaa !24
  %.b = load i1* @make_refgrps.bFirst, align 1
  br i1 %.b, label %.preheader, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i8* @save_calloc(i8* getelementptr inbounds ([15 x i8]* @.str5, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str6, i64 0, i64 0), i32 267, i32 %2, i32 4) #7
  %5 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 0, i32 3
  %6 = bitcast i32** %5 to i8**
  store i8* %4, i8** %6, align 8, !tbaa !37
  %7 = tail call i8* @save_calloc(i8* getelementptr inbounds ([15 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str6, i64 0, i64 0), i32 268, i32 %2, i32 8) #7
  %8 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 0, i32 1
  %9 = bitcast i32*** %8 to i8**
  store i8* %7, i8** %9, align 8, !tbaa !38
  %10 = tail call i8* @save_calloc(i8* getelementptr inbounds ([19 x i8]* @.str8, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str6, i64 0, i64 0), i32 269, i32 %2, i32 8) #7
  %11 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 0, i32 2
  %12 = bitcast float*** %11 to i8**
  store i8* %10, i8** %12, align 8, !tbaa !39
  %13 = icmp sgt i32 %2, 0
  br i1 %13, label %.lr.ph12, label %._crit_edge13

.lr.ph12:                                         ; preds = %3
  %14 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 2, i32 3
  %15 = add i32 %2, -1
  br label %16

; <label>:16                                      ; preds = %16, %.lr.ph12
  %indvars.iv21 = phi i64 [ 0, %.lr.ph12 ], [ %indvars.iv.next22, %16 ]
  %17 = load i32** %14, align 8, !tbaa !31
  %18 = load i32* %17, align 4, !tbaa !20
  %19 = tail call i8* @save_calloc(i8* getelementptr inbounds ([18 x i8]* @.str9, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str6, i64 0, i64 0), i32 271, i32 %18, i32 4) #7
  %20 = load i32*** %8, align 8, !tbaa !38
  %21 = getelementptr inbounds i32** %20, i64 %indvars.iv21
  %22 = bitcast i32** %21 to i8**
  store i8* %19, i8** %22, align 8, !tbaa !29
  %23 = load i32** %14, align 8, !tbaa !31
  %24 = load i32* %23, align 4, !tbaa !20
  %25 = tail call i8* @save_calloc(i8* getelementptr inbounds ([22 x i8]* @.str10, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str6, i64 0, i64 0), i32 272, i32 %24, i32 4) #7
  %26 = load float*** %11, align 8, !tbaa !39
  %27 = getelementptr inbounds float** %26, i64 %indvars.iv21
  %28 = bitcast float** %27 to i8**
  store i8* %25, i8** %28, align 8, !tbaa !29
  %indvars.iv.next22 = add nuw nsw i64 %indvars.iv21, 1
  %lftr.wideiv23 = trunc i64 %indvars.iv21 to i32
  %exitcond24 = icmp eq i32 %lftr.wideiv23, %15
  br i1 %exitcond24, label %._crit_edge13, label %16

._crit_edge13:                                    ; preds = %16, %3
  store i1 true, i1* @make_refgrps.bFirst, align 1
  br label %.preheader

.preheader:                                       ; preds = %0, %._crit_edge13
  %29 = icmp sgt i32 %2, 0
  br i1 %29, label %.lr.ph8, label %._crit_edge9

.lr.ph8:                                          ; preds = %.preheader
  %30 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 0, i32 5
  %31 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 0, i32 3
  %32 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 2, i32 3
  %33 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 0, i32 9
  %34 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 25
  %35 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 2, i32 1
  %36 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 2, i32 6
  %37 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 1, i32 9
  %38 = getelementptr inbounds [3 x float]* %box, i64 0, i64 0
  %39 = getelementptr inbounds [3 x float]* %box, i64 1, i64 1
  %40 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 8
  %41 = getelementptr inbounds %struct.t_mdatoms* %md, i64 0, i32 4
  %42 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 7
  %43 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 0, i32 2
  %44 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 0, i32 1
  %45 = add i32 %2, -1
  br label %46

; <label>:46                                      ; preds = %167, %.lr.ph8
  %indvars.iv18 = phi i64 [ 0, %.lr.ph8 ], [ %indvars.iv.next19, %167 ]
  %47 = load float** %30, align 8, !tbaa !40
  %48 = getelementptr inbounds float* %47, i64 %indvars.iv18
  store float 0.000000e+00, float* %48, align 4, !tbaa !14
  %49 = load i32** %31, align 8, !tbaa !37
  %50 = getelementptr inbounds i32* %49, i64 %indvars.iv18
  store i32 0, i32* %50, align 4, !tbaa !20
  %51 = load i32** %32, align 8, !tbaa !31
  %52 = load i32* %51, align 4, !tbaa !20
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %46
  %54 = load i32*** %35, align 8, !tbaa !34
  %55 = load i32** %54, align 8, !tbaa !29
  %56 = load [3 x float]*** %36, align 8, !tbaa !32
  %57 = load [3 x float]** %56, align 8, !tbaa !29
  %58 = load [3 x float]** %37, align 8, !tbaa !41
  %59 = getelementptr inbounds [3 x float]* %58, i64 %indvars.iv18, i64 0
  %60 = getelementptr inbounds [3 x float]* %58, i64 %indvars.iv18, i64 1
  br label %61

; <label>:61                                      ; preds = %.lr.ph, %138
  %62 = phi float [ 0.000000e+00, %.lr.ph ], [ %139, %138 ]
  %63 = phi i32 [ %52, %.lr.ph ], [ %140, %138 ]
  %indvars.iv16 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next17, %138 ]
  %truemass.06 = phi float [ 0.000000e+00, %.lr.ph ], [ %truemass.1, %138 ]
  %k.04 = phi i32 [ 0, %.lr.ph ], [ %k.1, %138 ]
  %64 = getelementptr inbounds i32* %55, i64 %indvars.iv16
  %65 = load i32* %64, align 4, !tbaa !20
  %66 = getelementptr inbounds [3 x float]* %57, i64 %indvars.iv16, i64 0
  %67 = load float* %38, align 4, !tbaa !14
  %68 = load float* %39, align 4, !tbaa !14
  %69 = load float* %66, align 4, !tbaa !14
  %70 = load float* %59, align 4, !tbaa !14
  %71 = fsub float %69, %70
  %fabsf.i = tail call float @fabsf(float %71) #9
  %72 = fpext float %fabsf.i to double
  %73 = fpext float %67 to double
  %74 = fmul double %73, 5.000000e-01
  %75 = fcmp ogt double %72, %74
  br i1 %75, label %.lr.ph5.i, label %._crit_edge6.i

.lr.ph5.i:                                        ; preds = %61, %.lr.ph5.i
  %dx.03.i = phi float [ %76, %.lr.ph5.i ], [ %fabsf.i, %61 ]
  %76 = fsub float %dx.03.i, %67
  %77 = fpext float %76 to double
  %78 = fcmp ogt double %77, %74
  br i1 %78, label %.lr.ph5.i, label %._crit_edge6.i

._crit_edge6.i:                                   ; preds = %.lr.ph5.i, %61
  %dx.0.lcssa.i = phi float [ %fabsf.i, %61 ], [ %76, %.lr.ph5.i ]
  %79 = getelementptr inbounds [3 x float]* %57, i64 %indvars.iv16, i64 1
  %80 = load float* %79, align 4, !tbaa !14
  %81 = load float* %60, align 4, !tbaa !14
  %82 = fsub float %80, %81
  %fabsf1.i = tail call float @fabsf(float %82) #9
  %83 = fpext float %fabsf1.i to double
  %84 = fpext float %68 to double
  %85 = fmul double %84, 5.000000e-01
  %86 = fcmp ogt double %83, %85
  br i1 %86, label %.lr.ph.i, label %get_cylinder_distance.exit

.lr.ph.i:                                         ; preds = %._crit_edge6.i, %.lr.ph.i
  %dy.02.i = phi float [ %87, %.lr.ph.i ], [ %fabsf1.i, %._crit_edge6.i ]
  %87 = fsub float %dy.02.i, %68
  %88 = fpext float %87 to double
  %89 = fcmp ogt double %88, %85
  br i1 %89, label %.lr.ph.i, label %get_cylinder_distance.exit

get_cylinder_distance.exit:                       ; preds = %.lr.ph.i, %._crit_edge6.i
  %dy.0.lcssa.i = phi float [ %fabsf1.i, %._crit_edge6.i ], [ %87, %.lr.ph.i ]
  %90 = fmul float %dx.0.lcssa.i, %dx.0.lcssa.i
  %91 = fmul float %dy.0.lcssa.i, %dy.0.lcssa.i
  %92 = fadd float %90, %91
  %sqrtf.i = tail call float @sqrtf(float %92) #9
  %93 = load float* %40, align 4, !tbaa !42
  %94 = fcmp olt float %sqrtf.i, %93
  br i1 %94, label %95, label %138

; <label>:95                                      ; preds = %get_cylinder_distance.exit
  %96 = sext i32 %65 to i64
  %97 = load float** %41, align 8, !tbaa !18
  %98 = getelementptr inbounds float* %97, i64 %96
  %99 = load float* %98, align 4, !tbaa !14
  %100 = fadd float %truemass.06, %99
  %101 = load i32* %50, align 4, !tbaa !20
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %50, align 4, !tbaa !20
  %103 = load float* %42, align 4, !tbaa !43
  %104 = fcmp olt float %sqrtf.i, %103
  br i1 %104, label %get_weight.exit, label %105

; <label>:105                                     ; preds = %95
  %106 = fcmp ogt float %sqrtf.i, %93
  br i1 %106, label %get_weight.exit, label %107

; <label>:107                                     ; preds = %105
  %108 = fsub float -0.000000e+00, %93
  %109 = fsub float %103, %93
  %110 = fdiv float %108, %109
  %111 = fdiv float %sqrtf.i, %109
  %112 = fadd float %110, %111
  br label %get_weight.exit

get_weight.exit:                                  ; preds = %95, %105, %107
  %weight.0.i = phi float [ %112, %107 ], [ 1.000000e+00, %95 ], [ 0.000000e+00, %105 ]
  %113 = sext i32 %k.04 to i64
  %114 = load float*** %43, align 8, !tbaa !39
  %115 = getelementptr inbounds float** %114, i64 %indvars.iv18
  %116 = load float** %115, align 8, !tbaa !29
  %117 = getelementptr inbounds float* %116, i64 %113
  store float %weight.0.i, float* %117, align 4, !tbaa !14
  %118 = load i32*** %44, align 8, !tbaa !38
  %119 = getelementptr inbounds i32** %118, i64 %indvars.iv18
  %120 = load i32** %119, align 8, !tbaa !29
  %121 = getelementptr inbounds i32* %120, i64 %113
  store i32 %65, i32* %121, align 4, !tbaa !20
  %122 = fmul float %99, %weight.0.i
  %123 = load [3 x float]** %33, align 8, !tbaa !26
  br label %124

; <label>:124                                     ; preds = %124, %get_weight.exit
  %indvars.iv = phi i64 [ 0, %get_weight.exit ], [ %indvars.iv.next, %124 ]
  %125 = phi float [ %122, %get_weight.exit ], [ %133, %124 ]
  %126 = getelementptr inbounds [3 x float]* %57, i64 %indvars.iv16, i64 %indvars.iv
  %127 = load float* %126, align 4, !tbaa !14
  %128 = fmul float %125, %127
  %129 = getelementptr inbounds [3 x float]* %123, i64 %indvars.iv18, i64 %indvars.iv
  %130 = load float* %129, align 4, !tbaa !14
  %131 = fadd float %128, %130
  store float %131, float* %129, align 4, !tbaa !14
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %132 = load float* %117, align 4, !tbaa !14
  %133 = fmul float %99, %132
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %134, label %124

; <label>:134                                     ; preds = %124
  %135 = load float* %48, align 4, !tbaa !14
  %136 = fadd float %133, %135
  store float %136, float* %48, align 4, !tbaa !14
  %137 = add nsw i32 %k.04, 1
  %.pre = load i32* %51, align 4, !tbaa !20
  br label %138

; <label>:138                                     ; preds = %get_cylinder_distance.exit, %134
  %139 = phi float [ %136, %134 ], [ %62, %get_cylinder_distance.exit ]
  %140 = phi i32 [ %.pre, %134 ], [ %63, %get_cylinder_distance.exit ]
  %k.1 = phi i32 [ %137, %134 ], [ %k.04, %get_cylinder_distance.exit ]
  %truemass.1 = phi float [ %100, %134 ], [ %truemass.06, %get_cylinder_distance.exit ]
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1
  %141 = sext i32 %140 to i64
  %142 = icmp slt i64 %indvars.iv.next17, %141
  br i1 %142, label %61, label %._crit_edge

._crit_edge:                                      ; preds = %138, %46
  %143 = phi float [ 0.000000e+00, %46 ], [ %139, %138 ]
  %truemass.0.lcssa = phi float [ 0.000000e+00, %46 ], [ %truemass.1, %138 ]
  %144 = fdiv float 1.000000e+00, %143
  %145 = load [3 x float]** %33, align 8, !tbaa !26
  %146 = getelementptr inbounds [3 x float]* %145, i64 %indvars.iv18, i64 0
  %147 = load float* %146, align 4, !tbaa !14
  %148 = fmul float %144, %147
  store float %148, float* %146, align 4, !tbaa !14
  %149 = getelementptr inbounds [3 x float]* %145, i64 %indvars.iv18, i64 1
  %150 = load float* %149, align 4, !tbaa !14
  %151 = fmul float %144, %150
  store float %151, float* %149, align 4, !tbaa !14
  %152 = getelementptr inbounds [3 x float]* %145, i64 %indvars.iv18, i64 2
  %153 = load float* %152, align 4, !tbaa !14
  %154 = fmul float %144, %153
  store float %154, float* %152, align 4, !tbaa !14
  %155 = load i32* %34, align 4, !tbaa !35
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %._crit_edge25, label %157

._crit_edge25:                                    ; preds = %._crit_edge
  %.pre26 = trunc i64 %indvars.iv18 to i32
  br label %167

; <label>:157                                     ; preds = %._crit_edge
  %158 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !29
  %159 = fpext float %148 to double
  %160 = fpext float %151 to double
  %161 = fpext float %154 to double
  %162 = load float* %48, align 4, !tbaa !14
  %163 = fpext float %162 to double
  %164 = fpext float %truemass.0.lcssa to double
  %165 = trunc i64 %indvars.iv18 to i32
  %166 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %158, i8* getelementptr inbounds ([48 x i8]* @.str11, i64 0, i64 0), i32 %165, double %159, double %160, double %161, double %163, double %164) #7
  br label %167

; <label>:167                                     ; preds = %._crit_edge25, %157
  %lftr.wideiv.pre-phi = phi i32 [ %.pre26, %._crit_edge25 ], [ %165, %157 ]
  %indvars.iv.next19 = add nuw nsw i64 %indvars.iv18, 1
  %exitcond20 = icmp eq i32 %lftr.wideiv.pre-phi, %45
  br i1 %exitcond20, label %._crit_edge9, label %46

._crit_edge9:                                     ; preds = %167, %.preheader
  ret void
}
