define void @write_xpm_header(%struct._IO_FILE* nocapture %out, i8* %title, i8* %legend, i8* %label_x, i8* %label_y, i32 %bDiscrete) #0 {
entry:
  %0 = tail call i64 @fwrite(i8* getelementptr inbounds ([11 x i8]* @.str53, i64 0, i64 0), i64 10, i64 1, %struct._IO_FILE* %out)
  %call1 = tail call i8* @Program() #8
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([23 x i8]* @.str54, i64 0, i64 0), i8* %call1) #8
  %1 = tail call i64 @fwrite(i8* getelementptr inbounds ([71 x i8]* @.str55, i64 0, i64 0), i64 70, i64 1, %struct._IO_FILE* %out)
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([21 x i8]* @.str56, i64 0, i64 0), i8* %title) #8
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([21 x i8]* @.str57, i64 0, i64 0), i8* %legend) #8
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([21 x i8]* @.str58, i64 0, i64 0), i8* %label_x) #8
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([21 x i8]* @.str59, i64 0, i64 0), i8* %label_y) #8
  %tobool = icmp eq i32 %bDiscrete, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %2 = tail call i64 @fwrite(i8* getelementptr inbounds ([27 x i8]* @.str60, i64 0, i64 0), i64 26, i64 1, %struct._IO_FILE* %out)
  br label %if.end

if.else:                                          ; preds = %entry
  %3 = tail call i64 @fwrite(i8* getelementptr inbounds ([29 x i8]* @.str61, i64 0, i64 0), i64 28, i64 1, %struct._IO_FILE* %out)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}
