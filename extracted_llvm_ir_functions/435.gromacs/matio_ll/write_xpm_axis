define void @write_xpm_axis(%struct.__sFILE* nocapture %out, i8* %axis, i32 %n, float* readonly %label) #3 {
  %1 = icmp eq float* %label, null
  br i1 %1, label %20, label %.preheader

.preheader:                                       ; preds = %0
  %2 = icmp sgt i32 %n, 0
  br i1 %2, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader
  %3 = add i32 %n, -1
  br label %4

; <label>:4                                       ; preds = %14, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %14 ]
  %5 = trunc i64 %indvars.iv to i32
  %6 = srem i32 %5, 80
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %14

; <label>:8                                       ; preds = %4
  %9 = icmp eq i32 %5, 0
  br i1 %9, label %12, label %10

; <label>:10                                      ; preds = %8
  %11 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str68, i64 0, i64 0), i64 3, i64 1, %struct.__sFILE* %out)
  br label %12

; <label>:12                                      ; preds = %8, %10
  %13 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %out, i8* getelementptr inbounds ([14 x i8]* @.str69, i64 0, i64 0), i8* %axis) #10
  br label %14

; <label>:14                                      ; preds = %12, %4
  %15 = getelementptr inbounds float* %label, i64 %indvars.iv
  %16 = load float* %15, align 4, !tbaa !35
  %17 = fpext float %16 to double
  %18 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %out, i8* getelementptr inbounds ([4 x i8]* @.str70, i64 0, i64 0), double %17) #10
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i32 %5, %3
  br i1 %exitcond, label %._crit_edge, label %4

._crit_edge:                                      ; preds = %14, %.preheader
  %19 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str68, i64 0, i64 0), i64 3, i64 1, %struct.__sFILE* %out)
  br label %20

; <label>:20                                      ; preds = %0, %._crit_edge
  ret void
}
