define void @clear_matrix(i32 %nx, i32 %ny, float** nocapture %m) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %nx}, i64 0, metadata !47), !dbg !479
  tail call void @llvm.dbg.value(metadata !{i32 %ny}, i64 0, metadata !48), !dbg !479
  tail call void @llvm.dbg.value(metadata !{float** %m}, i64 0, metadata !49), !dbg !479
  tail call void @llvm.dbg.value(metadata !18, i64 0, metadata !50), !dbg !480
  %cmp15 = icmp sgt i32 %nx, 0, !dbg !480
  br i1 %cmp15, label %for.cond1.preheader.lr.ph, label %for.end8, !dbg !480

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %cmp213 = icmp sgt i32 %ny, 0, !dbg !482
  %0 = add i32 %ny, -1, !dbg !480
  %1 = zext i32 %0 to i64
  %2 = shl nuw nsw i64 %1, 2, !dbg !480
  %3 = add i64 %2, 4, !dbg !480
  br label %for.cond1.preheader, !dbg !480

for.cond1.preheader:                              ; preds = %for.inc6, %for.cond1.preheader.lr.ph
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next, %for.inc6 ]
  br i1 %cmp213, label %for.body3.lr.ph, label %for.inc6, !dbg !482

for.body3.lr.ph:                                  ; preds = %for.cond1.preheader
  %arrayidx = getelementptr inbounds float** %m, i64 %indvars.iv, !dbg !484
  %4 = load float** %arrayidx, align 8, !dbg !484, !tbaa !463
  %5 = bitcast float* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 %3, i32 4, i1 false), !dbg !484
  br label %for.inc6, !dbg !482

for.inc6:                                         ; preds = %for.body3.lr.ph, %for.cond1.preheader
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !480
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !480
  %exitcond = icmp eq i32 %lftr.wideiv, %nx, !dbg !480
  br i1 %exitcond, label %for.end8, label %for.cond1.preheader, !dbg !480

for.end8:                                         ; preds = %for.inc6, %entry
  ret void, !dbg !485
}
