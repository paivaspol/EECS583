define void @write_xpm_map3(%struct.__sFILE* nocapture %out, i32 %n_x, i32 %n_y, i32* nocapture %nlevels, float %lo, float %mid, float %hi, <2 x float> %rlo.coerce0, float %rlo.coerce1, <2 x float> %rmid.coerce0, float %rmid.coerce1, %struct.t_rgb* byval nocapture readonly align 8 %rhi) #3 {
  %1 = load i32* %nlevels, align 4, !tbaa !15
  %2 = sext i32 %1 to i64
  %3 = tail call i64 @strlen(i8* getelementptr inbounds ([89 x i8]* @mapper, i64 0, i64 0)) #10
  %4 = mul i64 %3, %3
  %5 = icmp ugt i64 %2, %4
  br i1 %5, label %6, label %13

; <label>:6                                       ; preds = %0
  %7 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !14
  %8 = trunc i64 %4 to i32
  %9 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %7, i8* getelementptr inbounds ([56 x i8]* @.str62, i64 0, i64 0), i32 %1, i32 %8) #10
  %10 = tail call i64 @strlen(i8* getelementptr inbounds ([89 x i8]* @mapper, i64 0, i64 0)) #10
  %11 = mul i64 %10, %10
  %12 = trunc i64 %11 to i32
  store i32 %12, i32* %nlevels, align 4, !tbaa !15
  br label %18

; <label>:13                                      ; preds = %0
  %14 = icmp slt i32 %1, 2
  br i1 %14, label %15, label %18

; <label>:15                                      ; preds = %13
  %16 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !14
  %17 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %16, i8* getelementptr inbounds ([57 x i8]* @.str63, i64 0, i64 0), i32 %1) #10
  store i32 2, i32* %nlevels, align 4, !tbaa !15
  br label %18

; <label>:18                                      ; preds = %13, %15, %6
  %19 = fcmp ogt float %mid, %lo
  %20 = fcmp olt float %mid, %hi
  %or.cond = and i1 %19, %20
  br i1 %or.cond, label %25, label %21

; <label>:21                                      ; preds = %18
  %22 = fpext float %lo to double
  %23 = fpext float %mid to double
  %24 = fpext float %hi to double
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([25 x i8]* @.str64, i64 0, i64 0), double %22, double %23, double %24) #10
  br label %25

; <label>:25                                      ; preds = %18, %21
  %26 = tail call i64 @fwrite(i8* getelementptr inbounds ([32 x i8]* @.str65, i64 0, i64 0), i64 31, i64 1, %struct.__sFILE* %out)
  %27 = load i32* %nlevels, align 4, !tbaa !15
  %28 = sext i32 %27 to i64
  %29 = tail call i64 @strlen(i8* getelementptr inbounds ([89 x i8]* @mapper, i64 0, i64 0)) #10
  %30 = icmp ule i64 %28, %29
  %31 = select i1 %30, i32 1, i32 2
  %32 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %out, i8* getelementptr inbounds ([18 x i8]* @.str66, i64 0, i64 0), i32 %n_x, i32 %n_y, i32 %27, i32 %31) #10
  %33 = load i32* %nlevels, align 4, !tbaa !15
  %34 = fsub float %mid, %lo
  %35 = fsub float %hi, %lo
  %36 = fdiv float %34, %35
  %37 = add nsw i32 %33, -1
  %38 = sitofp i32 %37 to float
  %39 = fmul float %36, %38
  %40 = fcmp olt float %39, 1.000000e+00
  %41 = select i1 %40, float 1.000000e+00, float %39
  %.not.i = fcmp uge float %41, %38
  %brmerge.i = or i1 %40, %.not.i
  %.mux.i = select i1 %.not.i, float %38, float 1.000000e+00
  %42 = select i1 %brmerge.i, float %.mux.i, float %39
  %43 = fptosi float %42 to i32
  %44 = sitofp i32 %43 to float
  %45 = sub nsw i32 %33, %43
  %46 = sitofp i32 %45 to float
  %47 = icmp sgt i32 %43, 0
  br i1 %47, label %.lr.ph6, label %.preheader

.lr.ph6:                                          ; preds = %25
  %48 = extractelement <2 x float> %rlo.coerce0, i32 0
  %49 = extractelement <2 x float> %rmid.coerce0, i32 0
  %50 = fsub float %49, %48
  %51 = extractelement <2 x float> %rlo.coerce0, i32 1
  %52 = extractelement <2 x float> %rmid.coerce0, i32 1
  %53 = fsub float %52, %51
  %54 = fsub float %rmid.coerce1, %rlo.coerce1
  %55 = zext i32 %43 to i64
  %56 = add i32 %43, -1
  br label %71

..preheader_crit_edge:                            ; preds = %97
  %.pre10 = load i32* %nlevels, align 4, !tbaa !15
  br label %.preheader

.preheader:                                       ; preds = %..preheader_crit_edge, %25
  %57 = phi i32 [ %.pre10, %..preheader_crit_edge ], [ %33, %25 ]
  %58 = icmp sgt i32 %57, %43
  br i1 %58, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader
  %59 = extractelement <2 x float> %rmid.coerce0, i32 0
  %60 = getelementptr inbounds %struct.t_rgb* %rhi, i64 0, i32 0
  %61 = load float* %60, align 8, !tbaa !39
  %62 = fsub float %61, %59
  %63 = extractelement <2 x float> %rmid.coerce0, i32 1
  %64 = getelementptr inbounds %struct.t_rgb* %rhi, i64 0, i32 1
  %65 = load float* %64, align 4, !tbaa !40
  %66 = fsub float %65, %63
  %67 = getelementptr inbounds %struct.t_rgb* %rhi, i64 0, i32 2
  %68 = load float* %67, align 8, !tbaa !41
  %69 = fsub float %68, %rmid.coerce1
  %70 = sext i32 %43 to i64
  br label %119

; <label>:71                                      ; preds = %._crit_edge9, %.lr.ph6
  %72 = phi i32 [ %33, %.lr.ph6 ], [ %.pre, %._crit_edge9 ]
  %indvars.iv7 = phi i64 [ 0, %.lr.ph6 ], [ %indvars.iv.next8, %._crit_edge9 ]
  %73 = sub i64 %55, %indvars.iv7
  %74 = trunc i64 %indvars.iv7 to i32
  %75 = sitofp i32 %74 to float
  %76 = fmul float %50, %75
  %77 = fdiv float %76, %44
  %78 = fadd float %48, %77
  %79 = fmul float %53, %75
  %80 = fdiv float %79, %44
  %81 = fadd float %51, %80
  %82 = fmul float %54, %75
  %83 = fdiv float %82, %44
  %84 = fadd float %83, %rlo.coerce1
  %85 = tail call i64 @strlen(i8* getelementptr inbounds ([89 x i8]* @mapper, i64 0, i64 0)) #10
  %86 = urem i64 %indvars.iv7, %85
  %87 = getelementptr inbounds [89 x i8]* @mapper, i64 0, i64 %86
  %88 = load i8* %87, align 1, !tbaa !13
  %89 = sext i8 %88 to i32
  %90 = sext i32 %72 to i64
  %91 = icmp ugt i64 %90, %85
  br i1 %91, label %92, label %97

; <label>:92                                      ; preds = %71
  %93 = udiv i64 %indvars.iv7, %85
  %94 = getelementptr inbounds [89 x i8]* @mapper, i64 0, i64 %93
  %95 = load i8* %94, align 1, !tbaa !13
  %96 = sext i8 %95 to i32
  br label %97

; <label>:97                                      ; preds = %71, %92
  %98 = phi i32 [ %96, %92 ], [ 32, %71 ]
  %99 = fmul float %78, 2.550000e+02
  %100 = fpext float %99 to double
  %101 = fadd double %100, 5.000000e-01
  %102 = fptosi double %101 to i32
  %103 = fmul float %81, 2.550000e+02
  %104 = fpext float %103 to double
  %105 = fadd double %104, 5.000000e-01
  %106 = fptosi double %105 to i32
  %107 = fmul float %84, 2.550000e+02
  %108 = fpext float %107 to double
  %109 = fadd double %108, 5.000000e-01
  %110 = fptosi double %109 to i32
  %111 = trunc i64 %73 to i32
  %112 = sitofp i32 %111 to float
  %113 = fmul float %112, %lo
  %114 = fmul float %75, %mid
  %115 = fadd float %114, %113
  %116 = fdiv float %115, %44
  %117 = fpext float %116 to double
  %118 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %out, i8* getelementptr inbounds ([39 x i8]* @.str67, i64 0, i64 0), i32 %89, i32 %98, i32 %102, i32 %106, i32 %110, double %117) #10
  %exitcond = icmp eq i32 %74, %56
  br i1 %exitcond, label %..preheader_crit_edge, label %._crit_edge9

._crit_edge9:                                     ; preds = %97
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1
  %.pre = load i32* %nlevels, align 4, !tbaa !15
  br label %71

; <label>:119                                     ; preds = %.lr.ph, %146
  %indvars.iv = phi i64 [ %70, %.lr.ph ], [ %indvars.iv.next, %146 ]
  %120 = phi i32 [ %57, %.lr.ph ], [ %169, %146 ]
  %121 = trunc i64 %indvars.iv to i32
  %122 = sub nsw i32 %120, %121
  %123 = sitofp i32 %121 to float
  %124 = fmul float %123, %62
  %125 = fdiv float %124, %46
  %126 = fadd float %59, %125
  %127 = fmul float %123, %66
  %128 = fdiv float %127, %46
  %129 = fadd float %63, %128
  %130 = fmul float %123, %69
  %131 = fdiv float %130, %46
  %132 = fadd float %131, %rmid.coerce1
  %133 = add nsw i64 %indvars.iv, %70
  %134 = tail call i64 @strlen(i8* getelementptr inbounds ([89 x i8]* @mapper, i64 0, i64 0)) #10
  %135 = urem i64 %133, %134
  %136 = getelementptr inbounds [89 x i8]* @mapper, i64 0, i64 %135
  %137 = load i8* %136, align 1, !tbaa !13
  %138 = sext i8 %137 to i32
  %139 = sext i32 %120 to i64
  %140 = icmp ugt i64 %139, %134
  br i1 %140, label %141, label %146

; <label>:141                                     ; preds = %119
  %142 = udiv i64 %133, %134
  %143 = getelementptr inbounds [89 x i8]* @mapper, i64 0, i64 %142
  %144 = load i8* %143, align 1, !tbaa !13
  %145 = sext i8 %144 to i32
  br label %146

; <label>:146                                     ; preds = %119, %141
  %147 = phi i32 [ %145, %141 ], [ 32, %119 ]
  %148 = fmul float %126, 2.550000e+02
  %149 = fpext float %148 to double
  %150 = fadd double %149, 5.000000e-01
  %151 = fptosi double %150 to i32
  %152 = fmul float %129, 2.550000e+02
  %153 = fpext float %152 to double
  %154 = fadd double %153, 5.000000e-01
  %155 = fptosi double %154 to i32
  %156 = fmul float %132, 2.550000e+02
  %157 = fpext float %156 to double
  %158 = fadd double %157, 5.000000e-01
  %159 = fptosi double %158 to i32
  %160 = sitofp i32 %122 to float
  %161 = fmul float %160, %mid
  %162 = fmul float %123, %hi
  %163 = fadd float %162, %161
  %164 = sub nsw i32 %120, %43
  %165 = sitofp i32 %164 to float
  %166 = fdiv float %163, %165
  %167 = fpext float %166 to double
  %168 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %out, i8* getelementptr inbounds ([39 x i8]* @.str67, i64 0, i64 0), i32 %138, i32 %147, i32 %151, i32 %155, i32 %159, double %167) #10
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %169 = load i32* %nlevels, align 4, !tbaa !15
  %170 = sext i32 %169 to i64
  %171 = icmp sgt i64 %170, %indvars.iv.next
  br i1 %171, label %119, label %._crit_edge

._crit_edge:                                      ; preds = %146, %.preheader
  ret void
}
