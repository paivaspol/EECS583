define void @write_xpm_map(%struct.__sFILE* nocapture %out, i32 %n_x, i32 %n_y, i32* nocapture %nlevels, float %lo, float %hi, <2 x float> %rlo.coerce0, float %rlo.coerce1, <2 x float> %rhi.coerce0, float %rhi.coerce1) #3 {
  %1 = load i32* %nlevels, align 4, !tbaa !15
  %2 = sext i32 %1 to i64
  %3 = tail call i64 @strlen(i8* getelementptr inbounds ([89 x i8]* @mapper, i64 0, i64 0)) #10
  %4 = mul i64 %3, %3
  %5 = icmp ugt i64 %2, %4
  br i1 %5, label %6, label %13

; <label>:6                                       ; preds = %0
  %7 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !14
  %8 = trunc i64 %4 to i32
  %9 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %7, i8* getelementptr inbounds ([56 x i8]* @.str62, i64 0, i64 0), i32 %1, i32 %8) #10
  %10 = tail call i64 @strlen(i8* getelementptr inbounds ([89 x i8]* @mapper, i64 0, i64 0)) #10
  %11 = mul i64 %10, %10
  %12 = trunc i64 %11 to i32
  store i32 %12, i32* %nlevels, align 4, !tbaa !15
  br label %18

; <label>:13                                      ; preds = %0
  %14 = icmp slt i32 %1, 2
  br i1 %14, label %15, label %18

; <label>:15                                      ; preds = %13
  %16 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !14
  %17 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %16, i8* getelementptr inbounds ([57 x i8]* @.str63, i64 0, i64 0), i32 %1) #10
  store i32 2, i32* %nlevels, align 4, !tbaa !15
  br label %18

; <label>:18                                      ; preds = %13, %15, %6
  %19 = tail call i64 @fwrite(i8* getelementptr inbounds ([32 x i8]* @.str65, i64 0, i64 0), i64 31, i64 1, %struct.__sFILE* %out)
  %20 = load i32* %nlevels, align 4, !tbaa !15
  %21 = sext i32 %20 to i64
  %22 = tail call i64 @strlen(i8* getelementptr inbounds ([89 x i8]* @mapper, i64 0, i64 0)) #10
  %23 = icmp ule i64 %21, %22
  %24 = select i1 %23, i32 1, i32 2
  %25 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %out, i8* getelementptr inbounds ([18 x i8]* @.str66, i64 0, i64 0), i32 %n_x, i32 %n_y, i32 %20, i32 %24) #10
  %26 = load i32* %nlevels, align 4, !tbaa !15
  %27 = add nsw i32 %26, -1
  %28 = sitofp i32 %27 to double
  %29 = fdiv double 1.000000e+00, %28
  %30 = fptrunc double %29 to float
  %31 = icmp sgt i32 %26, 0
  br i1 %31, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %18
  %32 = extractelement <2 x float> %rlo.coerce0, i32 0
  %33 = extractelement <2 x float> %rhi.coerce0, i32 0
  %34 = extractelement <2 x float> %rlo.coerce0, i32 1
  %35 = extractelement <2 x float> %rhi.coerce0, i32 1
  br label %36

; <label>:36                                      ; preds = %.lr.ph, %67
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %67 ]
  %37 = phi i32 [ %26, %.lr.ph ], [ %87, %67 ]
  %38 = trunc i64 %indvars.iv to i32
  %39 = xor i32 %38, -1
  %40 = add i32 %37, %39
  %41 = sitofp i32 %40 to float
  %42 = fmul float %32, %41
  %43 = sitofp i32 %38 to float
  %44 = fmul float %33, %43
  %45 = fadd float %44, %42
  %46 = fmul float %30, %45
  %47 = fmul float %34, %41
  %48 = fmul float %35, %43
  %49 = fadd float %48, %47
  %50 = fmul float %30, %49
  %51 = fmul float %41, %rlo.coerce1
  %52 = fmul float %43, %rhi.coerce1
  %53 = fadd float %52, %51
  %54 = fmul float %30, %53
  %55 = tail call i64 @strlen(i8* getelementptr inbounds ([89 x i8]* @mapper, i64 0, i64 0)) #10
  %56 = urem i64 %indvars.iv, %55
  %57 = getelementptr inbounds [89 x i8]* @mapper, i64 0, i64 %56
  %58 = load i8* %57, align 1, !tbaa !13
  %59 = sext i8 %58 to i32
  %60 = sext i32 %37 to i64
  %61 = icmp ugt i64 %60, %55
  br i1 %61, label %62, label %67

; <label>:62                                      ; preds = %36
  %63 = udiv i64 %indvars.iv, %55
  %64 = getelementptr inbounds [89 x i8]* @mapper, i64 0, i64 %63
  %65 = load i8* %64, align 1, !tbaa !13
  %66 = sext i8 %65 to i32
  br label %67

; <label>:67                                      ; preds = %36, %62
  %68 = phi i32 [ %66, %62 ], [ 32, %36 ]
  %69 = fmul float %46, 2.550000e+02
  %70 = fpext float %69 to double
  %71 = fadd double %70, 5.000000e-01
  %72 = fptosi double %71 to i32
  %73 = fmul float %50, 2.550000e+02
  %74 = fpext float %73 to double
  %75 = fadd double %74, 5.000000e-01
  %76 = fptosi double %75 to i32
  %77 = fmul float %54, 2.550000e+02
  %78 = fpext float %77 to double
  %79 = fadd double %78, 5.000000e-01
  %80 = fptosi double %79 to i32
  %81 = fmul float %41, %lo
  %82 = fmul float %43, %hi
  %83 = fadd float %82, %81
  %84 = fmul float %30, %83
  %85 = fpext float %84 to double
  %86 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %out, i8* getelementptr inbounds ([39 x i8]* @.str67, i64 0, i64 0), i32 %59, i32 %68, i32 %72, i32 %76, i32 %80, double %85) #10
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %87 = load i32* %nlevels, align 4, !tbaa !15
  %88 = sext i32 %87 to i64
  %89 = icmp slt i64 %indvars.iv.next, %88
  br i1 %89, label %36, label %._crit_edge

._crit_edge:                                      ; preds = %67, %18
  ret void
}
