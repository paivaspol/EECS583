define void @write_xpm_map(%struct.__sFILE* nocapture %out, i32 %n_x, i32 %n_y, i32* nocapture %nlevels, float %lo, float %hi, <2 x float> %rlo.coerce0, float %rlo.coerce1, <2 x float> %rhi.coerce0, float %rhi.coerce1) #4 {
  tail call void @llvm.dbg.value(metadata <2 x float> %rlo.coerce0, i64 0, metadata !346, metadata !699), !dbg !1478
  tail call void @llvm.dbg.value(metadata float %rlo.coerce1, i64 0, metadata !346, metadata !701), !dbg !1478
  tail call void @llvm.dbg.value(metadata <2 x float> %rhi.coerce0, i64 0, metadata !347, metadata !699), !dbg !1479
  tail call void @llvm.dbg.value(metadata float %rhi.coerce1, i64 0, metadata !347, metadata !701), !dbg !1479
  tail call void @llvm.dbg.value(metadata %struct.__sFILE* %out, i64 0, metadata !340, metadata !477), !dbg !1480
  tail call void @llvm.dbg.value(metadata i32 %n_x, i64 0, metadata !341, metadata !477), !dbg !1481
  tail call void @llvm.dbg.value(metadata i32 %n_y, i64 0, metadata !342, metadata !477), !dbg !1482
  tail call void @llvm.dbg.value(metadata i32* %nlevels, i64 0, metadata !343, metadata !477), !dbg !1483
  tail call void @llvm.dbg.value(metadata float %lo, i64 0, metadata !344, metadata !477), !dbg !1484
  tail call void @llvm.dbg.value(metadata float %hi, i64 0, metadata !345, metadata !477), !dbg !1485
  tail call void @llvm.dbg.declare(metadata %struct.t_rgb* undef, metadata !346, metadata !477), !dbg !1478
  tail call void @llvm.dbg.declare(metadata %struct.t_rgb* undef, metadata !347, metadata !477), !dbg !1479
  %1 = load i32* %nlevels, align 4, !dbg !1486, !tbaa !610
  %2 = sext i32 %1 to i64, !dbg !1486
  %3 = tail call i64 @strlen(i8* getelementptr inbounds ([89 x i8]* @mapper, i64 0, i64 0)) #10, !dbg !1488
  %4 = mul i64 %3, %3, !dbg !1489
  %5 = icmp ugt i64 %2, %4, !dbg !1490
  br i1 %5, label %6, label %13, !dbg !1491

; <label>:6                                       ; preds = %0
  %7 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1492, !tbaa !525
  %8 = trunc i64 %4 to i32, !dbg !1494
  %9 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %7, i8* getelementptr inbounds ([56 x i8]* @.str62, i64 0, i64 0), i32 %1, i32 %8) #10, !dbg !1495
  %10 = tail call i64 @strlen(i8* getelementptr inbounds ([89 x i8]* @mapper, i64 0, i64 0)) #10, !dbg !1496
  %11 = mul i64 %10, %10, !dbg !1497
  %12 = trunc i64 %11 to i32, !dbg !1496
  store i32 %12, i32* %nlevels, align 4, !dbg !1498, !tbaa !610
  br label %18, !dbg !1499

; <label>:13                                      ; preds = %0
  %14 = icmp slt i32 %1, 2, !dbg !1500
  br i1 %14, label %15, label %18, !dbg !1502

; <label>:15                                      ; preds = %13
  %16 = load %struct.__sFILE** @__stderrp, align 8, !dbg !1503, !tbaa !525
  %17 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %16, i8* getelementptr inbounds ([57 x i8]* @.str63, i64 0, i64 0), i32 %1) #10, !dbg !1505
  store i32 2, i32* %nlevels, align 4, !dbg !1506, !tbaa !610
  br label %18, !dbg !1507

; <label>:18                                      ; preds = %13, %15, %6
  %19 = tail call i64 @fwrite(i8* getelementptr inbounds ([32 x i8]* @.str65, i64 0, i64 0), i64 31, i64 1, %struct.__sFILE* %out), !dbg !1508
  %20 = load i32* %nlevels, align 4, !dbg !1509, !tbaa !610
  %21 = sext i32 %20 to i64, !dbg !1510
  %22 = tail call i64 @strlen(i8* getelementptr inbounds ([89 x i8]* @mapper, i64 0, i64 0)) #10, !dbg !1511
  %23 = icmp ule i64 %21, %22, !dbg !1512
  %24 = select i1 %23, i32 1, i32 2, !dbg !1513
  %25 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %out, i8* getelementptr inbounds ([18 x i8]* @.str66, i64 0, i64 0), i32 %n_x, i32 %n_y, i32 %20, i32 %24) #10, !dbg !1514
  %26 = load i32* %nlevels, align 4, !dbg !1515, !tbaa !610
  %27 = add nsw i32 %26, -1, !dbg !1516
  %28 = sitofp i32 %27 to double, !dbg !1517
  %29 = fdiv double 1.000000e+00, %28, !dbg !1518
  %30 = fptrunc double %29 to float, !dbg !1519
  tail call void @llvm.dbg.value(metadata float %30, i64 0, metadata !350, metadata !477), !dbg !1520
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !348, metadata !477), !dbg !1521
  %31 = icmp sgt i32 %26, 0, !dbg !1522
  br i1 %31, label %.lr.ph, label %._crit_edge, !dbg !1525

.lr.ph:                                           ; preds = %18
  %32 = extractelement <2 x float> %rlo.coerce0, i32 0, !dbg !1526
  %33 = extractelement <2 x float> %rhi.coerce0, i32 0, !dbg !1528
  %34 = extractelement <2 x float> %rlo.coerce0, i32 1, !dbg !1529
  %35 = extractelement <2 x float> %rhi.coerce0, i32 1, !dbg !1530
  br label %36, !dbg !1525

; <label>:36                                      ; preds = %.lr.ph, %67
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %67 ]
  %37 = phi i32 [ %26, %.lr.ph ], [ %87, %67 ]
  %38 = trunc i64 %indvars.iv to i32, !dbg !1531
  %39 = xor i32 %38, -1, !dbg !1531
  %40 = add i32 %37, %39, !dbg !1532
  tail call void @llvm.dbg.value(metadata i32 %40, i64 0, metadata !349, metadata !477), !dbg !1533
  %41 = sitofp i32 %40 to float, !dbg !1534
  %42 = fmul float %32, %41, !dbg !1535
  %43 = sitofp i32 %38 to float, !dbg !1536
  %44 = fmul float %33, %43, !dbg !1537
  %45 = fadd float %44, %42, !dbg !1538
  %46 = fmul float %30, %45, !dbg !1539
  tail call void @llvm.dbg.value(metadata float %46, i64 0, metadata !351, metadata !477), !dbg !1540
  %47 = fmul float %34, %41, !dbg !1541
  %48 = fmul float %35, %43, !dbg !1542
  %49 = fadd float %48, %47, !dbg !1543
  %50 = fmul float %30, %49, !dbg !1544
  tail call void @llvm.dbg.value(metadata float %50, i64 0, metadata !352, metadata !477), !dbg !1545
  %51 = fmul float %41, %rlo.coerce1, !dbg !1546
  %52 = fmul float %43, %rhi.coerce1, !dbg !1547
  %53 = fadd float %52, %51, !dbg !1548
  %54 = fmul float %30, %53, !dbg !1549
  tail call void @llvm.dbg.value(metadata float %54, i64 0, metadata !353, metadata !477), !dbg !1550
  %55 = tail call i64 @strlen(i8* getelementptr inbounds ([89 x i8]* @mapper, i64 0, i64 0)) #10, !dbg !1551
  %56 = urem i64 %indvars.iv, %55, !dbg !1552
  %57 = getelementptr inbounds [89 x i8]* @mapper, i64 0, i64 %56, !dbg !1553
  %58 = load i8* %57, align 1, !dbg !1553, !tbaa !505
  %59 = sext i8 %58 to i32, !dbg !1553
  %60 = sext i32 %37 to i64, !dbg !1554
  %61 = icmp ugt i64 %60, %55, !dbg !1555
  br i1 %61, label %62, label %67, !dbg !1556

; <label>:62                                      ; preds = %36
  %63 = udiv i64 %indvars.iv, %55, !dbg !1557
  %64 = getelementptr inbounds [89 x i8]* @mapper, i64 0, i64 %63, !dbg !1558
  %65 = load i8* %64, align 1, !dbg !1558, !tbaa !505
  %66 = sext i8 %65 to i32, !dbg !1558
  br label %67, !dbg !1556

; <label>:67                                      ; preds = %36, %62
  %68 = phi i32 [ %66, %62 ], [ 32, %36 ], !dbg !1556
  %69 = fmul float %46, 2.550000e+02, !dbg !1559
  %70 = fpext float %69 to double, !dbg !1559
  %71 = fadd double %70, 5.000000e-01, !dbg !1559
  %72 = fptosi double %71 to i32, !dbg !1559
  %73 = fmul float %50, 2.550000e+02, !dbg !1560
  %74 = fpext float %73 to double, !dbg !1560
  %75 = fadd double %74, 5.000000e-01, !dbg !1560
  %76 = fptosi double %75 to i32, !dbg !1560
  %77 = fmul float %54, 2.550000e+02, !dbg !1561
  %78 = fpext float %77 to double, !dbg !1561
  %79 = fadd double %78, 5.000000e-01, !dbg !1561
  %80 = fptosi double %79 to i32, !dbg !1561
  %81 = fmul float %41, %lo, !dbg !1562
  %82 = fmul float %43, %hi, !dbg !1563
  %83 = fadd float %82, %81, !dbg !1564
  %84 = fmul float %30, %83, !dbg !1565
  %85 = fpext float %84 to double, !dbg !1566
  %86 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %out, i8* getelementptr inbounds ([39 x i8]* @.str67, i64 0, i64 0), i32 %59, i32 %68, i32 %72, i32 %76, i32 %80, double %85) #10, !dbg !1567
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1525
  %87 = load i32* %nlevels, align 4, !dbg !1568, !tbaa !610
  %88 = sext i32 %87 to i64, !dbg !1522
  %89 = icmp slt i64 %indvars.iv.next, %88, !dbg !1522
  br i1 %89, label %36, label %._crit_edge, !dbg !1525

._crit_edge:                                      ; preds = %67, %18
  ret void, !dbg !1569
}
