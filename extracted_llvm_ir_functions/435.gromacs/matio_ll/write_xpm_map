define void @write_xpm_map(%struct._IO_FILE* nocapture %out, i32 %n_x, i32 %n_y, i32* nocapture %nlevels, float %lo, float %hi, <2 x float> %rlo.coerce0, float %rlo.coerce1, <2 x float> %rhi.coerce0, float %rhi.coerce1) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct._IO_FILE* %out}, i64 0, metadata !338), !dbg !874
  tail call void @llvm.dbg.value(metadata !{i32 %n_x}, i64 0, metadata !339), !dbg !874
  tail call void @llvm.dbg.value(metadata !{i32 %n_y}, i64 0, metadata !340), !dbg !874
  tail call void @llvm.dbg.value(metadata !{i32* %nlevels}, i64 0, metadata !341), !dbg !874
  tail call void @llvm.dbg.value(metadata !{float %lo}, i64 0, metadata !342), !dbg !874
  tail call void @llvm.dbg.value(metadata !{float %hi}, i64 0, metadata !343), !dbg !874
  tail call void @llvm.dbg.declare(metadata !543, metadata !344), !dbg !875
  tail call void @llvm.dbg.declare(metadata !543, metadata !345), !dbg !875
  %0 = load i32* %nlevels, align 4, !dbg !876, !tbaa !507
  %conv = sext i32 %0 to i64, !dbg !876
  %call = tail call i64 @strlen(i8* getelementptr inbounds ([89 x i8]* @mapper, i64 0, i64 0)) #11, !dbg !876
  %mul = mul i64 %call, %call, !dbg !876
  %cmp = icmp ugt i64 %conv, %mul, !dbg !876
  br i1 %cmp, label %if.then, label %if.else, !dbg !876

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @stderr, align 8, !dbg !877, !tbaa !463
  %conv7 = trunc i64 %mul to i32, !dbg !879
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([56 x i8]* @.str62, i64 0, i64 0), i32 %0, i32 %conv7) #9, !dbg !879
  %call9 = tail call i64 @strlen(i8* getelementptr inbounds ([89 x i8]* @mapper, i64 0, i64 0)) #11, !dbg !880
  %mul11 = mul i64 %call9, %call9, !dbg !880
  %conv12 = trunc i64 %mul11 to i32, !dbg !880
  store i32 %conv12, i32* %nlevels, align 4, !dbg !880, !tbaa !507
  br label %if.end17, !dbg !881

if.else:                                          ; preds = %entry
  %cmp13 = icmp slt i32 %0, 2, !dbg !882
  br i1 %cmp13, label %if.then15, label %if.end17, !dbg !882

if.then15:                                        ; preds = %if.else
  %2 = load %struct._IO_FILE** @stderr, align 8, !dbg !883, !tbaa !463
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([57 x i8]* @.str63, i64 0, i64 0), i32 %0) #9, !dbg !883
  store i32 2, i32* %nlevels, align 4, !dbg !885, !tbaa !507
  br label %if.end17, !dbg !886

if.end17:                                         ; preds = %if.else, %if.then15, %if.then
  %3 = tail call i64 @fwrite(i8* getelementptr inbounds ([32 x i8]* @.str65, i64 0, i64 0), i64 31, i64 1, %struct._IO_FILE* %out), !dbg !887
  %4 = load i32* %nlevels, align 4, !dbg !888, !tbaa !507
  %conv19 = sext i32 %4 to i64, !dbg !888
  %call20 = tail call i64 @strlen(i8* getelementptr inbounds ([89 x i8]* @mapper, i64 0, i64 0)) #11, !dbg !889
  %cmp21 = icmp ule i64 %conv19, %call20, !dbg !889
  %cond = select i1 %cmp21, i32 1, i32 2, !dbg !889
  %call23 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([18 x i8]* @.str66, i64 0, i64 0), i32 %n_x, i32 %n_y, i32 %4, i32 %cond) #9, !dbg !889
  %5 = load i32* %nlevels, align 4, !dbg !890, !tbaa !507
  %sub = add nsw i32 %5, -1, !dbg !890
  %conv24 = sitofp i32 %sub to double, !dbg !890
  %div = fdiv double 1.000000e+00, %conv24, !dbg !890
  %conv25 = fptrunc double %div to float, !dbg !890
  tail call void @llvm.dbg.value(metadata !{float %conv25}, i64 0, metadata !348), !dbg !890
  tail call void @llvm.dbg.value(metadata !18, i64 0, metadata !346), !dbg !891
  %cmp26117 = icmp sgt i32 %5, 0, !dbg !891
  br i1 %cmp26117, label %for.body.lr.ph, label %for.end, !dbg !891

for.body.lr.ph:                                   ; preds = %if.end17
  %rlo.sroa.0.0.vec.extract = extractelement <2 x float> %rlo.coerce0, i32 0, !dbg !893
  %rhi.sroa.0.0.vec.extract = extractelement <2 x float> %rhi.coerce0, i32 0, !dbg !893
  %rlo.sroa.0.4.vec.extract = extractelement <2 x float> %rlo.coerce0, i32 1, !dbg !895
  %rhi.sroa.0.4.vec.extract = extractelement <2 x float> %rhi.coerce0, i32 1, !dbg !895
  br label %for.body, !dbg !891

for.body:                                         ; preds = %for.body.lr.ph, %cond.end
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %cond.end ]
  %6 = phi i32 [ %5, %for.body.lr.ph ], [ %10, %cond.end ]
  %7 = trunc i64 %indvars.iv to i32, !dbg !896
  %sub28 = xor i32 %7, -1, !dbg !896
  %sub29 = add i32 %6, %sub28, !dbg !896
  tail call void @llvm.dbg.value(metadata !{i32 %sub29}, i64 0, metadata !347), !dbg !896
  %conv30 = sitofp i32 %sub29 to float, !dbg !893
  %mul32 = fmul float %rlo.sroa.0.0.vec.extract, %conv30, !dbg !893
  %conv33 = sitofp i32 %7 to float, !dbg !893
  %mul35 = fmul float %rhi.sroa.0.0.vec.extract, %conv33, !dbg !893
  %add = fadd float %mul35, %mul32, !dbg !893
  %mul36 = fmul float %conv25, %add, !dbg !893
  tail call void @llvm.dbg.value(metadata !{float %mul36}, i64 0, metadata !349), !dbg !893
  %mul39 = fmul float %rlo.sroa.0.4.vec.extract, %conv30, !dbg !895
  %mul42 = fmul float %rhi.sroa.0.4.vec.extract, %conv33, !dbg !895
  %add43 = fadd float %mul42, %mul39, !dbg !895
  %mul44 = fmul float %conv25, %add43, !dbg !895
  tail call void @llvm.dbg.value(metadata !{float %mul44}, i64 0, metadata !350), !dbg !895
  %mul47 = fmul float %conv30, %rlo.coerce1, !dbg !897
  %mul50 = fmul float %conv33, %rhi.coerce1, !dbg !897
  %add51 = fadd float %mul50, %mul47, !dbg !897
  %mul52 = fmul float %conv25, %add51, !dbg !897
  tail call void @llvm.dbg.value(metadata !{float %mul52}, i64 0, metadata !351), !dbg !897
  %call54 = tail call i64 @strlen(i8* getelementptr inbounds ([89 x i8]* @mapper, i64 0, i64 0)) #11, !dbg !898
  %rem = urem i64 %indvars.iv, %call54, !dbg !898
  %arrayidx = getelementptr inbounds [89 x i8]* @mapper, i64 0, i64 %rem, !dbg !898
  %8 = load i8* %arrayidx, align 1, !dbg !898, !tbaa !464
  %conv55 = sext i8 %8 to i32, !dbg !898
  %conv56 = sext i32 %6 to i64, !dbg !898
  %cmp58 = icmp ugt i64 %conv56, %call54, !dbg !898
  br i1 %cmp58, label %cond.false, label %cond.end, !dbg !898

cond.false:                                       ; preds = %for.body
  %div62 = udiv i64 %indvars.iv, %call54, !dbg !898
  %arrayidx63 = getelementptr inbounds [89 x i8]* @mapper, i64 0, i64 %div62, !dbg !898
  %9 = load i8* %arrayidx63, align 1, !dbg !898, !tbaa !464
  %conv64 = sext i8 %9 to i32, !dbg !898
  br label %cond.end, !dbg !898

cond.end:                                         ; preds = %for.body, %cond.false
  %cond65 = phi i32 [ %conv64, %cond.false ], [ 32, %for.body ], !dbg !898
  %mul66 = fmul float %mul36, 2.550000e+02, !dbg !898
  %conv67 = fpext float %mul66 to double, !dbg !898
  %add68 = fadd double %conv67, 5.000000e-01, !dbg !898
  %conv69 = fptosi double %add68 to i32, !dbg !898
  %mul70 = fmul float %mul44, 2.550000e+02, !dbg !898
  %conv71 = fpext float %mul70 to double, !dbg !898
  %add72 = fadd double %conv71, 5.000000e-01, !dbg !898
  %conv73 = fptosi double %add72 to i32, !dbg !898
  %mul74 = fmul float %mul52, 2.550000e+02, !dbg !898
  %conv75 = fpext float %mul74 to double, !dbg !898
  %add76 = fadd double %conv75, 5.000000e-01, !dbg !898
  %conv77 = fptosi double %add76 to i32, !dbg !898
  %mul79 = fmul float %conv30, %lo, !dbg !898
  %mul81 = fmul float %conv33, %hi, !dbg !898
  %add82 = fadd float %mul81, %mul79, !dbg !898
  %mul83 = fmul float %conv25, %add82, !dbg !898
  %conv84 = fpext float %mul83 to double, !dbg !898
  %call85 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %out, i8* getelementptr inbounds ([39 x i8]* @.str67, i64 0, i64 0), i32 %conv55, i32 %cond65, i32 %conv69, i32 %conv73, i32 %conv77, double %conv84) #9, !dbg !898
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !891
  %10 = load i32* %nlevels, align 4, !dbg !891, !tbaa !507
  %11 = trunc i64 %indvars.iv.next to i32, !dbg !891
  %cmp26 = icmp slt i32 %11, %10, !dbg !891
  br i1 %cmp26, label %for.body, label %for.end, !dbg !891

for.end:                                          ; preds = %cond.end, %if.end17
  ret void, !dbg !899
}
