define void @write_xpm_data3(%struct.__sFILE* nocapture %out, i32 %n_x, i32 %n_y, float** nocapture readonly %matrix, float %lo, float %mid, float %hi, i32 %nlevels) #3 {
  %1 = fsub float %mid, %lo
  %2 = fsub float %hi, %lo
  %3 = fdiv float %1, %2
  %4 = add nsw i32 %nlevels, -1
  %5 = sitofp i32 %4 to float
  %6 = fmul float %5, %3
  %7 = fcmp olt float %6, 1.000000e+00
  %8 = select i1 %7, float 1.000000e+00, float %6
  %.not.i = fcmp uge float %8, %5
  %brmerge.i = or i1 %7, %.not.i
  %.mux.i = select i1 %.not.i, float %5, float 1.000000e+00
  %9 = select i1 %brmerge.i, float %.mux.i, float %6
  %10 = fptosi float %9 to i32
  %11 = sub nsw i32 %nlevels, %10
  %12 = sitofp i32 %11 to float
  %13 = fsub float %hi, %mid
  %14 = fdiv float %12, %13
  %15 = sitofp i32 %10 to float
  %16 = fdiv float %15, %1
  %17 = icmp sgt i32 %n_y, 0
  br i1 %17, label %.lr.ph9, label %._crit_edge10

.lr.ph9:                                          ; preds = %0
  %18 = sdiv i32 %n_y, 100
  %19 = add nsw i32 %18, 1
  %20 = icmp sgt i32 %n_x, 0
  %21 = sext i32 %nlevels to i64
  %22 = add i32 %n_x, -1
  %23 = sext i32 %n_y to i64
  br label %24

; <label>:24                                      ; preds = %.lr.ph9, %.backedge
  %indvars.iv11 = phi i64 [ %23, %.lr.ph9 ], [ %indvars.iv.next12, %.backedge ]
  %j.07.in = phi i32 [ %n_y, %.lr.ph9 ], [ %j.07, %.backedge ]
  %c.05 = phi i32 [ 0, %.lr.ph9 ], [ %c.1.lcssa, %.backedge ]
  %indvars.iv.next12 = add nsw i64 %indvars.iv11, -1
  %j.07 = add nsw i32 %j.07.in, -1
  %25 = trunc i64 %indvars.iv.next12 to i32
  %26 = srem i32 %25, %19
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %35

; <label>:28                                      ; preds = %24
  %29 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !14
  %30 = sub nsw i64 %23, %indvars.iv.next12
  %31 = mul nsw i64 %30, 100
  %32 = trunc i64 %31 to i32
  %33 = sdiv i32 %32, %n_y
  %34 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %29, i8* getelementptr inbounds ([10 x i8]* @.str42, i64 0, i64 0), i32 %33) #10
  br label %35

; <label>:35                                      ; preds = %28, %24
  %fputc1 = tail call i32 @fputc(i32 34, %struct.__sFILE* %out)
  br i1 %20, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %35, %80
  %indvars.iv = phi i64 [ %indvars.iv.next, %80 ], [ 0, %35 ]
  %c.12 = phi i32 [ %c.4, %80 ], [ %c.05, %35 ]
  %36 = sitofp i32 %c.12 to float
  %37 = fcmp ult float %36, %mid
  br i1 %37, label %48, label %38

; <label>:38                                      ; preds = %.lr.ph
  %39 = getelementptr inbounds float** %matrix, i64 %indvars.iv
  %40 = load float** %39, align 8, !tbaa !14
  %41 = getelementptr inbounds float* %40, i64 %indvars.iv.next12
  %42 = load float* %41, align 4, !tbaa !35
  %43 = fsub float %42, %mid
  %44 = fmul float %14, %43
  %45 = fpext float %44 to double
  %46 = fadd double %45, 5.000000e-01
  %47 = fptosi double %46 to i32
  br label %60

; <label>:48                                      ; preds = %.lr.ph
  %49 = fcmp ult float %36, %lo
  br i1 %49, label %60, label %50

; <label>:50                                      ; preds = %48
  %51 = getelementptr inbounds float** %matrix, i64 %indvars.iv
  %52 = load float** %51, align 8, !tbaa !14
  %53 = getelementptr inbounds float* %52, i64 %indvars.iv.next12
  %54 = load float* %53, align 4, !tbaa !35
  %55 = fsub float %54, %lo
  %56 = fmul float %16, %55
  %57 = fpext float %56 to double
  %58 = fadd double %57, 5.000000e-01
  %59 = fptosi double %58 to i32
  br label %60

; <label>:60                                      ; preds = %48, %50, %38
  %c.2 = phi i32 [ %47, %38 ], [ %59, %50 ], [ %c.12, %48 ]
  %61 = icmp slt i32 %c.2, 0
  %.c.2 = select i1 %61, i32 0, i32 %c.2
  %62 = icmp slt i32 %.c.2, %nlevels
  %c.4 = select i1 %62, i32 %.c.2, i32 %4
  %63 = tail call i64 @strlen(i8* getelementptr inbounds ([89 x i8]* @mapper, i64 0, i64 0)) #10
  %64 = icmp ugt i64 %21, %63
  %65 = sext i32 %c.4 to i64
  br i1 %64, label %70, label %66

; <label>:66                                      ; preds = %60
  %67 = getelementptr inbounds [89 x i8]* @mapper, i64 0, i64 %65
  %68 = load i8* %67, align 1, !tbaa !13
  %69 = sext i8 %68 to i32
  %fputc = tail call i32 @fputc(i32 %69, %struct.__sFILE* %out)
  br label %80

; <label>:70                                      ; preds = %60
  %71 = urem i64 %65, %63
  %72 = getelementptr inbounds [89 x i8]* @mapper, i64 0, i64 %71
  %73 = load i8* %72, align 1, !tbaa !13
  %74 = sext i8 %73 to i32
  %75 = udiv i64 %65, %63
  %76 = getelementptr inbounds [89 x i8]* @mapper, i64 0, i64 %75
  %77 = load i8* %76, align 1, !tbaa !13
  %78 = sext i8 %77 to i32
  %79 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %out, i8* getelementptr inbounds ([5 x i8]* @.str73, i64 0, i64 0), i32 %74, i32 %78) #10
  br label %80

; <label>:80                                      ; preds = %66, %70
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %22
  br i1 %exitcond, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %80, %35
  %c.1.lcssa = phi i32 [ %c.05, %35 ], [ %c.4, %80 ]
  %81 = icmp sgt i32 %j.07.in, 1
  br i1 %81, label %82, label %85

; <label>:82                                      ; preds = %._crit_edge
  %83 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8]* @.str74, i64 0, i64 0), i64 3, i64 1, %struct.__sFILE* %out)
  br label %.backedge

.backedge:                                        ; preds = %82, %85
  %84 = icmp sgt i64 %indvars.iv11, 1
  br i1 %84, label %24, label %._crit_edge10

; <label>:85                                      ; preds = %._crit_edge
  %86 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str75, i64 0, i64 0), i64 2, i64 1, %struct.__sFILE* %out)
  br label %.backedge

._crit_edge10:                                    ; preds = %.backedge, %0
  ret void
}
