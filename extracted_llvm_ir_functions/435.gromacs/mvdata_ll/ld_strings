define internal fastcc i32 @ld_strings(i32 %src, %struct.t_symtab* %symtab, i8**** nocapture %nm) #4 {
  %nr = alloca i32, align 4
  %1 = bitcast i32* %nr to i8*
  call void @_blockrx(i32 %src, i32 1, i32 4, i8* %1) #7
  %2 = load i32* %nr, align 4, !tbaa !36
  %3 = call i8* @save_calloc(i8* getelementptr inbounds ([7 x i8]* @.str23, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8]* @.str8, i64 0, i64 0), i32 76, i32 %2, i32 4) #7
  %4 = bitcast i8* %3 to i32*
  %5 = load i32* %nr, align 4, !tbaa !36
  %6 = shl i32 %5, 2
  call void @_blockrx(i32 %src, i32 1, i32 %6, i8* %3) #7
  %7 = load i32* %nr, align 4, !tbaa !36
  %8 = call i8* @save_calloc(i8* getelementptr inbounds ([4 x i8]* @.str24, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8]* @.str8, i64 0, i64 0), i32 79, i32 %7, i32 8) #7
  %9 = bitcast i8* %8 to i8***
  %10 = bitcast i8**** %nm to i8**
  store i8* %8, i8** %10, align 8, !tbaa !29
  %11 = load i32* %nr, align 4, !tbaa !36
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %0, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %0 ]
  %13 = getelementptr inbounds i32* %4, i64 %indvars.iv
  %14 = load i32* %13, align 4, !tbaa !36
  %15 = call i8** @get_symtab_handle(%struct.t_symtab* %symtab, i32 %14) #7
  %16 = getelementptr inbounds i8*** %9, i64 %indvars.iv
  store i8** %15, i8*** %16, align 8, !tbaa !29
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %17 = load i32* %nr, align 4, !tbaa !36
  %18 = sext i32 %17 to i64
  %19 = icmp slt i64 %indvars.iv.next, %18
  br i1 %19, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph, %0
  call void @save_free(i8* getelementptr inbounds ([7 x i8]* @.str23, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8]* @.str8, i64 0, i64 0), i32 83, i8* %3) #7
  %20 = load i32* %nr, align 4, !tbaa !36
  ret i32 %20
}
