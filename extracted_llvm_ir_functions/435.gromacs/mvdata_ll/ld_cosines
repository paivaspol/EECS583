define internal fastcc void @ld_cosines(i32 %src, %struct.t_cosines* %cs) #0 {
entry:
  %n = getelementptr inbounds %struct.t_cosines* %cs, i64 0, i32 0
  %0 = bitcast %struct.t_cosines* %cs to i8*
  tail call void @_blockrx(i32 %src, i32 1, i32 4, i8* %0) #4
  %1 = load i32* %n, align 4, !tbaa !0
  %call = tail call i8* @save_calloc(i8* getelementptr inbounds ([6 x i8]* @.str21, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str8, i64 0, i64 0), i32 189, i32 %1, i32 4) #4
  %2 = bitcast i8* %call to float*
  %a = getelementptr inbounds %struct.t_cosines* %cs, i64 0, i32 1
  store float* %2, float** %a, align 8, !tbaa !3
  %3 = load i32* %n, align 4, !tbaa !0
  %call3 = tail call i8* @save_calloc(i8* getelementptr inbounds ([8 x i8]* @.str22, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str8, i64 0, i64 0), i32 190, i32 %3, i32 4) #4
  %4 = bitcast i8* %call3 to float*
  %phi = getelementptr inbounds %struct.t_cosines* %cs, i64 0, i32 2
  store float* %4, float** %phi, align 8, !tbaa !3
  %5 = load i32* %n, align 4, !tbaa !0
  %cmp = icmp sgt i32 %5, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %mul = shl i32 %5, 2
  %6 = load float** %a, align 8, !tbaa !3
  %7 = bitcast float* %6 to i8*
  tail call void @_blockrx(i32 %src, i32 1, i32 %mul, i8* %7) #4
  %8 = load i32* %n, align 4, !tbaa !0
  %mul10 = shl i32 %8, 2
  %9 = load float** %phi, align 8, !tbaa !3
  %10 = bitcast float* %9 to i8*
  tail call void @_blockrx(i32 %src, i32 1, i32 %mul10, i8* %10) #4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}
