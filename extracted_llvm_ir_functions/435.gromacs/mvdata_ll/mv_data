define void @mv_data(i32 %left, i32 %right, %struct.t_parm* %parm, %struct.t_nsborder* %nsb, %struct.t_topology* %top, [3 x float]* %x, [3 x float]* %v) #4 {
  %1 = alloca i32, align 4
  %nr.i = alloca i32, align 4
  %handle.i = alloca i32, align 4
  %len.i = alloca i32, align 4
  %2 = bitcast %struct.t_parm* %parm to i8*
  tail call void @_blocktx(i32 %right, i32 1, i32 776, i8* %2) #7
  %3 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80
  %4 = getelementptr inbounds %struct.t_grpopts* %3, i64 0, i32 0
  %5 = bitcast %struct.t_grpopts* %3 to i8*
  tail call void @_blocktx(i32 %right, i32 1, i32 4, i8* %5) #7
  %6 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 1
  %7 = bitcast i32* %6 to i8*
  tail call void @_blocktx(i32 %right, i32 1, i32 4, i8* %7) #7
  %8 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 2
  %9 = bitcast i32* %8 to i8*
  tail call void @_blocktx(i32 %right, i32 1, i32 4, i8* %9) #7
  %10 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 3
  %11 = bitcast i32* %10 to i8*
  tail call void @_blocktx(i32 %right, i32 1, i32 4, i8* %11) #7
  %12 = load i32* %4, align 4, !tbaa !18
  %13 = shl i32 %12, 2
  %14 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 4
  %15 = bitcast float** %14 to i8**
  %16 = load i8** %15, align 8, !tbaa !20
  tail call void @_blocktx(i32 %right, i32 1, i32 %13, i8* %16) #7
  %17 = load i32* %4, align 4, !tbaa !18
  %18 = shl i32 %17, 2
  %19 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 6
  %20 = bitcast float** %19 to i8**
  %21 = load i8** %20, align 8, !tbaa !21
  tail call void @_blocktx(i32 %right, i32 1, i32 %18, i8* %21) #7
  %22 = load i32* %4, align 4, !tbaa !18
  %23 = shl i32 %22, 2
  %24 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 5
  %25 = bitcast float** %24 to i8**
  %26 = load i8** %25, align 8, !tbaa !22
  tail call void @_blocktx(i32 %right, i32 1, i32 %23, i8* %26) #7
  %27 = load i32* %6, align 4, !tbaa !23
  %28 = mul i32 %27, 12
  %29 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 7
  %30 = bitcast [3 x float]** %29 to i8**
  %31 = load i8** %30, align 8, !tbaa !24
  tail call void @_blocktx(i32 %right, i32 1, i32 %28, i8* %31) #7
  %32 = load i32* %8, align 4, !tbaa !25
  %33 = mul i32 %32, 12
  %34 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 8
  %35 = bitcast [3 x i32]** %34 to i8**
  %36 = load i8** %35, align 8, !tbaa !26
  tail call void @_blocktx(i32 %right, i32 1, i32 %33, i8* %36) #7
  %37 = load i32* %10, align 4, !tbaa !27
  %38 = shl i32 %37, 2
  %39 = mul i32 %38, %37
  %40 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 9
  %41 = bitcast i32** %40 to i8**
  %42 = load i8** %41, align 8, !tbaa !28
  tail call void @_blocktx(i32 %right, i32 1, i32 %39, i8* %42) #7
  br label %43

; <label>:43                                      ; preds = %43, %0
  %indvars.iv.i = phi i64 [ 0, %0 ], [ %indvars.iv.next.i, %43 ]
  %44 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 81, i64 %indvars.iv.i
  tail call fastcc void @mv_cosines(i32 %right, %struct.t_cosines* %44) #7
  %45 = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 82, i64 %indvars.iv.i
  tail call fastcc void @mv_cosines(i32 %right, %struct.t_cosines* %45) #7
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 3
  br i1 %exitcond.i, label %mv_parm.exit, label %43

mv_parm.exit:                                     ; preds = %43
  %46 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 1
  %47 = bitcast i32* %46 to i8*
  tail call void @_blocktx(i32 %right, i32 1, i32 4, i8* %47) #7
  %48 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 5
  %49 = bitcast i32* %48 to i8*
  tail call void @_blocktx(i32 %right, i32 1, i32 4, i8* %49) #7
  %50 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 6
  %51 = bitcast i32* %50 to i8*
  tail call void @_blocktx(i32 %right, i32 1, i32 4, i8* %51) #7
  %52 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 4
  %53 = bitcast i32* %52 to i8*
  tail call void @_blocktx(i32 %right, i32 1, i32 4, i8* %53) #7
  %54 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 2
  %55 = bitcast i32* %54 to i8*
  tail call void @_blocktx(i32 %right, i32 1, i32 4, i8* %55) #7
  %56 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 3
  %57 = bitcast i32* %56 to i8*
  tail call void @_blocktx(i32 %right, i32 1, i32 4, i8* %57) #7
  %58 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 0
  %59 = bitcast i32* %58 to i8*
  tail call void @_blocktx(i32 %right, i32 1, i32 1024, i8* %59) #7
  %60 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 0
  %61 = bitcast i32* %60 to i8*
  tail call void @_blocktx(i32 %right, i32 1, i32 1024, i8* %61) #7
  %62 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 9, i64 0
  %63 = bitcast i32* %62 to i8*
  tail call void @_blocktx(i32 %right, i32 1, i32 1024, i8* %63) #7
  %64 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 10, i64 0
  %65 = bitcast i32* %64 to i8*
  tail call void @_blocktx(i32 %right, i32 1, i32 1024, i8* %65) #7
  %66 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 4
  %67 = bitcast i32* %len.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %67)
  %68 = bitcast %struct.t_symtab* %66 to i8*
  tail call void @_blocktx(i32 %right, i32 1, i32 4, i8* %68) #7
  %69 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 4, i32 1
  %symbuf.03.i = load %struct.symbuf** %69, align 8
  %70 = icmp eq %struct.symbuf* %symbuf.03.i, null
  br i1 %70, label %mv_symtab.exit, label %.preheader.lr.ph.i

.preheader.lr.ph.i:                               ; preds = %mv_parm.exit
  %71 = getelementptr inbounds %struct.t_symtab* %66, i64 0, i32 0
  %72 = load i32* %71, align 4, !tbaa !30
  br label %.preheader.i

.preheader.i:                                     ; preds = %95, %.preheader.lr.ph.i
  %symbuf.06.i = phi %struct.symbuf* [ %symbuf.03.i, %.preheader.lr.ph.i ], [ %symbuf.0.i, %95 ]
  %nr.04.i = phi i32 [ %72, %.preheader.lr.ph.i ], [ %96, %95 ]
  %73 = getelementptr inbounds %struct.symbuf* %symbuf.06.i, i64 0, i32 0
  %74 = load i32* %73, align 4, !tbaa !33
  %75 = icmp sgt i32 %74, 0
  %76 = icmp sgt i32 %nr.04.i, 0
  %.1.i = and i1 %76, %75
  br i1 %.1.i, label %.lr.ph.i, label %95

.lr.ph.i:                                         ; preds = %.preheader.i
  %77 = getelementptr inbounds %struct.symbuf* %symbuf.06.i, i64 0, i32 1
  %78 = sext i32 %nr.04.i to i64
  br label %79

; <label>:79                                      ; preds = %79, %.lr.ph.i
  %indvars.iv.i1 = phi i64 [ 0, %.lr.ph.i ], [ %indvars.iv.next.i2, %79 ]
  %80 = load i8*** %77, align 8, !tbaa !35
  %81 = getelementptr inbounds i8** %80, i64 %indvars.iv.i1
  %82 = load i8** %81, align 8, !tbaa !29
  %83 = call i64 @strlen(i8* %82) #7
  %84 = add i64 %83, 1
  %85 = trunc i64 %84 to i32
  store i32 %85, i32* %len.i, align 4, !tbaa !36
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %67) #7
  %86 = load i32* %len.i, align 4, !tbaa !36
  %87 = load i8*** %77, align 8, !tbaa !35
  %88 = getelementptr inbounds i8** %87, i64 %indvars.iv.i1
  %89 = load i8** %88, align 8, !tbaa !29
  call void @_blocktx(i32 %right, i32 1, i32 %86, i8* %89) #7
  %indvars.iv.next.i2 = add nuw nsw i64 %indvars.iv.i1, 1
  %90 = load i32* %73, align 4, !tbaa !33
  %91 = sext i32 %90 to i64
  %92 = icmp slt i64 %indvars.iv.next.i2, %91
  %93 = icmp sgt i64 %78, %indvars.iv.next.i2
  %..i = and i1 %93, %92
  br i1 %..i, label %79, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %79
  %94 = trunc i64 %indvars.iv.next.i2 to i32
  br label %95

; <label>:95                                      ; preds = %._crit_edge.i, %.preheader.i
  %i.0.lcssa.i = phi i32 [ %94, %._crit_edge.i ], [ 0, %.preheader.i ]
  %96 = sub nsw i32 %nr.04.i, %i.0.lcssa.i
  %97 = getelementptr inbounds %struct.symbuf* %symbuf.06.i, i64 0, i32 2
  %symbuf.0.i = load %struct.symbuf** %97, align 8
  %98 = icmp eq %struct.symbuf* %symbuf.0.i, null
  br i1 %98, label %mv_symtab.exit, label %.preheader.i

mv_symtab.exit:                                   ; preds = %95, %mv_parm.exit
  call void @llvm.lifetime.end(i64 4, i8* %67)
  %99 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 0
  %100 = load i8*** %99, align 8, !tbaa !37
  %101 = bitcast i32* %handle.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %101)
  %102 = call i32 @lookup_symtab(%struct.t_symtab* %66, i8** %100) #7
  store i32 %102, i32* %handle.i, align 4, !tbaa !36
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %101) #7
  call void @llvm.lifetime.end(i64 4, i8* %101)
  %103 = bitcast i32* %nr.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %103)
  %104 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 0
  %105 = load i32* %104, align 4, !tbaa !42
  store i32 %105, i32* %nr.i, align 4, !tbaa !36
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %103) #7
  %106 = load i32* %nr.i, align 4, !tbaa !36
  %107 = mul i32 %106, 40
  %108 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 1
  %109 = bitcast %struct.t_atom** %108 to i8**
  %110 = load i8** %109, align 8, !tbaa !43
  call void @_blocktx(i32 %right, i32 1, i32 %107, i8* %110) #7
  %111 = load i32* %104, align 4, !tbaa !42
  %112 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 2
  %113 = load i8**** %112, align 8, !tbaa !53
  call fastcc void @mv_strings(i32 %right, %struct.t_symtab* %66, i32 %111, i8*** %113) #7
  %114 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 5
  %115 = load i32* %114, align 4, !tbaa !44
  %116 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 6
  %117 = load i8**** %116, align 8, !tbaa !54
  call fastcc void @mv_strings(i32 %right, %struct.t_symtab* %66, i32 %115, i8*** %117) #7
  %118 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 7
  %119 = load i32* %118, align 4, !tbaa !45
  %120 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 8
  %121 = load i8**** %120, align 8, !tbaa !55
  call fastcc void @mv_strings(i32 %right, %struct.t_symtab* %66, i32 %119, i8*** %121) #7
  br label %122

; <label>:122                                     ; preds = %122, %mv_symtab.exit
  %indvars.iv.i.i = phi i64 [ 0, %mv_symtab.exit ], [ %indvars.iv.next.i.i, %122 ]
  %123 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 10, i64 %indvars.iv.i.i
  %124 = getelementptr inbounds %struct.t_grps* %123, i64 0, i32 0
  %125 = bitcast %struct.t_grps* %123 to i8*
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %125) #7
  %126 = load i32* %124, align 4, !tbaa !30
  %127 = shl i32 %126, 2
  %128 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 10, i64 %indvars.iv.i.i, i32 1
  %129 = bitcast i32** %128 to i8**
  %130 = load i8** %129, align 8, !tbaa !32
  call void @_blocktx(i32 %right, i32 1, i32 %127, i8* %130) #7
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.i.i = icmp eq i64 %indvars.iv.next.i.i, 9
  br i1 %exitcond.i.i, label %mv_atoms.exit, label %122

mv_atoms.exit:                                    ; preds = %122
  %131 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 9
  call void @mv_block(i32 %right, %struct.t_block* %131) #7
  call void @llvm.lifetime.end(i64 4, i8* %103)
  %132 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 1
  %133 = getelementptr inbounds %struct.t_idef* %132, i64 0, i32 0
  %134 = bitcast %struct.t_idef* %132 to i8*
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %134) #7
  %135 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 1, i32 2
  %136 = bitcast i32* %135 to i8*
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %136) #7
  %137 = load i32* %133, align 4, !tbaa !46
  %138 = shl i32 %137, 2
  %139 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 1, i32 3
  %140 = bitcast i32** %139 to i8**
  %141 = load i8** %140, align 8, !tbaa !47
  call void @_blocktx(i32 %right, i32 1, i32 %138, i8* %141) #7
  %142 = load i32* %133, align 4, !tbaa !46
  %143 = mul i32 %142, 24
  %144 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 1, i32 4
  %145 = bitcast %union.t_iparams** %144 to i8**
  %146 = load i8** %145, align 8, !tbaa !48
  call void @_blocktx(i32 %right, i32 1, i32 %143, i8* %146) #7
  br label %147

; <label>:147                                     ; preds = %147, %mv_atoms.exit
  %indvars.iv.i3 = phi i64 [ 0, %mv_atoms.exit ], [ %indvars.iv.next.i4, %147 ]
  %148 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 1, i32 5, i64 %indvars.iv.i3
  %149 = getelementptr inbounds %struct.t_ilist* %148, i64 0, i32 0
  %150 = bitcast %struct.t_ilist* %148 to i8*
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %150) #7
  %151 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 1, i32 5, i64 %indvars.iv.i3, i32 1, i64 0
  %152 = bitcast i32* %151 to i8*
  call void @_blocktx(i32 %right, i32 1, i32 1024, i8* %152) #7
  %153 = load i32* %149, align 4, !tbaa !49
  %154 = shl i32 %153, 2
  %155 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 1, i32 5, i64 %indvars.iv.i3, i32 2
  %156 = bitcast i32** %155 to i8**
  %157 = load i8** %156, align 8, !tbaa !51
  call void @_blocktx(i32 %right, i32 1, i32 %154, i8* %157) #7
  %indvars.iv.next.i4 = add nuw nsw i64 %indvars.iv.i3, 1
  %exitcond.i5 = icmp eq i64 %indvars.iv.next.i4, 44
  br i1 %exitcond.i5, label %mv_idef.exit, label %147

mv_idef.exit:                                     ; preds = %147, %mv_idef.exit
  %indvars.iv = phi i64 [ %indvars.iv.next, %mv_idef.exit ], [ 0, %147 ]
  %158 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 3, i64 %indvars.iv
  call void @mv_block(i32 %right, %struct.t_block* %158) #7
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %159, label %mv_idef.exit

; <label>:159                                     ; preds = %mv_idef.exit
  %160 = load i32* %104, align 4, !tbaa !52
  %161 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %161)
  store i32 %160, i32* %1, align 4, !tbaa !36
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %161) #7
  %162 = load i32* %1, align 4, !tbaa !36
  %163 = mul i32 %162, 12
  %164 = bitcast [3 x float]* %x to i8*
  call void @_blocktx(i32 %right, i32 1, i32 %163, i8* %164) #7
  %165 = load i32* %1, align 4, !tbaa !36
  %166 = mul i32 %165, 12
  %167 = bitcast [3 x float]* %v to i8*
  call void @_blocktx(i32 %right, i32 1, i32 %166, i8* %167) #7
  call void @llvm.lifetime.end(i64 4, i8* %161)
  ret void
}
