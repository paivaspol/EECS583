define void @mv_data(i32 %left, i32 %right, %struct.t_parm* %parm, %struct.t_nsborder* %nsb, %struct.t_topology* %top, [3 x float]* %x, [3 x float]* %v) #0 {
entry:
  %natoms.addr.i = alloca i32, align 4
  %nr.i = alloca i32, align 4
  %handle.i = alloca i32, align 4
  %len.i = alloca i32, align 4
  %0 = bitcast %struct.t_parm* %parm to i8*
  call void @_blocktx(i32 %right, i32 1, i32 776, i8* %0) #4
  %opts.i = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80
  %ngtc.i.i = getelementptr inbounds %struct.t_grpopts* %opts.i, i64 0, i32 0
  %1 = bitcast %struct.t_grpopts* %opts.i to i8*
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %1) #4
  %ngacc.i.i = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 1
  %2 = bitcast i32* %ngacc.i.i to i8*
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %2) #4
  %ngfrz.i.i = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 2
  %3 = bitcast i32* %ngfrz.i.i to i8*
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %3) #4
  %ngener.i.i = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 3
  %4 = bitcast i32* %ngener.i.i to i8*
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %4) #4
  %5 = load i32* %ngtc.i.i, align 4, !tbaa !0
  %mul.i.i = shl i32 %5, 2
  %nrdf.i.i = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 4
  %6 = load float** %nrdf.i.i, align 8, !tbaa !3
  %7 = bitcast float* %6 to i8*
  call void @_blocktx(i32 %right, i32 1, i32 %mul.i.i, i8* %7) #4
  %8 = load i32* %ngtc.i.i, align 4, !tbaa !0
  %mul5.i.i = shl i32 %8, 2
  %tau_t.i.i = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 6
  %9 = load float** %tau_t.i.i, align 8, !tbaa !3
  %10 = bitcast float* %9 to i8*
  call void @_blocktx(i32 %right, i32 1, i32 %mul5.i.i, i8* %10) #4
  %11 = load i32* %ngtc.i.i, align 4, !tbaa !0
  %mul9.i.i = shl i32 %11, 2
  %ref_t.i.i = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 5
  %12 = load float** %ref_t.i.i, align 8, !tbaa !3
  %13 = bitcast float* %12 to i8*
  call void @_blocktx(i32 %right, i32 1, i32 %mul9.i.i, i8* %13) #4
  %14 = load i32* %ngacc.i.i, align 4, !tbaa !0
  %mul13.i.i = mul i32 %14, 12
  %acc.i.i = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 7
  %15 = load [3 x float]** %acc.i.i, align 8, !tbaa !3
  %16 = bitcast [3 x float]* %15 to i8*
  call void @_blocktx(i32 %right, i32 1, i32 %mul13.i.i, i8* %16) #4
  %17 = load i32* %ngfrz.i.i, align 4, !tbaa !0
  %mul17.i.i = mul i32 %17, 12
  %nFreeze.i.i = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 8
  %18 = load [3 x i32]** %nFreeze.i.i, align 8, !tbaa !3
  %19 = bitcast [3 x i32]* %18 to i8*
  call void @_blocktx(i32 %right, i32 1, i32 %mul17.i.i, i8* %19) #4
  %20 = load i32* %ngener.i.i, align 4, !tbaa !0
  %mul21.i.i = shl i32 %20, 2
  %mul23.i.i = mul i32 %mul21.i.i, %20
  %eg_excl.i.i = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 9
  %21 = load i32** %eg_excl.i.i, align 8, !tbaa !3
  %22 = bitcast i32* %21 to i8*
  call void @_blocktx(i32 %right, i32 1, i32 %mul23.i.i, i8* %22) #4
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %entry
  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i ]
  %arrayidx.i = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 81, i64 %indvars.iv.i
  call fastcc void @mv_cosines(i32 %right, %struct.t_cosines* %arrayidx.i) #4
  %arrayidx4.i = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 82, i64 %indvars.iv.i
  call fastcc void @mv_cosines(i32 %right, %struct.t_cosines* %arrayidx4.i) #4
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  %lftr.wideiv44 = trunc i64 %indvars.iv.next.i to i32
  %exitcond45 = icmp eq i32 %lftr.wideiv44, 3
  br i1 %exitcond45, label %mv_parm.exit, label %for.body.i

mv_parm.exit:                                     ; preds = %for.body.i
  %nnodes.i = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 1
  %23 = bitcast i32* %nnodes.i to i8*
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %23) #4
  %shift.i = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 5
  %24 = bitcast i32* %shift.i to i8*
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %24) #4
  %bshift.i = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 6
  %25 = bitcast i32* %bshift.i to i8*
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %25) #4
  %nstDlb.i = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 4
  %26 = bitcast i32* %nstDlb.i to i8*
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %26) #4
  %cgtotal.i = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 2
  %27 = bitcast i32* %cgtotal.i to i8*
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %27) #4
  %natoms.i = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 3
  %28 = bitcast i32* %natoms.i to i8*
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %28) #4
  %arraydecay.i = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 0
  %29 = bitcast i32* %arraydecay.i to i8*
  call void @_blocktx(i32 %right, i32 1, i32 1024, i8* %29) #4
  %arraydecay1.i = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 0
  %30 = bitcast i32* %arraydecay1.i to i8*
  call void @_blocktx(i32 %right, i32 1, i32 1024, i8* %30) #4
  %arraydecay2.i = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 9, i64 0
  %31 = bitcast i32* %arraydecay2.i to i8*
  call void @_blocktx(i32 %right, i32 1, i32 1024, i8* %31) #4
  %arraydecay3.i = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 10, i64 0
  %32 = bitcast i32* %arraydecay3.i to i8*
  call void @_blocktx(i32 %right, i32 1, i32 1024, i8* %32) #4
  %symtab = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 4
  %33 = bitcast i32* %len.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %33) #3
  %34 = bitcast %struct.t_symtab* %symtab to i8*
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %34) #4
  %symbuf3.i = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 4, i32 1
  %symbuf.028.i = load %struct.symbuf** %symbuf3.i, align 8
  %cmp29.i = icmp eq %struct.symbuf* %symbuf.028.i, null
  br i1 %cmp29.i, label %mv_symtab.exit, label %for.cond.preheader.lr.ph.i

for.cond.preheader.lr.ph.i:                       ; preds = %mv_parm.exit
  %nr1.i = getelementptr inbounds %struct.t_symtab* %symtab, i64 0, i32 0
  %35 = load i32* %nr1.i, align 4, !tbaa !0
  br label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %for.end.i, %for.cond.preheader.lr.ph.i
  %symbuf.031.i = phi %struct.symbuf* [ %symbuf.028.i, %for.cond.preheader.lr.ph.i ], [ %symbuf.0.i, %for.end.i ]
  %nr.030.i = phi i32 [ %35, %for.cond.preheader.lr.ph.i ], [ %sub.i, %for.end.i ]
  %bufsize.i = getelementptr inbounds %struct.symbuf* %symbuf.031.i, i64 0, i32 0
  %36 = load i32* %bufsize.i, align 4, !tbaa !0
  %cmp424.i = icmp sgt i32 %36, 0
  %cmp525.i = icmp sgt i32 %nr.030.i, 0
  %cmp5.26.i = and i1 %cmp424.i, %cmp525.i
  br i1 %cmp5.26.i, label %for.body.lr.ph.i, label %for.end.i

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %buf.i = getelementptr inbounds %struct.symbuf* %symbuf.031.i, i64 0, i32 1
  br label %for.body.i22

for.body.i22:                                     ; preds = %for.body.i22, %for.body.lr.ph.i
  %indvars.iv.i19 = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i21, %for.body.i22 ]
  %i.027.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i22 ]
  %37 = load i8*** %buf.i, align 8, !tbaa !3
  %arrayidx.i20 = getelementptr inbounds i8** %37, i64 %indvars.iv.i19
  %38 = load i8** %arrayidx.i20, align 8, !tbaa !3
  %call.i = call i64 @strlen(i8* %38) #5
  %add.i = add i64 %call.i, 1
  %conv.i = trunc i64 %add.i to i32
  store i32 %conv.i, i32* %len.i, align 4, !tbaa !0
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %33) #4
  %39 = load i32* %len.i, align 4, !tbaa !0
  %40 = load i8*** %buf.i, align 8, !tbaa !3
  %arrayidx10.i = getelementptr inbounds i8** %40, i64 %indvars.iv.i19
  %41 = load i8** %arrayidx10.i, align 8, !tbaa !3
  call void @_blocktx(i32 %right, i32 1, i32 %39, i8* %41) #4
  %indvars.iv.next.i21 = add i64 %indvars.iv.i19, 1
  %inc.i = add nsw i32 %i.027.i, 1
  %42 = load i32* %bufsize.i, align 4, !tbaa !0
  %43 = trunc i64 %indvars.iv.next.i21 to i32
  %cmp4.i = icmp slt i32 %43, %42
  %cmp5.i = icmp slt i32 %43, %nr.030.i
  %cmp5..i = and i1 %cmp4.i, %cmp5.i
  br i1 %cmp5..i, label %for.body.i22, label %for.end.i

for.end.i:                                        ; preds = %for.body.i22, %for.cond.preheader.i
  %i.0.lcssa.i = phi i32 [ 0, %for.cond.preheader.i ], [ %inc.i, %for.body.i22 ]
  %sub.i = sub nsw i32 %nr.030.i, %i.0.lcssa.i
  %next.i = getelementptr inbounds %struct.symbuf* %symbuf.031.i, i64 0, i32 2
  %symbuf.0.i = load %struct.symbuf** %next.i, align 8
  %cmp.i = icmp eq %struct.symbuf* %symbuf.0.i, null
  br i1 %cmp.i, label %mv_symtab.exit, label %for.cond.preheader.i

mv_symtab.exit:                                   ; preds = %for.end.i, %mv_parm.exit
  call void @llvm.lifetime.end(i64 4, i8* %33) #3
  %name = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 0
  %44 = load i8*** %name, align 8, !tbaa !3
  %45 = bitcast i32* %handle.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %45) #3
  %call.i23 = call i32 @lookup_symtab(%struct.t_symtab* %symtab, i8** %44) #4
  store i32 %call.i23, i32* %handle.i, align 4, !tbaa !0
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %45) #4
  call void @llvm.lifetime.end(i64 4, i8* %45) #3
  %46 = bitcast i32* %nr.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %46) #3
  %nr1.i24 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 0
  %47 = load i32* %nr1.i24, align 4, !tbaa !0
  store i32 %47, i32* %nr.i, align 4, !tbaa !0
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %46) #4
  %48 = load i32* %nr.i, align 4, !tbaa !0
  %mul.i = mul i32 %48, 40
  %atom.i = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 1
  %49 = load %struct.t_atom** %atom.i, align 8, !tbaa !3
  %50 = bitcast %struct.t_atom* %49 to i8*
  call void @_blocktx(i32 %right, i32 1, i32 %mul.i, i8* %50) #4
  %51 = load i32* %nr1.i24, align 4, !tbaa !0
  %atomname.i = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 2
  %52 = load i8**** %atomname.i, align 8, !tbaa !3
  call fastcc void @mv_strings(i32 %right, %struct.t_symtab* %symtab, i32 %51, i8*** %52) #4
  %nres.i = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 5
  %53 = load i32* %nres.i, align 4, !tbaa !0
  %resname.i = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 6
  %54 = load i8**** %resname.i, align 8, !tbaa !3
  call fastcc void @mv_strings(i32 %right, %struct.t_symtab* %symtab, i32 %53, i8*** %54) #4
  %ngrpname.i = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 7
  %55 = load i32* %ngrpname.i, align 4, !tbaa !0
  %grpname.i = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 8
  %56 = load i8**** %grpname.i, align 8, !tbaa !3
  call fastcc void @mv_strings(i32 %right, %struct.t_symtab* %symtab, i32 %55, i8*** %56) #4
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i, %mv_symtab.exit
  %indvars.iv.i.i = phi i64 [ 0, %mv_symtab.exit ], [ %indvars.iv.next.i.i, %for.body.i.i ]
  %arrayidx.i.i = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 10, i64 %indvars.iv.i.i
  %nr.i.i = getelementptr inbounds %struct.t_grps* %arrayidx.i.i, i64 0, i32 0
  %57 = bitcast %struct.t_grps* %arrayidx.i.i to i8*
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %57) #4
  %58 = load i32* %nr.i.i, align 4, !tbaa !0
  %mul.i.i25 = shl i32 %58, 2
  %nm_ind.i.i = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 10, i64 %indvars.iv.i.i, i32 1
  %59 = load i32** %nm_ind.i.i, align 8, !tbaa !3
  %60 = bitcast i32* %59 to i8*
  call void @_blocktx(i32 %right, i32 1, i32 %mul.i.i25, i8* %60) #4
  %indvars.iv.next.i.i = add i64 %indvars.iv.i.i, 1
  %lftr.wideiv42 = trunc i64 %indvars.iv.next.i.i to i32
  %exitcond43 = icmp eq i32 %lftr.wideiv42, 9
  br i1 %exitcond43, label %mv_atoms.exit, label %for.body.i.i

mv_atoms.exit:                                    ; preds = %for.body.i.i
  %excl.i = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2, i32 9
  call void @mv_block(i32 %right, %struct.t_block* %excl.i) #4
  call void @llvm.lifetime.end(i64 4, i8* %46) #3
  %idef = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 1
  %ntypes.i = getelementptr inbounds %struct.t_idef* %idef, i64 0, i32 0
  %61 = bitcast %struct.t_idef* %idef to i8*
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %61) #4
  %atnr.i = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 1, i32 2
  %62 = bitcast i32* %atnr.i to i8*
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %62) #4
  %63 = load i32* %ntypes.i, align 4, !tbaa !0
  %mul.i28 = shl i32 %63, 2
  %functype.i = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 1, i32 3
  %64 = load i32** %functype.i, align 8, !tbaa !3
  %65 = bitcast i32* %64 to i8*
  call void @_blocktx(i32 %right, i32 1, i32 %mul.i28, i8* %65) #4
  %66 = load i32* %ntypes.i, align 4, !tbaa !0
  %mul5.i = mul i32 %66, 24
  %iparams.i = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 1, i32 4
  %67 = load %union.t_iparams** %iparams.i, align 8, !tbaa !3
  %68 = bitcast %union.t_iparams* %67 to i8*
  call void @_blocktx(i32 %right, i32 1, i32 %mul5.i, i8* %68) #4
  br label %for.body.i36

for.body.i36:                                     ; preds = %for.body.i36, %mv_atoms.exit
  %indvars.iv.i29 = phi i64 [ 0, %mv_atoms.exit ], [ %indvars.iv.next.i33, %for.body.i36 ]
  %arrayidx.i30 = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 1, i32 5, i64 %indvars.iv.i29
  %nr.i.i31 = getelementptr inbounds %struct.t_ilist* %arrayidx.i30, i64 0, i32 0
  %69 = bitcast %struct.t_ilist* %arrayidx.i30 to i8*
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %69) #4
  %arraydecay.i.i = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 1, i32 5, i64 %indvars.iv.i29, i32 1, i64 0
  %70 = bitcast i32* %arraydecay.i.i to i8*
  call void @_blocktx(i32 %right, i32 1, i32 1024, i8* %70) #4
  %71 = load i32* %nr.i.i31, align 4, !tbaa !0
  %mul.i.i32 = shl i32 %71, 2
  %iatoms.i.i = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 1, i32 5, i64 %indvars.iv.i29, i32 2
  %72 = load i32** %iatoms.i.i, align 8, !tbaa !3
  %73 = bitcast i32* %72 to i8*
  call void @_blocktx(i32 %right, i32 1, i32 %mul.i.i32, i8* %73) #4
  %indvars.iv.next.i33 = add i64 %indvars.iv.i29, 1
  %lftr.wideiv40 = trunc i64 %indvars.iv.next.i33 to i32
  %exitcond41 = icmp eq i32 %lftr.wideiv40, 44
  br i1 %exitcond41, label %for.body, label %for.body.i36

for.body:                                         ; preds = %for.body.i36, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.body.i36 ]
  %arrayidx = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 3, i64 %indvars.iv
  call void @mv_block(i32 %right, %struct.t_block* %arrayidx) #4
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 3
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %74 = load i32* %nr1.i24, align 4, !tbaa !0
  %75 = bitcast i32* %natoms.addr.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %75) #3
  store i32 %74, i32* %natoms.addr.i, align 4, !tbaa !0
  call void @_blocktx(i32 %right, i32 1, i32 4, i8* %75) #4
  %76 = load i32* %natoms.addr.i, align 4, !tbaa !0
  %mul.i38 = mul i32 %76, 12
  %77 = bitcast [3 x float]* %x to i8*
  call void @_blocktx(i32 %right, i32 1, i32 %mul.i38, i8* %77) #4
  %78 = load i32* %natoms.addr.i, align 4, !tbaa !0
  %mul3.i = mul i32 %78, 12
  %79 = bitcast [3 x float]* %v to i8*
  call void @_blocktx(i32 %right, i32 1, i32 %mul3.i, i8* %79) #4
  call void @llvm.lifetime.end(i64 4, i8* %75) #3
  ret void
}
