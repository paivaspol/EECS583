define internal fastcc void @mv_strings(i32 %dest, %struct.t_symtab* %symtab, i32 %nr, i8*** nocapture %nm) #0 {
entry:
  %nr.addr = alloca i32, align 4
  store i32 %nr, i32* %nr.addr, align 4, !tbaa !0
  %call = call i8* @save_calloc(i8* getelementptr inbounds ([7 x i8]* @.str11, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str8, i64 0, i64 0), i32 298, i32 %nr, i32 4) #4
  %0 = bitcast i8* %call to i32*
  %cmp11 = icmp sgt i32 %nr, 0
  br i1 %cmp11, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds i8*** %nm, i64 %indvars.iv
  %1 = load i8*** %arrayidx, align 8, !tbaa !3
  %call1 = call i32 @lookup_symtab(%struct.t_symtab* %symtab, i8** %1) #4
  %arrayidx3 = getelementptr inbounds i32* %0, i64 %indvars.iv
  store i32 %call1, i32* %arrayidx3, align 4, !tbaa !0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %2 = load i32* %nr.addr, align 4, !tbaa !0
  %3 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %3, %2
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  %4 = bitcast i32* %nr.addr to i8*
  call void @_blocktx(i32 %dest, i32 1, i32 4, i8* %4) #4
  %5 = load i32* %nr.addr, align 4, !tbaa !0
  %mul = shl i32 %5, 2
  call void @_blocktx(i32 %dest, i32 1, i32 %mul, i8* %call) #4
  call void @save_free(i8* getelementptr inbounds ([7 x i8]* @.str11, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str8, i64 0, i64 0), i32 303, i8* %call) #4
  ret void
}
