define void @pr_scalar_gk(i8* %fn, i32 %nx, i32 %ny, i32 %nz, float* nocapture %box, float*** nocapture %ghat) #0 {
entry:
  %k = alloca [3 x float], align 4
  %lll = alloca [3 x float], align 4
  %arraydecay = getelementptr inbounds [3 x float]* %lll, i64 0, i64 0
  %0 = load float* %box, align 4, !tbaa !3
  %conv.i = fpext float %0 to double
  %div.i = fdiv double 0x401921FB54442D18, %conv.i
  %conv1.i = fptrunc double %div.i to float
  store float %conv1.i, float* %arraydecay, align 4, !tbaa !3
  %arrayidx3.i = getelementptr inbounds float* %box, i64 1
  %1 = load float* %arrayidx3.i, align 4, !tbaa !3
  %conv4.i = fpext float %1 to double
  %div5.i = fdiv double 0x401921FB54442D18, %conv4.i
  %conv6.i = fptrunc double %div5.i to float
  %arrayidx7.i = getelementptr inbounds [3 x float]* %lll, i64 0, i64 1
  store float %conv6.i, float* %arrayidx7.i, align 4, !tbaa !3
  %arrayidx8.i = getelementptr inbounds float* %box, i64 2
  %2 = load float* %arrayidx8.i, align 4, !tbaa !3
  %conv9.i = fpext float %2 to double
  %div10.i = fdiv double 0x401921FB54442D18, %conv9.i
  %conv11.i = fptrunc double %div10.i to float
  %arrayidx12.i = getelementptr inbounds [3 x float]* %lll, i64 0, i64 2
  store float %conv11.i, float* %arrayidx12.i, align 4, !tbaa !3
  %call = call %struct._IO_FILE* @xvgropen(i8* %fn, i8* getelementptr inbounds ([6 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str8, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str9, i64 0, i64 0)) #5
  %cmp41 = icmp sgt i32 %nx, 0
  br i1 %cmp41, label %for.cond1.preheader.lr.ph, label %for.end22

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %cmp239 = icmp sgt i32 %ny, 0
  %cmp537 = icmp sgt i32 %nz, 0
  %arraydecay8 = getelementptr inbounds [3 x float]* %k, i64 0, i64 0
  %arrayidx2.i = getelementptr inbounds [3 x float]* %k, i64 0, i64 1
  %arrayidx5.i = getelementptr inbounds [3 x float]* %k, i64 0, i64 2
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.inc20, %for.cond1.preheader.lr.ph
  %indvars.iv47 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next48, %for.inc20 ]
  br i1 %cmp239, label %for.cond4.preheader.lr.ph, label %for.inc20

for.cond4.preheader.lr.ph:                        ; preds = %for.cond1.preheader
  %arrayidx = getelementptr inbounds float*** %ghat, i64 %indvars.iv47
  br label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %for.inc17, %for.cond4.preheader.lr.ph
  %indvars.iv43 = phi i64 [ 0, %for.cond4.preheader.lr.ph ], [ %indvars.iv.next44, %for.inc17 ]
  br i1 %cmp537, label %for.body6, label %for.inc17

for.body6:                                        ; preds = %for.cond4.preheader, %for.body6
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body6 ], [ 0, %for.cond4.preheader ]
  %3 = trunc i64 %indvars.iv to i32
  %4 = trunc i64 %indvars.iv43 to i32
  %5 = trunc i64 %indvars.iv47 to i32
  call fastcc void @calc_k(float* %arraydecay, i32 %5, i32 %4, i32 %3, i32 %nx, i32 %ny, i32 %nz, float* %arraydecay8) #4
  %6 = load float* %arraydecay8, align 4, !tbaa !3
  %mul.i = fmul float %6, %6
  %7 = load float* %arrayidx2.i, align 4, !tbaa !3
  %mul4.i = fmul float %7, %7
  %add.i = fadd float %mul.i, %mul4.i
  %8 = load float* %arrayidx5.i, align 4, !tbaa !3
  %mul7.i = fmul float %8, %8
  %add8.i = fadd float %add.i, %mul7.i
  %conv9.i36 = call float @sqrtf(float %add8.i) #2
  %conv = fpext float %conv9.i36 to double
  %9 = load float*** %arrayidx, align 8, !tbaa !0
  %arrayidx13 = getelementptr inbounds float** %9, i64 %indvars.iv43
  %10 = load float** %arrayidx13, align 8, !tbaa !0
  %arrayidx14 = getelementptr inbounds float* %10, i64 %indvars.iv
  %11 = load float* %arrayidx14, align 4, !tbaa !3
  %conv15 = fpext float %11 to double
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([12 x i8]* @.str10, i64 0, i64 0), double %conv, double %conv15) #5
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nz
  br i1 %exitcond, label %for.inc17, label %for.body6

for.inc17:                                        ; preds = %for.body6, %for.cond4.preheader
  %indvars.iv.next44 = add i64 %indvars.iv43, 1
  %lftr.wideiv45 = trunc i64 %indvars.iv.next44 to i32
  %exitcond46 = icmp eq i32 %lftr.wideiv45, %ny
  br i1 %exitcond46, label %for.inc20, label %for.cond4.preheader

for.inc20:                                        ; preds = %for.inc17, %for.cond1.preheader
  %indvars.iv.next48 = add i64 %indvars.iv47, 1
  %lftr.wideiv49 = trunc i64 %indvars.iv.next48 to i32
  %exitcond50 = icmp eq i32 %lftr.wideiv49, %nx
  br i1 %exitcond50, label %for.end22, label %for.cond1.preheader

for.end22:                                        ; preds = %for.inc20, %entry
  call void @ffclose(%struct._IO_FILE* %call) #5
  ret void
}
