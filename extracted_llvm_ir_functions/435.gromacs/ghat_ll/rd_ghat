define float*** @rd_ghat(%struct._IO_FILE* nocapture %log, i8* %fn, i32* nocapture %igrid, float* nocapture %gridspace, float* nocapture %beta, i32* %porder, float* nocapture %r1, float* nocapture %rc) #0 {
entry:
  %gx = alloca double, align 8
  %gy = alloca double, align 8
  %gz = alloca double, align 8
  %alX = alloca double, align 8
  %alY = alloca double, align 8
  %alZ = alloca double, align 8
  %ddd = alloca double, align 8
  %acut = alloca double, align 8
  %pval = alloca double, align 8
  %zval = alloca double, align 8
  %eref = alloca double, align 8
  %qopt = alloca double, align 8
  %r11 = alloca double, align 8
  %nalias = alloca i32, align 4
  %niter = alloca i32, align 4
  %bSym = alloca i32, align 4
  %ix = alloca i32, align 4
  %iy = alloca i32, align 4
  %iz = alloca i32, align 4
  %call = call %struct._IO_FILE* @ffopen(i8* %fn, i8* getelementptr inbounds ([2 x i8]* @.str11, i64 0, i64 0)) #5
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([16 x i8]* @.str12, i64 0, i64 0), i32* %ix, i32* %iy, i32* %iz, double* %gx, double* %gy, double* %gz) #5
  %0 = load i32* %ix, align 4, !tbaa !4
  store i32 %0, i32* %igrid, align 4, !tbaa !4
  %1 = load i32* %iy, align 4, !tbaa !4
  %arrayidx2 = getelementptr inbounds i32* %igrid, i64 1
  store i32 %1, i32* %arrayidx2, align 4, !tbaa !4
  %2 = load i32* %iz, align 4, !tbaa !4
  %arrayidx3 = getelementptr inbounds i32* %igrid, i64 2
  store i32 %2, i32* %arrayidx3, align 4, !tbaa !4
  %3 = load double* %gx, align 8, !tbaa !5
  %conv = fptrunc double %3 to float
  store float %conv, float* %gridspace, align 4, !tbaa !3
  %4 = load double* %gy, align 8, !tbaa !5
  %conv5 = fptrunc double %4 to float
  %arrayidx6 = getelementptr inbounds float* %gridspace, i64 1
  store float %conv5, float* %arrayidx6, align 4, !tbaa !3
  %5 = load double* %gz, align 8, !tbaa !5
  %conv7 = fptrunc double %5 to float
  %arrayidx8 = getelementptr inbounds float* %gridspace, i64 2
  store float %conv7, float* %arrayidx8, align 4, !tbaa !3
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([18 x i8]* @.str13, i64 0, i64 0), i32* %nalias, i32* %porder, i32* %niter, i32* %bSym, double* %alX, double* %alY, double* %alZ) #5
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([19 x i8]* @.str14, i64 0, i64 0), double* %acut, double* %r11, double* %pval, double* %zval, double* %eref, double* %qopt) #5
  %6 = load double* %r11, align 8, !tbaa !5
  %conv11 = fptrunc double %6 to float
  store float %conv11, float* %r1, align 4, !tbaa !3
  %7 = load double* %acut, align 8, !tbaa !5
  %conv12 = fptrunc double %7 to float
  store float %conv12, float* %rc, align 4, !tbaa !3
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %log, i8* getelementptr inbounds ([38 x i8]* @.str15, i64 0, i64 0), i8* %fn) #5
  %8 = load i32* %ix, align 4, !tbaa !4
  %9 = load i32* %iy, align 4, !tbaa !4
  %10 = load i32* %iz, align 4, !tbaa !4
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %log, i8* getelementptr inbounds ([26 x i8]* @.str16, i64 0, i64 0), i32 %8, i32 %9, i32 %10) #5
  %11 = load double* %gx, align 8, !tbaa !5
  %12 = load double* %gy, align 8, !tbaa !5
  %13 = load double* %gz, align 8, !tbaa !5
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %log, i8* getelementptr inbounds ([26 x i8]* @.str17, i64 0, i64 0), double %11, double %12, double %13) #5
  %14 = load i32* %nalias, align 4, !tbaa !4
  %15 = load i32* %porder, align 4, !tbaa !4
  %16 = load i32* %niter, align 4, !tbaa !4
  %17 = load i32* %bSym, align 4, !tbaa !4
  %18 = load double* %alX, align 8, !tbaa !5
  %19 = load double* %alY, align 8, !tbaa !5
  %20 = load double* %alZ, align 8, !tbaa !5
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %log, i8* getelementptr inbounds ([86 x i8]* @.str18, i64 0, i64 0), i32 %14, i32 %15, i32 %16, i32 %17, double %18, double %19, double %20) #5
  %21 = load double* %acut, align 8, !tbaa !5
  %22 = load float* %r1, align 4, !tbaa !3
  %conv17 = fpext float %22 to double
  %23 = load double* %pval, align 8, !tbaa !5
  %24 = load double* %zval, align 8, !tbaa !5
  %25 = load double* %eref, align 8, !tbaa !5
  %26 = load double* %qopt, align 8, !tbaa !5
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %log, i8* getelementptr inbounds ([87 x i8]* @.str19, i64 0, i64 0), double %21, double %conv17, double %23, double %24, double %25, double %26) #5
  %call19 = call i32 @fflush(%struct._IO_FILE* %log) #5
  %27 = load double* %alX, align 8, !tbaa !5
  %conv20 = fptrunc double %27 to float
  store float %conv20, float* %beta, align 4, !tbaa !3
  %28 = load double* %alY, align 8, !tbaa !5
  %conv22 = fptrunc double %28 to float
  %arrayidx23 = getelementptr inbounds float* %beta, i64 1
  store float %conv22, float* %arrayidx23, align 4, !tbaa !3
  %29 = load double* %alZ, align 8, !tbaa !5
  %conv24 = fptrunc double %29 to float
  %arrayidx25 = getelementptr inbounds float* %beta, i64 2
  store float %conv24, float* %arrayidx25, align 4, !tbaa !3
  %30 = load i32* %ix, align 4, !tbaa !4
  %31 = load i32* %iy, align 4, !tbaa !4
  %32 = load i32* %iz, align 4, !tbaa !4
  %call26 = call float*** @mk_rgrid(i32 %30, i32 %31, i32 %32) #5
  %33 = load i32* %bSym, align 4, !tbaa !4
  %tobool = icmp eq i32 %33, 0
  %34 = load i32* %igrid, align 4, !tbaa !4
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %div = sdiv i32 %34, 2
  %add = add nsw i32 %div, 1
  %35 = load i32* %arrayidx2, align 4, !tbaa !4
  %div29 = sdiv i32 %35, 2
  %add30 = add nsw i32 %div29, 1
  %36 = load i32* %arrayidx3, align 4, !tbaa !4
  %div32 = sdiv i32 %36, 2
  %add33 = add nsw i32 %div32, 1
  br label %if.end

if.else:                                          ; preds = %entry
  %37 = load i32* %arrayidx2, align 4, !tbaa !4
  %38 = load i32* %arrayidx3, align 4, !tbaa !4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %ixmax.0 = phi i32 [ %add, %if.then ], [ %34, %if.else ]
  %iymax.0 = phi i32 [ %add30, %if.then ], [ %37, %if.else ]
  %izmax.0 = phi i32 [ %add33, %if.then ], [ %38, %if.else ]
  %call37 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %log, i8* getelementptr inbounds ([26 x i8]* @.str20, i64 0, i64 0), i32 %ixmax.0, i32 %iymax.0, i32 %izmax.0) #5
  store i32 0, i32* %ix, align 4, !tbaa !4
  %cmp122 = icmp sgt i32 %ixmax.0, 0
  br i1 %cmp122, label %for.cond39.preheader.lr.ph, label %for.end59

for.cond39.preheader.lr.ph:                       ; preds = %if.end
  %cmp40121 = icmp sgt i32 %iymax.0, 0
  %cmp44120 = icmp sgt i32 %izmax.0, 0
  br label %for.cond39.preheader

for.cond39.preheader:                             ; preds = %for.cond39.preheader.lr.ph, %for.inc57
  %39 = phi i32 [ 0, %for.cond39.preheader.lr.ph ], [ %inc58, %for.inc57 ]
  store i32 0, i32* %iy, align 4, !tbaa !4
  br i1 %cmp40121, label %for.cond43.preheader, label %for.inc57

for.cond43.preheader:                             ; preds = %for.cond39.preheader, %for.inc54
  %40 = phi i32 [ %inc55, %for.inc54 ], [ 0, %for.cond39.preheader ]
  %41 = phi i32 [ %49, %for.inc54 ], [ %39, %for.cond39.preheader ]
  store i32 0, i32* %iz, align 4, !tbaa !4
  br i1 %cmp44120, label %for.body46, label %for.inc54

for.body46:                                       ; preds = %for.cond43.preheader, %for.body46
  %call47 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([4 x i8]* @.str21, i64 0, i64 0), double* %ddd) #5
  %42 = load double* %ddd, align 8, !tbaa !5
  %conv48 = fptrunc double %42 to float
  %43 = load i32* %iz, align 4, !tbaa !4
  %idxprom = sext i32 %43 to i64
  %44 = load i32* %iy, align 4, !tbaa !4
  %idxprom49 = sext i32 %44 to i64
  %45 = load i32* %ix, align 4, !tbaa !4
  %idxprom50 = sext i32 %45 to i64
  %arrayidx51 = getelementptr inbounds float*** %call26, i64 %idxprom50
  %46 = load float*** %arrayidx51, align 8, !tbaa !0
  %arrayidx52 = getelementptr inbounds float** %46, i64 %idxprom49
  %47 = load float** %arrayidx52, align 8, !tbaa !0
  %arrayidx53 = getelementptr inbounds float* %47, i64 %idxprom
  store float %conv48, float* %arrayidx53, align 4, !tbaa !3
  %inc = add nsw i32 %43, 1
  store i32 %inc, i32* %iz, align 4, !tbaa !4
  %cmp44 = icmp slt i32 %inc, %izmax.0
  br i1 %cmp44, label %for.body46, label %for.inc54

for.inc54:                                        ; preds = %for.body46, %for.cond43.preheader
  %48 = phi i32 [ %40, %for.cond43.preheader ], [ %44, %for.body46 ]
  %49 = phi i32 [ %41, %for.cond43.preheader ], [ %45, %for.body46 ]
  %inc55 = add nsw i32 %48, 1
  store i32 %inc55, i32* %iy, align 4, !tbaa !4
  %cmp40 = icmp slt i32 %inc55, %iymax.0
  br i1 %cmp40, label %for.cond43.preheader, label %for.inc57

for.inc57:                                        ; preds = %for.inc54, %for.cond39.preheader
  %50 = phi i32 [ %39, %for.cond39.preheader ], [ %49, %for.inc54 ]
  %inc58 = add nsw i32 %50, 1
  store i32 %inc58, i32* %ix, align 4, !tbaa !4
  %cmp = icmp slt i32 %inc58, %ixmax.0
  br i1 %cmp, label %for.cond39.preheader, label %for.end59

for.end59:                                        ; preds = %for.inc57, %if.end
  call void @ffclose(%struct._IO_FILE* %call) #5
  %51 = load i32* %igrid, align 4, !tbaa !4
  %52 = load i32* %arrayidx2, align 4, !tbaa !4
  %53 = load i32* %arrayidx3, align 4, !tbaa !4
  %54 = load double* %gx, align 8, !tbaa !5
  %conv63 = fptrunc double %54 to float
  %55 = load double* %gy, align 8, !tbaa !5
  %conv64 = fptrunc double %55 to float
  %56 = load double* %gz, align 8, !tbaa !5
  %conv65 = fptrunc double %56 to float
  %57 = load i32* %nalias, align 4, !tbaa !4
  %58 = load i32* %porder, align 4, !tbaa !4
  %59 = load i32* %niter, align 4, !tbaa !4
  %60 = load i32* %bSym, align 4, !tbaa !4
  %61 = load float* %r1, align 4, !tbaa !3
  %62 = load float* %rc, align 4, !tbaa !3
  %63 = load double* %pval, align 8, !tbaa !5
  %conv66 = fptrunc double %63 to float
  %64 = load double* %zval, align 8, !tbaa !5
  %conv67 = fptrunc double %64 to float
  %65 = load double* %eref, align 8, !tbaa !5
  %conv68 = fptrunc double %65 to float
  %66 = load double* %qopt, align 8, !tbaa !5
  %conv69 = fptrunc double %66 to float
  call void @wr_ghat(i8* getelementptr inbounds ([11 x i8]* @.str22, i64 0, i64 0), i32 %51, i32 %52, i32 %53, float %conv63, float %conv64, float %conv65, float*** %call26, i32 %57, i32 %58, i32 %59, i32 %60, float* %beta, float %61, float %62, float %conv66, float %conv67, float %conv68, float %conv69) #4
  %67 = load i32* %bSym, align 4, !tbaa !4
  %tobool70 = icmp eq i32 %67, 0
  br i1 %tobool70, label %if.end75, label %if.then71

if.then71:                                        ; preds = %for.end59
  %68 = load i32* %igrid, align 4, !tbaa !4
  %69 = load i32* %arrayidx2, align 4, !tbaa !4
  %70 = load i32* %arrayidx3, align 4, !tbaa !4
  call void @symmetrize_ghat(i32 %68, i32 %69, i32 %70, float*** %call26) #4
  br label %if.end75

if.end75:                                         ; preds = %for.end59, %if.then71
  %71 = call i64 @fwrite(i8* getelementptr inbounds ([35 x i8]* @.str23, i64 0, i64 0), i64 34, i64 1, %struct._IO_FILE* %log)
  ret float*** %call26
}
