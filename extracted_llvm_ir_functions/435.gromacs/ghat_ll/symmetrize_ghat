define void @symmetrize_ghat(i32 %nx, i32 %ny, i32 %nz, float*** nocapture readonly %ghat) #4 {
  %1 = icmp slt i32 %nx, -1
  br i1 %1, label %._crit_edge9, label %.lr.ph8

.lr.ph8:                                          ; preds = %0
  %2 = sdiv i32 %nx, 2
  %3 = sdiv i32 %ny, 2
  %4 = icmp slt i32 %ny, -1
  %5 = sdiv i32 %nz, 2
  %6 = icmp slt i32 %nz, -1
  %7 = zext i32 %nz to i64
  %8 = sext i32 %5 to i64
  %9 = zext i32 %ny to i64
  %10 = sext i32 %3 to i64
  %11 = zext i32 %nx to i64
  %12 = sext i32 %2 to i64
  br label %13

; <label>:13                                      ; preds = %._crit_edge5, %.lr.ph8
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %._crit_edge5 ], [ 0, %.lr.ph8 ]
  br i1 %4, label %._crit_edge5, label %.lr.ph4

.lr.ph4:                                          ; preds = %13
  %14 = sub i64 %11, %indvars.iv12
  %15 = trunc i64 %14 to i32
  %16 = srem i32 %15, %nx
  %17 = getelementptr inbounds float*** %ghat, i64 %indvars.iv12
  %18 = sext i32 %16 to i64
  %19 = getelementptr inbounds float*** %ghat, i64 %18
  br label %20

; <label>:20                                      ; preds = %._crit_edge, %.lr.ph4
  %indvars.iv10 = phi i64 [ %indvars.iv.next11, %._crit_edge ], [ 0, %.lr.ph4 ]
  br i1 %6, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %20
  %21 = sub i64 %9, %indvars.iv10
  %22 = trunc i64 %21 to i32
  %23 = srem i32 %22, %ny
  %24 = load float*** %17, align 8, !tbaa !8
  %25 = getelementptr inbounds float** %24, i64 %indvars.iv10
  %26 = load float** %25, align 8, !tbaa !8
  %27 = sext i32 %23 to i64
  %28 = getelementptr inbounds float** %24, i64 %27
  %29 = load float** %28, align 8, !tbaa !8
  %30 = load float*** %19, align 8, !tbaa !8
  %31 = getelementptr inbounds float** %30, i64 %indvars.iv10
  %32 = load float** %31, align 8, !tbaa !8
  %33 = getelementptr inbounds float** %30, i64 %27
  %34 = load float** %33, align 8, !tbaa !8
  br label %35

; <label>:35                                      ; preds = %35, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %35 ], [ 0, %.lr.ph ]
  %36 = sub i64 %7, %indvars.iv
  %37 = trunc i64 %36 to i32
  %38 = srem i32 %37, %nz
  %39 = getelementptr inbounds float* %26, i64 %indvars.iv
  %40 = bitcast float* %39 to i32*
  %41 = load i32* %40, align 4, !tbaa !2
  %42 = getelementptr inbounds float* %29, i64 %indvars.iv
  %43 = bitcast float* %42 to i32*
  store i32 %41, i32* %43, align 4, !tbaa !2
  %44 = sext i32 %38 to i64
  %45 = getelementptr inbounds float* %26, i64 %44
  %46 = bitcast float* %45 to i32*
  store i32 %41, i32* %46, align 4, !tbaa !2
  %47 = getelementptr inbounds float* %29, i64 %44
  %48 = bitcast float* %47 to i32*
  store i32 %41, i32* %48, align 4, !tbaa !2
  %49 = getelementptr inbounds float* %32, i64 %indvars.iv
  %50 = bitcast float* %49 to i32*
  store i32 %41, i32* %50, align 4, !tbaa !2
  %51 = getelementptr inbounds float* %34, i64 %indvars.iv
  %52 = bitcast float* %51 to i32*
  store i32 %41, i32* %52, align 4, !tbaa !2
  %53 = getelementptr inbounds float* %32, i64 %44
  %54 = bitcast float* %53 to i32*
  store i32 %41, i32* %54, align 4, !tbaa !2
  %55 = getelementptr inbounds float* %34, i64 %44
  %56 = bitcast float* %55 to i32*
  store i32 %41, i32* %56, align 4, !tbaa !2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %57 = icmp slt i64 %indvars.iv, %8
  br i1 %57, label %35, label %._crit_edge

._crit_edge:                                      ; preds = %35, %20
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1
  %58 = icmp slt i64 %indvars.iv10, %10
  br i1 %58, label %20, label %._crit_edge5

._crit_edge5:                                     ; preds = %._crit_edge, %13
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1
  %59 = icmp slt i64 %indvars.iv12, %12
  br i1 %59, label %13, label %._crit_edge9

._crit_edge9:                                     ; preds = %._crit_edge5, %0
  ret void
}
