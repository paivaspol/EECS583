define void @fwrite_trn(i32 %fp, i32 %step, float %t, float %lambda, [3 x float]* %box, i32 %natoms, [3 x float]* %x, [3 x float]* %v, [3 x float]* %f) #0 {
entry:
  %step.addr = alloca i32, align 4
  %t.addr = alloca float, align 4
  %lambda.addr = alloca float, align 4
  %natoms.addr = alloca i32, align 4
  call void @llvm.dbg.value(metadata !{i32 %fp}, i64 0, metadata !160), !dbg !414
  call void @llvm.dbg.value(metadata !{i32 %step}, i64 0, metadata !161), !dbg !414
  store i32 %step, i32* %step.addr, align 4, !tbaa !263
  call void @llvm.dbg.declare(metadata !{i32* %step.addr}, metadata !161), !dbg !414
  call void @llvm.dbg.value(metadata !{float %t}, i64 0, metadata !162), !dbg !414
  store float %t, float* %t.addr, align 4, !tbaa !278
  call void @llvm.dbg.declare(metadata !{float* %t.addr}, metadata !162), !dbg !414
  call void @llvm.dbg.value(metadata !{float %lambda}, i64 0, metadata !163), !dbg !414
  store float %lambda, float* %lambda.addr, align 4, !tbaa !278
  call void @llvm.dbg.declare(metadata !{float* %lambda.addr}, metadata !163), !dbg !414
  call void @llvm.dbg.value(metadata !{[3 x float]* %box}, i64 0, metadata !164), !dbg !415
  call void @llvm.dbg.value(metadata !{i32 %natoms}, i64 0, metadata !165), !dbg !415
  store i32 %natoms, i32* %natoms.addr, align 4, !tbaa !263
  call void @llvm.dbg.declare(metadata !{i32* %natoms.addr}, metadata !165), !dbg !415
  call void @llvm.dbg.value(metadata !{[3 x float]* %x}, i64 0, metadata !166), !dbg !415
  call void @llvm.dbg.value(metadata !{[3 x float]* %v}, i64 0, metadata !167), !dbg !415
  call void @llvm.dbg.value(metadata !{[3 x float]* %f}, i64 0, metadata !168), !dbg !415
  %call = call fastcc i32 @do_trn(i32 %fp, i32 0, i32* %step.addr, float* %t.addr, float* %lambda.addr, [3 x float]* %box, i32* %natoms.addr, [3 x float]* %x, [3 x float]* %v, [3 x float]* %f) #6, !dbg !416
  ret void, !dbg !417
}
