define internal fastcc i32 @do_trn(i32 %fp, i32 %bRead, i32* nocapture %step, float* nocapture %t, float* nocapture %lambda, [3 x float]* %box, i32* nocapture %natoms, [3 x float]* %x, [3 x float]* %v, [3 x float]* %f) #0 {
entry:
  %bOK = alloca i32, align 4
  %call = call i8* @save_calloc(i8* getelementptr inbounds ([3 x i8]* @.str17, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8]* @.str12, i64 0, i64 0), i32 161, i32 1, i32 60) #4
  %0 = bitcast i8* %call to %struct.t_trnheader*
  %tobool = icmp ne i32 %bRead, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %tobool1 = icmp ne [3 x float]* %box, null
  %conv = select i1 %tobool1, i32 36, i32 0
  %box_size = getelementptr inbounds i8* %call, i64 8
  %1 = bitcast i8* %box_size to i32*
  store i32 %conv, i32* %1, align 4, !tbaa !0
  %tobool2 = icmp eq [3 x float]* %x, null
  br i1 %tobool2, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.then
  %2 = load i32* %natoms, align 4, !tbaa !0
  %mul = mul i32 %2, 12
  br label %cond.end

cond.end:                                         ; preds = %if.then, %cond.true
  %cond4 = phi i32 [ %mul, %cond.true ], [ 0, %if.then ]
  %x_size = getelementptr inbounds i8* %call, i64 28
  %3 = bitcast i8* %x_size to i32*
  store i32 %cond4, i32* %3, align 4, !tbaa !0
  %tobool6 = icmp eq [3 x float]* %v, null
  br i1 %tobool6, label %cond.end11, label %cond.true7

cond.true7:                                       ; preds = %cond.end
  %4 = load i32* %natoms, align 4, !tbaa !0
  %mul9 = mul i32 %4, 12
  br label %cond.end11

cond.end11:                                       ; preds = %cond.end, %cond.true7
  %cond12 = phi i32 [ %mul9, %cond.true7 ], [ 0, %cond.end ]
  %v_size = getelementptr inbounds i8* %call, i64 32
  %5 = bitcast i8* %v_size to i32*
  store i32 %cond12, i32* %5, align 4, !tbaa !0
  %tobool14 = icmp eq [3 x float]* %f, null
  br i1 %tobool14, label %cond.end19, label %cond.true15

cond.true15:                                      ; preds = %cond.end11
  %6 = load i32* %natoms, align 4, !tbaa !0
  %mul17 = mul i32 %6, 12
  br label %cond.end19

cond.end19:                                       ; preds = %cond.end11, %cond.true15
  %cond20 = phi i32 [ %mul17, %cond.true15 ], [ 0, %cond.end11 ]
  %f_size = getelementptr inbounds i8* %call, i64 36
  %7 = bitcast i8* %f_size to i32*
  store i32 %cond20, i32* %7, align 4, !tbaa !0
  %8 = load i32* %natoms, align 4, !tbaa !0
  %natoms22 = getelementptr inbounds i8* %call, i64 40
  %9 = bitcast i8* %natoms22 to i32*
  store i32 %8, i32* %9, align 4, !tbaa !0
  %10 = load i32* %step, align 4, !tbaa !0
  %step23 = getelementptr inbounds i8* %call, i64 44
  %11 = bitcast i8* %step23 to i32*
  store i32 %10, i32* %11, align 4, !tbaa !0
  %nre = getelementptr inbounds i8* %call, i64 48
  %12 = bitcast i8* %nre to i32*
  store i32 0, i32* %12, align 4, !tbaa !0
  %13 = load float* %t, align 4, !tbaa !3
  %t24 = getelementptr inbounds i8* %call, i64 52
  %14 = bitcast i8* %t24 to float*
  store float %13, float* %14, align 4, !tbaa !3
  %15 = load float* %lambda, align 4, !tbaa !3
  %lambda25 = getelementptr inbounds i8* %call, i64 56
  %16 = bitcast i8* %lambda25 to float*
  store float %15, float* %16, align 4, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %cond.end19, %entry
  %call26 = call fastcc i32 @do_trnheader(i32 %fp, i32 %bRead, %struct.t_trnheader* %0, i32* %bOK) #5
  %tobool27 = icmp eq i32 %call26, 0
  br i1 %tobool27, label %return, label %if.end29

if.end29:                                         ; preds = %if.end
  br i1 %tobool, label %if.then31, label %if.end48

if.then31:                                        ; preds = %if.end29
  %natoms32 = getelementptr inbounds i8* %call, i64 40
  %17 = bitcast i8* %natoms32 to i32*
  %18 = load i32* %17, align 4, !tbaa !0
  store i32 %18, i32* %natoms, align 4, !tbaa !0
  %step33 = getelementptr inbounds i8* %call, i64 44
  %19 = bitcast i8* %step33 to i32*
  %20 = load i32* %19, align 4, !tbaa !0
  store i32 %20, i32* %step, align 4, !tbaa !0
  %t34 = getelementptr inbounds i8* %call, i64 52
  %21 = bitcast i8* %t34 to float*
  %22 = load float* %21, align 4, !tbaa !3
  store float %22, float* %t, align 4, !tbaa !3
  %lambda35 = getelementptr inbounds i8* %call, i64 56
  %23 = bitcast i8* %lambda35 to float*
  %24 = load float* %23, align 4, !tbaa !3
  store float %24, float* %lambda, align 4, !tbaa !3
  %ir_size = bitcast i8* %call to i32*
  %25 = load i32* %ir_size, align 4, !tbaa !0
  %tobool36 = icmp eq i32 %25, 0
  br i1 %tobool36, label %if.end38, label %if.then37

if.then37:                                        ; preds = %if.then31
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([21 x i8]* @.str18, i64 0, i64 0)) #4
  br label %if.end38

if.end38:                                         ; preds = %if.then31, %if.then37
  %e_size = getelementptr inbounds i8* %call, i64 4
  %26 = bitcast i8* %e_size to i32*
  %27 = load i32* %26, align 4, !tbaa !0
  %tobool39 = icmp eq i32 %27, 0
  br i1 %tobool39, label %if.end41, label %if.then40

if.then40:                                        ; preds = %if.end38
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([21 x i8]* @.str19, i64 0, i64 0)) #4
  br label %if.end41

if.end41:                                         ; preds = %if.end38, %if.then40
  %top_size = getelementptr inbounds i8* %call, i64 20
  %28 = bitcast i8* %top_size to i32*
  %29 = load i32* %28, align 4, !tbaa !0
  %tobool42 = icmp eq i32 %29, 0
  br i1 %tobool42, label %if.end44, label %if.then43

if.then43:                                        ; preds = %if.end41
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([21 x i8]* @.str20, i64 0, i64 0)) #4
  br label %if.end44

if.end44:                                         ; preds = %if.end41, %if.then43
  %sym_size = getelementptr inbounds i8* %call, i64 24
  %30 = bitcast i8* %sym_size to i32*
  %31 = load i32* %30, align 4, !tbaa !0
  %tobool45 = icmp eq i32 %31, 0
  br i1 %tobool45, label %if.end48, label %if.then46

if.then46:                                        ; preds = %if.end44
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([25 x i8]* @.str21, i64 0, i64 0)) #4
  br label %if.end48

if.end48:                                         ; preds = %if.end44, %if.then46, %if.end29
  %call49 = call fastcc i32 @do_htrn(i32 %bRead, %struct.t_trnheader* %0, [3 x float]* %box, [3 x float]* %x, [3 x float]* %v, [3 x float]* %f) #5
  store i32 %call49, i32* %bOK, align 4, !tbaa !0
  call void @save_free(i8* getelementptr inbounds ([3 x i8]* @.str17, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8]* @.str12, i64 0, i64 0), i32 191, i8* %call) #4
  %32 = load i32* %bOK, align 4, !tbaa !0
  br label %return

return:                                           ; preds = %if.end, %if.end48
  %retval.0 = phi i32 [ %32, %if.end48 ], [ 0, %if.end ]
  ret i32 %retval.0
}
