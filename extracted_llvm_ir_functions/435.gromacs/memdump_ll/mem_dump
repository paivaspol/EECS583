define void @mem_dump(%struct._IO_FILE* %log, i8* %title, i8* nocapture %mem, i32 %len) #0 {
entry:
  %s = alloca [17 x i8], align 16
  call void @llvm.dbg.value(metadata !{%struct._IO_FILE* %log}, i64 0, metadata !67), !dbg !94
  call void @llvm.dbg.value(metadata !{i8* %title}, i64 0, metadata !68), !dbg !94
  call void @llvm.dbg.value(metadata !{i8* %mem}, i64 0, metadata !69), !dbg !94
  call void @llvm.dbg.value(metadata !{i32 %len}, i64 0, metadata !70), !dbg !94
  call void @llvm.dbg.declare(metadata !{[17 x i8]* %s}, metadata !73), !dbg !95
  call void @llvm.dbg.value(metadata !{i8* %mem}, i64 0, metadata !77), !dbg !96
  call void @llvm.dbg.value(metadata !2, i64 0, metadata !72), !dbg !97
  %arrayidx = getelementptr inbounds [17 x i8]* %s, i64 0, i64 0, !dbg !98
  store i8 0, i8* %arrayidx, align 16, !dbg !98, !tbaa !99
  %tobool = icmp eq i32 %len, 0, !dbg !101
  %tobool1 = icmp eq %struct._IO_FILE* %log, null, !dbg !101
  %or.cond = or i1 %tobool, %tobool1, !dbg !101
  br i1 %or.cond, label %for.cond.preheader, label %if.then, !dbg !101

if.then:                                          ; preds = %entry
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %log, i8* getelementptr inbounds ([16 x i8]* @.str, i64 0, i64 0), i8* %title) #4, !dbg !102
  br label %for.cond.preheader, !dbg !102

for.cond.preheader:                               ; preds = %entry, %if.then
  %cmp41 = icmp sgt i32 %len, 0, !dbg !103
  br i1 %cmp41, label %for.body, label %for.end, !dbg !103

for.body:                                         ; preds = %for.cond.preheader, %if.end14
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end14 ], [ 0, %for.cond.preheader ]
  %index.042 = phi i32 [ %inc, %if.end14 ], [ 0, %for.cond.preheader ]
  %arrayidx2 = getelementptr inbounds i8* %mem, i64 %indvars.iv, !dbg !105
  %0 = load i8* %arrayidx2, align 1, !dbg !105, !tbaa !99
  call void @llvm.dbg.value(metadata !{i8 %0}, i64 0, metadata !80), !dbg !105
  %1 = and i32 %index.042, -17, !dbg !107
  %2 = icmp eq i32 %1, 0, !dbg !107
  br i1 %2, label %if.then5, label %if.end10, !dbg !107

if.then5:                                         ; preds = %for.body
  call fastcc void @print_chars(%struct._IO_FILE* %log, i8* %arrayidx, i32 %index.042) #5, !dbg !108
  br i1 %tobool1, label %if.end14, label %if.end10.thread39, !dbg !110

if.end10.thread39:                                ; preds = %if.then5
  %3 = trunc i64 %indvars.iv to i32, !dbg !111
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %log, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i32 %3) #4, !dbg !111
  br label %if.then12, !dbg !112

if.end10:                                         ; preds = %for.body
  br i1 %tobool1, label %if.end14, label %if.then12, !dbg !112

if.then12:                                        ; preds = %if.end10.thread39, %if.end10
  %index.140 = phi i32 [ 0, %if.end10.thread39 ], [ %index.042, %if.end10 ]
  %conv = zext i8 %0 to i32, !dbg !113
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %log, i8* getelementptr inbounds ([6 x i8]* @.str2, i64 0, i64 0), i32 %conv) #4, !dbg !113
  br label %if.end14, !dbg !113

if.end14:                                         ; preds = %if.then5, %if.end10, %if.then12
  %index.138 = phi i32 [ %index.042, %if.end10 ], [ %index.140, %if.then12 ], [ 0, %if.then5 ]
  tail call void @llvm.dbg.value(metadata !{i8 %0}, i64 0, metadata !114), !dbg !116
  %b.off.i = add i8 %0, -32, !dbg !117
  %4 = icmp ugt i8 %b.off.i, 94, !dbg !117
  %retval.0.i = select i1 %4, i8 46, i8 %0, !dbg !117
  %inc = add nsw i32 %index.138, 1, !dbg !115
  call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !72), !dbg !115
  %idxprom16 = sext i32 %index.138 to i64, !dbg !115
  %arrayidx17 = getelementptr inbounds [17 x i8]* %s, i64 0, i64 %idxprom16, !dbg !115
  store i8 %retval.0.i, i8* %arrayidx17, align 1, !dbg !115, !tbaa !99
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !103
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !103
  %exitcond = icmp eq i32 %lftr.wideiv, %len, !dbg !103
  br i1 %exitcond, label %for.end, label %for.body, !dbg !103

for.end:                                          ; preds = %if.end14, %for.cond.preheader
  %index.0.lcssa = phi i32 [ 0, %for.cond.preheader ], [ %inc, %if.end14 ]
  call fastcc void @print_chars(%struct._IO_FILE* %log, i8* %arrayidx, i32 %index.0.lcssa) #5, !dbg !118
  %call20 = call i32 @fflush(%struct._IO_FILE* %log) #4, !dbg !119
  ret void, !dbg !120
}
