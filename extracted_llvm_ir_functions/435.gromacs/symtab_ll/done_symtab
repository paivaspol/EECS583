define void @done_symtab(%struct.t_symtab* nocapture %symtab) #0 {
entry:
  %symbuf1 = getelementptr inbounds %struct.t_symtab* %symtab, i64 0, i32 1
  %0 = load %struct.symbuf** %symbuf1, align 8, !tbaa !0
  %cmp21 = icmp eq %struct.symbuf* %0, null
  br i1 %cmp21, label %while.end, label %for.cond.preheader.lr.ph

for.cond.preheader.lr.ph:                         ; preds = %entry
  %nr = getelementptr inbounds %struct.t_symtab* %symtab, i64 0, i32 0
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %for.cond.preheader.lr.ph, %for.end
  %symbuf.022 = phi %struct.symbuf* [ %0, %for.cond.preheader.lr.ph ], [ %11, %for.end ]
  %bufsize = getelementptr inbounds %struct.symbuf* %symbuf.022, i64 0, i32 0
  %1 = load i32* %bufsize, align 4, !tbaa !3
  %cmp219 = icmp sgt i32 %1, 0
  %buf = getelementptr inbounds %struct.symbuf* %symbuf.022, i64 0, i32 1
  br i1 %cmp219, label %land.rhs, label %for.end

land.rhs:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %i.020 = phi i32 [ %inc, %for.body ], [ 0, %for.cond.preheader ]
  %2 = load i32* %nr, align 4, !tbaa !3
  %3 = trunc i64 %indvars.iv to i32
  %cmp3 = icmp slt i32 %3, %2
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %land.rhs
  %4 = load i8*** %buf, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i8** %4, i64 %indvars.iv
  %5 = load i8** %arrayidx, align 8, !tbaa !0
  tail call void @save_free(i8* getelementptr inbounds ([15 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str3, i64 0, i64 0), i32 175, i8* %5) #5
  %indvars.iv.next = add i64 %indvars.iv, 1
  %inc = add nsw i32 %i.020, 1
  %6 = load i32* %bufsize, align 4, !tbaa !3
  %7 = trunc i64 %indvars.iv.next to i32
  %cmp2 = icmp slt i32 %7, %6
  br i1 %cmp2, label %land.rhs, label %for.end

for.end:                                          ; preds = %for.cond.preheader, %for.body, %land.rhs
  %i.0.lcssa = phi i32 [ %i.020, %land.rhs ], [ %inc, %for.body ], [ 0, %for.cond.preheader ]
  %8 = load i32* %nr, align 4, !tbaa !3
  %sub = sub nsw i32 %8, %i.0.lcssa
  store i32 %sub, i32* %nr, align 4, !tbaa !3
  %9 = load i8*** %buf, align 8, !tbaa !0
  %10 = bitcast i8** %9 to i8*
  tail call void @save_free(i8* getelementptr inbounds ([12 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str3, i64 0, i64 0), i32 177, i8* %10) #5
  %next = getelementptr inbounds %struct.symbuf* %symbuf.022, i64 0, i32 2
  %11 = load %struct.symbuf** %next, align 8, !tbaa !0
  %12 = bitcast %struct.symbuf* %symbuf.022 to i8*
  tail call void @save_free(i8* getelementptr inbounds ([8 x i8]* @.str5, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8]* @.str3, i64 0, i64 0), i32 180, i8* %12) #5
  %cmp = icmp eq %struct.symbuf* %11, null
  br i1 %cmp, label %while.end, label %for.cond.preheader

while.end:                                        ; preds = %for.end, %entry
  store %struct.symbuf* null, %struct.symbuf** %symbuf1, align 8, !tbaa !0
  ret void
}
