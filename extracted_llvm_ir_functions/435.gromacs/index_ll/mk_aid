define i32* @mk_aid(%struct.t_atoms* nocapture %atoms, i32* nocapture %restp, i32 %res, i32* nocapture %nra, i32 %bTrue) #0 {
entry:
  %nr = getelementptr inbounds %struct.t_atoms* %atoms, i64 0, i32 0
  %0 = load i32* %nr, align 4, !tbaa !3
  %call = tail call i8* @save_calloc(i8* getelementptr inbounds ([2 x i8]* @.str10, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8]* @.str1, i64 0, i64 0), i32 155, i32 %0, i32 4) #6
  %1 = bitcast i8* %call to i32*
  store i32 0, i32* %nra, align 4, !tbaa !3
  %2 = load i32* %nr, align 4, !tbaa !3
  %cmp17 = icmp sgt i32 %2, 0
  br i1 %cmp17, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %atom = getelementptr inbounds %struct.t_atoms* %atoms, i64 0, i32 1
  %.pre = load %struct.t_atom** %atom, align 8, !tbaa !0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %3 = phi i32 [ %2, %for.body.lr.ph ], [ %8, %for.inc ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %resnr = getelementptr inbounds %struct.t_atom* %.pre, i64 %indvars.iv, i32 7
  %4 = load i32* %resnr, align 4, !tbaa !3
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds i32* %restp, i64 %idxprom2
  %5 = load i32* %arrayidx3, align 4, !tbaa !1
  %cmp4 = icmp eq i32 %5, %res
  %conv = zext i1 %cmp4 to i32
  %cmp5 = icmp eq i32 %conv, %bTrue
  br i1 %cmp5, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %6 = load i32* %nra, align 4, !tbaa !3
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %nra, align 4, !tbaa !3
  %idxprom7 = sext i32 %6 to i64
  %arrayidx8 = getelementptr inbounds i32* %1, i64 %idxprom7
  %7 = trunc i64 %indvars.iv to i32
  store i32 %7, i32* %arrayidx8, align 4, !tbaa !3
  %.pre19 = load i32* %nr, align 4, !tbaa !3
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %8 = phi i32 [ %3, %for.body ], [ %.pre19, %if.then ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %9 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %9, %8
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %entry
  ret i32* %1
}
