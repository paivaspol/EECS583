define void @add_grp(%struct.t_block* nocapture %b, i8*** nocapture %gnames, i32 %nra, i32* nocapture %a, i8* %name) #0 {
entry:
  %index = getelementptr inbounds %struct.t_block* %b, i64 0, i32 2
  %0 = load i32** %index, align 8, !tbaa !0
  %1 = bitcast i32* %0 to i8*
  %nr = getelementptr inbounds %struct.t_block* %b, i64 0, i32 1
  %2 = load i32* %nr, align 4, !tbaa !3
  %add = shl i32 %2, 2
  %mul = add i32 %add, 8
  %call = tail call i8* @save_realloc(i8* getelementptr inbounds ([9 x i8]* @.str7, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8]* @.str1, i64 0, i64 0), i32 102, i8* %1, i32 %mul) #6
  %3 = bitcast i8* %call to i32*
  store i32* %3, i32** %index, align 8, !tbaa !0
  %4 = load i8*** %gnames, align 8, !tbaa !0
  %5 = bitcast i8** %4 to i8*
  %6 = load i32* %nr, align 4, !tbaa !3
  %add4 = shl i32 %6, 3
  %mul6 = add i32 %add4, 8
  %call8 = tail call i8* @save_realloc(i8* getelementptr inbounds ([8 x i8]* @.str8, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8]* @.str1, i64 0, i64 0), i32 103, i8* %5, i32 %mul6) #6
  %7 = bitcast i8* %call8 to i8**
  store i8** %7, i8*** %gnames, align 8, !tbaa !0
  %call9 = tail call i8* @gmx_strdup(i8* %name) #6
  %8 = load i32* %nr, align 4, !tbaa !3
  %idxprom = sext i32 %8 to i64
  %9 = load i8*** %gnames, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i8** %9, i64 %idxprom
  store i8* %call9, i8** %arrayidx, align 8, !tbaa !0
  %a11 = getelementptr inbounds %struct.t_block* %b, i64 0, i32 4
  %10 = load i32** %a11, align 8, !tbaa !0
  %11 = bitcast i32* %10 to i8*
  %nra12 = getelementptr inbounds %struct.t_block* %b, i64 0, i32 3
  %12 = load i32* %nra12, align 4, !tbaa !3
  %add13 = add nsw i32 %12, %nra
  %mul15 = shl i32 %add13, 2
  %call17 = tail call i8* @save_realloc(i8* getelementptr inbounds ([5 x i8]* @.str9, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8]* @.str1, i64 0, i64 0), i32 106, i8* %11, i32 %mul15) #6
  %13 = bitcast i8* %call17 to i32*
  store i32* %13, i32** %a11, align 8, !tbaa !0
  %cmp52 = icmp sgt i32 %nra, 0
  br i1 %cmp52, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %arrayidx21 = getelementptr inbounds i32* %a, i64 %indvars.iv
  %14 = load i32* %arrayidx21, align 4, !tbaa !3
  %15 = load i32* %nra12, align 4, !tbaa !3
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %nra12, align 4, !tbaa !3
  %idxprom23 = sext i32 %15 to i64
  %arrayidx25 = getelementptr inbounds i32* %13, i64 %idxprom23
  store i32 %14, i32* %arrayidx25, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nra
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %16 = load i32* %nr, align 4, !tbaa !3
  %inc28 = add nsw i32 %16, 1
  store i32 %inc28, i32* %nr, align 4, !tbaa !3
  %17 = load i32* %nra12, align 4, !tbaa !3
  %idxprom31 = sext i32 %inc28 to i64
  %18 = load i32** %index, align 8, !tbaa !0
  %arrayidx33 = getelementptr inbounds i32* %18, i64 %idxprom31
  store i32 %17, i32* %arrayidx33, align 4, !tbaa !3
  ret void
}
