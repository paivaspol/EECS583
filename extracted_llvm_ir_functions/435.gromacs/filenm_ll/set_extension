define internal fastcc void @set_extension(i8* %buf, i32 %ftp) #0 {
entry:
  %idxprom = sext i32 %ftp to i64
  %call = tail call i64 @strlen(i8* %buf) #7
  %conv = trunc i64 %call to i32
  %ext = getelementptr inbounds [46 x %struct.t_deffile]* @deffile, i64 0, i64 %idxprom, i32 1
  %0 = load i8** %ext, align 8, !tbaa !0
  %call1 = tail call i64 @strlen(i8* %0) #7
  %conv2 = trunc i64 %call1 to i32
  %cmp = icmp sgt i32 %conv, %conv2
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %sub = sub i64 %call, %call1
  %sext = shl i64 %sub, 32
  %idxprom4 = ashr exact i64 %sext, 32
  %arrayidx5 = getelementptr inbounds i8* %buf, i64 %idxprom4
  %call7 = tail call i32 @gmx_strcasecmp(i8* %arrayidx5, i8* %0) #6
  %cmp8 = icmp eq i32 %call7, 0
  br i1 %cmp8, label %if.end, label %lor.lhs.false.if.then_crit_edge

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  %.pre = load i8** %ext, align 8, !tbaa !0
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %entry
  %1 = phi i8* [ %.pre, %lor.lhs.false.if.then_crit_edge ], [ %0, %entry ]
  %call11 = tail call i8* @strcat(i8* %buf, i8* %1) #6
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false, %if.then
  ret void
}
