define void @parse_file_args(i32* nocapture %argc, i8** nocapture %argv, i32 %nf, %struct.t_filenm* nocapture %fnm, i32 %bKeep) #3 {
  %1 = icmp sgt i32 %nf, 0
  br i1 %1, label %.lr.ph.i, label %check_opts.exit._crit_edge

.lr.ph.i:                                         ; preds = %0
  %2 = add i32 %nf, -1
  br label %3

; <label>:3                                       ; preds = %18, %.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %.lr.ph.i ], [ %indvars.iv.next.i, %18 ]
  %4 = getelementptr inbounds %struct.t_filenm* %fnm, i64 %indvars.iv.i, i32 0
  %5 = load i32* %4, align 4, !tbaa !29
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.t_filenm* %fnm, i64 %indvars.iv.i, i32 1
  %8 = load i8** %7, align 8, !tbaa !24
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %18

; <label>:10                                      ; preds = %3
  %11 = getelementptr inbounds [46 x %struct.t_deffile]* @deffile, i64 0, i64 %6, i32 3
  %12 = load i8** %11, align 8, !tbaa !23
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %17

; <label>:14                                      ; preds = %10
  %15 = getelementptr inbounds [46 x %struct.t_deffile]* @deffile, i64 0, i64 %6, i32 1
  %16 = load i8** %15, align 8, !tbaa !17
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([45 x i8]* @.str171, i64 0, i64 0), i8* %16, i32 %5) #9
  br label %18

; <label>:17                                      ; preds = %10
  store i8* %12, i8** %7, align 8, !tbaa !24
  br label %18

; <label>:18                                      ; preds = %17, %14, %3
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %lftr.wideiv28 = trunc i64 %indvars.iv.i to i32
  %exitcond29 = icmp eq i32 %lftr.wideiv28, %2
  br i1 %exitcond29, label %check_opts.exit.preheader, label %3

check_opts.exit.preheader:                        ; preds = %18
  br i1 %1, label %.lr.ph18, label %check_opts.exit._crit_edge

.lr.ph18:                                         ; preds = %check_opts.exit.preheader
  %19 = add i32 %nf, -1
  br label %check_opts.exit

check_opts.exit:                                  ; preds = %check_opts.exit, %.lr.ph18
  %indvars.iv24 = phi i64 [ 0, %.lr.ph18 ], [ %indvars.iv.next25, %check_opts.exit ]
  %20 = getelementptr inbounds %struct.t_filenm* %fnm, i64 %indvars.iv24, i32 3
  %21 = load i64* %20, align 8, !tbaa !28
  %22 = and i64 %21, -2
  store i64 %22, i64* %20, align 8, !tbaa !28
  %indvars.iv.next25 = add nuw nsw i64 %indvars.iv24, 1
  %lftr.wideiv26 = trunc i64 %indvars.iv24 to i32
  %exitcond27 = icmp eq i32 %lftr.wideiv26, %19
  br i1 %exitcond27, label %check_opts.exit._crit_edge, label %check_opts.exit

check_opts.exit._crit_edge:                       ; preds = %check_opts.exit, %0, %check_opts.exit.preheader
  %23 = load i32* %argc, align 4, !tbaa !22
  %24 = icmp sgt i32 %23, 1
  br i1 %24, label %25, label %88

; <label>:25                                      ; preds = %check_opts.exit._crit_edge
  %26 = add nsw i32 %23, 1
  %27 = tail call i8* @save_calloc(i8* getelementptr inbounds ([8 x i8]* @.str44, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8]* @.str12, i64 0, i64 0), i32 520, i32 %26, i32 4) #9
  %28 = bitcast i8* %27 to i32*
  %29 = sext i32 %nf to i64
  br label %30

; <label>:30                                      ; preds = %.loopexit, %25
  %i.1 = phi i32 [ 1, %25 ], [ %.i.2, %.loopexit ]
  br i1 %1, label %.lr.ph14, label %.loopexit

.lr.ph14:                                         ; preds = %30
  %31 = sext i32 %i.1 to i64
  %32 = getelementptr inbounds i8** %argv, i64 %31
  %33 = load i8** %32, align 8, !tbaa !14
  br label %34

; <label>:34                                      ; preds = %.lr.ph14, %61
  %indvars.iv22 = phi i64 [ 0, %.lr.ph14 ], [ %indvars.iv.next23, %61 ]
  %35 = getelementptr inbounds %struct.t_filenm* %fnm, i64 %indvars.iv22, i32 1
  %36 = load i8** %35, align 8, !tbaa !24
  %37 = tail call i32 @strcmp(i8* %33, i8* %36) #9
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %61

; <label>:39                                      ; preds = %34
  %40 = trunc i64 %indvars.iv22 to i32
  %41 = getelementptr inbounds %struct.t_filenm* %fnm, i64 %indvars.iv22
  %42 = getelementptr inbounds %struct.t_filenm* %fnm, i64 %indvars.iv22, i32 3
  %43 = load i64* %42, align 8, !tbaa !28
  %44 = or i64 %43, 1
  store i64 %44, i64* %42, align 8, !tbaa !28
  %45 = getelementptr inbounds i32* %28, i64 %31
  store i32 1, i32* %45, align 4, !tbaa !22
  %46 = add nsw i32 %i.1, 1
  %47 = load i32* %argc, align 4, !tbaa !22
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %49, label %58

; <label>:49                                      ; preds = %39
  %50 = sext i32 %46 to i64
  %51 = getelementptr inbounds i8** %argv, i64 %50
  %52 = load i8** %51, align 8, !tbaa !14
  %53 = load i8* %52, align 1, !tbaa !13
  %54 = icmp eq i8 %53, 45
  br i1 %54, label %58, label %55

; <label>:55                                      ; preds = %49
  tail call fastcc void @set_filenm(%struct.t_filenm* %41, i8* %52, i32 1) #10
  %56 = getelementptr inbounds i32* %28, i64 %50
  store i32 1, i32* %56, align 4, !tbaa !22
  %57 = add nsw i32 %i.1, 2
  br label %.loopexit

; <label>:58                                      ; preds = %49, %39
  %59 = getelementptr inbounds %struct.t_filenm* %fnm, i64 %indvars.iv22, i32 2
  %60 = load i8** %59, align 8, !tbaa !27
  tail call fastcc void @set_filenm(%struct.t_filenm* %41, i8* %60, i32 0) #10
  br label %.loopexit

; <label>:61                                      ; preds = %34
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1
  %62 = icmp slt i64 %indvars.iv.next23, %29
  br i1 %62, label %34, label %..loopexit_crit_edge

..loopexit_crit_edge:                             ; preds = %61
  %63 = trunc i64 %indvars.iv.next23 to i32
  br label %.loopexit

.loopexit:                                        ; preds = %30, %..loopexit_crit_edge, %55, %58
  %j.07 = phi i32 [ %40, %55 ], [ %40, %58 ], [ %63, %..loopexit_crit_edge ], [ 0, %30 ]
  %i.2 = phi i32 [ %57, %55 ], [ %46, %58 ], [ %i.1, %..loopexit_crit_edge ], [ %i.1, %30 ]
  %64 = icmp eq i32 %j.07, %nf
  %65 = zext i1 %64 to i32
  %.i.2 = add nsw i32 %i.2, %65
  %66 = load i32* %argc, align 4, !tbaa !22
  %67 = icmp slt i32 %.i.2, %66
  br i1 %67, label %30, label %68

; <label>:68                                      ; preds = %.loopexit
  %69 = icmp eq i32 %bKeep, 0
  br i1 %69, label %.preheader, label %87

.preheader:                                       ; preds = %68
  %70 = icmp slt i32 %66, 0
  br i1 %70, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.preheader
  %71 = sext i32 %66 to i64
  br label %72

; <label>:72                                      ; preds = %84, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %84 ], [ 0, %.lr.ph ]
  %j.110 = phi i32 [ %j.2, %84 ], [ 0, %.lr.ph ]
  %73 = getelementptr inbounds i32* %28, i64 %indvars.iv
  %74 = load i32* %73, align 4, !tbaa !22
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %84

; <label>:76                                      ; preds = %72
  %77 = getelementptr inbounds i8** %argv, i64 %indvars.iv
  %78 = bitcast i8** %77 to i64*
  %79 = load i64* %78, align 8, !tbaa !14
  %80 = add nsw i32 %j.110, 1
  %81 = sext i32 %j.110 to i64
  %82 = getelementptr inbounds i8** %argv, i64 %81
  %83 = bitcast i8** %82 to i64*
  store i64 %79, i64* %83, align 8, !tbaa !14
  br label %84

; <label>:84                                      ; preds = %72, %76
  %j.2 = phi i32 [ %j.110, %72 ], [ %80, %76 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %85 = icmp slt i64 %indvars.iv, %71
  br i1 %85, label %72, label %._crit_edge

._crit_edge:                                      ; preds = %84, %.preheader
  %j.1.lcssa = phi i32 [ 0, %.preheader ], [ %j.2, %84 ]
  %86 = add nsw i32 %j.1.lcssa, -1
  store i32 %86, i32* %argc, align 4, !tbaa !22
  br label %87

; <label>:87                                      ; preds = %68, %._crit_edge
  tail call void @save_free(i8* getelementptr inbounds ([8 x i8]* @.str44, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8]* @.str12, i64 0, i64 0), i32 552, i8* %27) #9
  br label %88

; <label>:88                                      ; preds = %87, %check_opts.exit._crit_edge
  br i1 %1, label %.lr.ph.i1, label %set_filenms.exit

.lr.ph.i1:                                        ; preds = %88
  %89 = add i32 %nf, -1
  br label %90

; <label>:90                                      ; preds = %99, %.lr.ph.i1
  %indvars.iv.i2 = phi i64 [ 0, %.lr.ph.i1 ], [ %indvars.iv.next.i3, %99 ]
  %91 = getelementptr inbounds %struct.t_filenm* %fnm, i64 %indvars.iv.i2, i32 3
  %92 = load i64* %91, align 8, !tbaa !28
  %93 = and i64 %92, 1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %99

; <label>:95                                      ; preds = %90
  %96 = getelementptr inbounds %struct.t_filenm* %fnm, i64 %indvars.iv.i2
  %97 = getelementptr inbounds %struct.t_filenm* %fnm, i64 %indvars.iv.i2, i32 2
  %98 = load i8** %97, align 8, !tbaa !27
  tail call fastcc void @set_filenm(%struct.t_filenm* %96, i8* %98, i32 0) #9
  br label %99

; <label>:99                                      ; preds = %95, %90
  %indvars.iv.next.i3 = add nuw nsw i64 %indvars.iv.i2, 1
  %lftr.wideiv = trunc i64 %indvars.iv.i2 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %89
  br i1 %exitcond, label %set_filenms.exit, label %90

set_filenms.exit:                                 ; preds = %99, %88
  ret void
}
