define internal fastcc void @add_filters(i32* nocapture %n, i32 %nf, i32* nocapture %ftp) #0 {
entry:
  %buf = alloca [8 x i8], align 1
  store i32 8072746, i32* bitcast ([128 x i8]* @ftp2filter.filter to i32*), align 16
  %cmp4 = icmp sgt i32 %nf, 0
  br i1 %cmp4, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %arraydecay = getelementptr inbounds [8 x i8]* %buf, i64 0, i64 0
  br label %for.body

for.body:                                         ; preds = %if.end, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end ]
  %arrayidx = getelementptr inbounds i32* %ftp, i64 %indvars.iv
  %0 = load i32* %arrayidx, align 4, !tbaa !3
  %1 = icmp ult i32 %0, 46
  br i1 %1, label %if.then.i, label %ftp2ext.exit

if.then.i:                                        ; preds = %for.body
  %idxprom.i = sext i32 %0 to i64
  %ext.i = getelementptr inbounds [46 x %struct.t_deffile]* @deffile, i64 0, i64 %idxprom.i, i32 1
  %2 = load i8** %ext.i, align 8, !tbaa !0
  %add.ptr.i = getelementptr inbounds i8* %2, i64 1
  br label %ftp2ext.exit

ftp2ext.exit:                                     ; preds = %for.body, %if.then.i
  %retval.0.i = phi i8* [ %add.ptr.i, %if.then.i ], [ getelementptr inbounds ([8 x i8]* @.str2, i64 0, i64 0), %for.body ]
  %strlen1 = call i64 @strlen(i8* %retval.0.i)
  %leninc = add i64 %strlen1, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %retval.0.i, i64 %leninc, i32 1, i1 false)
  %3 = load i32* %n, align 4, !tbaa !3
  %cmp3 = icmp sgt i32 %3, 0
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %ftp2ext.exit
  %strlen2 = call i64 @strlen(i8* getelementptr inbounds ([128 x i8]* @ftp2filter.filter, i64 0, i64 0))
  %endptr3 = getelementptr [128 x i8]* @ftp2filter.filter, i64 0, i64 %strlen2
  %4 = bitcast i8* %endptr3 to i16*
  store i16 44, i16* %4, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %ftp2ext.exit
  %call6 = call i8* @strcat(i8* getelementptr inbounds ([128 x i8]* @ftp2filter.filter, i64 0, i64 0), i8* %arraydecay) #6
  %5 = load i32* %n, align 4, !tbaa !3
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %n, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nf
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %if.end, %entry
  %strlen = call i64 @strlen(i8* getelementptr inbounds ([128 x i8]* @ftp2filter.filter, i64 0, i64 0))
  %endptr = getelementptr [128 x i8]* @ftp2filter.filter, i64 0, i64 %strlen
  %6 = bitcast i8* %endptr to i16*
  store i16 125, i16* %6, align 1
  ret void
}
