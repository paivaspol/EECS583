define internal fastcc void @calc_nxyz(i32 %nx, i32 %ny, i32 %nz, i32** nocapture %nnx, i32** nocapture %nny, i32** nocapture %nnz) #1 {
  %1 = mul nsw i32 %nx, 3
  %2 = tail call i8* @save_calloc(i8* getelementptr inbounds ([5 x i8]* @.str21, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8]* @.str4, i64 0, i64 0), i32 138, i32 %1, i32 4) #6
  %3 = bitcast i32** %nnx to i8**
  store i8* %2, i8** %3, align 8, !tbaa !8
  %4 = mul nsw i32 %ny, 3
  %5 = tail call i8* @save_calloc(i8* getelementptr inbounds ([5 x i8]* @.str22, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8]* @.str4, i64 0, i64 0), i32 139, i32 %4, i32 4) #6
  %6 = bitcast i32** %nny to i8**
  store i8* %5, i8** %6, align 8, !tbaa !8
  %7 = mul nsw i32 %nz, 3
  %8 = tail call i8* @save_calloc(i8* getelementptr inbounds ([5 x i8]* @.str23, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8]* @.str4, i64 0, i64 0), i32 140, i32 %7, i32 4) #6
  %9 = bitcast i32** %nnz to i8**
  store i8* %8, i8** %9, align 8, !tbaa !8
  %10 = icmp sgt i32 %nx, 0
  %11 = bitcast i8* %8 to i32*
  br i1 %10, label %.lr.ph7, label %.preheader1

.lr.ph7:                                          ; preds = %0
  %12 = load i32** %nnx, align 8, !tbaa !8
  %13 = sext i32 %1 to i64
  br label %17

.preheader1:                                      ; preds = %17, %0
  %14 = icmp sgt i32 %ny, 0
  br i1 %14, label %.lr.ph4, label %.preheader

.lr.ph4:                                          ; preds = %.preheader1
  %15 = load i32** %nny, align 8, !tbaa !8
  %16 = sext i32 %4 to i64
  br label %24

; <label>:17                                      ; preds = %.lr.ph7, %17
  %indvars.iv10 = phi i64 [ 0, %.lr.ph7 ], [ %indvars.iv.next11, %17 ]
  %18 = trunc i64 %indvars.iv10 to i32
  %19 = srem i32 %18, %nx
  %20 = getelementptr inbounds i32* %12, i64 %indvars.iv10
  store i32 %19, i32* %20, align 4, !tbaa !6
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1
  %21 = icmp slt i64 %indvars.iv.next11, %13
  br i1 %21, label %17, label %.preheader1

.preheader:                                       ; preds = %24, %.preheader1
  %22 = icmp sgt i32 %nz, 0
  br i1 %22, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader
  %23 = sext i32 %7 to i64
  br label %29

; <label>:24                                      ; preds = %.lr.ph4, %24
  %indvars.iv8 = phi i64 [ 0, %.lr.ph4 ], [ %indvars.iv.next9, %24 ]
  %25 = trunc i64 %indvars.iv8 to i32
  %26 = srem i32 %25, %ny
  %27 = getelementptr inbounds i32* %15, i64 %indvars.iv8
  store i32 %26, i32* %27, align 4, !tbaa !6
  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1
  %28 = icmp slt i64 %indvars.iv.next9, %16
  br i1 %28, label %24, label %.preheader

; <label>:29                                      ; preds = %.lr.ph, %29
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %29 ]
  %30 = trunc i64 %indvars.iv to i32
  %31 = srem i32 %30, %nz
  %32 = getelementptr inbounds i32* %11, i64 %indvars.iv
  store i32 %31, i32* %32, align 4, !tbaa !6
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %33 = icmp slt i64 %indvars.iv.next, %23
  br i1 %33, label %29, label %._crit_edge

._crit_edge:                                      ; preds = %29, %.preheader
  ret void
}
