define internal fastcc void @calc_nxyz(i32 %nx, i32 %ny, i32 %nz, i32** nocapture %nnx, i32** nocapture %nny, i32** nocapture %nnz) #2 {
  tail call void @llvm.dbg.value(metadata i32 %nx, i64 0, metadata !622, metadata !695), !dbg !978
  tail call void @llvm.dbg.value(metadata i32 %ny, i64 0, metadata !623, metadata !695), !dbg !979
  tail call void @llvm.dbg.value(metadata i32 %nz, i64 0, metadata !624, metadata !695), !dbg !980
  tail call void @llvm.dbg.value(metadata i32** %nnx, i64 0, metadata !625, metadata !695), !dbg !981
  tail call void @llvm.dbg.value(metadata i32** %nny, i64 0, metadata !626, metadata !695), !dbg !982
  tail call void @llvm.dbg.value(metadata i32** %nnz, i64 0, metadata !627, metadata !695), !dbg !983
  %1 = mul nsw i32 %nx, 3, !dbg !984
  %2 = tail call i8* @save_calloc(i8* getelementptr inbounds ([5 x i8]* @.str21, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8]* @.str4, i64 0, i64 0), i32 138, i32 %1, i32 4) #7, !dbg !984
  %3 = bitcast i32** %nnx to i8**, !dbg !984
  store i8* %2, i8** %3, align 8, !dbg !984, !tbaa !949
  %4 = mul nsw i32 %ny, 3, !dbg !985
  %5 = tail call i8* @save_calloc(i8* getelementptr inbounds ([5 x i8]* @.str22, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8]* @.str4, i64 0, i64 0), i32 139, i32 %4, i32 4) #7, !dbg !985
  %6 = bitcast i32** %nny to i8**, !dbg !985
  store i8* %5, i8** %6, align 8, !dbg !985, !tbaa !949
  %7 = mul nsw i32 %nz, 3, !dbg !986
  %8 = tail call i8* @save_calloc(i8* getelementptr inbounds ([5 x i8]* @.str23, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8]* @.str4, i64 0, i64 0), i32 140, i32 %7, i32 4) #7, !dbg !986
  %9 = bitcast i32** %nnz to i8**, !dbg !986
  store i8* %8, i8** %9, align 8, !dbg !986, !tbaa !949
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !628, metadata !695), !dbg !987
  %10 = icmp sgt i32 %nx, 0, !dbg !988
  %11 = bitcast i8* %8 to i32*
  br i1 %10, label %.lr.ph7, label %.preheader1, !dbg !991

.lr.ph7:                                          ; preds = %0
  %12 = load i32** %nnx, align 8, !dbg !992, !tbaa !949
  %13 = sext i32 %1 to i64, !dbg !991
  br label %17, !dbg !991

.preheader1:                                      ; preds = %17, %0
  %14 = icmp sgt i32 %ny, 0, !dbg !993
  br i1 %14, label %.lr.ph4, label %.preheader, !dbg !996

.lr.ph4:                                          ; preds = %.preheader1
  %15 = load i32** %nny, align 8, !dbg !997, !tbaa !949
  %16 = sext i32 %4 to i64, !dbg !996
  br label %24, !dbg !996

; <label>:17                                      ; preds = %.lr.ph7, %17
  %indvars.iv10 = phi i64 [ 0, %.lr.ph7 ], [ %indvars.iv.next11, %17 ]
  %18 = trunc i64 %indvars.iv10 to i32, !dbg !998
  %19 = srem i32 %18, %nx, !dbg !998
  %20 = getelementptr inbounds i32* %12, i64 %indvars.iv10, !dbg !999
  store i32 %19, i32* %20, align 4, !dbg !1000, !tbaa !742
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1, !dbg !991
  %21 = icmp slt i64 %indvars.iv.next11, %13, !dbg !988
  br i1 %21, label %17, label %.preheader1, !dbg !991

.preheader:                                       ; preds = %24, %.preheader1
  %22 = icmp sgt i32 %nz, 0, !dbg !1001
  br i1 %22, label %.lr.ph, label %._crit_edge, !dbg !1004

.lr.ph:                                           ; preds = %.preheader
  %23 = sext i32 %7 to i64, !dbg !1004
  br label %29, !dbg !1004

; <label>:24                                      ; preds = %.lr.ph4, %24
  %indvars.iv8 = phi i64 [ 0, %.lr.ph4 ], [ %indvars.iv.next9, %24 ]
  %25 = trunc i64 %indvars.iv8 to i32, !dbg !1005
  %26 = srem i32 %25, %ny, !dbg !1005
  %27 = getelementptr inbounds i32* %15, i64 %indvars.iv8, !dbg !1006
  store i32 %26, i32* %27, align 4, !dbg !1007, !tbaa !742
  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1, !dbg !996
  %28 = icmp slt i64 %indvars.iv.next9, %16, !dbg !993
  br i1 %28, label %24, label %.preheader, !dbg !996

; <label>:29                                      ; preds = %.lr.ph, %29
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %29 ]
  %30 = trunc i64 %indvars.iv to i32, !dbg !1008
  %31 = srem i32 %30, %nz, !dbg !1008
  %32 = getelementptr inbounds i32* %11, i64 %indvars.iv, !dbg !1009
  store i32 %31, i32* %32, align 4, !dbg !1010, !tbaa !742
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1004
  %33 = icmp slt i64 %indvars.iv.next, %23, !dbg !1001
  br i1 %33, label %29, label %._crit_edge, !dbg !1004

._crit_edge:                                      ; preds = %29, %.preheader
  ret void, !dbg !1011
}
