define void @init_pppm(%struct._IO_FILE* %log, %struct.t_commrec* %cr, %struct.t_nsborder* nocapture %nsb, i32 %bVerbose, i32 %bOld, float* %box, i8* %ghatfn, %struct.t_inputrec* nocapture %ir) #0 {
entry:
  %porder = alloca i32, align 4
  %grids = alloca [3 x i32], align 4
  %r1 = alloca float, align 4
  %rc = alloca float, align 4
  %spacing = alloca [3 x float], align 4
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([59 x i8]* @.str5, i64 0, i64 0)) #4
  %cmp = icmp eq %struct.t_commrec* %cr, null
  br i1 %cmp, label %if.end3, label %if.then

if.then:                                          ; preds = %entry
  %nnodes = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 1
  %0 = load i32* %nnodes, align 4, !tbaa !3
  %cmp1 = icmp sgt i32 %0, 1
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.then
  %1 = call i64 @fwrite(i8* getelementptr inbounds ([29 x i8]* @.str6, i64 0, i64 0), i64 28, i64 1, %struct._IO_FILE* %log)
  br label %if.end3

if.end3:                                          ; preds = %entry, %if.then, %if.then2
  %2 = call i64 @fwrite(i8* getelementptr inbounds ([59 x i8]* @.str7, i64 0, i64 0), i64 58, i64 1, %struct._IO_FILE* %log)
  %call5 = call i32 @fexist(i8* %ghatfn) #4
  %tobool = icmp eq i32 %call5, 0
  br i1 %tobool, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.end3
  store float 0x3FFD9999A0000000, float* getelementptr inbounds ([3 x float]* @beta, i64 0, i64 2), align 4, !tbaa !0
  store float 0x3FFD9999A0000000, float* getelementptr inbounds ([3 x float]* @beta, i64 0, i64 1), align 4, !tbaa !0
  store float 0x3FFD9999A0000000, float* getelementptr inbounds ([3 x float]* @beta, i64 0, i64 0), align 4, !tbaa !0
  %nkx = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 17
  %3 = load i32* %nkx, align 4, !tbaa !3
  %nky = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 18
  %4 = load i32* %nky, align 4, !tbaa !3
  %nkz = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 19
  %5 = load i32* %nkz, align 4, !tbaa !3
  %6 = call i64 @fwrite(i8* getelementptr inbounds ([26 x i8]* @.str8, i64 0, i64 0), i64 25, i64 1, %struct._IO_FILE* %log)
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %log, i8* getelementptr inbounds ([27 x i8]* @.str9, i64 0, i64 0), i32 %3, i32 %4, i32 %5) #4
  %cmp9 = icmp slt i32 %3, 4
  %cmp10 = icmp slt i32 %4, 4
  %or.cond = or i1 %cmp9, %cmp10
  %cmp12 = icmp slt i32 %5, 4
  %or.cond134 = or i1 %or.cond, %cmp12
  br i1 %or.cond134, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.then6
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([49 x i8]* @.str10, i64 0, i64 0)) #4
  br label %if.end14

if.end14:                                         ; preds = %if.then6, %if.then13
  %call15 = call float*** @mk_rgrid(i32 %3, i32 %4, i32 %5) #4
  store float*** %call15, float**** @ghat, align 8, !tbaa !4
  %rcoulomb_switch = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 37
  %7 = load float* %rcoulomb_switch, align 4, !tbaa !0
  %rcoulomb = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 38
  %8 = load float* %rcoulomb, align 4, !tbaa !0
  call void @mk_ghat(%struct._IO_FILE* null, i32 %3, i32 %4, i32 %5, float*** %call15, float* %box, float %7, float %8, i32 1, i32 %bOld) #4
  %tobool16 = icmp eq i32 %bVerbose, 0
  br i1 %tobool16, label %if.end70, label %if.then17

if.then17:                                        ; preds = %if.end14
  %9 = load float**** @ghat, align 8, !tbaa !4
  call void @pr_scalar_gk(i8* getelementptr inbounds ([14 x i8]* @.str11, i64 0, i64 0), i32 %3, i32 %4, i32 %5, float* %box, float*** %9) #4
  br label %if.end70

if.else:                                          ; preds = %if.end3
  %10 = load %struct._IO_FILE** @stderr, align 8, !tbaa !4
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([31 x i8]* @.str12, i64 0, i64 0), i8* %ghatfn) #4
  %arraydecay = getelementptr inbounds [3 x i32]* %grids, i64 0, i64 0
  %arraydecay20 = getelementptr inbounds [3 x float]* %spacing, i64 0, i64 0
  %call21 = call float*** @rd_ghat(%struct._IO_FILE* %log, i8* %ghatfn, i32* %arraydecay, float* %arraydecay20, float* getelementptr inbounds ([3 x float]* @beta, i64 0, i64 0), i32* %porder, float* %r1, float* %rc) #4
  store float*** %call21, float**** @ghat, align 8, !tbaa !4
  %11 = load float* %r1, align 4, !tbaa !0
  %rcoulomb_switch22 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 37
  %12 = load float* %rcoulomb_switch22, align 4, !tbaa !0
  %sub = fsub float %11, %12
  %fabsf = call float @fabsf(float %sub) #6
  %cmp24 = fcmp ogt float %fabsf, 0x3EE4F8B580000000
  br i1 %cmp24, label %if.else.if.then33_crit_edge, label %lor.lhs.false26

if.else.if.then33_crit_edge:                      ; preds = %if.else
  %rcoulomb36.phi.trans.insert = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 38
  %.pre = load float* %rcoulomb36.phi.trans.insert, align 4, !tbaa !0
  %.pre136 = load float* %rc, align 4, !tbaa !0
  br label %if.then33

lor.lhs.false26:                                  ; preds = %if.else
  %13 = load float* %rc, align 4, !tbaa !0
  %rcoulomb27 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 38
  %14 = load float* %rcoulomb27, align 4, !tbaa !0
  %sub28 = fsub float %13, %14
  %fabsf132 = call float @fabsf(float %sub28) #6
  %cmp31 = fcmp ogt float %fabsf132, 0x3EE4F8B580000000
  br i1 %cmp31, label %if.then33, label %for.body

if.then33:                                        ; preds = %if.else.if.then33_crit_edge, %lor.lhs.false26
  %15 = phi float [ %.pre136, %if.else.if.then33_crit_edge ], [ %13, %lor.lhs.false26 ]
  %16 = phi float [ %.pre, %if.else.if.then33_crit_edge ], [ %14, %lor.lhs.false26 ]
  %conv35 = fpext float %12 to double
  %conv37 = fpext float %16 to double
  %conv38 = fpext float %11 to double
  %conv39 = fpext float %15 to double
  %call40 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %log, i8* getelementptr inbounds ([71 x i8]* @.str13, i64 0, i64 0), double %conv35, double %conv37, double %conv38, double %conv39) #4
  %call41 = call i32 @fflush(%struct._IO_FILE* %log) #4
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([79 x i8]* @.str14, i64 0, i64 0), i8* %ghatfn) #4
  br label %for.body

for.body:                                         ; preds = %lor.lhs.false26, %if.then33, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.then33 ], [ 0, %lor.lhs.false26 ]
  %arrayidx = getelementptr inbounds float* %box, i64 %indvars.iv
  %17 = load float* %arrayidx, align 4, !tbaa !0
  %arrayidx46 = getelementptr inbounds [3 x i32]* %grids, i64 0, i64 %indvars.iv
  %18 = load i32* %arrayidx46, align 4, !tbaa !3
  %conv47 = sitofp i32 %18 to float
  %arrayidx49 = getelementptr inbounds [3 x float]* %spacing, i64 0, i64 %indvars.iv
  %19 = load float* %arrayidx49, align 4, !tbaa !0
  %mul = fmul float %conv47, %19
  %sub50 = fsub float %17, %mul
  %fabsf133 = call float @fabsf(float %sub50) #6
  %cmp53 = fcmp ogt float %fabsf133, 0x3EE4F8B580000000
  br i1 %cmp53, label %if.then55, label %for.inc

if.then55:                                        ; preds = %for.body
  call void @pr_rvec(%struct._IO_FILE* %log, i32 0, i8* getelementptr inbounds ([4 x i8]* @.str15, i64 0, i64 0), float* %box, i32 3) #4
  call void @pr_rvec(%struct._IO_FILE* %log, i32 0, i8* getelementptr inbounds ([13 x i8]* @.str16, i64 0, i64 0), float* %arraydecay20, i32 3) #4
  call void @pr_ivec(%struct._IO_FILE* %log, i32 0, i8* getelementptr inbounds ([10 x i8]* @.str17, i64 0, i64 0), i32* %arraydecay, i32 3) #4
  %call58 = call i32 @fflush(%struct._IO_FILE* %log) #4
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([73 x i8]* @.str18, i64 0, i64 0), i8* %ghatfn) #4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then55
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 3
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %20 = load i32* %porder, align 4, !tbaa !3
  %cmp60 = icmp eq i32 %20, 2
  br i1 %cmp60, label %if.end63, label %if.then62

if.then62:                                        ; preds = %for.end
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([31 x i8]* @.str19, i64 0, i64 0), i32 %20, i8* %ghatfn) #4
  br label %if.end63

if.end63:                                         ; preds = %for.end, %if.then62
  %21 = load i32* %arraydecay, align 4, !tbaa !3
  %arrayidx65 = getelementptr inbounds [3 x i32]* %grids, i64 0, i64 1
  %22 = load i32* %arrayidx65, align 4, !tbaa !3
  %arrayidx66 = getelementptr inbounds [3 x i32]* %grids, i64 0, i64 2
  %23 = load i32* %arrayidx66, align 4, !tbaa !3
  %tobool67 = icmp eq i32 %bVerbose, 0
  br i1 %tobool67, label %if.end70, label %if.then68

if.then68:                                        ; preds = %if.end63
  %24 = load float**** @ghat, align 8, !tbaa !4
  call void @pr_scalar_gk(i8* getelementptr inbounds ([14 x i8]* @.str20, i64 0, i64 0), i32 %21, i32 %22, i32 %23, float* %box, float*** %24) #4
  br label %if.end70

if.end70:                                         ; preds = %if.end63, %if.end14, %if.then68, %if.then17
  %ny.0 = phi i32 [ %22, %if.then68 ], [ %22, %if.end63 ], [ %4, %if.then17 ], [ %4, %if.end14 ]
  %nz.0 = phi i32 [ %23, %if.then68 ], [ %23, %if.end63 ], [ %5, %if.then17 ], [ %5, %if.end14 ]
  %nx.0 = phi i32 [ %21, %if.then68 ], [ %21, %if.end63 ], [ %3, %if.then17 ], [ %3, %if.end14 ]
  %nnodes71 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 1
  %25 = load i32* %nnodes71, align 4, !tbaa !3
  %cmp72 = icmp sgt i32 %25, 1
  br i1 %cmp72, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end70
  %nthreads = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 5
  %26 = load i32* %nthreads, align 4, !tbaa !3
  %cmp74 = icmp sgt i32 %26, 1
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end70
  %27 = phi i1 [ true, %if.end70 ], [ %cmp74, %lor.rhs ]
  %lor.ext = zext i1 %27 to i32
  %bOptFFT = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 24
  %28 = load i32* %bOptFFT, align 4, !tbaa !3
  %call76 = call %struct.t_fftgrid* @mk_fftgrid(%struct._IO_FILE* %log, i32 %lor.ext, i32 %nx.0, i32 %ny.0, i32 %nz.0, i32 %28) #4
  store %struct.t_fftgrid* %call76, %struct.t_fftgrid** @grid, align 8, !tbaa !4
  ret void
}
