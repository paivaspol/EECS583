define float @do_opt_pppm(%struct.__sFILE* nocapture %log, i32 %bVerbose, %struct.t_inputrec* nocapture readonly %ir, i32 %natoms, [3 x float]* nocapture readonly %x, [3 x float]* nocapture %f, float* nocapture readonly %charge, float* %box, float* nocapture %phi, %struct.t_commrec* %cr, %struct.t_nrnb* nocapture %nrnb, float* nocapture readonly %beta, %struct.t_fftgrid* %grid, i32 %bOld) #1 {
  %1 = tail call i64 @fwrite(i8* getelementptr inbounds ([26 x i8]* @.str8, i64 0, i64 0), i64 25, i64 1, %struct.__sFILE* %log)
  %2 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 17
  %3 = load i32* %2, align 4, !tbaa !22
  %4 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 18
  %5 = load i32* %4, align 4, !tbaa !25
  %6 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 19
  %7 = load i32* %6, align 4, !tbaa !26
  %8 = tail call float*** @mk_rgrid(i32 %3, i32 %5, i32 %7) #6
  %9 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 37
  %10 = load float* %9, align 4, !tbaa !27
  %11 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 38
  %12 = load float* %11, align 4, !tbaa !28
  tail call void @mk_ghat(%struct.__sFILE* null, i32 %3, i32 %5, i32 %7, float*** %8, float* %box, float %10, float %12, i32 1, i32 %bOld) #6
  tail call void @clear_fftgrid(%struct.t_fftgrid* %grid) #6
  tail call void @spread_q(%struct.__sFILE* %log, i32 undef, i32 0, i32 %natoms, [3 x float]* %x, float* %charge, float* %box, %struct.t_fftgrid* %grid, %struct.t_nrnb* %nrnb) #7
  tail call void @solve_pppm(%struct.__sFILE* undef, %struct.t_commrec* %cr, %struct.t_fftgrid* %grid, float*** %8, float* undef, i32 %bVerbose, %struct.t_nrnb* %nrnb) #7
  %13 = tail call fastcc float @gather_f(%struct.__sFILE* %log, i32 0, i32 %natoms, [3 x float]* %x, [3 x float]* %f, float* %charge, float* %box, float* %phi, %struct.t_fftgrid* %grid, float* %beta, %struct.t_nrnb* %nrnb) #7
  tail call void @free_rgrid(float*** %8, i32 %3, i32 %5) #6
  ret float %13
}
