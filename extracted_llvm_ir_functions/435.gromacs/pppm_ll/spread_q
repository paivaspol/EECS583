define void @spread_q(%struct.__sFILE* nocapture %log, i32 %bVerbose, i32 %start, i32 %nr, [3 x float]* nocapture readonly %x, float* nocapture readonly %charge, float* nocapture readonly %box, %struct.t_fftgrid* %grid, %struct.t_nrnb* nocapture %nrnb) #1 {
  %invh = alloca [3 x float], align 4
  %WXYZ = alloca [27 x float], align 16
  %ixyz = alloca [3 x i32], align 4
  %nx = alloca i32, align 4
  %ny = alloca i32, align 4
  %nz = alloca i32, align 4
  %la2 = alloca i32, align 4
  %la12 = alloca i32, align 4
  %ptr = alloca float*, align 8
  %1 = bitcast [27 x float]* %WXYZ to i8*
  call void @llvm.lifetime.start(i64 108, i8* %1) #2
  call void @unpack_fftgrid(%struct.t_fftgrid* %grid, i32* %nx, i32* %ny, i32* %nz, i32* %la2, i32* %la12, i32 1, float** %ptr) #6
  %2 = load i32* %nx, align 4, !tbaa !6
  %3 = load i32* %ny, align 4, !tbaa !6
  %4 = load i32* %nz, align 4, !tbaa !6
  %5 = getelementptr inbounds [3 x float]* %invh, i64 0, i64 0
  %6 = sitofp i32 %2 to float
  %7 = load float* %box, align 4, !tbaa !2
  %8 = fdiv float %6, %7
  store float %8, float* %5, align 4, !tbaa !2
  %9 = sitofp i32 %3 to float
  %10 = getelementptr inbounds float* %box, i64 1
  %11 = load float* %10, align 4, !tbaa !2
  %12 = fdiv float %9, %11
  %13 = getelementptr inbounds [3 x float]* %invh, i64 0, i64 1
  store float %12, float* %13, align 4, !tbaa !2
  %14 = sitofp i32 %4 to float
  %15 = getelementptr inbounds float* %box, i64 2
  %16 = load float* %15, align 4, !tbaa !2
  %17 = fdiv float %14, %16
  %18 = getelementptr inbounds [3 x float]* %invh, i64 0, i64 2
  store float %17, float* %18, align 4, !tbaa !2
  %.b = load i1* @spread_q.bFirst, align 1
  br i1 %.b, label %.preheader, label %19

; <label>:19                                      ; preds = %0
  %20 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %log, i8* getelementptr inbounds ([58 x i8]* @.str1, i64 0, i64 0), i32 %2, i32 %3, i32 %4) #6
  %21 = fpext float %8 to double
  %22 = fpext float %12 to double
  %23 = fpext float %17 to double
  %24 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %log, i8* getelementptr inbounds ([23 x i8]* @.str2, i64 0, i64 0), double %21, double %22, double %23) #6
  %25 = load i32* %nx, align 4, !tbaa !6
  %26 = load i32* %ny, align 4, !tbaa !6
  %27 = load i32* %nz, align 4, !tbaa !6
  call fastcc void @calc_nxyz(i32 %25, i32 %26, i32 %27, i32** @spread_q.nnx, i32** @spread_q.nny, i32** @spread_q.nnz) #7
  store i1 true, i1* @spread_q.bFirst, align 1
  br label %.preheader

.preheader:                                       ; preds = %0, %19
  %28 = icmp sgt i32 %nr, 0
  br i1 %28, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader
  %29 = add nsw i32 %nr, %start
  %30 = getelementptr inbounds [3 x i32]* %ixyz, i64 0, i64 0
  %31 = getelementptr inbounds [27 x float]* %WXYZ, i64 0, i64 0
  %32 = getelementptr inbounds [3 x i32]* %ixyz, i64 0, i64 1
  %33 = getelementptr inbounds [3 x i32]* %ixyz, i64 0, i64 2
  %34 = getelementptr inbounds %struct.t_fftgrid* %grid, i64 0, i32 0
  %35 = sext i32 %start to i64
  %36 = sext i32 %29 to i64
  br label %37

; <label>:37                                      ; preds = %.lr.ph, %.loopexit
  %indvars.iv16 = phi i64 [ %35, %.lr.ph ], [ %indvars.iv.next17, %.loopexit ]
  %38 = getelementptr inbounds float* %charge, i64 %indvars.iv16
  %39 = load float* %38, align 4, !tbaa !2
  %fabsf = call float @fabsf(float %39) #5
  %40 = fpext float %fabsf to double
  %41 = fcmp ogt double %40, 1.200000e-38
  br i1 %41, label %42, label %.loopexit

; <label>:42                                      ; preds = %37
  %43 = load i32* %nx, align 4, !tbaa !6
  %44 = load i32* %ny, align 4, !tbaa !6
  %45 = load i32* %nz, align 4, !tbaa !6
  %46 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv16, i64 0
  %47 = trunc i64 %indvars.iv16 to i32
  call void @calc_weights(i32 %47, i32 %43, i32 %44, i32 %45, float* %46, float* undef, float* %5, i32* %30, float* %31) #7
  %48 = load i32* %30, align 4, !tbaa !6
  %49 = load i32* %nx, align 4, !tbaa !6
  %50 = add nsw i32 %49, %48
  %51 = load i32* %32, align 4, !tbaa !6
  %52 = load i32* %ny, align 4, !tbaa !6
  %53 = add nsw i32 %52, %51
  %54 = load i32* %33, align 4, !tbaa !6
  %55 = load i32* %nz, align 4, !tbaa !6
  %56 = add nsw i32 %55, %54
  %57 = load i32** @spread_q.nnx, align 8, !tbaa !8
  %58 = load i32** @spread_q.nny, align 8, !tbaa !8
  %59 = load i32** @spread_q.nnz, align 8, !tbaa !8
  %60 = load i32* %la12, align 4, !tbaa !6
  %61 = load i32* %la2, align 4, !tbaa !6
  %62 = load float** %34, align 8, !tbaa !10
  %63 = sext i32 %56 to i64
  %64 = sext i32 %53 to i64
  %65 = sext i32 %50 to i64
  br label %66

; <label>:66                                      ; preds = %92, %42
  %indvars.iv13 = phi i64 [ -1, %42 ], [ %indvars.iv.next14, %92 ]
  %nxyz.06 = phi i32 [ 0, %42 ], [ %93, %92 ]
  %67 = add nsw i64 %65, %indvars.iv13
  %68 = getelementptr inbounds i32* %57, i64 %67
  %69 = load i32* %68, align 4, !tbaa !6
  %70 = mul nsw i32 %60, %69
  br label %71

; <label>:71                                      ; preds = %90, %66
  %indvars.iv10 = phi i64 [ -1, %66 ], [ %indvars.iv.next11, %90 ]
  %nxyz.14 = phi i32 [ %nxyz.06, %66 ], [ %91, %90 ]
  %72 = add nsw i64 %64, %indvars.iv10
  %73 = getelementptr inbounds i32* %58, i64 %72
  %74 = load i32* %73, align 4, !tbaa !6
  %75 = mul nsw i32 %61, %74
  %76 = sext i32 %nxyz.14 to i64
  br label %77

; <label>:77                                      ; preds = %77, %71
  %indvars.iv8 = phi i64 [ -1, %71 ], [ %indvars.iv.next9, %77 ]
  %indvars.iv = phi i64 [ %76, %71 ], [ %indvars.iv.next, %77 ]
  %78 = add nsw i64 %63, %indvars.iv8
  %79 = getelementptr inbounds i32* %59, i64 %78
  %80 = load i32* %79, align 4, !tbaa !6
  %81 = add i32 %70, %80
  %82 = add i32 %81, %75
  %83 = getelementptr inbounds [27 x float]* %WXYZ, i64 0, i64 %indvars.iv
  %84 = load float* %83, align 4, !tbaa !2
  %85 = fmul float %39, %84
  %86 = sext i32 %82 to i64
  %87 = getelementptr inbounds float* %62, i64 %86
  %88 = load float* %87, align 4, !tbaa !2
  %89 = fadd float %85, %88
  store float %89, float* %87, align 4, !tbaa !2
  %indvars.iv.next9 = add nsw i64 %indvars.iv8, 1
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next9, 2
  br i1 %exitcond, label %90, label %77

; <label>:90                                      ; preds = %77
  %91 = add i32 %nxyz.14, 3
  %indvars.iv.next11 = add nsw i64 %indvars.iv10, 1
  %exitcond12 = icmp eq i64 %indvars.iv.next11, 2
  br i1 %exitcond12, label %92, label %71

; <label>:92                                      ; preds = %90
  %93 = add nuw nsw i32 %nxyz.06, 9
  %indvars.iv.next14 = add nsw i64 %indvars.iv13, 1
  %exitcond15 = icmp eq i64 %indvars.iv.next14, 2
  br i1 %exitcond15, label %.loopexit, label %66

.loopexit:                                        ; preds = %92, %37
  %indvars.iv.next17 = add nsw i64 %indvars.iv16, 1
  %94 = icmp slt i64 %indvars.iv.next17, %36
  br i1 %94, label %37, label %._crit_edge

._crit_edge:                                      ; preds = %.loopexit, %.preheader
  %95 = mul nsw i32 %nr, 9
  %96 = sitofp i32 %95 to double
  %97 = getelementptr inbounds %struct.t_nrnb* %nrnb, i64 0, i32 0, i64 80
  %98 = load double* %97, align 8, !tbaa !12
  %99 = fadd double %96, %98
  store double %99, double* %97, align 8, !tbaa !12
  %100 = mul nsw i32 %nr, 3
  %101 = sitofp i32 %100 to double
  %102 = getelementptr inbounds %struct.t_nrnb* %nrnb, i64 0, i32 0, i64 79
  %103 = load double* %102, align 8, !tbaa !12
  %104 = fadd double %101, %103
  store double %104, double* %102, align 8, !tbaa !12
  call void @llvm.lifetime.end(i64 108, i8* %1) #2
  ret void
}
