define float @gather_inner(i32* nocapture readonly %JCXYZ, float* nocapture readonly %WXYZ, i32* nocapture readonly %ixw, i32* nocapture readonly %iyw, i32* nocapture readonly %izw, i32 %la2, i32 %la12, float %c1x, float %c1y, float %c1z, float %c2x, float %c2y, float %c2z, float %qi, float* nocapture %f, float* nocapture readonly %ptr) #1 {
  br label %1

; <label>:1                                       ; preds = %1, %0
  %indvars.iv10 = phi i64 [ 0, %0 ], [ %indvars.iv.next11, %1 ]
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %1 ]
  %2 = phi <4 x float> [ zeroinitializer, %0 ], [ %159, %1 ]
  %3 = getelementptr inbounds i32* %JCXYZ, i64 %indvars.iv10
  %4 = load i32* %3, align 4, !tbaa !6
  %5 = add nuw nsw i64 %indvars.iv10, 1
  %6 = getelementptr inbounds i32* %JCXYZ, i64 %5
  %7 = load i32* %6, align 4, !tbaa !6
  %8 = add nuw nsw i64 %indvars.iv10, 2
  %9 = getelementptr inbounds i32* %JCXYZ, i64 %8
  %10 = load i32* %9, align 4, !tbaa !6
  %11 = getelementptr inbounds float* %WXYZ, i64 %indvars.iv
  %12 = load float* %11, align 4, !tbaa !2
  %13 = sext i32 %4 to i64
  %14 = getelementptr inbounds i32* %ixw, i64 %13
  %15 = load i32* %14, align 4, !tbaa !6
  %16 = sext i32 %7 to i64
  %17 = getelementptr inbounds i32* %iyw, i64 %16
  %18 = load i32* %17, align 4, !tbaa !6
  %19 = sext i32 %10 to i64
  %20 = getelementptr inbounds i32* %izw, i64 %19
  %21 = load i32* %20, align 4, !tbaa !6
  %22 = mul nsw i32 %15, %la12
  %23 = mul nsw i32 %18, %la2
  %24 = add nsw i32 %23, %22
  %25 = add nsw i32 %24, %21
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds float* %ptr, i64 %26
  %28 = load float* %27, align 4, !tbaa !2
  %29 = add nsw i32 %4, -1
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i32* %ixw, i64 %30
  %32 = load i32* %31, align 4, !tbaa !6
  %33 = mul nsw i32 %32, %la12
  %34 = add i32 %21, %23
  %35 = add i32 %34, %33
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds float* %ptr, i64 %36
  %38 = load float* %37, align 4, !tbaa !2
  %39 = add nsw i32 %4, 1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i32* %ixw, i64 %40
  %42 = load i32* %41, align 4, !tbaa !6
  %43 = mul nsw i32 %42, %la12
  %44 = add i32 %34, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds float* %ptr, i64 %45
  %47 = load float* %46, align 4, !tbaa !2
  %48 = fsub float %38, %47
  %49 = fmul float %48, %c1x
  %50 = add nsw i32 %4, -2
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32* %ixw, i64 %51
  %53 = load i32* %52, align 4, !tbaa !6
  %54 = mul nsw i32 %53, %la12
  %55 = add i32 %34, %54
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds float* %ptr, i64 %56
  %58 = load float* %57, align 4, !tbaa !2
  %59 = add nsw i32 %4, 2
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32* %ixw, i64 %60
  %62 = load i32* %61, align 4, !tbaa !6
  %63 = mul nsw i32 %62, %la12
  %64 = add i32 %34, %63
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds float* %ptr, i64 %65
  %67 = load float* %66, align 4, !tbaa !2
  %68 = fsub float %58, %67
  %69 = fmul float %68, %c2x
  %70 = fadd float %49, %69
  %71 = add nsw i32 %7, -1
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32* %iyw, i64 %72
  %74 = load i32* %73, align 4, !tbaa !6
  %75 = mul nsw i32 %74, %la2
  %76 = add i32 %21, %22
  %77 = add i32 %76, %75
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds float* %ptr, i64 %78
  %80 = load float* %79, align 4, !tbaa !2
  %81 = add nsw i32 %7, 1
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i32* %iyw, i64 %82
  %84 = load i32* %83, align 4, !tbaa !6
  %85 = mul nsw i32 %84, %la2
  %86 = add i32 %76, %85
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds float* %ptr, i64 %87
  %89 = load float* %88, align 4, !tbaa !2
  %90 = fsub float %80, %89
  %91 = fmul float %90, %c1y
  %92 = add nsw i32 %7, -2
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i32* %iyw, i64 %93
  %95 = load i32* %94, align 4, !tbaa !6
  %96 = mul nsw i32 %95, %la2
  %97 = add i32 %76, %96
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds float* %ptr, i64 %98
  %100 = load float* %99, align 4, !tbaa !2
  %101 = add nsw i32 %7, 2
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i32* %iyw, i64 %102
  %104 = load i32* %103, align 4, !tbaa !6
  %105 = mul nsw i32 %104, %la2
  %106 = add i32 %76, %105
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds float* %ptr, i64 %107
  %109 = load float* %108, align 4, !tbaa !2
  %110 = fsub float %100, %109
  %111 = fmul float %110, %c2y
  %112 = fadd float %91, %111
  %113 = add nsw i32 %10, -1
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i32* %izw, i64 %114
  %116 = load i32* %115, align 4, !tbaa !6
  %117 = add nsw i32 %116, %24
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds float* %ptr, i64 %118
  %120 = load float* %119, align 4, !tbaa !2
  %121 = add nsw i32 %10, 1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i32* %izw, i64 %122
  %124 = load i32* %123, align 4, !tbaa !6
  %125 = add nsw i32 %124, %24
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds float* %ptr, i64 %126
  %128 = load float* %127, align 4, !tbaa !2
  %129 = fsub float %120, %128
  %130 = fmul float %129, %c1z
  %131 = add nsw i32 %10, -2
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i32* %izw, i64 %132
  %134 = load i32* %133, align 4, !tbaa !6
  %135 = add nsw i32 %134, %24
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds float* %ptr, i64 %136
  %138 = load float* %137, align 4, !tbaa !2
  %139 = add nsw i32 %10, 2
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i32* %izw, i64 %140
  %142 = load i32* %141, align 4, !tbaa !6
  %143 = add nsw i32 %142, %24
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds float* %ptr, i64 %144
  %146 = load float* %145, align 4, !tbaa !2
  %147 = fsub float %138, %146
  %148 = fmul float %147, %c2z
  %149 = fadd float %130, %148
  %150 = insertelement <4 x float> undef, float %12, i32 0
  %151 = insertelement <4 x float> %150, float %12, i32 1
  %152 = insertelement <4 x float> %151, float %12, i32 2
  %153 = insertelement <4 x float> %152, float %12, i32 3
  %154 = insertelement <4 x float> undef, float %28, i32 0
  %155 = insertelement <4 x float> %154, float %70, i32 1
  %156 = insertelement <4 x float> %155, float %112, i32 2
  %157 = insertelement <4 x float> %156, float %149, i32 3
  %158 = fmul <4 x float> %153, %157
  %159 = fadd <4 x float> %2, %158
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 3
  %exitcond = icmp eq i64 %indvars.iv.next, 27
  br i1 %exitcond, label %160, label %1

; <label>:160                                     ; preds = %1
  %161 = extractelement <4 x float> %159, i32 1
  %162 = fmul float %161, %qi
  %163 = load float* %f, align 4, !tbaa !2
  %164 = fadd float %162, %163
  store float %164, float* %f, align 4, !tbaa !2
  %165 = extractelement <4 x float> %159, i32 2
  %166 = fmul float %165, %qi
  %167 = getelementptr inbounds float* %f, i64 1
  %168 = load float* %167, align 4, !tbaa !2
  %169 = fadd float %166, %168
  store float %169, float* %167, align 4, !tbaa !2
  %170 = extractelement <4 x float> %159, i32 3
  %171 = fmul float %170, %qi
  %172 = getelementptr inbounds float* %f, i64 2
  %173 = load float* %172, align 4, !tbaa !2
  %174 = fadd float %171, %173
  store float %174, float* %172, align 4, !tbaa !2
  %175 = extractelement <4 x float> %159, i32 0
  ret float %175
}
