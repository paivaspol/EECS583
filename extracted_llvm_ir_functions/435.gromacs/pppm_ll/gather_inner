define float @gather_inner(i32* nocapture readonly %JCXYZ, float* nocapture readonly %WXYZ, i32* nocapture readonly %ixw, i32* nocapture readonly %iyw, i32* nocapture readonly %izw, i32 %la2, i32 %la12, float %c1x, float %c1y, float %c1z, float %c2x, float %c2y, float %c2z, float %qi, float* nocapture %f, float* nocapture readonly %ptr) #2 {
  tail call void @llvm.dbg.value(metadata i32* %JCXYZ, i64 0, metadata !337, metadata !695), !dbg !1012
  tail call void @llvm.dbg.value(metadata float* %WXYZ, i64 0, metadata !338, metadata !695), !dbg !1013
  tail call void @llvm.dbg.value(metadata i32* %ixw, i64 0, metadata !339, metadata !695), !dbg !1014
  tail call void @llvm.dbg.value(metadata i32* %iyw, i64 0, metadata !340, metadata !695), !dbg !1015
  tail call void @llvm.dbg.value(metadata i32* %izw, i64 0, metadata !341, metadata !695), !dbg !1016
  tail call void @llvm.dbg.value(metadata i32 %la2, i64 0, metadata !342, metadata !695), !dbg !1017
  tail call void @llvm.dbg.value(metadata i32 %la12, i64 0, metadata !343, metadata !695), !dbg !1018
  tail call void @llvm.dbg.value(metadata float %c1x, i64 0, metadata !344, metadata !695), !dbg !1019
  tail call void @llvm.dbg.value(metadata float %c1y, i64 0, metadata !345, metadata !695), !dbg !1020
  tail call void @llvm.dbg.value(metadata float %c1z, i64 0, metadata !346, metadata !695), !dbg !1021
  tail call void @llvm.dbg.value(metadata float %c2x, i64 0, metadata !347, metadata !695), !dbg !1022
  tail call void @llvm.dbg.value(metadata float %c2y, i64 0, metadata !348, metadata !695), !dbg !1023
  tail call void @llvm.dbg.value(metadata float %c2z, i64 0, metadata !349, metadata !695), !dbg !1024
  tail call void @llvm.dbg.value(metadata float %qi, i64 0, metadata !350, metadata !695), !dbg !1025
  tail call void @llvm.dbg.value(metadata float* %f, i64 0, metadata !351, metadata !695), !dbg !1026
  tail call void @llvm.dbg.value(metadata float* %ptr, i64 0, metadata !352, metadata !695), !dbg !1027
  tail call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !353, metadata !695), !dbg !1028
  tail call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !354, metadata !695), !dbg !1029
  tail call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !355, metadata !695), !dbg !1030
  tail call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !356, metadata !695), !dbg !1031
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !359, metadata !695), !dbg !1032
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !358, metadata !695), !dbg !1033
  br label %1, !dbg !1034

; <label>:1                                       ; preds = %1, %0
  %indvars.iv10 = phi i64 [ 0, %0 ], [ %indvars.iv.next11, %1 ]
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %1 ]
  %2 = phi <4 x float> [ zeroinitializer, %0 ], [ %159, %1 ]
  %3 = getelementptr inbounds i32* %JCXYZ, i64 %indvars.iv10, !dbg !1036
  %4 = load i32* %3, align 4, !dbg !1036, !tbaa !742
  tail call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !360, metadata !695), !dbg !1039
  %5 = add nuw nsw i64 %indvars.iv10, 1, !dbg !1040
  %6 = getelementptr inbounds i32* %JCXYZ, i64 %5, !dbg !1041
  %7 = load i32* %6, align 4, !dbg !1041, !tbaa !742
  tail call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !361, metadata !695), !dbg !1042
  %8 = add nuw nsw i64 %indvars.iv10, 2, !dbg !1043
  %9 = getelementptr inbounds i32* %JCXYZ, i64 %8, !dbg !1044
  %10 = load i32* %9, align 4, !dbg !1044, !tbaa !742
  tail call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !362, metadata !695), !dbg !1045
  %11 = getelementptr inbounds float* %WXYZ, i64 %indvars.iv, !dbg !1046
  %12 = load float* %11, align 4, !dbg !1046, !tbaa !709
  tail call void @llvm.dbg.value(metadata float %12, i64 0, metadata !357, metadata !695), !dbg !1047
  %13 = sext i32 %4 to i64, !dbg !1048
  %14 = getelementptr inbounds i32* %ixw, i64 %13, !dbg !1048
  %15 = load i32* %14, align 4, !dbg !1048, !tbaa !742
  tail call void @llvm.dbg.value(metadata i32 %15, i64 0, metadata !363, metadata !695), !dbg !1049
  %16 = sext i32 %7 to i64, !dbg !1050
  %17 = getelementptr inbounds i32* %iyw, i64 %16, !dbg !1050
  %18 = load i32* %17, align 4, !dbg !1050, !tbaa !742
  tail call void @llvm.dbg.value(metadata i32 %18, i64 0, metadata !364, metadata !695), !dbg !1051
  %19 = sext i32 %10 to i64, !dbg !1052
  %20 = getelementptr inbounds i32* %izw, i64 %19, !dbg !1052
  %21 = load i32* %20, align 4, !dbg !1052, !tbaa !742
  tail call void @llvm.dbg.value(metadata i32 %21, i64 0, metadata !365, metadata !695), !dbg !1053
  %22 = mul nsw i32 %15, %la12, !dbg !1054
  %23 = mul nsw i32 %18, %la2, !dbg !1054
  %24 = add nsw i32 %23, %22, !dbg !1054
  %25 = add nsw i32 %24, %21, !dbg !1054
  %26 = sext i32 %25 to i64, !dbg !1055
  %27 = getelementptr inbounds float* %ptr, i64 %26, !dbg !1055
  %28 = load float* %27, align 4, !dbg !1055, !tbaa !709
  tail call void @llvm.dbg.value(metadata float undef, i64 0, metadata !353, metadata !695), !dbg !1028
  %29 = add nsw i32 %4, -1, !dbg !1056
  %30 = sext i32 %29 to i64, !dbg !1056
  %31 = getelementptr inbounds i32* %ixw, i64 %30, !dbg !1056
  %32 = load i32* %31, align 4, !dbg !1056, !tbaa !742
  %33 = mul nsw i32 %32, %la12, !dbg !1056
  %34 = add i32 %21, %23, !dbg !1056
  %35 = add i32 %34, %33, !dbg !1056
  %36 = sext i32 %35 to i64, !dbg !1057
  %37 = getelementptr inbounds float* %ptr, i64 %36, !dbg !1057
  %38 = load float* %37, align 4, !dbg !1057, !tbaa !709
  %39 = add nsw i32 %4, 1, !dbg !1058
  %40 = sext i32 %39 to i64, !dbg !1058
  %41 = getelementptr inbounds i32* %ixw, i64 %40, !dbg !1058
  %42 = load i32* %41, align 4, !dbg !1058, !tbaa !742
  %43 = mul nsw i32 %42, %la12, !dbg !1058
  %44 = add i32 %34, %43, !dbg !1058
  %45 = sext i32 %44 to i64, !dbg !1059
  %46 = getelementptr inbounds float* %ptr, i64 %45, !dbg !1059
  %47 = load float* %46, align 4, !dbg !1059, !tbaa !709
  %48 = fsub float %38, %47, !dbg !1060
  %49 = fmul float %48, %c1x, !dbg !1061
  %50 = add nsw i32 %4, -2, !dbg !1062
  %51 = sext i32 %50 to i64, !dbg !1062
  %52 = getelementptr inbounds i32* %ixw, i64 %51, !dbg !1062
  %53 = load i32* %52, align 4, !dbg !1062, !tbaa !742
  %54 = mul nsw i32 %53, %la12, !dbg !1062
  %55 = add i32 %34, %54, !dbg !1062
  %56 = sext i32 %55 to i64, !dbg !1063
  %57 = getelementptr inbounds float* %ptr, i64 %56, !dbg !1063
  %58 = load float* %57, align 4, !dbg !1063, !tbaa !709
  %59 = add nsw i32 %4, 2, !dbg !1064
  %60 = sext i32 %59 to i64, !dbg !1064
  %61 = getelementptr inbounds i32* %ixw, i64 %60, !dbg !1064
  %62 = load i32* %61, align 4, !dbg !1064, !tbaa !742
  %63 = mul nsw i32 %62, %la12, !dbg !1064
  %64 = add i32 %34, %63, !dbg !1064
  %65 = sext i32 %64 to i64, !dbg !1065
  %66 = getelementptr inbounds float* %ptr, i64 %65, !dbg !1065
  %67 = load float* %66, align 4, !dbg !1065, !tbaa !709
  %68 = fsub float %58, %67, !dbg !1066
  %69 = fmul float %68, %c2x, !dbg !1067
  %70 = fadd float %49, %69, !dbg !1068
  tail call void @llvm.dbg.value(metadata float undef, i64 0, metadata !354, metadata !695), !dbg !1029
  %71 = add nsw i32 %7, -1, !dbg !1069
  %72 = sext i32 %71 to i64, !dbg !1069
  %73 = getelementptr inbounds i32* %iyw, i64 %72, !dbg !1069
  %74 = load i32* %73, align 4, !dbg !1069, !tbaa !742
  %75 = mul nsw i32 %74, %la2, !dbg !1069
  %76 = add i32 %21, %22, !dbg !1069
  %77 = add i32 %76, %75, !dbg !1069
  %78 = sext i32 %77 to i64, !dbg !1070
  %79 = getelementptr inbounds float* %ptr, i64 %78, !dbg !1070
  %80 = load float* %79, align 4, !dbg !1070, !tbaa !709
  %81 = add nsw i32 %7, 1, !dbg !1071
  %82 = sext i32 %81 to i64, !dbg !1071
  %83 = getelementptr inbounds i32* %iyw, i64 %82, !dbg !1071
  %84 = load i32* %83, align 4, !dbg !1071, !tbaa !742
  %85 = mul nsw i32 %84, %la2, !dbg !1071
  %86 = add i32 %76, %85, !dbg !1071
  %87 = sext i32 %86 to i64, !dbg !1072
  %88 = getelementptr inbounds float* %ptr, i64 %87, !dbg !1072
  %89 = load float* %88, align 4, !dbg !1072, !tbaa !709
  %90 = fsub float %80, %89, !dbg !1073
  %91 = fmul float %90, %c1y, !dbg !1074
  %92 = add nsw i32 %7, -2, !dbg !1075
  %93 = sext i32 %92 to i64, !dbg !1075
  %94 = getelementptr inbounds i32* %iyw, i64 %93, !dbg !1075
  %95 = load i32* %94, align 4, !dbg !1075, !tbaa !742
  %96 = mul nsw i32 %95, %la2, !dbg !1075
  %97 = add i32 %76, %96, !dbg !1075
  %98 = sext i32 %97 to i64, !dbg !1076
  %99 = getelementptr inbounds float* %ptr, i64 %98, !dbg !1076
  %100 = load float* %99, align 4, !dbg !1076, !tbaa !709
  %101 = add nsw i32 %7, 2, !dbg !1077
  %102 = sext i32 %101 to i64, !dbg !1077
  %103 = getelementptr inbounds i32* %iyw, i64 %102, !dbg !1077
  %104 = load i32* %103, align 4, !dbg !1077, !tbaa !742
  %105 = mul nsw i32 %104, %la2, !dbg !1077
  %106 = add i32 %76, %105, !dbg !1077
  %107 = sext i32 %106 to i64, !dbg !1078
  %108 = getelementptr inbounds float* %ptr, i64 %107, !dbg !1078
  %109 = load float* %108, align 4, !dbg !1078, !tbaa !709
  %110 = fsub float %100, %109, !dbg !1079
  %111 = fmul float %110, %c2y, !dbg !1080
  %112 = fadd float %91, %111, !dbg !1081
  tail call void @llvm.dbg.value(metadata float undef, i64 0, metadata !355, metadata !695), !dbg !1030
  %113 = add nsw i32 %10, -1, !dbg !1082
  %114 = sext i32 %113 to i64, !dbg !1082
  %115 = getelementptr inbounds i32* %izw, i64 %114, !dbg !1082
  %116 = load i32* %115, align 4, !dbg !1082, !tbaa !742
  %117 = add nsw i32 %116, %24, !dbg !1082
  %118 = sext i32 %117 to i64, !dbg !1083
  %119 = getelementptr inbounds float* %ptr, i64 %118, !dbg !1083
  %120 = load float* %119, align 4, !dbg !1083, !tbaa !709
  %121 = add nsw i32 %10, 1, !dbg !1084
  %122 = sext i32 %121 to i64, !dbg !1084
  %123 = getelementptr inbounds i32* %izw, i64 %122, !dbg !1084
  %124 = load i32* %123, align 4, !dbg !1084, !tbaa !742
  %125 = add nsw i32 %124, %24, !dbg !1084
  %126 = sext i32 %125 to i64, !dbg !1085
  %127 = getelementptr inbounds float* %ptr, i64 %126, !dbg !1085
  %128 = load float* %127, align 4, !dbg !1085, !tbaa !709
  %129 = fsub float %120, %128, !dbg !1086
  %130 = fmul float %129, %c1z, !dbg !1087
  %131 = add nsw i32 %10, -2, !dbg !1088
  %132 = sext i32 %131 to i64, !dbg !1088
  %133 = getelementptr inbounds i32* %izw, i64 %132, !dbg !1088
  %134 = load i32* %133, align 4, !dbg !1088, !tbaa !742
  %135 = add nsw i32 %134, %24, !dbg !1088
  %136 = sext i32 %135 to i64, !dbg !1089
  %137 = getelementptr inbounds float* %ptr, i64 %136, !dbg !1089
  %138 = load float* %137, align 4, !dbg !1089, !tbaa !709
  %139 = add nsw i32 %10, 2, !dbg !1090
  %140 = sext i32 %139 to i64, !dbg !1090
  %141 = getelementptr inbounds i32* %izw, i64 %140, !dbg !1090
  %142 = load i32* %141, align 4, !dbg !1090, !tbaa !742
  %143 = add nsw i32 %142, %24, !dbg !1090
  %144 = sext i32 %143 to i64, !dbg !1091
  %145 = getelementptr inbounds float* %ptr, i64 %144, !dbg !1091
  %146 = load float* %145, align 4, !dbg !1091, !tbaa !709
  %147 = fsub float %138, %146, !dbg !1092
  %148 = fmul float %147, %c2z, !dbg !1093
  %149 = fadd float %130, %148, !dbg !1094
  %150 = insertelement <4 x float> undef, float %12, i32 0, !dbg !1095
  %151 = insertelement <4 x float> %150, float %12, i32 1, !dbg !1095
  %152 = insertelement <4 x float> %151, float %12, i32 2, !dbg !1095
  %153 = insertelement <4 x float> %152, float %12, i32 3, !dbg !1095
  %154 = insertelement <4 x float> undef, float %28, i32 0, !dbg !1095
  %155 = insertelement <4 x float> %154, float %70, i32 1, !dbg !1095
  %156 = insertelement <4 x float> %155, float %112, i32 2, !dbg !1095
  %157 = insertelement <4 x float> %156, float %149, i32 3, !dbg !1095
  %158 = fmul <4 x float> %153, %157, !dbg !1095
  %159 = fadd <4 x float> %2, %158, !dbg !1096
  tail call void @llvm.dbg.value(metadata float undef, i64 0, metadata !356, metadata !695), !dbg !1031
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1034
  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 3, !dbg !1034
  %exitcond = icmp eq i64 %indvars.iv.next, 27, !dbg !1034
  br i1 %exitcond, label %160, label %1, !dbg !1034

; <label>:160                                     ; preds = %1
  %161 = extractelement <4 x float> %159, i32 1, !dbg !1097
  %162 = fmul float %161, %qi, !dbg !1097
  %163 = load float* %f, align 4, !dbg !1098, !tbaa !709
  %164 = fadd float %162, %163, !dbg !1098
  store float %164, float* %f, align 4, !dbg !1098, !tbaa !709
  %165 = extractelement <4 x float> %159, i32 2, !dbg !1099
  %166 = fmul float %165, %qi, !dbg !1099
  %167 = getelementptr inbounds float* %f, i64 1, !dbg !1100
  %168 = load float* %167, align 4, !dbg !1101, !tbaa !709
  %169 = fadd float %166, %168, !dbg !1101
  store float %169, float* %167, align 4, !dbg !1101, !tbaa !709
  %170 = extractelement <4 x float> %159, i32 3, !dbg !1102
  %171 = fmul float %170, %qi, !dbg !1102
  %172 = getelementptr inbounds float* %f, i64 2, !dbg !1103
  %173 = load float* %172, align 4, !dbg !1104, !tbaa !709
  %174 = fadd float %171, %173, !dbg !1104
  store float %174, float* %172, align 4, !dbg !1104, !tbaa !709
  %175 = extractelement <4 x float> %159, i32 0, !dbg !1105
  ret float %175, !dbg !1105
}
