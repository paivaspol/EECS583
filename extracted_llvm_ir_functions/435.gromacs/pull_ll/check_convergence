define internal fastcc i32 @check_convergence(%struct.t_pull* nocapture %pull) #0 {
entry:
  %dr = alloca [3 x float], align 4
  call void @llvm.dbg.value(metadata !{%struct.t_pull* %pull}, i64 0, metadata !578), !dbg !1977
  call void @llvm.dbg.value(metadata !1978, i64 0, metadata !579), !dbg !1979
  call void @llvm.dbg.declare(metadata !718, metadata !583), !dbg !1980
  call void @llvm.dbg.declare(metadata !{[3 x float]* %dr}, metadata !584), !dbg !1981
  %tolerance = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 14, !dbg !1982
  %0 = load float* %tolerance, align 4, !dbg !1982, !tbaa !627
  call void @llvm.dbg.value(metadata !{float %0}, i64 0, metadata !580), !dbg !1982
  call void @llvm.dbg.value(metadata !17, i64 0, metadata !581), !dbg !1983
  %n = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 1, i32 0, !dbg !1983
  %1 = load i32* %n, align 4, !dbg !1983, !tbaa !618
  %cmp50 = icmp sgt i32 %1, 0, !dbg !1983
  br i1 %cmp50, label %for.body.lr.ph, label %for.end26, !dbg !1983

for.body.lr.ph:                                   ; preds = %entry
  %x_unc = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 2, i32 9, !dbg !1985
  %x_unc3 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 1, i32 9, !dbg !1985
  %xtarget = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 1, i32 16, !dbg !1987
  %arraydecay12 = getelementptr inbounds [3 x float]* %dr, i64 0, i64 0, !dbg !1987
  %arrayidx9.i47 = getelementptr inbounds [3 x float]* %dr, i64 0, i64 1, !dbg !1988
  %arrayidx10.i48 = getelementptr inbounds [3 x float]* %dr, i64 0, i64 2, !dbg !1989
  br label %for.body, !dbg !1983

for.body:                                         ; preds = %land.end, %for.body.lr.ph
  %2 = phi i32 [ %1, %for.body.lr.ph ], [ %20, %land.end ]
  %indvars.iv53 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next54, %land.end ]
  %bTest.051 = phi i32 [ 1, %for.body.lr.ph ], [ %land.ext, %land.end ]
  %3 = load [3 x float]** %x_unc, align 8, !dbg !1985, !tbaa !614
  %arraydecay = getelementptr inbounds [3 x float]* %3, i64 0, i64 0, !dbg !1985
  %4 = load [3 x float]** %x_unc3, align 8, !dbg !1985, !tbaa !614
  %arraydecay5 = getelementptr inbounds [3 x float]* %4, i64 %indvars.iv53, i64 0, !dbg !1985
  tail call void @llvm.dbg.value(metadata !{float* %arraydecay}, i64 0, metadata !1990), !dbg !1991
  tail call void @llvm.dbg.value(metadata !{float* %arraydecay5}, i64 0, metadata !1992), !dbg !1991
  tail call void @llvm.dbg.value(metadata !729, i64 0, metadata !1993), !dbg !1991
  %5 = load float* %arraydecay, align 4, !dbg !1994, !tbaa !627
  %6 = load float* %arraydecay5, align 4, !dbg !1994, !tbaa !627
  %sub.i = fsub float %5, %6, !dbg !1994
  tail call void @llvm.dbg.value(metadata !{float %sub.i}, i64 0, metadata !1995), !dbg !1994
  %arrayidx2.i = getelementptr inbounds [3 x float]* %3, i64 0, i64 1, !dbg !1996
  %7 = load float* %arrayidx2.i, align 4, !dbg !1996, !tbaa !627
  %arrayidx3.i = getelementptr inbounds [3 x float]* %4, i64 %indvars.iv53, i64 1, !dbg !1996
  %8 = load float* %arrayidx3.i, align 4, !dbg !1996, !tbaa !627
  %sub4.i = fsub float %7, %8, !dbg !1996
  tail call void @llvm.dbg.value(metadata !{float %sub4.i}, i64 0, metadata !1997), !dbg !1996
  %arrayidx5.i = getelementptr inbounds [3 x float]* %3, i64 0, i64 2, !dbg !1998
  %9 = load float* %arrayidx5.i, align 4, !dbg !1998, !tbaa !627
  %arrayidx6.i = getelementptr inbounds [3 x float]* %4, i64 %indvars.iv53, i64 2, !dbg !1998
  %10 = load float* %arrayidx6.i, align 4, !dbg !1998, !tbaa !627
  %sub7.i = fsub float %9, %10, !dbg !1998
  tail call void @llvm.dbg.value(metadata !{float %sub7.i}, i64 0, metadata !1999), !dbg !1998
  %11 = load [3 x float]** %xtarget, align 8, !dbg !1987, !tbaa !614
  %arraydecay10 = getelementptr inbounds [3 x float]* %11, i64 %indvars.iv53, i64 0, !dbg !1987
  tail call void @llvm.dbg.value(metadata !{float* %arraydecay10}, i64 0, metadata !2000), !dbg !2001
  tail call void @llvm.dbg.value(metadata !729, i64 0, metadata !2002), !dbg !2001
  tail call void @llvm.dbg.value(metadata !{float* %arraydecay12}, i64 0, metadata !2003), !dbg !2001
  %12 = load float* %arraydecay10, align 4, !dbg !2004, !tbaa !627
  %add.i42 = fadd float %sub.i, %12, !dbg !2004
  tail call void @llvm.dbg.value(metadata !{float %add.i42}, i64 0, metadata !2005), !dbg !2004
  %arrayidx2.i43 = getelementptr inbounds [3 x float]* %11, i64 %indvars.iv53, i64 1, !dbg !2006
  %13 = load float* %arrayidx2.i43, align 4, !dbg !2006, !tbaa !627
  %add4.i = fadd float %sub4.i, %13, !dbg !2006
  tail call void @llvm.dbg.value(metadata !{float %add4.i}, i64 0, metadata !2007), !dbg !2006
  %arrayidx5.i45 = getelementptr inbounds [3 x float]* %11, i64 %indvars.iv53, i64 2, !dbg !2008
  %14 = load float* %arrayidx5.i45, align 4, !dbg !2008, !tbaa !627
  %add7.i = fadd float %sub7.i, %14, !dbg !2008
  tail call void @llvm.dbg.value(metadata !{float %add7.i}, i64 0, metadata !2009), !dbg !2008
  store float %add.i42, float* %arraydecay12, align 4, !dbg !2010, !tbaa !627
  store float %add4.i, float* %arrayidx9.i47, align 4, !dbg !1988, !tbaa !627
  store float %add7.i, float* %arrayidx10.i48, align 4, !dbg !1989, !tbaa !627
  call void @llvm.dbg.value(metadata !17, i64 0, metadata !582), !dbg !2011
  br label %for.body15, !dbg !2011

for.body15:                                       ; preds = %for.body15.for.body15_crit_edge, %for.body
  %15 = phi float [ %add.i42, %for.body ], [ %.pre55, %for.body15.for.body15_crit_edge ]
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body15.for.body15_crit_edge ]
  %arrayidx17 = getelementptr inbounds %struct.t_pull* %pull, i64 0, i32 5, i64 %indvars.iv, !dbg !2013
  %16 = load float* %arrayidx17, align 4, !dbg !2013, !tbaa !627
  %arrayidx19 = getelementptr inbounds [3 x float]* %dr, i64 0, i64 %indvars.iv, !dbg !2013
  %mul = fmul float %16, %15, !dbg !2013
  store float %mul, float* %arrayidx19, align 4, !dbg !2013, !tbaa !627
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !2011
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !2011
  %exitcond = icmp eq i32 %lftr.wideiv, 3, !dbg !2011
  br i1 %exitcond, label %for.end, label %for.body15.for.body15_crit_edge, !dbg !2011

for.body15.for.body15_crit_edge:                  ; preds = %for.body15
  %arrayidx19.phi.trans.insert = getelementptr inbounds [3 x float]* %dr, i64 0, i64 %indvars.iv.next
  %.pre55 = load float* %arrayidx19.phi.trans.insert, align 4, !dbg !2013, !tbaa !627
  br label %for.body15, !dbg !2011

for.end:                                          ; preds = %for.body15
  %tobool = icmp eq i32 %bTest.051, 0, !dbg !2014
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !2014

land.rhs:                                         ; preds = %for.end
  call void @llvm.dbg.value(metadata !{float* %arraydecay12}, i64 0, metadata !2015) #4, !dbg !2016
  %17 = load float* %arraydecay12, align 4, !dbg !2017, !tbaa !627
  %mul.i = fmul float %17, %17, !dbg !2017
  %18 = load float* %arrayidx9.i47, align 4, !dbg !2017, !tbaa !627
  %mul4.i = fmul float %18, %18, !dbg !2017
  %add.i = fadd float %mul.i, %mul4.i, !dbg !2017
  %19 = load float* %arrayidx10.i48, align 4, !dbg !2017, !tbaa !627
  %mul7.i = fmul float %19, %19, !dbg !2017
  %add8.i = fadd float %add.i, %mul7.i, !dbg !2017
  %conv9.i = call float @sqrtf(float %add8.i) #3, !dbg !2017
  %cmp23 = fcmp olt float %conv9.i, %0, !dbg !2014
  %.pre = load i32* %n, align 4, !dbg !1983, !tbaa !618
  br label %land.end

land.end:                                         ; preds = %for.end, %land.rhs
  %20 = phi i32 [ %2, %for.end ], [ %.pre, %land.rhs ]
  %21 = phi i1 [ false, %for.end ], [ %cmp23, %land.rhs ]
  %land.ext = zext i1 %21 to i32
  call void @llvm.dbg.value(metadata !{i32 %land.ext}, i64 0, metadata !579), !dbg !1979
  %indvars.iv.next54 = add i64 %indvars.iv53, 1, !dbg !1983
  %22 = trunc i64 %indvars.iv.next54 to i32, !dbg !1983
  %cmp = icmp slt i32 %22, %20, !dbg !1983
  br i1 %cmp, label %for.body, label %for.end26, !dbg !1983

for.end26:                                        ; preds = %land.end, %entry
  %bTest.0.lcssa = phi i32 [ 1, %entry ], [ %land.ext, %land.end ]
  ret i32 %bTest.0.lcssa, !dbg !2018
}
