define void @pbc_dx(float* nocapture %x1, float* nocapture %x2, float* nocapture %dx) #1 {
entry:
  %.b128 = load i1* @bInit, align 1
  br i1 %.b128, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([30 x i8]* @.str7, i64 0, i64 0)) #7
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %0 = load float* %x1, align 4, !tbaa !0
  %1 = load float* %x2, align 4, !tbaa !0
  %sub.i = fsub float %0, %1
  %arrayidx2.i = getelementptr inbounds float* %x1, i64 1
  %2 = load float* %arrayidx2.i, align 4, !tbaa !0
  %arrayidx3.i = getelementptr inbounds float* %x2, i64 1
  %3 = load float* %arrayidx3.i, align 4, !tbaa !0
  %sub4.i = fsub float %2, %3
  %arrayidx5.i = getelementptr inbounds float* %x1, i64 2
  %4 = load float* %arrayidx5.i, align 4, !tbaa !0
  %arrayidx6.i = getelementptr inbounds float* %x2, i64 2
  %5 = load float* %arrayidx6.i, align 4, !tbaa !0
  %sub7.i = fsub float %4, %5
  store float %sub.i, float* %dx, align 4, !tbaa !0
  %arrayidx9.i = getelementptr inbounds float* %dx, i64 1
  store float %sub4.i, float* %arrayidx9.i, align 4, !tbaa !0
  %arrayidx10.i = getelementptr inbounds float* %dx, i64 2
  store float %sub7.i, float* %arrayidx10.i, align 4, !tbaa !0
  %.b = load i1* @bSupported, align 1
  br i1 %.b, label %if.then2, label %if.end87

if.then2:                                         ; preds = %if.end
  %6 = load i32* @bTriclinic, align 4, !tbaa !4
  %tobool3 = icmp eq i32 %6, 0
  br i1 %tobool3, label %for.body57, label %for.body

for.body:                                         ; preds = %if.then2, %for.inc38.for.body_crit_edge
  %7 = phi float [ %.pre181, %for.inc38.for.body_crit_edge ], [ %sub7.i, %if.then2 ]
  %indvars.iv178 = phi i64 [ %indvars.iv.next179, %for.inc38.for.body_crit_edge ], [ 2, %if.then2 ]
  %arrayidx6 = getelementptr inbounds [3 x float]* @gl_hbox, i64 0, i64 %indvars.iv178
  %8 = load float* %arrayidx6, align 4, !tbaa !0
  %cmp7 = fcmp ogt float %7, %8
  br i1 %cmp7, label %for.body11, label %if.else

for.body11:                                       ; preds = %for.body, %for.body11.for.body11_crit_edge
  %9 = phi float [ %.pre183, %for.body11.for.body11_crit_edge ], [ %7, %for.body ]
  %indvars.iv176 = phi i64 [ %indvars.iv.next177, %for.body11.for.body11_crit_edge ], [ %indvars.iv178, %for.body ]
  %arrayidx15 = getelementptr inbounds [3 x [3 x float]]* @gl_box, i64 0, i64 %indvars.iv178, i64 %indvars.iv176
  %10 = load float* %arrayidx15, align 4, !tbaa !0
  %arrayidx17 = getelementptr inbounds float* %dx, i64 %indvars.iv176
  %sub = fsub float %9, %10
  store float %sub, float* %arrayidx17, align 4, !tbaa !0
  %indvars.iv.next177 = add i64 %indvars.iv176, -1
  %11 = trunc i64 %indvars.iv176 to i32
  %cmp10 = icmp sgt i32 %11, 0
  br i1 %cmp10, label %for.body11.for.body11_crit_edge, label %for.inc38

for.body11.for.body11_crit_edge:                  ; preds = %for.body11
  %arrayidx17.phi.trans.insert = getelementptr inbounds float* %dx, i64 %indvars.iv.next177
  %.pre183 = load float* %arrayidx17.phi.trans.insert, align 4, !tbaa !0
  br label %for.body11

if.else:                                          ; preds = %for.body
  %arrayidx21 = getelementptr inbounds [3 x float]* @gl_mhbox, i64 0, i64 %indvars.iv178
  %12 = load float* %arrayidx21, align 4, !tbaa !0
  %cmp22 = fcmp ugt float %7, %12
  br i1 %cmp22, label %for.inc38, label %for.body26

for.body26:                                       ; preds = %if.else, %for.body26.for.body26_crit_edge
  %13 = phi float [ %.pre182, %for.body26.for.body26_crit_edge ], [ %7, %if.else ]
  %indvars.iv172 = phi i64 [ %indvars.iv.next173, %for.body26.for.body26_crit_edge ], [ %indvars.iv178, %if.else ]
  %arrayidx30 = getelementptr inbounds [3 x [3 x float]]* @gl_box, i64 0, i64 %indvars.iv178, i64 %indvars.iv172
  %14 = load float* %arrayidx30, align 4, !tbaa !0
  %arrayidx32 = getelementptr inbounds float* %dx, i64 %indvars.iv172
  %add = fadd float %14, %13
  store float %add, float* %arrayidx32, align 4, !tbaa !0
  %indvars.iv.next173 = add i64 %indvars.iv172, -1
  %15 = trunc i64 %indvars.iv172 to i32
  %cmp25 = icmp sgt i32 %15, 0
  br i1 %cmp25, label %for.body26.for.body26_crit_edge, label %for.inc38

for.body26.for.body26_crit_edge:                  ; preds = %for.body26
  %arrayidx32.phi.trans.insert = getelementptr inbounds float* %dx, i64 %indvars.iv.next173
  %.pre182 = load float* %arrayidx32.phi.trans.insert, align 4, !tbaa !0
  br label %for.body26

for.inc38:                                        ; preds = %for.body11, %for.body26, %if.else
  %indvars.iv.next179 = add i64 %indvars.iv178, -1
  %16 = trunc i64 %indvars.iv178 to i32
  %cmp = icmp sgt i32 %16, 0
  br i1 %cmp, label %for.inc38.for.body_crit_edge, label %for.end40

for.inc38.for.body_crit_edge:                     ; preds = %for.inc38
  %arrayidx.phi.trans.insert = getelementptr inbounds float* %dx, i64 %indvars.iv.next179
  %.pre181 = load float* %arrayidx.phi.trans.insert, align 4, !tbaa !0
  br label %for.body

for.end40:                                        ; preds = %for.inc38
  %17 = load float* %dx, align 4, !tbaa !0
  %18 = load float* %arrayidx9.i, align 4, !tbaa !0
  %19 = load float* %arrayidx10.i, align 4, !tbaa !0
  %mul.i141 = fmul float %17, %17
  %mul4.i143 = fmul float %18, %18
  %add.i144 = fadd float %mul.i141, %mul4.i143
  %mul7.i146 = fmul float %19, %19
  %add8.i147 = fadd float %add.i144, %mul7.i146
  %20 = load float* @sure_dist2, align 4, !tbaa !0
  %cmp41157 = fcmp ogt float %add8.i147, %20
  %21 = load i32* @ntric_vec, align 4, !tbaa !4
  %cmp42158 = icmp sgt i32 %21, 0
  %or.cond159 = and i1 %cmp41157, %cmp42158
  br i1 %or.cond159, label %while.body.lr.ph, label %if.end87

while.body.lr.ph:                                 ; preds = %for.end40
  %22 = load [3 x float]** @tric_vec, align 8, !tbaa !3
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %if.end53
  %23 = phi float [ %20, %while.body.lr.ph ], [ %27, %if.end53 ]
  %indvars.iv168 = phi i64 [ 0, %while.body.lr.ph ], [ %indvars.iv.next169, %if.end53 ]
  %d2min.0160 = phi float [ %add8.i147, %while.body.lr.ph ], [ %d2min.1, %if.end53 ]
  %arraydecay46 = getelementptr inbounds [3 x float]* %22, i64 %indvars.iv168, i64 0
  %24 = load float* %arraydecay46, align 4, !tbaa !0
  %add.i134 = fadd float %17, %24
  %arrayidx3.i136 = getelementptr inbounds [3 x float]* %22, i64 %indvars.iv168, i64 1
  %25 = load float* %arrayidx3.i136, align 4, !tbaa !0
  %add4.i = fadd float %18, %25
  %arrayidx6.i138 = getelementptr inbounds [3 x float]* %22, i64 %indvars.iv168, i64 2
  %26 = load float* %arrayidx6.i138, align 4, !tbaa !0
  %add7.i = fadd float %19, %26
  %mul.i = fmul float %add.i134, %add.i134
  %mul4.i = fmul float %add4.i, %add4.i
  %add.i = fadd float %mul.i, %mul4.i
  %mul7.i = fmul float %add7.i, %add7.i
  %add8.i = fadd float %add.i, %mul7.i
  %cmp50 = fcmp olt float %add8.i, %d2min.0160
  br i1 %cmp50, label %if.then51, label %if.end53

if.then51:                                        ; preds = %while.body
  store float %add.i134, float* %dx, align 4, !tbaa !0
  store float %add4.i, float* %arrayidx9.i, align 4, !tbaa !0
  store float %add7.i, float* %arrayidx10.i, align 4, !tbaa !0
  %.pre = load float* @sure_dist2, align 4, !tbaa !0
  br label %if.end53

if.end53:                                         ; preds = %if.then51, %while.body
  %27 = phi float [ %.pre, %if.then51 ], [ %23, %while.body ]
  %d2min.1 = phi float [ %add8.i, %if.then51 ], [ %d2min.0160, %while.body ]
  %indvars.iv.next169 = add i64 %indvars.iv168, 1
  %cmp41 = fcmp ogt float %d2min.1, %27
  %28 = trunc i64 %indvars.iv.next169 to i32
  %cmp42 = icmp slt i32 %28, %21
  %or.cond = and i1 %cmp41, %cmp42
  br i1 %or.cond, label %while.body, label %if.end87

for.body57:                                       ; preds = %if.then2, %for.inc83.for.body57_crit_edge
  %29 = phi float [ %.pre180, %for.inc83.for.body57_crit_edge ], [ %sub.i, %if.then2 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc83.for.body57_crit_edge ], [ 0, %if.then2 ]
  %arrayidx59 = getelementptr inbounds float* %dx, i64 %indvars.iv
  %arrayidx61 = getelementptr inbounds [3 x float]* @gl_hbox, i64 0, i64 %indvars.iv
  %30 = load float* %arrayidx61, align 4, !tbaa !0
  %cmp62 = fcmp ogt float %29, %30
  br i1 %cmp62, label %if.then63, label %if.else69

if.then63:                                        ; preds = %for.body57
  %arrayidx65 = getelementptr inbounds [3 x float]* @gl_fbox, i64 0, i64 %indvars.iv
  %31 = load float* %arrayidx65, align 4, !tbaa !0
  %sub68 = fsub float %29, %31
  store float %sub68, float* %arrayidx59, align 4, !tbaa !0
  br label %for.inc83

if.else69:                                        ; preds = %for.body57
  %arrayidx73 = getelementptr inbounds [3 x float]* @gl_mhbox, i64 0, i64 %indvars.iv
  %32 = load float* %arrayidx73, align 4, !tbaa !0
  %cmp74 = fcmp ugt float %29, %32
  br i1 %cmp74, label %for.inc83, label %if.then75

if.then75:                                        ; preds = %if.else69
  %arrayidx77 = getelementptr inbounds [3 x float]* @gl_fbox, i64 0, i64 %indvars.iv
  %33 = load float* %arrayidx77, align 4, !tbaa !0
  %add80 = fadd float %29, %33
  store float %add80, float* %arrayidx59, align 4, !tbaa !0
  br label %for.inc83

for.inc83:                                        ; preds = %if.else69, %if.then63, %if.then75
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 3
  br i1 %exitcond, label %if.end87, label %for.inc83.for.body57_crit_edge

for.inc83.for.body57_crit_edge:                   ; preds = %for.inc83
  %arrayidx59.phi.trans.insert = getelementptr inbounds float* %dx, i64 %indvars.iv.next
  %.pre180 = load float* %arrayidx59.phi.trans.insert, align 4, !tbaa !0
  br label %for.body57

if.end87:                                         ; preds = %for.end40, %if.end53, %for.inc83, %if.end
  ret void
}
