define void @pbc_dx(float* nocapture readonly %x1, float* nocapture readonly %x2, float* nocapture %dx) #4 {
  %.b1 = load i1* @bInit, align 1
  br i1 %.b1, label %2, label %1

; <label>:1                                       ; preds = %0
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([30 x i8]* @.str7, i64 0, i64 0)) #7
  br label %2

; <label>:2                                       ; preds = %1, %0
  %3 = load float* %x1, align 4, !tbaa !14
  %4 = load float* %x2, align 4, !tbaa !14
  %5 = fsub float %3, %4
  %6 = getelementptr inbounds float* %x1, i64 1
  %7 = load float* %6, align 4, !tbaa !14
  %8 = getelementptr inbounds float* %x2, i64 1
  %9 = load float* %8, align 4, !tbaa !14
  %10 = fsub float %7, %9
  %11 = getelementptr inbounds float* %x1, i64 2
  %12 = load float* %11, align 4, !tbaa !14
  %13 = getelementptr inbounds float* %x2, i64 2
  %14 = load float* %13, align 4, !tbaa !14
  %15 = fsub float %12, %14
  store float %5, float* %dx, align 4, !tbaa !14
  %16 = getelementptr inbounds float* %dx, i64 1
  store float %10, float* %16, align 4, !tbaa !14
  %17 = getelementptr inbounds float* %dx, i64 2
  store float %15, float* %17, align 4, !tbaa !14
  %.b = load i1* @bSupported, align 1
  br i1 %.b, label %18, label %.critedge

; <label>:18                                      ; preds = %2
  %19 = load i32* @bTriclinic, align 4, !tbaa !17
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %.preheader, label %.preheader7

.preheader7:                                      ; preds = %18, %._crit_edge
  %21 = phi float [ %.pre, %._crit_edge ], [ %15, %18 ]
  %indvars.iv27 = phi i64 [ %indvars.iv.next28, %._crit_edge ], [ 2, %18 ]
  %22 = getelementptr inbounds [3 x float]* @gl_hbox, i64 0, i64 %indvars.iv27
  %23 = load float* %22, align 4, !tbaa !14
  %24 = fcmp ogt float %21, %23
  br i1 %24, label %.lr.ph15.preheader, label %35

.lr.ph15.preheader:                               ; preds = %.preheader7
  %25 = getelementptr inbounds [3 x [3 x float]]* @gl_box, i64 0, i64 %indvars.iv27, i64 %indvars.iv27
  %26 = load float* %25, align 4, !tbaa !14
  %27 = getelementptr inbounds float* %dx, i64 %indvars.iv27
  %28 = fsub float %21, %26
  store float %28, float* %27, align 4, !tbaa !14
  %29 = icmp sgt i64 %indvars.iv27, 0
  br i1 %29, label %._crit_edge32, label %.loopexit

._crit_edge32:                                    ; preds = %.lr.ph15.preheader, %._crit_edge32
  %indvars.iv.next2645.in = phi i64 [ %indvars.iv.next2645, %._crit_edge32 ], [ %indvars.iv27, %.lr.ph15.preheader ]
  %indvars.iv.next2645 = add nsw i64 %indvars.iv.next2645.in, -1
  %.phi.trans.insert33 = getelementptr inbounds float* %dx, i64 %indvars.iv.next2645
  %.pre34 = load float* %.phi.trans.insert33, align 4, !tbaa !14
  %30 = getelementptr inbounds [3 x [3 x float]]* @gl_box, i64 0, i64 %indvars.iv27, i64 %indvars.iv.next2645
  %31 = load float* %30, align 4, !tbaa !14
  %32 = getelementptr inbounds float* %dx, i64 %indvars.iv.next2645
  %33 = fsub float %.pre34, %31
  store float %33, float* %32, align 4, !tbaa !14
  %34 = icmp sgt i64 %indvars.iv.next2645.in, 1
  br i1 %34, label %._crit_edge32, label %.loopexit

; <label>:35                                      ; preds = %.preheader7
  %36 = getelementptr inbounds [3 x float]* @gl_mhbox, i64 0, i64 %indvars.iv27
  %37 = load float* %36, align 4, !tbaa !14
  %38 = fcmp ugt float %21, %37
  br i1 %38, label %.loopexit, label %.lr.ph13.preheader

.lr.ph13.preheader:                               ; preds = %35
  %39 = getelementptr inbounds [3 x [3 x float]]* @gl_box, i64 0, i64 %indvars.iv27, i64 %indvars.iv27
  %40 = load float* %39, align 4, !tbaa !14
  %41 = getelementptr inbounds float* %dx, i64 %indvars.iv27
  %42 = fadd float %40, %21
  store float %42, float* %41, align 4, !tbaa !14
  %43 = icmp sgt i64 %indvars.iv27, 0
  br i1 %43, label %._crit_edge29, label %.loopexit

._crit_edge29:                                    ; preds = %.lr.ph13.preheader, %._crit_edge29
  %indvars.iv.next2243.in = phi i64 [ %indvars.iv.next2243, %._crit_edge29 ], [ %indvars.iv27, %.lr.ph13.preheader ]
  %indvars.iv.next2243 = add nsw i64 %indvars.iv.next2243.in, -1
  %.phi.trans.insert30 = getelementptr inbounds float* %dx, i64 %indvars.iv.next2243
  %.pre31 = load float* %.phi.trans.insert30, align 4, !tbaa !14
  %44 = getelementptr inbounds [3 x [3 x float]]* @gl_box, i64 0, i64 %indvars.iv27, i64 %indvars.iv.next2243
  %45 = load float* %44, align 4, !tbaa !14
  %46 = getelementptr inbounds float* %dx, i64 %indvars.iv.next2243
  %47 = fadd float %45, %.pre31
  store float %47, float* %46, align 4, !tbaa !14
  %48 = icmp sgt i64 %indvars.iv.next2243.in, 1
  br i1 %48, label %._crit_edge29, label %.loopexit

.loopexit:                                        ; preds = %.lr.ph13.preheader, %._crit_edge29, %.lr.ph15.preheader, %._crit_edge32, %35
  %indvars.iv.next28 = add nsw i64 %indvars.iv27, -1
  %49 = icmp sgt i64 %indvars.iv27, 0
  br i1 %49, label %._crit_edge, label %50

._crit_edge:                                      ; preds = %.loopexit
  %.phi.trans.insert = getelementptr inbounds float* %dx, i64 %indvars.iv.next28
  %.pre = load float* %.phi.trans.insert, align 4, !tbaa !14
  br label %.preheader7

; <label>:50                                      ; preds = %.loopexit
  %51 = load float* %dx, align 4, !tbaa !14
  %52 = load float* %16, align 4, !tbaa !14
  %53 = load float* %17, align 4, !tbaa !14
  %54 = fmul float %51, %51
  %55 = fmul float %52, %52
  %56 = fadd float %54, %55
  %57 = fmul float %53, %53
  %58 = fadd float %56, %57
  %59 = load float* @sure_dist2, align 4, !tbaa !14
  %60 = fcmp ogt float %58, %59
  %61 = load i32* @ntric_vec, align 4
  %62 = icmp sgt i32 %61, 0
  %or.cond9 = and i1 %60, %62
  br i1 %or.cond9, label %.lr.ph, label %.critedge

.lr.ph:                                           ; preds = %50
  %63 = load [3 x float]** @tric_vec, align 8, !tbaa !16
  br label %64

; <label>:64                                      ; preds = %.lr.ph, %83
  %65 = phi i32 [ %61, %.lr.ph ], [ %84, %83 ]
  %66 = phi float [ %59, %.lr.ph ], [ %85, %83 ]
  %indvars.iv17 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next18, %83 ]
  %d2min.010 = phi float [ %58, %.lr.ph ], [ %d2min.1, %83 ]
  %67 = getelementptr inbounds [3 x float]* %63, i64 %indvars.iv17, i64 0
  %68 = load float* %67, align 4, !tbaa !14
  %69 = fadd float %51, %68
  %70 = getelementptr inbounds [3 x float]* %63, i64 %indvars.iv17, i64 1
  %71 = load float* %70, align 4, !tbaa !14
  %72 = fadd float %52, %71
  %73 = getelementptr inbounds [3 x float]* %63, i64 %indvars.iv17, i64 2
  %74 = load float* %73, align 4, !tbaa !14
  %75 = fadd float %53, %74
  %76 = fmul float %69, %69
  %77 = fmul float %72, %72
  %78 = fadd float %76, %77
  %79 = fmul float %75, %75
  %80 = fadd float %78, %79
  %81 = fcmp olt float %80, %d2min.010
  br i1 %81, label %82, label %83

; <label>:82                                      ; preds = %64
  store float %69, float* %dx, align 4, !tbaa !14
  store float %72, float* %16, align 4, !tbaa !14
  store float %75, float* %17, align 4, !tbaa !14
  %.pre35 = load float* @sure_dist2, align 4, !tbaa !14
  %.pre36 = load i32* @ntric_vec, align 4
  br label %83

; <label>:83                                      ; preds = %82, %64
  %84 = phi i32 [ %.pre36, %82 ], [ %65, %64 ]
  %85 = phi float [ %.pre35, %82 ], [ %66, %64 ]
  %d2min.1 = phi float [ %80, %82 ], [ %d2min.010, %64 ]
  %indvars.iv.next18 = add nuw nsw i64 %indvars.iv17, 1
  %86 = fcmp ogt float %d2min.1, %85
  %87 = sext i32 %84 to i64
  %88 = icmp slt i64 %indvars.iv.next18, %87
  %or.cond = and i1 %86, %88
  br i1 %or.cond, label %64, label %.critedge

.preheader:                                       ; preds = %18, %._crit_edge37
  %89 = phi float [ %.pre39, %._crit_edge37 ], [ %5, %18 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %._crit_edge37 ], [ 0, %18 ]
  %90 = getelementptr inbounds float* %dx, i64 %indvars.iv
  %91 = getelementptr inbounds [3 x float]* @gl_hbox, i64 0, i64 %indvars.iv
  %92 = load float* %91, align 4, !tbaa !14
  %93 = fcmp ogt float %89, %92
  br i1 %93, label %94, label %98

; <label>:94                                      ; preds = %.preheader
  %95 = getelementptr inbounds [3 x float]* @gl_fbox, i64 0, i64 %indvars.iv
  %96 = load float* %95, align 4, !tbaa !14
  %97 = fsub float %89, %96
  store float %97, float* %90, align 4, !tbaa !14
  br label %106

; <label>:98                                      ; preds = %.preheader
  %99 = getelementptr inbounds [3 x float]* @gl_mhbox, i64 0, i64 %indvars.iv
  %100 = load float* %99, align 4, !tbaa !14
  %101 = fcmp ugt float %89, %100
  br i1 %101, label %106, label %102

; <label>:102                                     ; preds = %98
  %103 = getelementptr inbounds [3 x float]* @gl_fbox, i64 0, i64 %indvars.iv
  %104 = load float* %103, align 4, !tbaa !14
  %105 = fadd float %89, %104
  store float %105, float* %90, align 4, !tbaa !14
  br label %106

; <label>:106                                     ; preds = %98, %94, %102
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %.critedge, label %._crit_edge37

._crit_edge37:                                    ; preds = %106
  %.phi.trans.insert38 = getelementptr inbounds float* %dx, i64 %indvars.iv.next
  %.pre39 = load float* %.phi.trans.insert38, align 4, !tbaa !14
  br label %.preheader

.critedge:                                        ; preds = %83, %106, %50, %2
  ret void
}
