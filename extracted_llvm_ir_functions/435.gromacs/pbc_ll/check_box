define i8* @check_box([3 x float]* nocapture %box) #0 {
entry:
  %arrayidx1 = getelementptr inbounds [3 x float]* %box, i64 0, i64 1
  %0 = load float* %arrayidx1, align 4, !tbaa !0
  %fabsf = tail call float @fabsf(float %0) #5
  %1 = fpext float %fabsf to double
  %cmp = fcmp ogt double %1, 1.200000e-38
  br i1 %cmp, label %if.end49, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %arrayidx4 = getelementptr inbounds [3 x float]* %box, i64 0, i64 2
  %2 = load float* %arrayidx4, align 4, !tbaa !0
  %fabsf58 = tail call float @fabsf(float %2) #5
  %3 = fpext float %fabsf58 to double
  %cmp7 = fcmp ogt double %3, 1.200000e-38
  br i1 %cmp7, label %if.end49, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %arrayidx11 = getelementptr inbounds [3 x float]* %box, i64 1, i64 2
  %4 = load float* %arrayidx11, align 4, !tbaa !0
  %fabsf59 = tail call float @fabsf(float %4) #5
  %5 = fpext float %fabsf59 to double
  %cmp14 = fcmp ogt double %5, 1.200000e-38
  br i1 %cmp14, label %if.end49, label %if.else

if.else:                                          ; preds = %lor.lhs.false9
  %arrayidx17 = getelementptr inbounds [3 x float]* %box, i64 1, i64 0
  %6 = load float* %arrayidx17, align 4, !tbaa !0
  %fabsf60 = tail call float @fabsf(float %6) #5
  %7 = fpext float %fabsf60 to double
  %arrayidx21 = getelementptr inbounds [3 x float]* %box, i64 0, i64 0
  %8 = load float* %arrayidx21, align 4, !tbaa !0
  %conv22 = fpext float %8 to double
  %mul = fmul double %conv22, 5.001000e-01
  %cmp23 = fcmp ogt double %7, %mul
  br i1 %cmp23, label %if.end49, label %lor.lhs.false25

lor.lhs.false25:                                  ; preds = %if.else
  %arrayidx27 = getelementptr inbounds [3 x float]* %box, i64 2, i64 0
  %9 = load float* %arrayidx27, align 4, !tbaa !0
  %fabsf61 = tail call float @fabsf(float %9) #5
  %10 = fpext float %fabsf61 to double
  %cmp34 = fcmp ogt double %10, %mul
  br i1 %cmp34, label %if.end49, label %lor.lhs.false36

lor.lhs.false36:                                  ; preds = %lor.lhs.false25
  %arrayidx38 = getelementptr inbounds [3 x float]* %box, i64 2, i64 1
  %11 = load float* %arrayidx38, align 4, !tbaa !0
  %fabsf62 = tail call float @fabsf(float %11) #5
  %12 = fpext float %fabsf62 to double
  %arrayidx42 = getelementptr inbounds [3 x float]* %box, i64 1, i64 1
  %13 = load float* %arrayidx42, align 4, !tbaa !0
  %conv43 = fpext float %13 to double
  %mul44 = fmul double %conv43, 5.001000e-01
  %cmp45 = fcmp ogt double %12, %mul44
  br i1 %cmp45, label %if.end49, label %if.else48

if.else48:                                        ; preds = %lor.lhs.false36
  br label %if.end49

if.end49:                                         ; preds = %if.else, %lor.lhs.false25, %lor.lhs.false36, %entry, %lor.lhs.false, %lor.lhs.false9, %if.else48
  %ptr.0 = phi i8* [ null, %if.else48 ], [ getelementptr inbounds ([119 x i8]* @.str, i64 0, i64 0), %lor.lhs.false9 ], [ getelementptr inbounds ([119 x i8]* @.str, i64 0, i64 0), %lor.lhs.false ], [ getelementptr inbounds ([119 x i8]* @.str, i64 0, i64 0), %entry ], [ getelementptr inbounds ([29 x i8]* @.str1, i64 0, i64 0), %lor.lhs.false36 ], [ getelementptr inbounds ([29 x i8]* @.str1, i64 0, i64 0), %lor.lhs.false25 ], [ getelementptr inbounds ([29 x i8]* @.str1, i64 0, i64 0), %if.else ]
  ret i8* %ptr.0
}
