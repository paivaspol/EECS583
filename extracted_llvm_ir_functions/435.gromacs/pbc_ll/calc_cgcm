define void @calc_cgcm(%struct.__sFILE* nocapture readnone %log, i32 %cg0, i32 %cg1, %struct.t_block* nocapture readonly %cgs, [3 x float]* nocapture readonly %pos, [3 x float]* nocapture %cg_cm) #5 {
  %cg = alloca [3 x float], align 4
  tail call void @llvm.dbg.value(metadata %struct.__sFILE* %log, i64 0, metadata !187, metadata !375), !dbg !899
  tail call void @llvm.dbg.value(metadata i32 %cg0, i64 0, metadata !188, metadata !375), !dbg !900
  tail call void @llvm.dbg.value(metadata i32 %cg1, i64 0, metadata !189, metadata !375), !dbg !901
  tail call void @llvm.dbg.value(metadata %struct.t_block* %cgs, i64 0, metadata !190, metadata !375), !dbg !902
  tail call void @llvm.dbg.value(metadata [3 x float]* %pos, i64 0, metadata !191, metadata !375), !dbg !903
  tail call void @llvm.dbg.value(metadata [3 x float]* %cg_cm, i64 0, metadata !192, metadata !375), !dbg !904
  tail call void @llvm.dbg.declare(metadata [3 x float]* %cg, metadata !200, metadata !375), !dbg !905
  %1 = getelementptr inbounds %struct.t_block* %cgs, i64 0, i32 4, !dbg !906
  %2 = load i32** %1, align 8, !dbg !906, !tbaa !907
  tail call void @llvm.dbg.value(metadata i32* %2, i64 0, metadata !202, metadata !375), !dbg !909
  %3 = getelementptr inbounds %struct.t_block* %cgs, i64 0, i32 2, !dbg !910
  %4 = load i32** %3, align 8, !dbg !910, !tbaa !911
  tail call void @llvm.dbg.value(metadata i32* %4, i64 0, metadata !203, metadata !375), !dbg !912
  tail call void @llvm.dbg.value(metadata i32 %cg0, i64 0, metadata !193, metadata !375), !dbg !913
  %5 = icmp slt i32 %cg0, %cg1, !dbg !914
  br i1 %5, label %.lr.ph5, label %._crit_edge, !dbg !917

.lr.ph5:                                          ; preds = %0
  %6 = getelementptr inbounds [3 x float]* %cg, i64 0, i64 0, !dbg !918
  %7 = getelementptr inbounds [3 x float]* %cg, i64 0, i64 1, !dbg !922
  %8 = getelementptr inbounds [3 x float]* %cg, i64 0, i64 2, !dbg !924
  %9 = sext i32 %cg0 to i64
  %10 = add i32 %cg1, -1, !dbg !917
  %.phi.trans.insert = getelementptr inbounds i32* %4, i64 %9
  %.pre = load i32* %.phi.trans.insert, align 4, !dbg !925, !tbaa !482
  br label %11, !dbg !917

; <label>:11                                      ; preds = %.backedge, %.lr.ph5
  %12 = phi i32 [ %.pre, %.lr.ph5 ], [ %14, %.backedge ], !dbg !925
  %indvars.iv12 = phi i64 [ %9, %.lr.ph5 ], [ %indvars.iv.next13, %.backedge ]
  tail call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !196, metadata !375), !dbg !926
  %indvars.iv.next13 = add nsw i64 %indvars.iv12, 1, !dbg !917
  %13 = getelementptr inbounds i32* %4, i64 %indvars.iv.next13, !dbg !927
  %14 = load i32* %13, align 4, !dbg !927, !tbaa !482
  tail call void @llvm.dbg.value(metadata i32 %14, i64 0, metadata !197, metadata !375), !dbg !928
  %15 = sub nsw i32 %14, %12, !dbg !929
  tail call void @llvm.dbg.value(metadata i32 %15, i64 0, metadata !199, metadata !375), !dbg !930
  %16 = icmp eq i32 %15, 1, !dbg !931
  br i1 %16, label %17, label %37, !dbg !932

; <label>:17                                      ; preds = %11
  %18 = sext i32 %12 to i64, !dbg !933
  %19 = getelementptr inbounds i32* %2, i64 %18, !dbg !933
  %20 = load i32* %19, align 4, !dbg !933, !tbaa !482
  tail call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !194, metadata !375), !dbg !935
  %21 = sext i32 %20 to i64, !dbg !936
  %22 = getelementptr inbounds [3 x float]* %pos, i64 %21, i64 0, !dbg !936
  %23 = getelementptr inbounds [3 x float]* %cg_cm, i64 %indvars.iv12, i64 0, !dbg !937
  tail call void @llvm.dbg.value(metadata float* %22, i64 0, metadata !321, metadata !375), !dbg !938
  tail call void @llvm.dbg.value(metadata float* %23, i64 0, metadata !322, metadata !375), !dbg !940
  %24 = bitcast float* %22 to i32*, !dbg !941
  %25 = load i32* %24, align 4, !dbg !941, !tbaa !417
  %26 = bitcast float* %23 to i32*, !dbg !942
  store i32 %25, i32* %26, align 4, !dbg !942, !tbaa !417
  %27 = getelementptr inbounds [3 x float]* %pos, i64 %21, i64 1, !dbg !943
  %28 = bitcast float* %27 to i32*, !dbg !943
  %29 = load i32* %28, align 4, !dbg !943, !tbaa !417
  %30 = getelementptr inbounds [3 x float]* %cg_cm, i64 %indvars.iv12, i64 1, !dbg !944
  %31 = bitcast float* %30 to i32*, !dbg !945
  store i32 %29, i32* %31, align 4, !dbg !945, !tbaa !417
  %32 = getelementptr inbounds [3 x float]* %pos, i64 %21, i64 2, !dbg !946
  %33 = bitcast float* %32 to i32*, !dbg !946
  %34 = load i32* %33, align 4, !dbg !946, !tbaa !417
  %35 = getelementptr inbounds [3 x float]* %cg_cm, i64 %indvars.iv12, i64 2, !dbg !947
  %36 = bitcast float* %35 to i32*, !dbg !948
  store i32 %34, i32* %36, align 4, !dbg !948, !tbaa !417
  br label %.backedge, !dbg !949

.backedge:                                        ; preds = %.preheader, %17
  %lftr.wideiv14 = trunc i64 %indvars.iv12 to i32, !dbg !917
  %exitcond15 = icmp eq i32 %lftr.wideiv14, %10, !dbg !917
  br i1 %exitcond15, label %._crit_edge, label %11, !dbg !917

; <label>:37                                      ; preds = %11
  %38 = sitofp i32 %15 to double, !dbg !950
  %39 = fdiv double 1.000000e+00, %38, !dbg !951
  %40 = fptrunc double %39 to float, !dbg !952
  tail call void @llvm.dbg.value(metadata float %40, i64 0, metadata !201, metadata !375), !dbg !953
  tail call void @llvm.dbg.value(metadata float* %6, i64 0, metadata !343, metadata !375), !dbg !954
  store float 0.000000e+00, float* %6, align 4, !dbg !955, !tbaa !417
  store float 0.000000e+00, float* %7, align 4, !dbg !956, !tbaa !417
  store float 0.000000e+00, float* %8, align 4, !dbg !957, !tbaa !417
  tail call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !195, metadata !375), !dbg !958
  %41 = icmp sgt i32 %14, %12, !dbg !959
  br i1 %41, label %.lr.ph, label %.preheader, !dbg !962

.lr.ph:                                           ; preds = %37
  %42 = sext i32 %12 to i64
  %43 = add i32 %14, -1, !dbg !962
  br label %44, !dbg !962

; <label>:44                                      ; preds = %54, %.lr.ph
  %indvars.iv6 = phi i64 [ %42, %.lr.ph ], [ %indvars.iv.next7, %54 ]
  %45 = getelementptr inbounds i32* %2, i64 %indvars.iv6, !dbg !963
  %46 = load i32* %45, align 4, !dbg !963, !tbaa !482
  tail call void @llvm.dbg.value(metadata i32 %46, i64 0, metadata !194, metadata !375), !dbg !935
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !198, metadata !375), !dbg !965
  %47 = sext i32 %46 to i64, !dbg !966
  br label %48, !dbg !969

; <label>:48                                      ; preds = %48, %44
  %indvars.iv = phi i64 [ 0, %44 ], [ %indvars.iv.next, %48 ]
  %49 = getelementptr inbounds [3 x float]* %pos, i64 %47, i64 %indvars.iv, !dbg !966
  %50 = load float* %49, align 4, !dbg !966, !tbaa !417
  %51 = getelementptr inbounds [3 x float]* %cg, i64 0, i64 %indvars.iv, !dbg !970
  %52 = load float* %51, align 4, !dbg !971, !tbaa !417
  %53 = fadd float %50, %52, !dbg !971
  store float %53, float* %51, align 4, !dbg !971, !tbaa !417
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !969
  %exitcond = icmp eq i64 %indvars.iv.next, 3, !dbg !969
  br i1 %exitcond, label %54, label %48, !dbg !969

; <label>:54                                      ; preds = %48
  %indvars.iv.next7 = add nsw i64 %indvars.iv6, 1, !dbg !962
  %lftr.wideiv = trunc i64 %indvars.iv6 to i32, !dbg !962
  %exitcond8 = icmp eq i32 %lftr.wideiv, %43, !dbg !962
  br i1 %exitcond8, label %.preheader, label %44, !dbg !962

.preheader:                                       ; preds = %37, %54, %.preheader
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %.preheader ], [ 0, %54 ], [ 0, %37 ]
  %55 = getelementptr inbounds [3 x float]* %cg, i64 0, i64 %indvars.iv9, !dbg !972
  %56 = load float* %55, align 4, !dbg !972, !tbaa !417
  %57 = fmul float %40, %56, !dbg !975
  %58 = getelementptr inbounds [3 x float]* %cg_cm, i64 %indvars.iv12, i64 %indvars.iv9, !dbg !976
  store float %57, float* %58, align 4, !dbg !977, !tbaa !417
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !978
  %exitcond11 = icmp eq i64 %indvars.iv.next10, 3, !dbg !978
  br i1 %exitcond11, label %.backedge, label %.preheader, !dbg !978

._crit_edge:                                      ; preds = %.backedge, %0
  ret void, !dbg !979
}
