define void @calc_cgcm(%struct._IO_FILE* nocapture %log, i32 %cg0, i32 %cg1, %struct.t_block* nocapture %cgs, [3 x float]* nocapture %pos, [3 x float]* nocapture %cg_cm) #2 {
entry:
  %cg = alloca [3 x float], align 4
  call void @llvm.dbg.value(metadata !{%struct._IO_FILE* %log}, i64 0, metadata !170), !dbg !610
  call void @llvm.dbg.value(metadata !{i32 %cg0}, i64 0, metadata !171), !dbg !610
  call void @llvm.dbg.value(metadata !{i32 %cg1}, i64 0, metadata !172), !dbg !610
  call void @llvm.dbg.value(metadata !{%struct.t_block* %cgs}, i64 0, metadata !173), !dbg !610
  call void @llvm.dbg.value(metadata !{[3 x float]* %pos}, i64 0, metadata !174), !dbg !611
  call void @llvm.dbg.value(metadata !{[3 x float]* %cg_cm}, i64 0, metadata !175), !dbg !611
  call void @llvm.dbg.declare(metadata !{[3 x float]* %cg}, metadata !183), !dbg !612
  %a = getelementptr inbounds %struct.t_block* %cgs, i64 0, i32 4, !dbg !613
  %0 = load i32** %a, align 8, !dbg !613, !tbaa !372
  call void @llvm.dbg.value(metadata !{i32* %0}, i64 0, metadata !185), !dbg !613
  %index = getelementptr inbounds %struct.t_block* %cgs, i64 0, i32 2, !dbg !614
  %1 = load i32** %index, align 8, !dbg !614, !tbaa !372
  call void @llvm.dbg.value(metadata !{i32* %1}, i64 0, metadata !186), !dbg !614
  call void @llvm.dbg.value(metadata !{i32 %cg0}, i64 0, metadata !176), !dbg !615
  %cmp78 = icmp slt i32 %cg0, %cg1, !dbg !615
  br i1 %cmp78, label %for.body.lr.ph, label %for.end48, !dbg !615

for.body.lr.ph:                                   ; preds = %entry
  %arraydecay12 = getelementptr inbounds [3 x float]* %cg, i64 0, i64 0, !dbg !617
  %arrayidx1.i = getelementptr inbounds [3 x float]* %cg, i64 0, i64 1, !dbg !620
  %arrayidx2.i73 = getelementptr inbounds [3 x float]* %cg, i64 0, i64 2, !dbg !621
  %2 = sext i32 %cg0 to i64
  %arrayidx.phi.trans.insert = getelementptr inbounds i32* %1, i64 %2
  %.pre = load i32* %arrayidx.phi.trans.insert, align 4, !dbg !622, !tbaa !387
  br label %for.body, !dbg !615

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %3 = phi i32 [ %.pre, %for.body.lr.ph ], [ %4, %for.cond.backedge ], !dbg !622
  %indvars.iv86 = phi i64 [ %2, %for.body.lr.ph ], [ %indvars.iv.next87, %for.cond.backedge ]
  call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !179), !dbg !622
  %indvars.iv.next87 = add i64 %indvars.iv86, 1, !dbg !615
  %arrayidx2 = getelementptr inbounds i32* %1, i64 %indvars.iv.next87, !dbg !623
  %4 = load i32* %arrayidx2, align 4, !dbg !623, !tbaa !387
  call void @llvm.dbg.value(metadata !{i32 %4}, i64 0, metadata !180), !dbg !623
  %sub = sub nsw i32 %4, %3, !dbg !624
  call void @llvm.dbg.value(metadata !{i32 %sub}, i64 0, metadata !182), !dbg !624
  %cmp3 = icmp eq i32 %sub, 1, !dbg !625
  br i1 %cmp3, label %if.then, label %if.else, !dbg !625

if.then:                                          ; preds = %for.body
  %idxprom4 = sext i32 %3 to i64, !dbg !626
  %arrayidx5 = getelementptr inbounds i32* %0, i64 %idxprom4, !dbg !626
  %5 = load i32* %arrayidx5, align 4, !dbg !626, !tbaa !387
  call void @llvm.dbg.value(metadata !{i32 %5}, i64 0, metadata !177), !dbg !626
  %idxprom6 = sext i32 %5 to i64, !dbg !628
  %arraydecay = getelementptr inbounds [3 x float]* %pos, i64 %idxprom6, i64 0, !dbg !628
  %arraydecay10 = getelementptr inbounds [3 x float]* %cg_cm, i64 %indvars.iv86, i64 0, !dbg !628
  tail call void @llvm.dbg.value(metadata !{float* %arraydecay}, i64 0, metadata !629), !dbg !630
  tail call void @llvm.dbg.value(metadata !{float* %arraydecay10}, i64 0, metadata !631), !dbg !630
  %6 = load float* %arraydecay, align 4, !dbg !632, !tbaa !357
  store float %6, float* %arraydecay10, align 4, !dbg !632, !tbaa !357
  %arrayidx2.i = getelementptr inbounds [3 x float]* %pos, i64 %idxprom6, i64 1, !dbg !633
  %7 = load float* %arrayidx2.i, align 4, !dbg !633, !tbaa !357
  %arrayidx3.i = getelementptr inbounds [3 x float]* %cg_cm, i64 %indvars.iv86, i64 1, !dbg !633
  store float %7, float* %arrayidx3.i, align 4, !dbg !633, !tbaa !357
  %arrayidx4.i = getelementptr inbounds [3 x float]* %pos, i64 %idxprom6, i64 2, !dbg !634
  %8 = load float* %arrayidx4.i, align 4, !dbg !634, !tbaa !357
  %arrayidx5.i = getelementptr inbounds [3 x float]* %cg_cm, i64 %indvars.iv86, i64 2, !dbg !634
  store float %8, float* %arrayidx5.i, align 4, !dbg !634, !tbaa !357
  br label %for.cond.backedge, !dbg !635

for.cond.backedge:                                ; preds = %for.body36, %if.then
  %9 = trunc i64 %indvars.iv.next87 to i32, !dbg !615
  %cmp = icmp slt i32 %9, %cg1, !dbg !615
  br i1 %cmp, label %for.body, label %for.end48, !dbg !615

if.else:                                          ; preds = %for.body
  %conv = sitofp i32 %sub to double, !dbg !636
  %div = fdiv double 1.000000e+00, %conv, !dbg !636
  %conv11 = fptrunc double %div to float, !dbg !636
  call void @llvm.dbg.value(metadata !{float %conv11}, i64 0, metadata !184), !dbg !636
  tail call void @llvm.dbg.value(metadata !{float* %arraydecay12}, i64 0, metadata !637), !dbg !638
  store float 0.000000e+00, float* %arraydecay12, align 4, !dbg !639, !tbaa !357
  store float 0.000000e+00, float* %arrayidx1.i, align 4, !dbg !620, !tbaa !357
  store float 0.000000e+00, float* %arrayidx2.i73, align 4, !dbg !621, !tbaa !357
  call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !178), !dbg !640
  %cmp1475 = icmp slt i32 %3, %4, !dbg !640
  br i1 %cmp1475, label %for.body16.lr.ph, label %for.body36, !dbg !640

for.body16.lr.ph:                                 ; preds = %if.else
  %10 = sext i32 %3 to i64
  br label %for.body16, !dbg !640

for.body16:                                       ; preds = %for.body16.lr.ph, %for.inc30
  %indvars.iv80 = phi i64 [ %10, %for.body16.lr.ph ], [ %indvars.iv.next81, %for.inc30 ]
  %arrayidx18 = getelementptr inbounds i32* %0, i64 %indvars.iv80, !dbg !642
  %11 = load i32* %arrayidx18, align 4, !dbg !642, !tbaa !387
  call void @llvm.dbg.value(metadata !{i32 %11}, i64 0, metadata !177), !dbg !642
  call void @llvm.dbg.value(metadata !2, i64 0, metadata !181), !dbg !644
  %idxprom24 = sext i32 %11 to i64, !dbg !646
  br label %for.body22, !dbg !644

for.body22:                                       ; preds = %for.body22, %for.body16
  %indvars.iv = phi i64 [ 0, %for.body16 ], [ %indvars.iv.next, %for.body22 ]
  %arrayidx26 = getelementptr inbounds [3 x float]* %pos, i64 %idxprom24, i64 %indvars.iv, !dbg !646
  %12 = load float* %arrayidx26, align 4, !dbg !646, !tbaa !357
  %arrayidx28 = getelementptr inbounds [3 x float]* %cg, i64 0, i64 %indvars.iv, !dbg !646
  %13 = load float* %arrayidx28, align 4, !dbg !646, !tbaa !357
  %add29 = fadd float %12, %13, !dbg !646
  store float %add29, float* %arrayidx28, align 4, !dbg !646, !tbaa !357
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !644
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !644
  %exitcond = icmp eq i32 %lftr.wideiv, 3, !dbg !644
  br i1 %exitcond, label %for.inc30, label %for.body22, !dbg !644

for.inc30:                                        ; preds = %for.body22
  %indvars.iv.next81 = add i64 %indvars.iv80, 1, !dbg !640
  %14 = trunc i64 %indvars.iv.next81 to i32, !dbg !640
  %cmp14 = icmp slt i32 %14, %4, !dbg !640
  br i1 %cmp14, label %for.body16, label %for.body36, !dbg !640

for.body36:                                       ; preds = %for.body36, %if.else, %for.inc30
  %indvars.iv82 = phi i64 [ 0, %for.inc30 ], [ 0, %if.else ], [ %indvars.iv.next83, %for.body36 ]
  %arrayidx38 = getelementptr inbounds [3 x float]* %cg, i64 0, i64 %indvars.iv82, !dbg !647
  %15 = load float* %arrayidx38, align 4, !dbg !647, !tbaa !357
  %mul = fmul float %conv11, %15, !dbg !647
  %arrayidx42 = getelementptr inbounds [3 x float]* %cg_cm, i64 %indvars.iv86, i64 %indvars.iv82, !dbg !647
  store float %mul, float* %arrayidx42, align 4, !dbg !647, !tbaa !357
  %indvars.iv.next83 = add i64 %indvars.iv82, 1, !dbg !649
  %lftr.wideiv84 = trunc i64 %indvars.iv.next83 to i32, !dbg !649
  %exitcond85 = icmp eq i32 %lftr.wideiv84, 3, !dbg !649
  br i1 %exitcond85, label %for.cond.backedge, label %for.body36, !dbg !649

for.end48:                                        ; preds = %for.cond.backedge, %entry
  ret void, !dbg !650
}
