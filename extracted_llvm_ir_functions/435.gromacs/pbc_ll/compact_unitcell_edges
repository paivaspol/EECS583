define i32* @compact_unitcell_edges() #4 {
  br label %.preheader1

.preheader1:                                      ; preds = %10, %0
  %indvars.iv11 = phi i64 [ 0, %0 ], [ %indvars.iv.next12, %10 ]
  %i.07 = phi i32 [ 0, %0 ], [ %11, %10 ]
  %1 = shl nsw i32 %i.07, 2
  br label %2

.preheader:                                       ; preds = %10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (i32* getelementptr inbounds ([72 x i32]* @compact_unitcell_edges.edge, i64 0, i64 48) to i8*), i8* bitcast ([24 x i32]* @compact_unitcell_edges.hexcon to i8*), i64 96, i32 16, i1 false)
  ret i32* getelementptr inbounds ([72 x i32]* @compact_unitcell_edges.edge, i64 0, i64 0)

; <label>:2                                       ; preds = %2, %.preheader1
  %indvars.iv = phi i64 [ %indvars.iv11, %.preheader1 ], [ %indvars.iv.next, %2 ]
  %j.05 = phi i32 [ 0, %.preheader1 ], [ %6, %2 ]
  %3 = add nuw nsw i32 %j.05, %1
  %4 = or i64 %indvars.iv, 1
  %5 = getelementptr inbounds [72 x i32]* @compact_unitcell_edges.edge, i64 0, i64 %indvars.iv
  store i32 %3, i32* %5, align 8, !tbaa !17
  %6 = add nuw nsw i32 %j.05, 1
  %7 = icmp eq i32 %6, 4
  %tmp = select i1 %7, i32 0, i32 %6
  %8 = add nsw i32 %tmp, %1
  %indvars.iv.next = add nsw i64 %indvars.iv, 2
  %9 = getelementptr inbounds [72 x i32]* @compact_unitcell_edges.edge, i64 0, i64 %4
  store i32 %8, i32* %9, align 4, !tbaa !17
  %exitcond = icmp eq i32 %6, 4
  br i1 %exitcond, label %10, label %2

; <label>:10                                      ; preds = %2
  %11 = add nuw nsw i32 %i.07, 1
  %indvars.iv.next12 = add nuw nsw i64 %indvars.iv11, 8
  %exitcond13 = icmp eq i32 %11, 6
  br i1 %exitcond13, label %.preheader, label %.preheader1
}
