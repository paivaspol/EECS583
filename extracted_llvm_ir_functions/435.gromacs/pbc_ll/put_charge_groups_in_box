define void @put_charge_groups_in_box(%struct.__sFILE* nocapture readnone %log, i32 %cg0, i32 %cg1, [3 x float]* nocapture readonly %box, float* nocapture readnone %box_size, %struct.t_block* nocapture readonly %cgs, [3 x float]* nocapture %pos, [3 x float]* nocapture %cg_cm) #4 {
  %cg = alloca [3 x float], align 4
  %1 = getelementptr inbounds %struct.t_block* %cgs, i64 0, i32 4
  %2 = load i32** %1, align 8, !tbaa !18
  %3 = getelementptr inbounds %struct.t_block* %cgs, i64 0, i32 2
  %4 = load i32** %3, align 8, !tbaa !20
  %5 = getelementptr inbounds [3 x float]* %box, i64 1, i64 0
  %6 = load float* %5, align 4, !tbaa !14
  %fabsf = tail call float @fabsf(float %6) #8
  %7 = fpext float %fabsf to double
  %8 = fcmp ogt double %7, 1.200000e-38
  br i1 %8, label %19, label %9

; <label>:9                                       ; preds = %0
  %10 = getelementptr inbounds [3 x float]* %box, i64 2, i64 0
  %11 = load float* %10, align 4, !tbaa !14
  %fabsf1 = tail call float @fabsf(float %11) #8
  %12 = fpext float %fabsf1 to double
  %13 = fcmp ogt double %12, 1.200000e-38
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %9
  %15 = getelementptr inbounds [3 x float]* %box, i64 2, i64 1
  %16 = load float* %15, align 4, !tbaa !14
  %fabsf2 = tail call float @fabsf(float %16) #8
  %17 = fpext float %fabsf2 to double
  %18 = fcmp ogt double %17, 1.200000e-38
  br label %19

; <label>:19                                      ; preds = %14, %9, %0
  %20 = phi i1 [ true, %9 ], [ true, %0 ], [ %18, %14 ]
  %21 = icmp slt i32 %cg0, %cg1
  br i1 %21, label %.lr.ph55, label %._crit_edge56

.lr.ph55:                                         ; preds = %19
  %22 = getelementptr inbounds [3 x float]* %cg, i64 0, i64 0
  %23 = getelementptr inbounds [3 x float]* %cg, i64 0, i64 1
  %24 = getelementptr inbounds [3 x float]* %cg, i64 0, i64 2
  %25 = sext i32 %cg0 to i64
  %26 = add i32 %cg1, -1
  %.phi.trans.insert = getelementptr inbounds i32* %4, i64 %25
  %.pre = load i32* %.phi.trans.insert, align 4, !tbaa !17
  br label %27

.backedge:                                        ; preds = %._crit_edge32, %._crit_edge49
  %lftr.wideiv93 = trunc i64 %indvars.iv91 to i32
  %exitcond94 = icmp eq i32 %lftr.wideiv93, %26
  br i1 %exitcond94, label %._crit_edge56, label %27

; <label>:27                                      ; preds = %.backedge, %.lr.ph55
  %28 = phi i32 [ %.pre, %.lr.ph55 ], [ %30, %.backedge ]
  %indvars.iv91 = phi i64 [ %25, %.lr.ph55 ], [ %indvars.iv.next92, %.backedge ]
  %indvars.iv.next92 = add nsw i64 %indvars.iv91, 1
  %29 = getelementptr inbounds i32* %4, i64 %indvars.iv.next92
  %30 = load i32* %29, align 4, !tbaa !17
  %31 = sub nsw i32 %30, %28
  %32 = sitofp i32 %31 to double
  %33 = fdiv double 1.000000e+00, %32
  %34 = fptrunc double %33 to float
  store float 0.000000e+00, float* %22, align 4, !tbaa !14
  store float 0.000000e+00, float* %23, align 4, !tbaa !14
  store float 0.000000e+00, float* %24, align 4, !tbaa !14
  %35 = icmp sgt i32 %30, %28
  br i1 %35, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %27
  %36 = sext i32 %28 to i64
  %37 = add i32 %30, -1
  br label %38

; <label>:38                                      ; preds = %49, %.lr.ph
  %indvars.iv59 = phi i64 [ %36, %.lr.ph ], [ %indvars.iv.next60, %49 ]
  %39 = getelementptr inbounds i32* %2, i64 %indvars.iv59
  %40 = load i32* %39, align 4, !tbaa !17
  %41 = sext i32 %40 to i64
  br label %42

; <label>:42                                      ; preds = %42, %38
  %indvars.iv = phi i64 [ 0, %38 ], [ %indvars.iv.next, %42 ]
  %43 = getelementptr inbounds [3 x float]* %pos, i64 %41, i64 %indvars.iv
  %44 = load float* %43, align 4, !tbaa !14
  %45 = fmul float %34, %44
  %46 = getelementptr inbounds [3 x float]* %cg, i64 0, i64 %indvars.iv
  %47 = load float* %46, align 4, !tbaa !14
  %48 = fadd float %47, %45
  store float %48, float* %46, align 4, !tbaa !14
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %49, label %42

; <label>:49                                      ; preds = %42
  %indvars.iv.next60 = add nsw i64 %indvars.iv59, 1
  %lftr.wideiv = trunc i64 %indvars.iv59 to i32
  %exitcond61 = icmp eq i32 %lftr.wideiv, %37
  br i1 %exitcond61, label %._crit_edge, label %38

._crit_edge:                                      ; preds = %49, %27
  %50 = sext i32 %28 to i64
  %51 = add i32 %30, -1
  br i1 %20, label %.preheader8, label %.preheader10

.preheader8:                                      ; preds = %._crit_edge, %._crit_edge49
  %indvars.iv89 = phi i64 [ %indvars.iv.next90, %._crit_edge49 ], [ 2, %._crit_edge ]
  %52 = getelementptr inbounds [3 x float]* %cg, i64 0, i64 %indvars.iv89
  %53 = load float* %52, align 4, !tbaa !14
  %54 = fcmp olt float %53, 0.000000e+00
  br i1 %54, label %.lr.ph40, label %.preheader7

.loopexit4:                                       ; preds = %._crit_edge38
  %.pre105 = load float* %52, align 4, !tbaa !14
  %55 = fcmp olt float %.pre105, 0.000000e+00
  br i1 %55, label %.lr.ph40, label %.preheader7

.preheader7:                                      ; preds = %.loopexit4, %.preheader8
  %56 = phi float [ %53, %.preheader8 ], [ %.pre105, %.loopexit4 ]
  %57 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv89, i64 %indvars.iv89
  %58 = load float* %57, align 4, !tbaa !14
  %59 = fcmp ult float %56, %58
  br i1 %59, label %._crit_edge49, label %.lr.ph48

.lr.ph40:                                         ; preds = %.loopexit4, %._crit_edge100, %.preheader8
  %60 = phi float [ %53, %.preheader8 ], [ %.pre102, %._crit_edge100 ], [ %.pre105, %.loopexit4 ]
  %indvars.iv79 = phi i64 [ %indvars.iv89, %.preheader8 ], [ %indvars.iv.next80, %._crit_edge100 ], [ %indvars.iv89, %.loopexit4 ]
  %61 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv89, i64 %indvars.iv79
  %62 = load float* %61, align 4, !tbaa !14
  %63 = getelementptr inbounds [3 x float]* %cg, i64 0, i64 %indvars.iv79
  %64 = fadd float %62, %60
  store float %64, float* %63, align 4, !tbaa !14
  br i1 %35, label %.lr.ph37.preheader, label %._crit_edge38

.lr.ph37.preheader:                               ; preds = %.lr.ph40
  %65 = getelementptr inbounds i32* %2, i64 %50
  %66 = load i32* %65, align 4, !tbaa !17
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [3 x float]* %pos, i64 %67, i64 %indvars.iv79
  %69 = load float* %68, align 4, !tbaa !14
  %70 = fadd float %62, %69
  store float %70, float* %68, align 4, !tbaa !14
  %exitcond76127 = icmp eq i32 %28, %51
  br i1 %exitcond76127, label %._crit_edge38, label %._crit_edge103

._crit_edge103:                                   ; preds = %.lr.ph37.preheader, %._crit_edge103
  %indvars.iv73128 = phi i64 [ %indvars.iv.next74, %._crit_edge103 ], [ %50, %.lr.ph37.preheader ]
  %indvars.iv.next74 = add nsw i64 %indvars.iv73128, 1
  %.pre104 = load float* %61, align 4, !tbaa !14
  %71 = getelementptr inbounds i32* %2, i64 %indvars.iv.next74
  %72 = load i32* %71, align 4, !tbaa !17
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [3 x float]* %pos, i64 %73, i64 %indvars.iv79
  %75 = load float* %74, align 4, !tbaa !14
  %76 = fadd float %.pre104, %75
  store float %76, float* %74, align 4, !tbaa !14
  %lftr.wideiv75 = trunc i64 %indvars.iv.next74 to i32
  %exitcond76 = icmp eq i32 %lftr.wideiv75, %51
  br i1 %exitcond76, label %._crit_edge38, label %._crit_edge103

._crit_edge38:                                    ; preds = %.lr.ph37.preheader, %._crit_edge103, %.lr.ph40
  %indvars.iv.next80 = add nsw i64 %indvars.iv79, -1
  %77 = icmp sgt i64 %indvars.iv79, 0
  br i1 %77, label %._crit_edge100, label %.loopexit4

._crit_edge100:                                   ; preds = %._crit_edge38
  %.phi.trans.insert101 = getelementptr inbounds [3 x float]* %cg, i64 0, i64 %indvars.iv.next80
  %.pre102 = load float* %.phi.trans.insert101, align 4, !tbaa !14
  br label %.lr.ph40

.loopexit:                                        ; preds = %._crit_edge46
  %.pre113 = load float* %52, align 4, !tbaa !14
  %.pre114 = load float* %57, align 4, !tbaa !14
  %78 = fcmp ult float %.pre113, %.pre114
  br i1 %78, label %._crit_edge49, label %.lr.ph48

.lr.ph48:                                         ; preds = %.loopexit, %._crit_edge106, %.preheader7
  %79 = phi float [ %56, %.preheader7 ], [ %.pre110, %._crit_edge106 ], [ %.pre113, %.loopexit ]
  %80 = phi float [ %58, %.preheader7 ], [ %.pre108, %._crit_edge106 ], [ %.pre114, %.loopexit ]
  %indvars.iv87 = phi i64 [ %indvars.iv89, %.preheader7 ], [ %indvars.iv.next88, %._crit_edge106 ], [ %indvars.iv89, %.loopexit ]
  %81 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv89, i64 %indvars.iv87
  %82 = getelementptr inbounds [3 x float]* %cg, i64 0, i64 %indvars.iv87
  %83 = fsub float %79, %80
  store float %83, float* %82, align 4, !tbaa !14
  br i1 %35, label %.lr.ph45.preheader, label %._crit_edge46

.lr.ph45.preheader:                               ; preds = %.lr.ph48
  %84 = getelementptr inbounds i32* %2, i64 %50
  %85 = load i32* %84, align 4, !tbaa !17
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [3 x float]* %pos, i64 %86, i64 %indvars.iv87
  %88 = load float* %87, align 4, !tbaa !14
  %89 = fsub float %88, %80
  store float %89, float* %87, align 4, !tbaa !14
  %exitcond84130 = icmp eq i32 %28, %51
  br i1 %exitcond84130, label %._crit_edge46, label %._crit_edge111

._crit_edge111:                                   ; preds = %.lr.ph45.preheader, %._crit_edge111
  %indvars.iv81131 = phi i64 [ %indvars.iv.next82, %._crit_edge111 ], [ %50, %.lr.ph45.preheader ]
  %indvars.iv.next82 = add nsw i64 %indvars.iv81131, 1
  %.pre112 = load float* %81, align 4, !tbaa !14
  %90 = getelementptr inbounds i32* %2, i64 %indvars.iv.next82
  %91 = load i32* %90, align 4, !tbaa !17
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [3 x float]* %pos, i64 %92, i64 %indvars.iv87
  %94 = load float* %93, align 4, !tbaa !14
  %95 = fsub float %94, %.pre112
  store float %95, float* %93, align 4, !tbaa !14
  %lftr.wideiv83 = trunc i64 %indvars.iv.next82 to i32
  %exitcond84 = icmp eq i32 %lftr.wideiv83, %51
  br i1 %exitcond84, label %._crit_edge46, label %._crit_edge111

._crit_edge46:                                    ; preds = %.lr.ph45.preheader, %._crit_edge111, %.lr.ph48
  %indvars.iv.next88 = add nsw i64 %indvars.iv87, -1
  %96 = icmp sgt i64 %indvars.iv87, 0
  br i1 %96, label %._crit_edge106, label %.loopexit

._crit_edge106:                                   ; preds = %._crit_edge46
  %.phi.trans.insert107 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv89, i64 %indvars.iv.next88
  %.pre108 = load float* %.phi.trans.insert107, align 4, !tbaa !14
  %.phi.trans.insert109 = getelementptr inbounds [3 x float]* %cg, i64 0, i64 %indvars.iv.next88
  %.pre110 = load float* %.phi.trans.insert109, align 4, !tbaa !14
  br label %.lr.ph48

._crit_edge49:                                    ; preds = %.loopexit, %.preheader7
  %.lcssa19 = phi float [ %56, %.preheader7 ], [ %.pre113, %.loopexit ]
  %97 = getelementptr inbounds [3 x float]* %cg_cm, i64 %indvars.iv91, i64 %indvars.iv89
  store float %.lcssa19, float* %97, align 4, !tbaa !14
  %indvars.iv.next90 = add nsw i64 %indvars.iv89, -1
  %98 = icmp sgt i64 %indvars.iv89, 0
  br i1 %98, label %.preheader8, label %.backedge

.preheader10:                                     ; preds = %._crit_edge, %._crit_edge32
  %indvars.iv70 = phi i64 [ %indvars.iv.next71, %._crit_edge32 ], [ 0, %._crit_edge ]
  %99 = getelementptr inbounds [3 x float]* %cg, i64 0, i64 %indvars.iv70
  %100 = load float* %99, align 4, !tbaa !14
  %101 = fcmp olt float %100, 0.000000e+00
  %102 = getelementptr inbounds [3 x float]* %box, i64 %indvars.iv70, i64 %indvars.iv70
  br i1 %101, label %.lr.ph25, label %.preheader9

.loopexit6:                                       ; preds = %.lr.ph24.preheader, %._crit_edge95, %.lr.ph25
  %103 = fcmp olt float %109, 0.000000e+00
  br i1 %103, label %.lr.ph25, label %..preheader9_crit_edge

..preheader9_crit_edge:                           ; preds = %.loopexit6
  store float %109, float* %99, align 4, !tbaa !14
  br label %.preheader9

.preheader9:                                      ; preds = %.preheader10, %..preheader9_crit_edge
  %104 = phi float [ %109, %..preheader9_crit_edge ], [ %100, %.preheader10 ]
  %105 = load float* %102, align 4, !tbaa !14
  %106 = fcmp ult float %104, %105
  br i1 %106, label %._crit_edge32, label %.lr.ph31

.lr.ph25:                                         ; preds = %.preheader10, %.loopexit6
  %107 = phi float [ %109, %.loopexit6 ], [ %100, %.preheader10 ]
  %108 = load float* %102, align 4, !tbaa !14
  %109 = fadd float %107, %108
  br i1 %35, label %.lr.ph24.preheader, label %.loopexit6

.lr.ph24.preheader:                               ; preds = %.lr.ph25
  %110 = getelementptr inbounds i32* %2, i64 %50
  %111 = load i32* %110, align 4, !tbaa !17
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [3 x float]* %pos, i64 %112, i64 %indvars.iv70
  %114 = load float* %113, align 4, !tbaa !14
  %115 = fadd float %108, %114
  store float %115, float* %113, align 4, !tbaa !14
  %exitcond65121 = icmp eq i32 %28, %51
  br i1 %exitcond65121, label %.loopexit6, label %._crit_edge95

._crit_edge95:                                    ; preds = %.lr.ph24.preheader, %._crit_edge95
  %indvars.iv62122 = phi i64 [ %indvars.iv.next63, %._crit_edge95 ], [ %50, %.lr.ph24.preheader ]
  %indvars.iv.next63 = add nsw i64 %indvars.iv62122, 1
  %.pre96 = load float* %102, align 4, !tbaa !14
  %116 = getelementptr inbounds i32* %2, i64 %indvars.iv.next63
  %117 = load i32* %116, align 4, !tbaa !17
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds [3 x float]* %pos, i64 %118, i64 %indvars.iv70
  %120 = load float* %119, align 4, !tbaa !14
  %121 = fadd float %.pre96, %120
  store float %121, float* %119, align 4, !tbaa !14
  %lftr.wideiv64 = trunc i64 %indvars.iv.next63 to i32
  %exitcond65 = icmp eq i32 %lftr.wideiv64, %51
  br i1 %exitcond65, label %.loopexit6, label %._crit_edge95

..loopexit5_crit_edge:                            ; preds = %._crit_edge97, %.lr.ph30.preheader
  %.pre99 = load float* %102, align 4, !tbaa !14
  br label %.loopexit5

.loopexit5:                                       ; preds = %..loopexit5_crit_edge, %.lr.ph31
  %122 = phi float [ %.pre99, %..loopexit5_crit_edge ], [ %124, %.lr.ph31 ]
  %123 = fcmp ult float %126, %122
  br i1 %123, label %._crit_edge32, label %.lr.ph31

.lr.ph31:                                         ; preds = %.preheader9, %.loopexit5
  %124 = phi float [ %122, %.loopexit5 ], [ %105, %.preheader9 ]
  %125 = phi float [ %126, %.loopexit5 ], [ %104, %.preheader9 ]
  %126 = fsub float %125, %124
  store float %126, float* %99, align 4, !tbaa !14
  br i1 %35, label %.lr.ph30.preheader, label %.loopexit5

.lr.ph30.preheader:                               ; preds = %.lr.ph31
  %127 = getelementptr inbounds i32* %2, i64 %50
  %128 = load i32* %127, align 4, !tbaa !17
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [3 x float]* %pos, i64 %129, i64 %indvars.iv70
  %131 = load float* %130, align 4, !tbaa !14
  %132 = fsub float %131, %124
  store float %132, float* %130, align 4, !tbaa !14
  %exitcond69124 = icmp eq i32 %28, %51
  br i1 %exitcond69124, label %..loopexit5_crit_edge, label %._crit_edge97

._crit_edge97:                                    ; preds = %.lr.ph30.preheader, %._crit_edge97
  %indvars.iv66125 = phi i64 [ %indvars.iv.next67, %._crit_edge97 ], [ %50, %.lr.ph30.preheader ]
  %indvars.iv.next67 = add nsw i64 %indvars.iv66125, 1
  %.pre98 = load float* %102, align 4, !tbaa !14
  %133 = getelementptr inbounds i32* %2, i64 %indvars.iv.next67
  %134 = load i32* %133, align 4, !tbaa !17
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [3 x float]* %pos, i64 %135, i64 %indvars.iv70
  %137 = load float* %136, align 4, !tbaa !14
  %138 = fsub float %137, %.pre98
  store float %138, float* %136, align 4, !tbaa !14
  %lftr.wideiv68 = trunc i64 %indvars.iv.next67 to i32
  %exitcond69 = icmp eq i32 %lftr.wideiv68, %51
  br i1 %exitcond69, label %..loopexit5_crit_edge, label %._crit_edge97

._crit_edge32:                                    ; preds = %.loopexit5, %.preheader9
  %.lcssa16 = phi float [ %104, %.preheader9 ], [ %126, %.loopexit5 ]
  %139 = getelementptr inbounds [3 x float]* %cg_cm, i64 %indvars.iv91, i64 %indvars.iv70
  store float %.lcssa16, float* %139, align 4, !tbaa !14
  %indvars.iv.next71 = add nuw nsw i64 %indvars.iv70, 1
  %exitcond72 = icmp eq i64 %indvars.iv.next71, 3
  br i1 %exitcond72, label %.backedge, label %.preheader10

._crit_edge56:                                    ; preds = %.backedge, %19
  ret void
}
