define i32 @image_rect(i32* nocapture %xi, i32* nocapture %xj, i32* nocapture %box_size, float %rlong2, i32* nocapture %shift, float* nocapture %r2) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32* %xi}, i64 0, metadata !54), !dbg !539
  tail call void @llvm.dbg.value(metadata !{i32* %xj}, i64 0, metadata !55), !dbg !539
  tail call void @llvm.dbg.value(metadata !{i32* %box_size}, i64 0, metadata !56), !dbg !539
  tail call void @llvm.dbg.value(metadata !{float %rlong2}, i64 0, metadata !57), !dbg !539
  tail call void @llvm.dbg.value(metadata !{i32* %shift}, i64 0, metadata !58), !dbg !539
  tail call void @llvm.dbg.value(metadata !{float* %r2}, i64 0, metadata !59), !dbg !539
  tail call void @llvm.dbg.value(metadata !540, i64 0, metadata !66), !dbg !541
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !61), !dbg !542
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !60), !dbg !543
  br label %for.body, !dbg !543

for.cond:                                         ; preds = %if.end13
  %0 = trunc i64 %indvars.iv.next to i32, !dbg !543
  %cmp = icmp slt i32 %0, 3, !dbg !543
  br i1 %cmp, label %for.body, label %for.end, !dbg !543

for.body:                                         ; preds = %entry, %for.cond
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.cond ]
  %rij2.041 = phi float [ 0.000000e+00, %entry ], [ %add15, %for.cond ]
  %t.039 = phi i32 [ 0, %entry ], [ %t.1, %for.cond ]
  %arrayidx = getelementptr inbounds i32* %xi, i64 %indvars.iv, !dbg !545
  %1 = load i32* %arrayidx, align 4, !dbg !545, !tbaa !387
  %arrayidx2 = getelementptr inbounds i32* %xj, i64 %indvars.iv, !dbg !545
  %2 = load i32* %arrayidx2, align 4, !dbg !545, !tbaa !387
  %sub = sub nsw i32 %1, %2, !dbg !545
  tail call void @llvm.dbg.value(metadata !{i32 %sub}, i64 0, metadata !62), !dbg !545
  %mul = mul nsw i32 %t.039, 3, !dbg !547
  tail call void @llvm.dbg.value(metadata !{i32 %mul}, i64 0, metadata !61), !dbg !547
  %arrayidx4 = getelementptr inbounds i32* %box_size, i64 %indvars.iv, !dbg !548
  %3 = load i32* %arrayidx4, align 4, !dbg !548, !tbaa !387
  tail call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !63), !dbg !548
  %div = sdiv i32 %3, 2, !dbg !549
  tail call void @llvm.dbg.value(metadata !{i32 %div}, i64 0, metadata !64), !dbg !549
  %sub5 = sub nsw i32 0, %div, !dbg !550
  %cmp6 = icmp slt i32 %sub, %sub5, !dbg !550
  br i1 %cmp6, label %if.then, label %if.else, !dbg !550

if.then:                                          ; preds = %for.body
  %add = add nsw i32 %mul, 2, !dbg !551
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !61), !dbg !551
  %add7 = add nsw i32 %sub, %3, !dbg !553
  tail call void @llvm.dbg.value(metadata !{i32 %add7}, i64 0, metadata !62), !dbg !553
  br label %if.end13, !dbg !554

if.else:                                          ; preds = %for.body
  %cmp8 = icmp sgt i32 %sub, %div, !dbg !555
  br i1 %cmp8, label %if.then9, label %if.else11, !dbg !555

if.then9:                                         ; preds = %if.else
  %sub10 = sub nsw i32 %sub, %3, !dbg !556
  tail call void @llvm.dbg.value(metadata !{i32 %sub10}, i64 0, metadata !62), !dbg !556
  br label %if.end13, !dbg !556

if.else11:                                        ; preds = %if.else
  %add12 = add nsw i32 %mul, 1, !dbg !557
  tail call void @llvm.dbg.value(metadata !{i32 %add12}, i64 0, metadata !61), !dbg !557
  br label %if.end13

if.end13:                                         ; preds = %if.then9, %if.else11, %if.then
  %dx.0 = phi i32 [ %add7, %if.then ], [ %sub10, %if.then9 ], [ %sub, %if.else11 ]
  %t.1 = phi i32 [ %add, %if.then ], [ %mul, %if.then9 ], [ %add12, %if.else11 ]
  %conv = sitofp i32 %dx.0 to float, !dbg !558
  tail call void @llvm.dbg.value(metadata !{float %conv}, i64 0, metadata !65), !dbg !558
  %mul14 = fmul float %conv, %conv, !dbg !559
  %add15 = fadd float %rij2.041, %mul14, !dbg !559
  tail call void @llvm.dbg.value(metadata !{float %add15}, i64 0, metadata !66), !dbg !559
  %cmp16 = fcmp ult float %add15, %rlong2, !dbg !560
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !543
  br i1 %cmp16, label %for.cond, label %return, !dbg !560

for.end:                                          ; preds = %for.cond
  store i32 %t.1, i32* %shift, align 4, !dbg !561, !tbaa !387
  store float %add15, float* %r2, align 4, !dbg !562, !tbaa !357
  br label %return, !dbg !563

return:                                           ; preds = %if.end13, %for.end
  %retval.0 = phi i32 [ 1, %for.end ], [ 0, %if.end13 ]
  ret i32 %retval.0, !dbg !563
}
