define i32 @image_cylindric(i32* nocapture %xi, i32* nocapture %xj, i32* nocapture %box_size, float %rlong2, i32* nocapture %shift, float* nocapture %r2) #2 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32* %xi}, i64 0, metadata !69), !dbg !564
  tail call void @llvm.dbg.value(metadata !{i32* %xj}, i64 0, metadata !70), !dbg !564
  tail call void @llvm.dbg.value(metadata !{i32* %box_size}, i64 0, metadata !71), !dbg !564
  tail call void @llvm.dbg.value(metadata !{float %rlong2}, i64 0, metadata !72), !dbg !564
  tail call void @llvm.dbg.value(metadata !{i32* %shift}, i64 0, metadata !73), !dbg !565
  tail call void @llvm.dbg.value(metadata !{float* %r2}, i64 0, metadata !74), !dbg !565
  tail call void @llvm.dbg.value(metadata !540, i64 0, metadata !81), !dbg !566
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !76), !dbg !567
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !75), !dbg !568
  br label %for.body, !dbg !568

for.cond:                                         ; preds = %if.end13
  %0 = trunc i64 %indvars.iv.next to i32, !dbg !568
  %cmp = icmp slt i32 %0, 3, !dbg !568
  br i1 %cmp, label %for.body, label %for.end, !dbg !568

for.body:                                         ; preds = %entry, %for.cond
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.cond ]
  %rij2.046 = phi float [ 0.000000e+00, %entry ], [ %add15, %for.cond ]
  %t.044 = phi i32 [ 0, %entry ], [ %t.1, %for.cond ]
  %arrayidx = getelementptr inbounds i32* %xi, i64 %indvars.iv, !dbg !570
  %1 = load i32* %arrayidx, align 4, !dbg !570, !tbaa !387
  %arrayidx2 = getelementptr inbounds i32* %xj, i64 %indvars.iv, !dbg !570
  %2 = load i32* %arrayidx2, align 4, !dbg !570, !tbaa !387
  %sub = sub nsw i32 %1, %2, !dbg !570
  tail call void @llvm.dbg.value(metadata !{i32 %sub}, i64 0, metadata !77), !dbg !570
  %mul = mul nsw i32 %t.044, 3, !dbg !572
  tail call void @llvm.dbg.value(metadata !{i32 %mul}, i64 0, metadata !76), !dbg !572
  %arrayidx4 = getelementptr inbounds i32* %box_size, i64 %indvars.iv, !dbg !573
  %3 = load i32* %arrayidx4, align 4, !dbg !573, !tbaa !387
  tail call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !78), !dbg !573
  %div = sdiv i32 %3, 2, !dbg !574
  tail call void @llvm.dbg.value(metadata !{i32 %div}, i64 0, metadata !79), !dbg !574
  %sub5 = sub nsw i32 0, %div, !dbg !575
  %cmp6 = icmp slt i32 %sub, %sub5, !dbg !575
  br i1 %cmp6, label %if.then, label %if.else, !dbg !575

if.then:                                          ; preds = %for.body
  %add = add nsw i32 %mul, 2, !dbg !576
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !76), !dbg !576
  %add7 = add nsw i32 %sub, %3, !dbg !578
  tail call void @llvm.dbg.value(metadata !{i32 %add7}, i64 0, metadata !77), !dbg !578
  br label %if.end13, !dbg !579

if.else:                                          ; preds = %for.body
  %cmp8 = icmp sgt i32 %sub, %div, !dbg !580
  br i1 %cmp8, label %if.then9, label %if.else11, !dbg !580

if.then9:                                         ; preds = %if.else
  %sub10 = sub nsw i32 %sub, %3, !dbg !581
  tail call void @llvm.dbg.value(metadata !{i32 %sub10}, i64 0, metadata !77), !dbg !581
  br label %if.end13, !dbg !581

if.else11:                                        ; preds = %if.else
  %add12 = add nsw i32 %mul, 1, !dbg !582
  tail call void @llvm.dbg.value(metadata !{i32 %add12}, i64 0, metadata !76), !dbg !582
  br label %if.end13

if.end13:                                         ; preds = %if.then9, %if.else11, %if.then
  %dx.0 = phi i32 [ %add7, %if.then ], [ %sub10, %if.then9 ], [ %sub, %if.else11 ]
  %t.1 = phi i32 [ %add, %if.then ], [ %mul, %if.then9 ], [ %add12, %if.else11 ]
  %conv = sitofp i32 %dx.0 to float, !dbg !583
  tail call void @llvm.dbg.value(metadata !{float %conv}, i64 0, metadata !80), !dbg !583
  %mul14 = fmul float %conv, %conv, !dbg !584
  %add15 = fadd float %rij2.046, %mul14, !dbg !584
  tail call void @llvm.dbg.value(metadata !{float %add15}, i64 0, metadata !81), !dbg !584
  %4 = trunc i64 %indvars.iv to i32, !dbg !585
  %cmp16 = icmp sgt i32 %4, 1, !dbg !585
  %cmp19 = fcmp ult float %add15, %rlong2, !dbg !586
  %or.cond = or i1 %cmp16, %cmp19, !dbg !585
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !568
  br i1 %or.cond, label %for.cond, label %return, !dbg !585

for.end:                                          ; preds = %for.cond
  store i32 %t.1, i32* %shift, align 4, !dbg !588, !tbaa !387
  store float %add15, float* %r2, align 4, !dbg !589, !tbaa !357
  br label %return, !dbg !590

return:                                           ; preds = %if.end13, %for.end
  %retval.0 = phi i32 [ 1, %for.end ], [ 0, %if.end13 ]
  ret i32 %retval.0, !dbg !590
}
