define i8* @replaceww(i8* %string, i8* nocapture %search, i8* nocapture %replace) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %string}, i64 0, metadata !43), !dbg !95
  tail call void @llvm.dbg.value(metadata !{i8* %search}, i64 0, metadata !44), !dbg !95
  tail call void @llvm.dbg.value(metadata !{i8* %replace}, i64 0, metadata !45), !dbg !95
  tail call void @llvm.dbg.value(metadata !56, i64 0, metadata !46), !dbg !96
  tail call void @llvm.dbg.value(metadata !56, i64 0, metadata !47), !dbg !96
  tail call void @llvm.dbg.value(metadata !56, i64 0, metadata !48), !dbg !96
  %call = tail call i64 @strlen(i8* %search) #6, !dbg !97
  %conv = trunc i64 %call to i32, !dbg !97
  tail call void @llvm.dbg.value(metadata !{i32 %conv}, i64 0, metadata !51), !dbg !97
  %call1 = tail call i64 @strlen(i8* %string) #6, !dbg !98
  %conv2 = trunc i64 %call1 to i32, !dbg !98
  tail call void @llvm.dbg.value(metadata !{i32 %conv2}, i64 0, metadata !50), !dbg !98
  %cmp = icmp eq i8* %string, null, !dbg !99
  %cmp4 = icmp eq i32 %conv, 0, !dbg !99
  %or.cond = or i1 %cmp, %cmp4, !dbg !99
  %cmp7 = icmp eq i32 %conv2, 0, !dbg !99
  %or.cond165 = or i1 %or.cond, %cmp7, !dbg !99
  br i1 %or.cond165, label %if.then, label %if.end11, !dbg !99

if.then:                                          ; preds = %entry
  br i1 %cmp, label %return, label %if.then9, !dbg !100

if.then9:                                         ; preds = %if.then
  %call10 = tail call noalias i8* @strdup(i8* %string) #7, !dbg !102
  tail call void @llvm.dbg.value(metadata !{i8* %call10}, i64 0, metadata !46), !dbg !102
  br label %return, !dbg !102

if.end11:                                         ; preds = %entry
  %call12 = tail call i64 @strlen(i8* %replace) #6, !dbg !103
  %conv13 = trunc i64 %call12 to i32, !dbg !103
  tail call void @llvm.dbg.value(metadata !{i32 %conv13}, i64 0, metadata !52), !dbg !103
  %mul = mul nsw i32 %conv13, %conv2, !dbg !104
  %div = sdiv i32 %mul, %conv, !dbg !104
  %cmp14 = icmp sgt i32 %conv2, %div, !dbg !104
  %conv2.div = select i1 %cmp14, i32 %conv2, i32 %div, !dbg !104
  tail call void @llvm.dbg.value(metadata !{i32 %conv2.div}, i64 0, metadata !49), !dbg !104
  %add = add nsw i32 %conv2.div, 1, !dbg !105
  %call18 = tail call i8* @save_calloc(i8* getelementptr inbounds ([4 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8]* @.str1, i64 0, i64 0), i32 98, i32 %add, i32 1) #7, !dbg !105
  tail call void @llvm.dbg.value(metadata !{i8* %call18}, i64 0, metadata !46), !dbg !105
  %call19 = tail call i8* @strcpy(i8* %call18, i8* %string) #7, !dbg !106
  tail call void @llvm.dbg.value(metadata !{i8* %call18}, i64 0, metadata !48), !dbg !107
  %call20181 = tail call i8* @strstr(i8* %call18, i8* %search) #6, !dbg !108
  tail call void @llvm.dbg.value(metadata !{i8* %call20181}, i64 0, metadata !47), !dbg !108
  %cmp21182 = icmp eq i8* %call20181, null, !dbg !108
  br i1 %cmp21182, label %return, label %while.body.lr.ph, !dbg !108

while.body.lr.ph:                                 ; preds = %if.end11
  %sext = shl i64 %call, 32, !dbg !109
  %idxprom31 = ashr exact i64 %sext, 32, !dbg !109
  %cmp41 = icmp sgt i32 %conv13, %conv, !dbg !111
  %cmp86179 = icmp sgt i32 %conv13, 0, !dbg !113
  %sub79 = sub i64 %call12, %call, !dbg !116
  %cmp50 = icmp slt i32 %conv13, %conv, !dbg !118
  %add54 = sub i32 %conv, %conv13, !dbg !120
  %sext198 = shl i64 %sub79, 32, !dbg !108
  %0 = ashr exact i64 %sext198, 32, !dbg !108
  br label %while.body, !dbg !108

while.body:                                       ; preds = %while.body.lr.ph, %while.cond.backedge
  %call20184 = phi i8* [ %call20181, %while.body.lr.ph ], [ %call20, %while.cond.backedge ]
  %bufptr.0183 = phi i8* [ %call18, %while.body.lr.ph ], [ %bufptr.0.be, %while.cond.backedge ]
  %cmp23 = icmp eq i8* %call20184, %bufptr.0183, !dbg !109
  br i1 %cmp23, label %while.body.land.lhs.true_crit_edge, label %lor.lhs.false25, !dbg !109

while.body.land.lhs.true_crit_edge:               ; preds = %while.body
  %call35.pre = tail call i16** @__ctype_b_loc() #8, !dbg !109
  br label %land.lhs.true, !dbg !109

lor.lhs.false25:                                  ; preds = %while.body
  %arrayidx = getelementptr inbounds i8* %call20184, i64 -1, !dbg !109
  %1 = load i8* %arrayidx, align 1, !dbg !109, !tbaa !85
  %idxprom = sext i8 %1 to i64, !dbg !109
  %call27 = tail call i16** @__ctype_b_loc() #8, !dbg !109
  %2 = load i16** %call27, align 8, !dbg !109, !tbaa !122
  %arrayidx28 = getelementptr inbounds i16* %2, i64 %idxprom, !dbg !109
  %3 = load i16* %arrayidx28, align 2, !dbg !109, !tbaa !123
  %and = and i16 %3, 8, !dbg !109
  %tobool30 = icmp eq i16 %and, 0, !dbg !109
  br i1 %tobool30, label %land.lhs.true, label %while.cond.backedge, !dbg !109

land.lhs.true:                                    ; preds = %while.body.land.lhs.true_crit_edge, %lor.lhs.false25
  %call35.pre-phi = phi i16** [ %call35.pre, %while.body.land.lhs.true_crit_edge ], [ %call27, %lor.lhs.false25 ], !dbg !109
  %arrayidx32 = getelementptr inbounds i8* %call20184, i64 %idxprom31, !dbg !109
  %4 = load i8* %arrayidx32, align 1, !dbg !109, !tbaa !85
  %idxprom34 = sext i8 %4 to i64, !dbg !109
  %5 = load i16** %call35.pre-phi, align 8, !dbg !109, !tbaa !122
  %arrayidx36 = getelementptr inbounds i16* %5, i64 %idxprom34, !dbg !109
  %6 = load i16* %arrayidx36, align 2, !dbg !109, !tbaa !123
  %and38 = and i16 %6, 8, !dbg !109
  %tobool39 = icmp eq i16 %and38, 0, !dbg !109
  br i1 %tobool39, label %if.then40, label %while.cond.backedge, !dbg !109

if.then40:                                        ; preds = %land.lhs.true
  br i1 %cmp41, label %if.else, label %for.cond.preheader, !dbg !111

for.cond.preheader:                               ; preds = %if.then40
  br i1 %cmp86179, label %for.body, label %for.end, !dbg !124

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %arrayidx47 = getelementptr inbounds i8* %replace, i64 %indvars.iv, !dbg !126
  %7 = load i8* %arrayidx47, align 1, !dbg !126, !tbaa !85
  %arrayidx49 = getelementptr inbounds i8* %call20184, i64 %indvars.iv, !dbg !126
  store i8 %7, i8* %arrayidx49, align 1, !dbg !126, !tbaa !85
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !124
  tail call void @llvm.dbg.value(metadata !{i32 %conv13}, i64 0, metadata !53), !dbg !124
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !124
  %exitcond = icmp eq i32 %lftr.wideiv, %conv13, !dbg !124
  br i1 %exitcond, label %for.end, label %for.body, !dbg !124

for.end:                                          ; preds = %for.body, %for.cond.preheader
  %i.0.lcssa = phi i32 [ 0, %for.cond.preheader ], [ %conv13, %for.body ]
  br i1 %cmp50, label %while.cond53.preheader, label %while.cond.backedge, !dbg !118

while.cond53.preheader:                           ; preds = %for.end
  %sub168 = add i32 %add54, %i.0.lcssa, !dbg !120
  %idxprom55169 = sext i32 %sub168 to i64, !dbg !120
  %arrayidx56170 = getelementptr inbounds i8* %call20184, i64 %idxprom55169, !dbg !120
  %8 = load i8* %arrayidx56170, align 1, !dbg !120, !tbaa !85
  %cmp58171 = icmp eq i8 %8, 0, !dbg !120
  %idxprom68172 = sext i32 %i.0.lcssa to i64, !dbg !127
  %arrayidx69173 = getelementptr inbounds i8* %call20184, i64 %idxprom68172, !dbg !127
  br i1 %cmp58171, label %while.end, label %while.body60, !dbg !120

while.body60:                                     ; preds = %while.cond53.preheader, %while.body60
  %indvars.iv189 = phi i64 [ %indvars.iv.next190, %while.body60 ], [ %idxprom68172, %while.cond53.preheader ]
  %arrayidx69175 = phi i8* [ %arrayidx69, %while.body60 ], [ %arrayidx69173, %while.cond53.preheader ]
  %9 = phi i8 [ %11, %while.body60 ], [ %8, %while.cond53.preheader ]
  store i8 %9, i8* %arrayidx69175, align 1, !dbg !128, !tbaa !85
  %indvars.iv.next190 = add i64 %indvars.iv189, 1, !dbg !120
  %10 = trunc i64 %indvars.iv.next190 to i32, !dbg !120
  %sub = add i32 %add54, %10, !dbg !120
  %idxprom55 = sext i32 %sub to i64, !dbg !120
  %arrayidx56 = getelementptr inbounds i8* %call20184, i64 %idxprom55, !dbg !120
  %11 = load i8* %arrayidx56, align 1, !dbg !120, !tbaa !85
  %cmp58 = icmp eq i8 %11, 0, !dbg !120
  %arrayidx69 = getelementptr inbounds i8* %call20184, i64 %indvars.iv.next190, !dbg !127
  br i1 %cmp58, label %while.end, label %while.body60, !dbg !120

while.end:                                        ; preds = %while.body60, %while.cond53.preheader
  %arrayidx69.lcssa = phi i8* [ %arrayidx69173, %while.cond53.preheader ], [ %arrayidx69, %while.body60 ]
  store i8 0, i8* %arrayidx69.lcssa, align 1, !dbg !127, !tbaa !85
  br label %while.cond.backedge, !dbg !130

if.else:                                          ; preds = %if.then40
  %call71 = tail call i64 @strlen(i8* %call20184) #6, !dbg !131
  %conv72 = trunc i64 %call71 to i32, !dbg !131
  tail call void @llvm.dbg.value(metadata !{i32 %conv72}, i64 0, metadata !54), !dbg !131
  %cmp74177 = icmp slt i32 %conv72, %conv, !dbg !131
  br i1 %cmp74177, label %for.cond85.loopexit, label %for.body76.lr.ph, !dbg !131

for.body76.lr.ph:                                 ; preds = %if.else
  %sext199 = shl i64 %call71, 32
  %12 = ashr exact i64 %sext199, 32
  br label %for.body76, !dbg !131

for.body76:                                       ; preds = %for.body76, %for.body76.lr.ph
  %indvars.iv191 = phi i64 [ %indvars.iv.next192, %for.body76 ], [ %12, %for.body76.lr.ph ]
  %arrayidx78 = getelementptr inbounds i8* %call20184, i64 %indvars.iv191, !dbg !116
  %13 = load i8* %arrayidx78, align 1, !dbg !116, !tbaa !85
  %14 = add nsw i64 %0, %indvars.iv191, !dbg !116
  %arrayidx82 = getelementptr inbounds i8* %call20184, i64 %14, !dbg !116
  store i8 %13, i8* %arrayidx82, align 1, !dbg !116, !tbaa !85
  %indvars.iv.next192 = add i64 %indvars.iv191, -1, !dbg !131
  %15 = trunc i64 %indvars.iv191 to i32, !dbg !131
  %cmp74 = icmp sgt i32 %15, %conv, !dbg !131
  br i1 %cmp74, label %for.body76, label %for.cond85.loopexit, !dbg !131

for.cond85.loopexit:                              ; preds = %for.body76, %if.else
  br i1 %cmp86179, label %for.body88, label %while.cond.backedge, !dbg !113

for.body88:                                       ; preds = %for.cond85.loopexit, %for.body88
  %indvars.iv194 = phi i64 [ %indvars.iv.next195, %for.body88 ], [ 0, %for.cond85.loopexit ]
  %arrayidx90 = getelementptr inbounds i8* %replace, i64 %indvars.iv194, !dbg !132
  %16 = load i8* %arrayidx90, align 1, !dbg !132, !tbaa !85
  %arrayidx92 = getelementptr inbounds i8* %call20184, i64 %indvars.iv194, !dbg !132
  store i8 %16, i8* %arrayidx92, align 1, !dbg !132, !tbaa !85
  %indvars.iv.next195 = add i64 %indvars.iv194, 1, !dbg !113
  %lftr.wideiv196 = trunc i64 %indvars.iv.next195 to i32, !dbg !113
  %exitcond197 = icmp eq i32 %lftr.wideiv196, %conv13, !dbg !113
  br i1 %exitcond197, label %while.cond.backedge, label %for.body88, !dbg !113

while.cond.backedge:                              ; preds = %lor.lhs.false25, %land.lhs.true, %while.end, %for.end, %for.body88, %for.cond85.loopexit
  %idx.ext98.pn.in.in = phi i64 [ %call12, %for.cond85.loopexit ], [ %call12, %for.body88 ], [ %call12, %for.end ], [ %call12, %while.end ], [ %call, %land.lhs.true ], [ %call, %lor.lhs.false25 ]
  %idx.ext98.pn.in = shl i64 %idx.ext98.pn.in.in, 32, !dbg !133
  %idx.ext98.pn = ashr exact i64 %idx.ext98.pn.in, 32, !dbg !133
  %bufptr.0.be = getelementptr inbounds i8* %call20184, i64 %idx.ext98.pn, !dbg !133
  %call20 = tail call i8* @strstr(i8* %bufptr.0.be, i8* %search) #6, !dbg !108
  tail call void @llvm.dbg.value(metadata !{i8* %call20184}, i64 0, metadata !47), !dbg !108
  %cmp21 = icmp eq i8* %call20, null, !dbg !108
  br i1 %cmp21, label %return, label %while.body, !dbg !108

return:                                           ; preds = %if.end11, %while.cond.backedge, %if.then9, %if.then
  %retval.0 = phi i8* [ %call10, %if.then9 ], [ null, %if.then ], [ %call18, %while.cond.backedge ], [ %call18, %if.end11 ]
  ret i8* %retval.0, !dbg !134
}
