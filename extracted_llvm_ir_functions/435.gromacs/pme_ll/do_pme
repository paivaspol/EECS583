define float @do_pme(%struct._IO_FILE* nocapture %logfile, i32 %bVerbose, %struct.t_inputrec* nocapture %ir, [3 x float]* nocapture %x, [3 x float]* nocapture %f, float* nocapture %charge, [3 x float]* nocapture %box, %struct.t_commrec* %cr, %struct.t_nsborder* nocapture %nsb, %struct.t_nrnb* nocapture %nrnb, [3 x float]* nocapture %vir, float %ewaldcoeff, i32 %bGatherOnly) #0 {
entry:
  %nx = alloca i32, align 4
  %ny = alloca i32, align 4
  %nz = alloca i32, align 4
  %la12 = alloca i32, align 4
  %la2 = alloca i32, align 4
  %ptr = alloca float*, align 8
  %0 = load %struct.t_fftgrid** @grid, align 8, !tbaa !0
  call void @unpack_fftgrid(%struct.t_fftgrid* %0, i32* %nx, i32* %ny, i32* %nz, i32* %la2, i32* %la12, i32 1, float** %ptr) #4
  %nodeid = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 0
  %1 = load i32* %nodeid, align 4, !tbaa !4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %idxprom
  %2 = load i32* %arrayidx, align 4, !tbaa !4
  %pme_order = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 20
  %3 = load i32* %pme_order, align 4, !tbaa !4
  %arrayidx3 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %idxprom
  %4 = load i32* %arrayidx3, align 4, !tbaa !4
  %idx.ext = sext i32 %4 to i64
  %add.ptr = getelementptr inbounds [3 x float]* %x, i64 %idx.ext
  %add.ptr9 = getelementptr inbounds float* %charge, i64 %idx.ext
  %call = call %struct.t_fftgrid* @spread_on_grid(%struct._IO_FILE* undef, i32 %2, i32 %3, [3 x float]* %add.ptr, float* %add.ptr9, [3 x float]* %box, i32 %bGatherOnly) #6
  %tobool = icmp eq i32 %bGatherOnly, 0
  br i1 %tobool, label %if.then, label %if.end57

if.then:                                          ; preds = %entry
  %5 = load i32* %pme_order, align 4, !tbaa !4
  %mul = mul nsw i32 %5, %5
  %mul13 = mul nsw i32 %mul, %5
  %6 = load i32* %nodeid, align 4, !tbaa !4
  %idxprom15 = sext i32 %6 to i64
  %arrayidx17 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %idxprom15
  %7 = load i32* %arrayidx17, align 4, !tbaa !4
  %mul18 = mul nsw i32 %mul13, %7
  %conv = sitofp i32 %mul18 to double
  %arrayidx19 = getelementptr inbounds %struct.t_nrnb* %nrnb, i64 0, i32 0, i64 81
  %8 = load double* %arrayidx19, align 8, !tbaa !5
  %add = fadd double %8, %conv
  store double %add, double* %arrayidx19, align 8, !tbaa !5
  %nnodes = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 1
  %9 = load i32* %nnodes, align 4, !tbaa !4
  %cmp = icmp sgt i32 %9, 1
  br i1 %cmp, label %if.then23, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %nthreads = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 5
  %10 = load i32* %nthreads, align 4, !tbaa !4
  %cmp21 = icmp sgt i32 %10, 1
  br i1 %cmp21, label %if.then23, label %if.end

if.then23:                                        ; preds = %lor.lhs.false, %if.then
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([48 x i8]* @.str1, i64 0, i64 0)) #4
  br label %if.end

if.end:                                           ; preds = %if.then23, %lor.lhs.false
  %11 = load %struct.t_fftgrid** @grid, align 8, !tbaa !0
  call void @gmxfft3D(%struct.t_fftgrid* %11, i32 -1, %struct.t_commrec* %cr) #4
  %arrayidx1.i = getelementptr inbounds [3 x float]* %box, i64 0, i64 0
  %12 = load float* %arrayidx1.i, align 4, !tbaa !3
  %arrayidx3.i = getelementptr inbounds [3 x float]* %box, i64 1, i64 1
  %13 = load float* %arrayidx3.i, align 4, !tbaa !3
  %arrayidx5.i = getelementptr inbounds [3 x float]* %box, i64 2, i64 2
  %14 = load float* %arrayidx5.i, align 4, !tbaa !3
  %mul.i = fmul float %13, %14
  %arrayidx7.i = getelementptr inbounds [3 x float]* %box, i64 2, i64 1
  %15 = load float* %arrayidx7.i, align 4, !tbaa !3
  %arrayidx9.i = getelementptr inbounds [3 x float]* %box, i64 1, i64 2
  %16 = load float* %arrayidx9.i, align 4, !tbaa !3
  %mul10.i = fmul float %15, %16
  %sub.i = fsub float %mul.i, %mul10.i
  %mul11.i = fmul float %12, %sub.i
  %arrayidx13.i = getelementptr inbounds [3 x float]* %box, i64 1, i64 0
  %17 = load float* %arrayidx13.i, align 4, !tbaa !3
  %arrayidx15.i = getelementptr inbounds [3 x float]* %box, i64 0, i64 1
  %18 = load float* %arrayidx15.i, align 4, !tbaa !3
  %mul18.i = fmul float %14, %18
  %arrayidx22.i = getelementptr inbounds [3 x float]* %box, i64 0, i64 2
  %19 = load float* %arrayidx22.i, align 4, !tbaa !3
  %mul23.i = fmul float %15, %19
  %sub24.i = fsub float %mul18.i, %mul23.i
  %mul25.i = fmul float %17, %sub24.i
  %sub26.i = fsub float %mul11.i, %mul25.i
  %arrayidx28.i = getelementptr inbounds [3 x float]* %box, i64 2, i64 0
  %20 = load float* %arrayidx28.i, align 4, !tbaa !3
  %mul33.i = fmul float %16, %18
  %mul38.i = fmul float %13, %19
  %sub39.i = fsub float %mul33.i, %mul38.i
  %mul40.i = fmul float %20, %sub39.i
  %add.i = fadd float %mul40.i, %sub26.i
  %21 = load %struct.t_fftgrid** @grid, align 8, !tbaa !0
  %call25 = call float @solve_pme(%struct.t_fftgrid* %21, float %ewaldcoeff, float %add.i, float** getelementptr inbounds ([3 x float*]* @bsp_mod, i64 0, i64 0), [3 x float]* getelementptr inbounds ([3 x [3 x float]]* @recipbox, i64 0, i64 0), [3 x float]* %vir, %struct.t_commrec* %cr) #6
  store float %call25, float* @do_pme.energy, align 4, !tbaa !3
  %22 = load i32* %nx, align 4, !tbaa !4
  %23 = load i32* %ny, align 4, !tbaa !4
  %mul26 = mul nsw i32 %23, %22
  %24 = load i32* %nz, align 4, !tbaa !4
  %mul27 = mul nsw i32 %mul26, %24
  %conv28 = sitofp i32 %mul27 to double
  %mul29 = fmul double %conv28, 5.000000e-01
  %arrayidx31 = getelementptr inbounds %struct.t_nrnb* %nrnb, i64 0, i32 0, i64 86
  %25 = load double* %arrayidx31, align 8, !tbaa !5
  %add32 = fadd double %25, %mul29
  store double %add32, double* %arrayidx31, align 8, !tbaa !5
  %26 = load %struct.t_fftgrid** @grid, align 8, !tbaa !0
  call void @gmxfft3D(%struct.t_fftgrid* %26, i32 1, %struct.t_commrec* %cr) #4
  %27 = load i32* %nnodes, align 4, !tbaa !4
  %cmp34 = icmp sgt i32 %27, 1
  br i1 %cmp34, label %if.then40, label %lor.lhs.false36

lor.lhs.false36:                                  ; preds = %if.end
  %nthreads37 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 5
  %28 = load i32* %nthreads37, align 4, !tbaa !4
  %cmp38 = icmp sgt i32 %28, 1
  br i1 %cmp38, label %if.then40, label %if.end41

if.then40:                                        ; preds = %lor.lhs.false36, %if.end
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([48 x i8]* @.str1, i64 0, i64 0)) #4
  br label %if.end41

if.end41:                                         ; preds = %if.then40, %lor.lhs.false36
  %29 = load %struct.t_fftgrid** @grid, align 8, !tbaa !0
  %nxyz = getelementptr inbounds %struct.t_fftgrid* %29, i64 0, i32 11
  %30 = load i32* %nxyz, align 4, !tbaa !4
  %conv42 = sitofp i32 %30 to double
  %conv43 = sitofp i32 %30 to float
  %conv44 = fpext float %conv43 to double
  %call45 = call double @log(double %conv44) #4
  %mul46 = fmul double %conv42, %call45
  %31 = load i32* %nnodes, align 4, !tbaa !4
  %conv48 = sitofp i32 %31 to double
  %mul50 = fmul double %conv48, 0x3FE62E42FEFA39EF
  %div = fdiv double %mul46, %mul50
  %conv51 = fptosi double %div to i32
  %mul52 = shl nsw i32 %conv51, 1
  %conv53 = sitofp i32 %mul52 to double
  %arrayidx55 = getelementptr inbounds %struct.t_nrnb* %nrnb, i64 0, i32 0, i64 84
  %32 = load double* %arrayidx55, align 8, !tbaa !5
  %add56 = fadd double %32, %conv53
  store double %add56, double* %arrayidx55, align 8, !tbaa !5
  br label %if.end57

if.end57:                                         ; preds = %entry, %if.end41
  %33 = load %struct.t_fftgrid** @grid, align 8, !tbaa !0
  %34 = load [3 x i32]** @idx, align 8, !tbaa !0
  %35 = load i32* %nodeid, align 4, !tbaa !4
  %idxprom59 = sext i32 %35 to i64
  %arrayidx61 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %idxprom59
  %36 = load i32* %arrayidx61, align 4, !tbaa !4
  %idx.ext62 = sext i32 %36 to i64
  %add.ptr63 = getelementptr inbounds [3 x float]* %f, i64 %idx.ext62
  %add.ptr69 = getelementptr inbounds float* %charge, i64 %idx.ext62
  %arrayidx73 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %idxprom59
  %37 = load i32* %arrayidx73, align 4, !tbaa !4
  %38 = load i32* %pme_order, align 4, !tbaa !4
  %39 = load i32** @nnx, align 8, !tbaa !0
  %40 = load i32** @nny, align 8, !tbaa !0
  %41 = load i32** @nnz, align 8, !tbaa !0
  call void @gather_f_bsplines(%struct.t_fftgrid* %33, [3 x float]* getelementptr inbounds ([3 x [3 x float]]* @recipbox, i64 0, i64 0), [3 x i32]* %34, [3 x float]* %add.ptr63, float* %add.ptr69, float** getelementptr inbounds ([3 x float*]* @theta, i64 0, i64 0), float** getelementptr inbounds ([3 x float*]* @dtheta, i64 0, i64 0), i32 %37, i32 %38, i32* %39, i32* %40, i32* %41) #6
  %42 = load i32* %pme_order, align 4, !tbaa !4
  %mul77 = mul nsw i32 %42, %42
  %mul79 = mul nsw i32 %mul77, %42
  %43 = load i32* %nodeid, align 4, !tbaa !4
  %idxprom81 = sext i32 %43 to i64
  %arrayidx83 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %idxprom81
  %44 = load i32* %arrayidx83, align 4, !tbaa !4
  %mul84 = mul nsw i32 %mul79, %44
  %conv85 = sitofp i32 %mul84 to double
  %arrayidx87 = getelementptr inbounds %struct.t_nrnb* %nrnb, i64 0, i32 0, i64 83
  %45 = load double* %arrayidx87, align 8, !tbaa !5
  %add88 = fadd double %45, %conv85
  store double %add88, double* %arrayidx87, align 8, !tbaa !5
  %46 = load float* @do_pme.energy, align 4, !tbaa !3
  ret float %46
}
