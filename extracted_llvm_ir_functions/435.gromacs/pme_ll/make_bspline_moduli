define void @make_bspline_moduli(float** nocapture readonly %bsp_mod, i32 %nx, i32 %ny, i32 %nz, i32 %order) #1 {
  tail call void @llvm.dbg.value(metadata float** %bsp_mod, i64 0, metadata !502, metadata !785), !dbg !1683
  tail call void @llvm.dbg.value(metadata i32 %nx, i64 0, metadata !503, metadata !785), !dbg !1684
  tail call void @llvm.dbg.value(metadata i32 %ny, i64 0, metadata !504, metadata !785), !dbg !1685
  tail call void @llvm.dbg.value(metadata i32 %nz, i64 0, metadata !505, metadata !785), !dbg !1686
  tail call void @llvm.dbg.value(metadata i32 %order, i64 0, metadata !506, metadata !785), !dbg !1687
  %1 = icmp sgt i32 %ny, %nz, !dbg !1688
  %2 = select i1 %1, i32 %ny, i32 %nz, !dbg !1688
  %3 = icmp slt i32 %2, %nx, !dbg !1688
  %nx. = select i1 %3, i32 %nx, i32 %2, !dbg !1688
  tail call void @llvm.dbg.value(metadata i32 %nx., i64 0, metadata !507, metadata !785), !dbg !1689
  %4 = tail call i8* @save_calloc(i8* getelementptr inbounds ([5 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8]* @.str4, i64 0, i64 0), i32 614, i32 %order, i32 4) #7, !dbg !1690
  %5 = bitcast i8* %4 to float*, !dbg !1690
  tail call void @llvm.dbg.value(metadata float* %5, i64 0, metadata !508, metadata !785), !dbg !1691
  %6 = tail call i8* @save_calloc(i8* getelementptr inbounds ([6 x i8]* @.str5, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8]* @.str4, i64 0, i64 0), i32 615, i32 %order, i32 4) #7, !dbg !1692
  %7 = bitcast i8* %6 to float*, !dbg !1692
  tail call void @llvm.dbg.value(metadata float* %7, i64 0, metadata !509, metadata !785), !dbg !1693
  %8 = tail call i8* @save_calloc(i8* getelementptr inbounds ([9 x i8]* @.str6, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8]* @.str4, i64 0, i64 0), i32 616, i32 %nx., i32 4) #7, !dbg !1694
  %9 = bitcast i8* %8 to float*, !dbg !1694
  tail call void @llvm.dbg.value(metadata float* %9, i64 0, metadata !510, metadata !785), !dbg !1695
  %10 = add i32 %order, -1, !dbg !1696
  %11 = sext i32 %10 to i64, !dbg !1697
  %12 = getelementptr inbounds float* %5, i64 %11, !dbg !1697
  store float 0.000000e+00, float* %12, align 4, !dbg !1698, !tbaa !814
  %13 = getelementptr inbounds i8* %4, i64 4, !dbg !1699
  %14 = bitcast i8* %13 to float*, !dbg !1699
  store float 0.000000e+00, float* %14, align 4, !dbg !1700, !tbaa !814
  store float 1.000000e+00, float* %5, align 4, !dbg !1701, !tbaa !814
  tail call void @llvm.dbg.value(metadata i32 3, i64 0, metadata !512, metadata !785), !dbg !1702
  %15 = icmp sgt i32 %order, 3, !dbg !1703
  br i1 %15, label %.lr.ph15, label %._crit_edge20, !dbg !1706

.lr.ph15:                                         ; preds = %0, %._crit_edge16
  %indvars.iv38 = phi i64 [ %indvars.iv.next39, %._crit_edge16 ], [ 3, %0 ]
  %indvars.iv34 = phi i32 [ %indvars.iv.next35, %._crit_edge16 ], [ 2, %0 ]
  %16 = trunc i64 %indvars.iv38 to i32, !dbg !1707
  %17 = sitofp i32 %16 to double, !dbg !1707
  %18 = fadd double %17, -1.000000e+00, !dbg !1709
  %19 = fdiv double 1.000000e+00, %18, !dbg !1710
  %20 = fptrunc double %19 to float, !dbg !1711
  tail call void @llvm.dbg.value(metadata float %20, i64 0, metadata !514, metadata !785), !dbg !1712
  %21 = add nsw i64 %indvars.iv38, -1, !dbg !1713
  %22 = getelementptr inbounds float* %5, i64 %21, !dbg !1714
  store float 0.000000e+00, float* %22, align 4, !dbg !1715, !tbaa !814
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !513, metadata !785), !dbg !1716
  br label %23, !dbg !1717

; <label>:23                                      ; preds = %23, %.lr.ph15
  %indvars.iv32 = phi i64 [ 1, %.lr.ph15 ], [ %indvars.iv.next33, %23 ]
  %24 = trunc i64 %indvars.iv32 to i32, !dbg !1719
  %25 = sitofp i32 %24 to float, !dbg !1719
  %26 = sub nsw i64 %indvars.iv38, %indvars.iv32, !dbg !1721
  %27 = add nsw i64 %26, -2, !dbg !1722
  %28 = getelementptr inbounds float* %5, i64 %27, !dbg !1723
  %29 = load float* %28, align 4, !dbg !1723, !tbaa !814
  %30 = fmul float %25, %29, !dbg !1724
  %31 = trunc i64 %26 to i32, !dbg !1725
  %32 = sitofp i32 %31 to float, !dbg !1725
  %33 = add nsw i64 %26, -1, !dbg !1726
  %34 = getelementptr inbounds float* %5, i64 %33, !dbg !1727
  %35 = load float* %34, align 4, !dbg !1727, !tbaa !814
  %36 = fmul float %32, %35, !dbg !1728
  %37 = fadd float %30, %36, !dbg !1729
  %38 = fmul float %20, %37, !dbg !1730
  store float %38, float* %34, align 4, !dbg !1731, !tbaa !814
  %indvars.iv.next33 = add nuw nsw i64 %indvars.iv32, 1, !dbg !1717
  %lftr.wideiv36 = trunc i64 %indvars.iv.next33 to i32, !dbg !1717
  %exitcond37 = icmp eq i32 %lftr.wideiv36, %indvars.iv34, !dbg !1717
  br i1 %exitcond37, label %._crit_edge16, label %23, !dbg !1717

._crit_edge16:                                    ; preds = %23
  %39 = load float* %5, align 4, !dbg !1732, !tbaa !814
  %40 = fmul float %20, %39, !dbg !1733
  store float %40, float* %5, align 4, !dbg !1734, !tbaa !814
  %indvars.iv.next39 = add nuw nsw i64 %indvars.iv38, 1, !dbg !1706
  %indvars.iv.next35 = add nuw nsw i32 %indvars.iv34, 1, !dbg !1706
  %exitcond41 = icmp eq i32 %16, %10, !dbg !1706
  br i1 %exitcond41, label %._crit_edge20, label %.lr.ph15, !dbg !1706

._crit_edge20:                                    ; preds = %._crit_edge16, %0
  %41 = phi float [ 1.000000e+00, %0 ], [ %40, %._crit_edge16 ]
  %42 = fsub float -0.000000e+00, %41, !dbg !1735
  store float %42, float* %7, align 4, !dbg !1736, !tbaa !814
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !512, metadata !785), !dbg !1702
  %43 = icmp sgt i32 %order, 1, !dbg !1737
  br i1 %43, label %.lr.ph11, label %._crit_edge12, !dbg !1740

.lr.ph11:                                         ; preds = %._crit_edge20, %.lr.ph11
  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %.lr.ph11 ], [ 1, %._crit_edge20 ]
  %44 = add nsw i64 %indvars.iv28, -1, !dbg !1741
  %45 = getelementptr inbounds float* %5, i64 %44, !dbg !1742
  %46 = load float* %45, align 4, !dbg !1742, !tbaa !814
  %47 = getelementptr inbounds float* %5, i64 %indvars.iv28, !dbg !1743
  %48 = load float* %47, align 4, !dbg !1743, !tbaa !814
  %49 = fsub float %46, %48, !dbg !1744
  %50 = getelementptr inbounds float* %7, i64 %indvars.iv28, !dbg !1745
  store float %49, float* %50, align 4, !dbg !1746, !tbaa !814
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1, !dbg !1740
  %lftr.wideiv30 = trunc i64 %indvars.iv28 to i32, !dbg !1740
  %exitcond31 = icmp eq i32 %lftr.wideiv30, %10, !dbg !1740
  br i1 %exitcond31, label %._crit_edge12, label %.lr.ph11, !dbg !1740

._crit_edge12:                                    ; preds = %.lr.ph11, %._crit_edge20
  %51 = sitofp i32 %10 to double, !dbg !1747
  %52 = fdiv double 1.000000e+00, %51, !dbg !1748
  %53 = fptrunc double %52 to float, !dbg !1749
  tail call void @llvm.dbg.value(metadata float %53, i64 0, metadata !514, metadata !785), !dbg !1712
  store float 0.000000e+00, float* %12, align 4, !dbg !1750, !tbaa !814
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !513, metadata !785), !dbg !1716
  %54 = icmp sgt i32 %10, 1, !dbg !1751
  br i1 %54, label %.lr.ph7, label %._crit_edge8, !dbg !1754

.lr.ph7:                                          ; preds = %._crit_edge12
  %55 = sext i32 %order to i64, !dbg !1754
  %56 = add i32 %order, -2, !dbg !1754
  br label %57, !dbg !1754

; <label>:57                                      ; preds = %57, %.lr.ph7
  %indvars.iv24 = phi i64 [ 1, %.lr.ph7 ], [ %indvars.iv.next25, %57 ]
  %58 = trunc i64 %indvars.iv24 to i32, !dbg !1755
  %59 = sitofp i32 %58 to float, !dbg !1755
  %60 = sub nsw i64 %55, %indvars.iv24, !dbg !1756
  %61 = add nsw i64 %60, -2, !dbg !1757
  %62 = getelementptr inbounds float* %5, i64 %61, !dbg !1758
  %63 = load float* %62, align 4, !dbg !1758, !tbaa !814
  %64 = fmul float %59, %63, !dbg !1759
  %65 = trunc i64 %60 to i32, !dbg !1760
  %66 = sitofp i32 %65 to float, !dbg !1760
  %67 = add nsw i64 %60, -1, !dbg !1761
  %68 = getelementptr inbounds float* %5, i64 %67, !dbg !1762
  %69 = load float* %68, align 4, !dbg !1762, !tbaa !814
  %70 = fmul float %66, %69, !dbg !1763
  %71 = fadd float %64, %70, !dbg !1764
  %72 = fmul float %53, %71, !dbg !1765
  store float %72, float* %68, align 4, !dbg !1766, !tbaa !814
  %indvars.iv.next25 = add nuw nsw i64 %indvars.iv24, 1, !dbg !1754
  %exitcond27 = icmp eq i32 %58, %56, !dbg !1754
  br i1 %exitcond27, label %._crit_edge8, label %57, !dbg !1754

._crit_edge8:                                     ; preds = %57, %._crit_edge12
  %73 = load float* %5, align 4, !dbg !1767, !tbaa !814
  %74 = fmul float %53, %73, !dbg !1768
  store float %74, float* %5, align 4, !dbg !1769, !tbaa !814
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !511, metadata !785), !dbg !1770
  %75 = icmp sgt i32 %nx., 0, !dbg !1771
  br i1 %75, label %.lr.ph4, label %.preheader, !dbg !1774

.lr.ph4:                                          ; preds = %._crit_edge8
  %76 = icmp sgt i32 %nz, %ny
  %smax = select i1 %76, i32 %nz, i32 %ny
  %77 = icmp sgt i32 %smax, %nx
  %smax23 = select i1 %77, i32 %smax, i32 %nx
  %78 = add i32 %smax23, -1, !dbg !1774
  %79 = zext i32 %78 to i64
  %80 = shl nuw nsw i64 %79, 2, !dbg !1774
  %81 = add nuw nsw i64 %80, 4, !dbg !1774
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 %81, i32 4, i1 false), !dbg !1775
  br label %.preheader, !dbg !1774

.preheader:                                       ; preds = %.lr.ph4, %._crit_edge8
  %82 = icmp slt i32 %order, 1, !dbg !1776
  br i1 %82, label %._crit_edge, label %.lr.ph, !dbg !1779

.lr.ph:                                           ; preds = %.preheader, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 1, %.preheader ]
  %83 = add nsw i64 %indvars.iv, -1, !dbg !1780
  %84 = getelementptr inbounds float* %5, i64 %83, !dbg !1781
  %85 = bitcast float* %84 to i32*, !dbg !1781
  %86 = load i32* %85, align 4, !dbg !1781, !tbaa !814
  %87 = getelementptr inbounds float* %9, i64 %indvars.iv, !dbg !1782
  %88 = bitcast float* %87 to i32*, !dbg !1783
  store i32 %86, i32* %88, align 4, !dbg !1783, !tbaa !814
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1779
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !1779
  %exitcond = icmp eq i32 %lftr.wideiv, %order, !dbg !1779
  br i1 %exitcond, label %._crit_edge, label %.lr.ph, !dbg !1779

._crit_edge:                                      ; preds = %.lr.ph, %.preheader
  %89 = load float** %bsp_mod, align 8, !dbg !1784, !tbaa !803
  tail call void @make_dft_mod(float* %89, float* %9, i32 %nx) #9, !dbg !1785
  %90 = getelementptr inbounds float** %bsp_mod, i64 1, !dbg !1786
  %91 = load float** %90, align 8, !dbg !1786, !tbaa !803
  tail call void @make_dft_mod(float* %91, float* %9, i32 %ny) #9, !dbg !1787
  %92 = getelementptr inbounds float** %bsp_mod, i64 2, !dbg !1788
  %93 = load float** %92, align 8, !dbg !1788, !tbaa !803
  tail call void @make_dft_mod(float* %93, float* %9, i32 %nz) #9, !dbg !1789
  tail call void @save_free(i8* getelementptr inbounds ([5 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8]* @.str4, i64 0, i64 0), i32 648, i8* %4) #7, !dbg !1790
  tail call void @save_free(i8* getelementptr inbounds ([6 x i8]* @.str5, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8]* @.str4, i64 0, i64 0), i32 649, i8* %6) #7, !dbg !1791
  tail call void @save_free(i8* getelementptr inbounds ([9 x i8]* @.str6, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8]* @.str4, i64 0, i64 0), i32 650, i8* %8) #7, !dbg !1792
  ret void, !dbg !1793
}
