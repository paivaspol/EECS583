define void @calc_idx(i32 %natoms, [3 x float]* nocapture %recipbox, [3 x float]* nocapture %x, [3 x float]* nocapture %fractx, [3 x i32]* nocapture %idx, i32 %nx, i32 %ny, i32 %nz, i32* nocapture %nnx, i32* nocapture %nny, i32* nocapture %nnz) #0 {
entry:
  %arrayidx1 = getelementptr inbounds [3 x float]* %recipbox, i64 0, i64 0
  %0 = load float* %arrayidx1, align 4, !tbaa !3
  %arrayidx3 = getelementptr inbounds [3 x float]* %recipbox, i64 1, i64 0
  %1 = load float* %arrayidx3, align 4, !tbaa !3
  %arrayidx5 = getelementptr inbounds [3 x float]* %recipbox, i64 1, i64 1
  %2 = load float* %arrayidx5, align 4, !tbaa !3
  %arrayidx7 = getelementptr inbounds [3 x float]* %recipbox, i64 2, i64 0
  %3 = load float* %arrayidx7, align 4, !tbaa !3
  %arrayidx9 = getelementptr inbounds [3 x float]* %recipbox, i64 2, i64 1
  %4 = load float* %arrayidx9, align 4, !tbaa !3
  %arrayidx11 = getelementptr inbounds [3 x float]* %recipbox, i64 2, i64 2
  %5 = load float* %arrayidx11, align 4, !tbaa !3
  %cmp95 = icmp sgt i32 %natoms, 0
  br i1 %cmp95, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %conv = sitofp i32 %nx to float
  %conv25 = sitofp i32 %ny to float
  %conv34 = sitofp i32 %nz to float
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arraydecay = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv, i64 0
  %arraydecay15 = getelementptr inbounds [3 x i32]* %idx, i64 %indvars.iv, i64 0
  %6 = load float* %arraydecay, align 4, !tbaa !3
  %mul = fmul float %0, %6
  %arrayidx18 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv, i64 1
  %7 = load float* %arrayidx18, align 4, !tbaa !3
  %mul19 = fmul float %1, %7
  %add = fadd float %mul, %mul19
  %arrayidx20 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv, i64 2
  %8 = load float* %arrayidx20, align 4, !tbaa !3
  %mul21 = fmul float %3, %8
  %add22 = fadd float %add, %mul21
  %mul23 = fmul float %conv, %add22
  %add24 = fadd float %conv, %mul23
  %mul28 = fmul float %2, %7
  %mul30 = fmul float %4, %8
  %add31 = fadd float %mul28, %mul30
  %mul32 = fmul float %conv25, %add31
  %add33 = fadd float %conv25, %mul32
  %mul37 = fmul float %5, %8
  %mul38 = fmul float %conv34, %mul37
  %add39 = fadd float %conv34, %mul38
  %conv40 = fptosi float %add24 to i32
  %conv41 = fptosi float %add33 to i32
  %conv42 = fptosi float %add39 to i32
  %conv43 = sitofp i32 %conv40 to float
  %sub = fsub float %add24, %conv43
  %arrayidx46 = getelementptr inbounds [3 x float]* %fractx, i64 %indvars.iv, i64 0
  store float %sub, float* %arrayidx46, align 4, !tbaa !3
  %conv47 = sitofp i32 %conv41 to float
  %sub48 = fsub float %add33, %conv47
  %arrayidx51 = getelementptr inbounds [3 x float]* %fractx, i64 %indvars.iv, i64 1
  store float %sub48, float* %arrayidx51, align 4, !tbaa !3
  %conv52 = sitofp i32 %conv42 to float
  %sub53 = fsub float %add39, %conv52
  %arrayidx56 = getelementptr inbounds [3 x float]* %fractx, i64 %indvars.iv, i64 2
  store float %sub53, float* %arrayidx56, align 4, !tbaa !3
  %idxprom57 = sext i32 %conv40 to i64
  %arrayidx58 = getelementptr inbounds i32* %nnx, i64 %idxprom57
  %9 = load i32* %arrayidx58, align 4, !tbaa !4
  store i32 %9, i32* %arraydecay15, align 4, !tbaa !4
  %idxprom60 = sext i32 %conv41 to i64
  %arrayidx61 = getelementptr inbounds i32* %nny, i64 %idxprom60
  %10 = load i32* %arrayidx61, align 4, !tbaa !4
  %arrayidx62 = getelementptr inbounds [3 x i32]* %idx, i64 %indvars.iv, i64 1
  store i32 %10, i32* %arrayidx62, align 4, !tbaa !4
  %idxprom63 = sext i32 %conv42 to i64
  %arrayidx64 = getelementptr inbounds i32* %nnz, i64 %idxprom63
  %11 = load i32* %arrayidx64, align 4, !tbaa !4
  %arrayidx65 = getelementptr inbounds [3 x i32]* %idx, i64 %indvars.iv, i64 2
  store i32 %11, i32* %arrayidx65, align 4, !tbaa !4
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %natoms
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  ret void
}
