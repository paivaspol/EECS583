define void @gather_f_bsplines(%struct.t_fftgrid* %grid, [3 x float]* nocapture %recipbox, [3 x i32]* nocapture %idx, [3 x float]* nocapture %f, float* nocapture %charge, float** nocapture %theta, float** nocapture %dtheta, i32 %nr, i32 %order, i32* nocapture %nnx, i32* nocapture %nny, i32* nocapture %nnz) #0 {
entry:
  %nx = alloca i32, align 4
  %ny = alloca i32, align 4
  %nz = alloca i32, align 4
  %la2 = alloca i32, align 4
  %la12 = alloca i32, align 4
  %ptr = alloca float*, align 8
  call void @unpack_fftgrid(%struct.t_fftgrid* %grid, i32* %nx, i32* %ny, i32* %nz, i32* %la2, i32* %la12, i32 1, float** %ptr) #4
  %0 = load float** %theta, align 8, !tbaa !0
  %arrayidx1 = getelementptr inbounds float** %theta, i64 1
  %1 = load float** %arrayidx1, align 8, !tbaa !0
  %arrayidx2 = getelementptr inbounds float** %theta, i64 2
  %2 = load float** %arrayidx2, align 8, !tbaa !0
  %3 = load float** %dtheta, align 8, !tbaa !0
  %arrayidx4 = getelementptr inbounds float** %dtheta, i64 1
  %4 = load float** %arrayidx4, align 8, !tbaa !0
  %arrayidx5 = getelementptr inbounds float** %dtheta, i64 2
  %5 = load float** %arrayidx5, align 8, !tbaa !0
  %idx.ext7 = sext i32 %order to i64
  %6 = load i32* %nz, align 4, !tbaa !4
  %idx.ext15 = sext i32 %6 to i64
  %add.ptr16.sum = sub i64 1, %idx.ext7
  %add.ptr17.sum = add i64 %add.ptr16.sum, %idx.ext15
  %arrayidx22 = getelementptr inbounds [3 x float]* %recipbox, i64 0, i64 0
  %7 = load float* %arrayidx22, align 4, !tbaa !3
  %arrayidx24 = getelementptr inbounds [3 x float]* %recipbox, i64 1, i64 0
  %8 = load float* %arrayidx24, align 4, !tbaa !3
  %arrayidx26 = getelementptr inbounds [3 x float]* %recipbox, i64 1, i64 1
  %9 = load float* %arrayidx26, align 4, !tbaa !3
  %arrayidx28 = getelementptr inbounds [3 x float]* %recipbox, i64 2, i64 0
  %10 = load float* %arrayidx28, align 4, !tbaa !3
  %arrayidx30 = getelementptr inbounds [3 x float]* %recipbox, i64 2, i64 1
  %11 = load float* %arrayidx30, align 4, !tbaa !3
  %arrayidx32 = getelementptr inbounds [3 x float]* %recipbox, i64 2, i64 2
  %12 = load float* %arrayidx32, align 4, !tbaa !3
  %cmp374 = icmp sgt i32 %nr, 0
  br i1 %cmp374, label %for.body.lr.ph, label %for.end216

for.body.lr.ph:                                   ; preds = %entry
  %13 = load i32* %ny, align 4, !tbaa !4
  %14 = load i32* %nx, align 4, !tbaa !4
  %idx.ext9 = sext i32 %13 to i64
  %idx.ext = sext i32 %14 to i64
  %add.ptr6.sum = add i64 %add.ptr16.sum, %idx.ext
  %conv178 = sitofp i32 %14 to float
  %conv188 = sitofp i32 %13 to float
  %conv204 = sitofp i32 %6 to float
  %add.ptr11.sum = add i64 %add.ptr16.sum, %idx.ext9
  %cmp53 = icmp eq i32 %order, 4
  %15 = load i32* %la12, align 4, !tbaa !4
  %16 = load i32* %la2, align 4, !tbaa !4
  %17 = load float** %ptr, align 8, !tbaa !0
  br label %for.body

for.body:                                         ; preds = %for.inc214, %for.body.lr.ph
  %indvars.iv394 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next395, %for.inc214 ]
  %indvars.iv389 = phi i32 [ 0, %for.body.lr.ph ], [ %indvars.iv.next390, %for.inc214 ]
  %18 = sext i32 %indvars.iv389 to i64
  %arrayidx33 = getelementptr inbounds float* %charge, i64 %indvars.iv394
  %19 = load float* %arrayidx33, align 4, !tbaa !3
  %fabsf = call float @fabsf(float %19) #5
  %20 = fpext float %fabsf to double
  %cmp34 = fcmp ogt double %20, 1.200000e-38
  br i1 %cmp34, label %if.then, label %for.inc214

if.then:                                          ; preds = %for.body
  %21 = trunc i64 %indvars.iv394 to i32
  %mul = mul nsw i32 %21, %order
  %add = add nsw i32 %mul, %order
  %cmp44365 = icmp sgt i32 %order, 0
  br i1 %cmp44365, label %for.body46.lr.ph, label %for.end177

for.body46.lr.ph:                                 ; preds = %if.then
  %arrayidx40 = getelementptr inbounds [3 x i32]* %idx, i64 %indvars.iv394, i64 2
  %22 = load i32* %arrayidx40, align 4, !tbaa !4
  %arraydecay = getelementptr inbounds [3 x i32]* %idx, i64 %indvars.iv394, i64 0
  %23 = load i32* %arraydecay, align 4, !tbaa !4
  %idx.ext41 = sext i32 %23 to i64
  %add.ptr8.sum = add i64 %add.ptr6.sum, %idx.ext41
  %arrayidx39 = getelementptr inbounds [3 x i32]* %idx, i64 %indvars.iv394, i64 1
  %add.ptr42 = getelementptr inbounds i32* %nnx, i64 %add.ptr8.sum
  %24 = load i32* %arrayidx39, align 4, !tbaa !4
  %idx.ext51 = sext i32 %24 to i64
  %add.ptr14.sum = add i64 %add.ptr11.sum, %idx.ext51
  %add.ptr52 = getelementptr inbounds i32* %nny, i64 %add.ptr14.sum
  %idx.ext136 = sext i32 %22 to i64
  %add.ptr20.sum = add i64 %idx.ext136, %add.ptr17.sum
  %add.ptr137 = getelementptr inbounds i32* %nnz, i64 %add.ptr20.sum
  %add.ptr65.sum = add i64 %add.ptr20.sum, 1
  %arrayidx74 = getelementptr inbounds i32* %nnz, i64 %add.ptr65.sum
  %add.ptr65.sum338 = add i64 %add.ptr20.sum, 2
  %arrayidx78 = getelementptr inbounds i32* %nnz, i64 %add.ptr65.sum338
  %add.ptr65.sum339 = add i64 %add.ptr20.sum, 3
  %arrayidx82 = getelementptr inbounds i32* %nnz, i64 %add.ptr65.sum339
  %idxprom86 = sext i32 %mul to i64
  %arrayidx87 = getelementptr inbounds float* %2, i64 %idxprom86
  %arrayidx90 = getelementptr inbounds float* %5, i64 %idxprom86
  %inc = add nsw i32 %mul, 1
  %idxprom92 = sext i32 %inc to i64
  %arrayidx93 = getelementptr inbounds float* %2, i64 %idxprom92
  %arrayidx97 = getelementptr inbounds float* %5, i64 %idxprom92
  %inc100 = add nsw i32 %mul, 2
  %idxprom101 = sext i32 %inc100 to i64
  %arrayidx102 = getelementptr inbounds float* %2, i64 %idxprom101
  %arrayidx106 = getelementptr inbounds float* %5, i64 %idxprom101
  %inc109 = add nsw i32 %mul, 3
  %idxprom110 = sext i32 %inc109 to i64
  %arrayidx111 = getelementptr inbounds float* %2, i64 %idxprom110
  %arrayidx115 = getelementptr inbounds float* %5, i64 %idxprom110
  br label %for.body46

for.body46:                                       ; preds = %for.body46.lr.ph, %for.inc174
  %indvars.iv391 = phi i64 [ %18, %for.body46.lr.ph ], [ %indvars.iv.next392, %for.inc174 ]
  %i0.0370 = phi i32* [ %add.ptr42, %for.body46.lr.ph ], [ %incdec.ptr176, %for.inc174 ]
  %ithx.0369 = phi i32 [ %mul, %for.body46.lr.ph ], [ %inc175, %for.inc174 ]
  %fx.0368 = phi float [ 0.000000e+00, %for.body46.lr.ph ], [ %fx.3, %for.inc174 ]
  %fy.0367 = phi float [ 0.000000e+00, %for.body46.lr.ph ], [ %fy.3, %for.inc174 ]
  %fz.0366 = phi float [ 0.000000e+00, %for.body46.lr.ph ], [ %fz.3, %for.inc174 ]
  %25 = load i32* %i0.0370, align 4, !tbaa !4
  %arrayidx48 = getelementptr inbounds float* %0, i64 %indvars.iv391
  %26 = load float* %arrayidx48, align 4, !tbaa !3
  %arrayidx50 = getelementptr inbounds float* %3, i64 %indvars.iv391
  %27 = load float* %arrayidx50, align 4, !tbaa !3
  %mul66 = mul nsw i32 %15, %25
  br i1 %cmp53, label %for.body59.lr.ph, label %for.body145.lr.ph

for.body59.lr.ph:                                 ; preds = %for.body46
  %28 = load i32* %add.ptr137, align 4, !tbaa !4
  %29 = load i32* %arrayidx74, align 4, !tbaa !4
  %30 = load i32* %arrayidx78, align 4, !tbaa !4
  %31 = load i32* %arrayidx82, align 4, !tbaa !4
  %32 = load float* %arrayidx87, align 4, !tbaa !3
  %33 = load float* %arrayidx90, align 4, !tbaa !3
  %34 = load float* %arrayidx93, align 4, !tbaa !3
  %35 = load float* %arrayidx97, align 4, !tbaa !3
  %36 = load float* %arrayidx102, align 4, !tbaa !3
  %37 = load float* %arrayidx106, align 4, !tbaa !3
  %38 = load float* %arrayidx111, align 4, !tbaa !3
  %39 = load float* %arrayidx115, align 4, !tbaa !3
  br label %for.body59

for.body59:                                       ; preds = %for.body59.lr.ph, %for.body59
  %indvars.iv386 = phi i64 [ %18, %for.body59.lr.ph ], [ %indvars.iv.next387, %for.body59 ]
  %j0.0361 = phi i32* [ %add.ptr52, %for.body59.lr.ph ], [ %incdec.ptr, %for.body59 ]
  %ithy.0360 = phi i32 [ %mul, %for.body59.lr.ph ], [ %inc127, %for.body59 ]
  %fx.1359 = phi float [ %fx.0368, %for.body59.lr.ph ], [ %add120, %for.body59 ]
  %fy.1358 = phi float [ %fy.0367, %for.body59.lr.ph ], [ %add123, %for.body59 ]
  %fz.1357 = phi float [ %fz.0366, %for.body59.lr.ph ], [ %add126, %for.body59 ]
  %40 = load i32* %j0.0361, align 4, !tbaa !4
  %arrayidx61 = getelementptr inbounds float* %1, i64 %indvars.iv386
  %41 = load float* %arrayidx61, align 4, !tbaa !3
  %arrayidx63 = getelementptr inbounds float* %4, i64 %indvars.iv386
  %42 = load float* %arrayidx63, align 4, !tbaa !3
  %mul67 = mul nsw i32 %16, %40
  %add68 = add nsw i32 %mul67, %mul66
  %add71 = add nsw i32 %add68, %28
  %idxprom72 = sext i32 %add71 to i64
  %arrayidx73 = getelementptr inbounds float* %17, i64 %idxprom72
  %43 = load float* %arrayidx73, align 4, !tbaa !3
  %add75 = add nsw i32 %29, %add68
  %idxprom76 = sext i32 %add75 to i64
  %arrayidx77 = getelementptr inbounds float* %17, i64 %idxprom76
  %44 = load float* %arrayidx77, align 4, !tbaa !3
  %add79 = add nsw i32 %30, %add68
  %idxprom80 = sext i32 %add79 to i64
  %arrayidx81 = getelementptr inbounds float* %17, i64 %idxprom80
  %45 = load float* %arrayidx81, align 4, !tbaa !3
  %add83 = add nsw i32 %31, %add68
  %idxprom84 = sext i32 %add83 to i64
  %arrayidx85 = getelementptr inbounds float* %17, i64 %idxprom84
  %46 = load float* %arrayidx85, align 4, !tbaa !3
  %mul88 = fmul float %43, %32
  %mul91 = fmul float %43, %33
  %mul94 = fmul float %44, %34
  %add95 = fadd float %mul88, %mul94
  %mul98 = fmul float %44, %35
  %add99 = fadd float %mul91, %mul98
  %mul103 = fmul float %45, %36
  %add104 = fadd float %add95, %mul103
  %mul107 = fmul float %45, %37
  %add108 = fadd float %add99, %mul107
  %mul112 = fmul float %46, %38
  %add113 = fadd float %add104, %mul112
  %mul116 = fmul float %46, %39
  %add117 = fadd float %add108, %mul116
  %mul118 = fmul float %27, %41
  %mul119 = fmul float %mul118, %add113
  %add120 = fadd float %fx.1359, %mul119
  %mul121 = fmul float %26, %42
  %mul122 = fmul float %mul121, %add113
  %add123 = fadd float %fy.1358, %mul122
  %mul124 = fmul float %26, %41
  %mul125 = fmul float %mul124, %add117
  %add126 = fadd float %fz.1357, %mul125
  %inc127 = add nsw i32 %ithy.0360, 1
  %incdec.ptr = getelementptr inbounds i32* %j0.0361, i64 1
  %cmp57 = icmp slt i32 %inc127, %add
  %indvars.iv.next387 = add i64 %indvars.iv386, 1
  br i1 %cmp57, label %for.body59, label %for.inc174

for.body145.lr.ph:                                ; preds = %for.body46, %for.end160
  %indvars.iv381 = phi i64 [ %indvars.iv.next382, %for.end160 ], [ %18, %for.body46 ]
  %j0.1351 = phi i32* [ %incdec.ptr172, %for.end160 ], [ %add.ptr52, %for.body46 ]
  %ithy.1350 = phi i32 [ %inc171, %for.end160 ], [ %mul, %for.body46 ]
  %fx.2349 = phi float [ %add163, %for.end160 ], [ %fx.0368, %for.body46 ]
  %fy.2348 = phi float [ %add166, %for.end160 ], [ %fy.0367, %for.body46 ]
  %fz.2347 = phi float [ %add169, %for.end160 ], [ %fz.0366, %for.body46 ]
  %47 = load i32* %j0.1351, align 4, !tbaa !4
  %arrayidx133 = getelementptr inbounds float* %1, i64 %indvars.iv381
  %48 = load float* %arrayidx133, align 4, !tbaa !3
  %arrayidx135 = getelementptr inbounds float* %4, i64 %indvars.iv381
  %49 = load float* %arrayidx135, align 4, !tbaa !3
  %mul139 = mul nsw i32 %16, %47
  %add140 = add nsw i32 %mul139, %mul66
  br label %for.body145

for.body145:                                      ; preds = %for.body145.for.body145_crit_edge, %for.body145.lr.ph
  %indvars.iv376 = phi i64 [ %18, %for.body145.lr.ph ], [ %indvars.iv.next377, %for.body145.for.body145_crit_edge ]
  %k0.0344 = phi i32* [ %add.ptr137, %for.body145.lr.ph ], [ %incdec.ptr159, %for.body145.for.body145_crit_edge ]
  %ithz.0343 = phi i32 [ %mul, %for.body145.lr.ph ], [ %inc158, %for.body145.for.body145_crit_edge ]
  %fxy1.0342 = phi float [ 0.000000e+00, %for.body145.lr.ph ], [ %add152, %for.body145.for.body145_crit_edge ]
  %fz1.0341 = phi float [ 0.000000e+00, %for.body145.lr.ph ], [ %add156, %for.body145.for.body145_crit_edge ]
  %50 = load i32* %k0.0344, align 4, !tbaa !4
  %add146 = add nsw i32 %add140, %50
  %idxprom147 = sext i32 %add146 to i64
  %arrayidx148 = getelementptr inbounds float* %17, i64 %idxprom147
  %51 = load float* %arrayidx148, align 4, !tbaa !3
  %arrayidx150 = getelementptr inbounds float* %2, i64 %indvars.iv376
  %52 = load float* %arrayidx150, align 4, !tbaa !3
  %mul151 = fmul float %51, %52
  %add152 = fadd float %fxy1.0342, %mul151
  %arrayidx154 = getelementptr inbounds float* %5, i64 %indvars.iv376
  %53 = load float* %arrayidx154, align 4, !tbaa !3
  %mul155 = fmul float %51, %53
  %add156 = fadd float %fz1.0341, %mul155
  %inc158 = add nsw i32 %ithz.0343, 1
  %cmp143 = icmp slt i32 %inc158, %add
  br i1 %cmp143, label %for.body145.for.body145_crit_edge, label %for.end160

for.body145.for.body145_crit_edge:                ; preds = %for.body145
  %indvars.iv.next377 = add i64 %indvars.iv376, 1
  %incdec.ptr159 = getelementptr inbounds i32* %k0.0344, i64 1
  br label %for.body145

for.end160:                                       ; preds = %for.body145
  %mul161 = fmul float %27, %48
  %mul162 = fmul float %mul161, %add152
  %add163 = fadd float %fx.2349, %mul162
  %mul164 = fmul float %26, %49
  %mul165 = fmul float %mul164, %add152
  %add166 = fadd float %fy.2348, %mul165
  %mul167 = fmul float %26, %48
  %mul168 = fmul float %mul167, %add156
  %add169 = fadd float %fz.2347, %mul168
  %inc171 = add nsw i32 %ithy.1350, 1
  %incdec.ptr172 = getelementptr inbounds i32* %j0.1351, i64 1
  %cmp129 = icmp slt i32 %inc171, %add
  %indvars.iv.next382 = add i64 %indvars.iv381, 1
  br i1 %cmp129, label %for.body145.lr.ph, label %for.inc174

for.inc174:                                       ; preds = %for.body59, %for.end160
  %fz.3 = phi float [ %add169, %for.end160 ], [ %add126, %for.body59 ]
  %fy.3 = phi float [ %add166, %for.end160 ], [ %add123, %for.body59 ]
  %fx.3 = phi float [ %add163, %for.end160 ], [ %add120, %for.body59 ]
  %inc175 = add nsw i32 %ithx.0369, 1
  %incdec.ptr176 = getelementptr inbounds i32* %i0.0370, i64 1
  %cmp44 = icmp slt i32 %inc175, %add
  %indvars.iv.next392 = add i64 %indvars.iv391, 1
  br i1 %cmp44, label %for.body46, label %for.end177

for.end177:                                       ; preds = %for.inc174, %if.then
  %fx.0.lcssa = phi float [ 0.000000e+00, %if.then ], [ %fx.3, %for.inc174 ]
  %fy.0.lcssa = phi float [ 0.000000e+00, %if.then ], [ %fy.3, %for.inc174 ]
  %fz.0.lcssa = phi float [ 0.000000e+00, %if.then ], [ %fz.3, %for.inc174 ]
  %mul179 = fmul float %fx.0.lcssa, %conv178
  %mul180 = fmul float %7, %mul179
  %mul181 = fmul float %19, %mul180
  %arrayidx184 = getelementptr inbounds [3 x float]* %f, i64 %indvars.iv394, i64 0
  %54 = load float* %arrayidx184, align 4, !tbaa !3
  %sub = fsub float %54, %mul181
  store float %sub, float* %arrayidx184, align 4, !tbaa !3
  %mul187 = fmul float %8, %mul179
  %mul189 = fmul float %fy.0.lcssa, %conv188
  %mul190 = fmul float %9, %mul189
  %add191 = fadd float %mul187, %mul190
  %mul192 = fmul float %19, %add191
  %arrayidx195 = getelementptr inbounds [3 x float]* %f, i64 %indvars.iv394, i64 1
  %55 = load float* %arrayidx195, align 4, !tbaa !3
  %sub196 = fsub float %55, %mul192
  store float %sub196, float* %arrayidx195, align 4, !tbaa !3
  %mul199 = fmul float %10, %mul179
  %mul202 = fmul float %11, %mul189
  %add203 = fadd float %mul199, %mul202
  %mul205 = fmul float %fz.0.lcssa, %conv204
  %mul206 = fmul float %12, %mul205
  %add207 = fadd float %add203, %mul206
  %mul208 = fmul float %19, %add207
  %arrayidx211 = getelementptr inbounds [3 x float]* %f, i64 %indvars.iv394, i64 2
  %56 = load float* %arrayidx211, align 4, !tbaa !3
  %sub212 = fsub float %56, %mul208
  store float %sub212, float* %arrayidx211, align 4, !tbaa !3
  br label %for.inc214

for.inc214:                                       ; preds = %for.body, %for.end177
  %indvars.iv.next395 = add i64 %indvars.iv394, 1
  %indvars.iv.next390 = add i32 %indvars.iv389, %order
  %lftr.wideiv = trunc i64 %indvars.iv.next395 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nr
  br i1 %exitcond, label %for.end216, label %for.body

for.end216:                                       ; preds = %for.inc214, %entry
  ret void
}
