define void @calc_recipbox([3 x float]* nocapture %box, [3 x float]* nocapture %recipbox) #0 {
entry:
  %arrayidx1 = getelementptr inbounds [3 x float]* %box, i64 0, i64 0
  %0 = load float* %arrayidx1, align 4, !tbaa !3
  %arrayidx3 = getelementptr inbounds [3 x float]* %box, i64 1, i64 1
  %1 = load float* %arrayidx3, align 4, !tbaa !3
  %mul = fmul float %0, %1
  %arrayidx5 = getelementptr inbounds [3 x float]* %box, i64 2, i64 2
  %2 = load float* %arrayidx5, align 4, !tbaa !3
  %mul6 = fmul float %mul, %2
  %conv7 = fdiv float 1.000000e+00, %mul6
  %mul12 = fmul float %1, %2
  %mul13 = fmul float %mul12, %conv7
  %arrayidx15 = getelementptr inbounds [3 x float]* %recipbox, i64 0, i64 0
  store float %mul13, float* %arrayidx15, align 4, !tbaa !3
  %arrayidx17 = getelementptr inbounds [3 x float]* %recipbox, i64 0, i64 1
  store float 0.000000e+00, float* %arrayidx17, align 4, !tbaa !3
  %arrayidx19 = getelementptr inbounds [3 x float]* %recipbox, i64 0, i64 2
  store float 0.000000e+00, float* %arrayidx19, align 4, !tbaa !3
  %arrayidx21 = getelementptr inbounds [3 x float]* %box, i64 1, i64 0
  %3 = load float* %arrayidx21, align 4, !tbaa !3
  %4 = load float* %arrayidx5, align 4, !tbaa !3
  %5 = fmul float %3, %4
  %6 = fmul float %conv7, %5
  %mul25 = fsub float -0.000000e+00, %6
  %arrayidx27 = getelementptr inbounds [3 x float]* %recipbox, i64 1, i64 0
  store float %mul25, float* %arrayidx27, align 4, !tbaa !3
  %7 = load float* %arrayidx1, align 4, !tbaa !3
  %8 = load float* %arrayidx5, align 4, !tbaa !3
  %mul32 = fmul float %7, %8
  %mul33 = fmul float %conv7, %mul32
  %arrayidx35 = getelementptr inbounds [3 x float]* %recipbox, i64 1, i64 1
  store float %mul33, float* %arrayidx35, align 4, !tbaa !3
  %arrayidx37 = getelementptr inbounds [3 x float]* %recipbox, i64 1, i64 2
  store float 0.000000e+00, float* %arrayidx37, align 4, !tbaa !3
  %9 = load float* %arrayidx21, align 4, !tbaa !3
  %arrayidx41 = getelementptr inbounds [3 x float]* %box, i64 2, i64 1
  %10 = load float* %arrayidx41, align 4, !tbaa !3
  %mul42 = fmul float %9, %10
  %11 = load float* %arrayidx3, align 4, !tbaa !3
  %arrayidx46 = getelementptr inbounds [3 x float]* %box, i64 2, i64 0
  %12 = load float* %arrayidx46, align 4, !tbaa !3
  %mul47 = fmul float %11, %12
  %sub48 = fsub float %mul42, %mul47
  %mul49 = fmul float %conv7, %sub48
  %arrayidx51 = getelementptr inbounds [3 x float]* %recipbox, i64 2, i64 0
  store float %mul49, float* %arrayidx51, align 4, !tbaa !3
  %13 = load float* %arrayidx41, align 4, !tbaa !3
  %14 = load float* %arrayidx1, align 4, !tbaa !3
  %15 = fmul float %13, %14
  %16 = fmul float %conv7, %15
  %mul58 = fsub float -0.000000e+00, %16
  %arrayidx60 = getelementptr inbounds [3 x float]* %recipbox, i64 2, i64 1
  store float %mul58, float* %arrayidx60, align 4, !tbaa !3
  %17 = load float* %arrayidx1, align 4, !tbaa !3
  %18 = load float* %arrayidx3, align 4, !tbaa !3
  %mul65 = fmul float %17, %18
  %mul66 = fmul float %conv7, %mul65
  %arrayidx68 = getelementptr inbounds [3 x float]* %recipbox, i64 2, i64 2
  store float %mul66, float* %arrayidx68, align 4, !tbaa !3
  ret void
}
