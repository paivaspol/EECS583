define void @projectx(%struct.t_edpar* nocapture readonly %edi, [3 x float]* nocapture %x, %struct.t_eigvec* nocapture %vec) #4 {
  %1 = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 8, i32 0
  %2 = load i32* %1, align 4, !tbaa !38
  %3 = icmp sgt i32 %2, 0
  br i1 %3, label %.lr.ph12, label %.preheader1

.lr.ph12:                                         ; preds = %0
  %4 = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 8, i32 1
  %5 = load i32** %4, align 8, !tbaa !39
  %6 = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 8, i32 2
  %7 = load [3 x float]** %6, align 8, !tbaa !58
  %8 = sext i32 %2 to i64
  br label %19

.preheader1:                                      ; preds = %19, %0
  %9 = getelementptr inbounds %struct.t_eigvec* %vec, i64 0, i32 0
  %10 = load i32* %9, align 4, !tbaa !79
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %.lr.ph8, label %._crit_edge9

.lr.ph8:                                          ; preds = %.preheader1
  %12 = getelementptr inbounds %struct.t_eigvec* %vec, i64 0, i32 7
  %13 = load float** %12, align 8, !tbaa !80
  %14 = getelementptr inbounds %struct.t_eigvec* %vec, i64 0, i32 4
  %15 = load float** %14, align 8, !tbaa !81
  %16 = getelementptr inbounds %struct.t_eigvec* %vec, i64 0, i32 3
  %17 = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 8, i32 1
  %18 = sext i32 %10 to i64
  br label %39

; <label>:19                                      ; preds = %.lr.ph12, %19
  %indvars.iv20 = phi i64 [ 0, %.lr.ph12 ], [ %indvars.iv.next21, %19 ]
  %20 = getelementptr inbounds i32* %5, i64 %indvars.iv20
  %21 = load i32* %20, align 4, !tbaa !34
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [3 x float]* %x, i64 %22, i64 0
  %24 = getelementptr inbounds [3 x float]* %7, i64 %indvars.iv20, i64 0
  %25 = load float* %23, align 4, !tbaa !2
  %26 = load float* %24, align 4, !tbaa !2
  %27 = fsub float %25, %26
  %28 = getelementptr inbounds [3 x float]* %x, i64 %22, i64 1
  %29 = load float* %28, align 4, !tbaa !2
  %30 = getelementptr inbounds [3 x float]* %7, i64 %indvars.iv20, i64 1
  %31 = load float* %30, align 4, !tbaa !2
  %32 = fsub float %29, %31
  %33 = getelementptr inbounds [3 x float]* %x, i64 %22, i64 2
  %34 = load float* %33, align 4, !tbaa !2
  %35 = getelementptr inbounds [3 x float]* %7, i64 %indvars.iv20, i64 2
  %36 = load float* %35, align 4, !tbaa !2
  %37 = fsub float %34, %36
  store float %27, float* %23, align 4, !tbaa !2
  store float %32, float* %28, align 4, !tbaa !2
  store float %37, float* %33, align 4, !tbaa !2
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  %38 = icmp slt i64 %indvars.iv.next21, %8
  br i1 %38, label %19, label %.preheader1

; <label>:39                                      ; preds = %.lr.ph8, %._crit_edge5
  %indvars.iv18 = phi i64 [ 0, %.lr.ph8 ], [ %indvars.iv.next19, %._crit_edge5 ]
  %rad.07 = phi double [ 0.000000e+00, %.lr.ph8 ], [ %phitmp, %._crit_edge5 ]
  %40 = getelementptr inbounds float* %13, i64 %indvars.iv18
  store float 0.000000e+00, float* %40, align 4, !tbaa !2
  br i1 %3, label %.preheader.lr.ph, label %._crit_edge5

.preheader.lr.ph:                                 ; preds = %39
  %41 = load [3 x float]*** %16, align 8, !tbaa !82
  %42 = getelementptr inbounds [3 x float]** %41, i64 %indvars.iv18
  %43 = load [3 x float]** %42, align 8, !tbaa !8
  %44 = load i32** %17, align 8, !tbaa !39
  %45 = sext i32 %2 to i64
  br label %.preheader

.preheader:                                       ; preds = %.preheader.lr.ph, %57
  %.pre = phi float [ 0.000000e+00, %.preheader.lr.ph ], [ %56, %57 ]
  %indvars.iv16 = phi i64 [ 0, %.preheader.lr.ph ], [ %indvars.iv.next17, %57 ]
  %46 = getelementptr inbounds i32* %44, i64 %indvars.iv16
  %47 = load i32* %46, align 4, !tbaa !34
  %48 = sext i32 %47 to i64
  br label %49

; <label>:49                                      ; preds = %49, %.preheader
  %50 = phi float [ %.pre, %.preheader ], [ %56, %49 ]
  %indvars.iv14 = phi i64 [ 0, %.preheader ], [ %indvars.iv.next15, %49 ]
  %51 = getelementptr inbounds [3 x float]* %43, i64 %indvars.iv16, i64 %indvars.iv14
  %52 = load float* %51, align 4, !tbaa !2
  %53 = getelementptr inbounds [3 x float]* %x, i64 %48, i64 %indvars.iv14
  %54 = load float* %53, align 4, !tbaa !2
  %55 = fmul float %52, %54
  %56 = fadd float %55, %50
  store float %56, float* %40, align 4, !tbaa !2
  %indvars.iv.next15 = add nuw nsw i64 %indvars.iv14, 1
  %exitcond = icmp eq i64 %indvars.iv.next15, 3
  br i1 %exitcond, label %57, label %49

; <label>:57                                      ; preds = %49
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1
  %58 = icmp slt i64 %indvars.iv.next17, %45
  br i1 %58, label %.preheader, label %._crit_edge5

._crit_edge5:                                     ; preds = %57, %39
  %59 = phi float [ 0.000000e+00, %39 ], [ %56, %57 ]
  %60 = getelementptr inbounds float* %15, i64 %indvars.iv18
  %61 = load float* %60, align 4, !tbaa !2
  %62 = fsub float %59, %61
  %63 = fpext float %62 to double
  %pow2 = fmul double %63, %63
  %64 = fadd double %rad.07, %pow2
  %65 = fptrunc double %64 to float
  %indvars.iv.next19 = add nuw nsw i64 %indvars.iv18, 1
  %phitmp = fpext float %65 to double
  %66 = icmp slt i64 %indvars.iv.next19, %18
  br i1 %66, label %39, label %._crit_edge9

._crit_edge9:                                     ; preds = %._crit_edge5, %.preheader1
  %rad.0.lcssa = phi double [ 0.000000e+00, %.preheader1 ], [ %phitmp, %._crit_edge5 ]
  %67 = tail call double @sqrt(double %rad.0.lcssa) #13
  %68 = fptrunc double %67 to float
  %69 = getelementptr inbounds %struct.t_eigvec* %vec, i64 0, i32 8
  store float %68, float* %69, align 4, !tbaa !83
  br i1 %3, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %._crit_edge9
  %70 = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 8, i32 1
  %71 = load i32** %70, align 8, !tbaa !39
  %72 = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 8, i32 2
  %73 = load [3 x float]** %72, align 8, !tbaa !58
  %74 = sext i32 %2 to i64
  br label %75

; <label>:75                                      ; preds = %.lr.ph, %75
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %75 ]
  %76 = getelementptr inbounds i32* %71, i64 %indvars.iv
  %77 = load i32* %76, align 4, !tbaa !34
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds [3 x float]* %x, i64 %78, i64 0
  %80 = getelementptr inbounds [3 x float]* %73, i64 %indvars.iv, i64 0
  %81 = load float* %79, align 4, !tbaa !2
  %82 = load float* %80, align 4, !tbaa !2
  %83 = fadd float %81, %82
  %84 = getelementptr inbounds [3 x float]* %x, i64 %78, i64 1
  %85 = load float* %84, align 4, !tbaa !2
  %86 = getelementptr inbounds [3 x float]* %73, i64 %indvars.iv, i64 1
  %87 = load float* %86, align 4, !tbaa !2
  %88 = fadd float %85, %87
  %89 = getelementptr inbounds [3 x float]* %x, i64 %78, i64 2
  %90 = load float* %89, align 4, !tbaa !2
  %91 = getelementptr inbounds [3 x float]* %73, i64 %indvars.iv, i64 2
  %92 = load float* %91, align 4, !tbaa !2
  %93 = fadd float %90, %92
  store float %83, float* %79, align 4, !tbaa !2
  store float %88, float* %84, align 4, !tbaa !2
  store float %93, float* %89, align 4, !tbaa !2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %94 = icmp slt i64 %indvars.iv.next, %74
  br i1 %94, label %75, label %._crit_edge

._crit_edge:                                      ; preds = %75, %._crit_edge9
  ret void
}
