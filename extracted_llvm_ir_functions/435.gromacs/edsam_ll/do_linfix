define void @do_linfix([3 x float]* nocapture %x, %struct.t_edpar* nocapture %edi, i32 %step) #0 {
entry:
  %neig = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 9, i32 1, i32 0
  %0 = load i32* %neig, align 4, !tbaa !3
  %cmp66 = icmp sgt i32 %0, 0
  br i1 %cmp66, label %for.body.lr.ph, label %for.end43

for.body.lr.ph:                                   ; preds = %entry
  %vec = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 9, i32 1, i32 3
  %refproj = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 9, i32 1, i32 7
  %conv = sitofp i32 %step to float
  %stpsz = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 9, i32 1, i32 2
  %nr = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 8, i32 0
  %anrs = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 8, i32 1
  %.pre = load [3 x float]*** %vec, align 8, !tbaa !0
  %.pre72 = load float** %refproj, align 8, !tbaa !0
  %.pre73 = load float** %stpsz, align 8, !tbaa !0
  %.pre74 = load i32* %nr, align 4, !tbaa !3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc41
  %indvars.iv70 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next71, %for.inc41 ]
  %arrayidx = getelementptr inbounds [3 x float]** %.pre, i64 %indvars.iv70
  %1 = load [3 x float]** %arrayidx, align 8, !tbaa !0
  %call = tail call float @do_projectx(%struct.t_edpar* %edi, [3 x float]* %x, [3 x float]* %1) #7
  %arrayidx6 = getelementptr inbounds float* %.pre72, i64 %indvars.iv70
  %2 = load float* %arrayidx6, align 4, !tbaa !4
  %arrayidx10 = getelementptr inbounds float* %.pre73, i64 %indvars.iv70
  %3 = load float* %arrayidx10, align 4, !tbaa !4
  %mul = fmul float %conv, %3
  %add11 = fadd float %2, %mul
  %sub = fsub float %add11, %call
  %cmp1364 = icmp sgt i32 %.pre74, 0
  br i1 %cmp1364, label %for.cond16.preheader.lr.ph, label %for.inc41

for.cond16.preheader.lr.ph:                       ; preds = %for.body
  %4 = load i32** %anrs, align 8, !tbaa !0
  br label %for.cond16.preheader

for.cond16.preheader:                             ; preds = %for.cond16.preheader.lr.ph, %for.inc38
  %indvars.iv68 = phi i64 [ 0, %for.cond16.preheader.lr.ph ], [ %indvars.iv.next69, %for.inc38 ]
  %arrayidx33 = getelementptr inbounds i32* %4, i64 %indvars.iv68
  %5 = load i32* %arrayidx33, align 4, !tbaa !3
  %idxprom34 = sext i32 %5 to i64
  br label %for.body19

for.body19:                                       ; preds = %for.body19, %for.cond16.preheader
  %indvars.iv = phi i64 [ 0, %for.cond16.preheader ], [ %indvars.iv.next, %for.body19 ]
  %arrayidx28 = getelementptr inbounds [3 x float]* %1, i64 %indvars.iv68, i64 %indvars.iv
  %6 = load float* %arrayidx28, align 4, !tbaa !4
  %mul29 = fmul float %sub, %6
  %arrayidx36 = getelementptr inbounds [3 x float]* %x, i64 %idxprom34, i64 %indvars.iv
  %7 = load float* %arrayidx36, align 4, !tbaa !4
  %add37 = fadd float %mul29, %7
  store float %add37, float* %arrayidx36, align 4, !tbaa !4
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 3
  br i1 %exitcond, label %for.inc38, label %for.body19

for.inc38:                                        ; preds = %for.body19
  %indvars.iv.next69 = add i64 %indvars.iv68, 1
  %8 = trunc i64 %indvars.iv.next69 to i32
  %cmp13 = icmp slt i32 %8, %.pre74
  br i1 %cmp13, label %for.cond16.preheader, label %for.inc41

for.inc41:                                        ; preds = %for.inc38, %for.body
  %indvars.iv.next71 = add i64 %indvars.iv70, 1
  %9 = trunc i64 %indvars.iv.next71 to i32
  %cmp = icmp slt i32 %9, %0
  br i1 %cmp, label %for.body, label %for.end43

for.end43:                                        ; preds = %for.inc41, %entry
  ret void
}
