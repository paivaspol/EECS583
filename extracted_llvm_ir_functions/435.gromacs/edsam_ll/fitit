define float @fitit(i32 %nr, [3 x float]* nocapture %x, %struct.t_edpar* nocapture readonly %edi, [3 x float]* nocapture %transvec, [3 x float]* nocapture %rmat) #4 {
  %x_old = alloca [3 x float], align 4
  %x_old32 = bitcast [3 x float]* %x_old to i8*
  %1 = tail call i8* @save_calloc(i8* getelementptr inbounds ([5 x i8]* @.str9, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str3, i64 0, i64 0), i32 400, i32 %nr, i32 12) #11
  %2 = bitcast i8* %1 to [3 x float]*
  %3 = icmp sgt i32 %nr, 0
  br i1 %3, label %.lr.ph24, label %._crit_edge21.critedge

.lr.ph24:                                         ; preds = %0
  %4 = add i32 %nr, -1
  br label %5

; <label>:5                                       ; preds = %5, %.lr.ph24
  %indvars.iv51 = phi i64 [ 0, %.lr.ph24 ], [ %indvars.iv.next52, %5 ]
  %6 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv51, i64 0
  %7 = getelementptr inbounds [3 x float]* %2, i64 %indvars.iv51, i64 0
  %8 = bitcast float* %6 to i32*
  %9 = load i32* %8, align 4, !tbaa !2
  %10 = bitcast float* %7 to i32*
  store i32 %9, i32* %10, align 4, !tbaa !2
  %11 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv51, i64 1
  %12 = bitcast float* %11 to i32*
  %13 = load i32* %12, align 4, !tbaa !2
  %14 = getelementptr inbounds [3 x float]* %2, i64 %indvars.iv51, i64 1
  %15 = bitcast float* %14 to i32*
  store i32 %13, i32* %15, align 4, !tbaa !2
  %16 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv51, i64 2
  %17 = bitcast float* %16 to i32*
  %18 = load i32* %17, align 4, !tbaa !2
  %19 = getelementptr inbounds [3 x float]* %2, i64 %indvars.iv51, i64 2
  %20 = bitcast float* %19 to i32*
  store i32 %18, i32* %20, align 4, !tbaa !2
  %indvars.iv.next52 = add nuw nsw i64 %indvars.iv51, 1
  %lftr.wideiv53 = trunc i64 %indvars.iv51 to i32
  %exitcond54 = icmp eq i32 %lftr.wideiv53, %4
  br i1 %exitcond54, label %._crit_edge25, label %5

._crit_edge25:                                    ; preds = %5
  %21 = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 13
  %22 = load i32* %21, align 4, !tbaa !29
  %23 = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 14
  %24 = load i32** %23, align 8, !tbaa !31
  %25 = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 15
  %26 = load float** %25, align 8, !tbaa !30
  %27 = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 16
  %28 = load float* %27, align 4, !tbaa !26
  tail call void @put_in_origin(i32 %nr, [3 x float]* %x, i32 %22, i32* %24, float* %26, float %28) #12
  br i1 %3, label %.lr.ph20, label %._crit_edge21

.lr.ph20:                                         ; preds = %._crit_edge25
  %29 = add i32 %nr, -1
  br label %30

; <label>:30                                      ; preds = %30, %.lr.ph20
  %indvars.iv47 = phi i64 [ 0, %.lr.ph20 ], [ %indvars.iv.next48, %30 ]
  %31 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv47, i64 0
  %32 = getelementptr inbounds [3 x float]* %2, i64 %indvars.iv47, i64 0
  %33 = getelementptr inbounds [3 x float]* %transvec, i64 %indvars.iv47, i64 0
  %34 = load float* %31, align 4, !tbaa !2
  %35 = load float* %32, align 4, !tbaa !2
  %36 = fsub float %34, %35
  %37 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv47, i64 1
  %38 = load float* %37, align 4, !tbaa !2
  %39 = getelementptr inbounds [3 x float]* %2, i64 %indvars.iv47, i64 1
  %40 = load float* %39, align 4, !tbaa !2
  %41 = fsub float %38, %40
  %42 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv47, i64 2
  %43 = load float* %42, align 4, !tbaa !2
  %44 = getelementptr inbounds [3 x float]* %2, i64 %indvars.iv47, i64 2
  %45 = load float* %44, align 4, !tbaa !2
  %46 = fsub float %43, %45
  store float %36, float* %33, align 4, !tbaa !2
  %47 = getelementptr inbounds [3 x float]* %transvec, i64 %indvars.iv47, i64 1
  store float %41, float* %47, align 4, !tbaa !2
  %48 = getelementptr inbounds [3 x float]* %transvec, i64 %indvars.iv47, i64 2
  store float %46, float* %48, align 4, !tbaa !2
  %indvars.iv.next48 = add nuw nsw i64 %indvars.iv47, 1
  %lftr.wideiv49 = trunc i64 %indvars.iv47 to i32
  %exitcond50 = icmp eq i32 %lftr.wideiv49, %29
  br i1 %exitcond50, label %._crit_edge21, label %30

._crit_edge21.critedge:                           ; preds = %0
  %49 = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 13
  %50 = load i32* %49, align 4, !tbaa !29
  %51 = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 14
  %52 = load i32** %51, align 8, !tbaa !31
  %53 = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 15
  %54 = load float** %53, align 8, !tbaa !30
  %55 = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 16
  %56 = load float* %55, align 4, !tbaa !26
  tail call void @put_in_origin(i32 %nr, [3 x float]* %x, i32 %50, i32* %52, float* %54, float %56) #12
  br label %._crit_edge21

._crit_edge21:                                    ; preds = %30, %._crit_edge21.critedge, %._crit_edge25
  tail call void @save_free(i8* getelementptr inbounds ([5 x i8]* @.str9, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str3, i64 0, i64 0), i32 408, i8* %1) #11
  %57 = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 17
  %58 = load i32* %57, align 4, !tbaa !41
  %59 = tail call i8* @save_calloc(i8* getelementptr inbounds ([5 x i8]* @.str9, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str3, i64 0, i64 0), i32 411, i32 %58, i32 12) #11
  %60 = bitcast i8* %59 to [3 x float]*
  %61 = load i32* %57, align 4, !tbaa !41
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %.lr.ph, label %._crit_edge16

.lr.ph:                                           ; preds = %._crit_edge21
  %63 = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 18
  %64 = load i32** %63, align 8, !tbaa !43
  %65 = sext i32 %61 to i64
  br label %66

; <label>:66                                      ; preds = %.lr.ph, %66
  %indvars.iv45 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next46, %66 ]
  %67 = getelementptr inbounds i32* %64, i64 %indvars.iv45
  %68 = load i32* %67, align 4, !tbaa !34
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [3 x float]* %x, i64 %69, i64 0
  %71 = getelementptr inbounds [3 x float]* %60, i64 %indvars.iv45, i64 0
  %72 = bitcast float* %70 to i32*
  %73 = load i32* %72, align 4, !tbaa !2
  %74 = bitcast float* %71 to i32*
  store i32 %73, i32* %74, align 4, !tbaa !2
  %75 = getelementptr inbounds [3 x float]* %x, i64 %69, i64 1
  %76 = bitcast float* %75 to i32*
  %77 = load i32* %76, align 4, !tbaa !2
  %78 = getelementptr inbounds [3 x float]* %60, i64 %indvars.iv45, i64 1
  %79 = bitcast float* %78 to i32*
  store i32 %77, i32* %79, align 4, !tbaa !2
  %80 = getelementptr inbounds [3 x float]* %x, i64 %69, i64 2
  %81 = bitcast float* %80 to i32*
  %82 = load i32* %81, align 4, !tbaa !2
  %83 = getelementptr inbounds [3 x float]* %60, i64 %indvars.iv45, i64 2
  %84 = bitcast float* %83 to i32*
  store i32 %82, i32* %84, align 4, !tbaa !2
  %indvars.iv.next46 = add nuw nsw i64 %indvars.iv45, 1
  %85 = icmp slt i64 %indvars.iv.next46, %65
  br i1 %85, label %66, label %._crit_edge16

._crit_edge16:                                    ; preds = %66, %._crit_edge21
  %86 = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 7, i32 2
  %87 = load [3 x float]** %86, align 8, !tbaa !44
  tail call void @do_edfit(i32 %61, [3 x float]* %87, [3 x float]* %60, [3 x float]* %rmat) #12
  tail call void @save_free(i8* getelementptr inbounds ([5 x i8]* @.str9, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str3, i64 0, i64 0), i32 415, i8* %59) #11
  br i1 %3, label %.preheader3.lr.ph, label %.preheader1

.preheader3.lr.ph:                                ; preds = %._crit_edge16
  %88 = add i32 %nr, -1
  br label %.preheader3

.preheader3:                                      ; preds = %106, %.preheader3.lr.ph
  %indvars.iv42 = phi i64 [ 0, %.preheader3.lr.ph ], [ %indvars.iv.next43, %106 ]
  %scevgep = getelementptr [3 x float]* %x, i64 %indvars.iv42, i64 0
  %scevgep33 = bitcast float* %scevgep to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %x_old32, i8* %scevgep33, i64 12, i32 4, i1 false)
  br label %95

.preheader1:                                      ; preds = %106, %._crit_edge16
  %89 = load i32* %57, align 4, !tbaa !41
  %90 = icmp sgt i32 %89, 0
  br i1 %90, label %.preheader.lr.ph, label %._crit_edge

.preheader.lr.ph:                                 ; preds = %.preheader1
  %91 = load [3 x float]** %86, align 8, !tbaa !44
  %92 = getelementptr inbounds %struct.t_edpar* %edi, i64 0, i32 18
  %93 = load i32** %92, align 8, !tbaa !43
  %94 = sext i32 %89 to i64
  br label %.preheader

; <label>:95                                      ; preds = %105, %.preheader3
  %indvars.iv37 = phi i64 [ 0, %.preheader3 ], [ %indvars.iv.next38, %105 ]
  %96 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv42, i64 %indvars.iv37
  store float 0.000000e+00, float* %96, align 4, !tbaa !2
  br label %97

; <label>:97                                      ; preds = %97, %95
  %98 = phi float [ 0.000000e+00, %95 ], [ %104, %97 ]
  %indvars.iv34 = phi i64 [ 0, %95 ], [ %indvars.iv.next35, %97 ]
  %99 = getelementptr inbounds [3 x float]* %rmat, i64 %indvars.iv34, i64 %indvars.iv37
  %100 = load float* %99, align 4, !tbaa !2
  %101 = getelementptr inbounds [3 x float]* %x_old, i64 0, i64 %indvars.iv34
  %102 = load float* %101, align 4, !tbaa !2
  %103 = fmul float %100, %102
  %104 = fadd float %98, %103
  store float %104, float* %96, align 4, !tbaa !2
  %indvars.iv.next35 = add nuw nsw i64 %indvars.iv34, 1
  %exitcond36 = icmp eq i64 %indvars.iv.next35, 3
  br i1 %exitcond36, label %105, label %97

; <label>:105                                     ; preds = %97
  %indvars.iv.next38 = add nuw nsw i64 %indvars.iv37, 1
  %exitcond39 = icmp eq i64 %indvars.iv.next38, 3
  br i1 %exitcond39, label %106, label %95

; <label>:106                                     ; preds = %105
  %indvars.iv.next43 = add nuw nsw i64 %indvars.iv42, 1
  %lftr.wideiv = trunc i64 %indvars.iv42 to i32
  %exitcond44 = icmp eq i32 %lftr.wideiv, %88
  br i1 %exitcond44, label %.preheader1, label %.preheader3

.preheader:                                       ; preds = %.preheader.lr.ph, %120
  %indvars.iv27 = phi i64 [ 0, %.preheader.lr.ph ], [ %indvars.iv.next28, %120 ]
  %rmsd.08 = phi float [ 0.000000e+00, %.preheader.lr.ph ], [ %119, %120 ]
  %107 = getelementptr inbounds i32* %93, i64 %indvars.iv27
  %108 = load i32* %107, align 4, !tbaa !34
  %109 = sext i32 %108 to i64
  br label %110

; <label>:110                                     ; preds = %110, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %110 ]
  %rmsd.16 = phi float [ %rmsd.08, %.preheader ], [ %119, %110 ]
  %111 = getelementptr inbounds [3 x float]* %91, i64 %indvars.iv27, i64 %indvars.iv
  %112 = load float* %111, align 4, !tbaa !2
  %113 = getelementptr inbounds [3 x float]* %x, i64 %109, i64 %indvars.iv
  %114 = load float* %113, align 4, !tbaa !2
  %115 = fsub float %112, %114
  %116 = fpext float %115 to double
  %pow2 = fmul double %116, %116
  %117 = fpext float %rmsd.16 to double
  %118 = fadd double %117, %pow2
  %119 = fptrunc double %118 to float
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %120, label %110

; <label>:120                                     ; preds = %110
  %indvars.iv.next28 = add nuw nsw i64 %indvars.iv27, 1
  %121 = icmp slt i64 %indvars.iv.next28, %94
  br i1 %121, label %.preheader, label %._crit_edge

._crit_edge:                                      ; preds = %120, %.preheader1
  %rmsd.0.lcssa = phi float [ 0.000000e+00, %.preheader1 ], [ %119, %120 ]
  %122 = sitofp i32 %89 to float
  %123 = fdiv float %rmsd.0.lcssa, %122
  %sqrtf = tail call float @sqrtf(float %123) #8
  ret float %sqrtf
}
