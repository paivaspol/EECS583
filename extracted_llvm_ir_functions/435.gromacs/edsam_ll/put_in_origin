define void @put_in_origin(i32 %nr, [3 x float]* nocapture %x, i32 %nmass, i32* nocapture readonly %masnrs, float* nocapture readonly %mass, float %tmass) #4 {
.preheader3:
  %cm = alloca [3 x float], align 4
  %cm22 = bitcast [3 x float]* %cm to i8*
  call void @llvm.memset.p0i8.i64(i8* %cm22, i8 0, i64 12, i32 4, i1 false)
  %0 = icmp sgt i32 %nmass, 0
  br i1 %0, label %.preheader2.lr.ph, label %.preheader1

.preheader2.lr.ph:                                ; preds = %.preheader3
  %1 = add i32 %nmass, -1
  br label %.preheader2

.preheader2:                                      ; preds = %14, %.preheader2.lr.ph
  %indvars.iv15 = phi i64 [ 0, %.preheader2.lr.ph ], [ %indvars.iv.next16, %14 ]
  %2 = getelementptr inbounds i32* %masnrs, i64 %indvars.iv15
  %3 = load i32* %2, align 4, !tbaa !34
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds float* %mass, i64 %indvars.iv15
  %6 = load float* %5, align 4, !tbaa !2
  br label %7

; <label>:7                                       ; preds = %7, %.preheader2
  %indvars.iv12 = phi i64 [ 0, %.preheader2 ], [ %indvars.iv.next13, %7 ]
  %8 = getelementptr inbounds [3 x float]* %x, i64 %4, i64 %indvars.iv12
  %9 = load float* %8, align 4, !tbaa !2
  %10 = fmul float %9, %6
  %11 = getelementptr inbounds [3 x float]* %cm, i64 0, i64 %indvars.iv12
  %12 = load float* %11, align 4, !tbaa !2
  %13 = fadd float %12, %10
  store float %13, float* %11, align 4, !tbaa !2
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1
  %exitcond14 = icmp eq i64 %indvars.iv.next13, 3
  br i1 %exitcond14, label %14, label %7

; <label>:14                                      ; preds = %7
  %indvars.iv.next16 = add nuw nsw i64 %indvars.iv15, 1
  %lftr.wideiv17 = trunc i64 %indvars.iv15 to i32
  %exitcond18 = icmp eq i32 %lftr.wideiv17, %1
  br i1 %exitcond18, label %.preheader1, label %.preheader2

.preheader:                                       ; preds = %.preheader1
  %15 = icmp sgt i32 %nr, 0
  br i1 %15, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader
  %16 = getelementptr inbounds [3 x float]* %cm, i64 0, i64 0
  %17 = load float* %16, align 4, !tbaa !2
  %18 = getelementptr inbounds [3 x float]* %cm, i64 0, i64 1
  %19 = load float* %18, align 4, !tbaa !2
  %20 = getelementptr inbounds [3 x float]* %cm, i64 0, i64 2
  %21 = load float* %20, align 4, !tbaa !2
  %22 = add i32 %nr, -1
  br label %26

.preheader1:                                      ; preds = %.preheader3, %14, %.preheader1
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %.preheader1 ], [ 0, %14 ], [ 0, %.preheader3 ]
  %23 = getelementptr inbounds [3 x float]* %cm, i64 0, i64 %indvars.iv9
  %24 = load float* %23, align 4, !tbaa !2
  %25 = fdiv float %24, %tmass
  store float %25, float* %23, align 4, !tbaa !2
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1
  %exitcond11 = icmp eq i64 %indvars.iv.next10, 3
  br i1 %exitcond11, label %.preheader, label %.preheader1

; <label>:26                                      ; preds = %26, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %26 ]
  %27 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv, i64 0
  %28 = load float* %27, align 4, !tbaa !2
  %29 = fsub float %28, %17
  %30 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv, i64 1
  %31 = load float* %30, align 4, !tbaa !2
  %32 = fsub float %31, %19
  %33 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv, i64 2
  %34 = load float* %33, align 4, !tbaa !2
  %35 = fsub float %34, %21
  store float %29, float* %27, align 4, !tbaa !2
  store float %32, float* %30, align 4, !tbaa !2
  store float %35, float* %33, align 4, !tbaa !2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %22
  br i1 %exitcond, label %._crit_edge, label %26

._crit_edge:                                      ; preds = %26, %.preheader
  ret void
}
