define internal fastcc void @init_time_factor() #1 {
  %1 = load float* @timefactor, align 4, !tbaa !15
  %2 = fadd float %1, 1.234500e+04
  %fabsf = tail call float @fabsf(float %2) #9
  %3 = fpext float %fabsf to double
  %4 = fcmp olt double %3, 1.200000e-38
  br i1 %4, label %5, label %20

; <label>:5                                       ; preds = %0
  %6 = load i8** getelementptr inbounds ([10 x i8*]* @timestr, i64 0, i64 1), align 8, !tbaa !19
  %7 = icmp eq i8* %6, null
  br i1 %7, label %nenum.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %5
  %8 = load i8** getelementptr inbounds ([10 x i8*]* @timestr, i64 0, i64 0), align 16, !tbaa !19
  br label %9

; <label>:9                                       ; preds = %12, %.lr.ph.i
  %indvars.iv.i = phi i64 [ 1, %.lr.ph.i ], [ %indvars.iv.next.i, %12 ]
  %10 = phi i8* [ %6, %.lr.ph.i ], [ %14, %12 ]
  %11 = icmp eq i8* %8, %10
  br i1 %11, label %nenum.exit, label %12

; <label>:12                                      ; preds = %9
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %13 = getelementptr inbounds [10 x i8*]* @timestr, i64 0, i64 %indvars.iv.next.i
  %14 = load i8** %13, align 8, !tbaa !19
  %15 = icmp eq i8* %14, null
  br i1 %15, label %nenum.exit, label %9

nenum.exit:                                       ; preds = %12, %9, %5
  %i.0.lcssa.i = phi i64 [ 1, %5 ], [ %indvars.iv.i, %9 ], [ %indvars.iv.next.i, %12 ]
  %sext = shl i64 %i.0.lcssa.i, 32
  %16 = ashr exact i64 %sext, 32
  %17 = getelementptr inbounds [10 x float]* @timefactors, i64 0, i64 %16
  %18 = bitcast float* %17 to i32*
  %19 = load i32* %18, align 4, !tbaa !15
  store i32 %19, i32* bitcast (float* @timefactor to i32*), align 4, !tbaa !15
  br label %20

; <label>:20                                      ; preds = %nenum.exit, %0
  ret void
}
