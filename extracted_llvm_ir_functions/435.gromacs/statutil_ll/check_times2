define i32 @check_times2(float %t, float %t0, float %tp, float %tpp) #1 {
  %1 = fsub float %t, %tp
  %2 = fcmp ogt float %1, 0.000000e+00
  br i1 %2, label %3, label %11

; <label>:3                                       ; preds = %0
  %4 = fsub float %tp, %tpp
  %5 = fcmp ogt float %4, 0.000000e+00
  br i1 %5, label %6, label %11

; <label>:6                                       ; preds = %3
  %7 = fcmp olt float %1, %4
  %. = select i1 %7, float %1, float %4
  %8 = fpext float %. to double
  %9 = fmul double %8, 1.000000e-01
  %10 = fptrunc double %9 to float
  br label %11

; <label>:11                                      ; preds = %0, %3, %6
  %margin.0 = phi float [ %10, %6 ], [ 0.000000e+00, %3 ], [ 0.000000e+00, %0 ]
  %12 = load float* @tbegin, align 4, !tbaa !15
  %13 = fcmp ult float %12, 0.000000e+00
  %14 = fcmp ugt float %12, %t
  %or.cond = or i1 %13, %14
  br i1 %or.cond, label %15, label %20

; <label>:15                                      ; preds = %11
  %16 = fpext float %12 to double
  %17 = fadd double %16, 1.000000e+00
  %18 = tail call double @fabs(double %17) #15
  %19 = fcmp olt double %18, 1.200000e-38
  br i1 %19, label %20, label %._crit_edge

._crit_edge:                                      ; preds = %15
  %.pre = load float* @tend, align 4, !tbaa !15
  br label %47

; <label>:20                                      ; preds = %11, %15
  %21 = load float* @tend, align 4, !tbaa !15
  %22 = fcmp ult float %21, 0.000000e+00
  %23 = fadd float %margin.0, %21
  %24 = fcmp ult float %23, %t
  %or.cond2 = or i1 %22, %24
  br i1 %or.cond2, label %25, label %30

; <label>:25                                      ; preds = %20
  %26 = fpext float %21 to double
  %27 = fadd double %26, 1.000000e+00
  %28 = tail call double @fabs(double %27) #15
  %29 = fcmp olt double %28, 1.200000e-38
  br i1 %29, label %30, label %47

; <label>:30                                      ; preds = %20, %25
  %31 = load float* @tdelta, align 4, !tbaa !15
  %32 = fcmp ogt float %31, 0.000000e+00
  br i1 %32, label %33, label %46

; <label>:33                                      ; preds = %30
  %34 = fsub float %t, %t0
  %35 = fpext float %34 to double
  %36 = fpext float %31 to double
  %37 = fmul double %35, 0x3FF00000A10FAFA0
  %38 = fdiv double %37, %36
  %39 = fptosi double %38 to i32
  %40 = sitofp i32 %39 to double
  %41 = fmul double %36, %40
  %42 = fsub double %35, %41
  %43 = tail call double @fabs(double %42) #15
  %fabsf = tail call float @fabsf(float %34) #9
  %44 = fpext float %fabsf to double
  %45 = fmul double %44, 6.000000e-07
  %not..i = fcmp ugt double %43, %45
  br i1 %not..i, label %54, label %46

; <label>:46                                      ; preds = %33, %30
  br label %54

; <label>:47                                      ; preds = %._crit_edge, %25
  %48 = phi float [ %.pre, %._crit_edge ], [ %21, %25 ]
  %49 = fpext float %48 to double
  %50 = fadd double %49, 1.000000e+00
  %51 = tail call double @fabs(double %50) #15
  %52 = fcmp ule double %51, 1.200000e-38
  %53 = fcmp ugt float %48, %t
  %or.cond3 = or i1 %53, %52
  %.4 = select i1 %or.cond3, i32 -1, i32 1
  br label %54

; <label>:54                                      ; preds = %33, %47, %46
  %55 = phi float [ %21, %46 ], [ %21, %33 ], [ %48, %47 ]
  %r.0 = phi i32 [ 0, %46 ], [ -1, %33 ], [ %.4, %47 ]
  %56 = load %struct.__sFILE** @debug, align 8, !tbaa !19
  %57 = icmp eq %struct.__sFILE* %56, null
  br i1 %57, label %66, label %58

; <label>:58                                      ; preds = %54
  %59 = fpext float %t to double
  %60 = fpext float %t0 to double
  %61 = fpext float %12 to double
  %62 = fpext float %55 to double
  %63 = load float* @tdelta, align 4, !tbaa !15
  %64 = fpext float %63 to double
  %65 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %56, i8* getelementptr inbounds ([38 x i8]* @.str2, i64 0, i64 0), double %59, double %60, double %61, double %62, double %64, i32 %r.0) #12
  br label %66

; <label>:66                                      ; preds = %54, %58
  ret i32 %r.0
}
