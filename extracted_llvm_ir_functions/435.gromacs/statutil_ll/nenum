define i32 @nenum(i8** nocapture %enumc) #0 {
entry:
  %arrayidx8 = getelementptr inbounds i8** %enumc, i64 1
  %0 = load i8** %arrayidx8, align 8, !tbaa !0
  %tobool9 = icmp eq i8* %0, null
  br i1 %tobool9, label %while.end, label %land.rhs.lr.ph

land.rhs.lr.ph:                                   ; preds = %entry
  %1 = load i8** %enumc, align 8, !tbaa !0
  br label %land.rhs

while.cond:                                       ; preds = %land.rhs
  %arrayidx = getelementptr inbounds i8** %enumc, i64 %indvars.iv.next
  %2 = load i8** %arrayidx, align 8, !tbaa !0
  %tobool = icmp eq i8* %2, null
  br i1 %tobool, label %while.end, label %land.rhs

land.rhs:                                         ; preds = %land.rhs.lr.ph, %while.cond
  %indvars.iv = phi i64 [ 1, %land.rhs.lr.ph ], [ %indvars.iv.next, %while.cond ]
  %3 = phi i8* [ %0, %land.rhs.lr.ph ], [ %2, %while.cond ]
  %i.010 = phi i32 [ 1, %land.rhs.lr.ph ], [ %inc, %while.cond ]
  %cmp = icmp eq i8* %1, %3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %inc = add nsw i32 %i.010, 1
  br i1 %cmp, label %while.end, label %while.cond

while.end:                                        ; preds = %while.cond, %land.rhs, %entry
  %i.0.lcssa = phi i32 [ 1, %entry ], [ %i.010, %land.rhs ], [ %inc, %while.cond ]
  ret i32 %i.0.lcssa
}
