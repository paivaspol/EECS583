define i32 @xdr_char(%struct.XDR* %xdrs, i8* nocapture %cp) #0 {
entry:
  %i = alloca i32, align 4
  call void @llvm.dbg.value(metadata !{%struct.XDR* %xdrs}, i64 0, metadata !135), !dbg !414
  call void @llvm.dbg.value(metadata !{i8* %cp}, i64 0, metadata !136), !dbg !414
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !137), !dbg !415
  %0 = load i8* %cp, align 1, !dbg !416, !tbaa !347
  %conv = sext i8 %0 to i32, !dbg !416
  call void @llvm.dbg.value(metadata !{i32 %conv}, i64 0, metadata !137), !dbg !416
  store i32 %conv, i32* %i, align 4, !dbg !416, !tbaa !357
  %call = call i32 @xdr_int(%struct.XDR* %xdrs, i32* %i) #7, !dbg !417
  %tobool = icmp eq i32 %call, 0, !dbg !417
  br i1 %tobool, label %return, label %if.end, !dbg !417

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata !{i32* %i}, i64 0, metadata !137), !dbg !418
  %1 = load i32* %i, align 4, !dbg !418, !tbaa !357
  %conv1 = trunc i32 %1 to i8, !dbg !418
  store i8 %conv1, i8* %cp, align 1, !dbg !418, !tbaa !347
  br label %return, !dbg !419

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %entry ]
  ret i32 %retval.0, !dbg !419
}
