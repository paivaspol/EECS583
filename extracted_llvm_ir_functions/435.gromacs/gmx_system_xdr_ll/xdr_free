define void @xdr_free(i32 (%struct.XDR*, i8*, ...)* nocapture %proc, i8* %objp) #0 {
  %x = alloca %struct.XDR, align 8
  tail call void @llvm.dbg.value(metadata i32 (%struct.XDR*, i8*, ...)* %proc, i64 0, metadata !137, metadata !360), !dbg !361
  tail call void @llvm.dbg.value(metadata i8* %objp, i64 0, metadata !138, metadata !360), !dbg !362
  %1 = bitcast %struct.XDR* %x to i8*, !dbg !363
  call void @llvm.lifetime.start(i64 48, i8* %1) #2, !dbg !363
  %2 = getelementptr inbounds %struct.XDR* %x, i64 0, i32 0, !dbg !364
  store i32 2, i32* %2, align 8, !dbg !365, !tbaa !366
  tail call void @llvm.dbg.value(metadata %struct.XDR* %x, i64 0, metadata !139, metadata !360), !dbg !372
  %3 = call i32 (%struct.XDR*, i8*, ...)* %proc(%struct.XDR* %x, i8* %objp) #7, !dbg !373
  call void @llvm.lifetime.end(i64 48, i8* %1) #2, !dbg !374
  ret void, !dbg !374
}
