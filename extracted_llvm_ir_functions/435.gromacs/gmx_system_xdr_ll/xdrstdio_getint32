define internal i32 @xdrstdio_getint32(%struct.XDR* nocapture %xdrs, i32* nocapture %ip) #0 {
entry:
  %x.addr.i.i = alloca i32, align 4
  %y.i.i = alloca i32, align 4
  %mycopy = alloca i32, align 4
  call void @llvm.dbg.value(metadata !{%struct.XDR* %xdrs}, i64 0, metadata !293), !dbg !598
  call void @llvm.dbg.value(metadata !{i32* %ip}, i64 0, metadata !294), !dbg !598
  call void @llvm.dbg.declare(metadata !{i32* %mycopy}, metadata !295), !dbg !599
  %0 = bitcast i32* %mycopy to i8*, !dbg !600
  %x_private = getelementptr inbounds %struct.XDR* %xdrs, i64 0, i32 3, !dbg !600
  %1 = load i8** %x_private, align 8, !dbg !600, !tbaa !360
  %2 = bitcast i8* %1 to %struct._IO_FILE*, !dbg !600
  %call = call i64 @fread(i8* %0, i64 4, i64 1, %struct._IO_FILE* %2) #6, !dbg !600
  %cmp = icmp eq i64 %call, 1, !dbg !600
  br i1 %cmp, label %if.end, label %return, !dbg !600

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata !{i32* %mycopy}, i64 0, metadata !295), !dbg !601
  %3 = load i32* %mycopy, align 4, !dbg !601, !tbaa !357
  call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !602) #2, !dbg !603
  call void @llvm.dbg.declare(metadata !543, metadata !299) #2, !dbg !604
  %4 = bitcast i32* %x.addr.i.i to i8*, !dbg !605
  call void @llvm.lifetime.start(i64 4, i8* %4) #2, !dbg !605
  %5 = bitcast i32* %y.i.i to i8*, !dbg !605
  call void @llvm.lifetime.start(i64 4, i8* %5) #2, !dbg !605
  call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !607) #2, !dbg !605
  call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !607) #2, !dbg !605
  call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !286), !dbg !605
  store i32 %3, i32* %x.addr.i.i, align 4, !tbaa !357
  call void @llvm.dbg.declare(metadata !{i32* %x.addr.i.i}, metadata !286) #2, !dbg !605
  call void @llvm.dbg.declare(metadata !{i32* %y.i.i}, metadata !287) #2, !dbg !608
  call void @llvm.dbg.value(metadata !{i8* %4}, i64 0, metadata !609) #2, !dbg !610
  call void @llvm.dbg.value(metadata !{i8* %5}, i64 0, metadata !611) #2, !dbg !612
  call void @llvm.dbg.value(metadata !9, i64 0, metadata !613) #2, !dbg !614
  br label %for.body.i.i, !dbg !614

for.body.i.i:                                     ; preds = %for.body.i.i, %if.end
  %indvars.iv.i.i = phi i64 [ 0, %if.end ], [ %indvars.iv.next.i.i, %for.body.i.i ]
  %6 = sub nsw i64 3, %indvars.iv.i.i, !dbg !615
  %arrayidx.i.i = getelementptr inbounds i8* %4, i64 %6, !dbg !615
  %7 = load i8* %arrayidx.i.i, align 1, !dbg !615, !tbaa !347
  %arrayidx2.i.i = getelementptr inbounds i8* %5, i64 %indvars.iv.i.i, !dbg !615
  store i8 %7, i8* %arrayidx2.i.i, align 1, !dbg !615, !tbaa !347
  %indvars.iv.next.i.i = add i64 %indvars.iv.i.i, 1, !dbg !614
  %lftr.wideiv = trunc i64 %indvars.iv.next.i.i to i32, !dbg !614
  %exitcond = icmp eq i32 %lftr.wideiv, 4, !dbg !614
  br i1 %exitcond, label %xdr_ntohl.exit, label %for.body.i.i, !dbg !614

xdr_ntohl.exit:                                   ; preds = %for.body.i.i
  call void @llvm.dbg.value(metadata !{i32* %y.i.i}, i64 0, metadata !616) #2, !dbg !617
  call void @llvm.dbg.value(metadata !{i32* %y.i.i}, i64 0, metadata !616) #2, !dbg !617
  call void @llvm.dbg.value(metadata !{i32* %y.i.i}, i64 0, metadata !287), !dbg !617
  %8 = load i32* %y.i.i, align 4, !dbg !617, !tbaa !357
  call void @llvm.lifetime.end(i64 4, i8* %4) #2, !dbg !617
  call void @llvm.lifetime.end(i64 4, i8* %5) #2, !dbg !617
  store i32 %8, i32* %ip, align 4, !dbg !601, !tbaa !357
  br label %return, !dbg !618

return:                                           ; preds = %entry, %xdr_ntohl.exit
  %retval.0 = phi i32 [ 1, %xdr_ntohl.exit ], [ 0, %entry ]
  ret i32 %retval.0, !dbg !618
}
