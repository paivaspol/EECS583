define internal i32 @xdrstdio_putint32(%struct.XDR* nocapture %xdrs, i32* nocapture %ip) #0 {
entry:
  %x.addr.i.i = alloca i32, align 4
  %y.i.i = alloca i32, align 4
  %mycopy = alloca i32, align 4
  call void @llvm.dbg.value(metadata !{%struct.XDR* %xdrs}, i64 0, metadata !274), !dbg !619
  call void @llvm.dbg.value(metadata !{i32* %ip}, i64 0, metadata !275), !dbg !619
  call void @llvm.dbg.declare(metadata !{i32* %mycopy}, metadata !276), !dbg !620
  %0 = load i32* %ip, align 4, !dbg !620, !tbaa !357
  call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !621) #2, !dbg !622
  call void @llvm.dbg.declare(metadata !543, metadata !283) #2, !dbg !623
  %1 = bitcast i32* %x.addr.i.i to i8*, !dbg !624
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !624
  %2 = bitcast i32* %y.i.i to i8*, !dbg !624
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !624
  call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !626) #2, !dbg !624
  call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !626) #2, !dbg !624
  call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !286), !dbg !624
  store i32 %0, i32* %x.addr.i.i, align 4, !tbaa !357
  call void @llvm.dbg.declare(metadata !{i32* %x.addr.i.i}, metadata !286) #2, !dbg !624
  call void @llvm.dbg.declare(metadata !{i32* %y.i.i}, metadata !287) #2, !dbg !627
  call void @llvm.dbg.value(metadata !{i8* %1}, i64 0, metadata !628) #2, !dbg !629
  call void @llvm.dbg.value(metadata !{i8* %2}, i64 0, metadata !630) #2, !dbg !631
  call void @llvm.dbg.value(metadata !9, i64 0, metadata !632) #2, !dbg !633
  br label %for.body.i.i, !dbg !633

for.body.i.i:                                     ; preds = %for.body.i.i, %entry
  %indvars.iv.i.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i.i, %for.body.i.i ]
  %3 = sub nsw i64 3, %indvars.iv.i.i, !dbg !634
  %arrayidx.i.i = getelementptr inbounds i8* %1, i64 %3, !dbg !634
  %4 = load i8* %arrayidx.i.i, align 1, !dbg !634, !tbaa !347
  %arrayidx2.i.i = getelementptr inbounds i8* %2, i64 %indvars.iv.i.i, !dbg !634
  store i8 %4, i8* %arrayidx2.i.i, align 1, !dbg !634, !tbaa !347
  %indvars.iv.next.i.i = add i64 %indvars.iv.i.i, 1, !dbg !633
  %lftr.wideiv = trunc i64 %indvars.iv.next.i.i to i32, !dbg !633
  %exitcond = icmp eq i32 %lftr.wideiv, 4, !dbg !633
  br i1 %exitcond, label %xdr_htonl.exit, label %for.body.i.i, !dbg !633

xdr_htonl.exit:                                   ; preds = %for.body.i.i
  call void @llvm.dbg.value(metadata !{i32* %y.i.i}, i64 0, metadata !635) #2, !dbg !636
  call void @llvm.dbg.value(metadata !{i32* %y.i.i}, i64 0, metadata !635) #2, !dbg !636
  call void @llvm.dbg.value(metadata !{i32* %y.i.i}, i64 0, metadata !287), !dbg !636
  %5 = load i32* %y.i.i, align 4, !dbg !636, !tbaa !357
  call void @llvm.lifetime.end(i64 4, i8* %1) #2, !dbg !636
  call void @llvm.lifetime.end(i64 4, i8* %2) #2, !dbg !636
  call void @llvm.dbg.value(metadata !{i32 %5}, i64 0, metadata !276), !dbg !620
  store i32 %5, i32* %mycopy, align 4, !dbg !620, !tbaa !357
  call void @llvm.dbg.value(metadata !{i32* %mycopy}, i64 0, metadata !275), !dbg !637
  %6 = bitcast i32* %mycopy to i8*, !dbg !638
  %x_private = getelementptr inbounds %struct.XDR* %xdrs, i64 0, i32 3, !dbg !638
  %7 = load i8** %x_private, align 8, !dbg !638, !tbaa !360
  %8 = bitcast i8* %7 to %struct._IO_FILE*, !dbg !638
  %call1 = call i64 @fwrite(i8* %6, i64 4, i64 1, %struct._IO_FILE* %8) #6, !dbg !638
  %cmp = icmp eq i64 %call1, 1, !dbg !638
  %. = zext i1 %cmp to i32, !dbg !639
  ret i32 %., !dbg !639
}
