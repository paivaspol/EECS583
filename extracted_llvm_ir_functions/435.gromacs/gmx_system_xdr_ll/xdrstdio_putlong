define internal i32 @xdrstdio_putlong(%struct.XDR* nocapture readonly %xdrs, i64* nocapture readonly %lp) #0 {
  %1 = alloca i32, align 4
  %y.i.i = alloca i32, align 4
  %mycopy = alloca i64, align 8
  tail call void @llvm.dbg.value(metadata %struct.XDR* %xdrs, i64 0, metadata !306, metadata !360), !dbg !765
  tail call void @llvm.dbg.value(metadata i64* %lp, i64 0, metadata !307, metadata !360), !dbg !766
  %2 = load i64* %lp, align 8, !dbg !767, !tbaa !386
  %3 = trunc i64 %2 to i32, !dbg !767
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !311, metadata !360) #2, !dbg !768
  tail call void @llvm.dbg.declare(metadata i16* undef, metadata !312, metadata !360) #2, !dbg !770
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !312, metadata !741) #2, !dbg !770
  tail call void @llvm.dbg.value(metadata i8 15, i64 0, metadata !312, metadata !742) #2, !dbg !770
  %4 = bitcast i32* %1 to i8*, !dbg !771
  call void @llvm.lifetime.start(i64 4, i8* %4) #2, !dbg !771
  %5 = bitcast i32* %y.i.i to i8*, !dbg !771
  call void @llvm.lifetime.start(i64 4, i8* %5) #2, !dbg !771
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !299, metadata !360) #2, !dbg !771
  store i32 %3, i32* %1, align 4, !dbg !775, !tbaa !382
  tail call void @llvm.dbg.value(metadata i8* %4, i64 0, metadata !302, metadata !360) #2, !dbg !776
  tail call void @llvm.dbg.value(metadata i8* %5, i64 0, metadata !303, metadata !360) #2, !dbg !777
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !301, metadata !360) #2, !dbg !778
  br label %6, !dbg !779

; <label>:6                                       ; preds = %6, %0
  %indvars.iv.i.i = phi i64 [ 0, %0 ], [ %indvars.iv.next.i.i, %6 ], !dbg !775
  %7 = sub nsw i64 3, %indvars.iv.i.i, !dbg !780
  %8 = getelementptr inbounds i8* %4, i64 %7, !dbg !781
  %9 = load i8* %8, align 1, !dbg !781, !tbaa !505
  %10 = getelementptr inbounds i8* %5, i64 %indvars.iv.i.i, !dbg !782
  store i8 %9, i8* %10, align 1, !dbg !783, !tbaa !505
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1, !dbg !779
  %exitcond.i.i = icmp eq i64 %indvars.iv.next.i.i, 4, !dbg !779
  br i1 %exitcond.i.i, label %xdr_htonl.exit, label %6, !dbg !779

xdr_htonl.exit:                                   ; preds = %6
  tail call void @llvm.dbg.value(metadata i32* %y.i.i, i64 0, metadata !300, metadata !360) #2, !dbg !784
  %11 = load i32* %y.i.i, align 4, !dbg !785, !tbaa !382
  call void @llvm.lifetime.end(i64 4, i8* %4) #2, !dbg !786
  call void @llvm.lifetime.end(i64 4, i8* %5) #2, !dbg !786
  %12 = zext i32 %11 to i64, !dbg !787
  tail call void @llvm.dbg.value(metadata i64 %12, i64 0, metadata !308, metadata !360), !dbg !788
  store i64 %12, i64* %mycopy, align 8, !dbg !788, !tbaa !386
  tail call void @llvm.dbg.value(metadata i64* %mycopy, i64 0, metadata !307, metadata !360), !dbg !766
  %13 = bitcast i64* %mycopy to i8*, !dbg !789
  %14 = getelementptr inbounds %struct.XDR* %xdrs, i64 0, i32 3, !dbg !791
  %15 = bitcast i8** %14 to %struct.__sFILE**, !dbg !791
  %16 = load %struct.__sFILE** %15, align 8, !dbg !791, !tbaa !720
  %17 = call i64 @"\01_fwrite"(i8* %13, i64 4, i64 1, %struct.__sFILE* %16) #7, !dbg !792
  %18 = icmp eq i64 %17, 1, !dbg !793
  %. = zext i1 %18 to i32, !dbg !794
  ret i32 %., !dbg !795
}
