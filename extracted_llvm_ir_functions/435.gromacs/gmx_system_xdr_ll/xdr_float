define i32 @xdr_float(%struct.XDR* %xdrs, float* nocapture %fp) #0 {
  %tmp = alloca i64, align 8
  %tmp1 = alloca i64, align 8
  %1 = getelementptr inbounds %struct.XDR* %xdrs, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !2
  switch i32 %2, label %23 [
    i32 0, label %3
    i32 1, label %12
    i32 2, label %24
  ]

; <label>:3                                       ; preds = %0
  %4 = bitcast float* %fp to i32*
  %5 = load i32* %4, align 4, !tbaa !8
  %6 = sext i32 %5 to i64
  store i64 %6, i64* %tmp, align 8, !tbaa !9
  %7 = getelementptr inbounds %struct.XDR* %xdrs, i64 0, i32 1
  %8 = load %struct.xdr_ops** %7, align 8, !tbaa !11
  %9 = getelementptr inbounds %struct.xdr_ops* %8, i64 0, i32 1
  %10 = load i32 (%struct.XDR*, i64*)** %9, align 8, !tbaa !12
  %11 = call i32 %10(%struct.XDR* %xdrs, i64* %tmp) #6
  br label %24

; <label>:12                                      ; preds = %0
  %13 = getelementptr inbounds %struct.XDR* %xdrs, i64 0, i32 1
  %14 = load %struct.xdr_ops** %13, align 8, !tbaa !11
  %15 = getelementptr inbounds %struct.xdr_ops* %14, i64 0, i32 0
  %16 = load i32 (%struct.XDR*, i64*)** %15, align 8, !tbaa !14
  %17 = call i32 %16(%struct.XDR* %xdrs, i64* %tmp1) #6
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

; <label>:19                                      ; preds = %12
  %20 = load i64* %tmp1, align 8, !tbaa !9
  %21 = trunc i64 %20 to i32
  %22 = bitcast float* %fp to i32*
  store i32 %21, i32* %22, align 4, !tbaa !8
  br label %24

; <label>:23                                      ; preds = %12, %0
  br label %24

; <label>:24                                      ; preds = %0, %23, %19, %3
  %.0 = phi i32 [ 0, %23 ], [ 1, %19 ], [ %11, %3 ], [ 1, %0 ]
  ret i32 %.0
}
