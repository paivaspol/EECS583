define i32 @xdr_u_char(%struct.XDR* %xdrs, i8* nocapture %cp) #0 {
entry:
  %u = alloca i32, align 4
  call void @llvm.dbg.value(metadata !{%struct.XDR* %xdrs}, i64 0, metadata !144), !dbg !420
  call void @llvm.dbg.value(metadata !{i8* %cp}, i64 0, metadata !145), !dbg !420
  call void @llvm.dbg.declare(metadata !{i32* %u}, metadata !146), !dbg !421
  %0 = load i8* %cp, align 1, !dbg !422, !tbaa !347
  %conv = zext i8 %0 to i32, !dbg !422
  call void @llvm.dbg.value(metadata !{i32 %conv}, i64 0, metadata !146), !dbg !422
  store i32 %conv, i32* %u, align 4, !dbg !422, !tbaa !357
  %call = call i32 @xdr_u_int(%struct.XDR* %xdrs, i32* %u) #7, !dbg !423
  %tobool = icmp eq i32 %call, 0, !dbg !423
  br i1 %tobool, label %return, label %if.end, !dbg !423

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata !{i32* %u}, i64 0, metadata !146), !dbg !424
  %1 = load i32* %u, align 4, !dbg !424, !tbaa !357
  %conv1 = trunc i32 %1 to i8, !dbg !424
  store i8 %conv1, i8* %cp, align 1, !dbg !424, !tbaa !347
  br label %return, !dbg !425

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %entry ]
  ret i32 %retval.0, !dbg !425
}
