define i32 @xdr_double(%struct.XDR* %xdrs, double* nocapture %dp) #0 {
  %tmp = alloca [2 x i64], align 16
  %tmp2 = alloca [2 x i64], align 16
  tail call void @llvm.dbg.value(metadata %struct.XDR* %xdrs, i64 0, metadata !248, metadata !360), !dbg !656
  tail call void @llvm.dbg.value(metadata double* %dp, i64 0, metadata !249, metadata !360), !dbg !657
  %.b6 = load i1* @xdr_double.LSW, align 1
  br i1 %.b6, label %2, label %1, !dbg !658

; <label>:1                                       ; preds = %0
  tail call void @llvm.dbg.value(metadata double 0x3FEF9ADD3C0E56B8, i64 0, metadata !250, metadata !360), !dbg !659
  tail call void @llvm.dbg.value(metadata i8 -72, i64 0, metadata !253, metadata !360), !dbg !660
  store i1 true, i1* @xdr_double.LSW, align 1
  br label %2

; <label>:2                                       ; preds = %0, %1
  %3 = getelementptr inbounds %struct.XDR* %xdrs, i64 0, i32 0, !dbg !661
  %4 = load i32* %3, align 4, !dbg !661, !tbaa !366
  switch i32 %4, label %53 [
    i32 0, label %5
    i32 1, label %29
    i32 2, label %54
  ], !dbg !662

; <label>:5                                       ; preds = %2
  %6 = bitcast double* %dp to i32*, !dbg !663
  tail call void @llvm.dbg.value(metadata i32* %6, i64 0, metadata !254, metadata !360), !dbg !664
  tail call void @llvm.dbg.declare(metadata [2 x i64]* %tmp, metadata !259, metadata !360), !dbg !665
  %7 = getelementptr inbounds i32* %6, i64 1, !dbg !666
  %8 = load i32* %7, align 4, !dbg !666, !tbaa !382
  %9 = sext i32 %8 to i64, !dbg !666
  %10 = getelementptr inbounds [2 x i64]* %tmp, i64 0, i64 0, !dbg !667
  store i64 %9, i64* %10, align 16, !dbg !668, !tbaa !386
  %11 = load i32* %6, align 4, !dbg !669, !tbaa !382
  %12 = sext i32 %11 to i64, !dbg !669
  %13 = getelementptr inbounds [2 x i64]* %tmp, i64 0, i64 1, !dbg !670
  store i64 %12, i64* %13, align 8, !dbg !671, !tbaa !386
  %14 = getelementptr inbounds %struct.XDR* %xdrs, i64 0, i32 1, !dbg !672
  %15 = load %struct.xdr_ops** %14, align 8, !dbg !672, !tbaa !389
  %16 = getelementptr inbounds %struct.xdr_ops* %15, i64 0, i32 1, !dbg !672
  %17 = load i32 (%struct.XDR*, i64*)** %16, align 8, !dbg !672, !tbaa !390
  %18 = call i32 %17(%struct.XDR* %xdrs, i64* %10) #7, !dbg !672
  %19 = icmp eq i32 %18, 0, !dbg !672
  br i1 %19, label %26, label %20, !dbg !673

; <label>:20                                      ; preds = %5
  %21 = load %struct.xdr_ops** %14, align 8, !dbg !674, !tbaa !389
  %22 = getelementptr inbounds %struct.xdr_ops* %21, i64 0, i32 1, !dbg !674
  %23 = load i32 (%struct.XDR*, i64*)** %22, align 8, !dbg !674, !tbaa !390
  %24 = call i32 %23(%struct.XDR* %xdrs, i64* %13) #7, !dbg !674
  %25 = icmp ne i32 %24, 0, !dbg !673
  br label %26

; <label>:26                                      ; preds = %5, %20
  %27 = phi i1 [ false, %5 ], [ %25, %20 ]
  %28 = zext i1 %27 to i32, !dbg !673
  br label %54, !dbg !675

; <label>:29                                      ; preds = %2
  %30 = bitcast double* %dp to i32*, !dbg !676
  tail call void @llvm.dbg.value(metadata i32* %30, i64 0, metadata !263, metadata !360), !dbg !677
  tail call void @llvm.dbg.declare(metadata [2 x i64]* %tmp2, metadata !267, metadata !360), !dbg !678
  %31 = getelementptr inbounds %struct.XDR* %xdrs, i64 0, i32 1, !dbg !679
  %32 = load %struct.xdr_ops** %31, align 8, !dbg !679, !tbaa !389
  %33 = getelementptr inbounds %struct.xdr_ops* %32, i64 0, i32 0, !dbg !679
  %34 = load i32 (%struct.XDR*, i64*)** %33, align 8, !dbg !679, !tbaa !395
  %35 = getelementptr inbounds [2 x i64]* %tmp2, i64 0, i64 1, !dbg !679
  %36 = call i32 %34(%struct.XDR* %xdrs, i64* %35) #7, !dbg !679
  %37 = icmp eq i32 %36, 0, !dbg !679
  br i1 %37, label %53, label %38, !dbg !681

; <label>:38                                      ; preds = %29
  %39 = load %struct.xdr_ops** %31, align 8, !dbg !682, !tbaa !389
  %40 = getelementptr inbounds %struct.xdr_ops* %39, i64 0, i32 0, !dbg !682
  %41 = load i32 (%struct.XDR*, i64*)** %40, align 8, !dbg !682, !tbaa !395
  %.b = load i1* @xdr_double.LSW, align 1
  %not..b = xor i1 %.b, true
  %42 = sext i1 %not..b to i64, !dbg !682
  %43 = getelementptr inbounds [2 x i64]* %tmp2, i64 0, i64 %42, !dbg !682
  %44 = call i32 %41(%struct.XDR* %xdrs, i64* %43) #7, !dbg !682
  %45 = icmp eq i32 %44, 0, !dbg !682
  br i1 %45, label %53, label %46, !dbg !683

; <label>:46                                      ; preds = %38
  %47 = getelementptr inbounds [2 x i64]* %tmp2, i64 0, i64 0, !dbg !684
  %48 = load i64* %47, align 16, !dbg !684, !tbaa !386
  %49 = trunc i64 %48 to i32, !dbg !684
  store i32 %49, i32* %30, align 4, !dbg !686, !tbaa !382
  %50 = load i64* %35, align 8, !dbg !687, !tbaa !386
  %51 = trunc i64 %50 to i32, !dbg !687
  %52 = getelementptr inbounds i32* %30, i64 1, !dbg !688
  store i32 %51, i32* %52, align 4, !dbg !689, !tbaa !382
  br label %54, !dbg !690

; <label>:53                                      ; preds = %38, %29, %2
  br label %54, !dbg !691

; <label>:54                                      ; preds = %2, %53, %46, %26
  %.0 = phi i32 [ 0, %53 ], [ 1, %46 ], [ %28, %26 ], [ 1, %2 ]
  ret i32 %.0, !dbg !692
}
