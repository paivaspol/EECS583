define i32 @xdr_u_short(%struct.XDR* %xdrs, i16* nocapture %usp) #0 {
entry:
  %l = alloca i64, align 8
  call void @llvm.dbg.value(metadata !{%struct.XDR* %xdrs}, i64 0, metadata !128), !dbg !403
  call void @llvm.dbg.value(metadata !{i16* %usp}, i64 0, metadata !129), !dbg !403
  call void @llvm.dbg.declare(metadata !{i64* %l}, metadata !130), !dbg !404
  %x_op = getelementptr inbounds %struct.XDR* %xdrs, i64 0, i32 0, !dbg !405
  %0 = load i32* %x_op, align 4, !dbg !405, !tbaa !346
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %return
  ], !dbg !405

sw.bb:                                            ; preds = %entry
  %1 = load i16* %usp, align 2, !dbg !406, !tbaa !396
  %conv = zext i16 %1 to i64, !dbg !406
  call void @llvm.dbg.value(metadata !{i64 %conv}, i64 0, metadata !130), !dbg !406
  store i64 %conv, i64* %l, align 8, !dbg !406, !tbaa !358
  %x_ops = getelementptr inbounds %struct.XDR* %xdrs, i64 0, i32 1, !dbg !408
  %2 = load %struct.xdr_ops** %x_ops, align 8, !dbg !408, !tbaa !360
  %x_putlong = getelementptr inbounds %struct.xdr_ops* %2, i64 0, i32 1, !dbg !408
  %3 = load i32 (%struct.XDR*, i64*)** %x_putlong, align 8, !dbg !408, !tbaa !360
  %call = call i32 %3(%struct.XDR* %xdrs, i64* %l) #6, !dbg !408
  br label %return, !dbg !408

sw.bb1:                                           ; preds = %entry
  %x_ops2 = getelementptr inbounds %struct.XDR* %xdrs, i64 0, i32 1, !dbg !409
  %4 = load %struct.xdr_ops** %x_ops2, align 8, !dbg !409, !tbaa !360
  %x_getlong = getelementptr inbounds %struct.xdr_ops* %4, i64 0, i32 0, !dbg !409
  %5 = load i32 (%struct.XDR*, i64*)** %x_getlong, align 8, !dbg !409, !tbaa !360
  %call3 = call i32 %5(%struct.XDR* %xdrs, i64* %l) #6, !dbg !409
  %tobool = icmp eq i32 %call3, 0, !dbg !409
  br i1 %tobool, label %return, label %if.end, !dbg !409

if.end:                                           ; preds = %sw.bb1
  call void @llvm.dbg.value(metadata !{i64* %l}, i64 0, metadata !130), !dbg !410
  %6 = load i64* %l, align 8, !dbg !410, !tbaa !358
  %conv4 = trunc i64 %6 to i16, !dbg !410
  store i16 %conv4, i16* %usp, align 2, !dbg !410, !tbaa !396
  br label %return, !dbg !411

sw.epilog:                                        ; preds = %entry
  br label %return, !dbg !412

return:                                           ; preds = %entry, %sw.bb1, %sw.epilog, %if.end, %sw.bb
  %retval.0 = phi i32 [ 0, %sw.epilog ], [ 1, %if.end ], [ %call, %sw.bb ], [ 0, %sw.bb1 ], [ 1, %entry ]
  ret i32 %retval.0, !dbg !413
}
