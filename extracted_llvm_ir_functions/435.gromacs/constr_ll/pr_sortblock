define internal fastcc void @pr_sortblock(%struct._IO_FILE* %fp, i8* %title, i32 %nsb, %struct.t_sortblock* nocapture %sb) #0 {
entry:
  %tobool = icmp eq %struct._IO_FILE* %fp, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([4 x i8]* @.str60, i64 0, i64 0), i8* %title) #6
  %cmp24 = icmp sgt i32 %nsb, 0
  br i1 %cmp24, label %for.body, label %if.end

for.body:                                         ; preds = %if.then, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.then ]
  %arrayidx1 = getelementptr inbounds %struct.t_sortblock* %sb, i64 %indvars.iv, i32 0, i64 0
  %0 = load i32* %arrayidx1, align 4, !tbaa !0
  %arrayidx5 = getelementptr inbounds %struct.t_sortblock* %sb, i64 %indvars.iv, i32 0, i64 1
  %1 = load i32* %arrayidx5, align 4, !tbaa !0
  %arrayidx9 = getelementptr inbounds %struct.t_sortblock* %sb, i64 %indvars.iv, i32 0, i64 2
  %2 = load i32* %arrayidx9, align 4, !tbaa !0
  %blocknr = getelementptr inbounds %struct.t_sortblock* %sb, i64 %indvars.iv, i32 1
  %3 = load i32* %blocknr, align 4, !tbaa !0
  %4 = trunc i64 %indvars.iv to i32
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([44 x i8]* @.str61, i64 0, i64 0), i32 %4, i32 %0, i32 %1, i32 %2, i32 %3) #6
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nsb
  br i1 %exitcond, label %if.end, label %for.body

if.end:                                           ; preds = %if.then, %for.body, %entry
  ret void
}
