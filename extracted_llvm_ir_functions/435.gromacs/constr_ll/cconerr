define void @cconerr(float* nocapture %max, float* nocapture %rms, i32* nocapture %imax, [3 x float]* nocapture readonly %xprime, i32 %ncons, i32* nocapture readonly %bla1, i32* nocapture readonly %bla2, float* nocapture readonly %bllen) #4 {
  %1 = icmp sgt i32 %ncons, 0
  br i1 %1, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %0
  %2 = add i32 %ncons, -1
  br label %3

; <label>:3                                       ; preds = %3, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %3 ]
  %im.05 = phi i32 [ 0, %.lr.ph ], [ %im.1, %3 ]
  %ma.04 = phi float [ 0.000000e+00, %.lr.ph ], [ %ma.1, %3 ]
  %ms.03 = phi float [ 0.000000e+00, %.lr.ph ], [ %37, %3 ]
  %4 = getelementptr inbounds i32* %bla1, i64 %indvars.iv
  %5 = load i32* %4, align 4, !tbaa !24
  %6 = getelementptr inbounds i32* %bla2, i64 %indvars.iv
  %7 = load i32* %6, align 4, !tbaa !24
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds [3 x float]* %xprime, i64 %8, i64 0
  %10 = load float* %9, align 4, !tbaa !14
  %11 = sext i32 %7 to i64
  %12 = getelementptr inbounds [3 x float]* %xprime, i64 %11, i64 0
  %13 = load float* %12, align 4, !tbaa !14
  %14 = fsub float %10, %13
  %15 = getelementptr inbounds [3 x float]* %xprime, i64 %8, i64 1
  %16 = load float* %15, align 4, !tbaa !14
  %17 = getelementptr inbounds [3 x float]* %xprime, i64 %11, i64 1
  %18 = load float* %17, align 4, !tbaa !14
  %19 = fsub float %16, %18
  %20 = getelementptr inbounds [3 x float]* %xprime, i64 %8, i64 2
  %21 = load float* %20, align 4, !tbaa !14
  %22 = getelementptr inbounds [3 x float]* %xprime, i64 %11, i64 2
  %23 = load float* %22, align 4, !tbaa !14
  %24 = fsub float %21, %23
  %25 = fmul float %14, %14
  %26 = fmul float %19, %19
  %27 = fadd float %25, %26
  %28 = fmul float %24, %24
  %29 = fadd float %27, %28
  %sqrtf1 = tail call float @sqrtf(float %29) #6
  %30 = getelementptr inbounds float* %bllen, i64 %indvars.iv
  %31 = load float* %30, align 4, !tbaa !14
  %32 = fdiv float %sqrtf1, %31
  %33 = fadd float %32, -1.000000e+00
  %fabsf = tail call float @fabsf(float %33) #6
  %34 = fcmp ogt float %fabsf, %ma.04
  %ma.1 = select i1 %34, float %fabsf, float %ma.04
  %35 = trunc i64 %indvars.iv to i32
  %im.1 = select i1 %34, i32 %35, i32 %im.05
  %36 = fmul float %fabsf, %fabsf
  %37 = fadd float %ms.03, %36
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i32 %35, %2
  br i1 %exitcond, label %._crit_edge, label %3

._crit_edge:                                      ; preds = %3, %0
  %im.0.lcssa = phi i32 [ 0, %0 ], [ %im.1, %3 ]
  %ma.0.lcssa = phi float [ 0.000000e+00, %0 ], [ %ma.1, %3 ]
  %ms.0.lcssa = phi float [ 0.000000e+00, %0 ], [ %37, %3 ]
  store float %ma.0.lcssa, float* %max, align 4, !tbaa !14
  %38 = sitofp i32 %ncons to float
  %39 = fdiv float %ms.0.lcssa, %38
  %sqrtf = tail call float @sqrtf(float %39) #6
  store float %sqrtf, float* %rms, align 4, !tbaa !14
  store i32 %im.0.lcssa, i32* %imax, align 4, !tbaa !24
  ret void
}
