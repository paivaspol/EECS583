define void @check_index(i8* %gname, i32 %n, i32* nocapture readonly %index, i8* %traj, i32 %natoms) #3 {
  %1 = icmp sgt i32 %n, 0
  br i1 %1, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %0
  %2 = icmp ne i8* %gname, null
  %3 = select i1 %2, i8* %gname, i8* getelementptr inbounds ([6 x i8]* @.str1, i64 0, i64 0)
  %4 = icmp ne i8* %traj, null
  %5 = select i1 %4, i8* %traj, i8* getelementptr inbounds ([15 x i8]* @.str2, i64 0, i64 0)
  %6 = add i32 %n, -1
  br label %7

; <label>:7                                       ; preds = %._crit_edge2, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %.pre, %._crit_edge2 ]
  %8 = getelementptr inbounds i32* %index, i64 %indvars.iv
  %9 = load i32* %8, align 4, !tbaa !14
  %10 = icmp slt i32 %9, %natoms
  %.pre = add nuw nsw i64 %indvars.iv, 1
  br i1 %10, label %._crit_edge2, label %11

; <label>:11                                      ; preds = %7
  %12 = add nsw i32 %9, 1
  %13 = trunc i64 %.pre to i32
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([76 x i8]* @.str, i64 0, i64 0), i8* %3, i32 %13, i32 %12, i8* %5, i32 %natoms) #7
  br label %._crit_edge2

._crit_edge2:                                     ; preds = %7, %11
  %lftr.wideiv = trunc i64 %indvars.iv to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %6
  br i1 %exitcond, label %._crit_edge, label %7

._crit_edge:                                      ; preds = %._crit_edge2, %0
  ret void
}
