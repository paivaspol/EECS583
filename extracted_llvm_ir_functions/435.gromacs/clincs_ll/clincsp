define void @clincsp([3 x float]* nocapture readonly %x, [3 x float]* nocapture readonly %f, [3 x float]* nocapture %fp, i32 %ncons, i32* nocapture readonly %bla1, i32* nocapture readonly %bla2, i32* nocapture readonly %blnr, i32* nocapture readonly %blbnb, float* nocapture readonly %blc, float* nocapture readonly %blcc, float* nocapture %blm, i32 %nrec, float* nocapture readonly %invmass, [3 x float]* nocapture %r, float* nocapture %rhs1, float* nocapture %rhs2, float* nocapture %sol) #3 {
  %1 = icmp sgt i32 %ncons, 0
  br i1 %1, label %.lr.ph28, label %.preheader3

.lr.ph28:                                         ; preds = %0
  %2 = add i32 %ncons, -1
  br label %4

.preheader4:                                      ; preds = %4
  br i1 %1, label %.lr.ph25, label %.preheader3

.lr.ph25:                                         ; preds = %.preheader4
  %3 = add i32 %ncons, -1
  %.pre = load i32* %blnr, align 4, !tbaa !14
  br label %44

; <label>:4                                       ; preds = %4, %.lr.ph28
  %indvars.iv42 = phi i64 [ 0, %.lr.ph28 ], [ %indvars.iv.next43, %4 ]
  %5 = getelementptr inbounds i32* %bla1, i64 %indvars.iv42
  %6 = load i32* %5, align 4, !tbaa !14
  %7 = getelementptr inbounds i32* %bla2, i64 %indvars.iv42
  %8 = load i32* %7, align 4, !tbaa !14
  %9 = sext i32 %6 to i64
  %10 = getelementptr inbounds [3 x float]* %x, i64 %9, i64 0
  %11 = load float* %10, align 4, !tbaa !15
  %12 = sext i32 %8 to i64
  %13 = getelementptr inbounds [3 x float]* %x, i64 %12, i64 0
  %14 = load float* %13, align 4, !tbaa !15
  %15 = fsub float %11, %14
  %16 = getelementptr inbounds [3 x float]* %x, i64 %9, i64 1
  %17 = load float* %16, align 4, !tbaa !15
  %18 = getelementptr inbounds [3 x float]* %x, i64 %12, i64 1
  %19 = load float* %18, align 4, !tbaa !15
  %20 = fsub float %17, %19
  %21 = getelementptr inbounds [3 x float]* %x, i64 %9, i64 2
  %22 = load float* %21, align 4, !tbaa !15
  %23 = getelementptr inbounds [3 x float]* %x, i64 %12, i64 2
  %24 = load float* %23, align 4, !tbaa !15
  %25 = fsub float %22, %24
  %26 = fmul float %15, %15
  %27 = fmul float %20, %20
  %28 = fadd float %26, %27
  %29 = fmul float %25, %25
  %30 = fadd float %28, %29
  %31 = fpext float %30 to double
  %32 = tail call double @sqrt(double %31) #6
  %33 = fdiv double 1.000000e+00, %32
  %34 = fptrunc double %33 to float
  %35 = fmul float %15, %34
  %36 = getelementptr inbounds [3 x float]* %r, i64 %indvars.iv42, i64 0
  store float %35, float* %36, align 4, !tbaa !15
  %37 = fmul float %20, %34
  %38 = getelementptr inbounds [3 x float]* %r, i64 %indvars.iv42, i64 1
  store float %37, float* %38, align 4, !tbaa !15
  %39 = fmul float %25, %34
  %40 = getelementptr inbounds [3 x float]* %r, i64 %indvars.iv42, i64 2
  store float %39, float* %40, align 4, !tbaa !15
  %indvars.iv.next43 = add nuw nsw i64 %indvars.iv42, 1
  %lftr.wideiv44 = trunc i64 %indvars.iv42 to i32
  %exitcond45 = icmp eq i32 %lftr.wideiv44, %2
  br i1 %exitcond45, label %.preheader4, label %4

.preheader3:                                      ; preds = %._crit_edge22, %0, %.preheader4
  %41 = icmp sgt i32 %nrec, 0
  br i1 %41, label %.preheader2.lr.ph, label %.preheader

.preheader2.lr.ph:                                ; preds = %.preheader3
  %42 = add i32 %ncons, -1
  %43 = add i32 %nrec, -1
  br label %.preheader2

; <label>:44                                      ; preds = %._crit_edge22, %.lr.ph25
  %45 = phi i32 [ %.pre, %.lr.ph25 ], [ %57, %._crit_edge22 ]
  %indvars.iv38 = phi i64 [ 0, %.lr.ph25 ], [ %indvars.iv.next39, %._crit_edge22 ]
  %46 = getelementptr inbounds [3 x float]* %r, i64 %indvars.iv38, i64 0
  %47 = load float* %46, align 4, !tbaa !15
  %48 = getelementptr inbounds [3 x float]* %r, i64 %indvars.iv38, i64 1
  %49 = load float* %48, align 4, !tbaa !15
  %50 = getelementptr inbounds [3 x float]* %r, i64 %indvars.iv38, i64 2
  %51 = load float* %50, align 4, !tbaa !15
  %52 = getelementptr inbounds i32* %bla1, i64 %indvars.iv38
  %53 = load i32* %52, align 4, !tbaa !14
  %54 = getelementptr inbounds i32* %bla2, i64 %indvars.iv38
  %55 = load i32* %54, align 4, !tbaa !14
  %indvars.iv.next39 = add nuw nsw i64 %indvars.iv38, 1
  %56 = getelementptr inbounds i32* %blnr, i64 %indvars.iv.next39
  %57 = load i32* %56, align 4, !tbaa !14
  %58 = icmp slt i32 %45, %57
  br i1 %58, label %.lr.ph21, label %._crit_edge22

.lr.ph21:                                         ; preds = %44
  %59 = sext i32 %45 to i64
  %60 = sext i32 %57 to i64
  br label %61

; <label>:61                                      ; preds = %.lr.ph21, %61
  %indvars.iv36 = phi i64 [ %59, %.lr.ph21 ], [ %indvars.iv.next37, %61 ]
  %62 = getelementptr inbounds i32* %blbnb, i64 %indvars.iv36
  %63 = load i32* %62, align 4, !tbaa !14
  %64 = getelementptr inbounds float* %blcc, i64 %indvars.iv36
  %65 = load float* %64, align 4, !tbaa !15
  %66 = sext i32 %63 to i64
  %67 = getelementptr inbounds [3 x float]* %r, i64 %66, i64 0
  %68 = load float* %67, align 4, !tbaa !15
  %69 = fmul float %47, %68
  %70 = getelementptr inbounds [3 x float]* %r, i64 %66, i64 1
  %71 = load float* %70, align 4, !tbaa !15
  %72 = fmul float %49, %71
  %73 = fadd float %69, %72
  %74 = getelementptr inbounds [3 x float]* %r, i64 %66, i64 2
  %75 = load float* %74, align 4, !tbaa !15
  %76 = fmul float %51, %75
  %77 = fadd float %73, %76
  %78 = fmul float %65, %77
  %79 = getelementptr inbounds float* %blm, i64 %indvars.iv36
  store float %78, float* %79, align 4, !tbaa !15
  %indvars.iv.next37 = add nsw i64 %indvars.iv36, 1
  %80 = icmp slt i64 %indvars.iv.next37, %60
  br i1 %80, label %61, label %._crit_edge22

._crit_edge22:                                    ; preds = %61, %44
  %81 = getelementptr inbounds float* %blc, i64 %indvars.iv38
  %82 = load float* %81, align 4, !tbaa !15
  %83 = sext i32 %53 to i64
  %84 = getelementptr inbounds [3 x float]* %f, i64 %83, i64 0
  %85 = load float* %84, align 4, !tbaa !15
  %86 = sext i32 %55 to i64
  %87 = getelementptr inbounds [3 x float]* %f, i64 %86, i64 0
  %88 = load float* %87, align 4, !tbaa !15
  %89 = fsub float %85, %88
  %90 = fmul float %47, %89
  %91 = getelementptr inbounds [3 x float]* %f, i64 %83, i64 1
  %92 = load float* %91, align 4, !tbaa !15
  %93 = getelementptr inbounds [3 x float]* %f, i64 %86, i64 1
  %94 = load float* %93, align 4, !tbaa !15
  %95 = fsub float %92, %94
  %96 = fmul float %49, %95
  %97 = fadd float %90, %96
  %98 = getelementptr inbounds [3 x float]* %f, i64 %83, i64 2
  %99 = load float* %98, align 4, !tbaa !15
  %100 = getelementptr inbounds [3 x float]* %f, i64 %86, i64 2
  %101 = load float* %100, align 4, !tbaa !15
  %102 = fsub float %99, %101
  %103 = fmul float %51, %102
  %104 = fadd float %97, %103
  %105 = fmul float %82, %104
  %106 = getelementptr inbounds float* %rhs1, i64 %indvars.iv38
  store float %105, float* %106, align 4, !tbaa !15
  %107 = getelementptr inbounds float* %sol, i64 %indvars.iv38
  store float %105, float* %107, align 4, !tbaa !15
  %lftr.wideiv40 = trunc i64 %indvars.iv38 to i32
  %exitcond41 = icmp eq i32 %lftr.wideiv40, %3
  br i1 %exitcond41, label %.preheader3, label %44

.preheader2:                                      ; preds = %._crit_edge15, %.preheader2.lr.ph
  %.018 = phi float* [ %rhs1, %.preheader2.lr.ph ], [ %.0117, %._crit_edge15 ]
  %.0117 = phi float* [ %rhs2, %.preheader2.lr.ph ], [ %.018, %._crit_edge15 ]
  %rec.016 = phi i32 [ 0, %.preheader2.lr.ph ], [ %131, %._crit_edge15 ]
  br i1 %1, label %.lr.ph14, label %._crit_edge15

.lr.ph14:                                         ; preds = %.preheader2
  %.pre46 = load i32* %blnr, align 4, !tbaa !14
  br label %109

.preheader:                                       ; preds = %._crit_edge15, %.preheader3
  br i1 %1, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader
  %108 = add i32 %ncons, -1
  br label %132

; <label>:109                                     ; preds = %._crit_edge11, %.lr.ph14
  %110 = phi i32 [ %.pre46, %.lr.ph14 ], [ %112, %._crit_edge11 ]
  %indvars.iv31 = phi i64 [ 0, %.lr.ph14 ], [ %indvars.iv.next32, %._crit_edge11 ]
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1
  %111 = getelementptr inbounds i32* %blnr, i64 %indvars.iv.next32
  %112 = load i32* %111, align 4, !tbaa !14
  %113 = icmp slt i32 %110, %112
  br i1 %113, label %.lr.ph10, label %._crit_edge11

.lr.ph10:                                         ; preds = %109
  %114 = sext i32 %110 to i64
  %115 = sext i32 %112 to i64
  br label %116

; <label>:116                                     ; preds = %.lr.ph10, %116
  %indvars.iv29 = phi i64 [ %114, %.lr.ph10 ], [ %indvars.iv.next30, %116 ]
  %mvb.07 = phi float [ 0.000000e+00, %.lr.ph10 ], [ %125, %116 ]
  %117 = getelementptr inbounds i32* %blbnb, i64 %indvars.iv29
  %118 = load i32* %117, align 4, !tbaa !14
  %119 = getelementptr inbounds float* %blm, i64 %indvars.iv29
  %120 = load float* %119, align 4, !tbaa !15
  %121 = sext i32 %118 to i64
  %122 = getelementptr inbounds float* %.018, i64 %121
  %123 = load float* %122, align 4, !tbaa !15
  %124 = fmul float %120, %123
  %125 = fadd float %mvb.07, %124
  %indvars.iv.next30 = add nsw i64 %indvars.iv29, 1
  %126 = icmp slt i64 %indvars.iv.next30, %115
  br i1 %126, label %116, label %._crit_edge11

._crit_edge11:                                    ; preds = %116, %109
  %mvb.0.lcssa = phi float [ 0.000000e+00, %109 ], [ %125, %116 ]
  %127 = getelementptr inbounds float* %.0117, i64 %indvars.iv31
  store float %mvb.0.lcssa, float* %127, align 4, !tbaa !15
  %128 = getelementptr inbounds float* %sol, i64 %indvars.iv31
  %129 = load float* %128, align 4, !tbaa !15
  %130 = fadd float %mvb.0.lcssa, %129
  store float %130, float* %128, align 4, !tbaa !15
  %lftr.wideiv33 = trunc i64 %indvars.iv31 to i32
  %exitcond34 = icmp eq i32 %lftr.wideiv33, %42
  br i1 %exitcond34, label %._crit_edge15, label %109

._crit_edge15:                                    ; preds = %._crit_edge11, %.preheader2
  %131 = add nuw nsw i32 %rec.016, 1
  %exitcond35 = icmp eq i32 %rec.016, %43
  br i1 %exitcond35, label %.preheader, label %.preheader2

; <label>:132                                     ; preds = %132, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %132 ]
  %133 = getelementptr inbounds i32* %bla1, i64 %indvars.iv
  %134 = load i32* %133, align 4, !tbaa !14
  %135 = getelementptr inbounds i32* %bla2, i64 %indvars.iv
  %136 = load i32* %135, align 4, !tbaa !14
  %137 = getelementptr inbounds float* %blc, i64 %indvars.iv
  %138 = load float* %137, align 4, !tbaa !15
  %139 = getelementptr inbounds float* %sol, i64 %indvars.iv
  %140 = load float* %139, align 4, !tbaa !15
  %141 = fmul float %138, %140
  %142 = sext i32 %134 to i64
  %143 = getelementptr inbounds float* %invmass, i64 %142
  %144 = load float* %143, align 4, !tbaa !15
  %145 = sext i32 %136 to i64
  %146 = getelementptr inbounds float* %invmass, i64 %145
  %147 = load float* %146, align 4, !tbaa !15
  %148 = getelementptr inbounds [3 x float]* %r, i64 %indvars.iv, i64 0
  %149 = load float* %148, align 4, !tbaa !15
  %150 = fmul float %141, %149
  %151 = getelementptr inbounds [3 x float]* %r, i64 %indvars.iv, i64 1
  %152 = load float* %151, align 4, !tbaa !15
  %153 = fmul float %141, %152
  %154 = getelementptr inbounds [3 x float]* %r, i64 %indvars.iv, i64 2
  %155 = load float* %154, align 4, !tbaa !15
  %156 = fmul float %141, %155
  %157 = getelementptr inbounds [3 x float]* %fp, i64 %142, i64 0
  %158 = load float* %157, align 4, !tbaa !15
  %159 = fmul float %144, %150
  %160 = fsub float %158, %159
  %161 = getelementptr inbounds [3 x float]* %fp, i64 %142, i64 1
  %162 = load float* %161, align 4, !tbaa !15
  %163 = fmul float %144, %153
  %164 = fsub float %162, %163
  %165 = getelementptr inbounds [3 x float]* %fp, i64 %142, i64 2
  %166 = load float* %165, align 4, !tbaa !15
  %167 = fmul float %144, %156
  %168 = fsub float %166, %167
  %169 = getelementptr inbounds [3 x float]* %fp, i64 %145, i64 0
  %170 = load float* %169, align 4, !tbaa !15
  %171 = fmul float %147, %150
  %172 = fadd float %171, %170
  %173 = getelementptr inbounds [3 x float]* %fp, i64 %145, i64 1
  %174 = load float* %173, align 4, !tbaa !15
  %175 = fmul float %147, %153
  %176 = fadd float %175, %174
  %177 = getelementptr inbounds [3 x float]* %fp, i64 %145, i64 2
  %178 = load float* %177, align 4, !tbaa !15
  %179 = fmul float %147, %156
  %180 = fadd float %179, %178
  store float %160, float* %157, align 4, !tbaa !15
  store float %164, float* %161, align 4, !tbaa !15
  store float %168, float* %165, align 4, !tbaa !15
  store float %172, float* %169, align 4, !tbaa !15
  store float %176, float* %173, align 4, !tbaa !15
  store float %180, float* %177, align 4, !tbaa !15
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %108
  br i1 %exitcond, label %._crit_edge, label %132

._crit_edge:                                      ; preds = %132, %.preheader
  ret void
}
