define i32 @read_next_v(i32 %status, float* nocapture %t, i32 %natoms, [3 x float]* %v, [3 x float]* nocapture %box) #1 {
entry:
  %fr = alloca %struct.t_trxframe, align 8
  %0 = bitcast %struct.t_trxframe* %fr to i8*
  call void @llvm.lifetime.start(i64 176, i8* %0) #4
  call void @clear_trxframe(%struct.t_trxframe* %fr, i32 1) #7
  %flags = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 0
  store i32 8, i32* %flags, align 8, !tbaa !0
  %natoms1 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 2
  store i32 %natoms, i32* %natoms1, align 8, !tbaa !0
  %1 = load float* %t, align 4, !tbaa !3
  %time = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 11
  store float %1, float* %time, align 4, !tbaa !3
  %v2 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 21
  store [3 x float]* %v, [3 x float]** %v2, align 8, !tbaa !4
  %call = call i32 @read_next_frame(i32 %status, %struct.t_trxframe* %fr) #7
  %2 = load float* %time, align 4, !tbaa !3
  store float %2, float* %t, align 4, !tbaa !3
  %bV.i = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 20
  %3 = load i32* %bV.i, align 8, !tbaa !0
  %tobool.i = icmp eq i32 %3, 0
  br i1 %tobool.i, label %for.cond.preheader.i, label %clear_v.exit

for.cond.preheader.i:                             ; preds = %entry
  %4 = load i32* %natoms1, align 8, !tbaa !0
  %cmp5.i = icmp sgt i32 %4, 0
  br i1 %cmp5.i, label %for.body.lr.ph.i, label %clear_v.exit

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %5 = load [3 x float]** %v2, align 8, !tbaa !4
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %arraydecay.i = getelementptr inbounds [3 x float]* %5, i64 %indvars.iv.i, i64 0
  store float 0.000000e+00, float* %arraydecay.i, align 4, !tbaa !3
  %arrayidx1.i.i = getelementptr inbounds [3 x float]* %5, i64 %indvars.iv.i, i64 1
  store float 0.000000e+00, float* %arrayidx1.i.i, align 4, !tbaa !3
  %arrayidx2.i.i = getelementptr inbounds [3 x float]* %5, i64 %indvars.iv.i, i64 2
  store float 0.000000e+00, float* %arrayidx2.i.i, align 4, !tbaa !3
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %4
  br i1 %exitcond, label %clear_v.exit, label %for.body.i

clear_v.exit:                                     ; preds = %for.body.i, %entry, %for.cond.preheader.i
  %arraydecay.i6 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 25, i64 0, i64 0
  %arraydecay2.i = getelementptr inbounds [3 x float]* %box, i64 0, i64 0
  %6 = load float* %arraydecay.i6, align 4, !tbaa !3
  store float %6, float* %arraydecay2.i, align 4, !tbaa !3
  %arrayidx2.i.i7 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 25, i64 0, i64 1
  %7 = load float* %arrayidx2.i.i7, align 4, !tbaa !3
  %arrayidx3.i.i = getelementptr inbounds [3 x float]* %box, i64 0, i64 1
  store float %7, float* %arrayidx3.i.i, align 4, !tbaa !3
  %arrayidx4.i.i = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 25, i64 0, i64 2
  %8 = load float* %arrayidx4.i.i, align 4, !tbaa !3
  %arrayidx5.i.i = getelementptr inbounds [3 x float]* %box, i64 0, i64 2
  store float %8, float* %arrayidx5.i.i, align 4, !tbaa !3
  %arraydecay4.i = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 25, i64 1, i64 0
  %arraydecay6.i = getelementptr inbounds [3 x float]* %box, i64 1, i64 0
  %9 = load float* %arraydecay4.i, align 4, !tbaa !3
  store float %9, float* %arraydecay6.i, align 4, !tbaa !3
  %arrayidx2.i19.i = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 25, i64 1, i64 1
  %10 = load float* %arrayidx2.i19.i, align 4, !tbaa !3
  %arrayidx3.i20.i = getelementptr inbounds [3 x float]* %box, i64 1, i64 1
  store float %10, float* %arrayidx3.i20.i, align 4, !tbaa !3
  %arrayidx4.i21.i = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 25, i64 1, i64 2
  %11 = load float* %arrayidx4.i21.i, align 4, !tbaa !3
  %arrayidx5.i22.i = getelementptr inbounds [3 x float]* %box, i64 1, i64 2
  store float %11, float* %arrayidx5.i22.i, align 4, !tbaa !3
  %arraydecay8.i = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 25, i64 2, i64 0
  %arraydecay10.i = getelementptr inbounds [3 x float]* %box, i64 2, i64 0
  %12 = load float* %arraydecay8.i, align 4, !tbaa !3
  store float %12, float* %arraydecay10.i, align 4, !tbaa !3
  %arrayidx2.i15.i = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 25, i64 2, i64 1
  %13 = load float* %arrayidx2.i15.i, align 4, !tbaa !3
  %arrayidx3.i16.i = getelementptr inbounds [3 x float]* %box, i64 2, i64 1
  store float %13, float* %arrayidx3.i16.i, align 4, !tbaa !3
  %arrayidx4.i17.i = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 25, i64 2, i64 2
  %14 = load float* %arrayidx4.i17.i, align 4, !tbaa !3
  %arrayidx5.i18.i = getelementptr inbounds [3 x float]* %box, i64 2, i64 2
  store float %14, float* %arrayidx5.i18.i, align 4, !tbaa !3
  call void @llvm.lifetime.end(i64 176, i8* %0) #4
  ret i32 %call
}
