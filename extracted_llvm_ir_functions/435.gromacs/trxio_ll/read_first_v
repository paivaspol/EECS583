define i32 @read_first_v(i32* nocapture %status, i8* %fn, float* nocapture %t, [3 x float]** nocapture %v, [3 x float]* nocapture %box) #5 {
  %fr = alloca %struct.t_trxframe, align 8
  %1 = bitcast %struct.t_trxframe* %fr to i8*
  call void @llvm.lifetime.start(i64 176, i8* %1) #7
  %2 = call i32 @read_first_frame(i32* %status, i8* %fn, %struct.t_trxframe* %fr, i32 8) #13
  %3 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 11
  %4 = bitcast float* %3 to i32*
  %5 = load i32* %4, align 4, !tbaa !38
  %6 = bitcast float* %t to i32*
  store i32 %5, i32* %6, align 4, !tbaa !14
  %7 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 20
  %8 = load i32* %7, align 8, !tbaa !28
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 2
  %11 = load i32* %10, align 8, !tbaa !32
  %12 = icmp sgt i32 %11, 0
  %or.cond = and i1 %9, %12
  br i1 %or.cond, label %.lr.ph.i, label %clear_v.exit

.lr.ph.i:                                         ; preds = %0
  %13 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 21
  %14 = load [3 x float]** %13, align 8, !tbaa !43
  %15 = sext i32 %11 to i64
  %16 = add nsw i64 %15, -1
  br label %17

; <label>:17                                      ; preds = %17, %.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %.lr.ph.i ], [ %indvars.iv.next.i, %17 ]
  %18 = getelementptr inbounds [3 x float]* %14, i64 %indvars.iv.i, i64 0
  store float 0.000000e+00, float* %18, align 4, !tbaa !14
  %19 = getelementptr inbounds [3 x float]* %14, i64 %indvars.iv.i, i64 1
  store float 0.000000e+00, float* %19, align 4, !tbaa !14
  %20 = getelementptr inbounds [3 x float]* %14, i64 %indvars.iv.i, i64 2
  store float 0.000000e+00, float* %20, align 4, !tbaa !14
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond = icmp eq i64 %indvars.iv.i, %16
  br i1 %exitcond, label %clear_v.exit, label %17

clear_v.exit:                                     ; preds = %17, %0
  %21 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 21
  %22 = bitcast [3 x float]** %21 to i64*
  %23 = load i64* %22, align 8, !tbaa !43
  %24 = bitcast [3 x float]** %v to i64*
  store i64 %23, i64* %24, align 8, !tbaa !54
  %25 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 25, i64 0
  %26 = bitcast [3 x float]* %25 to <4 x i32>*
  %27 = load <4 x i32>* %26, align 4, !tbaa !14
  %28 = bitcast [3 x float]* %box to <4 x i32>*
  store <4 x i32> %27, <4 x i32>* %28, align 4, !tbaa !14
  %29 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 25, i64 1, i64 1
  %30 = getelementptr inbounds [3 x float]* %box, i64 1, i64 1
  %31 = bitcast float* %29 to <4 x i32>*
  %32 = load <4 x i32>* %31, align 4, !tbaa !14
  %33 = bitcast float* %30 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %33, align 4, !tbaa !14
  %34 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 25, i64 2, i64 2
  %35 = bitcast float* %34 to i32*
  %36 = load i32* %35, align 4, !tbaa !14
  %37 = getelementptr inbounds [3 x float]* %box, i64 2, i64 2
  %38 = bitcast float* %37 to i32*
  store i32 %36, i32* %38, align 4, !tbaa !14
  call void @llvm.lifetime.end(i64 176, i8* %1) #7
  ret i32 %11
}
