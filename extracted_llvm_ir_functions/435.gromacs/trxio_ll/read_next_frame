define i32 @read_next_frame(i32 %status, %struct.t_trxframe* %fr) #5 {
  %sh.i = alloca %struct.t_trnheader, align 4
  %bOK.i = alloca i32, align 4
  %bOK = alloca i32, align 4
  %1 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 11
  %2 = load float* %1, align 4, !tbaa !38
  %3 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 1
  %4 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 6
  %5 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 8
  %6 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 10
  %7 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 12
  %8 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 14
  %9 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 16
  %10 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 18
  %11 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 20
  %12 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 22
  %13 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 24
  %14 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 4
  %15 = bitcast float* %14 to i32*
  %16 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 5
  %17 = bitcast float* %16 to i32*
  %18 = bitcast float* %1 to i32*
  %19 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 0
  %20 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 3
  %21 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 25, i64 0
  %22 = bitcast i32* %bOK.i to i8*
  %23 = bitcast %struct.t_trnheader* %sh.i to i8*
  %24 = getelementptr inbounds %struct.t_trnheader* %sh.i, i64 0, i32 10
  %25 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 2
  %26 = getelementptr inbounds %struct.t_trnheader* %sh.i, i64 0, i32 11
  %27 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 9
  %28 = getelementptr inbounds %struct.t_trnheader* %sh.i, i64 0, i32 13
  %29 = bitcast float* %28 to i32*
  %30 = getelementptr inbounds %struct.t_trnheader* %sh.i, i64 0, i32 14
  %31 = bitcast float* %30 to i32*
  %32 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 13
  %33 = bitcast float* %32 to i32*
  %34 = getelementptr inbounds %struct.t_trnheader* %sh.i, i64 0, i32 2
  %.phi.trans.insert.i = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 23
  %35 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 19
  %36 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 21
  %37 = bitcast [3 x float]** %.phi.trans.insert.i to i8**
  %38 = getelementptr inbounds %struct.t_trnheader* %sh.i, i64 0, i32 9
  %39 = bitcast [3 x float]** %36 to i8**
  %40 = getelementptr inbounds %struct.t_trnheader* %sh.i, i64 0, i32 8
  %41 = bitcast [3 x float]** %35 to i8**
  %42 = getelementptr inbounds %struct.t_trnheader* %sh.i, i64 0, i32 7
  %43 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 17
  %44 = bitcast float %2 to i32
  br label %.critedge2

.critedge2:                                       ; preds = %.thread..critedge2_crit_edge, %0
  %45 = phi i32 [ %44, %0 ], [ %.pre, %.thread..critedge2_crit_edge ]
  %bRet.0 = phi i32 [ 0, %0 ], [ %bRet.1, %.thread..critedge2_crit_edge ]
  store i32 0, i32* %3, align 4, !tbaa !19
  store i32 0, i32* %4, align 4, !tbaa !21
  store i32 0, i32* %5, align 4, !tbaa !22
  store i32 0, i32* %6, align 4, !tbaa !23
  store i32 0, i32* %7, align 4, !tbaa !24
  store i32 0, i32* %8, align 4, !tbaa !25
  store i32 0, i32* %9, align 4, !tbaa !26
  store i32 0, i32* %10, align 4, !tbaa !27
  store i32 0, i32* %11, align 4, !tbaa !28
  store i32 0, i32* %12, align 4, !tbaa !29
  store i32 0, i32* %13, align 4, !tbaa !30
  %46 = load i32* %15, align 4, !tbaa !34
  store i32 %46, i32* %17, align 4, !tbaa !35
  store i32 %45, i32* %15, align 4, !tbaa !34
  %47 = call i32 @gmx_fio_getftp(i32 %status) #10
  switch i32 %47, label %129 [
    i32 5, label %48
    i32 4, label %48
    i32 39, label %48
    i32 14, label %108
    i32 7, label %114
    i32 6, label %119
    i32 15, label %123
    i32 13, label %126
  ]

; <label>:48                                      ; preds = %.critedge2, %.critedge2, %.critedge2
  call void @llvm.lifetime.start(i64 4, i8* %22)
  call void @llvm.lifetime.start(i64 60, i8* %23) #7
  %49 = call i32 @fread_trnheader(i32 %status, %struct.t_trnheader* %sh.i, i32* %bOK.i) #10
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %104, label %51

; <label>:51                                      ; preds = %48
  %52 = load i32* %24, align 4, !tbaa !45
  store i32 %52, i32* %25, align 4, !tbaa !32
  store i32 1, i32* %5, align 4, !tbaa !22
  %53 = load i32* %26, align 4, !tbaa !47
  store i32 %53, i32* %27, align 4, !tbaa !37
  store i32 1, i32* %6, align 4, !tbaa !23
  %54 = load i32* %29, align 4, !tbaa !48
  store i32 %54, i32* %18, align 4, !tbaa !38
  store i32 1, i32* %7, align 4, !tbaa !24
  %55 = load i32* %31, align 4, !tbaa !49
  store i32 %55, i32* %33, align 4, !tbaa !39
  %56 = load i32* %34, align 4, !tbaa !50
  %57 = icmp sgt i32 %56, 0
  %58 = zext i1 %57 to i32
  store i32 %58, i32* %13, align 4, !tbaa !30
  %59 = load i32* %19, align 4, !tbaa !31
  %60 = and i32 %59, 3
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %71, label %62

; <label>:62                                      ; preds = %51
  %63 = load [3 x float]** %35, align 8, !tbaa !42
  %64 = icmp eq [3 x float]* %63, null
  br i1 %64, label %65, label %67

; <label>:65                                      ; preds = %62
  %66 = call i8* @save_calloc(i8* getelementptr inbounds ([6 x i8]* @.str13, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str3, i64 0, i64 0), i32 360, i32 %52, i32 12) #10
  store i8* %66, i8** %41, align 8, !tbaa !42
  %.pre.pre.i = load i32* %19, align 4, !tbaa !31
  br label %67

; <label>:67                                      ; preds = %65, %62
  %.pre.i = phi i32 [ %.pre.pre.i, %65 ], [ %59, %62 ]
  %68 = load i32* %42, align 4, !tbaa !51
  %69 = icmp sgt i32 %68, 0
  %70 = zext i1 %69 to i32
  store i32 %70, i32* %10, align 4, !tbaa !27
  br label %71

; <label>:71                                      ; preds = %67, %51
  %72 = phi i32 [ %59, %51 ], [ %.pre.i, %67 ]
  %73 = and i32 %72, 12
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %85, label %75

; <label>:75                                      ; preds = %71
  %76 = load [3 x float]** %36, align 8, !tbaa !43
  %77 = icmp eq [3 x float]* %76, null
  br i1 %77, label %78, label %81

; <label>:78                                      ; preds = %75
  %79 = load i32* %24, align 4, !tbaa !45
  %80 = call i8* @save_calloc(i8* getelementptr inbounds ([6 x i8]* @.str14, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str3, i64 0, i64 0), i32 365, i32 %79, i32 12) #10
  store i8* %80, i8** %39, align 8, !tbaa !43
  %.pre1.pre.i = load i32* %19, align 4, !tbaa !31
  br label %81

; <label>:81                                      ; preds = %78, %75
  %.pre1.i = phi i32 [ %.pre1.pre.i, %78 ], [ %72, %75 ]
  %82 = load i32* %40, align 4, !tbaa !52
  %83 = icmp sgt i32 %82, 0
  %84 = zext i1 %83 to i32
  store i32 %84, i32* %11, align 4, !tbaa !28
  br label %85

; <label>:85                                      ; preds = %81, %71
  %86 = phi i32 [ %72, %71 ], [ %.pre1.i, %81 ]
  %87 = and i32 %86, 48
  %88 = icmp eq i32 %87, 0
  %.pre2.i = load [3 x float]** %.phi.trans.insert.i, align 8, !tbaa !44
  br i1 %88, label %._crit_edge.i, label %89

; <label>:89                                      ; preds = %85
  %90 = icmp eq [3 x float]* %.pre2.i, null
  br i1 %90, label %91, label %95

; <label>:91                                      ; preds = %89
  %92 = load i32* %24, align 4, !tbaa !45
  %93 = call i8* @save_calloc(i8* getelementptr inbounds ([6 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str3, i64 0, i64 0), i32 370, i32 %92, i32 12) #10
  store i8* %93, i8** %37, align 8, !tbaa !44
  %94 = bitcast i8* %93 to [3 x float]*
  br label %95

; <label>:95                                      ; preds = %91, %89
  %96 = phi [3 x float]* [ %94, %91 ], [ %.pre2.i, %89 ]
  %97 = load i32* %38, align 4, !tbaa !53
  store i32 %97, i32* %12, align 4, !tbaa !29
  br label %._crit_edge.i

._crit_edge.i:                                    ; preds = %95, %85
  %98 = phi [3 x float]* [ %96, %95 ], [ %.pre2.i, %85 ]
  %99 = load [3 x float]** %35, align 8, !tbaa !42
  %100 = load [3 x float]** %36, align 8, !tbaa !43
  %101 = call i32 @fread_htrn(i32 %status, %struct.t_trnheader* %sh.i, [3 x float]* %21, [3 x float]* %99, [3 x float]* %100, [3 x float]* %98) #10
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %gmx_next_frame.exit

; <label>:103                                     ; preds = %._crit_edge.i
  store i32 2, i32* %3, align 4, !tbaa !19
  br label %gmx_next_frame.exit

; <label>:104                                     ; preds = %48
  %105 = load i32* %bOK.i, align 4, !tbaa !18
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %gmx_next_frame.exit

; <label>:107                                     ; preds = %104
  store i32 1, i32* %3, align 4, !tbaa !19
  br label %gmx_next_frame.exit

gmx_next_frame.exit:                              ; preds = %._crit_edge.i, %103, %104, %107
  %bRet.0.i = phi i32 [ 0, %103 ], [ 0, %104 ], [ 0, %107 ], [ 1, %._crit_edge.i ]
  call void @llvm.lifetime.end(i64 60, i8* %23) #7
  call void @llvm.lifetime.end(i64 4, i8* %22)
  br label %132

; <label>:108                                     ; preds = %.critedge2
  %109 = call %struct.__sFILE* @gmx_fio_getfp(i32 %status) #10
  %110 = call i32 @read_g96_conf(%struct.__sFILE* %109, i8* null, %struct.t_trxframe* %fr) #10
  %111 = load i32* %25, align 4, !tbaa !32
  %112 = icmp sgt i32 %111, 0
  %113 = zext i1 %112 to i32
  br label %132

; <label>:114                                     ; preds = %.critedge2
  %115 = call %struct.__sFILE* @gmx_fio_getfp(i32 %status) #10
  %116 = load i32* %25, align 4, !tbaa !32
  %117 = load [3 x float]** %35, align 8, !tbaa !42
  %118 = call fastcc i32 @xyz_next_x(%struct.__sFILE* %115, float* %1, i32 %116, [3 x float]* %117, [3 x float]* %21) #13
  store i32 %118, i32* %6, align 4, !tbaa !23
  store i32 %118, i32* %10, align 4, !tbaa !27
  store i32 %118, i32* %13, align 4, !tbaa !30
  br label %132

; <label>:119                                     ; preds = %.critedge2
  %120 = load i32* %25, align 4, !tbaa !32
  %121 = load [3 x float]** %35, align 8, !tbaa !42
  %122 = call i32 @read_next_xtc(i32 %status, i32 %120, i32* %27, float* %1, [3 x float]* %21, [3 x float]* %121, float* %43, i32* %bOK) #10
  store i32 %122, i32* %9, align 4, !tbaa !26
  store i32 %122, i32* %5, align 4, !tbaa !22
  store i32 %122, i32* %6, align 4, !tbaa !23
  store i32 %122, i32* %10, align 4, !tbaa !27
  store i32 %122, i32* %13, align 4, !tbaa !30
  br label %132

; <label>:123                                     ; preds = %.critedge2
  %124 = call %struct.__sFILE* @gmx_fio_getfp(i32 %status) #10
  %125 = call fastcc i32 @pdb_next_x(%struct.__sFILE* %124, %struct.t_trxframe* %fr) #13
  br label %132

; <label>:126                                     ; preds = %.critedge2
  %127 = call %struct.__sFILE* @gmx_fio_getfp(i32 %status) #10
  %128 = call i32 @gro_next_x_or_v(%struct.__sFILE* %127, %struct.t_trxframe* %fr) #10
  br label %132

; <label>:129                                     ; preds = %.critedge2
  %130 = call i32 @gmx_fio_getftp(i32 %status) #10
  %131 = call i8* @ftp2ext(i32 %130) #10
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([49 x i8]* @.str11, i64 0, i64 0), i8* %131, i32 %status) #10
  br label %132

; <label>:132                                     ; preds = %129, %126, %123, %119, %114, %108, %gmx_next_frame.exit
  %bRet.1 = phi i32 [ %bRet.0, %129 ], [ %128, %126 ], [ %125, %123 ], [ %122, %119 ], [ %118, %114 ], [ %113, %108 ], [ %bRet.0.i, %gmx_next_frame.exit ]
  %133 = icmp eq i32 %bRet.1, 0
  br i1 %133, label %.thread9.thread, label %134

; <label>:134                                     ; preds = %132
  %135 = load i32* %19, align 4, !tbaa !31
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %141, label %138

; <label>:138                                     ; preds = %134
  %139 = load i32* %10, align 4, !tbaa !27
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %.thread, label %141

; <label>:141                                     ; preds = %138, %134
  %142 = and i32 %135, 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %147, label %144

; <label>:144                                     ; preds = %141
  %145 = load i32* %11, align 4, !tbaa !28
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %.thread, label %147

; <label>:147                                     ; preds = %144, %141
  %148 = and i32 %135, 32
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %.thread7, label %150

; <label>:150                                     ; preds = %147
  %151 = load i32* %12, align 4, !tbaa !29
  %152 = icmp eq i32 %151, 0
  %153 = zext i1 %152 to i32
  br i1 %152, label %.thread, label %.thread7

.thread7:                                         ; preds = %147, %150
  %154 = phi i32 [ %153, %150 ], [ 0, %147 ]
  %155 = load float* %1, align 4, !tbaa !38
  %156 = load float* %20, align 4, !tbaa !33
  %157 = load float* %14, align 4, !tbaa !34
  %158 = load float* %16, align 4, !tbaa !35
  %159 = call i32 @check_times2(float %155, float %156, float %157, float %158) #10
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %166, label %161

; <label>:161                                     ; preds = %.thread7
  %162 = load i32* %19, align 4, !tbaa !31
  %163 = and i32 %162, 64
  %164 = icmp ne i32 %163, 0
  %165 = icmp slt i32 %159, 0
  %or.cond = and i1 %165, %164
  br i1 %or.cond, label %166, label %171

; <label>:166                                     ; preds = %161, %.thread7
  %167 = load float* %1, align 4, !tbaa !38
  %168 = load float* %20, align 4, !tbaa !33
  %169 = load float* %14, align 4, !tbaa !34
  %170 = load float* %16, align 4, !tbaa !35
  call fastcc void @printcount2(float %167, float %168, float %169, float %170) #13
  call void @init_pbc([3 x float]* %21) #10
  br label %.thread

; <label>:171                                     ; preds = %161
  %172 = icmp sgt i32 %159, 0
  br i1 %172, label %.thread9.thread, label %173

; <label>:173                                     ; preds = %171
  %174 = load float* %1, align 4, !tbaa !38
  %175 = load float* %20, align 4, !tbaa !33
  %176 = load float* %14, align 4, !tbaa !34
  %177 = load float* %16, align 4, !tbaa !35
  call fastcc void @printcount2(float %174, float %175, float %176, float %177) #13
  br label %.thread

.thread:                                          ; preds = %138, %144, %166, %173, %150
  %bMissingData.1 = phi i32 [ %153, %150 ], [ %154, %166 ], [ %154, %173 ], [ 1, %144 ], [ 1, %138 ]
  %bSkip.1 = phi i32 [ 0, %150 ], [ 0, %166 ], [ 1, %173 ], [ 0, %144 ], [ 0, %138 ]
  %178 = or i32 %bSkip.1, %bMissingData.1
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %printincomp.exit, label %.thread..critedge2_crit_edge

.thread..critedge2_crit_edge:                     ; preds = %.thread
  %.pre = load i32* %18, align 4, !tbaa !38
  br label %.critedge2

.thread9.thread:                                  ; preds = %132, %171
  call fastcc void @printlast(float %2) #13
  %180 = load i32* %3, align 4, !tbaa !19
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %printincomp.exit, label %182

; <label>:182                                     ; preds = %.thread9.thread
  %183 = and i32 %180, 1
  %184 = icmp eq i32 %183, 0
  %185 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !54
  %186 = load i32* @__frame, align 4, !tbaa !18
  %187 = add nsw i32 %186, 1
  %188 = load float* %1, align 4, !tbaa !38
  %189 = fpext float %188 to double
  br i1 %184, label %192, label %190

; <label>:190                                     ; preds = %182
  %191 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %185, i8* getelementptr inbounds ([43 x i8]* @.str29, i64 0, i64 0), i32 %187, double %189) #10
  br label %printincomp.exit

; <label>:192                                     ; preds = %182
  %193 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %185, i8* getelementptr inbounds ([42 x i8]* @.str30, i64 0, i64 0), i32 %187, double %189) #10
  br label %printincomp.exit

printincomp.exit:                                 ; preds = %.thread, %192, %190, %.thread9.thread
  %bRet.21214 = phi i32 [ 0, %.thread9.thread ], [ 0, %190 ], [ 0, %192 ], [ %bRet.1, %.thread ]
  ret i32 %bRet.21214
}
