define internal fastcc i32 @pdb_next_x(%struct._IO_FILE* %status, %struct.t_trxframe* %fr) #1 {
entry:
  %atoms = alloca %struct.t_atoms, align 8
  %model_nr = alloca i32, align 4
  %title = alloca [4096 x i8], align 16
  %dbl = alloca double, align 8
  %0 = bitcast %struct.t_atoms* %atoms to i8*
  call void @llvm.lifetime.start(i64 1280, i8* %0) #4
  %1 = getelementptr inbounds [4096 x i8]* %title, i64 0, i64 0
  call void @llvm.lifetime.start(i64 4096, i8* %1) #4
  %natoms = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 2
  %2 = load i32* %natoms, align 4, !tbaa !0
  %nr = getelementptr inbounds %struct.t_atoms* %atoms, i64 0, i32 0
  store i32 %2, i32* %nr, align 8, !tbaa !0
  %atom = getelementptr inbounds %struct.t_atoms* %atoms, i64 0, i32 1
  store %struct.t_atom* null, %struct.t_atom** %atom, align 8, !tbaa !4
  %pdbinfo = getelementptr inbounds %struct.t_atoms* %atoms, i64 0, i32 11
  store %struct.t_pdbinfo* null, %struct.t_pdbinfo** %pdbinfo, align 8, !tbaa !4
  store i32 -12345, i32* %model_nr, align 4, !tbaa !0
  %x = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 19
  %3 = load [3 x float]** %x, align 8, !tbaa !4
  %box = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 25
  %arraydecay1 = getelementptr inbounds [3 x [3 x float]]* %box, i64 0, i64 0
  %call = call i32 @read_pdbfile(%struct._IO_FILE* %status, i8* %1, i32* %model_nr, %struct.t_atoms* %atoms, [3 x float]* %3, [3 x float]* %arraydecay1, i32 1) #6
  %4 = load i32* @__frame, align 4, !tbaa !0
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load %struct._IO_FILE** @stderr, align 8, !tbaa !4
  %6 = load i32* %natoms, align 4, !tbaa !0
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([17 x i8]* @.str46, i64 0, i64 0), i8* %1, i32 %6) #6
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %bPrec = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 16
  store i32 1, i32* %bPrec, align 4, !tbaa !0
  %prec = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 17
  store float 1.000000e+04, float* %prec, align 4, !tbaa !3
  %bX = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 18
  store i32 1, i32* %bX, align 4, !tbaa !0
  %arrayidx7 = getelementptr inbounds [3 x [3 x float]]* %box, i64 0, i64 0, i64 0
  %7 = load float* %arrayidx7, align 4, !tbaa !3
  %fabsf = call float @fabsf(float %7) #8
  %8 = fpext float %fabsf to double
  %cmp9 = fcmp olt double %8, 1.200000e-38
  %conv10 = zext i1 %cmp9 to i32
  %bBox = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 24
  store i32 %conv10, i32* %bBox, align 4, !tbaa !0
  %9 = load i32* %model_nr, align 4, !tbaa !0
  %cmp11 = icmp eq i32 %9, -12345
  br i1 %cmp11, label %if.end14, label %if.then13

if.then13:                                        ; preds = %if.end
  %bStep = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 8
  store i32 1, i32* %bStep, align 4, !tbaa !0
  %step = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 9
  store i32 %9, i32* %step, align 4, !tbaa !0
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then13
  %call16 = call i8* @strstr(i8* %1, i8* getelementptr inbounds ([5 x i8]* @.str47, i64 0, i64 0)) #9
  %tobool = icmp eq i8* %call16, null
  %bTime = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 10
  br i1 %tobool, label %if.else, label %if.then17

if.then17:                                        ; preds = %if.end14
  store i32 1, i32* %bTime, align 4, !tbaa !0
  %add.ptr = getelementptr inbounds i8* %call16, i64 4
  %call18 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %add.ptr, i8* getelementptr inbounds ([4 x i8]* @.str35, i64 0, i64 0), double* %dbl) #6
  %10 = load double* %dbl, align 8, !tbaa !5
  %conv19 = fptrunc double %10 to float
  %time20 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 11
  store float %conv19, float* %time20, align 4, !tbaa !3
  br label %if.end33

if.else:                                          ; preds = %if.end14
  store i32 0, i32* %bTime, align 4, !tbaa !0
  %bStep22 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 8
  %11 = load i32* %bStep22, align 4, !tbaa !0
  %tobool23 = icmp eq i32 %11, 0
  br i1 %tobool23, label %if.else28, label %if.then24

if.then24:                                        ; preds = %if.else
  %step25 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 9
  %12 = load i32* %step25, align 4, !tbaa !0
  %conv26 = sitofp i32 %12 to float
  %time27 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 11
  store float %conv26, float* %time27, align 4, !tbaa !3
  br label %if.end33

if.else28:                                        ; preds = %if.else
  %13 = load i32* @__frame, align 4, !tbaa !0
  %conv30 = sitofp i32 %13 to float
  %time31 = getelementptr inbounds %struct.t_trxframe* %fr, i64 0, i32 11
  store float %conv30, float* %time31, align 4, !tbaa !3
  br label %if.end33

if.end33:                                         ; preds = %if.then24, %if.else28, %if.then17
  %cmp34 = icmp eq i32 %call, 0
  br i1 %cmp34, label %cleanup, label %if.else37

if.else37:                                        ; preds = %if.end33
  %14 = load i32* %natoms, align 4, !tbaa !0
  %cmp39 = icmp eq i32 %call, %14
  br i1 %cmp39, label %cleanup, label %if.then41

if.then41:                                        ; preds = %if.else37
  %15 = load i32* @__frame, align 4, !tbaa !0
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([52 x i8]* @.str48, i64 0, i64 0), i32 %15, i32 %call, i32 %14) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then41, %if.else37, %if.end33
  %retval.0 = phi i32 [ 0, %if.end33 ], [ 1, %if.else37 ], [ 1, %if.then41 ]
  call void @llvm.lifetime.end(i64 4096, i8* %1) #4
  call void @llvm.lifetime.end(i64 1280, i8* %0) #4
  ret i32 %retval.0
}
