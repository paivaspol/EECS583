define internal fastcc void @update_tensor(float* nocapture readonly %x, float %m0, [3 x float]* nocapture %I) #4 {
  tail call void @llvm.dbg.value(metadata float* %x, i64 0, metadata !607, metadata !691), !dbg !1128
  tail call void @llvm.dbg.value(metadata float %m0, i64 0, metadata !608, metadata !691), !dbg !1129
  tail call void @llvm.dbg.value(metadata [3 x float]* %I, i64 0, metadata !609, metadata !691), !dbg !1130
  %1 = load float* %x, align 4, !dbg !1131, !tbaa !819
  %2 = getelementptr inbounds float* %x, i64 1, !dbg !1132
  %3 = load float* %2, align 4, !dbg !1132, !tbaa !819
  %4 = fmul float %1, %3, !dbg !1133
  %5 = fmul float %4, %m0, !dbg !1134
  tail call void @llvm.dbg.value(metadata float %5, i64 0, metadata !610, metadata !691), !dbg !1135
  %6 = getelementptr inbounds float* %x, i64 2, !dbg !1136
  %7 = load float* %6, align 4, !dbg !1136, !tbaa !819
  %8 = fmul float %1, %7, !dbg !1137
  %9 = fmul float %8, %m0, !dbg !1138
  tail call void @llvm.dbg.value(metadata float %9, i64 0, metadata !611, metadata !691), !dbg !1139
  %10 = fmul float %3, %7, !dbg !1140
  %11 = fmul float %10, %m0, !dbg !1141
  tail call void @llvm.dbg.value(metadata float %11, i64 0, metadata !612, metadata !691), !dbg !1142
  %12 = fmul float %1, %1, !dbg !1143
  %13 = fmul float %12, %m0, !dbg !1144
  %14 = getelementptr inbounds [3 x float]* %I, i64 0, i64 0, !dbg !1145
  %15 = load float* %14, align 4, !dbg !1146, !tbaa !819
  %16 = fadd float %13, %15, !dbg !1146
  store float %16, float* %14, align 4, !dbg !1146, !tbaa !819
  %17 = load float* %2, align 4, !dbg !1147, !tbaa !819
  %18 = fmul float %17, %17, !dbg !1148
  %19 = fmul float %18, %m0, !dbg !1149
  %20 = getelementptr inbounds [3 x float]* %I, i64 1, i64 1, !dbg !1150
  %21 = load float* %20, align 4, !dbg !1151, !tbaa !819
  %22 = fadd float %21, %19, !dbg !1151
  store float %22, float* %20, align 4, !dbg !1151, !tbaa !819
  %23 = load float* %6, align 4, !dbg !1152, !tbaa !819
  %24 = fmul float %23, %23, !dbg !1153
  %25 = fmul float %24, %m0, !dbg !1154
  %26 = getelementptr inbounds [3 x float]* %I, i64 0, i64 1, !dbg !1155
  %27 = load float* %26, align 4, !dbg !1156, !tbaa !819
  %28 = fadd float %5, %27, !dbg !1156
  store float %28, float* %26, align 4, !dbg !1156, !tbaa !819
  %29 = getelementptr inbounds [3 x float]* %I, i64 1, i64 0, !dbg !1157
  %30 = load float* %29, align 4, !dbg !1158, !tbaa !819
  %31 = fadd float %5, %30, !dbg !1158
  store float %31, float* %29, align 4, !dbg !1158, !tbaa !819
  %32 = getelementptr inbounds [3 x float]* %I, i64 0, i64 2, !dbg !1159
  %33 = load float* %32, align 4, !dbg !1160, !tbaa !819
  %34 = fadd float %9, %33, !dbg !1160
  store float %34, float* %32, align 4, !dbg !1160, !tbaa !819
  %35 = getelementptr inbounds [3 x float]* %I, i64 1, i64 2, !dbg !1161
  %36 = bitcast float* %35 to <4 x float>*, !dbg !1162
  %37 = load <4 x float>* %36, align 4, !dbg !1162, !tbaa !819
  %38 = insertelement <4 x float> undef, float %11, i32 0, !dbg !1162
  %39 = insertelement <4 x float> %38, float %9, i32 1, !dbg !1162
  %40 = insertelement <4 x float> %39, float %11, i32 2, !dbg !1162
  %41 = insertelement <4 x float> %40, float %25, i32 3, !dbg !1162
  %42 = fadd <4 x float> %41, %37, !dbg !1162
  %43 = bitcast float* %35 to <4 x float>*, !dbg !1162
  store <4 x float> %42, <4 x float>* %43, align 4, !dbg !1162, !tbaa !819
  ret void, !dbg !1163
}
