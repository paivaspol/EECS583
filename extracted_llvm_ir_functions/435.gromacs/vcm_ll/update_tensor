define internal fastcc void @update_tensor(float* nocapture readonly %x, float %m0, [3 x float]* nocapture %I) #4 {
  %1 = load float* %x, align 4, !tbaa !14
  %2 = getelementptr inbounds float* %x, i64 1
  %3 = load float* %2, align 4, !tbaa !14
  %4 = fmul float %1, %3
  %5 = fmul float %4, %m0
  %6 = getelementptr inbounds float* %x, i64 2
  %7 = load float* %6, align 4, !tbaa !14
  %8 = fmul float %1, %7
  %9 = fmul float %8, %m0
  %10 = fmul float %3, %7
  %11 = fmul float %10, %m0
  %12 = fmul float %1, %1
  %13 = fmul float %12, %m0
  %14 = getelementptr inbounds [3 x float]* %I, i64 0, i64 0
  %15 = load float* %14, align 4, !tbaa !14
  %16 = fadd float %13, %15
  store float %16, float* %14, align 4, !tbaa !14
  %17 = load float* %2, align 4, !tbaa !14
  %18 = fmul float %17, %17
  %19 = fmul float %18, %m0
  %20 = getelementptr inbounds [3 x float]* %I, i64 1, i64 1
  %21 = load float* %20, align 4, !tbaa !14
  %22 = fadd float %21, %19
  store float %22, float* %20, align 4, !tbaa !14
  %23 = load float* %6, align 4, !tbaa !14
  %24 = fmul float %23, %23
  %25 = fmul float %24, %m0
  %26 = getelementptr inbounds [3 x float]* %I, i64 0, i64 1
  %27 = load float* %26, align 4, !tbaa !14
  %28 = fadd float %5, %27
  store float %28, float* %26, align 4, !tbaa !14
  %29 = getelementptr inbounds [3 x float]* %I, i64 1, i64 0
  %30 = load float* %29, align 4, !tbaa !14
  %31 = fadd float %5, %30
  store float %31, float* %29, align 4, !tbaa !14
  %32 = getelementptr inbounds [3 x float]* %I, i64 0, i64 2
  %33 = load float* %32, align 4, !tbaa !14
  %34 = fadd float %9, %33
  store float %34, float* %32, align 4, !tbaa !14
  %35 = getelementptr inbounds [3 x float]* %I, i64 1, i64 2
  %36 = bitcast float* %35 to <4 x float>*
  %37 = load <4 x float>* %36, align 4, !tbaa !14
  %38 = insertelement <4 x float> undef, float %11, i32 0
  %39 = insertelement <4 x float> %38, float %9, i32 1
  %40 = insertelement <4 x float> %39, float %11, i32 2
  %41 = insertelement <4 x float> %40, float %25, i32 3
  %42 = fadd <4 x float> %41, %37
  %43 = bitcast float* %35 to <4 x float>*
  store <4 x float> %42, <4 x float>* %43, align 4, !tbaa !14
  ret void
}
