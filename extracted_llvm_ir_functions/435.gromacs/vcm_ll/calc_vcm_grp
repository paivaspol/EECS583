define void @calc_vcm_grp(%struct.__sFILE* nocapture readnone %fp, i32 %start, i32 %homenr, float* nocapture readonly %mass, [3 x float]* nocapture readonly %x, [3 x float]* nocapture readonly %v, %struct.t_vcm* nocapture readonly %vcm) #4 {
  %j0 = alloca [3 x float], align 4
  tail call void @llvm.dbg.value(metadata %struct.__sFILE* %fp, i64 0, metadata !531, metadata !691), !dbg !984
  tail call void @llvm.dbg.value(metadata i32 %start, i64 0, metadata !532, metadata !691), !dbg !985
  tail call void @llvm.dbg.value(metadata i32 %homenr, i64 0, metadata !533, metadata !691), !dbg !986
  tail call void @llvm.dbg.value(metadata float* %mass, i64 0, metadata !534, metadata !691), !dbg !987
  tail call void @llvm.dbg.value(metadata [3 x float]* %x, i64 0, metadata !535, metadata !691), !dbg !988
  tail call void @llvm.dbg.value(metadata [3 x float]* %v, i64 0, metadata !536, metadata !691), !dbg !989
  tail call void @llvm.dbg.value(metadata %struct.t_vcm* %vcm, i64 0, metadata !537, metadata !691), !dbg !990
  tail call void @llvm.dbg.declare(metadata [3 x float]* %j0, metadata !548, metadata !691), !dbg !991
  %1 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 1, !dbg !992
  %2 = load i32* %1, align 4, !dbg !992, !tbaa !871
  %3 = icmp eq i32 %2, 2, !dbg !994
  br i1 %3, label %.loopexit, label %.preheader1, !dbg !995

.preheader1:                                      ; preds = %0
  %4 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 0, !dbg !996
  %5 = load i32* %4, align 4, !dbg !996, !tbaa !882
  %6 = icmp sgt i32 %5, 0, !dbg !1000
  br i1 %6, label %.lr.ph6, label %.preheader, !dbg !1001

.lr.ph6:                                          ; preds = %.preheader1
  %7 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 8, !dbg !1002
  %8 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 2, !dbg !1004
  %9 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 5, !dbg !1005
  %10 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 4, !dbg !1008
  %11 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 6, !dbg !1009
  %12 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 7, !dbg !1010
  br label %26, !dbg !1001

.preheader:                                       ; preds = %52, %.preheader1
  %13 = icmp sgt i32 %homenr, 0, !dbg !1011
  br i1 %13, label %.lr.ph, label %.loopexit, !dbg !1014

.lr.ph:                                           ; preds = %.preheader
  %14 = add nsw i32 %homenr, %start, !dbg !1015
  %15 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 10, !dbg !1016
  %16 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 8, !dbg !1018
  %17 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 2, !dbg !1019
  %18 = getelementptr inbounds [3 x float]* %j0, i64 0, i64 0, !dbg !1022
  %19 = getelementptr inbounds [3 x float]* %j0, i64 0, i64 1, !dbg !1025
  %20 = getelementptr inbounds [3 x float]* %j0, i64 0, i64 2, !dbg !1027
  %21 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 5, !dbg !1028
  %22 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 4, !dbg !1032
  %23 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 7, !dbg !1033
  %24 = sext i32 %start to i64
  %25 = sext i32 %14 to i64, !dbg !1014
  br label %56, !dbg !1014

; <label>:26                                      ; preds = %._crit_edge, %.lr.ph6
  %27 = phi i32 [ %5, %.lr.ph6 ], [ %53, %._crit_edge ]
  %28 = phi i32 [ %2, %.lr.ph6 ], [ %.pre, %._crit_edge ], !dbg !1002
  %indvars.iv12 = phi i64 [ 0, %.lr.ph6 ], [ %indvars.iv.next13, %._crit_edge ]
  %29 = load float** %7, align 8, !dbg !1002, !tbaa !902
  %30 = getelementptr inbounds float* %29, i64 %indvars.iv12, !dbg !1034
  store float 0.000000e+00, float* %30, align 4, !dbg !1035, !tbaa !819
  %31 = load [3 x float]** %8, align 8, !dbg !1004, !tbaa !898
  %32 = getelementptr inbounds [3 x float]* %31, i64 %indvars.iv12, i64 0, !dbg !1036
  tail call void @llvm.dbg.value(metadata float* %32, i64 0, metadata !587, metadata !691), !dbg !1037
  store float 0.000000e+00, float* %32, align 4, !dbg !1039, !tbaa !819
  %33 = getelementptr inbounds [3 x float]* %31, i64 %indvars.iv12, i64 1, !dbg !1040
  store float 0.000000e+00, float* %33, align 4, !dbg !1041, !tbaa !819
  %34 = getelementptr inbounds [3 x float]* %31, i64 %indvars.iv12, i64 2, !dbg !1042
  store float 0.000000e+00, float* %34, align 4, !dbg !1043, !tbaa !819
  %35 = icmp eq i32 %28, 1, !dbg !1044
  br i1 %35, label %36, label %52, !dbg !1045

; <label>:36                                      ; preds = %26
  %37 = load [3 x float]** %9, align 8, !dbg !1005, !tbaa !889
  %38 = getelementptr inbounds [3 x float]* %37, i64 %indvars.iv12, i64 0, !dbg !1046
  tail call void @llvm.dbg.value(metadata float* %38, i64 0, metadata !587, metadata !691), !dbg !1047
  store float 0.000000e+00, float* %38, align 4, !dbg !1049, !tbaa !819
  %39 = getelementptr inbounds [3 x float]* %37, i64 %indvars.iv12, i64 1, !dbg !1050
  store float 0.000000e+00, float* %39, align 4, !dbg !1051, !tbaa !819
  %40 = getelementptr inbounds [3 x float]* %37, i64 %indvars.iv12, i64 2, !dbg !1052
  store float 0.000000e+00, float* %40, align 4, !dbg !1053, !tbaa !819
  %41 = load [3 x float]** %10, align 8, !dbg !1008, !tbaa !891
  %42 = getelementptr inbounds [3 x float]* %41, i64 %indvars.iv12, i64 0, !dbg !1054
  tail call void @llvm.dbg.value(metadata float* %42, i64 0, metadata !587, metadata !691), !dbg !1055
  store float 0.000000e+00, float* %42, align 4, !dbg !1057, !tbaa !819
  %43 = getelementptr inbounds [3 x float]* %41, i64 %indvars.iv12, i64 1, !dbg !1058
  store float 0.000000e+00, float* %43, align 4, !dbg !1059, !tbaa !819
  %44 = getelementptr inbounds [3 x float]* %41, i64 %indvars.iv12, i64 2, !dbg !1060
  store float 0.000000e+00, float* %44, align 4, !dbg !1061, !tbaa !819
  %45 = load [3 x float]** %11, align 8, !dbg !1009, !tbaa !895
  %46 = getelementptr inbounds [3 x float]* %45, i64 %indvars.iv12, i64 0, !dbg !1062
  tail call void @llvm.dbg.value(metadata float* %46, i64 0, metadata !587, metadata !691), !dbg !1063
  store float 0.000000e+00, float* %46, align 4, !dbg !1065, !tbaa !819
  %47 = getelementptr inbounds [3 x float]* %45, i64 %indvars.iv12, i64 1, !dbg !1066
  store float 0.000000e+00, float* %47, align 4, !dbg !1067, !tbaa !819
  %48 = getelementptr inbounds [3 x float]* %45, i64 %indvars.iv12, i64 2, !dbg !1068
  store float 0.000000e+00, float* %48, align 4, !dbg !1069, !tbaa !819
  %49 = load [3 x [3 x float]]** %12, align 8, !dbg !1010, !tbaa !893
  %50 = getelementptr inbounds [3 x [3 x float]]* %49, i64 %indvars.iv12, i64 0, !dbg !1070
  tail call void @llvm.dbg.value(metadata [3 x float]* %50, i64 0, metadata !593, metadata !691) #6, !dbg !1071
  tail call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !594, metadata !691) #6, !dbg !1073
  %51 = bitcast [3 x float]* %50 to i8*, !dbg !1074
  tail call void @llvm.memset.p0i8.i64(i8* %51, i8 0, i64 36, i32 4, i1 false) #6, !dbg !1075
  %.pre14 = load i32* %4, align 4, !dbg !996, !tbaa !882
  br label %52, !dbg !1076

; <label>:52                                      ; preds = %26, %36
  %53 = phi i32 [ %27, %26 ], [ %.pre14, %36 ], !dbg !1001
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !1001
  %54 = sext i32 %53 to i64, !dbg !1000
  %55 = icmp slt i64 %indvars.iv.next13, %54, !dbg !1000
  br i1 %55, label %._crit_edge, label %.preheader, !dbg !1001

._crit_edge:                                      ; preds = %52
  %.pre = load i32* %1, align 4, !dbg !1077, !tbaa !871
  br label %26, !dbg !1001

; <label>:56                                      ; preds = %.lr.ph, %125
  %indvars.iv10 = phi i64 [ %24, %.lr.ph ], [ %indvars.iv.next11, %125 ]
  %57 = getelementptr inbounds float* %mass, i64 %indvars.iv10, !dbg !1078
  %58 = load float* %57, align 4, !dbg !1078, !tbaa !819
  tail call void @llvm.dbg.value(metadata float %58, i64 0, metadata !541, metadata !691), !dbg !1079
  %59 = load i16** %15, align 8, !dbg !1016, !tbaa !910
  %60 = getelementptr inbounds i16* %59, i64 %indvars.iv10, !dbg !1080
  %61 = load i16* %60, align 2, !dbg !1080, !tbaa !922
  %62 = zext i16 %61 to i64, !dbg !1081
  %63 = load float** %16, align 8, !dbg !1018, !tbaa !902
  %64 = getelementptr inbounds float* %63, i64 %62, !dbg !1081
  %65 = load float* %64, align 4, !dbg !1082, !tbaa !819
  %66 = fadd float %58, %65, !dbg !1082
  store float %66, float* %64, align 4, !dbg !1082, !tbaa !819
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !540, metadata !691), !dbg !1083
  %67 = load [3 x float]** %17, align 8, !dbg !1019, !tbaa !898
  br label %68, !dbg !1084

; <label>:68                                      ; preds = %68, %56
  %indvars.iv = phi i64 [ 0, %56 ], [ %indvars.iv.next, %68 ]
  %69 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv10, i64 %indvars.iv, !dbg !1085
  %70 = load float* %69, align 4, !dbg !1085, !tbaa !819
  %71 = fmul float %58, %70, !dbg !1086
  %72 = getelementptr inbounds [3 x float]* %67, i64 %62, i64 %indvars.iv, !dbg !1087
  %73 = load float* %72, align 4, !dbg !1088, !tbaa !819
  %74 = fadd float %71, %73, !dbg !1088
  store float %74, float* %72, align 4, !dbg !1088, !tbaa !819
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1084
  %exitcond = icmp eq i64 %indvars.iv.next, 3, !dbg !1084
  br i1 %exitcond, label %75, label %68, !dbg !1084

; <label>:75                                      ; preds = %68
  %76 = load i32* %1, align 4, !dbg !1089, !tbaa !871
  %77 = icmp eq i32 %76, 1, !dbg !1090
  br i1 %77, label %78, label %125, !dbg !1091

; <label>:78                                      ; preds = %75
  %79 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv10, i64 0, !dbg !1092
  %80 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv10, i64 0, !dbg !1093
  tail call void @llvm.dbg.value(metadata float* %79, i64 0, metadata !600, metadata !691), !dbg !1094
  tail call void @llvm.dbg.value(metadata float* %80, i64 0, metadata !601, metadata !691), !dbg !1095
  tail call void @llvm.dbg.value(metadata float* %18, i64 0, metadata !602, metadata !691), !dbg !1096
  %81 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv10, i64 1, !dbg !1097
  %82 = load float* %81, align 4, !dbg !1097, !tbaa !819
  %83 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv10, i64 2, !dbg !1098
  %84 = load float* %83, align 4, !dbg !1098, !tbaa !819
  %85 = fmul float %82, %84, !dbg !1099
  %86 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv10, i64 2, !dbg !1100
  %87 = load float* %86, align 4, !dbg !1100, !tbaa !819
  %88 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv10, i64 1, !dbg !1101
  %89 = load float* %88, align 4, !dbg !1101, !tbaa !819
  %90 = fmul float %87, %89, !dbg !1102
  %91 = fsub float %85, %90, !dbg !1103
  store float %91, float* %18, align 4, !dbg !1104, !tbaa !819
  %92 = load float* %80, align 4, !dbg !1105, !tbaa !819
  %93 = fmul float %87, %92, !dbg !1106
  %94 = load float* %79, align 4, !dbg !1107, !tbaa !819
  %95 = fmul float %94, %84, !dbg !1108
  %96 = fsub float %93, %95, !dbg !1109
  store float %96, float* %19, align 4, !dbg !1110, !tbaa !819
  %97 = fmul float %94, %89, !dbg !1111
  %98 = fmul float %82, %92, !dbg !1112
  %99 = fsub float %97, %98, !dbg !1113
  store float %99, float* %20, align 4, !dbg !1114, !tbaa !819
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !540, metadata !691), !dbg !1083
  %100 = load [3 x float]** %21, align 8, !dbg !1028, !tbaa !889
  %101 = load [3 x float]** %22, align 8, !dbg !1032, !tbaa !891
  %102 = fmul float %58, %91, !dbg !1115
  %103 = getelementptr inbounds [3 x float]* %100, i64 %62, i64 0, !dbg !1116
  %104 = load float* %103, align 4, !dbg !1117, !tbaa !819
  %105 = fadd float %102, %104, !dbg !1117
  store float %105, float* %103, align 4, !dbg !1117, !tbaa !819
  %106 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv10, i64 0, !dbg !1118
  %107 = load float* %106, align 4, !dbg !1118, !tbaa !819
  %108 = fmul float %58, %107, !dbg !1119
  %109 = getelementptr inbounds [3 x float]* %101, i64 %62, i64 0, !dbg !1120
  %110 = load float* %109, align 4, !dbg !1121, !tbaa !819
  %111 = fadd float %108, %110, !dbg !1121
  store float %111, float* %109, align 4, !dbg !1121, !tbaa !819
  br label %._crit_edge15, !dbg !1122

._crit_edge15:                                    ; preds = %78, %._crit_edge15
  %indvars.iv.next817 = phi i64 [ 1, %78 ], [ %indvars.iv.next8, %._crit_edge15 ]
  %.phi.trans.insert = getelementptr inbounds [3 x float]* %j0, i64 0, i64 %indvars.iv.next817
  %.pre16 = load float* %.phi.trans.insert, align 4, !dbg !1123, !tbaa !819
  %112 = fmul float %58, %.pre16, !dbg !1115
  %113 = getelementptr inbounds [3 x float]* %100, i64 %62, i64 %indvars.iv.next817, !dbg !1116
  %114 = load float* %113, align 4, !dbg !1117, !tbaa !819
  %115 = fadd float %112, %114, !dbg !1117
  store float %115, float* %113, align 4, !dbg !1117, !tbaa !819
  %116 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv10, i64 %indvars.iv.next817, !dbg !1118
  %117 = load float* %116, align 4, !dbg !1118, !tbaa !819
  %118 = fmul float %58, %117, !dbg !1119
  %119 = getelementptr inbounds [3 x float]* %101, i64 %62, i64 %indvars.iv.next817, !dbg !1120
  %120 = load float* %119, align 4, !dbg !1121, !tbaa !819
  %121 = fadd float %118, %120, !dbg !1121
  store float %121, float* %119, align 4, !dbg !1121, !tbaa !819
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv.next817, 1, !dbg !1122
  %exitcond9 = icmp eq i64 %indvars.iv.next8, 3, !dbg !1122
  br i1 %exitcond9, label %122, label %._crit_edge15, !dbg !1122

; <label>:122                                     ; preds = %._crit_edge15
  %123 = load [3 x [3 x float]]** %23, align 8, !dbg !1033, !tbaa !893
  %124 = getelementptr inbounds [3 x [3 x float]]* %123, i64 %62, i64 0, !dbg !1124
  tail call fastcc void @update_tensor(float* %79, float %58, [3 x float]* %124) #9, !dbg !1125
  br label %125, !dbg !1126

; <label>:125                                     ; preds = %75, %122
  %indvars.iv.next11 = add nsw i64 %indvars.iv10, 1, !dbg !1014
  %126 = icmp slt i64 %indvars.iv.next11, %25, !dbg !1011
  br i1 %126, label %56, label %.loopexit, !dbg !1014

.loopexit:                                        ; preds = %125, %.preheader, %0
  ret void, !dbg !1127
}
