define void @do_stopcm_grp(%struct.__sFILE* nocapture readnone %fp, i32 %start, i32 %homenr, [3 x float]* nocapture readonly %x, [3 x float]* nocapture %v, %struct.t_vcm* nocapture readonly %vcm) #4 {
  %1 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 1
  %2 = load i32* %1, align 4, !tbaa !18
  %3 = icmp eq i32 %2, 2
  br i1 %3, label %.loopexit, label %.preheader1

.preheader1:                                      ; preds = %0
  %4 = add nsw i32 %homenr, %start
  %5 = icmp sgt i32 %homenr, 0
  br i1 %5, label %.lr.ph4, label %._crit_edge

.lr.ph4:                                          ; preds = %.preheader1
  %6 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 10
  %7 = load i16** %6, align 8, !tbaa !33
  %8 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 3
  %9 = load [3 x float]** %8, align 8, !tbaa !28
  %10 = sext i32 %start to i64
  %11 = sext i32 %4 to i64
  br label %12

; <label>:12                                      ; preds = %.lr.ph4, %12
  %indvars.iv5 = phi i64 [ %10, %.lr.ph4 ], [ %indvars.iv.next6, %12 ]
  %13 = getelementptr inbounds i16* %7, i64 %indvars.iv5
  %14 = load i16* %13, align 2, !tbaa !35
  %15 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv5, i64 0
  %16 = zext i16 %14 to i64
  %17 = getelementptr inbounds [3 x float]* %9, i64 %16, i64 0
  %18 = load float* %15, align 4, !tbaa !14
  %19 = load float* %17, align 4, !tbaa !14
  %20 = fsub float %18, %19
  %21 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv5, i64 1
  %22 = load float* %21, align 4, !tbaa !14
  %23 = getelementptr inbounds [3 x float]* %9, i64 %16, i64 1
  %24 = load float* %23, align 4, !tbaa !14
  %25 = fsub float %22, %24
  %26 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv5, i64 2
  %27 = load float* %26, align 4, !tbaa !14
  %28 = getelementptr inbounds [3 x float]* %9, i64 %16, i64 2
  %29 = load float* %28, align 4, !tbaa !14
  %30 = fsub float %27, %29
  store float %20, float* %15, align 4, !tbaa !14
  store float %25, float* %21, align 4, !tbaa !14
  store float %30, float* %26, align 4, !tbaa !14
  %indvars.iv.next6 = add nsw i64 %indvars.iv5, 1
  %31 = icmp slt i64 %indvars.iv.next6, %11
  br i1 %31, label %12, label %._crit_edge

._crit_edge:                                      ; preds = %12, %.preheader1
  %.not = icmp ne i32 %2, 1
  %.not7 = xor i1 %5, true
  %brmerge = or i1 %.not, %.not7
  br i1 %brmerge, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %._crit_edge
  %32 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 10
  %33 = load i16** %32, align 8, !tbaa !33
  %34 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 4
  %35 = load [3 x float]** %34, align 8, !tbaa !24
  %36 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 6
  %37 = load [3 x float]** %36, align 8, !tbaa !26
  %38 = sext i32 %start to i64
  %39 = sext i32 %4 to i64
  br label %40

; <label>:40                                      ; preds = %.lr.ph, %40
  %indvars.iv = phi i64 [ %38, %.lr.ph ], [ %indvars.iv.next, %40 ]
  %41 = getelementptr inbounds i16* %33, i64 %indvars.iv
  %42 = load i16* %41, align 2, !tbaa !35
  %43 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv, i64 0
  %44 = zext i16 %42 to i64
  %45 = getelementptr inbounds [3 x float]* %35, i64 %44, i64 0
  %46 = load float* %43, align 4, !tbaa !14
  %47 = load float* %45, align 4, !tbaa !14
  %48 = fsub float %46, %47
  %49 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv, i64 1
  %50 = load float* %49, align 4, !tbaa !14
  %51 = getelementptr inbounds [3 x float]* %35, i64 %44, i64 1
  %52 = load float* %51, align 4, !tbaa !14
  %53 = fsub float %50, %52
  %54 = getelementptr inbounds [3 x float]* %x, i64 %indvars.iv, i64 2
  %55 = load float* %54, align 4, !tbaa !14
  %56 = getelementptr inbounds [3 x float]* %35, i64 %44, i64 2
  %57 = load float* %56, align 4, !tbaa !14
  %58 = fsub float %55, %57
  %59 = getelementptr inbounds [3 x float]* %37, i64 %44, i64 0
  %60 = getelementptr inbounds [3 x float]* %37, i64 %44, i64 1
  %61 = load float* %60, align 4, !tbaa !14
  %62 = fmul float %58, %61
  %63 = getelementptr inbounds [3 x float]* %37, i64 %44, i64 2
  %64 = load float* %63, align 4, !tbaa !14
  %65 = fmul float %53, %64
  %66 = fsub float %62, %65
  %67 = fmul float %48, %64
  %68 = load float* %59, align 4, !tbaa !14
  %69 = fmul float %58, %68
  %70 = fsub float %67, %69
  %71 = fmul float %53, %68
  %72 = fmul float %48, %61
  %73 = fsub float %71, %72
  %74 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv, i64 0
  %75 = load float* %74, align 4, !tbaa !14
  %76 = fsub float %75, %66
  %77 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv, i64 1
  %78 = load float* %77, align 4, !tbaa !14
  %79 = fsub float %78, %70
  %80 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv, i64 2
  %81 = load float* %80, align 4, !tbaa !14
  %82 = fsub float %81, %73
  store float %76, float* %74, align 4, !tbaa !14
  store float %79, float* %77, align 4, !tbaa !14
  store float %82, float* %80, align 4, !tbaa !14
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %83 = icmp slt i64 %indvars.iv.next, %39
  br i1 %83, label %40, label %.loopexit

.loopexit:                                        ; preds = %40, %._crit_edge, %0
  ret void
}
