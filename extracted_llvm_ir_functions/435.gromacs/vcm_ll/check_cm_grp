define void @check_cm_grp(%struct.__sFILE* %fp, %struct.t_vcm* %vcm) #4 {
  %jcm = alloca [3 x float], align 4
  %Icm = alloca [3 x [3 x float]], align 16
  %1 = bitcast [3 x [3 x float]]* %Icm to i8*
  call void @llvm.lifetime.start(i64 36, i8* %1) #6
  %2 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 1
  %3 = load i32* %2, align 4, !tbaa !18
  %4 = icmp eq i32 %3, 2
  %.phi.trans.insert37 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 0
  %.pre38 = load i32* %.phi.trans.insert37, align 4, !tbaa !22
  br i1 %4, label %.preheader10, label %.preheader12

.preheader12:                                     ; preds = %0
  %5 = icmp sgt i32 %.pre38, 0
  br i1 %5, label %.lr.ph21, label %._crit_edge22

.lr.ph21:                                         ; preds = %.preheader12
  %6 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 8
  %7 = load float** %6, align 8, !tbaa !29
  %8 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 2
  %9 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 3
  %10 = sext i32 %.pre38 to i64
  br label %11

; <label>:11                                      ; preds = %.lr.ph21, %32
  %indvars.iv33 = phi i64 [ 0, %.lr.ph21 ], [ %indvars.iv.next34, %32 ]
  %12 = getelementptr inbounds float* %7, i64 %indvars.iv33
  %13 = load float* %12, align 4, !tbaa !14
  %fabsf9 = tail call float @fabsf(float %13) #10
  %14 = fpext float %fabsf9 to double
  %15 = fcmp ogt double %14, 1.200000e-38
  br i1 %15, label %16, label %32

; <label>:16                                      ; preds = %11
  %17 = fdiv float 1.000000e+00, %13
  %18 = load [3 x float]** %8, align 8, !tbaa !27
  %19 = getelementptr inbounds [3 x float]* %18, i64 %indvars.iv33, i64 0
  %20 = load [3 x float]** %9, align 8, !tbaa !28
  %21 = getelementptr inbounds [3 x float]* %20, i64 %indvars.iv33, i64 0
  %22 = load float* %19, align 4, !tbaa !14
  %23 = fmul float %17, %22
  store float %23, float* %21, align 4, !tbaa !14
  %24 = getelementptr inbounds [3 x float]* %18, i64 %indvars.iv33, i64 1
  %25 = load float* %24, align 4, !tbaa !14
  %26 = fmul float %17, %25
  %27 = getelementptr inbounds [3 x float]* %20, i64 %indvars.iv33, i64 1
  store float %26, float* %27, align 4, !tbaa !14
  %28 = getelementptr inbounds [3 x float]* %18, i64 %indvars.iv33, i64 2
  %29 = load float* %28, align 4, !tbaa !14
  %30 = fmul float %17, %29
  %31 = getelementptr inbounds [3 x float]* %20, i64 %indvars.iv33, i64 2
  store float %30, float* %31, align 4, !tbaa !14
  br label %32

; <label>:32                                      ; preds = %11, %16
  %indvars.iv.next34 = add nuw nsw i64 %indvars.iv33, 1
  %33 = icmp slt i64 %indvars.iv.next34, %10
  br i1 %33, label %11, label %._crit_edge22

._crit_edge22:                                    ; preds = %32, %.preheader12
  %34 = icmp eq i32 %3, 1
  br i1 %34, label %.preheader11, label %.preheader10

.preheader11:                                     ; preds = %._crit_edge22
  br i1 %5, label %.lr.ph19, label %._crit_edge

.lr.ph19:                                         ; preds = %.preheader11
  %35 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 8
  %36 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 4
  %37 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 3
  %38 = getelementptr inbounds [3 x float]* %jcm, i64 0, i64 0
  %39 = getelementptr inbounds [3 x float]* %jcm, i64 0, i64 1
  %40 = getelementptr inbounds [3 x float]* %jcm, i64 0, i64 2
  %41 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 5
  %42 = getelementptr inbounds [3 x [3 x float]]* %Icm, i64 0, i64 0
  %43 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 7
  %44 = getelementptr inbounds [3 x [3 x float]]* %Icm, i64 0, i64 0, i64 0
  %45 = getelementptr inbounds [3 x [3 x float]]* %Icm, i64 0, i64 0, i64 1
  %46 = getelementptr inbounds [3 x [3 x float]]* %Icm, i64 0, i64 0, i64 2
  %47 = getelementptr inbounds [3 x [3 x float]]* %Icm, i64 0, i64 1, i64 0
  %48 = getelementptr inbounds [3 x [3 x float]]* %Icm, i64 0, i64 1, i64 1
  %49 = getelementptr inbounds [3 x [3 x float]]* %Icm, i64 0, i64 1, i64 2
  %50 = getelementptr inbounds [3 x [3 x float]]* %Icm, i64 0, i64 2, i64 0
  %51 = getelementptr inbounds [3 x [3 x float]]* %Icm, i64 0, i64 2, i64 1
  %52 = getelementptr inbounds [3 x [3 x float]]* %Icm, i64 0, i64 2, i64 2
  %53 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 6
  br label %65

.preheader10:                                     ; preds = %210, %0, %._crit_edge22
  %54 = phi i32 [ %.pre38, %._crit_edge22 ], [ %.pre38, %0 ], [ %211, %210 ]
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader10
  %56 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 8
  %57 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 3
  %58 = icmp ne %struct.__sFILE* %fp, null
  %59 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 9
  %60 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 5
  %61 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 6
  %62 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 7
  %63 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 4
  %64 = getelementptr inbounds %struct.t_vcm* %vcm, i64 0, i32 2
  br label %214

; <label>:65                                      ; preds = %.lr.ph19, %210
  %66 = phi i32 [ %.pre38, %.lr.ph19 ], [ %211, %210 ]
  %indvars.iv31 = phi i64 [ 0, %.lr.ph19 ], [ %indvars.iv.next32, %210 ]
  %67 = load float** %35, align 8, !tbaa !29
  %68 = getelementptr inbounds float* %67, i64 %indvars.iv31
  %69 = load float* %68, align 4, !tbaa !14
  %fabsf8 = tail call float @fabsf(float %69) #10
  %70 = fpext float %fabsf8 to double
  %71 = fcmp ogt double %70, 1.200000e-38
  br i1 %71, label %72, label %210

; <label>:72                                      ; preds = %65
  %73 = fdiv float 1.000000e+00, %69
  %74 = load [3 x float]** %36, align 8, !tbaa !24
  br label %75

; <label>:75                                      ; preds = %75, %72
  %indvars.iv25 = phi i64 [ 0, %72 ], [ %indvars.iv.next26, %75 ]
  %76 = getelementptr inbounds [3 x float]* %74, i64 %indvars.iv31, i64 %indvars.iv25
  %77 = load float* %76, align 4, !tbaa !14
  %78 = fmul float %73, %77
  store float %78, float* %76, align 4, !tbaa !14
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1
  %exitcond27 = icmp eq i64 %indvars.iv.next26, 3
  br i1 %exitcond27, label %79, label %75

; <label>:79                                      ; preds = %75
  %80 = getelementptr inbounds [3 x float]* %74, i64 %indvars.iv31, i64 0
  %81 = load [3 x float]** %37, align 8, !tbaa !28
  %82 = getelementptr inbounds [3 x float]* %81, i64 %indvars.iv31, i64 0
  %83 = getelementptr inbounds [3 x float]* %74, i64 %indvars.iv31, i64 1
  %84 = load float* %83, align 4, !tbaa !14
  %85 = getelementptr inbounds [3 x float]* %81, i64 %indvars.iv31, i64 2
  %86 = load float* %85, align 4, !tbaa !14
  %87 = fmul float %84, %86
  %88 = getelementptr inbounds [3 x float]* %74, i64 %indvars.iv31, i64 2
  %89 = load float* %88, align 4, !tbaa !14
  %90 = getelementptr inbounds [3 x float]* %81, i64 %indvars.iv31, i64 1
  %91 = load float* %90, align 4, !tbaa !14
  %92 = fmul float %89, %91
  %93 = fsub float %87, %92
  store float %93, float* %38, align 4, !tbaa !14
  %94 = load float* %82, align 4, !tbaa !14
  %95 = fmul float %89, %94
  %96 = load float* %80, align 4, !tbaa !14
  %97 = fmul float %96, %86
  %98 = fsub float %95, %97
  store float %98, float* %39, align 4, !tbaa !14
  %99 = fmul float %96, %91
  %100 = fmul float %84, %94
  %101 = fsub float %99, %100
  store float %101, float* %40, align 4, !tbaa !14
  %102 = load [3 x float]** %41, align 8, !tbaa !23
  %103 = fmul float %69, %93
  %104 = getelementptr inbounds [3 x float]* %102, i64 %indvars.iv31, i64 0
  %105 = load float* %104, align 4, !tbaa !14
  %106 = fsub float %105, %103
  store float %106, float* %104, align 4, !tbaa !14
  br label %._crit_edge35

._crit_edge35:                                    ; preds = %79, %._crit_edge35
  %indvars.iv.next2940 = phi i64 [ 1, %79 ], [ %indvars.iv.next29, %._crit_edge35 ]
  %.phi.trans.insert = getelementptr inbounds [3 x float]* %jcm, i64 0, i64 %indvars.iv.next2940
  %.pre = load float* %.phi.trans.insert, align 4, !tbaa !14
  %107 = fmul float %69, %.pre
  %108 = getelementptr inbounds [3 x float]* %102, i64 %indvars.iv31, i64 %indvars.iv.next2940
  %109 = load float* %108, align 4, !tbaa !14
  %110 = fsub float %109, %107
  store float %110, float* %108, align 4, !tbaa !14
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv.next2940, 1
  %exitcond30 = icmp eq i64 %indvars.iv.next29, 3
  br i1 %exitcond30, label %111, label %._crit_edge35

; <label>:111                                     ; preds = %._crit_edge35
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 36, i32 16, i1 false) #6
  call fastcc void @update_tensor(float* %80, float %69, [3 x float]* %42) #9
  %112 = load [3 x [3 x float]]** %43, align 8, !tbaa !25
  %113 = getelementptr inbounds [3 x [3 x float]]* %112, i64 %indvars.iv31, i64 0, i64 0
  %114 = bitcast float* %113 to <4 x float>*
  %115 = load <4 x float>* %114, align 4, !tbaa !14
  %116 = bitcast [3 x [3 x float]]* %Icm to <4 x float>*
  %117 = load <4 x float>* %116, align 16, !tbaa !14
  %118 = fsub <4 x float> %115, %117
  %119 = bitcast float* %113 to <4 x float>*
  store <4 x float> %118, <4 x float>* %119, align 4, !tbaa !14
  %120 = getelementptr inbounds [3 x [3 x float]]* %112, i64 %indvars.iv31, i64 1, i64 1
  %121 = bitcast float* %120 to <4 x float>*
  %122 = load <4 x float>* %121, align 4, !tbaa !14
  %123 = bitcast float* %48 to <4 x float>*
  %124 = load <4 x float>* %123, align 4, !tbaa !14
  %125 = fsub <4 x float> %122, %124
  %126 = bitcast float* %120 to <4 x float>*
  store <4 x float> %125, <4 x float>* %126, align 4, !tbaa !14
  %127 = getelementptr inbounds [3 x [3 x float]]* %112, i64 %indvars.iv31, i64 2, i64 2
  %128 = load float* %127, align 4, !tbaa !14
  %129 = load float* %52, align 8, !tbaa !14
  %130 = fsub float %128, %129
  store float %130, float* %127, align 4, !tbaa !14
  %131 = extractelement <4 x float> %125, i32 0
  %132 = fadd float %131, %130
  %133 = extractelement <4 x float> %118, i32 1
  %134 = fsub float -0.000000e+00, %133
  %135 = extractelement <4 x float> %118, i32 2
  %136 = fsub float -0.000000e+00, %135
  %137 = extractelement <4 x float> %118, i32 0
  %138 = fadd float %130, %137
  %139 = fadd float %131, %137
  %140 = fmul float %138, %139
  %141 = extractelement <4 x float> %125, i32 1
  %142 = fmul float %141, %141
  %143 = fsub float %140, %142
  %144 = fmul float %132, %143
  %145 = fmul float %139, %134
  %146 = fmul float %135, %141
  %147 = fsub float %145, %146
  %148 = fmul float %147, %134
  %149 = fsub float %144, %148
  %150 = fmul float %133, %141
  %151 = fmul float %138, %136
  %152 = fsub float %150, %151
  %153 = fmul float %152, %136
  %154 = fadd float %153, %149
  %155 = fdiv float 1.000000e+00, %154
  %fabsf.i.i = tail call float @fabsf(float %155) #10
  %156 = fcmp ole float %fabsf.i.i, 0x3C32725DE0000000
  %157 = fcmp oge float %fabsf.i.i, 0x43ABC16D60000000
  %or.cond.i.i = or i1 %156, %157
  br i1 %or.cond.i.i, label %158, label %get_minv.exit

; <label>:158                                     ; preds = %111
  %159 = fpext float %155 to double
  %160 = fdiv double 1.000000e+00, %159
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([17 x i8]* @.str23, i64 0, i64 0), double %160) #7
  br label %get_minv.exit

get_minv.exit:                                    ; preds = %111, %158
  %161 = fmul float %155, %143
  store float %161, float* %44, align 16, !tbaa !14
  %162 = fsub float -0.000000e+00, %155
  %163 = fmul float %147, %162
  store float %163, float* %45, align 4, !tbaa !14
  %164 = fmul float %155, %152
  store float %164, float* %46, align 8, !tbaa !14
  store float %163, float* %47, align 4, !tbaa !14
  %165 = fmul float %132, %139
  %166 = fmul float %135, %135
  %167 = fsub float %165, %166
  %168 = fmul float %155, %167
  store float %168, float* %48, align 4, !tbaa !14
  %169 = fmul float %132, %141
  %170 = fsub float -0.000000e+00, %169
  %171 = fmul float %133, %135
  %172 = fsub float %170, %171
  %173 = fmul float %172, %162
  store float %173, float* %49, align 4, !tbaa !14
  store float %164, float* %50, align 8, !tbaa !14
  store float %173, float* %51, align 4, !tbaa !14
  %174 = fmul float %132, %138
  %175 = fmul float %133, %133
  %176 = fsub float %174, %175
  %177 = fmul float %155, %176
  store float %177, float* %52, align 8, !tbaa !14
  %178 = load [3 x float]** %41, align 8, !tbaa !23
  %179 = getelementptr inbounds [3 x float]* %178, i64 %indvars.iv31, i64 0
  %180 = load [3 x float]** %53, align 8, !tbaa !26
  %181 = getelementptr inbounds [3 x float]* %180, i64 %indvars.iv31, i64 0
  %182 = load float* %179, align 4, !tbaa !14
  %183 = fmul float %161, %182
  %184 = getelementptr inbounds [3 x float]* %178, i64 %indvars.iv31, i64 1
  %185 = load float* %184, align 4, !tbaa !14
  %186 = fmul float %163, %185
  %187 = fadd float %183, %186
  %188 = getelementptr inbounds [3 x float]* %178, i64 %indvars.iv31, i64 2
  %189 = load float* %188, align 4, !tbaa !14
  %190 = fmul float %164, %189
  %191 = fadd float %187, %190
  store float %191, float* %181, align 4, !tbaa !14
  %192 = load float* %179, align 4, !tbaa !14
  %193 = fmul float %163, %192
  %194 = load float* %184, align 4, !tbaa !14
  %195 = fmul float %168, %194
  %196 = fadd float %193, %195
  %197 = load float* %188, align 4, !tbaa !14
  %198 = fmul float %173, %197
  %199 = fadd float %196, %198
  %200 = getelementptr inbounds [3 x float]* %180, i64 %indvars.iv31, i64 1
  store float %199, float* %200, align 4, !tbaa !14
  %201 = load float* %179, align 4, !tbaa !14
  %202 = fmul float %164, %201
  %203 = load float* %184, align 4, !tbaa !14
  %204 = fmul float %173, %203
  %205 = fadd float %202, %204
  %206 = load float* %188, align 4, !tbaa !14
  %207 = fmul float %177, %206
  %208 = fadd float %205, %207
  %209 = getelementptr inbounds [3 x float]* %180, i64 %indvars.iv31, i64 2
  store float %208, float* %209, align 4, !tbaa !14
  %.pre36 = load i32* %.phi.trans.insert37, align 4, !tbaa !22
  br label %210

; <label>:210                                     ; preds = %65, %get_minv.exit
  %211 = phi i32 [ %66, %65 ], [ %.pre36, %get_minv.exit ]
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1
  %212 = sext i32 %211 to i64
  %213 = icmp slt i64 %indvars.iv.next32, %212
  br i1 %213, label %65, label %.preheader10

; <label>:214                                     ; preds = %.lr.ph, %378
  %indvars.iv23 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next24, %378 ]
  %215 = load float** %56, align 8, !tbaa !29
  %216 = getelementptr inbounds float* %215, i64 %indvars.iv23
  %217 = load float* %216, align 4, !tbaa !14
  %fabsf = tail call float @fabsf(float %217) #10
  %218 = fpext float %fabsf to double
  %219 = fcmp ogt double %218, 1.200000e-38
  br i1 %219, label %.preheader, label %378

.preheader:                                       ; preds = %214
  %220 = load [3 x float]** %57, align 8, !tbaa !28
  br label %221

; <label>:221                                     ; preds = %221, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %221 ]
  %ekcm.013 = phi float [ 0.000000e+00, %.preheader ], [ %225, %221 ]
  %222 = getelementptr inbounds [3 x float]* %220, i64 %indvars.iv23, i64 %indvars.iv
  %223 = load float* %222, align 4, !tbaa !14
  %224 = fmul float %223, %223
  %225 = fadd float %ekcm.013, %224
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %226, label %221

; <label>:226                                     ; preds = %221
  %227 = fpext float %217 to double
  %228 = fmul double %227, 5.000000e-01
  %229 = fpext float %225 to double
  %230 = fmul double %229, %228
  %231 = fptrunc double %230 to float
  %232 = fcmp ogt float %231, 1.000000e+00
  %233 = load %struct.__sFILE** @debug, align 8
  %234 = icmp ne %struct.__sFILE* %233, null
  %or.cond = or i1 %234, %232
  %or.cond5 = and i1 %58, %or.cond
  br i1 %or.cond5, label %235, label %250

; <label>:235                                     ; preds = %226
  %236 = load i8*** %59, align 8, !tbaa !30
  %237 = getelementptr inbounds i8** %236, i64 %indvars.iv23
  %238 = load i8** %237, align 8, !tbaa !39
  %239 = getelementptr inbounds [3 x float]* %220, i64 %indvars.iv23, i64 0
  %240 = load float* %239, align 4, !tbaa !14
  %241 = fpext float %240 to double
  %242 = getelementptr inbounds [3 x float]* %220, i64 %indvars.iv23, i64 1
  %243 = load float* %242, align 4, !tbaa !14
  %244 = fpext float %243 to double
  %245 = getelementptr inbounds [3 x float]* %220, i64 %indvars.iv23, i64 2
  %246 = load float* %245, align 4, !tbaa !14
  %247 = fpext float %246 to double
  %248 = fpext float %231 to double
  %249 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %fp, i8* getelementptr inbounds ([62 x i8]* @.str15, i64 0, i64 0), i8* %238, double %241, double %244, double %247, double %248) #7
  br label %250

; <label>:250                                     ; preds = %235, %226
  %251 = load i32* %2, align 4, !tbaa !18
  %252 = icmp eq i32 %251, 1
  br i1 %252, label %253, label %378

; <label>:253                                     ; preds = %250
  %254 = load [3 x float]** %60, align 8, !tbaa !23
  %255 = getelementptr inbounds [3 x float]* %254, i64 %indvars.iv23, i64 0
  %256 = load [3 x float]** %61, align 8, !tbaa !26
  %257 = getelementptr inbounds [3 x float]* %256, i64 %indvars.iv23, i64 0
  %258 = load float* %255, align 4, !tbaa !14
  %259 = load float* %257, align 4, !tbaa !14
  %260 = fmul float %258, %259
  %261 = getelementptr inbounds [3 x float]* %254, i64 %indvars.iv23, i64 1
  %262 = load float* %261, align 4, !tbaa !14
  %263 = getelementptr inbounds [3 x float]* %256, i64 %indvars.iv23, i64 1
  %264 = load float* %263, align 4, !tbaa !14
  %265 = fmul float %262, %264
  %266 = fadd float %260, %265
  %267 = getelementptr inbounds [3 x float]* %254, i64 %indvars.iv23, i64 2
  %268 = load float* %267, align 4, !tbaa !14
  %269 = getelementptr inbounds [3 x float]* %256, i64 %indvars.iv23, i64 2
  %270 = load float* %269, align 4, !tbaa !14
  %271 = fmul float %268, %270
  %272 = fadd float %266, %271
  %273 = fmul float %272, 5.000000e-01
  %274 = fcmp ogt float %273, 1.000000e+00
  %275 = load %struct.__sFILE** @debug, align 8
  %276 = icmp ne %struct.__sFILE* %275, null
  %or.cond3 = or i1 %276, %274
  %or.cond7 = and i1 %58, %or.cond3
  br i1 %or.cond7, label %277, label %378

; <label>:277                                     ; preds = %253
  %278 = load float** %56, align 8, !tbaa !29
  %279 = getelementptr inbounds float* %278, i64 %indvars.iv23
  %280 = load float* %279, align 4, !tbaa !14
  %281 = load i8*** %59, align 8, !tbaa !30
  %282 = getelementptr inbounds i8** %281, i64 %indvars.iv23
  %283 = load i8** %282, align 8, !tbaa !39
  %284 = fpext float %280 to double
  %285 = fpext float %273 to double
  %286 = load [3 x [3 x float]]** %62, align 8, !tbaa !25
  %287 = getelementptr inbounds [3 x [3 x float]]* %286, i64 %indvars.iv23, i64 0, i64 0
  %288 = load float* %287, align 4, !tbaa !14
  %289 = getelementptr inbounds [3 x [3 x float]]* %286, i64 %indvars.iv23, i64 1, i64 1
  %290 = load float* %289, align 4, !tbaa !14
  %291 = getelementptr inbounds [3 x [3 x float]]* %286, i64 %indvars.iv23, i64 2, i64 2
  %292 = load float* %291, align 4, !tbaa !14
  %293 = fmul float %290, %292
  %294 = getelementptr inbounds [3 x [3 x float]]* %286, i64 %indvars.iv23, i64 2, i64 1
  %295 = load float* %294, align 4, !tbaa !14
  %296 = getelementptr inbounds [3 x [3 x float]]* %286, i64 %indvars.iv23, i64 1, i64 2
  %297 = load float* %296, align 4, !tbaa !14
  %298 = fmul float %295, %297
  %299 = fsub float %293, %298
  %300 = fmul float %288, %299
  %301 = getelementptr inbounds [3 x [3 x float]]* %286, i64 %indvars.iv23, i64 1, i64 0
  %302 = load float* %301, align 4, !tbaa !14
  %303 = getelementptr inbounds [3 x [3 x float]]* %286, i64 %indvars.iv23, i64 0, i64 1
  %304 = load float* %303, align 4, !tbaa !14
  %305 = fmul float %292, %304
  %306 = getelementptr inbounds [3 x [3 x float]]* %286, i64 %indvars.iv23, i64 0, i64 2
  %307 = load float* %306, align 4, !tbaa !14
  %308 = fmul float %295, %307
  %309 = fsub float %305, %308
  %310 = fmul float %302, %309
  %311 = fsub float %300, %310
  %312 = getelementptr inbounds [3 x [3 x float]]* %286, i64 %indvars.iv23, i64 2, i64 0
  %313 = load float* %312, align 4, !tbaa !14
  %314 = fmul float %297, %304
  %315 = fmul float %290, %307
  %316 = fsub float %314, %315
  %317 = fmul float %313, %316
  %318 = fadd float %317, %311
  %319 = fpext float %318 to double
  %320 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %fp, i8* getelementptr inbounds ([57 x i8]* @.str16, i64 0, i64 0), i8* %283, double %284, double %285, double %319) #7
  %321 = load [3 x float]** %63, align 8, !tbaa !24
  %322 = getelementptr inbounds [3 x float]* %321, i64 %indvars.iv23, i64 0
  %323 = load float* %322, align 4, !tbaa !14
  %324 = fpext float %323 to double
  %325 = getelementptr inbounds [3 x float]* %321, i64 %indvars.iv23, i64 1
  %326 = load float* %325, align 4, !tbaa !14
  %327 = fpext float %326 to double
  %328 = getelementptr inbounds [3 x float]* %321, i64 %indvars.iv23, i64 2
  %329 = load float* %328, align 4, !tbaa !14
  %330 = fpext float %329 to double
  %331 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %fp, i8* getelementptr inbounds ([31 x i8]* @.str17, i64 0, i64 0), double %324, double %327, double %330) #7
  %332 = load [3 x float]** %64, align 8, !tbaa !27
  %333 = getelementptr inbounds [3 x float]* %332, i64 %indvars.iv23, i64 0
  %334 = load float* %333, align 4, !tbaa !14
  %335 = fpext float %334 to double
  %336 = getelementptr inbounds [3 x float]* %332, i64 %indvars.iv23, i64 1
  %337 = load float* %336, align 4, !tbaa !14
  %338 = fpext float %337 to double
  %339 = getelementptr inbounds [3 x float]* %332, i64 %indvars.iv23, i64 2
  %340 = load float* %339, align 4, !tbaa !14
  %341 = fpext float %340 to double
  %342 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %fp, i8* getelementptr inbounds ([31 x i8]* @.str18, i64 0, i64 0), double %335, double %338, double %341) #7
  %343 = load [3 x float]** %57, align 8, !tbaa !28
  %344 = getelementptr inbounds [3 x float]* %343, i64 %indvars.iv23, i64 0
  %345 = load float* %344, align 4, !tbaa !14
  %346 = fpext float %345 to double
  %347 = getelementptr inbounds [3 x float]* %343, i64 %indvars.iv23, i64 1
  %348 = load float* %347, align 4, !tbaa !14
  %349 = fpext float %348 to double
  %350 = getelementptr inbounds [3 x float]* %343, i64 %indvars.iv23, i64 2
  %351 = load float* %350, align 4, !tbaa !14
  %352 = fpext float %351 to double
  %353 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %fp, i8* getelementptr inbounds ([31 x i8]* @.str19, i64 0, i64 0), double %346, double %349, double %352) #7
  %354 = load [3 x float]** %60, align 8, !tbaa !23
  %355 = getelementptr inbounds [3 x float]* %354, i64 %indvars.iv23, i64 0
  %356 = load float* %355, align 4, !tbaa !14
  %357 = fpext float %356 to double
  %358 = getelementptr inbounds [3 x float]* %354, i64 %indvars.iv23, i64 1
  %359 = load float* %358, align 4, !tbaa !14
  %360 = fpext float %359 to double
  %361 = getelementptr inbounds [3 x float]* %354, i64 %indvars.iv23, i64 2
  %362 = load float* %361, align 4, !tbaa !14
  %363 = fpext float %362 to double
  %364 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %fp, i8* getelementptr inbounds ([31 x i8]* @.str20, i64 0, i64 0), double %357, double %360, double %363) #7
  %365 = load [3 x float]** %61, align 8, !tbaa !26
  %366 = getelementptr inbounds [3 x float]* %365, i64 %indvars.iv23, i64 0
  %367 = load float* %366, align 4, !tbaa !14
  %368 = fpext float %367 to double
  %369 = getelementptr inbounds [3 x float]* %365, i64 %indvars.iv23, i64 1
  %370 = load float* %369, align 4, !tbaa !14
  %371 = fpext float %370 to double
  %372 = getelementptr inbounds [3 x float]* %365, i64 %indvars.iv23, i64 2
  %373 = load float* %372, align 4, !tbaa !14
  %374 = fpext float %373 to double
  %375 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %fp, i8* getelementptr inbounds ([31 x i8]* @.str21, i64 0, i64 0), double %368, double %371, double %374) #7
  %376 = load [3 x [3 x float]]** %62, align 8, !tbaa !25
  %377 = getelementptr inbounds [3 x [3 x float]]* %376, i64 %indvars.iv23, i64 0
  tail call void @pr_rvecs(%struct.__sFILE* %fp, i32 0, i8* getelementptr inbounds ([15 x i8]* @.str22, i64 0, i64 0), [3 x float]* %377, i32 3) #7
  br label %378

; <label>:378                                     ; preds = %214, %253, %277, %250
  %indvars.iv.next24 = add nuw nsw i64 %indvars.iv23, 1
  %379 = load i32* %.phi.trans.insert37, align 4, !tbaa !22
  %380 = sext i32 %379 to i64
  %381 = icmp slt i64 %indvars.iv.next24, %380
  br i1 %381, label %214, label %._crit_edge

._crit_edge:                                      ; preds = %378, %.preheader11, %.preheader10
  call void @llvm.lifetime.end(i64 36, i8* %1) #6
  ret void
}
