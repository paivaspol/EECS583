define float @gauss(float %am, float %sd, i32* %ig) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{float %am}, i64 0, metadata !13), !dbg !263
  tail call void @llvm.dbg.value(metadata !{float %sd}, i64 0, metadata !14), !dbg !263
  tail call void @llvm.dbg.value(metadata !{i32* %ig}, i64 0, metadata !15), !dbg !263
  tail call void @llvm.dbg.value(metadata !264, i64 0, metadata !16), !dbg !265
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !17), !dbg !266
  br label %for.body, !dbg !266

for.body:                                         ; preds = %for.body, %entry
  %a.07 = phi float [ 0.000000e+00, %entry ], [ %add, %for.body ]
  %i.06 = phi i32 [ 0, %entry ], [ %inc, %for.body ]
  %call = tail call float @rando(i32* %ig) #5, !dbg !268
  %add = fadd float %a.07, %call, !dbg !268
  tail call void @llvm.dbg.value(metadata !{float %add}, i64 0, metadata !16), !dbg !268
  %inc = add nsw i32 %i.06, 1, !dbg !266
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !17), !dbg !266
  %exitcond = icmp eq i32 %inc, 12, !dbg !266
  br i1 %exitcond, label %for.end, label %for.body, !dbg !266

for.end:                                          ; preds = %for.body
  %conv = fpext float %add to double, !dbg !269
  %sub = fadd double %conv, -6.000000e+00, !dbg !269
  %conv1 = fpext float %sd to double, !dbg !269
  %mul = fmul double %conv1, %sub, !dbg !269
  %conv2 = fpext float %am to double, !dbg !269
  %add3 = fadd double %conv2, %mul, !dbg !269
  %conv4 = fptrunc double %add3 to float, !dbg !269
  tail call void @llvm.dbg.value(metadata !{float %conv4}, i64 0, metadata !18), !dbg !269
  ret float %conv4, !dbg !270
}
