define void @stop_cm(%struct._IO_FILE* nocapture %log, i32 %natoms, float* nocapture %mass, [3 x float]* nocapture %x, [3 x float]* nocapture %v) #0 {
entry:
  %xcm = alloca [3 x float], align 4
  %vcm = alloca [3 x float], align 4
  %acm = alloca [3 x float], align 4
  %L = alloca [3 x [3 x float]], align 16
  call void @llvm.dbg.value(metadata !{%struct._IO_FILE* %log}, i64 0, metadata !225), !dbg !408
  call void @llvm.dbg.value(metadata !{i32 %natoms}, i64 0, metadata !226), !dbg !408
  call void @llvm.dbg.value(metadata !{float* %mass}, i64 0, metadata !227), !dbg !408
  call void @llvm.dbg.value(metadata !{[3 x float]* %x}, i64 0, metadata !228), !dbg !408
  call void @llvm.dbg.value(metadata !{[3 x float]* %v}, i64 0, metadata !229), !dbg !408
  call void @llvm.dbg.declare(metadata !{[3 x float]* %xcm}, metadata !230), !dbg !409
  call void @llvm.dbg.declare(metadata !{[3 x float]* %vcm}, metadata !231), !dbg !409
  call void @llvm.dbg.declare(metadata !{[3 x float]* %acm}, metadata !232), !dbg !409
  %0 = bitcast [3 x [3 x float]]* %L to i8*, !dbg !410
  call void @llvm.lifetime.start(i64 36, i8* %0) #4, !dbg !410
  call void @llvm.dbg.declare(metadata !{[3 x [3 x float]]* %L}, metadata !233), !dbg !410
  %arraydecay = getelementptr inbounds [3 x float]* %xcm, i64 0, i64 0, !dbg !411
  %arraydecay1 = getelementptr inbounds [3 x float]* %vcm, i64 0, i64 0, !dbg !411
  %arraydecay2 = getelementptr inbounds [3 x float]* %acm, i64 0, i64 0, !dbg !411
  %arraydecay3 = getelementptr inbounds [3 x [3 x float]]* %L, i64 0, i64 0, !dbg !411
  %call = call float @calc_cm(%struct._IO_FILE* undef, i32 %natoms, float* %mass, [3 x float]* %x, [3 x float]* %v, float* %arraydecay, float* %arraydecay1, float* %arraydecay2, [3 x float]* %arraydecay3) #6, !dbg !411
  call void @llvm.dbg.value(metadata !2, i64 0, metadata !237), !dbg !412
  %cmp22 = icmp sgt i32 %natoms, 0, !dbg !412
  br i1 %cmp22, label %for.cond4.preheader, label %for.end13, !dbg !412

for.cond4.preheader:                              ; preds = %entry, %for.inc11
  %indvars.iv24 = phi i64 [ %indvars.iv.next25, %for.inc11 ], [ 0, %entry ]
  br label %for.body6, !dbg !414

for.body6:                                        ; preds = %for.body6, %for.cond4.preheader
  %indvars.iv = phi i64 [ 0, %for.cond4.preheader ], [ %indvars.iv.next, %for.body6 ]
  %arrayidx = getelementptr inbounds [3 x float]* %vcm, i64 0, i64 %indvars.iv, !dbg !416
  %1 = load float* %arrayidx, align 4, !dbg !416, !tbaa !286
  %arrayidx10 = getelementptr inbounds [3 x float]* %v, i64 %indvars.iv24, i64 %indvars.iv, !dbg !416
  %2 = load float* %arrayidx10, align 4, !dbg !416, !tbaa !286
  %sub = fsub float %2, %1, !dbg !416
  store float %sub, float* %arrayidx10, align 4, !dbg !416, !tbaa !286
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !414
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !414
  %exitcond = icmp eq i32 %lftr.wideiv, 3, !dbg !414
  br i1 %exitcond, label %for.inc11, label %for.body6, !dbg !414

for.inc11:                                        ; preds = %for.body6
  %indvars.iv.next25 = add i64 %indvars.iv24, 1, !dbg !412
  %lftr.wideiv26 = trunc i64 %indvars.iv.next25 to i32, !dbg !412
  %exitcond27 = icmp eq i32 %lftr.wideiv26, %natoms, !dbg !412
  br i1 %exitcond27, label %for.end13, label %for.cond4.preheader, !dbg !412

for.end13:                                        ; preds = %for.inc11, %entry
  call void @llvm.lifetime.end(i64 36, i8* %0) #4, !dbg !417
  ret void, !dbg !417
}
