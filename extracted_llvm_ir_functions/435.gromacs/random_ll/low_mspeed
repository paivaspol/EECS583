define void @low_mspeed(float %tempi, i32 %nrdf, i32 %seed, i32 %nat, i32* nocapture readonly %a, %struct.t_atoms* nocapture readonly %atoms, [3 x float]* nocapture %v) #3 {
  %ig = alloca i32, align 4
  store i32 %seed, i32* %ig, align 4, !tbaa !14
  %1 = fpext float %tempi to double
  %2 = fmul double %1, 0x3F810732CDE67DC4
  %3 = fptrunc double %2 to float
  %4 = icmp sgt i32 %nat, 0
  br i1 %4, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %0
  %5 = getelementptr inbounds %struct.t_atoms* %atoms, i64 0, i32 1
  %6 = add i32 %nat, -1
  br label %7

; <label>:7                                       ; preds = %.loopexit3, %.lr.ph
  %indvars.iv17 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next18, %.loopexit3 ]
  %ekin.08 = phi float [ 0.000000e+00, %.lr.ph ], [ %ekin.2, %.loopexit3 ]
  %8 = getelementptr inbounds i32* %a, i64 %indvars.iv17
  %9 = load i32* %8, align 4, !tbaa !14
  %10 = sext i32 %9 to i64
  %11 = load %struct.t_atom** %5, align 8, !tbaa !15
  %12 = getelementptr inbounds %struct.t_atom* %11, i64 %10, i32 0
  %13 = load float* %12, align 4, !tbaa !18
  %14 = fcmp ogt float %13, 0.000000e+00
  br i1 %14, label %15, label %.loopexit3

; <label>:15                                      ; preds = %7
  %16 = fdiv float %3, %13
  %sqrtf1 = call float @sqrtf(float %16) #7
  %17 = fpext float %sqrtf1 to double
  %18 = fpext float %13 to double
  %19 = fmul double %18, 5.000000e-01
  br label %.preheader2

.preheader2:                                      ; preds = %gauss.exit, %15
  %indvars.iv14 = phi i64 [ 0, %15 ], [ %indvars.iv.next15, %gauss.exit ]
  %ekin.16 = phi float [ %ekin.08, %15 ], [ %35, %gauss.exit ]
  br label %20

; <label>:20                                      ; preds = %.preheader2, %20
  %a.02.i = phi float [ %22, %20 ], [ 0.000000e+00, %.preheader2 ]
  %i.01.i = phi i32 [ %23, %20 ], [ 0, %.preheader2 ]
  %21 = call float @rando(i32* %ig) #6
  %22 = fadd float %a.02.i, %21
  %23 = add nuw nsw i32 %i.01.i, 1
  %exitcond.i = icmp eq i32 %23, 12
  br i1 %exitcond.i, label %gauss.exit, label %20

gauss.exit:                                       ; preds = %20
  %24 = fpext float %22 to double
  %25 = fadd double %24, -6.000000e+00
  %26 = fmul double %17, %25
  %27 = fadd double %26, 0.000000e+00
  %28 = fptrunc double %27 to float
  %29 = getelementptr inbounds [3 x float]* %v, i64 %10, i64 %indvars.iv14
  store float %28, float* %29, align 4, !tbaa !21
  %30 = fpext float %28 to double
  %31 = fmul double %19, %30
  %32 = fmul double %30, %31
  %33 = fpext float %ekin.16 to double
  %34 = fadd double %33, %32
  %35 = fptrunc double %34 to float
  %indvars.iv.next15 = add nuw nsw i64 %indvars.iv14, 1
  %exitcond16 = icmp eq i64 %indvars.iv.next15, 3
  br i1 %exitcond16, label %.loopexit3, label %.preheader2

.loopexit3:                                       ; preds = %gauss.exit, %7
  %ekin.2 = phi float [ %ekin.08, %7 ], [ %35, %gauss.exit ]
  %indvars.iv.next18 = add nuw nsw i64 %indvars.iv17, 1
  %lftr.wideiv19 = trunc i64 %indvars.iv17 to i32
  %exitcond20 = icmp eq i32 %lftr.wideiv19, %6
  br i1 %exitcond20, label %._crit_edge, label %7

._crit_edge:                                      ; preds = %.loopexit3, %0
  %ekin.0.lcssa = phi float [ 0.000000e+00, %0 ], [ %ekin.2, %.loopexit3 ]
  %36 = fpext float %ekin.0.lcssa to double
  %37 = fmul double %36, 2.000000e+00
  %38 = sitofp i32 %nrdf to double
  %39 = fmul double %38, 0x3F810732CDE67DC4
  %40 = fdiv double %37, %39
  %41 = fptrunc double %40 to float
  %42 = fcmp ogt float %41, 0.000000e+00
  br i1 %42, label %43, label %.loopexit

; <label>:43                                      ; preds = %._crit_edge
  %44 = fdiv float %tempi, %41
  %sqrtf = call float @sqrtf(float %44) #7
  br i1 %4, label %.preheader.lr.ph, label %.loopexit

.preheader.lr.ph:                                 ; preds = %43
  %45 = add i32 %nat, -1
  br label %.preheader

.preheader:                                       ; preds = %53, %.preheader.lr.ph
  %indvars.iv11 = phi i64 [ 0, %.preheader.lr.ph ], [ %indvars.iv.next12, %53 ]
  %46 = getelementptr inbounds i32* %a, i64 %indvars.iv11
  %47 = load i32* %46, align 4, !tbaa !14
  %48 = sext i32 %47 to i64
  br label %49

; <label>:49                                      ; preds = %49, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %49 ]
  %50 = getelementptr inbounds [3 x float]* %v, i64 %48, i64 %indvars.iv
  %51 = load float* %50, align 4, !tbaa !21
  %52 = fmul float %sqrtf, %51
  store float %52, float* %50, align 4, !tbaa !21
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %53, label %49

; <label>:53                                      ; preds = %49
  %indvars.iv.next12 = add nuw nsw i64 %indvars.iv11, 1
  %lftr.wideiv = trunc i64 %indvars.iv11 to i32
  %exitcond13 = icmp eq i32 %lftr.wideiv, %45
  br i1 %exitcond13, label %.loopexit, label %.preheader

.loopexit:                                        ; preds = %53, %43, %._crit_edge
  %54 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !22
  %55 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %54, i8* getelementptr inbounds ([59 x i8]* @.str, i64 0, i64 0), double %1) #6
  %56 = load %struct.__sFILE** @debug, align 8, !tbaa !22
  %57 = icmp eq %struct.__sFILE* %56, null
  br i1 %57, label %61, label %58

; <label>:58                                      ; preds = %.loopexit
  %59 = fpext float %41 to double
  %60 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %56, i8* getelementptr inbounds ([109 x i8]* @.str1, i64 0, i64 0), double %59, double %1) #6
  br label %61

; <label>:61                                      ; preds = %.loopexit, %58
  ret void
}
