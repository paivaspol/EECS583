define i32 @bshakef(%struct.__sFILE* %log, i32 %natoms, float* %invmass, i32 %nblocks, i32* nocapture readonly %sblock, %struct.t_idef* nocapture readonly %idef, %struct.t_inputrec* nocapture readonly %ir, [3 x float]* nocapture readnone %box, [3 x float]* nocapture readonly %x_s, [3 x float]* %xp, %struct.t_nrnb* nocapture %nrnb, float %lambda, float* nocapture %dvdlambda, i32 %bDumpOnError) #3 {
  %1 = getelementptr inbounds %struct.t_idef* %idef, i64 0, i32 5, i64 27, i32 0
  %2 = load i32* %1, align 4, !tbaa !21
  %3 = sdiv i32 %2, 3
  %.b = load i1* @bshakef.bFirst, align 1
  br i1 %.b, label %.preheader, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 67
  %6 = load i32* %5, align 4, !tbaa !23
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %4
  tail call void @please_cite(%struct.__sFILE* %log, i8* getelementptr inbounds ([9 x i8]* @.str8, i64 0, i64 0)) #6
  br label %9

; <label>:9                                       ; preds = %4, %8
  %10 = tail call i8* @save_calloc(i8* getelementptr inbounds ([5 x i8]* @.str9, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8]* @.str2, i64 0, i64 0), i32 280, i32 %3, i32 4) #6
  store i8* %10, i8** bitcast (float** @bshakef.lagr to i8**), align 8, !tbaa !17
  store i1 true, i1* @bshakef.bFirst, align 1
  br label %.preheader

.preheader:                                       ; preds = %0, %9
  %11 = icmp sgt i32 %2, 2
  br i1 %11, label %.lr.ph19, label %16

.lr.ph19:                                         ; preds = %.preheader
  %12 = load i8** bitcast (float** @bshakef.lagr to i8**), align 8, !tbaa !17
  %13 = icmp sgt i32 %2, 5
  %.op = add nsw i32 %3, -1
  %14 = zext i32 %.op to i64
  %.op37 = shl nuw nsw i64 %14, 2
  %.op37.op = add nuw nsw i64 %.op37, 4
  %15 = select i1 %13, i64 %.op37.op, i64 4
  call void @llvm.memset.p0i8.i64(i8* %12, i8 0, i64 %15, i32 4, i1 false)
  br label %16

; <label>:16                                      ; preds = %.lr.ph19, %.preheader
  %17 = getelementptr inbounds %struct.t_idef* %idef, i64 0, i32 5, i64 27, i32 2
  %18 = icmp sgt i32 %nblocks, 0
  br i1 %18, label %.lr.ph14, label %._crit_edge35

._crit_edge35:                                    ; preds = %16
  %.pre36 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 46
  br label %130

.lr.ph14:                                         ; preds = %16
  %19 = load float** @bshakef.lagr, align 8, !tbaa !17
  %20 = load i32** %17, align 8, !tbaa !26
  %21 = load i32* %sblock, align 4, !tbaa !16
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i32* %20, i64 %22
  %24 = getelementptr inbounds %struct.t_idef* %idef, i64 0, i32 4
  %25 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 44
  %26 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 46
  %27 = sext i32 %nblocks to i64
  br label %28

; <label>:28                                      ; preds = %._crit_edge32, %.lr.ph14
  %29 = phi i32 [ %21, %.lr.ph14 ], [ %.pre, %._crit_edge32 ]
  %indvars.iv28 = phi i64 [ 0, %.lr.ph14 ], [ %indvars.iv.next29, %._crit_edge32 ]
  %trij.012 = phi i32 [ 0, %.lr.ph14 ], [ %123, %._crit_edge32 ]
  %tnit.011 = phi i32 [ 0, %.lr.ph14 ], [ %122, %._crit_edge32 ]
  %iatoms.010 = phi i32* [ %23, %.lr.ph14 ], [ %129, %._crit_edge32 ]
  %lam.09 = phi float* [ %19, %.lr.ph14 ], [ %126, %._crit_edge32 ]
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1
  %30 = getelementptr inbounds i32* %sblock, i64 %indvars.iv.next29
  %31 = load i32* %30, align 4, !tbaa !16
  %32 = sub nsw i32 %31, %29
  %33 = sdiv i32 %32, 3
  %34 = load %union.t_iparams** %24, align 8, !tbaa !27
  %35 = load float* %25, align 4, !tbaa !29
  %36 = load float* @bshakef.omega, align 4, !tbaa !14
  %37 = load i32* %26, align 4, !tbaa !30
  %38 = icmp ne i32 %37, 0
  %39 = zext i1 %38 to i32
  %40 = tail call i32 @vec_shakef(%struct.__sFILE* %log, i32 undef, float* %invmass, i32 %33, %union.t_iparams* %34, i32* %iatoms.010, float %35, [3 x float]* %x_s, [3 x float]* %xp, float %36, i32 %39, float %lambda, float* %lam.09) #8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %120

; <label>:42                                      ; preds = %28
  %43 = icmp eq i32 %bDumpOnError, 0
  br i1 %43, label %check_cons.exit, label %44

; <label>:44                                      ; preds = %42
  %45 = load %union.t_iparams** %24, align 8, !tbaa !27
  %46 = icmp ne %struct.__sFILE* %log, null
  br i1 %46, label %47, label %.preheader.i

; <label>:47                                      ; preds = %44
  %48 = tail call i64 @fwrite(i8* getelementptr inbounds ([64 x i8]* @.str10, i64 0, i64 0), i64 63, i64 1, %struct.__sFILE* %log) #5
  br label %.preheader.i

.preheader.i:                                     ; preds = %47, %44
  %49 = icmp sgt i32 %32, 2
  br i1 %49, label %.lr.ph.i, label %check_cons.exit

.lr.ph.i:                                         ; preds = %.preheader.i
  %50 = add nsw i32 %33, -1
  br label %51

; <label>:51                                      ; preds = %117, %.lr.ph.i
  %ia.03.i = phi i32* [ %iatoms.010, %.lr.ph.i ], [ %119, %117 ]
  %i.02.i = phi i32 [ 0, %.lr.ph.i ], [ %118, %117 ]
  %52 = getelementptr inbounds i32* %ia.03.i, i64 1
  %53 = load i32* %52, align 4, !tbaa !16
  %54 = getelementptr inbounds i32* %ia.03.i, i64 2
  %55 = load i32* %54, align 4, !tbaa !16
  %56 = sext i32 %53 to i64
  %57 = getelementptr inbounds [3 x float]* %x_s, i64 %56, i64 0
  %58 = sext i32 %55 to i64
  %59 = getelementptr inbounds [3 x float]* %x_s, i64 %58, i64 0
  %60 = load float* %57, align 4, !tbaa !14
  %61 = load float* %59, align 4, !tbaa !14
  %62 = fsub float %60, %61
  %63 = getelementptr inbounds [3 x float]* %x_s, i64 %56, i64 1
  %64 = load float* %63, align 4, !tbaa !14
  %65 = getelementptr inbounds [3 x float]* %x_s, i64 %58, i64 1
  %66 = load float* %65, align 4, !tbaa !14
  %67 = fsub float %64, %66
  %68 = getelementptr inbounds [3 x float]* %x_s, i64 %56, i64 2
  %69 = load float* %68, align 4, !tbaa !14
  %70 = getelementptr inbounds [3 x float]* %x_s, i64 %58, i64 2
  %71 = load float* %70, align 4, !tbaa !14
  %72 = fsub float %69, %71
  %73 = getelementptr inbounds [3 x float]* %xp, i64 %56, i64 0
  %74 = getelementptr inbounds [3 x float]* %xp, i64 %58, i64 0
  %75 = load float* %73, align 4, !tbaa !14
  %76 = load float* %74, align 4, !tbaa !14
  %77 = fsub float %75, %76
  %78 = getelementptr inbounds [3 x float]* %xp, i64 %56, i64 1
  %79 = load float* %78, align 4, !tbaa !14
  %80 = getelementptr inbounds [3 x float]* %xp, i64 %58, i64 1
  %81 = load float* %80, align 4, !tbaa !14
  %82 = fsub float %79, %81
  %83 = getelementptr inbounds [3 x float]* %xp, i64 %56, i64 2
  %84 = load float* %83, align 4, !tbaa !14
  %85 = getelementptr inbounds [3 x float]* %xp, i64 %58, i64 2
  %86 = load float* %85, align 4, !tbaa !14
  %87 = fsub float %84, %86
  br i1 %46, label %88, label %117

; <label>:88                                      ; preds = %51
  %89 = fmul float %77, %77
  %90 = fmul float %82, %82
  %91 = fadd float %89, %90
  %92 = fmul float %87, %87
  %93 = fadd float %91, %92
  %sqrtf.i.i = tail call float @sqrtf(float %93) #7
  %94 = fmul float %62, %62
  %95 = fmul float %67, %67
  %96 = fadd float %94, %95
  %97 = fmul float %72, %72
  %98 = fadd float %96, %97
  %sqrtf.i1.i = tail call float @sqrtf(float %98) #7
  %99 = add nsw i32 %53, 1
  %100 = getelementptr inbounds float* %invmass, i64 %56
  %101 = load float* %100, align 4, !tbaa !14
  %102 = fpext float %101 to double
  %103 = fdiv double 1.000000e+00, %102
  %104 = add nsw i32 %55, 1
  %105 = getelementptr inbounds float* %invmass, i64 %58
  %106 = load float* %105, align 4, !tbaa !14
  %107 = fpext float %106 to double
  %108 = fdiv double 1.000000e+00, %107
  %109 = fpext float %sqrtf.i1.i to double
  %110 = fpext float %sqrtf.i.i to double
  %111 = load i32* %ia.03.i, align 4, !tbaa !16
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds %union.t_iparams* %45, i64 %112, i32 0, i32 0
  %114 = load float* %113, align 4, !tbaa !18
  %115 = fpext float %114 to double
  %116 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %log, i8* getelementptr inbounds ([48 x i8]* @.str11, i64 0, i64 0), i32 %99, double %103, i32 %104, double %108, double %109, double %110, double %115) #6
  br label %117

; <label>:117                                     ; preds = %88, %51
  %118 = add nuw nsw i32 %i.02.i, 1
  %119 = getelementptr inbounds i32* %ia.03.i, i64 3
  %exitcond.i = icmp eq i32 %i.02.i, %50
  br i1 %exitcond.i, label %check_cons.exit, label %51

; <label>:120                                     ; preds = %28
  %121 = mul nsw i32 %40, %33
  %122 = add nsw i32 %121, %tnit.011
  %123 = add nsw i32 %33, %trij.012
  %124 = icmp slt i64 %indvars.iv.next29, %27
  br i1 %124, label %._crit_edge32, label %._crit_edge15

._crit_edge32:                                    ; preds = %120
  %125 = sext i32 %33 to i64
  %126 = getelementptr inbounds float* %lam.09, i64 %125
  %127 = mul nsw i32 %33, 3
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i32* %iatoms.010, i64 %128
  %.pre = load i32* %30, align 4, !tbaa !16
  br label %28

._crit_edge15:                                    ; preds = %120
  %phitmp = sitofp i32 %123 to double
  br label %130

; <label>:130                                     ; preds = %._crit_edge35, %._crit_edge15
  %.pre-phi = phi i32* [ %.pre36, %._crit_edge35 ], [ %26, %._crit_edge15 ]
  %trij.0.lcssa = phi double [ 0.000000e+00, %._crit_edge35 ], [ %phitmp, %._crit_edge15 ]
  %tnit.0.lcssa = phi i32 [ 0, %._crit_edge35 ], [ %122, %._crit_edge15 ]
  %131 = load i32* %.pre-phi, align 4, !tbaa !30
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %161, label %133

; <label>:133                                     ; preds = %130
  %134 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 15
  %135 = load float* %134, align 4, !tbaa !31
  %136 = fmul float %135, %135
  %137 = fdiv float 1.000000e+00, %136
  br i1 %11, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %133
  %138 = load i32** %17, align 8, !tbaa !26
  %139 = load float** @bshakef.lagr, align 8, !tbaa !17
  %140 = getelementptr inbounds %struct.t_idef* %idef, i64 0, i32 4
  %141 = load %union.t_iparams** %140, align 8, !tbaa !27
  %142 = sext i32 %3 to i64
  br label %143

; <label>:143                                     ; preds = %.lr.ph, %143
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %143 ]
  %dvdl.06 = phi float [ 0.000000e+00, %.lr.ph ], [ %157, %143 ]
  %144 = mul nsw i64 %indvars.iv, 3
  %145 = getelementptr inbounds i32* %138, i64 %144
  %146 = load i32* %145, align 4, !tbaa !16
  %147 = getelementptr inbounds float* %139, i64 %indvars.iv
  %148 = load float* %147, align 4, !tbaa !14
  %149 = fmul float %137, %148
  %150 = sext i32 %146 to i64
  %151 = getelementptr inbounds %union.t_iparams* %141, i64 %150, i32 0, i32 1
  %152 = load float* %151, align 4, !tbaa !20
  %153 = getelementptr inbounds %union.t_iparams* %141, i64 %150, i32 0, i32 0
  %154 = load float* %153, align 4, !tbaa !18
  %155 = fsub float %152, %154
  %156 = fmul float %149, %155
  %157 = fadd float %dvdl.06, %156
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %158 = icmp slt i64 %indvars.iv.next, %142
  br i1 %158, label %143, label %._crit_edge

._crit_edge:                                      ; preds = %143, %133
  %dvdl.0.lcssa = phi float [ 0.000000e+00, %133 ], [ %157, %143 ]
  %159 = load float* %dvdlambda, align 4, !tbaa !14
  %160 = fadd float %dvdl.0.lcssa, %159
  store float %160, float* %dvdlambda, align 4, !tbaa !14
  br label %161

; <label>:161                                     ; preds = %130, %._crit_edge
  %162 = getelementptr inbounds %struct.t_inputrec* %ir, i64 0, i32 67
  %163 = load i32* %162, align 4, !tbaa !23
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %174, label %165

; <label>:165                                     ; preds = %161
  %166 = load i32* @bshakef.gamma, align 4, !tbaa !16
  %167 = icmp sgt i32 %tnit.0.lcssa, %166
  %168 = load float* @bshakef.delta, align 4, !tbaa !14
  br i1 %167, label %169, label %._crit_edge33

; <label>:169                                     ; preds = %165
  %170 = fmul float %168, -5.000000e-01
  store float %170, float* @bshakef.delta, align 4, !tbaa !14
  br label %._crit_edge33

._crit_edge33:                                    ; preds = %165, %169
  %171 = phi float [ %170, %169 ], [ %168, %165 ]
  %172 = load float* @bshakef.omega, align 4, !tbaa !14
  %173 = fadd float %172, %171
  store float %173, float* @bshakef.omega, align 4, !tbaa !14
  store i32 %tnit.0.lcssa, i32* @bshakef.gamma, align 4, !tbaa !16
  br label %174

; <label>:174                                     ; preds = %161, %._crit_edge33
  %175 = sitofp i32 %tnit.0.lcssa to double
  %176 = getelementptr inbounds %struct.t_nrnb* %nrnb, i64 0, i32 0, i64 115
  %177 = load double* %176, align 8, !tbaa !32
  %178 = fadd double %175, %177
  store double %178, double* %176, align 8, !tbaa !32
  %179 = getelementptr inbounds %struct.t_nrnb* %nrnb, i64 0, i32 0, i64 117
  %180 = load double* %179, align 8, !tbaa !32
  %181 = fadd double %trij.0.lcssa, %180
  store double %181, double* %179, align 8, !tbaa !32
  br label %check_cons.exit

check_cons.exit:                                  ; preds = %117, %.preheader.i, %42, %174
  %.0 = phi i32 [ 1, %174 ], [ 0, %42 ], [ 0, %.preheader.i ], [ 0, %117 ]
  ret i32 %.0
}
