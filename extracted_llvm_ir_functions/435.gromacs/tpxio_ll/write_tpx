define void @write_tpx(i8* %fn, i32 %step, float %t, float %lambda, %struct.t_inputrec* %ir, [3 x float]* %box, i32 %natoms, [3 x float]* %x, [3 x float]* %v, [3 x float]* %f, %struct.t_topology* %top) #0 {
entry:
  %step.addr = alloca i32, align 4
  %t.addr = alloca float, align 4
  %lambda.addr = alloca float, align 4
  %natoms.addr = alloca i32, align 4
  store i32 %step, i32* %step.addr, align 4, !tbaa !3
  store float %t, float* %t.addr, align 4, !tbaa !4
  store float %lambda, float* %lambda.addr, align 4, !tbaa !4
  store i32 %natoms, i32* %natoms.addr, align 4, !tbaa !3
  %call.i = call i32 @gmx_fio_open(i8* %fn, i8* getelementptr inbounds ([2 x i8]* @.str58, i64 0, i64 0)) #5
  call fastcc void @do_tpx(i32 %call.i, i32 0, i32* %step.addr, float* %t.addr, float* %lambda.addr, %struct.t_inputrec* %ir, [3 x float]* %box, i32* %natoms.addr, [3 x float]* %x, [3 x float]* %v, [3 x float]* %f, %struct.t_topology* %top) #6
  call void @gmx_fio_close(i32 %call.i) #5
  ret void
}
