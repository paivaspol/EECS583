define internal fastcc void @do_block(%struct.t_block* %block, i32 %bRead) #0 {
entry:
  %buf = alloca [128 x i8], align 16
  %buf36 = alloca [128 x i8], align 16
  %buf66 = alloca [128 x i8], align 16
  %0 = getelementptr inbounds [128 x i8]* %buf, i64 0, i64 0
  %tobool1 = icmp eq i32 %bRead, 0
  br label %for.body

for.body:                                         ; preds = %land.end, %entry
  %indvars.iv139 = phi i64 [ 0, %entry ], [ %indvars.iv.next140, %land.end ]
  %bDum.0136 = phi i32 [ 1, %entry ], [ %land.ext, %land.end ]
  call void @llvm.lifetime.start(i64 128, i8* %0) #1
  %1 = trunc i64 %indvars.iv139 to i32
  %call = call i32 (i8*, i8*, ...)* @sprintf(i8* %0, i8* getelementptr inbounds ([7 x i8]* @.str47, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8]* @.str68, i64 0, i64 0), i32 %1) #5
  %tobool = icmp eq i32 %bDum.0136, 0
  br i1 %tobool, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %for.body
  br i1 %tobool1, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.rhs
  %2 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_read, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %struct.t_block* %block, i64 0, i32 0, i64 %indvars.iv139
  %3 = bitcast i32* %arrayidx to i8*
  %call3 = call i32 %2(i8* %3, i32 1, i32 1, i8* %0, i8* getelementptr inbounds ([53 x i8]* @.str1, i64 0, i64 0), i32 549) #5
  br label %cond.end

cond.false:                                       ; preds = %land.rhs
  %4 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_write, align 8, !tbaa !0
  %arrayidx6 = getelementptr inbounds %struct.t_block* %block, i64 0, i32 0, i64 %indvars.iv139
  %5 = bitcast i32* %arrayidx6 to i8*
  %call8 = call i32 %4(i8* %5, i32 1, i32 1, i8* %0, i8* getelementptr inbounds ([53 x i8]* @.str1, i64 0, i64 0), i32 549) #5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call3, %cond.true ], [ %call8, %cond.false ]
  %tobool9 = icmp ne i32 %cond, 0
  br label %land.end

land.end:                                         ; preds = %for.body, %cond.end
  %6 = phi i1 [ false, %for.body ], [ %tobool9, %cond.end ]
  %land.ext = zext i1 %6 to i32
  call void @llvm.lifetime.end(i64 128, i8* %0) #1
  %indvars.iv.next140 = add i64 %indvars.iv139, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next140 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 256
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %land.end
  %tobool10 = icmp ne i32 %bRead, 0
  br i1 %tobool10, label %if.then, label %cond.end24

cond.end24:                                       ; preds = %for.end
  %7 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_write, align 8, !tbaa !0
  %nr14 = getelementptr inbounds %struct.t_block* %block, i64 0, i32 1
  %8 = bitcast i32* %nr14 to i8*
  %call15 = call i32 %7(i8* %8, i32 1, i32 1, i8* getelementptr inbounds ([10 x i8]* @.str69, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8]* @.str1, i64 0, i64 0), i32 550) #5
  %9 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_write, align 8, !tbaa !0
  %nra22 = getelementptr inbounds %struct.t_block* %block, i64 0, i32 3
  %10 = bitcast i32* %nra22 to i8*
  %call23 = call i32 %9(i8* %10, i32 1, i32 1, i8* getelementptr inbounds ([11 x i8]* @.str70, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8]* @.str1, i64 0, i64 0), i32 551) #5
  br label %for.cond31.preheader

if.then:                                          ; preds = %for.end
  %11 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_read, align 8, !tbaa !0
  %nr = getelementptr inbounds %struct.t_block* %block, i64 0, i32 1
  %12 = bitcast i32* %nr to i8*
  %call12 = call i32 %11(i8* %12, i32 1, i32 1, i8* getelementptr inbounds ([10 x i8]* @.str69, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8]* @.str1, i64 0, i64 0), i32 550) #5
  %13 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_read, align 8, !tbaa !0
  %nra = getelementptr inbounds %struct.t_block* %block, i64 0, i32 3
  %14 = bitcast i32* %nra to i8*
  %call20 = call i32 %13(i8* %14, i32 1, i32 1, i8* getelementptr inbounds ([11 x i8]* @.str70, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8]* @.str1, i64 0, i64 0), i32 551) #5
  %15 = load i32* %nr, align 4, !tbaa !3
  %add = add nsw i32 %15, 1
  %call28 = call i8* @save_calloc(i8* getelementptr inbounds ([13 x i8]* @.str71, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8]* @.str1, i64 0, i64 0), i32 553, i32 %add, i32 4) #5
  %16 = bitcast i8* %call28 to i32*
  %index = getelementptr inbounds %struct.t_block* %block, i64 0, i32 2
  store i32* %16, i32** %index, align 8, !tbaa !0
  %17 = load i32* %nra, align 4, !tbaa !3
  %call30 = call i8* @save_calloc(i8* getelementptr inbounds ([9 x i8]* @.str72, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8]* @.str1, i64 0, i64 0), i32 554, i32 %17, i32 4) #5
  %18 = bitcast i8* %call30 to i32*
  %a = getelementptr inbounds %struct.t_block* %block, i64 0, i32 4
  store i32* %18, i32** %a, align 8, !tbaa !0
  br label %for.cond31.preheader

for.cond31.preheader:                             ; preds = %if.then, %cond.end24
  %nr32 = getelementptr inbounds %struct.t_block* %block, i64 0, i32 1
  %19 = load i32* %nr32, align 4, !tbaa !3
  %cmp34132 = icmp sgt i32 %19, -1
  br i1 %cmp34132, label %for.body35.lr.ph, label %for.cond62.preheader

for.body35.lr.ph:                                 ; preds = %for.cond31.preheader
  %20 = getelementptr inbounds [128 x i8]* %buf36, i64 0, i64 0
  %index44 = getelementptr inbounds %struct.t_block* %block, i64 0, i32 2
  br label %for.body35

for.cond62.preheader:                             ; preds = %land.end57, %for.cond31.preheader
  %nra63 = getelementptr inbounds %struct.t_block* %block, i64 0, i32 3
  %21 = load i32* %nra63, align 4, !tbaa !3
  %cmp64128 = icmp sgt i32 %21, 0
  br i1 %cmp64128, label %for.body65.lr.ph, label %for.end91

for.body65.lr.ph:                                 ; preds = %for.cond62.preheader
  %22 = getelementptr inbounds [128 x i8]* %buf66, i64 0, i64 0
  %a74 = getelementptr inbounds %struct.t_block* %block, i64 0, i32 4
  br label %for.body65

for.body35:                                       ; preds = %for.body35.lr.ph, %land.end57
  %indvars.iv137 = phi i64 [ 0, %for.body35.lr.ph ], [ %indvars.iv.next138, %land.end57 ]
  %bDum.1134 = phi i32 [ 1, %for.body35.lr.ph ], [ %land.ext58, %land.end57 ]
  call void @llvm.lifetime.start(i64 128, i8* %20) #1
  %23 = trunc i64 %indvars.iv137 to i32
  %call38 = call i32 (i8*, i8*, ...)* @sprintf(i8* %20, i8* getelementptr inbounds ([7 x i8]* @.str47, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8]* @.str71, i64 0, i64 0), i32 %23) #5
  %tobool39 = icmp eq i32 %bDum.1134, 0
  br i1 %tobool39, label %land.end57, label %land.rhs40

land.rhs40:                                       ; preds = %for.body35
  br i1 %tobool10, label %cond.true42, label %cond.false48

cond.true42:                                      ; preds = %land.rhs40
  %24 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_read, align 8, !tbaa !0
  %25 = load i32** %index44, align 8, !tbaa !0
  %arrayidx45 = getelementptr inbounds i32* %25, i64 %indvars.iv137
  %26 = bitcast i32* %arrayidx45 to i8*
  %call47 = call i32 %24(i8* %26, i32 1, i32 1, i8* %20, i8* getelementptr inbounds ([53 x i8]* @.str1, i64 0, i64 0), i32 556) #5
  br label %cond.end54

cond.false48:                                     ; preds = %land.rhs40
  %27 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_write, align 8, !tbaa !0
  %28 = load i32** %index44, align 8, !tbaa !0
  %arrayidx51 = getelementptr inbounds i32* %28, i64 %indvars.iv137
  %29 = bitcast i32* %arrayidx51 to i8*
  %call53 = call i32 %27(i8* %29, i32 1, i32 1, i8* %20, i8* getelementptr inbounds ([53 x i8]* @.str1, i64 0, i64 0), i32 556) #5
  br label %cond.end54

cond.end54:                                       ; preds = %cond.false48, %cond.true42
  %cond55 = phi i32 [ %call47, %cond.true42 ], [ %call53, %cond.false48 ]
  %tobool56 = icmp ne i32 %cond55, 0
  br label %land.end57

land.end57:                                       ; preds = %for.body35, %cond.end54
  %30 = phi i1 [ false, %for.body35 ], [ %tobool56, %cond.end54 ]
  %land.ext58 = zext i1 %30 to i32
  call void @llvm.lifetime.end(i64 128, i8* %20) #1
  %indvars.iv.next138 = add i64 %indvars.iv137, 1
  %31 = load i32* %nr32, align 4, !tbaa !3
  %cmp34 = icmp slt i32 %23, %31
  br i1 %cmp34, label %for.body35, label %for.cond62.preheader

for.body65:                                       ; preds = %for.body65.lr.ph, %land.end87
  %indvars.iv = phi i64 [ 0, %for.body65.lr.ph ], [ %indvars.iv.next, %land.end87 ]
  %bDum.2130 = phi i32 [ 1, %for.body65.lr.ph ], [ %land.ext88, %land.end87 ]
  call void @llvm.lifetime.start(i64 128, i8* %22) #1
  %32 = trunc i64 %indvars.iv to i32
  %call68 = call i32 (i8*, i8*, ...)* @sprintf(i8* %22, i8* getelementptr inbounds ([7 x i8]* @.str47, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str72, i64 0, i64 0), i32 %32) #5
  %tobool69 = icmp eq i32 %bDum.2130, 0
  br i1 %tobool69, label %land.end87, label %land.rhs70

land.rhs70:                                       ; preds = %for.body65
  br i1 %tobool10, label %cond.true72, label %cond.false78

cond.true72:                                      ; preds = %land.rhs70
  %33 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_read, align 8, !tbaa !0
  %34 = load i32** %a74, align 8, !tbaa !0
  %arrayidx75 = getelementptr inbounds i32* %34, i64 %indvars.iv
  %35 = bitcast i32* %arrayidx75 to i8*
  %call77 = call i32 %33(i8* %35, i32 1, i32 1, i8* %22, i8* getelementptr inbounds ([53 x i8]* @.str1, i64 0, i64 0), i32 557) #5
  br label %cond.end84

cond.false78:                                     ; preds = %land.rhs70
  %36 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_write, align 8, !tbaa !0
  %37 = load i32** %a74, align 8, !tbaa !0
  %arrayidx81 = getelementptr inbounds i32* %37, i64 %indvars.iv
  %38 = bitcast i32* %arrayidx81 to i8*
  %call83 = call i32 %36(i8* %38, i32 1, i32 1, i8* %22, i8* getelementptr inbounds ([53 x i8]* @.str1, i64 0, i64 0), i32 557) #5
  br label %cond.end84

cond.end84:                                       ; preds = %cond.false78, %cond.true72
  %cond85 = phi i32 [ %call77, %cond.true72 ], [ %call83, %cond.false78 ]
  %tobool86 = icmp ne i32 %cond85, 0
  br label %land.end87

land.end87:                                       ; preds = %for.body65, %cond.end84
  %39 = phi i1 [ false, %for.body65 ], [ %tobool86, %cond.end84 ]
  %land.ext88 = zext i1 %39 to i32
  call void @llvm.lifetime.end(i64 128, i8* %22) #1
  %indvars.iv.next = add i64 %indvars.iv, 1
  %40 = load i32* %nra63, align 4, !tbaa !3
  %41 = trunc i64 %indvars.iv.next to i32
  %cmp64 = icmp slt i32 %41, %40
  br i1 %cmp64, label %for.body65, label %for.end91

for.end91:                                        ; preds = %land.end87, %for.cond62.preheader
  ret void
}
