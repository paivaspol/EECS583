define internal fastcc void @do_block(%struct.t_block* %block, i32 %bRead) #4 {
  %buf = alloca [128 x i8], align 16
  %buf1 = alloca [128 x i8], align 16
  %buf2 = alloca [128 x i8], align 16
  %1 = getelementptr inbounds [128 x i8]* %buf, i64 0, i64 0
  %2 = icmp eq i32 %bRead, 0
  br label %3

; <label>:3                                       ; preds = %21, %0
  %indvars.iv13 = phi i64 [ 0, %0 ], [ %indvars.iv.next14, %21 ]
  %bDum.010 = phi i32 [ 1, %0 ], [ %23, %21 ]
  call void @llvm.lifetime.start(i64 128, i8* %1) #5
  %4 = trunc i64 %indvars.iv13 to i32
  %5 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %1, i32 0, i64 128, i8* getelementptr inbounds ([7 x i8]* @.str47, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8]* @.str230, i64 0, i64 0), i32 %4) #8
  %6 = icmp eq i32 %bDum.010, 0
  br i1 %6, label %21, label %7

; <label>:7                                       ; preds = %3
  br i1 %2, label %13, label %8

; <label>:8                                       ; preds = %7
  %9 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_read, align 8, !tbaa !18
  %10 = getelementptr inbounds %struct.t_block* %block, i64 0, i32 0, i64 %indvars.iv13
  %11 = bitcast i32* %10 to i8*
  %12 = call i32 %9(i8* %11, i32 1, i32 1, i8* %1, i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 549) #8
  br label %18

; <label>:13                                      ; preds = %7
  %14 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_write, align 8, !tbaa !18
  %15 = getelementptr inbounds %struct.t_block* %block, i64 0, i32 0, i64 %indvars.iv13
  %16 = bitcast i32* %15 to i8*
  %17 = call i32 %14(i8* %16, i32 1, i32 1, i8* %1, i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 549) #8
  br label %18

; <label>:18                                      ; preds = %13, %8
  %19 = phi i32 [ %12, %8 ], [ %17, %13 ]
  %20 = icmp ne i32 %19, 0
  br label %21

; <label>:21                                      ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = zext i1 %22 to i32
  call void @llvm.lifetime.end(i64 128, i8* %1) #5
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1
  %exitcond = icmp eq i64 %indvars.iv.next14, 256
  br i1 %exitcond, label %24, label %3

; <label>:24                                      ; preds = %21
  %25 = icmp ne i32 %bRead, 0
  br i1 %25, label %35, label %26

; <label>:26                                      ; preds = %24
  %27 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_write, align 8, !tbaa !18
  %28 = getelementptr inbounds %struct.t_block* %block, i64 0, i32 1
  %29 = bitcast i32* %28 to i8*
  %30 = call i32 %27(i8* %29, i32 1, i32 1, i8* getelementptr inbounds ([10 x i8]* @.str231, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 550) #8
  %31 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_write, align 8, !tbaa !18
  %32 = getelementptr inbounds %struct.t_block* %block, i64 0, i32 3
  %33 = bitcast i32* %32 to i8*
  %34 = call i32 %31(i8* %33, i32 1, i32 1, i8* getelementptr inbounds ([11 x i8]* @.str232, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 551) #8
  br label %.preheader3

; <label>:35                                      ; preds = %24
  %36 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_read, align 8, !tbaa !18
  %37 = getelementptr inbounds %struct.t_block* %block, i64 0, i32 1
  %38 = bitcast i32* %37 to i8*
  %39 = call i32 %36(i8* %38, i32 1, i32 1, i8* getelementptr inbounds ([10 x i8]* @.str231, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 550) #8
  %40 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_read, align 8, !tbaa !18
  %41 = getelementptr inbounds %struct.t_block* %block, i64 0, i32 3
  %42 = bitcast i32* %41 to i8*
  %43 = call i32 %40(i8* %42, i32 1, i32 1, i8* getelementptr inbounds ([11 x i8]* @.str232, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 551) #8
  %44 = load i32* %37, align 4, !tbaa !103
  %45 = add nsw i32 %44, 1
  %46 = call i8* @save_calloc(i8* getelementptr inbounds ([13 x i8]* @.str233, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 553, i32 %45, i32 4) #8
  %47 = getelementptr inbounds %struct.t_block* %block, i64 0, i32 2
  %48 = bitcast i32** %47 to i8**
  store i8* %46, i8** %48, align 8, !tbaa !104
  %49 = load i32* %41, align 4, !tbaa !107
  %50 = call i8* @save_calloc(i8* getelementptr inbounds ([9 x i8]* @.str234, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 554, i32 %49, i32 4) #8
  %51 = getelementptr inbounds %struct.t_block* %block, i64 0, i32 4
  %52 = bitcast i32** %51 to i8**
  store i8* %50, i8** %52, align 8, !tbaa !105
  br label %.preheader3

.preheader3:                                      ; preds = %35, %26
  %.pre-phi = phi i32* [ %37, %35 ], [ %28, %26 ]
  %53 = load i32* %.pre-phi, align 4, !tbaa !103
  %54 = icmp sgt i32 %53, -1
  br i1 %54, label %.lr.ph8, label %.preheader

.lr.ph8:                                          ; preds = %.preheader3
  %55 = getelementptr inbounds [128 x i8]* %buf1, i64 0, i64 0
  %56 = getelementptr inbounds %struct.t_block* %block, i64 0, i32 2
  br label %62

.preheader:                                       ; preds = %82, %.preheader3
  %57 = getelementptr inbounds %struct.t_block* %block, i64 0, i32 3
  %58 = load i32* %57, align 4, !tbaa !107
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader
  %60 = getelementptr inbounds [128 x i8]* %buf2, i64 0, i64 0
  %61 = getelementptr inbounds %struct.t_block* %block, i64 0, i32 4
  br label %88

; <label>:62                                      ; preds = %.lr.ph8, %82
  %indvars.iv11 = phi i64 [ 0, %.lr.ph8 ], [ %indvars.iv.next12, %82 ]
  %bDum.17 = phi i32 [ 1, %.lr.ph8 ], [ %84, %82 ]
  call void @llvm.lifetime.start(i64 128, i8* %55) #5
  %63 = trunc i64 %indvars.iv11 to i32
  %64 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %55, i32 0, i64 128, i8* getelementptr inbounds ([7 x i8]* @.str47, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8]* @.str233, i64 0, i64 0), i32 %63) #8
  %65 = icmp eq i32 %bDum.17, 0
  br i1 %65, label %82, label %66

; <label>:66                                      ; preds = %62
  br i1 %25, label %67, label %73

; <label>:67                                      ; preds = %66
  %68 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_read, align 8, !tbaa !18
  %69 = load i32** %56, align 8, !tbaa !104
  %70 = getelementptr inbounds i32* %69, i64 %indvars.iv11
  %71 = bitcast i32* %70 to i8*
  %72 = call i32 %68(i8* %71, i32 1, i32 1, i8* %55, i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 556) #8
  br label %79

; <label>:73                                      ; preds = %66
  %74 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_write, align 8, !tbaa !18
  %75 = load i32** %56, align 8, !tbaa !104
  %76 = getelementptr inbounds i32* %75, i64 %indvars.iv11
  %77 = bitcast i32* %76 to i8*
  %78 = call i32 %74(i8* %77, i32 1, i32 1, i8* %55, i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 556) #8
  br label %79

; <label>:79                                      ; preds = %73, %67
  %80 = phi i32 [ %72, %67 ], [ %78, %73 ]
  %81 = icmp ne i32 %80, 0
  br label %82

; <label>:82                                      ; preds = %62, %79
  %83 = phi i1 [ false, %62 ], [ %81, %79 ]
  %84 = zext i1 %83 to i32
  call void @llvm.lifetime.end(i64 128, i8* %55) #5
  %indvars.iv.next12 = add nuw i64 %indvars.iv11, 1
  %85 = load i32* %.pre-phi, align 4, !tbaa !103
  %86 = sext i32 %85 to i64
  %87 = icmp slt i64 %indvars.iv11, %86
  br i1 %87, label %62, label %.preheader

; <label>:88                                      ; preds = %.lr.ph, %108
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %108 ]
  %bDum.25 = phi i32 [ 1, %.lr.ph ], [ %110, %108 ]
  call void @llvm.lifetime.start(i64 128, i8* %60) #5
  %89 = trunc i64 %indvars.iv to i32
  %90 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %60, i32 0, i64 128, i8* getelementptr inbounds ([7 x i8]* @.str47, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str234, i64 0, i64 0), i32 %89) #8
  %91 = icmp eq i32 %bDum.25, 0
  br i1 %91, label %108, label %92

; <label>:92                                      ; preds = %88
  br i1 %25, label %93, label %99

; <label>:93                                      ; preds = %92
  %94 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_read, align 8, !tbaa !18
  %95 = load i32** %61, align 8, !tbaa !105
  %96 = getelementptr inbounds i32* %95, i64 %indvars.iv
  %97 = bitcast i32* %96 to i8*
  %98 = call i32 %94(i8* %97, i32 1, i32 1, i8* %60, i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 557) #8
  br label %105

; <label>:99                                      ; preds = %92
  %100 = load i32 (i8*, i32, i32, i8*, i8*, i32)** @do_write, align 8, !tbaa !18
  %101 = load i32** %61, align 8, !tbaa !105
  %102 = getelementptr inbounds i32* %101, i64 %indvars.iv
  %103 = bitcast i32* %102 to i8*
  %104 = call i32 %100(i8* %103, i32 1, i32 1, i8* %60, i8* getelementptr inbounds ([65 x i8]* @.str1, i64 0, i64 0), i32 557) #8
  br label %105

; <label>:105                                     ; preds = %99, %93
  %106 = phi i32 [ %98, %93 ], [ %104, %99 ]
  %107 = icmp ne i32 %106, 0
  br label %108

; <label>:108                                     ; preds = %88, %105
  %109 = phi i1 [ false, %88 ], [ %107, %105 ]
  %110 = zext i1 %109 to i32
  call void @llvm.lifetime.end(i64 128, i8* %60) #5
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %111 = load i32* %57, align 4, !tbaa !107
  %112 = sext i32 %111 to i64
  %113 = icmp slt i64 %indvars.iv.next, %112
  br i1 %113, label %88, label %._crit_edge

._crit_edge:                                      ; preds = %108, %.preheader
  ret void
}
