define void @init_single(%struct._IO_FILE* %log, %struct.t_parm* %parm, i8* %tpxfile, %struct.t_topology* %top, [3 x float]** nocapture %x, [3 x float]** nocapture %v, %struct.t_mdatoms** nocapture %mdatoms, %struct.t_nsborder* %nsb) #0 {
entry:
  %step = alloca i32, align 4
  %natoms = alloca i32, align 4
  %t = alloca float, align 4
  %lambda = alloca float, align 4
  %call = call i8* @save_calloc(i8* getelementptr inbounds ([4 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8]* @.str2, i64 0, i64 0), i32 110, i32 1, i32 40) #4
  %0 = bitcast i8* %call to %struct.t_tpxheader*
  call void @read_tpxheader(i8* %tpxfile, %struct.t_tpxheader* %0) #4
  %natoms1 = getelementptr inbounds i8* %call, i64 24
  %1 = bitcast i8* %natoms1 to i32*
  %2 = load i32* %1, align 4, !tbaa !0
  %call2 = call i8* @save_calloc(i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8]* @.str2, i64 0, i64 0), i32 113, i32 %2, i32 12) #4
  %3 = bitcast i8* %call2 to [3 x float]*
  store [3 x float]* %3, [3 x float]** %x, align 8, !tbaa !3
  %4 = load i32* %1, align 4, !tbaa !0
  %call4 = call i8* @save_calloc(i8* getelementptr inbounds ([3 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8]* @.str2, i64 0, i64 0), i32 114, i32 %4, i32 12) #4
  %5 = bitcast i8* %call4 to [3 x float]*
  store [3 x float]* %5, [3 x float]** %v, align 8, !tbaa !3
  call void @save_free(i8* getelementptr inbounds ([4 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8]* @.str2, i64 0, i64 0), i32 116, i8* %call) #4
  %ir = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0
  %arraydecay = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 1, i64 0
  %6 = load [3 x float]** %x, align 8, !tbaa !3
  %7 = load [3 x float]** %v, align 8, !tbaa !3
  call void @read_tpx(i8* %tpxfile, i32* %step, float* %t, float* %lambda, %struct.t_inputrec* %ir, [3 x float]* %arraydecay, i32* %natoms, [3 x float]* %6, [3 x float]* %7, [3 x float]* null, %struct.t_topology* %top) #4
  call void @check_nnodes_top(i8* %tpxfile, %struct.t_topology* %top, i32 1) #5
  %atoms = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 2
  %nFreeze = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 8
  %8 = load [3 x i32]** %nFreeze, align 8, !tbaa !3
  %eI = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 0
  %9 = load i32* %eI, align 4, !tbaa !0
  %cmp = icmp eq i32 %9, 3
  %conv = zext i1 %cmp to i32
  %delta_t = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 15
  %10 = load float* %delta_t, align 4, !tbaa !4
  %bd_fric = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 69
  %11 = load float* %bd_fric, align 4, !tbaa !4
  %tau_t = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 80, i32 6
  %12 = load float** %tau_t, align 8, !tbaa !3
  %efep = getelementptr inbounds %struct.t_parm* %parm, i64 0, i32 0, i32 46
  %13 = load i32* %efep, align 4, !tbaa !0
  %cmp12 = icmp ne i32 %13, 0
  %conv13 = zext i1 %cmp12 to i32
  %call14 = call %struct.t_mdatoms* @atoms2md(%struct._IO_FILE* %log, %struct.t_atoms* %atoms, [3 x i32]* %8, i32 %conv, float %10, float %11, float* %12, i32 %conv13, i32 0) #4
  store %struct.t_mdatoms* %call14, %struct.t_mdatoms** %mdatoms, align 8, !tbaa !3
  %tobool = icmp eq %struct._IO_FILE* %log, null
  br i1 %tobool, label %if.end18.critedge, label %if.then

if.then:                                          ; preds = %entry
  call void @pr_inputrec(%struct._IO_FILE* %log, i32 0, i8* getelementptr inbounds ([17 x i8]* @.str5, i64 0, i64 0), %struct.t_inputrec* %ir) #4
  %arrayidx = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 3, i64 0
  call void @calc_nsb(%struct._IO_FILE* %log, %struct.t_block* %arrayidx, i32 1, %struct.t_nsborder* %nsb, i32 0) #4
  call void @print_nsb(%struct._IO_FILE* %log, i8* getelementptr inbounds ([23 x i8]* @.str6, i64 0, i64 0), %struct.t_nsborder* %nsb) #4
  br label %if.end18

if.end18.critedge:                                ; preds = %entry
  %arrayidx.c = getelementptr inbounds %struct.t_topology* %top, i64 0, i32 3, i64 0
  call void @calc_nsb(%struct._IO_FILE* null, %struct.t_block* %arrayidx.c, i32 1, %struct.t_nsborder* %nsb, i32 0) #4
  br label %if.end18

if.end18:                                         ; preds = %if.end18.critedge, %if.then
  ret void
}
