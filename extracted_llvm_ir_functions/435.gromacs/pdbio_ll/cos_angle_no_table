define internal fastcc float @cos_angle_no_table(float* nocapture %a, float* nocapture %b) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{float* %a}, i64 0, metadata !396), !dbg !524
  tail call void @llvm.dbg.value(metadata !{float* %b}, i64 0, metadata !397), !dbg !524
  tail call void @llvm.dbg.value(metadata !525, i64 0, metadata !404), !dbg !526
  tail call void @llvm.dbg.value(metadata !525, i64 0, metadata !403), !dbg !526
  tail call void @llvm.dbg.value(metadata !525, i64 0, metadata !402), !dbg !526
  tail call void @llvm.dbg.value(metadata !41, i64 0, metadata !399), !dbg !527
  br label %for.body, !dbg !527

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %ipb.033 = phi double [ 0.000000e+00, %entry ], [ %add7, %for.body ]
  %ipa.032 = phi double [ 0.000000e+00, %entry ], [ %add5, %for.body ]
  %ip.031 = phi double [ 0.000000e+00, %entry ], [ %add, %for.body ]
  %arrayidx = getelementptr inbounds float* %a, i64 %indvars.iv, !dbg !529
  %0 = load float* %arrayidx, align 4, !dbg !529, !tbaa !446
  %conv = fpext float %0 to double, !dbg !529
  tail call void @llvm.dbg.value(metadata !{double %conv}, i64 0, metadata !400), !dbg !529
  %arrayidx2 = getelementptr inbounds float* %b, i64 %indvars.iv, !dbg !531
  %1 = load float* %arrayidx2, align 4, !dbg !531, !tbaa !446
  %conv3 = fpext float %1 to double, !dbg !531
  tail call void @llvm.dbg.value(metadata !{double %conv3}, i64 0, metadata !401), !dbg !531
  %mul = fmul double %conv, %conv3, !dbg !532
  %add = fadd double %ip.031, %mul, !dbg !532
  tail call void @llvm.dbg.value(metadata !{double %add}, i64 0, metadata !402), !dbg !532
  %mul4 = fmul double %conv, %conv, !dbg !533
  %add5 = fadd double %ipa.032, %mul4, !dbg !533
  tail call void @llvm.dbg.value(metadata !{double %add5}, i64 0, metadata !403), !dbg !533
  %mul6 = fmul double %conv3, %conv3, !dbg !534
  %add7 = fadd double %ipb.033, %mul6, !dbg !534
  tail call void @llvm.dbg.value(metadata !{double %add7}, i64 0, metadata !404), !dbg !534
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !527
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !527
  %exitcond = icmp eq i32 %lftr.wideiv, 3, !dbg !527
  br i1 %exitcond, label %for.end, label %for.body, !dbg !527

for.end:                                          ; preds = %for.body
  %mul8 = fmul double %add5, %add7, !dbg !535
  %call = tail call double @sqrt(double %mul8) #8, !dbg !535
  %div = fdiv double %add, %call, !dbg !535
  %conv9 = fptrunc double %div to float, !dbg !535
  tail call void @llvm.dbg.value(metadata !{float %conv9}, i64 0, metadata !398), !dbg !535
  %cmp11 = fcmp ogt float %conv9, 1.000000e+00, !dbg !536
  br i1 %cmp11, label %return, label %if.end, !dbg !536

if.end:                                           ; preds = %for.end
  %cmp14 = fcmp olt float %conv9, -1.000000e+00, !dbg !537
  %.conv9 = select i1 %cmp14, float -1.000000e+00, float %conv9, !dbg !538
  br label %return, !dbg !538

return:                                           ; preds = %if.end, %for.end
  %retval.0 = phi float [ 1.000000e+00, %for.end ], [ %.conv9, %if.end ]
  ret float %retval.0, !dbg !539
}
