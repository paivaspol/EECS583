define i32 @line2type(i8* nocapture readonly %line) #8 {
  %type = alloca [8 x i8], align 1
  %type5 = getelementptr inbounds [8 x i8]* %type, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %type5, i8* %line, i64 6, i32 1, i1 false)
  %1 = getelementptr inbounds [8 x i8]* %type, i64 0, i64 6
  store i8 0, i8* %1, align 1, !tbaa !13
  %2 = getelementptr inbounds [8 x i8]* %type, i64 0, i64 0
  br label %3

; <label>:3                                       ; preds = %0, %10
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %10 ]
  %k.11 = phi i32 [ 0, %0 ], [ %11, %10 ]
  %4 = getelementptr inbounds [11 x i8*]* @pdbtp, i64 0, i64 %indvars.iv
  %5 = load i8** %4, align 8, !tbaa !28
  %6 = tail call i64 @strlen(i8* %5) #10
  %7 = call i32 @strncmp(i8* %2, i8* %5, i64 %6) #10
  %8 = icmp eq i32 %7, 0
  %9 = trunc i64 %indvars.iv to i32
  br i1 %8, label %13, label %10

; <label>:10                                      ; preds = %3
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %11 = add nuw nsw i32 %k.11, 1
  %12 = icmp slt i64 %indvars.iv.next, 11
  br i1 %12, label %3, label %13

; <label>:13                                      ; preds = %3, %10
  %k.1.lcssa = phi i32 [ %9, %3 ], [ %11, %10 ]
  ret i32 %k.1.lcssa
}
