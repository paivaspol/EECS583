define internal fastcc void @mk_igraph(%struct.t_graph* nocapture %g, i32* nocapture %ftype, %struct.t_ilist* nocapture %il, i32 %natoms, i32 %bAll) #0 {
entry:
  %waterh = alloca [3 x i32], align 4
  %nr = getelementptr inbounds %struct.t_ilist* %il, i64 0, i32 0
  %0 = load i32* %nr, align 4, !tbaa !0
  %cmp81 = icmp sgt i32 %0, 0
  br i1 %cmp81, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %iatoms = getelementptr inbounds %struct.t_ilist* %il, i64 0, i32 2
  %1 = load i32** %iatoms, align 8, !tbaa !3
  %arrayidx15 = getelementptr inbounds [3 x i32]* %waterh, i64 0, i64 0
  %arrayidx17 = getelementptr inbounds [3 x i32]* %waterh, i64 0, i64 1
  %arrayidx20 = getelementptr inbounds [3 x i32]* %waterh, i64 0, i64 2
  %tobool31 = icmp eq i32 %bAll, 0
  %start = getelementptr inbounds %struct.t_graph* %g, i64 0, i32 3
  %nedge = getelementptr inbounds %struct.t_graph* %g, i64 0, i32 5
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %if.end46
  %ia.083 = phi i32* [ %1, %while.body.lr.ph ], [ %add.ptr, %if.end46 ]
  %i.082 = phi i32 [ 0, %while.body.lr.ph ], [ %add49, %if.end46 ]
  %2 = load i32* %ia.083, align 4, !tbaa !0
  %idxprom = sext i32 %2 to i64
  %arrayidx1 = getelementptr inbounds i32* %ftype, i64 %idxprom
  %3 = load i32* %arrayidx1, align 4, !tbaa !0
  %idxprom2 = sext i32 %3 to i64
  %nratoms = getelementptr inbounds [44 x %struct.t_interaction_function]* @interaction_function, i64 0, i64 %idxprom2, i32 2
  %4 = load i32* %nratoms, align 8, !tbaa !0
  %arrayidx4 = getelementptr inbounds i32* %ia.083, i64 1
  %5 = load i32* %arrayidx4, align 4, !tbaa !0
  %cmp5 = icmp slt i32 %5, %natoms
  br i1 %cmp5, label %land.lhs.true, label %if.end46

land.lhs.true:                                    ; preds = %while.body
  %flags = getelementptr inbounds [44 x %struct.t_interaction_function]* @interaction_function, i64 0, i64 %idxprom2, i32 5
  %6 = load i64* %flags, align 8, !tbaa !4
  %and = and i64 %6, 8
  %tobool = icmp eq i64 %and, 0
  br i1 %tobool, label %if.end46, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %idxprom8 = sext i32 %4 to i64
  %arrayidx9 = getelementptr inbounds i32* %ia.083, i64 %idxprom8
  %7 = load i32* %arrayidx9, align 4, !tbaa !0
  %cmp10 = icmp slt i32 %7, %natoms
  br i1 %cmp10, label %if.end, label %if.then11

if.then11:                                        ; preds = %if.then
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([227 x i8]* @.str21, i64 0, i64 0), i32 %natoms, i32 %natoms) #4
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then11
  %cmp12 = icmp eq i32 %3, 29
  br i1 %cmp12, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.end
  %8 = load i32* %arrayidx4, align 4, !tbaa !0
  store i32 %8, i32* %arrayidx15, align 4, !tbaa !0
  %9 = load i32* %arrayidx4, align 4, !tbaa !0
  %add = add nsw i32 %9, 1
  store i32 %add, i32* %arrayidx17, align 4, !tbaa !0
  %10 = load i32* %arrayidx4, align 4, !tbaa !0
  %add19 = add nsw i32 %10, 2
  store i32 %add19, i32* %arrayidx20, align 4, !tbaa !0
  br label %if.end30

if.else:                                          ; preds = %if.end
  %11 = load i64* %flags, align 8, !tbaa !4
  %and24 = and i64 %11, 2
  %tobool25 = icmp eq i64 %and24, 0
  %. = select i1 %tobool25, i32 %4, i32 2
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then13
  %iap.0 = phi i32* [ %arrayidx15, %if.then13 ], [ %arrayidx4, %if.else ]
  %nbonded.1 = phi i32 [ 3, %if.then13 ], [ %., %if.else ]
  br i1 %tobool31, label %for.cond.preheader, label %if.then32

for.cond.preheader:                               ; preds = %if.end30
  %cmp3479 = icmp sgt i32 %nbonded.1, 0
  br i1 %cmp3479, label %for.body.lr.ph, label %if.end46

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %12 = load i32* %start, align 4, !tbaa !0
  %13 = load i32** %nedge, align 8, !tbaa !3
  br label %for.body

if.then32:                                        ; preds = %if.end30
  call fastcc void @add_gbond(%struct.t_graph* %g, i32* %iap.0, i32 %nbonded.1) #5
  br label %if.end46

for.cond:                                         ; preds = %for.body
  %14 = trunc i64 %indvars.iv.next to i32
  %cmp34 = icmp slt i32 %14, %nbonded.1
  br i1 %cmp34, label %for.body, label %if.end46

for.body:                                         ; preds = %for.cond, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %arrayidx36 = getelementptr inbounds i32* %iap.0, i64 %indvars.iv
  %15 = load i32* %arrayidx36, align 4, !tbaa !0
  %sub = sub nsw i32 %15, %12
  %idxprom37 = sext i32 %sub to i64
  %arrayidx38 = getelementptr inbounds i32* %13, i64 %idxprom37
  %16 = load i32* %arrayidx38, align 4, !tbaa !0
  %cmp39 = icmp eq i32 %16, 0
  %indvars.iv.next = add i64 %indvars.iv, 1
  br i1 %cmp39, label %if.then43, label %for.cond

if.then43:                                        ; preds = %for.body
  call fastcc void @add_gbond(%struct.t_graph* %g, i32* %iap.0, i32 %nbonded.1) #5
  br label %if.end46

if.end46:                                         ; preds = %for.cond.preheader, %for.cond, %land.lhs.true, %if.then32, %if.then43, %while.body
  %add47 = add nsw i32 %4, 1
  %idx.ext = sext i32 %add47 to i64
  %add.ptr = getelementptr inbounds i32* %ia.083, i64 %idx.ext
  %add49 = add nsw i32 %add47, %i.082
  %cmp = icmp slt i32 %add49, %0
  br i1 %cmp, label %while.body, label %while.end

while.end:                                        ; preds = %if.end46, %entry
  ret void
}
