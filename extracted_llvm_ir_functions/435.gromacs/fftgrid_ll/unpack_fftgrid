define void @unpack_fftgrid(%struct.t_fftgrid* nocapture %grid, i32* nocapture %nx, i32* nocapture %ny, i32* nocapture %nz, i32* nocapture %la2, i32* nocapture %la12, i32 %bReal, float** nocapture %ptr) #0 {
entry:
  %nx1 = getelementptr inbounds %struct.t_fftgrid* %grid, i64 0, i32 3
  %0 = load i32* %nx1, align 4, !tbaa !0
  store i32 %0, i32* %nx, align 4, !tbaa !0
  %ny2 = getelementptr inbounds %struct.t_fftgrid* %grid, i64 0, i32 4
  %1 = load i32* %ny2, align 4, !tbaa !0
  store i32 %1, i32* %ny, align 4, !tbaa !0
  %nz3 = getelementptr inbounds %struct.t_fftgrid* %grid, i64 0, i32 5
  %2 = load i32* %nz3, align 4, !tbaa !0
  store i32 %2, i32* %nz, align 4, !tbaa !0
  %tobool = icmp eq i32 %bReal, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %la2r = getelementptr inbounds %struct.t_fftgrid* %grid, i64 0, i32 6
  %3 = load i32* %la2r, align 4, !tbaa !0
  store i32 %3, i32* %la2, align 4, !tbaa !0
  %la12r = getelementptr inbounds %struct.t_fftgrid* %grid, i64 0, i32 8
  br label %if.end

if.else:                                          ; preds = %entry
  %la2c = getelementptr inbounds %struct.t_fftgrid* %grid, i64 0, i32 7
  %4 = load i32* %la2c, align 4, !tbaa !0
  store i32 %4, i32* %la2, align 4, !tbaa !0
  %la12c = getelementptr inbounds %struct.t_fftgrid* %grid, i64 0, i32 9
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %storemerge.in = phi i32* [ %la12c, %if.else ], [ %la12r, %if.then ]
  %storemerge = load i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %la12, align 4, !tbaa !0
  %ptr4 = getelementptr inbounds %struct.t_fftgrid* %grid, i64 0, i32 0
  %5 = load float** %ptr4, align 8, !tbaa !3
  store float* %5, float** %ptr, align 8, !tbaa !3
  ret void
}
