define void @clear_cgrid(i32 %nx, i32 %ny, i32 %nz, %struct.t_complex*** nocapture %grid) #0 {
entry:
  %cmp27 = icmp sgt i32 %nx, 0
  br i1 %cmp27, label %for.cond1.preheader.lr.ph, label %for.end16

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %cmp225 = icmp sgt i32 %ny, 0
  %cmp523 = icmp sgt i32 %nz, 0
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.inc14, %for.cond1.preheader.lr.ph
  %indvars.iv33 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next34, %for.inc14 ]
  br i1 %cmp225, label %for.cond4.preheader.lr.ph, label %for.inc14

for.cond4.preheader.lr.ph:                        ; preds = %for.cond1.preheader
  %arrayidx = getelementptr inbounds %struct.t_complex*** %grid, i64 %indvars.iv33
  br label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %for.inc11, %for.cond4.preheader.lr.ph
  %indvars.iv29 = phi i64 [ 0, %for.cond4.preheader.lr.ph ], [ %indvars.iv.next30, %for.inc11 ]
  br i1 %cmp523, label %for.body6, label %for.inc11

for.body6:                                        ; preds = %for.cond4.preheader, %for.body6
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body6 ], [ 0, %for.cond4.preheader ]
  %0 = load %struct.t_complex*** %arrayidx, align 8, !tbaa !3
  %arrayidx9 = getelementptr inbounds %struct.t_complex** %0, i64 %indvars.iv29
  %1 = load %struct.t_complex** %arrayidx9, align 8, !tbaa !3
  %arrayidx10 = getelementptr inbounds %struct.t_complex* %1, i64 %indvars.iv
  %2 = bitcast %struct.t_complex* %arrayidx10 to i64*
  store i64 0, i64* %2, align 4
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nz
  br i1 %exitcond, label %for.inc11, label %for.body6

for.inc11:                                        ; preds = %for.body6, %for.cond4.preheader
  %indvars.iv.next30 = add i64 %indvars.iv29, 1
  %lftr.wideiv31 = trunc i64 %indvars.iv.next30 to i32
  %exitcond32 = icmp eq i32 %lftr.wideiv31, %ny
  br i1 %exitcond32, label %for.inc14, label %for.cond4.preheader

for.inc14:                                        ; preds = %for.inc11, %for.cond1.preheader
  %indvars.iv.next34 = add i64 %indvars.iv33, 1
  %lftr.wideiv35 = trunc i64 %indvars.iv.next34 to i32
  %exitcond36 = icmp eq i32 %lftr.wideiv35, %nx
  br i1 %exitcond36, label %for.end16, label %for.cond1.preheader

for.end16:                                        ; preds = %for.inc14, %entry
  ret void
}
