define internal fastcc void @copy2range(i32 %D, float* nocapture %c, %struct.t_range* nocapture %r) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %D}, i64 0, metadata !157), !dbg !335
  tail call void @llvm.dbg.value(metadata !{float* %c}, i64 0, metadata !158), !dbg !335
  tail call void @llvm.dbg.value(metadata !{%struct.t_range* %r}, i64 0, metadata !159), !dbg !335
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !160), !dbg !336
  %cmp47 = icmp sgt i32 %D, 0, !dbg !336
  br i1 %cmp47, label %while.cond.preheader, label %for.end, !dbg !336

while.cond.preheader:                             ; preds = %entry, %while.end20
  %indvars.iv = phi i64 [ %indvars.iv.next, %while.end20 ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds float* %c, i64 %indvars.iv, !dbg !338
  %0 = load float* %arrayidx, align 4, !dbg !338, !tbaa !192
  %rmin = getelementptr inbounds %struct.t_range* %r, i64 %indvars.iv, i32 3, !dbg !338
  %1 = load float* %rmin, align 4, !dbg !338, !tbaa !192
  %cmp343 = fcmp olt float %0, %1, !dbg !338
  br i1 %cmp343, label %while.body.lr.ph, label %while.cond8.loopexit, !dbg !338

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %dr = getelementptr inbounds %struct.t_range* %r, i64 %indvars.iv, i32 5, !dbg !340
  br label %while.body, !dbg !338

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %2 = phi float [ %0, %while.body.lr.ph ], [ %add, %while.body ]
  %3 = load float* %dr, align 4, !dbg !340, !tbaa !192
  %add = fadd float %2, %3, !dbg !340
  store float %add, float* %arrayidx, align 4, !dbg !340, !tbaa !192
  %4 = load float* %rmin, align 4, !dbg !338, !tbaa !192
  %cmp3 = fcmp olt float %add, %4, !dbg !338
  br i1 %cmp3, label %while.body, label %while.cond8.loopexit, !dbg !338

while.cond8.loopexit:                             ; preds = %while.body, %while.cond.preheader
  %5 = phi float [ %0, %while.cond.preheader ], [ %add, %while.body ]
  %rmax = getelementptr inbounds %struct.t_range* %r, i64 %indvars.iv, i32 4, !dbg !341
  %6 = load float* %rmax, align 4, !dbg !341, !tbaa !192
  %cmp1345 = fcmp ogt float %5, %6, !dbg !341
  br i1 %cmp1345, label %while.body14.lr.ph, label %while.end20, !dbg !341

while.body14.lr.ph:                               ; preds = %while.cond8.loopexit
  %dr17 = getelementptr inbounds %struct.t_range* %r, i64 %indvars.iv, i32 5, !dbg !342
  br label %while.body14, !dbg !341

while.body14:                                     ; preds = %while.body14.lr.ph, %while.body14
  %7 = phi float [ %5, %while.body14.lr.ph ], [ %sub, %while.body14 ]
  %8 = load float* %dr17, align 4, !dbg !342, !tbaa !192
  %sub = fsub float %7, %8, !dbg !342
  store float %sub, float* %arrayidx, align 4, !dbg !342, !tbaa !192
  %9 = load float* %rmax, align 4, !dbg !341, !tbaa !192
  %cmp13 = fcmp ogt float %sub, %9, !dbg !341
  br i1 %cmp13, label %while.body14, label %while.end20, !dbg !341

while.end20:                                      ; preds = %while.body14, %while.cond8.loopexit
  %.lcssa = phi float [ %5, %while.cond8.loopexit ], [ %sub, %while.body14 ]
  %rval = getelementptr inbounds %struct.t_range* %r, i64 %indvars.iv, i32 6, !dbg !343
  store float %.lcssa, float* %rval, align 4, !dbg !343, !tbaa !192
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !336
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !336
  %exitcond = icmp eq i32 %lftr.wideiv, %D, !dbg !336
  br i1 %exitcond, label %for.end, label %while.cond.preheader, !dbg !336

for.end:                                          ; preds = %while.end20, %entry
  ret void, !dbg !344
}
