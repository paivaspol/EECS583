define void @create_dummylist(i32 %nindex, i32* nocapture %list, i32* nocapture %targetn, i32** nocapture %listptr) #3 {
  tail call void @llvm.dbg.value(metadata i32 %nindex, i64 0, metadata !135, metadata !483), !dbg !522
  tail call void @llvm.dbg.value(metadata i32* %list, i64 0, metadata !136, metadata !483), !dbg !523
  tail call void @llvm.dbg.value(metadata i32* %targetn, i64 0, metadata !137, metadata !483), !dbg !524
  tail call void @llvm.dbg.value(metadata i32** %listptr, i64 0, metadata !138, metadata !483), !dbg !525
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !139, metadata !483), !dbg !526
  %1 = icmp sgt i32 %nindex, 0, !dbg !527
  br i1 %1, label %.lr.ph18, label %._crit_edge19.thread, !dbg !530

._crit_edge19.thread:                             ; preds = %0
  store i32 %nindex, i32* %targetn, align 4, !dbg !531, !tbaa !532
  %2 = tail call i8* @save_calloc(i8* getelementptr inbounds ([8 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str1, i64 0, i64 0), i32 61, i32 %nindex, i32 4) #5, !dbg !533
  tail call void @llvm.dbg.value(metadata i32* %27, i64 0, metadata !144, metadata !483), !dbg !534
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !139, metadata !483), !dbg !526
  br label %._crit_edge6, !dbg !535

.loopexit2:                                       ; preds = %.loopexit, %.lr.ph18
  %.1.lcssa = phi i32 [ %.016, %.lr.ph18 ], [ %.2, %.loopexit ]
  %3 = sext i32 %.1.lcssa to i64, !dbg !527
  %4 = icmp slt i64 %indvars.iv.next41, %3, !dbg !527
  %indvars.iv.next37 = add nuw i64 %indvars.iv36, 1, !dbg !530
  br i1 %4, label %.lr.ph18, label %._crit_edge19, !dbg !530

.lr.ph18:                                         ; preds = %0, %.loopexit2
  %indvars.iv40 = phi i64 [ %indvars.iv.next41, %.loopexit2 ], [ 0, %0 ]
  %indvars.iv36 = phi i64 [ %indvars.iv.next37, %.loopexit2 ], [ 1, %0 ]
  %.016 = phi i32 [ %.1.lcssa, %.loopexit2 ], [ %nindex, %0 ]
  %5 = getelementptr inbounds i32* %list, i64 %indvars.iv40, !dbg !537
  %6 = load i32* %5, align 4, !dbg !537, !tbaa !532
  tail call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !142, metadata !483), !dbg !539
  %indvars.iv.next41 = add nuw nsw i64 %indvars.iv40, 1, !dbg !530
  %7 = sext i32 %.016 to i64, !dbg !540
  %8 = icmp slt i64 %indvars.iv.next41, %7, !dbg !540
  br i1 %8, label %.lr.ph13, label %.loopexit2, !dbg !543

.lr.ph13:                                         ; preds = %.lr.ph18
  %9 = trunc i64 %indvars.iv.next41 to i32, !dbg !543
  br label %10, !dbg !543

; <label>:10                                      ; preds = %.lr.ph13, %.loopexit
  %indvars.iv38 = phi i64 [ %indvars.iv36, %.lr.ph13 ], [ %indvars.iv.next39, %.loopexit ]
  %.111 = phi i32 [ %.016, %.lr.ph13 ], [ %.2, %.loopexit ]
  %j.010 = phi i32 [ %9, %.lr.ph13 ], [ %24, %.loopexit ]
  %11 = getelementptr inbounds i32* %list, i64 %indvars.iv38, !dbg !544
  %12 = load i32* %11, align 4, !dbg !544, !tbaa !532
  %13 = icmp eq i32 %12, %6, !dbg !547
  br i1 %13, label %.preheader1, label %.loopexit, !dbg !548

.preheader1:                                      ; preds = %10
  %14 = add i32 %.111, -1, !dbg !549
  %15 = sext i32 %14 to i64, !dbg !553
  %16 = icmp slt i64 %indvars.iv38, %15, !dbg !553
  br i1 %16, label %.lr.ph8, label %.loopexit, !dbg !554

.lr.ph8:                                          ; preds = %.preheader1
  %17 = trunc i64 %indvars.iv38 to i32, !dbg !554
  br label %18, !dbg !554

; <label>:18                                      ; preds = %18, %.lr.ph8
  %indvars.iv29 = phi i64 [ %indvars.iv38, %.lr.ph8 ], [ %indvars.iv.next30, %18 ]
  %k.07 = phi i32 [ %17, %.lr.ph8 ], [ %19, %18 ]
  %19 = add nuw nsw i32 %k.07, 1, !dbg !555
  %20 = sext i32 %19 to i64, !dbg !556
  %21 = getelementptr inbounds i32* %list, i64 %20, !dbg !556
  %22 = load i32* %21, align 4, !dbg !556, !tbaa !532
  %23 = getelementptr inbounds i32* %list, i64 %indvars.iv29, !dbg !557
  store i32 %22, i32* %23, align 4, !dbg !558, !tbaa !532
  tail call void @llvm.dbg.value(metadata i32 %19, i64 0, metadata !141, metadata !483), !dbg !559
  %indvars.iv.next30 = add nuw i64 %indvars.iv29, 1, !dbg !554
  %lftr.wideiv31 = trunc i64 %indvars.iv.next30 to i32, !dbg !554
  %exitcond32 = icmp eq i32 %lftr.wideiv31, %14, !dbg !554
  br i1 %exitcond32, label %.loopexit, label %18, !dbg !554

.loopexit:                                        ; preds = %18, %.preheader1, %10
  %.2 = phi i32 [ %.111, %10 ], [ %14, %.preheader1 ], [ %14, %18 ]
  %24 = add nuw nsw i32 %j.010, 1, !dbg !560
  tail call void @llvm.dbg.value(metadata i32 %24, i64 0, metadata !140, metadata !483), !dbg !561
  %25 = icmp slt i32 %24, %.2, !dbg !540
  %indvars.iv.next39 = add nuw i64 %indvars.iv38, 1, !dbg !543
  br i1 %25, label %10, label %.loopexit2, !dbg !543

._crit_edge19:                                    ; preds = %.loopexit2
  store i32 %.1.lcssa, i32* %targetn, align 4, !dbg !531, !tbaa !532
  %26 = tail call i8* @save_calloc(i8* getelementptr inbounds ([8 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str1, i64 0, i64 0), i32 61, i32 %.1.lcssa, i32 4) #5, !dbg !533
  %27 = bitcast i8* %26 to i32*, !dbg !533
  tail call void @llvm.dbg.value(metadata i32* %27, i64 0, metadata !144, metadata !483), !dbg !534
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !139, metadata !483), !dbg !526
  %28 = icmp sgt i32 %.1.lcssa, 0, !dbg !562
  br i1 %28, label %.preheader.lr.ph, label %._crit_edge6, !dbg !535

.preheader.lr.ph:                                 ; preds = %._crit_edge19
  %29 = add i32 %.1.lcssa, -1, !dbg !535
  br label %.lr.ph, !dbg !535

.lr.ph:                                           ; preds = %.preheader.lr.ph, %._crit_edge
  %indvars.iv21 = phi i64 [ 0, %.preheader.lr.ph ], [ %indvars.iv.next22, %._crit_edge ]
  br label %30, !dbg !564

; <label>:30                                      ; preds = %43, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %43 ]
  %inr.04 = phi i32 [ -1, %.lr.ph ], [ %inr.1, %43 ]
  %31 = getelementptr inbounds i32* %list, i64 %indvars.iv, !dbg !567
  %32 = load i32* %31, align 4, !dbg !567, !tbaa !532
  %33 = icmp sgt i32 %32, 0, !dbg !570
  br i1 %33, label %34, label %43, !dbg !571

; <label>:34                                      ; preds = %30
  %35 = icmp eq i32 %inr.04, -1, !dbg !572
  br i1 %35, label %41, label %36, !dbg !573

; <label>:36                                      ; preds = %34
  %37 = sext i32 %inr.04 to i64, !dbg !574
  %38 = getelementptr inbounds i32* %list, i64 %37, !dbg !574
  %39 = load i32* %38, align 4, !dbg !574, !tbaa !532
  %40 = icmp slt i32 %32, %39, !dbg !575
  br i1 %40, label %41, label %43, !dbg !576

; <label>:41                                      ; preds = %36, %34
  %42 = trunc i64 %indvars.iv to i32, !dbg !577
  br label %43, !dbg !577

; <label>:43                                      ; preds = %30, %36, %41
  %inr.1 = phi i32 [ %42, %41 ], [ %inr.04, %36 ], [ %inr.04, %30 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !564
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !564
  %exitcond = icmp eq i32 %lftr.wideiv, %29, !dbg !564
  br i1 %exitcond, label %._crit_edge, label %30, !dbg !564

._crit_edge:                                      ; preds = %43
  %44 = sext i32 %inr.1 to i64, !dbg !578
  %45 = getelementptr inbounds i32* %list, i64 %44, !dbg !578
  %46 = load i32* %45, align 4, !dbg !578, !tbaa !532
  %47 = getelementptr inbounds i32* %27, i64 %indvars.iv21, !dbg !579
  store i32 %46, i32* %47, align 4, !dbg !580, !tbaa !532
  store i32 -1, i32* %45, align 4, !dbg !581, !tbaa !532
  %indvars.iv.next22 = add nuw nsw i64 %indvars.iv21, 1, !dbg !535
  %lftr.wideiv23 = trunc i64 %indvars.iv21 to i32, !dbg !535
  %exitcond24 = icmp eq i32 %lftr.wideiv23, %29, !dbg !535
  br i1 %exitcond24, label %._crit_edge6, label %.lr.ph, !dbg !535

._crit_edge6:                                     ; preds = %._crit_edge, %._crit_edge19.thread, %._crit_edge19
  %48 = phi i8* [ %2, %._crit_edge19.thread ], [ %26, %._crit_edge19 ], [ %26, %._crit_edge ]
  %49 = bitcast i32** %listptr to i8**, !dbg !582
  store i8* %48, i8** %49, align 8, !dbg !582, !tbaa !583
  ret void, !dbg !584
}
