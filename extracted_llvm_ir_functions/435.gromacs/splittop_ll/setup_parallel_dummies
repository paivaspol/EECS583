define i32 @setup_parallel_dummies(%struct.t_idef* nocapture readonly %idef, %struct.t_commrec* nocapture readonly %cr, %struct.t_nsborder* nocapture readonly %nsb, %struct.t_comm_dummies* nocapture %dummycomm) #3 {
  %1 = tail call i8* @save_calloc(i8* getelementptr inbounds ([11 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str1, i64 0, i64 0), i32 93, i32 100, i32 4) #4
  %2 = bitcast i8* %1 to i32*
  %3 = tail call i8* @save_calloc(i8* getelementptr inbounds ([11 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str1, i64 0, i64 0), i32 94, i32 100, i32 4) #4
  %4 = bitcast i8* %3 to i32*
  %5 = tail call i8* @save_calloc(i8* getelementptr inbounds ([14 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str1, i64 0, i64 0), i32 95, i32 100, i32 4) #4
  %6 = bitcast i8* %5 to i32*
  %7 = tail call i8* @save_calloc(i8* getelementptr inbounds ([14 x i8]* @.str5, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str1, i64 0, i64 0), i32 96, i32 100, i32 4) #4
  %8 = bitcast i8* %7 to i32*
  %9 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 0
  %10 = getelementptr inbounds %struct.t_commrec* %cr, i64 0, i32 1
  br label %11

; <label>:11                                      ; preds = %.loopexit11, %0
  %indvars.iv60 = phi i64 [ 0, %0 ], [ %indvars.iv.next61, %.loopexit11 ]
  %nnextconstr.051 = phi i32 [ 0, %0 ], [ %nnextconstr.5, %.loopexit11 ]
  %nprevconstr.050 = phi i32 [ 0, %0 ], [ %nprevconstr.5, %.loopexit11 ]
  %nnextdum.049 = phi i32 [ 0, %0 ], [ %nnextdum.4, %.loopexit11 ]
  %nprevdum.048 = phi i32 [ 0, %0 ], [ %nprevdum.4, %.loopexit11 ]
  %idxnextconstr.047 = phi i32* [ %8, %0 ], [ %idxnextconstr.6, %.loopexit11 ]
  %idxprevconstr.046 = phi i32* [ %6, %0 ], [ %idxprevconstr.6, %.loopexit11 ]
  %idxnextdum.045 = phi i32* [ %4, %0 ], [ %idxnextdum.5, %.loopexit11 ]
  %idxprevdum.044 = phi i32* [ %2, %0 ], [ %idxprevdum.5, %.loopexit11 ]
  %found.043 = phi i32 [ 0, %0 ], [ %found.9, %.loopexit11 ]
  %12 = getelementptr inbounds [44 x %struct.t_interaction_function]* @interaction_function, i64 0, i64 %indvars.iv60, i32 5
  %13 = load i64* %12, align 8, !tbaa !16
  %14 = and i64 %13, 2
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %.loopexit11, label %16

; <label>:16                                      ; preds = %11
  %17 = getelementptr inbounds %struct.t_idef* %idef, i64 0, i32 5, i64 %indvars.iv60, i32 0
  %18 = load i32* %17, align 4, !tbaa !19
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %.lr.ph, label %.loopexit11

.lr.ph:                                           ; preds = %16
  %20 = getelementptr inbounds %struct.t_idef* %idef, i64 0, i32 5, i64 %indvars.iv60, i32 2
  %21 = load i32** %20, align 8, !tbaa !21
  %22 = getelementptr inbounds [44 x %struct.t_interaction_function]* @interaction_function, i64 0, i64 %indvars.iv60, i32 2
  %23 = load i32* %22, align 8, !tbaa !22
  %24 = trunc i64 %indvars.iv60 to i32
  %switch.selectcmp = icmp eq i32 %24, 35
  %switch.selectcmp8 = icmp eq i32 %24, 30
  %25 = add nsw i32 %23, 1
  %26 = sext i32 %25 to i64
  %27 = select i1 %switch.selectcmp, i64 6, i64 5
  %28 = select i1 %switch.selectcmp8, i64 4, i64 %27
  br label %29

; <label>:29                                      ; preds = %.lr.ph, %.loopexit
  %nnextconstr.133 = phi i32 [ %nnextconstr.051, %.lr.ph ], [ %nnextconstr.4, %.loopexit ]
  %nprevconstr.132 = phi i32 [ %nprevconstr.050, %.lr.ph ], [ %nprevconstr.4, %.loopexit ]
  %nnextdum.131 = phi i32 [ %nnextdum.049, %.lr.ph ], [ %nnextdum.3, %.loopexit ]
  %nprevdum.130 = phi i32 [ %nprevdum.048, %.lr.ph ], [ %nprevdum.3, %.loopexit ]
  %idxnextconstr.129 = phi i32* [ %idxnextconstr.047, %.lr.ph ], [ %idxnextconstr.5, %.loopexit ]
  %idxprevconstr.128 = phi i32* [ %idxprevconstr.046, %.lr.ph ], [ %idxprevconstr.5, %.loopexit ]
  %idxnextdum.127 = phi i32* [ %idxnextdum.045, %.lr.ph ], [ %idxnextdum.4, %.loopexit ]
  %idxprevdum.126 = phi i32* [ %idxprevdum.044, %.lr.ph ], [ %idxprevdum.4, %.loopexit ]
  %ia.024 = phi i32* [ %21, %.lr.ph ], [ %175, %.loopexit ]
  %found.123 = phi i32 [ %found.043, %.lr.ph ], [ %found.8, %.loopexit ]
  %i.022 = phi i32 [ 0, %.lr.ph ], [ %174, %.loopexit ]
  %30 = getelementptr inbounds i32* %ia.024, i64 1
  %31 = load i32* %30, align 4, !tbaa !14
  br label %32

; <label>:32                                      ; preds = %29, %32
  %indvars.iv = phi i64 [ 2, %29 ], [ %indvars.iv.next, %32 ]
  %minidx.013 = phi i32 [ %31, %29 ], [ %.minidx.0, %32 ]
  %33 = getelementptr inbounds i32* %ia.024, i64 %indvars.iv
  %34 = load i32* %33, align 4, !tbaa !14
  %35 = icmp slt i32 %34, %minidx.013
  %.minidx.0 = select i1 %35, i32 %34, i32 %minidx.013
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %36 = icmp slt i64 %indvars.iv.next, %28
  br i1 %36, label %32, label %.preheader

.preheader:                                       ; preds = %32, %.preheader
  %indvars.iv52 = phi i64 [ %indvars.iv.next53, %.preheader ], [ 0, %32 ]
  %37 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %indvars.iv52
  %38 = load i32* %37, align 4, !tbaa !14
  %39 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %indvars.iv52
  %40 = load i32* %39, align 4, !tbaa !14
  %41 = add nsw i32 %40, %38
  %42 = icmp slt i32 %.minidx.0, %41
  %indvars.iv.next53 = add nuw i64 %indvars.iv52, 1
  br i1 %42, label %43, label %.preheader

; <label>:43                                      ; preds = %.preheader
  %44 = trunc i64 %indvars.iv52 to i32
  %45 = load i32* %9, align 4, !tbaa !23
  %46 = icmp eq i32 %44, %45
  br i1 %46, label %47, label %111

; <label>:47                                      ; preds = %43
  %sext = shl i64 %indvars.iv52, 32
  %48 = ashr exact i64 %sext, 32
  %49 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %48
  %50 = load i32* %49, align 4, !tbaa !14
  %51 = icmp slt i32 %31, %50
  br i1 %51, label %57, label %52

; <label>:52                                      ; preds = %47
  %53 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %48
  %54 = load i32* %53, align 4, !tbaa !14
  %55 = add nsw i32 %54, %50
  %56 = icmp slt i32 %31, %55
  br i1 %56, label %72, label %57

; <label>:57                                      ; preds = %52, %47
  %58 = srem i32 %nnextdum.131, 100
  %59 = icmp eq i32 %58, 0
  %60 = icmp sgt i32 %nnextdum.131, 0
  %or.cond = and i1 %60, %59
  br i1 %or.cond, label %61, label %67

; <label>:61                                      ; preds = %57
  %62 = bitcast i32* %idxnextdum.127 to i8*
  %63 = shl i32 %nnextdum.131, 2
  %64 = add i32 %63, 400
  %65 = tail call i8* @save_realloc(i8* getelementptr inbounds ([11 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str1, i64 0, i64 0), i32 131, i8* %62, i32 %64) #4
  %66 = bitcast i8* %65 to i32*
  %.pre63 = load i32* %30, align 4, !tbaa !14
  br label %67

; <label>:67                                      ; preds = %61, %57
  %68 = phi i32 [ %.pre63, %61 ], [ %31, %57 ]
  %idxnextdum.2 = phi i32* [ %66, %61 ], [ %idxnextdum.127, %57 ]
  %69 = add nsw i32 %nnextdum.131, 1
  %70 = sext i32 %nnextdum.131 to i64
  %71 = getelementptr inbounds i32* %idxnextdum.2, i64 %70
  store i32 %68, i32* %71, align 4, !tbaa !14
  br label %72

; <label>:72                                      ; preds = %52, %67
  %found.2 = phi i32 [ 1, %67 ], [ %found.123, %52 ]
  %idxnextdum.3 = phi i32* [ %idxnextdum.2, %67 ], [ %idxnextdum.127, %52 ]
  %nnextdum.2 = phi i32 [ %69, %67 ], [ %nnextdum.131, %52 ]
  br label %73

; <label>:73                                      ; preds = %72, %109
  %indvars.iv58 = phi i64 [ 2, %72 ], [ %indvars.iv.next59, %109 ]
  %nnextconstr.221 = phi i32 [ %nnextconstr.133, %72 ], [ %nnextconstr.3, %109 ]
  %idxnextconstr.220 = phi i32* [ %idxnextconstr.129, %72 ], [ %idxnextconstr.4, %109 ]
  %found.319 = phi i32 [ %found.2, %72 ], [ %found.4, %109 ]
  %74 = getelementptr inbounds i32* %ia.024, i64 %indvars.iv58
  %75 = load i32* %74, align 4, !tbaa !14
  br label %76

; <label>:76                                      ; preds = %76, %73
  %indvars.iv56 = phi i64 [ %indvars.iv.next57, %76 ], [ 0, %73 ]
  %77 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %indvars.iv56
  %78 = load i32* %77, align 4, !tbaa !14
  %79 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %indvars.iv56
  %80 = load i32* %79, align 4, !tbaa !14
  %81 = add nsw i32 %80, %78
  %82 = icmp slt i32 %75, %81
  %indvars.iv.next57 = add nuw i64 %indvars.iv56, 1
  br i1 %82, label %83, label %76

; <label>:83                                      ; preds = %76
  %84 = trunc i64 %indvars.iv56 to i32
  %85 = load i32* %9, align 4, !tbaa !23
  %86 = add nsw i32 %85, 1
  %87 = icmp sgt i32 %84, %86
  br i1 %87, label %88, label %90

; <label>:88                                      ; preds = %83
  %89 = load i32* %30, align 4, !tbaa !14
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([280 x i8]* @.str6, i64 0, i64 0), i32 %89) #4
  br label %109

; <label>:90                                      ; preds = %83
  %91 = load i32* %10, align 4, !tbaa !25
  %92 = srem i32 %86, %91
  %93 = icmp eq i32 %84, %92
  br i1 %93, label %94, label %109

; <label>:94                                      ; preds = %90
  %95 = srem i32 %nnextconstr.221, 100
  %96 = icmp eq i32 %95, 0
  %97 = icmp sgt i32 %nnextconstr.221, 0
  %or.cond3 = and i1 %97, %96
  br i1 %or.cond3, label %98, label %104

; <label>:98                                      ; preds = %94
  %99 = bitcast i32* %idxnextconstr.220 to i8*
  %100 = shl i32 %nnextconstr.221, 2
  %101 = add i32 %100, 400
  %102 = tail call i8* @save_realloc(i8* getelementptr inbounds ([14 x i8]* @.str5, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str1, i64 0, i64 0), i32 151, i8* %99, i32 %101) #4
  %103 = bitcast i8* %102 to i32*
  %.pre64 = load i32* %74, align 4, !tbaa !14
  br label %104

; <label>:104                                     ; preds = %98, %94
  %105 = phi i32 [ %.pre64, %98 ], [ %75, %94 ]
  %idxnextconstr.3 = phi i32* [ %103, %98 ], [ %idxnextconstr.220, %94 ]
  %106 = add nsw i32 %nnextconstr.221, 1
  %107 = sext i32 %nnextconstr.221 to i64
  %108 = getelementptr inbounds i32* %idxnextconstr.3, i64 %107
  store i32 %105, i32* %108, align 4, !tbaa !14
  br label %109

; <label>:109                                     ; preds = %88, %104, %90
  %found.4 = phi i32 [ %found.319, %88 ], [ 1, %104 ], [ %found.319, %90 ]
  %idxnextconstr.4 = phi i32* [ %idxnextconstr.220, %88 ], [ %idxnextconstr.3, %104 ], [ %idxnextconstr.220, %90 ]
  %nnextconstr.3 = phi i32 [ %nnextconstr.221, %88 ], [ %106, %104 ], [ %nnextconstr.221, %90 ]
  %indvars.iv.next59 = add nuw nsw i64 %indvars.iv58, 1
  %110 = icmp slt i64 %indvars.iv.next59, %28
  br i1 %110, label %73, label %.loopexit

; <label>:111                                     ; preds = %43
  %112 = add nsw i32 %45, -1
  %113 = load i32* %10, align 4, !tbaa !25
  %114 = add nsw i32 %112, %113
  %115 = srem i32 %114, %113
  %116 = icmp eq i32 %44, %115
  br i1 %116, label %117, label %.loopexit

; <label>:117                                     ; preds = %111
  %118 = sext i32 %45 to i64
  %119 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %118
  %120 = load i32* %119, align 4, !tbaa !14
  %121 = icmp slt i32 %31, %120
  br i1 %121, label %142, label %122

; <label>:122                                     ; preds = %117
  %123 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %118
  %124 = load i32* %123, align 4, !tbaa !14
  %125 = add nsw i32 %124, %120
  %126 = icmp slt i32 %31, %125
  br i1 %126, label %127, label %142

; <label>:127                                     ; preds = %122
  %128 = srem i32 %nprevdum.130, 100
  %129 = icmp eq i32 %128, 0
  %130 = icmp sgt i32 %nprevdum.130, 0
  %or.cond5 = and i1 %130, %129
  br i1 %or.cond5, label %131, label %137

; <label>:131                                     ; preds = %127
  %132 = bitcast i32* %idxprevdum.126 to i8*
  %133 = shl i32 %nprevdum.130, 2
  %134 = add i32 %133, 400
  %135 = tail call i8* @save_realloc(i8* getelementptr inbounds ([11 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str1, i64 0, i64 0), i32 161, i8* %132, i32 %134) #4
  %136 = bitcast i8* %135 to i32*
  %.pre = load i32* %30, align 4, !tbaa !14
  br label %137

; <label>:137                                     ; preds = %131, %127
  %138 = phi i32 [ %.pre, %131 ], [ %31, %127 ]
  %idxprevdum.2 = phi i32* [ %136, %131 ], [ %idxprevdum.126, %127 ]
  %139 = add nsw i32 %nprevdum.130, 1
  %140 = sext i32 %nprevdum.130 to i64
  %141 = getelementptr inbounds i32* %idxprevdum.2, i64 %140
  store i32 %138, i32* %141, align 4, !tbaa !14
  br label %142

; <label>:142                                     ; preds = %117, %137, %122
  %found.5 = phi i32 [ 1, %137 ], [ %found.123, %122 ], [ %found.123, %117 ]
  %idxprevdum.3 = phi i32* [ %idxprevdum.2, %137 ], [ %idxprevdum.126, %122 ], [ %idxprevdum.126, %117 ]
  %nprevdum.2 = phi i32 [ %139, %137 ], [ %nprevdum.130, %122 ], [ %nprevdum.130, %117 ]
  br label %143

; <label>:143                                     ; preds = %142, %172
  %indvars.iv54 = phi i64 [ 2, %142 ], [ %indvars.iv.next55, %172 ]
  %nprevconstr.217 = phi i32 [ %nprevconstr.132, %142 ], [ %nprevconstr.3, %172 ]
  %idxprevconstr.216 = phi i32* [ %idxprevconstr.128, %142 ], [ %idxprevconstr.4, %172 ]
  %found.615 = phi i32 [ %found.5, %142 ], [ %found.7, %172 ]
  %144 = getelementptr inbounds i32* %ia.024, i64 %indvars.iv54
  %145 = load i32* %144, align 4, !tbaa !14
  %146 = load i32* %9, align 4, !tbaa !23
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 8, i64 %147
  %149 = load i32* %148, align 4, !tbaa !14
  %150 = icmp slt i32 %145, %149
  br i1 %150, label %172, label %151

; <label>:151                                     ; preds = %143
  %152 = load i32* %30, align 4, !tbaa !14
  %153 = getelementptr inbounds %struct.t_nsborder* %nsb, i64 0, i32 7, i64 %147
  %154 = load i32* %153, align 4, !tbaa !14
  %155 = add nsw i32 %154, %149
  %156 = icmp slt i32 %152, %155
  br i1 %156, label %157, label %172

; <label>:157                                     ; preds = %151
  %158 = srem i32 %nprevconstr.217, 100
  %159 = icmp eq i32 %158, 0
  %160 = icmp sgt i32 %nprevconstr.217, 0
  %or.cond7 = and i1 %160, %159
  br i1 %or.cond7, label %161, label %167

; <label>:161                                     ; preds = %157
  %162 = bitcast i32* %idxprevconstr.216 to i8*
  %163 = shl i32 %nprevconstr.217, 2
  %164 = add i32 %163, 400
  %165 = tail call i8* @save_realloc(i8* getelementptr inbounds ([14 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str1, i64 0, i64 0), i32 170, i8* %162, i32 %164) #4
  %166 = bitcast i8* %165 to i32*
  %.pre62 = load i32* %144, align 4, !tbaa !14
  br label %167

; <label>:167                                     ; preds = %161, %157
  %168 = phi i32 [ %.pre62, %161 ], [ %145, %157 ]
  %idxprevconstr.3 = phi i32* [ %166, %161 ], [ %idxprevconstr.216, %157 ]
  %169 = add nsw i32 %nprevconstr.217, 1
  %170 = sext i32 %nprevconstr.217 to i64
  %171 = getelementptr inbounds i32* %idxprevconstr.3, i64 %170
  store i32 %168, i32* %171, align 4, !tbaa !14
  br label %172

; <label>:172                                     ; preds = %143, %151, %167
  %found.7 = phi i32 [ 1, %167 ], [ %found.615, %151 ], [ %found.615, %143 ]
  %idxprevconstr.4 = phi i32* [ %idxprevconstr.3, %167 ], [ %idxprevconstr.216, %151 ], [ %idxprevconstr.216, %143 ]
  %nprevconstr.3 = phi i32 [ %169, %167 ], [ %nprevconstr.217, %151 ], [ %nprevconstr.217, %143 ]
  %indvars.iv.next55 = add nuw nsw i64 %indvars.iv54, 1
  %173 = icmp slt i64 %indvars.iv.next55, %28
  br i1 %173, label %143, label %.loopexit

.loopexit:                                        ; preds = %172, %109, %111
  %found.8 = phi i32 [ %found.123, %111 ], [ %found.4, %109 ], [ %found.7, %172 ]
  %idxprevdum.4 = phi i32* [ %idxprevdum.126, %111 ], [ %idxprevdum.126, %109 ], [ %idxprevdum.3, %172 ]
  %idxnextdum.4 = phi i32* [ %idxnextdum.127, %111 ], [ %idxnextdum.3, %109 ], [ %idxnextdum.127, %172 ]
  %idxprevconstr.5 = phi i32* [ %idxprevconstr.128, %111 ], [ %idxprevconstr.128, %109 ], [ %idxprevconstr.4, %172 ]
  %idxnextconstr.5 = phi i32* [ %idxnextconstr.129, %111 ], [ %idxnextconstr.4, %109 ], [ %idxnextconstr.129, %172 ]
  %nprevdum.3 = phi i32 [ %nprevdum.130, %111 ], [ %nprevdum.130, %109 ], [ %nprevdum.2, %172 ]
  %nnextdum.3 = phi i32 [ %nnextdum.131, %111 ], [ %nnextdum.2, %109 ], [ %nnextdum.131, %172 ]
  %nprevconstr.4 = phi i32 [ %nprevconstr.132, %111 ], [ %nprevconstr.132, %109 ], [ %nprevconstr.3, %172 ]
  %nnextconstr.4 = phi i32 [ %nnextconstr.133, %111 ], [ %nnextconstr.3, %109 ], [ %nnextconstr.133, %172 ]
  %174 = add nsw i32 %i.022, %25
  %175 = getelementptr inbounds i32* %ia.024, i64 %26
  %176 = icmp slt i32 %174, %18
  br i1 %176, label %29, label %.loopexit11

.loopexit11:                                      ; preds = %.loopexit, %16, %11
  %found.9 = phi i32 [ %found.043, %11 ], [ %found.043, %16 ], [ %found.8, %.loopexit ]
  %idxprevdum.5 = phi i32* [ %idxprevdum.044, %11 ], [ %idxprevdum.044, %16 ], [ %idxprevdum.4, %.loopexit ]
  %idxnextdum.5 = phi i32* [ %idxnextdum.045, %11 ], [ %idxnextdum.045, %16 ], [ %idxnextdum.4, %.loopexit ]
  %idxprevconstr.6 = phi i32* [ %idxprevconstr.046, %11 ], [ %idxprevconstr.046, %16 ], [ %idxprevconstr.5, %.loopexit ]
  %idxnextconstr.6 = phi i32* [ %idxnextconstr.047, %11 ], [ %idxnextconstr.047, %16 ], [ %idxnextconstr.5, %.loopexit ]
  %nprevdum.4 = phi i32 [ %nprevdum.048, %11 ], [ %nprevdum.048, %16 ], [ %nprevdum.3, %.loopexit ]
  %nnextdum.4 = phi i32 [ %nnextdum.049, %11 ], [ %nnextdum.049, %16 ], [ %nnextdum.3, %.loopexit ]
  %nprevconstr.5 = phi i32 [ %nprevconstr.050, %11 ], [ %nprevconstr.050, %16 ], [ %nprevconstr.4, %.loopexit ]
  %nnextconstr.5 = phi i32 [ %nnextconstr.051, %11 ], [ %nnextconstr.051, %16 ], [ %nnextconstr.4, %.loopexit ]
  %indvars.iv.next61 = add nuw nsw i64 %indvars.iv60, 1
  %exitcond = icmp eq i64 %indvars.iv.next61, 44
  br i1 %exitcond, label %177, label %11

; <label>:177                                     ; preds = %.loopexit11
  %178 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 0
  %179 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 2
  tail call void @create_dummylist(i32 %nprevdum.4, i32* %idxprevdum.5, i32* %178, i32** %179) #5
  %180 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 1
  %181 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 3
  tail call void @create_dummylist(i32 %nnextdum.4, i32* %idxnextdum.5, i32* %180, i32** %181) #5
  %182 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 4
  %183 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 6
  tail call void @create_dummylist(i32 %nprevconstr.5, i32* %idxprevconstr.6, i32* %182, i32** %183) #5
  %184 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 5
  %185 = getelementptr inbounds %struct.t_comm_dummies* %dummycomm, i64 0, i32 7
  tail call void @create_dummylist(i32 %nnextconstr.5, i32* %idxnextconstr.6, i32* %184, i32** %185) #5
  %186 = bitcast i32* %idxprevdum.5 to i8*
  tail call void @save_free(i8* getelementptr inbounds ([11 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str1, i64 0, i64 0), i32 192, i8* %186) #4
  %187 = bitcast i32* %idxnextdum.5 to i8*
  tail call void @save_free(i8* getelementptr inbounds ([11 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str1, i64 0, i64 0), i32 193, i8* %187) #4
  %188 = bitcast i32* %idxprevconstr.6 to i8*
  tail call void @save_free(i8* getelementptr inbounds ([14 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str1, i64 0, i64 0), i32 194, i8* %188) #4
  %189 = bitcast i32* %idxnextconstr.6 to i8*
  tail call void @save_free(i8* getelementptr inbounds ([14 x i8]* @.str5, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8]* @.str1, i64 0, i64 0), i32 195, i8* %189) #4
  ret i32 %found.9
}
