define i32 @write_xtc(i32 %fp, i32 %natoms, i32 %step, float %time, [3 x float]* %box, [3 x float]* %x, float %prec) #0 {
entry:
  %natoms.addr = alloca i32, align 4
  %step.addr = alloca i32, align 4
  %time.addr = alloca float, align 4
  %prec.addr = alloca float, align 4
  %magic_number = alloca i32, align 4
  %bDum = alloca i32, align 4
  call void @llvm.dbg.value(metadata !{i32 %fp}, i64 0, metadata !54), !dbg !194
  call void @llvm.dbg.value(metadata !{i32 %natoms}, i64 0, metadata !55), !dbg !195
  store i32 %natoms, i32* %natoms.addr, align 4, !tbaa !196
  call void @llvm.dbg.declare(metadata !{i32* %natoms.addr}, metadata !55), !dbg !195
  call void @llvm.dbg.value(metadata !{i32 %step}, i64 0, metadata !56), !dbg !195
  store i32 %step, i32* %step.addr, align 4, !tbaa !196
  call void @llvm.dbg.declare(metadata !{i32* %step.addr}, metadata !56), !dbg !195
  call void @llvm.dbg.value(metadata !{float %time}, i64 0, metadata !57), !dbg !195
  store float %time, float* %time.addr, align 4, !tbaa !197
  call void @llvm.dbg.declare(metadata !{float* %time.addr}, metadata !57), !dbg !195
  call void @llvm.dbg.value(metadata !{[3 x float]* %box}, i64 0, metadata !58), !dbg !198
  call void @llvm.dbg.value(metadata !{[3 x float]* %x}, i64 0, metadata !59), !dbg !198
  call void @llvm.dbg.value(metadata !{float %prec}, i64 0, metadata !60), !dbg !198
  store float %prec, float* %prec.addr, align 4, !tbaa !197
  call void @llvm.dbg.declare(metadata !{float* %prec.addr}, metadata !60), !dbg !198
  call void @llvm.dbg.declare(metadata !{i32* %magic_number}, metadata !61), !dbg !199
  call void @llvm.dbg.value(metadata !200, i64 0, metadata !61), !dbg !199
  store i32 1995, i32* %magic_number, align 4, !dbg !199, !tbaa !196
  call void @llvm.dbg.declare(metadata !{i32* %bDum}, metadata !115), !dbg !201
  %call = call %struct.XDR* @gmx_fio_getxdr(i32 %fp) #4, !dbg !202
  call void @llvm.dbg.value(metadata !{%struct.XDR* %call}, i64 0, metadata !62), !dbg !202
  %call1 = call fastcc i32 @xtc_header(%struct.XDR* %call, i32* %magic_number, i32* %natoms.addr, i32* %step.addr, float* %time.addr, i32* %bDum) #5, !dbg !203
  %tobool = icmp eq i32 %call1, 0, !dbg !203
  br i1 %tobool, label %return, label %if.end, !dbg !203

if.end:                                           ; preds = %entry
  %call2 = call fastcc i32 @xtc_coord(%struct.XDR* %call, i32* %natoms.addr, [3 x float]* %box, [3 x float]* %x, float* %prec.addr) #5, !dbg !204
  br label %return, !dbg !204

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %call2, %if.end ], [ 0, %entry ]
  ret i32 %retval.0, !dbg !205
}
