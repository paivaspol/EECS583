define i32 @write_xtc(i32 %fp, i32 %natoms, i32 %step, float %time, [3 x float]* %box, [3 x float]* %x, float %prec) #0 {
entry:
  %natoms.addr = alloca i32, align 4
  %step.addr = alloca i32, align 4
  %time.addr = alloca float, align 4
  %prec.addr = alloca float, align 4
  %magic_number = alloca i32, align 4
  %bDum = alloca i32, align 4
  store i32 %natoms, i32* %natoms.addr, align 4, !tbaa !3
  store i32 %step, i32* %step.addr, align 4, !tbaa !3
  store float %time, float* %time.addr, align 4, !tbaa !4
  store float %prec, float* %prec.addr, align 4, !tbaa !4
  store i32 1995, i32* %magic_number, align 4, !tbaa !3
  %call = call %struct.XDR* @gmx_fio_getxdr(i32 %fp) #3
  %call1 = call fastcc i32 @xtc_header(%struct.XDR* %call, i32* %magic_number, i32* %natoms.addr, i32* %step.addr, float* %time.addr, i32* %bDum) #4
  %tobool = icmp eq i32 %call1, 0
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call2 = call fastcc i32 @xtc_coord(%struct.XDR* %call, i32* %natoms.addr, [3 x float]* %box, [3 x float]* %x, float* %prec.addr) #4
  br label %return

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ %call2, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}
