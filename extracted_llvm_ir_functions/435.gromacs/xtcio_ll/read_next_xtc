define i32 @read_next_xtc(i32 %fp, i32 %natoms, i32* %step, float* %time, [3 x float]* %box, [3 x float]* %x, float* %prec, i32* nocapture %bOK) #0 {
entry:
  %natoms.addr = alloca i32, align 4
  %magic = alloca i32, align 4
  %n = alloca i32, align 4
  call void @llvm.dbg.value(metadata !{i32 %fp}, i64 0, metadata !137), !dbg !291
  call void @llvm.dbg.value(metadata !{i32 %natoms}, i64 0, metadata !138), !dbg !292
  store i32 %natoms, i32* %natoms.addr, align 4, !tbaa !196
  call void @llvm.dbg.declare(metadata !{i32* %natoms.addr}, metadata !138), !dbg !292
  call void @llvm.dbg.value(metadata !{i32* %step}, i64 0, metadata !139), !dbg !292
  call void @llvm.dbg.value(metadata !{float* %time}, i64 0, metadata !140), !dbg !292
  call void @llvm.dbg.value(metadata !{[3 x float]* %box}, i64 0, metadata !141), !dbg !293
  call void @llvm.dbg.value(metadata !{[3 x float]* %x}, i64 0, metadata !142), !dbg !293
  call void @llvm.dbg.value(metadata !{float* %prec}, i64 0, metadata !143), !dbg !293
  call void @llvm.dbg.value(metadata !{i32* %bOK}, i64 0, metadata !144), !dbg !293
  call void @llvm.dbg.declare(metadata !{i32* %magic}, metadata !145), !dbg !294
  call void @llvm.dbg.declare(metadata !{i32* %n}, metadata !146), !dbg !295
  store i32 1, i32* %bOK, align 4, !dbg !296, !tbaa !196
  %call = call %struct.XDR* @gmx_fio_getxdr(i32 %fp) #4, !dbg !297
  call void @llvm.dbg.value(metadata !{%struct.XDR* %call}, i64 0, metadata !147), !dbg !297
  %call1 = call fastcc i32 @xtc_header(%struct.XDR* %call, i32* %magic, i32* %n, i32* %step, float* %time, i32* %bOK) #5, !dbg !298
  %tobool = icmp eq i32 %call1, 0, !dbg !298
  br i1 %tobool, label %return, label %if.end, !dbg !298

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata !{i32* %n}, i64 0, metadata !146), !dbg !299
  %0 = load i32* %n, align 4, !dbg !299, !tbaa !196
  call void @llvm.dbg.value(metadata !{i32* %natoms.addr}, i64 0, metadata !138), !dbg !299
  %cmp = icmp sgt i32 %0, %natoms, !dbg !299
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !299

if.then2:                                         ; preds = %if.end
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([50 x i8]* @.str4, i64 0, i64 0), i32 %0, i32 %natoms) #4, !dbg !300
  br label %if.end3, !dbg !300

if.end3:                                          ; preds = %if.then2, %if.end
  call void @llvm.dbg.value(metadata !{i32* %magic}, i64 0, metadata !145), !dbg !301
  %1 = load i32* %magic, align 4, !dbg !301, !tbaa !196
  call void @llvm.dbg.value(metadata !{i32 %1}, i64 0, metadata !302) #6, !dbg !303
  %cmp.i = icmp eq i32 %1, 1995, !dbg !304
  br i1 %cmp.i, label %check_xtc_magic.exit, label %if.then.i, !dbg !304

if.then.i:                                        ; preds = %if.end3
  call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([55 x i8]* @.str5, i64 0, i64 0), i32 %1, i32 1995) #4, !dbg !305
  br label %check_xtc_magic.exit, !dbg !305

check_xtc_magic.exit:                             ; preds = %if.end3, %if.then.i
  %call4 = call fastcc i32 @xtc_coord(%struct.XDR* %call, i32* %natoms.addr, [3 x float]* %box, [3 x float]* %x, float* %prec) #5, !dbg !306
  store i32 %call4, i32* %bOK, align 4, !dbg !306, !tbaa !196
  br label %return, !dbg !307

return:                                           ; preds = %entry, %check_xtc_magic.exit
  %retval.0 = phi i32 [ %call4, %check_xtc_magic.exit ], [ 0, %entry ]
  ret i32 %retval.0, !dbg !308
}
