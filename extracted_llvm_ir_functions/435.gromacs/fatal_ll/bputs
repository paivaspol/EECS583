define internal fastcc void @bputs(i8* nocapture %msg, i32* nocapture %len, i8* nocapture %s, i32 %fld) #1 {
entry:
  %call = tail call i64 @strlen(i8* %s) #13
  %conv = trunc i64 %call to i32
  %sub = sub nsw i32 %fld, %conv
  %cmp13 = icmp sgt i32 %sub, 0
  br i1 %cmp13, label %for.body, label %while.cond.preheader

while.cond.preheader:                             ; preds = %for.body, %entry
  %0 = load i8* %s, align 1, !tbaa !1
  %tobool11 = icmp eq i8 %0, 0
  br i1 %tobool11, label %while.end, label %while.body

for.body:                                         ; preds = %entry, %for.body
  %fld.addr.014 = phi i32 [ %dec, %for.body ], [ %sub, %entry ]
  %1 = load i32* %len, align 4, !tbaa !3
  %inc.i = add nsw i32 %1, 1
  store i32 %inc.i, i32* %len, align 4, !tbaa !3
  %idxprom.i = sext i32 %1 to i64
  %arrayidx.i = getelementptr inbounds i8* %msg, i64 %idxprom.i
  store i8 32, i8* %arrayidx.i, align 1, !tbaa !1
  %dec = add nsw i32 %fld.addr.014, -1
  %cmp = icmp sgt i32 %dec, 0
  br i1 %cmp, label %for.body, label %while.cond.preheader

while.body:                                       ; preds = %while.cond.preheader, %while.body
  %2 = phi i8 [ %4, %while.body ], [ %0, %while.cond.preheader ]
  %s.addr.012 = phi i8* [ %incdec.ptr, %while.body ], [ %s, %while.cond.preheader ]
  %incdec.ptr = getelementptr inbounds i8* %s.addr.012, i64 1
  %3 = load i32* %len, align 4, !tbaa !3
  %inc.i8 = add nsw i32 %3, 1
  store i32 %inc.i8, i32* %len, align 4, !tbaa !3
  %idxprom.i9 = sext i32 %3 to i64
  %arrayidx.i10 = getelementptr inbounds i8* %msg, i64 %idxprom.i9
  store i8 %2, i8* %arrayidx.i10, align 1, !tbaa !1
  %4 = load i8* %incdec.ptr, align 1, !tbaa !1
  %tobool = icmp eq i8 %4, 0
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %while.body, %while.cond.preheader
  ret void
}
