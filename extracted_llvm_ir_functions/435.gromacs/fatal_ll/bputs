define internal fastcc void @bputs(i8* nocapture %msg, i32* nocapture %len, i8* nocapture %s, i32 %fld) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %msg}, i64 0, metadata !219), !dbg !377
  tail call void @llvm.dbg.value(metadata !{i32* %len}, i64 0, metadata !220), !dbg !377
  tail call void @llvm.dbg.value(metadata !{i8* %s}, i64 0, metadata !221), !dbg !377
  tail call void @llvm.dbg.value(metadata !{i32 %fld}, i64 0, metadata !222), !dbg !377
  %call = tail call i64 @strlen(i8* %s) #14, !dbg !378
  %conv = trunc i64 %call to i32, !dbg !378
  %sub = sub nsw i32 %fld, %conv, !dbg !378
  tail call void @llvm.dbg.value(metadata !{i32 %sub}, i64 0, metadata !222), !dbg !378
  %cmp13 = icmp sgt i32 %sub, 0, !dbg !378
  br i1 %cmp13, label %for.body, label %while.cond.preheader, !dbg !378

while.cond.preheader:                             ; preds = %for.body, %entry
  %0 = load i8* %s, align 1, !dbg !380, !tbaa !252
  %tobool11 = icmp eq i8 %0, 0, !dbg !380
  br i1 %tobool11, label %while.end, label %while.body, !dbg !380

for.body:                                         ; preds = %entry, %for.body
  %fld.addr.014 = phi i32 [ %dec, %for.body ], [ %sub, %entry ]
  tail call void @llvm.dbg.value(metadata !{i8* %msg}, i64 0, metadata !381), !dbg !382
  tail call void @llvm.dbg.value(metadata !{i32* %len}, i64 0, metadata !383), !dbg !382
  tail call void @llvm.dbg.value(metadata !384, i64 0, metadata !385), !dbg !382
  %1 = load i32* %len, align 4, !dbg !386, !tbaa !264
  %inc.i = add nsw i32 %1, 1, !dbg !386
  store i32 %inc.i, i32* %len, align 4, !dbg !386, !tbaa !264
  %idxprom.i = sext i32 %1 to i64, !dbg !386
  %arrayidx.i = getelementptr inbounds i8* %msg, i64 %idxprom.i, !dbg !386
  store i8 32, i8* %arrayidx.i, align 1, !dbg !386, !tbaa !252
  %dec = add nsw i32 %fld.addr.014, -1, !dbg !378
  tail call void @llvm.dbg.value(metadata !{i32 %dec}, i64 0, metadata !222), !dbg !378
  %cmp = icmp sgt i32 %dec, 0, !dbg !378
  br i1 %cmp, label %for.body, label %while.cond.preheader, !dbg !378

while.body:                                       ; preds = %while.cond.preheader, %while.body
  %2 = phi i8 [ %4, %while.body ], [ %0, %while.cond.preheader ]
  %s.addr.012 = phi i8* [ %incdec.ptr, %while.body ], [ %s, %while.cond.preheader ]
  %incdec.ptr = getelementptr inbounds i8* %s.addr.012, i64 1, !dbg !380
  tail call void @llvm.dbg.value(metadata !{i8* %incdec.ptr}, i64 0, metadata !221), !dbg !380
  tail call void @llvm.dbg.value(metadata !{i8* %msg}, i64 0, metadata !387), !dbg !388
  tail call void @llvm.dbg.value(metadata !{i32* %len}, i64 0, metadata !389), !dbg !388
  tail call void @llvm.dbg.value(metadata !{i8 %2}, i64 0, metadata !390), !dbg !388
  %3 = load i32* %len, align 4, !dbg !391, !tbaa !264
  %inc.i8 = add nsw i32 %3, 1, !dbg !391
  store i32 %inc.i8, i32* %len, align 4, !dbg !391, !tbaa !264
  %idxprom.i9 = sext i32 %3 to i64, !dbg !391
  %arrayidx.i10 = getelementptr inbounds i8* %msg, i64 %idxprom.i9, !dbg !391
  store i8 %2, i8* %arrayidx.i10, align 1, !dbg !391, !tbaa !252
  %4 = load i8* %incdec.ptr, align 1, !dbg !380, !tbaa !252
  %tobool = icmp eq i8 %4, 0, !dbg !380
  br i1 %tobool, label %while.end, label %while.body, !dbg !380

while.end:                                        ; preds = %while.body, %while.cond.preheader
  ret void, !dbg !392
}
