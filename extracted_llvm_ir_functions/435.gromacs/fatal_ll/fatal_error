define void @fatal_error(i32 %fatal_errno, i8* %fmt, ...) #3 {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  %msg = alloca [4096 x i8], align 16
  %ibuf = alloca [64 x i8], align 16
  %ifmt = alloca [64 x i8], align 16
  %len = alloca i32, align 4
  %0 = getelementptr inbounds [4096 x i8]* %msg, i64 0, i64 0
  call void @llvm.lifetime.start(i64 4096, i8* %0) #8
  %1 = getelementptr inbounds [64 x i8]* %ibuf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 64, i8* %1) #8
  %2 = getelementptr inbounds [64 x i8]* %ifmt, i64 0, i64 0
  call void @llvm.lifetime.start(i64 64, i8* %2) #8
  %arraydecay1 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*
  call void @llvm.va_start(i8* %arraydecay1)
  %3 = load i8** @fatal_tmp_file, align 8, !tbaa !0
  %tobool = icmp eq i8* %3, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %4 = load %struct._IO_FILE** @stderr, align 8, !tbaa !0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([31 x i8]* @.str8, i64 0, i64 0), i8* %3) #10
  %5 = load i8** @fatal_tmp_file, align 8, !tbaa !0
  %call2 = call i32 @remove(i8* %5) #10
  %6 = load i8** @fatal_tmp_file, align 8, !tbaa !0
  call void @save_free(i8* getelementptr inbounds ([15 x i8]* @.str5, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8]* @.str6, i64 0, i64 0), i32 221, i8* %6) #10
  store i8* null, i8** @fatal_tmp_file, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  store i32 0, i32* %len, align 4, !tbaa !3
  call fastcc void @bputs(i8* %0, i32* %len, i8* getelementptr inbounds ([14 x i8]* @.str9, i64 0, i64 0), i32 0) #14
  %gp_offset_p = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3
  %overflow_arg_area_p = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2
  %fp_offset_p = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 1
  br label %for.cond

for.cond:                                         ; preds = %for.inc113, %if.end
  %storemerge = phi i8* [ %fmt, %if.end ], [ %incdec.ptr114, %for.inc113 ]
  %8 = load i8* %storemerge, align 1, !tbaa !1
  switch i8 %8, label %if.then6 [
    i8 0, label %for.end115
    i8 37, label %if.else
  ]

if.then6:                                         ; preds = %for.cond
  %9 = load i32* %len, align 4, !tbaa !3
  %inc.i = add nsw i32 %9, 1
  store i32 %inc.i, i32* %len, align 4, !tbaa !3
  %idxprom.i = sext i32 %9 to i64
  %arrayidx.i = getelementptr inbounds [4096 x i8]* %msg, i64 0, i64 %idxprom.i
  store i8 %8, i8* %arrayidx.i, align 1, !tbaa !1
  br label %for.inc113

if.else:                                          ; preds = %for.cond
  %incdec.ptr = getelementptr inbounds i8* %storemerge, i64 1
  %10 = load i8* %incdec.ptr, align 1, !tbaa !1
  %idxprom4.i = sext i8 %10 to i64
  %call.i = call i16** @__ctype_b_loc() #12
  %11 = load i16** %call.i, align 8, !tbaa !0
  %arrayidx5.i = getelementptr inbounds i16* %11, i64 %idxprom4.i
  %12 = load i16* %arrayidx5.i, align 2, !tbaa !4
  %and6.i = and i16 %12, 2048
  %tobool7.i = icmp eq i16 %and6.i, 0
  br i1 %tobool7.i, label %getfld.exit, label %while.body.i

while.body.i:                                     ; preds = %if.else, %while.body.i
  %13 = phi i8 [ %15, %while.body.i ], [ %10, %if.else ]
  %14 = phi i8* [ %incdec.ptr.i, %while.body.i ], [ %incdec.ptr, %if.else ]
  %fld.08.i = phi i32 [ %add.i, %while.body.i ], [ 0, %if.else ]
  %mul.i = mul nsw i32 %fld.08.i, 10
  %incdec.ptr.i = getelementptr inbounds i8* %14, i64 1
  %conv2.i = sext i8 %13 to i32
  %sub.i = add i32 %mul.i, -48
  %add.i = add i32 %sub.i, %conv2.i
  %15 = load i8* %incdec.ptr.i, align 1, !tbaa !1
  %idxprom.i132 = sext i8 %15 to i64
  %arrayidx.i133 = getelementptr inbounds i16* %11, i64 %idxprom.i132
  %16 = load i16* %arrayidx.i133, align 2, !tbaa !4
  %and.i = and i16 %16, 2048
  %tobool.i = icmp eq i16 %and.i, 0
  br i1 %tobool.i, label %getfld.exit, label %while.body.i

getfld.exit:                                      ; preds = %while.body.i, %if.else
  %17 = phi i8 [ %10, %if.else ], [ %15, %while.body.i ]
  %incdec.ptr.i152 = phi i8* [ %incdec.ptr, %if.else ], [ %incdec.ptr.i, %while.body.i ]
  %fld.0.lcssa.i = phi i32 [ 0, %if.else ], [ %add.i, %while.body.i ]
  %conv9 = sext i8 %17 to i32
  switch i32 %conv9, label %for.inc113 [
    i32 120, label %sw.bb
    i32 100, label %sw.bb24
    i32 102, label %sw.bb55
    i32 99, label %sw.bb83
    i32 115, label %sw.bb98
  ]

sw.bb:                                            ; preds = %getfld.exit
  %gp_offset = load i32* %gp_offset_p, align 16
  %fits_in_gp = icmp ult i32 %gp_offset, 41
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem

vaarg.in_reg:                                     ; preds = %sw.bb
  %reg_save_area = load i8** %7, align 16
  %18 = sext i32 %gp_offset to i64
  %19 = getelementptr i8* %reg_save_area, i64 %18
  %20 = add i32 %gp_offset, 8
  store i32 %20, i32* %gp_offset_p, align 16
  br label %vaarg.end

vaarg.in_mem:                                     ; preds = %sw.bb
  %overflow_arg_area = load i8** %overflow_arg_area_p, align 8
  %overflow_arg_area.next = getelementptr i8* %overflow_arg_area, i64 8
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8
  br label %vaarg.end

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr.in = phi i8* [ %19, %vaarg.in_reg ], [ %overflow_arg_area, %vaarg.in_mem ]
  %vaarg.addr = bitcast i8* %vaarg.addr.in to i32*
  %21 = load i32* %vaarg.addr, align 4
  %call12 = call i32 (i8*, i8*, ...)* @sprintf(i8* %2, i8* getelementptr inbounds ([8 x i8]* @.str10, i64 0, i64 0), i32 %fld.0.lcssa.i) #10
  %call15 = call i32 (i8*, i8*, ...)* @sprintf(i8* %1, i8* %2, i32 %21) #10
  %call18166 = call i64 @strlen(i8* %1) #13
  %conv19167 = trunc i64 %call18166 to i32
  %cmp20168 = icmp sgt i32 %conv19167, 0
  br i1 %cmp20168, label %for.body22.lr.ph, label %for.inc113

for.body22.lr.ph:                                 ; preds = %vaarg.end
  %len.promoted170 = load i32* %len, align 4, !tbaa !3
  %22 = sext i32 %len.promoted170 to i64
  br label %for.body22

for.body22:                                       ; preds = %for.body22.lr.ph, %for.body22
  %indvars.iv180 = phi i64 [ 0, %for.body22.lr.ph ], [ %indvars.iv.next181, %for.body22 ]
  %indvars.iv178 = phi i64 [ %22, %for.body22.lr.ph ], [ %indvars.iv.next179, %for.body22 ]
  %inc.i134171 = phi i32 [ %len.promoted170, %for.body22.lr.ph ], [ %inc.i134, %for.body22 ]
  %arrayidx = getelementptr inbounds [64 x i8]* %ibuf, i64 0, i64 %indvars.iv180
  %23 = load i8* %arrayidx, align 1, !tbaa !1
  %indvars.iv.next179 = add i64 %indvars.iv178, 1
  %inc.i134 = add nsw i32 %inc.i134171, 1
  %arrayidx.i136 = getelementptr inbounds [4096 x i8]* %msg, i64 0, i64 %indvars.iv178
  store i8 %23, i8* %arrayidx.i136, align 1, !tbaa !1
  %indvars.iv.next181 = add i64 %indvars.iv180, 1
  %call18 = call i64 @strlen(i8* %1) #13
  %conv19 = trunc i64 %call18 to i32
  %24 = trunc i64 %indvars.iv.next181 to i32
  %cmp20 = icmp slt i32 %24, %conv19
  br i1 %cmp20, label %for.body22, label %for.cond16.for.inc113.loopexit165_crit_edge

sw.bb24:                                          ; preds = %getfld.exit
  %gp_offset27 = load i32* %gp_offset_p, align 16
  %fits_in_gp28 = icmp ult i32 %gp_offset27, 41
  br i1 %fits_in_gp28, label %vaarg.in_reg29, label %vaarg.in_mem31

vaarg.in_reg29:                                   ; preds = %sw.bb24
  %reg_save_area30 = load i8** %7, align 16
  %25 = sext i32 %gp_offset27 to i64
  %26 = getelementptr i8* %reg_save_area30, i64 %25
  %27 = add i32 %gp_offset27, 8
  store i32 %27, i32* %gp_offset_p, align 16
  br label %vaarg.end35

vaarg.in_mem31:                                   ; preds = %sw.bb24
  %overflow_arg_area33 = load i8** %overflow_arg_area_p, align 8
  %overflow_arg_area.next34 = getelementptr i8* %overflow_arg_area33, i64 8
  store i8* %overflow_arg_area.next34, i8** %overflow_arg_area_p, align 8
  br label %vaarg.end35

vaarg.end35:                                      ; preds = %vaarg.in_mem31, %vaarg.in_reg29
  %vaarg.addr36.in = phi i8* [ %26, %vaarg.in_reg29 ], [ %overflow_arg_area33, %vaarg.in_mem31 ]
  %vaarg.addr36 = bitcast i8* %vaarg.addr36.in to i32*
  %28 = load i32* %vaarg.addr36, align 4
  %call38 = call i32 (i8*, i8*, ...)* @sprintf(i8* %2, i8* getelementptr inbounds ([6 x i8]* @.str11, i64 0, i64 0), i32 %fld.0.lcssa.i) #10
  %call41 = call i32 (i8*, i8*, ...)* @sprintf(i8* %1, i8* %2, i32 %28) #10
  %call44159 = call i64 @strlen(i8* %1) #13
  %conv45160 = trunc i64 %call44159 to i32
  %cmp46161 = icmp sgt i32 %conv45160, 0
  br i1 %cmp46161, label %for.body48.lr.ph, label %for.inc113

for.body48.lr.ph:                                 ; preds = %vaarg.end35
  %len.promoted163 = load i32* %len, align 4, !tbaa !3
  %29 = sext i32 %len.promoted163 to i64
  br label %for.body48

for.body48:                                       ; preds = %for.body48.lr.ph, %for.body48
  %indvars.iv176 = phi i64 [ 0, %for.body48.lr.ph ], [ %indvars.iv.next177, %for.body48 ]
  %indvars.iv174 = phi i64 [ %29, %for.body48.lr.ph ], [ %indvars.iv.next175, %for.body48 ]
  %inc.i140164 = phi i32 [ %len.promoted163, %for.body48.lr.ph ], [ %inc.i140, %for.body48 ]
  %arrayidx51 = getelementptr inbounds [64 x i8]* %ibuf, i64 0, i64 %indvars.iv176
  %30 = load i8* %arrayidx51, align 1, !tbaa !1
  %indvars.iv.next175 = add i64 %indvars.iv174, 1
  %inc.i140 = add nsw i32 %inc.i140164, 1
  %arrayidx.i142 = getelementptr inbounds [4096 x i8]* %msg, i64 0, i64 %indvars.iv174
  store i8 %30, i8* %arrayidx.i142, align 1, !tbaa !1
  %indvars.iv.next177 = add i64 %indvars.iv176, 1
  %call44 = call i64 @strlen(i8* %1) #13
  %conv45 = trunc i64 %call44 to i32
  %31 = trunc i64 %indvars.iv.next177 to i32
  %cmp46 = icmp slt i32 %31, %conv45
  br i1 %cmp46, label %for.body48, label %for.cond42.for.inc113.loopexit158_crit_edge

sw.bb55:                                          ; preds = %getfld.exit
  %fp_offset = load i32* %fp_offset_p, align 4
  %fits_in_fp = icmp ult i32 %fp_offset, 161
  br i1 %fits_in_fp, label %vaarg.in_reg57, label %vaarg.in_mem59

vaarg.in_reg57:                                   ; preds = %sw.bb55
  %reg_save_area58 = load i8** %7, align 16
  %32 = sext i32 %fp_offset to i64
  %33 = getelementptr i8* %reg_save_area58, i64 %32
  %34 = add i32 %fp_offset, 16
  store i32 %34, i32* %fp_offset_p, align 4
  br label %vaarg.end63

vaarg.in_mem59:                                   ; preds = %sw.bb55
  %overflow_arg_area61 = load i8** %overflow_arg_area_p, align 8
  %overflow_arg_area.next62 = getelementptr i8* %overflow_arg_area61, i64 8
  store i8* %overflow_arg_area.next62, i8** %overflow_arg_area_p, align 8
  br label %vaarg.end63

vaarg.end63:                                      ; preds = %vaarg.in_mem59, %vaarg.in_reg57
  %vaarg.addr64.in = phi i8* [ %33, %vaarg.in_reg57 ], [ %overflow_arg_area61, %vaarg.in_mem59 ]
  %vaarg.addr64 = bitcast i8* %vaarg.addr64.in to double*
  %35 = load double* %vaarg.addr64, align 8
  %call66 = call i32 (i8*, i8*, ...)* @sprintf(i8* %2, i8* getelementptr inbounds ([6 x i8]* @.str12, i64 0, i64 0), i32 %fld.0.lcssa.i) #10
  %call69 = call i32 (i8*, i8*, ...)* @sprintf(i8* %1, i8* %2, double %35) #10
  %call72153 = call i64 @strlen(i8* %1) #13
  %conv73154 = trunc i64 %call72153 to i32
  %cmp74155 = icmp sgt i32 %conv73154, 0
  br i1 %cmp74155, label %for.body76.lr.ph, label %for.inc113

for.body76.lr.ph:                                 ; preds = %vaarg.end63
  %len.promoted = load i32* %len, align 4, !tbaa !3
  %36 = sext i32 %len.promoted to i64
  br label %for.body76

for.body76:                                       ; preds = %for.body76.lr.ph, %for.body76
  %indvars.iv172 = phi i64 [ 0, %for.body76.lr.ph ], [ %indvars.iv.next173, %for.body76 ]
  %indvars.iv = phi i64 [ %36, %for.body76.lr.ph ], [ %indvars.iv.next, %for.body76 ]
  %inc.i146157 = phi i32 [ %len.promoted, %for.body76.lr.ph ], [ %inc.i146, %for.body76 ]
  %arrayidx79 = getelementptr inbounds [64 x i8]* %ibuf, i64 0, i64 %indvars.iv172
  %37 = load i8* %arrayidx79, align 1, !tbaa !1
  %indvars.iv.next = add i64 %indvars.iv, 1
  %inc.i146 = add nsw i32 %inc.i146157, 1
  %arrayidx.i148 = getelementptr inbounds [4096 x i8]* %msg, i64 0, i64 %indvars.iv
  store i8 %37, i8* %arrayidx.i148, align 1, !tbaa !1
  %indvars.iv.next173 = add i64 %indvars.iv172, 1
  %call72 = call i64 @strlen(i8* %1) #13
  %conv73 = trunc i64 %call72 to i32
  %38 = trunc i64 %indvars.iv.next173 to i32
  %cmp74 = icmp slt i32 %38, %conv73
  br i1 %cmp74, label %for.body76, label %for.cond70.for.inc113.loopexit_crit_edge

sw.bb83:                                          ; preds = %getfld.exit
  %gp_offset86 = load i32* %gp_offset_p, align 16
  %fits_in_gp87 = icmp ult i32 %gp_offset86, 41
  br i1 %fits_in_gp87, label %vaarg.in_reg88, label %vaarg.in_mem90

vaarg.in_reg88:                                   ; preds = %sw.bb83
  %reg_save_area89 = load i8** %7, align 16
  %39 = sext i32 %gp_offset86 to i64
  %40 = getelementptr i8* %reg_save_area89, i64 %39
  %41 = add i32 %gp_offset86, 8
  store i32 %41, i32* %gp_offset_p, align 16
  br label %vaarg.end94

vaarg.in_mem90:                                   ; preds = %sw.bb83
  %overflow_arg_area92 = load i8** %overflow_arg_area_p, align 8
  %overflow_arg_area.next93 = getelementptr i8* %overflow_arg_area92, i64 8
  store i8* %overflow_arg_area.next93, i8** %overflow_arg_area_p, align 8
  br label %vaarg.end94

vaarg.end94:                                      ; preds = %vaarg.in_mem90, %vaarg.in_reg88
  %vaarg.addr95.in = phi i8* [ %40, %vaarg.in_reg88 ], [ %overflow_arg_area92, %vaarg.in_mem90 ]
  %vaarg.addr95 = bitcast i8* %vaarg.addr95.in to i32*
  %42 = load i32* %vaarg.addr95, align 4
  %conv96 = trunc i32 %42 to i8
  %43 = load i32* %len, align 4, !tbaa !3
  %inc.i143 = add nsw i32 %43, 1
  store i32 %inc.i143, i32* %len, align 4, !tbaa !3
  %idxprom.i144 = sext i32 %43 to i64
  %arrayidx.i145 = getelementptr inbounds [4096 x i8]* %msg, i64 0, i64 %idxprom.i144
  store i8 %conv96, i8* %arrayidx.i145, align 1, !tbaa !1
  br label %for.inc113

sw.bb98:                                          ; preds = %getfld.exit
  %gp_offset101 = load i32* %gp_offset_p, align 16
  %fits_in_gp102 = icmp ult i32 %gp_offset101, 41
  br i1 %fits_in_gp102, label %vaarg.in_reg103, label %vaarg.in_mem105

vaarg.in_reg103:                                  ; preds = %sw.bb98
  %reg_save_area104 = load i8** %7, align 16
  %44 = sext i32 %gp_offset101 to i64
  %45 = getelementptr i8* %reg_save_area104, i64 %44
  %46 = add i32 %gp_offset101, 8
  store i32 %46, i32* %gp_offset_p, align 16
  br label %vaarg.end109

vaarg.in_mem105:                                  ; preds = %sw.bb98
  %overflow_arg_area107 = load i8** %overflow_arg_area_p, align 8
  %overflow_arg_area.next108 = getelementptr i8* %overflow_arg_area107, i64 8
  store i8* %overflow_arg_area.next108, i8** %overflow_arg_area_p, align 8
  br label %vaarg.end109

vaarg.end109:                                     ; preds = %vaarg.in_mem105, %vaarg.in_reg103
  %vaarg.addr110.in = phi i8* [ %45, %vaarg.in_reg103 ], [ %overflow_arg_area107, %vaarg.in_mem105 ]
  %vaarg.addr110 = bitcast i8* %vaarg.addr110.in to i8**
  %47 = load i8** %vaarg.addr110, align 8
  call fastcc void @bputs(i8* %0, i32* %len, i8* %47, i32 %fld.0.lcssa.i) #14
  br label %for.inc113

for.cond70.for.inc113.loopexit_crit_edge:         ; preds = %for.body76
  store i32 %inc.i146, i32* %len, align 4, !tbaa !3
  br label %for.inc113

for.cond42.for.inc113.loopexit158_crit_edge:      ; preds = %for.body48
  store i32 %inc.i140, i32* %len, align 4, !tbaa !3
  br label %for.inc113

for.cond16.for.inc113.loopexit165_crit_edge:      ; preds = %for.body22
  store i32 %inc.i134, i32* %len, align 4, !tbaa !3
  br label %for.inc113

for.inc113:                                       ; preds = %vaarg.end, %for.cond16.for.inc113.loopexit165_crit_edge, %vaarg.end35, %for.cond42.for.inc113.loopexit158_crit_edge, %vaarg.end63, %for.cond70.for.inc113.loopexit_crit_edge, %if.then6, %getfld.exit, %vaarg.end109, %vaarg.end94
  %incdec.ptr.i151 = phi i8* [ %storemerge, %if.then6 ], [ %incdec.ptr.i152, %getfld.exit ], [ %incdec.ptr.i152, %vaarg.end109 ], [ %incdec.ptr.i152, %vaarg.end94 ], [ %incdec.ptr.i152, %for.cond70.for.inc113.loopexit_crit_edge ], [ %incdec.ptr.i152, %vaarg.end63 ], [ %incdec.ptr.i152, %for.cond42.for.inc113.loopexit158_crit_edge ], [ %incdec.ptr.i152, %vaarg.end35 ], [ %incdec.ptr.i152, %for.cond16.for.inc113.loopexit165_crit_edge ], [ %incdec.ptr.i152, %vaarg.end ]
  %incdec.ptr114 = getelementptr inbounds i8* %incdec.ptr.i151, i64 1
  br label %for.cond

for.end115:                                       ; preds = %for.cond
  call void @llvm.va_end(i8* %arraydecay1)
  %48 = load i32* %len, align 4, !tbaa !3
  %idxprom.i138 = sext i32 %48 to i64
  %arrayidx.i139 = getelementptr inbounds [4096 x i8]* %msg, i64 0, i64 %idxprom.i138
  store i8 0, i8* %arrayidx.i139, align 1, !tbaa !1
  call void @quit_gmx(i32 %fatal_errno, i8* %0) #14
  unreachable
}
