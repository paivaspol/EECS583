define float @dih_angle([3 x float]* nocapture readnone %box, float* nocapture readonly %xi, float* nocapture readonly %xj, float* nocapture readonly %xk, float* nocapture readonly %xl, float* nocapture %r_ij, float* nocapture %r_kj, float* nocapture %r_kl, float* nocapture %m, float* nocapture %n, float* nocapture %cos_phi, float* nocapture %sign) #3 {
  %1 = load float* %xi, align 4, !tbaa !14
  %2 = load float* %xj, align 4, !tbaa !14
  %3 = fsub float %1, %2
  %4 = getelementptr inbounds float* %xi, i64 1
  %5 = load float* %4, align 4, !tbaa !14
  %6 = getelementptr inbounds float* %xj, i64 1
  %7 = load float* %6, align 4, !tbaa !14
  %8 = fsub float %5, %7
  %9 = getelementptr inbounds float* %xi, i64 2
  %10 = load float* %9, align 4, !tbaa !14
  %11 = getelementptr inbounds float* %xj, i64 2
  %12 = load float* %11, align 4, !tbaa !14
  %13 = fsub float %10, %12
  store float %3, float* %r_ij, align 4, !tbaa !14
  %14 = getelementptr inbounds float* %r_ij, i64 1
  store float %8, float* %14, align 4, !tbaa !14
  %15 = getelementptr inbounds float* %r_ij, i64 2
  store float %13, float* %15, align 4, !tbaa !14
  %16 = load float* %xk, align 4, !tbaa !14
  %17 = load float* %xj, align 4, !tbaa !14
  %18 = fsub float %16, %17
  %19 = getelementptr inbounds float* %xk, i64 1
  %20 = load float* %19, align 4, !tbaa !14
  %21 = load float* %6, align 4, !tbaa !14
  %22 = fsub float %20, %21
  %23 = getelementptr inbounds float* %xk, i64 2
  %24 = load float* %23, align 4, !tbaa !14
  %25 = load float* %11, align 4, !tbaa !14
  %26 = fsub float %24, %25
  store float %18, float* %r_kj, align 4, !tbaa !14
  %27 = getelementptr inbounds float* %r_kj, i64 1
  store float %22, float* %27, align 4, !tbaa !14
  %28 = getelementptr inbounds float* %r_kj, i64 2
  store float %26, float* %28, align 4, !tbaa !14
  %29 = load float* %xk, align 4, !tbaa !14
  %30 = load float* %xl, align 4, !tbaa !14
  %31 = fsub float %29, %30
  %32 = load float* %19, align 4, !tbaa !14
  %33 = getelementptr inbounds float* %xl, i64 1
  %34 = load float* %33, align 4, !tbaa !14
  %35 = fsub float %32, %34
  %36 = load float* %23, align 4, !tbaa !14
  %37 = getelementptr inbounds float* %xl, i64 2
  %38 = load float* %37, align 4, !tbaa !14
  %39 = fsub float %36, %38
  store float %31, float* %r_kl, align 4, !tbaa !14
  %40 = getelementptr inbounds float* %r_kl, i64 1
  store float %35, float* %40, align 4, !tbaa !14
  %41 = getelementptr inbounds float* %r_kl, i64 2
  store float %39, float* %41, align 4, !tbaa !14
  %42 = load float* %14, align 4, !tbaa !14
  %43 = load float* %28, align 4, !tbaa !14
  %44 = fmul float %42, %43
  %45 = load float* %15, align 4, !tbaa !14
  %46 = load float* %27, align 4, !tbaa !14
  %47 = fmul float %45, %46
  %48 = fsub float %44, %47
  store float %48, float* %m, align 4, !tbaa !14
  %49 = load float* %15, align 4, !tbaa !14
  %50 = load float* %r_kj, align 4, !tbaa !14
  %51 = fmul float %49, %50
  %52 = load float* %r_ij, align 4, !tbaa !14
  %53 = load float* %28, align 4, !tbaa !14
  %54 = fmul float %52, %53
  %55 = fsub float %51, %54
  %56 = getelementptr inbounds float* %m, i64 1
  store float %55, float* %56, align 4, !tbaa !14
  %57 = load float* %r_ij, align 4, !tbaa !14
  %58 = load float* %27, align 4, !tbaa !14
  %59 = fmul float %57, %58
  %60 = load float* %14, align 4, !tbaa !14
  %61 = load float* %r_kj, align 4, !tbaa !14
  %62 = fmul float %60, %61
  %63 = fsub float %59, %62
  %64 = getelementptr inbounds float* %m, i64 2
  store float %63, float* %64, align 4, !tbaa !14
  %65 = load float* %27, align 4, !tbaa !14
  %66 = load float* %41, align 4, !tbaa !14
  %67 = fmul float %65, %66
  %68 = load float* %28, align 4, !tbaa !14
  %69 = load float* %40, align 4, !tbaa !14
  %70 = fmul float %68, %69
  %71 = fsub float %67, %70
  store float %71, float* %n, align 4, !tbaa !14
  %72 = load float* %28, align 4, !tbaa !14
  %73 = load float* %r_kl, align 4, !tbaa !14
  %74 = fmul float %72, %73
  %75 = load float* %r_kj, align 4, !tbaa !14
  %76 = load float* %41, align 4, !tbaa !14
  %77 = fmul float %75, %76
  %78 = fsub float %74, %77
  %79 = getelementptr inbounds float* %n, i64 1
  store float %78, float* %79, align 4, !tbaa !14
  %80 = load float* %r_kj, align 4, !tbaa !14
  %81 = load float* %40, align 4, !tbaa !14
  %82 = fmul float %80, %81
  %83 = load float* %27, align 4, !tbaa !14
  %84 = load float* %r_kl, align 4, !tbaa !14
  %85 = fmul float %83, %84
  %86 = fsub float %82, %85
  %87 = getelementptr inbounds float* %n, i64 2
  store float %86, float* %87, align 4, !tbaa !14
  %88 = tail call fastcc float @cos_angle(float* %m, float* %n) #11
  store float %88, float* %cos_phi, align 4, !tbaa !14
  %89 = fpext float %88 to double
  %90 = tail call double @acos(double %89) #10
  %91 = fptrunc double %90 to float
  %92 = load float* %r_ij, align 4, !tbaa !14
  %93 = load float* %n, align 4, !tbaa !14
  %94 = fmul float %92, %93
  %95 = load float* %14, align 4, !tbaa !14
  %96 = load float* %79, align 4, !tbaa !14
  %97 = fmul float %95, %96
  %98 = fadd float %94, %97
  %99 = load float* %15, align 4, !tbaa !14
  %100 = load float* %87, align 4, !tbaa !14
  %101 = fmul float %99, %100
  %102 = fadd float %98, %101
  %103 = fcmp olt float %102, 0.000000e+00
  %104 = select i1 %103, float -1.000000e+00, float 1.000000e+00
  store float %104, float* %sign, align 4, !tbaa !14
  %105 = fmul float %91, %104
  ret float %105
}
