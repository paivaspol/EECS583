define float @cubicbonds(i32 %nbonds, i32* nocapture readonly %forceatoms, %union.t_iparams* nocapture readonly %forceparams, [3 x float]* nocapture readonly %x, [3 x float]* nocapture %f, %struct.t_forcerec* nocapture readonly %fr, %struct.t_graph* nocapture readonly %g, [3 x float]* nocapture readnone %box, float %lambda, float* nocapture readnone %dvdl, %struct.t_mdatoms* nocapture readnone %md, i32 %ngrp, float* nocapture readnone %egnb, float* nocapture readnone %egcoul, %struct.t_fcdata* nocapture readnone %fcd) #3 {
  %dx = alloca [3 x float], align 4
  %1 = getelementptr inbounds [3 x float]* %dx, i64 0, i64 0
  %2 = getelementptr inbounds [3 x float]* %dx, i64 0, i64 1
  %3 = getelementptr inbounds [3 x float]* %dx, i64 0, i64 2
  %4 = getelementptr inbounds %struct.t_graph* %g, i64 0, i32 3
  %5 = getelementptr inbounds %struct.t_graph* %g, i64 0, i32 7
  %6 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 58
  %7 = sext i32 %nbonds to i64
  br label %.outer

.loopexit:                                        ; preds = %96
  %8 = fadd float %58, %60
  %9 = fadd float %vtot.0.ph, %8
  br label %.outer

.outer:                                           ; preds = %.loopexit, %0
  %i.0.ph = phi i32 [ %18, %.loopexit ], [ 0, %0 ]
  %vtot.0.ph = phi float [ %9, %.loopexit ], [ 0.000000e+00, %0 ]
  %10 = sext i32 %i.0.ph to i64
  br label %11

; <label>:11                                      ; preds = %.outer, %13
  %indvars.iv = phi i64 [ %10, %.outer ], [ %indvars.iv.next, %13 ]
  %i.0 = phi i32 [ %i.0.ph, %.outer ], [ %18, %13 ]
  %12 = icmp slt i64 %indvars.iv, %7
  br i1 %12, label %13, label %111

; <label>:13                                      ; preds = %11
  %14 = add nsw i64 %indvars.iv, 1
  %15 = add nsw i64 %indvars.iv, 2
  %16 = getelementptr inbounds i32* %forceatoms, i64 %14
  %17 = load i32* %16, align 4, !tbaa !36
  %18 = add nsw i32 %i.0, 3
  %19 = getelementptr inbounds i32* %forceatoms, i64 %15
  %20 = load i32* %19, align 4, !tbaa !36
  %21 = sext i32 %17 to i64
  %22 = getelementptr inbounds [3 x float]* %x, i64 %21, i64 0
  %23 = sext i32 %20 to i64
  %24 = getelementptr inbounds [3 x float]* %x, i64 %23, i64 0
  %25 = load float* %22, align 4, !tbaa !14
  %26 = load float* %24, align 4, !tbaa !14
  %27 = fsub float %25, %26
  %28 = getelementptr inbounds [3 x float]* %x, i64 %21, i64 1
  %29 = load float* %28, align 4, !tbaa !14
  %30 = getelementptr inbounds [3 x float]* %x, i64 %23, i64 1
  %31 = load float* %30, align 4, !tbaa !14
  %32 = fsub float %29, %31
  %33 = getelementptr inbounds [3 x float]* %x, i64 %21, i64 2
  %34 = load float* %33, align 4, !tbaa !14
  %35 = getelementptr inbounds [3 x float]* %x, i64 %23, i64 2
  %36 = load float* %35, align 4, !tbaa !14
  %37 = fsub float %34, %36
  store float %27, float* %1, align 4, !tbaa !14
  store float %32, float* %2, align 4, !tbaa !14
  store float %37, float* %3, align 4, !tbaa !14
  %38 = fmul float %27, %27
  %39 = fmul float %32, %32
  %40 = fadd float %38, %39
  %41 = fmul float %37, %37
  %42 = fadd float %41, %40
  %43 = fpext float %42 to double
  %44 = fcmp olt double %43, 1.200000e-38
  %indvars.iv.next = add i64 %indvars.iv, 3
  br i1 %44, label %11, label %45

; <label>:45                                      ; preds = %13
  %sext = shl i64 %indvars.iv, 32
  %46 = ashr exact i64 %sext, 32
  %47 = getelementptr inbounds i32* %forceatoms, i64 %46
  %48 = load i32* %47, align 4, !tbaa !36
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds %union.t_iparams* %forceparams, i64 %49, i32 0, i32 0
  %51 = load float* %50, align 4, !tbaa !37
  %52 = getelementptr inbounds %union.t_iparams* %forceparams, i64 %49, i32 0, i32 1
  %53 = load float* %52, align 4, !tbaa !40
  %54 = getelementptr inbounds %union.t_iparams* %forceparams, i64 %49, i32 0, i32 2
  %55 = load float* %54, align 4, !tbaa !39
  %sqrtf = tail call float @sqrtf(float %42) #6
  %56 = fsub float %sqrtf, %51
  %57 = fmul float %53, %56
  %58 = fmul float %56, %57
  %59 = fmul float %55, %58
  %60 = fmul float %56, %59
  %61 = fmul float %57, 2.000000e+00
  %62 = fmul float %58, 3.000000e+00
  %63 = fmul float %55, %62
  %64 = fadd float %61, %63
  %65 = fsub float -0.000000e+00, %64
  %66 = fdiv float %65, %sqrtf
  %67 = load i32* %4, align 4, !tbaa !41
  %68 = sub nsw i32 %17, %67
  %69 = sext i32 %68 to i64
  %70 = load [3 x i32]** %5, align 8, !tbaa !43
  %71 = getelementptr inbounds [3 x i32]* %70, i64 %69, i64 0
  %72 = sub nsw i32 %20, %67
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [3 x i32]* %70, i64 %73, i64 0
  %75 = load i32* %71, align 4, !tbaa !36
  %76 = load i32* %74, align 4, !tbaa !36
  %77 = getelementptr inbounds [3 x i32]* %70, i64 %69, i64 1
  %78 = load i32* %77, align 4, !tbaa !36
  %79 = getelementptr inbounds [3 x i32]* %70, i64 %73, i64 1
  %80 = load i32* %79, align 4, !tbaa !36
  %81 = getelementptr inbounds [3 x i32]* %70, i64 %69, i64 2
  %82 = load i32* %81, align 4, !tbaa !36
  %83 = getelementptr inbounds [3 x i32]* %70, i64 %73, i64 2
  %84 = load i32* %83, align 4, !tbaa !36
  %85 = sub nsw i32 %82, %84
  %86 = mul i32 %85, 3
  %87 = add i32 %78, 3
  %88 = sub i32 %87, %80
  %89 = add i32 %88, %86
  %90 = mul i32 %89, 3
  %91 = add i32 %75, 4
  %92 = sub i32 %91, %76
  %93 = add i32 %92, %90
  %94 = sext i32 %93 to i64
  %95 = load [3 x float]** %6, align 8, !tbaa !44
  br label %96

; <label>:96                                      ; preds = %._crit_edge, %45
  %97 = phi float [ %27, %45 ], [ %.pre, %._crit_edge ]
  %indvars.iv26 = phi i64 [ 0, %45 ], [ %indvars.iv.next27, %._crit_edge ]
  %98 = fmul float %66, %97
  %99 = getelementptr inbounds [3 x float]* %f, i64 %21, i64 %indvars.iv26
  %100 = load float* %99, align 4, !tbaa !14
  %101 = fadd float %100, %98
  store float %101, float* %99, align 4, !tbaa !14
  %102 = getelementptr inbounds [3 x float]* %f, i64 %23, i64 %indvars.iv26
  %103 = load float* %102, align 4, !tbaa !14
  %104 = fsub float %103, %98
  store float %104, float* %102, align 4, !tbaa !14
  %105 = getelementptr inbounds [3 x float]* %95, i64 %94, i64 %indvars.iv26
  %106 = load float* %105, align 4, !tbaa !14
  %107 = fadd float %98, %106
  store float %107, float* %105, align 4, !tbaa !14
  %108 = getelementptr inbounds [3 x float]* %95, i64 13, i64 %indvars.iv26
  %109 = load float* %108, align 4, !tbaa !14
  %110 = fsub float %109, %98
  store float %110, float* %108, align 4, !tbaa !14
  %indvars.iv.next27 = add nuw nsw i64 %indvars.iv26, 1
  %exitcond = icmp eq i64 %indvars.iv.next27, 3
  br i1 %exitcond, label %.loopexit, label %._crit_edge

._crit_edge:                                      ; preds = %96
  %.phi.trans.insert = getelementptr inbounds [3 x float]* %dx, i64 0, i64 %indvars.iv.next27
  %.pre = load float* %.phi.trans.insert, align 4, !tbaa !14
  br label %96

; <label>:111                                     ; preds = %11
  ret float %vtot.0.ph
}
