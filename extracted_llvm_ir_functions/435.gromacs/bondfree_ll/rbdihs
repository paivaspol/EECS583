define float @rbdihs(i32 %nbonds, i32* nocapture %forceatoms, %union.t_iparams* nocapture %forceparams, [3 x float]* nocapture %x, [3 x float]* nocapture %f, %struct.t_forcerec* nocapture %fr, %struct.t_graph* nocapture %g, [3 x float]* nocapture %box, float %lambda, float* nocapture %dvdlambda, %struct.t_mdatoms* nocapture %md, i32 %ngrp, float* nocapture %egnb, float* nocapture %egcoul, %struct.t_fcdata* nocapture %fcd) #0 {
entry:
  %r_ij = alloca [3 x float], align 4
  %r_kj = alloca [3 x float], align 4
  %r_kl = alloca [3 x float], align 4
  %m = alloca [3 x float], align 4
  %n = alloca [3 x float], align 4
  %parm = alloca [6 x float], align 16
  %parm152 = bitcast [6 x float]* %parm to i8*
  %cos_phi = alloca float, align 4
  %sign = alloca float, align 4
  %cmp149 = icmp sgt i32 %nbonds, 0
  br i1 %cmp149, label %for.body.lr.ph, label %for.end90

for.body.lr.ph:                                   ; preds = %entry
  %arraydecay24 = getelementptr inbounds [3 x float]* %r_ij, i64 0, i64 0
  %arraydecay25 = getelementptr inbounds [3 x float]* %r_kj, i64 0, i64 0
  %arraydecay26 = getelementptr inbounds [3 x float]* %r_kl, i64 0, i64 0
  %arraydecay27 = getelementptr inbounds [3 x float]* %m, i64 0, i64 0
  %arraydecay28 = getelementptr inbounds [3 x float]* %n, i64 0, i64 0
  %arrayidx48 = getelementptr inbounds [6 x float]* %parm, i64 0, i64 0
  %arrayidx49 = getelementptr inbounds [6 x float]* %parm, i64 0, i64 1
  %arrayidx54 = getelementptr inbounds [6 x float]* %parm, i64 0, i64 2
  %arrayidx61 = getelementptr inbounds [6 x float]* %parm, i64 0, i64 3
  %arrayidx68 = getelementptr inbounds [6 x float]* %parm, i64 0, i64 4
  %arrayidx75 = getelementptr inbounds [6 x float]* %parm, i64 0, i64 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end ]
  %vtot.0151 = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %add89, %if.end ]
  %0 = add nsw i64 %indvars.iv, 1
  %arrayidx = getelementptr inbounds i32* %forceatoms, i64 %indvars.iv
  %1 = load i32* %arrayidx, align 4, !tbaa !3
  %2 = add nsw i64 %indvars.iv, 2
  %arrayidx3 = getelementptr inbounds i32* %forceatoms, i64 %0
  %3 = load i32* %arrayidx3, align 4, !tbaa !3
  %4 = add nsw i64 %indvars.iv, 3
  %arrayidx6 = getelementptr inbounds i32* %forceatoms, i64 %2
  %5 = load i32* %arrayidx6, align 4, !tbaa !3
  %6 = add nsw i64 %indvars.iv, 4
  %arrayidx9 = getelementptr inbounds i32* %forceatoms, i64 %4
  %7 = load i32* %arrayidx9, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 5
  %arrayidx12 = getelementptr inbounds i32* %forceatoms, i64 %6
  %8 = load i32* %arrayidx12, align 4, !tbaa !3
  %idxprom13 = sext i32 %3 to i64
  %arraydecay = getelementptr inbounds [3 x float]* %x, i64 %idxprom13, i64 0
  %idxprom15 = sext i32 %5 to i64
  %arraydecay17 = getelementptr inbounds [3 x float]* %x, i64 %idxprom15, i64 0
  %idxprom18 = sext i32 %7 to i64
  %arraydecay20 = getelementptr inbounds [3 x float]* %x, i64 %idxprom18, i64 0
  %idxprom21 = sext i32 %8 to i64
  %arraydecay23 = getelementptr inbounds [3 x float]* %x, i64 %idxprom21, i64 0
  %call = call float @dih_angle([3 x float]* undef, float* %arraydecay, float* %arraydecay17, float* %arraydecay20, float* %arraydecay23, float* %arraydecay24, float* %arraydecay25, float* %arraydecay26, float* %arraydecay27, float* %arraydecay28, float* %cos_phi, float* %sign) #7
  %cmp29 = fcmp olt float %call, 0.000000e+00
  %conv = fpext float %call to double
  br i1 %cmp29, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %add = fadd double %conv, 0x400921FB54442D18
  br label %if.end

if.else:                                          ; preds = %for.body
  %sub = fadd double %conv, 0xC00921FB54442D18
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %phi.0.in = phi double [ %add, %if.then ], [ %sub, %if.else ]
  %phi.0 = fptrunc double %phi.0.in to float
  %9 = load float* %cos_phi, align 4, !tbaa !0
  %sub33 = fsub float -0.000000e+00, %9
  store float %sub33, float* %cos_phi, align 4, !tbaa !0
  %conv34 = fpext float %phi.0 to double
  %call35 = call double @sin(double %conv34) #5
  %10 = sext i32 %1 to i64
  %scevgep = getelementptr %union.t_iparams* %forceparams, i64 %10
  %scevgep153 = bitcast %union.t_iparams* %scevgep to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %parm152, i8* %scevgep153, i64 24, i32 4, i1 false)
  %conv36 = fptrunc double %call35 to float
  %11 = load float* %arrayidx48, align 16, !tbaa !0
  %12 = load float* %arrayidx49, align 4, !tbaa !0
  %add50 = fadd float %12, 0.000000e+00
  %mul52 = fmul float %12, %sub33
  %add53 = fadd float %11, %mul52
  %13 = load float* %arrayidx54, align 8, !tbaa !0
  %mul55 = fmul float %13, 2.000000e+00
  %mul56 = fmul float %mul55, %sub33
  %add57 = fadd float %add50, %mul56
  %mul58 = fmul float %9, %9
  %mul59 = fmul float %mul58, %13
  %add60 = fadd float %add53, %mul59
  %14 = load float* %arrayidx61, align 4, !tbaa !0
  %mul62 = fmul float %14, 3.000000e+00
  %mul63 = fmul float %mul58, %mul62
  %add64 = fadd float %add57, %mul63
  %mul65 = fmul float %mul58, %sub33
  %mul66 = fmul float %mul65, %14
  %add67 = fadd float %add60, %mul66
  %15 = load float* %arrayidx68, align 16, !tbaa !0
  %mul69 = fmul float %15, 4.000000e+00
  %mul70 = fmul float %mul65, %mul69
  %add71 = fadd float %add64, %mul70
  %mul72 = fmul float %mul65, %sub33
  %mul73 = fmul float %mul72, %15
  %add74 = fadd float %add67, %mul73
  %16 = load float* %arrayidx75, align 4, !tbaa !0
  %mul76 = fmul float %16, 5.000000e+00
  %mul77 = fmul float %mul72, %mul76
  %add78 = fadd float %add71, %mul77
  %mul79 = fmul float %mul72, %sub33
  %mul80 = fmul float %mul79, %16
  %add81 = fadd float %add74, %mul80
  %17 = fmul float %conv36, %add78
  %mul83 = fsub float -0.000000e+00, %17
  call void @do_dih_fup(i32 %3, i32 %5, i32 %7, i32 %8, float %mul83, float* %arraydecay24, float* %arraydecay25, float* %arraydecay26, float* %arraydecay27, float* %arraydecay28, [3 x float]* %f, %struct.t_forcerec* %fr, %struct.t_graph* %g, [3 x float]* undef) #7
  %add89 = fadd float %vtot.0151, %add81
  %18 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %18, %nbonds
  br i1 %cmp, label %for.body, label %for.end90

for.end90:                                        ; preds = %if.end, %entry
  %vtot.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %add89, %if.end ]
  ret float %vtot.0.lcssa
}
