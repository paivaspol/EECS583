define float @posres(i32 %nbonds, i32* nocapture readonly %forceatoms, %union.t_iparams* %forceparams, [3 x float]* %x, [3 x float]* nocapture %f, %struct.t_forcerec* nocapture readonly %fr, %struct.t_graph* nocapture readnone %g, [3 x float]* nocapture readnone %box, float %lambda, float* nocapture readnone %dvdlambda, %struct.t_mdatoms* nocapture readnone %md, i32 %ngrp, float* nocapture readnone %egnb, float* nocapture readnone %egcoul, %struct.t_fcdata* nocapture readnone %fcd) #3 {
  %dx = alloca [3 x float], align 4
  %1 = icmp sgt i32 %nbonds, 0
  br i1 %1, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %0
  %2 = getelementptr inbounds %struct.t_forcerec* %fr, i64 0, i32 0
  %3 = getelementptr inbounds [3 x float]* %dx, i64 0, i64 0
  %4 = getelementptr inbounds [3 x float]* %dx, i64 0, i64 1
  %5 = getelementptr inbounds [3 x float]* %dx, i64 0, i64 2
  %6 = sext i32 %nbonds to i64
  br label %7

; <label>:7                                       ; preds = %.lr.ph, %51
  %indvars.iv6 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next7, %51 ]
  %vtot.03 = phi float [ 0.000000e+00, %.lr.ph ], [ %52, %51 ]
  %8 = or i64 %indvars.iv6, 1
  %9 = getelementptr inbounds i32* %forceatoms, i64 %indvars.iv6
  %10 = load i32* %9, align 4, !tbaa !36
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 2
  %11 = getelementptr inbounds i32* %forceatoms, i64 %8
  %12 = load i32* %11, align 4, !tbaa !36
  %13 = sext i32 %10 to i64
  %14 = getelementptr inbounds %union.t_iparams* %forceparams, i64 %13, i32 0, i32 3
  %15 = load i32* %2, align 4, !tbaa !65
  %16 = icmp eq i32 %15, 1
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds [3 x float]* %x, i64 %17, i64 0
  %19 = getelementptr inbounds %union.t_iparams* %forceparams, i64 %13, i32 0, i32 0
  br i1 %16, label %20, label %34

; <label>:20                                      ; preds = %7
  %21 = load float* %18, align 4, !tbaa !14
  %22 = load float* %19, align 4, !tbaa !14
  %23 = fsub float %21, %22
  %24 = getelementptr inbounds [3 x float]* %x, i64 %17, i64 1
  %25 = load float* %24, align 4, !tbaa !14
  %26 = getelementptr inbounds float* %19, i64 1
  %27 = load float* %26, align 4, !tbaa !14
  %28 = fsub float %25, %27
  %29 = getelementptr inbounds [3 x float]* %x, i64 %17, i64 2
  %30 = load float* %29, align 4, !tbaa !14
  %31 = getelementptr inbounds float* %19, i64 2
  %32 = load float* %31, align 4, !tbaa !14
  %33 = fsub float %30, %32
  store float %23, float* %3, align 4, !tbaa !14
  store float %28, float* %4, align 4, !tbaa !14
  store float %33, float* %5, align 4, !tbaa !14
  br label %.preheader

; <label>:34                                      ; preds = %7
  call void @pbc_dx(float* %18, float* %19, float* %3) #9
  br label %.preheader

.preheader:                                       ; preds = %20, %34, %.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %.preheader ], [ 0, %34 ], [ 0, %20 ]
  %v.01 = phi float [ %50, %.preheader ], [ 0.000000e+00, %34 ], [ 0.000000e+00, %20 ]
  %35 = getelementptr inbounds [3 x float]* %f, i64 %17, i64 %indvars.iv
  %36 = load float* %35, align 4, !tbaa !14
  %37 = getelementptr inbounds float* %14, i64 %indvars.iv
  %38 = load float* %37, align 4, !tbaa !14
  %39 = getelementptr inbounds [3 x float]* %dx, i64 0, i64 %indvars.iv
  %40 = load float* %39, align 4, !tbaa !14
  %41 = fmul float %38, %40
  %42 = fsub float %36, %41
  %43 = fpext float %38 to double
  %44 = fmul double %43, 5.000000e-01
  %45 = fpext float %40 to double
  %46 = fmul double %44, %45
  %47 = fmul double %45, %46
  %48 = fpext float %v.01 to double
  %49 = fadd double %48, %47
  %50 = fptrunc double %49 to float
  store float %42, float* %35, align 4, !tbaa !14
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %51, label %.preheader

; <label>:51                                      ; preds = %.preheader
  %52 = fadd float %vtot.03, %50
  %53 = icmp slt i64 %indvars.iv.next7, %6
  br i1 %53, label %7, label %._crit_edge

._crit_edge:                                      ; preds = %51, %0
  %vtot.0.lcssa = phi float [ 0.000000e+00, %0 ], [ %52, %51 ]
  ret float %vtot.0.lcssa
}
