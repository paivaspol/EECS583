define float @idihs(i32 %nbonds, i32* nocapture %forceatoms, %union.t_iparams* nocapture %forceparams, [3 x float]* nocapture %x, [3 x float]* nocapture %f, %struct.t_forcerec* nocapture %fr, %struct.t_graph* nocapture %g, [3 x float]* nocapture %box, float %lambda, float* nocapture %dvdlambda, %struct.t_mdatoms* nocapture %md, i32 %ngrp, float* nocapture %egnb, float* nocapture %egcoul, %struct.t_fcdata* nocapture %fcd) #0 {
entry:
  %cos_phi = alloca float, align 4
  %sign = alloca float, align 4
  %r_ij = alloca [3 x float], align 4
  %r_kj = alloca [3 x float], align 4
  %r_kl = alloca [3 x float], align 4
  %m = alloca [3 x float], align 4
  %n = alloca [3 x float], align 4
  %cmp75 = icmp sgt i32 %nbonds, 0
  br i1 %cmp75, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %arraydecay24 = getelementptr inbounds [3 x float]* %r_ij, i64 0, i64 0
  %arraydecay25 = getelementptr inbounds [3 x float]* %r_kj, i64 0, i64 0
  %arraydecay26 = getelementptr inbounds [3 x float]* %r_kl, i64 0, i64 0
  %arraydecay27 = getelementptr inbounds [3 x float]* %m, i64 0, i64 0
  %arraydecay28 = getelementptr inbounds [3 x float]* %n, i64 0, i64 0
  %conv1.i = fsub float 1.000000e+00, %lambda
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %vtot.077 = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %add45, %for.body ]
  %0 = add nsw i64 %indvars.iv, 1
  %arrayidx = getelementptr inbounds i32* %forceatoms, i64 %indvars.iv
  %1 = load i32* %arrayidx, align 4, !tbaa !3
  %2 = add nsw i64 %indvars.iv, 2
  %arrayidx3 = getelementptr inbounds i32* %forceatoms, i64 %0
  %3 = load i32* %arrayidx3, align 4, !tbaa !3
  %4 = add nsw i64 %indvars.iv, 3
  %arrayidx6 = getelementptr inbounds i32* %forceatoms, i64 %2
  %5 = load i32* %arrayidx6, align 4, !tbaa !3
  %6 = add nsw i64 %indvars.iv, 4
  %arrayidx9 = getelementptr inbounds i32* %forceatoms, i64 %4
  %7 = load i32* %arrayidx9, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 5
  %arrayidx12 = getelementptr inbounds i32* %forceatoms, i64 %6
  %8 = load i32* %arrayidx12, align 4, !tbaa !3
  %idxprom13 = sext i32 %3 to i64
  %arraydecay = getelementptr inbounds [3 x float]* %x, i64 %idxprom13, i64 0
  %idxprom15 = sext i32 %5 to i64
  %arraydecay17 = getelementptr inbounds [3 x float]* %x, i64 %idxprom15, i64 0
  %idxprom18 = sext i32 %7 to i64
  %arraydecay20 = getelementptr inbounds [3 x float]* %x, i64 %idxprom18, i64 0
  %idxprom21 = sext i32 %8 to i64
  %arraydecay23 = getelementptr inbounds [3 x float]* %x, i64 %idxprom21, i64 0
  %call = call float @dih_angle([3 x float]* undef, float* %arraydecay, float* %arraydecay17, float* %arraydecay20, float* %arraydecay23, float* %arraydecay24, float* %arraydecay25, float* %arraydecay26, float* %arraydecay27, float* %arraydecay28, float* %cos_phi, float* %sign) #7
  %idxprom29 = sext i32 %1 to i64
  %9 = getelementptr inbounds %union.t_iparams* %forceparams, i64 %idxprom29, i32 0, i32 1
  %10 = load float* %9, align 4, !tbaa !0
  %11 = getelementptr inbounds %union.t_iparams* %forceparams, i64 %idxprom29, i32 0, i32 3
  %12 = load float* %11, align 4, !tbaa !0
  %rA = getelementptr inbounds %union.t_iparams* %forceparams, i64 %idxprom29, i32 0, i32 0
  %13 = load float* %rA, align 4, !tbaa !0
  %conv = fpext float %13 to double
  %mul = fmul double %conv, 0x3F91DF46A2529D39
  %conv37 = fptrunc double %mul to float
  %14 = getelementptr inbounds %union.t_iparams* %forceparams, i64 %idxprom29, i32 0, i32 2
  %15 = load float* %14, align 4, !tbaa !0
  %conv41 = fpext float %15 to double
  %mul42 = fmul double %conv41, 0x3F91DF46A2529D39
  %conv43 = fptrunc double %mul42 to float
  %mul.i = fmul float %conv1.i, %10
  %mul2.i = fmul float %12, %lambda
  %add.i = fadd float %mul.i, %mul2.i
  %mul3.i = fmul float %conv1.i, %conv37
  %mul4.i = fmul float %conv43, %lambda
  %add5.i = fadd float %mul3.i, %mul4.i
  %sub6.i = fsub float %call, %add5.i
  %mul7.i = fmul float %sub6.i, %sub6.i
  %16 = fmul float %add.i, %sub6.i
  %mul10.i = fmul float %add.i, 5.000000e-01
  %mul11.i = fmul float %mul10.i, %mul7.i
  %sub12.i = fsub float %12, %10
  %mul13.i = fmul float %sub12.i, 5.000000e-01
  %mul14.i = fmul float %mul13.i, %mul7.i
  %sub15.i = fsub float %conv37, %conv43
  %mul16.i = fmul float %add.i, %sub15.i
  %mul17.i = fmul float %mul16.i, %sub6.i
  %add18.i = fadd float %mul17.i, %mul14.i
  %17 = load float* %dvdlambda, align 4, !tbaa !0
  %add = fadd float %17, %add18.i
  store float %add, float* %dvdlambda, align 4, !tbaa !0
  %add45 = fadd float %vtot.077, %mul11.i
  call void @do_dih_fup(i32 %3, i32 %5, i32 %7, i32 %8, float %16, float* %arraydecay24, float* %arraydecay25, float* %arraydecay26, float* %arraydecay27, float* %arraydecay28, [3 x float]* %f, %struct.t_forcerec* %fr, %struct.t_graph* %g, [3 x float]* undef) #7
  %18 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %18, %nbonds
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  %vtot.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %add45, %for.body ]
  ret float %vtot.0.lcssa
}
