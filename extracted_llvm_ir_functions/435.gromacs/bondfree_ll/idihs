define float @idihs(i32 %nbonds, i32* nocapture readonly %forceatoms, %union.t_iparams* nocapture readonly %forceparams, [3 x float]* nocapture readonly %x, [3 x float]* nocapture %f, %struct.t_forcerec* nocapture readonly %fr, %struct.t_graph* nocapture readonly %g, [3 x float]* nocapture readnone %box, float %lambda, float* nocapture %dvdlambda, %struct.t_mdatoms* nocapture readnone %md, i32 %ngrp, float* nocapture readnone %egnb, float* nocapture readnone %egcoul, %struct.t_fcdata* nocapture readnone %fcd) #3 {
  %cos_phi = alloca float, align 4
  %sign = alloca float, align 4
  %r_ij = alloca [3 x float], align 4
  %r_kj = alloca [3 x float], align 4
  %r_kl = alloca [3 x float], align 4
  %m = alloca [3 x float], align 4
  %n = alloca [3 x float], align 4
  %1 = icmp sgt i32 %nbonds, 0
  br i1 %1, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %0
  %2 = getelementptr inbounds [3 x float]* %r_ij, i64 0, i64 0
  %3 = getelementptr inbounds [3 x float]* %r_kj, i64 0, i64 0
  %4 = getelementptr inbounds [3 x float]* %r_kl, i64 0, i64 0
  %5 = getelementptr inbounds [3 x float]* %m, i64 0, i64 0
  %6 = getelementptr inbounds [3 x float]* %n, i64 0, i64 0
  %7 = fsub float 1.000000e+00, %lambda
  %8 = sext i32 %nbonds to i64
  br label %9

; <label>:9                                       ; preds = %.lr.ph, %9
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %9 ]
  %vtot.02 = phi float [ 0.000000e+00, %.lr.ph ], [ %68, %9 ]
  %10 = add nuw nsw i64 %indvars.iv, 1
  %11 = getelementptr inbounds i32* %forceatoms, i64 %indvars.iv
  %12 = load i32* %11, align 4, !tbaa !36
  %13 = add nuw nsw i64 %indvars.iv, 2
  %14 = getelementptr inbounds i32* %forceatoms, i64 %10
  %15 = load i32* %14, align 4, !tbaa !36
  %16 = add nuw nsw i64 %indvars.iv, 3
  %17 = getelementptr inbounds i32* %forceatoms, i64 %13
  %18 = load i32* %17, align 4, !tbaa !36
  %19 = add nuw nsw i64 %indvars.iv, 4
  %20 = getelementptr inbounds i32* %forceatoms, i64 %16
  %21 = load i32* %20, align 4, !tbaa !36
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 5
  %22 = getelementptr inbounds i32* %forceatoms, i64 %19
  %23 = load i32* %22, align 4, !tbaa !36
  %24 = sext i32 %15 to i64
  %25 = getelementptr inbounds [3 x float]* %x, i64 %24, i64 0
  %26 = sext i32 %18 to i64
  %27 = getelementptr inbounds [3 x float]* %x, i64 %26, i64 0
  %28 = sext i32 %21 to i64
  %29 = getelementptr inbounds [3 x float]* %x, i64 %28, i64 0
  %30 = sext i32 %23 to i64
  %31 = getelementptr inbounds [3 x float]* %x, i64 %30, i64 0
  %32 = call float @dih_angle([3 x float]* undef, float* %25, float* %27, float* %29, float* %31, float* %2, float* %3, float* %4, float* %5, float* %6, float* %cos_phi, float* %sign) #11
  %33 = sext i32 %12 to i64
  %34 = getelementptr inbounds %union.t_iparams* %forceparams, i64 %33, i32 0, i32 1
  %35 = load float* %34, align 4, !tbaa !46
  %36 = getelementptr inbounds %union.t_iparams* %forceparams, i64 %33, i32 0, i32 3
  %37 = load float* %36, align 4, !tbaa !48
  %38 = getelementptr inbounds %union.t_iparams* %forceparams, i64 %33, i32 0, i32 0
  %39 = load float* %38, align 4, !tbaa !49
  %40 = fpext float %39 to double
  %41 = fmul double %40, 0x3F91DF46A2529D39
  %42 = fptrunc double %41 to float
  %43 = getelementptr inbounds %union.t_iparams* %forceparams, i64 %33, i32 0, i32 2
  %44 = load float* %43, align 4, !tbaa !50
  %45 = fpext float %44 to double
  %46 = fmul double %45, 0x3F91DF46A2529D39
  %47 = fptrunc double %46 to float
  %48 = fmul float %7, %35
  %49 = fmul float %37, %lambda
  %50 = fadd float %48, %49
  %51 = fmul float %7, %42
  %52 = fmul float %47, %lambda
  %53 = fadd float %51, %52
  %54 = fsub float %32, %53
  %55 = fmul float %54, %54
  %56 = fmul float %50, %54
  %57 = fmul float %50, 5.000000e-01
  %58 = fmul float %57, %55
  %59 = fsub float %37, %35
  %60 = fmul float %59, 5.000000e-01
  %61 = fmul float %60, %55
  %62 = fsub float %42, %47
  %63 = fmul float %50, %62
  %64 = fmul float %63, %54
  %65 = fadd float %64, %61
  %66 = load float* %dvdlambda, align 4, !tbaa !14
  %67 = fadd float %66, %65
  store float %67, float* %dvdlambda, align 4, !tbaa !14
  %68 = fadd float %vtot.02, %58
  call void @do_dih_fup(i32 %15, i32 %18, i32 %21, i32 %23, float %56, float* %2, float* %3, float* %4, float* %5, float* %6, [3 x float]* %f, %struct.t_forcerec* %fr, %struct.t_graph* %g, [3 x float]* undef) #11
  %69 = icmp slt i64 %indvars.iv.next, %8
  br i1 %69, label %9, label %._crit_edge

._crit_edge:                                      ; preds = %9, %0
  %vtot.0.lcssa = phi float [ 0.000000e+00, %0 ], [ %68, %9 ]
  ret float %vtot.0.lcssa
}
