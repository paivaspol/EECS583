define float @bond_angle([3 x float]* nocapture %box, float* nocapture %xi, float* nocapture %xj, float* nocapture %xk, float* nocapture %r_ij, float* nocapture %r_kj, float* nocapture %costh) #0 {
entry:
  %0 = load float* %xi, align 4, !tbaa !0
  %1 = load float* %xj, align 4, !tbaa !0
  %sub.i.i = fsub float %0, %1
  %arrayidx2.i.i = getelementptr inbounds float* %xi, i64 1
  %2 = load float* %arrayidx2.i.i, align 4, !tbaa !0
  %arrayidx3.i.i = getelementptr inbounds float* %xj, i64 1
  %3 = load float* %arrayidx3.i.i, align 4, !tbaa !0
  %sub4.i.i = fsub float %2, %3
  %arrayidx5.i.i = getelementptr inbounds float* %xi, i64 2
  %4 = load float* %arrayidx5.i.i, align 4, !tbaa !0
  %arrayidx6.i.i = getelementptr inbounds float* %xj, i64 2
  %5 = load float* %arrayidx6.i.i, align 4, !tbaa !0
  %sub7.i.i = fsub float %4, %5
  store float %sub.i.i, float* %r_ij, align 4, !tbaa !0
  %arrayidx9.i.i = getelementptr inbounds float* %r_ij, i64 1
  store float %sub4.i.i, float* %arrayidx9.i.i, align 4, !tbaa !0
  %arrayidx10.i.i = getelementptr inbounds float* %r_ij, i64 2
  store float %sub7.i.i, float* %arrayidx10.i.i, align 4, !tbaa !0
  %6 = load float* %xk, align 4, !tbaa !0
  %7 = load float* %xj, align 4, !tbaa !0
  %sub.i.i7 = fsub float %6, %7
  %arrayidx2.i.i8 = getelementptr inbounds float* %xk, i64 1
  %8 = load float* %arrayidx2.i.i8, align 4, !tbaa !0
  %9 = load float* %arrayidx3.i.i, align 4, !tbaa !0
  %sub4.i.i10 = fsub float %8, %9
  %arrayidx5.i.i11 = getelementptr inbounds float* %xk, i64 2
  %10 = load float* %arrayidx5.i.i11, align 4, !tbaa !0
  %11 = load float* %arrayidx6.i.i, align 4, !tbaa !0
  %sub7.i.i13 = fsub float %10, %11
  store float %sub.i.i7, float* %r_kj, align 4, !tbaa !0
  %arrayidx9.i.i14 = getelementptr inbounds float* %r_kj, i64 1
  store float %sub4.i.i10, float* %arrayidx9.i.i14, align 4, !tbaa !0
  %arrayidx10.i.i15 = getelementptr inbounds float* %r_kj, i64 2
  store float %sub7.i.i13, float* %arrayidx10.i.i15, align 4, !tbaa !0
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %entry
  %12 = phi float [ %sub.i.i7, %entry ], [ %.pre, %for.body.i.for.body.i_crit_edge ]
  %indvars.iv.i = phi i64 [ 0, %entry ], [ %indvars.iv.next.i, %for.body.i.for.body.i_crit_edge ]
  %ipb.034.i = phi double [ 0.000000e+00, %entry ], [ %add7.i, %for.body.i.for.body.i_crit_edge ]
  %ipa.033.i = phi double [ 0.000000e+00, %entry ], [ %add5.i, %for.body.i.for.body.i_crit_edge ]
  %ip.032.i = phi double [ 0.000000e+00, %entry ], [ %add.i, %for.body.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr inbounds float* %r_ij, i64 %indvars.iv.i
  %13 = load float* %arrayidx.i, align 4, !tbaa !0
  %conv.i = fpext float %13 to double
  %conv3.i = fpext float %12 to double
  %mul.i = fmul double %conv.i, %conv3.i
  %add.i = fadd double %ip.032.i, %mul.i
  %mul4.i = fmul double %conv.i, %conv.i
  %add5.i = fadd double %ipa.033.i, %mul4.i
  %mul6.i = fmul double %conv3.i, %conv3.i
  %add7.i = fadd double %ipb.034.i, %mul6.i
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 3
  br i1 %exitcond, label %for.end.i, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  %arrayidx2.i.phi.trans.insert = getelementptr inbounds float* %r_kj, i64 %indvars.iv.next.i
  %.pre = load float* %arrayidx2.i.phi.trans.insert, align 4, !tbaa !0
  br label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  %mul8.i = fmul double %add5.i, %add7.i
  %call.i = tail call double @sqrt(double %mul8.i) #5
  %div.i = fdiv double 1.000000e+00, %call.i
  %mul9.i = fmul double %add.i, %div.i
  %conv10.i = fptrunc double %mul9.i to float
  %cmp12.i = fcmp ogt float %conv10.i, 1.000000e+00
  br i1 %cmp12.i, label %cos_angle.exit, label %if.end.i

if.end.i:                                         ; preds = %for.end.i
  %cmp15.i = fcmp olt float %conv10.i, -1.000000e+00
  %.conv10.i = select i1 %cmp15.i, float -1.000000e+00, float %conv10.i
  br label %cos_angle.exit

cos_angle.exit:                                   ; preds = %for.end.i, %if.end.i
  %retval.0.i = phi float [ 1.000000e+00, %for.end.i ], [ %.conv10.i, %if.end.i ]
  store float %retval.0.i, float* %costh, align 4, !tbaa !0
  %conv = fpext float %retval.0.i to double
  %call1 = tail call double @acos(double %conv) #5
  %conv2 = fptrunc double %call1 to float
  ret float %conv2
}
