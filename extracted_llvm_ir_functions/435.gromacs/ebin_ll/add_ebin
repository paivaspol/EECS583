define void @add_ebin(%struct.t_ebin* nocapture %eb, i32 %index, i32 %nener, float* nocapture %ener, i32 %step) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.t_ebin* %eb}, i64 0, metadata !55), !dbg !172
  tail call void @llvm.dbg.value(metadata !{i32 %index}, i64 0, metadata !56), !dbg !172
  tail call void @llvm.dbg.value(metadata !{i32 %nener}, i64 0, metadata !57), !dbg !172
  tail call void @llvm.dbg.value(metadata !{float* %ener}, i64 0, metadata !58), !dbg !172
  tail call void @llvm.dbg.value(metadata !{i32 %step}, i64 0, metadata !59), !dbg !172
  %add = add nsw i32 %nener, %index, !dbg !173
  %nener1 = getelementptr inbounds %struct.t_ebin* %eb, i64 0, i32 0, !dbg !173
  %0 = load i32* %nener1, align 4, !dbg !173, !tbaa !157
  %cmp = icmp sgt i32 %add, %0, !dbg !173
  %cmp2 = icmp slt i32 %index, 0, !dbg !173
  %or.cond = or i1 %cmp, %cmp2, !dbg !173
  br i1 %or.cond, label %if.then, label %if.end, !dbg !173

if.then:                                          ; preds = %entry
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([59 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8]* @.str1, i64 0, i64 0), i32 95, i32 %index, i32 %nener, i32 %0) #6, !dbg !174
  br label %if.end, !dbg !174

if.end:                                           ; preds = %entry, %if.then
  tail call void @llvm.dbg.value(metadata !{i32 %step}, i64 0, metadata !61), !dbg !175
  %cmp4 = icmp sgt i32 %step, 0, !dbg !176
  br i1 %cmp4, label %if.then5, label %if.end9, !dbg !176

if.then5:                                         ; preds = %if.end
  %conv = sitofp i32 %step to double, !dbg !177
  %div = fdiv double 1.000000e+00, %conv, !dbg !177
  %add7 = fadd double %conv, 1.000000e+00, !dbg !177
  %div8 = fdiv double %div, %add7, !dbg !177
  tail call void @llvm.dbg.value(metadata !{double %div8}, i64 0, metadata !65), !dbg !177
  br label %if.end9, !dbg !177

if.end9:                                          ; preds = %if.end, %if.then5
  %invmm.0 = phi double [ %div8, %if.then5 ], [ 0.000000e+00, %if.end ]
  %idxprom = sext i32 %index to i64, !dbg !178
  %e10 = getelementptr inbounds %struct.t_ebin* %eb, i64 0, i32 2, !dbg !178
  %1 = load %struct.t_energy** %e10, align 8, !dbg !178, !tbaa !162
  tail call void @llvm.dbg.value(metadata !10, i64 0, metadata !60), !dbg !179
  %cmp1154 = icmp sgt i32 %nener, 0, !dbg !179
  br i1 %cmp1154, label %for.body.lr.ph, label %for.end, !dbg !179

for.body.lr.ph:                                   ; preds = %if.end9
  %conv22 = sitofp i32 %step to double, !dbg !181
  br label %for.body, !dbg !179

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx14 = getelementptr inbounds float* %ener, i64 %indvars.iv, !dbg !183
  %2 = load float* %arrayidx14, align 4, !dbg !183, !tbaa !168
  %conv15 = fpext float %2 to double, !dbg !183
  tail call void @llvm.dbg.value(metadata !{double %conv15}, i64 0, metadata !62), !dbg !183
  %arrayidx.sum = add i64 %indvars.iv, %idxprom, !dbg !184
  %e19 = getelementptr inbounds %struct.t_energy* %1, i64 %arrayidx.sum, i32 0, !dbg !184
  store float %2, float* %e19, align 4, !dbg !184, !tbaa !168
  %esum = getelementptr inbounds %struct.t_energy* %1, i64 %arrayidx.sum, i32 2, !dbg !181
  %3 = load double* %esum, align 8, !dbg !181, !tbaa !185
  %mul = fmul double %conv22, %conv15, !dbg !181
  %sub = fsub double %3, %mul, !dbg !181
  %conv23 = fptrunc double %sub to float, !dbg !181
  tail call void @llvm.dbg.value(metadata !{float %conv23}, i64 0, metadata !186), !dbg !187
  %mul.i = fmul float %conv23, %conv23, !dbg !188
  %conv24 = fpext float %mul.i to double, !dbg !181
  %mul25 = fmul double %invmm.0, %conv24, !dbg !181
  %eav = getelementptr inbounds %struct.t_energy* %1, i64 %arrayidx.sum, i32 1, !dbg !181
  %4 = load double* %eav, align 8, !dbg !181, !tbaa !185
  %add28 = fadd double %4, %mul25, !dbg !181
  store double %add28, double* %eav, align 8, !dbg !181, !tbaa !185
  %add32 = fadd double %conv15, %3, !dbg !190
  store double %add32, double* %esum, align 8, !dbg !190, !tbaa !185
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !179
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !179
  %exitcond = icmp eq i32 %lftr.wideiv, %nener, !dbg !179
  br i1 %exitcond, label %for.end, label %for.body, !dbg !179

for.end:                                          ; preds = %for.body, %if.end9
  ret void, !dbg !191
}
