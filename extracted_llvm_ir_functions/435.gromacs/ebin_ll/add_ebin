define void @add_ebin(%struct.t_ebin* nocapture readonly %eb, i32 %index, i32 %nener, float* nocapture readonly %ener, i32 %step) #3 {
  tail call void @llvm.dbg.value(metadata %struct.t_ebin* %eb, i64 0, metadata !128, metadata !175), !dbg !253
  tail call void @llvm.dbg.value(metadata i32 %index, i64 0, metadata !129, metadata !175), !dbg !254
  tail call void @llvm.dbg.value(metadata i32 %nener, i64 0, metadata !130, metadata !175), !dbg !255
  tail call void @llvm.dbg.value(metadata float* %ener, i64 0, metadata !131, metadata !175), !dbg !256
  tail call void @llvm.dbg.value(metadata i32 %step, i64 0, metadata !132, metadata !175), !dbg !257
  %1 = add nsw i32 %nener, %index, !dbg !258
  %2 = getelementptr inbounds %struct.t_ebin* %eb, i64 0, i32 0, !dbg !260
  %3 = load i32* %2, align 4, !dbg !260, !tbaa !221
  %4 = icmp sgt i32 %1, %3, !dbg !261
  %5 = icmp slt i32 %index, 0, !dbg !262
  %or.cond = or i1 %5, %4, !dbg !263
  br i1 %or.cond, label %6, label %7, !dbg !263

; <label>:6                                       ; preds = %0
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([59 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8]* @.str1, i64 0, i64 0), i32 95, i32 %index, i32 %nener, i32 %3) #8, !dbg !264
  br label %7, !dbg !264

; <label>:7                                       ; preds = %0, %6
  tail call void @llvm.dbg.value(metadata i32 %step, i64 0, metadata !134, metadata !175), !dbg !265
  %8 = icmp sgt i32 %step, 0, !dbg !266
  br i1 %8, label %9, label %14, !dbg !268

; <label>:9                                       ; preds = %7
  %10 = sitofp i32 %step to double, !dbg !269
  %11 = fdiv double 1.000000e+00, %10, !dbg !270
  %12 = fadd double %10, 1.000000e+00, !dbg !271
  %13 = fdiv double %11, %12, !dbg !272
  tail call void @llvm.dbg.value(metadata double %13, i64 0, metadata !138, metadata !175), !dbg !273
  br label %14, !dbg !274

; <label>:14                                      ; preds = %7, %9
  %invmm.0 = phi double [ %13, %9 ], [ 0.000000e+00, %7 ]
  %15 = sext i32 %index to i64, !dbg !275
  %16 = getelementptr inbounds %struct.t_ebin* %eb, i64 0, i32 2, !dbg !276
  %17 = load %struct.t_energy** %16, align 8, !dbg !276, !tbaa !226
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !133, metadata !175), !dbg !277
  %18 = icmp sgt i32 %nener, 0, !dbg !278
  br i1 %18, label %.lr.ph, label %._crit_edge, !dbg !281

.lr.ph:                                           ; preds = %14
  %19 = sitofp i32 %step to double, !dbg !282
  %20 = add i32 %nener, -1, !dbg !281
  br label %21, !dbg !281

; <label>:21                                      ; preds = %21, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %21 ]
  %22 = getelementptr inbounds float* %ener, i64 %indvars.iv, !dbg !284
  %23 = load float* %22, align 4, !dbg !284, !tbaa !285
  %24 = fpext float %23 to double, !dbg !284
  tail call void @llvm.dbg.value(metadata double %24, i64 0, metadata !135, metadata !175), !dbg !286
  %.sum = add nsw i64 %indvars.iv, %15, !dbg !287
  %25 = getelementptr inbounds %struct.t_energy* %17, i64 %.sum, i32 0, !dbg !288
  store float %23, float* %25, align 4, !dbg !289, !tbaa !239
  %26 = fmul double %19, %24, !dbg !290
  %27 = getelementptr inbounds %struct.t_energy* %17, i64 %.sum, i32 1, !dbg !291
  %28 = bitcast double* %27 to <2 x double>*, !dbg !292
  %29 = load <2 x double>* %28, align 8, !dbg !292, !tbaa !293
  %30 = extractelement <2 x double> %29, i32 1, !dbg !294
  %31 = fsub double %30, %26, !dbg !294
  %32 = fptrunc double %31 to float, !dbg !295
  tail call void @llvm.dbg.value(metadata float %32, i64 0, metadata !161, metadata !175), !dbg !296
  %33 = fmul float %32, %32, !dbg !298
  %34 = fpext float %33 to double, !dbg !299
  %35 = fmul double %invmm.0, %34, !dbg !300
  %36 = insertelement <2 x double> undef, double %35, i32 0, !dbg !292
  %37 = insertelement <2 x double> %36, double %24, i32 1, !dbg !292
  %38 = fadd <2 x double> %37, %29, !dbg !292
  %39 = bitcast double* %27 to <2 x double>*, !dbg !292
  store <2 x double> %38, <2 x double>* %39, align 8, !dbg !292, !tbaa !293
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !281
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !281
  %exitcond = icmp eq i32 %lftr.wideiv, %20, !dbg !281
  br i1 %exitcond, label %._crit_edge, label %21, !dbg !281

._crit_edge:                                      ; preds = %21, %14
  ret void, !dbg !301
}
