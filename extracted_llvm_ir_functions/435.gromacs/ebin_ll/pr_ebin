define void @pr_ebin(%struct.__sFILE* nocapture %fp, %struct.t_ebin* nocapture readonly %eb, i32 %index, i32 %nener, i32 %nperline, i32 %prmode, i32 %tsteps, i32 %bPrHead) #3 {
  %1 = icmp slt i32 %index, 0
  br i1 %1, label %2, label %3

; <label>:2                                       ; preds = %0
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([29 x i8]* @.str5, i64 0, i64 0), i32 %index) #7
  br label %3

; <label>:3                                       ; preds = %2, %0
  %4 = icmp eq i32 %nener, -1
  br i1 %4, label %5, label %8

; <label>:5                                       ; preds = %3
  %6 = getelementptr inbounds %struct.t_ebin* %eb, i64 0, i32 0
  %7 = load i32* %6, align 4, !tbaa !14
  br label %10

; <label>:8                                       ; preds = %3
  %9 = add nsw i32 %nener, %index
  br label %10

; <label>:10                                      ; preds = %8, %5
  %.0 = phi i32 [ %7, %5 ], [ %9, %8 ]
  %11 = icmp sgt i32 %.0, %index
  br i1 %11, label %.lr.ph17, label %._crit_edge18

.lr.ph17:                                         ; preds = %10
  %12 = icmp eq i32 %bPrHead, 0
  %13 = icmp sgt i32 %nperline, 0
  %14 = getelementptr inbounds %struct.t_ebin* %eb, i64 0, i32 2
  %15 = sitofp i32 %tsteps to double
  %16 = getelementptr inbounds %struct.t_ebin* %eb, i64 0, i32 1
  %17 = sub i32 0, %nperline
  %18 = sext i32 %.0 to i64
  %19 = add i32 %nperline, -1
  %20 = zext i32 %19 to i64
  %21 = xor i64 %20, -1
  br label %22

; <label>:22                                      ; preds = %.lr.ph17, %.critedge
  %ee.015 = phi float [ 0.000000e+00, %.lr.ph17 ], [ %ee.1.lcssa, %.critedge ]
  %i.014 = phi i32 [ %index, %.lr.ph17 ], [ %i.3.lcssa, %.critedge ]
  br i1 %12, label %.preheader, label %.preheader4

.preheader4:                                      ; preds = %22
  %23 = icmp slt i32 %i.014, %.0
  %.5 = and i1 %23, %13
  br i1 %.5, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader4
  %24 = sext i32 %i.014 to i64
  %25 = sub i32 %i.014, %.0
  %26 = icmp ult i32 %25, %17
  %umax = select i1 %26, i32 %17, i32 %25
  %27 = xor i32 %umax, -1
  br label %28

; <label>:28                                      ; preds = %28, %.lr.ph
  %indvars.iv = phi i64 [ %24, %.lr.ph ], [ %indvars.iv.next, %28 ]
  %j.07 = phi i32 [ 0, %.lr.ph ], [ %33, %28 ]
  %29 = load i8*** %16, align 8, !tbaa !17
  %30 = getelementptr inbounds i8** %29, i64 %indvars.iv
  %31 = load i8** %30, align 8, !tbaa !22
  %32 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %fp, i8* getelementptr inbounds ([5 x i8]* @.str6, i64 0, i64 0), i8* %31) #7
  %33 = add nuw nsw i32 %j.07, 1
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i32 %j.07, %27
  br i1 %exitcond, label %._crit_edge, label %28

._crit_edge:                                      ; preds = %28, %.preheader4
  %fputc = tail call i32 @fputc(i32 10, %struct.__sFILE* %fp)
  br label %.preheader

.preheader:                                       ; preds = %22, %._crit_edge
  %34 = icmp slt i32 %i.014, %.0
  %or.cond8 = and i1 %34, %13
  br i1 %or.cond8, label %.lr.ph12, label %.critedge

.lr.ph12:                                         ; preds = %.preheader
  %35 = sext i32 %i.014 to i64
  %36 = sub nsw i64 %35, %18
  %37 = icmp ugt i64 %36, %21
  %umax21 = select i1 %37, i64 %36, i64 %21
  %38 = sub i32 %i.014, %.0
  %39 = icmp ult i32 %38, %17
  %umax22 = select i1 %39, i32 %17, i32 %38
  %40 = xor i32 %umax22, -1
  br label %41

; <label>:41                                      ; preds = %70, %.lr.ph12
  %indvars.iv19 = phi i64 [ %35, %.lr.ph12 ], [ %indvars.iv.next20, %70 ]
  %ee.111 = phi float [ %ee.015, %.lr.ph12 ], [ %ee.2, %70 ]
  %j.110 = phi i32 [ 0, %.lr.ph12 ], [ %73, %70 ]
  switch i32 %prmode, label %69 [
    i32 0, label %42
    i32 2, label %46
    i32 1, label %63
  ]

; <label>:42                                      ; preds = %41
  %43 = load %struct.t_energy** %14, align 8, !tbaa !16
  %44 = getelementptr inbounds %struct.t_energy* %43, i64 %indvars.iv19, i32 0
  %45 = load float* %44, align 4, !tbaa !18
  br label %70

; <label>:46                                      ; preds = %41
  %47 = load %struct.t_energy** %14, align 8, !tbaa !16
  %48 = getelementptr inbounds %struct.t_energy* %47, i64 %indvars.iv19, i32 2
  %49 = load double* %48, align 8, !tbaa !25
  %50 = fdiv double %49, %15
  %51 = getelementptr inbounds %struct.t_energy* %47, i64 %indvars.iv19, i32 1
  %52 = load double* %51, align 8, !tbaa !26
  %53 = fdiv double %52, %15
  %54 = tail call double @sqrt(double %53) #8
  %55 = tail call double @fabs(double %50) #8
  %56 = fcmp ogt double %55, 1.200000e-38
  br i1 %56, label %57, label %rms_ener.exit

; <label>:57                                      ; preds = %46
  %58 = fdiv double %54, %50
  %59 = tail call double @fabs(double %58) #8
  %60 = fcmp olt double %59, 1.000000e-06
  br i1 %60, label %61, label %rms_ener.exit

; <label>:61                                      ; preds = %57
  br label %rms_ener.exit

rms_ener.exit:                                    ; preds = %46, %57, %61
  %rms.0.i = phi double [ 0.000000e+00, %61 ], [ %54, %57 ], [ %54, %46 ]
  %62 = fptrunc double %rms.0.i to float
  br label %70

; <label>:63                                      ; preds = %41
  %64 = load %struct.t_energy** %14, align 8, !tbaa !16
  %65 = getelementptr inbounds %struct.t_energy* %64, i64 %indvars.iv19, i32 2
  %66 = load double* %65, align 8, !tbaa !25
  %67 = fdiv double %66, %15
  %68 = fptrunc double %67 to float
  br label %70

; <label>:69                                      ; preds = %41
  tail call void (i32, i8*, ...)* @fatal_error(i32 0, i8* getelementptr inbounds ([33 x i8]* @.str8, i64 0, i64 0), i32 %prmode) #7
  br label %70

; <label>:70                                      ; preds = %rms_ener.exit, %69, %63, %42
  %ee.2 = phi float [ %45, %42 ], [ %62, %rms_ener.exit ], [ %68, %63 ], [ %ee.111, %69 ]
  %71 = fpext float %ee.2 to double
  %72 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %fp, i8* getelementptr inbounds ([10 x i8]* @.str9, i64 0, i64 0), double %71) #7
  %73 = add nuw nsw i32 %j.110, 1
  %indvars.iv.next20 = add nsw i64 %indvars.iv19, 1
  %exitcond23 = icmp eq i32 %j.110, %40
  br i1 %exitcond23, label %..critedge_crit_edge, label %41

..critedge_crit_edge:                             ; preds = %70
  %74 = sub nsw i64 %35, %umax21
  %75 = trunc i64 %74 to i32
  br label %.critedge

.critedge:                                        ; preds = %..critedge_crit_edge, %.preheader
  %ee.1.lcssa = phi float [ %ee.2, %..critedge_crit_edge ], [ %ee.015, %.preheader ]
  %i.3.lcssa = phi i32 [ %75, %..critedge_crit_edge ], [ %i.014, %.preheader ]
  %fputc3 = tail call i32 @fputc(i32 10, %struct.__sFILE* %fp)
  %76 = icmp slt i32 %i.3.lcssa, %.0
  br i1 %76, label %22, label %._crit_edge18

._crit_edge18:                                    ; preds = %.critedge, %10
  ret void
}
