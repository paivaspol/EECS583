define float @rms_ener(%struct.t_energy* nocapture %e, i32 %nsteps) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.t_energy* %e}, i64 0, metadata !256), !dbg !457
  tail call void @llvm.dbg.value(metadata !{i32 %nsteps}, i64 0, metadata !257), !dbg !457
  %e2sum = getelementptr inbounds %struct.t_energy* %e, i64 0, i32 3, !dbg !458
  %0 = load float* %e2sum, align 4, !dbg !458, !tbaa !405
  %conv = sitofp i32 %nsteps to float, !dbg !458
  %mul = fmul float %conv, %0, !dbg !458
  %conv1 = fpext float %mul to double, !dbg !458
  %esum = getelementptr inbounds %struct.t_energy* %e, i64 0, i32 2, !dbg !458
  %1 = load double* %esum, align 8, !dbg !458, !tbaa !459
  %mul3 = fmul double %1, %1, !dbg !458
  %sub = fsub double %conv1, %mul3, !dbg !458
  %conv4 = fptrunc double %sub to float, !dbg !458
  tail call void @llvm.dbg.value(metadata !{float %conv4}, i64 0, metadata !258), !dbg !458
  %cmp = fcmp ugt float %conv4, 0.000000e+00, !dbg !460
  br i1 %cmp, label %if.else, label %return, !dbg !460

if.else:                                          ; preds = %entry
  %conv6 = fpext float %conv4 to double, !dbg !461
  %call = tail call double @sqrt(double %conv6) #5, !dbg !461
  %conv7 = sitofp i32 %nsteps to double, !dbg !461
  %div = fdiv double %call, %conv7, !dbg !461
  %conv8 = fptrunc double %div to float, !dbg !461
  br label %return, !dbg !461

return:                                           ; preds = %entry, %if.else
  %retval.0 = phi float [ %conv8, %if.else ], [ 0.000000e+00, %entry ]
  ret float %retval.0, !dbg !462
}
