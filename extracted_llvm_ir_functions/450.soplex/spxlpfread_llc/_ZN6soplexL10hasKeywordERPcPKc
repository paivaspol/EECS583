define internal fastcc zeroext i1 @_ZN6soplexL10hasKeywordERPcPKc(i8** nocapture dereferenceable(8) %pos, i8* nocapture readonly %keyword) #0 {
  tail call void @llvm.dbg.value(metadata i8** %pos, i64 0, metadata !4044, metadata !5395), !dbg !6500
  tail call void @llvm.dbg.value(metadata i8* %keyword, i64 0, metadata !4045, metadata !5395), !dbg !6501
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !4046, metadata !5395), !dbg !6502
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !4047, metadata !5395), !dbg !6503
  br label %1, !dbg !6504

; <label>:1                                       ; preds = %51, %0
  %i.0 = phi i32 [ 0, %0 ], [ %52, %51 ]
  %k.0 = phi i32 [ 0, %0 ], [ %53, %51 ]
  %2 = sext i32 %i.0 to i64, !dbg !6506
  %3 = getelementptr inbounds i8* %keyword, i64 %2, !dbg !6506
  %4 = load i8* %3, align 1, !dbg !6506, !tbaa !5639
  switch i8 %4, label %42 [
    i8 0, label %.thread.loopexit
    i8 91, label %.preheader
  ], !dbg !6508

.preheader:                                       ; preds = %1
  %i.14 = add i32 %i.0, 1, !dbg !6509
  %5 = sext i32 %k.0 to i64, !dbg !6513
  %6 = load i8** %pos, align 8, !dbg !6513, !tbaa !5632
  %7 = getelementptr inbounds i8* %6, i64 %5, !dbg !6513
  %8 = load i8* %7, align 1, !dbg !6513, !tbaa !5639
  %9 = sext i8 %8 to i32, !dbg !6513
  tail call void @llvm.dbg.value(metadata i32 %9, i64 0, metadata !4053, metadata !5395), !dbg !6514
  %10 = tail call i32 @__tolower(i32 %9) #12, !dbg !6516
  %11 = sext i32 %i.14 to i64, !dbg !6517
  %12 = getelementptr inbounds i8* %keyword, i64 %11, !dbg !6517
  %13 = load i8* %12, align 1, !dbg !6517, !tbaa !5639
  %14 = sext i8 %13 to i32, !dbg !6517
  %15 = icmp eq i32 %10, %14, !dbg !6518
  br i1 %15, label %.lr.ph, label %.critedge.preheader, !dbg !6519

.lr.ph:                                           ; preds = %.preheader, %24
  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %24 ], [ %5, %.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %24 ], [ %11, %.preheader ]
  %16 = phi i64 [ %26, %24 ], [ %5, %.preheader ]
  %i.16 = phi i32 [ %i.1, %24 ], [ %i.14, %.preheader ]
  %k.15 = phi i32 [ %25, %24 ], [ %k.0, %.preheader ]
  %17 = load i8** %pos, align 8, !dbg !6520, !tbaa !5632
  %18 = getelementptr inbounds i8* %17, i64 %16, !dbg !6520
  %19 = load i8* %18, align 1, !dbg !6520, !tbaa !5639
  %20 = icmp eq i8 %19, 0, !dbg !6521
  br i1 %20, label %..critedge.preheader_crit_edge8, label %24, !dbg !6522

..critedge.preheader_crit_edge8:                  ; preds = %.lr.ph
  %21 = trunc i64 %indvars.iv19 to i32, !dbg !6522
  %22 = trunc i64 %indvars.iv to i32, !dbg !6522
  br label %.critedge.preheader, !dbg !6522

.critedge.preheader:                              ; preds = %24, %..critedge.preheader_crit_edge8, %.preheader
  %i.1.lcssa = phi i32 [ %22, %..critedge.preheader_crit_edge8 ], [ %i.14, %.preheader ], [ %i.1, %24 ]
  %k.1.lcssa = phi i32 [ %21, %..critedge.preheader_crit_edge8 ], [ %k.0, %.preheader ], [ %25, %24 ]
  %23 = sext i32 %i.1.lcssa to i64
  br label %.critedge, !dbg !6523

; <label>:24                                      ; preds = %.lr.ph
  %25 = add nsw i32 %k.15, 1, !dbg !6524
  tail call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !4047, metadata !5395), !dbg !6503
  %i.1 = add nsw i32 %i.16, 1, !dbg !6509
  %26 = sext i32 %25 to i64, !dbg !6513
  %27 = getelementptr inbounds i8* %17, i64 %26, !dbg !6513
  %28 = load i8* %27, align 1, !dbg !6513, !tbaa !5639
  %29 = sext i8 %28 to i32, !dbg !6513
  tail call void @llvm.dbg.value(metadata i32 %29, i64 0, metadata !4053, metadata !5395), !dbg !6514
  %30 = tail call i32 @__tolower(i32 %29) #12, !dbg !6516
  %31 = sext i32 %i.1 to i64, !dbg !6517
  %32 = getelementptr inbounds i8* %keyword, i64 %31, !dbg !6517
  %33 = load i8* %32, align 1, !dbg !6517, !tbaa !5639
  %34 = sext i8 %33 to i32, !dbg !6517
  %35 = icmp eq i32 %30, %34, !dbg !6518
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !6519
  %indvars.iv.next20 = add i64 %indvars.iv19, 1, !dbg !6519
  br i1 %35, label %.lr.ph, label %.critedge.preheader, !dbg !6519

.critedge:                                        ; preds = %.critedge, %.critedge.preheader
  %indvars.iv21 = phi i64 [ %indvars.iv.next22, %.critedge ], [ %23, %.critedge.preheader ]
  %36 = getelementptr inbounds i8* %keyword, i64 %indvars.iv21, !dbg !6523
  %37 = load i8* %36, align 1, !dbg !6523, !tbaa !5639
  %38 = icmp eq i8 %37, 93, !dbg !6526
  %indvars.iv.next22 = add i64 %indvars.iv21, 1, !dbg !6527
  br i1 %38, label %39, label %.critedge, !dbg !6527

; <label>:39                                      ; preds = %.critedge
  %40 = trunc i64 %indvars.iv21 to i32, !dbg !6528
  %41 = add nsw i32 %k.1.lcssa, -1, !dbg !6528
  tail call void @llvm.dbg.value(metadata i32 %41, i64 0, metadata !4047, metadata !5395), !dbg !6503
  br label %51, !dbg !6529

; <label>:42                                      ; preds = %1
  %43 = sext i8 %4 to i32, !dbg !6506
  %44 = sext i32 %k.0 to i64, !dbg !6530
  %45 = load i8** %pos, align 8, !dbg !6530, !tbaa !5632
  %46 = getelementptr inbounds i8* %45, i64 %44, !dbg !6530
  %47 = load i8* %46, align 1, !dbg !6530, !tbaa !5639
  %48 = sext i8 %47 to i32, !dbg !6530
  tail call void @llvm.dbg.value(metadata i32 %48, i64 0, metadata !4053, metadata !5395), !dbg !6533
  %49 = tail call i32 @__tolower(i32 %48) #12, !dbg !6535
  %50 = icmp eq i32 %43, %49, !dbg !6536
  br i1 %50, label %51, label %54, !dbg !6537

; <label>:51                                      ; preds = %42, %39
  %i.3 = phi i32 [ %40, %39 ], [ %i.0, %42 ]
  %k.2 = phi i32 [ %41, %39 ], [ %k.0, %42 ]
  %52 = add nsw i32 %i.3, 1, !dbg !6538
  tail call void @llvm.dbg.value(metadata i32 %52, i64 0, metadata !4046, metadata !5395), !dbg !6502
  %53 = add nsw i32 %k.2, 1, !dbg !6539
  tail call void @llvm.dbg.value(metadata i32 %53, i64 0, metadata !4047, metadata !5395), !dbg !6503
  br label %1, !dbg !6540

; <label>:54                                      ; preds = %42
  %.pr = load i8* %3, align 1, !dbg !6541, !tbaa !5639
  %55 = icmp eq i8 %.pr, 0, !dbg !6543
  br i1 %55, label %.thread, label %58, !dbg !6544

.thread.loopexit:                                 ; preds = %1
  %.pre = sext i32 %k.0 to i64, !dbg !6545
  br label %.thread

.thread:                                          ; preds = %.thread.loopexit, %54
  %.pre-phi = phi i64 [ %.pre, %.thread.loopexit ], [ %44, %54 ], !dbg !6545
  %56 = load i8** %pos, align 8, !dbg !6545, !tbaa !5632
  %57 = getelementptr inbounds i8* %56, i64 %.pre-phi, !dbg !6545
  store i8* %57, i8** %pos, align 8, !dbg !6545, !tbaa !5632
  br label %58, !dbg !6547

; <label>:58                                      ; preds = %54, %.thread
  %.0 = phi i1 [ true, %.thread ], [ false, %54 ]
  ret i1 %.0, !dbg !6548
}
