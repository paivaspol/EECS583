define void @_ZN6soplex6IdxSet6removeEii(%"class.soplex::IdxSet"* nocapture %this, i32 %n, i32 %m) #1 align 2 {
  tail call void @llvm.dbg.value(metadata %"class.soplex::IdxSet"* %this, i64 0, metadata !82, metadata !111), !dbg !167
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !83, metadata !111), !dbg !168
  tail call void @llvm.dbg.value(metadata i32 %m, i64 0, metadata !84, metadata !111), !dbg !169
  %1 = add nsw i32 %m, 1, !dbg !170
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !84, metadata !111), !dbg !169
  %2 = sub nsw i32 %1, %n, !dbg !171
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !85, metadata !111), !dbg !172
  %3 = getelementptr inbounds %"class.soplex::IdxSet"* %this, i64 0, i32 0, !dbg !173
  %4 = load i32* %3, align 4, !dbg !173, !tbaa !119
  tail call void @llvm.dbg.value(metadata i32 %34, i64 0, metadata !86, metadata !111), !dbg !174
  tail call void @llvm.dbg.value(metadata %"class.soplex::IdxSet"* %this, i64 0, metadata !98, metadata !111), !dbg !175
  %5 = sub nsw i32 %4, %1, !dbg !177
  %6 = icmp slt i32 %5, %2, !dbg !178
  tail call void @llvm.dbg.value(metadata %"class.soplex::IdxSet"* %this, i64 0, metadata !98, metadata !111), !dbg !179
  %. = select i1 %6, i32 %5, i32 %2, !dbg !181
  %7 = getelementptr inbounds %"class.soplex::IdxSet"* %this, i64 0, i32 2, !dbg !182
  %8 = load i32** %7, align 8, !dbg !182, !tbaa !129
  %9 = add i32 %n, -2, !dbg !181
  %10 = sub i32 %9, %m, !dbg !181
  %11 = sub i32 %m, %4, !dbg !181
  %12 = icmp sgt i32 %10, %11
  %smax = select i1 %12, i32 %10, i32 %11
  %13 = add nsw i32 %4, -1, !dbg !184
  store i32 %13, i32* %3, align 4, !dbg !184, !tbaa !119
  %14 = add nsw i32 %., -1, !dbg !185
  tail call void @llvm.dbg.value(metadata i32 %14, i64 0, metadata !85, metadata !111), !dbg !172
  %15 = sext i32 %13 to i64, !dbg !182
  %16 = getelementptr inbounds i32* %8, i64 %15, !dbg !182
  %17 = load i32* %16, align 4, !dbg !182, !tbaa !130
  %18 = add nsw i32 %14, %n, !dbg !186
  %19 = sext i32 %18 to i64, !dbg !187
  %20 = getelementptr inbounds i32* %8, i64 %19, !dbg !187
  store i32 %17, i32* %20, align 4, !dbg !188, !tbaa !130
  %21 = icmp slt i32 %smax, -2, !dbg !189
  br i1 %21, label %._crit_edge.lr.ph, label %._crit_edge2, !dbg !190

._crit_edge.lr.ph:                                ; preds = %0
  %22 = xor i32 %smax, -1, !dbg !181
  %23 = sext i32 %22 to i64
  br label %._crit_edge, !dbg !190

._crit_edge:                                      ; preds = %._crit_edge.lr.ph, %._crit_edge
  %24 = phi i32 [ %14, %._crit_edge.lr.ph ], [ %26, %._crit_edge ]
  %indvars.iv1 = phi i64 [ %23, %._crit_edge.lr.ph ], [ %indvars.iv.next, %._crit_edge ]
  %indvars.iv.next = add nsw i64 %indvars.iv1, -1, !dbg !190
  %.pre = load i32* %3, align 4, !dbg !184, !tbaa !119
  %25 = add nsw i32 %.pre, -1, !dbg !184
  store i32 %25, i32* %3, align 4, !dbg !184, !tbaa !119
  %26 = add nsw i32 %24, -1, !dbg !185
  tail call void @llvm.dbg.value(metadata i32 %26, i64 0, metadata !85, metadata !111), !dbg !172
  %27 = sext i32 %25 to i64, !dbg !182
  %28 = getelementptr inbounds i32* %8, i64 %27, !dbg !182
  %29 = load i32* %28, align 4, !dbg !182, !tbaa !130
  %30 = add nsw i32 %26, %n, !dbg !186
  %31 = sext i32 %30 to i64, !dbg !187
  %32 = getelementptr inbounds i32* %8, i64 %31, !dbg !187
  store i32 %29, i32* %32, align 4, !dbg !188, !tbaa !130
  %33 = icmp sgt i64 %indvars.iv.next, 1, !dbg !189
  br i1 %33, label %._crit_edge, label %._crit_edge2, !dbg !190

._crit_edge2:                                     ; preds = %._crit_edge, %0
  %34 = sub nsw i32 %4, %2, !dbg !191
  store i32 %34, i32* %3, align 4, !dbg !192, !tbaa !119
  ret void, !dbg !193
}
