define internal fastcc void @_ZN6soplexL15changeRhsStatusERNS_8SPxBasis4Desc6StatusEddRKS0_i(i32* nocapture %stat, double %newRhs, double %lhs, %"class.soplex::SPxBasis"* %basis, i32 %i) #3 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32* %stat}, i64 0, metadata !7089), !dbg !7998
  tail call void @llvm.dbg.value(metadata !{double %newRhs}, i64 0, metadata !7090), !dbg !7999
  tail call void @llvm.dbg.value(metadata !{double %lhs}, i64 0, metadata !7091), !dbg !8000
  tail call void @llvm.dbg.value(metadata !{%"class.soplex::SPxBasis"* %basis}, i64 0, metadata !7092), !dbg !8001
  tail call void @llvm.dbg.value(metadata !{i32 %i}, i64 0, metadata !7093), !dbg !8002
  %0 = load i32* %stat, align 4, !dbg !8003, !tbaa !7670
  switch i32 %0, label %sw.default [
    i32 -2, label %sw.bb
    i32 -4, label %sw.bb5
    i32 -1, label %sw.bb9
    i32 -6, label %sw.bb13
    i32 1, label %sw.bb17
    i32 2, label %sw.bb17
    i32 4, label %sw.bb17
    i32 6, label %sw.bb17
    i32 8, label %sw.bb17
  ], !dbg !8003

sw.bb:                                            ; preds = %entry
  %1 = load double* @_ZN6soplex8infinityE, align 8, !dbg !8005, !tbaa !7331
  %cmp = fcmp ugt double %1, %newRhs, !dbg !8005
  br i1 %cmp, label %if.else, label %if.then, !dbg !8005

if.then:                                          ; preds = %sw.bb
  %sub = fsub double -0.000000e+00, %1, !dbg !8007
  %cmp1 = fcmp ole double %lhs, %sub, !dbg !8007
  %cond = select i1 %cmp1, i32 -1, i32 -4, !dbg !8007
  store i32 %cond, i32* %stat, align 4, !dbg !8007, !tbaa !7670
  br label %sw.epilog, !dbg !8007

if.else:                                          ; preds = %sw.bb
  %cmp2 = fcmp oeq double %newRhs, %lhs, !dbg !8008
  br i1 %cmp2, label %if.then3, label %sw.epilog, !dbg !8008

if.then3:                                         ; preds = %if.else
  store i32 -6, i32* %stat, align 4, !dbg !8009, !tbaa !7670
  br label %sw.epilog, !dbg !8009

sw.bb5:                                           ; preds = %entry
  %cmp6 = fcmp oeq double %newRhs, %lhs, !dbg !8010
  br i1 %cmp6, label %if.then7, label %sw.epilog, !dbg !8010

if.then7:                                         ; preds = %sw.bb5
  store i32 -6, i32* %stat, align 4, !dbg !8011, !tbaa !7670
  br label %sw.epilog, !dbg !8011

sw.bb9:                                           ; preds = %entry
  %2 = load double* @_ZN6soplex8infinityE, align 8, !dbg !8012, !tbaa !7331
  %cmp10 = fcmp ogt double %2, %newRhs, !dbg !8012
  br i1 %cmp10, label %if.then11, label %sw.epilog, !dbg !8012

if.then11:                                        ; preds = %sw.bb9
  store i32 -2, i32* %stat, align 4, !dbg !8013, !tbaa !7670
  br label %sw.epilog, !dbg !8013

sw.bb13:                                          ; preds = %entry
  %cmp14 = fcmp une double %newRhs, %lhs, !dbg !8014
  br i1 %cmp14, label %if.then15, label %sw.epilog, !dbg !8014

if.then15:                                        ; preds = %sw.bb13
  store i32 -4, i32* %stat, align 4, !dbg !8015, !tbaa !7670
  br label %sw.epilog, !dbg !8015

sw.bb17:                                          ; preds = %entry, %entry, %entry, %entry, %entry
  %call = tail call i32 @_ZNK6soplex8SPxBasis13dualRowStatusEi(%"class.soplex::SPxBasis"* %basis, i32 %i) #6, !dbg !8016
  store i32 %call, i32* %stat, align 4, !dbg !8016, !tbaa !7670
  br label %sw.epilog, !dbg !8017

sw.default:                                       ; preds = %entry
  tail call void @abort() #7, !dbg !8018
  unreachable, !dbg !8018

sw.epilog:                                        ; preds = %sw.bb13, %if.then15, %sw.bb9, %if.then11, %sw.bb5, %if.then7, %if.then, %if.then3, %if.else, %sw.bb17
  ret void, !dbg !8019
}
