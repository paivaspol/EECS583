define void @_ZN6soplex9CLUFactor14solveLleftNoNZEPd(%"class.soplex::CLUFactor"* nocapture %this, double* nocapture %vec) #2 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.soplex::CLUFactor"* %this}, i64 0, metadata !2699), !dbg !3784
  tail call void @llvm.dbg.value(metadata !{double* %vec}, i64 0, metadata !2700), !dbg !3784
  %ridx2 = getelementptr inbounds %"class.soplex::CLUFactor"* %this, i64 0, i32 10, i32 10, !dbg !3785
  %0 = load i32** %ridx2, align 8, !dbg !3785, !tbaa !2836
  tail call void @llvm.dbg.value(metadata !{i32* %0}, i64 0, metadata !2708), !dbg !3785
  %rval4 = getelementptr inbounds %"class.soplex::CLUFactor"* %this, i64 0, i32 10, i32 9, !dbg !3786
  %1 = load double** %rval4, align 8, !dbg !3786, !tbaa !2836
  tail call void @llvm.dbg.value(metadata !{double* %1}, i64 0, metadata !2706), !dbg !3786
  %rbeg6 = getelementptr inbounds %"class.soplex::CLUFactor"* %this, i64 0, i32 10, i32 11, !dbg !3787
  %2 = load i32** %rbeg6, align 8, !dbg !3787, !tbaa !2836
  tail call void @llvm.dbg.value(metadata !{i32* %2}, i64 0, metadata !2710), !dbg !3787
  %rorig8 = getelementptr inbounds %"class.soplex::CLUFactor"* %this, i64 0, i32 10, i32 12, !dbg !3788
  %3 = load i32** %rorig8, align 8, !dbg !3788, !tbaa !2836
  tail call void @llvm.dbg.value(metadata !{i32* %3}, i64 0, metadata !2711), !dbg !3788
  %thedim = getelementptr inbounds %"class.soplex::CLUFactor"* %this, i64 0, i32 1, !dbg !3789
  %4 = load i32* %thedim, align 4, !dbg !3789, !tbaa !2843
  tail call void @llvm.dbg.value(metadata !{i32 %4}, i64 0, metadata !2701), !dbg !3789
  %tobool38 = icmp eq i32 %4, 0, !dbg !3789
  br i1 %tobool38, label %for.end, label %for.body.lr.ph, !dbg !3789

for.body.lr.ph:                                   ; preds = %entry
  %5 = sext i32 %4 to i64
  br label %for.body, !dbg !3789

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv = phi i64 [ %5, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond.backedge ]
  %indvars.iv.next = add i64 %indvars.iv, -1, !dbg !3789
  %arrayidx = getelementptr inbounds i32* %3, i64 %indvars.iv.next, !dbg !3791
  %6 = load i32* %arrayidx, align 4, !dbg !3791, !tbaa !2843
  tail call void @llvm.dbg.value(metadata !{i32 %6}, i64 0, metadata !2704), !dbg !3791
  %idxprom9 = sext i32 %6 to i64, !dbg !3793
  %arrayidx10 = getelementptr inbounds double* %vec, i64 %idxprom9, !dbg !3793
  %7 = load double* %arrayidx10, align 8, !dbg !3793, !tbaa !2848
  tail call void @llvm.dbg.value(metadata !{double %7}, i64 0, metadata !2705), !dbg !3793
  %cmp = fcmp une double %7, 0.000000e+00, !dbg !3794
  br i1 %cmp, label %if.then, label %for.cond.backedge, !dbg !3794

for.cond.backedge:                                ; preds = %if.then, %while.body, %for.body
  %8 = trunc i64 %indvars.iv.next to i32, !dbg !3789
  %tobool = icmp eq i32 %8, 0, !dbg !3789
  br i1 %tobool, label %for.end, label %for.body, !dbg !3789

if.then:                                          ; preds = %for.body
  %arrayidx12 = getelementptr inbounds i32* %2, i64 %idxprom9, !dbg !3795
  %9 = load i32* %arrayidx12, align 4, !dbg !3795, !tbaa !2843
  tail call void @llvm.dbg.value(metadata !{i32 %9}, i64 0, metadata !2703), !dbg !3795
  %add = add nsw i32 %6, 1, !dbg !3797
  %idxprom13 = sext i32 %add to i64, !dbg !3797
  %arrayidx14 = getelementptr inbounds i32* %2, i64 %idxprom13, !dbg !3797
  %10 = load i32* %arrayidx14, align 4, !dbg !3797, !tbaa !2843
  %sub = sub nsw i32 %10, %9, !dbg !3797
  tail call void @llvm.dbg.value(metadata !{i32 %sub}, i64 0, metadata !2702), !dbg !3797
  %idxprom15 = sext i32 %9 to i64, !dbg !3798
  tail call void @llvm.dbg.value(metadata !{double* %arrayidx16}, i64 0, metadata !2707), !dbg !3798
  tail call void @llvm.dbg.value(metadata !{i32* %arrayidx18}, i64 0, metadata !2709), !dbg !3799
  tail call void @llvm.dbg.value(metadata !{i32 %dec19}, i64 0, metadata !2702), !dbg !3800
  %cmp2033 = icmp sgt i32 %sub, 0, !dbg !3800
  br i1 %cmp2033, label %while.body.lr.ph, label %for.cond.backedge, !dbg !3800

while.body.lr.ph:                                 ; preds = %if.then
  %arrayidx18 = getelementptr inbounds i32* %0, i64 %idxprom15, !dbg !3799
  %arrayidx16 = getelementptr inbounds double* %1, i64 %idxprom15, !dbg !3798
  br label %while.body, !dbg !3800

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %j.036 = phi i32 [ %sub, %while.body.lr.ph ], [ %dec19, %while.body ]
  %idx.035 = phi i32* [ %arrayidx18, %while.body.lr.ph ], [ %incdec.ptr21, %while.body ]
  %val.034 = phi double* [ %arrayidx16, %while.body.lr.ph ], [ %incdec.ptr, %while.body ]
  %dec19 = add nsw i32 %j.036, -1, !dbg !3800
  %incdec.ptr = getelementptr inbounds double* %val.034, i64 1, !dbg !3801
  tail call void @llvm.dbg.value(metadata !{double* %incdec.ptr}, i64 0, metadata !2707), !dbg !3801
  %11 = load double* %val.034, align 8, !dbg !3801, !tbaa !2848
  %mul = fmul double %7, %11, !dbg !3801
  %incdec.ptr21 = getelementptr inbounds i32* %idx.035, i64 1, !dbg !3801
  tail call void @llvm.dbg.value(metadata !{i32* %incdec.ptr21}, i64 0, metadata !2709), !dbg !3801
  %12 = load i32* %idx.035, align 4, !dbg !3801, !tbaa !2843
  %idxprom22 = sext i32 %12 to i64, !dbg !3801
  %arrayidx23 = getelementptr inbounds double* %vec, i64 %idxprom22, !dbg !3801
  %13 = load double* %arrayidx23, align 8, !dbg !3801, !tbaa !2848
  %sub24 = fsub double %13, %mul, !dbg !3801
  store double %sub24, double* %arrayidx23, align 8, !dbg !3801, !tbaa !2848
  tail call void @llvm.dbg.value(metadata !{i32 %dec19}, i64 0, metadata !2702), !dbg !3800
  %cmp20 = icmp sgt i32 %dec19, 0, !dbg !3800
  br i1 %cmp20, label %while.body, label %for.cond.backedge, !dbg !3800

for.end:                                          ; preds = %for.cond.backedge, %entry
  ret void, !dbg !3803
}
