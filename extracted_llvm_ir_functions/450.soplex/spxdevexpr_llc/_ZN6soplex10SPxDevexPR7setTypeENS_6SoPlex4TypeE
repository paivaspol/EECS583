define void @_ZN6soplex10SPxDevexPR7setTypeENS_6SoPlex4TypeE(%"class.soplex::SPxDevexPR"* nocapture readonly %this, i32 %tp) unnamed_addr #3 align 2 {
  tail call void @llvm.dbg.value(metadata %"class.soplex::SPxDevexPR"* %this, i64 0, metadata !5037, metadata !6202), !dbg !6272
  tail call void @llvm.dbg.value(metadata i32 %tp, i64 0, metadata !5038, metadata !6202), !dbg !6273
  %1 = icmp eq i32 %tp, -1, !dbg !6274
  br i1 %1, label %2, label %21, !dbg !6276

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %"class.soplex::SPxDevexPR"* %this, i64 0, i32 2, i32 0, i32 0, !dbg !6277
  %4 = load i32* %3, align 4, !dbg !6277, !tbaa !6243
  tail call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !5039, metadata !6202), !dbg !6281
  %5 = icmp sgt i32 %4, 0, !dbg !6282
  br i1 %5, label %.lr.ph2, label %._crit_edge, !dbg !6284

.lr.ph2:                                          ; preds = %2
  %6 = getelementptr inbounds %"class.soplex::SPxDevexPR"* %this, i64 0, i32 2, i32 0, i32 1, !dbg !6285
  %7 = load double** %6, align 8, !dbg !6285, !tbaa !6287
  %8 = sext i32 %4 to i64
  br label %9, !dbg !6284

; <label>:9                                       ; preds = %.lr.ph2, %9
  %indvars.iv7 = phi i64 [ %8, %.lr.ph2 ], [ %indvars.iv.next8, %9 ]
  %indvars.iv.next8 = add nsw i64 %indvars.iv7, -1, !dbg !6284
  %10 = getelementptr inbounds double* %7, i64 %indvars.iv.next8, !dbg !6285
  store double 2.000000e+00, double* %10, align 8, !dbg !6288, !tbaa !6289
  %11 = icmp sgt i64 %indvars.iv7, 1, !dbg !6282
  br i1 %11, label %9, label %._crit_edge, !dbg !6284

._crit_edge:                                      ; preds = %9, %2
  %12 = getelementptr inbounds %"class.soplex::SPxDevexPR"* %this, i64 0, i32 3, i32 0, i32 0, !dbg !6290
  %13 = load i32* %12, align 4, !dbg !6290, !tbaa !6243
  tail call void @llvm.dbg.value(metadata i32 %13, i64 0, metadata !5039, metadata !6202), !dbg !6281
  %14 = icmp sgt i32 %13, 0, !dbg !6293
  br i1 %14, label %.lr.ph, label %.loopexit, !dbg !6295

.lr.ph:                                           ; preds = %._crit_edge
  %15 = getelementptr inbounds %"class.soplex::SPxDevexPR"* %this, i64 0, i32 3, i32 0, i32 1, !dbg !6296
  %16 = load double** %15, align 8, !dbg !6296, !tbaa !6287
  %17 = sext i32 %13 to i64
  br label %18, !dbg !6295

; <label>:18                                      ; preds = %.lr.ph, %18
  %indvars.iv = phi i64 [ %17, %.lr.ph ], [ %indvars.iv.next, %18 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !6295
  %19 = getelementptr inbounds double* %16, i64 %indvars.iv.next, !dbg !6296
  store double 2.000000e+00, double* %19, align 8, !dbg !6298, !tbaa !6289
  %20 = icmp sgt i64 %indvars.iv, 1, !dbg !6293
  br i1 %20, label %18, label %.loopexit, !dbg !6295

; <label>:21                                      ; preds = %0
  %22 = getelementptr inbounds %"class.soplex::SPxDevexPR"* %this, i64 0, i32 3, i32 0, i32 0, !dbg !6299
  %23 = load i32* %22, align 4, !dbg !6299, !tbaa !6243
  tail call void @llvm.dbg.value(metadata i32 %23, i64 0, metadata !5039, metadata !6202), !dbg !6281
  %24 = icmp sgt i32 %23, 0, !dbg !6303
  br i1 %24, label %.lr.ph4, label %.loopexit, !dbg !6305

.lr.ph4:                                          ; preds = %21
  %25 = getelementptr inbounds %"class.soplex::SPxDevexPR"* %this, i64 0, i32 3, i32 0, i32 1, !dbg !6306
  %26 = load double** %25, align 8, !dbg !6306, !tbaa !6287
  %27 = sext i32 %23 to i64
  br label %28, !dbg !6305

; <label>:28                                      ; preds = %.lr.ph4, %28
  %indvars.iv9 = phi i64 [ %27, %.lr.ph4 ], [ %indvars.iv.next10, %28 ]
  %indvars.iv.next10 = add nsw i64 %indvars.iv9, -1, !dbg !6305
  %29 = getelementptr inbounds double* %26, i64 %indvars.iv.next10, !dbg !6306
  store double 1.000000e+00, double* %29, align 8, !dbg !6308, !tbaa !6289
  %30 = icmp sgt i64 %indvars.iv9, 1, !dbg !6303
  br i1 %30, label %28, label %.loopexit, !dbg !6305

.loopexit:                                        ; preds = %28, %18, %21, %._crit_edge
  ret void, !dbg !6309
}
