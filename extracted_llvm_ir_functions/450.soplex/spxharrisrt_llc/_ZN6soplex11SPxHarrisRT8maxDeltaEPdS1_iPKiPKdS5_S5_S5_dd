define i32 @_ZN6soplex11SPxHarrisRT8maxDeltaEPdS1_iPKiPKdS5_S5_S5_dd(%"class.soplex::SPxHarrisRT"* nocapture %this, double* nocapture, double* nocapture %val, i32 %num, i32* nocapture %idx, double* nocapture %upd, double* nocapture %vec, double* nocapture %low, double* nocapture %up, double %delta, double %epsilon) #2 align 2 {
entry:
  tail call void @llvm.dbg.value(metadata !{%"class.soplex::SPxHarrisRT"* %this}, i64 0, metadata !6842), !dbg !7310
  tail call void @llvm.dbg.value(metadata !{double* %0}, i64 0, metadata !6845), !dbg !7311
  tail call void @llvm.dbg.value(metadata !{double* %val}, i64 0, metadata !6846), !dbg !7312
  tail call void @llvm.dbg.value(metadata !{i32 %num}, i64 0, metadata !6847), !dbg !7313
  tail call void @llvm.dbg.value(metadata !{i32* %idx}, i64 0, metadata !6848), !dbg !7314
  tail call void @llvm.dbg.value(metadata !{double* %upd}, i64 0, metadata !6849), !dbg !7315
  tail call void @llvm.dbg.value(metadata !{double* %vec}, i64 0, metadata !6850), !dbg !7316
  tail call void @llvm.dbg.value(metadata !{double* %low}, i64 0, metadata !6851), !dbg !7317
  tail call void @llvm.dbg.value(metadata !{double* %up}, i64 0, metadata !6852), !dbg !7318
  tail call void @llvm.dbg.value(metadata !{double %delta}, i64 0, metadata !6853), !dbg !7319
  tail call void @llvm.dbg.value(metadata !{double %epsilon}, i64 0, metadata !6854), !dbg !7320
  %1 = load double* %val, align 8, !dbg !7321, !tbaa !7322
  tail call void @llvm.dbg.value(metadata !{double %1}, i64 0, metadata !6857), !dbg !7321
  tail call void @llvm.dbg.value(metadata !7325, i64 0, metadata !6858), !dbg !7326
  tail call void @llvm.dbg.value(metadata !7327, i64 0, metadata !6859), !dbg !7328
  %sub14 = fsub double -0.000000e+00, %epsilon, !dbg !7329
  %2 = load double* @_ZN6soplex8infinityE, align 8, !dbg !7331, !tbaa !7322
  %sub32 = fsub double -0.000000e+00, %2, !dbg !7331
  br label %while.cond.outer, !dbg !7333

while.cond.outer:                                 ; preds = %if.then16, %if.then, %entry
  %theval.0.ph = phi double [ %1, %entry ], [ %div.theval.0, %if.then ], [ %div27, %if.then16 ]
  %num.addr.0.ph = phi i32 [ %num, %entry ], [ %dec, %if.then ], [ %dec, %if.then16 ]
  br label %while.cond.outer66

while.cond.outer66:                               ; preds = %if.then16, %while.cond.outer
  %num.addr.0.ph68 = phi i32 [ %num.addr.0.ph, %while.cond.outer ], [ %dec, %if.then16 ]
  %3 = sext i32 %num.addr.0.ph68 to i64
  br label %while.cond

while.cond:                                       ; preds = %while.cond.outer66, %if.else
  %indvars.iv = phi i64 [ %3, %while.cond.outer66 ], [ %indvars.iv.next, %if.else ]
  %num.addr.0 = phi i32 [ %num.addr.0.ph68, %while.cond.outer66 ], [ %dec, %if.else ]
  %indvars.iv.next = add i64 %indvars.iv, -1, !dbg !7329
  %dec = add nsw i32 %num.addr.0, -1, !dbg !7333
  tail call void @llvm.dbg.value(metadata !{i32 %dec}, i64 0, metadata !6847), !dbg !7333
  %4 = trunc i64 %indvars.iv to i32, !dbg !7333
  %tobool = icmp eq i32 %4, 0, !dbg !7333
  br i1 %tobool, label %while.end, label %while.body, !dbg !7333

while.body:                                       ; preds = %while.cond
  %arrayidx = getelementptr inbounds i32* %idx, i64 %indvars.iv.next, !dbg !7334
  %5 = load i32* %arrayidx, align 4, !dbg !7334, !tbaa !7335
  tail call void @llvm.dbg.value(metadata !{i32 %5}, i64 0, metadata !6860), !dbg !7334
  %idxprom2 = sext i32 %5 to i64, !dbg !7336
  %arrayidx3 = getelementptr inbounds double* %upd, i64 %idxprom2, !dbg !7336
  %6 = load double* %arrayidx3, align 8, !dbg !7336, !tbaa !7322
  tail call void @llvm.dbg.value(metadata !{double %6}, i64 0, metadata !6855), !dbg !7336
  %cmp = fcmp ogt double %6, %epsilon, !dbg !7337
  br i1 %cmp, label %if.then, label %if.else, !dbg !7337

if.then:                                          ; preds = %while.body
  %arrayidx6 = getelementptr inbounds double* %up, i64 %idxprom2, !dbg !7338
  %7 = load double* %arrayidx6, align 8, !dbg !7338, !tbaa !7322
  %arrayidx8 = getelementptr inbounds double* %vec, i64 %idxprom2, !dbg !7338
  %8 = load double* %arrayidx8, align 8, !dbg !7338, !tbaa !7322
  %sub = fsub double %7, %8, !dbg !7338
  %add = fadd double %sub, %delta, !dbg !7338
  %div = fdiv double %add, %6, !dbg !7338
  tail call void @llvm.dbg.value(metadata !{double %div}, i64 0, metadata !6855), !dbg !7338
  %cmp9 = fcmp olt double %div, %theval.0.ph, !dbg !7340
  %cmp12 = fcmp olt double %7, %2, !dbg !7340
  %or.cond = and i1 %cmp9, %cmp12, !dbg !7340
  tail call void @llvm.dbg.value(metadata !{double %div}, i64 0, metadata !6857), !dbg !7341
  %div.theval.0 = select i1 %or.cond, double %div, double %theval.0.ph, !dbg !7340
  br label %while.cond.outer, !dbg !7340

if.else:                                          ; preds = %while.body
  %cmp15 = fcmp olt double %6, %sub14, !dbg !7329
  br i1 %cmp15, label %if.then16, label %while.cond, !dbg !7329

if.then16:                                        ; preds = %if.else
  %arrayidx22 = getelementptr inbounds double* %low, i64 %idxprom2, !dbg !7342
  %9 = load double* %arrayidx22, align 8, !dbg !7342, !tbaa !7322
  %arrayidx24 = getelementptr inbounds double* %vec, i64 %idxprom2, !dbg !7342
  %10 = load double* %arrayidx24, align 8, !dbg !7342, !tbaa !7322
  %sub25 = fsub double %9, %10, !dbg !7342
  %sub26 = fsub double %sub25, %delta, !dbg !7342
  %div27 = fdiv double %sub26, %6, !dbg !7342
  tail call void @llvm.dbg.value(metadata !{double %div27}, i64 0, metadata !6855), !dbg !7342
  %cmp28 = fcmp olt double %div27, %theval.0.ph, !dbg !7331
  %cmp33 = fcmp ogt double %9, %sub32, !dbg !7331
  %or.cond82 = and i1 %cmp28, %cmp33, !dbg !7331
  br i1 %or.cond82, label %while.cond.outer, label %while.cond.outer66, !dbg !7331

while.end:                                        ; preds = %while.cond
  store double %theval.0.ph, double* %val, align 8, !dbg !7343, !tbaa !7322
  ret i32 -1, !dbg !7344
}
