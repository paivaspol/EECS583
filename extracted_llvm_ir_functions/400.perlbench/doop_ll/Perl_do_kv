define %struct.op* @Perl_do_kv() #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds %struct.sv** %0, i64 -1
  %1 = load %struct.sv** %0, align 8, !tbaa !0
  %2 = bitcast %struct.sv* %1 to %struct.hv*
  %3 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags = getelementptr inbounds %struct.op* %3, i64 0, i32 6
  %4 = load i8* %op_flags, align 1, !tbaa !1
  %conv = zext i8 %4 to i32
  %and = and i32 %conv, 3
  %cmp = icmp eq i32 %and, 1
  br i1 %cmp, label %cond.end19, label %cond.false

cond.false:                                       ; preds = %entry
  %cmp6 = icmp eq i32 %and, 2
  br i1 %cmp6, label %cond.end19, label %cond.false9

cond.false9:                                      ; preds = %cond.false
  %cmp13 = icmp eq i32 %and, 3
  br i1 %cmp13, label %cond.end19, label %cond.false16

cond.false16:                                     ; preds = %cond.false9
  %call = tail call i32 @Perl_block_gimme() #4
  %.pre = load %struct.op** @PL_op, align 8, !tbaa !0
  br label %cond.end19

cond.end19:                                       ; preds = %cond.false, %cond.false9, %cond.false16, %entry
  %5 = phi %struct.op* [ %3, %entry ], [ %3, %cond.false ], [ %.pre, %cond.false16 ], [ %3, %cond.false9 ]
  %cond20 = phi i32 [ 128, %entry ], [ 0, %cond.false ], [ %call, %cond.false16 ], [ 1, %cond.false9 ]
  %op_type = getelementptr inbounds %struct.op* %5, i64 0, i32 4
  %6 = load i16* %op_type, align 2, !tbaa !5
  %7 = getelementptr inbounds %struct.sv* %1, i64 0, i32 2
  %8 = load i32* %7, align 4, !tbaa !3
  %and28 = and i32 %8, 255
  %cmp29 = icmp eq i32 %and28, 11
  %cmp33 = icmp eq i16 %6, 134
  br i1 %cmp33, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.end19
  %cmp26 = icmp eq i16 %6, 130
  %cmp22 = icmp eq i16 %6, 131
  %conv27 = zext i1 %cmp26 to i32
  %conv23 = zext i1 %cmp22 to i32
  %cmp37 = icmp eq i16 %6, 11
  br i1 %cmp37, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %cond.end19
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %dovalues.0 = phi i32 [ 1, %if.then ], [ %conv27, %lor.lhs.false ]
  %dokeys.0 = phi i32 [ 1, %if.then ], [ %conv23, %lor.lhs.false ]
  %tobool = icmp eq %struct.sv* %1, null
  br i1 %tobool, label %if.then39, label %if.end59

if.then39:                                        ; preds = %if.end
  %op_flags40 = getelementptr inbounds %struct.op* %5, i64 0, i32 6
  %9 = load i8* %op_flags40, align 1, !tbaa !1
  %and42 = and i8 %9, 32
  %tobool43 = icmp eq i8 %and42, 0
  br i1 %tobool43, label %lor.lhs.false44, label %if.then50

lor.lhs.false44:                                  ; preds = %if.then39
  %op_private = getelementptr inbounds %struct.op* %5, i64 0, i32 7
  %10 = load i8* %op_private, align 1, !tbaa !1
  %and46 = and i8 %10, 8
  %tobool47 = icmp eq i8 %and46, 0
  br i1 %tobool47, label %if.end58, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false44
  %call48 = tail call i32 @Perl_is_lvalue_sub() #4
  %tobool49 = icmp eq i32 %call48, 0
  br i1 %tobool49, label %if.end58, label %land.lhs.true.if.then50_crit_edge

land.lhs.true.if.then50_crit_edge:                ; preds = %land.lhs.true
  %.pre269 = load %struct.op** @PL_op, align 8, !tbaa !0
  br label %if.then50

if.then50:                                        ; preds = %land.lhs.true.if.then50_crit_edge, %if.then39
  %11 = phi %struct.op* [ %.pre269, %land.lhs.true.if.then50_crit_edge ], [ %5, %if.then39 ]
  %op_targ = getelementptr inbounds %struct.op* %11, i64 0, i32 3
  %12 = load i64* %op_targ, align 8, !tbaa !4
  %13 = load %struct.sv*** @PL_curpad, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %struct.sv** %13, i64 %12
  %14 = load %struct.sv** %arrayidx, align 8, !tbaa !0
  %sv_flags51 = getelementptr inbounds %struct.sv* %14, i64 0, i32 2
  %15 = load i32* %sv_flags51, align 4, !tbaa !3
  %and52 = and i32 %15, 255
  %cmp53 = icmp eq i32 %and52, 9
  br i1 %cmp53, label %if.then55, label %if.end56

if.then55:                                        ; preds = %if.then50
  %sv_any = getelementptr inbounds %struct.sv* %14, i64 0, i32 0
  %16 = load i8** %sv_any, align 8, !tbaa !0
  %xlv_targ = getelementptr inbounds i8* %16, i64 72
  %17 = bitcast i8* %xlv_targ to %struct.sv**
  store %struct.sv* null, %struct.sv** %17, align 8, !tbaa !0
  br label %if.end56

if.end56:                                         ; preds = %if.then55, %if.then50
  store %struct.sv* %14, %struct.sv** %0, align 8, !tbaa !0
  br label %if.end58

if.end58:                                         ; preds = %land.lhs.true, %lor.lhs.false44, %if.end56
  %sp.0 = phi %struct.sv** [ %0, %if.end56 ], [ %incdec.ptr, %lor.lhs.false44 ], [ %incdec.ptr, %land.lhs.true ]
  store %struct.sv** %sp.0, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %18 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next = getelementptr inbounds %struct.op* %18, i64 0, i32 0
  br label %return

if.end59:                                         ; preds = %if.end
  br i1 %cmp29, label %cond.end64, label %cond.false62

cond.false62:                                     ; preds = %if.end59
  %19 = bitcast %struct.sv* %1 to %struct.av*
  %call63 = tail call %struct.hv* @Perl_avhv_keys(%struct.av* %19) #4
  br label %cond.end64

cond.end64:                                       ; preds = %if.end59, %cond.false62
  %cond65 = phi %struct.hv* [ %call63, %cond.false62 ], [ %2, %if.end59 ]
  %call66 = tail call i32 @Perl_hv_iterinit(%struct.hv* %cond65) #4
  switch i32 %cond20, label %if.end142 [
    i32 128, label %if.then69
    i32 0, label %if.then74
  ]

if.then69:                                        ; preds = %cond.end64
  store %struct.sv** %incdec.ptr, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %20 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next70 = getelementptr inbounds %struct.op* %20, i64 0, i32 0
  br label %return

if.then74:                                        ; preds = %cond.end64
  %21 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_targ76 = getelementptr inbounds %struct.op* %21, i64 0, i32 3
  %22 = load i64* %op_targ76, align 8, !tbaa !4
  %23 = load %struct.sv*** @PL_curpad, align 8, !tbaa !0
  %arrayidx77 = getelementptr inbounds %struct.sv** %23, i64 %22
  %24 = load %struct.sv** %arrayidx77, align 8, !tbaa !0
  %op_flags78 = getelementptr inbounds %struct.op* %21, i64 0, i32 6
  %25 = load i8* %op_flags78, align 1, !tbaa !1
  %and80 = and i8 %25, 32
  %tobool81 = icmp eq i8 %and80, 0
  br i1 %tobool81, label %lor.lhs.false82, label %if.then90

lor.lhs.false82:                                  ; preds = %if.then74
  %op_private83 = getelementptr inbounds %struct.op* %21, i64 0, i32 7
  %26 = load i8* %op_private83, align 1, !tbaa !1
  %and85 = and i8 %26, 8
  %tobool86 = icmp eq i8 %and85, 0
  br i1 %tobool86, label %if.end118, label %land.lhs.true87

land.lhs.true87:                                  ; preds = %lor.lhs.false82
  %call88 = tail call i32 @Perl_is_lvalue_sub() #4
  %tobool89 = icmp eq i32 %call88, 0
  br i1 %tobool89, label %if.end118, label %if.then90

if.then90:                                        ; preds = %land.lhs.true87, %if.then74
  %sv_flags91 = getelementptr inbounds %struct.sv* %24, i64 0, i32 2
  %27 = load i32* %sv_flags91, align 4, !tbaa !3
  %and92 = and i32 %27, 255
  %cmp93 = icmp ult i32 %and92, 9
  br i1 %cmp93, label %if.then95, label %if.end97

if.then95:                                        ; preds = %if.then90
  %call96 = tail call signext i8 @Perl_sv_upgrade(%struct.sv* %24, i32 9) #4
  tail call void @Perl_sv_magic(%struct.sv* %24, %struct.sv* null, i32 107, i8* null, i32 0) #4
  br label %if.end97

if.end97:                                         ; preds = %if.then95, %if.then90
  %sv_any98 = getelementptr inbounds %struct.sv* %24, i64 0, i32 0
  %28 = load i8** %sv_any98, align 8, !tbaa !0
  %29 = getelementptr inbounds i8* %28, i64 80
  store i8 107, i8* %29, align 1, !tbaa !1
  %30 = load i8** %sv_any98, align 8, !tbaa !0
  %xlv_targ100 = getelementptr inbounds i8* %30, i64 72
  %31 = bitcast i8* %xlv_targ100 to %struct.sv**
  %32 = load %struct.sv** %31, align 8, !tbaa !0
  %33 = bitcast %struct.hv* %cond65 to %struct.sv*
  %cmp101 = icmp eq %struct.sv* %32, %33
  br i1 %cmp101, label %if.end115, label %if.then103

if.then103:                                       ; preds = %if.end97
  %tobool106 = icmp eq %struct.sv* %32, null
  br i1 %tobool106, label %if.end110, label %if.then107

if.then107:                                       ; preds = %if.then103
  tail call void @Perl_sv_free(%struct.sv* %32) #4
  br label %if.end110

if.end110:                                        ; preds = %if.then103, %if.then107
  store %struct.sv* %33, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %tobool111 = icmp eq %struct.hv* %cond65, null
  br i1 %tobool111, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end110
  %34 = getelementptr inbounds %struct.hv* %cond65, i64 0, i32 1
  %35 = load i32* %34, align 4, !tbaa !3
  %inc = add i32 %35, 1
  store i32 %inc, i32* %34, align 4, !tbaa !3
  br label %land.end

land.end:                                         ; preds = %if.end110, %land.rhs
  %36 = load i8** %sv_any98, align 8, !tbaa !0
  %xlv_targ114 = getelementptr inbounds i8* %36, i64 72
  %37 = bitcast i8* %xlv_targ114 to %struct.sv**
  store %struct.sv* %33, %struct.sv** %37, align 8, !tbaa !0
  br label %if.end115

if.end115:                                        ; preds = %if.end97, %land.end
  store %struct.sv* %24, %struct.sv** %0, align 8, !tbaa !0
  store %struct.sv** %0, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %38 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next117 = getelementptr inbounds %struct.op* %38, i64 0, i32 0
  br label %return

if.end118:                                        ; preds = %land.lhs.true87, %lor.lhs.false82
  %39 = getelementptr inbounds %struct.hv* %cond65, i64 0, i32 2
  %40 = load i32* %39, align 4, !tbaa !3
  %and120 = and i32 %40, 32768
  %tobool121 = icmp eq i32 %and120, 0
  br i1 %tobool121, label %if.then126, label %cond.true122

cond.true122:                                     ; preds = %if.end118
  %41 = bitcast %struct.hv* %cond65 to %struct.sv*
  %call123 = tail call %struct.magic* @Perl_mg_find(%struct.sv* %41, i32 80) #4
  %tobool124 = icmp eq %struct.magic* %call123, null
  br i1 %tobool124, label %if.then126, label %while.cond

if.then126:                                       ; preds = %cond.true122, %if.end118
  %sv_any127 = getelementptr inbounds %struct.hv* %cond65, i64 0, i32 0
  %42 = load %struct.xpvhv** %sv_any127, align 8, !tbaa !0
  %xhv_keys = getelementptr inbounds %struct.xpvhv* %42, i64 0, i32 3
  %43 = load i64* %xhv_keys, align 8, !tbaa !4
  %xnv_nv = getelementptr inbounds %struct.xpvhv* %42, i64 0, i32 4
  %44 = load double* %xnv_nv, align 8, !tbaa !6
  %conv129 = fptosi double %44 to i64
  %sub = sub nsw i64 %43, %conv129
  br label %if.end133

while.cond:                                       ; preds = %cond.true122, %while.cond
  %i.0 = phi i64 [ %inc132, %while.cond ], [ 0, %cond.true122 ]
  %call130 = tail call %struct.he* @Perl_hv_iternext(%struct.hv* %cond65) #4
  %tobool131 = icmp eq %struct.he* %call130, null
  %inc132 = add nsw i64 %i.0, 1
  br i1 %tobool131, label %if.end133, label %while.cond

if.end133:                                        ; preds = %while.cond, %if.then126
  %i.1 = phi i64 [ %sub, %if.then126 ], [ %i.0, %while.cond ]
  tail call void @Perl_sv_setiv(%struct.sv* %24, i64 %i.1) #4
  %sv_flags134 = getelementptr inbounds %struct.sv* %24, i64 0, i32 2
  %45 = load i32* %sv_flags134, align 4, !tbaa !3
  %and135 = and i32 %45, 16384
  %tobool136 = icmp eq i32 %and135, 0
  br i1 %tobool136, label %if.end139, label %if.then137

if.then137:                                       ; preds = %if.end133
  %call138 = tail call i32 @Perl_mg_set(%struct.sv* %24) #4
  br label %if.end139

if.end139:                                        ; preds = %if.end133, %if.then137
  store %struct.sv* %24, %struct.sv** %0, align 8, !tbaa !0
  store %struct.sv** %0, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %46 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next141 = getelementptr inbounds %struct.op* %46, i64 0, i32 0
  br label %return

if.end142:                                        ; preds = %cond.end64
  %47 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %47 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %incdec.ptr to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3
  %sv_any143 = getelementptr inbounds %struct.hv* %cond65, i64 0, i32 0
  %48 = load %struct.xpvhv** %sv_any143, align 8, !tbaa !0
  %xhv_keys144 = getelementptr inbounds %struct.xpvhv* %48, i64 0, i32 3
  %49 = load i64* %xhv_keys144, align 8, !tbaa !4
  %xnv_nv146 = getelementptr inbounds %struct.xpvhv* %48, i64 0, i32 4
  %50 = load double* %xnv_nv146, align 8, !tbaa !6
  %conv147 = fptosi double %50 to i64
  %sub148 = sub nsw i64 %49, %conv147
  %add = add nsw i32 %dokeys.0, %dovalues.0
  %conv149 = sext i32 %add to i64
  %mul = mul nsw i64 %sub148, %conv149
  %sext = shl i64 %mul, 32
  %conv151 = ashr exact i64 %sext, 32
  %cmp152 = icmp slt i64 %sub.ptr.div, %conv151
  br i1 %cmp152, label %if.then154, label %while.cond167.preheader

if.then154:                                       ; preds = %if.end142
  %conv150 = trunc i64 %mul to i32
  %call165 = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %incdec.ptr, %struct.sv** %incdec.ptr, i32 %conv150) #4
  br label %while.cond167.preheader

while.cond167.preheader:                          ; preds = %if.then154, %if.end142
  %storemerge.ph = phi %struct.sv** [ %incdec.ptr, %if.end142 ], [ %call165, %if.then154 ]
  store %struct.sv** %storemerge.ph, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %call168266 = tail call %struct.he* @Perl_hv_iternext(%struct.hv* %cond65) #4
  %tobool169267 = icmp eq %struct.he* %call168266, null
  br i1 %tobool169267, label %while.end205, label %while.body170.lr.ph

while.body170.lr.ph:                              ; preds = %while.cond167.preheader
  %tobool171 = icmp eq i32 %dokeys.0, 0
  %tobool185 = icmp eq i32 %dovalues.0, 0
  %51 = bitcast %struct.sv* %1 to %struct.av*
  br label %while.body170

while.body170:                                    ; preds = %while.body170.lr.ph, %while.cond167.backedge
  %call168268 = phi %struct.he* [ %call168266, %while.body170.lr.ph ], [ %call168, %while.cond167.backedge ]
  %52 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  br i1 %tobool171, label %if.end184, label %if.then172

if.then172:                                       ; preds = %while.body170
  %call173 = tail call %struct.sv* @Perl_hv_iterkeysv(%struct.he* %call168268) #4
  %53 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast174 = ptrtoint %struct.sv** %53 to i64
  %sub.ptr.rhs.cast175 = ptrtoint %struct.sv** %52 to i64
  %sub.ptr.sub176 = sub i64 %sub.ptr.lhs.cast174, %sub.ptr.rhs.cast175
  %cmp178 = icmp slt i64 %sub.ptr.sub176, 8
  br i1 %cmp178, label %if.then180, label %if.end182

if.then180:                                       ; preds = %if.then172
  %call181 = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %52, %struct.sv** %52, i32 1) #4
  br label %if.end182

if.end182:                                        ; preds = %if.then180, %if.then172
  %sp.2 = phi %struct.sv** [ %call181, %if.then180 ], [ %52, %if.then172 ]
  %incdec.ptr183 = getelementptr inbounds %struct.sv** %sp.2, i64 1
  store %struct.sv* %call173, %struct.sv** %incdec.ptr183, align 8, !tbaa !0
  br label %if.end184

if.end184:                                        ; preds = %while.body170, %if.end182
  %sp.3 = phi %struct.sv** [ %incdec.ptr183, %if.end182 ], [ %52, %while.body170 ]
  br i1 %tobool185, label %while.cond167.backedge, label %if.then186

while.cond167.backedge:                           ; preds = %if.end184, %if.end202
  %storemerge.be = phi %struct.sv** [ %incdec.ptr203, %if.end202 ], [ %sp.3, %if.end184 ]
  store %struct.sv** %storemerge.be, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %call168 = tail call %struct.he* @Perl_hv_iternext(%struct.hv* %cond65) #4
  %tobool169 = icmp eq %struct.he* %call168, null
  br i1 %tobool169, label %while.end205, label %while.body170

if.then186:                                       ; preds = %if.end184
  store %struct.sv** %sp.3, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  br i1 %cmp29, label %cond.true188, label %cond.false190

cond.true188:                                     ; preds = %if.then186
  %call189 = tail call %struct.sv* @Perl_hv_iterval(%struct.hv* %2, %struct.he* %call168268) #4
  br label %cond.end192

cond.false190:                                    ; preds = %if.then186
  %call191 = tail call %struct.sv* @Perl_avhv_iterval(%struct.av* %51, %struct.he* %call168268) #4
  br label %cond.end192

cond.end192:                                      ; preds = %cond.false190, %cond.true188
  %cond193 = phi %struct.sv* [ %call189, %cond.true188 ], [ %call191, %cond.false190 ]
  %54 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %55 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast194 = ptrtoint %struct.sv** %55 to i64
  %sub.ptr.rhs.cast195 = ptrtoint %struct.sv** %54 to i64
  %sub.ptr.sub196 = sub i64 %sub.ptr.lhs.cast194, %sub.ptr.rhs.cast195
  %cmp198 = icmp slt i64 %sub.ptr.sub196, 8
  br i1 %cmp198, label %if.then200, label %if.end202

if.then200:                                       ; preds = %cond.end192
  %call201 = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %54, %struct.sv** %54, i32 1) #4
  br label %if.end202

if.end202:                                        ; preds = %if.then200, %cond.end192
  %sp.4 = phi %struct.sv** [ %call201, %if.then200 ], [ %54, %cond.end192 ]
  %incdec.ptr203 = getelementptr inbounds %struct.sv** %sp.4, i64 1
  store %struct.sv* %cond193, %struct.sv** %incdec.ptr203, align 8, !tbaa !0
  br label %while.cond167.backedge

while.end205:                                     ; preds = %while.cond167.backedge, %while.cond167.preheader
  %56 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next206 = getelementptr inbounds %struct.op* %56, i64 0, i32 0
  br label %return

return:                                           ; preds = %while.end205, %if.end139, %if.end115, %if.then69, %if.end58
  %retval.0.in = phi %struct.op** [ %op_next70, %if.then69 ], [ %op_next117, %if.end115 ], [ %op_next141, %if.end139 ], [ %op_next206, %while.end205 ], [ %op_next, %if.end58 ]
  %retval.0 = load %struct.op** %retval.0.in, align 8
  ret %struct.op* %retval.0
}
