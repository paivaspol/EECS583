define void @XS_HTML__Parser__alloc_pstate(%struct.cv* nocapture %cv) #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %2 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i32* %2, i64 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %3 = load i32* %2, align 4, !tbaa !3
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %idx.ext
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nsw i64 %idx.ext, 32
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %4 = and i64 %sub.ptr.sub3, 34359738360
  %cmp = icmp eq i64 %4, 8
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([41 x i8]* @.str20, i64 0, i64 0)) #6
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %5 = phi %struct.sv** [ %1, %entry ], [ %.pre, %if.then ]
  %sext = add i64 %add.ptr.idx, 4294967296
  %idxprom = ashr exact i64 %sext, 32
  %arrayidx = getelementptr inbounds %struct.sv** %5, i64 %idxprom
  %6 = load %struct.sv** %arrayidx, align 8, !tbaa !0
  %sv_any = getelementptr inbounds %struct.sv* %6, i64 0, i32 0
  %7 = load i8** %sv_any, align 8, !tbaa !0
  %xrv_rv = bitcast i8* %7 to %struct.sv**
  %8 = load %struct.sv** %xrv_rv, align 8, !tbaa !0
  %tobool = icmp eq %struct.sv* %8, null
  br i1 %tobool, label %if.then10, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %sv_flags = getelementptr inbounds %struct.sv* %8, i64 0, i32 2
  %9 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %9, 255
  %cmp8 = icmp eq i32 %and, 11
  br i1 %cmp8, label %if.end11, label %if.then10

if.then10:                                        ; preds = %lor.lhs.false, %if.end
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([26 x i8]* @.str21, i64 0, i64 0)) #6
  br label %if.end11

if.end11:                                         ; preds = %lor.lhs.false, %if.then10
  %10 = bitcast %struct.sv* %8 to %struct.hv*
  %call = tail call i8* @Perl_safesysmalloc(i64 368) #6
  tail call void @llvm.memset.p0i8.i64(i8* %call, i8 0, i64 368, i32 1, i1 false)
  %signature = bitcast i8* %call to i32*
  store i32 369695076, i32* %signature, align 4, !tbaa !3
  %call12 = tail call %struct.hv* @Perl_get_hv(i8* getelementptr inbounds ([28 x i8]* @.str22, i64 0, i64 0), i32 1) #6
  %entity2char = getelementptr inbounds i8* %call, i64 352
  %11 = bitcast i8* %entity2char to %struct.hv**
  store %struct.hv* %call12, %struct.hv** %11, align 8, !tbaa !0
  %call13 = tail call %struct.sv* @Perl_newSV(i64 20) #6
  %tmp = getelementptr inbounds i8* %call, i64 360
  %12 = bitcast i8* %tmp to %struct.sv**
  store %struct.sv* %call13, %struct.sv** %12, align 8, !tbaa !0
  %13 = ptrtoint i8* %call to i64
  %call14 = tail call %struct.sv* @Perl_newSViv(i64 %13) #6
  tail call void @Perl_sv_magic(%struct.sv* %call14, %struct.sv* null, i32 126, i8* null, i32 0) #6
  %call15 = tail call %struct.magic* @Perl_mg_find(%struct.sv* %call14, i32 126) #6
  %mg_virtual = getelementptr inbounds %struct.magic* %call15, i64 0, i32 1
  store %struct.mgvtbl* bitcast ({ i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*, %struct.sv*, i8*, i32)*, i32 (%struct.magic*, %struct.clone_params*)* }* @vtbl_free_pstate to %struct.mgvtbl*), %struct.mgvtbl** %mg_virtual, align 8, !tbaa !0
  %sv_flags16 = getelementptr inbounds %struct.sv* %call14, i64 0, i32 2
  %14 = load i32* %sv_flags16, align 4, !tbaa !3
  %or = or i32 %14, 8388608
  store i32 %or, i32* %sv_flags16, align 4, !tbaa !3
  %call17 = tail call %struct.sv* @Perl_newRV_noinc(%struct.sv* %call14) #6
  %call18 = tail call %struct.sv** @Perl_hv_store(%struct.hv* %10, i8* getelementptr inbounds ([18 x i8]* @.str23, i64 0, i64 0), i32 17, %struct.sv* %call17, i32 0) #6
  %15 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %add.ptr21.sum = add i64 %idxprom, -1
  %add.ptr22 = getelementptr inbounds %struct.sv** %15, i64 %add.ptr21.sum
  store %struct.sv** %add.ptr22, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  ret void
}
