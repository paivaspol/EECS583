define void @XS_HTML__Parser_strict_comment(%struct.cv* nocapture %cv) #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %2 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i32* %2, i64 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %3 = load i32* %2, align 4, !tbaa !3
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %idx.ext
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nsw i64 %idx.ext, 32
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %sub.ptr.div4123 = lshr exact i64 %sub.ptr.sub3, 3
  %conv5 = trunc i64 %sub.ptr.div4123 to i32
  %sv_any = getelementptr inbounds %struct.cv* %cv, i64 0, i32 0
  %4 = load %struct.xpvcv** %sv_any, align 8, !tbaa !0
  %xcv_xsubany = getelementptr inbounds %struct.xpvcv* %4, i64 0, i32 11
  %any_i32 = bitcast %union.any* %xcv_xsubany to i32*
  %5 = load i32* %any_i32, align 4, !tbaa !3
  %cmp = icmp slt i32 %conv5, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %xcv_gv = getelementptr inbounds %struct.xpvcv* %4, i64 0, i32 12
  %6 = load %struct.gv** %xcv_gv, align 8, !tbaa !0
  %sv_any8 = getelementptr inbounds %struct.gv* %6, i64 0, i32 0
  %7 = load %struct.xpvgv** %sv_any8, align 8, !tbaa !0
  %xgv_name = getelementptr inbounds %struct.xpvgv* %7, i64 0, i32 8
  %8 = load i8** %xgv_name, align 8, !tbaa !0
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([23 x i8]* @.str27, i64 0, i64 0), i8* %8) #6
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = phi %struct.sv** [ %.pre, %if.then ], [ %1, %entry ]
  %sext = add i64 %add.ptr.idx, 4294967296
  %idxprom = ashr exact i64 %sext, 32
  %arrayidx = getelementptr inbounds %struct.sv** %9, i64 %idxprom
  %10 = load %struct.sv** %arrayidx, align 8, !tbaa !0
  %call = tail call fastcc %struct.p_state* @get_pstate_hv(%struct.sv* %10) #5
  switch i32 %5, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb10
    i32 3, label %sw.bb11
    i32 4, label %sw.bb12
    i32 5, label %sw.bb13
    i32 6, label %sw.bb14
    i32 7, label %sw.bb15
    i32 8, label %sw.bb16
    i32 9, label %sw.bb17
    i32 10, label %sw.bb18
  ]

sw.bb:                                            ; preds = %if.end
  %strict_comment = getelementptr inbounds %struct.p_state* %call, i64 0, i32 20
  br label %sw.epilog

sw.bb10:                                          ; preds = %if.end
  %strict_names = getelementptr inbounds %struct.p_state* %call, i64 0, i32 21
  br label %sw.epilog

sw.bb11:                                          ; preds = %if.end
  %xml_mode = getelementptr inbounds %struct.p_state* %call, i64 0, i32 23
  br label %sw.epilog

sw.bb12:                                          ; preds = %if.end
  %unbroken_text = getelementptr inbounds %struct.p_state* %call, i64 0, i32 24
  br label %sw.epilog

sw.bb13:                                          ; preds = %if.end
  %marked_sections = getelementptr inbounds %struct.p_state* %call, i64 0, i32 19
  br label %sw.epilog

sw.bb14:                                          ; preds = %if.end
  %attr_encoded = getelementptr inbounds %struct.p_state* %call, i64 0, i32 25
  br label %sw.epilog

sw.bb15:                                          ; preds = %if.end
  %case_sensitive = getelementptr inbounds %struct.p_state* %call, i64 0, i32 26
  br label %sw.epilog

sw.bb16:                                          ; preds = %if.end
  %strict_end = getelementptr inbounds %struct.p_state* %call, i64 0, i32 22
  br label %sw.epilog

sw.bb17:                                          ; preds = %if.end
  %closing_plaintext = getelementptr inbounds %struct.p_state* %call, i64 0, i32 27
  br label %sw.epilog

sw.bb18:                                          ; preds = %if.end
  %utf8_mode = getelementptr inbounds %struct.p_state* %call, i64 0, i32 28
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([31 x i8]* @.str28, i64 0, i64 0), i32 %5) #6
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb
  %attr.0 = phi i8* [ undef, %sw.default ], [ %utf8_mode, %sw.bb18 ], [ %closing_plaintext, %sw.bb17 ], [ %strict_end, %sw.bb16 ], [ %case_sensitive, %sw.bb15 ], [ %attr_encoded, %sw.bb14 ], [ %marked_sections, %sw.bb13 ], [ %unbroken_text, %sw.bb12 ], [ %xml_mode, %sw.bb11 ], [ %strict_names, %sw.bb10 ], [ %strict_comment, %sw.bb ]
  %11 = load i8* %attr.0, align 1, !tbaa !1
  %tobool = icmp ne i8 %11, 0
  %cond = select i1 %tobool, %struct.sv* @PL_sv_yes, %struct.sv* @PL_sv_no
  %cmp20 = icmp sgt i32 %conv5, 1
  br i1 %cmp20, label %if.then22, label %if.end89

if.then22:                                        ; preds = %sw.epilog
  %sext124 = add i64 %add.ptr.idx, 8589934592
  %idxprom24 = ashr exact i64 %sext124, 32
  %12 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %arrayidx25 = getelementptr inbounds %struct.sv** %12, i64 %idxprom24
  %13 = load %struct.sv** %arrayidx25, align 8, !tbaa !0
  %tobool26 = icmp eq %struct.sv* %13, null
  br i1 %tobool26, label %cond.end86, label %cond.false

cond.false:                                       ; preds = %if.then22
  %sv_flags = getelementptr inbounds %struct.sv* %13, i64 0, i32 2
  %14 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %14, 262144
  %tobool30 = icmp eq i32 %and, 0
  br i1 %tobool30, label %cond.false47, label %cond.true31

cond.true31:                                      ; preds = %cond.false
  %sv_any35 = getelementptr inbounds %struct.sv* %13, i64 0, i32 0
  %15 = load i8** %sv_any35, align 8, !tbaa !0
  %16 = bitcast i8* %15 to %struct.xpv*
  store %struct.xpv* %16, %struct.xpv** @PL_Xpv, align 8, !tbaa !0
  %tobool36 = icmp eq i8* %15, null
  br i1 %tobool36, label %land.end45, label %land.rhs

land.rhs:                                         ; preds = %cond.true31
  %xpv_cur = getelementptr inbounds i8* %15, i64 8
  %17 = bitcast i8* %xpv_cur to i64*
  %18 = load i64* %17, align 8, !tbaa !4
  %cmp37 = icmp ugt i64 %18, 1
  br i1 %cmp37, label %land.end45, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %tobool40 = icmp eq i64 %18, 0
  br i1 %tobool40, label %land.end45, label %land.rhs41

land.rhs41:                                       ; preds = %lor.rhs
  %xpv_pv = bitcast i8* %15 to i8**
  %19 = load i8** %xpv_pv, align 8, !tbaa !0
  %20 = load i8* %19, align 1, !tbaa !1
  %cmp43 = icmp ne i8 %20, 48
  br label %land.end45

land.end45:                                       ; preds = %lor.rhs, %cond.true31, %land.rhs, %land.rhs41
  %21 = phi i1 [ false, %cond.true31 ], [ true, %land.rhs ], [ false, %lor.rhs ], [ %cmp43, %land.rhs41 ]
  %cond46 = zext i1 %21 to i8
  br label %cond.end86

cond.false47:                                     ; preds = %cond.false
  %and52 = and i32 %14, 65536
  %tobool53 = icmp eq i32 %and52, 0
  br i1 %tobool53, label %cond.false61, label %cond.true54

cond.true54:                                      ; preds = %cond.false47
  %sv_any58 = getelementptr inbounds %struct.sv* %13, i64 0, i32 0
  %22 = load i8** %sv_any58, align 8, !tbaa !0
  %xiv_iv = getelementptr inbounds i8* %22, i64 24
  %23 = bitcast i8* %xiv_iv to i64*
  %24 = load i64* %23, align 8, !tbaa !4
  %cmp59 = icmp ne i64 %24, 0
  %conv60 = zext i1 %cmp59 to i8
  br label %cond.end86

cond.false61:                                     ; preds = %cond.false47
  %and66 = and i32 %14, 131072
  %tobool67 = icmp eq i32 %and66, 0
  br i1 %tobool67, label %cond.false75, label %cond.true68

cond.true68:                                      ; preds = %cond.false61
  %sv_any72 = getelementptr inbounds %struct.sv* %13, i64 0, i32 0
  %25 = load i8** %sv_any72, align 8, !tbaa !0
  %xnv_nv = getelementptr inbounds i8* %25, i64 32
  %26 = bitcast i8* %xnv_nv to double*
  %27 = load double* %26, align 8, !tbaa !5
  %cmp73 = fcmp une double %27, 0.000000e+00
  %conv74 = zext i1 %cmp73 to i8
  br label %cond.end86

cond.false75:                                     ; preds = %cond.false61
  %call79 = tail call signext i8 @Perl_sv_2bool(%struct.sv* %13) #6
  br label %cond.end86

cond.end86:                                       ; preds = %if.then22, %land.end45, %cond.true68, %cond.false75, %cond.true54
  %cond87 = phi i8 [ 0, %if.then22 ], [ %cond46, %land.end45 ], [ %conv60, %cond.true54 ], [ %conv74, %cond.true68 ], [ %call79, %cond.false75 ]
  store i8 %cond87, i8* %attr.0, align 1, !tbaa !1
  br label %if.end89

if.end89:                                         ; preds = %cond.end86, %sw.epilog
  %28 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %arrayidx92 = getelementptr inbounds %struct.sv** %28, i64 %idxprom
  store %struct.sv* %cond, %struct.sv** %arrayidx92, align 8, !tbaa !0
  %29 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %arrayidx95 = getelementptr inbounds %struct.sv** %29, i64 %idxprom
  %30 = load %struct.sv** %arrayidx95, align 8, !tbaa !0
  %call96 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %30) #6
  %31 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %add.ptr98 = getelementptr inbounds %struct.sv** %31, i64 %idxprom
  store %struct.sv** %add.ptr98, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  ret void
}
