define internal fastcc void @tokens_grow(%struct.token_pos** nocapture %token_ptr, i32* nocapture %token_lim_ptr, i8 signext %tokens_on_heap) #0 {
entry:
  %0 = load i32* %token_lim_ptr, align 4, !tbaa !3
  %cmp = icmp slt i32 %0, 4
  %.op = shl i32 %0, 1
  %mul = select i1 %cmp, i32 8, i32 %.op
  %tobool = icmp eq i8 %tokens_on_heap, 0
  br i1 %tobool, label %if.else, label %if.then1

if.then1:                                         ; preds = %entry
  %1 = load %struct.token_pos** %token_ptr, align 8, !tbaa !0
  %2 = bitcast %struct.token_pos* %1 to i8*
  %conv = sext i32 %mul to i64
  %mul2 = shl nsw i64 %conv, 4
  %call = tail call i8* @Perl_safesysrealloc(i8* %2, i64 %mul2) #6
  %3 = bitcast i8* %call to %struct.token_pos*
  br label %if.end10

if.else:                                          ; preds = %entry
  %conv3 = sext i32 %mul to i64
  %mul4 = shl nsw i64 %conv3, 4
  %call5 = tail call i8* @Perl_safesysmalloc(i64 %mul4) #6
  %4 = bitcast i8* %call5 to %struct.token_pos*
  %5 = load i32* %token_lim_ptr, align 4, !tbaa !3
  %cmp624 = icmp sgt i32 %5, 0
  br i1 %cmp624, label %for.body, label %if.end10

for.body:                                         ; preds = %if.else, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %if.else ]
  %arrayidx = getelementptr inbounds %struct.token_pos* %4, i64 %indvars.iv
  %6 = load %struct.token_pos** %token_ptr, align 8, !tbaa !0
  %arrayidx9 = getelementptr inbounds %struct.token_pos* %6, i64 %indvars.iv
  %7 = bitcast %struct.token_pos* %arrayidx to i8*
  %8 = bitcast %struct.token_pos* %arrayidx9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 16, i32 8, i1 false), !tbaa.struct !7
  %indvars.iv.next = add i64 %indvars.iv, 1
  %9 = load i32* %token_lim_ptr, align 4, !tbaa !3
  %10 = trunc i64 %indvars.iv.next to i32
  %cmp6 = icmp slt i32 %10, %9
  br i1 %cmp6, label %for.body, label %if.end10

if.end10:                                         ; preds = %if.else, %for.body, %if.then1
  %storemerge = phi %struct.token_pos* [ %3, %if.then1 ], [ %4, %for.body ], [ %4, %if.else ]
  store %struct.token_pos* %storemerge, %struct.token_pos** %token_ptr, align 8, !tbaa !0
  store i32 %mul, i32* %token_lim_ptr, align 4, !tbaa !3
  ret void
}
