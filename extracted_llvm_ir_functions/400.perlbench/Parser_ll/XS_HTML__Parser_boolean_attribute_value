define void @XS_HTML__Parser_boolean_attribute_value(%struct.cv* nocapture %cv) #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %2 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i32* %2, i64 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %3 = load i32* %2, align 4, !tbaa !3
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %idx.ext
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nsw i64 %idx.ext, 32
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %sub.ptr.div440 = lshr exact i64 %sub.ptr.sub3, 3
  %conv5 = trunc i64 %sub.ptr.div440 to i32
  %cmp = icmp slt i32 %conv5, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([58 x i8]* @.str29, i64 0, i64 0)) #6
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = phi %struct.sv** [ %.pre, %if.then ], [ %1, %entry ]
  %sext = add i64 %add.ptr.idx, 4294967296
  %idxprom = ashr exact i64 %sext, 32
  %arrayidx = getelementptr inbounds %struct.sv** %4, i64 %idxprom
  %5 = load %struct.sv** %arrayidx, align 8, !tbaa !0
  %call = tail call fastcc %struct.p_state* @get_pstate_hv(%struct.sv* %5) #5
  %bool_attr_val = getelementptr inbounds %struct.p_state* %call, i64 0, i32 29
  %6 = load %struct.sv** %bool_attr_val, align 8, !tbaa !0
  %tobool = icmp eq %struct.sv* %6, null
  br i1 %tobool, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.end
  %call9 = tail call %struct.sv* @Perl_newSVsv(%struct.sv* %6) #6
  br label %cond.end

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.sv* [ %call9, %cond.true ], [ @PL_sv_undef, %if.end ]
  %cmp10 = icmp sgt i32 %conv5, 1
  br i1 %cmp10, label %if.then12, label %if.end19

if.then12:                                        ; preds = %cond.end
  %7 = load %struct.sv** %bool_attr_val, align 8, !tbaa !0
  tail call void @Perl_sv_free(%struct.sv* %7) #6
  %sext41 = add i64 %add.ptr.idx, 8589934592
  %idxprom15 = ashr exact i64 %sext41, 32
  %8 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %arrayidx16 = getelementptr inbounds %struct.sv** %8, i64 %idxprom15
  %9 = load %struct.sv** %arrayidx16, align 8, !tbaa !0
  %call17 = tail call %struct.sv* @Perl_newSVsv(%struct.sv* %9) #6
  store %struct.sv* %call17, %struct.sv** %bool_attr_val, align 8, !tbaa !0
  br label %if.end19

if.end19:                                         ; preds = %if.then12, %cond.end
  %10 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %arrayidx22 = getelementptr inbounds %struct.sv** %10, i64 %idxprom
  store %struct.sv* %cond, %struct.sv** %arrayidx22, align 8, !tbaa !0
  %11 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %arrayidx25 = getelementptr inbounds %struct.sv** %11, i64 %idxprom
  %12 = load %struct.sv** %arrayidx25, align 8, !tbaa !0
  %call26 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %12) #6
  %13 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %add.ptr28 = getelementptr inbounds %struct.sv** %13, i64 %idxprom
  store %struct.sv** %add.ptr28, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  ret void
}
