define internal fastcc %struct.sv* @S_isa_lookup(%struct.hv* %stash, i8* %name, %struct.hv* %name_stash, i32 %len, i32 %level) #0 {
entry:
  %tobool = icmp ne %struct.hv* %name_stash, null
  %cmp = icmp eq %struct.hv* %stash, %name_stash
  %or.cond = and i1 %tobool, %cmp
  br i1 %or.cond, label %return, label %if.end

if.end:                                           ; preds = %entry
  %sv_any = getelementptr inbounds %struct.hv* %stash, i64 0, i32 0
  %0 = load %struct.xpvhv** %sv_any, align 8, !tbaa !3
  %xhv_name = getelementptr inbounds %struct.xpvhv* %0, i64 0, i32 10
  %1 = load i8** %xhv_name, align 8, !tbaa !3
  %call = tail call i32 @strcmp(i8* %1, i8* %name) #4
  %tobool1 = icmp eq i32 %call, 0
  br i1 %tobool1, label %return, label %if.end3

if.end3:                                          ; preds = %if.end
  %call4 = tail call i32 @strcmp(i8* %name, i8* getelementptr inbounds ([10 x i8]* @.str51, i64 0, i64 0)) #4
  %tobool5 = icmp eq i32 %call4, 0
  br i1 %tobool5, label %return, label %if.end7

if.end7:                                          ; preds = %if.end3
  %cmp8 = icmp sgt i32 %level, 100
  br i1 %cmp8, label %if.then9, label %if.end12

if.then9:                                         ; preds = %if.end7
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([47 x i8]* @.str52, i64 0, i64 0), i8* %1) #4
  br label %if.end12

if.end12:                                         ; preds = %if.then9, %if.end7
  %call13 = tail call %struct.sv** @Perl_hv_fetch(%struct.hv* %stash, i8* getelementptr inbounds ([15 x i8]* @.str53, i64 0, i64 0), i32 14, i32 0) #4
  %tobool14 = icmp eq %struct.sv** %call13, null
  br i1 %tobool14, label %if.end40, label %land.lhs.true15

land.lhs.true15:                                  ; preds = %if.end12
  %2 = load %struct.sv** %call13, align 8
  %cmp16 = icmp eq %struct.sv* %2, @PL_sv_undef
  br i1 %cmp16, label %if.end40, label %land.lhs.true17

land.lhs.true17:                                  ; preds = %land.lhs.true15
  %sv_any18 = bitcast %struct.sv* %2 to %struct.xpvgv**
  %3 = load %struct.xpvgv** %sv_any18, align 8, !tbaa !3
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %3, i64 0, i32 7
  %4 = load %struct.gp** %xgv_gp, align 8, !tbaa !3
  %gp_sv = getelementptr inbounds %struct.gp* %4, i64 0, i32 0
  %5 = load %struct.sv** %gp_sv, align 8, !tbaa !3
  %tobool19 = icmp eq %struct.sv* %5, null
  br i1 %tobool19, label %if.end40, label %land.lhs.true20

land.lhs.true20:                                  ; preds = %land.lhs.true17
  %gp_hv = getelementptr inbounds %struct.gp* %4, i64 0, i32 5
  %6 = load %struct.hv** %gp_hv, align 8, !tbaa !3
  %tobool23 = icmp eq %struct.hv* %6, null
  br i1 %tobool23, label %if.end40, label %if.then24

if.then24:                                        ; preds = %land.lhs.true20
  %sv_flags = getelementptr inbounds %struct.sv* %5, i64 0, i32 2
  %7 = load i32* %sv_flags, align 4, !tbaa !0
  %and = and i32 %7, 65536
  %tobool25 = icmp eq i32 %and, 0
  br i1 %tobool25, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then24
  %sv_any26 = getelementptr inbounds %struct.sv* %5, i64 0, i32 0
  %8 = load i8** %sv_any26, align 8, !tbaa !3
  %xiv_iv = getelementptr inbounds i8* %8, i64 24
  %9 = bitcast i8* %xiv_iv to i64*
  %10 = load i64* %9, align 8, !tbaa !4
  br label %cond.end

cond.false:                                       ; preds = %if.then24
  %call27 = tail call i64 @Perl_sv_2iv(%struct.sv* %5) #4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %10, %cond.true ], [ %call27, %cond.false ]
  %11 = load i32* @PL_sub_generation, align 4, !tbaa !0
  %conv = zext i32 %11 to i64
  %cmp28 = icmp eq i64 %cond, %conv
  br i1 %cmp28, label %if.then30, label %if.else

if.then30:                                        ; preds = %cond.end
  %call31 = tail call %struct.sv** @Perl_hv_fetch(%struct.hv* %6, i8* %name, i32 %len, i32 0) #4
  %tobool32 = icmp eq %struct.sv** %call31, null
  br i1 %tobool32, label %if.end40, label %land.lhs.true33

land.lhs.true33:                                  ; preds = %if.then30
  %12 = load %struct.sv** %call31, align 8, !tbaa !3
  %cmp34 = icmp eq %struct.sv* %12, @PL_sv_undef
  br i1 %cmp34, label %if.end40, label %return

if.else:                                          ; preds = %cond.end
  tail call void @Perl_hv_clear(%struct.hv* %6) #4
  %13 = load i32* @PL_sub_generation, align 4, !tbaa !0
  %conv38 = zext i32 %13 to i64
  tail call void @Perl_sv_setiv(%struct.sv* %5, i64 %conv38) #4
  br label %if.end40

if.end40:                                         ; preds = %land.lhs.true33, %if.then30, %land.lhs.true20, %land.lhs.true17, %land.lhs.true15, %if.end12, %if.else
  %subgen.0 = phi %struct.sv* [ %5, %land.lhs.true33 ], [ %5, %if.then30 ], [ %5, %if.else ], [ %5, %land.lhs.true20 ], [ null, %land.lhs.true17 ], [ null, %land.lhs.true15 ], [ null, %if.end12 ]
  %hv.0 = phi %struct.hv* [ %6, %land.lhs.true33 ], [ %6, %if.then30 ], [ %6, %if.else ], [ null, %land.lhs.true20 ], [ null, %land.lhs.true17 ], [ null, %land.lhs.true15 ], [ null, %if.end12 ]
  %call41 = tail call %struct.sv** @Perl_hv_fetch(%struct.hv* %stash, i8* getelementptr inbounds ([4 x i8]* @.str54, i64 0, i64 0), i32 3, i32 0) #4
  %tobool42 = icmp eq %struct.sv** %call41, null
  br i1 %tobool42, label %return, label %land.lhs.true43

land.lhs.true43:                                  ; preds = %if.end40
  %14 = load %struct.sv** %call41, align 8
  %cmp44 = icmp eq %struct.sv* %14, @PL_sv_undef
  br i1 %cmp44, label %return, label %land.lhs.true46

land.lhs.true46:                                  ; preds = %land.lhs.true43
  %sv_any47 = bitcast %struct.sv* %14 to %struct.xpvgv**
  %15 = load %struct.xpvgv** %sv_any47, align 8, !tbaa !3
  %xgv_gp48 = getelementptr inbounds %struct.xpvgv* %15, i64 0, i32 7
  %16 = load %struct.gp** %xgv_gp48, align 8, !tbaa !3
  %gp_av = getelementptr inbounds %struct.gp* %16, i64 0, i32 4
  %17 = load %struct.av** %gp_av, align 8, !tbaa !3
  %tobool49 = icmp eq %struct.av* %17, null
  br i1 %tobool49, label %return, label %if.then50

if.then50:                                        ; preds = %land.lhs.true46
  %tobool51 = icmp ne %struct.hv* %hv.0, null
  %tobool51.not = xor i1 %tobool51, true
  %tobool52 = icmp eq %struct.sv* %subgen.0, null
  %or.cond182 = or i1 %tobool52, %tobool51.not
  br i1 %or.cond182, label %if.then53, label %if.end87

if.then53:                                        ; preds = %if.then50
  %call54 = tail call %struct.sv** @Perl_hv_fetch(%struct.hv* %stash, i8* getelementptr inbounds ([15 x i8]* @.str53, i64 0, i64 0), i32 14, i32 1) #4
  %18 = load %struct.sv** %call54, align 8
  %19 = bitcast %struct.sv* %18 to %struct.gv*
  %20 = getelementptr inbounds %struct.sv* %18, i64 0, i32 2
  %21 = load i32* %20, align 4, !tbaa !0
  %and56 = and i32 %21, 255
  %cmp57 = icmp eq i32 %and56, 13
  br i1 %cmp57, label %if.end60, label %if.then59

if.then59:                                        ; preds = %if.then53
  tail call void @Perl_gv_init(%struct.gv* %19, %struct.hv* %stash, i8* getelementptr inbounds ([15 x i8]* @.str53, i64 0, i64 0), i64 14, i32 1) #4
  br label %if.end60

if.end60:                                         ; preds = %if.then53, %if.then59
  br i1 %tobool51, label %if.end78, label %if.then62

if.then62:                                        ; preds = %if.end60
  %sv_any63 = bitcast %struct.sv* %18 to %struct.xpvgv**
  %22 = load %struct.xpvgv** %sv_any63, align 8, !tbaa !3
  %xgv_gp64 = getelementptr inbounds %struct.xpvgv* %22, i64 0, i32 7
  %23 = load %struct.gp** %xgv_gp64, align 8, !tbaa !3
  %gp_hv65 = getelementptr inbounds %struct.gp* %23, i64 0, i32 5
  %24 = load %struct.hv** %gp_hv65, align 8, !tbaa !3
  %tobool66 = icmp eq %struct.hv* %24, null
  br i1 %tobool66, label %cond.false71, label %if.end78

cond.false71:                                     ; preds = %if.then62
  %call72 = tail call %struct.gv* @Perl_gv_HVadd(%struct.gv* %19) #4
  %sv_any73 = getelementptr inbounds %struct.gv* %call72, i64 0, i32 0
  %25 = load %struct.xpvgv** %sv_any73, align 8, !tbaa !3
  %xgv_gp74 = getelementptr inbounds %struct.xpvgv* %25, i64 0, i32 7
  %26 = load %struct.gp** %xgv_gp74, align 8, !tbaa !3
  %gp_hv75 = getelementptr inbounds %struct.gp* %26, i64 0, i32 5
  %27 = load %struct.hv** %gp_hv75, align 8, !tbaa !3
  br label %if.end78

if.end78:                                         ; preds = %cond.false71, %if.then62, %if.end60
  %hv.1 = phi %struct.hv* [ %hv.0, %if.end60 ], [ %27, %cond.false71 ], [ %24, %if.then62 ]
  br i1 %tobool52, label %if.then80, label %if.end87

if.then80:                                        ; preds = %if.end78
  %28 = load i32* @PL_sub_generation, align 4, !tbaa !0
  %conv81 = zext i32 %28 to i64
  %call82 = tail call %struct.sv* @Perl_newSViv(i64 %conv81) #4
  %sv_any83 = bitcast %struct.sv* %18 to %struct.xpvgv**
  %29 = load %struct.xpvgv** %sv_any83, align 8, !tbaa !3
  %xgv_gp84 = getelementptr inbounds %struct.xpvgv* %29, i64 0, i32 7
  %30 = load %struct.gp** %xgv_gp84, align 8, !tbaa !3
  %gp_sv85 = getelementptr inbounds %struct.gp* %30, i64 0, i32 0
  store %struct.sv* %call82, %struct.sv** %gp_sv85, align 8, !tbaa !3
  br label %if.end87

if.end87:                                         ; preds = %if.then50, %if.end78, %if.then80
  %hv.2 = phi %struct.hv* [ %hv.1, %if.end78 ], [ %hv.1, %if.then80 ], [ %hv.0, %if.then50 ]
  %tobool88 = icmp eq %struct.hv* %hv.2, null
  br i1 %tobool88, label %return, label %if.then89

if.then89:                                        ; preds = %if.end87
  %sv_any91 = getelementptr inbounds %struct.av* %17, i64 0, i32 0
  %31 = load %struct.xpvav** %sv_any91, align 8, !tbaa !3
  %xav_fill = getelementptr inbounds %struct.xpvav* %31, i64 0, i32 1
  %32 = load i64* %xav_fill, align 8, !tbaa !4
  %add = add nsw i64 %32, 1
  %conv93 = trunc i64 %add to i32
  %tobool94184 = icmp eq i32 %conv93, 0
  br i1 %tobool94184, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %if.then89
  %xav_array = getelementptr inbounds %struct.xpvav* %31, i64 0, i32 0
  %33 = load i8** %xav_array, align 8, !tbaa !3
  %34 = bitcast i8* %33 to %struct.sv**
  %add128 = add nsw i32 %level, 1
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.cond.backedge
  %dec186.in = phi i32 [ %conv93, %while.body.lr.ph ], [ %dec186, %while.cond.backedge ]
  %svp90.0185 = phi %struct.sv** [ %34, %while.body.lr.ph ], [ %incdec.ptr, %while.cond.backedge ]
  %dec186 = add nsw i32 %dec186.in, -1
  %incdec.ptr = getelementptr inbounds %struct.sv** %svp90.0185, i64 1
  %35 = load %struct.sv** %svp90.0185, align 8, !tbaa !3
  %call96 = tail call %struct.hv* @Perl_gv_stashsv(%struct.sv* %35, i32 0) #4
  %tobool97 = icmp eq %struct.hv* %call96, null
  br i1 %tobool97, label %if.then98, label %if.end127

if.then98:                                        ; preds = %while.body
  %36 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings = getelementptr inbounds %struct.cop* %36, i64 0, i32 14
  %37 = load %struct.sv** %cop_warnings, align 8, !tbaa !3
  %cmp99 = icmp eq %struct.sv* %37, null
  br i1 %cmp99, label %lor.lhs.false115, label %land.lhs.true101

land.lhs.true101:                                 ; preds = %if.then98
  %38 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings102 = getelementptr inbounds %struct.cop* %38, i64 0, i32 14
  %39 = load %struct.sv** %cop_warnings102, align 8, !tbaa !3
  %cmp103 = icmp eq %struct.sv* %39, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp103, label %lor.lhs.false115, label %land.lhs.true105

land.lhs.true105:                                 ; preds = %land.lhs.true101
  %40 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings106 = getelementptr inbounds %struct.cop* %40, i64 0, i32 14
  %41 = load %struct.sv** %cop_warnings106, align 8, !tbaa !3
  %cmp107 = icmp eq %struct.sv* %41, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp107, label %if.then123, label %lor.lhs.false109

lor.lhs.false109:                                 ; preds = %land.lhs.true105
  %42 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings110 = getelementptr inbounds %struct.cop* %42, i64 0, i32 14
  %43 = load %struct.sv** %cop_warnings110, align 8, !tbaa !3
  %sv_any111 = getelementptr inbounds %struct.sv* %43, i64 0, i32 0
  %44 = load i8** %sv_any111, align 8, !tbaa !3
  %xpv_pv = bitcast i8* %44 to i8**
  %45 = load i8** %xpv_pv, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds i8* %45, i64 3
  %46 = load i8* %arrayidx, align 1, !tbaa !1
  %and113 = and i8 %46, 1
  %tobool114 = icmp eq i8 %and113, 0
  br i1 %tobool114, label %lor.lhs.false115, label %if.then123

lor.lhs.false115:                                 ; preds = %lor.lhs.false109, %land.lhs.true101, %if.then98
  %47 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings116 = getelementptr inbounds %struct.cop* %47, i64 0, i32 14
  %48 = load %struct.sv** %cop_warnings116, align 8, !tbaa !3
  %cmp117 = icmp eq %struct.sv* %48, null
  br i1 %cmp117, label %land.lhs.true119, label %while.cond.backedge

land.lhs.true119:                                 ; preds = %lor.lhs.false115
  %49 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and121 = and i8 %49, 1
  %tobool122 = icmp eq i8 %and121, 0
  br i1 %tobool122, label %while.cond.backedge, label %if.then123

if.then123:                                       ; preds = %lor.lhs.false109, %land.lhs.true119, %land.lhs.true105
  %50 = load %struct.xpvhv** %sv_any, align 8, !tbaa !3
  %xhv_name125 = getelementptr inbounds %struct.xpvhv* %50, i64 0, i32 10
  %51 = load i8** %xhv_name125, align 8, !tbaa !3
  tail call void (i32, i8*, ...)* @Perl_warner(i32 28, i8* getelementptr inbounds ([37 x i8]* @.str55, i64 0, i64 0), %struct.sv* %35, i8* %51) #4
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.then123, %lor.lhs.false115, %if.end127, %land.lhs.true119
  %tobool94 = icmp eq i32 %dec186, 0
  br i1 %tobool94, label %while.end, label %while.body

if.end127:                                        ; preds = %while.body
  %call129 = tail call fastcc %struct.sv* @S_isa_lookup(%struct.hv* %call96, i8* %name, %struct.hv* %name_stash, i32 %len, i32 %add128) #5
  %cmp130 = icmp eq %struct.sv* %call129, @PL_sv_yes
  br i1 %cmp130, label %if.then132, label %while.cond.backedge

if.then132:                                       ; preds = %if.end127
  %call133 = tail call %struct.sv** @Perl_hv_store(%struct.hv* %hv.2, i8* %name, i32 %len, %struct.sv* @PL_sv_yes, i32 0) #4
  br label %return

while.end:                                        ; preds = %while.cond.backedge, %if.then89
  %call135 = tail call %struct.sv** @Perl_hv_store(%struct.hv* %hv.2, i8* %name, i32 %len, %struct.sv* @PL_sv_no, i32 0) #4
  br label %return

return:                                           ; preds = %while.end, %if.end40, %land.lhs.true43, %land.lhs.true46, %if.end87, %land.lhs.true33, %if.end3, %if.end, %entry, %if.then132
  %retval.0 = phi %struct.sv* [ @PL_sv_yes, %if.then132 ], [ @PL_sv_yes, %entry ], [ @PL_sv_yes, %if.end ], [ @PL_sv_yes, %if.end3 ], [ %12, %land.lhs.true33 ], [ @PL_sv_no, %if.end87 ], [ @PL_sv_no, %land.lhs.true46 ], [ @PL_sv_no, %land.lhs.true43 ], [ @PL_sv_no, %if.end40 ], [ @PL_sv_no, %while.end ]
  ret %struct.sv* %retval.0
}
