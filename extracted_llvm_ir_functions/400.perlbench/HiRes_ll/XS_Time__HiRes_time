define void @XS_Time__HiRes_time(%struct.cv* nocapture %cv) #0 {
entry:
  %Tp = alloca %struct.timeval, align 8
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !3
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !3
  %2 = load i32** @PL_markstack_ptr, align 8, !tbaa !3
  %incdec.ptr = getelementptr inbounds i32* %2, i64 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !3
  %3 = load i32* %2, align 4, !tbaa !4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %idx.ext
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nsw i64 %idx.ext, 32
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %4 = and i64 %sub.ptr.sub3, 34359738360
  %cmp = icmp eq i64 %4, 0
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([27 x i8]* @.str9, i64 0, i64 0)) #4
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %5 = load %struct.op** @PL_op, align 8, !tbaa !3
  %op_private = getelementptr inbounds %struct.op* %5, i64 0, i32 7
  %6 = load i8* %op_private, align 1, !tbaa !1
  %and = and i8 %6, 32
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end
  %op_targ = getelementptr inbounds %struct.op* %5, i64 0, i32 3
  %7 = load i64* %op_targ, align 8, !tbaa !0
  %8 = load %struct.sv*** @PL_curpad, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds %struct.sv** %8, i64 %7
  %9 = load %struct.sv** %arrayidx, align 8, !tbaa !3
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %call = call %struct.sv* @Perl_sv_newmortal() #4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.sv* [ %9, %cond.true ], [ %call, %cond.false ]
  %call8 = call i32 @gettimeofday(%struct.timeval* %Tp, %struct.timezone* null) #4
  %tv_sec = getelementptr inbounds %struct.timeval* %Tp, i64 0, i32 0
  %10 = load i64* %tv_sec, align 8, !tbaa !0
  %conv9 = sitofp i64 %10 to double
  %tv_usec = getelementptr inbounds %struct.timeval* %Tp, i64 0, i32 1
  %11 = load i64* %tv_usec, align 8, !tbaa !0
  %conv10 = sitofp i64 %11 to double
  %div = fdiv double %conv10, 1.000000e+06
  %add11 = fadd double %conv9, %div
  %12 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !3
  %sext = add i64 %add.ptr.idx, 4294967296
  %idx.ext12 = ashr exact i64 %sext, 32
  call void @Perl_sv_setnv(%struct.sv* %cond, double %add11) #4
  %sv_flags = getelementptr inbounds %struct.sv* %cond, i64 0, i32 2
  %13 = load i32* %sv_flags, align 4, !tbaa !4
  %and15 = and i32 %13, 16384
  %tobool16 = icmp eq i32 %and15, 0
  br i1 %tobool16, label %if.end19, label %if.then17

if.then17:                                        ; preds = %cond.end
  %call18 = call i32 @Perl_mg_set(%struct.sv* %cond) #4
  br label %if.end19

if.end19:                                         ; preds = %cond.end, %if.then17
  %incdec.ptr20 = getelementptr inbounds %struct.sv** %12, i64 %idx.ext12
  store %struct.sv* %cond, %struct.sv** %incdec.ptr20, align 8, !tbaa !3
  %14 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !3
  %add.ptr22 = getelementptr inbounds %struct.sv** %14, i64 %idx.ext12
  store %struct.sv** %add.ptr22, %struct.sv*** @PL_stack_sp, align 8, !tbaa !3
  ret void
}
