define i64 @PerlIOCrlf_unread(%struct._PerlIO** %f, i8* %vbuf, i64 %count) #1 {
entry:
  %0 = load %struct._PerlIO** %f, align 8, !tbaa !3
  %nl = getelementptr inbounds %struct._PerlIO* %0, i64 3
  %1 = bitcast %struct._PerlIO* %nl to i8**
  %2 = load i8** %1, align 8, !tbaa !3
  %tobool = icmp eq i8* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8 13, i8* %2, align 1, !tbaa !1
  %3 = getelementptr inbounds %struct._PerlIO* %nl, i64 0, i32 0
  store %struct._PerlIO* null, %struct._PerlIO** %3, align 8, !tbaa !3
  %.pre = load %struct._PerlIO** %f, align 8, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %4 = phi %struct._PerlIO* [ %0, %entry ], [ %.pre, %if.then ]
  %flags = getelementptr inbounds %struct._PerlIO* %4, i64 0, i32 2
  %5 = load i32* %flags, align 4, !tbaa !0
  %and = and i32 %5, 16384
  %tobool3 = icmp eq i32 %and, 0
  br i1 %tobool3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.end
  %call = tail call i64 @PerlIOBuf_unread(%struct._PerlIO** %f, i8* %vbuf, i64 %count) #10
  br label %return

if.else:                                          ; preds = %if.end
  %add.ptr = getelementptr inbounds i8* %vbuf, i64 %count
  %and6 = and i32 %5, 131072
  %tobool7 = icmp eq i32 %and6, 0
  br i1 %tobool7, label %if.end10, label %if.then8

if.then8:                                         ; preds = %if.else
  %call9 = tail call i32 @Perl_PerlIO_flush(%struct._PerlIO** %f) #10
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then8
  %buf11 = getelementptr inbounds %struct._PerlIO* %4, i64 1
  %6 = bitcast %struct._PerlIO* %buf11 to i8**
  %7 = load i8** %6, align 8, !tbaa !3
  %tobool12 = icmp eq i8* %7, null
  br i1 %tobool12, label %if.end15, label %if.then18

if.end15:                                         ; preds = %if.end10
  %call14 = tail call i8* @Perl_PerlIO_get_base(%struct._PerlIO** %f) #10
  %.pr = load i8** %6, align 8, !tbaa !3
  %tobool17 = icmp eq i8* %.pr, null
  br i1 %tobool17, label %return, label %if.then18

if.then18:                                        ; preds = %if.end15, %if.end10
  %8 = phi i8* [ %7, %if.end10 ], [ %.pr, %if.end15 ]
  %9 = load %struct._PerlIO** %f, align 8, !tbaa !3
  %flags19 = getelementptr inbounds %struct._PerlIO* %9, i64 0, i32 2
  %10 = load i32* %flags19, align 4, !tbaa !0
  %and20 = and i32 %10, 262144
  %tobool21 = icmp eq i32 %and20, 0
  br i1 %tobool21, label %if.then22, label %if.then18.while.cond.preheader_crit_edge

if.then18.while.cond.preheader_crit_edge:         ; preds = %if.then18
  %ptr28.pre = getelementptr inbounds %struct._PerlIO* %4, i64 1, i32 2
  %.pre95 = bitcast i32* %ptr28.pre to i8**
  br label %while.cond.preheader

if.then22:                                        ; preds = %if.then18
  %bufsiz = getelementptr inbounds %struct._PerlIO* %4, i64 2, i32 1
  %11 = bitcast %struct._PerlIO_funcs** %bufsiz to i64*
  %12 = load i64* %11, align 8, !tbaa !4
  %add.ptr24 = getelementptr inbounds i8* %8, i64 %12
  %ptr = getelementptr inbounds %struct._PerlIO* %4, i64 1, i32 2
  %13 = bitcast i32* %ptr to i8**
  store i8* %add.ptr24, i8** %13, align 8, !tbaa !3
  %end = getelementptr inbounds %struct._PerlIO* %4, i64 1, i32 1
  %add.ptr24.c = bitcast i8* %add.ptr24 to %struct._PerlIO_funcs*
  store %struct._PerlIO_funcs* %add.ptr24.c, %struct._PerlIO_funcs** %end, align 8, !tbaa !3
  %14 = load %struct._PerlIO** %f, align 8, !tbaa !3
  %flags25 = getelementptr inbounds %struct._PerlIO* %14, i64 0, i32 2
  %15 = load i32* %flags25, align 4, !tbaa !0
  %or = or i32 %15, 262144
  store i32 %or, i32* %flags25, align 4, !tbaa !0
  %posn = getelementptr inbounds %struct._PerlIO* %4, i64 2
  %16 = bitcast %struct._PerlIO* %posn to i64*
  %17 = load i64* %16, align 8, !tbaa !4
  %sub = sub i64 %17, %12
  %18 = getelementptr inbounds %struct._PerlIO* %posn, i64 0, i32 0
  %sub.c = inttoptr i64 %sub to %struct._PerlIO*
  store %struct._PerlIO* %sub.c, %struct._PerlIO** %18, align 8, !tbaa !4
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.then18.while.cond.preheader_crit_edge, %if.then22
  %.pre-phi = phi i8** [ %.pre95, %if.then18.while.cond.preheader_crit_edge ], [ %13, %if.then22 ]
  %cmp89 = icmp eq i64 %count, 0
  br i1 %cmp89, label %return, label %land.rhs

land.rhs:                                         ; preds = %while.cond.preheader, %while.cond.backedge.land.rhs_crit_edge
  %19 = phi i8* [ %.pre94, %while.cond.backedge.land.rhs_crit_edge ], [ %8, %while.cond.preheader ]
  %unread.092 = phi i64 [ %unread.0.be, %while.cond.backedge.land.rhs_crit_edge ], [ 0, %while.cond.preheader ]
  %count.addr.091 = phi i64 [ %count.addr.0.be, %while.cond.backedge.land.rhs_crit_edge ], [ %count, %while.cond.preheader ]
  %buf.090 = phi i8* [ %incdec.ptr, %while.cond.backedge.land.rhs_crit_edge ], [ %add.ptr, %while.cond.preheader ]
  %20 = load i8** %.pre-phi, align 8, !tbaa !3
  %cmp30 = icmp ugt i8* %20, %19
  br i1 %cmp30, label %while.body, label %return

while.body:                                       ; preds = %land.rhs
  %incdec.ptr = getelementptr inbounds i8* %buf.090, i64 -1
  %21 = load i8* %incdec.ptr, align 1, !tbaa !1
  %cmp31 = icmp eq i8 %21, 10
  br i1 %cmp31, label %if.then33, label %if.else47

if.then33:                                        ; preds = %while.body
  %add.ptr35 = getelementptr inbounds i8* %20, i64 -2
  %cmp37 = icmp ult i8* %add.ptr35, %19
  br i1 %cmp37, label %return, label %if.then39

if.then39:                                        ; preds = %if.then33
  %incdec.ptr41 = getelementptr inbounds i8* %20, i64 -1
  store i8* %incdec.ptr41, i8** %.pre-phi, align 8, !tbaa !3
  store i8 10, i8* %incdec.ptr41, align 1, !tbaa !1
  %22 = load i8** %.pre-phi, align 8, !tbaa !3
  %incdec.ptr43 = getelementptr inbounds i8* %22, i64 -1
  store i8* %incdec.ptr43, i8** %.pre-phi, align 8, !tbaa !3
  store i8 13, i8* %incdec.ptr43, align 1, !tbaa !1
  br label %while.cond.backedge

if.else47:                                        ; preds = %while.body
  %incdec.ptr50 = getelementptr inbounds i8* %20, i64 -1
  store i8* %incdec.ptr50, i8** %.pre-phi, align 8, !tbaa !3
  store i8 %21, i8* %incdec.ptr50, align 1, !tbaa !1
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.else47, %if.then39
  %unread.0.be = add nsw i64 %unread.092, 1
  %count.addr.0.be = add i64 %count.addr.091, -1
  %cmp = icmp eq i64 %count.addr.0.be, 0
  br i1 %cmp, label %return, label %while.cond.backedge.land.rhs_crit_edge

while.cond.backedge.land.rhs_crit_edge:           ; preds = %while.cond.backedge
  %.pre94 = load i8** %6, align 8, !tbaa !3
  br label %land.rhs

return:                                           ; preds = %while.cond.preheader, %land.rhs, %if.then33, %while.cond.backedge, %if.end15, %if.then4
  %retval.0 = phi i64 [ %call, %if.then4 ], [ 0, %if.end15 ], [ 0, %while.cond.preheader ], [ %unread.092, %land.rhs ], [ %unread.092, %if.then33 ], [ %unread.0.be, %while.cond.backedge ]
  ret i64 %retval.0
}
