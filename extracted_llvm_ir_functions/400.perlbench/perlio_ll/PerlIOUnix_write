define i64 @PerlIOUnix_write(%struct._PerlIO** nocapture %f, i8* nocapture %vbuf, i64 %count) #1 {
entry:
  %0 = load %struct._PerlIO** %f, align 8, !tbaa !3
  %fd1 = getelementptr inbounds %struct._PerlIO* %0, i64 1
  %1 = bitcast %struct._PerlIO* %fd1 to i32*
  %2 = load i32* %1, align 4, !tbaa !0
  %call19 = tail call i64 @write(i32 %2, i8* %vbuf, i64 %count) #9
  %cmp20 = icmp sgt i64 %call19, -1
  br i1 %cmp20, label %if.end9, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry, %while.body.backedge
  %call21 = phi i64 [ %call, %while.body.backedge ], [ %call19, %entry ]
  %call2 = tail call i32* @__errno_location() #9
  %3 = load i32* %call2, align 4, !tbaa !0
  %cmp3 = icmp eq i32 %3, 4
  br i1 %cmp3, label %if.end10, label %if.then

if.then:                                          ; preds = %lor.lhs.false
  %cmp4 = icmp slt i64 %call21, 0
  br i1 %cmp4, label %if.then5, label %if.end9

if.then5:                                         ; preds = %if.then
  %call6 = tail call i32* @__errno_location() #9
  %4 = load i32* %call6, align 4, !tbaa !0
  %cmp7 = icmp eq i32 %4, 11
  br i1 %cmp7, label %if.end9, label %if.then8

if.then8:                                         ; preds = %if.then5
  %5 = load %struct._PerlIO** %f, align 8, !tbaa !3
  %flags = getelementptr inbounds %struct._PerlIO* %5, i64 0, i32 2
  %6 = load i32* %flags, align 4, !tbaa !0
  %or = or i32 %6, 2048
  store i32 %or, i32* %flags, align 4, !tbaa !0
  br label %if.end9

if.end9:                                          ; preds = %entry, %while.body.backedge, %if.then5, %if.then8, %if.then
  %call18 = phi i64 [ %call21, %if.then5 ], [ %call21, %if.then8 ], [ %call21, %if.then ], [ %call19, %entry ], [ %call, %while.body.backedge ]
  ret i64 %call18

if.end10:                                         ; preds = %lor.lhs.false
  %7 = load i32* @PL_sig_pending, align 4, !tbaa !0
  %tobool = icmp eq i32 %7, 0
  br i1 %tobool, label %while.body.backedge, label %if.then11

if.then11:                                        ; preds = %if.end10
  tail call void @Perl_despatch_signals() #9
  br label %while.body.backedge

while.body.backedge:                              ; preds = %if.then11, %if.end10
  %call = tail call i64 @write(i32 %2, i8* %vbuf, i64 %count) #9
  %cmp = icmp sgt i64 %call, -1
  br i1 %cmp, label %if.end9, label %lor.lhs.false
}
