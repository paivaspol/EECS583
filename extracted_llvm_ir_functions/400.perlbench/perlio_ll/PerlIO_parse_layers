define i32 @PerlIO_parse_layers(%struct.PerlIO_list_s* nocapture %av, i8* %names) #1 {
entry:
  %tobool = icmp eq i8* %names, null
  br i1 %tobool, label %return, label %while.cond.preheader

while.cond.preheader:                             ; preds = %entry
  %0 = load i8* %names, align 1, !tbaa !1
  %tobool1312 = icmp eq i8 %0, 0
  br i1 %tobool1312, label %return, label %while.cond2

while.cond2:                                      ; preds = %while.cond.backedge, %while.cond.preheader, %while.body22
  %1 = phi i8 [ %.pre, %while.body22 ], [ %54, %while.cond.backedge ], [ %0, %while.cond.preheader ]
  %s.1 = phi i8* [ %incdec.ptr, %while.body22 ], [ %s.0.be, %while.cond.backedge ], [ %names, %while.cond.preheader ]
  switch i8 %1, label %if.then24 [
    i8 32, label %while.body22
    i8 9, label %while.body22
    i8 10, label %while.body22
    i8 13, label %while.body22
    i8 12, label %while.body22
    i8 58, label %while.body22
    i8 0, label %while.cond.backedge
  ]

while.body22:                                     ; preds = %while.cond2, %while.cond2, %while.cond2, %while.cond2, %while.cond2, %while.cond2
  %incdec.ptr = getelementptr inbounds i8* %s.1, i64 1
  %.pre = load i8* %incdec.ptr, align 1, !tbaa !1
  br label %while.cond2

if.then24:                                        ; preds = %while.cond2
  %.off = add i8 %1, -65
  %2 = icmp ult i8 %.off, 26
  br i1 %2, label %do.body, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %if.then24
  %.off268 = add i8 %1, -97
  %3 = icmp ult i8 %.off268, 26
  %cmp41 = icmp eq i8 %1, 95
  %or.cond266 = or i1 %3, %cmp41
  br i1 %or.cond266, label %do.body, label %if.then43

if.then43:                                        ; preds = %lor.lhs.false31
  %cmp45 = icmp eq i8 %1, 39
  %4 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings = getelementptr inbounds %struct.cop* %4, i64 0, i32 14
  %5 = load %struct.sv** %cop_warnings, align 8, !tbaa !3
  %cmp48 = icmp eq %struct.sv* %5, null
  br i1 %cmp48, label %lor.lhs.false62, label %land.lhs.true50

land.lhs.true50:                                  ; preds = %if.then43
  %6 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings51 = getelementptr inbounds %struct.cop* %6, i64 0, i32 14
  %7 = load %struct.sv** %cop_warnings51, align 8, !tbaa !3
  %cmp52 = icmp eq %struct.sv* %7, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp52, label %lor.lhs.false62, label %land.lhs.true54

land.lhs.true54:                                  ; preds = %land.lhs.true50
  %8 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings55 = getelementptr inbounds %struct.cop* %8, i64 0, i32 14
  %9 = load %struct.sv** %cop_warnings55, align 8, !tbaa !3
  %cmp56 = icmp eq %struct.sv* %9, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp56, label %if.then70, label %lor.lhs.false58

lor.lhs.false58:                                  ; preds = %land.lhs.true54
  %10 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings59 = getelementptr inbounds %struct.cop* %10, i64 0, i32 14
  %11 = load %struct.sv** %cop_warnings59, align 8, !tbaa !3
  %sv_any = getelementptr inbounds %struct.sv* %11, i64 0, i32 0
  %12 = load i8** %sv_any, align 8, !tbaa !3
  %xpv_pv = bitcast i8* %12 to i8**
  %13 = load i8** %xpv_pv, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds i8* %13, i64 2
  %14 = load i8* %arrayidx, align 1, !tbaa !1
  %and = and i8 %14, 1
  %tobool61 = icmp eq i8 %and, 0
  br i1 %tobool61, label %lor.lhs.false62, label %if.then70

lor.lhs.false62:                                  ; preds = %lor.lhs.false58, %land.lhs.true50, %if.then43
  %15 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings63 = getelementptr inbounds %struct.cop* %15, i64 0, i32 14
  %16 = load %struct.sv** %cop_warnings63, align 8, !tbaa !3
  %cmp64 = icmp eq %struct.sv* %16, null
  br i1 %cmp64, label %land.lhs.true66, label %if.end

land.lhs.true66:                                  ; preds = %lor.lhs.false62
  %17 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and68 = and i8 %17, 1
  %tobool69 = icmp eq i8 %and68, 0
  br i1 %tobool69, label %if.end, label %if.then70

if.then70:                                        ; preds = %lor.lhs.false58, %land.lhs.true66, %land.lhs.true54
  %conv71 = select i1 %cmp45, i32 34, i32 39
  %18 = load i8* %s.1, align 1, !tbaa !1
  %conv72 = sext i8 %18 to i32
  tail call void (i32, i8*, ...)* @Perl_warner(i32 8, i8* getelementptr inbounds ([68 x i8]* @.str12, i64 0, i64 0), i32 %conv71, i32 %conv72, i32 %conv71, i8* %s.1) #9
  br label %if.end

if.end:                                           ; preds = %land.lhs.true66, %if.then70, %lor.lhs.false62
  %call = tail call i32* @__errno_location() #9
  store i32 22, i32* %call, align 4, !tbaa !0
  br label %return

do.body:                                          ; preds = %lor.lhs.false91, %do.body, %lor.lhs.false31, %if.then24
  %e.0 = phi i8* [ %s.1, %if.then24 ], [ %s.1, %lor.lhs.false31 ], [ %incdec.ptr75, %do.body ], [ %incdec.ptr75, %lor.lhs.false91 ]
  %incdec.ptr75 = getelementptr inbounds i8* %e.0, i64 1
  %19 = load i8* %incdec.ptr75, align 1, !tbaa !1
  %.off269 = add i8 %19, -65
  %20 = icmp ult i8 %.off269, 26
  %.off270 = add i8 %19, -97
  %21 = icmp ult i8 %.off270, 26
  %or.cond = or i1 %20, %21
  br i1 %or.cond, label %do.body, label %lor.lhs.false91

lor.lhs.false91:                                  ; preds = %do.body
  %.off271 = add i8 %19, -48
  %22 = icmp ult i8 %.off271, 10
  %cmp101 = icmp eq i8 %19, 95
  %or.cond267 = or i1 %22, %cmp101
  br i1 %or.cond267, label %do.body, label %do.end

do.end:                                           ; preds = %lor.lhs.false91
  %sub.ptr.lhs.cast = ptrtoint i8* %incdec.ptr75 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %s.1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp105 = icmp eq i8 %19, 40
  br i1 %cmp105, label %if.then107, label %if.end163

if.then107:                                       ; preds = %do.end
  %incdec.ptr108 = getelementptr inbounds i8* %e.0, i64 2
  %sub.ptr.rhs.cast118 = ptrtoint i8* %incdec.ptr108 to i64
  br label %while.body111.lr.ph

while.body111.lr.ph:                              ; preds = %sw.bb, %if.then107, %while.cond109.outer276.backedge
  %nesting.0.ph278290 = phi i32 [ %inc, %while.cond109.outer276.backedge ], [ 1, %if.then107 ], [ %dec, %sw.bb ]
  %e.1.ph277289 = phi i8* [ %incdec.ptr112, %while.cond109.outer276.backedge ], [ %incdec.ptr108, %if.then107 ], [ %incdec.ptr112, %sw.bb ]
  br label %while.body111

while.body111:                                    ; preds = %sw.bb122, %while.body111, %while.body111.lr.ph
  %e.1284 = phi i8* [ %e.1.ph277289, %while.body111.lr.ph ], [ %incdec.ptr112, %while.body111 ], [ %incdec.ptr123, %sw.bb122 ]
  %incdec.ptr112 = getelementptr inbounds i8* %e.1284, i64 1
  %23 = load i8* %e.1284, align 1, !tbaa !1
  %conv113 = sext i8 %23 to i32
  switch i32 %conv113, label %while.body111 [
    i32 41, label %sw.bb
    i32 40, label %while.cond109.outer276.backedge
    i32 92, label %sw.bb122
    i32 0, label %sw.bb127
  ]

sw.bb:                                            ; preds = %while.body111
  %dec = add nsw i32 %nesting.0.ph278290, -1
  %cmp114 = icmp eq i32 %dec, 0
  br i1 %cmp114, label %if.end163.loopexit.loopexit.loopexit, label %while.body111.lr.ph

while.cond109.outer276.backedge:                  ; preds = %while.body111
  %inc = add nsw i32 %nesting.0.ph278290, 1
  %tobool110 = icmp eq i32 %inc, 0
  br i1 %tobool110, label %if.end163, label %while.body111.lr.ph

sw.bb122:                                         ; preds = %while.body111
  %incdec.ptr123 = getelementptr inbounds i8* %e.1284, i64 2
  %24 = load i8* %incdec.ptr112, align 1, !tbaa !1
  %tobool124 = icmp eq i8 %24, 0
  br i1 %tobool124, label %sw.bb127, label %while.body111

sw.bb127:                                         ; preds = %sw.bb122, %while.body111
  %e.2 = phi i8* [ %incdec.ptr112, %while.body111 ], [ %incdec.ptr123, %sw.bb122 ]
  %incdec.ptr128 = getelementptr inbounds i8* %e.2, i64 -1
  %25 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings129 = getelementptr inbounds %struct.cop* %25, i64 0, i32 14
  %26 = load %struct.sv** %cop_warnings129, align 8, !tbaa !3
  %cmp130 = icmp eq %struct.sv* %26, null
  br i1 %cmp130, label %lor.lhs.false148, label %land.lhs.true132

land.lhs.true132:                                 ; preds = %sw.bb127
  %27 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings133 = getelementptr inbounds %struct.cop* %27, i64 0, i32 14
  %28 = load %struct.sv** %cop_warnings133, align 8, !tbaa !3
  %cmp134 = icmp eq %struct.sv* %28, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp134, label %lor.lhs.false148, label %land.lhs.true136

land.lhs.true136:                                 ; preds = %land.lhs.true132
  %29 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings137 = getelementptr inbounds %struct.cop* %29, i64 0, i32 14
  %30 = load %struct.sv** %cop_warnings137, align 8, !tbaa !3
  %cmp138 = icmp eq %struct.sv* %30, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp138, label %if.then156, label %lor.lhs.false140

lor.lhs.false140:                                 ; preds = %land.lhs.true136
  %31 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings141 = getelementptr inbounds %struct.cop* %31, i64 0, i32 14
  %32 = load %struct.sv** %cop_warnings141, align 8, !tbaa !3
  %sv_any142 = getelementptr inbounds %struct.sv* %32, i64 0, i32 0
  %33 = load i8** %sv_any142, align 8, !tbaa !3
  %xpv_pv143 = bitcast i8* %33 to i8**
  %34 = load i8** %xpv_pv143, align 8, !tbaa !3
  %arrayidx144 = getelementptr inbounds i8* %34, i64 2
  %35 = load i8* %arrayidx144, align 1, !tbaa !1
  %and146 = and i8 %35, 1
  %tobool147 = icmp eq i8 %and146, 0
  br i1 %tobool147, label %lor.lhs.false148, label %if.then156

lor.lhs.false148:                                 ; preds = %lor.lhs.false140, %land.lhs.true132, %sw.bb127
  %36 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings149 = getelementptr inbounds %struct.cop* %36, i64 0, i32 14
  %37 = load %struct.sv** %cop_warnings149, align 8, !tbaa !3
  %cmp150 = icmp eq %struct.sv* %37, null
  br i1 %cmp150, label %land.lhs.true152, label %return

land.lhs.true152:                                 ; preds = %lor.lhs.false148
  %38 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and154 = and i8 %38, 1
  %tobool155 = icmp eq i8 %and154, 0
  br i1 %tobool155, label %return, label %if.then156

if.then156:                                       ; preds = %lor.lhs.false140, %land.lhs.true152, %land.lhs.true136
  %sub.ptr.lhs.cast157 = ptrtoint i8* %incdec.ptr128 to i64
  %sub.ptr.sub159 = sub i64 %sub.ptr.lhs.cast157, %sub.ptr.rhs.cast
  %conv160 = trunc i64 %sub.ptr.sub159 to i32
  tail call void (i32, i8*, ...)* @Perl_warner(i32 8, i8* getelementptr inbounds ([49 x i8]* @.str13, i64 0, i64 0), i32 %conv160, i8* %s.1) #9
  br label %return

if.end163.loopexit.loopexit.loopexit:             ; preds = %sw.bb
  %sub.ptr.lhs.cast117 = ptrtoint i8* %e.1284 to i64
  %sub.ptr.sub119 = sub i64 %sub.ptr.lhs.cast117, %sub.ptr.rhs.cast118
  br label %if.end163

if.end163:                                        ; preds = %while.cond109.outer276.backedge, %if.end163.loopexit.loopexit.loopexit, %do.end
  %e.3 = phi i8* [ %incdec.ptr75, %do.end ], [ %incdec.ptr112, %if.end163.loopexit.loopexit.loopexit ], [ %incdec.ptr112, %while.cond109.outer276.backedge ]
  %as.0 = phi i8* [ null, %do.end ], [ %incdec.ptr108, %if.end163.loopexit.loopexit.loopexit ], [ %incdec.ptr108, %while.cond109.outer276.backedge ]
  %alen.1 = phi i64 [ 0, %do.end ], [ %sub.ptr.sub119, %if.end163.loopexit.loopexit.loopexit ], [ 0, %while.cond109.outer276.backedge ]
  %cmp164 = icmp ugt i8* %e.3, %s.1
  br i1 %cmp164, label %if.then166, label %while.cond.backedge

if.then166:                                       ; preds = %if.end163
  %39 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings167 = getelementptr inbounds %struct.cop* %39, i64 0, i32 14
  %40 = load %struct.sv** %cop_warnings167, align 8, !tbaa !3
  %cmp168 = icmp eq %struct.sv* %40, null
  br i1 %cmp168, label %lor.rhs186, label %land.lhs.true170

land.lhs.true170:                                 ; preds = %if.then166
  %41 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings171 = getelementptr inbounds %struct.cop* %41, i64 0, i32 14
  %42 = load %struct.sv** %cop_warnings171, align 8, !tbaa !3
  %cmp172 = icmp eq %struct.sv* %42, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp172, label %lor.rhs186, label %land.lhs.true174

land.lhs.true174:                                 ; preds = %land.lhs.true170
  %43 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings175 = getelementptr inbounds %struct.cop* %43, i64 0, i32 14
  %44 = load %struct.sv** %cop_warnings175, align 8, !tbaa !3
  %cmp176 = icmp eq %struct.sv* %44, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp176, label %lor.end193, label %lor.lhs.false178

lor.lhs.false178:                                 ; preds = %land.lhs.true174
  %45 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings179 = getelementptr inbounds %struct.cop* %45, i64 0, i32 14
  %46 = load %struct.sv** %cop_warnings179, align 8, !tbaa !3
  %sv_any180 = getelementptr inbounds %struct.sv* %46, i64 0, i32 0
  %47 = load i8** %sv_any180, align 8, !tbaa !3
  %xpv_pv181 = bitcast i8* %47 to i8**
  %48 = load i8** %xpv_pv181, align 8, !tbaa !3
  %arrayidx182 = getelementptr inbounds i8* %48, i64 2
  %49 = load i8* %arrayidx182, align 1, !tbaa !1
  %and184 = and i8 %49, 1
  %tobool185 = icmp eq i8 %and184, 0
  br i1 %tobool185, label %lor.rhs186, label %lor.end193

lor.rhs186:                                       ; preds = %lor.lhs.false178, %land.lhs.true170, %if.then166
  %50 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings187 = getelementptr inbounds %struct.cop* %50, i64 0, i32 14
  %51 = load %struct.sv** %cop_warnings187, align 8, !tbaa !3
  %cmp188 = icmp eq %struct.sv* %51, null
  br i1 %cmp188, label %land.rhs, label %lor.end193

land.rhs:                                         ; preds = %lor.rhs186
  %52 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and191 = and i8 %52, 1
  %tobool192 = icmp ne i8 %and191, 0
  br label %lor.end193

lor.end193:                                       ; preds = %lor.lhs.false178, %lor.rhs186, %land.rhs, %land.lhs.true174
  %53 = phi i1 [ true, %lor.lhs.false178 ], [ true, %land.lhs.true174 ], [ false, %lor.rhs186 ], [ %tobool192, %land.rhs ]
  %call195 = tail call %struct._PerlIO_funcs* @PerlIO_find_layer(i8* %s.1, i64 %sub.ptr.sub, i32 1) #10
  %tobool196 = icmp eq %struct._PerlIO_funcs* %call195, null
  br i1 %tobool196, label %if.else, label %if.then197

if.then197:                                       ; preds = %lor.end193
  %tobool198 = icmp eq i8* %as.0, null
  br i1 %tobool198, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.then197
  %call199 = tail call %struct.sv* @Perl_newSVpvn(i8* %as.0, i64 %alen.1) #9
  br label %cond.end

cond.end:                                         ; preds = %if.then197, %cond.true
  %cond200 = phi %struct.sv* [ %call199, %cond.true ], [ @PL_sv_undef, %if.then197 ]
  tail call void @PerlIO_list_push(%struct.PerlIO_list_s* %av, %struct._PerlIO_funcs* %call195, %struct.sv* %cond200) #10
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.end163, %while.cond2, %cond.end
  %s.0.be = phi i8* [ %e.3, %cond.end ], [ %s.1, %while.cond2 ], [ %e.3, %if.end163 ]
  %54 = load i8* %s.0.be, align 1, !tbaa !1
  %tobool1 = icmp eq i8 %54, 0
  br i1 %tobool1, label %return, label %while.cond2

if.else:                                          ; preds = %lor.end193
  br i1 %53, label %if.then202, label %return

if.then202:                                       ; preds = %if.else
  %conv203 = trunc i64 %sub.ptr.sub to i32
  tail call void (i32, i8*, ...)* @Perl_warner(i32 8, i8* getelementptr inbounds ([28 x i8]* @.str14, i64 0, i64 0), i32 %conv203, i8* %s.1) #9
  br label %return

return:                                           ; preds = %while.cond.preheader, %while.cond.backedge, %entry, %if.else, %if.then202, %lor.lhs.false148, %if.then156, %land.lhs.true152, %if.end
  %retval.0 = phi i32 [ -1, %if.end ], [ -1, %land.lhs.true152 ], [ -1, %if.then156 ], [ -1, %lor.lhs.false148 ], [ -1, %if.then202 ], [ -1, %if.else ], [ 0, %entry ], [ 0, %while.cond.backedge ], [ 0, %while.cond.preheader ]
  ret i32 %retval.0
}
