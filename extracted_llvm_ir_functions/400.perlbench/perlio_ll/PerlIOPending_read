define i64 @PerlIOPending_read(%struct._PerlIO** %f, i8* %vbuf, i64 %count) #1 {
entry:
  %call = tail call i32 @Perl_PerlIO_get_cnt(%struct._PerlIO** %f) #10
  %conv = sext i32 %call to i64
  %cmp = icmp sgt i64 %conv, %count
  %count.conv = select i1 %cmp, i64 %count, i64 %conv
  %cmp2 = icmp sgt i64 %count.conv, 0
  br i1 %cmp2, label %if.then4, label %if.end6

if.then4:                                         ; preds = %entry
  %call5 = tail call i64 @PerlIOBuf_read(%struct._PerlIO** %f, i8* %vbuf, i64 %count.conv) #10
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %entry
  %got.0 = phi i64 [ %call5, %if.then4 ], [ 0, %entry ]
  %cmp7 = icmp sgt i64 %got.0, -1
  %cmp9 = icmp slt i64 %got.0, %count
  %or.cond = and i1 %cmp7, %cmp9
  br i1 %or.cond, label %if.then11, label %if.end19

if.then11:                                        ; preds = %if.end6
  %add.ptr = getelementptr inbounds i8* %vbuf, i64 %got.0
  %sub = sub i64 %count, %got.0
  %call12 = tail call i64 @Perl_PerlIO_read(%struct._PerlIO** %f, i8* %add.ptr, i64 %sub) #10
  %cmp13 = icmp sgt i64 %call12, -1
  %cmp15 = icmp eq i64 %got.0, 0
  %or.cond35 = or i1 %cmp13, %cmp15
  %add = select i1 %or.cond35, i64 %call12, i64 0
  %add.got.0 = add nsw i64 %add, %got.0
  ret i64 %add.got.0

if.end19:                                         ; preds = %if.end6
  ret i64 %got.0
}
