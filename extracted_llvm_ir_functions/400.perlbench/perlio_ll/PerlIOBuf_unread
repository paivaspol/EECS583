define i64 @PerlIOBuf_unread(%struct._PerlIO** %f, i8* %vbuf, i64 %count) #1 {
entry:
  %0 = load %struct._PerlIO** %f, align 8, !tbaa !3
  %flags = getelementptr inbounds %struct._PerlIO* %0, i64 0, i32 2
  %1 = load i32* %flags, align 4, !tbaa !0
  %and = and i32 %1, 131072
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i32 @Perl_PerlIO_flush(%struct._PerlIO** %f) #10
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %buf1 = getelementptr inbounds %struct._PerlIO* %0, i64 1
  %2 = bitcast %struct._PerlIO* %buf1 to i8**
  %3 = load i8** %2, align 8, !tbaa !3
  %tobool2 = icmp eq i8* %3, null
  br i1 %tobool2, label %if.end5, label %if.then8

if.end5:                                          ; preds = %if.end
  %call4 = tail call i8* @Perl_PerlIO_get_base(%struct._PerlIO** %f) #10
  %.pr = load i8** %2, align 8, !tbaa !3
  %tobool7 = icmp eq i8* %.pr, null
  br i1 %tobool7, label %if.end38, label %if.then8

if.then8:                                         ; preds = %if.end5, %if.end
  %4 = phi i8* [ %3, %if.end ], [ %.pr, %if.end5 ]
  %5 = load %struct._PerlIO** %f, align 8, !tbaa !3
  %flags9 = getelementptr inbounds %struct._PerlIO* %5, i64 0, i32 2
  %6 = load i32* %flags9, align 4, !tbaa !0
  %and10 = and i32 %6, 262144
  %tobool11 = icmp eq i32 %and10, 0
  br i1 %tobool11, label %if.else, label %if.then12

if.then12:                                        ; preds = %if.then8
  %ptr = getelementptr inbounds %struct._PerlIO* %0, i64 1, i32 2
  %7 = bitcast i32* %ptr to i8**
  %8 = load i8** %7, align 8, !tbaa !3
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  br label %if.end20

if.else:                                          ; preds = %if.then8
  %bufsiz = getelementptr inbounds %struct._PerlIO* %0, i64 2, i32 1
  %9 = bitcast %struct._PerlIO_funcs** %bufsiz to i64*
  %10 = load i64* %9, align 8, !tbaa !4
  %add.ptr15 = getelementptr inbounds i8* %4, i64 %10
  %end = getelementptr inbounds %struct._PerlIO* %0, i64 1, i32 1
  %add.ptr15.c = bitcast i8* %add.ptr15 to %struct._PerlIO_funcs*
  store %struct._PerlIO_funcs* %add.ptr15.c, %struct._PerlIO_funcs** %end, align 8, !tbaa !3
  %ptr17 = getelementptr inbounds %struct._PerlIO* %0, i64 1, i32 2
  %11 = bitcast i32* %ptr17 to i8**
  store i8* %add.ptr15, i8** %11, align 8, !tbaa !3
  %12 = load %struct._PerlIO** %f, align 8, !tbaa !3
  %flags18 = getelementptr inbounds %struct._PerlIO* %12, i64 0, i32 2
  %13 = load i32* %flags18, align 4, !tbaa !0
  %or = or i32 %13, 262144
  store i32 %or, i32* %flags18, align 4, !tbaa !0
  %posn = getelementptr inbounds %struct._PerlIO* %0, i64 2
  %14 = bitcast %struct._PerlIO* %posn to i64*
  %15 = load i64* %14, align 8, !tbaa !4
  %sub = sub i64 %15, %10
  %16 = getelementptr inbounds %struct._PerlIO* %posn, i64 0, i32 0
  %sub.c = inttoptr i64 %sub to %struct._PerlIO*
  store %struct._PerlIO* %sub.c, %struct._PerlIO** %16, align 8, !tbaa !4
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then12
  %17 = phi i8* [ %8, %if.then12 ], [ %add.ptr15, %if.else ]
  %avail.0 = phi i64 [ %sub.ptr.sub, %if.then12 ], [ %10, %if.else ]
  %cmp = icmp sgt i64 %avail.0, %count
  %count.avail.0 = select i1 %cmp, i64 %count, i64 %avail.0
  %cmp23 = icmp sgt i64 %count.avail.0, 0
  br i1 %cmp23, label %if.then24, label %if.end38

if.then24:                                        ; preds = %if.end20
  %ptr25 = getelementptr inbounds %struct._PerlIO* %0, i64 1, i32 2
  %18 = bitcast i32* %ptr25 to i8**
  %idx.neg = sub i64 0, %count.avail.0
  %add.ptr26 = getelementptr inbounds i8* %17, i64 %idx.neg
  store i8* %add.ptr26, i8** %18, align 8, !tbaa !3
  %add.ptr.sum = sub i64 %count, %count.avail.0
  %add.ptr28 = getelementptr inbounds i8* %vbuf, i64 %add.ptr.sum
  %cmp30 = icmp eq i8* %add.ptr28, %add.ptr26
  br i1 %cmp30, label %if.end33, label %if.then31

if.then31:                                        ; preds = %if.then24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr26, i8* %add.ptr28, i64 %count.avail.0, i32 1, i1 false)
  br label %if.end33

if.end33:                                         ; preds = %if.then24, %if.then31
  %19 = load %struct._PerlIO** %f, align 8, !tbaa !3
  %flags35 = getelementptr inbounds %struct._PerlIO* %19, i64 0, i32 2
  %20 = load i32* %flags35, align 4, !tbaa !0
  %and36 = and i32 %20, -257
  store i32 %and36, i32* %flags35, align 4, !tbaa !0
  br label %if.end38

if.end38:                                         ; preds = %if.end5, %if.end20, %if.end33
  %count.addr.0 = phi i64 [ %add.ptr.sum, %if.end33 ], [ %count, %if.end20 ], [ %count, %if.end5 ]
  %unread.0 = phi i64 [ %count.avail.0, %if.end33 ], [ 0, %if.end20 ], [ 0, %if.end5 ]
  %cmp39 = icmp eq i64 %count.addr.0, 0
  br i1 %cmp39, label %if.end43, label %if.then40

if.then40:                                        ; preds = %if.end38
  %call41 = tail call i64 @PerlIOBase_unread(%struct._PerlIO** %f, i8* %vbuf, i64 %count.addr.0) #10
  %add42 = add nsw i64 %call41, %unread.0
  br label %if.end43

if.end43:                                         ; preds = %if.end38, %if.then40
  %unread.1 = phi i64 [ %add42, %if.then40 ], [ %unread.0, %if.end38 ]
  ret i64 %unread.1
}
