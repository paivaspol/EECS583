define %struct._PerlIO_funcs* @PerlIO_find_layer(i8* %name, i64 %len, i32 %load) #1 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.end28, %entry
  %len.tr = phi i64 [ %len, %entry ], [ %len.addr.0, %if.end28 ]
  %load.tr = phi i32 [ %load, %entry ], [ 0, %if.end28 ]
  %cmp = icmp slt i64 %len.tr, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %tailrecurse
  %call = tail call i64 @strlen(i8* %name) #9
  br label %if.end

if.end:                                           ; preds = %if.then, %tailrecurse
  %len.addr.0 = phi i64 [ %call, %if.then ], [ %len.tr, %tailrecurse ]
  %0 = load %struct.PerlIO_list_s** @PL_known_layers, align 8, !tbaa !3
  %cur51 = getelementptr inbounds %struct.PerlIO_list_s* %0, i64 0, i32 1
  %1 = load i64* %cur51, align 8, !tbaa !4
  %cmp152 = icmp sgt i64 %1, 0
  br i1 %cmp152, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %array.phi.trans.insert = getelementptr inbounds %struct.PerlIO_list_s* %0, i64 0, i32 3
  %.pre = load %struct.PerlIO_pair_t** %array.phi.trans.insert, align 8, !tbaa !3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %i.053 = phi i64 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %funcs = getelementptr inbounds %struct.PerlIO_pair_t* %.pre, i64 %i.053, i32 0
  %2 = load %struct._PerlIO_funcs** %funcs, align 8, !tbaa !3
  %name2 = getelementptr inbounds %struct._PerlIO_funcs* %2, i64 0, i32 1
  %3 = load i8** %name2, align 8, !tbaa !3
  %call3 = tail call i32 @memcmp(i8* %3, i8* %name, i64 %len.addr.0) #9
  %tobool = icmp eq i32 %call3, 0
  br i1 %tobool, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %arrayidx5 = getelementptr inbounds i8* %3, i64 %len.addr.0
  %4 = load i8* %arrayidx5, align 1, !tbaa !1
  %cmp6 = icmp eq i8 %4, 0
  br i1 %cmp6, label %if.then8, label %for.inc

if.then8:                                         ; preds = %land.lhs.true
  %conv9 = trunc i64 %len.addr.0 to i32
  tail call void (i8*, ...)* @PerlIO_debug(i8* undef, i32 %conv9, i8* %name, %struct._PerlIO_funcs* %2) #10
  br label %return

for.inc:                                          ; preds = %for.body, %land.lhs.true
  %inc = add nsw i64 %i.053, 1
  %cmp1 = icmp slt i64 %inc, %1
  br i1 %cmp1, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %if.end
  %tobool11 = icmp ne i32 %load.tr, 0
  %5 = load %struct.sv** @PL_subname, align 8, !tbaa !3
  %tobool13 = icmp ne %struct.sv* %5, null
  %or.cond = and i1 %tobool11, %tobool13
  %6 = load %struct.PerlIO_list_s** @PL_def_layerlist, align 8, !tbaa !3
  %tobool15 = icmp ne %struct.PerlIO_list_s* %6, null
  %or.cond33 = and i1 %or.cond, %tobool15
  br i1 %or.cond33, label %land.lhs.true16, label %if.end31

land.lhs.true16:                                  ; preds = %for.end
  %cur17 = getelementptr inbounds %struct.PerlIO_list_s* %6, i64 0, i32 1
  %7 = load i64* %cur17, align 8, !tbaa !4
  %cmp18 = icmp sgt i64 %7, 1
  br i1 %cmp18, label %if.then20, label %if.end31

if.then20:                                        ; preds = %land.lhs.true16
  %8 = load i32* @PL_in_load_module, align 4, !tbaa !0
  %tobool21 = icmp eq i32 %8, 0
  br i1 %tobool21, label %if.else, label %if.then22

if.then22:                                        ; preds = %if.then20
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([56 x i8]* @.str4, i64 0, i64 0)) #9
  br label %return

if.else:                                          ; preds = %if.then20
  %call23 = tail call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([7 x i8]* @.str5, i64 0, i64 0), i64 6) #9
  %call24 = tail call %struct.sv* @Perl_newSVpvn(i8* %name, i64 %len.addr.0) #9
  %call25 = tail call %struct.cv* @Perl_get_cv(i8* getelementptr inbounds ([26 x i8]* @.str6, i64 0, i64 0), i32 0) #9
  tail call void @Perl_push_scope() #9
  tail call void @Perl_save_int(i32* @PL_in_load_module) #9
  %tobool26 = icmp eq %struct.cv* %call25, null
  br i1 %tobool26, label %if.end28, label %if.then27

if.then27:                                        ; preds = %if.else
  tail call void @Perl_save_sptr(%struct.sv** @PL_warnhook) #9
  %9 = bitcast %struct.cv* %call25 to %struct.sv*
  store %struct.sv* %9, %struct.sv** @PL_warnhook, align 8, !tbaa !3
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then27
  %10 = load i32* @PL_in_load_module, align 4, !tbaa !0
  %inc29 = add nsw i32 %10, 1
  store i32 %inc29, i32* @PL_in_load_module, align 4, !tbaa !0
  tail call void (i32, %struct.sv*, %struct.sv*, ...)* @Perl_load_module(i32 0, %struct.sv* %call23, %struct.sv* null, %struct.sv* %call24, %struct.sv* null) #9
  %11 = load i32* @PL_in_load_module, align 4, !tbaa !0
  %dec = add nsw i32 %11, -1
  store i32 %dec, i32* @PL_in_load_module, align 4, !tbaa !0
  tail call void @Perl_pop_scope() #9
  br label %tailrecurse

if.end31:                                         ; preds = %land.lhs.true16, %for.end
  %conv32 = trunc i64 %len.addr.0 to i32
  tail call void (i8*, ...)* @PerlIO_debug(i8* undef, i32 %conv32, i8* %name) #10
  br label %return

return:                                           ; preds = %if.end31, %if.then22, %if.then8
  %retval.0 = phi %struct._PerlIO_funcs* [ %2, %if.then8 ], [ null, %if.then22 ], [ null, %if.end31 ]
  ret %struct._PerlIO_funcs* %retval.0
}
