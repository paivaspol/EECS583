define %struct._PerlIO** @PerlIOBase_dup(%struct._PerlIO** %f, %struct._PerlIO** %o, %struct.clone_params* %param, i32 %flags) #1 {
entry:
  %buf = alloca [8 x i8], align 1
  %0 = load %struct._PerlIO** %o, align 8, !tbaa !3
  %next = getelementptr inbounds %struct._PerlIO* %0, i64 0, i32 0
  %tobool = icmp eq %struct._PerlIO* %0, null
  br i1 %tobool, label %if.end9, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct._PerlIO** %next, align 8, !tbaa !3
  %tobool1 = icmp eq %struct._PerlIO* %1, null
  br i1 %tobool1, label %if.end9, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %tab2 = getelementptr inbounds %struct._PerlIO* %1, i64 0, i32 1
  %2 = load %struct._PerlIO_funcs** %tab2, align 8, !tbaa !3
  %tobool3 = icmp eq %struct._PerlIO_funcs* %2, null
  br i1 %tobool3, label %if.else, label %land.lhs.true4

land.lhs.true4:                                   ; preds = %if.then
  %Dup = getelementptr inbounds %struct._PerlIO_funcs* %2, i64 0, i32 10
  %3 = load %struct._PerlIO** (%struct._PerlIO**, %struct._PerlIO**, %struct.clone_params*, i32)** %Dup, align 8, !tbaa !3
  %tobool5 = icmp eq %struct._PerlIO** (%struct._PerlIO**, %struct._PerlIO**, %struct.clone_params*, i32)* %3, null
  br i1 %tobool5, label %if.else, label %if.then6

if.then6:                                         ; preds = %land.lhs.true4
  %call = call %struct._PerlIO** %3(%struct._PerlIO** %f, %struct._PerlIO** %next, %struct.clone_params* %param, i32 %flags) #9
  br label %if.end9

if.else:                                          ; preds = %land.lhs.true4, %if.then
  %call8 = call %struct._PerlIO** @PerlIOBase_dup(%struct._PerlIO** %f, %struct._PerlIO** %next, %struct.clone_params* %param, i32 %flags) #10
  br label %if.end9

if.end9:                                          ; preds = %land.lhs.true, %entry, %if.then6, %if.else
  %f.addr.0 = phi %struct._PerlIO** [ %call, %if.then6 ], [ %call8, %if.else ], [ %f, %land.lhs.true ], [ %f, %entry ]
  %tobool10 = icmp eq %struct._PerlIO** %f.addr.0, null
  br i1 %tobool10, label %if.end24, label %if.then11

if.then11:                                        ; preds = %if.end9
  %4 = load %struct._PerlIO** %o, align 8, !tbaa !3
  %tab12 = getelementptr inbounds %struct._PerlIO* %4, i64 0, i32 1
  %5 = load %struct._PerlIO_funcs** %tab12, align 8, !tbaa !3
  %name = getelementptr inbounds %struct._PerlIO_funcs* %5, i64 0, i32 1
  %6 = load i8** %name, align 8, !tbaa !3
  call void (i8*, ...)* @PerlIO_debug(i8* undef, i8* %6, %struct._PerlIO** %f.addr.0, %struct._PerlIO** %o, %struct.clone_params* %param) #10
  %Getarg = getelementptr inbounds %struct._PerlIO_funcs* %5, i64 0, i32 8
  %7 = load %struct.sv* (%struct._PerlIO**, %struct.clone_params*, i32)** %Getarg, align 8, !tbaa !3
  %tobool13 = icmp eq %struct.sv* (%struct._PerlIO**, %struct.clone_params*, i32)* %7, null
  br i1 %tobool13, label %if.end18, label %if.then14

if.then14:                                        ; preds = %if.then11
  %call16 = call %struct.sv* %7(%struct._PerlIO** %o, %struct.clone_params* %param, i32 %flags) #9
  br label %if.end18

if.end18:                                         ; preds = %if.then11, %if.then14
  %arg.0 = phi %struct.sv* [ %call16, %if.then14 ], [ null, %if.then11 ]
  %arraydecay = getelementptr inbounds [8 x i8]* %buf, i64 0, i64 0
  %call19 = call i8* @PerlIO_modestr(%struct._PerlIO** %o, i8* %arraydecay) #10
  %call20 = call %struct._PerlIO** @PerlIO_push(%struct._PerlIO** %f.addr.0, %struct._PerlIO_funcs* %5, i8* %call19, %struct.sv* %arg.0) #10
  %tobool21 = icmp eq %struct.sv* %arg.0, null
  br i1 %tobool21, label %if.end24, label %if.then22

if.then22:                                        ; preds = %if.end18
  call void @Perl_sv_free(%struct.sv* %arg.0) #9
  br label %if.end24

if.end24:                                         ; preds = %if.end18, %if.end9, %if.then22
  %f.addr.1 = phi %struct._PerlIO** [ %call20, %if.then22 ], [ %call20, %if.end18 ], [ null, %if.end9 ]
  ret %struct._PerlIO** %f.addr.1
}
