define internal fastcc i32 @S_regmatch(%struct.regnode* %prog) #0 {
entry:
  %ulen = alloca i64, align 8
  %e269 = alloca i8*, align 8
  %inclasslen = alloca i64, align 8
  %ulen1 = alloca i64, align 8
  %ulen2 = alloca i64, align 8
  %tmpbuf1 = alloca [7 x i8], align 1
  %tmpbuf2 = alloca [7 x i8], align 1
  %state = alloca %struct.re_cc_state, align 8
  %len = alloca i64, align 8
  %pm = alloca %struct.pmop, align 8
  %cc1755 = alloca %struct.curcur, align 8
  %l2320 = alloca i32, align 4
  %ulen13260 = alloca i64, align 8
  %ulen23261 = alloca i64, align 8
  %tmpbuf13262 = alloca [7 x i8], align 1
  %tmpbuf23263 = alloca [7 x i8], align 1
  %len3488 = alloca i64, align 8
  %0 = load i8** @PL_reginput, align 8, !tbaa !3
  %1 = load i8* @PL_reg_match_utf8, align 1, !tbaa !1
  %2 = load i8* %0, align 1, !tbaa !1
  %conv = zext i8 %2 to i32
  %tobool82 = icmp eq i8 %1, 0
  %conv133 = sext i8 %1 to i32
  %tobool262 = icmp ne i8 %1, 0
  %arraydecay1408 = getelementptr inbounds [7 x i8]* %tmpbuf1, i64 0, i64 0
  %arraydecay1410 = getelementptr inbounds [7 x i8]* %tmpbuf2, i64 0, i64 0
  %3 = bitcast %struct.re_cc_state* %state to i8*
  %4 = bitcast %struct.pmop* %pm to i8*
  %op_pmdynflags = getelementptr inbounds %struct.pmop* %pm, i64 0, i32 16
  %node = getelementptr inbounds %struct.re_cc_state* %state, i64 0, i32 1
  %prev = getelementptr inbounds %struct.re_cc_state* %state, i64 0, i32 2
  %cc = getelementptr inbounds %struct.re_cc_state* %state, i64 0, i32 3
  %re1594 = getelementptr inbounds %struct.re_cc_state* %state, i64 0, i32 4
  %ss = getelementptr inbounds %struct.re_cc_state* %state, i64 0, i32 0
  %5 = bitcast %struct.curcur* %cc1755 to i8*
  %oldcc = getelementptr inbounds %struct.curcur* %cc1755, i64 0, i32 8
  %parenfloor1773 = getelementptr inbounds %struct.curcur* %cc1755, i64 0, i32 0
  %cur = getelementptr inbounds %struct.curcur* %cc1755, i64 0, i32 1
  %min = getelementptr inbounds %struct.curcur* %cc1755, i64 0, i32 2
  %max = getelementptr inbounds %struct.curcur* %cc1755, i64 0, i32 3
  %scan1779 = getelementptr inbounds %struct.curcur* %cc1755, i64 0, i32 5
  %next1780 = getelementptr inbounds %struct.curcur* %cc1755, i64 0, i32 6
  %minmod1781 = getelementptr inbounds %struct.curcur* %cc1755, i64 0, i32 4
  %lastloc = getelementptr inbounds %struct.curcur* %cc1755, i64 0, i32 7
  %arraydecay3264 = getelementptr inbounds [7 x i8]* %tmpbuf13262, i64 0, i64 0
  %arraydecay3266 = getelementptr inbounds [7 x i8]* %tmpbuf23263, i64 0, i64 0
  br label %while.cond

while.cond:                                       ; preds = %if.end4315, %if.else2303, %if.then1735, %if.then1746, %if.else1738, %sw.bb1694, %if.then1700, %if.else1691, %while.body, %while.body, %while.body, %if.end1372, %if.end1021, %if.end1056, %if.end907, %if.end125, %if.else127, %if.end91, %if.else93, %if.end65, %sw.bb38, %sw.bb33, %sw.bb18, %land.lhs.true26, %sw.bb, %land.lhs.true12, %cond.end4256, %do_longjump, %sw.bb2318, %sw.bb1751, %land.end1731, %if.end1721, %if.end1480, %if.end1424, %if.end1359, %if.end1315, %if.end1285, %if.end1231, %if.end1201, %if.end1150, %if.end1111, %if.end982, %if.end714, %if.end666, %if.end607, %if.end559, %if.then502, %if.end438, %cond.end405, %if.end381, %if.end339, %if.end251, %if.end228, %if.end102, %sw.bb70, %meol, %if.end1635, %land.end1661, %cond.true1676, %cond.false1680, %cond.true1668, %do_branch, %entry
  %unwind.0 = phi i32 [ 0, %entry ], [ %unwind.0, %cond.end4256 ], [ %unwind.0, %do_longjump ], [ %unwind.25651, %if.end4315 ], [ %unwind.0, %sw.bb2318 ], [ %call2304, %if.else2303 ], [ %unwind.0, %sw.bb1751 ], [ %unwind.0, %if.then1735 ], [ %unwind.0, %if.then1746 ], [ %unwind.0, %if.else1738 ], [ %unwind.0, %land.end1731 ], [ %unwind.0, %if.end1721 ], [ %unwind.0, %if.then1700 ], [ %unwind.0, %sw.bb1694 ], [ %unwind.0, %if.else1691 ], [ %unwind.0, %while.body ], [ %unwind.0, %while.body ], [ %unwind.0, %while.body ], [ %unwind.0, %if.end1372 ], [ %unwind.0, %if.end1424 ], [ %unwind.0, %if.end1480 ], [ %unwind.0, %if.end1359 ], [ %unwind.0, %if.end1285 ], [ %unwind.0, %if.end1315 ], [ %unwind.0, %if.end1201 ], [ %unwind.0, %if.end1231 ], [ %unwind.0, %if.end1111 ], [ %unwind.0, %if.end1150 ], [ %unwind.0, %if.end982 ], [ %unwind.0, %if.end1021 ], [ %unwind.0, %if.end1056 ], [ %unwind.0, %if.end907 ], [ %unwind.0, %if.end666 ], [ %unwind.0, %if.end714 ], [ %unwind.0, %if.end559 ], [ %unwind.0, %if.end607 ], [ %unwind.0, %cond.end405 ], [ %unwind.0, %if.then502 ], [ %unwind.0, %if.end438 ], [ %unwind.0, %if.end339 ], [ %unwind.0, %if.end381 ], [ %unwind.0, %if.end228 ], [ %unwind.0, %if.end251 ], [ %unwind.0, %if.end125 ], [ %unwind.0, %if.else127 ], [ %unwind.0, %if.end102 ], [ %unwind.0, %if.end91 ], [ %unwind.0, %if.else93 ], [ %unwind.0, %sw.bb70 ], [ %unwind.0, %if.end65 ], [ %unwind.0, %sw.bb38 ], [ %unwind.0, %sw.bb33 ], [ %unwind.0, %sw.bb18 ], [ %unwind.0, %land.lhs.true26 ], [ %unwind.0, %sw.bb ], [ %unwind.0, %land.lhs.true12 ], [ %unwind.0, %meol ], [ %unwind.0, %if.end1635 ], [ %unwind.0, %land.end1661 ], [ %unwind.0, %cond.true1676 ], [ %unwind.0, %cond.false1680 ], [ %unwind.0, %cond.true1668 ], [ %unwind.0, %do_branch ]
  %logical.0 = phi i32 [ 0, %entry ], [ %logical.0, %cond.end4256 ], [ %logical.3, %do_longjump ], [ %logical.5.ph, %if.end4315 ], [ %logical.0, %sw.bb2318 ], [ %logical.0, %if.else2303 ], [ %conv1753, %sw.bb1751 ], [ %logical.0, %if.then1735 ], [ %logical.0, %if.then1746 ], [ %logical.0, %if.else1738 ], [ %logical.0, %land.end1731 ], [ %logical.0, %if.end1721 ], [ %logical.0, %if.then1700 ], [ %logical.0, %sw.bb1694 ], [ 0, %if.else1691 ], [ %logical.0, %while.body ], [ %logical.0, %while.body ], [ %logical.0, %while.body ], [ %logical.0, %if.end1372 ], [ %logical.0, %if.end1424 ], [ %logical.0, %if.end1480 ], [ %logical.0, %if.end1359 ], [ %logical.0, %if.end1285 ], [ %logical.0, %if.end1315 ], [ %logical.0, %if.end1201 ], [ %logical.0, %if.end1231 ], [ %logical.0, %if.end1111 ], [ %logical.0, %if.end1150 ], [ %logical.0, %if.end982 ], [ %logical.0, %if.end1021 ], [ %logical.0, %if.end1056 ], [ %logical.0, %if.end907 ], [ %logical.0, %if.end666 ], [ %logical.0, %if.end714 ], [ %logical.0, %if.end559 ], [ %logical.0, %if.end607 ], [ %logical.0, %cond.end405 ], [ %logical.0, %if.then502 ], [ %logical.0, %if.end438 ], [ %logical.0, %if.end339 ], [ %logical.0, %if.end381 ], [ %logical.0, %if.end228 ], [ %logical.0, %if.end251 ], [ %logical.0, %if.end125 ], [ %logical.0, %if.else127 ], [ %logical.0, %if.end102 ], [ %logical.0, %if.end91 ], [ %logical.0, %if.else93 ], [ %logical.0, %sw.bb70 ], [ %logical.0, %if.end65 ], [ %logical.0, %sw.bb38 ], [ %logical.0, %sw.bb33 ], [ %logical.0, %sw.bb18 ], [ %logical.0, %land.lhs.true26 ], [ %logical.0, %sw.bb ], [ %logical.0, %land.lhs.true12 ], [ %logical.0, %meol ], [ 0, %if.end1635 ], [ 0, %land.end1661 ], [ 0, %cond.true1676 ], [ 0, %cond.false1680 ], [ 0, %cond.true1668 ], [ %logical.0, %do_branch ]
  %sw.0 = phi i32 [ 0, %entry ], [ %sw.0, %cond.end4256 ], [ %sw.2, %do_longjump ], [ %sw.0, %if.end4315 ], [ %sw.0, %sw.bb2318 ], [ %sw.0, %if.else2303 ], [ %sw.0, %sw.bb1751 ], [ %sw.0, %if.then1735 ], [ 0, %if.then1746 ], [ 0, %if.else1738 ], [ %land.ext1732, %land.end1731 ], [ %sw.0, %if.end1721 ], [ %sw.0, %if.then1700 ], [ %sw.0, %sw.bb1694 ], [ %sw.0, %if.else1691 ], [ %sw.0, %while.body ], [ %sw.0, %while.body ], [ %sw.0, %while.body ], [ %sw.0, %if.end1372 ], [ %sw.0, %if.end1424 ], [ %sw.0, %if.end1480 ], [ %sw.0, %if.end1359 ], [ %sw.0, %if.end1285 ], [ %sw.0, %if.end1315 ], [ %sw.0, %if.end1201 ], [ %sw.0, %if.end1231 ], [ %sw.0, %if.end1111 ], [ %sw.0, %if.end1150 ], [ %sw.0, %if.end982 ], [ %sw.0, %if.end1021 ], [ %sw.0, %if.end1056 ], [ %sw.0, %if.end907 ], [ %sw.0, %if.end666 ], [ %sw.0, %if.end714 ], [ %sw.0, %if.end559 ], [ %sw.0, %if.end607 ], [ %sw.0, %cond.end405 ], [ %sw.0, %if.then502 ], [ %sw.0, %if.end438 ], [ %sw.0, %if.end339 ], [ %sw.0, %if.end381 ], [ %sw.0, %if.end228 ], [ %sw.0, %if.end251 ], [ %sw.0, %if.end125 ], [ %sw.0, %if.else127 ], [ %sw.0, %if.end102 ], [ %sw.0, %if.end91 ], [ %sw.0, %if.else93 ], [ %sw.0, %sw.bb70 ], [ %sw.0, %if.end65 ], [ %sw.0, %sw.bb38 ], [ %sw.0, %sw.bb33 ], [ %sw.0, %sw.bb18 ], [ %sw.0, %land.lhs.true26 ], [ %sw.0, %sw.bb ], [ %sw.0, %land.lhs.true12 ], [ %sw.0, %meol ], [ 0, %if.end1635 ], [ %cond1663, %land.end1661 ], [ %conv1679, %cond.true1676 ], [ %conv1682, %cond.false1680 ], [ %conv1671, %cond.true1668 ], [ %sw.0, %do_branch ]
  %minmod.0 = phi i32 [ 0, %entry ], [ %minmod.0, %cond.end4256 ], [ %minmod.0, %do_longjump ], [ %minmod.2.ph, %if.end4315 ], [ 1, %sw.bb2318 ], [ %minmod.0, %if.else2303 ], [ %minmod.0, %sw.bb1751 ], [ %minmod.0, %if.then1735 ], [ %minmod.0, %if.then1746 ], [ %minmod.0, %if.else1738 ], [ %minmod.0, %land.end1731 ], [ %minmod.0, %if.end1721 ], [ %minmod.0, %if.then1700 ], [ %minmod.0, %sw.bb1694 ], [ %minmod.0, %if.else1691 ], [ %minmod.0, %while.body ], [ %minmod.0, %while.body ], [ %minmod.0, %while.body ], [ %minmod.0, %if.end1372 ], [ %minmod.0, %if.end1424 ], [ %minmod.0, %if.end1480 ], [ %minmod.0, %if.end1359 ], [ %minmod.0, %if.end1285 ], [ %minmod.0, %if.end1315 ], [ %minmod.0, %if.end1201 ], [ %minmod.0, %if.end1231 ], [ %minmod.0, %if.end1111 ], [ %minmod.0, %if.end1150 ], [ %minmod.0, %if.end982 ], [ %minmod.0, %if.end1021 ], [ %minmod.0, %if.end1056 ], [ %minmod.0, %if.end907 ], [ %minmod.0, %if.end666 ], [ %minmod.0, %if.end714 ], [ %minmod.0, %if.end559 ], [ %minmod.0, %if.end607 ], [ %minmod.0, %cond.end405 ], [ %minmod.0, %if.then502 ], [ %minmod.0, %if.end438 ], [ %minmod.0, %if.end339 ], [ %minmod.0, %if.end381 ], [ %minmod.0, %if.end228 ], [ %minmod.0, %if.end251 ], [ %minmod.0, %if.end125 ], [ %minmod.0, %if.else127 ], [ %minmod.0, %if.end102 ], [ %minmod.0, %if.end91 ], [ %minmod.0, %if.else93 ], [ %minmod.0, %sw.bb70 ], [ %minmod.0, %if.end65 ], [ %minmod.0, %sw.bb38 ], [ %minmod.0, %sw.bb33 ], [ %minmod.0, %sw.bb18 ], [ %minmod.0, %land.lhs.true26 ], [ %minmod.0, %sw.bb ], [ %minmod.0, %land.lhs.true12 ], [ %minmod.0, %meol ], [ %minmod.0, %if.end1635 ], [ %minmod.0, %land.end1661 ], [ %minmod.0, %cond.true1676 ], [ %minmod.0, %cond.false1680 ], [ %minmod.0, %cond.true1668 ], [ %minmod.0, %do_branch ]
  %locinput.0 = phi i8* [ %0, %entry ], [ %locinput.0, %cond.end4256 ], [ %locinput.16, %do_longjump ], [ %849, %if.end4315 ], [ %locinput.0, %sw.bb2318 ], [ %locinput.0, %if.else2303 ], [ %locinput.0, %sw.bb1751 ], [ %locinput.0, %if.then1735 ], [ %locinput.0, %if.then1746 ], [ %locinput.0, %if.else1738 ], [ %locinput.0, %land.end1731 ], [ %locinput.0, %if.end1721 ], [ %locinput.0, %if.then1700 ], [ %locinput.0, %sw.bb1694 ], [ %locinput.0, %if.else1691 ], [ %locinput.0, %while.body ], [ %locinput.0, %while.body ], [ %locinput.0, %while.body ], [ %locinput.0, %if.end1372 ], [ %l1389.1, %if.end1424 ], [ %add.ptr1452, %if.end1480 ], [ %locinput.2, %if.end1359 ], [ %add.ptr1290, %if.end1285 ], [ %incdec.ptr1316, %if.end1315 ], [ %add.ptr1206, %if.end1201 ], [ %incdec.ptr1232, %if.end1231 ], [ %add.ptr1116, %if.end1111 ], [ %incdec.ptr1151, %if.end1150 ], [ %add.ptr987, %if.end982 ], [ %incdec.ptr1022, %if.end1021 ], [ %incdec.ptr1057, %if.end1056 ], [ %locinput.0, %if.end907 ], [ %add.ptr671, %if.end666 ], [ %incdec.ptr715, %if.end714 ], [ %add.ptr564, %if.end559 ], [ %incdec.ptr608, %if.end607 ], [ %add.ptr407, %cond.end405 ], [ %add.ptr503, %if.then502 ], [ %incdec.ptr439, %if.end438 ], [ %83, %if.end339 ], [ %add.ptr383, %if.end381 ], [ %l.2, %if.end228 ], [ %add.ptr253, %if.end251 ], [ %add.ptr121, %if.end125 ], [ %incdec.ptr128, %if.else127 ], [ %incdec.ptr103, %if.end102 ], [ %add.ptr87, %if.end91 ], [ %incdec.ptr, %if.else93 ], [ %locinput.0, %sw.bb70 ], [ %locinput.0, %if.end65 ], [ %locinput.0, %sw.bb38 ], [ %locinput.0, %sw.bb33 ], [ %locinput.0, %sw.bb18 ], [ %locinput.0, %land.lhs.true26 ], [ %locinput.0, %sw.bb ], [ %locinput.0, %land.lhs.true12 ], [ %locinput.0, %meol ], [ %locinput.0, %if.end1635 ], [ %locinput.0, %land.end1661 ], [ %locinput.0, %cond.true1676 ], [ %locinput.0, %cond.false1680 ], [ %locinput.0, %cond.true1668 ], [ %locinput.0, %do_branch ]
  %ln.0 = phi i32 [ 0, %entry ], [ %ln.0, %cond.end4256 ], [ %ln.0, %do_longjump ], [ %ln.13.ph5642, %if.end4315 ], [ %ln.0, %sw.bb2318 ], [ %ln.0, %if.else2303 ], [ %ln.0, %sw.bb1751 ], [ %ln.0, %if.then1735 ], [ %ln.0, %if.then1746 ], [ %ln.0, %if.else1738 ], [ %ln.0, %land.end1731 ], [ %ln.0, %if.end1721 ], [ %ln.0, %if.then1700 ], [ %ln.0, %sw.bb1694 ], [ %ln.0, %if.else1691 ], [ %ln.0, %while.body ], [ %ln.0, %while.body ], [ %ln.0, %while.body ], [ %253, %if.end1372 ], [ %253, %if.end1424 ], [ %sub, %if.end1480 ], [ %ln.0, %if.end1359 ], [ %ln.0, %if.end1285 ], [ %ln.0, %if.end1315 ], [ %ln.0, %if.end1201 ], [ %ln.0, %if.end1231 ], [ %ln.0, %if.end1111 ], [ %ln.0, %if.end1150 ], [ %ln.0, %if.end982 ], [ %ln.0, %if.end1021 ], [ %ln.0, %if.end1056 ], [ %ln.2, %if.end907 ], [ %ln.0, %if.end666 ], [ %ln.0, %if.end714 ], [ %ln.0, %if.end559 ], [ %ln.0, %if.end607 ], [ %ln.0, %cond.end405 ], [ %ln.0, %if.then502 ], [ %ln.0, %if.end438 ], [ %conv260, %if.end339 ], [ %conv260, %if.end381 ], [ %conv132, %if.end228 ], [ %conv132, %if.end251 ], [ %ln.0, %if.end125 ], [ %ln.0, %if.else127 ], [ %ln.0, %if.end102 ], [ %ln.0, %if.end91 ], [ %ln.0, %if.else93 ], [ %ln.0, %sw.bb70 ], [ %ln.0, %if.end65 ], [ %ln.0, %sw.bb38 ], [ %ln.0, %sw.bb33 ], [ %ln.0, %sw.bb18 ], [ %ln.0, %land.lhs.true26 ], [ %ln.0, %sw.bb ], [ %ln.0, %land.lhs.true12 ], [ %ln.0, %meol ], [ %ln.0, %if.end1635 ], [ %ln.0, %land.end1661 ], [ %ln.0, %cond.true1676 ], [ %ln.0, %cond.false1680 ], [ %ln.0, %cond.true1668 ], [ %ln.0, %do_branch ]
  %nextchr.0 = phi i32 [ %conv, %entry ], [ %nextchr.0, %cond.end4256 ], [ %nextchr.2, %do_longjump ], [ %851, %if.end4315 ], [ %nextchr.0, %sw.bb2318 ], [ %nextchr.0, %if.else2303 ], [ %nextchr.0, %sw.bb1751 ], [ %nextchr.0, %if.then1735 ], [ %nextchr.0, %if.then1746 ], [ %nextchr.0, %if.else1738 ], [ %nextchr.0, %land.end1731 ], [ %nextchr.0, %if.end1721 ], [ %nextchr.0, %if.then1700 ], [ %nextchr.0, %sw.bb1694 ], [ %nextchr.0, %if.else1691 ], [ %nextchr.0, %while.body ], [ %nextchr.0, %while.body ], [ %nextchr.0, %while.body ], [ %nextchr.0, %if.end1372 ], [ %conv1425, %if.end1424 ], [ %conv1483, %if.end1480 ], [ %conv1360, %if.end1359 ], [ %conv1291, %if.end1285 ], [ %conv1317, %if.end1315 ], [ %conv1207, %if.end1201 ], [ %conv1233, %if.end1231 ], [ %conv1117, %if.end1111 ], [ %conv1152, %if.end1150 ], [ %conv988, %if.end982 ], [ %conv1023, %if.end1021 ], [ %conv1058, %if.end1056 ], [ %nextchr.0, %if.end907 ], [ %conv672, %if.end666 ], [ %conv716, %if.end714 ], [ %conv565, %if.end559 ], [ %conv609, %if.end607 ], [ %conv408, %cond.end405 ], [ %conv504, %if.then502 ], [ %conv440, %if.end438 ], [ %conv340, %if.end339 ], [ %conv384, %if.end381 ], [ %conv229, %if.end228 ], [ %conv254, %if.end251 ], [ %conv126, %if.end125 ], [ %conv129, %if.else127 ], [ %conv104, %if.end102 ], [ %conv92, %if.end91 ], [ %conv94, %if.else93 ], [ %nextchr.0, %sw.bb70 ], [ %nextchr.0, %if.end65 ], [ %nextchr.0, %sw.bb38 ], [ %nextchr.0, %sw.bb33 ], [ %nextchr.0, %sw.bb18 ], [ %nextchr.0, %land.lhs.true26 ], [ %nextchr.0, %sw.bb ], [ %nextchr.0, %land.lhs.true12 ], [ %nextchr.0, %meol ], [ %nextchr.0, %if.end1635 ], [ %nextchr.0, %land.end1661 ], [ %nextchr.0, %cond.true1676 ], [ %nextchr.0, %cond.false1680 ], [ %nextchr.0, %cond.true1668 ], [ %nextchr.0, %do_branch ]
  %scan.0 = phi %struct.regnode* [ %prog, %entry ], [ %.add.ptr, %cond.end4256 ], [ %.add.ptr4228, %do_longjump ], [ %add.ptr4322.add.ptr4317, %if.end4315 ], [ %.add.ptr, %sw.bb2318 ], [ %inner.0, %if.else2303 ], [ %.add.ptr, %sw.bb1751 ], [ %add.ptr1737, %if.then1735 ], [ %add.ptr1748, %if.then1746 ], [ %add.ptr1741, %if.else1738 ], [ %.add.ptr, %land.end1731 ], [ %.add.ptr, %if.end1721 ], [ %.add.ptr, %if.then1700 ], [ %.add.ptr, %sw.bb1694 ], [ %.add.ptr, %if.else1691 ], [ %.add.ptr, %while.body ], [ %.add.ptr, %while.body ], [ %.add.ptr, %while.body ], [ %.add.ptr, %if.end1372 ], [ %.add.ptr, %if.end1424 ], [ %.add.ptr, %if.end1480 ], [ %.add.ptr, %if.end1359 ], [ %.add.ptr, %if.end1285 ], [ %.add.ptr, %if.end1315 ], [ %.add.ptr, %if.end1201 ], [ %.add.ptr, %if.end1231 ], [ %.add.ptr, %if.end1111 ], [ %.add.ptr, %if.end1150 ], [ %.add.ptr, %if.end982 ], [ %.add.ptr, %if.end1021 ], [ %.add.ptr, %if.end1056 ], [ %.add.ptr, %if.end907 ], [ %.add.ptr, %if.end666 ], [ %.add.ptr, %if.end714 ], [ %.add.ptr, %if.end559 ], [ %.add.ptr, %if.end607 ], [ %.add.ptr, %cond.end405 ], [ %.add.ptr, %if.then502 ], [ %.add.ptr, %if.end438 ], [ %.add.ptr, %if.end339 ], [ %.add.ptr, %if.end381 ], [ %.add.ptr, %if.end228 ], [ %.add.ptr, %if.end251 ], [ %.add.ptr, %if.end125 ], [ %.add.ptr, %if.else127 ], [ %.add.ptr, %if.end102 ], [ %.add.ptr, %if.end91 ], [ %.add.ptr, %if.else93 ], [ %.add.ptr, %sw.bb70 ], [ %.add.ptr, %if.end65 ], [ %.add.ptr, %sw.bb38 ], [ %.add.ptr, %sw.bb33 ], [ %.add.ptr, %sw.bb18 ], [ %.add.ptr, %land.lhs.true26 ], [ %.add.ptr, %sw.bb ], [ %.add.ptr, %land.lhs.true12 ], [ %.add.ptr, %meol ], [ %.add.ptr, %if.end1635 ], [ %.add.ptr, %land.end1661 ], [ %.add.ptr, %cond.true1676 ], [ %.add.ptr, %cond.false1680 ], [ %.add.ptr, %cond.true1668 ], [ %inner.0, %do_branch ]
  %cmp = icmp eq %struct.regnode* %scan.0, null
  br i1 %cmp, label %while.end4261, label %while.body

while.body:                                       ; preds = %while.cond
  %next_off = getelementptr inbounds %struct.regnode* %scan.0, i64 0, i32 2
  %6 = load i16* %next_off, align 2, !tbaa !5
  %idx.ext = zext i16 %6 to i64
  %add.ptr = getelementptr inbounds %struct.regnode* %scan.0, i64 %idx.ext
  %cmp3 = icmp eq i16 %6, 0
  %.add.ptr = select i1 %cmp3, %struct.regnode* null, %struct.regnode* %add.ptr
  %type = getelementptr inbounds %struct.regnode* %scan.0, i64 0, i32 1
  %7 = load i8* %type, align 1, !tbaa !1
  %conv5 = zext i8 %7 to i32
  switch i32 %conv5, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb18
    i32 4, label %sw.bb33
    i32 13, label %sw.bb38
    i32 6, label %sw.bb43
    i32 7, label %meol
    i32 8, label %seol
    i32 5, label %sw.bb70
    i32 15, label %sw.bb75
    i32 16, label %sw.bb96
    i32 14, label %sw.bb105
    i32 33, label %sw.bb131
    i32 35, label %sw.bb255
    i32 34, label %sw.bb256
    i32 17, label %sw.bb385
    i32 19, label %sw.bb507
    i32 18, label %sw.bb509
    i32 21, label %sw.bb610
    i32 20, label %sw.bb612
    i32 10, label %sw.bb717
    i32 12, label %sw.bb717
    i32 9, label %sw.bb719
    i32 11, label %sw.bb719
    i32 23, label %sw.bb929
    i32 22, label %sw.bb931
    i32 25, label %sw.bb1060
    i32 24, label %sw.bb1062
    i32 27, label %sw.bb1153
    i32 26, label %sw.bb1155
    i32 29, label %sw.bb1234
    i32 28, label %sw.bb1236
    i32 30, label %sw.bb1318
    i32 49, label %sw.bb1361
    i32 47, label %sw.bb1363
    i32 48, label %sw.bb1363
    i32 36, label %while.cond
    i32 37, label %while.cond
    i32 32, label %while.cond
    i32 57, label %sw.bb1485
    i32 45, label %sw.bb1694
    i32 46, label %sw.bb1702
    i32 54, label %sw.bb1722
    i32 53, label %sw.bb1733
    i32 59, label %sw.bb1751
    i32 43, label %sw.bb1754
    i32 44, label %sw.bb1794
    i32 56, label %sw.bb2284
    i32 31, label %do_branch
    i32 58, label %sw.bb2318
    i32 42, label %sw.bb2319
    i32 41, label %sw.bb2981
    i32 40, label %sw.bb2999
    i32 38, label %sw.bb3006
    i32 39, label %sw.bb3008
    i32 0, label %sw.bb4102
    i32 1, label %sw.bb4133
    i32 52, label %sw.bb4134
    i32 51, label %sw.bb4135
    i32 50, label %sw.bb4170
    i32 55, label %do_longjump
  ]

sw.bb:                                            ; preds = %while.body
  %8 = load i8** @PL_bostr, align 8, !tbaa !3
  %cmp6 = icmp eq i8* %locinput.0, %8
  br i1 %cmp6, label %while.cond, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %9 = load i32* @PL_multiline, align 4, !tbaa !0
  %tobool = icmp eq i32 %9, 0
  br i1 %tobool, label %do_no.preheader, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false
  %tobool8 = icmp ne i32 %nextchr.0, 0
  %10 = load i8** @PL_regeol, align 8, !tbaa !3
  %cmp10 = icmp ult i8* %locinput.0, %10
  %or.cond = or i1 %tobool8, %cmp10
  br i1 %or.cond, label %land.lhs.true12, label %do_no.preheader

land.lhs.true12:                                  ; preds = %land.lhs.true
  %arrayidx = getelementptr inbounds i8* %locinput.0, i64 -1
  %11 = load i8* %arrayidx, align 1, !tbaa !1
  %cmp14 = icmp eq i8 %11, 10
  br i1 %cmp14, label %while.cond, label %do_no.preheader

sw.bb18:                                          ; preds = %while.body
  %12 = load i8** @PL_bostr, align 8, !tbaa !3
  %cmp19 = icmp eq i8* %locinput.0, %12
  br i1 %cmp19, label %while.cond, label %lor.lhs.false21

lor.lhs.false21:                                  ; preds = %sw.bb18
  %tobool22 = icmp ne i32 %nextchr.0, 0
  %13 = load i8** @PL_regeol, align 8, !tbaa !3
  %cmp24 = icmp ult i8* %locinput.0, %13
  %or.cond5459 = or i1 %tobool22, %cmp24
  br i1 %or.cond5459, label %land.lhs.true26, label %do_no.preheader

land.lhs.true26:                                  ; preds = %lor.lhs.false21
  %arrayidx27 = getelementptr inbounds i8* %locinput.0, i64 -1
  %14 = load i8* %arrayidx27, align 1, !tbaa !1
  %cmp29 = icmp eq i8 %14, 10
  br i1 %cmp29, label %while.cond, label %do_no.preheader

sw.bb33:                                          ; preds = %while.body
  %15 = load i8** @PL_bostr, align 8, !tbaa !3
  %cmp34 = icmp eq i8* %locinput.0, %15
  br i1 %cmp34, label %while.cond, label %do_no.preheader

sw.bb38:                                          ; preds = %while.body
  %16 = load i8** @PL_reg_ganch, align 8, !tbaa !3
  %cmp39 = icmp eq i8* %locinput.0, %16
  br i1 %cmp39, label %while.cond, label %do_no.preheader

sw.bb43:                                          ; preds = %while.body
  %17 = load i32* @PL_multiline, align 4, !tbaa !0
  %tobool44 = icmp eq i32 %17, 0
  br i1 %tobool44, label %seol, label %meol

meol:                                             ; preds = %sw.bb43, %while.body
  %18 = load i8** @PL_regeol, align 8, !tbaa !3
  %notlhs5567 = icmp eq i32 %nextchr.0, 0
  %notrhs5568 = icmp uge i8* %locinput.0, %18
  %or.cond5460.not = and i1 %notrhs5568, %notlhs5567
  %cmp52 = icmp eq i32 %nextchr.0, 10
  %or.cond5461 = or i1 %or.cond5460.not, %cmp52
  br i1 %or.cond5461, label %while.cond, label %do_no.preheader

seol:                                             ; preds = %sw.bb43, %while.body
  %19 = load i8** @PL_regeol, align 8, !tbaa !3
  %notlhs5565 = icmp eq i32 %nextchr.0, 0
  %notrhs5566 = icmp uge i8* %locinput.0, %19
  %or.cond5462.not = and i1 %notrhs5566, %notlhs5565
  %cmp62 = icmp eq i32 %nextchr.0, 10
  %or.cond5463 = or i1 %or.cond5462.not, %cmp62
  br i1 %or.cond5463, label %if.end65, label %do_no.preheader

if.end65:                                         ; preds = %seol
  %sub.ptr.lhs.cast = ptrtoint i8* %19 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %locinput.0 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp66 = icmp sgt i64 %sub.ptr.sub, 1
  br i1 %cmp66, label %do_no.preheader, label %while.cond

sw.bb70:                                          ; preds = %while.body
  %20 = load i8** @PL_regeol, align 8, !tbaa !3
  %cmp71 = icmp eq i8* %20, %locinput.0
  br i1 %cmp71, label %while.cond, label %do_no.preheader

sw.bb75:                                          ; preds = %while.body
  %tobool76 = icmp ne i32 %nextchr.0, 0
  %21 = load i8** @PL_regeol, align 8, !tbaa !3
  %cmp78 = icmp ult i8* %locinput.0, %21
  %or.cond5464 = or i1 %tobool76, %cmp78
  br i1 %or.cond5464, label %if.end81, label %do_no.preheader

if.end81:                                         ; preds = %sw.bb75
  br i1 %tobool82, label %if.else93, label %if.then83

if.then83:                                        ; preds = %if.end81
  %idxprom = sext i32 %nextchr.0 to i64
  %arrayidx84 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %22 = load i8* %arrayidx84, align 1, !tbaa !1
  %idx.ext86 = zext i8 %22 to i64
  %add.ptr87 = getelementptr inbounds i8* %locinput.0, i64 %idx.ext86
  %cmp88 = icmp ugt i8* %add.ptr87, %21
  br i1 %cmp88, label %do_no.preheader, label %if.end91

if.end91:                                         ; preds = %if.then83
  %23 = load i8* %add.ptr87, align 1, !tbaa !1
  %conv92 = zext i8 %23 to i32
  br label %while.cond

if.else93:                                        ; preds = %if.end81
  %incdec.ptr = getelementptr inbounds i8* %locinput.0, i64 1
  %24 = load i8* %incdec.ptr, align 1, !tbaa !1
  %conv94 = zext i8 %24 to i32
  br label %while.cond

sw.bb96:                                          ; preds = %while.body
  %tobool97 = icmp ne i32 %nextchr.0, 0
  %25 = load i8** @PL_regeol, align 8, !tbaa !3
  %cmp99 = icmp ult i8* %locinput.0, %25
  %or.cond5465 = or i1 %tobool97, %cmp99
  br i1 %or.cond5465, label %if.end102, label %do_no.preheader

if.end102:                                        ; preds = %sw.bb96
  %incdec.ptr103 = getelementptr inbounds i8* %locinput.0, i64 1
  %26 = load i8* %incdec.ptr103, align 1, !tbaa !1
  %conv104 = zext i8 %26 to i32
  br label %while.cond

sw.bb105:                                         ; preds = %while.body
  %27 = load i8** @PL_regeol, align 8, !tbaa !3
  %notlhs = icmp eq i32 %nextchr.0, 0
  %notrhs = icmp uge i8* %locinput.0, %27
  %or.cond5466.not = and i1 %notrhs, %notlhs
  %cmp111 = icmp eq i32 %nextchr.0, 10
  %or.cond5467 = or i1 %or.cond5466.not, %cmp111
  br i1 %or.cond5467, label %do_no.preheader, label %if.end114

if.end114:                                        ; preds = %sw.bb105
  br i1 %tobool82, label %if.else127, label %if.then116

if.then116:                                       ; preds = %if.end114
  %idxprom117 = sext i32 %nextchr.0 to i64
  %arrayidx118 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom117
  %28 = load i8* %arrayidx118, align 1, !tbaa !1
  %idx.ext120 = zext i8 %28 to i64
  %add.ptr121 = getelementptr inbounds i8* %locinput.0, i64 %idx.ext120
  %cmp122 = icmp ugt i8* %add.ptr121, %27
  br i1 %cmp122, label %do_no.preheader, label %if.end125

if.end125:                                        ; preds = %if.then116
  %29 = load i8* %add.ptr121, align 1, !tbaa !1
  %conv126 = zext i8 %29 to i32
  br label %while.cond

if.else127:                                       ; preds = %if.end114
  %incdec.ptr128 = getelementptr inbounds i8* %locinput.0, i64 1
  %30 = load i8* %incdec.ptr128, align 1, !tbaa !1
  %conv129 = zext i8 %30 to i32
  br label %while.cond

sw.bb131:                                         ; preds = %while.body
  %arraydecay = getelementptr inbounds %struct.regnode* %scan.0, i64 1, i32 0
  %str_len = getelementptr inbounds %struct.regnode* %scan.0, i64 0, i32 0
  %31 = load i8* %str_len, align 1, !tbaa !1
  %conv132 = zext i8 %31 to i32
  %32 = load i32* @PL_reg_flags, align 4, !tbaa !0
  %and = lshr i32 %32, 3
  %and.lobit = and i32 %and, 1
  %cmp136 = icmp eq i32 %conv133, %and.lobit
  br i1 %cmp136, label %if.end230, label %if.then138

if.then138:                                       ; preds = %sw.bb131
  %idx.ext139 = zext i8 %31 to i64
  %add.ptr140 = getelementptr inbounds i8* %arraydecay, i64 %idx.ext139
  %cmp1825635 = icmp eq i8 %31, 0
  br i1 %tobool82, label %while.cond181.preheader, label %while.cond143.preheader

while.cond181.preheader:                          ; preds = %if.then138
  br i1 %cmp1825635, label %if.end228, label %while.body184

while.cond143.preheader:                          ; preds = %if.then138
  br i1 %cmp1825635, label %if.end228, label %while.body146

while.body146:                                    ; preds = %if.end177, %while.cond143.preheader
  %s.05630 = phi i8* [ %arraydecay, %while.cond143.preheader ], [ %incdec.ptr179, %if.end177 ]
  %l.05629 = phi i8* [ %locinput.0, %while.cond143.preheader ], [ %add.ptr178, %if.end177 ]
  %33 = load i8** @PL_regeol, align 8, !tbaa !3
  %cmp147 = icmp ult i8* %l.05629, %33
  br i1 %cmp147, label %if.end150, label %do_no.preheader

if.end150:                                        ; preds = %while.body146
  %34 = load i8* %s.05630, align 1, !tbaa !1
  %conv151 = zext i8 %34 to i64
  %35 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings = getelementptr inbounds %struct.cop* %35, i64 0, i32 14
  %36 = load %struct.sv** %cop_warnings, align 8, !tbaa !3
  %cmp152 = icmp eq %struct.sv* %36, null
  br i1 %cmp152, label %lor.rhs, label %land.lhs.true154

land.lhs.true154:                                 ; preds = %if.end150
  %37 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings155 = getelementptr inbounds %struct.cop* %37, i64 0, i32 14
  %38 = load %struct.sv** %cop_warnings155, align 8, !tbaa !3
  %cmp156 = icmp eq %struct.sv* %38, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp156, label %lor.rhs, label %land.lhs.true158

land.lhs.true158:                                 ; preds = %land.lhs.true154
  %39 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings159 = getelementptr inbounds %struct.cop* %39, i64 0, i32 14
  %40 = load %struct.sv** %cop_warnings159, align 8, !tbaa !3
  %cmp160 = icmp eq %struct.sv* %40, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp160, label %lor.end, label %lor.lhs.false162

lor.lhs.false162:                                 ; preds = %land.lhs.true158
  %41 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings163 = getelementptr inbounds %struct.cop* %41, i64 0, i32 14
  %42 = load %struct.sv** %cop_warnings163, align 8, !tbaa !3
  %sv_any = getelementptr inbounds %struct.sv* %42, i64 0, i32 0
  %43 = load i8** %sv_any, align 8, !tbaa !3
  %xpv_pv = bitcast i8* %43 to i8**
  %44 = load i8** %xpv_pv, align 8, !tbaa !3
  %arrayidx164 = getelementptr inbounds i8* %44, i64 11
  %45 = load i8* %arrayidx164, align 1, !tbaa !1
  %and166 = and i8 %45, 1
  %tobool167 = icmp eq i8 %and166, 0
  br i1 %tobool167, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %lor.lhs.false162, %land.lhs.true154, %if.end150
  %46 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings168 = getelementptr inbounds %struct.cop* %46, i64 0, i32 14
  %47 = load %struct.sv** %cop_warnings168, align 8, !tbaa !3
  %cmp169 = icmp eq %struct.sv* %47, null
  br i1 %cmp169, label %land.rhs, label %lor.end

land.rhs:                                         ; preds = %lor.rhs
  %48 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and172 = and i8 %48, 1
  %tobool173 = icmp ne i8 %and172, 0
  %phitmp5457 = select i1 %tobool173, i32 0, i32 255
  br label %lor.end

lor.end:                                          ; preds = %lor.lhs.false162, %lor.rhs, %land.rhs, %land.lhs.true158
  %49 = phi i32 [ 0, %lor.lhs.false162 ], [ 0, %land.lhs.true158 ], [ 255, %lor.rhs ], [ %phitmp5457, %land.rhs ]
  %call = call i64 @Perl_utf8n_to_uvuni(i8* %l.05629, i64 13, i64* %ulen, i32 %49) #6
  %cmp174 = icmp eq i64 %conv151, %call
  br i1 %cmp174, label %if.end177, label %do_no.preheader

if.end177:                                        ; preds = %lor.end
  %50 = load i64* %ulen, align 8, !tbaa !4
  %add.ptr178 = getelementptr inbounds i8* %l.05629, i64 %50
  %incdec.ptr179 = getelementptr inbounds i8* %s.05630, i64 1
  %cmp144 = icmp ult i8* %incdec.ptr179, %add.ptr140
  br i1 %cmp144, label %while.body146, label %if.end228

while.body184:                                    ; preds = %if.end224, %while.cond181.preheader
  %s.15637 = phi i8* [ %arraydecay, %while.cond181.preheader ], [ %add.ptr225, %if.end224 ]
  %l.15636 = phi i8* [ %locinput.0, %while.cond181.preheader ], [ %incdec.ptr226, %if.end224 ]
  %51 = load i8** @PL_regeol, align 8, !tbaa !3
  %cmp185 = icmp ult i8* %l.15636, %51
  br i1 %cmp185, label %if.end188, label %do_no.preheader

if.end188:                                        ; preds = %while.body184
  %52 = load i8* %l.15636, align 1, !tbaa !1
  %conv189 = zext i8 %52 to i64
  %53 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings190 = getelementptr inbounds %struct.cop* %53, i64 0, i32 14
  %54 = load %struct.sv** %cop_warnings190, align 8, !tbaa !3
  %cmp191 = icmp eq %struct.sv* %54, null
  br i1 %cmp191, label %lor.rhs209, label %land.lhs.true193

land.lhs.true193:                                 ; preds = %if.end188
  %55 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings194 = getelementptr inbounds %struct.cop* %55, i64 0, i32 14
  %56 = load %struct.sv** %cop_warnings194, align 8, !tbaa !3
  %cmp195 = icmp eq %struct.sv* %56, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp195, label %lor.rhs209, label %land.lhs.true197

land.lhs.true197:                                 ; preds = %land.lhs.true193
  %57 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings198 = getelementptr inbounds %struct.cop* %57, i64 0, i32 14
  %58 = load %struct.sv** %cop_warnings198, align 8, !tbaa !3
  %cmp199 = icmp eq %struct.sv* %58, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp199, label %lor.end218, label %lor.lhs.false201

lor.lhs.false201:                                 ; preds = %land.lhs.true197
  %59 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings202 = getelementptr inbounds %struct.cop* %59, i64 0, i32 14
  %60 = load %struct.sv** %cop_warnings202, align 8, !tbaa !3
  %sv_any203 = getelementptr inbounds %struct.sv* %60, i64 0, i32 0
  %61 = load i8** %sv_any203, align 8, !tbaa !3
  %xpv_pv204 = bitcast i8* %61 to i8**
  %62 = load i8** %xpv_pv204, align 8, !tbaa !3
  %arrayidx205 = getelementptr inbounds i8* %62, i64 11
  %63 = load i8* %arrayidx205, align 1, !tbaa !1
  %and207 = and i8 %63, 1
  %tobool208 = icmp eq i8 %and207, 0
  br i1 %tobool208, label %lor.rhs209, label %lor.end218

lor.rhs209:                                       ; preds = %lor.lhs.false201, %land.lhs.true193, %if.end188
  %64 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings210 = getelementptr inbounds %struct.cop* %64, i64 0, i32 14
  %65 = load %struct.sv** %cop_warnings210, align 8, !tbaa !3
  %cmp211 = icmp eq %struct.sv* %65, null
  br i1 %cmp211, label %land.rhs213, label %lor.end218

land.rhs213:                                      ; preds = %lor.rhs209
  %66 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and215 = and i8 %66, 1
  %tobool216 = icmp ne i8 %and215, 0
  %phitmp5455 = select i1 %tobool216, i32 0, i32 255
  br label %lor.end218

lor.end218:                                       ; preds = %lor.lhs.false201, %lor.rhs209, %land.rhs213, %land.lhs.true197
  %67 = phi i32 [ 0, %lor.lhs.false201 ], [ 0, %land.lhs.true197 ], [ 255, %lor.rhs209 ], [ %phitmp5455, %land.rhs213 ]
  %call220 = call i64 @Perl_utf8n_to_uvuni(i8* %s.15637, i64 13, i64* %ulen, i32 %67) #6
  %cmp221 = icmp eq i64 %conv189, %call220
  br i1 %cmp221, label %if.end224, label %do_no.preheader

if.end224:                                        ; preds = %lor.end218
  %68 = load i64* %ulen, align 8, !tbaa !4
  %add.ptr225 = getelementptr inbounds i8* %s.15637, i64 %68
  %incdec.ptr226 = getelementptr inbounds i8* %l.15636, i64 1
  %cmp182 = icmp ult i8* %add.ptr225, %add.ptr140
  br i1 %cmp182, label %while.body184, label %if.end228

if.end228:                                        ; preds = %while.cond181.preheader, %if.end224, %while.cond143.preheader, %if.end177
  %l.2 = phi i8* [ %locinput.0, %while.cond143.preheader ], [ %add.ptr178, %if.end177 ], [ %locinput.0, %while.cond181.preheader ], [ %incdec.ptr226, %if.end224 ]
  %69 = load i8* %l.2, align 1, !tbaa !1
  %conv229 = zext i8 %69 to i32
  br label %while.cond

if.end230:                                        ; preds = %sw.bb131
  %70 = load i8* %arraydecay, align 1, !tbaa !1
  %conv231 = zext i8 %70 to i32
  %cmp232 = icmp eq i32 %conv231, %nextchr.0
  br i1 %cmp232, label %if.end235, label %do_no.preheader

if.end235:                                        ; preds = %if.end230
  %71 = load i8** @PL_regeol, align 8, !tbaa !3
  %sub.ptr.lhs.cast236 = ptrtoint i8* %71 to i64
  %sub.ptr.rhs.cast237 = ptrtoint i8* %locinput.0 to i64
  %sub.ptr.sub238 = sub i64 %sub.ptr.lhs.cast236, %sub.ptr.rhs.cast237
  %conv239 = zext i8 %31 to i64
  %cmp240 = icmp slt i64 %sub.ptr.sub238, %conv239
  br i1 %cmp240, label %do_no.preheader, label %if.end243

if.end243:                                        ; preds = %if.end235
  %cmp244 = icmp ugt i8 %31, 1
  br i1 %cmp244, label %land.lhs.true246, label %if.end251

land.lhs.true246:                                 ; preds = %if.end243
  %call248 = call i32 @memcmp(i8* %arraydecay, i8* %locinput.0, i64 %conv239) #6
  %tobool249 = icmp eq i32 %call248, 0
  br i1 %tobool249, label %if.end251, label %do_no.preheader

if.end251:                                        ; preds = %land.lhs.true246, %if.end243
  %add.ptr253 = getelementptr inbounds i8* %locinput.0, i64 %conv239
  %72 = load i8* %add.ptr253, align 1, !tbaa !1
  %conv254 = zext i8 %72 to i32
  br label %while.cond

sw.bb255:                                         ; preds = %while.body
  %73 = load i32* @PL_reg_flags, align 4, !tbaa !0
  %or = or i32 %73, 1
  store i32 %or, i32* @PL_reg_flags, align 4, !tbaa !0
  br label %sw.bb256

sw.bb256:                                         ; preds = %while.body, %sw.bb255
  %arraydecay258 = getelementptr inbounds %struct.regnode* %scan.0, i64 1, i32 0
  %str_len259 = getelementptr inbounds %struct.regnode* %scan.0, i64 0, i32 0
  %74 = load i8* %str_len259, align 1, !tbaa !1
  %conv260 = zext i8 %74 to i32
  %.pre5753 = load i32* @PL_reg_flags, align 4, !tbaa !0
  br i1 %tobool262, label %if.then267, label %lor.lhs.false263

lor.lhs.false263:                                 ; preds = %sw.bb256
  %and264 = and i32 %.pre5753, 8
  %cmp265 = icmp eq i32 %and264, 0
  br i1 %cmp265, label %if.end341, label %if.then267

if.then267:                                       ; preds = %sw.bb256, %lor.lhs.false263
  %75 = load i8** @PL_regeol, align 8, !tbaa !3
  store i8* %75, i8** %e269, align 8, !tbaa !3
  %conv270 = zext i8 %74 to i64
  %and271 = lshr i32 %.pre5753, 3
  %and271.tr = trunc i32 %and271 to i8
  %conv274 = and i8 %and271.tr, 1
  %call275 = call i32 @Perl_ibcmp_utf8(i8* %arraydecay258, i8** null, i64 %conv270, i8 signext %conv274, i8* %locinput.0, i8** %e269, i64 0, i8 signext %1) #6
  %tobool276 = icmp eq i32 %call275, 0
  br i1 %tobool276, label %if.then267.if.end339_crit_edge, label %if.then277

if.then267.if.end339_crit_edge:                   ; preds = %if.then267
  %.pre5754 = load i8** %e269, align 8, !tbaa !3
  br label %if.end339

if.then277:                                       ; preds = %if.then267
  br i1 %tobool262, label %land.lhs.true280, label %do_no.preheader

land.lhs.true280:                                 ; preds = %if.then277
  %76 = load i8* %arraydecay258, align 1, !tbaa !1
  %conv282 = sext i8 %76 to i32
  %.off5563 = add i8 %76, -65
  %77 = icmp ult i8 %.off5563, 26
  %add = add nsw i32 %conv282, 32
  %add.conv282 = select i1 %77, i32 %add, i32 %conv282
  %cmp295 = icmp eq i32 %add.conv282, 115
  %cmp298 = icmp ugt i8 %74, 1
  %or.cond5469 = and i1 %cmp295, %cmp298
  br i1 %or.cond5469, label %land.lhs.true300, label %do_no.preheader

land.lhs.true300:                                 ; preds = %land.lhs.true280
  %arrayidx301 = getelementptr inbounds i8* %arraydecay258, i64 1
  %78 = load i8* %arrayidx301, align 1, !tbaa !1
  %conv302 = sext i8 %78 to i32
  %.off5564 = add i8 %78, -65
  %79 = icmp ult i8 %.off5564, 26
  %add313 = add nsw i32 %conv302, 32
  %add313.conv302 = select i1 %79, i32 %add313, i32 %conv302
  %cmp319 = icmp eq i32 %add313.conv302, 115
  br i1 %cmp319, label %land.lhs.true321, label %do_no.preheader

land.lhs.true321:                                 ; preds = %land.lhs.true300
  %80 = load i8* %locinput.0, align 1, !tbaa !1
  %cmp324 = icmp eq i8 %80, -61
  br i1 %cmp324, label %land.lhs.true326, label %do_no.preheader

land.lhs.true326:                                 ; preds = %land.lhs.true321
  %81 = load i8** %e269, align 8, !tbaa !3
  %sub.ptr.lhs.cast327 = ptrtoint i8* %81 to i64
  %sub.ptr.rhs.cast328 = ptrtoint i8* %locinput.0 to i64
  %sub.ptr.sub329 = sub i64 %sub.ptr.lhs.cast327, %sub.ptr.rhs.cast328
  %cmp330 = icmp sgt i64 %sub.ptr.sub329, 1
  br i1 %cmp330, label %land.lhs.true332, label %do_no.preheader

land.lhs.true332:                                 ; preds = %land.lhs.true326
  %arrayidx333 = getelementptr inbounds i8* %locinput.0, i64 1
  %82 = load i8* %arrayidx333, align 1, !tbaa !1
  %cmp335 = icmp eq i8 %82, -97
  br i1 %cmp335, label %if.end339, label %do_no.preheader

if.end339:                                        ; preds = %if.then267.if.end339_crit_edge, %land.lhs.true332
  %83 = phi i8* [ %.pre5754, %if.then267.if.end339_crit_edge ], [ %81, %land.lhs.true332 ]
  %84 = load i8* %83, align 1, !tbaa !1
  %conv340 = zext i8 %84 to i32
  br label %while.cond

if.end341:                                        ; preds = %lor.lhs.false263
  %85 = load i8* %arraydecay258, align 1, !tbaa !1
  %conv342 = zext i8 %85 to i32
  %cmp343 = icmp eq i32 %conv342, %nextchr.0
  br i1 %cmp343, label %if.end358, label %land.lhs.true345

land.lhs.true345:                                 ; preds = %if.end341
  %idxprom347 = sext i32 %nextchr.0 to i64
  %86 = load i8* %type, align 1, !tbaa !1
  %cmp350 = icmp eq i8 %86, 34
  %cond352 = select i1 %cmp350, i8* getelementptr inbounds ([0 x i8]* @PL_fold, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8]* @PL_fold_locale, i64 0, i64 0)
  %arrayidx353 = getelementptr inbounds i8* %cond352, i64 %idxprom347
  %87 = load i8* %arrayidx353, align 1, !tbaa !1
  %cmp355 = icmp eq i8 %85, %87
  br i1 %cmp355, label %if.end358, label %do_no.preheader

if.end358:                                        ; preds = %land.lhs.true345, %if.end341
  %88 = load i8** @PL_regeol, align 8, !tbaa !3
  %sub.ptr.lhs.cast359 = ptrtoint i8* %88 to i64
  %sub.ptr.rhs.cast360 = ptrtoint i8* %locinput.0 to i64
  %sub.ptr.sub361 = sub i64 %sub.ptr.lhs.cast359, %sub.ptr.rhs.cast360
  %conv362 = zext i8 %74 to i64
  %cmp363 = icmp slt i64 %sub.ptr.sub361, %conv362
  br i1 %cmp363, label %do_no.preheader, label %if.end366

if.end366:                                        ; preds = %if.end358
  %cmp367 = icmp ugt i8 %74, 1
  br i1 %cmp367, label %land.lhs.true369, label %if.end381

land.lhs.true369:                                 ; preds = %if.end366
  %89 = load i8* %type, align 1, !tbaa !1
  %cmp372 = icmp eq i8 %89, 34
  br i1 %cmp372, label %cond.true374, label %cond.false377

cond.true374:                                     ; preds = %land.lhs.true369
  %call375 = call i32 @Perl_ibcmp(i8* %arraydecay258, i8* %locinput.0, i32 %conv260) #6
  %tobool376 = icmp eq i32 %call375, 0
  br i1 %tobool376, label %if.end381, label %do_no.preheader

cond.false377:                                    ; preds = %land.lhs.true369
  %call378 = call i32 @Perl_ibcmp_locale(i8* %arraydecay258, i8* %locinput.0, i32 %conv260) #6
  %tobool379 = icmp eq i32 %call378, 0
  br i1 %tobool379, label %if.end381, label %do_no.preheader

if.end381:                                        ; preds = %cond.true374, %cond.false377, %if.end366
  %add.ptr383 = getelementptr inbounds i8* %locinput.0, i64 %conv362
  %90 = load i8* %add.ptr383, align 1, !tbaa !1
  %conv384 = zext i8 %90 to i32
  br label %while.cond

sw.bb385:                                         ; preds = %while.body
  br i1 %tobool82, label %if.else409, label %if.then387

if.then387:                                       ; preds = %sw.bb385
  %91 = load i8** @PL_regeol, align 8, !tbaa !3
  %sub.ptr.lhs.cast388 = ptrtoint i8* %91 to i64
  %sub.ptr.rhs.cast389 = ptrtoint i8* %locinput.0 to i64
  %sub.ptr.sub390 = sub i64 %sub.ptr.lhs.cast388, %sub.ptr.rhs.cast389
  store i64 %sub.ptr.sub390, i64* %inclasslen, align 8, !tbaa !4
  %call391 = call fastcc signext i8 @S_reginclass(%struct.regnode* %scan.0, i8* %locinput.0, i64* %inclasslen, i8 signext %1) #5
  %tobool392 = icmp eq i8 %call391, 0
  br i1 %tobool392, label %no_anyof, label %if.end394

if.end394:                                        ; preds = %if.then387
  %92 = load i8** @PL_regeol, align 8, !tbaa !3
  %cmp395 = icmp ult i8* %locinput.0, %92
  br i1 %cmp395, label %if.end398, label %do_no.preheader

if.end398:                                        ; preds = %if.end394
  %93 = load i64* %inclasslen, align 8, !tbaa !4
  %tobool399 = icmp eq i64 %93, 0
  br i1 %tobool399, label %cond.false401, label %cond.end405

cond.false401:                                    ; preds = %if.end398
  %94 = load i8* %locinput.0, align 1, !tbaa !1
  %idxprom402 = zext i8 %94 to i64
  %arrayidx403 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom402
  %95 = load i8* %arrayidx403, align 1, !tbaa !1
  %conv404 = zext i8 %95 to i64
  br label %cond.end405

cond.end405:                                      ; preds = %if.end398, %cond.false401
  %cond406 = phi i64 [ %conv404, %cond.false401 ], [ %93, %if.end398 ]
  %add.ptr407 = getelementptr inbounds i8* %locinput.0, i64 %cond406
  %96 = load i8* %add.ptr407, align 1, !tbaa !1
  %conv408 = zext i8 %96 to i32
  br label %while.cond

if.else409:                                       ; preds = %sw.bb385
  %cmp410 = icmp slt i32 %nextchr.0, 0
  br i1 %cmp410, label %if.then412, label %if.end414

if.then412:                                       ; preds = %if.else409
  %97 = load i8* %locinput.0, align 1, !tbaa !1
  %conv413 = zext i8 %97 to i32
  br label %if.end414

if.end414:                                        ; preds = %if.then412, %if.else409
  %nextchr.1 = phi i32 [ %conv413, %if.then412 ], [ %nextchr.0, %if.else409 ]
  %flags = getelementptr inbounds %struct.regnode* %scan.0, i64 0, i32 0
  %98 = load i8* %flags, align 1, !tbaa !1
  %tobool416 = icmp eq i8 %98, 0
  br i1 %tobool416, label %cond.false421, label %cond.true417

cond.true417:                                     ; preds = %if.end414
  %call418 = call fastcc signext i8 @S_reginclass(%struct.regnode* %scan.0, i8* %locinput.0, i64* null, i8 signext 0) #5
  %tobool420 = icmp eq i8 %call418, 0
  br i1 %tobool420, label %no_anyof, label %if.end432

cond.false421:                                    ; preds = %if.end414
  %99 = load i8* %locinput.0, align 1, !tbaa !1
  %conv422 = zext i8 %99 to i32
  %shr5452 = lshr i32 %conv422, 3
  %idxprom4245453 = zext i32 %shr5452 to i64
  %bitmap = getelementptr inbounds %struct.regnode* %scan.0, i64 2
  %100 = bitcast %struct.regnode* %bitmap to [32 x i8]*
  %arrayidx425 = getelementptr inbounds [32 x i8]* %100, i64 0, i64 %idxprom4245453
  %101 = load i8* %arrayidx425, align 1, !tbaa !1
  %conv426 = sext i8 %101 to i32
  %and428 = and i32 %conv422, 7
  %shl = shl i32 1, %and428
  %and429 = and i32 %shl, %conv426
  %tobool430 = icmp eq i32 %and429, 0
  br i1 %tobool430, label %no_anyof, label %if.end432

if.end432:                                        ; preds = %cond.false421, %cond.true417
  %tobool433 = icmp ne i32 %nextchr.1, 0
  %102 = load i8** @PL_regeol, align 8, !tbaa !3
  %cmp435 = icmp ult i8* %locinput.0, %102
  %or.cond5471 = or i1 %tobool433, %cmp435
  br i1 %or.cond5471, label %if.end438, label %do_no.preheader

if.end438:                                        ; preds = %if.end432
  %incdec.ptr439 = getelementptr inbounds i8* %locinput.0, i64 1
  %103 = load i8* %incdec.ptr439, align 1, !tbaa !1
  %conv440 = zext i8 %103 to i32
  br label %while.cond

no_anyof:                                         ; preds = %if.then387, %cond.true417, %cond.false421
  %bitmap441 = getelementptr inbounds %struct.regnode* %scan.0, i64 2
  %104 = bitcast %struct.regnode* %bitmap441 to [32 x i8]*
  %arrayidx442 = getelementptr inbounds [32 x i8]* %104, i64 0, i64 27
  %105 = load i8* %arrayidx442, align 1, !tbaa !1
  %tobool445 = icmp slt i8 %105, 0
  br i1 %tobool445, label %land.lhs.true446, label %do_no.preheader

land.lhs.true446:                                 ; preds = %no_anyof
  %flags447 = getelementptr inbounds %struct.regnode* %scan.0, i64 0, i32 0
  %106 = load i8* %flags447, align 1, !tbaa !1
  %107 = and i8 %106, 34
  %108 = icmp eq i8 %107, 34
  br i1 %108, label %land.lhs.true456, label %do_no.preheader

land.lhs.true456:                                 ; preds = %land.lhs.true446
  %109 = load i8** @PL_regeol, align 8, !tbaa !3
  %add.ptr457 = getelementptr inbounds i8* %locinput.0, i64 1
  %cmp458 = icmp ugt i8* %109, %add.ptr457
  br i1 %cmp458, label %land.lhs.true460, label %do_no.preheader

land.lhs.true460:                                 ; preds = %land.lhs.true456
  %110 = load i8* %locinput.0, align 1, !tbaa !1
  %conv462 = sext i8 %110 to i32
  %.off5561 = add i8 %110, -65
  %111 = icmp ult i8 %.off5561, 26
  %add473 = add nsw i32 %conv462, 32
  %add473.conv462 = select i1 %111, i32 %add473, i32 %conv462
  %cmp479 = icmp eq i32 %add473.conv462, 115
  br i1 %cmp479, label %land.lhs.true481, label %do_no.preheader

land.lhs.true481:                                 ; preds = %land.lhs.true460
  %112 = load i8* %add.ptr457, align 1, !tbaa !1
  %conv483 = sext i8 %112 to i32
  %.off5562 = add i8 %112, -65
  %113 = icmp ult i8 %.off5562, 26
  %add494 = add nsw i32 %conv483, 32
  %add494.conv483 = select i1 %113, i32 %add494, i32 %conv483
  %cmp500 = icmp eq i32 %add494.conv483, 115
  br i1 %cmp500, label %if.then502, label %do_no.preheader

if.then502:                                       ; preds = %land.lhs.true481
  %add.ptr503 = getelementptr inbounds i8* %locinput.0, i64 2
  %114 = load i8* %add.ptr503, align 1, !tbaa !1
  %conv504 = zext i8 %114 to i32
  br label %while.cond

sw.bb507:                                         ; preds = %while.body
  %115 = load i32* @PL_reg_flags, align 4, !tbaa !0
  %or508 = or i32 %115, 1
  store i32 %or508, i32* @PL_reg_flags, align 4, !tbaa !0
  br label %sw.bb509

sw.bb509:                                         ; preds = %while.body, %sw.bb507
  %tobool510 = icmp eq i32 %nextchr.0, 0
  br i1 %tobool510, label %do_no.preheader, label %if.end512

if.end512:                                        ; preds = %sw.bb509
  br i1 %tobool82, label %if.end566, label %if.then514

if.then514:                                       ; preds = %if.end512
  %116 = load %struct.sv** @PL_utf8_alnum, align 8, !tbaa !3
  %tobool515 = icmp eq %struct.sv* %116, null
  br i1 %tobool515, label %if.then516, label %if.end518

if.then516:                                       ; preds = %if.then514
  call void @Perl_push_scope() #6
  call void @Perl_save_re_context() #6
  %call517 = call signext i8 @Perl_is_utf8_alnum(i8* getelementptr inbounds ([2 x i8]* @.str4, i64 0, i64 0)) #6
  call void @Perl_pop_scope() #6
  br label %if.end518

if.end518:                                        ; preds = %if.then514, %if.then516
  %117 = load i8* %type, align 1, !tbaa !1
  %cmp521 = icmp eq i8 %117, 18
  br i1 %cmp521, label %cond.true523, label %cond.false526

cond.true523:                                     ; preds = %if.end518
  %118 = load %struct.sv** @PL_utf8_alnum, align 8, !tbaa !3
  %call524 = call i64 @Perl_swash_fetch(%struct.sv* %118, i8* %locinput.0, i8 signext %1) #6
  %tobool525 = icmp eq i64 %call524, 0
  br i1 %tobool525, label %do_no.preheader, label %if.end559

cond.false526:                                    ; preds = %if.end518
  %call527 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  %cmp528 = icmp ult i64 %call527, 256
  %call531 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  br i1 %cmp528, label %cond.true530, label %cond.false550

cond.true530:                                     ; preds = %cond.false526
  %cmp533 = icmp ult i64 %call531, 128
  br i1 %cmp533, label %land.rhs535, label %land.end549

land.rhs535:                                      ; preds = %cond.true530
  %call536 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  %sext5451 = shl i64 %call536, 32
  %idxprom538 = ashr exact i64 %sext5451, 32
  %call539 = call i16** @__ctype_b_loc() #6
  %119 = load i16** %call539, align 8, !tbaa !3
  %arrayidx540 = getelementptr inbounds i16* %119, i64 %idxprom538
  %120 = load i16* %arrayidx540, align 2, !tbaa !5
  %and542 = and i16 %120, 8
  %tobool543 = icmp eq i16 %and542, 0
  br i1 %tobool543, label %lor.rhs544, label %land.end549

lor.rhs544:                                       ; preds = %land.rhs535
  %call545 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  %cmp546 = icmp eq i64 %call545, 95
  br label %land.end549

land.end549:                                      ; preds = %land.rhs535, %lor.rhs544, %cond.true530
  %121 = phi i1 [ false, %cond.true530 ], [ true, %land.rhs535 ], [ %cmp546, %lor.rhs544 ]
  %land.ext = zext i1 %121 to i64
  br label %cond.end554

cond.false550:                                    ; preds = %cond.false526
  %call552 = call signext i8 @Perl_is_uni_alnum_lc(i64 %call531) #6
  %conv553 = sext i8 %call552 to i64
  br label %cond.end554

cond.end554:                                      ; preds = %cond.false550, %land.end549
  %cond555 = phi i64 [ %land.ext, %land.end549 ], [ %conv553, %cond.false550 ]
  %tobool557 = icmp eq i64 %cond555, 0
  br i1 %tobool557, label %do_no.preheader, label %if.end559

if.end559:                                        ; preds = %cond.true523, %cond.end554
  %idxprom560 = sext i32 %nextchr.0 to i64
  %arrayidx561 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom560
  %122 = load i8* %arrayidx561, align 1, !tbaa !1
  %idx.ext563 = zext i8 %122 to i64
  %add.ptr564 = getelementptr inbounds i8* %locinput.0, i64 %idx.ext563
  %123 = load i8* %add.ptr564, align 1, !tbaa !1
  %conv565 = zext i8 %123 to i32
  br label %while.cond

if.end566:                                        ; preds = %if.end512
  %124 = load i8* %type, align 1, !tbaa !1
  %cmp569 = icmp eq i8 %124, 18
  br i1 %cmp569, label %cond.true571, label %cond.false592

cond.true571:                                     ; preds = %if.end566
  %nextchr.0.off5448 = add i32 %nextchr.0, -65
  %125 = icmp ult i32 %nextchr.0.off5448, 26
  %nextchr.0.off5449 = add i32 %nextchr.0, -97
  %126 = icmp ult i32 %nextchr.0.off5449, 26
  %or.cond5476 = or i1 %125, %126
  br i1 %or.cond5476, label %if.end607, label %lor.lhs.false583

lor.lhs.false583:                                 ; preds = %cond.true571
  %nextchr.0.off5450 = add i32 %nextchr.0, -48
  %127 = icmp ult i32 %nextchr.0.off5450, 10
  %cmp590 = icmp eq i32 %nextchr.0, 95
  %or.cond4331 = or i1 %127, %cmp590
  br i1 %or.cond4331, label %if.end607, label %do_no.preheader

cond.false592:                                    ; preds = %if.end566
  %cmp594 = icmp ult i32 %nextchr.0, 128
  br i1 %cmp594, label %land.lhs.true596, label %do_no.preheader

land.lhs.true596:                                 ; preds = %cond.false592
  %idxprom597 = sext i32 %nextchr.0 to i64
  %call598 = call i16** @__ctype_b_loc() #6
  %128 = load i16** %call598, align 8, !tbaa !3
  %arrayidx599 = getelementptr inbounds i16* %128, i64 %idxprom597
  %129 = load i16* %arrayidx599, align 2, !tbaa !5
  %and601 = and i16 %129, 8
  %tobool602 = icmp ne i16 %and601, 0
  %cmp604 = icmp eq i32 %nextchr.0, 95
  %or.cond5477 = or i1 %tobool602, %cmp604
  br i1 %or.cond5477, label %if.end607, label %do_no.preheader

if.end607:                                        ; preds = %land.lhs.true596, %lor.lhs.false583, %cond.true571
  %incdec.ptr608 = getelementptr inbounds i8* %locinput.0, i64 1
  %130 = load i8* %incdec.ptr608, align 1, !tbaa !1
  %conv609 = zext i8 %130 to i32
  br label %while.cond

sw.bb610:                                         ; preds = %while.body
  %131 = load i32* @PL_reg_flags, align 4, !tbaa !0
  %or611 = or i32 %131, 1
  store i32 %or611, i32* @PL_reg_flags, align 4, !tbaa !0
  br label %sw.bb612

sw.bb612:                                         ; preds = %while.body, %sw.bb610
  %tobool613 = icmp ne i32 %nextchr.0, 0
  %132 = load i8** @PL_regeol, align 8, !tbaa !3
  %cmp615 = icmp ult i8* %locinput.0, %132
  %or.cond5478 = or i1 %tobool613, %cmp615
  br i1 %or.cond5478, label %if.end618, label %do_no.preheader

if.end618:                                        ; preds = %sw.bb612
  br i1 %tobool82, label %if.end673, label %if.then620

if.then620:                                       ; preds = %if.end618
  %133 = load %struct.sv** @PL_utf8_alnum, align 8, !tbaa !3
  %tobool621 = icmp eq %struct.sv* %133, null
  br i1 %tobool621, label %if.then622, label %if.end624

if.then622:                                       ; preds = %if.then620
  call void @Perl_push_scope() #6
  call void @Perl_save_re_context() #6
  %call623 = call signext i8 @Perl_is_utf8_alnum(i8* getelementptr inbounds ([2 x i8]* @.str4, i64 0, i64 0)) #6
  call void @Perl_pop_scope() #6
  br label %if.end624

if.end624:                                        ; preds = %if.then620, %if.then622
  %134 = load i8* %type, align 1, !tbaa !1
  %cmp627 = icmp eq i8 %134, 20
  br i1 %cmp627, label %cond.true629, label %cond.false632

cond.true629:                                     ; preds = %if.end624
  %135 = load %struct.sv** @PL_utf8_alnum, align 8, !tbaa !3
  %call630 = call i64 @Perl_swash_fetch(%struct.sv* %135, i8* %locinput.0, i8 signext %1) #6
  %tobool631 = icmp eq i64 %call630, 0
  br i1 %tobool631, label %if.end666, label %do_no.preheader

cond.false632:                                    ; preds = %if.end624
  %call633 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  %cmp634 = icmp ult i64 %call633, 256
  %call637 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  br i1 %cmp634, label %cond.true636, label %cond.false657

cond.true636:                                     ; preds = %cond.false632
  %cmp639 = icmp ult i64 %call637, 128
  br i1 %cmp639, label %land.rhs641, label %land.end655

land.rhs641:                                      ; preds = %cond.true636
  %call642 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  %sext5447 = shl i64 %call642, 32
  %idxprom644 = ashr exact i64 %sext5447, 32
  %call645 = call i16** @__ctype_b_loc() #6
  %136 = load i16** %call645, align 8, !tbaa !3
  %arrayidx646 = getelementptr inbounds i16* %136, i64 %idxprom644
  %137 = load i16* %arrayidx646, align 2, !tbaa !5
  %and648 = and i16 %137, 8
  %tobool649 = icmp eq i16 %and648, 0
  br i1 %tobool649, label %lor.rhs650, label %land.end655

lor.rhs650:                                       ; preds = %land.rhs641
  %call651 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  %cmp652 = icmp eq i64 %call651, 95
  br label %land.end655

land.end655:                                      ; preds = %land.rhs641, %lor.rhs650, %cond.true636
  %138 = phi i1 [ false, %cond.true636 ], [ true, %land.rhs641 ], [ %cmp652, %lor.rhs650 ]
  %land.ext656 = zext i1 %138 to i64
  br label %cond.end661

cond.false657:                                    ; preds = %cond.false632
  %call659 = call signext i8 @Perl_is_uni_alnum_lc(i64 %call637) #6
  %conv660 = sext i8 %call659 to i64
  br label %cond.end661

cond.end661:                                      ; preds = %cond.false657, %land.end655
  %cond662 = phi i64 [ %land.ext656, %land.end655 ], [ %conv660, %cond.false657 ]
  %tobool664 = icmp eq i64 %cond662, 0
  br i1 %tobool664, label %if.end666, label %do_no.preheader

if.end666:                                        ; preds = %cond.true629, %cond.end661
  %idxprom667 = sext i32 %nextchr.0 to i64
  %arrayidx668 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom667
  %139 = load i8* %arrayidx668, align 1, !tbaa !1
  %idx.ext670 = zext i8 %139 to i64
  %add.ptr671 = getelementptr inbounds i8* %locinput.0, i64 %idx.ext670
  %140 = load i8* %add.ptr671, align 1, !tbaa !1
  %conv672 = zext i8 %140 to i32
  br label %while.cond

if.end673:                                        ; preds = %if.end618
  %141 = load i8* %type, align 1, !tbaa !1
  %cmp676 = icmp eq i8 %141, 20
  br i1 %cmp676, label %cond.true678, label %cond.false699

cond.true678:                                     ; preds = %if.end673
  %nextchr.0.off5444 = add i32 %nextchr.0, -65
  %142 = icmp ult i32 %nextchr.0.off5444, 26
  %nextchr.0.off5445 = add i32 %nextchr.0, -97
  %143 = icmp ult i32 %nextchr.0.off5445, 26
  %or.cond5480 = or i1 %142, %143
  br i1 %or.cond5480, label %do_no.preheader, label %lor.lhs.false690

lor.lhs.false690:                                 ; preds = %cond.true678
  %nextchr.0.off5446 = add i32 %nextchr.0, -48
  %144 = icmp ult i32 %nextchr.0.off5446, 10
  %cmp697 = icmp eq i32 %nextchr.0, 95
  %or.cond4335 = or i1 %144, %cmp697
  br i1 %or.cond4335, label %do_no.preheader, label %if.end714

cond.false699:                                    ; preds = %if.end673
  %cmp701 = icmp ult i32 %nextchr.0, 128
  br i1 %cmp701, label %land.lhs.true703, label %if.end714

land.lhs.true703:                                 ; preds = %cond.false699
  %idxprom704 = sext i32 %nextchr.0 to i64
  %call705 = call i16** @__ctype_b_loc() #6
  %145 = load i16** %call705, align 8, !tbaa !3
  %arrayidx706 = getelementptr inbounds i16* %145, i64 %idxprom704
  %146 = load i16* %arrayidx706, align 2, !tbaa !5
  %and708 = and i16 %146, 8
  %tobool709 = icmp ne i16 %and708, 0
  %cmp711 = icmp eq i32 %nextchr.0, 95
  %or.cond5481 = or i1 %tobool709, %cmp711
  br i1 %or.cond5481, label %do_no.preheader, label %if.end714

if.end714:                                        ; preds = %land.lhs.true703, %lor.lhs.false690, %cond.false699
  %incdec.ptr715 = getelementptr inbounds i8* %locinput.0, i64 1
  %147 = load i8* %incdec.ptr715, align 1, !tbaa !1
  %conv716 = zext i8 %147 to i32
  br label %while.cond

sw.bb717:                                         ; preds = %while.body, %while.body
  %148 = load i32* @PL_reg_flags, align 4, !tbaa !0
  %or718 = or i32 %148, 1
  store i32 %or718, i32* @PL_reg_flags, align 4, !tbaa !0
  br label %sw.bb719

sw.bb719:                                         ; preds = %while.body, %while.body, %sw.bb717
  %149 = load i8** @PL_bostr, align 8, !tbaa !3
  %cmp810 = icmp eq i8* %locinput.0, %149
  br i1 %tobool82, label %if.else809, label %if.then721

if.then721:                                       ; preds = %sw.bb719
  br i1 %cmp810, label %if.end732, label %if.else725

if.else725:                                       ; preds = %if.then721
  %call726 = call fastcc i8* @S_reghop3(i8* %locinput.0, i32 -1, i8* %149) #5
  %150 = load i8* %call726, align 1, !tbaa !1
  %idxprom727 = zext i8 %150 to i64
  %arrayidx728 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom727
  %151 = load i8* %arrayidx728, align 1, !tbaa !1
  %conv729 = zext i8 %151 to i64
  %call730 = call i64 @Perl_utf8n_to_uvuni(i8* %call726, i64 %conv729, i64* null, i32 0) #6
  %conv731 = trunc i64 %call730 to i32
  br label %if.end732

if.end732:                                        ; preds = %if.then721, %if.else725
  %ln.1 = phi i32 [ %conv731, %if.else725 ], [ 10, %if.then721 ]
  %152 = load i8* %type, align 1, !tbaa !1
  switch i8 %152, label %if.else752 [
    i8 9, label %if.then742
    i8 11, label %if.then742
  ]

if.then742:                                       ; preds = %if.end732, %if.end732
  %conv743 = sext i32 %ln.1 to i64
  %call744 = call signext i8 @Perl_is_uni_alnum(i64 %conv743) #6
  %conv745 = sext i8 %call744 to i32
  %153 = load %struct.sv** @PL_utf8_alnum, align 8, !tbaa !3
  %tobool746 = icmp eq %struct.sv* %153, null
  br i1 %tobool746, label %if.then747, label %if.end749

if.then747:                                       ; preds = %if.then742
  call void @Perl_push_scope() #6
  call void @Perl_save_re_context() #6
  %call748 = call signext i8 @Perl_is_utf8_alnum(i8* getelementptr inbounds ([2 x i8]* @.str4, i64 0, i64 0)) #6
  call void @Perl_pop_scope() #6
  %.pre5737 = load %struct.sv** @PL_utf8_alnum, align 8, !tbaa !3
  br label %if.end749

if.end749:                                        ; preds = %if.then742, %if.then747
  %154 = phi %struct.sv* [ %153, %if.then742 ], [ %.pre5737, %if.then747 ]
  %call750 = call i64 @Perl_swash_fetch(%struct.sv* %154, i8* %locinput.0, i8 signext %1) #6
  %conv751 = trunc i64 %call750 to i32
  br label %if.end907

if.else752:                                       ; preds = %if.end732
  %cmp753 = icmp slt i32 %ln.1, 256
  br i1 %cmp753, label %cond.true755, label %cond.false772

cond.true755:                                     ; preds = %if.else752
  %cmp757 = icmp ult i32 %ln.1, 128
  br i1 %cmp757, label %land.rhs759, label %land.end770

land.rhs759:                                      ; preds = %cond.true755
  %idxprom760 = sext i32 %ln.1 to i64
  %call761 = call i16** @__ctype_b_loc() #6
  %155 = load i16** %call761, align 8, !tbaa !3
  %arrayidx762 = getelementptr inbounds i16* %155, i64 %idxprom760
  %156 = load i16* %arrayidx762, align 2, !tbaa !5
  %and764 = and i16 %156, 8
  %cmp767 = icmp eq i32 %ln.1, 95
  %not.tobool765 = icmp ne i16 %and764, 0
  %cmp767. = or i1 %cmp767, %not.tobool765
  br label %land.end770

land.end770:                                      ; preds = %land.rhs759, %cond.true755
  %157 = phi i1 [ false, %cond.true755 ], [ %cmp767., %land.rhs759 ]
  %land.ext771 = zext i1 %157 to i32
  br label %cond.end776

cond.false772:                                    ; preds = %if.else752
  %conv773 = sext i32 %ln.1 to i64
  %call774 = call signext i8 @Perl_is_uni_alnum_lc(i64 %conv773) #6
  %conv775 = sext i8 %call774 to i32
  br label %cond.end776

cond.end776:                                      ; preds = %cond.false772, %land.end770
  %cond777 = phi i32 [ %land.ext771, %land.end770 ], [ %conv775, %cond.false772 ]
  %call778 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  %cmp779 = icmp ult i64 %call778, 256
  %call782 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  br i1 %cmp779, label %cond.true781, label %cond.false802

cond.true781:                                     ; preds = %cond.end776
  %cmp784 = icmp ult i64 %call782, 128
  br i1 %cmp784, label %land.rhs786, label %land.end800

land.rhs786:                                      ; preds = %cond.true781
  %call787 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  %sext5443 = shl i64 %call787, 32
  %idxprom789 = ashr exact i64 %sext5443, 32
  %call790 = call i16** @__ctype_b_loc() #6
  %158 = load i16** %call790, align 8, !tbaa !3
  %arrayidx791 = getelementptr inbounds i16* %158, i64 %idxprom789
  %159 = load i16* %arrayidx791, align 2, !tbaa !5
  %and793 = and i16 %159, 8
  %tobool794 = icmp eq i16 %and793, 0
  br i1 %tobool794, label %lor.rhs795, label %land.end800

lor.rhs795:                                       ; preds = %land.rhs786
  %call796 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  %cmp797 = icmp eq i64 %call796, 95
  br label %land.end800

land.end800:                                      ; preds = %land.rhs786, %lor.rhs795, %cond.true781
  %160 = phi i1 [ false, %cond.true781 ], [ true, %land.rhs786 ], [ %cmp797, %lor.rhs795 ]
  %land.ext801 = zext i1 %160 to i32
  br label %if.end907

cond.false802:                                    ; preds = %cond.end776
  %call804 = call signext i8 @Perl_is_uni_alnum_lc(i64 %call782) #6
  %conv805 = sext i8 %call804 to i32
  br label %if.end907

if.else809:                                       ; preds = %sw.bb719
  br i1 %cmp810, label %cond.end816, label %cond.true812

cond.true812:                                     ; preds = %if.else809
  %add.ptr813 = getelementptr inbounds i8* %locinput.0, i64 -1
  %161 = load i8* %add.ptr813, align 1, !tbaa !1
  %conv814 = zext i8 %161 to i32
  br label %cond.end816

cond.end816:                                      ; preds = %if.else809, %cond.true812
  %cond817 = phi i32 [ %conv814, %cond.true812 ], [ 10, %if.else809 ]
  %162 = load i8* %type, align 1, !tbaa !1
  switch i8 %162, label %if.else871 [
    i8 9, label %if.then827
    i8 11, label %if.then827
  ]

if.then827:                                       ; preds = %cond.end816, %cond.end816
  %cond817.off = add i32 %cond817, -65
  %163 = icmp ult i32 %cond817.off, 26
  %cond817.off5438 = add i32 %cond817, -97
  %164 = icmp ult i32 %cond817.off5438, 26
  %or.cond5483 = or i1 %163, %164
  %cond817.off5439 = add i32 %cond817, -48
  %165 = icmp ult i32 %cond817.off5439, 10
  %or.cond5485 = or i1 %or.cond5483, %165
  %cmp846 = icmp eq i32 %cond817, 95
  %.cmp846 = or i1 %or.cond5485, %cmp846
  %lor.ext = zext i1 %.cmp846 to i32
  %nextchr.0.off5440 = add i32 %nextchr.0, -65
  %166 = icmp ult i32 %nextchr.0.off5440, 26
  %nextchr.0.off5441 = add i32 %nextchr.0, -97
  %167 = icmp ult i32 %nextchr.0.off5441, 26
  %or.cond5487 = or i1 %166, %167
  %nextchr.0.off5442 = add i32 %nextchr.0, -48
  %168 = icmp ult i32 %nextchr.0.off5442, 10
  %or.cond5489 = or i1 %or.cond5487, %168
  %cmp867 = icmp eq i32 %nextchr.0, 95
  %.cmp867 = or i1 %or.cond5489, %cmp867
  %lor.ext870 = zext i1 %.cmp867 to i32
  br label %if.end907

if.else871:                                       ; preds = %cond.end816
  %and872 = and i32 %cond817, 128
  %cmp873 = icmp eq i32 %and872, 0
  br i1 %cmp873, label %land.rhs875, label %land.end887

land.rhs875:                                      ; preds = %if.else871
  %idxprom8765437 = zext i32 %cond817 to i64
  %call877 = call i16** @__ctype_b_loc() #6
  %169 = load i16** %call877, align 8, !tbaa !3
  %arrayidx878 = getelementptr inbounds i16* %169, i64 %idxprom8765437
  %170 = load i16* %arrayidx878, align 2, !tbaa !5
  %and880 = and i16 %170, 8
  %cmp883 = icmp eq i32 %cond817, 95
  %not.tobool881 = icmp ne i16 %and880, 0
  %cmp883. = or i1 %cmp883, %not.tobool881
  br label %land.end887

land.end887:                                      ; preds = %land.rhs875, %if.else871
  %171 = phi i1 [ false, %if.else871 ], [ %cmp883., %land.rhs875 ]
  %land.ext888 = zext i1 %171 to i32
  %cmp890 = icmp ult i32 %nextchr.0, 128
  br i1 %cmp890, label %land.rhs892, label %land.end904

land.rhs892:                                      ; preds = %land.end887
  %idxprom893 = sext i32 %nextchr.0 to i64
  %call894 = call i16** @__ctype_b_loc() #6
  %172 = load i16** %call894, align 8, !tbaa !3
  %arrayidx895 = getelementptr inbounds i16* %172, i64 %idxprom893
  %173 = load i16* %arrayidx895, align 2, !tbaa !5
  %and897 = and i16 %173, 8
  %cmp900 = icmp eq i32 %nextchr.0, 95
  %not.tobool898 = icmp ne i16 %and897, 0
  %cmp900. = or i1 %cmp900, %not.tobool898
  br label %land.end904

land.end904:                                      ; preds = %land.rhs892, %land.end887
  %174 = phi i1 [ false, %land.end887 ], [ %cmp900., %land.rhs892 ]
  %land.ext905 = zext i1 %174 to i32
  br label %if.end907

if.end907:                                        ; preds = %land.end800, %cond.false802, %if.then827, %land.end904, %if.end749
  %ln.2 = phi i32 [ %conv745, %if.end749 ], [ %lor.ext, %if.then827 ], [ %land.ext888, %land.end904 ], [ %cond777, %cond.false802 ], [ %cond777, %land.end800 ]
  %n.0 = phi i32 [ %conv751, %if.end749 ], [ %lor.ext870, %if.then827 ], [ %land.ext905, %land.end904 ], [ %conv805, %cond.false802 ], [ %land.ext801, %land.end800 ]
  %lnot = icmp eq i32 %ln.2, 0
  %lnot910 = icmp eq i32 %n.0, 0
  %cmp912tmp = xor i1 %lnot, %lnot910
  %175 = zext i1 %cmp912tmp to i32
  %conv913 = xor i32 %175, 1
  %176 = load i8* %type, align 1, !tbaa !1
  %.off5560 = add i8 %176, -9
  %177 = icmp ult i8 %.off5560, 2
  %lor.ext924 = zext i1 %177 to i32
  %cmp925 = icmp eq i32 %conv913, %lor.ext924
  br i1 %cmp925, label %do_no.preheader, label %while.cond

sw.bb929:                                         ; preds = %while.body
  %178 = load i32* @PL_reg_flags, align 4, !tbaa !0
  %or930 = or i32 %178, 1
  store i32 %or930, i32* @PL_reg_flags, align 4, !tbaa !0
  br label %sw.bb931

sw.bb931:                                         ; preds = %while.body, %sw.bb929
  %tobool932 = icmp eq i32 %nextchr.0, 0
  br i1 %tobool932, label %do_no.preheader, label %if.end934

if.end934:                                        ; preds = %sw.bb931
  br i1 %tobool82, label %if.else1024, label %if.then936

if.then936:                                       ; preds = %if.end934
  %and939 = and i32 %nextchr.0, 128
  %tobool940 = icmp eq i32 %and939, 0
  br i1 %tobool940, label %if.end989, label %if.then941

if.then941:                                       ; preds = %if.then936
  %179 = load %struct.sv** @PL_utf8_space, align 8, !tbaa !3
  %tobool942 = icmp eq %struct.sv* %179, null
  br i1 %tobool942, label %if.then943, label %if.end945

if.then943:                                       ; preds = %if.then941
  call void @Perl_push_scope() #6
  call void @Perl_save_re_context() #6
  %call944 = call signext i8 @Perl_is_utf8_space(i8* getelementptr inbounds ([2 x i8]* @.str5, i64 0, i64 0)) #6
  call void @Perl_pop_scope() #6
  br label %if.end945

if.end945:                                        ; preds = %if.then941, %if.then943
  %180 = load i8* %type, align 1, !tbaa !1
  %cmp948 = icmp eq i8 %180, 22
  br i1 %cmp948, label %cond.true950, label %cond.false953

cond.true950:                                     ; preds = %if.end945
  %181 = load %struct.sv** @PL_utf8_space, align 8, !tbaa !3
  %call951 = call i64 @Perl_swash_fetch(%struct.sv* %181, i8* %locinput.0, i8 signext %1) #6
  %tobool952 = icmp eq i64 %call951, 0
  br i1 %tobool952, label %do_no.preheader, label %if.end982

cond.false953:                                    ; preds = %if.end945
  %call954 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  %cmp955 = icmp ult i64 %call954, 256
  %call958 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  br i1 %cmp955, label %cond.true957, label %cond.false973

cond.true957:                                     ; preds = %cond.false953
  %cmp960 = icmp ult i64 %call958, 128
  br i1 %cmp960, label %land.rhs962, label %land.end971

land.rhs962:                                      ; preds = %cond.true957
  %call963 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  %sext5436 = shl i64 %call963, 32
  %idxprom965 = ashr exact i64 %sext5436, 32
  %call966 = call i16** @__ctype_b_loc() #6
  %182 = load i16** %call966, align 8, !tbaa !3
  %arrayidx967 = getelementptr inbounds i16* %182, i64 %idxprom965
  %183 = load i16* %arrayidx967, align 2, !tbaa !5
  %and969 = and i16 %183, 8192
  %tobool970 = icmp ne i16 %and969, 0
  br label %land.end971

land.end971:                                      ; preds = %land.rhs962, %cond.true957
  %184 = phi i1 [ false, %cond.true957 ], [ %tobool970, %land.rhs962 ]
  %land.ext972 = zext i1 %184 to i64
  br label %cond.end977

cond.false973:                                    ; preds = %cond.false953
  %call975 = call signext i8 @Perl_is_uni_space_lc(i64 %call958) #6
  %conv976 = sext i8 %call975 to i64
  br label %cond.end977

cond.end977:                                      ; preds = %cond.false973, %land.end971
  %cond978 = phi i64 [ %land.ext972, %land.end971 ], [ %conv976, %cond.false973 ]
  %tobool980 = icmp eq i64 %cond978, 0
  br i1 %tobool980, label %do_no.preheader, label %if.end982

if.end982:                                        ; preds = %cond.true950, %cond.end977
  %idxprom983 = sext i32 %nextchr.0 to i64
  %arrayidx984 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom983
  %185 = load i8* %arrayidx984, align 1, !tbaa !1
  %idx.ext986 = zext i8 %185 to i64
  %add.ptr987 = getelementptr inbounds i8* %locinput.0, i64 %idx.ext986
  %186 = load i8* %add.ptr987, align 1, !tbaa !1
  %conv988 = zext i8 %186 to i32
  br label %while.cond

if.end989:                                        ; preds = %if.then936
  %187 = load i8* %type, align 1, !tbaa !1
  %cmp992 = icmp eq i8 %187, 22
  br i1 %cmp992, label %cond.true994, label %cond.false1009

cond.true994:                                     ; preds = %if.end989
  switch i32 %nextchr.0, label %do_no.preheader [
    i32 32, label %if.end1021
    i32 13, label %if.end1021
    i32 12, label %if.end1021
    i32 10, label %if.end1021
    i32 9, label %if.end1021
  ]

cond.false1009:                                   ; preds = %if.end989
  %cmp1011 = icmp ult i32 %nextchr.0, 128
  br i1 %cmp1011, label %land.lhs.true1013, label %do_no.preheader

land.lhs.true1013:                                ; preds = %cond.false1009
  %idxprom1014 = sext i32 %nextchr.0 to i64
  %call1015 = call i16** @__ctype_b_loc() #6
  %188 = load i16** %call1015, align 8, !tbaa !3
  %arrayidx1016 = getelementptr inbounds i16* %188, i64 %idxprom1014
  %189 = load i16* %arrayidx1016, align 2, !tbaa !5
  %and1018 = and i16 %189, 8192
  %tobool1019 = icmp eq i16 %and1018, 0
  br i1 %tobool1019, label %do_no.preheader, label %if.end1021

if.end1021:                                       ; preds = %cond.true994, %cond.true994, %cond.true994, %cond.true994, %cond.true994, %land.lhs.true1013
  %incdec.ptr1022 = getelementptr inbounds i8* %locinput.0, i64 1
  %190 = load i8* %incdec.ptr1022, align 1, !tbaa !1
  %conv1023 = zext i8 %190 to i32
  br label %while.cond

if.else1024:                                      ; preds = %if.end934
  %191 = load i8* %type, align 1, !tbaa !1
  %cmp1027 = icmp eq i8 %191, 22
  br i1 %cmp1027, label %cond.true1029, label %cond.false1044

cond.true1029:                                    ; preds = %if.else1024
  switch i32 %nextchr.0, label %do_no.preheader [
    i32 32, label %if.end1056
    i32 13, label %if.end1056
    i32 12, label %if.end1056
    i32 10, label %if.end1056
    i32 9, label %if.end1056
  ]

cond.false1044:                                   ; preds = %if.else1024
  %cmp1046 = icmp ult i32 %nextchr.0, 128
  br i1 %cmp1046, label %land.lhs.true1048, label %do_no.preheader

land.lhs.true1048:                                ; preds = %cond.false1044
  %idxprom1049 = sext i32 %nextchr.0 to i64
  %call1050 = call i16** @__ctype_b_loc() #6
  %192 = load i16** %call1050, align 8, !tbaa !3
  %arrayidx1051 = getelementptr inbounds i16* %192, i64 %idxprom1049
  %193 = load i16* %arrayidx1051, align 2, !tbaa !5
  %and1053 = and i16 %193, 8192
  %tobool1054 = icmp eq i16 %and1053, 0
  br i1 %tobool1054, label %do_no.preheader, label %if.end1056

if.end1056:                                       ; preds = %cond.true1029, %cond.true1029, %cond.true1029, %cond.true1029, %cond.true1029, %land.lhs.true1048
  %incdec.ptr1057 = getelementptr inbounds i8* %locinput.0, i64 1
  %194 = load i8* %incdec.ptr1057, align 1, !tbaa !1
  %conv1058 = zext i8 %194 to i32
  br label %while.cond

sw.bb1060:                                        ; preds = %while.body
  %195 = load i32* @PL_reg_flags, align 4, !tbaa !0
  %or1061 = or i32 %195, 1
  store i32 %or1061, i32* @PL_reg_flags, align 4, !tbaa !0
  br label %sw.bb1062

sw.bb1062:                                        ; preds = %while.body, %sw.bb1060
  %tobool1063 = icmp ne i32 %nextchr.0, 0
  %196 = load i8** @PL_regeol, align 8, !tbaa !3
  %cmp1065 = icmp ult i8* %locinput.0, %196
  %or.cond5490 = or i1 %tobool1063, %cmp1065
  br i1 %or.cond5490, label %if.end1068, label %do_no.preheader

if.end1068:                                       ; preds = %sw.bb1062
  br i1 %tobool82, label %if.end1118, label %if.then1070

if.then1070:                                      ; preds = %if.end1068
  %197 = load %struct.sv** @PL_utf8_space, align 8, !tbaa !3
  %tobool1071 = icmp eq %struct.sv* %197, null
  br i1 %tobool1071, label %if.then1072, label %if.end1074

if.then1072:                                      ; preds = %if.then1070
  call void @Perl_push_scope() #6
  call void @Perl_save_re_context() #6
  %call1073 = call signext i8 @Perl_is_utf8_space(i8* getelementptr inbounds ([2 x i8]* @.str5, i64 0, i64 0)) #6
  call void @Perl_pop_scope() #6
  br label %if.end1074

if.end1074:                                       ; preds = %if.then1070, %if.then1072
  %198 = load i8* %type, align 1, !tbaa !1
  %cmp1077 = icmp eq i8 %198, 24
  br i1 %cmp1077, label %cond.true1079, label %cond.false1082

cond.true1079:                                    ; preds = %if.end1074
  %199 = load %struct.sv** @PL_utf8_space, align 8, !tbaa !3
  %call1080 = call i64 @Perl_swash_fetch(%struct.sv* %199, i8* %locinput.0, i8 signext %1) #6
  %tobool1081 = icmp eq i64 %call1080, 0
  br i1 %tobool1081, label %if.end1111, label %do_no.preheader

cond.false1082:                                   ; preds = %if.end1074
  %call1083 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  %cmp1084 = icmp ult i64 %call1083, 256
  %call1087 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  br i1 %cmp1084, label %cond.true1086, label %cond.false1102

cond.true1086:                                    ; preds = %cond.false1082
  %cmp1089 = icmp ult i64 %call1087, 128
  br i1 %cmp1089, label %land.rhs1091, label %land.end1100

land.rhs1091:                                     ; preds = %cond.true1086
  %call1092 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  %sext5435 = shl i64 %call1092, 32
  %idxprom1094 = ashr exact i64 %sext5435, 32
  %call1095 = call i16** @__ctype_b_loc() #6
  %200 = load i16** %call1095, align 8, !tbaa !3
  %arrayidx1096 = getelementptr inbounds i16* %200, i64 %idxprom1094
  %201 = load i16* %arrayidx1096, align 2, !tbaa !5
  %and1098 = and i16 %201, 8192
  %tobool1099 = icmp ne i16 %and1098, 0
  br label %land.end1100

land.end1100:                                     ; preds = %land.rhs1091, %cond.true1086
  %202 = phi i1 [ false, %cond.true1086 ], [ %tobool1099, %land.rhs1091 ]
  %land.ext1101 = zext i1 %202 to i64
  br label %cond.end1106

cond.false1102:                                   ; preds = %cond.false1082
  %call1104 = call signext i8 @Perl_is_uni_space_lc(i64 %call1087) #6
  %conv1105 = sext i8 %call1104 to i64
  br label %cond.end1106

cond.end1106:                                     ; preds = %cond.false1102, %land.end1100
  %cond1107 = phi i64 [ %land.ext1101, %land.end1100 ], [ %conv1105, %cond.false1102 ]
  %tobool1109 = icmp eq i64 %cond1107, 0
  br i1 %tobool1109, label %if.end1111, label %do_no.preheader

if.end1111:                                       ; preds = %cond.true1079, %cond.end1106
  %idxprom1112 = sext i32 %nextchr.0 to i64
  %arrayidx1113 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1112
  %203 = load i8* %arrayidx1113, align 1, !tbaa !1
  %idx.ext1115 = zext i8 %203 to i64
  %add.ptr1116 = getelementptr inbounds i8* %locinput.0, i64 %idx.ext1115
  %204 = load i8* %add.ptr1116, align 1, !tbaa !1
  %conv1117 = zext i8 %204 to i32
  br label %while.cond

if.end1118:                                       ; preds = %if.end1068
  %205 = load i8* %type, align 1, !tbaa !1
  %cmp1121 = icmp eq i8 %205, 24
  br i1 %cmp1121, label %cond.true1123, label %cond.false1138

cond.true1123:                                    ; preds = %if.end1118
  switch i32 %nextchr.0, label %if.end1150 [
    i32 32, label %do_no.preheader
    i32 13, label %do_no.preheader
    i32 12, label %do_no.preheader
    i32 10, label %do_no.preheader
    i32 9, label %do_no.preheader
  ]

cond.false1138:                                   ; preds = %if.end1118
  %cmp1140 = icmp ult i32 %nextchr.0, 128
  br i1 %cmp1140, label %land.lhs.true1142, label %if.end1150

land.lhs.true1142:                                ; preds = %cond.false1138
  %idxprom1143 = sext i32 %nextchr.0 to i64
  %call1144 = call i16** @__ctype_b_loc() #6
  %206 = load i16** %call1144, align 8, !tbaa !3
  %arrayidx1145 = getelementptr inbounds i16* %206, i64 %idxprom1143
  %207 = load i16* %arrayidx1145, align 2, !tbaa !5
  %and1147 = and i16 %207, 8192
  %tobool1148 = icmp eq i16 %and1147, 0
  br i1 %tobool1148, label %if.end1150, label %do_no.preheader

if.end1150:                                       ; preds = %cond.true1123, %land.lhs.true1142, %cond.false1138
  %incdec.ptr1151 = getelementptr inbounds i8* %locinput.0, i64 1
  %208 = load i8* %incdec.ptr1151, align 1, !tbaa !1
  %conv1152 = zext i8 %208 to i32
  br label %while.cond

sw.bb1153:                                        ; preds = %while.body
  %209 = load i32* @PL_reg_flags, align 4, !tbaa !0
  %or1154 = or i32 %209, 1
  store i32 %or1154, i32* @PL_reg_flags, align 4, !tbaa !0
  br label %sw.bb1155

sw.bb1155:                                        ; preds = %while.body, %sw.bb1153
  %tobool1156 = icmp eq i32 %nextchr.0, 0
  br i1 %tobool1156, label %do_no.preheader, label %if.end1158

if.end1158:                                       ; preds = %sw.bb1155
  br i1 %tobool82, label %if.end1208, label %if.then1160

if.then1160:                                      ; preds = %if.end1158
  %210 = load %struct.sv** @PL_utf8_digit, align 8, !tbaa !3
  %tobool1161 = icmp eq %struct.sv* %210, null
  br i1 %tobool1161, label %if.then1162, label %if.end1164

if.then1162:                                      ; preds = %if.then1160
  call void @Perl_push_scope() #6
  call void @Perl_save_re_context() #6
  %call1163 = call signext i8 @Perl_is_utf8_digit(i8* getelementptr inbounds ([2 x i8]* @.str6, i64 0, i64 0)) #6
  call void @Perl_pop_scope() #6
  br label %if.end1164

if.end1164:                                       ; preds = %if.then1160, %if.then1162
  %211 = load i8* %type, align 1, !tbaa !1
  %cmp1167 = icmp eq i8 %211, 26
  br i1 %cmp1167, label %cond.true1169, label %cond.false1172

cond.true1169:                                    ; preds = %if.end1164
  %212 = load %struct.sv** @PL_utf8_digit, align 8, !tbaa !3
  %call1170 = call i64 @Perl_swash_fetch(%struct.sv* %212, i8* %locinput.0, i8 signext %1) #6
  %tobool1171 = icmp eq i64 %call1170, 0
  br i1 %tobool1171, label %do_no.preheader, label %if.end1201

cond.false1172:                                   ; preds = %if.end1164
  %call1173 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  %cmp1174 = icmp ult i64 %call1173, 256
  %call1177 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  br i1 %cmp1174, label %cond.true1176, label %cond.false1192

cond.true1176:                                    ; preds = %cond.false1172
  %cmp1179 = icmp ult i64 %call1177, 128
  br i1 %cmp1179, label %land.rhs1181, label %land.end1190

land.rhs1181:                                     ; preds = %cond.true1176
  %call1182 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  %sext5434 = shl i64 %call1182, 32
  %idxprom1184 = ashr exact i64 %sext5434, 32
  %call1185 = call i16** @__ctype_b_loc() #6
  %213 = load i16** %call1185, align 8, !tbaa !3
  %arrayidx1186 = getelementptr inbounds i16* %213, i64 %idxprom1184
  %214 = load i16* %arrayidx1186, align 2, !tbaa !5
  %and1188 = and i16 %214, 2048
  %tobool1189 = icmp ne i16 %and1188, 0
  br label %land.end1190

land.end1190:                                     ; preds = %land.rhs1181, %cond.true1176
  %215 = phi i1 [ false, %cond.true1176 ], [ %tobool1189, %land.rhs1181 ]
  %land.ext1191 = zext i1 %215 to i64
  br label %cond.end1196

cond.false1192:                                   ; preds = %cond.false1172
  %call1194 = call signext i8 @Perl_is_uni_digit_lc(i64 %call1177) #6
  %conv1195 = sext i8 %call1194 to i64
  br label %cond.end1196

cond.end1196:                                     ; preds = %cond.false1192, %land.end1190
  %cond1197 = phi i64 [ %land.ext1191, %land.end1190 ], [ %conv1195, %cond.false1192 ]
  %tobool1199 = icmp eq i64 %cond1197, 0
  br i1 %tobool1199, label %do_no.preheader, label %if.end1201

if.end1201:                                       ; preds = %cond.true1169, %cond.end1196
  %idxprom1202 = sext i32 %nextchr.0 to i64
  %arrayidx1203 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1202
  %216 = load i8* %arrayidx1203, align 1, !tbaa !1
  %idx.ext1205 = zext i8 %216 to i64
  %add.ptr1206 = getelementptr inbounds i8* %locinput.0, i64 %idx.ext1205
  %217 = load i8* %add.ptr1206, align 1, !tbaa !1
  %conv1207 = zext i8 %217 to i32
  br label %while.cond

if.end1208:                                       ; preds = %if.end1158
  %218 = load i8* %type, align 1, !tbaa !1
  %cmp1211 = icmp eq i8 %218, 26
  br i1 %cmp1211, label %cond.true1213, label %cond.false1219

cond.true1213:                                    ; preds = %if.end1208
  %nextchr.0.off5433 = add i32 %nextchr.0, -48
  %219 = icmp ult i32 %nextchr.0.off5433, 10
  br i1 %219, label %if.end1231, label %do_no.preheader

cond.false1219:                                   ; preds = %if.end1208
  %cmp1221 = icmp ult i32 %nextchr.0, 128
  br i1 %cmp1221, label %land.lhs.true1223, label %do_no.preheader

land.lhs.true1223:                                ; preds = %cond.false1219
  %idxprom1224 = sext i32 %nextchr.0 to i64
  %call1225 = call i16** @__ctype_b_loc() #6
  %220 = load i16** %call1225, align 8, !tbaa !3
  %arrayidx1226 = getelementptr inbounds i16* %220, i64 %idxprom1224
  %221 = load i16* %arrayidx1226, align 2, !tbaa !5
  %and1228 = and i16 %221, 2048
  %tobool1229 = icmp eq i16 %and1228, 0
  br i1 %tobool1229, label %do_no.preheader, label %if.end1231

if.end1231:                                       ; preds = %land.lhs.true1223, %cond.true1213
  %incdec.ptr1232 = getelementptr inbounds i8* %locinput.0, i64 1
  %222 = load i8* %incdec.ptr1232, align 1, !tbaa !1
  %conv1233 = zext i8 %222 to i32
  br label %while.cond

sw.bb1234:                                        ; preds = %while.body
  %223 = load i32* @PL_reg_flags, align 4, !tbaa !0
  %or1235 = or i32 %223, 1
  store i32 %or1235, i32* @PL_reg_flags, align 4, !tbaa !0
  br label %sw.bb1236

sw.bb1236:                                        ; preds = %while.body, %sw.bb1234
  %tobool1237 = icmp ne i32 %nextchr.0, 0
  %224 = load i8** @PL_regeol, align 8, !tbaa !3
  %cmp1239 = icmp ult i8* %locinput.0, %224
  %or.cond5491 = or i1 %tobool1237, %cmp1239
  br i1 %or.cond5491, label %if.end1242, label %do_no.preheader

if.end1242:                                       ; preds = %sw.bb1236
  br i1 %tobool82, label %if.end1292, label %if.then1244

if.then1244:                                      ; preds = %if.end1242
  %225 = load %struct.sv** @PL_utf8_digit, align 8, !tbaa !3
  %tobool1245 = icmp eq %struct.sv* %225, null
  br i1 %tobool1245, label %if.then1246, label %if.end1248

if.then1246:                                      ; preds = %if.then1244
  call void @Perl_push_scope() #6
  call void @Perl_save_re_context() #6
  %call1247 = call signext i8 @Perl_is_utf8_digit(i8* getelementptr inbounds ([2 x i8]* @.str6, i64 0, i64 0)) #6
  call void @Perl_pop_scope() #6
  br label %if.end1248

if.end1248:                                       ; preds = %if.then1244, %if.then1246
  %226 = load i8* %type, align 1, !tbaa !1
  %cmp1251 = icmp eq i8 %226, 28
  br i1 %cmp1251, label %cond.true1253, label %cond.false1256

cond.true1253:                                    ; preds = %if.end1248
  %227 = load %struct.sv** @PL_utf8_digit, align 8, !tbaa !3
  %call1254 = call i64 @Perl_swash_fetch(%struct.sv* %227, i8* %locinput.0, i8 signext %1) #6
  %tobool1255 = icmp eq i64 %call1254, 0
  br i1 %tobool1255, label %if.end1285, label %do_no.preheader

cond.false1256:                                   ; preds = %if.end1248
  %call1257 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  %cmp1258 = icmp ult i64 %call1257, 256
  %call1261 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  br i1 %cmp1258, label %cond.true1260, label %cond.false1276

cond.true1260:                                    ; preds = %cond.false1256
  %cmp1263 = icmp ult i64 %call1261, 128
  br i1 %cmp1263, label %land.rhs1265, label %land.end1274

land.rhs1265:                                     ; preds = %cond.true1260
  %call1266 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null) #6
  %sext = shl i64 %call1266, 32
  %idxprom1268 = ashr exact i64 %sext, 32
  %call1269 = call i16** @__ctype_b_loc() #6
  %228 = load i16** %call1269, align 8, !tbaa !3
  %arrayidx1270 = getelementptr inbounds i16* %228, i64 %idxprom1268
  %229 = load i16* %arrayidx1270, align 2, !tbaa !5
  %and1272 = and i16 %229, 2048
  %tobool1273 = icmp ne i16 %and1272, 0
  br label %land.end1274

land.end1274:                                     ; preds = %land.rhs1265, %cond.true1260
  %230 = phi i1 [ false, %cond.true1260 ], [ %tobool1273, %land.rhs1265 ]
  %land.ext1275 = zext i1 %230 to i64
  br label %cond.end1280

cond.false1276:                                   ; preds = %cond.false1256
  %call1278 = call signext i8 @Perl_is_uni_digit_lc(i64 %call1261) #6
  %conv1279 = sext i8 %call1278 to i64
  br label %cond.end1280

cond.end1280:                                     ; preds = %cond.false1276, %land.end1274
  %cond1281 = phi i64 [ %land.ext1275, %land.end1274 ], [ %conv1279, %cond.false1276 ]
  %tobool1283 = icmp eq i64 %cond1281, 0
  br i1 %tobool1283, label %if.end1285, label %do_no.preheader

if.end1285:                                       ; preds = %cond.true1253, %cond.end1280
  %idxprom1286 = sext i32 %nextchr.0 to i64
  %arrayidx1287 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1286
  %231 = load i8* %arrayidx1287, align 1, !tbaa !1
  %idx.ext1289 = zext i8 %231 to i64
  %add.ptr1290 = getelementptr inbounds i8* %locinput.0, i64 %idx.ext1289
  %232 = load i8* %add.ptr1290, align 1, !tbaa !1
  %conv1291 = zext i8 %232 to i32
  br label %while.cond

if.end1292:                                       ; preds = %if.end1242
  %233 = load i8* %type, align 1, !tbaa !1
  %cmp1295 = icmp eq i8 %233, 28
  br i1 %cmp1295, label %cond.true1297, label %cond.false1303

cond.true1297:                                    ; preds = %if.end1292
  %nextchr.0.off = add i32 %nextchr.0, -48
  %234 = icmp ult i32 %nextchr.0.off, 10
  br i1 %234, label %do_no.preheader, label %if.end1315

cond.false1303:                                   ; preds = %if.end1292
  %cmp1305 = icmp ult i32 %nextchr.0, 128
  br i1 %cmp1305, label %land.lhs.true1307, label %if.end1315

land.lhs.true1307:                                ; preds = %cond.false1303
  %idxprom1308 = sext i32 %nextchr.0 to i64
  %call1309 = call i16** @__ctype_b_loc() #6
  %235 = load i16** %call1309, align 8, !tbaa !3
  %arrayidx1310 = getelementptr inbounds i16* %235, i64 %idxprom1308
  %236 = load i16* %arrayidx1310, align 2, !tbaa !5
  %and1312 = and i16 %236, 2048
  %tobool1313 = icmp eq i16 %and1312, 0
  br i1 %tobool1313, label %if.end1315, label %do_no.preheader

if.end1315:                                       ; preds = %land.lhs.true1307, %cond.false1303, %cond.true1297
  %incdec.ptr1316 = getelementptr inbounds i8* %locinput.0, i64 1
  %237 = load i8* %incdec.ptr1316, align 1, !tbaa !1
  %conv1317 = zext i8 %237 to i32
  br label %while.cond

sw.bb1318:                                        ; preds = %while.body
  %238 = load i8** @PL_regeol, align 8, !tbaa !3
  %cmp1319 = icmp ult i8* %locinput.0, %238
  br i1 %cmp1319, label %if.end1322, label %do_no.preheader

if.end1322:                                       ; preds = %sw.bb1318
  br i1 %tobool82, label %if.else1357, label %if.then1324

if.then1324:                                      ; preds = %if.end1322
  %239 = load %struct.sv** @PL_utf8_mark, align 8, !tbaa !3
  %tobool1325 = icmp eq %struct.sv* %239, null
  br i1 %tobool1325, label %if.then1326, label %if.end1328

if.then1326:                                      ; preds = %if.then1324
  call void @Perl_push_scope() #6
  call void @Perl_save_re_context() #6
  %call1327 = call signext i8 @Perl_is_utf8_mark(i8* getelementptr inbounds ([2 x i8]* @.str7, i64 0, i64 0)) #6
  call void @Perl_pop_scope() #6
  %.pre5738 = load %struct.sv** @PL_utf8_mark, align 8, !tbaa !3
  br label %if.end1328

if.end1328:                                       ; preds = %if.then1324, %if.then1326
  %240 = phi %struct.sv* [ %239, %if.then1324 ], [ %.pre5738, %if.then1326 ]
  %call1329 = call i64 @Perl_swash_fetch(%struct.sv* %240, i8* %locinput.0, i8 signext %1) #6
  %tobool1330 = icmp eq i64 %call1329, 0
  br i1 %tobool1330, label %if.end1332, label %do_no.preheader

if.end1332:                                       ; preds = %if.end1328
  %idxprom1333 = sext i32 %nextchr.0 to i64
  %arrayidx1334 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1333
  %241 = load i8* %arrayidx1334, align 1, !tbaa !1
  %idx.ext1336 = zext i8 %241 to i64
  %add.ptr1337 = getelementptr inbounds i8* %locinput.0, i64 %idx.ext1336
  %242 = load i8** @PL_regeol, align 8, !tbaa !3
  %cmp13395623 = icmp ult i8* %add.ptr1337, %242
  br i1 %cmp13395623, label %land.rhs1341, label %while.end1352

land.rhs1341:                                     ; preds = %if.end1332, %while.body1346
  %locinput.15624 = phi i8* [ %add.ptr1351, %while.body1346 ], [ %add.ptr1337, %if.end1332 ]
  %243 = load %struct.sv** @PL_utf8_mark, align 8, !tbaa !3
  %call1342 = call i64 @Perl_swash_fetch(%struct.sv* %243, i8* %locinput.15624, i8 signext %1) #6
  %tobool1343 = icmp eq i64 %call1342, 0
  br i1 %tobool1343, label %while.end1352split, label %while.body1346

while.body1346:                                   ; preds = %land.rhs1341
  %244 = load i8* %locinput.15624, align 1, !tbaa !1
  %idxprom1347 = zext i8 %244 to i64
  %arrayidx1348 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom1347
  %245 = load i8* %arrayidx1348, align 1, !tbaa !1
  %idx.ext1350 = zext i8 %245 to i64
  %add.ptr1351 = getelementptr inbounds i8* %locinput.15624, i64 %idx.ext1350
  %246 = load i8** @PL_regeol, align 8, !tbaa !3
  %cmp1339 = icmp ult i8* %add.ptr1351, %246
  br i1 %cmp1339, label %land.rhs1341, label %while.end1352

while.end1352split:                               ; preds = %land.rhs1341
  %.pre5739 = load i8** @PL_regeol, align 8, !tbaa !3
  br label %while.end1352

while.end1352:                                    ; preds = %while.body1346, %while.end1352split, %if.end1332
  %247 = phi i8* [ %242, %if.end1332 ], [ %.pre5739, %while.end1352split ], [ %246, %while.body1346 ]
  %locinput.1.lcssa = phi i8* [ %add.ptr1337, %if.end1332 ], [ %locinput.15624, %while.end1352split ], [ %add.ptr1351, %while.body1346 ]
  %cmp1353 = icmp ugt i8* %locinput.1.lcssa, %247
  br i1 %cmp1353, label %do_no.preheader, label %if.end1359

if.else1357:                                      ; preds = %if.end1322
  %incdec.ptr1358 = getelementptr inbounds i8* %locinput.0, i64 1
  br label %if.end1359

if.end1359:                                       ; preds = %while.end1352, %if.else1357
  %locinput.2 = phi i8* [ %locinput.1.lcssa, %while.end1352 ], [ %incdec.ptr1358, %if.else1357 ]
  %248 = load i8* %locinput.2, align 1, !tbaa !1
  %conv1360 = zext i8 %248 to i32
  br label %while.cond

sw.bb1361:                                        ; preds = %while.body
  %249 = load i32* @PL_reg_flags, align 4, !tbaa !0
  %or1362 = or i32 %249, 1
  store i32 %or1362, i32* @PL_reg_flags, align 4, !tbaa !0
  br label %sw.bb1363

sw.bb1363:                                        ; preds = %while.body, %while.body, %sw.bb1361
  %arg1 = getelementptr inbounds %struct.regnode* %scan.0, i64 1
  %250 = bitcast %struct.regnode* %arg1 to i32*
  %251 = load i32* %250, align 4, !tbaa !0
  %idxprom1364 = sext i32 %251 to i64
  %252 = load i32** @PL_regstartp, align 8, !tbaa !3
  %arrayidx1365 = getelementptr inbounds i32* %252, i64 %idxprom1364
  %253 = load i32* %arrayidx1365, align 4, !tbaa !0
  %254 = load i32* @PL_reg_maxiter, align 4, !tbaa !0
  store i32 %254, i32* @PL_reg_leftiter, align 4, !tbaa !0
  %255 = load i32** @PL_reglastparen, align 8, !tbaa !3
  %256 = load i32* %255, align 4, !tbaa !0
  %cmp1366 = icmp slt i32 %256, %251
  %cmp1369 = icmp eq i32 %253, -1
  %or.cond5492 = or i1 %cmp1366, %cmp1369
  br i1 %or.cond5492, label %do_no.preheader, label %if.end1372

if.end1372:                                       ; preds = %sw.bb1363
  %257 = load i32** @PL_regendp, align 8, !tbaa !3
  %arrayidx1374 = getelementptr inbounds i32* %257, i64 %idxprom1364
  %258 = load i32* %arrayidx1374, align 4, !tbaa !0
  %cmp1375 = icmp eq i32 %253, %258
  br i1 %cmp1375, label %while.cond, label %if.end1378

if.end1378:                                       ; preds = %if.end1372
  %259 = load i8** @PL_bostr, align 8, !tbaa !3
  %idx.ext1379 = sext i32 %253 to i64
  %add.ptr1380 = getelementptr inbounds i8* %259, i64 %idx.ext1379
  br i1 %tobool82, label %if.end1426, label %land.lhs.true1383

land.lhs.true1383:                                ; preds = %if.end1378
  %260 = load i8* %type, align 1, !tbaa !1
  %cmp1386 = icmp eq i8 %260, 47
  br i1 %cmp1386, label %if.end1426, label %if.then1388

if.then1388:                                      ; preds = %land.lhs.true1383
  %idx.ext1393 = sext i32 %258 to i64
  %add.ptr1394 = getelementptr inbounds i8* %259, i64 %idx.ext1393
  %cmp1397 = icmp eq i8 %260, 48
  %cmp14015619 = icmp slt i32 %253, %258
  %or.cond5766 = and i1 %cmp1397, %cmp14015619
  br i1 %or.cond5766, label %while.body1403, label %if.end1424

while.body1403:                                   ; preds = %if.then1388, %if.end1420
  %s.25621 = phi i8* [ %add.ptr1421, %if.end1420 ], [ %add.ptr1380, %if.then1388 ]
  %l1389.05620 = phi i8* [ %add.ptr1422, %if.end1420 ], [ %locinput.0, %if.then1388 ]
  %261 = load i8** @PL_regeol, align 8, !tbaa !3
  %cmp1404 = icmp ult i8* %l1389.05620, %261
  br i1 %cmp1404, label %if.end1407, label %do_no.preheader

if.end1407:                                       ; preds = %while.body1403
  %call1409 = call i64 @Perl_to_utf8_lower(i8* %s.25621, i8* %arraydecay1408, i64* %ulen1) #6
  %call1411 = call i64 @Perl_to_utf8_lower(i8* %l1389.05620, i8* %arraydecay1410, i64* %ulen2) #6
  %262 = load i64* %ulen1, align 8, !tbaa !4
  %263 = load i64* %ulen2, align 8, !tbaa !4
  %cmp1412 = icmp eq i64 %262, %263
  br i1 %cmp1412, label %lor.lhs.false1414, label %do_no.preheader

lor.lhs.false1414:                                ; preds = %if.end1407
  %call1417 = call i32 @memcmp(i8* %arraydecay1408, i8* %arraydecay1410, i64 %262) #6
  %tobool1418 = icmp eq i32 %call1417, 0
  br i1 %tobool1418, label %if.end1420, label %do_no.preheader

if.end1420:                                       ; preds = %lor.lhs.false1414
  %add.ptr1421 = getelementptr inbounds i8* %s.25621, i64 %262
  %add.ptr1422 = getelementptr inbounds i8* %l1389.05620, i64 %262
  %cmp1401 = icmp ult i8* %add.ptr1421, %add.ptr1394
  br i1 %cmp1401, label %while.body1403, label %if.end1424

if.end1424:                                       ; preds = %if.end1420, %if.then1388
  %l1389.1 = phi i8* [ %locinput.0, %if.then1388 ], [ %add.ptr1422, %if.end1420 ]
  %264 = load i8* %l1389.1, align 1, !tbaa !1
  %conv1425 = zext i8 %264 to i32
  br label %while.cond

if.end1426:                                       ; preds = %land.lhs.true1383, %if.end1378
  %265 = load i8* %add.ptr1380, align 1, !tbaa !1
  %conv1427 = zext i8 %265 to i32
  %cmp1428 = icmp eq i32 %conv1427, %nextchr.0
  br i1 %cmp1428, label %if.end1448, label %land.lhs.true1430

land.lhs.true1430:                                ; preds = %if.end1426
  %266 = load i8* %type, align 1, !tbaa !1
  %cmp1433 = icmp eq i8 %266, 47
  br i1 %cmp1433, label %do_no.preheader, label %lor.lhs.false1435

lor.lhs.false1435:                                ; preds = %land.lhs.true1430
  %idxprom1437 = sext i32 %nextchr.0 to i64
  %cmp1440 = icmp eq i8 %266, 48
  %cond1442 = select i1 %cmp1440, i8* getelementptr inbounds ([0 x i8]* @PL_fold, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8]* @PL_fold_locale, i64 0, i64 0)
  %arrayidx1443 = getelementptr inbounds i8* %cond1442, i64 %idxprom1437
  %267 = load i8* %arrayidx1443, align 1, !tbaa !1
  %cmp1445 = icmp eq i8 %265, %267
  br i1 %cmp1445, label %if.end1448, label %do_no.preheader

if.end1448:                                       ; preds = %lor.lhs.false1435, %if.end1426
  %sub = sub nsw i32 %258, %253
  %idx.ext1451 = sext i32 %sub to i64
  %add.ptr1452 = getelementptr inbounds i8* %locinput.0, i64 %idx.ext1451
  %268 = load i8** @PL_regeol, align 8, !tbaa !3
  %cmp1453 = icmp ugt i8* %add.ptr1452, %268
  br i1 %cmp1453, label %do_no.preheader, label %if.end1456

if.end1456:                                       ; preds = %if.end1448
  %cmp1457 = icmp sgt i32 %sub, 1
  br i1 %cmp1457, label %land.lhs.true1459, label %if.end1480

land.lhs.true1459:                                ; preds = %if.end1456
  %269 = load i8* %type, align 1, !tbaa !1
  switch i8 %269, label %cond.false1476 [
    i8 47, label %cond.true1464
    i8 48, label %cond.true1473
  ]

cond.true1464:                                    ; preds = %land.lhs.true1459
  %call1466 = call i32 @memcmp(i8* %add.ptr1380, i8* %locinput.0, i64 %idx.ext1451) #6
  %tobool1467 = icmp eq i32 %call1466, 0
  br i1 %tobool1467, label %if.end1480, label %do_no.preheader

cond.true1473:                                    ; preds = %land.lhs.true1459
  %call1474 = call i32 @Perl_ibcmp(i8* %add.ptr1380, i8* %locinput.0, i32 %sub) #6
  %tobool1475 = icmp eq i32 %call1474, 0
  br i1 %tobool1475, label %if.end1480, label %do_no.preheader

cond.false1476:                                   ; preds = %land.lhs.true1459
  %call1477 = call i32 @Perl_ibcmp_locale(i8* %add.ptr1380, i8* %locinput.0, i32 %sub) #6
  %tobool1478 = icmp eq i32 %call1477, 0
  br i1 %tobool1478, label %if.end1480, label %do_no.preheader

if.end1480:                                       ; preds = %cond.true1464, %cond.true1473, %cond.false1476, %if.end1456
  %270 = load i8* %add.ptr1452, align 1, !tbaa !1
  %conv1483 = zext i8 %270 to i32
  br label %while.cond

sw.bb1485:                                        ; preds = %while.body
  %271 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !3
  %272 = load %struct.op** @PL_op, align 8, !tbaa !3
  %273 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %274 = load %struct.regexp** @PL_reg_re, align 8, !tbaa !3
  %arg11486 = getelementptr inbounds %struct.regnode* %scan.0, i64 1
  %275 = bitcast %struct.regnode* %arg11486 to i32*
  %276 = load i32* %275, align 4, !tbaa !0
  %idxprom1487 = sext i32 %276 to i64
  %277 = load %struct.reg_data** @PL_regdata, align 8, !tbaa !3
  %arrayidx1488 = getelementptr inbounds %struct.reg_data* %277, i64 0, i32 2, i64 %idxprom1487
  %278 = load i8** %arrayidx1488, align 8, !tbaa !3
  %279 = bitcast i8* %278 to %struct.op*
  store %struct.op* %279, %struct.op** @PL_op, align 8, !tbaa !3
  %280 = load %struct.av** @PL_comppad, align 8, !tbaa !3
  %add1489 = add nsw i32 %276, 2
  %idxprom1490 = sext i32 %add1489 to i64
  %arrayidx1492 = getelementptr inbounds %struct.reg_data* %277, i64 0, i32 2, i64 %idxprom1490
  %281 = load i8** %arrayidx1492, align 8, !tbaa !3
  %282 = bitcast i8* %281 to %struct.av*
  store %struct.av* %282, %struct.av** @PL_comppad, align 8, !tbaa !3
  %tobool1493 = icmp eq i8* %281, null
  br i1 %tobool1493, label %cond.end1497, label %cond.true1494

cond.true1494:                                    ; preds = %sw.bb1485
  %sv_any1495 = bitcast i8* %281 to %struct.xpvav**
  %283 = load %struct.xpvav** %sv_any1495, align 8, !tbaa !3
  %xav_array = getelementptr inbounds %struct.xpvav* %283, i64 0, i32 0
  %284 = load i8** %xav_array, align 8, !tbaa !3
  %285 = bitcast i8* %284 to %struct.sv**
  br label %cond.end1497

cond.end1497:                                     ; preds = %sw.bb1485, %cond.true1494
  %cond1498 = phi %struct.sv** [ %285, %cond.true1494 ], [ null, %sw.bb1485 ]
  store %struct.sv** %cond1498, %struct.sv*** @PL_curpad, align 8, !tbaa !3
  %286 = load i8** @PL_bostr, align 8, !tbaa !3
  %sub.ptr.lhs.cast1499 = ptrtoint i8* %locinput.0 to i64
  %sub.ptr.rhs.cast1500 = ptrtoint i8* %286 to i64
  %sub.ptr.sub1501 = sub i64 %sub.ptr.lhs.cast1499, %sub.ptr.rhs.cast1500
  %conv1502 = trunc i64 %sub.ptr.sub1501 to i32
  %287 = load %struct.magic** @PL_reg_magic, align 8, !tbaa !3
  %mg_len = getelementptr inbounds %struct.magic* %287, i64 0, i32 7
  store i32 %conv1502, i32* %mg_len, align 4, !tbaa !0
  %288 = load i32** @PL_regendp, align 8, !tbaa !3
  store i32 %conv1502, i32* %288, align 4, !tbaa !0
  %289 = load i32 ()** @PL_runops, align 8, !tbaa !3
  %call1504 = call i32 %289() #6
  %290 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !3
  %cmp1505 = icmp eq %struct.sv** %290, %271
  br i1 %cmp1505, label %if.end1510, label %if.else1508

if.else1508:                                      ; preds = %cond.end1497
  %incdec.ptr1509 = getelementptr inbounds %struct.sv** %290, i64 -1
  %291 = load %struct.sv** %290, align 8, !tbaa !3
  store %struct.sv** %incdec.ptr1509, %struct.sv*** @PL_stack_sp, align 8, !tbaa !3
  br label %if.end1510

if.end1510:                                       ; preds = %cond.end1497, %if.else1508
  %ret.0 = phi %struct.sv* [ %291, %if.else1508 ], [ @PL_sv_undef, %cond.end1497 ]
  store %struct.op* %272, %struct.op** @PL_op, align 8, !tbaa !3
  store %struct.av* %280, %struct.av** @PL_comppad, align 8, !tbaa !3
  %tobool1511 = icmp eq %struct.av* %280, null
  br i1 %tobool1511, label %cond.end1516, label %cond.true1512

cond.true1512:                                    ; preds = %if.end1510
  %sv_any1513 = getelementptr inbounds %struct.av* %280, i64 0, i32 0
  %292 = load %struct.xpvav** %sv_any1513, align 8, !tbaa !3
  %xav_array1514 = getelementptr inbounds %struct.xpvav* %292, i64 0, i32 0
  %293 = load i8** %xav_array1514, align 8, !tbaa !3
  %294 = bitcast i8* %293 to %struct.sv**
  br label %cond.end1516

cond.end1516:                                     ; preds = %if.end1510, %cond.true1512
  %cond1517 = phi %struct.sv** [ %294, %cond.true1512 ], [ null, %if.end1510 ]
  store %struct.sv** %cond1517, %struct.sv*** @PL_curpad, align 8, !tbaa !3
  store volatile %struct.cop* %273, %struct.cop** @PL_curcop, align 8, !tbaa !3
  switch i32 %logical.0, label %if.end1635 [
    i32 0, label %if.else1691
    i32 2, label %if.then1522
  ]

if.then1522:                                      ; preds = %cond.end1516
  call void @llvm.lifetime.start(i64 40, i8* %3) #4
  %sv_flags = getelementptr inbounds %struct.sv* %ret.0, i64 0, i32 2
  %295 = load i32* %sv_flags, align 4, !tbaa !0
  %and1523 = and i32 %295, 524288
  %tobool1524 = icmp eq i32 %and1523, 0
  br i1 %tobool1524, label %if.else1532, label %land.lhs.true1525

land.lhs.true1525:                                ; preds = %if.then1522
  %sv_any1526 = getelementptr inbounds %struct.sv* %ret.0, i64 0, i32 0
  %296 = load i8** %sv_any1526, align 8, !tbaa !3
  %xrv_rv = bitcast i8* %296 to %struct.sv**
  %297 = load %struct.sv** %xrv_rv, align 8, !tbaa !3
  %sv_flags1527 = getelementptr inbounds %struct.sv* %297, i64 0, i32 2
  %298 = load i32* %sv_flags1527, align 4, !tbaa !0
  %and1528 = and i32 %298, 16384
  %tobool1529 = icmp eq i32 %and1528, 0
  br i1 %tobool1529, label %if.else1532, label %if.then1530

if.then1530:                                      ; preds = %land.lhs.true1525
  %call1531 = call %struct.magic* @Perl_mg_find(%struct.sv* %297, i32 114) #6
  br label %if.end1546

if.else1532:                                      ; preds = %land.lhs.true1525, %if.then1522
  %and1534 = and i32 %295, 16384
  %tobool1535 = icmp eq i32 %and1534, 0
  br i1 %tobool1535, label %if.else1554, label %if.then1536

if.then1536:                                      ; preds = %if.else1532
  %and1538 = and i32 %295, 8192
  %tobool1539 = icmp eq i32 %and1538, 0
  br i1 %tobool1539, label %if.else1542, label %if.then1540

if.then1540:                                      ; preds = %if.then1536
  %call1541 = call i32 @Perl_sv_unmagic(%struct.sv* %ret.0, i32 114) #6
  br label %if.else1554

if.else1542:                                      ; preds = %if.then1536
  %call1543 = call %struct.magic* @Perl_mg_find(%struct.sv* %ret.0, i32 114) #6
  br label %if.end1546

if.end1546:                                       ; preds = %if.else1542, %if.then1530
  %mg.0 = phi %struct.magic* [ %call1531, %if.then1530 ], [ %call1543, %if.else1542 ]
  %tobool1547 = icmp eq %struct.magic* %mg.0, null
  br i1 %tobool1547, label %if.else1554, label %if.then1548

if.then1548:                                      ; preds = %if.end1546
  %mg_obj = getelementptr inbounds %struct.magic* %mg.0, i64 0, i32 5
  %299 = load %struct.sv** %mg_obj, align 8, !tbaa !3
  %300 = bitcast %struct.sv* %299 to %struct.regexp*
  %tobool1549 = icmp eq %struct.sv* %299, null
  br i1 %tobool1549, label %if.end1593, label %land.rhs1550

land.rhs1550:                                     ; preds = %if.then1548
  %refcnt = getelementptr inbounds %struct.regexp* %300, i64 0, i32 9
  %301 = load i32* %refcnt, align 4, !tbaa !0
  %inc = add nsw i32 %301, 1
  store i32 %inc, i32* %refcnt, align 4, !tbaa !0
  br label %if.end1593

if.else1554:                                      ; preds = %if.end1546, %if.else1532, %if.then1540
  %302 = load i32* %sv_flags, align 4, !tbaa !0
  %and1556 = and i32 %302, 262144
  %cmp1557 = icmp eq i32 %and1556, 0
  br i1 %cmp1557, label %cond.false1563, label %cond.true1559

cond.true1559:                                    ; preds = %if.else1554
  %sv_any1560 = getelementptr inbounds %struct.sv* %ret.0, i64 0, i32 0
  %303 = load i8** %sv_any1560, align 8, !tbaa !3
  %xpv_cur = getelementptr inbounds i8* %303, i64 8
  %304 = bitcast i8* %xpv_cur to i64*
  %305 = load i64* %304, align 8, !tbaa !4
  store i64 %305, i64* %len, align 8, !tbaa !4
  %xpv_pv1562 = bitcast i8* %303 to i8**
  %306 = load i8** %xpv_pv1562, align 8, !tbaa !3
  br label %cond.end1565

cond.false1563:                                   ; preds = %if.else1554
  %call1564 = call i8* @Perl_sv_2pv_flags(%struct.sv* %ret.0, i64* %len, i32 2) #6
  br label %cond.end1565

cond.end1565:                                     ; preds = %cond.false1563, %cond.true1559
  %cond1566 = phi i8* [ %306, %cond.true1559 ], [ %call1564, %cond.false1563 ]
  call void @llvm.lifetime.start(i64 112, i8* %4) #4
  %307 = load i8** @PL_regprecomp, align 8, !tbaa !3
  %308 = load i32* @PL_regsize, align 4, !tbaa !0
  %309 = load i32* @PL_regnpar, align 4, !tbaa !0
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 112, i32 8, i1 false)
  %310 = load i32* %sv_flags, align 4, !tbaa !0
  %and1568 = and i32 %310, 536870912
  %tobool1569 = icmp eq i32 %and1568, 0
  br i1 %tobool1569, label %if.end1578, label %land.lhs.true1570

land.lhs.true1570:                                ; preds = %cond.end1565
  %311 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %op_private = getelementptr inbounds %struct.cop* %311, i64 0, i32 7
  %312 = load i8* %op_private, align 1, !tbaa !1
  %and1572 = and i8 %312, 8
  %tobool1573 = icmp eq i8 %and1572, 0
  br i1 %tobool1573, label %if.then1574, label %if.end1578

if.then1574:                                      ; preds = %land.lhs.true1570
  %313 = load i8* %op_pmdynflags, align 8, !tbaa !1
  %or1576 = or i8 %313, 8
  store i8 %or1576, i8* %op_pmdynflags, align 8, !tbaa !1
  br label %if.end1578

if.end1578:                                       ; preds = %land.lhs.true1570, %cond.end1565, %if.then1574
  %314 = load %struct.regexp* (i8*, i8*, %struct.pmop*)** @PL_regcompp, align 8, !tbaa !3
  %315 = load i64* %len, align 8, !tbaa !4
  %add.ptr1579 = getelementptr inbounds i8* %cond1566, i64 %315
  %call1580 = call %struct.regexp* %314(i8* %cond1566, i8* %add.ptr1579, %struct.pmop* %pm) #6
  %316 = load i32* %sv_flags, align 4, !tbaa !0
  %and1582 = and i32 %316, 8399360
  %tobool1583 = icmp eq i32 %and1582, 0
  br i1 %tobool1583, label %if.then1584, label %if.end1592

if.then1584:                                      ; preds = %if.end1578
  %tobool1585 = icmp eq %struct.regexp* %call1580, null
  br i1 %tobool1585, label %land.end1590, label %land.rhs1586

land.rhs1586:                                     ; preds = %if.then1584
  %refcnt1587 = getelementptr inbounds %struct.regexp* %call1580, i64 0, i32 9
  %317 = load i32* %refcnt1587, align 4, !tbaa !0
  %inc1588 = add nsw i32 %317, 1
  store i32 %inc1588, i32* %refcnt1587, align 4, !tbaa !0
  br label %land.end1590

land.end1590:                                     ; preds = %if.then1584, %land.rhs1586
  %318 = bitcast %struct.regexp* %call1580 to %struct.sv*
  call void @Perl_sv_magic(%struct.sv* %ret.0, %struct.sv* %318, i32 114, i8* null, i32 0) #6
  br label %if.end1592

if.end1592:                                       ; preds = %if.end1578, %land.end1590
  store i8* %307, i8** @PL_regprecomp, align 8, !tbaa !3
  store i32 %308, i32* @PL_regsize, align 4, !tbaa !0
  store i32 %309, i32* @PL_regnpar, align 4, !tbaa !0
  call void @llvm.lifetime.end(i64 112, i8* %4) #4
  br label %if.end1593

if.end1593:                                       ; preds = %land.rhs1550, %if.then1548, %if.end1592
  %re.0 = phi %struct.regexp* [ %call1580, %if.end1592 ], [ %300, %if.then1548 ], [ %300, %land.rhs1550 ]
  store %struct.regnode* %.add.ptr, %struct.regnode** %node, align 8, !tbaa !3
  %319 = load %struct.re_cc_state** @PL_reg_call_cc, align 8, !tbaa !3
  store %struct.re_cc_state* %319, %struct.re_cc_state** %prev, align 8, !tbaa !3
  %320 = load %struct.curcur** @PL_regcc, align 8, !tbaa !3
  store %struct.curcur* %320, %struct.curcur** %cc, align 8, !tbaa !3
  %321 = load %struct.regexp** @PL_reg_re, align 8, !tbaa !3
  store %struct.regexp* %321, %struct.regexp** %re1594, align 8, !tbaa !3
  store %struct.curcur* null, %struct.curcur** @PL_regcc, align 8, !tbaa !3
  %call1595 = call fastcc i32 @S_regcppush(i32 0) #5
  %322 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %precomp.i = getelementptr inbounds %struct.regexp* %re.0, i64 0, i32 4
  %323 = load i8** %precomp.i, align 8, !tbaa !3
  store i8* %323, i8** @PL_regprecomp, align 8, !tbaa !3
  %nparens.i = getelementptr inbounds %struct.regexp* %re.0, i64 0, i32 12
  %324 = load i32* %nparens.i, align 4, !tbaa !0
  store i32 %324, i32* @PL_regnpar, align 4, !tbaa !0
  %data.i = getelementptr inbounds %struct.regexp* %re.0, i64 0, i32 5
  %325 = load %struct.reg_data** %data.i, align 8, !tbaa !3
  store %struct.reg_data* %325, %struct.reg_data** @PL_regdata, align 8, !tbaa !3
  store %struct.regexp* %re.0, %struct.regexp** @PL_reg_re, align 8, !tbaa !3
  store i32 %322, i32* %ss, align 8, !tbaa !0
  %326 = load i32** @PL_reglastparen, align 8, !tbaa !3
  store i32 0, i32* %326, align 4, !tbaa !0
  %327 = load i32** @PL_reglastcloseparen, align 8, !tbaa !3
  store i32 0, i32* %327, align 4, !tbaa !0
  store %struct.re_cc_state* %state, %struct.re_cc_state** @PL_reg_call_cc, align 8, !tbaa !3
  store i8* %locinput.0, i8** @PL_reginput, align 8, !tbaa !3
  %328 = load i32* @PL_reg_flags, align 4, !tbaa !0
  %and1596 = lshr i32 %328, 3
  %reganch = getelementptr inbounds %struct.regexp* %re.0, i64 0, i32 15
  %329 = load i32* %reganch, align 4, !tbaa !0
  %and1599 = lshr i32 %329, 16
  %and1596.lobit5432 = xor i32 %and1599, %and1596
  %xor = and i32 %and1596.lobit5432, 1
  %tobool1602 = icmp ne i32 %xor, 0
  br i1 %tobool1602, label %if.then1603, label %if.end1605

if.then1603:                                      ; preds = %if.end1593
  %xor1604 = xor i32 %328, 8
  store i32 %xor1604, i32* @PL_reg_flags, align 4, !tbaa !0
  br label %if.end1605

if.end1605:                                       ; preds = %if.then1603, %if.end1593
  store i32 0, i32* @PL_reg_maxiter, align 4, !tbaa !0
  %add.ptr1607 = getelementptr inbounds %struct.regexp* %re.0, i64 0, i32 16, i64 1
  %call1608 = call fastcc i32 @S_regmatch(%struct.regnode* %add.ptr1607) #5
  %tobool1609 = icmp eq i32 %call1608, 0
  br i1 %tobool1609, label %if.end1622, label %if.then1610

if.then1610:                                      ; preds = %if.end1605
  %330 = load %struct.re_cc_state** %prev, align 8, !tbaa !3
  store %struct.re_cc_state* %330, %struct.re_cc_state** @PL_reg_call_cc, align 8, !tbaa !3
  %331 = load %struct.curcur** %cc, align 8, !tbaa !3
  store %struct.curcur* %331, %struct.curcur** @PL_regcc, align 8, !tbaa !3
  %332 = load %struct.regexp** %re1594, align 8, !tbaa !3
  store %struct.regexp* %332, %struct.regexp** @PL_reg_re, align 8, !tbaa !3
  %precomp.i5516 = getelementptr inbounds %struct.regexp* %332, i64 0, i32 4
  %333 = load i8** %precomp.i5516, align 8, !tbaa !3
  store i8* %333, i8** @PL_regprecomp, align 8, !tbaa !3
  %nparens.i5517 = getelementptr inbounds %struct.regexp* %332, i64 0, i32 12
  %334 = load i32* %nparens.i5517, align 4, !tbaa !0
  store i32 %334, i32* @PL_regnpar, align 4, !tbaa !0
  %data.i5518 = getelementptr inbounds %struct.regexp* %332, i64 0, i32 5
  %335 = load %struct.reg_data** %data.i5518, align 8, !tbaa !3
  store %struct.reg_data* %335, %struct.reg_data** @PL_regdata, align 8, !tbaa !3
  store %struct.regexp* %332, %struct.regexp** @PL_reg_re, align 8, !tbaa !3
  br i1 %tobool1602, label %if.then1615, label %if.end1617

if.then1615:                                      ; preds = %if.then1610
  %336 = load i32* @PL_reg_flags, align 4, !tbaa !0
  %xor1616 = xor i32 %336, 8
  store i32 %xor1616, i32* @PL_reg_flags, align 4, !tbaa !0
  br label %if.end1617

if.end1617:                                       ; preds = %if.then1615, %if.then1610
  store i32 0, i32* @PL_reg_maxiter, align 4, !tbaa !0
  %337 = load void (%struct.regexp*)** @PL_regfree, align 8, !tbaa !3
  call void %337(%struct.regexp* %re.0) #6
  %338 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %cmp1618 = icmp sgt i32 %338, %call1595
  br i1 %cmp1618, label %if.then1620, label %return

if.then1620:                                      ; preds = %if.end1617
  call void @Perl_leave_scope(i32 %call1595) #6
  br label %return

if.end1622:                                       ; preds = %if.end1605
  %339 = load void (%struct.regexp*)** @PL_regfree, align 8, !tbaa !3
  call void %339(%struct.regexp* %re.0) #6
  %340 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %cmp1623 = icmp sgt i32 %340, %322
  br i1 %cmp1623, label %if.then1625, label %if.end1626

if.then1625:                                      ; preds = %if.end1622
  call void @Perl_leave_scope(i32 %322) #6
  br label %if.end1626

if.end1626:                                       ; preds = %if.then1625, %if.end1622
  call fastcc void @S_regcppop() #5
  %341 = load %struct.re_cc_state** %prev, align 8, !tbaa !3
  store %struct.re_cc_state* %341, %struct.re_cc_state** @PL_reg_call_cc, align 8, !tbaa !3
  %342 = load %struct.curcur** %cc, align 8, !tbaa !3
  store %struct.curcur* %342, %struct.curcur** @PL_regcc, align 8, !tbaa !3
  %343 = load %struct.regexp** %re1594, align 8, !tbaa !3
  store %struct.regexp* %343, %struct.regexp** @PL_reg_re, align 8, !tbaa !3
  %precomp.i5519 = getelementptr inbounds %struct.regexp* %343, i64 0, i32 4
  %344 = load i8** %precomp.i5519, align 8, !tbaa !3
  store i8* %344, i8** @PL_regprecomp, align 8, !tbaa !3
  %nparens.i5520 = getelementptr inbounds %struct.regexp* %343, i64 0, i32 12
  %345 = load i32* %nparens.i5520, align 4, !tbaa !0
  store i32 %345, i32* @PL_regnpar, align 4, !tbaa !0
  %data.i5521 = getelementptr inbounds %struct.regexp* %343, i64 0, i32 5
  %346 = load %struct.reg_data** %data.i5521, align 8, !tbaa !3
  store %struct.reg_data* %346, %struct.reg_data** @PL_regdata, align 8, !tbaa !3
  store %struct.regexp* %343, %struct.regexp** @PL_reg_re, align 8, !tbaa !3
  br i1 %tobool1602, label %if.then1632, label %cleanup

if.then1632:                                      ; preds = %if.end1626
  %347 = load i32* @PL_reg_flags, align 4, !tbaa !0
  %xor1633 = xor i32 %347, 8
  store i32 %xor1633, i32* @PL_reg_flags, align 4, !tbaa !0
  br label %cleanup

cleanup:                                          ; preds = %if.end1626, %if.then1632
  store i32 0, i32* @PL_reg_maxiter, align 4, !tbaa !0
  call void @llvm.lifetime.end(i64 40, i8* %3) #4
  br label %do_no.preheader

if.end1635:                                       ; preds = %cond.end1516
  %tobool1636 = icmp eq %struct.sv* %ret.0, null
  br i1 %tobool1636, label %while.cond, label %cond.false1638

cond.false1638:                                   ; preds = %if.end1635
  %sv_flags1639 = getelementptr inbounds %struct.sv* %ret.0, i64 0, i32 2
  %348 = load i32* %sv_flags1639, align 4, !tbaa !0
  %and1640 = and i32 %348, 262144
  %tobool1641 = icmp eq i32 %and1640, 0
  br i1 %tobool1641, label %cond.false1664, label %cond.true1642

cond.true1642:                                    ; preds = %cond.false1638
  %sv_any1643 = getelementptr inbounds %struct.sv* %ret.0, i64 0, i32 0
  %349 = load i8** %sv_any1643, align 8, !tbaa !3
  %350 = bitcast i8* %349 to %struct.xpv*
  store %struct.xpv* %350, %struct.xpv** @PL_Xpv, align 8, !tbaa !3
  %tobool1644 = icmp eq i8* %349, null
  br i1 %tobool1644, label %land.end1661, label %land.rhs1645

land.rhs1645:                                     ; preds = %cond.true1642
  %xpv_cur1646 = getelementptr inbounds i8* %349, i64 8
  %351 = bitcast i8* %xpv_cur1646 to i64*
  %352 = load i64* %351, align 8, !tbaa !4
  %cmp1647 = icmp ugt i64 %352, 1
  br i1 %cmp1647, label %land.end1661, label %lor.rhs1649

lor.rhs1649:                                      ; preds = %land.rhs1645
  %tobool1651 = icmp eq i64 %352, 0
  br i1 %tobool1651, label %land.end1661, label %land.rhs1652

land.rhs1652:                                     ; preds = %lor.rhs1649
  %xpv_pv1653 = bitcast i8* %349 to i8**
  %353 = load i8** %xpv_pv1653, align 8, !tbaa !3
  %354 = load i8* %353, align 1, !tbaa !1
  %cmp1655 = icmp ne i8 %354, 48
  br label %land.end1661

land.end1661:                                     ; preds = %lor.rhs1649, %cond.true1642, %land.rhs1645, %land.rhs1652
  %355 = phi i1 [ false, %cond.true1642 ], [ true, %land.rhs1645 ], [ false, %lor.rhs1649 ], [ %cmp1655, %land.rhs1652 ]
  %cond1663 = zext i1 %355 to i32
  br label %while.cond

cond.false1664:                                   ; preds = %cond.false1638
  %and1666 = and i32 %348, 65536
  %tobool1667 = icmp eq i32 %and1666, 0
  br i1 %tobool1667, label %cond.false1672, label %cond.true1668

cond.true1668:                                    ; preds = %cond.false1664
  %sv_any1669 = getelementptr inbounds %struct.sv* %ret.0, i64 0, i32 0
  %356 = load i8** %sv_any1669, align 8, !tbaa !3
  %xiv_iv = getelementptr inbounds i8* %356, i64 24
  %357 = bitcast i8* %xiv_iv to i64*
  %358 = load i64* %357, align 8, !tbaa !4
  %cmp1670 = icmp ne i64 %358, 0
  %conv1671 = zext i1 %cmp1670 to i32
  br label %while.cond

cond.false1672:                                   ; preds = %cond.false1664
  %and1674 = and i32 %348, 131072
  %tobool1675 = icmp eq i32 %and1674, 0
  br i1 %tobool1675, label %cond.false1680, label %cond.true1676

cond.true1676:                                    ; preds = %cond.false1672
  %sv_any1677 = getelementptr inbounds %struct.sv* %ret.0, i64 0, i32 0
  %359 = load i8** %sv_any1677, align 8, !tbaa !3
  %xnv_nv = getelementptr inbounds i8* %359, i64 32
  %360 = bitcast i8* %xnv_nv to double*
  %361 = load double* %360, align 8, !tbaa !6
  %cmp1678 = fcmp une double %361, 0.000000e+00
  %conv1679 = zext i1 %cmp1678 to i32
  br label %while.cond

cond.false1680:                                   ; preds = %cond.false1672
  %call1681 = call signext i8 @Perl_sv_2bool(%struct.sv* %ret.0) #6
  %conv1682 = sext i8 %call1681 to i32
  br label %while.cond

if.else1691:                                      ; preds = %cond.end1516
  %362 = load %struct.gv** @PL_replgv, align 8, !tbaa !3
  %call1692 = call %struct.sv* @Perl_save_scalar(%struct.gv* %362) #6
  call void @Perl_sv_setsv_flags(%struct.sv* %call1692, %struct.sv* %ret.0, i32 2) #6
  %precomp.i5522 = getelementptr inbounds %struct.regexp* %274, i64 0, i32 4
  %363 = load i8** %precomp.i5522, align 8, !tbaa !3
  store i8* %363, i8** @PL_regprecomp, align 8, !tbaa !3
  %nparens.i5523 = getelementptr inbounds %struct.regexp* %274, i64 0, i32 12
  %364 = load i32* %nparens.i5523, align 4, !tbaa !0
  store i32 %364, i32* @PL_regnpar, align 4, !tbaa !0
  %data.i5524 = getelementptr inbounds %struct.regexp* %274, i64 0, i32 5
  %365 = load %struct.reg_data** %data.i5524, align 8, !tbaa !3
  store %struct.reg_data* %365, %struct.reg_data** @PL_regdata, align 8, !tbaa !3
  store %struct.regexp* %274, %struct.regexp** @PL_reg_re, align 8, !tbaa !3
  br label %while.cond

sw.bb1694:                                        ; preds = %while.body
  %arg11695 = getelementptr inbounds %struct.regnode* %scan.0, i64 1
  %366 = bitcast %struct.regnode* %arg11695 to i32*
  %367 = load i32* %366, align 4, !tbaa !0
  %idxprom1696 = sext i32 %367 to i64
  %368 = load i8*** @PL_reg_start_tmp, align 8, !tbaa !3
  %arrayidx1697 = getelementptr inbounds i8** %368, i64 %idxprom1696
  store i8* %locinput.0, i8** %arrayidx1697, align 8, !tbaa !3
  %369 = load i32* @PL_regsize, align 4, !tbaa !0
  %cmp1698 = icmp sgt i32 %367, %369
  br i1 %cmp1698, label %if.then1700, label %while.cond

if.then1700:                                      ; preds = %sw.bb1694
  store i32 %367, i32* @PL_regsize, align 4, !tbaa !0
  br label %while.cond

sw.bb1702:                                        ; preds = %while.body
  %arg11703 = getelementptr inbounds %struct.regnode* %scan.0, i64 1
  %370 = bitcast %struct.regnode* %arg11703 to i32*
  %371 = load i32* %370, align 4, !tbaa !0
  %idxprom1704 = sext i32 %371 to i64
  %372 = load i8*** @PL_reg_start_tmp, align 8, !tbaa !3
  %arrayidx1705 = getelementptr inbounds i8** %372, i64 %idxprom1704
  %373 = load i8** %arrayidx1705, align 8, !tbaa !3
  %374 = load i8** @PL_bostr, align 8, !tbaa !3
  %sub.ptr.lhs.cast1706 = ptrtoint i8* %373 to i64
  %sub.ptr.rhs.cast1707 = ptrtoint i8* %374 to i64
  %sub.ptr.sub1708 = sub i64 %sub.ptr.lhs.cast1706, %sub.ptr.rhs.cast1707
  %conv1709 = trunc i64 %sub.ptr.sub1708 to i32
  %375 = load i32** @PL_regstartp, align 8, !tbaa !3
  %arrayidx1711 = getelementptr inbounds i32* %375, i64 %idxprom1704
  store i32 %conv1709, i32* %arrayidx1711, align 4, !tbaa !0
  %sub.ptr.lhs.cast1712 = ptrtoint i8* %locinput.0 to i64
  %sub.ptr.sub1714 = sub i64 %sub.ptr.lhs.cast1712, %sub.ptr.rhs.cast1707
  %conv1715 = trunc i64 %sub.ptr.sub1714 to i32
  %376 = load i32** @PL_regendp, align 8, !tbaa !3
  %arrayidx1717 = getelementptr inbounds i32* %376, i64 %idxprom1704
  store i32 %conv1715, i32* %arrayidx1717, align 4, !tbaa !0
  %377 = load i32** @PL_reglastparen, align 8, !tbaa !3
  %378 = load i32* %377, align 4, !tbaa !0
  %cmp1718 = icmp sgt i32 %371, %378
  br i1 %cmp1718, label %if.then1720, label %if.end1721

if.then1720:                                      ; preds = %sw.bb1702
  store i32 %371, i32* %377, align 4, !tbaa !0
  br label %if.end1721

if.end1721:                                       ; preds = %sw.bb1702, %if.then1720
  %379 = load i32** @PL_reglastcloseparen, align 8, !tbaa !3
  store i32 %371, i32* %379, align 4, !tbaa !0
  br label %while.cond

sw.bb1722:                                        ; preds = %while.body
  %arg11723 = getelementptr inbounds %struct.regnode* %scan.0, i64 1
  %380 = bitcast %struct.regnode* %arg11723 to i32*
  %381 = load i32* %380, align 4, !tbaa !0
  %382 = load i32** @PL_reglastparen, align 8, !tbaa !3
  %383 = load i32* %382, align 4, !tbaa !0
  %cmp1724 = icmp slt i32 %383, %381
  br i1 %cmp1724, label %land.end1731, label %land.rhs1726

land.rhs1726:                                     ; preds = %sw.bb1722
  %idxprom1727 = sext i32 %381 to i64
  %384 = load i32** @PL_regendp, align 8, !tbaa !3
  %arrayidx1728 = getelementptr inbounds i32* %384, i64 %idxprom1727
  %385 = load i32* %arrayidx1728, align 4, !tbaa !0
  %cmp1729 = icmp ne i32 %385, -1
  br label %land.end1731

land.end1731:                                     ; preds = %sw.bb1722, %land.rhs1726
  %386 = phi i1 [ false, %sw.bb1722 ], [ %cmp1729, %land.rhs1726 ]
  %land.ext1732 = zext i1 %386 to i32
  br label %while.cond

sw.bb1733:                                        ; preds = %while.body
  %387 = load i32* @PL_reg_maxiter, align 4, !tbaa !0
  store i32 %387, i32* @PL_reg_leftiter, align 4, !tbaa !0
  %tobool1734 = icmp eq i32 %sw.0, 0
  br i1 %tobool1734, label %if.else1738, label %if.then1735

if.then1735:                                      ; preds = %sw.bb1733
  %add.ptr1737 = getelementptr inbounds %struct.regnode* %scan.0, i64 2
  br label %while.cond

if.else1738:                                      ; preds = %sw.bb1733
  %arg11739 = getelementptr inbounds %struct.regnode* %scan.0, i64 1
  %388 = bitcast %struct.regnode* %arg11739 to i32*
  %389 = load i32* %388, align 4, !tbaa !0
  %idx.ext1740 = zext i32 %389 to i64
  %add.ptr1741 = getelementptr inbounds %struct.regnode* %scan.0, i64 %idx.ext1740
  %type1742 = getelementptr inbounds %struct.regnode* %scan.0, i64 %idx.ext1740, i32 1
  %390 = load i8* %type1742, align 1, !tbaa !1
  %cmp1744 = icmp eq i8 %390, 53
  br i1 %cmp1744, label %if.then1746, label %while.cond

if.then1746:                                      ; preds = %if.else1738
  %add.ptr1747.sum = add i64 %idx.ext1740, 2
  %add.ptr1748 = getelementptr inbounds %struct.regnode* %scan.0, i64 %add.ptr1747.sum
  br label %while.cond

sw.bb1751:                                        ; preds = %while.body
  %flags1752 = getelementptr inbounds %struct.regnode* %scan.0, i64 0, i32 0
  %391 = load i8* %flags1752, align 1, !tbaa !1
  %conv1753 = zext i8 %391 to i32
  br label %while.cond

sw.bb1754:                                        ; preds = %while.body
  call void @llvm.lifetime.start(i64 56, i8* %5) #4
  %392 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %flags1757 = getelementptr inbounds %struct.regnode* %scan.0, i64 0, i32 0
  %393 = load i8* %flags1757, align 1, !tbaa !1
  %conv1758 = zext i8 %393 to i32
  %type1760 = getelementptr inbounds %struct.regnode* %.add.ptr, i64 -1, i32 1
  %394 = load i8* %type1760, align 1, !tbaa !1
  %cmp1762 = icmp eq i8 %394, 36
  br i1 %cmp1762, label %if.then1764, label %if.end1768

if.then1764:                                      ; preds = %sw.bb1754
  %arg11765 = getelementptr inbounds %struct.regnode* %.add.ptr, i64 1
  %395 = bitcast %struct.regnode* %arg11765 to i32*
  %396 = load i32* %395, align 4, !tbaa !0
  %idx.ext1766 = zext i32 %396 to i64
  %add.ptr1767 = getelementptr inbounds %struct.regnode* %.add.ptr, i64 %idx.ext1766
  br label %if.end1768

if.end1768:                                       ; preds = %sw.bb1754, %if.then1764
  %next.0 = phi %struct.regnode* [ %add.ptr1767, %if.then1764 ], [ %.add.ptr, %sw.bb1754 ]
  %397 = load %struct.curcur** @PL_regcc, align 8, !tbaa !3
  store %struct.curcur* %397, %struct.curcur** %oldcc, align 8, !tbaa !3
  store %struct.curcur* %cc1755, %struct.curcur** @PL_regcc, align 8, !tbaa !3
  %398 = load i32** @PL_reglastparen, align 8, !tbaa !3
  %399 = load i32* %398, align 4, !tbaa !0
  %cmp1769 = icmp sgt i32 %conv1758, %399
  %.conv1758 = select i1 %cmp1769, i32 %399, i32 %conv1758
  store i32 %.conv1758, i32* %parenfloor1773, align 8, !tbaa !0
  store i32 -1, i32* %cur, align 4, !tbaa !0
  %arg11774 = getelementptr inbounds %struct.regnode* %scan.0, i64 1
  %400 = bitcast %struct.regnode* %arg11774 to i16*
  %401 = load i16* %400, align 2, !tbaa !5
  %conv1775 = zext i16 %401 to i32
  store i32 %conv1775, i32* %min, align 8, !tbaa !0
  %402 = getelementptr inbounds %struct.regnode* %scan.0, i64 1, i32 2
  %403 = load i16* %402, align 2, !tbaa !5
  %conv1776 = zext i16 %403 to i32
  store i32 %conv1776, i32* %max, align 4, !tbaa !0
  %add.ptr1778 = getelementptr inbounds %struct.regnode* %scan.0, i64 2
  store %struct.regnode* %add.ptr1778, %struct.regnode** %scan1779, align 8, !tbaa !3
  store %struct.regnode* %next.0, %struct.regnode** %next1780, align 8, !tbaa !3
  store i32 %minmod.0, i32* %minmod1781, align 8, !tbaa !0
  store i8* null, i8** %lastloc, align 8, !tbaa !3
  store i8* %locinput.0, i8** @PL_reginput, align 8, !tbaa !3
  %add.ptr1782 = getelementptr inbounds %struct.regnode* %next.0, i64 -1
  %call1783 = call fastcc i32 @S_regmatch(%struct.regnode* %add.ptr1782) #5
  %404 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %cmp1784 = icmp sgt i32 %404, %392
  br i1 %cmp1784, label %if.then1786, label %if.end1787

if.then1786:                                      ; preds = %if.end1768
  call void @Perl_leave_scope(i32 %392) #6
  br label %if.end1787

if.end1787:                                       ; preds = %if.then1786, %if.end1768
  %405 = load %struct.curcur** %oldcc, align 8, !tbaa !3
  store %struct.curcur* %405, %struct.curcur** @PL_regcc, align 8, !tbaa !3
  %tobool1789 = icmp eq i32 %call1783, 0
  call void @llvm.lifetime.end(i64 56, i8* %5) #4
  br i1 %tobool1789, label %do_no.preheader, label %return

sw.bb1794:                                        ; preds = %while.body
  %406 = load %struct.curcur** @PL_regcc, align 8, !tbaa !3
  %lastloc1799 = getelementptr inbounds %struct.curcur* %406, i64 0, i32 7
  %407 = load i8** %lastloc1799, align 8, !tbaa !3
  %cur1800 = getelementptr inbounds %struct.curcur* %406, i64 0, i32 1
  %408 = load i32* %cur1800, align 4, !tbaa !0
  %add1801 = add nsw i32 %408, 1
  store i8* %locinput.0, i8** @PL_reginput, align 8, !tbaa !3
  %409 = load i8** %lastloc1799, align 8, !tbaa !3
  %cmp1803 = icmp ne i8* %locinput.0, %409
  %min1806 = getelementptr inbounds %struct.curcur* %406, i64 0, i32 2
  %410 = load i32* %min1806, align 4, !tbaa !0
  %cmp1807 = icmp slt i32 %add1801, %410
  %or.cond5767 = or i1 %cmp1803, %cmp1807
  br i1 %or.cond5767, label %if.end1824, label %if.then1809

if.then1809:                                      ; preds = %sw.bb1794
  %oldcc1810 = getelementptr inbounds %struct.curcur* %406, i64 0, i32 8
  %411 = load %struct.curcur** %oldcc1810, align 8, !tbaa !3
  store %struct.curcur* %411, %struct.curcur** @PL_regcc, align 8, !tbaa !3
  %tobool1811 = icmp eq %struct.curcur* %411, null
  br i1 %tobool1811, label %if.end1814, label %if.then1812

if.then1812:                                      ; preds = %if.then1809
  %cur1813 = getelementptr inbounds %struct.curcur* %411, i64 0, i32 1
  %412 = load i32* %cur1813, align 4, !tbaa !0
  br label %if.end1814

if.end1814:                                       ; preds = %if.then1809, %if.then1812
  %ln.3 = phi i32 [ %412, %if.then1812 ], [ %ln.0, %if.then1809 ]
  %next1815 = getelementptr inbounds %struct.curcur* %406, i64 0, i32 6
  %413 = load %struct.regnode** %next1815, align 8, !tbaa !3
  %call1816 = call fastcc i32 @S_regmatch(%struct.regnode* %413) #5
  %tobool1817 = icmp eq i32 %call1816, 0
  br i1 %tobool1817, label %if.end1819, label %return

if.end1819:                                       ; preds = %if.end1814
  %414 = load %struct.curcur** @PL_regcc, align 8, !tbaa !3
  %tobool1820 = icmp eq %struct.curcur* %414, null
  br i1 %tobool1820, label %if.end1823, label %if.then1821

if.then1821:                                      ; preds = %if.end1819
  %cur1822 = getelementptr inbounds %struct.curcur* %414, i64 0, i32 1
  store i32 %ln.3, i32* %cur1822, align 4, !tbaa !0
  br label %if.end1823

if.end1823:                                       ; preds = %if.end1819, %if.then1821
  store %struct.curcur* %406, %struct.curcur** @PL_regcc, align 8, !tbaa !3
  br label %do_no.preheader

if.end1824:                                       ; preds = %sw.bb1794
  %cmp1826 = icmp slt i32 %add1801, %410
  br i1 %cmp1826, label %if.then1828, label %if.end1839

if.then1828:                                      ; preds = %if.end1824
  store i32 %add1801, i32* %cur1800, align 4, !tbaa !0
  store i8* %locinput.0, i8** %lastloc1799, align 8, !tbaa !3
  %scan1831 = getelementptr inbounds %struct.curcur* %406, i64 0, i32 5
  %415 = load %struct.regnode** %scan1831, align 8, !tbaa !3
  %call1832 = call fastcc i32 @S_regmatch(%struct.regnode* %415) #5
  %tobool1833 = icmp eq i32 %call1832, 0
  br i1 %tobool1833, label %if.end1835, label %return

if.end1835:                                       ; preds = %if.then1828
  store i32 %408, i32* %cur1800, align 4, !tbaa !0
  store i8* %407, i8** %lastloc1799, align 8, !tbaa !3
  br label %do_no.preheader

if.end1839:                                       ; preds = %if.end1824
  %flags1840 = getelementptr inbounds %struct.regnode* %scan.0, i64 0, i32 0
  %416 = load i8* %flags1840, align 1, !tbaa !1
  %tobool1841 = icmp eq i8 %416, 0
  br i1 %tobool1841, label %if.end1921, label %if.then1842

if.then1842:                                      ; preds = %if.end1839
  %417 = load i32* @PL_reg_maxiter, align 4, !tbaa !0
  %tobool1843 = icmp eq i32 %417, 0
  br i1 %tobool1843, label %if.then1844, label %if.end1854thread-pre-split

if.then1844:                                      ; preds = %if.then1842
  %418 = load i8** @PL_regeol, align 8, !tbaa !3
  %419 = load i8** @PL_bostr, align 8, !tbaa !3
  %sub.ptr.lhs.cast1845 = ptrtoint i8* %418 to i64
  %sub.ptr.rhs.cast1846 = ptrtoint i8* %419 to i64
  %sub.ptr.sub1847 = add i64 %sub.ptr.lhs.cast1845, 1
  %add1848 = sub i64 %sub.ptr.sub1847, %sub.ptr.rhs.cast1846
  %conv1850 = zext i8 %416 to i64
  %shr18515428 = lshr i64 %conv1850, 4
  %mul = mul nsw i64 %add1848, %shr18515428
  %conv1853 = trunc i64 %mul to i32
  store i32 %conv1853, i32* @PL_reg_maxiter, align 4, !tbaa !0
  store i32 %conv1853, i32* @PL_reg_leftiter, align 4, !tbaa !0
  br label %if.end1854

if.end1854thread-pre-split:                       ; preds = %if.then1842
  %.pr = load i32* @PL_reg_leftiter, align 4, !tbaa !0
  br label %if.end1854

if.end1854:                                       ; preds = %if.end1854thread-pre-split, %if.then1844
  %420 = phi i32 [ %417, %if.end1854thread-pre-split ], [ %conv1853, %if.then1844 ]
  %421 = phi i32 [ %.pr, %if.end1854thread-pre-split ], [ %conv1853, %if.then1844 ]
  %dec = add nsw i32 %421, -1
  store i32 %dec, i32* @PL_reg_leftiter, align 4, !tbaa !0
  %cmp1855 = icmp eq i32 %421, 0
  br i1 %cmp1855, label %if.then1857, label %if.end1881

if.then1857:                                      ; preds = %if.end1854
  %add1859 = add nsw i32 %420, 9
  %div = sdiv i32 %add1859, 8
  %422 = load i8** @PL_reg_poscache, align 8, !tbaa !3
  %tobool1860 = icmp eq i8* %422, null
  br i1 %tobool1860, label %if.else1873, label %if.then1861

if.then1861:                                      ; preds = %if.then1857
  %423 = load i64* @PL_reg_poscache_size, align 8, !tbaa !4
  %conv1862 = trunc i64 %423 to i32
  %cmp1863 = icmp slt i32 %conv1862, %div
  %conv1866 = sext i32 %div to i64
  br i1 %cmp1863, label %if.then1865, label %if.end1870

if.then1865:                                      ; preds = %if.then1861
  %call1868 = call i8* @Perl_safesysrealloc(i8* %422, i64 %conv1866) #6
  store i8* %call1868, i8** @PL_reg_poscache, align 8, !tbaa !3
  store i64 %conv1866, i64* @PL_reg_poscache_size, align 8, !tbaa !4
  br label %if.end1870

if.end1870:                                       ; preds = %if.then1861, %if.then1865
  %424 = phi i8* [ %call1868, %if.then1865 ], [ %422, %if.then1861 ]
  call void @llvm.memset.p0i8.i64(i8* %424, i8 0, i64 %conv1866, i32 1, i1 false)
  br label %if.end1881thread-pre-split

if.else1873:                                      ; preds = %if.then1857
  %conv1874 = sext i32 %div to i64
  store i64 %conv1874, i64* @PL_reg_poscache_size, align 8, !tbaa !4
  %call1877 = call i8* @Perl_safesysmalloc(i64 %conv1874) #6
  store i8* %call1877, i8** @PL_reg_poscache, align 8, !tbaa !3
  call void @llvm.memset.p0i8.i64(i8* %call1877, i8 0, i64 %conv1874, i32 1, i1 false)
  br label %if.end1881thread-pre-split

if.end1881thread-pre-split:                       ; preds = %if.else1873, %if.end1870
  %.pr5545 = load i32* @PL_reg_leftiter, align 4, !tbaa !0
  br label %if.end1881

if.end1881:                                       ; preds = %if.end1881thread-pre-split, %if.end1854
  %425 = phi i32 [ %.pr5545, %if.end1881thread-pre-split ], [ %dec, %if.end1854 ]
  %cmp1882 = icmp slt i32 %425, 0
  br i1 %cmp1882, label %if.then1884, label %if.end1921

if.then1884:                                      ; preds = %if.end1881
  %426 = load i8** @PL_bostr, align 8, !tbaa !3
  %sub.ptr.lhs.cast1885 = ptrtoint i8* %locinput.0 to i64
  %sub.ptr.rhs.cast1886 = ptrtoint i8* %426 to i64
  %sub.ptr.sub1887 = sub i64 %sub.ptr.lhs.cast1885, %sub.ptr.rhs.cast1886
  %conv1888 = trunc i64 %sub.ptr.sub1887 to i32
  %427 = load i8* %flags1840, align 1, !tbaa !1
  %conv1890 = zext i8 %427 to i32
  %and1891 = and i32 %conv1890, 15
  %add1893 = add nsw i32 %and1891, 1
  %shr18965430 = lshr i32 %conv1890, 4
  %mul1897 = mul nsw i32 %conv1888, %shr18965430
  %add1898 = add nsw i32 %add1893, %mul1897
  %rem = srem i32 %add1898, 8
  %div1899 = sdiv i32 %add1898, 8
  %idxprom1900 = sext i32 %div1899 to i64
  %428 = load i8** @PL_reg_poscache, align 8, !tbaa !3
  %arrayidx1901 = getelementptr inbounds i8* %428, i64 %idxprom1900
  %429 = load i8* %arrayidx1901, align 1, !tbaa !1
  %conv1902 = sext i8 %429 to i32
  %shl1903 = shl i32 1, %rem
  %and1904 = and i32 %conv1902, %shl1903
  %tobool1905 = icmp eq i32 %and1904, 0
  br i1 %tobool1905, label %if.end1913, label %if.then1906

if.then1906:                                      ; preds = %if.then1884
  %430 = load i8* %428, align 1, !tbaa !1
  %and1909 = and i8 %430, 1
  %tobool1910 = icmp eq i8 %and1909, 0
  br i1 %tobool1910, label %do_no.preheader, label %return

if.end1913:                                       ; preds = %if.then1884
  %or1918 = or i32 %conv1902, %shl1903
  %conv1919 = trunc i32 %or1918 to i8
  store i8 %conv1919, i8* %arrayidx1901, align 1, !tbaa !1
  br label %if.end1921

if.end1921:                                       ; preds = %if.end1839, %if.end1881, %if.end1913
  %cache_offset.0 = phi i32 [ %div1899, %if.end1913 ], [ 0, %if.end1881 ], [ 0, %if.end1839 ]
  %cache_bit.0 = phi i32 [ %rem, %if.end1913 ], [ 0, %if.end1881 ], [ 0, %if.end1839 ]
  %minmod1922 = getelementptr inbounds %struct.curcur* %406, i64 0, i32 4
  %431 = load i32* %minmod1922, align 4, !tbaa !0
  %tobool1923 = icmp eq i32 %431, 0
  br i1 %tobool1923, label %if.end2123, label %if.then1924

if.then1924:                                      ; preds = %if.end1921
  %oldcc1925 = getelementptr inbounds %struct.curcur* %406, i64 0, i32 8
  %432 = load %struct.curcur** %oldcc1925, align 8, !tbaa !3
  store %struct.curcur* %432, %struct.curcur** @PL_regcc, align 8, !tbaa !3
  %tobool1926 = icmp eq %struct.curcur* %432, null
  br i1 %tobool1926, label %if.end1929, label %if.then1927

if.then1927:                                      ; preds = %if.then1924
  %cur1928 = getelementptr inbounds %struct.curcur* %432, i64 0, i32 1
  %433 = load i32* %cur1928, align 4, !tbaa !0
  br label %if.end1929

if.end1929:                                       ; preds = %if.then1924, %if.then1927
  %ln.4 = phi i32 [ %433, %if.then1927 ], [ %ln.0, %if.then1924 ]
  %parenfloor1930 = getelementptr inbounds %struct.curcur* %406, i64 0, i32 0
  %434 = load i32* %parenfloor1930, align 4, !tbaa !0
  %call1931 = call fastcc i32 @S_regcppush(i32 %434) #5
  %435 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %next1932 = getelementptr inbounds %struct.curcur* %406, i64 0, i32 6
  %436 = load %struct.regnode** %next1932, align 8, !tbaa !3
  %call1933 = call fastcc i32 @S_regmatch(%struct.regnode* %436) #5
  %tobool1934 = icmp eq i32 %call1933, 0
  %437 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  br i1 %tobool1934, label %if.end1967, label %if.then1935

if.then1935:                                      ; preds = %if.end1929
  %cmp1936 = icmp sgt i32 %437, %call1931
  br i1 %cmp1936, label %if.then1938, label %if.end1939

if.then1938:                                      ; preds = %if.then1935
  call void @Perl_leave_scope(i32 %call1931) #6
  br label %if.end1939

if.end1939:                                       ; preds = %if.then1938, %if.then1935
  %or1940 = or i32 %cache_bit.0, %cache_offset.0
  %tobool1941 = icmp eq i32 %or1940, 0
  br i1 %tobool1941, label %return, label %if.then1942

if.then1942:                                      ; preds = %if.end1939
  %438 = load i8** @PL_reg_poscache, align 8, !tbaa !3
  %439 = load i8* %438, align 1, !tbaa !1
  %conv1944 = sext i8 %439 to i32
  %and1945 = and i32 %conv1944, 2
  %tobool1946 = icmp eq i32 %and1945, 0
  br i1 %tobool1946, label %if.then1947, label %if.else1952

if.then1947:                                      ; preds = %if.then1942
  %or1950 = or i8 %439, 1
  store i8 %or1950, i8* %438, align 1, !tbaa !1
  br label %return

if.else1952:                                      ; preds = %if.then1942
  %and1955 = and i32 %conv1944, 1
  %tobool1956 = icmp eq i32 %and1955, 0
  br i1 %tobool1956, label %if.then1957, label %return

if.then1957:                                      ; preds = %if.else1952
  %shl1958 = shl i32 1, %cache_bit.0
  %neg = xor i32 %shl1958, 255
  %idxprom1959 = sext i32 %cache_offset.0 to i64
  %arrayidx1960 = getelementptr inbounds i8* %438, i64 %idxprom1959
  %440 = load i8* %arrayidx1960, align 1, !tbaa !1
  %conv19615427 = zext i8 %440 to i32
  %and1962 = and i32 %conv19615427, %neg
  %conv1963 = trunc i32 %and1962 to i8
  store i8 %conv1963, i8* %arrayidx1960, align 1, !tbaa !1
  br label %return

if.end1967:                                       ; preds = %if.end1929
  %cmp1968 = icmp sgt i32 %437, %435
  br i1 %cmp1968, label %if.then1970, label %if.end1971

if.then1970:                                      ; preds = %if.end1967
  call void @Perl_leave_scope(i32 %435) #6
  br label %if.end1971

if.end1971:                                       ; preds = %if.then1970, %if.end1967
  call fastcc void @S_regcppop() #5
  %441 = load %struct.curcur** @PL_regcc, align 8, !tbaa !3
  %tobool1973 = icmp eq %struct.curcur* %441, null
  br i1 %tobool1973, label %if.end1976, label %if.then1974

if.then1974:                                      ; preds = %if.end1971
  %cur1975 = getelementptr inbounds %struct.curcur* %441, i64 0, i32 1
  store i32 %ln.4, i32* %cur1975, align 4, !tbaa !0
  br label %if.end1976

if.end1976:                                       ; preds = %if.end1971, %if.then1974
  store %struct.curcur* %406, %struct.curcur** @PL_regcc, align 8, !tbaa !3
  %max1977 = getelementptr inbounds %struct.curcur* %406, i64 0, i32 3
  %442 = load i32* %max1977, align 4, !tbaa !0
  %cmp1978 = icmp slt i32 %add1801, %442
  br i1 %cmp1978, label %if.end2045, label %if.then1980

if.then1980:                                      ; preds = %if.end1976
  %443 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings1981 = getelementptr inbounds %struct.cop* %443, i64 0, i32 14
  %444 = load %struct.sv** %cop_warnings1981, align 8, !tbaa !3
  %cmp1982 = icmp eq %struct.sv* %444, null
  br i1 %cmp1982, label %lor.lhs.false2000, label %land.lhs.true1984

land.lhs.true1984:                                ; preds = %if.then1980
  %445 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings1985 = getelementptr inbounds %struct.cop* %445, i64 0, i32 14
  %446 = load %struct.sv** %cop_warnings1985, align 8, !tbaa !3
  %cmp1986 = icmp eq %struct.sv* %446, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp1986, label %lor.lhs.false2000, label %land.lhs.true1988

land.lhs.true1988:                                ; preds = %land.lhs.true1984
  %447 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings1989 = getelementptr inbounds %struct.cop* %447, i64 0, i32 14
  %448 = load %struct.sv** %cop_warnings1989, align 8, !tbaa !3
  %cmp1990 = icmp eq %struct.sv* %448, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp1990, label %land.lhs.true2008, label %lor.lhs.false1992

lor.lhs.false1992:                                ; preds = %land.lhs.true1988
  %449 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings1993 = getelementptr inbounds %struct.cop* %449, i64 0, i32 14
  %450 = load %struct.sv** %cop_warnings1993, align 8, !tbaa !3
  %sv_any1994 = getelementptr inbounds %struct.sv* %450, i64 0, i32 0
  %451 = load i8** %sv_any1994, align 8, !tbaa !3
  %xpv_pv1995 = bitcast i8* %451 to i8**
  %452 = load i8** %xpv_pv1995, align 8, !tbaa !3
  %arrayidx1996 = getelementptr inbounds i8* %452, i64 5
  %453 = load i8* %arrayidx1996, align 1, !tbaa !1
  %and1998 = and i8 %453, 1
  %tobool1999 = icmp eq i8 %and1998, 0
  br i1 %tobool1999, label %lor.lhs.false2000, label %land.lhs.true2008

lor.lhs.false2000:                                ; preds = %lor.lhs.false1992, %land.lhs.true1984, %if.then1980
  %454 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings2001 = getelementptr inbounds %struct.cop* %454, i64 0, i32 14
  %455 = load %struct.sv** %cop_warnings2001, align 8, !tbaa !3
  %cmp2002 = icmp eq %struct.sv* %455, null
  br i1 %cmp2002, label %land.lhs.true2004, label %if.end2016

land.lhs.true2004:                                ; preds = %lor.lhs.false2000
  %456 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and2006 = and i8 %456, 1
  %tobool2007 = icmp ne i8 %and2006, 0
  %cmp2009 = icmp sgt i32 %408, 32765
  %or.cond5493 = and i1 %tobool2007, %cmp2009
  br i1 %or.cond5493, label %land.lhs.true2011, label %if.end2016

land.lhs.true2008:                                ; preds = %lor.lhs.false1992, %land.lhs.true1988
  %cmp2009.old = icmp sgt i32 %408, 32765
  br i1 %cmp2009.old, label %land.lhs.true2011, label %if.end2016

land.lhs.true2011:                                ; preds = %land.lhs.true2004, %land.lhs.true2008
  %457 = load i32* @PL_reg_flags, align 4, !tbaa !0
  %and2012 = and i32 %457, 2
  %tobool2013 = icmp eq i32 %and2012, 0
  br i1 %tobool2013, label %if.then2014, label %if.end2016

if.then2014:                                      ; preds = %land.lhs.true2011
  %or2015 = or i32 %457, 2
  store i32 %or2015, i32* @PL_reg_flags, align 4, !tbaa !0
  call void (i32, i8*, ...)* @Perl_warner(i32 20, i8* getelementptr inbounds ([23 x i8]* @.str8, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8]* @.str9, i64 0, i64 0), i32 32766) #6
  br label %if.end2016

if.end2016:                                       ; preds = %land.lhs.true2004, %land.lhs.true2011, %if.then2014, %land.lhs.true2008, %lor.lhs.false2000
  %or2017 = or i32 %cache_bit.0, %cache_offset.0
  %tobool2018 = icmp eq i32 %or2017, 0
  br i1 %tobool2018, label %do_no.preheader, label %if.then2019

if.then2019:                                      ; preds = %if.end2016
  %458 = load i8** @PL_reg_poscache, align 8, !tbaa !3
  %459 = load i8* %458, align 1, !tbaa !1
  %conv2021 = sext i8 %459 to i32
  %and2022 = and i32 %conv2021, 2
  %tobool2023 = icmp eq i32 %and2022, 0
  br i1 %tobool2023, label %if.then2024, label %if.else2029

if.then2024:                                      ; preds = %if.then2019
  %or2027 = or i8 %459, 2
  store i8 %or2027, i8* %458, align 1, !tbaa !1
  br label %do_no.preheader

if.else2029:                                      ; preds = %if.then2019
  %and2032 = and i32 %conv2021, 1
  %tobool2033 = icmp eq i32 %and2032, 0
  br i1 %tobool2033, label %do_no.preheader, label %if.then2034

if.then2034:                                      ; preds = %if.else2029
  %shl2035 = shl i32 1, %cache_bit.0
  %neg2036 = xor i32 %shl2035, 255
  %idxprom2037 = sext i32 %cache_offset.0 to i64
  %arrayidx2038 = getelementptr inbounds i8* %458, i64 %idxprom2037
  %460 = load i8* %arrayidx2038, align 1, !tbaa !1
  %conv20395425 = zext i8 %460 to i32
  %and2040 = and i32 %conv20395425, %neg2036
  %conv2041 = trunc i32 %and2040 to i8
  store i8 %conv2041, i8* %arrayidx2038, align 1, !tbaa !1
  br label %do_no.preheader

if.end2045:                                       ; preds = %if.end1976
  store i8* %locinput.0, i8** @PL_reginput, align 8, !tbaa !3
  store i32 %add1801, i32* %cur1800, align 4, !tbaa !0
  store i8* %locinput.0, i8** %lastloc1799, align 8, !tbaa !3
  %461 = load i32* %parenfloor1930, align 4, !tbaa !0
  %call2049 = call fastcc i32 @S_regcppush(i32 %461) #5
  %462 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %scan2050 = getelementptr inbounds %struct.curcur* %406, i64 0, i32 5
  %463 = load %struct.regnode** %scan2050, align 8, !tbaa !3
  %call2051 = call fastcc i32 @S_regmatch(%struct.regnode* %463) #5
  %tobool2052 = icmp eq i32 %call2051, 0
  %464 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  br i1 %tobool2052, label %if.end2086, label %if.then2053

if.then2053:                                      ; preds = %if.end2045
  %cmp2054 = icmp sgt i32 %464, %call2049
  br i1 %cmp2054, label %if.then2056, label %if.end2057

if.then2056:                                      ; preds = %if.then2053
  call void @Perl_leave_scope(i32 %call2049) #6
  br label %if.end2057

if.end2057:                                       ; preds = %if.then2056, %if.then2053
  %or2058 = or i32 %cache_bit.0, %cache_offset.0
  %tobool2059 = icmp eq i32 %or2058, 0
  br i1 %tobool2059, label %return, label %if.then2060

if.then2060:                                      ; preds = %if.end2057
  %465 = load i8** @PL_reg_poscache, align 8, !tbaa !3
  %466 = load i8* %465, align 1, !tbaa !1
  %conv2062 = sext i8 %466 to i32
  %and2063 = and i32 %conv2062, 2
  %tobool2064 = icmp eq i32 %and2063, 0
  br i1 %tobool2064, label %if.then2065, label %if.else2070

if.then2065:                                      ; preds = %if.then2060
  %or2068 = or i8 %466, 1
  store i8 %or2068, i8* %465, align 1, !tbaa !1
  br label %return

if.else2070:                                      ; preds = %if.then2060
  %and2073 = and i32 %conv2062, 1
  %tobool2074 = icmp eq i32 %and2073, 0
  br i1 %tobool2074, label %if.then2075, label %return

if.then2075:                                      ; preds = %if.else2070
  %shl2076 = shl i32 1, %cache_bit.0
  %neg2077 = xor i32 %shl2076, 255
  %idxprom2078 = sext i32 %cache_offset.0 to i64
  %arrayidx2079 = getelementptr inbounds i8* %465, i64 %idxprom2078
  %467 = load i8* %arrayidx2079, align 1, !tbaa !1
  %conv20805424 = zext i8 %467 to i32
  %and2081 = and i32 %conv20805424, %neg2077
  %conv2082 = trunc i32 %and2081 to i8
  store i8 %conv2082, i8* %arrayidx2079, align 1, !tbaa !1
  br label %return

if.end2086:                                       ; preds = %if.end2045
  %cmp2087 = icmp sgt i32 %464, %462
  br i1 %cmp2087, label %if.then2089, label %if.end2090

if.then2089:                                      ; preds = %if.end2086
  call void @Perl_leave_scope(i32 %462) #6
  br label %if.end2090

if.end2090:                                       ; preds = %if.then2089, %if.end2086
  call fastcc void @S_regcppop() #5
  store i32 %408, i32* %cur1800, align 4, !tbaa !0
  store i8* %407, i8** %lastloc1799, align 8, !tbaa !3
  %or2095 = or i32 %cache_bit.0, %cache_offset.0
  %tobool2096 = icmp eq i32 %or2095, 0
  br i1 %tobool2096, label %do_no.preheader, label %if.then2097

if.then2097:                                      ; preds = %if.end2090
  %468 = load i8** @PL_reg_poscache, align 8, !tbaa !3
  %469 = load i8* %468, align 1, !tbaa !1
  %conv2099 = sext i8 %469 to i32
  %and2100 = and i32 %conv2099, 2
  %tobool2101 = icmp eq i32 %and2100, 0
  br i1 %tobool2101, label %if.then2102, label %if.else2107

if.then2102:                                      ; preds = %if.then2097
  %or2105 = or i8 %469, 2
  store i8 %or2105, i8* %468, align 1, !tbaa !1
  br label %do_no.preheader

if.else2107:                                      ; preds = %if.then2097
  %and2110 = and i32 %conv2099, 1
  %tobool2111 = icmp eq i32 %and2110, 0
  br i1 %tobool2111, label %do_no.preheader, label %if.then2112

if.then2112:                                      ; preds = %if.else2107
  %shl2113 = shl i32 1, %cache_bit.0
  %neg2114 = xor i32 %shl2113, 255
  %idxprom2115 = sext i32 %cache_offset.0 to i64
  %arrayidx2116 = getelementptr inbounds i8* %468, i64 %idxprom2115
  %470 = load i8* %arrayidx2116, align 1, !tbaa !1
  %conv21175423 = zext i8 %470 to i32
  %and2118 = and i32 %conv21175423, %neg2114
  %conv2119 = trunc i32 %and2118 to i8
  store i8 %conv2119, i8* %arrayidx2116, align 1, !tbaa !1
  br label %do_no.preheader

if.end2123:                                       ; preds = %if.end1921
  %max2124 = getelementptr inbounds %struct.curcur* %406, i64 0, i32 3
  %471 = load i32* %max2124, align 4, !tbaa !0
  %cmp2125 = icmp slt i32 %add1801, %471
  br i1 %cmp2125, label %if.then2127, label %if.end2174

if.then2127:                                      ; preds = %if.end2123
  %parenfloor2128 = getelementptr inbounds %struct.curcur* %406, i64 0, i32 0
  %472 = load i32* %parenfloor2128, align 4, !tbaa !0
  %call2129 = call fastcc i32 @S_regcppush(i32 %472) #5
  store i32 %add1801, i32* %cur1800, align 4, !tbaa !0
  store i8* %locinput.0, i8** %lastloc1799, align 8, !tbaa !3
  %473 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %scan2132 = getelementptr inbounds %struct.curcur* %406, i64 0, i32 5
  %474 = load %struct.regnode** %scan2132, align 8, !tbaa !3
  %call2133 = call fastcc i32 @S_regmatch(%struct.regnode* %474) #5
  %tobool2134 = icmp eq i32 %call2133, 0
  %475 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  br i1 %tobool2134, label %if.end2168, label %if.then2135

if.then2135:                                      ; preds = %if.then2127
  %cmp2136 = icmp sgt i32 %475, %call2129
  br i1 %cmp2136, label %if.then2138, label %if.end2139

if.then2138:                                      ; preds = %if.then2135
  call void @Perl_leave_scope(i32 %call2129) #6
  br label %if.end2139

if.end2139:                                       ; preds = %if.then2138, %if.then2135
  %or2140 = or i32 %cache_bit.0, %cache_offset.0
  %tobool2141 = icmp eq i32 %or2140, 0
  br i1 %tobool2141, label %return, label %if.then2142

if.then2142:                                      ; preds = %if.end2139
  %476 = load i8** @PL_reg_poscache, align 8, !tbaa !3
  %477 = load i8* %476, align 1, !tbaa !1
  %conv2144 = sext i8 %477 to i32
  %and2145 = and i32 %conv2144, 2
  %tobool2146 = icmp eq i32 %and2145, 0
  br i1 %tobool2146, label %if.then2147, label %if.else2152

if.then2147:                                      ; preds = %if.then2142
  %or2150 = or i8 %477, 1
  store i8 %or2150, i8* %476, align 1, !tbaa !1
  br label %return

if.else2152:                                      ; preds = %if.then2142
  %and2155 = and i32 %conv2144, 1
  %tobool2156 = icmp eq i32 %and2155, 0
  br i1 %tobool2156, label %if.then2157, label %return

if.then2157:                                      ; preds = %if.else2152
  %shl2158 = shl i32 1, %cache_bit.0
  %neg2159 = xor i32 %shl2158, 255
  %idxprom2160 = sext i32 %cache_offset.0 to i64
  %arrayidx2161 = getelementptr inbounds i8* %476, i64 %idxprom2160
  %478 = load i8* %arrayidx2161, align 1, !tbaa !1
  %conv21625422 = zext i8 %478 to i32
  %and2163 = and i32 %conv21625422, %neg2159
  %conv2164 = trunc i32 %and2163 to i8
  store i8 %conv2164, i8* %arrayidx2161, align 1, !tbaa !1
  br label %return

if.end2168:                                       ; preds = %if.then2127
  %cmp2169 = icmp sgt i32 %475, %473
  br i1 %cmp2169, label %if.then2171, label %if.end2172

if.then2171:                                      ; preds = %if.end2168
  call void @Perl_leave_scope(i32 %473) #6
  br label %if.end2172

if.end2172:                                       ; preds = %if.then2171, %if.end2168
  call fastcc void @S_regcppop() #5
  store i8* %locinput.0, i8** @PL_reginput, align 8, !tbaa !3
  br label %if.end2174

if.end2174:                                       ; preds = %if.end2172, %if.end2123
  %479 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings2175 = getelementptr inbounds %struct.cop* %479, i64 0, i32 14
  %480 = load %struct.sv** %cop_warnings2175, align 8, !tbaa !3
  %cmp2176 = icmp eq %struct.sv* %480, null
  br i1 %cmp2176, label %lor.lhs.false2194, label %land.lhs.true2178

land.lhs.true2178:                                ; preds = %if.end2174
  %481 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings2179 = getelementptr inbounds %struct.cop* %481, i64 0, i32 14
  %482 = load %struct.sv** %cop_warnings2179, align 8, !tbaa !3
  %cmp2180 = icmp eq %struct.sv* %482, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp2180, label %lor.lhs.false2194, label %land.lhs.true2182

land.lhs.true2182:                                ; preds = %land.lhs.true2178
  %483 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings2183 = getelementptr inbounds %struct.cop* %483, i64 0, i32 14
  %484 = load %struct.sv** %cop_warnings2183, align 8, !tbaa !3
  %cmp2184 = icmp eq %struct.sv* %484, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp2184, label %land.lhs.true2202, label %lor.lhs.false2186

lor.lhs.false2186:                                ; preds = %land.lhs.true2182
  %485 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings2187 = getelementptr inbounds %struct.cop* %485, i64 0, i32 14
  %486 = load %struct.sv** %cop_warnings2187, align 8, !tbaa !3
  %sv_any2188 = getelementptr inbounds %struct.sv* %486, i64 0, i32 0
  %487 = load i8** %sv_any2188, align 8, !tbaa !3
  %xpv_pv2189 = bitcast i8* %487 to i8**
  %488 = load i8** %xpv_pv2189, align 8, !tbaa !3
  %arrayidx2190 = getelementptr inbounds i8* %488, i64 5
  %489 = load i8* %arrayidx2190, align 1, !tbaa !1
  %and2192 = and i8 %489, 1
  %tobool2193 = icmp eq i8 %and2192, 0
  br i1 %tobool2193, label %lor.lhs.false2194, label %land.lhs.true2202

lor.lhs.false2194:                                ; preds = %lor.lhs.false2186, %land.lhs.true2178, %if.end2174
  %490 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings2195 = getelementptr inbounds %struct.cop* %490, i64 0, i32 14
  %491 = load %struct.sv** %cop_warnings2195, align 8, !tbaa !3
  %cmp2196 = icmp eq %struct.sv* %491, null
  br i1 %cmp2196, label %land.lhs.true2198, label %if.end2210

land.lhs.true2198:                                ; preds = %lor.lhs.false2194
  %492 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and2200 = and i8 %492, 1
  %tobool2201 = icmp ne i8 %and2200, 0
  %cmp2203 = icmp sgt i32 %408, 32765
  %or.cond5494 = and i1 %tobool2201, %cmp2203
  br i1 %or.cond5494, label %land.lhs.true2205, label %if.end2210

land.lhs.true2202:                                ; preds = %lor.lhs.false2186, %land.lhs.true2182
  %cmp2203.old = icmp sgt i32 %408, 32765
  br i1 %cmp2203.old, label %land.lhs.true2205, label %if.end2210

land.lhs.true2205:                                ; preds = %land.lhs.true2198, %land.lhs.true2202
  %493 = load i32* @PL_reg_flags, align 4, !tbaa !0
  %and2206 = and i32 %493, 2
  %tobool2207 = icmp eq i32 %and2206, 0
  br i1 %tobool2207, label %if.then2208, label %if.end2210

if.then2208:                                      ; preds = %land.lhs.true2205
  %or2209 = or i32 %493, 2
  store i32 %or2209, i32* @PL_reg_flags, align 4, !tbaa !0
  call void (i32, i8*, ...)* @Perl_warner(i32 20, i8* getelementptr inbounds ([23 x i8]* @.str8, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8]* @.str9, i64 0, i64 0), i32 32766) #6
  br label %if.end2210

if.end2210:                                       ; preds = %land.lhs.true2198, %land.lhs.true2205, %if.then2208, %land.lhs.true2202, %lor.lhs.false2194
  %oldcc2211 = getelementptr inbounds %struct.curcur* %406, i64 0, i32 8
  %494 = load %struct.curcur** %oldcc2211, align 8, !tbaa !3
  store %struct.curcur* %494, %struct.curcur** @PL_regcc, align 8, !tbaa !3
  %tobool2212 = icmp eq %struct.curcur* %494, null
  br i1 %tobool2212, label %if.end2215, label %if.then2213

if.then2213:                                      ; preds = %if.end2210
  %cur2214 = getelementptr inbounds %struct.curcur* %494, i64 0, i32 1
  %495 = load i32* %cur2214, align 4, !tbaa !0
  br label %if.end2215

if.end2215:                                       ; preds = %if.end2210, %if.then2213
  %ln.5 = phi i32 [ %495, %if.then2213 ], [ %ln.0, %if.end2210 ]
  %next2216 = getelementptr inbounds %struct.curcur* %406, i64 0, i32 6
  %496 = load %struct.regnode** %next2216, align 8, !tbaa !3
  %call2217 = call fastcc i32 @S_regmatch(%struct.regnode* %496) #5
  %tobool2218 = icmp eq i32 %call2217, 0
  br i1 %tobool2218, label %if.end2248, label %if.then2219

if.then2219:                                      ; preds = %if.end2215
  %or2220 = or i32 %cache_bit.0, %cache_offset.0
  %tobool2221 = icmp eq i32 %or2220, 0
  br i1 %tobool2221, label %return, label %if.then2222

if.then2222:                                      ; preds = %if.then2219
  %497 = load i8** @PL_reg_poscache, align 8, !tbaa !3
  %498 = load i8* %497, align 1, !tbaa !1
  %conv2224 = sext i8 %498 to i32
  %and2225 = and i32 %conv2224, 2
  %tobool2226 = icmp eq i32 %and2225, 0
  br i1 %tobool2226, label %if.then2227, label %if.else2232

if.then2227:                                      ; preds = %if.then2222
  %or2230 = or i8 %498, 1
  store i8 %or2230, i8* %497, align 1, !tbaa !1
  br label %return

if.else2232:                                      ; preds = %if.then2222
  %and2235 = and i32 %conv2224, 1
  %tobool2236 = icmp eq i32 %and2235, 0
  br i1 %tobool2236, label %if.then2237, label %return

if.then2237:                                      ; preds = %if.else2232
  %shl2238 = shl i32 1, %cache_bit.0
  %neg2239 = xor i32 %shl2238, 255
  %idxprom2240 = sext i32 %cache_offset.0 to i64
  %arrayidx2241 = getelementptr inbounds i8* %497, i64 %idxprom2240
  %499 = load i8* %arrayidx2241, align 1, !tbaa !1
  %conv22425420 = zext i8 %499 to i32
  %and2243 = and i32 %conv22425420, %neg2239
  %conv2244 = trunc i32 %and2243 to i8
  store i8 %conv2244, i8* %arrayidx2241, align 1, !tbaa !1
  br label %return

if.end2248:                                       ; preds = %if.end2215
  %500 = load %struct.curcur** @PL_regcc, align 8, !tbaa !3
  %tobool2249 = icmp eq %struct.curcur* %500, null
  br i1 %tobool2249, label %if.end2252, label %if.then2250

if.then2250:                                      ; preds = %if.end2248
  %cur2251 = getelementptr inbounds %struct.curcur* %500, i64 0, i32 1
  store i32 %ln.5, i32* %cur2251, align 4, !tbaa !0
  br label %if.end2252

if.end2252:                                       ; preds = %if.end2248, %if.then2250
  store %struct.curcur* %406, %struct.curcur** @PL_regcc, align 8, !tbaa !3
  store i32 %408, i32* %cur1800, align 4, !tbaa !0
  store i8* %407, i8** %lastloc1799, align 8, !tbaa !3
  %or2256 = or i32 %cache_bit.0, %cache_offset.0
  %tobool2257 = icmp eq i32 %or2256, 0
  br i1 %tobool2257, label %do_no.preheader, label %if.then2258

if.then2258:                                      ; preds = %if.end2252
  %501 = load i8** @PL_reg_poscache, align 8, !tbaa !3
  %502 = load i8* %501, align 1, !tbaa !1
  %conv2260 = sext i8 %502 to i32
  %and2261 = and i32 %conv2260, 2
  %tobool2262 = icmp eq i32 %and2261, 0
  br i1 %tobool2262, label %if.then2263, label %if.else2268

if.then2263:                                      ; preds = %if.then2258
  %or2266 = or i8 %502, 2
  store i8 %or2266, i8* %501, align 1, !tbaa !1
  br label %do_no.preheader

if.else2268:                                      ; preds = %if.then2258
  %and2271 = and i32 %conv2260, 1
  %tobool2272 = icmp eq i32 %and2271, 0
  br i1 %tobool2272, label %do_no.preheader, label %if.then2273

if.then2273:                                      ; preds = %if.else2268
  %shl2274 = shl i32 1, %cache_bit.0
  %neg2275 = xor i32 %shl2274, 255
  %idxprom2276 = sext i32 %cache_offset.0 to i64
  %arrayidx2277 = getelementptr inbounds i8* %501, i64 %idxprom2276
  %503 = load i8* %arrayidx2277, align 1, !tbaa !1
  %conv22785419 = zext i8 %503 to i32
  %and2279 = and i32 %conv22785419, %neg2275
  %conv2280 = trunc i32 %and2279 to i8
  store i8 %conv2280, i8* %arrayidx2277, align 1, !tbaa !1
  br label %do_no.preheader

sw.bb2284:                                        ; preds = %while.body
  %arg12285 = getelementptr inbounds %struct.regnode* %scan.0, i64 1
  %504 = bitcast %struct.regnode* %arg12285 to i32*
  %505 = load i32* %504, align 4, !tbaa !0
  %idx.ext2286 = zext i32 %505 to i64
  %add.ptr2287 = getelementptr inbounds %struct.regnode* %scan.0, i64 %idx.ext2286
  %cmp2288 = icmp eq i32 %505, 0
  %.add.ptr2287 = select i1 %cmp2288, %struct.regnode* null, %struct.regnode* %add.ptr2287
  br label %do_branch

do_branch:                                        ; preds = %while.body, %sw.bb2284
  %scan.0.pn = phi %struct.regnode* [ %arg12285, %sw.bb2284 ], [ %scan.0, %while.body ]
  %next.1 = phi %struct.regnode* [ %.add.ptr2287, %sw.bb2284 ], [ %.add.ptr, %while.body ]
  %inner.0 = getelementptr inbounds %struct.regnode* %scan.0.pn, i64 1
  %type2298 = getelementptr inbounds %struct.regnode* %next.1, i64 0, i32 1
  %506 = load i8* %type2298, align 1, !tbaa !1
  %cmp2300 = icmp eq i8 %506, %7
  br i1 %cmp2300, label %if.else2303, label %while.cond

if.else2303:                                      ; preds = %do_branch
  %507 = load i32** @PL_reglastparen, align 8, !tbaa !3
  %508 = load i32* %507, align 4, !tbaa !0
  %call2304 = call i32 @Perl_save_alloc(i32 40, i32 0) #6
  %509 = load %union.any** @PL_savestack, align 8, !tbaa !3
  %510 = bitcast %union.any* %509 to i8*
  %idx.ext2305 = sext i32 %call2304 to i64
  %add.ptr2306 = getelementptr inbounds i8* %510, i64 %idx.ext2305
  %add.ptr2306.sum = add i64 %idx.ext2305, 4
  %prev2307 = getelementptr inbounds i8* %510, i64 %add.ptr2306.sum
  %511 = bitcast i8* %prev2307 to i32*
  store i32 %unwind.0, i32* %511, align 4, !tbaa !0
  %cmp2308 = icmp eq i8 %7, 31
  %cond2310 = select i1 %cmp2308, i32 1, i32 2
  %type2311 = bitcast i8* %add.ptr2306 to i32*
  store i32 %cond2310, i32* %type2311, align 4, !tbaa !0
  %add.ptr2306.sum5414 = add i64 %idx.ext2305, 12
  %lastparen2312 = getelementptr inbounds i8* %510, i64 %add.ptr2306.sum5414
  %512 = bitcast i8* %lastparen2312 to i32*
  store i32 %508, i32* %512, align 4, !tbaa !0
  %add.ptr2306.sum5415 = add i64 %idx.ext2305, 16
  %next2313 = getelementptr inbounds i8* %510, i64 %add.ptr2306.sum5415
  %513 = bitcast i8* %next2313 to %struct.regnode**
  store %struct.regnode* %next.1, %struct.regnode** %513, align 8, !tbaa !3
  %add.ptr2306.sum5416 = add i64 %idx.ext2305, 24
  %locinput2314 = getelementptr inbounds i8* %510, i64 %add.ptr2306.sum5416
  %514 = bitcast i8* %locinput2314 to i8**
  store i8* %locinput.0, i8** %514, align 8, !tbaa !3
  %add.ptr2306.sum5417 = add i64 %idx.ext2305, 32
  %nextchr2315 = getelementptr inbounds i8* %510, i64 %add.ptr2306.sum5417
  %515 = bitcast i8* %nextchr2315 to i32*
  store i32 %nextchr.0, i32* %515, align 4, !tbaa !0
  %516 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %add.ptr2306.sum5418 = add i64 %idx.ext2305, 8
  %lastcp2316 = getelementptr inbounds i8* %510, i64 %add.ptr2306.sum5418
  %517 = bitcast i8* %lastcp2316 to i32*
  store i32 %516, i32* %517, align 4, !tbaa !0
  br label %while.cond

sw.bb2318:                                        ; preds = %while.body
  br label %while.cond

sw.bb2319:                                        ; preds = %while.body
  store i32 0, i32* %l2320, align 4, !tbaa !0
  %arg12322 = getelementptr inbounds %struct.regnode* %scan.0, i64 1
  %518 = bitcast %struct.regnode* %arg12322 to i16*
  %519 = load i16* %518, align 2, !tbaa !5
  %conv2323 = zext i16 %519 to i32
  %520 = getelementptr inbounds %struct.regnode* %scan.0, i64 1, i32 2
  %521 = load i16* %520, align 2, !tbaa !5
  %conv2325 = zext i16 %521 to i32
  %flags2326 = getelementptr inbounds %struct.regnode* %scan.0, i64 0, i32 0
  %522 = load i8* %flags2326, align 1, !tbaa !1
  %conv2327 = zext i8 %522 to i32
  %tobool2328 = icmp ne i8 %522, 0
  br i1 %tobool2328, label %if.then2329, label %if.end2338.thread

if.end2338.thread:                                ; preds = %sw.bb2319
  %add.ptr23405546 = getelementptr inbounds %struct.regnode* %scan.0, i64 2
  br label %if.end2347

if.then2329:                                      ; preds = %sw.bb2319
  %523 = load i32* @PL_regsize, align 4, !tbaa !0
  %cmp2330 = icmp sgt i32 %conv2327, %523
  br i1 %cmp2330, label %if.then2332, label %if.end2333

if.then2332:                                      ; preds = %if.then2329
  store i32 %conv2327, i32* @PL_regsize, align 4, !tbaa !0
  br label %if.end2333

if.end2333:                                       ; preds = %if.then2329, %if.then2332
  %524 = load i32** @PL_reglastparen, align 8, !tbaa !3
  %525 = load i32* %524, align 4, !tbaa !0
  %cmp2334 = icmp sgt i32 %conv2327, %525
  br i1 %cmp2334, label %if.then2336, label %if.then2342

if.then2336:                                      ; preds = %if.end2333
  store i32 %conv2327, i32* %524, align 4, !tbaa !0
  br label %if.then2342

if.then2342:                                      ; preds = %if.then2336, %if.end2333
  %next_off2343 = getelementptr inbounds %struct.regnode* %scan.0, i64 2, i32 2
  %526 = load i16* %next_off2343, align 2, !tbaa !5
  %idx.ext2345 = zext i16 %526 to i64
  %add.ptr2340.sum = add i64 %idx.ext2345, 2
  %add.ptr2346 = getelementptr inbounds %struct.regnode* %scan.0, i64 %add.ptr2340.sum
  br label %if.end2347

if.end2347:                                       ; preds = %if.end2338.thread, %if.then2342
  %scan.1 = phi %struct.regnode* [ %add.ptr2346, %if.then2342 ], [ %add.ptr23405546, %if.end2338.thread ]
  store i8* %locinput.0, i8** @PL_reginput, align 8, !tbaa !3
  %tobool2348 = icmp eq i32 %minmod.0, 0
  br i1 %tobool2348, label %if.else2667, label %if.then2349

if.then2349:                                      ; preds = %if.end2347
  %tobool2350 = icmp eq i16 %519, 0
  br i1 %tobool2350, label %if.end2356, label %land.lhs.true2351

land.lhs.true2351:                                ; preds = %if.then2349
  %call2352 = call fastcc i32 @S_regrepeat_hard(%struct.regnode* %scan.1, i32 %conv2323, i32* %l2320) #5
  %cmp2353 = icmp slt i32 %call2352, %conv2323
  br i1 %cmp2353, label %do_no.preheader, label %land.lhs.true2351.if.end2356_crit_edge

land.lhs.true2351.if.end2356_crit_edge:           ; preds = %land.lhs.true2351
  %.pre5756 = load i8** @PL_reginput, align 8, !tbaa !3
  br label %if.end2356

if.end2356:                                       ; preds = %land.lhs.true2351.if.end2356_crit_edge, %if.then2349
  %527 = phi i8* [ %.pre5756, %land.lhs.true2351.if.end2356_crit_edge ], [ %locinput.0, %if.then2349 ]
  %type2357 = getelementptr inbounds %struct.regnode* %.add.ptr, i64 0, i32 1
  %528 = load i8* %type2357, align 1, !tbaa !1
  %idxprom2358 = zext i8 %528 to i64
  %arrayidx2359 = getelementptr inbounds [0 x i8]* @PL_regkind, i64 0, i64 %idxprom2358
  %529 = load i8* %arrayidx2359, align 1, !tbaa !1
  switch i8 %529, label %lor.lhs.false2370 [
    i8 33, label %if.end2533
    i8 47, label %if.end2533
  ]

lor.lhs.false2370:                                ; preds = %if.end2356
  switch i8 %528, label %lor.lhs.false2405 [
    i8 45, label %if.then2417
    i8 46, label %if.then2417
    i8 57, label %if.then2417
    i8 52, label %if.then2417
    i8 50, label %if.then2417
    i8 39, label %if.then2417
    i8 58, label %if.then2417
  ]

lor.lhs.false2405:                                ; preds = %lor.lhs.false2370
  %cmp2410 = icmp eq i8 %529, 40
  br i1 %cmp2410, label %land.lhs.true2412, label %assume_ok_MM

land.lhs.true2412:                                ; preds = %lor.lhs.false2405
  %arg12413 = getelementptr inbounds %struct.regnode* %.add.ptr, i64 1
  %530 = bitcast %struct.regnode* %arg12413 to i16*
  %531 = load i16* %530, align 2, !tbaa !5
  %cmp2415 = icmp eq i16 %531, 0
  br i1 %cmp2415, label %assume_ok_MM, label %while.cond2432

if.then2417:                                      ; preds = %lor.lhs.false2370, %lor.lhs.false2370, %lor.lhs.false2370, %lor.lhs.false2370, %lor.lhs.false2370, %lor.lhs.false2370, %lor.lhs.false2370
  switch i8 %529, label %while.cond2432 [
    i8 33, label %if.end2533
    i8 47, label %if.end2533
  ]

while.cond2432:                                   ; preds = %land.lhs.true2412, %if.then2417, %while.cond2432.backedge
  %.pre5744 = phi i8 [ %.pre5746, %while.cond2432.backedge ], [ %528, %if.then2417 ], [ %528, %land.lhs.true2412 ]
  %text_node.0 = phi %struct.regnode* [ %text_node.0.be, %while.cond2432.backedge ], [ %.add.ptr, %if.then2417 ], [ %.add.ptr, %land.lhs.true2412 ]
  switch i8 %.pre5744, label %lor.rhs2467 [
    i8 52, label %if.then2495
    i8 39, label %lor.lhs.false2488
    i8 45, label %lor.lhs.false2488
    i8 46, label %lor.lhs.false2488
    i8 50, label %lor.lhs.false2488
    i8 57, label %lor.lhs.false2488
    i8 58, label %lor.lhs.false2488
  ]

lor.rhs2467:                                      ; preds = %while.cond2432
  %idxprom2469 = zext i8 %.pre5744 to i64
  %arrayidx2470 = getelementptr inbounds [0 x i8]* @PL_regkind, i64 0, i64 %idxprom2469
  %532 = load i8* %arrayidx2470, align 1, !tbaa !1
  %cmp2472 = icmp eq i8 %532, 40
  br i1 %cmp2472, label %land.rhs2474, label %if.end2533

land.rhs2474:                                     ; preds = %lor.rhs2467
  %arg12475 = getelementptr inbounds %struct.regnode* %text_node.0, i64 1
  %533 = bitcast %struct.regnode* %arg12475 to i16*
  %534 = load i16* %533, align 2, !tbaa !5
  %cmp2477 = icmp eq i16 %534, 0
  br i1 %cmp2477, label %assume_ok_MM, label %while.body2483

while.body2483:                                   ; preds = %land.rhs2474
  %cmp2486 = icmp eq i8 %.pre5744, 52
  br i1 %cmp2486, label %if.then2495, label %lor.lhs.false2488

lor.lhs.false2488:                                ; preds = %while.cond2432, %while.cond2432, %while.cond2432, %while.cond2432, %while.cond2432, %while.cond2432, %while.body2483
  %idxprom2490 = zext i8 %.pre5744 to i64
  %arrayidx2491 = getelementptr inbounds [0 x i8]* @PL_regkind, i64 0, i64 %idxprom2490
  %535 = load i8* %arrayidx2491, align 1, !tbaa !1
  %cmp2493 = icmp eq i8 %535, 40
  br i1 %cmp2493, label %if.then2495, label %if.else2498

if.then2495:                                      ; preds = %while.cond2432, %lor.lhs.false2488, %while.body2483
  %add.ptr2497 = getelementptr inbounds %struct.regnode* %text_node.0, i64 2
  br label %while.cond2432.backedge

if.else2498:                                      ; preds = %lor.lhs.false2488
  switch i8 %.pre5744, label %if.else2524 [
    i8 39, label %if.then2503
    i8 50, label %if.then2510
  ]

if.then2503:                                      ; preds = %if.else2498
  %add.ptr2504 = getelementptr inbounds %struct.regnode* %text_node.0, i64 1
  br label %while.cond2432.backedge

while.cond2432.backedge:                          ; preds = %if.then2503, %if.else2524, %if.then2495, %cond.false2518, %cond.true2515
  %text_node.0.be = phi %struct.regnode* [ %add.ptr2497, %if.then2495 ], [ %add.ptr2504, %if.then2503 ], [ %add.ptr2528, %if.else2524 ], [ %add.ptr2517, %cond.true2515 ], [ %add.ptr2521, %cond.false2518 ]
  %type2433.phi.trans.insert = getelementptr inbounds %struct.regnode* %text_node.0.be, i64 0, i32 1
  %.pre5746 = load i8* %type2433.phi.trans.insert, align 1, !tbaa !1
  br label %while.cond2432

if.then2510:                                      ; preds = %if.else2498
  %flags2511 = getelementptr inbounds %struct.regnode* %text_node.0, i64 0, i32 0
  %536 = load i8* %flags2511, align 1, !tbaa !1
  %cmp2513 = icmp eq i8 %536, 0
  br i1 %cmp2513, label %cond.true2515, label %cond.false2518

cond.true2515:                                    ; preds = %if.then2510
  %add.ptr2517 = getelementptr inbounds %struct.regnode* %text_node.0, i64 2
  br label %while.cond2432.backedge

cond.false2518:                                   ; preds = %if.then2510
  %arg12519 = getelementptr inbounds %struct.regnode* %text_node.0, i64 1
  %537 = bitcast %struct.regnode* %arg12519 to i32*
  %538 = load i32* %537, align 4, !tbaa !0
  %idx.ext2520 = zext i32 %538 to i64
  %add.ptr2521 = getelementptr inbounds %struct.regnode* %text_node.0, i64 %idx.ext2520
  br label %while.cond2432.backedge

if.else2524:                                      ; preds = %if.else2498
  %next_off2525 = getelementptr inbounds %struct.regnode* %text_node.0, i64 0, i32 2
  %539 = load i16* %next_off2525, align 2, !tbaa !5
  %idx.ext2527 = zext i16 %539 to i64
  %add.ptr2528 = getelementptr inbounds %struct.regnode* %text_node.0, i64 %idx.ext2527
  br label %while.cond2432.backedge

if.end2533:                                       ; preds = %if.end2356, %if.end2356, %lor.rhs2467, %if.then2417, %if.then2417
  %540 = phi i8 [ %529, %if.then2417 ], [ %529, %if.then2417 ], [ %532, %lor.rhs2467 ], [ %529, %if.end2356 ], [ %529, %if.end2356 ]
  %541 = phi i8 [ %528, %if.then2417 ], [ %528, %if.then2417 ], [ %.pre5744, %lor.rhs2467 ], [ %528, %if.end2356 ], [ %528, %if.end2356 ]
  %text_node.1 = phi %struct.regnode* [ %.add.ptr, %if.then2417 ], [ %.add.ptr, %if.then2417 ], [ %text_node.0, %lor.rhs2467 ], [ %.add.ptr, %if.end2356 ], [ %.add.ptr, %if.end2356 ]
  %cond = icmp eq i8 %540, 33
  br i1 %cond, label %if.else2556, label %assume_ok_MM

if.else2556:                                      ; preds = %if.end2533
  %arraydecay2558 = getelementptr inbounds %struct.regnode* %text_node.1, i64 1, i32 0
  %542 = load i8* %arraydecay2558, align 1, !tbaa !1
  %conv2559 = zext i8 %542 to i32
  switch i8 %541, label %assume_ok_MM [
    i8 34, label %if.then2570
    i8 48, label %if.then2570
    i8 35, label %if.then2584
    i8 49, label %if.then2584
  ]

if.then2570:                                      ; preds = %if.else2556, %if.else2556
  %idxprom2571 = zext i8 %542 to i64
  %arrayidx2572 = getelementptr inbounds [0 x i8]* @PL_fold, i64 0, i64 %idxprom2571
  %543 = load i8* %arrayidx2572, align 1, !tbaa !1
  %conv2573 = zext i8 %543 to i32
  br label %assume_ok_MM

if.then2584:                                      ; preds = %if.else2556, %if.else2556
  %idxprom2585 = zext i8 %542 to i64
  %arrayidx2586 = getelementptr inbounds [0 x i8]* @PL_fold_locale, i64 0, i64 %idxprom2585
  %544 = load i8* %arrayidx2586, align 1, !tbaa !1
  %conv2587 = zext i8 %544 to i32
  br label %assume_ok_MM

assume_ok_MM:                                     ; preds = %if.end2533, %land.rhs2474, %lor.lhs.false2405, %land.lhs.true2412, %if.else2556, %if.then2570, %if.then2584
  %c2.1 = phi i32 [ %conv2573, %if.then2570 ], [ %conv2587, %if.then2584 ], [ %conv2559, %if.else2556 ], [ -1000, %land.lhs.true2412 ], [ -1000, %lor.lhs.false2405 ], [ -1000, %land.rhs2474 ], [ -1000, %if.end2533 ]
  %c1.1 = phi i32 [ %conv2559, %if.then2570 ], [ %conv2559, %if.then2584 ], [ %conv2559, %if.else2556 ], [ -1000, %land.lhs.true2412 ], [ -1000, %lor.lhs.false2405 ], [ -1000, %land.rhs2474 ], [ -1000, %if.end2533 ]
  %545 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %cmp2598 = icmp eq i16 %521, 32767
  %cmp2608 = icmp eq i32 %c1.1, -1000
  %idxprom2647 = zext i8 %522 to i64
  br label %while.cond2594

while.cond2594:                                   ; preds = %if.then2662, %assume_ok_MM
  %546 = phi i8* [ %527, %assume_ok_MM ], [ %557, %if.then2662 ]
  %ln.6 = phi i32 [ %conv2323, %assume_ok_MM ], [ %inc2663, %if.then2662 ]
  %cmp2595 = icmp sge i32 %conv2325, %ln.6
  %cmp2601 = icmp sgt i32 %ln.6, 0
  %or.cond5495 = and i1 %cmp2598, %cmp2601
  %or.cond5768 = or i1 %cmp2595, %or.cond5495
  br i1 %or.cond5768, label %while.body2607, label %do_no.preheader

while.body2607:                                   ; preds = %while.cond2594
  br i1 %cmp2608, label %if.then2618, label %lor.lhs.false2610

lor.lhs.false2610:                                ; preds = %while.body2607
  %547 = load i8* %546, align 1, !tbaa !1
  %conv2611 = zext i8 %547 to i32
  %cmp2612 = icmp eq i32 %conv2611, %c1.1
  %cmp2616 = icmp eq i32 %conv2611, %c2.1
  %or.cond5496 = or i1 %cmp2612, %cmp2616
  br i1 %or.cond5496, label %if.then2618, label %if.end2659

if.then2618:                                      ; preds = %lor.lhs.false2610, %while.body2607
  br i1 %tobool2328, label %if.then2620, label %if.end2650

if.then2620:                                      ; preds = %if.then2618
  %tobool2621 = icmp eq i32 %ln.6, 0
  br i1 %tobool2621, label %if.else2646, label %if.then2622

if.then2622:                                      ; preds = %if.then2620
  %548 = load i8* @PL_reg_match_utf8, align 1, !tbaa !1
  %tobool2624 = icmp eq i8 %548, 0
  %549 = load i32* %l2320, align 4, !tbaa !0
  %sub2626 = sub nsw i32 0, %549
  br i1 %tobool2624, label %cond.false2628, label %cond.true2625

cond.true2625:                                    ; preds = %if.then2622
  %cmp.i5532 = icmp sgt i32 %sub2626, -1
  %550 = load i8** @PL_regeol, align 8, !tbaa !3
  %551 = load i8** @PL_bostr, align 8, !tbaa !3
  %cond.i5533 = select i1 %cmp.i5532, i8* %550, i8* %551
  %call.i5534 = call fastcc i8* @S_reghop3(i8* %546, i32 %sub2626, i8* %cond.i5533) #6
  br label %cond.end2632

cond.false2628:                                   ; preds = %if.then2622
  %idx.ext2630 = sext i32 %sub2626 to i64
  %add.ptr2631 = getelementptr inbounds i8* %546, i64 %idx.ext2630
  %.pre5743 = load i8** @PL_bostr, align 8, !tbaa !3
  br label %cond.end2632

cond.end2632:                                     ; preds = %cond.false2628, %cond.true2625
  %552 = phi i8* [ %551, %cond.true2625 ], [ %.pre5743, %cond.false2628 ]
  %cond2633 = phi i8* [ %call.i5534, %cond.true2625 ], [ %add.ptr2631, %cond.false2628 ]
  %sub.ptr.lhs.cast2634 = ptrtoint i8* %cond2633 to i64
  %sub.ptr.rhs.cast2635 = ptrtoint i8* %552 to i64
  %sub.ptr.sub2636 = sub i64 %sub.ptr.lhs.cast2634, %sub.ptr.rhs.cast2635
  %conv2637 = trunc i64 %sub.ptr.sub2636 to i32
  %553 = load i32** @PL_regstartp, align 8, !tbaa !3
  %arrayidx2639 = getelementptr inbounds i32* %553, i64 %idxprom2647
  store i32 %conv2637, i32* %arrayidx2639, align 4, !tbaa !0
  %sub.ptr.lhs.cast2640 = ptrtoint i8* %546 to i64
  %sub.ptr.sub2642 = sub i64 %sub.ptr.lhs.cast2640, %sub.ptr.rhs.cast2635
  %conv2643 = trunc i64 %sub.ptr.sub2642 to i32
  %554 = load i32** @PL_regendp, align 8, !tbaa !3
  %arrayidx2645 = getelementptr inbounds i32* %554, i64 %idxprom2647
  store i32 %conv2643, i32* %arrayidx2645, align 4, !tbaa !0
  br label %if.end2650

if.else2646:                                      ; preds = %if.then2620
  %555 = load i32** @PL_regendp, align 8, !tbaa !3
  %arrayidx2648 = getelementptr inbounds i32* %555, i64 %idxprom2647
  store i32 -1, i32* %arrayidx2648, align 4, !tbaa !0
  br label %if.end2650

if.end2650:                                       ; preds = %cond.end2632, %if.else2646, %if.then2618
  %call2651 = call fastcc i32 @S_regmatch(%struct.regnode* %.add.ptr) #5
  %tobool2652 = icmp eq i32 %call2651, 0
  br i1 %tobool2652, label %if.end2654, label %return

if.end2654:                                       ; preds = %if.end2650
  %556 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %cmp2655 = icmp sgt i32 %556, %545
  br i1 %cmp2655, label %if.then2657, label %if.end2659

if.then2657:                                      ; preds = %if.end2654
  call void @Perl_leave_scope(i32 %545) #6
  br label %if.end2659

if.end2659:                                       ; preds = %lor.lhs.false2610, %if.end2654, %if.then2657
  store i8* %546, i8** @PL_reginput, align 8, !tbaa !3
  %call2660 = call fastcc i32 @S_regrepeat_hard(%struct.regnode* %scan.1, i32 1, i32* %l2320) #5
  %tobool2661 = icmp eq i32 %call2660, 0
  br i1 %tobool2661, label %do_no.preheader, label %if.then2662

if.then2662:                                      ; preds = %if.end2659
  %inc2663 = add nsw i32 %ln.6, 1
  %557 = load i8** @PL_reginput, align 8, !tbaa !3
  br label %while.cond2594

if.else2667:                                      ; preds = %if.end2347
  %call2668 = call fastcc i32 @S_regrepeat_hard(%struct.regnode* %scan.1, i32 %conv2325, i32* %l2320) #5
  %558 = load i8** @PL_reginput, align 8, !tbaa !3
  %cmp2669 = icmp slt i32 %call2668, %conv2323
  br i1 %cmp2669, label %do_no.preheader, label %if.then2671

if.then2671:                                      ; preds = %if.else2667
  %type2672 = getelementptr inbounds %struct.regnode* %.add.ptr, i64 0, i32 1
  %559 = load i8* %type2672, align 1, !tbaa !1
  %idxprom2673 = zext i8 %559 to i64
  %arrayidx2674 = getelementptr inbounds [0 x i8]* @PL_regkind, i64 0, i64 %idxprom2673
  %560 = load i8* %arrayidx2674, align 1, !tbaa !1
  switch i8 %560, label %lor.lhs.false2685 [
    i8 33, label %if.end2849
    i8 47, label %if.end2849
  ]

lor.lhs.false2685:                                ; preds = %if.then2671
  switch i8 %559, label %lor.lhs.false2720 [
    i8 45, label %if.then2732
    i8 46, label %if.then2732
    i8 57, label %if.then2732
    i8 52, label %if.then2732
    i8 50, label %if.then2732
    i8 39, label %if.then2732
    i8 58, label %if.then2732
  ]

lor.lhs.false2720:                                ; preds = %lor.lhs.false2685
  %cmp2725 = icmp eq i8 %560, 40
  br i1 %cmp2725, label %land.lhs.true2727, label %assume_ok_REG

land.lhs.true2727:                                ; preds = %lor.lhs.false2720
  %arg12728 = getelementptr inbounds %struct.regnode* %.add.ptr, i64 1
  %561 = bitcast %struct.regnode* %arg12728 to i16*
  %562 = load i16* %561, align 2, !tbaa !5
  %cmp2730 = icmp eq i16 %562, 0
  br i1 %cmp2730, label %assume_ok_REG, label %while.cond2748

if.then2732:                                      ; preds = %lor.lhs.false2685, %lor.lhs.false2685, %lor.lhs.false2685, %lor.lhs.false2685, %lor.lhs.false2685, %lor.lhs.false2685, %lor.lhs.false2685
  switch i8 %560, label %while.cond2748 [
    i8 33, label %if.end2849
    i8 47, label %if.end2849
  ]

while.cond2748:                                   ; preds = %land.lhs.true2727, %if.then2732, %while.cond2748.backedge
  %.pre5740 = phi i8 [ %.pre5742, %while.cond2748.backedge ], [ %559, %if.then2732 ], [ %559, %land.lhs.true2727 ]
  %text_node2733.0 = phi %struct.regnode* [ %text_node2733.0.be, %while.cond2748.backedge ], [ %.add.ptr, %if.then2732 ], [ %.add.ptr, %land.lhs.true2727 ]
  switch i8 %.pre5740, label %lor.rhs2783 [
    i8 52, label %if.then2811
    i8 39, label %lor.lhs.false2804
    i8 45, label %lor.lhs.false2804
    i8 46, label %lor.lhs.false2804
    i8 50, label %lor.lhs.false2804
    i8 57, label %lor.lhs.false2804
    i8 58, label %lor.lhs.false2804
  ]

lor.rhs2783:                                      ; preds = %while.cond2748
  %idxprom2785 = zext i8 %.pre5740 to i64
  %arrayidx2786 = getelementptr inbounds [0 x i8]* @PL_regkind, i64 0, i64 %idxprom2785
  %563 = load i8* %arrayidx2786, align 1, !tbaa !1
  %cmp2788 = icmp eq i8 %563, 40
  br i1 %cmp2788, label %land.rhs2790, label %if.end2849

land.rhs2790:                                     ; preds = %lor.rhs2783
  %arg12791 = getelementptr inbounds %struct.regnode* %text_node2733.0, i64 1
  %564 = bitcast %struct.regnode* %arg12791 to i16*
  %565 = load i16* %564, align 2, !tbaa !5
  %cmp2793 = icmp eq i16 %565, 0
  br i1 %cmp2793, label %assume_ok_REG, label %while.body2799

while.body2799:                                   ; preds = %land.rhs2790
  %cmp2802 = icmp eq i8 %.pre5740, 52
  br i1 %cmp2802, label %if.then2811, label %lor.lhs.false2804

lor.lhs.false2804:                                ; preds = %while.cond2748, %while.cond2748, %while.cond2748, %while.cond2748, %while.cond2748, %while.cond2748, %while.body2799
  %idxprom2806 = zext i8 %.pre5740 to i64
  %arrayidx2807 = getelementptr inbounds [0 x i8]* @PL_regkind, i64 0, i64 %idxprom2806
  %566 = load i8* %arrayidx2807, align 1, !tbaa !1
  %cmp2809 = icmp eq i8 %566, 40
  br i1 %cmp2809, label %if.then2811, label %if.else2814

if.then2811:                                      ; preds = %while.cond2748, %lor.lhs.false2804, %while.body2799
  %add.ptr2813 = getelementptr inbounds %struct.regnode* %text_node2733.0, i64 2
  br label %while.cond2748.backedge

if.else2814:                                      ; preds = %lor.lhs.false2804
  switch i8 %.pre5740, label %if.else2840 [
    i8 39, label %if.then2819
    i8 50, label %if.then2826
  ]

if.then2819:                                      ; preds = %if.else2814
  %add.ptr2820 = getelementptr inbounds %struct.regnode* %text_node2733.0, i64 1
  br label %while.cond2748.backedge

while.cond2748.backedge:                          ; preds = %if.then2819, %if.else2840, %if.then2811, %cond.false2834, %cond.true2831
  %text_node2733.0.be = phi %struct.regnode* [ %add.ptr2813, %if.then2811 ], [ %add.ptr2820, %if.then2819 ], [ %add.ptr2844, %if.else2840 ], [ %add.ptr2833, %cond.true2831 ], [ %add.ptr2837, %cond.false2834 ]
  %type2749.phi.trans.insert = getelementptr inbounds %struct.regnode* %text_node2733.0.be, i64 0, i32 1
  %.pre5742 = load i8* %type2749.phi.trans.insert, align 1, !tbaa !1
  br label %while.cond2748

if.then2826:                                      ; preds = %if.else2814
  %flags2827 = getelementptr inbounds %struct.regnode* %text_node2733.0, i64 0, i32 0
  %567 = load i8* %flags2827, align 1, !tbaa !1
  %cmp2829 = icmp eq i8 %567, 0
  br i1 %cmp2829, label %cond.true2831, label %cond.false2834

cond.true2831:                                    ; preds = %if.then2826
  %add.ptr2833 = getelementptr inbounds %struct.regnode* %text_node2733.0, i64 2
  br label %while.cond2748.backedge

cond.false2834:                                   ; preds = %if.then2826
  %arg12835 = getelementptr inbounds %struct.regnode* %text_node2733.0, i64 1
  %568 = bitcast %struct.regnode* %arg12835 to i32*
  %569 = load i32* %568, align 4, !tbaa !0
  %idx.ext2836 = zext i32 %569 to i64
  %add.ptr2837 = getelementptr inbounds %struct.regnode* %text_node2733.0, i64 %idx.ext2836
  br label %while.cond2748.backedge

if.else2840:                                      ; preds = %if.else2814
  %next_off2841 = getelementptr inbounds %struct.regnode* %text_node2733.0, i64 0, i32 2
  %570 = load i16* %next_off2841, align 2, !tbaa !5
  %idx.ext2843 = zext i16 %570 to i64
  %add.ptr2844 = getelementptr inbounds %struct.regnode* %text_node2733.0, i64 %idx.ext2843
  br label %while.cond2748.backedge

if.end2849:                                       ; preds = %if.then2671, %if.then2671, %lor.rhs2783, %if.then2732, %if.then2732
  %571 = phi i8 [ %560, %if.then2732 ], [ %560, %if.then2732 ], [ %563, %lor.rhs2783 ], [ %560, %if.then2671 ], [ %560, %if.then2671 ]
  %572 = phi i8 [ %559, %if.then2732 ], [ %559, %if.then2732 ], [ %.pre5740, %lor.rhs2783 ], [ %559, %if.then2671 ], [ %559, %if.then2671 ]
  %text_node2733.1 = phi %struct.regnode* [ %.add.ptr, %if.then2732 ], [ %.add.ptr, %if.then2732 ], [ %text_node2733.0, %lor.rhs2783 ], [ %.add.ptr, %if.then2671 ], [ %.add.ptr, %if.then2671 ]
  %cond5772 = icmp eq i8 %571, 33
  br i1 %cond5772, label %if.else2872, label %assume_ok_REG

if.else2872:                                      ; preds = %if.end2849
  %arraydecay2874 = getelementptr inbounds %struct.regnode* %text_node2733.1, i64 1, i32 0
  %573 = load i8* %arraydecay2874, align 1, !tbaa !1
  %conv2875 = zext i8 %573 to i32
  switch i8 %572, label %assume_ok_REG [
    i8 34, label %if.then2886
    i8 48, label %if.then2886
    i8 35, label %if.then2900
    i8 49, label %if.then2900
  ]

if.then2886:                                      ; preds = %if.else2872, %if.else2872
  %idxprom2887 = zext i8 %573 to i64
  %arrayidx2888 = getelementptr inbounds [0 x i8]* @PL_fold, i64 0, i64 %idxprom2887
  %574 = load i8* %arrayidx2888, align 1, !tbaa !1
  %conv2889 = zext i8 %574 to i32
  br label %assume_ok_REG

if.then2900:                                      ; preds = %if.else2872, %if.else2872
  %idxprom2901 = zext i8 %573 to i64
  %arrayidx2902 = getelementptr inbounds [0 x i8]* @PL_fold_locale, i64 0, i64 %idxprom2901
  %575 = load i8* %arrayidx2902, align 1, !tbaa !1
  %conv2903 = zext i8 %575 to i32
  br label %assume_ok_REG

assume_ok_REG:                                    ; preds = %if.end2849, %land.rhs2790, %lor.lhs.false2720, %land.lhs.true2727, %if.else2872, %if.then2900, %if.then2886
  %c2.2 = phi i32 [ %conv2889, %if.then2886 ], [ %conv2903, %if.then2900 ], [ %conv2875, %if.else2872 ], [ -1000, %land.lhs.true2727 ], [ -1000, %lor.lhs.false2720 ], [ -1000, %land.rhs2790 ], [ -1000, %if.end2849 ]
  %c1.2 = phi i32 [ %conv2875, %if.then2886 ], [ %conv2875, %if.then2900 ], [ %conv2875, %if.else2872 ], [ -1000, %land.lhs.true2727 ], [ -1000, %lor.lhs.false2720 ], [ -1000, %land.rhs2790 ], [ -1000, %if.end2849 ]
  %576 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  br i1 %cmp2669, label %do_no.preheader, label %while.body2914.lr.ph

while.body2914.lr.ph:                             ; preds = %assume_ok_REG
  %cmp2915 = icmp eq i32 %c1.2, -1000
  %idxprom2954 = zext i8 %522 to i64
  %577 = load i32* %l2320, align 4, !tbaa !0
  %sub2933 = sub nsw i32 0, %577
  %idx.ext2937 = sext i32 %sub2933 to i64
  %cmp.i5536 = icmp sgt i32 %sub2933, -1
  br label %while.body2914

while.body2914:                                   ; preds = %cond.end2977, %while.body2914.lr.ph
  %n.15616 = phi i32 [ %call2668, %while.body2914.lr.ph ], [ %dec2967, %cond.end2977 ]
  %578 = phi i8* [ %558, %while.body2914.lr.ph ], [ %cond2978, %cond.end2977 ]
  br i1 %cmp2915, label %if.then2925, label %lor.lhs.false2917

lor.lhs.false2917:                                ; preds = %while.body2914
  %579 = load i8* %578, align 1, !tbaa !1
  %conv2918 = zext i8 %579 to i32
  %cmp2919 = icmp eq i32 %conv2918, %c1.2
  %cmp2923 = icmp eq i32 %conv2918, %c2.2
  %or.cond5497 = or i1 %cmp2919, %cmp2923
  br i1 %or.cond5497, label %if.then2925, label %if.end2966

if.then2925:                                      ; preds = %lor.lhs.false2917, %while.body2914
  br i1 %tobool2328, label %if.then2927, label %if.end2957

if.then2927:                                      ; preds = %if.then2925
  %tobool2928 = icmp eq i32 %n.15616, 0
  br i1 %tobool2928, label %if.else2953, label %if.then2929

if.then2929:                                      ; preds = %if.then2927
  %580 = load i8* @PL_reg_match_utf8, align 1, !tbaa !1
  %tobool2931 = icmp eq i8 %580, 0
  br i1 %tobool2931, label %cond.false2935, label %cond.true2932

cond.true2932:                                    ; preds = %if.then2929
  %581 = load i8** @PL_regeol, align 8, !tbaa !3
  %582 = load i8** @PL_bostr, align 8, !tbaa !3
  %cond.i5537 = select i1 %cmp.i5536, i8* %581, i8* %582
  %call.i5538 = call fastcc i8* @S_reghop3(i8* %578, i32 %sub2933, i8* %cond.i5537) #6
  br label %cond.end2939

cond.false2935:                                   ; preds = %if.then2929
  %add.ptr2938 = getelementptr inbounds i8* %578, i64 %idx.ext2937
  br label %cond.end2939

cond.end2939:                                     ; preds = %cond.false2935, %cond.true2932
  %cond2940 = phi i8* [ %call.i5538, %cond.true2932 ], [ %add.ptr2938, %cond.false2935 ]
  %583 = load i8** @PL_bostr, align 8, !tbaa !3
  %sub.ptr.lhs.cast2941 = ptrtoint i8* %cond2940 to i64
  %sub.ptr.rhs.cast2942 = ptrtoint i8* %583 to i64
  %sub.ptr.sub2943 = sub i64 %sub.ptr.lhs.cast2941, %sub.ptr.rhs.cast2942
  %conv2944 = trunc i64 %sub.ptr.sub2943 to i32
  %584 = load i32** @PL_regstartp, align 8, !tbaa !3
  %arrayidx2946 = getelementptr inbounds i32* %584, i64 %idxprom2954
  store i32 %conv2944, i32* %arrayidx2946, align 4, !tbaa !0
  %sub.ptr.lhs.cast2947 = ptrtoint i8* %578 to i64
  %sub.ptr.sub2949 = sub i64 %sub.ptr.lhs.cast2947, %sub.ptr.rhs.cast2942
  %conv2950 = trunc i64 %sub.ptr.sub2949 to i32
  %585 = load i32** @PL_regendp, align 8, !tbaa !3
  %arrayidx2952 = getelementptr inbounds i32* %585, i64 %idxprom2954
  store i32 %conv2950, i32* %arrayidx2952, align 4, !tbaa !0
  br label %if.end2957

if.else2953:                                      ; preds = %if.then2927
  %586 = load i32** @PL_regendp, align 8, !tbaa !3
  %arrayidx2955 = getelementptr inbounds i32* %586, i64 %idxprom2954
  store i32 -1, i32* %arrayidx2955, align 4, !tbaa !0
  br label %if.end2957

if.end2957:                                       ; preds = %cond.end2939, %if.else2953, %if.then2925
  %call2958 = call fastcc i32 @S_regmatch(%struct.regnode* %.add.ptr) #5
  %tobool2959 = icmp eq i32 %call2958, 0
  br i1 %tobool2959, label %if.end2961, label %return

if.end2961:                                       ; preds = %if.end2957
  %587 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %cmp2962 = icmp sgt i32 %587, %576
  br i1 %cmp2962, label %if.then2964, label %if.end2966

if.then2964:                                      ; preds = %if.end2961
  call void @Perl_leave_scope(i32 %576) #6
  br label %if.end2966

if.end2966:                                       ; preds = %if.end2961, %lor.lhs.false2917, %if.then2964
  %dec2967 = add nsw i32 %n.15616, -1
  %588 = load i8* @PL_reg_match_utf8, align 1, !tbaa !1
  %tobool2969 = icmp eq i8 %588, 0
  br i1 %tobool2969, label %cond.false2973, label %cond.true2970

cond.true2970:                                    ; preds = %if.end2966
  %589 = load i8** @PL_regeol, align 8, !tbaa !3
  %590 = load i8** @PL_bostr, align 8, !tbaa !3
  %cond.i5541 = select i1 %cmp.i5536, i8* %589, i8* %590
  %call.i5542 = call fastcc i8* @S_reghop3(i8* %578, i32 %sub2933, i8* %cond.i5541) #6
  br label %cond.end2977

cond.false2973:                                   ; preds = %if.end2966
  %add.ptr2976 = getelementptr inbounds i8* %578, i64 %idx.ext2937
  br label %cond.end2977

cond.end2977:                                     ; preds = %cond.false2973, %cond.true2970
  %cond2978 = phi i8* [ %call.i5542, %cond.true2970 ], [ %add.ptr2976, %cond.false2973 ]
  store i8* %cond2978, i8** @PL_reginput, align 8, !tbaa !3
  %cmp2912 = icmp sgt i32 %n.15616, %conv2323
  br i1 %cmp2912, label %while.body2914, label %do_no.preheader

sw.bb2981:                                        ; preds = %while.body
  %flags2982 = getelementptr inbounds %struct.regnode* %scan.0, i64 0, i32 0
  %591 = load i8* %flags2982, align 1, !tbaa !1
  %conv2983 = zext i8 %591 to i32
  %592 = load i32* @PL_regsize, align 4, !tbaa !0
  %cmp2984 = icmp sgt i32 %conv2983, %592
  br i1 %cmp2984, label %if.then2986, label %if.end2987

if.then2986:                                      ; preds = %sw.bb2981
  store i32 %conv2983, i32* @PL_regsize, align 4, !tbaa !0
  br label %if.end2987

if.end2987:                                       ; preds = %sw.bb2981, %if.then2986
  %593 = load i32** @PL_reglastparen, align 8, !tbaa !3
  %594 = load i32* %593, align 4, !tbaa !0
  %cmp2988 = icmp sgt i32 %conv2983, %594
  br i1 %cmp2988, label %if.then2990, label %if.end2991

if.then2990:                                      ; preds = %if.end2987
  store i32 %conv2983, i32* %593, align 4, !tbaa !0
  br label %if.end2991

if.end2991:                                       ; preds = %if.then2990, %if.end2987
  %arg12992 = getelementptr inbounds %struct.regnode* %scan.0, i64 1
  %595 = bitcast %struct.regnode* %arg12992 to i16*
  %596 = load i16* %595, align 2, !tbaa !5
  %conv2993 = zext i16 %596 to i32
  %597 = getelementptr inbounds %struct.regnode* %scan.0, i64 1, i32 2
  %598 = load i16* %597, align 2, !tbaa !5
  %conv2995 = zext i16 %598 to i32
  %add.ptr2997 = getelementptr inbounds %struct.regnode* %scan.0, i64 2
  %call2998 = call %struct.regnode* @Perl_regnext(%struct.regnode* %add.ptr2997) #6
  br label %repeat

sw.bb2999:                                        ; preds = %while.body
  %arg13000 = getelementptr inbounds %struct.regnode* %scan.0, i64 1
  %599 = bitcast %struct.regnode* %arg13000 to i16*
  %600 = load i16* %599, align 2, !tbaa !5
  %conv3001 = zext i16 %600 to i32
  %601 = getelementptr inbounds %struct.regnode* %scan.0, i64 1, i32 2
  %602 = load i16* %601, align 2, !tbaa !5
  %conv3003 = zext i16 %602 to i32
  %add.ptr3005 = getelementptr inbounds %struct.regnode* %scan.0, i64 2
  br label %repeat

sw.bb3006:                                        ; preds = %while.body
  %add.ptr3007 = getelementptr inbounds %struct.regnode* %scan.0, i64 1
  br label %repeat

sw.bb3008:                                        ; preds = %while.body
  %add.ptr3009 = getelementptr inbounds %struct.regnode* %scan.0, i64 1
  br label %repeat

repeat:                                           ; preds = %sw.bb3008, %sw.bb3006, %sw.bb2999, %if.end2991
  %paren.0 = phi i32 [ 0, %sw.bb3008 ], [ 0, %sw.bb3006 ], [ 0, %sw.bb2999 ], [ %conv2983, %if.end2991 ]
  %ln.7 = phi i32 [ 1, %sw.bb3008 ], [ 0, %sw.bb3006 ], [ %conv3001, %sw.bb2999 ], [ %conv2993, %if.end2991 ]
  %n.2 = phi i32 [ 32767, %sw.bb3008 ], [ 32767, %sw.bb3006 ], [ %conv3003, %sw.bb2999 ], [ %conv2995, %if.end2991 ]
  %scan.2 = phi %struct.regnode* [ %add.ptr3009, %sw.bb3008 ], [ %add.ptr3007, %sw.bb3006 ], [ %add.ptr3005, %sw.bb2999 ], [ %call2998, %if.end2991 ]
  %type3010 = getelementptr inbounds %struct.regnode* %.add.ptr, i64 0, i32 1
  %603 = load i8* %type3010, align 1, !tbaa !1
  %idxprom3011 = zext i8 %603 to i64
  %arrayidx3012 = getelementptr inbounds [0 x i8]* @PL_regkind, i64 0, i64 %idxprom3011
  %604 = load i8* %arrayidx3012, align 1, !tbaa !1
  switch i8 %604, label %lor.lhs.false3023 [
    i8 33, label %if.end3188
    i8 47, label %if.end3188
  ]

lor.lhs.false3023:                                ; preds = %repeat
  switch i8 %603, label %lor.lhs.false3058 [
    i8 45, label %if.then3070
    i8 46, label %if.then3070
    i8 57, label %if.then3070
    i8 52, label %if.then3070
    i8 50, label %if.then3070
    i8 39, label %if.then3070
    i8 58, label %if.then3070
  ]

lor.lhs.false3058:                                ; preds = %lor.lhs.false3023
  %cmp3063 = icmp eq i8 %604, 40
  br i1 %cmp3063, label %land.lhs.true3065, label %assume_ok_easy

land.lhs.true3065:                                ; preds = %lor.lhs.false3058
  %arg13066 = getelementptr inbounds %struct.regnode* %.add.ptr, i64 1
  %605 = bitcast %struct.regnode* %arg13066 to i16*
  %606 = load i16* %605, align 2, !tbaa !5
  %cmp3068 = icmp eq i16 %606, 0
  br i1 %cmp3068, label %assume_ok_easy, label %while.cond3087

if.then3070:                                      ; preds = %lor.lhs.false3023, %lor.lhs.false3023, %lor.lhs.false3023, %lor.lhs.false3023, %lor.lhs.false3023, %lor.lhs.false3023, %lor.lhs.false3023
  switch i8 %604, label %while.cond3087 [
    i8 33, label %if.end3188
    i8 47, label %if.end3188
  ]

while.cond3087:                                   ; preds = %land.lhs.true3065, %if.then3070, %while.cond3087.backedge
  %.pre5750 = phi i8 [ %.pre5752, %while.cond3087.backedge ], [ %603, %if.then3070 ], [ %603, %land.lhs.true3065 ]
  %text_node3072.0 = phi %struct.regnode* [ %text_node3072.0.be, %while.cond3087.backedge ], [ %.add.ptr, %if.then3070 ], [ %.add.ptr, %land.lhs.true3065 ]
  switch i8 %.pre5750, label %lor.rhs3122 [
    i8 52, label %if.then3150
    i8 39, label %lor.lhs.false3143
    i8 45, label %lor.lhs.false3143
    i8 46, label %lor.lhs.false3143
    i8 50, label %lor.lhs.false3143
    i8 57, label %lor.lhs.false3143
    i8 58, label %lor.lhs.false3143
  ]

lor.rhs3122:                                      ; preds = %while.cond3087
  %idxprom3124 = zext i8 %.pre5750 to i64
  %arrayidx3125 = getelementptr inbounds [0 x i8]* @PL_regkind, i64 0, i64 %idxprom3124
  %607 = load i8* %arrayidx3125, align 1, !tbaa !1
  %cmp3127 = icmp eq i8 %607, 40
  br i1 %cmp3127, label %land.rhs3129, label %if.end3188

land.rhs3129:                                     ; preds = %lor.rhs3122
  %arg13130 = getelementptr inbounds %struct.regnode* %text_node3072.0, i64 1
  %608 = bitcast %struct.regnode* %arg13130 to i16*
  %609 = load i16* %608, align 2, !tbaa !5
  %cmp3132 = icmp eq i16 %609, 0
  br i1 %cmp3132, label %assume_ok_easy, label %while.body3138

while.body3138:                                   ; preds = %land.rhs3129
  %cmp3141 = icmp eq i8 %.pre5750, 52
  br i1 %cmp3141, label %if.then3150, label %lor.lhs.false3143

lor.lhs.false3143:                                ; preds = %while.cond3087, %while.cond3087, %while.cond3087, %while.cond3087, %while.cond3087, %while.cond3087, %while.body3138
  %idxprom3145 = zext i8 %.pre5750 to i64
  %arrayidx3146 = getelementptr inbounds [0 x i8]* @PL_regkind, i64 0, i64 %idxprom3145
  %610 = load i8* %arrayidx3146, align 1, !tbaa !1
  %cmp3148 = icmp eq i8 %610, 40
  br i1 %cmp3148, label %if.then3150, label %if.else3153

if.then3150:                                      ; preds = %while.cond3087, %lor.lhs.false3143, %while.body3138
  %add.ptr3152 = getelementptr inbounds %struct.regnode* %text_node3072.0, i64 2
  br label %while.cond3087.backedge

if.else3153:                                      ; preds = %lor.lhs.false3143
  switch i8 %.pre5750, label %if.else3179 [
    i8 39, label %if.then3158
    i8 50, label %if.then3165
  ]

if.then3158:                                      ; preds = %if.else3153
  %add.ptr3159 = getelementptr inbounds %struct.regnode* %text_node3072.0, i64 1
  br label %while.cond3087.backedge

while.cond3087.backedge:                          ; preds = %if.then3158, %if.else3179, %if.then3150, %cond.false3173, %cond.true3170
  %text_node3072.0.be = phi %struct.regnode* [ %add.ptr3152, %if.then3150 ], [ %add.ptr3159, %if.then3158 ], [ %add.ptr3183, %if.else3179 ], [ %add.ptr3172, %cond.true3170 ], [ %add.ptr3176, %cond.false3173 ]
  %type3088.phi.trans.insert = getelementptr inbounds %struct.regnode* %text_node3072.0.be, i64 0, i32 1
  %.pre5752 = load i8* %type3088.phi.trans.insert, align 1, !tbaa !1
  br label %while.cond3087

if.then3165:                                      ; preds = %if.else3153
  %flags3166 = getelementptr inbounds %struct.regnode* %text_node3072.0, i64 0, i32 0
  %611 = load i8* %flags3166, align 1, !tbaa !1
  %cmp3168 = icmp eq i8 %611, 0
  br i1 %cmp3168, label %cond.true3170, label %cond.false3173

cond.true3170:                                    ; preds = %if.then3165
  %add.ptr3172 = getelementptr inbounds %struct.regnode* %text_node3072.0, i64 2
  br label %while.cond3087.backedge

cond.false3173:                                   ; preds = %if.then3165
  %arg13174 = getelementptr inbounds %struct.regnode* %text_node3072.0, i64 1
  %612 = bitcast %struct.regnode* %arg13174 to i32*
  %613 = load i32* %612, align 4, !tbaa !0
  %idx.ext3175 = zext i32 %613 to i64
  %add.ptr3176 = getelementptr inbounds %struct.regnode* %text_node3072.0, i64 %idx.ext3175
  br label %while.cond3087.backedge

if.else3179:                                      ; preds = %if.else3153
  %next_off3180 = getelementptr inbounds %struct.regnode* %text_node3072.0, i64 0, i32 2
  %614 = load i16* %next_off3180, align 2, !tbaa !5
  %idx.ext3182 = zext i16 %614 to i64
  %add.ptr3183 = getelementptr inbounds %struct.regnode* %text_node3072.0, i64 %idx.ext3182
  br label %while.cond3087.backedge

if.end3188:                                       ; preds = %repeat, %repeat, %lor.rhs3122, %if.then3070, %if.then3070
  %615 = phi i8 [ %604, %if.then3070 ], [ %604, %if.then3070 ], [ %607, %lor.rhs3122 ], [ %604, %repeat ], [ %604, %repeat ]
  %616 = phi i8 [ %603, %if.then3070 ], [ %603, %if.then3070 ], [ %.pre5750, %lor.rhs3122 ], [ %603, %repeat ], [ %603, %repeat ]
  %text_node3072.1 = phi %struct.regnode* [ %.add.ptr, %if.then3070 ], [ %.add.ptr, %if.then3070 ], [ %text_node3072.0, %lor.rhs3122 ], [ %.add.ptr, %repeat ], [ %.add.ptr, %repeat ]
  %cond5773 = icmp eq i8 %615, 33
  br i1 %cond5773, label %if.else3211, label %assume_ok_easy

if.else3211:                                      ; preds = %if.end3188
  %arraydecay3213 = getelementptr inbounds %struct.regnode* %text_node3072.1, i64 1, i32 0
  %617 = load i32* @PL_reg_flags, align 4, !tbaa !0
  %and3215 = and i32 %617, 8
  %cmp3216 = icmp eq i32 %and3215, 0
  br i1 %cmp3216, label %if.then3218, label %if.else3249

if.then3218:                                      ; preds = %if.else3211
  %618 = load i8* %arraydecay3213, align 1, !tbaa !1
  %conv3219 = zext i8 %618 to i32
  switch i8 %616, label %assume_ok_easy [
    i8 34, label %if.then3229
    i8 48, label %if.then3229
    i8 35, label %if.then3243
    i8 49, label %if.then3243
  ]

if.then3229:                                      ; preds = %if.then3218, %if.then3218
  %idxprom3230 = zext i8 %618 to i64
  %arrayidx3231 = getelementptr inbounds [0 x i8]* @PL_fold, i64 0, i64 %idxprom3230
  %619 = load i8* %arrayidx3231, align 1, !tbaa !1
  %conv3232 = zext i8 %619 to i32
  br label %assume_ok_easy

if.then3243:                                      ; preds = %if.then3218, %if.then3218
  %idxprom3244 = zext i8 %618 to i64
  %arrayidx3245 = getelementptr inbounds [0 x i8]* @PL_fold_locale, i64 0, i64 %idxprom3244
  %620 = load i8* %arrayidx3245, align 1, !tbaa !1
  %conv3246 = zext i8 %620 to i32
  br label %assume_ok_easy

if.else3249:                                      ; preds = %if.else3211
  switch i8 %616, label %if.else3338 [
    i8 34, label %if.then3259
    i8 48, label %if.then3259
  ]

if.then3259:                                      ; preds = %if.else3249, %if.else3249
  %call3265 = call i64 @Perl_to_utf8_lower(i8* %arraydecay3213, i8* %arraydecay3264, i64* %ulen13260) #6
  %call3267 = call i64 @Perl_to_utf8_upper(i8* %arraydecay3213, i8* %arraydecay3266, i64* %ulen23261) #6
  %621 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3269 = getelementptr inbounds %struct.cop* %621, i64 0, i32 14
  %622 = load %struct.sv** %cop_warnings3269, align 8, !tbaa !3
  %cmp3270 = icmp eq %struct.sv* %622, null
  br i1 %cmp3270, label %lor.rhs3288, label %land.lhs.true3272

land.lhs.true3272:                                ; preds = %if.then3259
  %623 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3273 = getelementptr inbounds %struct.cop* %623, i64 0, i32 14
  %624 = load %struct.sv** %cop_warnings3273, align 8, !tbaa !3
  %cmp3274 = icmp eq %struct.sv* %624, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp3274, label %lor.rhs3288, label %land.lhs.true3276

land.lhs.true3276:                                ; preds = %land.lhs.true3272
  %625 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3277 = getelementptr inbounds %struct.cop* %625, i64 0, i32 14
  %626 = load %struct.sv** %cop_warnings3277, align 8, !tbaa !3
  %cmp3278 = icmp eq %struct.sv* %626, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp3278, label %lor.end3298, label %lor.lhs.false3280

lor.lhs.false3280:                                ; preds = %land.lhs.true3276
  %627 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3281 = getelementptr inbounds %struct.cop* %627, i64 0, i32 14
  %628 = load %struct.sv** %cop_warnings3281, align 8, !tbaa !3
  %sv_any3282 = getelementptr inbounds %struct.sv* %628, i64 0, i32 0
  %629 = load i8** %sv_any3282, align 8, !tbaa !3
  %xpv_pv3283 = bitcast i8* %629 to i8**
  %630 = load i8** %xpv_pv3283, align 8, !tbaa !3
  %arrayidx3284 = getelementptr inbounds i8* %630, i64 11
  %631 = load i8* %arrayidx3284, align 1, !tbaa !1
  %and3286 = and i8 %631, 1
  %tobool3287 = icmp eq i8 %and3286, 0
  br i1 %tobool3287, label %lor.rhs3288, label %lor.end3298

lor.rhs3288:                                      ; preds = %lor.lhs.false3280, %land.lhs.true3272, %if.then3259
  %632 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3289 = getelementptr inbounds %struct.cop* %632, i64 0, i32 14
  %633 = load %struct.sv** %cop_warnings3289, align 8, !tbaa !3
  %cmp3290 = icmp eq %struct.sv* %633, null
  br i1 %cmp3290, label %land.rhs3292, label %lor.end3298

land.rhs3292:                                     ; preds = %lor.rhs3288
  %634 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and3294 = and i8 %634, 1
  %tobool3295 = icmp ne i8 %and3294, 0
  %phitmp5410 = select i1 %tobool3295, i32 0, i32 255
  br label %lor.end3298

lor.end3298:                                      ; preds = %lor.lhs.false3280, %lor.rhs3288, %land.rhs3292, %land.lhs.true3276
  %635 = phi i32 [ 0, %lor.lhs.false3280 ], [ 0, %land.lhs.true3276 ], [ 255, %lor.rhs3288 ], [ %phitmp5410, %land.rhs3292 ]
  %call3301 = call i64 @Perl_utf8n_to_uvuni(i8* %arraydecay3264, i64 13, i64* null, i32 %635) #6
  %conv3302 = trunc i64 %call3301 to i32
  %636 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3304 = getelementptr inbounds %struct.cop* %636, i64 0, i32 14
  %637 = load %struct.sv** %cop_warnings3304, align 8, !tbaa !3
  %cmp3305 = icmp eq %struct.sv* %637, null
  br i1 %cmp3305, label %lor.rhs3323, label %land.lhs.true3307

land.lhs.true3307:                                ; preds = %lor.end3298
  %638 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3308 = getelementptr inbounds %struct.cop* %638, i64 0, i32 14
  %639 = load %struct.sv** %cop_warnings3308, align 8, !tbaa !3
  %cmp3309 = icmp eq %struct.sv* %639, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp3309, label %lor.rhs3323, label %land.lhs.true3311

land.lhs.true3311:                                ; preds = %land.lhs.true3307
  %640 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3312 = getelementptr inbounds %struct.cop* %640, i64 0, i32 14
  %641 = load %struct.sv** %cop_warnings3312, align 8, !tbaa !3
  %cmp3313 = icmp eq %struct.sv* %641, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp3313, label %lor.end3333, label %lor.lhs.false3315

lor.lhs.false3315:                                ; preds = %land.lhs.true3311
  %642 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3316 = getelementptr inbounds %struct.cop* %642, i64 0, i32 14
  %643 = load %struct.sv** %cop_warnings3316, align 8, !tbaa !3
  %sv_any3317 = getelementptr inbounds %struct.sv* %643, i64 0, i32 0
  %644 = load i8** %sv_any3317, align 8, !tbaa !3
  %xpv_pv3318 = bitcast i8* %644 to i8**
  %645 = load i8** %xpv_pv3318, align 8, !tbaa !3
  %arrayidx3319 = getelementptr inbounds i8* %645, i64 11
  %646 = load i8* %arrayidx3319, align 1, !tbaa !1
  %and3321 = and i8 %646, 1
  %tobool3322 = icmp eq i8 %and3321, 0
  br i1 %tobool3322, label %lor.rhs3323, label %lor.end3333

lor.rhs3323:                                      ; preds = %lor.lhs.false3315, %land.lhs.true3307, %lor.end3298
  %647 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3324 = getelementptr inbounds %struct.cop* %647, i64 0, i32 14
  %648 = load %struct.sv** %cop_warnings3324, align 8, !tbaa !3
  %cmp3325 = icmp eq %struct.sv* %648, null
  br i1 %cmp3325, label %land.rhs3327, label %lor.end3333

land.rhs3327:                                     ; preds = %lor.rhs3323
  %649 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and3329 = and i8 %649, 1
  %tobool3330 = icmp ne i8 %and3329, 0
  %phitmp5411 = select i1 %tobool3330, i32 0, i32 255
  br label %lor.end3333

lor.end3333:                                      ; preds = %lor.lhs.false3315, %lor.rhs3323, %land.rhs3327, %land.lhs.true3311
  %650 = phi i32 [ 0, %lor.lhs.false3315 ], [ 0, %land.lhs.true3311 ], [ 255, %lor.rhs3323 ], [ %phitmp5411, %land.rhs3327 ]
  %call3336 = call i64 @Perl_utf8n_to_uvuni(i8* %arraydecay3266, i64 13, i64* null, i32 %650) #6
  %conv3337 = trunc i64 %call3336 to i32
  br label %assume_ok_easy

if.else3338:                                      ; preds = %if.else3249
  %651 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3339 = getelementptr inbounds %struct.cop* %651, i64 0, i32 14
  %652 = load %struct.sv** %cop_warnings3339, align 8, !tbaa !3
  %cmp3340 = icmp eq %struct.sv* %652, null
  br i1 %cmp3340, label %lor.rhs3358, label %land.lhs.true3342

land.lhs.true3342:                                ; preds = %if.else3338
  %653 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3343 = getelementptr inbounds %struct.cop* %653, i64 0, i32 14
  %654 = load %struct.sv** %cop_warnings3343, align 8, !tbaa !3
  %cmp3344 = icmp eq %struct.sv* %654, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp3344, label %lor.rhs3358, label %land.lhs.true3346

land.lhs.true3346:                                ; preds = %land.lhs.true3342
  %655 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3347 = getelementptr inbounds %struct.cop* %655, i64 0, i32 14
  %656 = load %struct.sv** %cop_warnings3347, align 8, !tbaa !3
  %cmp3348 = icmp eq %struct.sv* %656, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp3348, label %lor.end3368, label %lor.lhs.false3350

lor.lhs.false3350:                                ; preds = %land.lhs.true3346
  %657 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3351 = getelementptr inbounds %struct.cop* %657, i64 0, i32 14
  %658 = load %struct.sv** %cop_warnings3351, align 8, !tbaa !3
  %sv_any3352 = getelementptr inbounds %struct.sv* %658, i64 0, i32 0
  %659 = load i8** %sv_any3352, align 8, !tbaa !3
  %xpv_pv3353 = bitcast i8* %659 to i8**
  %660 = load i8** %xpv_pv3353, align 8, !tbaa !3
  %arrayidx3354 = getelementptr inbounds i8* %660, i64 11
  %661 = load i8* %arrayidx3354, align 1, !tbaa !1
  %and3356 = and i8 %661, 1
  %tobool3357 = icmp eq i8 %and3356, 0
  br i1 %tobool3357, label %lor.rhs3358, label %lor.end3368

lor.rhs3358:                                      ; preds = %lor.lhs.false3350, %land.lhs.true3342, %if.else3338
  %662 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3359 = getelementptr inbounds %struct.cop* %662, i64 0, i32 14
  %663 = load %struct.sv** %cop_warnings3359, align 8, !tbaa !3
  %cmp3360 = icmp eq %struct.sv* %663, null
  br i1 %cmp3360, label %land.rhs3362, label %lor.end3368

land.rhs3362:                                     ; preds = %lor.rhs3358
  %664 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and3364 = and i8 %664, 1
  %tobool3365 = icmp ne i8 %and3364, 0
  %phitmp5408 = select i1 %tobool3365, i32 0, i32 255
  br label %lor.end3368

lor.end3368:                                      ; preds = %lor.lhs.false3350, %lor.rhs3358, %land.rhs3362, %land.lhs.true3346
  %665 = phi i32 [ 0, %lor.lhs.false3350 ], [ 0, %land.lhs.true3346 ], [ 255, %lor.rhs3358 ], [ %phitmp5408, %land.rhs3362 ]
  %call3371 = call i64 @Perl_utf8n_to_uvuni(i8* %arraydecay3213, i64 13, i64* null, i32 %665) #6
  %conv3372 = trunc i64 %call3371 to i32
  br label %assume_ok_easy

assume_ok_easy:                                   ; preds = %if.end3188, %land.rhs3129, %lor.lhs.false3058, %land.lhs.true3065, %if.then3218, %if.then3243, %if.then3229, %lor.end3368, %lor.end3333
  %c2.3 = phi i32 [ %conv3337, %lor.end3333 ], [ %conv3372, %lor.end3368 ], [ %conv3232, %if.then3229 ], [ %conv3246, %if.then3243 ], [ %conv3219, %if.then3218 ], [ -1000, %land.lhs.true3065 ], [ -1000, %lor.lhs.false3058 ], [ -1000, %land.rhs3129 ], [ -1000, %if.end3188 ]
  %c1.3 = phi i32 [ %conv3302, %lor.end3333 ], [ %conv3372, %lor.end3368 ], [ %conv3219, %if.then3229 ], [ %conv3219, %if.then3243 ], [ %conv3219, %if.then3218 ], [ -1000, %land.lhs.true3065 ], [ -1000, %lor.lhs.false3058 ], [ -1000, %land.rhs3129 ], [ -1000, %if.end3188 ]
  store i8* %locinput.0, i8** @PL_reginput, align 8, !tbaa !3
  %tobool3378 = icmp eq i32 %minmod.0, 0
  br i1 %tobool3378, label %if.else3826, label %if.then3379

if.then3379:                                      ; preds = %assume_ok_easy
  %tobool3381 = icmp eq i32 %ln.7, 0
  br i1 %tobool3381, label %if.end3387, label %land.lhs.true3382

land.lhs.true3382:                                ; preds = %if.then3379
  %call3383 = call fastcc i32 @S_regrepeat(%struct.regnode* %scan.2, i32 %ln.7) #5
  %cmp3384 = icmp slt i32 %call3383, %ln.7
  br i1 %cmp3384, label %do_no.preheader, label %land.lhs.true3382.if.end3387_crit_edge

land.lhs.true3382.if.end3387_crit_edge:           ; preds = %land.lhs.true3382
  %.pre5757 = load i8** @PL_reginput, align 8, !tbaa !3
  br label %if.end3387

if.end3387:                                       ; preds = %land.lhs.true3382.if.end3387_crit_edge, %if.then3379
  %666 = phi i8* [ %.pre5757, %land.lhs.true3382.if.end3387_crit_edge ], [ %locinput.0, %if.then3379 ]
  %667 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %cmp3388 = icmp eq i32 %c1.3, -1000
  %cmp3662 = icmp eq i32 %n.2, 32767
  br i1 %cmp3388, label %while.cond3658.preheader, label %if.then3390

while.cond3658.preheader:                         ; preds = %if.end3387
  %tobool3723 = icmp ne i32 %paren.0, 0
  %idxprom37485395 = zext i32 %paren.0 to i64
  %tobool3723.not = xor i1 %tobool3723, true
  br label %while.cond3658

if.then3390:                                      ; preds = %if.end3387
  br i1 %cmp3662, label %if.then3394, label %if.else3412

if.then3394:                                      ; preds = %if.then3390
  %668 = load i8** @PL_regeol, align 8, !tbaa !3
  %add.ptr3395 = getelementptr inbounds i8* %668, i64 -1
  br i1 %tobool82, label %while.body3447.preheader, label %while.cond3398

while.cond3398:                                   ; preds = %if.then3394, %while.cond3398
  %e3391.0 = phi i8* [ %incdec.ptr3409, %while.cond3398 ], [ %add.ptr3395, %if.then3394 ]
  %669 = load i8* %e3391.0, align 1, !tbaa !1
  %cmp3400 = icmp slt i8 %669, 0
  %cmp3404 = icmp ult i8 %669, -64
  %or.cond5498 = and i1 %cmp3400, %cmp3404
  %incdec.ptr3409 = getelementptr inbounds i8* %e3391.0, i64 -1
  br i1 %or.cond5498, label %while.cond3398, label %while.body3447.preheader

if.else3412:                                      ; preds = %if.then3390
  br i1 %tobool82, label %if.else3434, label %if.then3414

if.then3414:                                      ; preds = %if.else3412
  %sub3415 = sub nsw i32 %n.2, %ln.7
  %cmp34165570 = icmp sgt i32 %sub3415, 0
  br i1 %cmp34165570, label %land.rhs3418.lr.ph, label %while.body3447.preheader

land.rhs3418.lr.ph:                               ; preds = %if.then3414
  %670 = load i8** @PL_regeol, align 8, !tbaa !3
  br label %land.rhs3418

for.cond:                                         ; preds = %land.rhs3418
  %cmp3416 = icmp sgt i32 %dec3433, 0
  br i1 %cmp3416, label %land.rhs3418, label %while.body3447.preheader

land.rhs3418:                                     ; preds = %land.rhs3418.lr.ph, %for.cond
  %m.05572 = phi i32 [ %sub3415, %land.rhs3418.lr.ph ], [ %dec3433, %for.cond ]
  %e3391.15571 = phi i8* [ %666, %land.rhs3418.lr.ph ], [ %add.ptr3423, %for.cond ]
  %671 = load i8* %e3391.15571, align 1, !tbaa !1
  %idxprom3419 = zext i8 %671 to i64
  %arrayidx3420 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom3419
  %672 = load i8* %arrayidx3420, align 1, !tbaa !1
  %idx.ext3422 = zext i8 %672 to i64
  %add.ptr3423 = getelementptr inbounds i8* %e3391.15571, i64 %idx.ext3422
  %cmp3424 = icmp ugt i8* %add.ptr3423, %670
  %dec3433 = add nsw i32 %m.05572, -1
  br i1 %cmp3424, label %while.body3447.preheader, label %for.cond

if.else3434:                                      ; preds = %if.else3412
  %idx.ext34355399 = zext i32 %n.2 to i64
  %idx.ext34375400 = zext i32 %ln.7 to i64
  %add.ptr3436.sum = sub i64 %idx.ext34355399, %idx.ext34375400
  %add.ptr3438 = getelementptr inbounds i8* %666, i64 %add.ptr3436.sum
  %673 = load i8** @PL_regeol, align 8, !tbaa !3
  %cmp3439 = icmp ult i8* %add.ptr3438, %673
  %add.ptr3442 = getelementptr inbounds i8* %673, i64 -1
  %add.ptr3438.add.ptr3442 = select i1 %cmp3439, i8* %add.ptr3438, i8* %add.ptr3442
  br label %while.body3447.preheader

while.body3447.preheader:                         ; preds = %while.cond3398, %if.then3414, %land.rhs3418, %for.cond, %if.then3394, %if.else3434
  %e3391.2.ph = phi i8* [ %add.ptr3438.add.ptr3442, %if.else3434 ], [ %add.ptr3395, %if.then3394 ], [ %666, %if.then3414 ], [ %e3391.15571, %land.rhs3418 ], [ %add.ptr3423, %for.cond ], [ %e3391.0, %while.cond3398 ]
  %cmp3489 = icmp eq i32 %c1.3, %c2.3
  %conv3580 = sext i32 %c2.3 to i64
  %conv3576 = sext i32 %c1.3 to i64
  %tobool3603 = icmp ne i32 %paren.0, 0
  %idxprom36285402 = zext i32 %paren.0 to i64
  %tobool3603.not = xor i1 %tobool3603, true
  br label %while.body3447

while.body3447:                                   ; preds = %if.then3648, %if.else3654, %while.body3447.preheader
  %old.0 = phi i8* [ %666, %while.body3447.preheader ], [ %locinput.11, %if.else3654 ], [ %locinput.11, %if.then3648 ]
  %count.0 = phi i32 [ 0, %while.body3447.preheader ], [ 1, %if.else3654 ], [ 1, %if.then3648 ]
  %locinput.5 = phi i8* [ %666, %while.body3447.preheader ], [ %incdec.ptr3655, %if.else3654 ], [ %add.ptr3653, %if.then3648 ]
  %ln.8 = phi i32 [ %ln.7, %while.body3447.preheader ], [ %ln.9, %if.else3654 ], [ %ln.9, %if.then3648 ]
  %cmp34935588 = icmp ugt i8* %locinput.5, %e3391.2.ph
  br i1 %tobool262, label %if.else3487, label %if.then3449

if.then3449:                                      ; preds = %while.body3447
  br i1 %cmp3489, label %while.cond3453.preheader, label %while.cond3466.preheader

while.cond3453.preheader:                         ; preds = %if.then3449
  br i1 %cmp34935588, label %if.end3482, label %land.rhs3456

while.cond3466.preheader:                         ; preds = %if.then3449
  br i1 %cmp34935588, label %if.end3482, label %land.lhs.true3469

while.cond3453:                                   ; preds = %land.rhs3456
  %cmp3454 = icmp ugt i8* %incdec.ptr3463, %e3391.2.ph
  br i1 %cmp3454, label %if.end3482, label %land.rhs3456

land.rhs3456:                                     ; preds = %while.cond3453.preheader, %while.cond3453
  %locinput.65579 = phi i8* [ %incdec.ptr3463, %while.cond3453 ], [ %locinput.5, %while.cond3453.preheader ]
  %674 = load i8* %locinput.65579, align 1, !tbaa !1
  %conv3457 = zext i8 %674 to i32
  %cmp3458 = icmp eq i32 %conv3457, %c2.3
  %incdec.ptr3463 = getelementptr inbounds i8* %locinput.65579, i64 1
  br i1 %cmp3458, label %if.end3482, label %while.cond3453

while.cond3466:                                   ; preds = %land.lhs.true3469
  %cmp3467 = icmp ugt i8* %incdec.ptr3480, %e3391.2.ph
  br i1 %cmp3467, label %if.end3482, label %land.lhs.true3469

land.lhs.true3469:                                ; preds = %while.cond3466.preheader, %while.cond3466
  %locinput.75575 = phi i8* [ %incdec.ptr3480, %while.cond3466 ], [ %locinput.5, %while.cond3466.preheader ]
  %675 = load i8* %locinput.75575, align 1, !tbaa !1
  %conv3470 = zext i8 %675 to i32
  %cmp3471 = icmp eq i32 %conv3470, %c1.3
  %cmp3475 = icmp eq i32 %conv3470, %c2.3
  %or.cond5499 = or i1 %cmp3471, %cmp3475
  %incdec.ptr3480 = getelementptr inbounds i8* %locinput.75575, i64 1
  br i1 %or.cond5499, label %if.end3482, label %while.cond3466

if.end3482:                                       ; preds = %while.cond3453.preheader, %land.rhs3456, %while.cond3453, %while.cond3466.preheader, %land.lhs.true3469, %while.cond3466
  %locinput.8 = phi i8* [ %locinput.5, %while.cond3466.preheader ], [ %locinput.75575, %land.lhs.true3469 ], [ %incdec.ptr3480, %while.cond3466 ], [ %locinput.5, %while.cond3453.preheader ], [ %locinput.65579, %land.rhs3456 ], [ %incdec.ptr3463, %while.cond3453 ]
  %sub.ptr.lhs.cast3483 = ptrtoint i8* %locinput.8 to i64
  %sub.ptr.rhs.cast3484 = ptrtoint i8* %old.0 to i64
  %sub.ptr.sub3485 = sub i64 %sub.ptr.lhs.cast3483, %sub.ptr.rhs.cast3484
  %conv3486 = trunc i64 %sub.ptr.sub3485 to i32
  br label %if.end3589

if.else3487:                                      ; preds = %while.body3447
  br i1 %cmp3489, label %while.cond3492.preheader, label %while.cond3539.preheader

while.cond3492.preheader:                         ; preds = %if.else3487
  br i1 %cmp34935588, label %if.end3589, label %land.rhs3495

while.cond3539.preheader:                         ; preds = %if.else3487
  br i1 %cmp34935588, label %if.end3589, label %while.body3542

land.rhs3495:                                     ; preds = %while.cond3492.preheader, %while.body3534
  %locinput.95590 = phi i8* [ %add.ptr3535, %while.body3534 ], [ %locinput.5, %while.cond3492.preheader ]
  %count.15589 = phi i32 [ %inc3536, %while.body3534 ], [ %count.0, %while.cond3492.preheader ]
  %676 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3496 = getelementptr inbounds %struct.cop* %676, i64 0, i32 14
  %677 = load %struct.sv** %cop_warnings3496, align 8, !tbaa !3
  %cmp3497 = icmp eq %struct.sv* %677, null
  br i1 %cmp3497, label %lor.rhs3515, label %land.lhs.true3499

land.lhs.true3499:                                ; preds = %land.rhs3495
  %678 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3500 = getelementptr inbounds %struct.cop* %678, i64 0, i32 14
  %679 = load %struct.sv** %cop_warnings3500, align 8, !tbaa !3
  %cmp3501 = icmp eq %struct.sv* %679, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp3501, label %lor.rhs3515, label %land.lhs.true3503

land.lhs.true3503:                                ; preds = %land.lhs.true3499
  %680 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3504 = getelementptr inbounds %struct.cop* %680, i64 0, i32 14
  %681 = load %struct.sv** %cop_warnings3504, align 8, !tbaa !3
  %cmp3505 = icmp eq %struct.sv* %681, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp3505, label %lor.end3525, label %lor.lhs.false3507

lor.lhs.false3507:                                ; preds = %land.lhs.true3503
  %682 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3508 = getelementptr inbounds %struct.cop* %682, i64 0, i32 14
  %683 = load %struct.sv** %cop_warnings3508, align 8, !tbaa !3
  %sv_any3509 = getelementptr inbounds %struct.sv* %683, i64 0, i32 0
  %684 = load i8** %sv_any3509, align 8, !tbaa !3
  %xpv_pv3510 = bitcast i8* %684 to i8**
  %685 = load i8** %xpv_pv3510, align 8, !tbaa !3
  %arrayidx3511 = getelementptr inbounds i8* %685, i64 11
  %686 = load i8* %arrayidx3511, align 1, !tbaa !1
  %and3513 = and i8 %686, 1
  %tobool3514 = icmp eq i8 %and3513, 0
  br i1 %tobool3514, label %lor.rhs3515, label %lor.end3525

lor.rhs3515:                                      ; preds = %lor.lhs.false3507, %land.lhs.true3499, %land.rhs3495
  %687 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3516 = getelementptr inbounds %struct.cop* %687, i64 0, i32 14
  %688 = load %struct.sv** %cop_warnings3516, align 8, !tbaa !3
  %cmp3517 = icmp eq %struct.sv* %688, null
  br i1 %cmp3517, label %land.rhs3519, label %lor.end3525

land.rhs3519:                                     ; preds = %lor.rhs3515
  %689 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and3521 = and i8 %689, 1
  %tobool3522 = icmp ne i8 %and3521, 0
  %phitmp5406 = select i1 %tobool3522, i32 0, i32 255
  br label %lor.end3525

lor.end3525:                                      ; preds = %lor.lhs.false3507, %lor.rhs3515, %land.rhs3519, %land.lhs.true3503
  %690 = phi i32 [ 0, %lor.lhs.false3507 ], [ 0, %land.lhs.true3503 ], [ 255, %lor.rhs3515 ], [ %phitmp5406, %land.rhs3519 ]
  %call3528 = call i64 @Perl_utf8n_to_uvuni(i8* %locinput.95590, i64 13, i64* %len3488, i32 %690) #6
  %cmp3530 = icmp eq i64 %call3528, %conv3576
  br i1 %cmp3530, label %if.end3589, label %while.body3534

while.body3534:                                   ; preds = %lor.end3525
  %691 = load i64* %len3488, align 8, !tbaa !4
  %add.ptr3535 = getelementptr inbounds i8* %locinput.95590, i64 %691
  %inc3536 = add nsw i32 %count.15589, 1
  %cmp3493 = icmp ugt i8* %add.ptr3535, %e3391.2.ph
  br i1 %cmp3493, label %if.end3589, label %land.rhs3495

while.body3542:                                   ; preds = %while.cond3539.preheader, %if.end3584
  %locinput.105584 = phi i8* [ %add.ptr3585, %if.end3584 ], [ %locinput.5, %while.cond3539.preheader ]
  %count.25583 = phi i32 [ %inc3586, %if.end3584 ], [ %count.0, %while.cond3539.preheader ]
  %692 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3543 = getelementptr inbounds %struct.cop* %692, i64 0, i32 14
  %693 = load %struct.sv** %cop_warnings3543, align 8, !tbaa !3
  %cmp3544 = icmp eq %struct.sv* %693, null
  br i1 %cmp3544, label %lor.rhs3562, label %land.lhs.true3546

land.lhs.true3546:                                ; preds = %while.body3542
  %694 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3547 = getelementptr inbounds %struct.cop* %694, i64 0, i32 14
  %695 = load %struct.sv** %cop_warnings3547, align 8, !tbaa !3
  %cmp3548 = icmp eq %struct.sv* %695, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp3548, label %lor.rhs3562, label %land.lhs.true3550

land.lhs.true3550:                                ; preds = %land.lhs.true3546
  %696 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3551 = getelementptr inbounds %struct.cop* %696, i64 0, i32 14
  %697 = load %struct.sv** %cop_warnings3551, align 8, !tbaa !3
  %cmp3552 = icmp eq %struct.sv* %697, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp3552, label %lor.end3572, label %lor.lhs.false3554

lor.lhs.false3554:                                ; preds = %land.lhs.true3550
  %698 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3555 = getelementptr inbounds %struct.cop* %698, i64 0, i32 14
  %699 = load %struct.sv** %cop_warnings3555, align 8, !tbaa !3
  %sv_any3556 = getelementptr inbounds %struct.sv* %699, i64 0, i32 0
  %700 = load i8** %sv_any3556, align 8, !tbaa !3
  %xpv_pv3557 = bitcast i8* %700 to i8**
  %701 = load i8** %xpv_pv3557, align 8, !tbaa !3
  %arrayidx3558 = getelementptr inbounds i8* %701, i64 11
  %702 = load i8* %arrayidx3558, align 1, !tbaa !1
  %and3560 = and i8 %702, 1
  %tobool3561 = icmp eq i8 %and3560, 0
  br i1 %tobool3561, label %lor.rhs3562, label %lor.end3572

lor.rhs3562:                                      ; preds = %lor.lhs.false3554, %land.lhs.true3546, %while.body3542
  %703 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3563 = getelementptr inbounds %struct.cop* %703, i64 0, i32 14
  %704 = load %struct.sv** %cop_warnings3563, align 8, !tbaa !3
  %cmp3564 = icmp eq %struct.sv* %704, null
  br i1 %cmp3564, label %land.rhs3566, label %lor.end3572

land.rhs3566:                                     ; preds = %lor.rhs3562
  %705 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and3568 = and i8 %705, 1
  %tobool3569 = icmp ne i8 %and3568, 0
  %phitmp5404 = select i1 %tobool3569, i32 0, i32 255
  br label %lor.end3572

lor.end3572:                                      ; preds = %lor.lhs.false3554, %lor.rhs3562, %land.rhs3566, %land.lhs.true3550
  %706 = phi i32 [ 0, %lor.lhs.false3554 ], [ 0, %land.lhs.true3550 ], [ 255, %lor.rhs3562 ], [ %phitmp5404, %land.rhs3566 ]
  %call3575 = call i64 @Perl_utf8n_to_uvuni(i8* %locinput.105584, i64 13, i64* %len3488, i32 %706) #6
  %cmp3577 = icmp eq i64 %call3575, %conv3576
  %cmp3581 = icmp eq i64 %call3575, %conv3580
  %or.cond5581 = or i1 %cmp3577, %cmp3581
  br i1 %or.cond5581, label %if.end3589, label %if.end3584

if.end3584:                                       ; preds = %lor.end3572
  %707 = load i64* %len3488, align 8, !tbaa !4
  %add.ptr3585 = getelementptr inbounds i8* %locinput.105584, i64 %707
  %inc3586 = add nsw i32 %count.25583, 1
  %cmp3540 = icmp ugt i8* %add.ptr3585, %e3391.2.ph
  br i1 %cmp3540, label %if.end3589, label %while.body3542

if.end3589:                                       ; preds = %while.cond3492.preheader, %lor.end3525, %while.body3534, %while.cond3539.preheader, %lor.end3572, %if.end3584, %if.end3482
  %count.3 = phi i32 [ %conv3486, %if.end3482 ], [ %count.0, %while.cond3539.preheader ], [ %count.25583, %lor.end3572 ], [ %inc3586, %if.end3584 ], [ %count.0, %while.cond3492.preheader ], [ %count.15589, %lor.end3525 ], [ %inc3536, %while.body3534 ]
  %locinput.11 = phi i8* [ %locinput.8, %if.end3482 ], [ %locinput.5, %while.cond3539.preheader ], [ %locinput.105584, %lor.end3572 ], [ %add.ptr3585, %if.end3584 ], [ %locinput.5, %while.cond3492.preheader ], [ %locinput.95590, %lor.end3525 ], [ %add.ptr3535, %while.body3534 ]
  %cmp3590 = icmp ugt i8* %locinput.11, %e3391.2.ph
  br i1 %cmp3590, label %do_no.preheader, label %if.end3593

if.end3593:                                       ; preds = %if.end3589
  %cmp3594 = icmp eq i8* %locinput.11, %old.0
  br i1 %cmp3594, label %if.end3602, label %if.then3596

if.then3596:                                      ; preds = %if.end3593
  %call3597 = call fastcc i32 @S_regrepeat(%struct.regnode* %scan.2, i32 %count.3) #5
  %cmp3598 = icmp slt i32 %call3597, %count.3
  br i1 %cmp3598, label %do_no.preheader, label %if.end3602

if.end3602:                                       ; preds = %if.end3593, %if.then3596
  %ln.9 = phi i32 [ 1, %if.then3596 ], [ %ln.8, %if.end3593 ]
  br i1 %tobool3603, label %if.then3604, label %if.end3631

if.then3604:                                      ; preds = %if.end3602
  %tobool3605 = icmp eq i32 %ln.9, 0
  br i1 %tobool3605, label %if.else3627, label %if.then3606

if.then3606:                                      ; preds = %if.then3604
  %708 = load i8* @PL_reg_match_utf8, align 1, !tbaa !1
  %tobool3608 = icmp eq i8 %708, 0
  br i1 %tobool3608, label %cond.false3611, label %cond.true3609

cond.true3609:                                    ; preds = %if.then3606
  %709 = load i8** @PL_bostr, align 8, !tbaa !3
  %call.i5543 = call fastcc i8* @S_reghop3(i8* %locinput.11, i32 -1, i8* %709) #6
  br label %cond.end3613

cond.false3611:                                   ; preds = %if.then3606
  %add.ptr3612 = getelementptr inbounds i8* %locinput.11, i64 -1
  %.pre5749 = load i8** @PL_bostr, align 8, !tbaa !3
  br label %cond.end3613

cond.end3613:                                     ; preds = %cond.false3611, %cond.true3609
  %710 = phi i8* [ %709, %cond.true3609 ], [ %.pre5749, %cond.false3611 ]
  %cond3614 = phi i8* [ %call.i5543, %cond.true3609 ], [ %add.ptr3612, %cond.false3611 ]
  %sub.ptr.lhs.cast3615 = ptrtoint i8* %cond3614 to i64
  %sub.ptr.rhs.cast3616 = ptrtoint i8* %710 to i64
  %sub.ptr.sub3617 = sub i64 %sub.ptr.lhs.cast3615, %sub.ptr.rhs.cast3616
  %conv3618 = trunc i64 %sub.ptr.sub3617 to i32
  %711 = load i32** @PL_regstartp, align 8, !tbaa !3
  %arrayidx3620 = getelementptr inbounds i32* %711, i64 %idxprom36285402
  store i32 %conv3618, i32* %arrayidx3620, align 4, !tbaa !0
  %sub.ptr.lhs.cast3621 = ptrtoint i8* %locinput.11 to i64
  %sub.ptr.sub3623 = sub i64 %sub.ptr.lhs.cast3621, %sub.ptr.rhs.cast3616
  %conv3624 = trunc i64 %sub.ptr.sub3623 to i32
  %712 = load i32** @PL_regendp, align 8, !tbaa !3
  %arrayidx3626 = getelementptr inbounds i32* %712, i64 %idxprom36285402
  store i32 %conv3624, i32* %arrayidx3626, align 4, !tbaa !0
  br label %if.end3631

if.else3627:                                      ; preds = %if.then3604
  %713 = load i32** @PL_regendp, align 8, !tbaa !3
  %arrayidx3629 = getelementptr inbounds i32* %713, i64 %idxprom36285402
  store i32 -1, i32* %arrayidx3629, align 4, !tbaa !0
  br label %if.end3631

if.end3631:                                       ; preds = %cond.end3613, %if.else3627, %if.end3602
  %call3632 = call fastcc i32 @S_regmatch(%struct.regnode* %.add.ptr) #5
  %tobool3633 = icmp eq i32 %call3632, 0
  br i1 %tobool3633, label %if.end3635, label %return

if.end3635:                                       ; preds = %if.end3631
  %tobool3638 = icmp eq i32 %ln.9, 0
  %or.cond5500 = or i1 %tobool3638, %tobool3603.not
  br i1 %or.cond5500, label %if.end3642, label %if.then3639

if.then3639:                                      ; preds = %if.end3635
  %714 = load i32** @PL_regendp, align 8, !tbaa !3
  %arrayidx3641 = getelementptr inbounds i32* %714, i64 %idxprom36285402
  store i32 -1, i32* %arrayidx3641, align 4, !tbaa !0
  br label %if.end3642

if.end3642:                                       ; preds = %if.end3635, %if.then3639
  store i8* %locinput.11, i8** @PL_reginput, align 8, !tbaa !3
  %715 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %cmp3643 = icmp sgt i32 %715, %667
  br i1 %cmp3643, label %if.then3645, label %if.end3646

if.then3645:                                      ; preds = %if.end3642
  call void @Perl_leave_scope(i32 %667) #6
  br label %if.end3646

if.end3646:                                       ; preds = %if.then3645, %if.end3642
  br i1 %tobool262, label %if.then3648, label %if.else3654

if.then3648:                                      ; preds = %if.end3646
  %716 = load i8* %locinput.11, align 1, !tbaa !1
  %idxprom3649 = zext i8 %716 to i64
  %arrayidx3650 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom3649
  %717 = load i8* %arrayidx3650, align 1, !tbaa !1
  %idx.ext3652 = zext i8 %717 to i64
  %add.ptr3653 = getelementptr inbounds i8* %locinput.11, i64 %idx.ext3652
  br label %while.body3447

if.else3654:                                      ; preds = %if.end3646
  %incdec.ptr3655 = getelementptr inbounds i8* %locinput.11, i64 1
  br label %while.body3447

while.cond3658:                                   ; preds = %while.cond3658.preheader, %if.then3820
  %718 = phi i8* [ %727, %if.then3820 ], [ %666, %while.cond3658.preheader ]
  %ln.10 = phi i32 [ %inc3821, %if.then3820 ], [ %ln.7, %while.cond3658.preheader ]
  %cmp3659 = icmp sge i32 %n.2, %ln.10
  %cmp3665 = icmp sgt i32 %ln.10, 0
  %or.cond5501 = and i1 %cmp3662, %cmp3665
  %or.cond5769 = or i1 %cmp3659, %or.cond5501
  br i1 %or.cond5769, label %if.then3771, label %do_no.preheader

if.then3771:                                      ; preds = %while.cond3658
  br i1 %tobool3723, label %if.then3773, label %if.end3800

if.then3773:                                      ; preds = %if.then3771
  %tobool3774 = icmp eq i32 %ln.10, 0
  br i1 %tobool3774, label %if.else3796, label %if.then3775

if.then3775:                                      ; preds = %if.then3773
  %719 = load i8* @PL_reg_match_utf8, align 1, !tbaa !1
  %tobool3777 = icmp eq i8 %719, 0
  br i1 %tobool3777, label %cond.false3780, label %cond.true3778

cond.true3778:                                    ; preds = %if.then3775
  %720 = load i8** @PL_bostr, align 8, !tbaa !3
  %call.i5535 = call fastcc i8* @S_reghop3(i8* %718, i32 -1, i8* %720) #6
  br label %cond.end3782

cond.false3780:                                   ; preds = %if.then3775
  %add.ptr3781 = getelementptr inbounds i8* %718, i64 -1
  %.pre5759 = load i8** @PL_bostr, align 8, !tbaa !3
  br label %cond.end3782

cond.end3782:                                     ; preds = %cond.false3780, %cond.true3778
  %721 = phi i8* [ %720, %cond.true3778 ], [ %.pre5759, %cond.false3780 ]
  %cond3783 = phi i8* [ %call.i5535, %cond.true3778 ], [ %add.ptr3781, %cond.false3780 ]
  %sub.ptr.lhs.cast3784 = ptrtoint i8* %cond3783 to i64
  %sub.ptr.rhs.cast3785 = ptrtoint i8* %721 to i64
  %sub.ptr.sub3786 = sub i64 %sub.ptr.lhs.cast3784, %sub.ptr.rhs.cast3785
  %conv3787 = trunc i64 %sub.ptr.sub3786 to i32
  %722 = load i32** @PL_regstartp, align 8, !tbaa !3
  %arrayidx3789 = getelementptr inbounds i32* %722, i64 %idxprom37485395
  store i32 %conv3787, i32* %arrayidx3789, align 4, !tbaa !0
  %sub.ptr.lhs.cast3790 = ptrtoint i8* %718 to i64
  %sub.ptr.sub3792 = sub i64 %sub.ptr.lhs.cast3790, %sub.ptr.rhs.cast3785
  %conv3793 = trunc i64 %sub.ptr.sub3792 to i32
  %723 = load i32** @PL_regendp, align 8, !tbaa !3
  %arrayidx3795 = getelementptr inbounds i32* %723, i64 %idxprom37485395
  store i32 %conv3793, i32* %arrayidx3795, align 4, !tbaa !0
  br label %if.end3800

if.else3796:                                      ; preds = %if.then3773
  %724 = load i32** @PL_regendp, align 8, !tbaa !3
  %arrayidx3798 = getelementptr inbounds i32* %724, i64 %idxprom37485395
  store i32 -1, i32* %arrayidx3798, align 4, !tbaa !0
  br label %if.end3800

if.end3800:                                       ; preds = %cond.end3782, %if.else3796, %if.then3771
  %call3801 = call fastcc i32 @S_regmatch(%struct.regnode* %.add.ptr) #5
  %tobool3802 = icmp eq i32 %call3801, 0
  br i1 %tobool3802, label %if.end3804, label %return

if.end3804:                                       ; preds = %if.end3800
  %tobool3807 = icmp eq i32 %ln.10, 0
  %or.cond5503 = or i1 %tobool3807, %tobool3723.not
  br i1 %or.cond5503, label %if.end3811, label %if.then3808

if.then3808:                                      ; preds = %if.end3804
  %725 = load i32** @PL_regendp, align 8, !tbaa !3
  %arrayidx3810 = getelementptr inbounds i32* %725, i64 %idxprom37485395
  store i32 -1, i32* %arrayidx3810, align 4, !tbaa !0
  br label %if.end3811

if.end3811:                                       ; preds = %if.end3804, %if.then3808
  %726 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %cmp3812 = icmp sgt i32 %726, %667
  br i1 %cmp3812, label %if.then3814, label %if.end3817

if.then3814:                                      ; preds = %if.end3811
  call void @Perl_leave_scope(i32 %667) #6
  br label %if.end3817

if.end3817:                                       ; preds = %if.then3814, %if.end3811
  store i8* %718, i8** @PL_reginput, align 8, !tbaa !3
  %call3818 = call fastcc i32 @S_regrepeat(%struct.regnode* %scan.2, i32 1) #5
  %tobool3819 = icmp eq i32 %call3818, 0
  br i1 %tobool3819, label %do_no.preheader, label %if.then3820

if.then3820:                                      ; preds = %if.end3817
  %inc3821 = add nsw i32 %ln.10, 1
  %727 = load i8** @PL_reginput, align 8, !tbaa !3
  br label %while.cond3658

if.else3826:                                      ; preds = %assume_ok_easy
  %call3828 = call fastcc i32 @S_regrepeat(%struct.regnode* %scan.2, i32 %n.2) #5
  %728 = load i8** @PL_reginput, align 8, !tbaa !3
  %cmp3829 = icmp slt i32 %ln.7, %call3828
  br i1 %cmp3829, label %land.lhs.true3831, label %if.end3868

land.lhs.true3831:                                ; preds = %if.else3826
  %729 = load i8* %type3010, align 1, !tbaa !1
  %idxprom3833 = zext i8 %729 to i64
  %arrayidx3834 = getelementptr inbounds [0 x i8]* @PL_regkind, i64 0, i64 %idxprom3833
  %730 = load i8* %arrayidx3834, align 1, !tbaa !1
  %cmp3836 = icmp eq i8 %730, 6
  br i1 %cmp3836, label %land.lhs.true3838, label %if.end3868

land.lhs.true3838:                                ; preds = %land.lhs.true3831
  %731 = load i32* @PL_multiline, align 4, !tbaa !0
  %tobool3839 = icmp ne i32 %731, 0
  %cmp3843 = icmp eq i8 %729, 7
  %or.cond5504 = or i1 %tobool3839, %cmp3843
  br i1 %or.cond5504, label %lor.lhs.false3845, label %if.then3855

lor.lhs.false3845:                                ; preds = %land.lhs.true3838
  switch i8 %729, label %if.end3868 [
    i8 8, label %if.then3855
    i8 5, label %if.then3855
  ]

if.then3855:                                      ; preds = %lor.lhs.false3845, %lor.lhs.false3845, %land.lhs.true3838
  %add.ptr3856 = getelementptr inbounds i8* %728, i64 -1
  %732 = load i8* %add.ptr3856, align 1, !tbaa !1
  %cmp3858 = icmp eq i8 %732, 10
  br i1 %cmp3858, label %land.lhs.true3860, label %if.end3868

land.lhs.true3860:                                ; preds = %if.then3855
  %not.cmp3863 = icmp ne i8 %729, 5
  %dec3866 = sext i1 %not.cmp3863 to i32
  %call3828.dec3866 = add nsw i32 %dec3866, %call3828
  br label %if.end3868

if.end3868:                                       ; preds = %land.lhs.true3860, %lor.lhs.false3845, %if.then3855, %land.lhs.true3831, %if.else3826
  %ln.11 = phi i32 [ %call3828, %if.then3855 ], [ %ln.7, %land.lhs.true3831 ], [ %ln.7, %if.else3826 ], [ %ln.7, %lor.lhs.false3845 ], [ %call3828.dec3866, %land.lhs.true3860 ]
  %733 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %tobool3869 = icmp eq i32 %paren.0, 0
  %cmp39885597 = icmp slt i32 %call3828, %ln.11
  br i1 %tobool3869, label %while.cond3987.preheader, label %while.cond3872.preheader

while.cond3872.preheader:                         ; preds = %if.end3868
  br i1 %cmp39885597, label %do_no.preheader, label %while.body3875.lr.ph

while.body3875.lr.ph:                             ; preds = %while.cond3872.preheader
  %cmp3876 = icmp eq i32 %c1.3, -1000
  %idxprom39555387 = zext i32 %paren.0 to i64
  %conv3922 = sext i32 %c1.3 to i64
  %conv3926 = sext i32 %c2.3 to i64
  br label %while.body3875

while.cond3987.preheader:                         ; preds = %if.end3868
  br i1 %cmp39885597, label %do_no.preheader, label %while.body3990.lr.ph

while.body3990.lr.ph:                             ; preds = %while.cond3987.preheader
  %cmp3991 = icmp eq i32 %c1.3, -1000
  %conv4037 = sext i32 %c1.3 to i64
  %conv4041 = sext i32 %c2.3 to i64
  br label %while.body3990

while.body3875:                                   ; preds = %cond.end3982, %while.body3875.lr.ph
  %n.35607 = phi i32 [ %call3828, %while.body3875.lr.ph ], [ %dec3975, %cond.end3982 ]
  %734 = phi i8* [ %728, %while.body3875.lr.ph ], [ %cond3983, %cond.end3982 ]
  br i1 %cmp3876, label %if.then3931, label %if.then3878

if.then3878:                                      ; preds = %while.body3875
  br i1 %tobool82, label %if.else3914, label %if.then3880

if.then3880:                                      ; preds = %if.then3878
  %735 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3881 = getelementptr inbounds %struct.cop* %735, i64 0, i32 14
  %736 = load %struct.sv** %cop_warnings3881, align 8, !tbaa !3
  %cmp3882 = icmp eq %struct.sv* %736, null
  br i1 %cmp3882, label %lor.rhs3900, label %land.lhs.true3884

land.lhs.true3884:                                ; preds = %if.then3880
  %737 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3885 = getelementptr inbounds %struct.cop* %737, i64 0, i32 14
  %738 = load %struct.sv** %cop_warnings3885, align 8, !tbaa !3
  %cmp3886 = icmp eq %struct.sv* %738, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp3886, label %lor.rhs3900, label %land.lhs.true3888

land.lhs.true3888:                                ; preds = %land.lhs.true3884
  %739 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3889 = getelementptr inbounds %struct.cop* %739, i64 0, i32 14
  %740 = load %struct.sv** %cop_warnings3889, align 8, !tbaa !3
  %cmp3890 = icmp eq %struct.sv* %740, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp3890, label %lor.end3910, label %lor.lhs.false3892

lor.lhs.false3892:                                ; preds = %land.lhs.true3888
  %741 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3893 = getelementptr inbounds %struct.cop* %741, i64 0, i32 14
  %742 = load %struct.sv** %cop_warnings3893, align 8, !tbaa !3
  %sv_any3894 = getelementptr inbounds %struct.sv* %742, i64 0, i32 0
  %743 = load i8** %sv_any3894, align 8, !tbaa !3
  %xpv_pv3895 = bitcast i8* %743 to i8**
  %744 = load i8** %xpv_pv3895, align 8, !tbaa !3
  %arrayidx3896 = getelementptr inbounds i8* %744, i64 11
  %745 = load i8* %arrayidx3896, align 1, !tbaa !1
  %and3898 = and i8 %745, 1
  %tobool3899 = icmp eq i8 %and3898, 0
  br i1 %tobool3899, label %lor.rhs3900, label %lor.end3910

lor.rhs3900:                                      ; preds = %lor.lhs.false3892, %land.lhs.true3884, %if.then3880
  %746 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3901 = getelementptr inbounds %struct.cop* %746, i64 0, i32 14
  %747 = load %struct.sv** %cop_warnings3901, align 8, !tbaa !3
  %cmp3902 = icmp eq %struct.sv* %747, null
  br i1 %cmp3902, label %land.rhs3904, label %lor.end3910

land.rhs3904:                                     ; preds = %lor.rhs3900
  %748 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and3906 = and i8 %748, 1
  %tobool3907 = icmp ne i8 %and3906, 0
  %phitmp5389 = select i1 %tobool3907, i32 0, i32 255
  br label %lor.end3910

lor.end3910:                                      ; preds = %lor.lhs.false3892, %lor.rhs3900, %land.rhs3904, %land.lhs.true3888
  %749 = phi i32 [ 0, %lor.lhs.false3892 ], [ 0, %land.lhs.true3888 ], [ 255, %lor.rhs3900 ], [ %phitmp5389, %land.rhs3904 ]
  %call3913 = call i64 @Perl_utf8n_to_uvuni(i8* %734, i64 13, i64* null, i32 %749) #6
  br label %if.end3918

if.else3914:                                      ; preds = %if.then3878
  %750 = load i8* %734, align 1, !tbaa !1
  %conv3916 = zext i8 %750 to i64
  br label %if.end3918

if.end3918:                                       ; preds = %lor.end3910, %if.else3914
  %c3871.1 = phi i64 [ %call3913, %lor.end3910 ], [ %conv3916, %if.else3914 ]
  %cmp3923 = icmp eq i64 %c3871.1, %conv3922
  %cmp3927 = icmp eq i64 %c3871.1, %conv3926
  %or.cond5770 = or i1 %cmp3923, %cmp3927
  br i1 %or.cond5770, label %if.then3931, label %if.end3974

if.then3931:                                      ; preds = %if.end3918, %while.body3875
  %tobool3932 = icmp eq i32 %n.35607, 0
  br i1 %tobool3932, label %if.else3954, label %if.then3933

if.then3933:                                      ; preds = %if.then3931
  %751 = load i8* @PL_reg_match_utf8, align 1, !tbaa !1
  %tobool3935 = icmp eq i8 %751, 0
  %752 = load i8** @PL_reginput, align 8, !tbaa !3
  br i1 %tobool3935, label %cond.false3938, label %cond.true3936

cond.true3936:                                    ; preds = %if.then3933
  %753 = load i8** @PL_bostr, align 8, !tbaa !3
  %call.i5531 = call fastcc i8* @S_reghop3(i8* %752, i32 -1, i8* %753) #6
  br label %cond.end3940

cond.false3938:                                   ; preds = %if.then3933
  %add.ptr3939 = getelementptr inbounds i8* %752, i64 -1
  %.pre5748 = load i8** @PL_bostr, align 8, !tbaa !3
  br label %cond.end3940

cond.end3940:                                     ; preds = %cond.false3938, %cond.true3936
  %754 = phi i8* [ %753, %cond.true3936 ], [ %.pre5748, %cond.false3938 ]
  %cond3941 = phi i8* [ %call.i5531, %cond.true3936 ], [ %add.ptr3939, %cond.false3938 ]
  %sub.ptr.lhs.cast3942 = ptrtoint i8* %cond3941 to i64
  %sub.ptr.rhs.cast3943 = ptrtoint i8* %754 to i64
  %sub.ptr.sub3944 = sub i64 %sub.ptr.lhs.cast3942, %sub.ptr.rhs.cast3943
  %conv3945 = trunc i64 %sub.ptr.sub3944 to i32
  %755 = load i32** @PL_regstartp, align 8, !tbaa !3
  %arrayidx3947 = getelementptr inbounds i32* %755, i64 %idxprom39555387
  store i32 %conv3945, i32* %arrayidx3947, align 4, !tbaa !0
  %sub.ptr.lhs.cast3948 = ptrtoint i8* %752 to i64
  %sub.ptr.sub3950 = sub i64 %sub.ptr.lhs.cast3948, %sub.ptr.rhs.cast3943
  %conv3951 = trunc i64 %sub.ptr.sub3950 to i32
  %756 = load i32** @PL_regendp, align 8, !tbaa !3
  %arrayidx3953 = getelementptr inbounds i32* %756, i64 %idxprom39555387
  store i32 %conv3951, i32* %arrayidx3953, align 4, !tbaa !0
  br label %if.end3958

if.else3954:                                      ; preds = %if.then3931
  %757 = load i32** @PL_regendp, align 8, !tbaa !3
  %arrayidx3956 = getelementptr inbounds i32* %757, i64 %idxprom39555387
  store i32 -1, i32* %arrayidx3956, align 4, !tbaa !0
  br label %if.end3958

if.end3958:                                       ; preds = %cond.end3940, %if.else3954
  %call3959 = call fastcc i32 @S_regmatch(%struct.regnode* %.add.ptr) #5
  %tobool3960 = icmp eq i32 %call3959, 0
  br i1 %tobool3960, label %if.end3962, label %return

if.end3962:                                       ; preds = %if.end3958
  %tobool3965 = icmp eq i32 %n.35607, 0
  br i1 %tobool3965, label %if.end3969, label %if.then3966

if.then3966:                                      ; preds = %if.end3962
  %758 = load i32** @PL_regendp, align 8, !tbaa !3
  %arrayidx3968 = getelementptr inbounds i32* %758, i64 %idxprom39555387
  store i32 -1, i32* %arrayidx3968, align 4, !tbaa !0
  br label %if.end3969

if.end3969:                                       ; preds = %if.end3962, %if.then3966
  %759 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %cmp3970 = icmp sgt i32 %759, %733
  br i1 %cmp3970, label %if.then3972, label %if.end3974

if.then3972:                                      ; preds = %if.end3969
  call void @Perl_leave_scope(i32 %733) #6
  br label %if.end3974

if.end3974:                                       ; preds = %if.end3918, %if.end3969, %if.then3972
  %dec3975 = add nsw i32 %n.35607, -1
  %760 = load i8* @PL_reg_match_utf8, align 1, !tbaa !1
  %tobool3977 = icmp eq i8 %760, 0
  br i1 %tobool3977, label %cond.false3980, label %cond.true3978

cond.true3978:                                    ; preds = %if.end3974
  %761 = load i8** @PL_bostr, align 8, !tbaa !3
  %call.i5530 = call fastcc i8* @S_reghop3(i8* %734, i32 -1, i8* %761) #6
  br label %cond.end3982

cond.false3980:                                   ; preds = %if.end3974
  %add.ptr3981 = getelementptr inbounds i8* %734, i64 -1
  br label %cond.end3982

cond.end3982:                                     ; preds = %cond.false3980, %cond.true3978
  %cond3983 = phi i8* [ %call.i5530, %cond.true3978 ], [ %add.ptr3981, %cond.false3980 ]
  store i8* %cond3983, i8** @PL_reginput, align 8, !tbaa !3
  %cmp3873 = icmp sgt i32 %n.35607, %ln.11
  br i1 %cmp3873, label %while.body3875, label %do_no.preheader

while.body3990:                                   ; preds = %cond.end4097, %while.body3990.lr.ph
  %n.45600 = phi i32 [ %call3828, %while.body3990.lr.ph ], [ %dec4090, %cond.end4097 ]
  %762 = phi i8* [ %728, %while.body3990.lr.ph ], [ %cond4098, %cond.end4097 ]
  br i1 %cmp3991, label %if.end4073, label %if.then3993

if.then3993:                                      ; preds = %while.body3990
  br i1 %tobool82, label %if.else4029, label %if.then3995

if.then3995:                                      ; preds = %if.then3993
  %763 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings3996 = getelementptr inbounds %struct.cop* %763, i64 0, i32 14
  %764 = load %struct.sv** %cop_warnings3996, align 8, !tbaa !3
  %cmp3997 = icmp eq %struct.sv* %764, null
  br i1 %cmp3997, label %lor.rhs4015, label %land.lhs.true3999

land.lhs.true3999:                                ; preds = %if.then3995
  %765 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings4000 = getelementptr inbounds %struct.cop* %765, i64 0, i32 14
  %766 = load %struct.sv** %cop_warnings4000, align 8, !tbaa !3
  %cmp4001 = icmp eq %struct.sv* %766, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp4001, label %lor.rhs4015, label %land.lhs.true4003

land.lhs.true4003:                                ; preds = %land.lhs.true3999
  %767 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings4004 = getelementptr inbounds %struct.cop* %767, i64 0, i32 14
  %768 = load %struct.sv** %cop_warnings4004, align 8, !tbaa !3
  %cmp4005 = icmp eq %struct.sv* %768, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp4005, label %lor.end4025, label %lor.lhs.false4007

lor.lhs.false4007:                                ; preds = %land.lhs.true4003
  %769 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings4008 = getelementptr inbounds %struct.cop* %769, i64 0, i32 14
  %770 = load %struct.sv** %cop_warnings4008, align 8, !tbaa !3
  %sv_any4009 = getelementptr inbounds %struct.sv* %770, i64 0, i32 0
  %771 = load i8** %sv_any4009, align 8, !tbaa !3
  %xpv_pv4010 = bitcast i8* %771 to i8**
  %772 = load i8** %xpv_pv4010, align 8, !tbaa !3
  %arrayidx4011 = getelementptr inbounds i8* %772, i64 11
  %773 = load i8* %arrayidx4011, align 1, !tbaa !1
  %and4013 = and i8 %773, 1
  %tobool4014 = icmp eq i8 %and4013, 0
  br i1 %tobool4014, label %lor.rhs4015, label %lor.end4025

lor.rhs4015:                                      ; preds = %lor.lhs.false4007, %land.lhs.true3999, %if.then3995
  %774 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings4016 = getelementptr inbounds %struct.cop* %774, i64 0, i32 14
  %775 = load %struct.sv** %cop_warnings4016, align 8, !tbaa !3
  %cmp4017 = icmp eq %struct.sv* %775, null
  br i1 %cmp4017, label %land.rhs4019, label %lor.end4025

land.rhs4019:                                     ; preds = %lor.rhs4015
  %776 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and4021 = and i8 %776, 1
  %tobool4022 = icmp ne i8 %and4021, 0
  %phitmp = select i1 %tobool4022, i32 0, i32 255
  br label %lor.end4025

lor.end4025:                                      ; preds = %lor.lhs.false4007, %lor.rhs4015, %land.rhs4019, %land.lhs.true4003
  %777 = phi i32 [ 0, %lor.lhs.false4007 ], [ 0, %land.lhs.true4003 ], [ 255, %lor.rhs4015 ], [ %phitmp, %land.rhs4019 ]
  %call4028 = call i64 @Perl_utf8n_to_uvuni(i8* %762, i64 13, i64* null, i32 %777) #6
  br label %if.end4033

if.else4029:                                      ; preds = %if.then3993
  %778 = load i8* %762, align 1, !tbaa !1
  %conv4031 = zext i8 %778 to i64
  br label %if.end4033

if.end4033:                                       ; preds = %lor.end4025, %if.else4029
  %c3986.1 = phi i64 [ %call4028, %lor.end4025 ], [ %conv4031, %if.else4029 ]
  %cmp4038 = icmp eq i64 %c3986.1, %conv4037
  %cmp4042 = icmp eq i64 %c3986.1, %conv4041
  %or.cond5771 = or i1 %cmp4038, %cmp4042
  br i1 %or.cond5771, label %if.end4073, label %if.end4089

if.end4073:                                       ; preds = %if.end4033, %while.body3990
  %call4074 = call fastcc i32 @S_regmatch(%struct.regnode* %.add.ptr) #5
  %tobool4075 = icmp eq i32 %call4074, 0
  br i1 %tobool4075, label %if.end4084, label %return

if.end4084:                                       ; preds = %if.end4073
  %779 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %cmp4085 = icmp sgt i32 %779, %733
  br i1 %cmp4085, label %if.then4087, label %if.end4089

if.then4087:                                      ; preds = %if.end4084
  call void @Perl_leave_scope(i32 %733) #6
  br label %if.end4089

if.end4089:                                       ; preds = %if.end4033, %if.end4084, %if.then4087
  %dec4090 = add nsw i32 %n.45600, -1
  %780 = load i8* @PL_reg_match_utf8, align 1, !tbaa !1
  %tobool4092 = icmp eq i8 %780, 0
  br i1 %tobool4092, label %cond.false4095, label %cond.true4093

cond.true4093:                                    ; preds = %if.end4089
  %781 = load i8** @PL_bostr, align 8, !tbaa !3
  %call.i5528 = call fastcc i8* @S_reghop3(i8* %762, i32 -1, i8* %781) #6
  br label %cond.end4097

cond.false4095:                                   ; preds = %if.end4089
  %add.ptr4096 = getelementptr inbounds i8* %762, i64 -1
  br label %cond.end4097

cond.end4097:                                     ; preds = %cond.false4095, %cond.true4093
  %cond4098 = phi i8* [ %call.i5528, %cond.true4093 ], [ %add.ptr4096, %cond.false4095 ]
  store i8* %cond4098, i8** @PL_reginput, align 8, !tbaa !3
  %cmp3988 = icmp sgt i32 %n.45600, %ln.11
  br i1 %cmp3988, label %while.body3990, label %do_no.preheader

sw.bb4102:                                        ; preds = %while.body
  %782 = load %struct.re_cc_state** @PL_reg_call_cc, align 8, !tbaa !3
  %tobool4103 = icmp eq %struct.re_cc_state* %782, null
  br i1 %tobool4103, label %if.end4128, label %if.then4104

if.then4104:                                      ; preds = %sw.bb4102
  %783 = load %struct.curcur** @PL_regcc, align 8, !tbaa !3
  %784 = load %struct.regexp** @PL_reg_re, align 8, !tbaa !3
  %call4108 = call fastcc i32 @S_regcppush(i32 0) #5
  %785 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %786 = load %struct.re_cc_state** @PL_reg_call_cc, align 8, !tbaa !3
  %ss4109 = getelementptr inbounds %struct.re_cc_state* %786, i64 0, i32 0
  %787 = load i32* %ss4109, align 4, !tbaa !0
  store i32 %787, i32* @PL_savestack_ix, align 4, !tbaa !0
  call fastcc void @S_regcppop() #6
  store i32 %785, i32* @PL_savestack_ix, align 4, !tbaa !0
  store i8* %locinput.0, i8** @PL_reginput, align 8, !tbaa !3
  %788 = load %struct.re_cc_state** @PL_reg_call_cc, align 8, !tbaa !3
  %re4111 = getelementptr inbounds %struct.re_cc_state* %788, i64 0, i32 4
  %789 = load %struct.regexp** %re4111, align 8, !tbaa !3
  %precomp.i5525 = getelementptr inbounds %struct.regexp* %789, i64 0, i32 4
  %790 = load i8** %precomp.i5525, align 8, !tbaa !3
  store i8* %790, i8** @PL_regprecomp, align 8, !tbaa !3
  %nparens.i5526 = getelementptr inbounds %struct.regexp* %789, i64 0, i32 12
  %791 = load i32* %nparens.i5526, align 4, !tbaa !0
  store i32 %791, i32* @PL_regnpar, align 4, !tbaa !0
  %data.i5527 = getelementptr inbounds %struct.regexp* %789, i64 0, i32 5
  %792 = load %struct.reg_data** %data.i5527, align 8, !tbaa !3
  store %struct.reg_data* %792, %struct.reg_data** @PL_regdata, align 8, !tbaa !3
  store %struct.regexp* %789, %struct.regexp** @PL_reg_re, align 8, !tbaa !3
  %cc4112 = getelementptr inbounds %struct.re_cc_state* %788, i64 0, i32 3
  %793 = load %struct.curcur** %cc4112, align 8, !tbaa !3
  store %struct.curcur* %793, %struct.curcur** @PL_regcc, align 8, !tbaa !3
  %prev4113 = getelementptr inbounds %struct.re_cc_state* %788, i64 0, i32 2
  %794 = load %struct.re_cc_state** %prev4113, align 8, !tbaa !3
  store %struct.re_cc_state* %794, %struct.re_cc_state** @PL_reg_call_cc, align 8, !tbaa !3
  %node4114 = getelementptr inbounds %struct.re_cc_state* %782, i64 0, i32 1
  %795 = load %struct.regnode** %node4114, align 8, !tbaa !3
  %call4115 = call fastcc i32 @S_regmatch(%struct.regnode* %795) #5
  %tobool4116 = icmp eq i32 %call4115, 0
  br i1 %tobool4116, label %if.end4122, label %if.then4117

if.then4117:                                      ; preds = %if.then4104
  store %struct.re_cc_state* %782, %struct.re_cc_state** @PL_reg_call_cc, align 8, !tbaa !3
  %796 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %cmp4118 = icmp sgt i32 %796, %call4108
  br i1 %cmp4118, label %if.then4120, label %return

if.then4120:                                      ; preds = %if.then4117
  call void @Perl_leave_scope(i32 %call4108) #6
  br label %return

if.end4122:                                       ; preds = %if.then4104
  %797 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %cmp4123 = icmp sgt i32 %797, %785
  br i1 %cmp4123, label %if.then4125, label %if.end4126

if.then4125:                                      ; preds = %if.end4122
  call void @Perl_leave_scope(i32 %785) #6
  br label %if.end4126

if.end4126:                                       ; preds = %if.then4125, %if.end4122
  call fastcc void @S_regcppop() #5
  store %struct.re_cc_state* %782, %struct.re_cc_state** @PL_reg_call_cc, align 8, !tbaa !3
  store %struct.curcur* %783, %struct.curcur** @PL_regcc, align 8, !tbaa !3
  store %struct.regexp* %784, %struct.regexp** @PL_reg_re, align 8, !tbaa !3
  %precomp.i5513 = getelementptr inbounds %struct.regexp* %784, i64 0, i32 4
  %798 = load i8** %precomp.i5513, align 8, !tbaa !3
  store i8* %798, i8** @PL_regprecomp, align 8, !tbaa !3
  %nparens.i5514 = getelementptr inbounds %struct.regexp* %784, i64 0, i32 12
  %799 = load i32* %nparens.i5514, align 4, !tbaa !0
  store i32 %799, i32* @PL_regnpar, align 4, !tbaa !0
  %data.i5515 = getelementptr inbounds %struct.regexp* %784, i64 0, i32 5
  %800 = load %struct.reg_data** %data.i5515, align 8, !tbaa !3
  store %struct.reg_data* %800, %struct.reg_data** @PL_regdata, align 8, !tbaa !3
  store %struct.regexp* %784, %struct.regexp** @PL_reg_re, align 8, !tbaa !3
  br label %do_no.preheader

if.end4128:                                       ; preds = %sw.bb4102
  %801 = load i8** @PL_regtill, align 8, !tbaa !3
  %cmp4129 = icmp ult i8* %locinput.0, %801
  br i1 %cmp4129, label %do_no.preheader, label %if.end4132

if.end4132:                                       ; preds = %if.end4128
  store i8* %locinput.0, i8** @PL_reginput, align 8, !tbaa !3
  br label %return

sw.bb4133:                                        ; preds = %while.body
  store i8* %locinput.0, i8** @PL_reginput, align 8, !tbaa !3
  br label %return

sw.bb4134:                                        ; preds = %while.body
  store i8* %locinput.0, i8** @PL_reginput, align 8, !tbaa !3
  br label %do_ifmatch

sw.bb4135:                                        ; preds = %while.body
  %flags4136 = getelementptr inbounds %struct.regnode* %scan.0, i64 0, i32 0
  %802 = load i8* %flags4136, align 1, !tbaa !1
  %tobool4137 = icmp eq i8 %802, 0
  br i1 %tobool4137, label %if.else4168, label %if.then4138

if.then4138:                                      ; preds = %sw.bb4135
  %803 = load i8* @PL_reg_match_utf8, align 1, !tbaa !1
  %tobool4140 = icmp eq i8 %803, 0
  br i1 %tobool4140, label %cond.false4146, label %cond.true4141

cond.true4141:                                    ; preds = %if.then4138
  %conv4143 = zext i8 %802 to i32
  %sub4144 = sub nsw i32 0, %conv4143
  %cmp.i5510 = icmp sgt i32 %sub4144, -1
  %804 = load i8** @PL_regeol, align 8, !tbaa !3
  %805 = load i8** @PL_bostr, align 8, !tbaa !3
  %cond.i5511 = select i1 %cmp.i5510, i8* %804, i8* %805
  %call.i5512 = call fastcc i8* @S_reghopmaybe3(i8* %locinput.0, i32 %sub4144, i8* %cond.i5511) #6
  br label %cond.end4163

cond.false4146:                                   ; preds = %if.then4138
  %idx.ext4149 = zext i8 %802 to i64
  %idx.neg4150 = sub i64 0, %idx.ext4149
  %add.ptr4151 = getelementptr inbounds i8* %locinput.0, i64 %idx.neg4150
  %806 = load i8** @PL_bostr, align 8, !tbaa !3
  %cmp4152 = icmp ult i8* %add.ptr4151, %806
  %.add.ptr4151 = select i1 %cmp4152, i8* null, i8* %add.ptr4151
  br label %cond.end4163

cond.end4163:                                     ; preds = %cond.false4146, %cond.true4141
  %cond4164 = phi i8* [ %call.i5512, %cond.true4141 ], [ %.add.ptr4151, %cond.false4146 ]
  %tobool4165 = icmp eq i8* %cond4164, null
  br i1 %tobool4165, label %say_yes, label %if.end4167

if.end4167:                                       ; preds = %cond.end4163
  store i8* %cond4164, i8** @PL_reginput, align 8, !tbaa !3
  br label %do_ifmatch

if.else4168:                                      ; preds = %sw.bb4135
  store i8* %locinput.0, i8** @PL_reginput, align 8, !tbaa !3
  br label %do_ifmatch

sw.bb4170:                                        ; preds = %while.body
  %flags4171 = getelementptr inbounds %struct.regnode* %scan.0, i64 0, i32 0
  %807 = load i8* %flags4171, align 1, !tbaa !1
  %tobool4172 = icmp eq i8 %807, 0
  br i1 %tobool4172, label %if.else4203, label %if.then4173

if.then4173:                                      ; preds = %sw.bb4170
  %808 = load i8* @PL_reg_match_utf8, align 1, !tbaa !1
  %tobool4175 = icmp eq i8 %808, 0
  br i1 %tobool4175, label %cond.false4181, label %cond.true4176

cond.true4176:                                    ; preds = %if.then4173
  %conv4178 = zext i8 %807 to i32
  %sub4179 = sub nsw i32 0, %conv4178
  %cmp.i = icmp sgt i32 %sub4179, -1
  %809 = load i8** @PL_regeol, align 8, !tbaa !3
  %810 = load i8** @PL_bostr, align 8, !tbaa !3
  %cond.i = select i1 %cmp.i, i8* %809, i8* %810
  %call.i = call fastcc i8* @S_reghopmaybe3(i8* %locinput.0, i32 %sub4179, i8* %cond.i) #6
  br label %cond.end4198

cond.false4181:                                   ; preds = %if.then4173
  %idx.ext4184 = zext i8 %807 to i64
  %idx.neg4185 = sub i64 0, %idx.ext4184
  %add.ptr4186 = getelementptr inbounds i8* %locinput.0, i64 %idx.neg4185
  %811 = load i8** @PL_bostr, align 8, !tbaa !3
  %cmp4187 = icmp ult i8* %add.ptr4186, %811
  %.add.ptr4186 = select i1 %cmp4187, i8* null, i8* %add.ptr4186
  br label %cond.end4198

cond.end4198:                                     ; preds = %cond.false4181, %cond.true4176
  %cond4199 = phi i8* [ %call.i, %cond.true4176 ], [ %.add.ptr4186, %cond.false4181 ]
  %tobool4200 = icmp eq i8* %cond4199, null
  br i1 %tobool4200, label %say_no, label %if.end4202

if.end4202:                                       ; preds = %cond.end4198
  store i8* %cond4199, i8** @PL_reginput, align 8, !tbaa !3
  br label %do_ifmatch

if.else4203:                                      ; preds = %sw.bb4170
  store i8* %locinput.0, i8** @PL_reginput, align 8, !tbaa !3
  br label %do_ifmatch

do_ifmatch:                                       ; preds = %if.end4202, %if.else4203, %if.end4167, %if.else4168, %sw.bb4134
  %n.5 = phi i32 [ 1, %if.end4202 ], [ 1, %if.else4203 ], [ 0, %if.end4167 ], [ 0, %if.else4168 ], [ 1, %sw.bb4134 ]
  %add.ptr4206 = getelementptr inbounds %struct.regnode* %scan.0, i64 2
  %call4207 = call fastcc i32 @S_regmatch(%struct.regnode* %add.ptr4206) #5
  %cmp4208 = icmp eq i32 %call4207, %n.5
  br i1 %cmp4208, label %do_ifmatch.say_yes_crit_edge, label %say_no

do_ifmatch.say_yes_crit_edge:                     ; preds = %do_ifmatch
  %.pre5760 = load i8* %type, align 1, !tbaa !1
  br label %say_yes

say_no:                                           ; preds = %cond.end4198, %do_ifmatch
  %tobool4211 = icmp eq i32 %logical.0, 0
  br i1 %tobool4211, label %do_no.preheader, label %do_longjump

say_yes:                                          ; preds = %do_ifmatch.say_yes_crit_edge, %cond.end4163
  %812 = phi i8 [ %.pre5760, %do_ifmatch.say_yes_crit_edge ], [ %7, %cond.end4163 ]
  %tobool4215 = icmp eq i32 %logical.0, 0
  %sw.0. = select i1 %tobool4215, i32 %sw.0, i32 1
  %cmp4220 = icmp eq i8 %812, 52
  br i1 %cmp4220, label %if.then4222, label %do_longjump

if.then4222:                                      ; preds = %say_yes
  %813 = load i8** @PL_reginput, align 8, !tbaa !3
  %814 = load i8* %813, align 1, !tbaa !1
  %conv4223 = zext i8 %814 to i32
  br label %do_longjump

do_longjump:                                      ; preds = %say_no, %while.body, %if.then4222, %say_yes
  %logical.3 = phi i32 [ %logical.0, %while.body ], [ 0, %if.then4222 ], [ 0, %say_yes ], [ 0, %say_no ]
  %sw.2 = phi i32 [ %sw.0, %while.body ], [ %sw.0., %if.then4222 ], [ %sw.0., %say_yes ], [ 0, %say_no ]
  %locinput.16 = phi i8* [ %locinput.0, %while.body ], [ %813, %if.then4222 ], [ %locinput.0, %say_yes ], [ %locinput.0, %say_no ]
  %nextchr.2 = phi i32 [ %nextchr.0, %while.body ], [ %conv4223, %if.then4222 ], [ %nextchr.0, %say_yes ], [ %nextchr.0, %say_no ]
  %arg14226 = getelementptr inbounds %struct.regnode* %scan.0, i64 1
  %815 = bitcast %struct.regnode* %arg14226 to i32*
  %816 = load i32* %815, align 4, !tbaa !0
  %idx.ext4227 = zext i32 %816 to i64
  %add.ptr4228 = getelementptr inbounds %struct.regnode* %scan.0, i64 %idx.ext4227
  %cmp4229 = icmp eq i32 %816, 0
  %.add.ptr4228 = select i1 %cmp4229, %struct.regnode* null, %struct.regnode* %add.ptr4228
  br label %while.cond

sw.default:                                       ; preds = %while.body
  %817 = load %struct.gv** @PL_stderrgv, align 8, !tbaa !3
  %tobool4233 = icmp eq %struct.gv* %817, null
  br i1 %tobool4233, label %cond.false4254, label %land.lhs.true4234

land.lhs.true4234:                                ; preds = %sw.default
  %sv_flags4235 = getelementptr inbounds %struct.gv* %817, i64 0, i32 2
  %818 = load i32* %sv_flags4235, align 4, !tbaa !0
  %and4236 = and i32 %818, 255
  %cmp4237 = icmp eq i32 %and4236, 13
  br i1 %cmp4237, label %land.lhs.true4239, label %cond.false4254

land.lhs.true4239:                                ; preds = %land.lhs.true4234
  %sv_any4240 = getelementptr inbounds %struct.gv* %817, i64 0, i32 0
  %819 = load %struct.xpvgv** %sv_any4240, align 8, !tbaa !3
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %819, i64 0, i32 7
  %820 = load %struct.gp** %xgv_gp, align 8, !tbaa !3
  %gp_io = getelementptr inbounds %struct.gp* %820, i64 0, i32 2
  %821 = load %struct.io** %gp_io, align 8, !tbaa !3
  %tobool4241 = icmp eq %struct.io* %821, null
  br i1 %tobool4241, label %cond.false4254, label %land.lhs.true4242

land.lhs.true4242:                                ; preds = %land.lhs.true4239
  %sv_any4246 = getelementptr inbounds %struct.io* %821, i64 0, i32 0
  %822 = load %struct.xpvio** %sv_any4246, align 8, !tbaa !3
  %xio_ofp = getelementptr inbounds %struct.xpvio* %822, i64 0, i32 8
  %823 = load %struct._PerlIO*** %xio_ofp, align 8, !tbaa !3
  %tobool4247 = icmp eq %struct._PerlIO** %823, null
  br i1 %tobool4247, label %cond.false4254, label %cond.end4256

cond.false4254:                                   ; preds = %land.lhs.true4242, %land.lhs.true4239, %sw.default, %land.lhs.true4234
  %call4255 = call %struct._PerlIO** @Perl_PerlIO_stderr() #6
  %.pre = load i8* %type, align 1, !tbaa !1
  br label %cond.end4256

cond.end4256:                                     ; preds = %land.lhs.true4242, %cond.false4254
  %824 = phi i8 [ %.pre, %cond.false4254 ], [ %7, %land.lhs.true4242 ]
  %cond4257 = phi %struct._PerlIO** [ %call4255, %cond.false4254 ], [ %823, %land.lhs.true4242 ]
  %825 = ptrtoint %struct.regnode* %scan.0 to i64
  %conv4259 = zext i8 %824 to i32
  %call4260 = call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %cond4257, i8* getelementptr inbounds ([8 x i8]* @.str10, i64 0, i64 0), i64 %825, i32 %conv4259) #6
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([25 x i8]* @.str11, i64 0, i64 0)) #6
  br label %while.cond

while.end4261:                                    ; preds = %while.cond
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([26 x i8]* @.str12, i64 0, i64 0)) #6
  br label %do_no.preheader

do_no.preheader:                                  ; preds = %while.cond3658, %while.cond2594, %if.else2667, %lor.end218, %while.body184, %lor.end, %while.body146, %lor.lhs.false1414, %if.end1407, %while.body1403, %assume_ok_REG, %cond.end2977, %if.end2659, %while.cond3872.preheader, %cond.end3982, %while.cond3987.preheader, %cond.end4097, %if.end3589, %if.then3596, %if.end3817, %if.end4126, %land.lhs.true3382, %land.lhs.true2351, %if.then2273, %if.then2263, %if.then2112, %if.then2102, %if.then2034, %if.then2024, %if.end1448, %land.lhs.true1430, %sw.bb1363, %while.end1352, %cond.true1297, %cond.true1213, %cond.false1219, %cond.false1044, %cond.false1009, %if.end907, %cond.true678, %lor.lhs.false690, %cond.false592, %lor.lhs.false583, %no_anyof, %land.lhs.true456, %land.lhs.true460, %land.lhs.true481, %if.end358, %if.then277, %land.lhs.true280, %land.lhs.true300, %land.lhs.true321, %land.lhs.true326, %land.lhs.true332, %if.end235, %if.then116, %if.then83, %if.end65, %sw.bb38, %sw.bb33, %land.lhs.true26, %land.lhs.true12, %while.end4261, %if.end1835, %if.end1823, %if.end4128, %if.end1787, %say_no, %if.end2252, %if.else2268, %if.end2090, %if.else2107, %if.end2016, %if.else2029, %if.then1906, %cond.false1476, %cond.true1473, %cond.true1464, %lor.lhs.false1435, %sw.bb1318, %if.end1328, %land.lhs.true1307, %cond.end1280, %cond.true1253, %sw.bb1155, %land.lhs.true1223, %cond.end1196, %cond.true1169, %land.lhs.true1142, %cond.end1106, %cond.true1079, %sw.bb931, %land.lhs.true1048, %land.lhs.true1013, %cond.end977, %cond.true950, %cond.end661, %cond.true629, %sw.bb509, %cond.end554, %cond.true523, %if.end394, %cond.false377, %cond.true374, %land.lhs.true345, %if.end230, %land.lhs.true246, %sw.bb70, %lor.lhs.false, %land.lhs.true, %lor.lhs.false21, %meol, %seol, %sw.bb75, %sw.bb96, %sw.bb105, %if.end432, %land.lhs.true596, %sw.bb612, %land.lhs.true703, %cond.true994, %cond.true1029, %sw.bb1062, %cond.true1123, %cond.true1123, %cond.true1123, %cond.true1123, %cond.true1123, %sw.bb1236, %cleanup, %land.lhs.true446
  %logical.5.ph = phi i32 [ %logical.0, %land.lhs.true446 ], [ 0, %cleanup ], [ %logical.0, %sw.bb1236 ], [ %logical.0, %cond.true1123 ], [ %logical.0, %cond.true1123 ], [ %logical.0, %cond.true1123 ], [ %logical.0, %cond.true1123 ], [ %logical.0, %cond.true1123 ], [ %logical.0, %sw.bb1062 ], [ %logical.0, %cond.true1029 ], [ %logical.0, %cond.true994 ], [ %logical.0, %land.lhs.true703 ], [ %logical.0, %sw.bb612 ], [ %logical.0, %land.lhs.true596 ], [ %logical.0, %if.end432 ], [ %logical.0, %sw.bb105 ], [ %logical.0, %sw.bb96 ], [ %logical.0, %sw.bb75 ], [ %logical.0, %seol ], [ %logical.0, %meol ], [ %logical.0, %lor.lhs.false21 ], [ %logical.0, %land.lhs.true ], [ %logical.0, %lor.lhs.false ], [ %logical.0, %sw.bb70 ], [ %logical.0, %land.lhs.true246 ], [ %logical.0, %if.end230 ], [ %logical.0, %land.lhs.true345 ], [ %logical.0, %cond.true374 ], [ %logical.0, %cond.false377 ], [ %logical.0, %if.end394 ], [ %logical.0, %cond.true523 ], [ %logical.0, %cond.end554 ], [ %logical.0, %sw.bb509 ], [ %logical.0, %cond.true629 ], [ %logical.0, %cond.end661 ], [ %logical.0, %cond.true950 ], [ %logical.0, %cond.end977 ], [ %logical.0, %land.lhs.true1013 ], [ %logical.0, %land.lhs.true1048 ], [ %logical.0, %sw.bb931 ], [ %logical.0, %cond.true1079 ], [ %logical.0, %cond.end1106 ], [ %logical.0, %land.lhs.true1142 ], [ %logical.0, %cond.true1169 ], [ %logical.0, %cond.end1196 ], [ %logical.0, %land.lhs.true1223 ], [ %logical.0, %sw.bb1155 ], [ %logical.0, %cond.true1253 ], [ %logical.0, %cond.end1280 ], [ %logical.0, %land.lhs.true1307 ], [ %logical.0, %if.end1328 ], [ %logical.0, %sw.bb1318 ], [ %logical.0, %lor.lhs.false1435 ], [ %logical.0, %cond.true1464 ], [ %logical.0, %cond.true1473 ], [ %logical.0, %cond.false1476 ], [ %logical.0, %if.then1906 ], [ %logical.0, %if.else2029 ], [ %logical.0, %if.end2016 ], [ %logical.0, %if.else2107 ], [ %logical.0, %if.end2090 ], [ %logical.0, %if.else2268 ], [ %logical.0, %if.end2252 ], [ 0, %say_no ], [ %logical.0, %if.end1787 ], [ %logical.0, %if.end4128 ], [ %logical.0, %if.end1823 ], [ %logical.0, %if.end1835 ], [ %logical.0, %while.end4261 ], [ %logical.0, %land.lhs.true12 ], [ %logical.0, %land.lhs.true26 ], [ %logical.0, %sw.bb33 ], [ %logical.0, %sw.bb38 ], [ %logical.0, %if.end65 ], [ %logical.0, %if.then83 ], [ %logical.0, %if.then116 ], [ %logical.0, %if.end235 ], [ %logical.0, %land.lhs.true332 ], [ %logical.0, %land.lhs.true326 ], [ %logical.0, %land.lhs.true321 ], [ %logical.0, %land.lhs.true300 ], [ %logical.0, %land.lhs.true280 ], [ %logical.0, %if.then277 ], [ %logical.0, %if.end358 ], [ %logical.0, %land.lhs.true481 ], [ %logical.0, %land.lhs.true460 ], [ %logical.0, %land.lhs.true456 ], [ %logical.0, %no_anyof ], [ %logical.0, %lor.lhs.false583 ], [ %logical.0, %cond.false592 ], [ %logical.0, %lor.lhs.false690 ], [ %logical.0, %cond.true678 ], [ %logical.0, %if.end907 ], [ %logical.0, %cond.false1009 ], [ %logical.0, %cond.false1044 ], [ %logical.0, %cond.false1219 ], [ %logical.0, %cond.true1213 ], [ %logical.0, %cond.true1297 ], [ %logical.0, %while.end1352 ], [ %logical.0, %sw.bb1363 ], [ %logical.0, %land.lhs.true1430 ], [ %logical.0, %if.end1448 ], [ %logical.0, %if.then2024 ], [ %logical.0, %if.then2034 ], [ %logical.0, %if.then2102 ], [ %logical.0, %if.then2112 ], [ %logical.0, %if.then2263 ], [ %logical.0, %if.then2273 ], [ %logical.0, %land.lhs.true2351 ], [ %logical.0, %land.lhs.true3382 ], [ %logical.0, %if.end4126 ], [ %logical.0, %if.end3817 ], [ %logical.0, %if.then3596 ], [ %logical.0, %if.end3589 ], [ %logical.0, %cond.end4097 ], [ %logical.0, %while.cond3987.preheader ], [ %logical.0, %cond.end3982 ], [ %logical.0, %while.cond3872.preheader ], [ %logical.0, %if.end2659 ], [ %logical.0, %cond.end2977 ], [ %logical.0, %assume_ok_REG ], [ %logical.0, %while.body1403 ], [ %logical.0, %if.end1407 ], [ %logical.0, %lor.lhs.false1414 ], [ %logical.0, %while.body146 ], [ %logical.0, %lor.end ], [ %logical.0, %while.body184 ], [ %logical.0, %lor.end218 ], [ %logical.0, %if.else2667 ], [ %logical.0, %while.cond2594 ], [ %logical.0, %while.cond3658 ]
  %minmod.2.ph = phi i32 [ %minmod.0, %land.lhs.true446 ], [ %minmod.0, %cleanup ], [ %minmod.0, %sw.bb1236 ], [ %minmod.0, %cond.true1123 ], [ %minmod.0, %cond.true1123 ], [ %minmod.0, %cond.true1123 ], [ %minmod.0, %cond.true1123 ], [ %minmod.0, %cond.true1123 ], [ %minmod.0, %sw.bb1062 ], [ %minmod.0, %cond.true1029 ], [ %minmod.0, %cond.true994 ], [ %minmod.0, %land.lhs.true703 ], [ %minmod.0, %sw.bb612 ], [ %minmod.0, %land.lhs.true596 ], [ %minmod.0, %if.end432 ], [ %minmod.0, %sw.bb105 ], [ %minmod.0, %sw.bb96 ], [ %minmod.0, %sw.bb75 ], [ %minmod.0, %seol ], [ %minmod.0, %meol ], [ %minmod.0, %lor.lhs.false21 ], [ %minmod.0, %land.lhs.true ], [ %minmod.0, %lor.lhs.false ], [ %minmod.0, %sw.bb70 ], [ %minmod.0, %land.lhs.true246 ], [ %minmod.0, %if.end230 ], [ %minmod.0, %land.lhs.true345 ], [ %minmod.0, %cond.true374 ], [ %minmod.0, %cond.false377 ], [ %minmod.0, %if.end394 ], [ %minmod.0, %cond.true523 ], [ %minmod.0, %cond.end554 ], [ %minmod.0, %sw.bb509 ], [ %minmod.0, %cond.true629 ], [ %minmod.0, %cond.end661 ], [ %minmod.0, %cond.true950 ], [ %minmod.0, %cond.end977 ], [ %minmod.0, %land.lhs.true1013 ], [ %minmod.0, %land.lhs.true1048 ], [ %minmod.0, %sw.bb931 ], [ %minmod.0, %cond.true1079 ], [ %minmod.0, %cond.end1106 ], [ %minmod.0, %land.lhs.true1142 ], [ %minmod.0, %cond.true1169 ], [ %minmod.0, %cond.end1196 ], [ %minmod.0, %land.lhs.true1223 ], [ %minmod.0, %sw.bb1155 ], [ %minmod.0, %cond.true1253 ], [ %minmod.0, %cond.end1280 ], [ %minmod.0, %land.lhs.true1307 ], [ %minmod.0, %if.end1328 ], [ %minmod.0, %sw.bb1318 ], [ %minmod.0, %lor.lhs.false1435 ], [ %minmod.0, %cond.true1464 ], [ %minmod.0, %cond.true1473 ], [ %minmod.0, %cond.false1476 ], [ %minmod.0, %if.then1906 ], [ %minmod.0, %if.else2029 ], [ %minmod.0, %if.end2016 ], [ %minmod.0, %if.else2107 ], [ %minmod.0, %if.end2090 ], [ %minmod.0, %if.else2268 ], [ %minmod.0, %if.end2252 ], [ %minmod.0, %say_no ], [ %minmod.0, %if.end1787 ], [ %minmod.0, %if.end4128 ], [ %minmod.0, %if.end1823 ], [ %minmod.0, %if.end1835 ], [ %minmod.0, %while.end4261 ], [ %minmod.0, %land.lhs.true12 ], [ %minmod.0, %land.lhs.true26 ], [ %minmod.0, %sw.bb33 ], [ %minmod.0, %sw.bb38 ], [ %minmod.0, %if.end65 ], [ %minmod.0, %if.then83 ], [ %minmod.0, %if.then116 ], [ %minmod.0, %if.end235 ], [ %minmod.0, %land.lhs.true332 ], [ %minmod.0, %land.lhs.true326 ], [ %minmod.0, %land.lhs.true321 ], [ %minmod.0, %land.lhs.true300 ], [ %minmod.0, %land.lhs.true280 ], [ %minmod.0, %if.then277 ], [ %minmod.0, %if.end358 ], [ %minmod.0, %land.lhs.true481 ], [ %minmod.0, %land.lhs.true460 ], [ %minmod.0, %land.lhs.true456 ], [ %minmod.0, %no_anyof ], [ %minmod.0, %lor.lhs.false583 ], [ %minmod.0, %cond.false592 ], [ %minmod.0, %lor.lhs.false690 ], [ %minmod.0, %cond.true678 ], [ %minmod.0, %if.end907 ], [ %minmod.0, %cond.false1009 ], [ %minmod.0, %cond.false1044 ], [ %minmod.0, %cond.false1219 ], [ %minmod.0, %cond.true1213 ], [ %minmod.0, %cond.true1297 ], [ %minmod.0, %while.end1352 ], [ %minmod.0, %sw.bb1363 ], [ %minmod.0, %land.lhs.true1430 ], [ %minmod.0, %if.end1448 ], [ %minmod.0, %if.then2024 ], [ %minmod.0, %if.then2034 ], [ %minmod.0, %if.then2102 ], [ %minmod.0, %if.then2112 ], [ %minmod.0, %if.then2263 ], [ %minmod.0, %if.then2273 ], [ 0, %land.lhs.true2351 ], [ 0, %land.lhs.true3382 ], [ %minmod.0, %if.end4126 ], [ 0, %if.end3817 ], [ 0, %if.then3596 ], [ 0, %if.end3589 ], [ 0, %cond.end4097 ], [ 0, %while.cond3987.preheader ], [ 0, %cond.end3982 ], [ 0, %while.cond3872.preheader ], [ 0, %if.end2659 ], [ 0, %cond.end2977 ], [ 0, %assume_ok_REG ], [ %minmod.0, %while.body1403 ], [ %minmod.0, %if.end1407 ], [ %minmod.0, %lor.lhs.false1414 ], [ %minmod.0, %while.body146 ], [ %minmod.0, %lor.end ], [ %minmod.0, %while.body184 ], [ %minmod.0, %lor.end218 ], [ 0, %if.else2667 ], [ 0, %while.cond2594 ], [ 0, %while.cond3658 ]
  %ln.13.ph5642 = phi i32 [ %ln.0, %land.lhs.true446 ], [ %ln.0, %cleanup ], [ %ln.0, %sw.bb1236 ], [ %ln.0, %cond.true1123 ], [ %ln.0, %cond.true1123 ], [ %ln.0, %cond.true1123 ], [ %ln.0, %cond.true1123 ], [ %ln.0, %cond.true1123 ], [ %ln.0, %sw.bb1062 ], [ %ln.0, %cond.true1029 ], [ %ln.0, %cond.true994 ], [ %ln.0, %land.lhs.true703 ], [ %ln.0, %sw.bb612 ], [ %ln.0, %land.lhs.true596 ], [ %ln.0, %if.end432 ], [ %ln.0, %sw.bb105 ], [ %ln.0, %sw.bb96 ], [ %ln.0, %sw.bb75 ], [ %ln.0, %seol ], [ %ln.0, %meol ], [ %ln.0, %lor.lhs.false21 ], [ %ln.0, %land.lhs.true ], [ %ln.0, %lor.lhs.false ], [ %ln.0, %sw.bb70 ], [ %conv132, %land.lhs.true246 ], [ %conv132, %if.end230 ], [ %conv260, %land.lhs.true345 ], [ %conv260, %cond.true374 ], [ %conv260, %cond.false377 ], [ %ln.0, %if.end394 ], [ %ln.0, %cond.true523 ], [ %ln.0, %cond.end554 ], [ %ln.0, %sw.bb509 ], [ %ln.0, %cond.true629 ], [ %ln.0, %cond.end661 ], [ %ln.0, %cond.true950 ], [ %ln.0, %cond.end977 ], [ %ln.0, %land.lhs.true1013 ], [ %ln.0, %land.lhs.true1048 ], [ %ln.0, %sw.bb931 ], [ %ln.0, %cond.true1079 ], [ %ln.0, %cond.end1106 ], [ %ln.0, %land.lhs.true1142 ], [ %ln.0, %cond.true1169 ], [ %ln.0, %cond.end1196 ], [ %ln.0, %land.lhs.true1223 ], [ %ln.0, %sw.bb1155 ], [ %ln.0, %cond.true1253 ], [ %ln.0, %cond.end1280 ], [ %ln.0, %land.lhs.true1307 ], [ %ln.0, %if.end1328 ], [ %ln.0, %sw.bb1318 ], [ %253, %lor.lhs.false1435 ], [ %sub, %cond.true1464 ], [ %sub, %cond.true1473 ], [ %sub, %cond.false1476 ], [ %ln.0, %if.then1906 ], [ %ln.4, %if.else2029 ], [ %ln.4, %if.end2016 ], [ %ln.4, %if.else2107 ], [ %ln.4, %if.end2090 ], [ %ln.5, %if.else2268 ], [ %ln.5, %if.end2252 ], [ %ln.0, %say_no ], [ %ln.0, %if.end1787 ], [ %ln.0, %if.end4128 ], [ %ln.3, %if.end1823 ], [ %ln.0, %if.end1835 ], [ %ln.0, %while.end4261 ], [ %ln.0, %land.lhs.true12 ], [ %ln.0, %land.lhs.true26 ], [ %ln.0, %sw.bb33 ], [ %ln.0, %sw.bb38 ], [ %ln.0, %if.end65 ], [ %ln.0, %if.then83 ], [ %ln.0, %if.then116 ], [ %conv132, %if.end235 ], [ %conv260, %land.lhs.true332 ], [ %conv260, %land.lhs.true326 ], [ %conv260, %land.lhs.true321 ], [ %conv260, %land.lhs.true300 ], [ %conv260, %land.lhs.true280 ], [ %conv260, %if.then277 ], [ %conv260, %if.end358 ], [ %ln.0, %land.lhs.true481 ], [ %ln.0, %land.lhs.true460 ], [ %ln.0, %land.lhs.true456 ], [ %ln.0, %no_anyof ], [ %ln.0, %lor.lhs.false583 ], [ %ln.0, %cond.false592 ], [ %ln.0, %lor.lhs.false690 ], [ %ln.0, %cond.true678 ], [ %ln.2, %if.end907 ], [ %ln.0, %cond.false1009 ], [ %ln.0, %cond.false1044 ], [ %ln.0, %cond.false1219 ], [ %ln.0, %cond.true1213 ], [ %ln.0, %cond.true1297 ], [ %ln.0, %while.end1352 ], [ %253, %sw.bb1363 ], [ %253, %land.lhs.true1430 ], [ %sub, %if.end1448 ], [ %ln.4, %if.then2024 ], [ %ln.4, %if.then2034 ], [ %ln.4, %if.then2102 ], [ %ln.4, %if.then2112 ], [ %ln.5, %if.then2263 ], [ %ln.5, %if.then2273 ], [ %conv2323, %land.lhs.true2351 ], [ %ln.7, %land.lhs.true3382 ], [ %ln.0, %if.end4126 ], [ %ln.10, %if.end3817 ], [ 1, %if.then3596 ], [ %ln.8, %if.end3589 ], [ %ln.11, %cond.end4097 ], [ %ln.11, %while.cond3987.preheader ], [ %ln.11, %cond.end3982 ], [ %ln.11, %while.cond3872.preheader ], [ %ln.6, %if.end2659 ], [ %conv2323, %cond.end2977 ], [ %conv2323, %assume_ok_REG ], [ %253, %while.body1403 ], [ %253, %if.end1407 ], [ %253, %lor.lhs.false1414 ], [ %conv132, %while.body146 ], [ %conv132, %lor.end ], [ %conv132, %while.body184 ], [ %conv132, %lor.end218 ], [ %conv2323, %if.else2667 ], [ %ln.6, %while.cond2594 ], [ %ln.10, %while.cond3658 ]
  %tobool42625650 = icmp eq i32 %unwind.0, 0
  br i1 %tobool42625650, label %return, label %if.then4263

if.then4263:                                      ; preds = %do_no.preheader, %if.then4297
  %unwind.25651 = phi i32 [ %844, %if.then4297 ], [ %unwind.0, %do_no.preheader ]
  %826 = load %union.any** @PL_savestack, align 8, !tbaa !3
  %827 = bitcast %union.any* %826 to i8*
  %idx.ext4265 = sext i32 %unwind.25651 to i64
  %add.ptr4266 = getelementptr inbounds i8* %827, i64 %idx.ext4265
  %type4267 = bitcast i8* %add.ptr4266 to i32*
  %828 = load i32* %type4267, align 4, !tbaa !0
  %.off = add i32 %828, -1
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %sw.bb4268, label %sw.default4326

sw.bb4268:                                        ; preds = %if.then4263
  %add.ptr4266.sum = add i64 %idx.ext4265, 12
  %lastparen4270 = getelementptr inbounds i8* %827, i64 %add.ptr4266.sum
  %829 = bitcast i8* %lastparen4270 to i32*
  %830 = load i32* %829, align 4, !tbaa !0
  %831 = load i32* @PL_savestack_ix, align 4, !tbaa !0
  %add.ptr4266.sum5377 = add i64 %idx.ext4265, 8
  %lastcp4271 = getelementptr inbounds i8* %827, i64 %add.ptr4266.sum5377
  %832 = bitcast i8* %lastcp4271 to i32*
  %833 = load i32* %832, align 4, !tbaa !0
  %cmp4272 = icmp sgt i32 %831, %833
  br i1 %cmp4272, label %if.then4274, label %if.end4276

if.then4274:                                      ; preds = %sw.bb4268
  call void @Perl_leave_scope(i32 %833) #6
  br label %if.end4276

if.end4276:                                       ; preds = %if.then4274, %sw.bb4268
  %834 = load i32** @PL_reglastparen, align 8, !tbaa !3
  %835 = load i32* %834, align 4, !tbaa !0
  %cmp42785639 = icmp sgt i32 %835, %830
  br i1 %cmp42785639, label %for.body4280.lr.ph, label %for.end4285

for.body4280.lr.ph:                               ; preds = %if.end4276
  %836 = load i32** @PL_regendp, align 8, !tbaa !3
  %837 = sext i32 %835 to i64
  br label %for.body4280

for.body4280:                                     ; preds = %for.body4280.lr.ph, %for.body4280
  %indvars.iv = phi i64 [ %837, %for.body4280.lr.ph ], [ %indvars.iv.next, %for.body4280 ]
  %arrayidx4282 = getelementptr inbounds i32* %836, i64 %indvars.iv
  store i32 -1, i32* %arrayidx4282, align 4, !tbaa !0
  %indvars.iv.next = add i64 %indvars.iv, -1
  %838 = trunc i64 %indvars.iv.next to i32
  %cmp4278 = icmp sgt i32 %838, %830
  br i1 %cmp4278, label %for.body4280, label %for.end4285

for.end4285:                                      ; preds = %for.body4280, %if.end4276
  %n.6.lcssa = phi i32 [ %835, %if.end4276 ], [ %830, %for.body4280 ]
  store i32 %n.6.lcssa, i32* %834, align 4, !tbaa !0
  %add.ptr4266.sum5378 = add i64 %idx.ext4265, 16
  %next4286 = getelementptr inbounds i8* %827, i64 %add.ptr4266.sum5378
  %839 = bitcast i8* %next4286 to %struct.regnode**
  %840 = load %struct.regnode** %839, align 8, !tbaa !3
  %tobool4287 = icmp eq %struct.regnode* %840, null
  br i1 %tobool4287, label %if.then4297, label %lor.lhs.false4288

lor.lhs.false4288:                                ; preds = %for.end4285
  %type4289 = getelementptr inbounds %struct.regnode* %840, i64 0, i32 1
  %841 = load i8* %type4289, align 1, !tbaa !1
  %conv4290 = zext i8 %841 to i32
  %842 = load i32* %type4267, align 4, !tbaa !0
  %cmp4292 = icmp eq i32 %842, 1
  %cond4294 = select i1 %cmp4292, i32 31, i32 56
  %cmp4295 = icmp eq i32 %conv4290, %cond4294
  br i1 %cmp4295, label %if.end4299, label %if.then4297

if.then4297:                                      ; preds = %lor.lhs.false4288, %for.end4285
  %add.ptr4266.sum5379 = add i64 %idx.ext4265, 4
  %prev4298 = getelementptr inbounds i8* %827, i64 %add.ptr4266.sum5379
  %843 = bitcast i8* %prev4298 to i32*
  %844 = load i32* %843, align 4, !tbaa !0
  %tobool4262 = icmp eq i32 %844, 0
  br i1 %tobool4262, label %return, label %if.then4263

if.end4299:                                       ; preds = %lor.lhs.false4288
  br i1 %cmp4292, label %cond.true4303, label %cond.false4306

cond.true4303:                                    ; preds = %if.end4299
  %next_off4304 = getelementptr inbounds %struct.regnode* %840, i64 0, i32 2
  %845 = load i16* %next_off4304, align 2, !tbaa !5
  %conv4305 = zext i16 %845 to i32
  br label %cond.end4308

cond.false4306:                                   ; preds = %if.end4299
  %arg14307 = getelementptr inbounds %struct.regnode* %840, i64 1
  %846 = bitcast %struct.regnode* %arg14307 to i32*
  %847 = load i32* %846, align 4, !tbaa !0
  br label %cond.end4308

cond.end4308:                                     ; preds = %cond.false4306, %cond.true4303
  %cond4309 = phi i32 [ %conv4305, %cond.true4303 ], [ %847, %cond.false4306 ]
  %tobool4310 = icmp eq i32 %cond4309, 0
  br i1 %tobool4310, label %if.end4315, label %if.then4311

if.then4311:                                      ; preds = %cond.end4308
  %idx.ext4312 = sext i32 %cond4309 to i64
  %add.ptr4313 = getelementptr inbounds %struct.regnode* %840, i64 %idx.ext4312
  br label %if.end4315

if.end4315:                                       ; preds = %cond.end4308, %if.then4311
  %next.3 = phi %struct.regnode* [ %add.ptr4313, %if.then4311 ], [ null, %cond.end4308 ]
  store %struct.regnode* %next.3, %struct.regnode** %839, align 8, !tbaa !3
  %add.ptr4317 = getelementptr inbounds %struct.regnode* %840, i64 1
  %cmp4319 = icmp eq i32 %842, 2
  %add.ptr4322 = getelementptr inbounds %struct.regnode* %840, i64 2
  %add.ptr4322.add.ptr4317 = select i1 %cmp4319, %struct.regnode* %add.ptr4322, %struct.regnode* %add.ptr4317
  %add.ptr4266.sum5380 = add i64 %idx.ext4265, 24
  %locinput4324 = getelementptr inbounds i8* %827, i64 %add.ptr4266.sum5380
  %848 = bitcast i8* %locinput4324 to i8**
  %849 = load i8** %848, align 8, !tbaa !3
  %add.ptr4266.sum5381 = add i64 %idx.ext4265, 32
  %nextchr4325 = getelementptr inbounds i8* %827, i64 %add.ptr4266.sum5381
  %850 = bitcast i8* %nextchr4325 to i32*
  %851 = load i32* %850, align 4, !tbaa !0
  br label %while.cond

sw.default4326:                                   ; preds = %if.then4263
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([32 x i8]* @.str13, i64 0, i64 0)) #6
  br label %return

return:                                           ; preds = %if.end1787, %if.then1906, %if.then1828, %if.end1814, %if.then4297, %do_no.preheader, %if.end2957, %if.end2650, %if.end3958, %if.end4073, %if.end3631, %if.end3800, %if.end1617, %if.then1620, %sw.default4326, %sw.bb4133, %if.end4132, %if.then1947, %if.then1957, %if.then2065, %if.then2075, %if.then2147, %if.then2157, %if.then2227, %if.then2237, %if.then4120, %if.then4117, %if.then2219, %if.else2232, %if.end2139, %if.else2152, %if.end2057, %if.else2070, %if.end1939, %if.else1952
  %retval.0 = phi i32 [ 1, %if.else1952 ], [ 1, %if.end1939 ], [ 1, %if.else2070 ], [ 1, %if.end2057 ], [ 1, %if.else2152 ], [ 1, %if.end2139 ], [ 1, %if.else2232 ], [ 1, %if.then2219 ], [ 1, %if.then4117 ], [ 1, %if.then4120 ], [ 1, %if.then2237 ], [ 1, %if.then2227 ], [ 1, %if.then2157 ], [ 1, %if.then2147 ], [ 1, %if.then2075 ], [ 1, %if.then2065 ], [ 1, %if.then1957 ], [ 1, %if.then1947 ], [ 1, %if.end4132 ], [ 1, %sw.bb4133 ], [ 0, %sw.default4326 ], [ 1, %if.then1620 ], [ 1, %if.end1617 ], [ 1, %if.end3800 ], [ 1, %if.end3631 ], [ 1, %if.end4073 ], [ 1, %if.end3958 ], [ 1, %if.end2650 ], [ 1, %if.end2957 ], [ 0, %do_no.preheader ], [ 0, %if.then4297 ], [ 1, %if.end1814 ], [ 1, %if.then1828 ], [ 1, %if.then1906 ], [ 1, %if.end1787 ]
  ret i32 %retval.0
}
