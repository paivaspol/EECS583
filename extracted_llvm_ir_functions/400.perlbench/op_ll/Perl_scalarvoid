define %struct.op* @Perl_scalarvoid(%struct.op* %o) #0 {
entry:
  %op_type = getelementptr inbounds %struct.op* %o, i64 0, i32 4
  %0 = load i16* %op_type, align 2, !tbaa !4
  switch i16 %0, label %if.end [
    i16 174, label %if.then
    i16 349, label %if.then
    i16 175, label %if.then
    i16 0, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %entry
  %op_targ = getelementptr inbounds %struct.op* %o, i64 0, i32 3
  %1 = load i64* %op_targ, align 8, !tbaa !5
  switch i64 %1, label %if.end [
    i64 174, label %if.then
    i64 349, label %if.then
    i64 175, label %if.then
  ]

if.then:                                          ; preds = %land.lhs.true, %land.lhs.true, %land.lhs.true, %entry, %entry, %entry
  %2 = bitcast %struct.op* %o to %struct.cop*
  store volatile %struct.cop* %2, %struct.cop** @PL_curcop, align 8, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %op_flags = getelementptr inbounds %struct.op* %o, i64 0, i32 6
  %3 = load i8* %op_flags, align 1, !tbaa !1
  %and = and i8 %3, 3
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %lor.lhs.false33, label %land.lhs.true29

land.lhs.true29:                                  ; preds = %if.end
  %cmp31 = icmp ne i8 %and, 2
  %4 = load i32* @PL_error_count, align 4, !tbaa !0
  %tobool34 = icmp ne i32 %4, 0
  %or.cond = or i1 %cmp31, %tobool34
  br i1 %or.cond, label %return, label %lor.lhs.false35

lor.lhs.false33:                                  ; preds = %if.end
  %.old = load i32* @PL_error_count, align 4, !tbaa !0
  %tobool34.old = icmp eq i32 %.old, 0
  br i1 %tobool34.old, label %lor.lhs.false35, label %return

lor.lhs.false35:                                  ; preds = %lor.lhs.false33, %land.lhs.true29
  %5 = load i16* %op_type, align 2, !tbaa !4
  %cmp38 = icmp eq i16 %5, 184
  br i1 %cmp38, label %return, label %if.end41

if.end41:                                         ; preds = %lor.lhs.false35
  %op_private = getelementptr inbounds %struct.op* %o, i64 0, i32 7
  %6 = load i8* %op_private, align 1, !tbaa !1
  %and43 = and i8 %6, 16
  %tobool44 = icmp eq i8 %and43, 0
  br i1 %tobool44, label %if.end50, label %land.lhs.true45

land.lhs.true45:                                  ; preds = %if.end41
  %idxprom = zext i16 %5 to i64
  %arrayidx = getelementptr inbounds [0 x i32]* @PL_opargs, i64 0, i64 %idxprom
  %7 = load i32* %arrayidx, align 4, !tbaa !0
  %and47 = and i32 %7, 256
  %tobool48 = icmp eq i32 %and47, 0
  br i1 %tobool48, label %if.end50, label %if.then49

if.then49:                                        ; preds = %land.lhs.true45
  %call = tail call %struct.op* @Perl_scalar(%struct.op* %o) #8
  br label %return

if.end50:                                         ; preds = %land.lhs.true45, %if.end41
  %and53 = and i8 %3, -4
  %or = or i8 %and53, 1
  store i8 %or, i8* %op_flags, align 1, !tbaa !1
  %conv57 = zext i16 %5 to i32
  switch i32 %conv57, label %sw.default [
    i32 61, label %sw.bb
    i32 111, label %sw.bb71
    i32 6, label %func_ops
    i32 4, label %func_ops
    i32 7, label %func_ops
    i32 9, label %func_ops
    i32 10, label %func_ops
    i32 11, label %func_ops
    i32 12, label %func_ops
    i32 16, label %func_ops
    i32 22, label %func_ops
    i32 20, label %func_ops
    i32 21, label %func_ops
    i32 42, label %func_ops
    i32 107, label %func_ops
    i32 108, label %func_ops
    i32 110, label %func_ops
    i32 112, label %func_ops
    i32 113, label %func_ops
    i32 114, label %func_ops
    i32 115, label %func_ops
    i32 127, label %func_ops
    i32 126, label %func_ops
    i32 128, label %func_ops
    i32 135, label %func_ops
    i32 136, label %func_ops
    i32 137, label %func_ops
    i32 138, label %func_ops
    i32 140, label %func_ops
    i32 142, label %func_ops
    i32 143, label %func_ops
    i32 144, label %func_ops
    i32 150, label %func_ops
    i32 151, label %func_ops
    i32 156, label %func_ops
    i32 157, label %func_ops
    i32 158, label %func_ops
    i32 169, label %func_ops
    i32 194, label %func_ops
    i32 216, label %func_ops
    i32 217, label %func_ops
    i32 232, label %func_ops
    i32 233, label %func_ops
    i32 272, label %func_ops
    i32 277, label %func_ops
    i32 287, label %func_ops
    i32 288, label %func_ops
    i32 290, label %func_ops
    i32 292, label %func_ops
    i32 293, label %func_ops
    i32 294, label %func_ops
    i32 295, label %func_ops
    i32 315, label %func_ops
    i32 316, label %func_ops
    i32 317, label %func_ops
    i32 318, label %func_ops
    i32 319, label %func_ops
    i32 320, label %func_ops
    i32 321, label %func_ops
    i32 322, label %func_ops
    i32 323, label %func_ops
    i32 324, label %func_ops
    i32 325, label %func_ops
    i32 326, label %func_ops
    i32 335, label %func_ops
    i32 336, label %func_ops
    i32 340, label %func_ops
    i32 341, label %func_ops
    i32 345, label %func_ops
    i32 19, label %func_ops
    i32 14, label %sw.bb93
    i32 15, label %sw.bb93
    i32 125, label %sw.bb93
    i32 134, label %sw.bb93
    i32 5, label %sw.bb108
    i32 50, label %sw.bb199
    i32 52, label %sw.bb201
    i32 160, label %sw.bb204
    i32 159, label %sw.bb204
    i32 162, label %sw.bb204
    i32 0, label %sw.bb209
    i32 174, label %sw.bb216
    i32 175, label %sw.bb216
    i32 313, label %sw.bb216
    i32 177, label %sw.bb216
    i32 179, label %sw.bb223
    i32 178, label %sw.bb223
    i32 314, label %sw.bb223
    i32 183, label %sw.bb223
    i32 173, label %sw.bb223
    i32 141, label %sw.bb223
    i32 311, label %sw.bb232
    i32 309, label %sw.bb234
    i32 2, label %sw.bb239
    i32 139, label %sw.bb241
  ]

sw.default:                                       ; preds = %if.end50
  %idxprom59 = zext i16 %5 to i64
  %arrayidx60 = getelementptr inbounds [0 x i32]* @PL_opargs, i64 0, i64 %idxprom59
  %8 = load i32* %arrayidx60, align 4, !tbaa !0
  %and61 = and i32 %8, 2
  %tobool62 = icmp eq i32 %and61, 0
  br i1 %tobool62, label %return, label %sw.bb

sw.bb:                                            ; preds = %sw.default, %if.end50
  %and67 = and i8 %3, 64
  %tobool68 = icmp eq i8 %and67, 0
  br i1 %tobool68, label %func_ops, label %return

sw.bb71:                                          ; preds = %if.end50
  %cmp74 = icmp eq i8 %6, 4
  br i1 %cmp74, label %return, label %func_ops

func_ops:                                         ; preds = %sw.bb, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %sw.bb71
  %and81 = and i8 %6, -112
  %tobool82 = icmp eq i8 %and81, 0
  br i1 %tobool82, label %if.then83, label %return

if.then83:                                        ; preds = %func_ops
  %cmp86 = icmp eq i16 %5, 351
  br i1 %cmp86, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then83
  %call88 = tail call i8* @Perl_custom_op_desc(%struct.op* %o) #8
  br label %sw.epilog

cond.false:                                       ; preds = %if.then83
  %idxprom90 = zext i16 %5 to i64
  %arrayidx91 = getelementptr inbounds [0 x i8*]* @PL_op_desc, i64 0, i64 %idxprom90
  %9 = load i8** %arrayidx91, align 8, !tbaa !3
  br label %sw.epilog

sw.bb93:                                          ; preds = %if.end50, %if.end50, %if.end50, %if.end50
  %and96 = and i8 %6, -112
  %tobool97 = icmp eq i8 %and96, 0
  br i1 %tobool97, label %land.lhs.true98, label %return

land.lhs.true98:                                  ; preds = %sw.bb93
  %op_sibling = getelementptr inbounds %struct.op* %o, i64 0, i32 1
  %10 = load %struct.op** %op_sibling, align 8, !tbaa !3
  %tobool99 = icmp eq %struct.op* %10, null
  br i1 %tobool99, label %land.lhs.true255, label %lor.lhs.false100

lor.lhs.false100:                                 ; preds = %land.lhs.true98
  %op_type102 = getelementptr inbounds %struct.op* %10, i64 0, i32 4
  %11 = load i16* %op_type102, align 2, !tbaa !4
  %cmp104 = icmp eq i16 %11, 26
  br i1 %cmp104, label %return, label %land.lhs.true255

sw.bb108:                                         ; preds = %if.end50
  %op_sv = getelementptr inbounds %struct.op* %o, i64 1
  %12 = bitcast %struct.op* %op_sv to %struct.sv**
  %13 = load %struct.sv** %12, align 8, !tbaa !3
  %and111 = and i8 %6, 8
  %tobool112 = icmp eq i8 %and111, 0
  br i1 %tobool112, label %if.else, label %if.then113

if.then113:                                       ; preds = %sw.bb108
  %call.i = tail call %struct.sv* (i8*, ...)* @Perl_mess(i8* getelementptr inbounds ([53 x i8]* @.str155, i64 0, i64 0), %struct.sv* %13) #7
  tail call void @Perl_qerror(%struct.sv* %call.i) #7
  br label %if.end198

if.else:                                          ; preds = %sw.bb108
  %14 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings = getelementptr inbounds %struct.cop* %14, i64 0, i32 14
  %15 = load %struct.sv** %cop_warnings, align 8, !tbaa !3
  %cmp114 = icmp eq %struct.sv* %15, null
  br i1 %cmp114, label %lor.lhs.false130, label %land.lhs.true116

land.lhs.true116:                                 ; preds = %if.else
  %16 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings117 = getelementptr inbounds %struct.cop* %16, i64 0, i32 14
  %17 = load %struct.sv** %cop_warnings117, align 8, !tbaa !3
  %cmp118 = icmp eq %struct.sv* %17, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp118, label %lor.lhs.false130, label %land.lhs.true120

land.lhs.true120:                                 ; preds = %land.lhs.true116
  %18 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings121 = getelementptr inbounds %struct.cop* %18, i64 0, i32 14
  %19 = load %struct.sv** %cop_warnings121, align 8, !tbaa !3
  %cmp122 = icmp eq %struct.sv* %19, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp122, label %if.then138, label %lor.lhs.false124

lor.lhs.false124:                                 ; preds = %land.lhs.true120
  %20 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings125 = getelementptr inbounds %struct.cop* %20, i64 0, i32 14
  %21 = load %struct.sv** %cop_warnings125, align 8, !tbaa !3
  %sv_any = getelementptr inbounds %struct.sv* %21, i64 0, i32 0
  %22 = load i8** %sv_any, align 8, !tbaa !3
  %xpv_pv = bitcast i8* %22 to i8**
  %23 = load i8** %xpv_pv, align 8, !tbaa !3
  %arrayidx126 = getelementptr inbounds i8* %23, i64 11
  %24 = load i8* %arrayidx126, align 1, !tbaa !1
  %and128 = and i8 %24, 4
  %tobool129 = icmp eq i8 %and128, 0
  br i1 %tobool129, label %lor.lhs.false130, label %if.then138

lor.lhs.false130:                                 ; preds = %lor.lhs.false124, %land.lhs.true116, %if.else
  %25 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings131 = getelementptr inbounds %struct.cop* %25, i64 0, i32 14
  %26 = load %struct.sv** %cop_warnings131, align 8, !tbaa !3
  %cmp132 = icmp eq %struct.sv* %26, null
  br i1 %cmp132, label %land.lhs.true134, label %if.end198

land.lhs.true134:                                 ; preds = %lor.lhs.false130
  %27 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and136 = and i8 %27, 1
  %tobool137 = icmp eq i8 %and136, 0
  br i1 %tobool137, label %if.end198, label %if.then138

if.then138:                                       ; preds = %lor.lhs.false124, %land.lhs.true134, %land.lhs.true120
  %28 = load i8* %op_private, align 1, !tbaa !1
  %and141 = and i8 %28, 4
  %tobool142 = icmp eq i8 %and141, 0
  br i1 %tobool142, label %if.else144, label %if.end198

if.else144:                                       ; preds = %if.then138
  %sv_flags = getelementptr inbounds %struct.sv* %13, i64 0, i32 2
  %29 = load i32* %sv_flags, align 4, !tbaa !0
  %and145 = and i32 %29, 196608
  %tobool146 = icmp eq i32 %and145, 0
  br i1 %tobool146, label %if.else173, label %land.lhs.true147

land.lhs.true147:                                 ; preds = %if.else144
  %and149 = and i32 %29, 131072
  %tobool150 = icmp eq i32 %and149, 0
  br i1 %tobool150, label %cond.false153, label %cond.true151

cond.true151:                                     ; preds = %land.lhs.true147
  %sv_any152 = getelementptr inbounds %struct.sv* %13, i64 0, i32 0
  %30 = load i8** %sv_any152, align 8, !tbaa !3
  %xnv_nv = getelementptr inbounds i8* %30, i64 32
  %31 = bitcast i8* %xnv_nv to double*
  %32 = load double* %31, align 8, !tbaa !6
  br label %cond.end155

cond.false153:                                    ; preds = %land.lhs.true147
  %call154 = tail call double @Perl_sv_2nv(%struct.sv* %13) #7
  br label %cond.end155

cond.end155:                                      ; preds = %cond.false153, %cond.true151
  %cond156 = phi double [ %32, %cond.true151 ], [ %call154, %cond.false153 ]
  %cmp157 = fcmp oeq double %cond156, 0.000000e+00
  br i1 %cmp157, label %if.end198, label %lor.lhs.false159

lor.lhs.false159:                                 ; preds = %cond.end155
  %33 = load i32* %sv_flags, align 4, !tbaa !0
  %and161 = and i32 %33, 131072
  %tobool162 = icmp eq i32 %and161, 0
  br i1 %tobool162, label %cond.false166, label %cond.true163

cond.true163:                                     ; preds = %lor.lhs.false159
  %sv_any164 = getelementptr inbounds %struct.sv* %13, i64 0, i32 0
  %34 = load i8** %sv_any164, align 8, !tbaa !3
  %xnv_nv165 = getelementptr inbounds i8* %34, i64 32
  %35 = bitcast i8* %xnv_nv165 to double*
  %36 = load double* %35, align 8, !tbaa !6
  br label %cond.end168

cond.false166:                                    ; preds = %lor.lhs.false159
  %call167 = tail call double @Perl_sv_2nv(%struct.sv* %13) #7
  br label %cond.end168

cond.end168:                                      ; preds = %cond.false166, %cond.true163
  %cond169 = phi double [ %36, %cond.true163 ], [ %call167, %cond.false166 ]
  %cmp170 = fcmp oeq double %cond169, 1.000000e+00
  br i1 %cmp170, label %if.end198, label %cond.end168.if.else173_crit_edge

cond.end168.if.else173_crit_edge:                 ; preds = %cond.end168
  %.pre = load i32* %sv_flags, align 4, !tbaa !0
  br label %if.else173

if.else173:                                       ; preds = %cond.end168.if.else173_crit_edge, %if.else144
  %37 = phi i32 [ %.pre, %cond.end168.if.else173_crit_edge ], [ %29, %if.else144 ]
  %and175 = and i32 %37, 262144
  %tobool176 = icmp eq i32 %and175, 0
  br i1 %tobool176, label %if.end198, label %if.then177

if.then177:                                       ; preds = %if.else173
  %sv_any178 = getelementptr inbounds %struct.sv* %13, i64 0, i32 0
  %38 = load i8** %sv_any178, align 8, !tbaa !3
  %xpv_pv179 = bitcast i8* %38 to i8**
  %39 = load i8** %xpv_pv179, align 8, !tbaa !3
  %call180 = tail call i32 @strncmp(i8* %39, i8* getelementptr inbounds ([3 x i8]* @.str10, i64 0, i64 0), i64 2) #7
  %tobool181 = icmp eq i32 %call180, 0
  br i1 %tobool181, label %if.then192, label %lor.lhs.false182

lor.lhs.false182:                                 ; preds = %if.then177
  %call185 = tail call i32 @strncmp(i8* %39, i8* getelementptr inbounds ([3 x i8]* @.str11, i64 0, i64 0), i64 2) #7
  %tobool186 = icmp eq i32 %call185, 0
  br i1 %tobool186, label %if.then192, label %lor.lhs.false187

lor.lhs.false187:                                 ; preds = %lor.lhs.false182
  %call190 = tail call i32 @strncmp(i8* %39, i8* getelementptr inbounds ([3 x i8]* @.str12, i64 0, i64 0), i64 2) #7
  %tobool191 = icmp eq i32 %call190, 0
  br i1 %tobool191, label %if.then192, label %if.end198

if.then192:                                       ; preds = %lor.lhs.false187, %lor.lhs.false182, %if.then177
  br label %if.end198

if.end198:                                        ; preds = %cond.end155, %cond.end168, %if.then138, %lor.lhs.false187, %if.else173, %land.lhs.true134, %lor.lhs.false130, %if.then192, %if.then113
  %useless.0 = phi i8* [ null, %if.then113 ], [ getelementptr inbounds ([11 x i8]* @.str9, i64 0, i64 0), %lor.lhs.false187 ], [ null, %if.then192 ], [ getelementptr inbounds ([11 x i8]* @.str9, i64 0, i64 0), %if.else173 ], [ null, %land.lhs.true134 ], [ null, %lor.lhs.false130 ], [ null, %if.then138 ], [ null, %cond.end168 ], [ null, %cond.end155 ]
  tail call void @Perl_op_null(%struct.op* %o) #8
  br label %sw.epilog

sw.bb199:                                         ; preds = %if.end50
  store i16 46, i16* %op_type, align 2, !tbaa !4
  %40 = load %struct.op* ()** getelementptr inbounds ([0 x %struct.op* ()*]* @PL_ppaddr, i64 0, i64 46), align 8, !tbaa !3
  %op_ppaddr = getelementptr inbounds %struct.op* %o, i64 0, i32 2
  store %struct.op* ()* %40, %struct.op* ()** %op_ppaddr, align 8, !tbaa !3
  br label %return

sw.bb201:                                         ; preds = %if.end50
  store i16 48, i16* %op_type, align 2, !tbaa !4
  %41 = load %struct.op* ()** getelementptr inbounds ([0 x %struct.op* ()*]* @PL_ppaddr, i64 0, i64 48), align 8, !tbaa !3
  %op_ppaddr203 = getelementptr inbounds %struct.op* %o, i64 0, i32 2
  store %struct.op* ()* %41, %struct.op* ()** %op_ppaddr203, align 8, !tbaa !3
  br label %return

sw.bb204:                                         ; preds = %if.end50, %if.end50, %if.end50
  %42 = getelementptr inbounds %struct.op* %o, i64 1, i32 0
  %43 = load %struct.op** %42, align 8, !tbaa !3
  %kid.0.in351 = getelementptr inbounds %struct.op* %43, i64 0, i32 1
  %kid.0352 = load %struct.op** %kid.0.in351, align 8
  %tobool206353 = icmp eq %struct.op* %kid.0352, null
  br i1 %tobool206353, label %return, label %for.body

for.body:                                         ; preds = %sw.bb204, %for.body
  %kid.0354 = phi %struct.op* [ %kid.0, %for.body ], [ %kid.0352, %sw.bb204 ]
  %call207 = tail call %struct.op* @Perl_scalarvoid(%struct.op* %kid.0354) #8
  %kid.0.in = getelementptr inbounds %struct.op* %kid.0354, i64 0, i32 1
  %kid.0 = load %struct.op** %kid.0.in, align 8
  %tobool206 = icmp eq %struct.op* %kid.0, null
  br i1 %tobool206, label %return, label %for.body

sw.bb209:                                         ; preds = %if.end50
  %44 = and i8 %3, 68
  %45 = icmp eq i8 %44, 4
  br i1 %45, label %sw.bb223, label %return

sw.bb216:                                         ; preds = %if.end50, %if.end50, %if.end50, %if.end50
  %.old359 = and i8 %3, 4
  %tobool220.old = icmp eq i8 %.old359, 0
  br i1 %tobool220.old, label %return, label %sw.bb223

sw.bb223:                                         ; preds = %sw.bb209, %sw.bb216, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50
  %46 = getelementptr inbounds %struct.op* %o, i64 1, i32 0
  %kid.1356 = load %struct.op** %46, align 8
  %tobool226357 = icmp eq %struct.op* %kid.1356, null
  br i1 %tobool226357, label %return, label %for.body227

for.body227:                                      ; preds = %sw.bb223, %for.body227
  %kid.1358 = phi %struct.op* [ %kid.1, %for.body227 ], [ %kid.1356, %sw.bb223 ]
  %call228 = tail call %struct.op* @Perl_scalarvoid(%struct.op* %kid.1358) #8
  %op_sibling230 = getelementptr inbounds %struct.op* %kid.1358, i64 0, i32 1
  %kid.1 = load %struct.op** %op_sibling230, align 8
  %tobool226 = icmp eq %struct.op* %kid.1, null
  br i1 %tobool226, label %return, label %for.body227

sw.bb232:                                         ; preds = %if.end50
  %call233 = tail call %struct.op* @Perl_scalarkids(%struct.op* %o) #8
  br label %return

sw.bb234:                                         ; preds = %if.end50
  store i8 %and53, i8* %op_flags, align 1, !tbaa !1
  br label %sw.bb239

sw.bb239:                                         ; preds = %if.end50, %sw.bb234
  %call240 = tail call %struct.op* @Perl_scalar(%struct.op* %o) #8
  br label %return

sw.bb241:                                         ; preds = %if.end50
  %47 = getelementptr inbounds %struct.op* %o, i64 1, i32 0
  %48 = load %struct.op** %47, align 8, !tbaa !3
  %tobool243 = icmp eq %struct.op* %48, null
  br i1 %tobool243, label %return, label %land.lhs.true244

land.lhs.true244:                                 ; preds = %sw.bb241
  %op_type245 = getelementptr inbounds %struct.op* %48, i64 0, i32 4
  %49 = load i16* %op_type245, align 2, !tbaa !4
  %cmp247 = icmp eq i16 %49, 13
  br i1 %cmp247, label %if.then249, label %return

if.then249:                                       ; preds = %land.lhs.true244
  %op_pmreplroot = getelementptr inbounds %struct.op* %48, i64 1, i32 2
  %50 = load %struct.op* ()** %op_pmreplroot, align 8
  %tobool250 = icmp eq %struct.op* ()* %50, null
  br i1 %tobool250, label %if.then251, label %return

if.then251:                                       ; preds = %if.then249
  tail call void @Perl_deprecate_old(i8* getelementptr inbounds ([21 x i8]* @.str6, i64 0, i64 0)) #7
  br label %return

sw.epilog:                                        ; preds = %cond.true, %cond.false, %if.end198
  %useless.1 = phi i8* [ %useless.0, %if.end198 ], [ %call88, %cond.true ], [ %9, %cond.false ]
  %tobool254 = icmp eq i8* %useless.1, null
  br i1 %tobool254, label %return, label %land.lhs.true255

land.lhs.true255:                                 ; preds = %lor.lhs.false100, %land.lhs.true98, %sw.epilog
  %useless.1350 = phi i8* [ %useless.1, %sw.epilog ], [ getelementptr inbounds ([11 x i8]* @.str8, i64 0, i64 0), %land.lhs.true98 ], [ getelementptr inbounds ([11 x i8]* @.str8, i64 0, i64 0), %lor.lhs.false100 ]
  %51 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings256 = getelementptr inbounds %struct.cop* %51, i64 0, i32 14
  %52 = load %struct.sv** %cop_warnings256, align 8, !tbaa !3
  %cmp257 = icmp eq %struct.sv* %52, null
  br i1 %cmp257, label %lor.lhs.false275, label %land.lhs.true259

land.lhs.true259:                                 ; preds = %land.lhs.true255
  %53 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings260 = getelementptr inbounds %struct.cop* %53, i64 0, i32 14
  %54 = load %struct.sv** %cop_warnings260, align 8, !tbaa !3
  %cmp261 = icmp eq %struct.sv* %54, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp261, label %lor.lhs.false275, label %land.lhs.true263

land.lhs.true263:                                 ; preds = %land.lhs.true259
  %55 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings264 = getelementptr inbounds %struct.cop* %55, i64 0, i32 14
  %56 = load %struct.sv** %cop_warnings264, align 8, !tbaa !3
  %cmp265 = icmp eq %struct.sv* %56, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp265, label %if.then283, label %lor.lhs.false267

lor.lhs.false267:                                 ; preds = %land.lhs.true263
  %57 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings268 = getelementptr inbounds %struct.cop* %57, i64 0, i32 14
  %58 = load %struct.sv** %cop_warnings268, align 8, !tbaa !3
  %sv_any269 = getelementptr inbounds %struct.sv* %58, i64 0, i32 0
  %59 = load i8** %sv_any269, align 8, !tbaa !3
  %xpv_pv270 = bitcast i8* %59 to i8**
  %60 = load i8** %xpv_pv270, align 8, !tbaa !3
  %arrayidx271 = getelementptr inbounds i8* %60, i64 11
  %61 = load i8* %arrayidx271, align 1, !tbaa !1
  %and273 = and i8 %61, 4
  %tobool274 = icmp eq i8 %and273, 0
  br i1 %tobool274, label %lor.lhs.false275, label %if.then283

lor.lhs.false275:                                 ; preds = %lor.lhs.false267, %land.lhs.true259, %land.lhs.true255
  %62 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings276 = getelementptr inbounds %struct.cop* %62, i64 0, i32 14
  %63 = load %struct.sv** %cop_warnings276, align 8, !tbaa !3
  %cmp277 = icmp eq %struct.sv* %63, null
  br i1 %cmp277, label %land.lhs.true279, label %return

land.lhs.true279:                                 ; preds = %lor.lhs.false275
  %64 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and281 = and i8 %64, 1
  %tobool282 = icmp eq i8 %and281, 0
  br i1 %tobool282, label %return, label %if.then283

if.then283:                                       ; preds = %lor.lhs.false267, %land.lhs.true279, %land.lhs.true263
  tail call void (i32, i8*, ...)* @Perl_warner(i32 45, i8* getelementptr inbounds ([34 x i8]* @.str13, i64 0, i64 0), i8* %useless.1350) #7
  br label %return

return:                                           ; preds = %sw.bb209, %sw.bb223, %for.body227, %sw.bb204, %for.body, %sw.bb71, %lor.lhs.false100, %sw.bb93, %sw.bb199, %sw.bb201, %sw.bb216, %sw.bb232, %sw.bb241, %land.lhs.true244, %if.then251, %if.then249, %sw.default, %func_ops, %sw.bb, %lor.lhs.false275, %if.then283, %sw.epilog, %land.lhs.true279, %land.lhs.true29, %lor.lhs.false35, %lor.lhs.false33, %sw.bb239, %if.then49
  %retval.0 = phi %struct.op* [ %call, %if.then49 ], [ %call240, %sw.bb239 ], [ %o, %lor.lhs.false33 ], [ %o, %lor.lhs.false35 ], [ %o, %land.lhs.true29 ], [ %o, %land.lhs.true279 ], [ %o, %sw.epilog ], [ %o, %if.then283 ], [ %o, %lor.lhs.false275 ], [ %o, %sw.bb ], [ %o, %func_ops ], [ %o, %sw.default ], [ %o, %if.then249 ], [ %o, %if.then251 ], [ %o, %land.lhs.true244 ], [ %o, %sw.bb241 ], [ %o, %sw.bb232 ], [ %o, %sw.bb216 ], [ %o, %sw.bb209 ], [ %o, %sw.bb201 ], [ %o, %sw.bb199 ], [ %o, %sw.bb93 ], [ %o, %lor.lhs.false100 ], [ %o, %sw.bb71 ], [ %o, %for.body ], [ %o, %sw.bb204 ], [ %o, %for.body227 ], [ %o, %sw.bb223 ]
  ret %struct.op* %retval.0
}
