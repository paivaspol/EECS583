define %struct.op* @Perl_ck_substr(%struct.op* %o) #0 {
entry:
  %call = tail call %struct.op* @Perl_ck_fun(%struct.op* %o) #8
  %op_flags = getelementptr inbounds %struct.op* %call, i64 0, i32 6
  %0 = load i8* %op_flags, align 1, !tbaa !1
  %and = and i8 %0, 4
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %if.end13, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %op_private = getelementptr inbounds %struct.op* %call, i64 0, i32 7
  %1 = load i8* %op_private, align 1, !tbaa !1
  %cmp = icmp eq i8 %1, 4
  br i1 %cmp, label %if.then, label %if.end13

if.then:                                          ; preds = %land.lhs.true
  %2 = getelementptr inbounds %struct.op* %call, i64 1, i32 0
  %3 = load %struct.op** %2, align 8, !tbaa !3
  %op_type = getelementptr inbounds %struct.op* %3, i64 0, i32 4
  %4 = load i16* %op_type, align 2, !tbaa !4
  %cmp4 = icmp eq i16 %4, 0
  br i1 %cmp4, label %if.then6, label %if.end

if.then6:                                         ; preds = %if.then
  %op_sibling = getelementptr inbounds %struct.op* %3, i64 0, i32 1
  %5 = load %struct.op** %op_sibling, align 8, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %if.then6, %if.then
  %kid.0 = phi %struct.op* [ %5, %if.then6 ], [ %3, %if.then ]
  %tobool7 = icmp eq %struct.op* %kid.0, null
  br i1 %tobool7, label %if.end13, label %if.then8

if.then8:                                         ; preds = %if.end
  %op_flags9 = getelementptr inbounds %struct.op* %kid.0, i64 0, i32 6
  %6 = load i8* %op_flags9, align 1, !tbaa !1
  %or = or i8 %6, 32
  store i8 %or, i8* %op_flags9, align 1, !tbaa !1
  br label %if.end13

if.end13:                                         ; preds = %if.end, %entry, %if.then8, %land.lhs.true
  ret %struct.op* %call
}
