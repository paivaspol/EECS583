define %struct.op* @Perl_ck_sassign(%struct.op* %o) #0 {
entry:
  %0 = getelementptr inbounds %struct.op* %o, i64 1, i32 0
  %1 = load %struct.op** %0, align 8, !tbaa !3
  %op_type = getelementptr inbounds %struct.op* %1, i64 0, i32 4
  %2 = load i16* %op_type, align 2, !tbaa !4
  %idxprom = zext i16 %2 to i64
  %arrayidx = getelementptr inbounds [0 x i32]* @PL_opargs, i64 0, i64 %idxprom
  %3 = load i32* %arrayidx, align 4, !tbaa !0
  %and = and i32 %3, 256
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end26, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %op_flags = getelementptr inbounds %struct.op* %1, i64 0, i32 6
  %4 = load i8* %op_flags, align 1, !tbaa !1
  %and1 = and i8 %4, 64
  %tobool2 = icmp eq i8 %and1, 0
  br i1 %tobool2, label %land.lhs.true3, label %if.end26

land.lhs.true3:                                   ; preds = %land.lhs.true
  %op_private = getelementptr inbounds %struct.op* %1, i64 0, i32 7
  %5 = load i8* %op_private, align 1, !tbaa !1
  %and5 = and i8 %5, 16
  %tobool6 = icmp eq i8 %and5, 0
  br i1 %tobool6, label %if.then, label %if.end26

if.then:                                          ; preds = %land.lhs.true3
  %op_sibling = getelementptr inbounds %struct.op* %1, i64 0, i32 1
  %6 = load %struct.op** %op_sibling, align 8, !tbaa !3
  %tobool7 = icmp eq %struct.op* %6, null
  br i1 %tobool7, label %if.end26, label %land.lhs.true8

land.lhs.true8:                                   ; preds = %if.then
  %op_type9 = getelementptr inbounds %struct.op* %6, i64 0, i32 4
  %7 = load i16* %op_type9, align 2, !tbaa !4
  %cmp = icmp eq i16 %7, 9
  br i1 %cmp, label %land.lhs.true12, label %if.end26

land.lhs.true12:                                  ; preds = %land.lhs.true8
  %op_private13 = getelementptr inbounds %struct.op* %6, i64 0, i32 7
  %8 = load i8* %op_private13, align 1, !tbaa !1
  %tobool16 = icmp slt i8 %8, 0
  br i1 %tobool16, label %if.end26, label %if.then17

if.then17:                                        ; preds = %land.lhs.true12
  %op_targ = getelementptr inbounds %struct.op* %6, i64 0, i32 3
  %9 = load i64* %op_targ, align 8, !tbaa !5
  %op_targ18 = getelementptr inbounds %struct.op* %1, i64 0, i32 3
  store i64 %9, i64* %op_targ18, align 8, !tbaa !5
  store i64 0, i64* %op_targ, align 8, !tbaa !5
  %op_sibling20 = getelementptr inbounds %struct.op* %o, i64 0, i32 1
  %10 = load %struct.op** %op_sibling20, align 8, !tbaa !3
  store %struct.op* %10, %struct.op** %op_sibling, align 8, !tbaa !3
  store %struct.op* null, %struct.op** %0, align 8, !tbaa !3
  tail call void @Perl_op_free(%struct.op* %o) #8
  tail call void @Perl_op_free(%struct.op* %6) #8
  %11 = load i8* %op_private, align 1, !tbaa !1
  %or = or i8 %11, 16
  store i8 %or, i8* %op_private, align 1, !tbaa !1
  br label %return

if.end26:                                         ; preds = %if.then, %land.lhs.true3, %land.lhs.true, %entry, %land.lhs.true8, %land.lhs.true12
  %cmp29 = icmp eq i16 %2, 43
  br i1 %cmp29, label %if.then31, label %return

if.then31:                                        ; preds = %if.end26
  %op_sibling33 = getelementptr inbounds %struct.op* %1, i64 0, i32 1
  %12 = load %struct.op** %op_sibling33, align 8, !tbaa !3
  %tobool34 = icmp eq %struct.op* %12, null
  br i1 %tobool34, label %return, label %land.lhs.true35

land.lhs.true35:                                  ; preds = %if.then31
  %op_type36 = getelementptr inbounds %struct.op* %12, i64 0, i32 4
  %13 = load i16* %op_type36, align 2, !tbaa !4
  %cmp38 = icmp eq i16 %13, 9
  br i1 %cmp38, label %land.lhs.true40, label %return

land.lhs.true40:                                  ; preds = %land.lhs.true35
  %op_private41 = getelementptr inbounds %struct.op* %12, i64 0, i32 7
  %14 = load i8* %op_private41, align 1, !tbaa !1
  %tobool44 = icmp slt i8 %14, 0
  br i1 %tobool44, label %if.then45, label %return

if.then45:                                        ; preds = %land.lhs.true40
  store %struct.op* null, %struct.op** %0, align 8, !tbaa !3
  store %struct.op* null, %struct.op** %op_sibling33, align 8, !tbaa !3
  tail call void @Perl_op_free(%struct.op* %o) #8
  tail call void @Perl_op_free(%struct.op* %1) #8
  br label %return

return:                                           ; preds = %if.end26, %land.lhs.true40, %land.lhs.true35, %if.then31, %if.then45, %if.then17
  %retval.0 = phi %struct.op* [ %12, %if.then45 ], [ %1, %if.then17 ], [ %o, %if.then31 ], [ %o, %land.lhs.true35 ], [ %o, %land.lhs.true40 ], [ %o, %if.end26 ]
  ret %struct.op* %retval.0
}
