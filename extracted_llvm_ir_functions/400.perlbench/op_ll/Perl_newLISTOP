define %struct.op* @Perl_newLISTOP(i32 %type, i32 %flags, %struct.op* %first, %struct.op* %last) #0 {
entry:
  %call = tail call i8* @Perl_safesysmalloc(i64 56) #7
  tail call void @llvm.memset.p0i8.i64(i8* %call, i8 0, i64 56, i32 1, i1 false)
  %conv = trunc i32 %type to i16
  %op_type = getelementptr inbounds i8* %call, i64 32
  %0 = bitcast i8* %op_type to i16*
  store i16 %conv, i16* %0, align 2, !tbaa !4
  %idxprom = sext i32 %type to i64
  %arrayidx = getelementptr inbounds [0 x %struct.op* ()*]* @PL_ppaddr, i64 0, i64 %idxprom
  %1 = load %struct.op* ()** %arrayidx, align 8, !tbaa !3
  %op_ppaddr = getelementptr inbounds i8* %call, i64 16
  %2 = bitcast i8* %op_ppaddr to %struct.op* ()**
  store %struct.op* ()* %1, %struct.op* ()** %2, align 8, !tbaa !3
  %tobool.not = icmp eq %struct.op* %first, null
  %tobool1 = icmp eq %struct.op* %last, null
  %or.cond = and i1 %tobool1, %tobool.not
  %or = or i32 %flags, 4
  %flags.addr.0 = select i1 %or.cond, i32 %flags, i32 %or
  %conv2 = trunc i32 %flags.addr.0 to i8
  %3 = getelementptr inbounds i8* %call, i64 36
  store i8 %conv2, i8* %3, align 1, !tbaa !1
  %tobool3 = icmp ne %struct.op* %last, null
  %brmerge = or i1 %tobool3, %tobool.not
  br i1 %brmerge, label %if.else, label %if.end15

if.else:                                          ; preds = %entry
  %brmerge73.not = and i1 %tobool3, %tobool.not
  %last.mux = select i1 %brmerge73.not, %struct.op* %last, %struct.op* %first
  br i1 %tobool.not, label %if.end15, label %if.then12

if.then12:                                        ; preds = %if.else
  %op_sibling = getelementptr inbounds %struct.op* %first, i64 0, i32 1
  store %struct.op* %last, %struct.op** %op_sibling, align 8, !tbaa !3
  br label %if.end15

if.end15:                                         ; preds = %if.else, %entry, %if.then12
  %last.addr.0 = phi %struct.op* [ %last, %if.then12 ], [ %first, %entry ], [ %last, %if.else ]
  %first.addr.0 = phi %struct.op* [ %first, %if.then12 ], [ %first, %entry ], [ %last.mux, %if.else ]
  %op_first = getelementptr inbounds i8* %call, i64 40
  %4 = bitcast i8* %op_first to %struct.op**
  store %struct.op* %first.addr.0, %struct.op** %4, align 8, !tbaa !3
  %op_last = getelementptr inbounds i8* %call, i64 48
  %5 = bitcast i8* %op_last to %struct.op**
  store %struct.op* %last.addr.0, %struct.op** %5, align 8, !tbaa !3
  %cmp = icmp eq i32 %type, 141
  br i1 %cmp, label %if.then17, label %if.end29

if.then17:                                        ; preds = %if.end15
  %call18 = tail call %struct.op* @Perl_newOP(i32 3, i32 0) #8
  %op_sibling19 = getelementptr inbounds %struct.op* %call18, i64 0, i32 1
  store %struct.op* %first.addr.0, %struct.op** %op_sibling19, align 8, !tbaa !3
  store %struct.op* %call18, %struct.op** %4, align 8, !tbaa !3
  %6 = load i8* %3, align 1, !tbaa !1
  %or23 = or i8 %6, 4
  store i8 %or23, i8* %3, align 1, !tbaa !1
  %tobool25 = icmp eq %struct.op* %last.addr.0, null
  br i1 %tobool25, label %if.then26, label %if.end29

if.then26:                                        ; preds = %if.then17
  store %struct.op* %call18, %struct.op** %5, align 8, !tbaa !3
  br label %if.end29

if.end29:                                         ; preds = %if.then17, %if.then26, %if.end15
  %7 = load i8** @PL_op_mask, align 8, !tbaa !3
  %tobool30 = icmp eq i8* %7, null
  br i1 %tobool30, label %cond.false, label %land.lhs.true31

land.lhs.true31:                                  ; preds = %if.end29
  %arrayidx33 = getelementptr inbounds i8* %7, i64 %idxprom
  %8 = load i8* %arrayidx33, align 1, !tbaa !1
  %tobool35 = icmp eq i8 %8, 0
  br i1 %tobool35, label %cond.false, label %cond.true

cond.true:                                        ; preds = %land.lhs.true31
  %9 = bitcast i8* %call to %struct.op*
  tail call void @Perl_op_free(%struct.op* %9) #8
  %arrayidx37 = getelementptr inbounds [0 x i8*]* @PL_op_desc, i64 0, i64 %idxprom
  %10 = load i8** %arrayidx37, align 8, !tbaa !3
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([31 x i8]* @.str33, i64 0, i64 0), i8* %10) #7
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true31, %if.end29
  %arrayidx39 = getelementptr inbounds [0 x %struct.op* (%struct.op*)*]* @PL_check, i64 0, i64 %idxprom
  %11 = load %struct.op* (%struct.op*)** %arrayidx39, align 8, !tbaa !3
  %12 = bitcast i8* %call to %struct.op*
  %call40 = tail call %struct.op* %11(%struct.op* %12) #7
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.op* [ null, %cond.true ], [ %call40, %cond.false ]
  ret %struct.op* %cond
}
