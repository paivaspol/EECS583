define %struct.op* @Perl_newWHILEOP(i32 %flags, i32 %debuggable, %struct.loop* %loop, i32 %whileline, %struct.op* %expr, %struct.op* %block, %struct.op* %cont) #0 {
entry:
  %expr.addr = alloca %struct.op*, align 8
  %listop = alloca %struct.op*, align 8
  store %struct.op* %expr, %struct.op** %expr.addr, align 8, !tbaa !3
  %tobool = icmp eq %struct.op* %expr, null
  br i1 %tobool, label %if.end71, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %op_type = getelementptr inbounds %struct.op* %expr, i64 0, i32 4
  %0 = load i16* %op_type, align 2, !tbaa !4
  switch i16 %0, label %land.lhs.true17 [
    i16 26, label %if.then
    i16 25, label %if.then
    i16 0, label %land.lhs.true11
  ]

land.lhs.true11:                                  ; preds = %land.lhs.true
  %op_targ = getelementptr inbounds %struct.op* %expr, i64 0, i32 3
  %1 = load i64* %op_targ, align 8, !tbaa !5
  %cmp12 = icmp eq i64 %1, 25
  br i1 %cmp12, label %if.then, label %land.lhs.true17

if.then:                                          ; preds = %land.lhs.true, %land.lhs.true, %land.lhs.true11
  %2 = load %struct.gv** @PL_defgv, align 8, !tbaa !3
  %3 = bitcast %struct.gv* %2 to %struct.sv*
  store %struct.sv* %3, %struct.sv** @PL_Sv, align 8, !tbaa !3
  %tobool.i = icmp eq %struct.gv* %2, null
  br i1 %tobool.i, label %Perl_newGVOP.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.then
  %4 = getelementptr inbounds %struct.gv* %2, i64 0, i32 1
  %5 = load i32* %4, align 4, !tbaa !0
  %inc.i = add i32 %5, 1
  store i32 %inc.i, i32* %4, align 4, !tbaa !0
  br label %Perl_newGVOP.exit

Perl_newGVOP.exit:                                ; preds = %if.then, %land.rhs.i
  %call.i262 = call %struct.op* @Perl_newSVOP(i32 7, i32 0, %struct.sv* %3) #7
  %call1.i = call %struct.op* @Perl_newSVREF(%struct.op* %call.i262) #7
  %call14 = call %struct.op* @Perl_newASSIGNOP(i32 0, %struct.op* %call1.i, i32 0, %struct.op* %expr) #8
  %call15 = call %struct.op* @Perl_newUNOP(i32 42, i32 0, %struct.op* %call14) #8
  store %struct.op* %call15, %struct.op** %expr.addr, align 8, !tbaa !3
  br label %if.end71

land.lhs.true17:                                  ; preds = %land.lhs.true11, %land.lhs.true
  %op_flags = getelementptr inbounds %struct.op* %expr, i64 0, i32 6
  %6 = load i8* %op_flags, align 1, !tbaa !1
  %and = and i8 %6, 4
  %tobool19 = icmp eq i8 %and, 0
  br i1 %tobool19, label %if.end71, label %if.then20

if.then20:                                        ; preds = %land.lhs.true17
  %7 = getelementptr inbounds %struct.op* %expr, i64 1, i32 0
  %8 = load %struct.op** %7, align 8, !tbaa !3
  %tobool21 = icmp eq %struct.op* %8, null
  br i1 %tobool21, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.then20
  %op_sibling = getelementptr inbounds %struct.op* %8, i64 0, i32 1
  %9 = load %struct.op** %op_sibling, align 8, !tbaa !3
  br label %cond.end

cond.end:                                         ; preds = %if.then20, %cond.true
  %cond = phi %struct.op* [ %9, %cond.true ], [ null, %if.then20 ]
  %conv23 = zext i16 %0 to i32
  switch i32 %conv23, label %if.end71 [
    i32 0, label %sw.bb
    i32 36, label %sw.bb43
  ]

sw.bb:                                            ; preds = %cond.end
  %tobool24 = icmp eq %struct.op* %cond, null
  br i1 %tobool24, label %if.end71, label %land.lhs.true25

land.lhs.true25:                                  ; preds = %sw.bb
  %op_type26 = getelementptr inbounds %struct.op* %cond, i64 0, i32 4
  %10 = load i16* %op_type26, align 2, !tbaa !4
  %cmp28 = icmp eq i16 %10, 26
  br i1 %cmp28, label %land.lhs.true30, label %if.end71

land.lhs.true30:                                  ; preds = %land.lhs.true25
  %op_flags31 = getelementptr inbounds %struct.op* %cond, i64 0, i32 6
  %11 = load i8* %op_flags31, align 1, !tbaa !1
  %and33 = and i8 %11, 64
  %tobool34 = icmp eq i8 %and33, 0
  br i1 %tobool34, label %if.end71, label %land.lhs.true35

land.lhs.true35:                                  ; preds = %land.lhs.true30
  %op_flags36 = getelementptr inbounds %struct.op* %8, i64 0, i32 6
  %12 = load i8* %op_flags36, align 1, !tbaa !1
  %and38 = and i8 %12, 3
  %cmp39 = icmp eq i8 %and38, 2
  br i1 %cmp39, label %if.then41, label %if.end71

if.then41:                                        ; preds = %land.lhs.true35
  %call42 = call %struct.op* @Perl_newUNOP(i32 42, i32 0, %struct.op* %expr) #8
  store %struct.op* %call42, %struct.op** %expr.addr, align 8, !tbaa !3
  br label %if.end71

sw.bb43:                                          ; preds = %cond.end
  %op_type44 = getelementptr inbounds %struct.op* %8, i64 0, i32 4
  %13 = load i16* %op_type44, align 2, !tbaa !4
  switch i16 %13, label %if.end71 [
    i16 276, label %if.then67
    i16 25, label %if.then67
    i16 0, label %land.lhs.true58
    i16 129, label %if.then67
  ]

land.lhs.true58:                                  ; preds = %sw.bb43
  %op_targ59 = getelementptr inbounds %struct.op* %8, i64 0, i32 3
  %14 = load i64* %op_targ59, align 8, !tbaa !5
  %cmp60 = icmp eq i64 %14, 25
  br i1 %cmp60, label %if.then67, label %if.end71

if.then67:                                        ; preds = %sw.bb43, %sw.bb43, %sw.bb43, %land.lhs.true58
  %call68 = call %struct.op* @Perl_newUNOP(i32 42, i32 0, %struct.op* %expr) #8
  store %struct.op* %call68, %struct.op** %expr.addr, align 8, !tbaa !3
  br label %if.end71

if.end71:                                         ; preds = %sw.bb43, %land.lhs.true58, %entry, %land.lhs.true30, %sw.bb, %land.lhs.true17, %if.then67, %land.lhs.true25, %land.lhs.true35, %if.then41, %cond.end, %Perl_newGVOP.exit
  %15 = phi %struct.op* [ null, %entry ], [ %expr, %land.lhs.true30 ], [ %expr, %sw.bb ], [ %expr, %land.lhs.true17 ], [ %call68, %if.then67 ], [ %expr, %land.lhs.true25 ], [ %expr, %land.lhs.true35 ], [ %call42, %if.then41 ], [ %expr, %cond.end ], [ %call15, %Perl_newGVOP.exit ], [ %expr, %land.lhs.true58 ], [ %expr, %sw.bb43 ]
  %tobool72 = icmp eq %struct.op* %block, null
  br i1 %tobool72, label %if.end80, label %if.else75

if.else75:                                        ; preds = %if.end71
  %tobool76 = icmp eq %struct.op* %cont, null
  br i1 %tobool76, label %if.end90, label %if.end80.thread267

if.end80.thread267:                               ; preds = %if.else75
  %call78 = call %struct.op* @Perl_scope(%struct.op* %block) #8
  br label %if.then82

if.end80:                                         ; preds = %if.end71
  %call74 = call %struct.op* @Perl_newOP(i32 0, i32 0) #8
  %tobool81 = icmp eq %struct.op* %cont, null
  br i1 %tobool81, label %if.end90, label %if.then82

if.then82:                                        ; preds = %if.end80.thread267, %if.end80
  %block.addr.0269 = phi %struct.op* [ %call78, %if.end80.thread267 ], [ %call74, %if.end80 ]
  %op_next = getelementptr inbounds %struct.op* %cont, i64 0, i32 0
  %16 = load %struct.op** %op_next, align 8, !tbaa !3
  %tobool83 = icmp eq %struct.op* %16, null
  br i1 %tobool83, label %cond.false86, label %if.end90

cond.false86:                                     ; preds = %if.then82
  %call87 = call %struct.op* @Perl_linklist(%struct.op* %cont) #8
  br label %if.end90

if.end90:                                         ; preds = %if.else75, %cond.false86, %if.then82, %if.end80
  %block.addr.0266 = phi %struct.op* [ %call74, %if.end80 ], [ %block.addr.0269, %cond.false86 ], [ %block.addr.0269, %if.then82 ], [ %block, %if.else75 ]
  %next.0 = phi %struct.op* [ null, %if.end80 ], [ %call87, %cond.false86 ], [ %16, %if.then82 ], [ null, %if.else75 ]
  %tobool91 = icmp eq %struct.op* %15, null
  br i1 %tobool91, label %if.end98, label %if.then92

if.then92:                                        ; preds = %if.end90
  %call93 = call %struct.op* @Perl_newOP(i32 176, i32 0) #8
  %tobool94 = icmp eq %struct.op* %next.0, null
  %call93.next.0 = select i1 %tobool94, %struct.op* %call93, %struct.op* %next.0
  %call97 = call %struct.op* @Perl_append_elem(i32 173, %struct.op* %cont, %struct.op* %call93) #8
  br label %if.end98

if.end98:                                         ; preds = %if.end90, %if.then92
  %next.2 = phi %struct.op* [ %call93.next.0, %if.then92 ], [ %next.0, %if.end90 ]
  %cont.addr.0 = phi %struct.op* [ %call97, %if.then92 ], [ %cont, %if.end90 ]
  %17 = bitcast %struct.op* %block.addr.0266 to %struct.listop*
  %18 = bitcast %struct.op* %cont.addr.0 to %struct.listop*
  %call99 = call %struct.op* @Perl_append_list(i32 173, %struct.listop* %17, %struct.listop* %18) #8
  store %struct.op* %call99, %struct.op** %listop, align 8, !tbaa !3
  %op_next100 = getelementptr inbounds %struct.op* %call99, i64 0, i32 0
  %19 = load %struct.op** %op_next100, align 8, !tbaa !3
  %tobool101 = icmp eq %struct.op* %19, null
  br i1 %tobool101, label %cond.false104, label %cond.end106

cond.false104:                                    ; preds = %if.end98
  %call105 = call %struct.op* @Perl_linklist(%struct.op* %call99) #8
  br label %cond.end106

cond.end106:                                      ; preds = %if.end98, %cond.false104
  %cond107 = phi %struct.op* [ %call105, %cond.false104 ], [ %19, %if.end98 ]
  br i1 %tobool91, label %if.end187, label %if.then109

if.then109:                                       ; preds = %cond.end106
  store i32 %whileline, i32* @PL_copline, align 4, !tbaa !0
  %call110 = call %struct.op* @Perl_scalar(%struct.op* %call99) #8
  %call111 = call fastcc %struct.op* @S_new_logop(i32 159, i32 0, %struct.op** %expr.addr, %struct.op** %listop) #8
  %20 = load %struct.op** %expr.addr, align 8, !tbaa !3
  %cmp112 = icmp eq %struct.op* %call111, %20
  br i1 %cmp112, label %land.lhs.true114, label %if.end167

land.lhs.true114:                                 ; preds = %if.then109
  %op_type115 = getelementptr inbounds %struct.op* %call111, i64 0, i32 4
  %21 = load i16* %op_type115, align 2, !tbaa !4
  %cmp117 = icmp eq i16 %21, 5
  br i1 %cmp117, label %land.lhs.true119, label %if.end167

land.lhs.true119:                                 ; preds = %land.lhs.true114
  %op_sv = getelementptr inbounds %struct.op* %call111, i64 1
  %22 = bitcast %struct.op* %op_sv to %struct.sv**
  %23 = load %struct.sv** %22, align 8, !tbaa !3
  %tobool120 = icmp eq %struct.sv* %23, null
  br i1 %tobool120, label %if.then166, label %cond.false122

cond.false122:                                    ; preds = %land.lhs.true119
  %sv_flags = getelementptr inbounds %struct.sv* %23, i64 0, i32 2
  %24 = load i32* %sv_flags, align 4, !tbaa !0
  %and124 = and i32 %24, 262144
  %tobool125 = icmp eq i32 %and124, 0
  br i1 %tobool125, label %cond.false141, label %cond.true126

cond.true126:                                     ; preds = %cond.false122
  %sv_any = getelementptr inbounds %struct.sv* %23, i64 0, i32 0
  %25 = load i8** %sv_any, align 8, !tbaa !3
  %26 = bitcast i8* %25 to %struct.xpv*
  store %struct.xpv* %26, %struct.xpv** @PL_Xpv, align 8, !tbaa !3
  %tobool128 = icmp eq i8* %25, null
  br i1 %tobool128, label %if.then166, label %land.lhs.true129

land.lhs.true129:                                 ; preds = %cond.true126
  %xpv_cur = getelementptr inbounds i8* %25, i64 8
  %27 = bitcast i8* %xpv_cur to i64*
  %28 = load i64* %27, align 8, !tbaa !5
  %cmp130 = icmp ugt i64 %28, 1
  br i1 %cmp130, label %if.end167, label %lor.lhs.false132

lor.lhs.false132:                                 ; preds = %land.lhs.true129
  %tobool134 = icmp eq i64 %28, 0
  br i1 %tobool134, label %if.then166, label %land.lhs.true135

land.lhs.true135:                                 ; preds = %lor.lhs.false132
  %xpv_pv = bitcast i8* %25 to i8**
  %29 = load i8** %xpv_pv, align 8, !tbaa !3
  %30 = load i8* %29, align 1, !tbaa !1
  %cmp137 = icmp eq i8 %30, 48
  br i1 %cmp137, label %if.then166, label %if.end167

cond.false141:                                    ; preds = %cond.false122
  %and144 = and i32 %24, 65536
  %tobool145 = icmp eq i32 %and144, 0
  br i1 %tobool145, label %cond.false151, label %cond.true146

cond.true146:                                     ; preds = %cond.false141
  %sv_any148 = getelementptr inbounds %struct.sv* %23, i64 0, i32 0
  %31 = load i8** %sv_any148, align 8, !tbaa !3
  %xiv_iv = getelementptr inbounds i8* %31, i64 24
  %32 = bitcast i8* %xiv_iv to i64*
  %33 = load i64* %32, align 8, !tbaa !5
  %cmp149 = icmp eq i64 %33, 0
  br i1 %cmp149, label %if.then166, label %if.end167

cond.false151:                                    ; preds = %cond.false141
  %and154 = and i32 %24, 131072
  %tobool155 = icmp eq i32 %and154, 0
  br i1 %tobool155, label %cond.false161, label %cond.true156

cond.true156:                                     ; preds = %cond.false151
  %sv_any158 = getelementptr inbounds %struct.sv* %23, i64 0, i32 0
  %34 = load i8** %sv_any158, align 8, !tbaa !3
  %xnv_nv = getelementptr inbounds i8* %34, i64 32
  %35 = bitcast i8* %xnv_nv to double*
  %36 = load double* %35, align 8, !tbaa !6
  %cmp159 = fcmp une double %36, 0.000000e+00
  br i1 %cmp159, label %if.end167, label %if.then166

cond.false161:                                    ; preds = %cond.false151
  %call163 = call signext i8 @Perl_sv_2bool(%struct.sv* %23) #7
  %tobool165 = icmp eq i8 %call163, 0
  br i1 %tobool165, label %if.then166, label %if.end167

if.then166:                                       ; preds = %land.lhs.true135, %lor.lhs.false132, %cond.true126, %cond.true146, %cond.false161, %land.lhs.true119, %cond.true156
  call void @Perl_op_free(%struct.op* %call111) #8
  %37 = bitcast %struct.loop* %loop to %struct.op*
  call void @Perl_op_free(%struct.op* %37) #8
  br label %return

if.end167:                                        ; preds = %land.lhs.true135, %cond.true146, %cond.false161, %land.lhs.true129, %cond.true156, %land.lhs.true114, %if.then109
  %38 = load %struct.op** %listop, align 8, !tbaa !3
  %tobool168 = icmp eq %struct.op* %38, null
  br i1 %tobool168, label %if.end187, label %if.then169

if.then169:                                       ; preds = %if.end167
  %cmp170 = icmp eq %struct.op* %call111, %38
  br i1 %cmp170, label %cond.end182, label %cond.false173

cond.false173:                                    ; preds = %if.then169
  %op_next174 = getelementptr inbounds %struct.op* %call111, i64 0, i32 0
  %39 = load %struct.op** %op_next174, align 8, !tbaa !3
  %tobool175 = icmp eq %struct.op* %39, null
  br i1 %tobool175, label %cond.false178, label %cond.end182

cond.false178:                                    ; preds = %cond.false173
  %call179 = call %struct.op* @Perl_linklist(%struct.op* %call111) #8
  br label %cond.end182

cond.end182:                                      ; preds = %cond.false173, %if.then169, %cond.false178
  %cond183 = phi %struct.op* [ %call179, %cond.false178 ], [ %cond107, %if.then169 ], [ %39, %cond.false173 ]
  %40 = getelementptr inbounds %struct.op* %38, i64 1, i32 1
  %41 = load %struct.op** %40, align 8, !tbaa !3
  %op_next184 = getelementptr inbounds %struct.op* %41, i64 0, i32 0
  store %struct.op* %cond183, %struct.op** %op_next184, align 8, !tbaa !3
  br label %if.end187

if.end187:                                        ; preds = %cond.end106, %if.end167, %cond.end182
  %o.0 = phi %struct.op* [ %call111, %cond.end182 ], [ %call111, %if.end167 ], [ %call99, %cond.end106 ]
  %tobool188 = icmp eq %struct.loop* %loop, null
  br i1 %tobool188, label %if.then189, label %if.end193

if.then189:                                       ; preds = %if.end187
  %call190 = call i8* @Perl_safesysmalloc(i64 80) #7
  %42 = bitcast i8* %call190 to %struct.loop*
  call void @llvm.memset.p0i8.i64(i8* %call190, i8 0, i64 80, i32 1, i1 false)
  %op_type191 = getelementptr inbounds i8* %call190, i64 32
  %43 = bitcast i8* %op_type191 to i16*
  store i16 182, i16* %43, align 2, !tbaa !4
  %44 = load %struct.op* ()** getelementptr inbounds ([0 x %struct.op* ()*]* @PL_ppaddr, i64 0, i64 182), align 8, !tbaa !3
  %op_ppaddr = getelementptr inbounds i8* %call190, i64 16
  %45 = bitcast i8* %op_ppaddr to %struct.op* ()**
  store %struct.op* ()* %44, %struct.op* ()** %45, align 8, !tbaa !3
  %46 = getelementptr inbounds i8* %call190, i64 37
  store i8 0, i8* %46, align 1, !tbaa !1
  %47 = bitcast i8* %call190 to %struct.op*
  %op_next192 = bitcast i8* %call190 to %struct.op**
  store %struct.op* %47, %struct.op** %op_next192, align 8, !tbaa !3
  br label %if.end193

if.end193:                                        ; preds = %if.end187, %if.then189
  %loop.addr.0 = phi %struct.loop* [ %loop, %if.end187 ], [ %42, %if.then189 ]
  %48 = bitcast %struct.loop* %loop.addr.0 to %struct.op*
  %call194 = call %struct.op* @Perl_newBINOP(i32 183, i32 0, %struct.op* %48, %struct.op* %o.0) #8
  %op_redoop = getelementptr inbounds %struct.loop* %loop.addr.0, i64 0, i32 10
  store %struct.op* %cond107, %struct.op** %op_redoop, align 8, !tbaa !3
  %op_lastop = getelementptr inbounds %struct.loop* %loop.addr.0, i64 0, i32 12
  store %struct.op* %call194, %struct.op** %op_lastop, align 8, !tbaa !3
  %op_private196 = getelementptr inbounds %struct.op* %call194, i64 0, i32 7
  %tobool199 = icmp eq %struct.op* %next.2, null
  %op_nextop202 = getelementptr inbounds %struct.loop* %loop.addr.0, i64 0, i32 11
  %call194.next.2 = select i1 %tobool199, %struct.op* %call194, %struct.op* %next.2
  store %struct.op* %call194.next.2, %struct.op** %op_nextop202, align 8, !tbaa !3
  %op_flags204 = getelementptr inbounds %struct.op* %call194, i64 0, i32 6
  %49 = load i8* %op_flags204, align 1, !tbaa !1
  %conv205 = zext i8 %49 to i32
  %or206 = or i32 %conv205, %flags
  %conv207 = trunc i32 %or206 to i8
  store i8 %conv207, i8* %op_flags204, align 1, !tbaa !1
  %shr261 = lshr i32 %flags, 8
  %50 = load i8* %op_private196, align 1, !tbaa !1
  %conv209 = zext i8 %50 to i32
  %or210 = or i32 %conv209, %shr261
  %conv211 = trunc i32 %or210 to i8
  store i8 %conv211, i8* %op_private196, align 1, !tbaa !1
  br label %return

return:                                           ; preds = %if.end193, %if.then166
  %retval.0 = phi %struct.op* [ %call194, %if.end193 ], [ null, %if.then166 ]
  ret %struct.op* %retval.0
}
