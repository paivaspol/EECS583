define %struct.op* @Perl_ck_index(%struct.op* %o) #0 {
entry:
  %op_flags = getelementptr inbounds %struct.op* %o, i64 0, i32 6
  %0 = load i8* %op_flags, align 1, !tbaa !1
  %and = and i8 %0, 4
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %if.end9, label %if.then

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds %struct.op* %o, i64 1, i32 0
  %2 = load %struct.op** %1, align 8, !tbaa !3
  %op_sibling = getelementptr inbounds %struct.op* %2, i64 0, i32 1
  %3 = load %struct.op** %op_sibling, align 8, !tbaa !3
  %tobool1 = icmp eq %struct.op* %3, null
  br i1 %tobool1, label %if.end9, label %if.end

if.end:                                           ; preds = %if.then
  %op_sibling3 = getelementptr inbounds %struct.op* %3, i64 0, i32 1
  %4 = load %struct.op** %op_sibling3, align 8, !tbaa !3
  %tobool4 = icmp eq %struct.op* %4, null
  br i1 %tobool4, label %if.end9, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %op_type = getelementptr inbounds %struct.op* %4, i64 0, i32 4
  %5 = load i16* %op_type, align 2, !tbaa !4
  %cmp = icmp eq i16 %5, 5
  br i1 %cmp, label %if.then7, label %if.end9

if.then7:                                         ; preds = %land.lhs.true
  %op_sv = getelementptr inbounds %struct.op* %4, i64 1
  %6 = bitcast %struct.op* %op_sv to %struct.sv**
  %7 = load %struct.sv** %6, align 8, !tbaa !3
  tail call void @Perl_fbm_compile(%struct.sv* %7, i32 0) #7
  br label %if.end9

if.end9:                                          ; preds = %if.then, %if.end, %entry, %land.lhs.true, %if.then7
  %call = tail call %struct.op* @Perl_ck_fun(%struct.op* %o) #8
  ret %struct.op* %call
}
