define %struct.op* @Perl_dofile(%struct.op* %term) #0 {
entry:
  %call = tail call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([3 x i8]* @.str52, i64 0, i64 0), i32 0, i32 12) #7
  %tobool = icmp eq %struct.gv* %call, null
  br i1 %tobool, label %if.then, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %sv_any = getelementptr inbounds %struct.gv* %call, i64 0, i32 0
  %0 = load %struct.xpvgv** %sv_any, align 8, !tbaa !3
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %0, i64 0, i32 7
  %1 = load %struct.gp** %xgv_gp, align 8, !tbaa !3
  %gp_cvgen = getelementptr inbounds %struct.gp* %1, i64 0, i32 8
  %2 = load i32* %gp_cvgen, align 4, !tbaa !0
  %tobool1 = icmp eq i32 %2, 0
  br i1 %tobool1, label %cond.false, label %if.then

cond.false:                                       ; preds = %land.lhs.true
  %gp_cv = getelementptr inbounds %struct.gp* %1, i64 0, i32 7
  %3 = load %struct.cv** %gp_cv, align 8, !tbaa !3
  %tobool4 = icmp eq %struct.cv* %3, null
  br i1 %tobool4, label %if.then, label %land.lhs.true5

land.lhs.true5:                                   ; preds = %cond.false
  %xgv_flags = getelementptr inbounds %struct.xpvgv* %0, i64 0, i32 11
  %4 = load i8* %xgv_flags, align 1, !tbaa !1
  %tobool7 = icmp slt i8 %4, 0
  br i1 %tobool7, label %if.end, label %if.then

if.then:                                          ; preds = %cond.false, %land.lhs.true, %entry, %land.lhs.true5
  %call8 = tail call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([17 x i8]* @.str53, i64 0, i64 0), i32 0, i32 12) #7
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true5
  %gv.0 = phi %struct.gv* [ %call8, %if.then ], [ %call, %land.lhs.true5 ]
  %tobool9 = icmp eq %struct.gv* %gv.0, null
  br i1 %tobool9, label %if.else, label %land.lhs.true10

land.lhs.true10:                                  ; preds = %if.end
  %sv_any11 = getelementptr inbounds %struct.gv* %gv.0, i64 0, i32 0
  %5 = load %struct.xpvgv** %sv_any11, align 8, !tbaa !3
  %xgv_gp12 = getelementptr inbounds %struct.xpvgv* %5, i64 0, i32 7
  %6 = load %struct.gp** %xgv_gp12, align 8, !tbaa !3
  %gp_cvgen13 = getelementptr inbounds %struct.gp* %6, i64 0, i32 8
  %7 = load i32* %gp_cvgen13, align 4, !tbaa !0
  %tobool14 = icmp eq i32 %7, 0
  br i1 %tobool14, label %cond.false16, label %if.else

cond.false16:                                     ; preds = %land.lhs.true10
  %gp_cv19 = getelementptr inbounds %struct.gp* %6, i64 0, i32 7
  %8 = load %struct.cv** %gp_cv19, align 8, !tbaa !3
  %tobool20 = icmp eq %struct.cv* %8, null
  br i1 %tobool20, label %if.else, label %land.lhs.true21

land.lhs.true21:                                  ; preds = %cond.false16
  %xgv_flags23 = getelementptr inbounds %struct.xpvgv* %5, i64 0, i32 11
  %9 = load i8* %xgv_flags23, align 1, !tbaa !1
  %tobool26 = icmp slt i8 %9, 0
  br i1 %tobool26, label %Perl_newGVOP.exit, label %if.else

Perl_newGVOP.exit:                                ; preds = %land.lhs.true21
  %10 = bitcast %struct.gv* %gv.0 to %struct.sv*
  store %struct.sv* %10, %struct.sv** @PL_Sv, align 8, !tbaa !3
  %11 = getelementptr inbounds %struct.gv* %gv.0, i64 0, i32 1
  %12 = load i32* %11, align 4, !tbaa !0
  %inc.i = add i32 %12, 1
  store i32 %inc.i, i32* %11, align 4, !tbaa !0
  %call.i = tail call %struct.op* @Perl_newSVOP(i32 7, i32 0, %struct.sv* %10) #7
  %call29 = tail call %struct.op* @Perl_newUNOP(i32 17, i32 0, %struct.op* %call.i) #8
  %call30 = tail call %struct.op* @Perl_scalar(%struct.op* %call29) #8
  %call31 = tail call %struct.op* @Perl_append_elem(i32 141, %struct.op* %term, %struct.op* %call30) #8
  %call32 = tail call %struct.op* @Perl_newUNOP(i32 166, i32 64, %struct.op* %call31) #8
  %call33 = tail call %struct.op* @Perl_ck_subr(%struct.op* %call32) #8
  br label %if.end36

if.else:                                          ; preds = %cond.false16, %land.lhs.true10, %if.end, %land.lhs.true21
  %call34 = tail call %struct.op* @Perl_scalar(%struct.op* %term) #8
  %call35 = tail call %struct.op* @Perl_newUNOP(i32 310, i32 0, %struct.op* %call34) #8
  br label %if.end36

if.end36:                                         ; preds = %if.else, %Perl_newGVOP.exit
  %doop.0 = phi %struct.op* [ %call35, %if.else ], [ %call33, %Perl_newGVOP.exit ]
  ret %struct.op* %doop.0
}
