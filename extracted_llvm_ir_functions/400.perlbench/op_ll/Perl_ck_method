define %struct.op* @Perl_ck_method(%struct.op* %o) #0 {
entry:
  %0 = getelementptr inbounds %struct.op* %o, i64 1, i32 0
  %1 = load %struct.op** %0, align 8, !tbaa !3
  %op_type = getelementptr inbounds %struct.op* %1, i64 0, i32 4
  %2 = load i16* %op_type, align 2, !tbaa !4
  %cmp = icmp eq i16 %2, 5
  br i1 %cmp, label %if.then, label %return

if.then:                                          ; preds = %entry
  %op_sv = getelementptr inbounds %struct.op* %1, i64 1
  %3 = bitcast %struct.op* %op_sv to %struct.sv**
  %4 = load %struct.sv** %3, align 8, !tbaa !3
  %sv_any = getelementptr inbounds %struct.sv* %4, i64 0, i32 0
  %5 = load i8** %sv_any, align 8, !tbaa !3
  %xpv_pv = bitcast i8* %5 to i8**
  %6 = load i8** %xpv_pv, align 8, !tbaa !3
  %call = tail call i8* @strchr(i8* %6, i32 58) #7
  %tobool = icmp eq i8* %call, null
  br i1 %tobool, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %if.then
  %call4 = tail call i8* @strchr(i8* %6, i32 39) #7
  %tobool5 = icmp eq i8* %call4, null
  br i1 %tobool5, label %if.then6, label %return

if.then6:                                         ; preds = %lor.lhs.false
  %sv_flags = getelementptr inbounds %struct.sv* %4, i64 0, i32 2
  %7 = load i32* %sv_flags, align 4, !tbaa !0
  %8 = and i32 %7, 9437184
  %9 = icmp eq i32 %8, 9437184
  br i1 %9, label %if.else, label %if.then12

if.then12:                                        ; preds = %if.then6
  %xpv_cur = getelementptr inbounds i8* %5, i64 8
  %10 = bitcast i8* %xpv_cur to i64*
  %11 = load i64* %10, align 8, !tbaa !5
  %conv16 = trunc i64 %11 to i32
  %call17 = tail call %struct.sv* @Perl_newSVpvn_share(i8* %6, i32 %conv16, i32 0) #7
  br label %if.end

if.else:                                          ; preds = %if.then6
  %12 = getelementptr inbounds %struct.op* %op_sv, i64 0, i32 0
  store %struct.op* null, %struct.op** %12, align 8, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then12
  %sv.0 = phi %struct.sv* [ %4, %if.else ], [ %call17, %if.then12 ]
  %call19 = tail call %struct.op* @Perl_newSVOP(i32 350, i32 0, %struct.sv* %sv.0) #8
  tail call void @Perl_op_free(%struct.op* %o) #8
  br label %return

return:                                           ; preds = %entry, %if.then, %lor.lhs.false, %if.end
  %retval.0 = phi %struct.op* [ %call19, %if.end ], [ %o, %lor.lhs.false ], [ %o, %if.then ], [ %o, %entry ]
  ret %struct.op* %retval.0
}
