define %struct.op* @Perl_prepend_elem(i32 %type, %struct.op* %first, %struct.op* %last) #0 {
entry:
  %tobool = icmp eq %struct.op* %first, null
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %tobool1 = icmp eq %struct.op* %last, null
  br i1 %tobool1, label %return, label %if.end3

if.end3:                                          ; preds = %if.end
  %op_type = getelementptr inbounds %struct.op* %last, i64 0, i32 4
  %0 = load i16* %op_type, align 2, !tbaa !4
  %conv = zext i16 %0 to i32
  %cmp = icmp eq i32 %conv, %type
  br i1 %cmp, label %if.then5, label %if.end37

if.then5:                                         ; preds = %if.end3
  %cmp6 = icmp eq i32 %type, 141
  br i1 %cmp6, label %if.then8, label %if.else

if.then8:                                         ; preds = %if.then5
  %1 = getelementptr inbounds %struct.op* %last, i64 1, i32 0
  %2 = load %struct.op** %1, align 8, !tbaa !3
  %op_sibling = getelementptr inbounds %struct.op* %2, i64 0, i32 1
  %3 = load %struct.op** %op_sibling, align 8, !tbaa !3
  %op_sibling9 = getelementptr inbounds %struct.op* %first, i64 0, i32 1
  store %struct.op* %3, %struct.op** %op_sibling9, align 8, !tbaa !3
  %4 = load %struct.op** %1, align 8, !tbaa !3
  %op_sibling11 = getelementptr inbounds %struct.op* %4, i64 0, i32 1
  store %struct.op* %first, %struct.op** %op_sibling11, align 8, !tbaa !3
  %op_flags = getelementptr inbounds %struct.op* %first, i64 0, i32 6
  %5 = load i8* %op_flags, align 1, !tbaa !1
  %and = and i8 %5, 8
  %tobool13 = icmp eq i8 %and, 0
  %op_flags15 = getelementptr inbounds %struct.op* %last, i64 0, i32 6
  br i1 %tobool13, label %if.then14, label %if.end32

if.then14:                                        ; preds = %if.then8
  %6 = load i8* %op_flags15, align 1, !tbaa !1
  %and17 = and i8 %6, -9
  store i8 %and17, i8* %op_flags15, align 1, !tbaa !1
  br label %if.end32

if.else:                                          ; preds = %if.then5
  %op_flags20 = getelementptr inbounds %struct.op* %last, i64 0, i32 6
  %7 = load i8* %op_flags20, align 1, !tbaa !1
  %and22 = and i8 %7, 4
  %tobool23 = icmp eq i8 %and22, 0
  br i1 %tobool23, label %if.then24, label %if.end28

if.then24:                                        ; preds = %if.else
  %8 = getelementptr inbounds %struct.op* %last, i64 1, i32 1
  store %struct.op* %first, %struct.op** %8, align 8, !tbaa !3
  %or = or i8 %7, 4
  store i8 %or, i8* %op_flags20, align 1, !tbaa !1
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then24
  %9 = getelementptr inbounds %struct.op* %last, i64 1, i32 0
  %10 = load %struct.op** %9, align 8, !tbaa !3
  %op_sibling30 = getelementptr inbounds %struct.op* %first, i64 0, i32 1
  store %struct.op* %10, %struct.op** %op_sibling30, align 8, !tbaa !3
  store %struct.op* %first, %struct.op** %9, align 8, !tbaa !3
  br label %if.end32

if.end32:                                         ; preds = %if.then8, %if.then14, %if.end28
  %op_flags33.pre-phi = phi i8* [ %op_flags15, %if.then14 ], [ %op_flags20, %if.end28 ], [ %op_flags15, %if.then8 ]
  %11 = load i8* %op_flags33.pre-phi, align 1, !tbaa !1
  %or35 = or i8 %11, 4
  store i8 %or35, i8* %op_flags33.pre-phi, align 1, !tbaa !1
  br label %return

if.end37:                                         ; preds = %if.end3
  %call = tail call %struct.op* @Perl_newLISTOP(i32 %type, i32 0, %struct.op* %first, %struct.op* %last) #8
  br label %return

return:                                           ; preds = %if.end, %entry, %if.end37, %if.end32
  %retval.0 = phi %struct.op* [ %last, %if.end32 ], [ %call, %if.end37 ], [ %last, %entry ], [ %first, %if.end ]
  ret %struct.op* %retval.0
}
