define %struct.op* @Perl_ck_join(%struct.op* %o) #0 {
entry:
  %0 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings = getelementptr inbounds %struct.cop* %0, i64 0, i32 14
  %1 = load %struct.sv** %cop_warnings, align 8, !tbaa !3
  %cmp = icmp eq %struct.sv* %1, null
  br i1 %cmp, label %lor.lhs.false7, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings1 = getelementptr inbounds %struct.cop* %2, i64 0, i32 14
  %3 = load %struct.sv** %cop_warnings1, align 8, !tbaa !3
  %cmp2 = icmp eq %struct.sv* %3, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp2, label %lor.lhs.false7, label %land.lhs.true3

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings4 = getelementptr inbounds %struct.cop* %4, i64 0, i32 14
  %5 = load %struct.sv** %cop_warnings4, align 8, !tbaa !3
  %cmp5 = icmp eq %struct.sv* %5, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp5, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true3
  %6 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings6 = getelementptr inbounds %struct.cop* %6, i64 0, i32 14
  %7 = load %struct.sv** %cop_warnings6, align 8, !tbaa !3
  %sv_any = getelementptr inbounds %struct.sv* %7, i64 0, i32 0
  %8 = load i8** %sv_any, align 8, !tbaa !3
  %xpv_pv = bitcast i8* %8 to i8**
  %9 = load i8** %xpv_pv, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds i8* %9, i64 7
  %10 = load i8* %arrayidx, align 1, !tbaa !1
  %and = and i8 %10, 1
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %lor.lhs.false7, label %if.then

lor.lhs.false7:                                   ; preds = %lor.lhs.false, %land.lhs.true, %entry
  %11 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings8 = getelementptr inbounds %struct.cop* %11, i64 0, i32 14
  %12 = load %struct.sv** %cop_warnings8, align 8, !tbaa !3
  %cmp9 = icmp eq %struct.sv* %12, null
  br i1 %cmp9, label %land.lhs.true11, label %if.end25

land.lhs.true11:                                  ; preds = %lor.lhs.false7
  %13 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and13 = and i8 %13, 1
  %tobool14 = icmp eq i8 %and13, 0
  br i1 %tobool14, label %if.end25, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true11, %land.lhs.true3
  %14 = getelementptr inbounds %struct.op* %o, i64 1, i32 0
  %15 = load %struct.op** %14, align 8, !tbaa !3
  %op_sibling = getelementptr inbounds %struct.op* %15, i64 0, i32 1
  %16 = load %struct.op** %op_sibling, align 8, !tbaa !3
  %tobool15 = icmp eq %struct.op* %16, null
  br i1 %tobool15, label %if.end25, label %land.lhs.true16

land.lhs.true16:                                  ; preds = %if.then
  %op_type = getelementptr inbounds %struct.op* %16, i64 0, i32 4
  %17 = load i16* %op_type, align 2, !tbaa !4
  %cmp18 = icmp eq i16 %17, 31
  br i1 %cmp18, label %if.then20, label %if.end25

if.then20:                                        ; preds = %land.lhs.true16
  %op_pmregexp = getelementptr inbounds %struct.op* %16, i64 2
  %18 = bitcast %struct.op* %op_pmregexp to %struct.regexp**
  %19 = load %struct.regexp** %18, align 8, !tbaa !3
  %tobool21 = icmp eq %struct.regexp* %19, null
  br i1 %tobool21, label %if.end, label %if.then22

if.then22:                                        ; preds = %if.then20
  %precomp = getelementptr inbounds %struct.regexp* %19, i64 0, i32 4
  %20 = load i8** %precomp, align 8, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %if.then20, %if.then22
  %pmstr.0 = phi i8* [ %20, %if.then22 ], [ getelementptr inbounds ([7 x i8]* @.str125, i64 0, i64 0), %if.then20 ]
  tail call void (i32, i8*, ...)* @Perl_warner(i32 28, i8* getelementptr inbounds ([40 x i8]* @.str126, i64 0, i64 0), i8* %pmstr.0, i8* %pmstr.0) #7
  br label %if.end25

if.end25:                                         ; preds = %if.then, %land.lhs.true11, %land.lhs.true16, %if.end, %lor.lhs.false7
  %call = tail call %struct.op* @Perl_ck_fun(%struct.op* %o) #8
  ret %struct.op* %call
}
