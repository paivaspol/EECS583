define %struct.op* @Perl_ck_select(%struct.op* %o) #0 {
entry:
  %op_flags = getelementptr inbounds %struct.op* %o, i64 0, i32 6
  %0 = load i8* %op_flags, align 1, !tbaa !1
  %and = and i8 %0, 4
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %if.end6, label %if.then

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds %struct.op* %o, i64 1, i32 0
  %2 = load %struct.op** %1, align 8, !tbaa !3
  %op_sibling = getelementptr inbounds %struct.op* %2, i64 0, i32 1
  %3 = load %struct.op** %op_sibling, align 8, !tbaa !3
  %tobool1 = icmp eq %struct.op* %3, null
  br i1 %tobool1, label %if.end6, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %op_sibling2 = getelementptr inbounds %struct.op* %3, i64 0, i32 1
  %4 = load %struct.op** %op_sibling2, align 8, !tbaa !3
  %tobool3 = icmp eq %struct.op* %4, null
  br i1 %tobool3, label %if.end6, label %if.then4

if.then4:                                         ; preds = %land.lhs.true
  %op_type = getelementptr inbounds %struct.op* %o, i64 0, i32 4
  store i16 202, i16* %op_type, align 2, !tbaa !4
  %5 = load %struct.op* ()** getelementptr inbounds ([0 x %struct.op* ()*]* @PL_ppaddr, i64 0, i64 202), align 8, !tbaa !3
  %op_ppaddr = getelementptr inbounds %struct.op* %o, i64 0, i32 2
  store %struct.op* ()* %5, %struct.op* ()** %op_ppaddr, align 8, !tbaa !3
  %call = tail call %struct.op* @Perl_ck_fun(%struct.op* %o) #8
  %call5 = tail call %struct.op* @Perl_fold_constants(%struct.op* %call) #8
  br label %return

if.end6:                                          ; preds = %land.lhs.true, %if.then, %entry
  %call7 = tail call %struct.op* @Perl_ck_fun(%struct.op* %o) #8
  %6 = getelementptr inbounds %struct.op* %call7, i64 1, i32 0
  %7 = load %struct.op** %6, align 8, !tbaa !3
  %op_sibling9 = getelementptr inbounds %struct.op* %7, i64 0, i32 1
  %8 = load %struct.op** %op_sibling9, align 8, !tbaa !3
  %tobool10 = icmp eq %struct.op* %8, null
  br i1 %tobool10, label %return, label %land.lhs.true11

land.lhs.true11:                                  ; preds = %if.end6
  %op_type12 = getelementptr inbounds %struct.op* %8, i64 0, i32 4
  %9 = load i16* %op_type12, align 2, !tbaa !4
  %cmp = icmp eq i16 %9, 14
  br i1 %cmp, label %if.then15, label %return

if.then15:                                        ; preds = %land.lhs.true11
  %op_private = getelementptr inbounds %struct.op* %8, i64 0, i32 7
  %10 = load i8* %op_private, align 1, !tbaa !1
  %and17 = and i8 %10, -3
  store i8 %and17, i8* %op_private, align 1, !tbaa !1
  br label %return

return:                                           ; preds = %land.lhs.true11, %if.then15, %if.end6, %if.then4
  %retval.0 = phi %struct.op* [ %call5, %if.then4 ], [ %call7, %if.end6 ], [ %call7, %if.then15 ], [ %call7, %land.lhs.true11 ]
  ret %struct.op* %retval.0
}
