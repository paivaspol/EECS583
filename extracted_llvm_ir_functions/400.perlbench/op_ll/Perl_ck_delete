define %struct.op* @Perl_ck_delete(%struct.op* %o) #0 {
entry:
  %call = tail call %struct.op* @Perl_ck_fun(%struct.op* %o) #8
  %op_private = getelementptr inbounds %struct.op* %call, i64 0, i32 7
  store i8 0, i8* %op_private, align 1, !tbaa !1
  %op_flags = getelementptr inbounds %struct.op* %call, i64 0, i32 6
  %0 = load i8* %op_flags, align 1, !tbaa !1
  %and = and i8 %0, 4
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = getelementptr inbounds %struct.op* %call, i64 1, i32 0
  %2 = load %struct.op** %1, align 8, !tbaa !3
  %op_type = getelementptr inbounds %struct.op* %2, i64 0, i32 4
  %3 = load i16* %op_type, align 2, !tbaa !4
  %conv1 = zext i16 %3 to i32
  switch i32 %conv1, label %sw.default [
    i32 128, label %sw.bb
    i32 136, label %sw.bb5
    i32 127, label %sw.bb10
    i32 135, label %sw.epilog
  ]

sw.bb:                                            ; preds = %if.then
  %or = or i8 %0, -128
  store i8 %or, i8* %op_flags, align 1, !tbaa !1
  br label %sw.bb5

sw.bb5:                                           ; preds = %if.then, %sw.bb
  store i8 64, i8* %op_private, align 1, !tbaa !1
  br label %sw.epilog

sw.bb10:                                          ; preds = %if.then
  %or13 = or i8 %0, -128
  store i8 %or13, i8* %op_flags, align 1, !tbaa !1
  br label %sw.epilog

sw.default:                                       ; preds = %if.then
  %op_type15 = getelementptr inbounds %struct.op* %call, i64 0, i32 4
  %4 = load i16* %op_type15, align 2, !tbaa !4
  %cmp = icmp eq i16 %4, 351
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.default
  %call18 = tail call i8* @Perl_custom_op_desc(%struct.op* %call) #8
  br label %cond.end

cond.false:                                       ; preds = %sw.default
  %idxprom = zext i16 %4 to i64
  %arrayidx = getelementptr inbounds [0 x i8*]* @PL_op_desc, i64 0, i64 %idxprom
  %5 = load i8** %arrayidx, align 8, !tbaa !3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call18, %cond.true ], [ %5, %cond.false ]
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([52 x i8]* @.str88, i64 0, i64 0), i8* %cond) #7
  br label %sw.epilog

sw.epilog:                                        ; preds = %cond.end, %sw.bb10, %if.then, %sw.bb5
  tail call void @Perl_op_null(%struct.op* %2) #8
  br label %if.end

if.end:                                           ; preds = %entry, %sw.epilog
  ret %struct.op* %call
}
