define %struct.op* @Perl_ck_rvconst(%struct.op* %o) #0 {
entry:
  %n_a = alloca i64, align 8
  %0 = getelementptr inbounds %struct.op* %o, i64 1, i32 0
  %1 = load %struct.op** %0, align 8, !tbaa !3
  %2 = load i32* @PL_hints, align 4, !tbaa !0
  %and = and i32 %2, 2
  %op_private = getelementptr inbounds %struct.op* %o, i64 0, i32 7
  %3 = load i8* %op_private, align 1, !tbaa !1
  %conv = zext i8 %3 to i32
  %or = or i32 %conv, %and
  %conv1 = trunc i32 %or to i8
  store i8 %conv1, i8* %op_private, align 1, !tbaa !1
  %4 = getelementptr inbounds %struct.op* %1, i64 0, i32 4
  %5 = load i16* %4, align 2, !tbaa !4
  %cmp = icmp eq i16 %5, 5
  br i1 %cmp, label %if.then, label %return

if.then:                                          ; preds = %entry
  %op_sv = getelementptr inbounds %struct.op* %1, i64 1
  %6 = bitcast %struct.op* %op_sv to %struct.sv**
  %7 = load %struct.sv** %6, align 8, !tbaa !3
  %sv_flags = getelementptr inbounds %struct.sv* %7, i64 0, i32 2
  %8 = load i32* %sv_flags, align 4, !tbaa !0
  %9 = and i32 %8, 8912896
  %10 = icmp eq i32 %9, 8912896
  br i1 %10, label %if.then8, label %if.end52

if.then8:                                         ; preds = %if.then
  %sv_any = getelementptr inbounds %struct.sv* %7, i64 0, i32 0
  %11 = load i8** %sv_any, align 8, !tbaa !3
  %xrv_rv = bitcast i8* %11 to %struct.sv**
  %12 = load %struct.sv** %xrv_rv, align 8, !tbaa !3
  %sv_flags9 = getelementptr inbounds %struct.sv* %12, i64 0, i32 2
  %13 = load i32* %sv_flags9, align 4, !tbaa !0
  %and10 = and i32 %13, 255
  %op_type11 = getelementptr inbounds %struct.op* %o, i64 0, i32 4
  %14 = load i16* %op_type11, align 2, !tbaa !4
  %conv12 = zext i16 %14 to i32
  switch i32 %conv12, label %return [
    i32 15, label %sw.bb
    i32 125, label %sw.bb16
    i32 134, label %sw.bb21
    i32 17, label %sw.bb44
  ]

sw.bb:                                            ; preds = %if.then8
  %cmp13 = icmp ugt i32 %and10, 7
  %. = select i1 %cmp13, i8* getelementptr inbounds ([9 x i8]* @.str91, i64 0, i64 0), i8* null
  br label %sw.epilog

sw.bb16:                                          ; preds = %if.then8
  %cmp17 = icmp eq i32 %and10, 10
  %.174 = select i1 %cmp17, i8* null, i8* getelementptr inbounds ([9 x i8]* @.str92, i64 0, i64 0)
  br label %sw.epilog

sw.bb21:                                          ; preds = %if.then8
  switch i32 %and10, label %if.then50 [
    i32 11, label %return
    i32 10, label %if.then27
  ]

if.then27:                                        ; preds = %sw.bb21
  %15 = bitcast %struct.sv* %12 to %struct.av*
  %call = call %struct.sv** @Perl_av_fetch(%struct.av* %15, i32 0, i32 0) #7
  %tobool28 = icmp eq %struct.sv** %call, null
  br i1 %tobool28, label %if.then50, label %land.lhs.true29

land.lhs.true29:                                  ; preds = %if.then27
  %16 = load %struct.sv** %call, align 8, !tbaa !3
  %sv_flags30 = getelementptr inbounds %struct.sv* %16, i64 0, i32 2
  %17 = load i32* %sv_flags30, align 4, !tbaa !0
  %and31 = and i32 %17, 524288
  %tobool32 = icmp eq i32 %and31, 0
  br i1 %tobool32, label %if.then50, label %land.lhs.true33

land.lhs.true33:                                  ; preds = %land.lhs.true29
  %sv_any34 = getelementptr inbounds %struct.sv* %16, i64 0, i32 0
  %18 = load i8** %sv_any34, align 8, !tbaa !3
  %xrv_rv35 = bitcast i8* %18 to %struct.sv**
  %19 = load %struct.sv** %xrv_rv35, align 8, !tbaa !3
  %sv_flags36 = getelementptr inbounds %struct.sv* %19, i64 0, i32 2
  %20 = load i32* %sv_flags36, align 4, !tbaa !0
  %and37 = and i32 %20, 255
  %cmp38 = icmp eq i32 %and37, 11
  br i1 %cmp38, label %return, label %if.then50

sw.bb44:                                          ; preds = %if.then8
  %cmp45 = icmp eq i32 %and10, 12
  %.175 = select i1 %cmp45, i8* null, i8* getelementptr inbounds ([7 x i8]* @.str94, i64 0, i64 0)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb44, %sw.bb16, %sw.bb
  %badtype.0 = phi i8* [ %., %sw.bb ], [ %.174, %sw.bb16 ], [ %.175, %sw.bb44 ]
  %tobool49 = icmp eq i8* %badtype.0, null
  br i1 %tobool49, label %return, label %if.then50

if.then50:                                        ; preds = %sw.bb21, %land.lhs.true29, %if.then27, %land.lhs.true33, %sw.epilog
  %badtype.0179 = phi i8* [ %badtype.0, %sw.epilog ], [ getelementptr inbounds ([7 x i8]* @.str93, i64 0, i64 0), %land.lhs.true33 ], [ getelementptr inbounds ([7 x i8]* @.str93, i64 0, i64 0), %if.then27 ], [ getelementptr inbounds ([7 x i8]* @.str93, i64 0, i64 0), %land.lhs.true29 ], [ getelementptr inbounds ([7 x i8]* @.str93, i64 0, i64 0), %sw.bb21 ]
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([29 x i8]* @.str95, i64 0, i64 0), i8* %badtype.0179) #7
  br label %return

if.end52:                                         ; preds = %if.then
  %and54 = and i32 %8, 262144
  %cmp55 = icmp eq i32 %and54, 0
  br i1 %cmp55, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end52
  %sv_any57 = getelementptr inbounds %struct.sv* %7, i64 0, i32 0
  %21 = load i8** %sv_any57, align 8, !tbaa !3
  %xpv_cur = getelementptr inbounds i8* %21, i64 8
  %22 = bitcast i8* %xpv_cur to i64*
  %23 = load i64* %22, align 8, !tbaa !5
  store i64 %23, i64* %n_a, align 8, !tbaa !5
  %xpv_pv = bitcast i8* %21 to i8**
  %24 = load i8** %xpv_pv, align 8, !tbaa !3
  br label %cond.end

cond.false:                                       ; preds = %if.end52
  %call59 = call i8* @Perl_sv_2pv_flags(%struct.sv* %7, i64* %n_a, i32 2) #7
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %24, %cond.true ], [ %call59, %cond.false ]
  %25 = load i32* @PL_hints, align 4, !tbaa !0
  %and60 = and i32 %25, 2
  %tobool61 = icmp eq i32 %and60, 0
  %.pre196 = getelementptr inbounds %struct.op* %1, i64 0, i32 7
  br i1 %tobool61, label %if.end77, label %land.lhs.true62

land.lhs.true62:                                  ; preds = %cond.end
  %26 = load i8* %.pre196, align 1, !tbaa !1
  %and65 = and i8 %26, 64
  %tobool66 = icmp eq i8 %and65, 0
  br i1 %tobool66, label %if.end77, label %if.then67

if.then67:                                        ; preds = %land.lhs.true62
  %op_type68 = getelementptr inbounds %struct.op* %o, i64 0, i32 4
  %27 = load i16* %op_type68, align 2, !tbaa !4
  %conv69 = zext i16 %27 to i32
  switch i32 %conv69, label %if.end77 [
    i32 15, label %if.then75
    i32 125, label %sw.bb71
    i32 134, label %sw.bb72
  ]

sw.bb71:                                          ; preds = %if.then67
  br label %if.then75

sw.bb72:                                          ; preds = %if.then67
  br label %if.then75

if.then75:                                        ; preds = %if.then67, %sw.bb72, %sw.bb71
  %badthing.0.ph = phi i8* [ getelementptr inbounds ([7 x i8]* @.str93, i64 0, i64 0), %sw.bb72 ], [ getelementptr inbounds ([9 x i8]* @.str92, i64 0, i64 0), %sw.bb71 ], [ getelementptr inbounds ([9 x i8]* @.str91, i64 0, i64 0), %if.then67 ]
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([63 x i8]* @.str96, i64 0, i64 0), i8* %cond, i8* %badthing.0.ph) #7
  br label %if.end77

if.end77:                                         ; preds = %cond.end, %land.lhs.true62, %if.then67, %if.then75
  %op_type78 = getelementptr inbounds %struct.op* %o, i64 0, i32 4
  %28 = load i16* %op_type78, align 2, !tbaa !4
  %cmp80 = icmp eq i16 %28, 17
  %conv81 = zext i1 %cmp80 to i32
  %mul = shl nuw nsw i32 %conv81, 1
  %.pre = load i8* %.pre196, align 1, !tbaa !1
  br label %do.body

do.body:                                          ; preds = %land.rhs, %if.end77
  %29 = phi i8 [ %.pre, %if.end77 ], [ %32, %land.rhs ]
  %iscv.0 = phi i32 [ %mul, %if.end77 ], [ %inc, %land.rhs ]
  %and84 = lshr i8 %29, 4
  %and84.lobit = and i8 %and84, 1
  %30 = xor i8 %and84.lobit, 1
  %lnot.ext = zext i8 %30 to i32
  %or86 = or i32 %lnot.ext, %iscv.0
  %tobool87 = icmp ne i32 %iscv.0, 0
  br i1 %tobool87, label %cond.end111, label %cond.false89

cond.false89:                                     ; preds = %do.body
  %31 = load i16* %op_type78, align 2, !tbaa !4
  %cmp92 = icmp eq i16 %31, 15
  br i1 %cmp92, label %cond.end111, label %cond.false95

cond.false95:                                     ; preds = %cond.false89
  %cmp98 = icmp eq i16 %31, 125
  br i1 %cmp98, label %cond.end111, label %cond.false101

cond.false101:                                    ; preds = %cond.false95
  %cmp104 = icmp eq i16 %31, 134
  %cond106 = select i1 %cmp104, i32 11, i32 13
  br label %cond.end111

cond.end111:                                      ; preds = %cond.false89, %cond.false95, %cond.false101, %do.body
  %cond112 = phi i32 [ 12, %do.body ], [ 4, %cond.false89 ], [ %cond106, %cond.false101 ], [ 10, %cond.false95 ]
  %call113 = call %struct.gv* @Perl_gv_fetchpv(i8* %cond, i32 %or86, i32 %cond112) #7
  %tobool114 = icmp eq %struct.gv* %call113, null
  br i1 %tobool114, label %land.lhs.true115, label %land.end131

land.lhs.true115:                                 ; preds = %cond.end111
  %32 = load i8* %.pre196, align 1, !tbaa !1
  %and118 = and i8 %32, 16
  %tobool119 = icmp eq i8 %and118, 0
  br i1 %tobool119, label %land.rhs, label %return

land.rhs:                                         ; preds = %land.lhs.true115
  %inc = add nsw i32 %iscv.0, 1
  br i1 %tobool87, label %return, label %do.body

land.end131:                                      ; preds = %cond.end111
  store i16 7, i16* %4, align 2, !tbaa !4
  %33 = load %struct.sv** %6, align 8, !tbaa !3
  call void @Perl_sv_free(%struct.sv* %33) #7
  %34 = bitcast %struct.gv* %call113 to %struct.sv*
  store %struct.sv* %34, %struct.sv** @PL_Sv, align 8, !tbaa !3
  %35 = getelementptr inbounds %struct.gv* %call113, i64 0, i32 1
  %36 = load i32* %35, align 4, !tbaa !0
  %inc129 = add i32 %36, 1
  store i32 %inc129, i32* %35, align 4, !tbaa !0
  %37 = getelementptr inbounds %struct.op* %op_sv, i64 0, i32 0
  %.c = bitcast %struct.gv* %call113 to %struct.op*
  store %struct.op* %.c, %struct.op** %37, align 8, !tbaa !3
  store i8 0, i8* %.pre196, align 1, !tbaa !1
  %38 = load %struct.op* ()** getelementptr inbounds ([0 x %struct.op* ()*]* @PL_ppaddr, i64 0, i64 7), align 8, !tbaa !3
  %39 = getelementptr inbounds %struct.op* %1, i64 0, i32 2
  store %struct.op* ()* %38, %struct.op* ()** %39, align 8, !tbaa !3
  br label %return

return:                                           ; preds = %land.lhs.true115, %land.rhs, %sw.bb21, %land.lhs.true33, %if.then8, %entry, %land.end131, %if.then50, %sw.epilog
  ret %struct.op* %o
}
