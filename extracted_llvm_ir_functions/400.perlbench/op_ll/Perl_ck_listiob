define %struct.op* @Perl_ck_listiob(%struct.op* %o) #0 {
entry:
  %0 = getelementptr inbounds %struct.op* %o, i64 1, i32 0
  %1 = load %struct.op** %0, align 8, !tbaa !3
  %tobool = icmp eq %struct.op* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call %struct.op* @Perl_force_list(%struct.op* %o) #8
  %2 = getelementptr inbounds %struct.op* %call, i64 1, i32 0
  %3 = load %struct.op** %2, align 8, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %o.addr.0 = phi %struct.op* [ %o, %entry ], [ %call, %if.then ]
  %kid.0 = phi %struct.op* [ %1, %entry ], [ %3, %if.then ]
  %op_type = getelementptr inbounds %struct.op* %kid.0, i64 0, i32 4
  %4 = load i16* %op_type, align 2, !tbaa !4
  %cmp = icmp eq i16 %4, 3
  br i1 %cmp, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %op_sibling = getelementptr inbounds %struct.op* %kid.0, i64 0, i32 1
  %5 = load %struct.op** %op_sibling, align 8, !tbaa !3
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end
  %kid.1 = phi %struct.op* [ %5, %if.then3 ], [ %kid.0, %if.end ]
  %tobool5 = icmp eq %struct.op* %kid.1, null
  br i1 %tobool5, label %if.then36, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end4
  %op_flags = getelementptr inbounds %struct.op* %o.addr.0, i64 0, i32 6
  %6 = load i8* %op_flags, align 1, !tbaa !1
  %and = and i8 %6, 64
  %tobool7 = icmp eq i8 %and, 0
  %op_sibling12 = getelementptr inbounds %struct.op* %kid.1, i64 0, i32 1
  %7 = load %struct.op** %op_sibling12, align 8, !tbaa !3
  br i1 %tobool7, label %land.lhs.true11, label %if.end34

land.lhs.true11:                                  ; preds = %land.lhs.true
  %tobool13 = icmp eq %struct.op* %7, null
  br i1 %tobool13, label %if.then14, label %if.end41

if.then14:                                        ; preds = %land.lhs.true11
  %op_type15 = getelementptr inbounds %struct.op* %kid.1, i64 0, i32 4
  %8 = load i16* %op_type15, align 2, !tbaa !4
  %cmp17 = icmp eq i16 %8, 5
  br i1 %cmp17, label %land.lhs.true19, label %if.end41

land.lhs.true19:                                  ; preds = %if.then14
  %op_private = getelementptr inbounds %struct.op* %kid.1, i64 0, i32 7
  %9 = load i8* %op_private, align 1, !tbaa !1
  %and21 = and i8 %9, 64
  %tobool22 = icmp eq i8 %and21, 0
  br i1 %tobool22, label %if.end34, label %if.then23

if.then23:                                        ; preds = %land.lhs.true19
  %or = or i8 %6, 64
  store i8 %or, i8* %op_flags, align 1, !tbaa !1
  %call27 = tail call %struct.op* @Perl_scalar(%struct.op* %kid.1) #8
  %call28 = tail call %struct.op* @Perl_newUNOP(i32 14, i32 16, %struct.op* %call27) #8
  %10 = getelementptr inbounds %struct.op* %o.addr.0, i64 1, i32 0
  %11 = load %struct.op** %10, align 8, !tbaa !3
  %op_sibling30 = getelementptr inbounds %struct.op* %11, i64 0, i32 1
  store %struct.op* %call28, %struct.op** %op_sibling30, align 8, !tbaa !3
  %12 = getelementptr inbounds %struct.op* %o.addr.0, i64 1, i32 1
  store %struct.op* %call28, %struct.op** %12, align 8, !tbaa !3
  %op_sibling31 = getelementptr inbounds %struct.op* %call28, i64 0, i32 1
  %13 = load %struct.op** %op_sibling31, align 8, !tbaa !3
  br label %if.end34

if.end34:                                         ; preds = %land.lhs.true, %land.lhs.true19, %if.then23
  %kid.2 = phi %struct.op* [ %13, %if.then23 ], [ %kid.1, %land.lhs.true19 ], [ %7, %land.lhs.true ]
  %tobool35 = icmp eq %struct.op* %kid.2, null
  br i1 %tobool35, label %if.then36, label %if.end41

if.then36:                                        ; preds = %if.end4, %if.end34
  %op_type37 = getelementptr inbounds %struct.op* %o.addr.0, i64 0, i32 4
  %14 = load i16* %op_type37, align 2, !tbaa !4
  %conv38 = zext i16 %14 to i32
  %15 = load %struct.gv** @PL_defgv, align 8, !tbaa !3
  %16 = bitcast %struct.gv* %15 to %struct.sv*
  store %struct.sv* %16, %struct.sv** @PL_Sv, align 8, !tbaa !3
  %tobool.i = icmp eq %struct.gv* %15, null
  br i1 %tobool.i, label %Perl_newGVOP.exit, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.then36
  %17 = getelementptr inbounds %struct.gv* %15, i64 0, i32 1
  %18 = load i32* %17, align 4, !tbaa !0
  %inc.i = add i32 %18, 1
  store i32 %inc.i, i32* %17, align 4, !tbaa !0
  br label %Perl_newGVOP.exit

Perl_newGVOP.exit:                                ; preds = %if.then36, %land.rhs.i
  %call.i65 = tail call %struct.op* @Perl_newSVOP(i32 7, i32 0, %struct.sv* %16) #7
  %call1.i = tail call %struct.op* @Perl_newSVREF(%struct.op* %call.i65) #7
  %call40 = tail call %struct.op* @Perl_append_elem(i32 %conv38, %struct.op* %o.addr.0, %struct.op* %call1.i) #8
  br label %if.end41

if.end41:                                         ; preds = %if.then14, %land.lhs.true11, %if.end34, %Perl_newGVOP.exit
  %call42 = tail call %struct.op* @Perl_listkids(%struct.op* %o.addr.0) #8
  ret %struct.op* %call42
}
