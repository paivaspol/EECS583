define internal void @const_sv_xsub(%struct.cv* nocapture %cv) #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !3
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !3
  %2 = load i32** @PL_markstack_ptr, align 8, !tbaa !3
  %incdec.ptr = getelementptr inbounds i32* %2, i64 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !3
  %3 = load i32* %2, align 4, !tbaa !0
  %idx.ext25 = zext i32 %3 to i64
  %add.ptr.idx = shl nuw i64 %idx.ext25, 32
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %4 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !3
  %sub.ptr.lhs.cast7 = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.sub9 = sub i64 %sub.ptr.lhs.cast7, %sub.ptr.lhs.cast1
  %cmp11 = icmp slt i64 %sub.ptr.sub9, 8
  br i1 %cmp11, label %if.then13, label %if.end14

if.then13:                                        ; preds = %entry
  %call = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %0, %struct.sv** %0, i32 1) #7
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !3
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %entry
  %5 = phi %struct.sv** [ %.pre, %if.then13 ], [ %1, %entry ]
  %sv_any = getelementptr inbounds %struct.cv* %cv, i64 0, i32 0
  %6 = load %struct.xpvcv** %sv_any, align 8, !tbaa !3
  %any_ptr = getelementptr inbounds %struct.xpvcv* %6, i64 0, i32 11, i32 0
  %7 = load i8** %any_ptr, align 8, !tbaa !3
  %8 = bitcast i8* %7 to %struct.sv*
  %sext = add i64 %add.ptr.idx, 4294967296
  %idxprom = ashr exact i64 %sext, 32
  %arrayidx = getelementptr inbounds %struct.sv** %5, i64 %idxprom
  store %struct.sv* %8, %struct.sv** %arrayidx, align 8, !tbaa !3
  %9 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !3
  %add.ptr17 = getelementptr inbounds %struct.sv** %9, i64 %idxprom
  store %struct.sv** %add.ptr17, %struct.sv*** @PL_stack_sp, align 8, !tbaa !3
  ret void
}
