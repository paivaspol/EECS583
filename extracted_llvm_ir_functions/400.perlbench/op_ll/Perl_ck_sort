define %struct.op* @Perl_ck_sort(%struct.op* %o) #0 {
entry:
  %op_type = getelementptr inbounds %struct.op* %o, i64 0, i32 4
  %0 = load i16* %op_type, align 2, !tbaa !4
  %cmp = icmp eq i16 %0, 150
  %op_flags = getelementptr inbounds %struct.op* %o, i64 0, i32 6
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i8* %op_flags, align 1, !tbaa !1
  %and = and i8 %1, 64
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %if.end, label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true
  %2 = getelementptr inbounds %struct.op* %o, i64 1, i32 0
  %3 = load %struct.op** %2, align 8, !tbaa !3
  %op_sibling.i = getelementptr inbounds %struct.op* %3, i64 0, i32 1
  %4 = load %struct.op** %op_sibling.i, align 8, !tbaa !3
  %call.i = tail call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([2 x i8]* @.str140, i64 0, i64 0), i32 1, i32 4) #7
  %sv_any.i = getelementptr inbounds %struct.gv* %call.i, i64 0, i32 0
  %5 = load %struct.xpvgv** %sv_any.i, align 8, !tbaa !3
  %xgv_flags.i = getelementptr inbounds %struct.xpvgv* %5, i64 0, i32 11
  %6 = load i8* %xgv_flags.i, align 1, !tbaa !1
  %or.i = or i8 %6, 2
  store i8 %or.i, i8* %xgv_flags.i, align 1, !tbaa !1
  %call3.i = tail call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([2 x i8]* @.str141, i64 0, i64 0), i32 1, i32 4) #7
  %sv_any4.i = getelementptr inbounds %struct.gv* %call3.i, i64 0, i32 0
  %7 = load %struct.xpvgv** %sv_any4.i, align 8, !tbaa !3
  %xgv_flags5.i = getelementptr inbounds %struct.xpvgv* %7, i64 0, i32 11
  %8 = load i8* %xgv_flags5.i, align 1, !tbaa !1
  %or7.i = or i8 %8, 2
  store i8 %or7.i, i8* %xgv_flags5.i, align 1, !tbaa !1
  %9 = getelementptr inbounds %struct.op* %4, i64 1, i32 0
  %10 = load %struct.op** %9, align 8, !tbaa !3
  %op_type.i = getelementptr inbounds %struct.op* %10, i64 0, i32 4
  %11 = load i16* %op_type.i, align 2, !tbaa !4
  %cmp.i = icmp eq i16 %11, 179
  br i1 %cmp.i, label %if.end13.i, label %if.end

if.end13.i:                                       ; preds = %if.end.i
  %12 = getelementptr inbounds %struct.op* %10, i64 1, i32 1
  %13 = load %struct.op** %12, align 8, !tbaa !3
  %op_type14.i = getelementptr inbounds %struct.op* %13, i64 0, i32 4
  %14 = load i16* %op_type14.i, align 2, !tbaa !4
  %conv15.i = zext i16 %14 to i32
  switch i32 %conv15.i, label %if.end [
    i32 82, label %sw.epilog.i
    i32 83, label %sw.epilog.i
    i32 90, label %sw.epilog.i
  ]

sw.epilog.i:                                      ; preds = %if.end13.i, %if.end13.i, %if.end13.i
  %15 = getelementptr inbounds %struct.op* %13, i64 1, i32 0
  %16 = load %struct.op** %15, align 8, !tbaa !3
  %op_type17.i = getelementptr inbounds %struct.op* %16, i64 0, i32 4
  %17 = load i16* %op_type17.i, align 2, !tbaa !4
  %cmp19.i = icmp eq i16 %17, 15
  br i1 %cmp19.i, label %if.end22.i, label %if.end

if.end22.i:                                       ; preds = %sw.epilog.i
  %18 = getelementptr inbounds %struct.op* %16, i64 1, i32 0
  %19 = load %struct.op** %18, align 8, !tbaa !3
  %op_type25.i = getelementptr inbounds %struct.op* %19, i64 0, i32 4
  %20 = load i16* %op_type25.i, align 2, !tbaa !4
  %cmp27.i = icmp eq i16 %20, 7
  br i1 %cmp27.i, label %if.end30.i, label %if.end

if.end30.i:                                       ; preds = %if.end22.i
  %op_sv.i = getelementptr inbounds %struct.op* %19, i64 1
  %21 = bitcast %struct.op* %op_sv.i to %struct.sv**
  %22 = load %struct.sv** %21, align 8, !tbaa !3
  %sv_any32.i = bitcast %struct.sv* %22 to %struct.xpvgv**
  %23 = load %struct.xpvgv** %sv_any32.i, align 8, !tbaa !3
  %xgv_stash.i = getelementptr inbounds %struct.xpvgv* %23, i64 0, i32 10
  %24 = load %struct.hv** %xgv_stash.i, align 8, !tbaa !3
  %25 = load %struct.hv** @PL_curstash, align 8, !tbaa !3
  %cmp33.i = icmp eq %struct.hv* %24, %25
  br i1 %cmp33.i, label %if.end36.i, label %if.end

if.end36.i:                                       ; preds = %if.end30.i
  %xgv_name.i = getelementptr inbounds %struct.xpvgv* %23, i64 0, i32 8
  %26 = load i8** %xgv_name.i, align 8, !tbaa !3
  %27 = load i8* %26, align 1, !tbaa !1
  switch i8 %27, label %if.end [
    i8 97, label %land.lhs.true.i
    i8 98, label %land.lhs.true48.i
  ]

land.lhs.true.i:                                  ; preds = %if.end36.i
  %arrayidx.i = getelementptr inbounds i8* %26, i64 1
  %28 = load i8* %arrayidx.i, align 1, !tbaa !1
  %cmp42.i = icmp eq i8 %28, 0
  br i1 %cmp42.i, label %if.end56.i, label %if.end

land.lhs.true48.i:                                ; preds = %if.end36.i
  %arrayidx49.i = getelementptr inbounds i8* %26, i64 1
  %29 = load i8* %arrayidx49.i, align 1, !tbaa !1
  %cmp51.i = icmp eq i8 %29, 0
  br i1 %cmp51.i, label %if.end56.i, label %if.end

if.end56.i:                                       ; preds = %land.lhs.true48.i, %land.lhs.true.i
  %descending.0.i = phi i32 [ 0, %land.lhs.true.i ], [ 1, %land.lhs.true48.i ]
  %30 = getelementptr inbounds %struct.op* %13, i64 1, i32 1
  %31 = load %struct.op** %30, align 8, !tbaa !3
  %op_type58.i = getelementptr inbounds %struct.op* %31, i64 0, i32 4
  %32 = load i16* %op_type58.i, align 2, !tbaa !4
  %cmp60.i = icmp eq i16 %32, 15
  br i1 %cmp60.i, label %if.end63.i, label %if.end

if.end63.i:                                       ; preds = %if.end56.i
  %33 = getelementptr inbounds %struct.op* %31, i64 1, i32 0
  %34 = load %struct.op** %33, align 8, !tbaa !3
  %op_type66.i = getelementptr inbounds %struct.op* %34, i64 0, i32 4
  %35 = load i16* %op_type66.i, align 2, !tbaa !4
  %cmp68.i = icmp eq i16 %35, 7
  br i1 %cmp68.i, label %if.end71.i, label %if.end

if.end71.i:                                       ; preds = %if.end63.i
  %op_sv73.i = getelementptr inbounds %struct.op* %34, i64 1
  %36 = bitcast %struct.op* %op_sv73.i to %struct.sv**
  %37 = load %struct.sv** %36, align 8, !tbaa !3
  %sv_any74.i = bitcast %struct.sv* %37 to %struct.xpvgv**
  %38 = load %struct.xpvgv** %sv_any74.i, align 8, !tbaa !3
  %xgv_stash75.i = getelementptr inbounds %struct.xpvgv* %38, i64 0, i32 10
  %39 = load %struct.hv** %xgv_stash75.i, align 8, !tbaa !3
  %cmp76.i = icmp eq %struct.hv* %39, %24
  br i1 %cmp76.i, label %if.end79.i, label %if.end

if.end79.i:                                       ; preds = %if.end71.i
  %xgv_name81.i = getelementptr inbounds %struct.xpvgv* %38, i64 0, i32 8
  %40 = load i8** %xgv_name81.i, align 8, !tbaa !3
  %tobool82.i = icmp ne i32 %descending.0.i, 0
  %41 = load i8* %40, align 1, !tbaa !1
  br i1 %tobool82.i, label %cond.true.i, label %cond.false.i

cond.true.i:                                      ; preds = %if.end79.i
  %cmp84.i = icmp eq i8 %41, 97
  br i1 %cmp84.i, label %land.lhs.true86.i, label %if.end

land.lhs.true86.i:                                ; preds = %cond.true.i
  %arrayidx87.i = getelementptr inbounds i8* %40, i64 1
  %42 = load i8* %arrayidx87.i, align 1, !tbaa !1
  %cmp89.i = icmp eq i8 %42, 0
  br i1 %cmp89.i, label %if.end100.i, label %if.end

cond.false.i:                                     ; preds = %if.end79.i
  %cmp92.i = icmp eq i8 %41, 98
  br i1 %cmp92.i, label %land.lhs.true94.i, label %if.end

land.lhs.true94.i:                                ; preds = %cond.false.i
  %arrayidx95.i = getelementptr inbounds i8* %40, i64 1
  %43 = load i8* %arrayidx95.i, align 1, !tbaa !1
  %cmp97.i = icmp eq i8 %43, 0
  br i1 %cmp97.i, label %if.end100.i, label %if.end

if.end100.i:                                      ; preds = %land.lhs.true94.i, %land.lhs.true86.i
  %44 = load i8* %op_flags, align 1, !tbaa !1
  %and103.i = and i8 %44, 63
  store i8 %and103.i, i8* %op_flags, align 1, !tbaa !1
  br i1 %tobool82.i, label %if.then106.i, label %if.end110.i

if.then106.i:                                     ; preds = %if.end100.i
  %op_private.i = getelementptr inbounds %struct.op* %o, i64 0, i32 7
  %45 = load i8* %op_private.i, align 1, !tbaa !1
  %or108.i = or i8 %45, 16
  store i8 %or108.i, i8* %op_private.i, align 1, !tbaa !1
  br label %if.end110.i

if.end110.i:                                      ; preds = %if.then106.i, %if.end100.i
  %46 = load i16* %op_type14.i, align 2, !tbaa !4
  %cmp113.i = icmp eq i16 %46, 82
  br i1 %cmp113.i, label %if.then115.i, label %if.end120.i

if.then115.i:                                     ; preds = %if.end110.i
  %op_private116.i = getelementptr inbounds %struct.op* %o, i64 0, i32 7
  %47 = load i8* %op_private116.i, align 1, !tbaa !1
  %or118.i = or i8 %47, 1
  store i8 %or118.i, i8* %op_private116.i, align 1, !tbaa !1
  %.pr171.i = load i16* %op_type14.i, align 2, !tbaa !4
  br label %if.end120.i

if.end120.i:                                      ; preds = %if.then115.i, %if.end110.i
  %48 = phi i16 [ %.pr171.i, %if.then115.i ], [ %46, %if.end110.i ]
  %cmp123.i = icmp eq i16 %48, 83
  br i1 %cmp123.i, label %if.then125.i, label %if.end130.i

if.then125.i:                                     ; preds = %if.end120.i
  %op_private126.i = getelementptr inbounds %struct.op* %o, i64 0, i32 7
  %49 = load i8* %op_private126.i, align 1, !tbaa !1
  %or128.i = or i8 %49, 3
  store i8 %or128.i, i8* %op_private126.i, align 1, !tbaa !1
  br label %if.end130.i

if.end130.i:                                      ; preds = %if.then125.i, %if.end120.i
  %50 = load %struct.op** %2, align 8, !tbaa !3
  %op_sibling132.i = getelementptr inbounds %struct.op* %50, i64 0, i32 1
  %51 = load %struct.op** %op_sibling132.i, align 8, !tbaa !3
  %op_sibling133.i = getelementptr inbounds %struct.op* %51, i64 0, i32 1
  %52 = load %struct.op** %op_sibling133.i, align 8, !tbaa !3
  store %struct.op* %52, %struct.op** %op_sibling132.i, align 8, !tbaa !3
  tail call void @Perl_op_free(%struct.op* %51) #7
  br label %if.end

if.end:                                           ; preds = %entry, %land.lhs.true94.i, %cond.false.i, %land.lhs.true86.i, %cond.true.i, %if.end71.i, %if.end63.i, %if.end56.i, %land.lhs.true48.i, %land.lhs.true.i, %if.end36.i, %if.end30.i, %if.end22.i, %sw.epilog.i, %if.end13.i, %if.end.i, %if.end130.i, %land.lhs.true
  %53 = getelementptr inbounds %struct.op* %o, i64 1, i32 0
  %54 = load %struct.op** %53, align 8, !tbaa !3
  %op_sibling = getelementptr inbounds %struct.op* %54, i64 0, i32 1
  %55 = load %struct.op** %op_sibling, align 8, !tbaa !3
  %56 = load i8* %op_flags, align 1, !tbaa !1
  %and5 = and i8 %56, 64
  %tobool6 = icmp eq i8 %and5, 0
  br i1 %tobool6, label %if.end90, label %if.then7

if.then7:                                         ; preds = %if.end
  %57 = getelementptr inbounds %struct.op* %55, i64 1, i32 0
  %58 = load %struct.op** %57, align 8, !tbaa !3
  %op_type9 = getelementptr inbounds %struct.op* %58, i64 0, i32 4
  %59 = load i16* %op_type9, align 2, !tbaa !4
  switch i16 %59, label %if.end88 [
    i16 179, label %if.then17
    i16 178, label %if.then17
    i16 15, label %if.then86
    i16 9, label %if.then86
  ]

if.then17:                                        ; preds = %if.then7, %if.then7
  %call = tail call %struct.op* @Perl_linklist(%struct.op* %58) #8
  %60 = load i16* %op_type9, align 2, !tbaa !4
  switch i16 %60, label %if.end62 [
    i16 179, label %if.then22
    i16 178, label %if.then28
  ]

if.then22:                                        ; preds = %if.then17
  %op_next = getelementptr inbounds %struct.op* %58, i64 0, i32 0
  %61 = load %struct.op** %op_next, align 8, !tbaa !3
  store %struct.op* null, %struct.op** %op_next, align 8, !tbaa !3
  br label %if.end62

if.then28:                                        ; preds = %if.then17
  %62 = load i16* %op_type, align 2, !tbaa !4
  %cmp31 = icmp eq i16 %62, 150
  br i1 %cmp31, label %if.then33, label %if.else57

if.then33:                                        ; preds = %if.then28
  tail call void @Perl_op_null(%struct.op* %58) #8
  %op_next34 = getelementptr inbounds %struct.op* %58, i64 0, i32 0
  store %struct.op* %58, %struct.op** %op_next34, align 8, !tbaa !3
  %63 = getelementptr inbounds %struct.op* %58, i64 1, i32 0
  %64 = load %struct.op** %63, align 8, !tbaa !3
  %k.0.in135 = getelementptr inbounds %struct.op* %64, i64 0, i32 0
  %k.0136 = load %struct.op** %k.0.in135, align 8
  %tobool37137 = icmp eq %struct.op* %k.0136, null
  br i1 %tobool37137, label %if.end59, label %for.body

for.body:                                         ; preds = %if.then33, %for.cond.backedge
  %k.0138 = phi %struct.op* [ %k.0, %for.cond.backedge ], [ %k.0136, %if.then33 ]
  %op_next38 = getelementptr inbounds %struct.op* %k.0138, i64 0, i32 0
  %65 = load %struct.op** %op_next38, align 8, !tbaa !3
  %cmp39 = icmp eq %struct.op* %65, %58
  br i1 %cmp39, label %for.cond.backedge.thread, label %if.else43

for.cond.backedge.thread:                         ; preds = %for.body
  store %struct.op* null, %struct.op** %op_next38, align 8, !tbaa !3
  br label %if.end59

if.else43:                                        ; preds = %for.body
  %op_type44 = getelementptr inbounds %struct.op* %k.0138, i64 0, i32 4
  %66 = load i16* %op_type44, align 2, !tbaa !4
  switch i16 %66, label %for.cond.backedge [
    i16 182, label %if.then53
    i16 180, label %if.then53
  ]

for.cond.backedge:                                ; preds = %if.else43, %if.then53
  %k.0 = phi %struct.op* [ %k.0.pre, %if.then53 ], [ %65, %if.else43 ]
  %tobool37 = icmp eq %struct.op* %k.0, null
  br i1 %tobool37, label %if.end59, label %for.body

if.then53:                                        ; preds = %if.else43, %if.else43
  %op_lastop = getelementptr inbounds %struct.op* %k.0138, i64 1, i32 4
  %67 = bitcast i16* %op_lastop to %struct.op**
  %68 = load %struct.op** %67, align 8, !tbaa !3
  %k.0.in.phi.trans.insert = getelementptr inbounds %struct.op* %68, i64 0, i32 0
  %k.0.pre = load %struct.op** %k.0.in.phi.trans.insert, align 8
  br label %for.cond.backedge

if.else57:                                        ; preds = %if.then28
  %op_next58 = getelementptr inbounds %struct.op* %58, i64 0, i32 0
  store %struct.op* null, %struct.op** %op_next58, align 8, !tbaa !3
  %.pre = getelementptr inbounds %struct.op* %58, i64 1, i32 0
  br label %if.end59

if.end59:                                         ; preds = %if.then33, %for.cond.backedge.thread, %for.cond.backedge, %if.else57
  %.pre-phi = phi %struct.op** [ %.pre, %if.else57 ], [ %63, %for.cond.backedge ], [ %63, %for.cond.backedge.thread ], [ %63, %if.then33 ]
  %69 = load %struct.op** %.pre-phi, align 8, !tbaa !3
  br label %if.end62

if.end62:                                         ; preds = %if.then17, %if.end59, %if.then22
  %k.2 = phi %struct.op* [ %61, %if.then22 ], [ %69, %if.end59 ], [ null, %if.then17 ]
  %70 = load void (%struct.op*)** @PL_peepp, align 8, !tbaa !3
  tail call void %70(%struct.op* %k.2) #7
  %71 = load i16* %op_type, align 2, !tbaa !4
  %cmp65 = icmp eq i16 %71, 150
  br i1 %cmp65, label %if.then67, label %if.else70

if.then67:                                        ; preds = %if.end62
  %call68 = tail call %struct.op* @Perl_scalar(%struct.op* %55) #8
  %op_next69 = getelementptr inbounds %struct.op* %call68, i64 0, i32 0
  store %struct.op* %call68, %struct.op** %op_next69, align 8, !tbaa !3
  br label %if.end72

if.else70:                                        ; preds = %if.end62
  %op_next71 = getelementptr inbounds %struct.op* %55, i64 0, i32 0
  store %struct.op* %k.2, %struct.op** %op_next71, align 8, !tbaa !3
  br label %if.end72

if.end72:                                         ; preds = %if.else70, %if.then67
  %72 = load i8* %op_flags, align 1, !tbaa !1
  %or = or i8 %72, -128
  store i8 %or, i8* %op_flags, align 1, !tbaa !1
  br label %if.end88

if.then86:                                        ; preds = %if.then7, %if.then7
  tail call void @Perl_op_null(%struct.op* %55) #8
  br label %if.end88

if.end88:                                         ; preds = %if.then7, %if.then86, %if.end72
  %op_sibling89 = getelementptr inbounds %struct.op* %55, i64 0, i32 1
  %73 = load %struct.op** %op_sibling89, align 8, !tbaa !3
  br label %if.end90

if.end90:                                         ; preds = %if.end, %if.end88
  %firstkid.0 = phi %struct.op* [ %73, %if.end88 ], [ %55, %if.end ]
  %74 = load i16* %op_type, align 2, !tbaa !4
  %cmp93 = icmp eq i16 %74, 150
  br i1 %cmp93, label %if.then95, label %if.end97

if.then95:                                        ; preds = %if.end90
  %call96 = tail call %struct.op* @Perl_list(%struct.op* %firstkid.0) #8
  br label %if.end97

if.end97:                                         ; preds = %if.then95, %if.end90
  ret %struct.op* %o
}
