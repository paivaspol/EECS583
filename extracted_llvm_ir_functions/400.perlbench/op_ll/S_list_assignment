define internal fastcc i32 @S_list_assignment(%struct.op* %o) #0 {
entry:
  %tobool = icmp eq %struct.op* %o, null
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %op_type = getelementptr inbounds %struct.op* %o, i64 0, i32 4
  %0 = load i16* %op_type, align 2, !tbaa !4
  %cmp = icmp eq i16 %0, 0
  br i1 %cmp, label %land.lhs.true, label %if.end5

land.lhs.true:                                    ; preds = %if.end
  %op_flags = getelementptr inbounds %struct.op* %o, i64 0, i32 6
  %1 = load i8* %op_flags, align 1, !tbaa !1
  %and = and i8 %1, 4
  %tobool3 = icmp eq i8 %and, 0
  br i1 %tobool3, label %lor.lhs.false47, label %if.then4

if.then4:                                         ; preds = %land.lhs.true
  %2 = getelementptr inbounds %struct.op* %o, i64 1, i32 0
  %3 = load %struct.op** %2, align 8, !tbaa !3
  %op_type6.phi.trans.insert = getelementptr inbounds %struct.op* %3, i64 0, i32 4
  %.pre = load i16* %op_type6.phi.trans.insert, align 2, !tbaa !4
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end
  %.pr = phi i16 [ %.pre, %if.then4 ], [ %0, %if.end ]
  %o.addr.0 = phi %struct.op* [ %3, %if.then4 ], [ %o, %if.end ]
  switch i16 %.pr, label %lor.lhs.false47 [
    i16 162, label %if.then10
    i16 141, label %land.lhs.true31
  ]

if.then10:                                        ; preds = %if.end5
  %4 = getelementptr inbounds %struct.op* %o.addr.0, i64 1, i32 0
  %5 = load %struct.op** %4, align 8, !tbaa !3
  %op_sibling = getelementptr inbounds %struct.op* %5, i64 0, i32 1
  %6 = load %struct.op** %op_sibling, align 8, !tbaa !3
  %call = tail call fastcc i32 @S_list_assignment(%struct.op* %6) #8
  %7 = load %struct.op** %4, align 8, !tbaa !3
  %op_sibling13 = getelementptr inbounds %struct.op* %7, i64 0, i32 1
  %8 = load %struct.op** %op_sibling13, align 8, !tbaa !3
  %op_sibling14 = getelementptr inbounds %struct.op* %8, i64 0, i32 1
  %9 = load %struct.op** %op_sibling14, align 8, !tbaa !3
  %call15 = tail call fastcc i32 @S_list_assignment(%struct.op* %9) #8
  %tobool16.not = icmp eq i32 %call, 0
  %tobool18 = icmp eq i32 %call15, 0
  %or.cond = or i1 %tobool16.not, %tobool18
  br i1 %or.cond, label %if.end20, label %return

if.end20:                                         ; preds = %if.then10
  %10 = or i32 %call15, %call
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %return, label %if.then23

if.then23:                                        ; preds = %if.end20
  %call24 = tail call i32 @Perl_yyerror(i8* getelementptr inbounds ([39 x i8]* @.str152, i64 0, i64 0)) #7
  br label %return

land.lhs.true31:                                  ; preds = %if.end5
  %op_flags32 = getelementptr inbounds %struct.op* %o.addr.0, i64 0, i32 6
  %12 = load i8* %op_flags32, align 1, !tbaa !1
  %and34 = and i8 %12, 3
  %cmp35 = icmp eq i8 %and34, 2
  br i1 %cmp35, label %land.lhs.true37, label %if.end42

land.lhs.true37:                                  ; preds = %land.lhs.true31
  %op_private = getelementptr inbounds %struct.op* %o.addr.0, i64 0, i32 7
  %13 = load i8* %op_private, align 1, !tbaa !1
  %tobool40 = icmp slt i8 %13, 0
  br i1 %tobool40, label %return, label %if.end42

if.end42:                                         ; preds = %land.lhs.true37, %land.lhs.true31
  br label %return

lor.lhs.false47:                                  ; preds = %land.lhs.true, %if.end5
  %o.addr.0118 = phi %struct.op* [ %o.addr.0, %if.end5 ], [ %o, %land.lhs.true ]
  %.pr117 = phi i16 [ %.pr, %if.end5 ], [ 0, %land.lhs.true ]
  %op_flags48.phi.trans.insert = getelementptr inbounds %struct.op* %o.addr.0118, i64 0, i32 6
  %.pre116 = load i8* %op_flags48.phi.trans.insert, align 1, !tbaa !1
  %and50 = and i8 %.pre116, 8
  %tobool51 = icmp eq i8 %and50, 0
  br i1 %tobool51, label %switch.early.test, label %return

switch.early.test:                                ; preds = %lor.lhs.false47
  switch i16 %.pr117, label %if.end84 [
    i16 136, label %return
    i16 134, label %return
    i16 128, label %return
    i16 125, label %return
    i16 10, label %return
    i16 11, label %return
  ]

if.end84:                                         ; preds = %switch.early.test
  br label %return

return:                                           ; preds = %if.end42, %lor.lhs.false47, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %land.lhs.true37, %if.then23, %if.end20, %if.then10, %entry, %if.end84
  %retval.0 = phi i32 [ 0, %if.end84 ], [ 1, %entry ], [ 1, %if.then10 ], [ 0, %if.end20 ], [ 0, %if.then23 ], [ 0, %land.lhs.true37 ], [ 1, %switch.early.test ], [ 1, %if.end42 ], [ 1, %lor.lhs.false47 ], [ 1, %switch.early.test ], [ 1, %switch.early.test ], [ 1, %switch.early.test ], [ 1, %switch.early.test ], [ 1, %switch.early.test ]
  ret i32 %retval.0
}
