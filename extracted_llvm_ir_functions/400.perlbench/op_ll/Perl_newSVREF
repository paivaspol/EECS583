define %struct.op* @Perl_newSVREF(%struct.op* %o) #0 {
entry:
  %op_type = getelementptr inbounds %struct.op* %o, i64 0, i32 4
  %0 = load i16* %op_type, align 2, !tbaa !4
  switch i16 %0, label %if.end12 [
    i16 12, label %if.then
    i16 348, label %land.lhs.true
  ]

if.then:                                          ; preds = %entry
  store i16 9, i16* %op_type, align 2, !tbaa !4
  %1 = load %struct.op* ()** getelementptr inbounds ([0 x %struct.op* ()*]* @PL_ppaddr, i64 0, i64 9), align 8, !tbaa !3
  %op_ppaddr = getelementptr inbounds %struct.op* %o, i64 0, i32 2
  store %struct.op* ()* %1, %struct.op* ()** %op_ppaddr, align 8, !tbaa !3
  br label %return

land.lhs.true:                                    ; preds = %entry
  %op_flags = getelementptr inbounds %struct.op* %o, i64 0, i32 6
  %2 = load i8* %op_flags, align 1, !tbaa !1
  %and = and i8 %2, 64
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %if.then8, label %if.end12

if.then8:                                         ; preds = %land.lhs.true
  %or = or i8 %2, 64
  store i8 %or, i8* %op_flags, align 1, !tbaa !1
  br label %return

if.end12:                                         ; preds = %entry, %land.lhs.true
  %call = tail call %struct.op* @Perl_scalar(%struct.op* %o) #8
  %call13 = tail call %struct.op* @Perl_newUNOP(i32 15, i32 0, %struct.op* %call) #8
  br label %return

return:                                           ; preds = %if.end12, %if.then8, %if.then
  %retval.0 = phi %struct.op* [ %o, %if.then ], [ %call13, %if.end12 ], [ %o, %if.then8 ]
  ret %struct.op* %retval.0
}
