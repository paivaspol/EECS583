define %struct.op* @Perl_append_list(i32 %type, %struct.listop* %first, %struct.listop* %last) #0 {
entry:
  %tobool = icmp eq %struct.listop* %first, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = bitcast %struct.listop* %last to %struct.op*
  br label %return

if.end:                                           ; preds = %entry
  %tobool1 = icmp eq %struct.listop* %last, null
  br i1 %tobool1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %1 = bitcast %struct.listop* %first to %struct.op*
  br label %return

if.end3:                                          ; preds = %if.end
  %op_type = getelementptr inbounds %struct.listop* %first, i64 0, i32 4
  %2 = load i16* %op_type, align 2, !tbaa !4
  %conv = zext i16 %2 to i32
  %cmp = icmp eq i32 %conv, %type
  br i1 %cmp, label %if.end6, label %if.then5

if.then5:                                         ; preds = %if.end3
  %3 = bitcast %struct.listop* %first to %struct.op*
  %4 = bitcast %struct.listop* %last to %struct.op*
  %call = tail call %struct.op* @Perl_prepend_elem(i32 %type, %struct.op* %3, %struct.op* %4) #8
  br label %return

if.end6:                                          ; preds = %if.end3
  %op_type7 = getelementptr inbounds %struct.listop* %last, i64 0, i32 4
  %5 = load i16* %op_type7, align 2, !tbaa !4
  %conv8 = zext i16 %5 to i32
  %cmp9 = icmp eq i32 %conv8, %type
  br i1 %cmp9, label %if.end13, label %if.then11

if.then11:                                        ; preds = %if.end6
  %6 = bitcast %struct.listop* %first to %struct.op*
  %7 = bitcast %struct.listop* %last to %struct.op*
  %call12 = tail call %struct.op* @Perl_append_elem(i32 %type, %struct.op* %6, %struct.op* %7) #8
  br label %return

if.end13:                                         ; preds = %if.end6
  %op_first = getelementptr inbounds %struct.listop* %last, i64 0, i32 8
  %8 = load %struct.op** %op_first, align 8, !tbaa !3
  %op_last = getelementptr inbounds %struct.listop* %first, i64 0, i32 9
  %9 = load %struct.op** %op_last, align 8, !tbaa !3
  %op_sibling = getelementptr inbounds %struct.op* %9, i64 0, i32 1
  store %struct.op* %8, %struct.op** %op_sibling, align 8, !tbaa !3
  %op_last14 = getelementptr inbounds %struct.listop* %last, i64 0, i32 9
  %10 = load %struct.op** %op_last14, align 8, !tbaa !3
  store %struct.op* %10, %struct.op** %op_last, align 8, !tbaa !3
  %op_flags = getelementptr inbounds %struct.listop* %last, i64 0, i32 6
  %11 = load i8* %op_flags, align 1, !tbaa !1
  %and = and i8 %11, 4
  %op_flags17 = getelementptr inbounds %struct.listop* %first, i64 0, i32 6
  %12 = load i8* %op_flags17, align 1, !tbaa !1
  %or = or i8 %12, %and
  store i8 %or, i8* %op_flags17, align 1, !tbaa !1
  %13 = bitcast %struct.listop* %last to i8*
  tail call void @Perl_safesysfree(i8* %13) #7
  %14 = bitcast %struct.listop* %first to %struct.op*
  br label %return

return:                                           ; preds = %if.end13, %if.then11, %if.then5, %if.then2, %if.then
  %retval.0 = phi %struct.op* [ %call, %if.then5 ], [ %call12, %if.then11 ], [ %14, %if.end13 ], [ %1, %if.then2 ], [ %0, %if.then ]
  ret %struct.op* %retval.0
}
