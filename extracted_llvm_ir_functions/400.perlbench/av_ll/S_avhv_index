define internal fastcc i32 @S_avhv_index(%struct.av* %av, %struct.sv* %keysv, i32 %hash) #0 {
entry:
  %n_a = alloca i64, align 8
  %call = call %struct.hv* @Perl_avhv_keys(%struct.av* %av) #4
  %call1 = call %struct.he* @Perl_hv_fetch_ent(%struct.hv* %call, %struct.sv* %keysv, i32 0, i32 %hash) #3
  %tobool = icmp eq %struct.he* %call1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %sv_flags = getelementptr inbounds %struct.sv* %keysv, i64 0, i32 2
  %0 = load i32* %sv_flags, align 4, !tbaa !4
  %and = and i32 %0, 262144
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then
  %sv_any = getelementptr inbounds %struct.sv* %keysv, i64 0, i32 0
  %1 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %1, i64 8
  %2 = bitcast i8* %xpv_cur to i64*
  %3 = load i64* %2, align 8, !tbaa !3
  store i64 %3, i64* %n_a, align 8, !tbaa !3
  %xpv_pv = bitcast i8* %1 to i8**
  %4 = load i8** %xpv_pv, align 8, !tbaa !0
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %call3 = call i8* @Perl_sv_2pv_flags(%struct.sv* %keysv, i64* %n_a, i32 2) #3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %4, %cond.true ], [ %call3, %cond.false ]
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([31 x i8]* @.str13, i64 0, i64 0), i8* %cond) #3
  br label %if.end

if.end:                                           ; preds = %entry, %cond.end
  %hent_val = getelementptr inbounds %struct.he* %call1, i64 0, i32 2
  %5 = load %struct.sv** %hent_val, align 8, !tbaa !0
  %call4 = call fastcc i32 @S_avhv_index_sv(%struct.sv* %5) #4
  ret i32 %call4
}
