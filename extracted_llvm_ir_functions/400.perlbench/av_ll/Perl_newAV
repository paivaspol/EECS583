define %struct.av* @Perl_newAV() #0 {
entry:
  %call = tail call %struct.sv* @Perl_newSV(i64 0) #3
  %0 = bitcast %struct.sv* %call to %struct.av*
  %call1 = tail call signext i8 @Perl_sv_upgrade(%struct.sv* %call, i32 10) #3
  %sv_any = bitcast %struct.sv* %call to %struct.xpvav**
  %1 = load %struct.xpvav** %sv_any, align 8, !tbaa !0
  %xav_flags = getelementptr inbounds %struct.xpvav* %1, i64 0, i32 9
  %2 = load i8* %xav_flags, align 1, !tbaa !1
  %or = or i8 %2, 1
  store i8 %or, i8* %xav_flags, align 1, !tbaa !1
  %3 = load %struct.xpvav** %sv_any, align 8, !tbaa !0
  %xav_alloc = getelementptr inbounds %struct.xpvav* %3, i64 0, i32 7
  store %struct.sv** null, %struct.sv*** %xav_alloc, align 8, !tbaa !0
  %4 = load %struct.xpvav** %sv_any, align 8, !tbaa !0
  %xpv_pv = getelementptr inbounds %struct.xpvav* %4, i64 0, i32 0
  store i8* null, i8** %xpv_pv, align 8, !tbaa !0
  %5 = load %struct.xpvav** %sv_any, align 8, !tbaa !0
  %xav_fill = getelementptr inbounds %struct.xpvav* %5, i64 0, i32 1
  %6 = bitcast i64* %xav_fill to i8*
  call void @llvm.memset.p0i8.i64(i8* %6, i8 -1, i64 16, i32 8, i1 false)
  ret %struct.av* %0
}
