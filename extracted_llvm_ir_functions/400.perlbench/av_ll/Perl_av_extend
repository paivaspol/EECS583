define void @Perl_av_extend(%struct.av* %av, i32 %key) #0 {
entry:
  %0 = bitcast %struct.av* %av to %struct.sv*
  %1 = getelementptr inbounds %struct.av* %av, i64 0, i32 2
  %2 = load i32* %1, align 4, !tbaa !4
  %and = and i32 %2, 32768
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end98, label %cond.end

cond.end:                                         ; preds = %entry
  %call = tail call %struct.magic* @Perl_mg_find(%struct.sv* %0, i32 80) #3
  %tobool1 = icmp eq %struct.magic* %call, null
  br i1 %tobool1, label %if.end98, label %if.then

if.then:                                          ; preds = %cond.end
  %3 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  tail call void @Perl_push_scope() #3
  tail call void @Perl_save_int(i32* @PL_tmps_floor) #3
  %4 = load i32* @PL_tmps_ix, align 4, !tbaa !4
  store i32 %4, i32* @PL_tmps_floor, align 4, !tbaa !4
  %5 = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_next = getelementptr inbounds %struct.stackinfo* %5, i64 0, i32 6
  %6 = load %struct.stackinfo** %si_next, align 8, !tbaa !0
  %tobool2 = icmp eq %struct.stackinfo* %6, null
  br i1 %tobool2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %call4 = tail call %struct.stackinfo* @Perl_new_stackinfo(i32 32, i32 13) #3
  %7 = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_prev = getelementptr inbounds %struct.stackinfo* %call4, i64 0, i32 5
  store %struct.stackinfo* %7, %struct.stackinfo** %si_prev, align 8, !tbaa !0
  %8 = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_next5 = getelementptr inbounds %struct.stackinfo* %8, i64 0, i32 6
  store %struct.stackinfo* %call4, %struct.stackinfo** %si_next5, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then3
  %next.0 = phi %struct.stackinfo* [ %6, %if.then ], [ %call4, %if.then3 ]
  %si_type = getelementptr inbounds %struct.stackinfo* %next.0, i64 0, i32 4
  store i32 2, i32* %si_type, align 4, !tbaa !4
  %si_cxix = getelementptr inbounds %struct.stackinfo* %next.0, i64 0, i32 2
  store i32 -1, i32* %si_cxix, align 4, !tbaa !4
  %si_stack = getelementptr inbounds %struct.stackinfo* %next.0, i64 0, i32 0
  %9 = load %struct.av** %si_stack, align 8, !tbaa !0
  %sv_any = getelementptr inbounds %struct.av* %9, i64 0, i32 0
  %10 = load %struct.xpvav** %sv_any, align 8, !tbaa !0
  %xav_fill = getelementptr inbounds %struct.xpvav* %10, i64 0, i32 1
  store i64 0, i64* %xav_fill, align 8, !tbaa !3
  %11 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %3 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %11 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3
  %12 = load %struct.av** @PL_curstack, align 8, !tbaa !0
  %sv_any6 = getelementptr inbounds %struct.av* %12, i64 0, i32 0
  %13 = load %struct.xpvav** %sv_any6, align 8, !tbaa !0
  %xav_fill7 = getelementptr inbounds %struct.xpvav* %13, i64 0, i32 1
  store i64 %sub.ptr.div, i64* %xav_fill7, align 8, !tbaa !3
  %xav_array = getelementptr inbounds %struct.xpvav* %10, i64 0, i32 0
  %14 = load i8** %xav_array, align 8, !tbaa !0
  %15 = bitcast i8* %14 to %struct.sv**
  store %struct.sv** %15, %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %16 = load %struct.av** %si_stack, align 8, !tbaa !0
  %sv_any11 = getelementptr inbounds %struct.av* %16, i64 0, i32 0
  %17 = load %struct.xpvav** %sv_any11, align 8, !tbaa !0
  %xav_max = getelementptr inbounds %struct.xpvav* %17, i64 0, i32 2
  %18 = load i64* %xav_max, align 8, !tbaa !3
  %add.ptr = getelementptr inbounds %struct.sv** %15, i64 %18
  store %struct.sv** %add.ptr, %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %19 = load %struct.av** %si_stack, align 8, !tbaa !0
  %sv_any13 = getelementptr inbounds %struct.av* %19, i64 0, i32 0
  %20 = load %struct.xpvav** %sv_any13, align 8, !tbaa !0
  %xav_fill14 = getelementptr inbounds %struct.xpvav* %20, i64 0, i32 1
  %21 = load i64* %xav_fill14, align 8, !tbaa !3
  %add.ptr15 = getelementptr inbounds %struct.sv** %15, i64 %21
  store %struct.sv** %add.ptr15, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %22 = load %struct.av** %si_stack, align 8, !tbaa !0
  store %struct.av* %22, %struct.av** @PL_curstack, align 8, !tbaa !0
  store %struct.stackinfo* %next.0, %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %23 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i32* %23, i64 1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %24 = load i32** @PL_markstack_max, align 8, !tbaa !0
  %cmp = icmp eq i32* %incdec.ptr, %24
  br i1 %cmp, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end
  tail call void @Perl_markstack_grow() #3
  %.pre393 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %.pre394 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %.pre395 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %if.end
  %25 = phi %struct.sv** [ %.pre395, %if.then17 ], [ %add.ptr, %if.end ]
  %26 = phi i32* [ %.pre394, %if.then17 ], [ %incdec.ptr, %if.end ]
  %27 = phi %struct.sv** [ %.pre393, %if.then17 ], [ %15, %if.end ]
  %sub.ptr.lhs.cast19 = ptrtoint %struct.sv** %add.ptr15 to i64
  %sub.ptr.rhs.cast20 = ptrtoint %struct.sv** %27 to i64
  %sub.ptr.sub21 = sub i64 %sub.ptr.lhs.cast19, %sub.ptr.rhs.cast20
  %sub.ptr.div22382 = lshr exact i64 %sub.ptr.sub21, 3
  %conv = trunc i64 %sub.ptr.div22382 to i32
  store i32 %conv, i32* %26, align 4, !tbaa !4
  %sub.ptr.lhs.cast23 = ptrtoint %struct.sv** %25 to i64
  %sub.ptr.sub25 = sub i64 %sub.ptr.lhs.cast23, %sub.ptr.lhs.cast19
  %cmp27 = icmp slt i64 %sub.ptr.sub25, 16
  br i1 %cmp27, label %if.then29, label %if.end31

if.then29:                                        ; preds = %if.end18
  %call30 = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %add.ptr15, %struct.sv** %add.ptr15, i32 2) #3
  br label %if.end31

if.end31:                                         ; preds = %if.then29, %if.end18
  %sp.0 = phi %struct.sv** [ %call30, %if.then29 ], [ %add.ptr15, %if.end18 ]
  %mg_obj = getelementptr inbounds %struct.magic* %call, i64 0, i32 5
  %28 = load %struct.sv** %mg_obj, align 8, !tbaa !0
  %tobool32 = icmp eq %struct.sv* %28, null
  br i1 %tobool32, label %cond.false35, label %cond.end38

cond.false35:                                     ; preds = %if.end31
  %call36 = tail call %struct.sv* @Perl_newRV(%struct.sv* %0) #3
  %call37 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call36) #3
  br label %cond.end38

cond.end38:                                       ; preds = %if.end31, %cond.false35
  %cond39 = phi %struct.sv* [ %call37, %cond.false35 ], [ %28, %if.end31 ]
  %incdec.ptr40 = getelementptr inbounds %struct.sv** %sp.0, i64 1
  store %struct.sv* %cond39, %struct.sv** %incdec.ptr40, align 8, !tbaa !0
  %add = add nsw i32 %key, 1
  %conv41 = sext i32 %add to i64
  %call42 = tail call %struct.sv* @Perl_newSViv(i64 %conv41) #3
  %call43 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call42) #3
  %incdec.ptr44 = getelementptr inbounds %struct.sv** %sp.0, i64 2
  store %struct.sv* %call43, %struct.sv** %incdec.ptr44, align 8, !tbaa !0
  store %struct.sv** %incdec.ptr44, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %call45 = tail call i32 @Perl_call_method(i8* getelementptr inbounds ([7 x i8]* @.str, i64 0, i64 0), i32 2) #3
  %29 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %30 = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_prev47 = getelementptr inbounds %struct.stackinfo* %30, i64 0, i32 5
  %31 = load %struct.stackinfo** %si_prev47, align 8, !tbaa !0
  %tobool48 = icmp eq %struct.stackinfo* %31, null
  br i1 %tobool48, label %if.then49, label %if.end75

if.then49:                                        ; preds = %cond.end38
  %32 = load %struct.gv** @PL_stderrgv, align 8, !tbaa !0
  %tobool50 = icmp eq %struct.gv* %32, null
  br i1 %tobool50, label %cond.false70, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then49
  %sv_flags51 = getelementptr inbounds %struct.gv* %32, i64 0, i32 2
  %33 = load i32* %sv_flags51, align 4, !tbaa !4
  %and52 = and i32 %33, 255
  %cmp53 = icmp eq i32 %and52, 13
  br i1 %cmp53, label %land.lhs.true55, label %cond.false70

land.lhs.true55:                                  ; preds = %land.lhs.true
  %sv_any56 = getelementptr inbounds %struct.gv* %32, i64 0, i32 0
  %34 = load %struct.xpvgv** %sv_any56, align 8, !tbaa !0
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %34, i64 0, i32 7
  %35 = load %struct.gp** %xgv_gp, align 8, !tbaa !0
  %gp_io = getelementptr inbounds %struct.gp* %35, i64 0, i32 2
  %36 = load %struct.io** %gp_io, align 8, !tbaa !0
  %tobool57 = icmp eq %struct.io* %36, null
  br i1 %tobool57, label %cond.false70, label %land.lhs.true58

land.lhs.true58:                                  ; preds = %land.lhs.true55
  %sv_any62 = getelementptr inbounds %struct.io* %36, i64 0, i32 0
  %37 = load %struct.xpvio** %sv_any62, align 8, !tbaa !0
  %xio_ofp = getelementptr inbounds %struct.xpvio* %37, i64 0, i32 8
  %38 = load %struct._PerlIO*** %xio_ofp, align 8, !tbaa !0
  %tobool63 = icmp eq %struct._PerlIO** %38, null
  br i1 %tobool63, label %cond.false70, label %cond.end72

cond.false70:                                     ; preds = %land.lhs.true58, %land.lhs.true55, %if.then49, %land.lhs.true
  %call71 = tail call %struct._PerlIO** @Perl_PerlIO_stderr() #3
  br label %cond.end72

cond.end72:                                       ; preds = %land.lhs.true58, %cond.false70
  %cond73 = phi %struct._PerlIO** [ %call71, %cond.false70 ], [ %38, %land.lhs.true58 ]
  %call74 = tail call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %cond73, i8* getelementptr inbounds ([17 x i8]* @.str1, i64 0, i64 0)) #3
  tail call void @Perl_my_exit(i32 1) #3
  br label %if.end75

if.end75:                                         ; preds = %cond.end38, %cond.end72
  %39 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %sub.ptr.lhs.cast76 = ptrtoint %struct.sv** %29 to i64
  %sub.ptr.rhs.cast77 = ptrtoint %struct.sv** %39 to i64
  %sub.ptr.sub78 = sub i64 %sub.ptr.lhs.cast76, %sub.ptr.rhs.cast77
  %sub.ptr.div79 = ashr exact i64 %sub.ptr.sub78, 3
  %40 = load %struct.av** @PL_curstack, align 8, !tbaa !0
  %sv_any80 = getelementptr inbounds %struct.av* %40, i64 0, i32 0
  %41 = load %struct.xpvav** %sv_any80, align 8, !tbaa !0
  %xav_fill81 = getelementptr inbounds %struct.xpvav* %41, i64 0, i32 1
  store i64 %sub.ptr.div79, i64* %xav_fill81, align 8, !tbaa !3
  %si_stack82 = getelementptr inbounds %struct.stackinfo* %31, i64 0, i32 0
  %42 = load %struct.av** %si_stack82, align 8, !tbaa !0
  %sv_any83 = getelementptr inbounds %struct.av* %42, i64 0, i32 0
  %43 = load %struct.xpvav** %sv_any83, align 8, !tbaa !0
  %xav_array84 = getelementptr inbounds %struct.xpvav* %43, i64 0, i32 0
  %44 = load i8** %xav_array84, align 8, !tbaa !0
  %45 = bitcast i8* %44 to %struct.sv**
  store %struct.sv** %45, %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %46 = load %struct.av** %si_stack82, align 8, !tbaa !0
  %sv_any86 = getelementptr inbounds %struct.av* %46, i64 0, i32 0
  %47 = load %struct.xpvav** %sv_any86, align 8, !tbaa !0
  %xav_max87 = getelementptr inbounds %struct.xpvav* %47, i64 0, i32 2
  %48 = load i64* %xav_max87, align 8, !tbaa !3
  %add.ptr88 = getelementptr inbounds %struct.sv** %45, i64 %48
  store %struct.sv** %add.ptr88, %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %49 = load %struct.av** %si_stack82, align 8, !tbaa !0
  %sv_any90 = getelementptr inbounds %struct.av* %49, i64 0, i32 0
  %50 = load %struct.xpvav** %sv_any90, align 8, !tbaa !0
  %xav_fill91 = getelementptr inbounds %struct.xpvav* %50, i64 0, i32 1
  %51 = load i64* %xav_fill91, align 8, !tbaa !3
  %add.ptr92 = getelementptr inbounds %struct.sv** %45, i64 %51
  store %struct.sv** %add.ptr92, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %52 = load %struct.av** %si_stack82, align 8, !tbaa !0
  store %struct.av* %52, %struct.av** @PL_curstack, align 8, !tbaa !0
  store %struct.stackinfo* %31, %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %53 = load i32* @PL_tmps_ix, align 4, !tbaa !4
  %54 = load i32* @PL_tmps_floor, align 4, !tbaa !4
  %cmp94 = icmp sgt i32 %53, %54
  br i1 %cmp94, label %if.then96, label %if.end97

if.then96:                                        ; preds = %if.end75
  tail call void @Perl_free_tmps() #3
  br label %if.end97

if.end97:                                         ; preds = %if.then96, %if.end75
  tail call void @Perl_pop_scope() #3
  br label %if.end292

if.end98:                                         ; preds = %entry, %cond.end
  %conv99 = sext i32 %key to i64
  %sv_any100 = getelementptr inbounds %struct.av* %av, i64 0, i32 0
  %55 = load %struct.xpvav** %sv_any100, align 8, !tbaa !0
  %xav_max101 = getelementptr inbounds %struct.xpvav* %55, i64 0, i32 2
  %56 = load i64* %xav_max101, align 8, !tbaa !3
  %cmp102 = icmp sgt i64 %conv99, %56
  br i1 %cmp102, label %if.then104, label %if.end292

if.then104:                                       ; preds = %if.end98
  %xav_alloc = getelementptr inbounds %struct.xpvav* %55, i64 0, i32 7
  %57 = load %struct.sv*** %xav_alloc, align 8, !tbaa !0
  %xav_array108 = getelementptr inbounds %struct.xpvav* %55, i64 0, i32 0
  %58 = load i8** %xav_array108, align 8, !tbaa !0
  %59 = bitcast i8* %58 to %struct.sv**
  %cmp109 = icmp eq %struct.sv** %57, %59
  br i1 %cmp109, label %if.else, label %if.then111

if.then111:                                       ; preds = %if.then104
  %xav_fill115 = getelementptr inbounds %struct.xpvav* %55, i64 0, i32 1
  %60 = load i64* %xav_fill115, align 8, !tbaa !3
  %sub.ptr.lhs.cast122 = ptrtoint i8* %58 to i64
  %sub.ptr.rhs.cast123 = ptrtoint %struct.sv** %57 to i64
  %sub.ptr.sub124 = sub i64 %sub.ptr.lhs.cast122, %sub.ptr.rhs.cast123
  %61 = bitcast %struct.sv** %57 to i8*
  %add133 = shl i64 %60, 3
  %mul = add i64 %add133, 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* %61, i8* %58, i64 %mul, i32 1, i1 false)
  %sext381 = shl i64 %sub.ptr.sub124, 29
  %conv134 = ashr exact i64 %sext381, 32
  %62 = load %struct.xpvav** %sv_any100, align 8, !tbaa !0
  %xav_max136 = getelementptr inbounds %struct.xpvav* %62, i64 0, i32 2
  %63 = load i64* %xav_max136, align 8, !tbaa !3
  %add137 = add nsw i64 %63, %conv134
  store i64 %add137, i64* %xav_max136, align 8, !tbaa !3
  %xav_alloc139 = getelementptr inbounds %struct.xpvav* %62, i64 0, i32 7
  %64 = load %struct.sv*** %xav_alloc139, align 8, !tbaa !0
  %65 = bitcast %struct.sv** %64 to i8*
  %xpv_pv = getelementptr inbounds %struct.xpvav* %62, i64 0, i32 0
  store i8* %65, i8** %xpv_pv, align 8, !tbaa !0
  %66 = load %struct.xpvav** %sv_any100, align 8, !tbaa !0
  %xav_flags = getelementptr inbounds %struct.xpvav* %66, i64 0, i32 9
  %67 = load i8* %xav_flags, align 1, !tbaa !1
  %and143 = and i8 %67, 1
  %tobool144 = icmp eq i8 %and143, 0
  br i1 %tobool144, label %if.end147, label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.then111
  %68 = and i64 %sub.ptr.sub124, 34359738360
  %tobool146386 = icmp eq i64 %68, 0
  br i1 %tobool146386, label %if.end147, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %sext396 = shl i64 %sub.ptr.sub124, 29
  %69 = ashr exact i64 %sext396, 32
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %indvars.iv388 = phi i64 [ %69, %while.body.lr.ph ], [ %indvars.iv.next389, %while.body ]
  %indvars.iv.next389 = add i64 %indvars.iv388, -1
  %add.ptr117.sum = add i64 %60, %indvars.iv388
  %arrayidx = getelementptr inbounds %struct.sv** %57, i64 %add.ptr117.sum
  store %struct.sv* @PL_sv_undef, %struct.sv** %arrayidx, align 8, !tbaa !0
  %70 = trunc i64 %indvars.iv.next389 to i32
  %tobool146 = icmp eq i32 %70, 0
  br i1 %tobool146, label %while.cond.if.end147.loopexit_crit_edge, label %while.body

while.cond.if.end147.loopexit_crit_edge:          ; preds = %while.body
  %.pre391.pre = load %struct.xpvav** %sv_any100, align 8, !tbaa !0
  br label %if.end147

if.end147:                                        ; preds = %while.cond.preheader, %while.cond.if.end147.loopexit_crit_edge, %if.then111
  %71 = phi %struct.xpvav* [ %66, %if.then111 ], [ %.pre391.pre, %while.cond.if.end147.loopexit_crit_edge ], [ %66, %while.cond.preheader ]
  %xav_max150 = getelementptr inbounds %struct.xpvav* %71, i64 0, i32 2
  %72 = load i64* %xav_max150, align 8, !tbaa !3
  %sub = add nsw i64 %72, -10
  %cmp151 = icmp sgt i64 %conv99, %sub
  br i1 %cmp151, label %resize, label %if.end292

if.else:                                          ; preds = %if.then104
  %tobool162 = icmp eq %struct.sv** %57, null
  br i1 %tobool162, label %if.else250, label %if.then163

if.then163:                                       ; preds = %if.else
  %div = sdiv i64 %56, 5
  br label %resize

resize:                                           ; preds = %if.end147, %if.then163
  %.pn = phi i64 [ %div, %if.then163 ], [ %72, %if.end147 ]
  %newmax.0.in = add nsw i64 %.pn, %conv99
  %add171 = shl i64 %newmax.0.in, 32
  %sext = add i64 %add171, 4294967296
  %mul173 = ashr exact i64 %sext, 29
  br label %while.cond174

while.cond174:                                    ; preds = %while.cond174, %resize
  %itmp.0 = phi i64 [ 16, %resize ], [ %add179, %while.cond174 ]
  %sub175 = add nsw i64 %itmp.0, -16
  %cmp176 = icmp ult i64 %sub175, %mul173
  %add179 = shl nsw i64 %itmp.0, 1
  br i1 %cmp176, label %while.cond174, label %while.end180

while.end180:                                     ; preds = %while.cond174
  %div182 = lshr i64 %sub175, 3
  %sub183 = add nsw i64 %div182, 4294967295
  %conv184 = trunc i64 %sub183 to i32
  %add185 = shl i64 %sub183, 32
  %sext378 = add i64 %add185, 4294967296
  %mul187 = ashr exact i64 %sext378, 29
  %call188 = tail call i8* @Perl_safesysmalloc(i64 %mul187) #3
  %73 = bitcast i8* %call188 to %struct.sv**
  %74 = load %struct.xpvav** %sv_any100, align 8, !tbaa !0
  %xav_alloc190 = getelementptr inbounds %struct.xpvav* %74, i64 0, i32 7
  %75 = load %struct.sv*** %xav_alloc190, align 8, !tbaa !0
  %76 = bitcast %struct.sv** %75 to i8*
  %xav_max192 = getelementptr inbounds %struct.xpvav* %74, i64 0, i32 2
  %77 = load i64* %xav_max192, align 8, !tbaa !3
  %add193 = shl i64 %77, 3
  %mul194 = add i64 %add193, 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call188, i8* %76, i64 %mul194, i32 1, i1 false)
  %78 = load %struct.xpvav** %sv_any100, align 8, !tbaa !0
  %xav_max196 = getelementptr inbounds %struct.xpvav* %78, i64 0, i32 2
  %79 = load i64* %xav_max196, align 8, !tbaa !3
  %cmp197 = icmp sgt i64 %79, 64
  %xav_alloc203 = getelementptr inbounds %struct.xpvav* %78, i64 0, i32 7
  %80 = load %struct.sv*** %xav_alloc203, align 8, !tbaa !0
  %81 = bitcast %struct.sv** %80 to i8*
  br i1 %cmp197, label %if.then199, label %if.else219

if.then199:                                       ; preds = %while.end180
  %add206 = shl i64 %79, 3
  %mul207 = add i64 %add206, 8
  %conv208 = trunc i64 %mul207 to i32
  %82 = load i32* @PL_nice_chunk_size, align 4, !tbaa !4
  %cmp209 = icmp ugt i32 %conv208, %82
  br i1 %cmp209, label %if.then211, label %if.else215

if.then211:                                       ; preds = %if.then199
  %83 = load i8** @PL_nice_chunk, align 8, !tbaa !0
  %tobool212 = icmp eq i8* %83, null
  br i1 %tobool212, label %if.end214, label %if.then213

if.then213:                                       ; preds = %if.then211
  tail call void @Perl_safesysfree(i8* %83) #3
  br label %if.end214

if.end214:                                        ; preds = %if.then211, %if.then213
  store i8* %81, i8** @PL_nice_chunk, align 8, !tbaa !0
  store i32 %conv208, i32* @PL_nice_chunk_size, align 4, !tbaa !4
  br label %if.end222

if.else215:                                       ; preds = %if.then199
  tail call void @Perl_safesysfree(i8* %81) #3
  br label %if.end222

if.else219:                                       ; preds = %while.end180
  tail call void @Perl_safesysfree(i8* %81) #3
  br label %if.end222

if.end222:                                        ; preds = %if.end214, %if.else215, %if.else219
  %84 = load %struct.xpvav** %sv_any100, align 8, !tbaa !0
  %xav_alloc224 = getelementptr inbounds %struct.xpvav* %84, i64 0, i32 7
  store %struct.sv** %73, %struct.sv*** %xav_alloc224, align 8, !tbaa !0
  %85 = load %struct.xpvav** %sv_any100, align 8, !tbaa !0
  %xav_alloc226 = getelementptr inbounds %struct.xpvav* %85, i64 0, i32 7
  %86 = load %struct.sv*** %xav_alloc226, align 8, !tbaa !0
  %xav_max228 = getelementptr inbounds %struct.xpvav* %85, i64 0, i32 2
  %87 = load i64* %xav_max228, align 8, !tbaa !3
  %add.ptr229.sum = add i64 %87, 1
  %add.ptr230 = getelementptr inbounds %struct.sv** %86, i64 %add.ptr229.sum
  %conv231 = ashr exact i64 %add185, 32
  %sub234 = sub nsw i64 %conv231, %87
  %conv235 = trunc i64 %sub234 to i32
  %88 = load %struct.av** @PL_curstack, align 8, !tbaa !0
  %cmp236 = icmp eq %struct.av* %88, %av
  br i1 %cmp236, label %if.then238, label %if.end269

if.then238:                                       ; preds = %if.end222
  %89 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %90 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %sub.ptr.lhs.cast241 = ptrtoint %struct.sv** %89 to i64
  %sub.ptr.rhs.cast242 = ptrtoint %struct.sv** %90 to i64
  %sub.ptr.sub243 = sub i64 %sub.ptr.lhs.cast241, %sub.ptr.rhs.cast242
  %sub.ptr.div244 = ashr exact i64 %sub.ptr.sub243, 3
  %add.ptr245 = getelementptr inbounds %struct.sv** %86, i64 %sub.ptr.div244
  store %struct.sv** %add.ptr245, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %91 = load %struct.xpvav** %sv_any100, align 8, !tbaa !0
  %xav_alloc247 = getelementptr inbounds %struct.xpvav* %91, i64 0, i32 7
  %92 = load %struct.sv*** %xav_alloc247, align 8, !tbaa !0
  store %struct.sv** %92, %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %add.ptr248 = getelementptr inbounds %struct.sv** %92, i64 %conv231
  store %struct.sv** %add.ptr248, %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  br label %if.end269

if.else250:                                       ; preds = %if.else
  %cmp251 = icmp slt i32 %key, 3
  %cond256 = select i1 %cmp251, i32 3, i32 %key
  %add257 = add nsw i32 %cond256, 1
  %conv258 = sext i32 %add257 to i64
  %mul259 = shl nsw i64 %conv258, 3
  %call260 = tail call i8* @Perl_safesysmalloc(i64 %mul259) #3
  %93 = bitcast i8* %call260 to %struct.sv**
  %94 = load %struct.xpvav** %sv_any100, align 8, !tbaa !0
  %xav_alloc262 = getelementptr inbounds %struct.xpvav* %94, i64 0, i32 7
  store %struct.sv** %93, %struct.sv*** %xav_alloc262, align 8, !tbaa !0
  %95 = load %struct.xpvav** %sv_any100, align 8, !tbaa !0
  %xav_alloc264 = getelementptr inbounds %struct.xpvav* %95, i64 0, i32 7
  %96 = load %struct.sv*** %xav_alloc264, align 8, !tbaa !0
  %add.ptr265 = getelementptr inbounds %struct.sv** %96, i64 1
  store %struct.sv* @PL_sv_undef, %struct.sv** %96, align 8, !tbaa !0
  br label %if.end269

if.end269:                                        ; preds = %if.end222, %if.then238, %if.else250
  %ary.0 = phi %struct.sv** [ %add.ptr230, %if.then238 ], [ %add.ptr230, %if.end222 ], [ %add.ptr265, %if.else250 ]
  %tmp.1 = phi i32 [ %conv235, %if.then238 ], [ %conv235, %if.end222 ], [ %cond256, %if.else250 ]
  %newmax.1 = phi i32 [ %conv184, %if.then238 ], [ %conv184, %if.end222 ], [ %cond256, %if.else250 ]
  %97 = load %struct.xpvav** %sv_any100, align 8, !tbaa !0
  %xav_flags271 = getelementptr inbounds %struct.xpvav* %97, i64 0, i32 9
  %98 = load i8* %xav_flags271, align 1, !tbaa !1
  %and273 = and i8 %98, 1
  %tobool274 = icmp eq i8 %and273, 0
  %tobool277384 = icmp eq i32 %tmp.1, 0
  %or.cond = or i1 %tobool274, %tobool277384
  br i1 %or.cond, label %if.end283, label %while.body278.lr.ph

while.body278.lr.ph:                              ; preds = %if.end269
  %99 = sext i32 %tmp.1 to i64
  br label %while.body278

while.body278:                                    ; preds = %while.body278.lr.ph, %while.body278
  %indvars.iv = phi i64 [ %99, %while.body278.lr.ph ], [ %indvars.iv.next, %while.body278 ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %arrayidx281 = getelementptr inbounds %struct.sv** %ary.0, i64 %indvars.iv.next
  store %struct.sv* @PL_sv_undef, %struct.sv** %arrayidx281, align 8, !tbaa !0
  %100 = trunc i64 %indvars.iv.next to i32
  %tobool277 = icmp eq i32 %100, 0
  br i1 %tobool277, label %while.cond276.if.end283.loopexit_crit_edge, label %while.body278

while.cond276.if.end283.loopexit_crit_edge:       ; preds = %while.body278
  %.pre.pre = load %struct.xpvav** %sv_any100, align 8, !tbaa !0
  br label %if.end283

if.end283:                                        ; preds = %while.cond276.if.end283.loopexit_crit_edge, %if.end269
  %101 = phi %struct.xpvav* [ %97, %if.end269 ], [ %.pre.pre, %while.cond276.if.end283.loopexit_crit_edge ]
  %xav_alloc285 = getelementptr inbounds %struct.xpvav* %101, i64 0, i32 7
  %102 = load %struct.sv*** %xav_alloc285, align 8, !tbaa !0
  %103 = bitcast %struct.sv** %102 to i8*
  %xpv_pv287 = getelementptr inbounds %struct.xpvav* %101, i64 0, i32 0
  store i8* %103, i8** %xpv_pv287, align 8, !tbaa !0
  %conv288 = sext i32 %newmax.1 to i64
  %104 = load %struct.xpvav** %sv_any100, align 8, !tbaa !0
  %xav_max290 = getelementptr inbounds %struct.xpvav* %104, i64 0, i32 2
  store i64 %conv288, i64* %xav_max290, align 8, !tbaa !3
  br label %if.end292

if.end292:                                        ; preds = %if.end283, %if.end147, %if.end97, %if.end98
  ret void
}
