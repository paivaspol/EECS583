define internal void @S_qsortsv(%struct.sv** %list1, i64 %nmemb, i32 (%struct.sv*, %struct.sv*)* %cmp, i32 %flags) #0 {
entry:
  %small = alloca [200 x %struct.sv**], align 16
  %call = call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([12 x i8]* @.str, i64 0, i64 0), i32 2, i32 1) #4
  %sv_any = getelementptr inbounds %struct.gv* %call, i64 0, i32 0
  %0 = load %struct.xpvgv** %sv_any, align 8, !tbaa !0
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %0, i64 0, i32 7
  %1 = load %struct.gp** %xgv_gp, align 8, !tbaa !0
  %gp_sv = getelementptr inbounds %struct.gp* %1, i64 0, i32 0
  %2 = load %struct.sv** %gp_sv, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %2, i64 0, i32 2
  %3 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %3, 65536
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.else51, label %cond.true4

cond.true4:                                       ; preds = %entry
  %sv_any5 = getelementptr inbounds %struct.sv* %2, i64 0, i32 0
  %4 = load i8** %sv_any5, align 8, !tbaa !0
  %xiv_iv = getelementptr inbounds i8* %4, i64 24
  %5 = bitcast i8* %xiv_iv to i64*
  %6 = load i64* %5, align 8, !tbaa !4
  %phitmp = and i64 %6, 256
  %phitmp100 = icmp eq i64 %phitmp, 0
  br i1 %phitmp100, label %if.else51, label %if.then

if.then:                                          ; preds = %cond.true4
  %7 = bitcast [200 x %struct.sv**]* %small to i8*
  call void @llvm.lifetime.start(i64 1600, i8* %7) #3
  %cmp13 = icmp ult i64 %nmemb, 2
  br i1 %cmp13, label %if.end58, label %if.end

if.end:                                           ; preds = %if.then
  %cmp16 = icmp ult i64 %nmemb, 201
  br i1 %cmp16, label %if.end20.thread, label %if.end20

if.end20.thread:                                  ; preds = %if.end
  %arraydecay = getelementptr inbounds [200 x %struct.sv**]* %small, i64 0, i64 0
  br label %for.body.lr.ph

if.end20:                                         ; preds = %if.end
  %mul = shl i64 %nmemb, 3
  %call19 = call i8* @Perl_safesysmalloc(i64 %mul) #4
  %8 = bitcast i8* %call19 to %struct.sv***
  br label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end20, %if.end20.thread
  %indir.0109 = phi %struct.sv*** [ %arraydecay, %if.end20.thread ], [ %8, %if.end20 ]
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %pp.0107 = phi %struct.sv*** [ %indir.0109, %for.body.lr.ph ], [ %incdec.ptr22, %for.body ]
  %q.0106 = phi %struct.sv** [ %list1, %for.body.lr.ph ], [ %incdec.ptr, %for.body ]
  %n.0105 = phi i64 [ %nmemb, %for.body.lr.ph ], [ %dec, %for.body ]
  %dec = add i64 %n.0105, -1
  %incdec.ptr = getelementptr inbounds %struct.sv** %q.0106, i64 1
  %incdec.ptr22 = getelementptr inbounds %struct.sv*** %pp.0107, i64 1
  store %struct.sv** %q.0106, %struct.sv*** %pp.0107, align 8, !tbaa !0
  %tobool21 = icmp eq i64 %dec, 0
  br i1 %tobool21, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %9 = load i32 (%struct.sv*, %struct.sv*)** @PL_sort_RealCmp, align 8, !tbaa !0
  store i32 (%struct.sv*, %struct.sv*)* %cmp, i32 (%struct.sv*, %struct.sv*)** @PL_sort_RealCmp, align 8, !tbaa !0
  %10 = bitcast %struct.sv*** %indir.0109 to %struct.sv**
  %tobool23 = icmp ne i32 %flags, 0
  %cond24 = select i1 %tobool23, i32 (%struct.sv*, %struct.sv*)* @cmpindir_desc, i32 (%struct.sv*, %struct.sv*)* @cmpindir
  call fastcc void @S_qsortsvu(%struct.sv** %10, i64 %nmemb, i32 (%struct.sv*, %struct.sv*)* %cond24) #5
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %list1 to i64
  br label %for.body28

for.body28:                                       ; preds = %for.end, %for.cond25.backedge
  %dec26103.in = phi i64 [ %nmemb, %for.end ], [ %dec26103, %for.cond25.backedge ]
  %dec26103 = add i64 %dec26103.in, -1
  %arrayidx = getelementptr inbounds %struct.sv*** %indir.0109, i64 %dec26103
  %11 = load %struct.sv*** %arrayidx, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %11 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3
  %cmp29 = icmp eq i64 %dec26103, %sub.ptr.div
  br i1 %cmp29, label %for.cond25.backedge, label %if.then31

if.then31:                                        ; preds = %for.body28
  %arrayidx32 = getelementptr inbounds %struct.sv** %list1, i64 %sub.ptr.div
  %12 = load %struct.sv** %arrayidx32, align 8, !tbaa !0
  br label %do.body

do.body:                                          ; preds = %do.body, %if.then31
  %j.0 = phi i64 [ %sub.ptr.div, %if.then31 ], [ %sub.ptr.div39, %do.body ]
  %arrayidx33 = getelementptr inbounds %struct.sv*** %indir.0109, i64 %j.0
  %13 = load %struct.sv*** %arrayidx33, align 8, !tbaa !0
  %14 = load %struct.sv** %13, align 8, !tbaa !0
  %arrayidx34 = getelementptr inbounds %struct.sv** %list1, i64 %j.0
  store %struct.sv* %14, %struct.sv** %arrayidx34, align 8, !tbaa !0
  %15 = load %struct.sv*** %arrayidx33, align 8, !tbaa !0
  %sub.ptr.lhs.cast36 = ptrtoint %struct.sv** %15 to i64
  %sub.ptr.sub38 = sub i64 %sub.ptr.lhs.cast36, %sub.ptr.rhs.cast
  %sub.ptr.div39 = ashr exact i64 %sub.ptr.sub38, 3
  store %struct.sv** %arrayidx34, %struct.sv*** %arrayidx33, align 8, !tbaa !0
  %cmp41 = icmp eq i64 %sub.ptr.div39, %dec26103
  br i1 %cmp41, label %do.end, label %do.body

do.end:                                           ; preds = %do.body
  %arrayidx43 = getelementptr inbounds %struct.sv** %list1, i64 %dec26103
  store %struct.sv* %12, %struct.sv** %arrayidx43, align 8, !tbaa !0
  br label %for.cond25.backedge

for.cond25.backedge:                              ; preds = %do.end, %for.body28
  %tobool27 = icmp eq i64 %dec26103, 0
  br i1 %tobool27, label %for.end45, label %for.body28

for.end45:                                        ; preds = %for.cond25.backedge
  %arraydecay46 = getelementptr inbounds [200 x %struct.sv**]* %small, i64 0, i64 0
  %cmp47 = icmp eq %struct.sv*** %indir.0109, %arraydecay46
  br i1 %cmp47, label %if.end50, label %if.then49

if.then49:                                        ; preds = %for.end45
  %16 = bitcast %struct.sv*** %indir.0109 to i8*
  call void @Perl_safesysfree(i8* %16) #4
  br label %if.end50

if.end50:                                         ; preds = %for.end45, %if.then49
  store i32 (%struct.sv*, %struct.sv*)* %9, i32 (%struct.sv*, %struct.sv*)** @PL_sort_RealCmp, align 8, !tbaa !0
  br label %if.end58

if.else51:                                        ; preds = %cond.true4, %entry
  %tobool52 = icmp eq i32 %flags, 0
  br i1 %tobool52, label %if.else56, label %if.then53

if.then53:                                        ; preds = %if.else51
  %17 = load i32 (%struct.sv*, %struct.sv*)** @PL_sort_RealCmp, align 8, !tbaa !0
  store i32 (%struct.sv*, %struct.sv*)* %cmp, i32 (%struct.sv*, %struct.sv*)** @PL_sort_RealCmp, align 8, !tbaa !0
  call fastcc void @S_qsortsvu(%struct.sv** %list1, i64 %nmemb, i32 (%struct.sv*, %struct.sv*)* @cmp_desc) #5
  store i32 (%struct.sv*, %struct.sv*)* %17, i32 (%struct.sv*, %struct.sv*)** @PL_sort_RealCmp, align 8, !tbaa !0
  br label %if.end58

if.else56:                                        ; preds = %if.else51
  call fastcc void @S_qsortsvu(%struct.sv** %list1, i64 %nmemb, i32 (%struct.sv*, %struct.sv*)* %cmp) #5
  br label %if.end58

if.end58:                                         ; preds = %if.end50, %if.then, %if.then53, %if.else56
  ret void
}
