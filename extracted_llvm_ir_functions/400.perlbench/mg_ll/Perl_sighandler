define void @Perl_sighandler(i32 %sig) #0 {
entry:
  %gv = alloca %struct.gv*, align 8
  %st = alloca %struct.hv*, align 8
  %flags = alloca i32, align 4
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  store %struct.gv* null, %struct.gv** %gv, align 8, !tbaa !0
  %1 = load %struct.sv** @PL_Sv, align 8, !tbaa !0
  %2 = load %struct.op** @PL_op, align 8, !tbaa !0
  %3 = load %struct.xpv** @PL_Xpv, align 8, !tbaa !0
  %4 = load i32* @PL_savestack_ix, align 4, !tbaa !3
  %add = add nsw i32 %4, 15
  %5 = load i32* @PL_savestack_max, align 4, !tbaa !3
  %not.cmp = icmp sle i32 %add, %5
  %. = zext i1 %not.cmp to i32
  store i32 %., i32* %flags, align 4, !tbaa !3
  %6 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %7 = load i32** @PL_markstack_max, align 8, !tbaa !0
  %add.ptr = getelementptr inbounds i32* %7, i64 -2
  %cmp1 = icmp ult i32* %6, %add.ptr
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %entry
  %or3 = or i32 %., 4
  store i32 %or3, i32* %flags, align 4, !tbaa !3
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %entry
  %8 = phi i32 [ %or3, %if.then2 ], [ %., %entry ]
  %9 = load i32* @PL_retstack_ix, align 4, !tbaa !3
  %10 = load i32* @PL_retstack_max, align 4, !tbaa !3
  %sub = add nsw i32 %10, -2
  %cmp5 = icmp slt i32 %9, %sub
  br i1 %cmp5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.end4
  %or7 = or i32 %8, 8
  store i32 %or7, i32* %flags, align 4, !tbaa !3
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.end4
  %11 = phi i32 [ %or7, %if.then6 ], [ %8, %if.end4 ]
  %12 = load i32* @PL_scopestack_ix, align 4, !tbaa !3
  %13 = load i32* @PL_scopestack_max, align 4, !tbaa !3
  %sub9 = add nsw i32 %13, -3
  %cmp10 = icmp slt i32 %12, %sub9
  br i1 %cmp10, label %if.then11, label %if.end13

if.then11:                                        ; preds = %if.end8
  %or12 = or i32 %11, 16
  store i32 %or12, i32* %flags, align 4, !tbaa !3
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.end8
  %14 = phi i32 [ %or12, %if.then11 ], [ %11, %if.end8 ]
  %idxprom = sext i32 %sig to i64
  %15 = load %struct.sv*** @PL_psig_ptr, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %struct.sv** %15, i64 %idxprom
  %16 = load %struct.sv** %arrayidx, align 8, !tbaa !0
  %tobool = icmp eq %struct.sv* %16, null
  br i1 %tobool, label %if.then14, label %if.end33

if.then14:                                        ; preds = %if.end13
  %17 = load %struct.gv** @PL_stderrgv, align 8, !tbaa !0
  %tobool15 = icmp eq %struct.gv* %17, null
  br i1 %tobool15, label %cond.false, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then14
  %sv_flags = getelementptr inbounds %struct.gv* %17, i64 0, i32 2
  %18 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %18, 255
  %cmp16 = icmp eq i32 %and, 13
  br i1 %cmp16, label %land.lhs.true17, label %cond.false

land.lhs.true17:                                  ; preds = %land.lhs.true
  %sv_any = getelementptr inbounds %struct.gv* %17, i64 0, i32 0
  %19 = load %struct.xpvgv** %sv_any, align 8, !tbaa !0
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %19, i64 0, i32 7
  %20 = load %struct.gp** %xgv_gp, align 8, !tbaa !0
  %gp_io = getelementptr inbounds %struct.gp* %20, i64 0, i32 2
  %21 = load %struct.io** %gp_io, align 8, !tbaa !0
  %tobool18 = icmp eq %struct.io* %21, null
  br i1 %tobool18, label %cond.false, label %land.lhs.true19

land.lhs.true19:                                  ; preds = %land.lhs.true17
  %sv_any23 = getelementptr inbounds %struct.io* %21, i64 0, i32 0
  %22 = load %struct.xpvio** %sv_any23, align 8, !tbaa !0
  %xio_ofp = getelementptr inbounds %struct.xpvio* %22, i64 0, i32 8
  %23 = load %struct._PerlIO*** %xio_ofp, align 8, !tbaa !0
  %tobool24 = icmp eq %struct._PerlIO** %23, null
  br i1 %tobool24, label %cond.false, label %cond.end

cond.false:                                       ; preds = %land.lhs.true19, %land.lhs.true17, %if.then14, %land.lhs.true
  %call = call %struct._PerlIO** @Perl_PerlIO_stderr() #7
  br label %cond.end

cond.end:                                         ; preds = %land.lhs.true19, %cond.false
  %cond = phi %struct._PerlIO** [ %call, %cond.false ], [ %23, %land.lhs.true19 ]
  %arrayidx31 = getelementptr inbounds [0 x i8*]* @PL_sig_name, i64 0, i64 %idxprom
  %24 = load i8** %arrayidx31, align 8, !tbaa !0
  %call32 = call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %cond, i8* getelementptr inbounds ([51 x i8]* @.str41, i64 0, i64 0), i8* %24) #7
  call void @exit(i32 %sig) #9
  unreachable

if.end33:                                         ; preds = %if.end13
  %and34 = and i32 %14, 1
  %tobool35 = icmp eq i32 %and34, 0
  br i1 %tobool35, label %if.end38, label %if.then36

if.then36:                                        ; preds = %if.end33
  %add37 = add nsw i32 %4, 5
  store i32 %add37, i32* @PL_savestack_ix, align 4, !tbaa !3
  %25 = bitcast i32* %flags to i8*
  call void @Perl_save_destructor_x(void (i8*)* @unwind_handler_stack, i8* %25) #7
  %.pre = load i32* %flags, align 4, !tbaa !3
  br label %if.end38

if.end38:                                         ; preds = %if.end33, %if.then36
  %26 = phi i32 [ %14, %if.end33 ], [ %.pre, %if.then36 ]
  %and39 = and i32 %26, 4
  %tobool40 = icmp eq i32 %and39, 0
  br i1 %tobool40, label %if.end42, label %if.then41

if.then41:                                        ; preds = %if.end38
  %27 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i32* %27, i64 1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !0
  br label %if.end42

if.end42:                                         ; preds = %if.end38, %if.then41
  %and43 = and i32 %26, 8
  %tobool44 = icmp eq i32 %and43, 0
  br i1 %tobool44, label %if.end48, label %if.then45

if.then45:                                        ; preds = %if.end42
  %28 = load i32* @PL_retstack_ix, align 4, !tbaa !3
  %inc = add nsw i32 %28, 1
  store i32 %inc, i32* @PL_retstack_ix, align 4, !tbaa !3
  %idxprom46 = sext i32 %inc to i64
  %29 = load %struct.op*** @PL_retstack, align 8, !tbaa !0
  %arrayidx47 = getelementptr inbounds %struct.op** %29, i64 %idxprom46
  store %struct.op* null, %struct.op** %arrayidx47, align 8, !tbaa !0
  br label %if.end48

if.end48:                                         ; preds = %if.end42, %if.then45
  %and49 = and i32 %26, 16
  %tobool50 = icmp eq i32 %and49, 0
  br i1 %tobool50, label %if.end53, label %if.then51

if.then51:                                        ; preds = %if.end48
  %30 = load i32* @PL_scopestack_ix, align 4, !tbaa !3
  %add52 = add nsw i32 %30, 1
  store i32 %add52, i32* @PL_scopestack_ix, align 4, !tbaa !3
  br label %if.end53

if.end53:                                         ; preds = %if.end48, %if.then51
  %31 = load %struct.sv*** @PL_psig_ptr, align 8, !tbaa !0
  %arrayidx55 = getelementptr inbounds %struct.sv** %31, i64 %idxprom
  %32 = load %struct.sv** %arrayidx55, align 8, !tbaa !0
  %sv_flags56 = getelementptr inbounds %struct.sv* %32, i64 0, i32 2
  %33 = load i32* %sv_flags56, align 4, !tbaa !3
  %and57 = and i32 %33, 524288
  %tobool58 = icmp eq i32 %and57, 0
  br i1 %tobool58, label %if.then67, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end53
  %sv_any61 = getelementptr inbounds %struct.sv* %32, i64 0, i32 0
  %34 = load i8** %sv_any61, align 8, !tbaa !0
  %xrv_rv = bitcast i8* %34 to %struct.sv**
  %35 = load %struct.sv** %xrv_rv, align 8, !tbaa !0
  %tobool62 = icmp eq %struct.sv* %35, null
  br i1 %tobool62, label %if.then67, label %lor.lhs.false63

lor.lhs.false63:                                  ; preds = %lor.lhs.false
  %36 = bitcast %struct.sv* %35 to %struct.cv*
  %37 = getelementptr inbounds %struct.sv* %35, i64 0, i32 2
  %38 = load i32* %37, align 4, !tbaa !3
  %and65 = and i32 %38, 255
  %cmp66 = icmp eq i32 %and65, 12
  br i1 %cmp66, label %if.end71, label %if.then67

if.then67:                                        ; preds = %lor.lhs.false63, %lor.lhs.false, %if.end53
  %call70 = call %struct.cv* @Perl_sv_2cv(%struct.sv* %32, %struct.hv** %st, %struct.gv** %gv, i32 1) #7
  br label %if.end71

if.end71:                                         ; preds = %lor.lhs.false63, %if.then67
  %cv.0 = phi %struct.cv* [ %call70, %if.then67 ], [ %36, %lor.lhs.false63 ]
  %tobool72 = icmp ne %struct.cv* %cv.0, null
  br i1 %tobool72, label %lor.lhs.false73, label %if.then76

lor.lhs.false73:                                  ; preds = %if.end71
  %sv_any74 = getelementptr inbounds %struct.cv* %cv.0, i64 0, i32 0
  %39 = load %struct.xpvcv** %sv_any74, align 8, !tbaa !0
  %xcv_root = getelementptr inbounds %struct.xpvcv* %39, i64 0, i32 9
  %40 = load %struct.op** %xcv_root, align 8, !tbaa !0
  %tobool75 = icmp eq %struct.op* %40, null
  br i1 %tobool75, label %if.then76, label %if.end145

if.then76:                                        ; preds = %lor.lhs.false73, %if.end71
  %41 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings = getelementptr inbounds %struct.cop* %41, i64 0, i32 14
  %42 = load %struct.sv** %cop_warnings, align 8, !tbaa !0
  %cmp77 = icmp eq %struct.sv* %42, null
  br i1 %cmp77, label %lor.lhs.false90, label %land.lhs.true78

land.lhs.true78:                                  ; preds = %if.then76
  %43 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings79 = getelementptr inbounds %struct.cop* %43, i64 0, i32 14
  %44 = load %struct.sv** %cop_warnings79, align 8, !tbaa !0
  %cmp80 = icmp eq %struct.sv* %44, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp80, label %lor.lhs.false90, label %land.lhs.true81

land.lhs.true81:                                  ; preds = %land.lhs.true78
  %45 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings82 = getelementptr inbounds %struct.cop* %45, i64 0, i32 14
  %46 = load %struct.sv** %cop_warnings82, align 8, !tbaa !0
  %cmp83 = icmp eq %struct.sv* %46, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp83, label %if.then98, label %lor.lhs.false84

lor.lhs.false84:                                  ; preds = %land.lhs.true81
  %47 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings85 = getelementptr inbounds %struct.cop* %47, i64 0, i32 14
  %48 = load %struct.sv** %cop_warnings85, align 8, !tbaa !0
  %sv_any86 = getelementptr inbounds %struct.sv* %48, i64 0, i32 0
  %49 = load i8** %sv_any86, align 8, !tbaa !0
  %xpv_pv = bitcast i8* %49 to i8**
  %50 = load i8** %xpv_pv, align 8, !tbaa !0
  %arrayidx87 = getelementptr inbounds i8* %50, i64 6
  %51 = load i8* %arrayidx87, align 1, !tbaa !1
  %and88 = and i8 %51, 16
  %tobool89 = icmp eq i8 %and88, 0
  br i1 %tobool89, label %lor.lhs.false90, label %if.then98

lor.lhs.false90:                                  ; preds = %lor.lhs.false84, %land.lhs.true78, %if.then76
  %52 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings91 = getelementptr inbounds %struct.cop* %52, i64 0, i32 14
  %53 = load %struct.sv** %cop_warnings91, align 8, !tbaa !0
  %cmp92 = icmp eq %struct.sv* %53, null
  br i1 %cmp92, label %land.lhs.true94, label %cleanup

land.lhs.true94:                                  ; preds = %lor.lhs.false90
  %54 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and96 = and i8 %54, 1
  %tobool97 = icmp eq i8 %and96, 0
  br i1 %tobool97, label %cleanup, label %if.then98

if.then98:                                        ; preds = %lor.lhs.false84, %land.lhs.true94, %land.lhs.true81
  %arrayidx100 = getelementptr inbounds [0 x i8*]* @PL_sig_name, i64 0, i64 %idxprom
  %55 = load i8** %arrayidx100, align 8, !tbaa !0
  %56 = load %struct.gv** %gv, align 8, !tbaa !0
  %tobool101 = icmp eq %struct.gv* %56, null
  br i1 %tobool101, label %cond.false114, label %cond.true102

cond.true102:                                     ; preds = %if.then98
  %sv_any103 = getelementptr inbounds %struct.gv* %56, i64 0, i32 0
  %57 = load %struct.xpvgv** %sv_any103, align 8, !tbaa !0
  %xgv_gp104 = getelementptr inbounds %struct.xpvgv* %57, i64 0, i32 7
  %58 = load %struct.gp** %xgv_gp104, align 8, !tbaa !0
  %gp_egv = getelementptr inbounds %struct.gp* %58, i64 0, i32 6
  %59 = load %struct.gv** %gp_egv, align 8, !tbaa !0
  %tobool105 = icmp eq %struct.gv* %59, null
  %.376 = select i1 %tobool105, %struct.gv* %56, %struct.gv* %59
  %sv_any113 = getelementptr inbounds %struct.gv* %.376, i64 0, i32 0
  %60 = load %struct.xpvgv** %sv_any113, align 8, !tbaa !0
  %xgv_name = getelementptr inbounds %struct.xpvgv* %60, i64 0, i32 8
  %61 = load i8** %xgv_name, align 8, !tbaa !0
  br label %cond.end142

cond.false114:                                    ; preds = %if.then98
  br i1 %tobool72, label %land.lhs.true116, label %cond.end142

land.lhs.true116:                                 ; preds = %cond.false114
  %sv_any117 = getelementptr inbounds %struct.cv* %cv.0, i64 0, i32 0
  %62 = load %struct.xpvcv** %sv_any117, align 8, !tbaa !0
  %xcv_gv = getelementptr inbounds %struct.xpvcv* %62, i64 0, i32 12
  %63 = load %struct.gv** %xcv_gv, align 8, !tbaa !0
  %tobool118 = icmp eq %struct.gv* %63, null
  br i1 %tobool118, label %cond.end142, label %cond.true119

cond.true119:                                     ; preds = %land.lhs.true116
  %sv_any122 = getelementptr inbounds %struct.gv* %63, i64 0, i32 0
  %64 = load %struct.xpvgv** %sv_any122, align 8, !tbaa !0
  %xgv_gp123 = getelementptr inbounds %struct.xpvgv* %64, i64 0, i32 7
  %65 = load %struct.gp** %xgv_gp123, align 8, !tbaa !0
  %gp_egv124 = getelementptr inbounds %struct.gp* %65, i64 0, i32 6
  %66 = load %struct.gv** %gp_egv124, align 8, !tbaa !0
  %tobool125 = icmp eq %struct.gv* %66, null
  %.377 = select i1 %tobool125, %struct.gv* %63, %struct.gv* %66
  %sv_any137 = getelementptr inbounds %struct.gv* %.377, i64 0, i32 0
  %67 = load %struct.xpvgv** %sv_any137, align 8, !tbaa !0
  %xgv_name138 = getelementptr inbounds %struct.xpvgv* %67, i64 0, i32 8
  %68 = load i8** %xgv_name138, align 8, !tbaa !0
  br label %cond.end142

cond.end142:                                      ; preds = %land.lhs.true116, %cond.true119, %cond.false114, %cond.true102
  %cond143 = phi i8* [ %61, %cond.true102 ], [ %68, %cond.true119 ], [ getelementptr inbounds ([9 x i8]* @.str43, i64 0, i64 0), %land.lhs.true116 ], [ getelementptr inbounds ([9 x i8]* @.str43, i64 0, i64 0), %cond.false114 ]
  call void (i32, i8*, ...)* @Perl_warner(i32 26, i8* getelementptr inbounds ([33 x i8]* @.str42, i64 0, i64 0), i8* %55, i8* %cond143) #7
  br label %cleanup

if.end145:                                        ; preds = %lor.lhs.false73
  %69 = load %struct.sv*** @PL_psig_name, align 8, !tbaa !0
  %arrayidx147 = getelementptr inbounds %struct.sv** %69, i64 %idxprom
  %70 = load %struct.sv** %arrayidx147, align 8, !tbaa !0
  %tobool148 = icmp eq %struct.sv* %70, null
  br i1 %tobool148, label %if.else, label %if.then149

if.then149:                                       ; preds = %if.end145
  store %struct.sv* %70, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %sv_refcnt = getelementptr inbounds %struct.sv* %70, i64 0, i32 1
  %71 = load i32* %sv_refcnt, align 4, !tbaa !3
  %inc153 = add i32 %71, 1
  store i32 %inc153, i32* %sv_refcnt, align 4, !tbaa !3
  %72 = load i32* %flags, align 4, !tbaa !3
  %or155 = or i32 %72, 64
  store i32 %or155, i32* %flags, align 4, !tbaa !3
  store %struct.sv* %70, %struct.sv** @sig_sv, align 8, !tbaa !0
  br label %if.end159

if.else:                                          ; preds = %if.end145
  %call156 = call %struct.sv* @Perl_sv_newmortal() #7
  %arrayidx158 = getelementptr inbounds [0 x i8*]* @PL_sig_name, i64 0, i64 %idxprom
  %73 = load i8** %arrayidx158, align 8, !tbaa !0
  call void @Perl_sv_setpv(%struct.sv* %call156, i8* %73) #7
  br label %if.end159

if.end159:                                        ; preds = %if.else, %if.then149
  %sv.0 = phi %struct.sv* [ %70, %if.then149 ], [ %call156, %if.else ]
  %74 = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_next = getelementptr inbounds %struct.stackinfo* %74, i64 0, i32 6
  %75 = load %struct.stackinfo** %si_next, align 8, !tbaa !0
  %tobool160 = icmp eq %struct.stackinfo* %75, null
  br i1 %tobool160, label %if.then161, label %if.end164

if.then161:                                       ; preds = %if.end159
  %call162 = call %struct.stackinfo* @Perl_new_stackinfo(i32 32, i32 13) #7
  %76 = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_prev = getelementptr inbounds %struct.stackinfo* %call162, i64 0, i32 5
  store %struct.stackinfo* %76, %struct.stackinfo** %si_prev, align 8, !tbaa !0
  %77 = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_next163 = getelementptr inbounds %struct.stackinfo* %77, i64 0, i32 6
  store %struct.stackinfo* %call162, %struct.stackinfo** %si_next163, align 8, !tbaa !0
  br label %if.end164

if.end164:                                        ; preds = %if.end159, %if.then161
  %next.0 = phi %struct.stackinfo* [ %call162, %if.then161 ], [ %75, %if.end159 ]
  %si_type = getelementptr inbounds %struct.stackinfo* %next.0, i64 0, i32 4
  store i32 4, i32* %si_type, align 4, !tbaa !3
  %si_cxix = getelementptr inbounds %struct.stackinfo* %next.0, i64 0, i32 2
  store i32 -1, i32* %si_cxix, align 4, !tbaa !3
  %si_stack = getelementptr inbounds %struct.stackinfo* %next.0, i64 0, i32 0
  %78 = load %struct.av** %si_stack, align 8, !tbaa !0
  %sv_any165 = getelementptr inbounds %struct.av* %78, i64 0, i32 0
  %79 = load %struct.xpvav** %sv_any165, align 8, !tbaa !0
  %xav_fill = getelementptr inbounds %struct.xpvav* %79, i64 0, i32 1
  store i64 0, i64* %xav_fill, align 8, !tbaa !4
  %80 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %80 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3
  %81 = load %struct.av** @PL_curstack, align 8, !tbaa !0
  %sv_any166 = getelementptr inbounds %struct.av* %81, i64 0, i32 0
  %82 = load %struct.xpvav** %sv_any166, align 8, !tbaa !0
  %xav_fill167 = getelementptr inbounds %struct.xpvav* %82, i64 0, i32 1
  store i64 %sub.ptr.div, i64* %xav_fill167, align 8, !tbaa !4
  %xav_array = getelementptr inbounds %struct.xpvav* %79, i64 0, i32 0
  %83 = load i8** %xav_array, align 8, !tbaa !0
  %84 = bitcast i8* %83 to %struct.sv**
  store %struct.sv** %84, %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %85 = load %struct.av** %si_stack, align 8, !tbaa !0
  %sv_any171 = getelementptr inbounds %struct.av* %85, i64 0, i32 0
  %86 = load %struct.xpvav** %sv_any171, align 8, !tbaa !0
  %xav_max = getelementptr inbounds %struct.xpvav* %86, i64 0, i32 2
  %87 = load i64* %xav_max, align 8, !tbaa !4
  %add.ptr172 = getelementptr inbounds %struct.sv** %84, i64 %87
  store %struct.sv** %add.ptr172, %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %88 = load %struct.av** %si_stack, align 8, !tbaa !0
  %sv_any174 = getelementptr inbounds %struct.av* %88, i64 0, i32 0
  %89 = load %struct.xpvav** %sv_any174, align 8, !tbaa !0
  %xav_fill175 = getelementptr inbounds %struct.xpvav* %89, i64 0, i32 1
  %90 = load i64* %xav_fill175, align 8, !tbaa !4
  %add.ptr176 = getelementptr inbounds %struct.sv** %84, i64 %90
  store %struct.sv** %add.ptr176, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %91 = load %struct.av** %si_stack, align 8, !tbaa !0
  store %struct.av* %91, %struct.av** @PL_curstack, align 8, !tbaa !0
  store %struct.stackinfo* %next.0, %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %92 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr178 = getelementptr inbounds i32* %92, i64 1
  store i32* %incdec.ptr178, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %93 = load i32** @PL_markstack_max, align 8, !tbaa !0
  %cmp179 = icmp eq i32* %incdec.ptr178, %93
  br i1 %cmp179, label %if.then181, label %if.end182

if.then181:                                       ; preds = %if.end164
  call void @Perl_markstack_grow() #7
  %.pre378 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %.pre379 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  br label %if.end182

if.end182:                                        ; preds = %if.then181, %if.end164
  %94 = phi i32* [ %.pre379, %if.then181 ], [ %incdec.ptr178, %if.end164 ]
  %95 = phi %struct.sv** [ %.pre378, %if.then181 ], [ %84, %if.end164 ]
  %sub.ptr.lhs.cast183 = ptrtoint %struct.sv** %add.ptr176 to i64
  %sub.ptr.rhs.cast184 = ptrtoint %struct.sv** %95 to i64
  %sub.ptr.sub185 = sub i64 %sub.ptr.lhs.cast183, %sub.ptr.rhs.cast184
  %sub.ptr.div186375 = lshr exact i64 %sub.ptr.sub185, 3
  %conv187 = trunc i64 %sub.ptr.div186375 to i32
  store i32 %conv187, i32* %94, align 4, !tbaa !3
  %add.ptr176.sum = add i64 %90, 1
  %incdec.ptr188 = getelementptr inbounds %struct.sv** %84, i64 %add.ptr176.sum
  store %struct.sv* %sv.0, %struct.sv** %incdec.ptr188, align 8, !tbaa !0
  store %struct.sv** %incdec.ptr188, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %96 = bitcast %struct.cv* %cv.0 to %struct.sv*
  %call189 = call i32 @Perl_call_sv(%struct.sv* %96, i32 6) #7
  %97 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %98 = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_prev191 = getelementptr inbounds %struct.stackinfo* %98, i64 0, i32 5
  %99 = load %struct.stackinfo** %si_prev191, align 8, !tbaa !0
  %tobool192 = icmp eq %struct.stackinfo* %99, null
  br i1 %tobool192, label %if.then193, label %if.end223

if.then193:                                       ; preds = %if.end182
  %100 = load %struct.gv** @PL_stderrgv, align 8, !tbaa !0
  %tobool194 = icmp eq %struct.gv* %100, null
  br i1 %tobool194, label %cond.false218, label %land.lhs.true195

land.lhs.true195:                                 ; preds = %if.then193
  %sv_flags196 = getelementptr inbounds %struct.gv* %100, i64 0, i32 2
  %101 = load i32* %sv_flags196, align 4, !tbaa !3
  %and197 = and i32 %101, 255
  %cmp198 = icmp eq i32 %and197, 13
  br i1 %cmp198, label %land.lhs.true200, label %cond.false218

land.lhs.true200:                                 ; preds = %land.lhs.true195
  %sv_any201 = getelementptr inbounds %struct.gv* %100, i64 0, i32 0
  %102 = load %struct.xpvgv** %sv_any201, align 8, !tbaa !0
  %xgv_gp202 = getelementptr inbounds %struct.xpvgv* %102, i64 0, i32 7
  %103 = load %struct.gp** %xgv_gp202, align 8, !tbaa !0
  %gp_io203 = getelementptr inbounds %struct.gp* %103, i64 0, i32 2
  %104 = load %struct.io** %gp_io203, align 8, !tbaa !0
  %tobool204 = icmp eq %struct.io* %104, null
  br i1 %tobool204, label %cond.false218, label %land.lhs.true205

land.lhs.true205:                                 ; preds = %land.lhs.true200
  %sv_any209 = getelementptr inbounds %struct.io* %104, i64 0, i32 0
  %105 = load %struct.xpvio** %sv_any209, align 8, !tbaa !0
  %xio_ofp210 = getelementptr inbounds %struct.xpvio* %105, i64 0, i32 8
  %106 = load %struct._PerlIO*** %xio_ofp210, align 8, !tbaa !0
  %tobool211 = icmp eq %struct._PerlIO** %106, null
  br i1 %tobool211, label %cond.false218, label %cond.end220

cond.false218:                                    ; preds = %land.lhs.true205, %land.lhs.true200, %if.then193, %land.lhs.true195
  %call219 = call %struct._PerlIO** @Perl_PerlIO_stderr() #7
  br label %cond.end220

cond.end220:                                      ; preds = %land.lhs.true205, %cond.false218
  %cond221 = phi %struct._PerlIO** [ %call219, %cond.false218 ], [ %106, %land.lhs.true205 ]
  %call222 = call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %cond221, i8* getelementptr inbounds ([17 x i8]* @.str24, i64 0, i64 0)) #7
  call void @Perl_my_exit(i32 1) #7
  br label %if.end223

if.end223:                                        ; preds = %if.end182, %cond.end220
  %107 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %sub.ptr.lhs.cast224 = ptrtoint %struct.sv** %97 to i64
  %sub.ptr.rhs.cast225 = ptrtoint %struct.sv** %107 to i64
  %sub.ptr.sub226 = sub i64 %sub.ptr.lhs.cast224, %sub.ptr.rhs.cast225
  %sub.ptr.div227 = ashr exact i64 %sub.ptr.sub226, 3
  %108 = load %struct.av** @PL_curstack, align 8, !tbaa !0
  %sv_any228 = getelementptr inbounds %struct.av* %108, i64 0, i32 0
  %109 = load %struct.xpvav** %sv_any228, align 8, !tbaa !0
  %xav_fill229 = getelementptr inbounds %struct.xpvav* %109, i64 0, i32 1
  store i64 %sub.ptr.div227, i64* %xav_fill229, align 8, !tbaa !4
  %si_stack230 = getelementptr inbounds %struct.stackinfo* %99, i64 0, i32 0
  %110 = load %struct.av** %si_stack230, align 8, !tbaa !0
  %sv_any231 = getelementptr inbounds %struct.av* %110, i64 0, i32 0
  %111 = load %struct.xpvav** %sv_any231, align 8, !tbaa !0
  %xav_array232 = getelementptr inbounds %struct.xpvav* %111, i64 0, i32 0
  %112 = load i8** %xav_array232, align 8, !tbaa !0
  %113 = bitcast i8* %112 to %struct.sv**
  store %struct.sv** %113, %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %114 = load %struct.av** %si_stack230, align 8, !tbaa !0
  %sv_any234 = getelementptr inbounds %struct.av* %114, i64 0, i32 0
  %115 = load %struct.xpvav** %sv_any234, align 8, !tbaa !0
  %xav_max235 = getelementptr inbounds %struct.xpvav* %115, i64 0, i32 2
  %116 = load i64* %xav_max235, align 8, !tbaa !4
  %add.ptr236 = getelementptr inbounds %struct.sv** %113, i64 %116
  store %struct.sv** %add.ptr236, %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %117 = load %struct.av** %si_stack230, align 8, !tbaa !0
  %sv_any238 = getelementptr inbounds %struct.av* %117, i64 0, i32 0
  %118 = load %struct.xpvav** %sv_any238, align 8, !tbaa !0
  %xav_fill239 = getelementptr inbounds %struct.xpvav* %118, i64 0, i32 1
  %119 = load i64* %xav_fill239, align 8, !tbaa !4
  %add.ptr240 = getelementptr inbounds %struct.sv** %113, i64 %119
  store %struct.sv** %add.ptr240, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %120 = load %struct.av** %si_stack230, align 8, !tbaa !0
  store %struct.av* %120, %struct.av** @PL_curstack, align 8, !tbaa !0
  store %struct.stackinfo* %99, %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %121 = load %struct.gv** @PL_errgv, align 8, !tbaa !0
  %sv_any242 = getelementptr inbounds %struct.gv* %121, i64 0, i32 0
  %122 = load %struct.xpvgv** %sv_any242, align 8, !tbaa !0
  %xgv_gp243 = getelementptr inbounds %struct.xpvgv* %122, i64 0, i32 7
  %123 = load %struct.gp** %xgv_gp243, align 8, !tbaa !0
  %gp_sv = getelementptr inbounds %struct.gp* %123, i64 0, i32 0
  %124 = load %struct.sv** %gp_sv, align 8, !tbaa !0
  %tobool244 = icmp eq %struct.sv* %124, null
  br i1 %tobool244, label %cleanup, label %cond.false246

cond.false246:                                    ; preds = %if.end223
  %sv_flags250 = getelementptr inbounds %struct.sv* %124, i64 0, i32 2
  %125 = load i32* %sv_flags250, align 4, !tbaa !3
  %and251 = and i32 %125, 262144
  %tobool252 = icmp eq i32 %and251, 0
  br i1 %tobool252, label %cond.false272, label %cond.true253

cond.true253:                                     ; preds = %cond.false246
  %sv_any257 = getelementptr inbounds %struct.sv* %124, i64 0, i32 0
  %126 = load i8** %sv_any257, align 8, !tbaa !0
  %127 = bitcast i8* %126 to %struct.xpv*
  store %struct.xpv* %127, %struct.xpv** @PL_Xpv, align 8, !tbaa !0
  %tobool258 = icmp eq i8* %126, null
  br i1 %tobool258, label %cleanup, label %land.lhs.true259

land.lhs.true259:                                 ; preds = %cond.true253
  %xpv_cur = getelementptr inbounds i8* %126, i64 8
  %128 = bitcast i8* %xpv_cur to i64*
  %129 = load i64* %128, align 8, !tbaa !4
  %cmp260 = icmp ugt i64 %129, 1
  br i1 %cmp260, label %if.then307, label %lor.lhs.false262

lor.lhs.false262:                                 ; preds = %land.lhs.true259
  %tobool264 = icmp eq i64 %129, 0
  br i1 %tobool264, label %cleanup, label %land.lhs.true265

land.lhs.true265:                                 ; preds = %lor.lhs.false262
  %xpv_pv266 = bitcast i8* %126 to i8**
  %130 = load i8** %xpv_pv266, align 8, !tbaa !0
  %131 = load i8* %130, align 1, !tbaa !1
  %cmp268 = icmp eq i8 %131, 48
  br i1 %cmp268, label %cleanup, label %if.then307

cond.false272:                                    ; preds = %cond.false246
  %and277 = and i32 %125, 65536
  %tobool278 = icmp eq i32 %and277, 0
  br i1 %tobool278, label %cond.false286, label %cond.true279

cond.true279:                                     ; preds = %cond.false272
  %sv_any283 = getelementptr inbounds %struct.sv* %124, i64 0, i32 0
  %132 = load i8** %sv_any283, align 8, !tbaa !0
  %xiv_iv = getelementptr inbounds i8* %132, i64 24
  %133 = bitcast i8* %xiv_iv to i64*
  %134 = load i64* %133, align 8, !tbaa !4
  %cmp284 = icmp eq i64 %134, 0
  br i1 %cmp284, label %cleanup, label %if.then307

cond.false286:                                    ; preds = %cond.false272
  %and291 = and i32 %125, 131072
  %tobool292 = icmp eq i32 %and291, 0
  br i1 %tobool292, label %cond.false300, label %cond.true293

cond.true293:                                     ; preds = %cond.false286
  %sv_any297 = getelementptr inbounds %struct.sv* %124, i64 0, i32 0
  %135 = load i8** %sv_any297, align 8, !tbaa !0
  %xnv_nv = getelementptr inbounds i8* %135, i64 32
  %136 = bitcast i8* %xnv_nv to double*
  %137 = load double* %136, align 8, !tbaa !5
  %cmp298 = fcmp une double %137, 0.000000e+00
  br i1 %cmp298, label %if.then307, label %cleanup

cond.false300:                                    ; preds = %cond.false286
  %call304 = call signext i8 @Perl_sv_2bool(%struct.sv* %124) #7
  %tobool306 = icmp eq i8 %call304, 0
  br i1 %tobool306, label %cleanup, label %if.then307

if.then307:                                       ; preds = %land.lhs.true265, %cond.true279, %cond.false300, %land.lhs.true259, %cond.true293
  %call308 = call void (i32)* (i32, void (i32)*)* @Perl_rsignal(i32 %sig, void (i32)* inttoptr (i64 1 to void (i32)*)) #7
  %138 = load void (i32)** @PL_csighandlerp, align 8, !tbaa !0
  %call309 = call void (i32)* (i32, void (i32)*)* @Perl_rsignal(i32 %sig, void (i32)* %138) #7
  %call310 = call %struct.op* (i8*, ...)* @Perl_die(i8* null) #7
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true265, %lor.lhs.false262, %cond.true253, %cond.true279, %cond.false300, %if.end223, %land.lhs.true94, %cond.true293, %if.then307, %lor.lhs.false90, %cond.end142
  %sv.1 = phi %struct.sv* [ %sv.0, %if.then307 ], [ %sv.0, %land.lhs.true265 ], [ %sv.0, %lor.lhs.false262 ], [ %sv.0, %cond.true253 ], [ %sv.0, %cond.true279 ], [ %sv.0, %cond.true293 ], [ %sv.0, %cond.false300 ], [ %sv.0, %if.end223 ], [ null, %cond.end142 ], [ null, %land.lhs.true94 ], [ null, %lor.lhs.false90 ]
  %139 = load i32* %flags, align 4, !tbaa !3
  %and312 = and i32 %139, 1
  %tobool313 = icmp eq i32 %and312, 0
  br i1 %tobool313, label %if.end316, label %if.then314

if.then314:                                       ; preds = %cleanup
  %140 = load i32* @PL_savestack_ix, align 4, !tbaa !3
  %sub315 = add nsw i32 %140, -8
  store i32 %sub315, i32* @PL_savestack_ix, align 4, !tbaa !3
  br label %if.end316

if.end316:                                        ; preds = %cleanup, %if.then314
  %and317 = and i32 %139, 4
  %tobool318 = icmp eq i32 %and317, 0
  br i1 %tobool318, label %if.end321, label %if.then319

if.then319:                                       ; preds = %if.end316
  %141 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr320 = getelementptr inbounds i32* %141, i64 -1
  store i32* %incdec.ptr320, i32** @PL_markstack_ptr, align 8, !tbaa !0
  br label %if.end321

if.end321:                                        ; preds = %if.end316, %if.then319
  %and322 = and i32 %139, 8
  %tobool323 = icmp eq i32 %and322, 0
  br i1 %tobool323, label %if.end325, label %if.then324

if.then324:                                       ; preds = %if.end321
  %142 = load i32* @PL_retstack_ix, align 4, !tbaa !3
  %dec = add nsw i32 %142, -1
  store i32 %dec, i32* @PL_retstack_ix, align 4, !tbaa !3
  br label %if.end325

if.end325:                                        ; preds = %if.end321, %if.then324
  %and326 = and i32 %139, 16
  %tobool327 = icmp eq i32 %and326, 0
  br i1 %tobool327, label %if.end330, label %if.then328

if.then328:                                       ; preds = %if.end325
  %143 = load i32* @PL_scopestack_ix, align 4, !tbaa !3
  %sub329 = add nsw i32 %143, -1
  store i32 %sub329, i32* @PL_scopestack_ix, align 4, !tbaa !3
  br label %if.end330

if.end330:                                        ; preds = %if.end325, %if.then328
  %and331 = and i32 %139, 64
  %tobool332 = icmp eq i32 %and331, 0
  br i1 %tobool332, label %if.end334, label %if.then333

if.then333:                                       ; preds = %if.end330
  call void @Perl_sv_free(%struct.sv* %sv.1) #7
  br label %if.end334

if.end334:                                        ; preds = %if.end330, %if.then333
  store %struct.op* %2, %struct.op** @PL_op, align 8, !tbaa !0
  store %struct.sv* %1, %struct.sv** @PL_Sv, align 8, !tbaa !0
  store %struct.xpv* %3, %struct.xpv** @PL_Xpv, align 8, !tbaa !0
  ret void
}
