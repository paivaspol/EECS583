define i32 @Perl_magic_getpos(%struct.sv* %sv, %struct.magic* nocapture %mg) #0 {
entry:
  %i = alloca i32, align 4
  %sv_any = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %0 = load i8** %sv_any, align 8, !tbaa !0
  %xlv_targ = getelementptr inbounds i8* %0, i64 72
  %1 = bitcast i8* %xlv_targ to %struct.sv**
  %2 = load %struct.sv** %1, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %2, i64 0, i32 2
  %3 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %3, 255
  %cmp = icmp ugt i32 %and, 6
  br i1 %cmp, label %land.lhs.true, label %if.end16

land.lhs.true:                                    ; preds = %entry
  %sv_any1 = getelementptr inbounds %struct.sv* %2, i64 0, i32 0
  %4 = load i8** %sv_any1, align 8, !tbaa !0
  %xmg_magic = getelementptr inbounds i8* %4, i64 40
  %5 = bitcast i8* %xmg_magic to %struct.magic**
  %6 = load %struct.magic** %5, align 8, !tbaa !0
  %tobool = icmp eq %struct.magic* %6, null
  %tobool.i = icmp eq %struct.sv* %2, null
  %or.cond = or i1 %tobool, %tobool.i
  br i1 %or.cond, label %if.end16, label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %mg_moremagic.i = getelementptr inbounds %struct.magic* %mg.010.i, i64 0, i32 0
  %mg.0.i = load %struct.magic** %mg_moremagic.i, align 8
  %tobool1.i = icmp eq %struct.magic* %mg.0.i, null
  br i1 %tobool1.i, label %if.end16, label %for.body.i

for.body.i:                                       ; preds = %land.lhs.true, %for.cond.i
  %mg.010.i = phi %struct.magic* [ %mg.0.i, %for.cond.i ], [ %6, %land.lhs.true ]
  %mg_type.i = getelementptr inbounds %struct.magic* %mg.010.i, i64 0, i32 3
  %7 = load i8* %mg_type.i, align 1, !tbaa !1
  %cmp.i = icmp eq i8 %7, 103
  br i1 %cmp.i, label %land.lhs.true3, label %for.cond.i

land.lhs.true3:                                   ; preds = %for.body.i
  %mg_len = getelementptr inbounds %struct.magic* %mg.010.i, i64 0, i32 7
  %8 = load i32* %mg_len, align 4, !tbaa !3
  %cmp4 = icmp sgt i32 %8, -1
  br i1 %cmp4, label %if.then5, label %if.end16

if.then5:                                         ; preds = %land.lhs.true3
  store i32 %8, i32* %i, align 4, !tbaa !3
  %9 = load i32* %sv_flags, align 4, !tbaa !3
  %and8 = and i32 %9, 536870912
  %tobool9 = icmp eq i32 %and8, 0
  br i1 %tobool9, label %if.end, label %land.lhs.true10

land.lhs.true10:                                  ; preds = %if.then5
  %10 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %op_private = getelementptr inbounds %struct.cop* %10, i64 0, i32 7
  %11 = load i8* %op_private, align 1, !tbaa !1
  %and11 = and i8 %11, 8
  %tobool12 = icmp eq i8 %and11, 0
  br i1 %tobool12, label %if.then13, label %if.end

if.then13:                                        ; preds = %land.lhs.true10
  call void @Perl_sv_pos_b2u(%struct.sv* %2, i32* %i) #7
  br label %if.end

if.end:                                           ; preds = %land.lhs.true10, %if.then5, %if.then13
  %12 = load i32* %i, align 4, !tbaa !3
  %13 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_arybase = getelementptr inbounds %struct.cop* %13, i64 0, i32 12
  %14 = load i32* %cop_arybase, align 4, !tbaa !3
  %add = add nsw i32 %14, %12
  %conv14 = sext i32 %add to i64
  call void @Perl_sv_setiv(%struct.sv* %sv, i64 %conv14) #7
  br label %return

if.end16:                                         ; preds = %for.cond.i, %land.lhs.true, %land.lhs.true3, %entry
  %sv_flags17 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 2
  %15 = load i32* %sv_flags17, align 4, !tbaa !3
  %and18 = and i32 %15, 1223753727
  store i32 %and18, i32* %sv_flags17, align 4, !tbaa !3
  %and20 = and i32 %15, 2097152
  %tobool21 = icmp eq i32 %and20, 0
  br i1 %tobool21, label %return, label %land.rhs

land.rhs:                                         ; preds = %if.end16
  %call22 = call i32 @Perl_sv_backoff(%struct.sv* %sv) #7
  br label %return

return:                                           ; preds = %land.rhs, %if.end16, %if.end
  ret i32 0
}
