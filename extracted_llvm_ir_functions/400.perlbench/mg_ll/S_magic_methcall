define internal fastcc i32 @S_magic_methcall(%struct.sv* %sv, %struct.magic* nocapture %mg, i8* %meth, i32 %flags, i32 %n, %struct.sv* %val) #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i32* %1, i64 1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %2 = load i32** @PL_markstack_max, align 8, !tbaa !0
  %cmp = icmp eq i32* %incdec.ptr, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @Perl_markstack_grow() #7
  %.pre = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = phi i32* [ %.pre, %if.then ], [ %incdec.ptr, %entry ]
  %4 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div74 = lshr exact i64 %sub.ptr.sub, 3
  %conv = trunc i64 %sub.ptr.div74 to i32
  store i32 %conv, i32* %3, align 4, !tbaa !3
  %5 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %sub.ptr.div4 = ashr exact i64 %sub.ptr.sub3, 3
  %conv5 = sext i32 %n to i64
  %cmp6 = icmp slt i64 %sub.ptr.div4, %conv5
  br i1 %cmp6, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end
  %call = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %0, %struct.sv** %0, i32 %n) #7
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.end
  %sp.0 = phi %struct.sv** [ %call, %if.then8 ], [ %0, %if.end ]
  %mg_obj = getelementptr inbounds %struct.magic* %mg, i64 0, i32 5
  %6 = load %struct.sv** %mg_obj, align 8, !tbaa !0
  %tobool = icmp eq %struct.sv* %6, null
  br i1 %tobool, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.end9
  %call11 = tail call %struct.sv* @Perl_newRV(%struct.sv* %sv) #7
  %call12 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call11) #7
  br label %cond.end

cond.end:                                         ; preds = %if.end9, %cond.false
  %cond = phi %struct.sv* [ %call12, %cond.false ], [ %6, %if.end9 ]
  %incdec.ptr13 = getelementptr inbounds %struct.sv** %sp.0, i64 1
  store %struct.sv* %cond, %struct.sv** %incdec.ptr13, align 8, !tbaa !0
  %cmp14 = icmp sgt i32 %n, 1
  br i1 %cmp14, label %if.then16, label %if.end53

if.then16:                                        ; preds = %cond.end
  %mg_ptr = getelementptr inbounds %struct.magic* %mg, i64 0, i32 6
  %7 = load i8** %mg_ptr, align 8, !tbaa !0
  %tobool17 = icmp eq i8* %7, null
  br i1 %tobool17, label %if.else36, label %if.then18

if.then18:                                        ; preds = %if.then16
  %mg_len = getelementptr inbounds %struct.magic* %mg, i64 0, i32 7
  %8 = load i32* %mg_len, align 4, !tbaa !3
  %cmp19 = icmp sgt i32 %8, -1
  br i1 %cmp19, label %if.then21, label %if.else

if.then21:                                        ; preds = %if.then18
  %conv24 = sext i32 %8 to i64
  %call25 = tail call %struct.sv* @Perl_newSVpvn(i8* %7, i64 %conv24) #7
  %call26 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call25) #7
  %incdec.ptr27 = getelementptr inbounds %struct.sv** %sp.0, i64 2
  store %struct.sv* %call26, %struct.sv** %incdec.ptr27, align 8, !tbaa !0
  br label %if.end48

if.else:                                          ; preds = %if.then18
  %cmp29 = icmp eq i32 %8, -2
  br i1 %cmp29, label %if.then31, label %if.end48

if.then31:                                        ; preds = %if.else
  %9 = bitcast i8* %7 to %struct.sv*
  %incdec.ptr33 = getelementptr inbounds %struct.sv** %sp.0, i64 2
  store %struct.sv* %9, %struct.sv** %incdec.ptr33, align 8, !tbaa !0
  br label %if.end48

if.else36:                                        ; preds = %if.then16
  %mg_type = getelementptr inbounds %struct.magic* %mg, i64 0, i32 3
  %10 = load i8* %mg_type, align 1, !tbaa !1
  %cmp38 = icmp eq i8 %10, 112
  br i1 %cmp38, label %if.then40, label %if.end48

if.then40:                                        ; preds = %if.else36
  %mg_len41 = getelementptr inbounds %struct.magic* %mg, i64 0, i32 7
  %11 = load i32* %mg_len41, align 4, !tbaa !3
  %conv42 = sext i32 %11 to i64
  %call43 = tail call %struct.sv* @Perl_newSViv(i64 %conv42) #7
  %call44 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call43) #7
  %incdec.ptr45 = getelementptr inbounds %struct.sv** %sp.0, i64 2
  store %struct.sv* %call44, %struct.sv** %incdec.ptr45, align 8, !tbaa !0
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.then31, %if.then21, %if.then40, %if.else36
  %sp.1 = phi %struct.sv** [ %incdec.ptr27, %if.then21 ], [ %incdec.ptr33, %if.then31 ], [ %incdec.ptr13, %if.else ], [ %incdec.ptr45, %if.then40 ], [ %incdec.ptr13, %if.else36 ]
  %cmp49 = icmp sgt i32 %n, 2
  br i1 %cmp49, label %if.then51, label %if.end53

if.then51:                                        ; preds = %if.end48
  %incdec.ptr52 = getelementptr inbounds %struct.sv** %sp.1, i64 1
  store %struct.sv* %val, %struct.sv** %incdec.ptr52, align 8, !tbaa !0
  br label %if.end53

if.end53:                                         ; preds = %cond.end, %if.then51, %if.end48
  %sp.2 = phi %struct.sv** [ %incdec.ptr52, %if.then51 ], [ %sp.1, %if.end48 ], [ %incdec.ptr13, %cond.end ]
  store %struct.sv** %sp.2, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %call54 = tail call i32 @Perl_call_method(i8* %meth, i32 %flags) #7
  ret i32 %call54
}
