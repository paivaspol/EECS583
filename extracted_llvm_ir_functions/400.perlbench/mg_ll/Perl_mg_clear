define i32 @Perl_mg_clear(%struct.sv* %sv) #0 {
entry:
  %call = tail call i32 @Perl_save_alloc(i32 16, i32 0) #7
  tail call fastcc void @S_save_magic(i32 %call, %struct.sv* %sv) #8
  %sv_any = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %0 = load i8** %sv_any, align 8, !tbaa !0
  %xmg_magic = getelementptr inbounds i8* %0, i64 40
  %1 = bitcast i8* %xmg_magic to %struct.magic**
  %mg.013 = load %struct.magic** %1, align 8
  %tobool14 = icmp eq %struct.magic* %mg.013, null
  br i1 %tobool14, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %mg.015 = phi %struct.magic* [ %mg.0, %for.inc ], [ %mg.013, %entry ]
  %mg_virtual = getelementptr inbounds %struct.magic* %mg.015, i64 0, i32 1
  %2 = load %struct.mgvtbl** %mg_virtual, align 8, !tbaa !0
  %tobool1 = icmp eq %struct.mgvtbl* %2, null
  br i1 %tobool1, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %svt_clear = getelementptr inbounds %struct.mgvtbl* %2, i64 0, i32 3
  %3 = load i32 (%struct.sv*, %struct.magic*)** %svt_clear, align 8, !tbaa !0
  %tobool2 = icmp eq i32 (%struct.sv*, %struct.magic*)* %3, null
  br i1 %tobool2, label %for.inc, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %call4 = tail call i32 %3(%struct.sv* %sv, %struct.magic* %mg.015) #7
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %for.body, %if.then
  %mg_moremagic = getelementptr inbounds %struct.magic* %mg.015, i64 0, i32 0
  %mg.0 = load %struct.magic** %mg_moremagic, align 8
  %tobool = icmp eq %struct.magic* %mg.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  %conv = sext i32 %call to i64
  %4 = inttoptr i64 %conv to i8*
  tail call void @restore_magic(i8* %4) #8
  ret i32 0
}
