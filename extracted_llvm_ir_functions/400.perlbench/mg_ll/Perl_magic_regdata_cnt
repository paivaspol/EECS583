define i32 @Perl_magic_regdata_cnt(%struct.sv* nocapture %sv, %struct.magic* nocapture %mg) #2 {
entry:
  %0 = load %struct.pmop** @PL_curpm, align 8, !tbaa !0
  %tobool = icmp eq %struct.pmop* %0, null
  br i1 %tobool, label %return, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %op_pmregexp = getelementptr inbounds %struct.pmop* %0, i64 0, i32 13
  %1 = load %struct.regexp** %op_pmregexp, align 8, !tbaa !0
  %tobool1 = icmp eq %struct.regexp* %1, null
  br i1 %tobool1, label %return, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %mg_obj = getelementptr inbounds %struct.magic* %mg, i64 0, i32 5
  %2 = load %struct.sv** %mg_obj, align 8, !tbaa !0
  %tobool2 = icmp eq %struct.sv* %2, null
  br i1 %tobool2, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.then
  %nparens = getelementptr inbounds %struct.regexp* %1, i64 0, i32 12
  %3 = load i32* %nparens, align 4, !tbaa !3
  br label %return

if.else:                                          ; preds = %if.then
  %lastparen = getelementptr inbounds %struct.regexp* %1, i64 0, i32 13
  %4 = load i32* %lastparen, align 4, !tbaa !3
  br label %return

return:                                           ; preds = %entry, %land.lhs.true, %if.else, %if.then3
  %retval.0 = phi i32 [ %3, %if.then3 ], [ %4, %if.else ], [ -1, %land.lhs.true ], [ -1, %entry ]
  ret i32 %retval.0
}
