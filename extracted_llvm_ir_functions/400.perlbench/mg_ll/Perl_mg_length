define i32 @Perl_mg_length(%struct.sv* %sv) #0 {
entry:
  %len = alloca i64, align 8
  %sv_any = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %0 = load i8** %sv_any, align 8, !tbaa !0
  %xmg_magic = getelementptr inbounds i8* %0, i64 40
  %1 = bitcast i8* %xmg_magic to %struct.magic**
  %mg.052 = load %struct.magic** %1, align 8
  %tobool53 = icmp eq %struct.magic* %mg.052, null
  br i1 %tobool53, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %mg.054 = phi %struct.magic* [ %mg.0, %for.inc ], [ %mg.052, %entry ]
  %mg_virtual = getelementptr inbounds %struct.magic* %mg.054, i64 0, i32 1
  %2 = load %struct.mgvtbl** %mg_virtual, align 8, !tbaa !0
  %tobool1 = icmp eq %struct.mgvtbl* %2, null
  br i1 %tobool1, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %svt_len = getelementptr inbounds %struct.mgvtbl* %2, i64 0, i32 2
  %3 = load i32 (%struct.sv*, %struct.magic*)** %svt_len, align 8, !tbaa !0
  %tobool2 = icmp eq i32 (%struct.sv*, %struct.magic*)* %3, null
  br i1 %tobool2, label %for.inc, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %call = call i32 @Perl_save_alloc(i32 16, i32 0) #7
  call fastcc void @S_save_magic(i32 %call, %struct.sv* %sv) #8
  %4 = load i32 (%struct.sv*, %struct.magic*)** %svt_len, align 8, !tbaa !0
  %call4 = call i32 %4(%struct.sv* %sv, %struct.magic* %mg.054) #7
  %conv = zext i32 %call4 to i64
  store i64 %conv, i64* %len, align 8, !tbaa !4
  %conv5 = sext i32 %call to i64
  %5 = inttoptr i64 %conv5 to i8*
  call void @restore_magic(i8* %5) #8
  br label %return

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %mg_moremagic = getelementptr inbounds %struct.magic* %mg.054, i64 0, i32 0
  %mg.0 = load %struct.magic** %mg_moremagic, align 8
  %tobool = icmp eq %struct.magic* %mg.0, null
  br i1 %tobool, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  %sv_flags = getelementptr inbounds %struct.sv* %sv, i64 0, i32 2
  %6 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %6, 536870912
  %tobool7 = icmp eq i32 %and, 0
  br i1 %tobool7, label %if.else, label %land.lhs.true8

land.lhs.true8:                                   ; preds = %for.end
  %7 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %op_private = getelementptr inbounds %struct.cop* %7, i64 0, i32 7
  %8 = load i8* %op_private, align 1, !tbaa !1
  %and10 = and i8 %8, 8
  %tobool11 = icmp eq i8 %and10, 0
  br i1 %tobool11, label %if.then12, label %land.lhs.true8.if.else_crit_edge

land.lhs.true8.if.else_crit_edge:                 ; preds = %land.lhs.true8
  %.pre56 = load i32* %sv_flags, align 4, !tbaa !3
  br label %if.else

if.then12:                                        ; preds = %land.lhs.true8
  %and14 = and i32 %6, 262144
  %cmp = icmp eq i32 %and14, 0
  br i1 %cmp, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then12
  %9 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %9, i64 8
  %10 = bitcast i8* %xpv_cur to i64*
  %11 = load i64* %10, align 8, !tbaa !4
  store i64 %11, i64* %len, align 8, !tbaa !4
  %xpv_pv = bitcast i8* %9 to i8**
  %12 = load i8** %xpv_pv, align 8, !tbaa !0
  br label %cond.end

cond.false:                                       ; preds = %if.then12
  %call18 = call i8* @Perl_sv_2pv_flags(%struct.sv* %sv, i64* %len, i32 2) #7
  %.pre = load i64* %len, align 8, !tbaa !4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %13 = phi i64 [ %11, %cond.true ], [ %.pre, %cond.false ]
  %cond = phi i8* [ %12, %cond.true ], [ %call18, %cond.false ]
  %add.ptr = getelementptr inbounds i8* %cond, i64 %13
  %call19 = call i64 @Perl_utf8_length(i8* %cond, i8* %add.ptr) #7
  store i64 %call19, i64* %len, align 8, !tbaa !4
  br label %return

if.else:                                          ; preds = %land.lhs.true8.if.else_crit_edge, %for.end
  %14 = phi i32 [ %.pre56, %land.lhs.true8.if.else_crit_edge ], [ %6, %for.end ]
  %and21 = and i32 %14, 262144
  %cmp22 = icmp eq i32 %and21, 0
  br i1 %cmp22, label %cond.false29, label %cond.true24

cond.true24:                                      ; preds = %if.else
  %15 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_cur26 = getelementptr inbounds i8* %15, i64 8
  %16 = bitcast i8* %xpv_cur26 to i64*
  %17 = load i64* %16, align 8, !tbaa !4
  store i64 %17, i64* %len, align 8, !tbaa !4
  br label %return

cond.false29:                                     ; preds = %if.else
  %call30 = call i8* @Perl_sv_2pv_flags(%struct.sv* %sv, i64* %len, i32 2) #7
  br label %return

return:                                           ; preds = %cond.end, %cond.false29, %cond.true24, %if.then
  %retval.0.in = load i64* %len, align 8
  %retval.0 = trunc i64 %retval.0.in to i32
  ret i32 %retval.0
}
