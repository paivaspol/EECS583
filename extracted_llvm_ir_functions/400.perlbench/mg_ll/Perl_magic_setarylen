define i32 @Perl_magic_setarylen(%struct.sv* %sv, %struct.magic* nocapture %mg) #0 {
entry:
  %mg_obj = getelementptr inbounds %struct.magic* %mg, i64 0, i32 5
  %0 = load %struct.sv** %mg_obj, align 8, !tbaa !0
  %1 = bitcast %struct.sv* %0 to %struct.av*
  %sv_flags = getelementptr inbounds %struct.sv* %sv, i64 0, i32 2
  %2 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %2, 65536
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %sv_any = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %3 = load i8** %sv_any, align 8, !tbaa !0
  %xiv_iv = getelementptr inbounds i8* %3, i64 24
  %4 = bitcast i8* %xiv_iv to i64*
  %5 = load i64* %4, align 8, !tbaa !4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call = tail call i64 @Perl_sv_2iv(%struct.sv* %sv) #7
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %5, %cond.true ], [ %call, %cond.false ]
  %6 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_arybase = getelementptr inbounds %struct.cop* %6, i64 0, i32 12
  %7 = load i32* %cop_arybase, align 4, !tbaa !3
  %conv3 = zext i32 %7 to i64
  %sub = sub nsw i64 %cond, %conv3
  %conv1 = trunc i64 %sub to i32
  tail call void @Perl_av_fill(%struct.av* %1, i32 %conv1) #7
  ret i32 0
}
