define void @Perl_pad_tidy(i32 %type) #0 {
entry:
  %0 = load %struct.av** @PL_comppad_name, align 8, !tbaa !3
  %sv_any = getelementptr inbounds %struct.av* %0, i64 0, i32 0
  %1 = load %struct.xpvav** %sv_any, align 8, !tbaa !3
  %xav_fill = getelementptr inbounds %struct.xpvav* %1, i64 0, i32 1
  %2 = load i64* %xav_fill, align 8, !tbaa !4
  %3 = load %struct.av** @PL_comppad, align 8, !tbaa !3
  %sv_any1 = getelementptr inbounds %struct.av* %3, i64 0, i32 0
  %4 = load %struct.xpvav** %sv_any1, align 8, !tbaa !3
  %xav_fill2 = getelementptr inbounds %struct.xpvav* %4, i64 0, i32 1
  %5 = load i64* %xav_fill2, align 8, !tbaa !4
  %cmp = icmp slt i64 %2, %5
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %conv = trunc i64 %5 to i32
  %call = tail call %struct.sv** @Perl_av_store(%struct.av* %0, i32 %conv, %struct.sv* null) #3
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  switch i32 %type, label %if.end127 [
    i32 1, label %if.then7
    i32 0, label %if.then53
    i32 2, label %if.then91
  ]

if.then7:                                         ; preds = %if.end
  %6 = load %struct.av** @PL_comppad_name, align 8, !tbaa !3
  %sv_any8 = getelementptr inbounds %struct.av* %6, i64 0, i32 0
  %7 = load %struct.xpvav** %sv_any8, align 8, !tbaa !3
  %xav_array = getelementptr inbounds %struct.xpvav* %7, i64 0, i32 0
  %8 = load i8** %xav_array, align 8, !tbaa !3
  %9 = bitcast i8* %8 to %struct.sv**
  %10 = load %struct.av** @PL_comppad, align 8, !tbaa !3
  %sv_any9 = getelementptr inbounds %struct.av* %10, i64 0, i32 0
  %11 = load %struct.xpvav** %sv_any9, align 8, !tbaa !3
  %xav_fill10 = getelementptr inbounds %struct.xpvav* %11, i64 0, i32 1
  %12 = load i64* %xav_fill10, align 8, !tbaa !4
  %cmp11176 = icmp eq i64 %12, 0
  br i1 %cmp11176, label %if.end127, label %for.body

for.body:                                         ; preds = %for.inc, %if.then7
  %ix.0177 = phi i64 [ %12, %if.then7 ], [ %dec, %for.inc ]
  %13 = load %struct.sv*** @PL_curpad, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds %struct.sv** %13, i64 %ix.0177
  %14 = load %struct.sv** %arrayidx, align 8, !tbaa !3
  %cmp13 = icmp eq %struct.sv* %14, @PL_sv_undef
  %cmp16 = icmp eq %struct.sv* %14, @PL_sv_yes
  %or.cond = or i1 %cmp13, %cmp16
  %cmp20 = icmp eq %struct.sv* %14, @PL_sv_no
  %or.cond161 = or i1 %or.cond, %cmp20
  %cmp24 = icmp eq %struct.sv* %14, @PL_sv_placeholder
  %or.cond162 = or i1 %or.cond161, %cmp24
  br i1 %or.cond162, label %for.inc, label %if.end27

if.end27:                                         ; preds = %for.body
  %arrayidx28 = getelementptr inbounds %struct.sv** %9, i64 %ix.0177
  %15 = load %struct.sv** %arrayidx28, align 8, !tbaa !3
  %cmp29 = icmp eq %struct.sv* %15, null
  %cmp31 = icmp eq %struct.sv* %15, @PL_sv_undef
  %or.cond163 = or i1 %cmp29, %cmp31
  br i1 %or.cond163, label %if.then39, label %land.lhs.true33

land.lhs.true33:                                  ; preds = %if.end27
  %sv_flags = getelementptr inbounds %struct.sv* %15, i64 0, i32 2
  %16 = load i32* %sv_flags, align 4, !tbaa !0
  %and = and i32 %16, 1048576
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %lor.lhs.false34, label %for.inc

lor.lhs.false34:                                  ; preds = %land.lhs.true33
  %sv_any35 = getelementptr inbounds %struct.sv* %15, i64 0, i32 0
  %17 = load i8** %sv_any35, align 8, !tbaa !3
  %xpv_pv = bitcast i8* %17 to i8**
  %18 = load i8** %xpv_pv, align 8, !tbaa !3
  %19 = load i8* %18, align 1, !tbaa !1
  %cmp37 = icmp eq i8 %19, 38
  br i1 %cmp37, label %for.inc, label %if.then39

if.then39:                                        ; preds = %if.end27, %lor.lhs.false34
  tail call void @Perl_sv_free(%struct.sv* %14) #3
  %20 = load %struct.sv*** @PL_curpad, align 8, !tbaa !3
  %arrayidx41 = getelementptr inbounds %struct.sv** %20, i64 %ix.0177
  store %struct.sv* null, %struct.sv** %arrayidx41, align 8, !tbaa !3
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true33, %lor.lhs.false34, %if.then39, %for.body
  %dec = add i64 %ix.0177, -1
  %cmp11 = icmp eq i64 %dec, 0
  br i1 %cmp11, label %if.end127, label %for.body

if.then53:                                        ; preds = %if.end
  %call46 = tail call %struct.av* @Perl_newAV() #3
  tail call void @Perl_av_extend(%struct.av* %call46, i32 0) #3
  %21 = load %struct.av** @PL_comppad, align 8, !tbaa !3
  %22 = bitcast %struct.av* %call46 to %struct.sv*
  %call47 = tail call %struct.sv** @Perl_av_store(%struct.av* %21, i32 0, %struct.sv* %22) #3
  %sv_any48 = getelementptr inbounds %struct.av* %call46, i64 0, i32 0
  %23 = load %struct.xpvav** %sv_any48, align 8, !tbaa !3
  %xav_flags = getelementptr inbounds %struct.xpvav* %23, i64 0, i32 9
  store i8 2, i8* %xav_flags, align 1, !tbaa !1
  %24 = load %struct.av** @PL_comppad, align 8, !tbaa !3
  %sv_any54 = getelementptr inbounds %struct.av* %24, i64 0, i32 0
  %25 = load %struct.xpvav** %sv_any54, align 8, !tbaa !3
  %xav_fill55 = getelementptr inbounds %struct.xpvav* %25, i64 0, i32 1
  %26 = load i64* %xav_fill55, align 8, !tbaa !4
  %cmp57171 = icmp eq i64 %26, 0
  br i1 %cmp57171, label %if.end127, label %for.body59.lr.ph

for.body59.lr.ph:                                 ; preds = %if.then53
  %27 = load %struct.sv*** @PL_curpad, align 8, !tbaa !3
  br label %for.body59

for.body59:                                       ; preds = %for.body59.lr.ph, %for.inc85
  %ix.1172 = phi i64 [ %26, %for.body59.lr.ph ], [ %dec86, %for.inc85 ]
  %arrayidx60 = getelementptr inbounds %struct.sv** %27, i64 %ix.1172
  %28 = load %struct.sv** %arrayidx60, align 8, !tbaa !3
  %cmp61 = icmp eq %struct.sv* %28, @PL_sv_undef
  %cmp65 = icmp eq %struct.sv* %28, @PL_sv_yes
  %or.cond164 = or i1 %cmp61, %cmp65
  %cmp69 = icmp eq %struct.sv* %28, @PL_sv_no
  %or.cond165 = or i1 %or.cond164, %cmp69
  %cmp73 = icmp eq %struct.sv* %28, @PL_sv_placeholder
  %or.cond166 = or i1 %or.cond165, %cmp73
  br i1 %or.cond166, label %for.inc85, label %if.end76

if.end76:                                         ; preds = %for.body59
  %sv_flags78 = getelementptr inbounds %struct.sv* %28, i64 0, i32 2
  %29 = load i32* %sv_flags78, align 4, !tbaa !0
  %and79 = and i32 %29, 1024
  %tobool80 = icmp eq i32 %and79, 0
  br i1 %tobool80, label %if.then81, label %for.inc85

if.then81:                                        ; preds = %if.end76
  %or = or i32 %29, 768
  store i32 %or, i32* %sv_flags78, align 4, !tbaa !0
  br label %for.inc85

for.inc85:                                        ; preds = %if.end76, %if.then81, %for.body59
  %dec86 = add i64 %ix.1172, -1
  %cmp57 = icmp eq i64 %dec86, 0
  br i1 %cmp57, label %if.end127, label %for.body59

if.then91:                                        ; preds = %if.end
  %30 = load %struct.av** @PL_comppad, align 8, !tbaa !3
  %sv_any92 = getelementptr inbounds %struct.av* %30, i64 0, i32 0
  %31 = load %struct.xpvav** %sv_any92, align 8, !tbaa !3
  %xav_fill93 = getelementptr inbounds %struct.xpvav* %31, i64 0, i32 1
  %32 = load i64* %xav_fill93, align 8, !tbaa !4
  %cmp95174 = icmp eq i64 %32, 0
  br i1 %cmp95174, label %if.end127, label %for.body97.lr.ph

for.body97.lr.ph:                                 ; preds = %if.then91
  %33 = load %struct.sv*** @PL_curpad, align 8, !tbaa !3
  br label %for.body97

for.body97:                                       ; preds = %for.body97.lr.ph, %for.inc123
  %ix.2175 = phi i64 [ %32, %for.body97.lr.ph ], [ %dec124, %for.inc123 ]
  %arrayidx98 = getelementptr inbounds %struct.sv** %33, i64 %ix.2175
  %34 = load %struct.sv** %arrayidx98, align 8, !tbaa !3
  %sv_flags99 = getelementptr inbounds %struct.sv* %34, i64 0, i32 2
  %35 = load i32* %sv_flags99, align 4, !tbaa !0
  %and100 = and i32 %35, 1024
  %tobool101 = icmp ne i32 %and100, 0
  %cmp104 = icmp eq %struct.sv* %34, @PL_sv_undef
  %or.cond167 = or i1 %tobool101, %cmp104
  %cmp108 = icmp eq %struct.sv* %34, @PL_sv_yes
  %or.cond168 = or i1 %or.cond167, %cmp108
  %cmp112 = icmp eq %struct.sv* %34, @PL_sv_no
  %or.cond169 = or i1 %or.cond168, %cmp112
  %cmp116 = icmp eq %struct.sv* %34, @PL_sv_placeholder
  %or.cond170 = or i1 %or.cond169, %cmp116
  br i1 %or.cond170, label %for.inc123, label %if.then118

if.then118:                                       ; preds = %for.body97
  %or121 = or i32 %35, 768
  store i32 %or121, i32* %sv_flags99, align 4, !tbaa !0
  br label %for.inc123

for.inc123:                                       ; preds = %for.body97, %if.then118
  %dec124 = add i64 %ix.2175, -1
  %cmp95 = icmp eq i64 %dec124, 0
  br i1 %cmp95, label %if.end127, label %for.body97

if.end127:                                        ; preds = %if.then91, %for.inc123, %if.then53, %for.inc85, %for.inc, %if.then7, %if.end
  %36 = load %struct.av** @PL_comppad, align 8, !tbaa !3
  %sv_any128 = getelementptr inbounds %struct.av* %36, i64 0, i32 0
  %37 = load %struct.xpvav** %sv_any128, align 8, !tbaa !3
  %xav_array129 = getelementptr inbounds %struct.xpvav* %37, i64 0, i32 0
  %38 = load i8** %xav_array129, align 8, !tbaa !3
  %39 = bitcast i8* %38 to %struct.sv**
  store %struct.sv** %39, %struct.sv*** @PL_curpad, align 8, !tbaa !3
  ret void
}
