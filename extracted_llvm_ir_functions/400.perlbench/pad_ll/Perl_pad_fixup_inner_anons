define void @Perl_pad_fixup_inner_anons(%struct.av* nocapture %padlist, %struct.cv* nocapture %old_cv, %struct.cv* %new_cv) #0 {
entry:
  %sv_any = getelementptr inbounds %struct.av* %padlist, i64 0, i32 0
  %0 = load %struct.xpvav** %sv_any, align 8, !tbaa !3
  %xav_array = getelementptr inbounds %struct.xpvav* %0, i64 0, i32 0
  %1 = load i8** %xav_array, align 8, !tbaa !3
  %2 = bitcast i8* %1 to %struct.sv**
  %3 = load %struct.sv** %2, align 8, !tbaa !3
  %arrayidx3 = getelementptr inbounds i8* %1, i64 8
  %4 = bitcast i8* %arrayidx3 to %struct.sv**
  %5 = load %struct.sv** %4, align 8, !tbaa !3
  %sv_any4 = bitcast %struct.sv* %3 to %struct.xpvav**
  %6 = load %struct.xpvav** %sv_any4, align 8, !tbaa !3
  %xav_array5 = getelementptr inbounds %struct.xpvav* %6, i64 0, i32 0
  %7 = load i8** %xav_array5, align 8, !tbaa !3
  %8 = bitcast i8* %7 to %struct.sv**
  %sv_any6 = bitcast %struct.sv* %5 to %struct.xpvav**
  %9 = load %struct.xpvav** %sv_any6, align 8, !tbaa !3
  %xav_array7 = getelementptr inbounds %struct.xpvav* %9, i64 0, i32 0
  %10 = load i8** %xav_array7, align 8, !tbaa !3
  %11 = bitcast i8* %10 to %struct.sv**
  %xav_fill = getelementptr inbounds %struct.xpvav* %6, i64 0, i32 1
  %12 = load i64* %xav_fill, align 8, !tbaa !4
  %conv = trunc i64 %12 to i32
  %cmp28 = icmp sgt i32 %conv, 0
  br i1 %cmp28, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %sext = shl i64 %12, 32
  %13 = ashr exact i64 %sext, 32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ %13, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %arrayidx10 = getelementptr inbounds %struct.sv** %8, i64 %indvars.iv
  %14 = load %struct.sv** %arrayidx10, align 8, !tbaa !3
  %tobool = icmp ne %struct.sv* %14, null
  %cmp11 = icmp ne %struct.sv* %14, @PL_sv_undef
  %or.cond = and i1 %tobool, %cmp11
  br i1 %or.cond, label %land.lhs.true13, label %for.inc

land.lhs.true13:                                  ; preds = %for.body
  %sv_any14 = getelementptr inbounds %struct.sv* %14, i64 0, i32 0
  %15 = load i8** %sv_any14, align 8, !tbaa !3
  %xpv_pv = bitcast i8* %15 to i8**
  %16 = load i8** %xpv_pv, align 8, !tbaa !3
  %17 = load i8* %16, align 1, !tbaa !1
  %cmp16 = icmp eq i8 %17, 38
  br i1 %cmp16, label %if.then, label %for.inc

if.then:                                          ; preds = %land.lhs.true13
  %arrayidx19 = getelementptr inbounds %struct.sv** %11, i64 %indvars.iv
  %18 = load %struct.sv** %arrayidx19, align 8, !tbaa !3
  %sv_any20 = bitcast %struct.sv* %18 to %struct.xpvcv**
  %19 = load %struct.xpvcv** %sv_any20, align 8, !tbaa !3
  %xcv_outside = getelementptr inbounds %struct.xpvcv* %19, i64 0, i32 16
  store %struct.cv* %new_cv, %struct.cv** %xcv_outside, align 8, !tbaa !3
  br label %for.inc

for.inc:                                          ; preds = %for.body, %land.lhs.true13, %if.then
  %indvars.iv.next = add i64 %indvars.iv, -1
  %20 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp sgt i32 %20, 0
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %entry
  ret void
}
