define internal fastcc %struct.sv* @sv_x(%struct.sv* %sv, i8* %str, i64 %len, i32 %n) #0 {
entry:
  %cmp = icmp eq %struct.sv* %sv, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0), i64 0) #6
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %sv.addr.0 = phi %struct.sv* [ %call, %if.then ], [ %sv, %entry ]
  %cmp1 = icmp sgt i32 %n, 0
  br i1 %cmp1, label %if.then2, label %if.end39

if.then2:                                         ; preds = %if.end
  %sv_any = getelementptr inbounds %struct.sv* %sv.addr.0, i64 0, i32 0
  %0 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_len = getelementptr inbounds i8* %0, i64 16
  %1 = bitcast i8* %xpv_len to i64*
  %2 = load i64* %1, align 8, !tbaa !4
  %conv = sext i32 %n to i64
  %mul = mul i64 %conv, %len
  %xpv_cur = getelementptr inbounds i8* %0, i64 8
  %3 = bitcast i8* %xpv_cur to i64*
  %4 = load i64* %3, align 8, !tbaa !4
  %add = add i64 %mul, 1
  %add4 = add i64 %add, %4
  %cmp5 = icmp ult i64 %2, %add4
  br i1 %cmp5, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.then2
  %call13 = tail call i8* @Perl_sv_grow(%struct.sv* %sv.addr.0, i64 %add4) #6
  br label %cond.end

cond.end:                                         ; preds = %if.then2, %cond.true
  %cmp15 = icmp eq i64 %len, 1
  br i1 %cmp15, label %while.body.lr.ph, label %while.body35

while.body.lr.ph:                                 ; preds = %cond.end
  %5 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_pv19 = bitcast i8* %5 to i8**
  %6 = load i8** %xpv_pv19, align 8, !tbaa !0
  %xpv_cur21 = getelementptr inbounds i8* %5, i64 8
  %7 = bitcast i8* %xpv_cur21 to i64*
  %8 = load i64* %7, align 8, !tbaa !4
  %add25 = add i64 %8, %conv
  store i64 %add25, i64* %7, align 8, !tbaa !4
  %arrayidx = getelementptr inbounds i8* %6, i64 %add25
  store i8 0, i8* %arrayidx, align 1, !tbaa !1
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %indvars.iv = phi i64 [ %conv, %while.body.lr.ph ], [ %indvars.iv.next, %while.body ]
  %9 = load i8* %str, align 1, !tbaa !1
  %indvars.iv.next = add i64 %indvars.iv, -1
  %add.ptr.sum62 = add i64 %indvars.iv.next, %8
  %arrayidx30 = getelementptr inbounds i8* %6, i64 %add.ptr.sum62
  store i8 %9, i8* %arrayidx30, align 1, !tbaa !1
  %10 = trunc i64 %indvars.iv.next to i32
  %cmp26 = icmp sgt i32 %10, 0
  br i1 %cmp26, label %while.body, label %if.end39

while.body35:                                     ; preds = %cond.end, %while.body35
  %n.addr.167 = phi i32 [ %dec36, %while.body35 ], [ %n, %cond.end ]
  tail call void @Perl_sv_catpvn_flags(%struct.sv* %sv.addr.0, i8* %str, i64 %len, i32 2) #6
  %dec36 = add nsw i32 %n.addr.167, -1
  %cmp33 = icmp sgt i32 %dec36, 0
  br i1 %cmp33, label %while.body35, label %if.end39

if.end39:                                         ; preds = %while.body35, %while.body, %if.end
  ret %struct.sv* %sv.addr.0
}
