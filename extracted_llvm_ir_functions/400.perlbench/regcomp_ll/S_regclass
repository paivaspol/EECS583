define internal fastcc %struct.regnode* @S_regclass(%struct.RExC_state_t* %pRExC_state) #0 {
entry:
  %numlen = alloca i64, align 8
  %flags369 = alloca i32, align 4
  %flags401 = alloca i32, align 4
  %flags422 = alloca i32, align 4
  %foldbuf = alloca [7 x i8], align 1
  %foldlen = alloca i64, align 8
  %call = call fastcc %struct.regnode* @S_reganode(%struct.RExC_state_t* %pRExC_state, i8 zeroext 17, i32 0) #9
  %emit = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 8
  %0 = load %struct.regnode** %emit, align 8, !tbaa !0
  %cmp = icmp eq %struct.regnode* %0, @PL_regdummy
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %flags = getelementptr inbounds %struct.regnode* %call, i64 0, i32 0
  store i8 0, i8* %flags, align 1, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %parse = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 5
  %1 = load i8** %parse, align 8, !tbaa !0
  %2 = load i8* %1, align 1, !tbaa !1
  %cmp1 = icmp eq i8 %2, 94
  br i1 %cmp1, label %if.then3, label %if.end13

if.then3:                                         ; preds = %if.end
  %naughty = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 9
  %3 = load i32* %naughty, align 4, !tbaa !3
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %naughty, align 4, !tbaa !3
  %incdec.ptr = getelementptr inbounds i8* %1, i64 1
  store i8* %incdec.ptr, i8** %parse, align 8, !tbaa !0
  %4 = load %struct.regnode** %emit, align 8, !tbaa !0
  %cmp6 = icmp eq %struct.regnode* %4, @PL_regdummy
  br i1 %cmp6, label %if.then17, label %if.then8

if.then8:                                         ; preds = %if.then3
  %flags9 = getelementptr inbounds %struct.regnode* %call, i64 0, i32 0
  %5 = load i8* %flags9, align 1, !tbaa !1
  %or = or i8 %5, 4
  store i8 %or, i8* %flags9, align 1, !tbaa !1
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then8
  %.pr = load %struct.regnode** %emit, align 8, !tbaa !0
  %cmp15 = icmp eq %struct.regnode* %.pr, @PL_regdummy
  br i1 %cmp15, label %if.then17, label %if.else

if.then17:                                        ; preds = %if.then3, %if.end13
  %size = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 12
  %6 = load i32* %size, align 4, !tbaa !3
  %add = add i32 %6, 9
  store i32 %add, i32* %size, align 4, !tbaa !3
  br label %if.end41

if.else:                                          ; preds = %if.end13
  %add.ptr = getelementptr inbounds %struct.regnode* %.pr, i64 9
  store %struct.regnode* %add.ptr, %struct.regnode** %emit, align 8, !tbaa !0
  %flags21 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %7 = load i32* %flags21, align 4, !tbaa !3
  %and = and i32 %7, 16384
  %cmp22 = icmp eq i32 %and, 0
  br i1 %cmp22, label %if.end29, label %if.then24

if.then24:                                        ; preds = %if.else
  %flags25 = getelementptr inbounds %struct.regnode* %call, i64 0, i32 0
  %8 = load i8* %flags25, align 1, !tbaa !1
  %or27 = or i8 %8, 2
  store i8 %or27, i8* %flags25, align 1, !tbaa !1
  %.pre3363 = load i32* %flags21, align 4, !tbaa !3
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then24
  %9 = phi i32 [ %7, %if.else ], [ %.pre3363, %if.then24 ]
  %and31 = and i32 %9, 2048
  %cmp32 = icmp eq i32 %and31, 0
  br i1 %cmp32, label %if.end39, label %if.then34

if.then34:                                        ; preds = %if.end29
  %flags35 = getelementptr inbounds %struct.regnode* %call, i64 0, i32 0
  %10 = load i8* %flags35, align 1, !tbaa !1
  %or37 = or i8 %10, 1
  store i8 %or37, i8* %flags35, align 1, !tbaa !1
  br label %if.end39

if.end39:                                         ; preds = %if.end29, %if.then34
  %arraydecay = getelementptr inbounds %struct.regnode* %call, i64 2, i32 0
  call void @llvm.memset.p0i8.i64(i8* %arraydecay, i8 0, i64 32, i32 1, i1 false)
  %call40 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([11 x i8]* @.str49, i64 0, i64 0), i64 10) #8
  br label %if.end41

if.end41:                                         ; preds = %if.end39, %if.then17
  %listsv.0 = phi %struct.sv* [ null, %if.then17 ], [ %call40, %if.end39 ]
  %11 = load i8** %parse, align 8, !tbaa !0
  %end = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 4
  %12 = load i8** %end, align 8, !tbaa !0
  %cmp43 = icmp ult i8* %11, %12
  br i1 %cmp43, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.end41
  %13 = load i8* %11, align 1, !tbaa !1
  %phitmp = zext i8 %13 to i64
  br label %cond.end

cond.end:                                         ; preds = %if.end41, %cond.true
  %cond = phi i64 [ %phitmp, %cond.true ], [ 0, %if.end41 ]
  %14 = load %struct.regnode** %emit, align 8, !tbaa !0
  %cmp49 = icmp eq %struct.regnode* %14, @PL_regdummy
  br i1 %cmp49, label %if.end59, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end
  switch i64 %cond, label %if.end59 [
    i64 61, label %land.lhs.true.i
    i64 58, label %land.lhs.true.i
    i64 46, label %land.lhs.true.i
  ]

land.lhs.true.i:                                  ; preds = %land.lhs.true, %land.lhs.true, %land.lhs.true
  %15 = load i8* %11, align 1, !tbaa !1
  switch i8 %15, label %if.end59 [
    i8 58, label %if.then.i
    i8 61, label %if.then.i
    i8 46, label %if.then.i
  ]

if.then.i:                                        ; preds = %land.lhs.true.i, %land.lhs.true.i, %land.lhs.true.i
  %s.0164.i = getelementptr inbounds i8* %11, i64 1
  %16 = load i8* %s.0164.i, align 1, !tbaa !1
  %tobool165.i = icmp eq i8 %16, 0
  br i1 %tobool165.i, label %if.end59, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.then.i, %while.cond.backedge.i
  %.pr.i = phi i8 [ %19, %while.cond.backedge.i ], [ %16, %if.then.i ]
  %s.0167.i = phi i8* [ %s.0.i, %while.cond.backedge.i ], [ %s.0164.i, %if.then.i ]
  %.pn166.i = phi i8* [ %s.0167.i, %while.cond.backedge.i ], [ %11, %if.then.i ]
  %.off.i = add i8 %.pr.i, -65
  %17 = icmp ult i8 %.off.i, 26
  %.off159.i = add i8 %.pr.i, -97
  %18 = icmp ult i8 %.off159.i, 26
  %or.cond.i = or i1 %17, %18
  br i1 %or.cond.i, label %while.cond.backedge.i, label %lor.lhs.false29.i

while.cond.backedge.i:                            ; preds = %lor.lhs.false29.i, %land.rhs.i
  %s.0.i = getelementptr inbounds i8* %s.0167.i, i64 1
  %19 = load i8* %s.0.i, align 1, !tbaa !1
  %tobool.i = icmp eq i8 %19, 0
  br i1 %tobool.i, label %if.end59, label %land.rhs.i

lor.lhs.false29.i:                                ; preds = %land.rhs.i
  %.off160.i = add i8 %.pr.i, -48
  %20 = icmp ult i8 %.off160.i, 10
  %cmp38.i = icmp eq i8 %.pr.i, 95
  %or.cond158.i = or i1 %20, %cmp38.i
  br i1 %or.cond158.i, label %while.cond.backedge.i, label %land.lhs.true43.i

land.lhs.true43.i:                                ; preds = %lor.lhs.false29.i
  %conv44.i = sext i8 %15 to i32
  %cmp46.i = icmp eq i8 %15, %.pr.i
  br i1 %cmp46.i, label %land.lhs.true48.i, label %if.end59

land.lhs.true48.i:                                ; preds = %land.lhs.true43.i
  %arrayidx.i = getelementptr inbounds i8* %.pn166.i, i64 2
  %21 = load i8* %arrayidx.i, align 1, !tbaa !1
  %cmp50.i = icmp eq i8 %21, 93
  br i1 %cmp50.i, label %if.then52.i, label %if.end59

if.then52.i:                                      ; preds = %land.lhs.true48.i
  %22 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings.i = getelementptr inbounds %struct.cop* %22, i64 0, i32 14
  %23 = load %struct.sv** %cop_warnings.i, align 8, !tbaa !0
  %cmp53.i = icmp eq %struct.sv* %23, null
  br i1 %cmp53.i, label %lor.lhs.false68.i, label %land.lhs.true55.i

land.lhs.true55.i:                                ; preds = %if.then52.i
  %24 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings56.i = getelementptr inbounds %struct.cop* %24, i64 0, i32 14
  %25 = load %struct.sv** %cop_warnings56.i, align 8, !tbaa !0
  %cmp57.i = icmp eq %struct.sv* %25, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp57.i, label %lor.lhs.false68.i, label %land.lhs.true59.i

land.lhs.true59.i:                                ; preds = %land.lhs.true55.i
  %26 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings60.i = getelementptr inbounds %struct.cop* %26, i64 0, i32 14
  %27 = load %struct.sv** %cop_warnings60.i, align 8, !tbaa !0
  %cmp61.i = icmp eq %struct.sv* %27, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp61.i, label %if.then76.i, label %lor.lhs.false63.i

lor.lhs.false63.i:                                ; preds = %land.lhs.true59.i
  %28 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings64.i = getelementptr inbounds %struct.cop* %28, i64 0, i32 14
  %29 = load %struct.sv** %cop_warnings64.i, align 8, !tbaa !0
  %sv_any.i = getelementptr inbounds %struct.sv* %29, i64 0, i32 0
  %30 = load i8** %sv_any.i, align 8, !tbaa !0
  %xpv_pv.i = bitcast i8* %30 to i8**
  %31 = load i8** %xpv_pv.i, align 8, !tbaa !0
  %arrayidx65.i = getelementptr inbounds i8* %31, i64 5
  %32 = load i8* %arrayidx65.i, align 1, !tbaa !1
  %and.i = and i8 %32, 1
  %tobool67.i = icmp eq i8 %and.i, 0
  br i1 %tobool67.i, label %lor.lhs.false68.i, label %if.then76.i

lor.lhs.false68.i:                                ; preds = %lor.lhs.false63.i, %land.lhs.true55.i, %if.then52.i
  %33 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings69.i = getelementptr inbounds %struct.cop* %33, i64 0, i32 14
  %34 = load %struct.sv** %cop_warnings69.i, align 8, !tbaa !0
  %cmp70.i = icmp eq %struct.sv* %34, null
  br i1 %cmp70.i, label %land.lhs.true72.i, label %if.end.i

land.lhs.true72.i:                                ; preds = %lor.lhs.false68.i
  %35 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and74.i = and i8 %35, 1
  %tobool75.i = icmp eq i8 %and74.i, 0
  br i1 %tobool75.i, label %if.end.i, label %if.then76.i

if.then76.i:                                      ; preds = %land.lhs.true72.i, %lor.lhs.false63.i, %land.lhs.true59.i
  %add.ptr.i = getelementptr inbounds i8* %.pn166.i, i64 3
  %precomp.i = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 1
  %36 = load i8** %precomp.i, align 8, !tbaa !0
  %sub.ptr.lhs.cast.i = ptrtoint i8* %add.ptr.i to i64
  %sub.ptr.rhs.cast.i = ptrtoint i8* %36 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %conv79.i = trunc i64 %sub.ptr.sub.i to i32
  %add.ptr82.i = getelementptr inbounds i8* %36, i64 %sub.ptr.sub.i
  call void (i32, i8*, ...)* @Perl_warner(i32 20, i8* getelementptr inbounds ([106 x i8]* @.str93, i64 0, i64 0), i32 %conv44.i, i32 %conv44.i, i32 %conv79.i, i8* %36, i8* %add.ptr82.i) #8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then76.i, %land.lhs.true72.i, %lor.lhs.false68.i
  switch i8 %15, label %if.end59 [
    i8 61, label %while.cond91.preheader.i
    i8 46, label %while.cond91.preheader.i
  ]

while.cond91.preheader.i:                         ; preds = %if.end.i, %if.end.i
  %.pre.i = load i8** %parse, align 8, !tbaa !0
  br label %while.cond91.i

while.cond91.i:                                   ; preds = %land.rhs95.i, %while.cond91.preheader.i
  %37 = phi i8* [ %.pre.i, %while.cond91.preheader.i ], [ %incdec.ptr97.i, %land.rhs95.i ]
  %38 = load i8* %37, align 1, !tbaa !1
  %tobool94.i = icmp eq i8 %38, 0
  br i1 %tobool94.i, label %while.end103.i, label %land.rhs95.i

land.rhs95.i:                                     ; preds = %while.cond91.i
  %incdec.ptr97.i = getelementptr inbounds i8* %37, i64 1
  store i8* %incdec.ptr97.i, i8** %parse, align 8, !tbaa !0
  %39 = load i8* %37, align 1, !tbaa !1
  %cmp99.i = icmp eq i8 %39, 93
  br i1 %cmp99.i, label %while.end103.i, label %while.cond91.i

while.end103.i:                                   ; preds = %land.rhs95.i, %while.cond91.i
  %40 = phi i8* [ %incdec.ptr97.i, %land.rhs95.i ], [ %37, %while.cond91.i ]
  %precomp106.i = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 1
  %41 = load i8** %precomp106.i, align 8, !tbaa !0
  %sub.ptr.lhs.cast107.i = ptrtoint i8* %40 to i64
  %sub.ptr.rhs.cast108.i = ptrtoint i8* %41 to i64
  %sub.ptr.sub109.i = sub i64 %sub.ptr.lhs.cast107.i, %sub.ptr.rhs.cast108.i
  %conv112.i = trunc i64 %sub.ptr.sub109.i to i32
  %add.ptr115.i = getelementptr inbounds i8* %41, i64 %sub.ptr.sub109.i
  call void (i8*, ...)* @S_re_croak2(i8* getelementptr inbounds ([55 x i8]* @.str92, i64 0, i64 0), i32 %conv44.i, i32 %conv44.i, i32 %conv112.i, i8* %41, i8* %add.ptr115.i) #8
  br label %if.end59

if.end59:                                         ; preds = %while.cond.backedge.i, %if.end.i, %while.end103.i, %land.lhs.true48.i, %land.lhs.true43.i, %if.then.i, %land.lhs.true.i, %land.lhs.true, %cond.end
  %42 = load i8** %parse, align 8, !tbaa !0
  %43 = load i8* %42, align 1, !tbaa !1
  %cmp62 = icmp eq i8 %43, 93
  br i1 %cmp62, label %charclassloop, label %while.cond

while.cond:                                       ; preds = %if.end2178, %if.then2115, %if.else2112, %lor.lhs.false2100, %if.end2066, %if.end2052, %if.end1946, %if.end59, %if.then2111, %if.then2185, %if.then2181, %if.then2000, %if.then2056, %if.then1951
  %unicode_alternate.0 = phi %struct.av* [ %unicode_alternate.1, %if.then2056 ], [ %unicode_alternate.1, %if.then1951 ], [ %unicode_alternate.1, %if.then2000 ], [ %unicode_alternate.1, %if.then2111 ], [ %unicode_alternate.3, %if.then2181 ], [ %unicode_alternate.3, %if.then2185 ], [ null, %if.end59 ], [ %unicode_alternate.1, %if.end1946 ], [ %unicode_alternate.1, %if.end2052 ], [ %unicode_alternate.1, %if.end2066 ], [ %unicode_alternate.1, %lor.lhs.false2100 ], [ %unicode_alternate.1, %if.else2112 ], [ %unicode_alternate.1, %if.then2115 ], [ %unicode_alternate.3, %if.end2178 ]
  %optimize_invert.0 = phi i8 [ %optimize_invert.1, %if.then2056 ], [ 0, %if.then1951 ], [ %optimize_invert.1, %if.then2000 ], [ %optimize_invert.1, %if.then2111 ], [ %optimize_invert.1, %if.then2181 ], [ %optimize_invert.1, %if.then2185 ], [ 1, %if.end59 ], [ 0, %if.end1946 ], [ %optimize_invert.1, %if.end2052 ], [ %optimize_invert.1, %if.end2066 ], [ %optimize_invert.1, %lor.lhs.false2100 ], [ %optimize_invert.1, %if.else2112 ], [ %optimize_invert.1, %if.then2115 ], [ %optimize_invert.1, %if.end2178 ]
  %need_class.0 = phi i8 [ %need_class.23241, %if.then2056 ], [ 1, %if.then1951 ], [ %need_class.23241, %if.then2000 ], [ %need_class.23242, %if.then2111 ], [ %need_class.23242, %if.then2181 ], [ %need_class.23242, %if.then2185 ], [ 0, %if.end59 ], [ 1, %if.end1946 ], [ %need_class.23241, %if.end2052 ], [ %need_class.23242, %if.end2066 ], [ %need_class.23242, %lor.lhs.false2100 ], [ %need_class.23242, %if.else2112 ], [ %need_class.23242, %if.then2115 ], [ %need_class.23242, %if.end2178 ]
  %rangebegin.0 = phi i8* [ %rangebegin.1., %if.then2056 ], [ %rangebegin.1., %if.then1951 ], [ %rangebegin.1., %if.then2000 ], [ %rangebegin.1., %if.then2111 ], [ %rangebegin.1., %if.then2181 ], [ %rangebegin.1., %if.then2185 ], [ null, %if.end59 ], [ %rangebegin.1., %if.end1946 ], [ %rangebegin.1., %if.end2052 ], [ %rangebegin.1., %if.end2066 ], [ %rangebegin.1., %lor.lhs.false2100 ], [ %rangebegin.1., %if.else2112 ], [ %rangebegin.1., %if.then2115 ], [ %rangebegin.1., %if.end2178 ]
  %range.0 = phi i64 [ 0, %if.then2056 ], [ 0, %if.then1951 ], [ 1, %if.then2000 ], [ 0, %if.then2111 ], [ 0, %if.then2181 ], [ 0, %if.then2185 ], [ 0, %if.end59 ], [ 0, %if.end1946 ], [ 0, %if.end2052 ], [ 0, %if.end2066 ], [ 0, %lor.lhs.false2100 ], [ 0, %if.else2112 ], [ 0, %if.then2115 ], [ 0, %if.end2178 ]
  %prevvalue.0 = phi i64 [ %value.432203240, %if.then2056 ], [ %prevvalue.1, %if.then1951 ], [ %value.432203240, %if.then2000 ], [ %prevvalue.2, %if.then2111 ], [ 962, %if.then2181 ], [ 931, %if.then2185 ], [ 12345678, %if.end59 ], [ %prevvalue.1, %if.end1946 ], [ %value.432203240, %if.end2052 ], [ %prevvalue.2, %if.end2066 ], [ %prevvalue.2, %lor.lhs.false2100 ], [ %prevvalue.2, %if.else2112 ], [ %value.432203239, %if.then2115 ], [ %value.432203239, %if.end2178 ]
  %44 = load i8** %parse, align 8, !tbaa !0
  %45 = load i8** %end, align 8, !tbaa !0
  %cmp68 = icmp ult i8* %44, %45
  br i1 %cmp68, label %land.rhs, label %while.end2193

land.rhs:                                         ; preds = %while.cond
  %46 = load i8* %44, align 1, !tbaa !1
  %cmp72 = icmp eq i8 %46, 93
  br i1 %cmp72, label %while.end2193, label %charclassloop

charclassloop:                                    ; preds = %land.rhs, %if.end59
  %47 = phi i8* [ %42, %if.end59 ], [ %44, %land.rhs ]
  %unicode_alternate.1 = phi %struct.av* [ null, %if.end59 ], [ %unicode_alternate.0, %land.rhs ]
  %optimize_invert.1 = phi i8 [ 1, %if.end59 ], [ %optimize_invert.0, %land.rhs ]
  %need_class.1 = phi i8 [ 0, %if.end59 ], [ %need_class.0, %land.rhs ]
  %rangebegin.1 = phi i8* [ null, %if.end59 ], [ %rangebegin.0, %land.rhs ]
  %range.1 = phi i64 [ 0, %if.end59 ], [ %range.0, %land.rhs ]
  %prevvalue.1 = phi i64 [ 12345678, %if.end59 ], [ %prevvalue.0, %land.rhs ]
  %tobool = icmp ne i64 %range.1, 0
  %rangebegin.1. = select i1 %tobool, i8* %rangebegin.1, i8* %47
  %utf8 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 17
  %48 = load i32* %utf8, align 4, !tbaa !3
  %cmp77 = icmp eq i32 %48, 0
  br i1 %cmp77, label %if.else86, label %if.then79

if.then79:                                        ; preds = %charclassloop
  %49 = load i8** %end, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint i8* %49 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %47 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call83 = call i64 @Perl_utf8n_to_uvuni(i8* %47, i64 %sub.ptr.sub, i64* %numlen, i32 0) #8
  %50 = load i64* %numlen, align 8, !tbaa !5
  %51 = load i8** %parse, align 8, !tbaa !0
  %add.ptr85 = getelementptr inbounds i8* %51, i64 %50
  store i8* %add.ptr85, i8** %parse, align 8, !tbaa !0
  br label %if.end91

if.else86:                                        ; preds = %charclassloop
  %incdec.ptr88 = getelementptr inbounds i8* %47, i64 1
  store i8* %incdec.ptr88, i8** %parse, align 8, !tbaa !0
  %52 = load i8* %47, align 1, !tbaa !1
  %conv90 = zext i8 %52 to i64
  br label %if.end91

if.end91:                                         ; preds = %if.else86, %if.then79
  %53 = phi i8* [ %add.ptr85, %if.then79 ], [ %incdec.ptr88, %if.else86 ]
  %value.0 = phi i64 [ %call83, %if.then79 ], [ %conv90, %if.else86 ]
  %54 = load i8** %end, align 8, !tbaa !0
  %cmp94 = icmp ult i8* %53, %54
  br i1 %cmp94, label %cond.true96, label %cond.end100

cond.true96:                                      ; preds = %if.end91
  %55 = load i8* %53, align 1, !tbaa !1
  %phitmp3041 = zext i8 %55 to i64
  br label %cond.end100

cond.end100:                                      ; preds = %if.end91, %cond.true96
  %cond101 = phi i64 [ %phitmp3041, %cond.true96 ], [ 0, %if.end91 ]
  switch i64 %value.0, label %if.end1958 [
    i64 91, label %land.lhs.true105
    i64 92, label %if.then121
  ]

land.lhs.true105:                                 ; preds = %cond.end100
  switch i64 %cond101, label %if.end1958 [
    i64 61, label %land.lhs.true.i3209
    i64 58, label %land.lhs.true.i3209
    i64 46, label %land.lhs.true.i3209
  ]

land.lhs.true.i3209:                              ; preds = %land.lhs.true105, %land.lhs.true105, %land.lhs.true105
  %add.ptr.i3208 = getelementptr inbounds i8* %53, i64 1
  %cmp1.i = icmp ult i8* %add.ptr.i3208, %54
  br i1 %cmp1.i, label %land.lhs.true2.i, label %if.end1958

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i3209
  %56 = load i8* %53, align 1, !tbaa !1
  switch i8 %56, label %if.end1958 [
    i8 58, label %if.then.i3210
    i8 61, label %if.then.i3210
    i8 46, label %if.then.i3210
  ]

if.then.i3210:                                    ; preds = %land.lhs.true2.i, %land.lhs.true2.i, %land.lhs.true2.i
  %conv25.i = sext i8 %56 to i32
  br label %while.cond.i

while.cond.i:                                     ; preds = %land.end.i, %if.then.i3210
  %.pn.i = phi i8* [ %53, %if.then.i3210 ], [ %storemerge.i, %land.end.i ]
  %storemerge.i = getelementptr inbounds i8* %.pn.i, i64 1
  store i8* %storemerge.i, i8** %parse, align 8, !tbaa !0
  %cmp21.i = icmp ult i8* %storemerge.i, %54
  br i1 %cmp21.i, label %land.end.i, label %while.end.i

land.end.i:                                       ; preds = %while.cond.i
  %57 = load i8* %storemerge.i, align 1, !tbaa !1
  %conv24.i = zext i8 %57 to i32
  %cmp26.i = icmp eq i32 %conv24.i, %conv25.i
  br i1 %cmp26.i, label %while.end.i, label %while.cond.i

while.end.i:                                      ; preds = %land.end.i, %while.cond.i
  %cmp32.i = icmp eq i8* %storemerge.i, %54
  br i1 %cmp32.i, label %if.then34.i, label %if.else.i

if.then34.i:                                      ; preds = %while.end.i
  store i8* %53, i8** %parse, align 8, !tbaa !0
  br label %if.end1958

if.else.i:                                        ; preds = %while.end.i
  %incdec.ptr37.i = getelementptr inbounds i8* %.pn.i, i64 2
  store i8* %incdec.ptr37.i, i8** %parse, align 8, !tbaa !0
  %58 = load i8* %incdec.ptr37.i, align 1, !tbaa !1
  %cmp40.i = icmp eq i8 %58, 93
  br i1 %cmp40.i, label %if.then42.i, label %if.else198.i

if.then42.i:                                      ; preds = %if.else.i
  %incdec.ptr44.i = getelementptr inbounds i8* %.pn.i, i64 3
  store i8* %incdec.ptr44.i, i8** %parse, align 8, !tbaa !0
  %59 = load i8* %53, align 1, !tbaa !1
  %cmp47.i = icmp eq i8 %59, 58
  br i1 %cmp47.i, label %if.then49.i, label %if.else166.i

if.then49.i:                                      ; preds = %if.then42.i
  %60 = load i8* %add.ptr.i3208, align 1, !tbaa !1
  %cmp51.i = icmp eq i8 %60, 94
  %incdec.ptr53.i = getelementptr inbounds i8* %53, i64 2
  %incdec.ptr53.add.ptr.i = select i1 %cmp51.i, i8* %incdec.ptr53.i, i8* %add.ptr.i3208
  %sub.ptr.lhs.cast.i3211 = ptrtoint i8* %storemerge.i to i64
  %sub.ptr.rhs.cast.i3212 = ptrtoint i8* %incdec.ptr53.add.ptr.i to i64
  %sub.ptr.sub.i3213 = sub i64 %sub.ptr.lhs.cast.i3211, %sub.ptr.rhs.cast.i3212
  %conv55.i = trunc i64 %sub.ptr.sub.i3213 to i32
  switch i32 %conv55.i, label %if.then152.i [
    i32 4, label %sw.bb.i
    i32 5, label %sw.bb59.i
    i32 6, label %sw.bb142.i
  ]

sw.bb.i:                                          ; preds = %if.then49.i
  %call.i = call i32 @memcmp(i8* %incdec.ptr53.add.ptr.i, i8* getelementptr inbounds ([5 x i8]* @.str77, i64 0, i64 0), i64 4) #8
  %tobool.i3214 = icmp eq i32 %call.i, 0
  br i1 %tobool.i3214, label %if.then56.i, label %if.then152.i

if.then56.i:                                      ; preds = %sw.bb.i
  %cond58.i = zext i1 %cmp51.i to i32
  br label %if.then484

sw.bb59.i:                                        ; preds = %if.then49.i
  %arrayidx.i3215 = getelementptr inbounds i8* %incdec.ptr53.add.ptr.i, i64 4
  %61 = load i8* %arrayidx.i3215, align 1, !tbaa !1
  %conv60.i = sext i8 %61 to i32
  switch i32 %conv60.i, label %if.then152.i [
    i32 97, label %sw.bb61.i
    i32 101, label %sw.bb68.i
    i32 104, label %sw.bb75.i
    i32 105, label %sw.bb82.i
    i32 107, label %sw.bb89.i
    i32 108, label %sw.bb96.i
    i32 109, label %sw.bb103.i
    i32 114, label %sw.bb110.i
    i32 116, label %sw.bb123.i
  ]

sw.bb61.i:                                        ; preds = %sw.bb59.i
  %call62.i = call i32 @memcmp(i8* %incdec.ptr53.add.ptr.i, i8* getelementptr inbounds ([5 x i8]* @.str78, i64 0, i64 0), i64 4) #8
  %tobool63.i = icmp eq i32 %call62.i, 0
  br i1 %tobool63.i, label %if.then64.i, label %if.then152.i

if.then64.i:                                      ; preds = %sw.bb61.i
  %cond66.i = select i1 %cmp51.i, i32 9, i32 8
  br label %if.then484

sw.bb68.i:                                        ; preds = %sw.bb59.i
  %call69.i = call i32 @memcmp(i8* %incdec.ptr53.add.ptr.i, i8* getelementptr inbounds ([5 x i8]* @.str79, i64 0, i64 0), i64 4) #8
  %tobool70.i = icmp eq i32 %call69.i, 0
  br i1 %tobool70.i, label %if.then71.i, label %if.then152.i

if.then71.i:                                      ; preds = %sw.bb68.i
  %cond73.i = select i1 %cmp51.i, i32 27, i32 26
  br label %if.then484

sw.bb75.i:                                        ; preds = %sw.bb59.i
  %call76.i = call i32 @memcmp(i8* %incdec.ptr53.add.ptr.i, i8* getelementptr inbounds ([5 x i8]* @.str80, i64 0, i64 0), i64 4) #8
  %tobool77.i = icmp eq i32 %call76.i, 0
  br i1 %tobool77.i, label %if.then78.i, label %if.then152.i

if.then78.i:                                      ; preds = %sw.bb75.i
  %cond80.i = select i1 %cmp51.i, i32 15, i32 14
  br label %if.then484

sw.bb82.i:                                        ; preds = %sw.bb59.i
  %call83.i = call i32 @memcmp(i8* %incdec.ptr53.add.ptr.i, i8* getelementptr inbounds ([5 x i8]* @.str81, i64 0, i64 0), i64 4) #8
  %tobool84.i = icmp eq i32 %call83.i, 0
  br i1 %tobool84.i, label %if.then85.i, label %if.then152.i

if.then85.i:                                      ; preds = %sw.bb82.i
  %cond87.i = select i1 %cmp51.i, i32 11, i32 10
  br label %if.then484

sw.bb89.i:                                        ; preds = %sw.bb59.i
  %call90.i = call i32 @memcmp(i8* %incdec.ptr53.add.ptr.i, i8* getelementptr inbounds ([5 x i8]* @.str82, i64 0, i64 0), i64 4) #8
  %tobool91.i = icmp eq i32 %call90.i, 0
  br i1 %tobool91.i, label %if.then92.i, label %if.then152.i

if.then92.i:                                      ; preds = %sw.bb89.i
  %cond94.i = select i1 %cmp51.i, i32 29, i32 28
  br label %if.then484

sw.bb96.i:                                        ; preds = %sw.bb59.i
  %call97.i = call i32 @memcmp(i8* %incdec.ptr53.add.ptr.i, i8* getelementptr inbounds ([5 x i8]* @.str83, i64 0, i64 0), i64 4) #8
  %tobool98.i = icmp eq i32 %call97.i, 0
  br i1 %tobool98.i, label %if.then99.i, label %if.then152.i

if.then99.i:                                      ; preds = %sw.bb96.i
  %cond101.i = select i1 %cmp51.i, i32 13, i32 12
  br label %if.then484

sw.bb103.i:                                       ; preds = %sw.bb59.i
  %call104.i = call i32 @memcmp(i8* %incdec.ptr53.add.ptr.i, i8* getelementptr inbounds ([5 x i8]* @.str84, i64 0, i64 0), i64 4) #8
  %tobool105.i = icmp eq i32 %call104.i, 0
  br i1 %tobool105.i, label %if.then106.i, label %if.then152.i

if.then106.i:                                     ; preds = %sw.bb103.i
  %cond108.i = select i1 %cmp51.i, i32 7, i32 6
  br label %if.then484

sw.bb110.i:                                       ; preds = %sw.bb59.i
  %call111.i = call i32 @memcmp(i8* %incdec.ptr53.add.ptr.i, i8* getelementptr inbounds ([5 x i8]* @.str85, i64 0, i64 0), i64 4) #8
  %tobool112.i = icmp eq i32 %call111.i, 0
  br i1 %tobool112.i, label %if.then113.i, label %if.end116.i

if.then113.i:                                     ; preds = %sw.bb110.i
  %cond115.i = select i1 %cmp51.i, i32 17, i32 16
  br label %if.end116.i

if.end116.i:                                      ; preds = %if.then113.i, %sw.bb110.i
  %namedclass.0.i = phi i32 [ -1, %sw.bb110.i ], [ %cond115.i, %if.then113.i ]
  %call117.i = call i32 @memcmp(i8* %incdec.ptr53.add.ptr.i, i8* getelementptr inbounds ([5 x i8]* @.str86, i64 0, i64 0), i64 4) #8
  %tobool118.i = icmp eq i32 %call117.i, 0
  br i1 %tobool118.i, label %if.then119.i, label %sw.epilog149.i

if.then119.i:                                     ; preds = %if.end116.i
  %cond121.i = select i1 %cmp51.i, i32 23, i32 22
  br label %if.then484

sw.bb123.i:                                       ; preds = %sw.bb59.i
  %call124.i = call i32 @memcmp(i8* %incdec.ptr53.add.ptr.i, i8* getelementptr inbounds ([5 x i8]* @.str87, i64 0, i64 0), i64 4) #8
  %tobool125.i = icmp eq i32 %call124.i, 0
  br i1 %tobool125.i, label %if.then126.i, label %if.end129.i

if.then126.i:                                     ; preds = %sw.bb123.i
  %cond128.i = select i1 %cmp51.i, i32 5, i32 4
  br label %if.end129.i

if.end129.i:                                      ; preds = %if.then126.i, %sw.bb123.i
  %namedclass.1.i = phi i32 [ -1, %sw.bb123.i ], [ %cond128.i, %if.then126.i ]
  %call130.i = call i32 @memcmp(i8* %incdec.ptr53.add.ptr.i, i8* getelementptr inbounds ([5 x i8]* @.str88, i64 0, i64 0), i64 4) #8
  %tobool131.i = icmp eq i32 %call130.i, 0
  br i1 %tobool131.i, label %if.then132.i, label %if.end135.i

if.then132.i:                                     ; preds = %if.end129.i
  %cond134.i = select i1 %cmp51.i, i32 19, i32 18
  br label %if.end135.i

if.end135.i:                                      ; preds = %if.then132.i, %if.end129.i
  %namedclass.2.i = phi i32 [ %namedclass.1.i, %if.end129.i ], [ %cond134.i, %if.then132.i ]
  %call136.i = call i32 @memcmp(i8* %incdec.ptr53.add.ptr.i, i8* getelementptr inbounds ([5 x i8]* @.str89, i64 0, i64 0), i64 4) #8
  %tobool137.i = icmp eq i32 %call136.i, 0
  br i1 %tobool137.i, label %if.then138.i, label %sw.epilog149.i

if.then138.i:                                     ; preds = %if.end135.i
  %cond140.i = select i1 %cmp51.i, i32 21, i32 20
  br label %if.then484

sw.bb142.i:                                       ; preds = %if.then49.i
  %call143.i = call i32 @memcmp(i8* %incdec.ptr53.add.ptr.i, i8* getelementptr inbounds ([7 x i8]* @.str90, i64 0, i64 0), i64 6) #8
  %tobool144.i = icmp eq i32 %call143.i, 0
  br i1 %tobool144.i, label %if.then145.i, label %if.then152.i

if.then145.i:                                     ; preds = %sw.bb142.i
  %cond147.i = select i1 %cmp51.i, i32 25, i32 24
  br label %if.then484

sw.epilog149.i:                                   ; preds = %if.end135.i, %if.end116.i
  %namedclass.3.i = phi i32 [ %namedclass.2.i, %if.end135.i ], [ %namedclass.0.i, %if.end116.i ]
  %cmp150.i = icmp eq i32 %namedclass.3.i, -1
  br i1 %cmp150.i, label %if.then152.i, label %if.end481

if.then152.i:                                     ; preds = %sw.epilog149.i, %sw.bb142.i, %sw.bb103.i, %sw.bb96.i, %sw.bb89.i, %sw.bb82.i, %sw.bb75.i, %sw.bb68.i, %sw.bb61.i, %sw.bb59.i, %sw.bb.i, %if.then49.i
  %precomp.i3216 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 1
  %62 = load i8** %precomp.i3216, align 8, !tbaa !0
  %sub.ptr.lhs.cast154.i = ptrtoint i8* %incdec.ptr44.i to i64
  %sub.ptr.rhs.cast155.i = ptrtoint i8* %62 to i64
  %sub.ptr.sub156.i = sub i64 %sub.ptr.lhs.cast154.i, %sub.ptr.rhs.cast155.i
  %sub.ptr.rhs.cast158.i = ptrtoint i8* %53 to i64
  %sub.ptr.sub159.i = xor i64 %sub.ptr.rhs.cast158.i, -1
  %sub.i = add i64 %sub.ptr.lhs.cast.i3211, %sub.ptr.sub159.i
  %conv161.i = trunc i64 %sub.ptr.sub156.i to i32
  %add.ptr164.i = getelementptr inbounds i8* %62, i64 %sub.ptr.sub156.i
  call void (i8*, ...)* @S_re_croak2(i8* getelementptr inbounds ([29 x i8]* @.str91, i64 0, i64 0), i64 %sub.i, i8* %add.ptr.i3208, i32 %conv161.i, i8* %62, i8* %add.ptr164.i) #8
  br label %if.end1958

if.else166.i:                                     ; preds = %if.then42.i
  %63 = load %struct.regnode** %emit, align 8, !tbaa !0
  %cmp167.i = icmp eq %struct.regnode* %63, @PL_regdummy
  br i1 %cmp167.i, label %if.end1958, label %while.cond170.i

while.cond170.i:                                  ; preds = %if.else166.i, %while.body180.i
  %64 = phi i8* [ %incdec.ptr182.i, %while.body180.i ], [ %incdec.ptr44.i, %if.else166.i ]
  %65 = load i8* %64, align 1, !tbaa !1
  switch i8 %65, label %while.body180.i [
    i8 93, label %while.end183.i
    i8 0, label %while.end183.i
  ]

while.body180.i:                                  ; preds = %while.cond170.i
  %incdec.ptr182.i = getelementptr inbounds i8* %64, i64 1
  store i8* %incdec.ptr182.i, i8** %parse, align 8, !tbaa !0
  br label %while.cond170.i

while.end183.i:                                   ; preds = %while.cond170.i, %while.cond170.i
  %precomp186.i = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 1
  %66 = load i8** %precomp186.i, align 8, !tbaa !0
  %sub.ptr.lhs.cast187.i = ptrtoint i8* %64 to i64
  %sub.ptr.rhs.cast188.i = ptrtoint i8* %66 to i64
  %sub.ptr.sub189.i = sub i64 %sub.ptr.lhs.cast187.i, %sub.ptr.rhs.cast188.i
  %conv192.i = trunc i64 %sub.ptr.sub189.i to i32
  %add.ptr195.i = getelementptr inbounds i8* %66, i64 %sub.ptr.sub189.i
  call void (i8*, ...)* @S_re_croak2(i8* getelementptr inbounds ([55 x i8]* @.str92, i64 0, i64 0), i32 %conv25.i, i32 %conv25.i, i32 %conv192.i, i8* %66, i8* %add.ptr195.i) #8
  br label %if.end1958

if.else198.i:                                     ; preds = %if.else.i
  store i8* %53, i8** %parse, align 8, !tbaa !0
  br label %if.end1958

if.then121:                                       ; preds = %cond.end100
  %67 = load i32* %utf8, align 4, !tbaa !3
  %cmp123 = icmp eq i32 %67, 0
  br i1 %cmp123, label %if.else135, label %if.then125

if.then125:                                       ; preds = %if.then121
  %sub.ptr.lhs.cast129 = ptrtoint i8* %54 to i64
  %sub.ptr.rhs.cast130 = ptrtoint i8* %53 to i64
  %sub.ptr.sub131 = sub i64 %sub.ptr.lhs.cast129, %sub.ptr.rhs.cast130
  %call132 = call i64 @Perl_utf8n_to_uvuni(i8* %53, i64 %sub.ptr.sub131, i64* %numlen, i32 0) #8
  %68 = load i64* %numlen, align 8, !tbaa !5
  %69 = load i8** %parse, align 8, !tbaa !0
  %add.ptr134 = getelementptr inbounds i8* %69, i64 %68
  store i8* %add.ptr134, i8** %parse, align 8, !tbaa !0
  br label %if.end140

if.else135:                                       ; preds = %if.then121
  %incdec.ptr137 = getelementptr inbounds i8* %53, i64 1
  store i8* %incdec.ptr137, i8** %parse, align 8, !tbaa !0
  %70 = load i8* %53, align 1, !tbaa !1
  %conv139 = zext i8 %70 to i64
  br label %if.end140

if.end140:                                        ; preds = %if.else135, %if.then125
  %71 = phi i8* [ %add.ptr134, %if.then125 ], [ %incdec.ptr137, %if.else135 ]
  %value.1 = phi i64 [ %call132, %if.then125 ], [ %conv139, %if.else135 ]
  %conv141 = trunc i64 %value.1 to i32
  switch i32 %conv141, label %sw.default [
    i32 119, label %if.then484
    i32 87, label %sw.bb142
    i32 115, label %sw.bb143
    i32 83, label %sw.bb144
    i32 100, label %sw.bb145
    i32 68, label %sw.bb146
    i32 112, label %sw.bb147
    i32 80, label %sw.bb147
    i32 110, label %if.end1958
    i32 114, label %sw.bb357
    i32 116, label %sw.bb358
    i32 102, label %sw.bb359
    i32 98, label %sw.bb360
    i32 101, label %sw.bb361
    i32 97, label %sw.bb362
    i32 120, label %sw.bb363
    i32 99, label %sw.bb407
    i32 48, label %sw.bb421
    i32 49, label %sw.bb421
    i32 50, label %sw.bb421
    i32 51, label %sw.bb421
    i32 52, label %sw.bb421
    i32 53, label %sw.bb421
    i32 54, label %sw.bb421
    i32 55, label %sw.bb421
    i32 56, label %sw.bb421
    i32 57, label %sw.bb421
  ]

sw.bb142:                                         ; preds = %if.end140
  br label %if.then484

sw.bb143:                                         ; preds = %if.end140
  br label %if.then484

sw.bb144:                                         ; preds = %if.end140
  br label %if.then484

sw.bb145:                                         ; preds = %if.end140
  br label %if.then484

sw.bb146:                                         ; preds = %if.end140
  br label %if.then484

sw.bb147:                                         ; preds = %if.end140, %if.end140
  %72 = load i8** %end, align 8, !tbaa !0
  %cmp150 = icmp ult i8* %71, %72
  br i1 %cmp150, label %if.end168, label %if.then152

if.then152:                                       ; preds = %sw.bb147
  %73 = load %struct.regnode** %emit, align 8, !tbaa !0
  %cmp154 = icmp eq %struct.regnode* %73, @PL_regdummy
  br i1 %cmp154, label %if.end157, label %if.then156

if.then156:                                       ; preds = %if.then152
  %rx = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 2
  %74 = load %struct.regexp** %rx, align 8, !tbaa !0
  %75 = bitcast %struct.regexp* %74 to i8*
  call void @Perl_save_destructor_x(void (i8*)* @clear_re, i8* %75) #8
  %.pre3358 = load i8** %parse, align 8, !tbaa !0
  br label %if.end157

if.end157:                                        ; preds = %if.then156, %if.then152
  %76 = phi i8* [ %.pre3358, %if.then156 ], [ %71, %if.then152 ]
  %precomp = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 1
  %77 = load i8** %precomp, align 8, !tbaa !0
  %sub.ptr.lhs.cast159 = ptrtoint i8* %76 to i64
  %sub.ptr.rhs.cast160 = ptrtoint i8* %77 to i64
  %sub.ptr.sub161 = sub i64 %sub.ptr.lhs.cast159, %sub.ptr.rhs.cast160
  %conv163 = and i32 %conv141, 255
  %conv164 = trunc i64 %sub.ptr.sub161 to i32
  %add.ptr167 = getelementptr inbounds i8* %77, i64 %sub.ptr.sub161
  call void (i8*, ...)* @S_re_croak2(i8* getelementptr inbounds ([12 x i8]* @.str50, i64 0, i64 0), i32 %conv163, i32 %conv164, i8* %77, i8* %add.ptr167) #9
  %.pre3353 = load i8** %parse, align 8, !tbaa !0
  br label %if.end168

if.end168:                                        ; preds = %sw.bb147, %if.end157
  %78 = phi i8* [ %71, %sw.bb147 ], [ %.pre3353, %if.end157 ]
  %79 = load i8* %78, align 1, !tbaa !1
  %cmp171 = icmp eq i8 %79, 123
  br i1 %cmp171, label %if.then173, label %if.end291

if.then173:                                       ; preds = %if.end168
  %incdec.ptr176 = getelementptr inbounds i8* %78, i64 1
  store i8* %incdec.ptr176, i8** %parse, align 8, !tbaa !0
  %call177 = call i8* @strchr(i8* %78, i32 125) #8
  %tobool178 = icmp eq i8* %call177, null
  br i1 %tobool178, label %if.then179, label %while.cond198

if.then179:                                       ; preds = %if.then173
  %80 = load %struct.regnode** %emit, align 8, !tbaa !0
  %cmp181 = icmp eq %struct.regnode* %80, @PL_regdummy
  br i1 %cmp181, label %if.end185, label %if.then183

if.then183:                                       ; preds = %if.then179
  %rx184 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 2
  %81 = load %struct.regexp** %rx184, align 8, !tbaa !0
  %82 = bitcast %struct.regexp* %81 to i8*
  call void @Perl_save_destructor_x(void (i8*)* @clear_re, i8* %82) #8
  %.pre3354 = load i8** %parse, align 8, !tbaa !0
  br label %if.end185

if.end185:                                        ; preds = %if.then183, %if.then179
  %83 = phi i8* [ %.pre3354, %if.then183 ], [ %incdec.ptr176, %if.then179 ]
  %precomp188 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 1
  %84 = load i8** %precomp188, align 8, !tbaa !0
  %sub.ptr.lhs.cast189 = ptrtoint i8* %83 to i64
  %sub.ptr.rhs.cast190 = ptrtoint i8* %84 to i64
  %sub.ptr.sub191 = sub i64 %sub.ptr.lhs.cast189, %sub.ptr.rhs.cast190
  %conv192 = and i32 %conv141, 255
  %conv193 = trunc i64 %sub.ptr.sub191 to i32
  %add.ptr196 = getelementptr inbounds i8* %84, i64 %sub.ptr.sub191
  call void (i8*, ...)* @S_re_croak2(i8* getelementptr inbounds ([29 x i8]* @.str43, i64 0, i64 0), i32 %conv192, i32 %conv193, i8* %84, i8* %add.ptr196) #9
  %.pre3355.pre = load i8** %parse, align 8, !tbaa !0
  br label %while.cond198

while.cond198:                                    ; preds = %if.then173, %if.end185, %while.body222
  %85 = phi i8* [ %incdec.ptr224, %while.body222 ], [ %.pre3355.pre, %if.end185 ], [ %incdec.ptr176, %if.then173 ]
  %86 = load i8* %85, align 1, !tbaa !1
  switch i8 %86, label %while.end [
    i8 32, label %while.body222
    i8 9, label %while.body222
    i8 10, label %while.body222
    i8 13, label %while.body222
    i8 12, label %while.body222
  ]

while.body222:                                    ; preds = %while.cond198, %while.cond198, %while.cond198, %while.cond198, %while.cond198
  %incdec.ptr224 = getelementptr inbounds i8* %85, i64 1
  store i8* %incdec.ptr224, i8** %parse, align 8, !tbaa !0
  br label %while.cond198

while.end:                                        ; preds = %while.cond198
  %cmp226 = icmp eq i8* %call177, %85
  br i1 %cmp226, label %if.then228, label %if.end246

if.then228:                                       ; preds = %while.end
  %87 = load %struct.regnode** %emit, align 8, !tbaa !0
  %cmp230 = icmp eq %struct.regnode* %87, @PL_regdummy
  br i1 %cmp230, label %if.end234, label %if.then232

if.then232:                                       ; preds = %if.then228
  %rx233 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 2
  %88 = load %struct.regexp** %rx233, align 8, !tbaa !0
  %89 = bitcast %struct.regexp* %88 to i8*
  call void @Perl_save_destructor_x(void (i8*)* @clear_re, i8* %89) #8
  %.pre3356 = load i8** %parse, align 8, !tbaa !0
  br label %if.end234

if.end234:                                        ; preds = %if.then232, %if.then228
  %90 = phi i8* [ %.pre3356, %if.then232 ], [ %call177, %if.then228 ]
  %precomp237 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 1
  %91 = load i8** %precomp237, align 8, !tbaa !0
  %sub.ptr.lhs.cast238 = ptrtoint i8* %90 to i64
  %sub.ptr.rhs.cast239 = ptrtoint i8* %91 to i64
  %sub.ptr.sub240 = sub i64 %sub.ptr.lhs.cast238, %sub.ptr.rhs.cast239
  %conv241 = and i32 %conv141, 255
  %conv242 = trunc i64 %sub.ptr.sub240 to i32
  %add.ptr245 = getelementptr inbounds i8* %91, i64 %sub.ptr.sub240
  call void (i8*, ...)* @S_re_croak2(i8* getelementptr inbounds ([12 x i8]* @.str50, i64 0, i64 0), i32 %conv241, i32 %conv242, i8* %91, i8* %add.ptr245) #9
  %.pre3357 = load i8** %parse, align 8, !tbaa !0
  br label %if.end246

if.end246:                                        ; preds = %if.end234, %while.end
  %92 = phi i8* [ %.pre3357, %if.end234 ], [ %85, %while.end ]
  %sub.ptr.lhs.cast248 = ptrtoint i8* %call177 to i64
  %sub.ptr.rhs.cast249 = ptrtoint i8* %92 to i64
  %sub.ptr.sub250 = sub i64 %sub.ptr.lhs.cast248, %sub.ptr.rhs.cast249
  br label %while.cond251

while.cond251:                                    ; preds = %while.cond251, %while.cond251, %while.cond251, %while.cond251, %while.cond251, %if.end246
  %n.0 = phi i64 [ %sub.ptr.sub250, %if.end246 ], [ %add.ptr253.sum, %while.cond251 ], [ %add.ptr253.sum, %while.cond251 ], [ %add.ptr253.sum, %while.cond251 ], [ %add.ptr253.sum, %while.cond251 ], [ %add.ptr253.sum, %while.cond251 ]
  %add.ptr253.sum = add i64 %n.0, -1
  %add.ptr254 = getelementptr inbounds i8* %92, i64 %add.ptr253.sum
  %93 = load i8* %add.ptr254, align 1, !tbaa !1
  switch i8 %93, label %if.end291 [
    i8 32, label %while.cond251
    i8 9, label %while.cond251
    i8 10, label %while.cond251
    i8 13, label %while.cond251
    i8 12, label %while.cond251
  ]

if.end291:                                        ; preds = %while.cond251, %if.end168
  %94 = phi i8* [ %78, %if.end168 ], [ %92, %while.cond251 ]
  %n.1 = phi i64 [ 1, %if.end168 ], [ %n.0, %while.cond251 ]
  %e.0 = phi i8* [ %78, %if.end168 ], [ %call177, %while.cond251 ]
  %95 = load %struct.regnode** %emit, align 8, !tbaa !0
  %cmp293 = icmp eq %struct.regnode* %95, @PL_regdummy
  br i1 %cmp293, label %if.end349, label %if.then295

if.then295:                                       ; preds = %if.end291
  %96 = load i8* %94, align 1, !tbaa !1
  %cmp298 = icmp eq i8 %96, 94
  br i1 %cmp298, label %if.then300, label %if.end339

if.then300:                                       ; preds = %if.then295
  %incdec.ptr302 = getelementptr inbounds i8* %94, i64 1
  store i8* %incdec.ptr302, i8** %parse, align 8, !tbaa !0
  %cmp304 = icmp eq i64 %value.1, 112
  br label %while.cond308

while.cond308:                                    ; preds = %while.body334, %if.then300
  %97 = phi i8* [ %incdec.ptr302, %if.then300 ], [ %incdec.ptr336, %while.body334 ]
  %n.2.in = phi i64 [ %n.1, %if.then300 ], [ %n.2, %while.body334 ]
  %n.2 = add i64 %n.2.in, -1
  %98 = load i8* %97, align 1, !tbaa !1
  switch i8 %98, label %if.end339.loopexit [
    i8 32, label %while.body334
    i8 9, label %while.body334
    i8 10, label %while.body334
    i8 13, label %while.body334
    i8 12, label %while.body334
  ]

while.body334:                                    ; preds = %while.cond308, %while.cond308, %while.cond308, %while.cond308, %while.cond308
  %incdec.ptr336 = getelementptr inbounds i8* %97, i64 1
  store i8* %incdec.ptr336, i8** %parse, align 8, !tbaa !0
  br label %while.cond308

if.end339.loopexit:                               ; preds = %while.cond308
  %conv307 = select i1 %cmp304, i64 80, i64 112
  br label %if.end339

if.end339:                                        ; preds = %if.end339.loopexit, %if.then295
  %99 = phi i8* [ %94, %if.then295 ], [ %97, %if.end339.loopexit ]
  %n.3 = phi i64 [ %n.1, %if.then295 ], [ %n.2, %if.end339.loopexit ]
  %value.2 = phi i64 [ %value.1, %if.then295 ], [ %conv307, %if.end339.loopexit ]
  %cmp340 = icmp eq i64 %value.2, 112
  %conv343 = trunc i64 %n.3 to i32
  br i1 %cmp340, label %if.then342, label %if.else345

if.then342:                                       ; preds = %if.end339
  call void (%struct.sv*, i8*, ...)* @Perl_sv_catpvf(%struct.sv* %listsv.0, i8* getelementptr inbounds ([13 x i8]* @.str51, i64 0, i64 0), i32 %conv343, i8* %99) #8
  br label %if.end349

if.else345:                                       ; preds = %if.end339
  call void (%struct.sv*, i8*, ...)* @Perl_sv_catpvf(%struct.sv* %listsv.0, i8* getelementptr inbounds ([13 x i8]* @.str52, i64 0, i64 0), i32 %conv343, i8* %99) #8
  br label %if.end349

if.end349:                                        ; preds = %if.then342, %if.else345, %if.end291
  %value.3 = phi i64 [ %value.1, %if.end291 ], [ 112, %if.then342 ], [ %value.2, %if.else345 ]
  %add.ptr350 = getelementptr inbounds i8* %e.0, i64 1
  store i8* %add.ptr350, i8** %parse, align 8, !tbaa !0
  %flags352 = getelementptr inbounds %struct.regnode* %call, i64 0, i32 0
  %100 = load i8* %flags352, align 1, !tbaa !1
  %or354 = or i8 %100, 32
  store i8 %or354, i8* %flags352, align 1, !tbaa !1
  br label %if.then484

sw.bb357:                                         ; preds = %if.end140
  br label %if.end1958

sw.bb358:                                         ; preds = %if.end140
  br label %if.end1958

sw.bb359:                                         ; preds = %if.end140
  br label %if.end1958

sw.bb360:                                         ; preds = %if.end140
  br label %if.end1958

sw.bb361:                                         ; preds = %if.end140
  br label %if.end1958

sw.bb362:                                         ; preds = %if.end140
  br label %if.end1958

sw.bb363:                                         ; preds = %if.end140
  %101 = load i8* %71, align 1, !tbaa !1
  %cmp366 = icmp eq i8 %101, 123
  br i1 %cmp366, label %if.then368, label %if.else400

if.then368:                                       ; preds = %sw.bb363
  store i32 3, i32* %flags369, align 4, !tbaa !3
  %incdec.ptr371 = getelementptr inbounds i8* %71, i64 1
  store i8* %incdec.ptr371, i8** %parse, align 8, !tbaa !0
  %call372 = call i8* @strchr(i8* %71, i32 125) #8
  %tobool373 = icmp eq i8* %call372, null
  br i1 %tobool373, label %if.then374, label %if.end391

if.then374:                                       ; preds = %if.then368
  %102 = load %struct.regnode** %emit, align 8, !tbaa !0
  %cmp376 = icmp eq %struct.regnode* %102, @PL_regdummy
  br i1 %cmp376, label %if.end380, label %if.then378

if.then378:                                       ; preds = %if.then374
  %rx379 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 2
  %103 = load %struct.regexp** %rx379, align 8, !tbaa !0
  %104 = bitcast %struct.regexp* %103 to i8*
  call void @Perl_save_destructor_x(void (i8*)* @clear_re, i8* %104) #8
  %.pre3359 = load i8** %parse, align 8, !tbaa !0
  br label %if.end380

if.end380:                                        ; preds = %if.then378, %if.then374
  %105 = phi i8* [ %.pre3359, %if.then378 ], [ %incdec.ptr371, %if.then374 ]
  %precomp383 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 1
  %106 = load i8** %precomp383, align 8, !tbaa !0
  %sub.ptr.lhs.cast384 = ptrtoint i8* %105 to i64
  %sub.ptr.rhs.cast385 = ptrtoint i8* %106 to i64
  %sub.ptr.sub386 = sub i64 %sub.ptr.lhs.cast384, %sub.ptr.rhs.cast385
  %conv387 = trunc i64 %sub.ptr.sub386 to i32
  %add.ptr390 = getelementptr inbounds i8* %106, i64 %sub.ptr.sub386
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([55 x i8]* @.str13, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8]* @.str46, i64 0, i64 0), i32 %conv387, i8* %106, i8* %add.ptr390) #8
  %.pre3360 = load i8** %parse, align 8, !tbaa !0
  br label %if.end391

if.end391:                                        ; preds = %if.then368, %if.end380
  %107 = phi i8* [ %incdec.ptr371, %if.then368 ], [ %.pre3360, %if.end380 ]
  %sub.ptr.lhs.cast393 = ptrtoint i8* %call372 to i64
  %sub.ptr.rhs.cast394 = ptrtoint i8* %107 to i64
  %sub.ptr.sub395 = sub i64 %sub.ptr.lhs.cast393, %sub.ptr.rhs.cast394
  store i64 %sub.ptr.sub395, i64* %numlen, align 8, !tbaa !5
  %call397 = call i64 @Perl_grok_hex(i8* %107, i64* %numlen, i32* %flags369, double* null) #8
  %add.ptr398 = getelementptr inbounds i8* %call372, i64 1
  store i8* %add.ptr398, i8** %parse, align 8, !tbaa !0
  br label %if.end1958

if.else400:                                       ; preds = %sw.bb363
  store i32 2, i32* %flags401, align 4, !tbaa !3
  store i64 2, i64* %numlen, align 8, !tbaa !5
  %call403 = call i64 @Perl_grok_hex(i8* %71, i64* %numlen, i32* %flags401, double* null) #8
  %108 = load i64* %numlen, align 8, !tbaa !5
  %109 = load i8** %parse, align 8, !tbaa !0
  %add.ptr405 = getelementptr inbounds i8* %109, i64 %108
  store i8* %add.ptr405, i8** %parse, align 8, !tbaa !0
  br label %if.end1958

sw.bb407:                                         ; preds = %if.end140
  %incdec.ptr409 = getelementptr inbounds i8* %71, i64 1
  store i8* %incdec.ptr409, i8** %parse, align 8, !tbaa !0
  %110 = load i8* %71, align 1, !tbaa !1
  %conv411 = zext i8 %110 to i64
  %.off = add i8 %110, -97
  %111 = icmp ult i8 %.off, 26
  %sub = add i64 %conv411, -32
  %cond420 = select i1 %111, i64 %sub, i64 %conv411
  %xor = xor i64 %cond420, 64
  br label %if.end1958

sw.bb421:                                         ; preds = %if.end140, %if.end140, %if.end140, %if.end140, %if.end140, %if.end140, %if.end140, %if.end140, %if.end140, %if.end140
  store i32 0, i32* %flags422, align 4, !tbaa !3
  store i64 3, i64* %numlen, align 8, !tbaa !5
  %incdec.ptr424 = getelementptr inbounds i8* %71, i64 -1
  store i8* %incdec.ptr424, i8** %parse, align 8, !tbaa !0
  %call425 = call i64 @Perl_grok_oct(i8* %incdec.ptr424, i64* %numlen, i32* %flags422, double* null) #8
  %112 = load i64* %numlen, align 8, !tbaa !5
  %113 = load i8** %parse, align 8, !tbaa !0
  %add.ptr427 = getelementptr inbounds i8* %113, i64 %112
  store i8* %add.ptr427, i8** %parse, align 8, !tbaa !0
  br label %if.end1958

sw.default:                                       ; preds = %if.end140
  %114 = load %struct.regnode** %emit, align 8, !tbaa !0
  %cmp429 = icmp eq %struct.regnode* %114, @PL_regdummy
  br i1 %cmp429, label %if.end1958, label %land.lhs.true431

land.lhs.true431:                                 ; preds = %sw.default
  %115 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings = getelementptr inbounds %struct.cop* %115, i64 0, i32 14
  %116 = load %struct.sv** %cop_warnings, align 8, !tbaa !0
  %cmp432 = icmp eq %struct.sv* %116, null
  br i1 %cmp432, label %lor.lhs.false447, label %land.lhs.true434

land.lhs.true434:                                 ; preds = %land.lhs.true431
  %117 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings435 = getelementptr inbounds %struct.cop* %117, i64 0, i32 14
  %118 = load %struct.sv** %cop_warnings435, align 8, !tbaa !0
  %cmp436 = icmp eq %struct.sv* %118, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp436, label %lor.lhs.false447, label %land.lhs.true438

land.lhs.true438:                                 ; preds = %land.lhs.true434
  %119 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings439 = getelementptr inbounds %struct.cop* %119, i64 0, i32 14
  %120 = load %struct.sv** %cop_warnings439, align 8, !tbaa !0
  %cmp440 = icmp eq %struct.sv* %120, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp440, label %land.lhs.true455, label %lor.lhs.false442

lor.lhs.false442:                                 ; preds = %land.lhs.true438
  %121 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings443 = getelementptr inbounds %struct.cop* %121, i64 0, i32 14
  %122 = load %struct.sv** %cop_warnings443, align 8, !tbaa !0
  %sv_any = getelementptr inbounds %struct.sv* %122, i64 0, i32 0
  %123 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_pv = bitcast i8* %123 to i8**
  %124 = load i8** %xpv_pv, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i8* %124, i64 5
  %125 = load i8* %arrayidx, align 1, !tbaa !1
  %and445 = and i8 %125, 1
  %tobool446 = icmp eq i8 %and445, 0
  br i1 %tobool446, label %lor.lhs.false447, label %land.lhs.true455

lor.lhs.false447:                                 ; preds = %lor.lhs.false442, %land.lhs.true434, %land.lhs.true431
  %126 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings448 = getelementptr inbounds %struct.cop* %126, i64 0, i32 14
  %127 = load %struct.sv** %cop_warnings448, align 8, !tbaa !0
  %cmp449 = icmp eq %struct.sv* %127, null
  br i1 %cmp449, label %land.lhs.true451, label %if.end1958

land.lhs.true451:                                 ; preds = %lor.lhs.false447
  %128 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and453 = and i8 %128, 1
  %tobool454 = icmp eq i8 %and453, 0
  br i1 %tobool454, label %if.end1958, label %land.lhs.true455

land.lhs.true455:                                 ; preds = %lor.lhs.false442, %land.lhs.true451, %land.lhs.true438
  %value.1.off = add i64 %value.1, -65
  %129 = icmp ult i64 %value.1.off, 26
  %value.1.off3144 = add i64 %value.1, -97
  %130 = icmp ult i64 %value.1.off3144, 26
  %or.cond = or i1 %129, %130
  br i1 %or.cond, label %if.then467, label %if.end1958

if.then467:                                       ; preds = %land.lhs.true455
  %131 = load i8** %parse, align 8, !tbaa !0
  %precomp470 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 1
  %132 = load i8** %precomp470, align 8, !tbaa !0
  %sub.ptr.lhs.cast471 = ptrtoint i8* %131 to i64
  %sub.ptr.rhs.cast472 = ptrtoint i8* %132 to i64
  %sub.ptr.sub473 = sub i64 %sub.ptr.lhs.cast471, %sub.ptr.rhs.cast472
  %conv475 = trunc i64 %sub.ptr.sub473 to i32
  %add.ptr478 = getelementptr inbounds i8* %132, i64 %sub.ptr.sub473
  call void (i32, i8*, ...)* @Perl_warner(i32 20, i8* getelementptr inbounds ([110 x i8]* @.str53, i64 0, i64 0), i32 %conv141, i32 %conv475, i8* %132, i8* %add.ptr478) #8
  br label %if.end1958

if.end481:                                        ; preds = %sw.epilog149.i
  %cmp482 = icmp sgt i32 %namedclass.3.i, -1
  br i1 %cmp482, label %if.then484, label %if.end1958

if.then484:                                       ; preds = %if.then56.i, %if.then64.i, %if.then71.i, %if.then78.i, %if.then85.i, %if.then92.i, %if.then99.i, %if.then106.i, %if.then119.i, %if.then138.i, %if.then145.i, %if.end481, %if.end140, %sw.bb142, %sw.bb143, %sw.bb144, %sw.bb145, %sw.bb146, %if.end349
  %value.43227 = phi i64 [ %value.3, %if.end349 ], [ %value.1, %sw.bb146 ], [ %value.1, %sw.bb145 ], [ %value.1, %sw.bb144 ], [ %value.1, %sw.bb143 ], [ %value.1, %sw.bb142 ], [ %value.1, %if.end140 ], [ 91, %if.end481 ], [ 91, %if.then145.i ], [ 91, %if.then138.i ], [ 91, %if.then119.i ], [ 91, %if.then106.i ], [ 91, %if.then99.i ], [ 91, %if.then92.i ], [ 91, %if.then85.i ], [ 91, %if.then78.i ], [ 91, %if.then71.i ], [ 91, %if.then64.i ], [ 91, %if.then56.i ]
  %namedclass.03226 = phi i32 [ 32, %if.end349 ], [ 5, %sw.bb146 ], [ 4, %sw.bb145 ], [ 3, %sw.bb144 ], [ 2, %sw.bb143 ], [ 1, %sw.bb142 ], [ 0, %if.end140 ], [ %namedclass.3.i, %if.end481 ], [ %cond147.i, %if.then145.i ], [ %cond140.i, %if.then138.i ], [ %cond121.i, %if.then119.i ], [ %cond108.i, %if.then106.i ], [ %cond101.i, %if.then99.i ], [ %cond94.i, %if.then92.i ], [ %cond87.i, %if.then85.i ], [ %cond80.i, %if.then78.i ], [ %cond73.i, %if.then71.i ], [ %cond66.i, %if.then64.i ], [ %cond58.i, %if.then56.i ]
  %133 = load %struct.regnode** %emit, align 8, !tbaa !0
  %cmp486 = icmp ne %struct.regnode* %133, @PL_regdummy
  %tobool489 = icmp eq i8 %need_class.1, 0
  %or.cond3148 = and i1 %cmp486, %tobool489
  br i1 %or.cond3148, label %if.then490, label %if.end492

if.then490:                                       ; preds = %if.then484
  %arraydecay491 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 0
  %134 = bitcast i8* %arraydecay491 to i32*
  store i32 0, i32* %134, align 1
  br label %if.end492

if.end492:                                        ; preds = %if.then484, %if.then490
  br i1 %tobool, label %if.then494, label %if.end568

if.then494:                                       ; preds = %if.end492
  %135 = load %struct.regnode** %emit, align 8, !tbaa !0
  %cmp496 = icmp eq %struct.regnode* %135, @PL_regdummy
  br i1 %cmp496, label %if.else1983, label %if.then498

if.then498:                                       ; preds = %if.then494
  %136 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings499 = getelementptr inbounds %struct.cop* %136, i64 0, i32 14
  %137 = load %struct.sv** %cop_warnings499, align 8, !tbaa !0
  %cmp500 = icmp eq %struct.sv* %137, null
  br i1 %cmp500, label %lor.lhs.false518, label %land.lhs.true502

land.lhs.true502:                                 ; preds = %if.then498
  %138 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings503 = getelementptr inbounds %struct.cop* %138, i64 0, i32 14
  %139 = load %struct.sv** %cop_warnings503, align 8, !tbaa !0
  %cmp504 = icmp eq %struct.sv* %139, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp504, label %lor.lhs.false518, label %land.lhs.true506

land.lhs.true506:                                 ; preds = %land.lhs.true502
  %140 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings507 = getelementptr inbounds %struct.cop* %140, i64 0, i32 14
  %141 = load %struct.sv** %cop_warnings507, align 8, !tbaa !0
  %cmp508 = icmp eq %struct.sv* %141, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp508, label %if.then526, label %lor.lhs.false510

lor.lhs.false510:                                 ; preds = %land.lhs.true506
  %142 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings511 = getelementptr inbounds %struct.cop* %142, i64 0, i32 14
  %143 = load %struct.sv** %cop_warnings511, align 8, !tbaa !0
  %sv_any512 = getelementptr inbounds %struct.sv* %143, i64 0, i32 0
  %144 = load i8** %sv_any512, align 8, !tbaa !0
  %xpv_pv513 = bitcast i8* %144 to i8**
  %145 = load i8** %xpv_pv513, align 8, !tbaa !0
  %arrayidx514 = getelementptr inbounds i8* %145, i64 5
  %146 = load i8* %arrayidx514, align 1, !tbaa !1
  %and516 = and i8 %146, 1
  %tobool517 = icmp eq i8 %and516, 0
  br i1 %tobool517, label %lor.lhs.false518, label %if.then526

lor.lhs.false518:                                 ; preds = %lor.lhs.false510, %land.lhs.true502, %if.then498
  %147 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings519 = getelementptr inbounds %struct.cop* %147, i64 0, i32 14
  %148 = load %struct.sv** %cop_warnings519, align 8, !tbaa !0
  %cmp520 = icmp eq %struct.sv* %148, null
  br i1 %cmp520, label %land.lhs.true522, label %if.end545

land.lhs.true522:                                 ; preds = %lor.lhs.false518
  %149 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and524 = and i8 %149, 1
  %tobool525 = icmp eq i8 %and524, 0
  br i1 %tobool525, label %if.end545, label %if.then526

if.then526:                                       ; preds = %lor.lhs.false510, %land.lhs.true522, %land.lhs.true506
  %150 = load i8** %parse, align 8, !tbaa !0
  %precomp529 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 1
  %151 = load i8** %precomp529, align 8, !tbaa !0
  %sub.ptr.lhs.cast530 = ptrtoint i8* %150 to i64
  %sub.ptr.rhs.cast531 = ptrtoint i8* %151 to i64
  %sub.ptr.sub532 = sub i64 %sub.ptr.lhs.cast530, %sub.ptr.rhs.cast531
  %sub.ptr.rhs.cast535 = ptrtoint i8* %rangebegin.1. to i64
  %sub.ptr.sub536 = sub i64 %sub.ptr.lhs.cast530, %sub.ptr.rhs.cast535
  %conv541 = trunc i64 %sub.ptr.sub532 to i32
  %add.ptr544 = getelementptr inbounds i8* %151, i64 %sub.ptr.sub532
  call void (i32, i8*, ...)* @Perl_warner(i32 20, i8* getelementptr inbounds ([75 x i8]* @.str54, i64 0, i64 0), i64 %sub.ptr.sub536, i64 %sub.ptr.sub536, i8* %rangebegin.1., i32 %conv541, i8* %151, i8* %add.ptr544) #8
  br label %if.end545

if.end545:                                        ; preds = %land.lhs.true522, %if.then526, %lor.lhs.false518
  %cmp546 = icmp slt i64 %prevvalue.1, 256
  br i1 %cmp546, label %if.then548, label %if.else561

if.then548:                                       ; preds = %if.end545
  %prevvalue.1.tr = trunc i64 %prevvalue.1 to i32
  %sh_prom = and i32 %prevvalue.1.tr, 7
  %shl = shl i32 1, %sh_prom
  %shr3140 = lshr i64 %prevvalue.1, 3
  %and550 = and i64 %shr3140, 31
  %bitmap551 = getelementptr inbounds %struct.regnode* %call, i64 2
  %152 = bitcast %struct.regnode* %bitmap551 to [32 x i8]*
  %arrayidx552 = getelementptr inbounds [32 x i8]* %152, i64 0, i64 %and550
  %153 = load i8* %arrayidx552, align 1, !tbaa !1
  %conv5533141 = zext i8 %153 to i32
  %or554 = or i32 %conv5533141, %shl
  %conv555 = trunc i32 %or554 to i8
  store i8 %conv555, i8* %arrayidx552, align 1, !tbaa !1
  %154 = getelementptr inbounds %struct.regnode* %call, i64 3, i32 1
  %155 = load i8* %154, align 1, !tbaa !1
  %or559 = or i8 %155, 32
  store i8 %or559, i8* %154, align 1, !tbaa !1
  br label %if.end568

if.else561:                                       ; preds = %if.end545
  %flags562 = getelementptr inbounds %struct.regnode* %call, i64 0, i32 0
  %156 = load i8* %flags562, align 1, !tbaa !1
  %or564 = or i8 %156, 32
  store i8 %or564, i8* %flags562, align 1, !tbaa !1
  call void (%struct.sv*, i8*, ...)* @Perl_sv_catpvf(%struct.sv* %listsv.0, i8* getelementptr inbounds ([13 x i8]* @.str55, i64 0, i64 0), i64 %prevvalue.1, i64 45) #8
  br label %if.end568

if.end568:                                        ; preds = %if.end492, %if.else561, %if.then548
  %.pr3229 = load %struct.regnode** %emit, align 8, !tbaa !0
  %cmp570 = icmp eq %struct.regnode* %.pr3229, @PL_regdummy
  br i1 %cmp570, label %if.else1983, label %if.then572

if.then572:                                       ; preds = %if.end568
  switch i32 %namedclass.03226, label %if.end1931 [
    i32 0, label %sw.bb578
    i32 1, label %sw.bb626
    i32 6, label %sw.bb678
    i32 7, label %sw.bb727
    i32 8, label %sw.bb776
    i32 9, label %sw.bb819
    i32 10, label %sw.bb862
    i32 11, label %sw.bb892
    i32 28, label %sw.bb922
    i32 29, label %sw.bb959
    i32 12, label %sw.bb996
    i32 13, label %sw.bb1033
    i32 4, label %sw.bb1070
    i32 5, label %sw.bb1100
    i32 14, label %sw.bb1147
    i32 15, label %sw.bb1223
    i32 16, label %sw.bb1299
    i32 17, label %sw.bb1336
    i32 18, label %sw.bb1373
    i32 19, label %sw.bb1413
    i32 26, label %sw.bb1453
    i32 27, label %sw.bb1502
    i32 20, label %sw.bb1551
    i32 21, label %sw.bb1606
    i32 2, label %sw.bb1661
    i32 3, label %sw.bb1707
    i32 22, label %sw.bb1753
    i32 23, label %sw.bb1790
    i32 24, label %sw.bb1827
    i32 25, label %sw.bb1876
    i32 32, label %if.end1946
  ]

sw.bb578:                                         ; preds = %if.then572
  %flags579 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %157 = load i32* %flags579, align 4, !tbaa !3
  %and580 = and i32 %157, 2048
  %cmp581 = icmp eq i32 %and580, 0
  br i1 %cmp581, label %for.cond.preheader, label %if.then583

for.cond.preheader:                               ; preds = %sw.bb578
  %bitmap618 = getelementptr inbounds %struct.regnode* %call, i64 2
  %158 = bitcast %struct.regnode* %bitmap618 to [32 x i8]*
  br label %for.body

if.then583:                                       ; preds = %sw.bb578
  %arrayidx585 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 0
  %159 = load i8* %arrayidx585, align 1, !tbaa !1
  %or587 = or i8 %159, 1
  store i8 %or587, i8* %arrayidx585, align 1, !tbaa !1
  br label %if.then1944

for.body:                                         ; preds = %for.inc, %for.cond.preheader
  %value.53250 = phi i64 [ 0, %for.cond.preheader ], [ %inc624, %for.inc ]
  %value.5.off = add i64 %value.53250, -65
  %160 = icmp ult i64 %value.5.off, 26
  %value.5.off3136 = add i64 %value.53250, -97
  %161 = icmp ult i64 %value.5.off3136, 26
  %or.cond3150 = or i1 %160, %161
  br i1 %or.cond3150, label %if.then612, label %lor.lhs.false603

lor.lhs.false603:                                 ; preds = %for.body
  %value.5.off3137 = add i64 %value.53250, -48
  %162 = icmp ult i64 %value.5.off3137, 10
  %cmp610 = icmp eq i64 %value.53250, 95
  %or.cond2324 = or i1 %162, %cmp610
  br i1 %or.cond2324, label %if.then612, label %for.inc

if.then612:                                       ; preds = %lor.lhs.false603, %for.body
  %value.5.tr = trunc i64 %value.53250 to i32
  %sh_prom614 = and i32 %value.5.tr, 7
  %shl615 = shl i32 1, %sh_prom614
  %shr616 = lshr i64 %value.53250, 3
  %and617 = and i64 %shr616, 31
  %arrayidx619 = getelementptr inbounds [32 x i8]* %158, i64 0, i64 %and617
  %163 = load i8* %arrayidx619, align 1, !tbaa !1
  %conv6203138 = zext i8 %163 to i32
  %or621 = or i32 %conv6203138, %shl615
  %conv622 = trunc i32 %or621 to i8
  store i8 %conv622, i8* %arrayidx619, align 1, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.then612, %lor.lhs.false603
  %inc624 = add i64 %value.53250, 1
  %exitcond3319 = icmp eq i64 %inc624, 256
  br i1 %exitcond3319, label %if.then1944, label %for.body

sw.bb626:                                         ; preds = %if.then572
  %flags627 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %164 = load i32* %flags627, align 4, !tbaa !3
  %and628 = and i32 %164, 2048
  %cmp629 = icmp eq i32 %and628, 0
  br i1 %cmp629, label %for.cond638.preheader, label %if.then631

for.cond638.preheader:                            ; preds = %sw.bb626
  %bitmap668 = getelementptr inbounds %struct.regnode* %call, i64 2
  %165 = bitcast %struct.regnode* %bitmap668 to [32 x i8]*
  br label %for.body641

if.then631:                                       ; preds = %sw.bb626
  %arrayidx633 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 0
  %166 = load i8* %arrayidx633, align 1, !tbaa !1
  %or635 = or i8 %166, 2
  store i8 %or635, i8* %arrayidx633, align 1, !tbaa !1
  br label %if.then1944

for.body641:                                      ; preds = %for.inc674, %for.cond638.preheader
  %value.63253 = phi i64 [ 0, %for.cond638.preheader ], [ %inc675, %for.inc674 ]
  %value.6.off = add i64 %value.63253, -65
  %167 = icmp ult i64 %value.6.off, 26
  %value.6.off3132 = add i64 %value.63253, -97
  %168 = icmp ult i64 %value.6.off3132, 26
  %or.cond3152 = or i1 %167, %168
  br i1 %or.cond3152, label %for.inc674, label %lor.lhs.false653

lor.lhs.false653:                                 ; preds = %for.body641
  %value.6.off3133 = add i64 %value.63253, -48
  %169 = icmp ult i64 %value.6.off3133, 10
  %cmp660 = icmp eq i64 %value.63253, 95
  %or.cond2328 = or i1 %169, %cmp660
  br i1 %or.cond2328, label %for.inc674, label %if.then662

if.then662:                                       ; preds = %lor.lhs.false653
  %value.6.tr = trunc i64 %value.63253 to i32
  %sh_prom664 = and i32 %value.6.tr, 7
  %shl665 = shl i32 1, %sh_prom664
  %shr666 = lshr i64 %value.63253, 3
  %and667 = and i64 %shr666, 31
  %arrayidx669 = getelementptr inbounds [32 x i8]* %165, i64 0, i64 %and667
  %170 = load i8* %arrayidx669, align 1, !tbaa !1
  %conv6703134 = zext i8 %170 to i32
  %or671 = or i32 %conv6703134, %shl665
  %conv672 = trunc i32 %or671 to i8
  store i8 %conv672, i8* %arrayidx669, align 1, !tbaa !1
  br label %for.inc674

for.inc674:                                       ; preds = %if.then662, %for.body641, %lor.lhs.false653
  %inc675 = add i64 %value.63253, 1
  %exitcond3320 = icmp eq i64 %inc675, 256
  br i1 %exitcond3320, label %if.then1944, label %for.body641

sw.bb678:                                         ; preds = %if.then572
  %flags679 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %171 = load i32* %flags679, align 4, !tbaa !3
  %and680 = and i32 %171, 2048
  %cmp681 = icmp eq i32 %and680, 0
  br i1 %cmp681, label %for.cond690.preheader, label %if.then683

for.cond690.preheader:                            ; preds = %sw.bb678
  %bitmap717 = getelementptr inbounds %struct.regnode* %call, i64 2
  %172 = bitcast %struct.regnode* %bitmap717 to [32 x i8]*
  br label %for.body693

if.then683:                                       ; preds = %sw.bb678
  %arrayidx685 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 0
  %173 = load i8* %arrayidx685, align 1, !tbaa !1
  %or687 = or i8 %173, 64
  store i8 %or687, i8* %arrayidx685, align 1, !tbaa !1
  br label %if.then1944

for.body693:                                      ; preds = %for.inc723, %for.cond690.preheader
  %value.73255 = phi i64 [ 0, %for.cond690.preheader ], [ %inc724, %for.inc723 ]
  %value.7.off = add i64 %value.73255, -65
  %174 = icmp ult i64 %value.7.off, 26
  %value.7.off3128 = add i64 %value.73255, -97
  %175 = icmp ult i64 %value.7.off3128, 26
  %or.cond3154 = or i1 %174, %175
  %value.7.off3129 = add i64 %value.73255, -48
  %176 = icmp ult i64 %value.7.off3129, 10
  %or.cond3156 = or i1 %or.cond3154, %176
  br i1 %or.cond3156, label %if.then711, label %for.inc723

if.then711:                                       ; preds = %for.body693
  %value.7.tr = trunc i64 %value.73255 to i32
  %sh_prom713 = and i32 %value.7.tr, 7
  %shl714 = shl i32 1, %sh_prom713
  %shr715 = lshr i64 %value.73255, 3
  %and716 = and i64 %shr715, 31
  %arrayidx718 = getelementptr inbounds [32 x i8]* %172, i64 0, i64 %and716
  %177 = load i8* %arrayidx718, align 1, !tbaa !1
  %conv7193130 = zext i8 %177 to i32
  %or720 = or i32 %conv7193130, %shl714
  %conv721 = trunc i32 %or720 to i8
  store i8 %conv721, i8* %arrayidx718, align 1, !tbaa !1
  br label %for.inc723

for.inc723:                                       ; preds = %for.body693, %if.then711
  %inc724 = add i64 %value.73255, 1
  %exitcond3321 = icmp eq i64 %inc724, 256
  br i1 %exitcond3321, label %if.then1944, label %for.body693

sw.bb727:                                         ; preds = %if.then572
  %flags728 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %178 = load i32* %flags728, align 4, !tbaa !3
  %and729 = and i32 %178, 2048
  %cmp730 = icmp eq i32 %and729, 0
  br i1 %cmp730, label %for.cond739.preheader, label %if.then732

for.cond739.preheader:                            ; preds = %sw.bb727
  %bitmap766 = getelementptr inbounds %struct.regnode* %call, i64 2
  %179 = bitcast %struct.regnode* %bitmap766 to [32 x i8]*
  br label %for.body742

if.then732:                                       ; preds = %sw.bb727
  %arrayidx734 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 0
  %180 = load i8* %arrayidx734, align 1, !tbaa !1
  %or736 = or i8 %180, -128
  store i8 %or736, i8* %arrayidx734, align 1, !tbaa !1
  br label %if.then1944

for.body742:                                      ; preds = %for.inc772, %for.cond739.preheader
  %value.83257 = phi i64 [ 0, %for.cond739.preheader ], [ %inc773, %for.inc772 ]
  %value.8.off = add i64 %value.83257, -65
  %181 = icmp ult i64 %value.8.off, 26
  %value.8.off3124 = add i64 %value.83257, -97
  %182 = icmp ult i64 %value.8.off3124, 26
  %or.cond3158 = or i1 %181, %182
  %value.8.off3125 = add i64 %value.83257, -48
  %183 = icmp ult i64 %value.8.off3125, 10
  %or.cond3160 = or i1 %or.cond3158, %183
  br i1 %or.cond3160, label %for.inc772, label %if.then760

if.then760:                                       ; preds = %for.body742
  %value.8.tr = trunc i64 %value.83257 to i32
  %sh_prom762 = and i32 %value.8.tr, 7
  %shl763 = shl i32 1, %sh_prom762
  %shr764 = lshr i64 %value.83257, 3
  %and765 = and i64 %shr764, 31
  %arrayidx767 = getelementptr inbounds [32 x i8]* %179, i64 0, i64 %and765
  %184 = load i8* %arrayidx767, align 1, !tbaa !1
  %conv7683126 = zext i8 %184 to i32
  %or769 = or i32 %conv7683126, %shl763
  %conv770 = trunc i32 %or769 to i8
  store i8 %conv770, i8* %arrayidx767, align 1, !tbaa !1
  br label %for.inc772

for.inc772:                                       ; preds = %if.then760, %for.body742
  %inc773 = add i64 %value.83257, 1
  %exitcond3322 = icmp eq i64 %inc773, 256
  br i1 %exitcond3322, label %if.then1944, label %for.body742

sw.bb776:                                         ; preds = %if.then572
  %flags777 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %185 = load i32* %flags777, align 4, !tbaa !3
  %and778 = and i32 %185, 2048
  %cmp779 = icmp eq i32 %and778, 0
  br i1 %cmp779, label %for.cond788.preheader, label %if.then781

for.cond788.preheader:                            ; preds = %sw.bb776
  %bitmap809 = getelementptr inbounds %struct.regnode* %call, i64 2
  %186 = bitcast %struct.regnode* %bitmap809 to [32 x i8]*
  br label %for.body791

if.then781:                                       ; preds = %sw.bb776
  %187 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 1
  %188 = load i8* %187, align 1, !tbaa !1
  %or785 = or i8 %188, 1
  store i8 %or785, i8* %187, align 1, !tbaa !1
  br label %if.then1944

for.body791:                                      ; preds = %for.inc815, %for.cond788.preheader
  %value.93259 = phi i64 [ 0, %for.cond788.preheader ], [ %inc816, %for.inc815 ]
  %value.9.off = add i64 %value.93259, -65
  %189 = icmp ult i64 %value.9.off, 26
  %value.9.off3121 = add i64 %value.93259, -97
  %190 = icmp ult i64 %value.9.off3121, 26
  %or.cond3162 = or i1 %189, %190
  br i1 %or.cond3162, label %if.then803, label %for.inc815

if.then803:                                       ; preds = %for.body791
  %value.9.tr = trunc i64 %value.93259 to i32
  %sh_prom805 = and i32 %value.9.tr, 7
  %shl806 = shl i32 1, %sh_prom805
  %shr807 = lshr i64 %value.93259, 3
  %and808 = and i64 %shr807, 31
  %arrayidx810 = getelementptr inbounds [32 x i8]* %186, i64 0, i64 %and808
  %191 = load i8* %arrayidx810, align 1, !tbaa !1
  %conv8113122 = zext i8 %191 to i32
  %or812 = or i32 %conv8113122, %shl806
  %conv813 = trunc i32 %or812 to i8
  store i8 %conv813, i8* %arrayidx810, align 1, !tbaa !1
  br label %for.inc815

for.inc815:                                       ; preds = %for.body791, %if.then803
  %inc816 = add i64 %value.93259, 1
  %exitcond3323 = icmp eq i64 %inc816, 256
  br i1 %exitcond3323, label %if.then1944, label %for.body791

sw.bb819:                                         ; preds = %if.then572
  %flags820 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %192 = load i32* %flags820, align 4, !tbaa !3
  %and821 = and i32 %192, 2048
  %cmp822 = icmp eq i32 %and821, 0
  br i1 %cmp822, label %for.cond831.preheader, label %if.then824

for.cond831.preheader:                            ; preds = %sw.bb819
  %bitmap852 = getelementptr inbounds %struct.regnode* %call, i64 2
  %193 = bitcast %struct.regnode* %bitmap852 to [32 x i8]*
  br label %for.body834

if.then824:                                       ; preds = %sw.bb819
  %194 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 1
  %195 = load i8* %194, align 1, !tbaa !1
  %or828 = or i8 %195, 2
  store i8 %or828, i8* %194, align 1, !tbaa !1
  br label %if.then1944

for.body834:                                      ; preds = %for.inc858, %for.cond831.preheader
  %value.103261 = phi i64 [ 0, %for.cond831.preheader ], [ %inc859, %for.inc858 ]
  %value.10.off = add i64 %value.103261, -65
  %196 = icmp ult i64 %value.10.off, 26
  %value.10.off3118 = add i64 %value.103261, -97
  %197 = icmp ult i64 %value.10.off3118, 26
  %or.cond3164 = or i1 %196, %197
  br i1 %or.cond3164, label %for.inc858, label %if.then846

if.then846:                                       ; preds = %for.body834
  %value.10.tr = trunc i64 %value.103261 to i32
  %sh_prom848 = and i32 %value.10.tr, 7
  %shl849 = shl i32 1, %sh_prom848
  %shr850 = lshr i64 %value.103261, 3
  %and851 = and i64 %shr850, 31
  %arrayidx853 = getelementptr inbounds [32 x i8]* %193, i64 0, i64 %and851
  %198 = load i8* %arrayidx853, align 1, !tbaa !1
  %conv8543119 = zext i8 %198 to i32
  %or855 = or i32 %conv8543119, %shl849
  %conv856 = trunc i32 %or855 to i8
  store i8 %conv856, i8* %arrayidx853, align 1, !tbaa !1
  br label %for.inc858

for.inc858:                                       ; preds = %if.then846, %for.body834
  %inc859 = add i64 %value.103261, 1
  %exitcond3324 = icmp eq i64 %inc859, 256
  br i1 %exitcond3324, label %if.then1944, label %for.body834

sw.bb862:                                         ; preds = %if.then572
  %flags863 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %199 = load i32* %flags863, align 4, !tbaa !3
  %and864 = and i32 %199, 2048
  %cmp865 = icmp eq i32 %and864, 0
  br i1 %cmp865, label %for.cond874.preheader, label %if.then867

for.cond874.preheader:                            ; preds = %sw.bb862
  %bitmap883 = getelementptr inbounds %struct.regnode* %call, i64 2
  %200 = bitcast %struct.regnode* %bitmap883 to [32 x i8]*
  br label %for.body877

if.then867:                                       ; preds = %sw.bb862
  %201 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 1
  %202 = load i8* %201, align 1, !tbaa !1
  %or871 = or i8 %202, 4
  store i8 %or871, i8* %201, align 1, !tbaa !1
  br label %if.then1944

for.body877:                                      ; preds = %for.body877, %for.cond874.preheader
  %value.113263 = phi i64 [ 0, %for.cond874.preheader ], [ %inc889, %for.body877 ]
  %value.11.tr = trunc i64 %value.113263 to i32
  %sh_prom879 = and i32 %value.11.tr, 7
  %shl880 = shl i32 1, %sh_prom879
  %shr881 = lshr i64 %value.113263, 3
  %and882 = and i64 %shr881, 31
  %arrayidx884 = getelementptr inbounds [32 x i8]* %200, i64 0, i64 %and882
  %203 = load i8* %arrayidx884, align 1, !tbaa !1
  %conv8853116 = zext i8 %203 to i32
  %or886 = or i32 %conv8853116, %shl880
  %conv887 = trunc i32 %or886 to i8
  store i8 %conv887, i8* %arrayidx884, align 1, !tbaa !1
  %inc889 = add i64 %value.113263, 1
  %exitcond3325 = icmp eq i64 %inc889, 128
  br i1 %exitcond3325, label %if.then1944, label %for.body877

sw.bb892:                                         ; preds = %if.then572
  %flags893 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %204 = load i32* %flags893, align 4, !tbaa !3
  %and894 = and i32 %204, 2048
  %cmp895 = icmp eq i32 %and894, 0
  br i1 %cmp895, label %for.cond904.preheader, label %if.then897

for.cond904.preheader:                            ; preds = %sw.bb892
  %bitmap913 = getelementptr inbounds %struct.regnode* %call, i64 2
  %205 = bitcast %struct.regnode* %bitmap913 to [32 x i8]*
  br label %for.body907

if.then897:                                       ; preds = %sw.bb892
  %206 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 1
  %207 = load i8* %206, align 1, !tbaa !1
  %or901 = or i8 %207, 8
  store i8 %or901, i8* %206, align 1, !tbaa !1
  br label %if.then1944

for.body907:                                      ; preds = %for.body907, %for.cond904.preheader
  %value.123265 = phi i64 [ 128, %for.cond904.preheader ], [ %inc919, %for.body907 ]
  %value.12.tr = trunc i64 %value.123265 to i32
  %sh_prom909 = and i32 %value.12.tr, 7
  %shl910 = shl i32 1, %sh_prom909
  %shr911 = lshr i64 %value.123265, 3
  %and912 = and i64 %shr911, 31
  %arrayidx914 = getelementptr inbounds [32 x i8]* %205, i64 0, i64 %and912
  %208 = load i8* %arrayidx914, align 1, !tbaa !1
  %conv9153114 = zext i8 %208 to i32
  %or916 = or i32 %conv9153114, %shl910
  %conv917 = trunc i32 %or916 to i8
  store i8 %conv917, i8* %arrayidx914, align 1, !tbaa !1
  %inc919 = add i64 %value.123265, 1
  %exitcond3326 = icmp eq i64 %inc919, 256
  br i1 %exitcond3326, label %if.then1944, label %for.body907

sw.bb922:                                         ; preds = %if.then572
  %flags923 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %209 = load i32* %flags923, align 4, !tbaa !3
  %and924 = and i32 %209, 2048
  %cmp925 = icmp eq i32 %and924, 0
  br i1 %cmp925, label %for.cond934.preheader, label %if.then927

for.cond934.preheader:                            ; preds = %sw.bb922
  %bitmap949 = getelementptr inbounds %struct.regnode* %call, i64 2
  %210 = bitcast %struct.regnode* %bitmap949 to [32 x i8]*
  br label %for.body937

if.then927:                                       ; preds = %sw.bb922
  %classflags928 = getelementptr inbounds %struct.regnode* %call, i64 10
  %211 = bitcast %struct.regnode* %classflags928 to [4 x i8]*
  %arrayidx929 = getelementptr inbounds [4 x i8]* %211, i64 0, i64 3
  %212 = load i8* %arrayidx929, align 1, !tbaa !1
  %or931 = or i8 %212, 16
  store i8 %or931, i8* %arrayidx929, align 1, !tbaa !1
  br label %if.then1944

for.body937:                                      ; preds = %for.inc955, %for.cond934.preheader
  %value.133267 = phi i64 [ 0, %for.cond934.preheader ], [ %inc956, %for.inc955 ]
  switch i64 %value.133267, label %for.inc955 [
    i64 32, label %if.then943
    i64 9, label %if.then943
  ]

if.then943:                                       ; preds = %for.body937, %for.body937
  %value.13.tr = trunc i64 %value.133267 to i32
  %sh_prom945 = and i32 %value.13.tr, 7
  %shl946 = shl i32 1, %sh_prom945
  %shr947 = lshr i64 %value.133267, 3
  %and948 = and i64 %shr947, 31
  %arrayidx950 = getelementptr inbounds [32 x i8]* %210, i64 0, i64 %and948
  %213 = load i8* %arrayidx950, align 1, !tbaa !1
  %conv9513112 = zext i8 %213 to i32
  %or952 = or i32 %conv9513112, %shl946
  %conv953 = trunc i32 %or952 to i8
  store i8 %conv953, i8* %arrayidx950, align 1, !tbaa !1
  br label %for.inc955

for.inc955:                                       ; preds = %for.body937, %if.then943
  %inc956 = add i64 %value.133267, 1
  %exitcond3327 = icmp eq i64 %inc956, 256
  br i1 %exitcond3327, label %if.then1944, label %for.body937

sw.bb959:                                         ; preds = %if.then572
  %flags960 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %214 = load i32* %flags960, align 4, !tbaa !3
  %and961 = and i32 %214, 2048
  %cmp962 = icmp eq i32 %and961, 0
  br i1 %cmp962, label %for.cond971.preheader, label %if.then964

for.cond971.preheader:                            ; preds = %sw.bb959
  %bitmap986 = getelementptr inbounds %struct.regnode* %call, i64 2
  %215 = bitcast %struct.regnode* %bitmap986 to [32 x i8]*
  br label %for.body974

if.then964:                                       ; preds = %sw.bb959
  %classflags965 = getelementptr inbounds %struct.regnode* %call, i64 10
  %216 = bitcast %struct.regnode* %classflags965 to [4 x i8]*
  %arrayidx966 = getelementptr inbounds [4 x i8]* %216, i64 0, i64 3
  %217 = load i8* %arrayidx966, align 1, !tbaa !1
  %or968 = or i8 %217, 32
  store i8 %or968, i8* %arrayidx966, align 1, !tbaa !1
  br label %if.then1944

for.body974:                                      ; preds = %for.inc992, %for.cond971.preheader
  %value.143270 = phi i64 [ 0, %for.cond971.preheader ], [ %inc993, %for.inc992 ]
  switch i64 %value.143270, label %if.then980 [
    i64 32, label %for.inc992
    i64 9, label %for.inc992
  ]

if.then980:                                       ; preds = %for.body974
  %value.14.tr = trunc i64 %value.143270 to i32
  %sh_prom982 = and i32 %value.14.tr, 7
  %shl983 = shl i32 1, %sh_prom982
  %shr984 = lshr i64 %value.143270, 3
  %and985 = and i64 %shr984, 31
  %arrayidx987 = getelementptr inbounds [32 x i8]* %215, i64 0, i64 %and985
  %218 = load i8* %arrayidx987, align 1, !tbaa !1
  %conv9883110 = zext i8 %218 to i32
  %or989 = or i32 %conv9883110, %shl983
  %conv990 = trunc i32 %or989 to i8
  store i8 %conv990, i8* %arrayidx987, align 1, !tbaa !1
  br label %for.inc992

for.inc992:                                       ; preds = %for.body974, %for.body974, %if.then980
  %inc993 = add i64 %value.143270, 1
  %exitcond3328 = icmp eq i64 %inc993, 256
  br i1 %exitcond3328, label %if.then1944, label %for.body974

sw.bb996:                                         ; preds = %if.then572
  %flags997 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %219 = load i32* %flags997, align 4, !tbaa !3
  %and998 = and i32 %219, 2048
  %cmp999 = icmp eq i32 %and998, 0
  br i1 %cmp999, label %for.cond1008.preheader, label %if.then1001

for.cond1008.preheader:                           ; preds = %sw.bb996
  %bitmap1023 = getelementptr inbounds %struct.regnode* %call, i64 2
  %220 = bitcast %struct.regnode* %bitmap1023 to [32 x i8]*
  br label %for.body1011

if.then1001:                                      ; preds = %sw.bb996
  %221 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 1
  %222 = load i8* %221, align 1, !tbaa !1
  %or1005 = or i8 %222, 16
  store i8 %or1005, i8* %221, align 1, !tbaa !1
  br label %if.then1944

for.body1011:                                     ; preds = %for.inc1029, %for.cond1008.preheader
  %value.153272 = phi i64 [ 0, %for.cond1008.preheader ], [ %inc1030, %for.inc1029 ]
  %cmp1012 = icmp ult i64 %value.153272, 32
  %cmp1015 = icmp eq i64 %value.153272, 127
  %or.cond2341 = or i1 %cmp1012, %cmp1015
  br i1 %or.cond2341, label %if.then1017, label %for.inc1029

if.then1017:                                      ; preds = %for.body1011
  %value.15.tr = trunc i64 %value.153272 to i32
  %sh_prom1019 = and i32 %value.15.tr, 7
  %shl1020 = shl i32 1, %sh_prom1019
  %shr1021 = lshr i64 %value.153272, 3
  %and1022 = and i64 %shr1021, 31
  %arrayidx1024 = getelementptr inbounds [32 x i8]* %220, i64 0, i64 %and1022
  %223 = load i8* %arrayidx1024, align 1, !tbaa !1
  %conv10253108 = zext i8 %223 to i32
  %or1026 = or i32 %conv10253108, %shl1020
  %conv1027 = trunc i32 %or1026 to i8
  store i8 %conv1027, i8* %arrayidx1024, align 1, !tbaa !1
  br label %for.inc1029

for.inc1029:                                      ; preds = %if.then1017, %for.body1011
  %inc1030 = add i64 %value.153272, 1
  %exitcond3329 = icmp eq i64 %inc1030, 256
  br i1 %exitcond3329, label %if.then1944, label %for.body1011

sw.bb1033:                                        ; preds = %if.then572
  %flags1034 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %224 = load i32* %flags1034, align 4, !tbaa !3
  %and1035 = and i32 %224, 2048
  %cmp1036 = icmp eq i32 %and1035, 0
  br i1 %cmp1036, label %for.cond1045.preheader, label %if.then1038

for.cond1045.preheader:                           ; preds = %sw.bb1033
  %bitmap1060 = getelementptr inbounds %struct.regnode* %call, i64 2
  %225 = bitcast %struct.regnode* %bitmap1060 to [32 x i8]*
  br label %for.body1048

if.then1038:                                      ; preds = %sw.bb1033
  %226 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 1
  %227 = load i8* %226, align 1, !tbaa !1
  %or1042 = or i8 %227, 32
  store i8 %or1042, i8* %226, align 1, !tbaa !1
  br label %if.then1944

for.body1048:                                     ; preds = %for.inc1066, %for.cond1045.preheader
  %value.163274 = phi i64 [ 0, %for.cond1045.preheader ], [ %inc1067, %for.inc1066 ]
  %cmp1049 = icmp ult i64 %value.163274, 32
  %cmp1052 = icmp eq i64 %value.163274, 127
  %or.cond2342 = or i1 %cmp1049, %cmp1052
  br i1 %or.cond2342, label %for.inc1066, label %if.then1054

if.then1054:                                      ; preds = %for.body1048
  %value.16.tr = trunc i64 %value.163274 to i32
  %sh_prom1056 = and i32 %value.16.tr, 7
  %shl1057 = shl i32 1, %sh_prom1056
  %shr1058 = lshr i64 %value.163274, 3
  %and1059 = and i64 %shr1058, 31
  %arrayidx1061 = getelementptr inbounds [32 x i8]* %225, i64 0, i64 %and1059
  %228 = load i8* %arrayidx1061, align 1, !tbaa !1
  %conv10623106 = zext i8 %228 to i32
  %or1063 = or i32 %conv10623106, %shl1057
  %conv1064 = trunc i32 %or1063 to i8
  store i8 %conv1064, i8* %arrayidx1061, align 1, !tbaa !1
  br label %for.inc1066

for.inc1066:                                      ; preds = %for.body1048, %if.then1054
  %inc1067 = add i64 %value.163274, 1
  %exitcond3330 = icmp eq i64 %inc1067, 256
  br i1 %exitcond3330, label %if.then1944, label %for.body1048

sw.bb1070:                                        ; preds = %if.then572
  %flags1071 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %229 = load i32* %flags1071, align 4, !tbaa !3
  %and1072 = and i32 %229, 2048
  %cmp1073 = icmp eq i32 %and1072, 0
  br i1 %cmp1073, label %for.cond1082.preheader, label %if.then1075

for.cond1082.preheader:                           ; preds = %sw.bb1070
  %bitmap1091 = getelementptr inbounds %struct.regnode* %call, i64 2
  %230 = bitcast %struct.regnode* %bitmap1091 to [32 x i8]*
  br label %for.body1085

if.then1075:                                      ; preds = %sw.bb1070
  %arrayidx1077 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 0
  %231 = load i8* %arrayidx1077, align 1, !tbaa !1
  %or1079 = or i8 %231, 16
  store i8 %or1079, i8* %arrayidx1077, align 1, !tbaa !1
  br label %if.then1944

for.body1085:                                     ; preds = %for.body1085, %for.cond1082.preheader
  %value.173276 = phi i64 [ 48, %for.cond1082.preheader ], [ %inc1097, %for.body1085 ]
  %value.17.tr = trunc i64 %value.173276 to i32
  %sh_prom1087 = and i32 %value.17.tr, 7
  %shl1088 = shl i32 1, %sh_prom1087
  %shr1089 = lshr i64 %value.173276, 3
  %and1090 = and i64 %shr1089, 31
  %arrayidx1092 = getelementptr inbounds [32 x i8]* %230, i64 0, i64 %and1090
  %232 = load i8* %arrayidx1092, align 1, !tbaa !1
  %conv10933104 = zext i8 %232 to i32
  %or1094 = or i32 %conv10933104, %shl1088
  %conv1095 = trunc i32 %or1094 to i8
  store i8 %conv1095, i8* %arrayidx1092, align 1, !tbaa !1
  %inc1097 = add i64 %value.173276, 1
  %exitcond3331 = icmp eq i64 %inc1097, 58
  br i1 %exitcond3331, label %if.then1944, label %for.body1085

sw.bb1100:                                        ; preds = %if.then572
  %flags1101 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %233 = load i32* %flags1101, align 4, !tbaa !3
  %and1102 = and i32 %233, 2048
  %cmp1103 = icmp eq i32 %and1102, 0
  br i1 %cmp1103, label %for.cond1112.preheader, label %if.then1105

for.cond1112.preheader:                           ; preds = %sw.bb1100
  %bitmap1121 = getelementptr inbounds %struct.regnode* %call, i64 2
  %234 = bitcast %struct.regnode* %bitmap1121 to [32 x i8]*
  br label %for.body1115

if.then1105:                                      ; preds = %sw.bb1100
  %arrayidx1107 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 0
  %235 = load i8* %arrayidx1107, align 1, !tbaa !1
  %or1109 = or i8 %235, 32
  store i8 %or1109, i8* %arrayidx1107, align 1, !tbaa !1
  br label %if.then1944

for.body1115:                                     ; preds = %for.body1115, %for.cond1112.preheader
  %value.183279 = phi i64 [ 0, %for.cond1112.preheader ], [ %inc1127, %for.body1115 ]
  %value.18.tr = trunc i64 %value.183279 to i32
  %sh_prom1117 = and i32 %value.18.tr, 7
  %shl1118 = shl i32 1, %sh_prom1117
  %shr1119 = lshr i64 %value.183279, 3
  %and1120 = and i64 %shr1119, 31
  %arrayidx1122 = getelementptr inbounds [32 x i8]* %234, i64 0, i64 %and1120
  %236 = load i8* %arrayidx1122, align 1, !tbaa !1
  %conv11233102 = zext i8 %236 to i32
  %or1124 = or i32 %conv11233102, %shl1118
  %conv1125 = trunc i32 %or1124 to i8
  store i8 %conv1125, i8* %arrayidx1122, align 1, !tbaa !1
  %inc1127 = add i64 %value.183279, 1
  %exitcond3333 = icmp eq i64 %inc1127, 48
  br i1 %exitcond3333, label %for.body1132, label %for.body1115

for.body1132:                                     ; preds = %for.body1115, %for.body1132
  %value.193278 = phi i64 [ %inc1144, %for.body1132 ], [ 58, %for.body1115 ]
  %value.19.tr = trunc i64 %value.193278 to i32
  %sh_prom1134 = and i32 %value.19.tr, 7
  %shl1135 = shl i32 1, %sh_prom1134
  %shr1136 = lshr i64 %value.193278, 3
  %and1137 = and i64 %shr1136, 31
  %arrayidx1139 = getelementptr inbounds [32 x i8]* %234, i64 0, i64 %and1137
  %237 = load i8* %arrayidx1139, align 1, !tbaa !1
  %conv11403101 = zext i8 %237 to i32
  %or1141 = or i32 %conv11403101, %shl1135
  %conv1142 = trunc i32 %or1141 to i8
  store i8 %conv1142, i8* %arrayidx1139, align 1, !tbaa !1
  %inc1144 = add i64 %value.193278, 1
  %exitcond3332 = icmp eq i64 %inc1144, 256
  br i1 %exitcond3332, label %if.then1944, label %for.body1132

sw.bb1147:                                        ; preds = %if.then572
  %flags1148 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %238 = load i32* %flags1148, align 4, !tbaa !3
  %and1149 = and i32 %238, 2048
  %cmp1150 = icmp eq i32 %and1149, 0
  br i1 %cmp1150, label %for.cond1159.preheader, label %if.then1152

for.cond1159.preheader:                           ; preds = %sw.bb1147
  %bitmap1213 = getelementptr inbounds %struct.regnode* %call, i64 2
  %239 = bitcast %struct.regnode* %bitmap1213 to [32 x i8]*
  br label %for.body1162

if.then1152:                                      ; preds = %sw.bb1147
  %240 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 1
  %241 = load i8* %240, align 1, !tbaa !1
  %or1156 = or i8 %241, 64
  store i8 %or1156, i8* %240, align 1, !tbaa !1
  br label %if.then1944

for.body1162:                                     ; preds = %for.inc1219, %for.cond1159.preheader
  %value.203281 = phi i64 [ 0, %for.cond1159.preheader ], [ %inc1220, %for.inc1219 ]
  %value.20.off = add i64 %value.203281, -65
  %242 = icmp ult i64 %value.20.off, 26
  %value.20.off3093 = add i64 %value.203281, -97
  %243 = icmp ult i64 %value.20.off3093, 26
  %or.cond3166 = or i1 %242, %243
  br i1 %or.cond3166, label %if.then1207, label %lor.lhs.false1174

lor.lhs.false1174:                                ; preds = %for.body1162
  %value.20.off3094 = add i64 %value.203281, -48
  %244 = icmp ult i64 %value.20.off3094, 10
  %cmp1181 = icmp eq i64 %value.203281, 95
  %or.cond2346 = or i1 %244, %cmp1181
  %value.20.off3095 = add i64 %value.203281, -33
  %245 = icmp ult i64 %value.20.off3095, 15
  %or.cond3168 = or i1 %or.cond2346, %245
  %value.20.off3096 = add i64 %value.203281, -58
  %246 = icmp ult i64 %value.20.off3096, 7
  %or.cond3170 = or i1 %or.cond3168, %246
  %value.20.off3097 = add i64 %value.203281, -91
  %247 = icmp ult i64 %value.20.off3097, 6
  %or.cond3172 = or i1 %or.cond3170, %247
  %value.20.off3098 = add i64 %value.203281, -123
  %248 = icmp ult i64 %value.20.off3098, 4
  %or.cond3174 = or i1 %or.cond3172, %248
  br i1 %or.cond3174, label %if.then1207, label %for.inc1219

if.then1207:                                      ; preds = %lor.lhs.false1174, %for.body1162
  %value.20.tr = trunc i64 %value.203281 to i32
  %sh_prom1209 = and i32 %value.20.tr, 7
  %shl1210 = shl i32 1, %sh_prom1209
  %shr1211 = lshr i64 %value.203281, 3
  %and1212 = and i64 %shr1211, 31
  %arrayidx1214 = getelementptr inbounds [32 x i8]* %239, i64 0, i64 %and1212
  %249 = load i8* %arrayidx1214, align 1, !tbaa !1
  %conv12153099 = zext i8 %249 to i32
  %or1216 = or i32 %conv12153099, %shl1210
  %conv1217 = trunc i32 %or1216 to i8
  store i8 %conv1217, i8* %arrayidx1214, align 1, !tbaa !1
  br label %for.inc1219

for.inc1219:                                      ; preds = %lor.lhs.false1174, %if.then1207
  %inc1220 = add i64 %value.203281, 1
  %exitcond3334 = icmp eq i64 %inc1220, 256
  br i1 %exitcond3334, label %if.then1944, label %for.body1162

sw.bb1223:                                        ; preds = %if.then572
  %flags1224 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %250 = load i32* %flags1224, align 4, !tbaa !3
  %and1225 = and i32 %250, 2048
  %cmp1226 = icmp eq i32 %and1225, 0
  br i1 %cmp1226, label %for.cond1235.preheader, label %if.then1228

for.cond1235.preheader:                           ; preds = %sw.bb1223
  %bitmap1289 = getelementptr inbounds %struct.regnode* %call, i64 2
  %251 = bitcast %struct.regnode* %bitmap1289 to [32 x i8]*
  br label %for.body1238

if.then1228:                                      ; preds = %sw.bb1223
  %252 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 1
  %253 = load i8* %252, align 1, !tbaa !1
  %or1232 = or i8 %253, -128
  store i8 %or1232, i8* %252, align 1, !tbaa !1
  br label %if.then1944

for.body1238:                                     ; preds = %for.inc1295, %for.cond1235.preheader
  %value.213284 = phi i64 [ 0, %for.cond1235.preheader ], [ %inc1296, %for.inc1295 ]
  %value.21.off = add i64 %value.213284, -65
  %254 = icmp ult i64 %value.21.off, 26
  %value.21.off3085 = add i64 %value.213284, -97
  %255 = icmp ult i64 %value.21.off3085, 26
  %or.cond3176 = or i1 %254, %255
  br i1 %or.cond3176, label %for.inc1295, label %lor.lhs.false1250

lor.lhs.false1250:                                ; preds = %for.body1238
  %value.21.off3086 = add i64 %value.213284, -48
  %256 = icmp ult i64 %value.21.off3086, 10
  %cmp1257 = icmp eq i64 %value.213284, 95
  %or.cond2354 = or i1 %256, %cmp1257
  %value.21.off3087 = add i64 %value.213284, -33
  %257 = icmp ult i64 %value.21.off3087, 15
  %or.cond3178 = or i1 %or.cond2354, %257
  %value.21.off3088 = add i64 %value.213284, -58
  %258 = icmp ult i64 %value.21.off3088, 7
  %or.cond3180 = or i1 %or.cond3178, %258
  %value.21.off3089 = add i64 %value.213284, -91
  %259 = icmp ult i64 %value.21.off3089, 6
  %or.cond3182 = or i1 %or.cond3180, %259
  %value.21.off3090 = add i64 %value.213284, -123
  %260 = icmp ult i64 %value.21.off3090, 4
  %or.cond3184 = or i1 %or.cond3182, %260
  br i1 %or.cond3184, label %for.inc1295, label %if.then1283

if.then1283:                                      ; preds = %lor.lhs.false1250
  %value.21.tr = trunc i64 %value.213284 to i32
  %sh_prom1285 = and i32 %value.21.tr, 7
  %shl1286 = shl i32 1, %sh_prom1285
  %shr1287 = lshr i64 %value.213284, 3
  %and1288 = and i64 %shr1287, 31
  %arrayidx1290 = getelementptr inbounds [32 x i8]* %251, i64 0, i64 %and1288
  %261 = load i8* %arrayidx1290, align 1, !tbaa !1
  %conv12913091 = zext i8 %261 to i32
  %or1292 = or i32 %conv12913091, %shl1286
  %conv1293 = trunc i32 %or1292 to i8
  store i8 %conv1293, i8* %arrayidx1290, align 1, !tbaa !1
  br label %for.inc1295

for.inc1295:                                      ; preds = %if.then1283, %for.body1238, %lor.lhs.false1250
  %inc1296 = add i64 %value.213284, 1
  %exitcond3335 = icmp eq i64 %inc1296, 256
  br i1 %exitcond3335, label %if.then1944, label %for.body1238

sw.bb1299:                                        ; preds = %if.then572
  %flags1300 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %262 = load i32* %flags1300, align 4, !tbaa !3
  %and1301 = and i32 %262, 2048
  %cmp1302 = icmp eq i32 %and1301, 0
  br i1 %cmp1302, label %for.cond1311.preheader, label %if.then1304

for.cond1311.preheader:                           ; preds = %sw.bb1299
  %bitmap1326 = getelementptr inbounds %struct.regnode* %call, i64 2
  %263 = bitcast %struct.regnode* %bitmap1326 to [32 x i8]*
  br label %for.body1314

if.then1304:                                      ; preds = %sw.bb1299
  %arrayidx1306 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 2
  %264 = bitcast i16* %arrayidx1306 to i8*
  %265 = load i8* %264, align 1, !tbaa !1
  %or1308 = or i8 %265, 1
  store i8 %or1308, i8* %264, align 1, !tbaa !1
  br label %if.then1944

for.body1314:                                     ; preds = %for.inc1332, %for.cond1311.preheader
  %value.223286 = phi i64 [ 0, %for.cond1311.preheader ], [ %inc1333, %for.inc1332 ]
  %value.22.off = add i64 %value.223286, -97
  %266 = icmp ult i64 %value.22.off, 26
  br i1 %266, label %if.then1320, label %for.inc1332

if.then1320:                                      ; preds = %for.body1314
  %value.22.tr = trunc i64 %value.223286 to i32
  %sh_prom1322 = and i32 %value.22.tr, 7
  %shl1323 = shl i32 1, %sh_prom1322
  %shr1324 = lshr i64 %value.223286, 3
  %and1325 = and i64 %shr1324, 31
  %arrayidx1327 = getelementptr inbounds [32 x i8]* %263, i64 0, i64 %and1325
  %267 = load i8* %arrayidx1327, align 1, !tbaa !1
  %conv13283083 = zext i8 %267 to i32
  %or1329 = or i32 %conv13283083, %shl1323
  %conv1330 = trunc i32 %or1329 to i8
  store i8 %conv1330, i8* %arrayidx1327, align 1, !tbaa !1
  br label %for.inc1332

for.inc1332:                                      ; preds = %for.body1314, %if.then1320
  %inc1333 = add i64 %value.223286, 1
  %exitcond3336 = icmp eq i64 %inc1333, 256
  br i1 %exitcond3336, label %if.then1944, label %for.body1314

sw.bb1336:                                        ; preds = %if.then572
  %flags1337 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %268 = load i32* %flags1337, align 4, !tbaa !3
  %and1338 = and i32 %268, 2048
  %cmp1339 = icmp eq i32 %and1338, 0
  br i1 %cmp1339, label %for.cond1348.preheader, label %if.then1341

for.cond1348.preheader:                           ; preds = %sw.bb1336
  %bitmap1363 = getelementptr inbounds %struct.regnode* %call, i64 2
  %269 = bitcast %struct.regnode* %bitmap1363 to [32 x i8]*
  br label %for.body1351

if.then1341:                                      ; preds = %sw.bb1336
  %arrayidx1343 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 2
  %270 = bitcast i16* %arrayidx1343 to i8*
  %271 = load i8* %270, align 1, !tbaa !1
  %or1345 = or i8 %271, 2
  store i8 %or1345, i8* %270, align 1, !tbaa !1
  br label %if.then1944

for.body1351:                                     ; preds = %for.inc1369, %for.cond1348.preheader
  %value.233288 = phi i64 [ 0, %for.cond1348.preheader ], [ %inc1370, %for.inc1369 ]
  %value.23.off = add i64 %value.233288, -97
  %272 = icmp ult i64 %value.23.off, 26
  br i1 %272, label %for.inc1369, label %if.then1357

if.then1357:                                      ; preds = %for.body1351
  %value.23.tr = trunc i64 %value.233288 to i32
  %sh_prom1359 = and i32 %value.23.tr, 7
  %shl1360 = shl i32 1, %sh_prom1359
  %shr1361 = lshr i64 %value.233288, 3
  %and1362 = and i64 %shr1361, 31
  %arrayidx1364 = getelementptr inbounds [32 x i8]* %269, i64 0, i64 %and1362
  %273 = load i8* %arrayidx1364, align 1, !tbaa !1
  %conv13653081 = zext i8 %273 to i32
  %or1366 = or i32 %conv13653081, %shl1360
  %conv1367 = trunc i32 %or1366 to i8
  store i8 %conv1367, i8* %arrayidx1364, align 1, !tbaa !1
  br label %for.inc1369

for.inc1369:                                      ; preds = %if.then1357, %for.body1351
  %inc1370 = add i64 %value.233288, 1
  %exitcond3337 = icmp eq i64 %inc1370, 256
  br i1 %exitcond3337, label %if.then1944, label %for.body1351

sw.bb1373:                                        ; preds = %if.then572
  %flags1374 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %274 = load i32* %flags1374, align 4, !tbaa !3
  %and1375 = and i32 %274, 2048
  %cmp1376 = icmp eq i32 %and1375, 0
  br i1 %cmp1376, label %for.cond1385.preheader, label %if.then1378

for.cond1385.preheader:                           ; preds = %sw.bb1373
  %bitmap1403 = getelementptr inbounds %struct.regnode* %call, i64 2
  %275 = bitcast %struct.regnode* %bitmap1403 to [32 x i8]*
  br label %for.body1388

if.then1378:                                      ; preds = %sw.bb1373
  %arrayidx1380 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 2
  %276 = bitcast i16* %arrayidx1380 to i8*
  %277 = load i8* %276, align 1, !tbaa !1
  %or1382 = or i8 %277, 4
  store i8 %or1382, i8* %276, align 1, !tbaa !1
  br label %if.then1944

for.body1388:                                     ; preds = %for.inc1409, %for.cond1385.preheader
  %value.243290 = phi i64 [ 0, %for.cond1385.preheader ], [ %inc1410, %for.inc1409 ]
  %value.24.off = add i64 %value.243290, -33
  %278 = icmp ult i64 %value.24.off, 94
  %cmp1395 = icmp eq i64 %value.243290, 32
  %or.cond2362 = or i1 %278, %cmp1395
  br i1 %or.cond2362, label %if.then1397, label %for.inc1409

if.then1397:                                      ; preds = %for.body1388
  %value.24.tr = trunc i64 %value.243290 to i32
  %sh_prom1399 = and i32 %value.24.tr, 7
  %shl1400 = shl i32 1, %sh_prom1399
  %shr1401 = lshr i64 %value.243290, 3
  %and1402 = and i64 %shr1401, 31
  %arrayidx1404 = getelementptr inbounds [32 x i8]* %275, i64 0, i64 %and1402
  %279 = load i8* %arrayidx1404, align 1, !tbaa !1
  %conv14053079 = zext i8 %279 to i32
  %or1406 = or i32 %conv14053079, %shl1400
  %conv1407 = trunc i32 %or1406 to i8
  store i8 %conv1407, i8* %arrayidx1404, align 1, !tbaa !1
  br label %for.inc1409

for.inc1409:                                      ; preds = %if.then1397, %for.body1388
  %inc1410 = add i64 %value.243290, 1
  %exitcond3338 = icmp eq i64 %inc1410, 256
  br i1 %exitcond3338, label %if.then1944, label %for.body1388

sw.bb1413:                                        ; preds = %if.then572
  %flags1414 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %280 = load i32* %flags1414, align 4, !tbaa !3
  %and1415 = and i32 %280, 2048
  %cmp1416 = icmp eq i32 %and1415, 0
  br i1 %cmp1416, label %for.cond1425.preheader, label %if.then1418

for.cond1425.preheader:                           ; preds = %sw.bb1413
  %bitmap1443 = getelementptr inbounds %struct.regnode* %call, i64 2
  %281 = bitcast %struct.regnode* %bitmap1443 to [32 x i8]*
  br label %for.body1428

if.then1418:                                      ; preds = %sw.bb1413
  %arrayidx1420 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 2
  %282 = bitcast i16* %arrayidx1420 to i8*
  %283 = load i8* %282, align 1, !tbaa !1
  %or1422 = or i8 %283, 8
  store i8 %or1422, i8* %282, align 1, !tbaa !1
  br label %if.then1944

for.body1428:                                     ; preds = %for.inc1449, %for.cond1425.preheader
  %value.253292 = phi i64 [ 0, %for.cond1425.preheader ], [ %inc1450, %for.inc1449 ]
  %value.25.off = add i64 %value.253292, -33
  %284 = icmp ult i64 %value.25.off, 94
  %cmp1435 = icmp eq i64 %value.253292, 32
  %or.cond2364 = or i1 %284, %cmp1435
  br i1 %or.cond2364, label %for.inc1449, label %if.then1437

if.then1437:                                      ; preds = %for.body1428
  %value.25.tr = trunc i64 %value.253292 to i32
  %sh_prom1439 = and i32 %value.25.tr, 7
  %shl1440 = shl i32 1, %sh_prom1439
  %shr1441 = lshr i64 %value.253292, 3
  %and1442 = and i64 %shr1441, 31
  %arrayidx1444 = getelementptr inbounds [32 x i8]* %281, i64 0, i64 %and1442
  %285 = load i8* %arrayidx1444, align 1, !tbaa !1
  %conv14453077 = zext i8 %285 to i32
  %or1446 = or i32 %conv14453077, %shl1440
  %conv1447 = trunc i32 %or1446 to i8
  store i8 %conv1447, i8* %arrayidx1444, align 1, !tbaa !1
  br label %for.inc1449

for.inc1449:                                      ; preds = %if.then1437, %for.body1428
  %inc1450 = add i64 %value.253292, 1
  %exitcond3339 = icmp eq i64 %inc1450, 256
  br i1 %exitcond3339, label %if.then1944, label %for.body1428

sw.bb1453:                                        ; preds = %if.then572
  %flags1454 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %286 = load i32* %flags1454, align 4, !tbaa !3
  %and1455 = and i32 %286, 2048
  %cmp1456 = icmp eq i32 %and1455, 0
  br i1 %cmp1456, label %for.cond1465.preheader, label %if.then1458

for.cond1465.preheader:                           ; preds = %sw.bb1453
  %bitmap1492 = getelementptr inbounds %struct.regnode* %call, i64 2
  %287 = bitcast %struct.regnode* %bitmap1492 to [32 x i8]*
  br label %for.body1468

if.then1458:                                      ; preds = %sw.bb1453
  %classflags1459 = getelementptr inbounds %struct.regnode* %call, i64 10
  %288 = bitcast %struct.regnode* %classflags1459 to [4 x i8]*
  %arrayidx1460 = getelementptr inbounds [4 x i8]* %288, i64 0, i64 3
  %289 = load i8* %arrayidx1460, align 1, !tbaa !1
  %or1462 = or i8 %289, 4
  store i8 %or1462, i8* %arrayidx1460, align 1, !tbaa !1
  br label %if.then1944

for.body1468:                                     ; preds = %for.inc1498, %for.cond1465.preheader
  %value.263294 = phi i64 [ 0, %for.cond1465.preheader ], [ %inc1499, %for.inc1498 ]
  switch i64 %value.263294, label %for.inc1498 [
    i64 32, label %if.then1486
    i64 13, label %if.then1486
    i64 12, label %if.then1486
    i64 11, label %if.then1486
    i64 10, label %if.then1486
    i64 9, label %if.then1486
  ]

if.then1486:                                      ; preds = %for.body1468, %for.body1468, %for.body1468, %for.body1468, %for.body1468, %for.body1468
  %value.26.tr = trunc i64 %value.263294 to i32
  %sh_prom1488 = and i32 %value.26.tr, 7
  %shl1489 = shl i32 1, %sh_prom1488
  %shr1490 = lshr i64 %value.263294, 3
  %and1491 = and i64 %shr1490, 31
  %arrayidx1493 = getelementptr inbounds [32 x i8]* %287, i64 0, i64 %and1491
  %290 = load i8* %arrayidx1493, align 1, !tbaa !1
  %conv14943075 = zext i8 %290 to i32
  %or1495 = or i32 %conv14943075, %shl1489
  %conv1496 = trunc i32 %or1495 to i8
  store i8 %conv1496, i8* %arrayidx1493, align 1, !tbaa !1
  br label %for.inc1498

for.inc1498:                                      ; preds = %for.body1468, %if.then1486
  %inc1499 = add i64 %value.263294, 1
  %exitcond3340 = icmp eq i64 %inc1499, 256
  br i1 %exitcond3340, label %if.then1944, label %for.body1468

sw.bb1502:                                        ; preds = %if.then572
  %flags1503 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %291 = load i32* %flags1503, align 4, !tbaa !3
  %and1504 = and i32 %291, 2048
  %cmp1505 = icmp eq i32 %and1504, 0
  br i1 %cmp1505, label %for.cond1514.preheader, label %if.then1507

for.cond1514.preheader:                           ; preds = %sw.bb1502
  %bitmap1541 = getelementptr inbounds %struct.regnode* %call, i64 2
  %292 = bitcast %struct.regnode* %bitmap1541 to [32 x i8]*
  br label %for.body1517

if.then1507:                                      ; preds = %sw.bb1502
  %classflags1508 = getelementptr inbounds %struct.regnode* %call, i64 10
  %293 = bitcast %struct.regnode* %classflags1508 to [4 x i8]*
  %arrayidx1509 = getelementptr inbounds [4 x i8]* %293, i64 0, i64 3
  %294 = load i8* %arrayidx1509, align 1, !tbaa !1
  %or1511 = or i8 %294, 8
  store i8 %or1511, i8* %arrayidx1509, align 1, !tbaa !1
  br label %if.then1944

for.body1517:                                     ; preds = %for.inc1547, %for.cond1514.preheader
  %value.273297 = phi i64 [ 0, %for.cond1514.preheader ], [ %inc1548, %for.inc1547 ]
  switch i64 %value.273297, label %if.then1535 [
    i64 32, label %for.inc1547
    i64 13, label %for.inc1547
    i64 12, label %for.inc1547
    i64 11, label %for.inc1547
    i64 10, label %for.inc1547
    i64 9, label %for.inc1547
  ]

if.then1535:                                      ; preds = %for.body1517
  %value.27.tr = trunc i64 %value.273297 to i32
  %sh_prom1537 = and i32 %value.27.tr, 7
  %shl1538 = shl i32 1, %sh_prom1537
  %shr1539 = lshr i64 %value.273297, 3
  %and1540 = and i64 %shr1539, 31
  %arrayidx1542 = getelementptr inbounds [32 x i8]* %292, i64 0, i64 %and1540
  %295 = load i8* %arrayidx1542, align 1, !tbaa !1
  %conv15433073 = zext i8 %295 to i32
  %or1544 = or i32 %conv15433073, %shl1538
  %conv1545 = trunc i32 %or1544 to i8
  store i8 %conv1545, i8* %arrayidx1542, align 1, !tbaa !1
  br label %for.inc1547

for.inc1547:                                      ; preds = %for.body1517, %for.body1517, %for.body1517, %for.body1517, %for.body1517, %for.body1517, %if.then1535
  %inc1548 = add i64 %value.273297, 1
  %exitcond3341 = icmp eq i64 %inc1548, 256
  br i1 %exitcond3341, label %if.then1944, label %for.body1517

sw.bb1551:                                        ; preds = %if.then572
  %flags1552 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %296 = load i32* %flags1552, align 4, !tbaa !3
  %and1553 = and i32 %296, 2048
  %cmp1554 = icmp eq i32 %and1553, 0
  br i1 %cmp1554, label %for.cond1563.preheader, label %if.then1556

for.cond1563.preheader:                           ; preds = %sw.bb1551
  %bitmap1596 = getelementptr inbounds %struct.regnode* %call, i64 2
  %297 = bitcast %struct.regnode* %bitmap1596 to [32 x i8]*
  br label %for.body1566

if.then1556:                                      ; preds = %sw.bb1551
  %arrayidx1558 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 2
  %298 = bitcast i16* %arrayidx1558 to i8*
  %299 = load i8* %298, align 1, !tbaa !1
  %or1560 = or i8 %299, 16
  store i8 %or1560, i8* %298, align 1, !tbaa !1
  br label %if.then1944

for.body1566:                                     ; preds = %for.inc1602, %for.cond1563.preheader
  %value.283299 = phi i64 [ 0, %for.cond1563.preheader ], [ %inc1603, %for.inc1602 ]
  %value.28.off = add i64 %value.283299, -33
  %300 = icmp ult i64 %value.28.off, 15
  %value.28.off3068 = add i64 %value.283299, -58
  %301 = icmp ult i64 %value.28.off3068, 7
  %or.cond3186 = or i1 %300, %301
  %value.28.off3069 = add i64 %value.283299, -91
  %302 = icmp ult i64 %value.28.off3069, 6
  %or.cond3188 = or i1 %or.cond3186, %302
  %value.28.off3070 = add i64 %value.283299, -123
  %303 = icmp ult i64 %value.28.off3070, 4
  %or.cond3190 = or i1 %or.cond3188, %303
  br i1 %or.cond3190, label %if.then1590, label %for.inc1602

if.then1590:                                      ; preds = %for.body1566
  %value.28.tr = trunc i64 %value.283299 to i32
  %sh_prom1592 = and i32 %value.28.tr, 7
  %shl1593 = shl i32 1, %sh_prom1592
  %shr1594 = lshr i64 %value.283299, 3
  %and1595 = and i64 %shr1594, 31
  %arrayidx1597 = getelementptr inbounds [32 x i8]* %297, i64 0, i64 %and1595
  %304 = load i8* %arrayidx1597, align 1, !tbaa !1
  %conv15983071 = zext i8 %304 to i32
  %or1599 = or i32 %conv15983071, %shl1593
  %conv1600 = trunc i32 %or1599 to i8
  store i8 %conv1600, i8* %arrayidx1597, align 1, !tbaa !1
  br label %for.inc1602

for.inc1602:                                      ; preds = %for.body1566, %if.then1590
  %inc1603 = add i64 %value.283299, 1
  %exitcond3342 = icmp eq i64 %inc1603, 256
  br i1 %exitcond3342, label %if.then1944, label %for.body1566

sw.bb1606:                                        ; preds = %if.then572
  %flags1607 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %305 = load i32* %flags1607, align 4, !tbaa !3
  %and1608 = and i32 %305, 2048
  %cmp1609 = icmp eq i32 %and1608, 0
  br i1 %cmp1609, label %for.cond1618.preheader, label %if.then1611

for.cond1618.preheader:                           ; preds = %sw.bb1606
  %bitmap1651 = getelementptr inbounds %struct.regnode* %call, i64 2
  %306 = bitcast %struct.regnode* %bitmap1651 to [32 x i8]*
  br label %for.body1621

if.then1611:                                      ; preds = %sw.bb1606
  %arrayidx1613 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 2
  %307 = bitcast i16* %arrayidx1613 to i8*
  %308 = load i8* %307, align 1, !tbaa !1
  %or1615 = or i8 %308, 32
  store i8 %or1615, i8* %307, align 1, !tbaa !1
  br label %if.then1944

for.body1621:                                     ; preds = %for.inc1657, %for.cond1618.preheader
  %value.293301 = phi i64 [ 0, %for.cond1618.preheader ], [ %inc1658, %for.inc1657 ]
  %value.29.off = add i64 %value.293301, -33
  %309 = icmp ult i64 %value.29.off, 15
  %value.29.off3063 = add i64 %value.293301, -58
  %310 = icmp ult i64 %value.29.off3063, 7
  %or.cond3192 = or i1 %309, %310
  %value.29.off3064 = add i64 %value.293301, -91
  %311 = icmp ult i64 %value.29.off3064, 6
  %or.cond3194 = or i1 %or.cond3192, %311
  %value.29.off3065 = add i64 %value.293301, -123
  %312 = icmp ult i64 %value.29.off3065, 4
  %or.cond3196 = or i1 %or.cond3194, %312
  br i1 %or.cond3196, label %for.inc1657, label %if.then1645

if.then1645:                                      ; preds = %for.body1621
  %value.29.tr = trunc i64 %value.293301 to i32
  %sh_prom1647 = and i32 %value.29.tr, 7
  %shl1648 = shl i32 1, %sh_prom1647
  %shr1649 = lshr i64 %value.293301, 3
  %and1650 = and i64 %shr1649, 31
  %arrayidx1652 = getelementptr inbounds [32 x i8]* %306, i64 0, i64 %and1650
  %313 = load i8* %arrayidx1652, align 1, !tbaa !1
  %conv16533066 = zext i8 %313 to i32
  %or1654 = or i32 %conv16533066, %shl1648
  %conv1655 = trunc i32 %or1654 to i8
  store i8 %conv1655, i8* %arrayidx1652, align 1, !tbaa !1
  br label %for.inc1657

for.inc1657:                                      ; preds = %if.then1645, %for.body1621
  %inc1658 = add i64 %value.293301, 1
  %exitcond3343 = icmp eq i64 %inc1658, 256
  br i1 %exitcond3343, label %if.then1944, label %for.body1621

sw.bb1661:                                        ; preds = %if.then572
  %flags1662 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %314 = load i32* %flags1662, align 4, !tbaa !3
  %and1663 = and i32 %314, 2048
  %cmp1664 = icmp eq i32 %and1663, 0
  br i1 %cmp1664, label %for.cond1673.preheader, label %if.then1666

for.cond1673.preheader:                           ; preds = %sw.bb1661
  %bitmap1697 = getelementptr inbounds %struct.regnode* %call, i64 2
  %315 = bitcast %struct.regnode* %bitmap1697 to [32 x i8]*
  br label %for.body1676

if.then1666:                                      ; preds = %sw.bb1661
  %arrayidx1668 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 0
  %316 = load i8* %arrayidx1668, align 1, !tbaa !1
  %or1670 = or i8 %316, 4
  store i8 %or1670, i8* %arrayidx1668, align 1, !tbaa !1
  br label %if.then1944

for.body1676:                                     ; preds = %for.inc1703, %for.cond1673.preheader
  %value.303303 = phi i64 [ 0, %for.cond1673.preheader ], [ %inc1704, %for.inc1703 ]
  switch i64 %value.303303, label %for.inc1703 [
    i64 32, label %if.then1691
    i64 13, label %if.then1691
    i64 12, label %if.then1691
    i64 10, label %if.then1691
    i64 9, label %if.then1691
  ]

if.then1691:                                      ; preds = %for.body1676, %for.body1676, %for.body1676, %for.body1676, %for.body1676
  %value.30.tr = trunc i64 %value.303303 to i32
  %sh_prom1693 = and i32 %value.30.tr, 7
  %shl1694 = shl i32 1, %sh_prom1693
  %shr1695 = lshr i64 %value.303303, 3
  %and1696 = and i64 %shr1695, 31
  %arrayidx1698 = getelementptr inbounds [32 x i8]* %315, i64 0, i64 %and1696
  %317 = load i8* %arrayidx1698, align 1, !tbaa !1
  %conv16993061 = zext i8 %317 to i32
  %or1700 = or i32 %conv16993061, %shl1694
  %conv1701 = trunc i32 %or1700 to i8
  store i8 %conv1701, i8* %arrayidx1698, align 1, !tbaa !1
  br label %for.inc1703

for.inc1703:                                      ; preds = %for.body1676, %if.then1691
  %inc1704 = add i64 %value.303303, 1
  %exitcond3344 = icmp eq i64 %inc1704, 256
  br i1 %exitcond3344, label %if.then1944, label %for.body1676

sw.bb1707:                                        ; preds = %if.then572
  %flags1708 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %318 = load i32* %flags1708, align 4, !tbaa !3
  %and1709 = and i32 %318, 2048
  %cmp1710 = icmp eq i32 %and1709, 0
  br i1 %cmp1710, label %for.cond1719.preheader, label %if.then1712

for.cond1719.preheader:                           ; preds = %sw.bb1707
  %bitmap1743 = getelementptr inbounds %struct.regnode* %call, i64 2
  %319 = bitcast %struct.regnode* %bitmap1743 to [32 x i8]*
  br label %for.body1722

if.then1712:                                      ; preds = %sw.bb1707
  %arrayidx1714 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 0
  %320 = load i8* %arrayidx1714, align 1, !tbaa !1
  %or1716 = or i8 %320, 8
  store i8 %or1716, i8* %arrayidx1714, align 1, !tbaa !1
  br label %if.then1944

for.body1722:                                     ; preds = %for.inc1749, %for.cond1719.preheader
  %value.313306 = phi i64 [ 0, %for.cond1719.preheader ], [ %inc1750, %for.inc1749 ]
  switch i64 %value.313306, label %if.then1737 [
    i64 32, label %for.inc1749
    i64 13, label %for.inc1749
    i64 12, label %for.inc1749
    i64 10, label %for.inc1749
    i64 9, label %for.inc1749
  ]

if.then1737:                                      ; preds = %for.body1722
  %value.31.tr = trunc i64 %value.313306 to i32
  %sh_prom1739 = and i32 %value.31.tr, 7
  %shl1740 = shl i32 1, %sh_prom1739
  %shr1741 = lshr i64 %value.313306, 3
  %and1742 = and i64 %shr1741, 31
  %arrayidx1744 = getelementptr inbounds [32 x i8]* %319, i64 0, i64 %and1742
  %321 = load i8* %arrayidx1744, align 1, !tbaa !1
  %conv17453059 = zext i8 %321 to i32
  %or1746 = or i32 %conv17453059, %shl1740
  %conv1747 = trunc i32 %or1746 to i8
  store i8 %conv1747, i8* %arrayidx1744, align 1, !tbaa !1
  br label %for.inc1749

for.inc1749:                                      ; preds = %for.body1722, %for.body1722, %for.body1722, %for.body1722, %for.body1722, %if.then1737
  %inc1750 = add i64 %value.313306, 1
  %exitcond3345 = icmp eq i64 %inc1750, 256
  br i1 %exitcond3345, label %if.then1944, label %for.body1722

sw.bb1753:                                        ; preds = %if.then572
  %flags1754 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %322 = load i32* %flags1754, align 4, !tbaa !3
  %and1755 = and i32 %322, 2048
  %cmp1756 = icmp eq i32 %and1755, 0
  br i1 %cmp1756, label %for.cond1765.preheader, label %if.then1758

for.cond1765.preheader:                           ; preds = %sw.bb1753
  %bitmap1780 = getelementptr inbounds %struct.regnode* %call, i64 2
  %323 = bitcast %struct.regnode* %bitmap1780 to [32 x i8]*
  br label %for.body1768

if.then1758:                                      ; preds = %sw.bb1753
  %arrayidx1760 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 2
  %324 = bitcast i16* %arrayidx1760 to i8*
  %325 = load i8* %324, align 1, !tbaa !1
  %or1762 = or i8 %325, 64
  store i8 %or1762, i8* %324, align 1, !tbaa !1
  br label %if.then1944

for.body1768:                                     ; preds = %for.inc1786, %for.cond1765.preheader
  %value.323308 = phi i64 [ 0, %for.cond1765.preheader ], [ %inc1787, %for.inc1786 ]
  %value.32.off = add i64 %value.323308, -65
  %326 = icmp ult i64 %value.32.off, 26
  br i1 %326, label %if.then1774, label %for.inc1786

if.then1774:                                      ; preds = %for.body1768
  %value.32.tr = trunc i64 %value.323308 to i32
  %sh_prom1776 = and i32 %value.32.tr, 7
  %shl1777 = shl i32 1, %sh_prom1776
  %shr1778 = lshr i64 %value.323308, 3
  %and1779 = and i64 %shr1778, 31
  %arrayidx1781 = getelementptr inbounds [32 x i8]* %323, i64 0, i64 %and1779
  %327 = load i8* %arrayidx1781, align 1, !tbaa !1
  %conv17823057 = zext i8 %327 to i32
  %or1783 = or i32 %conv17823057, %shl1777
  %conv1784 = trunc i32 %or1783 to i8
  store i8 %conv1784, i8* %arrayidx1781, align 1, !tbaa !1
  br label %for.inc1786

for.inc1786:                                      ; preds = %for.body1768, %if.then1774
  %inc1787 = add i64 %value.323308, 1
  %exitcond3346 = icmp eq i64 %inc1787, 256
  br i1 %exitcond3346, label %if.then1944, label %for.body1768

sw.bb1790:                                        ; preds = %if.then572
  %flags1791 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %328 = load i32* %flags1791, align 4, !tbaa !3
  %and1792 = and i32 %328, 2048
  %cmp1793 = icmp eq i32 %and1792, 0
  br i1 %cmp1793, label %for.cond1802.preheader, label %if.then1795

for.cond1802.preheader:                           ; preds = %sw.bb1790
  %bitmap1817 = getelementptr inbounds %struct.regnode* %call, i64 2
  %329 = bitcast %struct.regnode* %bitmap1817 to [32 x i8]*
  br label %for.body1805

if.then1795:                                      ; preds = %sw.bb1790
  %arrayidx1797 = getelementptr inbounds %struct.regnode* %call, i64 10, i32 2
  %330 = bitcast i16* %arrayidx1797 to i8*
  %331 = load i8* %330, align 1, !tbaa !1
  %or1799 = or i8 %331, -128
  store i8 %or1799, i8* %330, align 1, !tbaa !1
  br label %if.then1944

for.body1805:                                     ; preds = %for.inc1823, %for.cond1802.preheader
  %value.333310 = phi i64 [ 0, %for.cond1802.preheader ], [ %inc1824, %for.inc1823 ]
  %value.33.off = add i64 %value.333310, -65
  %332 = icmp ult i64 %value.33.off, 26
  br i1 %332, label %for.inc1823, label %if.then1811

if.then1811:                                      ; preds = %for.body1805
  %value.33.tr = trunc i64 %value.333310 to i32
  %sh_prom1813 = and i32 %value.33.tr, 7
  %shl1814 = shl i32 1, %sh_prom1813
  %shr1815 = lshr i64 %value.333310, 3
  %and1816 = and i64 %shr1815, 31
  %arrayidx1818 = getelementptr inbounds [32 x i8]* %329, i64 0, i64 %and1816
  %333 = load i8* %arrayidx1818, align 1, !tbaa !1
  %conv18193055 = zext i8 %333 to i32
  %or1820 = or i32 %conv18193055, %shl1814
  %conv1821 = trunc i32 %or1820 to i8
  store i8 %conv1821, i8* %arrayidx1818, align 1, !tbaa !1
  br label %for.inc1823

for.inc1823:                                      ; preds = %if.then1811, %for.body1805
  %inc1824 = add i64 %value.333310, 1
  %exitcond3347 = icmp eq i64 %inc1824, 256
  br i1 %exitcond3347, label %if.then1944, label %for.body1805

sw.bb1827:                                        ; preds = %if.then572
  %flags1828 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %334 = load i32* %flags1828, align 4, !tbaa !3
  %and1829 = and i32 %334, 2048
  %cmp1830 = icmp eq i32 %and1829, 0
  br i1 %cmp1830, label %for.cond1839.preheader, label %if.then1832

for.cond1839.preheader:                           ; preds = %sw.bb1827
  %bitmap1866 = getelementptr inbounds %struct.regnode* %call, i64 2
  %335 = bitcast %struct.regnode* %bitmap1866 to [32 x i8]*
  br label %for.body1842

if.then1832:                                      ; preds = %sw.bb1827
  %classflags1833 = getelementptr inbounds %struct.regnode* %call, i64 10
  %336 = bitcast %struct.regnode* %classflags1833 to [4 x i8]*
  %arrayidx1834 = getelementptr inbounds [4 x i8]* %336, i64 0, i64 3
  %337 = load i8* %arrayidx1834, align 1, !tbaa !1
  %or1836 = or i8 %337, 1
  store i8 %or1836, i8* %arrayidx1834, align 1, !tbaa !1
  br label %if.then1944

for.body1842:                                     ; preds = %for.inc1872, %for.cond1839.preheader
  %value.343312 = phi i64 [ 0, %for.cond1839.preheader ], [ %inc1873, %for.inc1872 ]
  %value.34.off = add i64 %value.343312, -48
  %338 = icmp ult i64 %value.34.off, 10
  %value.34.off3051 = add i64 %value.343312, -97
  %339 = icmp ult i64 %value.34.off3051, 6
  %or.cond3198 = or i1 %338, %339
  %value.34.off3052 = add i64 %value.343312, -65
  %340 = icmp ult i64 %value.34.off3052, 6
  %or.cond3200 = or i1 %or.cond3198, %340
  br i1 %or.cond3200, label %if.then1860, label %for.inc1872

if.then1860:                                      ; preds = %for.body1842
  %value.34.tr = trunc i64 %value.343312 to i32
  %sh_prom1862 = and i32 %value.34.tr, 7
  %shl1863 = shl i32 1, %sh_prom1862
  %shr1864 = lshr i64 %value.343312, 3
  %and1865 = and i64 %shr1864, 31
  %arrayidx1867 = getelementptr inbounds [32 x i8]* %335, i64 0, i64 %and1865
  %341 = load i8* %arrayidx1867, align 1, !tbaa !1
  %conv18683053 = zext i8 %341 to i32
  %or1869 = or i32 %conv18683053, %shl1863
  %conv1870 = trunc i32 %or1869 to i8
  store i8 %conv1870, i8* %arrayidx1867, align 1, !tbaa !1
  br label %for.inc1872

for.inc1872:                                      ; preds = %for.body1842, %if.then1860
  %inc1873 = add i64 %value.343312, 1
  %exitcond3348 = icmp eq i64 %inc1873, 256
  br i1 %exitcond3348, label %if.then1944, label %for.body1842

sw.bb1876:                                        ; preds = %if.then572
  %flags1877 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %342 = load i32* %flags1877, align 4, !tbaa !3
  %and1878 = and i32 %342, 2048
  %cmp1879 = icmp eq i32 %and1878, 0
  br i1 %cmp1879, label %for.cond1888.preheader, label %if.then1881

for.cond1888.preheader:                           ; preds = %sw.bb1876
  %bitmap1915 = getelementptr inbounds %struct.regnode* %call, i64 2
  %343 = bitcast %struct.regnode* %bitmap1915 to [32 x i8]*
  br label %for.body1891

if.then1881:                                      ; preds = %sw.bb1876
  %classflags1882 = getelementptr inbounds %struct.regnode* %call, i64 10
  %344 = bitcast %struct.regnode* %classflags1882 to [4 x i8]*
  %arrayidx1883 = getelementptr inbounds [4 x i8]* %344, i64 0, i64 3
  %345 = load i8* %arrayidx1883, align 1, !tbaa !1
  %or1885 = or i8 %345, 2
  store i8 %or1885, i8* %arrayidx1883, align 1, !tbaa !1
  br label %if.then1944

for.body1891:                                     ; preds = %for.inc1921, %for.cond1888.preheader
  %value.353314 = phi i64 [ 0, %for.cond1888.preheader ], [ %inc1922, %for.inc1921 ]
  %value.35.off = add i64 %value.353314, -48
  %346 = icmp ult i64 %value.35.off, 10
  %value.35.off3047 = add i64 %value.353314, -97
  %347 = icmp ult i64 %value.35.off3047, 6
  %or.cond3202 = or i1 %346, %347
  %value.35.off3048 = add i64 %value.353314, -65
  %348 = icmp ult i64 %value.35.off3048, 6
  %or.cond3204 = or i1 %or.cond3202, %348
  br i1 %or.cond3204, label %for.inc1921, label %if.then1909

if.then1909:                                      ; preds = %for.body1891
  %value.35.tr = trunc i64 %value.353314 to i32
  %sh_prom1911 = and i32 %value.35.tr, 7
  %shl1912 = shl i32 1, %sh_prom1911
  %shr1913 = lshr i64 %value.353314, 3
  %and1914 = and i64 %shr1913, 31
  %arrayidx1916 = getelementptr inbounds [32 x i8]* %343, i64 0, i64 %and1914
  %349 = load i8* %arrayidx1916, align 1, !tbaa !1
  %conv19173049 = zext i8 %349 to i32
  %or1918 = or i32 %conv19173049, %shl1912
  %conv1919 = trunc i32 %or1918 to i8
  store i8 %conv1919, i8* %arrayidx1916, align 1, !tbaa !1
  br label %for.inc1921

for.inc1921:                                      ; preds = %if.then1909, %for.body1891
  %inc1922 = add i64 %value.353314, 1
  %exitcond3349 = icmp eq i64 %inc1922, 256
  br i1 %exitcond3349, label %if.then1944, label %for.body1891

if.end1931:                                       ; preds = %if.then572
  %rx1930 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 2
  %350 = load %struct.regexp** %rx1930, align 8, !tbaa !0
  %351 = bitcast %struct.regexp* %350 to i8*
  call void @Perl_save_destructor_x(void (i8*)* @clear_re, i8* %351) #8
  %352 = load i8** %parse, align 8, !tbaa !0
  %precomp1934 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 1
  %353 = load i8** %precomp1934, align 8, !tbaa !0
  %sub.ptr.lhs.cast1935 = ptrtoint i8* %352 to i64
  %sub.ptr.rhs.cast1936 = ptrtoint i8* %353 to i64
  %sub.ptr.sub1937 = sub i64 %sub.ptr.lhs.cast1935, %sub.ptr.rhs.cast1936
  %conv1938 = trunc i64 %sub.ptr.sub1937 to i32
  %add.ptr1941 = getelementptr inbounds i8* %353, i64 %sub.ptr.sub1937
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([55 x i8]* @.str13, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8]* @.str71, i64 0, i64 0), i32 %conv1938, i8* %353, i8* %add.ptr1941) #8
  br label %if.end1946

if.then1944:                                      ; preds = %for.inc1921, %for.inc1872, %for.inc1823, %for.inc1786, %for.inc1749, %for.inc1703, %for.inc1657, %for.inc1602, %for.inc1547, %for.inc1498, %for.inc1449, %for.inc1409, %for.inc1369, %for.inc1332, %for.inc1295, %for.inc1219, %for.body1132, %for.body1085, %for.inc1066, %for.inc1029, %for.inc992, %for.inc955, %for.body907, %for.body877, %for.inc858, %for.inc815, %for.inc772, %for.inc723, %for.inc674, %for.inc, %if.then583, %if.then631, %if.then683, %if.then732, %if.then781, %if.then824, %if.then867, %if.then897, %if.then927, %if.then964, %if.then1001, %if.then1038, %if.then1075, %if.then1105, %if.then1152, %if.then1228, %if.then1304, %if.then1341, %if.then1378, %if.then1418, %if.then1458, %if.then1507, %if.then1556, %if.then1611, %if.then1666, %if.then1712, %if.then1758, %if.then1795, %if.then1832, %if.then1881
  %what.0.ph = phi i8* [ getelementptr inbounds ([5 x i8]* @.str56, i64 0, i64 0), %if.then583 ], [ getelementptr inbounds ([5 x i8]* @.str56, i64 0, i64 0), %if.then631 ], [ getelementptr inbounds ([6 x i8]* @.str57, i64 0, i64 0), %if.then683 ], [ getelementptr inbounds ([6 x i8]* @.str57, i64 0, i64 0), %if.then732 ], [ getelementptr inbounds ([6 x i8]* @.str58, i64 0, i64 0), %if.then781 ], [ getelementptr inbounds ([6 x i8]* @.str58, i64 0, i64 0), %if.then824 ], [ getelementptr inbounds ([6 x i8]* @.str59, i64 0, i64 0), %if.then867 ], [ getelementptr inbounds ([6 x i8]* @.str59, i64 0, i64 0), %if.then897 ], [ getelementptr inbounds ([6 x i8]* @.str60, i64 0, i64 0), %if.then927 ], [ getelementptr inbounds ([6 x i8]* @.str60, i64 0, i64 0), %if.then964 ], [ getelementptr inbounds ([6 x i8]* @.str61, i64 0, i64 0), %if.then1001 ], [ getelementptr inbounds ([6 x i8]* @.str61, i64 0, i64 0), %if.then1038 ], [ getelementptr inbounds ([6 x i8]* @.str62, i64 0, i64 0), %if.then1075 ], [ getelementptr inbounds ([6 x i8]* @.str62, i64 0, i64 0), %if.then1105 ], [ getelementptr inbounds ([6 x i8]* @.str63, i64 0, i64 0), %if.then1152 ], [ getelementptr inbounds ([6 x i8]* @.str63, i64 0, i64 0), %if.then1228 ], [ getelementptr inbounds ([6 x i8]* @.str64, i64 0, i64 0), %if.then1304 ], [ getelementptr inbounds ([6 x i8]* @.str64, i64 0, i64 0), %if.then1341 ], [ getelementptr inbounds ([6 x i8]* @.str65, i64 0, i64 0), %if.then1378 ], [ getelementptr inbounds ([6 x i8]* @.str65, i64 0, i64 0), %if.then1418 ], [ getelementptr inbounds ([6 x i8]* @.str66, i64 0, i64 0), %if.then1458 ], [ getelementptr inbounds ([6 x i8]* @.str66, i64 0, i64 0), %if.then1507 ], [ getelementptr inbounds ([6 x i8]* @.str67, i64 0, i64 0), %if.then1556 ], [ getelementptr inbounds ([6 x i8]* @.str67, i64 0, i64 0), %if.then1611 ], [ getelementptr inbounds ([10 x i8]* @.str68, i64 0, i64 0), %if.then1666 ], [ getelementptr inbounds ([10 x i8]* @.str68, i64 0, i64 0), %if.then1712 ], [ getelementptr inbounds ([6 x i8]* @.str69, i64 0, i64 0), %if.then1758 ], [ getelementptr inbounds ([6 x i8]* @.str69, i64 0, i64 0), %if.then1795 ], [ getelementptr inbounds ([7 x i8]* @.str70, i64 0, i64 0), %if.then1832 ], [ getelementptr inbounds ([7 x i8]* @.str70, i64 0, i64 0), %if.then1881 ], [ getelementptr inbounds ([5 x i8]* @.str56, i64 0, i64 0), %for.inc ], [ getelementptr inbounds ([5 x i8]* @.str56, i64 0, i64 0), %for.inc674 ], [ getelementptr inbounds ([6 x i8]* @.str57, i64 0, i64 0), %for.inc723 ], [ getelementptr inbounds ([6 x i8]* @.str57, i64 0, i64 0), %for.inc772 ], [ getelementptr inbounds ([6 x i8]* @.str58, i64 0, i64 0), %for.inc815 ], [ getelementptr inbounds ([6 x i8]* @.str58, i64 0, i64 0), %for.inc858 ], [ getelementptr inbounds ([6 x i8]* @.str59, i64 0, i64 0), %for.body877 ], [ getelementptr inbounds ([6 x i8]* @.str59, i64 0, i64 0), %for.body907 ], [ getelementptr inbounds ([6 x i8]* @.str60, i64 0, i64 0), %for.inc955 ], [ getelementptr inbounds ([6 x i8]* @.str60, i64 0, i64 0), %for.inc992 ], [ getelementptr inbounds ([6 x i8]* @.str61, i64 0, i64 0), %for.inc1029 ], [ getelementptr inbounds ([6 x i8]* @.str61, i64 0, i64 0), %for.inc1066 ], [ getelementptr inbounds ([6 x i8]* @.str62, i64 0, i64 0), %for.body1085 ], [ getelementptr inbounds ([6 x i8]* @.str62, i64 0, i64 0), %for.body1132 ], [ getelementptr inbounds ([6 x i8]* @.str63, i64 0, i64 0), %for.inc1219 ], [ getelementptr inbounds ([6 x i8]* @.str63, i64 0, i64 0), %for.inc1295 ], [ getelementptr inbounds ([6 x i8]* @.str64, i64 0, i64 0), %for.inc1332 ], [ getelementptr inbounds ([6 x i8]* @.str64, i64 0, i64 0), %for.inc1369 ], [ getelementptr inbounds ([6 x i8]* @.str65, i64 0, i64 0), %for.inc1409 ], [ getelementptr inbounds ([6 x i8]* @.str65, i64 0, i64 0), %for.inc1449 ], [ getelementptr inbounds ([6 x i8]* @.str66, i64 0, i64 0), %for.inc1498 ], [ getelementptr inbounds ([6 x i8]* @.str66, i64 0, i64 0), %for.inc1547 ], [ getelementptr inbounds ([6 x i8]* @.str67, i64 0, i64 0), %for.inc1602 ], [ getelementptr inbounds ([6 x i8]* @.str67, i64 0, i64 0), %for.inc1657 ], [ getelementptr inbounds ([10 x i8]* @.str68, i64 0, i64 0), %for.inc1703 ], [ getelementptr inbounds ([10 x i8]* @.str68, i64 0, i64 0), %for.inc1749 ], [ getelementptr inbounds ([6 x i8]* @.str69, i64 0, i64 0), %for.inc1786 ], [ getelementptr inbounds ([6 x i8]* @.str69, i64 0, i64 0), %for.inc1823 ], [ getelementptr inbounds ([7 x i8]* @.str70, i64 0, i64 0), %for.inc1872 ], [ getelementptr inbounds ([7 x i8]* @.str70, i64 0, i64 0), %for.inc1921 ]
  %yesno.0.ph = phi i32 [ 43, %if.then583 ], [ 33, %if.then631 ], [ 43, %if.then683 ], [ 33, %if.then732 ], [ 43, %if.then781 ], [ 33, %if.then824 ], [ 43, %if.then867 ], [ 33, %if.then897 ], [ 43, %if.then927 ], [ 33, %if.then964 ], [ 43, %if.then1001 ], [ 33, %if.then1038 ], [ 43, %if.then1075 ], [ 33, %if.then1105 ], [ 43, %if.then1152 ], [ 33, %if.then1228 ], [ 43, %if.then1304 ], [ 33, %if.then1341 ], [ 43, %if.then1378 ], [ 33, %if.then1418 ], [ 43, %if.then1458 ], [ 33, %if.then1507 ], [ 43, %if.then1556 ], [ 33, %if.then1611 ], [ 43, %if.then1666 ], [ 33, %if.then1712 ], [ 43, %if.then1758 ], [ 33, %if.then1795 ], [ 43, %if.then1832 ], [ 33, %if.then1881 ], [ 43, %for.inc ], [ 33, %for.inc674 ], [ 43, %for.inc723 ], [ 33, %for.inc772 ], [ 43, %for.inc815 ], [ 33, %for.inc858 ], [ 43, %for.body877 ], [ 33, %for.body907 ], [ 43, %for.inc955 ], [ 33, %for.inc992 ], [ 43, %for.inc1029 ], [ 33, %for.inc1066 ], [ 43, %for.body1085 ], [ 33, %for.body1132 ], [ 43, %for.inc1219 ], [ 33, %for.inc1295 ], [ 43, %for.inc1332 ], [ 33, %for.inc1369 ], [ 43, %for.inc1409 ], [ 33, %for.inc1449 ], [ 43, %for.inc1498 ], [ 33, %for.inc1547 ], [ 43, %for.inc1602 ], [ 33, %for.inc1657 ], [ 43, %for.inc1703 ], [ 33, %for.inc1749 ], [ 43, %for.inc1786 ], [ 33, %for.inc1823 ], [ 43, %for.inc1872 ], [ 33, %for.inc1921 ]
  call void (%struct.sv*, i8*, ...)* @Perl_sv_catpvf(%struct.sv* %listsv.0, i8* getelementptr inbounds ([14 x i8]* @.str72, i64 0, i64 0), i32 %yesno.0.ph, i8* %what.0.ph) #8
  br label %if.end1946

if.end1946:                                       ; preds = %if.then572, %if.end1931, %if.then1944
  %flags1947 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %354 = load i32* %flags1947, align 4, !tbaa !3
  %and1948 = and i32 %354, 2048
  %cmp1949 = icmp eq i32 %and1948, 0
  br i1 %cmp1949, label %while.cond, label %if.then1951

if.then1951:                                      ; preds = %if.end1946
  %flags1952 = getelementptr inbounds %struct.regnode* %call, i64 0, i32 0
  %355 = load i8* %flags1952, align 1, !tbaa !1
  %or1954 = or i8 %355, 8
  store i8 %or1954, i8* %flags1952, align 1, !tbaa !1
  br label %while.cond

if.end1958:                                       ; preds = %land.lhs.true2.i, %land.lhs.true.i3209, %if.else198.i, %while.end183.i, %if.else166.i, %if.then152.i, %if.then34.i, %land.lhs.true105, %if.end140, %land.lhs.true455, %cond.end100, %sw.bb357, %sw.bb358, %sw.bb359, %sw.bb360, %sw.bb361, %sw.bb362, %if.else400, %if.end391, %sw.bb407, %sw.bb421, %lor.lhs.false447, %land.lhs.true451, %if.then467, %sw.default, %if.end481
  %value.43220 = phi i64 [ 91, %if.end481 ], [ %value.1, %sw.default ], [ %value.1, %if.then467 ], [ %value.1, %land.lhs.true451 ], [ %value.1, %lor.lhs.false447 ], [ %call425, %sw.bb421 ], [ %xor, %sw.bb407 ], [ %call397, %if.end391 ], [ %call403, %if.else400 ], [ 7, %sw.bb362 ], [ 27, %sw.bb361 ], [ 8, %sw.bb360 ], [ 12, %sw.bb359 ], [ 9, %sw.bb358 ], [ 13, %sw.bb357 ], [ %value.0, %cond.end100 ], [ %value.1, %land.lhs.true455 ], [ 10, %if.end140 ], [ 91, %land.lhs.true105 ], [ 91, %if.then34.i ], [ 91, %if.then152.i ], [ 91, %if.else166.i ], [ 91, %while.end183.i ], [ 91, %if.else198.i ], [ 91, %land.lhs.true.i3209 ], [ 91, %land.lhs.true2.i ]
  %tobool1959 = icmp eq i64 %range.1, 0
  br i1 %tobool1959, label %if.else1983, label %if.then1960

if.then1960:                                      ; preds = %if.end1958
  %cmp1961 = icmp sgt i64 %prevvalue.1, %value.43220
  br i1 %cmp1961, label %if.then1963, label %if.end2066

if.then1963:                                      ; preds = %if.then1960
  %356 = load i8** %parse, align 8, !tbaa !0
  %precomp1966 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 1
  %357 = load i8** %precomp1966, align 8, !tbaa !0
  %sub.ptr.lhs.cast1967 = ptrtoint i8* %356 to i64
  %sub.ptr.rhs.cast1968 = ptrtoint i8* %357 to i64
  %sub.ptr.sub1969 = sub i64 %sub.ptr.lhs.cast1967, %sub.ptr.rhs.cast1968
  %sub.ptr.rhs.cast1972 = ptrtoint i8* %rangebegin.1. to i64
  %sub.ptr.sub1973 = sub i64 %sub.ptr.lhs.cast1967, %sub.ptr.rhs.cast1972
  %conv1978 = trunc i64 %sub.ptr.sub1969 to i32
  %add.ptr1981 = getelementptr inbounds i8* %357, i64 %sub.ptr.sub1969
  call void (i8*, ...)* @S_re_croak2(i8* getelementptr inbounds ([25 x i8]* @.str73, i64 0, i64 0), i64 %sub.ptr.sub1973, i64 %sub.ptr.sub1973, i8* %rangebegin.1., i32 %conv1978, i8* %357, i8* %add.ptr1981) #9
  br label %if.end2066

if.else1983:                                      ; preds = %if.end1958, %if.end568, %if.then494
  %need_class.23241 = phi i8 [ 1, %if.then494 ], [ 1, %if.end568 ], [ %need_class.1, %if.end1958 ]
  %value.432203240 = phi i64 [ %value.43227, %if.then494 ], [ %value.43227, %if.end568 ], [ %value.43220, %if.end1958 ]
  %cmp48232213238 = phi i1 [ true, %if.then494 ], [ true, %if.end568 ], [ false, %if.end1958 ]
  %358 = load i8** %parse, align 8, !tbaa !0
  %359 = load i8* %358, align 1, !tbaa !1
  %cmp1986 = icmp eq i8 %359, 45
  br i1 %cmp1986, label %land.lhs.true1988, label %if.end2066

land.lhs.true1988:                                ; preds = %if.else1983
  %add.ptr1990 = getelementptr inbounds i8* %358, i64 1
  %360 = load i8** %end, align 8, !tbaa !0
  %cmp1992 = icmp ult i8* %add.ptr1990, %360
  br i1 %cmp1992, label %land.lhs.true1994, label %if.end2066

land.lhs.true1994:                                ; preds = %land.lhs.true1988
  %361 = load i8* %add.ptr1990, align 1, !tbaa !1
  %cmp1998 = icmp eq i8 %361, 93
  br i1 %cmp1998, label %if.end2066, label %if.then2000

if.then2000:                                      ; preds = %land.lhs.true1994
  store i8* %add.ptr1990, i8** %parse, align 8, !tbaa !0
  br i1 %cmp48232213238, label %if.then2005, label %while.cond

if.then2005:                                      ; preds = %if.then2000
  %362 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings2006 = getelementptr inbounds %struct.cop* %362, i64 0, i32 14
  %363 = load %struct.sv** %cop_warnings2006, align 8, !tbaa !0
  %cmp2007 = icmp eq %struct.sv* %363, null
  br i1 %cmp2007, label %lor.lhs.false2025, label %land.lhs.true2009

land.lhs.true2009:                                ; preds = %if.then2005
  %364 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings2010 = getelementptr inbounds %struct.cop* %364, i64 0, i32 14
  %365 = load %struct.sv** %cop_warnings2010, align 8, !tbaa !0
  %cmp2011 = icmp eq %struct.sv* %365, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp2011, label %lor.lhs.false2025, label %land.lhs.true2013

land.lhs.true2013:                                ; preds = %land.lhs.true2009
  %366 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings2014 = getelementptr inbounds %struct.cop* %366, i64 0, i32 14
  %367 = load %struct.sv** %cop_warnings2014, align 8, !tbaa !0
  %cmp2015 = icmp eq %struct.sv* %367, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp2015, label %if.then2033, label %lor.lhs.false2017

lor.lhs.false2017:                                ; preds = %land.lhs.true2013
  %368 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings2018 = getelementptr inbounds %struct.cop* %368, i64 0, i32 14
  %369 = load %struct.sv** %cop_warnings2018, align 8, !tbaa !0
  %sv_any2019 = getelementptr inbounds %struct.sv* %369, i64 0, i32 0
  %370 = load i8** %sv_any2019, align 8, !tbaa !0
  %xpv_pv2020 = bitcast i8* %370 to i8**
  %371 = load i8** %xpv_pv2020, align 8, !tbaa !0
  %arrayidx2021 = getelementptr inbounds i8* %371, i64 5
  %372 = load i8* %arrayidx2021, align 1, !tbaa !1
  %and2023 = and i8 %372, 1
  %tobool2024 = icmp eq i8 %and2023, 0
  br i1 %tobool2024, label %lor.lhs.false2025, label %if.then2033

lor.lhs.false2025:                                ; preds = %lor.lhs.false2017, %land.lhs.true2009, %if.then2005
  %373 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings2026 = getelementptr inbounds %struct.cop* %373, i64 0, i32 14
  %374 = load %struct.sv** %cop_warnings2026, align 8, !tbaa !0
  %cmp2027 = icmp eq %struct.sv* %374, null
  br i1 %cmp2027, label %land.lhs.true2029, label %if.end2052

land.lhs.true2029:                                ; preds = %lor.lhs.false2025
  %375 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and2031 = and i8 %375, 1
  %tobool2032 = icmp eq i8 %and2031, 0
  br i1 %tobool2032, label %if.end2052, label %if.then2033

if.then2033:                                      ; preds = %lor.lhs.false2017, %land.lhs.true2029, %land.lhs.true2013
  %376 = load i8** %parse, align 8, !tbaa !0
  %precomp2036 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 1
  %377 = load i8** %precomp2036, align 8, !tbaa !0
  %sub.ptr.lhs.cast2037 = ptrtoint i8* %376 to i64
  %sub.ptr.rhs.cast2038 = ptrtoint i8* %377 to i64
  %sub.ptr.sub2039 = sub i64 %sub.ptr.lhs.cast2037, %sub.ptr.rhs.cast2038
  %sub.ptr.rhs.cast2042 = ptrtoint i8* %rangebegin.1. to i64
  %sub.ptr.sub2043 = sub i64 %sub.ptr.lhs.cast2037, %sub.ptr.rhs.cast2042
  %conv2048 = trunc i64 %sub.ptr.sub2039 to i32
  %add.ptr2051 = getelementptr inbounds i8* %377, i64 %sub.ptr.sub2039
  call void (i32, i8*, ...)* @Perl_warner(i32 20, i8* getelementptr inbounds ([75 x i8]* @.str54, i64 0, i64 0), i64 %sub.ptr.sub2043, i64 %sub.ptr.sub2043, i8* %rangebegin.1., i32 %conv2048, i8* %377, i8* %add.ptr2051) #8
  br label %if.end2052

if.end2052:                                       ; preds = %land.lhs.true2029, %if.then2033, %lor.lhs.false2025
  %378 = load %struct.regnode** %emit, align 8, !tbaa !0
  %cmp2054 = icmp eq %struct.regnode* %378, @PL_regdummy
  br i1 %cmp2054, label %while.cond, label %if.then2056

if.then2056:                                      ; preds = %if.end2052
  %379 = getelementptr inbounds %struct.regnode* %call, i64 3, i32 1
  %380 = load i8* %379, align 1, !tbaa !1
  %or2060 = or i8 %380, 32
  store i8 %or2060, i8* %379, align 1, !tbaa !1
  br label %while.cond

if.end2066:                                       ; preds = %land.lhs.true1994, %land.lhs.true1988, %if.else1983, %if.then1960, %if.then1963
  %need_class.23242 = phi i8 [ %need_class.1, %if.then1963 ], [ %need_class.1, %if.then1960 ], [ %need_class.23241, %if.else1983 ], [ %need_class.23241, %land.lhs.true1988 ], [ %need_class.23241, %land.lhs.true1994 ]
  %value.432203239 = phi i64 [ %value.43220, %if.then1963 ], [ %value.43220, %if.then1960 ], [ %value.432203240, %if.else1983 ], [ %value.432203240, %land.lhs.true1988 ], [ %value.432203240, %land.lhs.true1994 ]
  %prevvalue.2 = phi i64 [ %prevvalue.1, %if.then1963 ], [ %prevvalue.1, %if.then1960 ], [ %value.432203240, %if.else1983 ], [ %value.432203240, %land.lhs.true1988 ], [ %value.432203240, %land.lhs.true1994 ]
  %381 = load %struct.regnode** %emit, align 8, !tbaa !0
  %cmp2068 = icmp eq %struct.regnode* %381, @PL_regdummy
  br i1 %cmp2068, label %while.cond, label %if.then2070

if.then2070:                                      ; preds = %if.end2066
  %cmp2071 = icmp slt i64 %prevvalue.2, 256
  br i1 %cmp2071, label %if.then2073, label %if.end2097

if.then2073:                                      ; preds = %if.then2070
  %cmp2074 = icmp ugt i64 %value.432203239, 255
  %cond2079 = select i1 %cmp2074, i64 255, i64 %value.432203239
  %cmp20813248 = icmp sgt i64 %prevvalue.2, %cond2079
  br i1 %cmp20813248, label %if.end2097, label %for.body2083.lr.ph

for.body2083.lr.ph:                               ; preds = %if.then2073
  %bitmap2089 = getelementptr inbounds %struct.regnode* %call, i64 2
  %382 = bitcast %struct.regnode* %bitmap2089 to [32 x i8]*
  br label %for.body2083

for.body2083:                                     ; preds = %for.body2083, %for.body2083.lr.ph
  %i.03249 = phi i64 [ %prevvalue.2, %for.body2083.lr.ph ], [ %inc2095, %for.body2083 ]
  %i.0.tr = trunc i64 %i.03249 to i32
  %sh_prom2085 = and i32 %i.0.tr, 7
  %shl2086 = shl i32 1, %sh_prom2085
  %shr20873043 = lshr i64 %i.03249, 3
  %and2088 = and i64 %shr20873043, 31
  %arrayidx2090 = getelementptr inbounds [32 x i8]* %382, i64 0, i64 %and2088
  %383 = load i8* %arrayidx2090, align 1, !tbaa !1
  %conv20913044 = zext i8 %383 to i32
  %or2092 = or i32 %conv20913044, %shl2086
  %conv2093 = trunc i32 %or2092 to i8
  store i8 %conv2093, i8* %arrayidx2090, align 1, !tbaa !1
  %inc2095 = add nsw i64 %i.03249, 1
  %cmp2081 = icmp slt i64 %i.03249, %cond2079
  br i1 %cmp2081, label %for.body2083, label %if.end2097

if.end2097:                                       ; preds = %if.then2073, %for.body2083, %if.then2070
  %cmp2098 = icmp ugt i64 %value.432203239, 255
  br i1 %cmp2098, label %if.then2104, label %lor.lhs.false2100

lor.lhs.false2100:                                ; preds = %if.end2097
  %384 = load i32* %utf8, align 4, !tbaa !3
  %cmp2102 = icmp eq i32 %384, 0
  br i1 %cmp2102, label %while.cond, label %if.then2104

if.then2104:                                      ; preds = %lor.lhs.false2100, %if.end2097
  %flags2105 = getelementptr inbounds %struct.regnode* %call, i64 0, i32 0
  %385 = load i8* %flags2105, align 1, !tbaa !1
  %or2107 = or i8 %385, 32
  store i8 %or2107, i8* %flags2105, align 1, !tbaa !1
  %cmp2109 = icmp ult i64 %prevvalue.2, %value.432203239
  br i1 %cmp2109, label %if.then2111, label %if.else2112

if.then2111:                                      ; preds = %if.then2104
  call void (%struct.sv*, i8*, ...)* @Perl_sv_catpvf(%struct.sv* %listsv.0, i8* getelementptr inbounds ([13 x i8]* @.str74, i64 0, i64 0), i64 %prevvalue.2, i64 %value.432203239) #8
  br label %while.cond

if.else2112:                                      ; preds = %if.then2104
  %cmp2113 = icmp eq i64 %prevvalue.2, %value.432203239
  br i1 %cmp2113, label %if.then2115, label %while.cond

if.then2115:                                      ; preds = %if.else2112
  call void (%struct.sv*, i8*, ...)* @Perl_sv_catpvf(%struct.sv* %listsv.0, i8* getelementptr inbounds ([7 x i8]* @.str75, i64 0, i64 0), i64 %value.432203239) #8
  %flags2116 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %386 = load i32* %flags2116, align 4, !tbaa !3
  %and2117 = and i32 %386, 16384
  %cmp2118 = icmp eq i32 %and2117, 0
  br i1 %cmp2118, label %while.cond, label %if.then2120

if.then2120:                                      ; preds = %if.then2115
  %arraydecay2121 = getelementptr inbounds [7 x i8]* %foldbuf, i64 0, i64 0
  %call2122 = call i64 @Perl_to_uni_fold(i64 %value.432203239, i8* %arraydecay2121, i64* %foldlen) #8
  %cmp2123 = icmp eq i64 %call2122, %value.432203239
  br i1 %cmp2123, label %if.end2178, label %if.then2125

if.then2125:                                      ; preds = %if.then2120
  %387 = load i64* %foldlen, align 8, !tbaa !5
  %cmp2126 = icmp ult i64 %call2122, 128
  br i1 %cmp2126, label %cond.end2163, label %cond.false2129

cond.false2129:                                   ; preds = %if.then2125
  %cmp2130 = icmp ult i64 %call2122, 2048
  br i1 %cmp2130, label %cond.end2163, label %cond.false2133

cond.false2133:                                   ; preds = %cond.false2129
  %cmp2134 = icmp ult i64 %call2122, 65536
  br i1 %cmp2134, label %cond.end2163, label %cond.false2137

cond.false2137:                                   ; preds = %cond.false2133
  %cmp2138 = icmp ult i64 %call2122, 2097152
  br i1 %cmp2138, label %cond.end2163, label %cond.false2141

cond.false2141:                                   ; preds = %cond.false2137
  %cmp2142 = icmp ult i64 %call2122, 67108864
  br i1 %cmp2142, label %cond.end2163, label %cond.false2145

cond.false2145:                                   ; preds = %cond.false2141
  %cmp2146 = icmp ult i64 %call2122, 2147483648
  br i1 %cmp2146, label %cond.end2163, label %cond.false2149

cond.false2149:                                   ; preds = %cond.false2145
  %cmp2150 = icmp ult i64 %call2122, 68719476736
  %phitmp3042 = select i1 %cmp2150, i64 7, i64 13
  br label %cond.end2163

cond.end2163:                                     ; preds = %cond.false2129, %cond.false2137, %cond.false2149, %cond.false2145, %cond.false2141, %cond.false2133, %if.then2125
  %cond2164 = phi i64 [ 1, %if.then2125 ], [ 2, %cond.false2129 ], [ 3, %cond.false2133 ], [ 4, %cond.false2137 ], [ 5, %cond.false2141 ], [ %phitmp3042, %cond.false2149 ], [ 6, %cond.false2145 ]
  %cmp2166 = icmp eq i64 %387, %cond2164
  br i1 %cmp2166, label %if.then2168, label %if.else2169

if.then2168:                                      ; preds = %cond.end2163
  call void (%struct.sv*, i8*, ...)* @Perl_sv_catpvf(%struct.sv* %listsv.0, i8* getelementptr inbounds ([7 x i8]* @.str75, i64 0, i64 0), i64 %call2122) #8
  br label %if.end2178

if.else2169:                                      ; preds = %cond.end2163
  %tobool2170 = icmp eq %struct.av* %unicode_alternate.1, null
  br i1 %tobool2170, label %if.then2171, label %if.end2173

if.then2171:                                      ; preds = %if.else2169
  %call2172 = call %struct.av* @Perl_newAV() #8
  %.pre = load i64* %foldlen, align 8, !tbaa !5
  br label %if.end2173

if.end2173:                                       ; preds = %if.else2169, %if.then2171
  %388 = phi i64 [ %387, %if.else2169 ], [ %.pre, %if.then2171 ]
  %unicode_alternate.2 = phi %struct.av* [ %unicode_alternate.1, %if.else2169 ], [ %call2172, %if.then2171 ]
  %call2175 = call %struct.sv* @Perl_newSVpvn(i8* %arraydecay2121, i64 %388) #8
  %sv_flags = getelementptr inbounds %struct.sv* %call2175, i64 0, i32 2
  %389 = load i32* %sv_flags, align 4, !tbaa !3
  %or2176 = or i32 %389, 536870912
  store i32 %or2176, i32* %sv_flags, align 4, !tbaa !3
  call void @Perl_av_push(%struct.av* %unicode_alternate.2, %struct.sv* %call2175) #8
  br label %if.end2178

if.end2178:                                       ; preds = %if.then2120, %if.then2168, %if.end2173
  %unicode_alternate.3 = phi %struct.av* [ %unicode_alternate.1, %if.then2168 ], [ %unicode_alternate.2, %if.end2173 ], [ %unicode_alternate.1, %if.then2120 ]
  switch i64 %value.432203239, label %while.cond [
    i64 962, label %if.then2181
    i64 931, label %if.then2185
  ]

if.then2181:                                      ; preds = %if.end2178
  call void (%struct.sv*, i8*, ...)* @Perl_sv_catpvf(%struct.sv* %listsv.0, i8* getelementptr inbounds ([7 x i8]* @.str75, i64 0, i64 0), i64 931) #8
  call void (%struct.sv*, i8*, ...)* @Perl_sv_catpvf(%struct.sv* %listsv.0, i8* getelementptr inbounds ([7 x i8]* @.str75, i64 0, i64 0), i64 963) #8
  br label %while.cond

if.then2185:                                      ; preds = %if.end2178
  call void (%struct.sv*, i8*, ...)* @Perl_sv_catpvf(%struct.sv* %listsv.0, i8* getelementptr inbounds ([7 x i8]* @.str75, i64 0, i64 0), i64 963) #8
  br label %while.cond

while.end2193:                                    ; preds = %land.rhs, %while.cond
  %tobool2194 = icmp eq i8 %need_class.0, 0
  br i1 %tobool2194, label %while.end2193.if.end2212thread-pre-split_crit_edge, label %if.then2195

while.end2193.if.end2212thread-pre-split_crit_edge: ; preds = %while.end2193
  %.pr3244.pre = load %struct.regnode** %emit, align 8, !tbaa !0
  br label %if.end2212

if.then2195:                                      ; preds = %while.end2193
  %flags2196 = getelementptr inbounds %struct.regnode* %call, i64 0, i32 0
  %390 = load i8* %flags2196, align 1, !tbaa !1
  %or2198 = or i8 %390, -128
  store i8 %or2198, i8* %flags2196, align 1, !tbaa !1
  %391 = load %struct.regnode** %emit, align 8, !tbaa !0
  %cmp2201 = icmp eq %struct.regnode* %391, @PL_regdummy
  br i1 %cmp2201, label %if.end2212.thread, label %if.else2208

if.end2212.thread:                                ; preds = %if.then2195
  %size2204 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 12
  %392 = load i32* %size2204, align 4, !tbaa !3
  %add2206 = add i32 %392, 1
  store i32 %add2206, i32* %size2204, align 4, !tbaa !3
  br label %if.end2305

if.else2208:                                      ; preds = %if.then2195
  %add.ptr2210 = getelementptr inbounds %struct.regnode* %391, i64 1
  store %struct.regnode* %add.ptr2210, %struct.regnode** %emit, align 8, !tbaa !0
  br label %if.end2212

if.end2212:                                       ; preds = %while.end2193.if.end2212thread-pre-split_crit_edge, %if.else2208
  %393 = phi %struct.regnode* [ %add.ptr2210, %if.else2208 ], [ %.pr3244.pre, %while.end2193.if.end2212thread-pre-split_crit_edge ]
  %cmp2214 = icmp eq %struct.regnode* %393, @PL_regdummy
  br i1 %cmp2214, label %if.end2305, label %land.lhs.true2216

land.lhs.true2216:                                ; preds = %if.end2212
  %flags2217 = getelementptr inbounds %struct.regnode* %call, i64 0, i32 0
  %394 = load i8* %flags2217, align 1, !tbaa !1
  %and2219 = and i8 %394, -5
  %cmp2220 = icmp eq i8 %and2219, 2
  br i1 %cmp2220, label %for.cond2223.preheader, label %if.end2262

for.cond2223.preheader:                           ; preds = %land.lhs.true2216
  %bitmap2229 = getelementptr inbounds %struct.regnode* %call, i64 2
  %395 = bitcast %struct.regnode* %bitmap2229 to [32 x i8]*
  br label %for.body2226

for.body2226:                                     ; preds = %for.inc2255, %for.cond2223.preheader
  %value.363247 = phi i64 [ 0, %for.cond2223.preheader ], [ %inc2256, %for.inc2255 ]
  %shr2227 = lshr i64 %value.363247, 3
  %and2228 = and i64 %shr2227, 31
  %arrayidx2230 = getelementptr inbounds [32 x i8]* %395, i64 0, i64 %and2228
  %396 = load i8* %arrayidx2230, align 1, !tbaa !1
  %conv2231 = sext i8 %396 to i32
  %value.36.tr = trunc i64 %value.363247 to i32
  %sh_prom2233 = and i32 %value.36.tr, 7
  %shl2234 = shl i32 1, %sh_prom2233
  %and2235 = and i32 %conv2231, %shl2234
  %tobool2236 = icmp eq i32 %and2235, 0
  br i1 %tobool2236, label %for.inc2255, label %if.then2237

if.then2237:                                      ; preds = %for.body2226
  %arrayidx2238 = getelementptr inbounds [0 x i8]* @PL_fold, i64 0, i64 %value.363247
  %397 = load i8* %arrayidx2238, align 1, !tbaa !1
  %conv2239 = zext i8 %397 to i64
  %cmp2240 = icmp eq i64 %conv2239, %value.363247
  br i1 %cmp2240, label %for.inc2255, label %if.then2242

if.then2242:                                      ; preds = %if.then2237
  %conv2239.tr = zext i8 %397 to i32
  %sh_prom2244 = and i32 %conv2239.tr, 7
  %shl2245 = shl i32 1, %sh_prom2244
  %shr2246 = lshr i64 %conv2239, 3
  %arrayidx2249 = getelementptr inbounds [32 x i8]* %395, i64 0, i64 %shr2246
  %398 = load i8* %arrayidx2249, align 1, !tbaa !1
  %conv22503039 = zext i8 %398 to i32
  %or2251 = or i32 %conv22503039, %shl2245
  %conv2252 = trunc i32 %or2251 to i8
  store i8 %conv2252, i8* %arrayidx2249, align 1, !tbaa !1
  br label %for.inc2255

for.inc2255:                                      ; preds = %if.then2237, %for.body2226, %if.then2242
  %inc2256 = add i64 %value.363247, 1
  %exitcond3318 = icmp eq i64 %inc2256, 256
  br i1 %exitcond3318, label %for.end2257, label %for.body2226

for.end2257:                                      ; preds = %for.inc2255
  %399 = load i8* %flags2217, align 1, !tbaa !1
  %and2260 = and i8 %399, -3
  store i8 %and2260, i8* %flags2217, align 1, !tbaa !1
  %.pre3361 = load %struct.regnode** %emit, align 8, !tbaa !0
  br label %if.end2262

if.end2262:                                       ; preds = %for.end2257, %land.lhs.true2216
  %400 = phi %struct.regnode* [ %.pre3361, %for.end2257 ], [ %393, %land.lhs.true2216 ]
  %cmp2264 = icmp eq %struct.regnode* %400, @PL_regdummy
  %tobool2268 = icmp eq i8 %optimize_invert.0, 0
  %or.cond3205 = or i1 %cmp2264, %tobool2268
  br i1 %or.cond3205, label %if.end2289, label %land.lhs.true2269

land.lhs.true2269:                                ; preds = %if.end2262
  %flags2270 = getelementptr inbounds %struct.regnode* %call, i64 0, i32 0
  %401 = load i8* %flags2270, align 1, !tbaa !1
  %cmp2273 = icmp eq i8 %401, 4
  br i1 %cmp2273, label %for.cond2276.preheader, label %if.end2289

for.cond2276.preheader:                           ; preds = %land.lhs.true2269
  %bitmap2280 = getelementptr inbounds %struct.regnode* %call, i64 2
  %402 = bitcast %struct.regnode* %bitmap2280 to [32 x i8]*
  br label %for.body2279

for.body2279:                                     ; preds = %for.body2279, %for.cond2276.preheader
  %value.373246 = phi i64 [ 0, %for.cond2276.preheader ], [ %inc2286, %for.body2279 ]
  %arrayidx2281 = getelementptr inbounds [32 x i8]* %402, i64 0, i64 %value.373246
  %403 = load i8* %arrayidx2281, align 1, !tbaa !1
  %xor2283 = xor i8 %403, -1
  store i8 %xor2283, i8* %arrayidx2281, align 1, !tbaa !1
  %inc2286 = add i64 %value.373246, 1
  %exitcond = icmp eq i64 %inc2286, 32
  br i1 %exitcond, label %for.end2287, label %for.body2279

for.end2287:                                      ; preds = %for.body2279
  store i8 64, i8* %flags2270, align 1, !tbaa !1
  %.pr3245.pre = load %struct.regnode** %emit, align 8, !tbaa !0
  br label %if.end2289

if.end2289:                                       ; preds = %for.end2287, %land.lhs.true2269, %if.end2262
  %404 = phi %struct.regnode* [ %400, %if.end2262 ], [ %400, %land.lhs.true2269 ], [ %.pr3245.pre, %for.end2287 ]
  %cmp2291 = icmp eq %struct.regnode* %404, @PL_regdummy
  br i1 %cmp2291, label %if.end2305, label %if.then2293

if.then2293:                                      ; preds = %if.end2289
  %call2294 = call %struct.av* @Perl_newAV() #8
  %call2295 = call %struct.sv** @Perl_av_store(%struct.av* %call2294, i32 0, %struct.sv* %listsv.0) #8
  %call2296 = call %struct.sv** @Perl_av_store(%struct.av* %call2294, i32 1, %struct.sv* null) #8
  %405 = bitcast %struct.av* %unicode_alternate.0 to %struct.sv*
  %call2297 = call %struct.sv** @Perl_av_store(%struct.av* %call2294, i32 2, %struct.sv* %405) #8
  %406 = bitcast %struct.av* %call2294 to %struct.sv*
  %call2298 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %406) #8
  %call2299 = call fastcc i32 @S_add_data(%struct.RExC_state_t* %pRExC_state, i32 1, i8* getelementptr inbounds ([2 x i8]* @.str76, i64 0, i64 0)) #9
  %conv2300 = sext i32 %call2299 to i64
  %407 = bitcast %struct.sv* %call2298 to i8*
  %rx2301 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 2
  %408 = load %struct.regexp** %rx2301, align 8, !tbaa !0
  %data = getelementptr inbounds %struct.regexp* %408, i64 0, i32 5
  %409 = load %struct.reg_data** %data, align 8, !tbaa !0
  %arrayidx2303 = getelementptr inbounds %struct.reg_data* %409, i64 0, i32 2, i64 %conv2300
  store i8* %407, i8** %arrayidx2303, align 8, !tbaa !0
  %arg1 = getelementptr inbounds %struct.regnode* %call, i64 1
  %410 = bitcast %struct.regnode* %arg1 to i32*
  store i32 %call2299, i32* %410, align 4, !tbaa !3
  br label %if.end2305

if.end2305:                                       ; preds = %if.end2212, %if.end2212.thread, %if.then2293, %if.end2289
  ret %struct.regnode* %call
}
