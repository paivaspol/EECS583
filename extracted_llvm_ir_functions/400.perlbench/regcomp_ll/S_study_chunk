define internal fastcc i32 @S_study_chunk(%struct.RExC_state_t* %pRExC_state, %struct.regnode** nocapture %scanp, i32* nocapture %deltap, %struct.regnode* %last, %struct.scan_data_t* %data, i32 %flags) #0 {
entry:
  %scan = alloca %struct.regnode*, align 8
  %data_fake = alloca %struct.scan_data_t, align 8
  %and_with = alloca %struct.regnode_charclass_class, align 4
  %accum = alloca %struct.regnode_charclass_class, align 8
  %deltanext = alloca i32, align 4
  %fake = alloca i32, align 4
  %this_class = alloca %struct.regnode_charclass_class, align 8
  %deltanext780 = alloca i32, align 4
  %this_class782 = alloca %struct.regnode_charclass_class, align 8
  %nxt11115 = alloca %struct.regnode*, align 8
  %l1216 = alloca i64, align 8
  %deltanext2351 = alloca i32, align 4
  %fake2353 = alloca i32, align 4
  %nscan = alloca %struct.regnode*, align 8
  %intrnl = alloca %struct.regnode_charclass_class, align 8
  %0 = load %struct.regnode** %scanp, align 8, !tbaa !0
  store %struct.regnode* %0, %struct.regnode** %scan, align 8, !tbaa !0
  %and = and i32 %flags, 1024
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %flags1 = getelementptr inbounds %struct.scan_data_t* %data, i64 0, i32 14
  %1 = load i32* %flags1, align 4, !tbaa !3
  %and2 = and i32 %1, 64
  %tobool3 = icmp ne i32 %and2, 0
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i1 [ false, %entry ], [ %tobool3, %land.rhs ]
  %land.ext = zext i1 %2 to i32
  %type = getelementptr inbounds %struct.regnode* %0, i64 0, i32 1
  %3 = load i8* %type, align 1, !tbaa !1
  %cmp = icmp eq i8 %3, 45
  br i1 %cmp, label %cond.end.thread, label %cond.end

cond.end.thread:                                  ; preds = %land.end
  %arg1 = getelementptr inbounds %struct.regnode* %0, i64 1
  %4 = bitcast %struct.regnode* %arg1 to i32*
  %5 = load i32* %4, align 4, !tbaa !3
  %6 = bitcast %struct.scan_data_t* %data_fake to i8*
  call void @llvm.lifetime.start(i64 104, i8* %6) #3
  %7 = getelementptr inbounds %struct.regnode_charclass_class* %and_with, i64 0, i32 0
  call void @llvm.lifetime.start(i64 44, i8* %7) #3
  br label %land.lhs.true.lr.ph

cond.end:                                         ; preds = %land.end
  %8 = bitcast %struct.scan_data_t* %data_fake to i8*
  call void @llvm.lifetime.start(i64 104, i8* %8) #3
  %9 = getelementptr inbounds %struct.regnode_charclass_class* %and_with, i64 0, i32 0
  call void @llvm.lifetime.start(i64 44, i8* %9) #3
  %tobool53593 = icmp eq %struct.regnode* %0, null
  br i1 %tobool53593, label %finish, label %land.lhs.true.lr.ph

land.lhs.true.lr.ph:                              ; preds = %cond.end.thread, %cond.end
  %10 = phi i8* [ %7, %cond.end.thread ], [ %9, %cond.end ]
  %11 = phi i8* [ %6, %cond.end.thread ], [ %8, %cond.end ]
  %cond3672 = phi i32 [ %5, %cond.end.thread ], [ 0, %cond.end ]
  %utf8 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 17
  %tobool647 = icmp eq %struct.scan_data_t* %data, null
  %start_class742 = getelementptr inbounds %struct.scan_data_t* %data, i64 0, i32 17
  %pos_min652 = getelementptr inbounds %struct.scan_data_t* %data, i64 0, i32 2
  %flags2322 = getelementptr inbounds %struct.scan_data_t* %data, i64 0, i32 14
  %last_closep2506 = getelementptr inbounds %struct.scan_data_t* %data, i64 0, i32 16
  %flags1.i = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 0
  %longest_float2533 = getelementptr inbounds %struct.scan_data_t* %data, i64 0, i32 11
  %longest2534 = getelementptr inbounds %struct.scan_data_t* %data, i64 0, i32 8
  %12 = getelementptr inbounds %struct.regnode_charclass_class* %intrnl, i64 0, i32 0
  %flags2355 = getelementptr inbounds %struct.scan_data_t* %data_fake, i64 0, i32 14
  %tobool2356 = icmp ne %struct.scan_data_t* %data, null
  %whilem_c2358 = getelementptr inbounds %struct.scan_data_t* %data, i64 0, i32 15
  %whilem_c2359 = getelementptr inbounds %struct.scan_data_t* %data_fake, i64 0, i32 15
  %last_closep2361 = getelementptr inbounds %struct.scan_data_t* %data_fake, i64 0, i32 16
  %emit2413 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 8
  %parse2420 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 5
  %precomp2421 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 1
  %rx2417 = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 2
  %13 = bitcast %struct.regnode_charclass_class* %intrnl to i64*
  %type.i3502 = getelementptr inbounds %struct.regnode_charclass_class* %intrnl, i64 0, i32 1
  %arraydecay.i.i3503 = getelementptr inbounds %struct.regnode_charclass_class* %intrnl, i64 0, i32 5, i64 0
  %14 = bitcast i8* %arraydecay.i.i3503 to i32*
  %15 = getelementptr inbounds %struct.regnode_charclass_class* %intrnl, i64 0, i32 4, i64 0
  %start_class2376 = getelementptr inbounds %struct.scan_data_t* %data_fake, i64 0, i32 17
  %16 = getelementptr inbounds %struct.regnode_charclass_class* %this_class782, i64 0, i32 0
  %17 = bitcast %struct.regnode_charclass_class* %this_class782 to i64*
  %type.i3476 = getelementptr inbounds %struct.regnode_charclass_class* %this_class782, i64 0, i32 1
  %arraydecay.i.i3477 = getelementptr inbounds %struct.regnode_charclass_class* %this_class782, i64 0, i32 5, i64 0
  %18 = bitcast i8* %arraydecay.i.i3477 to i32*
  %19 = getelementptr inbounds %struct.regnode_charclass_class* %this_class782, i64 0, i32 4, i64 0
  %tobool866.not3436 = xor i1 %tobool2356, true
  %whilem_seen = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 6
  %last_end1201 = getelementptr inbounds %struct.scan_data_t* %data, i64 0, i32 5
  %pos_delta1375 = getelementptr inbounds %struct.scan_data_t* %data, i64 0, i32 3
  %last_found1384 = getelementptr inbounds %struct.scan_data_t* %data, i64 0, i32 4
  %last_start_min1401 = getelementptr inbounds %struct.scan_data_t* %data, i64 0, i32 6
  %last_start_max1423 = getelementptr inbounds %struct.scan_data_t* %data, i64 0, i32 7
  %end = getelementptr inbounds %struct.RExC_state_t* %pRExC_state, i64 0, i32 4
  %20 = getelementptr inbounds %struct.regnode_charclass_class* %accum, i64 0, i32 0
  %21 = bitcast %struct.regnode_charclass_class* %accum to i64*
  %type.i = getelementptr inbounds %struct.regnode_charclass_class* %accum, i64 0, i32 1
  %arraydecay.i.i = getelementptr inbounds %struct.regnode_charclass_class* %accum, i64 0, i32 5, i64 0
  %22 = bitcast i8* %arraydecay.i.i to i32*
  %23 = getelementptr inbounds %struct.regnode_charclass_class* %accum, i64 0, i32 4, i64 0
  %24 = getelementptr inbounds %struct.regnode_charclass_class* %this_class, i64 0, i32 0
  %25 = bitcast %struct.regnode_charclass_class* %this_class to i64*
  %type.i3470 = getelementptr inbounds %struct.regnode_charclass_class* %this_class, i64 0, i32 1
  %arraydecay.i.i3471 = getelementptr inbounds %struct.regnode_charclass_class* %this_class, i64 0, i32 5, i64 0
  %26 = bitcast i8* %arraydecay.i.i3471 to i32*
  %27 = getelementptr inbounds %struct.regnode_charclass_class* %this_class, i64 0, i32 4, i64 0
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %while.cond.backedge.land.lhs.true_crit_edge, %land.lhs.true.lr.ph
  %28 = phi i8 [ %3, %land.lhs.true.lr.ph ], [ %.pre3661, %while.cond.backedge.land.lhs.true_crit_edge ]
  %.pre.pre = phi %struct.regnode* [ %0, %land.lhs.true.lr.ph ], [ %466, %while.cond.backedge.land.lhs.true_crit_edge ]
  %flags.addr.03601 = phi i32 [ %flags, %land.lhs.true.lr.ph ], [ %flags.addr.0.be, %while.cond.backedge.land.lhs.true_crit_edge ]
  %min.03600 = phi i32 [ 0, %land.lhs.true.lr.ph ], [ %min.0.be, %while.cond.backedge.land.lhs.true_crit_edge ]
  %pars.03598 = phi i32 [ 0, %land.lhs.true.lr.ph ], [ %pars.0.be, %while.cond.backedge.land.lhs.true_crit_edge ]
  %delta.03597 = phi i32 [ 0, %land.lhs.true.lr.ph ], [ %delta.0.be, %while.cond.backedge.land.lhs.true_crit_edge ]
  %is_inf.03596 = phi i32 [ %land.ext, %land.lhs.true.lr.ph ], [ %is_inf.0.be, %while.cond.backedge.land.lhs.true_crit_edge ]
  %is_inf_internal.03595 = phi i32 [ 0, %land.lhs.true.lr.ph ], [ %is_inf_internal.0.be, %while.cond.backedge.land.lhs.true_crit_edge ]
  %is_par.03594 = phi i32 [ %cond3672, %land.lhs.true.lr.ph ], [ %is_par.0.be, %while.cond.backedge.land.lhs.true_crit_edge ]
  %cmp8 = icmp ne i8 %28, 0
  %cmp11 = icmp ult %struct.regnode* %.pre.pre, %last
  %or.cond3425 = and i1 %cmp8, %cmp11
  br i1 %or.cond3425, label %while.body, label %finish

while.body:                                       ; preds = %land.lhs.true
  %idxprom = zext i8 %28 to i64
  %29 = add i64 %idxprom, -33
  %cmp17 = icmp ult i64 %29, 3
  br i1 %cmp17, label %if.then, label %if.end167

if.then:                                          ; preds = %while.body
  %call = call %struct.regnode* @Perl_regnext(%struct.regnode* %.pre.pre) #9
  %tobool223565 = icmp eq %struct.regnode* %call, null
  br i1 %tobool223565, label %while.end, label %while.cond21.outer.while.cond21.outer.split_crit_edge.lr.ph

while.cond21.outer.while.cond21.outer.split_crit_edge.lr.ph: ; preds = %if.then
  %str_len = getelementptr inbounds %struct.regnode* %.pre.pre, i64 0, i32 0
  %30 = load i8* %str_len, align 1, !tbaa !1
  %conv19 = zext i8 %30 to i64
  %sub = add i64 %conv19, 3
  %div = lshr i64 %sub, 2
  %add20 = add i64 %div, 1
  %add.ptr = getelementptr inbounds %struct.regnode* %.pre.pre, i64 %add20
  %cmp573570 = icmp ugt %struct.regnode* %call, %add.ptr
  br label %while.cond21.outer.while.cond21.outer.split_crit_edge

while.cond21.outer.while.cond21.outer.split_crit_edge: ; preds = %while.cond21.outer.while.cond21.outer.split_crit_edge.lr.ph, %while.cond21.outer.backedge
  %cmp573577 = phi i1 [ %cmp573570, %while.cond21.outer.while.cond21.outer.split_crit_edge.lr.ph ], [ %cmp57, %while.cond21.outer.backedge ]
  %31 = phi %struct.regnode* [ %.pre.pre, %while.cond21.outer.while.cond21.outer.split_crit_edge.lr.ph ], [ %38, %while.cond21.outer.backedge ]
  %call.pn = phi %struct.regnode* [ %call, %while.cond21.outer.while.cond21.outer.split_crit_edge.lr.ph ], [ %n.0.ph.be, %while.cond21.outer.backedge ]
  %stringok.0.ph3571 = phi i32 [ 1, %while.cond21.outer.while.cond21.outer.split_crit_edge.lr.ph ], [ %stringok.1, %while.cond21.outer.backedge ]
  %type243573 = getelementptr inbounds %struct.regnode* %call.pn, i64 0, i32 1
  %type343574 = getelementptr inbounds %struct.regnode* %31, i64 0, i32 1
  %next_off3575 = getelementptr inbounds %struct.regnode* %call.pn, i64 0, i32 2
  %next_off423576 = getelementptr inbounds %struct.regnode* %31, i64 0, i32 2
  br label %land.lhs.true23

land.lhs.true23:                                  ; preds = %if.else, %while.cond21.outer.while.cond21.outer.split_crit_edge
  %stringok.0 = phi i32 [ 0, %if.else ], [ %stringok.0.ph3571, %while.cond21.outer.while.cond21.outer.split_crit_edge ]
  %32 = load i8* %type243573, align 1, !tbaa !1
  %idxprom25 = zext i8 %32 to i64
  %33 = lshr i64 2305843215372124160, %idxprom25
  %34 = and i64 %33, 1
  %cmp28 = icmp eq i64 %34, 0
  br i1 %cmp28, label %lor.lhs.false, label %land.lhs.true38

lor.lhs.false:                                    ; preds = %land.lhs.true23
  %tobool30 = icmp eq i32 %stringok.0, 0
  br i1 %tobool30, label %while.end, label %land.lhs.true31

land.lhs.true31:                                  ; preds = %lor.lhs.false
  %35 = load i8* %type343574, align 1, !tbaa !1
  %cmp36 = icmp eq i8 %32, %35
  br i1 %cmp36, label %land.lhs.true38, label %while.end

land.lhs.true38:                                  ; preds = %land.lhs.true31, %land.lhs.true23
  %36 = load i16* %next_off3575, align 2, !tbaa !4
  %tobool40 = icmp eq i16 %36, 0
  br i1 %tobool40, label %while.end, label %land.rhs41

land.rhs41:                                       ; preds = %land.lhs.true38
  %conv39 = zext i16 %36 to i32
  %37 = load i16* %next_off423576, align 2, !tbaa !4
  %conv43 = zext i16 %37 to i32
  %add46 = add nsw i32 %conv43, %conv39
  %cmp47 = icmp slt i32 %add46, 32767
  br i1 %cmp47, label %while.body51, label %while.end

while.body51:                                     ; preds = %land.rhs41
  %cmp54 = icmp eq i8 %32, 37
  %or.cond3426 = or i1 %cmp54, %cmp573577
  %stringok.1 = select i1 %or.cond3426, i32 0, i32 %stringok.0
  br i1 %cmp28, label %if.else, label %if.then66

if.then66:                                        ; preds = %while.body51
  %add71 = add i16 %37, %36
  store i16 %add71, i16* %next_off423576, align 2, !tbaa !4
  %add.ptr73 = getelementptr inbounds %struct.regnode* %call.pn, i64 1
  %call74 = call %struct.regnode* @Perl_regnext(%struct.regnode* %call.pn) #9
  br label %while.cond21.outer.backedge

while.cond21.outer.backedge:                      ; preds = %if.then66, %if.end86
  %38 = phi %struct.regnode* [ %31, %if.then66 ], [ %.pre3648, %if.end86 ]
  %n.0.ph.be = phi %struct.regnode* [ %call74, %if.then66 ], [ %call79, %if.end86 ]
  %next.0.ph.be = phi %struct.regnode* [ %add.ptr73, %if.then66 ], [ %add.ptr105, %if.end86 ]
  %tobool22 = icmp eq %struct.regnode* %n.0.ph.be, null
  %cmp57 = icmp ugt %struct.regnode* %n.0.ph.be, %next.0.ph.be
  br i1 %tobool22, label %while.end, label %while.cond21.outer.while.cond21.outer.split_crit_edge

if.else:                                          ; preds = %while.body51
  %tobool75 = icmp eq i32 %stringok.1, 0
  br i1 %tobool75, label %land.lhs.true23, label %if.then76

if.then76:                                        ; preds = %if.else
  %str_len77 = getelementptr inbounds %struct.regnode* %31, i64 0, i32 0
  %39 = load i8* %str_len77, align 1, !tbaa !1
  %conv78 = zext i8 %39 to i32
  %str_len80 = getelementptr inbounds %struct.regnode* %call.pn, i64 0, i32 0
  %40 = load i8* %str_len80, align 1, !tbaa !1
  %conv81 = zext i8 %40 to i32
  %add82 = add nsw i32 %conv81, %conv78
  %cmp83 = icmp sgt i32 %add82, 255
  br i1 %cmp83, label %while.end, label %if.end86

if.end86:                                         ; preds = %if.then76
  %call79 = call %struct.regnode* @Perl_regnext(%struct.regnode* %call.pn) #9
  %add91 = add i16 %37, %36
  store i16 %add91, i16* %next_off423576, align 2, !tbaa !4
  %41 = load i8* %str_len80, align 1, !tbaa !1
  %str_len95 = getelementptr inbounds %struct.regnode* %31, i64 0, i32 0
  %42 = load i8* %str_len95, align 1, !tbaa !1
  %add97 = add i8 %42, %41
  store i8 %add97, i8* %str_len95, align 1, !tbaa !1
  %43 = load i8* %str_len80, align 1, !tbaa !1
  %conv100 = zext i8 %43 to i64
  %sub102 = add i64 %conv100, 3
  %div103 = lshr i64 %sub102, 2
  %add104 = add i64 %div103, 1
  %add.ptr105 = getelementptr inbounds %struct.regnode* %call.pn, i64 %add104
  %44 = load %struct.regnode** %scan, align 8, !tbaa !0
  %arraydecay = getelementptr inbounds %struct.regnode* %44, i64 1, i32 0
  %idx.ext = zext i8 %39 to i64
  %add.ptr106 = getelementptr inbounds i8* %arraydecay, i64 %idx.ext
  %arraydecay108 = getelementptr inbounds %struct.regnode* %call.pn, i64 1, i32 0
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %add.ptr106, i8* %arraydecay108, i64 %conv100, i32 1, i1 false)
  %.pre3648 = load %struct.regnode** %scan, align 8, !tbaa !0
  br label %while.cond21.outer.backedge

while.end:                                        ; preds = %if.then76, %while.cond21.outer.backedge, %if.then, %land.rhs41, %land.lhs.true31, %lor.lhs.false, %land.lhs.true38
  %45 = phi %struct.regnode* [ %.pre.pre, %if.then ], [ %38, %while.cond21.outer.backedge ], [ %31, %land.rhs41 ], [ %31, %land.lhs.true31 ], [ %31, %lor.lhs.false ], [ %31, %land.lhs.true38 ], [ %31, %if.then76 ]
  %46 = load i32* %utf8, align 4, !tbaa !3
  %cmp113 = icmp eq i32 %46, 0
  br i1 %cmp113, label %if.end167, label %land.lhs.true115

land.lhs.true115:                                 ; preds = %while.end
  %type116 = getelementptr inbounds %struct.regnode* %45, i64 0, i32 1
  %47 = load i8* %type116, align 1, !tbaa !1
  %cmp118 = icmp eq i8 %47, 34
  br i1 %cmp118, label %land.lhs.true120, label %if.end167

land.lhs.true120:                                 ; preds = %land.lhs.true115
  %str_len121 = getelementptr inbounds %struct.regnode* %45, i64 0, i32 0
  %48 = load i8* %str_len121, align 1, !tbaa !1
  %cmp123 = icmp ugt i8 %48, 5
  br i1 %cmp123, label %if.then125, label %if.end167

if.then125:                                       ; preds = %land.lhs.true120
  %arraydecay127 = getelementptr inbounds %struct.regnode* %45, i64 1, i32 0
  %idx.ext130 = zext i8 %48 to i64
  %add.ptr131.sum = add i64 %idx.ext130, -1
  %add.ptr132 = getelementptr inbounds i8* %arraydecay127, i64 %add.ptr131.sum
  %add.ptr132.sum = add i64 %idx.ext130, -5
  %add.ptr133 = getelementptr inbounds i8* %arraydecay127, i64 %add.ptr132.sum
  %cmp1363528 = icmp sgt i64 %add.ptr132.sum, 2
  br i1 %cmp1363528, label %land.rhs138.lr.ph, label %if.end167.loopexit

land.rhs138.lr.ph:                                ; preds = %if.then125
  %add.ptr135 = getelementptr inbounds i8* %arraydecay127, i64 2
  br label %land.rhs138

land.rhs138:                                      ; preds = %land.rhs138.lr.ph, %for.inc
  %min.13530 = phi i32 [ %min.03600, %land.rhs138.lr.ph ], [ %min.2, %for.inc ]
  %s.03529 = phi i8* [ %add.ptr135, %land.rhs138.lr.ph ], [ %add.ptr165, %for.inc ]
  %call139 = call i8* @Perl_ninstr(i8* %s.03529, i8* %add.ptr132, i8* getelementptr inbounds ([5 x i8]* @.str96, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str96, i64 0, i64 3)) #8
  %tobool140 = icmp eq i8* %call139, null
  br i1 %tobool140, label %if.end167.loopexit, label %for.body

for.body:                                         ; preds = %land.rhs138
  %arrayidx143 = getelementptr inbounds i8* %call139, i64 -1
  %49 = load i8* %arrayidx143, align 1, !tbaa !1
  switch i8 %49, label %for.inc [
    i8 -71, label %land.lhs.true147
    i8 -123, label %land.lhs.true157
  ]

land.lhs.true147:                                 ; preds = %for.body
  %arrayidx148 = getelementptr inbounds i8* %call139, i64 -2
  %50 = load i8* %arrayidx148, align 1, !tbaa !1
  %cmp150 = icmp eq i8 %50, -50
  br i1 %cmp150, label %if.then162, label %for.inc

land.lhs.true157:                                 ; preds = %for.body
  %arrayidx158 = getelementptr inbounds i8* %call139, i64 -2
  %51 = load i8* %arrayidx158, align 1, !tbaa !1
  %cmp160 = icmp eq i8 %51, -49
  br i1 %cmp160, label %if.then162, label %for.inc

if.then162:                                       ; preds = %land.lhs.true157, %land.lhs.true147
  %sub163 = add nsw i32 %min.13530, -4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %land.lhs.true147, %land.lhs.true157, %if.then162
  %min.2 = phi i32 [ %sub163, %if.then162 ], [ %min.13530, %land.lhs.true157 ], [ %min.13530, %land.lhs.true147 ], [ %min.13530, %for.body ]
  %add.ptr165 = getelementptr inbounds i8* %call139, i64 4
  %cmp136 = icmp ult i8* %add.ptr165, %add.ptr133
  br i1 %cmp136, label %land.rhs138, label %if.end167.loopexit

if.end167.loopexit:                               ; preds = %for.inc, %land.rhs138, %if.then125
  %min.1.lcssa = phi i32 [ %min.03600, %if.then125 ], [ %min.13530, %land.rhs138 ], [ %min.2, %for.inc ]
  %.pre3649 = load %struct.regnode** %scan, align 8, !tbaa !0
  br label %if.end167

if.end167:                                        ; preds = %while.end, %if.end167.loopexit, %land.lhs.true115, %land.lhs.true120, %while.body
  %52 = phi %struct.regnode* [ %45, %land.lhs.true120 ], [ %45, %land.lhs.true115 ], [ %.pre.pre, %while.body ], [ %.pre3649, %if.end167.loopexit ], [ %45, %while.end ]
  %min.3 = phi i32 [ %min.03600, %land.lhs.true120 ], [ %min.03600, %land.lhs.true115 ], [ %min.03600, %while.body ], [ %min.1.lcssa, %if.end167.loopexit ], [ %min.03600, %while.end ]
  %type168 = getelementptr inbounds %struct.regnode* %52, i64 0, i32 1
  %53 = load i8* %type168, align 1, !tbaa !1
  %cmp170 = icmp eq i8 %53, 43
  br i1 %cmp170, label %if.else614, label %if.then172

if.then172:                                       ; preds = %if.end167
  %idxprom174 = zext i8 %53 to i64
  %54 = lshr i64 1277896394266378240, %idxprom174
  %55 = and i64 %54, 1
  %tobool177 = icmp ne i64 %55, 0
  %cond178 = select i1 %tobool177, i32 2147483647, i32 65535
  br i1 %tobool177, label %cond.true184, label %cond.false186

cond.true184:                                     ; preds = %if.then172
  %arg1185 = getelementptr inbounds %struct.regnode* %52, i64 1
  %56 = bitcast %struct.regnode* %arg1185 to i32*
  %57 = load i32* %56, align 4, !tbaa !3
  br label %while.cond192

cond.false186:                                    ; preds = %if.then172
  %next_off187 = getelementptr inbounds %struct.regnode* %52, i64 0, i32 2
  %58 = load i16* %next_off187, align 2, !tbaa !4
  %conv188 = zext i16 %58 to i32
  br label %while.cond192

while.cond192:                                    ; preds = %cond.true184, %cond.false186, %land.rhs214
  %n191.0 = phi %struct.regnode* [ %call193, %land.rhs214 ], [ %52, %cond.false186 ], [ %52, %cond.true184 ]
  %off.0 = phi i32 [ %add215, %land.rhs214 ], [ %conv188, %cond.false186 ], [ %57, %cond.true184 ]
  %call193 = call %struct.regnode* @Perl_regnext(%struct.regnode* %n191.0) #9
  %tobool194 = icmp eq %struct.regnode* %call193, null
  br i1 %tobool194, label %while.end222, label %land.lhs.true195

land.lhs.true195:                                 ; preds = %while.cond192
  %type196 = getelementptr inbounds %struct.regnode* %call193, i64 0, i32 1
  %59 = load i8* %type196, align 1, !tbaa !1
  %idxprom197 = zext i8 %59 to i64
  %60 = lshr i64 2305843215372124160, %idxprom197
  %61 = and i64 %60, 1
  %cmp200 = icmp eq i64 %61, 0
  br i1 %cmp200, label %lor.lhs.false206, label %land.lhs.true202

land.lhs.true202:                                 ; preds = %land.lhs.true195
  %next_off203 = getelementptr inbounds %struct.regnode* %call193, i64 0, i32 2
  %62 = load i16* %next_off203, align 2, !tbaa !4
  %conv204 = zext i16 %62 to i32
  %tobool205 = icmp eq i16 %62, 0
  br i1 %tobool205, label %lor.lhs.false206, label %land.rhs214

lor.lhs.false206:                                 ; preds = %land.lhs.true202, %land.lhs.true195
  %cmp209 = icmp eq i8 %59, 55
  br i1 %cmp209, label %land.lhs.true211, label %while.end222

land.lhs.true211:                                 ; preds = %lor.lhs.false206
  %arg1212 = getelementptr inbounds %struct.regnode* %call193, i64 1
  %63 = bitcast %struct.regnode* %arg1212 to i32*
  %64 = load i32* %63, align 4, !tbaa !3
  %tobool213 = icmp eq i32 %64, 0
  br i1 %tobool213, label %while.end222, label %land.rhs214

land.rhs214:                                      ; preds = %land.lhs.true202, %land.lhs.true211
  %noff.0 = phi i32 [ %conv204, %land.lhs.true202 ], [ %64, %land.lhs.true211 ]
  %add215 = add nsw i32 %noff.0, %off.0
  %cmp216 = icmp slt i32 %add215, %cond178
  br i1 %cmp216, label %while.cond192, label %while.end222

while.end222:                                     ; preds = %land.lhs.true211, %while.cond192, %lor.lhs.false206, %land.rhs214
  %tobool226 = icmp eq i64 %55, 0
  br i1 %tobool226, label %if.else229, label %if.then227

if.then227:                                       ; preds = %while.end222
  %arg1228 = getelementptr inbounds %struct.regnode* %52, i64 1
  %65 = bitcast %struct.regnode* %arg1228 to i32*
  store i32 %off.0, i32* %65, align 4, !tbaa !3
  br label %if.end233

if.else229:                                       ; preds = %while.end222
  %conv230 = trunc i32 %off.0 to i16
  %next_off231 = getelementptr inbounds %struct.regnode* %52, i64 0, i32 2
  store i16 %conv230, i16* %next_off231, align 2, !tbaa !4
  br label %if.end233

if.end233:                                        ; preds = %if.then227, %if.else229
  %conv235 = zext i8 %53 to i32
  switch i8 %53, label %if.else614 [
    i8 31, label %if.then253
    i8 56, label %if.then253
    i8 53, label %if.then253
    i8 52, label %if.then253
    i8 33, label %if.then417
  ]

if.then253:                                       ; preds = %if.end233, %if.end233, %if.end233, %if.end233
  %call254 = call %struct.regnode* @Perl_regnext(%struct.regnode* %52) #9
  %type257 = getelementptr inbounds %struct.regnode* %call254, i64 0, i32 1
  %66 = load i8* %type257, align 1, !tbaa !1
  %cmp259 = icmp eq i8 %66, %53
  %cmp262 = icmp eq i8 %53, 53
  %cmp265 = icmp eq i8 %53, 52
  br i1 %cmp259, label %if.then267, label %switch.early.test

switch.early.test:                                ; preds = %if.then253
  switch i8 %53, label %if.else408 [
    i8 53, label %if.then267
    i8 52, label %if.then267
    i8 56, label %if.then405
  ]

if.then267:                                       ; preds = %switch.early.test, %switch.early.test, %if.then253
  call void @llvm.lifetime.start(i64 44, i8* %20) #3
  %and268 = and i32 %flags.addr.03601, 1024
  %tobool269 = icmp ne i32 %and268, 0
  br i1 %tobool269, label %if.then270, label %if.end271

if.then270:                                       ; preds = %if.then267
  call fastcc void @S_scan_commit(%struct.RExC_state_t* %pRExC_state, %struct.scan_data_t* %data) #9
  br label %if.end271

if.end271:                                        ; preds = %if.then270, %if.then267
  %and272 = and i32 %flags.addr.03601, 6144
  %tobool273 = icmp ne i32 %and272, 0
  br i1 %tobool273, label %if.then274, label %while.cond276.preheader

if.then274:                                       ; preds = %if.end271
  store i64 0, i64* %21, align 8
  store i8 17, i8* %type.i, align 1, !tbaa !1
  store i32 0, i32* %22, align 8
  call void @llvm.memset.p0i8.i64(i8* %23, i8 -1, i64 32, i32 8, i1 false) #3
  %67 = load i32* %flags1.i, align 4, !tbaa !3
  %and.i.i = and i32 %67, 2048
  %cmp.i.i = icmp eq i32 %and.i.i, 0
  %..i..i = select i1 %cmp.i.i, i8 80, i8 81
  store i8 %..i..i, i8* %20, align 8, !tbaa !1
  br label %while.cond276.preheader

while.cond276.preheader:                          ; preds = %if.then274, %if.end271
  %cmp292 = icmp eq i8 %53, 31
  %and301 = and i32 %flags.addr.03601, 8192
  br label %while.cond276

while.cond276:                                    ; preds = %if.end343, %while.cond276.preheader
  %num.0 = phi i32 [ 0, %while.cond276.preheader ], [ %inc, %if.end343 ]
  %min1.0 = phi i32 [ 2147483647, %while.cond276.preheader ], [ %min1.1, %if.end343 ]
  %max1.0 = phi i32 [ 0, %while.cond276.preheader ], [ %add310.max1.0, %if.end343 ]
  %is_inf_internal.1 = phi i32 [ %is_inf_internal.03595, %while.cond276.preheader ], [ %is_inf_internal.2, %if.end343 ]
  %is_inf.1 = phi i32 [ %is_inf.03596, %while.cond276.preheader ], [ %is_inf.2, %if.end343 ]
  %pars.1 = phi i32 [ %pars.03598, %while.cond276.preheader ], [ %pars.1.inc324, %if.end343 ]
  %68 = load %struct.regnode** %scan, align 8, !tbaa !0
  %type277 = getelementptr inbounds %struct.regnode* %68, i64 0, i32 1
  %69 = load i8* %type277, align 1, !tbaa !1
  %cmp279 = icmp eq i8 %69, %53
  br i1 %cmp279, label %while.body281, label %while.end348

while.body281:                                    ; preds = %while.cond276
  call void @llvm.lifetime.start(i64 44, i8* %24) #3
  %inc = add nsw i32 %num.0, 1
  store i32 0, i32* %flags2355, align 8, !tbaa !3
  br i1 %tobool2356, label %if.then284, label %if.end289

if.then284:                                       ; preds = %while.body281
  %70 = load i32* %whilem_c2358, align 4, !tbaa !3
  store i32 %70, i32* %whilem_c2359, align 4, !tbaa !3
  %71 = load i32** %last_closep2506, align 8, !tbaa !0
  br label %if.end289

if.end289:                                        ; preds = %while.body281, %if.then284
  %storemerge = phi i32* [ %71, %if.then284 ], [ %fake, %while.body281 ]
  store i32* %storemerge, i32** %last_closep2361, align 8, !tbaa !0
  %call290 = call %struct.regnode* @Perl_regnext(%struct.regnode* %68) #9
  %add.ptr291 = getelementptr inbounds %struct.regnode* %68, i64 1
  %add.ptr295 = getelementptr inbounds %struct.regnode* %68, i64 2
  %add.ptr291.add.ptr295 = select i1 %cmp292, %struct.regnode* %add.ptr291, %struct.regnode* %add.ptr295
  store %struct.regnode* %add.ptr291.add.ptr295, %struct.regnode** %scan, align 8, !tbaa !0
  br i1 %tobool273, label %if.then299, label %if.end300

if.then299:                                       ; preds = %if.end289
  store i64 0, i64* %25, align 8
  store i8 17, i8* %type.i3470, align 1, !tbaa !1
  store i32 0, i32* %26, align 8
  call void @llvm.memset.p0i8.i64(i8* %27, i8 -1, i64 32, i32 8, i1 false) #3
  %72 = load i32* %flags1.i, align 4, !tbaa !3
  %and.i.i3473 = and i32 %72, 2048
  %cmp.i.i3474 = icmp eq i32 %and.i.i3473, 0
  %..i.i3475 = select i1 %cmp.i.i3474, i8 80, i8 81
  store i8 %..i.i3475, i8* %24, align 8, !tbaa !1
  store %struct.regnode_charclass_class* %this_class, %struct.regnode_charclass_class** %start_class2376, align 8, !tbaa !0
  br label %if.end300

if.end300:                                        ; preds = %if.then299, %if.end289
  %f.0 = phi i32 [ 2048, %if.then299 ], [ 0, %if.end289 ]
  %73 = or i32 %f.0, %and301
  %call305 = call fastcc i32 @S_study_chunk(%struct.RExC_state_t* %pRExC_state, %struct.regnode** %scan, i32* %deltanext, %struct.regnode* %call290, %struct.scan_data_t* %data_fake, i32 %73) #9
  %cmp306 = icmp sgt i32 %min1.0, %call305
  %min1.1 = select i1 %cmp306, i32 %call305, i32 %min1.0
  %74 = load i32* %deltanext, align 4, !tbaa !3
  %add310 = add nsw i32 %74, %call305
  %cmp311 = icmp slt i32 %max1.0, %add310
  %add310.max1.0 = select i1 %cmp311, i32 %add310, i32 %max1.0
  %cmp316 = icmp eq i32 %74, 2147483647
  %is_inf_internal.2 = select i1 %cmp316, i32 1, i32 %is_inf_internal.1
  %is_inf.2 = select i1 %cmp316, i32 1, i32 %is_inf.1
  store %struct.regnode* %call290, %struct.regnode** %scan, align 8, !tbaa !0
  %75 = bitcast i32* %flags2355 to i64*
  %76 = load i64* %75, align 8
  %77 = trunc i64 %76 to i32
  %and321 = and i32 %77, 384
  %not.tobool322 = icmp ne i32 %and321, 0
  %inc324 = zext i1 %not.tobool322 to i32
  %pars.1.inc324 = add nsw i32 %inc324, %pars.1
  %78 = lshr i64 %76, 32
  %79 = trunc i64 %78 to i32
  br i1 %tobool2356, label %land.lhs.true327, label %if.end339

land.lhs.true327:                                 ; preds = %if.end300
  %and329 = and i32 %77, 512
  %tobool330 = icmp eq i32 %and329, 0
  br i1 %tobool330, label %if.then336, label %if.then331

if.then331:                                       ; preds = %land.lhs.true327
  %80 = load i32* %flags2322, align 4, !tbaa !3
  %or333 = or i32 %80, 512
  store i32 %or333, i32* %flags2322, align 4, !tbaa !3
  br label %if.then336

if.then336:                                       ; preds = %if.then331, %land.lhs.true327
  store i32 %79, i32* %whilem_c2358, align 4, !tbaa !3
  br label %if.end339

if.end339:                                        ; preds = %if.end300, %if.then336
  br i1 %tobool273, label %if.then342, label %if.end343

if.then342:                                       ; preds = %if.end339
  call fastcc void @S_cl_or(%struct.RExC_state_t* %pRExC_state, %struct.regnode_charclass_class* %accum, %struct.regnode_charclass_class* %this_class) #9
  br label %if.end343

if.end343:                                        ; preds = %if.then342, %if.end339
  call void @llvm.lifetime.end(i64 44, i8* %24) #3
  br i1 %cmp265, label %while.end348, label %while.cond276

while.end348:                                     ; preds = %if.end343, %while.cond276
  %num.1 = phi i32 [ %inc, %if.end343 ], [ %num.0, %while.cond276 ]
  %min1.2 = phi i32 [ %min1.1, %if.end343 ], [ %min1.0, %while.cond276 ]
  %max1.2 = phi i32 [ %add310.max1.0, %if.end343 ], [ %max1.0, %while.cond276 ]
  %is_inf_internal.3 = phi i32 [ %is_inf_internal.2, %if.end343 ], [ %is_inf_internal.1, %while.cond276 ]
  %is_inf.3 = phi i32 [ %is_inf.2, %if.end343 ], [ %is_inf.1, %while.cond276 ]
  %pars.3 = phi i32 [ %pars.1.inc324, %if.end343 ], [ %pars.1, %while.cond276 ]
  %cmp352 = icmp slt i32 %num.1, 2
  %or.cond = and i1 %cmp262, %cmp352
  %min1.3 = select i1 %or.cond, i32 0, i32 %min1.2
  br i1 %tobool269, label %if.then358, label %while.end348.if.end368_crit_edge

while.end348.if.end368_crit_edge:                 ; preds = %while.end348
  %sub370.pre = sub nsw i32 %max1.2, %min1.3
  br label %if.end368

if.then358:                                       ; preds = %while.end348
  %81 = load i32* %pos_min652, align 4, !tbaa !3
  %add359 = add nsw i32 %81, %min1.3
  store i32 %add359, i32* %pos_min652, align 4, !tbaa !3
  %sub360 = sub i32 %max1.2, %min1.3
  %82 = load i32* %pos_delta1375, align 4, !tbaa !3
  %add361 = add nsw i32 %sub360, %82
  store i32 %add361, i32* %pos_delta1375, align 4, !tbaa !3
  %cmp362 = icmp eq i32 %max1.2, %min1.3
  %tobool365 = icmp eq i32 %is_inf.3, 0
  %or.cond3427 = and i1 %cmp362, %tobool365
  br i1 %or.cond3427, label %if.end368, label %if.then366

if.then366:                                       ; preds = %if.then358
  store %struct.sv** %longest_float2533, %struct.sv*** %longest2534, align 8, !tbaa !0
  br label %if.end368

if.end368:                                        ; preds = %while.end348.if.end368_crit_edge, %if.then358, %if.then366
  %sub370.pre-phi = phi i32 [ %sub370.pre, %while.end348.if.end368_crit_edge ], [ %sub360, %if.then358 ], [ %sub360, %if.then366 ]
  %add369 = add nsw i32 %min1.3, %min.3
  %add371 = add nsw i32 %sub370.pre-phi, %delta.03597
  %and372 = and i32 %flags.addr.03601, 4096
  %tobool373 = icmp eq i32 %and372, 0
  br i1 %tobool373, label %if.else381, label %if.then374

if.then374:                                       ; preds = %if.end368
  %83 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  call fastcc void @S_cl_or(%struct.RExC_state_t* %pRExC_state, %struct.regnode_charclass_class* %83, %struct.regnode_charclass_class* %accum) #9
  %tobool376 = icmp eq i32 %min1.3, 0
  br i1 %tobool376, label %while.cond.backedge, label %if.then377

if.then377:                                       ; preds = %if.then374
  %84 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  call fastcc void @S_cl_and(%struct.regnode_charclass_class* %84, %struct.regnode_charclass_class* %and_with) #9
  %and379 = and i32 %flags.addr.03601, -6145
  br label %while.cond.backedge

if.else381:                                       ; preds = %if.end368
  %and382 = and i32 %flags.addr.03601, 2048
  %tobool383 = icmp eq i32 %and382, 0
  br i1 %tobool383, label %while.cond.backedge, label %if.then384

if.then384:                                       ; preds = %if.else381
  %tobool385 = icmp eq i32 %min1.3, 0
  %85 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  br i1 %tobool385, label %if.else389, label %if.then386

if.then386:                                       ; preds = %if.then384
  call fastcc void @S_cl_and(%struct.regnode_charclass_class* %85, %struct.regnode_charclass_class* %accum) #9
  %and388 = and i32 %flags.addr.03601, -6145
  br label %while.cond.backedge

if.else389:                                       ; preds = %if.then384
  %86 = getelementptr inbounds %struct.regnode_charclass_class* %85, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %86, i64 44, i32 4, i1 false), !tbaa.struct !6
  %and391 = and i32 %flags.addr.03601, -6145
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %20, i64 44, i32 4, i1 false), !tbaa.struct !6
  %or393 = or i32 %and391, 4096
  %87 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags395 = getelementptr inbounds %struct.regnode_charclass_class* %87, i64 0, i32 0
  %88 = load i8* %flags395, align 1, !tbaa !1
  %or397 = or i8 %88, 16
  store i8 %or397, i8* %flags395, align 1, !tbaa !1
  br label %while.cond.backedge

if.then405:                                       ; preds = %switch.early.test
  %add.ptr407 = getelementptr inbounds %struct.regnode* %52, i64 2
  store %struct.regnode* %add.ptr407, %struct.regnode** %scan, align 8, !tbaa !0
  br label %while.cond.backedge

if.else408:                                       ; preds = %switch.early.test
  %add.ptr406 = getelementptr inbounds %struct.regnode* %52, i64 1
  store %struct.regnode* %add.ptr406, %struct.regnode** %scan, align 8, !tbaa !0
  br label %while.cond.backedge

if.then417:                                       ; preds = %if.end233
  %str_len418 = getelementptr inbounds %struct.regnode* %52, i64 0, i32 0
  %89 = load i8* %str_len418, align 1, !tbaa !1
  %conv419 = zext i8 %89 to i32
  %arraydecay421 = getelementptr inbounds %struct.regnode* %52, i64 1, i32 0
  %90 = load i8* %arraydecay421, align 1, !tbaa !1
  %conv422 = zext i8 %90 to i64
  %91 = load i32* %utf8, align 4, !tbaa !3
  %cmp424 = icmp eq i32 %91, 0
  br i1 %cmp424, label %if.end435, label %if.then426

if.then426:                                       ; preds = %if.then417
  %idx.ext430 = zext i8 %89 to i64
  %add.ptr431 = getelementptr inbounds i8* %arraydecay421, i64 %idx.ext430
  %call432 = call i64 @Perl_utf8_length(i8* %arraydecay421, i8* %add.ptr431) #8
  %conv433 = trunc i64 %call432 to i32
  %call434 = call i64 @Perl_utf8_to_uvchr(i8* %arraydecay421, i64* null) #8
  br label %if.end435

if.end435:                                        ; preds = %if.then417, %if.then426
  %l.0 = phi i32 [ %conv433, %if.then426 ], [ %conv419, %if.then417 ]
  %uc.0 = phi i64 [ %call434, %if.then426 ], [ %conv422, %if.then417 ]
  %add436 = add nsw i32 %l.0, %min.3
  %and437 = and i32 %flags.addr.03601, 1024
  %tobool438 = icmp eq i32 %and437, 0
  br i1 %tobool438, label %if.end503, label %if.then439

if.then439:                                       ; preds = %if.end435
  %92 = load i32* %last_end1201, align 4, !tbaa !3
  %cmp440 = icmp eq i32 %92, -1
  br i1 %cmp440, label %if.then442, label %if.end452

if.then442:                                       ; preds = %if.then439
  %93 = load i32* %pos_min652, align 4, !tbaa !3
  store i32 %93, i32* %last_start_min1401, align 4, !tbaa !3
  %tobool444 = icmp eq i32 %is_inf.03596, 0
  br i1 %tobool444, label %cond.false446, label %cond.end450

cond.false446:                                    ; preds = %if.then442
  %94 = load i32* %pos_delta1375, align 4, !tbaa !3
  %add449 = add nsw i32 %94, %93
  br label %cond.end450

cond.end450:                                      ; preds = %if.then442, %cond.false446
  %cond451 = phi i32 [ %add449, %cond.false446 ], [ 2147483647, %if.then442 ]
  store i32 %cond451, i32* %last_start_max1423, align 4, !tbaa !3
  br label %if.end452

if.end452:                                        ; preds = %if.then439, %cond.end450
  %95 = load %struct.sv** %last_found1384, align 8, !tbaa !0
  %96 = load %struct.regnode** %scan, align 8, !tbaa !0
  %arraydecay454 = getelementptr inbounds %struct.regnode* %96, i64 1, i32 0
  %str_len455 = getelementptr inbounds %struct.regnode* %96, i64 0, i32 0
  %97 = load i8* %str_len455, align 1, !tbaa !1
  %conv456 = zext i8 %97 to i64
  call void @Perl_sv_catpvn_flags(%struct.sv* %95, i8* %arraydecay454, i64 %conv456, i32 2) #8
  %98 = load %struct.sv** %last_found1384, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %98, i64 0, i32 2
  %99 = load i32* %sv_flags, align 4, !tbaa !3
  %and458 = and i32 %99, 536870912
  %tobool459 = icmp eq i32 %and458, 0
  %and462 = and i32 %99, 57344
  %tobool463 = icmp eq i32 %and462, 0
  %or.cond3428 = or i1 %tobool459, %tobool463
  br i1 %or.cond3428, label %if.end487, label %cond.end467

cond.end467:                                      ; preds = %if.end452
  %call465 = call %struct.magic* @Perl_mg_find(%struct.sv* %98, i32 119) #8
  %tobool469 = icmp eq %struct.magic* %call465, null
  br i1 %tobool469, label %if.end487, label %land.lhs.true470

land.lhs.true470:                                 ; preds = %cond.end467
  %mg_len = getelementptr inbounds %struct.magic* %call465, i64 0, i32 7
  %100 = load i32* %mg_len, align 4, !tbaa !3
  %cmp471 = icmp sgt i32 %100, -1
  br i1 %cmp471, label %if.then473, label %if.end487

if.then473:                                       ; preds = %land.lhs.true470
  %101 = load %struct.regnode** %scan, align 8, !tbaa !0
  %arraydecay475 = getelementptr inbounds %struct.regnode* %101, i64 1, i32 0
  %str_len478 = getelementptr inbounds %struct.regnode* %101, i64 0, i32 0
  %102 = load i8* %str_len478, align 1, !tbaa !1
  %idx.ext480 = zext i8 %102 to i64
  %add.ptr481 = getelementptr inbounds i8* %arraydecay475, i64 %idx.ext480
  %call482 = call i64 @Perl_utf8_length(i8* %arraydecay475, i8* %add.ptr481) #8
  %103 = load i32* %mg_len, align 4, !tbaa !3
  %conv4843424 = zext i32 %103 to i64
  %add485 = add i64 %conv4843424, %call482
  %conv486 = trunc i64 %add485 to i32
  store i32 %conv486, i32* %mg_len, align 4, !tbaa !3
  br label %if.end487

if.end487:                                        ; preds = %if.end452, %cond.end467, %if.then473, %land.lhs.true470
  %104 = load i32* %utf8, align 4, !tbaa !3
  %cmp489 = icmp eq i32 %104, 0
  br i1 %cmp489, label %if.end495, label %if.then491

if.then491:                                       ; preds = %if.end487
  %105 = load %struct.sv** %last_found1384, align 8, !tbaa !0
  %sv_flags493 = getelementptr inbounds %struct.sv* %105, i64 0, i32 2
  %106 = load i32* %sv_flags493, align 4, !tbaa !3
  %or494 = or i32 %106, 536870912
  store i32 %or494, i32* %sv_flags493, align 4, !tbaa !3
  br label %if.end495

if.end495:                                        ; preds = %if.end487, %if.then491
  %107 = load i32* %pos_min652, align 4, !tbaa !3
  %add497 = add nsw i32 %107, %l.0
  store i32 %add497, i32* %last_end1201, align 4, !tbaa !3
  store i32 %add497, i32* %pos_min652, align 4, !tbaa !3
  %108 = load i32* %flags2322, align 4, !tbaa !3
  %and502 = and i32 %108, -4
  store i32 %and502, i32* %flags2322, align 4, !tbaa !3
  br label %if.end503

if.end503:                                        ; preds = %if.end435, %if.end495
  %and504 = and i32 %flags.addr.03601, 2048
  %tobool505 = icmp eq i32 %and504, 0
  br i1 %tobool505, label %if.else580, label %if.then506

if.then506:                                       ; preds = %if.end503
  %cmp507 = icmp ugt i64 %uc.0, 255
  %.pre3660.pre = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  br i1 %cmp507, label %if.end546, label %lor.lhs.false509

lor.lhs.false509:                                 ; preds = %if.then506
  %flags511 = getelementptr inbounds %struct.regnode_charclass_class* %.pre3660.pre, i64 0, i32 0
  %109 = load i8* %flags511, align 1, !tbaa !1
  %conv512 = zext i8 %109 to i32
  %and513 = and i32 %conv512, 9
  %tobool514 = icmp eq i32 %and513, 0
  br i1 %tobool514, label %land.lhs.true515, label %if.then553

land.lhs.true515:                                 ; preds = %lor.lhs.false509
  %shr = lshr i64 %uc.0, 3
  %and516 = and i64 %shr, 31
  %arrayidx518 = getelementptr inbounds %struct.regnode_charclass_class* %.pre3660.pre, i64 0, i32 4, i64 %and516
  %110 = load i8* %arrayidx518, align 1, !tbaa !1
  %conv519 = sext i8 %110 to i32
  %uc.0.tr3419 = trunc i64 %uc.0 to i32
  %sh_prom = and i32 %uc.0.tr3419, 7
  %shl = shl i32 1, %sh_prom
  %and521 = and i32 %conv519, %shl
  %tobool522 = icmp eq i32 %and521, 0
  br i1 %tobool522, label %land.lhs.true523, label %if.then553

land.lhs.true523:                                 ; preds = %land.lhs.true515
  %and527 = and i32 %conv512, 2
  %tobool528 = icmp eq i32 %and527, 0
  br i1 %tobool528, label %if.end546, label %lor.lhs.false529

lor.lhs.false529:                                 ; preds = %land.lhs.true523
  %arrayidx530 = getelementptr inbounds [0 x i8]* @PL_fold, i64 0, i64 %uc.0
  %111 = load i8* %arrayidx530, align 1, !tbaa !1
  %conv531 = zext i8 %111 to i32
  %shr5323422 = lshr i32 %conv531, 3
  %idxprom5343423 = zext i32 %shr5323422 to i64
  %arrayidx537 = getelementptr inbounds %struct.regnode_charclass_class* %.pre3660.pre, i64 0, i32 4, i64 %idxprom5343423
  %112 = load i8* %arrayidx537, align 1, !tbaa !1
  %conv538 = sext i8 %112 to i32
  %and541 = and i32 %conv531, 7
  %shl542 = shl i32 1, %and541
  %and543 = and i32 %shl542, %conv538
  %tobool544 = icmp eq i32 %and543, 0
  br i1 %tobool544, label %if.end546, label %if.then553

if.end546:                                        ; preds = %if.then506, %land.lhs.true523, %lor.lhs.false529
  %arraydecay548 = getelementptr inbounds %struct.regnode_charclass_class* %.pre3660.pre, i64 0, i32 5, i64 0
  %113 = bitcast i8* %arraydecay548 to i32*
  store i32 0, i32* %113, align 1
  %114 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arraydecay551 = getelementptr inbounds %struct.regnode_charclass_class* %114, i64 0, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* %arraydecay551, i8 0, i64 32, i32 1, i1 false)
  br label %if.end565

if.then553:                                       ; preds = %lor.lhs.false509, %land.lhs.true515, %lor.lhs.false529
  %arraydecay5483676 = getelementptr inbounds %struct.regnode_charclass_class* %.pre3660.pre, i64 0, i32 5, i64 0
  %115 = bitcast i8* %arraydecay5483676 to i32*
  store i32 0, i32* %115, align 1
  %116 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arraydecay5513677 = getelementptr inbounds %struct.regnode_charclass_class* %116, i64 0, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* %arraydecay5513677, i8 0, i64 32, i32 1, i1 false)
  %uc.0.tr3420 = trunc i64 %uc.0 to i32
  %sh_prom555 = and i32 %uc.0.tr3420, 7
  %shl556 = shl i32 1, %sh_prom555
  %shr557 = lshr i64 %uc.0, 3
  %and558 = and i64 %shr557, 31
  %117 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx561 = getelementptr inbounds %struct.regnode_charclass_class* %117, i64 0, i32 4, i64 %and558
  %118 = load i8* %arrayidx561, align 1, !tbaa !1
  %conv5623421 = zext i8 %118 to i32
  %or563 = or i32 %conv5623421, %shl556
  %conv564 = trunc i32 %or563 to i8
  store i8 %conv564, i8* %arrayidx561, align 1, !tbaa !1
  br label %if.end565

if.end565:                                        ; preds = %if.end546, %if.then553
  %119 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags567 = getelementptr inbounds %struct.regnode_charclass_class* %119, i64 0, i32 0
  %120 = load i8* %flags567, align 1, !tbaa !1
  %and569 = and i8 %120, -17
  store i8 %and569, i8* %flags567, align 1, !tbaa !1
  %cmp571 = icmp ult i64 %uc.0, 256
  br i1 %cmp571, label %if.then573, label %if.end612

if.then573:                                       ; preds = %if.end565
  %121 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags575 = getelementptr inbounds %struct.regnode_charclass_class* %121, i64 0, i32 0
  %122 = load i8* %flags575, align 1, !tbaa !1
  %and577 = and i8 %122, -65
  store i8 %and577, i8* %flags575, align 1, !tbaa !1
  br label %if.end612

if.else580:                                       ; preds = %if.end503
  %and581 = and i32 %flags.addr.03601, 4096
  %tobool582 = icmp eq i32 %and581, 0
  br i1 %tobool582, label %if.end612, label %if.then583

if.then583:                                       ; preds = %if.else580
  %cmp584 = icmp ult i64 %uc.0, 256
  br i1 %cmp584, label %if.then586, label %if.else598

if.then586:                                       ; preds = %if.then583
  %uc.0.tr = trunc i64 %uc.0 to i32
  %sh_prom588 = and i32 %uc.0.tr, 7
  %shl589 = shl i32 1, %sh_prom588
  %shr590 = lshr i64 %uc.0, 3
  %and591 = and i64 %shr590, 31
  %123 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx594 = getelementptr inbounds %struct.regnode_charclass_class* %123, i64 0, i32 4, i64 %and591
  %124 = load i8* %arrayidx594, align 1, !tbaa !1
  %conv5953418 = zext i8 %124 to i32
  %or596 = or i32 %conv5953418, %shl589
  %conv597 = trunc i32 %or596 to i8
  store i8 %conv597, i8* %arrayidx594, align 1, !tbaa !1
  br label %if.end604

if.else598:                                       ; preds = %if.then583
  %125 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags600 = getelementptr inbounds %struct.regnode_charclass_class* %125, i64 0, i32 0
  %126 = load i8* %flags600, align 1, !tbaa !1
  %or602 = or i8 %126, 64
  store i8 %or602, i8* %flags600, align 1, !tbaa !1
  br label %if.end604

if.end604:                                        ; preds = %if.else598, %if.then586
  %127 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags606 = getelementptr inbounds %struct.regnode_charclass_class* %127, i64 0, i32 0
  %128 = load i8* %flags606, align 1, !tbaa !1
  %and608 = and i8 %128, -17
  store i8 %and608, i8* %flags606, align 1, !tbaa !1
  %129 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  call fastcc void @S_cl_and(%struct.regnode_charclass_class* %129, %struct.regnode_charclass_class* %and_with) #9
  br label %if.end612

if.end612:                                        ; preds = %if.else580, %if.end604, %if.end565, %if.then573
  %and613 = and i32 %flags.addr.03601, -6145
  br label %if.end2552

if.else614:                                       ; preds = %if.end167, %if.end233
  %conv2353675 = phi i32 [ %conv235, %if.end233 ], [ 43, %if.end167 ]
  %130 = phi i8 [ %53, %if.end233 ], [ 43, %if.end167 ]
  %idxprom616 = zext i8 %130 to i64
  %131 = add i64 %idxprom616, -33
  %cmp619 = icmp ult i64 %131, 3
  br i1 %cmp619, label %if.then621, label %if.else773

if.then621:                                       ; preds = %if.else614
  %str_len623 = getelementptr inbounds %struct.regnode* %52, i64 0, i32 0
  %132 = load i8* %str_len623, align 1, !tbaa !1
  %conv624 = zext i8 %132 to i32
  %arraydecay627 = getelementptr inbounds %struct.regnode* %52, i64 1, i32 0
  %133 = load i8* %arraydecay627, align 1, !tbaa !1
  %conv628 = zext i8 %133 to i64
  %and629 = and i32 %flags.addr.03601, 1024
  %tobool630 = icmp ne i32 %and629, 0
  br i1 %tobool630, label %if.then631, label %if.end632

if.then631:                                       ; preds = %if.then621
  call fastcc void @S_scan_commit(%struct.RExC_state_t* %pRExC_state, %struct.scan_data_t* %data) #9
  br label %if.end632

if.end632:                                        ; preds = %if.then621, %if.then631
  %134 = load i32* %utf8, align 4, !tbaa !3
  %cmp634 = icmp eq i32 %134, 0
  br i1 %cmp634, label %if.end645, label %if.then636

if.then636:                                       ; preds = %if.end632
  %135 = load %struct.regnode** %scan, align 8, !tbaa !0
  %arraydecay639 = getelementptr inbounds %struct.regnode* %135, i64 1, i32 0
  %idx.ext640 = zext i8 %132 to i64
  %add.ptr641 = getelementptr inbounds i8* %arraydecay639, i64 %idx.ext640
  %call642 = call i64 @Perl_utf8_length(i8* %arraydecay639, i8* %add.ptr641) #8
  %conv643 = trunc i64 %call642 to i32
  %call644 = call i64 @Perl_utf8_to_uvchr(i8* %arraydecay639, i64* null) #8
  br label %if.end645

if.end645:                                        ; preds = %if.end632, %if.then636
  %l622.0 = phi i32 [ %conv643, %if.then636 ], [ %conv624, %if.end632 ]
  %uc625.0 = phi i64 [ %call644, %if.then636 ], [ %conv628, %if.end632 ]
  %add646 = add nsw i32 %l622.0, %min.3
  %tobool630.not = xor i1 %tobool630, true
  %brmerge = or i1 %tobool647, %tobool630.not
  br i1 %brmerge, label %if.end654, label %if.then651

if.then651:                                       ; preds = %if.end645
  %136 = load i32* %pos_min652, align 4, !tbaa !3
  %add653 = add nsw i32 %136, %l622.0
  store i32 %add653, i32* %pos_min652, align 4, !tbaa !3
  br label %if.end654

if.end654:                                        ; preds = %if.end645, %if.then651
  %and655 = and i32 %flags.addr.03601, 2048
  %tobool656 = icmp eq i32 %and655, 0
  br i1 %tobool656, label %if.else738, label %if.then657

if.then657:                                       ; preds = %if.end654
  %cmp659 = icmp ugt i64 %uc625.0, 255
  %.pre3653.pre = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  br i1 %cmp659, label %if.end696, label %lor.lhs.false661

lor.lhs.false661:                                 ; preds = %if.then657
  %flags663 = getelementptr inbounds %struct.regnode_charclass_class* %.pre3653.pre, i64 0, i32 0
  %137 = load i8* %flags663, align 1, !tbaa !1
  %and665 = and i8 %137, 9
  %tobool666 = icmp eq i8 %and665, 0
  br i1 %tobool666, label %land.lhs.true667, label %if.then704

land.lhs.true667:                                 ; preds = %lor.lhs.false661
  %shr668 = lshr i64 %uc625.0, 3
  %and669 = and i64 %shr668, 31
  %arrayidx672 = getelementptr inbounds %struct.regnode_charclass_class* %.pre3653.pre, i64 0, i32 4, i64 %and669
  %138 = load i8* %arrayidx672, align 1, !tbaa !1
  %conv673 = sext i8 %138 to i32
  %uc625.0.tr3413 = trunc i64 %uc625.0 to i32
  %sh_prom675 = and i32 %uc625.0.tr3413, 7
  %shl676 = shl i32 1, %sh_prom675
  %and677 = and i32 %conv673, %shl676
  %tobool678 = icmp eq i32 %and677, 0
  br i1 %tobool678, label %land.lhs.true679, label %if.then704

land.lhs.true679:                                 ; preds = %land.lhs.true667
  %arrayidx680 = getelementptr inbounds [0 x i8]* @PL_fold, i64 0, i64 %uc625.0
  %139 = load i8* %arrayidx680, align 1, !tbaa !1
  %conv681 = zext i8 %139 to i32
  %shr6823414 = lshr i32 %conv681, 3
  %idxprom6843415 = zext i32 %shr6823414 to i64
  %arrayidx687 = getelementptr inbounds %struct.regnode_charclass_class* %.pre3653.pre, i64 0, i32 4, i64 %idxprom6843415
  %140 = load i8* %arrayidx687, align 1, !tbaa !1
  %conv688 = sext i8 %140 to i32
  %and691 = and i32 %conv681, 7
  %shl692 = shl i32 1, %and691
  %and693 = and i32 %shl692, %conv688
  %tobool694 = icmp eq i32 %and693, 0
  br i1 %tobool694, label %if.end696, label %if.then704

if.end696:                                        ; preds = %if.then657, %land.lhs.true679
  %arraydecay699 = getelementptr inbounds %struct.regnode_charclass_class* %.pre3653.pre, i64 0, i32 5, i64 0
  %141 = bitcast i8* %arraydecay699 to i32*
  store i32 0, i32* %141, align 1
  %142 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arraydecay702 = getelementptr inbounds %struct.regnode_charclass_class* %142, i64 0, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* %arraydecay702, i8 0, i64 32, i32 1, i1 false)
  br label %if.end771

if.then704:                                       ; preds = %lor.lhs.false661, %land.lhs.true667, %land.lhs.true679
  %arraydecay6993678 = getelementptr inbounds %struct.regnode_charclass_class* %.pre3653.pre, i64 0, i32 5, i64 0
  %143 = bitcast i8* %arraydecay6993678 to i32*
  store i32 0, i32* %143, align 1
  %144 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arraydecay7023679 = getelementptr inbounds %struct.regnode_charclass_class* %144, i64 0, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* %arraydecay7023679, i8 0, i64 32, i32 1, i1 false)
  %uc625.0.tr3416 = trunc i64 %uc625.0 to i32
  %sh_prom706 = and i32 %uc625.0.tr3416, 7
  %shl707 = shl i32 1, %sh_prom706
  %shr708 = lshr i64 %uc625.0, 3
  %and709 = and i64 %shr708, 31
  %145 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx712 = getelementptr inbounds %struct.regnode_charclass_class* %145, i64 0, i32 4, i64 %and709
  %146 = load i8* %arrayidx712, align 1, !tbaa !1
  %conv7133417 = zext i8 %146 to i32
  %or714 = or i32 %conv7133417, %shl707
  %conv715 = trunc i32 %or714 to i8
  store i8 %conv715, i8* %arrayidx712, align 1, !tbaa !1
  %147 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags717 = getelementptr inbounds %struct.regnode_charclass_class* %147, i64 0, i32 0
  %148 = load i8* %flags717, align 1, !tbaa !1
  %and719 = and i8 %148, -17
  store i8 %and719, i8* %flags717, align 1, !tbaa !1
  %149 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags722 = getelementptr inbounds %struct.regnode_charclass_class* %149, i64 0, i32 0
  %150 = load i8* %flags722, align 1, !tbaa !1
  %or724 = or i8 %150, 2
  store i8 %or724, i8* %flags722, align 1, !tbaa !1
  %151 = load %struct.regnode** %scan, align 8, !tbaa !0
  %type726 = getelementptr inbounds %struct.regnode* %151, i64 0, i32 1
  %152 = load i8* %type726, align 1, !tbaa !1
  %cmp728 = icmp eq i8 %152, 35
  br i1 %cmp728, label %if.then730, label %if.end771

if.then730:                                       ; preds = %if.then704
  %153 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags732 = getelementptr inbounds %struct.regnode_charclass_class* %153, i64 0, i32 0
  %154 = load i8* %flags732, align 1, !tbaa !1
  %or734 = or i8 %154, 1
  store i8 %or734, i8* %flags732, align 1, !tbaa !1
  br label %if.end771

if.else738:                                       ; preds = %if.end654
  %and739 = and i32 %flags.addr.03601, 4096
  %tobool740 = icmp eq i32 %and739, 0
  br i1 %tobool740, label %if.end771, label %if.then741

if.then741:                                       ; preds = %if.else738
  %155 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags743 = getelementptr inbounds %struct.regnode_charclass_class* %155, i64 0, i32 0
  %156 = load i8* %flags743, align 1, !tbaa !1
  %and745 = and i8 %156, 2
  %tobool746 = icmp eq i8 %and745, 0
  br i1 %tobool746, label %if.end768, label %if.then747

if.then747:                                       ; preds = %if.then741
  %cmp748 = icmp ult i64 %uc625.0, 256
  br i1 %cmp748, label %if.then750, label %if.end762

if.then750:                                       ; preds = %if.then747
  %uc625.0.tr = trunc i64 %uc625.0 to i32
  %sh_prom752 = and i32 %uc625.0.tr, 7
  %shl753 = shl i32 1, %sh_prom752
  %shr754 = lshr i64 %uc625.0, 3
  %and755 = and i64 %shr754, 31
  %arrayidx758 = getelementptr inbounds %struct.regnode_charclass_class* %155, i64 0, i32 4, i64 %and755
  %157 = load i8* %arrayidx758, align 1, !tbaa !1
  %conv7593412 = zext i8 %157 to i32
  %or760 = or i32 %conv7593412, %shl753
  %conv761 = trunc i32 %or760 to i8
  store i8 %conv761, i8* %arrayidx758, align 1, !tbaa !1
  %.pre3651 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags764.phi.trans.insert = getelementptr inbounds %struct.regnode_charclass_class* %.pre3651, i64 0, i32 0
  %.pre3652 = load i8* %flags764.phi.trans.insert, align 1, !tbaa !1
  br label %if.end762

if.end762:                                        ; preds = %if.then750, %if.then747
  %158 = phi i8 [ %.pre3652, %if.then750 ], [ %156, %if.then747 ]
  %159 = phi %struct.regnode_charclass_class* [ %.pre3651, %if.then750 ], [ %155, %if.then747 ]
  %flags764 = getelementptr inbounds %struct.regnode_charclass_class* %159, i64 0, i32 0
  %and766 = and i8 %158, -17
  store i8 %and766, i8* %flags764, align 1, !tbaa !1
  %.pre3650 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  br label %if.end768

if.end768:                                        ; preds = %if.then741, %if.end762
  %160 = phi %struct.regnode_charclass_class* [ %155, %if.then741 ], [ %.pre3650, %if.end762 ]
  call fastcc void @S_cl_and(%struct.regnode_charclass_class* %160, %struct.regnode_charclass_class* %and_with) #9
  br label %if.end771

if.end771:                                        ; preds = %if.end696, %if.else738, %if.end768, %if.then730, %if.then704
  %and772 = and i32 %flags.addr.03601, -6145
  br label %if.end2552

if.else773:                                       ; preds = %if.else614
  %memchr = call i8* @memchr(i8* getelementptr inbounds ([17 x i8]* @PL_varies, i64 0, i64 0), i32 %conv2353675, i64 17)
  %tobool777 = icmp eq i8* %memchr, null
  br i1 %tobool777, label %if.else1480, label %if.then778

if.then778:                                       ; preds = %if.else773
  call void @llvm.lifetime.start(i64 44, i8* %16) #3
  %arrayidx785 = getelementptr inbounds [62 x i8]* @PL_regkind, i64 0, i64 %idxprom616
  %161 = load i8* %arrayidx785, align 1, !tbaa !1
  %conv786 = zext i8 %161 to i32
  switch i32 %conv786, label %sw.default [
    i32 44, label %cleanup1477
    i32 39, label %sw.bb788
    i32 38, label %sw.bb812
    i32 40, label %sw.bb826
  ]

sw.bb788:                                         ; preds = %if.then778
  %and789 = and i32 %flags.addr.03601, 7168
  %tobool790 = icmp eq i32 %and789, 0
  br i1 %tobool790, label %if.end804, label %if.then791

if.then791:                                       ; preds = %sw.bb788
  %type793 = getelementptr inbounds %struct.regnode* %52, i64 1, i32 1
  %162 = load i8* %type793, align 1, !tbaa !1
  %cmp795 = icmp eq i8 %162, 33
  br i1 %cmp795, label %if.then800, label %lor.lhs.false797

lor.lhs.false797:                                 ; preds = %if.then791
  %and798 = and i32 %flags.addr.03601, 6144
  %tobool799 = icmp eq i32 %and798, 0
  br i1 %tobool799, label %if.end804, label %if.then800

if.then800:                                       ; preds = %lor.lhs.false797, %if.then791
  %call801 = call %struct.regnode* @Perl_regnext(%struct.regnode* %52) #9
  %add.ptr802 = getelementptr inbounds %struct.regnode* %52, i64 1
  store %struct.regnode* %add.ptr802, %struct.regnode** %scan, align 8, !tbaa !0
  br label %do_curly

if.end804:                                        ; preds = %lor.lhs.false797, %sw.bb788
  %and805 = and i32 %flags.addr.03601, 1024
  %tobool806 = icmp eq i32 %and805, 0
  br i1 %tobool806, label %if.end810, label %if.then807

if.then807:                                       ; preds = %if.end804
  %163 = load i32* %pos_min652, align 4, !tbaa !3
  %inc809 = add nsw i32 %163, 1
  store i32 %inc809, i32* %pos_min652, align 4, !tbaa !3
  br label %if.end810

if.end810:                                        ; preds = %if.end804, %if.then807
  %inc811 = add nsw i32 %min.3, 1
  br label %sw.bb812

sw.bb812:                                         ; preds = %if.then778, %if.end810
  %min.4 = phi i32 [ %min.3, %if.then778 ], [ %inc811, %if.end810 ]
  %and813 = and i32 %flags.addr.03601, 6144
  %tobool814 = icmp eq i32 %and813, 0
  %call819 = call %struct.regnode* @Perl_regnext(%struct.regnode* %52) #9
  br i1 %tobool814, label %if.end818, label %if.then815

if.then815:                                       ; preds = %sw.bb812
  %add.ptr817 = getelementptr inbounds %struct.regnode* %52, i64 1
  store %struct.regnode* %add.ptr817, %struct.regnode** %scan, align 8, !tbaa !0
  br label %do_curly

if.end818:                                        ; preds = %sw.bb812
  store %struct.regnode* %call819, %struct.regnode** %scan, align 8, !tbaa !0
  %and820 = and i32 %flags.addr.03601, 1024
  %tobool821 = icmp eq i32 %and820, 0
  br i1 %tobool821, label %optimize_curly_tail, label %if.then822

if.then822:                                       ; preds = %if.end818
  call fastcc void @S_scan_commit(%struct.RExC_state_t* %pRExC_state, %struct.scan_data_t* %data) #9
  store %struct.sv** %longest_float2533, %struct.sv*** %longest2534, align 8, !tbaa !0
  br label %optimize_curly_tail

sw.bb826:                                         ; preds = %if.then778
  %arg1827 = getelementptr inbounds %struct.regnode* %52, i64 1
  %164 = bitcast %struct.regnode* %arg1827 to i16*
  %165 = load i16* %164, align 2, !tbaa !4
  %conv828 = zext i16 %165 to i32
  %166 = getelementptr inbounds %struct.regnode* %52, i64 1, i32 2
  %167 = load i16* %166, align 2, !tbaa !4
  %conv829 = zext i16 %167 to i32
  %call830 = call %struct.regnode* @Perl_regnext(%struct.regnode* %52) #9
  %cmp833 = icmp eq i8 %130, 43
  br i1 %cmp833, label %if.then835, label %if.end850

if.then835:                                       ; preds = %sw.bb826
  br i1 %tobool647, label %cond.end840, label %cond.true837

cond.true837:                                     ; preds = %if.then835
  %168 = load i32** %last_closep2506, align 8, !tbaa !0
  %169 = load i32* %168, align 4, !tbaa !3
  br label %cond.end840

cond.end840:                                      ; preds = %if.then835, %cond.true837
  %cond841 = phi i32 [ %169, %cond.true837 ], [ 0, %if.then835 ]
  %cmp842 = icmp sgt i32 %cond841, 255
  %170 = trunc i32 %cond841 to i8
  %conv848 = select i1 %cmp842, i8 -1, i8 %170
  %flags849 = getelementptr inbounds %struct.regnode* %52, i64 0, i32 0
  store i8 %conv848, i8* %flags849, align 1, !tbaa !1
  %.pre3659 = load %struct.regnode** %scan, align 8, !tbaa !0
  br label %if.end850

if.end850:                                        ; preds = %cond.end840, %sw.bb826
  %171 = phi %struct.regnode* [ %.pre3659, %cond.end840 ], [ %52, %sw.bb826 ]
  %add.ptr852 = getelementptr inbounds %struct.regnode* %171, i64 2
  store %struct.regnode* %add.ptr852, %struct.regnode** %scan, align 8, !tbaa !0
  %type853 = getelementptr inbounds %struct.regnode* %171, i64 2, i32 1
  %172 = load i8* %type853, align 1, !tbaa !1
  %cmp855 = icmp eq i8 %172, 57
  %conv856 = zext i1 %cmp855 to i32
  br label %do_curly

do_curly:                                         ; preds = %if.end850, %if.then815, %if.then800
  %mincount.0 = phi i32 [ %conv828, %if.end850 ], [ 0, %if.then815 ], [ 1, %if.then800 ]
  %maxcount.0 = phi i32 [ %conv829, %if.end850 ], [ 32767, %if.then815 ], [ 32767, %if.then800 ]
  %next_is_eval.0 = phi i32 [ %conv856, %if.end850 ], [ 0, %if.then815 ], [ 0, %if.then800 ]
  %next.1 = phi %struct.regnode* [ %call830, %if.end850 ], [ %call819, %if.then815 ], [ %call801, %if.then800 ]
  %min.5 = phi i32 [ %min.3, %if.end850 ], [ %min.4, %if.then815 ], [ %min.3, %if.then800 ]
  %and857 = and i32 %flags.addr.03601, 1024
  %tobool858 = icmp eq i32 %and857, 0
  br i1 %tobool858, label %if.end865, label %if.then859

if.then859:                                       ; preds = %do_curly
  %cmp860 = icmp eq i32 %mincount.0, 0
  br i1 %cmp860, label %if.then862, label %if.end863

if.then862:                                       ; preds = %if.then859
  call fastcc void @S_scan_commit(%struct.RExC_state_t* %pRExC_state, %struct.scan_data_t* %data) #9
  br label %if.end863

if.end863:                                        ; preds = %if.then859, %if.then862
  %173 = load i32* %pos_min652, align 4, !tbaa !3
  br label %if.end865

if.end865:                                        ; preds = %do_curly, %if.end863
  %pos_before.0 = phi i32 [ %173, %if.end863 ], [ 0, %do_curly ]
  br i1 %tobool2356, label %if.then867, label %if.end876

if.then867:                                       ; preds = %if.end865
  %174 = load i32* %flags2322, align 4, !tbaa !3
  %and870 = and i32 %174, -897
  store i32 %and870, i32* %flags2322, align 4, !tbaa !3
  %tobool871 = icmp eq i32 %is_inf.03596, 0
  br i1 %tobool871, label %if.end876, label %if.then872

if.then872:                                       ; preds = %if.then867
  %or874 = or i32 %and870, 64
  store i32 %or874, i32* %flags2322, align 4, !tbaa !3
  br label %if.end876

if.end876:                                        ; preds = %if.then867, %if.then872, %if.end865
  %fl.0 = phi i32 [ %174, %if.then872 ], [ %174, %if.then867 ], [ 0, %if.end865 ]
  %and877 = and i32 %flags.addr.03601, 6144
  %tobool878 = icmp ne i32 %and877, 0
  br i1 %tobool878, label %if.then879, label %if.end884

if.then879:                                       ; preds = %if.end876
  store i64 0, i64* %17, align 8
  store i8 17, i8* %type.i3476, align 1, !tbaa !1
  store i32 0, i32* %18, align 8
  call void @llvm.memset.p0i8.i64(i8* %19, i8 -1, i64 32, i32 8, i1 false) #3
  %175 = load i32* %flags1.i, align 4, !tbaa !3
  %and.i.i3479 = and i32 %175, 2048
  %cmp.i.i3480 = icmp eq i32 %and.i.i3479, 0
  %..i.i3481 = select i1 %cmp.i.i3480, i8 80, i8 81
  store i8 %..i.i3481, i8* %16, align 8, !tbaa !1
  %176 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  store %struct.regnode_charclass_class* %this_class782, %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %or882 = and i32 %flags.addr.03601, -6145
  %and883 = or i32 %or882, 2048
  br label %if.end884

if.end884:                                        ; preds = %if.then879, %if.end876
  %f781.0 = phi i32 [ %and883, %if.then879 ], [ %flags.addr.03601, %if.end876 ]
  %oclass.0 = phi %struct.regnode_charclass_class* [ %176, %if.then879 ], [ null, %if.end876 ]
  %sub885 = add nsw i32 %maxcount.0, -1
  %cmp886 = icmp ne i32 %mincount.0, %sub885
  %cmp889 = icmp ne i32 %maxcount.0, 32767
  %or.cond2609 = and i1 %cmp886, %cmp889
  %and892 = and i32 %f781.0, -8193
  %and892.f781.0 = select i1 %or.cond2609, i32 %and892, i32 %f781.0
  %cmp894 = icmp eq i32 %mincount.0, 0
  %and897 = and i32 %and892.f781.0, -1025
  %cond900 = select i1 %cmp894, i32 %and897, i32 %and892.f781.0
  %call901 = call fastcc i32 @S_study_chunk(%struct.RExC_state_t* %pRExC_state, %struct.regnode** %scan, i32* %deltanext780, %struct.regnode* %last, %struct.scan_data_t* %data, i32 %cond900) #9
  br i1 %tobool878, label %if.then904, label %if.end906

if.then904:                                       ; preds = %if.end884
  store %struct.regnode_charclass_class* %oclass.0, %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  br label %if.end906

if.end906:                                        ; preds = %if.then904, %if.end884
  %cmp910 = icmp eq i32 %call901, 0
  %or.cond3429 = or i1 %cmp894, %cmp910
  %and913 = and i32 %flags.addr.03601, 4096
  %tobool914 = icmp eq i32 %and913, 0
  br i1 %or.cond3429, label %if.then912, label %if.else932

if.then912:                                       ; preds = %if.end906
  br i1 %tobool914, label %if.else917, label %if.then915

if.then915:                                       ; preds = %if.then912
  %177 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  call fastcc void @S_cl_or(%struct.RExC_state_t* %pRExC_state, %struct.regnode_charclass_class* %177, %struct.regnode_charclass_class* %this_class782) #9
  br label %if.end946

if.else917:                                       ; preds = %if.then912
  %and918 = and i32 %flags.addr.03601, 2048
  %tobool919 = icmp eq i32 %and918, 0
  br i1 %tobool919, label %if.end946, label %if.then920

if.then920:                                       ; preds = %if.else917
  %178 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %179 = getelementptr inbounds %struct.regnode_charclass_class* %178, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %179, i64 44, i32 4, i1 false), !tbaa.struct !6
  %and922 = and i32 %flags.addr.03601, -6145
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %179, i8* %16, i64 44, i32 4, i1 false), !tbaa.struct !6
  %or924 = or i32 %and922, 4096
  %180 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags926 = getelementptr inbounds %struct.regnode_charclass_class* %180, i64 0, i32 0
  %181 = load i8* %flags926, align 1, !tbaa !1
  %or928 = or i8 %181, 16
  store i8 %or928, i8* %flags926, align 1, !tbaa !1
  br label %if.end946

if.else932:                                       ; preds = %if.end906
  br i1 %tobool914, label %if.else938, label %if.then935

if.then935:                                       ; preds = %if.else932
  %182 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  call fastcc void @S_cl_or(%struct.RExC_state_t* %pRExC_state, %struct.regnode_charclass_class* %182, %struct.regnode_charclass_class* %this_class782) #9
  %183 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  call fastcc void @S_cl_and(%struct.regnode_charclass_class* %183, %struct.regnode_charclass_class* %and_with) #9
  br label %if.end944

if.else938:                                       ; preds = %if.else932
  %and939 = and i32 %flags.addr.03601, 2048
  %tobool940 = icmp eq i32 %and939, 0
  br i1 %tobool940, label %if.end944, label %if.then941

if.then941:                                       ; preds = %if.else938
  %184 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  call fastcc void @S_cl_and(%struct.regnode_charclass_class* %184, %struct.regnode_charclass_class* %this_class782) #9
  br label %if.end944

if.end944:                                        ; preds = %if.else938, %if.then941, %if.then935
  %and945 = and i32 %flags.addr.03601, -6145
  br label %if.end946

if.end946:                                        ; preds = %if.else917, %if.then915, %if.then920, %if.end944
  %flags.addr.2 = phi i32 [ %flags.addr.03601, %if.then915 ], [ %or924, %if.then920 ], [ %flags.addr.03601, %if.else917 ], [ %and945, %if.end944 ]
  %185 = load %struct.regnode** %scan, align 8, !tbaa !0
  %tobool947 = icmp eq %struct.regnode* %185, null
  br i1 %tobool947, label %if.then948, label %if.end949

if.then948:                                       ; preds = %if.end946
  store %struct.regnode* %next.1, %struct.regnode** %scan, align 8, !tbaa !0
  br label %if.end949

if.end949:                                        ; preds = %if.end946, %if.then948
  %186 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings = getelementptr inbounds %struct.cop* %186, i64 0, i32 14
  %187 = load %struct.sv** %cop_warnings, align 8, !tbaa !0
  %cmp950 = icmp eq %struct.sv* %187, null
  br i1 %cmp950, label %lor.lhs.false966, label %land.lhs.true952

land.lhs.true952:                                 ; preds = %if.end949
  %188 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings953 = getelementptr inbounds %struct.cop* %188, i64 0, i32 14
  %189 = load %struct.sv** %cop_warnings953, align 8, !tbaa !0
  %cmp954 = icmp eq %struct.sv* %189, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp954, label %lor.lhs.false966, label %land.lhs.true956

land.lhs.true956:                                 ; preds = %land.lhs.true952
  %190 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings957 = getelementptr inbounds %struct.cop* %190, i64 0, i32 14
  %191 = load %struct.sv** %cop_warnings957, align 8, !tbaa !0
  %cmp958 = icmp eq %struct.sv* %191, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp958, label %land.lhs.true974, label %lor.lhs.false960

lor.lhs.false960:                                 ; preds = %land.lhs.true956
  %192 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings961 = getelementptr inbounds %struct.cop* %192, i64 0, i32 14
  %193 = load %struct.sv** %cop_warnings961, align 8, !tbaa !0
  %sv_any = getelementptr inbounds %struct.sv* %193, i64 0, i32 0
  %194 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_pv = bitcast i8* %194 to i8**
  %195 = load i8** %xpv_pv, align 8, !tbaa !0
  %arrayidx962 = getelementptr inbounds i8* %195, i64 5
  %196 = load i8* %arrayidx962, align 1, !tbaa !1
  %and964 = and i8 %196, 1
  %tobool965 = icmp eq i8 %and964, 0
  br i1 %tobool965, label %lor.lhs.false966, label %land.lhs.true974

lor.lhs.false966:                                 ; preds = %lor.lhs.false960, %land.lhs.true952, %if.end949
  %197 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings967 = getelementptr inbounds %struct.cop* %197, i64 0, i32 14
  %198 = load %struct.sv** %cop_warnings967, align 8, !tbaa !0
  %cmp968 = icmp eq %struct.sv* %198, null
  br i1 %cmp968, label %land.lhs.true970, label %if.end1002

land.lhs.true970:                                 ; preds = %lor.lhs.false966
  %199 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and972 = and i8 %199, 1
  %tobool973 = icmp eq i8 %and972, 0
  br i1 %tobool973, label %if.end1002, label %land.lhs.true974

land.lhs.true974:                                 ; preds = %lor.lhs.false960, %land.lhs.true970, %land.lhs.true956
  %200 = or i32 %next_is_eval.0, %mincount.0
  %notlhs = icmp ne i32 %200, 0
  %notrhs = icmp ne i32 %maxcount.0, 1
  %or.cond3431.not = or i1 %notrhs, %notlhs
  %or.cond3432 = and i1 %or.cond3431.not, %cmp910
  %201 = load i32* %deltanext780, align 4, !tbaa !3
  %cmp986 = icmp eq i32 %201, 0
  %or.cond3433 = and i1 %or.cond3432, %cmp986
  %brmerge3434.demorgan = and i1 %or.cond3433, %tobool2356
  br i1 %brmerge3434.demorgan, label %land.lhs.true990, label %if.end1002

land.lhs.true990:                                 ; preds = %land.lhs.true974
  %202 = load i32* %flags2322, align 4, !tbaa !3
  %and992 = and i32 %202, 384
  %tobool993 = icmp eq i32 %and992, 0
  %cmp995 = icmp ult i32 %maxcount.0, 10923
  %or.cond3435 = and i1 %tobool993, %cmp995
  br i1 %or.cond3435, label %if.then997, label %if.end1002

if.then997:                                       ; preds = %land.lhs.true990
  %203 = load i8** %parse2420, align 8, !tbaa !0
  %204 = load i8** %precomp2421, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint i8* %203 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %204 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv998 = trunc i64 %sub.ptr.sub to i32
  %add.ptr1001 = getelementptr inbounds i8* %204, i64 %sub.ptr.sub
  call void (i32, i8*, ...)* @Perl_warner(i32 20, i8* getelementptr inbounds ([55 x i8]* @.str13, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8]* @.str97, i64 0, i64 0), i32 %conv998, i8* %204, i8* %add.ptr1001) #8
  br label %if.end1002

if.end1002:                                       ; preds = %land.lhs.true974, %land.lhs.true990, %land.lhs.true970, %if.then997, %lor.lhs.false966
  %mul1003 = mul nsw i32 %call901, %mincount.0
  %add1004 = add nsw i32 %mul1003, %min.5
  %cmp1005 = icmp eq i32 %maxcount.0, 32767
  %205 = load i32* %deltanext780, align 4, !tbaa !3
  br i1 %cmp1005, label %land.lhs.true1007, label %lor.rhs

land.lhs.true1007:                                ; preds = %if.end1002
  %add1008 = add nsw i32 %205, %call901
  %cmp1009 = icmp sgt i32 %add1008, 0
  br i1 %cmp1009, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end1002, %land.lhs.true1007
  %cmp1011 = icmp eq i32 %205, 2147483647
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true1007
  %206 = phi i1 [ true, %land.lhs.true1007 ], [ %cmp1011, %lor.rhs ]
  %lor.ext = zext i1 %206 to i32
  %or1013 = or i32 %lor.ext, %is_inf_internal.03595
  %or1014 = or i32 %or1013, %is_inf.03596
  %add1015 = add nsw i32 %205, %call901
  %mul1016 = mul nsw i32 %add1015, %maxcount.0
  %sub1018 = sub nsw i32 %mul1016, %mul1003
  %add1019 = add nsw i32 %sub1018, %delta.03597
  %207 = load i8* %type168, align 1, !tbaa !1
  %cmp1022.not = icmp ne i8 %207, 43
  %brmerge3437 = or i1 %cmp1022.not, %tobool866.not3436
  br i1 %brmerge3437, label %nogo, label %land.lhs.true1026

land.lhs.true1026:                                ; preds = %lor.end
  %208 = load i32* %flags2322, align 4, !tbaa !3
  %209 = and i32 %208, 768
  %210 = icmp eq i32 %209, 256
  %tobool1035 = icmp eq i32 %205, 0
  %or.cond3439 = and i1 %210, %tobool1035
  %cmp1037 = icmp eq i32 %call901, 1
  %or.cond3440 = and i1 %or.cond3439, %cmp1037
  br i1 %or.cond3440, label %if.then1039, label %nogo

if.then1039:                                      ; preds = %land.lhs.true1026
  %add.ptr1041 = getelementptr inbounds %struct.regnode* %52, i64 2
  %call1042 = call %struct.regnode* @Perl_regnext(%struct.regnode* %add.ptr1041) #9
  %type1043 = getelementptr inbounds %struct.regnode* %call1042, i64 0, i32 1
  %211 = load i8* %type1043, align 1, !tbaa !1
  %conv1044 = zext i8 %211 to i32
  %memchr3410 = call i8* @memchr(i8* getelementptr inbounds ([15 x i8]* @PL_simple, i64 0, i64 0), i32 %conv1044, i64 15)
  %tobool1046 = icmp eq i8* %memchr3410, null
  br i1 %tobool1046, label %land.lhs.true1047, label %if.end1060

land.lhs.true1047:                                ; preds = %if.then1039
  %idxprom1049 = zext i8 %211 to i64
  %212 = add i64 %idxprom1049, -33
  %cmp1052 = icmp ult i64 %212, 3
  br i1 %cmp1052, label %land.lhs.true1054, label %nogo

land.lhs.true1054:                                ; preds = %land.lhs.true1047
  %str_len1055 = getelementptr inbounds %struct.regnode* %call1042, i64 0, i32 0
  %213 = load i8* %str_len1055, align 1, !tbaa !1
  %cmp1057 = icmp eq i8 %213, 1
  br i1 %cmp1057, label %if.end1060, label %nogo

if.end1060:                                       ; preds = %if.then1039, %land.lhs.true1054
  %call1061 = call %struct.regnode* @Perl_regnext(%struct.regnode* %call1042) #9
  %type1062 = getelementptr inbounds %struct.regnode* %call1061, i64 0, i32 1
  %214 = load i8* %type1062, align 1, !tbaa !1
  %cmp1064 = icmp eq i8 %214, 46
  br i1 %cmp1064, label %if.else1147.thread3683, label %nogo

if.else1147.thread3683:                           ; preds = %if.end1060
  %arg11068 = getelementptr inbounds %struct.regnode* %call1061, i64 1
  %215 = bitcast %struct.regnode* %arg11068 to i32*
  %216 = load i32* %215, align 4, !tbaa !3
  %conv1069 = trunc i32 %216 to i8
  %flags1070 = getelementptr inbounds %struct.regnode* %52, i64 0, i32 0
  store i8 %conv1069, i8* %flags1070, align 1, !tbaa !1
  store i8 41, i8* %type168, align 1, !tbaa !1
  %type1072 = getelementptr inbounds %struct.regnode* %52, i64 2, i32 1
  store i8 36, i8* %type1072, align 1, !tbaa !1
  br label %if.end1188

nogo:                                             ; preds = %land.lhs.true1026, %lor.end, %if.end1060, %land.lhs.true1047, %land.lhs.true1054
  %.pr3510 = phi i8 [ 43, %land.lhs.true1026 ], [ %207, %lor.end ], [ 43, %if.end1060 ], [ 43, %land.lhs.true1047 ], [ 43, %land.lhs.true1054 ]
  %cmp1076.not = icmp ne i8 %.pr3510, 43
  %brmerge3442 = or i1 %cmp1076.not, %tobool866.not3436
  br i1 %brmerge3442, label %if.else1147, label %land.lhs.true1080

land.lhs.true1080:                                ; preds = %nogo
  %217 = load i32* %flags2322, align 4, !tbaa !3
  %218 = and i32 %217, 640
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %land.lhs.true1088, label %land.lhs.true1152

land.lhs.true1088:                                ; preds = %land.lhs.true1080
  %220 = load i32* %deltanext780, align 4, !tbaa !3
  %tobool1089 = icmp ne i32 %220, 0
  %or.cond3444 = or i1 %tobool1089, %cmp910
  br i1 %or.cond3444, label %land.lhs.true1152, label %if.then1093

if.then1093:                                      ; preds = %land.lhs.true1088
  %add.ptr1096 = getelementptr inbounds %struct.regnode* %52, i64 2
  store i8 42, i8* %type168, align 1, !tbaa !1
  br label %while.cond1098

while.cond1098:                                   ; preds = %while.cond1098, %if.then1093
  %nxt1094.0 = phi %struct.regnode* [ %add.ptr1096, %if.then1093 ], [ %call1099, %while.cond1098 ]
  %call1099 = call %struct.regnode* @Perl_regnext(%struct.regnode* %nxt1094.0) #9
  %type1102 = getelementptr inbounds %struct.regnode* %call1099, i64 0, i32 1
  %221 = load i8* %type1102, align 1, !tbaa !1
  %cmp1104 = icmp eq i8 %221, 44
  br i1 %cmp1104, label %while.end1109, label %while.cond1098

while.end1109:                                    ; preds = %while.cond1098
  %type1110 = getelementptr inbounds %struct.regnode* %call1099, i64 0, i32 1
  store i8 1, i8* %type1110, align 1, !tbaa !1
  %222 = load i32* %flags2322, align 4, !tbaa !3
  %and1112 = and i32 %222, 256
  %tobool1113 = icmp eq i32 %and1112, 0
  br i1 %tobool1113, label %if.else1144, label %if.then1114

if.then1114:                                      ; preds = %while.end1109
  store %struct.regnode* %add.ptr1096, %struct.regnode** %nxt11115, align 8, !tbaa !0
  %type1118 = getelementptr inbounds %struct.regnode* %nxt1094.0, i64 0, i32 1
  %223 = load i8* %type1118, align 1, !tbaa !1
  %cmp1120 = icmp eq i8 %223, 46
  br i1 %cmp1120, label %if.end1137, label %if.then1122

if.then1122:                                      ; preds = %if.then1114
  %224 = load i8** %end, align 8, !tbaa !0
  %225 = load i8** %precomp2421, align 8, !tbaa !0
  %sub.ptr.lhs.cast1124 = ptrtoint i8* %224 to i64
  %sub.ptr.rhs.cast1125 = ptrtoint i8* %225 to i64
  %sub.ptr.sub1126 = sub i64 %sub.ptr.lhs.cast1124, %sub.ptr.rhs.cast1125
  %226 = load %struct.regnode** %emit2413, align 8, !tbaa !0
  %cmp1127 = icmp eq %struct.regnode* %226, @PL_regdummy
  br i1 %cmp1127, label %if.end1130, label %if.then1129

if.then1129:                                      ; preds = %if.then1122
  %227 = load %struct.regexp** %rx2417, align 8, !tbaa !0
  %228 = bitcast %struct.regexp* %227 to i8*
  call void @Perl_save_destructor_x(void (i8*)* @clear_re, i8* %228) #8
  %.pre3658 = load i8** %precomp2421, align 8, !tbaa !0
  br label %if.end1130

if.end1130:                                       ; preds = %if.then1129, %if.then1122
  %229 = phi i8* [ %.pre3658, %if.then1129 ], [ %225, %if.then1122 ]
  %cmp1131 = icmp sgt i64 %sub.ptr.sub1126, 127
  %.3445 = select i1 %cmp1131, i8* getelementptr inbounds ([4 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0)
  %230 = trunc i64 %sub.ptr.sub1126 to i32
  %conv1135 = select i1 %cmp1131, i32 117, i32 %230
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([22 x i8]* @.str3, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8]* @.str98, i64 0, i64 0), i32 %conv1135, i8* %229, i8* %.3445) #8
  br label %if.end1137

if.end1137:                                       ; preds = %if.then1114, %if.end1130
  %arg11138 = getelementptr inbounds %struct.regnode* %nxt1094.0, i64 1
  %231 = bitcast %struct.regnode* %arg11138 to i32*
  %232 = load i32* %231, align 4, !tbaa !3
  %conv1139 = trunc i32 %232 to i8
  %flags1140 = getelementptr inbounds %struct.regnode* %52, i64 0, i32 0
  store i8 %conv1139, i8* %flags1140, align 1, !tbaa !1
  %233 = load %struct.regnode** %nxt11115, align 8, !tbaa !0
  %type1141 = getelementptr inbounds %struct.regnode* %233, i64 0, i32 1
  store i8 61, i8* %type1141, align 1, !tbaa !1
  store i8 61, i8* %type1118, align 1, !tbaa !1
  %call1143 = call fastcc i32 @S_study_chunk(%struct.RExC_state_t* %pRExC_state, %struct.regnode** %nxt11115, i32* %deltanext780, %struct.regnode* %nxt1094.0, %struct.scan_data_t* null, i32 0) #9
  br label %if.end1188

if.else1144:                                      ; preds = %while.end1109
  %flags1145 = getelementptr inbounds %struct.regnode* %52, i64 0, i32 0
  store i8 0, i8* %flags1145, align 1, !tbaa !1
  br label %if.end1188

if.else1147:                                      ; preds = %nogo
  %cmp1150 = icmp eq i8 %.pr3510, 43
  br i1 %cmp1150, label %land.lhs.true1152, label %if.end1188

land.lhs.true1152:                                ; preds = %land.lhs.true1088, %land.lhs.true1080, %if.else1147
  %and1153 = and i32 %flags.addr.2, 8192
  %tobool1154 = icmp eq i32 %and1153, 0
  %cmp1005.not = xor i1 %cmp1005, true
  %brmerge3446 = or i1 %tobool1154, %cmp1005.not
  %brmerge3448 = or i1 %brmerge3446, %tobool866.not3436
  br i1 %brmerge3448, label %if.end1188, label %land.lhs.true1160

land.lhs.true1160:                                ; preds = %land.lhs.true1152
  %234 = load i32* %whilem_c2358, align 4, !tbaa !3
  %inc1162 = add nsw i32 %234, 1
  store i32 %inc1162, i32* %whilem_c2358, align 4, !tbaa !3
  %cmp1163 = icmp slt i32 %inc1162, 16
  br i1 %cmp1163, label %if.then1165, label %if.end1188

if.then1165:                                      ; preds = %land.lhs.true1160
  %next_off1167 = getelementptr inbounds %struct.regnode* %52, i64 0, i32 2
  %235 = load i16* %next_off1167, align 2, !tbaa !4
  %idx.ext1169 = zext i16 %235 to i64
  %add.ptr1170.sum = add i64 %idx.ext1169, -1
  %type1172 = getelementptr inbounds %struct.regnode* %52, i64 %add.ptr1170.sum, i32 1
  %236 = load i8* %type1172, align 1, !tbaa !1
  %cmp1174 = icmp eq i8 %236, 36
  br i1 %cmp1174, label %if.then1176, label %if.end1180

if.then1176:                                      ; preds = %if.then1165
  %add.ptr1170.sum3408 = add i64 %idx.ext1169, 1
  %arg11177 = getelementptr inbounds %struct.regnode* %52, i64 %add.ptr1170.sum3408
  %237 = bitcast %struct.regnode* %arg11177 to i32*
  %238 = load i32* %237, align 4, !tbaa !3
  %idx.ext1178 = zext i32 %238 to i64
  %add.ptr1170.sum3409 = add i64 %idx.ext1178, %idx.ext1169
  br label %if.end1180

if.end1180:                                       ; preds = %if.then1176, %if.then1165
  %add.ptr1170.sum3409.pn = phi i64 [ %add.ptr1170.sum3409, %if.then1176 ], [ %idx.ext1169, %if.then1165 ]
  %239 = load i32* %whilem_seen, align 4, !tbaa !3
  %shl1182 = shl i32 %239, 4
  %or1183 = or i32 %shl1182, %inc1162
  %conv1184 = trunc i32 %or1183 to i8
  %nxt1166.0.sum = add i64 %add.ptr1170.sum3409.pn, -1
  %flags1186 = getelementptr inbounds %struct.regnode* %52, i64 %nxt1166.0.sum, i32 0
  store i8 %conv1184, i8* %flags1186, align 1, !tbaa !1
  br label %if.end1188

if.end1188:                                       ; preds = %if.else1147.thread3683, %land.lhs.true1152, %if.else1147, %land.lhs.true1160, %if.end1180, %if.end1137, %if.else1144
  br i1 %tobool2356, label %land.lhs.true1190, label %if.end1195

land.lhs.true1190:                                ; preds = %if.end1188
  %and1191 = and i32 %fl.0, 384
  %not.tobool1192 = icmp ne i32 %and1191, 0
  %inc1194 = zext i1 %not.tobool1192 to i32
  %pars.0.inc1194 = add nsw i32 %inc1194, %pars.03598
  br label %if.end1195

if.end1195:                                       ; preds = %land.lhs.true1190, %if.end1188
  %pars.4 = phi i32 [ %pars.03598, %if.end1188 ], [ %pars.0.inc1194, %land.lhs.true1190 ]
  %and1196 = and i32 %flags.addr.2, 1024
  %tobool1197 = icmp eq i32 %and1196, 0
  br i1 %tobool1197, label %if.end1428, label %if.then1198

if.then1198:                                      ; preds = %if.end1195
  %cmp1199 = icmp ne i32 %mincount.0, 0
  %conv1200 = zext i1 %cmp1199 to i32
  %240 = load i32* %last_end1201, align 4, !tbaa !3
  %cmp1202.not = icmp slt i32 %240, 1
  %cmp1199.not = xor i1 %cmp1199, true
  %brmerge3449 = or i1 %cmp1202.not, %cmp1199.not
  br i1 %brmerge3449, label %if.then1198.if.end1363_crit_edge, label %if.then1207

if.then1198.if.end1363_crit_edge:                 ; preds = %if.then1198
  %.pre3662 = load i32* %deltanext780, align 4, !tbaa !3
  br label %if.end1363

if.then1207:                                      ; preds = %if.then1198
  %241 = load i32* %last_start_min1401, align 4, !tbaa !3
  %cmp1209 = icmp slt i32 %pos_before.0, %241
  %.pos_before.0 = select i1 %cmp1209, i32 %241, i32 %pos_before.0
  %242 = load %struct.sv** %last_found1384, align 8, !tbaa !0
  %sv_flags1219 = getelementptr inbounds %struct.sv* %242, i64 0, i32 2
  %243 = load i32* %sv_flags1219, align 4, !tbaa !3
  %and1220 = and i32 %243, 262144
  %cmp1221 = icmp eq i32 %and1220, 0
  br i1 %cmp1221, label %cond.false1229, label %cond.true1223

cond.true1223:                                    ; preds = %if.then1207
  %sv_any1225 = getelementptr inbounds %struct.sv* %242, i64 0, i32 0
  %244 = load i8** %sv_any1225, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %244, i64 8
  %245 = bitcast i8* %xpv_cur to i64*
  %246 = load i64* %245, align 8, !tbaa !5
  store i64 %246, i64* %l1216, align 8, !tbaa !5
  %xpv_pv1228 = bitcast i8* %244 to i8**
  %247 = load i8** %xpv_pv1228, align 8, !tbaa !0
  br label %cond.end1232

cond.false1229:                                   ; preds = %if.then1207
  %call1231 = call i8* @Perl_sv_2pv_flags(%struct.sv* %242, i64* %l1216, i32 2) #8
  %.pre3654 = load i32* %last_start_min1401, align 4, !tbaa !3
  br label %cond.end1232

cond.end1232:                                     ; preds = %cond.false1229, %cond.true1223
  %248 = phi i32 [ %241, %cond.true1223 ], [ %.pre3654, %cond.false1229 ]
  %cond1233 = phi i8* [ %247, %cond.true1223 ], [ %call1231, %cond.false1229 ]
  %sub1235 = sub nsw i32 %.pos_before.0, %248
  %249 = load i32* %utf8, align 4, !tbaa !3
  %cmp1237 = icmp eq i32 %249, 0
  br i1 %cmp1237, label %if.end1245, label %if.then1239

if.then1239:                                      ; preds = %cond.end1232
  %call1240 = call i8* @Perl_utf8_hop(i8* %cond1233, i32 %sub1235) #8
  %sub.ptr.lhs.cast1241 = ptrtoint i8* %call1240 to i64
  %sub.ptr.rhs.cast1242 = ptrtoint i8* %cond1233 to i64
  %sub.ptr.sub1243 = sub i64 %sub.ptr.lhs.cast1241, %sub.ptr.rhs.cast1242
  %conv1244 = trunc i64 %sub.ptr.sub1243 to i32
  br label %if.end1245

if.end1245:                                       ; preds = %cond.end1232, %if.then1239
  %old.0 = phi i32 [ %conv1244, %if.then1239 ], [ %sub1235, %cond.end1232 ]
  %conv1246 = sext i32 %old.0 to i64
  %250 = load i64* %l1216, align 8, !tbaa !5
  %sub1247 = sub i64 %250, %conv1246
  store i64 %sub1247, i64* %l1216, align 8, !tbaa !5
  %add.ptr1249 = getelementptr inbounds i8* %cond1233, i64 %conv1246
  %call1250 = call %struct.sv* @Perl_newSVpvn(i8* %add.ptr1249, i64 %sub1247) #8
  %251 = load i32* %utf8, align 4, !tbaa !3
  %cmp1252 = icmp eq i32 %251, 0
  br i1 %cmp1252, label %if.end1257, label %if.then1254

if.then1254:                                      ; preds = %if.end1245
  %sv_flags1255 = getelementptr inbounds %struct.sv* %call1250, i64 0, i32 2
  %252 = load i32* %sv_flags1255, align 4, !tbaa !3
  %or1256 = or i32 %252, 536870912
  store i32 %or1256, i32* %sv_flags1255, align 4, !tbaa !3
  br label %if.end1257

if.end1257:                                       ; preds = %if.end1245, %if.then1254
  %253 = load i32* %deltanext780, align 4, !tbaa !3
  %cmp1258 = icmp eq i32 %253, 0
  %cmp1261 = icmp eq i32 %pos_before.0, %.pos_before.0
  %or.cond3450 = and i1 %cmp1258, %cmp1261
  br i1 %or.cond3450, label %if.then1263, label %if.else1346

if.then1263:                                      ; preds = %if.end1257
  %cmp1264 = icmp ugt i32 %mincount.0, 1
  br i1 %cmp1264, label %if.then1266, label %if.end1363

if.then1266:                                      ; preds = %if.then1263
  %sv_any1267 = getelementptr inbounds %struct.sv* %call1250, i64 0, i32 0
  %254 = load i8** %sv_any1267, align 8, !tbaa !0
  %xpv_len = getelementptr inbounds i8* %254, i64 16
  %255 = bitcast i8* %xpv_len to i64*
  %256 = load i64* %255, align 8, !tbaa !5
  %conv12683405 = zext i32 %mincount.0 to i64
  %257 = load i64* %l1216, align 8, !tbaa !5
  %mul1269 = mul i64 %257, %conv12683405
  %add1270 = add i64 %mul1269, 1
  %cmp1271 = icmp ult i64 %256, %add1270
  br i1 %cmp1271, label %cond.true1273, label %cond.end1281

cond.true1273:                                    ; preds = %if.then1266
  %call1277 = call i8* @Perl_sv_grow(%struct.sv* %call1250, i64 %add1270) #8
  %.pre3655 = load i8** %sv_any1267, align 8, !tbaa !0
  %.pre3656 = load i64* %l1216, align 8, !tbaa !5
  br label %cond.end1281

cond.end1281:                                     ; preds = %if.then1266, %cond.true1273
  %258 = phi i64 [ %257, %if.then1266 ], [ %.pre3656, %cond.true1273 ]
  %259 = phi i8* [ %254, %if.then1266 ], [ %.pre3655, %cond.true1273 ]
  %xpv_pv1284 = bitcast i8* %259 to i8**
  %260 = load i8** %xpv_pv1284, align 8, !tbaa !0
  %add.ptr1285 = getelementptr inbounds i8* %260, i64 %258
  %conv1288 = trunc i64 %258 to i32
  %sub1289 = add nsw i32 %mincount.0, -1
  call void @Perl_repeatcpy(i8* %add.ptr1285, i8* %260, i32 %conv1288, i32 %sub1289) #8
  %261 = load i8** %sv_any1267, align 8, !tbaa !0
  %xpv_cur1292 = getelementptr inbounds i8* %261, i64 8
  %262 = bitcast i8* %xpv_cur1292 to i64*
  %263 = load i64* %262, align 8, !tbaa !5
  %mul1293 = mul i64 %263, %conv12683405
  store i64 %mul1293, i64* %262, align 8, !tbaa !5
  %264 = load %struct.sv** %last_found1384, align 8, !tbaa !0
  %sv_any1295 = getelementptr inbounds %struct.sv* %264, i64 0, i32 0
  %265 = load i8** %sv_any1295, align 8, !tbaa !0
  %xpv_cur1296 = getelementptr inbounds i8* %265, i64 8
  %266 = bitcast i8* %xpv_cur1296 to i64*
  %267 = load i64* %266, align 8, !tbaa !5
  %268 = load i64* %l1216, align 8, !tbaa !5
  %sub1297 = sub i64 %267, %268
  store i64 %sub1297, i64* %266, align 8, !tbaa !5
  call void @Perl_sv_catsv_flags(%struct.sv* %264, %struct.sv* %call1250, i32 2) #8
  %269 = load %struct.sv** %last_found1384, align 8, !tbaa !0
  %sv_flags1305 = getelementptr inbounds %struct.sv* %269, i64 0, i32 2
  %270 = load i32* %sv_flags1305, align 4, !tbaa !3
  %and1306 = and i32 %270, 536870912
  %tobool1307 = icmp eq i32 %and1306, 0
  %and1310 = and i32 %270, 57344
  %tobool1311 = icmp eq i32 %and1310, 0
  %or.cond3451 = or i1 %tobool1307, %tobool1311
  br i1 %or.cond3451, label %if.end1337, label %cond.end1315

cond.end1315:                                     ; preds = %cond.end1281
  %call1313 = call %struct.magic* @Perl_mg_find(%struct.sv* %269, i32 119) #8
  %tobool1317 = icmp eq %struct.magic* %call1313, null
  br i1 %tobool1317, label %if.end1337, label %land.lhs.true1318

land.lhs.true1318:                                ; preds = %cond.end1315
  %mg_len1319 = getelementptr inbounds %struct.magic* %call1313, i64 0, i32 7
  %271 = load i32* %mg_len1319, align 4, !tbaa !3
  %cmp1320 = icmp sgt i32 %271, -1
  br i1 %cmp1320, label %if.then1322, label %if.end1337

if.then1322:                                      ; preds = %land.lhs.true1318
  %272 = load i32* %utf8, align 4, !tbaa !3
  %cmp1324 = icmp eq i32 %272, 0
  br i1 %cmp1324, label %cond.false1328, label %cond.true1326

cond.true1326:                                    ; preds = %if.then1322
  %call1327 = call i64 @Perl_sv_len_utf8(%struct.sv* %call1250) #8
  %.pre3657 = load i32* %mg_len1319, align 4, !tbaa !3
  br label %cond.end1331

cond.false1328:                                   ; preds = %if.then1322
  %273 = load i8** %sv_any1267, align 8, !tbaa !0
  %xpv_cur1330 = getelementptr inbounds i8* %273, i64 8
  %274 = bitcast i8* %xpv_cur1330 to i64*
  %275 = load i64* %274, align 8, !tbaa !5
  br label %cond.end1331

cond.end1331:                                     ; preds = %cond.false1328, %cond.true1326
  %276 = phi i32 [ %.pre3657, %cond.true1326 ], [ %271, %cond.false1328 ]
  %cond1332 = phi i64 [ %call1327, %cond.true1326 ], [ %275, %cond.false1328 ]
  %conv13343407 = zext i32 %276 to i64
  %add1335 = add i64 %conv13343407, %cond1332
  %conv1336 = trunc i64 %add1335 to i32
  store i32 %conv1336, i32* %mg_len1319, align 4, !tbaa !3
  br label %if.end1337

if.end1337:                                       ; preds = %cond.end1281, %cond.end1315, %cond.end1331, %land.lhs.true1318
  %277 = load i64* %l1216, align 8, !tbaa !5
  %conv1339 = sext i32 %sub1289 to i64
  %mul1340 = mul i64 %277, %conv1339
  %278 = load i32* %last_end1201, align 4, !tbaa !3
  %conv13423406 = zext i32 %278 to i64
  %add1343 = add i64 %conv13423406, %mul1340
  %conv1344 = trunc i64 %add1343 to i32
  store i32 %conv1344, i32* %last_end1201, align 4, !tbaa !3
  br label %if.end1363

if.else1346:                                      ; preds = %if.end1257
  %sub1347 = add nsw i32 %mincount.0, -1
  %mul1348 = mul nsw i32 %call901, %sub1347
  %279 = load i32* %last_start_min1401, align 4, !tbaa !3
  %add1350 = add nsw i32 %279, %mul1348
  store i32 %add1350, i32* %last_start_min1401, align 4, !tbaa !3
  %tobool1351 = icmp eq i32 %or1014, 0
  br i1 %tobool1351, label %cond.false1353, label %cond.end1358

cond.false1353:                                   ; preds = %if.else1346
  %280 = load i32* %pos_delta1375, align 4, !tbaa !3
  %add1356 = add nsw i32 %280, %call901
  %mul1357 = mul nsw i32 %add1356, %sub885
  br label %cond.end1358

cond.end1358:                                     ; preds = %if.else1346, %cond.false1353
  %cond1359 = phi i32 [ %mul1357, %cond.false1353 ], [ 2147483647, %if.else1346 ]
  %281 = load i32* %last_start_max1423, align 4, !tbaa !3
  %add1361 = add nsw i32 %281, %cond1359
  store i32 %add1361, i32* %last_start_max1423, align 4, !tbaa !3
  br label %if.end1363

if.end1363:                                       ; preds = %if.then1263, %if.then1198.if.end1363_crit_edge, %cond.end1358, %if.end1337
  %282 = phi i32 [ 0, %if.end1337 ], [ %253, %cond.end1358 ], [ %.pre3662, %if.then1198.if.end1363_crit_edge ], [ 0, %if.then1263 ]
  %last_str.0 = phi %struct.sv* [ %call1250, %if.end1337 ], [ %call1250, %cond.end1358 ], [ null, %if.then1198.if.end1363_crit_edge ], [ %call1250, %if.then1263 ]
  %sub1364 = sub nsw i32 %mincount.0, %conv1200
  %mul1365 = mul nsw i32 %call901, %sub1364
  %283 = load i32* %pos_min652, align 4, !tbaa !3
  %add1367 = add nsw i32 %283, %mul1365
  store i32 %add1367, i32* %pos_min652, align 4, !tbaa !3
  %sub1368 = sext i1 %cmp1199 to i32
  %mul1369 = mul nsw i32 %282, %sub1368
  %add1370 = add nsw i32 %282, %call901
  %mul1371 = mul nsw i32 %add1370, %maxcount.0
  %284 = load i32* %pos_delta1375, align 4, !tbaa !3
  %add1372 = sub i32 %mul1369, %mul1003
  %sub1374 = add i32 %add1372, %284
  %add1376 = add i32 %sub1374, %mul1371
  store i32 %add1376, i32* %pos_delta1375, align 4, !tbaa !3
  %cmp1377 = icmp eq i32 %mincount.0, %maxcount.0
  br i1 %cmp1377, label %if.end1427, label %if.then1379

if.then1379:                                      ; preds = %if.end1363
  call fastcc void @S_scan_commit(%struct.RExC_state_t* %pRExC_state, %struct.scan_data_t* %data) #9
  %tobool1382 = icmp eq %struct.sv* %last_str.0, null
  %or.cond3453 = or i1 %tobool1382, %cmp1199.not
  br i1 %or.cond3453, label %if.end1424, label %if.then1383

if.then1383:                                      ; preds = %if.then1379
  %285 = load %struct.sv** %last_found1384, align 8, !tbaa !0
  call void @Perl_sv_setsv_flags(%struct.sv* %285, %struct.sv* %last_str.0, i32 2) #8
  %286 = load i32* %pos_min652, align 4, !tbaa !3
  store i32 %286, i32* %last_end1201, align 4, !tbaa !3
  %conv13883403 = zext i32 %286 to i64
  %287 = load i32* %utf8, align 4, !tbaa !3
  %cmp1390 = icmp eq i32 %287, 0
  br i1 %cmp1390, label %cond.false1394, label %cond.true1392

cond.true1392:                                    ; preds = %if.then1383
  %call1393 = call i64 @Perl_sv_len_utf8(%struct.sv* %last_str.0) #8
  br label %cond.end1397

cond.false1394:                                   ; preds = %if.then1383
  %sv_any1395 = getelementptr inbounds %struct.sv* %last_str.0, i64 0, i32 0
  %288 = load i8** %sv_any1395, align 8, !tbaa !0
  %xpv_cur1396 = getelementptr inbounds i8* %288, i64 8
  %289 = bitcast i8* %xpv_cur1396 to i64*
  %290 = load i64* %289, align 8, !tbaa !5
  br label %cond.end1397

cond.end1397:                                     ; preds = %cond.false1394, %cond.true1392
  %cond1398 = phi i64 [ %call1393, %cond.true1392 ], [ %290, %cond.false1394 ]
  %sub1399 = sub i64 %conv13883403, %cond1398
  %conv1400 = trunc i64 %sub1399 to i32
  store i32 %conv1400, i32* %last_start_min1401, align 4, !tbaa !3
  %tobool1402 = icmp eq i32 %or1014, 0
  br i1 %tobool1402, label %cond.false1404, label %cond.end1420

cond.false1404:                                   ; preds = %cond.end1397
  %291 = load i32* %pos_min652, align 4, !tbaa !3
  %292 = load i32* %pos_delta1375, align 4, !tbaa !3
  %add1407 = add nsw i32 %292, %291
  %conv14083404 = zext i32 %add1407 to i64
  %293 = load i32* %utf8, align 4, !tbaa !3
  %cmp1410 = icmp eq i32 %293, 0
  br i1 %cmp1410, label %cond.false1414, label %cond.true1412

cond.true1412:                                    ; preds = %cond.false1404
  %call1413 = call i64 @Perl_sv_len_utf8(%struct.sv* %last_str.0) #8
  br label %cond.end1417

cond.false1414:                                   ; preds = %cond.false1404
  %sv_any1415 = getelementptr inbounds %struct.sv* %last_str.0, i64 0, i32 0
  %294 = load i8** %sv_any1415, align 8, !tbaa !0
  %xpv_cur1416 = getelementptr inbounds i8* %294, i64 8
  %295 = bitcast i8* %xpv_cur1416 to i64*
  %296 = load i64* %295, align 8, !tbaa !5
  br label %cond.end1417

cond.end1417:                                     ; preds = %cond.false1414, %cond.true1412
  %cond1418 = phi i64 [ %call1413, %cond.true1412 ], [ %296, %cond.false1414 ]
  %sub1419 = sub i64 %conv14083404, %cond1418
  %phitmp = trunc i64 %sub1419 to i32
  br label %cond.end1420

cond.end1420:                                     ; preds = %cond.end1397, %cond.end1417
  %cond1421 = phi i32 [ %phitmp, %cond.end1417 ], [ 2147483647, %cond.end1397 ]
  store i32 %cond1421, i32* %last_start_max1423, align 4, !tbaa !3
  br label %if.end1424

if.end1424:                                       ; preds = %if.then1379, %cond.end1420
  store %struct.sv** %longest_float2533, %struct.sv*** %longest2534, align 8, !tbaa !0
  br label %if.end1427

if.end1427:                                       ; preds = %if.end1363, %if.end1424
  call void @Perl_sv_free(%struct.sv* %last_str.0) #8
  br label %if.end1428

if.end1428:                                       ; preds = %if.end1195, %if.end1427
  br i1 %tobool2356, label %land.lhs.true1430, label %optimize_curly_tail

land.lhs.true1430:                                ; preds = %if.end1428
  %and1431 = and i32 %fl.0, 512
  %tobool1432 = icmp eq i32 %and1431, 0
  br i1 %tobool1432, label %optimize_curly_tail, label %if.then1433

if.then1433:                                      ; preds = %land.lhs.true1430
  %297 = load i32* %flags2322, align 4, !tbaa !3
  %or1435 = or i32 %297, 512
  store i32 %or1435, i32* %flags2322, align 4, !tbaa !3
  br label %optimize_curly_tail

optimize_curly_tail:                              ; preds = %land.lhs.true1430, %if.end1428, %if.end818, %if.then1433, %if.then822
  %is_inf_internal.4 = phi i32 [ %or1013, %if.then1433 ], [ 1, %if.then822 ], [ 1, %if.end818 ], [ %or1013, %if.end1428 ], [ %or1013, %land.lhs.true1430 ]
  %is_inf.4 = phi i32 [ %or1014, %if.then1433 ], [ 1, %if.then822 ], [ 1, %if.end818 ], [ %or1014, %if.end1428 ], [ %or1014, %land.lhs.true1430 ]
  %delta.1 = phi i32 [ %add1019, %if.then1433 ], [ %delta.03597, %if.then822 ], [ %delta.03597, %if.end818 ], [ %add1019, %if.end1428 ], [ %add1019, %land.lhs.true1430 ]
  %pars.5 = phi i32 [ %pars.4, %if.then1433 ], [ %pars.03598, %if.then822 ], [ %pars.03598, %if.end818 ], [ %pars.4, %if.end1428 ], [ %pars.4, %land.lhs.true1430 ]
  %min.6 = phi i32 [ %add1004, %if.then1433 ], [ %min.4, %if.then822 ], [ %min.4, %if.end818 ], [ %add1004, %if.end1428 ], [ %add1004, %land.lhs.true1430 ]
  %flags.addr.3 = phi i32 [ %flags.addr.2, %if.then1433 ], [ %flags.addr.03601, %if.then822 ], [ %flags.addr.03601, %if.end818 ], [ %flags.addr.2, %if.end1428 ], [ %flags.addr.2, %land.lhs.true1430 ]
  %298 = load i8* %type168, align 1, !tbaa !1
  %cmp1439 = icmp eq i8 %298, 43
  br i1 %cmp1439, label %while.cond.backedge, label %while.cond1442.preheader

while.cond1442.preheader:                         ; preds = %optimize_curly_tail
  %call14433531 = call %struct.regnode* @Perl_regnext(%struct.regnode* %52) #9
  %type14443532 = getelementptr inbounds %struct.regnode* %call14433531, i64 0, i32 1
  %299 = load i8* %type14443532, align 1, !tbaa !1
  %idxprom14453533 = zext i8 %299 to i64
  %300 = lshr i64 2305843215372124160, %idxprom14453533
  %301 = and i64 %300, 1
  %cmp14483534 = icmp eq i64 %301, 0
  br i1 %cmp14483534, label %while.cond.backedge, label %land.rhs1450.lr.ph

land.rhs1450.lr.ph:                               ; preds = %while.cond1442.preheader
  %next_off1459 = getelementptr inbounds %struct.regnode* %52, i64 0, i32 2
  br label %land.rhs1450

land.rhs1450:                                     ; preds = %land.rhs1450.lr.ph, %while.body1456
  %call14433535 = phi %struct.regnode* [ %call14433531, %land.rhs1450.lr.ph ], [ %call1443, %while.body1456 ]
  %next_off1451 = getelementptr inbounds %struct.regnode* %call14433535, i64 0, i32 2
  %302 = load i16* %next_off1451, align 2, !tbaa !4
  %tobool1453 = icmp eq i16 %302, 0
  br i1 %tobool1453, label %while.cond.backedge, label %while.body1456

while.body1456:                                   ; preds = %land.rhs1450
  %303 = load i16* %next_off1459, align 2, !tbaa !4
  %add1461 = add i16 %303, %302
  store i16 %add1461, i16* %next_off1459, align 2, !tbaa !4
  %call1443 = call %struct.regnode* @Perl_regnext(%struct.regnode* %52) #9
  %type1444 = getelementptr inbounds %struct.regnode* %call1443, i64 0, i32 1
  %304 = load i8* %type1444, align 1, !tbaa !1
  %idxprom1445 = zext i8 %304 to i64
  %305 = lshr i64 2305843215372124160, %idxprom1445
  %306 = and i64 %305, 1
  %cmp1448 = icmp eq i64 %306, 0
  br i1 %cmp1448, label %while.cond.backedge, label %land.rhs1450

sw.default:                                       ; preds = %if.then778
  %and1465 = and i32 %flags.addr.03601, 1024
  %tobool1466 = icmp eq i32 %and1465, 0
  br i1 %tobool1466, label %if.end1470, label %if.then1467

if.then1467:                                      ; preds = %sw.default
  call fastcc void @S_scan_commit(%struct.RExC_state_t* %pRExC_state, %struct.scan_data_t* %data) #9
  store %struct.sv** %longest_float2533, %struct.sv*** %longest2534, align 8, !tbaa !0
  br label %if.end1470

if.end1470:                                       ; preds = %sw.default, %if.then1467
  %and1471 = and i32 %flags.addr.03601, 4096
  %tobool1472 = icmp eq i32 %and1471, 0
  br i1 %tobool1472, label %cleanup1477.thread3512, label %if.then1473

if.then1473:                                      ; preds = %if.end1470
  %307 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arraydecay.i3484 = getelementptr inbounds %struct.regnode_charclass_class* %307, i64 0, i32 5, i64 0
  %308 = bitcast i8* %arraydecay.i3484 to i32*
  store i32 0, i32* %308, align 1
  %309 = getelementptr inbounds %struct.regnode_charclass_class* %307, i64 0, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* %309, i8 -1, i64 32, i32 4, i1 false) #3
  %flags.i3485 = getelementptr inbounds %struct.regnode_charclass_class* %307, i64 0, i32 0
  store i8 80, i8* %flags.i3485, align 1, !tbaa !1
  %310 = load i32* %flags1.i, align 4, !tbaa !3
  %and.i3487 = and i32 %310, 2048
  %cmp.i3488 = icmp eq i32 %and.i3487, 0
  %..i3489 = select i1 %cmp.i3488, i8 80, i8 81
  store i8 %..i3489, i8* %flags.i3485, align 1, !tbaa !1
  br label %cleanup1477.thread3512

cleanup1477.thread3512:                           ; preds = %if.then1473, %if.end1470
  %and1476 = and i32 %flags.addr.03601, -6145
  call void @llvm.lifetime.end(i64 44, i8* %16) #3
  br label %if.end2552

cleanup1477:                                      ; preds = %if.then778
  %add.ptr787 = getelementptr inbounds %struct.regnode* %52, i64 1
  store %struct.regnode* %add.ptr787, %struct.regnode** %scan, align 8, !tbaa !0
  call void @llvm.lifetime.end(i64 44, i8* %16) #3
  br label %finish

if.else1480:                                      ; preds = %if.else773
  %memchr3333 = call i8* @memchr(i8* getelementptr inbounds ([15 x i8]* @PL_simple, i64 0, i64 0), i32 %conv2353675, i64 15)
  %tobool1484 = icmp eq i8* %memchr3333, null
  br i1 %tobool1484, label %if.else2306, label %if.then1485

if.then1485:                                      ; preds = %if.else1480
  %and1486 = and i32 %flags.addr.03601, 1024
  %tobool1487 = icmp eq i32 %and1486, 0
  br i1 %tobool1487, label %if.end1491, label %if.then1488

if.then1488:                                      ; preds = %if.then1485
  call fastcc void @S_scan_commit(%struct.RExC_state_t* %pRExC_state, %struct.scan_data_t* %data) #9
  %311 = load i32* %pos_min652, align 4, !tbaa !3
  %inc1490 = add nsw i32 %311, 1
  store i32 %inc1490, i32* %pos_min652, align 4, !tbaa !3
  br label %if.end1491

if.end1491:                                       ; preds = %if.then1485, %if.then1488
  %inc1492 = add nsw i32 %min.3, 1
  %and1493 = and i32 %flags.addr.03601, 6144
  %tobool1494 = icmp eq i32 %and1493, 0
  br i1 %tobool1494, label %if.end2552, label %if.then1495

if.then1495:                                      ; preds = %if.end1491
  %312 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags1497 = getelementptr inbounds %struct.regnode_charclass_class* %312, i64 0, i32 0
  %313 = load i8* %flags1497, align 1, !tbaa !1
  %and1499 = and i8 %313, -17
  store i8 %and1499, i8* %flags1497, align 1, !tbaa !1
  %314 = load %struct.regnode** %scan, align 8, !tbaa !0
  %type1501 = getelementptr inbounds %struct.regnode* %314, i64 0, i32 1
  %315 = load i8* %type1501, align 1, !tbaa !1
  %idxprom1502 = zext i8 %315 to i64
  %arrayidx1503 = getelementptr inbounds [62 x i8]* @PL_regkind, i64 0, i64 %idxprom1502
  %316 = load i8* %arrayidx1503, align 1, !tbaa !1
  %conv1504 = zext i8 %316 to i32
  switch i32 %conv1504, label %do_default [
    i32 28, label %sw.bb2221
    i32 14, label %sw.bb1512
    i32 17, label %sw.bb1550
    i32 18, label %sw.bb1558
    i32 19, label %sw.bb1671
    i32 20, label %sw.bb1701
    i32 21, label %sw.bb1815
    i32 22, label %sw.bb1845
    i32 23, label %sw.bb1947
    i32 24, label %sw.bb1977
    i32 25, label %sw.bb2079
    i32 26, label %sw.bb2144
  ]

do_default:                                       ; preds = %sw.bb1512, %if.then1495
  %and1507 = and i32 %flags.addr.03601, 4096
  %tobool1508 = icmp eq i32 %and1507, 0
  br i1 %tobool1508, label %sw.epilog2298, label %if.then1509

if.then1509:                                      ; preds = %do_default
  %317 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arraydecay.i3490 = getelementptr inbounds %struct.regnode_charclass_class* %317, i64 0, i32 5, i64 0
  %318 = bitcast i8* %arraydecay.i3490 to i32*
  store i32 0, i32* %318, align 1
  %319 = getelementptr inbounds %struct.regnode_charclass_class* %317, i64 0, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* %319, i8 -1, i64 32, i32 4, i1 false) #3
  %flags.i3491 = getelementptr inbounds %struct.regnode_charclass_class* %317, i64 0, i32 0
  store i8 80, i8* %flags.i3491, align 1, !tbaa !1
  %320 = load i32* %flags1.i, align 4, !tbaa !3
  %and.i3493 = and i32 %320, 2048
  %cmp.i3494 = icmp eq i32 %and.i3493, 0
  %..i3495 = select i1 %cmp.i3494, i8 80, i8 81
  store i8 %..i3495, i8* %flags.i3491, align 1, !tbaa !1
  br label %sw.epilog2298

sw.bb1512:                                        ; preds = %if.then1495
  %cmp1515 = icmp eq i8 %315, 15
  br i1 %cmp1515, label %do_default, label %if.end1518

if.end1518:                                       ; preds = %sw.bb1512
  %and1519 = and i32 %flags.addr.03601, 4096
  %tobool1520 = icmp eq i32 %and1519, 0
  br i1 %tobool1520, label %if.then1542, label %if.then1521

if.then1521:                                      ; preds = %if.end1518
  %321 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx1524 = getelementptr inbounds %struct.regnode_charclass_class* %321, i64 0, i32 4, i64 1
  %322 = load i8* %arrayidx1524, align 1, !tbaa !1
  %and1526 = and i8 %322, 4
  %tobool1527 = icmp eq i8 %and1526, 0
  %flags1530 = getelementptr inbounds %struct.regnode_charclass_class* %321, i64 0, i32 0
  br i1 %tobool1527, label %lor.rhs1528, label %if.end1537

lor.rhs1528:                                      ; preds = %if.then1521
  %323 = load i8* %flags1530, align 1, !tbaa !1
  %and1532 = and i8 %323, 8
  %phitmp3520 = icmp eq i8 %and1532, 0
  br label %if.end1537

if.end1537:                                       ; preds = %if.then1521, %lor.rhs1528
  %324 = phi i1 [ %phitmp3520, %lor.rhs1528 ], [ false, %if.then1521 ]
  %arraydecay.i3496 = getelementptr inbounds %struct.regnode_charclass_class* %321, i64 0, i32 5, i64 0
  %325 = bitcast i8* %arraydecay.i3496 to i32*
  store i32 0, i32* %325, align 1
  %326 = getelementptr inbounds %struct.regnode_charclass_class* %321, i64 0, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* %326, i8 -1, i64 32, i32 4, i1 false) #3
  store i8 80, i8* %flags1530, align 1, !tbaa !1
  %327 = load i32* %flags1.i, align 4, !tbaa !3
  %and.i3499 = and i32 %327, 2048
  %cmp.i3500 = icmp eq i32 %and.i3499, 0
  %..i3501 = select i1 %cmp.i3500, i8 80, i8 81
  store i8 %..i3501, i8* %flags1530, align 1, !tbaa !1
  %and1538 = and i32 %flags.addr.03601, 2048
  %tobool1539 = icmp ne i32 %and1538, 0
  %or.cond3454 = or i1 %tobool1539, %324
  br i1 %or.cond3454, label %if.then1542, label %sw.epilog2298

if.then1542:                                      ; preds = %if.end1518, %if.end1537
  %328 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx1545 = getelementptr inbounds %struct.regnode_charclass_class* %328, i64 0, i32 4, i64 1
  %329 = load i8* %arrayidx1545, align 1, !tbaa !1
  %and1547 = and i8 %329, -5
  store i8 %and1547, i8* %arrayidx1545, align 1, !tbaa !1
  br label %sw.epilog2298

sw.bb1550:                                        ; preds = %if.then1495
  %and1551 = and i32 %flags.addr.03601, 2048
  %tobool1552 = icmp eq i32 %and1551, 0
  %330 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %331 = bitcast %struct.regnode* %314 to %struct.regnode_charclass_class*
  br i1 %tobool1552, label %if.else1555, label %if.then1553

if.then1553:                                      ; preds = %sw.bb1550
  call fastcc void @S_cl_and(%struct.regnode_charclass_class* %330, %struct.regnode_charclass_class* %331) #9
  br label %sw.epilog2298

if.else1555:                                      ; preds = %sw.bb1550
  call fastcc void @S_cl_or(%struct.RExC_state_t* %pRExC_state, %struct.regnode_charclass_class* %330, %struct.regnode_charclass_class* %331) #9
  br label %sw.epilog2298

sw.bb1558:                                        ; preds = %if.then1495
  %and1559 = and i32 %flags.addr.03601, 2048
  %tobool1560 = icmp eq i32 %and1559, 0
  %332 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags1563 = getelementptr inbounds %struct.regnode_charclass_class* %332, i64 0, i32 0
  %333 = load i8* %flags1563, align 1, !tbaa !1
  %and1565 = and i8 %333, 1
  %tobool1566 = icmp ne i8 %and1565, 0
  br i1 %tobool1560, label %if.else1615, label %if.then1561

if.then1561:                                      ; preds = %sw.bb1558
  br i1 %tobool1566, label %sw.epilog2298, label %if.then1567

if.then1567:                                      ; preds = %if.then1561
  %arrayidx1570 = getelementptr inbounds %struct.regnode_charclass_class* %332, i64 0, i32 5, i64 0
  %334 = load i8* %arrayidx1570, align 1, !tbaa !1
  %and1572 = and i8 %334, -3
  store i8 %and1572, i8* %arrayidx1570, align 1, !tbaa !1
  br label %for.body1577

for.body1577:                                     ; preds = %for.inc1611, %if.then1567
  %value.13557 = phi i32 [ 0, %if.then1567 ], [ %inc1612, %for.inc1611 ]
  %value.1.off = add i32 %value.13557, -65
  %335 = icmp ult i32 %value.1.off, 26
  %value.1.off3388 = add i32 %value.13557, -97
  %336 = icmp ult i32 %value.1.off3388, 26
  %or.cond3456 = or i1 %335, %336
  br i1 %or.cond3456, label %for.inc1611, label %lor.lhs.false1589

lor.lhs.false1589:                                ; preds = %for.body1577
  %value.1.off3389 = add i32 %value.13557, -48
  %337 = icmp ult i32 %value.1.off3389, 10
  %cmp1596 = icmp eq i32 %value.13557, 95
  %or.cond2613 = or i1 %337, %cmp1596
  br i1 %or.cond2613, label %for.inc1611, label %if.then1598

if.then1598:                                      ; preds = %lor.lhs.false1589
  %and1599 = and i32 %value.13557, 7
  %shl1600 = shl i32 1, %and1599
  %neg = xor i32 %shl1600, 255
  %shr16013390 = lshr i32 %value.13557, 3
  %and1602 = and i32 %shr16013390, 31
  %idxprom16033391 = zext i32 %and1602 to i64
  %338 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx1606 = getelementptr inbounds %struct.regnode_charclass_class* %338, i64 0, i32 4, i64 %idxprom16033391
  %339 = load i8* %arrayidx1606, align 1, !tbaa !1
  %conv16073392 = zext i8 %339 to i32
  %and1608 = and i32 %conv16073392, %neg
  %conv1609 = trunc i32 %and1608 to i8
  store i8 %conv1609, i8* %arrayidx1606, align 1, !tbaa !1
  br label %for.inc1611

for.inc1611:                                      ; preds = %if.then1598, %for.body1577, %lor.lhs.false1589
  %inc1612 = add nsw i32 %value.13557, 1
  %exitcond3627 = icmp eq i32 %inc1612, 256
  br i1 %exitcond3627, label %sw.epilog2298, label %for.body1577

if.else1615:                                      ; preds = %sw.bb1558
  br i1 %tobool1566, label %if.then1621, label %for.body1632

if.then1621:                                      ; preds = %if.else1615
  %arrayidx1624 = getelementptr inbounds %struct.regnode_charclass_class* %332, i64 0, i32 5, i64 0
  %340 = load i8* %arrayidx1624, align 1, !tbaa !1
  %or1626 = or i8 %340, 1
  store i8 %or1626, i8* %arrayidx1624, align 1, !tbaa !1
  br label %sw.epilog2298

for.body1632:                                     ; preds = %if.else1615, %for.inc1666
  %value.23559 = phi i32 [ %inc1667, %for.inc1666 ], [ 0, %if.else1615 ]
  %value.2.off = add i32 %value.23559, -65
  %341 = icmp ult i32 %value.2.off, 26
  %value.2.off3381 = add i32 %value.23559, -97
  %342 = icmp ult i32 %value.2.off3381, 26
  %or.cond3458 = or i1 %341, %342
  br i1 %or.cond3458, label %if.then1653, label %lor.lhs.false1644

lor.lhs.false1644:                                ; preds = %for.body1632
  %value.2.off3382 = add i32 %value.23559, -48
  %343 = icmp ult i32 %value.2.off3382, 10
  %cmp1651 = icmp eq i32 %value.23559, 95
  %or.cond2617 = or i1 %343, %cmp1651
  br i1 %or.cond2617, label %if.then1653, label %for.inc1666

if.then1653:                                      ; preds = %lor.lhs.false1644, %for.body1632
  %and1654 = and i32 %value.23559, 7
  %shl1655 = shl i32 1, %and1654
  %shr16563383 = lshr i32 %value.23559, 3
  %and1657 = and i32 %shr16563383, 31
  %idxprom16583384 = zext i32 %and1657 to i64
  %344 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx1661 = getelementptr inbounds %struct.regnode_charclass_class* %344, i64 0, i32 4, i64 %idxprom16583384
  %345 = load i8* %arrayidx1661, align 1, !tbaa !1
  %conv16623385 = zext i8 %345 to i32
  %or1663 = or i32 %conv16623385, %shl1655
  %conv1664 = trunc i32 %or1663 to i8
  store i8 %conv1664, i8* %arrayidx1661, align 1, !tbaa !1
  br label %for.inc1666

for.inc1666:                                      ; preds = %if.then1653, %lor.lhs.false1644
  %inc1667 = add nsw i32 %value.23559, 1
  %exitcond3628 = icmp eq i32 %inc1667, 256
  br i1 %exitcond3628, label %sw.epilog2298, label %for.body1632

sw.bb1671:                                        ; preds = %if.then1495
  %and1672 = and i32 %flags.addr.03601, 2048
  %tobool1673 = icmp eq i32 %and1672, 0
  %346 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  br i1 %tobool1673, label %if.else1688, label %if.then1674

if.then1674:                                      ; preds = %sw.bb1671
  %flags1676 = getelementptr inbounds %struct.regnode_charclass_class* %346, i64 0, i32 0
  %347 = load i8* %flags1676, align 1, !tbaa !1
  %and1678 = and i8 %347, 1
  %tobool1679 = icmp eq i8 %and1678, 0
  br i1 %tobool1679, label %sw.epilog2298, label %if.then1680

if.then1680:                                      ; preds = %if.then1674
  %arrayidx1683 = getelementptr inbounds %struct.regnode_charclass_class* %346, i64 0, i32 5, i64 0
  %348 = load i8* %arrayidx1683, align 1, !tbaa !1
  %and1685 = and i8 %348, -3
  store i8 %and1685, i8* %arrayidx1683, align 1, !tbaa !1
  br label %sw.epilog2298

if.else1688:                                      ; preds = %sw.bb1671
  %arrayidx1691 = getelementptr inbounds %struct.regnode_charclass_class* %346, i64 0, i32 5, i64 0
  %349 = load i8* %arrayidx1691, align 1, !tbaa !1
  %or1693 = or i8 %349, 1
  store i8 %or1693, i8* %arrayidx1691, align 1, !tbaa !1
  %350 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags1696 = getelementptr inbounds %struct.regnode_charclass_class* %350, i64 0, i32 0
  %351 = load i8* %flags1696, align 1, !tbaa !1
  %or1698 = or i8 %351, 1
  store i8 %or1698, i8* %flags1696, align 1, !tbaa !1
  br label %sw.epilog2298

sw.bb1701:                                        ; preds = %if.then1495
  %and1702 = and i32 %flags.addr.03601, 2048
  %tobool1703 = icmp eq i32 %and1702, 0
  %352 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags1706 = getelementptr inbounds %struct.regnode_charclass_class* %352, i64 0, i32 0
  %353 = load i8* %flags1706, align 1, !tbaa !1
  %and1708 = and i8 %353, 1
  %tobool1709 = icmp ne i8 %and1708, 0
  br i1 %tobool1703, label %if.else1759, label %if.then1704

if.then1704:                                      ; preds = %sw.bb1701
  br i1 %tobool1709, label %sw.epilog2298, label %if.then1710

if.then1710:                                      ; preds = %if.then1704
  %arrayidx1713 = getelementptr inbounds %struct.regnode_charclass_class* %352, i64 0, i32 5, i64 0
  %354 = load i8* %arrayidx1713, align 1, !tbaa !1
  %and1715 = and i8 %354, -2
  store i8 %and1715, i8* %arrayidx1713, align 1, !tbaa !1
  br label %for.body1720

for.body1720:                                     ; preds = %for.inc1755, %if.then1710
  %value.33552 = phi i32 [ 0, %if.then1710 ], [ %inc1756, %for.inc1755 ]
  %value.3.off = add i32 %value.33552, -65
  %355 = icmp ult i32 %value.3.off, 26
  %value.3.off3374 = add i32 %value.33552, -97
  %356 = icmp ult i32 %value.3.off3374, 26
  %or.cond3460 = or i1 %355, %356
  br i1 %or.cond3460, label %if.then1741, label %lor.lhs.false1732

lor.lhs.false1732:                                ; preds = %for.body1720
  %value.3.off3375 = add i32 %value.33552, -48
  %357 = icmp ult i32 %value.3.off3375, 10
  %cmp1739 = icmp eq i32 %value.33552, 95
  %or.cond2621 = or i1 %357, %cmp1739
  br i1 %or.cond2621, label %if.then1741, label %for.inc1755

if.then1741:                                      ; preds = %lor.lhs.false1732, %for.body1720
  %and1742 = and i32 %value.33552, 7
  %shl1743 = shl i32 1, %and1742
  %neg1744 = xor i32 %shl1743, 255
  %shr17453376 = lshr i32 %value.33552, 3
  %and1746 = and i32 %shr17453376, 31
  %idxprom17473377 = zext i32 %and1746 to i64
  %358 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx1750 = getelementptr inbounds %struct.regnode_charclass_class* %358, i64 0, i32 4, i64 %idxprom17473377
  %359 = load i8* %arrayidx1750, align 1, !tbaa !1
  %conv17513378 = zext i8 %359 to i32
  %and1752 = and i32 %conv17513378, %neg1744
  %conv1753 = trunc i32 %and1752 to i8
  store i8 %conv1753, i8* %arrayidx1750, align 1, !tbaa !1
  br label %for.inc1755

for.inc1755:                                      ; preds = %if.then1741, %lor.lhs.false1732
  %inc1756 = add nsw i32 %value.33552, 1
  %exitcond3625 = icmp eq i32 %inc1756, 256
  br i1 %exitcond3625, label %sw.epilog2298, label %for.body1720

if.else1759:                                      ; preds = %sw.bb1701
  br i1 %tobool1709, label %if.then1765, label %for.body1776

if.then1765:                                      ; preds = %if.else1759
  %arrayidx1768 = getelementptr inbounds %struct.regnode_charclass_class* %352, i64 0, i32 5, i64 0
  %360 = load i8* %arrayidx1768, align 1, !tbaa !1
  %or1770 = or i8 %360, 2
  store i8 %or1770, i8* %arrayidx1768, align 1, !tbaa !1
  br label %sw.epilog2298

for.body1776:                                     ; preds = %if.else1759, %for.inc1810
  %value.43555 = phi i32 [ %inc1811, %for.inc1810 ], [ 0, %if.else1759 ]
  %value.4.off = add i32 %value.43555, -65
  %361 = icmp ult i32 %value.4.off, 26
  %value.4.off3367 = add i32 %value.43555, -97
  %362 = icmp ult i32 %value.4.off3367, 26
  %or.cond3462 = or i1 %361, %362
  br i1 %or.cond3462, label %for.inc1810, label %lor.lhs.false1788

lor.lhs.false1788:                                ; preds = %for.body1776
  %value.4.off3368 = add i32 %value.43555, -48
  %363 = icmp ult i32 %value.4.off3368, 10
  %cmp1795 = icmp eq i32 %value.43555, 95
  %or.cond2625 = or i1 %363, %cmp1795
  br i1 %or.cond2625, label %for.inc1810, label %if.then1797

if.then1797:                                      ; preds = %lor.lhs.false1788
  %and1798 = and i32 %value.43555, 7
  %shl1799 = shl i32 1, %and1798
  %shr18003369 = lshr i32 %value.43555, 3
  %and1801 = and i32 %shr18003369, 31
  %idxprom18023370 = zext i32 %and1801 to i64
  %364 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx1805 = getelementptr inbounds %struct.regnode_charclass_class* %364, i64 0, i32 4, i64 %idxprom18023370
  %365 = load i8* %arrayidx1805, align 1, !tbaa !1
  %conv18063371 = zext i8 %365 to i32
  %or1807 = or i32 %conv18063371, %shl1799
  %conv1808 = trunc i32 %or1807 to i8
  store i8 %conv1808, i8* %arrayidx1805, align 1, !tbaa !1
  br label %for.inc1810

for.inc1810:                                      ; preds = %if.then1797, %for.body1776, %lor.lhs.false1788
  %inc1811 = add nsw i32 %value.43555, 1
  %exitcond3626 = icmp eq i32 %inc1811, 256
  br i1 %exitcond3626, label %sw.epilog2298, label %for.body1776

sw.bb1815:                                        ; preds = %if.then1495
  %and1816 = and i32 %flags.addr.03601, 2048
  %tobool1817 = icmp eq i32 %and1816, 0
  %366 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags1820 = getelementptr inbounds %struct.regnode_charclass_class* %366, i64 0, i32 0
  %367 = load i8* %flags1820, align 1, !tbaa !1
  br i1 %tobool1817, label %if.else1832, label %if.then1818

if.then1818:                                      ; preds = %sw.bb1815
  %and1822 = and i8 %367, 1
  %tobool1823 = icmp eq i8 %and1822, 0
  br i1 %tobool1823, label %sw.epilog2298, label %if.then1824

if.then1824:                                      ; preds = %if.then1818
  %arrayidx1827 = getelementptr inbounds %struct.regnode_charclass_class* %366, i64 0, i32 5, i64 0
  %368 = load i8* %arrayidx1827, align 1, !tbaa !1
  %and1829 = and i8 %368, -2
  store i8 %and1829, i8* %arrayidx1827, align 1, !tbaa !1
  br label %sw.epilog2298

if.else1832:                                      ; preds = %sw.bb1815
  %or1836 = or i8 %367, 1
  store i8 %or1836, i8* %flags1820, align 1, !tbaa !1
  %369 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx1840 = getelementptr inbounds %struct.regnode_charclass_class* %369, i64 0, i32 5, i64 0
  %370 = load i8* %arrayidx1840, align 1, !tbaa !1
  %or1842 = or i8 %370, 2
  store i8 %or1842, i8* %arrayidx1840, align 1, !tbaa !1
  br label %sw.epilog2298

sw.bb1845:                                        ; preds = %if.then1495
  %and1846 = and i32 %flags.addr.03601, 2048
  %tobool1847 = icmp eq i32 %and1846, 0
  %371 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags1850 = getelementptr inbounds %struct.regnode_charclass_class* %371, i64 0, i32 0
  %372 = load i8* %flags1850, align 1, !tbaa !1
  %and1852 = and i8 %372, 1
  %tobool1853 = icmp ne i8 %and1852, 0
  br i1 %tobool1847, label %if.else1897, label %if.then1848

if.then1848:                                      ; preds = %sw.bb1845
  br i1 %tobool1853, label %sw.epilog2298, label %if.then1854

if.then1854:                                      ; preds = %if.then1848
  %arrayidx1857 = getelementptr inbounds %struct.regnode_charclass_class* %371, i64 0, i32 5, i64 0
  %373 = load i8* %arrayidx1857, align 1, !tbaa !1
  %and1859 = and i8 %373, -9
  store i8 %and1859, i8* %arrayidx1857, align 1, !tbaa !1
  br label %for.body1864

for.body1864:                                     ; preds = %for.inc1893, %if.then1854
  %value.53547 = phi i32 [ 0, %if.then1854 ], [ %inc1894, %for.inc1893 ]
  switch i32 %value.53547, label %if.then1879 [
    i32 32, label %for.inc1893
    i32 13, label %for.inc1893
    i32 12, label %for.inc1893
    i32 10, label %for.inc1893
    i32 9, label %for.inc1893
  ]

if.then1879:                                      ; preds = %for.body1864
  %and1880 = and i32 %value.53547, 7
  %shl1881 = shl i32 1, %and1880
  %neg1882 = xor i32 %shl1881, 255
  %shr18833362 = lshr i32 %value.53547, 3
  %and1884 = and i32 %shr18833362, 31
  %idxprom18853363 = zext i32 %and1884 to i64
  %374 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx1888 = getelementptr inbounds %struct.regnode_charclass_class* %374, i64 0, i32 4, i64 %idxprom18853363
  %375 = load i8* %arrayidx1888, align 1, !tbaa !1
  %conv18893364 = zext i8 %375 to i32
  %and1890 = and i32 %conv18893364, %neg1882
  %conv1891 = trunc i32 %and1890 to i8
  store i8 %conv1891, i8* %arrayidx1888, align 1, !tbaa !1
  br label %for.inc1893

for.inc1893:                                      ; preds = %for.body1864, %for.body1864, %for.body1864, %for.body1864, %for.body1864, %if.then1879
  %inc1894 = add nsw i32 %value.53547, 1
  %exitcond3623 = icmp eq i32 %inc1894, 256
  br i1 %exitcond3623, label %sw.epilog2298, label %for.body1864

if.else1897:                                      ; preds = %sw.bb1845
  br i1 %tobool1853, label %if.then1903, label %for.body1914

if.then1903:                                      ; preds = %if.else1897
  %arrayidx1906 = getelementptr inbounds %struct.regnode_charclass_class* %371, i64 0, i32 5, i64 0
  %376 = load i8* %arrayidx1906, align 1, !tbaa !1
  %or1908 = or i8 %376, 4
  store i8 %or1908, i8* %arrayidx1906, align 1, !tbaa !1
  br label %sw.epilog2298

for.body1914:                                     ; preds = %if.else1897, %for.inc1942
  %value.63549 = phi i32 [ %inc1943, %for.inc1942 ], [ 0, %if.else1897 ]
  switch i32 %value.63549, label %for.inc1942 [
    i32 32, label %if.then1929
    i32 13, label %if.then1929
    i32 12, label %if.then1929
    i32 10, label %if.then1929
    i32 9, label %if.then1929
  ]

if.then1929:                                      ; preds = %for.body1914, %for.body1914, %for.body1914, %for.body1914, %for.body1914
  %and1930 = and i32 %value.63549, 7
  %shl1931 = shl i32 1, %and1930
  %shr19323357 = lshr i32 %value.63549, 3
  %and1933 = and i32 %shr19323357, 31
  %idxprom19343358 = zext i32 %and1933 to i64
  %377 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx1937 = getelementptr inbounds %struct.regnode_charclass_class* %377, i64 0, i32 4, i64 %idxprom19343358
  %378 = load i8* %arrayidx1937, align 1, !tbaa !1
  %conv19383359 = zext i8 %378 to i32
  %or1939 = or i32 %conv19383359, %shl1931
  %conv1940 = trunc i32 %or1939 to i8
  store i8 %conv1940, i8* %arrayidx1937, align 1, !tbaa !1
  br label %for.inc1942

for.inc1942:                                      ; preds = %for.body1914, %if.then1929
  %inc1943 = add nsw i32 %value.63549, 1
  %exitcond3624 = icmp eq i32 %inc1943, 256
  br i1 %exitcond3624, label %sw.epilog2298, label %for.body1914

sw.bb1947:                                        ; preds = %if.then1495
  %and1948 = and i32 %flags.addr.03601, 2048
  %tobool1949 = icmp eq i32 %and1948, 0
  %379 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags1952 = getelementptr inbounds %struct.regnode_charclass_class* %379, i64 0, i32 0
  %380 = load i8* %flags1952, align 1, !tbaa !1
  br i1 %tobool1949, label %if.else1964, label %if.then1950

if.then1950:                                      ; preds = %sw.bb1947
  %and1954 = and i8 %380, 1
  %tobool1955 = icmp eq i8 %and1954, 0
  br i1 %tobool1955, label %sw.epilog2298, label %if.then1956

if.then1956:                                      ; preds = %if.then1950
  %arrayidx1959 = getelementptr inbounds %struct.regnode_charclass_class* %379, i64 0, i32 5, i64 0
  %381 = load i8* %arrayidx1959, align 1, !tbaa !1
  %and1961 = and i8 %381, -9
  store i8 %and1961, i8* %arrayidx1959, align 1, !tbaa !1
  br label %sw.epilog2298

if.else1964:                                      ; preds = %sw.bb1947
  %or1968 = or i8 %380, 1
  store i8 %or1968, i8* %flags1952, align 1, !tbaa !1
  %382 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx1972 = getelementptr inbounds %struct.regnode_charclass_class* %382, i64 0, i32 5, i64 0
  %383 = load i8* %arrayidx1972, align 1, !tbaa !1
  %or1974 = or i8 %383, 4
  store i8 %or1974, i8* %arrayidx1972, align 1, !tbaa !1
  br label %sw.epilog2298

sw.bb1977:                                        ; preds = %if.then1495
  %and1978 = and i32 %flags.addr.03601, 2048
  %tobool1979 = icmp eq i32 %and1978, 0
  %384 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags1982 = getelementptr inbounds %struct.regnode_charclass_class* %384, i64 0, i32 0
  %385 = load i8* %flags1982, align 1, !tbaa !1
  %and1984 = and i8 %385, 1
  %tobool1985 = icmp ne i8 %and1984, 0
  br i1 %tobool1979, label %if.else2029, label %if.then1980

if.then1980:                                      ; preds = %sw.bb1977
  br i1 %tobool1985, label %sw.epilog2298, label %if.then1986

if.then1986:                                      ; preds = %if.then1980
  %arrayidx1989 = getelementptr inbounds %struct.regnode_charclass_class* %384, i64 0, i32 5, i64 0
  %386 = load i8* %arrayidx1989, align 1, !tbaa !1
  %and1991 = and i8 %386, -5
  store i8 %and1991, i8* %arrayidx1989, align 1, !tbaa !1
  br label %for.body1996

for.body1996:                                     ; preds = %for.inc2025, %if.then1986
  %value.73542 = phi i32 [ 0, %if.then1986 ], [ %inc2026, %for.inc2025 ]
  switch i32 %value.73542, label %for.inc2025 [
    i32 32, label %if.then2011
    i32 13, label %if.then2011
    i32 12, label %if.then2011
    i32 10, label %if.then2011
    i32 9, label %if.then2011
  ]

if.then2011:                                      ; preds = %for.body1996, %for.body1996, %for.body1996, %for.body1996, %for.body1996
  %and2012 = and i32 %value.73542, 7
  %shl2013 = shl i32 1, %and2012
  %neg2014 = xor i32 %shl2013, 255
  %shr20153352 = lshr i32 %value.73542, 3
  %and2016 = and i32 %shr20153352, 31
  %idxprom20173353 = zext i32 %and2016 to i64
  %387 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx2020 = getelementptr inbounds %struct.regnode_charclass_class* %387, i64 0, i32 4, i64 %idxprom20173353
  %388 = load i8* %arrayidx2020, align 1, !tbaa !1
  %conv20213354 = zext i8 %388 to i32
  %and2022 = and i32 %conv20213354, %neg2014
  %conv2023 = trunc i32 %and2022 to i8
  store i8 %conv2023, i8* %arrayidx2020, align 1, !tbaa !1
  br label %for.inc2025

for.inc2025:                                      ; preds = %for.body1996, %if.then2011
  %inc2026 = add nsw i32 %value.73542, 1
  %exitcond3621 = icmp eq i32 %inc2026, 256
  br i1 %exitcond3621, label %sw.epilog2298, label %for.body1996

if.else2029:                                      ; preds = %sw.bb1977
  br i1 %tobool1985, label %if.then2035, label %for.body2046

if.then2035:                                      ; preds = %if.else2029
  %arrayidx2038 = getelementptr inbounds %struct.regnode_charclass_class* %384, i64 0, i32 5, i64 0
  %389 = load i8* %arrayidx2038, align 1, !tbaa !1
  %or2040 = or i8 %389, 8
  store i8 %or2040, i8* %arrayidx2038, align 1, !tbaa !1
  br label %sw.epilog2298

for.body2046:                                     ; preds = %if.else2029, %for.inc2074
  %value.83545 = phi i32 [ %inc2075, %for.inc2074 ], [ 0, %if.else2029 ]
  switch i32 %value.83545, label %if.then2061 [
    i32 32, label %for.inc2074
    i32 13, label %for.inc2074
    i32 12, label %for.inc2074
    i32 10, label %for.inc2074
    i32 9, label %for.inc2074
  ]

if.then2061:                                      ; preds = %for.body2046
  %and2062 = and i32 %value.83545, 7
  %shl2063 = shl i32 1, %and2062
  %shr20643347 = lshr i32 %value.83545, 3
  %and2065 = and i32 %shr20643347, 31
  %idxprom20663348 = zext i32 %and2065 to i64
  %390 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx2069 = getelementptr inbounds %struct.regnode_charclass_class* %390, i64 0, i32 4, i64 %idxprom20663348
  %391 = load i8* %arrayidx2069, align 1, !tbaa !1
  %conv20703349 = zext i8 %391 to i32
  %or2071 = or i32 %conv20703349, %shl2063
  %conv2072 = trunc i32 %or2071 to i8
  store i8 %conv2072, i8* %arrayidx2069, align 1, !tbaa !1
  br label %for.inc2074

for.inc2074:                                      ; preds = %for.body2046, %for.body2046, %for.body2046, %for.body2046, %for.body2046, %if.then2061
  %inc2075 = add nsw i32 %value.83545, 1
  %exitcond3622 = icmp eq i32 %inc2075, 256
  br i1 %exitcond3622, label %sw.epilog2298, label %for.body2046

sw.bb2079:                                        ; preds = %if.then1495
  %and2080 = and i32 %flags.addr.03601, 2048
  %tobool2081 = icmp eq i32 %and2080, 0
  %392 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags2084 = getelementptr inbounds %struct.regnode_charclass_class* %392, i64 0, i32 0
  %393 = load i8* %flags2084, align 1, !tbaa !1
  br i1 %tobool2081, label %if.else2131, label %if.then2082

if.then2082:                                      ; preds = %sw.bb2079
  %and2086 = and i8 %393, 1
  %tobool2087 = icmp eq i8 %and2086, 0
  br i1 %tobool2087, label %sw.epilog2298, label %if.then2088

if.then2088:                                      ; preds = %if.then2082
  %arrayidx2091 = getelementptr inbounds %struct.regnode_charclass_class* %392, i64 0, i32 5, i64 0
  %394 = load i8* %arrayidx2091, align 1, !tbaa !1
  %and2093 = and i8 %394, -5
  store i8 %and2093, i8* %arrayidx2091, align 1, !tbaa !1
  br label %for.body2098

for.body2098:                                     ; preds = %for.inc2127, %if.then2088
  %value.93540 = phi i32 [ 0, %if.then2088 ], [ %inc2128, %for.inc2127 ]
  switch i32 %value.93540, label %if.then2113 [
    i32 32, label %for.inc2127
    i32 13, label %for.inc2127
    i32 12, label %for.inc2127
    i32 10, label %for.inc2127
    i32 9, label %for.inc2127
  ]

if.then2113:                                      ; preds = %for.body2098
  %and2114 = and i32 %value.93540, 7
  %shl2115 = shl i32 1, %and2114
  %neg2116 = xor i32 %shl2115, 255
  %shr21173344 = lshr i32 %value.93540, 3
  %and2118 = and i32 %shr21173344, 31
  %idxprom21193345 = zext i32 %and2118 to i64
  %395 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx2122 = getelementptr inbounds %struct.regnode_charclass_class* %395, i64 0, i32 4, i64 %idxprom21193345
  %396 = load i8* %arrayidx2122, align 1, !tbaa !1
  %conv21233346 = zext i8 %396 to i32
  %and2124 = and i32 %conv21233346, %neg2116
  %conv2125 = trunc i32 %and2124 to i8
  store i8 %conv2125, i8* %arrayidx2122, align 1, !tbaa !1
  br label %for.inc2127

for.inc2127:                                      ; preds = %for.body2098, %for.body2098, %for.body2098, %for.body2098, %for.body2098, %if.then2113
  %inc2128 = add nsw i32 %value.93540, 1
  %exitcond3620 = icmp eq i32 %inc2128, 256
  br i1 %exitcond3620, label %sw.epilog2298, label %for.body2098

if.else2131:                                      ; preds = %sw.bb2079
  %or2135 = or i8 %393, 1
  store i8 %or2135, i8* %flags2084, align 1, !tbaa !1
  %397 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx2139 = getelementptr inbounds %struct.regnode_charclass_class* %397, i64 0, i32 5, i64 0
  %398 = load i8* %arrayidx2139, align 1, !tbaa !1
  %or2141 = or i8 %398, 8
  store i8 %or2141, i8* %arrayidx2139, align 1, !tbaa !1
  br label %sw.epilog2298

sw.bb2144:                                        ; preds = %if.then1495
  %and2145 = and i32 %flags.addr.03601, 2048
  %tobool2146 = icmp eq i32 %and2145, 0
  %399 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  br i1 %tobool2146, label %if.else2180, label %if.then2147

if.then2147:                                      ; preds = %sw.bb2144
  %arrayidx2150 = getelementptr inbounds %struct.regnode_charclass_class* %399, i64 0, i32 5, i64 0
  %400 = load i8* %arrayidx2150, align 1, !tbaa !1
  %and2152 = and i8 %400, -33
  store i8 %and2152, i8* %arrayidx2150, align 1, !tbaa !1
  br label %for.body2157

for.body2157:                                     ; preds = %for.inc2177, %if.then2147
  %value.103536 = phi i32 [ 0, %if.then2147 ], [ %inc2178, %for.inc2177 ]
  %value.10.off = add i32 %value.103536, -48
  %401 = icmp ult i32 %value.10.off, 10
  br i1 %401, label %for.inc2177, label %if.then2163

if.then2163:                                      ; preds = %for.body2157
  %and2164 = and i32 %value.103536, 7
  %shl2165 = shl i32 1, %and2164
  %neg2166 = xor i32 %shl2165, 255
  %shr21673339 = lshr i32 %value.103536, 3
  %and2168 = and i32 %shr21673339, 31
  %idxprom21693340 = zext i32 %and2168 to i64
  %402 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx2172 = getelementptr inbounds %struct.regnode_charclass_class* %402, i64 0, i32 4, i64 %idxprom21693340
  %403 = load i8* %arrayidx2172, align 1, !tbaa !1
  %conv21733341 = zext i8 %403 to i32
  %and2174 = and i32 %conv21733341, %neg2166
  %conv2175 = trunc i32 %and2174 to i8
  store i8 %conv2175, i8* %arrayidx2172, align 1, !tbaa !1
  br label %for.inc2177

for.inc2177:                                      ; preds = %if.then2163, %for.body2157
  %inc2178 = add nsw i32 %value.103536, 1
  %exitcond = icmp eq i32 %inc2178, 256
  br i1 %exitcond, label %sw.epilog2298, label %for.body2157

if.else2180:                                      ; preds = %sw.bb2144
  %flags2182 = getelementptr inbounds %struct.regnode_charclass_class* %399, i64 0, i32 0
  %404 = load i8* %flags2182, align 1, !tbaa !1
  %and2184 = and i8 %404, 1
  %tobool2185 = icmp eq i8 %and2184, 0
  br i1 %tobool2185, label %for.body2197, label %if.then2186

if.then2186:                                      ; preds = %if.else2180
  %arrayidx2189 = getelementptr inbounds %struct.regnode_charclass_class* %399, i64 0, i32 5, i64 0
  %405 = load i8* %arrayidx2189, align 1, !tbaa !1
  %or2191 = or i8 %405, 16
  store i8 %or2191, i8* %arrayidx2189, align 1, !tbaa !1
  br label %sw.epilog2298

for.body2197:                                     ; preds = %if.else2180, %for.inc2216
  %value.113538 = phi i32 [ %inc2217, %for.inc2216 ], [ 0, %if.else2180 ]
  %value.11.off = add i32 %value.113538, -48
  %406 = icmp ult i32 %value.11.off, 10
  br i1 %406, label %if.then2203, label %for.inc2216

if.then2203:                                      ; preds = %for.body2197
  %and2204 = and i32 %value.113538, 7
  %shl2205 = shl i32 1, %and2204
  %shr22063334 = lshr i32 %value.113538, 3
  %and2207 = and i32 %shr22063334, 31
  %idxprom22083335 = zext i32 %and2207 to i64
  %407 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx2211 = getelementptr inbounds %struct.regnode_charclass_class* %407, i64 0, i32 4, i64 %idxprom22083335
  %408 = load i8* %arrayidx2211, align 1, !tbaa !1
  %conv22123336 = zext i8 %408 to i32
  %or2213 = or i32 %conv22123336, %shl2205
  %conv2214 = trunc i32 %or2213 to i8
  store i8 %conv2214, i8* %arrayidx2211, align 1, !tbaa !1
  br label %for.inc2216

for.inc2216:                                      ; preds = %for.body2197, %if.then2203
  %inc2217 = add nsw i32 %value.113538, 1
  %exitcond3619 = icmp eq i32 %inc2217, 256
  br i1 %exitcond3619, label %sw.epilog2298, label %for.body2197

sw.bb2221:                                        ; preds = %if.then1495
  %and2222 = and i32 %flags.addr.03601, 2048
  %tobool2223 = icmp eq i32 %and2222, 0
  %409 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  br i1 %tobool2223, label %if.else2257, label %if.then2224

if.then2224:                                      ; preds = %sw.bb2221
  %arrayidx2227 = getelementptr inbounds %struct.regnode_charclass_class* %409, i64 0, i32 5, i64 0
  %410 = load i8* %arrayidx2227, align 1, !tbaa !1
  %and2229 = and i8 %410, -17
  store i8 %and2229, i8* %arrayidx2227, align 1, !tbaa !1
  br label %for.body2234

for.body2234:                                     ; preds = %for.inc2254, %if.then2224
  %value.123562 = phi i32 [ 0, %if.then2224 ], [ %inc2255, %for.inc2254 ]
  %value.12.off = add i32 %value.123562, -48
  %411 = icmp ult i32 %value.12.off, 10
  br i1 %411, label %if.then2240, label %for.inc2254

if.then2240:                                      ; preds = %for.body2234
  %and2241 = and i32 %value.123562, 7
  %shl2242 = shl i32 1, %and2241
  %neg2243 = xor i32 %shl2242, 255
  %shr22443400 = lshr i32 %value.123562, 3
  %and2245 = and i32 %shr22443400, 31
  %idxprom22463401 = zext i32 %and2245 to i64
  %412 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx2249 = getelementptr inbounds %struct.regnode_charclass_class* %412, i64 0, i32 4, i64 %idxprom22463401
  %413 = load i8* %arrayidx2249, align 1, !tbaa !1
  %conv22503402 = zext i8 %413 to i32
  %and2251 = and i32 %conv22503402, %neg2243
  %conv2252 = trunc i32 %and2251 to i8
  store i8 %conv2252, i8* %arrayidx2249, align 1, !tbaa !1
  br label %for.inc2254

for.inc2254:                                      ; preds = %for.body2234, %if.then2240
  %inc2255 = add nsw i32 %value.123562, 1
  %exitcond3629 = icmp eq i32 %inc2255, 256
  br i1 %exitcond3629, label %sw.epilog2298, label %for.body2234

if.else2257:                                      ; preds = %sw.bb2221
  %flags2259 = getelementptr inbounds %struct.regnode_charclass_class* %409, i64 0, i32 0
  %414 = load i8* %flags2259, align 1, !tbaa !1
  %and2261 = and i8 %414, 1
  %tobool2262 = icmp eq i8 %and2261, 0
  br i1 %tobool2262, label %for.body2274, label %if.then2263

if.then2263:                                      ; preds = %if.else2257
  %arrayidx2266 = getelementptr inbounds %struct.regnode_charclass_class* %409, i64 0, i32 5, i64 0
  %415 = load i8* %arrayidx2266, align 1, !tbaa !1
  %or2268 = or i8 %415, 32
  store i8 %or2268, i8* %arrayidx2266, align 1, !tbaa !1
  br label %sw.epilog2298

for.body2274:                                     ; preds = %if.else2257, %for.inc2293
  %value.133564 = phi i32 [ %inc2294, %for.inc2293 ], [ 0, %if.else2257 ]
  %value.13.off = add i32 %value.133564, -48
  %416 = icmp ult i32 %value.13.off, 10
  br i1 %416, label %for.inc2293, label %if.then2280

if.then2280:                                      ; preds = %for.body2274
  %and2281 = and i32 %value.133564, 7
  %shl2282 = shl i32 1, %and2281
  %shr22833395 = lshr i32 %value.133564, 3
  %and2284 = and i32 %shr22833395, 31
  %idxprom22853396 = zext i32 %and2284 to i64
  %417 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arrayidx2288 = getelementptr inbounds %struct.regnode_charclass_class* %417, i64 0, i32 4, i64 %idxprom22853396
  %418 = load i8* %arrayidx2288, align 1, !tbaa !1
  %conv22893397 = zext i8 %418 to i32
  %or2290 = or i32 %conv22893397, %shl2282
  %conv2291 = trunc i32 %or2290 to i8
  store i8 %conv2291, i8* %arrayidx2288, align 1, !tbaa !1
  br label %for.inc2293

for.inc2293:                                      ; preds = %if.then2280, %for.body2274
  %inc2294 = add nsw i32 %value.133564, 1
  %exitcond3630 = icmp eq i32 %inc2294, 256
  br i1 %exitcond3630, label %sw.epilog2298, label %for.body2274

sw.epilog2298:                                    ; preds = %for.inc2293, %for.inc2254, %for.inc1666, %for.inc1611, %for.inc1810, %for.inc1755, %for.inc1942, %for.inc1893, %for.inc2074, %for.inc2025, %for.inc2127, %for.inc2216, %for.inc2177, %if.end1537, %do_default, %if.then1674, %if.then1818, %if.then1950, %if.then2082, %if.then2263, %if.then2186, %if.else2131, %if.then1980, %if.then2035, %if.else1964, %if.then1956, %if.then1848, %if.then1903, %if.else1832, %if.then1824, %if.then1704, %if.then1765, %if.else1688, %if.then1680, %if.then1561, %if.then1621, %if.then1553, %if.else1555, %if.then1542, %if.then1509
  %and2299 = and i32 %flags.addr.03601, 4096
  %tobool2300 = icmp eq i32 %and2299, 0
  br i1 %tobool2300, label %if.end2303, label %if.then2301

if.then2301:                                      ; preds = %sw.epilog2298
  %419 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  call fastcc void @S_cl_and(%struct.regnode_charclass_class* %419, %struct.regnode_charclass_class* %and_with) #9
  br label %if.end2303

if.end2303:                                       ; preds = %sw.epilog2298, %if.then2301
  %and2304 = and i32 %flags.addr.03601, -6145
  br label %if.end2552

if.else2306:                                      ; preds = %if.else1480
  %420 = add i64 %idxprom616, -5
  %cmp2311 = icmp ult i64 %420, 4
  br i1 %cmp2311, label %land.lhs.true2313, label %if.else2324

land.lhs.true2313:                                ; preds = %if.else2306
  %and2314 = and i32 %flags.addr.03601, 1024
  %tobool2315 = icmp eq i32 %and2314, 0
  br i1 %tobool2315, label %if.else2324, label %if.then2316

if.then2316:                                      ; preds = %land.lhs.true2313
  %cmp2319 = icmp eq i8 %130, 7
  %cond2321 = select i1 %cmp2319, i32 2, i32 1
  %421 = load i32* %flags2322, align 4, !tbaa !3
  %or2323 = or i32 %421, %cond2321
  store i32 %or2323, i32* %flags2322, align 4, !tbaa !3
  br label %if.end2552

if.else2324:                                      ; preds = %land.lhs.true2313, %if.else2306
  %422 = lshr i64 1241867597247414272, %idxprom616
  %423 = and i64 %422, 1
  %cmp2329 = icmp eq i64 %423, 0
  br i1 %cmp2329, label %if.else2473, label %land.lhs.true2331

land.lhs.true2331:                                ; preds = %if.else2324
  %flags2332 = getelementptr inbounds %struct.regnode* %52, i64 0, i32 0
  %424 = load i8* %flags2332, align 1, !tbaa !1
  %tobool2334 = icmp eq i8 %424, 0
  %or.cond3463 = and i1 %tobool2334, %tobool647
  br i1 %or.cond3463, label %lor.lhs.false2337, label %land.lhs.true2340

lor.lhs.false2337:                                ; preds = %land.lhs.true2331
  %and2338 = and i32 %flags.addr.03601, 6144
  %tobool2339 = icmp eq i32 %and2338, 0
  br i1 %tobool2339, label %if.else2473, label %land.lhs.true2340

land.lhs.true2340:                                ; preds = %lor.lhs.false2337, %land.lhs.true2331
  %.off = add i8 %130, -50
  %switch = icmp ult i8 %.off, 2
  br i1 %switch, label %if.then2350, label %if.else2473

if.then2350:                                      ; preds = %land.lhs.true2340
  store i32 0, i32* %fake2353, align 4, !tbaa !3
  call void @llvm.lifetime.start(i64 44, i8* %12) #3
  store i32 0, i32* %flags2355, align 8, !tbaa !3
  br i1 %tobool2356, label %if.then2357, label %if.end2364

if.then2357:                                      ; preds = %if.then2350
  %425 = load i32* %whilem_c2358, align 4, !tbaa !3
  store i32 %425, i32* %whilem_c2359, align 4, !tbaa !3
  %426 = load i32** %last_closep2506, align 8, !tbaa !0
  br label %if.end2364

if.end2364:                                       ; preds = %if.then2350, %if.then2357
  %storemerge3670 = phi i32* [ %426, %if.then2357 ], [ %fake2353, %if.then2350 ]
  store i32* %storemerge3670, i32** %last_closep2361, align 8, !tbaa !0
  %and2365 = and i32 %flags.addr.03601, 6144
  %tobool2366 = icmp eq i32 %and2365, 0
  br i1 %tobool2366, label %if.end2378, label %land.lhs.true2367

land.lhs.true2367:                                ; preds = %if.end2364
  %427 = load i8* %flags2332, align 1, !tbaa !1
  %tobool2369 = icmp eq i8 %427, 0
  br i1 %tobool2369, label %land.lhs.true2370, label %if.end2378

land.lhs.true2370:                                ; preds = %land.lhs.true2367
  %428 = load i8* %type168, align 1, !tbaa !1
  %cmp2373 = icmp eq i8 %428, 50
  br i1 %cmp2373, label %if.then2375, label %if.end2378

if.then2375:                                      ; preds = %land.lhs.true2370
  store i64 0, i64* %13, align 8
  store i8 17, i8* %type.i3502, align 1, !tbaa !1
  store i32 0, i32* %14, align 8
  call void @llvm.memset.p0i8.i64(i8* %15, i8 -1, i64 32, i32 8, i1 false) #3
  %429 = load i32* %flags1.i, align 4, !tbaa !3
  %and.i.i3505 = and i32 %429, 2048
  %cmp.i.i3506 = icmp eq i32 %and.i.i3505, 0
  %..i.i3507 = select i1 %cmp.i.i3506, i8 80, i8 81
  store i8 %..i.i3507, i8* %12, align 8, !tbaa !1
  store %struct.regnode_charclass_class* %intrnl, %struct.regnode_charclass_class** %start_class2376, align 8, !tbaa !0
  br label %if.end2378

if.end2378:                                       ; preds = %land.lhs.true2367, %if.end2364, %if.then2375, %land.lhs.true2370
  %f2354.0 = phi i32 [ 0, %land.lhs.true2367 ], [ 2048, %if.then2375 ], [ 0, %land.lhs.true2370 ], [ 0, %if.end2364 ]
  %and2379 = and i32 %flags.addr.03601, 8192
  %430 = or i32 %f2354.0, %and2379
  %add.ptr2386 = getelementptr inbounds %struct.regnode* %52, i64 2
  store %struct.regnode* %add.ptr2386, %struct.regnode** %nscan, align 8, !tbaa !0
  %call2387 = call fastcc i32 @S_study_chunk(%struct.RExC_state_t* %pRExC_state, %struct.regnode** %nscan, i32* %deltanext2351, %struct.regnode* %last, %struct.scan_data_t* %data_fake, i32 %430) #9
  %431 = load %struct.regnode** %scan, align 8, !tbaa !0
  %flags2388 = getelementptr inbounds %struct.regnode* %431, i64 0, i32 0
  %432 = load i8* %flags2388, align 1, !tbaa !1
  %tobool2389 = icmp eq i8 %432, 0
  br i1 %tobool2389, label %if.end2433, label %if.then2390

if.then2390:                                      ; preds = %if.end2378
  %433 = load i32* %deltanext2351, align 4, !tbaa !3
  %tobool2391 = icmp eq i32 %433, 0
  br i1 %tobool2391, label %if.else2409, label %if.then2392

if.then2392:                                      ; preds = %if.then2390
  %434 = load %struct.regnode** %emit2413, align 8, !tbaa !0
  %cmp2394 = icmp eq %struct.regnode* %434, @PL_regdummy
  br i1 %cmp2394, label %if.end2398, label %if.then2396

if.then2396:                                      ; preds = %if.then2392
  %435 = load %struct.regexp** %rx2417, align 8, !tbaa !0
  %436 = bitcast %struct.regexp* %435 to i8*
  call void @Perl_save_destructor_x(void (i8*)* @clear_re, i8* %436) #8
  br label %if.end2398

if.end2398:                                       ; preds = %if.then2396, %if.then2392
  %437 = load i8** %parse2420, align 8, !tbaa !0
  %438 = load i8** %precomp2421, align 8, !tbaa !0
  %sub.ptr.lhs.cast2402 = ptrtoint i8* %437 to i64
  %sub.ptr.rhs.cast2403 = ptrtoint i8* %438 to i64
  %sub.ptr.sub2404 = sub i64 %sub.ptr.lhs.cast2402, %sub.ptr.rhs.cast2403
  %conv2405 = trunc i64 %sub.ptr.sub2404 to i32
  %add.ptr2408 = getelementptr inbounds i8* %438, i64 %sub.ptr.sub2404
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([55 x i8]* @.str13, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8]* @.str99, i64 0, i64 0), i32 %conv2405, i8* %438, i8* %add.ptr2408) #8
  br label %if.end2430

if.else2409:                                      ; preds = %if.then2390
  %cmp2410 = icmp sgt i32 %call2387, 255
  br i1 %cmp2410, label %if.then2412, label %if.end2430

if.then2412:                                      ; preds = %if.else2409
  %439 = load %struct.regnode** %emit2413, align 8, !tbaa !0
  %cmp2414 = icmp eq %struct.regnode* %439, @PL_regdummy
  br i1 %cmp2414, label %if.end2418, label %if.then2416

if.then2416:                                      ; preds = %if.then2412
  %440 = load %struct.regexp** %rx2417, align 8, !tbaa !0
  %441 = bitcast %struct.regexp* %440 to i8*
  call void @Perl_save_destructor_x(void (i8*)* @clear_re, i8* %441) #8
  br label %if.end2418

if.end2418:                                       ; preds = %if.then2416, %if.then2412
  %442 = load i8** %parse2420, align 8, !tbaa !0
  %443 = load i8** %precomp2421, align 8, !tbaa !0
  %sub.ptr.lhs.cast2422 = ptrtoint i8* %442 to i64
  %sub.ptr.rhs.cast2423 = ptrtoint i8* %443 to i64
  %sub.ptr.sub2424 = sub i64 %sub.ptr.lhs.cast2422, %sub.ptr.rhs.cast2423
  %conv2425 = trunc i64 %sub.ptr.sub2424 to i32
  %add.ptr2428 = getelementptr inbounds i8* %443, i64 %sub.ptr.sub2424
  call void (i8*, ...)* @S_re_croak2(i8* getelementptr inbounds ([43 x i8]* @.str100, i64 0, i64 0), i64 255, i32 %conv2425, i8* %443, i8* %add.ptr2428) #9
  br label %if.end2430

if.end2430:                                       ; preds = %if.else2409, %if.end2418, %if.end2398
  %conv2431 = trunc i32 %call2387 to i8
  %444 = load %struct.regnode** %scan, align 8, !tbaa !0
  %flags2432 = getelementptr inbounds %struct.regnode* %444, i64 0, i32 0
  store i8 %conv2431, i8* %flags2432, align 1, !tbaa !1
  br label %if.end2433

if.end2433:                                       ; preds = %if.end2378, %if.end2430
  br i1 %tobool2356, label %land.lhs.true2443, label %if.end2455

land.lhs.true2443:                                ; preds = %if.end2433
  %445 = bitcast i32* %flags2355 to i64*
  %446 = load i64* %445, align 8
  %447 = trunc i64 %446 to i32
  %and2437 = and i32 %447, 384
  %not.tobool2438 = icmp ne i32 %and2437, 0
  %inc2440 = zext i1 %not.tobool2438 to i32
  %pars.0.inc2440 = add nsw i32 %inc2440, %pars.03598
  %and2445 = and i32 %447, 512
  %tobool2446 = icmp eq i32 %and2445, 0
  %448 = lshr i64 %446, 32
  %449 = trunc i64 %448 to i32
  br i1 %tobool2446, label %if.then2452, label %if.then2447

if.then2447:                                      ; preds = %land.lhs.true2443
  %450 = load i32* %flags2322, align 4, !tbaa !3
  %or2449 = or i32 %450, 512
  store i32 %or2449, i32* %flags2322, align 4, !tbaa !3
  br label %if.then2452

if.then2452:                                      ; preds = %if.then2447, %land.lhs.true2443
  store i32 %449, i32* %whilem_c2358, align 4, !tbaa !3
  br label %if.end2455

if.end2455:                                       ; preds = %if.end2433, %if.then2452
  %pars.73517 = phi i32 [ %pars.0.inc2440, %if.then2452 ], [ %pars.03598, %if.end2433 ]
  %tobool2457 = icmp eq i32 %f2354.0, 0
  br i1 %tobool2457, label %if.end2552, label %if.then2458

if.then2458:                                      ; preds = %if.end2455
  %451 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags2460 = getelementptr inbounds %struct.regnode_charclass_class* %451, i64 0, i32 0
  %452 = load i8* %flags2460, align 1, !tbaa !1
  call fastcc void @S_cl_and(%struct.regnode_charclass_class* %451, %struct.regnode_charclass_class* %intrnl) #9
  %and2462 = and i8 %452, 16
  %tobool2464 = icmp eq i8 %and2462, 0
  br i1 %tobool2464, label %if.end2552, label %if.then2465

if.then2465:                                      ; preds = %if.then2458
  %453 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %flags2467 = getelementptr inbounds %struct.regnode_charclass_class* %453, i64 0, i32 0
  %454 = load i8* %flags2467, align 1, !tbaa !1
  %or2469 = or i8 %454, 16
  store i8 %or2469, i8* %flags2467, align 1, !tbaa !1
  br label %if.end2552

if.else2473:                                      ; preds = %land.lhs.true2340, %lor.lhs.false2337, %if.else2324
  switch i8 %130, label %if.end2552 [
    i8 45, label %if.then2478
    i8 46, label %if.then2485
    i8 57, label %if.then2513
    i8 59, label %land.lhs.true2524
  ]

if.then2478:                                      ; preds = %if.else2473
  %inc2479 = add nsw i32 %pars.03598, 1
  br label %if.end2552

if.then2485:                                      ; preds = %if.else2473
  %arg12486 = getelementptr inbounds %struct.regnode* %52, i64 1
  %455 = bitcast %struct.regnode* %arg12486 to i32*
  %456 = load i32* %455, align 4, !tbaa !3
  %cmp2487 = icmp eq i32 %456, %is_par.03594
  br i1 %cmp2487, label %if.then2489, label %if.end2502

if.then2489:                                      ; preds = %if.then2485
  %call2490 = call %struct.regnode* @Perl_regnext(%struct.regnode* %52) #9
  %tobool2491 = icmp eq %struct.regnode* %call2490, null
  br i1 %tobool2491, label %if.end2502, label %land.lhs.true2492

land.lhs.true2492:                                ; preds = %if.then2489
  %type2493 = getelementptr inbounds %struct.regnode* %call2490, i64 0, i32 1
  %457 = load i8* %type2493, align 1, !tbaa !1
  %cmp2495 = icmp ne i8 %457, 44
  %cmp2498 = icmp ult %struct.regnode* %call2490, %last
  %or.cond3464 = and i1 %cmp2495, %cmp2498
  %.is_par.03469 = select i1 %or.cond3464, i32 0, i32 %is_par.03594
  br label %if.end2502

if.end2502:                                       ; preds = %land.lhs.true2492, %if.then2489, %if.then2485
  %is_par.1 = phi i32 [ %is_par.03594, %if.then2489 ], [ %is_par.03594, %if.then2485 ], [ %.is_par.03469, %land.lhs.true2492 ]
  br i1 %tobool647, label %if.end2552, label %if.then2504

if.then2504:                                      ; preds = %if.end2502
  %458 = load i32** %last_closep2506, align 8, !tbaa !0
  store i32 %456, i32* %458, align 4, !tbaa !3
  br label %if.end2552

if.then2513:                                      ; preds = %if.else2473
  br i1 %tobool647, label %if.end2552, label %if.then2515

if.then2515:                                      ; preds = %if.then2513
  %459 = load i32* %flags2322, align 4, !tbaa !3
  %or2517 = or i32 %459, 512
  store i32 %or2517, i32* %flags2322, align 4, !tbaa !3
  br label %if.end2552

land.lhs.true2524:                                ; preds = %if.else2473
  %flags2525 = getelementptr inbounds %struct.regnode* %52, i64 0, i32 0
  %460 = load i8* %flags2525, align 1, !tbaa !1
  %cmp2527 = icmp eq i8 %460, 2
  br i1 %cmp2527, label %if.then2529, label %if.end2552

if.then2529:                                      ; preds = %land.lhs.true2524
  %and2530 = and i32 %flags.addr.03601, 1024
  %tobool2531 = icmp eq i32 %and2530, 0
  br i1 %tobool2531, label %if.end2535, label %if.then2532

if.then2532:                                      ; preds = %if.then2529
  call fastcc void @S_scan_commit(%struct.RExC_state_t* %pRExC_state, %struct.scan_data_t* %data) #9
  store %struct.sv** %longest_float2533, %struct.sv*** %longest2534, align 8, !tbaa !0
  br label %if.end2535

if.end2535:                                       ; preds = %if.then2529, %if.then2532
  %and2536 = and i32 %flags.addr.03601, 4096
  %tobool2537 = icmp eq i32 %and2536, 0
  br i1 %tobool2537, label %if.end2540, label %if.then2538

if.then2538:                                      ; preds = %if.end2535
  %461 = load %struct.regnode_charclass_class** %start_class742, align 8, !tbaa !0
  %arraydecay.i = getelementptr inbounds %struct.regnode_charclass_class* %461, i64 0, i32 5, i64 0
  %462 = bitcast i8* %arraydecay.i to i32*
  store i32 0, i32* %462, align 1
  %463 = getelementptr inbounds %struct.regnode_charclass_class* %461, i64 0, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* %463, i8 -1, i64 32, i32 4, i1 false) #3
  %flags.i = getelementptr inbounds %struct.regnode_charclass_class* %461, i64 0, i32 0
  store i8 80, i8* %flags.i, align 1, !tbaa !1
  %464 = load i32* %flags1.i, align 4, !tbaa !3
  %and.i3482 = and i32 %464, 2048
  %cmp.i3483 = icmp eq i32 %and.i3482, 0
  %..i = select i1 %cmp.i3483, i8 80, i8 81
  store i8 %..i, i8* %flags.i, align 1, !tbaa !1
  br label %if.end2540

if.end2540:                                       ; preds = %if.end2535, %if.then2538
  %and2541 = and i32 %flags.addr.03601, -6145
  br label %if.end2552

if.end2552:                                       ; preds = %if.then2458, %if.end2455, %if.end1491, %cleanup1477.thread3512, %if.else2473, %if.then2465, %if.end2502, %if.then2513, %if.end612, %if.then2316, %if.then2478, %if.then2515, %if.end2540, %land.lhs.true2524, %if.then2504, %if.end2303, %if.end771
  %is_par.2 = phi i32 [ %is_par.03594, %if.end612 ], [ %is_par.03594, %if.end771 ], [ %is_par.03594, %if.end2303 ], [ %is_par.03594, %if.then2316 ], [ %is_par.03594, %if.then2478 ], [ %is_par.1, %if.then2504 ], [ %is_par.1, %if.end2502 ], [ %is_par.03594, %if.then2515 ], [ %is_par.03594, %if.then2513 ], [ %is_par.03594, %if.end2540 ], [ %is_par.03594, %land.lhs.true2524 ], [ %is_par.03594, %if.then2465 ], [ %is_par.03594, %if.else2473 ], [ %is_par.03594, %cleanup1477.thread3512 ], [ %is_par.03594, %if.end1491 ], [ %is_par.03594, %if.end2455 ], [ %is_par.03594, %if.then2458 ]
  %is_inf_internal.6 = phi i32 [ %is_inf_internal.03595, %if.end612 ], [ %is_inf_internal.03595, %if.end771 ], [ %is_inf_internal.03595, %if.end2303 ], [ %is_inf_internal.03595, %if.then2316 ], [ %is_inf_internal.03595, %if.then2478 ], [ %is_inf_internal.03595, %if.then2504 ], [ %is_inf_internal.03595, %if.end2502 ], [ %is_inf_internal.03595, %if.then2515 ], [ %is_inf_internal.03595, %if.then2513 ], [ 1, %if.end2540 ], [ %is_inf_internal.03595, %land.lhs.true2524 ], [ %is_inf_internal.03595, %if.then2465 ], [ %is_inf_internal.03595, %if.else2473 ], [ 1, %cleanup1477.thread3512 ], [ %is_inf_internal.03595, %if.end1491 ], [ %is_inf_internal.03595, %if.end2455 ], [ %is_inf_internal.03595, %if.then2458 ]
  %is_inf.6 = phi i32 [ %is_inf.03596, %if.end612 ], [ %is_inf.03596, %if.end771 ], [ %is_inf.03596, %if.end2303 ], [ %is_inf.03596, %if.then2316 ], [ %is_inf.03596, %if.then2478 ], [ %is_inf.03596, %if.then2504 ], [ %is_inf.03596, %if.end2502 ], [ %is_inf.03596, %if.then2515 ], [ %is_inf.03596, %if.then2513 ], [ 1, %if.end2540 ], [ %is_inf.03596, %land.lhs.true2524 ], [ %is_inf.03596, %if.then2465 ], [ %is_inf.03596, %if.else2473 ], [ 1, %cleanup1477.thread3512 ], [ %is_inf.03596, %if.end1491 ], [ %is_inf.03596, %if.end2455 ], [ %is_inf.03596, %if.then2458 ]
  %pars.8 = phi i32 [ %pars.03598, %if.end612 ], [ %pars.03598, %if.end771 ], [ %pars.03598, %if.end2303 ], [ %pars.03598, %if.then2316 ], [ %inc2479, %if.then2478 ], [ %pars.03598, %if.then2504 ], [ %pars.03598, %if.end2502 ], [ %pars.03598, %if.then2515 ], [ %pars.03598, %if.then2513 ], [ %pars.03598, %if.end2540 ], [ %pars.03598, %land.lhs.true2524 ], [ %pars.73517, %if.then2465 ], [ %pars.03598, %if.else2473 ], [ %pars.03598, %cleanup1477.thread3512 ], [ %pars.03598, %if.end1491 ], [ %pars.73517, %if.end2455 ], [ %pars.73517, %if.then2458 ]
  %min.8 = phi i32 [ %add436, %if.end612 ], [ %add646, %if.end771 ], [ %inc1492, %if.end2303 ], [ %min.3, %if.then2316 ], [ %min.3, %if.then2478 ], [ %min.3, %if.then2504 ], [ %min.3, %if.end2502 ], [ %min.3, %if.then2515 ], [ %min.3, %if.then2513 ], [ %min.3, %if.end2540 ], [ %min.3, %land.lhs.true2524 ], [ %min.3, %if.then2465 ], [ %min.3, %if.else2473 ], [ %min.3, %cleanup1477.thread3512 ], [ %inc1492, %if.end1491 ], [ %min.3, %if.end2455 ], [ %min.3, %if.then2458 ]
  %flags.addr.5 = phi i32 [ %and613, %if.end612 ], [ %and772, %if.end771 ], [ %and2304, %if.end2303 ], [ %flags.addr.03601, %if.then2316 ], [ %flags.addr.03601, %if.then2478 ], [ %flags.addr.03601, %if.then2504 ], [ %flags.addr.03601, %if.end2502 ], [ %flags.addr.03601, %if.then2515 ], [ %flags.addr.03601, %if.then2513 ], [ %and2541, %if.end2540 ], [ %flags.addr.03601, %land.lhs.true2524 ], [ %flags.addr.03601, %if.then2465 ], [ %flags.addr.03601, %if.else2473 ], [ %and1476, %cleanup1477.thread3512 ], [ %flags.addr.03601, %if.end1491 ], [ %flags.addr.03601, %if.end2455 ], [ %flags.addr.03601, %if.then2458 ]
  %465 = load %struct.regnode** %scan, align 8, !tbaa !0
  %call2553 = call %struct.regnode* @Perl_regnext(%struct.regnode* %465) #9
  store %struct.regnode* %call2553, %struct.regnode** %scan, align 8, !tbaa !0
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %optimize_curly_tail, %if.else381, %if.then374, %while.cond1442.preheader, %land.rhs1450, %while.body1456, %if.end2552, %if.then405, %if.else408, %if.else389, %if.then386, %if.then377
  %is_par.0.be = phi i32 [ %is_par.03594, %if.then405 ], [ %is_par.03594, %if.else408 ], [ %is_par.2, %if.end2552 ], [ %is_par.03594, %if.else389 ], [ %is_par.03594, %if.then386 ], [ %is_par.03594, %if.then377 ], [ %is_par.03594, %while.body1456 ], [ %is_par.03594, %land.rhs1450 ], [ %is_par.03594, %while.cond1442.preheader ], [ %is_par.03594, %if.then374 ], [ %is_par.03594, %if.else381 ], [ %is_par.03594, %optimize_curly_tail ]
  %is_inf_internal.0.be = phi i32 [ %is_inf_internal.03595, %if.then405 ], [ %is_inf_internal.03595, %if.else408 ], [ %is_inf_internal.6, %if.end2552 ], [ %is_inf_internal.3, %if.else389 ], [ %is_inf_internal.3, %if.then386 ], [ %is_inf_internal.3, %if.then377 ], [ %is_inf_internal.4, %while.body1456 ], [ %is_inf_internal.4, %land.rhs1450 ], [ %is_inf_internal.4, %while.cond1442.preheader ], [ %is_inf_internal.3, %if.then374 ], [ %is_inf_internal.3, %if.else381 ], [ %is_inf_internal.4, %optimize_curly_tail ]
  %is_inf.0.be = phi i32 [ %is_inf.03596, %if.then405 ], [ %is_inf.03596, %if.else408 ], [ %is_inf.6, %if.end2552 ], [ %is_inf.3, %if.else389 ], [ %is_inf.3, %if.then386 ], [ %is_inf.3, %if.then377 ], [ %is_inf.4, %while.body1456 ], [ %is_inf.4, %land.rhs1450 ], [ %is_inf.4, %while.cond1442.preheader ], [ %is_inf.3, %if.then374 ], [ %is_inf.3, %if.else381 ], [ %is_inf.4, %optimize_curly_tail ]
  %delta.0.be = phi i32 [ %delta.03597, %if.then405 ], [ %delta.03597, %if.else408 ], [ %delta.03597, %if.end2552 ], [ %add371, %if.else389 ], [ %add371, %if.then386 ], [ %add371, %if.then377 ], [ %delta.1, %while.body1456 ], [ %delta.1, %land.rhs1450 ], [ %delta.1, %while.cond1442.preheader ], [ %add371, %if.then374 ], [ %add371, %if.else381 ], [ %delta.1, %optimize_curly_tail ]
  %pars.0.be = phi i32 [ %pars.03598, %if.then405 ], [ %pars.03598, %if.else408 ], [ %pars.8, %if.end2552 ], [ %pars.3, %if.else389 ], [ %pars.3, %if.then386 ], [ %pars.3, %if.then377 ], [ %pars.5, %while.body1456 ], [ %pars.5, %land.rhs1450 ], [ %pars.5, %while.cond1442.preheader ], [ %pars.3, %if.then374 ], [ %pars.3, %if.else381 ], [ %pars.5, %optimize_curly_tail ]
  %min.0.be = phi i32 [ %min.3, %if.then405 ], [ %min.3, %if.else408 ], [ %min.8, %if.end2552 ], [ %add369, %if.else389 ], [ %add369, %if.then386 ], [ %add369, %if.then377 ], [ %min.6, %while.body1456 ], [ %min.6, %land.rhs1450 ], [ %min.6, %while.cond1442.preheader ], [ %add369, %if.then374 ], [ %add369, %if.else381 ], [ %min.6, %optimize_curly_tail ]
  %flags.addr.0.be = phi i32 [ %flags.addr.03601, %if.then405 ], [ %flags.addr.03601, %if.else408 ], [ %flags.addr.5, %if.end2552 ], [ %or393, %if.else389 ], [ %and388, %if.then386 ], [ %and379, %if.then377 ], [ %flags.addr.3, %while.body1456 ], [ %flags.addr.3, %land.rhs1450 ], [ %flags.addr.3, %while.cond1442.preheader ], [ %flags.addr.03601, %if.then374 ], [ %flags.addr.03601, %if.else381 ], [ %flags.addr.3, %optimize_curly_tail ]
  %466 = load %struct.regnode** %scan, align 8, !tbaa !0
  %tobool5 = icmp eq %struct.regnode* %466, null
  br i1 %tobool5, label %finish, label %while.cond.backedge.land.lhs.true_crit_edge

while.cond.backedge.land.lhs.true_crit_edge:      ; preds = %while.cond.backedge
  %type6.phi.trans.insert = getelementptr inbounds %struct.regnode* %466, i64 0, i32 1
  %.pre3661 = load i8* %type6.phi.trans.insert, align 1, !tbaa !1
  br label %land.lhs.true

finish:                                           ; preds = %cond.end, %land.lhs.true, %while.cond.backedge, %cleanup1477
  %467 = phi i8* [ %10, %cleanup1477 ], [ %9, %cond.end ], [ %10, %land.lhs.true ], [ %10, %while.cond.backedge ]
  %468 = phi i8* [ %11, %cleanup1477 ], [ %8, %cond.end ], [ %11, %land.lhs.true ], [ %11, %while.cond.backedge ]
  %469 = phi %struct.regnode* [ %add.ptr787, %cleanup1477 ], [ null, %cond.end ], [ %.pre.pre, %land.lhs.true ], [ null, %while.cond.backedge ]
  %flags.addr.03590 = phi i32 [ %flags.addr.03601, %cleanup1477 ], [ %flags, %cond.end ], [ %flags.addr.03601, %land.lhs.true ], [ %flags.addr.0.be, %while.cond.backedge ]
  %pars.03587 = phi i32 [ %pars.03598, %cleanup1477 ], [ 0, %cond.end ], [ %pars.03598, %land.lhs.true ], [ %pars.0.be, %while.cond.backedge ]
  %delta.03585 = phi i32 [ %delta.03597, %cleanup1477 ], [ 0, %cond.end ], [ %delta.03597, %land.lhs.true ], [ %delta.0.be, %while.cond.backedge ]
  %is_inf.03583 = phi i32 [ %is_inf.03596, %cleanup1477 ], [ %land.ext, %cond.end ], [ %is_inf.03596, %land.lhs.true ], [ %is_inf.0.be, %while.cond.backedge ]
  %is_inf_internal.03581 = phi i32 [ %is_inf_internal.03595, %cleanup1477 ], [ 0, %cond.end ], [ %is_inf_internal.03595, %land.lhs.true ], [ %is_inf_internal.0.be, %while.cond.backedge ]
  %is_par.03579 = phi i32 [ %is_par.03594, %cleanup1477 ], [ 0, %cond.end ], [ %is_par.03594, %land.lhs.true ], [ %is_par.0.be, %while.cond.backedge ]
  %min.9 = phi i32 [ %min.3, %cleanup1477 ], [ 0, %cond.end ], [ %min.03600, %land.lhs.true ], [ %min.0.be, %while.cond.backedge ]
  store %struct.regnode* %469, %struct.regnode** %scanp, align 8, !tbaa !0
  %tobool2555 = icmp ne i32 %is_inf_internal.03581, 0
  %cond2559 = select i1 %tobool2555, i32 2147483647, i32 %delta.03585
  store i32 %cond2559, i32* %deltap, align 4, !tbaa !3
  %and2560 = and i32 %flags.addr.03590, 1024
  %tobool2561 = icmp eq i32 %and2560, 0
  %tobool2563 = icmp eq i32 %is_inf.03583, 0
  %or.cond3465 = or i1 %tobool2561, %tobool2563
  br i1 %or.cond3465, label %if.end2568, label %if.then2564

if.then2564:                                      ; preds = %finish
  %pos_min2565 = getelementptr inbounds %struct.scan_data_t* %data, i64 0, i32 2
  %470 = load i32* %pos_min2565, align 4, !tbaa !3
  %sub2566 = sub nsw i32 2147483647, %470
  %pos_delta2567 = getelementptr inbounds %struct.scan_data_t* %data, i64 0, i32 3
  store i32 %sub2566, i32* %pos_delta2567, align 4, !tbaa !3
  br label %if.end2568

if.end2568:                                       ; preds = %finish, %if.then2564
  %tobool25733519 = icmp ne i32 %is_par.03579, 0
  %not.cmp2569 = icmp slt i32 %is_par.03579, 256
  %tobool2573 = and i1 %tobool25733519, %not.cmp2569
  %cmp2575 = icmp eq i32 %pars.03587, 1
  %or.cond3466 = and i1 %tobool2573, %cmp2575
  %or.cond3466.not = xor i1 %or.cond3466, true
  %tobool2578 = icmp eq %struct.scan_data_t* %data, null
  %or.cond3467 = or i1 %tobool2578, %or.cond3466.not
  br i1 %or.cond3467, label %if.else2584, label %if.then2579

if.then2579:                                      ; preds = %if.end2568
  %flags2580 = getelementptr inbounds %struct.scan_data_t* %data, i64 0, i32 14
  %471 = load i32* %flags2580, align 4, !tbaa !3
  %or2581 = and i32 %471, -385
  %and2583 = or i32 %or2581, 256
  store i32 %and2583, i32* %flags2580, align 4, !tbaa !3
  br label %if.end2594

if.else2584:                                      ; preds = %if.end2568
  %tobool2585 = icmp eq i32 %pars.03587, 0
  %or.cond3468 = or i1 %tobool2585, %tobool2578
  br i1 %or.cond3468, label %if.end2594, label %if.then2588

if.then2588:                                      ; preds = %if.else2584
  %flags2589 = getelementptr inbounds %struct.scan_data_t* %data, i64 0, i32 14
  %472 = load i32* %flags2589, align 4, !tbaa !3
  %or2590 = and i32 %472, -385
  %and2592 = or i32 %or2590, 128
  store i32 %and2592, i32* %flags2589, align 4, !tbaa !3
  br label %if.end2594

if.end2594:                                       ; preds = %if.else2584, %if.then2588, %if.then2579
  %and2595 = and i32 %flags.addr.03590, 4096
  %tobool2596 = icmp eq i32 %and2595, 0
  br i1 %tobool2596, label %cleanup2600, label %if.then2597

if.then2597:                                      ; preds = %if.end2594
  %start_class2598 = getelementptr inbounds %struct.scan_data_t* %data, i64 0, i32 17
  %473 = load %struct.regnode_charclass_class** %start_class2598, align 8, !tbaa !0
  call fastcc void @S_cl_and(%struct.regnode_charclass_class* %473, %struct.regnode_charclass_class* %and_with) #9
  br label %cleanup2600

cleanup2600:                                      ; preds = %if.then2597, %if.end2594
  call void @llvm.lifetime.end(i64 44, i8* %467) #3
  call void @llvm.lifetime.end(i64 104, i8* %468) #3
  ret i32 %min.9
}
