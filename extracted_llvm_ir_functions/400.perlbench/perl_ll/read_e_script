define internal i32 @read_e_script(i32 %idx, %struct.sv* %buf_sv, i32 %maxlen) #0 {
entry:
  %0 = load %struct.sv** @PL_e_script, align 8, !tbaa !0
  %sv_any = getelementptr inbounds %struct.sv* %0, i64 0, i32 0
  %1 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_pv = bitcast i8* %1 to i8**
  %2 = load i8** %xpv_pv, align 8, !tbaa !0
  %call = tail call i8* @strchr(i8* %2, i32 10) #7
  %tobool = icmp eq i8* %call, null
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %add.ptr = getelementptr inbounds i8* %call, i64 1
  br label %cond.end

cond.false:                                       ; preds = %entry
  %xpv_cur = getelementptr inbounds i8* %1, i64 8
  %3 = bitcast i8* %xpv_cur to i64*
  %4 = load i64* %3, align 8, !tbaa !5
  %add.ptr4 = getelementptr inbounds i8* %2, i64 %4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %add.ptr4, %cond.false ]
  %cmp = icmp eq i8* %cond, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  tail call void @Perl_filter_del(i32 (i32, %struct.sv*, i32)* @read_e_script) #7
  br label %return

if.end:                                           ; preds = %cond.end
  %sub.ptr.lhs.cast = ptrtoint i8* %cond to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  tail call void @Perl_sv_catpvn_flags(%struct.sv* %buf_sv, i8* %2, i64 %sub.ptr.sub, i32 2) #7
  %5 = load %struct.sv** @PL_e_script, align 8, !tbaa !0
  tail call void @Perl_sv_chop(%struct.sv* %5, i8* %cond) #7
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 1, %if.end ]
  ret i32 %retval.0
}
