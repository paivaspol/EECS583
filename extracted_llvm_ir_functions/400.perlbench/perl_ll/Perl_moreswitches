define i8* @Perl_moreswitches(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %numlen = alloca i64, align 8
  %flags = alloca i32, align 4
  %ch = alloca i8, align 1
  %flags534 = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8, !tbaa !0
  %0 = load i8* %s, align 1, !tbaa !1
  %conv = sext i8 %0 to i32
  switch i32 %conv, label %sw.default [
    i32 48, label %sw.bb
    i32 67, label %sw.bb163
    i32 70, label %sw.bb166
    i32 97, label %sw.bb189
    i32 99, label %sw.bb191
    i32 100, label %sw.bb193
    i32 68, label %sw.bb311
    i32 104, label %sw.bb366
    i32 105, label %sw.bb368
    i32 73, label %sw.bb414
    i32 108, label %sw.bb521
    i32 77, label %sw.bb560
    i32 109, label %sw.bb561
    i32 110, label %sw.bb648
    i32 112, label %sw.bb650
    i32 115, label %sw.bb652
    i32 116, label %sw.bb654
    i32 84, label %sw.bb659
    i32 117, label %sw.bb664
    i32 85, label %sw.bb666
    i32 118, label %sw.bb668
    i32 119, label %sw.bb676
    i32 87, label %sw.bb686
    i32 88, label %sw.bb698
    i32 42, label %sw.bb710
    i32 32, label %sw.bb710
    i32 45, label %return
    i32 0, label %return
    i32 13, label %return
    i32 10, label %return
    i32 9, label %return
    i32 80, label %sw.bb719
  ]

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %flags, align 4, !tbaa !3
  %1 = load %struct.sv** @PL_rs, align 8, !tbaa !0
  call void @Perl_sv_free(%struct.sv* %1) #7
  %2 = load i8** %s.addr, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i8* %2, i64 1
  %3 = load i8* %arrayidx, align 1, !tbaa !1
  %cmp = icmp eq i8 %3, 120
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %sw.bb
  %arrayidx3 = getelementptr inbounds i8* %2, i64 2
  %4 = load i8* %arrayidx3, align 1, !tbaa !1
  %tobool = icmp eq i8 %4, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i8* %arrayidx3, i8** %s.addr, align 8, !tbaa !0
  br label %for.cond

for.cond:                                         ; preds = %for.cond, %if.then
  %e.0 = phi i8* [ %arrayidx3, %if.then ], [ %incdec.ptr, %for.cond ]
  %5 = load i8* %e.0, align 1, !tbaa !1
  %tobool5 = icmp eq i8 %5, 0
  %incdec.ptr = getelementptr inbounds i8* %e.0, i64 1
  br i1 %tobool5, label %for.end, label %for.cond

for.end:                                          ; preds = %for.cond
  %sub.ptr.lhs.cast = ptrtoint i8* %e.0 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %arrayidx3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  store i64 %sub.ptr.sub, i64* %numlen, align 8, !tbaa !5
  store i32 4, i32* %flags, align 4, !tbaa !3
  %call = call i64 @Perl_grok_hex(i8* %arrayidx3, i64* %numlen, i32* %flags, double* null) #7
  %conv7 = and i64 %call, 4294967295
  %6 = load i8** %s.addr, align 8, !tbaa !0
  %7 = load i64* %numlen, align 8, !tbaa !5
  %add.ptr8 = getelementptr inbounds i8* %6, i64 %7
  %cmp9 = icmp ult i8* %add.ptr8, %e.0
  br i1 %cmp9, label %if.then11, label %if.end

if.then11:                                        ; preds = %for.end
  store i64 0, i64* %numlen, align 8, !tbaa !5
  %incdec.ptr12 = getelementptr inbounds i8* %6, i64 -1
  store i8* %incdec.ptr12, i8** %s.addr, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then11, %for.end
  %rschar.0 = phi i64 [ 0, %if.then11 ], [ %conv7, %for.end ]
  %call13 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0), i64 0) #7
  store %struct.sv* %call13, %struct.sv** @PL_rs, align 8, !tbaa !0
  %sv_any = getelementptr inbounds %struct.sv* %call13, i64 0, i32 0
  %8 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_len = getelementptr inbounds i8* %8, i64 16
  %9 = bitcast i8* %xpv_len to i64*
  %10 = load i64* %9, align 8, !tbaa !5
  %cmp14 = icmp ult i64 %rschar.0, 128
  br i1 %cmp14, label %cond.end47, label %cond.false

cond.false:                                       ; preds = %if.end
  %cmp16 = icmp ult i64 %rschar.0, 2048
  br i1 %cmp16, label %cond.end47, label %cond.false19

cond.false19:                                     ; preds = %cond.false
  %cmp20 = icmp ult i64 %rschar.0, 65536
  br i1 %cmp20, label %cond.end47, label %cond.false23

cond.false23:                                     ; preds = %cond.false19
  %cmp24 = icmp ult i64 %rschar.0, 2097152
  br i1 %cmp24, label %cond.end47, label %cond.false27

cond.false27:                                     ; preds = %cond.false23
  %cmp28 = icmp ult i64 %rschar.0, 67108864
  br i1 %cmp28, label %cond.end47, label %cond.false31

cond.false31:                                     ; preds = %cond.false27
  %cmp32 = icmp ult i64 %rschar.0, 2147483648
  %. = select i1 %cmp32, i64 7, i64 8
  br label %cond.end47

cond.end47:                                       ; preds = %cond.false31, %cond.false, %cond.false23, %cond.false27, %cond.false19, %if.end
  %cond48 = phi i64 [ 2, %if.end ], [ 3, %cond.false ], [ 4, %cond.false19 ], [ 5, %cond.false23 ], [ 6, %cond.false27 ], [ %., %cond.false31 ]
  %cmp50 = icmp ult i64 %10, %cond48
  br i1 %cmp50, label %cond.true52, label %cond.end97

cond.true52:                                      ; preds = %cond.end47
  br i1 %cmp14, label %cond.end90, label %cond.false56

cond.false56:                                     ; preds = %cond.true52
  %cmp57 = icmp ult i64 %rschar.0, 2048
  br i1 %cmp57, label %cond.end90, label %cond.false60

cond.false60:                                     ; preds = %cond.false56
  %cmp61 = icmp ult i64 %rschar.0, 65536
  br i1 %cmp61, label %cond.end90, label %cond.false64

cond.false64:                                     ; preds = %cond.false60
  %cmp65 = icmp ult i64 %rschar.0, 2097152
  br i1 %cmp65, label %cond.end90, label %cond.false68

cond.false68:                                     ; preds = %cond.false64
  %cmp69 = icmp ult i64 %rschar.0, 67108864
  br i1 %cmp69, label %cond.end90, label %cond.false72

cond.false72:                                     ; preds = %cond.false68
  %cmp73 = icmp ult i64 %rschar.0, 2147483648
  %.802 = select i1 %cmp73, i64 7, i64 8
  br label %cond.end90

cond.end90:                                       ; preds = %cond.false72, %cond.false56, %cond.false64, %cond.false68, %cond.false60, %cond.true52
  %cond91 = phi i64 [ 2, %cond.true52 ], [ 3, %cond.false56 ], [ 4, %cond.false60 ], [ 5, %cond.false64 ], [ 6, %cond.false68 ], [ %.802, %cond.false72 ]
  %call94 = call i8* @Perl_sv_grow(%struct.sv* %call13, i64 %cond91) #7
  %.pre = load %struct.sv** @PL_rs, align 8, !tbaa !0
  %sv_any99.phi.trans.insert = getelementptr inbounds %struct.sv* %.pre, i64 0, i32 0
  %.pre875 = load i8** %sv_any99.phi.trans.insert, align 8, !tbaa !0
  br label %cond.end97

cond.end97:                                       ; preds = %cond.end47, %cond.end90
  %11 = phi i8* [ %8, %cond.end47 ], [ %.pre875, %cond.end90 ]
  %xpv_pv100 = bitcast i8* %11 to i8**
  %12 = load i8** %xpv_pv100, align 8, !tbaa !0
  %call101 = call i8* @Perl_uvuni_to_utf8(i8* %12, i64 %rschar.0) #7
  br i1 %cmp14, label %cond.end139, label %cond.false105

cond.false105:                                    ; preds = %cond.end97
  %cmp106 = icmp ult i64 %rschar.0, 2048
  br i1 %cmp106, label %cond.end139, label %cond.false109

cond.false109:                                    ; preds = %cond.false105
  %cmp110 = icmp ult i64 %rschar.0, 65536
  br i1 %cmp110, label %cond.end139, label %cond.false113

cond.false113:                                    ; preds = %cond.false109
  %cmp114 = icmp ult i64 %rschar.0, 2097152
  br i1 %cmp114, label %cond.end139, label %cond.false117

cond.false117:                                    ; preds = %cond.false113
  %cmp118 = icmp ult i64 %rschar.0, 67108864
  br i1 %cmp118, label %cond.end139, label %cond.false121

cond.false121:                                    ; preds = %cond.false117
  %cmp122 = icmp ult i64 %rschar.0, 2147483648
  %.803 = select i1 %cmp122, i64 6, i64 7
  br label %cond.end139

cond.end139:                                      ; preds = %cond.false121, %cond.false105, %cond.false113, %cond.false117, %cond.false109, %cond.end97
  %cond140 = phi i64 [ 1, %cond.end97 ], [ 2, %cond.false105 ], [ 3, %cond.false109 ], [ 4, %cond.false113 ], [ 5, %cond.false117 ], [ %.803, %cond.false121 ]
  %13 = load %struct.sv** @PL_rs, align 8, !tbaa !0
  %sv_any142 = getelementptr inbounds %struct.sv* %13, i64 0, i32 0
  %14 = load i8** %sv_any142, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %14, i64 8
  %15 = bitcast i8* %xpv_cur to i64*
  store i64 %cond140, i64* %15, align 8, !tbaa !5
  %sv_flags = getelementptr inbounds %struct.sv* %13, i64 0, i32 2
  %16 = load i32* %sv_flags, align 4, !tbaa !3
  %or = or i32 %16, 536870912
  store i32 %or, i32* %sv_flags, align 4, !tbaa !3
  br label %if.end160

if.else:                                          ; preds = %land.lhs.true, %sw.bb
  store i64 4, i64* %numlen, align 8, !tbaa !5
  %call143 = call i64 @Perl_grok_oct(i8* %2, i64* %numlen, i32* %flags, double* null) #7
  %and = and i64 %call143, 4294967040
  %tobool146 = icmp eq i64 %and, 0
  br i1 %tobool146, label %if.else148, label %if.then147

if.then147:                                       ; preds = %if.else
  store %struct.sv* @PL_sv_undef, %struct.sv** @PL_rs, align 8, !tbaa !0
  br label %if.end160

if.else148:                                       ; preds = %if.else
  %conv145 = and i64 %call143, 4294967295
  %tobool149 = icmp eq i64 %conv145, 0
  %17 = load i64* %numlen, align 8, !tbaa !5
  %cmp151 = icmp ugt i64 %17, 1
  %or.cond804 = and i1 %tobool149, %cmp151
  br i1 %or.cond804, label %if.then153, label %if.else155

if.then153:                                       ; preds = %if.else148
  %call154 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0), i64 0) #7
  store %struct.sv* %call154, %struct.sv** @PL_rs, align 8, !tbaa !0
  br label %if.end160

if.else155:                                       ; preds = %if.else148
  %conv156 = trunc i64 %call143 to i8
  store i8 %conv156, i8* %ch, align 1, !tbaa !1
  %call157 = call %struct.sv* @Perl_newSVpvn(i8* %ch, i64 1) #7
  store %struct.sv* %call157, %struct.sv** @PL_rs, align 8, !tbaa !0
  br label %if.end160

if.end160:                                        ; preds = %if.then147, %if.else155, %if.then153, %cond.end139
  %call.i = call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([2 x i8]* @.str16, i64 0, i64 0), i32 1, i32 4) #7
  %tobool.i = icmp eq %struct.gv* %call.i, null
  br i1 %tobool.i, label %Perl_get_sv.exit, label %if.then.i

if.then.i:                                        ; preds = %if.end160
  %sv_any.i = getelementptr inbounds %struct.gv* %call.i, i64 0, i32 0
  %18 = load %struct.xpvgv** %sv_any.i, align 8, !tbaa !0
  %xgv_gp.i = getelementptr inbounds %struct.xpvgv* %18, i64 0, i32 7
  %19 = load %struct.gp** %xgv_gp.i, align 8, !tbaa !0
  %gp_sv.i = getelementptr inbounds %struct.gp* %19, i64 0, i32 0
  %20 = load %struct.sv** %gp_sv.i, align 8, !tbaa !0
  br label %Perl_get_sv.exit

Perl_get_sv.exit:                                 ; preds = %if.end160, %if.then.i
  %retval.0.i = phi %struct.sv* [ %20, %if.then.i ], [ null, %if.end160 ]
  %21 = load %struct.sv** @PL_rs, align 8, !tbaa !0
  call void @Perl_sv_setsv_flags(%struct.sv* %retval.0.i, %struct.sv* %21, i32 2) #7
  %22 = load i8** %s.addr, align 8, !tbaa !0
  %23 = load i64* %numlen, align 8, !tbaa !5
  %add.ptr162 = getelementptr inbounds i8* %22, i64 %23
  br label %return

sw.bb163:                                         ; preds = %entry
  %incdec.ptr164 = getelementptr inbounds i8* %s, i64 1
  store i8* %incdec.ptr164, i8** %s.addr, align 8, !tbaa !0
  %call165 = call i32 @Perl_parse_unicode_opts(i8** %s.addr) #7
  store i32 %call165, i32* @PL_unicode, align 4, !tbaa !3
  %24 = load i8** %s.addr, align 8, !tbaa !0
  br label %return

sw.bb166:                                         ; preds = %entry
  store i8 1, i8* @PL_minus_F, align 1, !tbaa !1
  %incdec.ptr167 = getelementptr inbounds i8* %s, i64 1
  store i8* %incdec.ptr167, i8** %s.addr, align 8, !tbaa !0
  store i8* %incdec.ptr167, i8** @PL_splitstr, align 8, !tbaa !0
  br label %while.cond

while.cond:                                       ; preds = %while.body, %sw.bb166
  %25 = phi i8* [ %incdec.ptr187, %while.body ], [ %incdec.ptr167, %sw.bb166 ]
  %26 = load i8* %25, align 1, !tbaa !1
  %27 = icmp ult i8 %26, 33
  br i1 %27, label %land.end, label %while.body

land.end:                                         ; preds = %while.cond
  %switch.cast = zext i8 %26 to i33
  %switch.downshift = lshr i33 4294953470, %switch.cast
  %28 = and i33 %switch.downshift, 1
  %switch.masked = icmp eq i33 %28, 0
  br i1 %switch.masked, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond, %land.end
  %incdec.ptr187 = getelementptr inbounds i8* %25, i64 1
  store i8* %incdec.ptr187, i8** %s.addr, align 8, !tbaa !0
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i8 0, i8* %25, align 1, !tbaa !1
  %29 = load i8** @PL_splitstr, align 8, !tbaa !0
  %call188 = call i8* @Perl_savepv(i8* %29) #7
  store i8* %call188, i8** @PL_splitstr, align 8, !tbaa !0
  %30 = load i8** %s.addr, align 8, !tbaa !0
  br label %return

sw.bb189:                                         ; preds = %entry
  store i8 1, i8* @PL_minus_a, align 1, !tbaa !1
  %incdec.ptr190 = getelementptr inbounds i8* %s, i64 1
  store i8* %incdec.ptr190, i8** %s.addr, align 8, !tbaa !0
  br label %return

sw.bb191:                                         ; preds = %entry
  store i8 1, i8* @PL_minus_c, align 1, !tbaa !1
  %incdec.ptr192 = getelementptr inbounds i8* %s, i64 1
  store i8* %incdec.ptr192, i8** %s.addr, align 8, !tbaa !0
  br label %return

sw.bb193:                                         ; preds = %entry
  %31 = load i32* @PL_suidscript, align 4, !tbaa !3
  %cmp.i = icmp sgt i32 %31, -1
  br i1 %cmp.i, label %if.then.i828, label %S_forbid_setid.exit

if.then.i828:                                     ; preds = %sw.bb193
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([35 x i8]* @.str69, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str17, i64 0, i64 0)) #7
  %.pre876 = load i8** %s.addr, align 8, !tbaa !0
  br label %S_forbid_setid.exit

S_forbid_setid.exit:                              ; preds = %sw.bb193, %if.then.i828
  %32 = phi i8* [ %s, %sw.bb193 ], [ %.pre876, %if.then.i828 ]
  %incdec.ptr194 = getelementptr inbounds i8* %32, i64 1
  store i8* %incdec.ptr194, i8** %s.addr, align 8, !tbaa !0
  %33 = load i8* %incdec.ptr194, align 1, !tbaa !1
  %cmp196 = icmp eq i8 %33, 116
  br i1 %cmp196, label %land.lhs.true198, label %if.end235

land.lhs.true198:                                 ; preds = %S_forbid_setid.exit
  %arrayidx199 = getelementptr inbounds i8* %32, i64 2
  %34 = load i8* %arrayidx199, align 1, !tbaa !1
  %.off854 = add i8 %34, -65
  %35 = icmp ult i8 %.off854, 26
  %.off855 = add i8 %34, -97
  %36 = icmp ult i8 %.off855, 26
  %or.cond894 = or i1 %35, %36
  br i1 %or.cond894, label %if.end307, label %lor.lhs.false218

lor.lhs.false218:                                 ; preds = %land.lhs.true198
  %.off856 = add i8 %34, -48
  %37 = icmp ult i8 %.off856, 10
  %cmp231 = icmp eq i8 %34, 95
  %or.cond = or i1 %37, %cmp231
  br i1 %or.cond, label %if.end307, label %if.then233

if.then233:                                       ; preds = %lor.lhs.false218
  store i8* %arrayidx199, i8** %s.addr, align 8, !tbaa !0
  call void @Perl_my_setenv(i8* getelementptr inbounds ([17 x i8]* @.str18, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str19, i64 0, i64 0)) #7
  %.pre877 = load i8** %s.addr, align 8, !tbaa !0
  %.pre878 = load i8* %.pre877, align 1, !tbaa !1
  br label %if.end235

if.end235:                                        ; preds = %if.then233, %S_forbid_setid.exit
  %38 = phi i8 [ %.pre878, %if.then233 ], [ %33, %S_forbid_setid.exit ]
  switch i8 %38, label %if.end307 [
    i8 58, label %if.then243
    i8 61, label %if.then243
  ]

if.then243:                                       ; preds = %if.end235, %if.end235
  %call244 = call %struct.sv* @Perl_newSVpv(i8* getelementptr inbounds ([12 x i8]* @.str20, i64 0, i64 0), i64 0) #7
  %39 = load i8** %s.addr, align 8, !tbaa !0
  %incdec.ptr245 = getelementptr inbounds i8* %39, i64 1
  br label %while.cond246

while.cond246:                                    ; preds = %while.body279, %if.then243
  %storemerge800 = phi i8* [ %incdec.ptr245, %if.then243 ], [ %incdec.ptr280, %while.body279 ]
  store i8* %storemerge800, i8** %s.addr, align 8, !tbaa !0
  %40 = load i8* %storemerge800, align 1, !tbaa !1
  %.off851 = add i8 %40, -65
  %41 = icmp ult i8 %.off851, 26
  %.off852 = add i8 %40, -97
  %42 = icmp ult i8 %.off852, 26
  %or.cond858 = or i1 %41, %42
  %.off853 = add i8 %40, -48
  %43 = icmp ult i8 %.off853, 10
  %or.cond860 = or i1 %or.cond858, %43
  br i1 %or.cond860, label %while.body279, label %lor.end278

lor.end278:                                       ; preds = %while.cond246
  switch i8 %40, label %if.then285 [
    i8 95, label %while.body279
    i8 58, label %while.body279
    i8 61, label %if.else286
  ]

while.body279:                                    ; preds = %lor.end278, %lor.end278, %while.cond246
  %incdec.ptr280 = getelementptr inbounds i8* %storemerge800, i64 1
  br label %while.cond246

if.then285:                                       ; preds = %lor.end278
  call void @Perl_sv_catpv(%struct.sv* %call244, i8* %incdec.ptr245) #7
  br label %if.end291

if.else286:                                       ; preds = %lor.end278
  %sub.ptr.lhs.cast287 = ptrtoint i8* %storemerge800 to i64
  %sub.ptr.rhs.cast288 = ptrtoint i8* %incdec.ptr245 to i64
  %sub.ptr.sub289 = sub i64 %sub.ptr.lhs.cast287, %sub.ptr.rhs.cast288
  call void @Perl_sv_catpvn_flags(%struct.sv* %call244, i8* %incdec.ptr245, i64 %sub.ptr.sub289, i32 2) #7
  call void @Perl_sv_catpv(%struct.sv* %call244, i8* getelementptr inbounds ([14 x i8]* @.str21, i64 0, i64 0)) #7
  %44 = load i8** %s.addr, align 8, !tbaa !0
  %incdec.ptr290 = getelementptr inbounds i8* %44, i64 1
  store i8* %incdec.ptr290, i8** %s.addr, align 8, !tbaa !0
  call void @Perl_sv_catpv(%struct.sv* %call244, i8* %incdec.ptr290) #7
  call void @Perl_sv_catpv(%struct.sv* %call244, i8* getelementptr inbounds ([3 x i8]* @.str22, i64 0, i64 0)) #7
  br label %if.end291

if.end291:                                        ; preds = %if.else286, %if.then285
  %45 = load i8** %s.addr, align 8, !tbaa !0
  %call292 = call i64 @strlen(i8* %45) #7
  %add.ptr293 = getelementptr inbounds i8* %45, i64 %call292
  store i8* %add.ptr293, i8** %s.addr, align 8, !tbaa !0
  %sv_flags294 = getelementptr inbounds %struct.sv* %call244, i64 0, i32 2
  %46 = load i32* %sv_flags294, align 4, !tbaa !3
  %and295 = and i32 %46, 262144
  %cmp296 = icmp eq i32 %and295, 0
  br i1 %cmp296, label %cond.false303, label %cond.true298

cond.true298:                                     ; preds = %if.end291
  %sv_any299 = getelementptr inbounds %struct.sv* %call244, i64 0, i32 0
  %47 = load i8** %sv_any299, align 8, !tbaa !0
  %xpv_cur300 = getelementptr inbounds i8* %47, i64 8
  %48 = bitcast i8* %xpv_cur300 to i64*
  %49 = load i64* %48, align 8, !tbaa !5
  store i64 %49, i64* @PL_na, align 8, !tbaa !5
  %xpv_pv302 = bitcast i8* %47 to i8**
  %50 = load i8** %xpv_pv302, align 8, !tbaa !0
  br label %cond.end305

cond.false303:                                    ; preds = %if.end291
  %call304 = call i8* @Perl_sv_2pv_flags(%struct.sv* %call244, i64* @PL_na, i32 2) #7
  br label %cond.end305

cond.end305:                                      ; preds = %cond.false303, %cond.true298
  %cond306 = phi i8* [ %50, %cond.true298 ], [ %call304, %cond.false303 ]
  call void @Perl_my_setenv(i8* getelementptr inbounds ([8 x i8]* @.str23, i64 0, i64 0), i8* %cond306) #7
  br label %if.end307

if.end307:                                        ; preds = %land.lhs.true198, %lor.lhs.false218, %if.end235, %cond.end305
  %51 = load i32* @PL_perldb, align 4, !tbaa !3
  %tobool308 = icmp eq i32 %51, 0
  br i1 %tobool308, label %if.then309, label %if.end310

if.then309:                                       ; preds = %if.end307
  store i32 831, i32* @PL_perldb, align 4, !tbaa !3
  call void @Perl_init_debugger() #8
  br label %if.end310

if.end310:                                        ; preds = %if.end307, %if.then309
  %52 = load i8** %s.addr, align 8, !tbaa !0
  br label %return

sw.bb311:                                         ; preds = %entry
  %53 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings = getelementptr inbounds %struct.cop* %53, i64 0, i32 14
  %54 = load %struct.sv** %cop_warnings, align 8, !tbaa !0
  %cmp312 = icmp eq %struct.sv* %54, null
  br i1 %cmp312, label %if.then330, label %lor.lhs.false314

lor.lhs.false314:                                 ; preds = %sw.bb311
  %55 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings315 = getelementptr inbounds %struct.cop* %55, i64 0, i32 14
  %56 = load %struct.sv** %cop_warnings315, align 8, !tbaa !0
  %cmp316 = icmp eq %struct.sv* %56, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp316, label %if.then330, label %lor.lhs.false318

lor.lhs.false318:                                 ; preds = %lor.lhs.false314
  %57 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings319 = getelementptr inbounds %struct.cop* %57, i64 0, i32 14
  %58 = load %struct.sv** %cop_warnings319, align 8, !tbaa !0
  %cmp320 = icmp eq %struct.sv* %58, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp320, label %for.cond333.preheader, label %land.lhs.true322

land.lhs.true322:                                 ; preds = %lor.lhs.false318
  %59 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings323 = getelementptr inbounds %struct.cop* %59, i64 0, i32 14
  %60 = load %struct.sv** %cop_warnings323, align 8, !tbaa !0
  %sv_any324 = getelementptr inbounds %struct.sv* %60, i64 0, i32 0
  %61 = load i8** %sv_any324, align 8, !tbaa !0
  %xpv_pv325 = bitcast i8* %61 to i8**
  %62 = load i8** %xpv_pv325, align 8, !tbaa !0
  %arrayidx326 = getelementptr inbounds i8* %62, i64 5
  %63 = load i8* %arrayidx326, align 1, !tbaa !1
  %and328 = and i8 %63, 16
  %tobool329 = icmp eq i8 %and328, 0
  br i1 %tobool329, label %for.cond333.preheader, label %if.then330

if.then330:                                       ; preds = %land.lhs.true322, %lor.lhs.false314, %sw.bb311
  call void (i32, i8*, ...)* @Perl_warner(i32 22, i8* getelementptr inbounds ([70 x i8]* @.str24, i64 0, i64 0)) #7
  br label %for.cond333.preheader

for.cond333.preheader:                            ; preds = %land.lhs.true322, %lor.lhs.false318, %if.then330
  %.pn798.pre = load i8** %s.addr, align 8
  br label %for.cond333

for.cond333:                                      ; preds = %for.cond333, %lor.lhs.false349, %for.cond333.preheader
  %.pn798 = phi i8* [ %.pn798.pre, %for.cond333.preheader ], [ %storemerge797, %lor.lhs.false349 ], [ %storemerge797, %for.cond333 ]
  %storemerge797 = getelementptr inbounds i8* %.pn798, i64 1
  store i8* %storemerge797, i8** %s.addr, align 8, !tbaa !0
  %64 = load i8* %storemerge797, align 1, !tbaa !1
  %.off848 = add i8 %64, -65
  %65 = icmp ult i8 %.off848, 26
  %.off849 = add i8 %64, -97
  %66 = icmp ult i8 %.off849, 26
  %or.cond862 = or i1 %65, %66
  br i1 %or.cond862, label %for.cond333, label %lor.lhs.false349

lor.lhs.false349:                                 ; preds = %for.cond333
  %.off850 = add i8 %64, -48
  %67 = icmp ult i8 %.off850, 10
  %cmp359 = icmp eq i8 %64, 95
  %or.cond844 = or i1 %67, %cmp359
  br i1 %or.cond844, label %for.cond333, label %return

sw.bb366:                                         ; preds = %entry
  %68 = load i8*** @PL_origargv, align 8, !tbaa !0
  %69 = load i8** %68, align 8, !tbaa !0
  %call.i829 = call %struct._PerlIO** @Perl_PerlIO_stdout() #7
  %call1.i = call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %call.i829, i8* getelementptr inbounds ([53 x i8]* @.str100, i64 0, i64 0), i8* %69) #7
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %sw.bb366
  %p.05.i = phi i8** [ getelementptr inbounds ([29 x i8*]* @S_usage.usage_msg, i64 0, i64 0), %sw.bb366 ], [ %incdec.ptr.i, %while.body.i ]
  %call2.i = call %struct._PerlIO** @Perl_PerlIO_stdout() #7
  %incdec.ptr.i = getelementptr inbounds i8** %p.05.i, i64 1
  %70 = load i8** %p.05.i, align 8, !tbaa !0
  %call3.i = call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %call2.i, i8* getelementptr inbounds ([6 x i8]* @.str101, i64 0, i64 0), i8* %70) #7
  %71 = load i8** %incdec.ptr.i, align 8, !tbaa !0
  %tobool.i830 = icmp eq i8* %71, null
  br i1 %tobool.i830, label %S_usage.exit, label %while.body.i

S_usage.exit:                                     ; preds = %while.body.i
  store i32 0, i32* @PL_statusvalue, align 4, !tbaa !3
  call fastcc void @S_my_exit_jump() #7
  br label %sw.bb368

sw.bb368:                                         ; preds = %entry, %S_usage.exit
  %72 = load i8** @PL_inplace, align 8, !tbaa !0
  %tobool369 = icmp eq i8* %72, null
  br i1 %tobool369, label %if.end371, label %if.then370

if.then370:                                       ; preds = %sw.bb368
  call void @Perl_safesysfree(i8* %72) #7
  br label %if.end371

if.end371:                                        ; preds = %sw.bb368, %if.then370
  %73 = load i8** %s.addr, align 8, !tbaa !0
  %add.ptr372 = getelementptr inbounds i8* %73, i64 1
  %call373 = call i8* @Perl_savepv(i8* %add.ptr372) #7
  store i8* %call373, i8** @PL_inplace, align 8, !tbaa !0
  br label %for.cond374

for.cond374:                                      ; preds = %for.inc401.critedge, %if.end371
  %74 = phi i8* [ %call373, %if.end371 ], [ %incdec.ptr402, %for.inc401.critedge ]
  store i8* %74, i8** %s.addr, align 8, !tbaa !0
  %75 = load i8* %74, align 1, !tbaa !1
  switch i8 %75, label %for.inc401.critedge [
    i8 0, label %return
    i8 9, label %if.then405
    i8 10, label %if.then405
    i8 12, label %if.then405
    i8 13, label %if.then405
    i8 32, label %if.then405
  ]

for.inc401.critedge:                              ; preds = %for.cond374
  %incdec.ptr402 = getelementptr inbounds i8* %74, i64 1
  br label %for.cond374

if.then405:                                       ; preds = %for.cond374, %for.cond374, %for.cond374, %for.cond374, %for.cond374
  %incdec.ptr406 = getelementptr inbounds i8* %74, i64 1
  store i8* %incdec.ptr406, i8** %s.addr, align 8, !tbaa !0
  store i8 0, i8* %74, align 1, !tbaa !1
  %76 = load i8** %s.addr, align 8, !tbaa !0
  %77 = load i8* %76, align 1, !tbaa !1
  %cmp408 = icmp eq i8 %77, 45
  br i1 %cmp408, label %if.then410, label %return

if.then410:                                       ; preds = %if.then405
  %incdec.ptr411 = getelementptr inbounds i8* %76, i64 1
  store i8* %incdec.ptr411, i8** %s.addr, align 8, !tbaa !0
  br label %return

sw.bb414:                                         ; preds = %entry
  %78 = load i32* @PL_suidscript, align 4, !tbaa !3
  %cmp.i831 = icmp sgt i32 %78, -1
  br i1 %cmp.i831, label %if.then.i832, label %while.cond416

if.then.i832:                                     ; preds = %sw.bb414
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([35 x i8]* @.str69, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str25, i64 0, i64 0)) #7
  %.pre880 = load i8** %s.addr, align 8, !tbaa !0
  br label %while.cond416

while.cond416:                                    ; preds = %if.then.i832, %sw.bb414, %land.end440
  %.pn = phi i8* [ %storemerge, %land.end440 ], [ %s, %sw.bb414 ], [ %.pre880, %if.then.i832 ]
  %storemerge = getelementptr inbounds i8* %.pn, i64 1
  store i8* %storemerge, i8** %s.addr, align 8, !tbaa !0
  %79 = load i8* %storemerge, align 1, !tbaa !1
  %tobool418 = icmp eq i8 %79, 0
  br i1 %tobool418, label %if.else519, label %land.rhs419

land.rhs419:                                      ; preds = %while.cond416
  %switch.tableidx823 = add i8 %79, -9
  %80 = icmp ult i8 %switch.tableidx823, 24
  br i1 %80, label %land.end440, label %for.cond447

land.end440:                                      ; preds = %land.rhs419
  %switch.cast824 = zext i8 %switch.tableidx823 to i24
  %switch.downshift826 = lshr i24 -8388581, %switch.cast824
  %81 = and i24 %switch.downshift826, 1
  %switch.masked827 = icmp eq i24 %81, 0
  br i1 %switch.masked827, label %while.end443, label %while.cond416

while.end443:                                     ; preds = %land.end440
  br i1 %tobool418, label %if.else519, label %for.cond447

for.cond447:                                      ; preds = %land.rhs419, %while.end443, %for.cond447.backedge
  %82 = phi i8 [ %.pre883, %for.cond447.backedge ], [ %79, %while.end443 ], [ %79, %land.rhs419 ]
  %e446.0 = phi i8* [ %e446.0.be, %for.cond447.backedge ], [ %storemerge, %while.end443 ], [ %storemerge, %land.rhs419 ]
  switch i8 %82, label %for.inc474.critedge [
    i8 0, label %while.cond477
    i8 32, label %while.cond477
    i8 9, label %while.cond477
    i8 10, label %while.cond477
    i8 13, label %while.cond477
    i8 12, label %while.cond477
  ]

for.inc474.critedge:                              ; preds = %for.cond447
  %incdec.ptr475 = getelementptr inbounds i8* %e446.0, i64 1
  br label %for.cond447.backedge

for.cond447.backedge:                             ; preds = %while.cond477, %for.inc474.critedge
  %e446.0.be = phi i8* [ %incdec.ptr475, %for.inc474.critedge ], [ %p.1, %while.cond477 ]
  %.pre883 = load i8* %e446.0.be, align 1, !tbaa !1
  br label %for.cond447

while.cond477:                                    ; preds = %for.cond447, %for.cond447, %for.cond447, %for.cond447, %for.cond447, %for.cond447, %while.body498
  %83 = phi i8 [ %.pre884, %while.body498 ], [ %82, %for.cond447 ], [ %82, %for.cond447 ], [ %82, %for.cond447 ], [ %82, %for.cond447 ], [ %82, %for.cond447 ], [ %82, %for.cond447 ]
  %p.1 = phi i8* [ %incdec.ptr499, %while.body498 ], [ %e446.0, %for.cond447 ], [ %e446.0, %for.cond447 ], [ %e446.0, %for.cond447 ], [ %e446.0, %for.cond447 ], [ %e446.0, %for.cond447 ], [ %e446.0, %for.cond447 ]
  switch i8 %83, label %for.cond447.backedge [
    i8 32, label %while.body498
    i8 9, label %while.body498
    i8 10, label %while.body498
    i8 13, label %while.body498
    i8 12, label %while.body498
    i8 0, label %do.end
    i8 45, label %do.end
  ]

while.body498:                                    ; preds = %while.cond477, %while.cond477, %while.cond477, %while.cond477, %while.cond477
  %incdec.ptr499 = getelementptr inbounds i8* %p.1, i64 1
  %.pre884 = load i8* %incdec.ptr499, align 1, !tbaa !1
  br label %while.cond477

do.end:                                           ; preds = %while.cond477, %while.cond477
  %sub.ptr.lhs.cast508 = ptrtoint i8* %e446.0 to i64
  %sub.ptr.rhs.cast509 = ptrtoint i8* %storemerge to i64
  %sub.ptr.sub510 = sub i64 %sub.ptr.lhs.cast508, %sub.ptr.rhs.cast509
  %conv511 = trunc i64 %sub.ptr.sub510 to i32
  %call512 = call i8* @Perl_savepvn(i8* %storemerge, i32 %conv511) #7
  call fastcc void @S_incpush(i8* %call512, i32 1, i32 1, i32 0) #8
  call void @Perl_safesysfree(i8* %call512) #7
  store i8* %p.1, i8** %s.addr, align 8, !tbaa !0
  %84 = load i8* %p.1, align 1, !tbaa !1
  %cmp514 = icmp eq i8 %84, 45
  br i1 %cmp514, label %if.then516, label %return

if.then516:                                       ; preds = %do.end
  %incdec.ptr517 = getelementptr inbounds i8* %p.1, i64 1
  store i8* %incdec.ptr517, i8** %s.addr, align 8, !tbaa !0
  br label %return

if.else519:                                       ; preds = %while.cond416, %while.end443
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([30 x i8]* @.str26, i64 0, i64 0)) #7
  %.pre882 = load i8** %s.addr, align 8, !tbaa !0
  br label %return

sw.bb521:                                         ; preds = %entry
  store i8 1, i8* @PL_minus_l, align 1, !tbaa !1
  %incdec.ptr522 = getelementptr inbounds i8* %s, i64 1
  store i8* %incdec.ptr522, i8** %s.addr, align 8, !tbaa !0
  %85 = load %struct.sv** @PL_ors_sv, align 8, !tbaa !0
  %tobool523 = icmp eq %struct.sv* %85, null
  br i1 %tobool523, label %if.end525, label %if.then524

if.then524:                                       ; preds = %sw.bb521
  call void @Perl_sv_free(%struct.sv* %85) #7
  store %struct.sv* null, %struct.sv** @PL_ors_sv, align 8, !tbaa !0
  %.pre885 = load i8** %s.addr, align 8, !tbaa !0
  br label %if.end525

if.end525:                                        ; preds = %sw.bb521, %if.then524
  %86 = phi i8* [ %incdec.ptr522, %sw.bb521 ], [ %.pre885, %if.then524 ]
  %87 = load i8* %86, align 1, !tbaa !1
  %.off847 = add i8 %87, -48
  %88 = icmp ult i8 %.off847, 10
  br i1 %88, label %if.then533, label %if.else546

if.then533:                                       ; preds = %if.end525
  store i32 0, i32* %flags534, align 4, !tbaa !3
  %call535 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([2 x i8]* @.str, i64 0, i64 0), i64 1) #7
  store %struct.sv* %call535, %struct.sv** @PL_ors_sv, align 8, !tbaa !0
  %89 = load i8** %s.addr, align 8, !tbaa !0
  %90 = load i8* %89, align 1, !tbaa !1
  %cmp537 = icmp eq i8 %90, 48
  %conv540 = select i1 %cmp537, i64 4, i64 3
  store i64 %conv540, i64* %numlen, align 8, !tbaa !5
  %call541 = call i64 @Perl_grok_oct(i8* %89, i64* %numlen, i32* %flags534, double* null) #7
  %conv542 = trunc i64 %call541 to i8
  %91 = load %struct.sv** @PL_ors_sv, align 8, !tbaa !0
  %sv_any543 = getelementptr inbounds %struct.sv* %91, i64 0, i32 0
  %92 = load i8** %sv_any543, align 8, !tbaa !0
  %xpv_pv544 = bitcast i8* %92 to i8**
  %93 = load i8** %xpv_pv544, align 8, !tbaa !0
  store i8 %conv542, i8* %93, align 1, !tbaa !1
  %94 = load i64* %numlen, align 8, !tbaa !5
  %95 = load i8** %s.addr, align 8, !tbaa !0
  %add.ptr545 = getelementptr inbounds i8* %95, i64 %94
  store i8* %add.ptr545, i8** %s.addr, align 8, !tbaa !0
  br label %if.end559

if.else546:                                       ; preds = %if.end525
  %96 = load %struct.sv** @PL_rs, align 8, !tbaa !0
  %sv_flags547 = getelementptr inbounds %struct.sv* %96, i64 0, i32 2
  %97 = load i32* %sv_flags547, align 4, !tbaa !3
  %and548 = and i32 %97, 262144
  %tobool549 = icmp eq i32 %and548, 0
  br i1 %tobool549, label %if.else556, label %land.lhs.true550

land.lhs.true550:                                 ; preds = %if.else546
  %sv_any551 = getelementptr inbounds %struct.sv* %96, i64 0, i32 0
  %98 = load i8** %sv_any551, align 8, !tbaa !0
  %xpv_cur552 = getelementptr inbounds i8* %98, i64 8
  %99 = bitcast i8* %xpv_cur552 to i64*
  %100 = load i64* %99, align 8, !tbaa !5
  %tobool553 = icmp eq i64 %100, 0
  br i1 %tobool553, label %if.then554, label %if.else556

if.then554:                                       ; preds = %land.lhs.true550
  %call555 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([3 x i8]* @.str27, i64 0, i64 0), i64 2) #7
  store %struct.sv* %call555, %struct.sv** @PL_ors_sv, align 8, !tbaa !0
  br label %if.end559

if.else556:                                       ; preds = %land.lhs.true550, %if.else546
  %call557 = call %struct.sv* @Perl_newSVsv(%struct.sv* %96) #7
  store %struct.sv* %call557, %struct.sv** @PL_ors_sv, align 8, !tbaa !0
  br label %if.end559

if.end559:                                        ; preds = %if.then554, %if.else556, %if.then533
  %101 = load i8** %s.addr, align 8, !tbaa !0
  br label %return

sw.bb560:                                         ; preds = %entry
  %102 = load i32* @PL_suidscript, align 4, !tbaa !3
  %cmp.i834 = icmp sgt i32 %102, -1
  br i1 %cmp.i834, label %if.then.i835, label %S_forbid_setid.exit839

if.then.i835:                                     ; preds = %sw.bb560
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([35 x i8]* @.str69, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str28, i64 0, i64 0)) #7
  br label %sw.bb561

sw.bb561:                                         ; preds = %if.then.i835, %entry
  %.pr = load i32* @PL_suidscript, align 4, !tbaa !3
  %cmp.i837 = icmp sgt i32 %.pr, -1
  br i1 %cmp.i837, label %if.then.i838, label %S_forbid_setid.exit839

if.then.i838:                                     ; preds = %sw.bb561
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([35 x i8]* @.str69, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str29, i64 0, i64 0)) #7
  br label %S_forbid_setid.exit839

S_forbid_setid.exit839:                           ; preds = %sw.bb561, %sw.bb560, %if.then.i838
  %103 = load i8** %s.addr, align 8, !tbaa !0
  %incdec.ptr562 = getelementptr inbounds i8* %103, i64 1
  store i8* %incdec.ptr562, i8** %s.addr, align 8, !tbaa !0
  %104 = load i8* %incdec.ptr562, align 1, !tbaa !1
  switch i8 %104, label %if.end572 [
    i8 0, label %if.else644
    i8 45, label %if.then570
  ]

if.then570:                                       ; preds = %S_forbid_setid.exit839
  %incdec.ptr571 = getelementptr inbounds i8* %103, i64 2
  store i8* %incdec.ptr571, i8** %s.addr, align 8, !tbaa !0
  br label %if.end572

if.end572:                                        ; preds = %S_forbid_setid.exit839, %if.then570
  %use.0 = phi i8* [ getelementptr inbounds ([4 x i8]* @.str31, i64 0, i64 0), %if.then570 ], [ getelementptr inbounds ([5 x i8]* @.str30, i64 0, i64 0), %S_forbid_setid.exit839 ]
  %call573 = call %struct.sv* @Perl_newSVpv(i8* %use.0, i64 0) #7
  %105 = load i8** %s.addr, align 8, !tbaa !0
  br label %while.cond574

while.cond574:                                    ; preds = %while.body607, %if.end572
  %106 = phi i8* [ %incdec.ptr608, %while.body607 ], [ %105, %if.end572 ]
  %107 = load i8* %106, align 1, !tbaa !1
  %.off = add i8 %107, -65
  %108 = icmp ult i8 %.off, 26
  %.off845 = add i8 %107, -97
  %109 = icmp ult i8 %.off845, 26
  %or.cond864 = or i1 %108, %109
  %.off846 = add i8 %107, -48
  %110 = icmp ult i8 %.off846, 10
  %or.cond866 = or i1 %or.cond864, %110
  br i1 %or.cond866, label %while.body607, label %lor.end606

lor.end606:                                       ; preds = %while.cond574
  switch i8 %107, label %if.then613 [
    i8 95, label %while.body607
    i8 58, label %while.body607
    i8 61, label %if.else626
  ]

while.body607:                                    ; preds = %lor.end606, %lor.end606, %while.cond574
  %incdec.ptr608 = getelementptr inbounds i8* %106, i64 1
  store i8* %incdec.ptr608, i8** %s.addr, align 8, !tbaa !0
  br label %while.cond574

if.then613:                                       ; preds = %lor.end606
  call void @Perl_sv_catpv(%struct.sv* %call573, i8* %105) #7
  %add.ptr614 = getelementptr inbounds i8* %105, i64 -1
  %111 = load i8* %add.ptr614, align 1, !tbaa !1
  %cmp616 = icmp eq i8 %111, 109
  br i1 %cmp616, label %if.then618, label %if.end637

if.then618:                                       ; preds = %if.then613
  %112 = load i8** %s.addr, align 8, !tbaa !0
  %113 = load i8* %112, align 1, !tbaa !1
  %cmp620 = icmp eq i8 %113, 0
  br i1 %cmp620, label %if.end624, label %if.then622

if.then622:                                       ; preds = %if.then618
  %conv619 = sext i8 %113 to i32
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([28 x i8]* @.str32, i64 0, i64 0), i32 %conv619) #7
  br label %if.end624

if.end624:                                        ; preds = %if.then618, %if.then622
  call void @Perl_sv_catpv(%struct.sv* %call573, i8* getelementptr inbounds ([4 x i8]* @.str33, i64 0, i64 0)) #7
  br label %if.end637

if.else626:                                       ; preds = %lor.end606
  %cmp627 = icmp eq i8* %106, %105
  br i1 %cmp627, label %if.then629, label %if.end632

if.then629:                                       ; preds = %if.else626
  %arrayidx630 = getelementptr inbounds i8* %105, i64 -1
  %114 = load i8* %arrayidx630, align 1, !tbaa !1
  %conv631 = sext i8 %114 to i32
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([37 x i8]* @.str34, i64 0, i64 0), i32 %conv631) #7
  %.pre886 = load i8** %s.addr, align 8, !tbaa !0
  br label %if.end632

if.end632:                                        ; preds = %if.then629, %if.else626
  %115 = phi i8* [ %.pre886, %if.then629 ], [ %106, %if.else626 ]
  %sub.ptr.lhs.cast633 = ptrtoint i8* %115 to i64
  %sub.ptr.rhs.cast634 = ptrtoint i8* %105 to i64
  %sub.ptr.sub635 = sub i64 %sub.ptr.lhs.cast633, %sub.ptr.rhs.cast634
  call void @Perl_sv_catpvn_flags(%struct.sv* %call573, i8* %105, i64 %sub.ptr.sub635, i32 2) #7
  call void @Perl_sv_catpv(%struct.sv* %call573, i8* getelementptr inbounds ([13 x i8]* @.str35, i64 0, i64 0)) #7
  call void @Perl_sv_catpvn_flags(%struct.sv* %call573, i8* getelementptr inbounds ([3 x i8]* @.str36, i64 0, i64 0), i64 1, i32 2) #7
  %116 = load i8** %s.addr, align 8, !tbaa !0
  %incdec.ptr636 = getelementptr inbounds i8* %116, i64 1
  store i8* %incdec.ptr636, i8** %s.addr, align 8, !tbaa !0
  call void @Perl_sv_catpv(%struct.sv* %call573, i8* %incdec.ptr636) #7
  call void @Perl_sv_catpvn_flags(%struct.sv* %call573, i8* getelementptr inbounds ([3 x i8]* @.str36, i64 0, i64 0), i64 2, i32 2) #7
  br label %if.end637

if.end637:                                        ; preds = %if.then613, %if.end624, %if.end632
  %117 = load i8** %s.addr, align 8, !tbaa !0
  %call638 = call i64 @strlen(i8* %117) #7
  %add.ptr639 = getelementptr inbounds i8* %117, i64 %call638
  store i8* %add.ptr639, i8** %s.addr, align 8, !tbaa !0
  %118 = load %struct.av** @PL_preambleav, align 8, !tbaa !0
  %tobool640 = icmp eq %struct.av* %118, null
  br i1 %tobool640, label %if.then641, label %if.end643

if.then641:                                       ; preds = %if.end637
  %call642 = call %struct.av* @Perl_newAV() #7
  store %struct.av* %call642, %struct.av** @PL_preambleav, align 8, !tbaa !0
  br label %if.end643

if.end643:                                        ; preds = %if.end637, %if.then641
  %119 = phi %struct.av* [ %118, %if.end637 ], [ %call642, %if.then641 ]
  call void @Perl_av_push(%struct.av* %119, %struct.sv* %call573) #7
  br label %if.end647

if.else644:                                       ; preds = %S_forbid_setid.exit839
  %120 = load i8* %103, align 1, !tbaa !1
  %conv646 = sext i8 %120 to i32
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([24 x i8]* @.str37, i64 0, i64 0), i32 %conv646) #7
  br label %if.end647

if.end647:                                        ; preds = %if.else644, %if.end643
  %121 = load i8** %s.addr, align 8, !tbaa !0
  br label %return

sw.bb648:                                         ; preds = %entry
  store i8 1, i8* @PL_minus_n, align 1, !tbaa !1
  %incdec.ptr649 = getelementptr inbounds i8* %s, i64 1
  store i8* %incdec.ptr649, i8** %s.addr, align 8, !tbaa !0
  br label %return

sw.bb650:                                         ; preds = %entry
  store i8 1, i8* @PL_minus_p, align 1, !tbaa !1
  %incdec.ptr651 = getelementptr inbounds i8* %s, i64 1
  store i8* %incdec.ptr651, i8** %s.addr, align 8, !tbaa !0
  br label %return

sw.bb652:                                         ; preds = %entry
  %122 = load i32* @PL_suidscript, align 4, !tbaa !3
  %cmp.i840 = icmp sgt i32 %122, -1
  br i1 %cmp.i840, label %if.then.i841, label %S_forbid_setid.exit842

if.then.i841:                                     ; preds = %sw.bb652
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([35 x i8]* @.str69, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str38, i64 0, i64 0)) #7
  %.pre887 = load i8** %s.addr, align 8, !tbaa !0
  br label %S_forbid_setid.exit842

S_forbid_setid.exit842:                           ; preds = %sw.bb652, %if.then.i841
  %123 = phi i8* [ %s, %sw.bb652 ], [ %.pre887, %if.then.i841 ]
  store i8 1, i8* @PL_doswitches, align 1, !tbaa !1
  %incdec.ptr653 = getelementptr inbounds i8* %123, i64 1
  store i8* %incdec.ptr653, i8** %s.addr, align 8, !tbaa !0
  br label %return

sw.bb654:                                         ; preds = %entry
  %124 = load i8* @PL_tainting, align 1, !tbaa !1
  %tobool655 = icmp eq i8 %124, 0
  br i1 %tobool655, label %if.then656, label %if.end657

if.then656:                                       ; preds = %sw.bb654
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([68 x i8]* @.str39, i64 0, i64 0), i32 116, i8* getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0)) #7
  %.pre888 = load i8** %s.addr, align 8, !tbaa !0
  br label %if.end657

if.end657:                                        ; preds = %sw.bb654, %if.then656
  %125 = phi i8* [ %s, %sw.bb654 ], [ %.pre888, %if.then656 ]
  %incdec.ptr658 = getelementptr inbounds i8* %125, i64 1
  store i8* %incdec.ptr658, i8** %s.addr, align 8, !tbaa !0
  br label %return

sw.bb659:                                         ; preds = %entry
  %126 = load i8* @PL_tainting, align 1, !tbaa !1
  %tobool660 = icmp eq i8 %126, 0
  br i1 %tobool660, label %if.then661, label %if.end662

if.then661:                                       ; preds = %sw.bb659
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([68 x i8]* @.str39, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0)) #7
  %.pre889 = load i8** %s.addr, align 8, !tbaa !0
  br label %if.end662

if.end662:                                        ; preds = %sw.bb659, %if.then661
  %127 = phi i8* [ %s, %sw.bb659 ], [ %.pre889, %if.then661 ]
  %incdec.ptr663 = getelementptr inbounds i8* %127, i64 1
  store i8* %incdec.ptr663, i8** %s.addr, align 8, !tbaa !0
  br label %return

sw.bb664:                                         ; preds = %entry
  store i8 1, i8* @PL_do_undump, align 1, !tbaa !1
  %incdec.ptr665 = getelementptr inbounds i8* %s, i64 1
  store i8* %incdec.ptr665, i8** %s.addr, align 8, !tbaa !0
  br label %return

sw.bb666:                                         ; preds = %entry
  store i8 1, i8* @PL_unsafe, align 1, !tbaa !1
  %incdec.ptr667 = getelementptr inbounds i8* %s, i64 1
  store i8* %incdec.ptr667, i8** %s.addr, align 8, !tbaa !0
  br label %return

sw.bb668:                                         ; preds = %entry
  %call669 = call %struct._PerlIO** @Perl_PerlIO_stdout() #7
  %128 = load %struct.sv** @PL_patchlevel, align 8, !tbaa !0
  %call670 = call i8* (i8*, ...)* @Perl_form(i8* getelementptr inbounds ([33 x i8]* @.str40, i64 0, i64 0), %struct.sv* %128, i8* getelementptr inbounds ([9 x i8]* @.str41, i64 0, i64 0)) #7
  %call671 = call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %call669, i8* %call670) #7
  %call672 = call %struct._PerlIO** @Perl_PerlIO_stdout() #7
  %call673 = call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %call672, i8* getelementptr inbounds ([35 x i8]* @.str42, i64 0, i64 0)) #7
  %call674 = call %struct._PerlIO** @Perl_PerlIO_stdout() #7
  %call675 = call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %call674, i8* getelementptr inbounds ([377 x i8]* @.str43, i64 0, i64 0)) #7
  store i32 0, i32* @PL_statusvalue, align 4, !tbaa !3
  call fastcc void @S_my_exit_jump() #7
  br label %sw.bb676

sw.bb676:                                         ; preds = %entry, %sw.bb668
  %129 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and678 = and i8 %129, 6
  %tobool679 = icmp eq i8 %and678, 0
  br i1 %tobool679, label %if.then680, label %if.end684

if.then680:                                       ; preds = %sw.bb676
  %or682 = or i8 %129, 1
  store i8 %or682, i8* @PL_dowarn, align 1, !tbaa !1
  br label %if.end684

if.end684:                                        ; preds = %sw.bb676, %if.then680
  %130 = load i8** %s.addr, align 8, !tbaa !0
  %incdec.ptr685 = getelementptr inbounds i8* %130, i64 1
  store i8* %incdec.ptr685, i8** %s.addr, align 8, !tbaa !0
  br label %return

sw.bb686:                                         ; preds = %entry
  store i8 3, i8* @PL_dowarn, align 1, !tbaa !1
  %131 = load %struct.sv** getelementptr inbounds (%struct.cop* @PL_compiling, i64 0, i32 14), align 8, !tbaa !0
  %magicptr = ptrtoint %struct.sv* %131 to i64
  switch i64 %magicptr, label %if.then695 [
    i64 32, label %if.end696
    i64 16, label %if.end696
    i64 0, label %if.end696
  ]

if.then695:                                       ; preds = %sw.bb686
  call void @Perl_sv_free(%struct.sv* %131) #7
  %.pre890 = load i8** %s.addr, align 8, !tbaa !0
  br label %if.end696

if.end696:                                        ; preds = %sw.bb686, %sw.bb686, %sw.bb686, %if.then695
  %132 = phi i8* [ %s, %sw.bb686 ], [ %s, %sw.bb686 ], [ %s, %sw.bb686 ], [ %.pre890, %if.then695 ]
  store %struct.sv* inttoptr (i64 16 to %struct.sv*), %struct.sv** getelementptr inbounds (%struct.cop* @PL_compiling, i64 0, i32 14), align 8, !tbaa !0
  %incdec.ptr697 = getelementptr inbounds i8* %132, i64 1
  store i8* %incdec.ptr697, i8** %s.addr, align 8, !tbaa !0
  br label %return

sw.bb698:                                         ; preds = %entry
  store i8 4, i8* @PL_dowarn, align 1, !tbaa !1
  %133 = load %struct.sv** getelementptr inbounds (%struct.cop* @PL_compiling, i64 0, i32 14), align 8, !tbaa !0
  %magicptr821 = ptrtoint %struct.sv* %133 to i64
  switch i64 %magicptr821, label %if.then707 [
    i64 32, label %if.end708
    i64 16, label %if.end708
    i64 0, label %if.end708
  ]

if.then707:                                       ; preds = %sw.bb698
  call void @Perl_sv_free(%struct.sv* %133) #7
  %.pre891 = load i8** %s.addr, align 8, !tbaa !0
  br label %if.end708

if.end708:                                        ; preds = %sw.bb698, %sw.bb698, %sw.bb698, %if.then707
  %134 = phi i8* [ %s, %sw.bb698 ], [ %s, %sw.bb698 ], [ %s, %sw.bb698 ], [ %.pre891, %if.then707 ]
  store %struct.sv* inttoptr (i64 32 to %struct.sv*), %struct.sv** getelementptr inbounds (%struct.cop* @PL_compiling, i64 0, i32 14), align 8, !tbaa !0
  %incdec.ptr709 = getelementptr inbounds i8* %134, i64 1
  store i8* %incdec.ptr709, i8** %s.addr, align 8, !tbaa !0
  br label %return

sw.bb710:                                         ; preds = %entry, %entry
  %arrayidx711 = getelementptr inbounds i8* %s, i64 1
  %135 = load i8* %arrayidx711, align 1, !tbaa !1
  %cmp713 = icmp eq i8 %135, 45
  %add.ptr716 = getelementptr inbounds i8* %s, i64 2
  %add.ptr716. = select i1 %cmp713, i8* %add.ptr716, i8* null
  ret i8* %add.ptr716.

sw.bb719:                                         ; preds = %entry
  %136 = load i8* @PL_preprocess, align 1, !tbaa !1
  %tobool720 = icmp eq i8 %136, 0
  br i1 %tobool720, label %sw.default, label %if.then721

if.then721:                                       ; preds = %sw.bb719
  %add.ptr722 = getelementptr inbounds i8* %s, i64 1
  br label %return

sw.default:                                       ; preds = %sw.bb719, %entry
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([31 x i8]* @.str44, i64 0, i64 0), i8* %s) #7
  br label %return

return:                                           ; preds = %for.cond374, %lor.lhs.false349, %if.else519, %if.then516, %do.end, %if.then410, %if.then405, %sw.default, %entry, %entry, %entry, %entry, %entry, %if.then721, %if.end708, %if.end696, %if.end684, %sw.bb666, %sw.bb664, %if.end662, %if.end657, %S_forbid_setid.exit842, %sw.bb650, %sw.bb648, %if.end647, %if.end559, %if.end310, %sw.bb191, %sw.bb189, %while.end, %sw.bb163, %Perl_get_sv.exit
  %retval.0 = phi i8* [ %add.ptr722, %if.then721 ], [ %incdec.ptr709, %if.end708 ], [ %incdec.ptr697, %if.end696 ], [ %incdec.ptr685, %if.end684 ], [ %incdec.ptr667, %sw.bb666 ], [ %incdec.ptr665, %sw.bb664 ], [ %incdec.ptr663, %if.end662 ], [ %incdec.ptr658, %if.end657 ], [ %incdec.ptr653, %S_forbid_setid.exit842 ], [ %incdec.ptr651, %sw.bb650 ], [ %incdec.ptr649, %sw.bb648 ], [ %121, %if.end647 ], [ %101, %if.end559 ], [ %52, %if.end310 ], [ %incdec.ptr192, %sw.bb191 ], [ %incdec.ptr190, %sw.bb189 ], [ %30, %while.end ], [ %24, %sw.bb163 ], [ %add.ptr162, %Perl_get_sv.exit ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %sw.default ], [ %76, %if.then405 ], [ %incdec.ptr411, %if.then410 ], [ %p.1, %do.end ], [ %incdec.ptr517, %if.then516 ], [ %.pre882, %if.else519 ], [ %storemerge797, %lor.lhs.false349 ], [ %74, %for.cond374 ]
  ret i8* %retval.0
}
