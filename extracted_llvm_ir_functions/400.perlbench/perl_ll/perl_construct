define void @perl_construct(%struct.interpreter* nocapture %my_perl) #0 {
entry:
  %0 = load i32* @PL_perl_destruct_level, align 4, !tbaa !3
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([2 x i8]* @.str70, i64 0, i64 0), i8** @PL_splitstr, align 8, !tbaa !0
  store i32 0, i32* @PL_perl_destruct_level, align 4, !tbaa !3
  store i32 2, i32* @PL_maxsysfd, align 4, !tbaa !3
  store i32 1, i32* @PL_sub_generation, align 4, !tbaa !3
  store i8* null, i8** @PL_op_mask, align 8, !tbaa !0
  store %struct.cop* null, %struct.cop** @PL_curcopdb, align 8, !tbaa !0
  store i32 -1, i32* @PL_copline, align 4, !tbaa !3
  store i32 0, i32* @PL_gensym, align 4, !tbaa !3
  store i32 -1, i32* @PL_laststatval, align 4, !tbaa !3
  store i32 235, i32* @PL_laststype, align 4, !tbaa !3
  store %struct.exitlistentry* null, %struct.exitlistentry** @PL_exitlist, align 8, !tbaa !0
  store i32 0, i32* @PL_exitlistlen, align 4, !tbaa !3
  store i32* null, i32** @PL_profiledata, align 8, !tbaa !0
  store volatile %struct._PerlIO** null, %struct._PerlIO*** @PL_rsfp, align 8, !tbaa !0
  store %struct.av* null, %struct.av** @PL_rsfp_filters, align 8, !tbaa !0
  store i32 100, i32* @PL_generation, align 4, !tbaa !3
  store i8 0, i8* @PL_in_clean_objs, align 1, !tbaa !1
  store i8 0, i8* @PL_in_clean_all, align 1, !tbaa !1
  store i32 0, i32* @PL_an, align 4, !tbaa !3
  store i32 0, i32* @PL_cop_seqmax, align 4, !tbaa !3
  store i16 0, i16* @PL_op_seqmax, align 2, !tbaa !4
  store i32 0, i32* @PL_evalseq, align 4, !tbaa !3
  store i32 352, i32* @PL_maxo, align 4, !tbaa !3
  store i8* getelementptr inbounds ([8 x i8]* @.str71, i64 0, i64 0), i8** @PL_sh_path_compat, align 8, !tbaa !0
  store i32 ()* @Perl_runops_standard, i32 ()** @PL_runops, align 8, !tbaa !0
  store i8* getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0), i8** @PL_cshname, align 8, !tbaa !0
  store i32 0, i32* @PL_cshlen, align 4, !tbaa !3
  store i32 3, i32* @PL_expect, align 4, !tbaa !3
  store i64 0, i64* @PL_amagic_generation, align 8, !tbaa !5
  store i32 0, i32* @PL_glob_index, align 4, !tbaa !3
  store %struct.av* null, %struct.av** @PL_beginav_save, align 8, !tbaa !0
  store i32 0, i32* @PL_sig_pending, align 4, !tbaa !3
  store i8 0, i8* @PL_savebegin, align 1, !tbaa !1
  store %struct._PerlIO** null, %struct._PerlIO*** @PL_perlio, align 8, !tbaa !0
  store %struct.PerlIO_list_s* null, %struct.PerlIO_list_s** @PL_known_layers, align 8, !tbaa !0
  store %struct.PerlIO_list_s* null, %struct.PerlIO_list_s** @PL_def_layerlist, align 8, !tbaa !0
  store %struct.sv* null, %struct.sv** @PL_encoding, align 8, !tbaa !0
  store %struct.av* null, %struct.av** @PL_checkav_save, align 8, !tbaa !0
  store i64 0, i64* @PL_clocktick, align 8, !tbaa !5
  store i32 0, i32* @PL_in_load_module, align 4, !tbaa !3
  store void (%struct.sv*)* @Perl_sv_nosharing, void (%struct.sv*)** @PL_sharehook, align 8, !tbaa !0
  store void (%struct.sv*)* @Perl_sv_nolocking, void (%struct.sv*)** @PL_lockhook, align 8, !tbaa !0
  store void (%struct.sv*)* @Perl_sv_nounlocking, void (%struct.sv*)** @PL_unlockhook, align 8, !tbaa !0
  store i32 ()* @Perl_nothreadhook, i32 ()** @PL_threadhook, align 8, !tbaa !0
  store i32 ()* @Perl_runops_standard, i32 ()** @PL_runops_std, align 8, !tbaa !0
  store i32 ()* @Perl_runops_debug, i32 ()** @PL_runops_dbg, align 8, !tbaa !0
  store i64 0, i64* @PL_hash_seed, align 8, !tbaa !5
  store i8 0, i8* @PL_hash_seed_set, align 1, !tbaa !1
  store i64 0, i64* @PL_rehash_seed, align 8, !tbaa !5
  store i8 0, i8* @PL_rehash_seed_set, align 1, !tbaa !1
  store i32 -1, i32* @PL_fdscript, align 4, !tbaa !3
  store i32 -1, i32* @PL_suidscript, align 4, !tbaa !3
  store i32 -1, i32* @PL_tmps_ix, align 4, !tbaa !3
  store i32 -1, i32* @PL_tmps_floor, align 4, !tbaa !3
  store %struct.sv* null, %struct.sv** @PL_statname, align 8, !tbaa !0
  store i8* getelementptr inbounds ([4 x i8]* @.str72, i64 0, i64 0), i8** @PL_chopset, align 8, !tbaa !0
  store volatile %struct.cop* @PL_compiling, %struct.cop** @PL_curcop, align 8, !tbaa !0
  store i8 0, i8* @PL_dirty, align 1, !tbaa !1
  store %struct.sv* null, %struct.sv** @PL_errors, align 8, !tbaa !0
  store i32 4, i32* @PL_dumpindent, align 4, !tbaa !3
  store i32 -1, i32* @PL_maxscream, align 4, !tbaa !3
  store i32 0, i32* @PL_regindent, align 4, !tbaa !3
  store %struct.pmop* null, %struct.pmop** @PL_reg_oldcurpm, align 8, !tbaa !0
  store %struct.pmop* null, %struct.pmop** @PL_reg_curpm, align 8, !tbaa !0
  store i8* null, i8** @PL_reg_poscache, align 8, !tbaa !0
  store void (%struct.op*)* @Perl_peep, void (%struct.op*)** @PL_peepp, align 8, !tbaa !0
  store %struct.regexp* (i8*, i8*, %struct.pmop*)* @Perl_pregcomp, %struct.regexp* (i8*, i8*, %struct.pmop*)** @PL_regcompp, align 8, !tbaa !0
  store i32 (%struct.regexp*, i8*, i8*, i8*, i32, %struct.sv*, i8*, i32)* @Perl_regexec_flags, i32 (%struct.regexp*, i8*, i8*, i8*, i32, %struct.sv*, i8*, i32)** @PL_regexecp, align 8, !tbaa !0
  store i8* (%struct.regexp*, %struct.sv*, i8*, i8*, i32, %struct.re_scream_pos_data_s*)* @Perl_re_intuit_start, i8* (%struct.regexp*, %struct.sv*, i8*, i8*, i32, %struct.re_scream_pos_data_s*)** @PL_regint_start, align 8, !tbaa !0
  store %struct.sv* (%struct.regexp*)* @Perl_re_intuit_string, %struct.sv* (%struct.regexp*)** @PL_regint_string, align 8, !tbaa !0
  store void (%struct.regexp*)* @Perl_pregfree, void (%struct.regexp*)** @PL_regfree, align 8, !tbaa !0
  store i32 0, i32* @PL_reginterp_cnt, align 4, !tbaa !3
  store i8* null, i8** @PL_reg_starttry, align 8, !tbaa !0
  store i8** null, i8*** @PL_watchaddr, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.sv** @PL_linestr, align 8, !tbaa !0
  %tobool = icmp eq %struct.sv* %1, null
  br i1 %tobool, label %if.then1, label %if.end36

if.then1:                                         ; preds = %if.end
  store volatile %struct.cop* @PL_compiling, %struct.cop** @PL_curcop, align 8, !tbaa !0
  %call = tail call %struct.sv* @Perl_newSV(i64 79) #7
  store %struct.sv* %call, %struct.sv** @PL_linestr, align 8, !tbaa !0
  %call2 = tail call signext i8 @Perl_sv_upgrade(%struct.sv* %call, i32 5) #7
  %2 = load i32* getelementptr inbounds (%struct.sv* @PL_sv_undef, i64 0, i32 2), align 4, !tbaa !3
  %and = and i32 %2, 8388608
  %tobool3 = icmp eq i32 %and, 0
  br i1 %tobool3, label %if.then4, label %if.end34

if.then4:                                         ; preds = %if.then1
  %or = or i32 %2, 8388608
  store i32 %or, i32* getelementptr inbounds (%struct.sv* @PL_sv_undef, i64 0, i32 2), align 4, !tbaa !3
  store i32 2147483647, i32* getelementptr inbounds (%struct.sv* @PL_sv_undef, i64 0, i32 1), align 8, !tbaa !3
  %3 = load i8** @PL_No, align 8, !tbaa !0
  tail call void @Perl_sv_setpv(%struct.sv* @PL_sv_no, i8* %3) #7
  %4 = load i32* getelementptr inbounds (%struct.sv* @PL_sv_no, i64 0, i32 2), align 4, !tbaa !3
  %and5 = and i32 %4, 65536
  %tobool6 = icmp eq i32 %and5, 0
  br i1 %tobool6, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.then4
  %call7 = tail call i64 @Perl_sv_2iv(%struct.sv* @PL_sv_no) #7
  %.pre = load i32* getelementptr inbounds (%struct.sv* @PL_sv_no, i64 0, i32 2), align 4, !tbaa !3
  br label %cond.end

cond.end:                                         ; preds = %if.then4, %cond.false
  %5 = phi i32 [ %4, %if.then4 ], [ %.pre, %cond.false ]
  %and8 = and i32 %5, 131072
  %tobool9 = icmp eq i32 %and8, 0
  br i1 %tobool9, label %cond.false11, label %cond.end13

cond.false11:                                     ; preds = %cond.end
  %call12 = tail call double @Perl_sv_2nv(%struct.sv* @PL_sv_no) #7
  %.pre71 = load i32* getelementptr inbounds (%struct.sv* @PL_sv_no, i64 0, i32 2), align 4, !tbaa !3
  br label %cond.end13

cond.end13:                                       ; preds = %cond.end, %cond.false11
  %6 = phi i32 [ %5, %cond.end ], [ %.pre71, %cond.false11 ]
  %or15 = or i32 %6, 8388608
  store i32 %or15, i32* getelementptr inbounds (%struct.sv* @PL_sv_no, i64 0, i32 2), align 4, !tbaa !3
  store i32 2147483647, i32* getelementptr inbounds (%struct.sv* @PL_sv_no, i64 0, i32 1), align 8, !tbaa !3
  %7 = load i8** @PL_Yes, align 8, !tbaa !0
  tail call void @Perl_sv_setpv(%struct.sv* @PL_sv_yes, i8* %7) #7
  %8 = load i32* getelementptr inbounds (%struct.sv* @PL_sv_yes, i64 0, i32 2), align 4, !tbaa !3
  %and16 = and i32 %8, 65536
  %tobool17 = icmp eq i32 %and16, 0
  br i1 %tobool17, label %cond.false20, label %cond.end22

cond.false20:                                     ; preds = %cond.end13
  %call21 = tail call i64 @Perl_sv_2iv(%struct.sv* @PL_sv_yes) #7
  %.pre72 = load i32* getelementptr inbounds (%struct.sv* @PL_sv_yes, i64 0, i32 2), align 4, !tbaa !3
  br label %cond.end22

cond.end22:                                       ; preds = %cond.end13, %cond.false20
  %9 = phi i32 [ %8, %cond.end13 ], [ %.pre72, %cond.false20 ]
  %and24 = and i32 %9, 131072
  %tobool25 = icmp eq i32 %and24, 0
  br i1 %tobool25, label %cond.false28, label %cond.end30

cond.false28:                                     ; preds = %cond.end22
  %call29 = tail call double @Perl_sv_2nv(%struct.sv* @PL_sv_yes) #7
  %.pre73 = load i32* getelementptr inbounds (%struct.sv* @PL_sv_yes, i64 0, i32 2), align 4, !tbaa !3
  br label %cond.end30

cond.end30:                                       ; preds = %cond.end22, %cond.false28
  %10 = phi i32 [ %9, %cond.end22 ], [ %.pre73, %cond.false28 ]
  %or32 = or i32 %10, 8388608
  store i32 %or32, i32* getelementptr inbounds (%struct.sv* @PL_sv_yes, i64 0, i32 2), align 4, !tbaa !3
  store i32 2147483647, i32* getelementptr inbounds (%struct.sv* @PL_sv_yes, i64 0, i32 1), align 8, !tbaa !3
  %11 = load i32* getelementptr inbounds (%struct.sv* @PL_sv_placeholder, i64 0, i32 2), align 4, !tbaa !3
  %or33 = or i32 %11, 8388608
  store i32 %or33, i32* getelementptr inbounds (%struct.sv* @PL_sv_placeholder, i64 0, i32 2), align 4, !tbaa !3
  store i32 2147483647, i32* getelementptr inbounds (%struct.sv* @PL_sv_placeholder, i64 0, i32 1), align 8, !tbaa !3
  br label %if.end34

if.end34:                                         ; preds = %if.then1, %cond.end30
  store void (i32)* @Perl_sighandler, void (i32)** @PL_sighandlerp, align 8, !tbaa !0
  %call35 = tail call %struct.hv* @Perl_newHV() #7
  store %struct.hv* %call35, %struct.hv** @PL_pidstatus, align 8, !tbaa !0
  br label %if.end36

if.end36:                                         ; preds = %if.end, %if.end34
  %call37 = tail call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([2 x i8]* @.str, i64 0, i64 0), i64 1) #7
  store %struct.sv* %call37, %struct.sv** @PL_rs, align 8, !tbaa !0
  tail call void @Perl_init_stacks() #8
  tail call fastcc void @S_init_ids() #8
  store i32 11, i32* @PL_lex_state, align 4, !tbaa !3
  tail call void @llvm.memset.p0i8.i64(i8* bitcast (%struct.jmpenv* @PL_start_env to i8*), i8 0, i64 216, i32 8, i1 false)
  store i32 -1, i32* getelementptr inbounds (%struct.jmpenv* @PL_start_env, i64 0, i32 2), align 8, !tbaa !3
  store i8 1, i8* getelementptr inbounds (%struct.jmpenv* @PL_start_env, i64 0, i32 3), align 4, !tbaa !1
  store %struct.jmpenv* @PL_start_env, %struct.jmpenv** @PL_top_env, align 8, !tbaa !0
  store i32 0, i32* @PL_statusvalue, align 4, !tbaa !3
  %call38 = tail call i32 @Perl_init_i18nl10n(i32 1) #7
  %call39 = tail call %struct.sv* @Perl_newSV(i64 4) #7
  store %struct.sv* %call39, %struct.sv** @PL_patchlevel, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %call39, i64 0, i32 2
  %12 = load i32* %sv_flags, align 4, !tbaa !3
  %and40 = and i32 %12, 254
  %cmp41 = icmp ugt i32 %and40, 5
  br i1 %cmp41, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end36
  %call42 = tail call signext i8 @Perl_sv_upgrade(%struct.sv* %call39, i32 6) #7
  %.pre74 = load %struct.sv** @PL_patchlevel, align 8, !tbaa !0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end36
  %13 = phi %struct.sv* [ %.pre74, %lor.rhs ], [ %call39, %if.end36 ]
  %sv_any = getelementptr inbounds %struct.sv* %13, i64 0, i32 0
  %14 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_pv = bitcast i8* %14 to i8**
  %15 = load i8** %xpv_pv, align 8, !tbaa !0
  %call44 = tail call i8* @Perl_uvuni_to_utf8(i8* %15, i64 5) #7
  %call45 = tail call i8* @Perl_uvuni_to_utf8(i8* %call44, i64 8) #7
  %call46 = tail call i8* @Perl_uvuni_to_utf8(i8* %call45, i64 7) #7
  store i8 0, i8* %call46, align 1, !tbaa !1
  %16 = load %struct.sv** @PL_patchlevel, align 8, !tbaa !0
  %sv_any47 = getelementptr inbounds %struct.sv* %16, i64 0, i32 0
  %17 = load i8** %sv_any47, align 8, !tbaa !0
  %xpv_pv48 = bitcast i8* %17 to i8**
  %18 = load i8** %xpv_pv48, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint i8* %call46 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %18 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %xpv_cur = getelementptr inbounds i8* %17, i64 8
  %19 = bitcast i8* %xpv_cur to i64*
  store i64 %sub.ptr.sub, i64* %19, align 8, !tbaa !5
  %sv_flags50 = getelementptr inbounds %struct.sv* %16, i64 0, i32 2
  %20 = load i32* %sv_flags50, align 4, !tbaa !3
  %xnv_nv53 = getelementptr inbounds i8* %17, i64 32
  %21 = bitcast i8* %xnv_nv53 to double*
  store double 5.008007e+00, double* %21, align 8, !tbaa !6
  %or59 = or i32 %20, 646316032
  store i32 %or59, i32* %sv_flags50, align 4, !tbaa !3
  store i8** getelementptr inbounds ([2 x i8*]* @local_patches, i64 0, i64 0), i8*** @PL_localpatches, align 8, !tbaa !0
  tail call void @PerlIO_init() #7
  %call60 = tail call %struct.av* @Perl_newAV() #7
  store %struct.av* %call60, %struct.av** @PL_fdpid, align 8, !tbaa !0
  %call61 = tail call %struct.hv* @Perl_newHV() #7
  store %struct.hv* %call61, %struct.hv** @PL_modglobal, align 8, !tbaa !0
  %call62 = tail call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0), i64 0) #7
  store %struct.sv* %call62, %struct.sv** @PL_errors, align 8, !tbaa !0
  tail call void @Perl_sv_setpvn(%struct.sv* getelementptr inbounds (%struct.perl_debug_pad* @PL_debug_pad, i64 0, i32 0, i64 0), i8* getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0), i64 0) #7
  tail call void @Perl_sv_setpvn(%struct.sv* getelementptr inbounds (%struct.perl_debug_pad* @PL_debug_pad, i64 0, i32 0, i64 1), i8* getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0), i64 0) #7
  tail call void @Perl_sv_setpvn(%struct.sv* getelementptr inbounds (%struct.perl_debug_pad* @PL_debug_pad, i64 0, i32 0, i64 2), i8* getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0), i64 0) #7
  %call63 = tail call %struct.hv* @Perl_newHV() #7
  store %struct.hv* %call63, %struct.hv** @PL_strtab, align 8, !tbaa !0
  %sv_flags64 = getelementptr inbounds %struct.hv* %call63, i64 0, i32 2
  %22 = load i32* %sv_flags64, align 4, !tbaa !3
  %and65 = and i32 %22, -536870913
  store i32 %and65, i32* %sv_flags64, align 4, !tbaa !3
  tail call void @Perl_hv_ksplit(%struct.hv* %call63, i64 512) #7
  %23 = load i8*** @environ, align 8, !tbaa !0
  store i8** %23, i8*** @PL_origenviron, align 8, !tbaa !0
  store i64 60, i64* @PL_clocktick, align 8, !tbaa !5
  %call66 = tail call %struct.hv* @Perl_newHV() #7
  store %struct.hv* %call66, %struct.hv** @PL_stashcache, align 8, !tbaa !0
  tail call void @Perl_push_scope() #7
  ret void
}
