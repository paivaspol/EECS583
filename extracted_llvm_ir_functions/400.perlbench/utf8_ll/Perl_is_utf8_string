define signext i8 @Perl_is_utf8_string(i8* %s, i64 %len) #2 {
entry:
  %tobool = icmp ne i64 %len, 0
  %tobool1 = icmp eq i8* %s, null
  %or.cond = or i1 %tobool, %tobool1
  br i1 %or.cond, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i64 @strlen(i8* %s) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %len.addr.0 = phi i64 [ %len, %entry ], [ %call, %if.then ]
  %add.ptr = getelementptr inbounds i8* %s, i64 %len.addr.0
  %cmp38 = icmp sgt i64 %len.addr.0, 0
  br i1 %cmp38, label %while.body, label %while.end

while.body:                                       ; preds = %if.end, %if.end19
  %x.039 = phi i8* [ %add.ptr20, %if.end19 ], [ %s, %if.end ]
  %0 = load i8* %x.039, align 1, !tbaa !1
  %cmp2 = icmp sgt i8 %0, -1
  br i1 %cmp2, label %if.end19, label %if.else

if.else:                                          ; preds = %while.body
  %.off = add i8 %0, 64
  %1 = icmp ult i8 %.off, 62
  br i1 %1, label %if.else13, label %return

if.else13:                                        ; preds = %if.else
  %call14 = tail call i64 @Perl_is_utf8_char(i8* %x.039) #6
  %tobool15 = icmp eq i64 %call14, 0
  br i1 %tobool15, label %return, label %if.end19

if.end19:                                         ; preds = %while.body, %if.else13
  %c.0 = phi i64 [ %call14, %if.else13 ], [ 1, %while.body ]
  %add.ptr20 = getelementptr inbounds i8* %x.039, i64 %c.0
  %cmp = icmp ult i8* %add.ptr20, %add.ptr
  br i1 %cmp, label %while.body, label %while.end

while.end:                                        ; preds = %if.end19, %if.end
  %x.0.lcssa = phi i8* [ %s, %if.end ], [ %add.ptr20, %if.end19 ]
  %cmp21 = icmp eq i8* %x.0.lcssa, %add.ptr
  %. = zext i1 %cmp21 to i8
  br label %return

return:                                           ; preds = %if.else13, %if.else, %while.end
  %retval.0 = phi i8 [ %., %while.end ], [ 0, %if.else ], [ 0, %if.else13 ]
  ret i8 %retval.0
}
