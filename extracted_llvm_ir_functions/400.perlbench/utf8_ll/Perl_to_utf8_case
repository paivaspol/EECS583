define i64 @Perl_to_utf8_case(i8* %p, i8* %ustrp, i64* %lenp, %struct.sv** nocapture %swashp, i8* %normal, i8* %special) #0 {
entry:
  %tmpbuf = alloca [7 x i8], align 1
  %len = alloca i64, align 8
  store i64 0, i64* %len, align 8, !tbaa !3
  %call = call i64 @Perl_utf8_to_uvchr(i8* %p, i64* null) #6
  %arraydecay = getelementptr inbounds [7 x i8]* %tmpbuf, i64 0, i64 0
  %call.i = call i8* @Perl_uvuni_to_utf8_flags(i8* %arraydecay, i64 %call, i64 0) #5
  %0 = load %struct.sv** %swashp, align 8, !tbaa !0
  %tobool = icmp eq %struct.sv* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call %struct.sv* @Perl_swash_init(i8* getelementptr inbounds ([5 x i8]* @.str19, i64 0, i64 0), i8* %normal, %struct.sv* @PL_sv_undef, i32 4, i32 0) #6
  store %struct.sv* %call2, %struct.sv** %swashp, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %tobool3 = icmp eq i8* %special, null
  br i1 %tobool3, label %if.end55thread-pre-split, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %cmp = icmp eq i64 %call, 223
  %cmp4 = icmp ugt i64 %call, 255
  %or.cond = or i1 %cmp, %cmp4
  br i1 %or.cond, label %if.then5, label %if.end55thread-pre-split

if.then5:                                         ; preds = %land.lhs.true
  %call6 = call %struct.hv* @Perl_get_hv(i8* %special, i32 0) #5
  %tobool7 = icmp eq %struct.hv* %call6, null
  br i1 %tobool7, label %if.end55thread-pre-split, label %land.lhs.true8

land.lhs.true8:                                   ; preds = %if.then5
  %cmp10 = icmp ult i64 %call, 128
  br i1 %cmp10, label %cond.end36, label %cond.false

cond.false:                                       ; preds = %land.lhs.true8
  %cmp11 = icmp ult i64 %call, 2048
  br i1 %cmp11, label %cond.end36, label %cond.false13

cond.false13:                                     ; preds = %cond.false
  %cmp14 = icmp ult i64 %call, 65536
  br i1 %cmp14, label %cond.end36, label %cond.false16

cond.false16:                                     ; preds = %cond.false13
  %cmp17 = icmp ult i64 %call, 2097152
  br i1 %cmp17, label %cond.end36, label %cond.false19

cond.false19:                                     ; preds = %cond.false16
  %cmp20 = icmp ult i64 %call, 67108864
  br i1 %cmp20, label %cond.end36, label %cond.false22

cond.false22:                                     ; preds = %cond.false19
  %cmp23 = icmp ult i64 %call, 2147483648
  br i1 %cmp23, label %cond.end36, label %cond.false25

cond.false25:                                     ; preds = %cond.false22
  %cmp26 = icmp ult i64 %call, 68719476736
  %cond = select i1 %cmp26, i32 7, i32 13
  br label %cond.end36

cond.end36:                                       ; preds = %cond.false, %cond.false16, %cond.false25, %cond.false22, %cond.false19, %cond.false13, %land.lhs.true8
  %cond37 = phi i32 [ 1, %land.lhs.true8 ], [ 2, %cond.false ], [ 3, %cond.false13 ], [ 4, %cond.false16 ], [ 5, %cond.false19 ], [ %cond, %cond.false25 ], [ 6, %cond.false22 ]
  %call38 = call %struct.sv** @Perl_hv_fetch(%struct.hv* %call6, i8* %arraydecay, i32 %cond37, i32 0) #5
  %tobool39 = icmp eq %struct.sv** %call38, null
  br i1 %tobool39, label %if.end55thread-pre-split, label %land.lhs.true40

land.lhs.true40:                                  ; preds = %cond.end36
  %1 = load %struct.sv** %call38, align 8, !tbaa !0
  %tobool41 = icmp eq %struct.sv* %1, null
  br i1 %tobool41, label %if.end55thread-pre-split, label %if.then42

if.then42:                                        ; preds = %land.lhs.true40
  %sv_flags = getelementptr inbounds %struct.sv* %1, i64 0, i32 2
  %2 = load i32* %sv_flags, align 4, !tbaa !5
  %and = and i32 %2, 262144
  %cmp43 = icmp eq i32 %and, 0
  br i1 %cmp43, label %cond.false46, label %cond.true44

cond.true44:                                      ; preds = %if.then42
  %sv_any = getelementptr inbounds %struct.sv* %1, i64 0, i32 0
  %3 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %3, i64 8
  %4 = bitcast i8* %xpv_cur to i64*
  %5 = load i64* %4, align 8, !tbaa !3
  store i64 %5, i64* %len, align 8, !tbaa !3
  %xpv_pv = bitcast i8* %3 to i8**
  %6 = load i8** %xpv_pv, align 8, !tbaa !0
  br label %cond.end48

cond.false46:                                     ; preds = %if.then42
  %call47 = call i8* @Perl_sv_2pv_flags(%struct.sv* %1, i64* %len, i32 2) #5
  %.pre = load i64* %len, align 8, !tbaa !3
  br label %cond.end48

cond.end48:                                       ; preds = %cond.false46, %cond.true44
  %7 = phi i64 [ %5, %cond.true44 ], [ %.pre, %cond.false46 ]
  %cond49 = phi i8* [ %6, %cond.true44 ], [ %call47, %cond.false46 ]
  %cmp50 = icmp eq i64 %7, 1
  br i1 %cmp50, label %if.then51, label %if.else

if.then51:                                        ; preds = %cond.end48
  %8 = load i8* %cond49, align 1, !tbaa !1
  %conv = zext i8 %8 to i64
  %call.i111 = call i8* @Perl_uvuni_to_utf8_flags(i8* %ustrp, i64 %conv, i64 0) #5
  %sub.ptr.lhs.cast = ptrtoint i8* %call.i111 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %ustrp to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  store i64 %sub.ptr.sub, i64* %len, align 8, !tbaa !3
  br label %if.end55

if.else:                                          ; preds = %cond.end48
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %ustrp, i8* %cond49, i64 %7, i32 1, i1 false)
  br label %if.end55thread-pre-split

if.end55thread-pre-split:                         ; preds = %land.lhs.true40, %cond.end36, %if.then5, %land.lhs.true, %if.end, %if.else
  %.pr = load i64* %len, align 8, !tbaa !3
  br label %if.end55

if.end55:                                         ; preds = %if.end55thread-pre-split, %if.then51
  %9 = phi i64 [ %.pr, %if.end55thread-pre-split ], [ %sub.ptr.sub, %if.then51 ]
  %tobool56 = icmp eq i64 %9, 0
  br i1 %tobool56, label %land.lhs.true57, label %if.end76

land.lhs.true57:                                  ; preds = %if.end55
  %10 = load %struct.sv** %swashp, align 8, !tbaa !0
  %tobool58 = icmp eq %struct.sv* %10, null
  br i1 %tobool58, label %if.then71, label %if.then59

if.then59:                                        ; preds = %land.lhs.true57
  %call61 = call i64 @Perl_swash_fetch(%struct.sv* %10, i8* %arraydecay, i8 signext 1) #6
  %tobool62 = icmp eq i64 %call61, 0
  br i1 %tobool62, label %if.then59.if.end69thread-pre-split_crit_edge, label %if.then63

if.then59.if.end69thread-pre-split_crit_edge:     ; preds = %if.then59
  %.pr114.pre = load i64* %len, align 8, !tbaa !3
  br label %if.end69

if.then63:                                        ; preds = %if.then59
  %call.i112 = call i8* @Perl_uvuni_to_utf8_flags(i8* %ustrp, i64 %call61, i64 0) #5
  %sub.ptr.lhs.cast65 = ptrtoint i8* %call.i112 to i64
  %sub.ptr.rhs.cast66 = ptrtoint i8* %ustrp to i64
  %sub.ptr.sub67 = sub i64 %sub.ptr.lhs.cast65, %sub.ptr.rhs.cast66
  store i64 %sub.ptr.sub67, i64* %len, align 8, !tbaa !3
  br label %if.end69

if.end69:                                         ; preds = %if.then59.if.end69thread-pre-split_crit_edge, %if.then63
  %11 = phi i64 [ %sub.ptr.sub67, %if.then63 ], [ %.pr114.pre, %if.then59.if.end69thread-pre-split_crit_edge ]
  %tobool70 = icmp eq i64 %11, 0
  br i1 %tobool70, label %if.then71, label %if.end76

if.then71:                                        ; preds = %land.lhs.true57, %if.end69
  %call.i113 = call i8* @Perl_uvuni_to_utf8_flags(i8* %ustrp, i64 %call, i64 0) #5
  %sub.ptr.lhs.cast73 = ptrtoint i8* %call.i113 to i64
  %sub.ptr.rhs.cast74 = ptrtoint i8* %ustrp to i64
  %sub.ptr.sub75 = sub i64 %sub.ptr.lhs.cast73, %sub.ptr.rhs.cast74
  store i64 %sub.ptr.sub75, i64* %len, align 8, !tbaa !3
  br label %if.end76

if.end76:                                         ; preds = %if.end55, %if.end69, %if.then71
  %12 = phi i64 [ %11, %if.end69 ], [ %sub.ptr.sub75, %if.then71 ], [ %9, %if.end55 ]
  %tobool77 = icmp eq i64* %lenp, null
  br i1 %tobool77, label %if.end79, label %if.then78

if.then78:                                        ; preds = %if.end76
  store i64 %12, i64* %lenp, align 8, !tbaa !3
  br label %if.end79

if.end79:                                         ; preds = %if.end76, %if.then78
  %tobool80 = icmp eq i64 %12, 0
  br i1 %tobool80, label %cond.end84, label %cond.true81

cond.true81:                                      ; preds = %if.end79
  %call82 = call i64 @Perl_utf8_to_uvchr(i8* %ustrp, i64* null) #6
  br label %cond.end84

cond.end84:                                       ; preds = %if.end79, %cond.true81
  %cond85 = phi i64 [ %call82, %cond.true81 ], [ 0, %if.end79 ]
  ret i64 %cond85
}
