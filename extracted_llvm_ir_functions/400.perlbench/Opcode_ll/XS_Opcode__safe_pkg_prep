define void @XS_Opcode__safe_pkg_prep(%struct.cv* nocapture %cv) #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %2 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i32* %2, i64 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %3 = load i32* %2, align 4, !tbaa !3
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %idx.ext
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nsw i64 %idx.ext, 32
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %4 = and i64 %sub.ptr.sub3, 34359738360
  %cmp = icmp eq i64 %4, 8
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([39 x i8]* @.str, i64 0, i64 0)) #4
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %5 = phi %struct.sv** [ %1, %entry ], [ %.pre, %if.then ]
  %sext = shl i64 %sub.ptr.sub3, 29
  %idx.ext7 = ashr exact i64 %sext, 32
  %idx.neg = sub i64 0, %idx.ext7
  %add.ptr8 = getelementptr inbounds %struct.sv** %0, i64 %idx.neg
  %sext41 = add i64 %add.ptr.idx, 4294967296
  %idxprom = ashr exact i64 %sext41, 32
  %arrayidx = getelementptr inbounds %struct.sv** %5, i64 %idxprom
  %6 = load %struct.sv** %arrayidx, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %6, i64 0, i32 2
  %7 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %7, 262144
  %cmp10 = icmp eq i32 %and, 0
  br i1 %cmp10, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end
  %sv_any = getelementptr inbounds %struct.sv* %6, i64 0, i32 0
  %8 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_pv = bitcast i8* %8 to i8**
  %9 = load i8** %xpv_pv, align 8, !tbaa !0
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %call = tail call i8* @Perl_sv_2pv_nolen(%struct.sv* %6) #4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %9, %cond.true ], [ %call, %cond.false ]
  tail call void @Perl_push_scope() #4
  %call18 = tail call %struct.hv* @Perl_gv_stashpv(i8* %cond, i32 4) #4
  %sv_any19 = getelementptr inbounds %struct.hv* %call18, i64 0, i32 0
  %10 = load %struct.xpvhv** %sv_any19, align 8, !tbaa !0
  %xhv_name = getelementptr inbounds %struct.xpvhv* %10, i64 0, i32 10
  %11 = load i8** %xhv_name, align 8, !tbaa !0
  %call20 = tail call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([5 x i8]* @.str1, i64 0, i64 0)) #4
  %tobool = icmp eq i32 %call20, 0
  br i1 %tobool, label %if.end30, label %if.then21

if.then21:                                        ; preds = %cond.end
  tail call void @Perl_safesysfree(i8* %11) #4
  %call24 = tail call i8* @Perl_savepv(i8* getelementptr inbounds ([5 x i8]* @.str1, i64 0, i64 0)) #4
  %12 = load %struct.xpvhv** %sv_any19, align 8, !tbaa !0
  %xhv_name26 = getelementptr inbounds %struct.xpvhv* %12, i64 0, i32 10
  store i8* %call24, i8** %xhv_name26, align 8, !tbaa !0
  %13 = load %struct.gv** @PL_defgv, align 8, !tbaa !0
  %14 = bitcast %struct.gv* %13 to %struct.sv*
  %call27 = tail call %struct.sv** @Perl_hv_store(%struct.hv* %call18, i8* getelementptr inbounds ([2 x i8]* @.str2, i64 0, i64 0), i32 1, %struct.sv* %14, i32 0) #4
  %15 = load %struct.gv** @PL_defgv, align 8, !tbaa !0
  %16 = bitcast %struct.gv* %15 to %struct.sv*
  store %struct.sv* %16, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %tobool28 = icmp eq %struct.gv* %15, null
  br i1 %tobool28, label %if.end30, label %land.rhs

land.rhs:                                         ; preds = %if.then21
  %17 = getelementptr inbounds %struct.gv* %15, i64 0, i32 1
  %18 = load i32* %17, align 4, !tbaa !3
  %inc = add i32 %18, 1
  store i32 %inc, i32* %17, align 4, !tbaa !3
  br label %if.end30

if.end30:                                         ; preds = %land.rhs, %if.then21, %cond.end
  tail call void @Perl_pop_scope() #4
  store %struct.sv** %add.ptr8, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  ret void
}
