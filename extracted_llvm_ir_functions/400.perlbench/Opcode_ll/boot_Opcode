define void @boot_Opcode(%struct.cv* nocapture %cv) #0 {
entry:
  %0 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i32* %0, i64 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %1 = load i32* %0, align 4, !tbaa !3
  %call = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([23 x i8]* @.str23, i64 0, i64 0), void (%struct.cv*)* @XS_Opcode__safe_pkg_prep, i8* getelementptr inbounds ([56 x i8]* @.str22, i64 0, i64 0)) #4
  %2 = bitcast %struct.cv* %call to %struct.sv*
  tail call void @Perl_sv_setpv(%struct.sv* %2, i8* getelementptr inbounds ([2 x i8]* @.str24, i64 0, i64 0)) #4
  %call7 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([22 x i8]* @.str25, i64 0, i64 0), void (%struct.cv*)* @XS_Opcode__safe_call_sv, i8* getelementptr inbounds ([56 x i8]* @.str22, i64 0, i64 0)) #4
  %3 = bitcast %struct.cv* %call7 to %struct.sv*
  tail call void @Perl_sv_setpv(%struct.sv* %3, i8* getelementptr inbounds ([4 x i8]* @.str26, i64 0, i64 0)) #4
  %call8 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([21 x i8]* @.str27, i64 0, i64 0), void (%struct.cv*)* @XS_Opcode_verify_opset, i8* getelementptr inbounds ([56 x i8]* @.str22, i64 0, i64 0)) #4
  %4 = bitcast %struct.cv* %call8 to %struct.sv*
  tail call void @Perl_sv_setpv(%struct.sv* %4, i8* getelementptr inbounds ([4 x i8]* @.str28, i64 0, i64 0)) #4
  %call9 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([21 x i8]* @.str29, i64 0, i64 0), void (%struct.cv*)* @XS_Opcode_invert_opset, i8* getelementptr inbounds ([56 x i8]* @.str22, i64 0, i64 0)) #4
  %5 = bitcast %struct.cv* %call9 to %struct.sv*
  tail call void @Perl_sv_setpv(%struct.sv* %5, i8* getelementptr inbounds ([2 x i8]* @.str24, i64 0, i64 0)) #4
  %call10 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([21 x i8]* @.str30, i64 0, i64 0), void (%struct.cv*)* @XS_Opcode_opset_to_ops, i8* getelementptr inbounds ([56 x i8]* @.str22, i64 0, i64 0)) #4
  %6 = bitcast %struct.cv* %call10 to %struct.sv*
  tail call void @Perl_sv_setpv(%struct.sv* %6, i8* getelementptr inbounds ([4 x i8]* @.str28, i64 0, i64 0)) #4
  %call11 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([14 x i8]* @.str31, i64 0, i64 0), void (%struct.cv*)* @XS_Opcode_opset, i8* getelementptr inbounds ([56 x i8]* @.str22, i64 0, i64 0)) #4
  %7 = bitcast %struct.cv* %call11 to %struct.sv*
  tail call void @Perl_sv_setpv(%struct.sv* %7, i8* getelementptr inbounds ([3 x i8]* @.str32, i64 0, i64 0)) #4
  %call12 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([20 x i8]* @.str33, i64 0, i64 0), void (%struct.cv*)* @XS_Opcode_permit_only, i8* getelementptr inbounds ([56 x i8]* @.str22, i64 0, i64 0)) #4
  %sv_any = getelementptr inbounds %struct.cv* %call12, i64 0, i32 0
  %8 = load %struct.xpvcv** %sv_any, align 8, !tbaa !0
  %xcv_xsubany = getelementptr inbounds %struct.xpvcv* %8, i64 0, i32 11
  %any_i32 = bitcast %union.any* %xcv_xsubany to i32*
  store i32 0, i32* %any_i32, align 4, !tbaa !3
  %9 = bitcast %struct.cv* %call12 to %struct.sv*
  tail call void @Perl_sv_setpv(%struct.sv* %9, i8* getelementptr inbounds ([4 x i8]* @.str34, i64 0, i64 0)) #4
  %call13 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([13 x i8]* @.str35, i64 0, i64 0), void (%struct.cv*)* @XS_Opcode_permit_only, i8* getelementptr inbounds ([56 x i8]* @.str22, i64 0, i64 0)) #4
  %sv_any14 = getelementptr inbounds %struct.cv* %call13, i64 0, i32 0
  %10 = load %struct.xpvcv** %sv_any14, align 8, !tbaa !0
  %xcv_xsubany15 = getelementptr inbounds %struct.xpvcv* %10, i64 0, i32 11
  %any_i3216 = bitcast %union.any* %xcv_xsubany15 to i32*
  store i32 3, i32* %any_i3216, align 4, !tbaa !3
  %11 = bitcast %struct.cv* %call13 to %struct.sv*
  tail call void @Perl_sv_setpv(%struct.sv* %11, i8* getelementptr inbounds ([4 x i8]* @.str34, i64 0, i64 0)) #4
  %call17 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([18 x i8]* @.str36, i64 0, i64 0), void (%struct.cv*)* @XS_Opcode_permit_only, i8* getelementptr inbounds ([56 x i8]* @.str22, i64 0, i64 0)) #4
  %sv_any18 = getelementptr inbounds %struct.cv* %call17, i64 0, i32 0
  %12 = load %struct.xpvcv** %sv_any18, align 8, !tbaa !0
  %xcv_xsubany19 = getelementptr inbounds %struct.xpvcv* %12, i64 0, i32 11
  %any_i3220 = bitcast %union.any* %xcv_xsubany19 to i32*
  store i32 2, i32* %any_i3220, align 4, !tbaa !3
  %13 = bitcast %struct.cv* %call17 to %struct.sv*
  tail call void @Perl_sv_setpv(%struct.sv* %13, i8* getelementptr inbounds ([4 x i8]* @.str34, i64 0, i64 0)) #4
  %call21 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([15 x i8]* @.str37, i64 0, i64 0), void (%struct.cv*)* @XS_Opcode_permit_only, i8* getelementptr inbounds ([56 x i8]* @.str22, i64 0, i64 0)) #4
  %sv_any22 = getelementptr inbounds %struct.cv* %call21, i64 0, i32 0
  %14 = load %struct.xpvcv** %sv_any22, align 8, !tbaa !0
  %xcv_xsubany23 = getelementptr inbounds %struct.xpvcv* %14, i64 0, i32 11
  %any_i3224 = bitcast %union.any* %xcv_xsubany23 to i32*
  store i32 1, i32* %any_i3224, align 4, !tbaa !3
  %15 = bitcast %struct.cv* %call21 to %struct.sv*
  tail call void @Perl_sv_setpv(%struct.sv* %15, i8* getelementptr inbounds ([4 x i8]* @.str34, i64 0, i64 0)) #4
  %call25 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([15 x i8]* @.str38, i64 0, i64 0), void (%struct.cv*)* @XS_Opcode_opdesc, i8* getelementptr inbounds ([56 x i8]* @.str22, i64 0, i64 0)) #4
  %16 = bitcast %struct.cv* %call25 to %struct.sv*
  tail call void @Perl_sv_setpv(%struct.sv* %16, i8* getelementptr inbounds ([3 x i8]* @.str32, i64 0, i64 0)) #4
  %call26 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([21 x i8]* @.str39, i64 0, i64 0), void (%struct.cv*)* @XS_Opcode_define_optag, i8* getelementptr inbounds ([56 x i8]* @.str22, i64 0, i64 0)) #4
  %17 = bitcast %struct.cv* %call26 to %struct.sv*
  tail call void @Perl_sv_setpv(%struct.sv* %17, i8* getelementptr inbounds ([3 x i8]* @.str40, i64 0, i64 0)) #4
  %call27 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([20 x i8]* @.str41, i64 0, i64 0), void (%struct.cv*)* @XS_Opcode_empty_opset, i8* getelementptr inbounds ([56 x i8]* @.str22, i64 0, i64 0)) #4
  %18 = bitcast %struct.cv* %call27 to %struct.sv*
  tail call void @Perl_sv_setpv(%struct.sv* %18, i8* getelementptr inbounds ([1 x i8]* @.str42, i64 0, i64 0)) #4
  %call28 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([19 x i8]* @.str43, i64 0, i64 0), void (%struct.cv*)* @XS_Opcode_full_opset, i8* getelementptr inbounds ([56 x i8]* @.str22, i64 0, i64 0)) #4
  %19 = bitcast %struct.cv* %call28 to %struct.sv*
  tail call void @Perl_sv_setpv(%struct.sv* %19, i8* getelementptr inbounds ([1 x i8]* @.str42, i64 0, i64 0)) #4
  %call29 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([19 x i8]* @.str44, i64 0, i64 0), void (%struct.cv*)* @XS_Opcode_opmask_add, i8* getelementptr inbounds ([56 x i8]* @.str22, i64 0, i64 0)) #4
  %20 = bitcast %struct.cv* %call29 to %struct.sv*
  tail call void @Perl_sv_setpv(%struct.sv* %20, i8* getelementptr inbounds ([2 x i8]* @.str24, i64 0, i64 0)) #4
  %call30 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([16 x i8]* @.str45, i64 0, i64 0), void (%struct.cv*)* @XS_Opcode_opcodes, i8* getelementptr inbounds ([56 x i8]* @.str22, i64 0, i64 0)) #4
  %21 = bitcast %struct.cv* %call30 to %struct.sv*
  tail call void @Perl_sv_setpv(%struct.sv* %21, i8* getelementptr inbounds ([1 x i8]* @.str42, i64 0, i64 0)) #4
  %call31 = tail call %struct.cv* @Perl_newXS(i8* getelementptr inbounds ([15 x i8]* @.str46, i64 0, i64 0), void (%struct.cv*)* @XS_Opcode_opmask, i8* getelementptr inbounds ([56 x i8]* @.str22, i64 0, i64 0)) #4
  %22 = bitcast %struct.cv* %call31 to %struct.sv*
  tail call void @Perl_sv_setpv(%struct.sv* %22, i8* getelementptr inbounds ([1 x i8]* @.str42, i64 0, i64 0)) #4
  %23 = load i32* @PL_maxo, align 4, !tbaa !3
  %add32 = add nsw i32 %23, 7
  %div = sdiv i32 %add32, 8
  %conv33 = sext i32 %div to i64
  store i64 %conv33, i64* @my_cxt.2, align 8, !tbaa !4
  %idx.ext65 = zext i32 %1 to i64
  %add.ptr.idx = shl nuw i64 %idx.ext65, 32
  %call.i = tail call %struct.hv* @Perl_newHV() #4
  store %struct.hv* %call.i, %struct.hv** @my_cxt.0, align 8, !tbaa !0
  %call1.i = tail call i8** @Perl_get_op_names() #4
  %24 = load i32* @PL_maxo, align 4, !tbaa !3
  %cmp50.i = icmp sgt i32 %24, 0
  br i1 %cmp50.i, label %for.body.i, label %cond.end.i

for.body.i:                                       ; preds = %entry, %for.body.i
  %indvars.iv52.i = phi i64 [ %indvars.iv.next53.i, %for.body.i ], [ 0, %entry ]
  %call2.i = tail call %struct.sv* @Perl_newSViv(i64 %indvars.iv52.i) #4
  %sv_flags.i = getelementptr inbounds %struct.sv* %call2.i, i64 0, i32 2
  %25 = load i32* %sv_flags.i, align 4, !tbaa !3
  %or.i = or i32 %25, 8388608
  store i32 %or.i, i32* %sv_flags.i, align 4, !tbaa !3
  %26 = load %struct.hv** @my_cxt.0, align 8, !tbaa !0
  %arrayidx.i = getelementptr inbounds i8** %call1.i, i64 %indvars.iv52.i
  %27 = load i8** %arrayidx.i, align 8, !tbaa !0
  %call5.i = tail call i64 @strlen(i8* %27) #4
  %conv6.i = trunc i64 %call5.i to i32
  %call7.i = tail call %struct.sv** @Perl_hv_store(%struct.hv* %26, i8* %27, i32 %conv6.i, %struct.sv* %call2.i, i32 0) #4
  %indvars.iv.next53.i = add i64 %indvars.iv52.i, 1
  %28 = load i32* @PL_maxo, align 4, !tbaa !3
  %29 = trunc i64 %indvars.iv.next53.i to i32
  %cmp.i = icmp slt i32 %29, %28
  br i1 %cmp.i, label %for.body.i, label %cond.end.i

cond.end.i:                                       ; preds = %for.body.i, %entry
  %30 = load i64* @my_cxt.2, align 8, !tbaa !4
  %call2.i.i = tail call %struct.sv* @Perl_newSV(i64 %30) #4
  %sv_any.i.i = getelementptr inbounds %struct.sv* %call2.i.i, i64 0, i32 0
  %31 = load i8** %sv_any.i.i, align 8, !tbaa !0
  %xpv_pv.i.i = bitcast i8* %31 to i8**
  %32 = load i8** %xpv_pv.i.i, align 8, !tbaa !0
  %33 = load i64* @my_cxt.2, align 8, !tbaa !4
  %add.i.i = add nsw i64 %33, 1
  tail call void @llvm.memset.p0i8.i64(i8* %32, i8 0, i64 %add.i.i, i32 1, i1 false) #3
  %34 = load i64* @my_cxt.2, align 8, !tbaa !4
  %35 = load i8** %sv_any.i.i, align 8, !tbaa !0
  %xpv_cur.i.i = getelementptr inbounds i8* %35, i64 8
  %36 = bitcast i8* %xpv_cur.i.i to i64*
  store i64 %34, i64* %36, align 8, !tbaa !4
  %sv_flags.i.i = getelementptr inbounds %struct.sv* %call2.i.i, i64 0, i32 2
  %37 = load i32* %sv_flags.i.i, align 4, !tbaa !3
  %and.i.i = and i32 %37, 1223753727
  %or.i.i = or i32 %and.i.i, 67371008
  store i32 %or.i.i, i32* %sv_flags.i.i, align 4, !tbaa !3
  %call9.i = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call2.i.i) #4
  tail call fastcc void @put_op_bitspec(i8* getelementptr inbounds ([6 x i8]* @.str48, i64 0, i64 0), i64 0, %struct.sv* %call9.i) #4
  %38 = load i64* @my_cxt.2, align 8, !tbaa !4
  %call2.i39.i = tail call %struct.sv* @Perl_newSV(i64 %38) #4
  %sv_any.i40.i = getelementptr inbounds %struct.sv* %call2.i39.i, i64 0, i32 0
  %39 = load i8** %sv_any.i40.i, align 8, !tbaa !0
  %xpv_pv.i41.i = bitcast i8* %39 to i8**
  %40 = load i8** %xpv_pv.i41.i, align 8, !tbaa !0
  %41 = load i64* @my_cxt.2, align 8, !tbaa !4
  %add.i42.i = add nsw i64 %41, 1
  tail call void @llvm.memset.p0i8.i64(i8* %40, i8 0, i64 %add.i42.i, i32 1, i1 false) #3
  %42 = load i64* @my_cxt.2, align 8, !tbaa !4
  %43 = load i8** %sv_any.i40.i, align 8, !tbaa !0
  %xpv_cur.i43.i = getelementptr inbounds i8* %43, i64 8
  %44 = bitcast i8* %xpv_cur.i43.i to i64*
  store i64 %42, i64* %44, align 8, !tbaa !4
  %sv_flags.i44.i = getelementptr inbounds %struct.sv* %call2.i39.i, i64 0, i32 2
  %45 = load i32* %sv_flags.i44.i, align 4, !tbaa !3
  %and.i45.i = and i32 %45, 1223753727
  %or.i46.i = or i32 %and.i45.i, 67371008
  store i32 %or.i46.i, i32* %sv_flags.i44.i, align 4, !tbaa !3
  store %struct.sv* %call2.i39.i, %struct.sv** @my_cxt.1, align 8, !tbaa !0
  %46 = load i8** %sv_any.i40.i, align 8, !tbaa !0
  %xpv_cur.i = getelementptr inbounds i8* %46, i64 8
  %47 = bitcast i8* %xpv_cur.i to i64*
  %48 = load i64* %47, align 8, !tbaa !4
  %xpv_pv.i = bitcast i8* %46 to i8**
  %49 = load i8** %xpv_pv.i, align 8, !tbaa !0
  %phitmp54.i = add i64 %48, 4294967295
  %phitmp55.i = trunc i64 %phitmp54.i to i32
  %cmp1748.i = icmp sgt i32 %phitmp55.i, 0
  br i1 %cmp1748.i, label %while.body.lr.ph.i, label %while.end.i

while.body.lr.ph.i:                               ; preds = %cond.end.i
  %sext.i = shl i64 %phitmp54.i, 32
  %50 = ashr exact i64 %sext.i, 32
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.lr.ph.i
  %indvars.iv.i = phi i64 [ %50, %while.body.lr.ph.i ], [ %indvars.iv.next.i, %while.body.i ]
  %indvars.iv.next.i = add i64 %indvars.iv.i, -1
  %arrayidx20.i = getelementptr inbounds i8* %49, i64 %indvars.iv.next.i
  store i8 -1, i8* %arrayidx20.i, align 1, !tbaa !1
  %51 = trunc i64 %indvars.iv.next.i to i32
  %cmp17.i = icmp sgt i32 %51, 0
  br i1 %cmp17.i, label %while.body.i, label %while.end.i

while.end.i:                                      ; preds = %while.body.i, %cond.end.i
  %52 = load i32* @PL_maxo, align 4, !tbaa !3
  %and21.i = and i32 %52, 7
  %tobool.i = icmp eq i32 %and21.i, 0
  br i1 %tobool.i, label %op_names_init.exit, label %cond.true22.i

cond.true22.i:                                    ; preds = %while.end.i
  %shl.i = shl i32 255, %and21.i
  %neg.i = xor i32 %shl.i, 255
  %phitmp.i = trunc i32 %neg.i to i8
  br label %op_names_init.exit

op_names_init.exit:                               ; preds = %while.end.i, %cond.true22.i
  %cond26.i = phi i8 [ %phitmp.i, %cond.true22.i ], [ -1, %while.end.i ]
  %sub28.i = add i64 %48, -1
  %arrayidx29.i = getelementptr inbounds i8* %49, i64 %sub28.i
  store i8 %cond26.i, i8* %arrayidx29.i, align 1, !tbaa !1
  %53 = load %struct.sv** @my_cxt.1, align 8, !tbaa !0
  tail call fastcc void @put_op_bitspec(i8* getelementptr inbounds ([5 x i8]* @.str49, i64 0, i64 0), i64 0, %struct.sv* %53) #4
  %sext = add i64 %add.ptr.idx, 4294967296
  %idxprom = ashr exact i64 %sext, 32
  %54 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %struct.sv** %54, i64 %idxprom
  store %struct.sv* @PL_sv_yes, %struct.sv** %arrayidx, align 8, !tbaa !0
  %55 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %add.ptr37 = getelementptr inbounds %struct.sv** %55, i64 %idxprom
  store %struct.sv** %add.ptr37, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  ret void
}
