define void @XS_Opcode__safe_call_sv(%struct.cv* nocapture %cv) #0 {
entry:
  %op_mask_buf = alloca [452 x i8], align 16
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %2 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i32* %2, i64 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %3 = load i32* %2, align 4, !tbaa !3
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %idx.ext
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nsw i64 %idx.ext, 32
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %4 = and i64 %sub.ptr.sub3, 34359738360
  %cmp = icmp eq i64 %4, 24
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([52 x i8]* @.str3, i64 0, i64 0)) #4
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %5 = phi %struct.sv** [ %1, %entry ], [ %.pre, %if.then ]
  %sext = shl i64 %sub.ptr.sub3, 29
  %idx.ext7 = ashr exact i64 %sext, 32
  %idx.neg = sub i64 0, %idx.ext7
  %add.ptr8 = getelementptr inbounds %struct.sv** %0, i64 %idx.neg
  %sext86 = add i64 %add.ptr.idx, 4294967296
  %idxprom = ashr exact i64 %sext86, 32
  %arrayidx = getelementptr inbounds %struct.sv** %5, i64 %idxprom
  %6 = load %struct.sv** %arrayidx, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %6, i64 0, i32 2
  %7 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %7, 262144
  %cmp10 = icmp eq i32 %and, 0
  br i1 %cmp10, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end
  %sv_any = getelementptr inbounds %struct.sv* %6, i64 0, i32 0
  %8 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_pv = bitcast i8* %8 to i8**
  %9 = load i8** %xpv_pv, align 8, !tbaa !0
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %call = call i8* @Perl_sv_2pv_nolen(%struct.sv* %6) #4
  %.pre90 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %10 = phi %struct.sv** [ %5, %cond.true ], [ %.pre90, %cond.false ]
  %cond = phi i8* [ %9, %cond.true ], [ %call, %cond.false ]
  %sext87 = add i64 %add.ptr.idx, 8589934592
  %idxprom19 = ashr exact i64 %sext87, 32
  %arrayidx20 = getelementptr inbounds %struct.sv** %10, i64 %idxprom19
  %11 = load %struct.sv** %arrayidx20, align 8, !tbaa !0
  %sext88 = add i64 %add.ptr.idx, 12884901888
  %idxprom22 = ashr exact i64 %sext88, 32
  %arrayidx23 = getelementptr inbounds %struct.sv** %10, i64 %idxprom22
  %12 = load %struct.sv** %arrayidx23, align 8, !tbaa !0
  %13 = getelementptr inbounds [452 x i8]* %op_mask_buf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 452, i8* %13) #3
  call void @Perl_push_scope() #4
  %14 = load i8** @PL_op_mask, align 8, !tbaa !0
  call void @Perl_save_vptr(i8* bitcast (i8** @PL_op_mask to i8*)) #4
  store i8* %13, i8** @PL_op_mask, align 8, !tbaa !0
  %tobool.i = icmp eq i8* %14, null
  %15 = load i32* @PL_maxo, align 4, !tbaa !3
  %conv2.i = sext i32 %15 to i64
  br i1 %tobool.i, label %if.else.i, label %if.then1.i

if.then1.i:                                       ; preds = %cond.end
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 %conv2.i, i32 1, i1 false) #3
  br label %opmask_addlocal.exit

if.else.i:                                        ; preds = %cond.end
  call void @llvm.memset.p0i8.i64(i8* %13, i8 0, i64 %conv2.i, i32 16, i1 false) #3
  br label %opmask_addlocal.exit

opmask_addlocal.exit:                             ; preds = %if.then1.i, %if.else.i
  call fastcc void @opmask_add(%struct.sv* %11) #4
  call void @Perl_save_aptr(%struct.av** @PL_endav) #4
  %call24 = call %struct.av* @Perl_newAV() #4
  %16 = bitcast %struct.av* %call24 to %struct.sv*
  %call25 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %16) #4
  %17 = bitcast %struct.sv* %call25 to %struct.av*
  store %struct.av* %17, %struct.av** @PL_endav, align 8, !tbaa !0
  call void @Perl_save_hptr(%struct.hv** @PL_defstash) #4
  %call26 = call %struct.hv* @Perl_gv_stashpv(i8* %cond, i32 4) #4
  store %struct.hv* %call26, %struct.hv** @PL_defstash, align 8, !tbaa !0
  call void @Perl_save_hptr(%struct.hv** @PL_curstash) #4
  %18 = load %struct.hv** @PL_defstash, align 8, !tbaa !0
  store %struct.hv* %18, %struct.hv** @PL_curstash, align 8, !tbaa !0
  %call27 = call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([7 x i8]* @.str4, i64 0, i64 0), i32 4, i32 11) #4
  %sv_any28 = getelementptr inbounds %struct.gv* %call27, i64 0, i32 0
  %19 = load %struct.xpvgv** %sv_any28, align 8, !tbaa !0
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %19, i64 0, i32 7
  %20 = load %struct.gp** %xgv_gp, align 8, !tbaa !0
  %gp_hv = getelementptr inbounds %struct.gp* %20, i64 0, i32 5
  %21 = load %struct.hv** %gp_hv, align 8, !tbaa !0
  %22 = bitcast %struct.hv* %21 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %22) #4
  %23 = load %struct.hv** @PL_defstash, align 8, !tbaa !0
  %24 = bitcast %struct.hv* %23 to %struct.sv*
  store %struct.sv* %24, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %tobool = icmp eq %struct.hv* %23, null
  br i1 %tobool, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %opmask_addlocal.exit
  %25 = getelementptr inbounds %struct.hv* %23, i64 0, i32 1
  %26 = load i32* %25, align 4, !tbaa !3
  %inc = add i32 %26, 1
  store i32 %inc, i32* %25, align 4, !tbaa !3
  br label %land.end

land.end:                                         ; preds = %opmask_addlocal.exit, %land.rhs
  %27 = load %struct.xpvgv** %sv_any28, align 8, !tbaa !0
  %xgv_gp31 = getelementptr inbounds %struct.xpvgv* %27, i64 0, i32 7
  %28 = load %struct.gp** %xgv_gp31, align 8, !tbaa !0
  %gp_hv32 = getelementptr inbounds %struct.gp* %28, i64 0, i32 5
  store %struct.hv* %23, %struct.hv** %gp_hv32, align 8, !tbaa !0
  %29 = load %struct.gv** @PL_incgv, align 8, !tbaa !0
  %call33 = call %struct.hv* @Perl_save_hash(%struct.gv* %29) #4
  %call34 = call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 1, i32 11) #4
  %call35 = call %struct.gv* @Perl_gv_HVadd(%struct.gv* %call34) #4
  %sv_any36 = getelementptr inbounds %struct.gv* %call35, i64 0, i32 0
  %30 = load %struct.xpvgv** %sv_any36, align 8, !tbaa !0
  %xgv_gp37 = getelementptr inbounds %struct.xpvgv* %30, i64 0, i32 7
  %31 = load %struct.gp** %xgv_gp37, align 8, !tbaa !0
  %gp_hv38 = getelementptr inbounds %struct.gp* %31, i64 0, i32 5
  %32 = load %struct.hv** %gp_hv38, align 8, !tbaa !0
  %33 = bitcast %struct.hv* %32 to %struct.sv*
  store %struct.sv* %33, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %tobool39 = icmp eq %struct.hv* %32, null
  br i1 %tobool39, label %land.end44, label %land.rhs40

land.rhs40:                                       ; preds = %land.end
  %34 = getelementptr inbounds %struct.hv* %32, i64 0, i32 1
  %35 = load i32* %34, align 4, !tbaa !3
  %inc42 = add i32 %35, 1
  store i32 %inc42, i32* %34, align 4, !tbaa !3
  br label %land.end44

land.end44:                                       ; preds = %land.end, %land.rhs40
  %36 = load %struct.gv** @PL_incgv, align 8, !tbaa !0
  %sv_any46 = getelementptr inbounds %struct.gv* %36, i64 0, i32 0
  %37 = load %struct.xpvgv** %sv_any46, align 8, !tbaa !0
  %xgv_gp47 = getelementptr inbounds %struct.xpvgv* %37, i64 0, i32 7
  %38 = load %struct.gp** %xgv_gp47, align 8, !tbaa !0
  %gp_hv48 = getelementptr inbounds %struct.gp* %38, i64 0, i32 5
  store %struct.hv* %32, %struct.hv** %gp_hv48, align 8, !tbaa !0
  %39 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr49 = getelementptr inbounds i32* %39, i64 1
  store i32* %incdec.ptr49, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %40 = load i32** @PL_markstack_max, align 8, !tbaa !0
  %cmp50 = icmp eq i32* %incdec.ptr49, %40
  br i1 %cmp50, label %if.then52, label %if.end53

if.then52:                                        ; preds = %land.end44
  call void @Perl_markstack_grow() #4
  %.pre91 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  br label %if.end53

if.end53:                                         ; preds = %if.then52, %land.end44
  %41 = phi i32* [ %.pre91, %if.then52 ], [ %incdec.ptr49, %land.end44 ]
  %42 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %sub.ptr.lhs.cast54 = ptrtoint %struct.sv** %add.ptr8 to i64
  %sub.ptr.rhs.cast55 = ptrtoint %struct.sv** %42 to i64
  %sub.ptr.sub56 = sub i64 %sub.ptr.lhs.cast54, %sub.ptr.rhs.cast55
  %sub.ptr.div5789 = lshr exact i64 %sub.ptr.sub56, 3
  %conv58 = trunc i64 %sub.ptr.div5789 to i32
  store i32 %conv58, i32* %41, align 4, !tbaa !3
  %43 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags = getelementptr inbounds %struct.op* %43, i64 0, i32 6
  %44 = load i8* %op_flags, align 1, !tbaa !1
  %conv59 = zext i8 %44 to i32
  %and60 = and i32 %conv59, 3
  %tobool61 = icmp eq i32 %and60, 0
  br i1 %tobool61, label %cond.false69, label %cond.true62

cond.true62:                                      ; preds = %if.end53
  %cmp66 = icmp eq i32 %and60, 3
  %cond68 = zext i1 %cmp66 to i32
  br label %cond.end71

cond.false69:                                     ; preds = %if.end53
  %call70 = call i32 @Perl_dowantarray() #4
  br label %cond.end71

cond.end71:                                       ; preds = %cond.false69, %cond.true62
  %cond72 = phi i32 [ %cond68, %cond.true62 ], [ %call70, %cond.false69 ]
  %or73 = or i32 %cond72, 20
  %call74 = call i32 @Perl_call_sv(%struct.sv* %12, i32 %or73) #4
  %45 = bitcast %struct.hv* %call33 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %45) #4
  %46 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  call void @Perl_pop_scope() #4
  store %struct.sv** %46, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  call void @llvm.lifetime.end(i64 452, i8* %13) #3
  ret void
}
