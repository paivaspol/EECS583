define void @XS_Opcode_opset_to_ops(%struct.cv* nocapture %cv) #0 {
entry:
  %len = alloca i64, align 8
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %2 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i32* %2, i64 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %3 = load i32* %2, align 4, !tbaa !3
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %idx.ext
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nsw i64 %idx.ext, 32
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %sub.ptr.div4102 = lshr exact i64 %sub.ptr.sub3, 3
  %conv5 = trunc i64 %sub.ptr.div4102 to i32
  %conv5.off = add i32 %conv5, -1
  %4 = icmp ugt i32 %conv5.off, 1
  br i1 %4, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([45 x i8]* @.str8, i64 0, i64 0)) #4
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %5 = phi %struct.sv** [ %1, %entry ], [ %.pre, %if.then ]
  %sext = shl i64 %sub.ptr.sub3, 29
  %idx.ext9 = ashr exact i64 %sext, 32
  %idx.neg = sub i64 0, %idx.ext9
  %add.ptr10 = getelementptr inbounds %struct.sv** %0, i64 %idx.neg
  %sext103 = add i64 %add.ptr.idx, 4294967296
  %idxprom = ashr exact i64 %sext103, 32
  %arrayidx = getelementptr inbounds %struct.sv** %5, i64 %idxprom
  %6 = load %struct.sv** %arrayidx, align 8, !tbaa !0
  %cmp12 = icmp slt i32 %conv5, 2
  br i1 %cmp12, label %if.end25, label %if.else

if.else:                                          ; preds = %if.end
  %sext104 = add i64 %add.ptr.idx, 8589934592
  %idxprom16 = ashr exact i64 %sext104, 32
  %arrayidx17 = getelementptr inbounds %struct.sv** %5, i64 %idxprom16
  %7 = load %struct.sv** %arrayidx17, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %7, i64 0, i32 2
  %8 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %8, 65536
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.else
  %sv_any = getelementptr inbounds %struct.sv* %7, i64 0, i32 0
  %9 = load i8** %sv_any, align 8, !tbaa !0
  %xiv_iv = getelementptr inbounds i8* %9, i64 24
  %10 = bitcast i8* %xiv_iv to i64*
  %11 = load i64* %10, align 8, !tbaa !4
  br label %cond.end

cond.false:                                       ; preds = %if.else
  %call = call i64 @Perl_sv_2iv(%struct.sv* %7) #4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %11, %cond.true ], [ %call, %cond.false ]
  %conv24 = trunc i64 %cond to i32
  br label %if.end25

if.end25:                                         ; preds = %if.end, %cond.end
  %desc.0 = phi i32 [ %conv24, %cond.end ], [ 0, %if.end ]
  %sv_flags26 = getelementptr inbounds %struct.sv* %6, i64 0, i32 2
  %12 = load i32* %sv_flags26, align 4, !tbaa !3
  %and27 = and i32 %12, 262144
  %cmp28 = icmp eq i32 %and27, 0
  br i1 %cmp28, label %cond.false33, label %cond.true30

cond.true30:                                      ; preds = %if.end25
  %sv_any31 = getelementptr inbounds %struct.sv* %6, i64 0, i32 0
  %13 = load i8** %sv_any31, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %13, i64 8
  %14 = bitcast i8* %xpv_cur to i64*
  %15 = load i64* %14, align 8, !tbaa !4
  store i64 %15, i64* %len, align 8, !tbaa !4
  %xpv_pv = bitcast i8* %13 to i8**
  %16 = load i8** %xpv_pv, align 8, !tbaa !0
  br label %cond.end35

cond.false33:                                     ; preds = %if.end25
  %call34 = call i8* @Perl_sv_2pv_flags(%struct.sv* %6, i64* %len, i32 2) #4
  br label %cond.end35

cond.end35:                                       ; preds = %cond.false33, %cond.true30
  %cond36 = phi i8* [ %16, %cond.true30 ], [ %call34, %cond.false33 ]
  %tobool37 = icmp eq i32 %desc.0, 0
  br i1 %tobool37, label %cond.false40, label %cond.true38

cond.true38:                                      ; preds = %cond.end35
  %call39 = call i8** @Perl_get_op_descs() #4
  br label %cond.end42

cond.false40:                                     ; preds = %cond.end35
  %call41 = call i8** @Perl_get_op_names() #4
  br label %cond.end42

cond.end42:                                       ; preds = %cond.false40, %cond.true38
  %cond43 = phi i8** [ %call39, %cond.true38 ], [ %call41, %cond.false40 ]
  %call44 = call fastcc i32 @verify_opset(%struct.sv* %6, i32 1) #5
  %17 = load i64* @my_cxt.2, align 8, !tbaa !4
  %cmp46111 = icmp sgt i64 %17, 0
  br i1 %cmp46111, label %for.body.lr.ph, label %for.end79

for.body.lr.ph:                                   ; preds = %cond.end42
  %.pre119 = load i32* @PL_maxo, align 4, !tbaa !3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc77
  %18 = phi i64 [ %17, %for.body.lr.ph ], [ %27, %for.inc77 ]
  %19 = phi i32 [ %.pre119, %for.body.lr.ph ], [ %28, %for.inc77 ]
  %indvars.iv117 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next118, %for.inc77 ]
  %sp.0114 = phi %struct.sv** [ %add.ptr10, %for.body.lr.ph ], [ %sp.1.lcssa, %for.inc77 ]
  %myopcode.0112 = phi i32 [ 0, %for.body.lr.ph ], [ %myopcode.1.lcssa, %for.inc77 ]
  %cmp54105 = icmp slt i32 %myopcode.0112, %19
  br i1 %cmp54105, label %for.body56.lr.ph, label %for.inc77

for.body56.lr.ph:                                 ; preds = %for.body
  %arrayidx49 = getelementptr inbounds i8* %cond36, i64 %indvars.iv117
  %20 = load i8* %arrayidx49, align 1, !tbaa !1
  %conv50 = sext i8 %20 to i32
  %conv57 = and i32 %conv50, 65535
  %21 = sext i32 %myopcode.0112 to i64
  br label %for.body56

for.body56:                                       ; preds = %for.body56.lr.ph, %for.inc
  %22 = phi i32 [ %19, %for.body56.lr.ph ], [ %25, %for.inc ]
  %indvars.iv = phi i64 [ %21, %for.body56.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %sp.1109 = phi %struct.sv** [ %sp.0114, %for.body56.lr.ph ], [ %sp.3, %for.inc ]
  %myopcode.1108 = phi i32 [ %myopcode.0112, %for.body56.lr.ph ], [ %inc76, %for.inc ]
  %j.0107 = phi i32 [ 0, %for.body56.lr.ph ], [ %inc, %for.inc ]
  %shl = shl i32 1, %j.0107
  %and58 = and i32 %conv57, %shl
  %tobool59 = icmp eq i32 %and58, 0
  br i1 %tobool59, label %for.inc, label %if.then60

if.then60:                                        ; preds = %for.body56
  %23 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast61 = ptrtoint %struct.sv** %23 to i64
  %sub.ptr.rhs.cast62 = ptrtoint %struct.sv** %sp.1109 to i64
  %sub.ptr.sub63 = sub i64 %sub.ptr.lhs.cast61, %sub.ptr.rhs.cast62
  %cmp65 = icmp slt i64 %sub.ptr.sub63, 8
  br i1 %cmp65, label %if.then67, label %if.end69

if.then67:                                        ; preds = %if.then60
  %call68 = call %struct.sv** @Perl_stack_grow(%struct.sv** %sp.1109, %struct.sv** %sp.1109, i32 1) #4
  br label %if.end69

if.end69:                                         ; preds = %if.then67, %if.then60
  %sp.2 = phi %struct.sv** [ %call68, %if.then67 ], [ %sp.1109, %if.then60 ]
  %arrayidx71 = getelementptr inbounds i8** %cond43, i64 %indvars.iv
  %24 = load i8** %arrayidx71, align 8, !tbaa !0
  %call72 = call %struct.sv* @Perl_newSVpv(i8* %24, i64 0) #4
  %call73 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call72) #4
  %incdec.ptr74 = getelementptr inbounds %struct.sv** %sp.2, i64 1
  store %struct.sv* %call73, %struct.sv** %incdec.ptr74, align 8, !tbaa !0
  %.pre120 = load i32* @PL_maxo, align 4, !tbaa !3
  br label %for.inc

for.inc:                                          ; preds = %for.body56, %if.end69
  %25 = phi i32 [ %.pre120, %if.end69 ], [ %22, %for.body56 ]
  %sp.3 = phi %struct.sv** [ %incdec.ptr74, %if.end69 ], [ %sp.1109, %for.body56 ]
  %inc = add nsw i32 %j.0107, 1
  %indvars.iv.next = add i64 %indvars.iv, 1
  %inc76 = add nsw i32 %myopcode.1108, 1
  %cmp52 = icmp slt i32 %inc, 8
  %26 = trunc i64 %indvars.iv.next to i32
  %cmp54 = icmp slt i32 %26, %25
  %or.cond = and i1 %cmp52, %cmp54
  br i1 %or.cond, label %for.body56, label %for.cond51.for.inc77_crit_edge

for.cond51.for.inc77_crit_edge:                   ; preds = %for.inc
  %.pre121 = load i64* @my_cxt.2, align 8, !tbaa !4
  br label %for.inc77

for.inc77:                                        ; preds = %for.body, %for.cond51.for.inc77_crit_edge
  %27 = phi i64 [ %.pre121, %for.cond51.for.inc77_crit_edge ], [ %18, %for.body ]
  %28 = phi i32 [ %25, %for.cond51.for.inc77_crit_edge ], [ %19, %for.body ]
  %sp.1.lcssa = phi %struct.sv** [ %sp.3, %for.cond51.for.inc77_crit_edge ], [ %sp.0114, %for.body ]
  %myopcode.1.lcssa = phi i32 [ %inc76, %for.cond51.for.inc77_crit_edge ], [ %myopcode.0112, %for.body ]
  %indvars.iv.next118 = add i64 %indvars.iv117, 1
  %cmp46 = icmp slt i64 %indvars.iv.next118, %27
  br i1 %cmp46, label %for.body, label %for.end79

for.end79:                                        ; preds = %for.inc77, %cond.end42
  %sp.0.lcssa = phi %struct.sv** [ %add.ptr10, %cond.end42 ], [ %sp.1.lcssa, %for.inc77 ]
  store %struct.sv** %sp.0.lcssa, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  ret void
}
