define %struct.stackinfo* @Perl_new_stackinfo(i32 %stitems, i32 %cxitems) #0 {
entry:
  %call = tail call i8* @Perl_safesysmalloc(i64 56) #5
  %0 = bitcast i8* %call to %struct.stackinfo*
  %call1 = tail call %struct.av* @Perl_newAV() #5
  %si_stack = bitcast i8* %call to %struct.av**
  store %struct.av* %call1, %struct.av** %si_stack, align 8, !tbaa !0
  %sv_any = getelementptr inbounds %struct.av* %call1, i64 0, i32 0
  %1 = load %struct.xpvav** %sv_any, align 8, !tbaa !0
  %xav_flags = getelementptr inbounds %struct.xpvav* %1, i64 0, i32 9
  %2 = load i8* %xav_flags, align 1, !tbaa !1
  %and = and i8 %2, -2
  store i8 %and, i8* %xav_flags, align 1, !tbaa !1
  %3 = load %struct.av** %si_stack, align 8, !tbaa !0
  %cmp = icmp sgt i32 %stitems, 0
  %sub = add nsw i32 %stitems, -1
  %sub. = select i1 %cmp, i32 %sub, i32 0
  tail call void @Perl_av_extend(%struct.av* %3, i32 %sub.) #5
  %4 = load %struct.av** %si_stack, align 8, !tbaa !0
  %sv_any7 = getelementptr inbounds %struct.av* %4, i64 0, i32 0
  %5 = load %struct.xpvav** %sv_any7, align 8, !tbaa !0
  %xav_alloc = getelementptr inbounds %struct.xpvav* %5, i64 0, i32 7
  %6 = load %struct.sv*** %xav_alloc, align 8, !tbaa !0
  store %struct.sv* @PL_sv_undef, %struct.sv** %6, align 8, !tbaa !0
  %7 = load %struct.av** %si_stack, align 8, !tbaa !0
  %sv_any9 = getelementptr inbounds %struct.av* %7, i64 0, i32 0
  %8 = load %struct.xpvav** %sv_any9, align 8, !tbaa !0
  %xav_fill = getelementptr inbounds %struct.xpvav* %8, i64 0, i32 1
  store i64 0, i64* %xav_fill, align 8, !tbaa !3
  %si_prev = getelementptr inbounds i8* %call, i64 32
  %sub10 = add nsw i32 %cxitems, -1
  %si_cxmax = getelementptr inbounds i8* %call, i64 20
  %9 = bitcast i8* %si_cxmax to i32*
  call void @llvm.memset.p0i8.i64(i8* %si_prev, i8 0, i64 16, i32 8, i1 false)
  store i32 %sub10, i32* %9, align 4, !tbaa !4
  %si_cxix = getelementptr inbounds i8* %call, i64 16
  %10 = bitcast i8* %si_cxix to i32*
  store i32 -1, i32* %10, align 4, !tbaa !4
  %si_type = getelementptr inbounds i8* %call, i64 24
  %11 = bitcast i8* %si_type to i32*
  store i32 0, i32* %11, align 4, !tbaa !4
  %conv11 = sext i32 %cxitems to i64
  %mul = mul i64 %conv11, 144
  %call12 = tail call i8* @Perl_safesysmalloc(i64 %mul) #5
  %12 = bitcast i8* %call12 to %struct.context*
  %si_cxstack = getelementptr inbounds i8* %call, i64 8
  %13 = bitcast i8* %si_cxstack to %struct.context**
  store %struct.context* %12, %struct.context** %13, align 8, !tbaa !0
  tail call void @llvm.memset.p0i8.i64(i8* %call12, i8 -85, i64 %mul, i32 1, i1 false)
  ret %struct.stackinfo* %0
}
