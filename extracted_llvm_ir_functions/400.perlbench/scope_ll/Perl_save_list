define void @Perl_save_list(%struct.sv** nocapture %sarg, i32 %maxsarg) #0 {
entry:
  %cmp19 = icmp slt i32 %maxsarg, 1
  br i1 %cmp19, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %0 = add i32 %maxsarg, 1
  br label %for.body

for.body:                                         ; preds = %if.end, %for.body.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end ], [ 1, %for.body.lr.ph ]
  %call = tail call %struct.sv* @Perl_newSV(i64 0) #5
  %arrayidx = getelementptr inbounds %struct.sv** %sarg, i64 %indvars.iv
  %1 = load %struct.sv** %arrayidx, align 8, !tbaa !0
  tail call void @Perl_sv_setsv_flags(%struct.sv* %call, %struct.sv* %1, i32 2) #5
  %2 = load i32* @PL_savestack_ix, align 4, !tbaa !4
  %add = add nsw i32 %2, 3
  %3 = load i32* @PL_savestack_max, align 4, !tbaa !4
  %cmp1 = icmp sgt i32 %add, %3
  br i1 %cmp1, label %if.then, label %for.body.if.end_crit_edge

for.body.if.end_crit_edge:                        ; preds = %for.body
  %.pre21 = load %union.any** @PL_savestack, align 8, !tbaa !0
  br label %if.end

if.then:                                          ; preds = %for.body
  %mul.i = mul nsw i32 %3, 3
  %div.i = sdiv i32 %mul.i, 2
  %add.i = add nsw i32 %div.i, 4
  store i32 %add.i, i32* @PL_savestack_max, align 4, !tbaa !4
  %4 = load %union.any** @PL_savestack, align 8, !tbaa !0
  %5 = bitcast %union.any* %4 to i8*
  %conv.i = sext i32 %add.i to i64
  %mul1.i = shl nsw i64 %conv.i, 3
  %call.i = tail call i8* @Perl_safesysrealloc(i8* %5, i64 %mul1.i) #5
  %6 = bitcast i8* %call.i to %union.any*
  store %union.any* %6, %union.any** @PL_savestack, align 8, !tbaa !0
  %.pre = load i32* @PL_savestack_ix, align 4, !tbaa !4
  br label %if.end

if.end:                                           ; preds = %for.body.if.end_crit_edge, %if.then
  %7 = phi %union.any* [ %6, %if.then ], [ %.pre21, %for.body.if.end_crit_edge ]
  %8 = phi i32 [ %.pre, %if.then ], [ %2, %for.body.if.end_crit_edge ]
  %9 = load %struct.sv** %arrayidx, align 8, !tbaa !0
  %10 = bitcast %struct.sv* %9 to i8*
  %inc = add nsw i32 %8, 1
  %idxprom4 = sext i32 %8 to i64
  %any_ptr = getelementptr inbounds %union.any* %7, i64 %idxprom4, i32 0
  store i8* %10, i8** %any_ptr, align 8, !tbaa !0
  %11 = bitcast %struct.sv* %call to i8*
  %inc6 = add nsw i32 %8, 2
  %idxprom7 = sext i32 %inc to i64
  %12 = load %union.any** @PL_savestack, align 8, !tbaa !0
  %any_ptr9 = getelementptr inbounds %union.any* %12, i64 %idxprom7, i32 0
  store i8* %11, i8** %any_ptr9, align 8, !tbaa !0
  %inc10 = add nsw i32 %8, 3
  store i32 %inc10, i32* @PL_savestack_ix, align 4, !tbaa !4
  %idxprom11 = sext i32 %inc6 to i64
  %13 = load %union.any** @PL_savestack, align 8, !tbaa !0
  %arrayidx12 = getelementptr inbounds %union.any* %13, i64 %idxprom11
  %any_i32 = bitcast %union.any* %arrayidx12 to i32*
  store i32 0, i32* %any_i32, align 4, !tbaa !4
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %0
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %if.end, %entry
  ret void
}
