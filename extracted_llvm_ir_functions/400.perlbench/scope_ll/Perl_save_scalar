define %struct.sv* @Perl_save_scalar(%struct.gv* %gv) #0 {
entry:
  %sv_any = getelementptr inbounds %struct.gv* %gv, i64 0, i32 0
  %0 = load %struct.xpvgv** %sv_any, align 8, !tbaa !0
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %0, i64 0, i32 7
  %1 = load %struct.gp** %xgv_gp, align 8, !tbaa !0
  %gp_sv = getelementptr inbounds %struct.gp* %1, i64 0, i32 0
  %2 = load i32* @PL_savestack_ix, align 4, !tbaa !4
  %add = add nsw i32 %2, 3
  %3 = load i32* @PL_savestack_max, align 4, !tbaa !4
  %cmp = icmp sgt i32 %add, %3
  br i1 %cmp, label %if.end, label %entry.land.end_crit_edge

entry.land.end_crit_edge:                         ; preds = %entry
  %.pre20 = load %union.any** @PL_savestack, align 8, !tbaa !0
  br label %land.end

if.end:                                           ; preds = %entry
  %mul.i = mul nsw i32 %3, 3
  %div.i = sdiv i32 %mul.i, 2
  %add.i = add nsw i32 %div.i, 4
  store i32 %add.i, i32* @PL_savestack_max, align 4, !tbaa !4
  %4 = load %union.any** @PL_savestack, align 8, !tbaa !0
  %5 = bitcast %union.any* %4 to i8*
  %conv.i = sext i32 %add.i to i64
  %mul1.i = shl nsw i64 %conv.i, 3
  %call.i = tail call i8* @Perl_safesysrealloc(i8* %5, i64 %mul1.i) #5
  %6 = bitcast i8* %call.i to %union.any*
  store %union.any* %6, %union.any** @PL_savestack, align 8, !tbaa !0
  br label %land.end

land.end:                                         ; preds = %entry.land.end_crit_edge, %if.end
  %7 = phi %union.any* [ %.pre20, %entry.land.end_crit_edge ], [ %6, %if.end ]
  %storemerge = bitcast %struct.gv* %gv to %struct.sv*
  store %struct.sv* %storemerge, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %8 = getelementptr inbounds %struct.gv* %gv, i64 0, i32 1
  %9 = load i32* %8, align 4, !tbaa !4
  %inc = add i32 %9, 1
  store i32 %inc, i32* %8, align 4, !tbaa !4
  %10 = bitcast %struct.gv* %gv to i8*
  %11 = load i32* @PL_savestack_ix, align 4, !tbaa !4
  %inc2 = add nsw i32 %11, 1
  store i32 %inc2, i32* @PL_savestack_ix, align 4, !tbaa !4
  %idxprom = sext i32 %11 to i64
  %any_ptr = getelementptr inbounds %union.any* %7, i64 %idxprom, i32 0
  store i8* %10, i8** %any_ptr, align 8, !tbaa !0
  %12 = load %struct.sv** %gp_sv, align 8, !tbaa !0
  store %struct.sv* %12, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %tobool3 = icmp eq %struct.sv* %12, null
  br i1 %tobool3, label %land.end8, label %land.rhs4

land.rhs4:                                        ; preds = %land.end
  %sv_refcnt5 = getelementptr inbounds %struct.sv* %12, i64 0, i32 1
  %13 = load i32* %sv_refcnt5, align 4, !tbaa !4
  %inc6 = add i32 %13, 1
  store i32 %inc6, i32* %sv_refcnt5, align 4, !tbaa !4
  %.pre = load i32* @PL_savestack_ix, align 4, !tbaa !4
  br label %land.end8

land.end8:                                        ; preds = %land.end, %land.rhs4
  %14 = phi i32 [ %inc2, %land.end ], [ %.pre, %land.rhs4 ]
  %15 = bitcast %struct.sv* %12 to i8*
  %inc10 = add nsw i32 %14, 1
  %idxprom11 = sext i32 %14 to i64
  %16 = load %union.any** @PL_savestack, align 8, !tbaa !0
  %any_ptr13 = getelementptr inbounds %union.any* %16, i64 %idxprom11, i32 0
  store i8* %15, i8** %any_ptr13, align 8, !tbaa !0
  %inc14 = add nsw i32 %14, 2
  store i32 %inc14, i32* @PL_savestack_ix, align 4, !tbaa !4
  %idxprom15 = sext i32 %inc10 to i64
  %17 = load %union.any** @PL_savestack, align 8, !tbaa !0
  %arrayidx16 = getelementptr inbounds %union.any* %17, i64 %idxprom15
  %any_i32 = bitcast %union.any* %arrayidx16 to i32*
  store i32 1, i32* %any_i32, align 4, !tbaa !4
  %call = tail call fastcc %struct.sv* @S_save_scalar_at(%struct.sv** %gp_sv) #6
  ret %struct.sv* %call
}
