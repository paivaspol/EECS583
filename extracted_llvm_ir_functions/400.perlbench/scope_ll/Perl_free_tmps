define void @Perl_free_tmps() #0 {
entry:
  %0 = load i32* @PL_tmps_floor, align 4, !tbaa !4
  %1 = load i32* @PL_tmps_ix, align 4, !tbaa !4
  %cmp7 = icmp sgt i32 %1, %0
  br i1 %cmp7, label %while.body, label %while.end

while.body:                                       ; preds = %entry, %while.cond.backedge
  %2 = phi i32 [ %6, %while.cond.backedge ], [ %1, %entry ]
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.sv*** @PL_tmps_stack, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %struct.sv** %3, i64 %idxprom
  %4 = load %struct.sv** %arrayidx, align 8, !tbaa !0
  %dec = add nsw i32 %2, -1
  store i32 %dec, i32* @PL_tmps_ix, align 4, !tbaa !4
  store %struct.sv* null, %struct.sv** %arrayidx, align 8, !tbaa !0
  %tobool = icmp ne %struct.sv* %4, null
  %cmp3 = icmp ne %struct.sv* %4, @PL_sv_undef
  %or.cond = and i1 %tobool, %cmp3
  br i1 %or.cond, label %if.then, label %while.cond.backedge

if.then:                                          ; preds = %while.body
  %sv_flags = getelementptr inbounds %struct.sv* %4, i64 0, i32 2
  %5 = load i32* %sv_flags, align 4, !tbaa !4
  %and = and i32 %5, -2049
  store i32 %and, i32* %sv_flags, align 4, !tbaa !4
  tail call void @Perl_sv_free(%struct.sv* %4) #5
  %.pre = load i32* @PL_tmps_ix, align 4, !tbaa !4
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.then, %while.body
  %6 = phi i32 [ %.pre, %if.then ], [ %dec, %while.body ]
  %cmp = icmp sgt i32 %6, %0
  br i1 %cmp, label %while.body, label %while.end

while.end:                                        ; preds = %while.cond.backedge, %entry
  ret void
}
