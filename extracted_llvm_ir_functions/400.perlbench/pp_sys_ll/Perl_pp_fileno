define %struct.op* @Perl_pp_fileno() #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_targ = getelementptr inbounds %struct.op* %1, i64 0, i32 3
  %2 = load i64* %op_targ, align 8, !tbaa !3
  %3 = load %struct.sv*** @PL_curpad, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %struct.sv** %3, i64 %2
  %4 = load %struct.sv** %arrayidx, align 8, !tbaa !0
  %op_private = getelementptr inbounds %struct.op* %1, i64 0, i32 7
  %5 = load i8* %op_private, align 1, !tbaa !1
  %and = and i8 %5, 15
  %cmp = icmp eq i8 %and, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %incdec.ptr = getelementptr inbounds %struct.sv** %0, i64 1
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr, align 8, !tbaa !0
  store %struct.sv** %incdec.ptr, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %6 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next = getelementptr inbounds %struct.op* %6, i64 0, i32 0
  br label %return

if.end:                                           ; preds = %entry
  %incdec.ptr2 = getelementptr inbounds %struct.sv** %0, i64 -1
  %7 = load %struct.sv** %0, align 8, !tbaa !0
  %tobool = icmp eq %struct.sv* %7, null
  br i1 %tobool, label %if.then72, label %land.lhs.true4

land.lhs.true4:                                   ; preds = %if.end
  %sv_flags = getelementptr inbounds %struct.sv* %7, i64 0, i32 2
  %8 = load i32* %sv_flags, align 4, !tbaa !4
  %and5 = and i32 %8, 255
  %cmp6 = icmp eq i32 %and5, 13
  br i1 %cmp6, label %land.lhs.true8, label %land.lhs.true52

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %sv_any = bitcast %struct.sv* %7 to %struct.xpvgv**
  %9 = load %struct.xpvgv** %sv_any, align 8, !tbaa !0
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %9, i64 0, i32 7
  %10 = load %struct.gp** %xgv_gp, align 8, !tbaa !0
  %tobool9 = icmp eq %struct.gp* %10, null
  br i1 %tobool9, label %if.end49.land.lhs.true52_crit_edge, label %cond.end

cond.end:                                         ; preds = %land.lhs.true8
  %gp_io = getelementptr inbounds %struct.gp* %10, i64 0, i32 2
  %11 = load %struct.io** %gp_io, align 8, !tbaa !0
  %tobool12 = icmp eq %struct.io* %11, null
  br i1 %tobool12, label %if.end49.land.lhs.true52_crit_edge, label %land.lhs.true13

land.lhs.true13:                                  ; preds = %cond.end
  %12 = bitcast %struct.io* %11 to %struct.sv*
  %13 = getelementptr inbounds %struct.io* %11, i64 0, i32 2
  %14 = load i32* %13, align 4, !tbaa !4
  %and15 = and i32 %14, 32768
  %tobool16 = icmp eq i32 %and15, 0
  br i1 %tobool16, label %if.end49.land.lhs.true52_crit_edge, label %cond.end19

cond.end19:                                       ; preds = %land.lhs.true13
  %call = tail call %struct.magic* @Perl_mg_find(%struct.sv* %12, i32 113) #6
  %tobool21 = icmp eq %struct.magic* %call, null
  br i1 %tobool21, label %if.end49.land.lhs.true52_crit_edge, label %if.then22

if.then22:                                        ; preds = %cond.end19
  %15 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr23 = getelementptr inbounds i32* %15, i64 1
  store i32* %incdec.ptr23, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %16 = load i32** @PL_markstack_max, align 8, !tbaa !0
  %cmp24 = icmp eq i32* %incdec.ptr23, %16
  br i1 %cmp24, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.then22
  tail call void @Perl_markstack_grow() #6
  %.pre = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %if.then22
  %17 = phi i32* [ %.pre, %if.then26 ], [ %incdec.ptr23, %if.then22 ]
  %18 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %incdec.ptr2 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %18 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div114 = lshr exact i64 %sub.ptr.sub, 3
  %conv28 = trunc i64 %sub.ptr.div114 to i32
  store i32 %conv28, i32* %17, align 4, !tbaa !4
  %19 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast29 = ptrtoint %struct.sv** %19 to i64
  %sub.ptr.sub31 = sub i64 %sub.ptr.lhs.cast29, %sub.ptr.lhs.cast
  %cmp33 = icmp slt i64 %sub.ptr.sub31, 8
  br i1 %cmp33, label %if.then35, label %if.end37

if.then35:                                        ; preds = %if.end27
  %call36 = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %incdec.ptr2, %struct.sv** %incdec.ptr2, i32 1) #6
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %if.end27
  %sp.0 = phi %struct.sv** [ %call36, %if.then35 ], [ %incdec.ptr2, %if.end27 ]
  %mg_obj = getelementptr inbounds %struct.magic* %call, i64 0, i32 5
  %20 = load %struct.sv** %mg_obj, align 8, !tbaa !0
  %tobool38 = icmp eq %struct.sv* %20, null
  br i1 %tobool38, label %cond.false41, label %cond.end44

cond.false41:                                     ; preds = %if.end37
  %call42 = tail call %struct.sv* @Perl_newRV(%struct.sv* %12) #6
  %call43 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call42) #6
  br label %cond.end44

cond.end44:                                       ; preds = %if.end37, %cond.false41
  %cond45 = phi %struct.sv* [ %call43, %cond.false41 ], [ %20, %if.end37 ]
  %incdec.ptr46 = getelementptr inbounds %struct.sv** %sp.0, i64 1
  store %struct.sv* %cond45, %struct.sv** %incdec.ptr46, align 8, !tbaa !0
  store %struct.sv** %incdec.ptr46, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  tail call void @Perl_push_scope() #6
  %call47 = tail call i32 @Perl_call_method(i8* getelementptr inbounds ([7 x i8]* @.str17, i64 0, i64 0), i32 0) #6
  tail call void @Perl_pop_scope() #6
  %21 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next48 = getelementptr inbounds %struct.op* %21, i64 0, i32 0
  br label %return

if.end49.land.lhs.true52_crit_edge:               ; preds = %cond.end, %cond.end19, %land.lhs.true8, %land.lhs.true13
  %.pre118 = load i32* %sv_flags, align 4, !tbaa !4
  br label %land.lhs.true52

land.lhs.true52:                                  ; preds = %if.end49.land.lhs.true52_crit_edge, %land.lhs.true4
  %22 = phi i32 [ %.pre118, %if.end49.land.lhs.true52_crit_edge ], [ %8, %land.lhs.true4 ]
  %and54 = and i32 %22, 255
  %cmp55 = icmp eq i32 %and54, 13
  br i1 %cmp55, label %land.lhs.true57, label %if.then72

land.lhs.true57:                                  ; preds = %land.lhs.true52
  %sv_any58 = bitcast %struct.sv* %7 to %struct.xpvgv**
  %23 = load %struct.xpvgv** %sv_any58, align 8, !tbaa !0
  %xgv_gp59 = getelementptr inbounds %struct.xpvgv* %23, i64 0, i32 7
  %24 = load %struct.gp** %xgv_gp59, align 8, !tbaa !0
  %tobool60 = icmp eq %struct.gp* %24, null
  br i1 %tobool60, label %if.then72, label %cond.end66

cond.end66:                                       ; preds = %land.lhs.true57
  %gp_io64 = getelementptr inbounds %struct.gp* %24, i64 0, i32 2
  %25 = load %struct.io** %gp_io64, align 8, !tbaa !0
  %tobool68 = icmp eq %struct.io* %25, null
  br i1 %tobool68, label %if.then72, label %lor.lhs.false69

lor.lhs.false69:                                  ; preds = %cond.end66
  %sv_any70 = getelementptr inbounds %struct.io* %25, i64 0, i32 0
  %26 = load %struct.xpvio** %sv_any70, align 8, !tbaa !0
  %xio_ifp = getelementptr inbounds %struct.xpvio* %26, i64 0, i32 7
  %27 = load %struct._PerlIO*** %xio_ifp, align 8, !tbaa !0
  %tobool71 = icmp eq %struct._PerlIO** %27, null
  br i1 %tobool71, label %if.then72, label %if.end75

if.then72:                                        ; preds = %if.end, %land.lhs.true52, %land.lhs.true57, %lor.lhs.false69, %cond.end66
  store %struct.sv* @PL_sv_undef, %struct.sv** %0, align 8, !tbaa !0
  store %struct.sv** %0, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %28 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next74 = getelementptr inbounds %struct.op* %28, i64 0, i32 0
  br label %return

if.end75:                                         ; preds = %lor.lhs.false69
  %call76 = tail call i32 @Perl_PerlIO_fileno(%struct._PerlIO** %27) #6
  %conv77 = sext i32 %call76 to i64
  tail call void @Perl_sv_setiv(%struct.sv* %4, i64 %conv77) #6
  %sv_flags78 = getelementptr inbounds %struct.sv* %4, i64 0, i32 2
  %29 = load i32* %sv_flags78, align 4, !tbaa !4
  %and79 = and i32 %29, 16384
  %tobool80 = icmp eq i32 %and79, 0
  br i1 %tobool80, label %if.end83, label %if.then81

if.then81:                                        ; preds = %if.end75
  %call82 = tail call i32 @Perl_mg_set(%struct.sv* %4) #6
  br label %if.end83

if.end83:                                         ; preds = %if.end75, %if.then81
  store %struct.sv* %4, %struct.sv** %0, align 8, !tbaa !0
  store %struct.sv** %0, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %30 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next85 = getelementptr inbounds %struct.op* %30, i64 0, i32 0
  br label %return

return:                                           ; preds = %if.end83, %if.then72, %cond.end44, %if.then
  %retval.0.in = phi %struct.op** [ %op_next, %if.then ], [ %op_next48, %cond.end44 ], [ %op_next85, %if.end83 ], [ %op_next74, %if.then72 ]
  %retval.0 = load %struct.op** %retval.0.in, align 8
  ret %struct.op* %retval.0
}
