define %struct.op* @Perl_pp_sselect() #0 {
entry:
  %timebuf = alloca %struct.timeval, align 8
  %fd_sets = alloca [4 x i8*], align 16
  %n_a = alloca i64, align 8
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_targ = getelementptr inbounds %struct.op* %1, i64 0, i32 3
  %2 = load i64* %op_targ, align 8, !tbaa !3
  %3 = load %struct.sv*** @PL_curpad, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %struct.sv** %3, i64 %2
  %4 = load %struct.sv** %arrayidx, align 8, !tbaa !0
  br label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %indvars.iv207 = phi i64 [ 1, %entry ], [ %indvars.iv.next208, %for.inc ]
  %maxlen.0200 = phi i32 [ 0, %entry ], [ %maxlen.1, %for.inc ]
  %add.ptr.sum194 = add i64 %indvars.iv207, -4
  %arrayidx1 = getelementptr inbounds %struct.sv** %0, i64 %add.ptr.sum194
  %5 = load %struct.sv** %arrayidx1, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %5, i64 0, i32 2
  %6 = load i32* %sv_flags, align 4, !tbaa !4
  %and = and i32 %6, 262144
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %for.inc, label %if.end

if.end:                                           ; preds = %for.body
  %sv_any = getelementptr inbounds %struct.sv* %5, i64 0, i32 0
  %7 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %7, i64 8
  %8 = bitcast i8* %xpv_cur to i64*
  %9 = load i64* %8, align 8, !tbaa !3
  %conv = trunc i64 %9 to i32
  %cmp4 = icmp slt i32 %maxlen.0200, %conv
  %conv.maxlen.0 = select i1 %cmp4, i32 %conv, i32 %maxlen.0200
  br label %for.inc

for.inc:                                          ; preds = %if.end, %for.body
  %maxlen.1 = phi i32 [ %maxlen.0200, %for.body ], [ %conv.maxlen.0, %if.end ]
  %indvars.iv.next208 = add i64 %indvars.iv207, 1
  %lftr.wideiv209 = trunc i64 %indvars.iv.next208 to i32
  %exitcond210 = icmp eq i32 %lftr.wideiv209, 4
  br i1 %exitcond210, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc
  %rem = srem i32 %maxlen.1, 128
  %sub = sub i32 128, %rem
  %add = add i32 %sub, %maxlen.1
  %10 = load %struct.sv** %0, align 8, !tbaa !0
  %sv_flags9 = getelementptr inbounds %struct.sv* %10, i64 0, i32 2
  %11 = load i32* %sv_flags9, align 4, !tbaa !4
  %and10 = and i32 %11, 118423552
  %tobool11 = icmp eq i32 %and10, 0
  br i1 %tobool11, label %if.end26, label %if.then12

if.then12:                                        ; preds = %for.end
  %and14 = and i32 %11, 131072
  %tobool15 = icmp eq i32 %and14, 0
  br i1 %tobool15, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then12
  %sv_any16 = getelementptr inbounds %struct.sv* %10, i64 0, i32 0
  %12 = load i8** %sv_any16, align 8, !tbaa !0
  %xnv_nv = getelementptr inbounds i8* %12, i64 32
  %13 = bitcast i8* %xnv_nv to double*
  %14 = load double* %13, align 8, !tbaa !6
  br label %cond.end

cond.false:                                       ; preds = %if.then12
  %call = call double @Perl_sv_2nv(%struct.sv* %10) #6
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %14, %cond.true ], [ %call, %cond.false ]
  %cmp17 = fcmp olt double %cond, 0.000000e+00
  %value.0 = select i1 %cmp17, double 0.000000e+00, double %cond
  %conv21 = fptosi double %value.0 to i64
  %tv_sec = getelementptr inbounds %struct.timeval* %timebuf, i64 0, i32 0
  store i64 %conv21, i64* %tv_sec, align 8, !tbaa !3
  %conv23 = sitofp i64 %conv21 to double
  %sub24 = fsub double %value.0, %conv23
  %mul = fmul double %sub24, 1.000000e+06
  %conv25 = fptosi double %mul to i64
  %tv_usec = getelementptr inbounds %struct.timeval* %timebuf, i64 0, i32 1
  store i64 %conv25, i64* %tv_usec, align 8, !tbaa !3
  br label %if.end26

if.end26:                                         ; preds = %for.end, %cond.end
  %tbuf.0 = phi %struct.timeval* [ %timebuf, %cond.end ], [ null, %for.end ]
  %conv63 = sext i32 %add to i64
  %15 = sub i32 127, %rem
  %16 = add i32 %15, %maxlen.1
  br label %for.body30

for.body30:                                       ; preds = %for.inc79, %if.end26
  %indvars.iv203 = phi i64 [ 1, %if.end26 ], [ %indvars.iv.next204, %for.inc79 ]
  %add.ptr.sum193 = add i64 %indvars.iv203, -4
  %arrayidx32 = getelementptr inbounds %struct.sv** %0, i64 %add.ptr.sum193
  %17 = load %struct.sv** %arrayidx32, align 8, !tbaa !0
  %sv_flags33 = getelementptr inbounds %struct.sv* %17, i64 0, i32 2
  %18 = load i32* %sv_flags33, align 4, !tbaa !4
  %and34 = and i32 %18, 118423552
  %tobool35 = icmp eq i32 %and34, 0
  br i1 %tobool35, label %if.then36, label %if.else39

if.then36:                                        ; preds = %for.body30
  %arrayidx38 = getelementptr inbounds [4 x i8*]* %fd_sets, i64 0, i64 %indvars.iv203
  store i8* null, i8** %arrayidx38, align 8, !tbaa !0
  br label %for.inc79

if.else39:                                        ; preds = %for.body30
  %and41 = and i32 %18, 262144
  %tobool42 = icmp eq i32 %and41, 0
  br i1 %tobool42, label %if.then43, label %if.end57

if.then43:                                        ; preds = %if.else39
  %and45 = and i32 %18, 10223616
  %cmp46 = icmp eq i32 %and45, 262144
  br i1 %cmp46, label %cond.true48, label %cond.false52

cond.true48:                                      ; preds = %if.then43
  %sv_any49 = getelementptr inbounds %struct.sv* %17, i64 0, i32 0
  %19 = load i8** %sv_any49, align 8, !tbaa !0
  %xpv_cur50 = getelementptr inbounds i8* %19, i64 8
  %20 = bitcast i8* %xpv_cur50 to i64*
  %21 = load i64* %20, align 8, !tbaa !3
  store i64 %21, i64* %n_a, align 8, !tbaa !3
  br label %if.end57

cond.false52:                                     ; preds = %if.then43
  %call53 = call i8* @Perl_sv_pvn_force_flags(%struct.sv* %17, i64* %n_a, i32 2) #6
  br label %if.end57

if.end57:                                         ; preds = %if.else39, %cond.false52, %cond.true48
  %sv_any58 = getelementptr inbounds %struct.sv* %17, i64 0, i32 0
  %22 = load i8** %sv_any58, align 8, !tbaa !0
  %xpv_len = getelementptr inbounds i8* %22, i64 16
  %23 = bitcast i8* %xpv_len to i64*
  %24 = load i64* %23, align 8, !tbaa !3
  %conv59 = trunc i64 %24 to i32
  %cmp60 = icmp slt i32 %conv59, %add
  br i1 %cmp60, label %if.then62, label %if.end65

if.then62:                                        ; preds = %if.end57
  %call64 = call i8* @Perl_sv_grow(%struct.sv* %17, i64 %conv63) #6
  %.pre = load i8** %sv_any58, align 8, !tbaa !0
  br label %if.end65

if.end65:                                         ; preds = %if.then62, %if.end57
  %25 = phi i8* [ %.pre, %if.then62 ], [ %22, %if.end57 ]
  %xpv_cur67 = getelementptr inbounds i8* %25, i64 8
  %26 = bitcast i8* %xpv_cur67 to i64*
  %27 = load i64* %26, align 8, !tbaa !3
  %conv68 = trunc i64 %27 to i32
  %cmp73196 = icmp slt i32 %conv68, %add
  br i1 %cmp73196, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %if.end65
  %xpv_pv70 = bitcast i8* %25 to i8**
  %28 = load i8** %xpv_pv70, align 8, !tbaa !0
  %sext = shl i64 %27, 32
  %29 = ashr exact i64 %sext, 32
  %scevgep = getelementptr i8* %28, i64 %29
  %30 = sub i32 %16, %conv68
  %31 = zext i32 %30 to i64
  %32 = add i64 %31, 1
  call void @llvm.memset.p0i8.i64(i8* %scevgep, i8 0, i64 %32, i32 1, i1 false)
  %.pre211 = load i8** %sv_any58, align 8, !tbaa !0
  br label %while.end

while.end:                                        ; preds = %while.body.lr.ph, %if.end65
  %33 = phi i8* [ %.pre211, %while.body.lr.ph ], [ %25, %if.end65 ]
  %xpv_pv76 = bitcast i8* %33 to i8**
  %34 = load i8** %xpv_pv76, align 8, !tbaa !0
  %arrayidx78 = getelementptr inbounds [4 x i8*]* %fd_sets, i64 0, i64 %indvars.iv203
  store i8* %34, i8** %arrayidx78, align 8, !tbaa !0
  br label %for.inc79

for.inc79:                                        ; preds = %while.end, %if.then36
  %indvars.iv.next204 = add i64 %indvars.iv203, 1
  %lftr.wideiv205 = trunc i64 %indvars.iv.next204 to i32
  %exitcond206 = icmp eq i32 %lftr.wideiv205, 4
  br i1 %exitcond206, label %for.end81, label %for.body30

for.end81:                                        ; preds = %for.inc79
  %mul82 = shl nsw i32 %maxlen.1, 3
  %arrayidx83 = getelementptr inbounds [4 x i8*]* %fd_sets, i64 0, i64 1
  %35 = load i8** %arrayidx83, align 8, !tbaa !0
  %36 = bitcast i8* %35 to %struct.fd_set*
  %arrayidx84 = getelementptr inbounds [4 x i8*]* %fd_sets, i64 0, i64 2
  %37 = load i8** %arrayidx84, align 16, !tbaa !0
  %38 = bitcast i8* %37 to %struct.fd_set*
  %arrayidx85 = getelementptr inbounds [4 x i8*]* %fd_sets, i64 0, i64 3
  %39 = load i8** %arrayidx85, align 8, !tbaa !0
  %40 = bitcast i8* %39 to %struct.fd_set*
  %call86 = call i32 @select(i32 %mul82, %struct.fd_set* %36, %struct.fd_set* %38, %struct.fd_set* %40, %struct.timeval* %tbuf.0) #6
  br label %for.body90

for.body90:                                       ; preds = %for.inc104.for.body90_crit_edge, %for.end81
  %41 = phi i8* [ %35, %for.end81 ], [ %.pre212, %for.inc104.for.body90_crit_edge ]
  %indvars.iv = phi i64 [ 1, %for.end81 ], [ %indvars.iv.next, %for.inc104.for.body90_crit_edge ]
  %tobool93 = icmp eq i8* %41, null
  br i1 %tobool93, label %for.inc104, label %if.then94

if.then94:                                        ; preds = %for.body90
  %add.ptr.sum = add i64 %indvars.iv, -4
  %arrayidx96 = getelementptr inbounds %struct.sv** %0, i64 %add.ptr.sum
  %42 = load %struct.sv** %arrayidx96, align 8, !tbaa !0
  %sv_flags97 = getelementptr inbounds %struct.sv* %42, i64 0, i32 2
  %43 = load i32* %sv_flags97, align 4, !tbaa !4
  %and98 = and i32 %43, 16384
  %tobool99 = icmp eq i32 %and98, 0
  br i1 %tobool99, label %for.inc104, label %if.then100

if.then100:                                       ; preds = %if.then94
  %call101 = call i32 @Perl_mg_set(%struct.sv* %42) #6
  br label %for.inc104

for.inc104:                                       ; preds = %if.then94, %for.body90, %if.then100
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 4
  br i1 %exitcond, label %for.end106, label %for.inc104.for.body90_crit_edge

for.inc104.for.body90_crit_edge:                  ; preds = %for.inc104
  %arrayidx92.phi.trans.insert = getelementptr inbounds [4 x i8*]* %fd_sets, i64 0, i64 %indvars.iv.next
  %.pre212 = load i8** %arrayidx92.phi.trans.insert, align 8, !tbaa !0
  br label %for.body90

for.end106:                                       ; preds = %for.inc104
  %conv107 = sext i32 %call86 to i64
  call void @Perl_sv_setiv(%struct.sv* %4, i64 %conv107) #6
  %sv_flags108 = getelementptr inbounds %struct.sv* %4, i64 0, i32 2
  %44 = load i32* %sv_flags108, align 4, !tbaa !4
  %and109 = and i32 %44, 16384
  %tobool110 = icmp eq i32 %and109, 0
  br i1 %tobool110, label %if.end113, label %if.then111

if.then111:                                       ; preds = %for.end106
  %call112 = call i32 @Perl_mg_set(%struct.sv* %4) #6
  br label %if.end113

if.end113:                                        ; preds = %for.end106, %if.then111
  %incdec.ptr114 = getelementptr inbounds %struct.sv** %0, i64 -3
  store %struct.sv* %4, %struct.sv** %incdec.ptr114, align 8, !tbaa !0
  %45 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags = getelementptr inbounds %struct.op* %45, i64 0, i32 6
  %46 = load i8* %op_flags, align 1, !tbaa !1
  %conv115 = zext i8 %46 to i32
  %and116 = and i32 %conv115, 3
  %tobool117 = icmp eq i32 %and116, 0
  br i1 %tobool117, label %cond.false125, label %cond.true118

cond.true118:                                     ; preds = %if.end113
  %cmp122 = icmp eq i32 %and116, 3
  %cond124 = zext i1 %cmp122 to i32
  br label %cond.end127

cond.false125:                                    ; preds = %if.end113
  %call126 = call i32 @Perl_dowantarray() #6
  br label %cond.end127

cond.end127:                                      ; preds = %cond.false125, %cond.true118
  %cond128 = phi i32 [ %cond124, %cond.true118 ], [ %call126, %cond.false125 ]
  %cmp129 = icmp ne i32 %cond128, 1
  %tobool131 = icmp eq %struct.timeval* %tbuf.0, null
  %or.cond = or i1 %cmp129, %tobool131
  br i1 %or.cond, label %if.end140, label %if.then132

if.then132:                                       ; preds = %cond.end127
  %tv_sec133 = getelementptr inbounds %struct.timeval* %timebuf, i64 0, i32 0
  %47 = load i64* %tv_sec133, align 8, !tbaa !3
  %conv134 = sitofp i64 %47 to double
  %tv_usec135 = getelementptr inbounds %struct.timeval* %timebuf, i64 0, i32 1
  %48 = load i64* %tv_usec135, align 8, !tbaa !3
  %conv136 = sitofp i64 %48 to double
  %div = fdiv double %conv136, 1.000000e+06
  %add137 = fadd double %conv134, %div
  %call138 = call %struct.sv* @Perl_sv_mortalcopy(%struct.sv* @PL_sv_no) #6
  %incdec.ptr139 = getelementptr inbounds %struct.sv** %0, i64 -2
  store %struct.sv* %call138, %struct.sv** %incdec.ptr139, align 8, !tbaa !0
  call void @Perl_sv_setnv(%struct.sv* %call138, double %add137) #6
  br label %if.end140

if.end140:                                        ; preds = %cond.end127, %if.then132
  %sp.0 = phi %struct.sv** [ %incdec.ptr139, %if.then132 ], [ %incdec.ptr114, %cond.end127 ]
  store %struct.sv** %sp.0, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %49 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next = getelementptr inbounds %struct.op* %49, i64 0, i32 0
  %50 = load %struct.op** %op_next, align 8, !tbaa !0
  ret %struct.op* %50
}
