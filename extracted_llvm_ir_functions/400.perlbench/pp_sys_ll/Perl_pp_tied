define %struct.op* @Perl_pp_tied() #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.sv** %0, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %1, i64 0, i32 2
  %2 = load i32* %sv_flags, align 4, !tbaa !4
  %and = and i32 %2, 255
  %cmp = icmp eq i32 %and, 11
  br i1 %cmp, label %if.end, label %lor.end

lor.end:                                          ; preds = %entry
  %cmp3 = icmp eq i32 %and, 10
  %phitmp = select i1 %cmp3, i32 80, i32 113
  %cmp6 = icmp eq i32 %and, 13
  br i1 %cmp6, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.end
  %sv_any = getelementptr inbounds %struct.sv* %1, i64 0, i32 0
  %3 = load i8** %sv_any, align 8, !tbaa !0
  %xgv_gp = getelementptr inbounds i8* %3, i64 56
  %4 = bitcast i8* %xgv_gp to %struct.gp**
  %5 = load %struct.gp** %4, align 8, !tbaa !0
  %gp_io = getelementptr inbounds %struct.gp* %5, i64 0, i32 2
  %6 = load %struct.io** %gp_io, align 8, !tbaa !0
  %tobool = icmp eq %struct.io* %6, null
  br i1 %tobool, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  %7 = bitcast %struct.io* %6 to %struct.sv*
  %8 = getelementptr inbounds %struct.io* %6, i64 0, i32 2
  %.pre53 = load i32* %8, align 4, !tbaa !4
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  store %struct.sv* @PL_sv_undef, %struct.sv** %0, align 8, !tbaa !0
  store %struct.sv** %0, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %9 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next = getelementptr inbounds %struct.op* %9, i64 0, i32 0
  br label %return

if.end:                                           ; preds = %entry, %land.lhs.true.if.end_crit_edge, %lor.end
  %10 = phi i32 [ %phitmp, %land.lhs.true.if.end_crit_edge ], [ %phitmp, %lor.end ], [ 80, %entry ]
  %11 = phi i32 [ %.pre53, %land.lhs.true.if.end_crit_edge ], [ %2, %lor.end ], [ %2, %entry ]
  %sv.0 = phi %struct.sv* [ %7, %land.lhs.true.if.end_crit_edge ], [ %1, %lor.end ], [ %1, %entry ]
  %and10 = and i32 %11, 32768
  %tobool11 = icmp eq i32 %and10, 0
  br i1 %tobool11, label %if.end32, label %cond.end

cond.end:                                         ; preds = %if.end
  %call = tail call %struct.magic* @Perl_mg_find(%struct.sv* %sv.0, i32 %10) #6
  %tobool14 = icmp eq %struct.magic* %call, null
  br i1 %tobool14, label %if.end32, label %if.then15

if.then15:                                        ; preds = %cond.end
  %mg_obj = getelementptr inbounds %struct.magic* %call, i64 0, i32 5
  %12 = load %struct.sv** %mg_obj, align 8, !tbaa !0
  %tobool16 = icmp eq %struct.sv* %12, null
  br i1 %tobool16, label %cond.end22, label %if.then27

cond.end22:                                       ; preds = %if.then15
  %call20 = tail call %struct.sv* @Perl_newRV(%struct.sv* %sv.0) #6
  %call21 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call20) #6
  %.pre = load %struct.sv** %mg_obj, align 8, !tbaa !0
  %cmp25 = icmp eq %struct.sv* %call21, %.pre
  br i1 %cmp25, label %if.then27, label %if.end29

if.then27:                                        ; preds = %if.then15, %cond.end22
  %13 = phi %struct.sv* [ %.pre, %cond.end22 ], [ %12, %if.then15 ]
  %call28 = tail call %struct.sv* @Perl_sv_mortalcopy(%struct.sv* %13) #6
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %cond.end22
  %osv.0 = phi %struct.sv* [ %call28, %if.then27 ], [ %call21, %cond.end22 ]
  store %struct.sv* %osv.0, %struct.sv** %0, align 8, !tbaa !0
  store %struct.sv** %0, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %14 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next31 = getelementptr inbounds %struct.op* %14, i64 0, i32 0
  br label %return

if.end32:                                         ; preds = %if.end, %cond.end
  store %struct.sv* @PL_sv_undef, %struct.sv** %0, align 8, !tbaa !0
  store %struct.sv** %0, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %15 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next34 = getelementptr inbounds %struct.op* %15, i64 0, i32 0
  br label %return

return:                                           ; preds = %if.end32, %if.end29, %if.then
  %retval.0.in = phi %struct.op** [ %op_next31, %if.end29 ], [ %op_next34, %if.end32 ], [ %op_next, %if.then ]
  %retval.0 = load %struct.op** %retval.0.in, align 8
  ret %struct.op* %retval.0
}
