define %struct.op* @Perl_pp_close() #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_private = getelementptr inbounds %struct.op* %1, i64 0, i32 7
  %2 = load i8* %op_private, align 1, !tbaa !1
  %and = and i8 %2, 15
  %cmp = icmp eq i8 %and, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load %struct.gv** @PL_defoutgv, align 8, !tbaa !0
  br label %if.end

if.else:                                          ; preds = %entry
  %incdec.ptr = getelementptr inbounds %struct.sv** %0, i64 -1
  %4 = load %struct.sv** %0, align 8, !tbaa !0
  %5 = bitcast %struct.sv* %4 to %struct.gv*
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %gv.0 = phi %struct.gv* [ %3, %if.then ], [ %5, %if.else ]
  %sp.0 = phi %struct.sv** [ %0, %if.then ], [ %incdec.ptr, %if.else ]
  %tobool = icmp eq %struct.gv* %gv.0, null
  br i1 %tobool, label %if.end47, label %land.lhs.true3

land.lhs.true3:                                   ; preds = %if.end
  %6 = getelementptr inbounds %struct.gv* %gv.0, i64 0, i32 2
  %7 = load i32* %6, align 4, !tbaa !4
  %and4 = and i32 %7, 255
  %cmp5 = icmp eq i32 %and4, 13
  br i1 %cmp5, label %land.lhs.true7, label %if.end47

land.lhs.true7:                                   ; preds = %land.lhs.true3
  %sv_any = getelementptr inbounds %struct.gv* %gv.0, i64 0, i32 0
  %8 = load %struct.xpvgv** %sv_any, align 8, !tbaa !0
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %8, i64 0, i32 7
  %9 = load %struct.gp** %xgv_gp, align 8, !tbaa !0
  %tobool8 = icmp eq %struct.gp* %9, null
  br i1 %tobool8, label %if.end47, label %cond.end

cond.end:                                         ; preds = %land.lhs.true7
  %gp_io = getelementptr inbounds %struct.gp* %9, i64 0, i32 2
  %10 = load %struct.io** %gp_io, align 8, !tbaa !0
  %tobool11 = icmp eq %struct.io* %10, null
  br i1 %tobool11, label %if.end47, label %land.lhs.true12

land.lhs.true12:                                  ; preds = %cond.end
  %11 = bitcast %struct.io* %10 to %struct.sv*
  %12 = getelementptr inbounds %struct.io* %10, i64 0, i32 2
  %13 = load i32* %12, align 4, !tbaa !4
  %and14 = and i32 %13, 32768
  %tobool15 = icmp eq i32 %and14, 0
  br i1 %tobool15, label %if.end47, label %cond.end18

cond.end18:                                       ; preds = %land.lhs.true12
  %call = tail call %struct.magic* @Perl_mg_find(%struct.sv* %11, i32 113) #6
  %tobool20 = icmp eq %struct.magic* %call, null
  br i1 %tobool20, label %if.end47, label %if.then21

if.then21:                                        ; preds = %cond.end18
  %14 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr22 = getelementptr inbounds i32* %14, i64 1
  store i32* %incdec.ptr22, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %15 = load i32** @PL_markstack_max, align 8, !tbaa !0
  %cmp23 = icmp eq i32* %incdec.ptr22, %15
  br i1 %cmp23, label %if.then25, label %if.end26

if.then25:                                        ; preds = %if.then21
  tail call void @Perl_markstack_grow() #6
  %.pre = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  br label %if.end26

if.end26:                                         ; preds = %if.then25, %if.then21
  %16 = phi i32* [ %.pre, %if.then25 ], [ %incdec.ptr22, %if.then21 ]
  %17 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %sp.0 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %17 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div83 = lshr exact i64 %sub.ptr.sub, 3
  %conv27 = trunc i64 %sub.ptr.div83 to i32
  store i32 %conv27, i32* %16, align 4, !tbaa !4
  %18 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast28 = ptrtoint %struct.sv** %18 to i64
  %sub.ptr.sub30 = sub i64 %sub.ptr.lhs.cast28, %sub.ptr.lhs.cast
  %cmp32 = icmp slt i64 %sub.ptr.sub30, 8
  br i1 %cmp32, label %if.then34, label %if.end36

if.then34:                                        ; preds = %if.end26
  %call35 = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %sp.0, %struct.sv** %sp.0, i32 1) #6
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %if.end26
  %sp.1 = phi %struct.sv** [ %call35, %if.then34 ], [ %sp.0, %if.end26 ]
  %mg_obj = getelementptr inbounds %struct.magic* %call, i64 0, i32 5
  %19 = load %struct.sv** %mg_obj, align 8, !tbaa !0
  %tobool37 = icmp eq %struct.sv* %19, null
  br i1 %tobool37, label %cond.false40, label %cond.end43

cond.false40:                                     ; preds = %if.end36
  %call41 = tail call %struct.sv* @Perl_newRV(%struct.sv* %11) #6
  %call42 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call41) #6
  br label %cond.end43

cond.end43:                                       ; preds = %if.end36, %cond.false40
  %cond44 = phi %struct.sv* [ %call42, %cond.false40 ], [ %19, %if.end36 ]
  %incdec.ptr45 = getelementptr inbounds %struct.sv** %sp.1, i64 1
  store %struct.sv* %cond44, %struct.sv** %incdec.ptr45, align 8, !tbaa !0
  store %struct.sv** %incdec.ptr45, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  tail call void @Perl_push_scope() #6
  %call46 = tail call i32 @Perl_call_method(i8* getelementptr inbounds ([6 x i8]* @.str15, i64 0, i64 0), i32 0) #6
  tail call void @Perl_pop_scope() #6
  br label %return

if.end47:                                         ; preds = %if.end, %land.lhs.true12, %land.lhs.true3, %land.lhs.true7, %cond.end18, %cond.end
  %20 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast48 = ptrtoint %struct.sv** %20 to i64
  %sub.ptr.rhs.cast49 = ptrtoint %struct.sv** %sp.0 to i64
  %sub.ptr.sub50 = sub i64 %sub.ptr.lhs.cast48, %sub.ptr.rhs.cast49
  %cmp52 = icmp slt i64 %sub.ptr.sub50, 8
  br i1 %cmp52, label %if.then54, label %if.end56

if.then54:                                        ; preds = %if.end47
  %call55 = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %sp.0, %struct.sv** %sp.0, i32 1) #6
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %if.end47
  %sp.2 = phi %struct.sv** [ %call55, %if.then54 ], [ %sp.0, %if.end47 ]
  %call57 = tail call signext i8 @Perl_do_close(%struct.gv* %gv.0, i8 signext 1) #6
  %tobool59 = icmp ne i8 %call57, 0
  %cond60 = select i1 %tobool59, %struct.sv* @PL_sv_yes, %struct.sv* @PL_sv_no
  %incdec.ptr61 = getelementptr inbounds %struct.sv** %sp.2, i64 1
  store %struct.sv* %cond60, %struct.sv** %incdec.ptr61, align 8, !tbaa !0
  store %struct.sv** %incdec.ptr61, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  br label %return

return:                                           ; preds = %if.end56, %cond.end43
  %.pn = load %struct.op** @PL_op, align 8
  %retval.0.in = getelementptr inbounds %struct.op* %.pn, i64 0, i32 0
  %retval.0 = load %struct.op** %retval.0.in, align 8
  ret %struct.op* %retval.0
}
