define %struct.io* @Perl_newIO() #0 {
entry:
  %call = tail call %struct.sv* @Perl_newSV(i64 0) #6
  %0 = bitcast %struct.sv* %call to %struct.io*
  %call1 = tail call signext i8 @Perl_sv_upgrade(%struct.sv* %call, i32 15) #6
  %1 = getelementptr inbounds %struct.sv* %call, i64 0, i32 1
  store i32 1, i32* %1, align 4, !tbaa !0
  %2 = getelementptr inbounds %struct.sv* %call, i64 0, i32 2
  %3 = load i32* %2, align 4, !tbaa !0
  %or = or i32 %3, 4096
  store i32 %or, i32* %2, align 4, !tbaa !0
  %4 = load %struct.hv** @PL_stashcache, align 8, !tbaa !3
  tail call void @Perl_hv_clear(%struct.hv* %4) #6
  %call2 = tail call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([13 x i8]* @.str58, i64 0, i64 0), i32 0, i32 11) #7
  %tobool = icmp eq %struct.gv* %call2, null
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %sv_any = getelementptr inbounds %struct.gv* %call2, i64 0, i32 0
  %5 = load %struct.xpvgv** %sv_any, align 8, !tbaa !3
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %5, i64 0, i32 7
  %6 = load %struct.gp** %xgv_gp, align 8, !tbaa !3
  %gp_hv = getelementptr inbounds %struct.gp* %6, i64 0, i32 5
  %7 = load %struct.hv** %gp_hv, align 8, !tbaa !3
  %tobool3 = icmp eq %struct.hv* %7, null
  br i1 %tobool3, label %if.end, label %land.lhs.true4

land.lhs.true4:                                   ; preds = %land.lhs.true
  %sv_any8 = getelementptr inbounds %struct.hv* %7, i64 0, i32 0
  %8 = load %struct.xpvhv** %sv_any8, align 8, !tbaa !3
  %9 = bitcast %struct.xpvhv* %8 to %struct.he***
  %10 = load %struct.he*** %9, align 8, !tbaa !3
  %tobool9 = icmp eq %struct.he** %10, null
  br i1 %tobool9, label %if.end, label %if.end.thread

if.end.thread:                                    ; preds = %land.lhs.true4
  %11 = bitcast %struct.hv* %7 to %struct.sv*
  store %struct.sv* %11, %struct.sv** @PL_Sv, align 8, !tbaa !3
  br label %land.rhs

if.end:                                           ; preds = %entry, %land.lhs.true, %land.lhs.true4
  %call10 = tail call %struct.gv* @Perl_gv_fetchpv(i8* getelementptr inbounds ([13 x i8]* @.str59, i64 0, i64 0), i32 1, i32 11) #7
  %sv_any11.phi.trans.insert = getelementptr inbounds %struct.gv* %call10, i64 0, i32 0
  %.pre = load %struct.xpvgv** %sv_any11.phi.trans.insert, align 8, !tbaa !3
  %xgv_gp12.phi.trans.insert = getelementptr inbounds %struct.xpvgv* %.pre, i64 0, i32 7
  %.pre25 = load %struct.gp** %xgv_gp12.phi.trans.insert, align 8, !tbaa !3
  %gp_hv13.phi.trans.insert = getelementptr inbounds %struct.gp* %.pre25, i64 0, i32 5
  %.pre26 = load %struct.hv** %gp_hv13.phi.trans.insert, align 8, !tbaa !3
  %12 = bitcast %struct.hv* %.pre26 to %struct.sv*
  store %struct.sv* %12, %struct.sv** @PL_Sv, align 8, !tbaa !3
  %tobool14 = icmp eq %struct.hv* %.pre26, null
  br i1 %tobool14, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end.thread, %if.end
  %13 = phi %struct.hv* [ %7, %if.end.thread ], [ %.pre26, %if.end ]
  %14 = getelementptr inbounds %struct.hv* %13, i64 0, i32 1
  %15 = load i32* %14, align 4, !tbaa !0
  %inc = add i32 %15, 1
  store i32 %inc, i32* %14, align 4, !tbaa !0
  br label %land.end

land.end:                                         ; preds = %if.end, %land.rhs
  %16 = phi %struct.hv* [ null, %if.end ], [ %13, %land.rhs ]
  %sv_any17 = bitcast %struct.sv* %call to %struct.xpvio**
  %17 = load %struct.xpvio** %sv_any17, align 8, !tbaa !3
  %18 = getelementptr inbounds %struct.xpvio* %17, i64 0, i32 6
  store %struct.hv* %16, %struct.hv** %18, align 8, !tbaa !3
  ret %struct.io* %0
}
