define %struct.op* @Perl_pp_shift() #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds %struct.sv** %0, i64 -1
  %1 = load %struct.sv** %0, align 8, !tbaa !0
  %2 = bitcast %struct.sv* %1 to %struct.av*
  %call = tail call %struct.sv* @Perl_av_shift(%struct.av* %2) #7
  %3 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %3 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %incdec.ptr to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp = icmp slt i64 %sub.ptr.sub, 8
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %incdec.ptr, %struct.sv** %incdec.ptr, i32 1) #7
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %sp.0 = phi %struct.sv** [ %call1, %if.then ], [ %incdec.ptr, %entry ]
  %tobool = icmp eq %struct.sv* %call, null
  br i1 %tobool, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %incdec.ptr3 = getelementptr inbounds %struct.sv** %sp.0, i64 1
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr3, align 8, !tbaa !0
  br label %return

if.end4:                                          ; preds = %if.end
  %sv_any = bitcast %struct.sv* %1 to %struct.xpvav**
  %4 = load %struct.xpvav** %sv_any, align 8, !tbaa !0
  %xav_flags = getelementptr inbounds %struct.xpvav* %4, i64 0, i32 9
  %5 = load i8* %xav_flags, align 1, !tbaa !1
  %and = and i8 %5, 1
  %tobool5 = icmp eq i8 %and, 0
  br i1 %tobool5, label %if.end8, label %if.then6

if.then6:                                         ; preds = %if.end4
  %call7 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call) #7
  br label %if.end8

if.end8:                                          ; preds = %if.end4, %if.then6
  %incdec.ptr9 = getelementptr inbounds %struct.sv** %sp.0, i64 1
  store %struct.sv* %call, %struct.sv** %incdec.ptr9, align 8, !tbaa !0
  br label %return

return:                                           ; preds = %if.end8, %if.then2
  %storemerge = phi %struct.sv** [ %incdec.ptr9, %if.end8 ], [ %incdec.ptr3, %if.then2 ]
  store %struct.sv** %storemerge, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %.pn = load %struct.op** @PL_op, align 8
  %retval.0.in = getelementptr inbounds %struct.op* %.pn, i64 0, i32 0
  %retval.0 = load %struct.op** %retval.0.in, align 8
  ret %struct.op* %retval.0
}
