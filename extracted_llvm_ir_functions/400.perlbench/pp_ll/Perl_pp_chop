define %struct.op* @Perl_pp_chop() #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %2 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i32* %2, i64 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %3 = load i32* %2, align 4, !tbaa !4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %idx.ext
  %4 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_targ = getelementptr inbounds %struct.op* %4, i64 0, i32 3
  %5 = load i64* %op_targ, align 8, !tbaa !3
  %6 = load %struct.sv*** @PL_curpad, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %struct.sv** %6, i64 %5
  %7 = load %struct.sv** %arrayidx, align 8, !tbaa !0
  %cmp14 = icmp ult %struct.sv** %add.ptr, %0
  br i1 %cmp14, label %while.body, label %while.end

while.body:                                       ; preds = %entry, %while.body
  %mark.015 = phi %struct.sv** [ %incdec.ptr2, %while.body ], [ %add.ptr, %entry ]
  %incdec.ptr2 = getelementptr inbounds %struct.sv** %mark.015, i64 1
  %8 = load %struct.sv** %incdec.ptr2, align 8, !tbaa !0
  tail call void @Perl_do_chop(%struct.sv* %7, %struct.sv* %8) #7
  %cmp = icmp ult %struct.sv** %incdec.ptr2, %0
  br i1 %cmp, label %while.body, label %while.cond.while.end_crit_edge

while.cond.while.end_crit_edge:                   ; preds = %while.body
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  br label %while.end

while.end:                                        ; preds = %while.cond.while.end_crit_edge, %entry
  %9 = phi %struct.sv** [ %.pre, %while.cond.while.end_crit_edge ], [ %1, %entry ]
  %sv_flags = getelementptr inbounds %struct.sv* %7, i64 0, i32 2
  %10 = load i32* %sv_flags, align 4, !tbaa !4
  %and = and i32 %10, 16384
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %while.end
  %call = tail call i32 @Perl_mg_set(%struct.sv* %7) #7
  br label %if.end

if.end:                                           ; preds = %while.end, %if.then
  %add.ptr4.sum = add i64 %idx.ext, 1
  %incdec.ptr5 = getelementptr inbounds %struct.sv** %9, i64 %add.ptr4.sum
  store %struct.sv* %7, %struct.sv** %incdec.ptr5, align 8, !tbaa !0
  store %struct.sv** %incdec.ptr5, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %11 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next = getelementptr inbounds %struct.op* %11, i64 0, i32 0
  %12 = load %struct.op** %op_next, align 8, !tbaa !0
  ret %struct.op* %12
}
