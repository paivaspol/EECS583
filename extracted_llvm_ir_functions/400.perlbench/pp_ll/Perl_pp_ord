define %struct.op* @Perl_pp_ord() #0 {
entry:
  %len = alloca i64, align 8
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_targ = getelementptr inbounds %struct.op* %1, i64 0, i32 3
  %2 = load i64* %op_targ, align 8, !tbaa !3
  %3 = load %struct.sv*** @PL_curpad, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %struct.sv** %3, i64 %2
  %4 = load %struct.sv** %arrayidx, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds %struct.sv** %0, i64 -1
  %5 = load %struct.sv** %0, align 8, !tbaa !0
  store %struct.sv* %5, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %5, i64 0, i32 2
  %6 = load i32* %sv_flags, align 4, !tbaa !4
  %and = and i32 %6, 262144
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %sv_any = getelementptr inbounds %struct.sv* %5, i64 0, i32 0
  %7 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %7, i64 8
  %8 = bitcast i8* %xpv_cur to i64*
  %9 = load i64* %8, align 8, !tbaa !3
  store i64 %9, i64* %len, align 8, !tbaa !3
  %xpv_pv = bitcast i8* %7 to i8**
  %10 = load i8** %xpv_pv, align 8, !tbaa !0
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call = call i8* @Perl_sv_2pv_flags(%struct.sv* %5, i64* %len, i32 2) #7
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %10, %cond.true ], [ %call, %cond.false ]
  %11 = load %struct.sv** @PL_encoding, align 8, !tbaa !0
  %tobool = icmp eq %struct.sv* %11, null
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end
  %12 = load i32* %sv_flags, align 4, !tbaa !4
  %and3 = and i32 %12, 262144
  %tobool4 = icmp eq i32 %and3, 0
  br i1 %tobool4, label %if.end, label %land.lhs.true5

land.lhs.true5:                                   ; preds = %land.lhs.true
  %and7 = and i32 %12, 536870912
  %tobool8 = icmp eq i32 %and7, 0
  br i1 %tobool8, label %if.then, label %land.lhs.true9

land.lhs.true9:                                   ; preds = %land.lhs.true5
  %13 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %op_private = getelementptr inbounds %struct.cop* %13, i64 0, i32 7
  %14 = load i8* %op_private, align 1, !tbaa !1
  %and10 = and i8 %14, 8
  %tobool11 = icmp eq i8 %and10, 0
  br i1 %tobool11, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true9, %land.lhs.true5
  %call12 = call %struct.sv* @Perl_newSVsv(%struct.sv* %5) #7
  %call13 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call12) #7
  %15 = load %struct.sv** @PL_encoding, align 8, !tbaa !0
  %call14 = call i8* @Perl_sv_recode_to_utf8(%struct.sv* %call13, %struct.sv* %15) #7
  br label %if.end

if.end:                                           ; preds = %land.lhs.true9, %cond.end, %land.lhs.true, %if.then
  %argsv.0 = phi %struct.sv* [ %call13, %if.then ], [ %5, %land.lhs.true ], [ %5, %cond.end ], [ %5, %land.lhs.true9 ]
  %s.0 = phi i8* [ %call14, %if.then ], [ %cond, %land.lhs.true ], [ %cond, %cond.end ], [ %cond, %land.lhs.true9 ]
  %sv_flags15 = getelementptr inbounds %struct.sv* %argsv.0, i64 0, i32 2
  %16 = load i32* %sv_flags15, align 4, !tbaa !4
  %and16 = and i32 %16, 536870912
  %tobool17 = icmp eq i32 %and16, 0
  br i1 %tobool17, label %cond.false25, label %land.lhs.true18

land.lhs.true18:                                  ; preds = %if.end
  %17 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %op_private19 = getelementptr inbounds %struct.cop* %17, i64 0, i32 7
  %18 = load i8* %op_private19, align 1, !tbaa !1
  %and21 = and i8 %18, 8
  %tobool22 = icmp eq i8 %and21, 0
  br i1 %tobool22, label %cond.true23, label %cond.false25

cond.true23:                                      ; preds = %land.lhs.true18
  %call24 = call i64 @Perl_utf8n_to_uvuni(i8* %s.0, i64 13, i64* null, i32 105) #7
  br label %cond.end29

cond.false25:                                     ; preds = %land.lhs.true18, %if.end
  %19 = load i8* %s.0, align 1, !tbaa !1
  %conv28 = zext i8 %19 to i64
  br label %cond.end29

cond.end29:                                       ; preds = %cond.false25, %cond.true23
  %cond30 = phi i64 [ %call24, %cond.true23 ], [ %conv28, %cond.false25 ]
  call void @Perl_sv_setuv(%struct.sv* %4, i64 %cond30) #7
  %sv_flags31 = getelementptr inbounds %struct.sv* %4, i64 0, i32 2
  %20 = load i32* %sv_flags31, align 4, !tbaa !4
  %and32 = and i32 %20, 16384
  %tobool33 = icmp eq i32 %and32, 0
  br i1 %tobool33, label %if.end36, label %if.then34

if.then34:                                        ; preds = %cond.end29
  %call35 = call i32 @Perl_mg_set(%struct.sv* %4) #7
  br label %if.end36

if.end36:                                         ; preds = %cond.end29, %if.then34
  %21 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %21 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %incdec.ptr to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp37 = icmp slt i64 %sub.ptr.sub, 8
  br i1 %cmp37, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.end36
  %call40 = call %struct.sv** @Perl_stack_grow(%struct.sv** %incdec.ptr, %struct.sv** %incdec.ptr, i32 1) #7
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.end36
  %sp.0 = phi %struct.sv** [ %call40, %if.then39 ], [ %incdec.ptr, %if.end36 ]
  %incdec.ptr42 = getelementptr inbounds %struct.sv** %sp.0, i64 1
  store %struct.sv* %4, %struct.sv** %incdec.ptr42, align 8, !tbaa !0
  store %struct.sv** %incdec.ptr42, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %22 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next = getelementptr inbounds %struct.op* %22, i64 0, i32 0
  %23 = load %struct.op** %op_next, align 8, !tbaa !0
  ret %struct.op* %23
}
