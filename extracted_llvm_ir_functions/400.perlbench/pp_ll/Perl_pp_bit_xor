define %struct.op* @Perl_pp_bit_xor() #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags = getelementptr inbounds %struct.op* %1, i64 0, i32 6
  %2 = load i8* %op_flags, align 1, !tbaa !1
  %and = and i8 %2, 64
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.sv** %0, i64 -1
  br label %cond.end

cond.false:                                       ; preds = %entry
  %op_targ = getelementptr inbounds %struct.op* %1, i64 0, i32 3
  %3 = load i64* %op_targ, align 8, !tbaa !3
  %4 = load %struct.sv*** @PL_curpad, align 8, !tbaa !0
  %arrayidx1 = getelementptr inbounds %struct.sv** %4, i64 %3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi %struct.sv** [ %arrayidx, %cond.true ], [ %arrayidx1, %cond.false ]
  %cond = load %struct.sv** %cond.in, align 8
  %5 = load i64* @PL_amagic_generation, align 8, !tbaa !3
  %tobool2 = icmp eq i64 %5, 0
  br i1 %tobool2, label %cond.end.if.end31_crit_edge, label %if.then

cond.end.if.end31_crit_edge:                      ; preds = %cond.end
  %incdec.ptr33.pre = getelementptr inbounds %struct.sv** %0, i64 -1
  br label %if.end31

if.then:                                          ; preds = %cond.end
  %6 = load %struct.sv** %0, align 8, !tbaa !0
  %add.ptr = getelementptr inbounds %struct.sv** %0, i64 -1
  %7 = load %struct.sv** %add.ptr, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %7, i64 0, i32 2
  %8 = load i32* %sv_flags, align 4, !tbaa !4
  %and3 = and i32 %8, 268435456
  %tobool4 = icmp eq i32 %and3, 0
  br i1 %tobool4, label %lor.lhs.false, label %land.lhs.true

lor.lhs.false:                                    ; preds = %if.then
  %sv_flags5 = getelementptr inbounds %struct.sv* %6, i64 0, i32 2
  %9 = load i32* %sv_flags5, align 4, !tbaa !4
  %and6 = and i32 %9, 268435456
  %tobool7 = icmp eq i32 %and6, 0
  br i1 %tobool7, label %if.end31, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.then
  %tobool11 = icmp ne i8 %and, 0
  %cond12 = select i1 %tobool11, i32 4, i32 0
  %call = tail call %struct.sv* @Perl_amagic_call(%struct.sv* %7, %struct.sv* %6, i32 26, i32 %cond12) #7
  %tobool13 = icmp eq %struct.sv* %call, null
  br i1 %tobool13, label %if.end31, label %if.then14

if.then14:                                        ; preds = %land.lhs.true
  %10 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds %struct.sv** %10, i64 -1
  %11 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags15 = getelementptr inbounds %struct.op* %11, i64 0, i32 6
  %12 = load i8* %op_flags15, align 1, !tbaa !1
  %and17 = and i8 %12, 64
  %tobool18 = icmp eq i8 %and17, 0
  %sv_flags20 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 2
  br i1 %tobool18, label %lor.lhs.false19, label %if.then23

lor.lhs.false19:                                  ; preds = %if.then14
  %13 = load i32* %sv_flags20, align 4, !tbaa !4
  %and21 = and i32 %13, 1024
  %tobool22 = icmp eq i32 %and21, 0
  br i1 %tobool22, label %if.end29, label %if.then23

if.then23:                                        ; preds = %if.then14, %lor.lhs.false19
  tail call void @Perl_sv_setsv_flags(%struct.sv* %cond, %struct.sv* %call, i32 2) #7
  %14 = load i32* %sv_flags20, align 4, !tbaa !4
  %and25 = and i32 %14, 16384
  %tobool26 = icmp eq i32 %and25, 0
  br i1 %tobool26, label %if.end29, label %if.then27

if.then27:                                        ; preds = %if.then23
  %call28 = tail call i32 @Perl_mg_set(%struct.sv* %cond) #7
  br label %if.end29

if.end29:                                         ; preds = %lor.lhs.false19, %if.then27, %if.then23
  %storemerge = phi %struct.sv* [ %cond, %if.then23 ], [ %cond, %if.then27 ], [ %call, %lor.lhs.false19 ]
  store %struct.sv* %storemerge, %struct.sv** %incdec.ptr, align 8, !tbaa !0
  br label %return

if.end31:                                         ; preds = %land.lhs.true, %cond.end.if.end31_crit_edge, %lor.lhs.false
  %incdec.ptr33.pre-phi = phi %struct.sv** [ %incdec.ptr33.pre, %cond.end.if.end31_crit_edge ], [ %add.ptr, %lor.lhs.false ], [ %add.ptr, %land.lhs.true ]
  %15 = load %struct.sv** %0, align 8, !tbaa !0
  %16 = load %struct.sv** %incdec.ptr33.pre-phi, align 8, !tbaa !0
  %sv_flags35 = getelementptr inbounds %struct.sv* %16, i64 0, i32 2
  %17 = load i32* %sv_flags35, align 4, !tbaa !4
  %and36 = and i32 %17, 50331648
  %tobool37 = icmp eq i32 %and36, 0
  br i1 %tobool37, label %lor.lhs.false38, label %if.then42

lor.lhs.false38:                                  ; preds = %if.end31
  %sv_flags39 = getelementptr inbounds %struct.sv* %15, i64 0, i32 2
  %18 = load i32* %sv_flags39, align 4, !tbaa !4
  %and40 = and i32 %18, 50331648
  %tobool41 = icmp eq i32 %and40, 0
  br i1 %tobool41, label %if.else131, label %if.then42

if.then42:                                        ; preds = %lor.lhs.false38, %if.end31
  %19 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_private = getelementptr inbounds %struct.op* %19, i64 0, i32 7
  %20 = load i8* %op_private, align 1, !tbaa !1
  %and44 = and i8 %20, 1
  %tobool45 = icmp eq i8 %and44, 0
  %21 = and i32 %17, 118431744
  %22 = icmp eq i32 %21, 0
  br i1 %tobool45, label %if.else87, label %if.then46

if.then46:                                        ; preds = %if.then42
  br i1 %22, label %lor.lhs.false54, label %cond.true59

lor.lhs.false54:                                  ; preds = %if.then46
  %op_flags55 = getelementptr inbounds %struct.op* %19, i64 0, i32 6
  %23 = load i8* %op_flags55, align 1, !tbaa !1
  %and57 = and i8 %23, 64
  %tobool58 = icmp eq i8 %and57, 0
  br i1 %tobool58, label %cond.true59, label %cond.end69

cond.true59:                                      ; preds = %if.then46, %lor.lhs.false54
  %and61 = and i32 %17, 65536
  %tobool62 = icmp eq i32 %and61, 0
  br i1 %tobool62, label %cond.false64, label %cond.true63

cond.true63:                                      ; preds = %cond.true59
  %sv_any = getelementptr inbounds %struct.sv* %16, i64 0, i32 0
  %24 = load i8** %sv_any, align 8, !tbaa !0
  %xiv_iv = getelementptr inbounds i8* %24, i64 24
  %25 = bitcast i8* %xiv_iv to i64*
  %26 = load i64* %25, align 8, !tbaa !3
  br label %cond.end69

cond.false64:                                     ; preds = %cond.true59
  %call65 = tail call i64 @Perl_sv_2iv(%struct.sv* %16) #7
  br label %cond.end69

cond.end69:                                       ; preds = %lor.lhs.false54, %cond.true63, %cond.false64
  %cond70 = phi i64 [ %26, %cond.true63 ], [ %call65, %cond.false64 ], [ 0, %lor.lhs.false54 ]
  %sv_flags71 = getelementptr inbounds %struct.sv* %15, i64 0, i32 2
  %27 = load i32* %sv_flags71, align 4, !tbaa !4
  %and72 = and i32 %27, 65536
  %tobool73 = icmp eq i32 %and72, 0
  br i1 %tobool73, label %cond.false77, label %cond.true74

cond.true74:                                      ; preds = %cond.end69
  %sv_any75 = getelementptr inbounds %struct.sv* %15, i64 0, i32 0
  %28 = load i8** %sv_any75, align 8, !tbaa !0
  %xiv_iv76 = getelementptr inbounds i8* %28, i64 24
  %29 = bitcast i8* %xiv_iv76 to i64*
  %30 = load i64* %29, align 8, !tbaa !3
  br label %cond.end79

cond.false77:                                     ; preds = %cond.end69
  %call78 = tail call i64 @Perl_sv_2iv(%struct.sv* %15) #7
  br label %cond.end79

cond.end79:                                       ; preds = %cond.false77, %cond.true74
  %cond80 = phi i64 [ %30, %cond.true74 ], [ %call78, %cond.false77 ]
  %xor = xor i64 %cond80, %cond70
  tail call void @Perl_sv_setiv(%struct.sv* %cond, i64 %xor) #7
  %sv_flags81 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 2
  %31 = load i32* %sv_flags81, align 4, !tbaa !4
  %and82 = and i32 %31, 16384
  %tobool83 = icmp eq i32 %and82, 0
  br i1 %tobool83, label %if.end86, label %if.then84

if.then84:                                        ; preds = %cond.end79
  %call85 = tail call i32 @Perl_mg_set(%struct.sv* %cond) #7
  br label %if.end86

if.end86:                                         ; preds = %cond.end79, %if.then84
  store %struct.sv* %cond, %struct.sv** %incdec.ptr33.pre-phi, align 8, !tbaa !0
  br label %return

if.else87:                                        ; preds = %if.then42
  br i1 %22, label %lor.lhs.false95, label %cond.true100

lor.lhs.false95:                                  ; preds = %if.else87
  %op_flags96 = getelementptr inbounds %struct.op* %19, i64 0, i32 6
  %32 = load i8* %op_flags96, align 1, !tbaa !1
  %and98 = and i8 %32, 64
  %tobool99 = icmp eq i8 %and98, 0
  br i1 %tobool99, label %cond.true100, label %cond.end111

cond.true100:                                     ; preds = %if.else87, %lor.lhs.false95
  %and102 = and i32 %17, 65536
  %tobool103 = icmp eq i32 %and102, 0
  br i1 %tobool103, label %cond.false106, label %cond.true104

cond.true104:                                     ; preds = %cond.true100
  %sv_any105 = getelementptr inbounds %struct.sv* %16, i64 0, i32 0
  %33 = load i8** %sv_any105, align 8, !tbaa !0
  %xuv_uv = getelementptr inbounds i8* %33, i64 24
  %34 = bitcast i8* %xuv_uv to i64*
  %35 = load i64* %34, align 8, !tbaa !3
  br label %cond.end111

cond.false106:                                    ; preds = %cond.true100
  %call107 = tail call i64 @Perl_sv_2uv(%struct.sv* %16) #7
  br label %cond.end111

cond.end111:                                      ; preds = %lor.lhs.false95, %cond.true104, %cond.false106
  %cond112 = phi i64 [ %35, %cond.true104 ], [ %call107, %cond.false106 ], [ 0, %lor.lhs.false95 ]
  %sv_flags113 = getelementptr inbounds %struct.sv* %15, i64 0, i32 2
  %36 = load i32* %sv_flags113, align 4, !tbaa !4
  %and114 = and i32 %36, 65536
  %tobool115 = icmp eq i32 %and114, 0
  br i1 %tobool115, label %cond.false119, label %cond.true116

cond.true116:                                     ; preds = %cond.end111
  %sv_any117 = getelementptr inbounds %struct.sv* %15, i64 0, i32 0
  %37 = load i8** %sv_any117, align 8, !tbaa !0
  %xuv_uv118 = getelementptr inbounds i8* %37, i64 24
  %38 = bitcast i8* %xuv_uv118 to i64*
  %39 = load i64* %38, align 8, !tbaa !3
  br label %cond.end121

cond.false119:                                    ; preds = %cond.end111
  %call120 = tail call i64 @Perl_sv_2uv(%struct.sv* %15) #7
  br label %cond.end121

cond.end121:                                      ; preds = %cond.false119, %cond.true116
  %cond122 = phi i64 [ %39, %cond.true116 ], [ %call120, %cond.false119 ]
  %xor123 = xor i64 %cond122, %cond112
  tail call void @Perl_sv_setuv(%struct.sv* %cond, i64 %xor123) #7
  %sv_flags124 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 2
  %40 = load i32* %sv_flags124, align 4, !tbaa !4
  %and125 = and i32 %40, 16384
  %tobool126 = icmp eq i32 %and125, 0
  br i1 %tobool126, label %if.end129, label %if.then127

if.then127:                                       ; preds = %cond.end121
  %call128 = tail call i32 @Perl_mg_set(%struct.sv* %cond) #7
  br label %if.end129

if.end129:                                        ; preds = %cond.end121, %if.then127
  store %struct.sv* %cond, %struct.sv** %incdec.ptr33.pre-phi, align 8, !tbaa !0
  br label %return

if.else131:                                       ; preds = %lor.lhs.false38
  %41 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_type = getelementptr inbounds %struct.op* %41, i64 0, i32 4
  %42 = load i16* %op_type, align 2, !tbaa !5
  %conv132 = zext i16 %42 to i32
  tail call void @Perl_do_vop(i32 %conv132, %struct.sv* %cond, %struct.sv* %16, %struct.sv* %15) #7
  %sv_flags133 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 2
  %43 = load i32* %sv_flags133, align 4, !tbaa !4
  %and134 = and i32 %43, 16384
  %tobool135 = icmp eq i32 %and134, 0
  br i1 %tobool135, label %if.end138, label %if.then136

if.then136:                                       ; preds = %if.else131
  %call137 = tail call i32 @Perl_mg_set(%struct.sv* %cond) #7
  br label %if.end138

if.end138:                                        ; preds = %if.else131, %if.then136
  store %struct.sv* %cond, %struct.sv** %incdec.ptr33.pre-phi, align 8, !tbaa !0
  br label %return

return:                                           ; preds = %if.end138, %if.end129, %if.end86, %if.end29
  %storemerge185 = phi %struct.sv** [ %incdec.ptr, %if.end29 ], [ %incdec.ptr33.pre-phi, %if.end86 ], [ %incdec.ptr33.pre-phi, %if.end129 ], [ %incdec.ptr33.pre-phi, %if.end138 ]
  store %struct.sv** %storemerge185, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %.pn = load %struct.op** @PL_op, align 8
  %retval.0.in = getelementptr inbounds %struct.op* %.pn, i64 0, i32 0
  %retval.0 = load %struct.op** %retval.0.in, align 8
  ret %struct.op* %retval.0
}
