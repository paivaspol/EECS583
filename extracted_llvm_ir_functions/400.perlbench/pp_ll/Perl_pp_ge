define %struct.op* @Perl_pp_ge() #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load i64* @PL_amagic_generation, align 8, !tbaa !3
  %tobool = icmp eq i64 %1, 0
  br i1 %tobool, label %if.end7, label %if.then

if.then:                                          ; preds = %entry
  %2 = load %struct.sv** %0, align 8, !tbaa !0
  %add.ptr = getelementptr inbounds %struct.sv** %0, i64 -1
  %3 = load %struct.sv** %add.ptr, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %3, i64 0, i32 2
  %4 = load i32* %sv_flags, align 4, !tbaa !4
  %and = and i32 %4, 268435456
  %tobool1 = icmp eq i32 %and, 0
  br i1 %tobool1, label %lor.lhs.false, label %land.lhs.true

lor.lhs.false:                                    ; preds = %if.then
  %sv_flags2 = getelementptr inbounds %struct.sv* %2, i64 0, i32 2
  %5 = load i32* %sv_flags2, align 4, !tbaa !4
  %and3 = and i32 %5, 268435456
  %tobool4 = icmp eq i32 %and3, 0
  br i1 %tobool4, label %if.end7, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.then
  %call = tail call %struct.sv* @Perl_amagic_call(%struct.sv* %3, %struct.sv* %2, i32 31, i32 0) #7
  %tobool5 = icmp eq %struct.sv* %call, null
  br i1 %tobool5, label %if.end7, label %if.then6

if.then6:                                         ; preds = %land.lhs.true
  %6 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds %struct.sv** %6, i64 -1
  store %struct.sv* %call, %struct.sv** %incdec.ptr, align 8, !tbaa !0
  store %struct.sv** %incdec.ptr, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %7 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next = getelementptr inbounds %struct.op* %7, i64 0, i32 0
  br label %return

if.end7:                                          ; preds = %land.lhs.true, %entry, %lor.lhs.false
  %8 = load %struct.sv** %0, align 8, !tbaa !0
  %sv_flags8 = getelementptr inbounds %struct.sv* %8, i64 0, i32 2
  %9 = load i32* %sv_flags8, align 4, !tbaa !4
  %and9 = and i32 %9, 16777216
  %tobool10 = icmp eq i32 %and9, 0
  br i1 %tobool10, label %land.lhs.true11, label %if.end24

land.lhs.true11:                                  ; preds = %if.end7
  %10 = and i32 %9, 393216
  %or.cond.not = icmp ne i32 %10, 0
  %and21 = and i32 %9, 65536
  %tobool22 = icmp eq i32 %and21, 0
  %or.cond258 = and i1 %or.cond.not, %tobool22
  br i1 %or.cond258, label %cond.false, label %if.end24

cond.false:                                       ; preds = %land.lhs.true11
  %call23 = tail call i64 @Perl_sv_2iv(%struct.sv* %8) #7
  %.pre = load %struct.sv** %0, align 8, !tbaa !0
  %sv_flags25.phi.trans.insert = getelementptr inbounds %struct.sv* %.pre, i64 0, i32 2
  %.pre260 = load i32* %sv_flags25.phi.trans.insert, align 4, !tbaa !4
  br label %if.end24

if.end24:                                         ; preds = %land.lhs.true11, %if.end7, %cond.false
  %11 = phi i32 [ %9, %land.lhs.true11 ], [ %9, %if.end7 ], [ %.pre260, %cond.false ]
  %12 = phi %struct.sv* [ %8, %land.lhs.true11 ], [ %8, %if.end7 ], [ %.pre, %cond.false ]
  %and26 = and i32 %11, 65536
  %tobool27 = icmp eq i32 %and26, 0
  br i1 %tobool27, label %if.else, label %if.then28

if.then28:                                        ; preds = %if.end24
  %add.ptr29 = getelementptr inbounds %struct.sv** %0, i64 -1
  %13 = load %struct.sv** %add.ptr29, align 8, !tbaa !0
  %sv_flags30 = getelementptr inbounds %struct.sv* %13, i64 0, i32 2
  %14 = load i32* %sv_flags30, align 4, !tbaa !4
  %and31 = and i32 %14, 16777216
  %tobool32 = icmp eq i32 %and31, 0
  br i1 %tobool32, label %land.lhs.true33, label %if.end57

land.lhs.true33:                                  ; preds = %if.then28
  %15 = and i32 %14, 393216
  %or.cond254.not = icmp ne i32 %15, 0
  %and46 = and i32 %14, 65536
  %tobool47 = icmp eq i32 %and46, 0
  %or.cond259 = and i1 %or.cond254.not, %tobool47
  br i1 %or.cond259, label %cond.false52, label %if.end57

cond.false52:                                     ; preds = %land.lhs.true33
  %call54 = tail call i64 @Perl_sv_2iv(%struct.sv* %13) #7
  %.pre261 = load %struct.sv** %add.ptr29, align 8, !tbaa !0
  %sv_flags59.phi.trans.insert = getelementptr inbounds %struct.sv* %.pre261, i64 0, i32 2
  %.pre262 = load i32* %sv_flags59.phi.trans.insert, align 4, !tbaa !4
  br label %if.end57

if.end57:                                         ; preds = %land.lhs.true33, %if.then28, %cond.false52
  %16 = phi i32 [ %14, %land.lhs.true33 ], [ %14, %if.then28 ], [ %.pre262, %cond.false52 ]
  %17 = phi %struct.sv* [ %13, %land.lhs.true33 ], [ %13, %if.then28 ], [ %.pre261, %cond.false52 ]
  %and60 = and i32 %16, 65536
  %tobool61 = icmp eq i32 %and60, 0
  br i1 %tobool61, label %if.end57.if.end169_crit_edge, label %if.then62

if.end57.if.end169_crit_edge:                     ; preds = %if.end57
  %.pre263 = load %struct.sv** %0, align 8, !tbaa !0
  %sv_flags171.phi.trans.insert = getelementptr inbounds %struct.sv* %.pre263, i64 0, i32 2
  %.pre264 = load i32* %sv_flags171.phi.trans.insert, align 4, !tbaa !4
  br label %if.end169

if.then62:                                        ; preds = %if.end57
  %and65 = and i32 %16, -2147418112
  %cmp = icmp eq i32 %and65, -2147418112
  %18 = load %struct.sv** %0, align 8, !tbaa !0
  %sv_flags67 = getelementptr inbounds %struct.sv* %18, i64 0, i32 2
  %19 = load i32* %sv_flags67, align 4, !tbaa !4
  %and68 = and i32 %19, -2147418112
  %cmp69 = icmp eq i32 %and68, -2147418112
  %brmerge = or i1 %cmp, %cmp69
  br i1 %brmerge, label %if.end86, label %if.then75

if.then75:                                        ; preds = %if.then62
  %sv_any77 = getelementptr inbounds %struct.sv* %17, i64 0, i32 0
  %20 = load i8** %sv_any77, align 8, !tbaa !0
  %xiv_iv78 = getelementptr inbounds i8* %20, i64 24
  %21 = bitcast i8* %xiv_iv78 to i64*
  %22 = load i64* %21, align 8, !tbaa !3
  %sv_any79 = getelementptr inbounds %struct.sv* %18, i64 0, i32 0
  %23 = load i8** %sv_any79, align 8, !tbaa !0
  %xiv_iv80 = getelementptr inbounds i8* %23, i64 24
  %24 = bitcast i8* %xiv_iv80 to i64*
  %25 = load i64* %24, align 8, !tbaa !3
  %cmp82 = icmp sge i64 %22, %25
  %cond84 = select i1 %cmp82, %struct.sv* @PL_sv_yes, %struct.sv* @PL_sv_no
  store %struct.sv* %cond84, %struct.sv** %add.ptr29, align 8, !tbaa !0
  store %struct.sv** %add.ptr29, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %26 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next85 = getelementptr inbounds %struct.op* %26, i64 0, i32 0
  br label %return

if.end86:                                         ; preds = %if.then62
  %27 = and i32 %and65, %19
  %brmerge255 = icmp eq i32 %27, -2147418112
  br i1 %brmerge255, label %if.then92, label %if.end102

if.then92:                                        ; preds = %if.end86
  %sv_any94 = getelementptr inbounds %struct.sv* %17, i64 0, i32 0
  %28 = load i8** %sv_any94, align 8, !tbaa !0
  %xuv_uv = getelementptr inbounds i8* %28, i64 24
  %29 = bitcast i8* %xuv_uv to i64*
  %30 = load i64* %29, align 8, !tbaa !3
  %sv_any95 = getelementptr inbounds %struct.sv* %18, i64 0, i32 0
  %31 = load i8** %sv_any95, align 8, !tbaa !0
  %xuv_uv96 = getelementptr inbounds i8* %31, i64 24
  %32 = bitcast i8* %xuv_uv96 to i64*
  %33 = load i64* %32, align 8, !tbaa !3
  %cmp98 = icmp uge i64 %30, %33
  %cond100 = select i1 %cmp98, %struct.sv* @PL_sv_yes, %struct.sv* @PL_sv_no
  store %struct.sv* %cond100, %struct.sv** %add.ptr29, align 8, !tbaa !0
  store %struct.sv** %add.ptr29, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %34 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next101 = getelementptr inbounds %struct.op* %34, i64 0, i32 0
  br label %return

if.end102:                                        ; preds = %if.end86
  br i1 %cmp, label %if.then104, label %if.end121

if.then104:                                       ; preds = %if.end102
  %sv_any107 = getelementptr inbounds %struct.sv* %18, i64 0, i32 0
  %35 = load i8** %sv_any107, align 8, !tbaa !0
  %xiv_iv108 = getelementptr inbounds i8* %35, i64 24
  %36 = bitcast i8* %xiv_iv108 to i64*
  %37 = load i64* %36, align 8, !tbaa !3
  %cmp110 = icmp slt i64 %37, 0
  br i1 %cmp110, label %if.then112, label %if.end114

if.then112:                                       ; preds = %if.then104
  store %struct.sv* @PL_sv_yes, %struct.sv** %add.ptr29, align 8, !tbaa !0
  store %struct.sv** %add.ptr29, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %38 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next113 = getelementptr inbounds %struct.op* %38, i64 0, i32 0
  br label %return

if.end114:                                        ; preds = %if.then104
  %sv_any115 = getelementptr inbounds %struct.sv* %17, i64 0, i32 0
  %39 = load i8** %sv_any115, align 8, !tbaa !0
  %xuv_uv116 = getelementptr inbounds i8* %39, i64 24
  %40 = bitcast i8* %xuv_uv116 to i64*
  %41 = load i64* %40, align 8, !tbaa !3
  %cmp117 = icmp uge i64 %41, %37
  %cond119 = select i1 %cmp117, %struct.sv* @PL_sv_yes, %struct.sv* @PL_sv_no
  store %struct.sv* %cond119, %struct.sv** %add.ptr29, align 8, !tbaa !0
  store %struct.sv** %add.ptr29, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %42 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next120 = getelementptr inbounds %struct.op* %42, i64 0, i32 0
  br label %return

if.end121:                                        ; preds = %if.end102
  %sv_any125 = getelementptr inbounds %struct.sv* %17, i64 0, i32 0
  %43 = load i8** %sv_any125, align 8, !tbaa !0
  %xiv_iv126 = getelementptr inbounds i8* %43, i64 24
  %44 = bitcast i8* %xiv_iv126 to i64*
  %45 = load i64* %44, align 8, !tbaa !3
  %cmp127 = icmp slt i64 %45, 0
  br i1 %cmp127, label %if.then129, label %if.end132

if.then129:                                       ; preds = %if.end121
  store %struct.sv* @PL_sv_no, %struct.sv** %add.ptr29, align 8, !tbaa !0
  store %struct.sv** %add.ptr29, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %46 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next131 = getelementptr inbounds %struct.op* %46, i64 0, i32 0
  br label %return

if.end132:                                        ; preds = %if.end121
  %sv_any133 = getelementptr inbounds %struct.sv* %18, i64 0, i32 0
  %47 = load i8** %sv_any133, align 8, !tbaa !0
  %xuv_uv134 = getelementptr inbounds i8* %47, i64 24
  %48 = bitcast i8* %xuv_uv134 to i64*
  %49 = load i64* %48, align 8, !tbaa !3
  %cmp136 = icmp uge i64 %45, %49
  %cond138 = select i1 %cmp136, %struct.sv* @PL_sv_yes, %struct.sv* @PL_sv_no
  store %struct.sv* %cond138, %struct.sv** %add.ptr29, align 8, !tbaa !0
  store %struct.sv** %add.ptr29, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %50 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next139 = getelementptr inbounds %struct.op* %50, i64 0, i32 0
  br label %return

if.else:                                          ; preds = %if.end24
  %51 = and i32 %11, 268959744
  %52 = icmp eq i32 %51, 524288
  %add.ptr149 = getelementptr inbounds %struct.sv** %0, i64 -1
  br i1 %52, label %land.lhs.true148, label %if.end169

land.lhs.true148:                                 ; preds = %if.else
  %53 = load %struct.sv** %add.ptr149, align 8, !tbaa !0
  %sv_flags150 = getelementptr inbounds %struct.sv* %53, i64 0, i32 2
  %54 = load i32* %sv_flags150, align 4, !tbaa !4
  %55 = and i32 %54, 268959744
  %56 = icmp eq i32 %55, 524288
  br i1 %56, label %if.then158, label %if.end169

if.then158:                                       ; preds = %land.lhs.true148
  %sv_any160 = getelementptr inbounds %struct.sv* %53, i64 0, i32 0
  %57 = load i8** %sv_any160, align 8, !tbaa !0
  %xrv_rv = bitcast i8* %57 to %struct.sv**
  %58 = load %struct.sv** %xrv_rv, align 8, !tbaa !0
  %sv_any162 = getelementptr inbounds %struct.sv* %12, i64 0, i32 0
  %59 = load i8** %sv_any162, align 8, !tbaa !0
  %xrv_rv163 = bitcast i8* %59 to %struct.sv**
  %60 = load %struct.sv** %xrv_rv163, align 8, !tbaa !0
  %cmp164 = icmp uge %struct.sv* %58, %60
  %cond166 = select i1 %cmp164, %struct.sv* @PL_sv_yes, %struct.sv* @PL_sv_no
  store %struct.sv* %cond166, %struct.sv** %add.ptr149, align 8, !tbaa !0
  store %struct.sv** %add.ptr149, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %61 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next167 = getelementptr inbounds %struct.op* %61, i64 0, i32 0
  br label %return

if.end169:                                        ; preds = %if.else, %if.end57.if.end169_crit_edge, %land.lhs.true148
  %incdec.ptr170.pre-phi = phi %struct.sv** [ %add.ptr29, %if.end57.if.end169_crit_edge ], [ %add.ptr149, %land.lhs.true148 ], [ %add.ptr149, %if.else ]
  %62 = phi i32 [ %.pre264, %if.end57.if.end169_crit_edge ], [ %11, %land.lhs.true148 ], [ %11, %if.else ]
  %63 = phi %struct.sv* [ %.pre263, %if.end57.if.end169_crit_edge ], [ %12, %land.lhs.true148 ], [ %12, %if.else ]
  store %struct.sv* %63, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %and172 = and i32 %62, 131072
  %tobool173 = icmp eq i32 %and172, 0
  br i1 %tobool173, label %cond.false176, label %cond.true174

cond.true174:                                     ; preds = %if.end169
  %sv_any175 = getelementptr inbounds %struct.sv* %63, i64 0, i32 0
  %64 = load i8** %sv_any175, align 8, !tbaa !0
  %xnv_nv = getelementptr inbounds i8* %64, i64 32
  %65 = bitcast i8* %xnv_nv to double*
  %66 = load double* %65, align 8, !tbaa !6
  br label %cond.end178

cond.false176:                                    ; preds = %if.end169
  %call177 = tail call double @Perl_sv_2nv(%struct.sv* %63) #7
  br label %cond.end178

cond.end178:                                      ; preds = %cond.false176, %cond.true174
  %cond179 = phi double [ %66, %cond.true174 ], [ %call177, %cond.false176 ]
  %67 = load %struct.sv** %incdec.ptr170.pre-phi, align 8, !tbaa !0
  %sv_flags180 = getelementptr inbounds %struct.sv* %67, i64 0, i32 2
  %68 = load i32* %sv_flags180, align 4, !tbaa !4
  %and181 = and i32 %68, 131072
  %tobool182 = icmp eq i32 %and181, 0
  br i1 %tobool182, label %cond.false186, label %cond.true183

cond.true183:                                     ; preds = %cond.end178
  %sv_any184 = getelementptr inbounds %struct.sv* %67, i64 0, i32 0
  %69 = load i8** %sv_any184, align 8, !tbaa !0
  %xnv_nv185 = getelementptr inbounds i8* %69, i64 32
  %70 = bitcast i8* %xnv_nv185 to double*
  %71 = load double* %70, align 8, !tbaa !6
  br label %cond.end188

cond.false186:                                    ; preds = %cond.end178
  %call187 = tail call double @Perl_sv_2nv(%struct.sv* %67) #7
  br label %cond.end188

cond.end188:                                      ; preds = %cond.false186, %cond.true183
  %cond189 = phi double [ %71, %cond.true183 ], [ %call187, %cond.false186 ]
  %cmp190 = fcmp oge double %cond189, %cond179
  %cond192 = select i1 %cmp190, %struct.sv* @PL_sv_yes, %struct.sv* @PL_sv_no
  store %struct.sv* %cond192, %struct.sv** %incdec.ptr170.pre-phi, align 8, !tbaa !0
  store %struct.sv** %incdec.ptr170.pre-phi, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %72 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next193 = getelementptr inbounds %struct.op* %72, i64 0, i32 0
  br label %return

return:                                           ; preds = %cond.end188, %if.then158, %if.end132, %if.then129, %if.end114, %if.then112, %if.then92, %if.then75, %if.then6
  %retval.0.in = phi %struct.op** [ %op_next, %if.then6 ], [ %op_next101, %if.then92 ], [ %op_next113, %if.then112 ], [ %op_next120, %if.end114 ], [ %op_next131, %if.then129 ], [ %op_next139, %if.end132 ], [ %op_next85, %if.then75 ], [ %op_next193, %cond.end188 ], [ %op_next167, %if.then158 ]
  %retval.0 = load %struct.op** %retval.0.in, align 8
  ret %struct.op* %retval.0
}
