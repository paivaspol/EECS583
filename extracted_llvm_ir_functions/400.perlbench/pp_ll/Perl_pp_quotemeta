define %struct.op* @Perl_pp_quotemeta() #0 {
entry:
  %len = alloca i64, align 8
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_targ = getelementptr inbounds %struct.op* %1, i64 0, i32 3
  %2 = load i64* %op_targ, align 8, !tbaa !3
  %3 = load %struct.sv*** @PL_curpad, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %struct.sv** %3, i64 %2
  %4 = load %struct.sv** %arrayidx, align 8, !tbaa !0
  %5 = load %struct.sv** %0, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %5, i64 0, i32 2
  %6 = load i32* %sv_flags, align 4, !tbaa !4
  %and = and i32 %6, 262144
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %sv_any = getelementptr inbounds %struct.sv* %5, i64 0, i32 0
  %7 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %7, i64 8
  %8 = bitcast i8* %xpv_cur to i64*
  %9 = load i64* %8, align 8, !tbaa !3
  store i64 %9, i64* %len, align 8, !tbaa !3
  %xpv_pv = bitcast i8* %7 to i8**
  %10 = load i8** %xpv_pv, align 8, !tbaa !0
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call = call i8* @Perl_sv_2pv_flags(%struct.sv* %5, i64* %len, i32 2) #7
  %.pre = load i64* %len, align 8, !tbaa !3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %11 = phi i64 [ %9, %cond.true ], [ %.pre, %cond.false ]
  %cond = phi i8* [ %10, %cond.true ], [ %call, %cond.false ]
  %sv_flags2 = getelementptr inbounds %struct.sv* %4, i64 0, i32 2
  %12 = load i32* %sv_flags2, align 4, !tbaa !4
  %and3 = and i32 %12, -536870913
  store i32 %and3, i32* %sv_flags2, align 4, !tbaa !4
  %tobool = icmp eq i64 %11, 0
  br i1 %tobool, label %if.else126, label %if.then

if.then:                                          ; preds = %cond.end
  %and5 = and i32 %12, 252
  %cmp6 = icmp ugt i32 %and5, 3
  br i1 %cmp6, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then
  %call7 = call signext i8 @Perl_sv_upgrade(%struct.sv* %4, i32 4) #7
  %.pre227 = load i64* %len, align 8, !tbaa !3
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then
  %13 = phi i64 [ %.pre227, %lor.rhs ], [ %11, %if.then ]
  %sv_any9 = getelementptr inbounds %struct.sv* %4, i64 0, i32 0
  %14 = load i8** %sv_any9, align 8, !tbaa !0
  %xpv_len = getelementptr inbounds i8* %14, i64 16
  %15 = bitcast i8* %xpv_len to i64*
  %16 = load i64* %15, align 8, !tbaa !3
  %mul = shl i64 %13, 1
  %add178 = or i64 %mul, 1
  %cmp10 = icmp ult i64 %16, %add178
  br i1 %cmp10, label %cond.true12, label %cond.end19

cond.true12:                                      ; preds = %lor.end
  %call15 = call i8* @Perl_sv_grow(%struct.sv* %4, i64 %add178) #7
  %.pre228 = load i8** %sv_any9, align 8, !tbaa !0
  br label %cond.end19

cond.end19:                                       ; preds = %lor.end, %cond.true12
  %17 = phi i8* [ %14, %lor.end ], [ %.pre228, %cond.true12 ]
  %xpv_pv22 = bitcast i8* %17 to i8**
  %18 = load i8** %xpv_pv22, align 8, !tbaa !0
  %19 = load i32* %sv_flags, align 4, !tbaa !4
  %and24 = and i32 %19, 536870912
  %tobool25 = icmp eq i32 %and24, 0
  br i1 %tobool25, label %while.cond80.preheader, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end19
  %20 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %op_private = getelementptr inbounds %struct.cop* %20, i64 0, i32 7
  %21 = load i8* %op_private, align 1, !tbaa !1
  %and27 = and i8 %21, 8
  %tobool28 = icmp eq i8 %and27, 0
  br i1 %tobool28, label %while.condthread-pre-split.preheader, label %while.cond80.preheader

while.condthread-pre-split.preheader:             ; preds = %land.lhs.true
  %.pr212 = load i64* %len, align 8, !tbaa !3
  %tobool30201213 = icmp eq i64 %.pr212, 0
  br i1 %tobool30201213, label %while.end77, label %while.body

while.cond80.preheader:                           ; preds = %land.lhs.true, %cond.end19
  %22 = load i64* %len, align 8, !tbaa !3
  %dec81194 = add i64 %22, -1
  store i64 %dec81194, i64* %len, align 8, !tbaa !3
  %tobool82195 = icmp eq i64 %22, 0
  br i1 %tobool82195, label %if.end117, label %while.body83

while.cond40.while.condthread-pre-split.loopexit_crit_edge: ; preds = %while.body42
  %scevgep.sum = xor i64 %umax, -1
  %scevgep223 = getelementptr i8* %d.0203, i64 %scevgep.sum
  %scevgep224.sum = xor i64 %umax, -1
  %scevgep225 = getelementptr i8* %s.0202, i64 %scevgep224.sum
  %.pr.pre = load i64* %len, align 8, !tbaa !3
  br label %while.condthread-pre-split.loopexit

while.condthread-pre-split.loopexit:              ; preds = %while.cond40.while.condthread-pre-split.loopexit_crit_edge, %if.then34
  %.pr = phi i64 [ %.pr.pre, %while.cond40.while.condthread-pre-split.loopexit_crit_edge ], [ %sub, %if.then34 ]
  %d.1.lcssa = phi i8* [ %scevgep223, %while.cond40.while.condthread-pre-split.loopexit_crit_edge ], [ %d.0203, %if.then34 ]
  %s.1.lcssa = phi i8* [ %scevgep225, %while.cond40.while.condthread-pre-split.loopexit_crit_edge ], [ %s.0202, %if.then34 ]
  %tobool30201 = icmp eq i64 %.pr, 0
  br i1 %tobool30201, label %while.end77, label %while.body

while.body:                                       ; preds = %while.condthread-pre-split.loopexit, %while.condthread-pre-split.preheader, %if.end72
  %d.0203 = phi i8* [ %incdec.ptr74, %if.end72 ], [ %d.1.lcssa, %while.condthread-pre-split.loopexit ], [ %18, %while.condthread-pre-split.preheader ]
  %s.0202 = phi i8* [ %incdec.ptr73, %if.end72 ], [ %s.1.lcssa, %while.condthread-pre-split.loopexit ], [ %cond, %while.condthread-pre-split.preheader ]
  %23 = phi i64 [ %dec75, %if.end72 ], [ %.pr, %while.condthread-pre-split.loopexit ], [ %.pr212, %while.condthread-pre-split.preheader ]
  %24 = load i8* %s.0202, align 1, !tbaa !1
  %tobool33 = icmp slt i8 %24, 0
  br i1 %tobool33, label %if.then34, label %if.else

if.then34:                                        ; preds = %while.body
  %idxprom = zext i8 %24 to i64
  %arrayidx35 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i64 0, i64 %idxprom
  %25 = load i8* %arrayidx35, align 1, !tbaa !1
  %conv36 = zext i8 %25 to i64
  %cmp37 = icmp ugt i64 %conv36, %23
  %.conv36 = select i1 %cmp37, i64 %23, i64 %conv36
  %sub = sub i64 %23, %.conv36
  store i64 %sub, i64* %len, align 8, !tbaa !3
  %tobool41205 = icmp eq i64 %.conv36, 0
  br i1 %tobool41205, label %while.condthread-pre-split.loopexit, label %while.body42.lr.ph

while.body42.lr.ph:                               ; preds = %if.then34
  %26 = xor i64 %23, -1
  %27 = xor i64 %conv36, -1
  %28 = icmp ugt i64 %26, %27
  %umax = select i1 %28, i64 %26, i64 %27
  br label %while.body42

while.body42:                                     ; preds = %while.body42.lr.ph, %while.body42
  %ulen.1208 = phi i64 [ %.conv36, %while.body42.lr.ph ], [ %dec, %while.body42 ]
  %d.1207 = phi i8* [ %d.0203, %while.body42.lr.ph ], [ %incdec.ptr43, %while.body42 ]
  %s.1206 = phi i8* [ %s.0202, %while.body42.lr.ph ], [ %incdec.ptr, %while.body42 ]
  %dec = add i64 %ulen.1208, -1
  %incdec.ptr = getelementptr inbounds i8* %s.1206, i64 1
  %29 = load i8* %s.1206, align 1, !tbaa !1
  %incdec.ptr43 = getelementptr inbounds i8* %d.1207, i64 1
  store i8 %29, i8* %d.1207, align 1, !tbaa !1
  %tobool41 = icmp eq i64 %dec, 0
  br i1 %tobool41, label %while.cond40.while.condthread-pre-split.loopexit_crit_edge, label %while.body42

if.else:                                          ; preds = %while.body
  %.off188 = add i8 %24, -65
  %30 = icmp ult i8 %.off188, 26
  %.off189 = add i8 %24, -97
  %31 = icmp ult i8 %.off189, 26
  %or.cond = or i1 %30, %31
  br i1 %or.cond, label %if.end72, label %lor.lhs.false58

lor.lhs.false58:                                  ; preds = %if.else
  %.off190 = add i8 %24, -48
  %32 = icmp ult i8 %.off190, 10
  %cmp68 = icmp eq i8 %24, 95
  %or.cond184 = or i1 %32, %cmp68
  br i1 %or.cond184, label %if.end72, label %if.then70

if.then70:                                        ; preds = %lor.lhs.false58
  %incdec.ptr71 = getelementptr inbounds i8* %d.0203, i64 1
  store i8 92, i8* %d.0203, align 1, !tbaa !1
  %.pre230 = load i8* %s.0202, align 1, !tbaa !1
  br label %if.end72

if.end72:                                         ; preds = %lor.lhs.false58, %if.else, %if.then70
  %33 = phi i8 [ %.pre230, %if.then70 ], [ %24, %if.else ], [ %24, %lor.lhs.false58 ]
  %d.2 = phi i8* [ %incdec.ptr71, %if.then70 ], [ %d.0203, %if.else ], [ %d.0203, %lor.lhs.false58 ]
  %incdec.ptr73 = getelementptr inbounds i8* %s.0202, i64 1
  %incdec.ptr74 = getelementptr inbounds i8* %d.2, i64 1
  store i8 %33, i8* %d.2, align 1, !tbaa !1
  %34 = load i64* %len, align 8, !tbaa !3
  %dec75 = add i64 %34, -1
  store i64 %dec75, i64* %len, align 8, !tbaa !3
  %tobool30 = icmp eq i64 %dec75, 0
  br i1 %tobool30, label %while.end77, label %while.body

while.end77:                                      ; preds = %while.condthread-pre-split.preheader, %while.condthread-pre-split.loopexit, %if.end72
  %d.0.lcssa = phi i8* [ %incdec.ptr74, %if.end72 ], [ %18, %while.condthread-pre-split.preheader ], [ %d.1.lcssa, %while.condthread-pre-split.loopexit ]
  %35 = load i32* %sv_flags2, align 4, !tbaa !4
  %or = or i32 %35, 536870912
  store i32 %or, i32* %sv_flags2, align 4, !tbaa !4
  br label %if.end117

while.body83:                                     ; preds = %while.cond80.preheader, %if.end113
  %d.3197 = phi i8* [ %incdec.ptr115, %if.end113 ], [ %18, %while.cond80.preheader ]
  %s.2196 = phi i8* [ %incdec.ptr114, %if.end113 ], [ %cond, %while.cond80.preheader ]
  %36 = load i8* %s.2196, align 1, !tbaa !1
  %.off = add i8 %36, -65
  %37 = icmp ult i8 %.off, 26
  %.off186 = add i8 %36, -97
  %38 = icmp ult i8 %.off186, 26
  %or.cond193 = or i1 %37, %38
  br i1 %or.cond193, label %if.end113, label %lor.lhs.false99

lor.lhs.false99:                                  ; preds = %while.body83
  %.off187 = add i8 %36, -48
  %39 = icmp ult i8 %.off187, 10
  %cmp109 = icmp eq i8 %36, 95
  %or.cond185 = or i1 %39, %cmp109
  br i1 %or.cond185, label %if.end113, label %if.then111

if.then111:                                       ; preds = %lor.lhs.false99
  %incdec.ptr112 = getelementptr inbounds i8* %d.3197, i64 1
  store i8 92, i8* %d.3197, align 1, !tbaa !1
  %.pre231 = load i8* %s.2196, align 1, !tbaa !1
  br label %if.end113

if.end113:                                        ; preds = %lor.lhs.false99, %while.body83, %if.then111
  %40 = phi i8 [ %.pre231, %if.then111 ], [ %36, %while.body83 ], [ %36, %lor.lhs.false99 ]
  %d.4 = phi i8* [ %incdec.ptr112, %if.then111 ], [ %d.3197, %while.body83 ], [ %d.3197, %lor.lhs.false99 ]
  %incdec.ptr114 = getelementptr inbounds i8* %s.2196, i64 1
  %incdec.ptr115 = getelementptr inbounds i8* %d.4, i64 1
  store i8 %40, i8* %d.4, align 1, !tbaa !1
  %41 = load i64* %len, align 8, !tbaa !3
  %dec81 = add i64 %41, -1
  store i64 %dec81, i64* %len, align 8, !tbaa !3
  %tobool82 = icmp eq i64 %41, 0
  br i1 %tobool82, label %if.end117, label %while.body83

if.end117:                                        ; preds = %while.cond80.preheader, %if.end113, %while.end77
  %d.5 = phi i8* [ %d.0.lcssa, %while.end77 ], [ %18, %while.cond80.preheader ], [ %incdec.ptr115, %if.end113 ]
  store i8 0, i8* %d.5, align 1, !tbaa !1
  %42 = load i8** %sv_any9, align 8, !tbaa !0
  %xpv_pv119 = bitcast i8* %42 to i8**
  %43 = load i8** %xpv_pv119, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint i8* %d.5 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %43 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %xpv_cur121 = getelementptr inbounds i8* %42, i64 8
  %44 = bitcast i8* %xpv_cur121 to i64*
  store i64 %sub.ptr.sub, i64* %44, align 8, !tbaa !3
  %45 = load i32* %sv_flags2, align 4, !tbaa !4
  %and123 = and i32 %45, 1760624639
  %or125 = or i32 %and123, 67371008
  store i32 %or125, i32* %sv_flags2, align 4, !tbaa !4
  br label %if.end127

if.else126:                                       ; preds = %cond.end
  call void @Perl_sv_setpvn(%struct.sv* %4, i8* %cond, i64 0) #7
  %.pre226 = load i32* %sv_flags2, align 4, !tbaa !4
  br label %if.end127

if.end127:                                        ; preds = %if.else126, %if.end117
  %46 = phi i32 [ %.pre226, %if.else126 ], [ %or125, %if.end117 ]
  store %struct.sv* %4, %struct.sv** %0, align 8, !tbaa !0
  %and129 = and i32 %46, 16384
  %tobool130 = icmp eq i32 %and129, 0
  br i1 %tobool130, label %if.end133, label %if.then131

if.then131:                                       ; preds = %if.end127
  %call132 = call i32 @Perl_mg_set(%struct.sv* %4) #7
  br label %if.end133

if.end133:                                        ; preds = %if.end127, %if.then131
  store %struct.sv** %0, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %47 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next = getelementptr inbounds %struct.op* %47, i64 0, i32 0
  %48 = load %struct.op** %op_next, align 8, !tbaa !0
  ret %struct.op* %48
}
