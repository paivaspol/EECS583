define %struct.op* @Perl_pp_refgen() #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %2 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i32* %2, i64 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %3 = load i32* %2, align 4, !tbaa !4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %idx.ext
  %4 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags = getelementptr inbounds %struct.op* %4, i64 0, i32 6
  %5 = load i8* %op_flags, align 1, !tbaa !1
  %conv = zext i8 %5 to i32
  %and = and i32 %conv, 3
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %cmp = icmp eq i32 %and, 3
  %cond = zext i1 %cmp to i32
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call = tail call i32 @Perl_dowantarray() #7
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond5 = phi i32 [ %cond, %cond.true ], [ %call, %cond.false ]
  %cmp6 = icmp eq i32 %cond5, 1
  br i1 %cmp6, label %if.end13, label %if.then

if.then:                                          ; preds = %cond.end
  %add.ptr.sum = add i64 %idx.ext, 1
  %incdec.ptr8 = getelementptr inbounds %struct.sv** %1, i64 %add.ptr.sum
  %cmp9 = icmp ugt %struct.sv** %incdec.ptr8, %0
  br i1 %cmp9, label %if.end, label %if.then11

if.then11:                                        ; preds = %if.then
  %6 = load %struct.sv** %0, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then11
  %storemerge = phi %struct.sv* [ %6, %if.then11 ], [ @PL_sv_undef, %if.then ]
  store %struct.sv* %storemerge, %struct.sv** %incdec.ptr8, align 8, !tbaa !0
  %call12 = tail call fastcc %struct.sv* @S_refto(%struct.sv* %storemerge) #8
  store %struct.sv* %call12, %struct.sv** %incdec.ptr8, align 8, !tbaa !0
  br label %return

if.end13:                                         ; preds = %cond.end
  %7 = load i32* @PL_tmps_ix, align 4, !tbaa !4
  %conv14 = sext i32 %7 to i64
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3
  %add = add nsw i64 %conv14, %sub.ptr.div
  %8 = load i32* @PL_tmps_max, align 4, !tbaa !4
  %conv15 = sext i32 %8 to i64
  %cmp16 = icmp slt i64 %add, %conv15
  br i1 %cmp16, label %while.cond.preheader, label %if.then18

if.then18:                                        ; preds = %if.end13
  %conv23 = trunc i64 %sub.ptr.div to i32
  tail call void @Perl_tmps_grow(i32 %conv23) #7
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.then18, %if.end13
  %add.ptr.sum50 = add i64 %idx.ext, 1
  %incdec.ptr2547 = getelementptr inbounds %struct.sv** %1, i64 %add.ptr.sum50
  %cmp2648 = icmp ugt %struct.sv** %incdec.ptr2547, %0
  br i1 %cmp2648, label %return, label %while.body

while.body:                                       ; preds = %while.cond.preheader, %while.body
  %incdec.ptr2549 = phi %struct.sv** [ %incdec.ptr25, %while.body ], [ %incdec.ptr2547, %while.cond.preheader ]
  %9 = load %struct.sv** %incdec.ptr2549, align 8, !tbaa !0
  %call28 = tail call fastcc %struct.sv* @S_refto(%struct.sv* %9) #8
  store %struct.sv* %call28, %struct.sv** %incdec.ptr2549, align 8, !tbaa !0
  %incdec.ptr25 = getelementptr inbounds %struct.sv** %incdec.ptr2549, i64 1
  %cmp26 = icmp ugt %struct.sv** %incdec.ptr25, %0
  br i1 %cmp26, label %return, label %while.body

return:                                           ; preds = %while.cond.preheader, %while.body, %if.end
  %storemerge46 = phi %struct.sv** [ %incdec.ptr8, %if.end ], [ %0, %while.body ], [ %0, %while.cond.preheader ]
  store %struct.sv** %storemerge46, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %.pn = load %struct.op** @PL_op, align 8
  %retval.0.in = getelementptr inbounds %struct.op* %.pn, i64 0, i32 0
  %retval.0 = load %struct.op** %retval.0.in, align 8
  ret %struct.op* %retval.0
}
