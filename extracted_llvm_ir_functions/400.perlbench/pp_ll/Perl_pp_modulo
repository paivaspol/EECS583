define %struct.op* @Perl_pp_modulo() #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags = getelementptr inbounds %struct.op* %1, i64 0, i32 6
  %2 = load i8* %op_flags, align 1, !tbaa !1
  %and = and i8 %2, 64
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.sv** %0, i64 -1
  br label %cond.end

cond.false:                                       ; preds = %entry
  %op_targ = getelementptr inbounds %struct.op* %1, i64 0, i32 3
  %3 = load i64* %op_targ, align 8, !tbaa !3
  %4 = load %struct.sv*** @PL_curpad, align 8, !tbaa !0
  %arrayidx1 = getelementptr inbounds %struct.sv** %4, i64 %3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi %struct.sv** [ %arrayidx, %cond.true ], [ %arrayidx1, %cond.false ]
  %cond = load %struct.sv** %cond.in, align 8
  %5 = load i64* @PL_amagic_generation, align 8, !tbaa !3
  %tobool2 = icmp eq i64 %5, 0
  br i1 %tobool2, label %if.end31, label %if.then

if.then:                                          ; preds = %cond.end
  %6 = load %struct.sv** %0, align 8, !tbaa !0
  %add.ptr = getelementptr inbounds %struct.sv** %0, i64 -1
  %7 = load %struct.sv** %add.ptr, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %7, i64 0, i32 2
  %8 = load i32* %sv_flags, align 4, !tbaa !4
  %and3 = and i32 %8, 268435456
  %tobool4 = icmp eq i32 %and3, 0
  br i1 %tobool4, label %lor.lhs.false, label %land.lhs.true

lor.lhs.false:                                    ; preds = %if.then
  %sv_flags5 = getelementptr inbounds %struct.sv* %6, i64 0, i32 2
  %9 = load i32* %sv_flags5, align 4, !tbaa !4
  %and6 = and i32 %9, 268435456
  %tobool7 = icmp eq i32 %and6, 0
  br i1 %tobool7, label %if.end31, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.then
  %tobool11 = icmp ne i8 %and, 0
  %cond12 = select i1 %tobool11, i32 4, i32 0
  %call = tail call %struct.sv* @Perl_amagic_call(%struct.sv* %7, %struct.sv* %6, i32 14, i32 %cond12) #7
  %tobool13 = icmp eq %struct.sv* %call, null
  br i1 %tobool13, label %if.end31, label %if.then14

if.then14:                                        ; preds = %land.lhs.true
  %10 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds %struct.sv** %10, i64 -1
  %11 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags15 = getelementptr inbounds %struct.op* %11, i64 0, i32 6
  %12 = load i8* %op_flags15, align 1, !tbaa !1
  %and17 = and i8 %12, 64
  %tobool18 = icmp eq i8 %and17, 0
  %sv_flags20 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 2
  br i1 %tobool18, label %lor.lhs.false19, label %if.then23

lor.lhs.false19:                                  ; preds = %if.then14
  %13 = load i32* %sv_flags20, align 4, !tbaa !4
  %and21 = and i32 %13, 1024
  %tobool22 = icmp eq i32 %and21, 0
  br i1 %tobool22, label %if.end29, label %if.then23

if.then23:                                        ; preds = %if.then14, %lor.lhs.false19
  tail call void @Perl_sv_setsv_flags(%struct.sv* %cond, %struct.sv* %call, i32 2) #7
  %14 = load i32* %sv_flags20, align 4, !tbaa !4
  %and25 = and i32 %14, 16384
  %tobool26 = icmp eq i32 %and25, 0
  br i1 %tobool26, label %if.end29, label %if.then27

if.then27:                                        ; preds = %if.then23
  %call28 = tail call i32 @Perl_mg_set(%struct.sv* %cond) #7
  br label %if.end29

if.end29:                                         ; preds = %lor.lhs.false19, %if.then27, %if.then23
  %storemerge = phi %struct.sv* [ %cond, %if.then23 ], [ %cond, %if.then27 ], [ %call, %lor.lhs.false19 ]
  store %struct.sv* %storemerge, %struct.sv** %incdec.ptr, align 8, !tbaa !0
  store %struct.sv** %incdec.ptr, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %15 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next = getelementptr inbounds %struct.op* %15, i64 0, i32 0
  %16 = load %struct.op** %op_next, align 8, !tbaa !0
  br label %return

if.end31:                                         ; preds = %land.lhs.true, %cond.end, %lor.lhs.false
  %17 = load %struct.sv** %0, align 8, !tbaa !0
  %sv_flags34 = getelementptr inbounds %struct.sv* %17, i64 0, i32 2
  %18 = load i32* %sv_flags34, align 4, !tbaa !4
  %and35 = and i32 %18, 16777216
  %tobool36 = icmp eq i32 %and35, 0
  br i1 %tobool36, label %land.lhs.true37, label %if.end54

land.lhs.true37:                                  ; preds = %if.end31
  %19 = and i32 %18, 393216
  %or.cond.not = icmp ne i32 %19, 0
  %and47 = and i32 %18, 65536
  %tobool48 = icmp eq i32 %and47, 0
  %or.cond338 = and i1 %or.cond.not, %tobool48
  br i1 %or.cond338, label %cond.false50, label %if.end54

cond.false50:                                     ; preds = %land.lhs.true37
  %call51 = tail call i64 @Perl_sv_2iv(%struct.sv* %17) #7
  %.pre = load %struct.sv** %0, align 8, !tbaa !0
  %sv_flags55.phi.trans.insert = getelementptr inbounds %struct.sv* %.pre, i64 0, i32 2
  %.pre340 = load i32* %sv_flags55.phi.trans.insert, align 4, !tbaa !4
  br label %if.end54

if.end54:                                         ; preds = %land.lhs.true37, %if.end31, %cond.false50
  %20 = phi i32 [ %18, %land.lhs.true37 ], [ %18, %if.end31 ], [ %.pre340, %cond.false50 ]
  %21 = phi %struct.sv* [ %17, %land.lhs.true37 ], [ %17, %if.end31 ], [ %.pre, %cond.false50 ]
  %and56 = and i32 %20, 65536
  %tobool57 = icmp eq i32 %and56, 0
  br i1 %tobool57, label %if.else77, label %if.then58

if.then58:                                        ; preds = %if.end54
  %and60 = and i32 %20, -2147418112
  %lnot = icmp ne i32 %and60, -2147418112
  %conv62 = zext i1 %lnot to i8
  %incdec.ptr68 = getelementptr inbounds %struct.sv** %0, i64 -1
  %sv_any69 = getelementptr inbounds %struct.sv* %21, i64 0, i32 0
  %22 = load i8** %sv_any69, align 8, !tbaa !0
  %xiv_iv70 = getelementptr inbounds i8* %22, i64 24
  %23 = bitcast i8* %xiv_iv70 to i64*
  %24 = load i64* %23, align 8, !tbaa !3
  br i1 %lnot, label %if.else67, label %if.end101

if.else67:                                        ; preds = %if.then58
  %cmp71 = icmp sgt i64 %24, -1
  %sub = sub nsw i64 0, %24
  %.sub = select i1 %cmp71, i64 %24, i64 %sub
  %.conv62 = select i1 %cmp71, i8 0, i8 %conv62
  br label %if.end101

if.else77:                                        ; preds = %if.end54
  %incdec.ptr78 = getelementptr inbounds %struct.sv** %0, i64 -1
  store %struct.sv* %21, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %and80 = and i32 %20, 131072
  %tobool81 = icmp eq i32 %and80, 0
  br i1 %tobool81, label %cond.false84, label %cond.true82

cond.true82:                                      ; preds = %if.else77
  %sv_any83 = getelementptr inbounds %struct.sv* %21, i64 0, i32 0
  %25 = load i8** %sv_any83, align 8, !tbaa !0
  %xnv_nv = getelementptr inbounds i8* %25, i64 32
  %26 = bitcast i8* %xnv_nv to double*
  %27 = load double* %26, align 8, !tbaa !6
  br label %cond.end86

cond.false84:                                     ; preds = %if.else77
  %call85 = tail call double @Perl_sv_2nv(%struct.sv* %21) #7
  br label %cond.end86

cond.end86:                                       ; preds = %cond.false84, %cond.true82
  %cond87 = phi double [ %27, %cond.true82 ], [ %call85, %cond.false84 ]
  %cmp88 = fcmp olt double %cond87, 0.000000e+00
  %conv90 = zext i1 %cmp88 to i8
  br i1 %cmp88, label %if.then92, label %if.end94

if.then92:                                        ; preds = %cond.end86
  %sub93 = fsub double -0.000000e+00, %cond87
  br label %if.end94

if.end94:                                         ; preds = %if.then92, %cond.end86
  %dright.0 = phi double [ %sub93, %if.then92 ], [ %cond87, %cond.end86 ]
  %cmp95 = fcmp olt double %dright.0, 0x43F0000000000000
  br i1 %cmp95, label %if.then97, label %if.end101

if.then97:                                        ; preds = %if.end94
  %call98 = tail call i64 @Perl_cast_uv(double %dright.0) #7
  br label %if.end101

if.end101:                                        ; preds = %if.end94, %if.then58, %if.else67, %if.then97
  %right33.0 = phi i64 [ %call98, %if.then97 ], [ %.sub, %if.else67 ], [ %24, %if.then58 ], [ 0, %if.end94 ]
  %right_neg.0 = phi i8 [ %conv90, %if.then97 ], [ %.conv62, %if.else67 ], [ %conv62, %if.then58 ], [ %conv90, %if.end94 ]
  %use_double.0 = phi i8 [ 0, %if.then97 ], [ 0, %if.else67 ], [ 0, %if.then58 ], [ 1, %if.end94 ]
  %dright_valid.0 = phi i8 [ 1, %if.then97 ], [ 0, %if.else67 ], [ 0, %if.then58 ], [ 0, %if.end94 ]
  %dright.1 = phi double [ %dright.0, %if.then97 ], [ 0.000000e+00, %if.else67 ], [ 0.000000e+00, %if.then58 ], [ %dright.0, %if.end94 ]
  %sp.0 = phi %struct.sv** [ %incdec.ptr78, %if.then97 ], [ %incdec.ptr68, %if.else67 ], [ %incdec.ptr68, %if.then58 ], [ %incdec.ptr78, %if.end94 ]
  %28 = load %struct.sv** %sp.0, align 8, !tbaa !0
  %sv_flags102 = getelementptr inbounds %struct.sv* %28, i64 0, i32 2
  %29 = load i32* %sv_flags102, align 4, !tbaa !4
  %and103 = and i32 %29, 16777216
  %tobool104 = icmp eq i32 %and103, 0
  br i1 %tobool104, label %land.lhs.true105, label %if.end124

land.lhs.true105:                                 ; preds = %if.end101
  %30 = and i32 %29, 393216
  %or.cond323.not = icmp ne i32 %30, 0
  %and115 = and i32 %29, 65536
  %tobool116 = icmp eq i32 %and115, 0
  %or.cond339 = and i1 %or.cond323.not, %tobool116
  br i1 %or.cond339, label %cond.false120, label %if.end124

cond.false120:                                    ; preds = %land.lhs.true105
  %call121 = tail call i64 @Perl_sv_2iv(%struct.sv* %28) #7
  br label %if.end124

if.end124:                                        ; preds = %land.lhs.true105, %if.end101, %cond.false120
  %tobool125 = icmp ne i8 %use_double.0, 0
  %.pre341 = load %struct.sv** %sp.0, align 8, !tbaa !0
  %sv_flags161.phi.trans.insert = getelementptr inbounds %struct.sv* %.pre341, i64 0, i32 2
  %.pre342 = load i32* %sv_flags161.phi.trans.insert, align 4, !tbaa !4
  br i1 %tobool125, label %if.else159, label %land.lhs.true126

land.lhs.true126:                                 ; preds = %if.end124
  %and128 = and i32 %.pre342, 65536
  %tobool129 = icmp eq i32 %and128, 0
  br i1 %tobool129, label %if.else159, label %if.then134

if.then134:                                       ; preds = %land.lhs.true126
  %and136 = and i32 %.pre342, -2147418112
  %lnot139 = icmp ne i32 %and136, -2147418112
  %conv141 = zext i1 %lnot139 to i8
  %incdec.ptr148 = getelementptr inbounds %struct.sv** %sp.0, i64 -1
  %sv_any149 = getelementptr inbounds %struct.sv* %.pre341, i64 0, i32 0
  %31 = load i8** %sv_any149, align 8, !tbaa !0
  %xiv_iv150 = getelementptr inbounds i8* %31, i64 24
  %32 = bitcast i8* %xiv_iv150 to i64*
  %33 = load i64* %32, align 8, !tbaa !3
  br i1 %lnot139, label %if.else147, label %if.else216

if.else147:                                       ; preds = %if.then134
  %cmp151 = icmp sgt i64 %33, -1
  %sub155 = sub nsw i64 0, %33
  %.sub155 = select i1 %cmp151, i64 %33, i64 %sub155
  %.conv141 = select i1 %cmp151, i8 0, i8 %conv141
  br label %if.else216

if.else159:                                       ; preds = %if.end124, %land.lhs.true126
  %incdec.ptr160 = getelementptr inbounds %struct.sv** %sp.0, i64 -1
  store %struct.sv* %.pre341, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %and162 = and i32 %.pre342, 131072
  %tobool163 = icmp eq i32 %and162, 0
  br i1 %tobool163, label %cond.false167, label %cond.true164

cond.true164:                                     ; preds = %if.else159
  %sv_any165 = getelementptr inbounds %struct.sv* %.pre341, i64 0, i32 0
  %34 = load i8** %sv_any165, align 8, !tbaa !0
  %xnv_nv166 = getelementptr inbounds i8* %34, i64 32
  %35 = bitcast i8* %xnv_nv166 to double*
  %36 = load double* %35, align 8, !tbaa !6
  br label %cond.end169

cond.false167:                                    ; preds = %if.else159
  %call168 = tail call double @Perl_sv_2nv(%struct.sv* %.pre341) #7
  br label %cond.end169

cond.end169:                                      ; preds = %cond.false167, %cond.true164
  %cond170 = phi double [ %36, %cond.true164 ], [ %call168, %cond.false167 ]
  %cmp171 = fcmp olt double %cond170, 0.000000e+00
  %conv173 = zext i1 %cmp171 to i8
  br i1 %cmp171, label %if.then175, label %if.end177

if.then175:                                       ; preds = %cond.end169
  %sub176 = fsub double -0.000000e+00, %cond170
  br label %if.end177

if.end177:                                        ; preds = %if.then175, %cond.end169
  %dleft.0 = phi double [ %sub176, %if.then175 ], [ %cond170, %cond.end169 ]
  br i1 %tobool125, label %if.then197, label %if.then179

if.then179:                                       ; preds = %if.end177
  %cmp180 = fcmp olt double %dleft.0, 0x43F0000000000000
  br i1 %cmp180, label %if.end195, label %if.else184

if.else184:                                       ; preds = %if.then179
  %add = fadd double %dleft.0, 5.000000e-01
  %call185 = tail call double @floor(double %add) #9
  %tobool186 = icmp eq i8 %dright_valid.0, 0
  br i1 %tobool186, label %if.else190, label %if.then187

if.then187:                                       ; preds = %if.else184
  %add188 = fadd double %dright.1, 5.000000e-01
  %call189 = tail call double @floor(double %add188) #9
  br label %if.then197

if.else190:                                       ; preds = %if.else184
  %conv191 = uitofp i64 %right33.0 to double
  br label %if.then197

if.end195:                                        ; preds = %if.then179
  %call183 = tail call i64 @Perl_cast_uv(double %dleft.0) #7
  br label %if.else216

if.then197:                                       ; preds = %if.end177, %if.then187, %if.else190
  %dright.2.ph = phi double [ %dright.1, %if.end177 ], [ %call189, %if.then187 ], [ %conv191, %if.else190 ]
  %dleft.1.ph = phi double [ %dleft.0, %if.end177 ], [ %call185, %if.then187 ], [ %call185, %if.else190 ]
  %tobool198 = fcmp une double %dright.2.ph, 0.000000e+00
  br i1 %tobool198, label %if.end201, label %if.then199

if.then199:                                       ; preds = %if.then197
  %call200 = tail call %struct.op* (i8*, ...)* @Perl_die(i8* getelementptr inbounds ([21 x i8]* @.str30, i64 0, i64 0)) #7
  br label %return

if.end201:                                        ; preds = %if.then197
  %call202 = tail call double @fmod(double %dleft.1.ph, double %dright.2.ph) #7
  %cmp205 = icmp ne i8 %conv173, %right_neg.0
  %tobool208 = fcmp une double %call202, 0.000000e+00
  %or.cond324 = and i1 %cmp205, %tobool208
  br i1 %or.cond324, label %if.then209, label %if.end211

if.then209:                                       ; preds = %if.end201
  %sub210 = fsub double %dright.2.ph, %call202
  br label %if.end211

if.end211:                                        ; preds = %if.end201, %if.then209
  %dans.0 = phi double [ %sub210, %if.then209 ], [ %call202, %if.end201 ]
  %tobool212 = icmp eq i8 %right_neg.0, 0
  br i1 %tobool212, label %if.end215, label %if.then213

if.then213:                                       ; preds = %if.end211
  %sub214 = fsub double -0.000000e+00, %dans.0
  br label %if.end215

if.end215:                                        ; preds = %if.end211, %if.then213
  %dans.1 = phi double [ %sub214, %if.then213 ], [ %dans.0, %if.end211 ]
  tail call void @Perl_sv_setnv(%struct.sv* %cond, double %dans.1) #7
  br label %if.end242

if.else216:                                       ; preds = %if.else147, %if.then134, %if.end195
  %sp.1337 = phi %struct.sv** [ %incdec.ptr160, %if.end195 ], [ %incdec.ptr148, %if.then134 ], [ %incdec.ptr148, %if.else147 ]
  %left_neg.0336 = phi i8 [ %conv173, %if.end195 ], [ %conv141, %if.then134 ], [ %.conv141, %if.else147 ]
  %left32.0335 = phi i64 [ %call183, %if.end195 ], [ %33, %if.then134 ], [ %.sub155, %if.else147 ]
  %tobool217 = icmp eq i64 %right33.0, 0
  br i1 %tobool217, label %if.then218, label %if.end220

if.then218:                                       ; preds = %if.else216
  %call219 = tail call %struct.op* (i8*, ...)* @Perl_die(i8* getelementptr inbounds ([21 x i8]* @.str30, i64 0, i64 0)) #7
  br label %return

if.end220:                                        ; preds = %if.else216
  %rem = urem i64 %left32.0335, %right33.0
  %cmp223 = icmp eq i8 %left_neg.0336, %right_neg.0
  %tobool226 = icmp eq i64 %rem, 0
  %or.cond325 = or i1 %cmp223, %tobool226
  %sub228 = sub i64 %right33.0, %rem
  %ans.0 = select i1 %or.cond325, i64 %rem, i64 %sub228
  %tobool230 = icmp eq i8 %right_neg.0, 0
  br i1 %tobool230, label %if.else240, label %if.then231

if.then231:                                       ; preds = %if.end220
  %cmp232 = icmp ult i64 %ans.0, -9223372036854775806
  br i1 %cmp232, label %if.then234, label %if.else236

if.then234:                                       ; preds = %if.then231
  %add235 = sub i64 0, %ans.0
  tail call void @Perl_sv_setiv(%struct.sv* %cond, i64 %add235) #7
  br label %if.end242

if.else236:                                       ; preds = %if.then231
  %conv237 = uitofp i64 %ans.0 to double
  %sub238 = fsub double -0.000000e+00, %conv237
  tail call void @Perl_sv_setnv(%struct.sv* %cond, double %sub238) #7
  br label %if.end242

if.else240:                                       ; preds = %if.end220
  tail call void @Perl_sv_setuv(%struct.sv* %cond, i64 %ans.0) #7
  br label %if.end242

if.end242:                                        ; preds = %if.else240, %if.else236, %if.then234, %if.end215
  %sp.1330 = phi %struct.sv** [ %sp.1337, %if.else240 ], [ %sp.1337, %if.else236 ], [ %sp.1337, %if.then234 ], [ %incdec.ptr160, %if.end215 ]
  %sv_flags243 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 2
  %37 = load i32* %sv_flags243, align 4, !tbaa !4
  %and244 = and i32 %37, 16384
  %tobool245 = icmp eq i32 %and244, 0
  br i1 %tobool245, label %if.end248, label %if.then246

if.then246:                                       ; preds = %if.end242
  %call247 = tail call i32 @Perl_mg_set(%struct.sv* %cond) #7
  br label %if.end248

if.end248:                                        ; preds = %if.end242, %if.then246
  %incdec.ptr249 = getelementptr inbounds %struct.sv** %sp.1330, i64 1
  store %struct.sv* %cond, %struct.sv** %incdec.ptr249, align 8, !tbaa !0
  store %struct.sv** %incdec.ptr249, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %38 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next250 = getelementptr inbounds %struct.op* %38, i64 0, i32 0
  %39 = load %struct.op** %op_next250, align 8, !tbaa !0
  br label %return

return:                                           ; preds = %if.end248, %if.then218, %if.then199, %if.end29
  %retval.0 = phi %struct.op* [ %16, %if.end29 ], [ %39, %if.end248 ], [ %call200, %if.then199 ], [ %call219, %if.then218 ]
  ret %struct.op* %retval.0
}
