define %struct.op* @Perl_pp_i_subtract() #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags = getelementptr inbounds %struct.op* %1, i64 0, i32 6
  %2 = load i8* %op_flags, align 1, !tbaa !1
  %and = and i8 %2, 64
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.sv** %0, i64 -1
  br label %cond.end

cond.false:                                       ; preds = %entry
  %op_targ = getelementptr inbounds %struct.op* %1, i64 0, i32 3
  %3 = load i64* %op_targ, align 8, !tbaa !3
  %4 = load %struct.sv*** @PL_curpad, align 8, !tbaa !0
  %arrayidx1 = getelementptr inbounds %struct.sv** %4, i64 %3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi %struct.sv** [ %arrayidx, %cond.true ], [ %arrayidx1, %cond.false ]
  %cond = load %struct.sv** %cond.in, align 8
  %5 = load i64* @PL_amagic_generation, align 8, !tbaa !3
  %tobool2 = icmp eq i64 %5, 0
  br i1 %tobool2, label %cond.end.if.end31_crit_edge, label %if.then

cond.end.if.end31_crit_edge:                      ; preds = %cond.end
  %incdec.ptr33.pre = getelementptr inbounds %struct.sv** %0, i64 -1
  br label %if.end31

if.then:                                          ; preds = %cond.end
  %6 = load %struct.sv** %0, align 8, !tbaa !0
  %add.ptr = getelementptr inbounds %struct.sv** %0, i64 -1
  %7 = load %struct.sv** %add.ptr, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %7, i64 0, i32 2
  %8 = load i32* %sv_flags, align 4, !tbaa !4
  %and3 = and i32 %8, 268435456
  %tobool4 = icmp eq i32 %and3, 0
  br i1 %tobool4, label %lor.lhs.false, label %land.lhs.true

lor.lhs.false:                                    ; preds = %if.then
  %sv_flags5 = getelementptr inbounds %struct.sv* %6, i64 0, i32 2
  %9 = load i32* %sv_flags5, align 4, !tbaa !4
  %and6 = and i32 %9, 268435456
  %tobool7 = icmp eq i32 %and6, 0
  br i1 %tobool7, label %if.end31, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.then
  %tobool11 = icmp ne i8 %and, 0
  %cond12 = select i1 %tobool11, i32 4, i32 0
  %call = tail call %struct.sv* @Perl_amagic_call(%struct.sv* %7, %struct.sv* %6, i32 8, i32 %cond12) #7
  %tobool13 = icmp eq %struct.sv* %call, null
  br i1 %tobool13, label %if.end31, label %if.then14

if.then14:                                        ; preds = %land.lhs.true
  %10 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds %struct.sv** %10, i64 -1
  %11 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags15 = getelementptr inbounds %struct.op* %11, i64 0, i32 6
  %12 = load i8* %op_flags15, align 1, !tbaa !1
  %and17 = and i8 %12, 64
  %tobool18 = icmp eq i8 %and17, 0
  %sv_flags20 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 2
  br i1 %tobool18, label %lor.lhs.false19, label %if.then23

lor.lhs.false19:                                  ; preds = %if.then14
  %13 = load i32* %sv_flags20, align 4, !tbaa !4
  %and21 = and i32 %13, 1024
  %tobool22 = icmp eq i32 %and21, 0
  br i1 %tobool22, label %if.end29, label %if.then23

if.then23:                                        ; preds = %if.then14, %lor.lhs.false19
  tail call void @Perl_sv_setsv_flags(%struct.sv* %cond, %struct.sv* %call, i32 2) #7
  %14 = load i32* %sv_flags20, align 4, !tbaa !4
  %and25 = and i32 %14, 16384
  %tobool26 = icmp eq i32 %and25, 0
  br i1 %tobool26, label %if.end29, label %if.then27

if.then27:                                        ; preds = %if.then23
  %call28 = tail call i32 @Perl_mg_set(%struct.sv* %cond) #7
  br label %if.end29

if.end29:                                         ; preds = %lor.lhs.false19, %if.then27, %if.then23
  %storemerge = phi %struct.sv* [ %cond, %if.then23 ], [ %cond, %if.then27 ], [ %call, %lor.lhs.false19 ]
  store %struct.sv* %storemerge, %struct.sv** %incdec.ptr, align 8, !tbaa !0
  br label %return

if.end31:                                         ; preds = %land.lhs.true, %cond.end.if.end31_crit_edge, %lor.lhs.false
  %incdec.ptr33.pre-phi = phi %struct.sv** [ %incdec.ptr33.pre, %cond.end.if.end31_crit_edge ], [ %add.ptr, %lor.lhs.false ], [ %add.ptr, %land.lhs.true ]
  %15 = load %struct.sv** %0, align 8, !tbaa !0
  store %struct.sv* %15, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %sv_flags34 = getelementptr inbounds %struct.sv* %15, i64 0, i32 2
  %16 = load i32* %sv_flags34, align 4, !tbaa !4
  %and35 = and i32 %16, 65536
  %tobool36 = icmp eq i32 %and35, 0
  br i1 %tobool36, label %cond.false38, label %cond.true37

cond.true37:                                      ; preds = %if.end31
  %sv_any = getelementptr inbounds %struct.sv* %15, i64 0, i32 0
  %17 = load i8** %sv_any, align 8, !tbaa !0
  %xiv_iv = getelementptr inbounds i8* %17, i64 24
  %18 = bitcast i8* %xiv_iv to i64*
  %19 = load i64* %18, align 8, !tbaa !3
  br label %cond.end40

cond.false38:                                     ; preds = %if.end31
  %call39 = tail call i64 @Perl_sv_2iv(%struct.sv* %15) #7
  br label %cond.end40

cond.end40:                                       ; preds = %cond.false38, %cond.true37
  %cond41 = phi i64 [ %19, %cond.true37 ], [ %call39, %cond.false38 ]
  %20 = load %struct.sv** %incdec.ptr33.pre-phi, align 8, !tbaa !0
  %sv_flags43 = getelementptr inbounds %struct.sv* %20, i64 0, i32 2
  %21 = load i32* %sv_flags43, align 4, !tbaa !4
  %22 = and i32 %21, 118431744
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %lor.lhs.false50, label %cond.true55

lor.lhs.false50:                                  ; preds = %cond.end40
  %24 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags51 = getelementptr inbounds %struct.op* %24, i64 0, i32 6
  %25 = load i8* %op_flags51, align 1, !tbaa !1
  %and53 = and i8 %25, 64
  %tobool54 = icmp eq i8 %and53, 0
  br i1 %tobool54, label %cond.true55, label %cond.end67

cond.true55:                                      ; preds = %lor.lhs.false50, %cond.end40
  %and57 = and i32 %21, 65536
  %tobool58 = icmp eq i32 %and57, 0
  br i1 %tobool58, label %cond.false62, label %cond.true59

cond.true59:                                      ; preds = %cond.true55
  %sv_any60 = getelementptr inbounds %struct.sv* %20, i64 0, i32 0
  %26 = load i8** %sv_any60, align 8, !tbaa !0
  %xiv_iv61 = getelementptr inbounds i8* %26, i64 24
  %27 = bitcast i8* %xiv_iv61 to i64*
  %28 = load i64* %27, align 8, !tbaa !3
  br label %cond.end67

cond.false62:                                     ; preds = %cond.true55
  %call63 = tail call i64 @Perl_sv_2iv(%struct.sv* %20) #7
  br label %cond.end67

cond.end67:                                       ; preds = %lor.lhs.false50, %cond.true59, %cond.false62
  %cond68 = phi i64 [ %28, %cond.true59 ], [ %call63, %cond.false62 ], [ 0, %lor.lhs.false50 ]
  %sub = sub nsw i64 %cond68, %cond41
  tail call void @Perl_sv_setiv(%struct.sv* %cond, i64 %sub) #7
  %sv_flags69 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 2
  %29 = load i32* %sv_flags69, align 4, !tbaa !4
  %and70 = and i32 %29, 16384
  %tobool71 = icmp eq i32 %and70, 0
  br i1 %tobool71, label %if.end74, label %if.then72

if.then72:                                        ; preds = %cond.end67
  %call73 = tail call i32 @Perl_mg_set(%struct.sv* %cond) #7
  br label %if.end74

if.end74:                                         ; preds = %cond.end67, %if.then72
  store %struct.sv* %cond, %struct.sv** %incdec.ptr33.pre-phi, align 8, !tbaa !0
  br label %return

return:                                           ; preds = %if.end74, %if.end29
  %storemerge100 = phi %struct.sv** [ %incdec.ptr, %if.end29 ], [ %incdec.ptr33.pre-phi, %if.end74 ]
  store %struct.sv** %storemerge100, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %.pn = load %struct.op** @PL_op, align 8
  %retval.0.in = getelementptr inbounds %struct.op* %.pn, i64 0, i32 0
  %retval.0 = load %struct.op** %retval.0.in, align 8
  ret %struct.op* %retval.0
}
