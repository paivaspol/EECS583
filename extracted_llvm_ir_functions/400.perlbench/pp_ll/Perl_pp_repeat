define %struct.op* @Perl_pp_repeat() #0 {
entry:
  %len = alloca i64, align 8
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags = getelementptr inbounds %struct.op* %1, i64 0, i32 6
  %2 = load i8* %op_flags, align 1, !tbaa !1
  %and = and i8 %2, 64
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.sv** %0, i64 -1
  br label %cond.end

cond.false:                                       ; preds = %entry
  %op_targ = getelementptr inbounds %struct.op* %1, i64 0, i32 3
  %3 = load i64* %op_targ, align 8, !tbaa !3
  %4 = load %struct.sv*** @PL_curpad, align 8, !tbaa !0
  %arrayidx1 = getelementptr inbounds %struct.sv** %4, i64 %3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi %struct.sv** [ %arrayidx, %cond.true ], [ %arrayidx1, %cond.false ]
  %cond = load %struct.sv** %cond.in, align 8
  %5 = load i64* @PL_amagic_generation, align 8, !tbaa !3
  %tobool2 = icmp eq i64 %5, 0
  br i1 %tobool2, label %cond.end.if.end31_crit_edge, label %if.then

cond.end.if.end31_crit_edge:                      ; preds = %cond.end
  %incdec.ptr32.pre = getelementptr inbounds %struct.sv** %0, i64 -1
  br label %if.end31

if.then:                                          ; preds = %cond.end
  %6 = load %struct.sv** %0, align 8, !tbaa !0
  %add.ptr = getelementptr inbounds %struct.sv** %0, i64 -1
  %7 = load %struct.sv** %add.ptr, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %7, i64 0, i32 2
  %8 = load i32* %sv_flags, align 4, !tbaa !4
  %and3 = and i32 %8, 268435456
  %tobool4 = icmp eq i32 %and3, 0
  br i1 %tobool4, label %lor.lhs.false, label %land.lhs.true

lor.lhs.false:                                    ; preds = %if.then
  %sv_flags5 = getelementptr inbounds %struct.sv* %6, i64 0, i32 2
  %9 = load i32* %sv_flags5, align 4, !tbaa !4
  %and6 = and i32 %9, 268435456
  %tobool7 = icmp eq i32 %and6, 0
  br i1 %tobool7, label %if.end31, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.then
  %tobool11 = icmp ne i8 %and, 0
  %cond12 = select i1 %tobool11, i32 4, i32 0
  %call = call %struct.sv* @Perl_amagic_call(%struct.sv* %7, %struct.sv* %6, i32 52, i32 %cond12) #7
  %tobool13 = icmp eq %struct.sv* %call, null
  br i1 %tobool13, label %if.end31, label %if.then14

if.then14:                                        ; preds = %land.lhs.true
  %10 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds %struct.sv** %10, i64 -1
  %11 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags15 = getelementptr inbounds %struct.op* %11, i64 0, i32 6
  %12 = load i8* %op_flags15, align 1, !tbaa !1
  %and17 = and i8 %12, 64
  %tobool18 = icmp eq i8 %and17, 0
  %sv_flags20 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 2
  br i1 %tobool18, label %lor.lhs.false19, label %if.then23

lor.lhs.false19:                                  ; preds = %if.then14
  %13 = load i32* %sv_flags20, align 4, !tbaa !4
  %and21 = and i32 %13, 1024
  %tobool22 = icmp eq i32 %and21, 0
  br i1 %tobool22, label %if.end29, label %if.then23

if.then23:                                        ; preds = %if.then14, %lor.lhs.false19
  call void @Perl_sv_setsv_flags(%struct.sv* %cond, %struct.sv* %call, i32 2) #7
  %14 = load i32* %sv_flags20, align 4, !tbaa !4
  %and25 = and i32 %14, 16384
  %tobool26 = icmp eq i32 %and25, 0
  br i1 %tobool26, label %if.end29, label %if.then27

if.then27:                                        ; preds = %if.then23
  %call28 = call i32 @Perl_mg_set(%struct.sv* %cond) #7
  br label %if.end29

if.end29:                                         ; preds = %lor.lhs.false19, %if.then27, %if.then23
  %storemerge384 = phi %struct.sv* [ %cond, %if.then23 ], [ %cond, %if.then27 ], [ %call, %lor.lhs.false19 ]
  store %struct.sv* %storemerge384, %struct.sv** %incdec.ptr, align 8, !tbaa !0
  br label %return

if.end31:                                         ; preds = %land.lhs.true, %cond.end.if.end31_crit_edge, %lor.lhs.false
  %incdec.ptr32.pre-phi = phi %struct.sv** [ %incdec.ptr32.pre, %cond.end.if.end31_crit_edge ], [ %add.ptr, %lor.lhs.false ], [ %add.ptr, %land.lhs.true ]
  %15 = load %struct.sv** %0, align 8, !tbaa !0
  %sv_flags33 = getelementptr inbounds %struct.sv* %15, i64 0, i32 2
  %16 = load i32* %sv_flags33, align 4, !tbaa !4
  %and34 = and i32 %16, 8192
  %tobool35 = icmp eq i32 %and34, 0
  br i1 %tobool35, label %if.end38, label %if.then36

if.then36:                                        ; preds = %if.end31
  %call37 = call i32 @Perl_mg_get(%struct.sv* %15) #7
  %.pre = load i32* %sv_flags33, align 4, !tbaa !4
  br label %if.end38

if.end38:                                         ; preds = %if.end31, %if.then36
  %17 = phi i32 [ %16, %if.end31 ], [ %.pre, %if.then36 ]
  %and40 = and i32 %17, 16777216
  %tobool41 = icmp eq i32 %and40, 0
  br i1 %tobool41, label %if.else76, label %if.then42

if.then42:                                        ; preds = %if.end38
  %and44 = and i32 %17, -2147418112
  %cmp = icmp eq i32 %and44, -2147418112
  %and48 = and i32 %17, 65536
  %tobool49 = icmp ne i32 %and48, 0
  br i1 %cmp, label %if.then46, label %if.else60

if.then46:                                        ; preds = %if.then42
  br i1 %tobool49, label %cond.true50, label %cond.false51

cond.true50:                                      ; preds = %if.then46
  %sv_any = getelementptr inbounds %struct.sv* %15, i64 0, i32 0
  %18 = load i8** %sv_any, align 8, !tbaa !0
  %xuv_uv = getelementptr inbounds i8* %18, i64 24
  %19 = bitcast i8* %xuv_uv to i64*
  %20 = load i64* %19, align 8, !tbaa !3
  br label %cond.end53

cond.false51:                                     ; preds = %if.then46
  %call52 = call i64 @Perl_sv_2uv(%struct.sv* %15) #7
  br label %cond.end53

cond.end53:                                       ; preds = %cond.false51, %cond.true50
  %cond54 = phi i64 [ %20, %cond.true50 ], [ %call52, %cond.false51 ]
  %cmp55 = icmp slt i64 %cond54, 0
  %.cond54 = select i1 %cmp55, i64 9223372036854775807, i64 %cond54
  br label %if.end108

if.else60:                                        ; preds = %if.then42
  br i1 %tobool49, label %cond.true64, label %cond.false66

cond.true64:                                      ; preds = %if.else60
  %sv_any65 = getelementptr inbounds %struct.sv* %15, i64 0, i32 0
  %21 = load i8** %sv_any65, align 8, !tbaa !0
  %xiv_iv = getelementptr inbounds i8* %21, i64 24
  %22 = bitcast i8* %xiv_iv to i64*
  %23 = load i64* %22, align 8, !tbaa !3
  br label %cond.end68

cond.false66:                                     ; preds = %if.else60
  %call67 = call i64 @Perl_sv_2iv(%struct.sv* %15) #7
  br label %cond.end68

cond.end68:                                       ; preds = %cond.false66, %cond.true64
  %cond69 = phi i64 [ %23, %cond.true64 ], [ %call67, %cond.false66 ]
  %cmp70 = icmp slt i64 %cond69, 0
  %.cond69 = select i1 %cmp70, i64 0, i64 %cond69
  br label %if.end108

if.else76:                                        ; preds = %if.end38
  %and78 = and i32 %17, 33554432
  %tobool79 = icmp eq i32 %and78, 0
  br i1 %tobool79, label %if.else96, label %if.then80

if.then80:                                        ; preds = %if.else76
  %and82 = and i32 %17, 131072
  %tobool83 = icmp eq i32 %and82, 0
  br i1 %tobool83, label %cond.false86, label %cond.true84

cond.true84:                                      ; preds = %if.then80
  %sv_any85 = getelementptr inbounds %struct.sv* %15, i64 0, i32 0
  %24 = load i8** %sv_any85, align 8, !tbaa !0
  %xnv_nv = getelementptr inbounds i8* %24, i64 32
  %25 = bitcast i8* %xnv_nv to double*
  %26 = load double* %25, align 8, !tbaa !6
  br label %cond.end88

cond.false86:                                     ; preds = %if.then80
  %call87 = call double @Perl_sv_2nv(%struct.sv* %15) #7
  br label %cond.end88

cond.end88:                                       ; preds = %cond.false86, %cond.true84
  %cond89 = phi double [ %26, %cond.true84 ], [ %call87, %cond.false86 ]
  %cmp90 = fcmp olt double %cond89, 0.000000e+00
  br i1 %cmp90, label %if.end108, label %if.else93

if.else93:                                        ; preds = %cond.end88
  %conv94 = fptosi double %cond89 to i64
  br label %if.end108

if.else96:                                        ; preds = %if.else76
  store %struct.sv* %15, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %and98 = and i32 %17, 65536
  %tobool99 = icmp eq i32 %and98, 0
  br i1 %tobool99, label %cond.false103, label %cond.true100

cond.true100:                                     ; preds = %if.else96
  %sv_any101 = getelementptr inbounds %struct.sv* %15, i64 0, i32 0
  %27 = load i8** %sv_any101, align 8, !tbaa !0
  %xiv_iv102 = getelementptr inbounds i8* %27, i64 24
  %28 = bitcast i8* %xiv_iv102 to i64*
  %29 = load i64* %28, align 8, !tbaa !3
  br label %if.end108

cond.false103:                                    ; preds = %if.else96
  %call104 = call i64 @Perl_sv_2iv(%struct.sv* %15) #7
  br label %if.end108

if.end108:                                        ; preds = %cond.end88, %cond.true100, %cond.false103, %cond.end68, %cond.end53, %if.else93
  %count.0 = phi i64 [ %conv94, %if.else93 ], [ %.cond54, %cond.end53 ], [ %.cond69, %cond.end68 ], [ %29, %cond.true100 ], [ %call104, %cond.false103 ], [ 0, %cond.end88 ]
  %30 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags109 = getelementptr inbounds %struct.op* %30, i64 0, i32 6
  %31 = load i8* %op_flags109, align 1, !tbaa !1
  %conv110 = zext i8 %31 to i32
  %and111 = and i32 %conv110, 3
  %tobool112 = icmp eq i32 %and111, 0
  br i1 %tobool112, label %cond.false120, label %cond.true113

cond.true113:                                     ; preds = %if.end108
  %cmp117 = icmp eq i32 %and111, 3
  %cond119 = zext i1 %cmp117 to i32
  br label %cond.end122

cond.false120:                                    ; preds = %if.end108
  %call121 = call i32 @Perl_dowantarray() #7
  br label %cond.end122

cond.end122:                                      ; preds = %cond.false120, %cond.true113
  %cond123 = phi i32 [ %cond119, %cond.true113 ], [ %call121, %cond.false120 ]
  %cmp124 = icmp eq i32 %cond123, 1
  br i1 %cmp124, label %land.lhs.true126, label %if.else195

land.lhs.true126:                                 ; preds = %cond.end122
  %32 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_private = getelementptr inbounds %struct.op* %32, i64 0, i32 7
  %33 = load i8* %op_private, align 1, !tbaa !1
  %and128 = and i8 %33, 64
  %tobool129 = icmp eq i8 %and128, 0
  br i1 %tobool129, label %if.else195, label %if.then130

if.then130:                                       ; preds = %land.lhs.true126
  %34 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %35 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr131 = getelementptr inbounds i32* %35, i64 -1
  store i32* %incdec.ptr131, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %36 = load i32* %35, align 4, !tbaa !4
  %idx.ext = sext i32 %36 to i64
  %add.ptr132 = getelementptr inbounds %struct.sv** %34, i64 %idx.ext
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %incdec.ptr32.pre-phi to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %add.ptr132 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div378 = lshr exact i64 %sub.ptr.sub, 3
  %conv133 = trunc i64 %sub.ptr.div378 to i32
  %sext = shl i64 %sub.ptr.sub, 29
  %conv134 = ashr exact i64 %sext, 32
  %mul = mul nsw i64 %conv134, %count.0
  %conv135 = trunc i64 %mul to i32
  %cmp136 = icmp sgt i32 %conv133, 0
  %cmp139 = icmp sgt i32 %conv135, 0
  %or.cond = and i1 %cmp136, %cmp139
  br i1 %or.cond, label %land.lhs.true141, label %if.end149

land.lhs.true141:                                 ; preds = %if.then130
  %cmp142 = icmp slt i32 %conv135, %conv133
  br i1 %cmp142, label %if.then148, label %lor.lhs.false144

lor.lhs.false144:                                 ; preds = %land.lhs.true141
  %sext383 = shl i64 %mul, 32
  %conv145 = ashr exact i64 %sext383, 32
  %cmp146 = icmp slt i64 %conv145, %count.0
  br i1 %cmp146, label %if.then148, label %if.end149

if.then148:                                       ; preds = %lor.lhs.false144, %land.lhs.true141
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([33 x i8]* @Perl_pp_repeat.oom_list_extend, i64 0, i64 0)) #7
  br label %if.end149

if.end149:                                        ; preds = %if.then148, %lor.lhs.false144, %if.then130
  %37 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast150 = ptrtoint %struct.sv** %37 to i64
  %sub.ptr.sub152 = sub i64 %sub.ptr.lhs.cast150, %sub.ptr.rhs.cast
  %sub.ptr.div153 = ashr exact i64 %sub.ptr.sub152, 3
  %sext379 = shl i64 %mul, 32
  %conv154 = ashr exact i64 %sext379, 32
  %cmp155 = icmp slt i64 %sub.ptr.div153, %conv154
  br i1 %cmp155, label %if.then157, label %if.end166

if.then157:                                       ; preds = %if.end149
  %38 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %sub.ptr.rhs.cast159 = ptrtoint %struct.sv** %38 to i64
  %sub.ptr.sub160 = sub i64 %sub.ptr.rhs.cast, %sub.ptr.rhs.cast159
  %call163 = call %struct.sv** @Perl_stack_grow(%struct.sv** %incdec.ptr32.pre-phi, %struct.sv** %add.ptr132, i32 %conv135) #7
  %39 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %40 = shl i64 %sub.ptr.sub160, 29
  %idx.ext164 = ashr i64 %40, 32
  %add.ptr165 = getelementptr inbounds %struct.sv** %39, i64 %idx.ext164
  br label %if.end166

if.end166:                                        ; preds = %if.then157, %if.end149
  %mark.0 = phi %struct.sv** [ %add.ptr165, %if.then157 ], [ %add.ptr132, %if.end149 ]
  %sp.0 = phi %struct.sv** [ %call163, %if.then157 ], [ %incdec.ptr32.pre-phi, %if.end149 ]
  %cmp167 = icmp sgt i64 %count.0, 1
  br i1 %cmp167, label %while.cond.preheader, label %if.else187

while.cond.preheader:                             ; preds = %if.end166
  %cmp170386 = icmp ugt %struct.sv** %sp.0, %mark.0
  br i1 %cmp170386, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond.preheader, %if.end176
  %sp.1387 = phi %struct.sv** [ %incdec.ptr177, %if.end176 ], [ %sp.0, %while.cond.preheader ]
  %41 = load %struct.sv** %sp.1387, align 8, !tbaa !0
  %tobool172 = icmp eq %struct.sv* %41, null
  br i1 %tobool172, label %if.end176, label %if.then173

if.then173:                                       ; preds = %while.body
  %sv_flags174 = getelementptr inbounds %struct.sv* %41, i64 0, i32 2
  %42 = load i32* %sv_flags174, align 4, !tbaa !4
  %and175 = and i32 %42, -2049
  store i32 %and175, i32* %sv_flags174, align 4, !tbaa !4
  br label %if.end176

if.end176:                                        ; preds = %while.body, %if.then173
  %incdec.ptr177 = getelementptr inbounds %struct.sv** %sp.1387, i64 -1
  %cmp170 = icmp ugt %struct.sv** %incdec.ptr177, %mark.0
  br i1 %cmp170, label %while.body, label %while.end

while.end:                                        ; preds = %if.end176, %while.cond.preheader
  %sp.1.lcssa = phi %struct.sv** [ %sp.0, %while.cond.preheader ], [ %incdec.ptr177, %if.end176 ]
  %incdec.ptr178 = getelementptr inbounds %struct.sv** %mark.0, i64 1
  %incdec.ptr178.sum = add i64 %conv134, 1
  %add.ptr180 = getelementptr inbounds %struct.sv** %mark.0, i64 %incdec.ptr178.sum
  %43 = bitcast %struct.sv** %add.ptr180 to i8*
  %44 = bitcast %struct.sv** %incdec.ptr178 to i8*
  %conv183 = trunc i64 %sub.ptr.sub to i32
  %sub = add nsw i64 %count.0, 4294967295
  %conv184 = trunc i64 %sub to i32
  call void @Perl_repeatcpy(i8* %43, i8* %44, i32 %conv183, i32 %conv184) #7
  %add.ptr186 = getelementptr inbounds %struct.sv** %sp.1.lcssa, i64 %conv154
  br label %return

if.else187:                                       ; preds = %if.end166
  %cmp188 = icmp slt i64 %count.0, 1
  br i1 %cmp188, label %if.then190, label %return

if.then190:                                       ; preds = %if.else187
  %idx.neg = sub i64 0, %conv134
  %add.ptr192 = getelementptr inbounds %struct.sv** %sp.0, i64 %idx.neg
  br label %return

if.else195:                                       ; preds = %land.lhs.true126, %cond.end122
  %incdec.ptr196 = getelementptr inbounds %struct.sv** %0, i64 -2
  %45 = load %struct.sv** %incdec.ptr32.pre-phi, align 8, !tbaa !0
  %cmp197 = icmp eq %struct.sv* %cond, %45
  br i1 %cmp197, label %if.end200, label %if.then199

if.then199:                                       ; preds = %if.else195
  call void @Perl_sv_setsv_flags(%struct.sv* %cond, %struct.sv* %45, i32 2) #7
  br label %if.end200

if.end200:                                        ; preds = %if.else195, %if.then199
  %sv_flags201 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 2
  %46 = load i32* %sv_flags201, align 4, !tbaa !4
  %and202 = and i32 %46, 10223616
  %cmp203 = icmp eq i32 %and202, 262144
  br i1 %cmp203, label %cond.true205, label %cond.false208

cond.true205:                                     ; preds = %if.end200
  %sv_any206 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 0
  %47 = load i8** %sv_any206, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %47, i64 8
  %48 = bitcast i8* %xpv_cur to i64*
  %49 = load i64* %48, align 8, !tbaa !3
  store i64 %49, i64* %len, align 8, !tbaa !3
  br label %cond.end210

cond.false208:                                    ; preds = %if.end200
  %call209 = call i8* @Perl_sv_pvn_force_flags(%struct.sv* %cond, i64* %len, i32 2) #7
  %.pre388 = load i32* %sv_flags201, align 4, !tbaa !4
  br label %cond.end210

cond.end210:                                      ; preds = %cond.false208, %cond.true205
  %50 = phi i32 [ %.pre388, %cond.false208 ], [ %46, %cond.true205 ]
  %and213 = and i32 %50, 536870912
  %tobool214 = icmp eq i32 %and213, 0
  br i1 %tobool214, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %cond.end210
  %51 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %op_private215 = getelementptr inbounds %struct.cop* %51, i64 0, i32 7
  %52 = load i8* %op_private215, align 1, !tbaa !1
  %and217 = and i8 %52, 8
  %lnot = icmp eq i8 %and217, 0
  %phitmp = select i1 %lnot, i32 1760624639, i32 1223753727
  br label %land.end

land.end:                                         ; preds = %cond.end210, %land.rhs
  %53 = phi i32 [ 1223753727, %cond.end210 ], [ %phitmp, %land.rhs ]
  %cmp220 = icmp eq i64 %count.0, 1
  br i1 %cmp220, label %if.end263, label %if.then222

if.then222:                                       ; preds = %land.end
  %cmp223 = icmp slt i64 %count.0, 1
  br i1 %cmp223, label %if.then225, label %if.else228

if.then225:                                       ; preds = %if.then222
  %sv_any226 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 0
  %54 = load i8** %sv_any226, align 8, !tbaa !0
  %xpv_cur227 = getelementptr inbounds i8* %54, i64 8
  %55 = bitcast i8* %xpv_cur227 to i64*
  store i64 0, i64* %55, align 8, !tbaa !3
  br label %if.end257

if.else228:                                       ; preds = %if.then222
  %56 = load i64* %len, align 8, !tbaa !3
  %mul230 = mul i64 %56, %count.0
  %div = udiv i64 -1, %count.0
  %cmp231 = icmp ugt i64 %56, %div
  br i1 %cmp231, label %if.then233, label %if.end234

if.then233:                                       ; preds = %if.else228
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([35 x i8]* @Perl_pp_repeat.oom_string_extend, i64 0, i64 0)) #7
  br label %if.end234

if.end234:                                        ; preds = %if.else228, %if.then233
  %sv_any235 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 0
  %57 = load i8** %sv_any235, align 8, !tbaa !0
  %xpv_len = getelementptr inbounds i8* %57, i64 16
  %58 = bitcast i8* %xpv_len to i64*
  %59 = load i64* %58, align 8, !tbaa !3
  %add = add i64 %mul230, 1
  %cmp236 = icmp ult i64 %59, %add
  br i1 %cmp236, label %cond.true238, label %cond.end244

cond.true238:                                     ; preds = %if.end234
  %call240 = call i8* @Perl_sv_grow(%struct.sv* %cond, i64 %add) #7
  %.pre389 = load i8** %sv_any235, align 8, !tbaa !0
  br label %cond.end244

cond.end244:                                      ; preds = %if.end234, %cond.true238
  %60 = phi i8* [ %.pre389, %cond.true238 ], [ %57, %if.end234 ]
  %xpv_pv247 = bitcast i8* %60 to i8**
  %61 = load i8** %xpv_pv247, align 8, !tbaa !0
  %62 = load i64* %len, align 8, !tbaa !3
  %add.ptr248 = getelementptr inbounds i8* %61, i64 %62
  %conv251 = trunc i64 %62 to i32
  %sub252 = add nsw i64 %count.0, 4294967295
  %conv253 = trunc i64 %sub252 to i32
  call void @Perl_repeatcpy(i8* %add.ptr248, i8* %61, i32 %conv251, i32 %conv253) #7
  %63 = load i8** %sv_any235, align 8, !tbaa !0
  %xpv_cur255 = getelementptr inbounds i8* %63, i64 8
  %64 = bitcast i8* %xpv_cur255 to i64*
  %65 = load i64* %64, align 8, !tbaa !3
  %mul256 = mul i64 %65, %count.0
  store i64 %mul256, i64* %64, align 8, !tbaa !3
  br label %if.end257

if.end257:                                        ; preds = %cond.end244, %if.then225
  %66 = phi i64 [ %mul256, %cond.end244 ], [ 0, %if.then225 ]
  %67 = phi i8* [ %63, %cond.end244 ], [ %54, %if.then225 ]
  %xpv_pv259 = bitcast i8* %67 to i8**
  %68 = load i8** %xpv_pv259, align 8, !tbaa !0
  %add.ptr262 = getelementptr inbounds i8* %68, i64 %66
  store i8 0, i8* %add.ptr262, align 1, !tbaa !1
  br label %if.end263

if.end263:                                        ; preds = %land.end, %if.end257
  %69 = load i32* %sv_flags201, align 4, !tbaa !4
  %storemerge.in = and i32 %69, %53
  %storemerge = or i32 %storemerge.in, 67371008
  store i32 %storemerge, i32* %sv_flags201, align 4, !tbaa !4
  %70 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_private275 = getelementptr inbounds %struct.op* %70, i64 0, i32 7
  %71 = load i8* %op_private275, align 1, !tbaa !1
  %and277 = and i8 %71, 64
  %tobool278 = icmp eq i8 %and277, 0
  br i1 %tobool278, label %if.end284, label %if.then279

if.then279:                                       ; preds = %if.end263
  %72 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %73 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr281 = getelementptr inbounds i32* %73, i64 -1
  store i32* %incdec.ptr281, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %74 = load i32* %73, align 4, !tbaa !4
  %idx.ext282 = sext i32 %74 to i64
  %add.ptr283 = getelementptr inbounds %struct.sv** %72, i64 %idx.ext282
  br label %if.end284

if.end284:                                        ; preds = %if.end263, %if.then279
  %sp.2 = phi %struct.sv** [ %add.ptr283, %if.then279 ], [ %incdec.ptr196, %if.end263 ]
  %and286 = and i32 %69, 16384
  %tobool287 = icmp eq i32 %and286, 0
  br i1 %tobool287, label %if.end290, label %if.then288

if.then288:                                       ; preds = %if.end284
  %call289 = call i32 @Perl_mg_set(%struct.sv* %cond) #7
  br label %if.end290

if.end290:                                        ; preds = %if.end284, %if.then288
  %incdec.ptr291 = getelementptr inbounds %struct.sv** %sp.2, i64 1
  store %struct.sv* %cond, %struct.sv** %incdec.ptr291, align 8, !tbaa !0
  br label %return

return:                                           ; preds = %if.else187, %if.end290, %if.then190, %while.end, %if.end29
  %storemerge385 = phi %struct.sv** [ %incdec.ptr, %if.end29 ], [ %add.ptr186, %while.end ], [ %add.ptr192, %if.then190 ], [ %incdec.ptr291, %if.end290 ], [ %sp.0, %if.else187 ]
  store %struct.sv** %storemerge385, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %.pn = load %struct.op** @PL_op, align 8
  %retval.0.in = getelementptr inbounds %struct.op* %.pn, i64 0, i32 0
  %retval.0 = load %struct.op** %retval.0.in, align 8
  ret %struct.op* %retval.0
}
