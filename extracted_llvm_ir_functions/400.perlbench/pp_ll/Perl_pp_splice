define %struct.op* @Perl_pp_splice() #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %2 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i32* %2, i64 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %3 = load i32* %2, align 4, !tbaa !4
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %idx.ext
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.sum = add i64 %idx.ext, 1
  %incdec.ptr1 = getelementptr inbounds %struct.sv** %1, i64 %add.ptr.sum
  %4 = load %struct.sv** %incdec.ptr1, align 8, !tbaa !0
  %5 = bitcast %struct.sv* %4 to %struct.av*
  %sv_flags = getelementptr inbounds %struct.sv* %4, i64 0, i32 2
  %6 = load i32* %sv_flags, align 4, !tbaa !4
  %and = and i32 %6, 32768
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end48, label %cond.end

cond.end:                                         ; preds = %entry
  %call = tail call %struct.magic* @Perl_mg_find(%struct.sv* %4, i32 80) #7
  %tobool2 = icmp eq %struct.magic* %call, null
  br i1 %tobool2, label %if.end48, label %if.then

if.then:                                          ; preds = %cond.end
  %mg_obj = getelementptr inbounds %struct.magic* %call, i64 0, i32 5
  %7 = load %struct.sv** %mg_obj, align 8, !tbaa !0
  %tobool3 = icmp eq %struct.sv* %7, null
  br i1 %tobool3, label %cond.false6, label %cond.end9

cond.false6:                                      ; preds = %if.then
  %call7 = tail call %struct.sv* @Perl_newRV(%struct.sv* %4) #7
  %call8 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call7) #7
  br label %cond.end9

cond.end9:                                        ; preds = %if.then, %cond.false6
  %cond10 = phi %struct.sv* [ %call8, %cond.false6 ], [ %7, %if.then ]
  store %struct.sv* %cond10, %struct.sv** %incdec.ptr1, align 8, !tbaa !0
  %8 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr12 = getelementptr inbounds i32* %8, i64 1
  store i32* %incdec.ptr12, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %9 = load i32** @PL_markstack_max, align 8, !tbaa !0
  %cmp = icmp eq i32* %incdec.ptr12, %9
  br i1 %cmp, label %if.then14, label %if.end

if.then14:                                        ; preds = %cond.end9
  tail call void @Perl_markstack_grow() #7
  %.pre809 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then14, %cond.end9
  %10 = phi i32* [ %.pre809, %if.then14 ], [ %incdec.ptr12, %cond.end9 ]
  %11 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %sub.ptr.rhs.cast16 = ptrtoint %struct.sv** %11 to i64
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast16
  %sub.ptr.div18771 = lshr exact i64 %sub.ptr.sub17, 3
  %conv19 = trunc i64 %sub.ptr.div18771 to i32
  store i32 %conv19, i32* %10, align 4, !tbaa !4
  store %struct.sv** %0, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  tail call void @Perl_push_scope() #7
  %12 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags = getelementptr inbounds %struct.op* %12, i64 0, i32 6
  %13 = load i8* %op_flags, align 1, !tbaa !1
  %conv20 = zext i8 %13 to i32
  %and21 = and i32 %conv20, 3
  %cmp22 = icmp eq i32 %and21, 1
  br i1 %cmp22, label %cond.end45, label %cond.false25

cond.false25:                                     ; preds = %if.end
  %cmp29 = icmp eq i32 %and21, 2
  br i1 %cmp29, label %cond.end45, label %cond.false32

cond.false32:                                     ; preds = %cond.false25
  %cmp36 = icmp eq i32 %and21, 3
  br i1 %cmp36, label %cond.end45, label %cond.false39

cond.false39:                                     ; preds = %cond.false32
  %call40 = tail call i32 @Perl_block_gimme() #7
  br label %cond.end45

cond.end45:                                       ; preds = %cond.false25, %cond.false32, %cond.false39, %if.end
  %cond46 = phi i32 [ 128, %if.end ], [ 0, %cond.false25 ], [ %call40, %cond.false39 ], [ 1, %cond.false32 ]
  %call47 = tail call i32 @Perl_call_method(i8* getelementptr inbounds ([7 x i8]* @.str43, i64 0, i64 0), i32 %cond46) #7
  tail call void @Perl_pop_scope() #7
  %14 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next = getelementptr inbounds %struct.op* %14, i64 0, i32 0
  %15 = load %struct.op** %op_next, align 8, !tbaa !0
  br label %return

if.end48:                                         ; preds = %entry, %cond.end
  %incdec.ptr49 = getelementptr inbounds %struct.sv** %0, i64 1
  %incdec.ptr1.sum = add i64 %idx.ext, 2
  %incdec.ptr50 = getelementptr inbounds %struct.sv** %1, i64 %incdec.ptr1.sum
  %cmp51 = icmp ult %struct.sv** %incdec.ptr50, %incdec.ptr49
  br i1 %cmp51, label %if.then53, label %if.else113

if.then53:                                        ; preds = %if.end48
  %16 = load %struct.sv** %incdec.ptr50, align 8, !tbaa !0
  store %struct.sv* %16, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %sv_flags54 = getelementptr inbounds %struct.sv* %16, i64 0, i32 2
  %17 = load i32* %sv_flags54, align 4, !tbaa !4
  %and55 = and i32 %17, 65536
  %tobool56 = icmp eq i32 %and55, 0
  br i1 %tobool56, label %cond.false58, label %cond.true57

cond.true57:                                      ; preds = %if.then53
  %sv_any = getelementptr inbounds %struct.sv* %16, i64 0, i32 0
  %18 = load i8** %sv_any, align 8, !tbaa !0
  %xiv_iv = getelementptr inbounds i8* %18, i64 24
  %19 = bitcast i8* %xiv_iv to i64*
  %20 = load i64* %19, align 8, !tbaa !3
  br label %cond.end60

cond.false58:                                     ; preds = %if.then53
  %call59 = tail call i64 @Perl_sv_2iv(%struct.sv* %16) #7
  br label %cond.end60

cond.end60:                                       ; preds = %cond.false58, %cond.true57
  %cond61 = phi i64 [ %20, %cond.true57 ], [ %call59, %cond.false58 ]
  %conv62 = trunc i64 %cond61 to i32
  %cmp63 = icmp slt i32 %conv62, 0
  br i1 %cmp63, label %if.then65, label %if.else

if.then65:                                        ; preds = %cond.end60
  %sv_any66 = bitcast %struct.sv* %4 to %struct.xpvav**
  %21 = load %struct.xpvav** %sv_any66, align 8, !tbaa !0
  %xav_fill = getelementptr inbounds %struct.xpvav* %21, i64 0, i32 1
  %22 = load i64* %xav_fill, align 8, !tbaa !3
  %add = add i64 %cond61, 1
  %add68 = add i64 %add, %22
  %conv69 = trunc i64 %add68 to i32
  br label %if.end70

if.else:                                          ; preds = %cond.end60
  %23 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_arybase = getelementptr inbounds %struct.cop* %23, i64 0, i32 12
  %24 = load i32* %cop_arybase, align 4, !tbaa !4
  %sub = sub nsw i32 %conv62, %24
  br label %if.end70

if.end70:                                         ; preds = %if.else, %if.then65
  %offset.0 = phi i32 [ %conv69, %if.then65 ], [ %sub, %if.else ]
  %cmp71 = icmp slt i32 %offset.0, 0
  br i1 %cmp71, label %if.then73, label %if.end75

if.then73:                                        ; preds = %if.end70
  %call74 = tail call %struct.op* (i8*, ...)* @Perl_die(i8* getelementptr inbounds ([0 x i8]* @PL_no_aelem, i64 0, i64 0), i32 %conv62) #7
  br label %return

if.end75:                                         ; preds = %if.end70
  %incdec.ptr50.sum = add i64 %idx.ext, 3
  %incdec.ptr76 = getelementptr inbounds %struct.sv** %1, i64 %incdec.ptr50.sum
  %cmp77 = icmp ult %struct.sv** %incdec.ptr76, %incdec.ptr49
  br i1 %cmp77, label %if.then79, label %if.else108

if.then79:                                        ; preds = %if.end75
  %incdec.ptr76.sum = add i64 %idx.ext, 4
  %incdec.ptr80 = getelementptr inbounds %struct.sv** %1, i64 %incdec.ptr76.sum
  %25 = load %struct.sv** %incdec.ptr76, align 8, !tbaa !0
  store %struct.sv* %25, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %sv_flags81 = getelementptr inbounds %struct.sv* %25, i64 0, i32 2
  %26 = load i32* %sv_flags81, align 4, !tbaa !4
  %and82 = and i32 %26, 65536
  %tobool83 = icmp eq i32 %and82, 0
  br i1 %tobool83, label %cond.false87, label %cond.true84

cond.true84:                                      ; preds = %if.then79
  %sv_any85 = getelementptr inbounds %struct.sv* %25, i64 0, i32 0
  %27 = load i8** %sv_any85, align 8, !tbaa !0
  %xiv_iv86 = getelementptr inbounds i8* %27, i64 24
  %28 = bitcast i8* %xiv_iv86 to i64*
  %29 = load i64* %28, align 8, !tbaa !3
  br label %cond.end89

cond.false87:                                     ; preds = %if.then79
  %call88 = tail call i64 @Perl_sv_2iv(%struct.sv* %25) #7
  br label %cond.end89

cond.end89:                                       ; preds = %cond.false87, %cond.true84
  %cond90 = phi i64 [ %29, %cond.true84 ], [ %call88, %cond.false87 ]
  %conv91 = trunc i64 %cond90 to i32
  %cmp92 = icmp slt i32 %conv91, 0
  %sv_any95 = bitcast %struct.sv* %4 to %struct.xpvav**
  %30 = load %struct.xpvav** %sv_any95, align 8, !tbaa !0
  br i1 %cmp92, label %if.then94, label %if.end118

if.then94:                                        ; preds = %cond.end89
  %xav_fill96 = getelementptr inbounds %struct.xpvav* %30, i64 0, i32 1
  %31 = load i64* %xav_fill96, align 8, !tbaa !3
  %conv97767 = zext i32 %offset.0 to i64
  %sub98 = sub i64 1, %conv97767
  %add99 = add i64 %sub98, %cond90
  %add101 = add i64 %add99, %31
  %conv102 = trunc i64 %add101 to i32
  %cmp103 = icmp slt i32 %conv102, 0
  %.conv102 = select i1 %cmp103, i32 0, i32 %conv102
  br label %if.end118

if.else108:                                       ; preds = %if.end75
  %sv_any109 = bitcast %struct.sv* %4 to %struct.xpvav**
  %32 = load %struct.xpvav** %sv_any109, align 8, !tbaa !0
  %xav_max = getelementptr inbounds %struct.xpvav* %32, i64 0, i32 2
  %33 = load i64* %xav_max, align 8, !tbaa !3
  %add110 = add nsw i64 %33, 1
  %conv111 = trunc i64 %add110 to i32
  br label %if.end118

if.else113:                                       ; preds = %if.end48
  %sv_any114 = bitcast %struct.sv* %4 to %struct.xpvav**
  %34 = load %struct.xpvav** %sv_any114, align 8, !tbaa !0
  %xav_max115 = getelementptr inbounds %struct.xpvav* %34, i64 0, i32 2
  %35 = load i64* %xav_max115, align 8, !tbaa !3
  %add116 = add nsw i64 %35, 1
  %conv117 = trunc i64 %add116 to i32
  br label %if.end118

if.end118:                                        ; preds = %cond.end89, %if.else108, %if.then94, %if.else113
  %36 = phi %struct.xpvav* [ %30, %if.then94 ], [ %32, %if.else108 ], [ %34, %if.else113 ], [ %30, %cond.end89 ]
  %offset.1 = phi i32 [ %offset.0, %if.then94 ], [ %offset.0, %if.else108 ], [ 0, %if.else113 ], [ %offset.0, %cond.end89 ]
  %length.0 = phi i32 [ %.conv102, %if.then94 ], [ %conv111, %if.else108 ], [ %conv117, %if.else113 ], [ %conv91, %cond.end89 ]
  %mark.0 = phi %struct.sv** [ %incdec.ptr80, %if.then94 ], [ %incdec.ptr76, %if.else108 ], [ %incdec.ptr50, %if.else113 ], [ %incdec.ptr80, %cond.end89 ]
  %conv119 = sext i32 %offset.1 to i64
  %sv_any120 = bitcast %struct.sv* %4 to %struct.xpvav**
  %xav_fill121 = getelementptr inbounds %struct.xpvav* %36, i64 0, i32 1
  %37 = load i64* %xav_fill121, align 8, !tbaa !3
  %add122 = add nsw i64 %37, 1
  %cmp123 = icmp sgt i64 %conv119, %add122
  br i1 %cmp123, label %if.then125, label %if.end154

if.then125:                                       ; preds = %if.end118
  %38 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings = getelementptr inbounds %struct.cop* %38, i64 0, i32 14
  %39 = load %struct.sv** %cop_warnings, align 8, !tbaa !0
  %cmp126 = icmp eq %struct.sv* %39, null
  br i1 %cmp126, label %lor.lhs.false140, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then125
  %40 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings128 = getelementptr inbounds %struct.cop* %40, i64 0, i32 14
  %41 = load %struct.sv** %cop_warnings128, align 8, !tbaa !0
  %cmp129 = icmp eq %struct.sv* %41, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp129, label %lor.lhs.false140, label %land.lhs.true131

land.lhs.true131:                                 ; preds = %land.lhs.true
  %42 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings132 = getelementptr inbounds %struct.cop* %42, i64 0, i32 14
  %43 = load %struct.sv** %cop_warnings132, align 8, !tbaa !0
  %cmp133 = icmp eq %struct.sv* %43, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp133, label %if.then148, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true131
  %44 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings135 = getelementptr inbounds %struct.cop* %44, i64 0, i32 14
  %45 = load %struct.sv** %cop_warnings135, align 8, !tbaa !0
  %sv_any136 = getelementptr inbounds %struct.sv* %45, i64 0, i32 0
  %46 = load i8** %sv_any136, align 8, !tbaa !0
  %xpv_pv = bitcast i8* %46 to i8**
  %47 = load i8** %xpv_pv, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i8* %47, i64 3
  %48 = load i8* %arrayidx, align 1, !tbaa !1
  %and138 = and i8 %48, 1
  %tobool139 = icmp eq i8 %and138, 0
  br i1 %tobool139, label %lor.lhs.false140, label %if.then148

lor.lhs.false140:                                 ; preds = %lor.lhs.false, %land.lhs.true, %if.then125
  %49 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings141 = getelementptr inbounds %struct.cop* %49, i64 0, i32 14
  %50 = load %struct.sv** %cop_warnings141, align 8, !tbaa !0
  %cmp142 = icmp eq %struct.sv* %50, null
  br i1 %cmp142, label %land.lhs.true144, label %if.end149

land.lhs.true144:                                 ; preds = %lor.lhs.false140
  %51 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and146 = and i8 %51, 1
  %tobool147 = icmp eq i8 %and146, 0
  br i1 %tobool147, label %if.end149, label %if.then148

if.then148:                                       ; preds = %lor.lhs.false, %land.lhs.true144, %land.lhs.true131
  tail call void (i32, i8*, ...)* @Perl_warner(i32 12, i8* getelementptr inbounds ([34 x i8]* @.str44, i64 0, i64 0)) #7
  br label %if.end149

if.end149:                                        ; preds = %land.lhs.true144, %if.then148, %lor.lhs.false140
  %52 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %xav_fill151 = getelementptr inbounds %struct.xpvav* %52, i64 0, i32 1
  %53 = load i64* %xav_fill151, align 8, !tbaa !3
  %add152 = add nsw i64 %53, 1
  %conv153 = trunc i64 %add152 to i32
  br label %if.end154

if.end154:                                        ; preds = %if.end149, %if.end118
  %54 = phi i64 [ %53, %if.end149 ], [ %37, %if.end118 ]
  %55 = phi %struct.xpvav* [ %52, %if.end149 ], [ %36, %if.end118 ]
  %offset.2 = phi i32 [ %conv153, %if.end149 ], [ %offset.1, %if.end118 ]
  %add157 = add nsw i64 %54, 1
  %add158 = add nsw i32 %offset.2, %length.0
  %conv159756 = zext i32 %add158 to i64
  %sub160 = sub i64 %add157, %conv159756
  %conv161 = trunc i64 %sub160 to i32
  %cmp162 = icmp slt i32 %conv161, 0
  br i1 %cmp162, label %if.then164, label %if.end170

if.then164:                                       ; preds = %if.end154
  %add165 = add nsw i32 %conv161, %length.0
  %xav_alloc = getelementptr inbounds %struct.xpvav* %55, i64 0, i32 7
  %56 = load %struct.sv*** %xav_alloc, align 8, !tbaa !0
  %tobool167 = icmp eq %struct.sv** %56, null
  br i1 %tobool167, label %if.then168, label %if.end170

if.then168:                                       ; preds = %if.then164
  tail call void @Perl_av_extend(%struct.av* %5, i32 0) #7
  br label %if.end170

if.end170:                                        ; preds = %if.then164, %if.then168, %if.end154
  %length.1 = phi i32 [ %add165, %if.then164 ], [ %add165, %if.then168 ], [ %length.0, %if.end154 ]
  %after.0 = phi i32 [ 0, %if.then164 ], [ 0, %if.then168 ], [ %conv161, %if.end154 ]
  %sub.ptr.lhs.cast171 = ptrtoint %struct.sv** %incdec.ptr49 to i64
  %sub.ptr.rhs.cast172 = ptrtoint %struct.sv** %mark.0 to i64
  %sub.ptr.sub173 = sub i64 %sub.ptr.lhs.cast171, %sub.ptr.rhs.cast172
  %sub.ptr.div174757 = lshr exact i64 %sub.ptr.sub173, 3
  %conv175 = trunc i64 %sub.ptr.div174757 to i32
  %sub176 = sub nsw i32 %conv175, %length.1
  %tobool177 = icmp ne i32 %conv175, 0
  br i1 %tobool177, label %land.lhs.true178, label %for.end

land.lhs.true178:                                 ; preds = %if.end170
  %57 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %xav_flags = getelementptr inbounds %struct.xpvav* %57, i64 0, i32 9
  %58 = load i8* %xav_flags, align 1, !tbaa !1
  %59 = and i8 %58, 3
  %60 = icmp eq i8 %59, 2
  br i1 %60, label %if.then189, label %for.body

if.then189:                                       ; preds = %land.lhs.true178
  tail call void @Perl_av_reify(%struct.av* %5) #7
  br label %for.body

for.body:                                         ; preds = %if.then189, %land.lhs.true178, %for.body
  %dst.0798 = phi %struct.sv** [ %incdec.ptr193, %for.body ], [ %mark.0, %land.lhs.true178 ], [ %mark.0, %if.then189 ]
  %i.0797 = phi i32 [ %dec, %for.body ], [ %conv175, %land.lhs.true178 ], [ %conv175, %if.then189 ]
  %61 = load %struct.sv** %dst.0798, align 8, !tbaa !0
  %call192 = tail call %struct.sv* @Perl_newSVsv(%struct.sv* %61) #7
  %incdec.ptr193 = getelementptr inbounds %struct.sv** %dst.0798, i64 1
  store %struct.sv* %call192, %struct.sv** %dst.0798, align 8, !tbaa !0
  %dec = add nsw i32 %i.0797, -1
  %tobool191 = icmp eq i32 %dec, 0
  br i1 %tobool191, label %for.end, label %for.body

for.end:                                          ; preds = %if.end170, %for.body
  %cmp194 = icmp slt i32 %sub176, 0
  br i1 %cmp194, label %if.then196, label %if.else372

if.then196:                                       ; preds = %for.end
  br i1 %tobool177, label %if.then198, label %if.end203

if.then198:                                       ; preds = %if.then196
  %sext763 = shl i64 %sub.ptr.sub173, 29
  %mul = ashr exact i64 %sext763, 29
  %call200 = tail call i8* @Perl_safesysmalloc(i64 %mul) #7
  %62 = bitcast %struct.sv** %mark.0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call200, i8* %62, i64 %mul, i32 1, i1 false)
  br label %if.end203

if.end203:                                        ; preds = %if.then196, %if.then198
  %tmparyval.0 = phi i8* [ %call200, %if.then198 ], [ null, %if.then196 ]
  %63 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %add.ptr205.sum = add i64 %idx.ext, 1
  %add.ptr206 = getelementptr inbounds %struct.sv** %63, i64 %add.ptr205.sum
  %64 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags207 = getelementptr inbounds %struct.op* %64, i64 0, i32 6
  %65 = load i8* %op_flags207, align 1, !tbaa !1
  %conv208 = zext i8 %65 to i32
  %and209 = and i32 %conv208, 3
  %tobool210 = icmp eq i32 %and209, 0
  br i1 %tobool210, label %cond.false218, label %cond.true211

cond.true211:                                     ; preds = %if.end203
  %cmp215 = icmp eq i32 %and209, 3
  %cond217 = zext i1 %cmp215 to i32
  br label %cond.end220

cond.false218:                                    ; preds = %if.end203
  %call219 = tail call i32 @Perl_dowantarray() #7
  br label %cond.end220

cond.end220:                                      ; preds = %cond.false218, %cond.true211
  %cond221 = phi i32 [ %cond217, %cond.true211 ], [ %call219, %cond.false218 ]
  %cmp222 = icmp eq i32 %cond221, 1
  br i1 %cmp222, label %if.then224, label %if.else270

if.then224:                                       ; preds = %cond.end220
  %66 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast225 = ptrtoint %struct.sv** %66 to i64
  %sub.ptr.rhs.cast226 = ptrtoint %struct.sv** %add.ptr206 to i64
  %sub.ptr.sub227 = sub i64 %sub.ptr.lhs.cast225, %sub.ptr.rhs.cast226
  %sub.ptr.div228 = ashr exact i64 %sub.ptr.sub227, 3
  %conv229 = sext i32 %length.1 to i64
  %cmp230 = icmp slt i64 %sub.ptr.div228, %conv229
  br i1 %cmp230, label %if.then232, label %if.end241

if.then232:                                       ; preds = %if.then224
  %67 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %sub.ptr.rhs.cast234 = ptrtoint %struct.sv** %67 to i64
  %sub.ptr.sub235 = sub i64 %sub.ptr.rhs.cast226, %sub.ptr.rhs.cast234
  %call238 = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %incdec.ptr49, %struct.sv** %add.ptr206, i32 %length.1) #7
  %68 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %69 = shl i64 %sub.ptr.sub235, 29
  %idx.ext239 = ashr i64 %69, 32
  %add.ptr240 = getelementptr inbounds %struct.sv** %68, i64 %idx.ext239
  br label %if.end241

if.end241:                                        ; preds = %if.then224, %if.then232
  %mark.1 = phi %struct.sv** [ %add.ptr240, %if.then232 ], [ %add.ptr206, %if.then224 ]
  %70 = bitcast %struct.sv** %mark.1 to i8*
  %71 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %xav_array = getelementptr inbounds %struct.xpvav* %71, i64 0, i32 0
  %72 = load i8** %xav_array, align 8, !tbaa !0
  %73 = bitcast i8* %72 to %struct.sv**
  %idx.ext243 = sext i32 %offset.2 to i64
  %add.ptr244 = getelementptr inbounds %struct.sv** %73, i64 %idx.ext243
  %74 = bitcast %struct.sv** %add.ptr244 to i8*
  %mul246 = shl nsw i64 %conv229, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %74, i64 %mul246, i32 1, i1 false)
  %75 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %xav_flags248 = getelementptr inbounds %struct.xpvav* %75, i64 0, i32 9
  %76 = load i8* %xav_flags248, align 1, !tbaa !1
  %and250 = and i8 %76, 1
  %tobool251 = icmp eq i8 %and250, 0
  br i1 %tobool251, label %if.end266, label %if.then252

if.then252:                                       ; preds = %if.end241
  %77 = load i32* @PL_tmps_ix, align 4, !tbaa !4
  %add253 = add nsw i32 %77, %length.1
  %78 = load i32* @PL_tmps_max, align 4, !tbaa !4
  %cmp254 = icmp slt i32 %add253, %78
  br i1 %cmp254, label %for.cond258.preheader, label %if.then256

if.then256:                                       ; preds = %if.then252
  tail call void @Perl_tmps_grow(i32 %length.1) #7
  br label %for.cond258.preheader

for.cond258.preheader:                            ; preds = %if.then252, %if.then256
  %tobool259779 = icmp eq i32 %length.1, 0
  br i1 %tobool259779, label %if.end266, label %for.body260

for.body260:                                      ; preds = %for.cond258.preheader, %for.body260
  %dst.1781 = phi %struct.sv** [ %incdec.ptr262, %for.body260 ], [ %mark.1, %for.cond258.preheader ]
  %i.1780 = phi i32 [ %dec264, %for.body260 ], [ %length.1, %for.cond258.preheader ]
  %79 = load %struct.sv** %dst.1781, align 8, !tbaa !0
  %call261 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %79) #7
  %incdec.ptr262 = getelementptr inbounds %struct.sv** %dst.1781, i64 1
  %dec264 = add nsw i32 %i.1780, -1
  %tobool259 = icmp eq i32 %dec264, 0
  br i1 %tobool259, label %if.end266, label %for.body260

if.end266:                                        ; preds = %for.cond258.preheader, %for.body260, %if.end241
  %sub267 = add nsw i32 %length.1, -1
  %idx.ext268 = sext i32 %sub267 to i64
  %add.ptr269 = getelementptr inbounds %struct.sv** %mark.1, i64 %idx.ext268
  br label %if.end297

if.else270:                                       ; preds = %cond.end220
  %add271 = add i32 %offset.2, -1
  %sub272 = add i32 %add271, %length.1
  %idxprom = sext i32 %sub272 to i64
  %80 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %xav_array274 = getelementptr inbounds %struct.xpvav* %80, i64 0, i32 0
  %81 = load i8** %xav_array274, align 8, !tbaa !0
  %82 = bitcast i8* %81 to %struct.sv**
  %arrayidx275 = getelementptr inbounds %struct.sv** %82, i64 %idxprom
  %83 = load %struct.sv** %arrayidx275, align 8, !tbaa !0
  store %struct.sv* %83, %struct.sv** %add.ptr206, align 8, !tbaa !0
  %84 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %xav_flags277 = getelementptr inbounds %struct.xpvav* %84, i64 0, i32 9
  %85 = load i8* %xav_flags277, align 1, !tbaa !1
  %and279 = and i8 %85, 1
  %tobool280 = icmp eq i8 %and279, 0
  br i1 %tobool280, label %if.end297, label %if.then281

if.then281:                                       ; preds = %if.else270
  %call282 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %83) #7
  %i.2782 = add nsw i32 %length.1, -1
  %cmp289783 = icmp sgt i32 %i.2782, 0
  br i1 %cmp289783, label %for.body291.lr.ph, label %if.end297

for.body291.lr.ph:                                ; preds = %if.then281
  %86 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %xav_array286 = getelementptr inbounds %struct.xpvav* %86, i64 0, i32 0
  %87 = load i8** %xav_array286, align 8, !tbaa !0
  %88 = bitcast i8* %87 to %struct.sv**
  %idxprom284 = sext i32 %offset.2 to i64
  %arrayidx287 = getelementptr inbounds %struct.sv** %88, i64 %idxprom284
  br label %for.body291

for.body291:                                      ; preds = %for.body291.lr.ph, %for.body291
  %i.2785 = phi i32 [ %i.2782, %for.body291.lr.ph ], [ %i.2, %for.body291 ]
  %dst.2784 = phi %struct.sv** [ %arrayidx287, %for.body291.lr.ph ], [ %incdec.ptr292, %for.body291 ]
  %incdec.ptr292 = getelementptr inbounds %struct.sv** %dst.2784, i64 1
  %89 = load %struct.sv** %dst.2784, align 8, !tbaa !0
  tail call void @Perl_sv_free(%struct.sv* %89) #7
  %i.2 = add nsw i32 %i.2785, -1
  %cmp289 = icmp sgt i32 %i.2, 0
  br i1 %cmp289, label %for.body291, label %if.end297

if.end297:                                        ; preds = %if.then281, %for.body291, %if.else270, %if.end266
  %mark.2 = phi %struct.sv** [ %add.ptr269, %if.end266 ], [ %add.ptr206, %if.else270 ], [ %add.ptr206, %for.body291 ], [ %add.ptr206, %if.then281 ]
  %conv298 = sext i32 %sub176 to i64
  %90 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %xav_fill300 = getelementptr inbounds %struct.xpvav* %90, i64 0, i32 1
  %91 = load i64* %xav_fill300, align 8, !tbaa !3
  %add301 = add nsw i64 %91, %conv298
  store i64 %add301, i64* %xav_fill300, align 8, !tbaa !3
  %cmp302 = icmp slt i32 %offset.2, %after.0
  br i1 %cmp302, label %if.then304, label %if.else337

if.then304:                                       ; preds = %if.end297
  %tobool305 = icmp eq i32 %offset.2, 0
  br i1 %tobool305, label %if.end323, label %if.then306

if.then306:                                       ; preds = %if.then304
  %sub307 = add nsw i32 %offset.2, -1
  %idxprom308 = sext i32 %sub307 to i64
  %xav_array310 = getelementptr inbounds %struct.xpvav* %90, i64 0, i32 0
  %92 = load i8** %xav_array310, align 8, !tbaa !0
  %93 = bitcast i8* %92 to %struct.sv**
  %cmp315775 = icmp sgt i32 %offset.2, 0
  br i1 %cmp315775, label %for.body317.lr.ph, label %if.end323

for.body317.lr.ph:                                ; preds = %if.then306
  %arrayidx311.sum = sub i64 %idxprom308, %conv298
  %add.ptr313 = getelementptr inbounds %struct.sv** %93, i64 %arrayidx311.sum
  %arrayidx311 = getelementptr inbounds %struct.sv** %93, i64 %idxprom308
  br label %for.body317

for.body317:                                      ; preds = %for.body317.lr.ph, %for.body317
  %src.0778 = phi %struct.sv** [ %arrayidx311, %for.body317.lr.ph ], [ %incdec.ptr318, %for.body317 ]
  %dst.3777 = phi %struct.sv** [ %add.ptr313, %for.body317.lr.ph ], [ %incdec.ptr319, %for.body317 ]
  %i.3776 = phi i32 [ %offset.2, %for.body317.lr.ph ], [ %dec321, %for.body317 ]
  %incdec.ptr318 = getelementptr inbounds %struct.sv** %src.0778, i64 -1
  %94 = load %struct.sv** %src.0778, align 8, !tbaa !0
  %incdec.ptr319 = getelementptr inbounds %struct.sv** %dst.3777, i64 -1
  store %struct.sv* %94, %struct.sv** %dst.3777, align 8, !tbaa !0
  %dec321 = add nsw i32 %i.3776, -1
  %cmp315 = icmp sgt i32 %dec321, 0
  br i1 %cmp315, label %for.body317, label %for.cond314.if.end323.loopexit_crit_edge

for.cond314.if.end323.loopexit_crit_edge:         ; preds = %for.body317
  %.pre.pre = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  br label %if.end323

if.end323:                                        ; preds = %if.then306, %for.cond314.if.end323.loopexit_crit_edge, %if.then304
  %95 = phi %struct.xpvav* [ %90, %if.then304 ], [ %.pre.pre, %for.cond314.if.end323.loopexit_crit_edge ], [ %90, %if.then306 ]
  %xav_array325 = getelementptr inbounds %struct.xpvav* %95, i64 0, i32 0
  %96 = load i8** %xav_array325, align 8, !tbaa !0
  %97 = bitcast i8* %96 to %struct.sv**
  %idx.neg329 = sub i64 0, %conv298
  %add.ptr330 = getelementptr inbounds %struct.sv** %97, i64 %idx.neg329
  %98 = bitcast %struct.sv** %add.ptr330 to i8*
  store i8* %98, i8** %xav_array325, align 8, !tbaa !0
  %99 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %xav_max335 = getelementptr inbounds %struct.xpvav* %99, i64 0, i32 2
  %100 = load i64* %xav_max335, align 8, !tbaa !3
  %add336 = add nsw i64 %100, %conv298
  store i64 %add336, i64* %xav_max335, align 8, !tbaa !3
  br label %if.end357

if.else337:                                       ; preds = %if.end297
  %tobool338 = icmp eq i32 %after.0, 0
  br i1 %tobool338, label %if.end350, label %if.then339

if.then339:                                       ; preds = %if.else337
  %xav_array341 = getelementptr inbounds %struct.xpvav* %90, i64 0, i32 0
  %101 = load i8** %xav_array341, align 8, !tbaa !0
  %102 = bitcast i8* %101 to %struct.sv**
  %idx.ext342 = sext i32 %offset.2 to i64
  %idx.ext344 = sext i32 %length.1 to i64
  %add.ptr343.sum = add i64 %idx.ext344, %idx.ext342
  %add.ptr345 = getelementptr inbounds %struct.sv** %102, i64 %add.ptr343.sum
  %add.ptr345.sum = add i64 %add.ptr343.sum, %conv298
  %add.ptr347 = getelementptr inbounds %struct.sv** %102, i64 %add.ptr345.sum
  %103 = bitcast %struct.sv** %add.ptr347 to i8*
  %104 = bitcast %struct.sv** %add.ptr345 to i8*
  %conv348 = sext i32 %after.0 to i64
  %mul349 = shl nsw i64 %conv348, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* %103, i8* %104, i64 %mul349, i32 1, i1 false)
  %.pre803 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %xav_fill352.phi.trans.insert = getelementptr inbounds %struct.xpvav* %.pre803, i64 0, i32 1
  %.pre804 = load i64* %xav_fill352.phi.trans.insert, align 8, !tbaa !3
  br label %if.end350

if.end350:                                        ; preds = %if.else337, %if.then339
  %105 = phi i64 [ %add301, %if.else337 ], [ %.pre804, %if.then339 ]
  %106 = phi %struct.xpvav* [ %90, %if.else337 ], [ %.pre803, %if.then339 ]
  %add353 = add nsw i64 %105, 1
  %xav_array355 = getelementptr inbounds %struct.xpvav* %106, i64 0, i32 0
  %107 = load i8** %xav_array355, align 8, !tbaa !0
  %108 = bitcast i8* %107 to %struct.sv**
  %arrayidx356 = getelementptr inbounds %struct.sv** %108, i64 %add353
  br label %if.end357

if.end357:                                        ; preds = %if.end350, %if.end323
  %dst.4 = phi %struct.sv** [ %97, %if.end323 ], [ %arrayidx356, %if.end350 ]
  %tobool359773 = icmp eq i32 %conv175, %length.1
  br i1 %tobool359773, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %if.end357
  %109 = sub i32 %length.1, %conv175
  %110 = sext i32 %109 to i64
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %indvars.iv = phi i64 [ %110, %while.body.lr.ph ], [ %indvars.iv.next, %while.body ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %arrayidx362 = getelementptr inbounds %struct.sv** %dst.4, i64 %indvars.iv.next
  store %struct.sv* @PL_sv_undef, %struct.sv** %arrayidx362, align 8, !tbaa !0
  %111 = trunc i64 %indvars.iv.next to i32
  %tobool359 = icmp eq i32 %111, 0
  br i1 %tobool359, label %while.end, label %while.body

while.end:                                        ; preds = %while.body, %if.end357
  br i1 %tobool177, label %if.then364, label %if.end552

if.then364:                                       ; preds = %while.end
  %112 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %xav_array366 = getelementptr inbounds %struct.xpvav* %112, i64 0, i32 0
  %113 = load i8** %xav_array366, align 8, !tbaa !0
  %114 = bitcast i8* %113 to %struct.sv**
  %idx.ext367 = sext i32 %offset.2 to i64
  %add.ptr368 = getelementptr inbounds %struct.sv** %114, i64 %idx.ext367
  %115 = bitcast %struct.sv** %add.ptr368 to i8*
  %sext760 = shl i64 %sub.ptr.sub173, 29
  %mul370 = ashr exact i64 %sext760, 29
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %115, i8* %tmparyval.0, i64 %mul370, i32 1, i1 false)
  tail call void @Perl_safesysfree(i8* %tmparyval.0) #7
  br label %if.end552

if.else372:                                       ; preds = %for.end
  %tobool373 = icmp ne i32 %length.1, 0
  br i1 %tobool373, label %if.then374, label %if.end384

if.then374:                                       ; preds = %if.else372
  %conv375 = sext i32 %length.1 to i64
  %mul376 = shl nsw i64 %conv375, 3
  %call377 = tail call i8* @Perl_safesysmalloc(i64 %mul376) #7
  %116 = bitcast i8* %call377 to %struct.sv**
  %117 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %xav_array379 = getelementptr inbounds %struct.xpvav* %117, i64 0, i32 0
  %118 = load i8** %xav_array379, align 8, !tbaa !0
  %119 = bitcast i8* %118 to %struct.sv**
  %idx.ext380 = sext i32 %offset.2 to i64
  %add.ptr381 = getelementptr inbounds %struct.sv** %119, i64 %idx.ext380
  %120 = bitcast %struct.sv** %add.ptr381 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call377, i8* %120, i64 %mul376, i32 1, i1 false)
  br label %if.end384

if.end384:                                        ; preds = %if.then374, %if.else372
  %tmparyval.1 = phi %struct.sv** [ %116, %if.then374 ], [ null, %if.else372 ]
  %cmp385 = icmp sgt i32 %sub176, 0
  br i1 %cmp385, label %if.then387, label %if.end468

if.then387:                                       ; preds = %if.end384
  %cmp388 = icmp slt i32 %offset.2, %after.0
  br i1 %cmp388, label %land.lhs.true390, label %if.then387.if.else428_crit_edge

if.then387.if.else428_crit_edge:                  ; preds = %if.then387
  %.pre811 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %conv431.pre = sext i32 %sub176 to i64
  br label %if.else428

land.lhs.true390:                                 ; preds = %if.then387
  %conv391 = sext i32 %sub176 to i64
  %121 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %xav_array393 = getelementptr inbounds %struct.xpvav* %121, i64 0, i32 0
  %122 = load i8** %xav_array393, align 8, !tbaa !0
  %123 = bitcast i8* %122 to %struct.sv**
  %xav_alloc395 = getelementptr inbounds %struct.xpvav* %121, i64 0, i32 7
  %124 = load %struct.sv*** %xav_alloc395, align 8, !tbaa !0
  %sub.ptr.lhs.cast396 = ptrtoint i8* %122 to i64
  %sub.ptr.rhs.cast397 = ptrtoint %struct.sv** %124 to i64
  %sub.ptr.sub398 = sub i64 %sub.ptr.lhs.cast396, %sub.ptr.rhs.cast397
  %sub.ptr.div399 = ashr exact i64 %sub.ptr.sub398, 3
  %cmp400 = icmp sgt i64 %conv391, %sub.ptr.div399
  br i1 %cmp400, label %if.else428, label %if.then402

if.then402:                                       ; preds = %land.lhs.true390
  %tobool403 = icmp eq i32 %offset.2, 0
  %idx.neg416.pre = sub i64 0, %conv391
  br i1 %tobool403, label %if.end412, label %if.then404

if.then404:                                       ; preds = %if.then402
  %add.ptr409 = getelementptr inbounds %struct.sv** %123, i64 %idx.neg416.pre
  %125 = bitcast %struct.sv** %add.ptr409 to i8*
  %conv410 = sext i32 %offset.2 to i64
  %mul411 = shl nsw i64 %conv410, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* %125, i8* %122, i64 %mul411, i32 1, i1 false)
  %.pre805 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %xav_array414.phi.trans.insert = getelementptr inbounds %struct.xpvav* %.pre805, i64 0, i32 0
  %.pre806 = load i8** %xav_array414.phi.trans.insert, align 8, !tbaa !0
  br label %if.end412

if.end412:                                        ; preds = %if.then402, %if.then404
  %126 = phi i8* [ %.pre806, %if.then404 ], [ %122, %if.then402 ]
  %127 = phi %struct.xpvav* [ %.pre805, %if.then404 ], [ %121, %if.then402 ]
  %xav_array414 = getelementptr inbounds %struct.xpvav* %127, i64 0, i32 0
  %128 = bitcast i8* %126 to %struct.sv**
  %add.ptr417 = getelementptr inbounds %struct.sv** %128, i64 %idx.neg416.pre
  %129 = bitcast %struct.sv** %add.ptr417 to i8*
  store i8* %129, i8** %xav_array414, align 8, !tbaa !0
  %130 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %xav_max422 = getelementptr inbounds %struct.xpvav* %130, i64 0, i32 2
  %131 = load i64* %xav_max422, align 8, !tbaa !3
  %add423 = add nsw i64 %131, %conv391
  store i64 %add423, i64* %xav_max422, align 8, !tbaa !3
  %xav_fill426 = getelementptr inbounds %struct.xpvav* %130, i64 0, i32 1
  %132 = load i64* %xav_fill426, align 8, !tbaa !3
  %add427 = add nsw i64 %132, %conv391
  store i64 %add427, i64* %xav_fill426, align 8, !tbaa !3
  br label %if.end468

if.else428:                                       ; preds = %if.then387.if.else428_crit_edge, %land.lhs.true390
  %conv431.pre-phi = phi i64 [ %conv431.pre, %if.then387.if.else428_crit_edge ], [ %conv391, %land.lhs.true390 ]
  %133 = phi %struct.xpvav* [ %.pre811, %if.then387.if.else428_crit_edge ], [ %121, %land.lhs.true390 ]
  %xav_fill430 = getelementptr inbounds %struct.xpvav* %133, i64 0, i32 1
  %134 = load i64* %xav_fill430, align 8, !tbaa !3
  %add432 = add nsw i64 %134, %conv431.pre-phi
  %xav_max434 = getelementptr inbounds %struct.xpvav* %133, i64 0, i32 2
  %135 = load i64* %xav_max434, align 8, !tbaa !3
  %cmp435 = icmp slt i64 %add432, %135
  br i1 %cmp435, label %if.end443, label %if.then437

if.then437:                                       ; preds = %if.else428
  %conv442 = trunc i64 %add432 to i32
  tail call void @Perl_av_extend(%struct.av* %5, i32 %conv442) #7
  %.pre807 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %xav_fill446.phi.trans.insert = getelementptr inbounds %struct.xpvav* %.pre807, i64 0, i32 1
  %.pre808 = load i64* %xav_fill446.phi.trans.insert, align 8, !tbaa !3
  br label %if.end443

if.end443:                                        ; preds = %if.else428, %if.then437
  %136 = phi i64 [ %134, %if.else428 ], [ %.pre808, %if.then437 ]
  %137 = phi %struct.xpvav* [ %133, %if.else428 ], [ %.pre807, %if.then437 ]
  %xav_fill446 = getelementptr inbounds %struct.xpvav* %137, i64 0, i32 1
  %add447 = add nsw i64 %136, %conv431.pre-phi
  store i64 %add447, i64* %xav_fill446, align 8, !tbaa !3
  %tobool448 = icmp eq i32 %after.0, 0
  br i1 %tobool448, label %if.end468, label %for.body460.lr.ph

for.body460.lr.ph:                                ; preds = %if.end443
  %xav_array451 = getelementptr inbounds %struct.xpvav* %137, i64 0, i32 0
  %138 = load i8** %xav_array451, align 8, !tbaa !0
  %139 = bitcast i8* %138 to %struct.sv**
  %add.ptr457 = getelementptr inbounds %struct.sv** %139, i64 %136
  %add.ptr454 = getelementptr inbounds %struct.sv** %139, i64 %add447
  br label %for.body460

for.body460:                                      ; preds = %for.body460.lr.ph, %for.body460
  %src.1795 = phi %struct.sv** [ %add.ptr457, %for.body460.lr.ph ], [ %incdec.ptr461, %for.body460 ]
  %dst.5794 = phi %struct.sv** [ %add.ptr454, %for.body460.lr.ph ], [ %incdec.ptr462, %for.body460 ]
  %i.5793 = phi i32 [ %after.0, %for.body460.lr.ph ], [ %dec464, %for.body460 ]
  %incdec.ptr461 = getelementptr inbounds %struct.sv** %src.1795, i64 -1
  %140 = load %struct.sv** %src.1795, align 8, !tbaa !0
  %incdec.ptr462 = getelementptr inbounds %struct.sv** %dst.5794, i64 -1
  store %struct.sv* %140, %struct.sv** %dst.5794, align 8, !tbaa !0
  %dec464 = add nsw i32 %i.5793, -1
  %tobool459 = icmp eq i32 %dec464, 0
  br i1 %tobool459, label %if.end468, label %for.body460

if.end468:                                        ; preds = %for.body460, %if.end443, %if.end412, %if.end384
  br i1 %tobool177, label %if.then470, label %if.end477

if.then470:                                       ; preds = %if.end468
  %141 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %xav_array472 = getelementptr inbounds %struct.xpvav* %141, i64 0, i32 0
  %142 = load i8** %xav_array472, align 8, !tbaa !0
  %143 = bitcast i8* %142 to %struct.sv**
  %idx.ext473 = sext i32 %offset.2 to i64
  %add.ptr474 = getelementptr inbounds %struct.sv** %143, i64 %idx.ext473
  %144 = bitcast %struct.sv** %add.ptr474 to i8*
  %145 = bitcast %struct.sv** %mark.0 to i8*
  %sext758 = shl i64 %sub.ptr.sub173, 29
  %mul476 = ashr exact i64 %sext758, 29
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %144, i8* %145, i64 %mul476, i32 1, i1 false)
  br label %if.end477

if.end477:                                        ; preds = %if.end468, %if.then470
  %146 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %add.ptr479.sum = add i64 %idx.ext, 1
  %add.ptr480 = getelementptr inbounds %struct.sv** %146, i64 %add.ptr479.sum
  %147 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags481 = getelementptr inbounds %struct.op* %147, i64 0, i32 6
  %148 = load i8* %op_flags481, align 1, !tbaa !1
  %conv482 = zext i8 %148 to i32
  %and483 = and i32 %conv482, 3
  %tobool484 = icmp eq i32 %and483, 0
  br i1 %tobool484, label %cond.false492, label %cond.true485

cond.true485:                                     ; preds = %if.end477
  %cmp489 = icmp eq i32 %and483, 3
  %cond491 = zext i1 %cmp489 to i32
  br label %cond.end494

cond.false492:                                    ; preds = %if.end477
  %call493 = tail call i32 @Perl_dowantarray() #7
  br label %cond.end494

cond.end494:                                      ; preds = %cond.false492, %cond.true485
  %cond495 = phi i32 [ %cond491, %cond.true485 ], [ %call493, %cond.false492 ]
  %cmp496 = icmp eq i32 %cond495, 1
  br i1 %cmp496, label %if.then498, label %if.else527

if.then498:                                       ; preds = %cond.end494
  br i1 %tobool373, label %if.then500, label %if.end523

if.then500:                                       ; preds = %if.then498
  %149 = bitcast %struct.sv** %add.ptr480 to i8*
  %150 = bitcast %struct.sv** %tmparyval.1 to i8*
  %conv501 = sext i32 %length.1 to i64
  %mul502 = shl nsw i64 %conv501, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %149, i8* %150, i64 %mul502, i32 1, i1 false)
  %151 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %xav_flags504 = getelementptr inbounds %struct.xpvav* %151, i64 0, i32 9
  %152 = load i8* %xav_flags504, align 1, !tbaa !1
  %and506 = and i8 %152, 1
  %tobool507 = icmp eq i8 %and506, 0
  br i1 %tobool507, label %if.end522, label %if.then508

if.then508:                                       ; preds = %if.then500
  %153 = load i32* @PL_tmps_ix, align 4, !tbaa !4
  %add509 = add nsw i32 %153, %length.1
  %154 = load i32* @PL_tmps_max, align 4, !tbaa !4
  %cmp510 = icmp slt i32 %add509, %154
  br i1 %cmp510, label %for.body516, label %if.then512

if.then512:                                       ; preds = %if.then508
  tail call void @Perl_tmps_grow(i32 %length.1) #7
  br label %for.body516

for.body516:                                      ; preds = %if.then508, %if.then512, %for.body516
  %dst.6788 = phi %struct.sv** [ %incdec.ptr518, %for.body516 ], [ %add.ptr480, %if.then512 ], [ %add.ptr480, %if.then508 ]
  %i.6787 = phi i32 [ %dec520, %for.body516 ], [ %length.1, %if.then512 ], [ %length.1, %if.then508 ]
  %155 = load %struct.sv** %dst.6788, align 8, !tbaa !0
  %call517 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %155) #7
  %incdec.ptr518 = getelementptr inbounds %struct.sv** %dst.6788, i64 1
  %dec520 = add nsw i32 %i.6787, -1
  %tobool515 = icmp eq i32 %dec520, 0
  br i1 %tobool515, label %if.end522, label %for.body516

if.end522:                                        ; preds = %for.body516, %if.then500
  tail call void @Perl_safesysfree(i8* %150) #7
  br label %if.end523

if.end523:                                        ; preds = %if.end522, %if.then498
  %sub524 = add nsw i32 %length.1, -1
  %idx.ext525 = sext i32 %sub524 to i64
  %add.ptr480.sum = add i64 %idx.ext525, %add.ptr479.sum
  %add.ptr526 = getelementptr inbounds %struct.sv** %146, i64 %add.ptr480.sum
  br label %if.end552

if.else527:                                       ; preds = %cond.end494
  %dec528 = add nsw i32 %length.1, -1
  br i1 %tobool373, label %if.then530, label %if.else549

if.then530:                                       ; preds = %if.else527
  %idxprom531 = sext i32 %dec528 to i64
  %arrayidx532 = getelementptr inbounds %struct.sv** %tmparyval.1, i64 %idxprom531
  %156 = load %struct.sv** %arrayidx532, align 8, !tbaa !0
  store %struct.sv* %156, %struct.sv** %add.ptr480, align 8, !tbaa !0
  %157 = load %struct.xpvav** %sv_any120, align 8, !tbaa !0
  %xav_flags534 = getelementptr inbounds %struct.xpvav* %157, i64 0, i32 9
  %158 = load i8* %xav_flags534, align 1, !tbaa !1
  %and536 = and i8 %158, 1
  %tobool537 = icmp eq i8 %and536, 0
  br i1 %tobool537, label %if.end548, label %if.then538

if.then538:                                       ; preds = %if.then530
  %call539 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %156) #7
  %cmp542790 = icmp sgt i32 %dec528, 0
  br i1 %cmp542790, label %while.body544.lr.ph, label %if.end548

while.body544.lr.ph:                              ; preds = %if.then538
  %dec541789 = add nsw i32 %length.1, -2
  %159 = sext i32 %dec541789 to i64
  br label %while.body544

while.body544:                                    ; preds = %while.body544.lr.ph, %while.body544
  %indvars.iv799 = phi i64 [ %159, %while.body544.lr.ph ], [ %indvars.iv.next800, %while.body544 ]
  %arrayidx546 = getelementptr inbounds %struct.sv** %tmparyval.1, i64 %indvars.iv799
  %160 = load %struct.sv** %arrayidx546, align 8, !tbaa !0
  tail call void @Perl_sv_free(%struct.sv* %160) #7
  %161 = trunc i64 %indvars.iv799 to i32
  %cmp542 = icmp sgt i32 %161, 0
  %indvars.iv.next800 = add i64 %indvars.iv799, -1
  br i1 %cmp542, label %while.body544, label %if.end548

if.end548:                                        ; preds = %if.then538, %while.body544, %if.then530
  %162 = bitcast %struct.sv** %tmparyval.1 to i8*
  tail call void @Perl_safesysfree(i8* %162) #7
  br label %if.end552

if.else549:                                       ; preds = %if.else527
  store %struct.sv* @PL_sv_undef, %struct.sv** %add.ptr480, align 8, !tbaa !0
  br label %if.end552

if.end552:                                        ; preds = %while.end, %if.end523, %if.else549, %if.end548, %if.then364
  %mark.3 = phi %struct.sv** [ %mark.2, %if.then364 ], [ %add.ptr526, %if.end523 ], [ %add.ptr480, %if.end548 ], [ %add.ptr480, %if.else549 ], [ %mark.2, %while.end ]
  store %struct.sv** %mark.3, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %163 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next553 = getelementptr inbounds %struct.op* %163, i64 0, i32 0
  %164 = load %struct.op** %op_next553, align 8, !tbaa !0
  br label %return

return:                                           ; preds = %if.end552, %if.then73, %cond.end45
  %retval.0 = phi %struct.op* [ %15, %cond.end45 ], [ %call74, %if.then73 ], [ %164, %if.end552 ]
  ret %struct.op* %retval.0
}
