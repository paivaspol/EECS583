define %struct.op* @Perl_pp_trans() #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags = getelementptr inbounds %struct.op* %1, i64 0, i32 6
  %2 = load i8* %op_flags, align 1, !tbaa !1
  %and = and i8 %2, 64
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %incdec.ptr = getelementptr inbounds %struct.sv** %0, i64 -1
  %3 = load %struct.sv** %0, align 8, !tbaa !0
  br label %if.end3

if.else:                                          ; preds = %entry
  %4 = load %struct.gv** @PL_defgv, align 8, !tbaa !0
  %sv_any = getelementptr inbounds %struct.gv* %4, i64 0, i32 0
  %5 = load %struct.xpvgv** %sv_any, align 8, !tbaa !0
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %5, i64 0, i32 7
  %6 = load %struct.gp** %xgv_gp, align 8, !tbaa !0
  %gp_sv = getelementptr inbounds %struct.gp* %6, i64 0, i32 0
  %7 = load %struct.sv** %gp_sv, align 8, !tbaa !0
  %8 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %8 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp = icmp slt i64 %sub.ptr.sub, 8
  br i1 %cmp, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.else
  %call = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %0, %struct.sv** %0, i32 1) #7
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.then2, %if.then
  %sp.0 = phi %struct.sv** [ %incdec.ptr, %if.then ], [ %call, %if.then2 ], [ %0, %if.else ]
  %sv.0 = phi %struct.sv* [ %3, %if.then ], [ %7, %if.then2 ], [ %7, %if.else ]
  %call4 = tail call %struct.sv* @Perl_sv_newmortal() #7
  %call5 = tail call i32 @Perl_do_trans(%struct.sv* %sv.0) #7
  %conv6 = sext i32 %call5 to i64
  tail call void @Perl_sv_setiv(%struct.sv* %call4, i64 %conv6) #7
  %sv_flags = getelementptr inbounds %struct.sv* %call4, i64 0, i32 2
  %9 = load i32* %sv_flags, align 4, !tbaa !4
  %and7 = and i32 %9, 16384
  %tobool8 = icmp eq i32 %and7, 0
  br i1 %tobool8, label %if.end11, label %if.then9

if.then9:                                         ; preds = %if.end3
  %call10 = tail call i32 @Perl_mg_set(%struct.sv* %call4) #7
  br label %if.end11

if.end11:                                         ; preds = %if.end3, %if.then9
  %incdec.ptr12 = getelementptr inbounds %struct.sv** %sp.0, i64 1
  store %struct.sv* %call4, %struct.sv** %incdec.ptr12, align 8, !tbaa !0
  store %struct.sv** %incdec.ptr12, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %10 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next = getelementptr inbounds %struct.op* %10, i64 0, i32 0
  %11 = load %struct.op** %op_next, align 8, !tbaa !0
  ret %struct.op* %11
}
