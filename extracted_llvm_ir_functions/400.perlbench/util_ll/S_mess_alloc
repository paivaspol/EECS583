define internal fastcc %struct.sv* @S_mess_alloc() #0 {
entry:
  %0 = load i8* @PL_dirty, align 1, !tbaa !0
  %tobool = icmp eq i8 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([1 x i8]* @.str3, i64 0, i64 0), i64 0) #8
  %call1 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call) #8
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.sv** @PL_mess_sv, align 8, !tbaa !2
  %tobool2 = icmp eq %struct.sv* %1, null
  br i1 %tobool2, label %if.end4, label %return

if.end4:                                          ; preds = %if.end
  %call5 = tail call i8* @Perl_safesysmalloc(i64 16) #9
  %2 = bitcast i8* %call5 to %struct.sv*
  %call6 = tail call i8* @Perl_safesysmalloc(i64 56) #9
  tail call void @llvm.memset.p0i8.i64(i8* %call6, i8 0, i64 56, i32 1, i1 false)
  %sv_flags = getelementptr inbounds i8* %call5, i64 12
  %3 = bitcast i8* %sv_flags to i32*
  store i32 7, i32* %3, align 4, !tbaa !3
  %sv_any = bitcast i8* %call5 to i8**
  store i8* %call6, i8** %sv_any, align 8, !tbaa !2
  %sv_refcnt = getelementptr inbounds i8* %call5, i64 8
  %4 = bitcast i8* %sv_refcnt to i32*
  store i32 1073741824, i32* %4, align 4, !tbaa !3
  store %struct.sv* %2, %struct.sv** @PL_mess_sv, align 8, !tbaa !2
  br label %return

return:                                           ; preds = %if.end, %if.end4, %if.then
  %retval.0 = phi %struct.sv* [ %2, %if.end4 ], [ %call1, %if.then ], [ %1, %if.end ]
  ret %struct.sv* %retval.0
}
