define internal fastcc signext i8 @S_next_symbol(%struct.tempsym_t* nocapture %symptr) #0 {
entry:
  %savsym.sroa.0 = alloca [36 x i8], align 8
  %savsym.sroa.2 = alloca [16 x i8], align 8
  %patptr1 = getelementptr inbounds %struct.tempsym_t* %symptr, i64 0, i32 0
  %0 = load i8** %patptr1, align 8, !tbaa !0
  %patend2 = getelementptr inbounds %struct.tempsym_t* %symptr, i64 0, i32 1
  %1 = load i8** %patend2, align 8, !tbaa !0
  %flags = getelementptr inbounds %struct.tempsym_t* %symptr, i64 0, i32 8
  %2 = load i32* %flags, align 4, !tbaa !3
  %and = and i32 %2, -5
  store i32 %and, i32* %flags, align 4, !tbaa !3
  %cmp484 = icmp ult i8* %0, %1
  br i1 %cmp484, label %while.body, label %return

while.body:                                       ; preds = %entry, %while.cond.backedge
  %patptr.0485 = phi i8* [ %patptr.0.be, %while.cond.backedge ], [ %0, %entry ]
  %3 = load i8* %patptr.0485, align 1, !tbaa !1
  %conv451 = zext i8 %3 to i32
  switch i8 %3, label %if.else [
    i8 32, label %if.then
    i8 9, label %if.then
    i8 10, label %if.then
    i8 13, label %if.then
    i8 12, label %if.then
  ]

if.then:                                          ; preds = %while.body, %while.body, %while.body, %while.body, %while.body
  %incdec.ptr = getelementptr inbounds i8* %patptr.0485, i64 1
  br label %while.cond.backedge

if.else:                                          ; preds = %while.body
  %incdec.ptr24 = getelementptr inbounds i8* %patptr.0485, i64 1
  switch i8 %3, label %while.cond110.preheader [
    i8 35, label %while.cond25.preheader
    i8 44, label %if.then43
    i8 40, label %if.then79
  ]

while.cond25.preheader:                           ; preds = %if.else
  %cmp26474 = icmp ult i8* %incdec.ptr24, %1
  br i1 %cmp26474, label %land.rhs, label %while.end

while.cond25:                                     ; preds = %land.rhs
  %cmp26 = icmp ult i8* %incdec.ptr32, %1
  br i1 %cmp26, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %while.cond25.preheader, %while.cond25
  %patptr.1475 = phi i8* [ %incdec.ptr32, %while.cond25 ], [ %incdec.ptr24, %while.cond25.preheader ]
  %4 = load i8* %patptr.1475, align 1, !tbaa !1
  %cmp29 = icmp eq i8 %4, 10
  %incdec.ptr32 = getelementptr inbounds i8* %patptr.1475, i64 1
  br i1 %cmp29, label %while.end, label %while.cond25

while.end:                                        ; preds = %while.cond25, %land.rhs, %while.cond25.preheader
  %cmp26.lcssa = phi i1 [ false, %while.cond25.preheader ], [ true, %land.rhs ], [ false, %while.cond25 ]
  %patptr.1.lcssa = phi i8* [ %incdec.ptr24, %while.cond25.preheader ], [ %patptr.1475, %land.rhs ], [ %incdec.ptr32, %while.cond25 ]
  %incdec.ptr36 = getelementptr inbounds i8* %patptr.1.lcssa, i64 1
  %incdec.ptr36.patptr.1 = select i1 %cmp26.lcssa, i8* %incdec.ptr36, i8* %patptr.1.lcssa
  br label %while.cond.backedge

if.then43:                                        ; preds = %if.else
  %5 = load i32* %flags, align 4, !tbaa !3
  %and45 = and i32 %5, 2
  %cmp46 = icmp eq i32 %and45, 0
  br i1 %cmp46, label %land.lhs.true, label %while.cond.backedge

land.lhs.true:                                    ; preds = %if.then43
  %6 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings = getelementptr inbounds %struct.cop* %6, i64 0, i32 14
  %7 = load %struct.sv** %cop_warnings, align 8, !tbaa !0
  %cmp48 = icmp eq %struct.sv* %7, null
  br i1 %cmp48, label %lor.lhs.false62, label %land.lhs.true50

land.lhs.true50:                                  ; preds = %land.lhs.true
  %8 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings51 = getelementptr inbounds %struct.cop* %8, i64 0, i32 14
  %9 = load %struct.sv** %cop_warnings51, align 8, !tbaa !0
  %cmp52 = icmp eq %struct.sv* %9, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp52, label %lor.lhs.false62, label %land.lhs.true54

land.lhs.true54:                                  ; preds = %land.lhs.true50
  %10 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings55 = getelementptr inbounds %struct.cop* %10, i64 0, i32 14
  %11 = load %struct.sv** %cop_warnings55, align 8, !tbaa !0
  %cmp56 = icmp eq %struct.sv* %11, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp56, label %if.then70, label %lor.lhs.false58

lor.lhs.false58:                                  ; preds = %land.lhs.true54
  %12 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings59 = getelementptr inbounds %struct.cop* %12, i64 0, i32 14
  %13 = load %struct.sv** %cop_warnings59, align 8, !tbaa !0
  %sv_any = getelementptr inbounds %struct.sv* %13, i64 0, i32 0
  %14 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_pv = bitcast i8* %14 to i8**
  %15 = load i8** %xpv_pv, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i8* %15, i64 10
  %16 = load i8* %arrayidx, align 1, !tbaa !1
  %and61 = and i8 %16, 16
  %tobool = icmp eq i8 %and61, 0
  br i1 %tobool, label %lor.lhs.false62, label %if.then70

lor.lhs.false62:                                  ; preds = %lor.lhs.false58, %land.lhs.true50, %land.lhs.true
  %17 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings63 = getelementptr inbounds %struct.cop* %17, i64 0, i32 14
  %18 = load %struct.sv** %cop_warnings63, align 8, !tbaa !0
  %cmp64 = icmp eq %struct.sv* %18, null
  br i1 %cmp64, label %land.lhs.true66, label %while.cond.backedge

land.lhs.true66:                                  ; preds = %lor.lhs.false62
  %19 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and68 = and i8 %19, 1
  %tobool69 = icmp eq i8 %and68, 0
  br i1 %tobool69, label %while.cond.backedge, label %if.then70

if.then70:                                        ; preds = %lor.lhs.false58, %land.lhs.true66, %land.lhs.true54
  %20 = load i32* %flags, align 4, !tbaa !3
  %or = or i32 %20, 2
  store i32 %or, i32* %flags, align 4, !tbaa !3
  %and73 = and i32 %20, 1
  %tobool74 = icmp ne i32 %and73, 0
  %cond = select i1 %tobool74, i8* getelementptr inbounds ([5 x i8]* @.str17, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str18, i64 0, i64 0)
  call void (i32, i8*, ...)* @Perl_warner(i32 42, i8* getelementptr inbounds ([23 x i8]* @.str16, i64 0, i64 0), i8* %cond) #8
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.then70, %lor.lhs.false62, %if.then43, %if.then, %land.lhs.true66, %while.end
  %patptr.0.be = phi i8* [ %incdec.ptr, %if.then ], [ %incdec.ptr24, %if.then70 ], [ %incdec.ptr24, %land.lhs.true66 ], [ %incdec.ptr24, %lor.lhs.false62 ], [ %incdec.ptr24, %if.then43 ], [ %incdec.ptr36.patptr.1, %while.end ]
  %cmp = icmp ult i8* %patptr.0.be, %1
  br i1 %cmp, label %while.body, label %return

if.then79:                                        ; preds = %if.else
  %21 = load i8* %incdec.ptr24, align 1, !tbaa !1
  %.off = add i8 %21, -48
  %22 = icmp ult i8 %.off, 10
  br i1 %22, label %if.then95, label %lor.lhs.false87

lor.lhs.false87:                                  ; preds = %if.then79
  switch i8 %21, label %if.end100 [
    i8 42, label %if.then95
    i8 91, label %if.then95
  ]

if.then95:                                        ; preds = %lor.lhs.false87, %lor.lhs.false87, %if.then79
  %23 = load i32* %flags, align 4, !tbaa !3
  %and97 = and i32 %23, 1
  %tobool98 = icmp ne i32 %and97, 0
  %cond99 = select i1 %tobool98, i8* getelementptr inbounds ([5 x i8]* @.str17, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str18, i64 0, i64 0)
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([35 x i8]* @.str19, i64 0, i64 0), i8* %cond99) #8
  br label %if.end100

if.end100:                                        ; preds = %lor.lhs.false87, %if.then95
  %grpbeg = getelementptr inbounds %struct.tempsym_t* %symptr, i64 0, i32 2
  store i8* %incdec.ptr24, i8** %grpbeg, align 8, !tbaa !0
  %call = call fastcc i8* @S_group_end(i8* %incdec.ptr24, i8* %1, i8 signext 41) #7
  %grpend = getelementptr inbounds %struct.tempsym_t* %symptr, i64 0, i32 3
  store i8* %call, i8** %grpend, align 8, !tbaa !0
  %add.ptr = getelementptr inbounds i8* %call, i64 1
  %level = getelementptr inbounds %struct.tempsym_t* %symptr, i64 0, i32 7
  %24 = load i32* %level, align 4, !tbaa !3
  %cmp101 = icmp sgt i32 %24, 99
  br i1 %cmp101, label %if.then103, label %while.cond110.preheader

if.then103:                                       ; preds = %if.end100
  %25 = load i32* %flags, align 4, !tbaa !3
  %and105 = and i32 %25, 1
  %tobool106 = icmp ne i32 %and105, 0
  %cond107 = select i1 %tobool106, i8* getelementptr inbounds ([5 x i8]* @.str17, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str18, i64 0, i64 0)
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([34 x i8]* @.str20, i64 0, i64 0), i8* %cond107) #8
  br label %while.cond110.preheader

while.cond110.preheader:                          ; preds = %if.else, %if.end100, %if.then103
  %patptr.2.ph = phi i8* [ %add.ptr, %if.then103 ], [ %add.ptr, %if.end100 ], [ %incdec.ptr24, %if.else ]
  %cmp111469 = icmp ult i8* %patptr.2.ph, %1
  br i1 %cmp111469, label %while.body113, label %if.else315

while.body113:                                    ; preds = %while.cond110.preheader, %if.end167
  %patptr.2471 = phi i8* [ %incdec.ptr169, %if.end167 ], [ %patptr.2.ph, %while.cond110.preheader ]
  %code.0470 = phi i32 [ %or168, %if.end167 ], [ %conv451, %while.cond110.preheader ]
  %26 = load i8* %patptr.2471, align 1, !tbaa !1
  %cond325 = icmp eq i8 %26, 33
  %. = select i1 %cond325, i32 256, i32 0
  br i1 %cond325, label %if.end118, label %if.then174

if.end118:                                        ; preds = %while.body113
  %and119 = and i32 %code.0470, 255
  %memchr = call i8* @memchr(i8* getelementptr inbounds ([9 x i8]* @.str21, i64 0, i64 0), i32 %and119, i64 9)
  %tobool121 = icmp eq i8* %memchr, null
  br i1 %tobool121, label %if.then122, label %if.end128

if.then122:                                       ; preds = %if.end118
  %27 = load i32* %flags, align 4, !tbaa !3
  %and125 = and i32 %27, 1
  %tobool126 = icmp ne i32 %and125, 0
  %cond127 = select i1 %tobool126, i8* getelementptr inbounds ([5 x i8]* @.str17, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str18, i64 0, i64 0)
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([39 x i8]* @.str22, i64 0, i64 0), i32 33, i8* getelementptr inbounds ([9 x i8]* @.str21, i64 0, i64 0), i8* %cond127) #8
  br label %if.end128

if.end128:                                        ; preds = %if.end118, %if.then122
  %28 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings129 = getelementptr inbounds %struct.cop* %28, i64 0, i32 14
  %29 = load %struct.sv** %cop_warnings129, align 8, !tbaa !0
  %cmp130 = icmp eq %struct.sv* %29, null
  br i1 %cmp130, label %lor.lhs.false148, label %land.lhs.true132

land.lhs.true132:                                 ; preds = %if.end128
  %30 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings133 = getelementptr inbounds %struct.cop* %30, i64 0, i32 14
  %31 = load %struct.sv** %cop_warnings133, align 8, !tbaa !0
  %cmp134 = icmp eq %struct.sv* %31, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp134, label %lor.lhs.false148, label %land.lhs.true136

land.lhs.true136:                                 ; preds = %land.lhs.true132
  %32 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings137 = getelementptr inbounds %struct.cop* %32, i64 0, i32 14
  %33 = load %struct.sv** %cop_warnings137, align 8, !tbaa !0
  %cmp138 = icmp eq %struct.sv* %33, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp138, label %if.then156, label %lor.lhs.false140

lor.lhs.false140:                                 ; preds = %land.lhs.true136
  %34 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings141 = getelementptr inbounds %struct.cop* %34, i64 0, i32 14
  %35 = load %struct.sv** %cop_warnings141, align 8, !tbaa !0
  %sv_any142 = getelementptr inbounds %struct.sv* %35, i64 0, i32 0
  %36 = load i8** %sv_any142, align 8, !tbaa !0
  %xpv_pv143 = bitcast i8* %36 to i8**
  %37 = load i8** %xpv_pv143, align 8, !tbaa !0
  %arrayidx144 = getelementptr inbounds i8* %37, i64 10
  %38 = load i8* %arrayidx144, align 1, !tbaa !1
  %and146 = and i8 %38, 16
  %tobool147 = icmp eq i8 %and146, 0
  br i1 %tobool147, label %lor.lhs.false148, label %if.then156

lor.lhs.false148:                                 ; preds = %lor.lhs.false140, %land.lhs.true132, %if.end128
  %39 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings149 = getelementptr inbounds %struct.cop* %39, i64 0, i32 14
  %40 = load %struct.sv** %cop_warnings149, align 8, !tbaa !0
  %cmp150 = icmp eq %struct.sv* %40, null
  br i1 %cmp150, label %land.lhs.true152, label %if.end167

land.lhs.true152:                                 ; preds = %lor.lhs.false148
  %41 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and154 = and i8 %41, 1
  %tobool155 = icmp eq i8 %and154, 0
  br i1 %tobool155, label %if.end167, label %if.then156

if.then156:                                       ; preds = %lor.lhs.false140, %land.lhs.true152, %land.lhs.true136
  %and157 = and i32 %., %code.0470
  %tobool158 = icmp eq i32 %and157, 0
  br i1 %tobool158, label %if.end167, label %if.then159

if.then159:                                       ; preds = %if.then156
  %42 = load i8* %patptr.2471, align 1, !tbaa !1
  %conv160 = sext i8 %42 to i32
  %43 = load i32* %flags, align 4, !tbaa !3
  %and163 = and i32 %43, 1
  %tobool164 = icmp ne i32 %and163, 0
  %cond165 = select i1 %tobool164, i8* getelementptr inbounds ([5 x i8]* @.str17, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str18, i64 0, i64 0)
  call void (i32, i8*, ...)* @Perl_warner(i32 42, i8* getelementptr inbounds ([41 x i8]* @.str23, i64 0, i64 0), i32 %conv160, i32 %and119, i8* %cond165) #8
  br label %if.end167

if.end167:                                        ; preds = %if.then156, %land.lhs.true152, %if.then159, %lor.lhs.false148
  %or168 = or i32 %., %code.0470
  %incdec.ptr169 = getelementptr inbounds i8* %patptr.2471, i64 1
  %cmp111 = icmp ult i8* %incdec.ptr169, %1
  br i1 %cmp111, label %while.body113, label %if.else315

if.then174:                                       ; preds = %while.body113
  %.off460 = add i8 %26, -48
  %44 = icmp ult i8 %.off460, 10
  br i1 %44, label %if.then182, label %if.else184

if.then182:                                       ; preds = %if.then174
  %length = getelementptr inbounds %struct.tempsym_t* %symptr, i64 0, i32 5
  %call183 = call fastcc i8* @S_get_num(i8* %patptr.2471, i32* %length) #7
  %howlen = getelementptr inbounds %struct.tempsym_t* %symptr, i64 0, i32 6
  store i32 1, i32* %howlen, align 4, !tbaa !1
  br label %while.cond232.preheader

if.else184:                                       ; preds = %if.then174
  switch i8 %26, label %if.else226 [
    i8 42, label %if.then188
    i8 91, label %if.then195
  ]

if.then188:                                       ; preds = %if.else184
  %incdec.ptr189 = getelementptr inbounds i8* %patptr.2471, i64 1
  %howlen190 = getelementptr inbounds %struct.tempsym_t* %symptr, i64 0, i32 6
  store i32 2, i32* %howlen190, align 4, !tbaa !1
  br label %while.cond232.preheader

if.then195:                                       ; preds = %if.else184
  %incdec.ptr196 = getelementptr inbounds i8* %patptr.2471, i64 1
  %howlen197 = getelementptr inbounds %struct.tempsym_t* %symptr, i64 0, i32 6
  store i32 1, i32* %howlen197, align 4, !tbaa !1
  %call198 = call fastcc i8* @S_group_end(i8* %incdec.ptr196, i8* %1, i8 signext 93) #7
  %add.ptr199 = getelementptr inbounds i8* %call198, i64 1
  %45 = load i8* %incdec.ptr196, align 1, !tbaa !1
  %.off461 = add i8 %45, -48
  %46 = icmp ult i8 %.off461, 10
  br i1 %46, label %if.then207, label %if.else219

if.then207:                                       ; preds = %if.then195
  %length208 = getelementptr inbounds %struct.tempsym_t* %symptr, i64 0, i32 5
  %call209 = call fastcc i8* @S_get_num(i8* %incdec.ptr196, i32* %length208) #7
  %47 = load i8* %call209, align 1, !tbaa !1
  %cmp211 = icmp eq i8 %47, 93
  br i1 %cmp211, label %while.cond232.preheader, label %if.then213

if.then213:                                       ; preds = %if.then207
  %48 = load i32* %flags, align 4, !tbaa !3
  %and215 = and i32 %48, 1
  %tobool216 = icmp ne i32 %and215, 0
  %cond217 = select i1 %tobool216, i8* getelementptr inbounds ([5 x i8]* @.str17, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str18, i64 0, i64 0)
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([30 x i8]* @.str24, i64 0, i64 0), i8* %cond217) #8
  br label %while.cond232.preheader

if.else219:                                       ; preds = %if.then195
  %savsym.sroa.0.0.idx341 = getelementptr inbounds [36 x i8]* %savsym.sroa.0, i64 0, i64 0
  call void @llvm.lifetime.start(i64 36, i8* %savsym.sroa.0.0.idx341)
  %savsym.sroa.2.0.idx = getelementptr inbounds [16 x i8]* %savsym.sroa.2, i64 0, i64 0
  call void @llvm.lifetime.start(i64 16, i8* %savsym.sroa.2.0.idx)
  %savsym.sroa.0.0.cast = bitcast %struct.tempsym_t* %symptr to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %savsym.sroa.0.0.idx341, i8* %savsym.sroa.0.0.cast, i64 36, i32 8, i1 false)
  %savsym.sroa.1.36.idx330 = getelementptr inbounds %struct.tempsym_t* %symptr, i64 0, i32 5
  %savsym.sroa.2.40.cast = bitcast i32* %howlen197 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %savsym.sroa.2.0.idx, i8* %savsym.sroa.2.40.cast, i64 16, i32 8, i1 false)
  store i8* %call198, i8** %patend2, align 8, !tbaa !0
  store i8* %incdec.ptr196, i8** %patptr1, align 8, !tbaa !0
  %call223 = call fastcc i32 @S_measure_struct(%struct.tempsym_t* %symptr) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %savsym.sroa.0.0.cast, i8* %savsym.sroa.0.0.idx341, i64 36, i32 8, i1 false)
  store i32 %call223, i32* %savsym.sroa.1.36.idx330, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %savsym.sroa.2.40.cast, i8* %savsym.sroa.2.0.idx, i64 16, i32 8, i1 false)
  call void @llvm.lifetime.end(i64 36, i8* %savsym.sroa.0.0.idx341)
  call void @llvm.lifetime.end(i64 16, i8* %savsym.sroa.2.0.idx)
  br label %while.cond232.preheader

if.else226:                                       ; preds = %if.else184
  %howlen227 = getelementptr inbounds %struct.tempsym_t* %symptr, i64 0, i32 6
  store i32 0, i32* %howlen227, align 4, !tbaa !1
  %length228 = getelementptr inbounds %struct.tempsym_t* %symptr, i64 0, i32 5
  store i32 1, i32* %length228, align 4, !tbaa !3
  br label %while.cond232.preheader

while.cond232.preheader:                          ; preds = %if.then188, %if.else219, %if.then213, %if.else226, %if.then182, %if.then207
  %patptr.3.ph = phi i8* [ %add.ptr199, %if.then207 ], [ %call183, %if.then182 ], [ %patptr.2471, %if.else226 ], [ %add.ptr199, %if.then213 ], [ %add.ptr199, %if.else219 ], [ %incdec.ptr189, %if.then188 ]
  %cmp233464 = icmp ult i8* %patptr.3.ph, %1
  br i1 %cmp233464, label %while.body235, label %if.end318

while.body235:                                    ; preds = %while.cond232.preheader, %while.cond232.backedge
  %patptr.3465 = phi i8* [ %patptr.3.be, %while.cond232.backedge ], [ %patptr.3.ph, %while.cond232.preheader ]
  %49 = load i8* %patptr.3465, align 1, !tbaa !1
  switch i8 %49, label %if.end318 [
    i8 32, label %if.then255
    i8 9, label %if.then255
    i8 10, label %if.then255
    i8 13, label %if.then255
    i8 12, label %if.then255
    i8 35, label %while.cond263
    i8 47, label %if.then283
  ]

if.then255:                                       ; preds = %while.body235, %while.body235, %while.body235, %while.body235, %while.body235
  %incdec.ptr256 = getelementptr inbounds i8* %patptr.3465, i64 1
  br label %while.cond232.backedge

while.cond232.backedge:                           ; preds = %if.then255, %while.end273
  %patptr.3.be = phi i8* [ %incdec.ptr256, %if.then255 ], [ %incdec.ptr277.patptr.4, %while.end273 ]
  %cmp233 = icmp ult i8* %patptr.3.be, %1
  br i1 %cmp233, label %while.body235, label %if.end318

while.cond263:                                    ; preds = %while.body235, %land.rhs266
  %patptr.3.pn = phi i8* [ %patptr.4, %land.rhs266 ], [ %patptr.3465, %while.body235 ]
  %patptr.4 = getelementptr inbounds i8* %patptr.3.pn, i64 1
  %cmp264 = icmp ult i8* %patptr.4, %1
  br i1 %cmp264, label %land.rhs266, label %while.end273

land.rhs266:                                      ; preds = %while.cond263
  %50 = load i8* %patptr.4, align 1, !tbaa !1
  %cmp268 = icmp eq i8 %50, 10
  br i1 %cmp268, label %while.end273, label %while.cond263

while.end273:                                     ; preds = %land.rhs266, %while.cond263
  %cmp264.lcssa = phi i1 [ true, %land.rhs266 ], [ false, %while.cond263 ]
  %incdec.ptr277 = getelementptr inbounds i8* %patptr.3.pn, i64 2
  %incdec.ptr277.patptr.4 = select i1 %cmp264.lcssa, i8* %incdec.ptr277, i8* %patptr.4
  br label %while.cond232.backedge

if.then283:                                       ; preds = %while.body235
  %51 = load i32* %flags, align 4, !tbaa !3
  %or285 = or i32 %51, 4
  store i32 %or285, i32* %flags, align 4, !tbaa !3
  %incdec.ptr286 = getelementptr inbounds i8* %patptr.3465, i64 1
  %cmp287 = icmp ult i8* %incdec.ptr286, %1
  br i1 %cmp287, label %land.lhs.true289, label %if.end318

land.lhs.true289:                                 ; preds = %if.then283
  %52 = load i8* %incdec.ptr286, align 1, !tbaa !1
  %.off462 = add i8 %52, -48
  %53 = icmp ult i8 %.off462, 10
  br i1 %53, label %if.then305, label %lor.lhs.false297

lor.lhs.false297:                                 ; preds = %land.lhs.true289
  switch i8 %52, label %if.end318 [
    i8 42, label %if.then305
    i8 91, label %if.then305
  ]

if.then305:                                       ; preds = %lor.lhs.false297, %lor.lhs.false297, %land.lhs.true289
  %and307 = and i32 %51, 1
  %tobool308 = icmp ne i32 %and307, 0
  %cond309 = select i1 %tobool308, i8* getelementptr inbounds ([5 x i8]* @.str17, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str18, i64 0, i64 0)
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([39 x i8]* @.str25, i64 0, i64 0), i8* %cond309) #8
  br label %if.end318

if.else315:                                       ; preds = %if.end167, %while.cond110.preheader
  %patptr.2.lcssa = phi i8* [ %patptr.2.ph, %while.cond110.preheader ], [ %incdec.ptr169, %if.end167 ]
  %code.0.lcssa = phi i32 [ %conv451, %while.cond110.preheader ], [ %or168, %if.end167 ]
  %howlen316 = getelementptr inbounds %struct.tempsym_t* %symptr, i64 0, i32 6
  store i32 0, i32* %howlen316, align 4, !tbaa !1
  %length317 = getelementptr inbounds %struct.tempsym_t* %symptr, i64 0, i32 5
  store i32 1, i32* %length317, align 4, !tbaa !3
  br label %if.end318

if.end318:                                        ; preds = %while.cond232.preheader, %while.body235, %while.cond232.backedge, %lor.lhs.false297, %if.then283, %if.then305, %if.else315
  %code.0467 = phi i32 [ %code.0470, %if.then305 ], [ %code.0470, %if.then283 ], [ %code.0.lcssa, %if.else315 ], [ %code.0470, %lor.lhs.false297 ], [ %code.0470, %while.cond232.backedge ], [ %code.0470, %while.body235 ], [ %code.0470, %while.cond232.preheader ]
  %patptr.5 = phi i8* [ %incdec.ptr286, %if.then305 ], [ %incdec.ptr286, %if.then283 ], [ %patptr.2.lcssa, %if.else315 ], [ %incdec.ptr286, %lor.lhs.false297 ], [ %patptr.3.be, %while.cond232.backedge ], [ %patptr.3465, %while.body235 ], [ %patptr.3.ph, %while.cond232.preheader ]
  %code319 = getelementptr inbounds %struct.tempsym_t* %symptr, i64 0, i32 4
  store i32 %code.0467, i32* %code319, align 4, !tbaa !3
  br label %return

return:                                           ; preds = %entry, %while.cond.backedge, %if.end318
  %storemerge = phi i8* [ %patptr.5, %if.end318 ], [ %0, %entry ], [ %patptr.0.be, %while.cond.backedge ]
  %retval.0 = phi i8 [ 1, %if.end318 ], [ 0, %entry ], [ 0, %while.cond.backedge ]
  store i8* %storemerge, i8** %patptr1, align 8, !tbaa !0
  ret i8 %retval.0
}
