define double @Perl_scan_oct(i8* %start, i64 %len, i64* nocapture %retlen) #1 {
entry:
  %len.addr = alloca i64, align 8
  %rnv = alloca double, align 8
  %flags = alloca i32, align 4
  store i64 %len, i64* %len.addr, align 8, !tbaa !0
  %0 = load i64* %retlen, align 8, !tbaa !0
  %tobool = icmp ne i64 %0, 0
  %cond = zext i1 %tobool to i32
  store i32 %cond, i32* %flags, align 4, !tbaa !3
  %call = call i64 @Perl_grok_oct(i8* %start, i64* %len.addr, i32* %flags, double* %rnv) #6
  %1 = load i64* %len.addr, align 8, !tbaa !0
  store i64 %1, i64* %retlen, align 8, !tbaa !0
  %2 = load i32* %flags, align 4, !tbaa !3
  %and = and i32 %2, 2
  %tobool1 = icmp eq i32 %and, 0
  br i1 %tobool1, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %3 = load double* %rnv, align 8, !tbaa !5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %conv = uitofp i64 %call to double
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond2 = phi double [ %3, %cond.true ], [ %conv, %cond.false ]
  ret double %cond2
}
