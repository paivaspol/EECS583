define %struct.op* @Perl_pp_unstack() #0 {
entry:
  store i8 0, i8* @PL_tainted, align 1, !tbaa !1
  %0 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %1 = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_cxix = getelementptr inbounds %struct.stackinfo* %1, i64 0, i32 2
  %2 = load i32* %si_cxix, align 4, !tbaa !3
  %idxprom = sext i32 %2 to i64
  %si_cxstack = getelementptr inbounds %struct.stackinfo* %1, i64 0, i32 1
  %3 = load %struct.context** %si_cxstack, align 8, !tbaa !0
  %blku_oldsp = getelementptr inbounds %struct.context* %3, i64 %idxprom, i32 1, i32 0, i32 0
  %4 = load i32* %blku_oldsp, align 4, !tbaa !3
  %idx.ext = sext i32 %4 to i64
  %add.ptr = getelementptr inbounds %struct.sv** %0, i64 %idx.ext
  store %struct.sv** %add.ptr, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %5 = load i32* @PL_tmps_ix, align 4, !tbaa !3
  %6 = load i32* @PL_tmps_floor, align 4, !tbaa !3
  %cmp = icmp sgt i32 %5, %6
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @Perl_free_tmps() #8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32* @PL_scopestack_ix, align 4, !tbaa !3
  %sub = add nsw i32 %7, -1
  %idxprom1 = sext i32 %sub to i64
  %8 = load i32** @PL_scopestack, align 8, !tbaa !0
  %arrayidx2 = getelementptr inbounds i32* %8, i64 %idxprom1
  %9 = load i32* %arrayidx2, align 4, !tbaa !3
  %10 = load i32* @PL_savestack_ix, align 4, !tbaa !3
  %cmp3 = icmp sgt i32 %10, %9
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  tail call void @Perl_leave_scope(i32 %9) #8
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end
  %11 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next = getelementptr inbounds %struct.op* %11, i64 0, i32 0
  %12 = load %struct.op** %op_next, align 8, !tbaa !0
  ret %struct.op* %12
}
