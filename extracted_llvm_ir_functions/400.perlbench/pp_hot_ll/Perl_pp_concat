define %struct.op* @Perl_pp_concat() #0 {
entry:
  %llen = alloca i64, align 8
  %rlen = alloca i64, align 8
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags = getelementptr inbounds %struct.op* %1, i64 0, i32 6
  %2 = load i8* %op_flags, align 1, !tbaa !1
  %and = and i8 %2, 64
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.sv** %0, i64 -1
  br label %cond.end

cond.false:                                       ; preds = %entry
  %op_targ = getelementptr inbounds %struct.op* %1, i64 0, i32 3
  %3 = load i64* %op_targ, align 8, !tbaa !4
  %4 = load %struct.sv*** @PL_curpad, align 8, !tbaa !0
  %arrayidx1 = getelementptr inbounds %struct.sv** %4, i64 %3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi %struct.sv** [ %arrayidx, %cond.true ], [ %arrayidx1, %cond.false ]
  %cond = load %struct.sv** %cond.in, align 8
  %5 = load i64* @PL_amagic_generation, align 8, !tbaa !4
  %tobool2 = icmp eq i64 %5, 0
  br i1 %tobool2, label %cond.end.if.end31_crit_edge, label %if.then

cond.end.if.end31_crit_edge:                      ; preds = %cond.end
  %incdec.ptr33.pre = getelementptr inbounds %struct.sv** %0, i64 -1
  br label %if.end31

if.then:                                          ; preds = %cond.end
  %6 = load %struct.sv** %0, align 8, !tbaa !0
  %add.ptr = getelementptr inbounds %struct.sv** %0, i64 -1
  %7 = load %struct.sv** %add.ptr, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %7, i64 0, i32 2
  %8 = load i32* %sv_flags, align 4, !tbaa !3
  %and3 = and i32 %8, 268435456
  %tobool4 = icmp eq i32 %and3, 0
  br i1 %tobool4, label %lor.lhs.false, label %land.lhs.true

lor.lhs.false:                                    ; preds = %if.then
  %sv_flags5 = getelementptr inbounds %struct.sv* %6, i64 0, i32 2
  %9 = load i32* %sv_flags5, align 4, !tbaa !3
  %and6 = and i32 %9, 268435456
  %tobool7 = icmp eq i32 %and6, 0
  br i1 %tobool7, label %if.end31, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.then
  %tobool11 = icmp ne i8 %and, 0
  %cond12 = select i1 %tobool11, i32 4, i32 0
  %call = call %struct.sv* @Perl_amagic_call(%struct.sv* %7, %struct.sv* %6, i32 54, i32 %cond12) #8
  %tobool13 = icmp eq %struct.sv* %call, null
  br i1 %tobool13, label %if.end31, label %if.then14

if.then14:                                        ; preds = %land.lhs.true
  %10 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds %struct.sv** %10, i64 -1
  %11 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags15 = getelementptr inbounds %struct.op* %11, i64 0, i32 6
  %12 = load i8* %op_flags15, align 1, !tbaa !1
  %and17 = and i8 %12, 64
  %tobool18 = icmp eq i8 %and17, 0
  %sv_flags20 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 2
  br i1 %tobool18, label %lor.lhs.false19, label %if.then23

lor.lhs.false19:                                  ; preds = %if.then14
  %13 = load i32* %sv_flags20, align 4, !tbaa !3
  %and21 = and i32 %13, 1024
  %tobool22 = icmp eq i32 %and21, 0
  br i1 %tobool22, label %if.end29, label %if.then23

if.then23:                                        ; preds = %if.then14, %lor.lhs.false19
  call void @Perl_sv_setsv_flags(%struct.sv* %cond, %struct.sv* %call, i32 2) #8
  %14 = load i32* %sv_flags20, align 4, !tbaa !3
  %and25 = and i32 %14, 16384
  %tobool26 = icmp eq i32 %and25, 0
  br i1 %tobool26, label %if.end29, label %if.then27

if.then27:                                        ; preds = %if.then23
  %call28 = call i32 @Perl_mg_set(%struct.sv* %cond) #8
  br label %if.end29

if.end29:                                         ; preds = %lor.lhs.false19, %if.then27, %if.then23
  %storemerge = phi %struct.sv* [ %cond, %if.then23 ], [ %cond, %if.then27 ], [ %call, %lor.lhs.false19 ]
  store %struct.sv* %storemerge, %struct.sv** %incdec.ptr, align 8, !tbaa !0
  br label %return

if.end31:                                         ; preds = %land.lhs.true, %cond.end.if.end31_crit_edge, %lor.lhs.false
  %incdec.ptr33.pre-phi = phi %struct.sv** [ %incdec.ptr33.pre, %cond.end.if.end31_crit_edge ], [ %add.ptr, %lor.lhs.false ], [ %add.ptr, %land.lhs.true ]
  %15 = load %struct.sv** %0, align 8, !tbaa !0
  %16 = load %struct.sv** %incdec.ptr33.pre-phi, align 8, !tbaa !0
  %sv_flags35 = getelementptr inbounds %struct.sv* %15, i64 0, i32 2
  %17 = load i32* %sv_flags35, align 4, !tbaa !3
  %and36 = and i32 %17, 262144
  %cmp = icmp eq i32 %and36, 0
  br i1 %cmp, label %cond.false40, label %cond.true38

cond.true38:                                      ; preds = %if.end31
  %sv_any = getelementptr inbounds %struct.sv* %15, i64 0, i32 0
  %18 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %18, i64 8
  %19 = bitcast i8* %xpv_cur to i64*
  %20 = load i64* %19, align 8, !tbaa !4
  store i64 %20, i64* %rlen, align 8, !tbaa !4
  %xpv_pv = bitcast i8* %18 to i8**
  %21 = load i8** %xpv_pv, align 8, !tbaa !0
  br label %cond.end42

cond.false40:                                     ; preds = %if.end31
  %call41 = call i8* @Perl_sv_2pv_flags(%struct.sv* %15, i64* %rlen, i32 2) #8
  %.pre = load i32* %sv_flags35, align 4, !tbaa !3
  br label %cond.end42

cond.end42:                                       ; preds = %cond.false40, %cond.true38
  %22 = phi i32 [ %17, %cond.true38 ], [ %.pre, %cond.false40 ]
  %cond43 = phi i8* [ %21, %cond.true38 ], [ %call41, %cond.false40 ]
  %and45 = and i32 %22, 536870912
  %tobool46 = icmp eq i32 %and45, 0
  br i1 %tobool46, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %cond.end42
  %23 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %op_private = getelementptr inbounds %struct.cop* %23, i64 0, i32 7
  %24 = load i8* %op_private, align 1, !tbaa !1
  %and48 = and i8 %24, 8
  %tobool49 = icmp ne i8 %and48, 0
  br label %land.end

land.end:                                         ; preds = %cond.end42, %land.rhs
  %25 = phi i1 [ true, %cond.end42 ], [ %tobool49, %land.rhs ]
  %cmp52 = icmp ne %struct.sv* %cond, %15
  %cmp55 = icmp eq %struct.sv* %15, %16
  %or.cond = or i1 %cmp52, %cmp55
  br i1 %or.cond, label %if.end73, label %if.then57

if.then57:                                        ; preds = %land.end
  %26 = load i64* %rlen, align 8, !tbaa !4
  %call58 = call %struct.sv* @Perl_newSVpvn(i8* %cond43, i64 %26) #8
  %call59 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call58) #8
  %sv_flags60 = getelementptr inbounds %struct.sv* %call59, i64 0, i32 2
  %27 = load i32* %sv_flags60, align 4, !tbaa !3
  %and61 = and i32 %27, 262144
  %cmp62 = icmp eq i32 %and61, 0
  br i1 %cmp62, label %cond.false69, label %cond.true64

cond.true64:                                      ; preds = %if.then57
  %sv_any65 = getelementptr inbounds %struct.sv* %call59, i64 0, i32 0
  %28 = load i8** %sv_any65, align 8, !tbaa !0
  %xpv_cur66 = getelementptr inbounds i8* %28, i64 8
  %29 = bitcast i8* %xpv_cur66 to i64*
  %30 = load i64* %29, align 8, !tbaa !4
  store i64 %30, i64* %rlen, align 8, !tbaa !4
  %xpv_pv68 = bitcast i8* %28 to i8**
  %31 = load i8** %xpv_pv68, align 8, !tbaa !0
  br label %if.end73

cond.false69:                                     ; preds = %if.then57
  %call70 = call i8* @Perl_sv_2pv_flags(%struct.sv* %call59, i64* %rlen, i32 2) #8
  br label %if.end73

if.end73:                                         ; preds = %cond.true64, %cond.false69, %land.end
  %right32.0 = phi %struct.sv* [ %15, %land.end ], [ %call59, %cond.false69 ], [ %call59, %cond.true64 ]
  %rpv.0 = phi i8* [ %cond43, %land.end ], [ %call70, %cond.false69 ], [ %31, %cond.true64 ]
  %rcopied.0 = phi i8 [ 0, %land.end ], [ 1, %cond.false69 ], [ 1, %cond.true64 ]
  %cmp74 = icmp eq %struct.sv* %cond, %16
  %sv_flags77 = getelementptr inbounds %struct.sv* %16, i64 0, i32 2
  %32 = load i32* %sv_flags77, align 4, !tbaa !3
  br i1 %cmp74, label %if.else111, label %if.then76

if.then76:                                        ; preds = %if.end73
  %and78 = and i32 %32, 262144
  %cmp79 = icmp eq i32 %and78, 0
  br i1 %cmp79, label %cond.false86, label %cond.true81

cond.true81:                                      ; preds = %if.then76
  %sv_any82 = getelementptr inbounds %struct.sv* %16, i64 0, i32 0
  %33 = load i8** %sv_any82, align 8, !tbaa !0
  %xpv_cur83 = getelementptr inbounds i8* %33, i64 8
  %34 = bitcast i8* %xpv_cur83 to i64*
  %35 = load i64* %34, align 8, !tbaa !4
  store i64 %35, i64* %llen, align 8, !tbaa !4
  %xpv_pv85 = bitcast i8* %33 to i8**
  %36 = load i8** %xpv_pv85, align 8, !tbaa !0
  br label %cond.end88

cond.false86:                                     ; preds = %if.then76
  %call87 = call i8* @Perl_sv_2pv_flags(%struct.sv* %16, i64* %llen, i32 2) #8
  %.pre254 = load i32* %sv_flags77, align 4, !tbaa !3
  br label %cond.end88

cond.end88:                                       ; preds = %cond.false86, %cond.true81
  %37 = phi i32 [ %32, %cond.true81 ], [ %.pre254, %cond.false86 ]
  %cond89 = phi i8* [ %36, %cond.true81 ], [ %call87, %cond.false86 ]
  %and91 = and i32 %37, 536870912
  %tobool92 = icmp eq i32 %and91, 0
  br i1 %tobool92, label %land.end100, label %land.rhs93

land.rhs93:                                       ; preds = %cond.end88
  %38 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %op_private94 = getelementptr inbounds %struct.cop* %38, i64 0, i32 7
  %39 = load i8* %op_private94, align 1, !tbaa !1
  %and96 = and i8 %39, 8
  %tobool97 = icmp ne i8 %and96, 0
  br label %land.end100

land.end100:                                      ; preds = %cond.end88, %land.rhs93
  %40 = phi i1 [ %tobool97, %land.rhs93 ], [ true, %cond.end88 ]
  %conv103 = zext i1 %40 to i8
  %41 = load i64* %llen, align 8, !tbaa !4
  call void @Perl_sv_setpvn(%struct.sv* %cond, i8* %cond89, i64 %41) #8
  %sv_flags108 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 2
  %42 = load i32* %sv_flags108, align 4, !tbaa !3
  br i1 %40, label %if.else107, label %if.then105

if.then105:                                       ; preds = %land.end100
  %or = or i32 %42, 536870912
  store i32 %or, i32* %sv_flags108, align 4, !tbaa !3
  br label %if.end158

if.else107:                                       ; preds = %land.end100
  %and109 = and i32 %42, -536870913
  store i32 %and109, i32* %sv_flags108, align 4, !tbaa !3
  br label %if.end158

if.else111:                                       ; preds = %if.end73
  %and113 = and i32 %32, 8192
  %tobool114 = icmp eq i32 %and113, 0
  br i1 %tobool114, label %if.end117, label %if.then115

if.then115:                                       ; preds = %if.else111
  %call116 = call i32 @Perl_mg_get(%struct.sv* %cond) #8
  br label %if.end117

if.end117:                                        ; preds = %if.else111, %if.then115
  %sv_flags118 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 2
  %43 = load i32* %sv_flags118, align 4, !tbaa !3
  %and119 = and i32 %43, 118423552
  %tobool120 = icmp eq i32 %and119, 0
  br i1 %tobool120, label %if.then121, label %if.end122

if.then121:                                       ; preds = %if.end117
  call void @Perl_sv_setpv(%struct.sv* %cond, i8* getelementptr inbounds ([1 x i8]* @.str, i64 0, i64 0)) #8
  br label %if.end122

if.end122:                                        ; preds = %if.end117, %if.then121
  %44 = load i32* %sv_flags77, align 4, !tbaa !3
  %and124 = and i32 %44, 262144
  %cmp125 = icmp eq i32 %and124, 0
  br i1 %cmp125, label %cond.false132, label %cond.true127

cond.true127:                                     ; preds = %if.end122
  %sv_any128 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 0
  %45 = load i8** %sv_any128, align 8, !tbaa !0
  %xpv_cur129 = getelementptr inbounds i8* %45, i64 8
  %46 = bitcast i8* %xpv_cur129 to i64*
  %47 = load i64* %46, align 8, !tbaa !4
  store i64 %47, i64* %llen, align 8, !tbaa !4
  br label %cond.end134

cond.false132:                                    ; preds = %if.end122
  %call133 = call i8* @Perl_sv_2pv_flags(%struct.sv* %cond, i64* %llen, i32 0) #8
  %.pre253 = load i32* %sv_flags77, align 4, !tbaa !3
  br label %cond.end134

cond.end134:                                      ; preds = %cond.false132, %cond.true127
  %48 = phi i32 [ %.pre253, %cond.false132 ], [ %44, %cond.true127 ]
  %and137 = and i32 %48, 536870912
  %tobool138 = icmp eq i32 %and137, 0
  br i1 %tobool138, label %land.end146, label %land.rhs139

land.rhs139:                                      ; preds = %cond.end134
  %49 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %op_private140 = getelementptr inbounds %struct.cop* %49, i64 0, i32 7
  %50 = load i8* %op_private140, align 1, !tbaa !1
  %and142 = and i8 %50, 8
  %tobool143 = icmp ne i8 %and142, 0
  br label %land.end146

land.end146:                                      ; preds = %cond.end134, %land.rhs139
  %51 = phi i1 [ true, %cond.end134 ], [ %tobool143, %land.rhs139 ]
  %conv149 = zext i1 %51 to i8
  %52 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %op_private150 = getelementptr inbounds %struct.cop* %52, i64 0, i32 7
  %53 = load i8* %op_private150, align 1, !tbaa !1
  %and152 = and i8 %53, 8
  %tobool153 = icmp eq i8 %and152, 0
  br i1 %tobool153, label %if.end158, label %if.then154

if.then154:                                       ; preds = %land.end146
  %54 = load i32* %sv_flags118, align 4, !tbaa !3
  %and156 = and i32 %54, -536870913
  store i32 %and156, i32* %sv_flags118, align 4, !tbaa !3
  br label %if.end158

if.end158:                                        ; preds = %land.end146, %if.then154, %if.then105, %if.else107
  %lbyte.0 = phi i8 [ %conv103, %if.else107 ], [ %conv103, %if.then105 ], [ %conv149, %if.then154 ], [ %conv149, %land.end146 ]
  %conv159251 = zext i8 %lbyte.0 to i32
  %conv160 = zext i1 %25 to i32
  %cmp161 = icmp eq i32 %conv159251, %conv160
  br i1 %cmp161, label %if.end188, label %if.then163

if.then163:                                       ; preds = %if.end158
  %tobool164 = icmp eq i8 %lbyte.0, 0
  br i1 %tobool164, label %if.else167, label %if.then165

if.then165:                                       ; preds = %if.then163
  %call166 = call i64 @Perl_sv_utf8_upgrade_flags(%struct.sv* %cond, i32 0) #8
  br label %if.end188

if.else167:                                       ; preds = %if.then163
  %tobool168 = icmp eq i8 %rcopied.0, 0
  br i1 %tobool168, label %if.then169, label %if.end172

if.then169:                                       ; preds = %if.else167
  %55 = load i64* %rlen, align 8, !tbaa !4
  %call170 = call %struct.sv* @Perl_newSVpvn(i8* %rpv.0, i64 %55) #8
  %call171 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call170) #8
  br label %if.end172

if.end172:                                        ; preds = %if.else167, %if.then169
  %right32.1 = phi %struct.sv* [ %right32.0, %if.else167 ], [ %call171, %if.then169 ]
  %call173 = call i64 @Perl_sv_utf8_upgrade_flags(%struct.sv* %right32.1, i32 0) #8
  %sv_flags174 = getelementptr inbounds %struct.sv* %right32.1, i64 0, i32 2
  %56 = load i32* %sv_flags174, align 4, !tbaa !3
  %and175 = and i32 %56, 262144
  %cmp176 = icmp eq i32 %and175, 0
  br i1 %cmp176, label %cond.false183, label %cond.true178

cond.true178:                                     ; preds = %if.end172
  %sv_any179 = getelementptr inbounds %struct.sv* %right32.1, i64 0, i32 0
  %57 = load i8** %sv_any179, align 8, !tbaa !0
  %xpv_cur180 = getelementptr inbounds i8* %57, i64 8
  %58 = bitcast i8* %xpv_cur180 to i64*
  %59 = load i64* %58, align 8, !tbaa !4
  store i64 %59, i64* %rlen, align 8, !tbaa !4
  %xpv_pv182 = bitcast i8* %57 to i8**
  %60 = load i8** %xpv_pv182, align 8, !tbaa !0
  br label %if.end188

cond.false183:                                    ; preds = %if.end172
  %call184 = call i8* @Perl_sv_2pv_flags(%struct.sv* %right32.1, i64* %rlen, i32 2) #8
  br label %if.end188

if.end188:                                        ; preds = %if.end158, %cond.true178, %cond.false183, %if.then165
  %rpv.1 = phi i8* [ %rpv.0, %if.then165 ], [ %60, %cond.true178 ], [ %call184, %cond.false183 ], [ %rpv.0, %if.end158 ]
  %61 = load i64* %rlen, align 8, !tbaa !4
  call void @Perl_sv_catpvn_flags(%struct.sv* %cond, i8* %rpv.1, i64 %61, i32 0) #8
  %sv_flags189 = getelementptr inbounds %struct.sv* %cond, i64 0, i32 2
  %62 = load i32* %sv_flags189, align 4, !tbaa !3
  %and190 = and i32 %62, 16384
  %tobool191 = icmp eq i32 %and190, 0
  br i1 %tobool191, label %if.end194, label %if.then192

if.then192:                                       ; preds = %if.end188
  %call193 = call i32 @Perl_mg_set(%struct.sv* %cond) #8
  br label %if.end194

if.end194:                                        ; preds = %if.end188, %if.then192
  store %struct.sv* %cond, %struct.sv** %incdec.ptr33.pre-phi, align 8, !tbaa !0
  br label %return

return:                                           ; preds = %if.end194, %if.end29
  %storemerge252 = phi %struct.sv** [ %incdec.ptr, %if.end29 ], [ %incdec.ptr33.pre-phi, %if.end194 ]
  store %struct.sv** %storemerge252, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %.pn = load %struct.op** @PL_op, align 8
  %retval.0.in = getelementptr inbounds %struct.op* %.pn, i64 0, i32 0
  %retval.0 = load %struct.op** %retval.0.in, align 8
  ret %struct.op* %retval.0
}
