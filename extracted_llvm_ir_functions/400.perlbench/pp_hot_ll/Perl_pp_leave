define %struct.op* @Perl_pp_leave() #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags = getelementptr inbounds %struct.op* %1, i64 0, i32 6
  %2 = load i8* %op_flags, align 1, !tbaa !1
  %tobool = icmp slt i8 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_cxix = getelementptr inbounds %struct.stackinfo* %3, i64 0, i32 2
  %4 = load i32* %si_cxix, align 4, !tbaa !3
  %idxprom = sext i32 %4 to i64
  %si_cxstack = getelementptr inbounds %struct.stackinfo* %3, i64 0, i32 1
  %5 = load %struct.context** %si_cxstack, align 8, !tbaa !0
  %6 = load %struct.pmop** @PL_curpm, align 8, !tbaa !0
  %blku_oldpm = getelementptr inbounds %struct.context* %5, i64 %idxprom, i32 1, i32 0, i32 5
  store %struct.pmop* %6, %struct.pmop** %blku_oldpm, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_cxix1 = getelementptr inbounds %struct.stackinfo* %7, i64 0, i32 2
  %8 = load i32* %si_cxix1, align 4, !tbaa !3
  %dec = add nsw i32 %8, -1
  store i32 %dec, i32* %si_cxix1, align 4, !tbaa !3
  %idxprom2 = sext i32 %8 to i64
  %si_cxstack3 = getelementptr inbounds %struct.stackinfo* %7, i64 0, i32 1
  %9 = load %struct.context** %si_cxstack3, align 8, !tbaa !0
  %10 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %blku_oldsp = getelementptr inbounds %struct.context* %9, i64 %idxprom2, i32 1, i32 0, i32 0
  %11 = load i32* %blku_oldsp, align 4, !tbaa !3
  %idx.ext = sext i32 %11 to i64
  %add.ptr = getelementptr inbounds %struct.sv** %10, i64 %idx.ext
  %blku_oldcop = getelementptr inbounds %struct.context* %9, i64 %idxprom2, i32 1, i32 0, i32 1
  %12 = load %struct.cop** %blku_oldcop, align 8, !tbaa !0
  store volatile %struct.cop* %12, %struct.cop** @PL_curcop, align 8, !tbaa !0
  %13 = load i32** @PL_markstack, align 8, !tbaa !0
  %blku_oldmarksp = getelementptr inbounds %struct.context* %9, i64 %idxprom2, i32 1, i32 0, i32 3
  %14 = load i32* %blku_oldmarksp, align 4, !tbaa !3
  %idx.ext11 = sext i32 %14 to i64
  %add.ptr12 = getelementptr inbounds i32* %13, i64 %idx.ext11
  store i32* %add.ptr12, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %blku_oldscopesp = getelementptr inbounds %struct.context* %9, i64 %idxprom2, i32 1, i32 0, i32 4
  %15 = load i32* %blku_oldscopesp, align 4, !tbaa !3
  store i32 %15, i32* @PL_scopestack_ix, align 4, !tbaa !3
  %blku_oldretsp = getelementptr inbounds %struct.context* %9, i64 %idxprom2, i32 1, i32 0, i32 2
  %16 = load i32* %blku_oldretsp, align 4, !tbaa !3
  store i32 %16, i32* @PL_retstack_ix, align 4, !tbaa !3
  %blku_oldpm19 = getelementptr inbounds %struct.context* %9, i64 %idxprom2, i32 1, i32 0, i32 5
  %17 = load %struct.pmop** %blku_oldpm19, align 8, !tbaa !0
  %18 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags23 = getelementptr inbounds %struct.op* %18, i64 0, i32 6
  %19 = load i8* %op_flags23, align 1, !tbaa !1
  %conv24 = zext i8 %19 to i32
  %and25 = and i32 %conv24, 3
  switch i32 %and25, label %if.then44 [
    i32 1, label %if.end58.thread137
    i32 2, label %if.end58.thread138
    i32 3, label %if.else89.thread
  ]

if.else89.thread:                                 ; preds = %if.end
  store i8 0, i8* @PL_tainted, align 1, !tbaa !1
  br label %if.then92

if.end58.thread137:                               ; preds = %if.end
  store i8 0, i8* @PL_tainted, align 1, !tbaa !1
  br label %if.end104

if.end58.thread138:                               ; preds = %if.end
  store i8 0, i8* @PL_tainted, align 1, !tbaa !1
  br label %if.then65

if.then44:                                        ; preds = %if.end
  %20 = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_cxix45 = getelementptr inbounds %struct.stackinfo* %20, i64 0, i32 2
  %21 = load i32* %si_cxix45, align 4, !tbaa !3
  %cmp46 = icmp sgt i32 %21, -1
  br i1 %cmp46, label %if.end58, label %if.end58.thread

if.end58.thread:                                  ; preds = %if.then44
  store i8 0, i8* @PL_tainted, align 1, !tbaa !1
  br label %if.then65

if.end58:                                         ; preds = %if.then44
  %idxprom50 = sext i32 %21 to i64
  %si_cxstack51 = getelementptr inbounds %struct.stackinfo* %20, i64 0, i32 1
  %22 = load %struct.context** %si_cxstack51, align 8, !tbaa !0
  %blku_gimme55 = getelementptr inbounds %struct.context* %22, i64 %idxprom50, i32 1, i32 0, i32 6
  %23 = load i8* %blku_gimme55, align 1, !tbaa !1
  %conv56 = zext i8 %23 to i32
  store i8 0, i8* @PL_tainted, align 1, !tbaa !1
  switch i32 %conv56, label %if.else89 [
    i32 128, label %if.end104
    i32 0, label %if.then65
  ]

if.then65:                                        ; preds = %if.end58.thread138, %if.end58.thread, %if.end58
  %add.ptr.sum134 = add i64 %idx.ext, 1
  %add.ptr66 = getelementptr inbounds %struct.sv** %10, i64 %add.ptr.sum134
  %cmp67 = icmp ugt %struct.sv** %add.ptr66, %0
  br i1 %cmp67, label %if.else75, label %if.then69

if.then69:                                        ; preds = %if.then65
  %24 = load %struct.sv** %0, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %24, i64 0, i32 2
  %25 = load i32* %sv_flags, align 4, !tbaa !3
  %and70 = and i32 %25, 2560
  %tobool71 = icmp eq i32 %and70, 0
  br i1 %tobool71, label %if.else73, label %if.then72

if.then72:                                        ; preds = %if.then69
  store %struct.sv* %24, %struct.sv** %add.ptr66, align 8, !tbaa !0
  br label %if.end104

if.else73:                                        ; preds = %if.then69
  %call = tail call %struct.sv* @Perl_sv_mortalcopy(%struct.sv* %24) #8
  store %struct.sv* %call, %struct.sv** %add.ptr66, align 8, !tbaa !0
  br label %if.end104

if.else75:                                        ; preds = %if.then65
  %26 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %26 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %add.ptr66 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp76 = icmp slt i64 %sub.ptr.sub, 0
  br i1 %cmp76, label %if.then78, label %if.end87

if.then78:                                        ; preds = %if.else75
  %27 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %sub.ptr.rhs.cast80 = ptrtoint %struct.sv** %27 to i64
  %sub.ptr.sub81 = sub i64 %sub.ptr.rhs.cast, %sub.ptr.rhs.cast80
  %call84 = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %0, %struct.sv** %add.ptr66, i32 0) #8
  %28 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %29 = shl i64 %sub.ptr.sub81, 29
  %idx.ext85 = ashr i64 %29, 32
  %add.ptr86 = getelementptr inbounds %struct.sv** %28, i64 %idx.ext85
  br label %if.end87

if.end87:                                         ; preds = %if.then78, %if.else75
  %mark.0 = phi %struct.sv** [ %add.ptr86, %if.then78 ], [ %add.ptr66, %if.else75 ]
  store %struct.sv* @PL_sv_undef, %struct.sv** %mark.0, align 8, !tbaa !0
  br label %if.end104

if.else89:                                        ; preds = %if.end58
  %cmp90 = icmp eq i8 %23, 1
  br i1 %cmp90, label %if.then92, label %if.end104

if.then92:                                        ; preds = %if.else89.thread, %if.else89
  %add.ptr.sum = add i64 %idx.ext, 1
  %add.ptr93 = getelementptr inbounds %struct.sv** %10, i64 %add.ptr.sum
  %cmp94139 = icmp ugt %struct.sv** %add.ptr93, %0
  br i1 %cmp94139, label %if.end104, label %for.body

for.body:                                         ; preds = %if.then92, %for.inc
  %mark.2140 = phi %struct.sv** [ %incdec.ptr, %for.inc ], [ %add.ptr93, %if.then92 ]
  %30 = load %struct.sv** %mark.2140, align 8, !tbaa !0
  %sv_flags96 = getelementptr inbounds %struct.sv* %30, i64 0, i32 2
  %31 = load i32* %sv_flags96, align 4, !tbaa !3
  %and97 = and i32 %31, 2560
  %tobool98 = icmp eq i32 %and97, 0
  br i1 %tobool98, label %if.then99, label %for.inc

if.then99:                                        ; preds = %for.body
  %call100 = tail call %struct.sv* @Perl_sv_mortalcopy(%struct.sv* %30) #8
  store %struct.sv* %call100, %struct.sv** %mark.2140, align 8, !tbaa !0
  store i8 0, i8* @PL_tainted, align 1, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then99
  %incdec.ptr = getelementptr inbounds %struct.sv** %mark.2140, i64 1
  %cmp94 = icmp ugt %struct.sv** %incdec.ptr, %0
  br i1 %cmp94, label %if.end104, label %for.body

if.end104:                                        ; preds = %if.then92, %for.inc, %if.end58.thread137, %if.end87, %if.else73, %if.then72, %if.end58, %if.else89
  %sp.0 = phi %struct.sv** [ %0, %if.else89 ], [ %add.ptr, %if.end58 ], [ %add.ptr66, %if.then72 ], [ %add.ptr66, %if.else73 ], [ %mark.0, %if.end87 ], [ %add.ptr, %if.end58.thread137 ], [ %0, %for.inc ], [ %0, %if.then92 ]
  store %struct.pmop* %17, %struct.pmop** @PL_curpm, align 8, !tbaa !0
  tail call void @Perl_pop_scope() #8
  store %struct.sv** %sp.0, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %32 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next = getelementptr inbounds %struct.op* %32, i64 0, i32 0
  %33 = load %struct.op** %op_next, align 8, !tbaa !0
  ret %struct.op* %33
}
