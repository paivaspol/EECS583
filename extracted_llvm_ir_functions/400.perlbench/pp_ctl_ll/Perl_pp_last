define %struct.op* @Perl_pp_last() #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_flags = getelementptr inbounds %struct.op* %1, i64 0, i32 6
  %2 = load i8* %op_flags, align 1, !tbaa !1
  %tobool = icmp slt i8 %2, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_cxix = getelementptr inbounds %struct.stackinfo* %3, i64 0, i32 2
  %4 = load i32* %si_cxix, align 4, !tbaa !3
  %call = tail call fastcc i32 @S_dopoptoloop(i32 %4) #8
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then2, label %if.end11

if.then2:                                         ; preds = %if.then
  %call3 = tail call %struct.op* (i8*, ...)* @Perl_die(i8* getelementptr inbounds ([34 x i8]* @.str31, i64 0, i64 0)) #7
  br label %return

if.else:                                          ; preds = %entry
  %op_pv = getelementptr inbounds %struct.op* %1, i64 1
  %5 = bitcast %struct.op* %op_pv to i8**
  %6 = load i8** %5, align 8, !tbaa !0
  %call4 = tail call fastcc i32 @S_dopoptolabel(i8* %6) #8
  %cmp5 = icmp slt i32 %call4, 0
  br i1 %cmp5, label %if.then7, label %if.end11

if.then7:                                         ; preds = %if.else
  %7 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_pv8 = getelementptr inbounds %struct.op* %7, i64 1
  %8 = bitcast %struct.op* %op_pv8 to i8**
  %9 = load i8** %8, align 8, !tbaa !0
  %call9 = tail call %struct.op* (i8*, ...)* @Perl_die(i8* getelementptr inbounds ([30 x i8]* @.str32, i64 0, i64 0), i8* %9) #7
  br label %return

if.end11:                                         ; preds = %if.else, %if.then
  %cxix.0 = phi i32 [ %call, %if.then ], [ %call4, %if.else ]
  %10 = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_cxix12 = getelementptr inbounds %struct.stackinfo* %10, i64 0, i32 2
  %11 = load i32* %si_cxix12, align 4, !tbaa !3
  %cmp13 = icmp slt i32 %cxix.0, %11
  br i1 %cmp13, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end11
  tail call void @Perl_dounwind(i32 %cxix.0) #8
  %.pre = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_cxix17.phi.trans.insert = getelementptr inbounds %struct.stackinfo* %.pre, i64 0, i32 2
  %.pre353 = load i32* %si_cxix17.phi.trans.insert, align 4, !tbaa !3
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %if.end11
  %12 = phi i32 [ %.pre353, %if.then15 ], [ %11, %if.end11 ]
  %13 = phi %struct.stackinfo* [ %.pre, %if.then15 ], [ %10, %if.end11 ]
  %si_cxix17 = getelementptr inbounds %struct.stackinfo* %13, i64 0, i32 2
  %dec = add nsw i32 %12, -1
  store i32 %dec, i32* %si_cxix17, align 4, !tbaa !3
  %idxprom = sext i32 %12 to i64
  %si_cxstack = getelementptr inbounds %struct.stackinfo* %13, i64 0, i32 1
  %14 = load %struct.context** %si_cxstack, align 8, !tbaa !0
  %15 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %blku_oldsp = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 0
  %16 = load i32* %blku_oldsp, align 4, !tbaa !3
  %idx.ext = sext i32 %16 to i64
  %add.ptr = getelementptr inbounds %struct.sv** %15, i64 %idx.ext
  %blku_oldcop = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 1
  %17 = load %struct.cop** %blku_oldcop, align 8, !tbaa !0
  store volatile %struct.cop* %17, %struct.cop** @PL_curcop, align 8, !tbaa !0
  %18 = load i32** @PL_markstack, align 8, !tbaa !0
  %blku_oldmarksp = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 3
  %19 = load i32* %blku_oldmarksp, align 4, !tbaa !3
  %idx.ext22 = sext i32 %19 to i64
  %add.ptr23 = getelementptr inbounds i32* %18, i64 %idx.ext22
  store i32* %add.ptr23, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %blku_oldscopesp = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 4
  %20 = load i32* %blku_oldscopesp, align 4, !tbaa !3
  store i32 %20, i32* @PL_scopestack_ix, align 4, !tbaa !3
  %blku_oldretsp = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 2
  %21 = load i32* %blku_oldretsp, align 4, !tbaa !3
  store i32 %21, i32* @PL_retstack_ix, align 4, !tbaa !3
  %blku_oldpm = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 5
  %22 = load %struct.pmop** %blku_oldpm, align 8, !tbaa !0
  %blku_gimme = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 6
  %23 = load i8* %blku_gimme, align 1, !tbaa !1
  %24 = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_cxix33 = getelementptr inbounds %struct.stackinfo* %24, i64 0, i32 2
  %25 = load i32* %si_cxix33, align 4, !tbaa !3
  %inc = add nsw i32 %25, 1
  store i32 %inc, i32* %si_cxix33, align 4, !tbaa !3
  %cx_type = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 0
  %26 = load i32* %cx_type, align 4, !tbaa !3
  %and34 = and i32 %26, 255
  switch i32 %and34, label %sw.default [
    i32 3, label %sw.bb
    i32 1, label %sw.bb43
    i32 2, label %sw.bb45
    i32 6, label %sw.bb71
  ]

sw.bb:                                            ; preds = %if.end16
  %27 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %resetsp = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 7, i32 0, i32 1
  %28 = load i32* %resetsp, align 4, !tbaa !3
  %idx.ext37 = sext i32 %28 to i64
  %add.ptr38 = getelementptr inbounds %struct.sv** %27, i64 %idx.ext37
  %last_op = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 7, i32 0, i32 4
  %29 = load %struct.op** %last_op, align 8, !tbaa !0
  %op_next = getelementptr inbounds %struct.op* %29, i64 0, i32 0
  %30 = load %struct.op** %op_next, align 8, !tbaa !0
  br label %sw.epilog

sw.bb43:                                          ; preds = %if.end16
  %call44 = tail call %struct.op* @Perl_pop_return() #7
  br label %sw.epilog

sw.bb45:                                          ; preds = %if.end16
  %blk_u48 = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 7
  %old_in_eval = bitcast %union.anon.1* %blk_u48 to i32*
  %31 = load i32* %old_in_eval, align 4, !tbaa !3
  store volatile i32 %31, i32* @PL_in_eval, align 4, !tbaa !3
  %32 = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 7, i32 0, i32 2
  %33 = load %struct.op** %32, align 8, !tbaa !0
  store %struct.op* %33, %struct.op** @PL_eval_root, align 8, !tbaa !0
  %old_namesv = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 7, i32 0, i32 1
  %34 = bitcast i32* %old_namesv to %struct.sv**
  %35 = load %struct.sv** %34, align 8, !tbaa !0
  %tobool61 = icmp eq %struct.sv* %35, null
  br i1 %tobool61, label %if.end69, label %if.then62

if.then62:                                        ; preds = %sw.bb45
  %call68 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %35) #7
  br label %if.end69

if.end69:                                         ; preds = %sw.bb45, %if.then62
  %call70 = tail call %struct.op* @Perl_pop_return() #7
  br label %sw.epilog

sw.bb71:                                          ; preds = %if.end16
  %dfoutgv = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 7, i32 0, i32 2
  %36 = load %struct.op** %dfoutgv, align 8
  %37 = bitcast %struct.op* %36 to %struct.gv*
  tail call void @Perl_setdefout(%struct.gv* %37) #7
  %38 = load %struct.op** %dfoutgv, align 8
  %39 = bitcast %struct.op* %38 to %struct.sv*
  tail call void @Perl_sv_free(%struct.sv* %39) #7
  %call80 = tail call %struct.op* @Perl_pop_return() #7
  br label %sw.epilog

sw.default:                                       ; preds = %if.end16
  %call81 = tail call %struct.op* (i8*, ...)* @Perl_die(i8* getelementptr inbounds ([12 x i8]* @.str33, i64 0, i64 0)) #7
  br label %return

sw.epilog:                                        ; preds = %sw.bb71, %if.end69, %sw.bb43, %sw.bb
  %pop2.0 = phi i32 [ 0, %sw.bb71 ], [ 0, %if.end69 ], [ 1, %sw.bb43 ], [ 3, %sw.bb ]
  %nextop.0 = phi %struct.op* [ %call80, %sw.bb71 ], [ %call70, %if.end69 ], [ %call44, %sw.bb43 ], [ %30, %sw.bb ]
  %newsp.0 = phi %struct.sv** [ %add.ptr, %sw.bb71 ], [ %add.ptr, %if.end69 ], [ %add.ptr, %sw.bb43 ], [ %add.ptr38, %sw.bb ]
  store i8 0, i8* @PL_tainted, align 1, !tbaa !1
  switch i8 %23, label %if.end116 [
    i8 0, label %if.then84
    i8 1, label %while.cond.preheader
  ]

while.cond.preheader:                             ; preds = %sw.epilog
  %add.ptr.sum = add i64 %idx.ext, 1
  %incdec.ptr100349 = getelementptr inbounds %struct.sv** %15, i64 %add.ptr.sum
  %cmp101350 = icmp ugt %struct.sv** %incdec.ptr100349, %0
  br i1 %cmp101350, label %if.end116, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %cmp103 = icmp eq i32 %pop2.0, 1
  br label %while.body

if.then84:                                        ; preds = %sw.epilog
  %cmp85 = icmp ult %struct.sv** %add.ptr, %0
  br i1 %cmp85, label %if.then87, label %if.else93

if.then87:                                        ; preds = %if.then84
  %cmp88 = icmp eq i32 %pop2.0, 1
  %40 = load %struct.sv** %0, align 8, !tbaa !0
  br i1 %cmp88, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %if.then87
  %sv_flags = getelementptr inbounds %struct.sv* %40, i64 0, i32 2
  %41 = load i32* %sv_flags, align 4, !tbaa !3
  %and90 = and i32 %41, 2048
  %tobool91 = icmp eq i32 %and90, 0
  br i1 %tobool91, label %cond.false, label %cond.end

cond.false:                                       ; preds = %if.then87, %land.lhs.true
  %call92 = tail call %struct.sv* @Perl_sv_mortalcopy(%struct.sv* %40) #7
  br label %cond.end

cond.end:                                         ; preds = %land.lhs.true, %cond.false
  %cond = phi %struct.sv* [ %call92, %cond.false ], [ %40, %land.lhs.true ]
  %incdec.ptr = getelementptr inbounds %struct.sv** %newsp.0, i64 1
  store %struct.sv* %cond, %struct.sv** %incdec.ptr, align 8, !tbaa !0
  br label %if.end116

if.else93:                                        ; preds = %if.then84
  %incdec.ptr94 = getelementptr inbounds %struct.sv** %newsp.0, i64 1
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr94, align 8, !tbaa !0
  br label %if.end116

while.body:                                       ; preds = %while.body.lr.ph, %cond.end112
  %incdec.ptr100352 = phi %struct.sv** [ %incdec.ptr100349, %while.body.lr.ph ], [ %incdec.ptr100, %cond.end112 ]
  %newsp.1351 = phi %struct.sv** [ %newsp.0, %while.body.lr.ph ], [ %incdec.ptr114, %cond.end112 ]
  %42 = load %struct.sv** %incdec.ptr100352, align 8, !tbaa !0
  br i1 %cmp103, label %land.lhs.true105, label %cond.false110

land.lhs.true105:                                 ; preds = %while.body
  %sv_flags106 = getelementptr inbounds %struct.sv* %42, i64 0, i32 2
  %43 = load i32* %sv_flags106, align 4, !tbaa !3
  %and107 = and i32 %43, 2048
  %tobool108 = icmp eq i32 %and107, 0
  br i1 %tobool108, label %cond.false110, label %cond.end112

cond.false110:                                    ; preds = %while.body, %land.lhs.true105
  %call111 = tail call %struct.sv* @Perl_sv_mortalcopy(%struct.sv* %42) #7
  br label %cond.end112

cond.end112:                                      ; preds = %land.lhs.true105, %cond.false110
  %cond113 = phi %struct.sv* [ %call111, %cond.false110 ], [ %42, %land.lhs.true105 ]
  %incdec.ptr114 = getelementptr inbounds %struct.sv** %newsp.1351, i64 1
  store %struct.sv* %cond113, %struct.sv** %incdec.ptr114, align 8, !tbaa !0
  store i8 0, i8* @PL_tainted, align 1, !tbaa !1
  %incdec.ptr100 = getelementptr inbounds %struct.sv** %incdec.ptr100352, i64 1
  %cmp101 = icmp ugt %struct.sv** %incdec.ptr100, %0
  br i1 %cmp101, label %if.end116, label %while.body

if.end116:                                        ; preds = %while.cond.preheader, %cond.end112, %sw.epilog, %cond.end, %if.else93
  %newsp.2 = phi %struct.sv** [ %incdec.ptr, %cond.end ], [ %incdec.ptr94, %if.else93 ], [ %newsp.0, %sw.epilog ], [ %newsp.0, %while.cond.preheader ], [ %incdec.ptr114, %cond.end112 ]
  store %struct.sv** %newsp.2, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  tail call void @Perl_pop_scope() #7
  %44 = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_cxix117 = getelementptr inbounds %struct.stackinfo* %44, i64 0, i32 2
  %45 = load i32* %si_cxix117, align 4, !tbaa !3
  %dec118 = add nsw i32 %45, -1
  store i32 %dec118, i32* %si_cxix117, align 4, !tbaa !3
  switch i32 %pop2.0, label %sw.epilog281.thread [
    i32 3, label %sw.bb119
    i32 1, label %sw.bb161
  ]

sw.bb119:                                         ; preds = %if.end116
  %iterlval = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 7, i32 0, i32 7
  %46 = load %struct.sv** %iterlval, align 8, !tbaa !0
  tail call void @Perl_sv_free(%struct.sv* %46) #7
  %itervar = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 7, i32 0, i32 5
  %47 = load %struct.sv*** %itervar, align 8, !tbaa !0
  %tobool128 = icmp eq %struct.sv** %47, null
  br i1 %tobool128, label %if.end140, label %if.then129

if.then129:                                       ; preds = %sw.bb119
  %48 = load %struct.sv** %47, align 8, !tbaa !0
  %call135 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %48) #7
  %itersave = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 7, i32 0, i32 6
  %49 = load %struct.sv** %itersave, align 8, !tbaa !0
  store %struct.sv* %49, %struct.sv** %47, align 8, !tbaa !0
  br label %if.end140

if.end140:                                        ; preds = %sw.bb119, %if.then129
  %iterary = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 7, i32 0, i32 8
  %50 = load %struct.av** %iterary, align 8, !tbaa !0
  %tobool145 = icmp eq %struct.av* %50, null
  %51 = load %struct.av** @PL_curstack, align 8, !tbaa !0
  %cmp152 = icmp eq %struct.av* %50, %51
  %or.cond = or i1 %tobool145, %cmp152
  br i1 %or.cond, label %if.end160, label %if.then154

if.then154:                                       ; preds = %if.end140
  %52 = bitcast %struct.av* %50 to %struct.sv*
  tail call void @Perl_sv_free(%struct.sv* %52) #7
  br label %if.end160

if.end160:                                        ; preds = %if.end140, %if.then154
  tail call void @Perl_pop_scope() #7
  br label %sw.epilog281.thread

sw.bb161:                                         ; preds = %if.end116
  %blk_u164 = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 7
  %hasargs = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 7, i32 0, i32 6
  %53 = bitcast %struct.sv** %hasargs to i8*
  %54 = load i8* %53, align 1, !tbaa !1
  %tobool166 = icmp eq i8 %54, 0
  br i1 %tobool166, label %if.end266, label %if.then167

if.then167:                                       ; preds = %sw.bb161
  %55 = load %struct.gv** @PL_defgv, align 8, !tbaa !0
  %sv_any = getelementptr inbounds %struct.gv* %55, i64 0, i32 0
  %56 = load %struct.xpvgv** %sv_any, align 8, !tbaa !0
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %56, i64 0, i32 7
  %57 = load %struct.gp** %xgv_gp, align 8, !tbaa !0
  %gp_av = getelementptr inbounds %struct.gp* %57, i64 0, i32 4
  %58 = load %struct.av** %gp_av, align 8, !tbaa !0
  %59 = bitcast %struct.av* %58 to %struct.sv*
  tail call void @Perl_sv_free(%struct.sv* %59) #7
  %savearray = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 7, i32 0, i32 3
  %60 = load %struct.op** %savearray, align 8
  %61 = bitcast %struct.op* %60 to %struct.av*
  %62 = load %struct.gv** @PL_defgv, align 8, !tbaa !0
  %sv_any172 = getelementptr inbounds %struct.gv* %62, i64 0, i32 0
  %63 = load %struct.xpvgv** %sv_any172, align 8, !tbaa !0
  %xgv_gp173 = getelementptr inbounds %struct.xpvgv* %63, i64 0, i32 7
  %64 = load %struct.gp** %xgv_gp173, align 8, !tbaa !0
  %gp_av174 = getelementptr inbounds %struct.gp* %64, i64 0, i32 4
  store %struct.av* %61, %struct.av** %gp_av174, align 8, !tbaa !0
  %argarray = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 7, i32 0, i32 4
  %65 = load %struct.op** %argarray, align 8
  %sv_any179 = bitcast %struct.op* %65 to %struct.xpvav**
  %66 = load %struct.xpvav** %sv_any179, align 8, !tbaa !0
  %xav_flags = getelementptr inbounds %struct.xpvav* %66, i64 0, i32 9
  %67 = load i8* %xav_flags, align 1, !tbaa !1
  %and181 = and i8 %67, 1
  %tobool182 = icmp eq i8 %and181, 0
  br i1 %tobool182, label %if.else225, label %if.then183

if.then183:                                       ; preds = %if.then167
  %xav_fill = getelementptr inbounds %struct.xpvav* %66, i64 0, i32 1
  %68 = load i64* %xav_fill, align 8, !tbaa !4
  %69 = bitcast %struct.op* %65 to %struct.sv*
  tail call void @Perl_sv_free(%struct.sv* %69) #7
  %call195 = tail call %struct.av* @Perl_newAV() #7
  %call195.c = bitcast %struct.av* %call195 to %struct.op*
  store %struct.op* %call195.c, %struct.op** %argarray, align 8, !tbaa !0
  %conv206 = trunc i64 %68 to i32
  tail call void @Perl_av_extend(%struct.av* %call195, i32 %conv206) #7
  %70 = load %struct.op** %argarray, align 8
  %sv_any212 = bitcast %struct.op* %70 to %struct.xpvav**
  %71 = load %struct.xpvav** %sv_any212, align 8, !tbaa !0
  %xav_flags213 = getelementptr inbounds %struct.xpvav* %71, i64 0, i32 9
  store i8 2, i8* %xav_flags213, align 1, !tbaa !1
  %72 = load %struct.op** %argarray, align 8
  %73 = bitcast %struct.op* %72 to %struct.sv*
  %oldcomppad = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 7, i32 0, i32 7
  %74 = load %struct.sv** %oldcomppad, align 8
  %sv_any223 = bitcast %struct.sv* %74 to %struct.xpvav**
  %75 = load %struct.xpvav** %sv_any223, align 8, !tbaa !0
  %xav_array = getelementptr inbounds %struct.xpvav* %75, i64 0, i32 0
  %76 = load i8** %xav_array, align 8, !tbaa !0
  %77 = bitcast i8* %76 to %struct.sv**
  store %struct.sv* %73, %struct.sv** %77, align 8, !tbaa !0
  br label %if.end266

if.else225:                                       ; preds = %if.then167
  %xav_array232 = getelementptr inbounds %struct.xpvav* %66, i64 0, i32 0
  %78 = load i8** %xav_array232, align 8, !tbaa !0
  %xav_alloc = getelementptr inbounds %struct.xpvav* %66, i64 0, i32 7
  %79 = load %struct.sv*** %xav_alloc, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint i8* %78 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %79 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3
  %xav_max = getelementptr inbounds %struct.xpvav* %66, i64 0, i32 2
  %80 = load i64* %xav_max, align 8, !tbaa !4
  %add = add nsw i64 %sub.ptr.div, %80
  store i64 %add, i64* %xav_max, align 8, !tbaa !4
  %81 = load %struct.op** %argarray, align 8
  %sv_any250 = bitcast %struct.op* %81 to %struct.xpvav**
  %82 = load %struct.xpvav** %sv_any250, align 8, !tbaa !0
  %xav_alloc251 = getelementptr inbounds %struct.xpvav* %82, i64 0, i32 7
  %83 = load %struct.sv*** %xav_alloc251, align 8, !tbaa !0
  %84 = bitcast %struct.sv** %83 to i8*
  %xpv_pv = getelementptr inbounds %struct.xpvav* %82, i64 0, i32 0
  store i8* %84, i8** %xpv_pv, align 8, !tbaa !0
  %85 = load %struct.op** %argarray, align 8
  %sv_any263 = bitcast %struct.op* %85 to %struct.xpvav**
  %86 = load %struct.xpvav** %sv_any263, align 8, !tbaa !0
  %xav_fill264 = getelementptr inbounds %struct.xpvav* %86, i64 0, i32 1
  store i64 -1, i64* %xav_fill264, align 8, !tbaa !4
  br label %if.end266

if.end266:                                        ; preds = %sw.bb161, %if.then183, %if.else225
  %cv = bitcast %union.anon.1* %blk_u164 to %struct.cv**
  %87 = load %struct.cv** %cv, align 8, !tbaa !0
  %88 = bitcast %struct.cv* %87 to %struct.sv*
  %tobool271 = icmp eq %struct.cv* %87, null
  br i1 %tobool271, label %sw.epilog281, label %land.lhs.true272

land.lhs.true272:                                 ; preds = %if.end266
  %olddepth = getelementptr inbounds %struct.context* %14, i64 %idxprom, i32 1, i32 0, i32 7, i32 0, i32 5
  %89 = bitcast %struct.sv*** %olddepth to i64*
  %90 = load i64* %89, align 8, !tbaa !4
  %sv_any277 = getelementptr inbounds %struct.cv* %87, i64 0, i32 0
  %91 = load %struct.xpvcv** %sv_any277, align 8, !tbaa !0
  %xcv_depth = getelementptr inbounds %struct.xpvcv* %91, i64 0, i32 14
  store i64 %90, i64* %xcv_depth, align 8, !tbaa !4
  %tobool278 = icmp eq i64 %90, 0
  %. = select i1 %tobool278, %struct.sv* %88, %struct.sv* null
  br label %sw.epilog281

sw.epilog281.thread:                              ; preds = %if.end116, %if.end160
  store %struct.pmop* %22, %struct.pmop** @PL_curpm, align 8, !tbaa !0
  br label %return

sw.epilog281:                                     ; preds = %land.lhs.true272, %if.end266
  %sv.0 = phi %struct.sv* [ %88, %if.end266 ], [ %., %land.lhs.true272 ]
  store %struct.pmop* %22, %struct.pmop** @PL_curpm, align 8, !tbaa !0
  %tobool282 = icmp eq %struct.sv* %sv.0, null
  br i1 %tobool282, label %return, label %if.then283

if.then283:                                       ; preds = %sw.epilog281
  tail call void @Perl_sv_free(%struct.sv* %sv.0) #7
  br label %return

return:                                           ; preds = %sw.epilog281.thread, %if.then283, %sw.epilog281, %sw.default, %if.then7, %if.then2
  %retval.0 = phi %struct.op* [ %call3, %if.then2 ], [ %call81, %sw.default ], [ %call9, %if.then7 ], [ %nextop.0, %sw.epilog281 ], [ %nextop.0, %if.then283 ], [ %nextop.0, %sw.epilog281.thread ]
  ret %struct.op* %retval.0
}
