define internal fastcc %struct.op* @S_doeval(i32 %gimme, %struct.op** %startop, %struct.cv* %outside, i32 %seq) #0 {
entry:
  %n_a = alloca i64, align 8
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.op** @PL_op, align 8, !tbaa !0
  %tobool = icmp ne %struct.op* %1, null
  br i1 %tobool, label %land.lhs.true, label %cond.end

land.lhs.true:                                    ; preds = %entry
  %op_type = getelementptr inbounds %struct.op* %1, i64 0, i32 4
  %2 = load i16* %op_type, align 2, !tbaa !6
  %cmp = icmp eq i16 %2, 309
  br i1 %cmp, label %cond.true, label %cond.end

cond.true:                                        ; preds = %land.lhs.true
  %3 = load volatile i32* @PL_in_eval, align 4, !tbaa !3
  %and = and i32 %3, 1
  %or = or i32 %and, 8
  br label %cond.end

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %or, %cond.true ], [ 1, %land.lhs.true ], [ 1, %entry ]
  store volatile i32 %cond, i32* @PL_in_eval, align 4, !tbaa !3
  %4 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i32* %4, i64 1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %5 = load i32** @PL_markstack_max, align 8, !tbaa !0
  %cmp2 = icmp eq i32* %incdec.ptr, %5
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  call void @Perl_markstack_grow() #7
  %.pre = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  %6 = phi i32* [ %.pre, %if.then ], [ %incdec.ptr, %cond.end ]
  %7 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %7 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div354 = lshr exact i64 %sub.ptr.sub, 3
  %conv4 = trunc i64 %sub.ptr.div354 to i32
  store i32 %conv4, i32* %6, align 4, !tbaa !3
  call void @Perl_save_sptr(%struct.sv** bitcast (%struct.cv** @PL_compcv to %struct.sv**)) #7
  %call = call %struct.sv* @Perl_newSV(i64 0) #7
  %8 = bitcast %struct.sv* %call to %struct.cv*
  store %struct.cv* %8, %struct.cv** @PL_compcv, align 8, !tbaa !0
  %call5 = call signext i8 @Perl_sv_upgrade(%struct.sv* %call, i32 12) #7
  %9 = load %struct.cv** @PL_compcv, align 8, !tbaa !0
  %sv_any = getelementptr inbounds %struct.cv* %9, i64 0, i32 0
  %10 = load %struct.xpvcv** %sv_any, align 8, !tbaa !0
  %xcv_flags = getelementptr inbounds %struct.xpvcv* %10, i64 0, i32 17
  %11 = load i16* %xcv_flags, align 2, !tbaa !6
  %or7 = or i16 %11, 16
  store i16 %or7, i16* %xcv_flags, align 2, !tbaa !6
  %sv_flags = getelementptr inbounds %struct.cv* %9, i64 0, i32 2
  %12 = load i32* %sv_flags, align 4, !tbaa !3
  %and9 = and i32 %12, -1048577
  store i32 %and9, i32* %sv_flags, align 4, !tbaa !3
  %13 = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_cxix = getelementptr inbounds %struct.stackinfo* %13, i64 0, i32 2
  %14 = load i32* %si_cxix, align 4, !tbaa !3
  %idxprom = sext i32 %14 to i64
  %si_cxstack = getelementptr inbounds %struct.stackinfo* %13, i64 0, i32 1
  %15 = load %struct.context** %si_cxstack, align 8, !tbaa !0
  %cv = getelementptr inbounds %struct.context* %15, i64 %idxprom, i32 1, i32 0, i32 7, i32 0, i32 4
  %.c = bitcast %struct.cv* %9 to %struct.op*
  store %struct.op* %.c, %struct.op** %cv, align 8, !tbaa !0
  %16 = load %struct.cv** @PL_compcv, align 8, !tbaa !0
  %sv_any10 = getelementptr inbounds %struct.cv* %16, i64 0, i32 0
  %17 = load %struct.xpvcv** %sv_any10, align 8, !tbaa !0
  %xcv_outside_seq = getelementptr inbounds %struct.xpvcv* %17, i64 0, i32 18
  store i32 %seq, i32* %xcv_outside_seq, align 4, !tbaa !3
  %18 = bitcast %struct.cv* %outside to %struct.sv*
  store %struct.sv* %18, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %tobool11 = icmp eq %struct.cv* %outside, null
  br i1 %tobool11, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end
  %19 = getelementptr inbounds %struct.cv* %outside, i64 0, i32 1
  %20 = load i32* %19, align 4, !tbaa !3
  %inc = add i32 %20, 1
  store i32 %inc, i32* %19, align 4, !tbaa !3
  br label %land.end

land.end:                                         ; preds = %if.end, %land.rhs
  %21 = load %struct.xpvcv** %sv_any10, align 8, !tbaa !0
  %xcv_outside = getelementptr inbounds %struct.xpvcv* %21, i64 0, i32 16
  store %struct.cv* %outside, %struct.cv** %xcv_outside, align 8, !tbaa !0
  %call14 = call %struct.av* @Perl_pad_new(i32 2) #7
  %22 = load %struct.cv** @PL_compcv, align 8, !tbaa !0
  %sv_any15 = getelementptr inbounds %struct.cv* %22, i64 0, i32 0
  %23 = load %struct.xpvcv** %sv_any15, align 8, !tbaa !0
  %xcv_padlist = getelementptr inbounds %struct.xpvcv* %23, i64 0, i32 15
  store %struct.av* %call14, %struct.av** %xcv_padlist, align 8, !tbaa !0
  %24 = load %struct.cv** @PL_compcv, align 8, !tbaa !0
  %25 = bitcast %struct.cv* %24 to %struct.sv*
  call void @Perl_save_mortalizesv(%struct.sv* %25) #7
  %26 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_stash = getelementptr inbounds %struct.cop* %26, i64 0, i32 9
  %27 = load %struct.hv** %cop_stash, align 8, !tbaa !0
  %28 = load %struct.hv** @PL_curstash, align 8, !tbaa !0
  %cmp16 = icmp eq %struct.hv* %27, %28
  br i1 %cmp16, label %if.end20, label %if.then18

if.then18:                                        ; preds = %land.end
  call void @Perl_save_sptr(%struct.sv** bitcast (%struct.hv** @PL_curstash to %struct.sv**)) #7
  %29 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_stash19 = getelementptr inbounds %struct.cop* %29, i64 0, i32 9
  %30 = load %struct.hv** %cop_stash19, align 8, !tbaa !0
  store %struct.hv* %30, %struct.hv** @PL_curstash, align 8, !tbaa !0
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %land.end
  call void @Perl_save_sptr(%struct.sv** bitcast (%struct.av** @PL_beginav to %struct.sv**)) #7
  %call21 = call %struct.av* @Perl_newAV() #7
  store %struct.av* %call21, %struct.av** @PL_beginav, align 8, !tbaa !0
  %31 = bitcast %struct.av* %call21 to %struct.sv*
  call void @Perl_save_freesv(%struct.sv* %31) #7
  call void @Perl_save_I32(i32* @PL_error_count) #7
  store %struct.op* null, %struct.op** @PL_eval_root, align 8, !tbaa !0
  store i32 0, i32* @PL_error_count, align 4, !tbaa !3
  store volatile %struct.cop* @PL_compiling, %struct.cop** @PL_curcop, align 8, !tbaa !0
  %32 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_arybase = getelementptr inbounds %struct.cop* %32, i64 0, i32 12
  store i32 0, i32* %cop_arybase, align 4, !tbaa !3
  br i1 %tobool, label %land.lhs.true23, label %if.else

land.lhs.true23:                                  ; preds = %if.end20
  %op_flags = getelementptr inbounds %struct.op* %1, i64 0, i32 6
  %33 = load i8* %op_flags, align 1, !tbaa !1
  %tobool26 = icmp slt i8 %33, 0
  br i1 %tobool26, label %if.then27, label %if.else

if.then27:                                        ; preds = %land.lhs.true23
  %34 = load volatile i32* @PL_in_eval, align 4, !tbaa !3
  %or28 = or i32 %34, 4
  store volatile i32 %or28, i32* @PL_in_eval, align 4, !tbaa !3
  br label %if.end30

if.else:                                          ; preds = %land.lhs.true23, %if.end20
  %35 = load %struct.gv** @PL_errgv, align 8, !tbaa !0
  %sv_any29 = getelementptr inbounds %struct.gv* %35, i64 0, i32 0
  %36 = load %struct.xpvgv** %sv_any29, align 8, !tbaa !0
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %36, i64 0, i32 7
  %37 = load %struct.gp** %xgv_gp, align 8, !tbaa !0
  %gp_sv = getelementptr inbounds %struct.gp* %37, i64 0, i32 0
  %38 = load %struct.sv** %gp_sv, align 8, !tbaa !0
  call void @Perl_sv_setpv(%struct.sv* %38, i8* getelementptr inbounds ([1 x i8]* @.str11, i64 0, i64 0)) #7
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then27
  %call31 = call i32 @Perl_yyparse() #7
  %39 = load i32* @PL_error_count, align 4, !tbaa !3
  %40 = or i32 %39, %call31
  %or.cond.not = icmp eq i32 %40, 0
  %41 = load %struct.op** @PL_eval_root, align 8, !tbaa !0
  %tobool35 = icmp ne %struct.op* %41, null
  %or.cond309 = and i1 %or.cond.not, %tobool35
  br i1 %or.cond309, label %if.end230, label %if.then36

if.then36:                                        ; preds = %if.end30
  store %struct.op* %1, %struct.op** @PL_op, align 8, !tbaa !0
  %tobool37 = icmp eq %struct.op* %41, null
  br i1 %tobool37, label %if.end39, label %if.then38

if.then38:                                        ; preds = %if.then36
  call void @Perl_op_free(%struct.op* %41) #7
  store %struct.op* null, %struct.op** @PL_eval_root, align 8, !tbaa !0
  br label %if.end39

if.end39:                                         ; preds = %if.then36, %if.then38
  %42 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %43 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr40 = getelementptr inbounds i32* %43, i64 -1
  store i32* %incdec.ptr40, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %44 = load i32* %43, align 4, !tbaa !3
  %idx.ext = sext i32 %44 to i64
  %tobool41 = icmp ne %struct.op** %startop, null
  br i1 %tobool41, label %if.end92, label %if.then42

if.then42:                                        ; preds = %if.end39
  %45 = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_cxix43 = getelementptr inbounds %struct.stackinfo* %45, i64 0, i32 2
  %46 = load i32* %si_cxix43, align 4, !tbaa !3
  %dec = add nsw i32 %46, -1
  store i32 %dec, i32* %si_cxix43, align 4, !tbaa !3
  %idxprom44 = sext i32 %46 to i64
  %si_cxstack45 = getelementptr inbounds %struct.stackinfo* %45, i64 0, i32 1
  %47 = load %struct.context** %si_cxstack45, align 8, !tbaa !0
  %blku_oldcop = getelementptr inbounds %struct.context* %47, i64 %idxprom44, i32 1, i32 0, i32 1
  %48 = load %struct.cop** %blku_oldcop, align 8, !tbaa !0
  store volatile %struct.cop* %48, %struct.cop** @PL_curcop, align 8, !tbaa !0
  %49 = load i32** @PL_markstack, align 8, !tbaa !0
  %blku_oldmarksp = getelementptr inbounds %struct.context* %47, i64 %idxprom44, i32 1, i32 0, i32 3
  %50 = load i32* %blku_oldmarksp, align 4, !tbaa !3
  %idx.ext55 = sext i32 %50 to i64
  %add.ptr56 = getelementptr inbounds i32* %49, i64 %idx.ext55
  store i32* %add.ptr56, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %blku_oldscopesp = getelementptr inbounds %struct.context* %47, i64 %idxprom44, i32 1, i32 0, i32 4
  %51 = load i32* %blku_oldscopesp, align 4, !tbaa !3
  store i32 %51, i32* @PL_scopestack_ix, align 4, !tbaa !3
  %blku_oldretsp = getelementptr inbounds %struct.context* %47, i64 %idxprom44, i32 1, i32 0, i32 2
  %52 = load i32* %blku_oldretsp, align 4, !tbaa !3
  store i32 %52, i32* @PL_retstack_ix, align 4, !tbaa !3
  %blku_oldpm = getelementptr inbounds %struct.context* %47, i64 %idxprom44, i32 1, i32 0, i32 5
  %53 = load %struct.pmop** %blku_oldpm, align 8, !tbaa !0
  store %struct.pmop* %53, %struct.pmop** @PL_curpm, align 8, !tbaa !0
  %blk_u68 = getelementptr inbounds %struct.context* %47, i64 %idxprom44, i32 1, i32 0, i32 7
  %blku_eval69 = bitcast %union.anon.1* %blk_u68 to %struct.block_eval*
  %old_in_eval = bitcast %union.anon.1* %blk_u68 to i32*
  %54 = load i32* %old_in_eval, align 4, !tbaa !3
  store volatile i32 %54, i32* @PL_in_eval, align 4, !tbaa !3
  %old_op_type = getelementptr inbounds %struct.block_eval* %blku_eval69, i64 0, i32 1
  %55 = load i32* %old_op_type, align 4, !tbaa !3
  %56 = getelementptr inbounds %struct.context* %47, i64 %idxprom44, i32 1, i32 0, i32 7, i32 0, i32 2
  %57 = load %struct.op** %56, align 8, !tbaa !0
  store %struct.op* %57, %struct.op** @PL_eval_root, align 8, !tbaa !0
  %old_namesv = getelementptr inbounds %struct.context* %47, i64 %idxprom44, i32 1, i32 0, i32 7, i32 0, i32 1
  %58 = bitcast i32* %old_namesv to %struct.sv**
  %59 = load %struct.sv** %58, align 8, !tbaa !0
  %tobool82 = icmp eq %struct.sv* %59, null
  br i1 %tobool82, label %if.end90, label %if.then83

if.then83:                                        ; preds = %if.then42
  %call89 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %59) #7
  br label %if.end90

if.end90:                                         ; preds = %if.then42, %if.then83
  %call91 = call %struct.op* @Perl_pop_return() #7
  %phitmp = icmp eq i32 %55, 309
  br label %if.end92

if.end92:                                         ; preds = %if.end90, %if.end39
  %optype.0 = phi i1 [ false, %if.end39 ], [ %phitmp, %if.end90 ]
  call void @Perl_lex_end() #7
  call void @Perl_pop_scope() #7
  %60 = load %struct.gv** @PL_errgv, align 8, !tbaa !0
  %sv_any96 = getelementptr inbounds %struct.gv* %60, i64 0, i32 0
  %61 = load %struct.xpvgv** %sv_any96, align 8, !tbaa !0
  %xgv_gp97 = getelementptr inbounds %struct.xpvgv* %61, i64 0, i32 7
  %62 = load %struct.gp** %xgv_gp97, align 8, !tbaa !0
  %gp_sv98 = getelementptr inbounds %struct.gp* %62, i64 0, i32 0
  %63 = load %struct.sv** %gp_sv98, align 8, !tbaa !0
  store %struct.sv* %63, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %sv_flags99 = getelementptr inbounds %struct.sv* %63, i64 0, i32 2
  %64 = load i32* %sv_flags99, align 4, !tbaa !3
  %and100 = and i32 %64, 262144
  br i1 %optype.0, label %if.then95, label %if.else117

if.then95:                                        ; preds = %if.end92
  %cmp101 = icmp eq i32 %and100, 0
  br i1 %cmp101, label %cond.false106, label %cond.true103

cond.true103:                                     ; preds = %if.then95
  %sv_any104 = getelementptr inbounds %struct.sv* %63, i64 0, i32 0
  %65 = load i8** %sv_any104, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %65, i64 8
  %66 = bitcast i8* %xpv_cur to i64*
  %67 = load i64* %66, align 8, !tbaa !4
  store i64 %67, i64* %n_a, align 8, !tbaa !4
  %xpv_pv = bitcast i8* %65 to i8**
  %68 = load i8** %xpv_pv, align 8, !tbaa !0
  br label %cond.end108

cond.false106:                                    ; preds = %if.then95
  %call107 = call i8* @Perl_sv_2pv_flags(%struct.sv* %63, i64* %n_a, i32 2) #7
  br label %cond.end108

cond.end108:                                      ; preds = %cond.false106, %cond.true103
  %cond109 = phi i8* [ %68, %cond.true103 ], [ %call107, %cond.false106 ]
  %69 = load i8* %cond109, align 1, !tbaa !1
  %tobool111 = icmp ne i8 %69, 0
  %cond115 = select i1 %tobool111, i8* %cond109, i8* getelementptr inbounds ([15 x i8]* @.str19, i64 0, i64 0)
  %call116 = call %struct.op* (i8*, ...)* @Perl_die(i8* getelementptr inbounds ([32 x i8]* @.str18, i64 0, i64 0), i8* %cond115) #7
  br label %return

if.else117:                                       ; preds = %if.end92
  %cmp126 = icmp ne i32 %and100, 0
  br i1 %tobool41, label %if.then119, label %if.else203

if.then119:                                       ; preds = %if.else117
  br i1 %cmp126, label %cond.true128, label %cond.false133

cond.true128:                                     ; preds = %if.then119
  %sv_any129 = getelementptr inbounds %struct.sv* %63, i64 0, i32 0
  %70 = load i8** %sv_any129, align 8, !tbaa !0
  %xpv_cur130 = getelementptr inbounds i8* %70, i64 8
  %71 = bitcast i8* %xpv_cur130 to i64*
  %72 = load i64* %71, align 8, !tbaa !4
  store i64 %72, i64* %n_a, align 8, !tbaa !4
  %xpv_pv132 = bitcast i8* %70 to i8**
  %73 = load i8** %xpv_pv132, align 8, !tbaa !0
  br label %cond.end135

cond.false133:                                    ; preds = %if.then119
  %call134 = call i8* @Perl_sv_2pv_flags(%struct.sv* %63, i64* %n_a, i32 2) #7
  br label %cond.end135

cond.end135:                                      ; preds = %cond.false133, %cond.true128
  %cond136 = phi i8* [ %73, %cond.true128 ], [ %call134, %cond.false133 ]
  %74 = load %struct.stackinfo** @PL_curstackinfo, align 8, !tbaa !0
  %si_cxix137 = getelementptr inbounds %struct.stackinfo* %74, i64 0, i32 2
  %75 = load i32* %si_cxix137, align 4, !tbaa !3
  %dec138 = add nsw i32 %75, -1
  store i32 %dec138, i32* %si_cxix137, align 4, !tbaa !3
  %idxprom139 = sext i32 %75 to i64
  %si_cxstack140 = getelementptr inbounds %struct.stackinfo* %74, i64 0, i32 1
  %76 = load %struct.context** %si_cxstack140, align 8, !tbaa !0
  %blku_oldcop149 = getelementptr inbounds %struct.context* %76, i64 %idxprom139, i32 1, i32 0, i32 1
  %77 = load %struct.cop** %blku_oldcop149, align 8, !tbaa !0
  store volatile %struct.cop* %77, %struct.cop** @PL_curcop, align 8, !tbaa !0
  %78 = load i32** @PL_markstack, align 8, !tbaa !0
  %blku_oldmarksp152 = getelementptr inbounds %struct.context* %76, i64 %idxprom139, i32 1, i32 0, i32 3
  %79 = load i32* %blku_oldmarksp152, align 4, !tbaa !3
  %idx.ext153 = sext i32 %79 to i64
  %add.ptr154 = getelementptr inbounds i32* %78, i64 %idx.ext153
  store i32* %add.ptr154, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %blku_oldscopesp157 = getelementptr inbounds %struct.context* %76, i64 %idxprom139, i32 1, i32 0, i32 4
  %80 = load i32* %blku_oldscopesp157, align 4, !tbaa !3
  store i32 %80, i32* @PL_scopestack_ix, align 4, !tbaa !3
  %blku_oldretsp160 = getelementptr inbounds %struct.context* %76, i64 %idxprom139, i32 1, i32 0, i32 2
  %81 = load i32* %blku_oldretsp160, align 4, !tbaa !3
  store i32 %81, i32* @PL_retstack_ix, align 4, !tbaa !3
  %blku_oldpm163 = getelementptr inbounds %struct.context* %76, i64 %idxprom139, i32 1, i32 0, i32 5
  %82 = load %struct.pmop** %blku_oldpm163, align 8, !tbaa !0
  store %struct.pmop* %82, %struct.pmop** @PL_curpm, align 8, !tbaa !0
  %blk_u170 = getelementptr inbounds %struct.context* %76, i64 %idxprom139, i32 1, i32 0, i32 7
  %old_in_eval172 = bitcast %union.anon.1* %blk_u170 to i32*
  %83 = load i32* %old_in_eval172, align 4, !tbaa !3
  store volatile i32 %83, i32* @PL_in_eval, align 4, !tbaa !3
  %84 = getelementptr inbounds %struct.context* %76, i64 %idxprom139, i32 1, i32 0, i32 7, i32 0, i32 2
  %85 = load %struct.op** %84, align 8, !tbaa !0
  store %struct.op* %85, %struct.op** @PL_eval_root, align 8, !tbaa !0
  %old_namesv187 = getelementptr inbounds %struct.context* %76, i64 %idxprom139, i32 1, i32 0, i32 7, i32 0, i32 1
  %86 = bitcast i32* %old_namesv187 to %struct.sv**
  %87 = load %struct.sv** %86, align 8, !tbaa !0
  %tobool188 = icmp eq %struct.sv* %87, null
  br i1 %tobool188, label %if.end196, label %if.then189

if.then189:                                       ; preds = %cond.end135
  %call195 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %87) #7
  br label %if.end196

if.end196:                                        ; preds = %cond.end135, %if.then189
  %88 = load i8* %cond136, align 1, !tbaa !1
  %tobool198 = icmp ne i8 %88, 0
  %cond202 = select i1 %tobool198, i8* %cond136, i8* getelementptr inbounds ([15 x i8]* @.str19, i64 0, i64 0)
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([31 x i8]* @.str77, i64 0, i64 0), i8* %cond202) #7
  br label %if.end228

if.else203:                                       ; preds = %if.else117
  br i1 %cmp126, label %cond.true212, label %cond.false217

cond.true212:                                     ; preds = %if.else203
  %sv_any213 = getelementptr inbounds %struct.sv* %63, i64 0, i32 0
  %89 = load i8** %sv_any213, align 8, !tbaa !0
  %xpv_cur214 = getelementptr inbounds i8* %89, i64 8
  %90 = bitcast i8* %xpv_cur214 to i64*
  %91 = load i64* %90, align 8, !tbaa !4
  store i64 %91, i64* %n_a, align 8, !tbaa !4
  %xpv_pv216 = bitcast i8* %89 to i8**
  %92 = load i8** %xpv_pv216, align 8, !tbaa !0
  br label %cond.end219

cond.false217:                                    ; preds = %if.else203
  %call218 = call i8* @Perl_sv_2pv_flags(%struct.sv* %63, i64* %n_a, i32 2) #7
  br label %cond.end219

cond.end219:                                      ; preds = %cond.false217, %cond.true212
  %cond220 = phi i8* [ %92, %cond.true212 ], [ %call218, %cond.false217 ]
  %93 = load i8* %cond220, align 1, !tbaa !1
  %tobool221 = icmp eq i8 %93, 0
  br i1 %tobool221, label %if.then222, label %if.end228

if.then222:                                       ; preds = %cond.end219
  %94 = load %struct.gv** @PL_errgv, align 8, !tbaa !0
  %sv_any223 = getelementptr inbounds %struct.gv* %94, i64 0, i32 0
  %95 = load %struct.xpvgv** %sv_any223, align 8, !tbaa !0
  %xgv_gp224 = getelementptr inbounds %struct.xpvgv* %95, i64 0, i32 7
  %96 = load %struct.gp** %xgv_gp224, align 8, !tbaa !0
  %gp_sv225 = getelementptr inbounds %struct.gp* %96, i64 0, i32 0
  %97 = load %struct.sv** %gp_sv225, align 8, !tbaa !0
  call void @Perl_sv_setpv(%struct.sv* %97, i8* getelementptr inbounds ([18 x i8]* @.str78, i64 0, i64 0)) #7
  br label %if.end228

if.end228:                                        ; preds = %cond.end219, %if.end196, %if.then222
  %add.ptr.sum = add i64 %idx.ext, 1
  %incdec.ptr229 = getelementptr inbounds %struct.sv** %42, i64 %add.ptr.sum
  store %struct.sv* @PL_sv_undef, %struct.sv** %incdec.ptr229, align 8, !tbaa !0
  store %struct.sv** %incdec.ptr229, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %98 = load %struct.op** @PL_op, align 8, !tbaa !0
  %op_next = getelementptr inbounds %struct.op* %98, i64 0, i32 0
  %99 = load %struct.op** %op_next, align 8, !tbaa !0
  br label %return

if.end230:                                        ; preds = %if.end30
  store i32 0, i32* getelementptr inbounds (%struct.cop* @PL_compiling, i64 0, i32 13), align 8, !tbaa !3
  %tobool231 = icmp eq %struct.op** %startop, null
  br i1 %tobool231, label %if.else233, label %if.then232

if.then232:                                       ; preds = %if.end230
  store %struct.op* %41, %struct.op** %startop, align 8, !tbaa !0
  br label %if.end234

if.else233:                                       ; preds = %if.end230
  call void @Perl_save_freeop(%struct.op* %41) #7
  br label %if.end234

if.end234:                                        ; preds = %if.else233, %if.then232
  %100 = load %struct.op** @PL_eval_root, align 8, !tbaa !0
  %op_type235 = getelementptr inbounds %struct.op* %100, i64 0, i32 4
  %101 = load i16* %op_type235, align 2, !tbaa !6
  %cmp237 = icmp eq i16 %101, 312
  br i1 %cmp237, label %land.lhs.true239, label %if.else252

land.lhs.true239:                                 ; preds = %if.end234
  %102 = getelementptr inbounds %struct.op* %100, i64 1, i32 0
  %103 = load %struct.op** %102, align 8, !tbaa !0
  %op_type240 = getelementptr inbounds %struct.op* %103, i64 0, i32 4
  %104 = load i16* %op_type240, align 2, !tbaa !6
  %cmp242 = icmp eq i16 %104, 173
  br i1 %cmp242, label %land.lhs.true244, label %if.else252

land.lhs.true244:                                 ; preds = %land.lhs.true239
  %105 = getelementptr inbounds %struct.op* %103, i64 1, i32 1
  %106 = load %struct.op** %105, align 8, !tbaa !0
  %op_type246 = getelementptr inbounds %struct.op* %106, i64 0, i32 4
  %107 = load i16* %op_type246, align 2, !tbaa !6
  %cmp248 = icmp eq i16 %107, 309
  br i1 %cmp248, label %if.then250, label %if.else252

if.then250:                                       ; preds = %land.lhs.true244
  %call251 = call %struct.op* @Perl_scalar(%struct.op* %100) #7
  br label %if.end266

if.else252:                                       ; preds = %land.lhs.true244, %land.lhs.true239, %if.end234
  %and253 = and i32 %gimme, 128
  %tobool254 = icmp eq i32 %and253, 0
  br i1 %tobool254, label %if.else257, label %if.then255

if.then255:                                       ; preds = %if.else252
  %call256 = call %struct.op* @Perl_scalarvoid(%struct.op* %100) #7
  br label %if.end266

if.else257:                                       ; preds = %if.else252
  %and258 = and i32 %gimme, 1
  %tobool259 = icmp eq i32 %and258, 0
  br i1 %tobool259, label %if.else262, label %if.then260

if.then260:                                       ; preds = %if.else257
  %call261 = call %struct.op* @Perl_list(%struct.op* %100) #7
  br label %if.end266

if.else262:                                       ; preds = %if.else257
  %call263 = call %struct.op* @Perl_scalar(%struct.op* %100) #7
  br label %if.end266

if.end266:                                        ; preds = %if.then255, %if.else262, %if.then260, %if.then250
  %108 = load i32* @PL_perldb, align 4, !tbaa !3
  %tobool267 = icmp eq i32 %108, 0
  %and269 = and i32 %108, 8
  %tobool270 = icmp eq i32 %and269, 0
  %or.cond = or i1 %tobool267, %tobool270
  br i1 %or.cond, label %if.end304, label %land.lhs.true271

land.lhs.true271:                                 ; preds = %if.end266
  %op_type272 = getelementptr inbounds %struct.op* %1, i64 0, i32 4
  %109 = load i16* %op_type272, align 2, !tbaa !6
  %cmp274 = icmp eq i16 %109, 309
  br i1 %cmp274, label %if.then276, label %if.end304

if.then276:                                       ; preds = %land.lhs.true271
  %call278 = call %struct.cv* @Perl_get_cv(i8* getelementptr inbounds ([14 x i8]* @.str79, i64 0, i64 0), i32 0) #7
  %tobool279 = icmp eq %struct.cv* %call278, null
  br i1 %tobool279, label %if.end304, label %if.then280

if.then280:                                       ; preds = %if.then276
  %110 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %111 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr282 = getelementptr inbounds i32* %111, i64 1
  store i32* %incdec.ptr282, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %112 = load i32** @PL_markstack_max, align 8, !tbaa !0
  %cmp283 = icmp eq i32* %incdec.ptr282, %112
  br i1 %cmp283, label %if.then285, label %if.end286

if.then285:                                       ; preds = %if.then280
  call void @Perl_markstack_grow() #7
  %.pre356 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  br label %if.end286

if.end286:                                        ; preds = %if.then285, %if.then280
  %113 = phi i32* [ %.pre356, %if.then285 ], [ %incdec.ptr282, %if.then280 ]
  %114 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %sub.ptr.lhs.cast287 = ptrtoint %struct.sv** %110 to i64
  %sub.ptr.rhs.cast288 = ptrtoint %struct.sv** %114 to i64
  %sub.ptr.sub289 = sub i64 %sub.ptr.lhs.cast287, %sub.ptr.rhs.cast288
  %sub.ptr.div290355 = lshr exact i64 %sub.ptr.sub289, 3
  %conv291 = trunc i64 %sub.ptr.div290355 to i32
  store i32 %conv291, i32* %113, align 4, !tbaa !3
  %115 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast292 = ptrtoint %struct.sv** %115 to i64
  %sub.ptr.sub294 = sub i64 %sub.ptr.lhs.cast292, %sub.ptr.lhs.cast287
  %cmp296 = icmp slt i64 %sub.ptr.sub294, 8
  br i1 %cmp296, label %if.then298, label %if.end300

if.then298:                                       ; preds = %if.end286
  %call299 = call %struct.sv** @Perl_stack_grow(%struct.sv** %110, %struct.sv** %110, i32 1) #7
  br label %if.end300

if.end300:                                        ; preds = %if.then298, %if.end286
  %sp281.0 = phi %struct.sv** [ %call299, %if.then298 ], [ %110, %if.end286 ]
  %116 = load %struct.gv** getelementptr inbounds (%struct.cop* @PL_compiling, i64 0, i32 10), align 8, !tbaa !0
  %117 = bitcast %struct.gv* %116 to %struct.sv*
  %incdec.ptr301 = getelementptr inbounds %struct.sv** %sp281.0, i64 1
  store %struct.sv* %117, %struct.sv** %incdec.ptr301, align 8, !tbaa !0
  store %struct.sv** %incdec.ptr301, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %118 = bitcast %struct.cv* %call278 to %struct.sv*
  %call302 = call i32 @Perl_call_sv(%struct.sv* %118, i32 2) #7
  br label %if.end304

if.end304:                                        ; preds = %if.then276, %if.end266, %if.end300, %land.lhs.true271
  %119 = load %struct.cv** @PL_compcv, align 8, !tbaa !0
  %sv_any305 = getelementptr inbounds %struct.cv* %119, i64 0, i32 0
  %120 = load %struct.xpvcv** %sv_any305, align 8, !tbaa !0
  %xcv_depth = getelementptr inbounds %struct.xpvcv* %120, i64 0, i32 14
  store i64 1, i64* %xcv_depth, align 8, !tbaa !4
  %121 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %122 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr306 = getelementptr inbounds i32* %122, i64 -1
  store i32* %incdec.ptr306, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %123 = load i32* %122, align 4, !tbaa !3
  %idx.ext307 = sext i32 %123 to i64
  %add.ptr308 = getelementptr inbounds %struct.sv** %121, i64 %idx.ext307
  store %struct.op* %1, %struct.op** @PL_op, align 8, !tbaa !0
  store i32 11, i32* @PL_lex_state, align 4, !tbaa !3
  store %struct.sv** %add.ptr308, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %124 = load %struct.op** @PL_eval_start, align 8, !tbaa !0
  br label %return

return:                                           ; preds = %if.end304, %if.end228, %cond.end108
  %retval.0 = phi %struct.op* [ %124, %if.end304 ], [ %call116, %cond.end108 ], [ %99, %if.end228 ]
  ret %struct.op* %retval.0
}
