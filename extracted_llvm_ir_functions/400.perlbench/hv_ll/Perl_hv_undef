define void @Perl_hv_undef(%struct.hv* %hv) #0 {
entry:
  %tobool = icmp eq %struct.hv* %hv, null
  br i1 %tobool, label %if.end21, label %if.end

if.end:                                           ; preds = %entry
  %sv_any = getelementptr inbounds %struct.hv* %hv, i64 0, i32 0
  %0 = load %struct.xpvhv** %sv_any, align 8, !tbaa !0
  tail call fastcc void @S_hfreeentries(%struct.hv* %hv) #5
  %xhv_array = getelementptr inbounds %struct.xpvhv* %0, i64 0, i32 0
  %1 = load i8** %xhv_array, align 8, !tbaa !0
  tail call void @Perl_safesysfree(i8* %1) #4
  %2 = load %struct.xpvhv** %sv_any, align 8, !tbaa !0
  %xhv_name = getelementptr inbounds %struct.xpvhv* %2, i64 0, i32 10
  %3 = load i8** %xhv_name, align 8, !tbaa !0
  %tobool2 = icmp eq i8* %3, null
  br i1 %tobool2, label %if.end16, label %if.then3

if.then3:                                         ; preds = %if.end
  %4 = load %struct.hv** @PL_stashcache, align 8, !tbaa !0
  %tobool4 = icmp eq %struct.hv* %4, null
  br i1 %tobool4, label %if.end11, label %if.then5

if.then5:                                         ; preds = %if.then3
  %call = tail call i64 @strlen(i8* %3) #4
  %conv = trunc i64 %call to i32
  %cmp.i = icmp slt i32 %conv, 0
  %sub.i = sub i64 0, %call
  %klen.0.in.i = select i1 %cmp.i, i64 %sub.i, i64 %call
  %klen_i32.lobit.i = lshr i32 %conv, 31
  %sext = shl i64 %klen.0.in.i, 32
  %klen.0.i = ashr exact i64 %sext, 32
  %call.i = tail call fastcc %struct.sv* @S_hv_delete_common(%struct.hv* %4, %struct.sv* null, i8* %3, i64 %klen.0.i, i32 %klen_i32.lobit.i, i32 2, i32 0) #4
  %.pre = load %struct.xpvhv** %sv_any, align 8, !tbaa !0
  %xhv_name13.phi.trans.insert = getelementptr inbounds %struct.xpvhv* %.pre, i64 0, i32 10
  %.pre34 = load i8** %xhv_name13.phi.trans.insert, align 8, !tbaa !0
  br label %if.end11

if.end11:                                         ; preds = %if.then3, %if.then5
  %5 = phi i8* [ %3, %if.then3 ], [ %.pre34, %if.then5 ]
  tail call void @Perl_safesysfree(i8* %5) #4
  %6 = load %struct.xpvhv** %sv_any, align 8, !tbaa !0
  %xhv_name15 = getelementptr inbounds %struct.xpvhv* %6, i64 0, i32 10
  store i8* null, i8** %xhv_name15, align 8, !tbaa !0
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.end11
  %xhv_max = getelementptr inbounds %struct.xpvhv* %0, i64 0, i32 2
  store i64 7, i64* %xhv_max, align 8, !tbaa !3
  store i8* null, i8** %xhv_array, align 8, !tbaa !0
  %xnv_nv = getelementptr inbounds %struct.xpvhv* %0, i64 0, i32 4
  store double 0.000000e+00, double* %xnv_nv, align 8, !tbaa !5
  %sv_flags = getelementptr inbounds %struct.hv* %hv, i64 0, i32 2
  %7 = load i32* %sv_flags, align 4, !tbaa !4
  %and = and i32 %7, 32768
  %tobool18 = icmp eq i32 %and, 0
  br i1 %tobool18, label %if.end21, label %if.then19

if.then19:                                        ; preds = %if.end16
  %8 = bitcast %struct.hv* %hv to %struct.sv*
  %call20 = tail call i32 @Perl_mg_clear(%struct.sv* %8) #4
  br label %if.end21

if.end21:                                         ; preds = %if.end16, %entry, %if.then19
  ret void
}
