define internal fastcc void @S_unshare_hek_or_pvn(%struct.hek* %hek, i8* %str, i32 %len, i32 %hash) #0 {
entry:
  %is_utf8 = alloca i8, align 1
  %tmplen = alloca i64, align 8
  store i8 0, i8* %is_utf8, align 1, !tbaa !1
  %tobool = icmp ne %struct.hek* %hek, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %hek_hash = getelementptr inbounds %struct.hek* %hek, i64 0, i32 0
  %0 = load i32* %hek_hash, align 4, !tbaa !4
  br label %if.end11

if.else:                                          ; preds = %entry
  %cmp = icmp slt i32 %len, 0
  br i1 %cmp, label %if.then2, label %if.end11

if.then2:                                         ; preds = %if.else
  %sub = sub nsw i32 0, %len
  %conv = sext i32 %sub to i64
  store i64 %conv, i64* %tmplen, align 8, !tbaa !3
  store i8 1, i8* %is_utf8, align 1, !tbaa !1
  %call = call i8* @Perl_bytes_from_utf8(i8* %str, i64* %tmplen, i8* %is_utf8) #4
  %1 = load i64* %tmplen, align 8, !tbaa !3
  %conv3 = trunc i64 %1 to i32
  %2 = load i8* %is_utf8, align 1, !tbaa !1
  %not.tobool4 = icmp ne i8 %2, 0
  %. = zext i1 %not.tobool4 to i32
  %cmp6 = icmp eq i8* %call, %str
  %or = or i32 %., 258
  %..or = select i1 %cmp6, i32 %., i32 %or
  br label %if.end11

if.end11:                                         ; preds = %if.then2, %if.else, %if.then
  %hash.addr.0 = phi i32 [ %0, %if.then ], [ %hash, %if.else ], [ %hash, %if.then2 ]
  %k_flags.1 = phi i32 [ 0, %if.then ], [ 0, %if.else ], [ %..or, %if.then2 ]
  %len.addr.0 = phi i32 [ %len, %if.then ], [ %len, %if.else ], [ %conv3, %if.then2 ]
  %str.addr.0 = phi i8* [ %str, %if.then ], [ %str, %if.else ], [ %call, %if.then2 ]
  %3 = load %struct.hv** @PL_strtab, align 8, !tbaa !0
  %sv_any = getelementptr inbounds %struct.hv* %3, i64 0, i32 0
  %4 = load %struct.xpvhv** %sv_any, align 8, !tbaa !0
  %xhv_max = getelementptr inbounds %struct.xpvhv* %4, i64 0, i32 2
  %5 = load i64* %xhv_max, align 8, !tbaa !3
  %conv12 = trunc i64 %5 to i32
  %and = and i32 %conv12, %hash.addr.0
  %idxprom = zext i32 %and to i64
  %xhv_array = getelementptr inbounds %struct.xpvhv* %4, i64 0, i32 0
  %6 = load i8** %xhv_array, align 8, !tbaa !0
  %7 = bitcast i8* %6 to %struct.he**
  %arrayidx = getelementptr inbounds %struct.he** %7, i64 %idxprom
  %entry1.0151 = load %struct.he** %arrayidx, align 8
  %tobool15152 = icmp eq %struct.he* %entry1.0151, null
  br i1 %tobool, label %for.cond.preheader, label %for.cond22.preheader

for.cond22.preheader:                             ; preds = %if.end11
  br i1 %tobool15152, label %land.lhs.true78, label %for.body24.lr.ph

for.body24.lr.ph:                                 ; preds = %for.cond22.preheader
  %8 = trunc i32 %k_flags.1 to i8
  %conv42 = sext i32 %len.addr.0 to i64
  br label %for.body24

for.cond.preheader:                               ; preds = %if.end11
  br i1 %tobool15152, label %land.lhs.true78, label %for.body

for.cond:                                         ; preds = %for.body
  %hent_next = getelementptr inbounds %struct.he* %entry1.0153, i64 0, i32 0
  %entry1.0 = load %struct.he** %hent_next, align 8
  %tobool15 = icmp eq %struct.he* %entry1.0, null
  br i1 %tobool15, label %land.lhs.true78, label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.cond
  %entry1.0153 = phi %struct.he* [ %entry1.0, %for.cond ], [ %entry1.0151, %for.cond.preheader ]
  %hent_hek = getelementptr inbounds %struct.he* %entry1.0153, i64 0, i32 1
  %9 = load %struct.hek** %hent_hek, align 8, !tbaa !0
  %cmp16 = icmp eq %struct.hek* %9, %hek
  br i1 %cmp16, label %if.then63, label %for.cond

for.body24:                                       ; preds = %for.body24.lr.ph, %for.inc58
  %entry1.1159 = phi %struct.he* [ %entry1.0151, %for.body24.lr.ph ], [ %entry1.1, %for.inc58 ]
  %hent_hek25 = getelementptr inbounds %struct.he* %entry1.1159, i64 0, i32 1
  %10 = load %struct.hek** %hent_hek25, align 8, !tbaa !0
  %hek_hash26 = getelementptr inbounds %struct.hek* %10, i64 0, i32 0
  %11 = load i32* %hek_hash26, align 4, !tbaa !4
  %cmp27 = icmp eq i32 %11, %hash.addr.0
  br i1 %cmp27, label %if.end30, label %for.inc58

if.end30:                                         ; preds = %for.body24
  %hek_len = getelementptr inbounds %struct.hek* %10, i64 0, i32 1
  %12 = load i32* %hek_len, align 4, !tbaa !4
  %cmp32 = icmp eq i32 %12, %len.addr.0
  br i1 %cmp32, label %if.end35, label %for.inc58

if.end35:                                         ; preds = %if.end30
  %arraydecay = getelementptr inbounds %struct.hek* %10, i64 0, i32 2, i64 0
  %cmp37 = icmp eq i8* %arraydecay, %str.addr.0
  br i1 %cmp37, label %if.end46, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end35
  %call43 = call i32 @memcmp(i8* %arraydecay, i8* %str.addr.0, i64 %conv42) #4
  %tobool44 = icmp eq i32 %call43, 0
  br i1 %tobool44, label %if.end46, label %for.inc58

if.end46:                                         ; preds = %land.lhs.true, %if.end35
  %add.ptr.sum = add i64 %conv42, 1
  %add.ptr52 = getelementptr inbounds %struct.hek* %10, i64 0, i32 2, i64 %add.ptr.sum
  %13 = load i8* %add.ptr52, align 1, !tbaa !1
  %cmp54 = icmp eq i8 %13, %8
  br i1 %cmp54, label %if.then63, label %for.inc58

for.inc58:                                        ; preds = %land.lhs.true, %if.end46, %if.end30, %for.body24
  %hent_next59 = getelementptr inbounds %struct.he* %entry1.1159, i64 0, i32 0
  %entry1.1 = load %struct.he** %hent_next59, align 8
  %tobool23 = icmp eq %struct.he* %entry1.1, null
  br i1 %tobool23, label %land.lhs.true78, label %for.body24

if.then63:                                        ; preds = %if.end46, %for.body
  %entry1.2.ph = phi %struct.he* [ %entry1.0153, %for.body ], [ %entry1.1159, %if.end46 ]
  %hent_val = getelementptr inbounds %struct.he* %entry1.2.ph, i64 0, i32 2
  %14 = load %struct.sv** %hent_val, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds %struct.sv* %14, i64 -1
  store %struct.sv* %incdec.ptr, %struct.sv** %hent_val, align 8, !tbaa !0
  br label %if.end102

land.lhs.true78:                                  ; preds = %for.cond22.preheader, %for.inc58, %for.cond.preheader, %for.cond
  %15 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings = getelementptr inbounds %struct.cop* %15, i64 0, i32 14
  %16 = load %struct.sv** %cop_warnings, align 8, !tbaa !0
  %cmp79 = icmp eq %struct.sv* %16, null
  br i1 %cmp79, label %if.then95, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true78
  %17 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings81 = getelementptr inbounds %struct.cop* %17, i64 0, i32 14
  %18 = load %struct.sv** %cop_warnings81, align 8, !tbaa !0
  %cmp82 = icmp eq %struct.sv* %18, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp82, label %if.then95, label %lor.lhs.false84

lor.lhs.false84:                                  ; preds = %lor.lhs.false
  %19 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings85 = getelementptr inbounds %struct.cop* %19, i64 0, i32 14
  %20 = load %struct.sv** %cop_warnings85, align 8, !tbaa !0
  %cmp86 = icmp eq %struct.sv* %20, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp86, label %if.end102, label %land.lhs.true88

land.lhs.true88:                                  ; preds = %lor.lhs.false84
  %21 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings89 = getelementptr inbounds %struct.cop* %21, i64 0, i32 14
  %22 = load %struct.sv** %cop_warnings89, align 8, !tbaa !0
  %sv_any90 = getelementptr inbounds %struct.sv* %22, i64 0, i32 0
  %23 = load i8** %sv_any90, align 8, !tbaa !0
  %xpv_pv = bitcast i8* %23 to i8**
  %24 = load i8** %xpv_pv, align 8, !tbaa !0
  %arrayidx91 = getelementptr inbounds i8* %24, i64 6
  %25 = load i8* %arrayidx91, align 1, !tbaa !1
  %and93 = and i8 %25, 1
  %tobool94 = icmp eq i8 %and93, 0
  br i1 %tobool94, label %if.end102, label %if.then95

if.then95:                                        ; preds = %land.lhs.true88, %lor.lhs.false, %land.lhs.true78
  %arraydecay98 = getelementptr inbounds %struct.hek* %hek, i64 0, i32 2, i64 0
  %cond = select i1 %tobool, i8* %arraydecay98, i8* %str.addr.0
  %and99 = and i32 %k_flags.1, 1
  %tobool100 = icmp ne i32 %and99, 0
  %cond101 = select i1 %tobool100, i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8]* @.str5, i64 0, i64 0)
  call void (i32, i8*, ...)* @Perl_warner(i32 24, i8* getelementptr inbounds ([50 x i8]* @.str3, i64 0, i64 0), i8* %cond, i8* %cond101) #4
  br label %if.end102

if.end102:                                        ; preds = %if.then63, %land.lhs.true88, %lor.lhs.false84, %if.then95
  %and103 = and i32 %k_flags.1, 256
  %tobool104 = icmp eq i32 %and103, 0
  br i1 %tobool104, label %if.end106, label %if.then105

if.then105:                                       ; preds = %if.end102
  call void @Perl_safesysfree(i8* %str.addr.0) #4
  br label %if.end106

if.end106:                                        ; preds = %if.end102, %if.then105
  ret void
}
