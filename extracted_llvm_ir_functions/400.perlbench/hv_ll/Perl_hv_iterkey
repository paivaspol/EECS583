define i8* @Perl_hv_iterkey(%struct.he* nocapture %entry1, i32* nocapture %retlen) #0 {
entry:
  %len = alloca i64, align 8
  %hent_hek = getelementptr inbounds %struct.he* %entry1, i64 0, i32 1
  %0 = load %struct.hek** %hent_hek, align 8, !tbaa !0
  %hek_len = getelementptr inbounds %struct.hek* %0, i64 0, i32 1
  %1 = load i32* %hek_len, align 4, !tbaa !4
  %cmp = icmp eq i32 %1, -2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds %struct.hek* %0, i64 0, i32 2, i64 0
  %2 = bitcast i8* %arraydecay to %struct.sv**
  %3 = load %struct.sv** %2, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %3, i64 0, i32 2
  %4 = load i32* %sv_flags, align 4, !tbaa !4
  %and = and i32 %4, 262144
  %cmp3 = icmp eq i32 %and, 0
  br i1 %cmp3, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then
  %sv_any = getelementptr inbounds %struct.sv* %3, i64 0, i32 0
  %5 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %5, i64 8
  %6 = bitcast i8* %xpv_cur to i64*
  %7 = load i64* %6, align 8, !tbaa !3
  store i64 %7, i64* %len, align 8, !tbaa !3
  %xpv_pv = bitcast i8* %5 to i8**
  %8 = load i8** %xpv_pv, align 8, !tbaa !0
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %call = call i8* @Perl_sv_2pv_flags(%struct.sv* %3, i64* %len, i32 2) #4
  %.pre = load i64* %len, align 8, !tbaa !3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %9 = phi i64 [ %7, %cond.true ], [ %.pre, %cond.false ]
  %cond = phi i8* [ %8, %cond.true ], [ %call, %cond.false ]
  %conv = trunc i64 %9 to i32
  store i32 %conv, i32* %retlen, align 4, !tbaa !4
  br label %return

if.else:                                          ; preds = %entry
  store i32 %1, i32* %retlen, align 4, !tbaa !4
  %arraydecay18 = getelementptr inbounds %struct.hek* %0, i64 0, i32 2, i64 0
  br label %return

return:                                           ; preds = %if.else, %cond.end
  %retval.0 = phi i8* [ %cond, %cond.end ], [ %arraydecay18, %if.else ]
  ret i8* %retval.0
}
