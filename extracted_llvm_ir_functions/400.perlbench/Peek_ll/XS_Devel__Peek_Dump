define void @XS_Devel__Peek_Dump(%struct.cv* nocapture %cv) #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %2 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i32* %2, i64 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %3 = load i32* %2, align 4, !tbaa !3
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %idx.ext
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nsw i64 %idx.ext, 32
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %sub.ptr.div4112 = lshr exact i64 %sub.ptr.sub3, 3
  %conv5 = trunc i64 %sub.ptr.div4112 to i32
  %conv5.off = add i32 %conv5, -1
  %4 = icmp ugt i32 %conv5.off, 1
  br i1 %4, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([36 x i8]* @.str14, i64 0, i64 0)) #2
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %5 = phi %struct.sv** [ %1, %entry ], [ %.pre, %if.then ]
  %sext = shl i64 %sub.ptr.sub3, 29
  %idx.ext9 = ashr exact i64 %sext, 32
  %idx.neg = sub i64 0, %idx.ext9
  %add.ptr10 = getelementptr inbounds %struct.sv** %0, i64 %idx.neg
  %sext113 = add i64 %add.ptr.idx, 4294967296
  %idxprom = ashr exact i64 %sext113, 32
  %arrayidx = getelementptr inbounds %struct.sv** %5, i64 %idxprom
  %6 = load %struct.sv** %arrayidx, align 8, !tbaa !0
  %cmp12 = icmp slt i32 %conv5, 2
  br i1 %cmp12, label %if.end25, label %if.else

if.else:                                          ; preds = %if.end
  %sext114 = add i64 %add.ptr.idx, 8589934592
  %idxprom16 = ashr exact i64 %sext114, 32
  %arrayidx17 = getelementptr inbounds %struct.sv** %5, i64 %idxprom16
  %7 = load %struct.sv** %arrayidx17, align 8, !tbaa !0
  %sv_flags = getelementptr inbounds %struct.sv* %7, i64 0, i32 2
  %8 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %8, 65536
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.else
  %sv_any = getelementptr inbounds %struct.sv* %7, i64 0, i32 0
  %9 = load i8** %sv_any, align 8, !tbaa !0
  %xiv_iv = getelementptr inbounds i8* %9, i64 24
  %10 = bitcast i8* %xiv_iv to i64*
  %11 = load i64* %10, align 8, !tbaa !4
  br label %cond.end

cond.false:                                       ; preds = %if.else
  %call = tail call i64 @Perl_sv_2iv(%struct.sv* %7) #2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %11, %cond.true ], [ %call, %cond.false ]
  %conv24 = trunc i64 %cond to i32
  br label %if.end25

if.end25:                                         ; preds = %if.end, %cond.end
  %lim.0 = phi i32 [ %conv24, %cond.end ], [ 4, %if.end ]
  %call26 = tail call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([22 x i8]* @.str15, i64 0, i64 0), i32 0) #2
  %tobool27 = icmp eq %struct.sv* %call26, null
  br i1 %tobool27, label %cond.end40, label %cond.true28

cond.true28:                                      ; preds = %if.end25
  %sv_flags29 = getelementptr inbounds %struct.sv* %call26, i64 0, i32 2
  %12 = load i32* %sv_flags29, align 4, !tbaa !3
  %and30 = and i32 %12, 65536
  %tobool31 = icmp eq i32 %and30, 0
  br i1 %tobool31, label %cond.false35, label %cond.true32

cond.true32:                                      ; preds = %cond.true28
  %sv_any33 = getelementptr inbounds %struct.sv* %call26, i64 0, i32 0
  %13 = load i8** %sv_any33, align 8, !tbaa !0
  %xiv_iv34 = getelementptr inbounds i8* %13, i64 24
  %14 = bitcast i8* %xiv_iv34 to i64*
  %15 = load i64* %14, align 8, !tbaa !4
  br label %cond.end40

cond.false35:                                     ; preds = %cond.true28
  %call36 = tail call i64 @Perl_sv_2iv(%struct.sv* %call26) #2
  br label %cond.end40

cond.end40:                                       ; preds = %if.end25, %cond.true32, %cond.false35
  %cond41 = phi i64 [ %15, %cond.true32 ], [ %call36, %cond.false35 ], [ 0, %if.end25 ]
  %call42 = tail call %struct.sv* @Perl_get_sv(i8* getelementptr inbounds ([22 x i8]* @.str16, i64 0, i64 0), i32 0) #2
  %16 = load i32* @PL_dumpindent, align 4, !tbaa !3
  store i32 2, i32* @PL_dumpindent, align 4, !tbaa !3
  %call43 = tail call %struct._PerlIO** @Perl_PerlIO_stderr() #2
  %tobool44 = icmp eq %struct.sv* %call42, null
  br i1 %tobool44, label %land.end94, label %cond.false47

cond.false47:                                     ; preds = %cond.end40
  %sv_flags48 = getelementptr inbounds %struct.sv* %call42, i64 0, i32 2
  %17 = load i32* %sv_flags48, align 4, !tbaa !3
  %and49 = and i32 %17, 262144
  %tobool50 = icmp eq i32 %and49, 0
  br i1 %tobool50, label %cond.false65, label %cond.true51

cond.true51:                                      ; preds = %cond.false47
  %sv_any52 = getelementptr inbounds %struct.sv* %call42, i64 0, i32 0
  %18 = load i8** %sv_any52, align 8, !tbaa !0
  %19 = bitcast i8* %18 to %struct.xpv*
  store %struct.xpv* %19, %struct.xpv** @PL_Xpv, align 8, !tbaa !0
  %tobool53 = icmp eq i8* %18, null
  br i1 %tobool53, label %land.end63, label %land.rhs54

land.rhs54:                                       ; preds = %cond.true51
  %xpv_cur = getelementptr inbounds i8* %18, i64 8
  %20 = bitcast i8* %xpv_cur to i64*
  %21 = load i64* %20, align 8, !tbaa !4
  %cmp55 = icmp ugt i64 %21, 1
  br i1 %cmp55, label %land.end63, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs54
  %tobool58 = icmp eq i64 %21, 0
  br i1 %tobool58, label %land.end63, label %land.rhs59

land.rhs59:                                       ; preds = %lor.rhs
  %xpv_pv = bitcast i8* %18 to i8**
  %22 = load i8** %xpv_pv, align 8, !tbaa !0
  %23 = load i8* %22, align 1, !tbaa !1
  %cmp61 = icmp ne i8 %23, 48
  br label %land.end63

land.end63:                                       ; preds = %lor.rhs, %cond.true51, %land.rhs54, %land.rhs59
  %24 = phi i1 [ false, %cond.true51 ], [ true, %land.rhs54 ], [ false, %lor.rhs ], [ %cmp61, %land.rhs59 ]
  %cond64 = zext i1 %24 to i32
  br label %cond.end91

cond.false65:                                     ; preds = %cond.false47
  %and67 = and i32 %17, 65536
  %tobool68 = icmp eq i32 %and67, 0
  br i1 %tobool68, label %cond.false74, label %cond.true69

cond.true69:                                      ; preds = %cond.false65
  %sv_any70 = getelementptr inbounds %struct.sv* %call42, i64 0, i32 0
  %25 = load i8** %sv_any70, align 8, !tbaa !0
  %xiv_iv71 = getelementptr inbounds i8* %25, i64 24
  %26 = bitcast i8* %xiv_iv71 to i64*
  %27 = load i64* %26, align 8, !tbaa !4
  %cmp72 = icmp ne i64 %27, 0
  %conv73 = zext i1 %cmp72 to i32
  br label %cond.end91

cond.false74:                                     ; preds = %cond.false65
  %and76 = and i32 %17, 131072
  %tobool77 = icmp eq i32 %and76, 0
  br i1 %tobool77, label %cond.false82, label %cond.true78

cond.true78:                                      ; preds = %cond.false74
  %sv_any79 = getelementptr inbounds %struct.sv* %call42, i64 0, i32 0
  %28 = load i8** %sv_any79, align 8, !tbaa !0
  %xnv_nv = getelementptr inbounds i8* %28, i64 32
  %29 = bitcast i8* %xnv_nv to double*
  %30 = load double* %29, align 8, !tbaa !5
  %cmp80 = fcmp une double %30, 0.000000e+00
  %conv81 = zext i1 %cmp80 to i32
  br label %cond.end91

cond.false82:                                     ; preds = %cond.false74
  %call83 = tail call signext i8 @Perl_sv_2bool(%struct.sv* %call42) #2
  %conv84 = sext i8 %call83 to i32
  br label %cond.end91

cond.end91:                                       ; preds = %land.end63, %cond.true78, %cond.false82, %cond.true69
  %cond92 = phi i32 [ %cond64, %land.end63 ], [ %conv73, %cond.true69 ], [ %conv81, %cond.true78 ], [ %conv84, %cond.false82 ]
  %tobool93 = icmp ne i32 %cond92, 0
  br label %land.end94

land.end94:                                       ; preds = %cond.end40, %cond.end91
  %31 = phi i1 [ false, %cond.end40 ], [ %tobool93, %cond.end91 ]
  %conv95 = zext i1 %31 to i8
  tail call void @Perl_do_sv_dump(i32 0, %struct._PerlIO** %call43, %struct.sv* %6, i32 0, i32 %lim.0, i8 signext %conv95, i64 %cond41) #2
  store i32 %16, i32* @PL_dumpindent, align 4, !tbaa !3
  store %struct.sv** %add.ptr10, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  ret void
}
