define %struct.sv* @DeadCode() #0 {
entry:
  %call = tail call %struct.av* @Perl_newAV() #2
  %0 = bitcast %struct.av* %call to %struct.sv*
  %call1 = tail call %struct.sv* @Perl_newRV_noinc(%struct.sv* %0) #2
  %1 = load %struct.sv** @PL_sv_arenaroot, align 8, !tbaa !0
  %tobool346 = icmp eq %struct.sv* %1, null
  br i1 %tobool346, label %for.end225, label %for.body

for.body:                                         ; preds = %entry, %for.inc223
  %sva.0352 = phi %struct.sv* [ %59, %for.inc223 ], [ %1, %entry ]
  %tm.0351 = phi i32 [ %tm.1.ph332, %for.inc223 ], [ 0, %entry ]
  %tref.0350 = phi i32 [ %tref.1.ph330, %for.inc223 ], [ 0, %entry ]
  %ts.0349 = phi i32 [ %ts.1.ph328, %for.inc223 ], [ 0, %entry ]
  %ta.0348 = phi i32 [ %ta.1.ph326, %for.inc223 ], [ 0, %entry ]
  %tas.0347 = phi i32 [ %tas.1.ph324, %for.inc223 ], [ 0, %entry ]
  %sv_refcnt = getelementptr inbounds %struct.sv* %sva.0352, i64 0, i32 1
  %2 = load i32* %sv_refcnt, align 4, !tbaa !3
  %idxprom = zext i32 %2 to i64
  %arrayidx = getelementptr inbounds %struct.sv* %sva.0352, i64 %idxprom
  %cmp320334 = icmp ugt i32 %2, 1
  br i1 %cmp320334, label %for.body3.lr.ph.lr.ph, label %for.inc223

for.body3.lr.ph.lr.ph:                            ; preds = %for.body
  %sv.0319333 = getelementptr inbounds %struct.sv* %sva.0352, i64 1
  br label %for.body3.lr.ph

for.body3.lr.ph:                                  ; preds = %for.body3.lr.ph.lr.ph, %if.end214
  %sv.0319341 = phi %struct.sv* [ %sv.0319333, %for.body3.lr.ph.lr.ph ], [ %sv.0319, %if.end214 ]
  %sva.0.pn.ph340 = phi %struct.sv* [ %sva.0352, %for.body3.lr.ph.lr.ph ], [ %sv.0322, %if.end214 ]
  %tm.1.ph339 = phi i32 [ %tm.0351, %for.body3.lr.ph.lr.ph ], [ %add216, %if.end214 ]
  %tref.1.ph338 = phi i32 [ %tref.0350, %for.body3.lr.ph.lr.ph ], [ %add215, %if.end214 ]
  %ts.1.ph337 = phi i32 [ %ts.0349, %for.body3.lr.ph.lr.ph ], [ %add217, %if.end214 ]
  %ta.1.ph336 = phi i32 [ %ta.0348, %for.body3.lr.ph.lr.ph ], [ %add218, %if.end214 ]
  %tas.1.ph335 = phi i32 [ %tas.0347, %for.body3.lr.ph.lr.ph ], [ %add219, %if.end214 ]
  br label %for.body3

for.body3:                                        ; preds = %for.body3.lr.ph, %for.cond2.backedge
  %sv.0322 = phi %struct.sv* [ %sv.0319341, %for.body3.lr.ph ], [ %sv.0, %for.cond2.backedge ]
  %sva.0.pn321 = phi %struct.sv* [ %sva.0.pn.ph340, %for.body3.lr.ph ], [ %sv.0322, %for.cond2.backedge ]
  %sv_flags = getelementptr inbounds %struct.sv* %sva.0.pn321, i64 1, i32 2
  %3 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %3, 255
  %cmp4 = icmp eq i32 %and, 12
  br i1 %cmp4, label %if.then, label %for.cond2.backedge

if.then:                                          ; preds = %for.body3
  %sv_any = bitcast %struct.sv* %sv.0322 to %struct.xpvcv**
  %4 = load %struct.xpvcv** %sv_any, align 8, !tbaa !0
  %xcv_padlist = getelementptr inbounds %struct.xpvcv* %4, i64 0, i32 15
  %5 = load %struct.av** %xcv_padlist, align 8, !tbaa !0
  %sv_any5 = getelementptr inbounds %struct.sv* %sv.0322, i64 0, i32 0
  %xcv_xsub = getelementptr inbounds %struct.xpvcv* %4, i64 0, i32 10
  %6 = load void (%struct.cv*)** %xcv_xsub, align 8, !tbaa !0
  %tobool6 = icmp eq void (%struct.cv*)* %6, null
  br i1 %tobool6, label %if.end, label %for.cond2.backedge

if.end:                                           ; preds = %if.then
  %xcv_gv = getelementptr inbounds %struct.xpvcv* %4, i64 0, i32 12
  %7 = load %struct.gv** %xcv_gv, align 8, !tbaa !0
  %tobool9 = icmp eq %struct.gv* %7, null
  br i1 %tobool9, label %for.cond2.backedge, label %if.end11

if.end11:                                         ; preds = %if.end
  %xcv_root = getelementptr inbounds %struct.xpvcv* %4, i64 0, i32 9
  %8 = load %struct.op** %xcv_root, align 8, !tbaa !0
  %tobool13 = icmp eq %struct.op* %8, null
  br i1 %tobool13, label %for.cond2.backedge, label %if.end15

for.cond2.backedge:                               ; preds = %if.end11, %if.end, %if.then, %for.body3, %if.then21
  %sv.0 = getelementptr inbounds %struct.sv* %sv.0322, i64 1
  %cmp = icmp ult %struct.sv* %sv.0, %arrayidx
  br i1 %cmp, label %for.body3, label %for.inc223

if.end15:                                         ; preds = %if.end11
  %call16 = tail call %struct._PerlIO** @Perl_PerlIO_stderr() #2
  %9 = load i8** %sv_any5, align 8, !tbaa !0
  %xcv_gv18 = getelementptr inbounds i8* %9, i64 96
  %10 = bitcast i8* %xcv_gv18 to %struct.gv**
  %11 = load %struct.gv** %10, align 8, !tbaa !0
  tail call void @Perl_do_gvgv_dump(i32 0, %struct._PerlIO** %call16, i8* getelementptr inbounds ([9 x i8]* @.str, i64 0, i64 0), %struct.gv* %11) #2
  %12 = load %struct.xpvcv** %sv_any, align 8, !tbaa !0
  %xcv_depth = getelementptr inbounds %struct.xpvcv* %12, i64 0, i32 14
  %13 = load i64* %xcv_depth, align 8, !tbaa !4
  %tobool20 = icmp eq i64 %13, 0
  br i1 %tobool20, label %if.end24, label %if.then21

if.then21:                                        ; preds = %if.end15
  %call22 = tail call %struct._PerlIO** @Perl_PerlIO_stderr() #2
  %call23 = tail call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %call22, i8* getelementptr inbounds ([8 x i8]* @.str1, i64 0, i64 0)) #2
  br label %for.cond2.backedge

if.end24:                                         ; preds = %if.end15
  %sv_any25 = getelementptr inbounds %struct.av* %5, i64 0, i32 0
  %14 = load %struct.xpvav** %sv_any25, align 8, !tbaa !0
  %xav_array = getelementptr inbounds %struct.xpvav* %14, i64 0, i32 0
  %15 = load i8** %xav_array, align 8, !tbaa !0
  %16 = bitcast i8* %15 to %struct.sv**
  %17 = bitcast %struct.av* %5 to %struct.sv*
  %18 = getelementptr inbounds %struct.av* %5, i64 0, i32 2
  %arrayidx108 = getelementptr inbounds i8* %15, i64 8
  %19 = bitcast i8* %arrayidx108 to %struct.sv**
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %for.end186, %if.then195, %if.end24
  %i.0.ph = phi i32 [ 0, %if.end24 ], [ %inc, %if.then195 ], [ %inc, %for.end186 ]
  %totm.0.ph = phi i32 [ 0, %if.end24 ], [ %add189, %if.then195 ], [ %add189, %for.end186 ]
  %totref.0.ph = phi i32 [ 0, %if.end24 ], [ %add193, %if.then195 ], [ %add193, %for.end186 ]
  %tots.0.ph = phi i32 [ 0, %if.end24 ], [ %add192, %if.then195 ], [ %add192, %for.end186 ]
  %tota.0.ph = phi i32 [ 0, %if.end24 ], [ %add190, %if.then195 ], [ %add190, %for.end186 ]
  %totas.0.ph = phi i32 [ 0, %if.end24 ], [ %add191, %if.then195 ], [ %add191, %for.end186 ]
  %dumpit.0.ph = phi i32 [ 0, %if.end24 ], [ %dumpit.1, %if.then195 ], [ 0, %for.end186 ]
  %20 = sext i32 %i.0.ph to i64
  br label %while.cond

while.cond:                                       ; preds = %while.cond.outer, %if.then42
  %indvars.iv = phi i64 [ %20, %while.cond.outer ], [ %indvars.iv.next, %if.then42 ]
  %i.0 = phi i32 [ %i.0.ph, %while.cond.outer ], [ %inc, %if.then42 ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %inc = add nsw i32 %i.0, 1
  %21 = load i32* %18, align 4, !tbaa !3
  %and27 = and i32 %21, 32768
  %tobool28 = icmp eq i32 %and27, 0
  br i1 %tobool28, label %cond.false, label %cond.true

cond.true:                                        ; preds = %while.cond
  %call29 = tail call i32 @Perl_mg_size(%struct.sv* %17) #2
  %conv30 = sext i32 %call29 to i64
  br label %cond.end

cond.false:                                       ; preds = %while.cond
  %22 = load %struct.xpvav** %sv_any25, align 8, !tbaa !0
  %xav_fill = getelementptr inbounds %struct.xpvav* %22, i64 0, i32 1
  %23 = load i64* %xav_fill, align 8, !tbaa !4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv30, %cond.true ], [ %23, %cond.false ]
  %cmp32 = icmp sgt i64 %indvars.iv.next, %cond
  br i1 %cmp32, label %while.end, label %while.body

while.body:                                       ; preds = %cond.end
  %arrayidx35 = getelementptr inbounds %struct.sv** %16, i64 %indvars.iv.next
  %24 = load %struct.sv** %arrayidx35, align 8, !tbaa !0
  %sv_any36 = bitcast %struct.sv* %24 to %struct.xpvav**
  %25 = load %struct.xpvav** %sv_any36, align 8, !tbaa !0
  %xav_array37 = getelementptr inbounds %struct.xpvav* %25, i64 0, i32 0
  %26 = load i8** %xav_array37, align 8, !tbaa !0
  %27 = bitcast i8* %26 to %struct.sv**
  %28 = load %struct.sv** %27, align 8, !tbaa !0
  %tobool39 = icmp eq %struct.sv* %28, null
  %cmp40 = icmp eq %struct.sv* %28, @PL_sv_undef
  %or.cond = or i1 %tobool39, %cmp40
  br i1 %or.cond, label %if.then42, label %if.end45

if.then42:                                        ; preds = %while.body
  %call43 = tail call %struct._PerlIO** @Perl_PerlIO_stderr() #2
  %call44 = tail call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %call43, i8* getelementptr inbounds ([22 x i8]* @.str2, i64 0, i64 0)) #2
  br label %while.cond

if.end45:                                         ; preds = %while.body
  %sv_any46 = bitcast %struct.sv* %28 to %struct.xpvav**
  %29 = load %struct.xpvav** %sv_any46, align 8, !tbaa !0
  %xav_array47 = getelementptr inbounds %struct.xpvav* %29, i64 0, i32 0
  %30 = load i8** %xav_array47, align 8, !tbaa !0
  %31 = bitcast i8* %30 to %struct.sv**
  %xav_max = getelementptr inbounds %struct.xpvav* %29, i64 0, i32 2
  %32 = load i64* %xav_max, align 8, !tbaa !4
  %add = shl i64 %32, 3
  %mul = add i64 %add, 8
  %conv49 = trunc i64 %mul to i32
  %xav_flags = getelementptr inbounds %struct.xpvav* %29, i64 0, i32 9
  %33 = load i8* %xav_flags, align 1, !tbaa !1
  %and52 = and i8 %33, 1
  %tobool53 = icmp eq i8 %and52, 0
  br i1 %tobool53, label %if.end105, label %for.cond55.preheader

for.cond55.preheader:                             ; preds = %if.end45
  %sv_flags57 = getelementptr inbounds %struct.sv* %28, i64 0, i32 2
  br label %for.cond55

for.cond55:                                       ; preds = %for.cond55.preheader, %for.inc
  %indvars.iv362 = phi i64 [ 0, %for.cond55.preheader ], [ %indvars.iv.next363, %for.inc ]
  %levelref.0 = phi i32 [ 0, %for.cond55.preheader ], [ %levelref.1, %for.inc ]
  %levelas.0 = phi i32 [ 0, %for.cond55.preheader ], [ %levelas.1, %for.inc ]
  %34 = load i32* %sv_flags57, align 4, !tbaa !3
  %and58 = and i32 %34, 32768
  %tobool59 = icmp eq i32 %and58, 0
  br i1 %tobool59, label %cond.false63, label %cond.true60

cond.true60:                                      ; preds = %for.cond55
  %call61 = tail call i32 @Perl_mg_size(%struct.sv* %28) #2
  %conv62 = sext i32 %call61 to i64
  br label %cond.end66

cond.false63:                                     ; preds = %for.cond55
  %35 = load %struct.xpvav** %sv_any46, align 8, !tbaa !0
  %xav_fill65 = getelementptr inbounds %struct.xpvav* %35, i64 0, i32 1
  %36 = load i64* %xav_fill65, align 8, !tbaa !4
  br label %cond.end66

cond.end66:                                       ; preds = %cond.false63, %cond.true60
  %cond67 = phi i64 [ %conv62, %cond.true60 ], [ %36, %cond.false63 ]
  %cmp68 = icmp slt i64 %indvars.iv362, %cond67
  br i1 %cmp68, label %for.body70, label %if.end105

for.body70:                                       ; preds = %cond.end66
  %arrayidx72 = getelementptr inbounds %struct.sv** %31, i64 %indvars.iv362
  %37 = load %struct.sv** %arrayidx72, align 8, !tbaa !0
  %sv_flags73 = getelementptr inbounds %struct.sv* %37, i64 0, i32 2
  %38 = load i32* %sv_flags73, align 4, !tbaa !3
  %and74 = and i32 %38, 524288
  %tobool75 = icmp eq i32 %and74, 0
  br i1 %tobool75, label %if.else, label %if.then76

if.then76:                                        ; preds = %for.body70
  %call77 = tail call %struct._PerlIO** @Perl_PerlIO_stderr() #2
  %call78 = tail call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %call77, i8* getelementptr inbounds ([19 x i8]* @.str3, i64 0, i64 0)) #2
  %inc79 = add nsw i32 %levelref.0, 1
  br label %for.inc

if.else:                                          ; preds = %for.body70
  %and83 = and i32 %38, 252
  %cmp84 = icmp ugt i32 %and83, 3
  br i1 %cmp84, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %if.else
  %sv_any88 = getelementptr inbounds %struct.sv* %37, i64 0, i32 0
  %39 = load i8** %sv_any88, align 8, !tbaa !0
  %xpv_len = getelementptr inbounds i8* %39, i64 16
  %40 = bitcast i8* %xpv_len to i64*
  %41 = load i64* %40, align 8, !tbaa !4
  %tobool89 = icmp eq i64 %41, 0
  br i1 %tobool89, label %for.inc, label %if.then90

if.then90:                                        ; preds = %land.lhs.true
  %sv_refcnt97 = getelementptr inbounds %struct.sv* %37, i64 0, i32 1
  %42 = load i32* %sv_refcnt97, align 4, !tbaa !3
  %conv98 = zext i32 %42 to i64
  %div = udiv i64 %41, %conv98
  %conv99310 = zext i32 %levelas.0 to i64
  %add100 = add i64 %div, %conv99310
  %conv101 = trunc i64 %add100 to i32
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %if.then76, %if.then90, %if.else
  %levelref.1 = phi i32 [ %inc79, %if.then76 ], [ %levelref.0, %if.then90 ], [ %levelref.0, %land.lhs.true ], [ %levelref.0, %if.else ]
  %levelas.1 = phi i32 [ %levelas.0, %if.then76 ], [ %conv101, %if.then90 ], [ %levelas.0, %land.lhs.true ], [ %levelas.0, %if.else ]
  %indvars.iv.next363 = add i64 %indvars.iv362, 1
  br label %for.cond55

if.end105:                                        ; preds = %cond.end66, %if.end45
  %levelref.2 = phi i32 [ 0, %if.end45 ], [ %levelref.0, %cond.end66 ]
  %levelas.2 = phi i32 [ 0, %if.end45 ], [ %levelas.0, %cond.end66 ]
  br label %for.cond106

for.cond106:                                      ; preds = %for.inc184, %if.end105
  %indvars.iv364 = phi i64 [ %indvars.iv.next365, %for.inc184 ], [ 1, %if.end105 ]
  %levelm.0 = phi i32 [ %levelm.1, %for.inc184 ], [ 0, %if.end105 ]
  %levelref.3 = phi i32 [ %levelref.4, %for.inc184 ], [ %levelref.2, %if.end105 ]
  %levels.0 = phi i32 [ %levels.1, %for.inc184 ], [ 0, %if.end105 ]
  %dumpit.1 = phi i32 [ %dumpit.2, %for.inc184 ], [ %dumpit.0.ph, %if.end105 ]
  %43 = load %struct.sv** %19, align 8, !tbaa !0
  %sv_flags109 = getelementptr inbounds %struct.sv* %43, i64 0, i32 2
  %44 = load i32* %sv_flags109, align 4, !tbaa !3
  %and110 = and i32 %44, 32768
  %tobool111 = icmp eq i32 %and110, 0
  br i1 %tobool111, label %cond.false116, label %cond.true112

cond.true112:                                     ; preds = %for.cond106
  %call114 = tail call i32 @Perl_mg_size(%struct.sv* %43) #2
  %conv115 = sext i32 %call114 to i64
  br label %cond.end120

cond.false116:                                    ; preds = %for.cond106
  %sv_any118 = bitcast %struct.sv* %43 to %struct.xpvav**
  %45 = load %struct.xpvav** %sv_any118, align 8, !tbaa !0
  %xav_fill119 = getelementptr inbounds %struct.xpvav* %45, i64 0, i32 1
  %46 = load i64* %xav_fill119, align 8, !tbaa !4
  br label %cond.end120

cond.end120:                                      ; preds = %cond.false116, %cond.true112
  %cond121 = phi i64 [ %conv115, %cond.true112 ], [ %46, %cond.false116 ]
  %cmp122 = icmp slt i64 %indvars.iv364, %cond121
  br i1 %cmp122, label %for.body124, label %for.end186

for.body124:                                      ; preds = %cond.end120
  %arrayidx126 = getelementptr inbounds %struct.sv** %27, i64 %indvars.iv364
  %47 = load %struct.sv** %arrayidx126, align 8, !tbaa !0
  %sv_flags127 = getelementptr inbounds %struct.sv* %47, i64 0, i32 2
  %48 = load i32* %sv_flags127, align 4, !tbaa !3
  %and128 = and i32 %48, 524288
  %tobool129 = icmp eq i32 %and128, 0
  br i1 %tobool129, label %if.else135, label %if.then130

if.then130:                                       ; preds = %for.body124
  %inc131 = add nsw i32 %levelref.3, 1
  %call132 = tail call %struct._PerlIO** @Perl_PerlIO_stderr() #2
  %49 = load %struct.sv** %arrayidx126, align 8, !tbaa !0
  tail call void @Perl_do_sv_dump(i32 0, %struct._PerlIO** %call132, %struct.sv* %49, i32 0, i32 4, i8 signext 0, i64 0) #2
  br label %for.inc184

if.else135:                                       ; preds = %for.body124
  %and139 = and i32 %48, 255
  %cmp140 = icmp ugt i32 %and139, 9
  br i1 %cmp140, label %if.then142, label %if.else154

if.then142:                                       ; preds = %if.else135
  %and146 = and i32 %48, 1024
  %tobool147 = icmp eq i32 %and146, 0
  br i1 %tobool147, label %if.then148, label %for.inc184

if.then148:                                       ; preds = %if.then142
  %inc149 = add nsw i32 %levelref.3, 1
  %call150 = tail call %struct._PerlIO** @Perl_PerlIO_stderr() #2
  %50 = load %struct.sv** %arrayidx126, align 8, !tbaa !0
  tail call void @Perl_do_sv_dump(i32 0, %struct._PerlIO** %call150, %struct.sv* %50, i32 0, i32 4, i8 signext 0, i64 0) #2
  br label %for.inc184

if.else154:                                       ; preds = %if.else135
  %cmp159 = icmp ugt i32 %and139, 3
  br i1 %cmp159, label %land.lhs.true161, label %for.inc184

land.lhs.true161:                                 ; preds = %if.else154
  %sv_any164 = getelementptr inbounds %struct.sv* %47, i64 0, i32 0
  %51 = load i8** %sv_any164, align 8, !tbaa !0
  %xpv_len165 = getelementptr inbounds i8* %51, i64 16
  %52 = bitcast i8* %xpv_len165 to i64*
  %53 = load i64* %52, align 8, !tbaa !4
  %tobool166 = icmp eq i64 %53, 0
  br i1 %tobool166, label %for.inc184, label %if.then167

if.then167:                                       ; preds = %land.lhs.true161
  %inc168 = add nsw i32 %levels.0, 1
  %sv_refcnt175 = getelementptr inbounds %struct.sv* %47, i64 0, i32 1
  %54 = load i32* %sv_refcnt175, align 4, !tbaa !3
  %conv176 = zext i32 %54 to i64
  %div177 = udiv i64 %53, %conv176
  %conv178309 = zext i32 %levelm.0 to i64
  %add179 = add i64 %div177, %conv178309
  %conv180 = trunc i64 %add179 to i32
  br label %for.inc184

for.inc184:                                       ; preds = %if.then142, %land.lhs.true161, %if.then130, %if.else154, %if.then167, %if.then148
  %levelm.1 = phi i32 [ %levelm.0, %if.then130 ], [ %levelm.0, %if.then142 ], [ %levelm.0, %if.then148 ], [ %conv180, %if.then167 ], [ %levelm.0, %land.lhs.true161 ], [ %levelm.0, %if.else154 ]
  %levelref.4 = phi i32 [ %inc131, %if.then130 ], [ %levelref.3, %if.then142 ], [ %inc149, %if.then148 ], [ %levelref.3, %if.then167 ], [ %levelref.3, %land.lhs.true161 ], [ %levelref.3, %if.else154 ]
  %levels.1 = phi i32 [ %levels.0, %if.then130 ], [ %levels.0, %if.then142 ], [ %levels.0, %if.then148 ], [ %inc168, %if.then167 ], [ %levels.0, %land.lhs.true161 ], [ %levels.0, %if.else154 ]
  %dumpit.2 = phi i32 [ 1, %if.then130 ], [ %dumpit.1, %if.then142 ], [ 1, %if.then148 ], [ %dumpit.1, %if.then167 ], [ %dumpit.1, %land.lhs.true161 ], [ %dumpit.1, %if.else154 ]
  %indvars.iv.next365 = add i64 %indvars.iv364, 1
  br label %for.cond106

for.end186:                                       ; preds = %cond.end120
  %call187 = tail call %struct._PerlIO** @Perl_PerlIO_stderr() #2
  %call188 = tail call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %call187, i8* getelementptr inbounds ([75 x i8]* @.str4, i64 0, i64 0), i32 %inc, i32 %levelref.3, i32 %levelm.0, i32 %levels.0, i32 %conv49, i32 %levelas.2) #2
  %add189 = add nsw i32 %levelm.0, %totm.0.ph
  %add190 = add nsw i32 %conv49, %tota.0.ph
  %add191 = add nsw i32 %levelas.2, %totas.0.ph
  %add192 = add nsw i32 %levels.0, %tots.0.ph
  %add193 = add nsw i32 %levelref.3, %totref.0.ph
  %tobool194 = icmp eq i32 %dumpit.1, 0
  br i1 %tobool194, label %while.cond.outer, label %if.then195

if.then195:                                       ; preds = %for.end186
  %call196 = tail call %struct._PerlIO** @Perl_PerlIO_stderr() #2
  tail call void @Perl_do_sv_dump(i32 0, %struct._PerlIO** %call196, %struct.sv* %sv.0322, i32 0, i32 2, i8 signext 0, i64 0) #2
  br label %while.cond.outer

while.end:                                        ; preds = %cond.end
  %55 = load i32* %18, align 4, !tbaa !3
  %and199 = and i32 %55, 32768
  %tobool200 = icmp eq i32 %and199, 0
  br i1 %tobool200, label %cond.false204, label %cond.true201

cond.true201:                                     ; preds = %while.end
  %call202 = tail call i32 @Perl_mg_size(%struct.sv* %17) #2
  %conv203 = sext i32 %call202 to i64
  br label %cond.end207

cond.false204:                                    ; preds = %while.end
  %56 = load %struct.xpvav** %sv_any25, align 8, !tbaa !0
  %xav_fill206 = getelementptr inbounds %struct.xpvav* %56, i64 0, i32 1
  %57 = load i64* %xav_fill206, align 8, !tbaa !4
  br label %cond.end207

cond.end207:                                      ; preds = %cond.false204, %cond.true201
  %cond208 = phi i64 [ %conv203, %cond.true201 ], [ %57, %cond.false204 ]
  %cmp209 = icmp sgt i64 %cond208, 1
  br i1 %cmp209, label %if.then211, label %if.end214

if.then211:                                       ; preds = %cond.end207
  %call212 = tail call %struct._PerlIO** @Perl_PerlIO_stderr() #2
  %call213 = tail call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %call212, i8* getelementptr inbounds ([71 x i8]* @.str5, i64 0, i64 0), i32 %totref.0.ph, i32 %totm.0.ph, i32 %tots.0.ph, i32 %tota.0.ph, i32 %totas.0.ph) #2
  br label %if.end214

if.end214:                                        ; preds = %if.then211, %cond.end207
  %add215 = add nsw i32 %totref.0.ph, %tref.1.ph338
  %add216 = add nsw i32 %totm.0.ph, %tm.1.ph339
  %add217 = add nsw i32 %tots.0.ph, %ts.1.ph337
  %add218 = add nsw i32 %tota.0.ph, %ta.1.ph336
  %add219 = add nsw i32 %totas.0.ph, %tas.1.ph335
  %sv.0319 = getelementptr inbounds %struct.sv* %sv.0322, i64 1
  %cmp320 = icmp ult %struct.sv* %sv.0319, %arrayidx
  br i1 %cmp320, label %for.body3.lr.ph, label %for.inc223

for.inc223:                                       ; preds = %for.body, %if.end214, %for.cond2.backedge
  %tm.1.ph332 = phi i32 [ %tm.1.ph339, %for.cond2.backedge ], [ %tm.0351, %for.body ], [ %add216, %if.end214 ]
  %tref.1.ph330 = phi i32 [ %tref.1.ph338, %for.cond2.backedge ], [ %tref.0350, %for.body ], [ %add215, %if.end214 ]
  %ts.1.ph328 = phi i32 [ %ts.1.ph337, %for.cond2.backedge ], [ %ts.0349, %for.body ], [ %add217, %if.end214 ]
  %ta.1.ph326 = phi i32 [ %ta.1.ph336, %for.cond2.backedge ], [ %ta.0348, %for.body ], [ %add218, %if.end214 ]
  %tas.1.ph324 = phi i32 [ %tas.1.ph335, %for.cond2.backedge ], [ %tas.0347, %for.body ], [ %add219, %if.end214 ]
  %sv_any224 = getelementptr inbounds %struct.sv* %sva.0352, i64 0, i32 0
  %58 = load i8** %sv_any224, align 8, !tbaa !0
  %59 = bitcast i8* %58 to %struct.sv*
  %tobool = icmp eq i8* %58, null
  br i1 %tobool, label %for.end225, label %for.body

for.end225:                                       ; preds = %for.inc223, %entry
  %tm.0.lcssa = phi i32 [ 0, %entry ], [ %tm.1.ph332, %for.inc223 ]
  %tref.0.lcssa = phi i32 [ 0, %entry ], [ %tref.1.ph330, %for.inc223 ]
  %ts.0.lcssa = phi i32 [ 0, %entry ], [ %ts.1.ph328, %for.inc223 ]
  %ta.0.lcssa = phi i32 [ 0, %entry ], [ %ta.1.ph326, %for.inc223 ]
  %tas.0.lcssa = phi i32 [ 0, %entry ], [ %tas.1.ph324, %for.inc223 ]
  %call226 = tail call %struct._PerlIO** @Perl_PerlIO_stderr() #2
  %call227 = tail call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %call226, i8* getelementptr inbounds ([67 x i8]* @.str6, i64 0, i64 0), i32 %tref.0.lcssa, i32 %tm.0.lcssa, i32 %ts.0.lcssa, i32 %ta.0.lcssa, i32 %tas.0.lcssa) #2
  ret %struct.sv* %call1
}
