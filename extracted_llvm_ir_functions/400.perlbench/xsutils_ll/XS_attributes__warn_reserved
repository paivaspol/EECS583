define void @XS_attributes__warn_reserved(%struct.cv* nocapture %cv) #0 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %2 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i32* %2, i64 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %3 = load i32* %2, align 4, !tbaa !3
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %idx.ext
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nsw i64 %idx.ext, 32
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %4 = and i64 %sub.ptr.sub3, 34359738360
  %cmp = icmp eq i64 %4, 0
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([37 x i8]* @.str18, i64 0, i64 0)) #4
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %5 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast7 = ptrtoint %struct.sv** %5 to i64
  %sub.ptr.sub9 = sub i64 %sub.ptr.lhs.cast7, %sub.ptr.lhs.cast1
  %cmp11 = icmp slt i64 %sub.ptr.sub9, 8
  br i1 %cmp11, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end
  %call = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %0, %struct.sv** %0, i32 1) #4
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end
  %6 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings = getelementptr inbounds %struct.cop* %6, i64 0, i32 14
  %7 = load %struct.sv** %cop_warnings, align 8, !tbaa !0
  %cmp15 = icmp eq %struct.sv* %7, null
  br i1 %cmp15, label %lor.rhs, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end14
  %8 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings17 = getelementptr inbounds %struct.cop* %8, i64 0, i32 14
  %9 = load %struct.sv** %cop_warnings17, align 8, !tbaa !0
  %cmp18 = icmp eq %struct.sv* %9, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp18, label %lor.rhs, label %land.lhs.true20

land.lhs.true20:                                  ; preds = %land.lhs.true
  %10 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings21 = getelementptr inbounds %struct.cop* %10, i64 0, i32 14
  %11 = load %struct.sv** %cop_warnings21, align 8, !tbaa !0
  %cmp22 = icmp eq %struct.sv* %11, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp22, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true20
  %12 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings24 = getelementptr inbounds %struct.cop* %12, i64 0, i32 14
  %13 = load %struct.sv** %cop_warnings24, align 8, !tbaa !0
  %sv_any = getelementptr inbounds %struct.sv* %13, i64 0, i32 0
  %14 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_pv = bitcast i8* %14 to i8**
  %15 = load i8** %xpv_pv, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i8* %15, i64 9
  %16 = load i8* %arrayidx, align 1, !tbaa !1
  %and = and i8 %16, 4
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %lor.lhs.false, %land.lhs.true, %if.end14
  %17 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings26 = getelementptr inbounds %struct.cop* %17, i64 0, i32 14
  %18 = load %struct.sv** %cop_warnings26, align 8, !tbaa !0
  %cmp27 = icmp eq %struct.sv* %18, null
  br i1 %cmp27, label %land.rhs, label %lor.end

land.rhs:                                         ; preds = %lor.rhs
  %19 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and30 = and i8 %19, 1
  %tobool31 = icmp ne i8 %and30, 0
  %phitmp = select i1 %tobool31, %struct.sv* @PL_sv_yes, %struct.sv* @PL_sv_no
  br label %lor.end

lor.end:                                          ; preds = %lor.lhs.false, %lor.rhs, %land.rhs, %land.lhs.true20
  %20 = phi %struct.sv* [ @PL_sv_yes, %lor.lhs.false ], [ @PL_sv_yes, %land.lhs.true20 ], [ @PL_sv_no, %lor.rhs ], [ %phitmp, %land.rhs ]
  %sext = add i64 %add.ptr.idx, 4294967296
  %idxprom = ashr exact i64 %sext, 32
  %21 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %arrayidx33 = getelementptr inbounds %struct.sv** %21, i64 %idxprom
  store %struct.sv* %20, %struct.sv** %arrayidx33, align 8, !tbaa !0
  %22 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %add.ptr35 = getelementptr inbounds %struct.sv** %22, i64 %idxprom
  store %struct.sv** %add.ptr35, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  ret void
}
