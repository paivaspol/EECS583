define signext i8 @Perl_do_seek(%struct.gv* %gv, i64 %pos, i32 %whence) #0 {
entry:
  %tobool = icmp eq %struct.gv* %gv, null
  br i1 %tobool, label %if.end, label %land.lhs.true2

land.lhs.true2:                                   ; preds = %entry
  %0 = getelementptr inbounds %struct.gv* %gv, i64 0, i32 2
  %1 = load i32* %0, align 4, !tbaa !0
  %and = and i32 %1, 255
  %cmp = icmp eq i32 %and, 13
  br i1 %cmp, label %land.lhs.true3, label %if.end

land.lhs.true3:                                   ; preds = %land.lhs.true2
  %sv_any = getelementptr inbounds %struct.gv* %gv, i64 0, i32 0
  %2 = load %struct.xpvgv** %sv_any, align 8, !tbaa !3
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %2, i64 0, i32 7
  %3 = load %struct.gp** %xgv_gp, align 8, !tbaa !3
  %tobool4 = icmp eq %struct.gp* %3, null
  br i1 %tobool4, label %if.end, label %cond.end

cond.end:                                         ; preds = %land.lhs.true3
  %gp_io = getelementptr inbounds %struct.gp* %3, i64 0, i32 2
  %4 = load %struct.io** %gp_io, align 8, !tbaa !3
  %tobool7 = icmp eq %struct.io* %4, null
  br i1 %tobool7, label %if.end, label %land.lhs.true8

land.lhs.true8:                                   ; preds = %cond.end
  %sv_any9 = getelementptr inbounds %struct.io* %4, i64 0, i32 0
  %5 = load %struct.xpvio** %sv_any9, align 8, !tbaa !3
  %xio_ifp = getelementptr inbounds %struct.xpvio* %5, i64 0, i32 7
  %6 = load %struct._PerlIO*** %xio_ifp, align 8, !tbaa !3
  %tobool10 = icmp eq %struct._PerlIO** %6, null
  br i1 %tobool10, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true8
  %call = tail call i32 @Perl_PerlIO_seek(%struct._PerlIO** %6, i64 %pos, i32 %whence) #8
  %call.lobit = lshr i32 %call, 31
  %7 = trunc i32 %call.lobit to i8
  %.not = xor i8 %7, 1
  br label %return

if.end:                                           ; preds = %entry, %land.lhs.true2, %land.lhs.true3, %land.lhs.true8, %cond.end
  %io.0 = phi %struct.io* [ %4, %land.lhs.true8 ], [ null, %cond.end ], [ null, %entry ], [ null, %land.lhs.true3 ], [ null, %land.lhs.true2 ]
  %8 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings = getelementptr inbounds %struct.cop* %8, i64 0, i32 14
  %9 = load %struct.sv** %cop_warnings, align 8, !tbaa !3
  %cmp13 = icmp eq %struct.sv* %9, null
  br i1 %cmp13, label %lor.lhs.false36, label %land.lhs.true15

land.lhs.true15:                                  ; preds = %if.end
  %10 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings16 = getelementptr inbounds %struct.cop* %10, i64 0, i32 14
  %11 = load %struct.sv** %cop_warnings16, align 8, !tbaa !3
  %cmp17 = icmp eq %struct.sv* %11, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp17, label %lor.lhs.false36, label %land.lhs.true19

land.lhs.true19:                                  ; preds = %land.lhs.true15
  %12 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings20 = getelementptr inbounds %struct.cop* %12, i64 0, i32 14
  %13 = load %struct.sv** %cop_warnings20, align 8, !tbaa !3
  %cmp21 = icmp eq %struct.sv* %13, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp21, label %if.then44, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true19
  %14 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings23 = getelementptr inbounds %struct.cop* %14, i64 0, i32 14
  %15 = load %struct.sv** %cop_warnings23, align 8, !tbaa !3
  %sv_any24 = getelementptr inbounds %struct.sv* %15, i64 0, i32 0
  %16 = load i8** %sv_any24, align 8, !tbaa !3
  %xpv_pv = bitcast i8* %16 to i8**
  %17 = load i8** %xpv_pv, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds i8* %17, i64 2
  %18 = load i8* %arrayidx, align 1, !tbaa !1
  %and26 = and i8 %18, 64
  %tobool27 = icmp eq i8 %and26, 0
  br i1 %tobool27, label %lor.lhs.false28, label %if.then44

lor.lhs.false28:                                  ; preds = %lor.lhs.false
  %19 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings29 = getelementptr inbounds %struct.cop* %19, i64 0, i32 14
  %20 = load %struct.sv** %cop_warnings29, align 8, !tbaa !3
  %sv_any30 = getelementptr inbounds %struct.sv* %20, i64 0, i32 0
  %21 = load i8** %sv_any30, align 8, !tbaa !3
  %xpv_pv31 = bitcast i8* %21 to i8**
  %22 = load i8** %xpv_pv31, align 8, !tbaa !3
  %arrayidx32 = getelementptr inbounds i8* %22, i64 1
  %23 = load i8* %arrayidx32, align 1, !tbaa !1
  %and34 = and i8 %23, 16
  %tobool35 = icmp eq i8 %and34, 0
  br i1 %tobool35, label %lor.lhs.false36, label %if.then44

lor.lhs.false36:                                  ; preds = %lor.lhs.false28, %land.lhs.true15, %if.end
  %24 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings37 = getelementptr inbounds %struct.cop* %24, i64 0, i32 14
  %25 = load %struct.sv** %cop_warnings37, align 8, !tbaa !3
  %cmp38 = icmp eq %struct.sv* %25, null
  br i1 %cmp38, label %land.lhs.true40, label %if.end46

land.lhs.true40:                                  ; preds = %lor.lhs.false36
  %26 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and42 = and i8 %26, 1
  %tobool43 = icmp eq i8 %and42, 0
  br i1 %tobool43, label %if.end46, label %if.then44

if.then44:                                        ; preds = %lor.lhs.false28, %lor.lhs.false, %land.lhs.true40, %land.lhs.true19
  %27 = load %struct.op** @PL_op, align 8, !tbaa !3
  %op_type = getelementptr inbounds %struct.op* %27, i64 0, i32 4
  %28 = load i16* %op_type, align 2, !tbaa !4
  %conv45 = zext i16 %28 to i32
  tail call void @Perl_report_evil_fh(%struct.gv* %gv, %struct.io* %io.0, i32 %conv45) #8
  br label %if.end46

if.end46:                                         ; preds = %land.lhs.true40, %if.then44, %lor.lhs.false36
  %call47 = tail call i32* @__errno_location() #8
  store i32 9, i32* %call47, align 4, !tbaa !0
  br label %return

return:                                           ; preds = %if.end46, %if.then
  %retval.0 = phi i8 [ %.not, %if.then ], [ 0, %if.end46 ]
  ret i8 %retval.0
}
