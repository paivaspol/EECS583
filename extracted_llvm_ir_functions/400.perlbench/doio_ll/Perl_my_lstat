define i32 @Perl_my_lstat() #0 {
entry:
  %n_a = alloca i64, align 8
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !3
  %1 = load %struct.op** @PL_op, align 8, !tbaa !3
  %op_flags = getelementptr inbounds %struct.op* %1, i64 0, i32 6
  %2 = load i8* %op_flags, align 1, !tbaa !1
  %and = and i8 %2, 16
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %if.end43, label %if.then

if.then:                                          ; preds = %entry
  %3 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !3
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %3 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp = icmp slt i64 %sub.ptr.sub, 8
  br i1 %cmp, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %call = call %struct.sv** @Perl_stack_grow(%struct.sv** %0, %struct.sv** %0, i32 1) #8
  %.pre = load %struct.op** @PL_op, align 8, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %4 = phi %struct.op* [ %.pre, %if.then2 ], [ %1, %if.then ]
  %sp.0 = phi %struct.sv** [ %call, %if.then2 ], [ %0, %if.then ]
  %op_sv = getelementptr inbounds %struct.op* %4, i64 1
  %5 = bitcast %struct.op* %op_sv to %struct.sv**
  %6 = load %struct.sv** %5, align 8, !tbaa !3
  %7 = bitcast %struct.sv* %6 to %struct.gv*
  %8 = load %struct.gv** @PL_defgv, align 8, !tbaa !3
  %cmp3 = icmp eq %struct.gv* %7, %8
  br i1 %cmp3, label %if.then5, label %if.end10

if.then5:                                         ; preds = %if.end
  %9 = load i32* @PL_laststype, align 4, !tbaa !0
  %cmp6 = icmp eq i32 %9, 234
  br i1 %cmp6, label %if.end9, label %if.then8

if.then8:                                         ; preds = %if.then5
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([40 x i8]* @.str32, i64 0, i64 0)) #8
  br label %if.end9

if.end9:                                          ; preds = %if.then5, %if.then8
  %10 = load i32* @PL_laststatval, align 4, !tbaa !0
  br label %return

if.end10:                                         ; preds = %if.end
  %11 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings = getelementptr inbounds %struct.cop* %11, i64 0, i32 14
  %12 = load %struct.sv** %cop_warnings, align 8, !tbaa !3
  %cmp11 = icmp eq %struct.sv* %12, null
  br i1 %cmp11, label %lor.lhs.false24, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end10
  %13 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings13 = getelementptr inbounds %struct.cop* %13, i64 0, i32 14
  %14 = load %struct.sv** %cop_warnings13, align 8, !tbaa !3
  %cmp14 = icmp eq %struct.sv* %14, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp14, label %lor.lhs.false24, label %land.lhs.true16

land.lhs.true16:                                  ; preds = %land.lhs.true
  %15 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings17 = getelementptr inbounds %struct.cop* %15, i64 0, i32 14
  %16 = load %struct.sv** %cop_warnings17, align 8, !tbaa !3
  %cmp18 = icmp eq %struct.sv* %16, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp18, label %if.then32, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true16
  %17 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings20 = getelementptr inbounds %struct.cop* %17, i64 0, i32 14
  %18 = load %struct.sv** %cop_warnings20, align 8, !tbaa !3
  %sv_any = getelementptr inbounds %struct.sv* %18, i64 0, i32 0
  %19 = load i8** %sv_any, align 8, !tbaa !3
  %xpv_pv = bitcast i8* %19 to i8**
  %20 = load i8** %xpv_pv, align 8, !tbaa !3
  %arrayidx = getelementptr inbounds i8* %20, i64 1
  %21 = load i8* %arrayidx, align 1, !tbaa !1
  %and22 = and i8 %21, 4
  %tobool23 = icmp eq i8 %and22, 0
  br i1 %tobool23, label %lor.lhs.false24, label %if.then32

lor.lhs.false24:                                  ; preds = %lor.lhs.false, %land.lhs.true, %if.end10
  %22 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings25 = getelementptr inbounds %struct.cop* %22, i64 0, i32 14
  %23 = load %struct.sv** %cop_warnings25, align 8, !tbaa !3
  %cmp26 = icmp eq %struct.sv* %23, null
  br i1 %cmp26, label %land.lhs.true28, label %if.end43

land.lhs.true28:                                  ; preds = %lor.lhs.false24
  %24 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and30 = and i8 %24, 1
  %tobool31 = icmp eq i8 %and30, 0
  br i1 %tobool31, label %if.end43, label %if.then32

if.then32:                                        ; preds = %lor.lhs.false, %land.lhs.true28, %land.lhs.true16
  %25 = load %struct.op** @PL_op, align 8, !tbaa !3
  %op_sv33 = getelementptr inbounds %struct.op* %25, i64 1
  %26 = bitcast %struct.op* %op_sv33 to %struct.sv**
  %27 = load %struct.sv** %26, align 8, !tbaa !3
  %28 = bitcast %struct.sv* %27 to %struct.gv*
  %sv_any34 = bitcast %struct.sv* %27 to %struct.xpvgv**
  %29 = load %struct.xpvgv** %sv_any34, align 8, !tbaa !3
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %29, i64 0, i32 7
  %30 = load %struct.gp** %xgv_gp, align 8, !tbaa !3
  %gp_egv = getelementptr inbounds %struct.gp* %30, i64 0, i32 6
  %31 = load %struct.gv** %gp_egv, align 8, !tbaa !3
  %tobool35 = icmp eq %struct.gv* %31, null
  %. = select i1 %tobool35, %struct.gv* %28, %struct.gv* %31
  %sv_any41 = getelementptr inbounds %struct.gv* %., i64 0, i32 0
  %32 = load %struct.xpvgv** %sv_any41, align 8, !tbaa !3
  %xgv_name = getelementptr inbounds %struct.xpvgv* %32, i64 0, i32 8
  %33 = load i8** %xgv_name, align 8, !tbaa !3
  call void (i32, i8*, ...)* @Perl_warner(i32 5, i8* getelementptr inbounds ([27 x i8]* @.str33, i64 0, i64 0), i8* %33) #8
  store i32 -1, i32* @PL_laststatval, align 4, !tbaa !0
  br label %return

if.end43:                                         ; preds = %land.lhs.true28, %entry, %lor.lhs.false24
  %sp.1 = phi %struct.sv** [ %sp.0, %land.lhs.true28 ], [ %sp.0, %lor.lhs.false24 ], [ %0, %entry ]
  store i32 234, i32* @PL_laststype, align 4, !tbaa !0
  store %struct.gv* null, %struct.gv** @PL_statgv, align 8, !tbaa !3
  %incdec.ptr = getelementptr inbounds %struct.sv** %sp.1, i64 -1
  %34 = load %struct.sv** %sp.1, align 8, !tbaa !3
  store %struct.sv** %incdec.ptr, %struct.sv*** @PL_stack_sp, align 8, !tbaa !3
  %sv_flags = getelementptr inbounds %struct.sv* %34, i64 0, i32 2
  %35 = load i32* %sv_flags, align 4, !tbaa !0
  %and44 = and i32 %35, 524288
  %tobool45 = icmp eq i32 %and44, 0
  br i1 %tobool45, label %if.end100, label %land.lhs.true46

land.lhs.true46:                                  ; preds = %if.end43
  %sv_any47 = getelementptr inbounds %struct.sv* %34, i64 0, i32 0
  %36 = load i8** %sv_any47, align 8, !tbaa !3
  %xrv_rv = bitcast i8* %36 to %struct.sv**
  %37 = load %struct.sv** %xrv_rv, align 8, !tbaa !3
  %sv_flags48 = getelementptr inbounds %struct.sv* %37, i64 0, i32 2
  %38 = load i32* %sv_flags48, align 4, !tbaa !0
  %and49 = and i32 %38, 255
  %cmp50 = icmp eq i32 %and49, 13
  br i1 %cmp50, label %land.lhs.true52, label %if.end100

land.lhs.true52:                                  ; preds = %land.lhs.true46
  %39 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings53 = getelementptr inbounds %struct.cop* %39, i64 0, i32 14
  %40 = load %struct.sv** %cop_warnings53, align 8, !tbaa !3
  %cmp54 = icmp eq %struct.sv* %40, null
  br i1 %cmp54, label %lor.lhs.false72, label %land.lhs.true56

land.lhs.true56:                                  ; preds = %land.lhs.true52
  %41 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings57 = getelementptr inbounds %struct.cop* %41, i64 0, i32 14
  %42 = load %struct.sv** %cop_warnings57, align 8, !tbaa !3
  %cmp58 = icmp eq %struct.sv* %42, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp58, label %lor.lhs.false72, label %land.lhs.true60

land.lhs.true60:                                  ; preds = %land.lhs.true56
  %43 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings61 = getelementptr inbounds %struct.cop* %43, i64 0, i32 14
  %44 = load %struct.sv** %cop_warnings61, align 8, !tbaa !3
  %cmp62 = icmp eq %struct.sv* %44, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp62, label %if.then80, label %lor.lhs.false64

lor.lhs.false64:                                  ; preds = %land.lhs.true60
  %45 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings65 = getelementptr inbounds %struct.cop* %45, i64 0, i32 14
  %46 = load %struct.sv** %cop_warnings65, align 8, !tbaa !3
  %sv_any66 = getelementptr inbounds %struct.sv* %46, i64 0, i32 0
  %47 = load i8** %sv_any66, align 8, !tbaa !3
  %xpv_pv67 = bitcast i8* %47 to i8**
  %48 = load i8** %xpv_pv67, align 8, !tbaa !3
  %arrayidx68 = getelementptr inbounds i8* %48, i64 1
  %49 = load i8* %arrayidx68, align 1, !tbaa !1
  %and70 = and i8 %49, 4
  %tobool71 = icmp eq i8 %and70, 0
  br i1 %tobool71, label %lor.lhs.false72, label %if.then80

lor.lhs.false72:                                  ; preds = %lor.lhs.false64, %land.lhs.true56, %land.lhs.true52
  %50 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings73 = getelementptr inbounds %struct.cop* %50, i64 0, i32 14
  %51 = load %struct.sv** %cop_warnings73, align 8, !tbaa !3
  %cmp74 = icmp eq %struct.sv* %51, null
  br i1 %cmp74, label %land.lhs.true76, label %if.end100

land.lhs.true76:                                  ; preds = %lor.lhs.false72
  %52 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and78 = and i8 %52, 1
  %tobool79 = icmp eq i8 %and78, 0
  br i1 %tobool79, label %if.end100, label %if.then80

if.then80:                                        ; preds = %lor.lhs.false64, %land.lhs.true76, %land.lhs.true60
  %53 = load i8** %sv_any47, align 8, !tbaa !3
  %xrv_rv82 = bitcast i8* %53 to %struct.sv**
  %54 = load %struct.sv** %xrv_rv82, align 8, !tbaa !3
  %55 = bitcast %struct.sv* %54 to %struct.gv*
  %sv_any83 = bitcast %struct.sv* %54 to %struct.xpvgv**
  %56 = load %struct.xpvgv** %sv_any83, align 8, !tbaa !3
  %xgv_gp84 = getelementptr inbounds %struct.xpvgv* %56, i64 0, i32 7
  %57 = load %struct.gp** %xgv_gp84, align 8, !tbaa !3
  %gp_egv85 = getelementptr inbounds %struct.gp* %57, i64 0, i32 6
  %58 = load %struct.gv** %gp_egv85, align 8, !tbaa !3
  %tobool86 = icmp eq %struct.gv* %58, null
  %.194 = select i1 %tobool86, %struct.gv* %55, %struct.gv* %58
  %sv_any98 = getelementptr inbounds %struct.gv* %.194, i64 0, i32 0
  %59 = load %struct.xpvgv** %sv_any98, align 8, !tbaa !3
  %xgv_name99 = getelementptr inbounds %struct.xpvgv* %59, i64 0, i32 8
  %60 = load i8** %xgv_name99, align 8, !tbaa !3
  call void (i32, i8*, ...)* @Perl_warner(i32 5, i8* getelementptr inbounds ([27 x i8]* @.str33, i64 0, i64 0), i8* %60) #8
  store i32 -1, i32* @PL_laststatval, align 4, !tbaa !0
  br label %return

if.end100:                                        ; preds = %land.lhs.true76, %lor.lhs.false72, %if.end43, %land.lhs.true46
  %61 = load %struct.sv** @PL_statname, align 8, !tbaa !3
  %62 = load i32* %sv_flags, align 4, !tbaa !0
  %and102 = and i32 %62, 262144
  %cmp103 = icmp eq i32 %and102, 0
  br i1 %cmp103, label %cond.false109, label %cond.true105

cond.true105:                                     ; preds = %if.end100
  %sv_any106 = getelementptr inbounds %struct.sv* %34, i64 0, i32 0
  %63 = load i8** %sv_any106, align 8, !tbaa !3
  %xpv_cur = getelementptr inbounds i8* %63, i64 8
  %64 = bitcast i8* %xpv_cur to i64*
  %65 = load i64* %64, align 8, !tbaa !5
  store i64 %65, i64* %n_a, align 8, !tbaa !5
  %xpv_pv108 = bitcast i8* %63 to i8**
  %66 = load i8** %xpv_pv108, align 8, !tbaa !3
  br label %cond.end111

cond.false109:                                    ; preds = %if.end100
  %call110 = call i8* @Perl_sv_2pv_flags(%struct.sv* %34, i64* %n_a, i32 2) #8
  br label %cond.end111

cond.end111:                                      ; preds = %cond.false109, %cond.true105
  %cond112 = phi i8* [ %66, %cond.true105 ], [ %call110, %cond.false109 ]
  call void @Perl_sv_setpv(%struct.sv* %61, i8* %cond112) #8
  %67 = load i32* %sv_flags, align 4, !tbaa !0
  %and114 = and i32 %67, 262144
  %cmp115 = icmp eq i32 %and114, 0
  br i1 %cmp115, label %cond.false122, label %cond.true117

cond.true117:                                     ; preds = %cond.end111
  %sv_any118 = getelementptr inbounds %struct.sv* %34, i64 0, i32 0
  %68 = load i8** %sv_any118, align 8, !tbaa !3
  %xpv_cur119 = getelementptr inbounds i8* %68, i64 8
  %69 = bitcast i8* %xpv_cur119 to i64*
  %70 = load i64* %69, align 8, !tbaa !5
  store i64 %70, i64* %n_a, align 8, !tbaa !5
  %xpv_pv121 = bitcast i8* %68 to i8**
  %71 = load i8** %xpv_pv121, align 8, !tbaa !3
  br label %cond.end124

cond.false122:                                    ; preds = %cond.end111
  %call123 = call i8* @Perl_sv_2pv_flags(%struct.sv* %34, i64* %n_a, i32 2) #8
  br label %cond.end124

cond.end124:                                      ; preds = %cond.false122, %cond.true117
  %cond125 = phi i8* [ %71, %cond.true117 ], [ %call123, %cond.false122 ]
  %call126 = call i32 @stat(i8* %cond125, %struct.stat* @PL_statcache) #8
  store i32 %call126, i32* @PL_laststatval, align 4, !tbaa !0
  %cmp127 = icmp slt i32 %call126, 0
  br i1 %cmp127, label %land.lhs.true129, label %if.end174

land.lhs.true129:                                 ; preds = %cond.end124
  %72 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings130 = getelementptr inbounds %struct.cop* %72, i64 0, i32 14
  %73 = load %struct.sv** %cop_warnings130, align 8, !tbaa !3
  %cmp131 = icmp eq %struct.sv* %73, null
  br i1 %cmp131, label %lor.lhs.false149, label %land.lhs.true133

land.lhs.true133:                                 ; preds = %land.lhs.true129
  %74 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings134 = getelementptr inbounds %struct.cop* %74, i64 0, i32 14
  %75 = load %struct.sv** %cop_warnings134, align 8, !tbaa !3
  %cmp135 = icmp eq %struct.sv* %75, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp135, label %lor.lhs.false149, label %land.lhs.true137

land.lhs.true137:                                 ; preds = %land.lhs.true133
  %76 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings138 = getelementptr inbounds %struct.cop* %76, i64 0, i32 14
  %77 = load %struct.sv** %cop_warnings138, align 8, !tbaa !3
  %cmp139 = icmp eq %struct.sv* %77, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp139, label %land.lhs.true157, label %lor.lhs.false141

lor.lhs.false141:                                 ; preds = %land.lhs.true137
  %78 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings142 = getelementptr inbounds %struct.cop* %78, i64 0, i32 14
  %79 = load %struct.sv** %cop_warnings142, align 8, !tbaa !3
  %sv_any143 = getelementptr inbounds %struct.sv* %79, i64 0, i32 0
  %80 = load i8** %sv_any143, align 8, !tbaa !3
  %xpv_pv144 = bitcast i8* %80 to i8**
  %81 = load i8** %xpv_pv144, align 8, !tbaa !3
  %arrayidx145 = getelementptr inbounds i8* %81, i64 2
  %82 = load i8* %arrayidx145, align 1, !tbaa !1
  %and147 = and i8 %82, 4
  %tobool148 = icmp eq i8 %and147, 0
  br i1 %tobool148, label %lor.lhs.false149, label %land.lhs.true157

lor.lhs.false149:                                 ; preds = %lor.lhs.false141, %land.lhs.true133, %land.lhs.true129
  %83 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !3
  %cop_warnings150 = getelementptr inbounds %struct.cop* %83, i64 0, i32 14
  %84 = load %struct.sv** %cop_warnings150, align 8, !tbaa !3
  %cmp151 = icmp eq %struct.sv* %84, null
  br i1 %cmp151, label %land.lhs.true153, label %if.end174

land.lhs.true153:                                 ; preds = %lor.lhs.false149
  %85 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and155 = and i8 %85, 1
  %tobool156 = icmp eq i8 %and155, 0
  br i1 %tobool156, label %if.end174, label %land.lhs.true157

land.lhs.true157:                                 ; preds = %lor.lhs.false141, %land.lhs.true153, %land.lhs.true137
  %86 = load i32* %sv_flags, align 4, !tbaa !0
  %and159 = and i32 %86, 262144
  %cmp160 = icmp eq i32 %and159, 0
  br i1 %cmp160, label %cond.false167, label %cond.true162

cond.true162:                                     ; preds = %land.lhs.true157
  %sv_any163 = getelementptr inbounds %struct.sv* %34, i64 0, i32 0
  %87 = load i8** %sv_any163, align 8, !tbaa !3
  %xpv_cur164 = getelementptr inbounds i8* %87, i64 8
  %88 = bitcast i8* %xpv_cur164 to i64*
  %89 = load i64* %88, align 8, !tbaa !5
  store i64 %89, i64* %n_a, align 8, !tbaa !5
  %xpv_pv166 = bitcast i8* %87 to i8**
  %90 = load i8** %xpv_pv166, align 8, !tbaa !3
  br label %cond.end169

cond.false167:                                    ; preds = %land.lhs.true157
  %call168 = call i8* @Perl_sv_2pv_flags(%struct.sv* %34, i64* %n_a, i32 2) #8
  br label %cond.end169

cond.end169:                                      ; preds = %cond.false167, %cond.true162
  %cond170 = phi i8* [ %90, %cond.true162 ], [ %call168, %cond.false167 ]
  %call171 = call i8* @strchr(i8* %cond170, i32 10) #8
  %tobool172 = icmp eq i8* %call171, null
  br i1 %tobool172, label %if.end174, label %if.then173

if.then173:                                       ; preds = %cond.end169
  call void (i32, i8*, ...)* @Perl_warner(i32 9, i8* getelementptr inbounds ([0 x i8]* @PL_warn_nl, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str34, i64 0, i64 0)) #8
  br label %if.end174

if.end174:                                        ; preds = %cond.end169, %land.lhs.true153, %lor.lhs.false149, %if.then173, %cond.end124
  %91 = load i32* @PL_laststatval, align 4, !tbaa !0
  br label %return

return:                                           ; preds = %if.end174, %if.then80, %if.then32, %if.end9
  %retval.0 = phi i32 [ %10, %if.end9 ], [ -1, %if.then32 ], [ -1, %if.then80 ], [ %91, %if.end174 ]
  ret i32 %retval.0
}
