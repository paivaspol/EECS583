define i8* @Perl_scan_num(i8* %start, %union.YYSTYPE* nocapture %lvalp) #0 {
entry:
  %uv = alloca i64, align 8
  %0 = load i8* %start, align 1, !tbaa !1
  %conv = sext i8 %0 to i32
  switch i32 %conv, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %while.cond.outer
    i32 50, label %while.cond.outer
    i32 51, label %while.cond.outer
    i32 52, label %while.cond.outer
    i32 53, label %while.cond.outer
    i32 54, label %while.cond.outer
    i32 55, label %while.cond.outer
    i32 56, label %while.cond.outer
    i32 57, label %while.cond.outer
    i32 46, label %while.cond.outer
    i32 118, label %vstring
  ]

sw.default:                                       ; preds = %entry
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([16 x i8]* @.str117, i64 0, i64 0)) #6
  br label %sw.bb

sw.bb:                                            ; preds = %entry, %sw.default
  %arrayidx = getelementptr inbounds i8* %start, i64 1
  %1 = load i8* %arrayidx, align 1, !tbaa !1
  switch i8 %1, label %if.end26 [
    i8 120, label %if.then
    i8 98, label %if.then7
    i8 46, label %while.cond.outer
    i8 101, label %while.cond.outer
    i8 69, label %while.cond.outer
  ]

if.then:                                          ; preds = %sw.bb
  %add.ptr = getelementptr inbounds i8* %start, i64 2
  br label %if.end26

if.then7:                                         ; preds = %sw.bb
  %add.ptr8 = getelementptr inbounds i8* %start, i64 2
  br label %if.end26

if.end26:                                         ; preds = %sw.bb, %if.then7, %if.then
  %shift.0 = phi i32 [ 4, %if.then ], [ 1, %if.then7 ], [ 3, %sw.bb ]
  %just_zero.0 = phi i8 [ 0, %if.then ], [ 0, %if.then7 ], [ 1, %sw.bb ]
  %s.0 = phi i8* [ %add.ptr, %if.then ], [ %add.ptr8, %if.then7 ], [ %arrayidx, %sw.bb ]
  %2 = load i8* %s.0, align 1, !tbaa !1
  %cmp28 = icmp eq i8 %2, 95
  br i1 %cmp28, label %if.then30, label %if.end55

if.then30:                                        ; preds = %if.end26
  %3 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings = getelementptr inbounds %struct.cop* %3, i64 0, i32 14
  %4 = load %struct.sv** %cop_warnings, align 8, !tbaa !0
  %cmp31 = icmp eq %struct.sv* %4, null
  br i1 %cmp31, label %lor.lhs.false44, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then30
  %5 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings33 = getelementptr inbounds %struct.cop* %5, i64 0, i32 14
  %6 = load %struct.sv** %cop_warnings33, align 8, !tbaa !0
  %cmp34 = icmp eq %struct.sv* %6, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp34, label %lor.lhs.false44, label %land.lhs.true36

land.lhs.true36:                                  ; preds = %land.lhs.true
  %7 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings37 = getelementptr inbounds %struct.cop* %7, i64 0, i32 14
  %8 = load %struct.sv** %cop_warnings37, align 8, !tbaa !0
  %cmp38 = icmp eq %struct.sv* %8, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp38, label %if.then52, label %lor.lhs.false40

lor.lhs.false40:                                  ; preds = %land.lhs.true36
  %9 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings41 = getelementptr inbounds %struct.cop* %9, i64 0, i32 14
  %10 = load %struct.sv** %cop_warnings41, align 8, !tbaa !0
  %sv_any = getelementptr inbounds %struct.sv* %10, i64 0, i32 0
  %11 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_pv = bitcast i8* %11 to i8**
  %12 = load i8** %xpv_pv, align 8, !tbaa !0
  %arrayidx42 = getelementptr inbounds i8* %12, i64 7
  %13 = load i8* %arrayidx42, align 1, !tbaa !1
  %and = and i8 %13, 1
  %tobool = icmp eq i8 %and, 0
  br i1 %tobool, label %lor.lhs.false44, label %if.then52

lor.lhs.false44:                                  ; preds = %lor.lhs.false40, %land.lhs.true, %if.then30
  %14 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings45 = getelementptr inbounds %struct.cop* %14, i64 0, i32 14
  %15 = load %struct.sv** %cop_warnings45, align 8, !tbaa !0
  %cmp46 = icmp eq %struct.sv* %15, null
  br i1 %cmp46, label %land.lhs.true48, label %if.end53

land.lhs.true48:                                  ; preds = %lor.lhs.false44
  %16 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and50 = and i8 %16, 1
  %tobool51 = icmp eq i8 %and50, 0
  br i1 %tobool51, label %if.end53, label %if.then52

if.then52:                                        ; preds = %lor.lhs.false40, %land.lhs.true48, %land.lhs.true36
  call void (i32, i8*, ...)* @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8]* @.str127, i64 0, i64 0)) #6
  br label %if.end53

if.end53:                                         ; preds = %land.lhs.true48, %if.then52, %lor.lhs.false44
  %incdec.ptr54 = getelementptr inbounds i8* %s.0, i64 1
  br label %if.end55

if.end55:                                         ; preds = %if.end53, %if.end26
  %lastub.0 = phi i8* [ %s.0, %if.end53 ], [ null, %if.end26 ]
  %s.1 = phi i8* [ %incdec.ptr54, %if.end53 ], [ %s.0, %if.end26 ]
  %idxprom915 = zext i32 %shift.0 to i64
  %arrayidx56 = getelementptr inbounds [5 x i8*]* @Perl_scan_num.bases, i64 0, i64 %idxprom915
  %17 = load i8** %arrayidx56, align 8, !tbaa !0
  %arrayidx58 = getelementptr inbounds [5 x i8*]* @Perl_scan_num.Bases, i64 0, i64 %idxprom915
  %18 = load i8** %arrayidx58, align 8, !tbaa !0
  %arrayidx60 = getelementptr inbounds [5 x i8*]* @Perl_scan_num.maxima, i64 0, i64 %idxprom915
  %19 = load i8** %arrayidx60, align 8, !tbaa !0
  %cmp108 = icmp eq i32 %shift.0, 1
  %cmp121 = icmp eq i32 %shift.0, 4
  %arrayidx166 = getelementptr inbounds [5 x double]* @Perl_scan_num.nvshift, i64 0, i64 %idxprom915
  br label %for.cond.outer

for.cond.outer:                                   ; preds = %if.then164, %if.end55
  %n.0.ph = phi double [ 0.000000e+00, %if.end55 ], [ %add168, %if.then164 ]
  %u.0.ph = phi i64 [ 0, %if.end55 ], [ %u.0.ph992, %if.then164 ]
  %overflowed.0.ph = phi i8 [ 0, %if.end55 ], [ %overflowed.1.ph, %if.then164 ]
  %just_zero.1.ph = phi i8 [ %just_zero.0, %if.end55 ], [ 0, %if.then164 ]
  %lastub.1.ph = phi i8* [ %lastub.0, %if.end55 ], [ %lastub.1, %if.then164 ]
  %s.2.ph = phi i8* [ %s.1, %if.end55 ], [ %s.3, %if.then164 ]
  br label %for.cond.outer991

for.cond.outer991:                                ; preds = %for.cond.outer, %if.end162
  %u.0.ph992 = phi i64 [ %or, %if.end162 ], [ %u.0.ph, %for.cond.outer ]
  %overflowed.0.ph993 = phi i8 [ 0, %if.end162 ], [ %overflowed.0.ph, %for.cond.outer ]
  %just_zero.1.ph994 = phi i8 [ 0, %if.end162 ], [ %just_zero.1.ph, %for.cond.outer ]
  %lastub.1.ph995 = phi i8* [ %lastub.1, %if.end162 ], [ %lastub.1.ph, %for.cond.outer ]
  %s.2.ph996 = phi i8* [ %s.3, %if.end162 ], [ %s.2.ph, %for.cond.outer ]
  br label %for.cond

for.cond:                                         ; preds = %for.cond.outer991, %if.end98
  %lastub.1 = phi i8* [ %s.2, %if.end98 ], [ %lastub.1.ph995, %for.cond.outer991 ]
  %s.2 = phi i8* [ %incdec.ptr99, %if.end98 ], [ %s.2.ph996, %for.cond.outer991 ]
  %20 = load i8* %s.2, align 1, !tbaa !1
  %conv61 = sext i8 %20 to i32
  switch i32 %conv61, label %out [
    i32 95, label %sw.bb63
    i32 56, label %sw.bb100
    i32 57, label %sw.bb100
    i32 50, label %sw.bb107
    i32 51, label %sw.bb107
    i32 52, label %sw.bb107
    i32 53, label %sw.bb107
    i32 54, label %sw.bb107
    i32 55, label %sw.bb107
    i32 48, label %sw.bb115
    i32 49, label %sw.bb115
    i32 97, label %sw.bb120
    i32 98, label %sw.bb120
    i32 99, label %sw.bb120
    i32 100, label %sw.bb120
    i32 101, label %sw.bb120
    i32 102, label %sw.bb120
    i32 65, label %sw.bb120
    i32 66, label %sw.bb120
    i32 67, label %sw.bb120
    i32 68, label %sw.bb120
    i32 69, label %sw.bb120
    i32 70, label %sw.bb120
  ]

sw.bb63:                                          ; preds = %for.cond
  %21 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings64 = getelementptr inbounds %struct.cop* %21, i64 0, i32 14
  %22 = load %struct.sv** %cop_warnings64, align 8, !tbaa !0
  %cmp65 = icmp eq %struct.sv* %22, null
  br i1 %cmp65, label %lor.lhs.false83, label %land.lhs.true67

land.lhs.true67:                                  ; preds = %sw.bb63
  %23 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings68 = getelementptr inbounds %struct.cop* %23, i64 0, i32 14
  %24 = load %struct.sv** %cop_warnings68, align 8, !tbaa !0
  %cmp69 = icmp eq %struct.sv* %24, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp69, label %lor.lhs.false83, label %land.lhs.true71

land.lhs.true71:                                  ; preds = %land.lhs.true67
  %25 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings72 = getelementptr inbounds %struct.cop* %25, i64 0, i32 14
  %26 = load %struct.sv** %cop_warnings72, align 8, !tbaa !0
  %cmp73 = icmp eq %struct.sv* %26, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp73, label %land.lhs.true91, label %lor.lhs.false75

lor.lhs.false75:                                  ; preds = %land.lhs.true71
  %27 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings76 = getelementptr inbounds %struct.cop* %27, i64 0, i32 14
  %28 = load %struct.sv** %cop_warnings76, align 8, !tbaa !0
  %sv_any77 = getelementptr inbounds %struct.sv* %28, i64 0, i32 0
  %29 = load i8** %sv_any77, align 8, !tbaa !0
  %xpv_pv78 = bitcast i8* %29 to i8**
  %30 = load i8** %xpv_pv78, align 8, !tbaa !0
  %arrayidx79 = getelementptr inbounds i8* %30, i64 7
  %31 = load i8* %arrayidx79, align 1, !tbaa !1
  %and81 = and i8 %31, 1
  %tobool82 = icmp eq i8 %and81, 0
  br i1 %tobool82, label %lor.lhs.false83, label %land.lhs.true91

lor.lhs.false83:                                  ; preds = %lor.lhs.false75, %land.lhs.true67, %sw.bb63
  %32 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings84 = getelementptr inbounds %struct.cop* %32, i64 0, i32 14
  %33 = load %struct.sv** %cop_warnings84, align 8, !tbaa !0
  %cmp85 = icmp eq %struct.sv* %33, null
  br i1 %cmp85, label %land.lhs.true87, label %if.end98

land.lhs.true87:                                  ; preds = %lor.lhs.false83
  %34 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and89 = and i8 %34, 1
  %notlhs989 = icmp ne i8 %and89, 0
  %notrhs990 = icmp ne i8* %lastub.1, null
  %or.cond.not = and i1 %notrhs990, %notlhs989
  %add.ptr94 = getelementptr inbounds i8* %lastub.1, i64 1
  %cmp95 = icmp eq i8* %s.2, %add.ptr94
  %or.cond926 = and i1 %or.cond.not, %cmp95
  br i1 %or.cond926, label %if.then97, label %if.end98

land.lhs.true91:                                  ; preds = %lor.lhs.false75, %land.lhs.true71
  %tobool92.old = icmp ne i8* %lastub.1, null
  %.old = getelementptr inbounds i8* %lastub.1, i64 1
  %cmp95.old = icmp eq i8* %s.2, %.old
  %or.cond928 = and i1 %tobool92.old, %cmp95.old
  br i1 %or.cond928, label %if.then97, label %if.end98

if.then97:                                        ; preds = %land.lhs.true91, %land.lhs.true87
  call void (i32, i8*, ...)* @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8]* @.str127, i64 0, i64 0)) #6
  br label %if.end98

if.end98:                                         ; preds = %land.lhs.true91, %land.lhs.true87, %if.then97, %lor.lhs.false83
  %incdec.ptr99 = getelementptr inbounds i8* %s.2, i64 1
  br label %for.cond

sw.bb100:                                         ; preds = %for.cond, %for.cond
  switch i32 %shift.0, label %sw.bb115 [
    i32 3, label %sw.bb107.thread
    i32 1, label %if.then110
  ]

sw.bb107.thread:                                  ; preds = %sw.bb100
  %call = call i8* (i8*, ...)* @Perl_form(i8* getelementptr inbounds ([25 x i8]* @.str128, i64 0, i64 0), i32 %conv61) #6
  %call105 = call i32 @Perl_yyerror(i8* %call) #7
  br label %sw.bb115

sw.bb107:                                         ; preds = %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond
  br i1 %cmp108, label %if.then110, label %sw.bb115

if.then110:                                       ; preds = %sw.bb100, %sw.bb107
  %call112 = call i8* (i8*, ...)* @Perl_form(i8* getelementptr inbounds ([26 x i8]* @.str129, i64 0, i64 0), i32 %conv61) #6
  %call113 = call i32 @Perl_yyerror(i8* %call112) #7
  br label %sw.bb115

sw.bb115:                                         ; preds = %for.cond, %for.cond, %sw.bb107.thread, %sw.bb100, %sw.bb107, %if.then110
  %35 = load i8* %s.2, align 1, !tbaa !1
  %conv117922 = zext i8 %35 to i64
  %and118 = and i64 %conv117922, 15
  br label %digit

sw.bb120:                                         ; preds = %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %for.cond
  br i1 %cmp121, label %if.end124, label %out

if.end124:                                        ; preds = %sw.bb120
  %conv126916 = zext i8 %20 to i64
  %and127 = and i64 %conv126916, 7
  %add = add i64 %and127, 9
  br label %digit

digit:                                            ; preds = %if.end124, %sw.bb115
  %b.0 = phi i64 [ %add, %if.end124 ], [ %and118, %sw.bb115 ]
  %s.3 = getelementptr inbounds i8* %s.2, i64 1
  %tobool129 = icmp eq i8 %overflowed.0.ph993, 0
  br i1 %tobool129, label %if.then130, label %if.then164

if.then130:                                       ; preds = %digit
  %shl = shl i64 %u.0.ph992, %idxprom915
  %shr = lshr i64 %shl, %idxprom915
  %cmp132 = icmp eq i64 %shr, %u.0.ph992
  br i1 %cmp132, label %if.end162, label %land.lhs.true134

land.lhs.true134:                                 ; preds = %if.then130
  %36 = load i32* @PL_hints, align 4, !tbaa !3
  %and135 = and i32 %36, 16384
  %tobool136 = icmp eq i32 %and135, 0
  br i1 %tobool136, label %if.then137, label %if.end162

if.then137:                                       ; preds = %land.lhs.true134
  %conv138 = uitofp i64 %u.0.ph992 to double
  %37 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings139 = getelementptr inbounds %struct.cop* %37, i64 0, i32 14
  %38 = load %struct.sv** %cop_warnings139, align 8, !tbaa !0
  %cmp140 = icmp eq %struct.sv* %38, null
  br i1 %cmp140, label %if.then158, label %lor.lhs.false142

lor.lhs.false142:                                 ; preds = %if.then137
  %39 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings143 = getelementptr inbounds %struct.cop* %39, i64 0, i32 14
  %40 = load %struct.sv** %cop_warnings143, align 8, !tbaa !0
  %cmp144 = icmp eq %struct.sv* %40, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp144, label %if.then158, label %lor.lhs.false146

lor.lhs.false146:                                 ; preds = %lor.lhs.false142
  %41 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings147 = getelementptr inbounds %struct.cop* %41, i64 0, i32 14
  %42 = load %struct.sv** %cop_warnings147, align 8, !tbaa !0
  %cmp148 = icmp eq %struct.sv* %42, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp148, label %if.then164, label %land.lhs.true150

land.lhs.true150:                                 ; preds = %lor.lhs.false146
  %43 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings151 = getelementptr inbounds %struct.cop* %43, i64 0, i32 14
  %44 = load %struct.sv** %cop_warnings151, align 8, !tbaa !0
  %sv_any152 = getelementptr inbounds %struct.sv* %44, i64 0, i32 0
  %45 = load i8** %sv_any152, align 8, !tbaa !0
  %xpv_pv153 = bitcast i8* %45 to i8**
  %46 = load i8** %xpv_pv153, align 8, !tbaa !0
  %arrayidx154 = getelementptr inbounds i8* %46, i64 3
  %47 = load i8* %arrayidx154, align 1, !tbaa !1
  %and156 = and i8 %47, 64
  %tobool157 = icmp eq i8 %and156, 0
  br i1 %tobool157, label %if.then164, label %if.then158

if.then158:                                       ; preds = %land.lhs.true150, %lor.lhs.false142, %if.then137
  call void (i32, i8*, ...)* @Perl_warner(i32 15, i8* getelementptr inbounds ([30 x i8]* @.str130, i64 0, i64 0), i8* %17) #6
  br label %if.then164

if.end162:                                        ; preds = %if.then130, %land.lhs.true134
  %or = or i64 %b.0, %shl
  br label %for.cond.outer991

if.then164:                                       ; preds = %digit, %land.lhs.true150, %lor.lhs.false146, %if.then158
  %n.1.ph = phi double [ %conv138, %if.then158 ], [ %conv138, %lor.lhs.false146 ], [ %conv138, %land.lhs.true150 ], [ %n.0.ph, %digit ]
  %overflowed.1.ph = phi i8 [ 1, %if.then158 ], [ 1, %lor.lhs.false146 ], [ 1, %land.lhs.true150 ], [ %overflowed.0.ph993, %digit ]
  %48 = load double* %arrayidx166, align 8, !tbaa !6
  %mul = fmul double %n.1.ph, %48
  %conv167 = uitofp i64 %b.0 to double
  %add168 = fadd double %conv167, %mul
  br label %for.cond.outer

out:                                              ; preds = %sw.bb120, %for.cond
  %arrayidx170 = getelementptr inbounds i8* %s.2, i64 -1
  %49 = load i8* %arrayidx170, align 1, !tbaa !1
  %cmp172 = icmp eq i8 %49, 95
  br i1 %cmp172, label %if.then174, label %if.end204

if.then174:                                       ; preds = %out
  %50 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings175 = getelementptr inbounds %struct.cop* %50, i64 0, i32 14
  %51 = load %struct.sv** %cop_warnings175, align 8, !tbaa !0
  %cmp176 = icmp eq %struct.sv* %51, null
  br i1 %cmp176, label %lor.lhs.false194, label %land.lhs.true178

land.lhs.true178:                                 ; preds = %if.then174
  %52 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings179 = getelementptr inbounds %struct.cop* %52, i64 0, i32 14
  %53 = load %struct.sv** %cop_warnings179, align 8, !tbaa !0
  %cmp180 = icmp eq %struct.sv* %53, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp180, label %lor.lhs.false194, label %land.lhs.true182

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %54 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings183 = getelementptr inbounds %struct.cop* %54, i64 0, i32 14
  %55 = load %struct.sv** %cop_warnings183, align 8, !tbaa !0
  %cmp184 = icmp eq %struct.sv* %55, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp184, label %if.then202, label %lor.lhs.false186

lor.lhs.false186:                                 ; preds = %land.lhs.true182
  %56 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings187 = getelementptr inbounds %struct.cop* %56, i64 0, i32 14
  %57 = load %struct.sv** %cop_warnings187, align 8, !tbaa !0
  %sv_any188 = getelementptr inbounds %struct.sv* %57, i64 0, i32 0
  %58 = load i8** %sv_any188, align 8, !tbaa !0
  %xpv_pv189 = bitcast i8* %58 to i8**
  %59 = load i8** %xpv_pv189, align 8, !tbaa !0
  %arrayidx190 = getelementptr inbounds i8* %59, i64 7
  %60 = load i8* %arrayidx190, align 1, !tbaa !1
  %and192 = and i8 %60, 1
  %tobool193 = icmp eq i8 %and192, 0
  br i1 %tobool193, label %lor.lhs.false194, label %if.then202

lor.lhs.false194:                                 ; preds = %lor.lhs.false186, %land.lhs.true178, %if.then174
  %61 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings195 = getelementptr inbounds %struct.cop* %61, i64 0, i32 14
  %62 = load %struct.sv** %cop_warnings195, align 8, !tbaa !0
  %cmp196 = icmp eq %struct.sv* %62, null
  br i1 %cmp196, label %land.lhs.true198, label %if.end204

land.lhs.true198:                                 ; preds = %lor.lhs.false194
  %63 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and200 = and i8 %63, 1
  %tobool201 = icmp eq i8 %and200, 0
  br i1 %tobool201, label %if.end204, label %if.then202

if.then202:                                       ; preds = %lor.lhs.false186, %land.lhs.true198, %land.lhs.true182
  call void (i32, i8*, ...)* @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8]* @.str127, i64 0, i64 0)) #6
  br label %if.end204

if.end204:                                        ; preds = %land.lhs.true198, %lor.lhs.false194, %if.then202, %out
  %call205 = call %struct.sv* @Perl_newSV(i64 0) #6
  %tobool206 = icmp eq i8 %overflowed.0.ph993, 0
  %64 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings208 = getelementptr inbounds %struct.cop* %64, i64 0, i32 14
  %65 = load %struct.sv** %cop_warnings208, align 8, !tbaa !0
  %cmp209 = icmp ne %struct.sv* %65, null
  br i1 %tobool206, label %if.else240, label %if.then207

if.then207:                                       ; preds = %if.end204
  br i1 %cmp209, label %land.lhs.true211, label %lor.lhs.false227

land.lhs.true211:                                 ; preds = %if.then207
  %66 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings212 = getelementptr inbounds %struct.cop* %66, i64 0, i32 14
  %67 = load %struct.sv** %cop_warnings212, align 8, !tbaa !0
  %cmp213 = icmp eq %struct.sv* %67, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp213, label %lor.lhs.false227, label %land.lhs.true215

land.lhs.true215:                                 ; preds = %land.lhs.true211
  %68 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings216 = getelementptr inbounds %struct.cop* %68, i64 0, i32 14
  %69 = load %struct.sv** %cop_warnings216, align 8, !tbaa !0
  %cmp217 = icmp eq %struct.sv* %69, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp217, label %land.lhs.true235, label %lor.lhs.false219

lor.lhs.false219:                                 ; preds = %land.lhs.true215
  %70 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings220 = getelementptr inbounds %struct.cop* %70, i64 0, i32 14
  %71 = load %struct.sv** %cop_warnings220, align 8, !tbaa !0
  %sv_any221 = getelementptr inbounds %struct.sv* %71, i64 0, i32 0
  %72 = load i8** %sv_any221, align 8, !tbaa !0
  %xpv_pv222 = bitcast i8* %72 to i8**
  %73 = load i8** %xpv_pv222, align 8, !tbaa !0
  %arrayidx223 = getelementptr inbounds i8* %73, i64 4
  %74 = load i8* %arrayidx223, align 1, !tbaa !1
  %and225 = and i8 %74, 4
  %tobool226 = icmp eq i8 %and225, 0
  br i1 %tobool226, label %lor.lhs.false227, label %land.lhs.true235

lor.lhs.false227:                                 ; preds = %lor.lhs.false219, %land.lhs.true211, %if.then207
  %75 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings228 = getelementptr inbounds %struct.cop* %75, i64 0, i32 14
  %76 = load %struct.sv** %cop_warnings228, align 8, !tbaa !0
  %cmp229 = icmp eq %struct.sv* %76, null
  br i1 %cmp229, label %land.lhs.true231, label %if.end239

land.lhs.true231:                                 ; preds = %lor.lhs.false227
  %77 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and233 = and i8 %77, 1
  %tobool234 = icmp ne i8 %and233, 0
  %cmp236 = fcmp ogt double %n.0.ph, 0x41EFFFFFFFE00000
  %or.cond929 = and i1 %tobool234, %cmp236
  br i1 %or.cond929, label %if.then238, label %if.end239

land.lhs.true235:                                 ; preds = %lor.lhs.false219, %land.lhs.true215
  %cmp236.old = fcmp ogt double %n.0.ph, 0x41EFFFFFFFE00000
  br i1 %cmp236.old, label %if.then238, label %if.end239

if.then238:                                       ; preds = %land.lhs.true231, %land.lhs.true235
  call void (i32, i8*, ...)* @Perl_warner(i32 17, i8* getelementptr inbounds ([28 x i8]* @.str131, i64 0, i64 0), i8* %18, i8* %19) #6
  br label %if.end239

if.end239:                                        ; preds = %land.lhs.true231, %if.then238, %land.lhs.true235, %lor.lhs.false227
  call void @Perl_sv_setnv(%struct.sv* %call205, double %n.0.ph) #6
  br label %if.end273

if.else240:                                       ; preds = %if.end204
  br i1 %cmp209, label %land.lhs.true244, label %lor.lhs.false260

land.lhs.true244:                                 ; preds = %if.else240
  %78 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings245 = getelementptr inbounds %struct.cop* %78, i64 0, i32 14
  %79 = load %struct.sv** %cop_warnings245, align 8, !tbaa !0
  %cmp246 = icmp eq %struct.sv* %79, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp246, label %lor.lhs.false260, label %land.lhs.true248

land.lhs.true248:                                 ; preds = %land.lhs.true244
  %80 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings249 = getelementptr inbounds %struct.cop* %80, i64 0, i32 14
  %81 = load %struct.sv** %cop_warnings249, align 8, !tbaa !0
  %cmp250 = icmp eq %struct.sv* %81, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp250, label %land.lhs.true268, label %lor.lhs.false252

lor.lhs.false252:                                 ; preds = %land.lhs.true248
  %82 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings253 = getelementptr inbounds %struct.cop* %82, i64 0, i32 14
  %83 = load %struct.sv** %cop_warnings253, align 8, !tbaa !0
  %sv_any254 = getelementptr inbounds %struct.sv* %83, i64 0, i32 0
  %84 = load i8** %sv_any254, align 8, !tbaa !0
  %xpv_pv255 = bitcast i8* %84 to i8**
  %85 = load i8** %xpv_pv255, align 8, !tbaa !0
  %arrayidx256 = getelementptr inbounds i8* %85, i64 4
  %86 = load i8* %arrayidx256, align 1, !tbaa !1
  %and258 = and i8 %86, 4
  %tobool259 = icmp eq i8 %and258, 0
  br i1 %tobool259, label %lor.lhs.false260, label %land.lhs.true268

lor.lhs.false260:                                 ; preds = %lor.lhs.false252, %land.lhs.true244, %if.else240
  %87 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings261 = getelementptr inbounds %struct.cop* %87, i64 0, i32 14
  %88 = load %struct.sv** %cop_warnings261, align 8, !tbaa !0
  %cmp262 = icmp eq %struct.sv* %88, null
  br i1 %cmp262, label %land.lhs.true264, label %if.end272

land.lhs.true264:                                 ; preds = %lor.lhs.false260
  %89 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and266 = and i8 %89, 1
  %tobool267 = icmp ne i8 %and266, 0
  %cmp269 = icmp ugt i64 %u.0.ph992, 4294967295
  %or.cond930 = and i1 %tobool267, %cmp269
  br i1 %or.cond930, label %if.then271, label %if.end272

land.lhs.true268:                                 ; preds = %lor.lhs.false252, %land.lhs.true248
  %cmp269.old = icmp ugt i64 %u.0.ph992, 4294967295
  br i1 %cmp269.old, label %if.then271, label %if.end272

if.then271:                                       ; preds = %land.lhs.true264, %land.lhs.true268
  call void (i32, i8*, ...)* @Perl_warner(i32 17, i8* getelementptr inbounds ([28 x i8]* @.str131, i64 0, i64 0), i8* %18, i8* %19) #6
  br label %if.end272

if.end272:                                        ; preds = %land.lhs.true264, %if.then271, %land.lhs.true268, %lor.lhs.false260
  call void @Perl_sv_setuv(%struct.sv* %call205, i64 %u.0.ph992) #6
  br label %if.end273

if.end273:                                        ; preds = %if.end272, %if.end239
  %tobool275 = icmp eq i8 %just_zero.1.ph994, 0
  %.pre1122 = load i32* @PL_hints, align 4, !tbaa !3
  br i1 %tobool275, label %if.else281, label %land.lhs.true276

land.lhs.true276:                                 ; preds = %if.end273
  %and277 = and i32 %.pre1122, 4096
  %tobool278 = icmp eq i32 %and277, 0
  br i1 %tobool278, label %if.else281, label %if.then279

if.then279:                                       ; preds = %land.lhs.true276
  %sub.ptr.lhs.cast = ptrtoint i8* %s.2 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %start to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call280 = call fastcc %struct.sv* @S_new_constant(i8* %start, i64 %sub.ptr.sub, i8* getelementptr inbounds ([8 x i8]* @.str132, i64 0, i64 0), %struct.sv* %call205, %struct.sv* null, i8* null) #7
  br label %sw.epilog768

if.else281:                                       ; preds = %if.end273, %land.lhs.true276
  %and282 = and i32 %.pre1122, 16384
  %tobool283 = icmp eq i32 %and282, 0
  br i1 %tobool283, label %sw.epilog768, label %if.then284

if.then284:                                       ; preds = %if.else281
  %sub.ptr.lhs.cast285 = ptrtoint i8* %s.2 to i64
  %sub.ptr.rhs.cast286 = ptrtoint i8* %start to i64
  %sub.ptr.sub287 = sub i64 %sub.ptr.lhs.cast285, %sub.ptr.rhs.cast286
  %call288 = call fastcc %struct.sv* @S_new_constant(i8* %start, i64 %sub.ptr.sub287, i8* getelementptr inbounds ([7 x i8]* @.str118, i64 0, i64 0), %struct.sv* %call205, %struct.sv* null, i8* null) #7
  br label %sw.epilog768

while.cond:                                       ; preds = %while.cond.outer, %if.end346
  %d.0 = phi i8* [ %incdec.ptr348, %if.end346 ], [ %d.0.ph, %while.cond.outer ]
  %s.4 = phi i8* [ %incdec.ptr347, %if.end346 ], [ %s.4.ph, %while.cond.outer ]
  %90 = load i8* %s.4, align 1, !tbaa !1
  %.off = add i8 %90, -48
  %91 = icmp ult i8 %.off, 10
  br i1 %91, label %if.else342, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond
  %cmp300 = icmp eq i8 %90, 95
  br i1 %cmp300, label %if.then305, label %while.end

if.then305:                                       ; preds = %lor.rhs
  %92 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings306 = getelementptr inbounds %struct.cop* %92, i64 0, i32 14
  %93 = load %struct.sv** %cop_warnings306, align 8, !tbaa !0
  %cmp307 = icmp eq %struct.sv* %93, null
  br i1 %cmp307, label %lor.lhs.false325, label %land.lhs.true309

land.lhs.true309:                                 ; preds = %if.then305
  %94 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings310 = getelementptr inbounds %struct.cop* %94, i64 0, i32 14
  %95 = load %struct.sv** %cop_warnings310, align 8, !tbaa !0
  %cmp311 = icmp eq %struct.sv* %95, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp311, label %lor.lhs.false325, label %land.lhs.true313

land.lhs.true313:                                 ; preds = %land.lhs.true309
  %96 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings314 = getelementptr inbounds %struct.cop* %96, i64 0, i32 14
  %97 = load %struct.sv** %cop_warnings314, align 8, !tbaa !0
  %cmp315 = icmp eq %struct.sv* %97, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp315, label %land.lhs.true333, label %lor.lhs.false317

lor.lhs.false317:                                 ; preds = %land.lhs.true313
  %98 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings318 = getelementptr inbounds %struct.cop* %98, i64 0, i32 14
  %99 = load %struct.sv** %cop_warnings318, align 8, !tbaa !0
  %sv_any319 = getelementptr inbounds %struct.sv* %99, i64 0, i32 0
  %100 = load i8** %sv_any319, align 8, !tbaa !0
  %xpv_pv320 = bitcast i8* %100 to i8**
  %101 = load i8** %xpv_pv320, align 8, !tbaa !0
  %arrayidx321 = getelementptr inbounds i8* %101, i64 7
  %102 = load i8* %arrayidx321, align 1, !tbaa !1
  %and323 = and i8 %102, 1
  %tobool324 = icmp eq i8 %and323, 0
  br i1 %tobool324, label %lor.lhs.false325, label %land.lhs.true333

lor.lhs.false325:                                 ; preds = %lor.lhs.false317, %land.lhs.true309, %if.then305
  %103 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings326 = getelementptr inbounds %struct.cop* %103, i64 0, i32 14
  %104 = load %struct.sv** %cop_warnings326, align 8, !tbaa !0
  %cmp327 = icmp eq %struct.sv* %104, null
  br i1 %cmp327, label %land.lhs.true329, label %if.end340

land.lhs.true329:                                 ; preds = %lor.lhs.false325
  %105 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and331 = and i8 %105, 1
  %notlhs987 = icmp ne i8 %and331, 0
  %notrhs988 = icmp ne i8* %lastub.2.ph, null
  %or.cond932.not = and i1 %notrhs988, %notlhs987
  %add.ptr336 = getelementptr inbounds i8* %lastub.2.ph, i64 1
  %cmp337 = icmp eq i8* %s.4, %add.ptr336
  %or.cond934 = and i1 %or.cond932.not, %cmp337
  br i1 %or.cond934, label %if.then339, label %if.end340

land.lhs.true333:                                 ; preds = %lor.lhs.false317, %land.lhs.true313
  %tobool334.old = icmp ne i8* %lastub.2.ph, null
  %.old933 = getelementptr inbounds i8* %lastub.2.ph, i64 1
  %cmp337.old = icmp eq i8* %s.4, %.old933
  %or.cond936 = and i1 %tobool334.old, %cmp337.old
  br i1 %or.cond936, label %if.then339, label %if.end340

if.then339:                                       ; preds = %land.lhs.true333, %land.lhs.true329
  call void (i32, i8*, ...)* @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8]* @.str127, i64 0, i64 0)) #6
  br label %if.end340

if.end340:                                        ; preds = %land.lhs.true333, %land.lhs.true329, %if.then339, %lor.lhs.false325
  %incdec.ptr341 = getelementptr inbounds i8* %s.4, i64 1
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb, %sw.bb, %sw.bb, %if.end340
  %lastub.2.ph = phi i8* [ %s.4, %if.end340 ], [ null, %sw.bb ], [ null, %sw.bb ], [ null, %sw.bb ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ]
  %d.0.ph = phi i8* [ %d.0, %if.end340 ], [ getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 0), %sw.bb ], [ getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 0), %sw.bb ], [ getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 0), %sw.bb ], [ getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 0), %entry ], [ getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 0), %entry ], [ getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 0), %entry ], [ getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 0), %entry ], [ getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 0), %entry ], [ getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 0), %entry ], [ getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 0), %entry ], [ getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 0), %entry ], [ getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 0), %entry ], [ getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 0), %entry ]
  %s.4.ph = phi i8* [ %incdec.ptr341, %if.end340 ], [ %start, %sw.bb ], [ %start, %sw.bb ], [ %start, %sw.bb ], [ %start, %entry ], [ %start, %entry ], [ %start, %entry ], [ %start, %entry ], [ %start, %entry ], [ %start, %entry ], [ %start, %entry ], [ %start, %entry ], [ %start, %entry ], [ %start, %entry ]
  br label %while.cond

if.else342:                                       ; preds = %while.cond
  %cmp343 = icmp ult i8* %d.0, getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 250)
  br i1 %cmp343, label %if.end346, label %if.then345

if.then345:                                       ; preds = %if.else342
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([16 x i8]* @Perl_scan_num.number_too_long, i64 0, i64 0)) #6
  %.pre = load i8* %s.4, align 1, !tbaa !1
  br label %if.end346

if.end346:                                        ; preds = %if.else342, %if.then345
  %106 = phi i8 [ %90, %if.else342 ], [ %.pre, %if.then345 ]
  %incdec.ptr347 = getelementptr inbounds i8* %s.4, i64 1
  %incdec.ptr348 = getelementptr inbounds i8* %d.0, i64 1
  store i8 %106, i8* %d.0, align 1, !tbaa !1
  br label %while.cond

while.end:                                        ; preds = %lor.rhs
  %tobool350 = icmp ne i8* %lastub.2.ph, null
  %add.ptr352 = getelementptr inbounds i8* %lastub.2.ph, i64 1
  %cmp353 = icmp eq i8* %s.4, %add.ptr352
  %or.cond938 = and i1 %tobool350, %cmp353
  br i1 %or.cond938, label %if.then355, label %if.end385

if.then355:                                       ; preds = %while.end
  %107 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings356 = getelementptr inbounds %struct.cop* %107, i64 0, i32 14
  %108 = load %struct.sv** %cop_warnings356, align 8, !tbaa !0
  %cmp357 = icmp eq %struct.sv* %108, null
  br i1 %cmp357, label %lor.lhs.false375, label %land.lhs.true359

land.lhs.true359:                                 ; preds = %if.then355
  %109 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings360 = getelementptr inbounds %struct.cop* %109, i64 0, i32 14
  %110 = load %struct.sv** %cop_warnings360, align 8, !tbaa !0
  %cmp361 = icmp eq %struct.sv* %110, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp361, label %lor.lhs.false375, label %land.lhs.true363

land.lhs.true363:                                 ; preds = %land.lhs.true359
  %111 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings364 = getelementptr inbounds %struct.cop* %111, i64 0, i32 14
  %112 = load %struct.sv** %cop_warnings364, align 8, !tbaa !0
  %cmp365 = icmp eq %struct.sv* %112, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp365, label %if.then383, label %lor.lhs.false367

lor.lhs.false367:                                 ; preds = %land.lhs.true363
  %113 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings368 = getelementptr inbounds %struct.cop* %113, i64 0, i32 14
  %114 = load %struct.sv** %cop_warnings368, align 8, !tbaa !0
  %sv_any369 = getelementptr inbounds %struct.sv* %114, i64 0, i32 0
  %115 = load i8** %sv_any369, align 8, !tbaa !0
  %xpv_pv370 = bitcast i8* %115 to i8**
  %116 = load i8** %xpv_pv370, align 8, !tbaa !0
  %arrayidx371 = getelementptr inbounds i8* %116, i64 7
  %117 = load i8* %arrayidx371, align 1, !tbaa !1
  %and373 = and i8 %117, 1
  %tobool374 = icmp eq i8 %and373, 0
  br i1 %tobool374, label %lor.lhs.false375, label %if.then383

lor.lhs.false375:                                 ; preds = %lor.lhs.false367, %land.lhs.true359, %if.then355
  %118 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings376 = getelementptr inbounds %struct.cop* %118, i64 0, i32 14
  %119 = load %struct.sv** %cop_warnings376, align 8, !tbaa !0
  %cmp377 = icmp eq %struct.sv* %119, null
  br i1 %cmp377, label %land.lhs.true379, label %if.end385

land.lhs.true379:                                 ; preds = %lor.lhs.false375
  %120 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and381 = and i8 %120, 1
  %tobool382 = icmp eq i8 %and381, 0
  br i1 %tobool382, label %if.end385, label %if.then383

if.then383:                                       ; preds = %lor.lhs.false367, %land.lhs.true379, %land.lhs.true363
  call void (i32, i8*, ...)* @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8]* @.str127, i64 0, i64 0)) #6
  br label %if.end385

if.end385:                                        ; preds = %land.lhs.true379, %lor.lhs.false375, %while.end, %if.then383
  %121 = load i8* %s.4, align 1, !tbaa !1
  %cmp387 = icmp eq i8 %121, 46
  br i1 %cmp387, label %land.lhs.true389, label %if.end541

land.lhs.true389:                                 ; preds = %if.end385
  %arrayidx390 = getelementptr inbounds i8* %s.4, i64 1
  %122 = load i8* %arrayidx390, align 1, !tbaa !1
  %cmp392 = icmp eq i8 %122, 46
  br i1 %cmp392, label %if.end720.thread1128, label %if.then394

if.end720.thread1128:                             ; preds = %land.lhs.true389
  %call7211129 = call %struct.sv* @Perl_newSV(i64 0) #6
  br label %if.then723

if.then394:                                       ; preds = %land.lhs.true389
  %incdec.ptr396 = getelementptr inbounds i8* %d.0, i64 1
  store i8 46, i8* %d.0, align 1, !tbaa !1
  %123 = load i8* %arrayidx390, align 1, !tbaa !1
  %cmp398 = icmp eq i8 %123, 95
  br i1 %cmp398, label %if.then400, label %for.cond431.preheader

if.then400:                                       ; preds = %if.then394
  %124 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings401 = getelementptr inbounds %struct.cop* %124, i64 0, i32 14
  %125 = load %struct.sv** %cop_warnings401, align 8, !tbaa !0
  %cmp402 = icmp eq %struct.sv* %125, null
  br i1 %cmp402, label %lor.lhs.false420, label %land.lhs.true404

land.lhs.true404:                                 ; preds = %if.then400
  %126 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings405 = getelementptr inbounds %struct.cop* %126, i64 0, i32 14
  %127 = load %struct.sv** %cop_warnings405, align 8, !tbaa !0
  %cmp406 = icmp eq %struct.sv* %127, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp406, label %lor.lhs.false420, label %land.lhs.true408

land.lhs.true408:                                 ; preds = %land.lhs.true404
  %128 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings409 = getelementptr inbounds %struct.cop* %128, i64 0, i32 14
  %129 = load %struct.sv** %cop_warnings409, align 8, !tbaa !0
  %cmp410 = icmp eq %struct.sv* %129, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp410, label %if.then428, label %lor.lhs.false412

lor.lhs.false412:                                 ; preds = %land.lhs.true408
  %130 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings413 = getelementptr inbounds %struct.cop* %130, i64 0, i32 14
  %131 = load %struct.sv** %cop_warnings413, align 8, !tbaa !0
  %sv_any414 = getelementptr inbounds %struct.sv* %131, i64 0, i32 0
  %132 = load i8** %sv_any414, align 8, !tbaa !0
  %xpv_pv415 = bitcast i8* %132 to i8**
  %133 = load i8** %xpv_pv415, align 8, !tbaa !0
  %arrayidx416 = getelementptr inbounds i8* %133, i64 7
  %134 = load i8* %arrayidx416, align 1, !tbaa !1
  %and418 = and i8 %134, 1
  %tobool419 = icmp eq i8 %and418, 0
  br i1 %tobool419, label %lor.lhs.false420, label %if.then428

lor.lhs.false420:                                 ; preds = %lor.lhs.false412, %land.lhs.true404, %if.then400
  %135 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings421 = getelementptr inbounds %struct.cop* %135, i64 0, i32 14
  %136 = load %struct.sv** %cop_warnings421, align 8, !tbaa !0
  %cmp422 = icmp eq %struct.sv* %136, null
  br i1 %cmp422, label %land.lhs.true424, label %for.cond431.preheader

land.lhs.true424:                                 ; preds = %lor.lhs.false420
  %137 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and426 = and i8 %137, 1
  %tobool427 = icmp eq i8 %and426, 0
  br i1 %tobool427, label %for.cond431.preheader, label %if.then428

if.then428:                                       ; preds = %lor.lhs.false412, %land.lhs.true424, %land.lhs.true408
  call void (i32, i8*, ...)* @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8]* @.str127, i64 0, i64 0)) #6
  br label %for.cond431.preheader

for.cond431.preheader:                            ; preds = %land.lhs.true424, %lor.lhs.false420, %if.then394, %if.then428
  %lastub.3.ph = phi i8* [ %arrayidx390, %if.then428 ], [ %lastub.2.ph, %if.then394 ], [ %arrayidx390, %lor.lhs.false420 ], [ %arrayidx390, %land.lhs.true424 ]
  %138 = load i8* %arrayidx390, align 1, !tbaa !1
  %.off9851022 = add i8 %138, -48
  %139 = icmp ult i8 %.off9851022, 10
  %cmp4411023 = icmp eq i8 %138, 95
  %or.cond9791024 = or i1 %139, %cmp4411023
  br i1 %or.cond9791024, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond431.preheader, %for.inc
  %140 = phi i8 [ %156, %for.inc ], [ %138, %for.cond431.preheader ]
  %s.51028 = phi i8* [ %incdec.ptr490, %for.inc ], [ %arrayidx390, %for.cond431.preheader ]
  %d.11026 = phi i8* [ %d.2, %for.inc ], [ %incdec.ptr396, %for.cond431.preheader ]
  %lastub.31025 = phi i8* [ %lastub.4, %for.inc ], [ %lastub.3.ph, %for.cond431.preheader ]
  %cmp444 = icmp ult i8* %d.11026, getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 250)
  br i1 %cmp444, label %if.end447, label %if.then446

if.then446:                                       ; preds = %for.body
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([16 x i8]* @Perl_scan_num.number_too_long, i64 0, i64 0)) #6
  %.pre1117 = load i8* %s.51028, align 1, !tbaa !1
  br label %if.end447

if.end447:                                        ; preds = %for.body, %if.then446
  %141 = phi i8 [ %140, %for.body ], [ %.pre1117, %if.then446 ]
  %cmp449 = icmp eq i8 %141, 95
  br i1 %cmp449, label %if.then451, label %if.else487

if.then451:                                       ; preds = %if.end447
  %142 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings452 = getelementptr inbounds %struct.cop* %142, i64 0, i32 14
  %143 = load %struct.sv** %cop_warnings452, align 8, !tbaa !0
  %cmp453 = icmp eq %struct.sv* %143, null
  br i1 %cmp453, label %lor.lhs.false471, label %land.lhs.true455

land.lhs.true455:                                 ; preds = %if.then451
  %144 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings456 = getelementptr inbounds %struct.cop* %144, i64 0, i32 14
  %145 = load %struct.sv** %cop_warnings456, align 8, !tbaa !0
  %cmp457 = icmp eq %struct.sv* %145, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp457, label %lor.lhs.false471, label %land.lhs.true459

land.lhs.true459:                                 ; preds = %land.lhs.true455
  %146 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings460 = getelementptr inbounds %struct.cop* %146, i64 0, i32 14
  %147 = load %struct.sv** %cop_warnings460, align 8, !tbaa !0
  %cmp461 = icmp eq %struct.sv* %147, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp461, label %land.lhs.true479, label %lor.lhs.false463

lor.lhs.false463:                                 ; preds = %land.lhs.true459
  %148 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings464 = getelementptr inbounds %struct.cop* %148, i64 0, i32 14
  %149 = load %struct.sv** %cop_warnings464, align 8, !tbaa !0
  %sv_any465 = getelementptr inbounds %struct.sv* %149, i64 0, i32 0
  %150 = load i8** %sv_any465, align 8, !tbaa !0
  %xpv_pv466 = bitcast i8* %150 to i8**
  %151 = load i8** %xpv_pv466, align 8, !tbaa !0
  %arrayidx467 = getelementptr inbounds i8* %151, i64 7
  %152 = load i8* %arrayidx467, align 1, !tbaa !1
  %and469 = and i8 %152, 1
  %tobool470 = icmp eq i8 %and469, 0
  br i1 %tobool470, label %lor.lhs.false471, label %land.lhs.true479

lor.lhs.false471:                                 ; preds = %lor.lhs.false463, %land.lhs.true455, %if.then451
  %153 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings472 = getelementptr inbounds %struct.cop* %153, i64 0, i32 14
  %154 = load %struct.sv** %cop_warnings472, align 8, !tbaa !0
  %cmp473 = icmp eq %struct.sv* %154, null
  br i1 %cmp473, label %land.lhs.true475, label %for.inc

land.lhs.true475:                                 ; preds = %lor.lhs.false471
  %155 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and477 = and i8 %155, 1
  %notlhs = icmp ne i8 %and477, 0
  %notrhs = icmp ne i8* %lastub.31025, null
  %or.cond940.not = and i1 %notrhs, %notlhs
  %add.ptr482 = getelementptr inbounds i8* %lastub.31025, i64 1
  %cmp483 = icmp eq i8* %s.51028, %add.ptr482
  %or.cond942 = and i1 %or.cond940.not, %cmp483
  br i1 %or.cond942, label %if.then485, label %for.inc

land.lhs.true479:                                 ; preds = %lor.lhs.false463, %land.lhs.true459
  %tobool480.old = icmp ne i8* %lastub.31025, null
  %.old941 = getelementptr inbounds i8* %lastub.31025, i64 1
  %cmp483.old = icmp eq i8* %s.51028, %.old941
  %or.cond944 = and i1 %tobool480.old, %cmp483.old
  br i1 %or.cond944, label %if.then485, label %for.inc

if.then485:                                       ; preds = %land.lhs.true479, %land.lhs.true475
  call void (i32, i8*, ...)* @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8]* @.str127, i64 0, i64 0)) #6
  br label %for.inc

if.else487:                                       ; preds = %if.end447
  %incdec.ptr488 = getelementptr inbounds i8* %d.11026, i64 1
  store i8 %141, i8* %d.11026, align 1, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %lor.lhs.false471, %if.then485, %land.lhs.true475, %land.lhs.true479, %if.else487
  %lastub.4 = phi i8* [ %lastub.31025, %if.else487 ], [ %s.51028, %land.lhs.true479 ], [ %s.51028, %land.lhs.true475 ], [ %s.51028, %if.then485 ], [ %s.51028, %lor.lhs.false471 ]
  %d.2 = phi i8* [ %incdec.ptr488, %if.else487 ], [ %d.11026, %land.lhs.true479 ], [ %d.11026, %land.lhs.true475 ], [ %d.11026, %if.then485 ], [ %d.11026, %lor.lhs.false471 ]
  %incdec.ptr490 = getelementptr inbounds i8* %s.51028, i64 1
  %156 = load i8* %incdec.ptr490, align 1, !tbaa !1
  %.off985 = add i8 %156, -48
  %157 = icmp ult i8 %.off985, 10
  %cmp441 = icmp eq i8 %156, 95
  %or.cond979 = or i1 %157, %cmp441
  br i1 %or.cond979, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc, %for.cond431.preheader
  %s.5.lcssa = phi i8* [ %arrayidx390, %for.cond431.preheader ], [ %incdec.ptr490, %for.inc ]
  %d.1.lcssa = phi i8* [ %incdec.ptr396, %for.cond431.preheader ], [ %d.2, %for.inc ]
  %lastub.3.lcssa = phi i8* [ %lastub.3.ph, %for.cond431.preheader ], [ %lastub.4, %for.inc ]
  %arrayidx491 = getelementptr inbounds i8* %s.5.lcssa, i64 -1
  %158 = load i8* %arrayidx491, align 1, !tbaa !1
  %cmp493 = icmp eq i8 %158, 95
  br i1 %cmp493, label %if.then495, label %if.end525

if.then495:                                       ; preds = %for.end
  %159 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings496 = getelementptr inbounds %struct.cop* %159, i64 0, i32 14
  %160 = load %struct.sv** %cop_warnings496, align 8, !tbaa !0
  %cmp497 = icmp eq %struct.sv* %160, null
  br i1 %cmp497, label %lor.lhs.false515, label %land.lhs.true499

land.lhs.true499:                                 ; preds = %if.then495
  %161 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings500 = getelementptr inbounds %struct.cop* %161, i64 0, i32 14
  %162 = load %struct.sv** %cop_warnings500, align 8, !tbaa !0
  %cmp501 = icmp eq %struct.sv* %162, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp501, label %lor.lhs.false515, label %land.lhs.true503

land.lhs.true503:                                 ; preds = %land.lhs.true499
  %163 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings504 = getelementptr inbounds %struct.cop* %163, i64 0, i32 14
  %164 = load %struct.sv** %cop_warnings504, align 8, !tbaa !0
  %cmp505 = icmp eq %struct.sv* %164, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp505, label %if.then523, label %lor.lhs.false507

lor.lhs.false507:                                 ; preds = %land.lhs.true503
  %165 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings508 = getelementptr inbounds %struct.cop* %165, i64 0, i32 14
  %166 = load %struct.sv** %cop_warnings508, align 8, !tbaa !0
  %sv_any509 = getelementptr inbounds %struct.sv* %166, i64 0, i32 0
  %167 = load i8** %sv_any509, align 8, !tbaa !0
  %xpv_pv510 = bitcast i8* %167 to i8**
  %168 = load i8** %xpv_pv510, align 8, !tbaa !0
  %arrayidx511 = getelementptr inbounds i8* %168, i64 7
  %169 = load i8* %arrayidx511, align 1, !tbaa !1
  %and513 = and i8 %169, 1
  %tobool514 = icmp eq i8 %and513, 0
  br i1 %tobool514, label %lor.lhs.false515, label %if.then523

lor.lhs.false515:                                 ; preds = %lor.lhs.false507, %land.lhs.true499, %if.then495
  %170 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings516 = getelementptr inbounds %struct.cop* %170, i64 0, i32 14
  %171 = load %struct.sv** %cop_warnings516, align 8, !tbaa !0
  %cmp517 = icmp eq %struct.sv* %171, null
  br i1 %cmp517, label %land.lhs.true519, label %if.end525

land.lhs.true519:                                 ; preds = %lor.lhs.false515
  %172 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and521 = and i8 %172, 1
  %tobool522 = icmp eq i8 %and521, 0
  br i1 %tobool522, label %if.end525, label %if.then523

if.then523:                                       ; preds = %lor.lhs.false507, %land.lhs.true519, %land.lhs.true503
  call void (i32, i8*, ...)* @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8]* @.str127, i64 0, i64 0)) #6
  br label %if.end525

if.end525:                                        ; preds = %land.lhs.true519, %lor.lhs.false515, %if.then523, %for.end
  %173 = load i8* %s.5.lcssa, align 1, !tbaa !1
  %cmp527 = icmp eq i8 %173, 46
  br i1 %cmp527, label %land.lhs.true529, label %if.end541

land.lhs.true529:                                 ; preds = %if.end525
  %arrayidx530 = getelementptr inbounds i8* %s.5.lcssa, i64 1
  %174 = load i8* %arrayidx530, align 1, !tbaa !1
  %.off986 = add i8 %174, -48
  %175 = icmp ult i8 %.off986, 10
  br i1 %175, label %vstring, label %if.end720.thread1134

if.end720.thread1134:                             ; preds = %land.lhs.true529
  %call7211135 = call %struct.sv* @Perl_newSV(i64 0) #6
  br label %if.end751

if.end541:                                        ; preds = %if.end525, %if.end385
  %176 = phi i8 [ %173, %if.end525 ], [ %121, %if.end385 ]
  %lastub.5 = phi i8* [ %lastub.3.lcssa, %if.end525 ], [ %lastub.2.ph, %if.end385 ]
  %floatit.0 = phi i8 [ 1, %if.end525 ], [ 0, %if.end385 ]
  %d.3 = phi i8* [ %d.1.lcssa, %if.end525 ], [ %d.0, %if.end385 ]
  %s.6 = phi i8* [ %s.5.lcssa, %if.end525 ], [ %s.4, %if.end385 ]
  switch i8 %176, label %if.end720 [
    i8 101, label %land.lhs.true549
    i8 69, label %land.lhs.true549
  ]

land.lhs.true549:                                 ; preds = %if.end541, %if.end541
  %arrayidx550 = getelementptr inbounds i8* %s.6, i64 1
  %177 = load i8* %arrayidx550, align 1, !tbaa !1
  %conv551 = sext i8 %177 to i32
  %memchr = call i8* @memchr(i8* getelementptr inbounds ([14 x i8]* @.str133, i64 0, i64 0), i32 %conv551, i64 14) #2
  %tobool553 = icmp eq i8* %memchr, null
  br i1 %tobool553, label %if.end720, label %if.then554

if.then554:                                       ; preds = %land.lhs.true549
  %incdec.ptr556 = getelementptr inbounds i8* %d.3, i64 1
  store i8 101, i8* %d.3, align 1, !tbaa !1
  %178 = load i8* %arrayidx550, align 1, !tbaa !1
  %cmp558 = icmp eq i8 %178, 95
  br i1 %cmp558, label %if.then560, label %if.end591

if.then560:                                       ; preds = %if.then554
  %179 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings561 = getelementptr inbounds %struct.cop* %179, i64 0, i32 14
  %180 = load %struct.sv** %cop_warnings561, align 8, !tbaa !0
  %cmp562 = icmp eq %struct.sv* %180, null
  br i1 %cmp562, label %lor.lhs.false580, label %land.lhs.true564

land.lhs.true564:                                 ; preds = %if.then560
  %181 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings565 = getelementptr inbounds %struct.cop* %181, i64 0, i32 14
  %182 = load %struct.sv** %cop_warnings565, align 8, !tbaa !0
  %cmp566 = icmp eq %struct.sv* %182, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp566, label %lor.lhs.false580, label %land.lhs.true568

land.lhs.true568:                                 ; preds = %land.lhs.true564
  %183 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings569 = getelementptr inbounds %struct.cop* %183, i64 0, i32 14
  %184 = load %struct.sv** %cop_warnings569, align 8, !tbaa !0
  %cmp570 = icmp eq %struct.sv* %184, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp570, label %if.then588, label %lor.lhs.false572

lor.lhs.false572:                                 ; preds = %land.lhs.true568
  %185 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings573 = getelementptr inbounds %struct.cop* %185, i64 0, i32 14
  %186 = load %struct.sv** %cop_warnings573, align 8, !tbaa !0
  %sv_any574 = getelementptr inbounds %struct.sv* %186, i64 0, i32 0
  %187 = load i8** %sv_any574, align 8, !tbaa !0
  %xpv_pv575 = bitcast i8* %187 to i8**
  %188 = load i8** %xpv_pv575, align 8, !tbaa !0
  %arrayidx576 = getelementptr inbounds i8* %188, i64 7
  %189 = load i8* %arrayidx576, align 1, !tbaa !1
  %and578 = and i8 %189, 1
  %tobool579 = icmp eq i8 %and578, 0
  br i1 %tobool579, label %lor.lhs.false580, label %if.then588

lor.lhs.false580:                                 ; preds = %lor.lhs.false572, %land.lhs.true564, %if.then560
  %190 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings581 = getelementptr inbounds %struct.cop* %190, i64 0, i32 14
  %191 = load %struct.sv** %cop_warnings581, align 8, !tbaa !0
  %cmp582 = icmp eq %struct.sv* %191, null
  br i1 %cmp582, label %land.lhs.true584, label %if.end589

land.lhs.true584:                                 ; preds = %lor.lhs.false580
  %192 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and586 = and i8 %192, 1
  %tobool587 = icmp eq i8 %and586, 0
  br i1 %tobool587, label %if.end589, label %if.then588

if.then588:                                       ; preds = %lor.lhs.false572, %land.lhs.true584, %land.lhs.true568
  call void (i32, i8*, ...)* @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8]* @.str127, i64 0, i64 0)) #6
  br label %if.end589

if.end589:                                        ; preds = %land.lhs.true584, %if.then588, %lor.lhs.false580
  %incdec.ptr590 = getelementptr inbounds i8* %s.6, i64 2
  %.pre1118 = load i8* %incdec.ptr590, align 1, !tbaa !1
  br label %if.end591

if.end591:                                        ; preds = %if.end589, %if.then554
  %193 = phi i8 [ %.pre1118, %if.end589 ], [ %178, %if.then554 ]
  %lastub.6 = phi i8* [ %arrayidx550, %if.end589 ], [ %lastub.5, %if.then554 ]
  %s.7 = phi i8* [ %incdec.ptr590, %if.end589 ], [ %arrayidx550, %if.then554 ]
  switch i8 %193, label %if.end602 [
    i8 43, label %if.then599
    i8 45, label %if.then599
  ]

if.then599:                                       ; preds = %if.end591, %if.end591
  %incdec.ptr600 = getelementptr inbounds i8* %s.7, i64 1
  %incdec.ptr601 = getelementptr inbounds i8* %d.3, i64 2
  store i8 %193, i8* %incdec.ptr556, align 1, !tbaa !1
  %.pre1119 = load i8* %incdec.ptr600, align 1, !tbaa !1
  br label %if.end602

if.end602:                                        ; preds = %if.end591, %if.then599
  %194 = phi i8 [ %.pre1119, %if.then599 ], [ %193, %if.end591 ]
  %d.4 = phi i8* [ %incdec.ptr601, %if.then599 ], [ %incdec.ptr556, %if.end591 ]
  %s.8 = phi i8* [ %incdec.ptr600, %if.then599 ], [ %s.7, %if.end591 ]
  %cmp604 = icmp eq i8 %194, 95
  br i1 %cmp604, label %if.then606, label %while.cond638.preheader

if.then606:                                       ; preds = %if.end602
  %195 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings607 = getelementptr inbounds %struct.cop* %195, i64 0, i32 14
  %196 = load %struct.sv** %cop_warnings607, align 8, !tbaa !0
  %cmp608 = icmp eq %struct.sv* %196, null
  br i1 %cmp608, label %lor.lhs.false626, label %land.lhs.true610

land.lhs.true610:                                 ; preds = %if.then606
  %197 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings611 = getelementptr inbounds %struct.cop* %197, i64 0, i32 14
  %198 = load %struct.sv** %cop_warnings611, align 8, !tbaa !0
  %cmp612 = icmp eq %struct.sv* %198, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp612, label %lor.lhs.false626, label %land.lhs.true614

land.lhs.true614:                                 ; preds = %land.lhs.true610
  %199 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings615 = getelementptr inbounds %struct.cop* %199, i64 0, i32 14
  %200 = load %struct.sv** %cop_warnings615, align 8, !tbaa !0
  %cmp616 = icmp eq %struct.sv* %200, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp616, label %if.then634, label %lor.lhs.false618

lor.lhs.false618:                                 ; preds = %land.lhs.true614
  %201 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings619 = getelementptr inbounds %struct.cop* %201, i64 0, i32 14
  %202 = load %struct.sv** %cop_warnings619, align 8, !tbaa !0
  %sv_any620 = getelementptr inbounds %struct.sv* %202, i64 0, i32 0
  %203 = load i8** %sv_any620, align 8, !tbaa !0
  %xpv_pv621 = bitcast i8* %203 to i8**
  %204 = load i8** %xpv_pv621, align 8, !tbaa !0
  %arrayidx622 = getelementptr inbounds i8* %204, i64 7
  %205 = load i8* %arrayidx622, align 1, !tbaa !1
  %and624 = and i8 %205, 1
  %tobool625 = icmp eq i8 %and624, 0
  br i1 %tobool625, label %lor.lhs.false626, label %if.then634

lor.lhs.false626:                                 ; preds = %lor.lhs.false618, %land.lhs.true610, %if.then606
  %206 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings627 = getelementptr inbounds %struct.cop* %206, i64 0, i32 14
  %207 = load %struct.sv** %cop_warnings627, align 8, !tbaa !0
  %cmp628 = icmp eq %struct.sv* %207, null
  br i1 %cmp628, label %land.lhs.true630, label %if.end635

land.lhs.true630:                                 ; preds = %lor.lhs.false626
  %208 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and632 = and i8 %208, 1
  %tobool633 = icmp eq i8 %and632, 0
  br i1 %tobool633, label %if.end635, label %if.then634

if.then634:                                       ; preds = %lor.lhs.false618, %land.lhs.true630, %land.lhs.true614
  call void (i32, i8*, ...)* @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8]* @.str127, i64 0, i64 0)) #6
  br label %if.end635

if.end635:                                        ; preds = %land.lhs.true630, %if.then634, %lor.lhs.false626
  %incdec.ptr636 = getelementptr inbounds i8* %s.8, i64 1
  %.pre1120 = load i8* %incdec.ptr636, align 1, !tbaa !1
  br label %while.cond638.preheader

while.cond638.preheader:                          ; preds = %if.end635, %if.end602
  %209 = phi i8 [ %194, %if.end602 ], [ %.pre1120, %if.end635 ]
  %lastub.7.ph = phi i8* [ %lastub.6, %if.end602 ], [ %s.8, %if.end635 ]
  %s.9.ph = phi i8* [ %s.8, %if.end602 ], [ %incdec.ptr636, %if.end635 ]
  %.off98210161064 = add i8 %209, -48
  %210 = icmp ult i8 %.off98210161064, 10
  %cmp64810171065 = icmp eq i8 %209, 95
  %or.cond98010181066 = or i1 %210, %cmp64810171065
  br i1 %or.cond98010181066, label %while.body651.lr.ph, label %if.end720.thread

while.body651.lr.ph:                              ; preds = %while.cond638.preheader, %if.end716
  %211 = phi i8 [ %233, %if.end716 ], [ %209, %while.cond638.preheader ]
  %s.9.ph10131069 = phi i8* [ %incdec.ptr717, %if.end716 ], [ %s.9.ph, %while.cond638.preheader ]
  %d.5.ph1068 = phi i8* [ %d.51019, %if.end716 ], [ %d.4, %while.cond638.preheader ]
  %lastub.7.ph10121067 = phi i8* [ %s.91020, %if.end716 ], [ %lastub.7.ph, %while.cond638.preheader ]
  br label %while.body651

if.end720.thread:                                 ; preds = %while.cond638.preheader, %if.end716, %if.end663
  %s.9.lcssa = phi i8* [ %incdec.ptr664, %if.end663 ], [ %s.9.ph, %while.cond638.preheader ], [ %incdec.ptr717, %if.end716 ]
  %d.5.lcssa = phi i8* [ %incdec.ptr665, %if.end663 ], [ %d.4, %while.cond638.preheader ], [ %d.51019, %if.end716 ]
  %call721956 = call %struct.sv* @Perl_newSV(i64 0) #6
  br label %if.end751

while.body651:                                    ; preds = %while.body651.lr.ph, %if.end663
  %212 = phi i8 [ %211, %while.body651.lr.ph ], [ %215, %if.end663 ]
  %s.91020 = phi i8* [ %s.9.ph10131069, %while.body651.lr.ph ], [ %incdec.ptr664, %if.end663 ]
  %d.51019 = phi i8* [ %d.5.ph1068, %while.body651.lr.ph ], [ %incdec.ptr665, %if.end663 ]
  %.off983 = add i8 %212, -48
  %213 = icmp ult i8 %.off983, 10
  br i1 %213, label %if.then659, label %if.else666

if.then659:                                       ; preds = %while.body651
  %cmp660 = icmp ult i8* %d.51019, getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 250)
  br i1 %cmp660, label %if.end663, label %if.then662

if.then662:                                       ; preds = %if.then659
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([16 x i8]* @Perl_scan_num.number_too_long, i64 0, i64 0)) #6
  %.pre1121 = load i8* %s.91020, align 1, !tbaa !1
  br label %if.end663

if.end663:                                        ; preds = %if.then659, %if.then662
  %214 = phi i8 [ %212, %if.then659 ], [ %.pre1121, %if.then662 ]
  %incdec.ptr664 = getelementptr inbounds i8* %s.91020, i64 1
  %incdec.ptr665 = getelementptr inbounds i8* %d.51019, i64 1
  store i8 %214, i8* %d.51019, align 1, !tbaa !1
  %215 = load i8* %incdec.ptr664, align 1, !tbaa !1
  %.off982 = add i8 %215, -48
  %216 = icmp ult i8 %.off982, 10
  %cmp648 = icmp eq i8 %215, 95
  %or.cond980 = or i1 %216, %cmp648
  br i1 %or.cond980, label %while.body651, label %if.end720.thread

if.else666:                                       ; preds = %while.body651
  %217 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings667 = getelementptr inbounds %struct.cop* %217, i64 0, i32 14
  %218 = load %struct.sv** %cop_warnings667, align 8, !tbaa !0
  %cmp668 = icmp eq %struct.sv* %218, null
  br i1 %cmp668, label %lor.lhs.false686, label %land.lhs.true670

land.lhs.true670:                                 ; preds = %if.else666
  %219 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings671 = getelementptr inbounds %struct.cop* %219, i64 0, i32 14
  %220 = load %struct.sv** %cop_warnings671, align 8, !tbaa !0
  %cmp672 = icmp eq %struct.sv* %220, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp672, label %lor.lhs.false686, label %land.lhs.true674

land.lhs.true674:                                 ; preds = %land.lhs.true670
  %221 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings675 = getelementptr inbounds %struct.cop* %221, i64 0, i32 14
  %222 = load %struct.sv** %cop_warnings675, align 8, !tbaa !0
  %cmp676 = icmp eq %struct.sv* %222, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp676, label %land.lhs.true694, label %lor.lhs.false678

lor.lhs.false678:                                 ; preds = %land.lhs.true674
  %223 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings679 = getelementptr inbounds %struct.cop* %223, i64 0, i32 14
  %224 = load %struct.sv** %cop_warnings679, align 8, !tbaa !0
  %sv_any680 = getelementptr inbounds %struct.sv* %224, i64 0, i32 0
  %225 = load i8** %sv_any680, align 8, !tbaa !0
  %xpv_pv681 = bitcast i8* %225 to i8**
  %226 = load i8** %xpv_pv681, align 8, !tbaa !0
  %arrayidx682 = getelementptr inbounds i8* %226, i64 7
  %227 = load i8* %arrayidx682, align 1, !tbaa !1
  %and684 = and i8 %227, 1
  %tobool685 = icmp eq i8 %and684, 0
  br i1 %tobool685, label %lor.lhs.false686, label %land.lhs.true694

lor.lhs.false686:                                 ; preds = %lor.lhs.false678, %land.lhs.true670, %if.else666
  %228 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings687 = getelementptr inbounds %struct.cop* %228, i64 0, i32 14
  %229 = load %struct.sv** %cop_warnings687, align 8, !tbaa !0
  %cmp688 = icmp eq %struct.sv* %229, null
  br i1 %cmp688, label %land.lhs.true690, label %if.end716

land.lhs.true690:                                 ; preds = %lor.lhs.false686
  %230 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and692 = and i8 %230, 1
  %tobool693 = icmp eq i8 %and692, 0
  br i1 %tobool693, label %if.end716, label %land.lhs.true694

land.lhs.true694:                                 ; preds = %lor.lhs.false678, %land.lhs.true690, %land.lhs.true674
  %tobool695 = icmp ne i8* %lastub.7.ph10121067, null
  %add.ptr697 = getelementptr inbounds i8* %lastub.7.ph10121067, i64 1
  %cmp698 = icmp eq i8* %s.91020, %add.ptr697
  %or.cond949 = and i1 %tobool695, %cmp698
  br i1 %or.cond949, label %if.then715, label %lor.lhs.false700

lor.lhs.false700:                                 ; preds = %land.lhs.true694
  %arrayidx701 = getelementptr inbounds i8* %s.91020, i64 1
  %231 = load i8* %arrayidx701, align 1, !tbaa !1
  %.off984 = add i8 %231, -48
  %232 = icmp ult i8 %.off984, 10
  %cmp713 = icmp eq i8 %231, 95
  %or.cond981 = or i1 %232, %cmp713
  br i1 %or.cond981, label %if.end716, label %if.then715

if.then715:                                       ; preds = %lor.lhs.false700, %land.lhs.true694
  call void (i32, i8*, ...)* @Perl_warner(i32 28, i8* getelementptr inbounds ([22 x i8]* @.str127, i64 0, i64 0)) #6
  br label %if.end716

if.end716:                                        ; preds = %land.lhs.true690, %lor.lhs.false686, %lor.lhs.false700, %if.then715
  %incdec.ptr717 = getelementptr inbounds i8* %s.91020, i64 1
  %233 = load i8* %incdec.ptr717, align 1, !tbaa !1
  %.off9821016 = add i8 %233, -48
  %234 = icmp ult i8 %.off9821016, 10
  %cmp6481017 = icmp eq i8 %233, 95
  %or.cond9801018 = or i1 %234, %cmp6481017
  br i1 %or.cond9801018, label %while.body651.lr.ph, label %if.end720.thread

if.end720:                                        ; preds = %if.end541, %land.lhs.true549
  %call721 = call %struct.sv* @Perl_newSV(i64 0) #6
  %tobool722 = icmp eq i8 %floatit.0, 0
  br i1 %tobool722, label %if.then723, label %if.end751

if.then723:                                       ; preds = %if.end720.thread1128, %if.end720
  %call7211133 = phi %struct.sv* [ %call7211129, %if.end720.thread1128 ], [ %call721, %if.end720 ]
  %d.311261132 = phi i8* [ %d.0, %if.end720.thread1128 ], [ %d.3, %if.end720 ]
  %s.611271131 = phi i8* [ %s.4, %if.end720.thread1128 ], [ %s.6, %if.end720 ]
  %sub.ptr.lhs.cast724 = ptrtoint i8* %d.311261132 to i64
  %sub.ptr.sub725 = sub i64 %sub.ptr.lhs.cast724, ptrtoint ([256 x i8]* @PL_tokenbuf to i64)
  %call726 = call i32 @Perl_grok_number(i8* getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 0), i64 %sub.ptr.sub725, i64* %uv) #6
  switch i32 %call726, label %if.end751 [
    i32 1, label %if.then729
    i32 9, label %if.then738
  ]

if.then729:                                       ; preds = %if.then723
  %235 = load i64* %uv, align 8, !tbaa !4
  %cmp730 = icmp sgt i64 %235, -1
  br i1 %cmp730, label %if.then732, label %if.else733

if.then732:                                       ; preds = %if.then729
  call void @Perl_sv_setiv(%struct.sv* %call7211133, i64 %235) #6
  br label %if.end751.thread

if.else733:                                       ; preds = %if.then729
  call void @Perl_sv_setuv(%struct.sv* %call7211133, i64 %235) #6
  br label %if.end751.thread

if.then738:                                       ; preds = %if.then723
  %236 = load i64* %uv, align 8, !tbaa !4
  %cmp739 = icmp ult i64 %236, -9223372036854775807
  br i1 %cmp739, label %if.then741, label %if.end751

if.then741:                                       ; preds = %if.then738
  %sub = sub nsw i64 0, %236
  call void @Perl_sv_setiv(%struct.sv* %call7211133, i64 %sub) #6
  br label %if.end751.thread

if.end751.thread:                                 ; preds = %if.then741, %if.then732, %if.else733
  %237 = load i32* @PL_hints, align 4, !tbaa !3
  %and756 = and i32 %237, 4096
  %tobool757 = icmp eq i32 %and756, 0
  br i1 %tobool757, label %sw.epilog768, label %if.then758

if.end751:                                        ; preds = %if.end720.thread1134, %if.end720.thread, %if.then723, %if.then738, %if.end720
  %d.6958966 = phi i8* [ %d.3, %if.end720 ], [ %d.311261132, %if.then738 ], [ %d.311261132, %if.then723 ], [ %d.5.lcssa, %if.end720.thread ], [ %d.1.lcssa, %if.end720.thread1134 ]
  %s.10959964 = phi i8* [ %s.6, %if.end720 ], [ %s.611271131, %if.then738 ], [ %s.611271131, %if.then723 ], [ %s.9.lcssa, %if.end720.thread ], [ %s.5.lcssa, %if.end720.thread1134 ]
  %call721960962 = phi %struct.sv* [ %call721, %if.end720 ], [ %call7211133, %if.then738 ], [ %call7211133, %if.then723 ], [ %call721956, %if.end720.thread ], [ %call7211135, %if.end720.thread1134 ]
  store i8 0, i8* %d.6958966, align 1, !tbaa !1
  %call750 = call double @Perl_my_atof(i8* getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 0)) #6
  call void @Perl_sv_setnv(%struct.sv* %call721960962, double %call750) #6
  %238 = load i32* @PL_hints, align 4, !tbaa !3
  %and754 = and i32 %238, 8192
  %tobool755 = icmp eq i32 %and754, 0
  br i1 %tobool755, label %sw.epilog768, label %if.then758

if.then758:                                       ; preds = %if.end751, %if.end751.thread
  %tobool753977 = phi i8* [ getelementptr inbounds ([6 x i8]* @.str134, i64 0, i64 0), %if.end751 ], [ getelementptr inbounds ([8 x i8]* @.str132, i64 0, i64 0), %if.end751.thread ]
  %call721960963975 = phi %struct.sv* [ %call721960962, %if.end751 ], [ %call7211133, %if.end751.thread ]
  %s.10959965973 = phi i8* [ %s.10959964, %if.end751 ], [ %s.611271131, %if.end751.thread ]
  %d.6958967971 = phi i8* [ %d.6958966, %if.end751 ], [ %d.311261132, %if.end751.thread ]
  %sub.ptr.lhs.cast759 = ptrtoint i8* %d.6958967971 to i64
  %sub.ptr.sub760 = sub i64 %sub.ptr.lhs.cast759, ptrtoint ([256 x i8]* @PL_tokenbuf to i64)
  %call763 = call fastcc %struct.sv* @S_new_constant(i8* getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 0), i64 %sub.ptr.sub760, i8* %tobool753977, %struct.sv* %call721960963975, %struct.sv* null, i8* null) #7
  br label %sw.epilog768

vstring:                                          ; preds = %land.lhs.true529, %entry
  %call766 = call %struct.sv* @Perl_newSV(i64 5) #6
  %call767 = call i8* @Perl_scan_vstring(i8* %start, %struct.sv* %call766) #7
  br label %sw.epilog768

sw.epilog768:                                     ; preds = %if.else281, %if.end751, %if.end751.thread, %if.then758, %if.then279, %if.then284, %vstring
  %sv.0 = phi %struct.sv* [ %call280, %if.then279 ], [ %call288, %if.then284 ], [ %call205, %if.else281 ], [ %call766, %vstring ], [ %call763, %if.then758 ], [ %call721960962, %if.end751 ], [ %call7211133, %if.end751.thread ]
  %s.12 = phi i8* [ %s.2, %if.then279 ], [ %s.2, %if.then284 ], [ %s.2, %if.else281 ], [ %call767, %vstring ], [ %s.10959965973, %if.then758 ], [ %s.10959964, %if.end751 ], [ %s.611271131, %if.end751.thread ]
  %tobool769 = icmp eq %struct.sv* %sv.0, null
  br i1 %tobool769, label %if.else772, label %if.then770

if.then770:                                       ; preds = %sw.epilog768
  %call771 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %sv.0) #6
  %239 = getelementptr inbounds %union.YYSTYPE* %lvalp, i64 0, i32 0
  %call771.c = bitcast %struct.op* %call771 to i8*
  store i8* %call771.c, i8** %239, align 8, !tbaa !0
  br label %if.end774

if.else772:                                       ; preds = %sw.epilog768
  %240 = getelementptr inbounds %union.YYSTYPE* %lvalp, i64 0, i32 0
  store i8* null, i8** %240, align 8, !tbaa !0
  br label %if.end774

if.end774:                                        ; preds = %if.else772, %if.then770
  ret i8* %s.12
}
