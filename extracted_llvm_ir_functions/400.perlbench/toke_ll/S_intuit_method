define internal fastcc i32 @S_intuit_method(i8* %start, %struct.gv* %gv) #0 {
entry:
  %tmpbuf = alloca [256 x i8], align 16
  %len = alloca i64, align 8
  %0 = load i8* %start, align 1, !tbaa !1
  %cmp = icmp eq i8 %0, 36
  %idx.ext = zext i1 %cmp to i64
  %add.ptr = getelementptr inbounds i8* %start, i64 %idx.ext
  %1 = getelementptr inbounds [256 x i8]* %tmpbuf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 256, i8* %1) #2
  %tobool = icmp eq %struct.gv* %gv, null
  br i1 %tobool, label %if.end35, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = getelementptr inbounds %struct.gv* %gv, i64 0, i32 2
  %3 = load i32* %2, align 4, !tbaa !3
  %and = and i32 %3, 255
  %cmp3 = icmp eq i32 %and, 13
  %sv_any = getelementptr inbounds %struct.gv* %gv, i64 0, i32 0
  %4 = load %struct.xpvgv** %sv_any, align 8, !tbaa !0
  %xgv_gp = getelementptr inbounds %struct.xpvgv* %4, i64 0, i32 7
  %5 = load %struct.gp** %xgv_gp, align 8, !tbaa !0
  br i1 %cmp3, label %land.lhs.true5, label %if.end

land.lhs.true5:                                   ; preds = %land.lhs.true
  %gp_io = getelementptr inbounds %struct.gp* %5, i64 0, i32 2
  %6 = load %struct.io** %gp_io, align 8, !tbaa !0
  %tobool9 = icmp eq %struct.io* %6, null
  br i1 %tobool9, label %if.end, label %cleanup

if.end:                                           ; preds = %land.lhs.true, %land.lhs.true5
  %gp_cvgen = getelementptr inbounds %struct.gp* %5, i64 0, i32 8
  %7 = load i32* %gp_cvgen, align 4, !tbaa !3
  %tobool13 = icmp eq i32 %7, 0
  br i1 %tobool13, label %cond.end, label %if.end35

cond.end:                                         ; preds = %if.end
  %gp_cv = getelementptr inbounds %struct.gp* %5, i64 0, i32 7
  %8 = load %struct.cv** %gp_cv, align 8, !tbaa !0
  %tobool18 = icmp eq %struct.cv* %8, null
  br i1 %tobool18, label %if.end35, label %if.then19

if.then19:                                        ; preds = %cond.end
  %sv_any20 = getelementptr inbounds %struct.cv* %8, i64 0, i32 0
  %9 = load %struct.xpvcv** %sv_any20, align 8, !tbaa !0
  %xpv_pv = getelementptr inbounds %struct.xpvcv* %9, i64 0, i32 0
  %10 = load i8** %xpv_pv, align 8, !tbaa !0
  %tobool21 = icmp eq i8* %10, null
  br i1 %tobool21, label %if.end35, label %if.then22

if.then22:                                        ; preds = %if.then19
  %11 = load i8* %10, align 1, !tbaa !1
  %cmp24 = icmp eq i8 %11, 59
  %incdec.ptr = getelementptr inbounds i8* %10, i64 1
  %incdec.ptr. = select i1 %cmp24, i8* %incdec.ptr, i8* %10
  %12 = load i8* %incdec.ptr., align 1, !tbaa !1
  %cmp29 = icmp eq i8 %12, 42
  br i1 %cmp29, label %cleanup, label %if.end35

if.end35:                                         ; preds = %entry, %if.end, %cond.end, %if.then19, %if.then22
  %gv.addr.0 = phi %struct.gv* [ %gv, %if.then22 ], [ %gv, %if.then19 ], [ null, %entry ], [ null, %cond.end ], [ null, %if.end ]
  %call = call fastcc i8* @S_scan_word(i8* %add.ptr, i8* %1, i64 256, i32 1, i64* %len) #7
  %13 = load i8* %start, align 1, !tbaa !1
  %cmp37 = icmp eq i8 %13, 36
  br i1 %cmp37, label %if.then39, label %if.end59

if.then39:                                        ; preds = %if.end35
  %tobool40 = icmp ne %struct.gv* %gv.addr.0, null
  %14 = load i16* @PL_last_lop_op, align 2, !tbaa !5
  %cmp42 = icmp eq i16 %14, 209
  %or.cond = or i1 %tobool40, %cmp42
  br i1 %or.cond, label %cleanup, label %lor.lhs.false44

lor.lhs.false44:                                  ; preds = %if.then39
  %15 = load i8* getelementptr inbounds ([256 x i8]* @PL_tokenbuf, i64 0, i64 0), align 1, !tbaa !1
  %.off = add i8 %15, -65
  %16 = icmp ult i8 %.off, 26
  br i1 %16, label %cleanup, label %if.end53

if.end53:                                         ; preds = %lor.lhs.false44
  %call54 = call fastcc i8* @S_skipspace(i8* %call) #7
  store i8* %start, i8** @PL_bufptr, align 8, !tbaa !0
  store i32 2, i32* @PL_expect, align 4, !tbaa !3
  %17 = load i8* %call54, align 1, !tbaa !1
  %cmp56 = icmp eq i8 %17, 40
  %cond58 = select i1 %cmp56, i32 259, i32 258
  br label %cleanup

if.end59:                                         ; preds = %if.end35
  %18 = load i64* %len, align 8, !tbaa !4
  %conv61 = trunc i64 %18 to i32
  %call62 = call i32 @Perl_keyword(i8* %1, i32 %conv61) #7
  %tobool63 = icmp eq i32 %call62, 0
  br i1 %tobool63, label %if.then64, label %cleanup

if.then64:                                        ; preds = %if.end59
  %cmp65 = icmp ugt i64 %18, 2
  br i1 %cmp65, label %land.lhs.true67, label %if.end80

land.lhs.true67:                                  ; preds = %if.then64
  %sub = add i64 %18, -2
  %arrayidx = getelementptr inbounds [256 x i8]* %tmpbuf, i64 0, i64 %sub
  %19 = load i8* %arrayidx, align 1, !tbaa !1
  %cmp69 = icmp eq i8 %19, 58
  br i1 %cmp69, label %land.lhs.true71, label %if.end80

land.lhs.true71:                                  ; preds = %land.lhs.true67
  %sub72 = add i64 %18, -1
  %arrayidx73 = getelementptr inbounds [256 x i8]* %tmpbuf, i64 0, i64 %sub72
  %20 = load i8* %arrayidx73, align 1, !tbaa !1
  %cmp75 = icmp eq i8 %20, 58
  br i1 %cmp75, label %if.then77, label %if.end80

if.then77:                                        ; preds = %land.lhs.true71
  store i64 %sub, i64* %len, align 8, !tbaa !4
  store i8 0, i8* %arrayidx, align 1, !tbaa !1
  br label %bare_package

if.end80:                                         ; preds = %land.lhs.true71, %land.lhs.true67, %if.then64
  %call82 = call %struct.gv* @Perl_gv_fetchpv(i8* %1, i32 0, i32 12) #6
  %tobool83 = icmp ne %struct.gv* %call82, null
  br i1 %tobool83, label %land.lhs.true84, label %if.end96

land.lhs.true84:                                  ; preds = %if.end80
  %sv_any85 = getelementptr inbounds %struct.gv* %call82, i64 0, i32 0
  %21 = load %struct.xpvgv** %sv_any85, align 8, !tbaa !0
  %xgv_gp86 = getelementptr inbounds %struct.xpvgv* %21, i64 0, i32 7
  %22 = load %struct.gp** %xgv_gp86, align 8, !tbaa !0
  %gp_cvgen87 = getelementptr inbounds %struct.gp* %22, i64 0, i32 8
  %23 = load i32* %gp_cvgen87, align 4, !tbaa !3
  %tobool88 = icmp eq i32 %23, 0
  br i1 %tobool88, label %cond.false90, label %if.end96

cond.false90:                                     ; preds = %land.lhs.true84
  %gp_cv93 = getelementptr inbounds %struct.gp* %22, i64 0, i32 7
  %24 = load %struct.cv** %gp_cv93, align 8, !tbaa !0
  %tobool94 = icmp eq %struct.cv* %24, null
  br i1 %tobool94, label %if.end96, label %cleanup

if.end96:                                         ; preds = %cond.false90, %land.lhs.true84, %if.end80
  %tobool97 = icmp eq %struct.gv* %gv.addr.0, null
  br i1 %tobool97, label %if.then120, label %lor.lhs.false98

lor.lhs.false98:                                  ; preds = %if.end96
  br i1 %tobool83, label %land.lhs.true100, label %lor.lhs.false115

land.lhs.true100:                                 ; preds = %lor.lhs.false98
  %25 = getelementptr inbounds %struct.gv* %call82, i64 0, i32 2
  %26 = load i32* %25, align 4, !tbaa !3
  %and102 = and i32 %26, 255
  %cmp103 = icmp eq i32 %and102, 13
  br i1 %cmp103, label %land.lhs.true105, label %lor.lhs.false115

land.lhs.true105:                                 ; preds = %land.lhs.true100
  %sv_any106 = getelementptr inbounds %struct.gv* %call82, i64 0, i32 0
  %27 = load %struct.xpvgv** %sv_any106, align 8, !tbaa !0
  %xgv_gp107 = getelementptr inbounds %struct.xpvgv* %27, i64 0, i32 7
  %28 = load %struct.gp** %xgv_gp107, align 8, !tbaa !0
  %tobool108 = icmp eq %struct.gp* %28, null
  br i1 %tobool108, label %lor.lhs.false115, label %cond.true109

cond.true109:                                     ; preds = %land.lhs.true105
  %gp_io112 = getelementptr inbounds %struct.gp* %28, i64 0, i32 2
  %29 = load %struct.io** %gp_io112, align 8, !tbaa !0
  %tobool113 = icmp eq %struct.io* %29, null
  br i1 %tobool113, label %lor.lhs.false115, label %if.then120

lor.lhs.false115:                                 ; preds = %cond.true109, %land.lhs.true105, %lor.lhs.false98, %land.lhs.true100
  %call118 = call %struct.hv* @Perl_gv_stashpvn(i8* %1, i32 %conv61, i32 0) #6
  %tobool119 = icmp eq %struct.hv* %call118, null
  br i1 %tobool119, label %cleanup, label %if.then120

if.then120:                                       ; preds = %cond.true109, %lor.lhs.false115, %if.end96
  %call121 = call fastcc i8* @S_skipspace(i8* %call) #7
  %30 = load i8** @PL_bufend, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint i8* %30 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %call121 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp122 = icmp sgt i64 %sub.ptr.sub, 1
  br i1 %cmp122, label %land.lhs.true124, label %bare_package

land.lhs.true124:                                 ; preds = %if.then120
  %31 = load i8* %call121, align 1, !tbaa !1
  %cmp126 = icmp eq i8 %31, 61
  br i1 %cmp126, label %land.lhs.true128, label %bare_package

land.lhs.true128:                                 ; preds = %land.lhs.true124
  %add.ptr129 = getelementptr inbounds i8* %call121, i64 1
  %32 = load i8* %add.ptr129, align 1, !tbaa !1
  %cmp131 = icmp eq i8 %32, 62
  br i1 %cmp131, label %cleanup, label %bare_package

bare_package:                                     ; preds = %if.then120, %land.lhs.true124, %land.lhs.true128, %if.then77
  %33 = phi i64 [ %sub, %if.then77 ], [ %18, %land.lhs.true128 ], [ %18, %land.lhs.true124 ], [ %18, %if.then120 ]
  %s.0 = phi i8* [ %call, %if.then77 ], [ %call121, %land.lhs.true128 ], [ %call121, %land.lhs.true124 ], [ %call121, %if.then120 ]
  %call136 = call %struct.sv* @Perl_newSVpvn(i8* %1, i64 %33) #6
  %call137 = call %struct.op* @Perl_newSVOP(i32 5, i32 0, %struct.sv* %call136) #6
  %34 = load i32* @PL_nexttoke, align 4, !tbaa !3
  %idxprom = sext i32 %34 to i64
  %35 = getelementptr inbounds [5 x %union.YYSTYPE]* @PL_nextval, i64 0, i64 %idxprom, i32 0
  %call137.c = bitcast %struct.op* %call137 to i8*
  store i8* %call137.c, i8** %35, align 8, !tbaa !0
  %op_private = getelementptr inbounds %struct.op* %call137, i64 0, i32 7
  store i8 64, i8* %op_private, align 1, !tbaa !1
  store i32 1, i32* @PL_expect, align 4, !tbaa !3
  %36 = load i32* @PL_nexttoke, align 4, !tbaa !3
  %idxprom.i = sext i32 %36 to i64
  %arrayidx.i = getelementptr inbounds [5 x i32]* @PL_nexttype, i64 0, i64 %idxprom.i
  store i32 257, i32* %arrayidx.i, align 4, !tbaa !3
  %inc.i = add nsw i32 %36, 1
  store i32 %inc.i, i32* @PL_nexttoke, align 4, !tbaa !3
  %37 = load i32* @PL_lex_state, align 4, !tbaa !3
  %cmp.i = icmp eq i32 %37, 0
  br i1 %cmp.i, label %S_force_next.exit, label %if.then.i

if.then.i:                                        ; preds = %bare_package
  store i32 %37, i32* @PL_lex_defer, align 4, !tbaa !3
  store i32 1, i32* @PL_lex_expect, align 4, !tbaa !3
  store i32 0, i32* @PL_lex_state, align 4, !tbaa !3
  br label %S_force_next.exit

S_force_next.exit:                                ; preds = %bare_package, %if.then.i
  store i8* %s.0, i8** @PL_bufptr, align 8, !tbaa !0
  %38 = load i8* %s.0, align 1, !tbaa !1
  %cmp143 = icmp eq i8 %38, 40
  %cond145 = select i1 %cmp143, i32 259, i32 258
  br label %cleanup

cleanup:                                          ; preds = %if.end59, %lor.lhs.false115, %land.lhs.true128, %cond.false90, %if.then39, %lor.lhs.false44, %if.then22, %land.lhs.true5, %S_force_next.exit, %if.end53
  %retval.0 = phi i32 [ %cond58, %if.end53 ], [ %cond145, %S_force_next.exit ], [ 0, %land.lhs.true5 ], [ 0, %if.then22 ], [ 0, %lor.lhs.false44 ], [ 0, %if.then39 ], [ 0, %cond.false90 ], [ 0, %land.lhs.true128 ], [ 0, %lor.lhs.false115 ], [ 0, %if.end59 ]
  call void @llvm.lifetime.end(i64 256, i8* %1) #2
  ret i32 %retval.0
}
