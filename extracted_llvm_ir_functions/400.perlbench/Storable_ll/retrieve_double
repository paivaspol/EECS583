define internal %struct.sv* @retrieve_double(%struct.stcxt* nocapture %cxt, i8* %cname) #1 {
entry:
  %nv = alloca double, align 8
  %fio = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 23
  %0 = load %struct._PerlIO*** %fio, align 8, !tbaa !0
  %tobool = icmp eq %struct._PerlIO** %0, null
  br i1 %tobool, label %if.then, label %if.else8

if.then:                                          ; preds = %entry
  %aptr = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 2
  %1 = load i8** %aptr, align 8, !tbaa !0
  %add.ptr = getelementptr inbounds i8* %1, i64 8
  %aend = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 3
  %2 = load i8** %aend, align 8, !tbaa !0
  %cmp = icmp ugt i8* %add.ptr, %2
  br i1 %cmp, label %return, label %if.then2

if.then2:                                         ; preds = %if.then
  %3 = bitcast i8* %1 to double*
  %4 = load double* %3, align 1
  store double %4, double* %nv, align 8
  store i8* %add.ptr, i8** %aptr, align 8, !tbaa !0
  br label %if.end13

if.else8:                                         ; preds = %entry
  %5 = bitcast double* %nv to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %0, i8* %5, i64 8) #7
  %cmp10 = icmp eq i64 %call, 8
  br i1 %cmp10, label %if.else8.if.end13_crit_edge, label %return

if.else8.if.end13_crit_edge:                      ; preds = %if.else8
  %.pre = load double* %nv, align 8, !tbaa !6
  br label %if.end13

if.end13:                                         ; preds = %if.else8.if.end13_crit_edge, %if.then2
  %6 = phi double [ %.pre, %if.else8.if.end13_crit_edge ], [ %4, %if.then2 ]
  %call14 = call %struct.sv* @Perl_newSVnv(double %6) #7
  %tobool15 = icmp eq %struct.sv* %call14, null
  br i1 %tobool15, label %return, label %if.end17

if.end17:                                         ; preds = %if.end13
  %aseen = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 4
  %7 = load %struct.av** %aseen, align 8, !tbaa !0
  %tagnum = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 9
  %8 = load i64* %tagnum, align 8, !tbaa !4
  %inc = add nsw i64 %8, 1
  store i64 %inc, i64* %tagnum, align 8, !tbaa !4
  %conv = trunc i64 %8 to i32
  store %struct.sv* %call14, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %sv_refcnt = getelementptr inbounds %struct.sv* %call14, i64 0, i32 1
  %9 = load i32* %sv_refcnt, align 4, !tbaa !3
  %inc19 = add i32 %9, 1
  store i32 %inc19, i32* %sv_refcnt, align 4, !tbaa !3
  %call21 = call %struct.sv** @Perl_av_store(%struct.av* %7, i32 %conv, %struct.sv* %call14) #7
  %cmp22 = icmp eq %struct.sv** %call21, null
  br i1 %cmp22, label %return, label %if.end25

if.end25:                                         ; preds = %if.end17
  %tobool26 = icmp eq i8* %cname, null
  br i1 %tobool26, label %return, label %if.then27

if.then27:                                        ; preds = %if.end25
  %call28 = call %struct.hv* @Perl_gv_stashpv(i8* %cname, i32 1) #7
  %call29 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %call14) #7
  %call30 = call %struct.sv* @Perl_sv_bless(%struct.sv* %call29, %struct.hv* %call28) #7
  %sv_any = getelementptr inbounds %struct.sv* %call29, i64 0, i32 0
  %10 = load i8** %sv_any, align 8, !tbaa !0
  %xrv_rv = bitcast i8* %10 to %struct.sv**
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8, !tbaa !0
  call void @Perl_sv_free(%struct.sv* %call29) #7
  br label %return

return:                                           ; preds = %if.end13, %if.then27, %if.end25, %if.end17, %if.else8, %if.then
  %retval.0 = phi %struct.sv* [ null, %if.then ], [ null, %if.else8 ], [ null, %if.end13 ], [ null, %if.end17 ], [ %call14, %if.end25 ], [ %call14, %if.then27 ]
  ret %struct.sv* %retval.0
}
