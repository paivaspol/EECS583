define internal %struct.sv* @retrieve_idx_blessed(%struct.stcxt* %cxt, i8* nocapture %cname) #1 {
entry:
  %idx = alloca i32, align 4
  %fio = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 23
  %0 = load %struct._PerlIO*** %fio, align 8, !tbaa !0
  %tobool = icmp eq %struct._PerlIO** %0, null
  br i1 %tobool, label %if.then, label %if.else5

if.then:                                          ; preds = %entry
  %aptr = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 2
  %1 = load i8** %aptr, align 8, !tbaa !0
  %aend = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 3
  %2 = load i8** %aend, align 8, !tbaa !0
  %cmp = icmp ult i8* %1, %2
  br i1 %cmp, label %if.then2, label %return

if.then2:                                         ; preds = %if.then
  %incdec.ptr = getelementptr inbounds i8* %1, i64 1
  store i8* %incdec.ptr, i8** %aptr, align 8, !tbaa !0
  %3 = load i8* %1, align 1, !tbaa !1
  %conv = zext i8 %3 to i32
  store i32 %conv, i32* %idx, align 4, !tbaa !3
  br label %if.end11

if.else5:                                         ; preds = %entry
  %call = call i32 @PerlIO_getc(%struct._PerlIO** %0) #7
  store i32 %call, i32* %idx, align 4, !tbaa !3
  %cmp7 = icmp eq i32 %call, -1
  br i1 %cmp7, label %return, label %if.end11

if.end11:                                         ; preds = %if.else5, %if.then2
  %4 = phi i32 [ %call, %if.else5 ], [ %conv, %if.then2 ]
  %and = and i32 %4, 128
  %tobool12 = icmp eq i32 %and, 0
  br i1 %tobool12, label %if.end54, label %if.then13

if.then13:                                        ; preds = %if.end11
  %5 = load %struct._PerlIO*** %fio, align 8, !tbaa !0
  %tobool15 = icmp eq %struct._PerlIO** %5, null
  br i1 %tobool15, label %if.then16, label %if.else43

if.then16:                                        ; preds = %if.then13
  %aptr18 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 2
  %6 = load i8** %aptr18, align 8, !tbaa !0
  %add.ptr = getelementptr inbounds i8* %6, i64 4
  %aend20 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 3
  %7 = load i8** %aend20, align 8, !tbaa !0
  %cmp21 = icmp ugt i8* %add.ptr, %7
  br i1 %cmp21, label %return, label %if.end37

if.end37:                                         ; preds = %if.then16
  %storemerge.in = bitcast i8* %6 to i32*
  %storemerge = load i32* %storemerge.in, align 1
  store i32 %storemerge, i32* %idx, align 4
  store i8* %add.ptr, i8** %aptr18, align 8, !tbaa !0
  br label %if.end50

if.else43:                                        ; preds = %if.then13
  %8 = bitcast i32* %idx to i8*
  %call45 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %5, i8* %8, i64 4) #7
  %cmp46 = icmp eq i64 %call45, 4
  br i1 %cmp46, label %if.end50, label %return

if.end50:                                         ; preds = %if.else43, %if.end37
  %netorder = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 11
  %9 = load i32* %netorder, align 4, !tbaa !3
  %tobool51 = icmp eq i32 %9, 0
  %.pre = load i32* %idx, align 4, !tbaa !3
  br i1 %tobool51, label %if.end54, label %if.then52

if.then52:                                        ; preds = %if.end50
  %10 = call i32 asm "bswap $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %.pre) #3, !srcloc !18
  store i32 %10, i32* %idx, align 4, !tbaa !3
  br label %if.end54

if.end54:                                         ; preds = %if.end50, %if.end11, %if.then52
  %11 = phi i32 [ %4, %if.end11 ], [ %10, %if.then52 ], [ %.pre, %if.end50 ]
  %aclass = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 7
  %12 = load %struct.av** %aclass, align 8, !tbaa !0
  %call55 = call %struct.sv** @Perl_av_fetch(%struct.av* %12, i32 %11, i32 0) #7
  %tobool56 = icmp eq %struct.sv** %call55, null
  br i1 %tobool56, label %if.then57, label %if.end59

if.then57:                                        ; preds = %if.end54
  %s_dirty = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 18
  store i32 1, i32* %s_dirty, align 4, !tbaa !3
  %13 = load i32* %idx, align 4, !tbaa !3
  %conv58 = sext i32 %13 to i64
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([46 x i8]* @.str60, i64 0, i64 0), i64 %conv58) #7
  br label %if.end59

if.end59:                                         ; preds = %if.end54, %if.then57
  %14 = load %struct.sv** %call55, align 8, !tbaa !0
  %sv_any = getelementptr inbounds %struct.sv* %14, i64 0, i32 0
  %15 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_pv = bitcast i8* %15 to i8**
  %16 = load i8** %xpv_pv, align 8, !tbaa !0
  %call60 = call fastcc %struct.sv* @retrieve(%struct.stcxt* %cxt, i8* %16) #6
  br label %return

return:                                           ; preds = %if.else43, %if.then16, %if.else5, %if.then, %if.end59
  %retval.0 = phi %struct.sv* [ %call60, %if.end59 ], [ null, %if.then ], [ null, %if.else5 ], [ null, %if.then16 ], [ null, %if.else43 ]
  ret %struct.sv* %retval.0
}
