define internal fastcc i32 @known_class(%struct.stcxt* nocapture %cxt, i8* %name, i32 %len, i32* nocapture %classnum) #1 {
entry:
  %hclass1 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 6
  %0 = load %struct.hv** %hclass1, align 8, !tbaa !0
  %call = tail call %struct.sv** @Perl_hv_fetch(%struct.hv* %0, i8* %name, i32 %len, i32 0) #7
  %tobool = icmp eq %struct.sv** %call, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct.sv** %call, align 8, !tbaa !0
  %2 = ptrtoint %struct.sv* %1 to i64
  %and = and i64 %2, 4294967295
  br label %return

if.end:                                           ; preds = %entry
  %classnum2 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 10
  %3 = load i64* %classnum2, align 8, !tbaa !4
  %inc = add nsw i64 %3, 1
  store i64 %inc, i64* %classnum2, align 8, !tbaa !4
  %4 = inttoptr i64 %inc to %struct.sv*
  %call4 = tail call %struct.sv** @Perl_hv_store(%struct.hv* %0, i8* %name, i32 %len, %struct.sv* %4, i32 0) #7
  %tobool5 = icmp eq %struct.sv** %call4, null
  br i1 %tobool5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end
  %s_dirty = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 18
  store i32 1, i32* %s_dirty, align 4, !tbaa !3
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([31 x i8]* @.str83, i64 0, i64 0)) #7
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then6
  %5 = load i64* %classnum2, align 8, !tbaa !4
  br label %return

return:                                           ; preds = %if.end7, %if.then
  %storemerge.in = phi i64 [ %5, %if.end7 ], [ %and, %if.then ]
  %retval.0 = phi i32 [ 0, %if.end7 ], [ 1, %if.then ]
  %storemerge = trunc i64 %storemerge.in to i32
  store i32 %storemerge, i32* %classnum, align 4, !tbaa !3
  ret i32 %retval.0
}
