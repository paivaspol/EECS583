define %struct.sv* @dclone(%struct.sv* %sv) #1 {
entry:
  %0 = load %struct.stcxt** @Context_ptr, align 8, !tbaa !0
  %s_dirty = getelementptr inbounds %struct.stcxt* %0, i64 0, i32 18
  %1 = load i32* %s_dirty, align 4, !tbaa !3
  %tobool = icmp eq i32 %1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call fastcc void @clean_context(%struct.stcxt* %0) #6
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %call = tail call fastcc i32 @do_store(%struct._PerlIO** null, %struct.sv* %sv, i32 4, i32 0, %struct.sv** null) #6
  %tobool1 = icmp eq i32 %call, 0
  br i1 %tobool1, label %return, label %if.end3

if.end3:                                          ; preds = %if.end
  %2 = load %struct.stcxt** @Context_ptr, align 8, !tbaa !0
  %aptr = getelementptr inbounds %struct.stcxt* %2, i64 0, i32 21, i32 2
  %3 = load i8** %aptr, align 8, !tbaa !0
  %arena = getelementptr inbounds %struct.stcxt* %2, i64 0, i32 21, i32 0
  %4 = load i8** %arena, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  %tobool8 = icmp eq i8* %4, null
  br i1 %tobool8, label %if.then9, label %if.end14

if.then9:                                         ; preds = %if.end3
  %call10 = tail call i8* @Perl_safesysmalloc(i64 8192) #7
  store i8* %call10, i8** %arena, align 8, !tbaa !0
  %asiz = getelementptr inbounds %struct.stcxt* %2, i64 0, i32 21, i32 1
  store i64 8192, i64* %asiz, align 8, !tbaa !4
  br label %if.end14

if.end14:                                         ; preds = %if.end3, %if.then9
  %5 = phi i8* [ %4, %if.end3 ], [ %call10, %if.then9 ]
  store i8* %5, i8** %aptr, align 8, !tbaa !0
  %tobool19 = icmp eq i32 %conv, 0
  br i1 %tobool19, label %if.else, label %if.then20

if.then20:                                        ; preds = %if.end14
  %sext = shl i64 %sub.ptr.sub, 32
  %idx.ext = ashr exact i64 %sext, 32
  %add.ptr = getelementptr inbounds i8* %5, i64 %idx.ext
  %aend = getelementptr inbounds %struct.stcxt* %2, i64 0, i32 21, i32 3
  store i8* %add.ptr, i8** %aend, align 8, !tbaa !0
  br label %if.end31

if.else:                                          ; preds = %if.end14
  %asiz27 = getelementptr inbounds %struct.stcxt* %2, i64 0, i32 21, i32 1
  %6 = load i64* %asiz27, align 8, !tbaa !4
  %add.ptr28 = getelementptr inbounds i8* %5, i64 %6
  %aend30 = getelementptr inbounds %struct.stcxt* %2, i64 0, i32 21, i32 3
  store i8* %add.ptr28, i8** %aend30, align 8, !tbaa !0
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then20
  %sv_flags = getelementptr inbounds %struct.sv* %sv, i64 0, i32 2
  %7 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %7, 57344
  %tobool32 = icmp eq i32 %and, 0
  br i1 %tobool32, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end31
  %call33 = tail call signext i8 @Perl_sv_tainted(%struct.sv* %sv) #7
  %tobool35 = icmp ne i8 %call33, 0
  br label %land.end

land.end:                                         ; preds = %if.end31, %land.rhs
  %8 = phi i1 [ false, %if.end31 ], [ %tobool35, %land.rhs ]
  %land.ext = zext i1 %8 to i32
  %s_tainted = getelementptr inbounds %struct.stcxt* %2, i64 0, i32 12
  store i32 %land.ext, i32* %s_tainted, align 4, !tbaa !3
  %call36 = tail call fastcc %struct.sv* @do_retrieve(%struct._PerlIO** null, %struct.sv* null, i32 4) #6
  br label %return

return:                                           ; preds = %if.end, %land.end
  %retval.0 = phi %struct.sv* [ %call36, %land.end ], [ @PL_sv_undef, %if.end ]
  ret %struct.sv* %retval.0
}
