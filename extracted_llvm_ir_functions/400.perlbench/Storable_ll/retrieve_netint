define internal %struct.sv* @retrieve_netint(%struct.stcxt* nocapture %cxt, i8* %cname) #1 {
entry:
  %iv = alloca i32, align 4
  %fio = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 23
  %0 = load %struct._PerlIO*** %fio, align 8, !tbaa !0
  %tobool = icmp eq %struct._PerlIO** %0, null
  br i1 %tobool, label %if.then, label %if.else18

if.then:                                          ; preds = %entry
  %aptr = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 2
  %1 = load i8** %aptr, align 8, !tbaa !0
  %add.ptr = getelementptr inbounds i8* %1, i64 4
  %aend = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 3
  %2 = load i8** %aend, align 8, !tbaa !0
  %cmp = icmp ugt i8* %add.ptr, %2
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %if.then
  %storemerge.in = bitcast i8* %1 to i32*
  %storemerge = load i32* %storemerge.in, align 1
  store i32 %storemerge, i32* %iv, align 4
  store i8* %add.ptr, i8** %aptr, align 8, !tbaa !0
  br label %if.end23

if.else18:                                        ; preds = %entry
  %3 = bitcast i32* %iv to i8*
  %call = call i64 @Perl_PerlIO_read(%struct._PerlIO** %0, i8* %3, i64 4) #7
  %cmp20 = icmp eq i64 %call, 4
  br i1 %cmp20, label %if.else18.if.end23_crit_edge, label %return

if.else18.if.end23_crit_edge:                     ; preds = %if.else18
  %.pre = load i32* %iv, align 4, !tbaa !3
  br label %if.end23

if.end23:                                         ; preds = %if.else18.if.end23_crit_edge, %if.end
  %4 = phi i32 [ %.pre, %if.else18.if.end23_crit_edge ], [ %storemerge, %if.end ]
  %5 = call i32 asm "bswap $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %4) #3, !srcloc !13
  %conv = sext i32 %5 to i64
  %call24 = call %struct.sv* @Perl_newSViv(i64 %conv) #7
  %tobool25 = icmp eq %struct.sv* %call24, null
  br i1 %tobool25, label %return, label %if.end27

if.end27:                                         ; preds = %if.end23
  %aseen = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 4
  %6 = load %struct.av** %aseen, align 8, !tbaa !0
  %tagnum = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 9
  %7 = load i64* %tagnum, align 8, !tbaa !4
  %inc = add nsw i64 %7, 1
  store i64 %inc, i64* %tagnum, align 8, !tbaa !4
  %conv28 = trunc i64 %7 to i32
  store %struct.sv* %call24, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %sv_refcnt = getelementptr inbounds %struct.sv* %call24, i64 0, i32 1
  %8 = load i32* %sv_refcnt, align 4, !tbaa !3
  %inc30 = add i32 %8, 1
  store i32 %inc30, i32* %sv_refcnt, align 4, !tbaa !3
  %call32 = call %struct.sv** @Perl_av_store(%struct.av* %6, i32 %conv28, %struct.sv* %call24) #7
  %cmp33 = icmp eq %struct.sv** %call32, null
  br i1 %cmp33, label %return, label %if.end36

if.end36:                                         ; preds = %if.end27
  %tobool37 = icmp eq i8* %cname, null
  br i1 %tobool37, label %return, label %if.then38

if.then38:                                        ; preds = %if.end36
  %call39 = call %struct.hv* @Perl_gv_stashpv(i8* %cname, i32 1) #7
  %call40 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %call24) #7
  %call41 = call %struct.sv* @Perl_sv_bless(%struct.sv* %call40, %struct.hv* %call39) #7
  %sv_any = getelementptr inbounds %struct.sv* %call40, i64 0, i32 0
  %9 = load i8** %sv_any, align 8, !tbaa !0
  %xrv_rv = bitcast i8* %9 to %struct.sv**
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8, !tbaa !0
  call void @Perl_sv_free(%struct.sv* %call40) #7
  br label %return

return:                                           ; preds = %if.end23, %if.then38, %if.end36, %if.end27, %if.else18, %if.then
  %retval.0 = phi %struct.sv* [ null, %if.then ], [ null, %if.else18 ], [ null, %if.end23 ], [ null, %if.end27 ], [ %call24, %if.end36 ], [ %call24, %if.then38 ]
  ret %struct.sv* %retval.0
}
