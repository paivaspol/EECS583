define internal %struct.sv* @retrieve_hook(%struct.stcxt* %cxt, i8* nocapture %cname) #1 {
entry:
  %len = alloca i32, align 4
  %buf = alloca [128 x i8], align 16
  %len2 = alloca i32, align 4
  %len3 = alloca i32, align 4
  %idx = alloca i32, align 4
  %tag = alloca i32, align 4
  %xsv = alloca %struct.sv*, align 8
  %0 = getelementptr inbounds [128 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 128, i8* %0) #3
  store i32 0, i32* %len3, align 4, !tbaa !3
  %optype = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 1
  %1 = load i32* %optype, align 4, !tbaa !3
  %and = and i32 %1, 4
  %fio = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 23
  %2 = load %struct._PerlIO*** %fio, align 8, !tbaa !0
  %tobool = icmp eq %struct._PerlIO** %2, null
  br i1 %tobool, label %if.then, label %if.else5

if.then:                                          ; preds = %entry
  %aptr = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 2
  %3 = load i8** %aptr, align 8, !tbaa !0
  %aend = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 3
  %4 = load i8** %aend, align 8, !tbaa !0
  %cmp = icmp ult i8* %3, %4
  br i1 %cmp, label %if.then2, label %cleanup

if.then2:                                         ; preds = %if.then
  %incdec.ptr = getelementptr inbounds i8* %3, i64 1
  store i8* %incdec.ptr, i8** %aptr, align 8, !tbaa !0
  %5 = load i8* %3, align 1, !tbaa !1
  %conv = zext i8 %5 to i32
  br label %if.end11

if.else5:                                         ; preds = %entry
  %call = call i32 @PerlIO_getc(%struct._PerlIO** %2) #7
  %cmp7 = icmp eq i32 %call, -1
  br i1 %cmp7, label %cleanup, label %if.end11

if.end11:                                         ; preds = %if.else5, %if.then2
  %flags.0 = phi i32 [ %call, %if.else5 ], [ %conv, %if.then2 ]
  %and12 = and i32 %flags.0, 3
  switch i32 %and12, label %sw.default50 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb14
    i32 2, label %sw.bb16
    i32 3, label %sw.bb18
  ]

sw.bb:                                            ; preds = %if.end11
  %call13 = call %struct.sv* @Perl_newSV(i64 0) #7
  br label %sw.epilog52

sw.bb14:                                          ; preds = %if.end11
  %call15 = call %struct.av* @Perl_newAV() #7
  %6 = bitcast %struct.av* %call15 to %struct.sv*
  br label %sw.epilog52

sw.bb16:                                          ; preds = %if.end11
  %call17 = call %struct.hv* @Perl_newHV() #7
  %7 = bitcast %struct.hv* %call17 to %struct.sv*
  br label %sw.epilog52

sw.bb18:                                          ; preds = %if.end11
  %8 = load %struct._PerlIO*** %fio, align 8, !tbaa !0
  %tobool20 = icmp eq %struct._PerlIO** %8, null
  br i1 %tobool20, label %if.then21, label %if.else35

if.then21:                                        ; preds = %sw.bb18
  %aptr23 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 2
  %9 = load i8** %aptr23, align 8, !tbaa !0
  %aend25 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 3
  %10 = load i8** %aend25, align 8, !tbaa !0
  %cmp26 = icmp ult i8* %9, %10
  br i1 %cmp26, label %if.then28, label %cleanup

if.then28:                                        ; preds = %if.then21
  %incdec.ptr31 = getelementptr inbounds i8* %9, i64 1
  store i8* %incdec.ptr31, i8** %aptr23, align 8, !tbaa !0
  %11 = load i8* %9, align 1, !tbaa !1
  %conv32 = zext i8 %11 to i32
  br label %if.end42

if.else35:                                        ; preds = %sw.bb18
  %call37 = call i32 @PerlIO_getc(%struct._PerlIO** %8) #7
  %cmp38 = icmp eq i32 %call37, -1
  br i1 %cmp38, label %cleanup, label %if.end42

if.end42:                                         ; preds = %if.else35, %if.then28
  %extra_type.0 = phi i32 [ %call37, %if.else35 ], [ %conv32, %if.then28 ]
  switch i32 %extra_type.0, label %sw.default [
    i32 4, label %sw.bb43
    i32 5, label %sw.bb45
    i32 6, label %sw.bb47
  ]

sw.bb43:                                          ; preds = %if.end42
  %call44 = call %struct.sv* @Perl_newSV(i64 0) #7
  br label %sw.epilog52

sw.bb45:                                          ; preds = %if.end42
  %call46 = call %struct.av* @Perl_newAV() #7
  %12 = bitcast %struct.av* %call46 to %struct.sv*
  br label %sw.epilog52

sw.bb47:                                          ; preds = %if.end42
  %call48 = call %struct.hv* @Perl_newHV() #7
  %13 = bitcast %struct.hv* %call48 to %struct.sv*
  br label %sw.epilog52

sw.default:                                       ; preds = %if.end42
  %call49 = call %struct.sv* @retrieve_other(%struct.stcxt* %cxt, i8* null) #6
  br label %cleanup

sw.default50:                                     ; preds = %if.end11
  %call51 = call %struct.sv* @retrieve_other(%struct.stcxt* %cxt, i8* null) #6
  br label %cleanup

sw.epilog52:                                      ; preds = %sw.bb43, %sw.bb45, %sw.bb47, %sw.bb16, %sw.bb14, %sw.bb
  %extra_type.1 = phi i32 [ 6, %sw.bb47 ], [ 5, %sw.bb45 ], [ 4, %sw.bb43 ], [ 0, %sw.bb16 ], [ 0, %sw.bb14 ], [ 0, %sw.bb ]
  %mtype.0 = phi i32 [ 80, %sw.bb47 ], [ 80, %sw.bb45 ], [ 113, %sw.bb43 ], [ 0, %sw.bb16 ], [ 0, %sw.bb14 ], [ 0, %sw.bb ]
  %sv.0 = phi %struct.sv* [ %13, %sw.bb47 ], [ %12, %sw.bb45 ], [ %call44, %sw.bb43 ], [ %7, %sw.bb16 ], [ %6, %sw.bb14 ], [ %call13, %sw.bb ]
  %tobool53 = icmp eq %struct.sv* %sv.0, null
  br i1 %tobool53, label %cleanup, label %if.end55

if.end55:                                         ; preds = %sw.epilog52
  %aseen = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 4
  %14 = load %struct.av** %aseen, align 8, !tbaa !0
  %tagnum = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 9
  %15 = load i64* %tagnum, align 8, !tbaa !4
  %inc = add nsw i64 %15, 1
  store i64 %inc, i64* %tagnum, align 8, !tbaa !4
  %conv56 = trunc i64 %15 to i32
  store %struct.sv* %sv.0, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %sv_refcnt = getelementptr inbounds %struct.sv* %sv.0, i64 0, i32 1
  %16 = load i32* %sv_refcnt, align 4, !tbaa !3
  %inc58 = add i32 %16, 1
  store i32 %inc58, i32* %sv_refcnt, align 4, !tbaa !3
  %call60 = call %struct.sv** @Perl_av_store(%struct.av* %14, i32 %conv56, %struct.sv* %sv.0) #7
  %cmp61 = icmp eq %struct.sv** %call60, null
  br i1 %cmp61, label %cleanup, label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.end55
  %and65822 = and i32 %flags.0, 64
  %tobool66823 = icmp eq i32 %and65822, 0
  br i1 %tobool66823, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %aptr75 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 2
  %aend77 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 3
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.cond.backedge
  %call67 = call fastcc %struct.sv* @retrieve(%struct.stcxt* %cxt, i8* null) #6
  %tobool68 = icmp eq %struct.sv* %call67, null
  br i1 %tobool68, label %cleanup, label %if.end70

if.end70:                                         ; preds = %while.body
  call void @Perl_sv_free(%struct.sv* %call67) #7
  %17 = load %struct._PerlIO*** %fio, align 8, !tbaa !0
  %tobool72 = icmp eq %struct._PerlIO** %17, null
  br i1 %tobool72, label %if.then73, label %if.else87

if.then73:                                        ; preds = %if.end70
  %18 = load i8** %aptr75, align 8, !tbaa !0
  %19 = load i8** %aend77, align 8, !tbaa !0
  %cmp78 = icmp ult i8* %18, %19
  br i1 %cmp78, label %if.then80, label %cleanup

if.then80:                                        ; preds = %if.then73
  %incdec.ptr83 = getelementptr inbounds i8* %18, i64 1
  store i8* %incdec.ptr83, i8** %aptr75, align 8, !tbaa !0
  %20 = load i8* %18, align 1, !tbaa !1
  %conv84 = zext i8 %20 to i32
  br label %while.cond.backedge

if.else87:                                        ; preds = %if.end70
  %call89 = call i32 @PerlIO_getc(%struct._PerlIO** %17) #7
  %cmp90 = icmp eq i32 %call89, -1
  br i1 %cmp90, label %cleanup, label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.else87, %if.then80
  %flags.1.be = phi i32 [ %call89, %if.else87 ], [ %conv84, %if.then80 ]
  %and65 = and i32 %flags.1.be, 64
  %tobool66 = icmp eq i32 %and65, 0
  br i1 %tobool66, label %while.end, label %while.body

while.end:                                        ; preds = %while.cond.backedge, %while.cond.preheader
  %flags.1.lcssa = phi i32 [ %flags.0, %while.cond.preheader ], [ %flags.1.be, %while.cond.backedge ]
  %and95 = and i32 %flags.1.lcssa, 32
  %tobool96 = icmp ne i32 %and95, 0
  %and98 = and i32 %flags.1.lcssa, 4
  %tobool99 = icmp ne i32 %and98, 0
  %21 = load %struct._PerlIO*** %fio, align 8, !tbaa !0
  %tobool102 = icmp ne %struct._PerlIO** %21, null
  br i1 %tobool96, label %if.then97, label %if.else172

if.then97:                                        ; preds = %while.end
  br i1 %tobool99, label %if.then100, label %if.else141

if.then100:                                       ; preds = %if.then97
  br i1 %tobool102, label %if.else130, label %if.then103

if.then103:                                       ; preds = %if.then100
  %aptr105 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 2
  %22 = load i8** %aptr105, align 8, !tbaa !0
  %add.ptr = getelementptr inbounds i8* %22, i64 4
  %aend107 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 3
  %23 = load i8** %aend107, align 8, !tbaa !0
  %cmp108 = icmp ugt i8* %add.ptr, %23
  br i1 %cmp108, label %cleanup, label %if.end124

if.end124:                                        ; preds = %if.then103
  %storemerge808.in = bitcast i8* %22 to i32*
  %storemerge808 = load i32* %storemerge808.in, align 1
  store i32 %storemerge808, i32* %idx, align 4
  store i8* %add.ptr, i8** %aptr105, align 8, !tbaa !0
  br label %if.end137

if.else130:                                       ; preds = %if.then100
  %24 = bitcast i32* %idx to i8*
  %call132 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %21, i8* %24, i64 4) #7
  %cmp133 = icmp eq i64 %call132, 4
  br i1 %cmp133, label %if.end137, label %cleanup

if.end137:                                        ; preds = %if.else130, %if.end124
  %netorder = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 11
  %25 = load i32* %netorder, align 4, !tbaa !3
  %tobool138 = icmp eq i32 %25, 0
  %.pre = load i32* %idx, align 4, !tbaa !3
  br i1 %tobool138, label %if.end166, label %if.then139

if.then139:                                       ; preds = %if.end137
  %26 = call i32 asm "bswap $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %.pre) #3, !srcloc !19
  store i32 %26, i32* %idx, align 4, !tbaa !3
  br label %if.end166

if.else141:                                       ; preds = %if.then97
  br i1 %tobool102, label %if.else158, label %if.then144

if.then144:                                       ; preds = %if.else141
  %aptr146 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 2
  %27 = load i8** %aptr146, align 8, !tbaa !0
  %aend148 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 3
  %28 = load i8** %aend148, align 8, !tbaa !0
  %cmp149 = icmp ult i8* %27, %28
  br i1 %cmp149, label %if.then151, label %cleanup

if.then151:                                       ; preds = %if.then144
  %incdec.ptr154 = getelementptr inbounds i8* %27, i64 1
  store i8* %incdec.ptr154, i8** %aptr146, align 8, !tbaa !0
  %29 = load i8* %27, align 1, !tbaa !1
  %conv155 = zext i8 %29 to i32
  store i32 %conv155, i32* %idx, align 4, !tbaa !3
  br label %if.end166

if.else158:                                       ; preds = %if.else141
  %call160 = call i32 @PerlIO_getc(%struct._PerlIO** %21) #7
  store i32 %call160, i32* %idx, align 4, !tbaa !3
  %cmp161 = icmp eq i32 %call160, -1
  br i1 %cmp161, label %cleanup, label %if.end166

if.end166:                                        ; preds = %if.end137, %if.then151, %if.else158, %if.then139
  %30 = phi i32 [ %conv155, %if.then151 ], [ %call160, %if.else158 ], [ %26, %if.then139 ], [ %.pre, %if.end137 ]
  %aclass = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 7
  %31 = load %struct.av** %aclass, align 8, !tbaa !0
  %call167 = call %struct.sv** @Perl_av_fetch(%struct.av* %31, i32 %30, i32 0) #7
  %tobool168 = icmp eq %struct.sv** %call167, null
  br i1 %tobool168, label %if.then169, label %if.end171

if.then169:                                       ; preds = %if.end166
  %s_dirty = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 18
  store i32 1, i32* %s_dirty, align 4, !tbaa !3
  %32 = load i32* %idx, align 4, !tbaa !3
  %conv170 = sext i32 %32 to i64
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([46 x i8]* @.str60, i64 0, i64 0), i64 %conv170) #7
  br label %if.end171

if.end171:                                        ; preds = %if.end166, %if.then169
  %33 = load %struct.sv** %call167, align 8, !tbaa !0
  %sv_any = getelementptr inbounds %struct.sv* %33, i64 0, i32 0
  %34 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_pv = bitcast i8* %34 to i8**
  %35 = load i8** %xpv_pv, align 8, !tbaa !0
  br label %if.end291

if.else172:                                       ; preds = %while.end
  br i1 %tobool99, label %if.then175, label %if.else220

if.then175:                                       ; preds = %if.else172
  br i1 %tobool102, label %if.else206, label %if.then178

if.then178:                                       ; preds = %if.then175
  %aptr180 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 2
  %36 = load i8** %aptr180, align 8, !tbaa !0
  %add.ptr181 = getelementptr inbounds i8* %36, i64 4
  %aend183 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 3
  %37 = load i8** %aend183, align 8, !tbaa !0
  %cmp184 = icmp ugt i8* %add.ptr181, %37
  br i1 %cmp184, label %cleanup, label %if.end200

if.end200:                                        ; preds = %if.then178
  %storemerge807.in = bitcast i8* %36 to i32*
  %storemerge807 = load i32* %storemerge807.in, align 1
  store i32 %storemerge807, i32* %len, align 4
  store i8* %add.ptr181, i8** %aptr180, align 8, !tbaa !0
  br label %if.end213

if.else206:                                       ; preds = %if.then175
  %38 = bitcast i32* %len to i8*
  %call208 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %21, i8* %38, i64 4) #7
  %cmp209 = icmp eq i64 %call208, 4
  br i1 %cmp209, label %if.else206.if.end213_crit_edge, label %cleanup

if.else206.if.end213_crit_edge:                   ; preds = %if.else206
  %.pr.pre = load i32* %len, align 4, !tbaa !3
  br label %if.end213

if.end213:                                        ; preds = %if.else206.if.end213_crit_edge, %if.end200
  %.pr = phi i32 [ %.pr.pre, %if.else206.if.end213_crit_edge ], [ %storemerge807, %if.end200 ]
  %netorder214 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 11
  %39 = load i32* %netorder214, align 4, !tbaa !3
  %tobool215 = icmp eq i32 %39, 0
  br i1 %tobool215, label %if.end245, label %if.then216

if.then216:                                       ; preds = %if.end213
  %40 = call i32 asm "bswap $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %.pr) #3, !srcloc !20
  store i32 %40, i32* %len, align 4, !tbaa !3
  br label %if.end245

if.else220:                                       ; preds = %if.else172
  br i1 %tobool102, label %if.else237, label %if.then223

if.then223:                                       ; preds = %if.else220
  %aptr225 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 2
  %41 = load i8** %aptr225, align 8, !tbaa !0
  %aend227 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 3
  %42 = load i8** %aend227, align 8, !tbaa !0
  %cmp228 = icmp ult i8* %41, %42
  br i1 %cmp228, label %if.then230, label %cleanup

if.then230:                                       ; preds = %if.then223
  %incdec.ptr233 = getelementptr inbounds i8* %41, i64 1
  store i8* %incdec.ptr233, i8** %aptr225, align 8, !tbaa !0
  %43 = load i8* %41, align 1, !tbaa !1
  %conv234 = zext i8 %43 to i32
  store i32 %conv234, i32* %len, align 4, !tbaa !3
  br label %if.end245

if.else237:                                       ; preds = %if.else220
  %call239 = call i32 @PerlIO_getc(%struct._PerlIO** %21) #7
  store i32 %call239, i32* %len, align 4, !tbaa !3
  %cmp240 = icmp eq i32 %call239, -1
  br i1 %cmp240, label %cleanup, label %if.end245

if.end245:                                        ; preds = %if.end213, %if.then230, %if.else237, %if.then216
  %44 = phi i32 [ %conv234, %if.then230 ], [ %call239, %if.else237 ], [ %40, %if.then216 ], [ %.pr, %if.end213 ]
  %cmp246 = icmp sgt i32 %44, 127
  br i1 %cmp246, label %if.then248, label %if.end251

if.then248:                                       ; preds = %if.end245
  %add = add nsw i32 %44, 1
  %conv249 = sext i32 %add to i64
  %call250 = call i8* @Perl_safesysmalloc(i64 %conv249) #7
  br label %if.end251

if.end251:                                        ; preds = %if.end245, %if.then248
  %class.0 = phi i8* [ %call250, %if.then248 ], [ %0, %if.end245 ]
  %45 = load %struct._PerlIO*** %fio, align 8, !tbaa !0
  %tobool253 = icmp eq %struct._PerlIO** %45, null
  br i1 %tobool253, label %if.then254, label %if.else272

if.then254:                                       ; preds = %if.end251
  %aptr256 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 2
  %46 = load i8** %aptr256, align 8, !tbaa !0
  %47 = load i32* %len, align 4, !tbaa !3
  %idx.ext = sext i32 %47 to i64
  %add.ptr257 = getelementptr inbounds i8* %46, i64 %idx.ext
  %aend259 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 3
  %48 = load i8** %aend259, align 8, !tbaa !0
  %cmp260 = icmp ugt i8* %add.ptr257, %48
  br i1 %cmp260, label %cleanup, label %if.then262

if.then262:                                       ; preds = %if.then254
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %class.0, i8* %46, i64 %idx.ext, i32 1, i1 false)
  %49 = load i32* %len, align 4, !tbaa !3
  %50 = load i8** %aptr256, align 8, !tbaa !0
  %idx.ext268 = sext i32 %49 to i64
  %add.ptr269 = getelementptr inbounds i8* %50, i64 %idx.ext268
  store i8* %add.ptr269, i8** %aptr256, align 8, !tbaa !0
  br label %if.end281

if.else272:                                       ; preds = %if.end251
  %51 = load i32* %len, align 4, !tbaa !3
  %conv274 = sext i32 %51 to i64
  %call275 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %45, i8* %class.0, i64 %conv274) #7
  %52 = load i32* %len, align 4, !tbaa !3
  %conv276 = sext i32 %52 to i64
  %cmp277 = icmp eq i64 %call275, %conv276
  br i1 %cmp277, label %if.end281, label %cleanup

if.end281:                                        ; preds = %if.else272, %if.then262
  %53 = phi i32 [ %52, %if.else272 ], [ %49, %if.then262 ]
  %idxprom = sext i32 %53 to i64
  %arrayidx = getelementptr inbounds i8* %class.0, i64 %idxprom
  store i8 0, i8* %arrayidx, align 1, !tbaa !1
  %aclass282 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 7
  %54 = load %struct.av** %aclass282, align 8, !tbaa !0
  %classnum = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 10
  %55 = load i64* %classnum, align 8, !tbaa !4
  %inc283 = add nsw i64 %55, 1
  store i64 %inc283, i64* %classnum, align 8, !tbaa !4
  %conv284 = trunc i64 %55 to i32
  %56 = load i32* %len, align 4, !tbaa !3
  %conv285 = sext i32 %56 to i64
  %call286 = call %struct.sv* @Perl_newSVpvn(i8* %class.0, i64 %conv285) #7
  %call287 = call %struct.sv** @Perl_av_store(%struct.av* %54, i32 %conv284, %struct.sv* %call286) #7
  %tobool288 = icmp eq %struct.sv** %call287, null
  br i1 %tobool288, label %cleanup, label %if.end291

if.end291:                                        ; preds = %if.end281, %if.end171
  %class.1 = phi i8* [ %35, %if.end171 ], [ %class.0, %if.end281 ]
  %and292 = and i32 %flags.1.lcssa, 8
  %tobool293 = icmp eq i32 %and292, 0
  %57 = load %struct._PerlIO*** %fio, align 8, !tbaa !0
  %tobool296 = icmp ne %struct._PerlIO** %57, null
  br i1 %tobool293, label %if.else339, label %if.then294

if.then294:                                       ; preds = %if.end291
  br i1 %tobool296, label %if.else325, label %if.then297

if.then297:                                       ; preds = %if.then294
  %aptr299 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 2
  %58 = load i8** %aptr299, align 8, !tbaa !0
  %add.ptr300 = getelementptr inbounds i8* %58, i64 4
  %aend302 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 3
  %59 = load i8** %aend302, align 8, !tbaa !0
  %cmp303 = icmp ugt i8* %add.ptr300, %59
  br i1 %cmp303, label %cleanup, label %if.end319

if.end319:                                        ; preds = %if.then297
  %storemerge806.in = bitcast i8* %58 to i32*
  %storemerge806 = load i32* %storemerge806.in, align 1
  store i32 %storemerge806, i32* %len2, align 4
  store i8* %add.ptr300, i8** %aptr299, align 8, !tbaa !0
  br label %if.end332

if.else325:                                       ; preds = %if.then294
  %60 = bitcast i32* %len2 to i8*
  %call327 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %57, i8* %60, i64 4) #7
  %cmp328 = icmp eq i64 %call327, 4
  br i1 %cmp328, label %if.end332, label %cleanup

if.end332:                                        ; preds = %if.else325, %if.end319
  %netorder333 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 11
  %61 = load i32* %netorder333, align 4, !tbaa !3
  %tobool334 = icmp eq i32 %61, 0
  %.pre824 = load i32* %len2, align 4, !tbaa !3
  br i1 %tobool334, label %if.end364, label %if.then335

if.then335:                                       ; preds = %if.end332
  %62 = call i32 asm "bswap $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %.pre824) #3, !srcloc !21
  store i32 %62, i32* %len2, align 4, !tbaa !3
  br label %if.end364

if.else339:                                       ; preds = %if.end291
  br i1 %tobool296, label %if.else356, label %if.then342

if.then342:                                       ; preds = %if.else339
  %aptr344 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 2
  %63 = load i8** %aptr344, align 8, !tbaa !0
  %aend346 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 3
  %64 = load i8** %aend346, align 8, !tbaa !0
  %cmp347 = icmp ult i8* %63, %64
  br i1 %cmp347, label %if.then349, label %cleanup

if.then349:                                       ; preds = %if.then342
  %incdec.ptr352 = getelementptr inbounds i8* %63, i64 1
  store i8* %incdec.ptr352, i8** %aptr344, align 8, !tbaa !0
  %65 = load i8* %63, align 1, !tbaa !1
  %conv353 = zext i8 %65 to i32
  store i32 %conv353, i32* %len2, align 4, !tbaa !3
  br label %if.end364

if.else356:                                       ; preds = %if.else339
  %call358 = call i32 @PerlIO_getc(%struct._PerlIO** %57) #7
  store i32 %call358, i32* %len2, align 4, !tbaa !3
  %cmp359 = icmp eq i32 %call358, -1
  br i1 %cmp359, label %cleanup, label %if.end364

if.end364:                                        ; preds = %if.end332, %if.then349, %if.else356, %if.then335
  %66 = phi i32 [ %conv353, %if.then349 ], [ %call358, %if.else356 ], [ %62, %if.then335 ], [ %.pre824, %if.end332 ]
  %conv365 = sext i32 %66 to i64
  %call366 = call %struct.sv* @Perl_newSV(i64 %conv365) #7
  %67 = load i32* %len2, align 4, !tbaa !3
  %tobool367 = icmp eq i32 %67, 0
  br i1 %tobool367, label %if.end411, label %if.then368

if.then368:                                       ; preds = %if.end364
  %68 = load %struct._PerlIO*** %fio, align 8, !tbaa !0
  %tobool370 = icmp eq %struct._PerlIO** %68, null
  br i1 %tobool370, label %if.then371, label %if.else392

if.then371:                                       ; preds = %if.then368
  %aptr373 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 2
  %69 = load i8** %aptr373, align 8, !tbaa !0
  %idx.ext374 = sext i32 %67 to i64
  %add.ptr375 = getelementptr inbounds i8* %69, i64 %idx.ext374
  %aend377 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 3
  %70 = load i8** %aend377, align 8, !tbaa !0
  %cmp378 = icmp ugt i8* %add.ptr375, %70
  br i1 %cmp378, label %if.else390, label %if.then380

if.then380:                                       ; preds = %if.then371
  %sv_any381 = getelementptr inbounds %struct.sv* %call366, i64 0, i32 0
  %71 = load i8** %sv_any381, align 8, !tbaa !0
  %xpv_pv382 = bitcast i8* %71 to i8**
  %72 = load i8** %xpv_pv382, align 8, !tbaa !0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %69, i64 %idx.ext374, i32 1, i1 false)
  %73 = load i32* %len2, align 4, !tbaa !3
  %74 = load i8** %aptr373, align 8, !tbaa !0
  %idx.ext388 = sext i32 %73 to i64
  %add.ptr389 = getelementptr inbounds i8* %74, i64 %idx.ext388
  store i8* %add.ptr389, i8** %aptr373, align 8, !tbaa !0
  br label %if.end403

if.else390:                                       ; preds = %if.then371
  call void @Perl_sv_free(%struct.sv* %call366) #7
  br label %cleanup

if.else392:                                       ; preds = %if.then368
  %sv_any394 = getelementptr inbounds %struct.sv* %call366, i64 0, i32 0
  %75 = load i8** %sv_any394, align 8, !tbaa !0
  %xpv_pv395 = bitcast i8* %75 to i8**
  %76 = load i8** %xpv_pv395, align 8, !tbaa !0
  %conv396 = sext i32 %67 to i64
  %call397 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %68, i8* %76, i64 %conv396) #7
  %77 = load i32* %len2, align 4, !tbaa !3
  %conv398 = sext i32 %77 to i64
  %cmp399 = icmp eq i64 %call397, %conv398
  br i1 %cmp399, label %if.end403, label %if.then401

if.then401:                                       ; preds = %if.else392
  call void @Perl_sv_free(%struct.sv* %call366) #7
  br label %cleanup

if.end403:                                        ; preds = %if.else392, %if.then380
  %78 = phi i32 [ %77, %if.else392 ], [ %73, %if.then380 ]
  %conv404 = sext i32 %78 to i64
  %sv_any405 = getelementptr inbounds %struct.sv* %call366, i64 0, i32 0
  %79 = load i8** %sv_any405, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %79, i64 8
  %80 = bitcast i8* %xpv_cur to i64*
  store i64 %conv404, i64* %80, align 8, !tbaa !4
  %xpv_pv407 = bitcast i8* %79 to i8**
  %81 = load i8** %xpv_pv407, align 8, !tbaa !0
  %add.ptr410 = getelementptr inbounds i8* %81, i64 %conv404
  store i8 0, i8* %add.ptr410, align 1, !tbaa !1
  br label %if.end411

if.end411:                                        ; preds = %if.end364, %if.end403
  %sv_flags = getelementptr inbounds %struct.sv* %call366, i64 0, i32 2
  %82 = load i32* %sv_flags, align 4, !tbaa !3
  %and412 = and i32 %82, 1223753727
  %or = or i32 %and412, 67371008
  store i32 %or, i32* %sv_flags, align 4, !tbaa !3
  %s_tainted = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 12
  %83 = load i32* %s_tainted, align 4, !tbaa !3
  %tobool414 = icmp ne i32 %83, 0
  %84 = load i8* @PL_tainting, align 1, !tbaa !1
  %tobool416 = icmp ne i8 %84, 0
  %or.cond = and i1 %tobool414, %tobool416
  %85 = load i8* @PL_tainted, align 1, !tbaa !1
  %tobool418 = icmp ne i8 %85, 0
  %or.cond645 = and i1 %or.cond, %tobool418
  br i1 %or.cond645, label %if.then421, label %if.end425

if.then421:                                       ; preds = %if.end411
  call void @Perl_sv_taint(%struct.sv* %call366) #7
  br label %if.end425

if.end425:                                        ; preds = %if.then421, %if.end411
  %and426 = and i32 %flags.1.lcssa, 128
  %tobool427 = icmp eq i32 %and426, 0
  br i1 %tobool427, label %if.end578, label %if.then428

if.then428:                                       ; preds = %if.end425
  %and429 = and i32 %flags.1.lcssa, 16
  %tobool430 = icmp eq i32 %and429, 0
  %86 = load %struct._PerlIO*** %fio, align 8, !tbaa !0
  %tobool433 = icmp ne %struct._PerlIO** %86, null
  br i1 %tobool430, label %if.else476, label %if.then431

if.then431:                                       ; preds = %if.then428
  br i1 %tobool433, label %if.else462, label %if.then434

if.then434:                                       ; preds = %if.then431
  %aptr436 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 2
  %87 = load i8** %aptr436, align 8, !tbaa !0
  %add.ptr437 = getelementptr inbounds i8* %87, i64 4
  %aend439 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 3
  %88 = load i8** %aend439, align 8, !tbaa !0
  %cmp440 = icmp ugt i8* %add.ptr437, %88
  br i1 %cmp440, label %cleanup, label %if.end456

if.end456:                                        ; preds = %if.then434
  %storemerge805.in = bitcast i8* %87 to i32*
  %storemerge805 = load i32* %storemerge805.in, align 1
  store i32 %storemerge805, i32* %len3, align 4
  store i8* %add.ptr437, i8** %aptr436, align 8, !tbaa !0
  br label %if.end469

if.else462:                                       ; preds = %if.then431
  %89 = bitcast i32* %len3 to i8*
  %call464 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %86, i8* %89, i64 4) #7
  %cmp465 = icmp eq i64 %call464, 4
  br i1 %cmp465, label %if.else462.if.end469_crit_edge, label %cleanup

if.else462.if.end469_crit_edge:                   ; preds = %if.else462
  %.pr813.pre = load i32* %len3, align 4, !tbaa !3
  br label %if.end469

if.end469:                                        ; preds = %if.else462.if.end469_crit_edge, %if.end456
  %.pr813 = phi i32 [ %.pr813.pre, %if.else462.if.end469_crit_edge ], [ %storemerge805, %if.end456 ]
  %netorder470 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 11
  %90 = load i32* %netorder470, align 4, !tbaa !3
  %tobool471 = icmp eq i32 %90, 0
  br i1 %tobool471, label %if.end501, label %if.then472

if.then472:                                       ; preds = %if.end469
  %91 = call i32 asm "bswap $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %.pr813) #3, !srcloc !22
  store i32 %91, i32* %len3, align 4, !tbaa !3
  br label %if.end501

if.else476:                                       ; preds = %if.then428
  br i1 %tobool433, label %if.else493, label %if.then479

if.then479:                                       ; preds = %if.else476
  %aptr481 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 2
  %92 = load i8** %aptr481, align 8, !tbaa !0
  %aend483 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 3
  %93 = load i8** %aend483, align 8, !tbaa !0
  %cmp484 = icmp ult i8* %92, %93
  br i1 %cmp484, label %if.then486, label %cleanup

if.then486:                                       ; preds = %if.then479
  %incdec.ptr489 = getelementptr inbounds i8* %92, i64 1
  store i8* %incdec.ptr489, i8** %aptr481, align 8, !tbaa !0
  %94 = load i8* %92, align 1, !tbaa !1
  %conv490 = zext i8 %94 to i32
  store i32 %conv490, i32* %len3, align 4, !tbaa !3
  br label %if.end501

if.else493:                                       ; preds = %if.else476
  %call495 = call i32 @PerlIO_getc(%struct._PerlIO** %86) #7
  store i32 %call495, i32* %len3, align 4, !tbaa !3
  %cmp496 = icmp eq i32 %call495, -1
  br i1 %cmp496, label %cleanup, label %if.end501

if.end501:                                        ; preds = %if.end469, %if.then486, %if.else493, %if.then472
  %95 = phi i32 [ %conv490, %if.then486 ], [ %call495, %if.else493 ], [ %91, %if.then472 ], [ %.pr813, %if.end469 ]
  %tobool502 = icmp eq i32 %95, 0
  br i1 %tobool502, label %if.end578, label %if.end509

if.end509:                                        ; preds = %if.end501
  %call504 = call %struct.av* @Perl_newAV() #7
  %96 = load i32* %len3, align 4, !tbaa !3
  %add505 = add nsw i32 %96, 1
  call void @Perl_av_extend(%struct.av* %call504, i32 %add505) #7
  %97 = load i32* %len3, align 4, !tbaa !3
  %conv506 = sext i32 %97 to i64
  %sv_any507 = getelementptr inbounds %struct.av* %call504, i64 0, i32 0
  %98 = load %struct.xpvav** %sv_any507, align 8, !tbaa !0
  %xav_fill = getelementptr inbounds %struct.xpvav* %98, i64 0, i32 1
  store i64 %conv506, i64* %xav_fill, align 8, !tbaa !4
  %tobool510 = icmp eq %struct.av* %call504, null
  br i1 %tobool510, label %if.end578, label %if.then511

if.then511:                                       ; preds = %if.end509
  %xav_array = getelementptr inbounds %struct.xpvav* %98, i64 0, i32 0
  %99 = load i8** %xav_array, align 8, !tbaa !0
  %100 = bitcast i8* %99 to %struct.sv**
  %cmp513818 = icmp slt i32 %97, 1
  br i1 %cmp513818, label %if.end578, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then511
  %aptr519 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 2
  %aend522 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 3
  %where_is_undef = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 5
  %s_dirty564 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 18
  %101 = bitcast i32* %tag to i8*
  br label %for.body

for.body:                                         ; preds = %land.end573, %for.body.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %land.end573 ], [ 1, %for.body.lr.ph ]
  %102 = load %struct._PerlIO*** %fio, align 8, !tbaa !0
  %tobool516 = icmp eq %struct._PerlIO** %102, null
  br i1 %tobool516, label %if.then517, label %if.else545

if.then517:                                       ; preds = %for.body
  %103 = load i8** %aptr519, align 8, !tbaa !0
  %add.ptr520 = getelementptr inbounds i8* %103, i64 4
  %104 = load i8** %aend522, align 8, !tbaa !0
  %cmp523 = icmp ugt i8* %add.ptr520, %104
  br i1 %cmp523, label %cleanup, label %if.end539

if.end539:                                        ; preds = %if.then517
  %storemerge.in = bitcast i8* %103 to i32*
  %storemerge = load i32* %storemerge.in, align 1
  store i32 %storemerge, i32* %tag, align 4
  store i8* %add.ptr520, i8** %aptr519, align 8, !tbaa !0
  br label %if.end552

if.else545:                                       ; preds = %for.body
  %call547 = call i64 @Perl_PerlIO_read(%struct._PerlIO** %102, i8* %101, i64 4) #7
  %cmp548 = icmp eq i64 %call547, 4
  br i1 %cmp548, label %if.else545.if.end552_crit_edge, label %cleanup

if.else545.if.end552_crit_edge:                   ; preds = %if.else545
  %.pre825 = load i32* %tag, align 4, !tbaa !3
  br label %if.end552

if.end552:                                        ; preds = %if.else545.if.end552_crit_edge, %if.end539
  %105 = phi i32 [ %.pre825, %if.else545.if.end552_crit_edge ], [ %storemerge, %if.end539 ]
  %106 = call i32 asm "bswap $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %105) #3, !srcloc !23
  store i32 %106, i32* %tag, align 4, !tbaa !3
  %107 = load %struct.av** %aseen, align 8, !tbaa !0
  %call556 = call %struct.sv** @Perl_av_fetch(%struct.av* %107, i32 %106, i32 0) #7
  %tobool557 = icmp eq %struct.sv** %call556, null
  br i1 %tobool557, label %if.then558, label %if.end567

if.then558:                                       ; preds = %if.end552
  %108 = load i32* %tag, align 4, !tbaa !3
  %conv559 = sext i32 %108 to i64
  %109 = load i64* %where_is_undef, align 8, !tbaa !4
  %cmp560 = icmp eq i64 %conv559, %109
  br i1 %cmp560, label %if.then562, label %if.else563

if.then562:                                       ; preds = %if.then558
  store %struct.sv* @PL_sv_undef, %struct.sv** %xsv, align 8
  br label %if.end567

if.else563:                                       ; preds = %if.then558
  store i32 1, i32* %s_dirty564, align 4, !tbaa !3
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([47 x i8]* @.str36, i64 0, i64 0), i64 %conv559) #7
  unreachable

if.end567:                                        ; preds = %if.end552, %if.then562
  %svh.0 = phi %struct.sv** [ %xsv, %if.then562 ], [ %call556, %if.end552 ]
  %110 = load %struct.sv** %svh.0, align 8, !tbaa !0
  store %struct.sv* %110, %struct.sv** %xsv, align 8
  store %struct.sv* %110, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %tobool568 = icmp eq %struct.sv* %110, null
  br i1 %tobool568, label %land.end573, label %land.rhs569

land.rhs569:                                      ; preds = %if.end567
  %sv_refcnt570 = getelementptr inbounds %struct.sv* %110, i64 0, i32 1
  %111 = load i32* %sv_refcnt570, align 4, !tbaa !3
  %inc571 = add i32 %111, 1
  store i32 %inc571, i32* %sv_refcnt570, align 4, !tbaa !3
  br label %land.end573

land.end573:                                      ; preds = %if.end567, %land.rhs569
  %arrayidx576 = getelementptr inbounds %struct.sv** %100, i64 %indvars.iv
  store %struct.sv* %110, %struct.sv** %arrayidx576, align 8, !tbaa !0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %112 = load i32* %len3, align 4, !tbaa !3
  %113 = trunc i64 %indvars.iv to i32
  %cmp513 = icmp slt i32 %113, %112
  br i1 %cmp513, label %for.body, label %if.end578

if.end578:                                        ; preds = %if.then511, %land.end573, %if.end509, %if.end425, %if.end501
  %tobool510816 = phi i1 [ false, %if.end509 ], [ false, %if.end501 ], [ false, %if.end425 ], [ true, %land.end573 ], [ true, %if.then511 ]
  %av.0815 = phi %struct.av* [ null, %if.end509 ], [ null, %if.end501 ], [ null, %if.end425 ], [ %call504, %land.end573 ], [ %call504, %if.then511 ]
  %call579 = call %struct.hv* @Perl_gv_stashpv(i8* %class.1, i32 1) #7
  %call580 = call %struct.sv* @Perl_newRV_noinc(%struct.sv* %sv.0) #7
  %call581 = call %struct.sv* @Perl_sv_bless(%struct.sv* %call580, %struct.hv* %call579) #7
  %sv_any582 = getelementptr inbounds %struct.sv* %call580, i64 0, i32 0
  %114 = load i8** %sv_any582, align 8, !tbaa !0
  %xrv_rv = bitcast i8* %114 to %struct.sv**
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8, !tbaa !0
  call void @Perl_sv_free(%struct.sv* %call580) #7
  %hook583 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 8
  %115 = load %struct.hv** %hook583, align 8, !tbaa !0
  %sv_any584 = getelementptr inbounds %struct.sv* %sv.0, i64 0, i32 0
  %116 = load i8** %sv_any584, align 8, !tbaa !0
  %xmg_stash = getelementptr inbounds i8* %116, i64 48
  %117 = bitcast i8* %xmg_stash to %struct.hv**
  %118 = load %struct.hv** %117, align 8, !tbaa !0
  %call585 = call fastcc %struct.sv* @pkg_can(%struct.hv* %115, %struct.hv* %118, i8* getelementptr inbounds ([14 x i8]* @.str61, i64 0, i64 0)) #6
  %tobool586 = icmp eq %struct.sv* %call585, null
  br i1 %tobool586, label %if.then587, label %if.end601

if.then587:                                       ; preds = %if.end578
  %call588 = call %struct.sv* @Perl_newSVpvn(i8* getelementptr inbounds ([9 x i8]* @.str58, i64 0, i64 0), i64 8) #7
  call void @Perl_sv_catpv(%struct.sv* %call588, i8* %class.1) #7
  %call589 = call i32 @Perl_eval_sv(%struct.sv* %call588, i32 2) #7
  call void @Perl_sv_free(%struct.sv* %call588) #7
  %119 = load %struct.hv** %hook583, align 8, !tbaa !0
  %120 = load i8** %sv_any584, align 8, !tbaa !0
  %xmg_stash592 = getelementptr inbounds i8* %120, i64 48
  %121 = bitcast i8* %xmg_stash592 to %struct.hv**
  %122 = load %struct.hv** %121, align 8, !tbaa !0
  %sv_any.i = getelementptr inbounds %struct.hv* %122, i64 0, i32 0
  %123 = load %struct.xpvhv** %sv_any.i, align 8, !tbaa !0
  %xhv_name.i = getelementptr inbounds %struct.xpvhv* %123, i64 0, i32 10
  %124 = load i8** %xhv_name.i, align 8, !tbaa !0
  %call.i = call i64 @strlen(i8* %124) #7
  %conv.i = trunc i64 %call.i to i32
  %call3.i = call %struct.sv* @Perl_hv_delete(%struct.hv* %119, i8* %124, i32 %conv.i, i32 2) #7
  %125 = load %struct.hv** %hook583, align 8, !tbaa !0
  %126 = load i8** %sv_any584, align 8, !tbaa !0
  %xmg_stash595 = getelementptr inbounds i8* %126, i64 48
  %127 = bitcast i8* %xmg_stash595 to %struct.hv**
  %128 = load %struct.hv** %127, align 8, !tbaa !0
  %call596 = call fastcc %struct.sv* @pkg_can(%struct.hv* %125, %struct.hv* %128, i8* getelementptr inbounds ([14 x i8]* @.str61, i64 0, i64 0)) #6
  %tobool597 = icmp eq %struct.sv* %call596, null
  br i1 %tobool597, label %if.then598, label %if.end601

if.then598:                                       ; preds = %if.then587
  %s_dirty599 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 18
  store i32 1, i32* %s_dirty599, align 4, !tbaa !3
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([78 x i8]* @.str62, i64 0, i64 0), i8* %class.1, i8* %class.1) #7
  br label %if.end601

if.end601:                                        ; preds = %if.then587, %if.end578, %if.then598
  %hook.0 = phi %struct.sv* [ %call585, %if.end578 ], [ %call596, %if.then587 ], [ null, %if.then598 ]
  br i1 %tobool510816, label %if.end607, label %if.then603

if.then603:                                       ; preds = %if.end601
  %call604 = call %struct.av* @Perl_newAV() #7
  call void @Perl_av_extend(%struct.av* %call604, i32 1) #7
  %sv_any605 = getelementptr inbounds %struct.av* %call604, i64 0, i32 0
  %129 = load %struct.xpvav** %sv_any605, align 8, !tbaa !0
  %xav_fill606 = getelementptr inbounds %struct.xpvav* %129, i64 0, i32 1
  store i64 0, i64* %xav_fill606, align 8, !tbaa !4
  br label %if.end607

if.end607:                                        ; preds = %if.then603, %if.end601
  %av.1 = phi %struct.av* [ %av.0815, %if.end601 ], [ %call604, %if.then603 ]
  store %struct.sv* %call366, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %tobool608 = icmp eq %struct.sv* %call366, null
  br i1 %tobool608, label %land.end613, label %land.rhs609

land.rhs609:                                      ; preds = %if.end607
  %sv_refcnt610 = getelementptr inbounds %struct.sv* %call366, i64 0, i32 1
  %130 = load i32* %sv_refcnt610, align 4, !tbaa !3
  %inc611 = add i32 %130, 1
  store i32 %inc611, i32* %sv_refcnt610, align 4, !tbaa !3
  br label %land.end613

land.end613:                                      ; preds = %if.end607, %land.rhs609
  %sv_any615 = getelementptr inbounds %struct.av* %av.1, i64 0, i32 0
  %131 = load %struct.xpvav** %sv_any615, align 8, !tbaa !0
  %xav_array616 = getelementptr inbounds %struct.xpvav* %131, i64 0, i32 0
  %132 = load i8** %xav_array616, align 8, !tbaa !0
  %133 = bitcast i8* %132 to %struct.sv**
  store %struct.sv* %call366, %struct.sv** %133, align 8, !tbaa !0
  %call618 = call %struct.sv* @Perl_newRV(%struct.sv* %sv.0) #7
  %134 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  call void @Perl_push_scope() #7
  call void @Perl_save_int(i32* @PL_tmps_floor) #7
  %135 = load i32* @PL_tmps_ix, align 4, !tbaa !3
  store i32 %135, i32* @PL_tmps_floor, align 4, !tbaa !3
  %136 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr.i = getelementptr inbounds i32* %136, i64 1
  store i32* %incdec.ptr.i, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %137 = load i32** @PL_markstack_max, align 8, !tbaa !0
  %cmp.i = icmp eq i32* %incdec.ptr.i, %137
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %land.end613
  call void @Perl_markstack_grow() #7
  %.pre.i = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %land.end613
  %138 = phi i32* [ %.pre.i, %if.then.i ], [ %incdec.ptr.i, %land.end613 ]
  %139 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %sub.ptr.lhs.cast.i = ptrtoint %struct.sv** %134 to i64
  %sub.ptr.rhs.cast.i = ptrtoint %struct.sv** %139 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div1.i = lshr exact i64 %sub.ptr.sub.i, 3
  %conv.i810 = trunc i64 %sub.ptr.div1.i to i32
  store i32 %conv.i810, i32* %138, align 4, !tbaa !3
  %140 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast1.i = ptrtoint %struct.sv** %140 to i64
  %sub.ptr.sub3.i = sub i64 %sub.ptr.lhs.cast1.i, %sub.ptr.lhs.cast.i
  %cmp5.i = icmp slt i64 %sub.ptr.sub3.i, 8
  br i1 %cmp5.i, label %if.then7.i, label %if.end8.i

if.then7.i:                                       ; preds = %if.end.i
  %call.i811 = call %struct.sv** @Perl_stack_grow(%struct.sv** %134, %struct.sv** %134, i32 1) #7
  br label %if.end8.i

if.end8.i:                                        ; preds = %if.then7.i, %if.end.i
  %sp.0.i = phi %struct.sv** [ %call.i811, %if.then7.i ], [ %134, %if.end.i ]
  %incdec.ptr9.i = getelementptr inbounds %struct.sv** %sp.0.i, i64 1
  store %struct.sv* %call618, %struct.sv** %incdec.ptr9.i, align 8, !tbaa !0
  %141 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast10.i = ptrtoint %struct.sv** %141 to i64
  %sub.ptr.rhs.cast11.i = ptrtoint %struct.sv** %incdec.ptr9.i to i64
  %sub.ptr.sub12.i = sub i64 %sub.ptr.lhs.cast10.i, %sub.ptr.rhs.cast11.i
  %cmp14.i = icmp slt i64 %sub.ptr.sub12.i, 8
  br i1 %cmp14.i, label %if.then16.i, label %if.end18.i

if.then16.i:                                      ; preds = %if.end8.i
  %call17.i = call %struct.sv** @Perl_stack_grow(%struct.sv** %incdec.ptr9.i, %struct.sv** %incdec.ptr9.i, i32 1) #7
  br label %if.end18.i

if.end18.i:                                       ; preds = %if.then16.i, %if.end8.i
  %sp.1.i = phi %struct.sv** [ %call17.i, %if.then16.i ], [ %incdec.ptr9.i, %if.end8.i ]
  %conv19.i817 = zext i32 %and to i64
  %call20.i = call %struct.sv* @Perl_newSViv(i64 %conv19.i817) #7
  %call21.i = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call20.i) #7
  %incdec.ptr22.i = getelementptr inbounds %struct.sv** %sp.1.i, i64 1
  store %struct.sv* %call21.i, %struct.sv** %incdec.ptr22.i, align 8, !tbaa !0
  %tobool.i = icmp eq %struct.av* %av.1, null
  br i1 %tobool.i, label %if.end51.i, label %if.then23.i

if.then23.i:                                      ; preds = %if.end18.i
  %142 = load %struct.xpvav** %sv_any615, align 8, !tbaa !0
  %xav_array.i = getelementptr inbounds %struct.xpvav* %142, i64 0, i32 0
  %143 = load i8** %xav_array.i, align 8, !tbaa !0
  %144 = bitcast i8* %143 to %struct.sv**
  %xav_fill.i = getelementptr inbounds %struct.xpvav* %142, i64 0, i32 1
  %145 = load i64* %xav_fill.i, align 8, !tbaa !4
  %add.i = add nsw i64 %145, 1
  %conv25.i = trunc i64 %add.i to i32
  %146 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast26.i = ptrtoint %struct.sv** %146 to i64
  %sub.ptr.rhs.cast27.i = ptrtoint %struct.sv** %incdec.ptr22.i to i64
  %sub.ptr.sub28.i = sub i64 %sub.ptr.lhs.cast26.i, %sub.ptr.rhs.cast27.i
  %cmp30.i = icmp slt i64 %sub.ptr.sub28.i, 8
  br i1 %cmp30.i, label %if.then32.i, label %if.end34.i

if.then32.i:                                      ; preds = %if.then23.i
  %call33.i = call %struct.sv** @Perl_stack_grow(%struct.sv** %incdec.ptr22.i, %struct.sv** %incdec.ptr22.i, i32 1) #7
  br label %if.end34.i

if.end34.i:                                       ; preds = %if.then32.i, %if.then23.i
  %sp.2.i = phi %struct.sv** [ %call33.i, %if.then32.i ], [ %incdec.ptr22.i, %if.then23.i ]
  %147 = load %struct.sv** %144, align 8, !tbaa !0
  %incdec.ptr35.i = getelementptr inbounds %struct.sv** %sp.2.i, i64 1
  store %struct.sv* %147, %struct.sv** %incdec.ptr35.i, align 8, !tbaa !0
  %cmp362.i = icmp sgt i32 %conv25.i, 1
  br i1 %cmp362.i, label %for.body.lr.ph.i, label %if.end51.i

for.body.lr.ph.i:                                 ; preds = %if.end34.i
  %148 = trunc i64 %145 to i32
  %149 = add i32 %148, 1
  br label %for.body.i

for.body.i:                                       ; preds = %if.end46.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 1, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %if.end46.i ]
  %sp.33.i = phi %struct.sv** [ %incdec.ptr35.i, %for.body.lr.ph.i ], [ %incdec.ptr50.i, %if.end46.i ]
  %150 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast38.i = ptrtoint %struct.sv** %150 to i64
  %sub.ptr.rhs.cast39.i = ptrtoint %struct.sv** %sp.33.i to i64
  %sub.ptr.sub40.i = sub i64 %sub.ptr.lhs.cast38.i, %sub.ptr.rhs.cast39.i
  %cmp42.i = icmp slt i64 %sub.ptr.sub40.i, 8
  br i1 %cmp42.i, label %if.then44.i, label %if.end46.i

if.then44.i:                                      ; preds = %for.body.i
  %call45.i = call %struct.sv** @Perl_stack_grow(%struct.sv** %sp.33.i, %struct.sv** %sp.33.i, i32 1) #7
  br label %if.end46.i

if.end46.i:                                       ; preds = %if.then44.i, %for.body.i
  %sp.4.i = phi %struct.sv** [ %call45.i, %if.then44.i ], [ %sp.33.i, %for.body.i ]
  %arrayidx47.i = getelementptr inbounds %struct.sv** %144, i64 %indvars.iv.i
  %151 = load %struct.sv** %arrayidx47.i, align 8, !tbaa !0
  %call48.i = call %struct.sv* @Perl_newRV(%struct.sv* %151) #7
  %call49.i = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call48.i) #7
  %incdec.ptr50.i = getelementptr inbounds %struct.sv** %sp.4.i, i64 1
  store %struct.sv* %call49.i, %struct.sv** %incdec.ptr50.i, align 8, !tbaa !0
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %149
  br i1 %exitcond, label %if.end51.i, label %for.body.i

if.end51.i:                                       ; preds = %if.end46.i, %if.end34.i, %if.end18.i
  %sp.5.i = phi %struct.sv** [ %incdec.ptr22.i, %if.end18.i ], [ %incdec.ptr35.i, %if.end34.i ], [ %incdec.ptr50.i, %if.end46.i ]
  store %struct.sv** %sp.5.i, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %call52.i = call i32 @Perl_call_sv(%struct.sv* %hook.0, i32 2) #7
  %152 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %tobool53.i = icmp eq i32 %call52.i, 0
  br i1 %tobool53.i, label %if.end59.i, label %if.then54.i

if.then54.i:                                      ; preds = %if.end51.i
  %incdec.ptr55.i = getelementptr inbounds %struct.sv** %152, i64 -1
  %153 = load %struct.sv** %152, align 8, !tbaa !0
  store %struct.sv* %153, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %tobool56.i = icmp eq %struct.sv* %153, null
  br i1 %tobool56.i, label %if.end59.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.then54.i
  %sv_refcnt.i = getelementptr inbounds %struct.sv* %153, i64 0, i32 1
  %154 = load i32* %sv_refcnt.i, align 4, !tbaa !3
  %inc57.i = add i32 %154, 1
  store i32 %inc57.i, i32* %sv_refcnt.i, align 4, !tbaa !3
  br label %if.end59.i

if.end59.i:                                       ; preds = %land.rhs.i, %if.then54.i, %if.end51.i
  %sp.6.i = phi %struct.sv** [ %152, %if.end51.i ], [ %incdec.ptr55.i, %if.then54.i ], [ %incdec.ptr55.i, %land.rhs.i ]
  store %struct.sv** %sp.6.i, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %155 = load i32* @PL_tmps_ix, align 4, !tbaa !3
  %156 = load i32* @PL_tmps_floor, align 4, !tbaa !3
  %cmp60.i = icmp sgt i32 %155, %156
  br i1 %cmp60.i, label %if.then62.i, label %scalar_call.exit

if.then62.i:                                      ; preds = %if.end59.i
  call void @Perl_free_tmps() #7
  br label %scalar_call.exit

scalar_call.exit:                                 ; preds = %if.end59.i, %if.then62.i
  call void @Perl_pop_scope() #7
  call void @Perl_sv_free(%struct.sv* %call618) #7
  call void @Perl_sv_free(%struct.sv* %call366) #7
  call void @Perl_av_undef(%struct.av* %av.1) #7
  %157 = bitcast %struct.av* %av.1 to %struct.sv*
  call void @Perl_sv_free(%struct.sv* %157) #7
  %cmp623 = icmp eq i8* %class.1, %0
  %or.cond809 = or i1 %tobool96, %cmp623
  br i1 %or.cond809, label %if.end626, label %if.then625

if.then625:                                       ; preds = %scalar_call.exit
  call void @Perl_safesysfree(i8* %class.1) #7
  br label %if.end626

if.end626:                                        ; preds = %if.then625, %scalar_call.exit
  %tobool627 = icmp eq i32 %extra_type.1, 0
  br i1 %tobool627, label %cleanup, label %if.end629

if.end629:                                        ; preds = %if.end626
  %call630 = call fastcc %struct.sv* @retrieve(%struct.stcxt* %cxt, i8* null) #6
  switch i32 %extra_type.1, label %sw.default641 [
    i32 4, label %sw.bb631
    i32 5, label %sw.bb633
    i32 6, label %sw.bb639
  ]

sw.bb631:                                         ; preds = %if.end629
  %call632 = call signext i8 @Perl_sv_upgrade(%struct.sv* %sv.0, i32 7) #7
  br label %sw.epilog643

sw.bb633:                                         ; preds = %if.end629
  %call634 = call signext i8 @Perl_sv_upgrade(%struct.sv* %sv.0, i32 10) #7
  %sv_any635 = bitcast %struct.sv* %sv.0 to %struct.xpvav**
  %158 = load %struct.xpvav** %sv_any635, align 8, !tbaa !0
  %xav_flags = getelementptr inbounds %struct.xpvav* %158, i64 0, i32 9
  %159 = load i8* %xav_flags, align 1, !tbaa !1
  %and637 = and i8 %159, -2
  store i8 %and637, i8* %xav_flags, align 1, !tbaa !1
  br label %sw.epilog643

sw.bb639:                                         ; preds = %if.end629
  %call640 = call signext i8 @Perl_sv_upgrade(%struct.sv* %sv.0, i32 11) #7
  br label %sw.epilog643

sw.default641:                                    ; preds = %if.end629
  %s_dirty642 = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 18
  store i32 1, i32* %s_dirty642, align 4, !tbaa !3
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([34 x i8]* @.str63, i64 0, i64 0), i32 %extra_type.1) #7
  br label %sw.epilog643

sw.epilog643:                                     ; preds = %sw.default641, %sw.bb639, %sw.bb633, %sw.bb631
  call void @Perl_sv_magic(%struct.sv* %sv.0, %struct.sv* %call630, i32 %mtype.0, i8* null, i32 0) #7
  call void @Perl_sv_free(%struct.sv* %call630) #7
  br label %cleanup

cleanup:                                          ; preds = %if.else87, %if.then73, %while.body, %if.else545, %if.then517, %sw.epilog52, %if.end626, %if.else493, %if.then479, %if.else462, %if.then434, %if.else356, %if.then342, %if.else325, %if.then297, %if.end281, %if.else272, %if.then254, %if.else237, %if.then223, %if.else206, %if.then178, %if.else158, %if.then144, %if.else130, %if.then103, %if.end55, %if.else35, %if.then21, %if.else5, %if.then, %sw.epilog643, %if.then401, %if.else390, %sw.default50, %sw.default
  %retval.0 = phi %struct.sv* [ null, %sw.default50 ], [ null, %sw.default ], [ null, %if.then401 ], [ %sv.0, %sw.epilog643 ], [ null, %if.else390 ], [ null, %if.then ], [ null, %if.else5 ], [ null, %if.then21 ], [ null, %if.else35 ], [ null, %sw.epilog52 ], [ null, %if.end55 ], [ null, %if.then103 ], [ null, %if.else130 ], [ null, %if.then144 ], [ null, %if.else158 ], [ null, %if.then178 ], [ null, %if.else206 ], [ null, %if.then223 ], [ null, %if.else237 ], [ null, %if.then254 ], [ null, %if.else272 ], [ null, %if.end281 ], [ null, %if.then297 ], [ null, %if.else325 ], [ null, %if.then342 ], [ null, %if.else356 ], [ null, %if.then434 ], [ null, %if.else462 ], [ null, %if.then479 ], [ null, %if.else493 ], [ %sv.0, %if.end626 ], [ null, %if.then517 ], [ null, %if.else545 ], [ null, %while.body ], [ null, %if.then73 ], [ null, %if.else87 ]
  call void @llvm.lifetime.end(i64 128, i8* %0) #3
  ret %struct.sv* %retval.0
}
