define internal %struct.sv* @retrieve_byte(%struct.stcxt* nocapture %cxt, i8* %cname) #1 {
entry:
  %fio = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 23
  %0 = load %struct._PerlIO*** %fio, align 8, !tbaa !0
  %tobool = icmp eq %struct._PerlIO** %0, null
  br i1 %tobool, label %if.then, label %if.else5

if.then:                                          ; preds = %entry
  %aptr = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 2
  %1 = load i8** %aptr, align 8, !tbaa !0
  %aend = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 21, i32 3
  %2 = load i8** %aend, align 8, !tbaa !0
  %cmp = icmp ult i8* %1, %2
  br i1 %cmp, label %if.then2, label %return

if.then2:                                         ; preds = %if.then
  %incdec.ptr = getelementptr inbounds i8* %1, i64 1
  store i8* %incdec.ptr, i8** %aptr, align 8, !tbaa !0
  %3 = load i8* %1, align 1, !tbaa !1
  %conv = zext i8 %3 to i32
  br label %if.end11

if.else5:                                         ; preds = %entry
  %call = tail call i32 @PerlIO_getc(%struct._PerlIO** %0) #7
  %cmp7 = icmp eq i32 %call, -1
  br i1 %cmp7, label %return, label %if.end11

if.end11:                                         ; preds = %if.else5, %if.then2
  %siv.0 = phi i32 [ %call, %if.else5 ], [ %conv, %if.then2 ]
  %sub = add nsw i32 %siv.0, 128
  %conv14 = zext i32 %sub to i64
  %sext = shl i64 %conv14, 56
  %conv15 = ashr exact i64 %sext, 56
  %call16 = tail call %struct.sv* @Perl_newSViv(i64 %conv15) #7
  %tobool17 = icmp eq %struct.sv* %call16, null
  br i1 %tobool17, label %return, label %if.end19

if.end19:                                         ; preds = %if.end11
  %aseen = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 4
  %4 = load %struct.av** %aseen, align 8, !tbaa !0
  %tagnum = getelementptr inbounds %struct.stcxt* %cxt, i64 0, i32 9
  %5 = load i64* %tagnum, align 8, !tbaa !4
  %inc = add nsw i64 %5, 1
  store i64 %inc, i64* %tagnum, align 8, !tbaa !4
  %conv20 = trunc i64 %5 to i32
  store %struct.sv* %call16, %struct.sv** @PL_Sv, align 8, !tbaa !0
  %sv_refcnt = getelementptr inbounds %struct.sv* %call16, i64 0, i32 1
  %6 = load i32* %sv_refcnt, align 4, !tbaa !3
  %inc22 = add i32 %6, 1
  store i32 %inc22, i32* %sv_refcnt, align 4, !tbaa !3
  %call24 = tail call %struct.sv** @Perl_av_store(%struct.av* %4, i32 %conv20, %struct.sv* %call16) #7
  %cmp25 = icmp eq %struct.sv** %call24, null
  br i1 %cmp25, label %return, label %if.end28

if.end28:                                         ; preds = %if.end19
  %tobool29 = icmp eq i8* %cname, null
  br i1 %tobool29, label %return, label %if.then30

if.then30:                                        ; preds = %if.end28
  %call33 = tail call %struct.hv* @Perl_gv_stashpv(i8* %cname, i32 1) #7
  %call34 = tail call %struct.sv* @Perl_newRV_noinc(%struct.sv* %call16) #7
  %call35 = tail call %struct.sv* @Perl_sv_bless(%struct.sv* %call34, %struct.hv* %call33) #7
  %sv_any = getelementptr inbounds %struct.sv* %call34, i64 0, i32 0
  %7 = load i8** %sv_any, align 8, !tbaa !0
  %xrv_rv = bitcast i8* %7 to %struct.sv**
  store %struct.sv* null, %struct.sv** %xrv_rv, align 8, !tbaa !0
  tail call void @Perl_sv_free(%struct.sv* %call34) #7
  br label %return

return:                                           ; preds = %if.end11, %if.then30, %if.end28, %if.end19, %if.else5, %if.then
  %retval.0 = phi %struct.sv* [ null, %if.then ], [ null, %if.else5 ], [ null, %if.end11 ], [ null, %if.end19 ], [ %call16, %if.end28 ], [ %call16, %if.then30 ]
  ret %struct.sv* %retval.0
}
