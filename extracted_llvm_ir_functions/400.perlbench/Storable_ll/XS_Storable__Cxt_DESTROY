define void @XS_Storable__Cxt_DESTROY(%struct.cv* nocapture %cv) #1 {
entry:
  %0 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %1 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %2 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i32* %2, i64 -1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %3 = load i32* %2, align 4, !tbaa !3
  %idx.ext = sext i32 %3 to i64
  %add.ptr = getelementptr inbounds %struct.sv** %1, i64 %idx.ext
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %add.ptr to i64
  %add.ptr.idx = shl nsw i64 %idx.ext, 32
  %sub.ptr.lhs.cast1 = ptrtoint %struct.sv** %0 to i64
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast
  %4 = and i64 %sub.ptr.sub3, 34359738360
  %cmp = icmp eq i64 %4, 8
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([36 x i8]* @.str, i64 0, i64 0)) #7
  %.pre = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %5 = phi %struct.sv** [ %1, %entry ], [ %.pre, %if.then ]
  %sext = shl i64 %sub.ptr.sub3, 29
  %idx.ext7 = ashr exact i64 %sext, 32
  %idx.neg = sub i64 0, %idx.ext7
  %add.ptr8 = getelementptr inbounds %struct.sv** %0, i64 %idx.neg
  %sext44 = add i64 %add.ptr.idx, 4294967296
  %idxprom = ashr exact i64 %sext44, 32
  %arrayidx = getelementptr inbounds %struct.sv** %5, i64 %idxprom
  %6 = load %struct.sv** %arrayidx, align 8, !tbaa !0
  %sv_any = getelementptr inbounds %struct.sv* %6, i64 0, i32 0
  %7 = load i8** %sv_any, align 8, !tbaa !0
  %xrv_rv = bitcast i8* %7 to %struct.sv**
  %8 = load %struct.sv** %xrv_rv, align 8, !tbaa !0
  %sv_any10 = getelementptr inbounds %struct.sv* %8, i64 0, i32 0
  %9 = load i8** %sv_any10, align 8, !tbaa !0
  %xpv_pv = bitcast i8* %9 to i8**
  %10 = load i8** %xpv_pv, align 8, !tbaa !0
  %keybuf = getelementptr inbounds i8* %10, i64 120
  %arena = bitcast i8* %keybuf to i8**
  %11 = load i8** %arena, align 8, !tbaa !0
  %tobool = icmp eq i8* %11, null
  br i1 %tobool, label %if.end14, label %if.then11

if.then11:                                        ; preds = %if.end
  tail call void @Perl_safesysfree(i8* %11) #7
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then11
  %membuf_ro = getelementptr inbounds i8* %10, i64 116
  %12 = bitcast i8* %membuf_ro to i32*
  %13 = load i32* %12, align 4, !tbaa !3
  %tobool15 = icmp eq i32 %13, 0
  br i1 %tobool15, label %land.lhs.true, label %land.lhs.true24

land.lhs.true:                                    ; preds = %if.end14
  %membuf = getelementptr inbounds i8* %10, i64 152
  %arena16 = bitcast i8* %membuf to i8**
  %14 = load i8** %arena16, align 8, !tbaa !0
  %tobool17 = icmp eq i8* %14, null
  br i1 %tobool17, label %if.end30, label %if.end21

if.end21:                                         ; preds = %land.lhs.true
  tail call void @Perl_safesysfree(i8* %14) #7
  %.pr.pre = load i32* %12, align 4, !tbaa !3
  %phitmp = icmp eq i32 %.pr.pre, 0
  br i1 %phitmp, label %if.end30, label %land.lhs.true24

land.lhs.true24:                                  ; preds = %if.end14, %if.end21
  %msaved = getelementptr inbounds i8* %10, i64 184
  %arena25 = bitcast i8* %msaved to i8**
  %15 = load i8** %arena25, align 8, !tbaa !0
  %tobool26 = icmp eq i8* %15, null
  br i1 %tobool26, label %if.end30, label %if.then27

if.then27:                                        ; preds = %land.lhs.true24
  tail call void @Perl_safesysfree(i8* %15) #7
  br label %if.end30

if.end30:                                         ; preds = %land.lhs.true, %land.lhs.true24, %if.end21, %if.then27
  store %struct.sv** %add.ptr8, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  ret void
}
