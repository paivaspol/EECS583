define internal fastcc void @S_not_a_number(%struct.sv* %sv) #0 {
entry:
  %tmpbuf = alloca [64 x i8], align 16
  %0 = getelementptr inbounds [64 x i8]* %tmpbuf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 64, i8* %0) #3
  %sv_flags = getelementptr inbounds %struct.sv* %sv, i64 0, i32 2
  %1 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %1, 536870912
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %op_private = getelementptr inbounds %struct.cop* %2, i64 0, i32 7
  %3 = load i8* %op_private, align 1, !tbaa !1
  %and1 = and i8 %3, 8
  %tobool2 = icmp eq i8 %and1, 0
  br i1 %tobool2, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %call = call %struct.sv* @Perl_newSVpv(i8* getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0), i64 0) #7
  %call3 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call) #7
  %call4 = call i8* @Perl_sv_uni_display(%struct.sv* %call3, %struct.sv* %sv, i64 10, i64 0) #8
  br label %if.end95

if.else:                                          ; preds = %land.lhs.true, %entry
  %add.ptr6 = getelementptr inbounds [64 x i8]* %tmpbuf, i64 0, i64 56
  %sv_any = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %4 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_pv = bitcast i8* %4 to i8**
  %5 = load i8** %xpv_pv, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %4, i64 8
  %6 = bitcast i8* %xpv_cur to i64*
  %7 = load i64* %6, align 8, !tbaa !5
  %add.ptr8 = getelementptr inbounds i8* %5, i64 %7
  %cmp153 = icmp sgt i64 %7, 0
  br i1 %cmp153, label %for.body, label %if.end93

for.body:                                         ; preds = %if.else, %for.inc
  %s.0157 = phi i8* [ %incdec.ptr86, %for.inc ], [ %5, %if.else ]
  %d.0156 = phi i8* [ %d.2, %for.inc ], [ %0, %if.else ]
  %8 = load i8* %s.0157, align 1, !tbaa !1
  %conv12151 = zext i8 %8 to i32
  %and14 = and i32 %conv12151, 128
  %tobool15 = icmp eq i32 %and14, 0
  br i1 %tobool15, label %if.end, label %if.then25

if.then25:                                        ; preds = %for.body
  %incdec.ptr = getelementptr inbounds i8* %d.0156, i64 1
  store i8 77, i8* %d.0156, align 1, !tbaa !1
  %incdec.ptr26 = getelementptr inbounds i8* %d.0156, i64 2
  store i8 45, i8* %incdec.ptr, align 1, !tbaa !1
  %and27 = and i32 %conv12151, 127
  br label %if.end

if.end:                                           ; preds = %for.body, %if.then25
  %d.1 = phi i8* [ %incdec.ptr26, %if.then25 ], [ %d.0156, %for.body ]
  %ch.0 = phi i32 [ %and27, %if.then25 ], [ %conv12151, %for.body ]
  switch i32 %ch.0, label %if.else57 [
    i32 10, label %if.then30
    i32 13, label %if.then36
    i32 12, label %if.then42
    i32 92, label %if.then48
    i32 0, label %if.then54
  ]

if.then30:                                        ; preds = %if.end
  %incdec.ptr31 = getelementptr inbounds i8* %d.1, i64 1
  store i8 92, i8* %d.1, align 1, !tbaa !1
  %incdec.ptr32 = getelementptr inbounds i8* %d.1, i64 2
  store i8 110, i8* %incdec.ptr31, align 1, !tbaa !1
  br label %for.inc

if.then36:                                        ; preds = %if.end
  %incdec.ptr37 = getelementptr inbounds i8* %d.1, i64 1
  store i8 92, i8* %d.1, align 1, !tbaa !1
  %incdec.ptr38 = getelementptr inbounds i8* %d.1, i64 2
  store i8 114, i8* %incdec.ptr37, align 1, !tbaa !1
  br label %for.inc

if.then42:                                        ; preds = %if.end
  %incdec.ptr43 = getelementptr inbounds i8* %d.1, i64 1
  store i8 92, i8* %d.1, align 1, !tbaa !1
  %incdec.ptr44 = getelementptr inbounds i8* %d.1, i64 2
  store i8 102, i8* %incdec.ptr43, align 1, !tbaa !1
  br label %for.inc

if.then48:                                        ; preds = %if.end
  %incdec.ptr49 = getelementptr inbounds i8* %d.1, i64 1
  store i8 92, i8* %d.1, align 1, !tbaa !1
  %incdec.ptr50 = getelementptr inbounds i8* %d.1, i64 2
  store i8 92, i8* %incdec.ptr49, align 1, !tbaa !1
  br label %for.inc

if.then54:                                        ; preds = %if.end
  %incdec.ptr55 = getelementptr inbounds i8* %d.1, i64 1
  store i8 92, i8* %d.1, align 1, !tbaa !1
  %incdec.ptr56 = getelementptr inbounds i8* %d.1, i64 2
  store i8 48, i8* %incdec.ptr55, align 1, !tbaa !1
  br label %for.inc

if.else57:                                        ; preds = %if.end
  %and58 = and i32 %ch.0, 128
  %cmp59 = icmp eq i32 %and58, 0
  br i1 %cmp59, label %land.lhs.true61, label %if.else71

land.lhs.true61:                                  ; preds = %if.else57
  %idxprom62152 = zext i32 %ch.0 to i64
  %call63 = call i16** @__ctype_b_loc() #8
  %9 = load i16** %call63, align 8, !tbaa !0
  %arrayidx64 = getelementptr inbounds i16* %9, i64 %idxprom62152
  %10 = load i16* %arrayidx64, align 2, !tbaa !4
  %and66 = and i16 %10, 16384
  %tobool67 = icmp eq i16 %and66, 0
  br i1 %tobool67, label %if.else71, label %if.then68

if.then68:                                        ; preds = %land.lhs.true61
  %conv69 = trunc i32 %ch.0 to i8
  %incdec.ptr70 = getelementptr inbounds i8* %d.1, i64 1
  store i8 %conv69, i8* %d.1, align 1, !tbaa !1
  br label %for.inc

if.else71:                                        ; preds = %land.lhs.true61, %if.else57
  %incdec.ptr72 = getelementptr inbounds i8* %d.1, i64 1
  store i8 94, i8* %d.1, align 1, !tbaa !1
  %ch.0.off = add i32 %ch.0, -97
  %11 = icmp ult i32 %ch.0.off, 26
  %sub = add nsw i32 %ch.0, 224
  %cond = select i1 %11, i32 %sub, i32 %ch.0
  %xor = xor i32 %cond, 64
  %conv78 = trunc i32 %xor to i8
  %incdec.ptr79 = getelementptr inbounds i8* %d.1, i64 2
  store i8 %conv78, i8* %incdec.ptr72, align 1, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.then30, %if.then42, %if.then54, %if.else71, %if.then68, %if.then48, %if.then36
  %d.2 = phi i8* [ %incdec.ptr32, %if.then30 ], [ %incdec.ptr38, %if.then36 ], [ %incdec.ptr44, %if.then42 ], [ %incdec.ptr50, %if.then48 ], [ %incdec.ptr56, %if.then54 ], [ %incdec.ptr70, %if.then68 ], [ %incdec.ptr79, %if.else71 ]
  %incdec.ptr86 = getelementptr inbounds i8* %s.0157, i64 1
  %cmp = icmp ult i8* %incdec.ptr86, %add.ptr8
  %cmp10 = icmp ult i8* %d.2, %add.ptr6
  %cmp10. = and i1 %cmp, %cmp10
  br i1 %cmp10., label %for.body, label %for.end

for.end:                                          ; preds = %for.inc
  br i1 %cmp, label %if.then89, label %if.end93

if.then89:                                        ; preds = %for.end
  %incdec.ptr90 = getelementptr inbounds i8* %d.2, i64 1
  store i8 46, i8* %d.2, align 1, !tbaa !1
  %incdec.ptr91 = getelementptr inbounds i8* %d.2, i64 2
  store i8 46, i8* %incdec.ptr90, align 1, !tbaa !1
  %incdec.ptr92 = getelementptr inbounds i8* %d.2, i64 3
  store i8 46, i8* %incdec.ptr91, align 1, !tbaa !1
  br label %if.end93

if.end93:                                         ; preds = %if.else, %if.then89, %for.end
  %d.3 = phi i8* [ %incdec.ptr92, %if.then89 ], [ %d.2, %for.end ], [ %0, %if.else ]
  store i8 0, i8* %d.3, align 1, !tbaa !1
  br label %if.end95

if.end95:                                         ; preds = %if.end93, %if.then
  %pv.0 = phi i8* [ %0, %if.end93 ], [ %call4, %if.then ]
  %12 = load %struct.op** @PL_op, align 8, !tbaa !0
  %tobool96 = icmp eq %struct.op* %12, null
  br i1 %tobool96, label %if.else109, label %if.then97

if.then97:                                        ; preds = %if.end95
  %op_type = getelementptr inbounds %struct.op* %12, i64 0, i32 4
  %13 = load i16* %op_type, align 2, !tbaa !4
  %cmp99 = icmp eq i16 %13, 351
  br i1 %cmp99, label %cond.true101, label %cond.false103

cond.true101:                                     ; preds = %if.then97
  %call102 = call i8* @Perl_custom_op_desc(%struct.op* %12) #8
  br label %cond.end107

cond.false103:                                    ; preds = %if.then97
  %idxprom105 = zext i16 %13 to i64
  %arrayidx106 = getelementptr inbounds [0 x i8*]* @PL_op_desc, i64 0, i64 %idxprom105
  %14 = load i8** %arrayidx106, align 8, !tbaa !0
  br label %cond.end107

cond.end107:                                      ; preds = %cond.false103, %cond.true101
  %cond108 = phi i8* [ %call102, %cond.true101 ], [ %14, %cond.false103 ]
  call void (i32, i8*, ...)* @Perl_warner(i32 13, i8* getelementptr inbounds ([34 x i8]* @.str73, i64 0, i64 0), i8* %pv.0, i8* %cond108) #8
  br label %if.end110

if.else109:                                       ; preds = %if.end95
  call void (i32, i8*, ...)* @Perl_warner(i32 13, i8* getelementptr inbounds ([28 x i8]* @.str74, i64 0, i64 0), i8* %pv.0) #8
  br label %if.end110

if.end110:                                        ; preds = %if.else109, %cond.end107
  call void @llvm.lifetime.end(i64 64, i8* %0) #3
  ret void
}
