define %struct.sv* @Perl_sv_2mortal(%struct.sv* %sv) #0 {
entry:
  %tobool = icmp eq %struct.sv* %sv, null
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %sv_flags = getelementptr inbounds %struct.sv* %sv, i64 0, i32 2
  %0 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %0, 8388608
  %tobool1 = icmp eq i32 %and, 0
  br i1 %tobool1, label %if.end8, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %cmp = icmp eq %struct.sv* %sv, @PL_sv_undef
  %cmp2 = icmp eq %struct.sv* %sv, @PL_sv_yes
  %or.cond = or i1 %cmp, %cmp2
  %cmp4 = icmp eq %struct.sv* %sv, @PL_sv_no
  %or.cond13 = or i1 %or.cond, %cmp4
  %cmp6 = icmp eq %struct.sv* %sv, @PL_sv_placeholder
  %or.cond14 = or i1 %or.cond13, %cmp6
  br i1 %or.cond14, label %return, label %if.end8

if.end8:                                          ; preds = %if.end, %land.lhs.true
  %1 = load i32* @PL_tmps_ix, align 4, !tbaa !3
  %add = add nsw i32 %1, 1
  %2 = load i32* @PL_tmps_max, align 4, !tbaa !3
  %cmp9 = icmp slt i32 %add, %2
  br i1 %cmp9, label %if.end11, label %if.then10

if.then10:                                        ; preds = %if.end8
  tail call void @Perl_tmps_grow(i32 1) #8
  %.pre = load i32* @PL_tmps_ix, align 4, !tbaa !3
  br label %if.end11

if.end11:                                         ; preds = %if.end8, %if.then10
  %3 = phi i32 [ %1, %if.end8 ], [ %.pre, %if.then10 ]
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* @PL_tmps_ix, align 4, !tbaa !3
  %idxprom = sext i32 %inc to i64
  %4 = load %struct.sv*** @PL_tmps_stack, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %struct.sv** %4, i64 %idxprom
  store %struct.sv* %sv, %struct.sv** %arrayidx, align 8, !tbaa !0
  %5 = load i32* %sv_flags, align 4, !tbaa !3
  %or = or i32 %5, 2048
  store i32 %or, i32* %sv_flags, align 4, !tbaa !3
  br label %return

return:                                           ; preds = %land.lhs.true, %entry, %if.end11
  ret %struct.sv* %sv
}
