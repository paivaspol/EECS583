define void @Perl_sv_catpv(%struct.sv* %sv, i8* %ptr) #0 {
entry:
  %tlen = alloca i64, align 8
  %tobool = icmp eq i8* %ptr, null
  br i1 %tobool, label %if.end37, label %if.end

if.end:                                           ; preds = %entry
  %sv_flags = getelementptr inbounds %struct.sv* %sv, i64 0, i32 2
  %0 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %0, 10223616
  %cmp = icmp eq i32 %and, 262144
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %sv_any = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %1 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %1, i64 8
  %2 = bitcast i8* %xpv_cur to i64*
  %3 = load i64* %2, align 8, !tbaa !5
  store i64 %3, i64* %tlen, align 8, !tbaa !5
  %xpv_pv = bitcast i8* %1 to i8**
  %4 = load i8** %xpv_pv, align 8, !tbaa !0
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %call = call i8* @Perl_sv_pvn_force_flags(%struct.sv* %sv, i64* %tlen, i32 2) #7
  %sv_any3.phi.trans.insert = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %.pre = load i8** %sv_any3.phi.trans.insert, align 8, !tbaa !0
  %.pre55 = load i64* %tlen, align 8, !tbaa !5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %5 = phi i64 [ %3, %cond.true ], [ %.pre55, %cond.false ]
  %6 = phi i8* [ %1, %cond.true ], [ %.pre, %cond.false ]
  %cond = phi i8* [ %4, %cond.true ], [ %call, %cond.false ]
  %call2 = call i64 @strlen(i8* %ptr) #8
  %sv_any3 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %xpv_len = getelementptr inbounds i8* %6, i64 16
  %7 = bitcast i8* %xpv_len to i64*
  %8 = load i64* %7, align 8, !tbaa !5
  %add = add i64 %call2, 1
  %add4 = add i64 %add, %5
  %cmp5 = icmp ult i64 %8, %add4
  br i1 %cmp5, label %cond.true6, label %cond.end13

cond.true6:                                       ; preds = %cond.end
  %call9 = call i8* @Perl_sv_grow(%struct.sv* %sv, i64 %add4) #7
  br label %cond.end13

cond.end13:                                       ; preds = %cond.end, %cond.true6
  %cmp15 = icmp eq i8* %cond, %ptr
  %9 = load i8** %sv_any3, align 8, !tbaa !0
  %xpv_pv18 = bitcast i8* %9 to i8**
  %10 = load i8** %xpv_pv18, align 8, !tbaa !0
  %.ptr = select i1 %cmp15, i8* %10, i8* %ptr
  %11 = load i64* %tlen, align 8, !tbaa !5
  %add.ptr = getelementptr inbounds i8* %10, i64 %11
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %add.ptr, i8* %.ptr, i64 %add, i32 1, i1 false)
  %12 = load i8** %sv_any3, align 8, !tbaa !0
  %xpv_cur24 = getelementptr inbounds i8* %12, i64 8
  %13 = bitcast i8* %xpv_cur24 to i64*
  %14 = load i64* %13, align 8, !tbaa !5
  %add25 = add i64 %14, %call2
  store i64 %add25, i64* %13, align 8, !tbaa !5
  %15 = load i32* %sv_flags, align 4, !tbaa !3
  %and27 = and i32 %15, 1760624639
  %or = or i32 %and27, 67371008
  store i32 %or, i32* %sv_flags, align 4, !tbaa !3
  %16 = load i8* @PL_tainting, align 1, !tbaa !1
  %tobool29 = icmp ne i8 %16, 0
  %17 = load i8* @PL_tainted, align 1, !tbaa !1
  %tobool31 = icmp ne i8 %17, 0
  %or.cond = and i1 %tobool29, %tobool31
  br i1 %or.cond, label %if.then34, label %if.end37

if.then34:                                        ; preds = %cond.end13
  call void @Perl_sv_magic(%struct.sv* %sv, %struct.sv* null, i32 116, i8* null, i32 0) #8
  br label %if.end37

if.end37:                                         ; preds = %entry, %if.then34, %cond.end13
  ret void
}
