define signext i8 @Perl_sv_cat_decode(%struct.sv* %dsv, %struct.sv* %encoding, %struct.sv* %ssv, i32* %offset, i8* %tstr, i32 %tlen) #0 {
entry:
  %sv_flags = getelementptr inbounds %struct.sv* %ssv, i64 0, i32 2
  %0 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %0, 262144
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %sv_flags1 = getelementptr inbounds %struct.sv* %dsv, i64 0, i32 2
  %1 = load i32* %sv_flags1, align 4, !tbaa !3
  %and2 = and i32 %1, 262144
  %tobool3 = icmp eq i32 %and2, 0
  br i1 %tobool3, label %if.else, label %land.lhs.true4

land.lhs.true4:                                   ; preds = %land.lhs.true
  %sv_flags5 = getelementptr inbounds %struct.sv* %encoding, i64 0, i32 2
  %2 = load i32* %sv_flags5, align 4, !tbaa !3
  %and6 = and i32 %2, 524288
  %tobool7 = icmp eq i32 %and6, 0
  %tobool9 = icmp eq i32* %offset, null
  %or.cond = or i1 %tobool7, %tobool9
  br i1 %or.cond, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true4
  %3 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  tail call void @Perl_push_scope() #8
  tail call void @Perl_save_int(i32* @PL_tmps_floor) #8
  %4 = load i32* @PL_tmps_ix, align 4, !tbaa !3
  store i32 %4, i32* @PL_tmps_floor, align 4, !tbaa !3
  tail call void @Perl_save_re_context() #8
  %5 = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i32* %5, i64 1
  store i32* %incdec.ptr, i32** @PL_markstack_ptr, align 8, !tbaa !0
  %6 = load i32** @PL_markstack_max, align 8, !tbaa !0
  %cmp = icmp eq i32* %incdec.ptr, %6
  br i1 %cmp, label %if.then10, label %if.end

if.then10:                                        ; preds = %if.then
  tail call void @Perl_markstack_grow() #8
  %.pre = load i32** @PL_markstack_ptr, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then10, %if.then
  %7 = phi i32* [ %.pre, %if.then10 ], [ %incdec.ptr, %if.then ]
  %8 = load %struct.sv*** @PL_stack_base, align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint %struct.sv** %3 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.sv** %8 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div170 = lshr exact i64 %sub.ptr.sub, 3
  %conv = trunc i64 %sub.ptr.div170 to i32
  store i32 %conv, i32* %7, align 4, !tbaa !3
  %9 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast11 = ptrtoint %struct.sv** %9 to i64
  %sub.ptr.sub13 = sub i64 %sub.ptr.lhs.cast11, %sub.ptr.lhs.cast
  %cmp15 = icmp slt i64 %sub.ptr.sub13, 48
  br i1 %cmp15, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end
  %call = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %3, %struct.sv** %3, i32 6) #8
  %.pre171 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %if.end
  %10 = phi %struct.sv** [ %.pre171, %if.then17 ], [ %9, %if.end ]
  %sp.0 = phi %struct.sv** [ %call, %if.then17 ], [ %3, %if.end ]
  %sub.ptr.lhs.cast19 = ptrtoint %struct.sv** %10 to i64
  %sub.ptr.rhs.cast20 = ptrtoint %struct.sv** %sp.0 to i64
  %sub.ptr.sub21 = sub i64 %sub.ptr.lhs.cast19, %sub.ptr.rhs.cast20
  %cmp23 = icmp slt i64 %sub.ptr.sub21, 8
  br i1 %cmp23, label %if.then25, label %if.end27

if.then25:                                        ; preds = %if.end18
  %call26 = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %sp.0, %struct.sv** %sp.0, i32 1) #8
  br label %if.end27

if.end27:                                         ; preds = %if.then25, %if.end18
  %sp.1 = phi %struct.sv** [ %call26, %if.then25 ], [ %sp.0, %if.end18 ]
  %incdec.ptr28 = getelementptr inbounds %struct.sv** %sp.1, i64 1
  store %struct.sv* %encoding, %struct.sv** %incdec.ptr28, align 8, !tbaa !0
  %11 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast29 = ptrtoint %struct.sv** %11 to i64
  %sub.ptr.rhs.cast30 = ptrtoint %struct.sv** %incdec.ptr28 to i64
  %sub.ptr.sub31 = sub i64 %sub.ptr.lhs.cast29, %sub.ptr.rhs.cast30
  %cmp33 = icmp slt i64 %sub.ptr.sub31, 8
  br i1 %cmp33, label %if.then35, label %if.end37

if.then35:                                        ; preds = %if.end27
  %call36 = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %incdec.ptr28, %struct.sv** %incdec.ptr28, i32 1) #8
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %if.end27
  %sp.2 = phi %struct.sv** [ %call36, %if.then35 ], [ %incdec.ptr28, %if.end27 ]
  %incdec.ptr38 = getelementptr inbounds %struct.sv** %sp.2, i64 1
  store %struct.sv* %dsv, %struct.sv** %incdec.ptr38, align 8, !tbaa !0
  %12 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast39 = ptrtoint %struct.sv** %12 to i64
  %sub.ptr.rhs.cast40 = ptrtoint %struct.sv** %incdec.ptr38 to i64
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40
  %cmp43 = icmp slt i64 %sub.ptr.sub41, 8
  br i1 %cmp43, label %if.then45, label %if.end47

if.then45:                                        ; preds = %if.end37
  %call46 = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %incdec.ptr38, %struct.sv** %incdec.ptr38, i32 1) #8
  br label %if.end47

if.end47:                                         ; preds = %if.then45, %if.end37
  %sp.3 = phi %struct.sv** [ %call46, %if.then45 ], [ %incdec.ptr38, %if.end37 ]
  %incdec.ptr48 = getelementptr inbounds %struct.sv** %sp.3, i64 1
  store %struct.sv* %ssv, %struct.sv** %incdec.ptr48, align 8, !tbaa !0
  %13 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast49 = ptrtoint %struct.sv** %13 to i64
  %sub.ptr.rhs.cast50 = ptrtoint %struct.sv** %incdec.ptr48 to i64
  %sub.ptr.sub51 = sub i64 %sub.ptr.lhs.cast49, %sub.ptr.rhs.cast50
  %cmp53 = icmp slt i64 %sub.ptr.sub51, 8
  br i1 %cmp53, label %if.then55, label %if.end57

if.then55:                                        ; preds = %if.end47
  %call56 = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %incdec.ptr48, %struct.sv** %incdec.ptr48, i32 1) #8
  br label %if.end57

if.end57:                                         ; preds = %if.then55, %if.end47
  %sp.4 = phi %struct.sv** [ %call56, %if.then55 ], [ %incdec.ptr48, %if.end47 ]
  %14 = load i32* %offset, align 4, !tbaa !3
  %conv58 = sext i32 %14 to i64
  %call59 = tail call %struct.sv* @Perl_newSViv(i64 %conv58) #7
  %call60 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call59) #7
  %incdec.ptr61 = getelementptr inbounds %struct.sv** %sp.4, i64 1
  store %struct.sv* %call60, %struct.sv** %incdec.ptr61, align 8, !tbaa !0
  %15 = load %struct.sv*** @PL_stack_max, align 8, !tbaa !0
  %sub.ptr.lhs.cast62 = ptrtoint %struct.sv** %15 to i64
  %sub.ptr.rhs.cast63 = ptrtoint %struct.sv** %incdec.ptr61 to i64
  %sub.ptr.sub64 = sub i64 %sub.ptr.lhs.cast62, %sub.ptr.rhs.cast63
  %cmp66 = icmp slt i64 %sub.ptr.sub64, 8
  br i1 %cmp66, label %if.then68, label %if.end70

if.then68:                                        ; preds = %if.end57
  %call69 = tail call %struct.sv** @Perl_stack_grow(%struct.sv** %incdec.ptr61, %struct.sv** %incdec.ptr61, i32 1) #8
  br label %if.end70

if.end70:                                         ; preds = %if.then68, %if.end57
  %sp.5 = phi %struct.sv** [ %call69, %if.then68 ], [ %incdec.ptr61, %if.end57 ]
  %conv71 = sext i32 %tlen to i64
  %call72 = tail call %struct.sv* @Perl_newSVpvn(i8* %tstr, i64 %conv71) #7
  %call73 = tail call %struct.sv* @Perl_sv_2mortal(%struct.sv* %call72) #7
  %incdec.ptr74 = getelementptr inbounds %struct.sv** %sp.5, i64 1
  store %struct.sv* %call73, %struct.sv** %incdec.ptr74, align 8, !tbaa !0
  store %struct.sv** %incdec.ptr74, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %call75 = tail call i32 @Perl_call_method(i8* getelementptr inbounds ([11 x i8]* @.str70, i64 0, i64 0), i32 0) #8
  %16 = load %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %17 = load %struct.sv** %16, align 8, !tbaa !0
  %tobool76 = icmp eq %struct.sv* %17, null
  br i1 %tobool76, label %cond.end115, label %cond.false

cond.false:                                       ; preds = %if.end70
  %sv_flags77 = getelementptr inbounds %struct.sv* %17, i64 0, i32 2
  %18 = load i32* %sv_flags77, align 4, !tbaa !3
  %and78 = and i32 %18, 262144
  %tobool79 = icmp eq i32 %and78, 0
  br i1 %tobool79, label %cond.false91, label %cond.true80

cond.true80:                                      ; preds = %cond.false
  %sv_any = getelementptr inbounds %struct.sv* %17, i64 0, i32 0
  %19 = load i8** %sv_any, align 8, !tbaa !0
  %20 = bitcast i8* %19 to %struct.xpv*
  store %struct.xpv* %20, %struct.xpv** @PL_Xpv, align 8, !tbaa !0
  %tobool81 = icmp eq i8* %19, null
  br i1 %tobool81, label %land.end90, label %land.rhs

land.rhs:                                         ; preds = %cond.true80
  %xpv_cur = getelementptr inbounds i8* %19, i64 8
  %21 = bitcast i8* %xpv_cur to i64*
  %22 = load i64* %21, align 8, !tbaa !5
  %cmp82 = icmp ugt i64 %22, 1
  br i1 %cmp82, label %land.end90, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %tobool85 = icmp eq i64 %22, 0
  br i1 %tobool85, label %land.end90, label %land.rhs86

land.rhs86:                                       ; preds = %lor.rhs
  %xpv_pv = bitcast i8* %19 to i8**
  %23 = load i8** %xpv_pv, align 8, !tbaa !0
  %24 = load i8* %23, align 1, !tbaa !1
  %cmp88 = icmp ne i8 %24, 48
  br label %land.end90

land.end90:                                       ; preds = %lor.rhs, %cond.true80, %land.rhs, %land.rhs86
  %25 = phi i1 [ false, %cond.true80 ], [ true, %land.rhs ], [ false, %lor.rhs ], [ %cmp88, %land.rhs86 ]
  %cond = zext i1 %25 to i8
  br label %cond.end115

cond.false91:                                     ; preds = %cond.false
  %and93 = and i32 %18, 65536
  %tobool94 = icmp eq i32 %and93, 0
  br i1 %tobool94, label %cond.false99, label %cond.true95

cond.true95:                                      ; preds = %cond.false91
  %sv_any96 = getelementptr inbounds %struct.sv* %17, i64 0, i32 0
  %26 = load i8** %sv_any96, align 8, !tbaa !0
  %xiv_iv = getelementptr inbounds i8* %26, i64 24
  %27 = bitcast i8* %xiv_iv to i64*
  %28 = load i64* %27, align 8, !tbaa !5
  %cmp97 = icmp ne i64 %28, 0
  %conv98 = zext i1 %cmp97 to i8
  br label %cond.end115

cond.false99:                                     ; preds = %cond.false91
  %and101 = and i32 %18, 131072
  %tobool102 = icmp eq i32 %and101, 0
  br i1 %tobool102, label %cond.false107, label %cond.true103

cond.true103:                                     ; preds = %cond.false99
  %sv_any104 = getelementptr inbounds %struct.sv* %17, i64 0, i32 0
  %29 = load i8** %sv_any104, align 8, !tbaa !0
  %xnv_nv = getelementptr inbounds i8* %29, i64 32
  %30 = bitcast i8* %xnv_nv to double*
  %31 = load double* %30, align 8, !tbaa !6
  %cmp105 = fcmp une double %31, 0.000000e+00
  %conv106 = zext i1 %cmp105 to i8
  br label %cond.end115

cond.false107:                                    ; preds = %cond.false99
  %call108 = tail call signext i8 @Perl_sv_2bool(%struct.sv* %17) #7
  br label %cond.end115

cond.end115:                                      ; preds = %if.end70, %land.end90, %cond.true103, %cond.false107, %cond.true95
  %cond116 = phi i8 [ 0, %if.end70 ], [ %cond, %land.end90 ], [ %conv98, %cond.true95 ], [ %conv106, %cond.true103 ], [ %call108, %cond.false107 ]
  %sv_flags118 = getelementptr inbounds %struct.sv* %call60, i64 0, i32 2
  %32 = load i32* %sv_flags118, align 4, !tbaa !3
  %and119 = and i32 %32, 65536
  %tobool120 = icmp eq i32 %and119, 0
  br i1 %tobool120, label %cond.false124, label %cond.true121

cond.true121:                                     ; preds = %cond.end115
  %sv_any122 = getelementptr inbounds %struct.sv* %call60, i64 0, i32 0
  %33 = load i8** %sv_any122, align 8, !tbaa !0
  %xiv_iv123 = getelementptr inbounds i8* %33, i64 24
  %34 = bitcast i8* %xiv_iv123 to i64*
  %35 = load i64* %34, align 8, !tbaa !5
  br label %cond.end126

cond.false124:                                    ; preds = %cond.end115
  %call125 = tail call i64 @Perl_sv_2iv(%struct.sv* %call60) #7
  br label %cond.end126

cond.end126:                                      ; preds = %cond.false124, %cond.true121
  %cond127 = phi i64 [ %35, %cond.true121 ], [ %call125, %cond.false124 ]
  %conv128 = trunc i64 %cond127 to i32
  store i32 %conv128, i32* %offset, align 4, !tbaa !3
  store %struct.sv** %16, %struct.sv*** @PL_stack_sp, align 8, !tbaa !0
  %36 = load i32* @PL_tmps_ix, align 4, !tbaa !3
  %37 = load i32* @PL_tmps_floor, align 4, !tbaa !3
  %cmp129 = icmp sgt i32 %36, %37
  br i1 %cmp129, label %if.then131, label %if.end132

if.then131:                                       ; preds = %cond.end126
  tail call void @Perl_free_tmps() #8
  br label %if.end132

if.end132:                                        ; preds = %if.then131, %cond.end126
  tail call void @Perl_pop_scope() #8
  br label %if.end133

if.else:                                          ; preds = %land.lhs.true4, %land.lhs.true, %entry
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([34 x i8]* @.str71, i64 0, i64 0)) #8
  br label %if.end133

if.end133:                                        ; preds = %if.else, %if.end132
  %ret.0 = phi i8 [ %cond116, %if.end132 ], [ 0, %if.else ]
  ret i8 %ret.0
}
