define internal fastcc signext i8 @S_utf8_mg_pos_init(%struct.sv* %sv, %struct.magic** nocapture %mgp, i64** nocapture %cachep, i32 %i, i32* nocapture %offsetp, i8* %s, i8* %start) #0 {
entry:
  %sv_flags = getelementptr inbounds %struct.sv* %sv, i64 0, i32 2
  %0 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %0, 57344
  %tobool = icmp ne i32 %and, 0
  %and2 = and i32 %0, 8388608
  %tobool3 = icmp eq i32 %and2, 0
  %or.cond = and i1 %tobool, %tobool3
  br i1 %or.cond, label %if.then, label %if.end14

if.then:                                          ; preds = %entry
  %1 = load %struct.magic** %mgp, align 8, !tbaa !0
  %tobool4 = icmp eq %struct.magic* %1, null
  br i1 %tobool4, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.then
  %call = tail call %struct.magic* @Perl_sv_magicext(%struct.sv* %sv, %struct.sv* null, i32 119, %struct.mgvtbl* @PL_vtbl_utf8, i8* null, i32 0) #7
  store %struct.magic* %call, %struct.magic** %mgp, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then5
  %2 = phi %struct.magic* [ %1, %if.then ], [ %call, %if.then5 ]
  %mg_ptr = getelementptr inbounds %struct.magic* %2, i64 0, i32 6
  %3 = load i8** %mg_ptr, align 8, !tbaa !0
  %tobool6 = icmp eq i8* %3, null
  br i1 %tobool6, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end
  %4 = bitcast i8* %3 to i64*
  store i64* %4, i64** %cachep, align 8, !tbaa !0
  br label %if.end11

if.else:                                          ; preds = %if.end
  %call9 = tail call i8* @Perl_safesysmalloc(i64 32) #8
  %5 = bitcast i8* %call9 to i64*
  store i64* %5, i64** %cachep, align 8, !tbaa !0
  tail call void @llvm.memset.p0i8.i64(i8* %call9, i8 0, i64 32, i32 1, i1 false)
  %6 = load i64** %cachep, align 8, !tbaa !0
  %7 = bitcast i64* %6 to i8*
  %8 = load %struct.magic** %mgp, align 8, !tbaa !0
  %mg_ptr10 = getelementptr inbounds %struct.magic* %8, i64 0, i32 6
  store i8* %7, i8** %mg_ptr10, align 8, !tbaa !0
  %.pre = load i64** %cachep, align 8, !tbaa !0
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then7
  %9 = phi i64* [ %.pre, %if.else ], [ %4, %if.then7 ]
  %10 = load i32* %offsetp, align 4, !tbaa !3
  %conv = sext i32 %10 to i64
  %idxprom = sext i32 %i to i64
  %arrayidx = getelementptr inbounds i64* %9, i64 %idxprom
  store i64 %conv, i64* %arrayidx, align 8, !tbaa !5
  %sub.ptr.lhs.cast = ptrtoint i8* %s to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %start to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add = add nsw i32 %i, 1
  %idxprom12 = sext i32 %add to i64
  %arrayidx13 = getelementptr inbounds i64* %9, i64 %idxprom12
  store i64 %sub.ptr.sub, i64* %arrayidx13, align 8, !tbaa !5
  br label %if.end14

if.end14:                                         ; preds = %entry, %if.end11
  %found.0 = phi i8 [ 1, %if.end11 ], [ 0, %entry ]
  ret i8 %found.0
}
