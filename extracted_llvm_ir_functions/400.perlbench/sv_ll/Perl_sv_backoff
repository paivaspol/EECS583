define i32 @Perl_sv_backoff(%struct.sv* nocapture %sv) #0 {
entry:
  %sv_any = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %0 = load i8** %sv_any, align 8, !tbaa !0
  %xiv_iv = getelementptr inbounds i8* %0, i64 24
  %1 = bitcast i8* %xiv_iv to i64*
  %2 = load i64* %1, align 8, !tbaa !5
  %tobool = icmp eq i64 %2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %xpv_pv = bitcast i8* %0 to i8**
  %3 = load i8** %xpv_pv, align 8, !tbaa !0
  %xpv_len = getelementptr inbounds i8* %0, i64 16
  %4 = bitcast i8* %xpv_len to i64*
  %5 = load i64* %4, align 8, !tbaa !5
  %add = add i64 %5, %2
  store i64 %add, i64* %4, align 8, !tbaa !5
  %idx.neg = sub i64 0, %2
  %add.ptr = getelementptr inbounds i8* %3, i64 %idx.neg
  store i8* %add.ptr, i8** %xpv_pv, align 8, !tbaa !0
  %6 = load i8** %sv_any, align 8, !tbaa !0
  %xiv_iv10 = getelementptr inbounds i8* %6, i64 24
  %7 = bitcast i8* %xiv_iv10 to i64*
  store i64 0, i64* %7, align 8, !tbaa !5
  %xpv_pv12 = bitcast i8* %6 to i8**
  %8 = load i8** %xpv_pv12, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %6, i64 8
  %9 = bitcast i8* %xpv_cur to i64*
  %10 = load i64* %9, align 8, !tbaa !5
  %add14 = add i64 %10, 1
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* %8, i8* %3, i64 %add14, i32 1, i1 false)
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %sv_flags = getelementptr inbounds %struct.sv* %sv, i64 0, i32 2
  %11 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %11, -2097153
  store i32 %and, i32* %sv_flags, align 4, !tbaa !3
  ret i32 0
}
