define internal fastcc %struct.sv* @S_more_sv() #0 {
entry:
  %0 = load i8** @PL_nice_chunk, align 8, !tbaa !0
  %tobool = icmp eq i8* %0, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %1 = load i32* @PL_nice_chunk_size, align 4, !tbaa !3
  tail call void @Perl_sv_add_arena(i8* %0, i32 %1, i32 0) #7
  store i8* null, i8** @PL_nice_chunk, align 8, !tbaa !0
  store i32 0, i32* @PL_nice_chunk_size, align 4, !tbaa !3
  br label %if.end

if.else:                                          ; preds = %entry
  %call = tail call i8* @Perl_safesysmalloc(i64 4080) #8
  %2 = bitcast i8* %call to %struct.sv*
  %3 = load %struct.sv** @PL_sv_arenaroot, align 8, !tbaa !0
  %4 = bitcast %struct.sv* %3 to i8*
  %sv_any.i = bitcast i8* %call to i8**
  store i8* %4, i8** %sv_any.i, align 8, !tbaa !0
  %sv_refcnt.i = getelementptr inbounds i8* %call, i64 8
  %5 = bitcast i8* %sv_refcnt.i to i32*
  store i32 255, i32* %5, align 4, !tbaa !3
  %sv_flags.i = getelementptr inbounds i8* %call, i64 12
  %6 = bitcast i8* %sv_flags.i to i32*
  store i32 0, i32* %6, align 4, !tbaa !3
  store %struct.sv* %2, %struct.sv** @PL_sv_arenaroot, align 8, !tbaa !0
  %add.ptr.i = getelementptr inbounds i8* %call, i64 16
  %7 = bitcast i8* %add.ptr.i to %struct.sv*
  store %struct.sv* %7, %struct.sv** @PL_sv_root, align 8, !tbaa !0
  %arrayidx.i = getelementptr inbounds i8* %call, i64 4064
  %8 = bitcast i8* %arrayidx.i to %struct.sv*
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %if.else
  %sv.025.i = phi %struct.sv* [ %add.ptr5.i, %while.body.i ], [ %7, %if.else ]
  %add.ptr5.i = getelementptr inbounds %struct.sv* %sv.025.i, i64 1
  %9 = bitcast %struct.sv* %add.ptr5.i to i8*
  %sv_any6.i = getelementptr inbounds %struct.sv* %sv.025.i, i64 0, i32 0
  store i8* %9, i8** %sv_any6.i, align 8, !tbaa !0
  %sv_refcnt7.i = getelementptr inbounds %struct.sv* %sv.025.i, i64 0, i32 1
  store i32 0, i32* %sv_refcnt7.i, align 4, !tbaa !3
  %sv_flags8.i = getelementptr inbounds %struct.sv* %sv.025.i, i64 0, i32 2
  store i32 255, i32* %sv_flags8.i, align 4, !tbaa !3
  %cmp.i = icmp ult %struct.sv* %add.ptr5.i, %8
  br i1 %cmp.i, label %while.body.i, label %Perl_sv_add_arena.exit

Perl_sv_add_arena.exit:                           ; preds = %while.body.i
  %sv_any9.i = getelementptr inbounds %struct.sv* %add.ptr5.i, i64 0, i32 0
  store i8* null, i8** %sv_any9.i, align 8, !tbaa !0
  %sv_flags10.i = getelementptr inbounds %struct.sv* %sv.025.i, i64 1, i32 2
  store i32 255, i32* %sv_flags10.i, align 4, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %Perl_sv_add_arena.exit, %if.then
  %10 = load %struct.sv** @PL_sv_root, align 8, !tbaa !0
  %sv_any = getelementptr inbounds %struct.sv* %10, i64 0, i32 0
  %11 = load i8** %sv_any, align 8, !tbaa !0
  %12 = bitcast i8* %11 to %struct.sv*
  store %struct.sv* %12, %struct.sv** @PL_sv_root, align 8, !tbaa !0
  %13 = load i32* @PL_sv_count, align 4, !tbaa !3
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* @PL_sv_count, align 4, !tbaa !3
  ret %struct.sv* %10
}
