define void @Perl_sv_setpv(%struct.sv* %sv, i8* %ptr) #0 {
entry:
  %sv_flags = getelementptr inbounds %struct.sv* %sv, i64 0, i32 2
  %0 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %0, 9961472
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @Perl_sv_force_normal_flags(%struct.sv* %sv, i32 0) #8
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %tobool1 = icmp eq i8* %ptr, null
  br i1 %tobool1, label %if.then2, label %if.end9

if.then2:                                         ; preds = %if.end
  %1 = load i32* %sv_flags, align 4, !tbaa !3
  %and4 = and i32 %1, 1223753727
  store i32 %and4, i32* %sv_flags, align 4, !tbaa !3
  %and6 = and i32 %1, 2097152
  %tobool7 = icmp eq i32 %and6, 0
  br i1 %tobool7, label %if.end35, label %land.rhs

land.rhs:                                         ; preds = %if.then2
  %call = tail call i32 @Perl_sv_backoff(%struct.sv* %sv) #7
  br label %if.end35

if.end9:                                          ; preds = %if.end
  %call10 = tail call i64 @strlen(i8* %ptr) #8
  %2 = load i32* %sv_flags, align 4, !tbaa !3
  %and12 = and i32 %2, 252
  %cmp = icmp eq i32 %and12, 0
  br i1 %cmp, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %if.end9
  %call13 = tail call signext i8 @Perl_sv_upgrade(%struct.sv* %sv, i32 4) #7
  br label %lor.end

lor.end:                                          ; preds = %if.end9, %lor.rhs
  %sv_any = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %3 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_len = getelementptr inbounds i8* %3, i64 16
  %4 = bitcast i8* %xpv_len to i64*
  %5 = load i64* %4, align 8, !tbaa !5
  %add = add i64 %call10, 1
  %cmp15 = icmp ult i64 %5, %add
  br i1 %cmp15, label %cond.true, label %cond.end

cond.true:                                        ; preds = %lor.end
  %call18 = tail call i8* @Perl_sv_grow(%struct.sv* %sv, i64 %add) #7
  %.pre = load i8** %sv_any, align 8, !tbaa !0
  br label %cond.end

cond.end:                                         ; preds = %lor.end, %cond.true
  %6 = phi i8* [ %3, %lor.end ], [ %.pre, %cond.true ]
  %xpv_pv21 = bitcast i8* %6 to i8**
  %7 = load i8** %xpv_pv21, align 8, !tbaa !0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* %7, i8* %ptr, i64 %add, i32 1, i1 false)
  %8 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %8, i64 8
  %9 = bitcast i8* %xpv_cur to i64*
  store i64 %call10, i64* %9, align 8, !tbaa !5
  %10 = load i32* %sv_flags, align 4, !tbaa !3
  %and25 = and i32 %10, 1760624639
  %or = or i32 %and25, 67371008
  store i32 %or, i32* %sv_flags, align 4, !tbaa !3
  %11 = load i8* @PL_tainting, align 1, !tbaa !1
  %tobool27 = icmp ne i8 %11, 0
  %12 = load i8* @PL_tainted, align 1, !tbaa !1
  %tobool29 = icmp ne i8 %12, 0
  %or.cond = and i1 %tobool27, %tobool29
  br i1 %or.cond, label %if.then32, label %if.end35

if.then32:                                        ; preds = %cond.end
  tail call void @Perl_sv_magic(%struct.sv* %sv, %struct.sv* null, i32 116, i8* null, i32 0) #8
  br label %if.end35

if.end35:                                         ; preds = %land.rhs, %if.then2, %if.then32, %cond.end
  ret void
}
