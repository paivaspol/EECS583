define %struct.sv* @Perl_sv_rvweaken(%struct.sv* %sv) #0 {
entry:
  %sv_flags = getelementptr inbounds %struct.sv* %sv, i64 0, i32 2
  %0 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %0, 118423552
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %and2 = and i32 %0, 524288
  %tobool3 = icmp eq i32 %and2, 0
  br i1 %tobool3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.end
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([28 x i8]* @.str37, i64 0, i64 0)) #8
  br label %if.end28

if.else:                                          ; preds = %if.end
  %and6 = and i32 %0, -2146959360
  %cmp = icmp eq i32 %and6, -2146959360
  br i1 %cmp, label %if.then7, label %if.end28

if.then7:                                         ; preds = %if.else
  %1 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings = getelementptr inbounds %struct.cop* %1, i64 0, i32 14
  %2 = load %struct.sv** %cop_warnings, align 8, !tbaa !0
  %cmp8 = icmp eq %struct.sv* %2, null
  br i1 %cmp8, label %lor.lhs.false17, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then7
  %3 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings9 = getelementptr inbounds %struct.cop* %3, i64 0, i32 14
  %4 = load %struct.sv** %cop_warnings9, align 8, !tbaa !0
  %cmp10 = icmp eq %struct.sv* %4, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp10, label %lor.lhs.false17, label %land.lhs.true11

land.lhs.true11:                                  ; preds = %land.lhs.true
  %5 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings12 = getelementptr inbounds %struct.cop* %5, i64 0, i32 14
  %6 = load %struct.sv** %cop_warnings12, align 8, !tbaa !0
  %cmp13 = icmp eq %struct.sv* %6, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp13, label %if.then25, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true11
  %7 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings14 = getelementptr inbounds %struct.cop* %7, i64 0, i32 14
  %8 = load %struct.sv** %cop_warnings14, align 8, !tbaa !0
  %sv_any = getelementptr inbounds %struct.sv* %8, i64 0, i32 0
  %9 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_pv = bitcast i8* %9 to i8**
  %10 = load i8** %xpv_pv, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i8* %10, i64 3
  %11 = load i8* %arrayidx, align 1, !tbaa !1
  %and15 = and i8 %11, 1
  %tobool16 = icmp eq i8 %and15, 0
  br i1 %tobool16, label %lor.lhs.false17, label %if.then25

lor.lhs.false17:                                  ; preds = %lor.lhs.false, %land.lhs.true, %if.then7
  %12 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings18 = getelementptr inbounds %struct.cop* %12, i64 0, i32 14
  %13 = load %struct.sv** %cop_warnings18, align 8, !tbaa !0
  %cmp19 = icmp eq %struct.sv* %13, null
  br i1 %cmp19, label %land.lhs.true21, label %return

land.lhs.true21:                                  ; preds = %lor.lhs.false17
  %14 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and23 = and i8 %14, 1
  %tobool24 = icmp eq i8 %and23, 0
  br i1 %tobool24, label %return, label %if.then25

if.then25:                                        ; preds = %lor.lhs.false, %land.lhs.true21, %land.lhs.true11
  tail call void (i32, i8*, ...)* @Perl_warner(i32 12, i8* getelementptr inbounds ([26 x i8]* @.str38, i64 0, i64 0)) #8
  br label %return

if.end28:                                         ; preds = %if.else, %if.then4
  %sv_any29 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %15 = load i8** %sv_any29, align 8, !tbaa !0
  %xrv_rv = bitcast i8* %15 to %struct.sv**
  %16 = load %struct.sv** %xrv_rv, align 8, !tbaa !0
  %sv_flags.i = getelementptr inbounds %struct.sv* %16, i64 0, i32 2
  %17 = load i32* %sv_flags.i, align 4, !tbaa !3
  %and.i = and i32 %17, 57344
  %tobool.i = icmp eq i32 %and.i, 0
  br i1 %tobool.i, label %if.else.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end28
  %call.i = tail call %struct.magic* @Perl_mg_find(%struct.sv* %16, i32 60) #8
  %tobool1.i = icmp eq %struct.magic* %call.i, null
  br i1 %tobool1.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %mg_obj.i = getelementptr inbounds %struct.magic* %call.i, i64 0, i32 5
  %18 = load %struct.sv** %mg_obj.i, align 8, !tbaa !0
  %19 = bitcast %struct.sv* %18 to %struct.av*
  br label %if.end.i

if.else.i:                                        ; preds = %land.lhs.true.i, %if.end28
  %call2.i = tail call %struct.av* @Perl_newAV() #8
  %20 = bitcast %struct.av* %call2.i to %struct.sv*
  tail call void @Perl_sv_magic(%struct.sv* %16, %struct.sv* %20, i32 60, i8* null, i32 0) #8
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %av.0.i = phi %struct.av* [ %19, %if.then.i ], [ %call2.i, %if.else.i ]
  %sv_any.i = getelementptr inbounds %struct.av* %av.0.i, i64 0, i32 0
  %21 = load %struct.xpvav** %sv_any.i, align 8, !tbaa !0
  %xav_fill.i = getelementptr inbounds %struct.xpvav* %21, i64 0, i32 1
  %22 = load i64* %xav_fill.i, align 8, !tbaa !5
  %xav_max.i = getelementptr inbounds %struct.xpvav* %21, i64 0, i32 2
  %23 = load i64* %xav_max.i, align 8, !tbaa !5
  %cmp.i = icmp slt i64 %22, %23
  br i1 %cmp.i, label %if.end18.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  %xav_array.i = getelementptr inbounds %struct.xpvav* %21, i64 0, i32 0
  %24 = load i8** %xav_array.i, align 8, !tbaa !0
  %25 = bitcast i8* %24 to %struct.sv**
  %conv.i = trunc i64 %22 to i32
  %cmp8.i40 = icmp sgt i32 %conv.i, -1
  br i1 %cmp8.i40, label %for.body.i.lr.ph, label %for.end.i

for.body.i.lr.ph:                                 ; preds = %if.then4.i
  %sext = shl i64 %22, 32
  %26 = ashr exact i64 %sext, 32
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next = add i64 %indvars.iv, -1
  %27 = trunc i64 %indvars.iv to i32
  %cmp8.i = icmp sgt i32 %27, 0
  br i1 %cmp8.i, label %for.body.i, label %for.end.i

for.body.i:                                       ; preds = %for.body.i.lr.ph, %for.cond.i
  %indvars.iv = phi i64 [ %26, %for.body.i.lr.ph ], [ %indvars.iv.next, %for.cond.i ]
  %arrayidx.i = getelementptr inbounds %struct.sv** %25, i64 %indvars.iv
  %28 = load %struct.sv** %arrayidx.i, align 8, !tbaa !0
  %tobool10.i = icmp eq %struct.sv* %28, null
  br i1 %tobool10.i, label %if.then11.i, label %for.cond.i

if.then11.i:                                      ; preds = %for.body.i
  store %struct.sv* %sv, %struct.sv** %arrayidx.i, align 8, !tbaa !0
  br label %S_sv_add_backref.exit

for.end.i:                                        ; preds = %for.cond.i, %if.then4.i
  %add.i = add nsw i64 %22, 1
  %conv17.i = trunc i64 %add.i to i32
  tail call void @Perl_av_extend(%struct.av* %av.0.i, i32 %conv17.i) #8
  %.pre = load %struct.xpvav** %sv_any.i, align 8, !tbaa !0
  %xav_fill20.i.phi.trans.insert = getelementptr inbounds %struct.xpvav* %.pre, i64 0, i32 1
  %.pre43 = load i64* %xav_fill20.i.phi.trans.insert, align 8, !tbaa !5
  br label %if.end18.i

if.end18.i:                                       ; preds = %for.end.i, %if.end.i
  %29 = phi i64 [ %.pre43, %for.end.i ], [ %22, %if.end.i ]
  %30 = phi %struct.xpvav* [ %.pre, %for.end.i ], [ %21, %if.end.i ]
  %xav_fill20.i = getelementptr inbounds %struct.xpvav* %30, i64 0, i32 1
  %inc.i = add nsw i64 %29, 1
  store i64 %inc.i, i64* %xav_fill20.i, align 8, !tbaa !5
  %xav_array22.i = getelementptr inbounds %struct.xpvav* %30, i64 0, i32 0
  %31 = load i8** %xav_array22.i, align 8, !tbaa !0
  %32 = bitcast i8* %31 to %struct.sv**
  %arrayidx23.i = getelementptr inbounds %struct.sv** %32, i64 %inc.i
  store %struct.sv* %sv, %struct.sv** %arrayidx23.i, align 8, !tbaa !0
  br label %S_sv_add_backref.exit

S_sv_add_backref.exit:                            ; preds = %if.then11.i, %if.end18.i
  %33 = load i32* %sv_flags, align 4, !tbaa !3
  %or = or i32 %33, -2146959360
  store i32 %or, i32* %sv_flags, align 4, !tbaa !3
  tail call void @Perl_sv_free(%struct.sv* %16) #7
  br label %return

return:                                           ; preds = %lor.lhs.false17, %if.then25, %land.lhs.true21, %entry, %S_sv_add_backref.exit
  ret %struct.sv* %sv
}
