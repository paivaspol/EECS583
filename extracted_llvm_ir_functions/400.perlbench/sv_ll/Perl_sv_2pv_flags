define i8* @Perl_sv_2pv_flags(%struct.sv* %sv, i64* nocapture %lp, i32 %flags) #0 {
entry:
  %tbuf = alloca [64 x i8], align 16
  %reflags = alloca [6 x i8], align 1
  %buf = alloca [22 x i8], align 16
  %0 = getelementptr inbounds [64 x i8]* %tbuf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 64, i8* %0) #3
  %tobool = icmp eq %struct.sv* %sv, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i64 0, i64* %lp, align 8, !tbaa !5
  br label %cleanup

if.end:                                           ; preds = %entry
  %sv_flags = getelementptr inbounds %struct.sv* %sv, i64 0, i32 2
  %1 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %1, 8192
  %tobool1 = icmp eq i32 %and, 0
  br i1 %tobool1, label %if.end66, label %if.then2

if.then2:                                         ; preds = %if.end
  %and3 = and i32 %flags, 2
  %tobool4 = icmp eq i32 %and3, 0
  br i1 %tobool4, label %if.end6, label %if.then5

if.then5:                                         ; preds = %if.then2
  %call = call i32 @Perl_mg_get(%struct.sv* %sv) #8
  %.pre753 = load i32* %sv_flags, align 4, !tbaa !3
  br label %if.end6

if.end6:                                          ; preds = %if.then2, %if.then5
  %2 = phi i32 [ %1, %if.then2 ], [ %.pre753, %if.then5 ]
  %and8 = and i32 %2, 67108864
  %tobool9 = icmp eq i32 %and8, 0
  br i1 %tobool9, label %if.end12, label %if.then10

if.then10:                                        ; preds = %if.end6
  %sv_any = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %3 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %3, i64 8
  %4 = bitcast i8* %xpv_cur to i64*
  %5 = load i64* %4, align 8, !tbaa !5
  store i64 %5, i64* %lp, align 8, !tbaa !5
  %xpv_pv = bitcast i8* %3 to i8**
  %6 = load i8** %xpv_pv, align 8, !tbaa !0
  br label %cleanup

if.end12:                                         ; preds = %if.end6
  %and14 = and i32 %2, 16777216
  %tobool15 = icmp eq i32 %and14, 0
  br i1 %tobool15, label %if.end26, label %if.then16

if.then16:                                        ; preds = %if.end12
  %tobool19 = icmp slt i32 %2, 0
  %sv_any21 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %7 = load i8** %sv_any21, align 8, !tbaa !0
  %xuv_uv = getelementptr inbounds i8* %7, i64 24
  %8 = bitcast i8* %xuv_uv to i64*
  %9 = load i64* %8, align 8, !tbaa !5
  br i1 %tobool19, label %if.then20, label %if.else

if.then20:                                        ; preds = %if.then16
  %call22 = call i32 (i8*, i8*, ...)* @sprintf(i8* %0, i8* getelementptr inbounds ([4 x i8]* @.str8, i64 0, i64 0), i64 %9) #8
  br label %tokensave

if.else:                                          ; preds = %if.then16
  %call24 = call i32 (i8*, i8*, ...)* @sprintf(i8* %0, i8* getelementptr inbounds ([4 x i8]* @.str9, i64 0, i64 0), i64 %9) #8
  br label %tokensave

if.end26:                                         ; preds = %if.end12
  %and28 = and i32 %2, 33554432
  %tobool29 = icmp eq i32 %and28, 0
  br i1 %tobool29, label %if.end33, label %if.then30

if.then30:                                        ; preds = %if.end26
  %sv_any31 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %10 = load i8** %sv_any31, align 8, !tbaa !0
  %xnv_nv = getelementptr inbounds i8* %10, i64 32
  %11 = bitcast i8* %xnv_nv to double*
  %12 = load double* %11, align 8, !tbaa !6
  %call32 = call i8* @gcvt(double %12, i32 15, i8* %0) #8
  br label %tokensave

if.end33:                                         ; preds = %if.end26
  %and35 = and i32 %2, 524288
  %tobool36 = icmp eq i32 %and35, 0
  br i1 %tobool36, label %if.then37, label %if.end66

if.then37:                                        ; preds = %if.end33
  %and39 = and i32 %2, 512
  %tobool40 = icmp eq i32 %and39, 0
  br i1 %tobool40, label %if.then41, label %if.end64

if.then41:                                        ; preds = %if.then37
  %13 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings = getelementptr inbounds %struct.cop* %13, i64 0, i32 14
  %14 = load %struct.sv** %cop_warnings, align 8, !tbaa !0
  %cmp = icmp eq %struct.sv* %14, null
  br i1 %cmp, label %lor.lhs.false52, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then41
  %15 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings42 = getelementptr inbounds %struct.cop* %15, i64 0, i32 14
  %16 = load %struct.sv** %cop_warnings42, align 8, !tbaa !0
  %cmp43 = icmp eq %struct.sv* %16, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp43, label %lor.lhs.false52, label %land.lhs.true44

land.lhs.true44:                                  ; preds = %land.lhs.true
  %17 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings45 = getelementptr inbounds %struct.cop* %17, i64 0, i32 14
  %18 = load %struct.sv** %cop_warnings45, align 8, !tbaa !0
  %cmp46 = icmp eq %struct.sv* %18, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp46, label %land.lhs.true60, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true44
  %19 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings47 = getelementptr inbounds %struct.cop* %19, i64 0, i32 14
  %20 = load %struct.sv** %cop_warnings47, align 8, !tbaa !0
  %sv_any48 = getelementptr inbounds %struct.sv* %20, i64 0, i32 0
  %21 = load i8** %sv_any48, align 8, !tbaa !0
  %xpv_pv49 = bitcast i8* %21 to i8**
  %22 = load i8** %xpv_pv49, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i8* %22, i64 10
  %23 = load i8* %arrayidx, align 1, !tbaa !1
  %and50 = and i8 %23, 4
  %tobool51 = icmp eq i8 %and50, 0
  br i1 %tobool51, label %lor.lhs.false52, label %land.lhs.true60

lor.lhs.false52:                                  ; preds = %lor.lhs.false, %land.lhs.true, %if.then41
  %24 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings53 = getelementptr inbounds %struct.cop* %24, i64 0, i32 14
  %25 = load %struct.sv** %cop_warnings53, align 8, !tbaa !0
  %cmp54 = icmp eq %struct.sv* %25, null
  br i1 %cmp54, label %land.lhs.true56, label %if.end64

land.lhs.true56:                                  ; preds = %lor.lhs.false52
  %26 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and58 = and i8 %26, 1
  %tobool59 = icmp eq i8 %and58, 0
  %27 = load i32* @PL_localizing, align 4, !tbaa !3
  %tobool61 = icmp ne i32 %27, 0
  %or.cond = or i1 %tobool59, %tobool61
  br i1 %or.cond, label %if.end64, label %if.then62

land.lhs.true60:                                  ; preds = %lor.lhs.false, %land.lhs.true44
  %.old = load i32* @PL_localizing, align 4, !tbaa !3
  %tobool61.old = icmp eq i32 %.old, 0
  br i1 %tobool61.old, label %if.then62, label %if.end64

if.then62:                                        ; preds = %land.lhs.true60, %land.lhs.true56
  call void @Perl_report_uninit() #7
  br label %if.end64

if.end64:                                         ; preds = %land.lhs.true60, %if.then37, %lor.lhs.false52, %if.then62, %land.lhs.true56
  store i64 0, i64* %lp, align 8, !tbaa !5
  br label %cleanup

if.end66:                                         ; preds = %if.end33, %if.end
  %.pr = phi i32 [ %2, %if.end33 ], [ %1, %if.end ]
  %and68 = and i32 %.pr, 9961472
  %tobool69 = icmp eq i32 %and68, 0
  br i1 %tobool69, label %if.end320, label %if.then70

if.then70:                                        ; preds = %if.end66
  %and72 = and i32 %.pr, 524288
  %tobool73 = icmp eq i32 %and72, 0
  br i1 %tobool73, label %if.end281, label %if.then74

if.then74:                                        ; preds = %if.then70
  %and76 = and i32 %.pr, 268435456
  %tobool77 = icmp eq i32 %and76, 0
  br i1 %tobool77, label %if.end110, label %land.lhs.true78

land.lhs.true78:                                  ; preds = %if.then74
  %call79 = call %struct.sv* @Perl_amagic_call(%struct.sv* %sv, %struct.sv* @PL_sv_undef, i32 4, i32 9) #8
  %tobool80 = icmp eq %struct.sv* %call79, null
  br i1 %tobool80, label %if.end110, label %land.lhs.true81

land.lhs.true81:                                  ; preds = %land.lhs.true78
  %sv_flags82 = getelementptr inbounds %struct.sv* %call79, i64 0, i32 2
  %28 = load i32* %sv_flags82, align 4, !tbaa !3
  %and83 = and i32 %28, 524288
  %tobool84 = icmp eq i32 %and83, 0
  br i1 %tobool84, label %if.then91, label %lor.lhs.false85

lor.lhs.false85:                                  ; preds = %land.lhs.true81
  %sv_any86 = getelementptr inbounds %struct.sv* %call79, i64 0, i32 0
  %29 = load i8** %sv_any86, align 8, !tbaa !0
  %xrv_rv = bitcast i8* %29 to %struct.sv**
  %30 = load %struct.sv** %xrv_rv, align 8, !tbaa !0
  %sv_any87 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %31 = load i8** %sv_any87, align 8, !tbaa !0
  %xrv_rv88 = bitcast i8* %31 to %struct.sv**
  %32 = load %struct.sv** %xrv_rv88, align 8, !tbaa !0
  %cmp89 = icmp eq %struct.sv* %30, %32
  br i1 %cmp89, label %if.end110, label %if.then91

if.then91:                                        ; preds = %lor.lhs.false85, %land.lhs.true81
  %and93 = and i32 %28, 262144
  %cmp94 = icmp eq i32 %and93, 0
  br i1 %cmp94, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then91
  %sv_any96 = getelementptr inbounds %struct.sv* %call79, i64 0, i32 0
  %33 = load i8** %sv_any96, align 8, !tbaa !0
  %xpv_cur97 = getelementptr inbounds i8* %33, i64 8
  %34 = bitcast i8* %xpv_cur97 to i64*
  %35 = load i64* %34, align 8, !tbaa !5
  store i64 %35, i64* %lp, align 8, !tbaa !5
  %xpv_pv99 = bitcast i8* %33 to i8**
  %36 = load i8** %xpv_pv99, align 8, !tbaa !0
  br label %cond.end

cond.false:                                       ; preds = %if.then91
  %call100 = call i8* @Perl_sv_2pv_flags(%struct.sv* %call79, i64* %lp, i32 2) #7
  %.pre752 = load i32* %sv_flags82, align 4, !tbaa !3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %37 = phi i32 [ %28, %cond.true ], [ %.pre752, %cond.false ]
  %cond = phi i8* [ %36, %cond.true ], [ %call100, %cond.false ]
  %and102 = and i32 %37, 536870912
  %tobool103 = icmp eq i32 %and102, 0
  %38 = load i32* %sv_flags, align 4, !tbaa !3
  %and108 = and i32 %38, -536870913
  %or = or i32 %38, 536870912
  %storemerge716 = select i1 %tobool103, i32 %and108, i32 %or
  store i32 %storemerge716, i32* %sv_flags, align 4, !tbaa !3
  br label %cleanup

if.end110:                                        ; preds = %land.lhs.true78, %if.then74, %lor.lhs.false85
  %sv_any111 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %39 = load i8** %sv_any111, align 8, !tbaa !0
  %xrv_rv112 = bitcast i8* %39 to %struct.sv**
  %40 = load %struct.sv** %xrv_rv112, align 8, !tbaa !0
  %tobool113 = icmp eq %struct.sv* %40, null
  br i1 %tobool113, label %if.then114, label %if.else115

if.then114:                                       ; preds = %if.end110
  store i64 7, i64* %lp, align 8, !tbaa !5
  br label %cleanup

if.else115:                                       ; preds = %if.end110
  %sv_flags116 = getelementptr inbounds %struct.sv* %40, i64 0, i32 2
  %41 = load i32* %sv_flags116, align 4, !tbaa !3
  %and117 = and i32 %41, 255
  switch i32 %and117, label %sw.default [
    i32 7, label %sw.bb
    i32 0, label %sw.bb234
    i32 1, label %sw.bb234
    i32 2, label %sw.bb234
    i32 3, label %sw.bb234
    i32 4, label %sw.bb234
    i32 5, label %sw.bb234
    i32 6, label %sw.bb234
    i32 8, label %sw.bb234
    i32 9, label %sw.bb241
    i32 10, label %sw.epilog
    i32 11, label %sw.bb260
    i32 12, label %sw.bb261
    i32 13, label %sw.bb262
    i32 14, label %sw.bb263
    i32 15, label %sw.bb264
  ]

sw.bb:                                            ; preds = %if.else115
  %and119 = and i32 %41, 118484992
  %cmp120 = icmp eq i32 %and119, 20480
  br i1 %cmp120, label %land.lhs.true122, label %sw.bb234

land.lhs.true122:                                 ; preds = %sw.bb
  %call123 = call %struct.magic* @Perl_mg_find(%struct.sv* %40, i32 114) #8
  %tobool124 = icmp eq %struct.magic* %call123, null
  br i1 %tobool124, label %land.lhs.true122.sw.bb234_crit_edge, label %if.then125

land.lhs.true122.sw.bb234_crit_edge:              ; preds = %land.lhs.true122
  %.pre755 = load i32* %sv_flags116, align 4, !tbaa !3
  br label %sw.bb234

if.then125:                                       ; preds = %land.lhs.true122
  %mg_obj = getelementptr inbounds %struct.magic* %call123, i64 0, i32 5
  %42 = load %struct.sv** %mg_obj, align 8, !tbaa !0
  %mg_ptr = getelementptr inbounds %struct.magic* %call123, i64 0, i32 6
  %43 = load i8** %mg_ptr, align 8, !tbaa !0
  %tobool126 = icmp eq i8* %43, null
  %44 = getelementptr inbounds %struct.sv* %42, i64 5, i32 2
  br i1 %tobool126, label %if.then127, label %if.then125.if.end216_crit_edge

if.then125.if.end216_crit_edge:                   ; preds = %if.then125
  %mg_len230.pre = getelementptr inbounds %struct.magic* %call123, i64 0, i32 7
  br label %if.end216

if.then127:                                       ; preds = %if.then125
  %45 = load i32* %44, align 4, !tbaa !3
  %and129 = lshr i32 %45, 12
  %conv130 = and i32 %and129, 15
  br label %while.body

while.body:                                       ; preds = %if.then127, %if.end140
  %46 = phi i8 [ 109, %if.then127 ], [ %47, %if.end140 ]
  %incdec.ptr746 = phi i8* [ getelementptr inbounds ([5 x i8]* @.str11, i64 0, i64 1), %if.then127 ], [ %incdec.ptr, %if.end140 ]
  %reganch.0745 = phi i32 [ %conv130, %if.then127 ], [ %conv132, %if.end140 ]
  %right.0744 = phi i32 [ 4, %if.then127 ], [ %right.1, %if.end140 ]
  %left.0743 = phi i32 [ 0, %if.then127 ], [ %left.1, %if.end140 ]
  %and133 = and i32 %reganch.0745, 1
  %tobool134 = icmp eq i32 %and133, 0
  br i1 %tobool134, label %if.else137, label %if.then135

if.then135:                                       ; preds = %while.body
  %inc = add nsw i32 %left.0743, 1
  %idxprom = sext i32 %left.0743 to i64
  %arrayidx136 = getelementptr inbounds [6 x i8]* %reflags, i64 0, i64 %idxprom
  store i8 %46, i8* %arrayidx136, align 1, !tbaa !1
  br label %if.end140

if.else137:                                       ; preds = %while.body
  %dec = add nsw i32 %right.0744, -1
  %idxprom138 = sext i32 %right.0744 to i64
  %arrayidx139 = getelementptr inbounds [6 x i8]* %reflags, i64 0, i64 %idxprom138
  store i8 %46, i8* %arrayidx139, align 1, !tbaa !1
  br label %if.end140

if.end140:                                        ; preds = %if.else137, %if.then135
  %left.1 = phi i32 [ %inc, %if.then135 ], [ %left.0743, %if.else137 ]
  %right.1 = phi i32 [ %right.0744, %if.then135 ], [ %dec, %if.else137 ]
  %conv132 = lshr i32 %reganch.0745, 1
  %incdec.ptr = getelementptr inbounds i8* %incdec.ptr746, i64 1
  %47 = load i8* %incdec.ptr746, align 1, !tbaa !1
  %exitcond = icmp eq i8* %incdec.ptr, getelementptr inbounds ([5 x i8]* @.str11, i64 1, i64 0)
  br i1 %exitcond, label %while.end, label %while.body

while.end:                                        ; preds = %if.end140
  %cmp144 = icmp eq i32 %left.1, 4
  br i1 %cmp144, label %if.end149, label %if.then146

if.then146:                                       ; preds = %while.end
  %idxprom147 = sext i32 %left.1 to i64
  %arrayidx148 = getelementptr inbounds [6 x i8]* %reflags, i64 0, i64 %idxprom147
  store i8 45, i8* %arrayidx148, align 1, !tbaa !1
  br label %if.end149

if.end149:                                        ; preds = %while.end, %if.then146
  %left.2 = phi i32 [ 5, %if.then146 ], [ 4, %while.end ]
  %48 = getelementptr inbounds %struct.sv* %42, i64 4, i32 2
  %49 = load i32* %48, align 4, !tbaa !3
  %add = add i32 %left.2, 4
  %add150 = add i32 %add, %49
  %mg_len = getelementptr inbounds %struct.magic* %call123, i64 0, i32 7
  store i32 %add150, i32* %mg_len, align 4, !tbaa !3
  %50 = load i32* %44, align 4, !tbaa !3
  %and152 = and i32 %50, 32768
  %tobool153 = icmp eq i32 %and152, 0
  %.pre756 = getelementptr inbounds %struct.sv* %42, i64 2, i32 0
  br i1 %tobool153, label %if.end175, label %if.then154

if.then154:                                       ; preds = %if.end149
  %51 = load i8** %.pre756, align 8, !tbaa !0
  %52 = load i32* %48, align 4, !tbaa !3
  %idx.ext = sext i32 %52 to i64
  %add.ptr = getelementptr inbounds i8* %51, i64 %idx.ext
  br label %while.cond156

while.cond156:                                    ; preds = %if.end166, %if.then154
  %endptr.0 = phi i8* [ %add.ptr, %if.then154 ], [ %incdec.ptr161, %if.end166 ]
  %cmp158 = icmp ult i8* %endptr.0, %51
  br i1 %cmp158, label %if.end175, label %while.body160

while.body160:                                    ; preds = %while.cond156
  %53 = load i8* %endptr.0, align 1, !tbaa !1
  %cmp163 = icmp eq i8 %53, 10
  br i1 %cmp163, label %if.end175, label %if.end166

if.end166:                                        ; preds = %while.body160
  %incdec.ptr161 = getelementptr inbounds i8* %endptr.0, i64 -1
  %cmp168 = icmp eq i8 %53, 35
  br i1 %cmp168, label %if.then170, label %while.cond156

if.then170:                                       ; preds = %if.end166
  %inc172 = add nsw i32 %add150, 1
  store i32 %inc172, i32* %mg_len, align 4, !tbaa !3
  br label %if.end175

if.end175:                                        ; preds = %if.end149, %while.cond156, %while.body160, %if.then170
  %54 = phi i32 [ %inc172, %if.then170 ], [ %add150, %while.body160 ], [ %add150, %while.cond156 ], [ %add150, %if.end149 ]
  %need_newline.0 = phi i1 [ true, %if.then170 ], [ false, %while.body160 ], [ false, %while.cond156 ], [ false, %if.end149 ]
  %add177 = add i32 %left.2, 1
  %add178 = add i32 %add177, %54
  %conv179 = sext i32 %add178 to i64
  %call180 = call i8* @Perl_safesysmalloc(i64 %conv179) #8
  store i8* %call180, i8** %mg_ptr, align 8, !tbaa !0
  %55 = bitcast i8* %call180 to i16*
  store i16 16168, i16* %55, align 1
  %56 = load i8** %mg_ptr, align 8, !tbaa !0
  %add.ptr184 = getelementptr inbounds i8* %56, i64 2
  %arraydecay185 = getelementptr inbounds [6 x i8]* %reflags, i64 0, i64 0
  %conv186741 = zext i32 %left.2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr184, i8* %arraydecay185, i64 %conv186741, i32 1, i1 false)
  %57 = load i8** %mg_ptr, align 8, !tbaa !0
  %add.ptr190.sum742 = or i64 %conv186741, 2
  %add.ptr191 = getelementptr inbounds i8* %57, i64 %add.ptr190.sum742
  store i8 58, i8* %add.ptr191, align 1
  %58 = load i8** %mg_ptr, align 8, !tbaa !0
  %add.ptr193.sum = add i64 %conv186741, 3
  %add.ptr195 = getelementptr inbounds i8* %58, i64 %add.ptr193.sum
  %59 = load i8** %.pre756, align 8, !tbaa !0
  %60 = load i32* %48, align 4, !tbaa !3
  %conv198 = sext i32 %60 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr195, i8* %59, i64 %conv198, i32 1, i1 false)
  br i1 %need_newline.0, label %if.then201, label %if.end206

if.then201:                                       ; preds = %if.end175
  %61 = load i32* %mg_len, align 4, !tbaa !3
  %sub = add nsw i32 %61, -2
  %idxprom203 = sext i32 %sub to i64
  %62 = load i8** %mg_ptr, align 8, !tbaa !0
  %arrayidx205 = getelementptr inbounds i8* %62, i64 %idxprom203
  store i8 10, i8* %arrayidx205, align 1, !tbaa !1
  br label %if.end206

if.end206:                                        ; preds = %if.then201, %if.end175
  %63 = load i32* %mg_len, align 4, !tbaa !3
  %sub208 = add nsw i32 %63, -1
  %idxprom209 = sext i32 %sub208 to i64
  %64 = load i8** %mg_ptr, align 8, !tbaa !0
  %arrayidx211 = getelementptr inbounds i8* %64, i64 %idxprom209
  store i8 41, i8* %arrayidx211, align 1, !tbaa !1
  %65 = load i32* %mg_len, align 4, !tbaa !3
  %idxprom213 = sext i32 %65 to i64
  %66 = load i8** %mg_ptr, align 8, !tbaa !0
  %arrayidx215 = getelementptr inbounds i8* %66, i64 %idxprom213
  store i8 0, i8* %arrayidx215, align 1, !tbaa !1
  %.pre751 = load i8** %mg_ptr, align 8, !tbaa !0
  br label %if.end216

if.end216:                                        ; preds = %if.then125.if.end216_crit_edge, %if.end206
  %mg_len230.pre-phi = phi i32* [ %mg_len230.pre, %if.then125.if.end216_crit_edge ], [ %mg_len, %if.end206 ]
  %67 = phi i8* [ %43, %if.then125.if.end216_crit_edge ], [ %.pre751, %if.end206 ]
  %program = getelementptr inbounds %struct.sv* %42, i64 6
  %arrayidx217 = bitcast %struct.sv* %program to %struct.regnode*
  %next_off = getelementptr inbounds %struct.regnode* %arrayidx217, i64 0, i32 2
  %68 = load i16* %next_off, align 2, !tbaa !4
  %conv218 = zext i16 %68 to i32
  %69 = load i32* @PL_reginterp_cnt, align 4, !tbaa !3
  %add219 = add nsw i32 %69, %conv218
  store i32 %add219, i32* @PL_reginterp_cnt, align 4, !tbaa !3
  %70 = load i32* %44, align 4, !tbaa !3
  %and221 = and i32 %70, 65536
  %tobool222 = icmp eq i32 %and221, 0
  %71 = load i32* %sv_flags, align 4, !tbaa !3
  %and228 = and i32 %71, -536870913
  %or225 = or i32 %71, 536870912
  %storemerge714 = select i1 %tobool222, i32 %and228, i32 %or225
  store i32 %storemerge714, i32* %sv_flags, align 4, !tbaa !3
  %72 = load i32* %mg_len230.pre-phi, align 4, !tbaa !3
  %conv231 = sext i32 %72 to i64
  store i64 %conv231, i64* %lp, align 8, !tbaa !5
  br label %cleanup

sw.bb234:                                         ; preds = %land.lhs.true122.sw.bb234_crit_edge, %sw.bb, %if.else115, %if.else115, %if.else115, %if.else115, %if.else115, %if.else115, %if.else115, %if.else115
  %73 = phi i32 [ %.pre755, %land.lhs.true122.sw.bb234_crit_edge ], [ %41, %sw.bb ], [ %41, %if.else115 ], [ %41, %if.else115 ], [ %41, %if.else115 ], [ %41, %if.else115 ], [ %41, %if.else115 ], [ %41, %if.else115 ], [ %41, %if.else115 ], [ %41, %if.else115 ]
  %and236 = and i32 %73, 524288
  %tobool237 = icmp eq i32 %and236, 0
  %. = select i1 %tobool237, i8* getelementptr inbounds ([7 x i8]* @.str15, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str14, i64 0, i64 0)
  br label %sw.epilog

sw.bb241:                                         ; preds = %if.else115
  %and243 = and i32 %41, 524288
  %tobool244 = icmp eq i32 %and243, 0
  br i1 %tobool244, label %cond.false246, label %sw.epilog

cond.false246:                                    ; preds = %sw.bb241
  %sv_any247 = getelementptr inbounds %struct.sv* %40, i64 0, i32 0
  %74 = load i8** %sv_any247, align 8, !tbaa !0
  %75 = getelementptr inbounds i8* %74, i64 80
  %76 = load i8* %75, align 1, !tbaa !1
  %cmp249 = icmp eq i8 %76, 116
  br i1 %cmp249, label %sw.epilog, label %lor.rhs

lor.rhs:                                          ; preds = %cond.false246
  %cmp254 = icmp eq i8 %76, 84
  %phitmp = select i1 %cmp254, i8* getelementptr inbounds ([7 x i8]* @.str15, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str16, i64 0, i64 0)
  br label %sw.epilog

sw.bb260:                                         ; preds = %if.else115
  br label %sw.epilog

sw.bb261:                                         ; preds = %if.else115
  br label %sw.epilog

sw.bb262:                                         ; preds = %if.else115
  br label %sw.epilog

sw.bb263:                                         ; preds = %if.else115
  br label %sw.epilog

sw.bb264:                                         ; preds = %if.else115
  br label %sw.epilog

sw.default:                                       ; preds = %if.else115
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.else115, %sw.bb241, %lor.rhs, %cond.false246, %sw.bb234, %sw.default, %sw.bb264, %sw.bb263, %sw.bb262, %sw.bb261, %sw.bb260
  %s.0 = phi i8* [ getelementptr inbounds ([8 x i8]* @.str23, i64 0, i64 0), %sw.default ], [ getelementptr inbounds ([3 x i8]* @.str22, i64 0, i64 0), %sw.bb264 ], [ getelementptr inbounds ([7 x i8]* @.str21, i64 0, i64 0), %sw.bb263 ], [ getelementptr inbounds ([5 x i8]* @.str20, i64 0, i64 0), %sw.bb262 ], [ getelementptr inbounds ([5 x i8]* @.str19, i64 0, i64 0), %sw.bb261 ], [ getelementptr inbounds ([5 x i8]* @.str18, i64 0, i64 0), %sw.bb260 ], [ %., %sw.bb234 ], [ getelementptr inbounds ([4 x i8]* @.str14, i64 0, i64 0), %sw.bb241 ], [ getelementptr inbounds ([7 x i8]* @.str15, i64 0, i64 0), %cond.false246 ], [ %phitmp, %lor.rhs ], [ getelementptr inbounds ([6 x i8]* @.str17, i64 0, i64 0), %if.else115 ]
  %call265 = call %struct.sv* @Perl_newSV(i64 0) #7
  %77 = load i32* %sv_flags116, align 4, !tbaa !3
  %and267 = and i32 %77, 4096
  %tobool268 = icmp eq i32 %and267, 0
  br i1 %tobool268, label %if.else277, label %if.then269

if.then269:                                       ; preds = %sw.epilog
  %sv_any270 = getelementptr inbounds %struct.sv* %40, i64 0, i32 0
  %78 = load i8** %sv_any270, align 8, !tbaa !0
  %xmg_stash = getelementptr inbounds i8* %78, i64 48
  %79 = bitcast i8* %xmg_stash to %struct.hv**
  %80 = load %struct.hv** %79, align 8, !tbaa !0
  %sv_any271 = getelementptr inbounds %struct.hv* %80, i64 0, i32 0
  %81 = load %struct.xpvhv** %sv_any271, align 8, !tbaa !0
  %xhv_name = getelementptr inbounds %struct.xpvhv* %81, i64 0, i32 10
  %82 = load i8** %xhv_name, align 8, !tbaa !0
  %tobool272 = icmp ne i8* %82, null
  %cond276 = select i1 %tobool272, i8* %82, i8* getelementptr inbounds ([9 x i8]* @.str25, i64 0, i64 0)
  %83 = ptrtoint %struct.sv* %40 to i64
  call void (%struct.sv*, i8*, ...)* @Perl_sv_setpvf(%struct.sv* %call265, i8* getelementptr inbounds ([13 x i8]* @.str24, i64 0, i64 0), i8* %cond276, i8* %s.0, i64 %83) #7
  br label %tokensaveref

if.else277:                                       ; preds = %sw.epilog
  %84 = ptrtoint %struct.sv* %40 to i64
  call void (%struct.sv*, i8*, ...)* @Perl_sv_setpvf(%struct.sv* %call265, i8* getelementptr inbounds ([10 x i8]* @.str26, i64 0, i64 0), i8* %s.0, i64 %84) #7
  br label %tokensaveref

if.end281:                                        ; preds = %if.then70
  %85 = and i32 %.pr, 126812160
  %86 = icmp eq i32 %85, 8388608
  br i1 %86, label %if.then289, label %if.end320

if.then289:                                       ; preds = %if.end281
  %87 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings290 = getelementptr inbounds %struct.cop* %87, i64 0, i32 14
  %88 = load %struct.sv** %cop_warnings290, align 8, !tbaa !0
  %cmp291 = icmp eq %struct.sv* %88, null
  br i1 %cmp291, label %lor.lhs.false309, label %land.lhs.true293

land.lhs.true293:                                 ; preds = %if.then289
  %89 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings294 = getelementptr inbounds %struct.cop* %89, i64 0, i32 14
  %90 = load %struct.sv** %cop_warnings294, align 8, !tbaa !0
  %cmp295 = icmp eq %struct.sv* %90, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp295, label %lor.lhs.false309, label %land.lhs.true297

land.lhs.true297:                                 ; preds = %land.lhs.true293
  %91 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings298 = getelementptr inbounds %struct.cop* %91, i64 0, i32 14
  %92 = load %struct.sv** %cop_warnings298, align 8, !tbaa !0
  %cmp299 = icmp eq %struct.sv* %92, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp299, label %if.then317, label %lor.lhs.false301

lor.lhs.false301:                                 ; preds = %land.lhs.true297
  %93 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings302 = getelementptr inbounds %struct.cop* %93, i64 0, i32 14
  %94 = load %struct.sv** %cop_warnings302, align 8, !tbaa !0
  %sv_any303 = getelementptr inbounds %struct.sv* %94, i64 0, i32 0
  %95 = load i8** %sv_any303, align 8, !tbaa !0
  %xpv_pv304 = bitcast i8* %95 to i8**
  %96 = load i8** %xpv_pv304, align 8, !tbaa !0
  %arrayidx305 = getelementptr inbounds i8* %96, i64 10
  %97 = load i8* %arrayidx305, align 1, !tbaa !1
  %and307 = and i8 %97, 4
  %tobool308 = icmp eq i8 %and307, 0
  br i1 %tobool308, label %lor.lhs.false309, label %if.then317

lor.lhs.false309:                                 ; preds = %lor.lhs.false301, %land.lhs.true293, %if.then289
  %98 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings310 = getelementptr inbounds %struct.cop* %98, i64 0, i32 14
  %99 = load %struct.sv** %cop_warnings310, align 8, !tbaa !0
  %cmp311 = icmp eq %struct.sv* %99, null
  br i1 %cmp311, label %land.lhs.true313, label %if.end318

land.lhs.true313:                                 ; preds = %lor.lhs.false309
  %100 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and315 = and i8 %100, 1
  %tobool316 = icmp eq i8 %and315, 0
  br i1 %tobool316, label %if.end318, label %if.then317

if.then317:                                       ; preds = %lor.lhs.false301, %land.lhs.true313, %land.lhs.true297
  call void @Perl_report_uninit() #7
  br label %if.end318

if.end318:                                        ; preds = %land.lhs.true313, %if.then317, %lor.lhs.false309
  store i64 0, i64* %lp, align 8, !tbaa !5
  br label %cleanup

if.end320:                                        ; preds = %if.end281, %if.end66
  %and322 = and i32 %.pr, 65536
  %tobool323 = icmp eq i32 %and322, 0
  %tobool323.not = xor i1 %tobool323, true
  %101 = and i32 %.pr, 50331648
  %102 = icmp eq i32 %101, 16777216
  %or.cond761 = or i1 %102, %tobool323.not
  br i1 %or.cond761, label %if.then332, label %if.else413

if.then332:                                       ; preds = %if.end320
  %and338 = and i32 %.pr, 255
  %cmp339 = icmp ult i32 %and338, 5
  br i1 %cmp339, label %if.then341, label %if.end343

if.then341:                                       ; preds = %if.then332
  %call342 = call signext i8 @Perl_sv_upgrade(%struct.sv* %sv, i32 5) #7
  br label %if.end343

if.end343:                                        ; preds = %if.then341, %if.then332
  %tobool344 = icmp slt i32 %.pr, 0
  %sv_any347 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %103 = load i8** %sv_any347, align 8, !tbaa !0
  %xuv_uv348 = getelementptr inbounds i8* %103, i64 24
  %104 = bitcast i8* %xuv_uv348 to i64*
  %105 = load i64* %104, align 8, !tbaa !5
  %add.ptr.i722 = getelementptr inbounds [22 x i8]* %buf, i64 0, i64 22
  br i1 %tobool344, label %do.body.i730, label %if.else350

do.body.i730:                                     ; preds = %if.end343, %do.body.i730
  %ptr.0.i723 = phi i8* [ %incdec.ptr.i728, %do.body.i730 ], [ %add.ptr.i722, %if.end343 ]
  %uv.addr.0.i724 = phi i64 [ %div.i729, %do.body.i730 ], [ %105, %if.end343 ]
  %rem.i725 = urem i64 %uv.addr.0.i724, 10
  %conv.i726 = trunc i64 %rem.i725 to i8
  %add17.i727 = or i8 %conv.i726, 48
  %incdec.ptr.i728 = getelementptr inbounds i8* %ptr.0.i723, i64 -1
  store i8 %add17.i727, i8* %incdec.ptr.i728, align 1, !tbaa !1
  %div.i729 = udiv i64 %uv.addr.0.i724, 10
  %106 = icmp ugt i64 %uv.addr.0.i724, 9
  br i1 %106, label %do.body.i730, label %if.end355

if.else350:                                       ; preds = %if.end343
  %cmp.i = icmp sgt i64 %105, -1
  %sub.i = sub nsw i64 0, %105
  %iv.sub.i = select i1 %cmp.i, i64 %105, i64 %sub.i
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i, %if.else350
  %ptr.0.i = phi i8* [ %incdec.ptr.i, %do.body.i ], [ %add.ptr.i722, %if.else350 ]
  %uv.addr.0.i = phi i64 [ %div.i, %do.body.i ], [ %iv.sub.i, %if.else350 ]
  %rem.i = urem i64 %uv.addr.0.i, 10
  %conv.i = trunc i64 %rem.i to i8
  %add17.i = or i8 %conv.i, 48
  %incdec.ptr.i = getelementptr inbounds i8* %ptr.0.i, i64 -1
  store i8 %add17.i, i8* %incdec.ptr.i, align 1, !tbaa !1
  %div.i = udiv i64 %uv.addr.0.i, 10
  %107 = icmp ugt i64 %uv.addr.0.i, 9
  br i1 %107, label %do.body.i, label %do.end.i

do.end.i:                                         ; preds = %do.body.i
  br i1 %cmp.i, label %if.end355, label %if.then8.i

if.then8.i:                                       ; preds = %do.end.i
  %incdec.ptr9.i = getelementptr inbounds i8* %ptr.0.i, i64 -2
  store i8 45, i8* %incdec.ptr9.i, align 1, !tbaa !1
  br label %if.end355

if.end355:                                        ; preds = %do.body.i730, %if.then8.i, %do.end.i
  %ptr.0 = phi i8* [ %incdec.ptr9.i, %if.then8.i ], [ %incdec.ptr.i, %do.end.i ], [ %incdec.ptr.i728, %do.body.i730 ]
  %108 = load i8** %sv_any347, align 8, !tbaa !0
  %xpv_len = getelementptr inbounds i8* %108, i64 16
  %109 = bitcast i8* %xpv_len to i64*
  %110 = load i64* %109, align 8, !tbaa !5
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr.i722 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %ptr.0 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %add357 = add nsw i64 %sub.ptr.sub, 1
  %cmp358 = icmp ult i64 %110, %add357
  br i1 %cmp358, label %cond.true360, label %cond.end369

cond.true360:                                     ; preds = %if.end355
  %call365 = call i8* @Perl_sv_grow(%struct.sv* %sv, i64 %add357) #7
  %.pre747 = load i8** %sv_any347, align 8, !tbaa !0
  br label %cond.end369

cond.end369:                                      ; preds = %if.end355, %cond.true360
  %111 = phi i8* [ %108, %if.end355 ], [ %.pre747, %cond.true360 ]
  %xpv_pv372 = bitcast i8* %111 to i8**
  %112 = load i8** %xpv_pv372, align 8, !tbaa !0
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %112, i8* %ptr.0, i64 %sub.ptr.sub, i32 1, i1 false)
  %113 = load i8** %sv_any347, align 8, !tbaa !0
  %xpv_cur381 = getelementptr inbounds i8* %113, i64 8
  %114 = bitcast i8* %xpv_cur381 to i64*
  store i64 %sub.ptr.sub, i64* %114, align 8, !tbaa !5
  %xpv_pv383 = bitcast i8* %113 to i8**
  %115 = load i8** %xpv_pv383, align 8, !tbaa !0
  %add.ptr386 = getelementptr inbounds i8* %115, i64 %sub.ptr.sub
  store i8 0, i8* %add.ptr386, align 1, !tbaa !1
  %116 = load i32* %sv_flags, align 4, !tbaa !3
  %and390 = and i32 %116, 2097152
  %tobool391 = icmp ne i32 %and390, 0
  br i1 %tobool323, label %if.else396, label %if.then388

if.then388:                                       ; preds = %cond.end369
  br i1 %tobool391, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then388
  %call392 = call i32 @Perl_sv_backoff(%struct.sv* %sv) #7
  %.pre749 = load i32* %sv_flags, align 4, !tbaa !3
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then388
  %117 = phi i32 [ %.pre749, %land.rhs ], [ %116, %if.then388 ]
  %or395 = or i32 %117, 16842752
  br label %if.end407

if.else396:                                       ; preds = %cond.end369
  br i1 %tobool391, label %land.rhs400, label %land.end403

land.rhs400:                                      ; preds = %if.else396
  %call401 = call i32 @Perl_sv_backoff(%struct.sv* %sv) #7
  %.pre748 = load i32* %sv_flags, align 4, !tbaa !3
  br label %land.end403

land.end403:                                      ; preds = %land.rhs400, %if.else396
  %118 = phi i32 [ %.pre748, %land.rhs400 ], [ %116, %if.else396 ]
  %or406 = or i32 %118, 16777216
  br label %if.end407

if.end407:                                        ; preds = %land.end403, %land.end
  %storemerge = phi i32 [ %or406, %land.end403 ], [ %or395, %land.end ]
  store i32 %storemerge, i32* %sv_flags, align 4, !tbaa !3
  br i1 %tobool344, label %if.then409, label %if.end492

if.then409:                                       ; preds = %if.end407
  %or411 = or i32 %storemerge, -2147483648
  store i32 %or411, i32* %sv_flags, align 4, !tbaa !3
  br label %if.end492

if.else413:                                       ; preds = %if.end320
  %and330 = and i32 %.pr, 33554432
  %tobool331 = icmp eq i32 %and330, 0
  br i1 %tobool331, label %if.else448, label %if.then417

if.then417:                                       ; preds = %if.else413
  %and419 = and i32 %.pr, 254
  %cmp420 = icmp ult i32 %and419, 6
  br i1 %cmp420, label %if.then422, label %if.end424

if.then422:                                       ; preds = %if.then417
  %call423 = call signext i8 @Perl_sv_upgrade(%struct.sv* %sv, i32 6) #7
  br label %if.end424

if.end424:                                        ; preds = %if.then422, %if.then417
  %sv_any425 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %119 = load i8** %sv_any425, align 8, !tbaa !0
  %xpv_len426 = getelementptr inbounds i8* %119, i64 16
  %120 = bitcast i8* %xpv_len426 to i64*
  %121 = load i64* %120, align 8, !tbaa !5
  %cmp427 = icmp ult i64 %121, 35
  br i1 %cmp427, label %cond.true429, label %cond.end434

cond.true429:                                     ; preds = %if.end424
  %call430 = call i8* @Perl_sv_grow(%struct.sv* %sv, i64 35) #7
  %.pre = load i8** %sv_any425, align 8, !tbaa !0
  br label %cond.end434

cond.end434:                                      ; preds = %if.end424, %cond.true429
  %122 = phi i8* [ %119, %if.end424 ], [ %.pre, %cond.true429 ]
  %xpv_pv437 = bitcast i8* %122 to i8**
  %123 = load i8** %xpv_pv437, align 8, !tbaa !0
  %call438 = call i32* @__errno_location() #8
  %124 = load i32* %call438, align 4, !tbaa !3
  %125 = load i8** %sv_any425, align 8, !tbaa !0
  %xnv_nv440 = getelementptr inbounds i8* %125, i64 32
  %126 = bitcast i8* %xnv_nv440 to double*
  %127 = load double* %126, align 8, !tbaa !6
  %call441 = call i8* @gcvt(double %127, i32 15, i8* %123) #8
  %call442 = call i32* @__errno_location() #8
  store i32 %124, i32* %call442, align 4, !tbaa !3
  br label %while.cond443

while.cond443:                                    ; preds = %while.cond443, %cond.end434
  %s.1 = phi i8* [ %123, %cond.end434 ], [ %incdec.ptr446, %while.cond443 ]
  %128 = load i8* %s.1, align 1, !tbaa !1
  %tobool444 = icmp eq i8 %128, 0
  %incdec.ptr446 = getelementptr inbounds i8* %s.1, i64 1
  br i1 %tobool444, label %if.end492.loopexit, label %while.cond443

if.else448:                                       ; preds = %if.else413
  %129 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings449 = getelementptr inbounds %struct.cop* %129, i64 0, i32 14
  %130 = load %struct.sv** %cop_warnings449, align 8, !tbaa !0
  %cmp450 = icmp eq %struct.sv* %130, null
  br i1 %cmp450, label %lor.lhs.false468, label %land.lhs.true452

land.lhs.true452:                                 ; preds = %if.else448
  %131 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings453 = getelementptr inbounds %struct.cop* %131, i64 0, i32 14
  %132 = load %struct.sv** %cop_warnings453, align 8, !tbaa !0
  %cmp454 = icmp eq %struct.sv* %132, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp454, label %lor.lhs.false468, label %land.lhs.true456

land.lhs.true456:                                 ; preds = %land.lhs.true452
  %133 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings457 = getelementptr inbounds %struct.cop* %133, i64 0, i32 14
  %134 = load %struct.sv** %cop_warnings457, align 8, !tbaa !0
  %cmp458 = icmp eq %struct.sv* %134, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp458, label %land.lhs.true476, label %lor.lhs.false460

lor.lhs.false460:                                 ; preds = %land.lhs.true456
  %135 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings461 = getelementptr inbounds %struct.cop* %135, i64 0, i32 14
  %136 = load %struct.sv** %cop_warnings461, align 8, !tbaa !0
  %sv_any462 = getelementptr inbounds %struct.sv* %136, i64 0, i32 0
  %137 = load i8** %sv_any462, align 8, !tbaa !0
  %xpv_pv463 = bitcast i8* %137 to i8**
  %138 = load i8** %xpv_pv463, align 8, !tbaa !0
  %arrayidx464 = getelementptr inbounds i8* %138, i64 10
  %139 = load i8* %arrayidx464, align 1, !tbaa !1
  %and466 = and i8 %139, 4
  %tobool467 = icmp eq i8 %and466, 0
  br i1 %tobool467, label %lor.lhs.false468, label %land.lhs.true476

lor.lhs.false468:                                 ; preds = %lor.lhs.false460, %land.lhs.true452, %if.else448
  %140 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings469 = getelementptr inbounds %struct.cop* %140, i64 0, i32 14
  %141 = load %struct.sv** %cop_warnings469, align 8, !tbaa !0
  %cmp470 = icmp eq %struct.sv* %141, null
  br i1 %cmp470, label %land.lhs.true472, label %if.end483

land.lhs.true472:                                 ; preds = %lor.lhs.false468
  %142 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and474 = and i8 %142, 1
  %tobool475 = icmp eq i8 %and474, 0
  %143 = load i32* @PL_localizing, align 4, !tbaa !3
  %tobool477 = icmp ne i32 %143, 0
  %or.cond556 = or i1 %tobool475, %tobool477
  br i1 %or.cond556, label %if.end483, label %land.lhs.true478

land.lhs.true476:                                 ; preds = %lor.lhs.false460, %land.lhs.true456
  %.old555 = load i32* @PL_localizing, align 4, !tbaa !3
  %tobool477.old = icmp eq i32 %.old555, 0
  br i1 %tobool477.old, label %land.lhs.true478, label %if.end483

land.lhs.true478:                                 ; preds = %land.lhs.true476, %land.lhs.true472
  %144 = load i32* %sv_flags, align 4, !tbaa !3
  %and480 = and i32 %144, 512
  %tobool481 = icmp eq i32 %and480, 0
  br i1 %tobool481, label %if.then482, label %if.end483

if.then482:                                       ; preds = %land.lhs.true478
  call void @Perl_report_uninit() #7
  br label %if.end483

if.end483:                                        ; preds = %land.lhs.true476, %land.lhs.true472, %lor.lhs.false468, %land.lhs.true478, %if.then482
  store i64 0, i64* %lp, align 8, !tbaa !5
  %145 = load i32* %sv_flags, align 4, !tbaa !3
  %and485 = and i32 %145, 252
  %cmp486 = icmp ult i32 %and485, 4
  br i1 %cmp486, label %if.then488, label %cleanup

if.then488:                                       ; preds = %if.end483
  %call489 = call signext i8 @Perl_sv_upgrade(%struct.sv* %sv, i32 4) #7
  br label %cleanup

if.end492.loopexit:                               ; preds = %while.cond443
  %.pre750 = load i32* %sv_flags, align 4, !tbaa !3
  br label %if.end492

if.end492:                                        ; preds = %if.end492.loopexit, %if.end407, %if.then409
  %146 = phi i32 [ %or411, %if.then409 ], [ %storemerge, %if.end407 ], [ %.pre750, %if.end492.loopexit ]
  %s.2 = phi i8* [ %add.ptr386, %if.then409 ], [ %add.ptr386, %if.end407 ], [ %s.1, %if.end492.loopexit ]
  %sv_any493 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %147 = load i8** %sv_any493, align 8, !tbaa !0
  %xpv_pv494 = bitcast i8* %147 to i8**
  %148 = load i8** %xpv_pv494, align 8, !tbaa !0
  %sub.ptr.lhs.cast495 = ptrtoint i8* %s.2 to i64
  %sub.ptr.rhs.cast496 = ptrtoint i8* %148 to i64
  %sub.ptr.sub497 = sub i64 %sub.ptr.lhs.cast495, %sub.ptr.rhs.cast496
  store i64 %sub.ptr.sub497, i64* %lp, align 8, !tbaa !5
  %xpv_cur499 = getelementptr inbounds i8* %147, i64 8
  %149 = bitcast i8* %xpv_cur499 to i64*
  store i64 %sub.ptr.sub497, i64* %149, align 8, !tbaa !5
  %or501 = or i32 %146, 67371008
  store i32 %or501, i32* %sv_flags, align 4, !tbaa !3
  br label %cleanup

tokensave:                                        ; preds = %if.then20, %if.else, %if.then30
  %150 = load i32* %sv_flags, align 4, !tbaa !3
  %and505 = and i32 %150, 524288
  %tobool506 = icmp eq i32 %and505, 0
  br i1 %tobool506, label %if.else525, label %if.then509

tokensaveref:                                     ; preds = %if.then269, %if.else277
  %tobool508 = icmp eq %struct.sv* %call265, null
  br i1 %tobool508, label %if.then509, label %if.end511

if.then509:                                       ; preds = %tokensave, %tokensaveref
  %call510 = call %struct.sv* @Perl_newSVpv(i8* %0, i64 0) #7
  br label %if.end511

if.end511:                                        ; preds = %tokensaveref, %if.then509
  %tsv.2 = phi %struct.sv* [ %call265, %tokensaveref ], [ %call510, %if.then509 ]
  %call512 = call %struct.sv* @Perl_sv_2mortal(%struct.sv* %tsv.2) #7
  %sv_any513 = getelementptr inbounds %struct.sv* %tsv.2, i64 0, i32 0
  %151 = load i8** %sv_any513, align 8, !tbaa !0
  %xpv_cur514 = getelementptr inbounds i8* %151, i64 8
  %152 = bitcast i8* %xpv_cur514 to i64*
  %153 = load i64* %152, align 8, !tbaa !5
  store i64 %153, i64* %lp, align 8, !tbaa !5
  %xpv_pv516 = bitcast i8* %151 to i8**
  %154 = load i8** %xpv_pv516, align 8, !tbaa !0
  br label %cleanup

if.else525:                                       ; preds = %tokensave
  %call526 = call i64 @strlen(i8* %0) #8
  %and529 = and i32 %150, 252
  %cmp530 = icmp eq i32 %and529, 0
  br i1 %cmp530, label %lor.rhs532, label %lor.end536

lor.rhs532:                                       ; preds = %if.else525
  %call533 = call signext i8 @Perl_sv_upgrade(%struct.sv* %sv, i32 4) #7
  br label %lor.end536

lor.end536:                                       ; preds = %if.else525, %lor.rhs532
  store i64 %call526, i64* %lp, align 8, !tbaa !5
  %sv_any537 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %155 = load i8** %sv_any537, align 8, !tbaa !0
  %xpv_len538 = getelementptr inbounds i8* %155, i64 16
  %156 = bitcast i8* %xpv_len538 to i64*
  %157 = load i64* %156, align 8, !tbaa !5
  %add539 = add i64 %call526, 1
  %cmp540 = icmp ult i64 %157, %add539
  br i1 %cmp540, label %cond.true542, label %cond.false545

cond.true542:                                     ; preds = %lor.end536
  %call544 = call i8* @Perl_sv_grow(%struct.sv* %sv, i64 %add539) #7
  %.pre754 = load i8** %sv_any537, align 8, !tbaa !0
  br label %cond.end548

cond.false545:                                    ; preds = %lor.end536
  %xpv_pv547 = bitcast i8* %155 to i8**
  %158 = load i8** %xpv_pv547, align 8, !tbaa !0
  br label %cond.end548

cond.end548:                                      ; preds = %cond.false545, %cond.true542
  %159 = phi i8* [ %.pre754, %cond.true542 ], [ %155, %cond.false545 ]
  %cond549 = phi i8* [ %call544, %cond.true542 ], [ %158, %cond.false545 ]
  %xpv_cur551 = getelementptr inbounds i8* %159, i64 8
  %160 = bitcast i8* %xpv_cur551 to i64*
  store i64 %call526, i64* %160, align 8, !tbaa !5
  %161 = load i32* %sv_flags, align 4, !tbaa !3
  %or553 = or i32 %161, 67108864
  store i32 %or553, i32* %sv_flags, align 4, !tbaa !3
  %call554 = call i8* @strcpy(i8* %cond549, i8* %0) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end483, %if.then488, %cond.end548, %if.end511, %if.end492, %if.end318, %if.then114, %if.end216, %cond.end, %if.end64, %if.then10, %if.then
  %retval.0 = phi i8* [ %6, %if.then10 ], [ %154, %if.end511 ], [ %call554, %cond.end548 ], [ %cond, %cond.end ], [ %67, %if.end216 ], [ getelementptr inbounds ([8 x i8]* @.str10, i64 0, i64 0), %if.then114 ], [ %148, %if.end492 ], [ getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0), %if.end318 ], [ getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0), %if.end64 ], [ getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0), %if.then ], [ getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0), %if.then488 ], [ getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0), %if.end483 ]
  call void @llvm.lifetime.end(i64 64, i8* %0) #3
  ret i8* %retval.0
}
