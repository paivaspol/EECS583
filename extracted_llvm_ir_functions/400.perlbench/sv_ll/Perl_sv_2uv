define i64 @Perl_sv_2uv(%struct.sv* %sv) #0 {
entry:
  %value.i = alloca i64, align 8
  %value = alloca i64, align 8
  %tobool = icmp eq %struct.sv* %sv, null
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %sv_flags = getelementptr inbounds %struct.sv* %sv, i64 0, i32 2
  %0 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %0, 8192
  %tobool1 = icmp eq i32 %and, 0
  br i1 %tobool1, label %if.end55, label %if.then2

if.then2:                                         ; preds = %if.end
  %call = call i32 @Perl_mg_get(%struct.sv* %sv) #8
  %1 = load i32* %sv_flags, align 4, !tbaa !3
  %and4 = and i32 %1, 16777216
  %tobool5 = icmp eq i32 %and4, 0
  br i1 %tobool5, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.then2
  %sv_any = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %2 = load i8** %sv_any, align 8, !tbaa !0
  %xuv_uv = getelementptr inbounds i8* %2, i64 24
  %3 = bitcast i8* %xuv_uv to i64*
  %4 = load i64* %3, align 8, !tbaa !5
  br label %return

if.end7:                                          ; preds = %if.then2
  %and9 = and i32 %1, 33554432
  %tobool10 = icmp eq i32 %and9, 0
  br i1 %tobool10, label %if.end14, label %if.then11

if.then11:                                        ; preds = %if.end7
  %sv_any12 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %5 = load i8** %sv_any12, align 8, !tbaa !0
  %xnv_nv = getelementptr inbounds i8* %5, i64 32
  %6 = bitcast i8* %xnv_nv to double*
  %7 = load double* %6, align 8, !tbaa !6
  %call13 = call i64 @Perl_cast_uv(double %7) #8
  br label %return

if.end14:                                         ; preds = %if.end7
  %and16 = and i32 %1, 67108864
  %tobool17 = icmp eq i32 %and16, 0
  br i1 %tobool17, label %if.end22, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end14
  %sv_any18 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %8 = load i8** %sv_any18, align 8, !tbaa !0
  %xpv_len = getelementptr inbounds i8* %8, i64 16
  %9 = bitcast i8* %xpv_len to i64*
  %10 = load i64* %9, align 8, !tbaa !5
  %tobool19 = icmp eq i64 %10, 0
  br i1 %tobool19, label %if.end22, label %if.then20

if.then20:                                        ; preds = %land.lhs.true
  %11 = bitcast i64* %value.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #3
  %xpv_pv.i = bitcast i8* %8 to i8**
  %12 = load i8** %xpv_pv.i, align 8, !tbaa !0
  %xpv_cur.i = getelementptr inbounds i8* %8, i64 8
  %13 = bitcast i8* %xpv_cur.i to i64*
  %14 = load i64* %13, align 8, !tbaa !5
  %call.i = call i32 @Perl_grok_number(i8* %12, i64 %14, i64* %value.i) #8
  %15 = and i32 %call.i, 13
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %if.then3.i, label %if.end4.i

if.then3.i:                                       ; preds = %if.then20
  %17 = load i64* %value.i, align 8, !tbaa !5
  br label %return

if.end4.i:                                        ; preds = %if.then20
  %tobool5.i = icmp eq i32 %call.i, 0
  br i1 %tobool5.i, label %if.then6.i, label %if.end28.i

if.then6.i:                                       ; preds = %if.end4.i
  %18 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings.i = getelementptr inbounds %struct.cop* %18, i64 0, i32 14
  %19 = load %struct.sv** %cop_warnings.i, align 8, !tbaa !0
  %cmp7.i = icmp eq %struct.sv* %19, null
  br i1 %cmp7.i, label %lor.lhs.false18.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then6.i
  %20 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings8.i = getelementptr inbounds %struct.cop* %20, i64 0, i32 14
  %21 = load %struct.sv** %cop_warnings8.i, align 8, !tbaa !0
  %cmp9.i = icmp eq %struct.sv* %21, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp9.i, label %lor.lhs.false18.i, label %land.lhs.true10.i

land.lhs.true10.i:                                ; preds = %land.lhs.true.i
  %22 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings11.i = getelementptr inbounds %struct.cop* %22, i64 0, i32 14
  %23 = load %struct.sv** %cop_warnings11.i, align 8, !tbaa !0
  %cmp12.i = icmp eq %struct.sv* %23, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp12.i, label %if.then26.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %land.lhs.true10.i
  %24 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings13.i = getelementptr inbounds %struct.cop* %24, i64 0, i32 14
  %25 = load %struct.sv** %cop_warnings13.i, align 8, !tbaa !0
  %sv_any14.i = getelementptr inbounds %struct.sv* %25, i64 0, i32 0
  %26 = load i8** %sv_any14.i, align 8, !tbaa !0
  %xpv_pv15.i = bitcast i8* %26 to i8**
  %27 = load i8** %xpv_pv15.i, align 8, !tbaa !0
  %arrayidx.i = getelementptr inbounds i8* %27, i64 3
  %28 = load i8* %arrayidx.i, align 1, !tbaa !1
  %and16.i = and i8 %28, 4
  %tobool17.i = icmp eq i8 %and16.i, 0
  br i1 %tobool17.i, label %lor.lhs.false18.i, label %if.then26.i

lor.lhs.false18.i:                                ; preds = %lor.lhs.false.i, %land.lhs.true.i, %if.then6.i
  %29 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings19.i = getelementptr inbounds %struct.cop* %29, i64 0, i32 14
  %30 = load %struct.sv** %cop_warnings19.i, align 8, !tbaa !0
  %cmp20.i = icmp eq %struct.sv* %30, null
  br i1 %cmp20.i, label %land.lhs.true22.i, label %if.end28.i

land.lhs.true22.i:                                ; preds = %lor.lhs.false18.i
  %31 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and24.i = and i8 %31, 1
  %tobool25.i = icmp eq i8 %and24.i, 0
  br i1 %tobool25.i, label %if.end28.i, label %if.then26.i

if.then26.i:                                      ; preds = %land.lhs.true22.i, %lor.lhs.false.i, %land.lhs.true10.i
  call fastcc void @S_not_a_number(%struct.sv* %sv) #8
  br label %if.end28.i

if.end28.i:                                       ; preds = %if.then26.i, %land.lhs.true22.i, %lor.lhs.false18.i, %if.end4.i
  %32 = load i8** %sv_any18, align 8, !tbaa !0
  %xpv_pv30.i = bitcast i8* %32 to i8**
  %33 = load i8** %xpv_pv30.i, align 8, !tbaa !0
  %call31.i = call double @Perl_my_atof(i8* %33) #8
  %call32.i = call i64 @Perl_cast_uv(double %call31.i) #8
  br label %return

if.end22:                                         ; preds = %land.lhs.true, %if.end14
  %and24 = and i32 %1, 524288
  %tobool25 = icmp eq i32 %and24, 0
  br i1 %tobool25, label %if.then26, label %if.end55

if.then26:                                        ; preds = %if.end22
  %and28 = and i32 %1, 512
  %tobool29 = icmp eq i32 %and28, 0
  br i1 %tobool29, label %if.then30, label %return

if.then30:                                        ; preds = %if.then26
  %34 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings = getelementptr inbounds %struct.cop* %34, i64 0, i32 14
  %35 = load %struct.sv** %cop_warnings, align 8, !tbaa !0
  %cmp = icmp eq %struct.sv* %35, null
  br i1 %cmp, label %lor.lhs.false41, label %land.lhs.true31

land.lhs.true31:                                  ; preds = %if.then30
  %36 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings32 = getelementptr inbounds %struct.cop* %36, i64 0, i32 14
  %37 = load %struct.sv** %cop_warnings32, align 8, !tbaa !0
  %cmp33 = icmp eq %struct.sv* %37, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp33, label %lor.lhs.false41, label %land.lhs.true34

land.lhs.true34:                                  ; preds = %land.lhs.true31
  %38 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings35 = getelementptr inbounds %struct.cop* %38, i64 0, i32 14
  %39 = load %struct.sv** %cop_warnings35, align 8, !tbaa !0
  %cmp36 = icmp eq %struct.sv* %39, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp36, label %land.lhs.true49, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true34
  %40 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings37 = getelementptr inbounds %struct.cop* %40, i64 0, i32 14
  %41 = load %struct.sv** %cop_warnings37, align 8, !tbaa !0
  %sv_any38 = getelementptr inbounds %struct.sv* %41, i64 0, i32 0
  %42 = load i8** %sv_any38, align 8, !tbaa !0
  %xpv_pv = bitcast i8* %42 to i8**
  %43 = load i8** %xpv_pv, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i8* %43, i64 10
  %44 = load i8* %arrayidx, align 1, !tbaa !1
  %and39 = and i8 %44, 4
  %tobool40 = icmp eq i8 %and39, 0
  br i1 %tobool40, label %lor.lhs.false41, label %land.lhs.true49

lor.lhs.false41:                                  ; preds = %lor.lhs.false, %land.lhs.true31, %if.then30
  %45 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings42 = getelementptr inbounds %struct.cop* %45, i64 0, i32 14
  %46 = load %struct.sv** %cop_warnings42, align 8, !tbaa !0
  %cmp43 = icmp eq %struct.sv* %46, null
  br i1 %cmp43, label %land.lhs.true45, label %return

land.lhs.true45:                                  ; preds = %lor.lhs.false41
  %47 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and47 = and i8 %47, 1
  %tobool48 = icmp eq i8 %and47, 0
  %48 = load i32* @PL_localizing, align 4, !tbaa !3
  %tobool50 = icmp ne i32 %48, 0
  %or.cond = or i1 %tobool48, %tobool50
  br i1 %or.cond, label %return, label %if.then51

land.lhs.true49:                                  ; preds = %lor.lhs.false, %land.lhs.true34
  %.old = load i32* @PL_localizing, align 4, !tbaa !3
  %tobool50.old = icmp eq i32 %.old, 0
  br i1 %tobool50.old, label %if.then51, label %return

if.then51:                                        ; preds = %land.lhs.true49, %land.lhs.true45
  call void @Perl_report_uninit() #7
  br label %return

if.end55:                                         ; preds = %if.end22, %if.end
  %49 = phi i32 [ %1, %if.end22 ], [ %0, %if.end ]
  %and57 = and i32 %49, 9961472
  %tobool58 = icmp eq i32 %and57, 0
  br i1 %tobool58, label %if.end138, label %if.then59

if.then59:                                        ; preds = %if.end55
  %and61 = and i32 %49, 524288
  %tobool62 = icmp eq i32 %and61, 0
  br i1 %tobool62, label %if.end90, label %if.then63

if.then63:                                        ; preds = %if.then59
  %and65 = and i32 %49, 268435456
  %tobool66 = icmp eq i32 %and65, 0
  br i1 %tobool66, label %if.end87, label %land.lhs.true67

land.lhs.true67:                                  ; preds = %if.then63
  %call68 = call %struct.sv* @Perl_amagic_call(%struct.sv* %sv, %struct.sv* @PL_sv_undef, i32 5, i32 9) #8
  %tobool69 = icmp eq %struct.sv* %call68, null
  br i1 %tobool69, label %if.end87, label %land.lhs.true70

land.lhs.true70:                                  ; preds = %land.lhs.true67
  %sv_flags71 = getelementptr inbounds %struct.sv* %call68, i64 0, i32 2
  %50 = load i32* %sv_flags71, align 4, !tbaa !3
  %and72 = and i32 %50, 524288
  %tobool73 = icmp eq i32 %and72, 0
  br i1 %tobool73, label %if.then80, label %lor.lhs.false74

lor.lhs.false74:                                  ; preds = %land.lhs.true70
  %sv_any75 = getelementptr inbounds %struct.sv* %call68, i64 0, i32 0
  %51 = load i8** %sv_any75, align 8, !tbaa !0
  %xrv_rv = bitcast i8* %51 to %struct.sv**
  %52 = load %struct.sv** %xrv_rv, align 8, !tbaa !0
  %sv_any76 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %53 = load i8** %sv_any76, align 8, !tbaa !0
  %xrv_rv77 = bitcast i8* %53 to %struct.sv**
  %54 = load %struct.sv** %xrv_rv77, align 8, !tbaa !0
  %cmp78 = icmp eq %struct.sv* %52, %54
  br i1 %cmp78, label %if.end87, label %if.then80

if.then80:                                        ; preds = %lor.lhs.false74, %land.lhs.true70
  %and82 = and i32 %50, 65536
  %tobool83 = icmp eq i32 %and82, 0
  br i1 %tobool83, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then80
  %sv_any84 = getelementptr inbounds %struct.sv* %call68, i64 0, i32 0
  %55 = load i8** %sv_any84, align 8, !tbaa !0
  %xuv_uv85 = getelementptr inbounds i8* %55, i64 24
  %56 = bitcast i8* %xuv_uv85 to i64*
  %57 = load i64* %56, align 8, !tbaa !5
  br label %return

cond.false:                                       ; preds = %if.then80
  %call86 = call i64 @Perl_sv_2uv(%struct.sv* %call68) #7
  br label %return

if.end87:                                         ; preds = %land.lhs.true67, %if.then63, %lor.lhs.false74
  %sv_any88 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %58 = load i8** %sv_any88, align 8, !tbaa !0
  %xrv_rv89 = bitcast i8* %58 to %struct.sv**
  %59 = load %struct.sv** %xrv_rv89, align 8, !tbaa !0
  %60 = ptrtoint %struct.sv* %59 to i64
  br label %return

if.end90:                                         ; preds = %if.then59
  %61 = and i32 %49, 9437184
  %62 = icmp eq i32 %61, 9437184
  br i1 %62, label %if.then98, label %if.end99

if.then98:                                        ; preds = %if.end90
  call void @Perl_sv_force_normal_flags(%struct.sv* %sv, i32 0) #8
  %.pre666 = load i32* %sv_flags, align 4, !tbaa !3
  br label %if.end99

if.end99:                                         ; preds = %if.end90, %if.then98
  %63 = phi i32 [ %49, %if.end90 ], [ %.pre666, %if.then98 ]
  %64 = and i32 %63, 126812160
  %65 = icmp eq i32 %64, 8388608
  br i1 %65, label %if.then107, label %if.end138

if.then107:                                       ; preds = %if.end99
  %66 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings108 = getelementptr inbounds %struct.cop* %66, i64 0, i32 14
  %67 = load %struct.sv** %cop_warnings108, align 8, !tbaa !0
  %cmp109 = icmp eq %struct.sv* %67, null
  br i1 %cmp109, label %lor.lhs.false127, label %land.lhs.true111

land.lhs.true111:                                 ; preds = %if.then107
  %68 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings112 = getelementptr inbounds %struct.cop* %68, i64 0, i32 14
  %69 = load %struct.sv** %cop_warnings112, align 8, !tbaa !0
  %cmp113 = icmp eq %struct.sv* %69, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp113, label %lor.lhs.false127, label %land.lhs.true115

land.lhs.true115:                                 ; preds = %land.lhs.true111
  %70 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings116 = getelementptr inbounds %struct.cop* %70, i64 0, i32 14
  %71 = load %struct.sv** %cop_warnings116, align 8, !tbaa !0
  %cmp117 = icmp eq %struct.sv* %71, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp117, label %if.then135, label %lor.lhs.false119

lor.lhs.false119:                                 ; preds = %land.lhs.true115
  %72 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings120 = getelementptr inbounds %struct.cop* %72, i64 0, i32 14
  %73 = load %struct.sv** %cop_warnings120, align 8, !tbaa !0
  %sv_any121 = getelementptr inbounds %struct.sv* %73, i64 0, i32 0
  %74 = load i8** %sv_any121, align 8, !tbaa !0
  %xpv_pv122 = bitcast i8* %74 to i8**
  %75 = load i8** %xpv_pv122, align 8, !tbaa !0
  %arrayidx123 = getelementptr inbounds i8* %75, i64 10
  %76 = load i8* %arrayidx123, align 1, !tbaa !1
  %and125 = and i8 %76, 4
  %tobool126 = icmp eq i8 %and125, 0
  br i1 %tobool126, label %lor.lhs.false127, label %if.then135

lor.lhs.false127:                                 ; preds = %lor.lhs.false119, %land.lhs.true111, %if.then107
  %77 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings128 = getelementptr inbounds %struct.cop* %77, i64 0, i32 14
  %78 = load %struct.sv** %cop_warnings128, align 8, !tbaa !0
  %cmp129 = icmp eq %struct.sv* %78, null
  br i1 %cmp129, label %land.lhs.true131, label %return

land.lhs.true131:                                 ; preds = %lor.lhs.false127
  %79 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and133 = and i8 %79, 1
  %tobool134 = icmp eq i8 %and133, 0
  br i1 %tobool134, label %return, label %if.then135

if.then135:                                       ; preds = %lor.lhs.false119, %land.lhs.true131, %land.lhs.true115
  call void @Perl_report_uninit() #7
  br label %return

if.end138:                                        ; preds = %if.end99, %if.end55
  %80 = phi i32 [ %63, %if.end99 ], [ %49, %if.end55 ]
  %and140 = and i32 %80, 16777216
  %tobool141 = icmp eq i32 %and140, 0
  br i1 %tobool141, label %if.end150, label %if.then142

if.then142:                                       ; preds = %if.end138
  %sv_any147 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %81 = load i8** %sv_any147, align 8, !tbaa !0
  %xuv_uv148 = getelementptr inbounds i8* %81, i64 24
  %82 = bitcast i8* %xuv_uv148 to i64*
  %83 = load i64* %82, align 8, !tbaa !5
  br label %return

if.end150:                                        ; preds = %if.end138
  %and152 = and i32 %80, 33554432
  %tobool153 = icmp eq i32 %and152, 0
  br i1 %tobool153, label %if.else246, label %if.then154

if.then154:                                       ; preds = %if.end150
  %and156 = and i32 %80, 255
  %cmp157 = icmp eq i32 %and156, 2
  br i1 %cmp157, label %if.then159, label %if.end161

if.then159:                                       ; preds = %if.then154
  %call160 = call signext i8 @Perl_sv_upgrade(%struct.sv* %sv, i32 6) #7
  %.pre662 = load i32* %sv_flags, align 4, !tbaa !3
  br label %if.end161

if.end161:                                        ; preds = %if.then159, %if.then154
  %84 = phi i32 [ %.pre662, %if.then159 ], [ %80, %if.then154 ]
  %and163 = and i32 %84, 2097152
  %tobool164 = icmp eq i32 %and163, 0
  br i1 %tobool164, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end161
  %call165 = call i32 @Perl_sv_backoff(%struct.sv* %sv) #7
  %.pre663 = load i32* %sv_flags, align 4, !tbaa !3
  br label %land.end

land.end:                                         ; preds = %if.end161, %land.rhs
  %85 = phi i32 [ %.pre663, %land.rhs ], [ %84, %if.end161 ]
  %or = or i32 %85, 16777216
  store i32 %or, i32* %sv_flags, align 4, !tbaa !3
  %sv_any168 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %86 = load i8** %sv_any168, align 8, !tbaa !0
  %xnv_nv169 = getelementptr inbounds i8* %86, i64 32
  %87 = bitcast i8* %xnv_nv169 to double*
  %88 = load double* %87, align 8, !tbaa !6
  %cmp170 = fcmp olt double %88, 0x43E0000000000000
  br i1 %cmp170, label %if.then172, label %if.else213

if.then172:                                       ; preds = %land.end
  %call175 = call i64 @Perl_cast_iv(double %88) #8
  %89 = load i8** %sv_any168, align 8, !tbaa !0
  %xiv_iv177 = getelementptr inbounds i8* %89, i64 24
  %90 = bitcast i8* %xiv_iv177 to i64*
  store i64 %call175, i64* %90, align 8, !tbaa !5
  %xnv_nv179 = getelementptr inbounds i8* %89, i64 32
  %91 = bitcast i8* %xnv_nv179 to double*
  %92 = load double* %91, align 8, !tbaa !6
  %conv182 = sitofp i64 %call175 to double
  %cmp183 = fcmp oeq double %92, %conv182
  br i1 %cmp183, label %land.lhs.true185, label %if.end528

land.lhs.true185:                                 ; preds = %if.then172
  %cmp188 = icmp sgt i64 %call175, 0
  %sub = sub nsw i64 0, %call175
  %cond197 = select i1 %cmp188, i64 %call175, i64 %sub
  %cmp198 = icmp ult i64 %cond197, 4294967296
  br i1 %cmp198, label %if.then200, label %if.end528

if.then200:                                       ; preds = %land.lhs.true185
  %93 = load i32* %sv_flags, align 4, !tbaa !3
  %and202 = and i32 %93, 2097152
  %tobool203 = icmp eq i32 %and202, 0
  br i1 %tobool203, label %land.end207, label %land.rhs204

land.rhs204:                                      ; preds = %if.then200
  %call205 = call i32 @Perl_sv_backoff(%struct.sv* %sv) #7
  %.pre664 = load i32* %sv_flags, align 4, !tbaa !3
  br label %land.end207

land.end207:                                      ; preds = %if.then200, %land.rhs204
  %94 = phi i32 [ %93, %if.then200 ], [ %.pre664, %land.rhs204 ]
  %or210 = or i32 %94, 16842752
  store i32 %or210, i32* %sv_flags, align 4, !tbaa !3
  br label %if.end528

if.else213:                                       ; preds = %land.end
  %call216 = call i64 @Perl_cast_uv(double %88) #8
  %95 = load i8** %sv_any168, align 8, !tbaa !0
  %xuv_uv218 = getelementptr inbounds i8* %95, i64 24
  %96 = bitcast i8* %xuv_uv218 to i64*
  store i64 %call216, i64* %96, align 8, !tbaa !5
  %xnv_nv220 = getelementptr inbounds i8* %95, i64 32
  %97 = bitcast i8* %xnv_nv220 to double*
  %98 = load double* %97, align 8, !tbaa !6
  %conv223 = uitofp i64 %call216 to double
  %cmp224 = fcmp oeq double %98, %conv223
  %cmp229 = icmp ult i64 %call216, 4294967296
  %or.cond653 = and i1 %cmp224, %cmp229
  %99 = load i32* %sv_flags, align 4, !tbaa !3
  br i1 %or.cond653, label %if.then231, label %if.end242

if.then231:                                       ; preds = %if.else213
  %and233 = and i32 %99, 2097152
  %tobool234 = icmp eq i32 %and233, 0
  br i1 %tobool234, label %land.end238, label %land.rhs235

land.rhs235:                                      ; preds = %if.then231
  %call236 = call i32 @Perl_sv_backoff(%struct.sv* %sv) #7
  %.pre665 = load i32* %sv_flags, align 4, !tbaa !3
  br label %land.end238

land.end238:                                      ; preds = %if.then231, %land.rhs235
  %100 = phi i32 [ %99, %if.then231 ], [ %.pre665, %land.rhs235 ]
  %or241 = or i32 %100, 16842752
  store i32 %or241, i32* %sv_flags, align 4, !tbaa !3
  br label %if.end242

if.end242:                                        ; preds = %if.else213, %land.end238
  %101 = phi i32 [ %or241, %land.end238 ], [ %99, %if.else213 ]
  %or244 = or i32 %101, -2147483648
  store i32 %or244, i32* %sv_flags, align 4, !tbaa !3
  br label %if.end528

if.else246:                                       ; preds = %if.end150
  %and248 = and i32 %80, 67108864
  %tobool249 = icmp eq i32 %and248, 0
  br i1 %tobool249, label %if.else483, label %land.lhs.true250

land.lhs.true250:                                 ; preds = %if.else246
  %sv_any251 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %102 = load i8** %sv_any251, align 8, !tbaa !0
  %xpv_len252 = getelementptr inbounds i8* %102, i64 16
  %103 = bitcast i8* %xpv_len252 to i64*
  %104 = load i64* %103, align 8, !tbaa !5
  %tobool253 = icmp eq i64 %104, 0
  br i1 %tobool253, label %if.else483, label %if.then254

if.then254:                                       ; preds = %land.lhs.true250
  %xpv_pv256 = bitcast i8* %102 to i8**
  %105 = load i8** %xpv_pv256, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %102, i64 8
  %106 = bitcast i8* %xpv_cur to i64*
  %107 = load i64* %106, align 8, !tbaa !5
  %call258 = call i32 @Perl_grok_number(i8* %105, i64 %107, i64* %value) #8
  %and259 = and i32 %call258, 5
  %cmp260 = icmp eq i32 %and259, 1
  %108 = load i32* %sv_flags, align 4, !tbaa !3
  %and264 = and i32 %108, 255
  br i1 %cmp260, label %if.then262, label %if.else280

if.then262:                                       ; preds = %if.then254
  %cmp265 = icmp ult i32 %and264, 5
  br i1 %cmp265, label %if.then267, label %if.end269

if.then267:                                       ; preds = %if.then262
  %call268 = call signext i8 @Perl_sv_upgrade(%struct.sv* %sv, i32 5) #7
  %.pre = load i32* %sv_flags, align 4, !tbaa !3
  br label %if.end269

if.end269:                                        ; preds = %if.then267, %if.then262
  %109 = phi i32 [ %.pre, %if.then267 ], [ %108, %if.then262 ]
  %and271 = and i32 %109, 2097152
  %tobool272 = icmp eq i32 %and271, 0
  br i1 %tobool272, label %land.end276, label %land.rhs273

land.rhs273:                                      ; preds = %if.end269
  %call274 = call i32 @Perl_sv_backoff(%struct.sv* %sv) #7
  %.pre654 = load i32* %sv_flags, align 4, !tbaa !3
  br label %land.end276

land.end276:                                      ; preds = %if.end269, %land.rhs273
  %110 = phi i32 [ %109, %if.end269 ], [ %.pre654, %land.rhs273 ]
  %or279 = or i32 %110, 16842752
  store i32 %or279, i32* %sv_flags, align 4, !tbaa !3
  br label %if.end288

if.else280:                                       ; preds = %if.then254
  %cmp283 = icmp ult i32 %and264, 6
  br i1 %cmp283, label %if.then285, label %if.end288

if.then285:                                       ; preds = %if.else280
  %call286 = call signext i8 @Perl_sv_upgrade(%struct.sv* %sv, i32 6) #7
  br label %if.end288

if.end288:                                        ; preds = %if.else280, %if.then285, %land.end276
  %and289 = and i32 %call258, 1
  %cmp290 = icmp eq i32 %and289, 0
  br i1 %cmp290, label %if.end354, label %if.then292

if.then292:                                       ; preds = %if.end288
  %111 = load i32* %sv_flags, align 4, !tbaa !3
  %and294 = and i32 %111, 2097152
  %tobool295 = icmp eq i32 %and294, 0
  br i1 %tobool295, label %land.end299, label %land.rhs296

land.rhs296:                                      ; preds = %if.then292
  %call297 = call i32 @Perl_sv_backoff(%struct.sv* %sv) #7
  %.pre659 = load i32* %sv_flags, align 4, !tbaa !3
  br label %land.end299

land.end299:                                      ; preds = %if.then292, %land.rhs296
  %112 = phi i32 [ %111, %if.then292 ], [ %.pre659, %land.rhs296 ]
  %or302 = or i32 %112, 16777216
  store i32 %or302, i32* %sv_flags, align 4, !tbaa !3
  %and303 = and i32 %call258, 8
  %tobool304 = icmp eq i32 %and303, 0
  %113 = load i64* %value, align 8, !tbaa !5
  br i1 %tobool304, label %if.then305, label %if.else317

if.then305:                                       ; preds = %land.end299
  %cmp306 = icmp sgt i64 %113, -1
  %114 = load i8** %sv_any251, align 8, !tbaa !0
  %xiv_iv310 = getelementptr inbounds i8* %114, i64 24
  %115 = bitcast i8* %xiv_iv310 to i64*
  store i64 %113, i64* %115, align 8, !tbaa !5
  br i1 %cmp306, label %if.end354, label %if.else311

if.else311:                                       ; preds = %if.then305
  %or315 = or i32 %112, -2130706432
  store i32 %or315, i32* %sv_flags, align 4, !tbaa !3
  br label %if.end354

if.else317:                                       ; preds = %land.end299
  %cmp318 = icmp ult i64 %113, -9223372036854775807
  br i1 %cmp318, label %if.then320, label %if.else324

if.then320:                                       ; preds = %if.else317
  %sub321 = sub nsw i64 0, %113
  %116 = load i8** %sv_any251, align 8, !tbaa !0
  %xiv_iv323 = getelementptr inbounds i8* %116, i64 24
  %117 = bitcast i8* %xiv_iv323 to i64*
  store i64 %sub321, i64* %117, align 8, !tbaa !5
  br label %if.end354

if.else324:                                       ; preds = %if.else317
  %and326 = and i32 %112, 254
  %cmp327 = icmp ult i32 %and326, 6
  br i1 %cmp327, label %if.then329, label %if.end331

if.then329:                                       ; preds = %if.else324
  %call330 = call signext i8 @Perl_sv_upgrade(%struct.sv* %sv, i32 6) #7
  %.pre660 = load i32* %sv_flags, align 4, !tbaa !3
  br label %if.end331

if.end331:                                        ; preds = %if.then329, %if.else324
  %118 = phi i32 [ %.pre660, %if.then329 ], [ %or302, %if.else324 ]
  %or333 = and i32 %118, 2096955391
  %and335 = or i32 %or333, 33685504
  store i32 %and335, i32* %sv_flags, align 4, !tbaa !3
  %and337 = and i32 %118, 2097152
  %tobool338 = icmp eq i32 %and337, 0
  br i1 %tobool338, label %land.end342, label %land.rhs339

land.rhs339:                                      ; preds = %if.end331
  %call340 = call i32 @Perl_sv_backoff(%struct.sv* %sv) #7
  %.pre661 = load i32* %sv_flags, align 4, !tbaa !3
  br label %land.end342

land.end342:                                      ; preds = %if.end331, %land.rhs339
  %119 = phi i32 [ %.pre661, %land.rhs339 ], [ %and335, %if.end331 ]
  %or345 = or i32 %119, 16777216
  store i32 %or345, i32* %sv_flags, align 4, !tbaa !3
  %120 = load i64* %value, align 8, !tbaa !5
  %conv346 = uitofp i64 %120 to double
  %sub347 = fsub double -0.000000e+00, %conv346
  %121 = load i8** %sv_any251, align 8, !tbaa !0
  %xnv_nv349 = getelementptr inbounds i8* %121, i64 32
  %122 = bitcast i8* %xnv_nv349 to double*
  store double %sub347, double* %122, align 8, !tbaa !6
  %xiv_iv351 = getelementptr inbounds i8* %121, i64 24
  %123 = bitcast i8* %xiv_iv351 to i64*
  store i64 -9223372036854775808, i64* %123, align 8, !tbaa !5
  br label %if.end354

if.end354:                                        ; preds = %if.then305, %if.end288, %if.else311, %land.end342, %if.then320
  br i1 %cmp260, label %if.end528, label %if.then358

if.then358:                                       ; preds = %if.end354
  %124 = load i8** %sv_any251, align 8, !tbaa !0
  %xpv_pv360 = bitcast i8* %124 to i8**
  %125 = load i8** %xpv_pv360, align 8, !tbaa !0
  %call361 = call double @Perl_my_atof(i8* %125) #8
  %126 = load i8** %sv_any251, align 8, !tbaa !0
  %xnv_nv363 = getelementptr inbounds i8* %126, i64 32
  %127 = bitcast i8* %xnv_nv363 to double*
  store double %call361, double* %127, align 8, !tbaa !6
  %tobool364 = icmp eq i32 %call258, 0
  br i1 %tobool364, label %land.lhs.true365, label %if.end394

land.lhs.true365:                                 ; preds = %if.then358
  %128 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings366 = getelementptr inbounds %struct.cop* %128, i64 0, i32 14
  %129 = load %struct.sv** %cop_warnings366, align 8, !tbaa !0
  %cmp367 = icmp eq %struct.sv* %129, null
  br i1 %cmp367, label %lor.lhs.false385, label %land.lhs.true369

land.lhs.true369:                                 ; preds = %land.lhs.true365
  %130 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings370 = getelementptr inbounds %struct.cop* %130, i64 0, i32 14
  %131 = load %struct.sv** %cop_warnings370, align 8, !tbaa !0
  %cmp371 = icmp eq %struct.sv* %131, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp371, label %lor.lhs.false385, label %land.lhs.true373

land.lhs.true373:                                 ; preds = %land.lhs.true369
  %132 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings374 = getelementptr inbounds %struct.cop* %132, i64 0, i32 14
  %133 = load %struct.sv** %cop_warnings374, align 8, !tbaa !0
  %cmp375 = icmp eq %struct.sv* %133, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp375, label %if.then393, label %lor.lhs.false377

lor.lhs.false377:                                 ; preds = %land.lhs.true373
  %134 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings378 = getelementptr inbounds %struct.cop* %134, i64 0, i32 14
  %135 = load %struct.sv** %cop_warnings378, align 8, !tbaa !0
  %sv_any379 = getelementptr inbounds %struct.sv* %135, i64 0, i32 0
  %136 = load i8** %sv_any379, align 8, !tbaa !0
  %xpv_pv380 = bitcast i8* %136 to i8**
  %137 = load i8** %xpv_pv380, align 8, !tbaa !0
  %arrayidx381 = getelementptr inbounds i8* %137, i64 3
  %138 = load i8* %arrayidx381, align 1, !tbaa !1
  %and383 = and i8 %138, 4
  %tobool384 = icmp eq i8 %and383, 0
  br i1 %tobool384, label %lor.lhs.false385, label %if.then393

lor.lhs.false385:                                 ; preds = %lor.lhs.false377, %land.lhs.true369, %land.lhs.true365
  %139 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings386 = getelementptr inbounds %struct.cop* %139, i64 0, i32 14
  %140 = load %struct.sv** %cop_warnings386, align 8, !tbaa !0
  %cmp387 = icmp eq %struct.sv* %140, null
  br i1 %cmp387, label %land.lhs.true389, label %if.end394

land.lhs.true389:                                 ; preds = %lor.lhs.false385
  %141 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and391 = and i8 %141, 1
  %tobool392 = icmp eq i8 %and391, 0
  br i1 %tobool392, label %if.end394, label %if.then393

if.then393:                                       ; preds = %lor.lhs.false377, %land.lhs.true389, %land.lhs.true373
  call fastcc void @S_not_a_number(%struct.sv* %sv) #7
  br label %if.end394

if.end394:                                        ; preds = %land.lhs.true389, %if.then358, %if.then393, %lor.lhs.false385
  %cmp396 = icmp eq i32 %and259, 5
  br i1 %cmp396, label %if.then398, label %if.else401

if.then398:                                       ; preds = %if.end394
  %142 = load i32* %sv_flags, align 4, !tbaa !3
  %or400 = or i32 %142, 33685504
  store i32 %or400, i32* %sv_flags, align 4, !tbaa !3
  br label %if.end528

if.else401:                                       ; preds = %if.end394
  %143 = load i8** %sv_any251, align 8, !tbaa !0
  %xnv_nv403 = getelementptr inbounds i8* %143, i64 32
  %144 = bitcast i8* %xnv_nv403 to double*
  %145 = load double* %144, align 8, !tbaa !6
  %cmp404 = fcmp ogt double %145, 0.000000e+00
  br i1 %cmp404, label %cond.end413, label %cond.false409

cond.false409:                                    ; preds = %if.else401
  %sub412 = fsub double -0.000000e+00, %145
  br label %cond.end413

cond.end413:                                      ; preds = %if.else401, %cond.false409
  %cond414 = phi double [ %sub412, %cond.false409 ], [ %145, %if.else401 ]
  %call415 = call i64 @Perl_cast_uv(double %cond414) #8
  %cmp416 = icmp ult i64 %call415, 4294967296
  br i1 %cmp416, label %if.then418, label %if.else478

if.then418:                                       ; preds = %cond.end413
  %146 = load i32* %sv_flags, align 4, !tbaa !3
  %and420 = and i32 %146, 2097152
  %tobool421 = icmp eq i32 %and420, 0
  br i1 %tobool421, label %land.end425, label %land.rhs422

land.rhs422:                                      ; preds = %if.then418
  %call423 = call i32 @Perl_sv_backoff(%struct.sv* %sv) #7
  %.pre655 = load i32* %sv_flags, align 4, !tbaa !3
  br label %land.end425

land.end425:                                      ; preds = %if.then418, %land.rhs422
  %147 = phi i32 [ %146, %if.then418 ], [ %.pre655, %land.rhs422 ]
  %or430 = or i32 %147, 50462720
  store i32 %or430, i32* %sv_flags, align 4, !tbaa !3
  %148 = load i8** %sv_any251, align 8, !tbaa !0
  %xnv_nv432 = getelementptr inbounds i8* %148, i64 32
  %149 = bitcast i8* %xnv_nv432 to double*
  %150 = load double* %149, align 8, !tbaa !6
  %call433 = call i64 @Perl_cast_iv(double %150) #8
  %151 = load i8** %sv_any251, align 8, !tbaa !0
  %xiv_iv435 = getelementptr inbounds i8* %151, i64 24
  %152 = bitcast i8* %xiv_iv435 to i64*
  store i64 %call433, i64* %152, align 8, !tbaa !5
  %conv438 = sitofp i64 %call433 to double
  %xnv_nv440 = getelementptr inbounds i8* %151, i64 32
  %153 = bitcast i8* %xnv_nv440 to double*
  %154 = load double* %153, align 8, !tbaa !6
  %cmp441 = fcmp oeq double %conv438, %154
  br i1 %cmp441, label %if.then443, label %if.end454

if.then443:                                       ; preds = %land.end425
  %155 = load i32* %sv_flags, align 4, !tbaa !3
  %and445 = and i32 %155, 2097152
  %tobool446 = icmp eq i32 %and445, 0
  br i1 %tobool446, label %land.end450, label %land.rhs447

land.rhs447:                                      ; preds = %if.then443
  %call448 = call i32 @Perl_sv_backoff(%struct.sv* %sv) #7
  %.pre656 = load i32* %sv_flags, align 4, !tbaa !3
  %.pre657.pre = load i8** %sv_any251, align 8, !tbaa !0
  %xnv_nv456.phi.trans.insert.phi.trans.insert = getelementptr inbounds i8* %.pre657.pre, i64 32
  %.phi.trans.insert.phi.trans.insert = bitcast i8* %xnv_nv456.phi.trans.insert.phi.trans.insert to double*
  %.pre658.pre = load double* %.phi.trans.insert.phi.trans.insert, align 8, !tbaa !6
  br label %land.end450

land.end450:                                      ; preds = %if.then443, %land.rhs447
  %.pre658 = phi double [ %154, %if.then443 ], [ %.pre658.pre, %land.rhs447 ]
  %156 = phi i32 [ %155, %if.then443 ], [ %.pre656, %land.rhs447 ]
  %or453 = or i32 %156, 16842752
  store i32 %or453, i32* %sv_flags, align 4, !tbaa !3
  br label %if.end454

if.end454:                                        ; preds = %land.end450, %land.end425
  %157 = phi double [ %.pre658, %land.end450 ], [ %154, %land.end425 ]
  %cmp457 = fcmp ogt double %157, 0.000000e+00
  br i1 %cmp457, label %cond.end466, label %cond.false462

cond.false462:                                    ; preds = %if.end454
  %sub465 = fsub double -0.000000e+00, %157
  br label %cond.end466

cond.end466:                                      ; preds = %if.end454, %cond.false462
  %cond467 = phi double [ %sub465, %cond.false462 ], [ %157, %if.end454 ]
  %call468 = call i64 @Perl_cast_uv(double %cond467) #8
  %cmp469 = icmp ult i64 %call468, 9223372036854775807
  br i1 %cmp469, label %if.end528, label %if.then471

if.then471:                                       ; preds = %cond.end466
  %158 = load i8** %sv_any251, align 8, !tbaa !0
  %xnv_nv473 = getelementptr inbounds i8* %158, i64 32
  %159 = bitcast i8* %xnv_nv473 to double*
  %160 = load double* %159, align 8, !tbaa !6
  %call476 = call i64 @Perl_cast_uv(double %160) #8
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([107 x i8]* @.str7, i64 0, i64 0), double %160, i64 %call476, i64 9223372036854775807) #8
  br label %if.end528

if.else478:                                       ; preds = %cond.end413
  %161 = call fastcc i32 @S_sv_2iuv_non_preserve(%struct.sv* %sv) #7
  br label %if.end528

if.else483:                                       ; preds = %land.lhs.true250, %if.else246
  %and485 = and i32 %80, 512
  %tobool486 = icmp eq i32 %and485, 0
  br i1 %tobool486, label %if.then487, label %if.end519

if.then487:                                       ; preds = %if.else483
  %162 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings488 = getelementptr inbounds %struct.cop* %162, i64 0, i32 14
  %163 = load %struct.sv** %cop_warnings488, align 8, !tbaa !0
  %cmp489 = icmp eq %struct.sv* %163, null
  br i1 %cmp489, label %lor.lhs.false507, label %land.lhs.true491

land.lhs.true491:                                 ; preds = %if.then487
  %164 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings492 = getelementptr inbounds %struct.cop* %164, i64 0, i32 14
  %165 = load %struct.sv** %cop_warnings492, align 8, !tbaa !0
  %cmp493 = icmp eq %struct.sv* %165, inttoptr (i64 32 to %struct.sv*)
  br i1 %cmp493, label %lor.lhs.false507, label %land.lhs.true495

land.lhs.true495:                                 ; preds = %land.lhs.true491
  %166 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings496 = getelementptr inbounds %struct.cop* %166, i64 0, i32 14
  %167 = load %struct.sv** %cop_warnings496, align 8, !tbaa !0
  %cmp497 = icmp eq %struct.sv* %167, inttoptr (i64 16 to %struct.sv*)
  br i1 %cmp497, label %land.lhs.true515, label %lor.lhs.false499

lor.lhs.false499:                                 ; preds = %land.lhs.true495
  %168 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings500 = getelementptr inbounds %struct.cop* %168, i64 0, i32 14
  %169 = load %struct.sv** %cop_warnings500, align 8, !tbaa !0
  %sv_any501 = getelementptr inbounds %struct.sv* %169, i64 0, i32 0
  %170 = load i8** %sv_any501, align 8, !tbaa !0
  %xpv_pv502 = bitcast i8* %170 to i8**
  %171 = load i8** %xpv_pv502, align 8, !tbaa !0
  %arrayidx503 = getelementptr inbounds i8* %171, i64 10
  %172 = load i8* %arrayidx503, align 1, !tbaa !1
  %and505 = and i8 %172, 4
  %tobool506 = icmp eq i8 %and505, 0
  br i1 %tobool506, label %lor.lhs.false507, label %land.lhs.true515

lor.lhs.false507:                                 ; preds = %lor.lhs.false499, %land.lhs.true491, %if.then487
  %173 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cop_warnings508 = getelementptr inbounds %struct.cop* %173, i64 0, i32 14
  %174 = load %struct.sv** %cop_warnings508, align 8, !tbaa !0
  %cmp509 = icmp eq %struct.sv* %174, null
  br i1 %cmp509, label %land.lhs.true511, label %if.end519

land.lhs.true511:                                 ; preds = %lor.lhs.false507
  %175 = load i8* @PL_dowarn, align 1, !tbaa !1
  %and513 = and i8 %175, 1
  %tobool514 = icmp eq i8 %and513, 0
  %176 = load i32* @PL_localizing, align 4, !tbaa !3
  %tobool516 = icmp ne i32 %176, 0
  %or.cond541 = or i1 %tobool514, %tobool516
  br i1 %or.cond541, label %if.end519, label %if.then517

land.lhs.true515:                                 ; preds = %lor.lhs.false499, %land.lhs.true495
  %.old540 = load i32* @PL_localizing, align 4, !tbaa !3
  %tobool516.old = icmp eq i32 %.old540, 0
  br i1 %tobool516.old, label %if.then517, label %if.end519

if.then517:                                       ; preds = %land.lhs.true515, %land.lhs.true511
  call void @Perl_report_uninit() #7
  br label %if.end519

if.end519:                                        ; preds = %land.lhs.true515, %land.lhs.true511, %lor.lhs.false507, %if.else483, %if.then517
  %177 = load i32* %sv_flags, align 4, !tbaa !3
  %and521 = and i32 %177, 255
  %cmp522 = icmp eq i32 %and521, 0
  br i1 %cmp522, label %if.then524, label %return

if.then524:                                       ; preds = %if.end519
  %call525 = call signext i8 @Perl_sv_upgrade(%struct.sv* %sv, i32 1) #7
  br label %return

if.end528:                                        ; preds = %cond.end466, %if.end354, %if.then398, %if.then471, %if.else478, %if.end242, %if.then172, %land.lhs.true185, %land.end207
  %sv_any533 = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %178 = load i8** %sv_any533, align 8, !tbaa !0
  %cond539.in.in = getelementptr inbounds i8* %178, i64 24
  %cond539.in = bitcast i8* %cond539.in.in to i64*
  %cond539 = load i64* %cond539.in, align 8
  br label %return

return:                                           ; preds = %if.end28.i, %if.then3.i, %if.end519, %if.then524, %if.then142, %lor.lhs.false127, %if.then135, %land.lhs.true131, %cond.true, %cond.false, %land.lhs.true45, %if.then51, %lor.lhs.false41, %if.then26, %land.lhs.true49, %entry, %if.end528, %if.end87, %if.then11, %if.then6
  %retval.0 = phi i64 [ %4, %if.then6 ], [ %call13, %if.then11 ], [ %60, %if.end87 ], [ %cond539, %if.end528 ], [ 0, %entry ], [ 0, %land.lhs.true49 ], [ 0, %if.then26 ], [ 0, %lor.lhs.false41 ], [ 0, %if.then51 ], [ 0, %land.lhs.true45 ], [ %57, %cond.true ], [ %call86, %cond.false ], [ 0, %land.lhs.true131 ], [ 0, %if.then135 ], [ 0, %lor.lhs.false127 ], [ %83, %if.then142 ], [ 0, %if.then524 ], [ 0, %if.end519 ], [ %call32.i, %if.end28.i ], [ %17, %if.then3.i ]
  ret i64 %retval.0
}
