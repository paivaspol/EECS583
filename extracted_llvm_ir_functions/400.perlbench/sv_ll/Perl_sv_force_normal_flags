define void @Perl_sv_force_normal_flags(%struct.sv* %sv, i32 %flags) #0 {
entry:
  %sv_flags = getelementptr inbounds %struct.sv* %sv, i64 0, i32 2
  %0 = load i32* %sv_flags, align 4, !tbaa !3
  %and = and i32 %0, 8388608
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end36, label %if.then

if.then:                                          ; preds = %entry
  %and2 = and i32 %0, 1048576
  %tobool3 = icmp eq i32 %and2, 0
  br i1 %tobool3, label %if.else, label %if.then4

if.then4:                                         ; preds = %if.then
  %sv_any = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %1 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_pv = bitcast i8* %1 to i8**
  %2 = load i8** %xpv_pv, align 8, !tbaa !0
  %xpv_cur = getelementptr inbounds i8* %1, i64 8
  %3 = bitcast i8* %xpv_cur to i64*
  %4 = load i64* %3, align 8, !tbaa !5
  %xuv_uv = getelementptr inbounds i8* %1, i64 24
  %5 = bitcast i8* %xuv_uv to i64*
  %6 = load i64* %5, align 8, !tbaa !5
  %conv = trunc i64 %6 to i32
  %and10 = and i32 %0, -9437185
  store i32 %and10, i32* %sv_flags, align 4, !tbaa !3
  %xpv_len = getelementptr inbounds i8* %1, i64 16
  %7 = bitcast i8* %xpv_len to i64*
  %8 = load i64* %7, align 8, !tbaa !5
  %add = add i64 %4, 1
  %cmp = icmp ult i64 %8, %add
  br i1 %cmp, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.then4
  %call = tail call i8* @Perl_sv_grow(%struct.sv* %sv, i64 %add) #7
  %.pre72 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_pv17.phi.trans.insert = bitcast i8* %.pre72 to i8**
  %.pre73 = load i8** %xpv_pv17.phi.trans.insert, align 8, !tbaa !0
  br label %cond.end

cond.end:                                         ; preds = %if.then4, %cond.true
  %9 = phi i8* [ %2, %if.then4 ], [ %.pre73, %cond.true ]
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* %9, i8* %2, i64 %4, i32 1, i1 false)
  %10 = load i8** %sv_any, align 8, !tbaa !0
  %xpv_pv19 = bitcast i8* %10 to i8**
  %11 = load i8** %xpv_pv19, align 8, !tbaa !0
  %xpv_cur21 = getelementptr inbounds i8* %10, i64 8
  %12 = bitcast i8* %xpv_cur21 to i64*
  %13 = load i64* %12, align 8, !tbaa !5
  %add.ptr = getelementptr inbounds i8* %11, i64 %13
  store i8 0, i8* %add.ptr, align 1, !tbaa !1
  %14 = load i32* %sv_flags, align 4, !tbaa !3
  %and23 = and i32 %14, 536870912
  %tobool24 = icmp eq i32 %and23, 0
  br i1 %tobool24, label %cond.end29, label %cond.true25

cond.true25:                                      ; preds = %cond.end
  %sub = sub i64 0, %4
  %sext = shl i64 %sub, 32
  %conv27 = ashr exact i64 %sext, 32
  br label %cond.end29

cond.end29:                                       ; preds = %cond.end, %cond.true25
  %cond30 = phi i64 [ %conv27, %cond.true25 ], [ %4, %cond.end ]
  %conv31 = trunc i64 %cond30 to i32
  tail call void @Perl_unsharepvn(i8* %2, i32 %conv31, i32 %conv) #8
  br label %if.end36

if.else:                                          ; preds = %if.then
  %15 = load volatile %struct.cop** @PL_curcop, align 8, !tbaa !0
  %cmp32 = icmp eq %struct.cop* %15, @PL_compiling
  br i1 %cmp32, label %if.end36, label %if.then34

if.then34:                                        ; preds = %if.else
  tail call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([0 x i8]* @PL_no_modify, i64 0, i64 0)) #8
  br label %if.end36

if.end36:                                         ; preds = %if.else, %entry, %cond.end29, %if.then34
  %16 = load i32* %sv_flags, align 4, !tbaa !3
  %and38 = and i32 %16, 524288
  %tobool39 = icmp eq i32 %and38, 0
  br i1 %tobool39, label %if.else41, label %if.then40

if.then40:                                        ; preds = %if.end36
  tail call void @Perl_sv_unref_flags(%struct.sv* %sv, i32 %flags) #7
  br label %if.end51

if.else41:                                        ; preds = %if.end36
  %17 = and i32 %16, 1048831
  %18 = icmp eq i32 %17, 1048589
  br i1 %18, label %if.then49, label %if.end51

if.then49:                                        ; preds = %if.else41
  %and.i = and i32 %16, -1048577
  store i32 %and.i, i32* %sv_flags, align 4, !tbaa !3
  %sv_any.i = getelementptr inbounds %struct.sv* %sv, i64 0, i32 0
  %19 = load i8** %sv_any.i, align 8, !tbaa !0
  %xgv_gp.i = getelementptr inbounds i8* %19, i64 56
  %20 = bitcast i8* %xgv_gp.i to %struct.gp**
  %21 = load %struct.gp** %20, align 8, !tbaa !0
  %tobool.i = icmp eq %struct.gp* %21, null
  br i1 %tobool.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.then49
  %22 = bitcast %struct.sv* %sv to %struct.gv*
  tail call void @Perl_gp_free(%struct.gv* %22) #8
  %.pre = load i8** %sv_any.i, align 8, !tbaa !0
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.then49
  %23 = phi i8* [ %.pre, %if.then.i ], [ %19, %if.then49 ]
  %xgv_stash.i = getelementptr inbounds i8* %23, i64 80
  %24 = bitcast i8* %xgv_stash.i to %struct.hv**
  %25 = load %struct.hv** %24, align 8, !tbaa !0
  %tobool2.i = icmp eq %struct.hv* %25, null
  br i1 %tobool2.i, label %S_sv_unglob.exit, label %if.then3.i

if.then3.i:                                       ; preds = %if.end.i
  %26 = bitcast %struct.hv* %25 to %struct.sv*
  tail call void @Perl_sv_free(%struct.sv* %26) #8
  %27 = load i8** %sv_any.i, align 8, !tbaa !0
  %xgv_stash7.i = getelementptr inbounds i8* %27, i64 80
  %28 = bitcast i8* %xgv_stash7.i to %struct.hv**
  store %struct.hv* null, %struct.hv** %28, align 8, !tbaa !0
  br label %S_sv_unglob.exit

S_sv_unglob.exit:                                 ; preds = %if.end.i, %if.then3.i
  %call.i = tail call i32 @Perl_sv_unmagic(%struct.sv* %sv, i32 42) #8
  %29 = load i8** %sv_any.i, align 8, !tbaa !0
  %xgv_name.i = getelementptr inbounds i8* %29, i64 64
  %30 = bitcast i8* %xgv_name.i to i8**
  %31 = load i8** %30, align 8, !tbaa !0
  tail call void @Perl_safesysfree(i8* %31) #8
  %32 = load i8** %sv_any.i, align 8, !tbaa !0
  %33 = getelementptr inbounds i8* %32, i64 88
  %34 = load i8* %33, align 1, !tbaa !1
  %and11.i = and i8 %34, -3
  store i8 %and11.i, i8* %33, align 1, !tbaa !1
  %call13.i = tail call fastcc %struct.xpvmg* @S_new_xpvmg() #8
  %35 = bitcast %struct.xpvmg* %call13.i to i8*
  %36 = load i8** %sv_any.i, align 8, !tbaa !0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 56, i32 8, i1 false) #3, !tbaa.struct !7
  %37 = load i8** %sv_any.i, align 8, !tbaa !0
  tail call void @Perl_safesysfree(i8* %37) #8
  store i8* %35, i8** %sv_any.i, align 8, !tbaa !0
  %38 = load i32* %sv_flags, align 4, !tbaa !3
  %and18.i = and i32 %38, -256
  %or.i = or i32 %and18.i, 7
  store i32 %or.i, i32* %sv_flags, align 4, !tbaa !3
  br label %if.end51

if.end51:                                         ; preds = %if.else41, %S_sv_unglob.exit, %if.then40
  ret void
}
