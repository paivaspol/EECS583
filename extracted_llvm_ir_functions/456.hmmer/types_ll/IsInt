define i32 @IsInt(i8* %s) #0 {
entry:
  %cmp = icmp eq i8* %s, null
  br i1 %cmp, label %if.then, label %while.cond.preheader

while.cond.preheader:                             ; preds = %entry
  %call = tail call i16** @__ctype_b_loc() #5
  %0 = load i16** %call, align 8, !tbaa !0
  br label %while.cond

if.then:                                          ; preds = %entry
  store i32 6, i32* @squid_errno, align 4, !tbaa !3
  br label %return

while.cond:                                       ; preds = %while.cond, %while.cond.preheader
  %s.addr.0 = phi i8* [ %incdec.ptr, %while.cond ], [ %s, %while.cond.preheader ]
  %1 = load i8* %s.addr.0, align 1, !tbaa !1
  %idxprom = sext i8 %1 to i64
  %arrayidx = getelementptr inbounds i16* %0, i64 %idxprom
  %2 = load i16* %arrayidx, align 2, !tbaa !4
  %and = and i16 %2, 8192
  %tobool = icmp eq i16 %and, 0
  %incdec.ptr = getelementptr inbounds i8* %s.addr.0, i64 1
  br i1 %tobool, label %while.end, label %while.cond

while.end:                                        ; preds = %while.cond
  switch i8 %1, label %if.end10 [
    i8 45, label %if.then8
    i8 43, label %if.then8
  ]

if.then8:                                         ; preds = %while.end, %while.end
  br label %if.end10

if.end10:                                         ; preds = %while.end, %if.then8
  %s.addr.1 = phi i8* [ %incdec.ptr, %if.then8 ], [ %s.addr.0, %while.end ]
  %call11 = tail call i32 @strncmp(i8* %s.addr.1, i8* getelementptr inbounds ([3 x i8]* @.str, i64 0, i64 0), i64 2) #6
  %cmp12 = icmp eq i32 %call11, 0
  br i1 %cmp12, label %land.lhs.true, label %lor.lhs.false18

land.lhs.true:                                    ; preds = %if.end10
  %call14 = tail call i64 @strlen(i8* %s.addr.1) #6
  %conv15 = trunc i64 %call14 to i32
  %cmp16 = icmp sgt i32 %conv15, 2
  br i1 %cmp16, label %if.end39, label %lor.lhs.false18

lor.lhs.false18:                                  ; preds = %land.lhs.true, %if.end10
  %call19 = tail call i32 @strncmp(i8* %s.addr.1, i8* getelementptr inbounds ([3 x i8]* @.str1, i64 0, i64 0), i64 2) #6
  %cmp20 = icmp eq i32 %call19, 0
  br i1 %cmp20, label %land.lhs.true22, label %if.else

land.lhs.true22:                                  ; preds = %lor.lhs.false18
  %call23 = tail call i64 @strlen(i8* %s.addr.1) #6
  %conv24 = trunc i64 %call23 to i32
  %cmp25 = icmp sgt i32 %conv24, 2
  br i1 %cmp25, label %if.end39, label %if.else

if.else:                                          ; preds = %land.lhs.true22, %lor.lhs.false18
  %3 = load i8* %s.addr.1, align 1, !tbaa !1
  %cmp29 = icmp eq i8 %3, 48
  br i1 %cmp29, label %land.lhs.true31, label %while.cond42.preheader

land.lhs.true31:                                  ; preds = %if.else
  %call32 = tail call i64 @strlen(i8* %s.addr.1) #6
  %conv33 = trunc i64 %call32 to i32
  %cmp34 = icmp sgt i32 %conv33, 1
  %incdec.ptr37 = getelementptr inbounds i8* %s.addr.1, i64 1
  %incdec.ptr37.s.addr.1 = select i1 %cmp34, i8* %incdec.ptr37, i8* %s.addr.1
  %.pre = load i8* %incdec.ptr37.s.addr.1, align 1, !tbaa !1
  br label %while.cond42.preheader

while.cond42.preheader:                           ; preds = %if.else, %land.lhs.true31
  %4 = phi i8 [ %.pre, %land.lhs.true31 ], [ %3, %if.else ]
  %s.addr.3.ph = phi i8* [ %incdec.ptr37.s.addr.1, %land.lhs.true31 ], [ %s.addr.1, %if.else ]
  %cmp4498 = icmp eq i8 %4, 0
  br i1 %cmp4498, label %return, label %while.body46

if.end39:                                         ; preds = %land.lhs.true, %land.lhs.true22
  %add.ptr = getelementptr inbounds i8* %s.addr.1, i64 2
  %5 = load i8* %add.ptr, align 1, !tbaa !1
  %cmp6194 = icmp eq i8 %5, 0
  br i1 %cmp6194, label %return, label %while.body63

while.cond42:                                     ; preds = %while.body46
  %6 = load i8* %incdec.ptr56, align 1, !tbaa !1
  %cmp44 = icmp eq i8 %6, 0
  br i1 %cmp44, label %return, label %while.body46

while.body46:                                     ; preds = %while.cond42.preheader, %while.cond42
  %7 = phi i8 [ %6, %while.cond42 ], [ %4, %while.cond42.preheader ]
  %s.addr.399 = phi i8* [ %incdec.ptr56, %while.cond42 ], [ %s.addr.3.ph, %while.cond42.preheader ]
  %idxprom48 = sext i8 %7 to i64
  %arrayidx50 = getelementptr inbounds i16* %0, i64 %idxprom48
  %8 = load i16* %arrayidx50, align 2, !tbaa !4
  %and52 = and i16 %8, 2048
  %tobool53 = icmp eq i16 %and52, 0
  %incdec.ptr56 = getelementptr inbounds i8* %s.addr.399, i64 1
  br i1 %tobool53, label %return, label %while.cond42

while.cond59:                                     ; preds = %while.body63
  %9 = load i8* %incdec.ptr73, align 1, !tbaa !1
  %cmp61 = icmp eq i8 %9, 0
  br i1 %cmp61, label %return, label %while.body63

while.body63:                                     ; preds = %if.end39, %while.cond59
  %10 = phi i8 [ %9, %while.cond59 ], [ %5, %if.end39 ]
  %s.addr.495 = phi i8* [ %incdec.ptr73, %while.cond59 ], [ %add.ptr, %if.end39 ]
  %idxprom65 = sext i8 %10 to i64
  %arrayidx67 = getelementptr inbounds i16* %0, i64 %idxprom65
  %11 = load i16* %arrayidx67, align 2, !tbaa !4
  %and69 = and i16 %11, 4096
  %tobool70 = icmp eq i16 %and69, 0
  %incdec.ptr73 = getelementptr inbounds i8* %s.addr.495, i64 1
  br i1 %tobool70, label %return, label %while.cond59

return:                                           ; preds = %while.cond42.preheader, %while.body46, %while.cond42, %if.end39, %while.body63, %while.cond59, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 1, %if.end39 ], [ 0, %while.body63 ], [ 1, %while.cond59 ], [ 1, %while.cond42.preheader ], [ 0, %while.body46 ], [ 1, %while.cond42 ]
  ret i32 %retval.0
}
