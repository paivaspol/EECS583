define void @SampleAlignment(%struct.msa_struct* %msa, i32 %sample, %struct.msa_struct** %ret_new) #0 {
  tail call void @llvm.dbg.value(metadata %struct.msa_struct* %msa, i64 0, metadata !191, metadata !292), !dbg !997
  tail call void @llvm.dbg.value(metadata i32 %sample, i64 0, metadata !192, metadata !292), !dbg !998
  tail call void @llvm.dbg.value(metadata %struct.msa_struct** %ret_new, i64 0, metadata !193, metadata !292), !dbg !999
  %1 = getelementptr inbounds %struct.msa_struct* %msa, i64 0, i32 4, !dbg !1000
  %2 = load i32* %1, align 4, !dbg !1000, !tbaa !941
  %3 = sext i32 %2 to i64, !dbg !1000
  %4 = shl nsw i64 %3, 2, !dbg !1000
  %5 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([64 x i8]* @.str1, i64 0, i64 0), i32 596, i64 %4) #5, !dbg !1000
  %6 = bitcast i8* %5 to i32*, !dbg !1001
  tail call void @llvm.dbg.value(metadata i32* %6, i64 0, metadata !194, metadata !292), !dbg !1002
  %7 = load i32* %1, align 4, !dbg !1003, !tbaa !941
  %8 = sext i32 %7 to i64, !dbg !1003
  %9 = shl nsw i64 %8, 2, !dbg !1003
  %10 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([64 x i8]* @.str1, i64 0, i64 0), i32 597, i64 %9) #5, !dbg !1003
  %11 = bitcast i8* %10 to i32*, !dbg !1004
  tail call void @llvm.dbg.value(metadata i32* %11, i64 0, metadata !195, metadata !292), !dbg !1005
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !196, metadata !292), !dbg !1006
  %12 = load i32* %1, align 4, !dbg !1007, !tbaa !941
  %13 = icmp sgt i32 %12, 0, !dbg !1010
  br i1 %13, label %.lr.ph5, label %._crit_edge6, !dbg !1011

.lr.ph5:                                          ; preds = %0, %.lr.ph5
  %indvars.iv8 = phi i64 [ %indvars.iv.next9, %.lr.ph5 ], [ 0, %0 ]
  %14 = getelementptr inbounds i32* %6, i64 %indvars.iv8, !dbg !1012
  %15 = trunc i64 %indvars.iv8 to i32, !dbg !1014
  store i32 %15, i32* %14, align 4, !dbg !1014, !tbaa !593
  %16 = getelementptr inbounds i32* %11, i64 %indvars.iv8, !dbg !1015
  store i32 0, i32* %16, align 4, !dbg !1016, !tbaa !593
  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1, !dbg !1011
  %17 = load i32* %1, align 4, !dbg !1007, !tbaa !941
  %18 = sext i32 %17 to i64, !dbg !1010
  %19 = icmp slt i64 %indvars.iv.next9, %18, !dbg !1010
  br i1 %19, label %.lr.ph5, label %._crit_edge6, !dbg !1011

._crit_edge6:                                     ; preds = %.lr.ph5, %0
  %.lcssa = phi i32 [ %12, %0 ], [ %17, %.lr.ph5 ]
  %20 = icmp sgt i32 %.lcssa, %sample, !dbg !1017
  tail call void @llvm.dbg.value(metadata i32 %17, i64 0, metadata !192, metadata !292), !dbg !998
  %sample. = select i1 %20, i32 %sample, i32 %.lcssa, !dbg !1019
  tail call void @llvm.dbg.value(metadata i32 %17, i64 0, metadata !198, metadata !292), !dbg !1020
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !196, metadata !292), !dbg !1006
  %21 = icmp sgt i32 %sample., 0, !dbg !1021
  br i1 %21, label %.lr.ph, label %._crit_edge, !dbg !1024

.lr.ph:                                           ; preds = %._crit_edge6
  %22 = getelementptr inbounds %struct.msa_struct* %msa, i64 0, i32 1, !dbg !1025
  %23 = sext i32 %.lcssa to i64
  %24 = xor i32 %.lcssa, -1, !dbg !1024
  %25 = xor i32 %sample, -1, !dbg !1024
  %26 = icmp sgt i32 %24, %25
  %smax = select i1 %26, i32 %24, i32 %25
  %27 = sub i32 -2, %smax, !dbg !1024
  br label %28, !dbg !1024

; <label>:28                                      ; preds = %28, %.lr.ph
  %indvars.iv = phi i64 [ %23, %.lr.ph ], [ %indvars.iv.next, %28 ]
  %i.11 = phi i32 [ 0, %.lr.ph ], [ %47, %28 ]
  %29 = tail call double @sre_random() #5, !dbg !1027
  %30 = trunc i64 %indvars.iv to i32, !dbg !1027
  %31 = sitofp i32 %30 to double, !dbg !1027
  %32 = fmul double %31, %29, !dbg !1027
  %33 = fptosi double %32 to i32, !dbg !1027
  tail call void @llvm.dbg.value(metadata i32 %33, i64 0, metadata !197, metadata !292), !dbg !1028
  %34 = sext i32 %33 to i64, !dbg !1029
  %35 = getelementptr inbounds i32* %6, i64 %34, !dbg !1029
  %36 = load i32* %35, align 4, !dbg !1029, !tbaa !593
  %37 = sext i32 %36 to i64, !dbg !1030
  %38 = load i8*** %22, align 8, !dbg !1025, !tbaa !977
  %39 = getelementptr inbounds i8** %38, i64 %37, !dbg !1030
  %40 = load i8** %39, align 8, !dbg !1030, !tbaa !311
  %41 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([14 x i8]* @.str4, i64 0, i64 0), i32 %36, i8* %40) #5, !dbg !1031
  %42 = load i32* %35, align 4, !dbg !1032, !tbaa !593
  %43 = sext i32 %42 to i64, !dbg !1033
  %44 = getelementptr inbounds i32* %11, i64 %43, !dbg !1033
  store i32 1, i32* %44, align 4, !dbg !1034, !tbaa !593
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !1024
  %45 = getelementptr inbounds i32* %6, i64 %indvars.iv.next, !dbg !1035
  %46 = load i32* %45, align 4, !dbg !1035, !tbaa !593
  store i32 %46, i32* %35, align 4, !dbg !1036, !tbaa !593
  %47 = add nuw nsw i32 %i.11, 1, !dbg !1037
  tail call void @llvm.dbg.value(metadata i32 %47, i64 0, metadata !196, metadata !292), !dbg !1006
  %exitcond = icmp eq i32 %i.11, %27, !dbg !1024
  br i1 %exitcond, label %._crit_edge, label %28, !dbg !1024

._crit_edge:                                      ; preds = %28, %._crit_edge6
  tail call void @MSASmallerAlignment(%struct.msa_struct* %msa, i32* %11, %struct.msa_struct** %ret_new) #5, !dbg !1038
  tail call void @free(i8* %5) #6, !dbg !1039
  tail call void @free(i8* %10) #6, !dbg !1040
  ret void, !dbg !1041
}
