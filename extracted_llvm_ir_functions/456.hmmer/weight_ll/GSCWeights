define void @GSCWeights(i8** %aseq, i32 %nseq, i32 %alen, float* nocapture %wgt) #0 {
entry:
  %dmx = alloca float**, align 8
  %tree = alloca %struct.phylo_s*, align 8
  %cmp = icmp eq i32 %nseq, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store float 1.000000e+00, float* %wgt, align 4, !tbaa !0
  br label %return

if.end:                                           ; preds = %entry
  call void @MakeDiffMx(i8** %aseq, i32 %nseq, float*** %dmx) #5
  %0 = load float*** %dmx, align 8, !tbaa !3
  %call = call i32 @Cluster(float** %0, i32 %nseq, i32 2, %struct.phylo_s** %tree) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then1, label %if.end2

if.then1:                                         ; preds = %if.end
  call void (i8*, ...)* @Die(i8* getelementptr inbounds ([17 x i8]* @.str, i64 0, i64 0)) #5
  br label %if.end2

if.end2:                                          ; preds = %if.end, %if.then1
  %mul = shl i32 %nseq, 1
  %sub = add nsw i32 %mul, -1
  %conv = sext i32 %sub to i64
  %mul3 = shl nsw i64 %conv, 2
  %call4 = call i8* @sre_malloc(i8* getelementptr inbounds ([52 x i8]* @.str1, i64 0, i64 0), i32 67, i64 %mul3) #5
  %1 = bitcast i8* %call4 to float*
  %call9 = call i8* @sre_malloc(i8* getelementptr inbounds ([52 x i8]* @.str1, i64 0, i64 0), i32 68, i64 %mul3) #5
  %2 = bitcast i8* %call9 to float*
  %call14 = call i8* @sre_malloc(i8* getelementptr inbounds ([52 x i8]* @.str1, i64 0, i64 0), i32 69, i64 %mul3) #5
  %3 = bitcast i8* %call14 to float*
  %cmp1567 = icmp sgt i32 %nseq, 0
  br i1 %cmp1567, label %for.body, label %for.end33.critedge

for.body:                                         ; preds = %if.end2, %for.body
  %indvars.iv70 = phi i64 [ %indvars.iv.next71, %for.body ], [ 0, %if.end2 ]
  %arrayidx17 = getelementptr inbounds float* %2, i64 %indvars.iv70
  store float 0.000000e+00, float* %arrayidx17, align 4, !tbaa !0
  %arrayidx19 = getelementptr inbounds float* %1, i64 %indvars.iv70
  store float 0.000000e+00, float* %arrayidx19, align 4, !tbaa !0
  %indvars.iv.next71 = add i64 %indvars.iv70, 1
  %lftr.wideiv72 = trunc i64 %indvars.iv.next71 to i32
  %exitcond73 = icmp eq i32 %lftr.wideiv72, %nseq
  br i1 %exitcond73, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %4 = load %struct.phylo_s** %tree, align 8, !tbaa !3
  call fastcc void @upweight(%struct.phylo_s* %4, i32 %nseq, float* %1, float* %2, i32 %nseq) #6
  %conv20 = sitofp i32 %nseq to float
  %idxprom21 = sext i32 %nseq to i64
  %arrayidx22 = getelementptr inbounds float* %3, i64 %idxprom21
  store float %conv20, float* %arrayidx22, align 4, !tbaa !0
  %5 = load %struct.phylo_s** %tree, align 8, !tbaa !3
  call fastcc void @downweight(%struct.phylo_s* %5, i32 %nseq, float* %1, float* %2, float* %3, i32 %nseq) #6
  br i1 %cmp1567, label %for.body26, label %for.end33

for.body26:                                       ; preds = %for.end, %for.body26
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body26 ], [ 0, %for.end ]
  %arrayidx28 = getelementptr inbounds float* %3, i64 %indvars.iv
  %6 = load float* %arrayidx28, align 4, !tbaa !0
  %arrayidx30 = getelementptr inbounds float* %wgt, i64 %indvars.iv
  store float %6, float* %arrayidx30, align 4, !tbaa !0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nseq
  br i1 %exitcond, label %for.end33, label %for.body26

for.end33.critedge:                               ; preds = %if.end2
  %7 = load %struct.phylo_s** %tree, align 8, !tbaa !3
  call fastcc void @upweight(%struct.phylo_s* %7, i32 %nseq, float* %1, float* %2, i32 %nseq) #6
  %conv20.c = sitofp i32 %nseq to float
  %idxprom21.c = sext i32 %nseq to i64
  %arrayidx22.c = getelementptr inbounds float* %3, i64 %idxprom21.c
  store float %conv20.c, float* %arrayidx22.c, align 4, !tbaa !0
  %8 = load %struct.phylo_s** %tree, align 8, !tbaa !3
  call fastcc void @downweight(%struct.phylo_s* %8, i32 %nseq, float* %1, float* %2, float* %3, i32 %nseq) #6
  br label %for.end33

for.end33:                                        ; preds = %for.end33.critedge, %for.body26, %for.end
  %9 = load float*** %dmx, align 8, !tbaa !3
  call void @FMX2Free(float** %9) #5
  %10 = load %struct.phylo_s** %tree, align 8, !tbaa !3
  call void @FreePhylo(%struct.phylo_s* %10, i32 %nseq) #5
  call void @free(i8* %call4) #5
  call void @free(i8* %call9) #5
  call void @free(i8* %call14) #5
  br label %return

return:                                           ; preds = %for.end33, %if.then
  ret void
}
