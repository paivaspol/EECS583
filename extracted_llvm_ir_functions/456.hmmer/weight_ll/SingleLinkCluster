define void @SingleLinkCluster(i8** nocapture readonly %aseq, i32 %nseq, i32 %alen, float %maxid, i32** nocapture %ret_c, i32* nocapture %ret_nc) #0 {
  tail call void @llvm.dbg.value(metadata i8** %aseq, i64 0, metadata !204, metadata !292), !dbg !752
  tail call void @llvm.dbg.value(metadata i32 %nseq, i64 0, metadata !205, metadata !292), !dbg !753
  tail call void @llvm.dbg.value(metadata i32 %alen, i64 0, metadata !206, metadata !292), !dbg !754
  tail call void @llvm.dbg.value(metadata float %maxid, i64 0, metadata !207, metadata !292), !dbg !755
  tail call void @llvm.dbg.value(metadata i32** %ret_c, i64 0, metadata !208, metadata !292), !dbg !756
  tail call void @llvm.dbg.value(metadata i32* %ret_nc, i64 0, metadata !209, metadata !292), !dbg !757
  %1 = sext i32 %nseq to i64, !dbg !758
  %2 = shl nsw i64 %1, 2, !dbg !758
  %3 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([64 x i8]* @.str1, i64 0, i64 0), i32 716, i64 %2) #5, !dbg !758
  %4 = bitcast i8* %3 to i32*, !dbg !758
  tail call void @llvm.dbg.value(metadata i32* %4, i64 0, metadata !210, metadata !292), !dbg !759
  %5 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([64 x i8]* @.str1, i64 0, i64 0), i32 717, i64 %2) #5, !dbg !760
  %6 = bitcast i8* %5 to i32*, !dbg !760
  tail call void @llvm.dbg.value(metadata i32* %6, i64 0, metadata !212, metadata !292), !dbg !761
  %7 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([64 x i8]* @.str1, i64 0, i64 0), i32 718, i64 %2) #5, !dbg !762
  %8 = bitcast i8* %7 to i32*, !dbg !762
  tail call void @llvm.dbg.value(metadata i32* %8, i64 0, metadata !214, metadata !292), !dbg !763
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !218, metadata !292), !dbg !764
  %9 = icmp sgt i32 %nseq, 0, !dbg !765
  br i1 %9, label %.lr.ph13, label %._crit_edge9, !dbg !768

.lr.ph13:                                         ; preds = %0
  %10 = add i32 %nseq, -1, !dbg !768
  br label %13, !dbg !768

.preheader:                                       ; preds = %13
  br i1 %9, label %.lr.ph8, label %._crit_edge9, !dbg !769

.lr.ph8:                                          ; preds = %.preheader
  %11 = fpext float %maxid to double, !dbg !770
  %12 = fsub double 1.000000e+00, %11, !dbg !776
  br label %16, !dbg !769

; <label>:13                                      ; preds = %13, %.lr.ph13
  %indvars.iv21 = phi i64 [ 0, %.lr.ph13 ], [ %indvars.iv.next22, %13 ]
  %14 = getelementptr inbounds i32* %4, i64 %indvars.iv21, !dbg !777
  %15 = trunc i64 %indvars.iv21 to i32, !dbg !778
  store i32 %15, i32* %14, align 4, !dbg !778, !tbaa !593
  %indvars.iv.next22 = add nuw nsw i64 %indvars.iv21, 1, !dbg !768
  %exitcond = icmp eq i32 %15, %10, !dbg !768
  br i1 %exitcond, label %.preheader, label %13, !dbg !768

; <label>:16                                      ; preds = %.lr.ph8, %._crit_edge
  %na.07 = phi i32 [ %nseq, %.lr.ph8 ], [ %na.1.lcssa, %._crit_edge ]
  %nc.06 = phi i32 [ 0, %.lr.ph8 ], [ %72, %._crit_edge ]
  %nb.05 = phi i32 [ 0, %.lr.ph8 ], [ %nb.1.lcssa, %._crit_edge ]
  %17 = add nsw i32 %na.07, -1, !dbg !779
  %18 = sext i32 %17 to i64, !dbg !780
  %19 = getelementptr inbounds i32* %4, i64 %18, !dbg !780
  %20 = load i32* %19, align 4, !dbg !780, !tbaa !593
  tail call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !216, metadata !292), !dbg !781
  tail call void @llvm.dbg.value(metadata i32 %17, i64 0, metadata !211, metadata !292), !dbg !782
  %21 = sext i32 %nb.05 to i64, !dbg !783
  %22 = getelementptr inbounds i32* %6, i64 %21, !dbg !783
  store i32 %20, i32* %22, align 4, !dbg !784, !tbaa !593
  %23 = add nsw i32 %nb.05, 1, !dbg !785
  tail call void @llvm.dbg.value(metadata i32 %23, i64 0, metadata !213, metadata !292), !dbg !786
  %24 = icmp sgt i32 %nb.05, -1, !dbg !787
  br i1 %24, label %.lr.ph, label %._crit_edge, !dbg !788

.loopexit:                                        ; preds = %37
  %25 = trunc i64 %indvars.iv19 to i32, !dbg !787
  %26 = trunc i64 %indvars.iv17 to i32, !dbg !787
  %27 = icmp sgt i32 %26, 0, !dbg !787
  br i1 %27, label %.lr.ph, label %._crit_edge, !dbg !788

.lr.ph:                                           ; preds = %16, %.loopexit
  %na.13 = phi i32 [ %25, %.loopexit ], [ %17, %16 ]
  %nb.12 = phi i32 [ %26, %.loopexit ], [ %23, %16 ]
  %28 = add i32 %nb.12, -1, !dbg !789
  %29 = sext i32 %28 to i64, !dbg !790
  %30 = getelementptr inbounds i32* %6, i64 %29, !dbg !790
  %31 = load i32* %30, align 4, !dbg !790, !tbaa !593
  tail call void @llvm.dbg.value(metadata i32 %31, i64 0, metadata !216, metadata !292), !dbg !781
  tail call void @llvm.dbg.value(metadata i32 %28, i64 0, metadata !213, metadata !292), !dbg !786
  %32 = sext i32 %31 to i64, !dbg !791
  %33 = getelementptr inbounds i32* %8, i64 %32, !dbg !791
  store i32 %nc.06, i32* %33, align 4, !dbg !792, !tbaa !593
  %34 = getelementptr inbounds i8** %aseq, i64 %32, !dbg !793
  %35 = sext i32 %na.13 to i64
  br label %.outer, !dbg !794

.outer:                                           ; preds = %66, %.lr.ph
  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %66 ], [ %35, %.lr.ph ]
  %indvars.iv17 = phi i64 [ %indvars.iv.next18, %66 ], [ %29, %.lr.ph ]
  %na.2.ph = phi i32 [ %67, %66 ], [ %na.13, %.lr.ph ]
  %i.1.in.ph = phi i32 [ %i.1, %66 ], [ %na.13, %.lr.ph ]
  %36 = sext i32 %i.1.in.ph to i64
  br label %37

; <label>:37                                      ; preds = %.outer, %simple_distance.exit
  %indvars.iv = phi i64 [ %36, %.outer ], [ %indvars.iv.next, %simple_distance.exit ]
  %i.1.in = phi i32 [ %i.1.in.ph, %.outer ], [ %i.1, %simple_distance.exit ]
  %i.1 = add nsw i32 %i.1.in, -1, !dbg !795
  %38 = icmp sgt i64 %indvars.iv, 0, !dbg !796
  br i1 %38, label %39, label %.loopexit, !dbg !797

; <label>:39                                      ; preds = %37
  %40 = load i8** %34, align 8, !dbg !793, !tbaa !311
  %41 = sext i32 %i.1 to i64, !dbg !798
  %42 = getelementptr inbounds i32* %4, i64 %41, !dbg !798
  %43 = load i32* %42, align 4, !dbg !798, !tbaa !593
  %44 = sext i32 %43 to i64, !dbg !799
  %45 = getelementptr inbounds i8** %aseq, i64 %44, !dbg !799
  %46 = load i8** %45, align 8, !dbg !799, !tbaa !311
  tail call void @llvm.dbg.value(metadata i8* %40, i64 0, metadata !266, metadata !292), !dbg !800
  tail call void @llvm.dbg.value(metadata i8* %46, i64 0, metadata !267, metadata !292), !dbg !802
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !268, metadata !292), !dbg !803
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !269, metadata !292), !dbg !804
  br label %47, !dbg !805

; <label>:47                                      ; preds = %54, %39
  %.01.i = phi i8* [ %40, %39 ], [ %55, %54 ], !dbg !806
  %.0.i = phi i8* [ %46, %39 ], [ %56, %54 ], !dbg !806
  %diff.0.i = phi i32 [ 0, %39 ], [ %diff.2.i, %54 ], !dbg !806
  %valid.0.i = phi i32 [ 0, %39 ], [ %valid.1.i, %54 ], !dbg !806
  %48 = load i8* %.01.i, align 1, !dbg !807, !tbaa !519
  switch i8 %48, label %49 [
    i8 0, label %57
    i8 32, label %54
    i8 46, label %54
    i8 95, label %54
    i8 45, label %54
    i8 126, label %54
  ], !dbg !808

; <label>:49                                      ; preds = %47
  %50 = load i8* %.0.i, align 1, !dbg !809, !tbaa !519
  switch i8 %50, label %51 [
    i8 32, label %54
    i8 46, label %54
    i8 95, label %54
    i8 45, label %54
    i8 126, label %54
  ], !dbg !809

; <label>:51                                      ; preds = %49
  %not..i = icmp ne i8 %48, %50, !dbg !810
  %52 = zext i1 %not..i to i32, !dbg !810
  %diff.0..i = add nsw i32 %52, %diff.0.i, !dbg !810
  %53 = add nsw i32 %valid.0.i, 1, !dbg !811
  tail call void @llvm.dbg.value(metadata i32 %53, i64 0, metadata !269, metadata !292), !dbg !804
  br label %54, !dbg !812

; <label>:54                                      ; preds = %51, %49, %49, %49, %49, %49, %47, %47, %47, %47, %47
  %diff.2.i = phi i32 [ %diff.0.i, %49 ], [ %diff.0..i, %51 ], [ %diff.0.i, %47 ], [ %diff.0.i, %47 ], [ %diff.0.i, %47 ], [ %diff.0.i, %47 ], [ %diff.0.i, %47 ], [ %diff.0.i, %49 ], [ %diff.0.i, %49 ], [ %diff.0.i, %49 ], [ %diff.0.i, %49 ], !dbg !806
  %valid.1.i = phi i32 [ %valid.0.i, %49 ], [ %53, %51 ], [ %valid.0.i, %47 ], [ %valid.0.i, %47 ], [ %valid.0.i, %47 ], [ %valid.0.i, %47 ], [ %valid.0.i, %47 ], [ %valid.0.i, %49 ], [ %valid.0.i, %49 ], [ %valid.0.i, %49 ], [ %valid.0.i, %49 ], !dbg !806
  %55 = getelementptr inbounds i8* %.01.i, i64 1, !dbg !813
  tail call void @llvm.dbg.value(metadata i8* %55, i64 0, metadata !266, metadata !292), !dbg !800
  %56 = getelementptr inbounds i8* %.0.i, i64 1, !dbg !814
  tail call void @llvm.dbg.value(metadata i8* %56, i64 0, metadata !267, metadata !292), !dbg !802
  br label %47, !dbg !815

; <label>:57                                      ; preds = %47
  %58 = icmp sgt i32 %valid.0.i, 0, !dbg !816
  br i1 %58, label %59, label %simple_distance.exit, !dbg !817

; <label>:59                                      ; preds = %57
  %60 = sitofp i32 %diff.0.i to float, !dbg !818
  %61 = sitofp i32 %valid.0.i to float, !dbg !819
  %62 = fdiv float %60, %61, !dbg !820
  br label %simple_distance.exit, !dbg !817

simple_distance.exit:                             ; preds = %57, %59
  %63 = phi float [ %62, %59 ], [ 0.000000e+00, %57 ], !dbg !806
  %64 = fpext float %63 to double, !dbg !806
  %65 = fcmp ugt double %64, %12, !dbg !821
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !822
  br i1 %65, label %37, label %66, !dbg !822

; <label>:66                                      ; preds = %simple_distance.exit
  tail call void @llvm.dbg.value(metadata i32 %43, i64 0, metadata !217, metadata !292), !dbg !823
  %67 = add nsw i32 %na.2.ph, -1, !dbg !824
  %68 = sext i32 %67 to i64, !dbg !826
  %69 = getelementptr inbounds i32* %4, i64 %68, !dbg !826
  %70 = load i32* %69, align 4, !dbg !826, !tbaa !593
  store i32 %70, i32* %42, align 4, !dbg !827, !tbaa !593
  tail call void @llvm.dbg.value(metadata i32 %67, i64 0, metadata !211, metadata !292), !dbg !782
  %71 = getelementptr inbounds i32* %6, i64 %indvars.iv17, !dbg !828
  store i32 %43, i32* %71, align 4, !dbg !829, !tbaa !593
  %indvars.iv.next18 = add i64 %indvars.iv17, 1, !dbg !830
  %indvars.iv.next20 = add i64 %indvars.iv19, -1, !dbg !830
  br label %.outer, !dbg !830

._crit_edge:                                      ; preds = %.loopexit, %16
  %na.1.lcssa = phi i32 [ %17, %16 ], [ %25, %.loopexit ]
  %nb.1.lcssa = phi i32 [ %23, %16 ], [ %26, %.loopexit ]
  %72 = add nuw nsw i32 %nc.06, 1, !dbg !831
  tail call void @llvm.dbg.value(metadata i32 %72, i64 0, metadata !215, metadata !292), !dbg !832
  %73 = icmp sgt i32 %na.1.lcssa, 0, !dbg !833
  br i1 %73, label %16, label %._crit_edge9, !dbg !769

._crit_edge9:                                     ; preds = %._crit_edge, %0, %.preheader
  %nc.0.lcssa = phi i32 [ 0, %.preheader ], [ 0, %0 ], [ %72, %._crit_edge ]
  tail call void @free(i8* %3) #6, !dbg !834
  tail call void @free(i8* %5) #6, !dbg !835
  %74 = bitcast i32** %ret_c to i8**, !dbg !836
  store i8* %7, i8** %74, align 8, !dbg !836, !tbaa !311
  store i32 %nc.0.lcssa, i32* %ret_nc, align 4, !dbg !837, !tbaa !593
  ret void, !dbg !838
}
