define void @PositionBasedWeights(i8** nocapture readonly %aseq, i32 %nseq, i32 %alen, float* %wgt) #0 {
  %rescount = alloca [26 x i32], align 16
  %1 = bitcast [26 x i32]* %rescount to i8*
  tail call void @llvm.dbg.value(metadata i8** %aseq, i64 0, metadata !87, metadata !292), !dbg !839
  tail call void @llvm.dbg.value(metadata i32 %nseq, i64 0, metadata !88, metadata !292), !dbg !840
  tail call void @llvm.dbg.value(metadata i32 %alen, i64 0, metadata !89, metadata !292), !dbg !841
  tail call void @llvm.dbg.value(metadata float* %wgt, i64 0, metadata !90, metadata !292), !dbg !842
  call void @llvm.lifetime.start(i64 104, i8* %1) #4, !dbg !843
  tail call void @llvm.dbg.declare(metadata [26 x i32]* %rescount, metadata !91, metadata !292), !dbg !844
  tail call void @FSet(float* %wgt, i32 %nseq, float 0.000000e+00) #5, !dbg !845
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !97, metadata !292), !dbg !846
  %2 = icmp sgt i32 %alen, 0, !dbg !847
  br i1 %2, label %.preheader10.lr.ph, label %.preheader, !dbg !850

.preheader10.lr.ph:                               ; preds = %0
  %3 = icmp sgt i32 %nseq, 0, !dbg !851
  %4 = add i32 %nseq, -1, !dbg !850
  %5 = add i32 %alen, -1, !dbg !850
  br label %.preheader10, !dbg !850

.preheader10:                                     ; preds = %._crit_edge19, %.preheader10.lr.ph
  %indvars.iv35 = phi i64 [ 0, %.preheader10.lr.ph ], [ %indvars.iv.next36, %._crit_edge19 ]
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 104, i32 16, i1 false), !dbg !855
  br i1 %3, label %.lr.ph14, label %vector.body, !dbg !858

vector.body:                                      ; preds = %.preheader10, %38, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %38 ], [ 0, %.preheader10 ], !dbg !859
  %vec.phi = phi <2 x i32> [ %10, %vector.body ], [ zeroinitializer, %38 ], [ zeroinitializer, %.preheader10 ]
  %6 = getelementptr inbounds [26 x i32]* %rescount, i64 0, i64 %index, !dbg !861
  %7 = bitcast i32* %6 to <2 x i32>*, !dbg !861
  %wide.load = load <2 x i32>* %7, align 8, !dbg !861, !tbaa !593
  %8 = icmp sgt <2 x i32> %wide.load, zeroinitializer, !dbg !864
  %9 = zext <2 x i1> %8 to <2 x i32>, !dbg !865
  %10 = add nsw <2 x i32> %9, %vec.phi, !dbg !865
  %index.next = add i64 %index, 2, !dbg !859
  %11 = icmp eq i64 %index.next, 26, !dbg !859
  br i1 %11, label %middle.block, label %vector.body, !dbg !859, !llvm.loop !866

middle.block:                                     ; preds = %vector.body
  %rdx.shuf = shufflevector <2 x i32> %10, <2 x i32> undef, <2 x i32> <i32 1, i32 undef>, !dbg !865
  %bin.rdx = add <2 x i32> %10, %rdx.shuf, !dbg !865
  %12 = extractelement <2 x i32> %bin.rdx, i32 0, !dbg !865
  br i1 %3, label %.lr.ph18, label %._crit_edge19, !dbg !869

.preheader:                                       ; preds = %._crit_edge19, %0
  %13 = icmp sgt i32 %nseq, 0, !dbg !871
  br i1 %13, label %.lr.ph, label %._crit_edge, !dbg !874

.lr.ph:                                           ; preds = %.preheader
  %14 = add i32 %nseq, -1, !dbg !874
  br label %71, !dbg !874

.lr.ph14:                                         ; preds = %.preheader10, %38
  %indvars.iv24 = phi i64 [ %indvars.iv.next25, %38 ], [ 0, %.preheader10 ]
  %15 = getelementptr inbounds i8** %aseq, i64 %indvars.iv24, !dbg !875
  %16 = load i8** %15, align 8, !dbg !875, !tbaa !311
  %17 = getelementptr inbounds i8* %16, i64 %indvars.iv35, !dbg !875
  %18 = load i8* %17, align 1, !dbg !875, !tbaa !519
  tail call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !283, metadata !292) #4, !dbg !877
  tail call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !257, metadata !292) #4, !dbg !879
  tail call void @llvm.dbg.value(metadata i64 256, i64 0, metadata !258, metadata !292) #4, !dbg !881
  %isascii.i.i6 = icmp sgt i8 %18, -1, !dbg !882
  br i1 %isascii.i.i6, label %19, label %24, !dbg !882

; <label>:19                                      ; preds = %.lr.ph14
  %20 = sext i8 %18 to i64, !dbg !883
  %21 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %20, !dbg !883
  %22 = load i32* %21, align 4, !dbg !883, !tbaa !593
  %23 = and i32 %22, 256, !dbg !884
  br label %isalpha.exit, !dbg !882

; <label>:24                                      ; preds = %.lr.ph14
  %25 = sext i8 %18 to i32, !dbg !885
  %26 = tail call i32 @__maskrune(i32 %25, i64 256) #5, !dbg !886
  br label %isalpha.exit, !dbg !882

isalpha.exit:                                     ; preds = %19, %24
  %.sink.i.in.i = phi i32 [ %23, %19 ], [ %26, %24 ], !dbg !887
  %.sink.i.i = icmp eq i32 %.sink.i.in.i, 0, !dbg !888
  br i1 %.sink.i.i, label %38, label %27, !dbg !889

; <label>:27                                      ; preds = %isalpha.exit
  %28 = load i8** %15, align 8, !dbg !890, !tbaa !311
  %29 = getelementptr inbounds i8* %28, i64 %indvars.iv35, !dbg !890
  %30 = load i8* %29, align 1, !dbg !890, !tbaa !519
  %31 = sext i8 %30 to i32, !dbg !891
  tail call void @llvm.dbg.value(metadata i32 %31, i64 0, metadata !286, metadata !292) #4, !dbg !892
  %32 = tail call i32 @__toupper(i32 %31) #5, !dbg !894
  %33 = add nsw i32 %32, -65, !dbg !895
  %34 = sext i32 %33 to i64, !dbg !896
  %35 = getelementptr inbounds [26 x i32]* %rescount, i64 0, i64 %34, !dbg !896
  %36 = load i32* %35, align 4, !dbg !897, !tbaa !593
  %37 = add nsw i32 %36, 1, !dbg !897
  store i32 %37, i32* %35, align 4, !dbg !897, !tbaa !593
  br label %38, !dbg !896

; <label>:38                                      ; preds = %isalpha.exit, %27
  %indvars.iv.next25 = add nuw nsw i64 %indvars.iv24, 1, !dbg !858
  %lftr.wideiv26 = trunc i64 %indvars.iv24 to i32, !dbg !858
  %exitcond27 = icmp eq i32 %lftr.wideiv26, %4, !dbg !858
  br i1 %exitcond27, label %vector.body, label %.lr.ph14, !dbg !858

.lr.ph18:                                         ; preds = %middle.block, %70
  %indvars.iv31 = phi i64 [ %indvars.iv.next32, %70 ], [ 0, %middle.block ]
  %39 = getelementptr inbounds i8** %aseq, i64 %indvars.iv31, !dbg !898
  %40 = load i8** %39, align 8, !dbg !898, !tbaa !311
  %41 = getelementptr inbounds i8* %40, i64 %indvars.iv35, !dbg !898
  %42 = load i8* %41, align 1, !dbg !898, !tbaa !519
  tail call void @llvm.dbg.value(metadata i32 %49, i64 0, metadata !283, metadata !292) #4, !dbg !901
  tail call void @llvm.dbg.value(metadata i32 %49, i64 0, metadata !257, metadata !292) #4, !dbg !903
  tail call void @llvm.dbg.value(metadata i64 256, i64 0, metadata !258, metadata !292) #4, !dbg !905
  %isascii.i.i15 = icmp sgt i8 %42, -1, !dbg !906
  br i1 %isascii.i.i15, label %43, label %48, !dbg !906

; <label>:43                                      ; preds = %.lr.ph18
  %44 = sext i8 %42 to i64, !dbg !907
  %45 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %44, !dbg !907
  %46 = load i32* %45, align 4, !dbg !907, !tbaa !593
  %47 = and i32 %46, 256, !dbg !908
  br label %isalpha.exit4, !dbg !906

; <label>:48                                      ; preds = %.lr.ph18
  %49 = sext i8 %42 to i32, !dbg !909
  %50 = tail call i32 @__maskrune(i32 %49, i64 256) #5, !dbg !910
  br label %isalpha.exit4, !dbg !906

isalpha.exit4:                                    ; preds = %43, %48
  %.sink.i.in.i2 = phi i32 [ %47, %43 ], [ %50, %48 ], !dbg !911
  %.sink.i.i3 = icmp eq i32 %.sink.i.in.i2, 0, !dbg !912
  br i1 %.sink.i.i3, label %70, label %51, !dbg !913

; <label>:51                                      ; preds = %isalpha.exit4
  %52 = load i8** %39, align 8, !dbg !914, !tbaa !311
  %53 = getelementptr inbounds i8* %52, i64 %indvars.iv35, !dbg !914
  %54 = load i8* %53, align 1, !dbg !914, !tbaa !519
  %55 = sext i8 %54 to i32, !dbg !915
  tail call void @llvm.dbg.value(metadata i32 %55, i64 0, metadata !286, metadata !292) #4, !dbg !916
  %56 = tail call i32 @__toupper(i32 %55) #5, !dbg !918
  %57 = add nsw i32 %56, -65, !dbg !919
  %58 = sext i32 %57 to i64, !dbg !920
  %59 = getelementptr inbounds [26 x i32]* %rescount, i64 0, i64 %58, !dbg !920
  %60 = load i32* %59, align 4, !dbg !920, !tbaa !593
  %61 = mul nsw i32 %60, %12, !dbg !921
  %62 = sitofp i32 %61 to float, !dbg !922
  %63 = fpext float %62 to double, !dbg !922
  %64 = fdiv double 1.000000e+00, %63, !dbg !923
  %65 = getelementptr inbounds float* %wgt, i64 %indvars.iv31, !dbg !924
  %66 = load float* %65, align 4, !dbg !925, !tbaa !302
  %67 = fpext float %66 to double, !dbg !925
  %68 = fadd double %64, %67, !dbg !925
  %69 = fptrunc double %68 to float, !dbg !925
  store float %69, float* %65, align 4, !dbg !925, !tbaa !302
  br label %70, !dbg !924

; <label>:70                                      ; preds = %isalpha.exit4, %51
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1, !dbg !869
  %lftr.wideiv33 = trunc i64 %indvars.iv31 to i32, !dbg !869
  %exitcond34 = icmp eq i32 %lftr.wideiv33, %4, !dbg !869
  br i1 %exitcond34, label %._crit_edge19, label %.lr.ph18, !dbg !869

._crit_edge19:                                    ; preds = %70, %middle.block
  %indvars.iv.next36 = add nuw nsw i64 %indvars.iv35, 1, !dbg !850
  %lftr.wideiv37 = trunc i64 %indvars.iv35 to i32, !dbg !850
  %exitcond38 = icmp eq i32 %lftr.wideiv37, %5, !dbg !850
  br i1 %exitcond38, label %.preheader, label %.preheader10, !dbg !850

; <label>:71                                      ; preds = %71, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %71 ]
  %72 = getelementptr inbounds i8** %aseq, i64 %indvars.iv, !dbg !926
  %73 = load i8** %72, align 8, !dbg !926, !tbaa !311
  %74 = tail call i32 @DealignedLength(i8* %73) #5, !dbg !927
  %75 = sitofp i32 %74 to float, !dbg !928
  %76 = getelementptr inbounds float* %wgt, i64 %indvars.iv, !dbg !929
  %77 = load float* %76, align 4, !dbg !930, !tbaa !302
  %78 = fdiv float %77, %75, !dbg !930
  store float %78, float* %76, align 4, !dbg !930, !tbaa !302
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !874
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !874
  %exitcond = icmp eq i32 %lftr.wideiv, %14, !dbg !874
  br i1 %exitcond, label %._crit_edge, label %71, !dbg !874

._crit_edge:                                      ; preds = %71, %.preheader
  %79 = sitofp i32 %nseq to float, !dbg !931
  %80 = tail call float @FSum(float* %wgt, i32 %nseq) #5, !dbg !932
  %81 = fdiv float %79, %80, !dbg !933
  tail call void @llvm.dbg.value(metadata float %81, i64 0, metadata !99, metadata !292), !dbg !934
  tail call void @FScale(float* %wgt, i32 %nseq, float %81) #5, !dbg !935
  call void @llvm.lifetime.end(i64 104, i8* %1) #4, !dbg !936
  ret void, !dbg !936
}
