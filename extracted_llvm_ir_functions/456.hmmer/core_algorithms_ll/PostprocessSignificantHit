define float @PostprocessSignificantHit(%struct.tophit_s* %ghit, %struct.tophit_s* %dhit, %struct.p7trace_s* %tr, %struct.plan7_s* %hmm, i8* %dsq, i32 %L, i8* %seqname, i8* %seqacc, i8* %seqdesc, i32 %do_forward, float %sc_override, i32 %do_null2, %struct.threshold_s* nocapture %thresh, i32 %hmmpfam_mode) #0 {
entry:
  %tarr = alloca %struct.p7trace_s**, align 8
  %ntr = alloca i32, align 4
  %k1 = alloca i32, align 4
  %k2 = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %cmp = icmp eq %struct.p7trace_s* %tr, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  call void @TraceDecompose(%struct.p7trace_s* %tr, %struct.p7trace_s*** %tarr, i32* %ntr) #5
  %0 = load i32* %ntr, align 4, !tbaa !3
  %cmp1 = icmp eq i32 %0, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  call void (i8*, ...)* @Die(i8* getelementptr inbounds ([25 x i8]* @.str6, i64 0, i64 0)) #5
  %.pre = load i32* %ntr, align 4, !tbaa !3
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %1 = phi i32 [ %.pre, %if.then2 ], [ %0, %if.end ]
  %conv = sext i32 %1 to i64
  %mul = shl nsw i64 %conv, 2
  %call = call i8* @sre_malloc(i8* getelementptr inbounds ([61 x i8]* @.str, i64 0, i64 0), i32 2480, i64 %mul) #5
  %2 = bitcast i8* %call to float*
  %3 = load i32* %ntr, align 4, !tbaa !3
  %conv4 = sext i32 %3 to i64
  %mul5 = shl nsw i64 %conv4, 2
  %call6 = call i8* @sre_malloc(i8* getelementptr inbounds ([61 x i8]* @.str, i64 0, i64 0), i32 2481, i64 %mul5) #5
  %4 = bitcast i8* %call6 to i32*
  %5 = load i32* %ntr, align 4, !tbaa !3
  %cmp7245 = icmp sgt i32 %5, 0
  br i1 %cmp7245, label %for.body.lr.ph, label %if.then35

for.body.lr.ph:                                   ; preds = %if.end3
  %tobool = icmp eq i32 %do_null2, 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv254 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next255, %for.inc ]
  %ndom.0247 = phi i32 [ 0, %for.body.lr.ph ], [ %ndom.1, %for.inc ]
  %whole_sc.0246 = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %whole_sc.1, %for.inc ]
  %6 = load %struct.p7trace_s*** %tarr, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %struct.p7trace_s** %6, i64 %indvars.iv254
  %7 = load %struct.p7trace_s** %arrayidx, align 8, !tbaa !0
  %call9 = call float @P7TraceScore(%struct.plan7_s* %hmm, i8* %dsq, %struct.p7trace_s* %7) #5
  %arrayidx11 = getelementptr inbounds float* %2, i64 %indvars.iv254
  store float %call9, float* %arrayidx11, align 4, !tbaa !4
  br i1 %tobool, label %if.end18, label %if.then12

if.then12:                                        ; preds = %for.body
  %8 = load %struct.p7trace_s*** %tarr, align 8, !tbaa !0
  %arrayidx14 = getelementptr inbounds %struct.p7trace_s** %8, i64 %indvars.iv254
  %9 = load %struct.p7trace_s** %arrayidx14, align 8, !tbaa !0
  %call15 = call float @TraceScoreCorrection(%struct.plan7_s* %hmm, %struct.p7trace_s* %9, i8* %dsq) #5
  %10 = load float* %arrayidx11, align 4, !tbaa !4
  %sub = fsub float %10, %call15
  store float %sub, float* %arrayidx11, align 4, !tbaa !4
  br label %if.end18

if.end18:                                         ; preds = %for.body, %if.then12
  %11 = phi float [ %call9, %for.body ], [ %sub, %if.then12 ]
  %cmp22 = fcmp ogt float %11, 0.000000e+00
  %arrayidx26 = getelementptr inbounds i32* %4, i64 %indvars.iv254
  br i1 %cmp22, label %if.then24, label %if.else

if.then24:                                        ; preds = %if.end18
  store i32 1, i32* %arrayidx26, align 4, !tbaa !3
  %inc = add nsw i32 %ndom.0247, 1
  %add = fadd float %whole_sc.0246, %11
  br label %for.inc

if.else:                                          ; preds = %if.end18
  store i32 0, i32* %arrayidx26, align 4, !tbaa !3
  br label %for.inc

for.inc:                                          ; preds = %if.then24, %if.else
  %whole_sc.1 = phi float [ %add, %if.then24 ], [ %whole_sc.0246, %if.else ]
  %ndom.1 = phi i32 [ %inc, %if.then24 ], [ %ndom.0247, %if.else ]
  %indvars.iv.next255 = add i64 %indvars.iv254, 1
  %12 = load i32* %ntr, align 4, !tbaa !3
  %13 = trunc i64 %indvars.iv.next255 to i32
  %cmp7 = icmp slt i32 %13, %12
  br i1 %cmp7, label %for.body, label %for.end

for.end:                                          ; preds = %for.inc
  %cmp33 = icmp eq i32 %ndom.1, 0
  br i1 %cmp33, label %if.then35, label %if.end41

if.then35:                                        ; preds = %if.end3, %for.end
  %.lcssa259 = phi i32 [ %12, %for.end ], [ %5, %if.end3 ]
  %call36 = call i32 @FArgMax(float* %2, i32 %.lcssa259) #5
  %idxprom37 = sext i32 %call36 to i64
  %arrayidx38 = getelementptr inbounds i32* %4, i64 %idxprom37
  store i32 1, i32* %arrayidx38, align 4, !tbaa !3
  %arrayidx40 = getelementptr inbounds float* %2, i64 %idxprom37
  %14 = load float* %arrayidx40, align 4, !tbaa !4
  br label %if.end41

if.end41:                                         ; preds = %if.then35, %for.end
  %whole_sc.2 = phi float [ %14, %if.then35 ], [ %whole_sc.1, %for.end ]
  %ndom.2 = phi i32 [ 1, %if.then35 ], [ %ndom.1, %for.end ]
  %tobool42 = icmp eq i32 %do_forward, 0
  %whole_sc.2.sc_override = select i1 %tobool42, float %whole_sc.2, float %sc_override
  %call45 = call double @PValue(%struct.plan7_s* %hmm, float %whole_sc.2.sc_override) #5
  %15 = load i32* %ntr, align 4, !tbaa !3
  %cmp47242 = icmp sgt i32 %15, 0
  br i1 %cmp47242, label %for.body49.lr.ph, label %for.end96

for.body49.lr.ph:                                 ; preds = %if.end41
  %domE = getelementptr inbounds %struct.threshold_s* %thresh, i64 0, i32 3
  %domT = getelementptr inbounds %struct.threshold_s* %thresh, i64 0, i32 2
  %tobool70 = icmp eq i32 %hmmpfam_mode, 0
  %M = getelementptr inbounds %struct.plan7_s* %hmm, i64 0, i32 20
  %name = getelementptr inbounds %struct.plan7_s* %hmm, i64 0, i32 0
  %acc = getelementptr inbounds %struct.plan7_s* %hmm, i64 0, i32 1
  %desc = getelementptr inbounds %struct.plan7_s* %hmm, i64 0, i32 2
  br label %for.body49

for.body49:                                       ; preds = %for.body49.lr.ph, %for.inc94
  %16 = phi i32 [ %15, %for.body49.lr.ph ], [ %38, %for.inc94 ]
  %indvars.iv251 = phi i64 [ 0, %for.body49.lr.ph ], [ %indvars.iv.next252, %for.inc94 ]
  %didx.0243 = phi i32 [ 1, %for.body49.lr.ph ], [ %didx.1, %for.inc94 ]
  %arrayidx51 = getelementptr inbounds i32* %4, i64 %indvars.iv251
  %17 = load i32* %arrayidx51, align 4, !tbaa !3
  %tobool52 = icmp eq i32 %17, 0
  br i1 %tobool52, label %for.inc94, label %if.end54

if.end54:                                         ; preds = %for.body49
  %18 = load %struct.p7trace_s*** %tarr, align 8, !tbaa !0
  %arrayidx56 = getelementptr inbounds %struct.p7trace_s** %18, i64 %indvars.iv251
  %19 = load %struct.p7trace_s** %arrayidx56, align 8, !tbaa !0
  call void @TraceSimpleBounds(%struct.p7trace_s* %19, i32* %i1, i32* %i2, i32* %k1, i32* %k2) #5
  %arrayidx58 = getelementptr inbounds float* %2, i64 %indvars.iv251
  %20 = load float* %arrayidx58, align 4, !tbaa !4
  %call59 = call double @PValue(%struct.plan7_s* %hmm, float %20) #5
  %21 = load double* %domE, align 8, !tbaa !5
  %cmp60 = fcmp ugt double %call59, %21
  br i1 %cmp60, label %if.end92, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end54
  %22 = load float* %arrayidx58, align 4, !tbaa !4
  %23 = load float* %domT, align 4, !tbaa !4
  %cmp64 = fcmp ult float %22, %23
  br i1 %cmp64, label %if.end92, label %if.then66

if.then66:                                        ; preds = %land.lhs.true
  %24 = load %struct.p7trace_s*** %tarr, align 8, !tbaa !0
  %arrayidx68 = getelementptr inbounds %struct.p7trace_s** %24, i64 %indvars.iv251
  %25 = load %struct.p7trace_s** %arrayidx68, align 8, !tbaa !0
  %call69 = call %struct.fancyali_s* @CreateFancyAli(%struct.p7trace_s* %25, %struct.plan7_s* %hmm, i8* %dsq, i8* %seqname) #5
  br i1 %tobool70, label %cond.end85, label %cond.true88

cond.end85:                                       ; preds = %if.then66
  %26 = load float* %arrayidx58, align 4, !tbaa !4
  %conv77 = fpext float %26 to double
  %.pre257 = load i32* %i1, align 4, !tbaa !3
  br label %cond.end90

cond.true88:                                      ; preds = %if.then66
  %27 = load i32* %i1, align 4, !tbaa !3
  %conv72 = sitofp i32 %27 to double
  %mul73 = fmul double %conv72, -1.000000e+00
  %28 = load float* %arrayidx58, align 4, !tbaa !4
  %29 = load i8** %name, align 8, !tbaa !0
  %30 = load i8** %acc, align 8, !tbaa !0
  %31 = load i8** %desc, align 8, !tbaa !0
  br label %cond.end90

cond.end90:                                       ; preds = %cond.end85, %cond.true88
  %32 = phi i32 [ %27, %cond.true88 ], [ %.pre257, %cond.end85 ]
  %cond86232 = phi i8* [ %30, %cond.true88 ], [ %seqacc, %cond.end85 ]
  %33 = phi float [ %28, %cond.true88 ], [ %26, %cond.end85 ]
  %sortkey.0222224230 = phi double [ %mul73, %cond.true88 ], [ %conv77, %cond.end85 ]
  %cond226228 = phi i8* [ %29, %cond.true88 ], [ %seqname, %cond.end85 ]
  %cond91 = phi i8* [ %31, %cond.true88 ], [ %seqdesc, %cond.end85 ]
  %34 = load i32* %i2, align 4, !tbaa !3
  %35 = load i32* %k1, align 4, !tbaa !3
  %36 = load i32* %k2, align 4, !tbaa !3
  %37 = load i32* %M, align 4, !tbaa !3
  call void @RegisterHit(%struct.tophit_s* %dhit, double %sortkey.0222224230, double %call59, float %33, double %call45, float %whole_sc.2.sc_override, i8* %cond226228, i8* %cond86232, i8* %cond91, i32 %32, i32 %34, i32 %L, i32 %35, i32 %36, i32 %37, i32 %didx.0243, i32 %ndom.2, %struct.fancyali_s* %call69) #5
  br label %if.end92

if.end92:                                         ; preds = %land.lhs.true, %if.end54, %cond.end90
  %inc93 = add nsw i32 %didx.0243, 1
  %.pre256 = load i32* %ntr, align 4, !tbaa !3
  br label %for.inc94

for.inc94:                                        ; preds = %for.body49, %if.end92
  %38 = phi i32 [ %.pre256, %if.end92 ], [ %16, %for.body49 ]
  %didx.1 = phi i32 [ %inc93, %if.end92 ], [ %didx.0243, %for.body49 ]
  %indvars.iv.next252 = add i64 %indvars.iv251, 1
  %39 = trunc i64 %indvars.iv.next252 to i32
  %cmp47 = icmp slt i32 %39, %38
  br i1 %cmp47, label %for.body49, label %for.end96

for.end96:                                        ; preds = %for.inc94, %if.end41
  %tobool97 = icmp ne i32 %hmmpfam_mode, 0
  br i1 %tobool97, label %if.then98, label %if.else109

if.then98:                                        ; preds = %for.end96
  %cmp99 = fcmp ogt double %call45, 0.000000e+00
  br i1 %cmp99, label %cond.true101, label %cond.false104

cond.true101:                                     ; preds = %if.then98
  %call102 = call double @log(double %call45) #5
  %mul103 = fmul double %call102, -1.000000e+00
  br label %if.end111

cond.false104:                                    ; preds = %if.then98
  %conv105 = fpext float %whole_sc.2.sc_override to double
  %add106 = fadd double %conv105, 1.000000e+05
  br label %if.end111

if.else109:                                       ; preds = %for.end96
  %conv110 = fpext float %whole_sc.2.sc_override to double
  br label %if.end111

if.end111:                                        ; preds = %cond.true101, %cond.false104, %if.else109
  %sortkey.1 = phi double [ %conv110, %if.else109 ], [ %mul103, %cond.true101 ], [ %add106, %cond.false104 ]
  %globT = getelementptr inbounds %struct.threshold_s* %thresh, i64 0, i32 0
  %40 = load float* %globT, align 4, !tbaa !4
  %cmp112 = fcmp ult float %whole_sc.2.sc_override, %40
  br i1 %cmp112, label %for.cond134.preheader, label %if.then114

if.then114:                                       ; preds = %if.end111
  br i1 %tobool97, label %cond.true128, label %cond.end131

cond.true128:                                     ; preds = %if.then114
  %name117 = getelementptr inbounds %struct.plan7_s* %hmm, i64 0, i32 0
  %41 = load i8** %name117, align 8, !tbaa !0
  %acc123 = getelementptr inbounds %struct.plan7_s* %hmm, i64 0, i32 1
  %42 = load i8** %acc123, align 8, !tbaa !0
  %desc129 = getelementptr inbounds %struct.plan7_s* %hmm, i64 0, i32 2
  %43 = load i8** %desc129, align 8, !tbaa !0
  br label %cond.end131

cond.end131:                                      ; preds = %if.then114, %cond.true128
  %cond126238 = phi i8* [ %42, %cond.true128 ], [ %seqacc, %if.then114 ]
  %cond120234236 = phi i8* [ %41, %cond.true128 ], [ %seqname, %if.then114 ]
  %cond132 = phi i8* [ %43, %cond.true128 ], [ %seqdesc, %if.then114 ]
  call void @RegisterHit(%struct.tophit_s* %ghit, double %sortkey.1, double %call45, float %whole_sc.2.sc_override, double 0.000000e+00, float 0.000000e+00, i8* %cond120234236, i8* %cond126238, i8* %cond132, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 %ndom.2, %struct.fancyali_s* null) #5
  br label %for.cond134.preheader

for.cond134.preheader:                            ; preds = %if.end111, %cond.end131
  %44 = load i32* %ntr, align 4, !tbaa !3
  %cmp135240 = icmp sgt i32 %44, 0
  br i1 %cmp135240, label %for.body137, label %for.end142

for.body137:                                      ; preds = %for.cond134.preheader, %for.body137
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body137 ], [ 0, %for.cond134.preheader ]
  %45 = load %struct.p7trace_s*** %tarr, align 8, !tbaa !0
  %arrayidx139 = getelementptr inbounds %struct.p7trace_s** %45, i64 %indvars.iv
  %46 = load %struct.p7trace_s** %arrayidx139, align 8, !tbaa !0
  call void @P7FreeTrace(%struct.p7trace_s* %46) #5
  %indvars.iv.next = add i64 %indvars.iv, 1
  %47 = load i32* %ntr, align 4, !tbaa !3
  %48 = trunc i64 %indvars.iv.next to i32
  %cmp135 = icmp slt i32 %48, %47
  br i1 %cmp135, label %for.body137, label %for.end142

for.end142:                                       ; preds = %for.body137, %for.cond134.preheader
  %49 = load %struct.p7trace_s*** %tarr, align 8, !tbaa !0
  %50 = bitcast %struct.p7trace_s** %49 to i8*
  call void @free(i8* %50) #5
  call void @free(i8* %call) #5
  call void @free(i8* %call6) #5
  br label %return

return:                                           ; preds = %entry, %for.end142
  %retval.0 = phi float [ %whole_sc.2.sc_override, %for.end142 ], [ %sc_override, %entry ]
  ret float %retval.0
}
