define %struct.msa_struct* @ReadStockholm(%struct.msafile_struct* %afp) #0 {
entry:
  %s.i203 = alloca i8*, align 8
  %len.i204 = alloca i32, align 4
  %s.i197 = alloca i8*, align 8
  %len.i171 = alloca i32, align 4
  %s.i172 = alloca i8*, align 8
  %s.i156 = alloca i8*, align 8
  %len.i = alloca i32, align 4
  %s.i134 = alloca i8*, align 8
  %s.i = alloca i8*, align 8
  %f = getelementptr inbounds %struct.msafile_struct* %afp, i64 0, i32 0
  %0 = load %struct._IO_FILE** %f, align 8, !tbaa !0
  %call = call i32 @feof(%struct._IO_FILE* %0) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %entry
  %call1 = call %struct.msa_struct* @MSAAlloc(i32 10, i32 0) #5
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.end
  %call2 = call i8* @MSAFileGetLine(%struct.msafile_struct* %afp) #5
  %cmp = icmp eq i8* %call2, null
  br i1 %cmp, label %if.then3, label %do.cond

if.then3:                                         ; preds = %do.body
  call void @MSAFree(%struct.msa_struct* %call1) #5
  br label %return

do.cond:                                          ; preds = %do.body
  %call5 = call i32 @IsBlankline(i8* %call2) #5
  %tobool6 = icmp eq i32 %call5, 0
  br i1 %tobool6, label %do.end, label %do.body

do.end:                                           ; preds = %do.cond
  %call7 = call i32 @strncmp(i8* %call2, i8* getelementptr inbounds ([15 x i8]* @.str, i64 0, i64 0), i64 14) #6
  %cmp8 = icmp eq i32 %call7, 0
  br i1 %cmp8, label %while.cond.preheader, label %if.then9

if.then9:                                         ; preds = %do.end
  %fname = getelementptr inbounds %struct.msafile_struct* %afp, i64 0, i32 1
  %1 = load i8** %fname, align 8, !tbaa !0
  call void (i8*, ...)* @Die(i8* getelementptr inbounds ([334 x i8]* @.str1, i64 0, i64 0), i8* %1) #5
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.then9, %do.end
  %call11264 = call i8* @MSAFileGetLine(%struct.msafile_struct* %afp) #5
  %cmp12265 = icmp eq i8* %call11264, null
  br i1 %cmp12265, label %land.lhs.true, label %while.cond13.preheader.lr.ph

while.cond13.preheader.lr.ph:                     ; preds = %while.cond.preheader
  %2 = bitcast i8** %s.i203 to i8*
  %3 = bitcast i32* %len.i204 to i8*
  %lastidx.i210 = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 45
  %aseq.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 0
  %sqlen.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 42
  %linenumber = getelementptr inbounds %struct.msafile_struct* %afp, i64 0, i32 2
  %fname70 = getelementptr inbounds %struct.msafile_struct* %afp, i64 0, i32 1
  %name = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 7
  %4 = bitcast i8** %s.i to i8*
  %acc.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 9
  %desc.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 8
  %au.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 10
  %arrayidx.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 18, i64 2
  %arrayidx49.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 19, i64 2
  %arrayidx57.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 18, i64 3
  %arrayidx59.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 19, i64 3
  %arrayidx74.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 18, i64 4
  %arrayidx76.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 19, i64 4
  %arrayidx84.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 18, i64 5
  %arrayidx86.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 19, i64 5
  %arrayidx101.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 18, i64 0
  %arrayidx103.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 19, i64 0
  %arrayidx111.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 18, i64 1
  %arrayidx113.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 19, i64 1
  %5 = bitcast i8** %s.i134 to i8*
  %wgt.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 2
  %flags.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 5
  %6 = bitcast i8** %s.i156 to i8*
  %7 = bitcast i32* %len.i to i8*
  %ss_cons.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 11
  %sa_cons.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 12
  %rf.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 13
  %8 = bitcast i32* %len.i171 to i8*
  %9 = bitcast i8** %s.i172 to i8*
  %ss.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 16
  %nseqalloc.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 40
  %sslen.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 43
  %sa.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 17
  %salen.i = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 44
  %10 = bitcast i8** %s.i197 to i8*
  br label %while.cond13

while.cond13:                                     ; preds = %while.cond.backedge, %while.cond13.preheader.lr.ph, %while.body19
  %s.0 = phi i8* [ %incdec.ptr, %while.body19 ], [ %call11264, %while.cond13.preheader.lr.ph ], [ %call11, %while.cond.backedge ]
  %11 = load i8* %s.0, align 1, !tbaa !1
  switch i8 %11, label %if.else52 [
    i8 32, label %while.body19
    i8 9, label %while.body19
    i8 35, label %if.then23
  ]

while.body19:                                     ; preds = %while.cond13, %while.cond13
  %incdec.ptr = getelementptr inbounds i8* %s.0, i64 1
  br label %while.cond13

if.then23:                                        ; preds = %while.cond13
  %call24 = call i32 @strncmp(i8* %s.0, i8* getelementptr inbounds ([5 x i8]* @.str2, i64 0, i64 0), i64 4) #6
  %cmp25 = icmp eq i32 %call24, 0
  br i1 %cmp25, label %if.then27, label %if.else

if.then27:                                        ; preds = %if.then23
  call void @llvm.lifetime.start(i64 8, i8* %4) #4
  store i8* %s.0, i8** %s.i, align 8, !tbaa !0
  %call.i = call i8* @sre_strtok(i8** %s.i, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* null) #5
  %cmp.i = icmp eq i8* %call.i, null
  br i1 %cmp.i, label %if.then69, label %if.end.i

if.end.i:                                         ; preds = %if.then27
  %call1.i = call i8* @sre_strtok(i8** %s.i, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* null) #5
  %cmp2.i = icmp eq i8* %call1.i, null
  br i1 %cmp2.i, label %if.then69, label %if.end4.i

if.end4.i:                                        ; preds = %if.end.i
  %call5.i = call i8* @sre_strtok(i8** %s.i, i8* getelementptr inbounds ([2 x i8]* @.str11, i64 0, i64 0), i32* null) #5
  %cmp6.i = icmp eq i8* %call5.i, null
  br i1 %cmp6.i, label %if.then69, label %while.cond.i

while.cond.i:                                     ; preds = %if.end4.i, %while.body.i
  %text.0.i = phi i8* [ %incdec.ptr.i, %while.body.i ], [ %call5.i, %if.end4.i ]
  %12 = load i8* %text.0.i, align 1, !tbaa !1
  switch i8 %12, label %while.end.i [
    i8 9, label %while.body.i
    i8 32, label %while.body.i
  ]

while.body.i:                                     ; preds = %while.cond.i, %while.cond.i
  %incdec.ptr.i = getelementptr inbounds i8* %text.0.i, i64 1
  br label %while.cond.i

while.end.i:                                      ; preds = %while.cond.i
  %call15.i = call i32 @strcmp(i8* %call1.i, i8* getelementptr inbounds ([3 x i8]* @.str21, i64 0, i64 0)) #6
  %cmp16.i = icmp eq i32 %call15.i, 0
  br i1 %cmp16.i, label %if.then18.i, label %if.else.i

if.then18.i:                                      ; preds = %while.end.i
  %call19.i = call i8* @sre_strdup(i8* %text.0.i, i32 -1) #5
  store i8* %call19.i, i8** %name, align 8, !tbaa !0
  br label %while.cond.backedge

if.else.i:                                        ; preds = %while.end.i
  %call20.i = call i32 @strcmp(i8* %call1.i, i8* getelementptr inbounds ([3 x i8]* @.str19, i64 0, i64 0)) #6
  %cmp21.i = icmp eq i32 %call20.i, 0
  br i1 %cmp21.i, label %if.then23.i, label %if.else25.i

if.then23.i:                                      ; preds = %if.else.i
  %call24.i = call i8* @sre_strdup(i8* %text.0.i, i32 -1) #5
  store i8* %call24.i, i8** %acc.i, align 8, !tbaa !0
  br label %while.cond.backedge

if.else25.i:                                      ; preds = %if.else.i
  %call26.i = call i32 @strcmp(i8* %call1.i, i8* getelementptr inbounds ([3 x i8]* @.str20, i64 0, i64 0)) #6
  %cmp27.i = icmp eq i32 %call26.i, 0
  br i1 %cmp27.i, label %if.then29.i, label %if.else31.i

if.then29.i:                                      ; preds = %if.else25.i
  %call30.i = call i8* @sre_strdup(i8* %text.0.i, i32 -1) #5
  store i8* %call30.i, i8** %desc.i, align 8, !tbaa !0
  br label %while.cond.backedge

if.else31.i:                                      ; preds = %if.else25.i
  %call32.i = call i32 @strcmp(i8* %call1.i, i8* getelementptr inbounds ([3 x i8]* @.str22, i64 0, i64 0)) #6
  %cmp33.i = icmp eq i32 %call32.i, 0
  br i1 %cmp33.i, label %if.then35.i, label %if.else37.i

if.then35.i:                                      ; preds = %if.else31.i
  %call36.i = call i8* @sre_strdup(i8* %text.0.i, i32 -1) #5
  store i8* %call36.i, i8** %au.i, align 8, !tbaa !0
  br label %while.cond.backedge

if.else37.i:                                      ; preds = %if.else31.i
  %call38.i = call i32 @strcmp(i8* %call1.i, i8* getelementptr inbounds ([3 x i8]* @.str23, i64 0, i64 0)) #6
  %cmp39.i = icmp eq i32 %call38.i, 0
  br i1 %cmp39.i, label %if.then41.i, label %if.else61.i

if.then41.i:                                      ; preds = %if.else37.i
  store i8* %text.0.i, i8** %s.i, align 8, !tbaa !0
  %call42.i = call i8* @sre_strtok(i8** %s.i, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* null) #5
  %cmp43.i = icmp eq i8* %call42.i, null
  br i1 %cmp43.i, label %if.then69, label %if.end46.i

if.end46.i:                                       ; preds = %if.then41.i
  %call47.i = call double @atof(i8* %call42.i) #6
  %conv48.i = fptrunc double %call47.i to float
  store float %conv48.i, float* %arrayidx.i, align 4, !tbaa !3
  store i32 1, i32* %arrayidx49.i, align 4, !tbaa !4
  %call50.i = call i8* @sre_strtok(i8** %s.i, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* null) #5
  %cmp51.i = icmp eq i8* %call50.i, null
  br i1 %cmp51.i, label %while.cond.backedge, label %if.then53.i

if.then53.i:                                      ; preds = %if.end46.i
  %call54.i = call double @atof(i8* %call50.i) #6
  %conv55.i = fptrunc double %call54.i to float
  store float %conv55.i, float* %arrayidx57.i, align 4, !tbaa !3
  store i32 1, i32* %arrayidx59.i, align 4, !tbaa !4
  br label %while.cond.backedge

if.else61.i:                                      ; preds = %if.else37.i
  %call62.i = call i32 @strcmp(i8* %call1.i, i8* getelementptr inbounds ([3 x i8]* @.str24, i64 0, i64 0)) #6
  %cmp63.i = icmp eq i32 %call62.i, 0
  br i1 %cmp63.i, label %if.then65.i, label %if.else88.i

if.then65.i:                                      ; preds = %if.else61.i
  store i8* %text.0.i, i8** %s.i, align 8, !tbaa !0
  %call66.i = call i8* @sre_strtok(i8** %s.i, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* null) #5
  %cmp67.i = icmp eq i8* %call66.i, null
  br i1 %cmp67.i, label %if.then69, label %if.end70.i

if.end70.i:                                       ; preds = %if.then65.i
  %call71.i = call double @atof(i8* %call66.i) #6
  %conv72.i = fptrunc double %call71.i to float
  store float %conv72.i, float* %arrayidx74.i, align 4, !tbaa !3
  store i32 1, i32* %arrayidx76.i, align 4, !tbaa !4
  %call77.i = call i8* @sre_strtok(i8** %s.i, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* null) #5
  %cmp78.i = icmp eq i8* %call77.i, null
  br i1 %cmp78.i, label %while.cond.backedge, label %if.then80.i

if.then80.i:                                      ; preds = %if.end70.i
  %call81.i = call double @atof(i8* %call77.i) #6
  %conv82.i = fptrunc double %call81.i to float
  store float %conv82.i, float* %arrayidx84.i, align 4, !tbaa !3
  store i32 1, i32* %arrayidx86.i, align 4, !tbaa !4
  br label %while.cond.backedge

if.else88.i:                                      ; preds = %if.else61.i
  %call89.i = call i32 @strcmp(i8* %call1.i, i8* getelementptr inbounds ([3 x i8]* @.str25, i64 0, i64 0)) #6
  %cmp90.i = icmp eq i32 %call89.i, 0
  br i1 %cmp90.i, label %if.then92.i, label %if.else115.i

if.then92.i:                                      ; preds = %if.else88.i
  store i8* %text.0.i, i8** %s.i, align 8, !tbaa !0
  %call93.i = call i8* @sre_strtok(i8** %s.i, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* null) #5
  %cmp94.i = icmp eq i8* %call93.i, null
  br i1 %cmp94.i, label %if.then69, label %if.end97.i

if.end97.i:                                       ; preds = %if.then92.i
  %call98.i = call double @atof(i8* %call93.i) #6
  %conv99.i = fptrunc double %call98.i to float
  store float %conv99.i, float* %arrayidx101.i, align 4, !tbaa !3
  store i32 1, i32* %arrayidx103.i, align 4, !tbaa !4
  %call104.i = call i8* @sre_strtok(i8** %s.i, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* null) #5
  %cmp105.i = icmp eq i8* %call104.i, null
  br i1 %cmp105.i, label %while.cond.backedge, label %if.then107.i

if.then107.i:                                     ; preds = %if.end97.i
  %call108.i = call double @atof(i8* %call104.i) #6
  %conv109.i = fptrunc double %call108.i to float
  store float %conv109.i, float* %arrayidx111.i, align 4, !tbaa !3
  store i32 1, i32* %arrayidx113.i, align 4, !tbaa !4
  br label %while.cond.backedge

if.else115.i:                                     ; preds = %if.else88.i
  call void @MSAAddGF(%struct.msa_struct* %call1, i8* %call1.i, i8* %text.0.i) #5
  br label %while.cond.backedge

if.else:                                          ; preds = %if.then23
  %call29 = call i32 @strncmp(i8* %s.0, i8* getelementptr inbounds ([5 x i8]* @.str3, i64 0, i64 0), i64 4) #6
  %cmp30 = icmp eq i32 %call29, 0
  br i1 %cmp30, label %if.then32, label %if.else34

if.then32:                                        ; preds = %if.else
  call void @llvm.lifetime.start(i64 8, i8* %5) #4
  store i8* %s.0, i8** %s.i134, align 8, !tbaa !0
  %call.i135 = call i8* @sre_strtok(i8** %s.i134, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* null) #5
  %cmp.i136 = icmp eq i8* %call.i135, null
  br i1 %cmp.i136, label %if.then69, label %if.end.i139

if.end.i139:                                      ; preds = %if.then32
  %call1.i137 = call i8* @sre_strtok(i8** %s.i134, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* null) #5
  %cmp2.i138 = icmp eq i8* %call1.i137, null
  br i1 %cmp2.i138, label %if.then69, label %if.end4.i142

if.end4.i142:                                     ; preds = %if.end.i139
  %call5.i140 = call i8* @sre_strtok(i8** %s.i134, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* null) #5
  %cmp6.i141 = icmp eq i8* %call5.i140, null
  br i1 %cmp6.i141, label %if.then69, label %if.end8.i

if.end8.i:                                        ; preds = %if.end4.i142
  %call9.i = call i8* @sre_strtok(i8** %s.i134, i8* getelementptr inbounds ([2 x i8]* @.str11, i64 0, i64 0), i32* null) #5
  %cmp10.i = icmp eq i8* %call9.i, null
  br i1 %cmp10.i, label %if.then69, label %while.cond.i144

while.cond.i144:                                  ; preds = %if.end8.i, %while.body.i146
  %text.0.i143 = phi i8* [ %incdec.ptr.i145, %while.body.i146 ], [ %call9.i, %if.end8.i ]
  %13 = load i8* %text.0.i143, align 1, !tbaa !1
  switch i8 %13, label %while.end.i148 [
    i8 9, label %while.body.i146
    i8 32, label %while.body.i146
  ]

while.body.i146:                                  ; preds = %while.cond.i144, %while.cond.i144
  %incdec.ptr.i145 = getelementptr inbounds i8* %text.0.i143, i64 1
  br label %while.cond.i144

while.end.i148:                                   ; preds = %while.cond.i144
  %14 = load i32* %lastidx.i210, align 4, !tbaa !4
  %add.i = add nsw i32 %14, 1
  %call19.i147 = call i32 @MSAGetSeqidx(%struct.msa_struct* %call1, i8* %call1.i137, i32 %add.i) #5
  store i32 %call19.i147, i32* %lastidx.i210, align 4, !tbaa !4
  %call21.i = call i32 @strcmp(i8* %call5.i140, i8* getelementptr inbounds ([3 x i8]* @.str18, i64 0, i64 0)) #6
  %cmp22.i = icmp eq i32 %call21.i, 0
  br i1 %cmp22.i, label %if.then24.i, label %if.else.i150

if.then24.i:                                      ; preds = %while.end.i148
  %call25.i = call double @atof(i8* %text.0.i143) #6
  %conv26.i = fptrunc double %call25.i to float
  %idxprom.i = sext i32 %call19.i147 to i64
  %15 = load float** %wgt.i, align 8, !tbaa !0
  %arrayidx.i149 = getelementptr inbounds float* %15, i64 %idxprom.i
  store float %conv26.i, float* %arrayidx.i149, align 4, !tbaa !3
  %16 = load i32* %flags.i, align 4, !tbaa !4
  %or.i = or i32 %16, 1
  store i32 %or.i, i32* %flags.i, align 4, !tbaa !4
  br label %while.cond.backedge

if.else.i150:                                     ; preds = %while.end.i148
  %call27.i = call i32 @strcmp(i8* %call5.i140, i8* getelementptr inbounds ([3 x i8]* @.str19, i64 0, i64 0)) #6
  %cmp28.i = icmp eq i32 %call27.i, 0
  br i1 %cmp28.i, label %if.then30.i, label %if.else31.i153

if.then30.i:                                      ; preds = %if.else.i150
  call void @MSASetSeqAccession(%struct.msa_struct* %call1, i32 %call19.i147, i8* %text.0.i143) #5
  br label %while.cond.backedge

if.else31.i153:                                   ; preds = %if.else.i150
  %call32.i151 = call i32 @strcmp(i8* %call5.i140, i8* getelementptr inbounds ([3 x i8]* @.str20, i64 0, i64 0)) #6
  %cmp33.i152 = icmp eq i32 %call32.i151, 0
  br i1 %cmp33.i152, label %if.then35.i154, label %if.else36.i

if.then35.i154:                                   ; preds = %if.else31.i153
  call void @MSASetSeqDescription(%struct.msa_struct* %call1, i32 %call19.i147, i8* %text.0.i143) #5
  br label %while.cond.backedge

if.else36.i:                                      ; preds = %if.else31.i153
  call void @MSAAddGS(%struct.msa_struct* %call1, i8* %call5.i140, i32 %call19.i147, i8* %text.0.i143) #5
  br label %while.cond.backedge

if.else34:                                        ; preds = %if.else
  %call35 = call i32 @strncmp(i8* %s.0, i8* getelementptr inbounds ([5 x i8]* @.str4, i64 0, i64 0), i64 4) #6
  %cmp36 = icmp eq i32 %call35, 0
  br i1 %cmp36, label %if.then38, label %if.else40

if.then38:                                        ; preds = %if.else34
  call void @llvm.lifetime.start(i64 8, i8* %6) #4
  call void @llvm.lifetime.start(i64 4, i8* %7) #4
  store i8* %s.0, i8** %s.i156, align 8, !tbaa !0
  %call.i157 = call i8* @sre_strtok(i8** %s.i156, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* null) #5
  %cmp.i158 = icmp eq i8* %call.i157, null
  br i1 %cmp.i158, label %if.then69, label %if.end.i161

if.end.i161:                                      ; preds = %if.then38
  %call1.i159 = call i8* @sre_strtok(i8** %s.i156, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* null) #5
  %cmp2.i160 = icmp eq i8* %call1.i159, null
  br i1 %cmp2.i160, label %if.then69, label %if.end4.i164

if.end4.i164:                                     ; preds = %if.end.i161
  %call5.i162 = call i8* @sre_strtok(i8** %s.i156, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* %len.i) #5
  %cmp6.i163 = icmp eq i8* %call5.i162, null
  br i1 %cmp6.i163, label %if.then69, label %if.end8.i167

if.end8.i167:                                     ; preds = %if.end4.i164
  %call9.i165 = call i32 @strcmp(i8* %call1.i159, i8* getelementptr inbounds ([8 x i8]* @.str15, i64 0, i64 0)) #6
  %cmp10.i166 = icmp eq i32 %call9.i165, 0
  br i1 %cmp10.i166, label %if.then11.i, label %if.else.i168

if.then11.i:                                      ; preds = %if.end8.i167
  %17 = load i32* %len.i, align 4, !tbaa !4
  %call12.i = call i32 @sre_strcat(i8** %ss_cons.i, i32 -1, i8* %call5.i162, i32 %17) #5
  br label %while.cond.backedge

if.else.i168:                                     ; preds = %if.end8.i167
  %call13.i = call i32 @strcmp(i8* %call1.i159, i8* getelementptr inbounds ([8 x i8]* @.str16, i64 0, i64 0)) #6
  %cmp14.i = icmp eq i32 %call13.i, 0
  br i1 %cmp14.i, label %if.then15.i, label %if.else17.i

if.then15.i:                                      ; preds = %if.else.i168
  %18 = load i32* %len.i, align 4, !tbaa !4
  %call16.i = call i32 @sre_strcat(i8** %sa_cons.i, i32 -1, i8* %call5.i162, i32 %18) #5
  br label %while.cond.backedge

if.else17.i:                                      ; preds = %if.else.i168
  %call18.i = call i32 @strcmp(i8* %call1.i159, i8* getelementptr inbounds ([3 x i8]* @.str17, i64 0, i64 0)) #6
  %cmp19.i = icmp eq i32 %call18.i, 0
  br i1 %cmp19.i, label %if.then20.i, label %if.else22.i

if.then20.i:                                      ; preds = %if.else17.i
  %19 = load i32* %len.i, align 4, !tbaa !4
  %call21.i169 = call i32 @sre_strcat(i8** %rf.i, i32 -1, i8* %call5.i162, i32 %19) #5
  br label %while.cond.backedge

if.else22.i:                                      ; preds = %if.else17.i
  call void @MSAAppendGC(%struct.msa_struct* %call1, i8* %call1.i159, i8* %call5.i162) #5
  br label %while.cond.backedge

if.else40:                                        ; preds = %if.else34
  %call41 = call i32 @strncmp(i8* %s.0, i8* getelementptr inbounds ([5 x i8]* @.str5, i64 0, i64 0), i64 4) #6
  %cmp42 = icmp eq i32 %call41, 0
  br i1 %cmp42, label %if.then44, label %if.else46

if.then44:                                        ; preds = %if.else40
  call void @llvm.lifetime.start(i64 4, i8* %8) #4
  call void @llvm.lifetime.start(i64 8, i8* %9) #4
  store i8* %s.0, i8** %s.i172, align 8, !tbaa !0
  %call.i173 = call i8* @sre_strtok(i8** %s.i172, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* null) #5
  %cmp.i174 = icmp eq i8* %call.i173, null
  br i1 %cmp.i174, label %if.then69, label %if.end.i177

if.end.i177:                                      ; preds = %if.then44
  %call1.i175 = call i8* @sre_strtok(i8** %s.i172, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* null) #5
  %cmp2.i176 = icmp eq i8* %call1.i175, null
  br i1 %cmp2.i176, label %if.then69, label %if.end4.i180

if.end4.i180:                                     ; preds = %if.end.i177
  %call5.i178 = call i8* @sre_strtok(i8** %s.i172, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* null) #5
  %cmp6.i179 = icmp eq i8* %call5.i178, null
  br i1 %cmp6.i179, label %if.then69, label %if.end8.i183

if.end8.i183:                                     ; preds = %if.end4.i180
  %call9.i181 = call i8* @sre_strtok(i8** %s.i172, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* %len.i171) #5
  %cmp10.i182 = icmp eq i8* %call9.i181, null
  br i1 %cmp10.i182, label %if.then69, label %if.end12.i

if.end12.i:                                       ; preds = %if.end8.i183
  %20 = load i32* %lastidx.i210, align 4, !tbaa !4
  %call13.i185 = call i32 @MSAGetSeqidx(%struct.msa_struct* %call1, i8* %call1.i175, i32 %20) #5
  store i32 %call13.i185, i32* %lastidx.i210, align 4, !tbaa !4
  %call15.i186 = call i32 @strcmp(i8* %call5.i178, i8* getelementptr inbounds ([3 x i8]* @.str12, i64 0, i64 0)) #6
  %cmp16.i187 = icmp eq i32 %call15.i186, 0
  br i1 %cmp16.i187, label %if.then17.i, label %if.else.i192

if.then17.i:                                      ; preds = %if.end12.i
  %21 = load i8*** %ss.i, align 8, !tbaa !0
  %cmp18.i = icmp eq i8** %21, null
  br i1 %cmp18.i, label %if.then19.i, label %if.then17.if.end33_crit_edge.i

if.then17.if.end33_crit_edge.i:                   ; preds = %if.then17.i
  %.pre137.i = load i32** %sslen.i, align 8, !tbaa !0
  br label %if.end33.i

if.then19.i:                                      ; preds = %if.then17.i
  %22 = load i32* %nseqalloc.i, align 4, !tbaa !4
  %conv.i = sext i32 %22 to i64
  %mul.i = shl nsw i64 %conv.i, 3
  %call20.i188 = call i8* @sre_malloc(i8* getelementptr inbounds ([55 x i8]* @.str13, i64 0, i64 0), i32 561, i64 %mul.i) #5
  %23 = bitcast i8* %call20.i188 to i8**
  store i8** %23, i8*** %ss.i, align 8, !tbaa !0
  %24 = load i32* %nseqalloc.i, align 4, !tbaa !4
  %conv23.i = sext i32 %24 to i64
  %mul24.i = shl nsw i64 %conv23.i, 2
  %call25.i189 = call i8* @sre_malloc(i8* getelementptr inbounds ([55 x i8]* @.str13, i64 0, i64 0), i32 562, i64 %mul24.i) #5
  %25 = bitcast i8* %call25.i189 to i32*
  store i32* %25, i32** %sslen.i, align 8, !tbaa !0
  %26 = load i32* %nseqalloc.i, align 4, !tbaa !4
  %cmp27130.i = icmp sgt i32 %26, 0
  br i1 %cmp27130.i, label %for.body.i, label %if.end33.loopexit.i

for.body.i:                                       ; preds = %if.then19.i, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ 0, %if.then19.i ]
  %27 = load i8*** %ss.i, align 8, !tbaa !0
  %arrayidx.i190 = getelementptr inbounds i8** %27, i64 %indvars.iv.i
  store i8* null, i8** %arrayidx.i190, align 8, !tbaa !0
  %28 = load i32** %sslen.i, align 8, !tbaa !0
  %arrayidx32.i = getelementptr inbounds i32* %28, i64 %indvars.iv.i
  store i32 0, i32* %arrayidx32.i, align 4, !tbaa !4
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  %29 = load i32* %nseqalloc.i, align 4, !tbaa !4
  %30 = trunc i64 %indvars.iv.next.i to i32
  %cmp27.i191 = icmp slt i32 %30, %29
  br i1 %cmp27.i191, label %for.body.i, label %if.end33.loopexit.i

if.end33.loopexit.i:                              ; preds = %for.body.i, %if.then19.i
  %31 = phi i32* [ %25, %if.then19.i ], [ %28, %for.body.i ]
  %.pre.i = load i8*** %ss.i, align 8, !tbaa !0
  br label %if.end33.i

if.end33.i:                                       ; preds = %if.end33.loopexit.i, %if.then17.if.end33_crit_edge.i
  %32 = phi i32* [ %31, %if.end33.loopexit.i ], [ %.pre137.i, %if.then17.if.end33_crit_edge.i ]
  %33 = phi i8** [ %.pre.i, %if.end33.loopexit.i ], [ %21, %if.then17.if.end33_crit_edge.i ]
  %idxprom34.i = sext i32 %call13.i185 to i64
  %arrayidx36.i = getelementptr inbounds i8** %33, i64 %idxprom34.i
  %arrayidx39.i = getelementptr inbounds i32* %32, i64 %idxprom34.i
  %34 = load i32* %arrayidx39.i, align 4, !tbaa !4
  %35 = load i32* %len.i171, align 4, !tbaa !4
  %call40.i = call i32 @sre_strcat(i8** %arrayidx36.i, i32 %34, i8* %call9.i181, i32 %35) #5
  %36 = load i32** %sslen.i, align 8, !tbaa !0
  %arrayidx43.i = getelementptr inbounds i32* %36, i64 %idxprom34.i
  store i32 %call40.i, i32* %arrayidx43.i, align 4, !tbaa !4
  br label %while.cond.backedge

if.else.i192:                                     ; preds = %if.end12.i
  %call44.i = call i32 @strcmp(i8* %call5.i178, i8* getelementptr inbounds ([3 x i8]* @.str14, i64 0, i64 0)) #6
  %cmp45.i = icmp eq i32 %call44.i, 0
  br i1 %cmp45.i, label %if.then47.i, label %if.else85.i

if.then47.i:                                      ; preds = %if.else.i192
  %37 = load i8*** %sa.i, align 8, !tbaa !0
  %cmp48.i = icmp eq i8** %37, null
  br i1 %cmp48.i, label %if.then50.i, label %if.then47.if.end74_crit_edge.i

if.then47.if.end74_crit_edge.i:                   ; preds = %if.then47.i
  %.pre138.i = load i32** %salen.i, align 8, !tbaa !0
  br label %if.end74.i

if.then50.i:                                      ; preds = %if.then47.i
  %38 = load i32* %nseqalloc.i, align 4, !tbaa !4
  %conv52.i = sext i32 %38 to i64
  %mul53.i = shl nsw i64 %conv52.i, 3
  %call54.i193 = call i8* @sre_malloc(i8* getelementptr inbounds ([55 x i8]* @.str13, i64 0, i64 0), i32 575, i64 %mul53.i) #5
  %39 = bitcast i8* %call54.i193 to i8**
  store i8** %39, i8*** %sa.i, align 8, !tbaa !0
  %40 = load i32* %nseqalloc.i, align 4, !tbaa !4
  %conv57.i = sext i32 %40 to i64
  %mul58.i = shl nsw i64 %conv57.i, 2
  %call59.i = call i8* @sre_malloc(i8* getelementptr inbounds ([55 x i8]* @.str13, i64 0, i64 0), i32 576, i64 %mul58.i) #5
  %41 = bitcast i8* %call59.i to i32*
  store i32* %41, i32** %salen.i, align 8, !tbaa !0
  %42 = load i32* %nseqalloc.i, align 4, !tbaa !4
  %cmp62132.i = icmp sgt i32 %42, 0
  br i1 %cmp62132.i, label %for.body64.i, label %if.end74.loopexit.i

for.body64.i:                                     ; preds = %if.then50.i, %for.body64.i
  %indvars.iv134.i = phi i64 [ %indvars.iv.next135.i, %for.body64.i ], [ 0, %if.then50.i ]
  %43 = load i8*** %sa.i, align 8, !tbaa !0
  %arrayidx67.i = getelementptr inbounds i8** %43, i64 %indvars.iv134.i
  store i8* null, i8** %arrayidx67.i, align 8, !tbaa !0
  %44 = load i32** %salen.i, align 8, !tbaa !0
  %arrayidx70.i = getelementptr inbounds i32* %44, i64 %indvars.iv134.i
  store i32 0, i32* %arrayidx70.i, align 4, !tbaa !4
  %indvars.iv.next135.i = add i64 %indvars.iv134.i, 1
  %45 = load i32* %nseqalloc.i, align 4, !tbaa !4
  %46 = trunc i64 %indvars.iv.next135.i to i32
  %cmp62.i = icmp slt i32 %46, %45
  br i1 %cmp62.i, label %for.body64.i, label %if.end74.loopexit.i

if.end74.loopexit.i:                              ; preds = %for.body64.i, %if.then50.i
  %47 = phi i32* [ %41, %if.then50.i ], [ %44, %for.body64.i ]
  %.pre136.i = load i8*** %sa.i, align 8, !tbaa !0
  br label %if.end74.i

if.end74.i:                                       ; preds = %if.end74.loopexit.i, %if.then47.if.end74_crit_edge.i
  %48 = phi i32* [ %47, %if.end74.loopexit.i ], [ %.pre138.i, %if.then47.if.end74_crit_edge.i ]
  %49 = phi i8** [ %.pre136.i, %if.end74.loopexit.i ], [ %37, %if.then47.if.end74_crit_edge.i ]
  %idxprom75.i = sext i32 %call13.i185 to i64
  %arrayidx77.i = getelementptr inbounds i8** %49, i64 %idxprom75.i
  %arrayidx80.i = getelementptr inbounds i32* %48, i64 %idxprom75.i
  %50 = load i32* %arrayidx80.i, align 4, !tbaa !4
  %51 = load i32* %len.i171, align 4, !tbaa !4
  %call81.i194 = call i32 @sre_strcat(i8** %arrayidx77.i, i32 %50, i8* %call9.i181, i32 %51) #5
  %52 = load i32** %salen.i, align 8, !tbaa !0
  %arrayidx84.i195 = getelementptr inbounds i32* %52, i64 %idxprom75.i
  store i32 %call81.i194, i32* %arrayidx84.i195, align 4, !tbaa !4
  br label %while.cond.backedge

if.else85.i:                                      ; preds = %if.else.i192
  call void @MSAAppendGR(%struct.msa_struct* %call1, i8* %call5.i178, i32 %call13.i185, i8* %call9.i181) #5
  br label %while.cond.backedge

if.else46:                                        ; preds = %if.else40
  call void @llvm.lifetime.start(i64 8, i8* %10) #4
  %add.ptr.i = getelementptr inbounds i8* %s.0, i64 1
  store i8* %add.ptr.i, i8** %s.i197, align 8, !tbaa !0
  %53 = load i8* %add.ptr.i, align 1, !tbaa !1
  %cmp.i198 = icmp eq i8 %53, 10
  br i1 %cmp.i198, label %if.then.i, label %if.else.i201

if.then.i:                                        ; preds = %if.else46
  store i8 0, i8* %add.ptr.i, align 1, !tbaa !1
  br label %if.end5.i

if.else.i201:                                     ; preds = %if.else46
  %call.i199 = call i8* @sre_strtok(i8** %s.i197, i8* getelementptr inbounds ([2 x i8]* @.str11, i64 0, i64 0), i32* null) #5
  %cmp2.i200 = icmp eq i8* %call.i199, null
  br i1 %cmp2.i200, label %if.then69, label %if.end5.i

if.end5.i:                                        ; preds = %if.else.i201, %if.then.i
  %comment.0.i = phi i8* [ %add.ptr.i, %if.then.i ], [ %call.i199, %if.else.i201 ]
  call void @MSAAddComment(%struct.msa_struct* %call1, i8* %comment.0.i) #5
  br label %while.cond.backedge

if.else52:                                        ; preds = %while.cond13
  %call53 = call i32 @strncmp(i8* %s.0, i8* getelementptr inbounds ([3 x i8]* @.str6, i64 0, i64 0), i64 2) #6
  %cmp54 = icmp eq i32 %call53, 0
  br i1 %cmp54, label %while.end75, label %if.else57

if.else57:                                        ; preds = %if.else52
  %cmp59 = icmp eq i8 %11, 10
  br i1 %cmp59, label %while.cond.backedge, label %if.else62

while.cond.backedge:                              ; preds = %if.else57, %if.then69, %if.then23.i, %if.then35.i, %if.then80.i, %if.then107.i, %if.else115.i, %if.then53.i, %if.then29.i, %if.then18.i, %if.then30.i, %if.else36.i, %if.then35.i154, %if.then24.i, %if.then15.i, %if.else22.i, %if.then20.i, %if.then11.i, %if.end74.i, %if.else85.i, %if.end33.i, %if.end5.i, %if.end4.i216, %if.end46.i, %if.end70.i, %if.end97.i
  %call11 = call i8* @MSAFileGetLine(%struct.msafile_struct* %afp) #5
  %cmp12 = icmp eq i8* %call11, null
  br i1 %cmp12, label %land.lhs.true, label %while.cond13

if.else62:                                        ; preds = %if.else57
  call void @llvm.lifetime.start(i64 8, i8* %2) #4
  call void @llvm.lifetime.start(i64 4, i8* %3) #4
  store i8* %s.0, i8** %s.i203, align 8, !tbaa !0
  %call.i205 = call i8* @sre_strtok(i8** %s.i203, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* null) #5
  %cmp.i206 = icmp eq i8* %call.i205, null
  br i1 %cmp.i206, label %if.then69, label %if.end.i209

if.end.i209:                                      ; preds = %if.else62
  %call1.i207 = call i8* @sre_strtok(i8** %s.i203, i8* getelementptr inbounds ([4 x i8]* @.str10, i64 0, i64 0), i32* %len.i204) #5
  %cmp2.i208 = icmp eq i8* %call1.i207, null
  br i1 %cmp2.i208, label %if.then69, label %if.end4.i216

if.end4.i216:                                     ; preds = %if.end.i209
  %54 = load i32* %lastidx.i210, align 4, !tbaa !4
  %add.i211 = add nsw i32 %54, 1
  %call5.i212 = call i32 @MSAGetSeqidx(%struct.msa_struct* %call1, i8* %call.i205, i32 %add.i211) #5
  store i32 %call5.i212, i32* %lastidx.i210, align 4, !tbaa !4
  %idxprom.i213 = sext i32 %call5.i212 to i64
  %55 = load i8*** %aseq.i, align 8, !tbaa !0
  %arrayidx.i214 = getelementptr inbounds i8** %55, i64 %idxprom.i213
  %56 = load i32** %sqlen.i, align 8, !tbaa !0
  %arrayidx8.i = getelementptr inbounds i32* %56, i64 %idxprom.i213
  %57 = load i32* %arrayidx8.i, align 4, !tbaa !4
  %58 = load i32* %len.i204, align 4, !tbaa !4
  %call9.i215 = call i32 @sre_strcat(i8** %arrayidx.i214, i32 %57, i8* %call1.i207, i32 %58) #5
  %59 = load i32** %sqlen.i, align 8, !tbaa !0
  %arrayidx12.i = getelementptr inbounds i32* %59, i64 %idxprom.i213
  store i32 %call9.i215, i32* %arrayidx12.i, align 4, !tbaa !4
  br label %while.cond.backedge

if.then69:                                        ; preds = %if.else.i201, %if.end8.i183, %if.end4.i180, %if.end.i177, %if.then44, %if.end4.i164, %if.end.i161, %if.then38, %if.end8.i, %if.end4.i142, %if.end.i139, %if.then32, %if.then92.i, %if.then65.i, %if.then41.i, %if.end4.i, %if.end.i, %if.then27, %if.else62, %if.end.i209
  %60 = load i32* %linenumber, align 4, !tbaa !4
  %61 = load i8** %fname70, align 8, !tbaa !0
  %62 = load i8** %name, align 8, !tbaa !0
  %cmp71 = icmp eq i8* %62, null
  %. = select i1 %cmp71, i8* getelementptr inbounds ([1 x i8]* @.str8, i64 0, i64 0), i8* %62
  call void (i8*, ...)* @Die(i8* getelementptr inbounds ([76 x i8]* @.str7, i64 0, i64 0), i32 %60, i8* %61, i8* %.) #5
  br label %while.cond.backedge

while.end75:                                      ; preds = %if.else52
  %cmp76 = icmp eq i8* %s.0, null
  br i1 %cmp76, label %land.lhs.true, label %if.end97

land.lhs.true:                                    ; preds = %while.cond.preheader, %while.cond.backedge, %while.end75
  %nseq = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 4
  %63 = load i32* %nseq, align 4, !tbaa !4
  %cmp78 = icmp eq i32 %63, 0
  br i1 %cmp78, label %if.then96, label %land.lhs.true92

land.lhs.true92:                                  ; preds = %land.lhs.true
  %name81 = getelementptr inbounds %struct.msa_struct* %call1, i64 0, i32 7
  %64 = load i8** %name81, align 8, !tbaa !0
  %cmp82 = icmp eq i8* %64, null
  %.133 = select i1 %cmp82, i8* getelementptr inbounds ([1 x i8]* @.str8, i64 0, i64 0), i8* %64
  call void (i8*, ...)* @Die(i8* getelementptr inbounds ([38 x i8]* @.str9, i64 0, i64 0), i8* %.133) #5
  %.pre = load i32* %nseq, align 4, !tbaa !4
  %phitmp = icmp eq i32 %.pre, 0
  br i1 %phitmp, label %if.then96, label %if.end97

if.then96:                                        ; preds = %land.lhs.true, %land.lhs.true92
  call void @MSAFree(%struct.msa_struct* %call1) #5
  br label %return

if.end97:                                         ; preds = %while.end75, %land.lhs.true92
  call void @MSAVerifyParse(%struct.msa_struct* %call1) #5
  br label %return

return:                                           ; preds = %entry, %if.end97, %if.then96, %if.then3
  %retval.0 = phi %struct.msa_struct* [ null, %if.then3 ], [ null, %if.then96 ], [ %call1, %if.end97 ], [ null, %entry ]
  ret %struct.msa_struct* %retval.0
}
