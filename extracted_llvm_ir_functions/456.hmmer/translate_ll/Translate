define i8* @Translate(i8* readonly %seq, i8** nocapture readonly %code) #0 {
  tail call void @llvm.dbg.value(metadata i8* %seq, i64 0, metadata !13, metadata !24), !dbg !25
  tail call void @llvm.dbg.value(metadata i8** %code, i64 0, metadata !14, metadata !24), !dbg !26
  %1 = icmp eq i8* %seq, null, !dbg !27
  br i1 %1, label %2, label %3, !dbg !29

; <label>:2                                       ; preds = %0
  store i32 2, i32* @squid_errno, align 4, !dbg !30, !tbaa !32
  br label %.critedge, !dbg !36

; <label>:3                                       ; preds = %0
  %4 = tail call i64 @strlen(i8* %seq) #5, !dbg !37
  %5 = add i64 %4, 1, !dbg !39
  %6 = tail call i8* @calloc(i64 %5, i64 1) #5, !dbg !40
  tail call void @llvm.dbg.value(metadata i8* %6, i64 0, metadata !17, metadata !24), !dbg !41
  %7 = icmp eq i8* %6, null, !dbg !42
  br i1 %7, label %8, label %.preheader5, !dbg !43

; <label>:8                                       ; preds = %3
  tail call void (i8*, ...)* @Die(i8* getelementptr inbounds ([14 x i8]* @.str, i64 0, i64 0)) #5, !dbg !44
  br label %.preheader5, !dbg !44

.preheader5:                                      ; preds = %8, %3
  %aaptr.0.ph = phi i8* [ %6, %3 ], [ null, %8 ]
  %9 = load i8* %seq, align 1, !dbg !45, !tbaa !48
  %10 = icmp eq i8 %9, 0, !dbg !49
  br i1 %10, label %.critedge, label %.lr.ph, !dbg !50

.lr.ph:                                           ; preds = %.preheader5, %.thread4
  %11 = phi i8 [ %42, %.thread4 ], [ %9, %.preheader5 ]
  %aaptr.09 = phi i8* [ %40, %.thread4 ], [ %aaptr.0.ph, %.preheader5 ]
  %.028 = phi i8* [ %41, %.thread4 ], [ %seq, %.preheader5 ]
  %12 = getelementptr inbounds i8* %.028, i64 1, !dbg !51
  %13 = load i8* %12, align 1, !dbg !52, !tbaa !48
  %14 = icmp eq i8 %13, 0, !dbg !53
  br i1 %14, label %.critedge, label %15, !dbg !54

; <label>:15                                      ; preds = %.lr.ph
  %16 = getelementptr inbounds i8* %.028, i64 2, !dbg !55
  %17 = load i8* %16, align 1, !dbg !56, !tbaa !48
  %18 = icmp eq i8 %17, 0, !dbg !57
  br i1 %18, label %.critedge, label %.preheader, !dbg !58

.preheader:                                       ; preds = %15, %.thread._crit_edge
  %19 = phi i8 [ %.pre, %.thread._crit_edge ], [ %11, %15 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %.thread._crit_edge ], [ 0, %15 ]
  %codon.06 = phi i32 [ %codon.13, %.thread._crit_edge ], [ 0, %15 ]
  %20 = shl nsw i32 %codon.06, 2, !dbg !59
  tail call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !15, metadata !24), !dbg !64
  %21 = sext i8 %19 to i32, !dbg !65
  switch i32 %21, label %.thread4 [
    i32 65, label %30
    i32 97, label %30
    i32 67, label %22
    i32 99, label %22
    i32 71, label %24
    i32 103, label %24
    i32 84, label %26
    i32 116, label %26
    i32 85, label %28
    i32 117, label %28
  ], !dbg !66

; <label>:22                                      ; preds = %.preheader, %.preheader
  %23 = or i32 %20, 1, !dbg !67
  tail call void @llvm.dbg.value(metadata i32 %23, i64 0, metadata !15, metadata !24), !dbg !64
  br label %.thread, !dbg !69

; <label>:24                                      ; preds = %.preheader, %.preheader
  %25 = or i32 %20, 2, !dbg !70
  tail call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !15, metadata !24), !dbg !64
  br label %.thread, !dbg !71

; <label>:26                                      ; preds = %.preheader, %.preheader
  %27 = or i32 %20, 3, !dbg !72
  tail call void @llvm.dbg.value(metadata i32 %27, i64 0, metadata !15, metadata !24), !dbg !64
  br label %.thread, !dbg !73

; <label>:28                                      ; preds = %.preheader, %.preheader
  %29 = or i32 %20, 3, !dbg !74
  tail call void @llvm.dbg.value(metadata i32 %29, i64 0, metadata !15, metadata !24), !dbg !64
  br label %.thread, !dbg !75

; <label>:30                                      ; preds = %.preheader, %.preheader
  %31 = icmp eq i32 %20, 64, !dbg !76
  br i1 %31, label %.thread4, label %.thread, !dbg !78

.thread:                                          ; preds = %22, %24, %26, %28, %30
  %codon.13 = phi i32 [ %20, %30 ], [ %23, %22 ], [ %25, %24 ], [ %27, %26 ], [ %29, %28 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !79
  %32 = icmp slt i64 %indvars.iv.next, 3, !dbg !80
  br i1 %32, label %.thread._crit_edge, label %.thread4, !dbg !79

.thread._crit_edge:                               ; preds = %.thread
  %.phi.trans.insert = getelementptr inbounds i8* %.028, i64 %indvars.iv.next
  %.pre = load i8* %.phi.trans.insert, align 1, !dbg !65, !tbaa !48
  br label %.preheader, !dbg !79

.thread4:                                         ; preds = %.preheader, %30, %.thread
  %codon.2 = phi i32 [ 64, %30 ], [ %codon.13, %.thread ], [ 64, %.preheader ]
  %33 = sext i32 %codon.2 to i64, !dbg !81
  %34 = getelementptr inbounds i8** %code, i64 %33, !dbg !81
  %35 = load i8** %34, align 8, !dbg !81, !tbaa !82
  %36 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %aaptr.09, i1 false), !dbg !81
  %37 = tail call i8* @__strcpy_chk(i8* %aaptr.09, i8* %35, i64 %36) #5, !dbg !81
  %38 = load i8** %34, align 8, !dbg !84, !tbaa !82
  %39 = tail call i64 @strlen(i8* %38) #5, !dbg !85
  %40 = getelementptr inbounds i8* %aaptr.09, i64 %39, !dbg !86
  tail call void @llvm.dbg.value(metadata i8* %40, i64 0, metadata !18, metadata !24), !dbg !87
  %41 = getelementptr inbounds i8* %.028, i64 3, !dbg !88
  tail call void @llvm.dbg.value(metadata i8* %41, i64 0, metadata !13, metadata !24), !dbg !25
  %42 = load i8* %41, align 1, !dbg !45, !tbaa !48
  %43 = icmp eq i8 %42, 0, !dbg !49
  br i1 %43, label %.critedge, label %.lr.ph, !dbg !50

.critedge:                                        ; preds = %15, %.lr.ph, %.thread4, %.preheader5, %2
  %.0 = phi i8* [ null, %2 ], [ %6, %.preheader5 ], [ %6, %.thread4 ], [ %6, %.lr.ph ], [ %6, %15 ]
  ret i8* %.0, !dbg !89
}
