define i8* @revcomp(i8* %comp, i8* %seq) #0 {
  tail call void @llvm.dbg.value(metadata i8* %comp, i64 0, metadata !13, metadata !39), !dbg !40
  tail call void @llvm.dbg.value(metadata i8* %seq, i64 0, metadata !14, metadata !39), !dbg !41
  %1 = icmp eq i8* %comp, null, !dbg !42
  %2 = icmp eq i8* %seq, null, !dbg !44
  %or.cond = or i1 %1, %2, !dbg !46
  br i1 %or.cond, label %.loopexit, label %3, !dbg !46

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @StrReverse(i8* %comp, i8* %seq) #3, !dbg !47
  tail call void @llvm.dbg.value(metadata i8* %comp, i64 0, metadata !15, metadata !39), !dbg !48
  %5 = load i8* %comp, align 1, !dbg !49, !tbaa !52
  %6 = icmp eq i8 %5, 0, !dbg !55
  br i1 %6, label %.loopexit, label %.lr.ph, !dbg !56

.lr.ph:                                           ; preds = %3, %29
  %7 = phi i8 [ %31, %29 ], [ %5, %3 ]
  %s.02 = phi i8* [ %30, %29 ], [ %comp, %3 ]
  %8 = sext i8 %7 to i32, !dbg !49
  tail call void @llvm.dbg.value(metadata i8 %31, i64 0, metadata !16, metadata !39), !dbg !57
  %9 = tail call i32 @sre_toupper(i32 %8) #3, !dbg !58
  %10 = trunc i32 %9 to i8, !dbg !58
  tail call void @llvm.dbg.value(metadata i8 %10, i64 0, metadata !16, metadata !39), !dbg !57
  %sext = shl i32 %9, 24, !dbg !60
  %11 = ashr exact i32 %sext, 24, !dbg !60
  %switch.tableidx = add nsw i32 %11, -65, !dbg !61
  %12 = icmp ult i32 %switch.tableidx, 25, !dbg !61
  br i1 %12, label %switch.hole_check, label %15, !dbg !61

switch.hole_check:                                ; preds = %.lr.ph
  %switch.shifted = lshr i32 25040079, %switch.tableidx, !dbg !61
  %13 = and i32 %switch.shifted, 1, !dbg !61
  %switch.lobit = icmp eq i32 %13, 0, !dbg !61
  br i1 %switch.lobit, label %15, label %switch.lookup, !dbg !61

switch.lookup:                                    ; preds = %switch.hole_check
  %14 = sext i32 %switch.tableidx to i64, !dbg !61
  %switch.gep = getelementptr inbounds [25 x i8]* @switch.table, i64 0, i64 %14, !dbg !61
  %switch.load = load i8* %switch.gep, align 1, !dbg !61
  br label %15, !dbg !61

; <label>:15                                      ; preds = %switch.hole_check, %switch.lookup, %.lr.ph
  %c.0 = phi i8 [ %10, %.lr.ph ], [ %10, %switch.hole_check ], [ %switch.load, %switch.lookup ]
  %16 = load i8* %s.02, align 1, !dbg !62, !tbaa !52
  tail call void @llvm.dbg.value(metadata i32 %23, i64 0, metadata !22, metadata !39) #4, !dbg !64
  tail call void @llvm.dbg.value(metadata i32 %23, i64 0, metadata !30, metadata !39) #4, !dbg !66
  tail call void @llvm.dbg.value(metadata i64 4096, i64 0, metadata !31, metadata !39) #4, !dbg !68
  %isascii.i.i1 = icmp sgt i8 %16, -1, !dbg !69
  br i1 %isascii.i.i1, label %17, label %22, !dbg !69

; <label>:17                                      ; preds = %15
  %18 = sext i8 %16 to i64, !dbg !70
  %19 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %18, !dbg !70
  %20 = load i32* %19, align 4, !dbg !70, !tbaa !71
  %21 = and i32 %20, 4096, !dbg !73
  br label %islower.exit, !dbg !69

; <label>:22                                      ; preds = %15
  %23 = sext i8 %16 to i32, !dbg !74
  %24 = tail call i32 @__maskrune(i32 %23, i64 4096) #3, !dbg !75
  br label %islower.exit, !dbg !69

islower.exit:                                     ; preds = %17, %22
  %.sink.i.in.i = phi i32 [ %21, %17 ], [ %24, %22 ], !dbg !76
  %.sink.i.i = icmp eq i32 %.sink.i.in.i, 0, !dbg !77
  br i1 %.sink.i.i, label %29, label %25, !dbg !78

; <label>:25                                      ; preds = %islower.exit
  %26 = sext i8 %c.0 to i32, !dbg !79
  %27 = tail call i32 @sre_tolower(i32 %26) #3, !dbg !80
  %28 = trunc i32 %27 to i8, !dbg !81
  tail call void @llvm.dbg.value(metadata i8 %28, i64 0, metadata !16, metadata !39), !dbg !57
  br label %29, !dbg !82

; <label>:29                                      ; preds = %islower.exit, %25
  %c.1 = phi i8 [ %28, %25 ], [ %c.0, %islower.exit ]
  store i8 %c.1, i8* %s.02, align 1, !dbg !83, !tbaa !52
  %30 = getelementptr inbounds i8* %s.02, i64 1, !dbg !84
  tail call void @llvm.dbg.value(metadata i8* %30, i64 0, metadata !15, metadata !39), !dbg !48
  %31 = load i8* %30, align 1, !dbg !49, !tbaa !52
  %32 = icmp eq i8 %31, 0, !dbg !55
  br i1 %32, label %.loopexit, label %.lr.ph, !dbg !56

.loopexit:                                        ; preds = %29, %3, %0
  %.0 = phi i8* [ null, %0 ], [ %comp, %3 ], [ %comp, %29 ]
  ret i8* %.0, !dbg !85
}
