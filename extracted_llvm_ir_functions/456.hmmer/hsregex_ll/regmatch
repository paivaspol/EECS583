define internal fastcc i32 @regmatch(%struct.exec* %ep, i8* readonly %prog) #0 {
  tail call void @llvm.dbg.value(metadata %struct.exec* %ep, i64 0, metadata !214, metadata !274), !dbg !1462
  tail call void @llvm.dbg.value(metadata i8* %prog, i64 0, metadata !215, metadata !274), !dbg !1463
  tail call void @llvm.dbg.value(metadata i8* %prog, i64 0, metadata !216, metadata !274), !dbg !1464
  %1 = icmp eq i8* %prog, null, !dbg !1465
  br i1 %1, label %._crit_edge, label %.lr.ph35, !dbg !1466

.lr.ph35:                                         ; preds = %0
  %2 = getelementptr inbounds %struct.exec* %ep, i64 0, i32 0, !dbg !1467
  %3 = getelementptr inbounds %struct.exec* %ep, i64 0, i32 1, !dbg !1469
  %4 = bitcast %struct.exec* %ep to i64*, !dbg !1470
  br label %.backedge53, !dbg !1466

.backedge53:                                      ; preds = %.backedge13.thread, %.backedge13, %.lr.ph35
  %scan.034 = phi i8* [ %prog, %.lr.ph35 ], [ %.0.i, %.backedge13 ], [ %105, %.backedge13.thread ]
  tail call void @llvm.dbg.value(metadata i8* %.0.i, i64 0, metadata !253, metadata !274), !dbg !1471
  %5 = getelementptr inbounds i8* %scan.034, i64 1, !dbg !1473
  %6 = load i8* %5, align 1, !dbg !1473, !tbaa !325
  %7 = zext i8 %6 to i32, !dbg !1473
  %8 = shl nuw nsw i32 %7, 8, !dbg !1473
  %9 = and i32 %8, 32512, !dbg !1473
  %10 = getelementptr inbounds i8* %scan.034, i64 2, !dbg !1473
  %11 = load i8* %10, align 1, !dbg !1473, !tbaa !325
  %12 = zext i8 %11 to i32, !dbg !1473
  %13 = or i32 %9, %12, !dbg !1473
  tail call void @llvm.dbg.value(metadata i32 %13, i64 0, metadata !254, metadata !274), !dbg !1474
  %14 = icmp eq i32 %13, 0, !dbg !1475
  %.pre = load i8* %scan.034, align 1, !dbg !1476, !tbaa !325
  br i1 %14, label %regnext.exit, label %15, !dbg !1477

; <label>:15                                      ; preds = %.backedge53
  %16 = icmp eq i8 %.pre, 7, !dbg !1478
  %17 = zext i32 %13 to i64, !dbg !1479
  %18 = sub nsw i64 0, %17, !dbg !1479
  %.sink.i = select i1 %16, i64 %18, i64 %17, !dbg !1480
  %19 = getelementptr inbounds i8* %scan.034, i64 %.sink.i, !dbg !1479
  br label %regnext.exit, !dbg !1481

regnext.exit:                                     ; preds = %.backedge53, %15
  %.0.i = phi i8* [ %19, %15 ], [ null, %.backedge53 ], !dbg !1482
  tail call void @llvm.dbg.value(metadata i8* %.0.i, i64 0, metadata !217, metadata !274), !dbg !1483
  %20 = sext i8 %.pre to i32, !dbg !1476
  switch i32 %20, label %172 [
    i32 1, label %21
    i32 2, label %26
    i32 3, label %30
    i32 8, label %36
    i32 4, label %50
    i32 5, label %61
    i32 9, label %.backedge13
    i32 7, label %.backedge13
    i32 21, label %72
    i32 22, label %72
    i32 23, label %72
    i32 24, label %72
    i32 25, label %72
    i32 26, label %72
    i32 27, label %72
    i32 28, label %72
    i32 29, label %72
    i32 31, label %86
    i32 32, label %86
    i32 33, label %86
    i32 34, label %86
    i32 35, label %86
    i32 36, label %86
    i32 37, label %86
    i32 38, label %86
    i32 39, label %86
    i32 6, label %100
    i32 10, label %128
    i32 11, label %128
    i32 0, label %.loopexit
  ], !dbg !1484

; <label>:21                                      ; preds = %regnext.exit
  %22 = load i8** %2, align 8, !dbg !1467, !tbaa !693
  %23 = load i8** %3, align 8, !dbg !1469, !tbaa !487
  %24 = icmp eq i8* %22, %23, !dbg !1485
  br i1 %24, label %.backedge13, label %.loopexit, !dbg !1486

.backedge13:                                      ; preds = %21, %26, %34, %48, %59, %70, %regnext.exit, %regnext.exit
  %25 = icmp eq i8* %.0.i, null, !dbg !1465
  br i1 %25, label %._crit_edge, label %.backedge53, !dbg !1466

; <label>:26                                      ; preds = %regnext.exit
  %27 = load i8** %2, align 8, !dbg !1487, !tbaa !693
  %28 = load i8* %27, align 1, !dbg !1489, !tbaa !325
  %29 = icmp eq i8 %28, 0, !dbg !1490
  br i1 %29, label %.backedge13, label %.loopexit, !dbg !1491

; <label>:30                                      ; preds = %regnext.exit
  %31 = load i8** %2, align 8, !dbg !1492, !tbaa !693
  %32 = load i8* %31, align 1, !dbg !1494, !tbaa !325
  %33 = icmp eq i8 %32, 0, !dbg !1495
  br i1 %33, label %.loopexit, label %34, !dbg !1496

; <label>:34                                      ; preds = %30
  %35 = getelementptr inbounds i8* %31, i64 1, !dbg !1497
  store i8* %35, i8** %2, align 8, !dbg !1497, !tbaa !693
  br label %.backedge13, !dbg !1498

; <label>:36                                      ; preds = %regnext.exit
  %37 = getelementptr inbounds i8* %scan.034, i64 3, !dbg !1499
  tail call void @llvm.dbg.value(metadata i8* %37, i64 0, metadata !224, metadata !274), !dbg !1500
  %38 = load i8* %37, align 1, !dbg !1501, !tbaa !325
  %39 = load i8** %2, align 8, !dbg !1503, !tbaa !693
  %40 = load i8* %39, align 1, !dbg !1504, !tbaa !325
  %41 = icmp eq i8 %38, %40, !dbg !1505
  br i1 %41, label %42, label %.loopexit, !dbg !1506

; <label>:42                                      ; preds = %36
  %43 = tail call i64 @strlen(i8* %37) #8, !dbg !1507
  tail call void @llvm.dbg.value(metadata i64 %43, i64 0, metadata !218, metadata !274), !dbg !1508
  %44 = icmp ugt i64 %43, 1, !dbg !1509
  br i1 %44, label %45, label %48, !dbg !1511

; <label>:45                                      ; preds = %42
  %46 = tail call i32 @strncmp(i8* %37, i8* %39, i64 %43) #8, !dbg !1512
  %47 = icmp eq i32 %46, 0, !dbg !1513
  br i1 %47, label %48, label %.loopexit, !dbg !1514

; <label>:48                                      ; preds = %45, %42
  %49 = getelementptr inbounds i8* %39, i64 %43, !dbg !1515
  store i8* %49, i8** %2, align 8, !dbg !1515, !tbaa !693
  br label %.backedge13, !dbg !1516

; <label>:50                                      ; preds = %regnext.exit
  %51 = load i8** %2, align 8, !dbg !1517, !tbaa !693
  %52 = load i8* %51, align 1, !dbg !1519, !tbaa !325
  %53 = icmp eq i8 %52, 0, !dbg !1520
  br i1 %53, label %.loopexit, label %54, !dbg !1521

; <label>:54                                      ; preds = %50
  %55 = sext i8 %52 to i32, !dbg !1519
  %56 = getelementptr inbounds i8* %scan.034, i64 3, !dbg !1522
  %57 = tail call i8* @strchr(i8* %56, i32 %55) #8, !dbg !1523
  %58 = icmp eq i8* %57, null, !dbg !1524
  br i1 %58, label %.loopexit, label %59, !dbg !1525

; <label>:59                                      ; preds = %54
  %60 = getelementptr inbounds i8* %51, i64 1, !dbg !1526
  store i8* %60, i8** %2, align 8, !dbg !1526, !tbaa !693
  br label %.backedge13, !dbg !1527

; <label>:61                                      ; preds = %regnext.exit
  %62 = load i8** %2, align 8, !dbg !1528, !tbaa !693
  %63 = load i8* %62, align 1, !dbg !1530, !tbaa !325
  %64 = icmp eq i8 %63, 0, !dbg !1531
  br i1 %64, label %.loopexit, label %65, !dbg !1532

; <label>:65                                      ; preds = %61
  %66 = sext i8 %63 to i32, !dbg !1530
  %67 = getelementptr inbounds i8* %scan.034, i64 3, !dbg !1533
  %68 = tail call i8* @strchr(i8* %67, i32 %66) #8, !dbg !1534
  %69 = icmp eq i8* %68, null, !dbg !1535
  br i1 %69, label %70, label %.loopexit, !dbg !1536

; <label>:70                                      ; preds = %65
  %71 = getelementptr inbounds i8* %62, i64 1, !dbg !1537
  store i8* %71, i8** %2, align 8, !dbg !1537, !tbaa !693
  br label %.backedge13, !dbg !1538

; <label>:72                                      ; preds = %regnext.exit, %regnext.exit, %regnext.exit, %regnext.exit, %regnext.exit, %regnext.exit, %regnext.exit, %regnext.exit, %regnext.exit
  %73 = load i64* %4, align 8, !dbg !1539, !tbaa !693
  %74 = tail call fastcc i32 @regmatch(%struct.exec* %ep, i8* %.0.i) #9, !dbg !1540
  %75 = icmp eq i32 %74, 0, !dbg !1540
  br i1 %75, label %.loopexit, label %76, !dbg !1542

; <label>:76                                      ; preds = %72
  %77 = sext i8 %.pre to i64, !dbg !1543
  %78 = add nsw i64 %77, -20, !dbg !1544
  %79 = getelementptr inbounds %struct.exec* %ep, i64 0, i32 2, !dbg !1545
  %80 = load i8*** %79, align 8, !dbg !1545, !tbaa !492
  %81 = getelementptr inbounds i8** %80, i64 %78, !dbg !1548
  %82 = load i8** %81, align 8, !dbg !1548, !tbaa !288
  %83 = icmp eq i8* %82, null, !dbg !1549
  br i1 %83, label %84, label %.loopexit, !dbg !1550

; <label>:84                                      ; preds = %76
  %85 = bitcast i8** %81 to i64*, !dbg !1551
  store i64 %73, i64* %85, align 8, !dbg !1551, !tbaa !288
  br label %.loopexit, !dbg !1552

; <label>:86                                      ; preds = %regnext.exit, %regnext.exit, %regnext.exit, %regnext.exit, %regnext.exit, %regnext.exit, %regnext.exit, %regnext.exit, %regnext.exit
  %87 = load i64* %4, align 8, !dbg !1553, !tbaa !693
  %88 = tail call fastcc i32 @regmatch(%struct.exec* %ep, i8* %.0.i) #9, !dbg !1554
  %89 = icmp eq i32 %88, 0, !dbg !1554
  br i1 %89, label %.loopexit, label %90, !dbg !1556

; <label>:90                                      ; preds = %86
  %91 = sext i8 %.pre to i64, !dbg !1557
  %92 = add nsw i64 %91, -30, !dbg !1558
  %93 = getelementptr inbounds %struct.exec* %ep, i64 0, i32 3, !dbg !1559
  %94 = load i8*** %93, align 8, !dbg !1559, !tbaa !496
  %95 = getelementptr inbounds i8** %94, i64 %92, !dbg !1562
  %96 = load i8** %95, align 8, !dbg !1562, !tbaa !288
  %97 = icmp eq i8* %96, null, !dbg !1563
  br i1 %97, label %98, label %.loopexit, !dbg !1564

; <label>:98                                      ; preds = %90
  %99 = bitcast i8** %95 to i64*, !dbg !1565
  store i64 %87, i64* %99, align 8, !dbg !1565, !tbaa !288
  br label %.loopexit, !dbg !1566

; <label>:100                                     ; preds = %regnext.exit
  %101 = load i64* %4, align 8, !dbg !1470, !tbaa !693
  %102 = load i8* %.0.i, align 1, !dbg !1567, !tbaa !325
  %103 = icmp eq i8 %102, 6, !dbg !1569
  br i1 %103, label %regnext.exit8.preheader, label %.backedge13.thread, !dbg !1570

regnext.exit8.preheader:                          ; preds = %100
  %104 = icmp eq i8 %.pre, 6, !dbg !1571
  br i1 %104, label %.lr.ph, label %.loopexit, !dbg !1573

.backedge13.thread:                               ; preds = %100
  %105 = getelementptr inbounds i8* %scan.034, i64 3, !dbg !1574
  tail call void @llvm.dbg.value(metadata i8* %105, i64 0, metadata !217, metadata !274), !dbg !1483
  br label %.backedge53, !dbg !1466

.lr.ph:                                           ; preds = %regnext.exit8.preheader, %regnext.exit8.backedge
  %scan.127 = phi i8* [ %scan.1.be, %regnext.exit8.backedge ], [ %scan.034, %regnext.exit8.preheader ]
  %106 = getelementptr inbounds i8* %scan.127, i64 3, !dbg !1575
  %107 = tail call fastcc i32 @regmatch(%struct.exec* %ep, i8* %106) #9, !dbg !1578
  %108 = icmp eq i32 %107, 0, !dbg !1578
  br i1 %108, label %109, label %.loopexit, !dbg !1579

; <label>:109                                     ; preds = %.lr.ph
  store i64 %101, i64* %4, align 8, !dbg !1580, !tbaa !693
  tail call void @llvm.dbg.value(metadata i8* %scan.1.be, i64 0, metadata !253, metadata !274), !dbg !1581
  %110 = getelementptr inbounds i8* %scan.127, i64 1, !dbg !1583
  %111 = load i8* %110, align 1, !dbg !1583, !tbaa !325
  %112 = zext i8 %111 to i32, !dbg !1583
  %113 = shl nuw nsw i32 %112, 8, !dbg !1583
  %114 = and i32 %113, 32512, !dbg !1583
  %115 = getelementptr inbounds i8* %scan.127, i64 2, !dbg !1583
  %116 = load i8* %115, align 1, !dbg !1583, !tbaa !325
  %117 = zext i8 %116 to i32, !dbg !1583
  %118 = or i32 %114, %117, !dbg !1583
  tail call void @llvm.dbg.value(metadata i32 %118, i64 0, metadata !254, metadata !274), !dbg !1584
  %119 = icmp eq i32 %118, 0, !dbg !1585
  br i1 %119, label %regnext.exit8.backedge, label %122, !dbg !1586

regnext.exit8.backedge:                           ; preds = %109, %122
  %scan.1.be = phi i8* [ %127, %122 ], [ null, %109 ]
  %120 = load i8* %scan.1.be, align 1, !dbg !1587, !tbaa !325
  %121 = icmp eq i8 %120, 6, !dbg !1571
  br i1 %121, label %.lr.ph, label %.loopexit, !dbg !1573

; <label>:122                                     ; preds = %109
  %123 = load i8* %scan.127, align 1, !dbg !1588, !tbaa !325
  %124 = icmp eq i8 %123, 7, !dbg !1589
  %125 = zext i32 %118 to i64, !dbg !1590
  %126 = sub nsw i64 0, %125, !dbg !1590
  %.sink.i6 = select i1 %124, i64 %126, i64 %125, !dbg !1591
  %127 = getelementptr inbounds i8* %scan.127, i64 %.sink.i6, !dbg !1590
  br label %regnext.exit8.backedge, !dbg !1592

; <label>:128                                     ; preds = %regnext.exit, %regnext.exit
  %129 = load i8* %.0.i, align 1, !dbg !1593, !tbaa !325
  %130 = icmp eq i8 %129, 8, !dbg !1594
  br i1 %130, label %131, label %134, !dbg !1595

; <label>:131                                     ; preds = %128
  %132 = getelementptr inbounds i8* %.0.i, i64 3, !dbg !1596
  %133 = load i8* %132, align 1, !dbg !1597, !tbaa !325
  %phitmp = sext i8 %133 to i32, !dbg !1595
  br label %134, !dbg !1595

; <label>:134                                     ; preds = %128, %131
  %135 = phi i32 [ %phitmp, %131 ], [ 0, %128 ]
  %136 = load i8** %2, align 8, !dbg !1598, !tbaa !693
  tail call void @llvm.dbg.value(metadata i8* %136, i64 0, metadata !237, metadata !274), !dbg !1599
  %not. = icmp ne i8 %.pre, 10, !dbg !1600
  %137 = zext i1 %not. to i64, !dbg !1600
  tail call void @llvm.dbg.value(metadata i64 %137, i64 0, metadata !238, metadata !274), !dbg !1601
  %138 = getelementptr inbounds i8* %scan.034, i64 3, !dbg !1602
  tail call void @llvm.dbg.value(metadata %struct.exec* %ep, i64 0, metadata !244, metadata !274) #4, !dbg !1604
  tail call void @llvm.dbg.value(metadata i8* %138, i64 0, metadata !245, metadata !274) #4, !dbg !1606
  %139 = load i8* %138, align 1, !dbg !1607, !tbaa !325
  %140 = sext i8 %139 to i32, !dbg !1607
  switch i32 %140, label %158 [
    i32 3, label %141
    i32 8, label %143
    i32 4, label %152
    i32 5, label %155
  ], !dbg !1608

; <label>:141                                     ; preds = %134
  %142 = tail call i64 @strlen(i8* %136) #8, !dbg !1609
  br label %regrepeat.exit, !dbg !1611

; <label>:143                                     ; preds = %134
  %144 = getelementptr inbounds i8* %scan.034, i64 6, !dbg !1612
  %145 = load i8* %144, align 1, !dbg !1613, !tbaa !325
  tail call void @llvm.dbg.value(metadata i8 %145, i64 0, metadata !248, metadata !274) #4, !dbg !1614
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !246, metadata !274) #4, !dbg !1615
  tail call void @llvm.dbg.value(metadata i8* %136, i64 0, metadata !247, metadata !274) #4, !dbg !1616
  %146 = load i8* %136, align 1, !dbg !1617, !tbaa !325
  %147 = icmp eq i8 %146, %145, !dbg !1620
  br i1 %147, label %.lr.ph.i, label %regrepeat.exit, !dbg !1621

.lr.ph.i:                                         ; preds = %143, %.lr.ph.i
  %scan.02.i = phi i8* [ %149, %.lr.ph.i ], [ %136, %143 ], !dbg !1622
  %count.01.i = phi i64 [ %148, %.lr.ph.i ], [ 0, %143 ], !dbg !1622
  %148 = add i64 %count.01.i, 1, !dbg !1623
  tail call void @llvm.dbg.value(metadata i64 %148, i64 0, metadata !246, metadata !274) #4, !dbg !1615
  %149 = getelementptr inbounds i8* %scan.02.i, i64 1, !dbg !1624
  tail call void @llvm.dbg.value(metadata i8* %149, i64 0, metadata !247, metadata !274) #4, !dbg !1616
  %150 = load i8* %149, align 1, !dbg !1617, !tbaa !325
  %151 = icmp eq i8 %150, %145, !dbg !1620
  br i1 %151, label %.lr.ph.i, label %regrepeat.exit, !dbg !1621

; <label>:152                                     ; preds = %134
  %153 = getelementptr inbounds i8* %scan.034, i64 6, !dbg !1625
  %154 = tail call i64 @strspn(i8* %136, i8* %153) #8, !dbg !1626
  br label %regrepeat.exit, !dbg !1627

; <label>:155                                     ; preds = %134
  %156 = getelementptr inbounds i8* %scan.034, i64 6, !dbg !1628
  %157 = tail call i64 @strcspn(i8* %136, i8* %156) #8, !dbg !1629
  br label %regrepeat.exit, !dbg !1630

; <label>:158                                     ; preds = %134
  tail call void @sqd_regerror(i8* getelementptr inbounds ([38 x i8]* @.str27, i64 0, i64 0)) #8, !dbg !1631
  unreachable, !dbg !1622

regrepeat.exit:                                   ; preds = %.lr.ph.i, %141, %143, %152, %155
  %.0.i5 = phi i64 [ %157, %155 ], [ %154, %152 ], [ %142, %141 ], [ 0, %143 ], [ %148, %.lr.ph.i ], !dbg !1622
  %159 = add i64 %.0.i5, 1, !dbg !1632
  tail call void @llvm.dbg.value(metadata i64 %159, i64 0, metadata !236, metadata !274), !dbg !1633
  %160 = icmp ugt i64 %159, %137, !dbg !1634
  br i1 %160, label %.lr.ph30, label %.loopexit, !dbg !1636

.lr.ph30:                                         ; preds = %regrepeat.exit
  %161 = icmp eq i32 %135, 0, !dbg !1637
  br label %162, !dbg !1636

; <label>:162                                     ; preds = %.lr.ph30, %.backedge
  %no3.029 = phi i64 [ %159, %.lr.ph30 ], [ %.sum, %.backedge ]
  %.sum = add i64 %no3.029, -1, !dbg !1640
  %163 = getelementptr inbounds i8* %136, i64 %.sum, !dbg !1640
  store i8* %163, i8** %2, align 8, !dbg !1641, !tbaa !693
  br i1 %161, label %168, label %164, !dbg !1642

; <label>:164                                     ; preds = %162
  %165 = load i8* %163, align 1, !dbg !1643, !tbaa !325
  %166 = sext i8 %165 to i32, !dbg !1643
  %167 = icmp eq i32 %166, %135, !dbg !1644
  br i1 %167, label %168, label %.backedge, !dbg !1645

; <label>:168                                     ; preds = %164, %162
  %169 = tail call fastcc i32 @regmatch(%struct.exec* %ep, i8* %.0.i) #9, !dbg !1646
  %170 = icmp eq i32 %169, 0, !dbg !1646
  br i1 %170, label %.backedge, label %.loopexit, !dbg !1648

.backedge:                                        ; preds = %168, %164
  %171 = icmp ugt i64 %.sum, %137, !dbg !1634
  br i1 %171, label %162, label %.loopexit, !dbg !1636

; <label>:172                                     ; preds = %regnext.exit
  tail call void @sqd_regerror(i8* getelementptr inbounds ([18 x i8]* @.str25, i64 0, i64 0)) #9, !dbg !1649
  unreachable

._crit_edge:                                      ; preds = %.backedge13, %0
  tail call void @sqd_regerror(i8* getelementptr inbounds ([19 x i8]* @.str26, i64 0, i64 0)) #9, !dbg !1650
  unreachable

.loopexit:                                        ; preds = %regnext.exit, %61, %65, %50, %54, %45, %36, %30, %26, %21, %168, %.backedge, %.lr.ph, %regnext.exit8.backedge, %regrepeat.exit, %regnext.exit8.preheader, %86, %90, %98, %72, %76, %84
  %.0 = phi i32 [ 1, %84 ], [ 1, %76 ], [ 0, %72 ], [ 1, %98 ], [ 1, %90 ], [ 0, %86 ], [ 0, %regnext.exit8.preheader ], [ 0, %regrepeat.exit ], [ 0, %regnext.exit8.backedge ], [ 1, %.lr.ph ], [ 0, %.backedge ], [ 1, %168 ], [ 0, %21 ], [ 0, %26 ], [ 0, %30 ], [ 0, %36 ], [ 0, %45 ], [ 0, %54 ], [ 0, %50 ], [ 0, %65 ], [ 0, %61 ], [ 1, %regnext.exit ]
  ret i32 %.0, !dbg !1651
}
