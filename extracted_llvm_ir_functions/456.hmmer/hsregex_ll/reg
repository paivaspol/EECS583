define internal fastcc i8* @reg(%struct.comp* %cp, i32 %paren, i32* nocapture %flagp) #0 {
  %flags = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata %struct.comp* %cp, i64 0, metadata !120, metadata !274), !dbg !550
  tail call void @llvm.dbg.value(metadata i32 %paren, i64 0, metadata !121, metadata !274), !dbg !551
  tail call void @llvm.dbg.value(metadata i32* %flagp, i64 0, metadata !122, metadata !274), !dbg !552
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !123, metadata !274), !dbg !553
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !126, metadata !274), !dbg !554
  store i32 1, i32* %flagp, align 4, !dbg !555, !tbaa !430
  %1 = icmp ne i32 %paren, 0, !dbg !556
  br i1 %1, label %2, label %22, !dbg !558

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 1, !dbg !559
  %4 = load i32* %3, align 4, !dbg !559, !tbaa !346
  %5 = icmp sgt i32 %4, 9, !dbg !562
  br i1 %5, label %6, label %7, !dbg !563

; <label>:6                                       ; preds = %2
  tail call void @sqd_regerror(i8* getelementptr inbounds ([12 x i8]* @.str12, i64 0, i64 0)) #9, !dbg !564
  unreachable

; <label>:7                                       ; preds = %2
  tail call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !126, metadata !274), !dbg !554
  %8 = add nsw i32 %4, 1, !dbg !566
  store i32 %8, i32* %3, align 4, !dbg !566, !tbaa !346
  tail call void @llvm.dbg.value(metadata %struct.comp* %cp, i64 0, metadata !132, metadata !274), !dbg !567
  %9 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 2, !dbg !569
  %10 = load i8** %9, align 8, !dbg !569, !tbaa !356
  tail call void @llvm.dbg.value(metadata i8* %10, i64 0, metadata !134, metadata !274), !dbg !570
  %11 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 3, i64 0, !dbg !571
  %12 = icmp eq i8* %10, %11, !dbg !571
  br i1 %12, label %13, label %17, !dbg !573

; <label>:13                                      ; preds = %7
  %14 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 4, !dbg !574
  %15 = load i64* %14, align 8, !dbg !576, !tbaa !362
  %16 = add nsw i64 %15, 3, !dbg !576
  store i64 %16, i64* %14, align 8, !dbg !576, !tbaa !362
  br label %regnode.exit, !dbg !577

; <label>:17                                      ; preds = %7
  %18 = add nsw i32 %4, 20, !dbg !578
  %op.i = trunc i32 %18 to i8, !dbg !579
  tail call void @llvm.dbg.value(metadata i8* %10, i64 0, metadata !136, metadata !274), !dbg !580
  %19 = getelementptr inbounds i8* %10, i64 1, !dbg !581
  tail call void @llvm.dbg.value(metadata i8* %19, i64 0, metadata !136, metadata !274), !dbg !580
  store i8 %op.i, i8* %10, align 1, !dbg !582, !tbaa !325
  %20 = getelementptr inbounds i8* %10, i64 2, !dbg !583
  tail call void @llvm.dbg.value(metadata i8* %20, i64 0, metadata !136, metadata !274), !dbg !580
  store i8 0, i8* %19, align 1, !dbg !584, !tbaa !325
  %21 = getelementptr inbounds i8* %10, i64 3, !dbg !585
  tail call void @llvm.dbg.value(metadata i8* %21, i64 0, metadata !136, metadata !274), !dbg !580
  store i8 0, i8* %20, align 1, !dbg !586, !tbaa !325
  store i8* %21, i8** %9, align 8, !dbg !587, !tbaa !356
  br label %regnode.exit, !dbg !588

regnode.exit:                                     ; preds = %13, %17
  tail call void @llvm.dbg.value(metadata i8* %10, i64 0, metadata !123, metadata !274), !dbg !553
  %phitmp = add i32 %4, 30, !dbg !589
  %phitmp3 = trunc i32 %phitmp to i8, !dbg !589
  br label %22, !dbg !589

; <label>:22                                      ; preds = %regnode.exit, %0
  %ret.0 = phi i8* [ %10, %regnode.exit ], [ null, %0 ]
  %parno.0 = phi i8 [ %phitmp3, %regnode.exit ], [ 30, %0 ]
  tail call void @llvm.dbg.value(metadata i32* %flags, i64 0, metadata !127, metadata !274), !dbg !590
  %23 = call fastcc i8* @regbranch(%struct.comp* %cp, i32* %flags) #9, !dbg !591
  tail call void @llvm.dbg.value(metadata i8* %23, i64 0, metadata !124, metadata !274), !dbg !592
  %24 = icmp eq i8* %23, null, !dbg !593
  br i1 %24, label %.loopexit, label %25, !dbg !595

; <label>:25                                      ; preds = %22
  br i1 %1, label %26, label %27, !dbg !596

; <label>:26                                      ; preds = %25
  tail call fastcc void @regtail(%struct.comp* %cp, i8* %ret.0, i8* %23) #9, !dbg !597
  br label %27, !dbg !597

; <label>:27                                      ; preds = %25, %26
  %ret.1 = phi i8* [ %ret.0, %26 ], [ %23, %25 ]
  tail call void @llvm.dbg.value(metadata i32* %flags, i64 0, metadata !127, metadata !274), !dbg !590
  %28 = load i32* %flags, align 4, !dbg !599, !tbaa !430
  %29 = or i32 %28, -2, !dbg !600
  %30 = load i32* %flagp, align 4, !dbg !601, !tbaa !430
  %31 = and i32 %30, %29, !dbg !601
  tail call void @llvm.dbg.value(metadata i32* %flags, i64 0, metadata !127, metadata !274), !dbg !590
  %32 = and i32 %28, 4, !dbg !602
  %33 = or i32 %32, %31, !dbg !603
  store i32 %33, i32* %flagp, align 4, !dbg !604, !tbaa !430
  %34 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 0, !dbg !606
  %35 = load i8** %34, align 8, !dbg !606, !tbaa !340
  %36 = load i8* %35, align 1, !dbg !607, !tbaa !325
  %37 = icmp eq i8 %36, 124, !dbg !608
  br i1 %37, label %.lr.ph6, label %._crit_edge, !dbg !609

.lr.ph6:                                          ; preds = %27, %42
  %38 = phi i8* [ %49, %42 ], [ %35, %27 ]
  %39 = getelementptr inbounds i8* %38, i64 1, !dbg !610
  store i8* %39, i8** %34, align 8, !dbg !610, !tbaa !340
  tail call void @llvm.dbg.value(metadata i32* %flags, i64 0, metadata !127, metadata !274), !dbg !590
  %40 = call fastcc i8* @regbranch(%struct.comp* %cp, i32* %flags) #9, !dbg !611
  tail call void @llvm.dbg.value(metadata i8* %40, i64 0, metadata !124, metadata !274), !dbg !592
  %41 = icmp eq i8* %40, null, !dbg !612
  br i1 %41, label %.loopexit, label %42, !dbg !614

; <label>:42                                      ; preds = %.lr.ph6
  tail call fastcc void @regtail(%struct.comp* %cp, i8* %ret.1, i8* %40) #9, !dbg !615
  tail call void @llvm.dbg.value(metadata i32* %flags, i64 0, metadata !127, metadata !274), !dbg !590
  %43 = load i32* %flags, align 4, !dbg !616, !tbaa !430
  %44 = or i32 %43, -2, !dbg !617
  %45 = load i32* %flagp, align 4, !dbg !618, !tbaa !430
  %46 = and i32 %45, %44, !dbg !618
  tail call void @llvm.dbg.value(metadata i32* %flags, i64 0, metadata !127, metadata !274), !dbg !590
  %47 = and i32 %43, 4, !dbg !619
  %48 = or i32 %47, %46, !dbg !604
  store i32 %48, i32* %flagp, align 4, !dbg !604, !tbaa !430
  %49 = load i8** %34, align 8, !dbg !606, !tbaa !340
  %50 = load i8* %49, align 1, !dbg !607, !tbaa !325
  %51 = icmp eq i8 %50, 124, !dbg !608
  br i1 %51, label %.lr.ph6, label %._crit_edge, !dbg !609

._crit_edge:                                      ; preds = %42, %27
  tail call void @llvm.dbg.value(metadata %struct.comp* %cp, i64 0, metadata !132, metadata !274), !dbg !620
  %52 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 2, !dbg !622
  %53 = load i8** %52, align 8, !dbg !622, !tbaa !356
  tail call void @llvm.dbg.value(metadata i8* %53, i64 0, metadata !134, metadata !274), !dbg !623
  %54 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 3, i64 0, !dbg !624
  %55 = icmp eq i8* %53, %54, !dbg !624
  br i1 %55, label %56, label %60, !dbg !625

; <label>:56                                      ; preds = %._crit_edge
  %57 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 4, !dbg !626
  %58 = load i64* %57, align 8, !dbg !627, !tbaa !362
  %59 = add nsw i64 %58, 3, !dbg !627
  store i64 %59, i64* %57, align 8, !dbg !627, !tbaa !362
  br label %regnode.exit2, !dbg !628

; <label>:60                                      ; preds = %._crit_edge
  %op.i1 = select i1 %1, i8 %parno.0, i8 0, !dbg !629
  tail call void @llvm.dbg.value(metadata i8* %53, i64 0, metadata !136, metadata !274), !dbg !630
  %61 = getelementptr inbounds i8* %53, i64 1, !dbg !631
  tail call void @llvm.dbg.value(metadata i8* %61, i64 0, metadata !136, metadata !274), !dbg !630
  store i8 %op.i1, i8* %53, align 1, !dbg !632, !tbaa !325
  %62 = getelementptr inbounds i8* %53, i64 2, !dbg !633
  tail call void @llvm.dbg.value(metadata i8* %62, i64 0, metadata !136, metadata !274), !dbg !630
  store i8 0, i8* %61, align 1, !dbg !634, !tbaa !325
  %63 = getelementptr inbounds i8* %53, i64 3, !dbg !635
  tail call void @llvm.dbg.value(metadata i8* %63, i64 0, metadata !136, metadata !274), !dbg !630
  store i8 0, i8* %62, align 1, !dbg !636, !tbaa !325
  store i8* %63, i8** %52, align 8, !dbg !637, !tbaa !356
  br label %regnode.exit2, !dbg !638

regnode.exit2:                                    ; preds = %56, %60
  tail call void @llvm.dbg.value(metadata i8* %53, i64 0, metadata !125, metadata !274), !dbg !639
  tail call fastcc void @regtail(%struct.comp* %cp, i8* %ret.1, i8* %53) #9, !dbg !640
  tail call void @llvm.dbg.value(metadata i8* %ret.1, i64 0, metadata !124, metadata !274), !dbg !592
  %64 = icmp eq i8* %ret.1, null, !dbg !641
  br i1 %64, label %regnext.exit._crit_edge, label %.lr.ph, !dbg !644

.lr.ph:                                           ; preds = %regnode.exit2, %regnext.exit.backedge
  %br.05 = phi i8* [ %86, %regnext.exit.backedge ], [ %ret.1, %regnode.exit2 ]
  tail call void @llvm.dbg.value(metadata %struct.comp* %cp, i64 0, metadata !190, metadata !274) #4, !dbg !645
  tail call void @llvm.dbg.value(metadata i8* %86, i64 0, metadata !191, metadata !274) #4, !dbg !647
  tail call void @llvm.dbg.value(metadata i8* %53, i64 0, metadata !192, metadata !274) #4, !dbg !648
  %65 = load i8** %52, align 8, !dbg !649, !tbaa !356
  %66 = icmp eq i8* %65, %54, !dbg !649
  br i1 %66, label %regoptail.exit, label %67, !dbg !651

; <label>:67                                      ; preds = %.lr.ph
  %68 = load i8* %br.05, align 1, !dbg !652, !tbaa !325
  %69 = icmp eq i8 %68, 6, !dbg !653
  br i1 %69, label %70, label %regoptail.exit, !dbg !654

; <label>:70                                      ; preds = %67
  %71 = getelementptr inbounds i8* %br.05, i64 3, !dbg !655
  tail call fastcc void @regtail(%struct.comp* %cp, i8* %71, i8* %53) #8, !dbg !656
  br label %regoptail.exit, !dbg !657

regoptail.exit:                                   ; preds = %.lr.ph, %67, %70
  tail call void @llvm.dbg.value(metadata i8* %86, i64 0, metadata !253, metadata !274), !dbg !658
  %72 = getelementptr inbounds i8* %br.05, i64 1, !dbg !660
  %73 = load i8* %72, align 1, !dbg !660, !tbaa !325
  %74 = zext i8 %73 to i32, !dbg !660
  %75 = shl nuw nsw i32 %74, 8, !dbg !660
  %76 = and i32 %75, 32512, !dbg !660
  %77 = getelementptr inbounds i8* %br.05, i64 2, !dbg !660
  %78 = load i8* %77, align 1, !dbg !660, !tbaa !325
  %79 = zext i8 %78 to i32, !dbg !660
  %80 = or i32 %76, %79, !dbg !660
  tail call void @llvm.dbg.value(metadata i32 %80, i64 0, metadata !254, metadata !274), !dbg !661
  %81 = icmp eq i32 %80, 0, !dbg !662
  br i1 %81, label %regnext.exit._crit_edge, label %regnext.exit.backedge, !dbg !663

regnext.exit.backedge:                            ; preds = %regoptail.exit
  %82 = load i8* %br.05, align 1, !dbg !664, !tbaa !325
  %83 = icmp eq i8 %82, 7, !dbg !665
  %84 = zext i32 %80 to i64, !dbg !666
  %85 = sub nsw i64 0, %84, !dbg !666
  %.sink.i = select i1 %83, i64 %85, i64 %84, !dbg !667
  %86 = getelementptr inbounds i8* %br.05, i64 %.sink.i, !dbg !666
  %87 = icmp eq i8* %86, null, !dbg !641
  br i1 %87, label %regnext.exit._crit_edge, label %.lr.ph, !dbg !644

regnext.exit._crit_edge:                          ; preds = %regoptail.exit, %regnext.exit.backedge, %regnode.exit2
  %88 = load i8** %34, align 8, !dbg !668, !tbaa !340
  br i1 %1, label %89, label %.critedge, !dbg !670

; <label>:89                                      ; preds = %regnext.exit._crit_edge
  %90 = getelementptr inbounds i8* %88, i64 1, !dbg !668
  store i8* %90, i8** %34, align 8, !dbg !668, !tbaa !340
  %91 = load i8* %88, align 1, !dbg !671, !tbaa !325
  %92 = icmp eq i8 %91, 41, !dbg !672
  br i1 %92, label %.loopexit, label %93, !dbg !673

; <label>:93                                      ; preds = %89
  tail call void @sqd_regerror(i8* getelementptr inbounds ([16 x i8]* @.str13, i64 0, i64 0)) #9, !dbg !674
  unreachable

.critedge:                                        ; preds = %regnext.exit._crit_edge
  %94 = load i8* %88, align 1, !dbg !677, !tbaa !325
  switch i8 %94, label %96 [
    i8 0, label %.loopexit
    i8 41, label %95
  ], !dbg !679

; <label>:95                                      ; preds = %.critedge
  tail call void @sqd_regerror(i8* getelementptr inbounds ([13 x i8]* @.str14, i64 0, i64 0)) #9, !dbg !680
  unreachable

; <label>:96                                      ; preds = %.critedge
  tail call void @sqd_regerror(i8* getelementptr inbounds ([28 x i8]* @.str15, i64 0, i64 0)) #9, !dbg !685
  unreachable

.loopexit:                                        ; preds = %.lr.ph6, %89, %.critedge, %22
  %.0 = phi i8* [ null, %22 ], [ %ret.1, %.critedge ], [ %ret.1, %89 ], [ null, %.lr.ph6 ]
  ret i8* %.0, !dbg !687
}
