define internal fastcc i8* @reg(%struct.comp* %cp, i32 %paren, i32* nocapture %flagp) #0 {
entry:
  %flags = alloca i32, align 4
  call void @llvm.dbg.value(metadata !{%struct.comp* %cp}, i64 0, metadata !191), !dbg !386
  call void @llvm.dbg.value(metadata !{i32 %paren}, i64 0, metadata !192), !dbg !387
  call void @llvm.dbg.value(metadata !{i32* %flagp}, i64 0, metadata !193), !dbg !388
  call void @llvm.dbg.value(metadata !389, i64 0, metadata !194), !dbg !390
  call void @llvm.dbg.value(metadata !18, i64 0, metadata !197), !dbg !391
  call void @llvm.dbg.declare(metadata !{i32* %flags}, metadata !198), !dbg !392
  store i32 1, i32* %flagp, align 4, !dbg !393, !tbaa !300
  %tobool = icmp ne i32 %paren, 0, !dbg !394
  br i1 %tobool, label %if.then, label %if.end4, !dbg !394

if.then:                                          ; preds = %entry
  %regnpar = getelementptr inbounds %struct.comp* %cp, i64 0, i32 1, !dbg !395
  %0 = load i32* %regnpar, align 4, !dbg !395, !tbaa !300
  %cmp = icmp sgt i32 %0, 9, !dbg !395
  br i1 %cmp, label %if.then1, label %if.end, !dbg !395

if.then1:                                         ; preds = %if.then
  call void @sqd_regerror(i8* getelementptr inbounds ([12 x i8]* @.str15, i64 0, i64 0)) #11, !dbg !397
  unreachable

if.end:                                           ; preds = %if.then
  call void @llvm.dbg.value(metadata !{i32 %0}, i64 0, metadata !197), !dbg !399
  %inc = add nsw i32 %0, 1, !dbg !400
  store i32 %inc, i32* %regnpar, align 4, !dbg !400, !tbaa !300
  tail call void @llvm.dbg.value(metadata !{%struct.comp* %cp}, i64 0, metadata !401), !dbg !403
  %regcode.i = getelementptr inbounds %struct.comp* %cp, i64 0, i32 2, !dbg !404
  %1 = load i8** %regcode.i, align 8, !dbg !404, !tbaa !270
  tail call void @llvm.dbg.value(metadata !{i8* %1}, i64 0, metadata !405), !dbg !404
  %arraydecay.i = getelementptr inbounds %struct.comp* %cp, i64 0, i32 3, i64 0, !dbg !406
  %cmp.i = icmp eq i8* %1, %arraydecay.i, !dbg !406
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !406

if.then.i:                                        ; preds = %if.end
  %regsize.i = getelementptr inbounds %struct.comp* %cp, i64 0, i32 4, !dbg !407
  %2 = load i64* %regsize.i, align 8, !dbg !407, !tbaa !309
  %add.i = add nsw i64 %2, 3, !dbg !407
  store i64 %add.i, i64* %regsize.i, align 8, !dbg !407, !tbaa !309
  br label %regnode.exit, !dbg !409

if.end.i:                                         ; preds = %if.end
  %add = add nsw i32 %0, 20, !dbg !402
  %op.i = trunc i32 %add to i8
  tail call void @llvm.dbg.value(metadata !{i8* %1}, i64 0, metadata !410), !dbg !411
  %incdec.ptr.i = getelementptr inbounds i8* %1, i64 1, !dbg !412
  tail call void @llvm.dbg.value(metadata !{i8* %incdec.ptr.i}, i64 0, metadata !410), !dbg !412
  store i8 %op.i, i8* %1, align 1, !dbg !412, !tbaa !271
  %incdec.ptr2.i = getelementptr inbounds i8* %1, i64 2, !dbg !413
  tail call void @llvm.dbg.value(metadata !{i8* %incdec.ptr2.i}, i64 0, metadata !410), !dbg !413
  store i8 0, i8* %incdec.ptr.i, align 1, !dbg !413, !tbaa !271
  %incdec.ptr3.i = getelementptr inbounds i8* %1, i64 3, !dbg !414
  tail call void @llvm.dbg.value(metadata !{i8* %incdec.ptr3.i}, i64 0, metadata !410), !dbg !414
  store i8 0, i8* %incdec.ptr2.i, align 1, !dbg !414, !tbaa !271
  store i8* %incdec.ptr3.i, i8** %regcode.i, align 8, !dbg !415, !tbaa !270
  br label %regnode.exit, !dbg !416

regnode.exit:                                     ; preds = %if.then.i, %if.end.i
  call void @llvm.dbg.value(metadata !{i8* %1}, i64 0, metadata !194), !dbg !402
  %phitmp = add i32 %0, 30, !dbg !417
  %phitmp111 = trunc i32 %phitmp to i8, !dbg !417
  br label %if.end4, !dbg !417

if.end4:                                          ; preds = %regnode.exit, %entry
  %ret.0 = phi i8* [ %1, %regnode.exit ], [ null, %entry ]
  %parno.0 = phi i8 [ %phitmp111, %regnode.exit ], [ 30, %entry ]
  %call5 = call fastcc i8* @regbranch(%struct.comp* %cp, i32* %flags) #11, !dbg !418
  call void @llvm.dbg.value(metadata !{i8* %call5}, i64 0, metadata !195), !dbg !418
  %cmp6 = icmp eq i8* %call5, null, !dbg !419
  br i1 %cmp6, label %return, label %if.end8, !dbg !419

if.end8:                                          ; preds = %if.end4
  br i1 %tobool, label %if.then10, label %if.end11, !dbg !420

if.then10:                                        ; preds = %if.end8
  call fastcc void @regtail(%struct.comp* %cp, i8* %ret.0, i8* %call5) #11, !dbg !421
  br label %if.end11, !dbg !421

if.end11:                                         ; preds = %if.end8, %if.then10
  %ret.1 = phi i8* [ %ret.0, %if.then10 ], [ %call5, %if.end8 ]
  call void @llvm.dbg.value(metadata !{i32* %flags}, i64 0, metadata !198), !dbg !422
  %3 = load i32* %flags, align 4, !dbg !422, !tbaa !300
  %neg1293 = or i32 %3, -2, !dbg !422
  %4 = load i32* %flagp, align 4, !dbg !422, !tbaa !300
  %and13 = and i32 %4, %neg1293, !dbg !422
  call void @llvm.dbg.value(metadata !{i32* %flags}, i64 0, metadata !198), !dbg !423
  %and14 = and i32 %3, 4, !dbg !423
  %or = or i32 %and14, %and13, !dbg !423
  store i32 %or, i32* %flagp, align 4, !dbg !424, !tbaa !300
  %regparse = getelementptr inbounds %struct.comp* %cp, i64 0, i32 0, !dbg !426
  %5 = load i8** %regparse, align 8, !dbg !426, !tbaa !270
  %6 = load i8* %5, align 1, !dbg !426, !tbaa !271
  %cmp15115 = icmp eq i8 %6, 124, !dbg !426
  br i1 %cmp15115, label %while.body, label %while.end, !dbg !426

while.body:                                       ; preds = %if.end11, %if.end22
  %7 = phi i8* [ %10, %if.end22 ], [ %5, %if.end11 ]
  %incdec.ptr = getelementptr inbounds i8* %7, i64 1, !dbg !427
  store i8* %incdec.ptr, i8** %regparse, align 8, !dbg !427, !tbaa !270
  %call18 = call fastcc i8* @regbranch(%struct.comp* %cp, i32* %flags) #11, !dbg !428
  call void @llvm.dbg.value(metadata !{i8* %call18}, i64 0, metadata !195), !dbg !428
  %cmp19 = icmp eq i8* %call18, null, !dbg !429
  br i1 %cmp19, label %return, label %if.end22, !dbg !429

if.end22:                                         ; preds = %while.body
  call fastcc void @regtail(%struct.comp* %cp, i8* %ret.1, i8* %call18) #11, !dbg !430
  call void @llvm.dbg.value(metadata !{i32* %flags}, i64 0, metadata !198), !dbg !431
  %8 = load i32* %flags, align 4, !dbg !431, !tbaa !300
  %neg2594 = or i32 %8, -2, !dbg !431
  %9 = load i32* %flagp, align 4, !dbg !431, !tbaa !300
  %and26 = and i32 %9, %neg2594, !dbg !431
  call void @llvm.dbg.value(metadata !{i32* %flags}, i64 0, metadata !198), !dbg !424
  %and27 = and i32 %8, 4, !dbg !424
  %or28 = or i32 %and27, %and26, !dbg !424
  store i32 %or28, i32* %flagp, align 4, !dbg !424, !tbaa !300
  %10 = load i8** %regparse, align 8, !dbg !426, !tbaa !270
  %11 = load i8* %10, align 1, !dbg !426, !tbaa !271
  %cmp15 = icmp eq i8 %11, 124, !dbg !426
  br i1 %cmp15, label %while.body, label %while.end, !dbg !426

while.end:                                        ; preds = %if.end22, %if.end11
  tail call void @llvm.dbg.value(metadata !{%struct.comp* %cp}, i64 0, metadata !432), !dbg !434
  %regcode.i99 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 2, !dbg !435
  %12 = load i8** %regcode.i99, align 8, !dbg !435, !tbaa !270
  tail call void @llvm.dbg.value(metadata !{i8* %12}, i64 0, metadata !436), !dbg !435
  %arraydecay.i100 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 3, i64 0, !dbg !437
  %cmp.i101 = icmp eq i8* %12, %arraydecay.i100, !dbg !437
  br i1 %cmp.i101, label %if.then.i104, label %if.end.i109, !dbg !437

if.then.i104:                                     ; preds = %while.end
  %regsize.i102 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 4, !dbg !438
  %13 = load i64* %regsize.i102, align 8, !dbg !438, !tbaa !309
  %add.i103 = add nsw i64 %13, 3, !dbg !438
  store i64 %add.i103, i64* %regsize.i102, align 8, !dbg !438, !tbaa !309
  br label %regnode.exit110, !dbg !439

if.end.i109:                                      ; preds = %while.end
  %op.i105 = select i1 %tobool, i8 %parno.0, i8 0
  tail call void @llvm.dbg.value(metadata !{i8* %12}, i64 0, metadata !440), !dbg !441
  %incdec.ptr.i106 = getelementptr inbounds i8* %12, i64 1, !dbg !442
  tail call void @llvm.dbg.value(metadata !{i8* %incdec.ptr.i106}, i64 0, metadata !440), !dbg !442
  store i8 %op.i105, i8* %12, align 1, !dbg !442, !tbaa !271
  %incdec.ptr2.i107 = getelementptr inbounds i8* %12, i64 2, !dbg !443
  tail call void @llvm.dbg.value(metadata !{i8* %incdec.ptr2.i107}, i64 0, metadata !440), !dbg !443
  store i8 0, i8* %incdec.ptr.i106, align 1, !dbg !443, !tbaa !271
  %incdec.ptr3.i108 = getelementptr inbounds i8* %12, i64 3, !dbg !444
  tail call void @llvm.dbg.value(metadata !{i8* %incdec.ptr3.i108}, i64 0, metadata !440), !dbg !444
  store i8 0, i8* %incdec.ptr2.i107, align 1, !dbg !444, !tbaa !271
  store i8* %incdec.ptr3.i108, i8** %regcode.i99, align 8, !dbg !445, !tbaa !270
  br label %regnode.exit110, !dbg !446

regnode.exit110:                                  ; preds = %if.then.i104, %if.end.i109
  call void @llvm.dbg.value(metadata !{i8* %12}, i64 0, metadata !196), !dbg !433
  call fastcc void @regtail(%struct.comp* %cp, i8* %ret.1, i8* %12) #11, !dbg !447
  call void @llvm.dbg.value(metadata !{i8* %ret.1}, i64 0, metadata !195), !dbg !448
  %cmp32112 = icmp eq i8* %ret.1, null, !dbg !448
  br i1 %cmp32112, label %for.end, label %for.body, !dbg !448

for.body:                                         ; preds = %regoptail.exit, %regnode.exit110
  %br.0113 = phi i8* [ %ret.1, %regnode.exit110 ], [ %call34, %regoptail.exit ]
  call void @llvm.dbg.value(metadata !{%struct.comp* %cp}, i64 0, metadata !450) #4, !dbg !452
  call void @llvm.dbg.value(metadata !{i8* %br.0113}, i64 0, metadata !453) #4, !dbg !454
  call void @llvm.dbg.value(metadata !{i8* %12}, i64 0, metadata !455) #4, !dbg !456
  %14 = load i8** %regcode.i99, align 8, !dbg !457, !tbaa !270
  %cmp.i97 = icmp eq i8* %14, %arraydecay.i100, !dbg !457
  br i1 %cmp.i97, label %regoptail.exit, label %lor.lhs.false.i, !dbg !457

lor.lhs.false.i:                                  ; preds = %for.body
  %15 = load i8* %br.0113, align 1, !dbg !457, !tbaa !271
  %cmp1.i = icmp eq i8 %15, 6, !dbg !457
  br i1 %cmp1.i, label %if.end.i98, label %regoptail.exit, !dbg !457

if.end.i98:                                       ; preds = %lor.lhs.false.i
  %add.ptr.i = getelementptr inbounds i8* %br.0113, i64 3, !dbg !458
  call fastcc void @regtail(%struct.comp* %cp, i8* %add.ptr.i, i8* %12) #10, !dbg !458
  br label %regoptail.exit, !dbg !458

regoptail.exit:                                   ; preds = %for.body, %lor.lhs.false.i, %if.end.i98
  %call34 = call fastcc i8* @regnext(i8* %br.0113) #11, !dbg !448
  call void @llvm.dbg.value(metadata !{i8* %call34}, i64 0, metadata !195), !dbg !448
  %cmp32 = icmp eq i8* %call34, null, !dbg !448
  br i1 %cmp32, label %for.end, label %for.body, !dbg !448

for.end:                                          ; preds = %regoptail.exit, %regnode.exit110
  %16 = load i8** %regparse, align 8, !dbg !459, !tbaa !270
  br i1 %tobool, label %land.lhs.true, label %land.lhs.true44, !dbg !459

land.lhs.true:                                    ; preds = %for.end
  %incdec.ptr37 = getelementptr inbounds i8* %16, i64 1, !dbg !459
  store i8* %incdec.ptr37, i8** %regparse, align 8, !dbg !459, !tbaa !270
  %17 = load i8* %16, align 1, !dbg !459, !tbaa !271
  %cmp39 = icmp eq i8 %17, 41, !dbg !459
  br i1 %cmp39, label %return, label %if.then41, !dbg !459

if.then41:                                        ; preds = %land.lhs.true
  call void @sqd_regerror(i8* getelementptr inbounds ([16 x i8]* @.str16, i64 0, i64 0)) #11, !dbg !460
  unreachable

land.lhs.true44:                                  ; preds = %for.end
  %18 = load i8* %16, align 1, !dbg !463, !tbaa !271
  switch i8 %18, label %if.else55 [
    i8 0, label %return
    i8 41, label %if.then54
  ], !dbg !463

if.then54:                                        ; preds = %land.lhs.true44
  call void @sqd_regerror(i8* getelementptr inbounds ([13 x i8]* @.str17, i64 0, i64 0)) #11, !dbg !464
  unreachable

if.else55:                                        ; preds = %land.lhs.true44
  call void @sqd_regerror(i8* getelementptr inbounds ([28 x i8]* @.str18, i64 0, i64 0)) #11, !dbg !468
  unreachable

return:                                           ; preds = %while.body, %land.lhs.true, %land.lhs.true44, %if.end4
  %retval.0 = phi i8* [ null, %if.end4 ], [ %ret.1, %land.lhs.true44 ], [ %ret.1, %land.lhs.true ], [ null, %while.body ]
  ret i8* %retval.0, !dbg !470
}
