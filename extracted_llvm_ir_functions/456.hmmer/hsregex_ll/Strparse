define i32 @Strparse(i8* %rexp, i8* %s, i32 %ntok) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %rexp}, i64 0, metadata !28), !dbg !265
  tail call void @llvm.dbg.value(metadata !{i8* %s}, i64 0, metadata !29), !dbg !265
  tail call void @llvm.dbg.value(metadata !{i32 %ntok}, i64 0, metadata !30), !dbg !265
  %cmp = icmp sgt i32 %ntok, 9, !dbg !266
  br i1 %cmp, label %if.then, label %for.cond.preheader, !dbg !266

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @Die(i8* getelementptr inbounds ([31 x i8]* @.str, i64 0, i64 0), i32 9) #10, !dbg !266
  br label %for.cond.preheader, !dbg !266

for.cond.preheader:                               ; preds = %if.then, %entry
  %cmp179 = icmp slt i32 %ntok, 0, !dbg !267
  br i1 %cmp179, label %for.end, label %for.body.lr.ph, !dbg !267

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %0 = add i32 %ntok, 1, !dbg !267
  br label %for.body, !dbg !267

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv81 = phi i64 [ %indvars.iv.next82, %for.inc ], [ 0, %for.body.lr.ph ]
  %arrayidx = getelementptr inbounds [10 x i8*]* @sqd_parse, i64 0, i64 %indvars.iv81, !dbg !269
  %1 = load i8** %arrayidx, align 8, !dbg !269, !tbaa !270
  %cmp2 = icmp eq i8* %1, null, !dbg !269
  br i1 %cmp2, label %for.inc, label %if.then3, !dbg !269

if.then3:                                         ; preds = %for.body
  tail call void @free(i8* %1) #10, !dbg !273
  store i8* null, i8** %arrayidx, align 8, !dbg !275, !tbaa !270
  br label %for.inc, !dbg !276

for.inc:                                          ; preds = %for.body, %if.then3
  %indvars.iv.next82 = add i64 %indvars.iv81, 1, !dbg !267
  %lftr.wideiv83 = trunc i64 %indvars.iv.next82 to i32, !dbg !267
  %exitcond84 = icmp eq i32 %lftr.wideiv83, %0, !dbg !267
  br i1 %exitcond84, label %for.end, label %for.body, !dbg !267

for.end:                                          ; preds = %for.inc, %for.cond.preheader
  %call = tail call %struct.sqd_regexp* @sqd_regcomp(i8* %rexp) #11, !dbg !277
  tail call void @llvm.dbg.value(metadata !{%struct.sqd_regexp* %call}, i64 0, metadata !31), !dbg !277
  %cmp9 = icmp eq %struct.sqd_regexp* %call, null, !dbg !277
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !277

if.then10:                                        ; preds = %for.end
  tail call void (i8*, ...)* @Die(i8* getelementptr inbounds ([27 x i8]* @.str1, i64 0, i64 0)) #10, !dbg !278
  br label %if.end11, !dbg !278

if.end11:                                         ; preds = %if.then10, %for.end
  %call12 = tail call i32 @sqd_regexec(%struct.sqd_regexp* %call, i8* %s) #11, !dbg !279
  tail call void @llvm.dbg.value(metadata !{i32 %call12}, i64 0, metadata !50), !dbg !279
  %cmp13.not = icmp ne i32 %call12, 1, !dbg !280
  %brmerge = or i1 %cmp13.not, %cmp179, !dbg !280
  br i1 %brmerge, label %if.end50, label %for.body17.lr.ph, !dbg !280

for.body17.lr.ph:                                 ; preds = %if.end11
  %2 = add i32 %ntok, 1, !dbg !281
  br label %for.body17, !dbg !281

for.body17:                                       ; preds = %for.inc47, %for.body17.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc47 ], [ 0, %for.body17.lr.ph ]
  %arrayidx19 = getelementptr inbounds %struct.sqd_regexp* %call, i64 0, i32 0, i64 %indvars.iv, !dbg !283
  %3 = load i8** %arrayidx19, align 8, !dbg !283, !tbaa !270
  %cmp20 = icmp eq i8* %3, null, !dbg !283
  br i1 %cmp20, label %for.inc47, label %land.lhs.true, !dbg !283

land.lhs.true:                                    ; preds = %for.body17
  %arrayidx22 = getelementptr inbounds %struct.sqd_regexp* %call, i64 0, i32 1, i64 %indvars.iv, !dbg !283
  %4 = load i8** %arrayidx22, align 8, !dbg !283, !tbaa !270
  %cmp23 = icmp eq i8* %4, null, !dbg !283
  br i1 %cmp23, label %for.inc47, label %if.then24, !dbg !283

if.then24:                                        ; preds = %land.lhs.true
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !284
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !284
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !284
  %add = shl i64 %sub.ptr.sub, 32, !dbg !286
  %sext = add i64 %add, 4294967296, !dbg !286
  %conv31 = ashr exact i64 %sext, 32, !dbg !286
  %call32 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([53 x i8]* @.str2, i64 0, i64 0), i32 124, i64 %conv31) #10, !dbg !286
  %arrayidx34 = getelementptr inbounds [10 x i8*]* @sqd_parse, i64 0, i64 %indvars.iv, !dbg !286
  store i8* %call32, i8** %arrayidx34, align 8, !dbg !286, !tbaa !270
  %5 = load i8** %arrayidx19, align 8, !dbg !287, !tbaa !270
  %conv40 = ashr exact i64 %add, 32, !dbg !287
  %call41 = tail call i8* @strncpy(i8* %call32, i8* %5, i64 %conv40) #10, !dbg !287
  %6 = load i8** %arrayidx34, align 8, !dbg !288, !tbaa !270
  %arrayidx45 = getelementptr inbounds i8* %6, i64 %conv40, !dbg !288
  store i8 0, i8* %arrayidx45, align 1, !dbg !288, !tbaa !271
  br label %for.inc47, !dbg !289

for.inc47:                                        ; preds = %land.lhs.true, %for.body17, %if.then24
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !281
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !281
  %exitcond = icmp eq i32 %lftr.wideiv, %2, !dbg !281
  br i1 %exitcond, label %if.end50, label %for.body17, !dbg !281

if.end50:                                         ; preds = %if.end11, %for.inc47
  %7 = bitcast %struct.sqd_regexp* %call to i8*, !dbg !290
  tail call void @free(i8* %7) #10, !dbg !290
  ret i32 %call12, !dbg !291
}
