define i32 @sqd_regexec(%struct.sqd_regexp* %prog, i8* %str) #0 {
entry:
  %ex = alloca %struct.exec, align 8
  %cmp = icmp eq %struct.sqd_regexp* %prog, null
  %cmp1 = icmp eq i8* %str, null
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @sqd_regerror(i8* getelementptr inbounds ([29 x i8]* @.str6, i64 0, i64 0)) #10
  unreachable

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds %struct.sqd_regexp* %prog, i64 0, i32 6, i64 0
  %0 = load i8* %arraydecay, align 1, !tbaa !1
  %cmp2 = icmp eq i8 %0, -100
  br i1 %cmp2, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.end
  call void @sqd_regerror(i8* getelementptr inbounds ([17 x i8]* @.str7, i64 0, i64 0)) #10
  unreachable

if.end5:                                          ; preds = %if.end
  %regmust = getelementptr inbounds %struct.sqd_regexp* %prog, i64 0, i32 4
  %1 = load i8** %regmust, align 8, !tbaa !0
  %cmp6 = icmp eq i8* %1, null
  br i1 %cmp6, label %if.end12, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end5
  %call = call i8* @strstr(i8* %str, i8* %1) #11
  %cmp9 = icmp eq i8* %call, null
  br i1 %cmp9, label %return, label %if.end12

if.end12:                                         ; preds = %if.end5, %land.lhs.true
  %regbol = getelementptr inbounds %struct.exec* %ex, i64 0, i32 1
  store i8* %str, i8** %regbol, align 8, !tbaa !0
  %arraydecay13 = getelementptr inbounds %struct.sqd_regexp* %prog, i64 0, i32 0, i64 0
  %regstartp = getelementptr inbounds %struct.exec* %ex, i64 0, i32 2
  store i8** %arraydecay13, i8*** %regstartp, align 8, !tbaa !0
  %arraydecay14 = getelementptr inbounds %struct.sqd_regexp* %prog, i64 0, i32 1, i64 0
  %regendp = getelementptr inbounds %struct.exec* %ex, i64 0, i32 3
  store i8** %arraydecay14, i8*** %regendp, align 8, !tbaa !0
  %reganch = getelementptr inbounds %struct.sqd_regexp* %prog, i64 0, i32 3
  %2 = load i8* %reganch, align 1, !tbaa !1
  %tobool = icmp eq i8 %2, 0
  br i1 %tobool, label %if.end17, label %if.then15

if.then15:                                        ; preds = %if.end12
  %call16 = call fastcc i32 @regtry(%struct.exec* %ex, %struct.sqd_regexp* %prog, i8* %str) #10
  br label %return

if.end17:                                         ; preds = %if.end12
  %regstart = getelementptr inbounds %struct.sqd_regexp* %prog, i64 0, i32 2
  %3 = load i8* %regstart, align 1, !tbaa !1
  %cmp19 = icmp eq i8 %3, 0
  br i1 %cmp19, label %for.cond31.preheader, label %for.body

for.cond31.preheader:                             ; preds = %if.end17
  %call3261 = call fastcc i32 @regtry(%struct.exec* %ex, %struct.sqd_regexp* %prog, i8* %str) #10
  %lnot62 = icmp eq i32 %call3261, 0
  br i1 %lnot62, label %for.body34, label %return

for.body:                                         ; preds = %if.end17, %for.inc
  %s.067 = phi i8* [ %call30, %for.inc ], [ %str, %if.end17 ]
  %call24 = call fastcc i32 @regtry(%struct.exec* %ex, %struct.sqd_regexp* %prog, i8* %s.067) #10
  %tobool25 = icmp eq i32 %call24, 0
  br i1 %tobool25, label %for.inc, label %return

for.inc:                                          ; preds = %for.body
  %add.ptr = getelementptr inbounds i8* %s.067, i64 1
  %4 = load i8* %regstart, align 1, !tbaa !1
  %conv29 = sext i8 %4 to i32
  %call30 = call i8* @strchr(i8* %add.ptr, i32 %conv29) #11
  %cmp22 = icmp eq i8* %call30, null
  br i1 %cmp22, label %return, label %for.body

for.cond31:                                       ; preds = %for.body34
  %call32 = call fastcc i32 @regtry(%struct.exec* %ex, %struct.sqd_regexp* %prog, i8* %incdec.ptr) #10
  %lnot = icmp eq i32 %call32, 0
  br i1 %lnot, label %for.body34, label %return

for.body34:                                       ; preds = %for.cond31.preheader, %for.cond31
  %s.163 = phi i8* [ %incdec.ptr, %for.cond31 ], [ %str, %for.cond31.preheader ]
  %5 = load i8* %s.163, align 1, !tbaa !1
  %cmp36 = icmp eq i8 %5, 0
  %incdec.ptr = getelementptr inbounds i8* %s.163, i64 1
  br i1 %cmp36, label %return, label %for.cond31

return:                                           ; preds = %for.body, %for.inc, %for.cond31.preheader, %for.body34, %for.cond31, %land.lhs.true, %if.then15
  %retval.0 = phi i32 [ %call16, %if.then15 ], [ 0, %land.lhs.true ], [ 1, %for.cond31.preheader ], [ 0, %for.body34 ], [ 1, %for.cond31 ], [ 1, %for.body ], [ 0, %for.inc ]
  ret i32 %retval.0
}
