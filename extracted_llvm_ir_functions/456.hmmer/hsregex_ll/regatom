define internal fastcc i8* @regatom(%struct.comp* %cp, i32* nocapture %flagp) #0 {
entry:
  %flags = alloca i32, align 4
  store i32 0, i32* %flagp, align 4, !tbaa !3
  %regparse = getelementptr inbounds %struct.comp* %cp, i64 0, i32 0
  %0 = load i8** %regparse, align 8, !tbaa !0
  %incdec.ptr = getelementptr inbounds i8* %0, i64 1
  store i8* %incdec.ptr, i8** %regparse, align 8, !tbaa !0
  %1 = load i8* %0, align 1, !tbaa !1
  %conv = sext i8 %1 to i32
  switch i32 %conv, label %sw.default [
    i32 94, label %sw.bb
    i32 36, label %sw.bb1
    i32 46, label %sw.bb3
    i32 91, label %sw.bb5
    i32 40, label %sw.bb63
    i32 0, label %sw.bb70
    i32 124, label %sw.bb70
    i32 41, label %sw.bb70
    i32 63, label %sw.bb71
    i32 43, label %sw.bb71
    i32 42, label %sw.bb71
    i32 92, label %sw.bb72
  ]

sw.bb:                                            ; preds = %entry
  %regcode.i = getelementptr inbounds %struct.comp* %cp, i64 0, i32 2
  %2 = load i8** %regcode.i, align 8, !tbaa !0
  %arraydecay.i = getelementptr inbounds %struct.comp* %cp, i64 0, i32 3, i64 0
  %cmp.i = icmp eq i8* %2, %arraydecay.i
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %sw.bb
  %regsize.i = getelementptr inbounds %struct.comp* %cp, i64 0, i32 4
  %3 = load i64* %regsize.i, align 8, !tbaa !4
  %add.i = add nsw i64 %3, 3
  store i64 %add.i, i64* %regsize.i, align 8, !tbaa !4
  br label %return

if.end.i:                                         ; preds = %sw.bb
  %incdec.ptr.i = getelementptr inbounds i8* %2, i64 1
  store i8 1, i8* %2, align 1, !tbaa !1
  %incdec.ptr2.i = getelementptr inbounds i8* %2, i64 2
  store i8 0, i8* %incdec.ptr.i, align 1, !tbaa !1
  %incdec.ptr3.i = getelementptr inbounds i8* %2, i64 3
  store i8 0, i8* %incdec.ptr2.i, align 1, !tbaa !1
  store i8* %incdec.ptr3.i, i8** %regcode.i, align 8, !tbaa !0
  br label %return

sw.bb1:                                           ; preds = %entry
  %regcode.i180 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 2
  %4 = load i8** %regcode.i180, align 8, !tbaa !0
  %arraydecay.i181 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 3, i64 0
  %cmp.i182 = icmp eq i8* %4, %arraydecay.i181
  br i1 %cmp.i182, label %if.then.i185, label %if.end.i189

if.then.i185:                                     ; preds = %sw.bb1
  %regsize.i183 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 4
  %5 = load i64* %regsize.i183, align 8, !tbaa !4
  %add.i184 = add nsw i64 %5, 3
  store i64 %add.i184, i64* %regsize.i183, align 8, !tbaa !4
  br label %return

if.end.i189:                                      ; preds = %sw.bb1
  %incdec.ptr.i186 = getelementptr inbounds i8* %4, i64 1
  store i8 2, i8* %4, align 1, !tbaa !1
  %incdec.ptr2.i187 = getelementptr inbounds i8* %4, i64 2
  store i8 0, i8* %incdec.ptr.i186, align 1, !tbaa !1
  %incdec.ptr3.i188 = getelementptr inbounds i8* %4, i64 3
  store i8 0, i8* %incdec.ptr2.i187, align 1, !tbaa !1
  store i8* %incdec.ptr3.i188, i8** %regcode.i180, align 8, !tbaa !0
  br label %return

sw.bb3:                                           ; preds = %entry
  %regcode.i191 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 2
  %6 = load i8** %regcode.i191, align 8, !tbaa !0
  %arraydecay.i192 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 3, i64 0
  %cmp.i193 = icmp eq i8* %6, %arraydecay.i192
  br i1 %cmp.i193, label %if.then.i196, label %if.end.i200

if.then.i196:                                     ; preds = %sw.bb3
  %regsize.i194 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 4
  %7 = load i64* %regsize.i194, align 8, !tbaa !4
  %add.i195 = add nsw i64 %7, 3
  store i64 %add.i195, i64* %regsize.i194, align 8, !tbaa !4
  br label %regnode.exit201

if.end.i200:                                      ; preds = %sw.bb3
  %incdec.ptr.i197 = getelementptr inbounds i8* %6, i64 1
  store i8 3, i8* %6, align 1, !tbaa !1
  %incdec.ptr2.i198 = getelementptr inbounds i8* %6, i64 2
  store i8 0, i8* %incdec.ptr.i197, align 1, !tbaa !1
  %incdec.ptr3.i199 = getelementptr inbounds i8* %6, i64 3
  store i8 0, i8* %incdec.ptr2.i198, align 1, !tbaa !1
  store i8* %incdec.ptr3.i199, i8** %regcode.i191, align 8, !tbaa !0
  %.pre344 = load i32* %flagp, align 4, !tbaa !3
  %phitmp = or i32 %.pre344, 3
  br label %regnode.exit201

regnode.exit201:                                  ; preds = %if.then.i196, %if.end.i200
  %8 = phi i32 [ 3, %if.then.i196 ], [ %phitmp, %if.end.i200 ]
  store i32 %8, i32* %flagp, align 4, !tbaa !3
  br label %return

sw.bb5:                                           ; preds = %entry
  %9 = load i8* %incdec.ptr, align 1, !tbaa !1
  %cmp = icmp eq i8 %9, 94
  %regcode.i202 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 2
  %10 = load i8** %regcode.i202, align 8, !tbaa !0
  %arraydecay.i203 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 3, i64 0
  %cmp.i204 = icmp eq i8* %10, %arraydecay.i203
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb5
  br i1 %cmp.i204, label %if.then.i207, label %if.end.i211

if.then.i207:                                     ; preds = %if.then
  %regsize.i205 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 4
  %11 = load i64* %regsize.i205, align 8, !tbaa !4
  %add.i206 = add nsw i64 %11, 3
  store i64 %add.i206, i64* %regsize.i205, align 8, !tbaa !4
  br label %regnode.exit212

if.end.i211:                                      ; preds = %if.then
  %incdec.ptr.i208 = getelementptr inbounds i8* %10, i64 1
  store i8 5, i8* %10, align 1, !tbaa !1
  %incdec.ptr2.i209 = getelementptr inbounds i8* %10, i64 2
  store i8 0, i8* %incdec.ptr.i208, align 1, !tbaa !1
  %incdec.ptr3.i210 = getelementptr inbounds i8* %10, i64 3
  store i8 0, i8* %incdec.ptr2.i209, align 1, !tbaa !1
  store i8* %incdec.ptr3.i210, i8** %regcode.i202, align 8, !tbaa !0
  %.pre345 = load i8** %regparse, align 8, !tbaa !0
  br label %regnode.exit212

regnode.exit212:                                  ; preds = %if.then.i207, %if.end.i211
  %12 = phi i8* [ %arraydecay.i203, %if.then.i207 ], [ %incdec.ptr3.i210, %if.end.i211 ]
  %13 = phi i8* [ %incdec.ptr, %if.then.i207 ], [ %.pre345, %if.end.i211 ]
  %incdec.ptr11 = getelementptr inbounds i8* %13, i64 1
  store i8* %incdec.ptr11, i8** %regparse, align 8, !tbaa !0
  br label %if.end

if.else:                                          ; preds = %sw.bb5
  br i1 %cmp.i204, label %if.then.i218, label %if.end.i222

if.then.i218:                                     ; preds = %if.else
  %regsize.i216 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 4
  %14 = load i64* %regsize.i216, align 8, !tbaa !4
  %add.i217 = add nsw i64 %14, 3
  store i64 %add.i217, i64* %regsize.i216, align 8, !tbaa !4
  br label %if.end

if.end.i222:                                      ; preds = %if.else
  %incdec.ptr.i219 = getelementptr inbounds i8* %10, i64 1
  store i8 4, i8* %10, align 1, !tbaa !1
  %incdec.ptr2.i220 = getelementptr inbounds i8* %10, i64 2
  store i8 0, i8* %incdec.ptr.i219, align 1, !tbaa !1
  %incdec.ptr3.i221 = getelementptr inbounds i8* %10, i64 3
  store i8 0, i8* %incdec.ptr2.i220, align 1, !tbaa !1
  store i8* %incdec.ptr3.i221, i8** %regcode.i202, align 8, !tbaa !0
  %.pre346 = load i8** %regparse, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.end.i222, %if.then.i218, %regnode.exit212
  %15 = phi i8* [ %incdec.ptr3.i221, %if.end.i222 ], [ %arraydecay.i203, %if.then.i218 ], [ %12, %regnode.exit212 ]
  %16 = phi i8* [ %.pre346, %if.end.i222 ], [ %incdec.ptr, %if.then.i218 ], [ %incdec.ptr11, %regnode.exit212 ]
  %17 = load i8* %16, align 1, !tbaa !1
  switch i8 %17, label %while.cond.preheader [
    i8 93, label %if.then19
    i8 45, label %if.then19
  ]

if.then19:                                        ; preds = %if.end, %if.end
  %cmp.i226 = icmp eq i8* %15, %arraydecay.i203
  br i1 %cmp.i226, label %if.else.i, label %if.then.i228

if.then.i228:                                     ; preds = %if.then19
  %incdec.ptr.i227 = getelementptr inbounds i8* %15, i64 1
  store i8* %incdec.ptr.i227, i8** %regcode.i202, align 8, !tbaa !0
  store i8 %17, i8* %15, align 1, !tbaa !1
  %.pre347 = load i8** %regparse, align 8, !tbaa !0
  br label %regc.exit

if.else.i:                                        ; preds = %if.then19
  %regsize.i229 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 4
  %18 = load i64* %regsize.i229, align 8, !tbaa !4
  %inc.i = add nsw i64 %18, 1
  store i64 %inc.i, i64* %regsize.i229, align 8, !tbaa !4
  br label %regc.exit

regc.exit:                                        ; preds = %if.then.i228, %if.else.i
  %19 = phi i8* [ %.pre347, %if.then.i228 ], [ %16, %if.else.i ]
  %incdec.ptr21 = getelementptr inbounds i8* %19, i64 1
  store i8* %incdec.ptr21, i8** %regparse, align 8, !tbaa !0
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %regc.exit, %if.end
  %20 = phi i8* [ %incdec.ptr21, %regc.exit ], [ %16, %if.end ]
  %regsize.i237 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 4
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %while.cond.preheader
  %21 = phi i8* [ %.pre348, %while.cond.backedge ], [ %20, %while.cond.preheader ]
  %incdec.ptr24 = getelementptr inbounds i8* %21, i64 1
  store i8* %incdec.ptr24, i8** %regparse, align 8, !tbaa !0
  %22 = load i8* %21, align 1, !tbaa !1
  switch i8 %22, label %if.then32 [
    i8 0, label %while.end
    i8 93, label %while.end
    i8 45, label %if.else33
  ]

if.then32:                                        ; preds = %while.cond
  %23 = load i8** %regcode.i202, align 8, !tbaa !0
  %cmp.i233 = icmp eq i8* %23, %arraydecay.i203
  br i1 %cmp.i233, label %if.else.i239, label %if.then.i236

if.then.i236:                                     ; preds = %if.then32
  %incdec.ptr.i235 = getelementptr inbounds i8* %23, i64 1
  store i8* %incdec.ptr.i235, i8** %regcode.i202, align 8, !tbaa !0
  store i8 %22, i8* %23, align 1, !tbaa !1
  br label %while.cond.backedge

if.else.i239:                                     ; preds = %if.then32
  %24 = load i64* %regsize.i237, align 8, !tbaa !4
  %inc.i238 = add nsw i64 %24, 1
  store i64 %inc.i238, i64* %regsize.i237, align 8, !tbaa !4
  br label %while.cond.backedge

if.else33:                                        ; preds = %while.cond
  %25 = load i8* %incdec.ptr24, align 1, !tbaa !1
  switch i8 %25, label %if.else42 [
    i8 93, label %if.then41
    i8 0, label %if.then41
  ]

if.then41:                                        ; preds = %if.else33, %if.else33
  %26 = load i8** %regcode.i202, align 8, !tbaa !0
  %cmp.i244 = icmp eq i8* %26, %arraydecay.i203
  br i1 %cmp.i244, label %if.else.i249, label %if.then.i246

if.then.i246:                                     ; preds = %if.then41
  %incdec.ptr.i245 = getelementptr inbounds i8* %26, i64 1
  store i8* %incdec.ptr.i245, i8** %regcode.i202, align 8, !tbaa !0
  store i8 45, i8* %26, align 1, !tbaa !1
  br label %while.cond.backedge

if.else.i249:                                     ; preds = %if.then41
  %27 = load i64* %regsize.i237, align 8, !tbaa !4
  %inc.i248 = add nsw i64 %27, 1
  store i64 %inc.i248, i64* %regsize.i237, align 8, !tbaa !4
  br label %while.cond.backedge

if.else42:                                        ; preds = %if.else33
  %add.ptr = getelementptr inbounds i8* %21, i64 -1
  %28 = load i8* %add.ptr, align 1, !tbaa !1
  %conv46 = zext i8 %25 to i32
  %cmp47 = icmp ugt i8 %28, %25
  br i1 %cmp47, label %if.then49, label %if.end50

if.then49:                                        ; preds = %if.else42
  call void @sqd_regerror(i8* getelementptr inbounds ([17 x i8]* @.str21, i64 0, i64 0)) #10
  unreachable

if.end50:                                         ; preds = %if.else42
  %cmp51340 = icmp ult i8 %28, %25
  br i1 %cmp51340, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end50
  %conv44 = zext i8 %28 to i32
  br label %for.body

for.body:                                         ; preds = %for.cond.backedge, %for.body.lr.ph
  %range.0341.in = phi i32 [ %conv44, %for.body.lr.ph ], [ %range.0341, %for.cond.backedge ]
  %range.0341 = add nsw i32 %range.0341.in, 1
  %29 = load i8** %regcode.i202, align 8, !tbaa !0
  %cmp.i254 = icmp eq i8* %29, %arraydecay.i203
  br i1 %cmp.i254, label %if.else.i260, label %if.then.i257

if.then.i257:                                     ; preds = %for.body
  %b.i255 = trunc i32 %range.0341 to i8
  %incdec.ptr.i256 = getelementptr inbounds i8* %29, i64 1
  store i8* %incdec.ptr.i256, i8** %regcode.i202, align 8, !tbaa !0
  store i8 %b.i255, i8* %29, align 1, !tbaa !1
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %if.then.i257, %if.else.i260
  %cmp51 = icmp slt i32 %range.0341, %conv46
  br i1 %cmp51, label %for.body, label %for.cond.for.end_crit_edge

if.else.i260:                                     ; preds = %for.body
  %30 = load i64* %regsize.i237, align 8, !tbaa !4
  %inc.i259 = add nsw i64 %30, 1
  store i64 %inc.i259, i64* %regsize.i237, align 8, !tbaa !4
  br label %for.cond.backedge

for.cond.for.end_crit_edge:                       ; preds = %for.cond.backedge
  %.pre349 = load i8** %regparse, align 8, !tbaa !0
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %if.end50
  %31 = phi i8* [ %.pre349, %for.cond.for.end_crit_edge ], [ %incdec.ptr24, %if.end50 ]
  %incdec.ptr55 = getelementptr inbounds i8* %31, i64 1
  store i8* %incdec.ptr55, i8** %regparse, align 8, !tbaa !0
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %for.end, %if.then.i236, %if.else.i239, %if.then.i246, %if.else.i249
  %.pre348 = load i8** %regparse, align 8, !tbaa !0
  br label %while.cond

while.end:                                        ; preds = %while.cond, %while.cond
  %32 = load i8** %regcode.i202, align 8, !tbaa !0
  %cmp.i265 = icmp eq i8* %32, %arraydecay.i203
  br i1 %cmp.i265, label %if.else.i270, label %if.then.i267

if.then.i267:                                     ; preds = %while.end
  %incdec.ptr.i266 = getelementptr inbounds i8* %32, i64 1
  store i8* %incdec.ptr.i266, i8** %regcode.i202, align 8, !tbaa !0
  store i8 0, i8* %32, align 1, !tbaa !1
  br label %regc.exit272

if.else.i270:                                     ; preds = %while.end
  %33 = load i64* %regsize.i237, align 8, !tbaa !4
  %inc.i269 = add nsw i64 %33, 1
  store i64 %inc.i269, i64* %regsize.i237, align 8, !tbaa !4
  br label %regc.exit272

regc.exit272:                                     ; preds = %if.then.i267, %if.else.i270
  %cmp58 = icmp eq i8 %22, 93
  br i1 %cmp58, label %if.end61, label %if.then60

if.then60:                                        ; preds = %regc.exit272
  call void @sqd_regerror(i8* getelementptr inbounds ([13 x i8]* @.str22, i64 0, i64 0)) #10
  unreachable

if.end61:                                         ; preds = %regc.exit272
  %34 = load i32* %flagp, align 4, !tbaa !3
  %or62 = or i32 %34, 3
  store i32 %or62, i32* %flagp, align 4, !tbaa !3
  br label %return

sw.bb63:                                          ; preds = %entry
  %call64 = call fastcc i8* @reg(%struct.comp* %cp, i32 1, i32* %flags) #10
  %cmp65 = icmp eq i8* %call64, null
  br i1 %cmp65, label %return, label %if.end68

if.end68:                                         ; preds = %sw.bb63
  %35 = load i32* %flags, align 4, !tbaa !3
  %and = and i32 %35, 5
  %36 = load i32* %flagp, align 4, !tbaa !3
  %or69 = or i32 %36, %and
  store i32 %or69, i32* %flagp, align 4, !tbaa !3
  br label %return

sw.bb70:                                          ; preds = %entry, %entry, %entry
  call void @sqd_regerror(i8* getelementptr inbounds ([32 x i8]* @.str23, i64 0, i64 0)) #10
  unreachable

sw.bb71:                                          ; preds = %entry, %entry, %entry
  call void @sqd_regerror(i8* getelementptr inbounds ([20 x i8]* @.str24, i64 0, i64 0)) #10
  unreachable

sw.bb72:                                          ; preds = %entry
  %37 = load i8* %incdec.ptr, align 1, !tbaa !1
  %cmp75 = icmp eq i8 %37, 0
  br i1 %cmp75, label %if.then77, label %if.end78

if.then77:                                        ; preds = %sw.bb72
  call void @sqd_regerror(i8* getelementptr inbounds ([11 x i8]* @.str25, i64 0, i64 0)) #10
  unreachable

if.end78:                                         ; preds = %sw.bb72
  %regcode.i273 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 2
  %38 = load i8** %regcode.i273, align 8, !tbaa !0
  %arraydecay.i274 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 3, i64 0
  %cmp.i275 = icmp eq i8* %38, %arraydecay.i274
  br i1 %cmp.i275, label %regnode.exit283.thread, label %regnode.exit283

regnode.exit283.thread:                           ; preds = %if.end78
  %regsize.i276 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 4
  %39 = load i64* %regsize.i276, align 8, !tbaa !4
  %add.i277 = add nsw i64 %39, 3
  store i64 %add.i277, i64* %regsize.i276, align 8, !tbaa !4
  %incdec.ptr81355 = getelementptr inbounds i8* %0, i64 2
  store i8* %incdec.ptr81355, i8** %regparse, align 8, !tbaa !0
  br label %regc.exit294.thread

regnode.exit283:                                  ; preds = %if.end78
  %incdec.ptr.i279 = getelementptr inbounds i8* %38, i64 1
  store i8 8, i8* %38, align 1, !tbaa !1
  %incdec.ptr2.i280 = getelementptr inbounds i8* %38, i64 2
  store i8 0, i8* %incdec.ptr.i279, align 1, !tbaa !1
  %incdec.ptr3.i281 = getelementptr inbounds i8* %38, i64 3
  store i8 0, i8* %incdec.ptr2.i280, align 1, !tbaa !1
  store i8* %incdec.ptr3.i281, i8** %regcode.i273, align 8, !tbaa !0
  %.pre350 = load i8** %regparse, align 8, !tbaa !0
  %incdec.ptr81 = getelementptr inbounds i8* %.pre350, i64 1
  store i8* %incdec.ptr81, i8** %regparse, align 8, !tbaa !0
  %cmp.i286 = icmp eq i8* %incdec.ptr3.i281, %arraydecay.i274
  br i1 %cmp.i286, label %regc.exit294.thread, label %regc.exit294

regc.exit294.thread:                              ; preds = %regnode.exit283, %regnode.exit283.thread
  %regsize.i290 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 4
  %40 = load i64* %regsize.i290, align 8, !tbaa !4
  %inc.i291 = add nsw i64 %40, 1
  store i64 %inc.i291, i64* %regsize.i290, align 8, !tbaa !4
  br label %if.else.i302

regc.exit294:                                     ; preds = %regnode.exit283
  %41 = load i8* %.pre350, align 1, !tbaa !1
  %incdec.ptr.i288 = getelementptr inbounds i8* %38, i64 4
  store i8* %incdec.ptr.i288, i8** %regcode.i273, align 8, !tbaa !0
  store i8 %41, i8* %incdec.ptr3.i281, align 1, !tbaa !1
  %.pre351 = load i8** %regcode.i273, align 8, !tbaa !0
  %cmp.i297 = icmp eq i8* %.pre351, %arraydecay.i274
  br i1 %cmp.i297, label %if.else.i302, label %if.then.i299

if.then.i299:                                     ; preds = %regc.exit294
  %incdec.ptr.i298 = getelementptr inbounds i8* %.pre351, i64 1
  store i8* %incdec.ptr.i298, i8** %regcode.i273, align 8, !tbaa !0
  store i8 0, i8* %.pre351, align 1, !tbaa !1
  br label %regc.exit304

if.else.i302:                                     ; preds = %regc.exit294.thread, %regc.exit294
  %regsize.i300 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 4
  %42 = load i64* %regsize.i300, align 8, !tbaa !4
  %inc.i301 = add nsw i64 %42, 1
  store i64 %inc.i301, i64* %regsize.i300, align 8, !tbaa !4
  br label %regc.exit304

regc.exit304:                                     ; preds = %if.then.i299, %if.else.i302
  %43 = load i32* %flagp, align 4, !tbaa !3
  %or83 = or i32 %43, 3
  store i32 %or83, i32* %flagp, align 4, !tbaa !3
  br label %return

sw.default:                                       ; preds = %entry
  store i8* %0, i8** %regparse, align 8, !tbaa !0
  %call87 = call i64 @strcspn(i8* %0, i8* getelementptr inbounds ([12 x i8]* @.str26, i64 0, i64 0)) #11
  %cmp88 = icmp eq i64 %call87, 0
  br i1 %cmp88, label %if.then90, label %if.end91

if.then90:                                        ; preds = %sw.default
  call void @sqd_regerror(i8* getelementptr inbounds ([26 x i8]* @.str27, i64 0, i64 0)) #10
  unreachable

if.end91:                                         ; preds = %sw.default
  %cmp94 = icmp ugt i64 %call87, 1
  br i1 %cmp94, label %land.lhs.true, label %if.end108

land.lhs.true:                                    ; preds = %if.end91
  %add.ptr93 = getelementptr inbounds i8* %0, i64 %call87
  %44 = load i8* %add.ptr93, align 1, !tbaa !1
  switch i8 %44, label %if.end108 [
    i8 42, label %if.then107
    i8 43, label %if.then107
    i8 63, label %if.then107
  ]

if.then107:                                       ; preds = %land.lhs.true, %land.lhs.true, %land.lhs.true
  %dec = add i64 %call87, -1
  br label %if.end108

if.end108:                                        ; preds = %land.lhs.true, %if.then107, %if.end91
  %len.0 = phi i64 [ %dec, %if.then107 ], [ 1, %if.end91 ], [ %call87, %land.lhs.true ]
  %cmp110 = icmp eq i64 %len.0, 1
  %or113.or109.v = select i1 %cmp110, i32 3, i32 1
  store i32 %or113.or109.v, i32* %flagp, align 4, !tbaa !3
  %regcode.i305 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 2
  %45 = load i8** %regcode.i305, align 8, !tbaa !0
  %arraydecay.i306 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 3, i64 0
  %cmp.i307 = icmp eq i8* %45, %arraydecay.i306
  br i1 %cmp.i307, label %if.then.i310, label %if.end.i314

if.then.i310:                                     ; preds = %if.end108
  %regsize.i308 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 4
  %46 = load i64* %regsize.i308, align 8, !tbaa !4
  %add.i309 = add nsw i64 %46, 3
  store i64 %add.i309, i64* %regsize.i308, align 8, !tbaa !4
  br label %for.cond116.preheader

if.end.i314:                                      ; preds = %if.end108
  %incdec.ptr.i311 = getelementptr inbounds i8* %45, i64 1
  store i8 8, i8* %45, align 1, !tbaa !1
  %incdec.ptr2.i312 = getelementptr inbounds i8* %45, i64 2
  store i8 0, i8* %incdec.ptr.i311, align 1, !tbaa !1
  %incdec.ptr3.i313 = getelementptr inbounds i8* %45, i64 3
  store i8 0, i8* %incdec.ptr2.i312, align 1, !tbaa !1
  store i8* %incdec.ptr3.i313, i8** %regcode.i305, align 8, !tbaa !0
  br label %for.cond116.preheader

for.cond116.preheader:                            ; preds = %if.then.i310, %if.end.i314
  %47 = phi i8* [ %45, %if.then.i310 ], [ %incdec.ptr3.i313, %if.end.i314 ]
  %cmp117337 = icmp eq i64 %len.0, 0
  br i1 %cmp117337, label %for.end125, label %for.body119.lr.ph

for.body119.lr.ph:                                ; preds = %for.cond116.preheader
  %regsize.i322 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 4
  br label %for.body119

for.body119:                                      ; preds = %regc.exit326, %for.body119.lr.ph
  %48 = phi i8* [ %47, %for.body119.lr.ph ], [ %.pre, %regc.exit326 ]
  %len.1338 = phi i64 [ %len.0, %for.body119.lr.ph ], [ %dec124, %regc.exit326 ]
  %49 = load i8** %regparse, align 8, !tbaa !0
  %incdec.ptr121 = getelementptr inbounds i8* %49, i64 1
  store i8* %incdec.ptr121, i8** %regparse, align 8, !tbaa !0
  %cmp.i318 = icmp eq i8* %48, %arraydecay.i306
  br i1 %cmp.i318, label %if.else.i324, label %if.then.i321

if.then.i321:                                     ; preds = %for.body119
  %50 = load i8* %49, align 1, !tbaa !1
  %incdec.ptr.i320 = getelementptr inbounds i8* %48, i64 1
  store i8* %incdec.ptr.i320, i8** %regcode.i305, align 8, !tbaa !0
  store i8 %50, i8* %48, align 1, !tbaa !1
  br label %regc.exit326

if.else.i324:                                     ; preds = %for.body119
  %51 = load i64* %regsize.i322, align 8, !tbaa !4
  %inc.i323 = add nsw i64 %51, 1
  store i64 %inc.i323, i64* %regsize.i322, align 8, !tbaa !4
  br label %regc.exit326

regc.exit326:                                     ; preds = %if.then.i321, %if.else.i324
  %dec124 = add i64 %len.1338, -1
  %cmp117 = icmp eq i64 %dec124, 0
  %.pre = load i8** %regcode.i305, align 8, !tbaa !0
  br i1 %cmp117, label %for.end125, label %for.body119

for.end125:                                       ; preds = %regc.exit326, %for.cond116.preheader
  %52 = phi i8* [ %47, %for.cond116.preheader ], [ %.pre, %regc.exit326 ]
  %cmp.i329 = icmp eq i8* %52, %arraydecay.i306
  br i1 %cmp.i329, label %if.else.i334, label %if.then.i331

if.then.i331:                                     ; preds = %for.end125
  %incdec.ptr.i330 = getelementptr inbounds i8* %52, i64 1
  store i8* %incdec.ptr.i330, i8** %regcode.i305, align 8, !tbaa !0
  store i8 0, i8* %52, align 1, !tbaa !1
  br label %return

if.else.i334:                                     ; preds = %for.end125
  %regsize.i332 = getelementptr inbounds %struct.comp* %cp, i64 0, i32 4
  %53 = load i64* %regsize.i332, align 8, !tbaa !4
  %inc.i333 = add nsw i64 %53, 1
  store i64 %inc.i333, i64* %regsize.i332, align 8, !tbaa !4
  br label %return

return:                                           ; preds = %if.else.i334, %if.then.i331, %if.end.i189, %if.then.i185, %if.end.i, %if.then.i, %regnode.exit201, %if.end61, %if.end68, %regc.exit304, %sw.bb63
  %retval.0 = phi i8* [ null, %sw.bb63 ], [ %38, %regc.exit304 ], [ %call64, %if.end68 ], [ %10, %if.end61 ], [ %6, %regnode.exit201 ], [ %arraydecay.i, %if.then.i ], [ %2, %if.end.i ], [ %arraydecay.i181, %if.then.i185 ], [ %4, %if.end.i189 ], [ %45, %if.then.i331 ], [ %45, %if.else.i334 ]
  ret i8* %retval.0
}
