define %struct.sqd_regexp* @sqd_regcomp(i8* %exp) #0 {
  %flags = alloca i32, align 4
  %co = alloca %struct.comp, align 8
  tail call void @llvm.dbg.value(metadata i8* %exp, i64 0, metadata !55, metadata !274), !dbg !331
  %1 = bitcast %struct.comp* %co to i8*, !dbg !332
  call void @llvm.lifetime.start(i64 40, i8* %1) #4, !dbg !332
  %2 = icmp eq i8* %exp, null, !dbg !333
  br i1 %2, label %3, label %regc.exit, !dbg !335

; <label>:3                                       ; preds = %0
  tail call void @sqd_regerror(i8* getelementptr inbounds ([29 x i8]* @.str3, i64 0, i64 0)) #9, !dbg !336
  unreachable

regc.exit:                                        ; preds = %0
  %4 = getelementptr inbounds %struct.comp* %co, i64 0, i32 0, !dbg !338
  store i8* %exp, i8** %4, align 8, !dbg !339, !tbaa !340
  %5 = getelementptr inbounds %struct.comp* %co, i64 0, i32 1, !dbg !344
  store i32 1, i32* %5, align 8, !dbg !345, !tbaa !346
  %6 = getelementptr inbounds %struct.comp* %co, i64 0, i32 4, !dbg !347
  %7 = getelementptr inbounds %struct.comp* %co, i64 0, i32 3, i64 0, !dbg !348
  store i8 9, i8* %7, align 8, !dbg !349, !tbaa !325
  %8 = getelementptr inbounds %struct.comp* %co, i64 0, i32 3, i64 2, !dbg !350
  store i8 0, i8* %8, align 2, !dbg !351, !tbaa !325
  %9 = getelementptr inbounds %struct.comp* %co, i64 0, i32 3, i64 1, !dbg !352
  store i8 0, i8* %9, align 1, !dbg !353, !tbaa !325
  %10 = getelementptr inbounds %struct.comp* %co, i64 0, i32 2, !dbg !354
  store i8* %7, i8** %10, align 8, !dbg !355, !tbaa !356
  call void @llvm.dbg.value(metadata %struct.comp* %co, i64 0, metadata !59, metadata !274), !dbg !357
  tail call void @llvm.dbg.value(metadata %struct.comp* %co, i64 0, metadata !197, metadata !274), !dbg !358
  store i64 1, i64* %6, align 8, !dbg !360, !tbaa !362
  call void @llvm.dbg.value(metadata i32* %flags, i64 0, metadata !58, metadata !274), !dbg !363
  call void @llvm.dbg.value(metadata %struct.comp* %co, i64 0, metadata !59, metadata !274), !dbg !357
  %11 = call fastcc i8* @reg(%struct.comp* %co, i32 0, i32* %flags) #9, !dbg !364
  %12 = icmp eq i8* %11, null, !dbg !366
  br i1 %12, label %82, label %13, !dbg !367

; <label>:13                                      ; preds = %regc.exit
  %14 = load i64* %6, align 8, !dbg !368, !tbaa !362
  %15 = icmp sgt i64 %14, 32766, !dbg !370
  br i1 %15, label %16, label %17, !dbg !371

; <label>:16                                      ; preds = %13
  call void @sqd_regerror(i8* getelementptr inbounds ([15 x i8]* @.str4, i64 0, i64 0)) #9, !dbg !372
  unreachable

; <label>:17                                      ; preds = %13
  %18 = add i64 %14, 184, !dbg !374
  %19 = call i8* @malloc(i64 %18) #8, !dbg !375
  %20 = bitcast i8* %19 to %struct.sqd_regexp*, !dbg !376
  call void @llvm.dbg.value(metadata %struct.sqd_regexp* %20, i64 0, metadata !56, metadata !274), !dbg !377
  %21 = icmp eq i8* %19, null, !dbg !378
  br i1 %21, label %22, label %regc.exit4, !dbg !380

; <label>:22                                      ; preds = %17
  call void @sqd_regerror(i8* getelementptr inbounds ([13 x i8]* @.str5, i64 0, i64 0)) #9, !dbg !381
  unreachable

regc.exit4:                                       ; preds = %17
  store i8* %exp, i8** %4, align 8, !dbg !383, !tbaa !340
  store i32 1, i32* %5, align 8, !dbg !384, !tbaa !346
  %23 = getelementptr inbounds i8* %19, i64 180, !dbg !385
  call void @llvm.dbg.value(metadata %struct.comp* %co, i64 0, metadata !59, metadata !274), !dbg !357
  tail call void @llvm.dbg.value(metadata %struct.comp* %co, i64 0, metadata !197, metadata !274), !dbg !386
  %24 = getelementptr inbounds i8* %19, i64 181, !dbg !388
  store i8* %24, i8** %10, align 8, !dbg !388, !tbaa !356
  store i8 -100, i8* %23, align 1, !dbg !389, !tbaa !325
  call void @llvm.dbg.value(metadata i32* %flags, i64 0, metadata !58, metadata !274), !dbg !363
  call void @llvm.dbg.value(metadata %struct.comp* %co, i64 0, metadata !59, metadata !274), !dbg !357
  %25 = call fastcc i8* @reg(%struct.comp* %co, i32 0, i32* %flags) #9, !dbg !390
  %26 = icmp eq i8* %25, null, !dbg !392
  br i1 %26, label %82, label %regnext.exit3, !dbg !393

regnext.exit3:                                    ; preds = %regc.exit4
  %27 = getelementptr inbounds i8* %19, i64 160, !dbg !394
  store i8 0, i8* %27, align 1, !dbg !395, !tbaa !396
  %28 = getelementptr inbounds i8* %19, i64 161, !dbg !398
  store i8 0, i8* %28, align 1, !dbg !399, !tbaa !400
  %29 = getelementptr inbounds i8* %19, i64 168, !dbg !401
  %30 = bitcast i8* %29 to i8**, !dbg !401
  store i8* null, i8** %30, align 8, !dbg !402, !tbaa !403
  %31 = getelementptr inbounds i8* %19, i64 176, !dbg !404
  %32 = bitcast i8* %31 to i32*, !dbg !404
  store i32 0, i32* %32, align 4, !dbg !405, !tbaa !406
  call void @llvm.dbg.value(metadata i8* %24, i64 0, metadata !57, metadata !274), !dbg !407
  tail call void @llvm.dbg.value(metadata i8* %24, i64 0, metadata !253, metadata !274), !dbg !408
  %33 = getelementptr inbounds i8* %19, i64 182, !dbg !410
  %34 = load i8* %33, align 1, !dbg !410, !tbaa !325
  %35 = zext i8 %34 to i64, !dbg !410
  %36 = shl nuw nsw i64 %35, 8, !dbg !410
  %37 = and i64 %36, 32512, !dbg !410
  %38 = getelementptr inbounds i8* %19, i64 183, !dbg !410
  %39 = load i8* %38, align 1, !dbg !410, !tbaa !325
  %40 = zext i8 %39 to i64, !dbg !410
  %41 = or i64 %37, %40, !dbg !410
  %42 = load i8* %24, align 1, !dbg !411, !tbaa !325
  %43 = icmp eq i8 %42, 7, !dbg !412
  %44 = sub nsw i64 0, %41, !dbg !413
  %.sink.i1 = select i1 %43, i64 %44, i64 %41, !dbg !414
  %.sum = add nsw i64 %.sink.i1, 181, !dbg !413
  %45 = getelementptr inbounds i8* %19, i64 %.sum, !dbg !413
  %46 = load i8* %45, align 1, !dbg !415, !tbaa !325
  %47 = icmp eq i8 %46, 0, !dbg !416
  br i1 %47, label %48, label %82, !dbg !417

; <label>:48                                      ; preds = %regnext.exit3
  %49 = getelementptr inbounds i8* %19, i64 184, !dbg !418
  call void @llvm.dbg.value(metadata i8* %49, i64 0, metadata !57, metadata !274), !dbg !407
  %50 = load i8* %49, align 1, !dbg !419, !tbaa !325
  switch i8 %50, label %55 [
    i8 8, label %51
    i8 1, label %54
  ], !dbg !421

; <label>:51                                      ; preds = %48
  %52 = getelementptr inbounds i8* %19, i64 187, !dbg !422
  %53 = load i8* %52, align 1, !dbg !423, !tbaa !325
  store i8 %53, i8* %27, align 1, !dbg !424, !tbaa !396
  br label %55, !dbg !425

; <label>:54                                      ; preds = %48
  store i8 1, i8* %28, align 1, !dbg !426, !tbaa !400
  br label %55, !dbg !428

; <label>:55                                      ; preds = %48, %54, %51
  call void @llvm.dbg.value(metadata i32* %flags, i64 0, metadata !58, metadata !274), !dbg !363
  %56 = load i32* %flags, align 4, !dbg !429, !tbaa !430
  %57 = and i32 %56, 4, !dbg !431
  %58 = icmp eq i32 %57, 0, !dbg !431
  br i1 %58, label %82, label %regnext.exit.preheader, !dbg !432

regnext.exit.preheader:                           ; preds = %55, %regnext.exit.backedge._crit_edge
  %59 = phi i8 [ %.pre, %regnext.exit.backedge._crit_edge ], [ %50, %55 ]
  %len.07 = phi i64 [ %len.1, %regnext.exit.backedge._crit_edge ], [ 0, %55 ]
  %longest.06 = phi i8* [ %longest.1, %regnext.exit.backedge._crit_edge ], [ null, %55 ]
  %scan.05 = phi i8* [ %79, %regnext.exit.backedge._crit_edge ], [ %49, %55 ]
  %60 = icmp eq i8 %59, 8, !dbg !433
  br i1 %60, label %61, label %65, !dbg !437

; <label>:61                                      ; preds = %regnext.exit.preheader
  %62 = getelementptr inbounds i8* %scan.05, i64 3, !dbg !438
  %63 = call i64 @strlen(i8* %62) #8, !dbg !439
  %64 = icmp ult i64 %63, %len.07, !dbg !440
  call void @llvm.dbg.value(metadata i8* %62, i64 0, metadata !71, metadata !274), !dbg !441
  call void @llvm.dbg.value(metadata i64 %63, i64 0, metadata !76, metadata !274), !dbg !442
  %longest.0. = select i1 %64, i8* %longest.06, i8* %62, !dbg !443
  %len.0. = select i1 %64, i64 %len.07, i64 %63, !dbg !443
  br label %65, !dbg !443

; <label>:65                                      ; preds = %61, %regnext.exit.preheader
  %longest.1 = phi i8* [ %longest.06, %regnext.exit.preheader ], [ %longest.0., %61 ]
  %len.1 = phi i64 [ %len.07, %regnext.exit.preheader ], [ %len.0., %61 ]
  tail call void @llvm.dbg.value(metadata i8* %79, i64 0, metadata !253, metadata !274), !dbg !444
  %66 = getelementptr inbounds i8* %scan.05, i64 1, !dbg !446
  %67 = load i8* %66, align 1, !dbg !446, !tbaa !325
  %68 = zext i8 %67 to i32, !dbg !446
  %69 = shl nuw nsw i32 %68, 8, !dbg !446
  %70 = and i32 %69, 32512, !dbg !446
  %71 = getelementptr inbounds i8* %scan.05, i64 2, !dbg !446
  %72 = load i8* %71, align 1, !dbg !446, !tbaa !325
  %73 = zext i8 %72 to i32, !dbg !446
  %74 = or i32 %70, %73, !dbg !446
  tail call void @llvm.dbg.value(metadata i32 %74, i64 0, metadata !254, metadata !274), !dbg !447
  %75 = icmp eq i32 %74, 0, !dbg !448
  br i1 %75, label %regnext.exit.backedge.thread, label %regnext.exit.backedge, !dbg !450

regnext.exit.backedge:                            ; preds = %65
  %76 = icmp eq i8 %59, 7, !dbg !451
  %77 = zext i32 %74 to i64, !dbg !452
  %78 = sub nsw i64 0, %77, !dbg !452
  %.sink.i = select i1 %76, i64 %78, i64 %77, !dbg !453
  %79 = getelementptr inbounds i8* %scan.05, i64 %.sink.i, !dbg !452
  %80 = icmp eq i8* %79, null, !dbg !454
  br i1 %80, label %regnext.exit.backedge.thread, label %regnext.exit.backedge._crit_edge, !dbg !455

regnext.exit.backedge._crit_edge:                 ; preds = %regnext.exit.backedge
  %.pre = load i8* %79, align 1, !dbg !456, !tbaa !325
  br label %regnext.exit.preheader, !dbg !455

regnext.exit.backedge.thread:                     ; preds = %65, %regnext.exit.backedge
  store i8* %longest.1, i8** %30, align 8, !dbg !457, !tbaa !403
  %81 = trunc i64 %len.1 to i32, !dbg !458
  store i32 %81, i32* %32, align 4, !dbg !459, !tbaa !406
  br label %82, !dbg !460

; <label>:82                                      ; preds = %regnext.exit3, %regnext.exit.backedge.thread, %55, %regc.exit4, %regc.exit
  %.0 = phi %struct.sqd_regexp* [ null, %regc.exit ], [ null, %regc.exit4 ], [ %20, %55 ], [ %20, %regnext.exit.backedge.thread ], [ %20, %regnext.exit3 ]
  call void @llvm.lifetime.end(i64 40, i8* %1) #4, !dbg !461
  ret %struct.sqd_regexp* %.0, !dbg !461
}
