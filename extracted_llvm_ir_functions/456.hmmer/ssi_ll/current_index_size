define internal fastcc i64 @current_index_size(%struct.ssiindex_s* nocapture %g) #6 {
entry:
  %flen = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 8
  %0 = load i32* %flen, align 4, !tbaa !4
  %add = add i32 %0, 16
  %conv = zext i32 %add to i64
  %smode = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 0
  %1 = load i32* %smode, align 4, !tbaa !4
  %cmp = icmp eq i32 %1, 1
  %plen = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 11
  %2 = load i32* %plen, align 4, !tbaa !4
  %cond.v = select i1 %cmp, i32 22, i32 14
  %cond = add i32 %cond.v, %2
  %conv5 = zext i32 %cond to i64
  %slen = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 16
  %3 = load i32* %slen, align 4, !tbaa !4
  %add7 = add i32 %3, %2
  %conv8 = zext i32 %add7 to i64
  %nfiles = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 9
  %4 = load i16* %nfiles, align 2, !tbaa !3
  %conv9 = zext i16 %4 to i64
  %mul = mul i64 %conv9, %conv
  %add10 = add i64 %mul, 66
  %nprimary = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 12
  %5 = load i32* %nprimary, align 4, !tbaa !4
  %conv11 = zext i32 %5 to i64
  %mul12 = mul i64 %conv11, %conv5
  %add13 = add i64 %add10, %mul12
  %nsecondary = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 17
  %6 = load i32* %nsecondary, align 4, !tbaa !4
  %conv14 = zext i32 %6 to i64
  %mul15 = mul i64 %conv14, %conv8
  %add16 = add i64 %add13, %mul15
  %div = lshr i64 %add16, 20
  ret i64 %div
}
