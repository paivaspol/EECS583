define internal fastcc i64 @current_index_size(%struct.ssiindex_s* nocapture %g) #7 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.ssiindex_s* %g}, i64 0, metadata !360), !dbg !874
  %flen = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 8, !dbg !875
  %0 = load i32* %flen, align 4, !dbg !875, !tbaa !521
  %add = add i32 %0, 16, !dbg !875
  %conv = zext i32 %add to i64, !dbg !875
  tail call void @llvm.dbg.value(metadata !{i64 %conv}, i64 0, metadata !361), !dbg !875
  %smode = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 0, !dbg !876
  %1 = load i32* %smode, align 4, !dbg !876, !tbaa !521
  %cmp = icmp eq i32 %1, 1, !dbg !876
  %plen = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 11, !dbg !876
  %2 = load i32* %plen, align 4, !dbg !876, !tbaa !521
  %cond.v = select i1 %cmp, i32 22, i32 14, !dbg !876
  %cond = add i32 %cond.v, %2, !dbg !876
  %conv5 = zext i32 %cond to i64, !dbg !876
  tail call void @llvm.dbg.value(metadata !{i64 %conv5}, i64 0, metadata !362), !dbg !876
  %slen = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 16, !dbg !877
  %3 = load i32* %slen, align 4, !dbg !877, !tbaa !521
  %add7 = add i32 %3, %2, !dbg !877
  %conv8 = zext i32 %add7 to i64, !dbg !877
  tail call void @llvm.dbg.value(metadata !{i64 %conv8}, i64 0, metadata !363), !dbg !877
  %nfiles = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 9, !dbg !878
  %4 = load i16* %nfiles, align 2, !dbg !878, !tbaa !517
  %conv9 = zext i16 %4 to i64, !dbg !878
  %mul = mul i64 %conv9, %conv, !dbg !878
  %add10 = add i64 %mul, 66, !dbg !878
  %nprimary = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 12, !dbg !878
  %5 = load i32* %nprimary, align 4, !dbg !878, !tbaa !521
  %conv11 = zext i32 %5 to i64, !dbg !878
  %mul12 = mul i64 %conv11, %conv5, !dbg !878
  %add13 = add i64 %add10, %mul12, !dbg !878
  %nsecondary = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 17, !dbg !878
  %6 = load i32* %nsecondary, align 4, !dbg !878, !tbaa !521
  %conv14 = zext i32 %6 to i64, !dbg !878
  %mul15 = mul i64 %conv14, %conv8, !dbg !878
  %add16 = add i64 %add13, %mul15, !dbg !878
  %div = lshr i64 %add16, 20, !dbg !878
  tail call void @llvm.dbg.value(metadata !{i64 %div}, i64 0, metadata !364), !dbg !878
  ret i64 %div, !dbg !879
}
