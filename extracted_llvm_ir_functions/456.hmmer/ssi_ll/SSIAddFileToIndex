define i32 @SSIAddFileToIndex(%struct.ssiindex_s* nocapture %g, i8* %filename, i32 %fmt, i32* nocapture %ret_fh) #0 {
entry:
  %nfiles = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 9
  %0 = load i16* %nfiles, align 2, !tbaa !3
  %cmp = icmp ugt i16 %0, 32766
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call = tail call i64 @strlen(i8* %filename) #10
  %conv2 = trunc i64 %call to i32
  %add = add nsw i32 %conv2, 1
  %flen = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 8
  %1 = load i32* %flen, align 4, !tbaa !4
  %cmp3 = icmp ugt i32 %add, %1
  br i1 %cmp3, label %if.then5, label %if.end8

if.then5:                                         ; preds = %if.end
  store i32 %add, i32* %flen, align 4, !tbaa !4
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %if.end
  %call9 = tail call i8* @FileTail(i8* %filename, i32 0) #8
  %2 = load i16* %nfiles, align 2, !tbaa !3
  %idxprom = zext i16 %2 to i64
  %filenames = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 4
  %3 = load i8*** %filenames, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i8** %3, i64 %idxprom
  store i8* %call9, i8** %arrayidx, align 8, !tbaa !0
  %fileformat = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 5
  %4 = load i32** %fileformat, align 8, !tbaa !0
  %arrayidx13 = getelementptr inbounds i32* %4, i64 %idxprom
  store i32 %fmt, i32* %arrayidx13, align 4, !tbaa !4
  %bpl = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 6
  %5 = load i32** %bpl, align 8, !tbaa !0
  %arrayidx16 = getelementptr inbounds i32* %5, i64 %idxprom
  store i32 0, i32* %arrayidx16, align 4, !tbaa !4
  %rpl = getelementptr inbounds %struct.ssiindex_s* %g, i64 0, i32 7
  %6 = load i32** %rpl, align 8, !tbaa !0
  %arrayidx19 = getelementptr inbounds i32* %6, i64 %idxprom
  store i32 0, i32* %arrayidx19, align 4, !tbaa !4
  %conv21 = zext i16 %2 to i32
  store i32 %conv21, i32* %ret_fh, align 4, !tbaa !4
  %inc = add i16 %2, 1
  store i16 %inc, i16* %nfiles, align 2, !tbaa !3
  %7 = urem i16 %inc, 10
  %cmp25 = icmp eq i16 %7, 0
  br i1 %cmp25, label %if.then27, label %if.end79

if.then27:                                        ; preds = %if.end8
  %conv24 = zext i16 %inc to i64
  %8 = load i8*** %filenames, align 8, !tbaa !0
  %9 = bitcast i8** %8 to i8*
  %add31 = shl nuw nsw i64 %conv24, 3
  %mul = add i64 %add31, 80
  %call33 = tail call i8* @realloc(i8* %9, i64 %mul) #8
  %10 = bitcast i8* %call33 to i8**
  store i8** %10, i8*** %filenames, align 8, !tbaa !0
  %cmp36 = icmp eq i8* %call33, null
  br i1 %cmp36, label %return, label %if.end39

if.end39:                                         ; preds = %if.then27
  %11 = load i32** %fileformat, align 8, !tbaa !0
  %12 = bitcast i32* %11 to i8*
  %13 = load i16* %nfiles, align 2, !tbaa !3
  %conv42 = zext i16 %13 to i64
  %add43 = shl nuw nsw i64 %conv42, 2
  %mul45 = add i64 %add43, 40
  %call46 = tail call i8* @realloc(i8* %12, i64 %mul45) #8
  %14 = bitcast i8* %call46 to i32*
  store i32* %14, i32** %fileformat, align 8, !tbaa !0
  %cmp49 = icmp eq i8* %call46, null
  br i1 %cmp49, label %return, label %if.end52

if.end52:                                         ; preds = %if.end39
  %15 = load i32** %bpl, align 8, !tbaa !0
  %16 = bitcast i32* %15 to i8*
  %17 = load i16* %nfiles, align 2, !tbaa !3
  %conv55 = zext i16 %17 to i64
  %add56 = shl nuw nsw i64 %conv55, 2
  %mul58 = add i64 %add56, 40
  %call59 = tail call i8* @realloc(i8* %16, i64 %mul58) #8
  %18 = bitcast i8* %call59 to i32*
  store i32* %18, i32** %bpl, align 8, !tbaa !0
  %cmp62 = icmp eq i8* %call59, null
  br i1 %cmp62, label %return, label %if.end65

if.end65:                                         ; preds = %if.end52
  %19 = load i32** %rpl, align 8, !tbaa !0
  %20 = bitcast i32* %19 to i8*
  %21 = load i16* %nfiles, align 2, !tbaa !3
  %conv68 = zext i16 %21 to i64
  %add69 = shl nuw nsw i64 %conv68, 2
  %mul71 = add i64 %add69, 40
  %call72 = tail call i8* @realloc(i8* %20, i64 %mul71) #8
  %22 = bitcast i8* %call72 to i32*
  store i32* %22, i32** %rpl, align 8, !tbaa !0
  %cmp75 = icmp eq i8* %call72, null
  br i1 %cmp75, label %return, label %if.end79

if.end79:                                         ; preds = %if.end65, %if.end8
  br label %return

return:                                           ; preds = %if.end65, %if.end52, %if.end39, %if.then27, %entry, %if.end79
  %retval.0 = phi i32 [ 0, %if.end79 ], [ 13, %entry ], [ 3, %if.then27 ], [ 3, %if.end39 ], [ 3, %if.end52 ], [ 3, %if.end65 ]
  ret i32 %retval.0
}
