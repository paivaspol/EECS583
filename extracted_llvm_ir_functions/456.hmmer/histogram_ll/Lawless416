define void @Lawless416(float* nocapture readonly %x, i32* readonly %y, i32 %n, float %lambda, float* nocapture %ret_f, float* nocapture %ret_df) #0 {
  tail call void @llvm.dbg.value(metadata float* %x, i64 0, metadata !288, metadata !372), !dbg !1772
  tail call void @llvm.dbg.value(metadata i32* %y, i64 0, metadata !289, metadata !372), !dbg !1773
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !290, metadata !372), !dbg !1774
  tail call void @llvm.dbg.value(metadata float %lambda, i64 0, metadata !291, metadata !372), !dbg !1775
  tail call void @llvm.dbg.value(metadata float* %ret_f, i64 0, metadata !292, metadata !372), !dbg !1776
  tail call void @llvm.dbg.value(metadata float* %ret_df, i64 0, metadata !293, metadata !372), !dbg !1777
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !299, metadata !372), !dbg !1778
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !296, metadata !372), !dbg !1779
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !297, metadata !372), !dbg !1780
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !295, metadata !372), !dbg !1781
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !294, metadata !372), !dbg !1782
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !300, metadata !372), !dbg !1783
  %1 = icmp sgt i32 %n, 0, !dbg !1784
  br i1 %1, label %.lr.ph, label %._crit_edge15, !dbg !1787

._crit_edge15:                                    ; preds = %0
  %.pre = fpext float %lambda to double, !dbg !1788
  br label %._crit_edge, !dbg !1787

.lr.ph:                                           ; preds = %0
  %2 = icmp eq i32* %y, null, !dbg !1789
  %3 = fpext float %lambda to double, !dbg !1791
  %4 = add i32 %n, -1, !dbg !1787
  br label %5, !dbg !1787

; <label>:5                                       ; preds = %11, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %11 ]
  %total.05 = phi double [ 0.000000e+00, %.lr.ph ], [ %30, %11 ]
  %esum.04 = phi double [ 0.000000e+00, %.lr.ph ], [ %29, %11 ]
  %xsum.03 = phi double [ 0.000000e+00, %.lr.ph ], [ %17, %11 ]
  %6 = phi <2 x double> [ zeroinitializer, %.lr.ph ], [ %27, %11 ]
  br i1 %2, label %11, label %7, !dbg !1792

; <label>:7                                       ; preds = %5
  %8 = getelementptr inbounds i32* %y, i64 %indvars.iv, !dbg !1793
  %9 = load i32* %8, align 4, !dbg !1793, !tbaa !504
  %10 = sitofp i32 %9 to double, !dbg !1794
  br label %11, !dbg !1792

; <label>:11                                      ; preds = %5, %7
  %12 = phi double [ %10, %7 ], [ 1.000000e+00, %5 ], !dbg !1792
  tail call void @llvm.dbg.value(metadata double %12, i64 0, metadata !298, metadata !372), !dbg !1795
  %13 = getelementptr inbounds float* %x, i64 %indvars.iv, !dbg !1796
  %14 = load float* %13, align 4, !dbg !1796, !tbaa !687
  %15 = fpext float %14 to double, !dbg !1796
  %16 = fmul double %12, %15, !dbg !1797
  %17 = fadd double %xsum.03, %16, !dbg !1798
  tail call void @llvm.dbg.value(metadata double %17, i64 0, metadata !297, metadata !372), !dbg !1780
  %18 = fmul double %3, %15, !dbg !1799
  %19 = fsub double -0.000000e+00, %18, !dbg !1799
  %20 = tail call double @exp(double %19) #9, !dbg !1800
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !295, metadata !372), !dbg !1781
  %21 = fmul double %15, %16, !dbg !1801
  %22 = insertelement <2 x double> undef, double %21, i32 0, !dbg !1802
  %23 = insertelement <2 x double> %22, double %16, i32 1, !dbg !1802
  %24 = insertelement <2 x double> undef, double %20, i32 0, !dbg !1802
  %25 = insertelement <2 x double> %24, double %20, i32 1, !dbg !1802
  %26 = fmul <2 x double> %23, %25, !dbg !1802
  %27 = fadd <2 x double> %6, %26, !dbg !1803
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !296, metadata !372), !dbg !1779
  %28 = fmul double %12, %20, !dbg !1804
  %29 = fadd double %esum.04, %28, !dbg !1805
  tail call void @llvm.dbg.value(metadata double %29, i64 0, metadata !294, metadata !372), !dbg !1782
  %30 = fadd double %total.05, %12, !dbg !1806
  tail call void @llvm.dbg.value(metadata double %30, i64 0, metadata !299, metadata !372), !dbg !1778
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1787
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !1787
  %exitcond = icmp eq i32 %lftr.wideiv, %4, !dbg !1787
  br i1 %exitcond, label %._crit_edge, label %5, !dbg !1787

._crit_edge:                                      ; preds = %11, %._crit_edge15
  %.pre-phi = phi double [ %.pre, %._crit_edge15 ], [ %3, %11 ], !dbg !1788
  %total.0.lcssa = phi double [ 0.000000e+00, %._crit_edge15 ], [ %30, %11 ]
  %esum.0.lcssa = phi double [ 0.000000e+00, %._crit_edge15 ], [ %29, %11 ]
  %xsum.0.lcssa = phi double [ 0.000000e+00, %._crit_edge15 ], [ %17, %11 ]
  %31 = phi <2 x double> [ zeroinitializer, %._crit_edge15 ], [ %27, %11 ]
  %32 = fdiv double 1.000000e+00, %.pre-phi, !dbg !1807
  %33 = fdiv double %xsum.0.lcssa, %total.0.lcssa, !dbg !1808
  %34 = fsub double %32, %33, !dbg !1809
  %35 = extractelement <2 x double> %31, i32 1, !dbg !1810
  %36 = fdiv double %35, %esum.0.lcssa, !dbg !1810
  %37 = fadd double %34, %36, !dbg !1811
  %38 = fptrunc double %37 to float, !dbg !1812
  store float %38, float* %ret_f, align 4, !dbg !1813, !tbaa !687
  %39 = fmul double %36, %36, !dbg !1814
  %40 = extractelement <2 x double> %31, i32 0, !dbg !1815
  %41 = fdiv double %40, %esum.0.lcssa, !dbg !1815
  %42 = fsub double %39, %41, !dbg !1816
  %43 = fmul float %lambda, %lambda, !dbg !1817
  %44 = fpext float %43 to double, !dbg !1818
  %45 = fdiv double 1.000000e+00, %44, !dbg !1819
  %46 = fsub double %42, %45, !dbg !1820
  %47 = fptrunc double %46 to float, !dbg !1821
  store float %47, float* %ret_df, align 4, !dbg !1822, !tbaa !687
  ret void, !dbg !1823
}
