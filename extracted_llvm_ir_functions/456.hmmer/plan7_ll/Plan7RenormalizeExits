define void @Plan7RenormalizeExits(%struct.plan7_s* nocapture %hmm) #0 {
entry:
  %M = getelementptr inbounds %struct.plan7_s* %hmm, i64 0, i32 20
  %0 = load i32* %M, align 4, !tbaa !0
  %cmp15 = icmp sgt i32 %0, 1
  br i1 %cmp15, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %t = getelementptr inbounds %struct.plan7_s* %hmm, i64 0, i32 21
  %end = getelementptr inbounds %struct.plan7_s* %hmm, i64 0, i32 27
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load float*** %t, align 8, !tbaa !4
  %arrayidx = getelementptr inbounds float** %1, i64 %indvars.iv
  %2 = load float** %arrayidx, align 8, !tbaa !4
  %call = tail call float @FSum(float* %2, i32 3) #7
  %3 = load float*** %t, align 8, !tbaa !4
  %arrayidx3 = getelementptr inbounds float** %3, i64 %indvars.iv
  %4 = load float** %arrayidx3, align 8, !tbaa !4
  %5 = load float** %end, align 8, !tbaa !4
  %arrayidx5 = getelementptr inbounds float* %5, i64 %indvars.iv
  %6 = load float* %arrayidx5, align 4, !tbaa !3
  %mul = fmul float %call, %6
  %add = fadd float %call, %mul
  %conv6 = fdiv float 1.000000e+00, %add
  tail call void @FScale(float* %4, i32 3, float %conv6) #7
  %indvars.iv.next = add i64 %indvars.iv, 1
  %7 = load i32* %M, align 4, !tbaa !0
  %8 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %8, %7
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  ret void
}
