define void @Plan7ComlogAppend(%struct.plan7_s* nocapture %hmm, i32 %argc, i8** nocapture %argv) #0 {
entry:
  %cmp66 = icmp sgt i32 %argc, 0
  br i1 %cmp66, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv69 = phi i64 [ %indvars.iv.next70, %for.body ], [ 0, %entry ]
  %len.067 = phi i32 [ %conv1, %for.body ], [ %argc, %entry ]
  %arrayidx = getelementptr inbounds i8** %argv, i64 %indvars.iv69
  %0 = load i8** %arrayidx, align 8, !tbaa !4
  %call = tail call i64 @strlen(i8* %0) #9
  %conv63 = zext i32 %len.067 to i64
  %add = add i64 %call, %conv63
  %conv1 = trunc i64 %add to i32
  %indvars.iv.next70 = add i64 %indvars.iv69, 1
  %lftr.wideiv71 = trunc i64 %indvars.iv.next70 to i32
  %exitcond72 = icmp eq i32 %lftr.wideiv71, %argc
  br i1 %exitcond72, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %len.0.lcssa = phi i32 [ %argc, %entry ], [ %conv1, %for.body ]
  %comlog = getelementptr inbounds %struct.plan7_s* %hmm, i64 0, i32 6
  %1 = load i8** %comlog, align 8, !tbaa !4
  %cmp2 = icmp eq i8* %1, null
  br i1 %cmp2, label %if.else, label %if.then

if.then:                                          ; preds = %for.end
  %call5 = tail call i64 @strlen(i8* %1) #9
  %conv662 = zext i32 %len.0.lcssa to i64
  %add7 = add i64 %call5, %conv662
  %add10 = shl i64 %add7, 32
  %sext = add i64 %add10, 4294967296
  %conv11 = ashr exact i64 %sext, 32
  %call12 = tail call i8* @sre_realloc(i8* getelementptr inbounds ([51 x i8]* @.str, i64 0, i64 0), i32 296, i8* %1, i64 %conv11) #7
  store i8* %call12, i8** %comlog, align 8, !tbaa !4
  br label %if.end

if.else:                                          ; preds = %for.end
  %add14 = add nsw i32 %len.0.lcssa, 1
  %conv15 = sext i32 %add14 to i64
  %call17 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([51 x i8]* @.str, i64 0, i64 0), i32 300, i64 %conv15) #7
  store i8* %call17, i8** %comlog, align 8, !tbaa !4
  store i8 0, i8* %call17, align 1, !tbaa !1
  %.pre = load i8** %comlog, align 8, !tbaa !4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %2 = phi i8* [ %.pre, %if.else ], [ %call12, %if.then ]
  %strlen = tail call i64 @strlen(i8* %2)
  %endptr = getelementptr i8* %2, i64 %strlen
  %3 = bitcast i8* %endptr to i16*
  store i16 10, i16* %3, align 1
  br i1 %cmp66, label %for.body25.lr.ph, label %for.end38

for.body25.lr.ph:                                 ; preds = %if.end
  %sub = add nsw i32 %argc, -1
  br label %for.body25

for.body25:                                       ; preds = %for.inc36, %for.body25.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body25.lr.ph ], [ %indvars.iv.next, %for.inc36 ]
  %4 = load i8** %comlog, align 8, !tbaa !4
  %arrayidx28 = getelementptr inbounds i8** %argv, i64 %indvars.iv
  %5 = load i8** %arrayidx28, align 8, !tbaa !4
  %call29 = tail call i8* @strcat(i8* %4, i8* %5) #7
  %6 = trunc i64 %indvars.iv to i32
  %cmp30 = icmp slt i32 %6, %sub
  br i1 %cmp30, label %if.then32, label %for.inc36

if.then32:                                        ; preds = %for.body25
  %7 = load i8** %comlog, align 8, !tbaa !4
  %strlen60 = tail call i64 @strlen(i8* %7)
  %endptr61 = getelementptr i8* %7, i64 %strlen60
  %8 = bitcast i8* %endptr61 to i16*
  store i16 32, i16* %8, align 1
  br label %for.inc36

for.inc36:                                        ; preds = %for.body25, %if.then32
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %argc
  br i1 %exitcond, label %for.end38, label %for.body25

for.end38:                                        ; preds = %for.inc36, %if.end
  ret void
}
