define internal fastcc void @write_bin_string(%struct._IO_FILE* nocapture %fp, i8* %s) #0 {
entry:
  %len = alloca i32, align 4
  call void @llvm.dbg.value(metadata !{%struct._IO_FILE* %fp}, i64 0, metadata !276), !dbg !1472
  call void @llvm.dbg.value(metadata !{i8* %s}, i64 0, metadata !277), !dbg !1472
  call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !278), !dbg !1473
  %cmp = icmp eq i8* %s, null, !dbg !1474
  br i1 %cmp, label %if.else, label %if.then, !dbg !1474

if.then:                                          ; preds = %entry
  %call = call i64 @strlen(i8* %s) #8, !dbg !1475
  %add = add i64 %call, 1, !dbg !1475
  %conv = trunc i64 %add to i32, !dbg !1475
  call void @llvm.dbg.value(metadata !{i32 %conv}, i64 0, metadata !278), !dbg !1475
  store i32 %conv, i32* %len, align 4, !dbg !1475, !tbaa !460
  %0 = bitcast i32* %len to i8*, !dbg !1477
  %call1 = call i64 @fwrite(i8* %0, i64 4, i64 1, %struct._IO_FILE* %fp) #7, !dbg !1477
  call void @llvm.dbg.value(metadata !{i32* %len}, i64 0, metadata !278), !dbg !1478
  %1 = load i32* %len, align 4, !dbg !1478, !tbaa !460
  %conv2 = sext i32 %1 to i64, !dbg !1478
  %call3 = call i64 @fwrite(i8* %s, i64 1, i64 %conv2, %struct._IO_FILE* %fp) #7, !dbg !1478
  br label %if.end, !dbg !1479

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata !18, i64 0, metadata !278), !dbg !1480
  store i32 0, i32* %len, align 4, !dbg !1480, !tbaa !460
  %2 = bitcast i32* %len to i8*, !dbg !1482
  %call4 = call i64 @fwrite(i8* %2, i64 4, i64 1, %struct._IO_FILE* %fp) #7, !dbg !1482
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !1483
}
