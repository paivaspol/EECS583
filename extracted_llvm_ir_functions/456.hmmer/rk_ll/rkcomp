define i64 @rkcomp(i8* %probe) #0 {
  %coded = alloca [17 x i8], align 16
  tail call void @llvm.dbg.value(metadata i8* %probe, i64 0, metadata !15, metadata !37), !dbg !38
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !16, metadata !37), !dbg !39
  tail call void @llvm.dbg.declare(metadata [17 x i8]* %coded, metadata !17, metadata !37), !dbg !40
  %1 = tail call i64 @strlen(i8* %probe) #5, !dbg !41
  %2 = trunc i64 %1 to i32, !dbg !41
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !21, metadata !37), !dbg !43
  %sext = shl i64 %1, 32, !dbg !44
  %3 = ashr exact i64 %sext, 32, !dbg !44
  %4 = icmp ugt i64 %3, 16, !dbg !45
  br i1 %4, label %.loopexit, label %5, !dbg !46

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds [17 x i8]* %coded, i64 0, i64 0, !dbg !47
  %7 = call i32 @seqencode(i8* %6, i8* %probe) #5, !dbg !49
  %8 = icmp eq i32 %7, 0, !dbg !50
  br i1 %8, label %.loopexit, label %.preheader1, !dbg !51

.preheader1:                                      ; preds = %5
  %9 = icmp sgt i32 %2, 0, !dbg !52
  br i1 %9, label %.lr.ph6, label %.lr.ph, !dbg !55

.lr.ph6:                                          ; preds = %.preheader1
  %10 = add i32 %2, -1, !dbg !55
  br label %12, !dbg !55

.preheader:                                       ; preds = %12
  %11 = icmp ult i32 %2, 16, !dbg !56
  br i1 %11, label %.lr.ph, label %.loopexit, !dbg !59

; <label>:12                                      ; preds = %12, %.lr.ph6
  %indvars.iv = phi i64 [ 0, %.lr.ph6 ], [ %indvars.iv.next, %12 ]
  %hashprobe.04 = phi i64 [ 0, %.lr.ph6 ], [ %17, %12 ]
  %13 = shl i64 %hashprobe.04, 4, !dbg !60
  call void @llvm.dbg.value(metadata i64 %13, i64 0, metadata !16, metadata !37), !dbg !39
  %14 = getelementptr inbounds [17 x i8]* %coded, i64 0, i64 %indvars.iv, !dbg !62
  %15 = load i8* %14, align 1, !dbg !62, !tbaa !63
  %16 = sext i8 %15 to i64, !dbg !66
  %17 = or i64 %16, %13, !dbg !67
  call void @llvm.dbg.value(metadata i64 %17, i64 0, metadata !16, metadata !37), !dbg !39
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !55
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !55
  %exitcond11 = icmp eq i32 %lftr.wideiv, %10, !dbg !55
  br i1 %exitcond11, label %.preheader, label %12, !dbg !55

.lr.ph:                                           ; preds = %.preheader1, %.preheader, %.lr.ph
  %i.13 = phi i32 [ %20, %.lr.ph ], [ 0, %.preheader1 ], [ %2, %.preheader ]
  %hashprobe.12 = phi i64 [ %19, %.lr.ph ], [ 0, %.preheader1 ], [ %17, %.preheader ]
  %18 = shl i64 %hashprobe.12, 4, !dbg !68
  call void @llvm.dbg.value(metadata i64 %18, i64 0, metadata !16, metadata !37), !dbg !39
  %19 = or i64 %18, 15, !dbg !70
  call void @llvm.dbg.value(metadata i64 %19, i64 0, metadata !16, metadata !37), !dbg !39
  %20 = add nuw nsw i32 %i.13, 1, !dbg !71
  call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !22, metadata !37), !dbg !72
  %exitcond = icmp eq i32 %i.13, 15, !dbg !59
  br i1 %exitcond, label %.loopexit, label %.lr.ph, !dbg !59

.loopexit:                                        ; preds = %.lr.ph, %.preheader, %5, %0
  %.0 = phi i64 [ 0, %0 ], [ 0, %5 ], [ %17, %.preheader ], [ %19, %.lr.ph ]
  ret i64 %.0, !dbg !73
}
