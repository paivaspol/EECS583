define i32 @rkseq(i64 %hashprobe, i8* nocapture readonly %sequence) #4 {
  tail call void @llvm.dbg.value(metadata i64 %hashprobe, i64 0, metadata !27, metadata !37), !dbg !74
  tail call void @llvm.dbg.value(metadata i8* %sequence, i64 0, metadata !28, metadata !37), !dbg !75
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !31, metadata !37), !dbg !76
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !32, metadata !37), !dbg !77
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !29, metadata !37), !dbg !78
  br label %5, !dbg !79

.preheader2:                                      ; preds = %5, %9
  %target.0.lcssa = phi i64 [ %target.013, %5 ], [ %12, %9 ]
  %1 = getelementptr inbounds i8* %sequence, i64 15, !dbg !81
  %2 = load i8* %1, align 1, !dbg !82, !tbaa !63
  %3 = icmp eq i8 %2, 0, !dbg !83
  br i1 %3, label %.preheader, label %.lr.ph, !dbg !84

.lr.ph:                                           ; preds = %.preheader2
  %4 = getelementptr inbounds i8* %sequence, i64 16, !dbg !85
  br label %15, !dbg !84

; <label>:5                                       ; preds = %0, %9
  %target.013 = phi i64 [ 0, %0 ], [ %12, %9 ]
  %i.012 = phi i64 [ 0, %0 ], [ %13, %9 ]
  %6 = getelementptr inbounds i8* %sequence, i64 %i.012, !dbg !86
  %7 = load i8* %6, align 1, !dbg !90, !tbaa !63
  %8 = icmp eq i8 %7, 0, !dbg !91
  br i1 %8, label %.preheader2, label %9, !dbg !92

; <label>:9                                       ; preds = %5
  %10 = shl i64 %target.013, 4, !dbg !93
  tail call void @llvm.dbg.value(metadata i64 %10, i64 0, metadata !32, metadata !37), !dbg !77
  %11 = sext i8 %7 to i64, !dbg !94
  %12 = or i64 %11, %10, !dbg !95
  tail call void @llvm.dbg.value(metadata i64 %12, i64 0, metadata !32, metadata !37), !dbg !77
  %13 = add nuw nsw i64 %i.012, 1, !dbg !96
  tail call void @llvm.dbg.value(metadata i64 %13, i64 0, metadata !29, metadata !37), !dbg !78
  %14 = icmp ult i64 %13, 16, !dbg !97
  br i1 %14, label %5, label %.preheader2, !dbg !79

; <label>:15                                      ; preds = %.lr.ph, %21
  %16 = phi i8* [ %4, %.lr.ph ], [ %27, %21 ]
  %target.110 = phi i64 [ %target.0.lcssa, %.lr.ph ], [ %25, %21 ]
  %pos.09 = phi i64 [ 0, %.lr.ph ], [ %26, %21 ]
  %17 = and i64 %target.110, %hashprobe, !dbg !98
  %18 = icmp eq i64 %17, %target.110, !dbg !101
  br i1 %18, label %19, label %21, !dbg !102

; <label>:19                                      ; preds = %15
  %20 = trunc i64 %pos.09 to i32, !dbg !103
  br label %.loopexit, !dbg !104

; <label>:21                                      ; preds = %15
  %22 = shl i64 %target.110, 4, !dbg !105
  tail call void @llvm.dbg.value(metadata i64 %22, i64 0, metadata !32, metadata !37), !dbg !77
  %23 = load i8* %16, align 1, !dbg !106, !tbaa !63
  %24 = sext i8 %23 to i64, !dbg !107
  %25 = or i64 %24, %22, !dbg !108
  tail call void @llvm.dbg.value(metadata i64 %25, i64 0, metadata !32, metadata !37), !dbg !77
  %26 = add nuw nsw i64 %pos.09, 1, !dbg !109
  tail call void @llvm.dbg.value(metadata i64 %26, i64 0, metadata !31, metadata !37), !dbg !76
  %.sum = add i64 %pos.09, 17, !dbg !85
  %27 = getelementptr inbounds i8* %sequence, i64 %.sum, !dbg !85
  %.sum1 = add i64 %pos.09, 16, !dbg !81
  %28 = getelementptr inbounds i8* %sequence, i64 %.sum1, !dbg !81
  %29 = load i8* %28, align 1, !dbg !82, !tbaa !63
  %30 = icmp eq i8 %29, 0, !dbg !83
  br i1 %30, label %.preheader, label %15, !dbg !84

.preheader:                                       ; preds = %.preheader2, %21, %36
  %target.28 = phi i64 [ %37, %36 ], [ %target.0.lcssa, %.preheader2 ], [ %25, %21 ]
  %pos.17 = phi i64 [ %38, %36 ], [ 0, %.preheader2 ], [ %26, %21 ]
  %i.16 = phi i64 [ %39, %36 ], [ 0, %.preheader2 ], [ 0, %21 ]
  %31 = or i64 %target.28, 15, !dbg !110
  tail call void @llvm.dbg.value(metadata i64 %31, i64 0, metadata !32, metadata !37), !dbg !77
  %32 = and i64 %31, %hashprobe, !dbg !114
  %33 = icmp eq i64 %32, %31, !dbg !116
  br i1 %33, label %34, label %36, !dbg !117

; <label>:34                                      ; preds = %.preheader
  %35 = trunc i64 %pos.17 to i32, !dbg !118
  br label %.loopexit, !dbg !119

; <label>:36                                      ; preds = %.preheader
  %37 = shl i64 %31, 4, !dbg !120
  tail call void @llvm.dbg.value(metadata i64 %37, i64 0, metadata !32, metadata !37), !dbg !77
  %38 = add nsw i64 %pos.17, 1, !dbg !121
  tail call void @llvm.dbg.value(metadata i64 %38, i64 0, metadata !31, metadata !37), !dbg !76
  %39 = add nuw nsw i64 %i.16, 1, !dbg !122
  tail call void @llvm.dbg.value(metadata i64 %39, i64 0, metadata !29, metadata !37), !dbg !78
  %40 = icmp ult i64 %39, 16, !dbg !123
  br i1 %40, label %.preheader, label %.loopexit, !dbg !124

.loopexit:                                        ; preds = %36, %34, %19
  %.0 = phi i32 [ %20, %19 ], [ %35, %34 ], [ -1, %36 ]
  ret i32 %.0, !dbg !125
}
