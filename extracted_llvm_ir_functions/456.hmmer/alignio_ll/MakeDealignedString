define i32 @MakeDealignedString(i8* nocapture %aseq, i32 %alen, i8* nocapture %ss, i8** nocapture %ret_s) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %aseq}, i64 0, metadata !141), !dbg !391
  tail call void @llvm.dbg.value(metadata !{i32 %alen}, i64 0, metadata !142), !dbg !391
  tail call void @llvm.dbg.value(metadata !{i8* %ss}, i64 0, metadata !143), !dbg !391
  tail call void @llvm.dbg.value(metadata !{i8** %ret_s}, i64 0, metadata !144), !dbg !391
  %add = add nsw i32 %alen, 1, !dbg !392
  %conv = sext i32 %add to i64, !dbg !392
  %call = tail call i8* @sre_malloc(i8* getelementptr inbounds ([53 x i8]* @.str, i64 0, i64 0), i32 280, i64 %conv) #8, !dbg !392
  tail call void @llvm.dbg.value(metadata !{i8* %call}, i64 0, metadata !145), !dbg !392
  tail call void @llvm.dbg.value(metadata !18, i64 0, metadata !147), !dbg !393
  tail call void @llvm.dbg.value(metadata !18, i64 0, metadata !146), !dbg !393
  %cmp60 = icmp sgt i32 %alen, 0, !dbg !393
  br i1 %cmp60, label %for.body, label %for.end, !dbg !393

for.body:                                         ; preds = %entry, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ]
  %rpos.062 = phi i32 [ %rpos.1, %for.inc ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds i8* %aseq, i64 %indvars.iv, !dbg !395
  %0 = load i8* %arrayidx, align 1, !dbg !395, !tbaa !297
  switch i8 %0, label %if.then [
    i8 32, label %for.inc
    i8 46, label %for.inc
    i8 95, label %for.inc
    i8 45, label %for.inc
    i8 126, label %for.inc
  ], !dbg !395

if.then:                                          ; preds = %for.body
  %arrayidx29 = getelementptr inbounds i8* %ss, i64 %indvars.iv, !dbg !396
  %1 = load i8* %arrayidx29, align 1, !dbg !396, !tbaa !297
  %idxprom30 = sext i32 %rpos.062 to i64, !dbg !396
  %arrayidx31 = getelementptr inbounds i8* %call, i64 %idxprom30, !dbg !396
  store i8 %1, i8* %arrayidx31, align 1, !dbg !396, !tbaa !297
  %inc = add nsw i32 %rpos.062, 1, !dbg !398
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !147), !dbg !398
  br label %for.inc, !dbg !399

for.inc:                                          ; preds = %for.body, %for.body, %for.body, %for.body, %for.body, %if.then
  %rpos.1 = phi i32 [ %rpos.062, %for.body ], [ %inc, %if.then ], [ %rpos.062, %for.body ], [ %rpos.062, %for.body ], [ %rpos.062, %for.body ], [ %rpos.062, %for.body ]
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !393
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !393
  %exitcond = icmp eq i32 %lftr.wideiv, %alen, !dbg !393
  br i1 %exitcond, label %for.end, label %for.body, !dbg !393

for.end:                                          ; preds = %for.inc, %entry
  %rpos.0.lcssa = phi i32 [ 0, %entry ], [ %rpos.1, %for.inc ]
  %idxprom33 = sext i32 %rpos.0.lcssa to i64, !dbg !400
  %arrayidx34 = getelementptr inbounds i8* %call, i64 %idxprom33, !dbg !400
  store i8 0, i8* %arrayidx34, align 1, !dbg !400, !tbaa !297
  %conv35 = sext i32 %alen to i64, !dbg !401
  %call36 = tail call i64 @strlen(i8* %ss) #10, !dbg !401
  %cmp37 = icmp eq i64 %conv35, %call36, !dbg !401
  br i1 %cmp37, label %if.end40, label %if.then39, !dbg !401

if.then39:                                        ; preds = %for.end
  store i32 6, i32* @squid_errno, align 4, !dbg !402, !tbaa !296
  tail call void @free(i8* %call) #8, !dbg !402
  br label %return, !dbg !402

if.end40:                                         ; preds = %for.end
  store i8* %call, i8** %ret_s, align 8, !dbg !404, !tbaa !305
  br label %return, !dbg !405

return:                                           ; preds = %if.end40, %if.then39
  %retval.0 = phi i32 [ 0, %if.then39 ], [ 1, %if.end40 ]
  ret i32 %retval.0, !dbg !405
}
