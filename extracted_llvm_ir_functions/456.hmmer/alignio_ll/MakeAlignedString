define i32 @MakeAlignedString(i8* nocapture readonly %aseq, i32 %alen, i8* nocapture readonly %ss, i8** nocapture %ret_s) #0 {
  tail call void @llvm.dbg.value(metadata i8* %aseq, i64 0, metadata !112, metadata !300), !dbg !550
  tail call void @llvm.dbg.value(metadata i32 %alen, i64 0, metadata !113, metadata !300), !dbg !551
  tail call void @llvm.dbg.value(metadata i8* %ss, i64 0, metadata !114, metadata !300), !dbg !552
  tail call void @llvm.dbg.value(metadata i8** %ret_s, i64 0, metadata !115, metadata !300), !dbg !553
  %1 = add nsw i32 %alen, 1, !dbg !554
  %2 = sext i32 %1 to i64, !dbg !554
  %3 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([65 x i8]* @.str, i64 0, i64 0), i32 242, i64 %2) #7, !dbg !554
  tail call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !116, metadata !300), !dbg !555
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !118, metadata !300), !dbg !556
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !117, metadata !300), !dbg !557
  %4 = icmp sgt i32 %alen, 0, !dbg !558
  br i1 %4, label %.lr.ph, label %20, !dbg !561

.lr.ph:                                           ; preds = %0
  %5 = add i32 %alen, -1, !dbg !561
  %6 = zext i32 %5 to i64
  br label %7, !dbg !561

; <label>:7                                       ; preds = %18, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %18 ]
  %rpos.02 = phi i32 [ 0, %.lr.ph ], [ %rpos.1, %18 ]
  %8 = getelementptr inbounds i8* %aseq, i64 %indvars.iv, !dbg !562
  %9 = load i8* %8, align 1, !dbg !562, !tbaa !450
  switch i8 %9, label %10 [
    i8 32, label %16
    i8 46, label %16
    i8 95, label %16
    i8 45, label %16
    i8 126, label %16
  ], !dbg !562

; <label>:10                                      ; preds = %7
  %11 = sext i32 %rpos.02 to i64, !dbg !564
  %12 = getelementptr inbounds i8* %ss, i64 %11, !dbg !564
  %13 = load i8* %12, align 1, !dbg !564, !tbaa !450
  %14 = getelementptr inbounds i8* %3, i64 %indvars.iv, !dbg !566
  store i8 %13, i8* %14, align 1, !dbg !567, !tbaa !450
  %15 = add nsw i32 %rpos.02, 1, !dbg !568
  tail call void @llvm.dbg.value(metadata i32 %15, i64 0, metadata !118, metadata !300), !dbg !556
  br label %18, !dbg !569

; <label>:16                                      ; preds = %7, %7, %7, %7, %7
  %17 = getelementptr inbounds i8* %3, i64 %indvars.iv, !dbg !570
  store i8 46, i8* %17, align 1, !dbg !571, !tbaa !450
  br label %18

; <label>:18                                      ; preds = %10, %16
  %rpos.1 = phi i32 [ %rpos.02, %16 ], [ %15, %10 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !561
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !561
  %exitcond = icmp eq i32 %lftr.wideiv, %5, !dbg !561
  br i1 %exitcond, label %._crit_edge, label %7, !dbg !561

._crit_edge:                                      ; preds = %18
  %19 = add nuw nsw i64 %6, 1, !dbg !561
  br label %20, !dbg !561

; <label>:20                                      ; preds = %._crit_edge, %0
  %.lcssa = phi i64 [ %19, %._crit_edge ], [ 0, %0 ]
  %rpos.0.lcssa = phi i32 [ %rpos.1, %._crit_edge ], [ 0, %0 ]
  %21 = getelementptr inbounds i8* %3, i64 %.lcssa, !dbg !572
  store i8 0, i8* %21, align 1, !dbg !573, !tbaa !450
  %22 = sext i32 %rpos.0.lcssa to i64, !dbg !574
  %23 = tail call i64 @strlen(i8* %ss) #7, !dbg !576
  %24 = icmp eq i64 %22, %23, !dbg !577
  br i1 %24, label %26, label %25, !dbg !578

; <label>:25                                      ; preds = %20
  store i32 6, i32* @squid_errno, align 4, !dbg !579, !tbaa !459
  tail call void @free(i8* %3) #8, !dbg !581
  br label %27, !dbg !582

; <label>:26                                      ; preds = %20
  store i8* %3, i8** %ret_s, align 8, !dbg !583, !tbaa !332
  br label %27, !dbg !584

; <label>:27                                      ; preds = %26, %25
  %.0 = phi i32 [ 0, %25 ], [ 1, %26 ]
  ret i32 %.0, !dbg !585
}
