define double @DSum(double* nocapture %vec, i32 %n) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{double* %vec}, i64 0, metadata !42), !dbg !222
  tail call void @llvm.dbg.value(metadata !{i32 %n}, i64 0, metadata !43), !dbg !222
  tail call void @llvm.dbg.value(metadata !223, i64 0, metadata !44), !dbg !224
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !45), !dbg !225
  %cmp4 = icmp sgt i32 %n, 0, !dbg !225
  br i1 %cmp4, label %for.body, label %for.end, !dbg !225

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %sum.05 = phi double [ %add, %for.body ], [ 0.000000e+00, %entry ]
  %arrayidx = getelementptr inbounds double* %vec, i64 %indvars.iv, !dbg !225
  %0 = load double* %arrayidx, align 8, !dbg !225, !tbaa !205
  %add = fadd double %sum.05, %0, !dbg !225
  tail call void @llvm.dbg.value(metadata !{double %add}, i64 0, metadata !44), !dbg !225
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !225
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !225
  %exitcond = icmp eq i32 %lftr.wideiv, %n, !dbg !225
  br i1 %exitcond, label %for.end, label %for.body, !dbg !225

for.end:                                          ; preds = %for.body, %entry
  %sum.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add, %for.body ]
  ret double %sum.0.lcssa, !dbg !227
}
