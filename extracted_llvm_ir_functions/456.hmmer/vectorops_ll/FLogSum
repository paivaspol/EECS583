define float @FLogSum(float* nocapture %vec, i32 %n) #0 {
entry:
  %0 = load float* %vec, align 4, !tbaa !3
  %cmp11.i = icmp sgt i32 %n, 1
  br i1 %cmp11.i, label %for.body.i, label %FMax.exit

for.body.i:                                       ; preds = %entry, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ 1, %entry ]
  %best.013.i = phi float [ %best.1.i, %for.body.i ], [ %0, %entry ]
  %arrayidx1.i = getelementptr inbounds float* %vec, i64 %indvars.iv.i
  %1 = load float* %arrayidx1.i, align 4, !tbaa !3
  %cmp2.i = fcmp ogt float %1, %best.013.i
  %best.1.i = select i1 %cmp2.i, float %1, float %best.013.i
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  %lftr.wideiv29 = trunc i64 %indvars.iv.next.i to i32
  %exitcond30 = icmp eq i32 %lftr.wideiv29, %n
  br i1 %exitcond30, label %FMax.exit, label %for.body.i

FMax.exit:                                        ; preds = %for.body.i, %entry
  %best.0.lcssa.i = phi float [ %0, %entry ], [ %best.1.i, %for.body.i ]
  %cmp26 = icmp sgt i32 %n, 0
  %conv1 = fpext float %best.0.lcssa.i to double
  br i1 %cmp26, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %FMax.exit
  %sub = fadd double %conv1, -5.000000e+01
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %2 = phi float [ %0, %for.body.lr.ph ], [ %.pre, %for.inc.for.body_crit_edge ]
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %phitmp, %for.inc.for.body_crit_edge ]
  %sum.028 = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %sum.1, %for.inc.for.body_crit_edge ]
  %conv = fpext float %2 to double
  %cmp2 = fcmp ogt double %conv, %sub
  br i1 %cmp2, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %sub6 = fsub float %2, %best.0.lcssa.i
  %conv7 = fpext float %sub6 to double
  %call8 = tail call double @exp(double %conv7) #3
  %conv9 = fpext float %sum.028 to double
  %add = fadd double %conv9, %call8
  %conv10 = fptrunc double %add to float
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %sum.1 = phi float [ %conv10, %if.then ], [ %sum.028, %for.body ]
  %lftr.wideiv = trunc i64 %indvars.iv to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %n
  br i1 %exitcond, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  %arrayidx.phi.trans.insert = getelementptr inbounds float* %vec, i64 %indvars.iv
  %.pre = load float* %arrayidx.phi.trans.insert, align 4, !tbaa !3
  %phitmp = add i64 %indvars.iv, 1
  br label %for.body

for.end:                                          ; preds = %FMax.exit, %for.inc
  %sum.0.lcssa = phi float [ %sum.1, %for.inc ], [ 0.000000e+00, %FMax.exit ]
  %conv11 = fpext float %sum.0.lcssa to double
  %call12 = tail call double @log(double %conv11) #3
  %add14 = fadd double %conv1, %call12
  %conv15 = fptrunc double %add14 to float
  ret float %conv15
}
