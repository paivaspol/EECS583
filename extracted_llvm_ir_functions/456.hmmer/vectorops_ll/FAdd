define void @FAdd(float* nocapture %vec1, float* nocapture readonly %vec2, i32 %n) #0 {
  tail call void @llvm.dbg.value(metadata float* %vec1, i64 0, metadata !66, metadata !206), !dbg !291
  tail call void @llvm.dbg.value(metadata float* %vec2, i64 0, metadata !67, metadata !206), !dbg !292
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !68, metadata !206), !dbg !293
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !69, metadata !206), !dbg !294
  %1 = icmp sgt i32 %n, 0, !dbg !295
  br i1 %1, label %.lr.ph, label %._crit_edge, !dbg !298

.lr.ph:                                           ; preds = %0
  %2 = add i32 %n, -1, !dbg !298
  br label %3, !dbg !298

; <label>:3                                       ; preds = %3, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %3 ]
  %4 = getelementptr inbounds float* %vec2, i64 %indvars.iv, !dbg !299
  %5 = load float* %4, align 4, !dbg !299, !tbaa !232
  %6 = getelementptr inbounds float* %vec1, i64 %indvars.iv, !dbg !300
  %7 = load float* %6, align 4, !dbg !301, !tbaa !232
  %8 = fadd float %5, %7, !dbg !301
  store float %8, float* %6, align 4, !dbg !301, !tbaa !232
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !298
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !298
  %exitcond = icmp eq i32 %lftr.wideiv, %2, !dbg !298
  br i1 %exitcond, label %._crit_edge, label %3, !dbg !298

._crit_edge:                                      ; preds = %3, %0
  ret void, !dbg !302
}
