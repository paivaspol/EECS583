define void @FNorm(float* nocapture %vec, i32 %n) #0 {
entry:
  %cmp4.i = icmp sgt i32 %n, 0
  br i1 %cmp4.i, label %for.body.i, label %if.end

for.cond4.preheader:                              ; preds = %FSum.exit
  br i1 %cmp4.i, label %for.body7.lr.ph, label %if.end

for.body7.lr.ph:                                  ; preds = %for.cond4.preheader
  %conv8 = sitofp i32 %n to float
  %conv11 = fdiv float 1.000000e+00, %conv8
  br label %for.body7

for.body.i:                                       ; preds = %entry, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ 0, %entry ]
  %sum.05.i = phi float [ %add.i, %for.body.i ], [ 0.000000e+00, %entry ]
  %arrayidx.i = getelementptr inbounds float* %vec, i64 %indvars.iv.i
  %0 = load float* %arrayidx.i, align 4, !tbaa !3
  %add.i = fadd float %sum.05.i, %0
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  %lftr.wideiv38 = trunc i64 %indvars.iv.next.i to i32
  %exitcond39 = icmp eq i32 %lftr.wideiv38, %n
  br i1 %exitcond39, label %FSum.exit, label %for.body.i

FSum.exit:                                        ; preds = %for.body.i
  %cmp = fcmp une float %add.i, 0.000000e+00
  br i1 %cmp, label %for.body, label %for.cond4.preheader

for.body:                                         ; preds = %FSum.exit, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %FSum.exit ]
  %arrayidx = getelementptr inbounds float* %vec, i64 %indvars.iv
  %1 = load float* %arrayidx, align 4, !tbaa !3
  %div = fdiv float %1, %add.i
  store float %div, float* %arrayidx, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %n
  br i1 %exitcond, label %if.end, label %for.body

for.body7:                                        ; preds = %for.body7, %for.body7.lr.ph
  %indvars.iv34 = phi i64 [ 0, %for.body7.lr.ph ], [ %indvars.iv.next35, %for.body7 ]
  %arrayidx13 = getelementptr inbounds float* %vec, i64 %indvars.iv34
  store float %conv11, float* %arrayidx13, align 4, !tbaa !3
  %indvars.iv.next35 = add i64 %indvars.iv34, 1
  %lftr.wideiv36 = trunc i64 %indvars.iv.next35 to i32
  %exitcond37 = icmp eq i32 %lftr.wideiv36, %n
  br i1 %exitcond37, label %if.end, label %for.body7

if.end:                                           ; preds = %entry, %for.cond4.preheader, %for.body7, %for.body
  ret void
}
