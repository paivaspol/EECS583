define void @PAMPrior(i8* %pamfile, %struct.p7prior_s* %pri, float %wt) #0 {
entry:
  %pam = alloca i32**, align 8
  %scale = alloca float, align 4
  %0 = load i32* @Alphabet_type, align 4, !tbaa !0
  %cmp = icmp eq i32 %0, 3
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @Die(i8* getelementptr inbounds ([46 x i8]* @.str17, i64 0, i64 0)) #5
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %strategy = getelementptr inbounds %struct.p7prior_s* %pri, i64 0, i32 0
  %1 = load i32* %strategy, align 4, !tbaa !0
  %cmp1 = icmp eq i32 %1, 0
  br i1 %cmp1, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  call void (i8*, ...)* @Die(i8* getelementptr inbounds ([63 x i8]* @.str18, i64 0, i64 0)) #5
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then2
  %inum = getelementptr inbounds %struct.p7prior_s* %pri, i64 0, i32 7
  %2 = load i32* %inum, align 4, !tbaa !0
  %cmp4 = icmp eq i32 %2, 1
  br i1 %cmp4, label %if.end6, label %if.then5

if.then5:                                         ; preds = %if.end3
  call void (i8*, ...)* @Die(i8* getelementptr inbounds ([67 x i8]* @.str19, i64 0, i64 0)) #5
  br label %if.end6

if.end6:                                          ; preds = %if.end3, %if.then5
  %call = call i8* @FileConcat(i8* getelementptr inbounds ([3 x i8]* @.str20, i64 0, i64 0), i8* %pamfile) #5
  %call7 = call %struct._IO_FILE* @fopen(i8* %pamfile, i8* getelementptr inbounds ([2 x i8]* @.str2, i64 0, i64 0)) #5
  %cmp8 = icmp eq %struct._IO_FILE* %call7, null
  br i1 %cmp8, label %land.lhs.true, label %if.end15

land.lhs.true:                                    ; preds = %if.end6
  %call9 = call %struct._IO_FILE* @EnvFileOpen(i8* %pamfile, i8* getelementptr inbounds ([9 x i8]* @.str21, i64 0, i64 0), i8** null) #5
  %cmp10 = icmp eq %struct._IO_FILE* %call9, null
  br i1 %cmp10, label %land.lhs.true11, label %if.end15

land.lhs.true11:                                  ; preds = %land.lhs.true
  %call12 = call %struct._IO_FILE* @EnvFileOpen(i8* %call, i8* getelementptr inbounds ([9 x i8]* @.str21, i64 0, i64 0), i8** null) #5
  %cmp13 = icmp eq %struct._IO_FILE* %call12, null
  br i1 %cmp13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %land.lhs.true11
  call void (i8*, ...)* @Die(i8* getelementptr inbounds ([42 x i8]* @.str22, i64 0, i64 0), i8* %pamfile) #5
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %land.lhs.true11, %land.lhs.true, %if.end6
  %fp.0 = phi %struct._IO_FILE* [ null, %if.then14 ], [ %call12, %land.lhs.true11 ], [ %call9, %land.lhs.true ], [ %call7, %if.end6 ]
  %call16 = call i32 @ParsePAMFile(%struct._IO_FILE* %fp.0, i32*** %pam, float* %scale) #5
  %tobool = icmp eq i32 %call16, 0
  br i1 %tobool, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end15
  call void (i8*, ...)* @Die(i8* getelementptr inbounds ([43 x i8]* @.str23, i64 0, i64 0), i8* %pamfile) #5
  br label %if.end18

if.end18:                                         ; preds = %if.end15, %if.then17
  %call19 = call i32 @fclose(%struct._IO_FILE* %fp.0) #5
  call void @free(i8* %call) #5
  store i32 1, i32* %strategy, align 4, !tbaa !0
  %mnum = getelementptr inbounds %struct.p7prior_s* %pri, i64 0, i32 4
  store i32 20, i32* %mnum, align 4, !tbaa !0
  %3 = load i32* @Alphabet_size, align 4, !tbaa !0
  %cmp2194 = icmp sgt i32 %3, 0
  br i1 %cmp2194, label %for.cond22.preheader, label %for.end65

for.cond22.preheader:                             ; preds = %if.end18, %for.inc45
  %4 = phi i32 [ %14, %for.inc45 ], [ %3, %if.end18 ]
  %indvars.iv98 = phi i64 [ %indvars.iv.next99, %for.inc45 ], [ 0, %if.end18 ]
  %cmp2392 = icmp sgt i32 %4, 0
  br i1 %cmp2392, label %for.body24.lr.ph, label %for.inc45

for.body24.lr.ph:                                 ; preds = %for.cond22.preheader
  %arrayidx = getelementptr inbounds [25 x i8]* @Alphabet, i64 0, i64 %indvars.iv98
  br label %for.body24

for.cond48.preheader:                             ; preds = %for.inc45
  %cmp4990 = icmp sgt i32 %14, 0
  br i1 %cmp4990, label %for.body51, label %for.end65

for.body24:                                       ; preds = %for.body24.lr.ph, %for.body24
  %indvars.iv96 = phi i64 [ 0, %for.body24.lr.ph ], [ %indvars.iv.next97, %for.body24 ]
  %5 = load i8* %arrayidx, align 1, !tbaa !1
  %conv = sext i8 %5 to i64
  %sub = add i64 %conv, -65
  %arrayidx26 = getelementptr inbounds [25 x i8]* @Alphabet, i64 0, i64 %indvars.iv96
  %6 = load i8* %arrayidx26, align 1, !tbaa !1
  %conv27 = sext i8 %6 to i64
  %sub28 = add i64 %conv27, -65
  %arrayidx30 = getelementptr inbounds [0 x float]* @aafq, i64 0, i64 %indvars.iv96
  %7 = load float* %arrayidx30, align 4, !tbaa !3
  %conv31 = fpext float %7 to double
  %8 = load i32*** %pam, align 8, !tbaa !4
  %arrayidx34 = getelementptr inbounds i32** %8, i64 %sub
  %9 = load i32** %arrayidx34, align 8, !tbaa !4
  %arrayidx35 = getelementptr inbounds i32* %9, i64 %sub28
  %10 = load i32* %arrayidx35, align 4, !tbaa !0
  %conv36 = sitofp i32 %10 to float
  %11 = load float* %scale, align 4, !tbaa !3
  %mul = fmul float %conv36, %11
  %conv37 = fpext float %mul to double
  %call38 = call double @exp(double %conv37) #5
  %mul39 = fmul double %conv31, %call38
  %conv40 = fptrunc double %mul39 to float
  %arrayidx44 = getelementptr inbounds %struct.p7prior_s* %pri, i64 0, i32 6, i64 %indvars.iv98, i64 %indvars.iv96
  store float %conv40, float* %arrayidx44, align 4, !tbaa !3
  %indvars.iv.next97 = add i64 %indvars.iv96, 1
  %12 = load i32* @Alphabet_size, align 4, !tbaa !0
  %13 = trunc i64 %indvars.iv.next97 to i32
  %cmp23 = icmp slt i32 %13, %12
  br i1 %cmp23, label %for.body24, label %for.inc45

for.inc45:                                        ; preds = %for.body24, %for.cond22.preheader
  %14 = phi i32 [ %4, %for.cond22.preheader ], [ %12, %for.body24 ]
  %indvars.iv.next99 = add i64 %indvars.iv98, 1
  %15 = trunc i64 %indvars.iv.next99 to i32
  %cmp21 = icmp slt i32 %15, %14
  br i1 %cmp21, label %for.cond22.preheader, label %for.cond48.preheader

for.body51:                                       ; preds = %for.cond48.preheader, %for.body51
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body51 ], [ 0, %for.cond48.preheader ]
  %16 = phi i32 [ %18, %for.body51 ], [ %14, %for.cond48.preheader ]
  %conv52 = sitofp i32 %16 to double
  %div = fdiv double 1.000000e+00, %conv52
  %conv53 = fptrunc double %div to float
  %arrayidx55 = getelementptr inbounds %struct.p7prior_s* %pri, i64 0, i32 5, i64 %indvars.iv
  store float %conv53, float* %arrayidx55, align 4, !tbaa !3
  %arraydecay = getelementptr inbounds %struct.p7prior_s* %pri, i64 0, i32 6, i64 %indvars.iv, i64 0
  call void @FNorm(float* %arraydecay, i32 %16) #5
  %17 = load i32* @Alphabet_size, align 4, !tbaa !0
  call void @FScale(float* %arraydecay, i32 %17, float %wt) #5
  %indvars.iv.next = add i64 %indvars.iv, 1
  %18 = load i32* @Alphabet_size, align 4, !tbaa !0
  %19 = trunc i64 %indvars.iv.next to i32
  %cmp49 = icmp slt i32 %19, %18
  br i1 %cmp49, label %for.body51, label %for.end65

for.end65:                                        ; preds = %if.end18, %for.body51, %for.cond48.preheader
  %20 = load i32*** %pam, align 8, !tbaa !4
  %21 = bitcast i32** %20 to i8**
  call void @Free2DArray(i8** %21, i32 27) #5
  ret void
}
