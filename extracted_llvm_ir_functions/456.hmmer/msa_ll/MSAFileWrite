define void @MSAFileWrite(%struct._IO_FILE* %fp, %struct.msa_struct* %msa, i32 %outfmt, i32 %do_oneline) #0 {
entry:
  switch i32 %outfmt, label %sw.default [
    i32 105, label %sw.bb
    i32 104, label %sw.bb1
    i32 103, label %sw.bb2
    i32 106, label %sw.bb3
    i32 102, label %sw.bb4
    i32 101, label %sw.bb5
  ]

sw.bb:                                            ; preds = %entry
  tail call void @WriteA2M(%struct._IO_FILE* %fp, %struct.msa_struct* %msa) #6
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  tail call void @WriteClustal(%struct._IO_FILE* %fp, %struct.msa_struct* %msa) #6
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  tail call void @WriteMSF(%struct._IO_FILE* %fp, %struct.msa_struct* %msa) #6
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  tail call void @WritePhylip(%struct._IO_FILE* %fp, %struct.msa_struct* %msa) #6
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  tail call void @WriteSELEX(%struct._IO_FILE* %fp, %struct.msa_struct* %msa) #6
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  %tobool = icmp eq i32 %do_oneline, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %sw.bb5
  tail call void @WriteStockholmOneBlock(%struct._IO_FILE* %fp, %struct.msa_struct* %msa) #6
  br label %sw.epilog

if.else:                                          ; preds = %sw.bb5
  tail call void @WriteStockholm(%struct._IO_FILE* %fp, %struct.msa_struct* %msa) #6
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  tail call void (i8*, ...)* @Die(i8* getelementptr inbounds ([42 x i8]* @.str20, i64 0, i64 0), i32 %outfmt) #6
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then, %if.else, %sw.default, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}
