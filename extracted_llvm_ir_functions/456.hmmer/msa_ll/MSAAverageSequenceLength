define float @MSAAverageSequenceLength(%struct.msa_struct* nocapture %msa) #0 {
entry:
  %nseq = getelementptr inbounds %struct.msa_struct* %msa, i64 0, i32 4
  %0 = load i32* %nseq, align 4, !tbaa !3
  %cmp12 = icmp sgt i32 %0, 0
  br i1 %cmp12, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %aseq = getelementptr inbounds %struct.msa_struct* %msa, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %avg.014 = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %add, %for.body ]
  %1 = load i8*** %aseq, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i8** %1, i64 %indvars.iv
  %2 = load i8** %arrayidx, align 8, !tbaa !0
  %call = tail call i32 @DealignedLength(i8* %2) #6
  %conv = sitofp i32 %call to float
  %add = fadd float %avg.014, %conv
  %indvars.iv.next = add i64 %indvars.iv, 1
  %3 = load i32* %nseq, align 4, !tbaa !3
  %4 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %4, %3
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  %.lcssa = phi i32 [ %0, %entry ], [ %3, %for.body ]
  %avg.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %add, %for.body ]
  %cmp2 = icmp eq i32 %.lcssa, 0
  br i1 %cmp2, label %return, label %if.else

if.else:                                          ; preds = %for.end
  %conv5 = sitofp i32 %.lcssa to float
  %div = fdiv float %avg.0.lcssa, %conv5
  br label %return

return:                                           ; preds = %for.end, %if.else
  %retval.0 = phi float [ %div, %if.else ], [ 0.000000e+00, %for.end ]
  ret float %retval.0
}
