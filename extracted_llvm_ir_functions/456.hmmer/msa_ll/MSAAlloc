define %struct.msa_struct* @MSAAlloc(i32 %nseq, i32 %alen) #0 {
entry:
  %call = tail call i8* @sre_malloc(i8* getelementptr inbounds ([49 x i8]* @.str, i64 0, i64 0), i32 68, i64 360) #6
  %0 = bitcast i8* %call to %struct.msa_struct*
  %conv = sext i32 %nseq to i64
  %mul = shl nsw i64 %conv, 3
  %call1 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([49 x i8]* @.str, i64 0, i64 0), i32 69, i64 %mul) #6
  %1 = bitcast i8* %call1 to i8**
  %aseq = bitcast i8* %call to i8***
  store i8** %1, i8*** %aseq, align 8, !tbaa !0
  %call4 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([49 x i8]* @.str, i64 0, i64 0), i32 70, i64 %mul) #6
  %2 = bitcast i8* %call4 to i8**
  %sqname = getelementptr inbounds i8* %call, i64 8
  %3 = bitcast i8* %sqname to i8***
  store i8** %2, i8*** %3, align 8, !tbaa !0
  %mul6 = shl nsw i64 %conv, 2
  %call7 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([49 x i8]* @.str, i64 0, i64 0), i32 71, i64 %mul6) #6
  %4 = bitcast i8* %call7 to i32*
  %sqlen = getelementptr inbounds i8* %call, i64 328
  %5 = bitcast i8* %sqlen to i32**
  store i32* %4, i32** %5, align 8, !tbaa !0
  %call10 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([49 x i8]* @.str, i64 0, i64 0), i32 72, i64 %mul6) #6
  %6 = bitcast i8* %call10 to float*
  %wgt = getelementptr inbounds i8* %call, i64 16
  %7 = bitcast i8* %wgt to float**
  store float* %6, float** %7, align 8, !tbaa !0
  %cmp113 = icmp sgt i32 %nseq, 0
  br i1 %cmp113, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %cmp19 = icmp eq i32 %alen, 0
  %add = add nsw i32 %alen, 1
  %conv21 = sext i32 %add to i64
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv115 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next116, %for.inc ]
  %8 = load i8*** %3, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i8** %8, i64 %indvars.iv115
  store i8* null, i8** %arrayidx, align 8, !tbaa !0
  %9 = load i32** %5, align 8, !tbaa !0
  %arrayidx15 = getelementptr inbounds i32* %9, i64 %indvars.iv115
  store i32 0, i32* %arrayidx15, align 4, !tbaa !3
  %10 = load float** %7, align 8, !tbaa !0
  %arrayidx18 = getelementptr inbounds float* %10, i64 %indvars.iv115
  store float -1.000000e+00, float* %arrayidx18, align 4, !tbaa !4
  br i1 %cmp19, label %if.else, label %if.then

if.then:                                          ; preds = %for.body
  %call23 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([49 x i8]* @.str, i64 0, i64 0), i32 80, i64 %conv21) #6
  %11 = load i8*** %aseq, align 8, !tbaa !0
  %arrayidx26 = getelementptr inbounds i8** %11, i64 %indvars.iv115
  store i8* %call23, i8** %arrayidx26, align 8, !tbaa !0
  br label %for.inc

if.else:                                          ; preds = %for.body
  %12 = load i8*** %aseq, align 8, !tbaa !0
  %arrayidx29 = getelementptr inbounds i8** %12, i64 %indvars.iv115
  store i8* null, i8** %arrayidx29, align 8, !tbaa !0
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  %indvars.iv.next116 = add i64 %indvars.iv115, 1
  %lftr.wideiv117 = trunc i64 %indvars.iv.next116 to i32
  %exitcond118 = icmp eq i32 %lftr.wideiv117, %nseq
  br i1 %exitcond118, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  %alen30 = getelementptr inbounds i8* %call, i64 24
  %13 = bitcast i8* %alen30 to i32*
  store i32 %alen, i32* %13, align 4, !tbaa !3
  %nseq31 = getelementptr inbounds i8* %call, i64 28
  %14 = bitcast i8* %nseq31 to i32*
  store i32 0, i32* %14, align 4, !tbaa !3
  %nseqalloc = getelementptr inbounds i8* %call, i64 320
  %15 = bitcast i8* %nseqalloc to i32*
  store i32 %nseq, i32* %15, align 4, !tbaa !3
  %nseqlump = getelementptr inbounds i8* %call, i64 324
  %16 = bitcast i8* %nseqlump to i32*
  store i32 %nseq, i32* %16, align 4, !tbaa !3
  %flags = getelementptr inbounds i8* %call, i64 32
  %sslen = getelementptr inbounds i8* %call, i64 336
  call void @llvm.memset.p0i8.i64(i8* %flags, i8 0, i64 96, i32 4, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %sslen, i8 0, i64 16, i32 8, i1 false)
  %call32 = tail call %struct.GKI* @GKIInit() #6
  %index = getelementptr inbounds i8* %call, i64 312
  %17 = bitcast i8* %index to %struct.GKI**
  store %struct.GKI* %call32, %struct.GKI** %17, align 8, !tbaa !0
  %lastidx = getelementptr inbounds i8* %call, i64 352
  %18 = bitcast i8* %lastidx to i32*
  store i32 0, i32* %18, align 4, !tbaa !3
  %cutoff = getelementptr inbounds i8* %call, i64 128
  %19 = bitcast i8* %cutoff to [6 x float]*
  %cutoff_is_set = getelementptr inbounds i8* %call, i64 152
  %20 = bitcast i8* %cutoff_is_set to [6 x i32]*
  br label %for.body36

for.body36:                                       ; preds = %for.body36, %for.end
  %indvars.iv = phi i64 [ 0, %for.end ], [ %indvars.iv.next, %for.body36 ]
  %arrayidx38 = getelementptr inbounds [6 x float]* %19, i64 0, i64 %indvars.iv
  store float 0.000000e+00, float* %arrayidx38, align 4, !tbaa !4
  %arrayidx40 = getelementptr inbounds [6 x i32]* %20, i64 0, i64 %indvars.iv
  store i32 0, i32* %arrayidx40, align 4, !tbaa !3
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 6
  br i1 %exitcond, label %for.end43, label %for.body36

for.end43:                                        ; preds = %for.body36
  %comment = getelementptr inbounds i8* %call, i64 176
  %gs_tag = getelementptr inbounds i8* %call, i64 216
  %gc_tag = getelementptr inbounds i8* %call, i64 248
  %gr_tag = getelementptr inbounds i8* %call, i64 280
  call void @llvm.memset.p0i8.i64(i8* %comment, i8 0, i64 36, i32 8, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %gs_tag, i8 0, i64 28, i32 8, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %gc_tag, i8 0, i64 28, i32 8, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %gr_tag, i8 0, i64 28, i32 8, i1 false)
  ret %struct.msa_struct* %0
}
