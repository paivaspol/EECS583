define void @MSAMingap(%struct.msa_struct* %msa) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.msa_struct* %msa}, i64 0, metadata !405), !dbg !971
  %alen = getelementptr inbounds %struct.msa_struct* %msa, i64 0, i32 3, !dbg !972
  %0 = load i32* %alen, align 4, !dbg !972, !tbaa !478
  %conv = sext i32 %0 to i64, !dbg !972
  %mul = shl nsw i64 %conv, 2, !dbg !972
  %call = tail call i8* @sre_malloc(i8* getelementptr inbounds ([49 x i8]* @.str, i64 0, i64 0), i32 1157, i64 %mul) #7, !dbg !972
  %1 = bitcast i8* %call to i32*, !dbg !972
  tail call void @llvm.dbg.value(metadata !{i32* %1}, i64 0, metadata !406), !dbg !972
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !407), !dbg !973
  %2 = load i32* %alen, align 4, !dbg !973, !tbaa !478
  %cmp87 = icmp sgt i32 %2, 0, !dbg !973
  br i1 %cmp87, label %for.cond3.preheader.lr.ph, label %for.end58, !dbg !973

for.cond3.preheader.lr.ph:                        ; preds = %entry
  %nseq = getelementptr inbounds %struct.msa_struct* %msa, i64 0, i32 4, !dbg !975
  %aseq = getelementptr inbounds %struct.msa_struct* %msa, i64 0, i32 0, !dbg !978
  br label %for.cond3.preheader, !dbg !973

for.cond3.preheader:                              ; preds = %for.cond3.preheader.lr.ph, %for.end
  %indvars.iv90 = phi i64 [ 0, %for.cond3.preheader.lr.ph ], [ %indvars.iv.next91, %for.end ]
  %3 = load i32* %nseq, align 4, !dbg !975, !tbaa !478
  %cmp484 = icmp sgt i32 %3, 0, !dbg !975
  br i1 %cmp484, label %for.body6.lr.ph, label %for.end, !dbg !975

for.body6.lr.ph:                                  ; preds = %for.cond3.preheader
  %4 = load i8*** %aseq, align 8, !dbg !978, !tbaa !466
  br label %for.body6, !dbg !975

for.body6:                                        ; preds = %for.body6.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body6.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %idx.085 = phi i32 [ 0, %for.body6.lr.ph ], [ %inc, %for.inc ]
  %arrayidx = getelementptr inbounds i8** %4, i64 %indvars.iv, !dbg !978
  %5 = load i8** %arrayidx, align 8, !dbg !978, !tbaa !466
  %arrayidx8 = getelementptr inbounds i8* %5, i64 %indvars.iv90, !dbg !978
  %6 = load i8* %arrayidx8, align 1, !dbg !978, !tbaa !467
  switch i8 %6, label %for.end [
    i8 32, label %for.inc
    i8 46, label %for.inc
    i8 95, label %for.inc
    i8 45, label %for.inc
    i8 126, label %for.inc
  ], !dbg !978

for.inc:                                          ; preds = %for.body6, %for.body6, %for.body6, %for.body6, %for.body6
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !975
  %inc = add nsw i32 %idx.085, 1, !dbg !975
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !408), !dbg !975
  %7 = trunc i64 %indvars.iv.next to i32, !dbg !975
  %cmp4 = icmp slt i32 %7, %3, !dbg !975
  br i1 %cmp4, label %for.body6, label %for.end, !dbg !975

for.end:                                          ; preds = %for.inc, %for.body6, %for.cond3.preheader
  %idx.0.lcssa = phi i32 [ 0, %for.cond3.preheader ], [ %idx.085, %for.body6 ], [ %inc, %for.inc ]
  %arrayidx52 = getelementptr inbounds i32* %1, i64 %indvars.iv90, !dbg !979
  %not.cmp48 = icmp ne i32 %idx.0.lcssa, %3, !dbg !979
  %. = zext i1 %not.cmp48 to i32, !dbg !979
  store i32 %., i32* %arrayidx52, align 4, !dbg !979, !tbaa !478
  %indvars.iv.next91 = add i64 %indvars.iv90, 1, !dbg !973
  %8 = load i32* %alen, align 4, !dbg !973, !tbaa !478
  %9 = trunc i64 %indvars.iv.next91 to i32, !dbg !973
  %cmp = icmp slt i32 %9, %8, !dbg !973
  br i1 %cmp, label %for.cond3.preheader, label %for.end58, !dbg !973

for.end58:                                        ; preds = %for.end, %entry
  tail call void @MSAShorterAlignment(%struct.msa_struct* %msa, i32* %1) #9, !dbg !980
  tail call void @free(i8* %call) #7, !dbg !981
  ret void, !dbg !982
}
