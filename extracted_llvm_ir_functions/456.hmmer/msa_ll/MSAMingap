define void @MSAMingap(%struct.msa_struct* %msa) #0 {
entry:
  %alen = getelementptr inbounds %struct.msa_struct* %msa, i64 0, i32 3
  %0 = load i32* %alen, align 4, !tbaa !3
  %conv = sext i32 %0 to i64
  %mul = shl nsw i64 %conv, 2
  %call = tail call i8* @sre_malloc(i8* getelementptr inbounds ([49 x i8]* @.str, i64 0, i64 0), i32 1157, i64 %mul) #6
  %1 = bitcast i8* %call to i32*
  %2 = load i32* %alen, align 4, !tbaa !3
  %cmp87 = icmp sgt i32 %2, 0
  br i1 %cmp87, label %for.cond3.preheader.lr.ph, label %for.end58

for.cond3.preheader.lr.ph:                        ; preds = %entry
  %nseq = getelementptr inbounds %struct.msa_struct* %msa, i64 0, i32 4
  %aseq = getelementptr inbounds %struct.msa_struct* %msa, i64 0, i32 0
  br label %for.cond3.preheader

for.cond3.preheader:                              ; preds = %for.cond3.preheader.lr.ph, %for.end
  %indvars.iv90 = phi i64 [ 0, %for.cond3.preheader.lr.ph ], [ %indvars.iv.next91, %for.end ]
  %3 = load i32* %nseq, align 4, !tbaa !3
  %cmp484 = icmp sgt i32 %3, 0
  br i1 %cmp484, label %for.body6.lr.ph, label %for.end

for.body6.lr.ph:                                  ; preds = %for.cond3.preheader
  %4 = load i8*** %aseq, align 8, !tbaa !0
  br label %for.body6

for.body6:                                        ; preds = %for.body6.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body6.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %idx.085 = phi i32 [ 0, %for.body6.lr.ph ], [ %inc, %for.inc ]
  %arrayidx = getelementptr inbounds i8** %4, i64 %indvars.iv
  %5 = load i8** %arrayidx, align 8, !tbaa !0
  %arrayidx8 = getelementptr inbounds i8* %5, i64 %indvars.iv90
  %6 = load i8* %arrayidx8, align 1, !tbaa !1
  switch i8 %6, label %for.end [
    i8 32, label %for.inc
    i8 46, label %for.inc
    i8 95, label %for.inc
    i8 45, label %for.inc
    i8 126, label %for.inc
  ]

for.inc:                                          ; preds = %for.body6, %for.body6, %for.body6, %for.body6, %for.body6
  %indvars.iv.next = add i64 %indvars.iv, 1
  %inc = add nsw i32 %idx.085, 1
  %7 = trunc i64 %indvars.iv.next to i32
  %cmp4 = icmp slt i32 %7, %3
  br i1 %cmp4, label %for.body6, label %for.end

for.end:                                          ; preds = %for.inc, %for.body6, %for.cond3.preheader
  %idx.0.lcssa = phi i32 [ 0, %for.cond3.preheader ], [ %idx.085, %for.body6 ], [ %inc, %for.inc ]
  %arrayidx52 = getelementptr inbounds i32* %1, i64 %indvars.iv90
  %not.cmp48 = icmp ne i32 %idx.0.lcssa, %3
  %. = zext i1 %not.cmp48 to i32
  store i32 %., i32* %arrayidx52, align 4, !tbaa !3
  %indvars.iv.next91 = add i64 %indvars.iv90, 1
  %8 = load i32* %alen, align 4, !tbaa !3
  %9 = trunc i64 %indvars.iv.next91 to i32
  %cmp = icmp slt i32 %9, %8
  br i1 %cmp, label %for.cond3.preheader, label %for.end58

for.end58:                                        ; preds = %for.end, %entry
  tail call void @MSAShorterAlignment(%struct.msa_struct* %msa, i32* %1) #8
  tail call void @free(i8* %call) #6
  ret void
}
