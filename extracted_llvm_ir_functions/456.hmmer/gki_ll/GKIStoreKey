define i32 @GKIStoreKey(%struct.GKI* nocapture %hash, i8* nocapture %key) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.GKI* %hash}, i64 0, metadata !40), !dbg !116
  tail call void @llvm.dbg.value(metadata !{i8* %key}, i64 0, metadata !41), !dbg !116
  %call = tail call fastcc i32 @gki_hashvalue(%struct.GKI* %hash, i8* %key) #6, !dbg !117
  tail call void @llvm.dbg.value(metadata !{i32 %call}, i64 0, metadata !42), !dbg !117
  %idxprom = sext i32 %call to i64, !dbg !118
  %table = getelementptr inbounds %struct.GKI* %hash, i64 0, i32 0, !dbg !118
  %0 = load %struct.gki_elem*** %table, align 8, !dbg !118, !tbaa !98
  %arrayidx = getelementptr inbounds %struct.gki_elem** %0, i64 %idxprom, !dbg !118
  %1 = load %struct.gki_elem** %arrayidx, align 8, !dbg !118, !tbaa !98
  tail call void @llvm.dbg.value(metadata !{%struct.gki_elem* %1}, i64 0, metadata !43), !dbg !118
  %call1 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([49 x i8]* @.str, i64 0, i64 0), i32 189, i64 24) #7, !dbg !119
  %2 = bitcast i8* %call1 to %struct.gki_elem*, !dbg !119
  %3 = load %struct.gki_elem*** %table, align 8, !dbg !119, !tbaa !98
  %arrayidx4 = getelementptr inbounds %struct.gki_elem** %3, i64 %idxprom, !dbg !119
  store %struct.gki_elem* %2, %struct.gki_elem** %arrayidx4, align 8, !dbg !119, !tbaa !98
  %call5 = tail call i64 @strlen(i8* %key) #8, !dbg !120
  %add = add i64 %call5, 1, !dbg !120
  %call6 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([49 x i8]* @.str, i64 0, i64 0), i32 190, i64 %add) #7, !dbg !120
  %4 = load %struct.gki_elem*** %table, align 8, !dbg !120, !tbaa !98
  %arrayidx9 = getelementptr inbounds %struct.gki_elem** %4, i64 %idxprom, !dbg !120
  %5 = load %struct.gki_elem** %arrayidx9, align 8, !dbg !120, !tbaa !98
  %key10 = getelementptr inbounds %struct.gki_elem* %5, i64 0, i32 0, !dbg !120
  store i8* %call6, i8** %key10, align 8, !dbg !120, !tbaa !98
  %6 = load %struct.gki_elem*** %table, align 8, !dbg !121, !tbaa !98
  %arrayidx13 = getelementptr inbounds %struct.gki_elem** %6, i64 %idxprom, !dbg !121
  %7 = load %struct.gki_elem** %arrayidx13, align 8, !dbg !121, !tbaa !98
  %key14 = getelementptr inbounds %struct.gki_elem* %7, i64 0, i32 0, !dbg !121
  %8 = load i8** %key14, align 8, !dbg !121, !tbaa !98
  %call15 = tail call i8* @strcpy(i8* %8, i8* %key) #7, !dbg !121
  %nkeys = getelementptr inbounds %struct.GKI* %hash, i64 0, i32 3, !dbg !122
  %9 = load i32* %nkeys, align 4, !dbg !122, !tbaa !93
  %10 = load %struct.gki_elem*** %table, align 8, !dbg !122, !tbaa !98
  %arrayidx18 = getelementptr inbounds %struct.gki_elem** %10, i64 %idxprom, !dbg !122
  %11 = load %struct.gki_elem** %arrayidx18, align 8, !dbg !122, !tbaa !98
  %idx = getelementptr inbounds %struct.gki_elem* %11, i64 0, i32 1, !dbg !122
  store i32 %9, i32* %idx, align 4, !dbg !122, !tbaa !93
  %nxt = getelementptr inbounds %struct.gki_elem* %11, i64 0, i32 2, !dbg !123
  store %struct.gki_elem* %1, %struct.gki_elem** %nxt, align 8, !dbg !123, !tbaa !98
  %12 = load i32* %nkeys, align 4, !dbg !124, !tbaa !93
  %inc = add nsw i32 %12, 1, !dbg !124
  store i32 %inc, i32* %nkeys, align 4, !dbg !124, !tbaa !93
  %nhash = getelementptr inbounds %struct.GKI* %hash, i64 0, i32 2, !dbg !125
  %13 = load i32* %nhash, align 4, !dbg !125, !tbaa !93
  %mul24 = mul nsw i32 %13, 3, !dbg !125
  %cmp = icmp slt i32 %12, %mul24, !dbg !125
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !125

land.lhs.true:                                    ; preds = %entry
  %primelevel = getelementptr inbounds %struct.GKI* %hash, i64 0, i32 1, !dbg !125
  %14 = load i32* %primelevel, align 4, !dbg !125, !tbaa !93
  %cmp25 = icmp slt i32 %14, 3, !dbg !125
  br i1 %cmp25, label %if.end.i, label %if.end, !dbg !125

if.end.i:                                         ; preds = %land.lhs.true
  %add.i = add nsw i32 %14, 1, !dbg !126
  %call.i = tail call fastcc %struct.GKI* @gki_alloc(i32 %add.i) #7, !dbg !126
  tail call void @llvm.dbg.value(metadata !{%struct.GKI* %call.i}, i64 0, metadata !128) #9, !dbg !126
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !129) #9, !dbg !130
  %15 = load i32* %nhash, align 4, !dbg !130, !tbaa !93
  %cmp23.i = icmp sgt i32 %15, 0, !dbg !130
  %table6.i = getelementptr inbounds %struct.GKI* %call.i, i64 0, i32 0, !dbg !132
  br i1 %cmp23.i, label %for.body.i, label %gki_upsize.exit, !dbg !130

for.body.i:                                       ; preds = %for.inc.i, %if.end.i
  %indvars.iv.i = phi i64 [ 0, %if.end.i ], [ %indvars.iv.next.i, %for.inc.i ]
  %16 = load %struct.gki_elem*** %table, align 8, !dbg !135, !tbaa !98
  %arrayidx.i = getelementptr inbounds %struct.gki_elem** %16, i64 %indvars.iv.i, !dbg !135
  %17 = load %struct.gki_elem** %arrayidx.i, align 8, !dbg !135, !tbaa !98
  tail call void @llvm.dbg.value(metadata !{%struct.gki_elem* %17}, i64 0, metadata !136) #9, !dbg !135
  %cmp31.i = icmp eq %struct.gki_elem* %17, null, !dbg !137
  br i1 %cmp31.i, label %for.inc.i, label %while.body.i, !dbg !137

while.body.i:                                     ; preds = %for.body.i, %while.body.i
  %optr.02.i = phi %struct.gki_elem* [ %21, %while.body.i ], [ %17, %for.body.i ]
  %key.i = getelementptr inbounds %struct.gki_elem* %optr.02.i, i64 0, i32 0, !dbg !138
  %18 = load i8** %key.i, align 8, !dbg !138, !tbaa !98
  %call4.i = tail call fastcc i32 @gki_hashvalue(%struct.GKI* %call.i, i8* %18) #7, !dbg !138
  tail call void @llvm.dbg.value(metadata !{i32 %call4.i}, i64 0, metadata !139) #9, !dbg !138
  %idxprom5.i = sext i32 %call4.i to i64, !dbg !132
  %19 = load %struct.gki_elem*** %table6.i, align 8, !dbg !132, !tbaa !98
  %arrayidx7.i = getelementptr inbounds %struct.gki_elem** %19, i64 %idxprom5.i, !dbg !132
  %20 = load %struct.gki_elem** %arrayidx7.i, align 8, !dbg !132, !tbaa !98
  tail call void @llvm.dbg.value(metadata !{%struct.gki_elem* %20}, i64 0, metadata !140) #9, !dbg !132
  store %struct.gki_elem* %optr.02.i, %struct.gki_elem** %arrayidx7.i, align 8, !dbg !141, !tbaa !98
  %nxt.i = getelementptr inbounds %struct.gki_elem* %optr.02.i, i64 0, i32 2, !dbg !142
  %21 = load %struct.gki_elem** %nxt.i, align 8, !dbg !142, !tbaa !98
  tail call void @llvm.dbg.value(metadata !{%struct.gki_elem* %21}, i64 0, metadata !136) #9, !dbg !142
  %22 = load %struct.gki_elem*** %table6.i, align 8, !dbg !143, !tbaa !98
  %arrayidx13.i = getelementptr inbounds %struct.gki_elem** %22, i64 %idxprom5.i, !dbg !143
  %23 = load %struct.gki_elem** %arrayidx13.i, align 8, !dbg !143, !tbaa !98
  %nxt14.i = getelementptr inbounds %struct.gki_elem* %23, i64 0, i32 2, !dbg !143
  store %struct.gki_elem* %20, %struct.gki_elem** %nxt14.i, align 8, !dbg !143, !tbaa !98
  %cmp3.i = icmp eq %struct.gki_elem* %21, null, !dbg !137
  br i1 %cmp3.i, label %for.inc.i, label %while.body.i, !dbg !137

for.inc.i:                                        ; preds = %while.body.i, %for.body.i
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1, !dbg !130
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32, !dbg !130
  %exitcond = icmp eq i32 %lftr.wideiv, %15, !dbg !130
  br i1 %exitcond, label %gki_upsize.exit, label %for.body.i, !dbg !130

gki_upsize.exit:                                  ; preds = %for.inc.i, %if.end.i
  %24 = load %struct.gki_elem*** %table, align 8, !dbg !144, !tbaa !98
  %25 = bitcast %struct.gki_elem** %24 to i8*, !dbg !144
  tail call void @free(i8* %25) #7, !dbg !144
  %primelevel16.i = getelementptr inbounds %struct.GKI* %call.i, i64 0, i32 1, !dbg !145
  %26 = load i32* %primelevel16.i, align 4, !dbg !145, !tbaa !93
  store i32 %26, i32* %primelevel, align 4, !dbg !145, !tbaa !93
  %nhash18.i = getelementptr inbounds %struct.GKI* %call.i, i64 0, i32 2, !dbg !146
  %27 = load i32* %nhash18.i, align 4, !dbg !146, !tbaa !93
  store i32 %27, i32* %nhash, align 4, !dbg !146, !tbaa !93
  %28 = load %struct.gki_elem*** %table6.i, align 8, !dbg !147, !tbaa !98
  store %struct.gki_elem** %28, %struct.gki_elem*** %table, align 8, !dbg !147, !tbaa !98
  %29 = bitcast %struct.GKI* %call.i to i8*, !dbg !148
  tail call void @free(i8* %29) #7, !dbg !148
  %.pre = load i32* %nkeys, align 4, !dbg !149, !tbaa !93
  br label %if.end, !dbg !127

if.end:                                           ; preds = %entry, %gki_upsize.exit, %land.lhs.true
  %30 = phi i32 [ %inc, %entry ], [ %.pre, %gki_upsize.exit ], [ %inc, %land.lhs.true ]
  %sub = add nsw i32 %30, -1, !dbg !149
  ret i32 %sub, !dbg !149
}
