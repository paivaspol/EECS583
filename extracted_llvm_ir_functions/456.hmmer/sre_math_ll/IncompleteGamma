define double @IncompleteGamma(double %a, double %x) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{double %a}, i64 0, metadata !100), !dbg !211
  tail call void @llvm.dbg.value(metadata !{double %x}, i64 0, metadata !101), !dbg !211
  %cmp = fcmp ugt double %a, 0.000000e+00, !dbg !212
  br i1 %cmp, label %if.end, label %if.then, !dbg !212

if.then:                                          ; preds = %entry
  tail call void (i8*, ...)* @Die(i8* getelementptr inbounds ([33 x i8]* @.str1, i64 0, i64 0)) #5, !dbg !212
  br label %if.end, !dbg !212

if.end:                                           ; preds = %entry, %if.then
  %cmp1 = fcmp olt double %x, 0.000000e+00, !dbg !213
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !213

if.then2:                                         ; preds = %if.end
  tail call void (i8*, ...)* @Die(i8* getelementptr inbounds ([34 x i8]* @.str2, i64 0, i64 0)) #5, !dbg !213
  br label %if.end3, !dbg !213

if.end3:                                          ; preds = %if.then2, %if.end
  %add = fadd double %a, 1.000000e+00, !dbg !214
  %cmp4 = fcmp olt double %add, %x, !dbg !214
  br i1 %cmp4, label %for.body, label %if.else, !dbg !214

for.cond:                                         ; preds = %if.end25
  %cmp6 = icmp slt i32 %inc, 100, !dbg !215
  br i1 %cmp6, label %for.body, label %for.end, !dbg !215

for.body:                                         ; preds = %if.end3, %for.cond
  %de1.0116 = phi double [ %de1.1, %for.cond ], [ %x, %if.end3 ]
  %de0.0115 = phi double [ %de0.1, %for.cond ], [ 1.000000e+00, %if.end3 ]
  %nu0.0114 = phi double [ %nu0.1, %for.cond ], [ 0.000000e+00, %if.end3 ]
  %oldp.0113 = phi double [ %nu1.1, %for.cond ], [ 1.000000e+00, %if.end3 ]
  %iter.0112 = phi i32 [ %inc, %for.cond ], [ 1, %if.end3 ]
  %conv = sitofp i32 %iter.0112 to double, !dbg !217
  %sub = fsub double %conv, %a, !dbg !217
  %mul = fmul double %sub, %nu0.0114, !dbg !217
  %add7 = fadd double %oldp.0113, %mul, !dbg !217
  tail call void @llvm.dbg.value(metadata !{double %add7}, i64 0, metadata !105), !dbg !217
  %mul10 = fmul double %sub, %de0.0115, !dbg !219
  %add11 = fadd double %de1.0116, %mul10, !dbg !219
  tail call void @llvm.dbg.value(metadata !{double %add11}, i64 0, metadata !107), !dbg !219
  %mul12 = fmul double %add7, %x, !dbg !220
  %mul14 = fmul double %conv, %oldp.0113, !dbg !220
  %add15 = fadd double %mul14, %mul12, !dbg !220
  tail call void @llvm.dbg.value(metadata !{double %add15}, i64 0, metadata !106), !dbg !220
  %mul16 = fmul double %add11, %x, !dbg !221
  %mul18 = fmul double %conv, %de1.0116, !dbg !221
  %add19 = fadd double %mul18, %mul16, !dbg !221
  tail call void @llvm.dbg.value(metadata !{double %add19}, i64 0, metadata !108), !dbg !221
  %cmp20 = fcmp une double %add19, 0.000000e+00, !dbg !222
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !222

if.then22:                                        ; preds = %for.body
  %div = fdiv double %add7, %add19, !dbg !223
  tail call void @llvm.dbg.value(metadata !{double %div}, i64 0, metadata !105), !dbg !223
  %div23 = fdiv double %add11, %add19, !dbg !225
  tail call void @llvm.dbg.value(metadata !{double %div23}, i64 0, metadata !107), !dbg !225
  %div24 = fdiv double %add15, %add19, !dbg !226
  tail call void @llvm.dbg.value(metadata !{double %div24}, i64 0, metadata !106), !dbg !226
  tail call void @llvm.dbg.value(metadata !162, i64 0, metadata !108), !dbg !227
  br label %if.end25, !dbg !228

if.end25:                                         ; preds = %if.then22, %for.body
  %nu0.1 = phi double [ %div, %if.then22 ], [ %add7, %for.body ]
  %nu1.1 = phi double [ %div24, %if.then22 ], [ %add15, %for.body ]
  %de0.1 = phi double [ %div23, %if.then22 ], [ %add11, %for.body ]
  %de1.1 = phi double [ 1.000000e+00, %if.then22 ], [ %add19, %for.body ]
  %sub26 = fsub double %nu1.1, %oldp.0113, !dbg !229
  %div27 = fdiv double %sub26, %nu1.1, !dbg !229
  %call = tail call double @fabs(double %div27) #6, !dbg !229
  %cmp28 = fcmp olt double %call, 1.000000e-07, !dbg !229
  tail call void @llvm.dbg.value(metadata !{double %nu1.1}, i64 0, metadata !103), !dbg !230
  %inc = add nsw i32 %iter.0112, 1, !dbg !215
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !102), !dbg !215
  br i1 %cmp28, label %if.then30, label %for.cond, !dbg !229

if.then30:                                        ; preds = %if.end25
  %call31 = tail call double @log(double %x) #5, !dbg !231
  %mul32 = fmul double %call31, %a, !dbg !231
  %sub33 = fsub double %mul32, %x, !dbg !231
  %call34 = tail call double @Gammln(double %a) #7, !dbg !231
  %sub35 = fsub double %sub33, %call34, !dbg !231
  %call36 = tail call double @exp(double %sub35) #5, !dbg !231
  %mul37 = fmul double %nu1.1, %call36, !dbg !231
  br label %return, !dbg !231

for.end:                                          ; preds = %for.cond
  tail call void (i8*, ...)* @Die(i8* getelementptr inbounds ([70 x i8]* @.str3, i64 0, i64 0)) #5, !dbg !232
  br label %return, !dbg !233

if.else:                                          ; preds = %if.end3
  %div39 = fdiv double 1.000000e+00, %a, !dbg !234
  tail call void @llvm.dbg.value(metadata !{double %div39}, i64 0, metadata !111), !dbg !234
  tail call void @llvm.dbg.value(metadata !{double %div39}, i64 0, metadata !109), !dbg !234
  tail call void @llvm.dbg.value(metadata !180, i64 0, metadata !102), !dbg !235
  br label %for.body43, !dbg !235

for.cond40:                                       ; preds = %for.body43
  %cmp41 = icmp slt i32 %inc64, 10000, !dbg !235
  br i1 %cmp41, label %for.body43, label %for.end65, !dbg !235

for.body43:                                       ; preds = %if.else, %for.cond40
  %val.0119 = phi double [ %div39, %if.else ], [ %mul47, %for.cond40 ]
  %p.0118 = phi double [ %div39, %if.else ], [ %add48, %for.cond40 ]
  %iter.1117 = phi i32 [ 1, %if.else ], [ %inc64, %for.cond40 ]
  %conv44 = sitofp i32 %iter.1117 to double, !dbg !237
  %add45 = fadd double %conv44, %a, !dbg !237
  %div46 = fdiv double %x, %add45, !dbg !237
  %mul47 = fmul double %val.0119, %div46, !dbg !237
  tail call void @llvm.dbg.value(metadata !{double %mul47}, i64 0, metadata !111), !dbg !237
  %add48 = fadd double %p.0118, %mul47, !dbg !239
  tail call void @llvm.dbg.value(metadata !{double %add48}, i64 0, metadata !109), !dbg !239
  %div49 = fdiv double %mul47, %add48, !dbg !240
  %call50 = tail call double @fabs(double %div49) #6, !dbg !240
  %cmp51 = fcmp olt double %call50, 1.000000e-07, !dbg !240
  %inc64 = add nsw i32 %iter.1117, 1, !dbg !235
  tail call void @llvm.dbg.value(metadata !{i32 %inc64}, i64 0, metadata !102), !dbg !235
  br i1 %cmp51, label %if.then53, label %for.cond40, !dbg !240

if.then53:                                        ; preds = %for.body43
  %call54 = tail call double @log(double %x) #5, !dbg !241
  %mul55 = fmul double %call54, %a, !dbg !241
  %sub56 = fsub double %mul55, %x, !dbg !241
  %call57 = tail call double @Gammln(double %a) #7, !dbg !241
  %sub58 = fsub double %sub56, %call57, !dbg !241
  %call59 = tail call double @exp(double %sub58) #5, !dbg !241
  %mul60 = fmul double %add48, %call59, !dbg !241
  %sub61 = fsub double 1.000000e+00, %mul60, !dbg !241
  br label %return, !dbg !241

for.end65:                                        ; preds = %for.cond40
  tail call void (i8*, ...)* @Die(i8* getelementptr inbounds ([58 x i8]* @.str4, i64 0, i64 0)) #5, !dbg !242
  br label %return

return:                                           ; preds = %for.end, %for.end65, %if.then53, %if.then30
  %retval.0 = phi double [ %mul37, %if.then30 ], [ %sub61, %if.then53 ], [ 0.000000e+00, %for.end65 ], [ 0.000000e+00, %for.end ]
  ret double %retval.0, !dbg !243
}
