define void @WeightedLinefit(float* nocapture readonly %x, float* nocapture readonly %y, float* nocapture readonly %var, i32 %N, float* nocapture %ret_m, float* nocapture %ret_b) #0 {
  tail call void @llvm.dbg.value(metadata float* %x, i64 0, metadata !32, metadata !122), !dbg !177
  tail call void @llvm.dbg.value(metadata float* %y, i64 0, metadata !33, metadata !122), !dbg !178
  tail call void @llvm.dbg.value(metadata float* %var, i64 0, metadata !34, metadata !122), !dbg !179
  tail call void @llvm.dbg.value(metadata i32 %N, i64 0, metadata !35, metadata !122), !dbg !180
  tail call void @llvm.dbg.value(metadata float* %ret_m, i64 0, metadata !36, metadata !122), !dbg !181
  tail call void @llvm.dbg.value(metadata float* %ret_b, i64 0, metadata !37, metadata !122), !dbg !182
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !43, metadata !122), !dbg !183
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !42, metadata !122), !dbg !184
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !41, metadata !122), !dbg !185
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !40, metadata !122), !dbg !186
  tail call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !39, metadata !122), !dbg !187
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !38, metadata !122), !dbg !188
  %1 = icmp sgt i32 %N, 0, !dbg !189
  br i1 %1, label %.lr.ph, label %._crit_edge, !dbg !192

.lr.ph:                                           ; preds = %0
  %2 = add i32 %N, -1, !dbg !192
  br label %3, !dbg !192

; <label>:3                                       ; preds = %3, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %3 ]
  %s.05 = phi double [ 0.000000e+00, %.lr.ph ], [ %10, %3 ]
  %4 = phi <2 x double> [ zeroinitializer, %.lr.ph ], [ %28, %3 ]
  %5 = phi <2 x double> [ zeroinitializer, %.lr.ph ], [ %22, %3 ]
  %6 = getelementptr inbounds float* %var, i64 %indvars.iv, !dbg !193
  %7 = load float* %6, align 4, !dbg !193, !tbaa !146
  %8 = fpext float %7 to double, !dbg !193
  %9 = fdiv double 1.000000e+00, %8, !dbg !195
  %10 = fadd double %s.05, %9, !dbg !196
  tail call void @llvm.dbg.value(metadata double %10, i64 0, metadata !39, metadata !122), !dbg !187
  %11 = getelementptr inbounds float* %x, i64 %indvars.iv, !dbg !197
  %12 = load float* %11, align 4, !dbg !197, !tbaa !146
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !40, metadata !122), !dbg !186
  %13 = getelementptr inbounds float* %y, i64 %indvars.iv, !dbg !198
  %14 = load float* %13, align 4, !dbg !198, !tbaa !146
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !41, metadata !122), !dbg !185
  %15 = fmul float %12, %12, !dbg !199
  %16 = insertelement <2 x float> undef, float %15, i32 0, !dbg !200
  %17 = insertelement <2 x float> %16, float %14, i32 1, !dbg !200
  %18 = insertelement <2 x float> undef, float %7, i32 0, !dbg !200
  %19 = insertelement <2 x float> %18, float %7, i32 1, !dbg !200
  %20 = fdiv <2 x float> %17, %19, !dbg !200
  %21 = fpext <2 x float> %20 to <2 x double>, !dbg !201
  %22 = fadd <2 x double> %5, %21, !dbg !202
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !42, metadata !122), !dbg !184
  %23 = fmul float %12, %14, !dbg !203
  %24 = insertelement <2 x float> undef, float %12, i32 0, !dbg !204
  %25 = insertelement <2 x float> %24, float %23, i32 1, !dbg !204
  %26 = fdiv <2 x float> %25, %19, !dbg !204
  %27 = fpext <2 x float> %26 to <2 x double>, !dbg !197
  %28 = fadd <2 x double> %4, %27, !dbg !205
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !43, metadata !122), !dbg !183
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !192
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !192
  %exitcond = icmp eq i32 %lftr.wideiv, %2, !dbg !192
  br i1 %exitcond, label %._crit_edge, label %3, !dbg !192

._crit_edge:                                      ; preds = %3, %0
  %s.0.lcssa = phi double [ 0.000000e+00, %0 ], [ %10, %3 ]
  %29 = phi <2 x double> [ zeroinitializer, %0 ], [ %28, %3 ]
  %30 = phi <2 x double> [ zeroinitializer, %0 ], [ %22, %3 ]
  %31 = extractelement <2 x double> %30, i32 0, !dbg !206
  %32 = fmul double %31, %s.0.lcssa, !dbg !206
  %33 = extractelement <2 x double> %29, i32 0, !dbg !207
  %34 = fmul double %33, %33, !dbg !207
  %35 = fsub double %32, %34, !dbg !208
  tail call void @llvm.dbg.value(metadata double %35, i64 0, metadata !44, metadata !122), !dbg !209
  %36 = extractelement <2 x double> %30, i32 1, !dbg !210
  %37 = fmul double %36, %31, !dbg !210
  %38 = extractelement <2 x double> %29, i32 1, !dbg !211
  %39 = fmul double %38, %33, !dbg !211
  %40 = fsub double %37, %39, !dbg !212
  %41 = fdiv double %40, %35, !dbg !213
  tail call void @llvm.dbg.value(metadata double %41, i64 0, metadata !46, metadata !122), !dbg !214
  %42 = fmul double %38, %s.0.lcssa, !dbg !215
  %43 = fmul double %36, %33, !dbg !216
  %44 = fsub double %42, %43, !dbg !217
  %45 = fdiv double %44, %35, !dbg !218
  tail call void @llvm.dbg.value(metadata double %45, i64 0, metadata !45, metadata !122), !dbg !219
  %46 = fptrunc double %45 to float, !dbg !220
  store float %46, float* %ret_m, align 4, !dbg !221, !tbaa !146
  %47 = fptrunc double %41 to float, !dbg !222
  store float %47, float* %ret_b, align 4, !dbg !223, !tbaa !146
  ret void, !dbg !224
}
