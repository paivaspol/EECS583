define internal fastcc void @make_ref_alilist(i32* nocapture readonly %ref, i8* nocapture readonly %k1, i8* nocapture readonly %s1, i8* nocapture readonly %s2, i32** nocapture %ret_s1_list, i32* nocapture %ret_listlen) #0 {
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !125, metadata !176), !dbg !310
  %1 = tail call i64 @strlen(i8* %s1) #8, !dbg !311
  %2 = shl i64 %1, 2, !dbg !311
  %3 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([67 x i8]* @.str, i64 0, i64 0), i32 236, i64 %2) #8, !dbg !311
  tail call void @llvm.dbg.value(metadata i32* %11, i64 0, metadata !130, metadata !176), !dbg !312
  %4 = tail call i64 @strlen(i8* %s1) #8, !dbg !313
  %5 = shl i64 %4, 2, !dbg !313
  %6 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([67 x i8]* @.str, i64 0, i64 0), i32 237, i64 %5) #8, !dbg !313
  %7 = bitcast i8* %6 to i32*, !dbg !314
  tail call void @llvm.dbg.value(metadata i32* %7, i64 0, metadata !134, metadata !176), !dbg !315
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !132, metadata !176), !dbg !316
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !131, metadata !176), !dbg !317
  br label %8, !dbg !318

; <label>:8                                       ; preds = %20, %0
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %20 ], [ 0, %0 ]
  %r1.0 = phi i32 [ %r1.1, %20 ], [ 0, %0 ]
  %9 = getelementptr inbounds i8* %k1, i64 %indvars.iv1, !dbg !320
  %10 = load i8* %9, align 1, !dbg !320, !tbaa !228
  switch i8 %10, label %12 [
    i8 0, label %.preheader
    i8 32, label %20
    i8 46, label %20
    i8 95, label %20
    i8 45, label %20
    i8 126, label %20
  ], !dbg !322

.preheader:                                       ; preds = %8
  %11 = bitcast i8* %3 to i32*, !dbg !323
  br label %21, !dbg !324

; <label>:12                                      ; preds = %8
  %13 = getelementptr inbounds i32* %ref, i64 %indvars.iv1, !dbg !327
  %14 = load i32* %13, align 4, !dbg !327, !tbaa !205
  %15 = icmp ne i32 %14, 0, !dbg !327
  %16 = zext i1 %15 to i32, !dbg !327
  %17 = sext i32 %r1.0 to i64, !dbg !331
  %18 = getelementptr inbounds i32* %7, i64 %17, !dbg !331
  store i32 %16, i32* %18, align 4, !dbg !332, !tbaa !205
  %19 = add nsw i32 %r1.0, 1, !dbg !333
  tail call void @llvm.dbg.value(metadata i32 %19, i64 0, metadata !132, metadata !176), !dbg !316
  br label %20, !dbg !334

; <label>:20                                      ; preds = %8, %8, %8, %8, %8, %12
  %r1.1 = phi i32 [ %19, %12 ], [ %r1.0, %8 ], [ %r1.0, %8 ], [ %r1.0, %8 ], [ %r1.0, %8 ], [ %r1.0, %8 ]
  %indvars.iv.next2 = add nuw i64 %indvars.iv1, 1, !dbg !335
  br label %8, !dbg !335

; <label>:21                                      ; preds = %.preheader, %47
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %47 ]
  %r1.2 = phi i32 [ 0, %.preheader ], [ %r1.3, %47 ]
  %r2.0 = phi i32 [ 0, %.preheader ], [ %r2.1, %47 ]
  %lpos.0 = phi i32 [ 0, %.preheader ], [ %lpos.1, %47 ]
  %22 = getelementptr inbounds i8* %s1, i64 %indvars.iv, !dbg !324
  %23 = load i8* %22, align 1, !dbg !324, !tbaa !228
  switch i8 %23, label %24 [
    i8 0, label %48
    i8 32, label %thread-pre-split
    i8 46, label %thread-pre-split
    i8 95, label %thread-pre-split
    i8 45, label %thread-pre-split
    i8 126, label %thread-pre-split
  ], !dbg !336

; <label>:24                                      ; preds = %21
  %25 = sext i32 %r1.2 to i64, !dbg !337
  %26 = getelementptr inbounds i32* %7, i64 %25, !dbg !337
  %27 = load i32* %26, align 4, !dbg !337, !tbaa !205
  %28 = icmp eq i32 %27, 0, !dbg !337
  br i1 %28, label %thread-pre-split, label %29, !dbg !340

; <label>:29                                      ; preds = %24
  %30 = getelementptr inbounds i8* %s2, i64 %indvars.iv, !dbg !341
  %31 = load i8* %30, align 1, !dbg !341, !tbaa !228
  switch i8 %31, label %32 [
    i8 32, label %34
    i8 46, label %34
    i8 95, label %34
    i8 45, label %34
  ], !dbg !341

; <label>:32                                      ; preds = %29
  %33 = icmp eq i8 %31, 126, !dbg !341
  %. = select i1 %33, i32 -1, i32 %r2.0, !dbg !341
  br label %34, !dbg !341

; <label>:34                                      ; preds = %29, %29, %29, %29, %32
  %35 = phi i32 [ -1, %29 ], [ %., %32 ], [ -1, %29 ], [ -1, %29 ], [ -1, %29 ], !dbg !341
  %36 = sext i32 %lpos.0 to i64, !dbg !343
  %37 = getelementptr inbounds i32* %11, i64 %36, !dbg !343
  store i32 %35, i32* %37, align 4, !dbg !344, !tbaa !205
  %38 = add nsw i32 %lpos.0, 1, !dbg !345
  tail call void @llvm.dbg.value(metadata i32 %38, i64 0, metadata !135, metadata !176), !dbg !346
  %.pr.pre = load i8* %22, align 1, !dbg !347, !tbaa !228
  br label %thread-pre-split, !dbg !349

thread-pre-split:                                 ; preds = %24, %34, %21, %21, %21, %21, %21
  %39 = phi i8 [ %23, %21 ], [ %23, %21 ], [ %23, %21 ], [ %23, %21 ], [ %23, %21 ], [ %23, %24 ], [ %.pr.pre, %34 ], !dbg !347
  %lpos.1 = phi i32 [ %lpos.0, %21 ], [ %lpos.0, %21 ], [ %lpos.0, %21 ], [ %lpos.0, %21 ], [ %lpos.0, %21 ], [ %lpos.0, %24 ], [ %38, %34 ]
  switch i8 %39, label %40 [
    i8 32, label %42
    i8 46, label %42
    i8 95, label %42
    i8 45, label %42
    i8 126, label %42
  ], !dbg !347

; <label>:40                                      ; preds = %thread-pre-split
  %41 = add nsw i32 %r1.2, 1, !dbg !350
  tail call void @llvm.dbg.value(metadata i32 %41, i64 0, metadata !132, metadata !176), !dbg !316
  br label %42, !dbg !351

; <label>:42                                      ; preds = %thread-pre-split, %thread-pre-split, %thread-pre-split, %thread-pre-split, %thread-pre-split, %40
  %r1.3 = phi i32 [ %r1.2, %thread-pre-split ], [ %41, %40 ], [ %r1.2, %thread-pre-split ], [ %r1.2, %thread-pre-split ], [ %r1.2, %thread-pre-split ], [ %r1.2, %thread-pre-split ]
  %43 = getelementptr inbounds i8* %s2, i64 %indvars.iv, !dbg !352
  %44 = load i8* %43, align 1, !dbg !352, !tbaa !228
  switch i8 %44, label %45 [
    i8 32, label %47
    i8 46, label %47
    i8 95, label %47
    i8 45, label %47
    i8 126, label %47
  ], !dbg !352

; <label>:45                                      ; preds = %42
  %46 = add nsw i32 %r2.0, 1, !dbg !354
  tail call void @llvm.dbg.value(metadata i32 %46, i64 0, metadata !133, metadata !176), !dbg !355
  br label %47, !dbg !356

; <label>:47                                      ; preds = %42, %42, %42, %42, %42, %45
  %r2.1 = phi i32 [ %r2.0, %42 ], [ %46, %45 ], [ %r2.0, %42 ], [ %r2.0, %42 ], [ %r2.0, %42 ], [ %r2.0, %42 ]
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !357
  br label %21, !dbg !357

; <label>:48                                      ; preds = %21
  tail call void @free(i8* %6) #7, !dbg !358
  store i32 %lpos.0, i32* %ret_listlen, align 4, !dbg !359, !tbaa !205
  %49 = bitcast i32** %ret_s1_list to i8**, !dbg !360
  store i8* %3, i8** %49, align 8, !dbg !360, !tbaa !197
  ret void
}
