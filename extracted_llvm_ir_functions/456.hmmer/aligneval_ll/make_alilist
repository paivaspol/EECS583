define internal fastcc void @make_alilist(i8* nocapture %s1, i8* nocapture %s2, i32** nocapture %ret_s1_list, i32* nocapture %ret_listlen) #0 {
entry:
  %call = tail call i64 @strlen(i8* %s1) #9
  %mul = shl i64 %call, 2
  %call1 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([55 x i8]* @.str, i64 0, i64 0), i32 179, i64 %mul) #8
  %0 = bitcast i8* %call1 to i32*
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ]
  %r1.0 = phi i32 [ %r1.1, %for.inc ], [ 0, %entry ]
  %r2.0 = phi i32 [ %r2.1, %for.inc ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds i8* %s1, i64 %indvars.iv
  %1 = load i8* %arrayidx, align 1, !tbaa !1
  switch i8 %1, label %if.then [
    i8 0, label %for.end
    i8 32, label %if.end
    i8 46, label %if.end
    i8 95, label %if.end
    i8 45, label %if.end
    i8 126, label %if.end
  ]

if.then:                                          ; preds = %for.cond
  %arrayidx32 = getelementptr inbounds i8* %s2, i64 %indvars.iv
  %2 = load i8* %arrayidx32, align 1, !tbaa !1
  switch i8 %2, label %lor.lhs.false54 [
    i8 32, label %cond.end
    i8 46, label %cond.end
    i8 95, label %cond.end
    i8 45, label %cond.end
  ]

lor.lhs.false54:                                  ; preds = %if.then
  %cmp58 = icmp eq i8 %2, 126
  %. = select i1 %cmp58, i32 -1, i32 %r2.0
  br label %cond.end

cond.end:                                         ; preds = %if.then, %if.then, %if.then, %if.then, %lor.lhs.false54
  %cond = phi i32 [ -1, %if.then ], [ %., %lor.lhs.false54 ], [ -1, %if.then ], [ -1, %if.then ], [ -1, %if.then ]
  %idxprom60 = sext i32 %r1.0 to i64
  %arrayidx61 = getelementptr inbounds i32* %0, i64 %idxprom60
  store i32 %cond, i32* %arrayidx61, align 4, !tbaa !3
  %inc = add nsw i32 %r1.0, 1
  br label %if.end

if.end:                                           ; preds = %for.cond, %for.cond, %for.cond, %for.cond, %for.cond, %cond.end
  %r1.1 = phi i32 [ %inc, %cond.end ], [ %r1.0, %for.cond ], [ %r1.0, %for.cond ], [ %r1.0, %for.cond ], [ %r1.0, %for.cond ], [ %r1.0, %for.cond ]
  %arrayidx63 = getelementptr inbounds i8* %s2, i64 %indvars.iv
  %3 = load i8* %arrayidx63, align 1, !tbaa !1
  switch i8 %3, label %if.then91 [
    i8 32, label %for.inc
    i8 46, label %for.inc
    i8 95, label %for.inc
    i8 45, label %for.inc
    i8 126, label %for.inc
  ]

if.then91:                                        ; preds = %if.end
  %inc92 = add nsw i32 %r2.0, 1
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.then91
  %r2.1 = phi i32 [ %r2.0, %if.end ], [ %inc92, %if.then91 ], [ %r2.0, %if.end ], [ %r2.0, %if.end ], [ %r2.0, %if.end ], [ %r2.0, %if.end ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 %r1.0, i32* %ret_listlen, align 4, !tbaa !3
  store i32* %0, i32** %ret_s1_list, align 8, !tbaa !0
  ret void
}
