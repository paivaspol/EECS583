define float @CompareRefPairAlignments(i32* nocapture %ref, i8* nocapture %known1, i8* nocapture %known2, i8* nocapture %calc1, i8* nocapture %calc2) #0 {
entry:
  %klist1 = alloca i32*, align 8
  %klist2 = alloca i32*, align 8
  %tlist1 = alloca i32*, align 8
  %tlist2 = alloca i32*, align 8
  %len1 = alloca i32, align 4
  %len2 = alloca i32, align 4
  %score = alloca float, align 4
  call void @llvm.dbg.value(metadata !{i32* %ref}, i64 0, metadata !45), !dbg !223
  call void @llvm.dbg.value(metadata !{i8* %known1}, i64 0, metadata !46), !dbg !223
  call void @llvm.dbg.value(metadata !{i8* %known2}, i64 0, metadata !47), !dbg !223
  call void @llvm.dbg.value(metadata !{i8* %calc1}, i64 0, metadata !48), !dbg !223
  call void @llvm.dbg.value(metadata !{i8* %calc2}, i64 0, metadata !49), !dbg !223
  call void @llvm.dbg.declare(metadata !{i32** %klist1}, metadata !50), !dbg !224
  call void @llvm.dbg.declare(metadata !{i32** %klist2}, metadata !51), !dbg !225
  call void @llvm.dbg.declare(metadata !{i32** %tlist1}, metadata !52), !dbg !226
  call void @llvm.dbg.declare(metadata !{i32** %tlist2}, metadata !53), !dbg !227
  call void @llvm.dbg.declare(metadata !{i32* %len1}, metadata !54), !dbg !228
  call void @llvm.dbg.declare(metadata !{i32* %len2}, metadata !55), !dbg !228
  call void @llvm.dbg.declare(metadata !{float* %score}, metadata !56), !dbg !229
  call fastcc void @make_ref_alilist(i32* %ref, i8* %known1, i8* %calc1, i8* %calc2, i32** %tlist1, i32* %len1) #8, !dbg !230
  call fastcc void @make_ref_alilist(i32* %ref, i8* %known2, i8* %calc2, i8* %calc1, i32** %tlist2, i32* %len2) #8, !dbg !231
  call fastcc void @make_ref_alilist(i32* %ref, i8* %known1, i8* %known1, i8* %known2, i32** %klist1, i32* %len1) #8, !dbg !232
  call fastcc void @make_ref_alilist(i32* %ref, i8* %known2, i8* %known2, i8* %known1, i32** %klist2, i32* %len2) #8, !dbg !233
  call void @llvm.dbg.value(metadata !{i32** %klist1}, i64 0, metadata !50), !dbg !234
  %0 = load i32** %klist1, align 8, !dbg !234, !tbaa !186
  call void @llvm.dbg.value(metadata !{i32** %klist2}, i64 0, metadata !51), !dbg !234
  %1 = load i32** %klist2, align 8, !dbg !234, !tbaa !186
  call void @llvm.dbg.value(metadata !{i32** %tlist1}, i64 0, metadata !52), !dbg !234
  %2 = load i32** %tlist1, align 8, !dbg !234, !tbaa !186
  call void @llvm.dbg.value(metadata !{i32** %tlist2}, i64 0, metadata !53), !dbg !234
  %3 = load i32** %tlist2, align 8, !dbg !234, !tbaa !186
  call void @llvm.dbg.value(metadata !{i32* %len1}, i64 0, metadata !54), !dbg !234
  %4 = load i32* %len1, align 4, !dbg !234, !tbaa !189
  call void @llvm.dbg.value(metadata !{i32* %len2}, i64 0, metadata !55), !dbg !234
  %5 = load i32* %len2, align 4, !dbg !234, !tbaa !189
  call fastcc void @compare_lists(i32* %0, i32* %1, i32* %2, i32* %3, i32 %4, i32 %5, float* %score) #8, !dbg !234
  call void @llvm.dbg.value(metadata !{i32** %klist1}, i64 0, metadata !50), !dbg !235
  %6 = bitcast i32* %0 to i8*, !dbg !235
  call void @free(i8* %6) #9, !dbg !235
  call void @llvm.dbg.value(metadata !{i32** %klist2}, i64 0, metadata !51), !dbg !236
  %7 = bitcast i32* %1 to i8*, !dbg !236
  call void @free(i8* %7) #9, !dbg !236
  call void @llvm.dbg.value(metadata !{i32** %tlist1}, i64 0, metadata !52), !dbg !237
  %8 = bitcast i32* %2 to i8*, !dbg !237
  call void @free(i8* %8) #9, !dbg !237
  call void @llvm.dbg.value(metadata !{i32** %tlist2}, i64 0, metadata !53), !dbg !238
  %9 = bitcast i32* %3 to i8*, !dbg !238
  call void @free(i8* %9) #9, !dbg !238
  call void @llvm.dbg.value(metadata !{float* %score}, i64 0, metadata !56), !dbg !239
  %10 = load float* %score, align 4, !dbg !239, !tbaa !195
  ret float %10, !dbg !240
}
