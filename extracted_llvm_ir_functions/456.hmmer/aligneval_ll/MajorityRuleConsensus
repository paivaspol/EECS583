define i8* @MajorityRuleConsensus(i8** nocapture readonly %aseq, i32 %nseq, i32 %alen) #0 {
  %count = alloca [27 x i32], align 16
  %1 = bitcast [27 x i32]* %count to i8*
  tail call void @llvm.dbg.value(metadata i8** %aseq, i64 0, metadata !91, metadata !176), !dbg !498
  tail call void @llvm.dbg.value(metadata i32 %nseq, i64 0, metadata !92, metadata !176), !dbg !499
  tail call void @llvm.dbg.value(metadata i32 %alen, i64 0, metadata !93, metadata !176), !dbg !500
  call void @llvm.lifetime.start(i64 108, i8* %1) #5, !dbg !501
  tail call void @llvm.dbg.declare(metadata [27 x i32]* %count, metadata !95, metadata !176), !dbg !502
  %2 = add nsw i32 %alen, 1, !dbg !503
  %3 = sext i32 %2 to i64, !dbg !503
  %4 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([67 x i8]* @.str, i64 0, i64 0), i32 485, i64 %3) #8, !dbg !503
  tail call void @llvm.dbg.value(metadata i8* %4, i64 0, metadata !94, metadata !176), !dbg !504
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !101, metadata !176), !dbg !505
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !100, metadata !176), !dbg !506
  %5 = icmp sgt i32 %alen, 0, !dbg !507
  br i1 %5, label %.preheader3.lr.ph, label %._crit_edge11, !dbg !510

.preheader3.lr.ph:                                ; preds = %0
  %6 = icmp sgt i32 %nseq, 0, !dbg !511
  %7 = getelementptr inbounds [27 x i32]* %count, i64 0, i64 26, !dbg !515
  %8 = sitofp i32 %nseq to float, !dbg !517
  %9 = add i32 %nseq, -1, !dbg !510
  %10 = add i32 %alen, -1, !dbg !510
  br label %.preheader3, !dbg !510

.preheader3:                                      ; preds = %53, %.preheader3.lr.ph
  %indvars.iv15 = phi i64 [ 0, %.preheader3.lr.ph ], [ %indvars.iv.next16, %53 ]
  %spos.09 = phi i32 [ 0, %.preheader3.lr.ph ], [ %spos.1, %53 ]
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 108, i32 16, i1 false), !dbg !518
  br i1 %6, label %.lr.ph, label %38, !dbg !521

.lr.ph:                                           ; preds = %.preheader3, %37
  %indvars.iv = phi i64 [ %indvars.iv.next, %37 ], [ 0, %.preheader3 ]
  %11 = getelementptr inbounds i8** %aseq, i64 %indvars.iv, !dbg !522
  %12 = load i8** %11, align 8, !dbg !522, !tbaa !197
  %13 = getelementptr inbounds i8* %12, i64 %indvars.iv15, !dbg !522
  %14 = load i8* %13, align 1, !dbg !522, !tbaa !228
  tail call void @llvm.dbg.value(metadata i32 %21, i64 0, metadata !156, metadata !176) #5, !dbg !525
  tail call void @llvm.dbg.value(metadata i32 %21, i64 0, metadata !164, metadata !176) #5, !dbg !527
  tail call void @llvm.dbg.value(metadata i64 256, i64 0, metadata !165, metadata !176) #5, !dbg !529
  %isascii.i.i1 = icmp sgt i8 %14, -1, !dbg !530
  br i1 %isascii.i.i1, label %15, label %20, !dbg !530

; <label>:15                                      ; preds = %.lr.ph
  %16 = sext i8 %14 to i64, !dbg !531
  %17 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %16, !dbg !531
  %18 = load i32* %17, align 4, !dbg !531, !tbaa !205
  %19 = and i32 %18, 256, !dbg !532
  br label %isalpha.exit, !dbg !530

; <label>:20                                      ; preds = %.lr.ph
  %21 = sext i8 %14 to i32, !dbg !533
  %22 = tail call i32 @__maskrune(i32 %21, i64 256) #8, !dbg !534
  br label %isalpha.exit, !dbg !530

isalpha.exit:                                     ; preds = %15, %20
  %.sink.i.in.i = phi i32 [ %19, %15 ], [ %22, %20 ], !dbg !535
  %.sink.i.i = icmp eq i32 %.sink.i.in.i, 0, !dbg !536
  br i1 %.sink.i.i, label %34, label %23, !dbg !537

; <label>:23                                      ; preds = %isalpha.exit
  %24 = load i8** %11, align 8, !dbg !538, !tbaa !197
  %25 = getelementptr inbounds i8* %24, i64 %indvars.iv15, !dbg !538
  %26 = load i8* %25, align 1, !dbg !538, !tbaa !228
  %27 = sext i8 %26 to i32, !dbg !540
  tail call void @llvm.dbg.value(metadata i32 %27, i64 0, metadata !171, metadata !176) #5, !dbg !541
  %28 = tail call i32 @__toupper(i32 %27) #8, !dbg !543
  tail call void @llvm.dbg.value(metadata i32 %28, i64 0, metadata !103, metadata !176), !dbg !544
  %29 = add nsw i32 %28, -65, !dbg !545
  %30 = sext i32 %29 to i64, !dbg !546
  %31 = getelementptr inbounds [27 x i32]* %count, i64 0, i64 %30, !dbg !546
  %32 = load i32* %31, align 4, !dbg !547, !tbaa !205
  %33 = add nsw i32 %32, 1, !dbg !547
  store i32 %33, i32* %31, align 4, !dbg !547, !tbaa !205
  br label %37, !dbg !548

; <label>:34                                      ; preds = %isalpha.exit
  %35 = load i32* %7, align 8, !dbg !549, !tbaa !205
  %36 = add nsw i32 %35, 1, !dbg !549
  store i32 %36, i32* %7, align 8, !dbg !549, !tbaa !205
  br label %37

; <label>:37                                      ; preds = %23, %34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !521
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !521
  %exitcond = icmp eq i32 %lftr.wideiv, %9, !dbg !521
  br i1 %exitcond, label %._crit_edge, label %.lr.ph, !dbg !521

._crit_edge:                                      ; preds = %37
  %.pre = load i32* %7, align 8, !dbg !515, !tbaa !205
  br label %38, !dbg !521

; <label>:38                                      ; preds = %._crit_edge, %.preheader3
  %39 = phi i32 [ %.pre, %._crit_edge ], [ 0, %.preheader3 ]
  %40 = sitofp i32 %39 to float, !dbg !551
  %41 = fdiv float %40, %8, !dbg !552
  %42 = fcmp ugt float %41, 5.000000e-01, !dbg !553
  br i1 %42, label %53, label %.preheader, !dbg !554

.preheader:                                       ; preds = %38, %.preheader
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %.preheader ], [ 0, %38 ]
  %bestx.08 = phi i32 [ %x.1.bestx.0, %.preheader ], [ -1, %38 ]
  %max.07 = phi i32 [ %.max.0, %.preheader ], [ -1, %38 ]
  %43 = getelementptr inbounds [27 x i32]* %count, i64 0, i64 %indvars.iv12, !dbg !555
  %44 = load i32* %43, align 4, !dbg !555, !tbaa !205
  %45 = icmp sgt i32 %44, %max.07, !dbg !560
  tail call void @llvm.dbg.value(metadata i32 %44, i64 0, metadata !104, metadata !176), !dbg !561
  %.max.0 = select i1 %45, i32 %44, i32 %max.07, !dbg !562
  %46 = trunc i64 %indvars.iv12 to i32, !dbg !562
  %x.1.bestx.0 = select i1 %45, i32 %46, i32 %bestx.08, !dbg !562
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !563
  %exitcond14 = icmp eq i64 %indvars.iv.next13, 26, !dbg !563
  br i1 %exitcond14, label %47, label %.preheader, !dbg !563

; <label>:47                                      ; preds = %.preheader
  %48 = add nsw i32 %x.1.bestx.0, 65, !dbg !564
  %49 = trunc i32 %48 to i8, !dbg !565
  %50 = add nsw i32 %spos.09, 1, !dbg !566
  tail call void @llvm.dbg.value(metadata i32 %50, i64 0, metadata !101, metadata !176), !dbg !505
  %51 = sext i32 %spos.09 to i64, !dbg !567
  %52 = getelementptr inbounds i8* %4, i64 %51, !dbg !567
  store i8 %49, i8* %52, align 1, !dbg !568, !tbaa !228
  br label %53, !dbg !569

; <label>:53                                      ; preds = %38, %47
  %spos.1 = phi i32 [ %50, %47 ], [ %spos.09, %38 ]
  %indvars.iv.next16 = add nuw nsw i64 %indvars.iv15, 1, !dbg !510
  %lftr.wideiv17 = trunc i64 %indvars.iv15 to i32, !dbg !510
  %exitcond18 = icmp eq i32 %lftr.wideiv17, %10, !dbg !510
  br i1 %exitcond18, label %._crit_edge11, label %.preheader3, !dbg !510

._crit_edge11:                                    ; preds = %53, %0
  %spos.0.lcssa = phi i32 [ 0, %0 ], [ %spos.1, %53 ]
  %54 = sext i32 %spos.0.lcssa to i64, !dbg !570
  %55 = getelementptr inbounds i8* %4, i64 %54, !dbg !570
  store i8 0, i8* %55, align 1, !dbg !571, !tbaa !228
  call void @llvm.lifetime.end(i64 108, i8* %1) #5, !dbg !572
  ret i8* %4, !dbg !572
}
