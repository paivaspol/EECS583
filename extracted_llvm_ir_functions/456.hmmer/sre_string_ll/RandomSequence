define noalias i8* @RandomSequence(i8* nocapture %alphabet, float* %p, i32 %n, i32 %len) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %alphabet}, i64 0, metadata !102), !dbg !285
  tail call void @llvm.dbg.value(metadata !{float* %p}, i64 0, metadata !103), !dbg !285
  tail call void @llvm.dbg.value(metadata !{i32 %n}, i64 0, metadata !104), !dbg !285
  tail call void @llvm.dbg.value(metadata !{i32 %len}, i64 0, metadata !105), !dbg !285
  %add = add nsw i32 %len, 1, !dbg !286
  %conv = sext i32 %add to i64, !dbg !286
  %call = tail call i8* @sre_malloc(i8* getelementptr inbounds ([56 x i8]* @.str2, i64 0, i64 0), i32 199, i64 %conv) #11, !dbg !286
  tail call void @llvm.dbg.value(metadata !{i8* %call}, i64 0, metadata !106), !dbg !286
  tail call void @llvm.dbg.value(metadata !18, i64 0, metadata !107), !dbg !287
  %cmp13 = icmp sgt i32 %len, 0, !dbg !287
  br i1 %cmp13, label %for.body, label %for.end, !dbg !287

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %call2 = tail call i32 @FChoose(float* %p, i32 %n) #9, !dbg !289
  %idxprom = sext i32 %call2 to i64, !dbg !289
  %arrayidx = getelementptr inbounds i8* %alphabet, i64 %idxprom, !dbg !289
  %0 = load i8* %arrayidx, align 1, !dbg !289, !tbaa !221
  %arrayidx4 = getelementptr inbounds i8* %call, i64 %indvars.iv, !dbg !289
  store i8 %0, i8* %arrayidx4, align 1, !dbg !289, !tbaa !221
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !287
  tail call void @llvm.dbg.value(metadata !{i32 %len}, i64 0, metadata !107), !dbg !287
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !287
  %exitcond = icmp eq i32 %lftr.wideiv, %len, !dbg !287
  br i1 %exitcond, label %for.cond.for.end_crit_edge, label %for.body, !dbg !287

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %phitmp = sext i32 %len to i64, !dbg !287
  br label %for.end, !dbg !287

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %entry
  %x.0.lcssa = phi i64 [ %phitmp, %for.cond.for.end_crit_edge ], [ 0, %entry ]
  %arrayidx6 = getelementptr inbounds i8* %call, i64 %x.0.lcssa, !dbg !290
  store i8 0, i8* %arrayidx6, align 1, !dbg !290, !tbaa !221
  ret i8* %call, !dbg !291
}
