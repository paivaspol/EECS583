define void @Free2DArray(i8** %p, i32 %dim1) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8** %p}, i64 0, metadata !83), !dbg !261
  tail call void @llvm.dbg.value(metadata !{i32 %dim1}, i64 0, metadata !84), !dbg !261
  %cmp = icmp eq i8** %p, null, !dbg !262
  br i1 %cmp, label %if.end6, label %for.cond.preheader, !dbg !262

for.cond.preheader:                               ; preds = %entry
  %cmp113 = icmp sgt i32 %dim1, 0, !dbg !263
  br i1 %cmp113, label %for.body, label %for.end, !dbg !263

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.cond.preheader ]
  %arrayidx = getelementptr inbounds i8** %p, i64 %indvars.iv, !dbg !266
  %0 = load i8** %arrayidx, align 8, !dbg !266, !tbaa !220
  %cmp2 = icmp eq i8* %0, null, !dbg !266
  br i1 %cmp2, label %for.inc, label %if.then3, !dbg !266

if.then3:                                         ; preds = %for.body
  tail call void @free(i8* %0) #9, !dbg !266
  br label %for.inc, !dbg !266

for.inc:                                          ; preds = %for.body, %if.then3
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !263
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !263
  %exitcond = icmp eq i32 %lftr.wideiv, %dim1, !dbg !263
  br i1 %exitcond, label %for.end, label %for.body, !dbg !263

for.end:                                          ; preds = %for.inc, %for.cond.preheader
  %1 = bitcast i8** %p to i8*, !dbg !267
  tail call void @free(i8* %1) #9, !dbg !267
  br label %if.end6, !dbg !268

if.end6:                                          ; preds = %entry, %for.end
  ret void, !dbg !269
}
