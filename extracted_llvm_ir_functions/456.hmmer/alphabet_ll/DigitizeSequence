define i8* @DigitizeSequence(i8* nocapture %seq, i32 %L) #0 {
entry:
  %add = add nsw i32 %L, 2
  %conv = sext i32 %add to i64
  %call = tail call i8* @sre_malloc(i8* getelementptr inbounds ([54 x i8]* @.str24, i64 0, i64 0), i32 215, i64 %conv) #5
  %0 = load i32* @Alphabet_iupac, align 4, !tbaa !3
  %conv1 = trunc i32 %0 to i8
  %add2 = add i32 %L, 1
  %idxprom = sext i32 %add2 to i64
  %arrayidx = getelementptr inbounds i8* %call, i64 %idxprom
  store i8 %conv1, i8* %arrayidx, align 1, !tbaa !1
  store i8 %conv1, i8* %call, align 1, !tbaa !1
  %cmp19 = icmp slt i32 %L, 1
  br i1 %cmp19, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 1, %entry ]
  %1 = add nsw i64 %indvars.iv, -1
  %arrayidx6 = getelementptr inbounds i8* %seq, i64 %1
  %2 = load i8* %arrayidx6, align 1, !tbaa !1
  %call7 = tail call i32 @SymbolIndex(i8 signext %2) #6
  %conv8 = trunc i32 %call7 to i8
  %arrayidx10 = getelementptr inbounds i8* %call, i64 %indvars.iv
  store i8 %conv8, i8* %arrayidx10, align 1, !tbaa !1
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %add2
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  ret i8* %call
}
