define void @SetAlphabet(i32 %type) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %type}, i64 0, metadata !24), !dbg !192
  %0 = load i32* @Alphabet_type, align 4, !dbg !193, !tbaa !194
  %cmp = icmp eq i32 %0, 0, !dbg !193
  br i1 %cmp, label %if.end3, label %if.then, !dbg !193

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq i32 %0, %type, !dbg !195
  br i1 %cmp1, label %sw.epilog, label %if.then2, !dbg !195

if.then2:                                         ; preds = %if.then
  tail call void (i8*, ...)* @Die(i8* getelementptr inbounds ([107 x i8]* @.str4, i64 0, i64 0)) #6, !dbg !197
  br label %sw.epilog, !dbg !197

if.end3:                                          ; preds = %entry
  switch i32 %type, label %sw.default [
    i32 3, label %for.body.lr.ph
    i32 2, label %for.body23.lr.ph
  ], !dbg !198

for.body.lr.ph:                                   ; preds = %if.end3
  store i32 3, i32* @Alphabet_type, align 4, !dbg !199, !tbaa !194
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* getelementptr inbounds ([25 x i8]* @Alphabet, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8]* @.str5, i64 0, i64 0), i64 25, i32 1, i1 false), !dbg !201
  store i32 20, i32* @Alphabet_size, align 4, !dbg !202, !tbaa !194
  store i32 24, i32* @Alphabet_iupac, align 4, !dbg !203, !tbaa !194
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !25), !dbg !204
  br label %for.body, !dbg !204

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv68 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next69, %for.body ]
  %1 = getelementptr inbounds [24 x [20 x i8]]* @Degenerate, i64 0, i64 %indvars.iv68, i64 0, !dbg !206
  tail call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 20, i32 1, i1 false), !dbg !206
  %indvars.iv.next69 = add i64 %indvars.iv68, 1, !dbg !204
  %2 = trunc i64 %indvars.iv.next69 to i32, !dbg !204
  %cmp4 = icmp slt i32 %2, 24, !dbg !204
  br i1 %cmp4, label %for.body, label %for.body8, !dbg !204

for.body8:                                        ; preds = %for.body, %for.body8
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body8 ], [ 0, %for.body ]
  %arrayidx12 = getelementptr inbounds [24 x [20 x i8]]* @Degenerate, i64 0, i64 %indvars.iv, i64 %indvars.iv, !dbg !208
  store i8 1, i8* %arrayidx12, align 1, !dbg !208, !tbaa !166
  %arrayidx14 = getelementptr inbounds [24 x i32]* @DegenCount, i64 0, i64 %indvars.iv, !dbg !211
  store i32 1, i32* %arrayidx14, align 4, !dbg !211, !tbaa !194
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !212
  %3 = trunc i64 %indvars.iv.next to i32, !dbg !212
  %cmp6 = icmp slt i32 %3, 20, !dbg !212
  br i1 %cmp6, label %for.body8, label %for.end17, !dbg !212

for.end17:                                        ; preds = %for.body8
  tail call fastcc void @set_degenerate(i8 signext 85, i8* getelementptr inbounds ([2 x i8]* @.str6, i64 0, i64 0)) #7, !dbg !213
  tail call fastcc void @set_degenerate(i8 signext 66, i8* getelementptr inbounds ([3 x i8]* @.str7, i64 0, i64 0)) #7, !dbg !214
  tail call fastcc void @set_degenerate(i8 signext 90, i8* getelementptr inbounds ([3 x i8]* @.str8, i64 0, i64 0)) #7, !dbg !215
  tail call fastcc void @set_degenerate(i8 signext 88, i8* getelementptr inbounds ([21 x i8]* @.str9, i64 0, i64 0)) #7, !dbg !216
  br label %sw.epilog, !dbg !217

for.body23.lr.ph:                                 ; preds = %if.end3
  store i32 2, i32* @Alphabet_type, align 4, !dbg !218, !tbaa !194
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* getelementptr inbounds ([25 x i8]* @Alphabet, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8]* @.str10, i64 0, i64 0), i64 18, i32 1, i1 false), !dbg !219
  store i32 4, i32* @Alphabet_size, align 4, !dbg !220, !tbaa !194
  store i32 17, i32* @Alphabet_iupac, align 4, !dbg !221, !tbaa !194
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !25), !dbg !222
  br label %for.body23, !dbg !222

for.body23:                                       ; preds = %for.body23.lr.ph, %for.body23
  %indvars.iv72 = phi i64 [ 0, %for.body23.lr.ph ], [ %indvars.iv.next73, %for.body23 ]
  %4 = getelementptr inbounds [24 x [20 x i8]]* @Degenerate, i64 0, i64 %indvars.iv72, i64 0, !dbg !224
  %5 = bitcast i8* %4 to i32*, !dbg !224
  store i32 0, i32* %5, align 1, !dbg !224
  %indvars.iv.next73 = add i64 %indvars.iv72, 1, !dbg !222
  %6 = trunc i64 %indvars.iv.next73 to i32, !dbg !222
  %cmp21 = icmp slt i32 %6, 17, !dbg !222
  br i1 %cmp21, label %for.body23, label %for.body33, !dbg !222

for.body33:                                       ; preds = %for.body23, %for.body33
  %indvars.iv70 = phi i64 [ %indvars.iv.next71, %for.body33 ], [ 0, %for.body23 ]
  %arrayidx37 = getelementptr inbounds [24 x [20 x i8]]* @Degenerate, i64 0, i64 %indvars.iv70, i64 %indvars.iv70, !dbg !226
  store i8 1, i8* %arrayidx37, align 1, !dbg !226, !tbaa !166
  %arrayidx39 = getelementptr inbounds [24 x i32]* @DegenCount, i64 0, i64 %indvars.iv70, !dbg !229
  store i32 1, i32* %arrayidx39, align 4, !dbg !229, !tbaa !194
  %indvars.iv.next71 = add i64 %indvars.iv70, 1, !dbg !230
  %7 = trunc i64 %indvars.iv.next71 to i32, !dbg !230
  %cmp31 = icmp slt i32 %7, 4, !dbg !230
  br i1 %cmp31, label %for.body33, label %for.end42, !dbg !230

for.end42:                                        ; preds = %for.body33
  tail call fastcc void @set_degenerate(i8 signext 85, i8* getelementptr inbounds ([2 x i8]* @.str11, i64 0, i64 0)) #7, !dbg !231
  tail call fastcc void @set_degenerate(i8 signext 78, i8* getelementptr inbounds ([5 x i8]* @.str12, i64 0, i64 0)) #7, !dbg !232
  tail call fastcc void @set_degenerate(i8 signext 88, i8* getelementptr inbounds ([5 x i8]* @.str12, i64 0, i64 0)) #7, !dbg !233
  tail call fastcc void @set_degenerate(i8 signext 82, i8* getelementptr inbounds ([3 x i8]* @.str13, i64 0, i64 0)) #7, !dbg !234
  tail call fastcc void @set_degenerate(i8 signext 89, i8* getelementptr inbounds ([3 x i8]* @.str14, i64 0, i64 0)) #7, !dbg !235
  tail call fastcc void @set_degenerate(i8 signext 77, i8* getelementptr inbounds ([3 x i8]* @.str15, i64 0, i64 0)) #7, !dbg !236
  tail call fastcc void @set_degenerate(i8 signext 75, i8* getelementptr inbounds ([3 x i8]* @.str16, i64 0, i64 0)) #7, !dbg !237
  tail call fastcc void @set_degenerate(i8 signext 83, i8* getelementptr inbounds ([3 x i8]* @.str17, i64 0, i64 0)) #7, !dbg !238
  tail call fastcc void @set_degenerate(i8 signext 87, i8* getelementptr inbounds ([3 x i8]* @.str18, i64 0, i64 0)) #7, !dbg !239
  tail call fastcc void @set_degenerate(i8 signext 72, i8* getelementptr inbounds ([4 x i8]* @.str19, i64 0, i64 0)) #7, !dbg !240
  tail call fastcc void @set_degenerate(i8 signext 66, i8* getelementptr inbounds ([4 x i8]* @.str20, i64 0, i64 0)) #7, !dbg !241
  tail call fastcc void @set_degenerate(i8 signext 86, i8* getelementptr inbounds ([4 x i8]* @.str21, i64 0, i64 0)) #7, !dbg !242
  tail call fastcc void @set_degenerate(i8 signext 68, i8* getelementptr inbounds ([4 x i8]* @.str22, i64 0, i64 0)) #7, !dbg !243
  br label %sw.epilog, !dbg !244

sw.default:                                       ; preds = %if.end3
  tail call void (i8*, ...)* @Die(i8* getelementptr inbounds ([48 x i8]* @.str23, i64 0, i64 0)) #6, !dbg !245
  br label %sw.epilog, !dbg !246

sw.epilog:                                        ; preds = %if.then, %if.then2, %sw.default, %for.end42, %for.end17
  ret void, !dbg !247
}
