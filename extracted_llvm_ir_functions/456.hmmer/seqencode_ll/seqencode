define i32 @seqencode(i8* nocapture %codeseq, i8* nocapture %str) #1 {
  tail call void @llvm.dbg.value(metadata i8* %codeseq, i64 0, metadata !29, metadata !81), !dbg !139
  tail call void @llvm.dbg.value(metadata i8* %str, i64 0, metadata !30, metadata !81), !dbg !140
  tail call void @llvm.dbg.value(metadata i8* %codeseq, i64 0, metadata !31, metadata !81), !dbg !141
  %1 = load i8* %str, align 1, !dbg !142, !tbaa !87
  %2 = icmp eq i8 %1, 0, !dbg !143
  br i1 %2, label %._crit_edge, label %.lr.ph, !dbg !144

.lr.ph:                                           ; preds = %0, %24
  %3 = phi i8 [ %29, %24 ], [ %1, %0 ]
  %ptr.05 = phi i8* [ %27, %24 ], [ %codeseq, %0 ]
  %.04 = phi i8* [ %28, %24 ], [ %str, %0 ]
  tail call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !61, metadata !81) #5, !dbg !145
  tail call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !69, metadata !81) #5, !dbg !149
  tail call void @llvm.dbg.value(metadata i64 4096, i64 0, metadata !70, metadata !81) #5, !dbg !151
  %isascii.i.i3 = icmp sgt i8 %3, -1, !dbg !152
  br i1 %isascii.i.i3, label %4, label %9, !dbg !152

; <label>:4                                       ; preds = %.lr.ph
  %5 = sext i8 %3 to i64, !dbg !153
  %6 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %5, !dbg !153
  %7 = load i32* %6, align 4, !dbg !153, !tbaa !154
  %8 = and i32 %7, 4096, !dbg !156
  br label %islower.exit, !dbg !152

; <label>:9                                       ; preds = %.lr.ph
  %10 = sext i8 %3 to i32, !dbg !142
  %11 = tail call i32 @__maskrune(i32 %10, i64 4096) #6, !dbg !157
  br label %islower.exit, !dbg !152

islower.exit:                                     ; preds = %4, %9
  %.sink.i.in.i = phi i32 [ %8, %4 ], [ %11, %9 ], !dbg !158
  %.sink.i.i = icmp eq i32 %.sink.i.in.i, 0, !dbg !159
  %.pre = load i8* %.04, align 1, !dbg !160, !tbaa !87
  br i1 %.sink.i.i, label %.preheader, label %12, !dbg !163

; <label>:12                                      ; preds = %islower.exit
  %13 = sext i8 %.pre to i32, !dbg !164
  tail call void @llvm.dbg.value(metadata i32 %13, i64 0, metadata !76, metadata !81) #5, !dbg !165
  %14 = tail call i32 @__toupper(i32 %13) #6, !dbg !167
  %15 = trunc i32 %14 to i8, !dbg !168
  store i8 %15, i8* %.04, align 1, !dbg !169, !tbaa !87
  br label %.preheader, !dbg !170

.preheader:                                       ; preds = %islower.exit, %12
  %16 = phi i8 [ %15, %12 ], [ %.pre, %islower.exit ]
  br label %17, !dbg !160

; <label>:17                                      ; preds = %17, %.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %17 ], [ 0, %.preheader ]
  %18 = getelementptr inbounds [0 x %struct.iupactype]* @iupac, i64 0, i64 %indvars.iv, i32 0, !dbg !171
  %19 = load i8* %18, align 1, !dbg !171, !tbaa !172
  %20 = icmp ne i8 %16, %19, !dbg !174
  %21 = icmp slt i64 %indvars.iv, 18, !dbg !175
  %or.cond = and i1 %21, %20, !dbg !176
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !176
  br i1 %or.cond, label %17, label %.critedge, !dbg !176

.critedge:                                        ; preds = %17
  %22 = trunc i64 %indvars.iv to i32, !dbg !177
  %23 = icmp sgt i32 %22, 17, !dbg !177
  br i1 %23, label %._crit_edge, label %24, !dbg !179

; <label>:24                                      ; preds = %.critedge
  %25 = getelementptr inbounds [0 x %struct.iupactype]* @iupac, i64 0, i64 %indvars.iv, i32 2, !dbg !180
  %26 = load i8* %25, align 1, !dbg !180, !tbaa !181
  store i8 %26, i8* %ptr.05, align 1, !dbg !182, !tbaa !87
  %27 = getelementptr inbounds i8* %ptr.05, i64 1, !dbg !183
  tail call void @llvm.dbg.value(metadata i8* %27, i64 0, metadata !31, metadata !81), !dbg !141
  %28 = getelementptr inbounds i8* %.04, i64 1, !dbg !184
  tail call void @llvm.dbg.value(metadata i8* %28, i64 0, metadata !30, metadata !81), !dbg !140
  %29 = load i8* %28, align 1, !dbg !142, !tbaa !87
  %30 = icmp eq i8 %29, 0, !dbg !143
  br i1 %30, label %._crit_edge, label %.lr.ph, !dbg !144

._crit_edge:                                      ; preds = %.critedge, %24, %0
  %ptr.0.lcssa = phi i8* [ %codeseq, %0 ], [ %ptr.05, %.critedge ], [ %27, %24 ]
  %.02 = phi i32 [ 1, %0 ], [ 0, %.critedge ], [ 1, %24 ]
  store i8 0, i8* %ptr.0.lcssa, align 1, !dbg !185, !tbaa !87
  ret i32 %.02, !dbg !187
}
