define i32 @seqencode(i8* nocapture %codeseq, i8* nocapture %str) #1 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %codeseq}, i64 0, metadata !45), !dbg !97
  tail call void @llvm.dbg.value(metadata !{i8* %str}, i64 0, metadata !46), !dbg !98
  tail call void @llvm.dbg.value(metadata !{i8* %codeseq}, i64 0, metadata !47), !dbg !99
  %0 = load i8* %str, align 1, !dbg !100, !tbaa !78
  %cmp35 = icmp eq i8 %0, 0, !dbg !100
  br i1 %cmp35, label %return, label %while.body.lr.ph, !dbg !100

while.body.lr.ph:                                 ; preds = %entry
  %call = tail call i16** @__ctype_b_loc() #6, !dbg !101
  br label %while.body, !dbg !100

while.body:                                       ; preds = %while.body.lr.ph, %if.else
  %conv38.in = phi i8 [ %0, %while.body.lr.ph ], [ %7, %if.else ]
  %ptr.037 = phi i8* [ %codeseq, %while.body.lr.ph ], [ %incdec.ptr, %if.else ]
  %str.addr.036 = phi i8* [ %str, %while.body.lr.ph ], [ %incdec.ptr21, %if.else ]
  %idxprom = sext i8 %conv38.in to i64, !dbg !101
  %1 = load i16** %call, align 8, !dbg !101, !tbaa !102
  %arrayidx = getelementptr inbounds i16* %1, i64 %idxprom, !dbg !101
  %2 = load i16* %arrayidx, align 2, !dbg !101, !tbaa !103
  %and = and i16 %2, 512, !dbg !101
  %tobool = icmp eq i16 %and, 0, !dbg !101
  br i1 %tobool, label %for.cond.preheader, label %if.then, !dbg !101

if.then:                                          ; preds = %while.body
  %conv38 = sext i8 %conv38.in to i32, !dbg !100
  %call5 = tail call i32 @toupper(i32 %conv38) #7, !dbg !104
  tail call void @llvm.dbg.value(metadata !{i32 %call5}, i64 0, metadata !49), !dbg !104
  %conv6 = trunc i32 %call5 to i8, !dbg !106
  store i8 %conv6, i8* %str.addr.036, align 1, !dbg !106, !tbaa !78
  br label %for.cond.preheader, !dbg !106

for.cond.preheader:                               ; preds = %while.body, %if.then
  %3 = phi i8 [ %conv38.in, %while.body ], [ %conv6, %if.then ]
  br label %for.cond, !dbg !107

for.cond:                                         ; preds = %for.cond, %for.cond.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond ], [ 0, %for.cond.preheader ]
  %idx.0 = phi i32 [ %inc, %for.cond ], [ 0, %for.cond.preheader ]
  %sym = getelementptr inbounds [0 x %struct.iupactype]* @iupac, i64 0, i64 %indvars.iv, i32 0, !dbg !107
  %4 = load i8* %sym, align 1, !dbg !107, !tbaa !78
  %cmp11 = icmp ne i8 %3, %4, !dbg !107
  %5 = trunc i64 %indvars.iv to i32, !dbg !107
  %cmp13 = icmp slt i32 %5, 18, !dbg !107
  %or.cond = and i1 %cmp11, %cmp13, !dbg !107
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !107
  %inc = add nsw i32 %idx.0, 1, !dbg !107
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !48), !dbg !107
  br i1 %or.cond, label %for.cond, label %for.end, !dbg !107

for.end:                                          ; preds = %for.cond
  %cmp15 = icmp sgt i32 %idx.0, 17, !dbg !109
  br i1 %cmp15, label %return, label %if.else, !dbg !109

if.else:                                          ; preds = %for.end
  %code = getelementptr inbounds [0 x %struct.iupactype]* @iupac, i64 0, i64 %indvars.iv, i32 2, !dbg !110
  %6 = load i8* %code, align 1, !dbg !110, !tbaa !78
  store i8 %6, i8* %ptr.037, align 1, !dbg !110, !tbaa !78
  %incdec.ptr = getelementptr inbounds i8* %ptr.037, i64 1, !dbg !111
  tail call void @llvm.dbg.value(metadata !{i8* %incdec.ptr}, i64 0, metadata !47), !dbg !111
  %incdec.ptr21 = getelementptr inbounds i8* %str.addr.036, i64 1, !dbg !112
  tail call void @llvm.dbg.value(metadata !{i8* %incdec.ptr21}, i64 0, metadata !46), !dbg !112
  %7 = load i8* %incdec.ptr21, align 1, !dbg !100, !tbaa !78
  %cmp = icmp eq i8 %7, 0, !dbg !100
  br i1 %cmp, label %return, label %while.body, !dbg !100

return:                                           ; preds = %if.else, %for.end, %entry
  %ptr.0.lcssa = phi i8* [ %codeseq, %entry ], [ %ptr.037, %for.end ], [ %incdec.ptr, %if.else ]
  %retval.0 = phi i32 [ 1, %entry ], [ 0, %for.end ], [ 1, %if.else ]
  store i8 0, i8* %ptr.0.lcssa, align 1, !dbg !113, !tbaa !78
  ret i32 %retval.0, !dbg !115
}
