define i32 @seqcmp(i8* nocapture readonly %s1, i8* nocapture readonly %s2, i32 %allow) #0 {
  tail call void @llvm.dbg.value(metadata i8* %s1, i64 0, metadata !12, metadata !81), !dbg !82
  tail call void @llvm.dbg.value(metadata i8* %s2, i64 0, metadata !13, metadata !81), !dbg !83
  tail call void @llvm.dbg.value(metadata i32 %allow, i64 0, metadata !14, metadata !81), !dbg !84
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !15, metadata !81), !dbg !85
  %1 = load i8* %s1, align 1, !dbg !86, !tbaa !87
  %2 = icmp eq i8 %1, 0, !dbg !90
  br i1 %2, label %.critedge._crit_edge, label %.lr.ph11, !dbg !91

.lr.ph11:                                         ; preds = %0, %8
  %3 = phi i8 [ %13, %8 ], [ %1, %0 ]
  %mmat.010 = phi i32 [ %mmat.0., %8 ], [ 0, %0 ]
  %.09 = phi i8* [ %11, %8 ], [ %s1, %0 ]
  %.028 = phi i8* [ %12, %8 ], [ %s2, %0 ]
  %4 = load i8* %.028, align 1, !dbg !92, !tbaa !87
  %5 = icmp eq i8 %4, 0, !dbg !93
  %6 = icmp sgt i32 %mmat.010, %allow, !dbg !94
  %or.cond = or i1 %6, %5, !dbg !95
  br i1 %or.cond, label %.critedge.preheader, label %8, !dbg !95

.critedge.preheader:                              ; preds = %.lr.ph11
  tail call void @llvm.dbg.value(metadata i8* %15, i64 0, metadata !12, metadata !81), !dbg !82
  %7 = icmp sgt i32 %mmat.010, %allow, !dbg !96
  br i1 %7, label %.critedge._crit_edge, label %.critedge, !dbg !97

; <label>:8                                       ; preds = %.lr.ph11
  %9 = and i8 %4, %3, !dbg !98
  %not. = icmp ne i8 %9, %4, !dbg !101
  %10 = zext i1 %not. to i32, !dbg !101
  %mmat.0. = add nsw i32 %10, %mmat.010, !dbg !101
  %11 = getelementptr inbounds i8* %.09, i64 1, !dbg !102
  tail call void @llvm.dbg.value(metadata i8* %11, i64 0, metadata !12, metadata !81), !dbg !82
  %12 = getelementptr inbounds i8* %.028, i64 1, !dbg !103
  tail call void @llvm.dbg.value(metadata i8* %12, i64 0, metadata !13, metadata !81), !dbg !83
  %13 = load i8* %11, align 1, !dbg !86, !tbaa !87
  %14 = icmp eq i8 %13, 0, !dbg !90
  br i1 %14, label %.critedge._crit_edge, label %.lr.ph11, !dbg !91

.critedge:                                        ; preds = %.critedge.preheader, %.critedge
  %mmat.27 = phi i32 [ %16, %.critedge ], [ %mmat.010, %.critedge.preheader ]
  %.16 = phi i8* [ %15, %.critedge ], [ %.09, %.critedge.preheader ]
  %15 = getelementptr inbounds i8* %.16, i64 1, !dbg !104
  %16 = add nsw i32 %mmat.27, 1, !dbg !105
  tail call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !15, metadata !81), !dbg !85
  tail call void @llvm.dbg.value(metadata i8* %15, i64 0, metadata !12, metadata !81), !dbg !82
  %17 = load i8* %15, align 1, !dbg !106, !tbaa !87
  %18 = icmp slt i32 %mmat.27, %allow, !dbg !96
  %not.3 = icmp ne i8 %17, 0, !dbg !107
  %. = and i1 %18, %not.3, !dbg !107
  br i1 %., label %.critedge, label %.critedge._crit_edge, !dbg !97

.critedge._crit_edge:                             ; preds = %8, %.critedge, %.critedge.preheader, %0
  %mmat.2.lcssa = phi i32 [ %mmat.010, %.critedge.preheader ], [ 0, %0 ], [ %16, %.critedge ], [ %mmat.0., %8 ]
  ret i32 %mmat.2.lcssa, !dbg !108
}
