define i32 @seqncmp(i8* nocapture readonly %s1, i8* nocapture readonly %s2, i32 %n, i32 %allow) #0 {
  tail call void @llvm.dbg.value(metadata i8* %s1, i64 0, metadata !20, metadata !81), !dbg !109
  tail call void @llvm.dbg.value(metadata i8* %s2, i64 0, metadata !21, metadata !81), !dbg !110
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !22, metadata !81), !dbg !111
  tail call void @llvm.dbg.value(metadata i32 %allow, i64 0, metadata !23, metadata !81), !dbg !112
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !24, metadata !81), !dbg !113
  %1 = load i8* %s2, align 1, !dbg !114, !tbaa !87
  %2 = icmp eq i8 %1, 0, !dbg !115
  br i1 %2, label %.critedge.preheader, label %.lr.ph15, !dbg !116

.lr.ph15:                                         ; preds = %0, %14
  %3 = phi i8 [ %17, %14 ], [ %1, %0 ]
  %mmat.014 = phi i32 [ %mmat.1, %14 ], [ 0, %0 ]
  %.0113 = phi i32 [ %4, %14 ], [ %n, %0 ]
  %.0212 = phi i8* [ %16, %14 ], [ %s2, %0 ]
  %.0311 = phi i8* [ %15, %14 ], [ %s1, %0 ]
  %4 = add nsw i32 %.0113, -1, !dbg !117
  tail call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !22, metadata !81), !dbg !111
  %5 = icmp eq i32 %.0113, 0, !dbg !118
  br i1 %5, label %.critedge.preheader, label %7, !dbg !119

.critedge.preheader:                              ; preds = %.lr.ph15, %14, %0
  %mmat.0.lcssa = phi i32 [ 0, %0 ], [ %mmat.014, %.lr.ph15 ], [ %mmat.1, %14 ]
  %.03.lcssa = phi i8* [ %s1, %0 ], [ %.0311, %.lr.ph15 ], [ %15, %14 ]
  %.1.ph = phi i32 [ %n, %0 ], [ %4, %.lr.ph15 ], [ %4, %14 ]
  %6 = icmp eq i32 %.1.ph, 0, !dbg !120
  br i1 %6, label %.thread, label %.lr.ph, !dbg !121

; <label>:7                                       ; preds = %.lr.ph15
  %8 = load i8* %.0311, align 1, !dbg !122, !tbaa !87
  %9 = and i8 %8, %3, !dbg !122
  %10 = icmp eq i8 %9, %3, !dbg !122
  br i1 %10, label %14, label %11, !dbg !125

; <label>:11                                      ; preds = %7
  %12 = add nsw i32 %mmat.014, 1, !dbg !126
  tail call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !24, metadata !81), !dbg !113
  %13 = icmp slt i32 %mmat.014, %allow, !dbg !127
  br i1 %13, label %14, label %.thread, !dbg !128

; <label>:14                                      ; preds = %11, %7
  %mmat.1 = phi i32 [ %mmat.014, %7 ], [ %12, %11 ]
  %15 = getelementptr inbounds i8* %.0311, i64 1, !dbg !129
  tail call void @llvm.dbg.value(metadata i8* %15, i64 0, metadata !20, metadata !81), !dbg !109
  %16 = getelementptr inbounds i8* %.0212, i64 1, !dbg !130
  tail call void @llvm.dbg.value(metadata i8* %16, i64 0, metadata !21, metadata !81), !dbg !110
  %17 = load i8* %16, align 1, !dbg !114, !tbaa !87
  %18 = icmp eq i8 %17, 0, !dbg !115
  br i1 %18, label %.critedge.preheader, label %.lr.ph15, !dbg !116

.lr.ph:                                           ; preds = %.critedge.preheader, %.critedge
  %.in = phi i32 [ %19, %.critedge ], [ %.1.ph, %.critedge.preheader ]
  %mmat.29 = phi i32 [ %23, %.critedge ], [ %mmat.0.lcssa, %.critedge.preheader ]
  %.148 = phi i8* [ %22, %.critedge ], [ %.03.lcssa, %.critedge.preheader ]
  %19 = add nsw i32 %.in, -1, !dbg !131
  tail call void @llvm.dbg.value(metadata i8* %22, i64 0, metadata !20, metadata !81), !dbg !109
  %20 = load i8* %.148, align 1, !dbg !132, !tbaa !87
  %21 = icmp sle i32 %mmat.29, %allow, !dbg !133
  %not. = icmp ne i8 %20, 0, !dbg !134
  %. = and i1 %21, %not., !dbg !134
  br i1 %., label %.critedge, label %.thread, !dbg !135

.critedge:                                        ; preds = %.lr.ph
  %22 = getelementptr inbounds i8* %.148, i64 1, !dbg !136
  %23 = add nsw i32 %mmat.29, 1, !dbg !137
  tail call void @llvm.dbg.value(metadata i32 %23, i64 0, metadata !24, metadata !81), !dbg !113
  %24 = icmp eq i32 %19, 0, !dbg !120
  br i1 %24, label %.thread, label %.lr.ph, !dbg !121

.thread:                                          ; preds = %11, %.lr.ph, %.critedge, %.critedge.preheader
  %.0 = phi i32 [ %mmat.0.lcssa, %.critedge.preheader ], [ %23, %.critedge ], [ %mmat.29, %.lr.ph ], [ %12, %11 ]
  ret i32 %.0, !dbg !138
}
