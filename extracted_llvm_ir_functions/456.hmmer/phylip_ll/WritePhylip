define void @WritePhylip(%struct._IO_FILE* nocapture %fp, %struct.msa_struct* nocapture %msa) #0 {
entry:
  %buf = alloca [51 x i8], align 16
  %0 = getelementptr inbounds [51 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 51, i8* %0) #5
  %nseq = getelementptr inbounds %struct.msa_struct* %msa, i64 0, i32 4
  %1 = load i32* %nseq, align 4, !tbaa !4
  %alen = getelementptr inbounds %struct.msa_struct* %msa, i64 0, i32 3
  %2 = load i32* %alen, align 4, !tbaa !4
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([9 x i8]* @.str4, i64 0, i64 0), i32 %1, i32 %2) #6
  %3 = load i32* %alen, align 4, !tbaa !4
  %cmp41 = icmp sgt i32 %3, 0
  br i1 %cmp41, label %for.body.lr.ph, label %for.end22

for.body.lr.ph:                                   ; preds = %entry
  %aseq = getelementptr inbounds %struct.msa_struct* %msa, i64 0, i32 0
  %arrayidx10 = getelementptr inbounds [51 x i8]* %buf, i64 0, i64 50
  %sqname = getelementptr inbounds %struct.msa_struct* %msa, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc21
  %indvars.iv43 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next44, %for.inc21 ]
  %4 = trunc i64 %indvars.iv43 to i32
  %cmp2 = icmp sgt i32 %4, 0
  br i1 %cmp2, label %if.then, label %for.cond4.preheader

if.then:                                          ; preds = %for.body
  %fputc = call i32 @fputc(i32 10, %struct._IO_FILE* %fp)
  br label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %for.body, %if.then
  %5 = load i32* %nseq, align 4, !tbaa !4
  %cmp639 = icmp sgt i32 %5, 0
  br i1 %cmp639, label %for.body7, label %for.inc21

for.body7:                                        ; preds = %for.cond4.preheader, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.cond4.preheader ]
  %6 = load i8*** %aseq, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i8** %6, i64 %indvars.iv
  %7 = load i8** %arrayidx, align 8, !tbaa !0
  %add.ptr = getelementptr inbounds i8* %7, i64 %indvars.iv43
  %call8 = call i8* @strncpy(i8* %0, i8* %add.ptr, i64 50) #6
  store i8 0, i8* %arrayidx10, align 2, !tbaa !1
  br i1 %cmp2, label %if.then13, label %if.else

if.then13:                                        ; preds = %for.body7
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([4 x i8]* @.str6, i64 0, i64 0), i8* %0) #6
  br label %for.inc

if.else:                                          ; preds = %for.body7
  %8 = load i8*** %sqname, align 8, !tbaa !0
  %arrayidx17 = getelementptr inbounds i8** %8, i64 %indvars.iv
  %9 = load i8** %arrayidx17, align 8, !tbaa !0
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([12 x i8]* @.str7, i64 0, i64 0), i8* %9, i8* %0) #6
  br label %for.inc

for.inc:                                          ; preds = %if.then13, %if.else
  %indvars.iv.next = add i64 %indvars.iv, 1
  %10 = load i32* %nseq, align 4, !tbaa !4
  %11 = trunc i64 %indvars.iv.next to i32
  %cmp6 = icmp slt i32 %11, %10
  br i1 %cmp6, label %for.body7, label %for.inc21

for.inc21:                                        ; preds = %for.inc, %for.cond4.preheader
  %indvars.iv.next44 = add i64 %indvars.iv43, 50
  %12 = load i32* %alen, align 4, !tbaa !4
  %13 = trunc i64 %indvars.iv.next44 to i32
  %cmp = icmp slt i32 %13, %12
  br i1 %cmp, label %for.body, label %for.end22

for.end22:                                        ; preds = %for.inc21, %entry
  call void @llvm.lifetime.end(i64 51, i8* %0) #5
  ret void
}
