define %struct.msa_struct* @ReadClustal(%struct.msafile_struct* %afp) #0 {
entry:
  %s = alloca i8*, align 8
  %slen = alloca i32, align 4
  %f = getelementptr inbounds %struct.msafile_struct* %afp, i64 0, i32 0
  %0 = load %struct._IO_FILE** %f, align 8, !tbaa !0
  %call = call i32 @feof(%struct._IO_FILE* %0) #5
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %while.cond.preheader, label %return

while.cond.preheader:                             ; preds = %entry
  %call163 = call i8* @MSAFileGetLine(%struct.msafile_struct* %afp) #5
  store i8* %call163, i8** %s, align 8, !tbaa !0
  %cmp64 = icmp eq i8* %call163, null
  br i1 %cmp64, label %return, label %while.body

while.body:                                       ; preds = %while.cond.preheader, %while.cond.backedge
  %.pr = phi i8* [ %call1, %while.cond.backedge ], [ %call163, %while.cond.preheader ]
  %call2 = call i32 @strncmp(i8* %.pr, i8* getelementptr inbounds ([8 x i8]* @.str, i64 0, i64 0), i64 7) #6
  %cmp3 = icmp eq i32 %call2, 0
  br i1 %cmp3, label %land.lhs.true, label %while.cond.backedge

while.cond.backedge:                              ; preds = %while.body, %land.lhs.true
  %call1 = call i8* @MSAFileGetLine(%struct.msafile_struct* %afp) #5
  store i8* %call1, i8** %s, align 8, !tbaa !0
  %cmp = icmp eq i8* %call1, null
  br i1 %cmp, label %return, label %while.body

land.lhs.true:                                    ; preds = %while.body
  %call4 = call i8* @strstr(i8* %.pr, i8* getelementptr inbounds ([28 x i8]* @.str1, i64 0, i64 0)) #6
  %cmp5 = icmp eq i8* %call4, null
  br i1 %cmp5, label %while.cond.backedge, label %while.end

while.end:                                        ; preds = %land.lhs.true
  %cmp8 = icmp eq i8* %.pr, null
  br i1 %cmp8, label %return, label %if.end10

if.end10:                                         ; preds = %while.end
  %call11 = call %struct.msa_struct* @MSAAlloc(i32 10, i32 0) #5
  %call1361 = call i8* @MSAFileGetLine(%struct.msafile_struct* %afp) #5
  store i8* %call1361, i8** %s, align 8, !tbaa !0
  %cmp1462 = icmp eq i8* %call1361, null
  br i1 %cmp1462, label %while.end43, label %while.body15.lr.ph

while.body15.lr.ph:                               ; preds = %if.end10
  %lastidx = getelementptr inbounds %struct.msa_struct* %call11, i64 0, i32 45
  %aseq = getelementptr inbounds %struct.msa_struct* %call11, i64 0, i32 0
  %sqlen = getelementptr inbounds %struct.msa_struct* %call11, i64 0, i32 42
  %linenumber = getelementptr inbounds %struct.msafile_struct* %afp, i64 0, i32 2
  %fname = getelementptr inbounds %struct.msafile_struct* %afp, i64 0, i32 1
  br label %while.body15

while.body15:                                     ; preds = %while.body15.lr.ph, %while.cond12.backedge
  %call16 = call i8* @sre_strtok(i8** %s, i8* getelementptr inbounds ([4 x i8]* @.str2, i64 0, i64 0), i32* null) #5
  %cmp17 = icmp eq i8* %call16, null
  br i1 %cmp17, label %while.cond12.backedge, label %if.end19

if.end19:                                         ; preds = %while.body15
  %call20 = call i8* @sre_strtok(i8** %s, i8* getelementptr inbounds ([4 x i8]* @.str2, i64 0, i64 0), i32* %slen) #5
  %cmp21 = icmp eq i8* %call20, null
  br i1 %cmp21, label %while.cond12.backedge, label %if.end23

if.end23:                                         ; preds = %if.end19
  %call24 = call i8* @sre_strtok(i8** %s, i8* getelementptr inbounds ([2 x i8]* @.str3, i64 0, i64 0), i32* null) #5
  %call25 = call i8* @strpbrk(i8* %call16, i8* getelementptr inbounds ([4 x i8]* @.str4, i64 0, i64 0)) #6
  %cmp26 = icmp eq i8* %call25, null
  br i1 %cmp26, label %if.end31, label %land.lhs.true27

land.lhs.true27:                                  ; preds = %if.end23
  %call28 = call i8* @strpbrk(i8* %call20, i8* getelementptr inbounds ([4 x i8]* @.str4, i64 0, i64 0)) #6
  %cmp29 = icmp eq i8* %call28, null
  br i1 %cmp29, label %if.end31, label %while.cond12.backedge

if.end31:                                         ; preds = %land.lhs.true27, %if.end23
  %cmp32 = icmp eq i8* %call24, null
  br i1 %cmp32, label %if.end34, label %if.then33

if.then33:                                        ; preds = %if.end31
  %1 = load i32* %linenumber, align 4, !tbaa !3
  %2 = load i8** %fname, align 8, !tbaa !0
  call void (i8*, ...)* @Die(i8* getelementptr inbounds ([64 x i8]* @.str5, i64 0, i64 0), i32 %1, i8* %2) #5
  br label %if.end34

if.end34:                                         ; preds = %if.end31, %if.then33
  %3 = load i32* %lastidx, align 4, !tbaa !3
  %add = add nsw i32 %3, 1
  %call35 = call i32 @MSAGetSeqidx(%struct.msa_struct* %call11, i8* %call16, i32 %add) #5
  store i32 %call35, i32* %lastidx, align 4, !tbaa !3
  %idxprom = sext i32 %call35 to i64
  %4 = load i8*** %aseq, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i8** %4, i64 %idxprom
  %5 = load i32** %sqlen, align 8, !tbaa !0
  %arrayidx38 = getelementptr inbounds i32* %5, i64 %idxprom
  %6 = load i32* %arrayidx38, align 4, !tbaa !3
  %7 = load i32* %slen, align 4, !tbaa !3
  %call39 = call i32 @sre_strcat(i8** %arrayidx, i32 %6, i8* %call20, i32 %7) #5
  %8 = load i32** %sqlen, align 8, !tbaa !0
  %arrayidx42 = getelementptr inbounds i32* %8, i64 %idxprom
  store i32 %call39, i32* %arrayidx42, align 4, !tbaa !3
  br label %while.cond12.backedge

while.cond12.backedge:                            ; preds = %if.end34, %while.body15, %if.end19, %land.lhs.true27
  %call13 = call i8* @MSAFileGetLine(%struct.msafile_struct* %afp) #5
  store i8* %call13, i8** %s, align 8, !tbaa !0
  %cmp14 = icmp eq i8* %call13, null
  br i1 %cmp14, label %while.end43, label %while.body15

while.end43:                                      ; preds = %while.cond12.backedge, %if.end10
  call void @MSAVerifyParse(%struct.msa_struct* %call11) #5
  br label %return

return:                                           ; preds = %while.cond.preheader, %while.cond.backedge, %while.end, %entry, %while.end43
  %retval.0 = phi %struct.msa_struct* [ %call11, %while.end43 ], [ null, %entry ], [ null, %while.end ], [ null, %while.cond.backedge ], [ null, %while.cond.preheader ]
  ret %struct.msa_struct* %retval.0
}
