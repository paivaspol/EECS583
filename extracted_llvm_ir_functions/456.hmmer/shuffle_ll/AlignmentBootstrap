define i32 @AlignmentBootstrap(i8** nocapture readonly %ali1, i8** nocapture readonly %ali2, i32 %nseq, i32 %alen) #0 {
  tail call void @llvm.dbg.value(metadata i8** %ali1, i64 0, metadata !93, metadata !145), !dbg !593
  tail call void @llvm.dbg.value(metadata i8** %ali2, i64 0, metadata !94, metadata !145), !dbg !594
  tail call void @llvm.dbg.value(metadata i32 %nseq, i64 0, metadata !95, metadata !145), !dbg !595
  tail call void @llvm.dbg.value(metadata i32 %alen, i64 0, metadata !96, metadata !145), !dbg !596
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !97, metadata !145), !dbg !597
  %1 = icmp sgt i32 %alen, 0, !dbg !598
  br i1 %1, label %.lr.ph8, label %.preheader, !dbg !601

.lr.ph8:                                          ; preds = %0
  %2 = sitofp i32 %alen to double, !dbg !602
  %3 = icmp sgt i32 %nseq, 0, !dbg !604
  %4 = add i32 %nseq, -1, !dbg !601
  %5 = add i32 %alen, -1, !dbg !601
  br label %9, !dbg !601

.preheader:                                       ; preds = %._crit_edge5, %0
  %6 = icmp sgt i32 %nseq, 0, !dbg !607
  br i1 %6, label %.lr.ph, label %._crit_edge, !dbg !610

.lr.ph:                                           ; preds = %.preheader
  %7 = sext i32 %alen to i64, !dbg !611
  %8 = add i32 %nseq, -1, !dbg !610
  br label %22, !dbg !610

; <label>:9                                       ; preds = %._crit_edge5, %.lr.ph8
  %indvars.iv13 = phi i64 [ 0, %.lr.ph8 ], [ %indvars.iv.next14, %._crit_edge5 ]
  %10 = tail call double @sre_random() #6, !dbg !602
  tail call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !98, metadata !145), !dbg !612
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !99, metadata !145), !dbg !613
  br i1 %3, label %.lr.ph4, label %._crit_edge5, !dbg !614

.lr.ph4:                                          ; preds = %9
  %11 = fmul double %2, %10, !dbg !602
  %12 = fptosi double %11 to i32, !dbg !602
  %13 = sext i32 %12 to i64, !dbg !615
  br label %14, !dbg !614

; <label>:14                                      ; preds = %14, %.lr.ph4
  %indvars.iv9 = phi i64 [ 0, %.lr.ph4 ], [ %indvars.iv.next10, %14 ]
  %15 = getelementptr inbounds i8** %ali2, i64 %indvars.iv9, !dbg !615
  %16 = load i8** %15, align 8, !dbg !615, !tbaa !209
  %17 = getelementptr inbounds i8* %16, i64 %13, !dbg !615
  %18 = load i8* %17, align 1, !dbg !615, !tbaa !162
  %19 = getelementptr inbounds i8** %ali1, i64 %indvars.iv9, !dbg !616
  %20 = load i8** %19, align 8, !dbg !616, !tbaa !209
  %21 = getelementptr inbounds i8* %20, i64 %indvars.iv13, !dbg !616
  store i8 %18, i8* %21, align 1, !dbg !617, !tbaa !162
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !614
  %lftr.wideiv11 = trunc i64 %indvars.iv9 to i32, !dbg !614
  %exitcond12 = icmp eq i32 %lftr.wideiv11, %4, !dbg !614
  br i1 %exitcond12, label %._crit_edge5, label %14, !dbg !614

._crit_edge5:                                     ; preds = %14, %9
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1, !dbg !601
  %lftr.wideiv15 = trunc i64 %indvars.iv13 to i32, !dbg !601
  %exitcond16 = icmp eq i32 %lftr.wideiv15, %5, !dbg !601
  br i1 %exitcond16, label %.preheader, label %9, !dbg !601

; <label>:22                                      ; preds = %22, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %22 ]
  %23 = getelementptr inbounds i8** %ali1, i64 %indvars.iv, !dbg !611
  %24 = load i8** %23, align 8, !dbg !611, !tbaa !209
  %25 = getelementptr inbounds i8* %24, i64 %7, !dbg !611
  store i8 0, i8* %25, align 1, !dbg !618, !tbaa !162
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !610
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !610
  %exitcond = icmp eq i32 %lftr.wideiv, %8, !dbg !610
  br i1 %exitcond, label %._crit_edge, label %22, !dbg !610

._crit_edge:                                      ; preds = %22, %.preheader
  ret i32 1, !dbg !619
}
