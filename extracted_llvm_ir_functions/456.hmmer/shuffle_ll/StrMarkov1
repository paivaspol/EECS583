define i32 @StrMarkov1(i8* nocapture %s1, i8* nocapture readonly %s2) #0 {
  %p = alloca [26 x [26 x float]], align 16
  tail call void @llvm.dbg.value(metadata i8* %s1, i64 0, metadata !51, metadata !145), !dbg !420
  tail call void @llvm.dbg.value(metadata i8* %s2, i64 0, metadata !52, metadata !145), !dbg !421
  %1 = bitcast [26 x [26 x float]]* %p to i8*, !dbg !422
  call void @llvm.lifetime.start(i64 2704, i8* %1) #5, !dbg !422
  tail call void @llvm.dbg.declare(metadata [26 x [26 x float]]* %p, metadata !58, metadata !145), !dbg !423
  %2 = tail call i64 @strlen(i8* %s2) #6, !dbg !424
  %3 = trunc i64 %2 to i32, !dbg !424
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !53, metadata !145), !dbg !425
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !54, metadata !145), !dbg !426
  %4 = icmp sgt i32 %3, 0, !dbg !427
  br i1 %4, label %.lr.ph13, label %.preheader2, !dbg !430

.lr.ph13:                                         ; preds = %0
  %sext = shl i64 %2, 32, !dbg !430
  %5 = ashr exact i64 %sext, 32, !dbg !430
  br label %8, !dbg !430

; <label>:6                                       ; preds = %isalpha.exit
  %7 = icmp slt i64 %indvars.iv.next25, %5, !dbg !427
  br i1 %7, label %8, label %.preheader2, !dbg !430

; <label>:8                                       ; preds = %.lr.ph13, %6
  %indvars.iv24 = phi i64 [ 0, %.lr.ph13 ], [ %indvars.iv.next25, %6 ]
  %9 = getelementptr inbounds i8* %s2, i64 %indvars.iv24, !dbg !431
  %10 = load i8* %9, align 1, !dbg !431, !tbaa !162
  tail call void @llvm.dbg.value(metadata i32 %17, i64 0, metadata !125, metadata !145) #5, !dbg !433
  tail call void @llvm.dbg.value(metadata i32 %17, i64 0, metadata !133, metadata !145) #5, !dbg !435
  tail call void @llvm.dbg.value(metadata i64 256, i64 0, metadata !134, metadata !145) #5, !dbg !437
  %isascii.i.i1 = icmp sgt i8 %10, -1, !dbg !438
  br i1 %isascii.i.i1, label %11, label %16, !dbg !438

; <label>:11                                      ; preds = %8
  %12 = sext i8 %10 to i64, !dbg !439
  %13 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %12, !dbg !439
  %14 = load i32* %13, align 4, !dbg !439, !tbaa !189
  %15 = and i32 %14, 256, !dbg !440
  br label %isalpha.exit, !dbg !438

; <label>:16                                      ; preds = %8
  %17 = sext i8 %10 to i32, !dbg !441
  %18 = tail call i32 @__maskrune(i32 %17, i64 256) #6, !dbg !442
  br label %isalpha.exit, !dbg !438

isalpha.exit:                                     ; preds = %11, %16
  %.sink.i.in.i = phi i32 [ %15, %11 ], [ %18, %16 ], !dbg !443
  %.sink.i.i = icmp eq i32 %.sink.i.in.i, 0, !dbg !444
  %indvars.iv.next25 = add nuw nsw i64 %indvars.iv24, 1, !dbg !430
  br i1 %.sink.i.i, label %.loopexit, label %6, !dbg !445

.preheader2:                                      ; preds = %0, %6, %.preheader2
  %indvars.iv21 = phi i64 [ %indvars.iv.next22, %.preheader2 ], [ 0, %6 ], [ 0, %0 ]
  %19 = getelementptr inbounds [26 x [26 x float]]* %p, i64 0, i64 %indvars.iv21, i64 0, !dbg !446
  call void @FSet(float* %19, i32 26, float 0.000000e+00) #6, !dbg !449
  %indvars.iv.next22 = add nuw nsw i64 %indvars.iv21, 1, !dbg !450
  %exitcond23 = icmp eq i64 %indvars.iv.next22, 26, !dbg !450
  br i1 %exitcond23, label %20, label %.preheader2, !dbg !450

; <label>:20                                      ; preds = %.preheader2
  %21 = load i8* %s2, align 1, !dbg !451, !tbaa !162
  %22 = sext i8 %21 to i32, !dbg !452
  call void @llvm.dbg.value(metadata i32 %22, i64 0, metadata !140, metadata !145) #5, !dbg !453
  %23 = call i32 @__toupper(i32 %22) #6, !dbg !455
  %24 = add nsw i32 %23, -65, !dbg !456
  call void @llvm.dbg.value(metadata i32 %24, i64 0, metadata !55, metadata !145), !dbg !457
  call void @llvm.dbg.value(metadata i32 %24, i64 0, metadata !57, metadata !145), !dbg !458
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !54, metadata !145), !dbg !426
  %25 = icmp sgt i32 %3, 1, !dbg !459
  br i1 %25, label %.lr.ph9, label %.preheader, !dbg !462

.lr.ph9:                                          ; preds = %20
  %26 = add i32 %3, -1, !dbg !462
  br label %27, !dbg !462

; <label>:27                                      ; preds = %27, %.lr.ph9
  %indvars.iv17 = phi i64 [ 1, %.lr.ph9 ], [ %indvars.iv.next18, %27 ]
  %x.17 = phi i32 [ %24, %.lr.ph9 ], [ %32, %27 ]
  %28 = getelementptr inbounds i8* %s2, i64 %indvars.iv17, !dbg !463
  %29 = load i8* %28, align 1, !dbg !463, !tbaa !162
  %30 = sext i8 %29 to i32, !dbg !465
  call void @llvm.dbg.value(metadata i32 %30, i64 0, metadata !140, metadata !145) #5, !dbg !466
  %31 = call i32 @__toupper(i32 %30) #6, !dbg !468
  %32 = add nsw i32 %31, -65, !dbg !469
  call void @llvm.dbg.value(metadata i32 %32, i64 0, metadata !56, metadata !145), !dbg !470
  %33 = sext i32 %32 to i64, !dbg !471
  %34 = sext i32 %x.17 to i64, !dbg !471
  %35 = getelementptr inbounds [26 x [26 x float]]* %p, i64 0, i64 %34, i64 %33, !dbg !471
  %36 = load float* %35, align 4, !dbg !472, !tbaa !406
  %37 = fadd float %36, 1.000000e+00, !dbg !472
  store float %37, float* %35, align 4, !dbg !472, !tbaa !406
  call void @llvm.dbg.value(metadata i32 %32, i64 0, metadata !55, metadata !145), !dbg !457
  %indvars.iv.next18 = add nuw nsw i64 %indvars.iv17, 1, !dbg !462
  %lftr.wideiv19 = trunc i64 %indvars.iv17 to i32, !dbg !462
  %exitcond20 = icmp eq i32 %lftr.wideiv19, %26, !dbg !462
  br i1 %exitcond20, label %.preheader, label %27, !dbg !462

.preheader:                                       ; preds = %20, %27, %.preheader
  %indvars.iv14 = phi i64 [ %indvars.iv.next15, %.preheader ], [ 0, %27 ], [ 0, %20 ]
  %38 = getelementptr inbounds [26 x [26 x float]]* %p, i64 0, i64 %indvars.iv14, i64 0, !dbg !473
  call void @FNorm(float* %38, i32 26) #6, !dbg !476
  %indvars.iv.next15 = add nuw nsw i64 %indvars.iv14, 1, !dbg !477
  %exitcond16 = icmp eq i64 %indvars.iv.next15, 26, !dbg !477
  br i1 %exitcond16, label %39, label %.preheader, !dbg !477

; <label>:39                                      ; preds = %.preheader
  call void @llvm.dbg.value(metadata i32 %24, i64 0, metadata !55, metadata !145), !dbg !457
  %40 = trunc i32 %23 to i8, !dbg !478
  store i8 %40, i8* %s1, align 1, !dbg !479, !tbaa !162
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !54, metadata !145), !dbg !426
  br i1 %25, label %.lr.ph, label %50, !dbg !480

.lr.ph:                                           ; preds = %39
  %41 = add i32 %3, -1, !dbg !480
  br label %42, !dbg !480

; <label>:42                                      ; preds = %42, %.lr.ph
  %indvars.iv = phi i64 [ 1, %.lr.ph ], [ %indvars.iv.next, %42 ]
  %x.34 = phi i32 [ %24, %.lr.ph ], [ %45, %42 ]
  %43 = sext i32 %x.34 to i64, !dbg !482
  %44 = getelementptr inbounds [26 x [26 x float]]* %p, i64 0, i64 %43, i64 0, !dbg !482
  %45 = call i32 @FChoose(float* %44, i32 26) #6, !dbg !485
  call void @llvm.dbg.value(metadata i32 %45, i64 0, metadata !56, metadata !145), !dbg !470
  %46 = add nsw i32 %45, 65, !dbg !486
  %47 = trunc i32 %46 to i8, !dbg !487
  %48 = getelementptr inbounds i8* %s1, i64 %indvars.iv, !dbg !488
  store i8 %47, i8* %48, align 1, !dbg !489, !tbaa !162
  call void @llvm.dbg.value(metadata i32 %45, i64 0, metadata !55, metadata !145), !dbg !457
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !480
  %lftr.wideiv = trunc i64 %indvars.iv to i32, !dbg !480
  %exitcond = icmp eq i32 %lftr.wideiv, %41, !dbg !480
  br i1 %exitcond, label %._crit_edge, label %42, !dbg !480

._crit_edge:                                      ; preds = %42
  %49 = shl i64 %2, 32, !dbg !480
  %phitmp = ashr exact i64 %49, 32, !dbg !480
  br label %50, !dbg !480

; <label>:50                                      ; preds = %._crit_edge, %39
  %pos.2.lcssa = phi i64 [ %phitmp, %._crit_edge ], [ 1, %39 ]
  %51 = getelementptr inbounds i8* %s1, i64 %pos.2.lcssa, !dbg !490
  store i8 0, i8* %51, align 1, !dbg !491, !tbaa !162
  br label %.loopexit, !dbg !492

.loopexit:                                        ; preds = %isalpha.exit, %50
  %.0 = phi i32 [ 1, %50 ], [ 0, %isalpha.exit ]
  call void @llvm.lifetime.end(i64 2704, i8* %1) #5, !dbg !493
  ret i32 %.0, !dbg !493
}
