define i32 @StrShuffle(i8* %s1, i8* %s2) #0 {
entry:
  %cmp = icmp eq i8* %s1, %s2
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i8* @strcpy(i8* %s1, i8* %s2) #6
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %call1 = tail call i64 @strlen(i8* %s1) #7
  %conv = trunc i64 %call1 to i32
  %cmp226 = icmp sgt i32 %conv, 1
  br i1 %cmp226, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %sext = shl i64 %call1, 32
  %0 = ashr exact i64 %sext, 32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ %0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %call4 = tail call double @sre_random() #6
  %1 = trunc i64 %indvars.iv to i32
  %conv5 = sitofp i32 %1 to double
  %mul = fmul double %conv5, %call4
  %conv6 = fptosi double %mul to i32
  %idxprom = sext i32 %conv6 to i64
  %arrayidx = getelementptr inbounds i8* %s1, i64 %idxprom
  %2 = load i8* %arrayidx, align 1, !tbaa !0
  %indvars.iv.next = add i64 %indvars.iv, -1
  %arrayidx8 = getelementptr inbounds i8* %s1, i64 %indvars.iv.next
  %3 = load i8* %arrayidx8, align 1, !tbaa !0
  store i8 %3, i8* %arrayidx, align 1, !tbaa !0
  store i8 %2, i8* %arrayidx8, align 1, !tbaa !0
  %4 = trunc i64 %indvars.iv.next to i32
  %cmp2 = icmp sgt i32 %4, 1
  br i1 %cmp2, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %if.end
  ret i32 1
}
