define i32 @StrDPShuffle(i8* nocapture %s1, i8* nocapture readonly %s2) #0 {
  %Z = alloca [26 x i8], align 16
  %Z42 = getelementptr inbounds [26 x i8]* %Z, i64 0, i64 0
  tail call void @llvm.dbg.value(metadata i8* %s1, i64 0, metadata !21, metadata !145), !dbg !170
  tail call void @llvm.dbg.value(metadata i8* %s2, i64 0, metadata !22, metadata !145), !dbg !171
  tail call void @llvm.dbg.declare(metadata [26 x i8]* %Z, metadata !34, metadata !145), !dbg !172
  %1 = tail call i64 @strlen(i8* %s2) #6, !dbg !173
  %2 = trunc i64 %1 to i32, !dbg !173
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !23, metadata !145), !dbg !174
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !24, metadata !145), !dbg !175
  %3 = icmp sgt i32 %2, 0, !dbg !176
  br i1 %3, label %.lr.ph29, label %._crit_edge30, !dbg !179

.lr.ph29:                                         ; preds = %0
  %sext56 = shl i64 %1, 32, !dbg !179
  %4 = ashr exact i64 %sext56, 32, !dbg !179
  br label %7, !dbg !179

; <label>:5                                       ; preds = %isalpha.exit
  %6 = icmp slt i64 %indvars.iv.next55, %4, !dbg !176
  br i1 %6, label %7, label %._crit_edge30, !dbg !179

; <label>:7                                       ; preds = %.lr.ph29, %5
  %indvars.iv54 = phi i64 [ 0, %.lr.ph29 ], [ %indvars.iv.next55, %5 ]
  %8 = getelementptr inbounds i8* %s2, i64 %indvars.iv54, !dbg !180
  %9 = load i8* %8, align 1, !dbg !180, !tbaa !162
  tail call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !125, metadata !145) #5, !dbg !182
  tail call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !133, metadata !145) #5, !dbg !184
  tail call void @llvm.dbg.value(metadata i64 256, i64 0, metadata !134, metadata !145) #5, !dbg !186
  %isascii.i.i6 = icmp sgt i8 %9, -1, !dbg !187
  br i1 %isascii.i.i6, label %10, label %15, !dbg !187

; <label>:10                                      ; preds = %7
  %11 = sext i8 %9 to i64, !dbg !188
  %12 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %11, !dbg !188
  %13 = load i32* %12, align 4, !dbg !188, !tbaa !189
  %14 = and i32 %13, 256, !dbg !191
  br label %isalpha.exit, !dbg !187

; <label>:15                                      ; preds = %7
  %16 = sext i8 %9 to i32, !dbg !192
  %17 = tail call i32 @__maskrune(i32 %16, i64 256) #6, !dbg !193
  br label %isalpha.exit, !dbg !187

isalpha.exit:                                     ; preds = %10, %15
  %.sink.i.in.i = phi i32 [ %14, %10 ], [ %17, %15 ], !dbg !194
  %.sink.i.i = icmp eq i32 %.sink.i.in.i, 0, !dbg !195
  %indvars.iv.next55 = add nuw nsw i64 %indvars.iv54, 1, !dbg !179
  br i1 %.sink.i.i, label %.loopexit10, label %5, !dbg !196

._crit_edge30:                                    ; preds = %5, %0
  %18 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([65 x i8]* @.str, i64 0, i64 0), i32 127, i64 208) #6, !dbg !197
  %19 = bitcast i8* %18 to i8**, !dbg !197
  tail call void @llvm.dbg.value(metadata i8** %19, i64 0, metadata !27, metadata !145), !dbg !198
  %20 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([65 x i8]* @.str, i64 0, i64 0), i32 128, i64 104) #6, !dbg !199
  %21 = bitcast i8* %20 to i32*, !dbg !199
  tail call void @llvm.dbg.value(metadata i32* %21, i64 0, metadata !29, metadata !145), !dbg !200
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !25, metadata !145), !dbg !201
  %22 = shl i64 %1, 32, !dbg !202
  %sext4 = add i64 %22, -4294967296, !dbg !202
  %23 = ashr exact i64 %sext4, 32, !dbg !202
  br label %24, !dbg !206

; <label>:24                                      ; preds = %24, %._crit_edge30
  %indvars.iv51 = phi i64 [ 0, %._crit_edge30 ], [ %indvars.iv.next52, %24 ]
  %25 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([65 x i8]* @.str, i64 0, i64 0), i32 131, i64 %23) #6, !dbg !202
  %26 = getelementptr inbounds i8** %19, i64 %indvars.iv51, !dbg !207
  store i8* %25, i8** %26, align 8, !dbg !208, !tbaa !209
  %27 = getelementptr inbounds i32* %21, i64 %indvars.iv51, !dbg !211
  store i32 0, i32* %27, align 4, !dbg !212, !tbaa !189
  %indvars.iv.next52 = add nuw nsw i64 %indvars.iv51, 1, !dbg !206
  %exitcond53 = icmp eq i64 %indvars.iv.next52, 26, !dbg !206
  br i1 %exitcond53, label %28, label %24, !dbg !206

; <label>:28                                      ; preds = %24
  %29 = load i8* %s2, align 1, !dbg !213, !tbaa !162
  %30 = sext i8 %29 to i32, !dbg !214
  tail call void @llvm.dbg.value(metadata i32 %30, i64 0, metadata !140, metadata !145) #5, !dbg !215
  %31 = tail call i32 @__toupper(i32 %30) #6, !dbg !217
  tail call void @llvm.dbg.value(metadata i32 %33, i64 0, metadata !25, metadata !145), !dbg !201
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !24, metadata !145), !dbg !175
  %32 = icmp sgt i32 %2, 1, !dbg !218
  br i1 %32, label %.lr.ph25, label %.critedge, !dbg !221

.lr.ph25:                                         ; preds = %28
  %33 = add nsw i32 %31, -65, !dbg !222
  %34 = add i32 %2, -1, !dbg !221
  br label %35, !dbg !221

; <label>:35                                      ; preds = %35, %.lr.ph25
  %indvars.iv48 = phi i64 [ 1, %.lr.ph25 ], [ %indvars.iv.next49, %35 ]
  %x.122 = phi i32 [ %33, %.lr.ph25 ], [ %40, %35 ]
  %36 = getelementptr inbounds i8* %s2, i64 %indvars.iv48, !dbg !223
  %37 = load i8* %36, align 1, !dbg !223, !tbaa !162
  %38 = sext i8 %37 to i32, !dbg !225
  tail call void @llvm.dbg.value(metadata i32 %38, i64 0, metadata !140, metadata !145) #5, !dbg !226
  %39 = tail call i32 @__toupper(i32 %38) #6, !dbg !228
  %40 = add nsw i32 %39, -65, !dbg !229
  tail call void @llvm.dbg.value(metadata i32 %40, i64 0, metadata !26, metadata !145), !dbg !230
  %41 = trunc i32 %40 to i8, !dbg !231
  %42 = sext i32 %x.122 to i64, !dbg !232
  %43 = getelementptr inbounds i32* %21, i64 %42, !dbg !232
  %44 = load i32* %43, align 4, !dbg !232, !tbaa !189
  %45 = sext i32 %44 to i64, !dbg !233
  %46 = getelementptr inbounds i8** %19, i64 %42, !dbg !233
  %47 = load i8** %46, align 8, !dbg !233, !tbaa !209
  %48 = getelementptr inbounds i8* %47, i64 %45, !dbg !233
  store i8 %41, i8* %48, align 1, !dbg !234, !tbaa !162
  %49 = load i32* %43, align 4, !dbg !235, !tbaa !189
  %50 = add nsw i32 %49, 1, !dbg !235
  store i32 %50, i32* %43, align 4, !dbg !235, !tbaa !189
  tail call void @llvm.dbg.value(metadata i32 %40, i64 0, metadata !25, metadata !145), !dbg !201
  %indvars.iv.next49 = add nuw nsw i64 %indvars.iv48, 1, !dbg !221
  %lftr.wideiv = trunc i64 %indvars.iv48 to i32, !dbg !221
  %exitcond50 = icmp eq i32 %lftr.wideiv, %34, !dbg !221
  br i1 %exitcond50, label %.critedge, label %35, !dbg !221

.critedge:                                        ; preds = %35, %28
  %51 = getelementptr inbounds i8* %s2, i64 %23, !dbg !236
  %52 = load i8* %51, align 1, !dbg !236, !tbaa !162
  %53 = sext i8 %52 to i32, !dbg !237
  tail call void @llvm.dbg.value(metadata i32 %53, i64 0, metadata !140, metadata !145) #5, !dbg !238
  %54 = tail call i32 @__toupper(i32 %53) #6, !dbg !240
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !39, metadata !145), !dbg !241
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !25, metadata !145), !dbg !201
  %55 = shl i32 %54, 24, !dbg !242
  %sext3 = add i32 %55, -1090519040, !dbg !242
  %56 = ashr exact i32 %sext3, 24, !dbg !242
  %57 = sext i32 %56 to i64, !dbg !248
  %58 = getelementptr inbounds [26 x i8]* %Z, i64 0, i64 %57, !dbg !248
  br label %.critedge5

.critedge5:                                       ; preds = %86, %112, %.critedge
  %x.2 = phi i32 [ 0, %.critedge ], [ %87, %86 ], [ 0, %112 ]
  %59 = icmp slt i32 %x.2, 26, !dbg !249
  br i1 %59, label %60, label %.preheader9, !dbg !250

.preheader9:                                      ; preds = %.critedge5
  call void @llvm.memset.p0i8.i64(i8* %Z42, i8 0, i64 26, i32 16, i1 false), !dbg !251
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !38, metadata !145), !dbg !254
  store i8 1, i8* %58, align 1, !dbg !255, !tbaa !162
  br label %.preheader7, !dbg !256

; <label>:60                                      ; preds = %.critedge5
  %61 = sext i32 %x.2 to i64, !dbg !257
  %62 = getelementptr inbounds i32* %21, i64 %61, !dbg !257
  %63 = load i32* %62, align 4, !dbg !257, !tbaa !189
  %64 = icmp eq i32 %63, 0, !dbg !258
  %65 = icmp eq i32 %x.2, %56, !dbg !259
  %or.cond57 = or i1 %64, %65, !dbg !260
  br i1 %or.cond57, label %86, label %66, !dbg !260

; <label>:66                                      ; preds = %60
  %67 = tail call double @sre_random() #6, !dbg !261
  %68 = load i32* %62, align 4, !dbg !261, !tbaa !189
  %69 = sitofp i32 %68 to double, !dbg !261
  %70 = fmul double %67, %69, !dbg !261
  %71 = fptosi double %70 to i32, !dbg !261
  tail call void @llvm.dbg.value(metadata i32 %71, i64 0, metadata !24, metadata !145), !dbg !175
  %72 = sext i32 %71 to i64, !dbg !262
  %73 = getelementptr inbounds i8** %19, i64 %61, !dbg !262
  %74 = load i8** %73, align 8, !dbg !262, !tbaa !209
  %75 = getelementptr inbounds i8* %74, i64 %72, !dbg !262
  %76 = load i8* %75, align 1, !dbg !262, !tbaa !162
  %77 = add nsw i32 %68, -1, !dbg !263
  %78 = sext i32 %77 to i64, !dbg !264
  %79 = getelementptr inbounds i8* %74, i64 %78, !dbg !264
  %80 = load i8* %79, align 1, !dbg !264, !tbaa !162
  store i8 %80, i8* %75, align 1, !dbg !265, !tbaa !162
  %81 = load i32* %62, align 4, !dbg !266, !tbaa !189
  %82 = add nsw i32 %81, -1, !dbg !267
  %83 = sext i32 %82 to i64, !dbg !268
  %84 = load i8** %73, align 8, !dbg !268, !tbaa !209
  %85 = getelementptr inbounds i8* %84, i64 %83, !dbg !268
  store i8 %76, i8* %85, align 1, !dbg !269, !tbaa !162
  br label %86, !dbg !270

; <label>:86                                      ; preds = %60, %66
  %87 = add nsw i32 %x.2, 1, !dbg !271
  tail call void @llvm.dbg.value(metadata i32 %87, i64 0, metadata !25, metadata !145), !dbg !201
  br label %.critedge5, !dbg !272

.loopexit:                                        ; preds = %106
  %88 = icmp eq i32 %keep_connecting.2, 0, !dbg !256
  br i1 %88, label %.preheader8, label %.preheader7, !dbg !256

.preheader7:                                      ; preds = %.loopexit, %106, %.preheader9
  %indvars.iv43 = phi i64 [ 0, %.preheader9 ], [ %indvars.iv.next44, %106 ], [ 0, %.loopexit ]
  %keep_connecting.120 = phi i32 [ 0, %.preheader9 ], [ %keep_connecting.2, %106 ], [ 0, %.loopexit ]
  %89 = getelementptr inbounds [26 x i8]* %Z, i64 0, i64 %indvars.iv43, !dbg !273
  %90 = load i8* %89, align 1, !dbg !273, !tbaa !162
  %91 = icmp eq i8 %90, 0, !dbg !279
  br i1 %91, label %92, label %106, !dbg !280

; <label>:92                                      ; preds = %.preheader7
  %93 = getelementptr inbounds i8** %19, i64 %indvars.iv43, !dbg !281
  %94 = load i8** %93, align 8, !dbg !281, !tbaa !209
  %95 = getelementptr inbounds i32* %21, i64 %indvars.iv43, !dbg !282
  %96 = load i32* %95, align 4, !dbg !282, !tbaa !189
  %97 = add nsw i32 %96, -1, !dbg !283
  %98 = sext i32 %97 to i64, !dbg !281
  %99 = getelementptr inbounds i8* %94, i64 %98, !dbg !281
  %100 = load i8* %99, align 1, !dbg !281, !tbaa !162
  %101 = sext i8 %100 to i64, !dbg !284
  %102 = getelementptr inbounds [26 x i8]* %Z, i64 0, i64 %101, !dbg !284
  %103 = load i8* %102, align 1, !dbg !284, !tbaa !162
  %104 = icmp eq i8 %103, 1, !dbg !285
  br i1 %104, label %105, label %106, !dbg !286

; <label>:105                                     ; preds = %92
  store i8 1, i8* %89, align 1, !dbg !287, !tbaa !162
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !38, metadata !145), !dbg !254
  br label %106, !dbg !289

; <label>:106                                     ; preds = %.preheader7, %92, %105
  %keep_connecting.2 = phi i32 [ 1, %105 ], [ %keep_connecting.120, %92 ], [ %keep_connecting.120, %.preheader7 ]
  %indvars.iv.next44 = add nuw nsw i64 %indvars.iv43, 1, !dbg !290
  %exitcond45 = icmp eq i64 %indvars.iv.next44, 26, !dbg !290
  br i1 %exitcond45, label %.loopexit, label %.preheader7, !dbg !290

.preheader8:                                      ; preds = %.loopexit, %116
  %indvars.iv46 = phi i64 [ %indvars.iv.next47, %116 ], [ 0, %.loopexit ]
  %107 = getelementptr inbounds i32* %21, i64 %indvars.iv46, !dbg !291
  %108 = load i32* %107, align 4, !dbg !291, !tbaa !189
  %109 = icmp eq i32 %108, 0, !dbg !296
  %110 = trunc i64 %indvars.iv46 to i32, !dbg !297
  %111 = icmp eq i32 %110, %56, !dbg !297
  %or.cond = or i1 %111, %109, !dbg !298
  br i1 %or.cond, label %116, label %112, !dbg !298

; <label>:112                                     ; preds = %.preheader8
  %113 = getelementptr inbounds [26 x i8]* %Z, i64 0, i64 %indvars.iv46, !dbg !299
  %114 = load i8* %113, align 1, !dbg !299, !tbaa !162
  %115 = icmp eq i8 %114, 0, !dbg !301
  br i1 %115, label %.critedge5, label %116, !dbg !302

; <label>:116                                     ; preds = %112, %.preheader8
  %indvars.iv.next47 = add nuw nsw i64 %indvars.iv46, 1, !dbg !303
  %117 = icmp slt i64 %indvars.iv.next47, 26, !dbg !304
  br i1 %117, label %.preheader8, label %.preheader, !dbg !303

.preheader:                                       ; preds = %116, %._crit_edge
  %indvars.iv37 = phi i64 [ %indvars.iv.next38, %._crit_edge ], [ 0, %116 ]
  %118 = getelementptr inbounds i32* %21, i64 %indvars.iv37, !dbg !305
  %119 = load i32* %118, align 4, !dbg !305, !tbaa !189
  %n.014 = add i32 %119, -1, !dbg !309
  %120 = icmp sgt i32 %n.014, 1, !dbg !310
  br i1 %120, label %.lr.ph, label %._crit_edge, !dbg !312

.lr.ph:                                           ; preds = %.preheader
  %121 = getelementptr inbounds i8** %19, i64 %indvars.iv37, !dbg !313
  %122 = sext i32 %n.014 to i64
  br label %123, !dbg !312

; <label>:123                                     ; preds = %.lr.ph, %123
  %indvars.iv34 = phi i64 [ %122, %.lr.ph ], [ %indvars.iv.next35, %123 ]
  %n.016 = phi i32 [ %n.014, %.lr.ph ], [ %n.0, %123 ]
  %n.0.in15 = phi i32 [ %119, %.lr.ph ], [ %125, %123 ]
  %124 = tail call double @sre_random() #6, !dbg !315
  %125 = trunc i64 %indvars.iv34 to i32, !dbg !315
  %126 = sitofp i32 %125 to double, !dbg !315
  %127 = fmul double %126, %124, !dbg !315
  %128 = fptosi double %127 to i32, !dbg !315
  tail call void @llvm.dbg.value(metadata i32 %128, i64 0, metadata !24, metadata !145), !dbg !175
  %129 = sext i32 %128 to i64, !dbg !313
  %130 = load i8** %121, align 8, !dbg !313, !tbaa !209
  %131 = getelementptr inbounds i8* %130, i64 %129, !dbg !313
  %132 = load i8* %131, align 1, !dbg !313, !tbaa !162
  %133 = add nsw i32 %n.0.in15, -2, !dbg !316
  %134 = sext i32 %133 to i64, !dbg !317
  %135 = getelementptr inbounds i8* %130, i64 %134, !dbg !317
  %136 = load i8* %135, align 1, !dbg !317, !tbaa !162
  store i8 %136, i8* %131, align 1, !dbg !318, !tbaa !162
  %137 = load i8** %121, align 8, !dbg !319, !tbaa !209
  %138 = getelementptr inbounds i8* %137, i64 %134, !dbg !319
  store i8 %132, i8* %138, align 1, !dbg !320, !tbaa !162
  %n.0 = add nsw i32 %n.016, -1, !dbg !309
  %139 = icmp sgt i32 %n.0, 1, !dbg !310
  %indvars.iv.next35 = add nsw i64 %indvars.iv34, -1, !dbg !312
  br i1 %139, label %123, label %._crit_edge, !dbg !312

._crit_edge:                                      ; preds = %123, %.preheader
  %indvars.iv.next38 = add nuw nsw i64 %indvars.iv37, 1, !dbg !321
  %exitcond = icmp eq i64 %indvars.iv.next38, 26, !dbg !321
  br i1 %exitcond, label %140, label %.preheader, !dbg !321

; <label>:140                                     ; preds = %._crit_edge
  %141 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([65 x i8]* @.str, i64 0, i64 0), i32 240, i64 104) #6, !dbg !322
  %142 = bitcast i8* %141 to i32*, !dbg !322
  tail call void @llvm.dbg.value(metadata i32* %142, i64 0, metadata !31, metadata !145), !dbg !323
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !25, metadata !145), !dbg !201
  call void @llvm.memset.p0i8.i64(i8* %141, i8 0, i64 104, i32 4, i1 false), !dbg !324
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !24, metadata !145), !dbg !175
  %143 = load i8* %s2, align 1, !dbg !327, !tbaa !162
  %144 = sext i8 %143 to i32, !dbg !328
  tail call void @llvm.dbg.value(metadata i32 %144, i64 0, metadata !140, metadata !145) #5, !dbg !329
  %145 = tail call i32 @__toupper(i32 %144) #6, !dbg !331
  %146 = add nsw i32 %145, -65, !dbg !332
  tail call void @llvm.dbg.value(metadata i32 %146, i64 0, metadata !25, metadata !145), !dbg !201
  br label %147, !dbg !333

; <label>:147                                     ; preds = %147, %140
  %indvars.iv = phi i64 [ %indvars.iv.next, %147 ], [ 0, %140 ]
  %x.8 = phi i32 [ %159, %147 ], [ %146, %140 ]
  %148 = add nsw i32 %x.8, 65, !dbg !334
  %149 = trunc i32 %148 to i8, !dbg !336
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !337
  %150 = getelementptr inbounds i8* %s1, i64 %indvars.iv, !dbg !338
  store i8 %149, i8* %150, align 1, !dbg !339, !tbaa !162
  %151 = sext i32 %x.8 to i64, !dbg !340
  %152 = getelementptr inbounds i32* %142, i64 %151, !dbg !340
  %153 = load i32* %152, align 4, !dbg !340, !tbaa !189
  %154 = sext i32 %153 to i64, !dbg !341
  %155 = getelementptr inbounds i8** %19, i64 %151, !dbg !341
  %156 = load i8** %155, align 8, !dbg !341, !tbaa !209
  %157 = getelementptr inbounds i8* %156, i64 %154, !dbg !341
  %158 = load i8* %157, align 1, !dbg !341, !tbaa !162
  %159 = sext i8 %158 to i32, !dbg !341
  tail call void @llvm.dbg.value(metadata i32 %159, i64 0, metadata !26, metadata !145), !dbg !230
  %160 = add nsw i32 %153, 1, !dbg !342
  store i32 %160, i32* %152, align 4, !dbg !342, !tbaa !189
  tail call void @llvm.dbg.value(metadata i32 %159, i64 0, metadata !25, metadata !145), !dbg !201
  %161 = sext i8 %158 to i64, !dbg !343
  %162 = getelementptr inbounds i32* %142, i64 %161, !dbg !343
  %163 = load i32* %162, align 4, !dbg !343, !tbaa !189
  %164 = getelementptr inbounds i32* %21, i64 %161, !dbg !345
  %165 = load i32* %164, align 4, !dbg !345, !tbaa !189
  %166 = icmp eq i32 %163, %165, !dbg !346
  br i1 %166, label %167, label %147, !dbg !337

; <label>:167                                     ; preds = %147
  %168 = trunc i64 %indvars.iv to i32, !dbg !347
  %169 = add nsw i32 %56, 65, !dbg !347
  %170 = trunc i32 %169 to i8, !dbg !348
  %171 = add nsw i32 %168, 2, !dbg !349
  tail call void @llvm.dbg.value(metadata i32 %171, i64 0, metadata !24, metadata !145), !dbg !175
  %sext = shl i64 %indvars.iv.next, 32, !dbg !350
  %172 = ashr exact i64 %sext, 32, !dbg !350
  %173 = getelementptr inbounds i8* %s1, i64 %172, !dbg !350
  store i8 %170, i8* %173, align 1, !dbg !351, !tbaa !162
  %174 = sext i32 %171 to i64, !dbg !352
  %175 = getelementptr inbounds i8* %s1, i64 %174, !dbg !352
  store i8 0, i8* %175, align 1, !dbg !353, !tbaa !162
  %176 = icmp eq i32 %159, %56, !dbg !354
  br i1 %176, label %178, label %177, !dbg !356

; <label>:177                                     ; preds = %167
  tail call void (i8*, ...)* @Die(i8* getelementptr inbounds ([28 x i8]* @.str1, i64 0, i64 0)) #6, !dbg !357
  br label %178, !dbg !357

; <label>:178                                     ; preds = %167, %177
  %179 = icmp eq i32 %171, %2, !dbg !358
  br i1 %179, label %181, label %180, !dbg !360

; <label>:180                                     ; preds = %178
  tail call void (i8*, ...)* @Die(i8* getelementptr inbounds ([27 x i8]* @.str2, i64 0, i64 0), i32 %171, i32 %2) #6, !dbg !361
  br label %181, !dbg !361

; <label>:181                                     ; preds = %178, %180
  tail call void @Free2DArray(i8** %19, i32 26) #6, !dbg !362
  tail call void @free(i8* %20) #7, !dbg !363
  tail call void @free(i8* %141) #7, !dbg !364
  br label %.loopexit10, !dbg !365

.loopexit10:                                      ; preds = %isalpha.exit, %181
  %.0 = phi i32 [ 1, %181 ], [ 0, %isalpha.exit ]
  ret i32 %.0, !dbg !366
}
