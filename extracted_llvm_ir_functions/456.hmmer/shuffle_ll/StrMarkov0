define i32 @StrMarkov0(i8* nocapture %s1, i8* nocapture %s2) #0 {
entry:
  %p = alloca [26 x float], align 16
  %0 = bitcast [26 x float]* %p to i8*
  call void @llvm.lifetime.start(i64 104, i8* %0) #5
  %call = call i64 @strlen(i8* %s2) #7
  %conv = trunc i64 %call to i32
  %cmp56 = icmp sgt i32 %conv, 0
  br i1 %cmp56, label %for.body.lr.ph, label %for.end.thread

for.end.thread:                                   ; preds = %entry
  %arraydecay64 = getelementptr inbounds [26 x float]* %p, i64 0, i64 0
  call void @FSet(float* %arraydecay64, i32 26, float 0.000000e+00) #6
  br label %for.end21.thread

for.body.lr.ph:                                   ; preds = %entry
  %call4 = call i16** @__ctype_b_loc() #8
  %1 = load i16** %call4, align 8, !tbaa !2
  br label %for.body

for.cond:                                         ; preds = %for.body
  %2 = trunc i64 %indvars.iv.next63 to i32
  %cmp = icmp slt i32 %2, %conv
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %indvars.iv62 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next63, %for.cond ]
  %arrayidx = getelementptr inbounds i8* %s2, i64 %indvars.iv62
  %3 = load i8* %arrayidx, align 1, !tbaa !0
  %idxprom3 = sext i8 %3 to i64
  %arrayidx5 = getelementptr inbounds i16* %1, i64 %idxprom3
  %4 = load i16* %arrayidx5, align 2, !tbaa !3
  %and = and i16 %4, 1024
  %tobool = icmp eq i16 %and, 0
  %indvars.iv.next63 = add i64 %indvars.iv62, 1
  br i1 %tobool, label %cleanup, label %for.cond

for.end:                                          ; preds = %for.cond
  %arraydecay = getelementptr inbounds [26 x float]* %p, i64 0, i64 0
  call void @FSet(float* %arraydecay, i32 26, float 0.000000e+00) #6
  br i1 %cmp56, label %for.body10, label %for.end21.thread

for.body10:                                       ; preds = %for.end, %for.body10
  %indvars.iv58 = phi i64 [ %indvars.iv.next59, %for.body10 ], [ 0, %for.end ]
  %arrayidx12 = getelementptr inbounds i8* %s2, i64 %indvars.iv58
  %5 = load i8* %arrayidx12, align 1, !tbaa !0
  %conv13 = sext i8 %5 to i32
  %call14 = call i32 @toupper(i32 %conv13) #6
  %sub = add nsw i32 %call14, -65
  %idxprom15 = sext i32 %sub to i64
  %arrayidx16 = getelementptr inbounds [26 x float]* %p, i64 0, i64 %idxprom15
  %6 = load float* %arrayidx16, align 4, !tbaa !5
  %conv18 = fadd float %6, 1.000000e+00
  store float %conv18, float* %arrayidx16, align 4, !tbaa !5
  %indvars.iv.next59 = add i64 %indvars.iv58, 1
  %lftr.wideiv60 = trunc i64 %indvars.iv.next59 to i32
  %exitcond61 = icmp eq i32 %lftr.wideiv60, %conv
  br i1 %exitcond61, label %for.end21, label %for.body10

for.end21.thread:                                 ; preds = %for.end.thread, %for.end
  %arraydecay65.ph = phi float* [ %arraydecay64, %for.end.thread ], [ %arraydecay, %for.end ]
  call void @FNorm(float* %arraydecay65.ph, i32 26) #6
  br label %for.end35

for.end21:                                        ; preds = %for.body10
  call void @FNorm(float* %arraydecay, i32 26) #6
  br i1 %cmp56, label %for.body26, label %for.end35

for.body26:                                       ; preds = %for.end21, %for.body26
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body26 ], [ 0, %for.end21 ]
  %call28 = call i32 @FChoose(float* %arraydecay, i32 26) #6
  %add29 = add nsw i32 %call28, 65
  %conv30 = trunc i32 %add29 to i8
  %arrayidx32 = getelementptr inbounds i8* %s1, i64 %indvars.iv
  store i8 %conv30, i8* %arrayidx32, align 1, !tbaa !0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %conv
  br i1 %exitcond, label %for.cond23.for.end35_crit_edge, label %for.body26

for.cond23.for.end35_crit_edge:                   ; preds = %for.body26
  %sext = shl i64 %call, 32
  %phitmp = ashr exact i64 %sext, 32
  br label %for.end35

for.end35:                                        ; preds = %for.end21.thread, %for.cond23.for.end35_crit_edge, %for.end21
  %pos.2.lcssa = phi i64 [ %phitmp, %for.cond23.for.end35_crit_edge ], [ 0, %for.end21 ], [ 0, %for.end21.thread ]
  %arrayidx37 = getelementptr inbounds i8* %s1, i64 %pos.2.lcssa
  store i8 0, i8* %arrayidx37, align 1, !tbaa !0
  br label %cleanup

cleanup:                                          ; preds = %for.body, %for.end35
  %retval.0 = phi i32 [ 1, %for.end35 ], [ 0, %for.body ]
  call void @llvm.lifetime.end(i64 104, i8* %0) #5
  ret i32 %retval.0
}
