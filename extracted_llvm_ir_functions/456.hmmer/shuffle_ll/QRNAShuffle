define i32 @QRNAShuffle(i8* %xs, i8* %ys, i8* %x, i8* %y) #0 {
  tail call void @llvm.dbg.value(metadata i8* %xs, i64 0, metadata !104, metadata !145), !dbg !620
  tail call void @llvm.dbg.value(metadata i8* %ys, i64 0, metadata !105, metadata !145), !dbg !621
  tail call void @llvm.dbg.value(metadata i8* %x, i64 0, metadata !106, metadata !145), !dbg !622
  tail call void @llvm.dbg.value(metadata i8* %y, i64 0, metadata !107, metadata !145), !dbg !623
  %1 = icmp eq i8* %xs, %x, !dbg !624
  br i1 %1, label %5, label %2, !dbg !626

; <label>:2                                       ; preds = %0
  %3 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %xs, i1 false), !dbg !627
  %4 = tail call i8* @__strcpy_chk(i8* %xs, i8* %x, i64 %3) #6, !dbg !627
  br label %5, !dbg !627

; <label>:5                                       ; preds = %0, %2
  %6 = icmp eq i8* %ys, %y, !dbg !628
  br i1 %6, label %10, label %7, !dbg !630

; <label>:7                                       ; preds = %5
  %8 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %ys, i1 false), !dbg !631
  %9 = tail call i8* @__strcpy_chk(i8* %ys, i8* %y, i64 %8) #6, !dbg !631
  br label %10, !dbg !631

; <label>:10                                      ; preds = %5, %7
  %11 = tail call i64 @strlen(i8* %x) #6, !dbg !632
  %12 = trunc i64 %11 to i32, !dbg !632
  tail call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !108, metadata !145), !dbg !633
  %sext = shl i64 %11, 32, !dbg !634
  %13 = ashr exact i64 %sext, 30, !dbg !634
  %14 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([65 x i8]* @.str, i64 0, i64 0), i32 572, i64 %13) #6, !dbg !634
  %15 = bitcast i8* %14 to i32*, !dbg !634
  tail call void @llvm.dbg.value(metadata i32* %15, i64 0, metadata !109, metadata !145), !dbg !635
  %16 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([65 x i8]* @.str, i64 0, i64 0), i32 573, i64 %13) #6, !dbg !636
  %17 = bitcast i8* %16 to i32*, !dbg !636
  tail call void @llvm.dbg.value(metadata i32* %17, i64 0, metadata !110, metadata !145), !dbg !637
  %18 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([65 x i8]* @.str, i64 0, i64 0), i32 574, i64 %13) #6, !dbg !638
  %19 = bitcast i8* %18 to i32*, !dbg !638
  tail call void @llvm.dbg.value(metadata i32* %19, i64 0, metadata !111, metadata !145), !dbg !639
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !114, metadata !145), !dbg !640
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !113, metadata !145), !dbg !641
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !112, metadata !145), !dbg !642
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !115, metadata !145), !dbg !643
  %20 = icmp sgt i32 %12, 0, !dbg !644
  br i1 %20, label %.lr.ph14, label %._crit_edge, !dbg !647

.lr.ph14:                                         ; preds = %10
  %21 = add i32 %12, -1, !dbg !647
  br label %24, !dbg !647

.preheader2:                                      ; preds = %52
  %22 = icmp sgt i32 %nxy.1, 1, !dbg !648
  br i1 %22, label %.lr.ph7, label %.preheader1, !dbg !651

.lr.ph7:                                          ; preds = %.preheader2
  %23 = sext i32 %nxy.1 to i64
  br label %55, !dbg !651

; <label>:24                                      ; preds = %52, %.lr.ph14
  %indvars.iv21 = phi i64 [ 0, %.lr.ph14 ], [ %indvars.iv.next22, %52 ]
  %ny.010 = phi i32 [ 0, %.lr.ph14 ], [ %ny.1, %52 ]
  %nx.09 = phi i32 [ 0, %.lr.ph14 ], [ %nx.1, %52 ]
  %nxy.08 = phi i32 [ 0, %.lr.ph14 ], [ %nxy.1, %52 ]
  %25 = getelementptr inbounds i8* %x, i64 %indvars.iv21, !dbg !652
  %26 = load i8* %25, align 1, !dbg !652, !tbaa !162
  switch i8 %26, label %30 [
    i8 32, label %27
    i8 46, label %27
    i8 95, label %27
    i8 45, label %27
    i8 126, label %27
  ], !dbg !652

; <label>:27                                      ; preds = %24, %24, %24, %24, %24
  %28 = getelementptr inbounds i8* %y, i64 %indvars.iv21, !dbg !655
  %29 = load i8* %28, align 1, !dbg !655, !tbaa !162
  switch i8 %29, label %thread-pre-split [
    i8 32, label %52
    i8 46, label %52
    i8 95, label %52
    i8 45, label %52
    i8 126, label %52
  ], !dbg !655

thread-pre-split:                                 ; preds = %27
  switch i8 %26, label %30 [
    i8 32, label %39
    i8 46, label %39
    i8 95, label %39
    i8 45, label %39
    i8 126, label %39
  ], !dbg !656

; <label>:30                                      ; preds = %thread-pre-split, %24
  %31 = getelementptr inbounds i8* %y, i64 %indvars.iv21, !dbg !658
  %32 = load i8* %31, align 1, !dbg !658, !tbaa !162
  switch i8 %32, label %33 [
    i8 32, label %38
    i8 46, label %38
    i8 95, label %38
    i8 45, label %38
    i8 126, label %38
  ], !dbg !658

; <label>:33                                      ; preds = %30
  %34 = sext i32 %nxy.08 to i64, !dbg !659
  %35 = getelementptr inbounds i32* %15, i64 %34, !dbg !659
  %36 = trunc i64 %indvars.iv21 to i32, !dbg !661
  store i32 %36, i32* %35, align 4, !dbg !661, !tbaa !189
  %37 = add nsw i32 %nxy.08, 1, !dbg !662
  tail call void @llvm.dbg.value(metadata i32 %37, i64 0, metadata !112, metadata !145), !dbg !642
  br label %52, !dbg !663

; <label>:38                                      ; preds = %30, %30, %30, %30, %30
  switch i8 %26, label %44 [
    i8 32, label %39
    i8 46, label %39
    i8 95, label %39
    i8 45, label %39
    i8 126, label %39
  ], !dbg !664

; <label>:39                                      ; preds = %thread-pre-split, %thread-pre-split, %thread-pre-split, %thread-pre-split, %thread-pre-split, %38, %38, %38, %38, %38
  %40 = sext i32 %ny.010 to i64, !dbg !666
  %41 = getelementptr inbounds i32* %19, i64 %40, !dbg !666
  %42 = trunc i64 %indvars.iv21 to i32, !dbg !668
  store i32 %42, i32* %41, align 4, !dbg !668, !tbaa !189
  %43 = add nsw i32 %ny.010, 1, !dbg !669
  tail call void @llvm.dbg.value(metadata i32 %43, i64 0, metadata !114, metadata !145), !dbg !640
  br label %52, !dbg !670

; <label>:44                                      ; preds = %38
  %45 = getelementptr inbounds i8* %y, i64 %indvars.iv21, !dbg !671
  %46 = load i8* %45, align 1, !dbg !671, !tbaa !162
  switch i8 %46, label %52 [
    i8 32, label %47
    i8 46, label %47
    i8 95, label %47
    i8 45, label %47
    i8 126, label %47
  ], !dbg !671

; <label>:47                                      ; preds = %44, %44, %44, %44, %44
  %48 = sext i32 %nx.09 to i64, !dbg !673
  %49 = getelementptr inbounds i32* %17, i64 %48, !dbg !673
  %50 = trunc i64 %indvars.iv21 to i32, !dbg !675
  store i32 %50, i32* %49, align 4, !dbg !675, !tbaa !189
  %51 = add nsw i32 %nx.09, 1, !dbg !676
  tail call void @llvm.dbg.value(metadata i32 %51, i64 0, metadata !113, metadata !145), !dbg !641
  br label %52, !dbg !677

; <label>:52                                      ; preds = %44, %27, %27, %27, %27, %27, %39, %47, %33
  %nxy.1 = phi i32 [ %nxy.08, %27 ], [ %nxy.08, %39 ], [ %nxy.08, %47 ], [ %37, %33 ], [ %nxy.08, %27 ], [ %nxy.08, %27 ], [ %nxy.08, %27 ], [ %nxy.08, %27 ], [ %nxy.08, %44 ]
  %nx.1 = phi i32 [ %nx.09, %27 ], [ %nx.09, %39 ], [ %51, %47 ], [ %nx.09, %33 ], [ %nx.09, %27 ], [ %nx.09, %27 ], [ %nx.09, %27 ], [ %nx.09, %27 ], [ %nx.09, %44 ]
  %ny.1 = phi i32 [ %ny.010, %27 ], [ %43, %39 ], [ %ny.010, %47 ], [ %ny.010, %33 ], [ %ny.010, %27 ], [ %ny.010, %27 ], [ %ny.010, %27 ], [ %ny.010, %27 ], [ %ny.010, %44 ]
  %indvars.iv.next22 = add nuw nsw i64 %indvars.iv21, 1, !dbg !647
  %lftr.wideiv = trunc i64 %indvars.iv21 to i32, !dbg !647
  %exitcond = icmp eq i32 %lftr.wideiv, %21, !dbg !647
  br i1 %exitcond, label %.preheader2, label %24, !dbg !647

.preheader1:                                      ; preds = %55, %.preheader2
  %53 = icmp sgt i32 %nx.1, 1, !dbg !678
  br i1 %53, label %.lr.ph5, label %.preheader, !dbg !681

.lr.ph5:                                          ; preds = %.preheader1
  %54 = sext i32 %nx.1 to i64
  br label %92, !dbg !681

; <label>:55                                      ; preds = %.lr.ph7, %55
  %indvars.iv19 = phi i64 [ %23, %.lr.ph7 ], [ %indvars.iv.next20, %55 ]
  %56 = tail call double @sre_random() #6, !dbg !682
  %57 = trunc i64 %indvars.iv19 to i32, !dbg !682
  %58 = sitofp i32 %57 to double, !dbg !682
  %59 = fmul double %58, %56, !dbg !682
  %60 = fptosi double %59 to i32, !dbg !682
  tail call void @llvm.dbg.value(metadata i32 %60, i64 0, metadata !116, metadata !145), !dbg !684
  %61 = sext i32 %60 to i64, !dbg !685
  %62 = getelementptr inbounds i32* %15, i64 %61, !dbg !685
  %63 = load i32* %62, align 4, !dbg !685, !tbaa !189
  %64 = sext i32 %63 to i64, !dbg !686
  %65 = getelementptr inbounds i8* %xs, i64 %64, !dbg !686
  %66 = load i8* %65, align 1, !dbg !686, !tbaa !162
  tail call void @llvm.dbg.value(metadata i8 %66, i64 0, metadata !118, metadata !145), !dbg !687
  %67 = getelementptr inbounds i8* %ys, i64 %64, !dbg !688
  %68 = load i8* %67, align 1, !dbg !688, !tbaa !162
  tail call void @llvm.dbg.value(metadata i8 %68, i64 0, metadata !119, metadata !145), !dbg !689
  %indvars.iv.next20 = add nsw i64 %indvars.iv19, -1, !dbg !651
  %69 = getelementptr inbounds i32* %15, i64 %indvars.iv.next20, !dbg !690
  %70 = load i32* %69, align 4, !dbg !690, !tbaa !189
  %71 = sext i32 %70 to i64, !dbg !691
  %72 = getelementptr inbounds i8* %xs, i64 %71, !dbg !691
  %73 = load i8* %72, align 1, !dbg !691, !tbaa !162
  store i8 %73, i8* %65, align 1, !dbg !692, !tbaa !162
  %74 = load i32* %69, align 4, !dbg !693, !tbaa !189
  %75 = sext i32 %74 to i64, !dbg !694
  %76 = getelementptr inbounds i8* %ys, i64 %75, !dbg !694
  %77 = load i8* %76, align 1, !dbg !694, !tbaa !162
  %78 = load i32* %62, align 4, !dbg !695, !tbaa !189
  %79 = sext i32 %78 to i64, !dbg !696
  %80 = getelementptr inbounds i8* %ys, i64 %79, !dbg !696
  store i8 %77, i8* %80, align 1, !dbg !697, !tbaa !162
  %81 = load i32* %69, align 4, !dbg !698, !tbaa !189
  store i32 %81, i32* %62, align 4, !dbg !699, !tbaa !189
  %82 = load i32* %69, align 4, !dbg !700, !tbaa !189
  %83 = sext i32 %82 to i64, !dbg !701
  %84 = getelementptr inbounds i8* %xs, i64 %83, !dbg !701
  store i8 %66, i8* %84, align 1, !dbg !702, !tbaa !162
  %85 = load i32* %69, align 4, !dbg !703, !tbaa !189
  %86 = sext i32 %85 to i64, !dbg !704
  %87 = getelementptr inbounds i8* %ys, i64 %86, !dbg !704
  store i8 %68, i8* %87, align 1, !dbg !705, !tbaa !162
  %88 = load i32* %69, align 4, !dbg !706, !tbaa !189
  store i32 %88, i32* %62, align 4, !dbg !707, !tbaa !189
  %89 = icmp sgt i64 %indvars.iv.next20, 1, !dbg !648
  br i1 %89, label %55, label %.preheader1, !dbg !651

.preheader:                                       ; preds = %92, %.preheader1
  %90 = icmp sgt i32 %ny.1, 1, !dbg !708
  br i1 %90, label %.lr.ph, label %._crit_edge, !dbg !711

.lr.ph:                                           ; preds = %.preheader
  %91 = sext i32 %ny.1 to i64
  br label %126, !dbg !711

; <label>:92                                      ; preds = %.lr.ph5, %92
  %indvars.iv17 = phi i64 [ %54, %.lr.ph5 ], [ %indvars.iv.next18, %92 ]
  %93 = tail call double @sre_random() #6, !dbg !712
  %94 = trunc i64 %indvars.iv17 to i32, !dbg !712
  %95 = sitofp i32 %94 to double, !dbg !712
  %96 = fmul double %95, %93, !dbg !712
  %97 = fptosi double %96 to i32, !dbg !712
  tail call void @llvm.dbg.value(metadata i32 %97, i64 0, metadata !116, metadata !145), !dbg !684
  %98 = sext i32 %97 to i64, !dbg !714
  %99 = getelementptr inbounds i32* %17, i64 %98, !dbg !714
  %100 = load i32* %99, align 4, !dbg !714, !tbaa !189
  %101 = sext i32 %100 to i64, !dbg !715
  %102 = getelementptr inbounds i8* %xs, i64 %101, !dbg !715
  %103 = load i8* %102, align 1, !dbg !715, !tbaa !162
  tail call void @llvm.dbg.value(metadata i8 %103, i64 0, metadata !118, metadata !145), !dbg !687
  %104 = getelementptr inbounds i8* %ys, i64 %101, !dbg !716
  %105 = load i8* %104, align 1, !dbg !716, !tbaa !162
  tail call void @llvm.dbg.value(metadata i8 %105, i64 0, metadata !119, metadata !145), !dbg !689
  tail call void @llvm.dbg.value(metadata i32 %100, i64 0, metadata !117, metadata !145), !dbg !717
  %indvars.iv.next18 = add nsw i64 %indvars.iv17, -1, !dbg !681
  %106 = getelementptr inbounds i32* %17, i64 %indvars.iv.next18, !dbg !718
  %107 = load i32* %106, align 4, !dbg !718, !tbaa !189
  %108 = sext i32 %107 to i64, !dbg !719
  %109 = getelementptr inbounds i8* %xs, i64 %108, !dbg !719
  %110 = load i8* %109, align 1, !dbg !719, !tbaa !162
  store i8 %110, i8* %102, align 1, !dbg !720, !tbaa !162
  %111 = load i32* %106, align 4, !dbg !721, !tbaa !189
  %112 = sext i32 %111 to i64, !dbg !722
  %113 = getelementptr inbounds i8* %ys, i64 %112, !dbg !722
  %114 = load i8* %113, align 1, !dbg !722, !tbaa !162
  %115 = load i32* %99, align 4, !dbg !723, !tbaa !189
  %116 = sext i32 %115 to i64, !dbg !724
  %117 = getelementptr inbounds i8* %ys, i64 %116, !dbg !724
  store i8 %114, i8* %117, align 1, !dbg !725, !tbaa !162
  %118 = load i32* %106, align 4, !dbg !726, !tbaa !189
  store i32 %118, i32* %99, align 4, !dbg !727, !tbaa !189
  %119 = load i32* %106, align 4, !dbg !728, !tbaa !189
  %120 = sext i32 %119 to i64, !dbg !729
  %121 = getelementptr inbounds i8* %xs, i64 %120, !dbg !729
  store i8 %103, i8* %121, align 1, !dbg !730, !tbaa !162
  %122 = load i32* %106, align 4, !dbg !731, !tbaa !189
  %123 = sext i32 %122 to i64, !dbg !732
  %124 = getelementptr inbounds i8* %ys, i64 %123, !dbg !732
  store i8 %105, i8* %124, align 1, !dbg !733, !tbaa !162
  store i32 %100, i32* %106, align 4, !dbg !734, !tbaa !189
  %125 = icmp sgt i64 %indvars.iv.next18, 1, !dbg !678
  br i1 %125, label %92, label %.preheader, !dbg !681

; <label>:126                                     ; preds = %.lr.ph, %126
  %indvars.iv = phi i64 [ %91, %.lr.ph ], [ %indvars.iv.next, %126 ]
  %127 = tail call double @sre_random() #6, !dbg !735
  %128 = trunc i64 %indvars.iv to i32, !dbg !735
  %129 = sitofp i32 %128 to double, !dbg !735
  %130 = fmul double %129, %127, !dbg !735
  %131 = fptosi double %130 to i32, !dbg !735
  tail call void @llvm.dbg.value(metadata i32 %131, i64 0, metadata !116, metadata !145), !dbg !684
  %132 = sext i32 %131 to i64, !dbg !737
  %133 = getelementptr inbounds i32* %19, i64 %132, !dbg !737
  %134 = load i32* %133, align 4, !dbg !737, !tbaa !189
  %135 = sext i32 %134 to i64, !dbg !738
  %136 = getelementptr inbounds i8* %xs, i64 %135, !dbg !738
  %137 = load i8* %136, align 1, !dbg !738, !tbaa !162
  tail call void @llvm.dbg.value(metadata i8 %137, i64 0, metadata !118, metadata !145), !dbg !687
  %138 = getelementptr inbounds i8* %ys, i64 %135, !dbg !739
  %139 = load i8* %138, align 1, !dbg !739, !tbaa !162
  tail call void @llvm.dbg.value(metadata i8 %139, i64 0, metadata !119, metadata !145), !dbg !689
  tail call void @llvm.dbg.value(metadata i32 %134, i64 0, metadata !117, metadata !145), !dbg !717
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !711
  %140 = getelementptr inbounds i32* %19, i64 %indvars.iv.next, !dbg !740
  %141 = load i32* %140, align 4, !dbg !740, !tbaa !189
  %142 = sext i32 %141 to i64, !dbg !741
  %143 = getelementptr inbounds i8* %xs, i64 %142, !dbg !741
  %144 = load i8* %143, align 1, !dbg !741, !tbaa !162
  store i8 %144, i8* %136, align 1, !dbg !742, !tbaa !162
  %145 = load i32* %140, align 4, !dbg !743, !tbaa !189
  %146 = sext i32 %145 to i64, !dbg !744
  %147 = getelementptr inbounds i8* %ys, i64 %146, !dbg !744
  %148 = load i8* %147, align 1, !dbg !744, !tbaa !162
  %149 = load i32* %133, align 4, !dbg !745, !tbaa !189
  %150 = sext i32 %149 to i64, !dbg !746
  %151 = getelementptr inbounds i8* %ys, i64 %150, !dbg !746
  store i8 %148, i8* %151, align 1, !dbg !747, !tbaa !162
  %152 = load i32* %140, align 4, !dbg !748, !tbaa !189
  store i32 %152, i32* %133, align 4, !dbg !749, !tbaa !189
  %153 = load i32* %140, align 4, !dbg !750, !tbaa !189
  %154 = sext i32 %153 to i64, !dbg !751
  %155 = getelementptr inbounds i8* %xs, i64 %154, !dbg !751
  store i8 %137, i8* %155, align 1, !dbg !752, !tbaa !162
  %156 = load i32* %140, align 4, !dbg !753, !tbaa !189
  %157 = sext i32 %156 to i64, !dbg !754
  %158 = getelementptr inbounds i8* %ys, i64 %157, !dbg !754
  store i8 %139, i8* %158, align 1, !dbg !755, !tbaa !162
  store i32 %134, i32* %140, align 4, !dbg !756, !tbaa !189
  %159 = icmp sgt i64 %indvars.iv.next, 1, !dbg !708
  br i1 %159, label %126, label %._crit_edge, !dbg !711

._crit_edge:                                      ; preds = %126, %10, %.preheader
  tail call void @free(i8* %14) #7, !dbg !757
  tail call void @free(i8* %16) #7, !dbg !758
  tail call void @free(i8* %18) #7, !dbg !759
  ret i32 1, !dbg !760
}
