define i32 @StrReverse(i8* nocapture %s1, i8* nocapture %s2) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8* %s1}, i64 0, metadata !96), !dbg !305
  tail call void @llvm.dbg.value(metadata !{i8* %s2}, i64 0, metadata !97), !dbg !305
  %call = tail call i64 @strlen(i8* %s2) #8, !dbg !306
  %conv = trunc i64 %call to i32, !dbg !306
  tail call void @llvm.dbg.value(metadata !{i32 %conv}, i64 0, metadata !98), !dbg !306
  tail call void @llvm.dbg.value(metadata !18, i64 0, metadata !99), !dbg !307
  %div = sdiv i32 %conv, 2, !dbg !307
  %cmp34 = icmp sgt i32 %conv, 1, !dbg !307
  br i1 %cmp34, label %for.body.lr.ph, label %for.end, !dbg !307

for.body.lr.ph:                                   ; preds = %entry
  %sub = add i64 %call, 4294967295, !dbg !309
  %0 = icmp sgt i32 %conv, 3, !dbg !307
  br label %for.body, !dbg !307

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %sub2 = sub i64 %sub, %indvars.iv, !dbg !309
  %sext36 = shl i64 %sub2, 32, !dbg !309
  %idxprom = ashr exact i64 %sext36, 32, !dbg !309
  %arrayidx = getelementptr inbounds i8* %s2, i64 %idxprom, !dbg !309
  %1 = load i8* %arrayidx, align 1, !dbg !309, !tbaa !160
  tail call void @llvm.dbg.value(metadata !{i8 %1}, i64 0, metadata !100), !dbg !309
  %arrayidx4 = getelementptr inbounds i8* %s2, i64 %indvars.iv, !dbg !311
  %2 = load i8* %arrayidx4, align 1, !dbg !311, !tbaa !160
  %arrayidx8 = getelementptr inbounds i8* %s1, i64 %idxprom, !dbg !311
  store i8 %2, i8* %arrayidx8, align 1, !dbg !311, !tbaa !160
  %arrayidx10 = getelementptr inbounds i8* %s1, i64 %indvars.iv, !dbg !312
  store i8 %1, i8* %arrayidx10, align 1, !dbg !312, !tbaa !160
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !307
  %3 = trunc i64 %indvars.iv.next to i32, !dbg !307
  %cmp = icmp slt i32 %3, %div, !dbg !307
  br i1 %cmp, label %for.body, label %for.cond.for.end_crit_edge, !dbg !307

for.cond.for.end_crit_edge:                       ; preds = %for.body
  %4 = sext i32 %div to i64, !dbg !307
  %phitmp = select i1 %0, i64 %4, i64 1, !dbg !307
  br label %for.end, !dbg !307

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %entry
  %pos.0.lcssa = phi i64 [ %phitmp, %for.cond.for.end_crit_edge ], [ 0, %entry ]
  %rem33 = and i32 %conv, 1, !dbg !313
  %tobool = icmp eq i32 %rem33, 0, !dbg !313
  br i1 %tobool, label %if.end, label %if.then, !dbg !313

if.then:                                          ; preds = %for.end
  %arrayidx12 = getelementptr inbounds i8* %s2, i64 %pos.0.lcssa, !dbg !314
  %5 = load i8* %arrayidx12, align 1, !dbg !314, !tbaa !160
  %arrayidx14 = getelementptr inbounds i8* %s1, i64 %pos.0.lcssa, !dbg !314
  store i8 %5, i8* %arrayidx14, align 1, !dbg !314, !tbaa !160
  br label %if.end, !dbg !314

if.end:                                           ; preds = %for.end, %if.then
  %sext = shl i64 %call, 32, !dbg !316
  %idxprom15 = ashr exact i64 %sext, 32, !dbg !316
  %arrayidx16 = getelementptr inbounds i8* %s1, i64 %idxprom15, !dbg !316
  store i8 0, i8* %arrayidx16, align 1, !dbg !316, !tbaa !160
  ret i32 1, !dbg !317
}
