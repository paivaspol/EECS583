define i32 @StrRegionalShuffle(i8* %s1, i8* %s2, i32 %w) #0 {
  tail call void @llvm.dbg.value(metadata i8* %s1, i64 0, metadata !72, metadata !145), !dbg !525
  tail call void @llvm.dbg.value(metadata i8* %s2, i64 0, metadata !73, metadata !145), !dbg !526
  tail call void @llvm.dbg.value(metadata i32 %w, i64 0, metadata !74, metadata !145), !dbg !527
  %1 = icmp eq i8* %s1, %s2, !dbg !528
  br i1 %1, label %5, label %2, !dbg !530

; <label>:2                                       ; preds = %0
  %3 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %s1, i1 false), !dbg !531
  %4 = tail call i8* @__strcpy_chk(i8* %s1, i8* %s2, i64 %3) #6, !dbg !531
  br label %5, !dbg !531

; <label>:5                                       ; preds = %0, %2
  %6 = tail call i64 @strlen(i8* %s1) #6, !dbg !532
  %7 = trunc i64 %6 to i32, !dbg !532
  tail call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !75, metadata !145), !dbg !533
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !78, metadata !145), !dbg !534
  %8 = icmp sgt i32 %7, 0, !dbg !535
  br i1 %8, label %.lr.ph4, label %._crit_edge, !dbg !538

.lr.ph4:                                          ; preds = %5
  %9 = xor i32 %w, -1, !dbg !538
  %10 = xor i32 %7, -1, !dbg !538
  %11 = sext i32 %w to i64
  %sext = shl i64 %6, 32, !dbg !538
  %12 = ashr exact i64 %sext, 32, !dbg !538
  br label %14, !dbg !538

.loopexit:                                        ; preds = %22, %14
  %13 = icmp slt i64 %indvars.iv.next9, %12, !dbg !535
  %indvars.iv.next = sub i32 %indvars.iv, %w, !dbg !538
  br i1 %13, label %14, label %._crit_edge, !dbg !538

; <label>:14                                      ; preds = %.lr.ph4, %.loopexit
  %indvars.iv8 = phi i64 [ 0, %.lr.ph4 ], [ %indvars.iv.next9, %.loopexit ]
  %indvars.iv = phi i32 [ %9, %.lr.ph4 ], [ %indvars.iv.next, %.loopexit ]
  %indvars.iv.next9 = add i64 %indvars.iv8, %11, !dbg !538
  %15 = icmp slt i64 %12, %indvars.iv.next9, !dbg !539
  %16 = trunc i64 %indvars.iv.next9 to i32, !dbg !539
  %. = select i1 %15, i32 %7, i32 %16, !dbg !539
  %j.01 = add nsw i32 %., -1, !dbg !539
  %17 = sext i32 %j.01 to i64, !dbg !541
  %18 = icmp sgt i64 %17, %indvars.iv8, !dbg !541
  br i1 %18, label %.lr.ph, label %.loopexit, !dbg !543

.lr.ph:                                           ; preds = %14
  %19 = icmp sgt i32 %indvars.iv, %10
  %smax = select i1 %19, i32 %indvars.iv, i32 %10
  %20 = sub i32 -2, %smax, !dbg !539
  %21 = sext i32 %20 to i64
  br label %22, !dbg !543

; <label>:22                                      ; preds = %.lr.ph, %22
  %indvars.iv5 = phi i64 [ %21, %.lr.ph ], [ %indvars.iv.next6, %22 ]
  %j.02 = phi i32 [ %j.01, %.lr.ph ], [ %j.0, %22 ]
  %23 = tail call double @sre_random() #6, !dbg !544
  %24 = sub nsw i64 %indvars.iv5, %indvars.iv8, !dbg !544
  %25 = trunc i64 %24 to i32, !dbg !544
  %26 = sitofp i32 %25 to double, !dbg !544
  %27 = fmul double %26, %23, !dbg !544
  %28 = fptosi double %27 to i32, !dbg !544
  %29 = trunc i64 %indvars.iv8 to i32, !dbg !546
  %30 = add nsw i32 %28, %29, !dbg !546
  tail call void @llvm.dbg.value(metadata i32 %30, i64 0, metadata !77, metadata !145), !dbg !547
  %31 = sext i32 %30 to i64, !dbg !548
  %32 = getelementptr inbounds i8* %s1, i64 %31, !dbg !548
  %33 = load i8* %32, align 1, !dbg !548, !tbaa !162
  tail call void @llvm.dbg.value(metadata i8 %33, i64 0, metadata !76, metadata !145), !dbg !549
  %34 = getelementptr inbounds i8* %s1, i64 %indvars.iv5, !dbg !550
  %35 = load i8* %34, align 1, !dbg !550, !tbaa !162
  store i8 %35, i8* %32, align 1, !dbg !551, !tbaa !162
  store i8 %33, i8* %34, align 1, !dbg !552, !tbaa !162
  %j.0 = add nsw i32 %j.02, -1, !dbg !539
  %36 = sext i32 %j.0 to i64, !dbg !541
  %37 = icmp sgt i64 %36, %indvars.iv8, !dbg !541
  %indvars.iv.next6 = add nsw i64 %indvars.iv5, -1, !dbg !543
  br i1 %37, label %22, label %.loopexit, !dbg !543

._crit_edge:                                      ; preds = %.loopexit, %5
  ret i32 1, !dbg !553
}
