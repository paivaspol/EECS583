define double @Gaussrandom(double %mean, double %stddev) #0 {
  tail call void @llvm.dbg.value(metadata double %mean, i64 0, metadata !38, metadata !93), !dbg !211
  tail call void @llvm.dbg.value(metadata double %stddev, i64 0, metadata !39, metadata !93), !dbg !212
  %1 = tail call double @sre_random() #3, !dbg !213
  %2 = fcmp ogt double %1, 5.000000e-01, !dbg !214
  %storemerge6 = select i1 %2, double 1.000000e+00, double 0.000000e+00, !dbg !216
  store double %storemerge6, double* @Gaussrandom.s, align 8, !dbg !217, !tbaa !218
  %3 = fsub double %1, %storemerge6, !dbg !220
  %4 = fadd double %1, %3, !dbg !221
  %5 = fmul double %4, 3.200000e+01, !dbg !222
  store double %5, double* @Gaussrandom.u, align 8, !dbg !223, !tbaa !218
  %6 = fptosi double %5 to i64, !dbg !224
  %7 = icmp eq i64 %6, 32, !dbg !225
  %. = select i1 %7, i64 31, i64 %6, !dbg !227
  store i64 %., i64* @Gaussrandom.i, align 8, !dbg !228, !tbaa !111
  %8 = icmp eq i64 %., 0, !dbg !229
  br i1 %8, label %58, label %9, !dbg !231

; <label>:9                                       ; preds = %0
  %10 = sitofp i64 %. to double, !dbg !232
  %11 = fsub double %5, %10, !dbg !233
  store double %11, double* @Gaussrandom.ustar, align 8, !dbg !234, !tbaa !218
  %.sum = add i64 %., -1, !dbg !235
  %12 = getelementptr inbounds [32 x double]* @Gaussrandom.a, i64 0, i64 %.sum, !dbg !235
  %13 = bitcast double* %12 to i64*, !dbg !236
  %14 = load i64* %13, align 8, !dbg !236, !tbaa !218
  store i64 %14, i64* bitcast (double* @Gaussrandom.aa to i64*), align 8, !dbg !237, !tbaa !218
  %15 = getelementptr inbounds [31 x double]* @Gaussrandom.t, i64 0, i64 %.sum, !dbg !238
  %16 = load double* %15, align 8, !dbg !240, !tbaa !218
  %17 = fcmp ugt double %11, %16, !dbg !241
  br i1 %17, label %._crit_edge22, label %.lr.ph21, !dbg !242

._crit_edge22:                                    ; preds = %52, %9
  %.lcssa11 = phi double [ %16, %9 ], [ %56, %52 ]
  %.sum1.lcssa = phi i64 [ %.sum, %9 ], [ %.sum1, %52 ]
  %.lcssa8 = phi double [ %11, %9 ], [ %53, %52 ]
  %18 = fsub double %.lcssa8, %.lcssa11, !dbg !243
  %19 = getelementptr inbounds [31 x double]* @Gaussrandom.h, i64 0, i64 %.sum1.lcssa, !dbg !244
  %20 = load double* %19, align 8, !dbg !245, !tbaa !218
  %21 = fmul double %18, %20, !dbg !246
  store double %21, double* @Gaussrandom.w, align 8, !dbg !247, !tbaa !218
  br label %.loopexit, !dbg !248

.loopexit:                                        ; preds = %.lr.ph21, %48, %83, %._crit_edge22
  %22 = load double* @Gaussrandom.aa, align 8, !dbg !249, !tbaa !218
  %23 = load double* @Gaussrandom.w, align 8, !dbg !250, !tbaa !218
  %24 = fadd double %22, %23, !dbg !251
  store double %24, double* @Gaussrandom.y, align 8, !dbg !252, !tbaa !218
  store double %24, double* @Gaussrandom.snorm, align 8, !dbg !253, !tbaa !218
  %25 = load double* @Gaussrandom.s, align 8, !dbg !254, !tbaa !218
  %26 = fcmp oeq double %25, 1.000000e+00, !dbg !256
  br i1 %26, label %27, label %29, !dbg !257

; <label>:27                                      ; preds = %.loopexit
  %28 = fsub double -0.000000e+00, %24, !dbg !258
  store double %28, double* @Gaussrandom.snorm, align 8, !dbg !259, !tbaa !218
  br label %29, !dbg !260

; <label>:29                                      ; preds = %27, %.loopexit
  %30 = phi double [ %28, %27 ], [ %24, %.loopexit ]
  %31 = fmul double %30, %stddev, !dbg !261
  %32 = fadd double %31, %mean, !dbg !262
  ret double %32, !dbg !263

.lr.ph21:                                         ; preds = %9, %52
  %33 = tail call double @sre_random() #3, !dbg !264
  store double %33, double* @Gaussrandom.u, align 8, !dbg !265, !tbaa !218
  %34 = load i64* @Gaussrandom.i, align 8, !dbg !266, !tbaa !111
  %35 = getelementptr inbounds [32 x double]* @Gaussrandom.a, i64 0, i64 %34, !dbg !267
  %36 = load double* %35, align 8, !dbg !268, !tbaa !218
  %37 = load double* @Gaussrandom.aa, align 8, !dbg !269, !tbaa !218
  %38 = fsub double %36, %37, !dbg !270
  %39 = fmul double %33, %38, !dbg !271
  store double %39, double* @Gaussrandom.w, align 8, !dbg !272, !tbaa !218
  %40 = fmul double %39, 5.000000e-01, !dbg !273
  %41 = fadd double %37, %40, !dbg !274
  %42 = fmul double %39, %41, !dbg !275
  store double %42, double* @Gaussrandom.tt, align 8, !dbg !276, !tbaa !218
  %43 = load double* @Gaussrandom.ustar, align 8, !dbg !277, !tbaa !218
  %44 = fcmp ogt double %43, %42, !dbg !279
  br i1 %44, label %.loopexit, label %.lr.ph17, !dbg !280

.lr.ph17:                                         ; preds = %.lr.ph21, %48
  %45 = tail call double @sre_random() #3, !dbg !281
  store double %45, double* @Gaussrandom.u, align 8, !dbg !282, !tbaa !218
  %46 = load double* @Gaussrandom.ustar, align 8, !dbg !283, !tbaa !218
  %47 = fcmp ult double %46, %45, !dbg !285
  br i1 %47, label %52, label %48, !dbg !286

; <label>:48                                      ; preds = %.lr.ph17
  store double %45, double* @Gaussrandom.tt, align 8, !dbg !287, !tbaa !218
  %49 = tail call double @sre_random() #3, !dbg !288
  store double %49, double* @Gaussrandom.ustar, align 8, !dbg !289, !tbaa !218
  %50 = load double* @Gaussrandom.tt, align 8, !dbg !290, !tbaa !218
  %51 = fcmp ogt double %49, %50, !dbg !279
  br i1 %51, label %.loopexit, label %.lr.ph17, !dbg !280

; <label>:52                                      ; preds = %.lr.ph17
  %53 = tail call double @sre_random() #3, !dbg !291
  store double %53, double* @Gaussrandom.ustar, align 8, !dbg !292, !tbaa !218
  %54 = load i64* @Gaussrandom.i, align 8, !dbg !293, !tbaa !111
  %.sum1 = add i64 %54, -1, !dbg !238
  %55 = getelementptr inbounds [31 x double]* @Gaussrandom.t, i64 0, i64 %.sum1, !dbg !238
  %56 = load double* %55, align 8, !dbg !240, !tbaa !218
  %57 = fcmp ugt double %53, %56, !dbg !241
  br i1 %57, label %._crit_edge22, label %.lr.ph21, !dbg !242

; <label>:58                                      ; preds = %0
  store i64 6, i64* @Gaussrandom.i, align 8, !dbg !294, !tbaa !111
  store double 2.153875e+00, double* @Gaussrandom.aa, align 8, !dbg !295, !tbaa !218
  %59 = fadd double %5, %5, !dbg !296
  store double %59, double* @Gaussrandom.u, align 8, !dbg !296, !tbaa !218
  %60 = fcmp olt double %59, 1.000000e+00, !dbg !297
  br i1 %60, label %.lr.ph, label %70, !dbg !299

.lr.ph:                                           ; preds = %58, %.lr.ph
  %61 = phi double [ %68, %.lr.ph ], [ %59, %58 ], !dbg !300
  %62 = phi double [ %66, %.lr.ph ], [ 2.153875e+00, %58 ], !dbg !300
  %63 = phi i64 [ %67, %.lr.ph ], [ 6, %58 ], !dbg !301
  %.sum5 = add i64 %63, -1, !dbg !300
  %64 = getelementptr inbounds [31 x double]* @Gaussrandom.d, i64 0, i64 %.sum5, !dbg !300
  %65 = load double* %64, align 8, !dbg !302, !tbaa !218
  %66 = fadd double %65, %62, !dbg !303
  %67 = add nsw i64 %63, 1, !dbg !304
  %68 = fadd double %61, %61, !dbg !296
  %69 = fcmp olt double %68, 1.000000e+00, !dbg !297
  br i1 %69, label %.lr.ph, label %._crit_edge, !dbg !299

._crit_edge:                                      ; preds = %.lr.ph
  store i64 %67, i64* @Gaussrandom.i, align 8, !dbg !304, !tbaa !111
  store double %66, double* @Gaussrandom.aa, align 8, !dbg !303, !tbaa !218
  store double %68, double* @Gaussrandom.u, align 8, !dbg !296, !tbaa !218
  br label %70, !dbg !299

; <label>:70                                      ; preds = %._crit_edge, %58
  %71 = phi double [ %66, %._crit_edge ], [ 2.153875e+00, %58 ]
  %72 = phi i64 [ %67, %._crit_edge ], [ 6, %58 ]
  %.lcssa = phi double [ %68, %._crit_edge ], [ %59, %58 ]
  %73 = fadd double %.lcssa, -1.000000e+00, !dbg !305
  br label %74, !dbg !306

; <label>:74                                      ; preds = %91, %70
  %75 = phi double [ %71, %70 ], [ %.pre32, %91 ]
  %76 = phi i64 [ %72, %70 ], [ %.pre, %91 ]
  %storemerge = phi double [ %73, %70 ], [ %92, %91 ]
  store double %storemerge, double* @Gaussrandom.u, align 8, !dbg !307, !tbaa !218
  %.sum3 = add i64 %76, -1, !dbg !308
  %77 = getelementptr inbounds [31 x double]* @Gaussrandom.d, i64 0, i64 %.sum3, !dbg !308
  %78 = load double* %77, align 8, !dbg !309, !tbaa !218
  %79 = fmul double %storemerge, %78, !dbg !310
  store double %79, double* @Gaussrandom.w, align 8, !dbg !311, !tbaa !218
  %80 = fmul double %79, 5.000000e-01, !dbg !312
  %81 = fadd double %75, %80, !dbg !313
  %82 = fmul double %79, %81, !dbg !314
  br label %83, !dbg !315

; <label>:83                                      ; preds = %87, %74
  %storemerge4 = phi double [ %82, %74 ], [ %88, %87 ]
  store double %storemerge4, double* @Gaussrandom.tt, align 8, !dbg !316, !tbaa !218
  %84 = tail call double @sre_random() #3, !dbg !317
  store double %84, double* @Gaussrandom.ustar, align 8, !dbg !318, !tbaa !218
  %85 = load double* @Gaussrandom.tt, align 8, !dbg !319, !tbaa !218
  %86 = fcmp ogt double %84, %85, !dbg !321
  br i1 %86, label %.loopexit, label %87, !dbg !322

; <label>:87                                      ; preds = %83
  %88 = tail call double @sre_random() #3, !dbg !323
  store double %88, double* @Gaussrandom.u, align 8, !dbg !324, !tbaa !218
  %89 = load double* @Gaussrandom.ustar, align 8, !dbg !325, !tbaa !218
  %90 = fcmp ult double %89, %88, !dbg !327
  br i1 %90, label %91, label %83, !dbg !328

; <label>:91                                      ; preds = %87
  %92 = tail call double @sre_random() #3, !dbg !329
  %.pre = load i64* @Gaussrandom.i, align 8, !dbg !330, !tbaa !111
  %.pre32 = load double* @Gaussrandom.aa, align 8, !dbg !331, !tbaa !218
  br label %74, !dbg !332
}
