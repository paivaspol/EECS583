define internal fastcc %struct.ReadSeqVars* @seqfile_open(i8* %filename, i32 %format, i8* %env, i32 %ssimode) #0 {
entry:
  %call = tail call i8* @sre_malloc(i8* getelementptr inbounds ([50 x i8]* @.str78, i64 0, i64 0), i32 101, i64 176) #8
  %0 = bitcast i8* %call to %struct.ReadSeqVars*
  %ssimode1 = getelementptr inbounds i8* %call, i64 36
  %1 = bitcast i8* %ssimode1 to i32*
  store i32 %ssimode, i32* %1, align 4, !tbaa !0
  %rpl = getelementptr inbounds i8* %call, i64 88
  %2 = bitcast i8* %rpl to i32*
  store i32 -1, i32* %2, align 4, !tbaa !0
  %lastrpl = getelementptr inbounds i8* %call, i64 92
  %3 = bitcast i8* %lastrpl to i32*
  store i32 0, i32* %3, align 4, !tbaa !0
  %maxrpl = getelementptr inbounds i8* %call, i64 96
  %4 = bitcast i8* %maxrpl to i32*
  store i32 0, i32* %4, align 4, !tbaa !0
  %bpl = getelementptr inbounds i8* %call, i64 100
  %5 = bitcast i8* %bpl to i32*
  store i32 -1, i32* %5, align 4, !tbaa !0
  %lastbpl = getelementptr inbounds i8* %call, i64 104
  %6 = bitcast i8* %lastbpl to i32*
  store i32 0, i32* %6, align 4, !tbaa !0
  %maxbpl = getelementptr inbounds i8* %call, i64 108
  %7 = bitcast i8* %maxbpl to i32*
  store i32 0, i32* %7, align 4, !tbaa !0
  %call2 = tail call i32 @strcmp(i8* %filename, i8* getelementptr inbounds ([2 x i8]* @.str52, i64 0, i64 0)) #9
  %cmp = icmp eq i32 %call2, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %8 = load %struct._IO_FILE** @stdin, align 8, !tbaa !3
  %f = bitcast i8* %call to %struct._IO_FILE**
  store %struct._IO_FILE* %8, %struct._IO_FILE** %f, align 8, !tbaa !3
  %do_stdin = getelementptr inbounds i8* %call, i64 152
  %9 = bitcast i8* %do_stdin to i32*
  store i32 1, i32* %9, align 4, !tbaa !0
  %do_gzip = getelementptr inbounds i8* %call, i64 148
  %10 = bitcast i8* %do_gzip to i32*
  store i32 0, i32* %10, align 4, !tbaa !0
  %call3 = tail call i8* @sre_strdup(i8* getelementptr inbounds ([8 x i8]* @.str140, i64 0, i64 0), i32 -1) #8
  %fname = getelementptr inbounds i8* %call, i64 8
  %11 = bitcast i8* %fname to i8**
  store i8* %call3, i8** %11, align 8, !tbaa !3
  br label %if.end15

if.else:                                          ; preds = %entry
  %call4 = tail call %struct._IO_FILE* @fopen(i8* %filename, i8* getelementptr inbounds ([2 x i8]* @.str141, i64 0, i64 0)) #8
  %f5 = bitcast i8* %call to %struct._IO_FILE**
  store %struct._IO_FILE* %call4, %struct._IO_FILE** %f5, align 8, !tbaa !3
  %cmp6 = icmp eq %struct._IO_FILE* %call4, null
  br i1 %cmp6, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.else
  %call7 = tail call %struct._IO_FILE* @EnvFileOpen(i8* %filename, i8* %env, i8** null) #8
  store %struct._IO_FILE* %call7, %struct._IO_FILE** %f5, align 8, !tbaa !3
  %cmp9 = icmp eq %struct._IO_FILE* %call7, null
  br i1 %cmp9, label %return, label %if.end

if.end:                                           ; preds = %land.lhs.true, %if.else
  %do_stdin11 = getelementptr inbounds i8* %call, i64 152
  %12 = bitcast i8* %do_stdin11 to i32*
  store i32 0, i32* %12, align 4, !tbaa !0
  %do_gzip12 = getelementptr inbounds i8* %call, i64 148
  %13 = bitcast i8* %do_gzip12 to i32*
  store i32 0, i32* %13, align 4, !tbaa !0
  %call13 = tail call i8* @sre_strdup(i8* %filename, i32 -1) #8
  %fname14 = getelementptr inbounds i8* %call, i64 8
  %14 = bitcast i8* %fname14 to i8**
  store i8* %call13, i8** %14, align 8, !tbaa !3
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  %cmp16 = icmp eq i32 %format, 0
  br i1 %cmp16, label %if.then17, label %if.end29

if.then17:                                        ; preds = %if.end15
  %do_stdin18 = getelementptr inbounds i8* %call, i64 152
  %15 = bitcast i8* %do_stdin18 to i32*
  %16 = load i32* %15, align 4, !tbaa !0
  %cmp19 = icmp eq i32 %16, 1
  br i1 %cmp19, label %if.then21, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then17
  %do_gzip20 = getelementptr inbounds i8* %call, i64 148
  %17 = bitcast i8* %do_gzip20 to i32*
  %18 = load i32* %17, align 4, !tbaa !0
  %tobool = icmp eq i32 %18, 0
  br i1 %tobool, label %if.end22, label %if.then21

if.then21:                                        ; preds = %lor.lhs.false, %if.then17
  tail call void (i8*, ...)* @Die(i8* getelementptr inbounds ([64 x i8]* @.str142, i64 0, i64 0)) #8
  br label %if.end22

if.end22:                                         ; preds = %lor.lhs.false, %if.then21
  %f23 = bitcast i8* %call to %struct._IO_FILE**
  %19 = load %struct._IO_FILE** %f23, align 8, !tbaa !3
  %call24 = tail call i32 @SeqfileFormat(%struct._IO_FILE* %19) #7
  %cmp25 = icmp eq i32 %call24, 0
  br i1 %cmp25, label %if.then26, label %if.end29

if.then26:                                        ; preds = %if.end22
  %fname27 = getelementptr inbounds i8* %call, i64 8
  %20 = bitcast i8* %fname27 to i8**
  %21 = load i8** %20, align 8, !tbaa !3
  tail call void (i8*, ...)* @Die(i8* getelementptr inbounds ([43 x i8]* @.str143, i64 0, i64 0), i8* %21) #8
  br label %if.end29

if.end29:                                         ; preds = %if.end22, %if.then26, %if.end15
  %format.addr.0 = phi i32 [ 0, %if.then26 ], [ %call24, %if.end22 ], [ %format, %if.end15 ]
  %msa = getelementptr inbounds i8* %call, i64 160
  %22 = bitcast i8* %msa to %struct.msa_struct**
  %afp = getelementptr inbounds i8* %call, i64 168
  %23 = bitcast i8* %afp to %struct.msafile_struct**
  %format30 = getelementptr inbounds i8* %call, i64 144
  %24 = bitcast i8* %format30 to i32*
  call void @llvm.memset.p0i8.i64(i8* %msa, i8 0, i64 16, i32 8, i1 false)
  store i32 %format.addr.0, i32* %24, align 4, !tbaa !0
  %linenumber = getelementptr inbounds i8* %call, i64 16
  %25 = bitcast i8* %linenumber to i32*
  store i32 0, i32* %25, align 4, !tbaa !0
  %buf = getelementptr inbounds i8* %call, i64 24
  %26 = bitcast i8* %buf to i8**
  store i8* null, i8** %26, align 8, !tbaa !3
  %buflen = getelementptr inbounds i8* %call, i64 32
  %27 = bitcast i8* %buflen to i32*
  store i32 0, i32* %27, align 4, !tbaa !0
  %cmp31 = icmp sgt i32 %format.addr.0, 100
  br i1 %cmp31, label %if.then32, label %if.end65

if.then32:                                        ; preds = %if.end29
  %call33 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([50 x i8]* @.str78, i64 0, i64 0), i32 190, i64 64) #8
  %28 = bitcast i8* %call33 to %struct.msafile_struct*
  store %struct.msafile_struct* %28, %struct.msafile_struct** %23, align 8, !tbaa !3
  %f35 = bitcast i8* %call to %struct._IO_FILE**
  %29 = load %struct._IO_FILE** %f35, align 8, !tbaa !3
  %f37 = bitcast i8* %call33 to %struct._IO_FILE**
  store %struct._IO_FILE* %29, %struct._IO_FILE** %f37, align 8, !tbaa !3
  %do_stdin38 = getelementptr inbounds i8* %call, i64 152
  %30 = bitcast i8* %do_stdin38 to i32*
  %31 = load i32* %30, align 4, !tbaa !0
  %32 = load %struct.msafile_struct** %23, align 8, !tbaa !3
  %do_stdin40 = getelementptr inbounds %struct.msafile_struct* %32, i64 0, i32 7
  store i32 %31, i32* %do_stdin40, align 4, !tbaa !0
  %do_gzip41 = getelementptr inbounds i8* %call, i64 148
  %33 = bitcast i8* %do_gzip41 to i32*
  %34 = load i32* %33, align 4, !tbaa !0
  %do_gzip43 = getelementptr inbounds %struct.msafile_struct* %32, i64 0, i32 6
  store i32 %34, i32* %do_gzip43, align 4, !tbaa !0
  %fname44 = getelementptr inbounds i8* %call, i64 8
  %35 = bitcast i8* %fname44 to i8**
  %36 = load i8** %35, align 8, !tbaa !3
  %fname46 = getelementptr inbounds %struct.msafile_struct* %32, i64 0, i32 1
  store i8* %36, i8** %fname46, align 8, !tbaa !3
  %37 = load i32* %24, align 4, !tbaa !0
  %38 = load %struct.msafile_struct** %23, align 8, !tbaa !3
  %format49 = getelementptr inbounds %struct.msafile_struct* %38, i64 0, i32 8
  store i32 %37, i32* %format49, align 4, !tbaa !0
  %39 = load i32* %25, align 4, !tbaa !0
  %linenumber52 = getelementptr inbounds %struct.msafile_struct* %38, i64 0, i32 2
  store i32 %39, i32* %linenumber52, align 4, !tbaa !0
  %buf54 = getelementptr inbounds %struct.msafile_struct* %38, i64 0, i32 3
  store i8* null, i8** %buf54, align 8, !tbaa !3
  %40 = load %struct.msafile_struct** %23, align 8, !tbaa !3
  %buflen56 = getelementptr inbounds %struct.msafile_struct* %40, i64 0, i32 4
  store i32 0, i32* %buflen56, align 4, !tbaa !0
  %call58 = tail call %struct.msa_struct* @MSAFileRead(%struct.msafile_struct* %40) #8
  store %struct.msa_struct* %call58, %struct.msa_struct** %22, align 8, !tbaa !3
  %cmp60 = icmp eq %struct.msa_struct* %call58, null
  br i1 %cmp60, label %if.then61, label %if.end63

if.then61:                                        ; preds = %if.then32
  %41 = load i8** %35, align 8, !tbaa !3
  tail call void (i8*, ...)* @Die(i8* getelementptr inbounds ([47 x i8]* @.str144, i64 0, i64 0), i8* %41) #8
  %.pre = load %struct.msa_struct** %22, align 8, !tbaa !3
  br label %if.end63

if.end63:                                         ; preds = %if.then61, %if.then32
  %42 = phi %struct.msa_struct* [ %.pre, %if.then61 ], [ %call58, %if.then32 ]
  %lastidx = getelementptr inbounds %struct.msa_struct* %42, i64 0, i32 45
  store i32 0, i32* %lastidx, align 4, !tbaa !0
  br label %return

if.end65:                                         ; preds = %if.end29
  tail call fastcc void @SeqfileGetLine(%struct.ReadSeqVars* %0) #7
  br label %return

return:                                           ; preds = %land.lhs.true, %if.end65, %if.end63
  %retval.0 = phi %struct.ReadSeqVars* [ %0, %if.end63 ], [ %0, %if.end65 ], [ null, %land.lhs.true ]
  ret %struct.ReadSeqVars* %retval.0
}
