define internal fastcc void @readLoop(i32 %addfirst, i32 (i8*, i32*)* nocapture %endTest, %struct.ReadSeqVars* %V) #0 {
entry:
  %addend = alloca i32, align 4
  call void @llvm.dbg.value(metadata !{i32 %addfirst}, i64 0, metadata !514), !dbg !1519
  call void @llvm.dbg.value(metadata !{i32 (i8*, i32*)* %endTest}, i64 0, metadata !515), !dbg !1519
  call void @llvm.dbg.value(metadata !{%struct.ReadSeqVars* %V}, i64 0, metadata !516), !dbg !1519
  call void @llvm.dbg.declare(metadata !{i32* %addend}, metadata !517), !dbg !1520
  call void @llvm.dbg.value(metadata !18, i64 0, metadata !517), !dbg !1520
  store i32 0, i32* %addend, align 4, !dbg !1520, !tbaa !600
  call void @llvm.dbg.value(metadata !18, i64 0, metadata !518), !dbg !1521
  %seqlen = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 18, !dbg !1522
  store i32 0, i32* %seqlen, align 4, !dbg !1522, !tbaa !600
  %lastbpl = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 13, !dbg !1523
  store i32 0, i32* %lastbpl, align 4, !dbg !1523, !tbaa !600
  %lastrpl = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 10, !dbg !1523
  store i32 0, i32* %lastrpl, align 4, !dbg !1523, !tbaa !600
  %tobool = icmp eq i32 %addfirst, 0, !dbg !1524
  %ssimode = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 5, !dbg !1525
  %0 = load i32* %ssimode, align 4, !dbg !1525, !tbaa !600
  %cmp = icmp sgt i32 %0, -1, !dbg !1525
  br i1 %tobool, label %if.else, label %if.then, !dbg !1524

if.then:                                          ; preds = %entry
  br i1 %cmp, label %if.then1, label %if.end, !dbg !1525

if.then1:                                         ; preds = %if.then
  %1 = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 8, i32 0, !dbg !1525
  %2 = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 6, i32 0, !dbg !1525
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 16, i32 8, i1 false), !dbg !1525, !tbaa.struct !900
  br label %if.end, !dbg !1525

if.end:                                           ; preds = %if.then1, %if.then
  %buf = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 3, !dbg !1527
  %3 = load i8** %buf, align 8, !dbg !1527, !tbaa !612
  call fastcc void @addseq(i8* %3, %struct.ReadSeqVars* %V) #8, !dbg !1527
  br label %do.body.preheader, !dbg !1528

if.else:                                          ; preds = %entry
  br i1 %cmp, label %if.then4, label %do.body.preheader, !dbg !1529

if.then4:                                         ; preds = %if.else
  %f = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 0, !dbg !1530
  %4 = load %struct._IO_FILE** %f, align 8, !dbg !1530, !tbaa !612
  %d_off6 = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 8, !dbg !1530
  %call = call i32 @SSIGetFilePosition(%struct._IO_FILE* %4, i32 %0, %struct.ssioffset_s* %d_off6) #9, !dbg !1530
  %cmp7 = icmp eq i32 %call, 0, !dbg !1530
  br i1 %cmp7, label %do.body.preheader, label %if.then8, !dbg !1530

if.then8:                                         ; preds = %if.then4
  call void (i8*, ...)* @Die(i8* getelementptr inbounds ([28 x i8]* @.str120, i64 0, i64 0)) #9, !dbg !1531
  br label %do.body.preheader, !dbg !1531

do.body.preheader:                                ; preds = %if.else, %if.then8, %if.end, %if.then4
  %buf12 = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 3, !dbg !1532
  %f15 = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 0, !dbg !1532
  br label %do.body, !dbg !1534

do.body:                                          ; preds = %do.body.preheader, %do.cond
  call fastcc void @SeqfileGetLine(%struct.ReadSeqVars* %V) #8, !dbg !1534
  %5 = load i8** %buf12, align 8, !dbg !1532, !tbaa !612
  %6 = load i8* %5, align 1, !dbg !1532, !tbaa !601
  %cmp13 = icmp eq i8 %6, 0, !dbg !1532
  br i1 %cmp13, label %land.lhs.true, label %if.end19, !dbg !1532

land.lhs.true:                                    ; preds = %do.body
  %7 = load %struct._IO_FILE** %f15, align 8, !dbg !1532, !tbaa !612
  %call16 = call i32 @feof(%struct._IO_FILE* %7) #9, !dbg !1532
  call void @llvm.dbg.value(metadata !1036, i64 0, metadata !518), !dbg !1535
  %not.tobool17 = icmp ne i32 %call16, 0, !dbg !1532
  %done.0. = zext i1 %not.tobool17 to i32, !dbg !1532
  %.pre = load i8** %buf12, align 8, !dbg !1536, !tbaa !612
  br label %if.end19, !dbg !1532

if.end19:                                         ; preds = %land.lhs.true, %do.body
  %8 = phi i8* [ %5, %do.body ], [ %.pre, %land.lhs.true ]
  %done.1 = phi i32 [ 0, %do.body ], [ %done.0., %land.lhs.true ]
  %call21 = call i32 %endTest(i8* %8, i32* %addend) #9, !dbg !1536
  %or = or i32 %call21, %done.1, !dbg !1536
  call void @llvm.dbg.value(metadata !{i32 %or}, i64 0, metadata !518), !dbg !1536
  call void @llvm.dbg.value(metadata !{i32* %addend}, i64 0, metadata !517), !dbg !1537
  %9 = load i32* %addend, align 4, !dbg !1537, !tbaa !600
  %tobool22 = icmp ne i32 %9, 0, !dbg !1537
  %tobool23 = icmp eq i32 %or, 0, !dbg !1537
  %or.cond = or i1 %tobool22, %tobool23, !dbg !1537
  br i1 %or.cond, label %if.then24, label %do.cond, !dbg !1537

if.then24:                                        ; preds = %if.end19
  %10 = load i8** %buf12, align 8, !dbg !1538, !tbaa !612
  call fastcc void @addseq(i8* %10, %struct.ReadSeqVars* %V) #8, !dbg !1538
  br label %do.cond, !dbg !1538

do.cond:                                          ; preds = %if.end19, %if.then24
  br i1 %tobool23, label %do.body, label %do.end, !dbg !1539

do.end:                                           ; preds = %do.cond
  ret void, !dbg !1540
}
