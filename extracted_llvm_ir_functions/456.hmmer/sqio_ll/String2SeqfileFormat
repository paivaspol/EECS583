define i32 @String2SeqfileFormat(i8* %s) #0 {
entry:
  %cmp = icmp eq i8* %s, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %call = tail call i8* @sre_strdup(i8* %s, i32 -1) #8
  tail call void @s2upper(i8* %call) #8
  %call1 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([6 x i8]* @.str79, i64 0, i64 0)) #9
  %cmp2 = icmp eq i32 %call1, 0
  br i1 %cmp2, label %if.end93, label %if.else

if.else:                                          ; preds = %if.end
  %call4 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([8 x i8]* @.str80, i64 0, i64 0)) #9
  %cmp5 = icmp eq i32 %call4, 0
  br i1 %cmp5, label %if.end93, label %if.else7

if.else7:                                         ; preds = %if.else
  %call8 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([5 x i8]* @.str81, i64 0, i64 0)) #9
  %cmp9 = icmp eq i32 %call8, 0
  br i1 %cmp9, label %if.end93, label %if.else11

if.else11:                                        ; preds = %if.else7
  %call12 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([4 x i8]* @.str82, i64 0, i64 0)) #9
  %cmp13 = icmp eq i32 %call12, 0
  br i1 %cmp13, label %if.end93, label %if.else15

if.else15:                                        ; preds = %if.else11
  %call16 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([8 x i8]* @.str83, i64 0, i64 0)) #9
  %cmp17 = icmp eq i32 %call16, 0
  br i1 %cmp17, label %if.end93, label %if.else19

if.else19:                                        ; preds = %if.else15
  %call20 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([4 x i8]* @.str84, i64 0, i64 0)) #9
  %cmp21 = icmp eq i32 %call20, 0
  br i1 %cmp21, label %if.end93, label %if.else23

if.else23:                                        ; preds = %if.else19
  %call24 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([3 x i8]* @.str85, i64 0, i64 0)) #9
  %cmp25 = icmp eq i32 %call24, 0
  br i1 %cmp25, label %if.end93, label %if.else27

if.else27:                                        ; preds = %if.else23
  %call28 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([8 x i8]* @.str86, i64 0, i64 0)) #9
  %cmp29 = icmp eq i32 %call28, 0
  br i1 %cmp29, label %if.end93, label %if.else31

if.else31:                                        ; preds = %if.else27
  %call32 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([6 x i8]* @.str87, i64 0, i64 0)) #9
  %cmp33 = icmp eq i32 %call32, 0
  br i1 %cmp33, label %if.end93, label %if.else35

if.else35:                                        ; preds = %if.else31
  %call36 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([6 x i8]* @.str88, i64 0, i64 0)) #9
  %cmp37 = icmp eq i32 %call36, 0
  br i1 %cmp37, label %if.end93, label %if.else39

if.else39:                                        ; preds = %if.else35
  %call40 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([4 x i8]* @.str89, i64 0, i64 0)) #9
  %cmp41 = icmp eq i32 %call40, 0
  br i1 %cmp41, label %if.end93, label %if.else43

if.else43:                                        ; preds = %if.else39
  %call44 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([6 x i8]* @.str90, i64 0, i64 0)) #9
  %cmp45 = icmp eq i32 %call44, 0
  br i1 %cmp45, label %if.end93, label %if.else47

if.else47:                                        ; preds = %if.else43
  %call48 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([10 x i8]* @.str91, i64 0, i64 0)) #9
  %cmp49 = icmp eq i32 %call48, 0
  br i1 %cmp49, label %if.end93, label %if.else51

if.else51:                                        ; preds = %if.else47
  %call52 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([6 x i8]* @.str92, i64 0, i64 0)) #9
  %cmp53 = icmp eq i32 %call52, 0
  br i1 %cmp53, label %if.end93, label %if.else55

if.else55:                                        ; preds = %if.else51
  %call56 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([4 x i8]* @.str93, i64 0, i64 0)) #9
  %cmp57 = icmp eq i32 %call56, 0
  br i1 %cmp57, label %if.end93, label %if.else59

if.else59:                                        ; preds = %if.else55
  %call60 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([8 x i8]* @.str12, i64 0, i64 0)) #9
  %cmp61 = icmp eq i32 %call60, 0
  br i1 %cmp61, label %if.end93, label %if.else63

if.else63:                                        ; preds = %if.else59
  %call64 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([4 x i8]* @.str94, i64 0, i64 0)) #9
  %cmp65 = icmp eq i32 %call64, 0
  br i1 %cmp65, label %if.end93, label %if.else67

if.else67:                                        ; preds = %if.else63
  %call68 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([7 x i8]* @.str95, i64 0, i64 0)) #9
  %cmp69 = icmp eq i32 %call68, 0
  br i1 %cmp69, label %if.end93, label %if.else71

if.else71:                                        ; preds = %if.else67
  %call72 = tail call i32 @strcmp(i8* %call, i8* getelementptr inbounds ([4 x i8]* @.str96, i64 0, i64 0)) #9
  %cmp73 = icmp eq i32 %call72, 0
  %. = select i1 %cmp73, i32 107, i32 0
  br label %if.end93

if.end93:                                         ; preds = %if.else71, %if.else67, %if.else63, %if.else59, %if.else55, %if.else51, %if.else47, %if.else43, %if.else39, %if.else35, %if.else31, %if.else27, %if.else23, %if.else19, %if.else15, %if.else11, %if.else7, %if.else, %if.end
  %code.0 = phi i32 [ 7, %if.end ], [ 2, %if.else ], [ 4, %if.else7 ], [ 5, %if.else11 ], [ 16, %if.else15 ], [ 13, %if.else19 ], [ 1, %if.else23 ], [ 6, %if.else27 ], [ 9, %if.else31 ], [ 8, %if.else35 ], [ 12, %if.else39 ], [ 14, %if.else43 ], [ 101, %if.else47 ], [ 102, %if.else51 ], [ 103, %if.else55 ], [ 104, %if.else59 ], [ 105, %if.else63 ], [ 106, %if.else67 ], [ %., %if.else71 ]
  tail call void @free(i8* %call) #8
  br label %return

return:                                           ; preds = %entry, %if.end93
  %retval.0 = phi i32 [ %code.0, %if.end93 ], [ 0, %entry ]
  ret i32 %retval.0
}
