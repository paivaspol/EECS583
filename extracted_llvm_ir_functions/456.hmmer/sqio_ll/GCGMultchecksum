define i32 @GCGMultchecksum(i8** nocapture %seqs, i32 %nseq) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i8** %seqs}, i64 0, metadata !376), !dbg !1210
  tail call void @llvm.dbg.value(metadata !{i32 %nseq}, i64 0, metadata !377), !dbg !1210
  tail call void @llvm.dbg.value(metadata !18, i64 0, metadata !378), !dbg !1211
  tail call void @llvm.dbg.value(metadata !18, i64 0, metadata !379), !dbg !1212
  %cmp8 = icmp sgt i32 %nseq, 0, !dbg !1212
  br i1 %cmp8, label %for.body, label %for.end, !dbg !1212

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %chk.09 = phi i32 [ %rem, %for.body ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds i8** %seqs, i64 %indvars.iv, !dbg !1214
  %0 = load i8** %arrayidx, align 8, !dbg !1214, !tbaa !612
  %call = tail call i64 @strlen(i8* %0) #10, !dbg !1214
  %conv = trunc i64 %call to i32, !dbg !1214
  %call3 = tail call i32 @GCGchecksum(i8* %0, i32 %conv) #8, !dbg !1214
  %add = add nsw i32 %call3, %chk.09, !dbg !1214
  %rem = srem i32 %add, 10000, !dbg !1214
  tail call void @llvm.dbg.value(metadata !{i32 %rem}, i64 0, metadata !378), !dbg !1214
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !1212
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !1212
  %exitcond = icmp eq i32 %lftr.wideiv, %nseq, !dbg !1212
  br i1 %exitcond, label %for.end, label %for.body, !dbg !1212

for.end:                                          ; preds = %for.body, %entry
  %chk.0.lcssa = phi i32 [ 0, %entry ], [ %rem, %for.body ]
  ret i32 %chk.0.lcssa, !dbg !1215
}
