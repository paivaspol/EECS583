define internal fastcc void @addseq(i8* %s, %struct.ReadSeqVars* nocapture %V) #0 {
entry:
  %ssimode = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 5
  %0 = load i32* %ssimode, align 4, !tbaa !0
  %cmp = icmp eq i32 %0, -1
  br i1 %cmp, label %if.then, label %while.cond36.preheader

while.cond36.preheader:                           ; preds = %entry
  %1 = load i8* %s, align 1, !tbaa !1
  %cmp38199 = icmp eq i8 %1, 0
  br i1 %cmp38199, label %while.end59, label %while.body40.lr.ph

while.body40.lr.ph:                               ; preds = %while.cond36.preheader
  %call43 = tail call i16** @__ctype_b_loc() #10
  %2 = load i16** %call43, align 8, !tbaa !3
  br label %while.body40

if.then:                                          ; preds = %entry
  %seqlen = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 18
  %3 = load i32* %seqlen, align 4, !tbaa !0
  %buflen = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 4
  %4 = load i32* %buflen, align 4, !tbaa !0
  %add = add nsw i32 %4, %3
  %maxseq = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 19
  %5 = load i32* %maxseq, align 4, !tbaa !0
  %cmp1 = icmp sgt i32 %add, %5
  br i1 %cmp1, label %if.then2, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  %seq13.pre = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 15
  br label %if.end

if.then2:                                         ; preds = %if.then
  %cmp4 = icmp sgt i32 %4, 500
  %. = select i1 %cmp4, i32 %4, i32 500
  %add7 = add nsw i32 %., %5
  store i32 %add7, i32* %maxseq, align 4, !tbaa !0
  %seq = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 15
  %6 = load i8** %seq, align 8, !tbaa !3
  %add9 = add nsw i32 %add7, 1
  %conv = sext i32 %add9 to i64
  %call = tail call i8* @sre_realloc(i8* getelementptr inbounds ([50 x i8]* @.str78, i64 0, i64 0), i32 524, i8* %6, i64 %conv) #8
  store i8* %call, i8** %seq, align 8, !tbaa !3
  %7 = load i32* %maxseq, align 4, !tbaa !0
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds i8* %call, i64 %idxprom
  store i8 0, i8* %arrayidx, align 1, !tbaa !1
  %.pre = load i32* %seqlen, align 4, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then.if.end_crit_edge, %if.then2
  %seq13.pre-phi = phi i8** [ %seq13.pre, %if.then.if.end_crit_edge ], [ %seq, %if.then2 ]
  %8 = phi i32 [ %3, %if.then.if.end_crit_edge ], [ %.pre, %if.then2 ]
  %9 = load i8** %seq13.pre-phi, align 8, !tbaa !3
  %idx.ext = sext i32 %8 to i64
  %add.ptr = getelementptr inbounds i8* %9, i64 %idx.ext
  %10 = load i8* %s, align 1, !tbaa !1
  %cmp16196 = icmp eq i8 %10, 0
  br i1 %cmp16196, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %if.end
  %call20 = tail call i16** @__ctype_b_loc() #10
  br label %while.body

while.body:                                       ; preds = %if.end31, %while.body.lr.ph
  %11 = phi i8 [ %10, %while.body.lr.ph ], [ %16, %if.end31 ]
  %s.addr.0198 = phi i8* [ %s, %while.body.lr.ph ], [ %incdec.ptr32, %if.end31 ]
  %sq.0197 = phi i8* [ %add.ptr, %while.body.lr.ph ], [ %sq.1, %if.end31 ]
  %idxprom19 = sext i8 %11 to i64
  %12 = load i16** %call20, align 8, !tbaa !3
  %arrayidx21 = getelementptr inbounds i16* %12, i64 %idxprom19
  %13 = load i16* %arrayidx21, align 2, !tbaa !4
  %14 = and i16 %13, 10240
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %if.then30, label %if.end31

if.then30:                                        ; preds = %while.body
  store i8 %11, i8* %sq.0197, align 1, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8* %sq.0197, i64 1
  br label %if.end31

if.end31:                                         ; preds = %while.body, %if.then30
  %sq.1 = phi i8* [ %sq.0197, %while.body ], [ %incdec.ptr, %if.then30 ]
  %incdec.ptr32 = getelementptr inbounds i8* %s.addr.0198, i64 1
  %16 = load i8* %incdec.ptr32, align 1, !tbaa !1
  %cmp16 = icmp eq i8 %16, 0
  br i1 %cmp16, label %while.cond.while.end_crit_edge, label %while.body

while.cond.while.end_crit_edge:                   ; preds = %if.end31
  %.pre204 = load i8** %seq13.pre-phi, align 8, !tbaa !3
  br label %while.end

while.end:                                        ; preds = %while.cond.while.end_crit_edge, %if.end
  %17 = phi i8* [ %.pre204, %while.cond.while.end_crit_edge ], [ %9, %if.end ]
  %sq.0.lcssa = phi i8* [ %sq.1, %while.cond.while.end_crit_edge ], [ %add.ptr, %if.end ]
  %sub.ptr.lhs.cast = ptrtoint i8* %sq.0.lcssa to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %17 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv34 = trunc i64 %sub.ptr.sub to i32
  store i32 %conv34, i32* %seqlen, align 4, !tbaa !0
  br label %if.end134

while.body40:                                     ; preds = %while.body40.lr.ph, %while.body40
  %18 = phi i8 [ %1, %while.body40.lr.ph ], [ %22, %while.body40 ]
  %s.addr.1201 = phi i8* [ %s, %while.body40.lr.ph ], [ %incdec.ptr58, %while.body40 ]
  %rpl.0200 = phi i32 [ 0, %while.body40.lr.ph ], [ %rpl.1, %while.body40 ]
  %idxprom42 = sext i8 %18 to i64
  %arrayidx44 = getelementptr inbounds i16* %2, i64 %idxprom42
  %19 = load i16* %arrayidx44, align 2, !tbaa !4
  %20 = and i16 %19, 10240
  %21 = icmp eq i16 %20, 0
  %inc = zext i1 %21 to i32
  %rpl.1 = add nsw i32 %inc, %rpl.0200
  %incdec.ptr58 = getelementptr inbounds i8* %s.addr.1201, i64 1
  %22 = load i8* %incdec.ptr58, align 1, !tbaa !1
  %cmp38 = icmp eq i8 %22, 0
  br i1 %cmp38, label %while.end59, label %while.body40

while.end59:                                      ; preds = %while.body40, %while.cond36.preheader
  %s.addr.1.lcssa = phi i8* [ %s, %while.cond36.preheader ], [ %incdec.ptr58, %while.body40 ]
  %rpl.0.lcssa = phi i32 [ 0, %while.cond36.preheader ], [ %rpl.1, %while.body40 ]
  %seqlen60 = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 18
  %23 = load i32* %seqlen60, align 4, !tbaa !0
  %add61 = add nsw i32 %23, %rpl.0.lcssa
  store i32 %add61, i32* %seqlen60, align 4, !tbaa !0
  %sub.ptr.lhs.cast62 = ptrtoint i8* %s.addr.1.lcssa to i64
  %sub.ptr.rhs.cast63 = ptrtoint i8* %s to i64
  %sub.ptr.sub64 = sub i64 %sub.ptr.lhs.cast62, %sub.ptr.rhs.cast63
  %conv65 = trunc i64 %sub.ptr.sub64 to i32
  %rpl66 = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 9
  %24 = load i32* %rpl66, align 4, !tbaa !0
  %cmp67 = icmp eq i32 %24, 0
  br i1 %cmp67, label %if.end99, label %if.then69

if.then69:                                        ; preds = %while.end59
  %lastrpl = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 10
  %25 = load i32* %lastrpl, align 4, !tbaa !0
  %cmp70 = icmp sgt i32 %25, 0
  br i1 %cmp70, label %if.then72, label %if.end92

if.then72:                                        ; preds = %if.then69
  %cmp74 = icmp slt i32 %24, 1
  %cmp79 = icmp eq i32 %25, %24
  %or.cond194 = or i1 %cmp74, %cmp79
  br i1 %or.cond194, label %if.else83, label %if.then81

if.then81:                                        ; preds = %if.then72
  store i32 0, i32* %rpl66, align 4, !tbaa !0
  br label %if.end92

if.else83:                                        ; preds = %if.then72
  %cmp85 = icmp eq i32 %24, -1
  br i1 %cmp85, label %if.then87, label %if.end92

if.then87:                                        ; preds = %if.else83
  store i32 %25, i32* %rpl66, align 4, !tbaa !0
  br label %if.end92

if.end92:                                         ; preds = %if.then81, %if.then87, %if.else83, %if.then69
  store i32 %rpl.0.lcssa, i32* %lastrpl, align 4, !tbaa !0
  %maxrpl = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 11
  %26 = load i32* %maxrpl, align 4, !tbaa !0
  %cmp94 = icmp sgt i32 %rpl.0.lcssa, %26
  br i1 %cmp94, label %if.then96, label %if.end99

if.then96:                                        ; preds = %if.end92
  store i32 %rpl.0.lcssa, i32* %maxrpl, align 4, !tbaa !0
  br label %if.end99

if.end99:                                         ; preds = %while.end59, %if.end92, %if.then96
  %bpl100 = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 12
  %27 = load i32* %bpl100, align 4, !tbaa !0
  %cmp101 = icmp eq i32 %27, 0
  br i1 %cmp101, label %if.end134, label %if.then103

if.then103:                                       ; preds = %if.end99
  %lastbpl = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 13
  %28 = load i32* %lastbpl, align 4, !tbaa !0
  %cmp104 = icmp sgt i32 %28, 0
  br i1 %cmp104, label %if.then106, label %if.end126

if.then106:                                       ; preds = %if.then103
  %cmp108 = icmp slt i32 %27, 1
  %cmp113 = icmp eq i32 %28, %27
  %or.cond195 = or i1 %cmp108, %cmp113
  br i1 %or.cond195, label %if.else117, label %if.then115

if.then115:                                       ; preds = %if.then106
  store i32 0, i32* %bpl100, align 4, !tbaa !0
  br label %if.end126

if.else117:                                       ; preds = %if.then106
  %cmp119 = icmp eq i32 %27, -1
  br i1 %cmp119, label %if.then121, label %if.end126

if.then121:                                       ; preds = %if.else117
  store i32 %28, i32* %bpl100, align 4, !tbaa !0
  br label %if.end126

if.end126:                                        ; preds = %if.then115, %if.then121, %if.else117, %if.then103
  store i32 %conv65, i32* %lastbpl, align 4, !tbaa !0
  %maxbpl = getelementptr inbounds %struct.ReadSeqVars* %V, i64 0, i32 14
  %29 = load i32* %maxbpl, align 4, !tbaa !0
  %cmp128 = icmp sgt i32 %conv65, %29
  br i1 %cmp128, label %if.then130, label %if.end134

if.then130:                                       ; preds = %if.end126
  store i32 %conv65, i32* %maxbpl, align 4, !tbaa !0
  br label %if.end134

if.end134:                                        ; preds = %if.end99, %if.then130, %if.end126, %while.end
  ret void
}
