define void @GSIFreeIndex(%struct.gsiindex_s* nocapture %g) #0 {
entry:
  %nfiles = getelementptr inbounds %struct.gsiindex_s* %g, i64 0, i32 2
  %0 = load i16* %nfiles, align 2, !tbaa !4
  %cmp11 = icmp eq i16 %0, 0
  %filenames2.pre = getelementptr inbounds %struct.gsiindex_s* %g, i64 0, i32 0
  br i1 %cmp11, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %1 = load i8*** %filenames2.pre, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds i8** %1, i64 %indvars.iv
  %2 = load i8** %arrayidx, align 8, !tbaa !0
  tail call void @free(i8* %2) #6
  %indvars.iv.next = add i64 %indvars.iv, 1
  %3 = load i16* %nfiles, align 2, !tbaa !4
  %conv = zext i16 %3 to i32
  %4 = trunc i64 %indvars.iv.next to i32
  %cmp = icmp slt i32 %4, %conv
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %entry, %for.body
  %5 = load i8*** %filenames2.pre, align 8, !tbaa !0
  %6 = bitcast i8** %5 to i8*
  tail call void @free(i8* %6) #6
  %fmt = getelementptr inbounds %struct.gsiindex_s* %g, i64 0, i32 1
  %7 = load i32** %fmt, align 8, !tbaa !0
  %8 = bitcast i32* %7 to i8*
  tail call void @free(i8* %8) #6
  %elems = getelementptr inbounds %struct.gsiindex_s* %g, i64 0, i32 3
  %9 = load %struct.gsikey_s** %elems, align 8, !tbaa !0
  %10 = getelementptr inbounds %struct.gsikey_s* %9, i64 0, i32 0, i64 0
  tail call void @free(i8* %10) #6
  %11 = bitcast %struct.gsiindex_s* %g to i8*
  tail call void @free(i8* %11) #6
  ret void
}
