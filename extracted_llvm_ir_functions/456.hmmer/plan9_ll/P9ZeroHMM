define void @P9ZeroHMM(%struct.plan9_s* nocapture readonly %hmm) #0 {
  tail call void @llvm.dbg.value(metadata %struct.plan9_s* %hmm, i64 0, metadata !51, metadata !69), !dbg !115
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !52, metadata !69), !dbg !116
  %1 = getelementptr inbounds %struct.plan9_s* %hmm, i64 0, i32 0, !dbg !117
  %2 = load i32* %1, align 4, !dbg !117, !tbaa !105
  %3 = icmp slt i32 %2, -1, !dbg !120
  br i1 %3, label %._crit_edge5, label %.preheader1.lr.ph, !dbg !121

.preheader1.lr.ph:                                ; preds = %0
  %4 = getelementptr inbounds %struct.plan9_s* %hmm, i64 0, i32 2, !dbg !122
  %5 = load %struct.basic_state** %4, align 8, !dbg !122, !tbaa !90
  %6 = getelementptr inbounds %struct.plan9_s* %hmm, i64 0, i32 1, !dbg !127
  %7 = load %struct.basic_state** %6, align 8, !dbg !127, !tbaa !77
  %8 = getelementptr inbounds %struct.plan9_s* %hmm, i64 0, i32 3, !dbg !128
  %9 = load %struct.basic_state** %8, align 8, !dbg !128, !tbaa !86
  %10 = load i32* @Alphabet_size, align 4, !dbg !129, !tbaa !132
  %11 = icmp sgt i32 %10, 0, !dbg !133
  %12 = add nsw i32 %2, 1, !dbg !134
  %13 = sext i32 %10 to i64, !dbg !121
  %14 = sext i32 %12 to i64, !dbg !121
  br label %.preheader1, !dbg !121

.preheader1:                                      ; preds = %._crit_edge, %.preheader1.lr.ph
  %indvars.iv14 = phi i64 [ %indvars.iv.next15, %._crit_edge ], [ 0, %.preheader1.lr.ph ]
  br label %15, !dbg !135

.preheader:                                       ; preds = %15
  br i1 %11, label %.lr.ph, label %._crit_edge, !dbg !136

; <label>:15                                      ; preds = %15, %.preheader1
  %indvars.iv = phi i64 [ 0, %.preheader1 ], [ %indvars.iv.next, %15 ]
  %16 = getelementptr inbounds %struct.basic_state* %5, i64 %indvars.iv14, i32 0, i64 %indvars.iv, !dbg !137
  store float 0.000000e+00, float* %16, align 4, !dbg !138, !tbaa !139
  %17 = getelementptr inbounds %struct.basic_state* %7, i64 %indvars.iv14, i32 0, i64 %indvars.iv, !dbg !141
  store float 0.000000e+00, float* %17, align 4, !dbg !142, !tbaa !139
  %18 = getelementptr inbounds %struct.basic_state* %9, i64 %indvars.iv14, i32 0, i64 %indvars.iv, !dbg !143
  store float 0.000000e+00, float* %18, align 4, !dbg !144, !tbaa !139
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !135
  %exitcond = icmp eq i64 %indvars.iv.next, 3, !dbg !135
  br i1 %exitcond, label %.preheader, label %15, !dbg !135

.lr.ph:                                           ; preds = %.preheader, %.lr.ph
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %.lr.ph ], [ 0, %.preheader ]
  %19 = getelementptr inbounds %struct.basic_state* %5, i64 %indvars.iv14, i32 1, i64 %indvars.iv9, !dbg !145
  store float 0.000000e+00, float* %19, align 4, !dbg !147, !tbaa !139
  %20 = getelementptr inbounds %struct.basic_state* %7, i64 %indvars.iv14, i32 1, i64 %indvars.iv9, !dbg !148
  store float 0.000000e+00, float* %20, align 4, !dbg !149, !tbaa !139
  %21 = getelementptr inbounds %struct.basic_state* %9, i64 %indvars.iv14, i32 1, i64 %indvars.iv9, !dbg !150
  store float 0.000000e+00, float* %21, align 4, !dbg !151, !tbaa !139
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !136
  %22 = icmp slt i64 %indvars.iv.next10, %13, !dbg !133
  br i1 %22, label %.lr.ph, label %._crit_edge, !dbg !136

._crit_edge:                                      ; preds = %.lr.ph, %.preheader
  %indvars.iv.next15 = add nuw nsw i64 %indvars.iv14, 1, !dbg !121
  %23 = icmp slt i64 %indvars.iv14, %14, !dbg !120
  br i1 %23, label %.preheader1, label %._crit_edge5, !dbg !121

._crit_edge5:                                     ; preds = %._crit_edge, %0
  ret void, !dbg !152
}
