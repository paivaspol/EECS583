define i32 @ILogsum(i32 %p1, i32 %p2) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %p1}, i64 0, metadata !109), !dbg !207
  tail call void @llvm.dbg.value(metadata !{i32 %p2}, i64 0, metadata !110), !dbg !207
  %.b = load i1* @ILogsum.firsttime, align 1
  br i1 %.b, label %if.end, label %for.body.i, !dbg !208

for.body.i:                                       ; preds = %entry, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ 0, %entry ]
  %0 = sub nsw i64 0, %indvars.iv.i, !dbg !209
  %1 = trunc i64 %0 to i32, !dbg !209
  %conv.i = sitofp i32 %1 to float, !dbg !209
  %conv1.i = fpext float %conv.i to double, !dbg !209
  %mul.i = fmul double %conv1.i, 0x3FE62E42FEAD449C, !dbg !209
  %div.i = fdiv double %mul.i, 1.000000e+03, !dbg !209
  %call.i = tail call double @exp(double %div.i) #6, !dbg !209
  %add.i = fadd double %call.i, 1.000000e+00, !dbg !209
  %call2.i = tail call double @log(double %add.i) #6, !dbg !209
  %mul3.i = fmul double %call2.i, 0x40968AC7B890D5A6, !dbg !209
  %conv4.i = fptosi double %mul3.i to i32, !dbg !209
  %arrayidx.i = getelementptr inbounds [20000 x i32]* @ilogsum_lookup, i64 0, i64 %indvars.iv.i, !dbg !209
  store i32 %conv4.i, i32* %arrayidx.i, align 4, !dbg !209, !tbaa !194
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1, !dbg !213
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32, !dbg !213
  %exitcond = icmp eq i32 %lftr.wideiv, 20000, !dbg !213
  br i1 %exitcond, label %init_ilogsum.exit, label %for.body.i, !dbg !213

init_ilogsum.exit:                                ; preds = %for.body.i
  store i1 true, i1* @ILogsum.firsttime, align 1
  br label %if.end, !dbg !211

if.end:                                           ; preds = %entry, %init_ilogsum.exit
  %sub = sub nsw i32 %p1, %p2, !dbg !214
  tail call void @llvm.dbg.value(metadata !{i32 %sub}, i64 0, metadata !111), !dbg !214
  %cmp = icmp sgt i32 %sub, 19999, !dbg !215
  br i1 %cmp, label %return, label %if.else, !dbg !215

if.else:                                          ; preds = %if.end
  %cmp2 = icmp slt i32 %sub, -19999, !dbg !216
  br i1 %cmp2, label %return, label %if.else4, !dbg !216

if.else4:                                         ; preds = %if.else
  %cmp5 = icmp sgt i32 %sub, 0, !dbg !217
  br i1 %cmp5, label %if.then6, label %if.else7, !dbg !217

if.then6:                                         ; preds = %if.else4
  %idxprom = sext i32 %sub to i64, !dbg !217
  %arrayidx = getelementptr inbounds [20000 x i32]* @ilogsum_lookup, i64 0, i64 %idxprom, !dbg !217
  %2 = load i32* %arrayidx, align 4, !dbg !217, !tbaa !194
  %add = add nsw i32 %2, %p1, !dbg !217
  br label %return, !dbg !217

if.else7:                                         ; preds = %if.else4
  %sub8 = sub nsw i32 0, %sub, !dbg !218
  %idxprom9 = sext i32 %sub8 to i64, !dbg !218
  %arrayidx10 = getelementptr inbounds [20000 x i32]* @ilogsum_lookup, i64 0, i64 %idxprom9, !dbg !218
  %3 = load i32* %arrayidx10, align 4, !dbg !218, !tbaa !194
  %add11 = add nsw i32 %3, %p2, !dbg !218
  br label %return, !dbg !218

return:                                           ; preds = %if.else, %if.end, %if.else7, %if.then6
  %retval.0 = phi i32 [ %add, %if.then6 ], [ %add11, %if.else7 ], [ %p1, %if.end ], [ %p2, %if.else ]
  ret i32 %retval.0, !dbg !219
}
