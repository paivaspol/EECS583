define float @P_PvecGivenDirichlet(float* nocapture %p, i32 %n, float* nocapture %alpha) #0 {
entry:
  %cmp39 = icmp sgt i32 %n, 0
  br i1 %cmp39, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ]
  %logp.041 = phi float [ %logp.1, %for.inc ], [ 0.000000e+00, %entry ]
  %sum.040 = phi float [ %sum.1, %for.inc ], [ 0.000000e+00, %entry ]
  %arrayidx = getelementptr inbounds float* %p, i64 %indvars.iv
  %0 = load float* %arrayidx, align 4, !tbaa !3
  %cmp1 = fcmp ogt float %0, 0.000000e+00
  br i1 %cmp1, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %conv = fpext float %0 to double
  %arrayidx4 = getelementptr inbounds float* %alpha, i64 %indvars.iv
  %1 = load float* %arrayidx4, align 4, !tbaa !3
  %conv5 = fpext float %1 to double
  %sub = fadd double %conv5, -1.000000e+00
  %call = tail call double @log(double %conv) #5
  %mul = fmul double %call, %sub
  %conv9 = fpext float %logp.041 to double
  %add = fadd double %conv9, %mul
  %conv10 = fptrunc double %add to float
  %2 = load float* %arrayidx4, align 4, !tbaa !3
  %conv13 = fpext float %2 to double
  %call14 = tail call double @Gammln(double %conv13) #5
  %conv15 = fpext float %conv10 to double
  %sub16 = fsub double %conv15, %call14
  %conv17 = fptrunc double %sub16 to float
  %3 = load float* %arrayidx4, align 4, !tbaa !3
  %add20 = fadd float %sum.040, %3
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %sum.1 = phi float [ %add20, %if.then ], [ %sum.040, %for.body ]
  %logp.1 = phi float [ %conv17, %if.then ], [ %logp.041, %for.body ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %n
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  %logp.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %logp.1, %for.inc ]
  %sum.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %sum.1, %for.inc ]
  %conv21 = fpext float %sum.0.lcssa to double
  %call22 = tail call double @Gammln(double %conv21) #5
  %conv23 = fpext float %logp.0.lcssa to double
  %add24 = fadd double %conv23, %call22
  %conv25 = fptrunc double %add24 to float
  ret float %conv25
}
