define float @LogSum(float %p1, float %p2) #0 {
entry:
  %cmp = fcmp ogt float %p1, %p2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %sub = fsub float %p1, %p2
  %cmp1 = fcmp ogt float %sub, 5.000000e+01
  %conv3 = fpext float %p1 to double
  br i1 %cmp1, label %return, label %cond.false

cond.false:                                       ; preds = %if.then
  %sub5 = fsub float %p2, %p1
  %conv6 = fpext float %sub5 to double
  %call = tail call double @exp(double %conv6) #5
  %add = fadd double %call, 1.000000e+00
  %call7 = tail call double @log(double %add) #5
  %add8 = fadd double %conv3, %call7
  br label %return

if.else:                                          ; preds = %entry
  %sub10 = fsub float %p2, %p1
  %cmp12 = fcmp ogt float %sub10, 5.000000e+01
  %conv15 = fpext float %p2 to double
  br i1 %cmp12, label %return, label %cond.false16

cond.false16:                                     ; preds = %if.else
  %sub18 = fsub float %p1, %p2
  %conv19 = fpext float %sub18 to double
  %call20 = tail call double @exp(double %conv19) #5
  %add21 = fadd double %call20, 1.000000e+00
  %call22 = tail call double @log(double %add21) #5
  %add23 = fadd double %conv15, %call22
  br label %return

return:                                           ; preds = %cond.false16, %if.else, %cond.false, %if.then
  %retval.0.in = phi double [ %add8, %cond.false ], [ %conv3, %if.then ], [ %add23, %cond.false16 ], [ %conv15, %if.else ]
  %retval.0 = fptrunc double %retval.0.in to float
  ret float %retval.0
}
