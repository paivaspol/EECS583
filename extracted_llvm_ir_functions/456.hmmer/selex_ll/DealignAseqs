define i32 @DealignAseqs(i8** nocapture readonly %aseqs, i32 %num, i8*** nocapture %ret_rseqs) #0 {
  tail call void @llvm.dbg.value(metadata i8** %aseqs, i64 0, metadata !300, metadata !350), !dbg !1351
  tail call void @llvm.dbg.value(metadata i32 %num, i64 0, metadata !301, metadata !350), !dbg !1352
  tail call void @llvm.dbg.value(metadata i8*** %ret_rseqs, i64 0, metadata !302, metadata !350), !dbg !1353
  %1 = sext i32 %num to i64, !dbg !1354
  %2 = shl nsw i64 %1, 3, !dbg !1354
  %3 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([63 x i8]* @.str4, i64 0, i64 0), i32 738, i64 %2) #7, !dbg !1354
  %4 = bitcast i8* %3 to i8**, !dbg !1355
  tail call void @llvm.dbg.value(metadata i8** %4, i64 0, metadata !303, metadata !350), !dbg !1356
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !304, metadata !350), !dbg !1357
  %5 = icmp sgt i32 %num, 0, !dbg !1358
  br i1 %5, label %.lr.ph, label %._crit_edge, !dbg !1361

.lr.ph:                                           ; preds = %0
  %6 = add i32 %num, -1, !dbg !1361
  br label %7, !dbg !1361

; <label>:7                                       ; preds = %25, %.lr.ph
  %indvars.iv2 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next3, %25 ]
  %8 = getelementptr inbounds i8** %aseqs, i64 %indvars.iv2, !dbg !1362
  %9 = load i8** %8, align 8, !dbg !1362, !tbaa !614
  %10 = tail call i64 @strlen(i8* %9) #7, !dbg !1364
  %11 = shl i64 %10, 32, !dbg !1365
  %sext = add i64 %11, 4294967296, !dbg !1365
  %12 = ashr exact i64 %sext, 32, !dbg !1365
  %13 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([63 x i8]* @.str4, i64 0, i64 0), i32 744, i64 %12) #7, !dbg !1365
  %14 = getelementptr inbounds i8** %4, i64 %indvars.iv2, !dbg !1366
  store i8* %13, i8** %14, align 8, !dbg !1367, !tbaa !614
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !305, metadata !350), !dbg !1368
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !306, metadata !350), !dbg !1369
  br label %15, !dbg !1370

; <label>:15                                      ; preds = %24, %7
  %indvars.iv = phi i64 [ %indvars.iv.next, %24 ], [ 0, %7 ]
  %depos.0 = phi i32 [ %depos.1, %24 ], [ 0, %7 ]
  %16 = load i8** %8, align 8, !dbg !1372, !tbaa !614
  %17 = getelementptr inbounds i8* %16, i64 %indvars.iv, !dbg !1372
  %18 = load i8* %17, align 1, !dbg !1372, !tbaa !398
  switch i8 %18, label %19 [
    i8 0, label %25
    i8 32, label %24
    i8 46, label %24
    i8 95, label %24
    i8 45, label %24
    i8 126, label %24
  ], !dbg !1374

; <label>:19                                      ; preds = %15
  %20 = sext i32 %depos.0 to i64, !dbg !1375
  %21 = load i8** %14, align 8, !dbg !1375, !tbaa !614
  %22 = getelementptr inbounds i8* %21, i64 %20, !dbg !1375
  store i8 %18, i8* %22, align 1, !dbg !1378, !tbaa !398
  %23 = add nsw i32 %depos.0, 1, !dbg !1379
  tail call void @llvm.dbg.value(metadata i32 %23, i64 0, metadata !305, metadata !350), !dbg !1368
  br label %24, !dbg !1380

; <label>:24                                      ; preds = %15, %15, %15, %15, %15, %19
  %depos.1 = phi i32 [ %23, %19 ], [ %depos.0, %15 ], [ %depos.0, %15 ], [ %depos.0, %15 ], [ %depos.0, %15 ], [ %depos.0, %15 ]
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !1381
  br label %15, !dbg !1381

; <label>:25                                      ; preds = %15
  %26 = sext i32 %depos.0 to i64, !dbg !1382
  %27 = load i8** %14, align 8, !dbg !1382, !tbaa !614
  %28 = getelementptr inbounds i8* %27, i64 %26, !dbg !1382
  store i8 0, i8* %28, align 1, !dbg !1383, !tbaa !398
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !1361
  %lftr.wideiv = trunc i64 %indvars.iv2 to i32, !dbg !1361
  %exitcond = icmp eq i32 %lftr.wideiv, %6, !dbg !1361
  br i1 %exitcond, label %._crit_edge, label %7, !dbg !1361

._crit_edge:                                      ; preds = %25, %0
  %29 = bitcast i8*** %ret_rseqs to i8**, !dbg !1384
  store i8* %3, i8** %29, align 8, !dbg !1384, !tbaa !614
  ret i32 1, !dbg !1385
}
