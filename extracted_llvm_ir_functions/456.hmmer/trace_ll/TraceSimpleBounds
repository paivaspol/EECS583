define void @TraceSimpleBounds(%struct.p7trace_s* nocapture %tr, i32* nocapture %ret_i1, i32* nocapture %ret_i2, i32* nocapture %ret_k1, i32* nocapture %ret_k2) #0 {
entry:
  %tlen = getelementptr inbounds %struct.p7trace_s* %tr, i64 0, i32 0
  %0 = load i32* %tlen, align 4, !tbaa !3
  %cmp145 = icmp sgt i32 %0, 0
  %statetype = getelementptr inbounds %struct.p7trace_s* %tr, i64 0, i32 1
  %nodeidx = getelementptr inbounds %struct.p7trace_s* %tr, i64 0, i32 2
  br i1 %cmp145, label %for.body.lr.ph, label %if.then31

for.body.lr.ph:                                   ; preds = %entry
  %1 = load i8** %statetype, align 8, !tbaa !0
  br label %for.body

for.cond:                                         ; preds = %if.end.thread, %if.end
  %k1.1161 = phi i32 [ -1, %if.end.thread ], [ %k1.1, %if.end ]
  %indvars.iv.next155162 = add i64 %indvars.iv154, 1
  %inc = add nsw i32 %tpos.0147, 1
  %2 = trunc i64 %indvars.iv.next155162 to i32
  %cmp = icmp slt i32 %2, %0
  br i1 %cmp, label %for.body, label %if.then31

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %indvars.iv154 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next155162, %for.cond ]
  %tpos.0147 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.cond ]
  %k1.0146 = phi i32 [ -1, %for.body.lr.ph ], [ %k1.1161, %for.cond ]
  %cmp1 = icmp eq i32 %k1.0146, -1
  %arrayidx = getelementptr inbounds i8* %1, i64 %indvars.iv154
  %3 = load i8* %arrayidx, align 1, !tbaa !1
  br i1 %cmp1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %.off = add i8 %3, -1
  %switch = icmp ult i8 %.off, 2
  br i1 %switch, label %if.then, label %if.end.thread

if.end.thread:                                    ; preds = %land.lhs.true
  br label %for.cond

if.then:                                          ; preds = %land.lhs.true
  %4 = load i32** %nodeidx, align 8, !tbaa !0
  %arrayidx11 = getelementptr inbounds i32* %4, i64 %indvars.iv154
  %5 = load i32* %arrayidx11, align 4, !tbaa !3
  br label %if.end

if.end:                                           ; preds = %for.body, %if.then
  %k1.1 = phi i32 [ %5, %if.then ], [ %k1.0146, %for.body ]
  %cmp16 = icmp eq i8 %3, 1
  br i1 %cmp16, label %for.end, label %for.cond

for.end:                                          ; preds = %if.end
  %pos = getelementptr inbounds %struct.p7trace_s* %tr, i64 0, i32 3
  %6 = load i32** %pos, align 8, !tbaa !0
  %arrayidx20 = getelementptr inbounds i32* %6, i64 %indvars.iv154
  %7 = load i32* %arrayidx20, align 4, !tbaa !3
  %cmp23 = icmp eq i32 %tpos.0147, %0
  %cmp26 = icmp eq i32 %7, -1
  %or.cond = or i1 %cmp23, %cmp26
  %cmp29 = icmp eq i32 %k1.1, -1
  %or.cond115 = or i1 %or.cond, %cmp29
  br i1 %or.cond115, label %if.then31, label %if.end32

if.then31:                                        ; preds = %entry, %for.cond, %for.end
  %k1.2128 = phi i32 [ %k1.1, %for.end ], [ %k1.1161, %for.cond ], [ -1, %entry ]
  %i1.0126 = phi i32 [ %7, %for.end ], [ -1, %for.cond ], [ -1, %entry ]
  tail call void (i8*, ...)* @Die(i8* getelementptr inbounds ([56 x i8]* @.str16, i64 0, i64 0)) #6
  %.pre = load i32* %tlen, align 4, !tbaa !3
  br label %if.end32

if.end32:                                         ; preds = %for.end, %if.then31
  %8 = phi i32 [ %0, %for.end ], [ %.pre, %if.then31 ]
  %k1.2127 = phi i32 [ %k1.1, %for.end ], [ %k1.2128, %if.then31 ]
  %i1.0125 = phi i32 [ %7, %for.end ], [ %i1.0126, %if.then31 ]
  %9 = sext i32 %8 to i64
  br label %for.cond34

for.cond34:                                       ; preds = %land.lhs.true40, %if.end58, %if.end32
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end58 ], [ %9, %if.end32 ], [ %indvars.iv.next, %land.lhs.true40 ]
  %k2.0 = phi i32 [ %k2.1, %if.end58 ], [ -1, %if.end32 ], [ -1, %land.lhs.true40 ]
  %tpos.1.in = phi i32 [ %tpos.1, %if.end58 ], [ %8, %if.end32 ], [ %tpos.1, %land.lhs.true40 ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %tpos.1 = add nsw i32 %tpos.1.in, -1
  %10 = trunc i64 %indvars.iv to i32
  %cmp35 = icmp sgt i32 %10, 0
  br i1 %cmp35, label %for.body37, label %if.then81

for.body37:                                       ; preds = %for.cond34
  %cmp38 = icmp eq i32 %k2.0, -1
  %11 = load i8** %statetype, align 8, !tbaa !0
  %arrayidx43 = getelementptr inbounds i8* %11, i64 %indvars.iv.next
  %12 = load i8* %arrayidx43, align 1, !tbaa !1
  br i1 %cmp38, label %land.lhs.true40, label %if.end58

land.lhs.true40:                                  ; preds = %for.body37
  %.off118 = add i8 %12, -1
  %switch119 = icmp ult i8 %.off118, 2
  br i1 %switch119, label %if.then54, label %for.cond34

if.then54:                                        ; preds = %land.lhs.true40
  %13 = load i32** %nodeidx, align 8, !tbaa !0
  %arrayidx57 = getelementptr inbounds i32* %13, i64 %indvars.iv.next
  %14 = load i32* %arrayidx57, align 4, !tbaa !3
  br label %if.end58

if.end58:                                         ; preds = %for.body37, %if.then54
  %k2.1 = phi i32 [ %14, %if.then54 ], [ %k2.0, %for.body37 ]
  %cmp63 = icmp eq i8 %12, 1
  br i1 %cmp63, label %for.end71, label %for.cond34

for.end71:                                        ; preds = %if.end58
  %pos67 = getelementptr inbounds %struct.p7trace_s* %tr, i64 0, i32 3
  %15 = load i32** %pos67, align 8, !tbaa !0
  %arrayidx68 = getelementptr inbounds i32* %15, i64 %indvars.iv.next
  %16 = load i32* %arrayidx68, align 4, !tbaa !3
  %cmp73 = icmp eq i32 %tpos.1, %8
  %cmp76 = icmp eq i32 %16, -1
  %or.cond116 = or i1 %cmp73, %cmp76
  %cmp79 = icmp eq i32 %k2.1, -1
  %or.cond117 = or i1 %or.cond116, %cmp79
  br i1 %or.cond117, label %if.then81, label %if.end82

if.then81:                                        ; preds = %for.cond34, %for.end71
  %k2.2137 = phi i32 [ %k2.1, %for.end71 ], [ %k2.0, %for.cond34 ]
  %i2.0135 = phi i32 [ %16, %for.end71 ], [ -1, %for.cond34 ]
  tail call void (i8*, ...)* @Die(i8* getelementptr inbounds ([56 x i8]* @.str16, i64 0, i64 0)) #6
  br label %if.end82

if.end82:                                         ; preds = %for.end71, %if.then81
  %k2.2136 = phi i32 [ %k2.1, %for.end71 ], [ %k2.2137, %if.then81 ]
  %i2.0134 = phi i32 [ %16, %for.end71 ], [ %i2.0135, %if.then81 ]
  store i32 %k1.2127, i32* %ret_k1, align 4, !tbaa !3
  store i32 %i1.0125, i32* %ret_i1, align 4, !tbaa !3
  store i32 %k2.2136, i32* %ret_k2, align 4, !tbaa !3
  store i32 %i2.0134, i32* %ret_i2, align 4, !tbaa !3
  ret void
}
