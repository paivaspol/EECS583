define internal fastcc void @rightjustify(i8* nocapture %s, i32 %n) #0 {
  tail call void @llvm.dbg.value(metadata i8* %s, i64 0, metadata !455, metadata !463), !dbg !1315
  tail call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !456, metadata !463), !dbg !1316
  %1 = add nsw i32 %n, -1, !dbg !1317
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !457, metadata !463), !dbg !1318
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !458, metadata !463), !dbg !1319
  %2 = icmp sgt i32 %n, 0, !dbg !1320
  br i1 %2, label %.lr.ph4.lr.ph, label %.preheader, !dbg !1321

.lr.ph4.lr.ph:                                    ; preds = %0
  %3 = sext i32 %n to i64
  br label %.lr.ph4, !dbg !1321

.lr.ph4:                                          ; preds = %.lr.ph4.lr.ph, %.outer
  %indvars.iv15.in = phi i64 [ %3, %.lr.ph4.lr.ph ], [ %indvars.iv15, %.outer ]
  %opos.0.ph7 = phi i32 [ %1, %.lr.ph4.lr.ph ], [ %14, %.outer ]
  %npos.0.ph6 = phi i32 [ %1, %.lr.ph4.lr.ph ], [ %15, %.outer ]
  %indvars.iv15 = add i64 %indvars.iv15.in, -1, !dbg !1321
  %4 = sext i32 %opos.0.ph7 to i64
  br label %8, !dbg !1321

..preheader_crit_edge:                            ; preds = %11
  %5 = trunc i64 %indvars.iv15 to i32, !dbg !1321
  br label %.preheader, !dbg !1321

.preheader:                                       ; preds = %.outer, %0, %..preheader_crit_edge
  %npos.0.ph.lcssa = phi i32 [ %5, %..preheader_crit_edge ], [ %1, %0 ], [ %15, %.outer ]
  %6 = icmp sgt i32 %npos.0.ph.lcssa, -1, !dbg !1322
  br i1 %6, label %.lr.ph, label %._crit_edge, !dbg !1323

.lr.ph:                                           ; preds = %.preheader
  %7 = sext i32 %npos.0.ph.lcssa to i64
  br label %18, !dbg !1323

; <label>:8                                       ; preds = %.lr.ph4, %11
  %indvars.iv13 = phi i64 [ %4, %.lr.ph4 ], [ %indvars.iv.next14, %11 ]
  %9 = getelementptr inbounds i8* %s, i64 %indvars.iv13, !dbg !1324
  %10 = load i8* %9, align 1, !dbg !1324, !tbaa !517
  switch i8 %10, label %.outer [
    i8 32, label %11
    i8 46, label %11
    i8 95, label %11
    i8 45, label %11
    i8 126, label %11
  ], !dbg !1324

; <label>:11                                      ; preds = %8, %8, %8, %8, %8
  %12 = icmp sgt i64 %indvars.iv13, 0, !dbg !1320
  %indvars.iv.next14 = add nsw i64 %indvars.iv13, -1, !dbg !1321
  br i1 %12, label %8, label %..preheader_crit_edge, !dbg !1321

.outer:                                           ; preds = %8
  %13 = trunc i64 %indvars.iv13 to i32, !dbg !1327
  %14 = add nsw i32 %13, -1, !dbg !1327
  tail call void @llvm.dbg.value(metadata i32 %14, i64 0, metadata !458, metadata !463), !dbg !1319
  %15 = add nsw i32 %npos.0.ph6, -1, !dbg !1328
  tail call void @llvm.dbg.value(metadata i32 %15, i64 0, metadata !457, metadata !463), !dbg !1318
  %16 = getelementptr inbounds i8* %s, i64 %indvars.iv15, !dbg !1329
  store i8 %10, i8* %16, align 1, !dbg !1330, !tbaa !517
  %17 = icmp sgt i32 %13, 0, !dbg !1320
  br i1 %17, label %.lr.ph4, label %.preheader, !dbg !1321

; <label>:18                                      ; preds = %.lr.ph, %18
  %indvars.iv = phi i64 [ %7, %.lr.ph ], [ %indvars.iv.next, %18 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !1323
  %19 = getelementptr inbounds i8* %s, i64 %indvars.iv, !dbg !1331
  store i8 46, i8* %19, align 1, !dbg !1332, !tbaa !517
  %20 = icmp sgt i64 %indvars.iv, 0, !dbg !1322
  br i1 %20, label %18, label %._crit_edge, !dbg !1323

._crit_edge:                                      ; preds = %18, %.preheader
  ret void, !dbg !1333
}
