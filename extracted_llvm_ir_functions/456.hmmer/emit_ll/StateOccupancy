define void @StateOccupancy(%struct.plan7_s* nocapture %hmm, float** nocapture %ret_mp, float** nocapture %ret_ip, float** nocapture %ret_dp) #0 {
entry:
  %M = getelementptr inbounds %struct.plan7_s* %hmm, i64 0, i32 20
  %0 = load i32* %M, align 4, !tbaa !3
  %add = add nsw i32 %0, 1
  %conv = sext i32 %add to i64
  %mul = shl nsw i64 %conv, 2
  %call = tail call i8* @sre_malloc(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 414, i64 %mul) #3
  %1 = bitcast i8* %call to float*
  %2 = load i32* %M, align 4, !tbaa !3
  %conv2 = sext i32 %2 to i64
  %mul3 = shl nsw i64 %conv2, 2
  %call4 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 415, i64 %mul3) #3
  %3 = bitcast i8* %call4 to float*
  %4 = load i32* %M, align 4, !tbaa !3
  %add6 = add nsw i32 %4, 1
  %conv7 = sext i32 %add6 to i64
  %mul8 = shl nsw i64 %conv7, 2
  %call9 = tail call i8* @sre_malloc(i8* getelementptr inbounds ([50 x i8]* @.str, i64 0, i64 0), i32 416, i64 %mul8) #3
  %5 = bitcast i8* %call9 to float*
  %tbd1 = getelementptr inbounds %struct.plan7_s* %hmm, i64 0, i32 24
  %6 = load float* %tbd1, align 4, !tbaa !4
  %arrayidx = getelementptr inbounds i8* %call9, i64 4
  %7 = bitcast i8* %arrayidx to float*
  store float %6, float* %7, align 4, !tbaa !4
  %begin = getelementptr inbounds %struct.plan7_s* %hmm, i64 0, i32 26
  %8 = load float** %begin, align 8, !tbaa !0
  %arrayidx10 = getelementptr inbounds float* %8, i64 1
  %9 = load float* %arrayidx10, align 4, !tbaa !4
  %arrayidx11 = getelementptr inbounds i8* %call, i64 4
  %10 = bitcast i8* %arrayidx11 to float*
  store float %9, float* %10, align 4, !tbaa !4
  %t = getelementptr inbounds %struct.plan7_s* %hmm, i64 0, i32 21
  %11 = load float*** %t, align 8, !tbaa !0
  %arrayidx13 = getelementptr inbounds float** %11, i64 1
  %12 = load float** %arrayidx13, align 8, !tbaa !0
  %arrayidx14 = getelementptr inbounds float* %12, i64 1
  %13 = load float* %arrayidx14, align 4, !tbaa !4
  %mul15 = fmul float %9, %13
  %arrayidx16 = getelementptr inbounds i8* %call4, i64 4
  %14 = bitcast i8* %arrayidx16 to float*
  store float %mul15, float* %14, align 4, !tbaa !4
  %15 = load i32* %M, align 4, !tbaa !3
  %cmp149 = icmp slt i32 %15, 2
  br i1 %cmp149, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %arrayidx32.phi.trans.insert = getelementptr inbounds i8* %call9, i64 4
  %16 = bitcast i8* %arrayidx32.phi.trans.insert to float*
  %.pre = load float* %16, align 4, !tbaa !4
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %for.body.lr.ph
  %17 = phi float* [ %.pre153, %if.end.for.body_crit_edge ], [ %12, %for.body.lr.ph ]
  %18 = phi float [ %div93, %if.end.for.body_crit_edge ], [ %.pre, %for.body.lr.ph ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end.for.body_crit_edge ], [ 2, %for.body.lr.ph ]
  %19 = add nsw i64 %indvars.iv, -1
  %arrayidx19 = getelementptr inbounds float* %1, i64 %19
  %20 = load float* %arrayidx19, align 4, !tbaa !4
  %21 = load float* %17, align 4, !tbaa !4
  %mul25 = fmul float %20, %21
  %arrayidx28 = getelementptr inbounds float* %3, i64 %19
  %22 = load float* %arrayidx28, align 4, !tbaa !4
  %add29 = fadd float %mul25, %22
  %arrayidx32 = getelementptr inbounds float* %5, i64 %19
  %arrayidx37 = getelementptr inbounds float* %17, i64 5
  %23 = load float* %arrayidx37, align 4, !tbaa !4
  %mul38 = fmul float %18, %23
  %add39 = fadd float %add29, %mul38
  %arrayidx42 = getelementptr inbounds float* %8, i64 %indvars.iv
  %24 = load float* %arrayidx42, align 4, !tbaa !4
  %add43 = fadd float %add39, %24
  %arrayidx45 = getelementptr inbounds float* %1, i64 %indvars.iv
  store float %add43, float* %arrayidx45, align 4, !tbaa !4
  %arrayidx53 = getelementptr inbounds float* %17, i64 2
  %25 = load float* %arrayidx53, align 4, !tbaa !4
  %mul54 = fmul float %20, %25
  %26 = load float* %arrayidx32, align 4, !tbaa !4
  %arrayidx62 = getelementptr inbounds float* %17, i64 6
  %27 = load float* %arrayidx62, align 4, !tbaa !4
  %mul63 = fmul float %26, %27
  %add64 = fadd float %mul54, %mul63
  %arrayidx66 = getelementptr inbounds float* %5, i64 %indvars.iv
  store float %add64, float* %arrayidx66, align 4, !tbaa !4
  %28 = trunc i64 %indvars.iv to i32
  %cmp68 = icmp slt i32 %28, %15
  br i1 %cmp68, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %29 = load float* %arrayidx45, align 4, !tbaa !4
  %arrayidx74 = getelementptr inbounds float** %11, i64 %indvars.iv
  %30 = load float** %arrayidx74, align 8, !tbaa !0
  %arrayidx75 = getelementptr inbounds float* %30, i64 1
  %31 = load float* %arrayidx75, align 4, !tbaa !4
  %mul76 = fmul float %29, %31
  %arrayidx78 = getelementptr inbounds float* %3, i64 %indvars.iv
  store float %mul76, float* %arrayidx78, align 4, !tbaa !4
  %.pre152 = load float* %arrayidx66, align 4, !tbaa !4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %32 = phi float [ %.pre152, %if.then ], [ %add64, %for.body ]
  %33 = load float* %arrayidx45, align 4, !tbaa !4
  %add83 = fadd float %33, %32
  %div = fdiv float %33, %add83
  store float %div, float* %arrayidx45, align 4, !tbaa !4
  %34 = load float* %arrayidx66, align 4, !tbaa !4
  %add90 = fadd float %div, %34
  %div93 = fdiv float %34, %add90
  store float %div93, float* %arrayidx66, align 4, !tbaa !4
  br i1 %cmp68, label %if.end.for.body_crit_edge, label %for.end

if.end.for.body_crit_edge:                        ; preds = %if.end
  %indvars.iv.next = add i64 %indvars.iv, 1
  %arrayidx23.phi.trans.insert = getelementptr inbounds float** %11, i64 %indvars.iv
  %.pre153 = load float** %arrayidx23.phi.trans.insert, align 8, !tbaa !0
  br label %for.body

for.end:                                          ; preds = %if.end, %entry
  store float* %1, float** %ret_mp, align 8, !tbaa !0
  store float* %5, float** %ret_dp, align 8, !tbaa !0
  store float* %3, float** %ret_ip, align 8, !tbaa !0
  ret void
}
