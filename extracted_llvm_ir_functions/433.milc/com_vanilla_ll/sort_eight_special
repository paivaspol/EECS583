define void @sort_eight_special(i8** nocapture %pt) #1 {
entry:
  %pt39 = bitcast i8** %pt to i8*
  %tt = alloca [8 x i8*], align 16
  %0 = bitcast [8 x i8*]* %tt to i8*
  call void @llvm.lifetime.start(i64 64, i8* %0) #3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %pt39, i64 64, i32 8, i1 false)
  br label %for.body5

for.body5:                                        ; preds = %for.body5, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body5 ]
  %1 = shl nsw i64 %indvars.iv, 1
  %arrayidx7 = getelementptr inbounds [8 x i8*]* %tt, i64 0, i64 %1
  %2 = load i8** %arrayidx7, align 16, !tbaa !0
  %arrayidx9 = getelementptr inbounds i8** %pt, i64 %indvars.iv
  store i8* %2, i8** %arrayidx9, align 8, !tbaa !0
  %3 = or i64 %1, 1
  %arrayidx12 = getelementptr inbounds [8 x i8*]* %tt, i64 0, i64 %3
  %4 = load i8** %arrayidx12, align 8, !tbaa !0
  %5 = sub nsw i64 7, %indvars.iv
  %arrayidx14 = getelementptr inbounds i8** %pt, i64 %5
  store i8* %4, i8** %arrayidx14, align 8, !tbaa !0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 4
  br i1 %exitcond, label %for.end17, label %for.body5

for.end17:                                        ; preds = %for.body5
  call void @llvm.lifetime.end(i64 64, i8* %0) #3
  ret void
}
