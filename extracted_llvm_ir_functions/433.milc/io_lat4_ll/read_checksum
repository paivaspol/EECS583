define void @read_checksum(i32 %parallel, %struct.gauge_file* %gf, %struct.gauge_check* nocapture %test_gc) #0 {
entry:
  %myname = alloca [14 x i8], align 1
  %0 = getelementptr inbounds [14 x i8]* %myname, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([14 x i8]* @read_checksum.myname, i64 0, i64 0), i64 14, i32 1, i1 false)
  %byterevflag = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 3
  %1 = load i32* %byterevflag, align 4, !tbaa !0
  %fp = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 0
  %2 = load %struct._IO_FILE** %fp, align 8, !tbaa !3
  %sum29 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 6, i32 1
  %3 = bitcast i32* %sum29 to i8*
  %call = call i32 @psread_byteorder(i32 %1, i32 %parallel, %struct._IO_FILE* %2, i8* %3, i64 4, i8* %0, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #8
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @terminate(i32 1) #9
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %4 = load i32* %byterevflag, align 4, !tbaa !0
  %5 = load %struct._IO_FILE** %fp, align 8, !tbaa !3
  %sum31 = getelementptr inbounds %struct.gauge_file* %gf, i64 0, i32 6, i32 0
  %6 = bitcast i32* %sum31 to i8*
  %call5 = call i32 @psread_byteorder(i32 %4, i32 %parallel, %struct._IO_FILE* %5, i8* %6, i64 4, i8* %0, i8* getelementptr inbounds ([9 x i8]* @.str40, i64 0, i64 0)) #8
  %cmp6 = icmp eq i32 %call5, 0
  br i1 %cmp6, label %if.end8, label %if.then7

if.then7:                                         ; preds = %if.end
  call void @terminate(i32 1) #9
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then7
  %7 = load i32* %sum29, align 4, !tbaa !0
  %sum2911 = getelementptr inbounds %struct.gauge_check* %test_gc, i64 0, i32 1
  %8 = load i32* %sum2911, align 4, !tbaa !0
  %cmp12 = icmp eq i32 %7, %8
  br i1 %cmp12, label %lor.lhs.false, label %if.end8.if.then17_crit_edge

if.end8.if.then17_crit_edge:                      ; preds = %if.end8
  %sum3120.phi.trans.insert = getelementptr inbounds %struct.gauge_check* %test_gc, i64 0, i32 0
  %.pre = load i32* %sum3120.phi.trans.insert, align 4, !tbaa !0
  %.pre48 = load i32* %sum31, align 4, !tbaa !0
  br label %if.then17

lor.lhs.false:                                    ; preds = %if.end8
  %9 = load i32* %sum31, align 4, !tbaa !0
  %sum3115 = getelementptr inbounds %struct.gauge_check* %test_gc, i64 0, i32 0
  %10 = load i32* %sum3115, align 4, !tbaa !0
  %cmp16 = icmp eq i32 %9, %10
  br i1 %cmp16, label %if.else, label %if.then17

if.then17:                                        ; preds = %if.end8.if.then17_crit_edge, %lor.lhs.false
  %11 = phi i32 [ %.pre48, %if.end8.if.then17_crit_edge ], [ %9, %lor.lhs.false ]
  %12 = phi i32 [ %.pre, %if.end8.if.then17_crit_edge ], [ %10, %lor.lhs.false ]
  %call25 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str41, i64 0, i64 0), i8* %0, i32 %8, i32 %12, i32 %7, i32 %11) #9
  br label %if.end32

if.else:                                          ; preds = %lor.lhs.false
  %call30 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str42, i64 0, i64 0), i32 %7, i32 %9) #9
  %13 = load %struct._IO_FILE** @stdout, align 8, !tbaa !3
  %call31 = call i32 @fflush(%struct._IO_FILE* %13) #9
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then17
  ret void
}
