define void @scalar_mult_add_su3_vector(%struct.su3_vector* nocapture %a, %struct.su3_vector* nocapture %b, double %s, %struct.su3_vector* nocapture %c) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.su3_vector* %a}, i64 0, metadata !25), !dbg !31
  tail call void @llvm.dbg.value(metadata !{%struct.su3_vector* %b}, i64 0, metadata !26), !dbg !31
  tail call void @llvm.dbg.value(metadata !{double %s}, i64 0, metadata !27), !dbg !31
  tail call void @llvm.dbg.value(metadata !{%struct.su3_vector* %c}, i64 0, metadata !28), !dbg !32
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !29), !dbg !33
  br label %for.body, !dbg !33

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %real = getelementptr inbounds %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv, i32 0, !dbg !35
  %0 = load double* %real, align 8, !dbg !35, !tbaa !37
  %real5 = getelementptr inbounds %struct.su3_vector* %b, i64 0, i32 0, i64 %indvars.iv, i32 0, !dbg !35
  %1 = load double* %real5, align 8, !dbg !35, !tbaa !37
  %mul = fmul double %1, %s, !dbg !35
  %add = fadd double %0, %mul, !dbg !35
  %real9 = getelementptr inbounds %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 0, !dbg !35
  store double %add, double* %real9, align 8, !dbg !35, !tbaa !37
  %imag = getelementptr inbounds %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv, i32 1, !dbg !40
  %2 = load double* %imag, align 8, !dbg !40, !tbaa !37
  %imag16 = getelementptr inbounds %struct.su3_vector* %b, i64 0, i32 0, i64 %indvars.iv, i32 1, !dbg !40
  %3 = load double* %imag16, align 8, !dbg !40, !tbaa !37
  %mul17 = fmul double %3, %s, !dbg !40
  %add18 = fadd double %2, %mul17, !dbg !40
  %imag22 = getelementptr inbounds %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 1, !dbg !40
  store double %add18, double* %imag22, align 8, !dbg !40, !tbaa !37
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !33
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !33
  %exitcond = icmp eq i32 %lftr.wideiv, 3, !dbg !33
  br i1 %exitcond, label %for.end, label %for.body, !dbg !33

for.end:                                          ; preds = %for.body
  ret void, !dbg !41
}
