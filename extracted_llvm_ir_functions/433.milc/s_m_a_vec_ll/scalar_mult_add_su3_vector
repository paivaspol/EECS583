define void @scalar_mult_add_su3_vector(%struct.su3_vector* nocapture readonly %a, %struct.su3_vector* nocapture readonly %b, double %s, %struct.su3_vector* nocapture %c) #0 {
  tail call void @llvm.dbg.value(metadata %struct.su3_vector* %a, i64 0, metadata !24, metadata !34), !dbg !35
  tail call void @llvm.dbg.value(metadata %struct.su3_vector* %b, i64 0, metadata !25, metadata !34), !dbg !36
  tail call void @llvm.dbg.value(metadata double %s, i64 0, metadata !26, metadata !34), !dbg !37
  tail call void @llvm.dbg.value(metadata %struct.su3_vector* %c, i64 0, metadata !27, metadata !34), !dbg !38
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !28, metadata !34), !dbg !39
  %1 = insertelement <2 x double> undef, double %s, i32 0, !dbg !40
  %2 = insertelement <2 x double> %1, double %s, i32 1, !dbg !40
  br label %3, !dbg !44

; <label>:3                                       ; preds = %3, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %3 ]
  %4 = getelementptr inbounds %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv, i32 0, !dbg !45
  %5 = getelementptr inbounds %struct.su3_vector* %b, i64 0, i32 0, i64 %indvars.iv, i32 0, !dbg !46
  %6 = getelementptr inbounds %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 0, !dbg !47
  %7 = bitcast double* %4 to <2 x double>*, !dbg !45
  %8 = load <2 x double>* %7, align 8, !dbg !45, !tbaa !48
  %9 = bitcast double* %5 to <2 x double>*, !dbg !46
  %10 = load <2 x double>* %9, align 8, !dbg !46, !tbaa !48
  %11 = fmul <2 x double> %2, %10, !dbg !40
  %12 = fadd <2 x double> %8, %11, !dbg !52
  %13 = bitcast double* %6 to <2 x double>*, !dbg !53
  store <2 x double> %12, <2 x double>* %13, align 8, !dbg !53, !tbaa !48
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !44
  %exitcond = icmp eq i64 %indvars.iv.next, 3, !dbg !44
  br i1 %exitcond, label %14, label %3, !dbg !44

; <label>:14                                      ; preds = %3
  ret void, !dbg !54
}
