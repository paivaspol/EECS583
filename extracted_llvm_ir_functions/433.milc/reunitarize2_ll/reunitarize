define void @reunitarize() #0 {
entry:
  store double 0.000000e+00, double* @max_deviation, align 8, !tbaa !0
  store double 0.000000e+00, double* @av_deviation, align 8, !tbaa !0
  %0 = load i32* @sites_on_node, align 4, !tbaa !4
  %cmp35 = icmp sgt i32 %0, 0
  br i1 %cmp35, label %for.cond1.preheader.lr.ph, label %if.end20

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %1 = load %struct.site** @lattice, align 8, !tbaa !3
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond1.preheader.lr.ph, %for.inc8
  %i.038 = phi i32 [ 0, %for.cond1.preheader.lr.ph ], [ %inc9, %for.inc8 ]
  %errcount.037 = phi i32 [ 0, %for.cond1.preheader.lr.ph ], [ %add, %for.inc8 ]
  %s.036 = phi %struct.site* [ %1, %for.cond1.preheader.lr.ph ], [ %incdec.ptr, %for.inc8 ]
  br label %for.body3

for.body3:                                        ; preds = %for.inc, %for.cond1.preheader
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.inc ]
  %errcount.134 = phi i32 [ %errcount.037, %for.cond1.preheader ], [ %add, %for.inc ]
  %arrayidx = getelementptr inbounds %struct.site* %s.036, i64 0, i32 8, i64 %indvars.iv
  %call = tail call i32 @reunit_su3(%struct.su3_matrix* %arrayidx) #7
  %add = add nsw i32 %call, %errcount.134
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body3
  %2 = trunc i64 %indvars.iv to i32
  tail call void @reunit_report_problem_matrix(%struct.su3_matrix* %arrayidx, i32 %i.038, i32 %2) #7
  br label %if.end

if.end:                                           ; preds = %for.body3, %if.then
  %cmp4 = icmp sgt i32 %add, 100
  br i1 %cmp4, label %if.then5, label %for.inc

if.then5:                                         ; preds = %if.end
  %puts32 = tail call i32 @puts(i8* getelementptr inbounds ([32 x i8]* @str12, i64 0, i64 0))
  tail call void @terminate(i32 1) #5
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.then5
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 4
  br i1 %exitcond, label %for.inc8, label %for.body3

for.inc8:                                         ; preds = %for.inc
  %inc9 = add nsw i32 %i.038, 1
  %incdec.ptr = getelementptr inbounds %struct.site* %s.036, i64 1
  %3 = load i32* @sites_on_node, align 4, !tbaa !4
  %cmp = icmp slt i32 %inc9, %3
  br i1 %cmp, label %for.cond1.preheader, label %for.end10

for.end10:                                        ; preds = %for.inc8
  %.pre = load double* @max_deviation, align 8, !tbaa !0
  %phitmp = fcmp ogt double %.pre, 1.000000e-04
  br i1 %phitmp, label %if.then12, label %if.end20

if.then12:                                        ; preds = %for.end10
  %call13 = tail call i32 (...)* @mynode() #5
  %4 = load double* @max_deviation, align 8, !tbaa !0
  %call14 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([62 x i8]* @.str8, i64 0, i64 0), i32 %call13, double %4) #5
  %cmp16 = icmp sgt i32 %add, 99
  br i1 %cmp16, label %if.then17, label %if.end20

if.then17:                                        ; preds = %if.then12
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([32 x i8]* @str12, i64 0, i64 0))
  tail call void @terminate(i32 1) #5
  br label %if.end20

if.end20:                                         ; preds = %entry, %if.then12, %if.then17, %for.end10
  ret void
}
