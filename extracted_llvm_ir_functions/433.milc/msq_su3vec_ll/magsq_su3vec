define double @magsq_su3vec(%struct.su3_vector* nocapture %a) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.su3_vector* %a}, i64 0, metadata !25), !dbg !29
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !27), !dbg !30
  tail call void @llvm.dbg.value(metadata !32, i64 0, metadata !26), !dbg !30
  br label %for.body, !dbg !30

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %sum.023 = phi double [ 0.000000e+00, %entry ], [ %add13, %for.body ]
  %real = getelementptr inbounds %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv, i32 0, !dbg !30
  %0 = load double* %real, align 8, !dbg !30, !tbaa !33
  %mul = fmul double %0, %0, !dbg !30
  %imag = getelementptr inbounds %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv, i32 1, !dbg !30
  %1 = load double* %imag, align 8, !dbg !30, !tbaa !33
  %mul12 = fmul double %1, %1, !dbg !30
  %add = fadd double %mul, %mul12, !dbg !30
  %add13 = fadd double %sum.023, %add, !dbg !30
  tail call void @llvm.dbg.value(metadata !{double %add13}, i64 0, metadata !26), !dbg !30
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !30
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !30
  %exitcond = icmp eq i32 %lftr.wideiv, 3, !dbg !30
  br i1 %exitcond, label %for.end, label %for.body, !dbg !30

for.end:                                          ; preds = %for.body
  ret double %add13, !dbg !36
}
