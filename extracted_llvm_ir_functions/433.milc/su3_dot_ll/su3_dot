define { double, double } @su3_dot(%struct.su3_vector* nocapture readonly %a, %struct.su3_vector* nocapture readonly %b) #0 {
  tail call void @llvm.dbg.value(metadata %struct.su3_vector* %a, i64 0, metadata !24, metadata !32), !dbg !33
  tail call void @llvm.dbg.value(metadata %struct.su3_vector* %b, i64 0, metadata !25, metadata !32), !dbg !34
  tail call void @llvm.dbg.declare(metadata %struct.complex* undef, metadata !26, metadata !32), !dbg !35
  tail call void @llvm.dbg.declare(metadata %struct.complex* undef, metadata !27, metadata !32), !dbg !36
  %1 = getelementptr inbounds %struct.su3_vector* %a, i64 0, i32 0, i64 0, i32 0, !dbg !37
  %2 = load double* %1, align 8, !dbg !37, !tbaa !39
  %3 = getelementptr inbounds %struct.su3_vector* %b, i64 0, i32 0, i64 0, i32 0, !dbg !37
  %4 = load double* %3, align 8, !dbg !37, !tbaa !39
  %5 = fmul double %2, %4, !dbg !37
  %6 = getelementptr inbounds %struct.su3_vector* %a, i64 0, i32 0, i64 0, i32 1, !dbg !37
  %7 = load double* %6, align 8, !dbg !37, !tbaa !44
  %8 = getelementptr inbounds %struct.su3_vector* %b, i64 0, i32 0, i64 0, i32 1, !dbg !37
  %9 = load double* %8, align 8, !dbg !37, !tbaa !44
  %10 = fmul double %7, %9, !dbg !37
  %11 = fadd double %5, %10, !dbg !37
  tail call void @llvm.dbg.value(metadata double %11, i64 0, metadata !26, metadata !45), !dbg !35
  %12 = fmul double %2, %9, !dbg !37
  %13 = fmul double %4, %7, !dbg !37
  %14 = fsub double %12, %13, !dbg !37
  tail call void @llvm.dbg.value(metadata double %14, i64 0, metadata !26, metadata !46), !dbg !35
  %15 = getelementptr inbounds %struct.su3_vector* %a, i64 0, i32 0, i64 1, i32 0, !dbg !47
  %16 = load double* %15, align 8, !dbg !47, !tbaa !39
  %17 = getelementptr inbounds %struct.su3_vector* %b, i64 0, i32 0, i64 1, i32 0, !dbg !47
  %18 = load double* %17, align 8, !dbg !47, !tbaa !39
  %19 = fmul double %16, %18, !dbg !47
  %20 = getelementptr inbounds %struct.su3_vector* %a, i64 0, i32 0, i64 1, i32 1, !dbg !47
  %21 = load double* %20, align 8, !dbg !47, !tbaa !44
  %22 = getelementptr inbounds %struct.su3_vector* %b, i64 0, i32 0, i64 1, i32 1, !dbg !47
  %23 = load double* %22, align 8, !dbg !47, !tbaa !44
  %24 = fmul double %21, %23, !dbg !47
  %25 = fadd double %19, %24, !dbg !47
  tail call void @llvm.dbg.value(metadata double %25, i64 0, metadata !27, metadata !45), !dbg !36
  %26 = fmul double %16, %23, !dbg !47
  %27 = fmul double %18, %21, !dbg !47
  %28 = fsub double %26, %27, !dbg !47
  tail call void @llvm.dbg.value(metadata double %28, i64 0, metadata !27, metadata !46), !dbg !36
  %29 = fadd double %11, %25, !dbg !49
  tail call void @llvm.dbg.value(metadata double %29, i64 0, metadata !26, metadata !45), !dbg !35
  %30 = fadd double %14, %28, !dbg !49
  tail call void @llvm.dbg.value(metadata double %30, i64 0, metadata !26, metadata !46), !dbg !35
  %31 = getelementptr inbounds %struct.su3_vector* %a, i64 0, i32 0, i64 2, i32 0, !dbg !51
  %32 = load double* %31, align 8, !dbg !51, !tbaa !39
  %33 = getelementptr inbounds %struct.su3_vector* %b, i64 0, i32 0, i64 2, i32 0, !dbg !51
  %34 = load double* %33, align 8, !dbg !51, !tbaa !39
  %35 = fmul double %32, %34, !dbg !51
  %36 = getelementptr inbounds %struct.su3_vector* %a, i64 0, i32 0, i64 2, i32 1, !dbg !51
  %37 = load double* %36, align 8, !dbg !51, !tbaa !44
  %38 = getelementptr inbounds %struct.su3_vector* %b, i64 0, i32 0, i64 2, i32 1, !dbg !51
  %39 = load double* %38, align 8, !dbg !51, !tbaa !44
  %40 = fmul double %37, %39, !dbg !51
  %41 = fadd double %35, %40, !dbg !51
  tail call void @llvm.dbg.value(metadata double %41, i64 0, metadata !27, metadata !45), !dbg !36
  %42 = fmul double %32, %39, !dbg !51
  %43 = fmul double %34, %37, !dbg !51
  %44 = fsub double %42, %43, !dbg !51
  tail call void @llvm.dbg.value(metadata double %44, i64 0, metadata !27, metadata !46), !dbg !36
  %45 = fadd double %29, %41, !dbg !53
  tail call void @llvm.dbg.value(metadata double %45, i64 0, metadata !26, metadata !45), !dbg !35
  %46 = fadd double %30, %44, !dbg !53
  tail call void @llvm.dbg.value(metadata double %46, i64 0, metadata !26, metadata !46), !dbg !35
  %47 = insertvalue { double, double } undef, double %45, 0, !dbg !55
  %48 = insertvalue { double, double } %47, double %46, 1, !dbg !55
  ret { double, double } %48, !dbg !55
}
