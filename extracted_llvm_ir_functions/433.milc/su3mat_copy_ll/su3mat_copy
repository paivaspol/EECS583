define void @su3mat_copy(%struct.su3_matrix* nocapture %a, %struct.su3_matrix* nocapture %b) #0 {
entry:
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.inc23, %entry
  %indvars.iv40 = phi i64 [ 0, %entry ], [ %indvars.iv.next41, %for.inc23 ]
  br label %for.body3

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  %real = getelementptr inbounds %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv40, i64 %indvars.iv, i32 0
  %0 = load double* %real, align 8, !tbaa !0
  %real11 = getelementptr inbounds %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv40, i64 %indvars.iv, i32 0
  store double %0, double* %real11, align 8, !tbaa !0
  %imag = getelementptr inbounds %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv40, i64 %indvars.iv, i32 1
  %1 = load double* %imag, align 8, !tbaa !0
  %imag22 = getelementptr inbounds %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv40, i64 %indvars.iv, i32 1
  store double %1, double* %imag22, align 8, !tbaa !0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 3
  br i1 %exitcond, label %for.inc23, label %for.body3

for.inc23:                                        ; preds = %for.body3
  %indvars.iv.next41 = add i64 %indvars.iv40, 1
  %lftr.wideiv42 = trunc i64 %indvars.iv.next41 to i32
  %exitcond43 = icmp eq i32 %lftr.wideiv42, 3
  br i1 %exitcond43, label %for.end25, label %for.cond1.preheader

for.end25:                                        ; preds = %for.inc23
  ret void
}
