define void @su3mat_copy(%struct.su3_matrix* nocapture readonly %a, %struct.su3_matrix* nocapture %b) #0 {
  tail call void @llvm.dbg.value(metadata %struct.su3_matrix* %a, i64 0, metadata !24, metadata !33), !dbg !34
  tail call void @llvm.dbg.value(metadata %struct.su3_matrix* %b, i64 0, metadata !25, metadata !33), !dbg !35
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !26, metadata !33), !dbg !36
  br label %.preheader, !dbg !37

.preheader:                                       ; preds = %7, %0
  %indvars.iv3 = phi i64 [ 0, %0 ], [ %indvars.iv.next4, %7 ]
  br label %1, !dbg !39

; <label>:1                                       ; preds = %1, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %1 ]
  %2 = getelementptr inbounds %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv3, i64 %indvars.iv, !dbg !42
  %3 = getelementptr inbounds %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv3, i64 %indvars.iv, !dbg !45
  %4 = bitcast %struct.complex* %2 to <2 x i64>*, !dbg !46
  %5 = load <2 x i64>* %4, align 8, !dbg !46, !tbaa !47
  %6 = bitcast %struct.complex* %3 to <2 x i64>*, !dbg !51
  store <2 x i64> %5, <2 x i64>* %6, align 8, !dbg !51, !tbaa !47
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !39
  %exitcond = icmp eq i64 %indvars.iv.next, 3, !dbg !39
  br i1 %exitcond, label %7, label %1, !dbg !39

; <label>:7                                       ; preds = %1
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !37
  %exitcond5 = icmp eq i64 %indvars.iv.next4, 3, !dbg !37
  br i1 %exitcond5, label %8, label %.preheader, !dbg !37

; <label>:8                                       ; preds = %7
  ret void, !dbg !52
}
