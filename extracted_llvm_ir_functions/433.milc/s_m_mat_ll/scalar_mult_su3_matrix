define void @scalar_mult_su3_matrix(%struct.su3_matrix* nocapture readonly %a, double %s, %struct.su3_matrix* nocapture %b) #0 {
  tail call void @llvm.dbg.value(metadata %struct.su3_matrix* %a, i64 0, metadata !24, metadata !34), !dbg !35
  tail call void @llvm.dbg.value(metadata double %s, i64 0, metadata !25, metadata !34), !dbg !36
  tail call void @llvm.dbg.value(metadata %struct.su3_matrix* %b, i64 0, metadata !26, metadata !34), !dbg !37
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !27, metadata !34), !dbg !38
  br label %.preheader, !dbg !39

.preheader:                                       ; preds = %10, %0
  %indvars.iv3 = phi i64 [ 0, %0 ], [ %indvars.iv.next4, %10 ]
  %1 = insertelement <2 x double> undef, double %s, i32 0, !dbg !41
  %2 = insertelement <2 x double> %1, double %s, i32 1, !dbg !41
  br label %3, !dbg !46

; <label>:3                                       ; preds = %3, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %3 ]
  %4 = getelementptr inbounds %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv3, i64 %indvars.iv, i32 0, !dbg !47
  %5 = getelementptr inbounds %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv3, i64 %indvars.iv, i32 0, !dbg !48
  %6 = bitcast double* %4 to <2 x double>*, !dbg !47
  %7 = load <2 x double>* %6, align 8, !dbg !47, !tbaa !49
  %8 = fmul <2 x double> %2, %7, !dbg !41
  %9 = bitcast double* %5 to <2 x double>*, !dbg !53
  store <2 x double> %8, <2 x double>* %9, align 8, !dbg !53, !tbaa !49
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !46
  %exitcond = icmp eq i64 %indvars.iv.next, 3, !dbg !46
  br i1 %exitcond, label %10, label %3, !dbg !46

; <label>:10                                      ; preds = %3
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !39
  %exitcond5 = icmp eq i64 %indvars.iv.next4, 3, !dbg !39
  br i1 %exitcond5, label %11, label %.preheader, !dbg !39

; <label>:11                                      ; preds = %10
  ret void, !dbg !54
}
