define void @mult_adj_su3_mat_vec(%struct.su3_matrix* nocapture %a, %struct.su3_vector* nocapture %b, %struct.su3_vector* nocapture %c) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.su3_matrix* %a}, i64 0, metadata !32), !dbg !41
  tail call void @llvm.dbg.value(metadata !{%struct.su3_vector* %b}, i64 0, metadata !33), !dbg !41
  tail call void @llvm.dbg.value(metadata !{%struct.su3_vector* %c}, i64 0, metadata !34), !dbg !41
  tail call void @llvm.dbg.declare(metadata !42, metadata !38), !dbg !43
  tail call void @llvm.dbg.declare(metadata !42, metadata !39), !dbg !43
  tail call void @llvm.dbg.declare(metadata !42, metadata !40), !dbg !43
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !35), !dbg !44
  br label %for.cond1.preheader, !dbg !44

for.cond1.preheader:                              ; preds = %for.end, %entry
  %indvars.iv74 = phi i64 [ 0, %entry ], [ %indvars.iv.next75, %for.end ]
  br label %for.body3, !dbg !46

for.body3:                                        ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  %x.sroa.1.071 = phi double [ 0.000000e+00, %for.cond1.preheader ], [ %add46, %for.body3 ]
  %x.sroa.0.070 = phi double [ 0.000000e+00, %for.cond1.preheader ], [ %add43, %for.body3 ]
  %real6 = getelementptr inbounds %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv, i64 %indvars.iv74, i32 0, !dbg !49
  %0 = load double* %real6, align 8, !dbg !49, !tbaa !52
  %imag13 = getelementptr inbounds %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv, i64 %indvars.iv74, i32 1, !dbg !49
  %1 = load double* %imag13, align 8, !dbg !49, !tbaa !52
  %sub = fsub double -0.000000e+00, %1, !dbg !49
  %real19 = getelementptr inbounds %struct.su3_vector* %b, i64 0, i32 0, i64 %indvars.iv, i32 0, !dbg !55
  %2 = load double* %real19, align 8, !dbg !55, !tbaa !52
  %mul = fmul double %0, %2, !dbg !55
  %imag24 = getelementptr inbounds %struct.su3_vector* %b, i64 0, i32 0, i64 %indvars.iv, i32 1, !dbg !55
  %3 = load double* %imag24, align 8, !dbg !55, !tbaa !52
  %mul25 = fmul double %3, %sub, !dbg !55
  %sub26 = fsub double %mul, %mul25, !dbg !55
  %mul33 = fmul double %0, %3, !dbg !55
  %mul39 = fmul double %2, %sub, !dbg !55
  %add = fadd double %mul39, %mul33, !dbg !55
  %add43 = fadd double %x.sroa.0.070, %sub26, !dbg !57
  %add46 = fadd double %x.sroa.1.071, %add, !dbg !57
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !46
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !46
  %exitcond = icmp eq i32 %lftr.wideiv, 3, !dbg !46
  br i1 %exitcond, label %for.end, label %for.body3, !dbg !46

for.end:                                          ; preds = %for.body3
  %x.sroa.0.0.idx = getelementptr inbounds %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv74, i32 0, !dbg !59
  store double %add43, double* %x.sroa.0.0.idx, align 8, !dbg !59
  %x.sroa.1.8.idx55 = getelementptr inbounds %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv74, i32 1, !dbg !59
  store double %add46, double* %x.sroa.1.8.idx55, align 8, !dbg !59
  %indvars.iv.next75 = add i64 %indvars.iv74, 1, !dbg !44
  %lftr.wideiv76 = trunc i64 %indvars.iv.next75 to i32, !dbg !44
  %exitcond77 = icmp eq i32 %lftr.wideiv76, 3, !dbg !44
  br i1 %exitcond77, label %for.end52, label %for.cond1.preheader, !dbg !44

for.end52:                                        ; preds = %for.end
  ret void, !dbg !60
}
