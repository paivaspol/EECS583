define void @mult_su2_mat_vec_elem_n(%struct.su2_matrix* nocapture readonly %u, %struct.complex* nocapture %x0, %struct.complex* nocapture %x1) #0 {
  tail call void @llvm.dbg.value(metadata %struct.su2_matrix* %u, i64 0, metadata !25, metadata !36), !dbg !37
  tail call void @llvm.dbg.value(metadata %struct.complex* %x0, i64 0, metadata !26, metadata !36), !dbg !38
  tail call void @llvm.dbg.value(metadata %struct.complex* %x1, i64 0, metadata !27, metadata !36), !dbg !39
  tail call void @llvm.dbg.declare(metadata %struct.complex* undef, metadata !28, metadata !36), !dbg !40
  tail call void @llvm.dbg.declare(metadata %struct.complex* undef, metadata !29, metadata !36), !dbg !41
  tail call void @llvm.dbg.declare(metadata %struct.complex* undef, metadata !30, metadata !36), !dbg !42
  tail call void @llvm.dbg.declare(metadata %struct.complex* undef, metadata !31, metadata !36), !dbg !43
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !30, metadata !44), !dbg !42
  %1 = bitcast %struct.complex* %x0 to <2 x double>*, !dbg !45
  %2 = load <2 x double>* %1, align 8, !dbg !45
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !30, metadata !46), !dbg !42
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !31, metadata !44), !dbg !43
  %3 = bitcast %struct.complex* %x1 to <2 x double>*, !dbg !47
  %4 = load <2 x double>* %3, align 8, !dbg !47
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !31, metadata !46), !dbg !43
  %5 = getelementptr inbounds %struct.su2_matrix* %u, i64 0, i32 0, i64 0, i64 0, i32 0, !dbg !48
  %6 = load double* %5, align 8, !dbg !48, !tbaa !50
  %7 = getelementptr inbounds %struct.su2_matrix* %u, i64 0, i32 0, i64 0, i64 0, i32 1, !dbg !48
  %8 = load double* %7, align 8, !dbg !48, !tbaa !55
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !28, metadata !44), !dbg !40
  %9 = insertelement <2 x double> undef, double %6, i32 0, !dbg !48
  %10 = insertelement <2 x double> %9, double %6, i32 1, !dbg !48
  %11 = fmul <2 x double> %2, %10, !dbg !48
  %12 = shufflevector <2 x double> %2, <2 x double> undef, <2 x i32> <i32 1, i32 0>, !dbg !48
  %13 = insertelement <2 x double> undef, double %8, i32 0, !dbg !48
  %14 = insertelement <2 x double> %13, double %8, i32 1, !dbg !48
  %15 = fmul <2 x double> %12, %14, !dbg !48
  %16 = fsub <2 x double> %11, %15, !dbg !48
  %17 = fadd <2 x double> %11, %15, !dbg !48
  %18 = shufflevector <2 x double> %16, <2 x double> %17, <2 x i32> <i32 0, i32 3>, !dbg !48
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !28, metadata !46), !dbg !40
  %19 = getelementptr inbounds %struct.su2_matrix* %u, i64 0, i32 0, i64 0, i64 1, i32 0, !dbg !56
  %20 = load double* %19, align 8, !dbg !56, !tbaa !50
  %21 = getelementptr inbounds %struct.su2_matrix* %u, i64 0, i32 0, i64 0, i64 1, i32 1, !dbg !56
  %22 = load double* %21, align 8, !dbg !56, !tbaa !55
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !29, metadata !44), !dbg !41
  %23 = insertelement <2 x double> undef, double %20, i32 0, !dbg !56
  %24 = insertelement <2 x double> %23, double %20, i32 1, !dbg !56
  %25 = fmul <2 x double> %4, %24, !dbg !56
  %26 = shufflevector <2 x double> %4, <2 x double> undef, <2 x i32> <i32 1, i32 0>, !dbg !56
  %27 = insertelement <2 x double> undef, double %22, i32 0, !dbg !56
  %28 = insertelement <2 x double> %27, double %22, i32 1, !dbg !56
  %29 = fmul <2 x double> %26, %28, !dbg !56
  %30 = fsub <2 x double> %25, %29, !dbg !56
  %31 = fadd <2 x double> %25, %29, !dbg !56
  %32 = shufflevector <2 x double> %30, <2 x double> %31, <2 x i32> <i32 0, i32 3>, !dbg !56
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !29, metadata !46), !dbg !41
  %33 = fadd <2 x double> %18, %32, !dbg !58
  %34 = bitcast %struct.complex* %x0 to <2 x double>*, !dbg !58
  store <2 x double> %33, <2 x double>* %34, align 8, !dbg !58, !tbaa !60
  %35 = getelementptr inbounds %struct.su2_matrix* %u, i64 0, i32 0, i64 1, i64 0, i32 0, !dbg !61
  %36 = load double* %35, align 8, !dbg !61, !tbaa !50
  %37 = getelementptr inbounds %struct.su2_matrix* %u, i64 0, i32 0, i64 1, i64 0, i32 1, !dbg !61
  %38 = load double* %37, align 8, !dbg !61, !tbaa !55
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !28, metadata !44), !dbg !40
  %39 = insertelement <2 x double> undef, double %36, i32 0, !dbg !61
  %40 = insertelement <2 x double> %39, double %36, i32 1, !dbg !61
  %41 = fmul <2 x double> %40, %2, !dbg !61
  %42 = insertelement <2 x double> undef, double %38, i32 0, !dbg !61
  %43 = insertelement <2 x double> %42, double %38, i32 1, !dbg !61
  %44 = fmul <2 x double> %43, %12, !dbg !61
  %45 = fsub <2 x double> %41, %44, !dbg !61
  %46 = fadd <2 x double> %41, %44, !dbg !61
  %47 = shufflevector <2 x double> %45, <2 x double> %46, <2 x i32> <i32 0, i32 3>, !dbg !61
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !28, metadata !46), !dbg !40
  %48 = getelementptr inbounds %struct.su2_matrix* %u, i64 0, i32 0, i64 1, i64 1, i32 0, !dbg !63
  %49 = load double* %48, align 8, !dbg !63, !tbaa !50
  %50 = getelementptr inbounds %struct.su2_matrix* %u, i64 0, i32 0, i64 1, i64 1, i32 1, !dbg !63
  %51 = load double* %50, align 8, !dbg !63, !tbaa !55
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !29, metadata !44), !dbg !41
  %52 = insertelement <2 x double> undef, double %49, i32 0, !dbg !63
  %53 = insertelement <2 x double> %52, double %49, i32 1, !dbg !63
  %54 = fmul <2 x double> %53, %4, !dbg !63
  %55 = insertelement <2 x double> undef, double %51, i32 0, !dbg !63
  %56 = insertelement <2 x double> %55, double %51, i32 1, !dbg !63
  %57 = fmul <2 x double> %56, %26, !dbg !63
  %58 = fsub <2 x double> %54, %57, !dbg !63
  %59 = fadd <2 x double> %54, %57, !dbg !63
  %60 = shufflevector <2 x double> %58, <2 x double> %59, <2 x i32> <i32 0, i32 3>, !dbg !63
  tail call void @llvm.dbg.value(metadata double undef, i64 0, metadata !29, metadata !46), !dbg !41
  %61 = fadd <2 x double> %47, %60, !dbg !65
  %62 = bitcast %struct.complex* %x1 to <2 x double>*, !dbg !65
  store <2 x double> %61, <2 x double>* %62, align 8, !dbg !65, !tbaa !60
  ret void, !dbg !67
}
