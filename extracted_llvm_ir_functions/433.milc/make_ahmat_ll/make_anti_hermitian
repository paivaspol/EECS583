define void @make_anti_hermitian(%struct.su3_matrix* nocapture readonly %m3, %struct.anti_hermitmat* nocapture %ah3) #0 {
  tail call void @llvm.dbg.value(metadata %struct.su3_matrix* %m3, i64 0, metadata !35, metadata !42), !dbg !43
  tail call void @llvm.dbg.value(metadata %struct.anti_hermitmat* %ah3, i64 0, metadata !36, metadata !42), !dbg !44
  %1 = getelementptr inbounds %struct.su3_matrix* %m3, i64 0, i32 0, i64 0, i64 0, i32 1, !dbg !45
  %2 = load double* %1, align 8, !dbg !45, !tbaa !46
  %3 = getelementptr inbounds %struct.su3_matrix* %m3, i64 0, i32 0, i64 1, i64 1, i32 1, !dbg !51
  %4 = load double* %3, align 8, !dbg !51, !tbaa !46
  %5 = fadd double %2, %4, !dbg !52
  %6 = getelementptr inbounds %struct.su3_matrix* %m3, i64 0, i32 0, i64 2, i64 2, i32 1, !dbg !53
  %7 = load double* %6, align 8, !dbg !53, !tbaa !46
  %8 = fadd double %5, %7, !dbg !54
  %9 = fmul double %8, 0x3FD5555551C112DA, !dbg !55
  tail call void @llvm.dbg.value(metadata double %9, i64 0, metadata !37, metadata !42), !dbg !56
  %10 = getelementptr inbounds %struct.anti_hermitmat* %ah3, i64 0, i32 3, !dbg !57
  %11 = insertelement <2 x double> undef, double %2, i32 0, !dbg !58
  %12 = insertelement <2 x double> %11, double %4, i32 1, !dbg !58
  %13 = insertelement <2 x double> undef, double %9, i32 0, !dbg !58
  %14 = insertelement <2 x double> %13, double %9, i32 1, !dbg !58
  %15 = fsub <2 x double> %12, %14, !dbg !58
  %16 = bitcast double* %10 to <2 x double>*, !dbg !59
  store <2 x double> %15, <2 x double>* %16, align 8, !dbg !59, !tbaa !60
  %17 = fsub double %7, %9, !dbg !61
  %18 = getelementptr inbounds %struct.anti_hermitmat* %ah3, i64 0, i32 5, !dbg !62
  store double %17, double* %18, align 8, !dbg !63, !tbaa !64
  %19 = getelementptr inbounds %struct.su3_matrix* %m3, i64 0, i32 0, i64 0, i64 1, i32 0, !dbg !66
  %20 = getelementptr inbounds %struct.su3_matrix* %m3, i64 0, i32 0, i64 1, i64 0, i32 0, !dbg !67
  %21 = getelementptr inbounds %struct.su3_matrix* %m3, i64 0, i32 0, i64 0, i64 2, i32 0, !dbg !68
  %22 = bitcast double* %19 to <2 x double>*, !dbg !66
  %23 = load <2 x double>* %22, align 8, !dbg !66, !tbaa !60
  %24 = bitcast double* %20 to <2 x double>*, !dbg !67
  %25 = load <2 x double>* %24, align 8, !dbg !67, !tbaa !60
  %26 = fsub <2 x double> %23, %25, !dbg !69
  %27 = fadd <2 x double> %23, %25, !dbg !69
  %28 = shufflevector <2 x double> %26, <2 x double> %27, <2 x i32> <i32 0, i32 3>, !dbg !69
  %29 = fmul <2 x double> %28, <double 5.000000e-01, double 5.000000e-01>, !dbg !70
  %30 = bitcast %struct.anti_hermitmat* %ah3 to <2 x double>*, !dbg !71
  store <2 x double> %29, <2 x double>* %30, align 8, !dbg !71, !tbaa !60
  %31 = getelementptr inbounds %struct.su3_matrix* %m3, i64 0, i32 0, i64 2, i64 0, i32 0, !dbg !72
  %32 = getelementptr inbounds %struct.anti_hermitmat* %ah3, i64 0, i32 1, i32 0, !dbg !73
  %33 = getelementptr inbounds %struct.su3_matrix* %m3, i64 0, i32 0, i64 1, i64 2, i32 0, !dbg !74
  %34 = bitcast double* %21 to <2 x double>*, !dbg !68
  %35 = load <2 x double>* %34, align 8, !dbg !68, !tbaa !60
  %36 = bitcast double* %31 to <2 x double>*, !dbg !72
  %37 = load <2 x double>* %36, align 8, !dbg !72, !tbaa !60
  %38 = fsub <2 x double> %35, %37, !dbg !75
  %39 = fadd <2 x double> %35, %37, !dbg !75
  %40 = shufflevector <2 x double> %38, <2 x double> %39, <2 x i32> <i32 0, i32 3>, !dbg !75
  %41 = fmul <2 x double> %40, <double 5.000000e-01, double 5.000000e-01>, !dbg !76
  %42 = bitcast double* %32 to <2 x double>*, !dbg !77
  store <2 x double> %41, <2 x double>* %42, align 8, !dbg !77, !tbaa !60
  %43 = getelementptr inbounds %struct.su3_matrix* %m3, i64 0, i32 0, i64 2, i64 1, i32 0, !dbg !78
  %44 = getelementptr inbounds %struct.anti_hermitmat* %ah3, i64 0, i32 2, i32 0, !dbg !79
  %45 = bitcast double* %33 to <2 x double>*, !dbg !74
  %46 = load <2 x double>* %45, align 8, !dbg !74, !tbaa !60
  %47 = bitcast double* %43 to <2 x double>*, !dbg !78
  %48 = load <2 x double>* %47, align 8, !dbg !78, !tbaa !60
  %49 = fsub <2 x double> %46, %48, !dbg !80
  %50 = fadd <2 x double> %46, %48, !dbg !80
  %51 = shufflevector <2 x double> %49, <2 x double> %50, <2 x i32> <i32 0, i32 3>, !dbg !80
  %52 = fmul <2 x double> %51, <double 5.000000e-01, double 5.000000e-01>, !dbg !81
  %53 = bitcast double* %44 to <2 x double>*, !dbg !82
  store <2 x double> %52, <2 x double>* %53, align 8, !dbg !82, !tbaa !60
  ret void, !dbg !83
}
