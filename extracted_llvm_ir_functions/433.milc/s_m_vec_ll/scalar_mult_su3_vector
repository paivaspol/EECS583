define void @scalar_mult_su3_vector(%struct.su3_vector* nocapture readonly %a, double %s, %struct.su3_vector* nocapture %c) #0 {
  tail call void @llvm.dbg.value(metadata %struct.su3_vector* %a, i64 0, metadata !24, metadata !33), !dbg !34
  tail call void @llvm.dbg.value(metadata double %s, i64 0, metadata !25, metadata !33), !dbg !35
  tail call void @llvm.dbg.value(metadata %struct.su3_vector* %c, i64 0, metadata !26, metadata !33), !dbg !36
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !27, metadata !33), !dbg !37
  %1 = insertelement <2 x double> undef, double %s, i32 0, !dbg !38
  %2 = insertelement <2 x double> %1, double %s, i32 1, !dbg !38
  br label %3, !dbg !42

; <label>:3                                       ; preds = %3, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %3 ]
  %4 = getelementptr inbounds %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv, i32 0, !dbg !43
  %5 = getelementptr inbounds %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 0, !dbg !44
  %6 = bitcast double* %4 to <2 x double>*, !dbg !43
  %7 = load <2 x double>* %6, align 8, !dbg !43, !tbaa !45
  %8 = fmul <2 x double> %2, %7, !dbg !38
  %9 = bitcast double* %5 to <2 x double>*, !dbg !49
  store <2 x double> %8, <2 x double>* %9, align 8, !dbg !49, !tbaa !45
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !42
  %exitcond = icmp eq i64 %indvars.iv.next, 3, !dbg !42
  br i1 %exitcond, label %10, label %3, !dbg !42

; <label>:10                                      ; preds = %3
  ret void, !dbg !50
}
