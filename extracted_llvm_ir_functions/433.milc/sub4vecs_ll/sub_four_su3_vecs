define void @sub_four_su3_vecs(%struct.su3_vector* nocapture %a, %struct.su3_vector* nocapture readonly %b1, %struct.su3_vector* nocapture readonly %b2, %struct.su3_vector* nocapture readonly %b3, %struct.su3_vector* nocapture readonly %b4) #0 {
  tail call void @llvm.dbg.value(metadata %struct.su3_vector* %a, i64 0, metadata !24, metadata !35), !dbg !36
  tail call void @llvm.dbg.value(metadata %struct.su3_vector* %b1, i64 0, metadata !25, metadata !35), !dbg !37
  tail call void @llvm.dbg.value(metadata %struct.su3_vector* %b2, i64 0, metadata !26, metadata !35), !dbg !38
  tail call void @llvm.dbg.value(metadata %struct.su3_vector* %b3, i64 0, metadata !27, metadata !35), !dbg !39
  tail call void @llvm.dbg.value(metadata %struct.su3_vector* %b4, i64 0, metadata !28, metadata !35), !dbg !40
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !29, metadata !35), !dbg !41
  br label %1, !dbg !42

; <label>:1                                       ; preds = %1, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %1 ]
  %2 = getelementptr inbounds %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv, i32 0, !dbg !44
  %3 = load double* %2, align 8, !dbg !44, !tbaa !48
  %4 = getelementptr inbounds %struct.su3_vector* %b1, i64 0, i32 0, i64 %indvars.iv, i32 0, !dbg !44
  %5 = load double* %4, align 8, !dbg !44, !tbaa !48
  %6 = getelementptr inbounds %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv, i32 1, !dbg !44
  %7 = load double* %6, align 8, !dbg !44, !tbaa !53
  %8 = getelementptr inbounds %struct.su3_vector* %b1, i64 0, i32 0, i64 %indvars.iv, i32 1, !dbg !44
  %9 = load double* %8, align 8, !dbg !44, !tbaa !53
  %10 = fsub double %7, %9, !dbg !44
  store double %10, double* %6, align 8, !dbg !44, !tbaa !53
  %11 = getelementptr inbounds %struct.su3_vector* %b2, i64 0, i32 0, i64 %indvars.iv, i32 0, !dbg !54
  %12 = getelementptr inbounds %struct.su3_vector* %b2, i64 0, i32 0, i64 %indvars.iv, i32 1, !dbg !54
  %13 = load double* %12, align 8, !dbg !54, !tbaa !53
  %14 = fsub double %10, %13, !dbg !54
  store double %14, double* %6, align 8, !dbg !54, !tbaa !53
  %15 = getelementptr inbounds %struct.su3_vector* %b3, i64 0, i32 0, i64 %indvars.iv, i32 1, !dbg !56
  %16 = load double* %15, align 8, !dbg !56, !tbaa !53
  %17 = fsub double %14, %16, !dbg !56
  store double %17, double* %6, align 8, !dbg !56, !tbaa !53
  %18 = getelementptr inbounds %struct.su3_vector* %b4, i64 0, i32 0, i64 %indvars.iv, i32 1, !dbg !58
  %19 = load double* %18, align 8, !dbg !58, !tbaa !53
  %20 = insertelement <2 x double> undef, double %3, i32 0, !dbg !44
  %21 = insertelement <2 x double> %20, double %17, i32 1, !dbg !44
  %22 = insertelement <2 x double> undef, double %5, i32 0, !dbg !44
  %23 = insertelement <2 x double> %22, double %19, i32 1, !dbg !44
  %24 = fsub <2 x double> %21, %23, !dbg !44
  %25 = bitcast double* %2 to <2 x double>*, !dbg !44
  store <2 x double> %24, <2 x double>* %25, align 8, !dbg !44, !tbaa !60
  %26 = load double* %11, align 8, !dbg !54, !tbaa !48
  %27 = extractelement <2 x double> %24, i32 0, !dbg !54
  %28 = fsub double %27, %26, !dbg !54
  store double %28, double* %2, align 8, !dbg !54, !tbaa !48
  %29 = getelementptr inbounds %struct.su3_vector* %b3, i64 0, i32 0, i64 %indvars.iv, i32 0, !dbg !56
  %30 = load double* %29, align 8, !dbg !56, !tbaa !48
  %31 = fsub double %28, %30, !dbg !56
  store double %31, double* %2, align 8, !dbg !56, !tbaa !48
  %32 = getelementptr inbounds %struct.su3_vector* %b4, i64 0, i32 0, i64 %indvars.iv, i32 0, !dbg !58
  %33 = load double* %32, align 8, !dbg !58, !tbaa !48
  %34 = fsub double %31, %33, !dbg !58
  store double %34, double* %2, align 8, !dbg !58, !tbaa !48
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !42
  %exitcond = icmp eq i64 %indvars.iv.next, 3, !dbg !42
  br i1 %exitcond, label %35, label %1, !dbg !42

; <label>:35                                      ; preds = %1
  ret void, !dbg !61
}
