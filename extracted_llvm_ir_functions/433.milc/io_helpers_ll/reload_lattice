define %struct.gauge_file* @reload_lattice(i32 %flag, i8* %filename) #0 {
entry:
  %ssplaq = alloca double, align 8
  %stplaq = alloca double, align 8
  %max_deviation = alloca double, align 8
  %call = call double (...)* @dclock() #5
  switch i32 %flag, label %sw.default [
    i32 10, label %sw.epilog
    i32 11, label %sw.bb1
    i32 12, label %sw.bb2
    i32 13, label %sw.bb4
    i32 19, label %sw.bb6
  ]

sw.bb1:                                           ; preds = %entry
  call void @coldlat() #6
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %call3 = call %struct.gauge_file* @restore_ascii(i8* %filename) #5
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  %call5 = call %struct.gauge_file* @restore_serial(i8* %filename) #5
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry
  %call7 = call %struct.gauge_file* @restore_parallel(i8* %filename) #5
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %0 = load i32* @this_node, align 4, !tbaa !0
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.default
  %call8 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([34 x i8]* @.str3, i64 0, i64 0), i32 %flag) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.default
  call void @terminate(i32 1) #5
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %if.end, %sw.bb6, %sw.bb4, %sw.bb2, %sw.bb1
  %gf.0 = phi %struct.gauge_file* [ undef, %if.end ], [ %call7, %sw.bb6 ], [ %call5, %sw.bb4 ], [ %call3, %sw.bb2 ], [ null, %sw.bb1 ], [ null, %entry ]
  %call9 = call double (...)* @dclock() #5
  %flag.off = add i32 %flag, -10
  %1 = icmp ugt i32 %flag.off, 1
  %2 = load i32* @this_node, align 4, !tbaa !0
  %cmp13 = icmp eq i32 %2, 0
  %or.cond33 = and i1 %1, %cmp13
  br i1 %or.cond33, label %if.then14, label %if.end17

if.then14:                                        ; preds = %sw.epilog
  %add = fsub double %call9, %call
  %call15 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str4, i64 0, i64 0), double %add) #5
  br label %if.end17

if.end17:                                         ; preds = %if.then14, %sw.epilog
  call void @d_plaquette(double* %ssplaq, double* %stplaq) #5
  %3 = load i32* @this_node, align 4, !tbaa !0
  %cmp18 = icmp eq i32 %3, 0
  br i1 %cmp18, label %if.then19, label %if.end22

if.then19:                                        ; preds = %if.end17
  %4 = load double* %ssplaq, align 8, !tbaa !3
  %5 = load double* %stplaq, align 8, !tbaa !3
  %call20 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str2, i64 0, i64 0), double %4, double %5) #5
  %6 = load %struct._IO_FILE** @stdout, align 8, !tbaa !4
  %call21 = call i32 @fflush(%struct._IO_FILE* %6) #5
  br label %if.end22

if.end22:                                         ; preds = %if.then19, %if.end17
  %call23 = call double (...)* @dclock() #5
  %call25 = call double @check_unitarity() #5
  store double %call25, double* %max_deviation, align 8, !tbaa !3
  call void @g_doublemax(double* %max_deviation) #5
  %call26 = call double (...)* @dclock() #5
  %7 = load i32* @this_node, align 4, !tbaa !0
  %cmp28 = icmp eq i32 %7, 0
  br i1 %cmp28, label %if.then29, label %if.end31

if.then29:                                        ; preds = %if.end22
  %8 = load double* %max_deviation, align 8, !tbaa !3
  %call30 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([40 x i8]* @.str5, i64 0, i64 0), double %8) #5
  br label %if.end31

if.end31:                                         ; preds = %if.then29, %if.end22
  %9 = load %struct._IO_FILE** @stdout, align 8, !tbaa !4
  %call32 = call i32 @fflush(%struct._IO_FILE* %9) #5
  ret %struct.gauge_file* %gf.0
}
