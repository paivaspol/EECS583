define i32 @main(i32 %argc, i8** nocapture %argv) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %argc}, i64 0, metadata !13), !dbg !18
  tail call void @llvm.dbg.value(metadata !{i8** %argv}, i64 0, metadata !14), !dbg !18
  %cmp = icmp slt i32 %argc, 2, !dbg !19
  br i1 %cmp, label %if.then, label %if.end, !dbg !19

if.then:                                          ; preds = %entry
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([29 x i8]* @str, i64 0, i64 0)), !dbg !20
  br label %return, !dbg !22

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds i8** %argv, i64 1, !dbg !23
  %0 = load i8** %arrayidx, align 8, !dbg !23, !tbaa !24
  %call1 = tail call i32 @atoi(i8* %0) #6, !dbg !23
  tail call void @llvm.dbg.value(metadata !{i32 %call1}, i64 0, metadata !15), !dbg !23
  %arrayidx2 = getelementptr inbounds i8** %argv, i64 2, !dbg !27
  %1 = load i8** %arrayidx2, align 8, !dbg !27, !tbaa !24
  %call3 = tail call i32 @atoi(i8* %1) #6, !dbg !27
  tail call void @llvm.dbg.value(metadata !{i32 %call3}, i64 0, metadata !16), !dbg !27
  %call4 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([22 x i8]* @.str1, i64 0, i64 0), i32 %call1, i32 %call3) #7, !dbg !28
  %call5 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str2, i64 0, i64 0)) #7, !dbg !29
  tail call void @spec_srand(i32 %call1) #7, !dbg !30
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !17), !dbg !31
  %cmp627 = icmp sgt i32 %call3, 0, !dbg !31
  br i1 %cmp627, label %for.body, label %for.end.thread, !dbg !31

for.end.thread:                                   ; preds = %if.end
  %call930 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #7, !dbg !33
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !17), !dbg !34
  br label %return, !dbg !34

for.body:                                         ; preds = %if.end, %for.body
  %i.028 = phi i32 [ %inc, %for.body ], [ 0, %if.end ]
  %call7 = tail call double @spec_rand() #7, !dbg !36
  %call8 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str3, i64 0, i64 0), double %call7) #7, !dbg !36
  %inc = add nsw i32 %i.028, 1, !dbg !31
  tail call void @llvm.dbg.value(metadata !{i32 %inc}, i64 0, metadata !17), !dbg !31
  %exitcond29 = icmp eq i32 %inc, %call3, !dbg !31
  br i1 %exitcond29, label %for.end, label %for.body, !dbg !31

for.end:                                          ; preds = %for.body
  %call9 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #7, !dbg !33
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !17), !dbg !34
  br i1 %cmp627, label %for.body12, label %return, !dbg !34

for.body12:                                       ; preds = %for.end, %for.body12
  %i.126 = phi i32 [ %inc16, %for.body12 ], [ 0, %for.end ]
  %call13 = tail call double @spec_rand() #7, !dbg !38
  %mul = fmul double %call13, 2.048000e+06, !dbg !38
  %add = fadd double %mul, 1.000000e+00, !dbg !38
  %conv = fptosi double %add to i32, !dbg !38
  %call14 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str5, i64 0, i64 0), i32 %conv) #7, !dbg !38
  %inc16 = add nsw i32 %i.126, 1, !dbg !34
  tail call void @llvm.dbg.value(metadata !{i32 %inc16}, i64 0, metadata !17), !dbg !34
  %exitcond = icmp eq i32 %inc16, %call3, !dbg !34
  br i1 %exitcond, label %return, label %for.body12, !dbg !34

return:                                           ; preds = %for.end, %for.end.thread, %for.body12, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %for.body12 ], [ 0, %for.end.thread ], [ 0, %for.end ]
  ret i32 %retval.0, !dbg !40
}
