define void @ggc_add_tree_root(%union.tree_node** %base, i32 %nelt) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node** %base}, i64 0, metadata !835), !dbg !1385
  tail call void @llvm.dbg.value(metadata !{i32 %nelt}, i64 0, metadata !836), !dbg !1386
  %0 = bitcast %union.tree_node** %base to i8*, !dbg !1387
  tail call void @llvm.dbg.value(metadata !{i8* %0}, i64 0, metadata !1388) #4, !dbg !1389
  tail call void @llvm.dbg.value(metadata !{i32 %nelt}, i64 0, metadata !1390) #4, !dbg !1391
  tail call void @llvm.dbg.value(metadata !1368, i64 0, metadata !1392) #4, !dbg !1391
  tail call void @llvm.dbg.value(metadata !1393, i64 0, metadata !1394) #4, !dbg !1395
  %call.i = tail call noalias i8* @xmalloc(i64 32) #6, !dbg !1396
  %1 = bitcast i8* %call.i to %struct.ggc_root*, !dbg !1396
  tail call void @llvm.dbg.value(metadata !{%struct.ggc_root* %1}, i64 0, metadata !1397) #4, !dbg !1396
  %2 = load %struct.ggc_root** @roots, align 8, !dbg !1398, !tbaa !1351
  %next.i = bitcast i8* %call.i to %struct.ggc_root**, !dbg !1398
  store %struct.ggc_root* %2, %struct.ggc_root** %next.i, align 8, !dbg !1398, !tbaa !1351
  %base1.i = getelementptr inbounds i8* %call.i, i64 8, !dbg !1399
  %3 = bitcast i8* %base1.i to i8**, !dbg !1399
  store i8* %0, i8** %3, align 8, !dbg !1399, !tbaa !1351
  %nelt2.i = getelementptr inbounds i8* %call.i, i64 16, !dbg !1400
  %4 = bitcast i8* %nelt2.i to i32*, !dbg !1400
  store i32 %nelt, i32* %4, align 4, !dbg !1400, !tbaa !1356
  %size3.i = getelementptr inbounds i8* %call.i, i64 20, !dbg !1401
  %5 = bitcast i8* %size3.i to i32*, !dbg !1401
  store i32 8, i32* %5, align 4, !dbg !1401, !tbaa !1356
  %cb4.i = getelementptr inbounds i8* %call.i, i64 24, !dbg !1402
  %6 = bitcast i8* %cb4.i to void (i8*)**, !dbg !1402
  store void (i8*)* @ggc_mark_tree_ptr, void (i8*)** %6, align 8, !dbg !1402, !tbaa !1351
  store %struct.ggc_root* %1, %struct.ggc_root** @roots, align 8, !dbg !1403, !tbaa !1351
  ret void, !dbg !1404
}
