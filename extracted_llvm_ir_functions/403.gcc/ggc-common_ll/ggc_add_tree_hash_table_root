define void @ggc_add_tree_hash_table_root(%struct.hash_table** %base, i32 %nelt) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.hash_table** %base}, i64 0, metadata !978), !dbg !1457
  tail call void @llvm.dbg.value(metadata !{i32 %nelt}, i64 0, metadata !979), !dbg !1458
  %0 = bitcast %struct.hash_table** %base to i8*, !dbg !1459
  tail call void @llvm.dbg.value(metadata !{i8* %0}, i64 0, metadata !1460) #4, !dbg !1461
  tail call void @llvm.dbg.value(metadata !{i32 %nelt}, i64 0, metadata !1462) #4, !dbg !1463
  tail call void @llvm.dbg.value(metadata !1368, i64 0, metadata !1464) #4, !dbg !1463
  tail call void @llvm.dbg.value(metadata !1465, i64 0, metadata !1466) #4, !dbg !1467
  %call.i = tail call noalias i8* @xmalloc(i64 32) #6, !dbg !1468
  %1 = bitcast i8* %call.i to %struct.ggc_root*, !dbg !1468
  tail call void @llvm.dbg.value(metadata !{%struct.ggc_root* %1}, i64 0, metadata !1469) #4, !dbg !1468
  %2 = load %struct.ggc_root** @roots, align 8, !dbg !1470, !tbaa !1351
  %next.i = bitcast i8* %call.i to %struct.ggc_root**, !dbg !1470
  store %struct.ggc_root* %2, %struct.ggc_root** %next.i, align 8, !dbg !1470, !tbaa !1351
  %base1.i = getelementptr inbounds i8* %call.i, i64 8, !dbg !1471
  %3 = bitcast i8* %base1.i to i8**, !dbg !1471
  store i8* %0, i8** %3, align 8, !dbg !1471, !tbaa !1351
  %nelt2.i = getelementptr inbounds i8* %call.i, i64 16, !dbg !1472
  %4 = bitcast i8* %nelt2.i to i32*, !dbg !1472
  store i32 %nelt, i32* %4, align 4, !dbg !1472, !tbaa !1356
  %size3.i = getelementptr inbounds i8* %call.i, i64 20, !dbg !1473
  %5 = bitcast i8* %size3.i to i32*, !dbg !1473
  store i32 8, i32* %5, align 4, !dbg !1473, !tbaa !1356
  %cb4.i = getelementptr inbounds i8* %call.i, i64 24, !dbg !1474
  %6 = bitcast i8* %cb4.i to void (i8*)**, !dbg !1474
  store void (i8*)* @ggc_mark_tree_hash_table_ptr, void (i8*)** %6, align 8, !dbg !1474, !tbaa !1351
  store %struct.ggc_root* %1, %struct.ggc_root** @roots, align 8, !dbg !1475, !tbaa !1351
  ret void, !dbg !1476
}
