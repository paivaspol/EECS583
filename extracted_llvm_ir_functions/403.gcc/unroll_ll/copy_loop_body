define internal fastcc void @copy_loop_body(%struct.loop* %loop, %struct.rtx_def* nocapture %copy_start, %struct.rtx_def* %copy_end, %struct.inline_remap* %map, %struct.rtx_def* %exit_label, i32 %last_iteration, i32 %unroll_type, %struct.rtx_def* %start_label, %struct.rtx_def* %loop_end, %struct.rtx_def* %insert_before, %struct.rtx_def* %copy_notes_from) #0 {
entry:
  %aux = getelementptr inbounds %struct.loop* %loop, i64 0, i32 22
  %0 = load i8** %aux, align 8, !tbaa !0
  %ivs1 = getelementptr inbounds i8* %0, i64 208
  %tobool = icmp ne i32 %last_iteration, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call %struct.rtx_def* @gen_label_rtx() #6
  %arrayidx = getelementptr inbounds %struct.rtx_def* %start_label, i64 0, i32 1, i64 5
  %rtint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtint, align 4, !tbaa !3
  %idxprom = sext i32 %1 to i64
  %label_map = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 5
  %2 = load %struct.rtx_def*** %label_map, align 8, !tbaa !0
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %2, i64 %idxprom
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx2, align 8, !tbaa !0
  br label %if.end

if.else:                                          ; preds = %entry
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %start_label, i64 0, i32 1, i64 5
  %rtint5 = bitcast %union.rtunion_def* %arrayidx4 to i32*
  %3 = load i32* %rtint5, align 4, !tbaa !3
  %idxprom6 = sext i32 %3 to i64
  %label_map7 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 5
  %4 = load %struct.rtx_def*** %label_map7, align 8, !tbaa !0
  %arrayidx8 = getelementptr inbounds %struct.rtx_def** %4, i64 %idxprom6
  store %struct.rtx_def* %start_label, %struct.rtx_def** %arrayidx8, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %final_label.0 = phi %struct.rtx_def* [ null, %if.else ], [ %call, %if.then ]
  tail call void @start_sequence() #6
  %call9 = tail call %struct.rtx_def* @emit_note(i8* null, i32 -99) #6
  %orig_asm_operands_vector = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 12
  %regs = bitcast i8* %ivs1 to %struct.iv**
  %tobool.not = xor i1 %tobool, true
  %cmp113 = icmp eq i32 %unroll_type, 0
  %or.cond = or i1 %cmp113, %tobool.not
  %n_regs = getelementptr inbounds i8* %0, i64 216
  %5 = bitcast i8* %n_regs to i32*
  %reg_map312 = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 4
  %const_equiv_varray = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 9
  %const_age = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 10
  %insn_map = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 6
  %last_pc_value = getelementptr inbounds %struct.inline_remap* %map, i64 0, i32 20
  %exit_label.c = ptrtoint %struct.rtx_def* %exit_label to i64
  %arrayidx414 = getelementptr inbounds %struct.rtx_def* %exit_label, i64 0, i32 1, i64 3
  %rtint415 = bitcast %union.rtunion_def* %arrayidx414 to i32*
  br label %do.body

do.body:                                          ; preds = %sw.epilog, %if.end
  %copy.0 = phi %struct.rtx_def* [ null, %if.end ], [ %copy.2, %sw.epilog ]
  %insn.0 = phi %struct.rtx_def* [ %copy_start, %if.end ], [ %6, %sw.epilog ]
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %insn.0, i64 0, i32 1, i64 2
  %rtx = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  store %struct.rtvec_def* null, %struct.rtvec_def** %orig_asm_operands_vector, align 8, !tbaa !0
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load = load i32* %7, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default [
    i32 32, label %sw.bb
    i32 33, label %sw.bb358
    i32 34, label %sw.bb600
    i32 36, label %sw.bb638
    i32 35, label %sw.bb650
    i32 37, label %sw.bb652
  ]

sw.bb:                                            ; preds = %do.body
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 3
  %rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx14, align 8, !tbaa !0
  %9 = load i8* getelementptr inbounds ([153 x i8]* @rtx_class, i64 0, i64 32), align 1, !tbaa !1
  %cmp = icmp eq i8 %9, 105
  br i1 %cmp, label %cond.true, label %if.end158

cond.true:                                        ; preds = %sw.bb
  %10 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load23 = load i32* %10, align 8
  %bf.clear24 = and i32 %bf.load23, 65535
  %cmp25 = icmp eq i32 %bf.clear24, 47
  br i1 %cmp25, label %cond.end36, label %cond.false

cond.false:                                       ; preds = %cond.true
  %call34 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %6, %struct.rtx_def* %8) #6
  br label %cond.end36

cond.end36:                                       ; preds = %cond.true, %cond.false
  %cond37 = phi %struct.rtx_def* [ %call34, %cond.false ], [ %8, %cond.true ]
  %tobool38 = icmp eq %struct.rtx_def* %cond37, null
  br i1 %tobool38, label %if.end158, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.end36
  %arrayidx40 = getelementptr inbounds %struct.rtx_def* %cond37, i64 0, i32 1, i64 0
  %rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**
  %11 = load %struct.rtx_def** %rtx41, align 8, !tbaa !0
  %12 = bitcast %struct.rtx_def* %11 to i32*
  %bf.load42 = load i32* %12, align 8
  %bf.clear43 = and i32 %bf.load42, 65535
  %cmp44 = icmp eq i32 %bf.clear43, 61
  br i1 %cmp44, label %land.lhs.true46, label %if.end158

land.lhs.true46:                                  ; preds = %land.lhs.true
  %arrayidx51 = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx51 to i32*
  %13 = load i32* %rtuint, align 4, !tbaa !3
  %idxprom52 = zext i32 %13 to i64
  %14 = load %struct.induction*** @addr_combined_regs, align 8, !tbaa !0
  %arrayidx53 = getelementptr inbounds %struct.induction** %14, i64 %idxprom52
  %15 = load %struct.induction** %arrayidx53, align 8, !tbaa !0
  %tobool54 = icmp eq %struct.induction* %15, null
  br i1 %tobool54, label %if.end158, label %if.then55

if.then55:                                        ; preds = %land.lhs.true46
  %src_reg = getelementptr inbounds %struct.induction* %15, i64 0, i32 2
  %16 = load %struct.rtx_def** %src_reg, align 8, !tbaa !0
  %arrayidx71 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 0
  %rtuint72 = bitcast %union.rtunion_def* %arrayidx71 to i32*
  %17 = load i32* %rtuint72, align 4, !tbaa !3
  %idxprom73 = zext i32 %17 to i64
  %18 = load %struct.iv** %regs, align 8, !tbaa !0
  %class = getelementptr inbounds %struct.iv* %18, i64 %idxprom73, i32 1, i32 0
  %19 = load %struct.iv_class** %class, align 8, !tbaa !0
  %call75 = tail call fastcc %struct.rtx_def* @calculate_giv_inc(%struct.rtx_def* %cond37, %struct.rtx_def* %6, i32 %13) #8
  %giv = getelementptr inbounds %struct.iv_class* %19, i64 0, i32 4
  %tv.01045 = load %struct.induction** %giv, align 8
  %tobool761046 = icmp eq %struct.induction* %tv.01045, null
  br i1 %tobool761046, label %if.end158, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then55
  %rtwint = getelementptr inbounds %struct.rtx_def* %call75, i64 0, i32 1, i64 0, i32 0
  %mult_val90 = getelementptr inbounds %struct.induction* %15, i64 0, i32 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %tv.01047 = phi %struct.induction* [ %tv.01045, %for.body.lr.ph ], [ %tv.0, %for.inc ]
  %giv_type = getelementptr inbounds %struct.induction* %tv.01047, i64 0, i32 3
  %20 = load i32* %giv_type, align 4, !tbaa !7
  %cmp77 = icmp eq i32 %20, 0
  br i1 %cmp77, label %land.lhs.true79, label %for.inc

land.lhs.true79:                                  ; preds = %for.body
  %same = getelementptr inbounds %struct.induction* %tv.01047, i64 0, i32 18
  %21 = load %struct.induction** %same, align 8, !tbaa !0
  %cmp80 = icmp eq %struct.induction* %21, %15
  br i1 %cmp80, label %if.then82, label %for.inc

if.then82:                                        ; preds = %land.lhs.true79
  %location = getelementptr inbounds %struct.induction* %tv.01047, i64 0, i32 5
  %22 = load %struct.rtx_def*** %location, align 8, !tbaa !0
  %23 = load %struct.rtx_def** %22, align 8, !tbaa !0
  %dest_reg = getelementptr inbounds %struct.induction* %tv.01047, i64 0, i32 4
  %24 = load %struct.rtx_def** %dest_reg, align 8, !tbaa !0
  %cmp83 = icmp eq %struct.rtx_def* %23, %24
  br i1 %cmp83, label %if.end86, label %for.inc

if.end86:                                         ; preds = %if.then82
  %25 = load i64* %rtwint, align 8, !tbaa !4
  %mult_val = getelementptr inbounds %struct.induction* %tv.01047, i64 0, i32 8
  %26 = load %struct.rtx_def** %mult_val, align 8, !tbaa !0
  %27 = load %struct.rtx_def** %mult_val90, align 8, !tbaa !0
  %cmp91 = icmp eq %struct.rtx_def* %26, %27
  br i1 %cmp91, label %if.end104, label %if.then93

if.then93:                                        ; preds = %if.end86
  %sext1024 = shl i64 %25, 32
  %conv94 = ashr exact i64 %sext1024, 32
  %rtwint98 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 1, i64 0, i32 0
  %28 = load i64* %rtwint98, align 8, !tbaa !4
  %div = sdiv i64 %conv94, %28
  %rtwint102 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 1, i64 0, i32 0
  %29 = load i64* %rtwint102, align 8, !tbaa !4
  %mul = mul nsw i64 %29, %div
  br label %if.end104

if.end104:                                        ; preds = %if.end86, %if.then93
  %this_giv_inc.0 = phi i64 [ %mul, %if.then93 ], [ %25, %if.end86 ]
  %sext = shl i64 %this_giv_inc.0, 32
  %conv106 = ashr exact i64 %sext, 32
  %call107 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %23, i64 %conv106) #6
  store %struct.rtx_def* %call107, %struct.rtx_def** %dest_reg, align 8, !tbaa !0
  %30 = load %struct.rtx_def*** %location, align 8, !tbaa !0
  store %struct.rtx_def* %call107, %struct.rtx_def** %30, align 8, !tbaa !0
  br i1 %or.cond, label %for.inc, label %if.then115

if.then115:                                       ; preds = %if.end104
  %31 = load %struct.rtx_def** %dest_reg, align 8, !tbaa !0
  %32 = bitcast %struct.rtx_def* %31 to i32*
  %bf.load118 = load i32* %32, align 8
  %bf.clear119 = and i32 %bf.load118, 65535
  %cmp120 = icmp eq i32 %bf.clear119, 61
  br i1 %cmp120, label %if.end129, label %if.else124

if.else124:                                       ; preds = %if.then115
  %arrayidx127 = getelementptr inbounds %struct.rtx_def* %31, i64 0, i32 1, i64 0
  %rtx128 = bitcast %union.rtunion_def* %arrayidx127 to %struct.rtx_def**
  %33 = load %struct.rtx_def** %rtx128, align 8, !tbaa !0
  br label %if.end129

if.end129:                                        ; preds = %if.then115, %if.else124
  %dest_reg116.0 = phi %struct.rtx_def* [ %33, %if.else124 ], [ %31, %if.then115 ]
  %same_insn = getelementptr inbounds %struct.induction* %tv.01047, i64 0, i32 20
  %34 = load %struct.induction** %same_insn, align 8, !tbaa !0
  %tobool130 = icmp eq %struct.induction* %34, null
  br i1 %tobool130, label %land.lhs.true131, label %if.end150

land.lhs.true131:                                 ; preds = %if.end129
  %shared = getelementptr inbounds %struct.induction* %tv.01047, i64 0, i32 13
  %35 = bitcast [2 x i8]* %shared to i16*
  %bf.load132 = load i16* %35, align 4
  %bf.clear133 = and i16 %bf.load132, 1024
  %tobool134 = icmp eq i16 %bf.clear133, 0
  br i1 %tobool134, label %if.then135, label %if.end150

if.then135:                                       ; preds = %land.lhs.true131
  %const_adjust = getelementptr inbounds %struct.induction* %tv.01047, i64 0, i32 19
  %36 = load i64* %const_adjust, align 8, !tbaa !4
  %call137 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %31, i64 %36) #6
  %37 = bitcast %struct.rtx_def* %call137 to i32*
  %bf.load138 = load i32* %37, align 8
  %bf.clear139 = and i32 %bf.load138, 65535
  %cmp140 = icmp eq i32 %bf.clear139, 75
  br i1 %cmp140, label %if.then142, label %if.end150

if.then142:                                       ; preds = %if.then135
  %fld143 = getelementptr inbounds %struct.rtx_def* %call137, i64 0, i32 1
  %rtx145 = bitcast [1 x %union.rtunion_def]* %fld143 to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx145, align 8, !tbaa !0
  %arrayidx147 = getelementptr inbounds %struct.rtx_def* %call137, i64 0, i32 1, i64 1
  %rtx148 = bitcast %union.rtunion_def* %arrayidx147 to %struct.rtx_def**
  %39 = load %struct.rtx_def** %rtx148, align 8, !tbaa !0
  tail call void @emit_unrolled_add(%struct.rtx_def* %dest_reg116.0, %struct.rtx_def* %38, %struct.rtx_def* %39) #8
  br label %if.end150

if.end150:                                        ; preds = %land.lhs.true131, %if.end129, %if.then135, %if.then142
  %const_adjust151 = getelementptr inbounds %struct.induction* %tv.01047, i64 0, i32 19
  %40 = load i64* %const_adjust151, align 8, !tbaa !4
  %sub = sub nsw i64 0, %40
  %call152 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %dest_reg116.0, i64 %sub) #6
  store %struct.rtx_def* %call152, %struct.rtx_def** %dest_reg, align 8, !tbaa !0
  %41 = load %struct.rtx_def*** %location, align 8, !tbaa !0
  store %struct.rtx_def* %call152, %struct.rtx_def** %41, align 8, !tbaa !0
  br label %for.inc

for.inc:                                          ; preds = %if.end104, %if.then82, %for.body, %land.lhs.true79, %if.end150
  %next_iv = getelementptr inbounds %struct.induction* %tv.01047, i64 0, i32 17
  %tv.0 = load %struct.induction** %next_iv, align 8
  %tobool76 = icmp eq %struct.induction* %tv.0, null
  br i1 %tobool76, label %if.end158, label %for.body

if.end158:                                        ; preds = %if.then55, %for.inc, %land.lhs.true46, %land.lhs.true, %cond.end36, %sw.bb
  %giv_inc.0 = phi %struct.rtx_def* [ null, %sw.bb ], [ null, %cond.end36 ], [ null, %land.lhs.true ], [ null, %land.lhs.true46 ], [ %call75, %for.inc ], [ %call75, %if.then55 ]
  %bf.load159 = load i32* %7, align 8
  %bf.clear160 = and i32 %bf.load159, 65535
  %idxprom1611023 = zext i32 %bf.clear160 to i64
  %arrayidx162 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom1611023
  %42 = load i8* %arrayidx162, align 1, !tbaa !1
  %cmp164 = icmp eq i8 %42, 105
  br i1 %cmp164, label %cond.true166, label %if.else320

cond.true166:                                     ; preds = %if.end158
  %43 = load %struct.rtx_def** %rtx14, align 8, !tbaa !0
  %44 = bitcast %struct.rtx_def* %43 to i32*
  %bf.load170 = load i32* %44, align 8
  %bf.clear171 = and i32 %bf.load170, 65535
  %cmp172 = icmp eq i32 %bf.clear171, 47
  br i1 %cmp172, label %cond.end186, label %cond.false178

cond.false178:                                    ; preds = %cond.true166
  %call182 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %6, %struct.rtx_def* %43) #6
  br label %cond.end186

cond.end186:                                      ; preds = %cond.true166, %cond.false178
  %cond187 = phi %struct.rtx_def* [ %call182, %cond.false178 ], [ %43, %cond.true166 ]
  %tobool188 = icmp eq %struct.rtx_def* %cond187, null
  br i1 %tobool188, label %if.else320, label %land.lhs.true189

land.lhs.true189:                                 ; preds = %cond.end186
  %arrayidx191 = getelementptr inbounds %struct.rtx_def* %cond187, i64 0, i32 1, i64 0
  %rtx192 = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx192, align 8, !tbaa !0
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load193 = load i32* %46, align 8
  %bf.clear194 = and i32 %bf.load193, 65535
  %cmp195 = icmp eq i32 %bf.clear194, 61
  br i1 %cmp195, label %land.lhs.true197, label %if.else320

land.lhs.true197:                                 ; preds = %land.lhs.true189
  %arrayidx202 = getelementptr inbounds %struct.rtx_def* %45, i64 0, i32 1, i64 0
  %rtuint203 = bitcast %union.rtunion_def* %arrayidx202 to i32*
  %47 = load i32* %rtuint203, align 4, !tbaa !3
  %idxprom204 = zext i32 %47 to i64
  %48 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !0
  %arrayidx205 = getelementptr inbounds %struct.rtx_def** %48, i64 %idxprom204
  %49 = load %struct.rtx_def** %arrayidx205, align 8, !tbaa !0
  %tobool206 = icmp eq %struct.rtx_def* %49, null
  br i1 %tobool206, label %if.else320, label %if.then207

if.then207:                                       ; preds = %land.lhs.true197
  %cmp218 = icmp eq %struct.rtx_def* %giv_inc.0, null
  br i1 %cmp218, label %if.then220, label %if.end222

if.then220:                                       ; preds = %if.then207
  %call221 = tail call fastcc %struct.rtx_def* @calculate_giv_inc(%struct.rtx_def* %cond187, %struct.rtx_def* %6, i32 %47) #8
  %.pre = load i32* %rtuint203, align 4, !tbaa !3
  br label %if.end222

if.end222:                                        ; preds = %if.then220, %if.then207
  %50 = phi i32 [ %.pre, %if.then220 ], [ %47, %if.then207 ]
  %giv_inc.1 = phi %struct.rtx_def* [ %call221, %if.then220 ], [ %giv_inc.0, %if.then207 ]
  br i1 %cmp113, label %if.then228, label %if.else258

if.then228:                                       ; preds = %if.end222
  %idxprom229 = zext i32 %50 to i64
  %51 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !0
  %arrayidx230 = getelementptr inbounds %struct.rtx_def** %51, i64 %idxprom229
  %52 = load %struct.rtx_def** %arrayidx230, align 8, !tbaa !0
  %rtwint233 = getelementptr inbounds %struct.rtx_def* %giv_inc.1, i64 0, i32 1, i64 0, i32 0
  %53 = load i64* %rtwint233, align 8, !tbaa !4
  %call234 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %52, i64 %53) #6
  %54 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !0
  %arrayidx236 = getelementptr inbounds %struct.rtx_def** %54, i64 %idxprom204
  store %struct.rtx_def* %call234, %struct.rtx_def** %arrayidx236, align 8, !tbaa !0
  %55 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !0
  %arrayidx238 = getelementptr inbounds %struct.rtx_def** %55, i64 %idxprom204
  %56 = load %struct.rtx_def** %arrayidx238, align 8, !tbaa !0
  %57 = bitcast %struct.rtx_def* %56 to i32*
  %bf.load239 = load i32* %57, align 8
  %bf.clear240 = and i32 %bf.load239, 65535
  %cmp241 = icmp eq i32 %bf.clear240, 75
  br i1 %cmp241, label %if.then243, label %if.else254

if.then243:                                       ; preds = %if.then228
  %fld246 = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 1
  %rtx248 = bitcast [1 x %union.rtunion_def]* %fld246 to %struct.rtx_def**
  %58 = load %struct.rtx_def** %rtx248, align 8, !tbaa !0
  %arrayidx252 = getelementptr inbounds %struct.rtx_def* %56, i64 0, i32 1, i64 1
  %rtx253 = bitcast %union.rtunion_def* %arrayidx252 to %struct.rtx_def**
  %59 = load %struct.rtx_def** %rtx253, align 8, !tbaa !0
  br label %if.end315

if.else254:                                       ; preds = %if.then228
  %60 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  br label %if.end315

if.else258:                                       ; preds = %if.end222
  %61 = load i32* %5, align 4, !tbaa !3
  %cmp259 = icmp ult i32 %47, %61
  br i1 %cmp259, label %land.lhs.true261, label %if.end274

land.lhs.true261:                                 ; preds = %if.else258
  %62 = load %struct.iv** %regs, align 8, !tbaa !0
  %type = getelementptr inbounds %struct.iv* %62, i64 %idxprom204, i32 0
  %63 = load i32* %type, align 4, !tbaa !9
  %cmp265 = icmp eq i32 %63, 1
  br i1 %cmp265, label %if.then267, label %if.end274

if.then267:                                       ; preds = %land.lhs.true261
  %class272 = getelementptr inbounds %struct.iv* %62, i64 %idxprom204, i32 1, i32 0
  %64 = load %struct.iv_class** %class272, align 8, !tbaa !0
  %biv = getelementptr inbounds %struct.iv_class* %64, i64 0, i32 2
  %65 = load %struct.induction** %biv, align 8, !tbaa !0
  %src_reg273 = getelementptr inbounds %struct.induction* %65, i64 0, i32 2
  %66 = load %struct.rtx_def** %src_reg273, align 8, !tbaa !0
  br label %if.end274

if.end274:                                        ; preds = %land.lhs.true261, %if.else258, %if.then267
  %giv_src_reg.0 = phi %struct.rtx_def* [ %66, %if.then267 ], [ %45, %if.else258 ], [ %45, %land.lhs.true261 ]
  %67 = bitcast %struct.rtx_def* %giv_src_reg.0 to i32*
  %bf.load275 = load i32* %67, align 8
  %bf.lshr276 = lshr i32 %bf.load275, 16
  %bf.clear277 = and i32 %bf.lshr276, 255
  %idxprom278 = zext i32 %50 to i64
  %68 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !0
  %arrayidx279 = getelementptr inbounds %struct.rtx_def** %68, i64 %idxprom278
  %69 = load %struct.rtx_def** %arrayidx279, align 8, !tbaa !0
  %call280 = tail call %struct.rtx_def* @simplify_gen_binary(i32 75, i32 %bf.clear277, %struct.rtx_def* %giv_inc.1, %struct.rtx_def* %69) #6
  %70 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !0
  %arrayidx282 = getelementptr inbounds %struct.rtx_def** %70, i64 %idxprom204
  store %struct.rtx_def* %call280, %struct.rtx_def** %arrayidx282, align 8, !tbaa !0
  %71 = load %struct.rtx_def*** @splittable_regs, align 8, !tbaa !0
  %arrayidx284 = getelementptr inbounds %struct.rtx_def** %71, i64 %idxprom204
  %72 = load %struct.rtx_def** %arrayidx284, align 8, !tbaa !0
  br i1 %tobool, label %lor.lhs.false, label %if.then290

lor.lhs.false:                                    ; preds = %if.end274
  %73 = load i32** @splittable_regs_updates, align 8, !tbaa !0
  %arrayidx287 = getelementptr inbounds i32* %73, i64 %idxprom204
  %74 = load i32* %arrayidx287, align 4, !tbaa !3
  %dec = add nsw i32 %74, -1
  store i32 %dec, i32* %arrayidx287, align 4, !tbaa !3
  %cmp288 = icmp eq i32 %74, 1
  br i1 %cmp288, label %if.else310, label %if.then290

if.then290:                                       ; preds = %lor.lhs.false, %if.end274
  %bf.load291 = load i32* %67, align 8
  %bf.lshr292 = lshr i32 %bf.load291, 16
  %bf.clear293 = and i32 %bf.lshr292, 255
  %call294 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %bf.clear293) #6
  %75 = load %struct.rtx_def*** %reg_map312, align 8, !tbaa !0
  %arrayidx296 = getelementptr inbounds %struct.rtx_def** %75, i64 %idxprom204
  store %struct.rtx_def* %call294, %struct.rtx_def** %arrayidx296, align 8, !tbaa !0
  %arrayidx298 = getelementptr inbounds %struct.rtx_def* %call294, i64 0, i32 1, i64 0
  %rtuint299 = bitcast %union.rtunion_def* %arrayidx298 to i32*
  %76 = load i32* %rtuint299, align 4, !tbaa !3
  %77 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %cmp300 = icmp eq %struct.rtx_def* %72, %77
  br i1 %cmp300, label %cond.end308, label %cond.false303

cond.false303:                                    ; preds = %if.then290
  %bf.load304 = load i32* %67, align 8
  %bf.lshr305 = lshr i32 %bf.load304, 16
  %bf.clear306 = and i32 %bf.lshr305, 255
  %call307 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear306, %struct.rtx_def* %giv_src_reg.0, %struct.rtx_def* %72) #6
  br label %cond.end308

cond.end308:                                      ; preds = %if.then290, %cond.false303
  %cond309 = phi %struct.rtx_def* [ %call307, %cond.false303 ], [ %giv_src_reg.0, %if.then290 ]
  tail call void @record_base_value(i32 %76, %struct.rtx_def* %cond309, i32 1) #6
  br label %if.end315

if.else310:                                       ; preds = %lor.lhs.false
  %78 = load %struct.rtx_def*** %reg_map312, align 8, !tbaa !0
  %arrayidx313 = getelementptr inbounds %struct.rtx_def** %78, i64 %idxprom204
  store %struct.rtx_def* %giv_src_reg.0, %struct.rtx_def** %arrayidx313, align 8, !tbaa !0
  br label %if.end315

if.end315:                                        ; preds = %cond.end308, %if.else310, %if.then243, %if.else254
  %giv_src_reg.1 = phi %struct.rtx_def* [ %58, %if.then243 ], [ %56, %if.else254 ], [ %giv_src_reg.0, %cond.end308 ], [ %giv_src_reg.0, %if.else310 ]
  %giv_dest_reg.1 = phi %struct.rtx_def* [ %45, %if.then243 ], [ %45, %if.else254 ], [ %call294, %cond.end308 ], [ %giv_src_reg.0, %if.else310 ]
  %giv_inc.2 = phi %struct.rtx_def* [ %59, %if.then243 ], [ %60, %if.else254 ], [ %72, %cond.end308 ], [ %72, %if.else310 ]
  tail call void @emit_unrolled_add(%struct.rtx_def* %giv_dest_reg.1, %struct.rtx_def* %giv_src_reg.1, %struct.rtx_def* %giv_inc.2) #8
  %call316 = tail call %struct.rtx_def* @get_last_insn() #6
  br label %if.end323

if.else320:                                       ; preds = %if.end158, %land.lhs.true197, %cond.end186, %land.lhs.true189
  %cond1871032 = phi %struct.rtx_def* [ %cond187, %land.lhs.true197 ], [ null, %cond.end186 ], [ %cond187, %land.lhs.true189 ], [ null, %if.end158 ]
  %call321 = tail call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %8, %struct.inline_remap* %map, i32 0) #6
  %call322 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call321) #6
  br label %if.end323

if.end323:                                        ; preds = %if.else320, %if.end315
  %cond1871031 = phi %struct.rtx_def* [ %cond187, %if.end315 ], [ %cond1871032, %if.else320 ]
  %dest_reg_was_split.0 = phi i1 [ true, %if.end315 ], [ false, %if.else320 ]
  %copy.1 = phi %struct.rtx_def* [ %call316, %if.end315 ], [ %call322, %if.else320 ]
  %arrayidx325 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 6
  %rtx326 = bitcast %union.rtunion_def* %arrayidx325 to %struct.rtx_def**
  %79 = load %struct.rtx_def** %rtx326, align 8, !tbaa !0
  %call327 = tail call fastcc %struct.rtx_def* @initial_reg_note_copy(%struct.rtx_def* %79, %struct.inline_remap* %map) #8
  %80 = getelementptr inbounds %struct.rtx_def* %copy.1, i64 0, i32 1, i64 6, i32 0
  %call327.c = ptrtoint %struct.rtx_def* %call327 to i64
  store i64 %call327.c, i64* %80, align 8, !tbaa !0
  tail call void @try_constants(%struct.rtx_def* %copy.1, %struct.inline_remap* %map) #6
  br i1 %dest_reg_was_split.0, label %if.then332, label %sw.epilog

if.then332:                                       ; preds = %if.end323
  %arrayidx335 = getelementptr inbounds %struct.rtx_def* %cond1871031, i64 0, i32 1, i64 0
  %rtx336 = bitcast %union.rtunion_def* %arrayidx335 to %struct.rtx_def**
  %81 = load %struct.rtx_def** %rtx336, align 8, !tbaa !0
  %arrayidx338 = getelementptr inbounds %struct.rtx_def* %81, i64 0, i32 1, i64 0
  %rtuint339 = bitcast %union.rtunion_def* %arrayidx338 to i32*
  %82 = load i32* %rtuint339, align 4, !tbaa !3
  %conv340 = sext i32 %82 to i64
  %83 = load %struct.varray_head_tag** %const_equiv_varray, align 8, !tbaa !0
  %num_elements = getelementptr inbounds %struct.varray_head_tag* %83, i64 0, i32 0
  %84 = load i64* %num_elements, align 8, !tbaa !4
  %cmp341 = icmp ult i64 %conv340, %84
  br i1 %cmp341, label %land.lhs.true343, label %sw.epilog

land.lhs.true343:                                 ; preds = %if.then332
  %age = getelementptr inbounds %struct.varray_head_tag* %83, i64 0, i32 4, i32 0, i64 %conv340, i32 1
  %85 = load i32* %age, align 4, !tbaa !3
  %86 = load i32* %const_age, align 4, !tbaa !3
  %cmp347 = icmp eq i32 %85, %86
  br i1 %cmp347, label %if.then349, label %sw.epilog

if.then349:                                       ; preds = %land.lhs.true343
  store i32 -1, i32* %age, align 4, !tbaa !3
  br label %sw.epilog

sw.bb358:                                         ; preds = %do.body
  %arrayidx360 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 3
  %rtx361 = bitcast %union.rtunion_def* %arrayidx360 to %struct.rtx_def**
  %87 = load %struct.rtx_def** %rtx361, align 8, !tbaa !0
  %call362 = tail call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %87, %struct.inline_remap* %map, i32 0) #6
  %call363 = tail call %struct.rtx_def* @emit_jump_insn(%struct.rtx_def* %call362) #6
  %arrayidx365 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 6
  %rtx366 = bitcast %union.rtunion_def* %arrayidx365 to %struct.rtx_def**
  %88 = load %struct.rtx_def** %rtx366, align 8, !tbaa !0
  %call367 = tail call fastcc %struct.rtx_def* @initial_reg_note_copy(%struct.rtx_def* %88, %struct.inline_remap* %map) #8
  %89 = getelementptr inbounds %struct.rtx_def* %call363, i64 0, i32 1, i64 6, i32 0
  %call367.c = ptrtoint %struct.rtx_def* %call367 to i64
  store i64 %call367.c, i64* %89, align 8, !tbaa !0
  %arrayidx372 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 7
  %rtx373 = bitcast %union.rtunion_def* %arrayidx372 to %struct.rtx_def**
  %90 = load %struct.rtx_def** %rtx373, align 8, !tbaa !0
  %tobool374 = icmp eq %struct.rtx_def* %90, null
  br i1 %tobool374, label %if.end392, label %if.then375

if.then375:                                       ; preds = %sw.bb358
  %arrayidx380 = getelementptr inbounds %struct.rtx_def* %90, i64 0, i32 1, i64 5
  %rtint381 = bitcast %union.rtunion_def* %arrayidx380 to i32*
  %91 = load i32* %rtint381, align 4, !tbaa !3
  %call382 = tail call %struct.rtx_def* @get_label_from_map(%struct.inline_remap* %map, i32 %91) #6
  %92 = getelementptr inbounds %struct.rtx_def* %call363, i64 0, i32 1, i64 7, i32 0
  %call382.c = ptrtoint %struct.rtx_def* %call382 to i64
  store i64 %call382.c, i64* %92, align 8, !tbaa !0
  %arrayidx390 = getelementptr inbounds %struct.rtx_def* %call382, i64 0, i32 1, i64 3
  %rtint391 = bitcast %union.rtunion_def* %arrayidx390 to i32*
  %93 = load i32* %rtint391, align 4, !tbaa !3
  %inc = add nsw i32 %93, 1
  store i32 %inc, i32* %rtint391, align 4, !tbaa !3
  %.pre1056 = load %struct.rtx_def** %rtx373, align 8, !tbaa !0
  br label %if.end392

if.end392:                                        ; preds = %sw.bb358, %if.then375
  %94 = phi %struct.rtx_def* [ null, %sw.bb358 ], [ %.pre1056, %if.then375 ]
  %notlhs = icmp ne %struct.rtx_def* %94, %start_label
  %notrhs = icmp ne %struct.rtx_def* %6, %copy_end
  %or.cond1025.not = or i1 %notrhs, %notlhs
  %brmerge = or i1 %or.cond1025.not, %tobool
  br i1 %brmerge, label %if.end427, label %if.then403

if.then403:                                       ; preds = %if.end392
  %call404 = tail call i32 @invert_jump(%struct.rtx_def* %call363, %struct.rtx_def* %exit_label, i32 0) #6
  %tobool405 = icmp eq i32 %call404, 0
  br i1 %tobool405, label %if.then406, label %if.end427

if.then406:                                       ; preds = %if.then403
  %call407 = tail call %struct.rtx_def* @gen_label_rtx() #6
  %call408 = tail call %struct.rtx_def* @gen_jump(%struct.rtx_def* %exit_label) #6
  %call409 = tail call %struct.rtx_def* @emit_jump_insn_after(%struct.rtx_def* %call408, %struct.rtx_def* %call363) #6
  %95 = getelementptr inbounds %struct.rtx_def* %call409, i64 0, i32 1, i64 7, i32 0
  store i64 %exit_label.c, i64* %95, align 8, !tbaa !0
  %96 = load i32* %rtint415, align 4, !tbaa !3
  %inc416 = add nsw i32 %96, 1
  store i32 %inc416, i32* %rtint415, align 4, !tbaa !3
  %call417 = tail call %struct.rtx_def* @emit_barrier_after(%struct.rtx_def* %call409) #6
  %call418 = tail call %struct.rtx_def* @emit_label_after(%struct.rtx_def* %call407, %struct.rtx_def* %call417) #6
  %arrayidx420 = getelementptr inbounds %struct.rtx_def* %call407, i64 0, i32 1, i64 3
  %rtint421 = bitcast %union.rtunion_def* %arrayidx420 to i32*
  store i32 0, i32* %rtint421, align 4, !tbaa !3
  %call422 = tail call i32 @redirect_jump(%struct.rtx_def* %call363, %struct.rtx_def* %call407, i32 0) #6
  %tobool423 = icmp eq i32 %call422, 0
  br i1 %tobool423, label %if.then424, label %if.end427

if.then424:                                       ; preds = %if.then406
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str13, i64 0, i64 0), i32 2134, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.copy_loop_body, i64 0, i64 0)) #7
  unreachable

if.end427:                                        ; preds = %if.end392, %if.then406, %if.then403
  tail call void @try_constants(%struct.rtx_def* %call363, %struct.inline_remap* %map) #6
  %97 = load %struct.rtx_def** %rtx373, align 8, !tbaa !0
  %tobool431 = icmp eq %struct.rtx_def* %97, null
  br i1 %tobool431, label %if.else533, label %if.then432

if.then432:                                       ; preds = %if.end427
  %98 = bitcast %struct.rtx_def* %call363 to i32*
  %bf.load433 = load i32* %98, align 8
  %bf.clear434 = and i32 %bf.load433, 65535
  %idxprom4351021 = zext i32 %bf.clear434 to i64
  %arrayidx436 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom4351021
  %99 = load i8* %arrayidx436, align 1, !tbaa !1
  %cmp438 = icmp eq i8 %99, 105
  br i1 %cmp438, label %cond.true440, label %if.else514

cond.true440:                                     ; preds = %if.then432
  %arrayidx442 = getelementptr inbounds %struct.rtx_def* %call363, i64 0, i32 1, i64 3
  %rtx443 = bitcast %union.rtunion_def* %arrayidx442 to %struct.rtx_def**
  %100 = load %struct.rtx_def** %rtx443, align 8, !tbaa !0
  %101 = bitcast %struct.rtx_def* %100 to i32*
  %bf.load444 = load i32* %101, align 8
  %bf.clear445 = and i32 %bf.load444, 65535
  %cmp446 = icmp eq i32 %bf.clear445, 47
  br i1 %cmp446, label %cond.end460, label %cond.false452

cond.false452:                                    ; preds = %cond.true440
  %call456 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %call363, %struct.rtx_def* %100) #6
  br label %cond.end460

cond.end460:                                      ; preds = %cond.true440, %cond.false452
  %cond461 = phi %struct.rtx_def* [ %call456, %cond.false452 ], [ %100, %cond.true440 ]
  %tobool462 = icmp eq %struct.rtx_def* %cond461, null
  br i1 %tobool462, label %if.else514, label %if.then463

if.then463:                                       ; preds = %cond.end460
  %arrayidx465 = getelementptr inbounds %struct.rtx_def* %cond461, i64 0, i32 1, i64 1
  %rtx466 = bitcast %union.rtunion_def* %arrayidx465 to %struct.rtx_def**
  %102 = load %struct.rtx_def** %rtx466, align 8, !tbaa !0
  %103 = bitcast %struct.rtx_def* %102 to i32*
  %bf.load467 = load i32* %103, align 8
  %bf.clear468 = and i32 %bf.load467, 65535
  switch i32 %bf.clear468, label %if.else514 [
    i32 67, label %if.then471
    i32 72, label %if.then480
  ]

if.then471:                                       ; preds = %if.then463
  %arrayidx473 = getelementptr inbounds %struct.rtx_def* %102, i64 0, i32 1, i64 0
  br label %if.end503

if.then480:                                       ; preds = %if.then463
  %arrayidx482 = getelementptr inbounds %struct.rtx_def* %102, i64 0, i32 1, i64 1
  %rtx483 = bitcast %union.rtunion_def* %arrayidx482 to %struct.rtx_def**
  %104 = load %struct.rtx_def** %rtx483, align 8, !tbaa !0
  %105 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !0
  %cmp484 = icmp eq %struct.rtx_def* %104, %105
  br i1 %cmp484, label %if.else493, label %if.then486

if.then486:                                       ; preds = %if.then480
  %arrayidx491 = getelementptr inbounds %struct.rtx_def* %104, i64 0, i32 1, i64 0
  br label %if.end503

if.else493:                                       ; preds = %if.then480
  %arrayidx495 = getelementptr inbounds %struct.rtx_def* %102, i64 0, i32 1, i64 2
  %rtx496 = bitcast %union.rtunion_def* %arrayidx495 to %struct.rtx_def**
  %106 = load %struct.rtx_def** %rtx496, align 8, !tbaa !0
  %arrayidx498 = getelementptr inbounds %struct.rtx_def* %106, i64 0, i32 1, i64 0
  br label %if.end503

if.end503:                                        ; preds = %if.then471, %if.then486, %if.else493
  %label.0.in.in = phi %union.rtunion_def* [ %arrayidx473, %if.then471 ], [ %arrayidx491, %if.then486 ], [ %arrayidx498, %if.else493 ]
  %label.0.in = bitcast %union.rtunion_def* %label.0.in.in to %struct.rtx_def**
  %label.0 = load %struct.rtx_def** %label.0.in, align 8
  %tobool504 = icmp eq %struct.rtx_def* %label.0, null
  br i1 %tobool504, label %if.else514, label %land.lhs.true505

land.lhs.true505:                                 ; preds = %if.end503
  %107 = bitcast %struct.rtx_def* %label.0 to i32*
  %bf.load506 = load i32* %107, align 8
  %bf.clear507 = and i32 %bf.load506, 65535
  %cmp508 = icmp eq i32 %bf.clear507, 36
  br i1 %cmp508, label %if.then510, label %if.else514

if.then510:                                       ; preds = %land.lhs.true505
  %108 = getelementptr inbounds %struct.rtx_def* %call363, i64 0, i32 1, i64 7, i32 0
  %label.0.c = ptrtoint %struct.rtx_def* %label.0 to i64
  store i64 %label.0.c, i64* %108, align 8, !tbaa !0
  br label %if.end525

if.else514:                                       ; preds = %land.lhs.true505, %if.end503, %if.then463, %cond.end460, %if.then432
  %109 = load %struct.rtx_def** %rtx373, align 8, !tbaa !0
  %arrayidx519 = getelementptr inbounds %struct.rtx_def* %109, i64 0, i32 1, i64 5
  %rtint520 = bitcast %union.rtunion_def* %arrayidx519 to i32*
  %110 = load i32* %rtint520, align 4, !tbaa !3
  %call521 = tail call %struct.rtx_def* @get_label_from_map(%struct.inline_remap* %map, i32 %110) #6
  %111 = getelementptr inbounds %struct.rtx_def* %call363, i64 0, i32 1, i64 7, i32 0
  %call521.c = ptrtoint %struct.rtx_def* %call521 to i64
  store i64 %call521.c, i64* %111, align 8, !tbaa !0
  br label %if.end525

if.end525:                                        ; preds = %if.else514, %if.then510
  %112 = phi %struct.rtx_def* [ %call521, %if.else514 ], [ %label.0, %if.then510 ]
  %arrayidx530 = getelementptr inbounds %struct.rtx_def* %112, i64 0, i32 1, i64 3
  %rtint531 = bitcast %union.rtunion_def* %arrayidx530 to i32*
  %113 = load i32* %rtint531, align 4, !tbaa !3
  %inc532 = add nsw i32 %113, 1
  store i32 %inc532, i32* %rtint531, align 4, !tbaa !3
  br label %if.end582

if.else533:                                       ; preds = %if.end427
  %arrayidx535 = getelementptr inbounds %struct.rtx_def* %call363, i64 0, i32 1, i64 3
  %rtx536 = bitcast %union.rtunion_def* %arrayidx535 to %struct.rtx_def**
  %114 = load %struct.rtx_def** %rtx536, align 8, !tbaa !0
  %115 = bitcast %struct.rtx_def* %114 to i32*
  %bf.load537 = load i32* %115, align 8
  %bf.clear538 = and i32 %bf.load537, 65535
  %bf.clear538.off = add i32 %bf.clear538, -44
  %switch = icmp ult i32 %bf.clear538.off, 2
  br i1 %switch, label %if.then549, label %if.end582

if.then549:                                       ; preds = %if.else533
  %cmp555 = icmp eq i32 %bf.clear538, 45
  %idxprom557 = zext i1 %cmp555 to i64
  %arrayidx559 = getelementptr inbounds %struct.rtx_def* %114, i64 0, i32 1, i64 %idxprom557
  %rtvec = bitcast %union.rtunion_def* %arrayidx559 to %struct.rtvec_def**
  %116 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !0
  %num_elem = getelementptr inbounds %struct.rtvec_def* %116, i64 0, i32 0
  %117 = load i32* %num_elem, align 4, !tbaa !3
  %cmp5621043 = icmp sgt i32 %117, 0
  br i1 %cmp5621043, label %for.body564, label %if.end582

for.body564:                                      ; preds = %if.then549, %for.body564
  %indvars.iv1052 = phi i64 [ %indvars.iv.next1053, %for.body564 ], [ 0, %if.then549 ]
  %arrayidx570 = getelementptr inbounds %struct.rtvec_def* %116, i64 0, i32 1, i64 %indvars.iv1052
  %118 = load %struct.rtx_def** %arrayidx570, align 8, !tbaa !0
  %arrayidx572 = getelementptr inbounds %struct.rtx_def* %118, i64 0, i32 1, i64 0
  %rtx573 = bitcast %union.rtunion_def* %arrayidx572 to %struct.rtx_def**
  %119 = load %struct.rtx_def** %rtx573, align 8, !tbaa !0
  %arrayidx575 = getelementptr inbounds %struct.rtx_def* %119, i64 0, i32 1, i64 3
  %rtint576 = bitcast %union.rtunion_def* %arrayidx575 to i32*
  %120 = load i32* %rtint576, align 4, !tbaa !3
  %inc577 = add nsw i32 %120, 1
  store i32 %inc577, i32* %rtint576, align 4, !tbaa !3
  %indvars.iv.next1053 = add i64 %indvars.iv1052, 1
  %lftr.wideiv1054 = trunc i64 %indvars.iv.next1053 to i32
  %exitcond1055 = icmp eq i32 %lftr.wideiv1054, %117
  br i1 %exitcond1055, label %if.end582, label %for.body564

if.end582:                                        ; preds = %if.then549, %for.body564, %if.else533, %if.end525
  %call583 = tail call i32 @any_condjump_p(%struct.rtx_def* %6) #6
  %tobool584 = icmp eq i32 %call583, 0
  br i1 %tobool584, label %sw.epilog, label %land.lhs.true585

land.lhs.true585:                                 ; preds = %if.end582
  %call586 = tail call i32 @onlyjump_p(%struct.rtx_def* %6) #6
  %tobool587 = icmp eq i32 %call586, 0
  br i1 %tobool587, label %sw.epilog, label %land.lhs.true588

land.lhs.true588:                                 ; preds = %land.lhs.true585
  %121 = load %struct.rtx_def** %last_pc_value, align 8, !tbaa !0
  %tobool589 = icmp eq %struct.rtx_def* %121, null
  br i1 %tobool589, label %sw.epilog, label %if.then590

if.then590:                                       ; preds = %land.lhs.true588
  %122 = load %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 8, !tbaa !0
  %cmp592 = icmp eq %struct.rtx_def* %121, %122
  br i1 %cmp592, label %if.then594, label %if.else596

if.then594:                                       ; preds = %if.then590
  %call595 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %call363) #6
  br label %sw.epilog

if.else596:                                       ; preds = %if.then590
  %call597 = tail call %struct.rtx_def* @emit_barrier() #6
  br label %sw.epilog

sw.bb600:                                         ; preds = %do.body
  %arrayidx602 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 3
  %rtx603 = bitcast %union.rtunion_def* %arrayidx602 to %struct.rtx_def**
  %123 = load %struct.rtx_def** %rtx603, align 8, !tbaa !0
  %call604 = tail call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %123, %struct.inline_remap* %map, i32 0) #6
  %call605 = tail call %struct.rtx_def* @emit_call_insn(%struct.rtx_def* %call604) #6
  %arrayidx607 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 6
  %rtx608 = bitcast %union.rtunion_def* %arrayidx607 to %struct.rtx_def**
  %124 = load %struct.rtx_def** %rtx608, align 8, !tbaa !0
  %call609 = tail call fastcc %struct.rtx_def* @initial_reg_note_copy(%struct.rtx_def* %124, %struct.inline_remap* %map) #8
  %125 = getelementptr inbounds %struct.rtx_def* %call605, i64 0, i32 1, i64 6, i32 0
  %call609.c = ptrtoint %struct.rtx_def* %call609 to i64
  store i64 %call609.c, i64* %125, align 8, !tbaa !0
  %bf.load613 = load i32* %7, align 8
  %bf.clear615 = and i32 %bf.load613, 16777216
  %126 = bitcast %struct.rtx_def* %call605 to i32*
  %bf.load616 = load i32* %126, align 8
  %bf.clear617 = and i32 %bf.load616, -16777217
  %bf.set = or i32 %bf.clear617, %bf.clear615
  store i32 %bf.set, i32* %126, align 8
  %arrayidx619 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 7
  %rtx620 = bitcast %union.rtunion_def* %arrayidx619 to %struct.rtx_def**
  %127 = load %struct.rtx_def** %rtx620, align 8, !tbaa !0
  %call621 = tail call %struct.rtx_def* @copy_rtx_and_substitute(%struct.rtx_def* %127, %struct.inline_remap* %map, i32 0) #6
  %128 = getelementptr inbounds %struct.rtx_def* %call605, i64 0, i32 1, i64 7, i32 0
  %call621.c = ptrtoint %struct.rtx_def* %call621 to i64
  store i64 %call621.c, i64* %128, align 8, !tbaa !0
  tail call void @try_constants(%struct.rtx_def* %call605, %struct.inline_remap* %map) #6
  br label %for.body628

for.body628:                                      ; preds = %for.body628, %sw.bb600
  %indvars.iv = phi i64 [ 0, %sw.bb600 ], [ %indvars.iv.next, %for.body628 ]
  %129 = load %struct.varray_head_tag** %const_equiv_varray, align 8, !tbaa !0
  %rtx634 = getelementptr inbounds %struct.varray_head_tag* %129, i64 0, i32 4, i32 0, i64 %indvars.iv, i32 0
  store %struct.rtx_def* null, %struct.rtx_def** %rtx634, align 8, !tbaa !0
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 53
  br i1 %exitcond, label %sw.epilog, label %for.body628

sw.bb638:                                         ; preds = %do.body
  %cmp639 = icmp eq %struct.rtx_def* %6, %start_label
  br i1 %cmp639, label %sw.epilog, label %if.then641

if.then641:                                       ; preds = %sw.bb638
  %arrayidx643 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 5
  %rtint644 = bitcast %union.rtunion_def* %arrayidx643 to i32*
  %130 = load i32* %rtint644, align 4, !tbaa !3
  %call645 = tail call %struct.rtx_def* @get_label_from_map(%struct.inline_remap* %map, i32 %130) #6
  %call646 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %call645) #6
  %131 = load i32* %const_age, align 4, !tbaa !3
  %inc648 = add i32 %131, 1
  store i32 %inc648, i32* %const_age, align 4, !tbaa !3
  br label %sw.epilog

sw.bb650:                                         ; preds = %do.body
  %call651 = tail call %struct.rtx_def* @emit_barrier() #6
  br label %sw.epilog

sw.bb652:                                         ; preds = %do.body
  %arrayidx654 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 4
  %rtint655 = bitcast %union.rtunion_def* %arrayidx654 to i32*
  %132 = load i32* %rtint655, align 4, !tbaa !3
  switch i32 %132, label %if.then687 [
    i32 -99, label %sw.epilog
    i32 -88, label %sw.epilog
    i32 -80, label %sw.epilog
    i32 -93, label %lor.lhs.false682
    i32 -94, label %lor.lhs.false682
  ]

lor.lhs.false682:                                 ; preds = %sw.bb652, %sw.bb652
  br i1 %or.cond, label %sw.epilog, label %if.then687

if.then687:                                       ; preds = %lor.lhs.false682, %sw.bb652
  %arrayidx689 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 3
  %rtstr = bitcast %union.rtunion_def* %arrayidx689 to i8**
  %133 = load i8** %rtstr, align 8, !tbaa !0
  %call693 = tail call %struct.rtx_def* @emit_note(i8* %133, i32 %132) #6
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str13, i64 0, i64 0), i32 2280, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.copy_loop_body, i64 0, i64 0)) #7
  unreachable

sw.epilog:                                        ; preds = %for.body628, %sw.bb652, %sw.bb652, %sw.bb652, %lor.lhs.false682, %land.lhs.true588, %land.lhs.true585, %if.end582, %sw.bb638, %if.then687, %if.then641, %if.else596, %if.then594, %if.end323, %if.then349, %land.lhs.true343, %if.then332, %sw.bb650
  %copy.2 = phi %struct.rtx_def* [ %call693, %if.then687 ], [ %call651, %sw.bb650 ], [ %call646, %if.then641 ], [ %copy.0, %sw.bb638 ], [ null, %if.then594 ], [ %call363, %if.else596 ], [ %call363, %land.lhs.true588 ], [ %call363, %land.lhs.true585 ], [ %call363, %if.end582 ], [ %copy.1, %if.then349 ], [ %copy.1, %land.lhs.true343 ], [ %copy.1, %if.then332 ], [ %copy.1, %if.end323 ], [ null, %lor.lhs.false682 ], [ null, %sw.bb652 ], [ null, %sw.bb652 ], [ null, %sw.bb652 ], [ %call605, %for.body628 ]
  %arrayidx697 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtint698 = bitcast %union.rtunion_def* %arrayidx697 to i32*
  %134 = load i32* %rtint698, align 4, !tbaa !3
  %idxprom699 = sext i32 %134 to i64
  %135 = load %struct.rtx_def*** %insn_map, align 8, !tbaa !0
  %arrayidx700 = getelementptr inbounds %struct.rtx_def** %135, i64 %idxprom699
  store %struct.rtx_def* %copy.2, %struct.rtx_def** %arrayidx700, align 8, !tbaa !0
  %cmp701 = icmp eq %struct.rtx_def* %6, %copy_end
  br i1 %cmp701, label %do.body703, label %do.body

do.body703:                                       ; preds = %sw.epilog, %do.cond740
  %insn.1 = phi %struct.rtx_def* [ %136, %do.cond740 ], [ %copy_start, %sw.epilog ]
  %arrayidx705 = getelementptr inbounds %struct.rtx_def* %insn.1, i64 0, i32 1, i64 2
  %rtx706 = bitcast %union.rtunion_def* %arrayidx705 to %struct.rtx_def**
  %136 = load %struct.rtx_def** %rtx706, align 8, !tbaa !0
  %137 = bitcast %struct.rtx_def* %136 to i32*
  %bf.load707 = load i32* %137, align 8
  %bf.clear708 = and i32 %bf.load707, 65535
  %bf.clear708.off = add i32 %bf.clear708, -32
  %switch1028 = icmp ult i32 %bf.clear708.off, 3
  br i1 %switch1028, label %land.lhs.true721, label %do.cond740

land.lhs.true721:                                 ; preds = %do.body703
  %arrayidx723 = getelementptr inbounds %struct.rtx_def* %136, i64 0, i32 1, i64 0
  %rtint724 = bitcast %union.rtunion_def* %arrayidx723 to i32*
  %138 = load i32* %rtint724, align 4, !tbaa !3
  %idxprom725 = sext i32 %138 to i64
  %139 = load %struct.rtx_def*** %insn_map, align 8, !tbaa !0
  %arrayidx727 = getelementptr inbounds %struct.rtx_def** %139, i64 %idxprom725
  %140 = load %struct.rtx_def** %arrayidx727, align 8, !tbaa !0
  %tobool728 = icmp eq %struct.rtx_def* %140, null
  br i1 %tobool728, label %do.cond740, label %if.then729

if.then729:                                       ; preds = %land.lhs.true721
  %arrayidx737 = getelementptr inbounds %struct.rtx_def* %140, i64 0, i32 1, i64 6
  %rtx738 = bitcast %union.rtunion_def* %arrayidx737 to %struct.rtx_def**
  %141 = load %struct.rtx_def** %rtx738, align 8, !tbaa !0
  %tobool3839.i = icmp eq %struct.rtx_def* %141, null
  br i1 %tobool3839.i, label %do.cond740, label %while.body.lr.ph.i

while.body.lr.ph.i:                               ; preds = %if.then729, %if.end24.i
  %142 = phi %struct.rtx_def* [ %151, %if.end24.i ], [ %141, %if.then729 ]
  %notesp.addr.0.ph40.i = phi %struct.rtx_def** [ %rtx27.i, %if.end24.i ], [ %rtx738, %if.then729 ]
  br label %while.body.i

while.body.i:                                     ; preds = %if.then4.i, %while.body.lr.ph.i
  %143 = phi %struct.rtx_def* [ %142, %while.body.lr.ph.i ], [ %145, %if.then4.i ]
  %144 = bitcast %struct.rtx_def* %143 to i32*
  %bf.load.i = load i32* %144, align 8
  %bf.clear.i = and i32 %bf.load.i, 65535
  %cmp.i = icmp eq i32 %bf.clear.i, 4
  br i1 %cmp.i, label %if.then.i, label %if.end24.i

if.then.i:                                        ; preds = %while.body.i
  %bf.lshr.i = lshr i32 %bf.load.i, 16
  %bf.clear2.i = and i32 %bf.lshr.i, 255
  %cmp3.i = icmp eq i32 %bf.clear2.i, 5
  %fld.i = getelementptr inbounds %struct.rtx_def* %143, i64 0, i32 1
  br i1 %cmp3.i, label %if.then4.i, label %if.else.i

if.then4.i:                                       ; preds = %if.then.i
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %143, i64 0, i32 1, i64 1
  %rtx.i = bitcast %union.rtunion_def* %arrayidx.i to %struct.rtx_def**
  %145 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !0
  store %struct.rtx_def* %145, %struct.rtx_def** %notesp.addr.0.ph40.i, align 8, !tbaa !0
  %tobool.i = icmp eq %struct.rtx_def* %145, null
  br i1 %tobool.i, label %do.cond740, label %while.body.i

if.else.i:                                        ; preds = %if.then.i
  %rtx7.i = bitcast [1 x %union.rtunion_def]* %fld.i to %struct.rtx_def**
  %146 = load %struct.rtx_def** %rtx7.i, align 8, !tbaa !0
  %arrayidx9.i = getelementptr inbounds %struct.rtx_def* %146, i64 0, i32 1, i64 0
  %rtint.i = bitcast %union.rtunion_def* %arrayidx9.i to i32*
  %147 = load i32* %rtint.i, align 4, !tbaa !3
  %idxprom.i = sext i32 %147 to i64
  %148 = load %struct.rtx_def*** %insn_map, align 8, !tbaa !0
  %arrayidx10.i = getelementptr inbounds %struct.rtx_def** %148, i64 %idxprom.i
  %149 = load %struct.rtx_def** %arrayidx10.i, align 8, !tbaa !0
  %tobool11.i = icmp eq %struct.rtx_def* %149, null
  br i1 %tobool11.i, label %if.then12.i, label %if.else18.i

if.then12.i:                                      ; preds = %if.else.i
  %cmp16.i = icmp eq i32 %bf.clear2.i, 13
  br i1 %cmp16.i, label %if.end24.i, label %if.then17.i

if.then17.i:                                      ; preds = %if.then12.i
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str13, i64 0, i64 0), i32 1762, i8* getelementptr inbounds ([20 x i8]* @__FUNCTION__.final_reg_note_copy, i64 0, i64 0)) #7
  unreachable

if.else18.i:                                      ; preds = %if.else.i
  %150 = getelementptr inbounds [1 x %union.rtunion_def]* %fld.i, i64 0, i64 0, i32 0
  %.c.i = ptrtoint %struct.rtx_def* %149 to i64
  store i64 %.c.i, i64* %150, align 8, !tbaa !0
  br label %if.end24.i

if.end24.i:                                       ; preds = %while.body.i, %if.else18.i, %if.then12.i
  %arrayidx26.i = getelementptr inbounds %struct.rtx_def* %143, i64 0, i32 1, i64 1
  %rtx27.i = bitcast %union.rtunion_def* %arrayidx26.i to %struct.rtx_def**
  %151 = load %struct.rtx_def** %rtx27.i, align 8, !tbaa !0
  %tobool38.i = icmp eq %struct.rtx_def* %151, null
  br i1 %tobool38.i, label %do.cond740, label %while.body.lr.ph.i

do.cond740:                                       ; preds = %if.end24.i, %if.then4.i, %if.then729, %do.body703, %land.lhs.true721
  %cmp741 = icmp eq %struct.rtx_def* %136, %copy_end
  br i1 %cmp741, label %do.end743, label %do.body703

do.end743:                                        ; preds = %do.cond740
  %cmp7471035 = icmp eq %struct.rtx_def* %copy_notes_from, %loop_end
  %or.cond1057 = or i1 %tobool, %cmp7471035
  br i1 %or.cond1057, label %if.end786, label %for.body749

for.body749:                                      ; preds = %do.end743, %for.inc781
  %insn.21036 = phi %struct.rtx_def* [ %155, %for.inc781 ], [ %copy_notes_from, %do.end743 ]
  %152 = bitcast %struct.rtx_def* %insn.21036 to i32*
  %bf.load750 = load i32* %152, align 8
  %bf.clear751 = and i32 %bf.load750, 65535
  %cmp752 = icmp eq i32 %bf.clear751, 37
  br i1 %cmp752, label %land.lhs.true754, label %for.inc781

land.lhs.true754:                                 ; preds = %for.body749
  %arrayidx756 = getelementptr inbounds %struct.rtx_def* %insn.21036, i64 0, i32 1, i64 4
  %rtint757 = bitcast %union.rtunion_def* %arrayidx756 to i32*
  %153 = load i32* %rtint757, align 4, !tbaa !3
  switch i32 %153, label %if.then772 [
    i32 -99, label %for.inc781
    i32 -80, label %for.inc781
    i32 -93, label %for.inc781
  ]

if.then772:                                       ; preds = %land.lhs.true754
  %arrayidx774 = getelementptr inbounds %struct.rtx_def* %insn.21036, i64 0, i32 1, i64 3
  %rtstr775 = bitcast %union.rtunion_def* %arrayidx774 to i8**
  %154 = load i8** %rtstr775, align 8, !tbaa !0
  %call779 = tail call %struct.rtx_def* @emit_note(i8* %154, i32 %153) #6
  br label %for.inc781

for.inc781:                                       ; preds = %land.lhs.true754, %land.lhs.true754, %land.lhs.true754, %for.body749, %if.then772
  %arrayidx783 = getelementptr inbounds %struct.rtx_def* %insn.21036, i64 0, i32 1, i64 2
  %rtx784 = bitcast %union.rtunion_def* %arrayidx783 to %struct.rtx_def**
  %155 = load %struct.rtx_def** %rtx784, align 8, !tbaa !0
  %cmp747 = icmp eq %struct.rtx_def* %155, %loop_end
  br i1 %cmp747, label %if.end786, label %for.body749

if.end786:                                        ; preds = %for.inc781, %do.end743
  %tobool787 = icmp eq %struct.rtx_def* %final_label.0, null
  br i1 %tobool787, label %if.end796, label %land.lhs.true788

land.lhs.true788:                                 ; preds = %if.end786
  %arrayidx790 = getelementptr inbounds %struct.rtx_def* %final_label.0, i64 0, i32 1, i64 3
  %rtint791 = bitcast %union.rtunion_def* %arrayidx790 to i32*
  %156 = load i32* %rtint791, align 4, !tbaa !3
  %cmp792 = icmp sgt i32 %156, 0
  br i1 %cmp792, label %if.then794, label %if.end796

if.then794:                                       ; preds = %land.lhs.true788
  %call795 = tail call %struct.rtx_def* @emit_label(%struct.rtx_def* %final_label.0) #6
  br label %if.end796

if.end796:                                        ; preds = %if.end786, %if.then794, %land.lhs.true788
  %call797 = tail call %struct.rtx_def* @gen_sequence() #6
  tail call void @end_sequence() #6
  %call798 = tail call %struct.rtx_def* @loop_insn_emit_before(%struct.loop* %loop, %struct.basic_block_def* null, %struct.rtx_def* %insert_before, %struct.rtx_def* %call797) #6
  ret void
}
