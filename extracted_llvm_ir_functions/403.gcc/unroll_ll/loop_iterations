define i64 @loop_iterations(%struct.loop* %loop) #0 {
entry:
  %aux = getelementptr inbounds %struct.loop* %loop, i64 0, i32 22
  %0 = load i8** %aux, align 8, !tbaa !0
  %ivs2 = getelementptr inbounds i8* %0, i64 208
  %n_iterations = getelementptr inbounds i8* %0, i64 96
  %1 = bitcast i8* %n_iterations to i64*
  store i64 0, i64* %1, align 8, !tbaa !4
  %initial_value3 = getelementptr inbounds i8* %0, i64 32
  %2 = bitcast i8* %initial_value3 to %struct.rtx_def**
  %initial_equiv_value = getelementptr inbounds i8* %0, i64 56
  %3 = bitcast i8* %initial_equiv_value to %struct.rtx_def**
  %comparison_value4 = getelementptr inbounds i8* %0, i64 40
  %4 = bitcast i8* %comparison_value4 to %struct.rtx_def**
  %final_value5 = getelementptr inbounds i8* %0, i64 48
  %5 = bitcast i8* %final_value5 to %struct.rtx_def**
  %final_equiv_value = getelementptr inbounds i8* %0, i64 64
  %6 = bitcast i8* %final_equiv_value to %struct.rtx_def**
  %increment6 = getelementptr inbounds i8* %0, i64 80
  %7 = bitcast i8* %increment6 to %struct.rtx_def**
  %iteration_var7 = getelementptr inbounds i8* %0, i64 72
  %8 = bitcast i8* %iteration_var7 to %struct.rtx_def**
  %unroll_number = getelementptr inbounds i8* %0, i64 104
  %9 = bitcast i8* %unroll_number to i32*
  call void @llvm.memset.p0i8.i64(i8* %initial_value3, i8 0, i64 56, i32 8, i1 false)
  store i32 1, i32* %9, align 4, !tbaa !3
  %iv = getelementptr inbounds i8* %0, i64 112
  %10 = bitcast i8* %iv to %struct.iv_class**
  store %struct.iv_class* null, %struct.iv_class** %10, align 8, !tbaa !0
  %end = getelementptr inbounds %struct.loop* %loop, i64 0, i32 27
  %11 = load %struct.rtx_def** %end, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %struct.rtx_def* %11, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load = load i32* %13, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 33
  br i1 %cmp, label %if.end9, label %if.then

if.then:                                          ; preds = %entry
  %14 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool = icmp eq %struct._IO_FILE* %14, null
  br i1 %tobool, label %return, label %if.then8

if.then8:                                         ; preds = %if.then
  %15 = tail call i64 @fwrite(i8* getelementptr inbounds ([53 x i8]* @.str36, i64 0, i64 0), i64 52, i64 1, %struct._IO_FILE* %14)
  br label %return

if.end9:                                          ; preds = %entry
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 7
  %rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx12, align 8, !tbaa !0
  %arrayidx14 = getelementptr inbounds %struct.rtx_def* %16, i64 0, i32 1, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx14 to i32*
  %17 = load i32* %rtint, align 4, !tbaa !3
  %cmp15 = icmp sgt i32 %17, 1
  br i1 %cmp15, label %if.then16, label %if.end21

if.then16:                                        ; preds = %if.end9
  %18 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool17 = icmp eq %struct._IO_FILE* %18, null
  br i1 %tobool17, label %return, label %if.then18

if.then18:                                        ; preds = %if.then16
  %19 = tail call i64 @fwrite(i8* getelementptr inbounds ([48 x i8]* @.str37, i64 0, i64 0), i64 47, i64 1, %struct._IO_FILE* %18)
  br label %return

if.end21:                                         ; preds = %if.end9
  %top = getelementptr inbounds %struct.loop* %loop, i64 0, i32 28
  %20 = load %struct.rtx_def** %top, align 8, !tbaa !0
  %tobool22 = icmp eq %struct.rtx_def* %20, null
  br i1 %tobool22, label %if.end128, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end21
  %cont = getelementptr inbounds %struct.loop* %loop, i64 0, i32 24
  %21 = load %struct.rtx_def** %cont, align 8, !tbaa !0
  %tobool23 = icmp eq %struct.rtx_def* %21, null
  br i1 %tobool23, label %if.end128, label %if.then24

if.then24:                                        ; preds = %land.lhs.true
  %arrayidx26 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 1
  %rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %22 = load %struct.rtx_def** %rtx27, align 8, !tbaa !0
  %23 = load i32* @max_uid_for_loop, align 4, !tbaa !3
  %24 = load i32** @uid_luid, align 8, !tbaa !0
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then24
  %temp.0 = phi %struct.rtx_def* [ %22, %if.then24 ], [ %37, %do.cond ]
  %25 = bitcast %struct.rtx_def* %temp.0 to i32*
  %bf.load28 = load i32* %25, align 8
  %bf.clear29 = and i32 %bf.load28, 65535
  %cmp30 = icmp eq i32 %bf.clear29, 33
  br i1 %cmp30, label %if.then31, label %do.cond

if.then31:                                        ; preds = %do.body
  %arrayidx33 = getelementptr inbounds %struct.rtx_def* %temp.0, i64 0, i32 1, i64 7
  %rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**
  %26 = load %struct.rtx_def** %rtx34, align 8, !tbaa !0
  %cmp35 = icmp eq %struct.rtx_def* %26, null
  br i1 %cmp35, label %if.then36, label %if.end41

if.then36:                                        ; preds = %if.then31
  %27 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool37 = icmp eq %struct._IO_FILE* %27, null
  br i1 %tobool37, label %return, label %if.then38

if.then38:                                        ; preds = %if.then36
  %28 = tail call i64 @fwrite(i8* getelementptr inbounds ([49 x i8]* @.str38, i64 0, i64 0), i64 48, i64 1, %struct._IO_FILE* %27)
  br label %return

if.end41:                                         ; preds = %if.then31
  %arrayidx46 = getelementptr inbounds %struct.rtx_def* %26, i64 0, i32 1, i64 0
  %rtint47 = bitcast %union.rtunion_def* %arrayidx46 to i32*
  %29 = load i32* %rtint47, align 4, !tbaa !3
  %cmp48 = icmp slt i32 %29, %23
  br i1 %cmp48, label %cond.true, label %do.cond

cond.true:                                        ; preds = %if.end41
  %idxprom = sext i32 %29 to i64
  %arrayidx63 = getelementptr inbounds i32* %24, i64 %idxprom
  %30 = load i32* %arrayidx63, align 4, !tbaa !3
  %arrayidx66 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 1, i64 0
  %rtint67 = bitcast %union.rtunion_def* %arrayidx66 to i32*
  %31 = load i32* %rtint67, align 4, !tbaa !3
  %cmp68 = icmp slt i32 %31, %23
  br i1 %cmp68, label %cond.true69, label %cond.false76

cond.true69:                                      ; preds = %cond.true
  %idxprom74 = sext i32 %31 to i64
  %arrayidx75 = getelementptr inbounds i32* %24, i64 %idxprom74
  %32 = load i32* %arrayidx75, align 4, !tbaa !3
  %cmp79 = icmp sgt i32 %30, %32
  br i1 %cmp79, label %cond.true88, label %do.cond

cond.false76:                                     ; preds = %cond.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str13, i64 0, i64 0), i32 3601, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.loop_iterations, i64 0, i64 0)) #7
  unreachable

cond.true88:                                      ; preds = %cond.true69
  %arrayidx102 = getelementptr inbounds %struct.rtx_def* %21, i64 0, i32 1, i64 0
  %rtint103 = bitcast %union.rtunion_def* %arrayidx102 to i32*
  %33 = load i32* %rtint103, align 4, !tbaa !3
  %cmp104 = icmp slt i32 %33, %23
  br i1 %cmp104, label %cond.true105, label %cond.false112

cond.true105:                                     ; preds = %cond.true88
  %idxprom110 = sext i32 %33 to i64
  %arrayidx111 = getelementptr inbounds i32* %24, i64 %idxprom110
  %34 = load i32* %arrayidx111, align 4, !tbaa !3
  %cmp115 = icmp slt i32 %30, %34
  br i1 %cmp115, label %if.then116, label %do.cond

cond.false112:                                    ; preds = %cond.true88
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str13, i64 0, i64 0), i32 3602, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.loop_iterations, i64 0, i64 0)) #7
  unreachable

if.then116:                                       ; preds = %cond.true105
  %35 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool117 = icmp eq %struct._IO_FILE* %35, null
  br i1 %tobool117, label %return, label %if.then118

if.then118:                                       ; preds = %if.then116
  %36 = tail call i64 @fwrite(i8* getelementptr inbounds ([48 x i8]* @.str37, i64 0, i64 0), i64 47, i64 1, %struct._IO_FILE* %35)
  br label %return

do.cond:                                          ; preds = %do.body, %cond.true105, %cond.true69, %if.end41
  %arrayidx124 = getelementptr inbounds %struct.rtx_def* %temp.0, i64 0, i32 1, i64 1
  %rtx125 = bitcast %union.rtunion_def* %arrayidx124 to %struct.rtx_def**
  %37 = load %struct.rtx_def** %rtx125, align 8, !tbaa !0
  %cmp127 = icmp eq %struct.rtx_def* %37, %21
  br i1 %cmp127, label %if.end128, label %do.body

if.end128:                                        ; preds = %do.cond, %land.lhs.true, %if.end21
  %call129 = tail call %struct.rtx_def* @get_condition_for_loop(%struct.loop* %loop, %struct.rtx_def* %12) #6
  %cmp130 = icmp eq %struct.rtx_def* %call129, null
  br i1 %cmp130, label %if.then131, label %if.end136

if.then131:                                       ; preds = %if.end128
  %38 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool132 = icmp eq %struct._IO_FILE* %38, null
  br i1 %tobool132, label %return, label %if.then133

if.then133:                                       ; preds = %if.then131
  %39 = tail call i64 @fwrite(i8* getelementptr inbounds ([45 x i8]* @.str39, i64 0, i64 0), i64 44, i64 1, %struct._IO_FILE* %38)
  br label %return

if.end136:                                        ; preds = %if.end128
  %40 = bitcast %struct.rtx_def* %call129 to i32*
  %bf.load137 = load i32* %40, align 8
  %bf.clear138 = and i32 %bf.load137, 65535
  %fld139 = getelementptr inbounds %struct.rtx_def* %call129, i64 0, i32 1
  %rtx141 = bitcast [1 x %union.rtunion_def]* %fld139 to %struct.rtx_def**
  %41 = load %struct.rtx_def** %rtx141, align 8, !tbaa !0
  %arrayidx143 = getelementptr inbounds %struct.rtx_def* %call129, i64 0, i32 1, i64 1
  %rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**
  %42 = load %struct.rtx_def** %rtx144, align 8, !tbaa !0
  %43 = bitcast %struct.rtx_def* %41 to i32*
  %bf.load145 = load i32* %43, align 8
  %bf.clear146 = and i32 %bf.load145, 65535
  %cmp147 = icmp eq i32 %bf.clear146, 61
  br i1 %cmp147, label %if.end153, label %if.then148

if.then148:                                       ; preds = %if.end136
  %44 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool149 = icmp eq %struct._IO_FILE* %44, null
  br i1 %tobool149, label %return, label %if.then150

if.then150:                                       ; preds = %if.then148
  %45 = tail call i64 @fwrite(i8* getelementptr inbounds ([51 x i8]* @.str40, i64 0, i64 0), i64 50, i64 1, %struct._IO_FILE* %44)
  br label %return

if.end153:                                        ; preds = %if.end136
  %arrayidx155 = getelementptr inbounds %struct.rtx_def* %41, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx155 to i32*
  %46 = load i32* %rtuint, align 4, !tbaa !3
  %n_regs = getelementptr inbounds i8* %0, i64 216
  %47 = bitcast i8* %n_regs to i32*
  %48 = load i32* %47, align 4, !tbaa !3
  %cmp156 = icmp ult i32 %46, %48
  br i1 %cmp156, label %if.end162, label %land.lhs.true157

land.lhs.true157:                                 ; preds = %if.end153
  %bf.clear159 = and i32 %bf.load145, 134217728
  %tobool160 = icmp eq i32 %bf.clear159, 0
  br i1 %tobool160, label %if.then161, label %if.end162

if.then161:                                       ; preds = %land.lhs.true157
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str13, i64 0, i64 0), i32 3651, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.loop_iterations, i64 0, i64 0)) #7
  unreachable

if.end162:                                        ; preds = %land.lhs.true157, %if.end153
  %cmp167 = icmp ult i32 %46, %48
  br i1 %cmp167, label %if.else, label %if.then168

if.then168:                                       ; preds = %if.end162
  %49 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool169 = icmp eq %struct._IO_FILE* %49, null
  br i1 %tobool169, label %return, label %if.then170

if.then170:                                       ; preds = %if.then168
  %50 = tail call i64 @fwrite(i8* getelementptr inbounds ([58 x i8]* @.str41, i64 0, i64 0), i64 57, i64 1, %struct._IO_FILE* %49)
  br label %return

if.else:                                          ; preds = %if.end162
  %bf.lshr174 = lshr i32 %bf.load145, 16
  %bf.clear175 = and i32 %bf.lshr174, 255
  %idxprom176882 = zext i32 %bf.clear175 to i64
  %arrayidx177 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom176882
  %51 = load i16* %arrayidx177, align 2, !tbaa !10
  %cmp178 = icmp ugt i16 %51, 64
  br i1 %cmp178, label %if.then180, label %if.else185

if.then180:                                       ; preds = %if.else
  %52 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool181 = icmp eq %struct._IO_FILE* %52, null
  br i1 %tobool181, label %return, label %if.then182

if.then182:                                       ; preds = %if.then180
  %53 = tail call i64 @fwrite(i8* getelementptr inbounds ([65 x i8]* @.str42, i64 0, i64 0), i64 64, i64 1, %struct._IO_FILE* %52)
  br label %return

if.else185:                                       ; preds = %if.else
  %arrayidx190 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom176882
  %54 = load i32* %arrayidx190, align 4, !tbaa !8
  %cmp191 = icmp eq i32 %54, 1
  br i1 %cmp191, label %if.else198, label %if.then193

if.then193:                                       ; preds = %if.else185
  %55 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool194 = icmp eq %struct._IO_FILE* %55, null
  br i1 %tobool194, label %return, label %if.then195

if.then195:                                       ; preds = %if.then193
  %56 = tail call i64 @fwrite(i8* getelementptr inbounds ([48 x i8]* @.str43, i64 0, i64 0), i64 47, i64 1, %struct._IO_FILE* %55)
  br label %return

if.else198:                                       ; preds = %if.else185
  %idxprom202 = zext i32 %46 to i64
  %regs = bitcast i8* %ivs2 to %struct.iv**
  %57 = load %struct.iv** %regs, align 8, !tbaa !0
  %type = getelementptr inbounds %struct.iv* %57, i64 %idxprom202, i32 0
  %58 = load i32* %type, align 4, !tbaa !9
  switch i32 %58, label %if.else335 [
    i32 1, label %if.end214
    i32 3, label %if.then250
  ]

if.end214:                                        ; preds = %if.else198
  %class = getelementptr inbounds %struct.iv* %57, i64 %idxprom202, i32 1, i32 0
  %59 = load %struct.iv_class** %class, align 8, !tbaa !0
  %biv = getelementptr inbounds %struct.iv_class* %59, i64 0, i32 2
  %60 = load %struct.induction** %biv, align 8, !tbaa !0
  %always_executed = getelementptr inbounds %struct.induction* %60, i64 0, i32 13
  %61 = bitcast [2 x i8]* %always_executed to i16*
  %bf.load223 = load i16* %61, align 4
  %62 = and i16 %bf.load223, 48
  %63 = icmp eq i16 %62, 16
  br i1 %63, label %if.end238, label %if.then233

if.then233:                                       ; preds = %if.end214
  %64 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool234 = icmp eq %struct._IO_FILE* %64, null
  br i1 %tobool234, label %return, label %if.then235

if.then235:                                       ; preds = %if.then233
  %65 = tail call i64 @fwrite(i8* getelementptr inbounds ([70 x i8]* @.str44, i64 0, i64 0), i64 69, i64 1, %struct._IO_FILE* %64)
  br label %return

if.end238:                                        ; preds = %if.end214
  %initial_value222 = getelementptr inbounds %struct.iv_class* %59, i64 0, i32 6
  %66 = load %struct.rtx_def** %initial_value222, align 8, !tbaa !0
  %call239 = tail call %struct.rtx_def* @biv_total_increment(%struct.iv_class* %59) #8
  br label %if.end344

if.then250:                                       ; preds = %if.else198
  %iv257 = getelementptr inbounds %struct.iv* %57, i64 %idxprom202, i32 1
  %info = bitcast %union.anon* %iv257 to %struct.induction**
  %67 = load %struct.induction** %info, align 8, !tbaa !0
  %src_reg = getelementptr inbounds %struct.induction* %67, i64 0, i32 2
  %68 = load %struct.rtx_def** %src_reg, align 8, !tbaa !0
  %arrayidx259 = getelementptr inbounds %struct.rtx_def* %68, i64 0, i32 1, i64 0
  %rtuint260 = bitcast %union.rtunion_def* %arrayidx259 to i32*
  %69 = load i32* %rtuint260, align 4, !tbaa !3
  %cmp262 = icmp ult i32 %69, %48
  br i1 %cmp262, label %if.end265, label %if.then264

if.then264:                                       ; preds = %if.then250
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str13, i64 0, i64 0), i32 3718, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.loop_iterations, i64 0, i64 0)) #7
  unreachable

if.end265:                                        ; preds = %if.then250
  %always_executed266 = getelementptr inbounds %struct.induction* %67, i64 0, i32 13
  %70 = bitcast [2 x i8]* %always_executed266 to i16*
  %bf.load267 = load i16* %70, align 4
  %71 = and i16 %bf.load267, 48
  %72 = icmp eq i16 %71, 16
  br i1 %72, label %if.end284, label %if.then279

if.then279:                                       ; preds = %if.end265
  %73 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool280 = icmp eq %struct._IO_FILE* %73, null
  br i1 %tobool280, label %return, label %if.then281

if.then281:                                       ; preds = %if.then279
  %74 = tail call i64 @fwrite(i8* getelementptr inbounds ([72 x i8]* @.str45, i64 0, i64 0), i64 71, i64 1, %struct._IO_FILE* %73)
  br label %return

if.end284:                                        ; preds = %if.end265
  %idxprom289 = zext i32 %69 to i64
  %class293 = getelementptr inbounds %struct.iv* %57, i64 %idxprom289, i32 1, i32 0
  %75 = load %struct.iv_class** %class293, align 8, !tbaa !0
  %call294 = tail call %struct.rtx_def* @biv_total_increment(%struct.iv_class* %75) #8
  %tobool295 = icmp eq %struct.rtx_def* %call294, null
  br i1 %tobool295, label %if.end323, label %if.then296

if.then296:                                       ; preds = %if.end284
  %mult_val = getelementptr inbounds %struct.induction* %67, i64 0, i32 8
  %76 = load %struct.rtx_def** %mult_val, align 8, !tbaa !0
  %call297 = tail call %struct.rtx_def* @extend_value_for_giv(%struct.induction* %67, %struct.rtx_def* %call294) #6
  %77 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %mode = getelementptr inbounds %struct.induction* %67, i64 0, i32 6
  %78 = load i32* %mode, align 4, !tbaa !6
  %call298 = tail call fastcc %struct.rtx_def* @fold_rtx_mult_add(%struct.rtx_def* %76, %struct.rtx_def* %call297, %struct.rtx_def* %77, i32 %78) #8
  %biv299 = getelementptr inbounds %struct.iv_class* %75, i64 0, i32 2
  %biv_inc.0889 = load %struct.induction** %biv299, align 8
  %tobool300890 = icmp eq %struct.induction* %biv_inc.0889, null
  br i1 %tobool300890, label %if.end323, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.then296
  %insn = getelementptr inbounds %struct.induction* %67, i64 0, i32 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %biv_inc.0892 = phi %struct.induction* [ %biv_inc.0889, %for.body.lr.ph ], [ %biv_inc.0, %for.inc ]
  %offset.0891 = phi i64 [ 0, %for.body.lr.ph ], [ %offset.1, %for.inc ]
  %79 = load %struct.rtx_def** %insn, align 8, !tbaa !0
  %insn301 = getelementptr inbounds %struct.induction* %biv_inc.0892, i64 0, i32 0
  %80 = load %struct.rtx_def** %insn301, align 8, !tbaa !0
  %call302 = tail call i32 @loop_insn_first_p(%struct.rtx_def* %79, %struct.rtx_def* %80) #6
  %tobool303 = icmp eq i32 %call302, 0
  br i1 %tobool303, label %for.inc, label %if.then304

if.then304:                                       ; preds = %for.body
  %add_val = getelementptr inbounds %struct.induction* %biv_inc.0892, i64 0, i32 9
  %81 = load %struct.rtx_def** %add_val, align 8, !tbaa !0
  %82 = bitcast %struct.rtx_def* %81 to i32*
  %bf.load305 = load i32* %82, align 8
  %bf.clear306 = and i32 %bf.load305, 65535
  %cmp307 = icmp eq i32 %bf.clear306, 61
  br i1 %cmp307, label %if.then309, label %if.end318

if.then309:                                       ; preds = %if.then304
  %83 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool310 = icmp eq %struct._IO_FILE* %83, null
  br i1 %tobool310, label %return, label %if.then311

if.then311:                                       ; preds = %if.then309
  %arrayidx314 = getelementptr inbounds %struct.rtx_def* %81, i64 0, i32 1, i64 0
  %rtuint315 = bitcast %union.rtunion_def* %arrayidx314 to i32*
  %84 = load i32* %rtuint315, align 4, !tbaa !3
  %call316 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %83, i8* getelementptr inbounds ([57 x i8]* @.str46, i64 0, i64 0), i32 %84) #6
  br label %return

if.end318:                                        ; preds = %if.then304
  %rtwint = getelementptr inbounds %struct.rtx_def* %81, i64 0, i32 1, i64 0, i32 0
  %85 = load i64* %rtwint, align 8, !tbaa !4
  %sub = sub nsw i64 %offset.0891, %85
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.end318
  %offset.1 = phi i64 [ %sub, %if.end318 ], [ %offset.0891, %for.body ]
  %next_iv = getelementptr inbounds %struct.induction* %biv_inc.0892, i64 0, i32 17
  %biv_inc.0 = load %struct.induction** %next_iv, align 8
  %tobool300 = icmp eq %struct.induction* %biv_inc.0, null
  br i1 %tobool300, label %if.end323, label %for.body

if.end323:                                        ; preds = %if.then296, %for.inc, %if.end284
  %offset.2 = phi i64 [ 0, %if.end284 ], [ 0, %if.then296 ], [ %offset.1, %for.inc ]
  %increment.0 = phi %struct.rtx_def* [ null, %if.end284 ], [ %call298, %if.then296 ], [ %call298, %for.inc ]
  %86 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool324 = icmp eq %struct._IO_FILE* %86, null
  br i1 %tobool324, label %if.end327, label %if.then325

if.then325:                                       ; preds = %if.end323
  %call326 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([56 x i8]* @.str47, i64 0, i64 0), i64 %offset.2) #6
  br label %if.end327

if.end327:                                        ; preds = %if.end323, %if.then325
  %initial_value328 = getelementptr inbounds %struct.iv_class* %75, i64 0, i32 6
  %87 = load %struct.rtx_def** %initial_value328, align 8, !tbaa !0
  %call329 = tail call %struct.rtx_def* @extend_value_for_giv(%struct.induction* %67, %struct.rtx_def* %87) #6
  %mult_val330 = getelementptr inbounds %struct.induction* %67, i64 0, i32 8
  %88 = load %struct.rtx_def** %mult_val330, align 8, !tbaa !0
  %call331 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %call329, i64 %offset.2) #6
  %add_val332 = getelementptr inbounds %struct.induction* %67, i64 0, i32 9
  %89 = load %struct.rtx_def** %add_val332, align 8, !tbaa !0
  %mode333 = getelementptr inbounds %struct.induction* %67, i64 0, i32 6
  %90 = load i32* %mode333, align 4, !tbaa !6
  %call334 = tail call fastcc %struct.rtx_def* @fold_rtx_mult_add(%struct.rtx_def* %88, %struct.rtx_def* %call331, %struct.rtx_def* %89, i32 %90) #8
  br label %if.end344

if.else335:                                       ; preds = %if.else198
  %91 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool336 = icmp eq %struct._IO_FILE* %91, null
  br i1 %tobool336, label %return, label %if.then337

if.then337:                                       ; preds = %if.else335
  %92 = tail call i64 @fwrite(i8* getelementptr inbounds ([54 x i8]* @.str48, i64 0, i64 0), i64 53, i64 1, %struct._IO_FILE* %91)
  br label %return

if.end344:                                        ; preds = %if.end238, %if.end327
  %bl.0 = phi %struct.iv_class* [ %59, %if.end238 ], [ %75, %if.end327 ]
  %increment.1 = phi %struct.rtx_def* [ %call239, %if.end238 ], [ %increment.0, %if.end327 ]
  %initial_value.0 = phi %struct.rtx_def* [ %66, %if.end238 ], [ %call334, %if.end327 ]
  %cmp345 = icmp eq %struct.rtx_def* %initial_value.0, null
  br i1 %cmp345, label %return, label %if.end348

if.end348:                                        ; preds = %if.end344
  switch i32 %bf.clear138, label %sw.default [
    i32 110, label %sw.bb
    i32 106, label %sw.epilog
    i32 108, label %sw.bb350
    i32 104, label %sw.bb351
    i32 103, label %sw.bb352
    i32 111, label %sw.bb353
    i32 107, label %sw.bb354
    i32 109, label %sw.bb355
    i32 105, label %sw.bb357
    i32 102, label %sw.bb357
  ]

sw.bb:                                            ; preds = %if.end348
  br label %sw.epilog

sw.bb350:                                         ; preds = %if.end348
  br label %sw.bb351

sw.bb351:                                         ; preds = %if.end348, %sw.bb350
  %unsigned_p.1 = phi i32 [ 0, %if.end348 ], [ 1, %sw.bb350 ]
  br label %sw.epilog

sw.bb352:                                         ; preds = %if.end348
  br label %sw.epilog

sw.bb353:                                         ; preds = %if.end348
  br label %sw.bb354

sw.bb354:                                         ; preds = %if.end348, %sw.bb353
  %unsigned_p.2 = phi i32 [ 0, %if.end348 ], [ 1, %sw.bb353 ]
  br label %sw.epilog

sw.bb355:                                         ; preds = %if.end348
  br label %sw.bb357

sw.bb357:                                         ; preds = %sw.bb355, %if.end348, %if.end348
  %unsigned_p.4 = phi i32 [ 0, %if.end348 ], [ 0, %if.end348 ], [ 1, %sw.bb355 ]
  br label %sw.epilog

sw.default:                                       ; preds = %if.end348
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str13, i64 0, i64 0), i32 3820, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.loop_iterations, i64 0, i64 0)) #7
  unreachable

sw.epilog:                                        ; preds = %sw.bb, %if.end348, %sw.bb357, %sw.bb354, %sw.bb352, %sw.bb351
  %unsigned_p.5 = phi i32 [ %unsigned_p.4, %sw.bb357 ], [ %unsigned_p.2, %sw.bb354 ], [ 0, %sw.bb352 ], [ %unsigned_p.1, %sw.bb351 ], [ 0, %if.end348 ], [ 1, %sw.bb ]
  %compare_dir.0 = phi i32 [ 0, %sw.bb357 ], [ 1, %sw.bb354 ], [ 0, %sw.bb352 ], [ -1, %sw.bb351 ], [ 1, %if.end348 ], [ 1, %sw.bb ]
  %off_by_one.0 = phi i32 [ 0, %sw.bb357 ], [ 0, %sw.bb354 ], [ 0, %sw.bb352 ], [ -1, %sw.bb351 ], [ 1, %if.end348 ], [ 1, %sw.bb ]
  %93 = bitcast %struct.rtx_def* %42 to i32*
  %bf.load358 = load i32* %93, align 8
  %bf.clear359 = and i32 %bf.load358, 65535
  %cmp360 = icmp eq i32 %bf.clear359, 61
  br i1 %cmp360, label %land.lhs.true362, label %if.end371

land.lhs.true362:                                 ; preds = %sw.epilog
  %call363 = tail call i32 @loop_invariant_p(%struct.loop* %loop, %struct.rtx_def* %42) #6
  %tobool364 = icmp eq i32 %call363, 0
  br i1 %tobool364, label %if.end371, label %if.then365

if.then365:                                       ; preds = %land.lhs.true362
  %call366 = tail call fastcc %struct.rtx_def* @loop_find_equiv_value(%struct.loop* %loop, %struct.rtx_def* %42) #8
  %call367 = tail call i32 @loop_invariant_p(%struct.loop* %loop, %struct.rtx_def* %call366) #6
  %tobool368 = icmp eq i32 %call367, 0
  %.call366 = select i1 %tobool368, %struct.rtx_def* %42, %struct.rtx_def* %call366
  br label %if.end371

if.end371:                                        ; preds = %if.then365, %land.lhs.true362, %sw.epilog
  %final_value.0 = phi %struct.rtx_def* [ %42, %land.lhs.true362 ], [ %42, %sw.epilog ], [ %.call366, %if.then365 ]
  %tobool372 = icmp eq i32 %off_by_one.0, 0
  %conv379.pre = sext i32 %off_by_one.0 to i64
  br i1 %tobool372, label %if.end376, label %if.then373

if.then373:                                       ; preds = %if.end371
  %call375 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %final_value.0, i64 %conv379.pre) #6
  br label %if.end376

if.end376:                                        ; preds = %if.end371, %if.then373
  %final_value.1 = phi %struct.rtx_def* [ %call375, %if.then373 ], [ %final_value.0, %if.end371 ]
  store %struct.rtx_def* %initial_value.0, %struct.rtx_def** %2, align 8, !tbaa !0
  store %struct.rtx_def* %42, %struct.rtx_def** %4, align 8, !tbaa !0
  %call380 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %42, i64 %conv379.pre) #6
  store %struct.rtx_def* %call380, %struct.rtx_def** %5, align 8, !tbaa !0
  store %struct.rtx_def* %increment.1, %struct.rtx_def** %7, align 8, !tbaa !0
  store %struct.rtx_def* %41, %struct.rtx_def** %8, align 8, !tbaa !0
  %comparison_code384 = getelementptr inbounds i8* %0, i64 88
  %94 = bitcast i8* %comparison_code384 to i32*
  store i32 %bf.clear138, i32* %94, align 4, !tbaa !5
  store %struct.iv_class* %bl.0, %struct.iv_class** %10, align 8, !tbaa !0
  %95 = bitcast %struct.rtx_def* %initial_value.0 to i32*
  %bf.load386 = load i32* %95, align 8
  %bf.clear387 = and i32 %bf.load386, 65535
  %cmp388 = icmp eq i32 %bf.clear387, 61
  br i1 %cmp388, label %if.then390, label %if.end487

if.then390:                                       ; preds = %if.end376
  %96 = bitcast %struct.rtx_def* %final_value.1 to i32*
  %bf.load391 = load i32* %96, align 8
  %bf.clear392 = and i32 %bf.load391, 65535
  %cmp393 = icmp eq i32 %bf.clear392, 75
  br i1 %cmp393, label %if.then395, label %if.end403

if.then395:                                       ; preds = %if.then390
  %fld396 = getelementptr inbounds %struct.rtx_def* %final_value.1, i64 0, i32 1
  %rtx398 = bitcast [1 x %union.rtunion_def]* %fld396 to %struct.rtx_def**
  %97 = load %struct.rtx_def** %rtx398, align 8, !tbaa !0
  %arrayidx400 = getelementptr inbounds %struct.rtx_def* %final_value.1, i64 0, i32 1, i64 1
  %rtx401 = bitcast %union.rtunion_def* %arrayidx400 to %struct.rtx_def**
  %.phi.trans.insert = bitcast %struct.rtx_def* %97 to i32*
  %bf.load404.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end403

if.end403:                                        ; preds = %if.then390, %if.then395
  %bf.load404 = phi i32 [ %bf.load404.pre, %if.then395 ], [ %bf.load391, %if.then390 ]
  %reg2.0 = phi %struct.rtx_def* [ %97, %if.then395 ], [ %final_value.1, %if.then390 ]
  %const2.0.in = phi %struct.rtx_def** [ %rtx401, %if.then395 ], [ getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), %if.then390 ]
  %const2.0 = load %struct.rtx_def** %const2.0.in, align 8
  %bf.clear405 = and i32 %bf.load404, 65535
  %cmp406 = icmp ne i32 %bf.clear405, 61
  %cmp409 = icmp eq %struct.rtx_def* %reg2.0, %initial_value.0
  %or.cond886 = or i1 %cmp406, %cmp409
  br i1 %or.cond886, label %if.else439, label %if.then411

if.then411:                                       ; preds = %if.end403
  %call413 = tail call fastcc %struct.rtx_def* @loop_find_equiv_value(%struct.loop* %loop, %struct.rtx_def* %initial_value.0) #8
  %call414 = tail call fastcc %struct.rtx_def* @find_common_reg_term(%struct.rtx_def* %call413, %struct.rtx_def* %reg2.0) #8
  %tobool415 = icmp eq %struct.rtx_def* %call414, null
  br i1 %tobool415, label %if.else417, label %if.end487

if.else417:                                       ; preds = %if.then411
  %call418 = tail call fastcc %struct.rtx_def* @loop_find_equiv_value(%struct.loop* %loop, %struct.rtx_def* %reg2.0) #8
  %98 = load %struct.rtx_def** %8, align 8, !tbaa !0
  %cmp420 = icmp eq %struct.rtx_def* %call418, %98
  %initial_value.0.call418 = select i1 %cmp420, %struct.rtx_def* %initial_value.0, %struct.rtx_def* %call418
  %cmp424 = icmp eq %struct.rtx_def* %initial_value.0.call418, %initial_value.0
  br i1 %cmp424, label %if.then426, label %if.end487

if.then426:                                       ; preds = %if.else417
  %99 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %cmp427 = icmp eq %struct.rtx_def* %const2.0, %99
  br i1 %cmp427, label %if.end487, label %cond.false430

cond.false430:                                    ; preds = %if.then426
  %bf.load431 = load i32* %95, align 8
  %bf.lshr432 = lshr i32 %bf.load431, 16
  %bf.clear433 = and i32 %bf.lshr432, 255
  %call434 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear433, %struct.rtx_def* %initial_value.0, %struct.rtx_def* %const2.0) #6
  br label %if.end487

if.else439:                                       ; preds = %if.end403
  %vtop = getelementptr inbounds %struct.loop* %loop, i64 0, i32 23
  %100 = load %struct.rtx_def** %vtop, align 8, !tbaa !0
  %tobool440 = icmp ne %struct.rtx_def* %100, null
  %cmp444 = icmp eq i32 %bf.clear405, 54
  %or.cond887 = and i1 %tobool440, %cmp444
  br i1 %or.cond887, label %if.then446, label %if.end487

if.then446:                                       ; preds = %if.else439
  %call448 = tail call fastcc %struct.rtx_def* @loop_find_equiv_value(%struct.loop* %loop, %struct.rtx_def* %initial_value.0) #8
  %101 = bitcast %struct.rtx_def* %call448 to i32*
  %bf.load449 = load i32* %101, align 8
  %bf.clear450 = and i32 %bf.load449, 65535
  %cmp451 = icmp eq i32 %bf.clear450, 76
  br i1 %cmp451, label %land.lhs.true453, label %if.end487

land.lhs.true453:                                 ; preds = %if.then446
  %fld454 = getelementptr inbounds %struct.rtx_def* %call448, i64 0, i32 1
  %rtx456 = bitcast [1 x %union.rtunion_def]* %fld454 to %struct.rtx_def**
  %102 = load %struct.rtx_def** %rtx456, align 8, !tbaa !0
  %103 = bitcast %struct.rtx_def* %102 to i32*
  %bf.load457 = load i32* %103, align 8
  %bf.clear458 = and i32 %bf.load457, 65535
  %cmp459 = icmp eq i32 %bf.clear458, 61
  br i1 %cmp459, label %if.then461, label %if.end487

if.then461:                                       ; preds = %land.lhs.true453
  %call465 = tail call fastcc %struct.rtx_def* @loop_find_equiv_value(%struct.loop* %loop, %struct.rtx_def* %102) #8
  %104 = bitcast %struct.rtx_def* %call465 to i32*
  %bf.load466 = load i32* %104, align 8
  %bf.clear467 = and i32 %bf.load466, 65535
  %cmp468 = icmp eq i32 %bf.clear467, 75
  br i1 %cmp468, label %land.lhs.true470, label %if.end487

land.lhs.true470:                                 ; preds = %if.then461
  %fld471 = getelementptr inbounds %struct.rtx_def* %call465, i64 0, i32 1
  %rtx473 = bitcast [1 x %union.rtunion_def]* %fld471 to %struct.rtx_def**
  %105 = load %struct.rtx_def** %rtx473, align 8, !tbaa !0
  %arrayidx475 = getelementptr inbounds %struct.rtx_def* %call448, i64 0, i32 1, i64 1
  %rtx476 = bitcast %union.rtunion_def* %arrayidx475 to %struct.rtx_def**
  %106 = load %struct.rtx_def** %rtx476, align 8, !tbaa !0
  %cmp477 = icmp eq %struct.rtx_def* %105, %106
  br i1 %cmp477, label %if.then479, label %if.end487

if.then479:                                       ; preds = %land.lhs.true470
  %arrayidx481 = getelementptr inbounds %struct.rtx_def* %call465, i64 0, i32 1, i64 1
  %rtx482 = bitcast %union.rtunion_def* %arrayidx481 to %struct.rtx_def**
  %107 = load %struct.rtx_def** %rtx482, align 8, !tbaa !0
  br label %if.end487

if.end487:                                        ; preds = %land.lhs.true470, %if.then461, %land.lhs.true453, %if.then446, %if.then426, %if.else417, %if.then411, %if.end376, %if.else439, %cond.false430, %if.then479
  %final_value.2 = phi %struct.rtx_def* [ %final_value.1, %if.then479 ], [ %final_value.1, %if.else439 ], [ %call434, %cond.false430 ], [ %final_value.1, %if.end376 ], [ %final_value.1, %if.then411 ], [ %final_value.1, %if.else417 ], [ %initial_value.0, %if.then426 ], [ %final_value.1, %if.then446 ], [ %final_value.1, %land.lhs.true453 ], [ %final_value.1, %if.then461 ], [ %final_value.1, %land.lhs.true470 ]
  %initial_value.1 = phi %struct.rtx_def* [ %107, %if.then479 ], [ %initial_value.0, %if.else439 ], [ %initial_value.0, %cond.false430 ], [ %initial_value.0, %if.end376 ], [ %call413, %if.then411 ], [ %initial_value.0, %if.else417 ], [ %initial_value.0, %if.then426 ], [ %initial_value.0, %if.then446 ], [ %initial_value.0, %land.lhs.true453 ], [ %initial_value.0, %if.then461 ], [ %initial_value.0, %land.lhs.true470 ]
  %vtop488 = getelementptr inbounds %struct.loop* %loop, i64 0, i32 23
  %108 = load %struct.rtx_def** %vtop488, align 8, !tbaa !0
  %tobool489 = icmp eq %struct.rtx_def* %108, null
  br i1 %tobool489, label %if.end496, label %land.lhs.true490

land.lhs.true490:                                 ; preds = %if.end487
  %call491 = tail call fastcc %struct.rtx_def* @find_common_reg_term(%struct.rtx_def* %initial_value.1, %struct.rtx_def* %final_value.2) #8
  %tobool492 = icmp eq %struct.rtx_def* %call491, null
  br i1 %tobool492, label %if.end496, label %if.then493

if.then493:                                       ; preds = %land.lhs.true490
  %call494 = tail call fastcc %struct.rtx_def* @subtract_reg_term(%struct.rtx_def* %initial_value.1, %struct.rtx_def* %call491) #8
  %call495 = tail call fastcc %struct.rtx_def* @subtract_reg_term(%struct.rtx_def* %final_value.2, %struct.rtx_def* %call491) #8
  br label %if.end496

if.end496:                                        ; preds = %land.lhs.true490, %if.end487, %if.then493
  %final_value.3 = phi %struct.rtx_def* [ %call495, %if.then493 ], [ %final_value.2, %land.lhs.true490 ], [ %final_value.2, %if.end487 ]
  %initial_value.2 = phi %struct.rtx_def* [ %call494, %if.then493 ], [ %initial_value.1, %land.lhs.true490 ], [ %initial_value.1, %if.end487 ]
  store %struct.rtx_def* %initial_value.2, %struct.rtx_def** %3, align 8, !tbaa !0
  store %struct.rtx_def* %final_value.3, %struct.rtx_def** %6, align 8, !tbaa !0
  %cmp499 = icmp eq i32 %bf.clear138, 103
  br i1 %cmp499, label %if.then501, label %if.end504

if.then501:                                       ; preds = %if.end496
  store %struct.rtx_def* null, %struct.rtx_def** %5, align 8, !tbaa !0
  store %struct.rtx_def* null, %struct.rtx_def** %6, align 8, !tbaa !0
  br label %if.end504

if.end504:                                        ; preds = %if.then501, %if.end496
  %cmp505 = icmp eq %struct.rtx_def* %increment.1, null
  br i1 %cmp505, label %if.then507, label %if.end512

if.then507:                                       ; preds = %if.end504
  %109 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool508 = icmp eq %struct._IO_FILE* %109, null
  br i1 %tobool508, label %return, label %if.then509

if.then509:                                       ; preds = %if.then507
  %110 = tail call i64 @fwrite(i8* getelementptr inbounds ([55 x i8]* @.str49, i64 0, i64 0), i64 54, i64 1, %struct._IO_FILE* %109)
  br label %return

if.end512:                                        ; preds = %if.end504
  %111 = bitcast %struct.rtx_def* %increment.1 to i32*
  %bf.load513 = load i32* %111, align 8
  %bf.clear514 = and i32 %bf.load513, 65535
  switch i32 %bf.clear514, label %if.end529 [
    i32 54, label %if.end542
    i32 61, label %if.then527
    i32 63, label %if.then527
  ]

if.then527:                                       ; preds = %if.end512, %if.end512
  %call528 = tail call fastcc %struct.rtx_def* @loop_find_equiv_value(%struct.loop* %loop, %struct.rtx_def* %increment.1) #8
  %.phi.trans.insert894 = bitcast %struct.rtx_def* %call528 to i32*
  %bf.load530.pre = load i32* %.phi.trans.insert894, align 8
  br label %if.end529

if.end529:                                        ; preds = %if.end512, %if.then527
  %bf.load530 = phi i32 [ %bf.load530.pre, %if.then527 ], [ %bf.load513, %if.end512 ]
  %increment.2 = phi %struct.rtx_def* [ %call528, %if.then527 ], [ %increment.1, %if.end512 ]
  %bf.clear531 = and i32 %bf.load530, 65535
  %cmp532 = icmp eq i32 %bf.clear531, 54
  br i1 %cmp532, label %if.end540, label %if.then534

if.then534:                                       ; preds = %if.end529
  %112 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool535 = icmp eq %struct._IO_FILE* %112, null
  br i1 %tobool535, label %return, label %if.then536

if.then536:                                       ; preds = %if.then534
  %113 = tail call i64 @fwrite(i8* getelementptr inbounds ([47 x i8]* @.str50, i64 0, i64 0), i64 46, i64 1, %struct._IO_FILE* %112)
  %114 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  tail call void @print_simple_rtl(%struct._IO_FILE* %114, %struct.rtx_def* %increment.2) #6
  %115 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %116 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str19, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %115)
  br label %return

if.end540:                                        ; preds = %if.end529
  store %struct.rtx_def* %increment.2, %struct.rtx_def** %7, align 8, !tbaa !0
  br label %if.end542

if.end542:                                        ; preds = %if.end512, %if.end540
  %increment.3 = phi %struct.rtx_def* [ %increment.2, %if.end540 ], [ %increment.1, %if.end512 ]
  %117 = bitcast %struct.rtx_def* %initial_value.2 to i32*
  %bf.load543 = load i32* %117, align 8
  %bf.clear544 = and i32 %bf.load543, 65535
  %cmp545 = icmp eq i32 %bf.clear544, 54
  br i1 %cmp545, label %if.else553, label %if.then547

if.then547:                                       ; preds = %if.end542
  %118 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool548 = icmp eq %struct._IO_FILE* %118, null
  br i1 %tobool548, label %return, label %if.then549

if.then549:                                       ; preds = %if.then547
  %119 = tail call i64 @fwrite(i8* getelementptr inbounds ([45 x i8]* @.str51, i64 0, i64 0), i64 44, i64 1, %struct._IO_FILE* %118)
  %120 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  tail call void @print_simple_rtl(%struct._IO_FILE* %120, %struct.rtx_def* %initial_value.2) #6
  %121 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %122 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str19, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %121)
  br label %return

if.else553:                                       ; preds = %if.end542
  br i1 %cmp499, label %if.then556, label %if.else561

if.then556:                                       ; preds = %if.else553
  %123 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool557 = icmp eq %struct._IO_FILE* %123, null
  br i1 %tobool557, label %return, label %if.then558

if.then558:                                       ; preds = %if.then556
  %124 = tail call i64 @fwrite(i8* getelementptr inbounds ([38 x i8]* @.str52, i64 0, i64 0), i64 37, i64 1, %struct._IO_FILE* %123)
  br label %return

if.else561:                                       ; preds = %if.else553
  %125 = bitcast %struct.rtx_def* %final_value.3 to i32*
  %bf.load562 = load i32* %125, align 8
  %bf.clear563 = and i32 %bf.load562, 65535
  %cmp564 = icmp eq i32 %bf.clear563, 54
  br i1 %cmp564, label %if.end574, label %if.then566

if.then566:                                       ; preds = %if.else561
  %126 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool567 = icmp eq %struct._IO_FILE* %126, null
  br i1 %tobool567, label %return, label %if.then568

if.then568:                                       ; preds = %if.then566
  %127 = tail call i64 @fwrite(i8* getelementptr inbounds ([43 x i8]* @.str53, i64 0, i64 0), i64 42, i64 1, %struct._IO_FILE* %126)
  %128 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  tail call void @print_simple_rtl(%struct._IO_FILE* %128, %struct.rtx_def* %final_value.3) #6
  %129 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %130 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8]* @.str19, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %129)
  br label %return

if.end574:                                        ; preds = %if.else561
  %tobool575 = icmp eq i32 %unsigned_p.5, 0
  %rtwint579 = getelementptr inbounds %struct.rtx_def* %final_value.3, i64 0, i32 1, i64 0, i32 0
  %131 = load i64* %rtwint579, align 8, !tbaa !4
  %rtwint582 = getelementptr inbounds %struct.rtx_def* %initial_value.2, i64 0, i32 1, i64 0, i32 0
  %132 = load i64* %rtwint582, align 8, !tbaa !4
  br i1 %tobool575, label %if.else594, label %if.then576

if.then576:                                       ; preds = %if.end574
  %cmp583 = icmp ugt i64 %131, %132
  %conv584 = zext i1 %cmp583 to i32
  %cmp591 = icmp ult i64 %131, %132
  %conv592 = zext i1 %cmp591 to i32
  %sub593 = sub nsw i32 %conv584, %conv592
  br label %if.end612

if.else594:                                       ; preds = %if.end574
  %cmp601 = icmp sgt i64 %131, %132
  %conv602 = zext i1 %cmp601 to i32
  %cmp609 = icmp slt i64 %131, %132
  %conv610 = zext i1 %cmp609 to i32
  %sub611 = sub nsw i32 %conv602, %conv610
  br label %if.end612

if.end612:                                        ; preds = %if.else594, %if.then576
  %final_larger.0 = phi i32 [ %sub593, %if.then576 ], [ %sub611, %if.else594 ]
  %rtwint615 = getelementptr inbounds %struct.rtx_def* %increment.3, i64 0, i32 1, i64 0, i32 0
  %133 = load i64* %rtwint615, align 8, !tbaa !4
  %cmp616 = icmp sgt i64 %133, 0
  br i1 %cmp616, label %if.end628, label %if.else619

if.else619:                                       ; preds = %if.end612
  %not.cmp623 = icmp ne i64 %133, 0
  %. = sext i1 %not.cmp623 to i32
  br label %if.end628

if.end628:                                        ; preds = %if.else619, %if.end612
  %increment_dir.0 = phi i32 [ 1, %if.end612 ], [ %., %if.else619 ]
  %cmp629 = icmp eq i32 %final_larger.0, %increment_dir.0
  %cmp632 = icmp ne i32 %final_larger.0, 0
  %or.cond = and i1 %cmp629, %cmp632
  br i1 %or.cond, label %land.lhs.true634, label %if.else641

land.lhs.true634:                                 ; preds = %if.end628
  %cmp635 = icmp eq i32 %final_larger.0, %compare_dir.0
  %cmp638 = icmp eq i32 %compare_dir.0, 0
  %or.cond697 = or i1 %cmp635, %cmp638
  br i1 %or.cond697, label %if.end646, label %if.else641

if.else641:                                       ; preds = %land.lhs.true634, %if.end628
  %134 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool642 = icmp eq %struct._IO_FILE* %134, null
  br i1 %tobool642, label %return, label %if.then643

if.then643:                                       ; preds = %if.else641
  %135 = tail call i64 @fwrite(i8* getelementptr inbounds ([35 x i8]* @.str54, i64 0, i64 0), i64 34, i64 1, %struct._IO_FILE* %134)
  br label %return

if.end646:                                        ; preds = %land.lhs.true634
  br i1 %cmp616, label %if.then652, label %if.else660

if.then652:                                       ; preds = %if.end646
  %sub659 = sub nsw i64 %131, %132
  br label %if.end674

if.else660:                                       ; preds = %if.end646
  %cmp661 = icmp slt i64 %133, 0
  br i1 %cmp661, label %if.then663, label %if.else672

if.then663:                                       ; preds = %if.else660
  %sub670 = sub nsw i64 %132, %131
  %sub671 = sub nsw i64 0, %133
  br label %if.end674

if.else672:                                       ; preds = %if.else660
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str13, i64 0, i64 0), i32 4090, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.loop_iterations, i64 0, i64 0)) #7
  unreachable

if.end674:                                        ; preds = %if.then663, %if.then652
  %abs_diff.0 = phi i64 [ %sub659, %if.then652 ], [ %sub670, %if.then663 ]
  %abs_inc.0 = phi i64 [ %133, %if.then652 ], [ %sub671, %if.then663 ]
  %bf.load675 = load i32* %43, align 8
  %bf.lshr676 = lshr i32 %bf.load675, 16
  %bf.clear677 = and i32 %bf.lshr676, 255
  %idxprom678883 = zext i32 %bf.clear677 to i64
  %arrayidx679 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom678883
  %136 = load i16* %arrayidx679, align 2, !tbaa !10
  %conv680 = zext i16 %136 to i64
  %sub681 = add i64 %conv680, 4294967295
  %sh_prom = and i64 %sub681, 4294967295
  %shl682 = shl i64 2, %sh_prom
  %sub683 = add i64 %shl682, -1
  %and = and i64 %sub683, %abs_diff.0
  %rem = urem i64 %and, %abs_inc.0
  br i1 %cmp638, label %land.lhs.true686, label %if.end690

land.lhs.true686:                                 ; preds = %if.end674
  %cmp687 = icmp eq i64 %rem, 0
  br i1 %cmp687, label %if.end690, label %return

if.end690:                                        ; preds = %if.end674, %land.lhs.true686
  %rem691.pre-phi = phi i64 [ 0, %land.lhs.true686 ], [ %rem, %if.end674 ]
  %div = udiv i64 %and, %abs_inc.0
  %cmp692 = icmp ne i64 %rem691.pre-phi, 0
  %conv694 = zext i1 %cmp692 to i64
  %add = add i64 %conv694, %div
  store i64 %add, i64* %1, align 8, !tbaa !4
  br label %return

return:                                           ; preds = %land.lhs.true686, %if.then643, %if.else641, %if.then568, %if.then566, %if.then558, %if.then556, %if.then549, %if.then547, %if.then536, %if.then534, %if.then509, %if.then507, %if.end344, %if.then337, %if.else335, %if.then311, %if.then309, %if.then281, %if.then279, %if.then235, %if.then233, %if.then195, %if.then193, %if.then182, %if.then180, %if.then170, %if.then168, %if.then150, %if.then148, %if.then133, %if.then131, %if.then118, %if.then116, %if.then38, %if.then36, %if.then18, %if.then16, %if.then8, %if.then, %if.end690
  %retval.0 = phi i64 [ %add, %if.end690 ], [ 0, %if.then ], [ 0, %if.then8 ], [ 0, %if.then16 ], [ 0, %if.then18 ], [ 0, %if.then36 ], [ 0, %if.then38 ], [ 0, %if.then116 ], [ 0, %if.then118 ], [ 0, %if.then131 ], [ 0, %if.then133 ], [ 0, %if.then148 ], [ 0, %if.then150 ], [ 0, %if.then168 ], [ 0, %if.then170 ], [ 0, %if.then180 ], [ 0, %if.then182 ], [ 0, %if.then193 ], [ 0, %if.then195 ], [ 0, %if.then233 ], [ 0, %if.then235 ], [ 0, %if.then279 ], [ 0, %if.then281 ], [ 0, %if.then309 ], [ 0, %if.then311 ], [ 0, %if.else335 ], [ 0, %if.then337 ], [ 0, %if.end344 ], [ 0, %if.then507 ], [ 0, %if.then509 ], [ 0, %if.then534 ], [ 0, %if.then536 ], [ 0, %if.then547 ], [ 0, %if.then549 ], [ 0, %if.then556 ], [ 0, %if.then558 ], [ 0, %if.then566 ], [ 0, %if.then568 ], [ 0, %if.else641 ], [ 0, %if.then643 ], [ 0, %land.lhs.true686 ]
  ret i64 %retval.0
}
