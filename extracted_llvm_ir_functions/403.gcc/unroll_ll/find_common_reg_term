define internal fastcc %struct.rtx_def* @find_common_reg_term(%struct.rtx_def* %op0, %struct.rtx_def* %op1) #5 {
entry:
  %0 = bitcast %struct.rtx_def* %op0 to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %if.end49 [
    i32 61, label %land.lhs.true
    i32 75, label %land.lhs.true
  ]

land.lhs.true:                                    ; preds = %entry, %entry
  %1 = bitcast %struct.rtx_def* %op1 to i32*
  %bf.load4 = load i32* %1, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  switch i32 %bf.clear5, label %if.end49 [
    i32 61, label %if.then
    i32 75, label %if.then
  ]

if.then:                                          ; preds = %land.lhs.true, %land.lhs.true
  %cmp13 = icmp eq i32 %bf.clear, 75
  br i1 %cmp13, label %if.then14, label %if.end

if.then14:                                        ; preds = %if.then
  %arrayidx = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 1
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %op0, i64 0, i32 1, i64 0
  %rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx17, align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then14
  %op00.0 = phi %struct.rtx_def* [ %2, %if.then14 ], [ %op0, %if.then ]
  %op01.0.in = phi %struct.rtx_def** [ %rtx, %if.then14 ], [ getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), %if.then ]
  %op01.0 = load %struct.rtx_def** %op01.0.in, align 8
  %cmp20 = icmp eq i32 %bf.clear5, 75
  br i1 %cmp20, label %if.then21, label %if.end29

if.then21:                                        ; preds = %if.end
  %arrayidx23 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 1, i64 1
  %rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**
  %arrayidx26 = getelementptr inbounds %struct.rtx_def* %op1, i64 0, i32 1, i64 0
  %rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**
  %3 = load %struct.rtx_def** %rtx27, align 8, !tbaa !0
  br label %if.end29

if.end29:                                         ; preds = %if.end, %if.then21
  %op10.0 = phi %struct.rtx_def* [ %3, %if.then21 ], [ %op1, %if.end ]
  %op11.0.in = phi %struct.rtx_def** [ %rtx24, %if.then21 ], [ getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), %if.end ]
  %op11.0 = load %struct.rtx_def** %op11.0.in, align 8
  %4 = bitcast %struct.rtx_def* %op00.0 to i32*
  %bf.load30 = load i32* %4, align 8
  %bf.clear31 = and i32 %bf.load30, 65535
  %cmp32 = icmp eq i32 %bf.clear31, 61
  br i1 %cmp32, label %land.lhs.true33, label %if.else38

land.lhs.true33:                                  ; preds = %if.end29
  %cmp34 = icmp eq %struct.rtx_def* %op00.0, %op10.0
  %cmp36 = icmp eq %struct.rtx_def* %op00.0, %op11.0
  %or.cond = or i1 %cmp34, %cmp36
  br i1 %or.cond, label %return, label %if.else38

if.else38:                                        ; preds = %land.lhs.true33, %if.end29
  %5 = bitcast %struct.rtx_def* %op01.0 to i32*
  %bf.load39 = load i32* %5, align 8
  %bf.clear40 = and i32 %bf.load39, 65535
  %cmp41 = icmp eq i32 %bf.clear40, 61
  br i1 %cmp41, label %land.lhs.true42, label %if.end49

land.lhs.true42:                                  ; preds = %if.else38
  %cmp43 = icmp eq %struct.rtx_def* %op01.0, %op10.0
  %cmp45 = icmp eq %struct.rtx_def* %op01.0, %op11.0
  %or.cond68 = or i1 %cmp43, %cmp45
  br i1 %or.cond68, label %return, label %if.end49

if.end49:                                         ; preds = %land.lhs.true42, %land.lhs.true, %entry, %if.else38
  br label %return

return:                                           ; preds = %land.lhs.true42, %land.lhs.true33, %if.end49
  %retval.0 = phi %struct.rtx_def* [ null, %if.end49 ], [ %op00.0, %land.lhs.true33 ], [ %op01.0, %land.lhs.true42 ]
  ret %struct.rtx_def* %retval.0
}
