define %struct.rtx_def* @final_giv_value(%struct.loop* %loop, %struct.induction* %v) #0 {
entry:
  %aux = getelementptr inbounds %struct.loop* %loop, i64 0, i32 22
  %0 = load i8** %aux, align 8, !tbaa !0
  %ivs1 = getelementptr inbounds i8* %0, i64 208
  %end = getelementptr inbounds %struct.loop* %loop, i64 0, i32 27
  %1 = load %struct.rtx_def** %end, align 8, !tbaa !0
  %n_iterations3 = getelementptr inbounds i8* %0, i64 96
  %2 = bitcast i8* %n_iterations3 to i64*
  %3 = load i64* %2, align 8, !tbaa !4
  %src_reg = getelementptr inbounds %struct.induction* %v, i64 0, i32 2
  %4 = load %struct.rtx_def** %src_reg, align 8, !tbaa !0
  %arrayidx = getelementptr inbounds %struct.rtx_def* %4, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %5 = load i32* %rtuint, align 4, !tbaa !3
  %idxprom = zext i32 %5 to i64
  %regs = bitcast i8* %ivs1 to %struct.iv**
  %6 = load %struct.iv** %regs, align 8, !tbaa !0
  %class = getelementptr inbounds %struct.iv* %6, i64 %idxprom, i32 1, i32 0
  %7 = load %struct.iv_class** %class, align 8, !tbaa !0
  %reversed = getelementptr inbounds %struct.iv_class* %7, i64 0, i32 12
  %bf.load = load i8* %reversed, align 8
  %bf.clear = and i8 %bf.load, 8
  %tobool = icmp eq i8 %bf.clear, 0
  br i1 %tobool, label %if.end10, label %if.then

if.then:                                          ; preds = %entry
  %8 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool5 = icmp eq %struct._IO_FILE* %8, null
  br i1 %tobool5, label %if.end, label %if.then6

if.then6:                                         ; preds = %if.then
  %dest_reg = getelementptr inbounds %struct.induction* %v, i64 0, i32 4
  %9 = load %struct.rtx_def** %dest_reg, align 8, !tbaa !0
  %arrayidx8 = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 0
  %rtuint9 = bitcast %union.rtunion_def* %arrayidx8 to i32*
  %10 = load i32* %rtuint9, align 4, !tbaa !3
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([49 x i8]* @.str33, i64 0, i64 0), i32 %10) #6
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then6
  %11 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  br label %return

if.end10:                                         ; preds = %entry
  %cmp = icmp eq i64 %3, 0
  br i1 %cmp, label %if.end71, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end10
  %exit_count = getelementptr inbounds %struct.loop* %loop, i64 0, i32 32
  %12 = load i32* %exit_count, align 4, !tbaa !3
  %tobool11 = icmp eq i32 %12, 0
  br i1 %tobool11, label %land.lhs.true12, label %if.end71

land.lhs.true12:                                  ; preds = %land.lhs.true
  %always_executed = getelementptr inbounds %struct.induction* %v, i64 0, i32 13
  %13 = bitcast [2 x i8]* %always_executed to i16*
  %bf.load13 = load i16* %13, align 4
  %bf.clear15 = and i16 %bf.load13, 16
  %tobool17 = icmp eq i16 %bf.clear15, 0
  br i1 %tobool17, label %if.end71, label %if.then18

if.then18:                                        ; preds = %land.lhs.true12
  %call19 = tail call %struct.rtx_def* @biv_total_increment(%struct.iv_class* %7) #8
  %tobool20 = icmp eq %struct.rtx_def* %call19, null
  br i1 %tobool20, label %if.end71, label %land.lhs.true21

land.lhs.true21:                                  ; preds = %if.then18
  %call22 = tail call i32 @loop_invariant_p(%struct.loop* %loop, %struct.rtx_def* %call19) #6
  %tobool23 = icmp eq i32 %call22, 0
  br i1 %tobool23, label %if.end71, label %land.lhs.true24

land.lhs.true24:                                  ; preds = %land.lhs.true21
  %initial_value = getelementptr inbounds %struct.iv_class* %7, i64 0, i32 6
  %14 = load %struct.rtx_def** %initial_value, align 8, !tbaa !0
  %call25 = tail call i32 @loop_invariant_p(%struct.loop* %loop, %struct.rtx_def* %14) #6
  %tobool26 = icmp eq i32 %call25, 0
  br i1 %tobool26, label %if.end71, label %if.then27

if.then27:                                        ; preds = %land.lhs.true24
  %mode = getelementptr inbounds %struct.induction* %v, i64 0, i32 6
  %15 = load i32* %mode, align 4, !tbaa !6
  %call28 = tail call %struct.rtx_def* @gen_reg_rtx(i32 %15) #6
  %arrayidx30 = getelementptr inbounds %struct.rtx_def* %call28, i64 0, i32 1, i64 0
  %rtuint31 = bitcast %union.rtunion_def* %arrayidx30 to i32*
  %16 = load i32* %rtuint31, align 4, !tbaa !3
  %biv = getelementptr inbounds %struct.iv_class* %7, i64 0, i32 2
  %17 = load %struct.induction** %biv, align 8, !tbaa !0
  %add_val = getelementptr inbounds %struct.induction* %17, i64 0, i32 9
  %18 = load %struct.rtx_def** %add_val, align 8, !tbaa !0
  tail call void @record_base_value(i32 %16, %struct.rtx_def* %18, i32 0) #6
  %call32 = tail call %struct.rtx_def* @extend_value_for_giv(%struct.induction* %v, %struct.rtx_def* %call19) #6
  %call33 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %3) #6
  %19 = load %struct.rtx_def** %initial_value, align 8, !tbaa !0
  %call35 = tail call %struct.rtx_def* @extend_value_for_giv(%struct.induction* %v, %struct.rtx_def* %19) #6
  tail call void @loop_iv_add_mult_sink(%struct.loop* %loop, %struct.rtx_def* %call32, %struct.rtx_def* %call33, %struct.rtx_def* %call35, %struct.rtx_def* %call28) #6
  %insn36 = getelementptr inbounds %struct.induction* %v, i64 0, i32 0
  %20 = load %struct.rtx_def** %insn36, align 8, !tbaa !0
  %insn.0.in.in135 = getelementptr inbounds %struct.rtx_def* %20, i64 0, i32 1, i64 2
  %insn.0.in136 = bitcast %union.rtunion_def* %insn.0.in.in135 to %struct.rtx_def**
  %insn.0137 = load %struct.rtx_def** %insn.0.in136, align 8
  %cmp39138 = icmp eq %struct.rtx_def* %insn.0137, %1
  br i1 %cmp39138, label %for.end60, label %for.cond42.preheader

for.cond.loopexit:                                ; preds = %for.inc, %for.cond42.preheader
  %tem.1.lcssa = phi %struct.rtx_def* [ %tem.0139, %for.cond42.preheader ], [ %tem.2, %for.inc ]
  %insn.0.in.in = getelementptr inbounds %struct.rtx_def* %insn.0140, i64 0, i32 1, i64 2
  %insn.0.in = bitcast %union.rtunion_def* %insn.0.in.in to %struct.rtx_def**
  %insn.0 = load %struct.rtx_def** %insn.0.in, align 8
  %cmp39 = icmp eq %struct.rtx_def* %insn.0, %1
  br i1 %cmp39, label %for.end60, label %for.cond42.preheader

for.cond42.preheader:                             ; preds = %for.cond.loopexit, %if.then27
  %insn.0140 = phi %struct.rtx_def* [ %insn.0137, %if.then27 ], [ %insn.0, %for.cond.loopexit ]
  %tem.0139 = phi %struct.rtx_def* [ %call28, %if.then27 ], [ %tem.1.lcssa, %for.cond.loopexit ]
  %biv40.0131 = load %struct.induction** %biv, align 8
  %tobool43132 = icmp eq %struct.induction* %biv40.0131, null
  br i1 %tobool43132, label %for.cond.loopexit, label %for.body44

for.body44:                                       ; preds = %for.cond42.preheader, %for.inc
  %biv40.0134 = phi %struct.induction* [ %biv40.0, %for.inc ], [ %biv40.0131, %for.cond42.preheader ]
  %tem.1133 = phi %struct.rtx_def* [ %tem.2, %for.inc ], [ %tem.0139, %for.cond42.preheader ]
  %insn45 = getelementptr inbounds %struct.induction* %biv40.0134, i64 0, i32 0
  %21 = load %struct.rtx_def** %insn45, align 8, !tbaa !0
  %cmp46 = icmp eq %struct.rtx_def* %21, %insn.0140
  br i1 %cmp46, label %if.then47, label %for.inc

if.then47:                                        ; preds = %for.body44
  tail call void @start_sequence() #6
  %22 = bitcast %struct.rtx_def* %tem.1133 to i32*
  %bf.load48 = load i32* %22, align 8
  %bf.lshr49 = lshr i32 %bf.load48, 16
  %bf.clear50 = and i32 %bf.lshr49, 255
  %add_val51 = getelementptr inbounds %struct.induction* %biv40.0134, i64 0, i32 9
  %23 = load %struct.rtx_def** %add_val51, align 8, !tbaa !0
  %call52 = tail call %struct.rtx_def* @expand_simple_binop(i32 %bf.clear50, i32 76, %struct.rtx_def* %tem.1133, %struct.rtx_def* %23, %struct.rtx_def* null, i32 0, i32 3) #6
  %call53 = tail call %struct.rtx_def* @gen_sequence() #6
  tail call void @end_sequence() #6
  %call54 = tail call %struct.rtx_def* @loop_insn_sink(%struct.loop* %loop, %struct.rtx_def* %call53) #6
  br label %for.inc

for.inc:                                          ; preds = %for.body44, %if.then47
  %tem.2 = phi %struct.rtx_def* [ %call52, %if.then47 ], [ %tem.1133, %for.body44 ]
  %next_iv = getelementptr inbounds %struct.induction* %biv40.0134, i64 0, i32 17
  %biv40.0 = load %struct.induction** %next_iv, align 8
  %tobool43 = icmp eq %struct.induction* %biv40.0, null
  br i1 %tobool43, label %for.cond.loopexit, label %for.body44

for.end60:                                        ; preds = %for.cond.loopexit, %if.then27
  %tem.0.lcssa = phi %struct.rtx_def* [ %call28, %if.then27 ], [ %tem.1.lcssa, %for.cond.loopexit ]
  %mult_val = getelementptr inbounds %struct.induction* %v, i64 0, i32 8
  %24 = load %struct.rtx_def** %mult_val, align 8, !tbaa !0
  %add_val61 = getelementptr inbounds %struct.induction* %v, i64 0, i32 9
  %25 = load %struct.rtx_def** %add_val61, align 8, !tbaa !0
  tail call void @loop_iv_add_mult_sink(%struct.loop* %loop, %struct.rtx_def* %tem.0.lcssa, %struct.rtx_def* %24, %struct.rtx_def* %25, %struct.rtx_def* %tem.0.lcssa) #6
  %26 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool62 = icmp eq %struct._IO_FILE* %26, null
  br i1 %tobool62, label %return, label %if.then63

if.then63:                                        ; preds = %for.end60
  %dest_reg64 = getelementptr inbounds %struct.induction* %v, i64 0, i32 4
  %27 = load %struct.rtx_def** %dest_reg64, align 8, !tbaa !0
  %arrayidx66 = getelementptr inbounds %struct.rtx_def* %27, i64 0, i32 1, i64 0
  %rtuint67 = bitcast %union.rtunion_def* %arrayidx66 to i32*
  %28 = load i32* %rtuint67, align 4, !tbaa !3
  %call68 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([48 x i8]* @.str34, i64 0, i64 0), i32 %28) #6
  br label %return

if.end71:                                         ; preds = %land.lhs.true24, %land.lhs.true21, %if.then18, %land.lhs.true, %if.end10, %land.lhs.true12
  %replaceable = getelementptr inbounds %struct.induction* %v, i64 0, i32 13
  %29 = bitcast [2 x i8]* %replaceable to i16*
  %bf.load72 = load i16* %29, align 4
  %bf.clear73 = and i16 %bf.load72, 1
  %tobool75 = icmp eq i16 %bf.clear73, 0
  br i1 %tobool75, label %if.end77, label %if.then76

if.then76:                                        ; preds = %if.end71
  tail call void @fancy_abort(i8* getelementptr inbounds ([50 x i8]* @.str13, i64 0, i64 0), i32 3387, i8* getelementptr inbounds ([16 x i8]* @__FUNCTION__.final_giv_value, i64 0, i64 0)) #7
  unreachable

if.end77:                                         ; preds = %if.end71
  %dest_reg78 = getelementptr inbounds %struct.induction* %v, i64 0, i32 4
  %30 = load %struct.rtx_def** %dest_reg78, align 8, !tbaa !0
  %call79 = tail call fastcc i32 @reg_dead_after_loop(%struct.loop* %loop, %struct.rtx_def* %30) #8
  %tobool80 = icmp eq i32 %call79, 0
  br i1 %tobool80, label %return, label %if.then81

if.then81:                                        ; preds = %if.end77
  %31 = load %struct._IO_FILE** @loop_dump_stream, align 8, !tbaa !0
  %tobool82 = icmp eq %struct._IO_FILE* %31, null
  br i1 %tobool82, label %if.end89, label %if.then83

if.then83:                                        ; preds = %if.then81
  %32 = load %struct.rtx_def** %dest_reg78, align 8, !tbaa !0
  %arrayidx86 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 1, i64 0
  %rtuint87 = bitcast %union.rtunion_def* %arrayidx86 to i32*
  %33 = load i32* %rtuint87, align 4, !tbaa !3
  %call88 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([51 x i8]* @.str35, i64 0, i64 0), i32 %33) #6
  br label %if.end89

if.end89:                                         ; preds = %if.then81, %if.then83
  %34 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  br label %return

return:                                           ; preds = %if.end77, %if.then63, %for.end60, %if.end89, %if.end
  %retval.0 = phi %struct.rtx_def* [ %11, %if.end ], [ %34, %if.end89 ], [ %tem.0.lcssa, %for.end60 ], [ %tem.0.lcssa, %if.then63 ], [ null, %if.end77 ]
  ret %struct.rtx_def* %retval.0
}
