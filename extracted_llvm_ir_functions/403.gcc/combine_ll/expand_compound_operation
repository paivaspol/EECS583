define internal fastcc %struct.rtx_def* @expand_compound_operation(%struct.rtx_def* %x) #0 {
entry:
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.then133, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %call140, %if.then133 ]
  %0 = bitcast %struct.rtx_def* %x.tr to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %return [
    i32 121, label %sw.bb
    i32 120, label %sw.bb1
    i32 133, label %sw.bb27
    i32 132, label %sw.bb28
  ]

sw.bb:                                            ; preds = %tailrecurse
  br label %sw.bb1

sw.bb1:                                           ; preds = %tailrecurse, %sw.bb
  %unsignedp.0 = phi i32 [ 0, %tailrecurse ], [ 1, %sw.bb ]
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load2 = load i32* %2, align 8
  %bf.clear3 = and i32 %bf.load2, 65535
  %cmp = icmp eq i32 %bf.clear3, 54
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %sw.bb1
  %bf.lshr = lshr i32 %bf.load2, 16
  %bf.clear8 = and i32 %bf.lshr, 255
  %idxprom569 = zext i32 %bf.clear8 to i64
  %arrayidx9 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom569
  %3 = load i8* %arrayidx9, align 1, !tbaa !1
  %conv = zext i8 %3 to i32
  %4 = load i32* @target_flags, align 4, !tbaa !0
  %and = lshr i32 %4, 23
  %5 = and i32 %and, 4
  %6 = add i32 %5, 4
  %cmp10 = icmp ugt i32 %conv, %6
  br i1 %cmp10, label %return, label %if.end13

if.end13:                                         ; preds = %if.end
  %arrayidx21 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom569
  %7 = load i16* %arrayidx21, align 2, !tbaa !5
  %conv22 = zext i16 %7 to i64
  %cmp23 = icmp eq i16 %7, 0
  br i1 %cmp23, label %return, label %sw.epilog

sw.bb27:                                          ; preds = %tailrecurse
  br label %sw.bb28

sw.bb28:                                          ; preds = %tailrecurse, %sw.bb27
  %unsignedp.1 = phi i32 [ 0, %tailrecurse ], [ 1, %sw.bb27 ]
  %fld29 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1
  %rtx31 = bitcast [1 x %union.rtunion_def]* %fld29 to %struct.rtx_def**
  %8 = load %struct.rtx_def** %rtx31, align 8, !tbaa !3
  %9 = bitcast %struct.rtx_def* %8 to i32*
  %bf.load32 = load i32* %9, align 8
  %bf.clear33 = and i32 %bf.load32, 65535
  %cmp34 = icmp eq i32 %bf.clear33, 49
  br i1 %cmp34, label %return, label %if.end40

if.end40:                                         ; preds = %sw.bb28
  %arrayidx42 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 1
  %rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx43, align 8, !tbaa !3
  %11 = bitcast %struct.rtx_def* %10 to i32*
  %bf.load44 = load i32* %11, align 8
  %bf.clear45 = and i32 %bf.load44, 65535
  %cmp46 = icmp eq i32 %bf.clear45, 54
  br i1 %cmp46, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %if.end40
  %arrayidx49 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 2
  %rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**
  %12 = load %struct.rtx_def** %rtx50, align 8, !tbaa !3
  %13 = bitcast %struct.rtx_def* %12 to i32*
  %bf.load51 = load i32* %13, align 8
  %bf.clear52 = and i32 %bf.load51, 65535
  %cmp53 = icmp eq i32 %bf.clear52, 54
  br i1 %cmp53, label %lor.lhs.false55, label %return

lor.lhs.false55:                                  ; preds = %lor.lhs.false
  %bf.lshr60 = lshr i32 %bf.load32, 16
  %bf.clear61 = and i32 %bf.lshr60, 255
  %cmp62 = icmp eq i32 %bf.clear61, 0
  br i1 %cmp62, label %return, label %if.end65

if.end65:                                         ; preds = %lor.lhs.false55
  %rtwint = getelementptr inbounds %struct.rtx_def* %10, i64 0, i32 1, i64 0, i32 0
  %14 = load i64* %rtwint, align 8, !tbaa !6
  %rtwint76 = getelementptr inbounds %struct.rtx_def* %12, i64 0, i32 1, i64 0, i32 0
  %15 = load i64* %rtwint76, align 8, !tbaa !6
  %add = add i64 %15, %14
  %idxprom83557 = zext i32 %bf.clear61 to i64
  %arrayidx84 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom83557
  %16 = load i16* %arrayidx84, align 2, !tbaa !5
  %conv85 = zext i16 %16 to i64
  %cmp86 = icmp ugt i64 %add, %conv85
  br i1 %cmp86, label %if.then88, label %sw.epilog

if.then88:                                        ; preds = %if.end65
  %bf.lshr93 = lshr i32 %bf.load, 16
  %bf.clear94 = and i32 %bf.lshr93, 255
  %call = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 48, i32 %bf.clear94, %struct.rtx_def* %8) #6
  tail call fastcc void @do_SUBST(%struct.rtx_def** %rtx31, %struct.rtx_def* %call) #7
  %bf.load99.pre = load i32* %0, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end65, %if.then88, %if.end13
  %bf.load99 = phi i32 [ %bf.load99.pre, %if.then88 ], [ %bf.load, %if.end65 ], [ %bf.load, %if.end13 ]
  %len.0 = phi i64 [ %14, %if.then88 ], [ %14, %if.end65 ], [ %conv22, %if.end13 ]
  %unsignedp.2 = phi i32 [ %unsignedp.1, %if.then88 ], [ %unsignedp.1, %if.end65 ], [ %unsignedp.0, %if.end13 ]
  %pos.0 = phi i64 [ %15, %if.then88 ], [ %15, %if.end65 ], [ 0, %if.end13 ]
  %bf.clear100 = and i32 %bf.load99, 65535
  %cmp101 = icmp eq i32 %bf.clear100, 120
  br i1 %cmp101, label %land.lhs.true, label %if.end142

land.lhs.true:                                    ; preds = %sw.epilog
  %bf.lshr104 = lshr i32 %bf.load99, 16
  %bf.clear105 = and i32 %bf.lshr104, 255
  %idxprom106567 = zext i32 %bf.clear105 to i64
  %arrayidx107 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom106567
  %17 = load i16* %arrayidx107, align 2, !tbaa !5
  %cmp109 = icmp ult i16 %17, 65
  br i1 %cmp109, label %land.lhs.true111, label %if.end142

land.lhs.true111:                                 ; preds = %land.lhs.true
  %arrayidx113 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0
  %rtx114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtx_def**
  %18 = load %struct.rtx_def** %rtx114, align 8, !tbaa !3
  %19 = bitcast %struct.rtx_def* %18 to i32*
  %bf.load118 = load i32* %19, align 8
  %bf.lshr119 = lshr i32 %bf.load118, 16
  %bf.clear120 = and i32 %bf.lshr119, 255
  %call121 = tail call fastcc i64 @nonzero_bits(%struct.rtx_def* %18, i32 %bf.clear120) #7
  %20 = load %struct.rtx_def** %rtx114, align 8, !tbaa !3
  %21 = bitcast %struct.rtx_def* %20 to i32*
  %bf.load125 = load i32* %21, align 8
  %bf.lshr126 = lshr i32 %bf.load125, 16
  %bf.clear127 = and i32 %bf.lshr126, 255
  %idxprom128568 = zext i32 %bf.clear127 to i64
  %arrayidx129 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom128568
  %22 = load i64* %arrayidx129, align 8, !tbaa !6
  %shr = lshr i64 %22, 1
  %neg = xor i64 %shr, -1
  %and130 = and i64 %call121, %neg
  %cmp131 = icmp eq i64 %and130, 0
  %bf.load134 = load i32* %0, align 8
  br i1 %cmp131, label %if.then133, label %if.end142

if.then133:                                       ; preds = %land.lhs.true111
  %bf.lshr135 = lshr i32 %bf.load134, 16
  %bf.clear136 = and i32 %bf.lshr135, 255
  %call140 = tail call %struct.rtx_def* @gen_rtx_fmt_e(i32 121, i32 %bf.clear136, %struct.rtx_def* %20) #6
  br label %tailrecurse

if.end142:                                        ; preds = %land.lhs.true111, %land.lhs.true, %sw.epilog
  %bf.load143 = phi i32 [ %bf.load99, %land.lhs.true ], [ %bf.load99, %sw.epilog ], [ %bf.load134, %land.lhs.true111 ]
  %bf.clear144 = and i32 %bf.load143, 65535
  %cmp145 = icmp eq i32 %bf.clear144, 121
  br i1 %cmp145, label %if.then147, label %if.end422

if.then147:                                       ; preds = %if.end142
  %arrayidx149 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0
  %rtx150 = bitcast %union.rtunion_def* %arrayidx149 to %struct.rtx_def**
  %23 = load %struct.rtx_def** %rtx150, align 8, !tbaa !3
  %24 = bitcast %struct.rtx_def* %23 to i32*
  %bf.load151 = load i32* %24, align 8
  %bf.clear152 = and i32 %bf.load151, 65535
  %cmp153 = icmp eq i32 %bf.clear152, 122
  br i1 %cmp153, label %land.lhs.true155, label %if.end209

land.lhs.true155:                                 ; preds = %if.then147
  %arrayidx160 = getelementptr inbounds %struct.rtx_def* %23, i64 0, i32 1, i64 0
  %rtx161 = bitcast %union.rtunion_def* %arrayidx160 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx161, align 8, !tbaa !3
  %26 = bitcast %struct.rtx_def* %25 to i32*
  %bf.load162 = load i32* %26, align 8
  %bf.lshr163 = lshr i32 %bf.load162, 16
  %bf.clear164 = and i32 %bf.lshr163, 255
  %bf.lshr166 = lshr i32 %bf.load143, 16
  %bf.clear167 = and i32 %bf.lshr166, 255
  %cmp168 = icmp eq i32 %bf.clear164, %bf.clear167
  br i1 %cmp168, label %land.lhs.true170, label %if.end209

land.lhs.true170:                                 ; preds = %land.lhs.true155
  %idxprom174565 = zext i32 %bf.clear164 to i64
  %arrayidx175 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom174565
  %27 = load i16* %arrayidx175, align 2, !tbaa !5
  %cmp177 = icmp ult i16 %27, 65
  br i1 %cmp177, label %land.lhs.true179, label %if.end209

land.lhs.true179:                                 ; preds = %land.lhs.true170
  %call189 = tail call fastcc i64 @nonzero_bits(%struct.rtx_def* %25, i32 %bf.clear164) #7
  %28 = load %struct.rtx_def** %rtx150, align 8, !tbaa !3
  %29 = bitcast %struct.rtx_def* %28 to i32*
  %bf.load193 = load i32* %29, align 8
  %bf.lshr194 = lshr i32 %bf.load193, 16
  %bf.clear195 = and i32 %bf.lshr194, 255
  %idxprom196566 = zext i32 %bf.clear195 to i64
  %arrayidx197 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom196566
  %30 = load i64* %arrayidx197, align 8, !tbaa !6
  %neg198 = xor i64 %30, -1
  %and199 = and i64 %call189, %neg198
  %cmp200 = icmp eq i64 %and199, 0
  br i1 %cmp200, label %if.then202, label %if.end209

if.then202:                                       ; preds = %land.lhs.true179
  %arrayidx207 = getelementptr inbounds %struct.rtx_def* %28, i64 0, i32 1, i64 0
  %rtx208 = bitcast %union.rtunion_def* %arrayidx207 to %struct.rtx_def**
  %31 = load %struct.rtx_def** %rtx208, align 8, !tbaa !3
  br label %return

if.end209:                                        ; preds = %land.lhs.true179, %land.lhs.true170, %land.lhs.true155, %if.then147
  %bf.load213 = phi i32 [ %bf.load193, %land.lhs.true179 ], [ %bf.load151, %land.lhs.true170 ], [ %bf.load151, %land.lhs.true155 ], [ %bf.load151, %if.then147 ]
  %32 = phi %struct.rtx_def* [ %28, %land.lhs.true179 ], [ %23, %land.lhs.true170 ], [ %23, %land.lhs.true155 ], [ %23, %if.then147 ]
  %bf.clear214 = and i32 %bf.load213, 65535
  %cmp215 = icmp eq i32 %bf.clear214, 63
  br i1 %cmp215, label %land.lhs.true217, label %if.end277

land.lhs.true217:                                 ; preds = %if.end209
  %arrayidx222 = getelementptr inbounds %struct.rtx_def* %32, i64 0, i32 1, i64 0
  %rtx223 = bitcast %union.rtunion_def* %arrayidx222 to %struct.rtx_def**
  %33 = load %struct.rtx_def** %rtx223, align 8, !tbaa !3
  %34 = bitcast %struct.rtx_def* %33 to i32*
  %bf.load224 = load i32* %34, align 8
  %bf.load227 = load i32* %0, align 8
  %bf.lshr225572 = xor i32 %bf.load227, %bf.load224
  %35 = and i32 %bf.lshr225572, 16711680
  %cmp230 = icmp eq i32 %35, 0
  br i1 %cmp230, label %land.lhs.true232, label %if.end277

land.lhs.true232:                                 ; preds = %land.lhs.true217
  %call236 = tail call i32 @subreg_lowpart_p(%struct.rtx_def* %32) #6
  %tobool237 = icmp eq i32 %call236, 0
  br i1 %tobool237, label %if.end277, label %land.lhs.true238

land.lhs.true238:                                 ; preds = %land.lhs.true232
  %bf.load239 = load i32* %0, align 8
  %bf.lshr240 = lshr i32 %bf.load239, 16
  %bf.clear241 = and i32 %bf.lshr240, 255
  %idxprom242563 = zext i32 %bf.clear241 to i64
  %arrayidx243 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom242563
  %36 = load i16* %arrayidx243, align 2, !tbaa !5
  %cmp245 = icmp ult i16 %36, 65
  br i1 %cmp245, label %land.lhs.true247, label %if.end277

land.lhs.true247:                                 ; preds = %land.lhs.true238
  %37 = load %struct.rtx_def** %rtx150, align 8, !tbaa !3
  %arrayidx252 = getelementptr inbounds %struct.rtx_def* %37, i64 0, i32 1, i64 0
  %rtx253 = bitcast %union.rtunion_def* %arrayidx252 to %struct.rtx_def**
  %38 = load %struct.rtx_def** %rtx253, align 8, !tbaa !3
  %call257 = tail call fastcc i64 @nonzero_bits(%struct.rtx_def* %38, i32 %bf.clear241) #7
  %39 = load %struct.rtx_def** %rtx150, align 8, !tbaa !3
  %40 = bitcast %struct.rtx_def* %39 to i32*
  %bf.load261 = load i32* %40, align 8
  %bf.lshr262 = lshr i32 %bf.load261, 16
  %bf.clear263 = and i32 %bf.lshr262, 255
  %idxprom264564 = zext i32 %bf.clear263 to i64
  %arrayidx265 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom264564
  %41 = load i64* %arrayidx265, align 8, !tbaa !6
  %neg266 = xor i64 %41, -1
  %and267 = and i64 %call257, %neg266
  %cmp268 = icmp eq i64 %and267, 0
  br i1 %cmp268, label %if.then270, label %if.end277

if.then270:                                       ; preds = %land.lhs.true247
  %arrayidx275 = getelementptr inbounds %struct.rtx_def* %39, i64 0, i32 1, i64 0
  %rtx276 = bitcast %union.rtunion_def* %arrayidx275 to %struct.rtx_def**
  %42 = load %struct.rtx_def** %rtx276, align 8, !tbaa !3
  br label %return

if.end277:                                        ; preds = %land.lhs.true238, %land.lhs.true232, %land.lhs.true247, %land.lhs.true217, %if.end209
  %43 = load %struct.rtx_def** %rtx150, align 8, !tbaa !3
  %44 = bitcast %struct.rtx_def* %43 to i32*
  %bf.load281 = load i32* %44, align 8
  %bf.clear282 = and i32 %bf.load281, 65535
  switch i32 %bf.clear282, label %if.end422 [
    i32 122, label %land.lhs.true285
    i32 63, label %land.lhs.true354
  ]

land.lhs.true285:                                 ; preds = %if.end277
  %arrayidx290 = getelementptr inbounds %struct.rtx_def* %43, i64 0, i32 1, i64 0
  %rtx291 = bitcast %union.rtunion_def* %arrayidx290 to %struct.rtx_def**
  %45 = load %struct.rtx_def** %rtx291, align 8, !tbaa !3
  %46 = bitcast %struct.rtx_def* %45 to i32*
  %bf.load292 = load i32* %46, align 8
  %bf.load295 = load i32* %0, align 8
  %bf.lshr293571 = xor i32 %bf.load295, %bf.load292
  %47 = and i32 %bf.lshr293571, 16711680
  %cmp298 = icmp eq i32 %47, 0
  br i1 %cmp298, label %land.lhs.true300, label %if.end422

land.lhs.true300:                                 ; preds = %land.lhs.true285
  %bf.clear308 = and i32 %bf.load292, 65535
  %idxprom309561 = zext i32 %bf.clear308 to i64
  %arrayidx310 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom309561
  %48 = load i8* %arrayidx310, align 1, !tbaa !1
  %cmp312 = icmp eq i8 %48, 60
  br i1 %cmp312, label %land.lhs.true314, label %if.end346

land.lhs.true314:                                 ; preds = %land.lhs.true300
  %bf.lshr319 = lshr i32 %bf.load281, 16
  %bf.clear320 = and i32 %bf.lshr319, 255
  %idxprom321562 = zext i32 %bf.clear320 to i64
  %arrayidx322 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom321562
  %49 = load i16* %arrayidx322, align 2, !tbaa !5
  %cmp324 = icmp ult i16 %49, 65
  br i1 %cmp324, label %land.lhs.true326, label %if.end346

land.lhs.true326:                                 ; preds = %land.lhs.true314
  %arrayidx334 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom321562
  %50 = load i64* %arrayidx334, align 8, !tbaa !6
  %neg335 = and i64 %50, 1
  %cmp337 = icmp eq i64 %neg335, 0
  br i1 %cmp337, label %if.end346, label %return

if.end346:                                        ; preds = %land.lhs.true326, %land.lhs.true314, %land.lhs.true300
  %cmp352 = icmp eq i32 %bf.clear282, 63
  br i1 %cmp352, label %land.lhs.true354, label %if.end422

land.lhs.true354:                                 ; preds = %if.end277, %if.end346
  %arrayidx359 = getelementptr inbounds %struct.rtx_def* %43, i64 0, i32 1, i64 0
  %rtx360 = bitcast %union.rtunion_def* %arrayidx359 to %struct.rtx_def**
  %51 = load %struct.rtx_def** %rtx360, align 8, !tbaa !3
  %52 = bitcast %struct.rtx_def* %51 to i32*
  %bf.load361 = load i32* %52, align 8
  %bf.load364 = load i32* %0, align 8
  %bf.lshr362570 = xor i32 %bf.load364, %bf.load361
  %53 = and i32 %bf.lshr362570, 16711680
  %cmp367 = icmp eq i32 %53, 0
  br i1 %cmp367, label %land.lhs.true369, label %if.end422

land.lhs.true369:                                 ; preds = %land.lhs.true354
  %call373 = tail call i32 @subreg_lowpart_p(%struct.rtx_def* %43) #6
  %tobool374 = icmp eq i32 %call373, 0
  br i1 %tobool374, label %if.end422, label %land.lhs.true375

land.lhs.true375:                                 ; preds = %land.lhs.true369
  %54 = load %struct.rtx_def** %rtx150, align 8, !tbaa !3
  %arrayidx380 = getelementptr inbounds %struct.rtx_def* %54, i64 0, i32 1, i64 0
  %rtx381 = bitcast %union.rtunion_def* %arrayidx380 to %struct.rtx_def**
  %55 = load %struct.rtx_def** %rtx381, align 8, !tbaa !3
  %56 = bitcast %struct.rtx_def* %55 to i32*
  %bf.load382 = load i32* %56, align 8
  %bf.clear383 = and i32 %bf.load382, 65535
  %idxprom384559 = zext i32 %bf.clear383 to i64
  %arrayidx385 = getelementptr inbounds [153 x i8]* @rtx_class, i64 0, i64 %idxprom384559
  %57 = load i8* %arrayidx385, align 1, !tbaa !1
  %cmp387 = icmp eq i8 %57, 60
  br i1 %cmp387, label %land.lhs.true389, label %if.end422

land.lhs.true389:                                 ; preds = %land.lhs.true375
  %58 = bitcast %struct.rtx_def* %54 to i32*
  %bf.load393 = load i32* %58, align 8
  %bf.lshr394 = lshr i32 %bf.load393, 16
  %bf.clear395 = and i32 %bf.lshr394, 255
  %idxprom396560 = zext i32 %bf.clear395 to i64
  %arrayidx397 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom396560
  %59 = load i16* %arrayidx397, align 2, !tbaa !5
  %cmp399 = icmp ult i16 %59, 65
  br i1 %cmp399, label %land.lhs.true401, label %if.end422

land.lhs.true401:                                 ; preds = %land.lhs.true389
  %arrayidx409 = getelementptr inbounds [59 x i64]* @mode_mask_array, i64 0, i64 %idxprom396560
  %60 = load i64* %arrayidx409, align 8, !tbaa !6
  %neg410 = and i64 %60, 1
  %cmp412 = icmp eq i64 %neg410, 0
  br i1 %cmp412, label %if.end422, label %return

if.end422:                                        ; preds = %if.end277, %land.lhs.true285, %land.lhs.true401, %land.lhs.true389, %land.lhs.true375, %land.lhs.true369, %if.end346, %land.lhs.true354, %if.end142
  %bf.load423 = load i32* %0, align 8
  %bf.lshr424 = lshr i32 %bf.load423, 16
  %bf.clear425 = and i32 %bf.lshr424, 255
  %idxprom426558 = zext i32 %bf.clear425 to i64
  %arrayidx427 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom426558
  %61 = load i16* %arrayidx427, align 2, !tbaa !5
  %conv429 = zext i16 %61 to i64
  %add430 = add i64 %conv429, %len.0
  %cmp431 = icmp ult i64 %add430, %pos.0
  %tobool434 = icmp ne i32 %unsignedp.2, 0
  br i1 %cmp431, label %if.else, label %if.then433

if.then433:                                       ; preds = %if.end422
  %cond435 = select i1 %tobool434, i32 90, i32 89
  %arrayidx443 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0
  %rtx444 = bitcast %union.rtunion_def* %arrayidx443 to %struct.rtx_def**
  %62 = load %struct.rtx_def** %rtx444, align 8, !tbaa !3
  %sum = add i64 %pos.0, %len.0
  %sub446 = sub i64 %conv429, %sum
  %conv447 = trunc i64 %sub446 to i32
  %call448 = tail call fastcc %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 87, i32 %bf.clear425, %struct.rtx_def* %62, i32 %conv447) #7
  %sub450 = sub i64 %conv429, %len.0
  %conv451 = trunc i64 %sub450 to i32
  %call452 = tail call fastcc %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 %cond435, i32 %bf.clear425, %struct.rtx_def* %call448, i32 %conv451) #7
  br label %if.end473

if.else:                                          ; preds = %if.end422
  %cmp455 = icmp ult i64 %len.0, 64
  %or.cond = and i1 %tobool434, %cmp455
  br i1 %or.cond, label %if.then457, label %return

if.then457:                                       ; preds = %if.else
  %arrayidx465 = getelementptr inbounds %struct.rtx_def* %x.tr, i64 0, i32 1, i64 0
  %rtx466 = bitcast %union.rtunion_def* %arrayidx465 to %struct.rtx_def**
  %63 = load %struct.rtx_def** %rtx466, align 8, !tbaa !3
  %conv467 = trunc i64 %pos.0 to i32
  %call468 = tail call fastcc %struct.rtx_def* @simplify_shift_const(%struct.rtx_def* null, i32 90, i32 %bf.clear425, %struct.rtx_def* %63, i32 %conv467) #7
  %shl = shl i64 1, %len.0
  %sub469 = add nsw i64 %shl, -1
  %call470 = tail call fastcc %struct.rtx_def* @simplify_and_const_int(%struct.rtx_def* null, i32 %bf.clear425, %struct.rtx_def* %call468, i64 %sub469) #7
  br label %if.end473

if.end473:                                        ; preds = %if.then457, %if.then433
  %tem.0 = phi %struct.rtx_def* [ %call452, %if.then433 ], [ %call470, %if.then457 ]
  %64 = bitcast %struct.rtx_def* %tem.0 to i32*
  %bf.load474 = load i32* %64, align 8
  %bf.clear475 = and i32 %bf.load474, 65535
  %cmp476 = icmp eq i32 %bf.clear475, 49
  %x.tem.0 = select i1 %cmp476, %struct.rtx_def* %x.tr, %struct.rtx_def* %tem.0
  br label %return

return:                                           ; preds = %tailrecurse, %lor.lhs.false55, %if.end40, %lor.lhs.false, %sw.bb28, %if.end13, %if.end, %sw.bb1, %if.end473, %if.else, %land.lhs.true401, %land.lhs.true326, %if.then270, %if.then202
  %retval.0 = phi %struct.rtx_def* [ %31, %if.then202 ], [ %42, %if.then270 ], [ %45, %land.lhs.true326 ], [ %55, %land.lhs.true401 ], [ %x.tr, %if.else ], [ %x.tem.0, %if.end473 ], [ %x.tr, %tailrecurse ], [ %x.tr, %lor.lhs.false55 ], [ %x.tr, %if.end40 ], [ %x.tr, %lor.lhs.false ], [ %8, %sw.bb28 ], [ %x.tr, %if.end13 ], [ %x.tr, %if.end ], [ %x.tr, %sw.bb1 ]
  ret %struct.rtx_def* %retval.0
}
