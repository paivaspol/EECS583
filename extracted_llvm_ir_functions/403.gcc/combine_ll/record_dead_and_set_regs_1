define internal void @record_dead_and_set_regs_1(%struct.rtx_def* %dest, %struct.rtx_def* nocapture %setter, i8* %data) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %dest}, i64 0, metadata !596), !dbg !2727
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %setter}, i64 0, metadata !597), !dbg !2727
  tail call void @llvm.dbg.value(metadata !{i8* %data}, i64 0, metadata !598), !dbg !2728
  %0 = bitcast i8* %data to %struct.rtx_def*, !dbg !2729
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %0}, i64 0, metadata !599), !dbg !2729
  %1 = bitcast %struct.rtx_def* %dest to i32*, !dbg !2730
  %bf.load = load i32* %1, align 8, !dbg !2730
  %bf.clear = and i32 %bf.load, 65535, !dbg !2730
  %cmp = icmp eq i32 %bf.clear, 63, !dbg !2730
  br i1 %cmp, label %if.then, label %if.end, !dbg !2730

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %dest, i64 0, i32 1, i64 0, !dbg !2731
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2731
  %2 = load %struct.rtx_def** %rtx, align 8, !dbg !2731, !tbaa !1685
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %2}, i64 0, metadata !596), !dbg !2731
  %.phi.trans.insert = bitcast %struct.rtx_def* %2 to i32*
  %bf.load1.pre = load i32* %.phi.trans.insert, align 8, !dbg !2732
  br label %if.end, !dbg !2731

if.end:                                           ; preds = %if.then, %entry
  %bf.load35 = phi i32 [ %bf.load1.pre, %if.then ], [ %bf.load, %entry ]
  %dest.addr.0 = phi %struct.rtx_def* [ %2, %if.then ], [ %dest, %entry ]
  %3 = bitcast %struct.rtx_def* %dest.addr.0 to i32*, !dbg !2732
  %bf.clear2 = and i32 %bf.load35, 65535, !dbg !2732
  switch i32 %bf.clear2, label %if.end80 [
    i32 61, label %if.then4
    i32 66, label %land.lhs.true61
  ], !dbg !2732

if.then4:                                         ; preds = %if.end
  %4 = bitcast %struct.rtx_def* %setter to i32*, !dbg !2733
  %bf.load5 = load i32* %4, align 8, !dbg !2733
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !2733
  %cmp7 = icmp eq i32 %bf.clear6, 47, !dbg !2733
  br i1 %cmp7, label %land.lhs.true, label %if.else53, !dbg !2733

land.lhs.true:                                    ; preds = %if.then4
  %fld8 = getelementptr inbounds %struct.rtx_def* %setter, i64 0, i32 1, !dbg !2733
  %rtx10 = bitcast [1 x %union.rtunion_def]* %fld8 to %struct.rtx_def**, !dbg !2733
  %5 = load %struct.rtx_def** %rtx10, align 8, !dbg !2733, !tbaa !1685
  %cmp11 = icmp eq %struct.rtx_def* %dest.addr.0, %5, !dbg !2733
  br i1 %cmp11, label %if.then12, label %land.lhs.true19, !dbg !2733

if.then12:                                        ; preds = %land.lhs.true
  %arrayidx14 = getelementptr inbounds %struct.rtx_def* %setter, i64 0, i32 1, i64 1, !dbg !2735
  %rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !2735
  %6 = load %struct.rtx_def** %rtx15, align 8, !dbg !2735, !tbaa !1685
  tail call fastcc void @record_value_for_reg(%struct.rtx_def* %dest.addr.0, %struct.rtx_def* %0, %struct.rtx_def* %6) #8, !dbg !2735
  br label %if.end80, !dbg !2735

land.lhs.true19:                                  ; preds = %land.lhs.true
  %fld20 = getelementptr inbounds %struct.rtx_def* %setter, i64 0, i32 1, !dbg !2736
  %rtx22 = bitcast [1 x %union.rtunion_def]* %fld20 to %struct.rtx_def**, !dbg !2736
  %7 = load %struct.rtx_def** %rtx22, align 8, !dbg !2736, !tbaa !1685
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !2736
  %bf.load23 = load i32* %8, align 8, !dbg !2736
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !2736
  %cmp25 = icmp eq i32 %bf.clear24, 63, !dbg !2736
  br i1 %cmp25, label %land.lhs.true26, label %if.else53, !dbg !2736

land.lhs.true26:                                  ; preds = %land.lhs.true19
  %arrayidx31 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 0, !dbg !2736
  %rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !2736
  %9 = load %struct.rtx_def** %rtx32, align 8, !dbg !2736, !tbaa !1685
  %cmp33 = icmp eq %struct.rtx_def* %9, %dest.addr.0, !dbg !2736
  br i1 %cmp33, label %land.lhs.true34, label %if.else53, !dbg !2736

land.lhs.true34:                                  ; preds = %land.lhs.true26
  %bf.lshr = lshr i32 %bf.load35, 16, !dbg !2736
  %bf.clear36 = and i32 %bf.lshr, 255, !dbg !2736
  %idxprom104 = zext i32 %bf.clear36 to i64, !dbg !2736
  %arrayidx37 = getelementptr inbounds [59 x i16]* @mode_bitsize, i64 0, i64 %idxprom104, !dbg !2736
  %10 = load i16* %arrayidx37, align 2, !dbg !2736, !tbaa !1811
  %conv = zext i16 %10 to i32, !dbg !2736
  %11 = load i32* @target_flags, align 4, !dbg !2736, !tbaa !1676
  %and = lshr i32 %11, 20, !dbg !2736
  %12 = and i32 %and, 32, !dbg !2736
  %13 = add i32 %12, 32, !dbg !2736
  %cmp38 = icmp ugt i32 %conv, %13, !dbg !2736
  br i1 %cmp38, label %if.else53, label %land.lhs.true40, !dbg !2736

land.lhs.true40:                                  ; preds = %land.lhs.true34
  %call = tail call i32 @subreg_lowpart_p(%struct.rtx_def* %7) #7, !dbg !2737
  %tobool44 = icmp eq i32 %call, 0, !dbg !2737
  br i1 %tobool44, label %if.else53, label %if.then45, !dbg !2737

if.then45:                                        ; preds = %land.lhs.true40
  %bf.load46 = load i32* %3, align 8, !dbg !2738
  %bf.lshr47 = lshr i32 %bf.load46, 16, !dbg !2738
  %bf.clear48 = and i32 %bf.lshr47, 255, !dbg !2738
  %arrayidx50 = getelementptr inbounds %struct.rtx_def* %setter, i64 0, i32 1, i64 1, !dbg !2738
  %rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**, !dbg !2738
  %14 = load %struct.rtx_def** %rtx51, align 8, !dbg !2738, !tbaa !1685
  %call52 = tail call fastcc %struct.rtx_def* @gen_lowpart_for_combine(i32 %bf.clear48, %struct.rtx_def* %14) #8, !dbg !2738
  tail call fastcc void @record_value_for_reg(%struct.rtx_def* %dest.addr.0, %struct.rtx_def* %0, %struct.rtx_def* %call52) #8, !dbg !2738
  br label %if.end80, !dbg !2738

if.else53:                                        ; preds = %if.then4, %land.lhs.true40, %land.lhs.true34, %land.lhs.true26, %land.lhs.true19
  tail call fastcc void @record_value_for_reg(%struct.rtx_def* %dest.addr.0, %struct.rtx_def* %0, %struct.rtx_def* null) #8, !dbg !2739
  br label %if.end80

land.lhs.true61:                                  ; preds = %if.end
  %bf.lshr63 = lshr i32 %bf.load35, 16, !dbg !2740
  %bf.clear64 = and i32 %bf.lshr63, 255, !dbg !2740
  %call65 = tail call i32 @push_operand(%struct.rtx_def* %dest.addr.0, i32 %bf.clear64) #7, !dbg !2740
  %tobool66 = icmp eq i32 %call65, 0, !dbg !2740
  br i1 %tobool66, label %if.then67, label %if.end80, !dbg !2740

if.then67:                                        ; preds = %land.lhs.true61
  %fld68 = getelementptr inbounds i8* %data, i64 8, !dbg !2741
  %rtint = bitcast i8* %fld68 to i32*, !dbg !2741
  %15 = load i32* %rtint, align 4, !dbg !2741, !tbaa !1676
  %16 = load i32* @max_uid_cuid, align 4, !dbg !2741, !tbaa !1676
  %cmp70 = icmp sgt i32 %15, %16, !dbg !2741
  br i1 %cmp70, label %cond.true, label %cond.false, !dbg !2741

cond.true:                                        ; preds = %if.then67
  %call72 = tail call fastcc i32 @insn_cuid(%struct.rtx_def* %0) #8, !dbg !2741
  br label %cond.end, !dbg !2741

cond.false:                                       ; preds = %if.then67
  %idxprom76 = sext i32 %15 to i64, !dbg !2741
  %17 = load i32** @uid_cuid, align 8, !dbg !2741, !tbaa !1685
  %arrayidx77 = getelementptr inbounds i32* %17, i64 %idxprom76, !dbg !2741
  %18 = load i32* %arrayidx77, align 4, !dbg !2741, !tbaa !1676
  br label %cond.end, !dbg !2741

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond78 = phi i32 [ %call72, %cond.true ], [ %18, %cond.false ], !dbg !2741
  store i32 %cond78, i32* @mem_last_set, align 4, !dbg !2741, !tbaa !1676
  br label %if.end80, !dbg !2741

if.end80:                                         ; preds = %if.end, %land.lhs.true61, %cond.end, %if.then12, %if.else53, %if.then45
  ret void, !dbg !2742
}
