define internal fastcc i32 @recog_for_combine(%struct.rtx_def** nocapture %pnewpat, %struct.rtx_def* %insn, %struct.rtx_def** nocapture %pnotes) #0 {
entry:
  %num_clobbers_to_add = alloca i32, align 4
  %0 = load %struct.rtx_def** %pnewpat, align 8, !tbaa !3
  store i32 0, i32* %num_clobbers_to_add, align 4, !tbaa !0
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 39
  br i1 %cmp, label %if.then, label %if.end19

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**
  %2 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !3
  %num_elem = getelementptr inbounds %struct.rtvec_def* %2, i64 0, i32 0
  %3 = load i32* %num_elem, align 4, !tbaa !0
  %cmp1302 = icmp sgt i32 %3, 0
  br i1 %cmp1302, label %for.body.lr.ph, label %if.end19

for.body.lr.ph:                                   ; preds = %if.then
  %4 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !3
  %5 = sext i32 %3 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv314 = phi i64 [ %5, %for.body.lr.ph ], [ %indvars.iv.next315, %for.cond.backedge ]
  %indvars.iv.next315 = add i64 %indvars.iv314, -1
  %arrayidx5 = getelementptr inbounds %struct.rtvec_def* %2, i64 0, i32 1, i64 %indvars.iv.next315
  %6 = load %struct.rtx_def** %arrayidx5, align 8, !tbaa !3
  %7 = bitcast %struct.rtx_def* %6 to i32*
  %bf.load6 = load i32* %7, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  %cmp8 = icmp eq i32 %bf.clear7, 49
  br i1 %cmp8, label %land.lhs.true, label %for.cond.backedge

for.cond.backedge:                                ; preds = %for.body, %land.lhs.true
  %8 = trunc i64 %indvars.iv.next315 to i32
  %cmp1 = icmp sgt i32 %8, 0
  br i1 %cmp1, label %for.body, label %if.end19

land.lhs.true:                                    ; preds = %for.body
  %arrayidx16 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**
  %9 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  %cmp17 = icmp eq %struct.rtx_def* %9, %4
  br i1 %cmp17, label %return, label %for.cond.backedge

if.end19:                                         ; preds = %if.then, %for.cond.backedge, %entry
  %call = call %struct.rtx_def* @shallow_copy_rtx(%struct.rtx_def* %insn) #6
  %10 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 3, i32 0
  %.c = ptrtoint %struct.rtx_def* %0 to i64
  store i64 %.c, i64* %10, align 8, !tbaa !3
  %11 = getelementptr inbounds %struct.rtx_def* %call, i64 0, i32 1, i64 6, i32 0
  store i64 0, i64* %11, align 8, !tbaa !3
  %call26 = call i32 @recog(%struct.rtx_def* %0, %struct.rtx_def* %call, i32* %num_clobbers_to_add) #6
  %cmp27 = icmp slt i32 %call26, 0
  br i1 %cmp27, label %land.lhs.true28, label %if.end97

land.lhs.true28:                                  ; preds = %if.end19
  %call29 = call i32 @check_asm_operands(%struct.rtx_def* %0) #6
  %tobool = icmp eq i32 %call29, 0
  br i1 %tobool, label %land.lhs.true30, label %land.lhs.true89

land.lhs.true30:                                  ; preds = %land.lhs.true28
  %bf.load31 = load i32* %1, align 8
  %bf.clear32 = and i32 %bf.load31, 65535
  %cmp33 = icmp eq i32 %bf.clear32, 39
  br i1 %cmp33, label %for.cond35.preheader, label %land.lhs.true89

for.cond35.preheader:                             ; preds = %land.lhs.true30
  %arrayidx37 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0
  %rtvec38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtvec_def**
  %12 = load %struct.rtvec_def** %rtvec38, align 8, !tbaa !3
  %num_elem39291 = getelementptr inbounds %struct.rtvec_def* %12, i64 0, i32 0
  %13 = load i32* %num_elem39291, align 4, !tbaa !0
  %cmp40292 = icmp sgt i32 %13, 0
  br i1 %cmp40292, label %for.body41, label %for.end70

for.body41:                                       ; preds = %for.cond35.preheader, %for.inc68
  %indvars.iv312 = phi i64 [ %indvars.iv.next313, %for.inc68 ], [ 0, %for.cond35.preheader ]
  %14 = phi %struct.rtvec_def* [ %18, %for.inc68 ], [ %12, %for.cond35.preheader ]
  %pos.0294 = phi i32 [ %pos.1, %for.inc68 ], [ 0, %for.cond35.preheader ]
  %arrayidx47 = getelementptr inbounds %struct.rtvec_def* %14, i64 0, i32 1, i64 %indvars.iv312
  %15 = load %struct.rtx_def** %arrayidx47, align 8, !tbaa !3
  %16 = bitcast %struct.rtx_def* %15 to i32*
  %bf.load48 = load i32* %16, align 8
  %bf.clear49 = and i32 %bf.load48, 65535
  %cmp50 = icmp eq i32 %bf.clear49, 49
  br i1 %cmp50, label %for.inc68, label %if.then51

if.then51:                                        ; preds = %for.body41
  %17 = trunc i64 %indvars.iv312 to i32
  %cmp52 = icmp eq i32 %17, %pos.0294
  br i1 %cmp52, label %if.end66, label %if.then53

if.then53:                                        ; preds = %if.then51
  %idxprom54 = sext i32 %pos.0294 to i64
  %arrayidx59 = getelementptr inbounds %struct.rtvec_def* %14, i64 0, i32 1, i64 %idxprom54
  call fastcc void @do_SUBST(%struct.rtx_def** %arrayidx59, %struct.rtx_def* %15) #7
  %.pre.pre = load %struct.rtvec_def** %rtvec38, align 8, !tbaa !3
  br label %if.end66

if.end66:                                         ; preds = %if.then51, %if.then53
  %.pre = phi %struct.rtvec_def* [ %14, %if.then51 ], [ %.pre.pre, %if.then53 ]
  %inc = add nsw i32 %pos.0294, 1
  br label %for.inc68

for.inc68:                                        ; preds = %for.body41, %if.end66
  %18 = phi %struct.rtvec_def* [ %.pre, %if.end66 ], [ %14, %for.body41 ]
  %pos.1 = phi i32 [ %inc, %if.end66 ], [ %pos.0294, %for.body41 ]
  %indvars.iv.next313 = add i64 %indvars.iv312, 1
  %num_elem39 = getelementptr inbounds %struct.rtvec_def* %18, i64 0, i32 0
  %19 = load i32* %num_elem39, align 4, !tbaa !0
  %20 = trunc i64 %indvars.iv.next313 to i32
  %cmp40 = icmp slt i32 %20, %19
  br i1 %cmp40, label %for.body41, label %for.end70

for.end70:                                        ; preds = %for.inc68, %for.cond35.preheader
  %.lcssa290 = phi i32 [ %13, %for.cond35.preheader ], [ %19, %for.inc68 ]
  %num_elem39.lcssa = phi i32* [ %num_elem39291, %for.cond35.preheader ], [ %num_elem39, %for.inc68 ]
  %.lcssa = phi %struct.rtvec_def* [ %12, %for.cond35.preheader ], [ %18, %for.inc68 ]
  %pos.0.lcssa = phi i32 [ 0, %for.cond35.preheader ], [ %pos.1, %for.inc68 ]
  %cmp.i = icmp eq i32 %.lcssa290, %pos.0.lcssa
  br i1 %cmp.i, label %do_SUBST_INT.exit, label %if.end.i

if.end.i:                                         ; preds = %for.end70
  %21 = load %struct.undo** getelementptr inbounds (%struct.undobuf* @undobuf, i64 0, i32 1), align 8, !tbaa !3
  %tobool.i = icmp eq %struct.undo* %21, null
  br i1 %tobool.i, label %if.else.i, label %if.then1.i

if.then1.i:                                       ; preds = %if.end.i
  %next.i = getelementptr inbounds %struct.undo* %21, i64 0, i32 0
  %22 = load %struct.undo** %next.i, align 8, !tbaa !3
  store %struct.undo* %22, %struct.undo** getelementptr inbounds (%struct.undobuf* @undobuf, i64 0, i32 1), align 8, !tbaa !3
  br label %if.end2.i

if.else.i:                                        ; preds = %if.end.i
  %call.i = call noalias i8* @xmalloc(i64 32) #6
  %23 = bitcast i8* %call.i to %struct.undo*
  br label %if.end2.i

if.end2.i:                                        ; preds = %if.else.i, %if.then1.i
  %buf.0.i = phi %struct.undo* [ %21, %if.then1.i ], [ %23, %if.else.i ]
  %is_int.i = getelementptr inbounds %struct.undo* %buf.0.i, i64 0, i32 1
  store i32 1, i32* %is_int.i, align 4, !tbaa !0
  %24 = getelementptr inbounds %struct.undo* %buf.0.i, i64 0, i32 3, i32 0
  %into.c.i = bitcast %struct.rtvec_def* %.lcssa to %struct.rtx_def**
  store %struct.rtx_def** %into.c.i, %struct.rtx_def*** %24, align 8, !tbaa !3
  %old_contents.i = getelementptr inbounds %struct.undo* %buf.0.i, i64 0, i32 2
  %i3.i = bitcast %union.anon* %old_contents.i to i32*
  store i32 %.lcssa290, i32* %i3.i, align 4, !tbaa !0
  store i32 %pos.0.lcssa, i32* %num_elem39.lcssa, align 4, !tbaa !0
  %25 = load %struct.undo** getelementptr inbounds (%struct.undobuf* @undobuf, i64 0, i32 0), align 8, !tbaa !3
  %next4.i = getelementptr inbounds %struct.undo* %buf.0.i, i64 0, i32 0
  store %struct.undo* %25, %struct.undo** %next4.i, align 8, !tbaa !3
  store %struct.undo* %buf.0.i, %struct.undo** getelementptr inbounds (%struct.undobuf* @undobuf, i64 0, i32 0), align 8, !tbaa !3
  br label %do_SUBST_INT.exit

do_SUBST_INT.exit:                                ; preds = %for.end70, %if.end2.i
  %cmp75 = icmp eq i32 %pos.0.lcssa, 1
  br i1 %cmp75, label %if.then76, label %if.end87

if.then76:                                        ; preds = %do_SUBST_INT.exit
  %26 = load %struct.rtvec_def** %rtvec38, align 8, !tbaa !3
  %arrayidx81 = getelementptr inbounds %struct.rtvec_def* %26, i64 0, i32 1, i64 0
  %27 = load %struct.rtx_def** %arrayidx81, align 8, !tbaa !3
  br label %if.end87

if.end87:                                         ; preds = %do_SUBST_INT.exit, %if.then76
  %pat.0 = phi %struct.rtx_def* [ %27, %if.then76 ], [ %0, %do_SUBST_INT.exit ]
  %pat.0.c = ptrtoint %struct.rtx_def* %pat.0 to i64
  store i64 %pat.0.c, i64* %10, align 8, !tbaa !3
  %call86 = call i32 @recog(%struct.rtx_def* %pat.0, %struct.rtx_def* %call, i32* %num_clobbers_to_add) #6
  %cmp88 = icmp slt i32 %call86, 0
  br i1 %cmp88, label %land.lhs.true89, label %if.end97

land.lhs.true89:                                  ; preds = %if.end87, %land.lhs.true28, %land.lhs.true30
  %pat.1261 = phi %struct.rtx_def* [ %0, %land.lhs.true30 ], [ %0, %land.lhs.true28 ], [ %pat.0, %if.end87 ]
  %insn_code_number.0260 = phi i32 [ %call26, %land.lhs.true30 ], [ %call26, %land.lhs.true28 ], [ %call86, %if.end87 ]
  %28 = bitcast %struct.rtx_def* %pat.1261 to i32*
  %bf.load90 = load i32* %28, align 8
  %bf.clear91 = and i32 %bf.load90, 65535
  %cmp92 = icmp eq i32 %bf.clear91, 47
  br i1 %cmp92, label %land.lhs.true93, label %if.end97

land.lhs.true93:                                  ; preds = %land.lhs.true89
  %call94 = call i32 @set_noop_p(%struct.rtx_def* %pat.1261) #6
  %tobool95 = icmp eq i32 %call94, 0
  br i1 %tobool95, label %if.end97, label %if.end97.thread

if.end97.thread:                                  ; preds = %land.lhs.true93
  store i32 0, i32* %num_clobbers_to_add, align 4, !tbaa !0
  br label %if.end193

if.end97:                                         ; preds = %if.end19, %land.lhs.true93, %land.lhs.true89, %if.end87
  %pat.1262.ph = phi %struct.rtx_def* [ %pat.1261, %land.lhs.true93 ], [ %pat.1261, %land.lhs.true89 ], [ %pat.0, %if.end87 ], [ %0, %if.end19 ]
  %insn_code_number.1.ph = phi i32 [ %insn_code_number.0260, %land.lhs.true93 ], [ %insn_code_number.0260, %land.lhs.true89 ], [ %call86, %if.end87 ], [ %call26, %if.end19 ]
  %.pr = load i32* %num_clobbers_to_add, align 4, !tbaa !0
  %tobool98 = icmp eq i32 %.pr, 0
  br i1 %tobool98, label %if.end193, label %if.then99

if.then99:                                        ; preds = %if.end97
  %29 = bitcast %struct.rtx_def* %pat.1262.ph to i32*
  %bf.load100 = load i32* %29, align 8
  %bf.clear101 = and i32 %bf.load100, 65535
  %cmp102 = icmp eq i32 %bf.clear101, 39
  br i1 %cmp102, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then99
  %arrayidx104 = getelementptr inbounds %struct.rtx_def* %pat.1262.ph, i64 0, i32 1, i64 0
  %rtvec105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtvec_def**
  %30 = load %struct.rtvec_def** %rtvec105, align 8, !tbaa !3
  %num_elem106 = getelementptr inbounds %struct.rtvec_def* %30, i64 0, i32 0
  %31 = load i32* %num_elem106, align 4, !tbaa !0
  %add = add nsw i32 %31, %.pr
  br label %cond.end

cond.false:                                       ; preds = %if.then99
  %add107 = add nsw i32 %.pr, 1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %add107, %cond.false ]
  %call108 = call %struct.rtvec_def* @rtvec_alloc(i32 %cond) #6
  %call109 = call %struct.rtx_def* @gen_rtx_fmt_E(i32 39, i32 0, %struct.rtvec_def* %call108) #6
  %bf.load110 = load i32* %29, align 8
  %bf.clear111 = and i32 %bf.load110, 65535
  %cmp112 = icmp eq i32 %bf.clear111, 39
  br i1 %cmp112, label %for.cond114.preheader, label %if.else

for.cond114.preheader:                            ; preds = %cond.end
  %arrayidx116 = getelementptr inbounds %struct.rtx_def* %pat.1262.ph, i64 0, i32 1, i64 0
  %rtvec117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtvec_def**
  %32 = load %struct.rtvec_def** %rtvec117, align 8, !tbaa !3
  %num_elem118286 = getelementptr inbounds %struct.rtvec_def* %32, i64 0, i32 0
  %33 = load i32* %num_elem118286, align 4, !tbaa !0
  %cmp119287 = icmp sgt i32 %33, 0
  %arrayidx129 = getelementptr inbounds %struct.rtx_def* %call109, i64 0, i32 1, i64 0
  %rtvec130 = bitcast %union.rtunion_def* %arrayidx129 to %struct.rtvec_def**
  br i1 %cmp119287, label %for.body120, label %if.end141

for.body120:                                      ; preds = %for.cond114.preheader, %for.body120
  %indvars.iv307 = phi i64 [ %indvars.iv.next308, %for.body120 ], [ 0, %for.cond114.preheader ]
  %34 = phi %struct.rtvec_def* [ %37, %for.body120 ], [ %32, %for.cond114.preheader ]
  %arrayidx126 = getelementptr inbounds %struct.rtvec_def* %34, i64 0, i32 1, i64 %indvars.iv307
  %35 = load %struct.rtx_def** %arrayidx126, align 8, !tbaa !3
  %36 = load %struct.rtvec_def** %rtvec130, align 8, !tbaa !3
  %arrayidx132 = getelementptr inbounds %struct.rtvec_def* %36, i64 0, i32 1, i64 %indvars.iv307
  store %struct.rtx_def* %35, %struct.rtx_def** %arrayidx132, align 8, !tbaa !3
  %indvars.iv.next308 = add i64 %indvars.iv307, 1
  %37 = load %struct.rtvec_def** %rtvec117, align 8, !tbaa !3
  %num_elem118 = getelementptr inbounds %struct.rtvec_def* %37, i64 0, i32 0
  %38 = load i32* %num_elem118, align 4, !tbaa !0
  %39 = trunc i64 %indvars.iv.next308 to i32
  %cmp119 = icmp slt i32 %39, %38
  br i1 %cmp119, label %for.body120, label %if.end141

if.else:                                          ; preds = %cond.end
  %arrayidx137 = getelementptr inbounds %struct.rtx_def* %call109, i64 0, i32 1, i64 0
  %rtvec138 = bitcast %union.rtunion_def* %arrayidx137 to %struct.rtvec_def**
  %40 = load %struct.rtvec_def** %rtvec138, align 8, !tbaa !3
  %arrayidx140 = getelementptr inbounds %struct.rtvec_def* %40, i64 0, i32 1, i64 0
  store %struct.rtx_def* %pat.1262.ph, %struct.rtx_def** %arrayidx140, align 8, !tbaa !3
  br label %if.end141

if.end141:                                        ; preds = %for.cond114.preheader, %for.body120, %if.else
  %rtvec144.pre-phi = phi %struct.rtvec_def** [ %rtvec138, %if.else ], [ %rtvec130, %for.body120 ], [ %rtvec130, %for.cond114.preheader ]
  call void @add_clobbers(%struct.rtx_def* %call109, i32 %insn_code_number.1.ph) #6
  %41 = load %struct.rtvec_def** %rtvec144.pre-phi, align 8, !tbaa !3
  %42 = load i32* %num_clobbers_to_add, align 4, !tbaa !0
  %cmp152283 = icmp sgt i32 %42, 0
  br i1 %cmp152283, label %for.body153.lr.ph, label %if.end193

for.body153.lr.ph:                                ; preds = %if.end141
  %num_elem145 = getelementptr inbounds %struct.rtvec_def* %41, i64 0, i32 0
  %43 = load i32* %num_elem145, align 4, !tbaa !0
  %sub146 = sub nsw i32 %43, %42
  %cond174.i = icmp eq %struct.rtx_def* %insn, null
  %44 = sext i32 %sub146 to i64
  br label %for.body153

for.body153:                                      ; preds = %for.body153.lr.ph, %if.end179
  %indvars.iv = phi i64 [ %44, %for.body153.lr.ph ], [ %indvars.iv.next, %if.end179 ]
  %45 = phi %struct.rtvec_def* [ %41, %for.body153.lr.ph ], [ %86, %if.end179 ]
  %notes.0285 = phi %struct.rtx_def* [ null, %for.body153.lr.ph ], [ %call189, %if.end179 ]
  %arrayidx159 = getelementptr inbounds %struct.rtvec_def* %45, i64 0, i32 1, i64 %indvars.iv
  %46 = load %struct.rtx_def** %arrayidx159, align 8, !tbaa !3
  %arrayidx161 = getelementptr inbounds %struct.rtx_def* %46, i64 0, i32 1, i64 0
  %rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**
  %47 = load %struct.rtx_def** %rtx162, align 8, !tbaa !3
  %48 = bitcast %struct.rtx_def* %47 to i32*
  %bf.load163 = load i32* %48, align 8
  %bf.clear164 = and i32 %bf.load163, 65535
  %cmp165 = icmp eq i32 %bf.clear164, 61
  br i1 %cmp165, label %land.lhs.true166, label %if.end179

land.lhs.true166:                                 ; preds = %for.body153
  %arrayidx.i = getelementptr inbounds %struct.rtx_def* %47, i64 0, i32 1, i64 0
  %rtuint.i = bitcast %union.rtunion_def* %arrayidx.i to i32*
  %49 = load i32* %rtuint.i, align 4, !tbaa !0
  store i32 %49, i32* @reg_dead_regno, align 4, !tbaa !0
  %cmp.i257 = icmp ult i32 %49, 53
  br i1 %cmp.i257, label %cond.true.i, label %cond.end56.thread.i

cond.end56.thread.i:                              ; preds = %land.lhs.true166
  %add58162.i = add i32 %49, 1
  store i32 %add58162.i, i32* @reg_dead_endregno, align 4, !tbaa !0
  store i32 0, i32* @reg_dead_flag, align 4, !tbaa !0
  br label %for.cond67.preheader.i

for.cond67.preheader.i:                           ; preds = %for.cond.i, %for.cond.preheader.i, %cond.end56.thread.i
  br i1 %cond174.i, label %if.end113.i, label %land.lhs.true69.i

cond.true.i:                                      ; preds = %land.lhs.true166
  %.off.i = add i32 %49, -8
  %50 = icmp ult i32 %.off.i, 8
  %.off152.i = add i32 %49, -21
  %51 = icmp ult i32 %.off152.i, 8
  %or.cond.i = or i1 %50, %51
  %.off153.i = add i32 %49, -45
  %52 = icmp ult i32 %.off153.i, 8
  %or.cond159.i = or i1 %or.cond.i, %52
  %.off154.i = add i32 %49, -29
  %53 = icmp ult i32 %.off154.i, 8
  %or.cond161.i = or i1 %or.cond159.i, %53
  %bf.load.i = load i32* %48, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 16
  %bf.clear.i = and i32 %bf.lshr.i, 255
  br i1 %or.cond161.i, label %cond.true14.i, label %cond.false.i

cond.true14.i:                                    ; preds = %cond.true.i
  %idxprom156.i = zext i32 %bf.clear.i to i64
  %arrayidx15.i = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom156.i
  %54 = load i32* %arrayidx15.i, align 4, !tbaa !7
  %cmp16.i = icmp eq i32 %54, 5
  br i1 %cmp16.i, label %for.cond.preheader.i, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %cond.true14.i
  %cmp22.i = icmp eq i32 %54, 6
  %phitmp.i = select i1 %cmp22.i, i32 2, i32 1
  br label %for.cond.preheader.i

cond.false.i:                                     ; preds = %cond.true.i
  switch i32 %bf.clear.i, label %cond.false38.i [
    i32 18, label %cond.true27.i
    i32 24, label %cond.true34.i
  ]

cond.true27.i:                                    ; preds = %cond.false.i
  %55 = load i32* @target_flags, align 4, !tbaa !0
  %and.i = lshr i32 %55, 25
  %56 = and i32 %and.i, 1
  %57 = xor i32 %56, 3
  br label %for.cond.preheader.i

cond.true34.i:                                    ; preds = %cond.false.i
  %58 = load i32* @target_flags, align 4, !tbaa !0
  %and35.i = lshr i32 %58, 24
  %59 = and i32 %and35.i, 2
  %60 = xor i32 %59, 6
  br label %for.cond.preheader.i

cond.false38.i:                                   ; preds = %cond.false.i
  %idxprom42155.i = zext i32 %bf.clear.i to i64
  %arrayidx43.i = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom42155.i
  %61 = load i8* %arrayidx43.i, align 1, !tbaa !1
  %conv.i = zext i8 %61 to i32
  %62 = load i32* @target_flags, align 4, !tbaa !0
  %and44.i = lshr i32 %62, 23
  %63 = and i32 %and44.i, 4
  %64 = add i32 %63, 4
  %add.i = add i32 %conv.i, -1
  %sub.i = add i32 %add.i, %64
  %div.i = sdiv i32 %sub.i, %64
  br label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %cond.false38.i, %cond.true34.i, %cond.true27.i, %lor.rhs.i, %cond.true14.i
  %cond57.ph.i = phi i32 [ 2, %cond.true14.i ], [ %phitmp.i, %lor.rhs.i ], [ %60, %cond.true34.i ], [ %div.i, %cond.false38.i ], [ %57, %cond.true27.i ]
  %add58.i = add i32 %cond57.ph.i, %49
  store i32 %add58.i, i32* @reg_dead_endregno, align 4, !tbaa !0
  store i32 0, i32* @reg_dead_flag, align 4, !tbaa !0
  %cmp61177.i = icmp ult i32 %49, %add58.i
  br i1 %cmp61177.i, label %for.body.lr.ph.i, label %for.cond67.preheader.i

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %65 = load i64* @newpat_used_regs, align 8, !tbaa !6
  %66 = zext i32 %49 to i64
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %cmp61.i = icmp ult i32 %inc.i, %add58.i
  %indvars.iv.next187.i = add i64 %indvars.iv186.i, 1
  br i1 %cmp61.i, label %for.body.i, label %for.cond67.preheader.i

for.body.i:                                       ; preds = %for.cond.i, %for.body.lr.ph.i
  %indvars.iv186.i = phi i64 [ %66, %for.body.lr.ph.i ], [ %indvars.iv.next187.i, %for.cond.i ]
  %i.0178.i = phi i32 [ %49, %for.body.lr.ph.i ], [ %inc.i, %for.cond.i ]
  %shl.i = shl i64 1, %indvars.iv186.i
  %and63.i = and i64 %shl.i, %65
  %tobool64.i = icmp eq i64 %and63.i, 0
  %inc.i = add i32 %i.0178.i, 1
  br i1 %tobool64.i, label %for.cond.i, label %return

land.lhs.true69.i:                                ; preds = %for.cond67.preheader.i, %for.inc90.i
  %insn.addr.0175.i = phi %struct.rtx_def* [ %call91.i, %for.inc90.i ], [ %insn, %for.cond67.preheader.i ]
  %67 = bitcast %struct.rtx_def* %insn.addr.0175.i to i32*
  %bf.load70.i = load i32* %67, align 8
  %bf.clear71.i = and i32 %bf.load70.i, 65535
  %bf.clear71.off.i = add i32 %bf.clear71.i, -35
  %68 = icmp ugt i32 %bf.clear71.off.i, 1
  br i1 %68, label %for.body78.i, label %for.cond96.preheader.i

for.body78.i:                                     ; preds = %land.lhs.true69.i
  %arrayidx80.i = getelementptr inbounds %struct.rtx_def* %insn.addr.0175.i, i64 0, i32 1, i64 3
  %rtx.i = bitcast %union.rtunion_def* %arrayidx80.i to %struct.rtx_def**
  %69 = load %struct.rtx_def** %rtx.i, align 8, !tbaa !3
  call void @note_stores(%struct.rtx_def* %69, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @reg_dead_at_p_1, i8* null) #6
  %70 = load i32* @reg_dead_flag, align 4, !tbaa !0
  switch i32 %70, label %return [
    i32 0, label %if.end86.i
    i32 1, label %if.end179
  ]

if.end86.i:                                       ; preds = %for.body78.i
  %71 = load i32* @reg_dead_regno, align 4, !tbaa !0
  %call.i258 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %insn.addr.0175.i, i32 1, i32 %71) #6
  %tobool87.i = icmp eq %struct.rtx_def* %call.i258, null
  br i1 %tobool87.i, label %for.inc90.i, label %if.end179

for.inc90.i:                                      ; preds = %if.end86.i
  %call91.i = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %insn.addr.0175.i) #6
  %cond.i = icmp eq %struct.rtx_def* %call91.i, null
  br i1 %cond.i, label %if.end113.i, label %land.lhs.true69.i

for.cond96.preheader.i:                           ; preds = %land.lhs.true69.i
  %72 = load i32* @n_basic_blocks, align 4, !tbaa !0
  %cmp97166.i = icmp sgt i32 %72, 0
  br i1 %cmp97166.i, label %for.body99.lr.ph.i, label %for.end108.i

for.body99.lr.ph.i:                               ; preds = %for.cond96.preheader.i
  %73 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !3
  %data.i = getelementptr inbounds %struct.varray_head_tag* %73, i64 0, i32 4
  %bb.i = bitcast %union.varray_data_tag* %data.i to [1 x %struct.basic_block_def*]*
  br label %for.body99.i

for.cond96.i:                                     ; preds = %for.body99.i
  %74 = trunc i64 %indvars.iv.next.i to i32
  %cmp97.i = icmp slt i32 %74, %72
  br i1 %cmp97.i, label %for.body99.i, label %for.end108.i

for.body99.i:                                     ; preds = %for.cond96.i, %for.body99.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body99.lr.ph.i ], [ %indvars.iv.next.i, %for.cond96.i ]
  %block.0167.i = phi i32 [ 0, %for.body99.lr.ph.i ], [ %inc107.i, %for.cond96.i ]
  %arrayidx101.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb.i, i64 0, i64 %indvars.iv.i
  %75 = load %struct.basic_block_def** %arrayidx101.i, align 8, !tbaa !3
  %head.i = getelementptr inbounds %struct.basic_block_def* %75, i64 0, i32 0
  %76 = load %struct.rtx_def** %head.i, align 8, !tbaa !3
  %cmp102.i = icmp eq %struct.rtx_def* %insn.addr.0175.i, %76
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  %inc107.i = add nsw i32 %block.0167.i, 1
  br i1 %cmp102.i, label %for.end108.i, label %for.cond96.i

for.end108.i:                                     ; preds = %for.body99.i, %for.cond96.i, %for.cond96.preheader.i
  %block.0.lcssa.i = phi i32 [ 0, %for.cond96.preheader.i ], [ %block.0167.i, %for.body99.i ], [ %inc107.i, %for.cond96.i ]
  %cmp109.i = icmp eq i32 %block.0.lcssa.i, %72
  br i1 %cmp109.i, label %return, label %if.end113.i

if.end113.i:                                      ; preds = %for.inc90.i, %for.end108.i, %for.cond67.preheader.i
  %block.1.i = phi i32 [ 0, %for.cond67.preheader.i ], [ %block.0.lcssa.i, %for.end108.i ], [ 0, %for.inc90.i ]
  %77 = load i32* @reg_dead_regno, align 4, !tbaa !0
  %idxprom118.i = sext i32 %block.1.i to i64
  %78 = load i32* @reg_dead_endregno, align 4, !tbaa !0
  %cmp115164.i = icmp ult i32 %77, %78
  br i1 %cmp115164.i, label %for.body117.i, label %if.end179

for.cond114.i:                                    ; preds = %for.body117.i
  %79 = load i32* @reg_dead_endregno, align 4, !tbaa !0
  %cmp115.i = icmp ult i32 %inc127.i, %79
  br i1 %cmp115.i, label %for.body117.i, label %if.end179

for.body117.i:                                    ; preds = %for.cond114.i, %if.end113.i
  %i.1165.i = phi i32 [ %77, %if.end113.i ], [ %inc127.i, %for.cond114.i ]
  %80 = load %struct.varray_head_tag** @basic_block_info, align 8, !tbaa !3
  %data119.i = getelementptr inbounds %struct.varray_head_tag* %80, i64 0, i32 4
  %bb120.i = bitcast %union.varray_data_tag* %data119.i to [1 x %struct.basic_block_def*]*
  %arrayidx121.i = getelementptr inbounds [1 x %struct.basic_block_def*]* %bb120.i, i64 0, i64 %idxprom118.i
  %81 = load %struct.basic_block_def** %arrayidx121.i, align 8, !tbaa !3
  %global_live_at_start.i = getelementptr inbounds %struct.basic_block_def* %81, i64 0, i32 8
  %82 = load %struct.bitmap_head_def** %global_live_at_start.i, align 8, !tbaa !3
  %call122.i = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %82, i32 %i.1165.i) #6
  %tobool123.i = icmp eq i32 %call122.i, 0
  %inc127.i = add i32 %i.1165.i, 1
  br i1 %tobool123.i, label %for.cond114.i, label %return

if.end179:                                        ; preds = %for.cond114.i, %for.body78.i, %if.end86.i, %if.end113.i, %for.body153
  %83 = load %struct.rtvec_def** %rtvec144.pre-phi, align 8, !tbaa !3
  %arrayidx185 = getelementptr inbounds %struct.rtvec_def* %83, i64 0, i32 1, i64 %indvars.iv
  %84 = load %struct.rtx_def** %arrayidx185, align 8, !tbaa !3
  %arrayidx187 = getelementptr inbounds %struct.rtx_def* %84, i64 0, i32 1, i64 0
  %rtx188 = bitcast %union.rtunion_def* %arrayidx187 to %struct.rtx_def**
  %85 = load %struct.rtx_def** %rtx188, align 8, !tbaa !3
  %call189 = call %struct.rtx_def* @gen_rtx_fmt_ee(i32 3, i32 10, %struct.rtx_def* %85, %struct.rtx_def* %notes.0285) #6
  %indvars.iv.next = add i64 %indvars.iv, 1
  %86 = load %struct.rtvec_def** %rtvec144.pre-phi, align 8, !tbaa !3
  %num_elem151 = getelementptr inbounds %struct.rtvec_def* %86, i64 0, i32 0
  %87 = load i32* %num_elem151, align 4, !tbaa !0
  %88 = trunc i64 %indvars.iv.next to i32
  %cmp152 = icmp slt i32 %88, %87
  br i1 %cmp152, label %for.body153, label %if.end193

if.end193:                                        ; preds = %if.end141, %if.end179, %if.end97.thread, %if.end97
  %insn_code_number.1266 = phi i32 [ %insn_code_number.1.ph, %if.end97 ], [ 2147483647, %if.end97.thread ], [ %insn_code_number.1.ph, %if.end179 ], [ %insn_code_number.1.ph, %if.end141 ]
  %notes.1 = phi %struct.rtx_def* [ null, %if.end97 ], [ null, %if.end97.thread ], [ %call189, %if.end179 ], [ null, %if.end141 ]
  %pat.2 = phi %struct.rtx_def* [ %pat.1262.ph, %if.end97 ], [ %pat.1261, %if.end97.thread ], [ %call109, %if.end179 ], [ %call109, %if.end141 ]
  store %struct.rtx_def* %pat.2, %struct.rtx_def** %pnewpat, align 8, !tbaa !3
  store %struct.rtx_def* %notes.1, %struct.rtx_def** %pnotes, align 8, !tbaa !3
  br label %return

return:                                           ; preds = %land.lhs.true, %for.end108.i, %for.body117.i, %for.body78.i, %for.body.i, %if.end193
  %retval.0 = phi i32 [ %insn_code_number.1266, %if.end193 ], [ -1, %for.body.i ], [ -1, %for.body78.i ], [ -1, %for.body117.i ], [ -1, %for.end108.i ], [ -1, %land.lhs.true ]
  ret i32 %retval.0
}
