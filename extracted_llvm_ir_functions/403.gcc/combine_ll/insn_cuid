define internal fastcc i32 @insn_cuid(%struct.rtx_def* %insn) #0 {
entry:
  %.pre = load i32* @max_uid_cuid, align 4, !tbaa !0
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %entry, %while.body
  %insn.addr.033 = phi %struct.rtx_def* [ %4, %while.body ], [ %insn, %entry ]
  %fld = getelementptr inbounds %struct.rtx_def* %insn.addr.033, i64 0, i32 1
  %rtint = bitcast [1 x %union.rtunion_def]* %fld to i32*
  %0 = load i32* %rtint, align 4, !tbaa !0
  %cmp1 = icmp sgt i32 %0, %.pre
  br i1 %cmp1, label %land.lhs.true2, label %while.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %1 = bitcast %struct.rtx_def* %insn.addr.033 to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp3 = icmp eq i32 %bf.clear, 32
  br i1 %cmp3, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %land.lhs.true2
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %insn.addr.033, i64 0, i32 1, i64 3
  %rtx = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  %3 = bitcast %struct.rtx_def* %2 to i32*
  %bf.load6 = load i32* %3, align 8
  %bf.clear7 = and i32 %bf.load6, 65535
  %cmp8 = icmp eq i32 %bf.clear7, 48
  br i1 %cmp8, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %insn.addr.033, i64 0, i32 1, i64 2
  %rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**
  %4 = load %struct.rtx_def** %rtx11, align 8, !tbaa !3
  br label %land.lhs.true

while.end:                                        ; preds = %land.lhs.true, %land.lhs.true2, %land.rhs
  %fld9 = getelementptr inbounds %struct.rtx_def* %insn.addr.033, i64 0, i32 1
  %rtint14 = bitcast [1 x %union.rtunion_def]* %fld9 to i32*
  %5 = load i32* %rtint14, align 4, !tbaa !0
  %cmp15 = icmp sgt i32 %5, %.pre
  br i1 %cmp15, label %if.then, label %cond.false

if.then:                                          ; preds = %while.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([51 x i8]* @.str2, i64 0, i64 0), i32 12750, i8* getelementptr inbounds ([10 x i8]* @__FUNCTION__.insn_cuid, i64 0, i64 0)) #8
  unreachable

cond.false:                                       ; preds = %while.end
  %idxprom = sext i32 %5 to i64
  %6 = load i32** @uid_cuid, align 8, !tbaa !3
  %arrayidx23 = getelementptr inbounds i32* %6, i64 %idxprom
  %7 = load i32* %arrayidx23, align 4, !tbaa !0
  ret i32 %7
}
