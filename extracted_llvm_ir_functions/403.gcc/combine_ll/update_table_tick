define internal fastcc void @update_table_tick(%struct.rtx_def* nocapture %x) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %x to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %idxprom115 = zext i32 %bf.clear to i64
  %arrayidx = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom115
  %1 = load i8** %arrayidx, align 8, !tbaa !3
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arrayidx1 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx1 to i32*
  %2 = load i32* %rtuint, align 4, !tbaa !0
  %cmp2 = icmp ult i32 %2, 53
  br i1 %cmp2, label %cond.true, label %cond.end61

cond.true:                                        ; preds = %if.then
  %.off = add i32 %2, -8
  %3 = icmp ult i32 %.off, 8
  %.off116 = add i32 %2, -21
  %4 = icmp ult i32 %.off116, 8
  %or.cond = or i1 %3, %4
  %.off117 = add i32 %2, -45
  %5 = icmp ult i32 %.off117, 8
  %or.cond123 = or i1 %or.cond, %5
  %.off118 = add i32 %2, -29
  %6 = icmp ult i32 %.off118, 8
  %or.cond125 = or i1 %or.cond123, %6
  %bf.lshr = lshr i32 %bf.load, 16
  %bf.clear18 = and i32 %bf.lshr, 255
  br i1 %or.cond125, label %cond.true16, label %cond.false

cond.true16:                                      ; preds = %cond.true
  %idxprom19120 = zext i32 %bf.clear18 to i64
  %arrayidx20 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom19120
  %7 = load i32* %arrayidx20, align 4, !tbaa !7
  %cmp21 = icmp eq i32 %7, 5
  br i1 %cmp21, label %cond.end61, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true16
  %cmp27 = icmp eq i32 %7, 6
  %phitmp = select i1 %cmp27, i32 2, i32 1
  br label %cond.end61

cond.false:                                       ; preds = %cond.true
  switch i32 %bf.clear18, label %cond.false43 [
    i32 18, label %cond.true32
    i32 24, label %cond.true39
  ]

cond.true32:                                      ; preds = %cond.false
  %8 = load i32* @target_flags, align 4, !tbaa !0
  %and = lshr i32 %8, 25
  %9 = and i32 %and, 1
  %10 = xor i32 %9, 3
  br label %cond.end61

cond.true39:                                      ; preds = %cond.false
  %11 = load i32* @target_flags, align 4, !tbaa !0
  %and40 = lshr i32 %11, 24
  %12 = and i32 %and40, 2
  %13 = xor i32 %12, 6
  br label %cond.end61

cond.false43:                                     ; preds = %cond.false
  %idxprom47119 = zext i32 %bf.clear18 to i64
  %arrayidx48 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom47119
  %14 = load i8* %arrayidx48, align 1, !tbaa !1
  %conv = zext i8 %14 to i32
  %15 = load i32* @target_flags, align 4, !tbaa !0
  %and49 = lshr i32 %15, 23
  %16 = and i32 %and49, 4
  %17 = add i32 %16, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %17
  %div = sdiv i32 %sub, %17
  br label %cond.end61

cond.end61:                                       ; preds = %cond.true16, %lor.rhs, %if.then, %cond.true39, %cond.false43, %cond.true32
  %cond62 = phi i32 [ %10, %cond.true32 ], [ %13, %cond.true39 ], [ %div, %cond.false43 ], [ 1, %if.then ], [ 2, %cond.true16 ], [ %phitmp, %lor.rhs ]
  %add63 = add i32 %cond62, %2
  %cmp64126 = icmp ult i32 %2, %add63
  br i1 %cmp64126, label %for.body.lr.ph, label %for.end87

for.body.lr.ph:                                   ; preds = %cond.end61
  %18 = load i32** @reg_last_set_table_tick, align 8, !tbaa !3
  %19 = zext i32 %2 to i64
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ %19, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %r.0127 = phi i32 [ %2, %for.body.lr.ph ], [ %inc, %for.body ]
  %20 = load i32* @label_tick, align 4, !tbaa !0
  %arrayidx67 = getelementptr inbounds i32* %18, i64 %indvars.iv
  store i32 %20, i32* %arrayidx67, align 4, !tbaa !0
  %inc = add i32 %r.0127, 1
  %indvars.iv.next = add i64 %indvars.iv, 1
  %exitcond = icmp eq i32 %inc, %add63
  br i1 %exitcond, label %for.end87, label %for.body

if.end:                                           ; preds = %entry
  %arrayidx69 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom115
  %21 = load i8* %arrayidx69, align 1, !tbaa !1
  %cmp73130 = icmp eq i8 %21, 0
  br i1 %cmp73130, label %for.end87, label %for.body75.lr.ph

for.body75.lr.ph:                                 ; preds = %if.end
  %22 = zext i8 %21 to i64
  br label %for.body75

for.body75:                                       ; preds = %for.body75.lr.ph, %for.cond72.backedge
  %indvars.iv133 = phi i64 [ %22, %for.body75.lr.ph ], [ %indvars.iv.next134, %for.cond72.backedge ]
  %indvars.iv.next134 = add i64 %indvars.iv133, -1
  %arrayidx77 = getelementptr inbounds i8* %1, i64 %indvars.iv.next134
  %23 = load i8* %arrayidx77, align 1, !tbaa !1
  %cmp79 = icmp eq i8 %23, 101
  br i1 %cmp79, label %if.then81, label %for.cond72.backedge

for.cond72.backedge:                              ; preds = %for.body75, %if.then81
  %24 = trunc i64 %indvars.iv.next134 to i32
  %cmp73 = icmp sgt i32 %24, 0
  br i1 %cmp73, label %for.body75, label %for.end87

if.then81:                                        ; preds = %for.body75
  %arrayidx84 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next134
  %rtx = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**
  %25 = load %struct.rtx_def** %rtx, align 8, !tbaa !3
  tail call fastcc void @update_table_tick(%struct.rtx_def* %25) #7
  br label %for.cond72.backedge

for.end87:                                        ; preds = %if.end, %for.cond72.backedge, %cond.end61, %for.body
  ret void
}
