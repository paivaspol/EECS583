define internal fastcc void @record_dead_and_set_regs(%struct.rtx_def* %insn) #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 6
  %link.0.in209 = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %link.0210 = load %struct.rtx_def** %link.0.in209, align 8
  %tobool211 = icmp eq %struct.rtx_def* %link.0210, null
  br i1 %tobool211, label %for.end111, label %for.body

for.body:                                         ; preds = %entry, %for.inc107
  %link.0212 = phi %struct.rtx_def* [ %link.0, %for.inc107 ], [ %link.0210, %entry ]
  %0 = bitcast %struct.rtx_def* %link.0212 to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 16711680
  switch i32 %bf.clear, label %for.inc107 [
    i32 65536, label %land.lhs.true
    i32 131072, label %if.then102
  ]

land.lhs.true:                                    ; preds = %for.body
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %link.0212, i64 0, i32 1, i64 0
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**
  %1 = load %struct.rtx_def** %rtx3, align 8, !tbaa !3
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load4 = load i32* %2, align 8
  %bf.clear5 = and i32 %bf.load4, 65535
  %cmp6 = icmp eq i32 %bf.clear5, 61
  br i1 %cmp6, label %if.then, label %for.inc107

if.then:                                          ; preds = %land.lhs.true
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx11 to i32*
  %3 = load i32* %rtuint, align 4, !tbaa !0
  %cmp12 = icmp ult i32 %3, 53
  br i1 %cmp12, label %cond.true, label %cond.end88

cond.true:                                        ; preds = %if.then
  %.off = add i32 %3, -8
  %4 = icmp ult i32 %.off, 8
  %.off196 = add i32 %3, -21
  %5 = icmp ult i32 %.off196, 8
  %or.cond = or i1 %4, %5
  %.off197 = add i32 %3, -45
  %6 = icmp ult i32 %.off197, 8
  %or.cond203 = or i1 %or.cond, %6
  %.off198 = add i32 %3, -29
  %7 = icmp ult i32 %.off198, 8
  %or.cond205 = or i1 %or.cond203, %7
  %bf.lshr32 = lshr i32 %bf.load4, 16
  %bf.clear33 = and i32 %bf.lshr32, 255
  br i1 %or.cond205, label %cond.true27, label %cond.false

cond.true27:                                      ; preds = %cond.true
  %idxprom200 = zext i32 %bf.clear33 to i64
  %arrayidx34 = getelementptr inbounds [59 x i32]* @mode_class, i64 0, i64 %idxprom200
  %8 = load i32* %arrayidx34, align 4, !tbaa !7
  %cmp35 = icmp eq i32 %8, 5
  br i1 %cmp35, label %cond.end88, label %lor.rhs

lor.rhs:                                          ; preds = %cond.true27
  %cmp44 = icmp eq i32 %8, 6
  %phitmp = select i1 %cmp44, i32 2, i32 1
  br label %cond.end88

cond.false:                                       ; preds = %cond.true
  switch i32 %bf.clear33, label %cond.false67 [
    i32 18, label %cond.true52
    i32 24, label %cond.true63
  ]

cond.true52:                                      ; preds = %cond.false
  %9 = load i32* @target_flags, align 4, !tbaa !0
  %and = lshr i32 %9, 25
  %10 = and i32 %and, 1
  %11 = xor i32 %10, 3
  br label %cond.end88

cond.true63:                                      ; preds = %cond.false
  %12 = load i32* @target_flags, align 4, !tbaa !0
  %and64 = lshr i32 %12, 24
  %13 = and i32 %and64, 2
  %14 = xor i32 %13, 6
  br label %cond.end88

cond.false67:                                     ; preds = %cond.false
  %idxprom74199 = zext i32 %bf.clear33 to i64
  %arrayidx75 = getelementptr inbounds [59 x i8]* @mode_size, i64 0, i64 %idxprom74199
  %15 = load i8* %arrayidx75, align 1, !tbaa !1
  %conv = zext i8 %15 to i32
  %16 = load i32* @target_flags, align 4, !tbaa !0
  %and76 = lshr i32 %16, 23
  %17 = and i32 %and76, 4
  %18 = add i32 %17, 4
  %add = add i32 %conv, -1
  %sub = add i32 %add, %18
  %div = sdiv i32 %sub, %18
  br label %cond.end88

cond.end88:                                       ; preds = %cond.true27, %lor.rhs, %if.then, %cond.true63, %cond.false67, %cond.true52
  %cond89 = phi i32 [ %11, %cond.true52 ], [ %14, %cond.true63 ], [ %div, %cond.false67 ], [ 1, %if.then ], [ 2, %cond.true27 ], [ %phitmp, %lor.rhs ]
  %add90 = add i32 %cond89, %3
  %cmp92207 = icmp ult i32 %3, %add90
  br i1 %cmp92207, label %for.body94.lr.ph, label %for.inc107

for.body94.lr.ph:                                 ; preds = %cond.end88
  %19 = zext i32 %3 to i64
  br label %for.body94

for.body94:                                       ; preds = %for.body94, %for.body94.lr.ph
  %indvars.iv214 = phi i64 [ %19, %for.body94.lr.ph ], [ %indvars.iv.next215, %for.body94 ]
  %i.0208 = phi i32 [ %3, %for.body94.lr.ph ], [ %inc, %for.body94 ]
  %20 = load %struct.rtx_def*** @reg_last_death, align 8, !tbaa !3
  %arrayidx96 = getelementptr inbounds %struct.rtx_def** %20, i64 %indvars.iv214
  store %struct.rtx_def* %insn, %struct.rtx_def** %arrayidx96, align 8, !tbaa !3
  %inc = add i32 %i.0208, 1
  %indvars.iv.next215 = add i64 %indvars.iv214, 1
  %exitcond217 = icmp eq i32 %inc, %add90
  br i1 %exitcond217, label %for.inc107, label %for.body94

if.then102:                                       ; preds = %for.body
  %arrayidx104 = getelementptr inbounds %struct.rtx_def* %link.0212, i64 0, i32 1, i64 0
  %rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**
  %21 = load %struct.rtx_def** %rtx105, align 8, !tbaa !3
  tail call fastcc void @record_value_for_reg(%struct.rtx_def* %21, %struct.rtx_def* %insn, %struct.rtx_def* null) #7
  br label %for.inc107

for.inc107:                                       ; preds = %for.body, %land.lhs.true, %cond.end88, %for.body94, %if.then102
  %arrayidx109 = getelementptr inbounds %struct.rtx_def* %link.0212, i64 0, i32 1, i64 1
  %link.0.in = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**
  %link.0 = load %struct.rtx_def** %link.0.in, align 8
  %tobool = icmp eq %struct.rtx_def* %link.0, null
  br i1 %tobool, label %for.end111, label %for.body

for.end111:                                       ; preds = %for.inc107, %entry
  %22 = bitcast %struct.rtx_def* %insn to i32*
  %bf.load112 = load i32* %22, align 8
  %bf.clear113 = and i32 %bf.load112, 65535
  %cmp114 = icmp eq i32 %bf.clear113, 34
  br i1 %cmp114, label %for.body120, label %if.end151

for.body120:                                      ; preds = %for.inc135, %for.end111
  %indvars.iv = phi i64 [ 0, %for.end111 ], [ %indvars.iv.next, %for.inc135 ]
  %23 = load i64* @regs_invalidated_by_call, align 8, !tbaa !6
  %shl = shl i64 1, %indvars.iv
  %and121 = and i64 %23, %shl
  %tobool122 = icmp eq i64 %and121, 0
  br i1 %tobool122, label %for.inc135, label %if.then123

if.then123:                                       ; preds = %for.body120
  %24 = load %struct.rtx_def*** @reg_last_set_value, align 8, !tbaa !3
  %arrayidx125 = getelementptr inbounds %struct.rtx_def** %24, i64 %indvars.iv
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx125, align 8, !tbaa !3
  %25 = load i32** @reg_last_set_mode, align 8, !tbaa !3
  %arrayidx127 = getelementptr inbounds i32* %25, i64 %indvars.iv
  store i32 0, i32* %arrayidx127, align 4, !tbaa !4
  %26 = load i64** @reg_last_set_nonzero_bits, align 8, !tbaa !3
  %arrayidx129 = getelementptr inbounds i64* %26, i64 %indvars.iv
  store i64 0, i64* %arrayidx129, align 8, !tbaa !6
  %27 = load i8** @reg_last_set_sign_bit_copies, align 8, !tbaa !3
  %arrayidx131 = getelementptr inbounds i8* %27, i64 %indvars.iv
  store i8 0, i8* %arrayidx131, align 1, !tbaa !1
  %28 = load %struct.rtx_def*** @reg_last_death, align 8, !tbaa !3
  %arrayidx133 = getelementptr inbounds %struct.rtx_def** %28, i64 %indvars.iv
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx133, align 8, !tbaa !3
  br label %for.inc135

for.inc135:                                       ; preds = %for.body120, %if.then123
  %indvars.iv.next = add i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, 53
  br i1 %exitcond, label %for.end137, label %for.body120

for.end137:                                       ; preds = %for.inc135
  %arrayidx139 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx139 to i32*
  %29 = load i32* %rtint, align 4, !tbaa !0
  %30 = load i32* @max_uid_cuid, align 4, !tbaa !0
  %cmp140 = icmp sgt i32 %29, %30
  br i1 %cmp140, label %cond.true142, label %cond.false143

cond.true142:                                     ; preds = %for.end137
  %call = tail call fastcc i32 @insn_cuid(%struct.rtx_def* %insn) #7
  br label %cond.end149

cond.false143:                                    ; preds = %for.end137
  %idxprom147 = sext i32 %29 to i64
  %31 = load i32** @uid_cuid, align 8, !tbaa !3
  %arrayidx148 = getelementptr inbounds i32* %31, i64 %idxprom147
  %32 = load i32* %arrayidx148, align 4, !tbaa !0
  br label %cond.end149

cond.end149:                                      ; preds = %cond.false143, %cond.true142
  %cond150 = phi i32 [ %call, %cond.true142 ], [ %32, %cond.false143 ]
  store i32 %cond150, i32* @mem_last_set, align 4, !tbaa !0
  store i32 %cond150, i32* @last_call_cuid, align 4, !tbaa !0
  br label %return

if.end151:                                        ; preds = %for.end111
  %arrayidx153 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 3
  %rtx154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**
  %33 = load %struct.rtx_def** %rtx154, align 8, !tbaa !3
  %34 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 0, i64 0
  tail call void @note_stores(%struct.rtx_def* %33, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @record_dead_and_set_regs_1, i8* %34) #6
  br label %return

return:                                           ; preds = %if.end151, %cond.end149
  ret void
}
