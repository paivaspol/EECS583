define void @final_end_function() #0 {
entry:
  tail call void @app_disable() #10
  %0 = load %struct.gcc_debug_hooks** @debug_hooks, align 8, !tbaa !0
  %end_function = getelementptr inbounds %struct.gcc_debug_hooks* %0, i64 0, i32 14
  %1 = load void (i32)** %end_function, align 8, !tbaa !0
  %2 = load i32* @high_function_linenum, align 4, !tbaa !4
  tail call void %1(i32 %2) #8
  %3 = load void (%struct._IO_FILE*, i64)** getelementptr inbounds (%struct.gcc_target* @targetm, i64 0, i32 0, i32 9), align 8, !tbaa !0
  %4 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !0
  %call = tail call i64 @get_frame_size() #8
  tail call void %3(%struct._IO_FILE* %4, i64 %call) #8
  %5 = load %struct.gcc_debug_hooks** @debug_hooks, align 8, !tbaa !0
  %end_epilogue = getelementptr inbounds %struct.gcc_debug_hooks* %5, i64 0, i32 12
  %6 = load void ()** %end_epilogue, align 8, !tbaa !0
  tail call void %6() #8
  %7 = load i32* @write_symbols, align 4, !tbaa !6
  switch i32 %7, label %land.lhs.true2 [
    i32 7, label %if.end
    i32 4, label %if.end
  ]

land.lhs.true2:                                   ; preds = %entry
  %call3 = tail call i32 @dwarf2out_do_frame() #8
  %tobool = icmp eq i32 %call3, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true2
  tail call void @dwarf2out_end_epilogue() #8
  br label %if.end

if.end:                                           ; preds = %entry, %entry, %land.lhs.true2, %if.then
  ret void
}
