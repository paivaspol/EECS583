define void @end_final(i8* nocapture %filename) #0 {
entry:
  %name = alloca [20 x i8], align 16
  %0 = load i32* @profile_arc_flag, align 4, !tbaa !4
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.end104, label %if.then

if.then:                                          ; preds = %entry
  %call = call i32 @exact_log2_wide(i64 16) #8
  %1 = load i32* @target_flags, align 4, !tbaa !4
  %and = lshr i32 %1, 20
  %2 = and i32 %and, 32
  %3 = add i32 %2, 32
  %div = sdiv i32 %3, 8
  %4 = load i32* @count_instrumented_edges, align 4, !tbaa !4
  %mul = shl nsw i32 %4, 3
  call void @data_section() #8
  %cmp12 = icmp ne i32 %call, 0
  br i1 %cmp12, label %if.then13, label %do.body

if.then13:                                        ; preds = %if.then
  %5 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !0
  %shl = shl i32 1, %call
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([12 x i8]* @.str1, i64 0, i64 0), i32 %shl) #8
  br label %do.body

do.body:                                          ; preds = %if.then, %if.then13
  %6 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !0
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([8 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str3, i64 0, i64 0), i32 0) #8
  %7 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call17 = call zeroext i1 @assemble_integer(%struct.rtx_def* %7, i32 %div, i32 %3, i32 1) #8
  %arraydecay = getelementptr inbounds [20 x i8]* %name, i64 0, i64 0
  %call19 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str3, i64 0, i64 0), i32 1) #8
  %8 = load i32* @target_flags, align 4, !tbaa !4
  %and21 = lshr i32 %8, 25
  %9 = and i32 %and21, 1
  %10 = or i32 %9, 4
  %call25 = call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %10, i8* %arraydecay) #8
  %call26 = call zeroext i1 @assemble_integer(%struct.rtx_def* %call25, i32 %div, i32 %3, i32 1) #8
  %call29 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str3, i64 0, i64 0), i32 2) #8
  %11 = load i32* @target_flags, align 4, !tbaa !4
  %and31 = lshr i32 %11, 25
  %12 = and i32 %and31, 1
  %13 = or i32 %12, 4
  %call35 = call %struct.rtx_def* @gen_rtx_fmt_s(i32 68, i32 %13, i8* %arraydecay) #8
  %call36 = call zeroext i1 @assemble_integer(%struct.rtx_def* %call35, i32 %div, i32 %3, i32 1) #8
  %14 = load i32* @count_instrumented_edges, align 4, !tbaa !4
  %conv = sext i32 %14 to i64
  %call37 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv) #8
  %call38 = call zeroext i1 @assemble_integer(%struct.rtx_def* %call37, i32 %div, i32 %3, i32 1) #8
  %15 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call39 = call zeroext i1 @assemble_integer(%struct.rtx_def* %15, i32 %div, i32 %3, i32 1) #8
  %16 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call40 = call zeroext i1 @assemble_integer(%struct.rtx_def* %16, i32 %div, i32 %3, i32 1) #8
  %17 = load i32* @target_flags, align 4, !tbaa !4
  %and41 = lshr i32 %17, 23
  %18 = and i32 %and41, 4
  %19 = mul i32 %18, 11
  %mul44 = add i32 %19, 44
  %conv45142 = zext i32 %mul44 to i64
  %call46 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv45142) #8
  %call47 = call zeroext i1 @assemble_integer(%struct.rtx_def* %call46, i32 %div, i32 %3, i32 1) #8
  %20 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call48 = call zeroext i1 @assemble_integer(%struct.rtx_def* %20, i32 %div, i32 %3, i32 1) #8
  %21 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call49 = call zeroext i1 @assemble_integer(%struct.rtx_def* %21, i32 %div, i32 %3, i32 1) #8
  %22 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %call50 = call zeroext i1 @assemble_integer(%struct.rtx_def* %22, i32 %div, i32 %3, i32 1) #8
  %23 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !tbaa !0
  %24 = load i32* @target_flags, align 4, !tbaa !4
  %and51 = lshr i32 %24, 23
  %25 = and i32 %and51, 4
  %26 = add i32 %25, 4
  %call54 = call zeroext i1 @assemble_integer(%struct.rtx_def* %23, i32 %26, i32 %3, i32 1) #8
  %27 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !0
  %call56 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([8 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str3, i64 0, i64 0), i32 1) #8
  %call58 = call i8* @getpwd() #8
  %call59 = call i64 @strlen(i8* %filename) #9
  %call60 = call i64 @strlen(i8* %call58) #9
  %add61 = add i64 %call59, 1
  %add62 = add i64 %add61, %call60
  %conv63 = trunc i64 %add62 to i32
  %add64 = shl i64 %add62, 32
  %sext = add i64 %add64, 17179869184
  %conv65 = ashr exact i64 %sext, 32
  %28 = alloca i8, i64 %conv65, align 1
  %call66 = call i8* @strcpy(i8* %28, i8* %call58) #8
  %strlen = call i64 @strlen(i8* %28)
  %endptr = getelementptr i8* %28, i64 %strlen
  %29 = bitcast i8* %endptr to i16*
  store i16 47, i16* %29, align 1
  %call68 = call i8* @strcat(i8* %28, i8* %filename) #8
  call void @strip_off_ending(i8* %28, i32 %conv63) #8
  %strlen143 = call i64 @strlen(i8* %28)
  %endptr144 = getelementptr i8* %28, i64 %strlen143
  %30 = bitcast i8* %endptr144 to i32*
  store i32 6382638, i32* %30, align 1
  %call70 = call i64 @strlen(i8* %28) #9
  %add71 = add i64 %call70, 1
  %conv72 = trunc i64 %add71 to i32
  call void @assemble_string(i8* %28, i32 %conv72) #8
  %cmp73 = icmp eq i32 %4, 0
  br i1 %cmp73, label %if.then75, label %do.body89

if.then75:                                        ; preds = %do.body
  br i1 %cmp12, label %if.then78, label %do.body82

if.then78:                                        ; preds = %if.then75
  %31 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !0
  %shl79 = shl i32 1, %call
  %call80 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([12 x i8]* @.str1, i64 0, i64 0), i32 %shl79) #8
  br label %do.body82

do.body82:                                        ; preds = %if.then75, %if.then78
  %32 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !0
  %call83 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([8 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str3, i64 0, i64 0), i32 2) #8
  br label %if.end104

do.body89:                                        ; preds = %do.body
  %call91 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str3, i64 0, i64 0), i32 2) #8
  %33 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !0
  %34 = call i64 @fwrite(i8* getelementptr inbounds ([9 x i8]* @.str8, i64 0, i64 0), i64 8, i64 1, %struct._IO_FILE* %33)
  %35 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !0
  call void @assemble_name(%struct._IO_FILE* %35, i8* %arraydecay) #8
  %36 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !0
  %fputc = call i32 @fputc(i32 10, %struct._IO_FILE* %36) #7
  %37 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !0
  %38 = call i64 @fwrite(i8* getelementptr inbounds ([8 x i8]* @.str10, i64 0, i64 0), i64 7, i64 1, %struct._IO_FILE* %37)
  %39 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !0
  call void @assemble_name(%struct._IO_FILE* %39, i8* %arraydecay) #8
  %40 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !0
  %call100 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([8 x i8]* @.str11, i64 0, i64 0), i32 %mul, i32 16) #8
  br label %if.end104

if.end104:                                        ; preds = %do.body82, %entry, %do.body89
  ret void
}
