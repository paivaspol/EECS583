define internal fastcc void @output_operand(%struct.rtx_def* %x, i32 %code) #0 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8, !tbaa !0
  %tobool = icmp eq %struct.rtx_def* %x, null
  br i1 %tobool, label %if.end9, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %0 = bitcast %struct.rtx_def* %x to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %if.end, label %land.lhs.true2

if.end:                                           ; preds = %land.lhs.true
  %call = call %struct.rtx_def* @alter_subreg(%struct.rtx_def** %x.addr) #10
  store %struct.rtx_def* %call, %struct.rtx_def** %x.addr, align 8, !tbaa !0
  %tobool1 = icmp eq %struct.rtx_def* %call, null
  br i1 %tobool1, label %if.end9, label %land.lhs.true2

land.lhs.true2:                                   ; preds = %land.lhs.true, %if.end
  %1 = phi %struct.rtx_def* [ %call, %if.end ], [ %x, %land.lhs.true ]
  %2 = bitcast %struct.rtx_def* %1 to i32*
  %bf.load3 = load i32* %2, align 8
  %bf.clear4 = and i32 %bf.load3, 65535
  %cmp5 = icmp eq i32 %bf.clear4, 61
  br i1 %cmp5, label %land.lhs.true6, label %if.end9

land.lhs.true6:                                   ; preds = %land.lhs.true2
  %arrayidx = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %3 = load i32* %rtuint, align 4, !tbaa !4
  %cmp7 = icmp ugt i32 %3, 52
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %land.lhs.true6
  call void @fancy_abort(i8* getelementptr inbounds ([49 x i8]* @.str, i64 0, i64 0), i32 3349, i8* getelementptr inbounds ([15 x i8]* @__FUNCTION__.output_operand, i64 0, i64 0)) #11
  unreachable

if.end9:                                          ; preds = %entry, %if.end, %land.lhs.true6, %land.lhs.true2
  %4 = phi %struct.rtx_def* [ null, %entry ], [ null, %if.end ], [ %1, %land.lhs.true6 ], [ %1, %land.lhs.true2 ]
  %5 = load %struct._IO_FILE** @asm_out_file, align 8, !tbaa !0
  call void @print_operand(%struct._IO_FILE* %5, %struct.rtx_def* %4, i32 %code) #8
  ret void
}
