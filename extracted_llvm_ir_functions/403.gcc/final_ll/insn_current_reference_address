define i32 @insn_current_reference_address(%struct.rtx_def* nocapture %branch) #7 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %branch}, i64 0, metadata !1062), !dbg !1686
  %0 = load %struct.varray_head_tag** @insn_addresses_, align 8, !dbg !1687, !tbaa !1555
  %cmp = icmp eq %struct.varray_head_tag* %0, null, !dbg !1687
  br i1 %cmp, label %return, label %if.end, !dbg !1687

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %branch, i64 0, i32 1, i64 1, !dbg !1688
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !1688
  %1 = load %struct.rtx_def** %rtx, align 8, !dbg !1688, !tbaa !1555
  %arrayidx2 = getelementptr inbounds %struct.rtx_def* %1, i64 0, i32 1, i64 2, !dbg !1688
  %rtx3 = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**, !dbg !1688
  %2 = load %struct.rtx_def** %rtx3, align 8, !dbg !1688, !tbaa !1555
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %2}, i64 0, metadata !1064), !dbg !1688
  tail call void @llvm.dbg.value(metadata !{i32 %5}, i64 0, metadata !1065), !dbg !1689
  %3 = bitcast %struct.rtx_def* %branch to i32*, !dbg !1690
  %bf.load = load i32* %3, align 8, !dbg !1690
  %bf.clear = and i32 %bf.load, 65535, !dbg !1690
  %cmp6 = icmp eq i32 %bf.clear, 33, !dbg !1690
  br i1 %cmp6, label %if.end8, label %if.then7, !dbg !1690

if.then7:                                         ; preds = %if.end
  %4 = load i32* @insn_current_address, align 4, !dbg !1691, !tbaa !1560
  br label %return, !dbg !1691

if.end8:                                          ; preds = %if.end
  %arrayidx5 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 0, !dbg !1689
  %rtint = bitcast %union.rtunion_def* %arrayidx5 to i32*, !dbg !1689
  %5 = load i32* %rtint, align 4, !dbg !1689, !tbaa !1560
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %branch, i64 0, i32 1, i64 7, !dbg !1692
  %rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !1692
  %6 = load %struct.rtx_def** %rtx11, align 8, !dbg !1692, !tbaa !1555
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %6}, i64 0, metadata !1063), !dbg !1692
  %idxprom = sext i32 %5 to i64, !dbg !1693
  %7 = load i32** @uid_shuid, align 8, !dbg !1693, !tbaa !1555
  %arrayidx15 = getelementptr inbounds i32* %7, i64 %idxprom, !dbg !1693
  %8 = load i32* %arrayidx15, align 4, !dbg !1693, !tbaa !1560
  %arrayidx17 = getelementptr inbounds %struct.rtx_def* %6, i64 0, i32 1, i64 0, !dbg !1693
  %rtint18 = bitcast %union.rtunion_def* %arrayidx17 to i32*, !dbg !1693
  %9 = load i32* %rtint18, align 4, !dbg !1693, !tbaa !1560
  %idxprom19 = sext i32 %9 to i64, !dbg !1693
  %arrayidx20 = getelementptr inbounds i32* %7, i64 %idxprom19, !dbg !1693
  %10 = load i32* %arrayidx20, align 4, !dbg !1693, !tbaa !1560
  %cmp21 = icmp slt i32 %8, %10, !dbg !1693
  br i1 %cmp21, label %if.then22, label %if.else, !dbg !1693

if.then22:                                        ; preds = %if.end8
  %11 = load i32* @insn_last_address, align 4, !dbg !1694, !tbaa !1560
  %12 = load i32** @insn_lengths, align 8, !dbg !1694, !tbaa !1555
  %arrayidx24 = getelementptr inbounds i32* %12, i64 %idxprom, !dbg !1694
  %13 = load i32* %arrayidx24, align 4, !dbg !1694, !tbaa !1560
  %add = add nsw i32 %13, %11, !dbg !1694
  %14 = load i32* @length_unit_log, align 4, !dbg !1696, !tbaa !1560
  %call = tail call fastcc i32 @align_fuzz(%struct.rtx_def* %2, %struct.rtx_def* %6, i32 %14) #11, !dbg !1696
  %sub = sub i32 %add, %call, !dbg !1696
  br label %return, !dbg !1696

if.else:                                          ; preds = %if.end8
  %15 = load i32* @insn_current_address, align 4, !dbg !1697, !tbaa !1560
  %16 = load i32* @length_unit_log, align 4, !dbg !1699, !tbaa !1560
  %call25 = tail call fastcc i32 @align_fuzz(%struct.rtx_def* %6, %struct.rtx_def* %2, i32 %16) #11, !dbg !1699
  %add26 = add nsw i32 %call25, %15, !dbg !1699
  br label %return, !dbg !1699

return:                                           ; preds = %entry, %if.else, %if.then22, %if.then7
  %retval.0 = phi i32 [ %4, %if.then7 ], [ %sub, %if.then22 ], [ %add26, %if.else ], [ 0, %entry ]
  ret i32 %retval.0, !dbg !1700
}
