define internal fastcc void @output_asm_operand_names(%struct.rtx_def** nocapture %operands, i32* nocapture %oporder, i32 %nops) #0 {
entry:
  %addressp = alloca i32, align 4
  call void @llvm.dbg.value(metadata !{%struct.rtx_def** %operands}, i64 0, metadata !1381), !dbg !2414
  call void @llvm.dbg.value(metadata !{i32* %oporder}, i64 0, metadata !1382), !dbg !2415
  call void @llvm.dbg.value(metadata !{i32 %nops}, i64 0, metadata !1383), !dbg !2416
  call void @llvm.dbg.value(metadata !429, i64 0, metadata !1384), !dbg !2417
  call void @llvm.dbg.value(metadata !429, i64 0, metadata !1385), !dbg !2418
  %cmp13 = icmp sgt i32 %nops, 0, !dbg !2418
  br i1 %cmp13, label %for.body, label %for.end, !dbg !2418

for.body:                                         ; preds = %entry, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ]
  %wrote.015 = phi i32 [ %wrote.1, %for.inc ], [ 0, %entry ]
  call void @llvm.dbg.declare(metadata !{i32* %addressp}, metadata !1386), !dbg !2419
  %arrayidx = getelementptr inbounds i32* %oporder, i64 %indvars.iv, !dbg !2420
  %0 = load i32* %arrayidx, align 4, !dbg !2420, !tbaa !1560
  %idxprom1 = sext i32 %0 to i64, !dbg !2420
  %arrayidx2 = getelementptr inbounds %struct.rtx_def** %operands, i64 %idxprom1, !dbg !2420
  %1 = load %struct.rtx_def** %arrayidx2, align 8, !dbg !2420, !tbaa !1555
  %call = call fastcc %union.tree_node* @get_mem_expr_from_op(%struct.rtx_def* %1, i32* %addressp) #11, !dbg !2420
  call void @llvm.dbg.value(metadata !{%union.tree_node* %call}, i64 0, metadata !1389), !dbg !2420
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !2421
  br i1 %tobool, label %for.inc, label %if.then, !dbg !2421

if.then:                                          ; preds = %for.body
  %2 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !2422, !tbaa !1555
  %tobool3 = icmp ne i32 %wrote.015, 0, !dbg !2422
  %cond = select i1 %tobool3, i32 44, i32 9, !dbg !2422
  %cond5 = select i1 %tobool3, i8* getelementptr inbounds ([1 x i8]* @.str24, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str16, i64 0, i64 0), !dbg !2422
  call void @llvm.dbg.value(metadata !{i32* %addressp}, i64 0, metadata !1386), !dbg !2422
  %3 = load i32* %addressp, align 4, !dbg !2422, !tbaa !1560
  %tobool6 = icmp ne i32 %3, 0, !dbg !2422
  %cond7 = select i1 %tobool6, i8* getelementptr inbounds ([2 x i8]* @.str49, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8]* @.str24, i64 0, i64 0), !dbg !2422
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([8 x i8]* @.str48, i64 0, i64 0), i32 %cond, i8* %cond5, i8* %cond7) #9, !dbg !2422
  %4 = load %struct._IO_FILE** @asm_out_file, align 8, !dbg !2424, !tbaa !1555
  call void @print_mem_expr(%struct._IO_FILE* %4, %union.tree_node* %call) #9, !dbg !2424
  call void @llvm.dbg.value(metadata !1674, i64 0, metadata !1384), !dbg !2425
  br label %for.inc, !dbg !2426

for.inc:                                          ; preds = %for.body, %if.then
  %wrote.1 = phi i32 [ 1, %if.then ], [ %wrote.015, %for.body ]
  %indvars.iv.next = add i64 %indvars.iv, 1, !dbg !2418
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !2418
  %exitcond = icmp eq i32 %lftr.wideiv, %nops, !dbg !2418
  br i1 %exitcond, label %for.end, label %for.body, !dbg !2418

for.end:                                          ; preds = %for.inc, %entry
  ret void, !dbg !2427
}
