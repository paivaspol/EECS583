define internal fastcc i32 @expr_killed_p(%struct.rtx_def* %x, %struct.basic_block_def* %bb) #0 {
entry:
  %cmp109 = icmp eq %struct.rtx_def* %x, null
  br i1 %cmp109, label %return, label %if.end

if.end:                                           ; preds = %entry, %if.else
  %x.tr110 = phi %struct.rtx_def* [ %6, %if.else ], [ %x, %entry ]
  %0 = bitcast %struct.rtx_def* %x.tr110 to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.epilog [
    i32 61, label %sw.bb
    i32 66, label %sw.bb7
    i32 59, label %return
    i32 69, label %return
    i32 58, label %return
    i32 54, label %return
    i32 55, label %return
    i32 56, label %return
    i32 68, label %return
    i32 67, label %return
    i32 44, label %return
    i32 45, label %return
  ]

sw.bb:                                            ; preds = %if.end
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x.tr110, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !3
  %div = lshr i32 %1, 6
  %idxprom = zext i32 %div to i64
  %index = getelementptr inbounds %struct.basic_block_def* %bb, i64 0, i32 11
  %2 = load i32* %index, align 4, !tbaa !3
  %idxprom1 = sext i32 %2 to i64
  %3 = load %struct.simple_bitmap_def*** @reg_set_in_block, align 8, !tbaa !0
  %arrayidx2 = getelementptr inbounds %struct.simple_bitmap_def** %3, i64 %idxprom1
  %4 = load %struct.simple_bitmap_def** %arrayidx2, align 8, !tbaa !0
  %arrayidx3 = getelementptr inbounds %struct.simple_bitmap_def* %4, i64 0, i32 3, i64 %idxprom
  %5 = load i64* %arrayidx3, align 8, !tbaa !5
  %rem = and i32 %1, 63
  %sh_prom = zext i32 %rem to i64
  %shr = lshr i64 %5, %sh_prom
  %shr.tr = trunc i64 %shr to i32
  %conv = and i32 %shr.tr, 1
  br label %return

sw.bb7:                                           ; preds = %if.end
  %call = tail call i32 @get_max_uid() #6
  %add = add nsw i32 %call, 1
  %call8 = tail call fastcc i32 @load_killed_in_block_p(%struct.basic_block_def* %bb, i32 %add, %struct.rtx_def* %x.tr110, i32 0) #7
  %tobool = icmp eq i32 %call8, 0
  br i1 %tobool, label %if.else, label %return

if.else:                                          ; preds = %sw.bb7
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %x.tr110, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**
  %6 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %cmp = icmp eq %struct.rtx_def* %6, null
  br i1 %cmp, label %return, label %if.end

sw.epilog:                                        ; preds = %if.end
  %idxprom1496 = zext i32 %bf.clear to i64
  %arrayidx15 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom1496
  %7 = load i8* %arrayidx15, align 1, !tbaa !1
  %arrayidx18 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom1496
  %8 = load i8** %arrayidx18, align 8, !tbaa !0
  %cmp19102 = icmp eq i8 %7, 0
  br i1 %cmp19102, label %return, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.epilog
  %9 = zext i8 %7 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv112 = phi i64 [ %9, %for.body.lr.ph ], [ %indvars.iv.next113, %for.cond.backedge ]
  %indvars.iv.next113 = add i64 %indvars.iv112, -1
  %arrayidx22 = getelementptr inbounds i8* %8, i64 %indvars.iv.next113
  %10 = load i8* %arrayidx22, align 1, !tbaa !1
  switch i8 %10, label %for.cond.backedge [
    i8 101, label %if.then26
    i8 69, label %for.cond52.preheader
  ]

for.cond.backedge:                                ; preds = %for.cond52.preheader, %for.cond52, %for.body, %if.else35
  %11 = trunc i64 %indvars.iv.next113 to i32
  %cmp19 = icmp sgt i32 %11, 0
  br i1 %cmp19, label %for.body, label %return

for.cond52.preheader:                             ; preds = %for.body
  %arrayidx55 = getelementptr inbounds %struct.rtx_def* %x.tr110, i64 0, i32 1, i64 %indvars.iv.next113
  %rtvec = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtvec_def**
  %12 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !0
  %num_elem97 = getelementptr inbounds %struct.rtvec_def* %12, i64 0, i32 0
  %13 = load i32* %num_elem97, align 4, !tbaa !3
  %cmp5698 = icmp sgt i32 %13, 0
  br i1 %cmp5698, label %for.body58, label %for.cond.backedge

if.then26:                                        ; preds = %for.body
  %14 = trunc i64 %indvars.iv.next113 to i32
  %cmp27 = icmp eq i32 %14, 0
  %arrayidx32 = getelementptr inbounds %struct.rtx_def* %x.tr110, i64 0, i32 1, i64 %indvars.iv.next113
  %rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**
  %15 = load %struct.rtx_def** %rtx33, align 8, !tbaa !0
  %call34 = tail call fastcc i32 @expr_killed_p(%struct.rtx_def* %15, %struct.basic_block_def* %bb) #7
  br i1 %cmp27, label %return, label %if.else35

if.else35:                                        ; preds = %if.then26
  %tobool41 = icmp eq i32 %call34, 0
  br i1 %tobool41, label %for.cond.backedge, label %return

for.cond52:                                       ; preds = %for.body58
  %16 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !0
  %num_elem = getelementptr inbounds %struct.rtvec_def* %16, i64 0, i32 0
  %17 = load i32* %num_elem, align 4, !tbaa !3
  %18 = trunc i64 %indvars.iv.next to i32
  %cmp56 = icmp slt i32 %18, %17
  br i1 %cmp56, label %for.body58, label %for.cond.backedge

for.body58:                                       ; preds = %for.cond52.preheader, %for.cond52
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond52 ], [ 0, %for.cond52.preheader ]
  %19 = phi %struct.rtvec_def* [ %16, %for.cond52 ], [ %12, %for.cond52.preheader ]
  %arrayidx64 = getelementptr inbounds %struct.rtvec_def* %19, i64 0, i32 1, i64 %indvars.iv
  %20 = load %struct.rtx_def** %arrayidx64, align 8, !tbaa !0
  %call65 = tail call fastcc i32 @expr_killed_p(%struct.rtx_def* %20, %struct.basic_block_def* %bb) #7
  %tobool66 = icmp eq i32 %call65, 0
  %indvars.iv.next = add i64 %indvars.iv, 1
  br i1 %tobool66, label %for.cond52, label %return

return:                                           ; preds = %entry, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %sw.bb7, %if.else, %sw.epilog, %if.else35, %if.then26, %for.cond.backedge, %for.body58, %sw.bb
  %retval.0 = phi i32 [ %conv, %sw.bb ], [ 1, %for.body58 ], [ 0, %sw.epilog ], [ %call34, %if.then26 ], [ 1, %if.else35 ], [ 0, %for.cond.backedge ], [ 1, %entry ], [ 1, %sw.bb7 ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 0, %if.end ], [ 1, %if.else ]
  ret i32 %retval.0
}
