define internal fastcc void @mark_clobber(%struct.rtx_def* nocapture %pat, %struct.rtx_def* %insn) #0 {
entry:
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %entry
  %pat.pn = phi %struct.rtx_def* [ %pat, %entry ], [ %clob.0, %while.cond ]
  %clob.0.in.in = getelementptr inbounds %struct.rtx_def* %pat.pn, i64 0, i32 1, i64 0
  %clob.0.in = bitcast %union.rtunion_def* %clob.0.in.in to %struct.rtx_def**
  %clob.0 = load %struct.rtx_def** %clob.0.in, align 8
  %0 = bitcast %struct.rtx_def* %clob.0 to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %bf.clear.off = add i32 %bf.clear, -63
  %1 = icmp ult i32 %bf.clear.off, 2
  br i1 %1, label %while.cond, label %while.end

while.end:                                        ; preds = %while.cond
  %cmp9 = icmp eq i32 %bf.clear, 61
  br i1 %cmp9, label %if.then, label %if.else

if.then:                                          ; preds = %while.end
  %2 = load %struct.bitmap_head_def** @reg_set_bitmap, align 8, !tbaa !0
  %arrayidx11 = getelementptr inbounds %struct.rtx_def* %clob.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx11 to i32*
  %3 = load i32* %rtuint, align 4, !tbaa !3
  tail call void @bitmap_set_bit(%struct.bitmap_head_def* %2, i32 %3) #6
  br label %if.end

if.else:                                          ; preds = %while.end
  tail call fastcc void @record_last_mem_set_info(%struct.rtx_def* %insn) #7
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}
