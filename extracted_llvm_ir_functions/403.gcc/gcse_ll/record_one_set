define internal fastcc void @record_one_set(i32 %regno, %struct.rtx_def* %insn) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{i32 %regno}, i64 0, metadata !666), !dbg !3142
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %insn}, i64 0, metadata !667), !dbg !3143
  %0 = load i32* @reg_set_table_size, align 4, !dbg !3144, !tbaa !1735
  %cmp = icmp sgt i32 %0, %regno, !dbg !3144
  br i1 %cmp, label %if.end, label %if.then, !dbg !3144

if.then:                                          ; preds = %entry
  %add = add nsw i32 %regno, 100, !dbg !3145
  tail call void @llvm.dbg.value(metadata !{i32 %add}, i64 0, metadata !674), !dbg !3145
  %1 = load %struct.reg_set*** @reg_set_table, align 8, !dbg !3146, !tbaa !1729
  %2 = bitcast %struct.reg_set** %1 to i8*, !dbg !3146
  %mul = shl i32 %add, 3, !dbg !3146
  tail call void @llvm.dbg.value(metadata !{i8* %2}, i64 0, metadata !3147) #4, !dbg !3148
  tail call void @llvm.dbg.value(metadata !{i32 %mul}, i64 0, metadata !3149) #4, !dbg !3150
  %conv.i = zext i32 %mul to i64, !dbg !3151
  %call.i = tail call i8* @xrealloc(i8* %2, i64 %conv.i) #7, !dbg !3151
  %3 = bitcast i8* %call.i to %struct.reg_set**, !dbg !3146
  store %struct.reg_set** %3, %struct.reg_set*** @reg_set_table, align 8, !dbg !3146, !tbaa !1729
  %4 = load i32* @reg_set_table_size, align 4, !dbg !3152, !tbaa !1735
  %idx.ext = sext i32 %4 to i64, !dbg !3152
  %add.ptr = getelementptr inbounds %struct.reg_set** %3, i64 %idx.ext, !dbg !3152
  %5 = bitcast %struct.reg_set** %add.ptr to i8*, !dbg !3152
  %sub = sub nsw i32 %add, %4, !dbg !3152
  %conv2 = sext i32 %sub to i64, !dbg !3152
  %mul3 = shl nsw i64 %conv2, 3, !dbg !3152
  tail call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 %mul3, i32 1, i1 false), !dbg !3152
  store i32 %add, i32* @reg_set_table_size, align 4, !dbg !3153, !tbaa !1735
  br label %if.end, !dbg !3154

if.end:                                           ; preds = %entry, %if.then
  tail call void @llvm.dbg.value(metadata !2445, i64 0, metadata !676), !dbg !3155
  tail call void @llvm.dbg.value(metadata !2445, i64 0, metadata !678), !dbg !3156
  tail call void @llvm.dbg.value(metadata !3157, i64 0, metadata !680), !dbg !3156
  %6 = load i8** getelementptr inbounds (%struct.obstack* @reg_set_obstack, i64 0, i32 4), align 8, !dbg !3156, !tbaa !1729
  %7 = load i8** getelementptr inbounds (%struct.obstack* @reg_set_obstack, i64 0, i32 3), align 8, !dbg !3156, !tbaa !1729
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !3156
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !3156
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3156
  %cmp5 = icmp slt i64 %sub.ptr.sub, 16, !dbg !3156
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !3156

if.then7:                                         ; preds = %if.end
  tail call void @_obstack_newchunk(%struct.obstack* @reg_set_obstack, i32 16) #7, !dbg !3156
  %.pre = load i8** getelementptr inbounds (%struct.obstack* @reg_set_obstack, i64 0, i32 3), align 8, !dbg !3156, !tbaa !1729
  br label %if.end8, !dbg !3156

if.end8:                                          ; preds = %if.then7, %if.end
  %8 = phi i8* [ %.pre, %if.then7 ], [ %7, %if.end ]
  %add.ptr11 = getelementptr inbounds i8* %8, i64 16, !dbg !3156
  store i8* %add.ptr11, i8** getelementptr inbounds (%struct.obstack* @reg_set_obstack, i64 0, i32 3), align 8, !dbg !3156, !tbaa !1729
  tail call void @llvm.dbg.value(metadata !2445, i64 0, metadata !681), !dbg !3158
  %9 = load i8** getelementptr inbounds (%struct.obstack* @reg_set_obstack, i64 0, i32 2), align 8, !dbg !3158, !tbaa !1729
  tail call void @llvm.dbg.value(metadata !{i8* %9}, i64 0, metadata !683), !dbg !3158
  %cmp13 = icmp eq i8* %add.ptr11, %9, !dbg !3158
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !3158

if.then15:                                        ; preds = %if.end8
  %bf.load = load i8* getelementptr inbounds (%struct.obstack* @reg_set_obstack, i64 0, i32 10), align 8, !dbg !3158
  %bf.set = or i8 %bf.load, 2, !dbg !3158
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack* @reg_set_obstack, i64 0, i32 10), align 8, !dbg !3158
  br label %if.end16, !dbg !3158

if.end16:                                         ; preds = %if.end8, %if.then15
  %sub.ptr.lhs.cast18 = ptrtoint i8* %add.ptr11 to i64, !dbg !3158
  %10 = load i32* getelementptr inbounds (%struct.obstack* @reg_set_obstack, i64 0, i32 6), align 8, !dbg !3158, !tbaa !1735
  %conv20 = sext i32 %10 to i64, !dbg !3158
  %add21 = add nsw i64 %conv20, %sub.ptr.lhs.cast18, !dbg !3158
  %neg = xor i32 %10, -1, !dbg !3158
  %conv23 = sext i32 %neg to i64, !dbg !3158
  %and = and i64 %add21, %conv23, !dbg !3158
  %add.ptr24 = getelementptr inbounds i8* null, i64 %and, !dbg !3158
  store i8* %add.ptr24, i8** getelementptr inbounds (%struct.obstack* @reg_set_obstack, i64 0, i32 3), align 8, !dbg !3158, !tbaa !1729
  %11 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @reg_set_obstack, i64 0, i32 1), align 8, !dbg !3158, !tbaa !1729
  %sub.ptr.lhs.cast27 = ptrtoint i8* %add.ptr24 to i64, !dbg !3158
  %sub.ptr.rhs.cast28 = ptrtoint %struct._obstack_chunk* %11 to i64, !dbg !3158
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast27, %sub.ptr.rhs.cast28, !dbg !3158
  %12 = load i8** getelementptr inbounds (%struct.obstack* @reg_set_obstack, i64 0, i32 4), align 8, !dbg !3158, !tbaa !1729
  %sub.ptr.lhs.cast32 = ptrtoint i8* %12 to i64, !dbg !3158
  %sub.ptr.sub34 = sub i64 %sub.ptr.lhs.cast32, %sub.ptr.rhs.cast28, !dbg !3158
  %cmp35 = icmp sgt i64 %sub.ptr.sub29, %sub.ptr.sub34, !dbg !3158
  br i1 %cmp35, label %if.then37, label %if.end40, !dbg !3158

if.then37:                                        ; preds = %if.end16
  store i8* %12, i8** getelementptr inbounds (%struct.obstack* @reg_set_obstack, i64 0, i32 3), align 8, !dbg !3158, !tbaa !1729
  br label %if.end40, !dbg !3158

if.end40:                                         ; preds = %if.then37, %if.end16
  %13 = phi i8* [ %12, %if.then37 ], [ %add.ptr24, %if.end16 ]
  store i8* %13, i8** getelementptr inbounds (%struct.obstack* @reg_set_obstack, i64 0, i32 2), align 8, !dbg !3158, !tbaa !1729
  %14 = bitcast i8* %9 to %struct.reg_set*, !dbg !3155
  tail call void @llvm.dbg.value(metadata !{%struct.reg_set* %14}, i64 0, metadata !668), !dbg !3155
  %15 = load i32* @bytes_used, align 4, !dbg !3159, !tbaa !1735
  %add44 = add i32 %15, 16, !dbg !3159
  store i32 %add44, i32* @bytes_used, align 4, !dbg !3159, !tbaa !1735
  %insn46 = getelementptr inbounds i8* %9, i64 8, !dbg !3160
  %16 = bitcast i8* %insn46 to %struct.rtx_def**, !dbg !3160
  store %struct.rtx_def* %insn, %struct.rtx_def** %16, align 8, !dbg !3160, !tbaa !1729
  %idxprom = sext i32 %regno to i64, !dbg !3161
  %17 = load %struct.reg_set*** @reg_set_table, align 8, !dbg !3161, !tbaa !1729
  %arrayidx = getelementptr inbounds %struct.reg_set** %17, i64 %idxprom, !dbg !3161
  %18 = load %struct.reg_set** %arrayidx, align 8, !dbg !3161, !tbaa !1729
  %next = bitcast i8* %9 to %struct.reg_set**, !dbg !3161
  store %struct.reg_set* %18, %struct.reg_set** %next, align 8, !dbg !3161, !tbaa !1729
  %19 = load %struct.reg_set*** @reg_set_table, align 8, !dbg !3162, !tbaa !1729
  %arrayidx48 = getelementptr inbounds %struct.reg_set** %19, i64 %idxprom, !dbg !3162
  store %struct.reg_set* %14, %struct.reg_set** %arrayidx48, align 8, !dbg !3162, !tbaa !1729
  ret void, !dbg !3163
}
