define internal fastcc i8* @gcse_alloc(i64 %size) #0 {
entry:
  %0 = load i8** getelementptr inbounds (%struct.obstack* @gcse_obstack, i64 0, i32 4), align 8, !tbaa !0
  %1 = load i8** getelementptr inbounds (%struct.obstack* @gcse_obstack, i64 0, i32 3), align 8, !tbaa !0
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sext = shl i64 %size, 32
  %conv1 = ashr exact i64 %sext, 32
  %cmp = icmp slt i64 %sub.ptr.sub, %conv1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %conv = trunc i64 %size to i32
  tail call void @_obstack_newchunk(%struct.obstack* @gcse_obstack, i32 %conv) #6
  %.pre = load i8** getelementptr inbounds (%struct.obstack* @gcse_obstack, i64 0, i32 3), align 8, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = phi i8* [ %.pre, %if.then ], [ %1, %entry ]
  %add.ptr = getelementptr inbounds i8* %2, i64 %conv1
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack* @gcse_obstack, i64 0, i32 3), align 8, !tbaa !0
  %3 = load i8** getelementptr inbounds (%struct.obstack* @gcse_obstack, i64 0, i32 2), align 8, !tbaa !0
  %cmp5 = icmp eq i8* %add.ptr, %3
  br i1 %cmp5, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end
  %bf.load = load i8* getelementptr inbounds (%struct.obstack* @gcse_obstack, i64 0, i32 10), align 8
  %bf.set = or i8 %bf.load, 2
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack* @gcse_obstack, i64 0, i32 10), align 8
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then7
  %sub.ptr.lhs.cast10 = ptrtoint i8* %add.ptr to i64
  %4 = load i32* getelementptr inbounds (%struct.obstack* @gcse_obstack, i64 0, i32 6), align 8, !tbaa !3
  %conv12 = sext i32 %4 to i64
  %add = add nsw i64 %conv12, %sub.ptr.lhs.cast10
  %neg = xor i32 %4, -1
  %conv14 = sext i32 %neg to i64
  %and = and i64 %add, %conv14
  %add.ptr15 = getelementptr inbounds i8* null, i64 %and
  store i8* %add.ptr15, i8** getelementptr inbounds (%struct.obstack* @gcse_obstack, i64 0, i32 3), align 8, !tbaa !0
  %5 = load %struct._obstack_chunk** getelementptr inbounds (%struct.obstack* @gcse_obstack, i64 0, i32 1), align 8, !tbaa !0
  %sub.ptr.lhs.cast18 = ptrtoint i8* %add.ptr15 to i64
  %sub.ptr.rhs.cast19 = ptrtoint %struct._obstack_chunk* %5 to i64
  %sub.ptr.sub20 = sub i64 %sub.ptr.lhs.cast18, %sub.ptr.rhs.cast19
  %6 = load i8** getelementptr inbounds (%struct.obstack* @gcse_obstack, i64 0, i32 4), align 8, !tbaa !0
  %sub.ptr.lhs.cast23 = ptrtoint i8* %6 to i64
  %sub.ptr.sub25 = sub i64 %sub.ptr.lhs.cast23, %sub.ptr.rhs.cast19
  %cmp26 = icmp sgt i64 %sub.ptr.sub20, %sub.ptr.sub25
  br i1 %cmp26, label %if.then28, label %if.end31

if.then28:                                        ; preds = %if.end8
  store i8* %6, i8** getelementptr inbounds (%struct.obstack* @gcse_obstack, i64 0, i32 3), align 8, !tbaa !0
  br label %if.end31

if.end31:                                         ; preds = %if.then28, %if.end8
  %7 = phi i8* [ %6, %if.then28 ], [ %add.ptr15, %if.end8 ]
  store i8* %7, i8** getelementptr inbounds (%struct.obstack* @gcse_obstack, i64 0, i32 2), align 8, !tbaa !0
  ret i8* %3
}
