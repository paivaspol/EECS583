define internal void @record_last_set_info(%struct.rtx_def* %dest, %struct.rtx_def* nocapture %setter, i8* %data) #0 {
entry:
  %0 = bitcast i8* %data to %struct.rtx_def*
  %1 = bitcast %struct.rtx_def* %dest to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 63
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %dest, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  %2 = load %struct.rtx_def** %rtx, align 8, !tbaa !0
  %.phi.trans.insert = bitcast %struct.rtx_def* %2 to i32*
  %bf.load1.pre = load i32* %.phi.trans.insert, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %bf.load1 = phi i32 [ %bf.load1.pre, %if.then ], [ %bf.load, %entry ]
  %dest.addr.0 = phi %struct.rtx_def* [ %2, %if.then ], [ %dest, %entry ]
  %bf.clear2 = and i32 %bf.load1, 65535
  switch i32 %bf.clear2, label %if.end14 [
    i32 61, label %if.then4
    i32 66, label %land.lhs.true
  ]

if.then4:                                         ; preds = %if.end
  %arrayidx6 = getelementptr inbounds %struct.rtx_def* %dest.addr.0, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx6 to i32*
  %3 = load i32* %rtuint, align 4, !tbaa !3
  tail call fastcc void @record_last_reg_set_info(%struct.rtx_def* %0, i32 %3) #7
  br label %if.end14

land.lhs.true:                                    ; preds = %if.end
  %bf.lshr = lshr i32 %bf.load1, 16
  %bf.clear11 = and i32 %bf.lshr, 255
  %call = tail call i32 @push_operand(%struct.rtx_def* %dest.addr.0, i32 %bf.clear11) #6
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then12, label %if.end14

if.then12:                                        ; preds = %land.lhs.true
  tail call fastcc void @record_last_mem_set_info(%struct.rtx_def* %0) #7
  br label %if.end14

if.end14:                                         ; preds = %if.end, %land.lhs.true, %if.then12, %if.then4
  ret void
}
