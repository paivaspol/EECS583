define internal fastcc %struct.rtx_def* @sge_plus_constant(%struct.rtx_def* %x, %struct.rtx_def* %c) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %x}, i64 0, metadata !2305), !dbg !6909
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %c}, i64 0, metadata !2306), !dbg !6909
  %0 = bitcast %struct.rtx_def* %x to i32*, !dbg !6910
  %bf.load = load i32* %0, align 8, !dbg !6910
  %bf.clear = and i32 %bf.load, 65535, !dbg !6910
  switch i32 %bf.clear, label %if.then7 [
    i32 54, label %if.then
    i32 75, label %if.else11
  ], !dbg !6910

if.then:                                          ; preds = %entry
  %rtwint = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0, i32 0, !dbg !6911
  %1 = load i64* %rtwint, align 8, !dbg !6911, !tbaa !4265
  %rtwint3 = getelementptr inbounds %struct.rtx_def* %c, i64 0, i32 1, i64 0, i32 0, !dbg !6911
  %2 = load i64* %rtwint3, align 8, !dbg !6911, !tbaa !4265
  %add = add nsw i64 %2, %1, !dbg !6911
  %call = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %add) #8, !dbg !6911
  br label %return, !dbg !6911

if.then7:                                         ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6912
  %bf.clear9 = and i32 %bf.lshr, 255, !dbg !6912
  %call10 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear9, %struct.rtx_def* %x, %struct.rtx_def* %c) #8, !dbg !6912
  br label %return, !dbg !6912

if.else11:                                        ; preds = %entry
  %fld12 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, !dbg !6913
  %arrayidx13 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 1, !dbg !6913
  %rtx = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**, !dbg !6913
  %3 = load %struct.rtx_def** %rtx, align 8, !dbg !6913, !tbaa !2982
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !6913
  %bf.load14 = load i32* %4, align 8, !dbg !6913
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !6913
  %cmp16 = icmp eq i32 %bf.clear15, 54, !dbg !6913
  br i1 %cmp16, label %if.then17, label %if.else36, !dbg !6913

if.then17:                                        ; preds = %if.else11
  %bf.lshr19 = lshr i32 %bf.load, 16, !dbg !6914
  %bf.clear20 = and i32 %bf.lshr19, 255, !dbg !6914
  %rtx23 = bitcast [1 x %union.rtunion_def]* %fld12 to %struct.rtx_def**, !dbg !6914
  %5 = load %struct.rtx_def** %rtx23, align 8, !dbg !6914, !tbaa !2982
  %rtwint29 = getelementptr inbounds %struct.rtx_def* %3, i64 0, i32 1, i64 0, i32 0, !dbg !6914
  %6 = load i64* %rtwint29, align 8, !dbg !6914, !tbaa !4265
  %rtwint32 = getelementptr inbounds %struct.rtx_def* %c, i64 0, i32 1, i64 0, i32 0, !dbg !6914
  %7 = load i64* %rtwint32, align 8, !dbg !6914, !tbaa !4265
  %add33 = add nsw i64 %7, %6, !dbg !6914
  %call34 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %add33) #8, !dbg !6914
  %call35 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear20, %struct.rtx_def* %5, %struct.rtx_def* %call34) #8, !dbg !6914
  br label %return, !dbg !6914

if.else36:                                        ; preds = %if.else11
  %rtx39 = bitcast [1 x %union.rtunion_def]* %fld12 to %struct.rtx_def**, !dbg !6916
  %8 = load %struct.rtx_def** %rtx39, align 8, !dbg !6916, !tbaa !2982
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !6916
  %bf.load40 = load i32* %9, align 8, !dbg !6916
  %bf.clear41 = and i32 %bf.load40, 65535, !dbg !6916
  %cmp42 = icmp ne i32 %bf.clear41, 75, !dbg !6916
  %cmp48 = icmp eq i32 %bf.clear15, 75, !dbg !6916
  %or.cond = and i1 %cmp42, %cmp48, !dbg !6916
  %bf.lshr63 = lshr i32 %bf.load, 16, !dbg !6917
  %bf.clear64 = and i32 %bf.lshr63, 255, !dbg !6917
  br i1 %or.cond, label %if.else61, label %if.then49, !dbg !6916

if.then49:                                        ; preds = %if.else36
  %call56 = tail call fastcc %struct.rtx_def* @sge_plus_constant(%struct.rtx_def* %8, %struct.rtx_def* %c) #10, !dbg !6919
  %10 = load %struct.rtx_def** %rtx, align 8, !dbg !6919, !tbaa !2982
  %call60 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear64, %struct.rtx_def* %call56, %struct.rtx_def* %10) #8, !dbg !6919
  ret %struct.rtx_def* %call60, !dbg !6921

if.else61:                                        ; preds = %if.else36
  %call68 = tail call fastcc %struct.rtx_def* @sge_plus_constant(%struct.rtx_def* %3, %struct.rtx_def* %c) #10, !dbg !6917
  %11 = load %struct.rtx_def** %rtx39, align 8, !dbg !6917, !tbaa !2982
  %call72 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear64, %struct.rtx_def* %call68, %struct.rtx_def* %11) #8, !dbg !6917
  ret %struct.rtx_def* %call72, !dbg !6921

return:                                           ; preds = %if.then17, %if.then7, %if.then
  %retval.0 = phi %struct.rtx_def* [ %call, %if.then ], [ %call10, %if.then7 ], [ %call35, %if.then17 ]
  ret %struct.rtx_def* %retval.0, !dbg !6921
}
