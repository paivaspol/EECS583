define internal void @note_set_pseudo_multiple_uses(%struct.rtx_def* %x, %struct.rtx_def* nocapture %y, i8* nocapture %data) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %x}, i64 0, metadata !2132), !dbg !6394
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %y}, i64 0, metadata !2133), !dbg !6395
  tail call void @llvm.dbg.value(metadata !{i8* %data}, i64 0, metadata !2134), !dbg !6396
  %cmp = icmp eq %struct.rtx_def* %x, null, !dbg !6397
  br i1 %cmp, label %if.end40, label %while.cond, !dbg !6397

while.cond:                                       ; preds = %entry, %while.body
  %x.addr.0 = phi %struct.rtx_def* [ %1, %while.body ], [ %x, %entry ]
  %0 = bitcast %struct.rtx_def* %x.addr.0 to i32*, !dbg !6398
  %bf.load = load i32* %0, align 8, !dbg !6398
  %bf.clear = and i32 %bf.load, 65535, !dbg !6398
  switch i32 %bf.clear, label %if.end40 [
    i32 64, label %while.body
    i32 132, label %while.body
    i32 133, label %while.body
    i32 63, label %while.body
    i32 61, label %lor.lhs.false15
  ], !dbg !6398

while.body:                                       ; preds = %while.cond, %while.cond, %while.cond, %while.cond
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 0, !dbg !6399
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6399
  %1 = load %struct.rtx_def** %rtx, align 8, !dbg !6399, !tbaa !2982
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %1}, i64 0, metadata !2132), !dbg !6399
  br label %while.cond, !dbg !6399

lor.lhs.false15:                                  ; preds = %while.cond
  %arrayidx17 = getelementptr inbounds %struct.rtx_def* %x.addr.0, i64 0, i32 1, i64 0, !dbg !6400
  %rtuint = bitcast %union.rtunion_def* %arrayidx17 to i32*, !dbg !6400
  %2 = load i32* %rtuint, align 4, !dbg !6400, !tbaa !2973
  %cmp18 = icmp ult i32 %2, 53, !dbg !6400
  br i1 %cmp18, label %if.end40, label %if.end20, !dbg !6400

if.end20:                                         ; preds = %lor.lhs.false15
  %3 = load i32* @max_reg_before_loop, align 4, !dbg !6401, !tbaa !2973
  %cmp24 = icmp ult i32 %2, %3, !dbg !6401
  br i1 %cmp24, label %lor.lhs.false25, label %if.then39, !dbg !6401

lor.lhs.false25:                                  ; preds = %if.end20
  %idxprom = zext i32 %2 to i64, !dbg !6401
  %array = getelementptr inbounds i8* %data, i64 8, !dbg !6401
  %4 = bitcast i8* %array to %struct.loop_reg**, !dbg !6401
  %5 = load %struct.loop_reg** %4, align 8, !dbg !6401, !tbaa !2982
  %single_usage = getelementptr inbounds %struct.loop_reg* %5, i64 %idxprom, i32 2, !dbg !6401
  %6 = load %struct.rtx_def** %single_usage, align 8, !dbg !6401, !tbaa !2982
  %tobool = icmp eq %struct.rtx_def* %6, null, !dbg !6401
  %7 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !dbg !6401, !tbaa !2982
  %cmp38 = icmp eq %struct.rtx_def* %6, %7, !dbg !6401
  %or.cond = or i1 %tobool, %cmp38, !dbg !6401
  br i1 %or.cond, label %if.then39, label %if.end40, !dbg !6401

if.then39:                                        ; preds = %lor.lhs.false25, %if.end20
  %multiple_uses = getelementptr inbounds i8* %data, i64 16, !dbg !6402
  %8 = bitcast i8* %multiple_uses to i32*, !dbg !6402
  store i32 1, i32* %8, align 4, !dbg !6402, !tbaa !2973
  br label %if.end40, !dbg !6402

if.end40:                                         ; preds = %while.cond, %lor.lhs.false25, %lor.lhs.false15, %entry, %if.then39
  ret void, !dbg !6402
}
