define internal fastcc void @add_label_notes(%struct.rtx_def* nocapture %x, %struct.rtx_def* %insns) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %x to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %1 = and i32 %bf.load, 134283263
  %2 = icmp ne i32 %1, 67
  %tobool3108 = icmp eq %struct.rtx_def* %insns, null
  %or.cond = or i1 %2, %tobool3108
  br i1 %or.cond, label %if.end32, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %insn.0109 = phi %struct.rtx_def* [ %insns, %for.body.lr.ph ], [ %10, %for.inc ]
  %3 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %call = tail call i32 @reg_mentioned_p(%struct.rtx_def* %3, %struct.rtx_def* %insn.0109) #8
  %tobool4 = icmp eq i32 %call, 0
  br i1 %tobool4, label %for.inc, label %if.then5

if.then5:                                         ; preds = %for.body
  %4 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %arrayidx10 = getelementptr inbounds %struct.rtx_def* %insn.0109, i64 0, i32 1, i64 6
  %rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**
  %5 = load %struct.rtx_def** %rtx11, align 8, !tbaa !4
  %call12 = tail call %struct.rtx_def* @gen_rtx_fmt_ue(i32 4, i32 13, %struct.rtx_def* %4, %struct.rtx_def* %5) #8
  %6 = getelementptr inbounds %union.rtunion_def* %arrayidx10, i64 0, i32 0
  %call12.c = ptrtoint %struct.rtx_def* %call12 to i64
  store i64 %call12.c, i64* %6, align 8, !tbaa !4
  %7 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  %8 = bitcast %struct.rtx_def* %7 to i32*
  %bf.load19 = load i32* %8, align 8
  %bf.clear20 = and i32 %bf.load19, 65535
  %cmp21 = icmp eq i32 %bf.clear20, 36
  br i1 %cmp21, label %if.then22, label %for.inc

if.then22:                                        ; preds = %if.then5
  %arrayidx27 = getelementptr inbounds %struct.rtx_def* %7, i64 0, i32 1, i64 3
  %rtint = bitcast %union.rtunion_def* %arrayidx27 to i32*
  %9 = load i32* %rtint, align 4, !tbaa !3
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %rtint, align 4, !tbaa !3
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then22, %if.then5
  %arrayidx30 = getelementptr inbounds %struct.rtx_def* %insn.0109, i64 0, i32 1, i64 2
  %rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**
  %10 = load %struct.rtx_def** %rtx31, align 8, !tbaa !4
  %tobool3 = icmp eq %struct.rtx_def* %10, null
  br i1 %tobool3, label %if.end32, label %for.body

if.end32:                                         ; preds = %entry, %for.inc
  %idxprom101 = zext i32 %bf.clear to i64
  %arrayidx33 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom101
  %11 = load i8** %arrayidx33, align 8, !tbaa !4
  %arrayidx35 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom101
  %12 = load i8* %arrayidx35, align 1, !tbaa !1
  %cmp37106 = icmp eq i8 %12, 0
  br i1 %cmp37106, label %for.end76, label %for.body39.lr.ph

for.body39.lr.ph:                                 ; preds = %if.end32
  %13 = zext i8 %12 to i64
  br label %for.body39

for.body39:                                       ; preds = %for.body39.lr.ph, %for.cond36.backedge
  %indvars.iv110 = phi i64 [ %13, %for.body39.lr.ph ], [ %indvars.iv.next111, %for.cond36.backedge ]
  %indvars.iv.next111 = add i64 %indvars.iv110, -1
  %arrayidx41 = getelementptr inbounds i8* %11, i64 %indvars.iv.next111
  %14 = load i8* %arrayidx41, align 1, !tbaa !1
  switch i8 %14, label %for.cond36.backedge [
    i8 101, label %if.then45
    i8 69, label %if.then55
  ]

for.cond36.backedge:                              ; preds = %if.then55, %for.body63, %for.body39, %if.then45
  %15 = trunc i64 %indvars.iv.next111 to i32
  %cmp37 = icmp sgt i32 %15, 0
  br i1 %cmp37, label %for.body39, label %for.end76

if.then45:                                        ; preds = %for.body39
  %arrayidx48 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next111
  %rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx49, align 8, !tbaa !4
  tail call fastcc void @add_label_notes(%struct.rtx_def* %16, %struct.rtx_def* %insns) #10
  br label %for.cond36.backedge

if.then55:                                        ; preds = %for.body39
  %arrayidx58 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next111
  %rtvec = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtvec_def**
  %17 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !4
  %num_elem = getelementptr inbounds %struct.rtvec_def* %17, i64 0, i32 0
  %18 = load i32* %num_elem, align 4, !tbaa !3
  %cmp61103 = icmp sgt i32 %18, 0
  br i1 %cmp61103, label %for.body63.lr.ph, label %for.cond36.backedge

for.body63.lr.ph:                                 ; preds = %if.then55
  %19 = sext i32 %18 to i64
  br label %for.body63

for.body63:                                       ; preds = %for.body63.for.body63_crit_edge, %for.body63.lr.ph
  %20 = phi %struct.rtvec_def* [ %17, %for.body63.lr.ph ], [ %.pre, %for.body63.for.body63_crit_edge ]
  %indvars.iv = phi i64 [ %19, %for.body63.lr.ph ], [ %indvars.iv.next, %for.body63.for.body63_crit_edge ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %arrayidx69 = getelementptr inbounds %struct.rtvec_def* %20, i64 0, i32 1, i64 %indvars.iv.next
  %21 = load %struct.rtx_def** %arrayidx69, align 8, !tbaa !4
  tail call fastcc void @add_label_notes(%struct.rtx_def* %21, %struct.rtx_def* %insns) #10
  %22 = trunc i64 %indvars.iv.next to i32
  %cmp61 = icmp sgt i32 %22, 0
  br i1 %cmp61, label %for.body63.for.body63_crit_edge, label %for.cond36.backedge

for.body63.for.body63_crit_edge:                  ; preds = %for.body63
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !4
  br label %for.body63

for.end76:                                        ; preds = %for.cond36.backedge, %if.end32
  ret void
}
