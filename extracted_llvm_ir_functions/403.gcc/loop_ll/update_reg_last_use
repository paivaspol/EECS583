define internal fastcc void @update_reg_last_use(%struct.rtx_def* nocapture %x, %struct.rtx_def* %insn) #0 {
entry:
  %0 = bitcast %struct.rtx_def* %x to i32*
  %bf.load = load i32* %0, align 8
  %bf.clear = and i32 %bf.load, 65535
  %cmp = icmp eq i32 %bf.clear, 61
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 0
  %rtuint = bitcast %union.rtunion_def* %arrayidx to i32*
  %1 = load i32* %rtuint, align 4, !tbaa !3
  %2 = load i32* @max_reg_before_loop, align 4, !tbaa !3
  %cmp1 = icmp ult i32 %1, %2
  br i1 %cmp1, label %land.lhs.true2, label %if.else

land.lhs.true2:                                   ; preds = %land.lhs.true
  %arrayidx4 = getelementptr inbounds %struct.rtx_def* %insn, i64 0, i32 1, i64 0
  %rtint = bitcast %union.rtunion_def* %arrayidx4 to i32*
  %3 = load i32* %rtint, align 4, !tbaa !3
  %4 = load i32* @max_uid_for_loop, align 4, !tbaa !3
  %cmp5 = icmp slt i32 %3, %4
  br i1 %cmp5, label %land.lhs.true6, label %if.else

land.lhs.true6:                                   ; preds = %land.lhs.true2
  %idxprom = zext i32 %1 to i64
  %5 = load %struct.varray_head_tag** @reg_n_info, align 8, !tbaa !4
  %data = getelementptr inbounds %struct.varray_head_tag* %5, i64 0, i32 4
  %reg = bitcast %union.varray_data_tag* %data to [1 x %struct.reg_info_def*]*
  %arrayidx10 = getelementptr inbounds [1 x %struct.reg_info_def*]* %reg, i64 0, i64 %idxprom
  %6 = load %struct.reg_info_def** %arrayidx10, align 8, !tbaa !4
  %last_uid = getelementptr inbounds %struct.reg_info_def* %6, i64 0, i32 1
  %7 = load i32** @uid_luid, align 8, !tbaa !4
  %8 = load i32* %last_uid, align 4, !tbaa !3
  %idxprom11 = sext i32 %8 to i64
  %arrayidx12 = getelementptr inbounds i32* %7, i64 %idxprom11
  %9 = load i32* %arrayidx12, align 4, !tbaa !3
  %idxprom20 = sext i32 %3 to i64
  %arrayidx21 = getelementptr inbounds i32* %7, i64 %idxprom20
  %10 = load i32* %arrayidx21, align 4, !tbaa !3
  %cmp22 = icmp slt i32 %9, %10
  br i1 %cmp22, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true6
  store i32 %3, i32* %last_uid, align 4, !tbaa !3
  br label %if.end78

if.else:                                          ; preds = %land.lhs.true6, %land.lhs.true2, %land.lhs.true, %entry
  %idxprom36100 = zext i32 %bf.clear to i64
  %arrayidx37 = getelementptr inbounds [153 x i8*]* @rtx_format, i64 0, i64 %idxprom36100
  %11 = load i8** %arrayidx37, align 8, !tbaa !4
  %arrayidx41 = getelementptr inbounds [153 x i8]* @rtx_length, i64 0, i64 %idxprom36100
  %12 = load i8* %arrayidx41, align 1, !tbaa !1
  %cmp42105 = icmp eq i8 %12, 0
  br i1 %cmp42105, label %if.end78, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.else
  %13 = zext i8 %12 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.backedge
  %indvars.iv107 = phi i64 [ %13, %for.body.lr.ph ], [ %indvars.iv.next108, %for.cond.backedge ]
  %indvars.iv.next108 = add i64 %indvars.iv107, -1
  %arrayidx45 = getelementptr inbounds i8* %11, i64 %indvars.iv.next108
  %14 = load i8* %arrayidx45, align 1, !tbaa !1
  switch i8 %14, label %for.cond.backedge [
    i8 101, label %if.then49
    i8 69, label %if.then59
  ]

for.cond.backedge:                                ; preds = %if.then59, %for.body67, %for.body, %if.then49
  %15 = trunc i64 %indvars.iv.next108 to i32
  %cmp42 = icmp sgt i32 %15, 0
  br i1 %cmp42, label %for.body, label %if.end78

if.then49:                                        ; preds = %for.body
  %arrayidx52 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next108
  %rtx = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**
  %16 = load %struct.rtx_def** %rtx, align 8, !tbaa !4
  tail call fastcc void @update_reg_last_use(%struct.rtx_def* %16, %struct.rtx_def* %insn) #10
  br label %for.cond.backedge

if.then59:                                        ; preds = %for.body
  %arrayidx62 = getelementptr inbounds %struct.rtx_def* %x, i64 0, i32 1, i64 %indvars.iv.next108
  %rtvec = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtvec_def**
  %17 = load %struct.rtvec_def** %rtvec, align 8, !tbaa !4
  %num_elem = getelementptr inbounds %struct.rtvec_def* %17, i64 0, i32 0
  %18 = load i32* %num_elem, align 4, !tbaa !3
  %cmp65102 = icmp sgt i32 %18, 0
  br i1 %cmp65102, label %for.body67.lr.ph, label %for.cond.backedge

for.body67.lr.ph:                                 ; preds = %if.then59
  %19 = sext i32 %18 to i64
  br label %for.body67

for.body67:                                       ; preds = %for.body67.for.body67_crit_edge, %for.body67.lr.ph
  %20 = phi %struct.rtvec_def* [ %17, %for.body67.lr.ph ], [ %.pre, %for.body67.for.body67_crit_edge ]
  %indvars.iv = phi i64 [ %19, %for.body67.lr.ph ], [ %indvars.iv.next, %for.body67.for.body67_crit_edge ]
  %indvars.iv.next = add i64 %indvars.iv, -1
  %arrayidx73 = getelementptr inbounds %struct.rtvec_def* %20, i64 0, i32 1, i64 %indvars.iv.next
  %21 = load %struct.rtx_def** %arrayidx73, align 8, !tbaa !4
  tail call fastcc void @update_reg_last_use(%struct.rtx_def* %21, %struct.rtx_def* %insn) #10
  %22 = trunc i64 %indvars.iv.next to i32
  %cmp65 = icmp sgt i32 %22, 0
  br i1 %cmp65, label %for.body67.for.body67_crit_edge, label %for.cond.backedge

for.body67.for.body67_crit_edge:                  ; preds = %for.body67
  %.pre = load %struct.rtvec_def** %rtvec, align 8, !tbaa !4
  br label %for.body67

if.end78:                                         ; preds = %if.else, %for.cond.backedge, %if.then
  ret void
}
