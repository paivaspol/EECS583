define internal i32 @replace_loop_mem(%struct.rtx_def** %mem, i8* nocapture %data) #0 {
entry:
  %0 = load %struct.rtx_def** %mem, align 8, !tbaa !4
  %cmp = icmp eq %struct.rtx_def* %0, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %1 = bitcast %struct.rtx_def* %0 to i32*
  %bf.load = load i32* %1, align 8
  %bf.clear = and i32 %bf.load, 65535
  switch i32 %bf.clear, label %sw.default [
    i32 66, label %sw.epilog
    i32 55, label %return
  ]

sw.default:                                       ; preds = %if.end
  br label %return

sw.epilog:                                        ; preds = %if.end
  %match = bitcast i8* %data to %struct.rtx_def**
  %2 = load %struct.rtx_def** %match, align 8, !tbaa !4
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %2, %struct.rtx_def* %0) #8
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %return, label %if.end2

if.end2:                                          ; preds = %sw.epilog
  %insn = getelementptr inbounds i8* %data, i64 16
  %3 = bitcast i8* %insn to %struct.rtx_def**
  %4 = load %struct.rtx_def** %3, align 8, !tbaa !4
  %replacement = getelementptr inbounds i8* %data, i64 8
  %5 = bitcast i8* %replacement to %struct.rtx_def**
  %6 = load %struct.rtx_def** %5, align 8, !tbaa !4
  %call3 = tail call i32 @validate_change(%struct.rtx_def* %4, %struct.rtx_def** %mem, %struct.rtx_def* %6, i32 1) #8
  br label %return

return:                                           ; preds = %sw.epilog, %if.end, %entry, %if.end2, %sw.default
  %retval.0 = phi i32 [ 0, %sw.default ], [ 0, %if.end2 ], [ 0, %entry ], [ -1, %if.end ], [ 0, %sw.epilog ]
  ret i32 %retval.0
}
