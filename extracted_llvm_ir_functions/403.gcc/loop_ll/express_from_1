define internal fastcc %struct.rtx_def* @express_from_1(%struct.rtx_def* %a, %struct.rtx_def* %b, %struct.rtx_def* %mult) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %a}, i64 0, metadata !1649), !dbg !4553
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %b}, i64 0, metadata !1650), !dbg !4553
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %mult}, i64 0, metadata !1651), !dbg !4553
  %0 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !dbg !4554, !tbaa !2982
  %cmp = icmp eq %struct.rtx_def* %0, %mult, !dbg !4554
  br i1 %cmp, label %return, label %if.end, !dbg !4554

if.end:                                           ; preds = %entry
  %1 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !4555, !tbaa !2982
  %cmp1 = icmp eq %struct.rtx_def* %1, %mult, !dbg !4555
  %.phi.trans.insert = bitcast %struct.rtx_def* %a to i32*
  %bf.load5253.pre = load i32* %.phi.trans.insert, align 8, !dbg !4556
  br i1 %cmp1, label %while.cond.preheader, label %land.lhs.true, !dbg !4555

land.lhs.true:                                    ; preds = %if.end
  %bf.clear = and i32 %bf.load5253.pre, 65535, !dbg !4555
  %cmp2 = icmp eq i32 %bf.clear, 54, !dbg !4555
  br i1 %cmp2, label %while.cond.preheader, label %return, !dbg !4555

while.cond.preheader:                             ; preds = %if.end, %land.lhs.true
  %bf.clear6254 = and i32 %bf.load5253.pre, 65535, !dbg !4556
  %cmp7255 = icmp eq i32 %bf.clear6254, 75, !dbg !4556
  br i1 %cmp7255, label %land.rhs, label %while.end, !dbg !4556

land.rhs:                                         ; preds = %while.cond.preheader, %while.cond.backedge
  %bf.load57274 = phi i32 [ %bf.load5, %while.cond.backedge ], [ %bf.load5253.pre, %while.cond.preheader ]
  %a.addr.0257 = phi %struct.rtx_def* [ %a.addr.0.be, %while.cond.backedge ], [ %a, %while.cond.preheader ]
  %b.addr.0256 = phi %struct.rtx_def* [ %b.addr.0.be, %while.cond.backedge ], [ %b, %while.cond.preheader ]
  %2 = bitcast %struct.rtx_def* %b.addr.0256 to i32*, !dbg !4556
  %bf.load8 = load i32* %2, align 8, !dbg !4556
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !4556
  %cmp10 = icmp eq i32 %bf.clear9, 75, !dbg !4556
  br i1 %cmp10, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %fld = getelementptr inbounds %struct.rtx_def* %a.addr.0257, i64 0, i32 1, !dbg !4557
  %rtx = bitcast [1 x %union.rtunion_def]* %fld to %struct.rtx_def**, !dbg !4557
  %3 = load %struct.rtx_def** %rtx, align 8, !dbg !4557, !tbaa !2982
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %3}, i64 0, metadata !1652), !dbg !4557
  %arrayidx12 = getelementptr inbounds %struct.rtx_def* %a.addr.0257, i64 0, i32 1, i64 1, !dbg !4557
  %rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**, !dbg !4557
  %4 = load %struct.rtx_def** %rtx13, align 8, !dbg !4557, !tbaa !2982
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %4}, i64 0, metadata !1655), !dbg !4557
  %5 = bitcast %struct.rtx_def* %3 to i32*, !dbg !4558
  %bf.load14 = load i32* %5, align 8, !dbg !4558
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !4558
  %cmp16 = icmp eq i32 %bf.clear15, 75, !dbg !4558
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %3}, i64 0, metadata !1657), !dbg !4559
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %4}, i64 0, metadata !1652), !dbg !4559
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %3}, i64 0, metadata !1655), !dbg !4559
  %. = select i1 %cmp16, %struct.rtx_def* %3, %struct.rtx_def* %4, !dbg !4558
  %.243 = select i1 %cmp16, %struct.rtx_def* %4, %struct.rtx_def* %3, !dbg !4558
  %fld19 = getelementptr inbounds %struct.rtx_def* %b.addr.0256, i64 0, i32 1, !dbg !4560
  %rtx21 = bitcast [1 x %union.rtunion_def]* %fld19 to %struct.rtx_def**, !dbg !4560
  %6 = load %struct.rtx_def** %rtx21, align 8, !dbg !4560, !tbaa !2982
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %6}, i64 0, metadata !1654), !dbg !4560
  %arrayidx23 = getelementptr inbounds %struct.rtx_def* %b.addr.0256, i64 0, i32 1, i64 1, !dbg !4560
  %rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !4560
  %7 = load %struct.rtx_def** %rtx24, align 8, !dbg !4560, !tbaa !2982
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %7}, i64 0, metadata !1656), !dbg !4560
  %8 = bitcast %struct.rtx_def* %6 to i32*, !dbg !4561
  %bf.load25 = load i32* %8, align 8, !dbg !4561
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !4561
  %cmp27 = icmp eq i32 %bf.clear26, 75, !dbg !4561
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %6}, i64 0, metadata !1657), !dbg !4562
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %7}, i64 0, metadata !1654), !dbg !4562
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %6}, i64 0, metadata !1656), !dbg !4562
  %rb.0 = select i1 %cmp27, %struct.rtx_def* %7, %struct.rtx_def* %6, !dbg !4561
  %ob.0 = select i1 %cmp27, %struct.rtx_def* %6, %struct.rtx_def* %7, !dbg !4561
  %call = tail call i32 @rtx_equal_p(%struct.rtx_def* %.243, %struct.rtx_def* %rb.0) #8, !dbg !4563
  %tobool = icmp eq i32 %call, 0, !dbg !4563
  br i1 %tobool, label %if.else, label %while.cond.backedge, !dbg !4563

while.cond.backedge:                              ; preds = %while.body, %land.lhs.true34, %land.lhs.true42
  %b.addr.0.be = phi %struct.rtx_def* [ %ob.0, %while.body ], [ %rb.0, %land.lhs.true34 ], [ %ob.0, %land.lhs.true42 ]
  %a.addr.0.be = phi %struct.rtx_def* [ %., %while.body ], [ %., %land.lhs.true34 ], [ %.243, %land.lhs.true42 ]
  %9 = bitcast %struct.rtx_def* %a.addr.0.be to i32*, !dbg !4556
  %bf.load5 = load i32* %9, align 8, !dbg !4556
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !4556
  %cmp7 = icmp eq i32 %bf.clear6, 75, !dbg !4556
  br i1 %cmp7, label %land.rhs, label %while.end, !dbg !4556

if.else:                                          ; preds = %while.body
  %10 = bitcast %struct.rtx_def* %ob.0 to i32*, !dbg !4564
  %bf.load31 = load i32* %10, align 8, !dbg !4564
  %bf.clear32 = and i32 %bf.load31, 65535, !dbg !4564
  %cmp33 = icmp eq i32 %bf.clear32, 75, !dbg !4564
  br i1 %cmp33, label %if.else38, label %land.lhs.true34, !dbg !4564

land.lhs.true34:                                  ; preds = %if.else
  %call35 = tail call i32 @rtx_equal_p(%struct.rtx_def* %.243, %struct.rtx_def* %ob.0) #8, !dbg !4564
  %tobool36 = icmp eq i32 %call35, 0, !dbg !4564
  br i1 %tobool36, label %if.else38, label %while.cond.backedge, !dbg !4564

if.else38:                                        ; preds = %land.lhs.true34, %if.else
  %11 = bitcast %struct.rtx_def* %. to i32*, !dbg !4565
  %bf.load39 = load i32* %11, align 8, !dbg !4565
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !4565
  %cmp41 = icmp eq i32 %bf.clear40, 75, !dbg !4565
  br i1 %cmp41, label %if.else46, label %land.lhs.true42, !dbg !4565

land.lhs.true42:                                  ; preds = %if.else38
  %call43 = tail call i32 @rtx_equal_p(%struct.rtx_def* %., %struct.rtx_def* %rb.0) #8, !dbg !4565
  %tobool44 = icmp eq i32 %call43, 0, !dbg !4565
  br i1 %tobool44, label %if.else46, label %while.cond.backedge, !dbg !4565

if.else46:                                        ; preds = %land.lhs.true42, %if.else38
  %call47 = tail call fastcc %struct.rtx_def* @express_from_1(%struct.rtx_def* %a.addr.0257, %struct.rtx_def* %ob.0, %struct.rtx_def* %mult) #10, !dbg !4566
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %call47}, i64 0, metadata !1656), !dbg !4566
  %cmp48 = icmp eq %struct.rtx_def* %call47, null, !dbg !4568
  br i1 %cmp48, label %return, label %if.end50, !dbg !4568

if.end50:                                         ; preds = %if.else46
  %bf.load51 = load i32* %2, align 8, !dbg !4569
  %bf.lshr = lshr i32 %bf.load51, 16, !dbg !4569
  %bf.clear52 = and i32 %bf.lshr, 255, !dbg !4569
  %call53 = tail call %struct.rtx_def* @gen_rtx_fmt_ee(i32 75, i32 %bf.clear52, %struct.rtx_def* %rb.0, %struct.rtx_def* %call47) #8, !dbg !4569
  br label %return, !dbg !4569

while.end:                                        ; preds = %while.cond.backedge, %land.rhs, %while.cond.preheader
  %bf.load138 = phi i32 [ %bf.load5253.pre, %while.cond.preheader ], [ %bf.load57274, %land.rhs ], [ %bf.load5, %while.cond.backedge ]
  %a.addr.0.lcssa = phi %struct.rtx_def* [ %a, %while.cond.preheader ], [ %a.addr.0257, %land.rhs ], [ %a.addr.0.be, %while.cond.backedge ]
  %b.addr.0.lcssa = phi %struct.rtx_def* [ %b, %while.cond.preheader ], [ %b.addr.0256, %land.rhs ], [ %b.addr.0.be, %while.cond.backedge ]
  %bf.clear58 = and i32 %bf.load138, 65535, !dbg !4570
  switch i32 %bf.clear58, label %if.else105 [
    i32 75, label %if.then60
    i32 54, label %if.then95
  ], !dbg !4570

if.then60:                                        ; preds = %while.end
  %fld65 = getelementptr inbounds %struct.rtx_def* %a.addr.0.lcssa, i64 0, i32 1, !dbg !4571
  %rtx67 = bitcast [1 x %union.rtunion_def]* %fld65 to %struct.rtx_def**, !dbg !4571
  %12 = load %struct.rtx_def** %rtx67, align 8, !dbg !4571, !tbaa !2982
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %12}, i64 0, metadata !1658), !dbg !4571
  %arrayidx69 = getelementptr inbounds %struct.rtx_def* %a.addr.0.lcssa, i64 0, i32 1, i64 1, !dbg !4571
  %rtx70 = bitcast %union.rtunion_def* %arrayidx69 to %struct.rtx_def**, !dbg !4571
  %13 = load %struct.rtx_def** %rtx70, align 8, !dbg !4571, !tbaa !2982
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %13}, i64 0, metadata !1660), !dbg !4571
  %call71 = tail call i32 @rtx_equal_p(%struct.rtx_def* %13, %struct.rtx_def* %b.addr.0.lcssa) #8, !dbg !4572
  %tobool72 = icmp eq i32 %call71, 0, !dbg !4572
  br i1 %tobool72, label %if.else74, label %if.end79, !dbg !4572

if.else74:                                        ; preds = %if.then60
  %call75 = tail call i32 @rtx_equal_p(%struct.rtx_def* %12, %struct.rtx_def* %b.addr.0.lcssa) #8, !dbg !4573
  %tobool76 = icmp eq i32 %call75, 0, !dbg !4573
  br i1 %tobool76, label %return, label %if.end79, !dbg !4573

if.end79:                                         ; preds = %if.then60, %if.else74
  %oa64.0 = phi %struct.rtx_def* [ %13, %if.else74 ], [ %12, %if.then60 ]
  %14 = bitcast %struct.rtx_def* %oa64.0 to i32*, !dbg !4574
  %bf.load80 = load i32* %14, align 8, !dbg !4574
  %bf.clear81 = and i32 %bf.load80, 65535, !dbg !4574
  %cmp82 = icmp eq i32 %bf.clear81, 54, !dbg !4574
  br i1 %cmp82, label %if.end84, label %return, !dbg !4574

if.end84:                                         ; preds = %if.end79
  %rtwint = getelementptr inbounds %struct.rtx_def* %oa64.0, i64 0, i32 1, i64 0, i32 0, !dbg !4575
  %15 = load i64* %rtwint, align 8, !dbg !4575, !tbaa !4265
  %sub = sub i64 0, %15, !dbg !4575
  %rtwint89 = getelementptr inbounds %struct.rtx_def* %mult, i64 0, i32 1, i64 0, i32 0, !dbg !4575
  %16 = load i64* %rtwint89, align 8, !dbg !4575, !tbaa !4265
  %mul = mul nsw i64 %16, %sub, !dbg !4575
  %call90 = tail call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %mul) #8, !dbg !4575
  br label %return, !dbg !4575

if.then95:                                        ; preds = %while.end
  %rtwint98 = getelementptr inbounds %struct.rtx_def* %a.addr.0.lcssa, i64 0, i32 1, i64 0, i32 0, !dbg !4576
  %17 = load i64* %rtwint98, align 8, !dbg !4576, !tbaa !4265
  %sub99 = sub i64 0, %17, !dbg !4576
  %rtwint102 = getelementptr inbounds %struct.rtx_def* %mult, i64 0, i32 1, i64 0, i32 0, !dbg !4576
  %18 = load i64* %rtwint102, align 8, !dbg !4576, !tbaa !4265
  %mul103 = mul nsw i64 %18, %sub99, !dbg !4576
  %call104 = tail call %struct.rtx_def* @plus_constant_wide(%struct.rtx_def* %b.addr.0.lcssa, i64 %mul103) #8, !dbg !4576
  br label %return, !dbg !4576

if.else105:                                       ; preds = %while.end
  %bf.clear58.off = add i32 %bf.clear58, -67, !dbg !4578
  %switch = icmp ult i32 %bf.clear58.off, 2, !dbg !4578
  br i1 %switch, label %if.then136, label %lor.lhs.false112, !dbg !4578

lor.lhs.false112:                                 ; preds = %if.else105
  switch i32 %bf.clear58, label %if.else148 [
    i32 140, label %if.then136
    i32 134, label %if.then136
    i32 58, label %if.then136
    i32 56, label %if.then136
    i32 55, label %if.then136
    i32 54, label %if.then136
  ], !dbg !4578

if.then136:                                       ; preds = %lor.lhs.false112, %lor.lhs.false112, %lor.lhs.false112, %lor.lhs.false112, %lor.lhs.false112, %lor.lhs.false112, %if.else105
  %bf.lshr139 = lshr i32 %bf.load138, 16, !dbg !4579
  %bf.clear140 = and i32 %bf.lshr139, 255, !dbg !4579
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear140}, i64 0, metadata !1661), !dbg !4579
  %19 = bitcast %struct.rtx_def* %b.addr.0.lcssa to i32*, !dbg !4580
  %bf.load142 = load i32* %19, align 8, !dbg !4580
  %bf.lshr143 = lshr i32 %bf.load142, 16, !dbg !4580
  %bf.clear144 = and i32 %bf.lshr143, 255, !dbg !4580
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear144}, i64 0, metadata !1663), !dbg !4580
  %cmp146 = icmp eq i32 %bf.clear144, 0, !dbg !4581
  %cond = select i1 %cmp146, i32 %bf.clear140, i32 %bf.clear144, !dbg !4581
  tail call void @llvm.dbg.value(metadata !{i32 %cond}, i64 0, metadata !1664), !dbg !4581
  %call147 = tail call %struct.rtx_def* @simplify_gen_binary(i32 76, i32 %cond, %struct.rtx_def* %b.addr.0.lcssa, %struct.rtx_def* %a.addr.0.lcssa) #8, !dbg !4582
  br label %return, !dbg !4582

if.else148:                                       ; preds = %lor.lhs.false112
  %20 = bitcast %struct.rtx_def* %b.addr.0.lcssa to i32*, !dbg !4583
  %bf.load149 = load i32* %20, align 8, !dbg !4583
  %bf.clear150 = and i32 %bf.load149, 65535, !dbg !4583
  %cmp151 = icmp eq i32 %bf.clear150, 75, !dbg !4583
  br i1 %cmp151, label %if.then152, label %if.else173, !dbg !4583

if.then152:                                       ; preds = %if.else148
  %fld153 = getelementptr inbounds %struct.rtx_def* %b.addr.0.lcssa, i64 0, i32 1, !dbg !4584
  %rtx155 = bitcast [1 x %union.rtunion_def]* %fld153 to %struct.rtx_def**, !dbg !4584
  %21 = load %struct.rtx_def** %rtx155, align 8, !dbg !4584, !tbaa !2982
  %call156 = tail call i32 @rtx_equal_p(%struct.rtx_def* %a.addr.0.lcssa, %struct.rtx_def* %21) #8, !dbg !4584
  %tobool157 = icmp eq i32 %call156, 0, !dbg !4584
  %arrayidx164 = getelementptr inbounds %struct.rtx_def* %b.addr.0.lcssa, i64 0, i32 1, i64 1, !dbg !4586
  %rtx165 = bitcast %union.rtunion_def* %arrayidx164 to %struct.rtx_def**, !dbg !4586
  %22 = load %struct.rtx_def** %rtx165, align 8, !dbg !4586, !tbaa !2982
  br i1 %tobool157, label %if.else162, label %return, !dbg !4584

if.else162:                                       ; preds = %if.then152
  %call166 = tail call i32 @rtx_equal_p(%struct.rtx_def* %a.addr.0.lcssa, %struct.rtx_def* %22) #8, !dbg !4586
  %tobool167 = icmp eq i32 %call166, 0, !dbg !4586
  br i1 %tobool167, label %return, label %if.then168, !dbg !4586

if.then168:                                       ; preds = %if.else162
  %23 = load %struct.rtx_def** %rtx155, align 8, !dbg !4587, !tbaa !2982
  br label %return, !dbg !4587

if.else173:                                       ; preds = %if.else148
  %call174 = tail call i32 @rtx_equal_p(%struct.rtx_def* %a.addr.0.lcssa, %struct.rtx_def* %b.addr.0.lcssa) #8, !dbg !4588
  %tobool175 = icmp eq i32 %call174, 0, !dbg !4588
  %24 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !dbg !4589, !tbaa !2982
  %.248 = select i1 %tobool175, %struct.rtx_def* null, %struct.rtx_def* %24, !dbg !4588
  ret %struct.rtx_def* %.248, !dbg !4588

return:                                           ; preds = %if.else162, %if.then152, %if.end79, %if.else74, %if.else46, %land.lhs.true, %entry, %if.then168, %if.then136, %if.then95, %if.end84, %if.end50
  %retval.0 = phi %struct.rtx_def* [ %call53, %if.end50 ], [ %call90, %if.end84 ], [ %call104, %if.then95 ], [ %call147, %if.then136 ], [ %23, %if.then168 ], [ %b, %entry ], [ null, %land.lhs.true ], [ null, %if.else46 ], [ null, %if.else74 ], [ null, %if.end79 ], [ %22, %if.then152 ], [ null, %if.else162 ]
  ret %struct.rtx_def* %retval.0, !dbg !4590
}
