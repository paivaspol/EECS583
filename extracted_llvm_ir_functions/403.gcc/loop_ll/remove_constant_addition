define internal fastcc i64 @remove_constant_addition(%struct.rtx_def** nocapture %x) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def** %x}, i64 0, metadata !2408), !dbg !6429
  tail call void @llvm.dbg.value(metadata !5306, i64 0, metadata !2409), !dbg !6430
  %0 = load %struct.rtx_def** %x, align 8, !dbg !6431, !tbaa !2982
  tail call void @llvm.dbg.value(metadata !{%struct.rtx_def* %0}, i64 0, metadata !2410), !dbg !6431
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !6432
  %bf.load = load i32* %1, align 8, !dbg !6432
  %bf.clear = and i32 %bf.load, 65535, !dbg !6432
  switch i32 %bf.clear, label %return [
    i32 58, label %if.then
    i32 54, label %if.then42
    i32 75, label %if.then49
  ], !dbg !6432

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, !dbg !6433
  %rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6433
  %2 = load %struct.rtx_def** %rtx, align 8, !dbg !6433, !tbaa !2982
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !6433
  %bf.load1 = load i32* %3, align 8, !dbg !6433
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !6433
  %cmp3 = icmp eq i32 %bf.clear2, 75, !dbg !6433
  br i1 %cmp3, label %land.lhs.true, label %return, !dbg !6433

land.lhs.true:                                    ; preds = %if.then
  %fld7 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, !dbg !6433
  %rtx9 = bitcast [1 x %union.rtunion_def]* %fld7 to %struct.rtx_def**, !dbg !6433
  %4 = load %struct.rtx_def** %rtx9, align 8, !dbg !6433, !tbaa !2982
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !6433
  %bf.load10 = load i32* %5, align 8, !dbg !6433
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !6433
  %cmp12 = icmp eq i32 %bf.clear11, 68, !dbg !6433
  br i1 %cmp12, label %land.lhs.true13, label %return, !dbg !6433

land.lhs.true13:                                  ; preds = %land.lhs.true
  %arrayidx18 = getelementptr inbounds %struct.rtx_def* %2, i64 0, i32 1, i64 1, !dbg !6433
  %rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !6433
  %6 = load %struct.rtx_def** %rtx19, align 8, !dbg !6433, !tbaa !2982
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !6433
  %bf.load20 = load i32* %7, align 8, !dbg !6433
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !6433
  %cmp22 = icmp eq i32 %bf.clear21, 54, !dbg !6433
  br i1 %cmp22, label %if.then23, label %return, !dbg !6433

if.then23:                                        ; preds = %land.lhs.true13
  store %struct.rtx_def* %4, %struct.rtx_def** %x, align 8, !dbg !6435, !tbaa !2982
  %8 = load %struct.rtx_def** %rtx, align 8, !dbg !6437, !tbaa !2982
  %arrayidx34 = getelementptr inbounds %struct.rtx_def* %8, i64 0, i32 1, i64 1, !dbg !6437
  %rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**, !dbg !6437
  %9 = load %struct.rtx_def** %rtx35, align 8, !dbg !6437, !tbaa !2982
  %rtwint = getelementptr inbounds %struct.rtx_def* %9, i64 0, i32 1, i64 0, i32 0, !dbg !6437
  %10 = load i64* %rtwint, align 8, !dbg !6437, !tbaa !4265
  br label %return, !dbg !6437

if.then42:                                        ; preds = %entry
  %rtwint45 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 0, i32 0, !dbg !6438
  %11 = load i64* %rtwint45, align 8, !dbg !6438, !tbaa !4265
  tail call void @llvm.dbg.value(metadata !{i64 %11}, i64 0, metadata !2409), !dbg !6438
  %12 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !dbg !6440, !tbaa !2982
  store %struct.rtx_def* %12, %struct.rtx_def** %x, align 8, !dbg !6440, !tbaa !2982
  br label %return, !dbg !6441

if.then49:                                        ; preds = %entry
  %fld50 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, !dbg !6442
  %rtx52 = bitcast [1 x %union.rtunion_def]* %fld50 to %struct.rtx_def**, !dbg !6442
  %call = tail call fastcc i64 @remove_constant_addition(%struct.rtx_def** %rtx52) #10, !dbg !6442
  tail call void @llvm.dbg.value(metadata !{i64 %call}, i64 0, metadata !2409), !dbg !6442
  %arrayidx54 = getelementptr inbounds %struct.rtx_def* %0, i64 0, i32 1, i64 1, !dbg !6444
  %rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**, !dbg !6444
  %call56 = tail call fastcc i64 @remove_constant_addition(%struct.rtx_def** %rtx55) #10, !dbg !6444
  %add57 = add nsw i64 %call56, %call, !dbg !6444
  tail call void @llvm.dbg.value(metadata !{i64 %add57}, i64 0, metadata !2409), !dbg !6444
  %13 = load %struct.rtx_def** %rtx52, align 8, !dbg !6445, !tbaa !2982
  %14 = load %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 8, !dbg !6445, !tbaa !2982
  %cmp61 = icmp eq %struct.rtx_def* %13, %14, !dbg !6445
  %15 = load %struct.rtx_def** %rtx55, align 8, !dbg !6446, !tbaa !2982
  br i1 %cmp61, label %if.then62, label %if.else66, !dbg !6445

if.then62:                                        ; preds = %if.then49
  store %struct.rtx_def* %15, %struct.rtx_def** %x, align 8, !dbg !6446, !tbaa !2982
  br label %return, !dbg !6446

if.else66:                                        ; preds = %if.then49
  %cmp70 = icmp eq %struct.rtx_def* %15, %14, !dbg !6447
  br i1 %cmp70, label %if.then71, label %return, !dbg !6447

if.then71:                                        ; preds = %if.else66
  store %struct.rtx_def* %13, %struct.rtx_def** %x, align 8, !dbg !6448, !tbaa !2982
  br label %return, !dbg !6448

return:                                           ; preds = %if.then42, %if.then62, %if.then71, %if.else66, %entry, %if.then, %land.lhs.true, %land.lhs.true13, %if.then23
  %retval.0 = phi i64 [ %10, %if.then23 ], [ 0, %land.lhs.true13 ], [ 0, %land.lhs.true ], [ 0, %if.then ], [ %11, %if.then42 ], [ %add57, %if.then62 ], [ %add57, %if.then71 ], [ %add57, %if.else66 ], [ 0, %entry ]
  ret i64 %retval.0, !dbg !6449
}
