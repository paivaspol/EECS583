define void @md5_process_bytes(i8* %buffer, i64 %len, %struct.md5_ctx* %ctx) #0 {
entry:
  %buflen = getelementptr inbounds %struct.md5_ctx* %ctx, i64 0, i32 5
  %0 = load i32* %buflen, align 4, !tbaa !0
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.end28, label %if.then

if.then:                                          ; preds = %entry
  %conv = zext i32 %0 to i64
  %sub = sub i64 128, %conv
  %cmp2 = icmp ugt i64 %sub, %len
  %len.sub = select i1 %cmp2, i64 %len, i64 %sub
  %arrayidx = getelementptr inbounds %struct.md5_ctx* %ctx, i64 0, i32 6, i64 %conv
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx, i8* %buffer, i64 %len.sub, i32 1, i1 false)
  %1 = load i32* %buflen, align 4, !tbaa !0
  %conv7 = zext i32 %1 to i64
  %add8 = add i64 %conv7, %len.sub
  %conv9 = trunc i64 %add8 to i32
  store i32 %conv9, i32* %buflen, align 4, !tbaa !0
  %add10 = add i64 %len.sub, %conv
  %cmp11 = icmp ugt i64 %add10, 64
  br i1 %cmp11, label %if.then13, label %if.end

if.then13:                                        ; preds = %if.then
  %arraydecay = getelementptr inbounds %struct.md5_ctx* %ctx, i64 0, i32 6, i64 0
  %and = and i64 %add10, -64
  tail call void @md5_process_block(i8* %arraydecay, i64 %and, %struct.md5_ctx* %ctx) #5
  %arrayidx20 = getelementptr inbounds %struct.md5_ctx* %ctx, i64 0, i32 6, i64 %and
  %and22 = and i64 %add10, 63
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %arrayidx20, i64 %and22, i32 1, i1 false)
  %conv25 = trunc i64 %and22 to i32
  store i32 %conv25, i32* %buflen, align 4, !tbaa !0
  br label %if.end

if.end:                                           ; preds = %if.then13, %if.then
  %add.ptr = getelementptr inbounds i8* %buffer, i64 %len.sub
  %sub27 = sub i64 %len, %len.sub
  br label %if.end28

if.end28:                                         ; preds = %entry, %if.end
  %len.addr.0 = phi i64 [ %sub27, %if.end ], [ %len, %entry ]
  %buffer.addr.0 = phi i8* [ %add.ptr, %if.end ], [ %buffer, %entry ]
  %cmp29 = icmp ugt i64 %len.addr.0, 64
  br i1 %cmp29, label %if.then31, label %if.end36

if.then31:                                        ; preds = %if.end28
  %and32 = and i64 %len.addr.0, -64
  tail call void @md5_process_block(i8* %buffer.addr.0, i64 %and32, %struct.md5_ctx* %ctx) #5
  %add.ptr34 = getelementptr inbounds i8* %buffer.addr.0, i64 %and32
  %and35 = and i64 %len.addr.0, 63
  br label %if.end36

if.end36:                                         ; preds = %if.then31, %if.end28
  %len.addr.1 = phi i64 [ %and35, %if.then31 ], [ %len.addr.0, %if.end28 ]
  %buffer.addr.1 = phi i8* [ %add.ptr34, %if.then31 ], [ %buffer.addr.0, %if.end28 ]
  %cmp37 = icmp eq i64 %len.addr.1, 0
  br i1 %cmp37, label %if.end43, label %if.then39

if.then39:                                        ; preds = %if.end36
  %2 = getelementptr inbounds %struct.md5_ctx* %ctx, i64 0, i32 6, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %buffer.addr.1, i64 %len.addr.1, i32 1, i1 false)
  %conv41 = trunc i64 %len.addr.1 to i32
  store i32 %conv41, i32* %buflen, align 4, !tbaa !0
  br label %if.end43

if.end43:                                         ; preds = %if.end36, %if.then39
  ret void
}
