define i8* @md5_finish_ctx(%struct.md5_ctx* %ctx, i8* %resbuf) #0 {
  tail call void @llvm.dbg.value(metadata %struct.md5_ctx* %ctx, i64 0, metadata !46, metadata !183), !dbg !225
  tail call void @llvm.dbg.value(metadata i8* %resbuf, i64 0, metadata !47, metadata !183), !dbg !226
  %1 = getelementptr inbounds %struct.md5_ctx* %ctx, i64 0, i32 5, !dbg !227
  %2 = load i32* %1, align 4, !dbg !227, !tbaa !208
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !48, metadata !183), !dbg !228
  %3 = getelementptr inbounds %struct.md5_ctx* %ctx, i64 0, i32 4, i64 0, !dbg !229
  %4 = load i32* %3, align 4, !dbg !230, !tbaa !203
  %uadd = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %4, i32 %2), !dbg !230
  %5 = extractvalue { i32, i1 } %uadd, 0, !dbg !230
  store i32 %5, i32* %3, align 4, !dbg !230, !tbaa !203
  %6 = extractvalue { i32, i1 } %uadd, 1, !dbg !231
  %7 = getelementptr inbounds %struct.md5_ctx* %ctx, i64 0, i32 4, i64 1, !dbg !233
  br i1 %6, label %8, label %._crit_edge, !dbg !234

; <label>:8                                       ; preds = %0
  %9 = load i32* %7, align 4, !dbg !235, !tbaa !203
  %10 = add i32 %9, 1, !dbg !235
  store i32 %10, i32* %7, align 4, !dbg !235, !tbaa !203
  br label %._crit_edge, !dbg !235

._crit_edge:                                      ; preds = %0, %8
  %11 = icmp ugt i32 %2, 55, !dbg !236
  %.v = select i1 %11, i32 120, i32 56, !dbg !237
  %12 = sub i32 %.v, %2, !dbg !237
  %13 = zext i32 %12 to i64, !dbg !237
  tail call void @llvm.dbg.value(metadata i64 %13, i64 0, metadata !49, metadata !183), !dbg !238
  %14 = zext i32 %2 to i64, !dbg !239
  %15 = getelementptr inbounds %struct.md5_ctx* %ctx, i64 0, i32 6, i64 %14, !dbg !239
  %16 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %15, i1 false), !dbg !239
  %17 = tail call i8* @__memcpy_chk(i8* %15, i8* getelementptr inbounds ([64 x i8]* @fillbuf, i64 0, i64 0), i64 %13, i64 %16) #5, !dbg !239
  %18 = load i32* %3, align 4, !dbg !240, !tbaa !203
  %19 = shl i32 %18, 3, !dbg !240
  %20 = add nuw nsw i64 %13, %14, !dbg !241
  %21 = getelementptr inbounds %struct.md5_ctx* %ctx, i64 0, i32 6, i64 %20, !dbg !242
  %22 = bitcast i8* %21 to i32*, !dbg !243
  store i32 %19, i32* %22, align 4, !dbg !244, !tbaa !203
  %23 = load i32* %7, align 4, !dbg !245, !tbaa !203
  %24 = shl i32 %23, 3, !dbg !245
  %25 = lshr i32 %18, 29, !dbg !245
  %26 = or i32 %25, %24, !dbg !245
  %27 = add nuw nsw i64 %20, 4, !dbg !246
  %28 = getelementptr inbounds %struct.md5_ctx* %ctx, i64 0, i32 6, i64 %27, !dbg !247
  %29 = bitcast i8* %28 to i32*, !dbg !248
  store i32 %26, i32* %29, align 4, !dbg !249, !tbaa !203
  %30 = getelementptr inbounds %struct.md5_ctx* %ctx, i64 0, i32 6, i64 0, !dbg !250
  %31 = add nuw nsw i64 %20, 8, !dbg !251
  tail call void @md5_process_block(i8* %30, i64 %31, %struct.md5_ctx* %ctx) #6, !dbg !252
  tail call void @llvm.dbg.value(metadata %struct.md5_ctx* %ctx, i64 0, metadata !40, metadata !183), !dbg !253
  tail call void @llvm.dbg.value(metadata i8* %resbuf, i64 0, metadata !41, metadata !183), !dbg !255
  %32 = getelementptr inbounds %struct.md5_ctx* %ctx, i64 0, i32 0, !dbg !256
  %33 = load i32* %32, align 4, !dbg !256, !tbaa !187
  %34 = bitcast i8* %resbuf to i32*, !dbg !257
  store i32 %33, i32* %34, align 4, !dbg !258, !tbaa !203
  %35 = getelementptr inbounds %struct.md5_ctx* %ctx, i64 0, i32 1, !dbg !259
  %36 = load i32* %35, align 4, !dbg !259, !tbaa !194
  %37 = getelementptr inbounds i8* %resbuf, i64 4, !dbg !260
  %38 = bitcast i8* %37 to i32*, !dbg !260
  store i32 %36, i32* %38, align 4, !dbg !261, !tbaa !203
  %39 = getelementptr inbounds %struct.md5_ctx* %ctx, i64 0, i32 2, !dbg !262
  %40 = load i32* %39, align 4, !dbg !262, !tbaa !197
  %41 = getelementptr inbounds i8* %resbuf, i64 8, !dbg !263
  %42 = bitcast i8* %41 to i32*, !dbg !263
  store i32 %40, i32* %42, align 4, !dbg !264, !tbaa !203
  %43 = getelementptr inbounds %struct.md5_ctx* %ctx, i64 0, i32 3, !dbg !265
  %44 = load i32* %43, align 4, !dbg !265, !tbaa !200
  %45 = getelementptr inbounds i8* %resbuf, i64 12, !dbg !266
  %46 = bitcast i8* %45 to i32*, !dbg !266
  store i32 %44, i32* %46, align 4, !dbg !267, !tbaa !203
  ret i8* %resbuf, !dbg !268
}
