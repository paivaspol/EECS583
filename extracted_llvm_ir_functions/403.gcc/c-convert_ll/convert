define %union.tree_node* @convert(%union.tree_node* %type, %union.tree_node* %expr) #0 {
entry:
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %type}, i64 0, metadata !578), !dbg !584
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %expr}, i64 0, metadata !579), !dbg !584
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %expr}, i64 0, metadata !580), !dbg !585
  %code1 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 0, i32 2, !dbg !586
  %0 = bitcast [4 x i8]* %code1 to i32*, !dbg !586
  %bf.load = load i32* %0, align 8, !dbg !586
  %bf.clear = and i32 %bf.load, 255, !dbg !586
  tail call void @llvm.dbg.value(metadata !{i32 %bf.clear}, i64 0, metadata !581), !dbg !586
  %type3 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 1, !dbg !587
  %1 = load %union.tree_node** %type3, align 8, !dbg !587, !tbaa !588
  %cmp = icmp eq %union.tree_node* %1, %type, !dbg !587
  br i1 %cmp, label %return, label %lor.lhs.false, !dbg !587

lor.lhs.false:                                    ; preds = %entry
  %code5 = getelementptr inbounds %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 2, !dbg !587
  %2 = bitcast [4 x i8]* %code5 to i32*, !dbg !587
  %bf.load6 = load i32* %2, align 8, !dbg !587
  %bf.clear7 = and i32 %bf.load6, 255, !dbg !587
  %cmp8 = icmp eq i32 %bf.clear7, 0, !dbg !587
  %cmp10 = icmp eq i32 %bf.clear, 0, !dbg !587
  %or.cond128 = or i1 %cmp8, %cmp10, !dbg !587
  br i1 %or.cond128, label %return, label %lor.lhs.false11, !dbg !587

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %code15 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 0, i32 2, !dbg !587
  %3 = bitcast [4 x i8]* %code15 to i32*, !dbg !587
  %bf.load16 = load i32* %3, align 8, !dbg !587
  %bf.clear17 = and i32 %bf.load16, 255, !dbg !587
  %cmp18 = icmp eq i32 %bf.clear17, 0, !dbg !587
  br i1 %cmp18, label %return, label %if.end, !dbg !587

if.end:                                           ; preds = %lor.lhs.false11
  %4 = getelementptr inbounds %union.tree_node* %type, i64 0, i32 0, i32 15, !dbg !591
  %5 = load %union.tree_node** %4, align 8, !dbg !591, !tbaa !588
  %6 = getelementptr inbounds %union.tree_node* %1, i64 0, i32 0, i32 15, !dbg !591
  %7 = load %union.tree_node** %6, align 8, !dbg !591, !tbaa !588
  %cmp24 = icmp eq %union.tree_node* %5, %7, !dbg !591
  br i1 %cmp24, label %if.then25, label %if.end36, !dbg !591

if.then25:                                        ; preds = %if.end
  %call = tail call %union.tree_node* @build1(i32 115, %union.tree_node* %type, %union.tree_node* %expr) #3, !dbg !592
  %call26 = tail call %union.tree_node* @fold(%union.tree_node* %call) #3, !dbg !592
  br label %return, !dbg !592

if.end36:                                         ; preds = %if.end
  %cmp43 = icmp eq i32 %bf.clear17, 5, !dbg !593
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !593

if.then44:                                        ; preds = %if.end36
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([41 x i8]* @.str, i64 0, i64 0)) #3, !dbg !594
  %8 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !dbg !596, !tbaa !588
  br label %return, !dbg !596

if.end45:                                         ; preds = %if.end36
  switch i32 %bf.clear, label %if.end70 [
    i32 5, label %if.then47
    i32 10, label %if.then53
    i32 6, label %if.then53
    i32 11, label %if.then58
  ], !dbg !597

if.then47:                                        ; preds = %if.end45
  %call48 = tail call %union.tree_node* @build1(i32 114, %union.tree_node* %type, %union.tree_node* %expr) #3, !dbg !598
  br label %return, !dbg !598

if.then53:                                        ; preds = %if.end45, %if.end45
  %call54 = tail call %union.tree_node* @convert_to_integer(%union.tree_node* %type, %union.tree_node* %expr) #3, !dbg !599
  %call55 = tail call %union.tree_node* @fold(%union.tree_node* %call54) #3, !dbg !599
  br label %return, !dbg !599

if.then58:                                        ; preds = %if.end45
  %call59 = tail call %union.tree_node* @truthvalue_conversion(%union.tree_node* %expr) #3, !dbg !600
  tail call void @llvm.dbg.value(metadata !{%union.tree_node* %call59}, i64 0, metadata !582), !dbg !600
  %code61 = getelementptr inbounds %union.tree_node* %call59, i64 0, i32 0, i32 0, i32 2, !dbg !601
  %9 = bitcast [4 x i8]* %code61 to i32*, !dbg !601
  %bf.load62 = load i32* %9, align 8, !dbg !601
  %bf.clear63 = and i32 %bf.load62, 255, !dbg !601
  %cmp64 = icmp eq i32 %bf.clear63, 115, !dbg !601
  br i1 %cmp64, label %if.then65, label %if.else, !dbg !601

if.then65:                                        ; preds = %if.then58
  %operands = getelementptr inbounds %union.tree_node* %call59, i64 0, i32 0, i32 2, !dbg !602
  %arrayidx = bitcast i32* %operands to %union.tree_node**, !dbg !602
  %10 = load %union.tree_node** %arrayidx, align 8, !dbg !602, !tbaa !588
  %call66 = tail call %union.tree_node* @build1(i32 115, %union.tree_node* %type, %union.tree_node* %10) #3, !dbg !602
  %call67 = tail call %union.tree_node* @fold(%union.tree_node* %call66) #3, !dbg !602
  br label %return, !dbg !602

if.else:                                          ; preds = %if.then58
  %call68 = tail call %union.tree_node* @build1(i32 115, %union.tree_node* %type, %union.tree_node* %call59) #3, !dbg !603
  %call69 = tail call %union.tree_node* @fold(%union.tree_node* %call68) #3, !dbg !603
  br label %return, !dbg !603

if.end70:                                         ; preds = %if.end45
  %11 = and i32 %bf.load, 253, !dbg !604
  %12 = icmp eq i32 %11, 13, !dbg !604
  br i1 %12, label %if.then74, label %if.end77, !dbg !604

if.then74:                                        ; preds = %if.end70
  %call75 = tail call %union.tree_node* @convert_to_pointer(%union.tree_node* %type, %union.tree_node* %expr) #3, !dbg !605
  %call76 = tail call %union.tree_node* @fold(%union.tree_node* %call75) #3, !dbg !605
  br label %return, !dbg !605

if.end77:                                         ; preds = %if.end70
  switch i32 %bf.clear, label %if.end92 [
    i32 7, label %if.then79
    i32 8, label %if.then84
    i32 9, label %if.then89
  ], !dbg !606

if.then79:                                        ; preds = %if.end77
  %call80 = tail call %union.tree_node* @convert_to_real(%union.tree_node* %type, %union.tree_node* %expr) #3, !dbg !607
  %call81 = tail call %union.tree_node* @fold(%union.tree_node* %call80) #3, !dbg !607
  br label %return, !dbg !607

if.then84:                                        ; preds = %if.end77
  %call85 = tail call %union.tree_node* @convert_to_complex(%union.tree_node* %type, %union.tree_node* %expr) #3, !dbg !608
  %call86 = tail call %union.tree_node* @fold(%union.tree_node* %call85) #3, !dbg !608
  br label %return, !dbg !608

if.then89:                                        ; preds = %if.end77
  %call90 = tail call %union.tree_node* @convert_to_vector(%union.tree_node* %type, %union.tree_node* %expr) #3, !dbg !609
  %call91 = tail call %union.tree_node* @fold(%union.tree_node* %call90) #3, !dbg !609
  br label %return, !dbg !609

if.end92:                                         ; preds = %if.end77
  tail call void (i8*, ...)* @error(i8* getelementptr inbounds ([40 x i8]* @.str1, i64 0, i64 0)) #3, !dbg !610
  %13 = load %union.tree_node** getelementptr inbounds ([51 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 8, !dbg !611, !tbaa !588
  br label %return, !dbg !611

return:                                           ; preds = %entry, %lor.lhs.false, %lor.lhs.false11, %if.end92, %if.then89, %if.then84, %if.then79, %if.then74, %if.else, %if.then65, %if.then53, %if.then47, %if.then44, %if.then25
  %retval.0 = phi %union.tree_node* [ %call26, %if.then25 ], [ %8, %if.then44 ], [ %call48, %if.then47 ], [ %call55, %if.then53 ], [ %call67, %if.then65 ], [ %call69, %if.else ], [ %call76, %if.then74 ], [ %call81, %if.then79 ], [ %call86, %if.then84 ], [ %call91, %if.then89 ], [ %13, %if.end92 ], [ %expr, %lor.lhs.false11 ], [ %expr, %lor.lhs.false ], [ %expr, %entry ]
  ret %union.tree_node* %retval.0, !dbg !612
}
